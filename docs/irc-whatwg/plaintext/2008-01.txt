2008-01-01
[16:03:00.0000] <Hixie>
well cool, glad the spec is right

[16:04:00.0000] <Hixie>
and yes 'width' would be a way to do it then

[16:48:00.0000] <gsnedders>
kig: only LGPL v.3. LGPL v.2 doesn't.

[16:50:00.0000] <kig>
2 has a "if you can't redistro this code due to you wanting to destroy competitors with patent wars, you can't redistro this code"

[16:50:01.0000] <kig>
i.e. if you do distro the code, you don't want to patentwar

[16:51:00.0000] <kig>
but i don't know

[16:51:01.0000] <kig>
the canvas source files have a different license header too, wtf's up with that

[16:52:00.0000] <kig>
usual marketing bs? "webcore is LGPL super open source yay <smallprint>except for the parts that we edited</smallprint>"

[16:53:00.0000] <gsnedders>
kig: no, it doesn't say that. it says if you have restrictions that contradict the license, you can't redisribute it.

[16:53:01.0000] <G0k>
kig: i think basically the stuff they took from KTML is lgpl, but the new stuff is mostly BSD

[16:53:02.0000] <gsnedders>
kig: that doesn't affect Apple.

[16:53:03.0000] <gsnedders>
kig: their own stuff is BSD licensed, which is more lax than LGPL

[16:54:00.0000] <G0k>
*KHTML

[16:54:01.0000] <gsnedders>
kig: yeah, the canvas stuff is two clause BSD license.

[16:55:00.0000] <kig>
/me pops a new beer

[16:55:01.0000] <gsnedders>
kig: the marketing bs is, "WebCore is LGPL super open source yay <smallprint>some stuff is even more free!</smallprint>"

[16:55:02.0000] <gsnedders>
kig: but there's nothing directly about patents in the LGPL

[16:56:00.0000] <gsnedders>
(nor the BSD license — the license header in the canvas files is the entire license)

[16:58:00.0000] <kig>
lgpl2 has "Therefore, we insist that any patent license obtained for a version of the library must be consistent with the full freedom of use specified in this license."

[16:58:01.0000] <kig>
in the preamble

[16:59:00.0000] <G0k>
yeah i disagree about that part gsnedders

[16:59:01.0000] <G0k>
iirc the LGPL basically says you implicitly license your patent rights to users of the code

[17:01:00.0000] <Lachy>
Happy New Year everyone

[17:02:00.0000] <G0k>
happy 2008 to gmt-1 and earlier people

[03:59:00.0000] <gsnedders>
kig: the preamble isn't the license. it has no legal meaning.

[03:59:01.0000] <gsnedders>
Lords Of HTML, forgive me, for I said "alt tag".

[04:01:00.0000] <kig>
so use the opengl canvas instead..

[04:03:00.0000] <Philip`>
Why would that be less likely to be affected by patents?

[04:04:00.0000] <kig>
because it's opengl

[04:06:00.0000] <kig>
unless the patent is the usual heh heh patent of the form "hypertext document space in which there may be pixels and which may be programmatically changed"

[04:06:01.0000] <kig>
which it probably is

[04:06:02.0000] <Philip`>
But it's OpenGL inside a web browser, which maybe is an innovative new idea and patentable

[04:07:00.0000] <kig>
MPL doesn't have a patent release?

[04:07:01.0000] <Philip`>
(I can't see why 2D canvas does anything that isn't trivially obvious, since it's just a wrapper around boring standard 2D graphics libraries)

[04:09:00.0000] <kig>
because some legal eagle at apple said so

[04:10:00.0000] <kig>
waiting for adobe to sue all browser makers for having vector graphics that is not flash/pdf

[04:11:00.0000] <kig>
and my catmull-rom spline drawer needs more work

[04:12:00.0000] <Lachy>
open source software is generally incompatible with patents, so I doubt Mozilla has any patents for their opengl canvas implementation

[04:12:01.0000] <gsnedders>
kig: if you read the whole post, they have no issue if it moved to a standards body with a patent policy (i.e., the W3C). Once FPWD is published there, after 90 days, Apple's requirements are met

[04:12:02.0000] <Philip`>
kig: I'd guess the W3C patent whatsits make it hard for Adobe to complain about patents on things like SVG

[04:12:03.0000] <Philip`>
Lachy: People other than Mozilla still could, though

[04:13:00.0000] <Philip`>
Lachy: Also, some Mozilla software does have patents

[04:13:01.0000] <Philip`>
http://developer-cluster.mozilla.org/en/docs/SpiderMonkey_Internals:_Thread_Safety#Patent

[04:14:00.0000] <Lachy>
yeah, royalty free patents are ok

[04:17:00.0000] <Philip`>
kig: Is there any chance your SVG renderer could output things (triangles?) for OpenGL to draw? I'd quite like to have SVG embedded in X3D embedded in XHTML...

[04:18:00.0000] <kig>
if you have a tesselator/renderer/magic for quadratic/cubic bezier splines, sure

[04:18:01.0000] <kig>
cubic'll suffice, quadratics can be done with those

[04:19:00.0000] <Philip`>
That sounds not impossible

[04:19:01.0000] <kig>
http://www.mdk.org.pl/2007/10/27/curvy-blues

[04:19:02.0000] <kig>
gradients and stroking may be, ah, more interesting

[04:20:00.0000] <Philip`>
I'd guess gradients wouldn't be too hard with pixel shaders

[04:22:00.0000] <kig>
guess i should move all the rendering primitives under the same backend, then implementing the ops in that would get you going

[04:23:00.0000] <kig>
or write a canvas context that calls opengl

[04:26:00.0000] <kig>
best performance by caching the paths generated by svg, compile into vertex array

[04:26:01.0000] <kig>
s/generated by/in/

[04:28:00.0000] <kig>
now i'm compiling the SVG d="..." -paths into [['moveTo', [0,4]], ['lineTo', [400,230]], ...] and for (var i=0;i<segs.length;i++) ctx[segs[i][0]].apply(ctx, segs[i][1])

[04:30:00.0000] <kig>
but with ogl you could store the geometry in a VBO, which should make it fly

[04:31:00.0000] <kig>
http://glimr.rubyforge.org/cake/canvas.html#CatmullRom hooray!

[04:34:00.0000] <Philip`>
kig: Would it be better/worse to compile into eval('function(ctx){ctx.moveTo(0,4), ...}')

[04:35:00.0000] <kig>
haven't tried, that's really evil though :)

[04:35:01.0000] <Philip`>
Could you do constant-velocity movement along the spline?

[04:37:00.0000] <kig>
when i find the algo to compute a segment's length

[04:37:01.0000] <Philip`>
/me likes evil

[04:49:00.0000] <kig>
i had a fleeting thought of parsing truetype fonts with javascript and compiling them into quadraticCurveTo:s but then i took a look at the specs

[04:50:00.0000] <Philip`>
Could something like FreeType provide you with a list of curves?

[04:50:01.0000] <kig>
it could

[04:50:02.0000] <Philip`>
(then precompute the JS-compatible font representation on a server)

[04:54:00.0000] <Philip`>
Do you happen to know if Opera's drawImage(svgimage, ...) can draw SVG text onto a canvas?

[04:54:01.0000] <Philip`>
(I can't remember if I ever tested that or not)

[04:54:02.0000] <kig>
haven't tried, i guess it should

[04:55:00.0000] <Philip`>
I think it refused to draw foreignContent onto canvas, so HTML text won't work :-(

[04:57:00.0000] <kig>
if you look at the svgparser transformed text (e.g. coord systems.. -> skew) things with a webkit nightlie, it has madness (the text element has -webkit-transform matrix)

[05:05:00.0000] <kig>
time to read freetype docs

[05:06:00.0000] <kig>
oh oh idea

[05:06:01.0000] <kig>
compute the JS-compatible font representation on a server on the fly

[05:08:00.0000] <kig>
ok, it's not much of a change, is it :|

[05:09:00.0000] <kig>
or have a list of fonts, query with js / server-side include 

[05:11:00.0000] <kig>
font server .. 

[05:14:00.0000] <Philip`>
You'd probably want the font server to only send the characters are needed, and not the other tens of thousands of glyphs in the original font file

[05:15:00.0000] <Philip`>
(so it couldn't just be a static file server)

[05:16:00.0000] <Philip`>
((I'm assuming the JS representation of the font would be pretty inefficient, so you couldn't send everything, but maybe I'm wrong))

[05:18:00.0000] <kig>
gzipped array of numbers, shouldn't be much larger than the original font file (? only one way to find out...)

[05:19:00.0000] <Philip`>
Is the original font file just a list of curves, rather than something more programmatic?

[05:19:01.0000] <Philip`>
(ignoring all the hinting and stuff, which presumably could never work in SVG-in-canvas)

[05:20:00.0000] <kig>
truetype fonts have the curves and then some nutty bytecode system for doing the hinting afaik

[05:20:01.0000] <kig>
i don't really know

[05:21:00.0000] <kig>
i guess they have something extra to handle all the different types of type

[05:27:00.0000] <Philip`>
(Is there a better touchpad driver for Windows in Boot Camp? I don't like taking twenty seconds to right-click on a folder just because right-clicking requires two fingers on the touchpad which then makes the window scroll wildly up and down even if I keep my fingers almost stationary)

[07:38:00.0000] <kig>
just what i needed: http://www.geometrictools.com/Documentation/MovingAlongCurveSpecifiedSpeed.pdf

[08:10:00.0000] <anne-mac>
Philip`, where in ECMAScript does it state that \0 is to be stripped?

[08:10:01.0000] <anne-mac>
Philip`, presumably the Acid3 test bases that on some statement?

[08:31:00.0000] <Philip`>
anne-mac: As far as I'm aware, it shouldn't be stripped - it's just a normal character, so "foo\0bar" != "foo"

[08:32:00.0000] <Philip`>
(except Opera (and no other browser) tends to strip off everything after the first \0 presumably because it's treated like a C string)

[08:32:01.0000] <Philip`>
(and so I'm assuming Opera is wrong, because it's the odd one out and it doesn't seem sensible behaviour)

[08:33:00.0000] <anne-mac>
other browsers strip \0 characters

[08:34:00.0000] <anne-mac>
I guess one can claim that treating \0 as terminating character is wrong, but stripping it out isn't in the specs either

[08:35:00.0000] <Philip`>
I don't see it being stripped out in any browser

[08:35:01.0000] <Philip`>
(except Opera)

[08:37:00.0000] <Philip`>
(...and IE - oops)

[08:38:00.0000] <anne-mac>
Firefox and Safari at least strip it when doing alert('x\0x')

[08:38:01.0000] <Philip`>
http://software.hixie.ch/utilities/js/live-dom-viewer/?%3C!DOCTYPE%20html%3E%0A%3Cbody%20onload%3Dw(document.getElementById('fo%5C0o'))%3E%0A%3Cspan%20id%3Dfo%3E%3C%2Fspan%3E%0A%3Cdiv%20id%3Dfoo%3E%3C%2Fdiv%3E%0A

[08:40:00.0000] <Philip`>
Oh, that sounds more likely to be a problem with alert than with the general DOM API system

[08:40:01.0000] <anne-mac>
https://bugzilla.mozilla.org/show_bug.cgi?id=310037

[08:41:00.0000] <Philip`>
alert('x\0x') in Safari on Windows outputs just "x", and FF3 on Windows says "xx"

[08:41:01.0000] <anne-mac>
Safari on Mac says "xx" ...

[08:42:00.0000] <Philip`>
"Version 3.0.4 (523.15)"

[08:43:00.0000] <Philip`>
/me doesn't know if newer versions changed it

[08:43:01.0000] <anne-mac>
Version 3.0.4 (5523.10)

[08:43:02.0000] <Philip`>
That sounds futuristic

[08:43:03.0000] <anne-mac>
it's a literal copy

[08:44:00.0000] <Philip`>
/me wonders what the extra 5 means

[08:54:00.0000] <Philip`>
WebKit nightly on Windows seems to still say "x"

[08:55:00.0000] <anne-mac>
maybe stripping \0 is done at the OS level on Mac and Windows doesn't do that

[09:37:00.0000] <gsnedders>
Philip`: extra 5 is on leopard, but not in UA string

[09:39:00.0000] <gsnedders>
anne-mac: seems to be within OS string type for alerts

[10:32:00.0000] <hsivonen>
zcorpan: "If you the automatic choice of parser ..." fixed. thanks

[11:10:00.0000] <zcorpan>
http://software.hixie.ch/utilities/js/live-dom-viewer/?%3C!DOCTYPE%20html%3E%3Cstyle%3E[align%3D%22A%22]%2C%20[align%3D%22B%22]%2C%20[align%3D%22i%22]%2C%20[align%3D%22%C4%B1%22]%20{%20background%3Ayellow%20}%3C%2Fstyle%3E%3Cp%20align%3Da%3Ea%20A%3Cp%20align%3Da%3EB%20b%3Cp%20align%3D%C4%B0%3E%C4%B0%20i%3Cp%20align%3DI%3EI%20%C4%B1

[11:11:00.0000] <G0k>
oo

[11:12:00.0000] <zcorpan>
um, make that http://software.hixie.ch/utilities/js/live-dom-viewer/?%3C!DOCTYPE%20html%3E%3Cstyle%3E[align%3D%22A%22]%2C%20[align%3D%22b%22]%2C%20[align%3D%22i%22]%2C%20[align%3D%22%C4%B1%22]%20{%20background%3Ayellow%20}%3C%2Fstyle%3E%3Cp%20align%3Da%3Ea%20A%3Cp%20align%3DB%3EB%20b%3Cp%20align%3D%C4%B0%3E%C4%B0%20i%3Cp%20align%3DI%3EI%20%C4%B1

[11:15:00.0000] <zcorpan>
http://software.hixie.ch/utilities/js/live-dom-viewer/?%3C!DOCTYPE%20html%3E%3Cstyle%3E[align%3D%22A%22]%23a%2C%20[align%3D%22b%22]%23b%2C%20[align%3D%22i%22]%23c%2C%20[align%3D%22%C4%B1%22]%23d%20{%20background%3Ayellow%20}%3C%2Fstyle%3E%3Cp%20id%3Da%20align%3Da%3Ea%20A%3Cp%20id%3Db%20align%3DB%3EB%20b%3Cp%20id%3Dc%20align%3D%C4%B0%3E%C4%B0%20i%3Cp%20id%3Dd%20align%3DI%3EI%20%C4%B1 even...

[12:42:00.0000] <Philip`>
If I have some XML (specifically XSLT) which uses QNames in attribute values, and I want to extract a subtree and move it into a new document and want the QNames to continue working, is there a proper way to do that?

[12:46:00.0000] <hsivonen>
Should I remove text/xsl support from Validator.nu even in the lax mode?

[12:49:00.0000] <hsivonen>
I see application/xslt+xml in mime.types on Leopard. Is that an Apple addition or does Apache now qualify unregistered types in the default list?

[12:50:00.0000] <gsnedders>
hsivonen: it'll be Apple

[12:50:01.0000] <hsivonen>
ok

[12:51:00.0000] <gsnedders>
hsivonen: Apache policy hasn't changed (and Apple will've taken the Apache version in Leopard before WWDC in June)

[13:05:00.0000] <takkaria>
http://ewx.livejournal.com/459902.html

[13:06:00.0000] <MacDome>
takkaria: would you like to file a bug?  http://webkit.org/quality/reporting.html

[13:06:01.0000] <MacDome>
it will end up being a CFNetwork bug

[13:06:02.0000] <MacDome>
which dates back from NeXT in part :)

[13:06:03.0000] <takkaria>
heh

[13:07:00.0000] <takkaria>
OK, I will

[13:07:01.0000] <takkaria>
I bet it's done like that for a reason though

[13:07:02.0000] <MacDome>
takkaria: thank you.  don't be surprised if your bug is moved into Radar

[13:07:03.0000] <MacDome>
since CFNetwork is handled by a non-opensource team

[13:07:04.0000] <MacDome>
takkaria: but bugs are the only way to get fixes :)  not sure if that's your blog post (I'm assuming not), but blog posts certainly don't get fixed :)

[13:07:05.0000] <takkaria>
it's not mine, no

[13:08:00.0000] <MacDome>
takkaria: anyway, thanks in advance for the bug~!

[13:08:01.0000] <MacDome>
/me goes back to fixing webkit bugs

[13:09:00.0000] <takkaria>
I just saw it pasted in #netsurf (channel for a small browser written in C) and thought it would be of interest here

[13:09:01.0000] <MacDome>
takkaria: of most interst in bugzilla :) and secondly #webkit, but here works too :)

[13:28:00.0000] <gsnedders>
/me realises he is capitalising MUST and SHOULD and MAY in an email… Need less to do with RFC 2119…

[13:36:00.0000] <takkaria>
everyone should use OpenID, I'm sick of registering more than usual today

[13:36:01.0000] <Philip`>
Everyone should allow anonymous access

[13:46:00.0000] <jgraham>
Philip`: That doesn't make sense for e.g. flickr

[13:46:01.0000] <jgraham>
(at least, not for the part you currently hav to register for)

[13:48:00.0000] <jgraham>
/me notes that the word charset has 7 letters

[13:50:00.0000] <jgraham>
Philip`: Did you have a single page copy of the issues list somewhere?

[13:51:00.0000] <Philip`>
jgraham: canvex.lazyilluminati.com/misc/cgi/issues.cgi/expand though it's maybe a little slow to generate

[13:52:00.0000] <Philip`>
That charset thing has been mentioned before

[13:52:01.0000] <jgraham>
Ah, I thought it would have been but I thought I should check

[13:53:00.0000] <Philip`>
http://lists.whatwg.org/htdig.cgi/whatwg-whatwg.org/2007-June/011596.html

[13:53:01.0000] <Philip`>
http://canvex.lazyilluminati.com/misc/cgi/issues.cgi/message/%3Cea09c0d10706011740l797240ebncf31cf1403b0c5cb⊙mgc%3E - hooray, Google has indexed the issues list

[13:57:00.0000] <Philip`>
/me should perhaps add a search box

[14:23:00.0000] <rubys>
Phillip`, hsivonen: fixed.  Thanks!

[14:27:00.0000] <Philip`>
rubys: http://intertwingly.net/blog/?q=%00%80 looks unintended

[14:31:00.0000] <Philip`>
Also, it's annoying how everyone keeps fixing their code so my attempted demonstrations that XML is hard stop working :-p

[14:32:00.0000] <hsivonen>
rubys: cool

[14:37:00.0000] <MacDome>
Hixie: you reference ES4 with your \3 argument

[14:37:01.0000] <MacDome>
I found this in ES3: Informative comments: An escape sequence of the form \ followed by a nonzero decimal number n matches the result of the nth set of capturing parentheses (see 15.10.2.11). It is an error if the regular expression has fewer than n capturing parentheses. If the regular expression has n or more capturing parentheses but the nth one is undefined because it hasn't captured anything, then the backreference always succeeds.

[14:37:02.0000] <Hixie>
er i meant es3

[14:37:03.0000] <MacDome>
which doesn't quite seem to answer the question

[14:37:04.0000] <MacDome>
Hixie: could you be more specific in your ES3 reference?

[14:37:05.0000] <Hixie>
sure hold on

[14:37:06.0000] <MacDome>
Hixie: thank you

[14:40:00.0000] <rubys>
Phillip`: again, fixed.  (Sorry! :-))

[14:41:00.0000] <hsivonen>
/me just read a paper explaining the dire consequences of backreferences in "regular expressions"

[14:46:00.0000] <Philip`>
rubys: Seems to work - thanks :-)

[14:46:01.0000] <rubys>
try some UTF-8.  :-)

[14:48:00.0000] <Philip`>
http://intertwingly.net/blog/?q=xyzzy%ef%bf%bf

[14:49:00.0000] <Philip`>
...gives a parse error in Opera, not Firefox

[14:49:01.0000] <hsivonen>
Philip`: I get the YSoD in Firefox 2

[14:50:00.0000] <hsivonen>
not in Minefield, though

[14:50:01.0000] <Philip`>
Ah - FF3 automatically converts it to %EF%BF%BD

[14:51:00.0000] <Philip`>
(judging by what it shows in the magical address bar thing)

[14:52:00.0000] <hsivonen>
Validator.nu URI scrubbing makes the URI vanish

[14:52:01.0000] <Hixie>
macdome: informative note in 15.10.2.9 AtomEscape; the text specifically in that section, step 8.2, is the actual text for that

[14:53:00.0000] <MacDome>
thank you'

[14:56:00.0000] <rubys>
Phillip`: ok, I got that covered now

[14:57:00.0000] <hsivonen>
Philip`: %ef%bf%bf goes unsanitized in Instiki as well. I sent a test URI to Jacques Distler.

[14:59:00.0000] <hsivonen>
interestingly, the Jena IRI lib blames the character on XML--not an IRI spec: http://validator.nu/?doc=http%3A%2F%2Fabout.validator.nu%2F&schema=%ef%bf%bf

[15:01:00.0000] <MacDome>
Hixie: thanks, I Updated the bug

[15:06:00.0000] <Philip`>
hsivonen: http://validator.nu/?doc=http%3A%2F%2Fphilip.html5.org%2Fmisc%2Fchars.html&showsource=yes&out=xml

[15:13:00.0000] <Philip`>
/me wonders how many enterprisey XML-backended web sites would break horribly if you gave them data with these byte sequences


2008-01-02
[21:49:00.0000] <G0k>
Hixie: so what the status on server sent events?

[21:53:00.0000] <Hixie>
how do you mean?

[21:53:01.0000] <G0k>
about it being possibly removed?

[21:54:00.0000] <Hixie>
it hasn't seen much implementation from other browser vendors than opera, and it's redundant with other features

[21:54:01.0000] <Hixie>
so it might possibly be removed

[21:54:02.0000] <G0k>
which other feature makes it redundant?

[21:54:03.0000] <othermaciej>
we might implement it in WebKit

[21:54:04.0000] <othermaciej>
you could argue it is redundant with XMLHttpRequest

[21:55:00.0000] <Hixie>
it's redundant with networking and with multipart xmlhttprequest

[21:55:01.0000] <othermaciej>
(assuming it is spec'd clearly enough that you can rely on getting multiple responses for separate data chunks)

[21:55:02.0000] <othermaciej>
not even multipart

[21:55:03.0000] <othermaciej>
people use regular-type XHR for multiple server-sent messages over one connection

[21:56:00.0000] <Hixie>
true

[21:56:01.0000] <othermaciej>
but <event-source> is potentially a nice convenience

[21:56:02.0000] <G0k>
i have two concerns about it

[21:56:03.0000] <Hixie>
yeah, the question is should the platform have conveniences? or just the core platform features that can be used to implement the conveniences?

[21:57:00.0000] <G0k>
i think the DOM event metaphor is really strained

[21:57:01.0000] <Hixie>
if we do keep it, we'll certainly need to massively simplify it. it's way over-engineered right now.

[21:57:02.0000] <othermaciej>
it should have conveniences in cases where patterns are very commonly seen in library code

[21:57:03.0000] <G0k>
and it's impossible to implement backwardsly

[21:57:04.0000] <G0k>
yeah

[21:57:05.0000] <othermaciej>
thus the Selectors API

[21:57:06.0000] <othermaciej>
(and getElementsByClassName)

[21:57:07.0000] <Hixie>
yep

[21:58:00.0000] <Hixie>
maybe this is such a case

[21:58:01.0000] <Hixie>
maybe it isn't

[21:58:02.0000] <G0k>
hixie: what if we a) make it for Message events only and b) add a way to implement it based on slow download requests so that it can be emulated with XHR for older browsers?

[21:58:03.0000] <Hixie>
that's why it's marked as "may be removed". cos it may be removed. :-)

[21:59:00.0000] <G0k>
so like old browsers can add application/x-dom-event-not-a-stream to their Accept headers, and it will just end the connection after every event is sent

[21:59:01.0000] <Hixie>
G0k: (a) is easy; but i'm not sure i follow (b). If you have a solid proposal, feel free to mail it to the list for consideration.

[21:59:02.0000] <Hixie>
i wouldn't rely on Accept headers for anything

[21:59:03.0000] <Hixie>
but yeah

[22:00:00.0000] <G0k>
why not?

[22:00:01.0000] <Hixie>
that kind of stuff hasn't historically worked well

[22:01:00.0000] <G0k>
hm. i suppose we could do it the other way around, if it doesn't have the accept header for the event stream, the server would default to a non-streaming method

[22:03:00.0000] <Hixie>
i would recommend something that doesn't in any way involve accept or content-type headers working correctly

[22:04:00.0000] <Hixie>
if the web's history has taught us anything, it's that people don't understand or honour mime types.

[22:04:01.0000] <othermaciej>
G0k: you don't have to end the connection after every event to work with XHR

[22:04:02.0000] <G0k>
well even if the accept wasn't formed correctly, the worst thing that would happen is that it would degrade to slower behavior

[22:04:03.0000] <othermaciej>
G0k: I believe current-generation browsers could emulate server-sent events on top of XHR using the current HTML5 event stream format

[22:05:00.0000] <othermaciej>
(though I haven't actually tried it)

[22:05:01.0000] <G0k>
othermaciej: i've found the behavior of partial downloads kinda unpredictable though

[22:05:02.0000] <othermaciej>
the JS library folks are calling the persistent connection for messages from the server thing "COMET"

[22:06:00.0000] <othermaciej>
so probably a sensible thing to do would be to find what kind of API they offer as design input for a standards-track way of doing it

[22:06:01.0000] <Hixie>
COMET is just one implementataion, as i understand it

[22:06:02.0000] <G0k>
i think it's really critical to be able you can emulate this in older browsers 

[22:06:03.0000] <othermaciej>
I thought COMET was the concept

[22:06:04.0000] <G0k>
i think comet is a big idea

[22:06:05.0000] <G0k>
yeah

[22:06:06.0000] <othermaciej>
http://en.wikipedia.org/wiki/Comet_(programming)#Browser_compatibility

[22:06:07.0000] <othermaciej>
here's the mechanisms people have used for it

[22:06:08.0000] <othermaciej>
but I dunno what kind of API is offered

[22:06:09.0000] <Hixie>
man people have got to stop making up new acronyms for stuff that already has names

[22:07:00.0000] <G0k>
i've seen many

[22:07:01.0000] <othermaciej>
wow, lots of info about WebKit in there

[22:07:02.0000] <othermaciej>
very educational

[22:08:00.0000] <G0k>
from my basic research, i think the most reliable implementations have used a "slow download with re-download" XHR or iframe method

[22:08:01.0000] <G0k>
the multipart thing would allow for constant connections, but only gecko really does that

[22:08:02.0000] <othermaciej>
streaming over a single connection works just as well

[22:09:00.0000] <othermaciej>
I'm not sure what is better about multipart

[22:09:01.0000] <othermaciej>
other than handling message boundaries inside the engine

[22:09:02.0000] <G0k>
i think that's the critical issue

[22:09:03.0000] <othermaciej>
it's not that hard to make up a protocol for message boundaries

[22:09:04.0000] <G0k>
i don't think any UAs really make guarantees about when they flush their buffers for XHR reads

[22:10:00.0000] <othermaciej>
neither WebKit nor Gecko will buffer indefinitely

[22:10:01.0000] <othermaciej>
I don't know about IE

[22:10:02.0000] <G0k>
no, but imagine a chat application

[22:10:03.0000] <othermaciej>
I assume the streaming XHR thing doesn't work in IE or people would use it

[22:10:04.0000] <G0k>
even if it's 15 seconds, that's bad

[22:11:00.0000] <G0k>
which is why people (meebo, for instance) use multiple requests

[22:11:01.0000] <othermaciej>
is it ever actually 15 seconds?

[22:11:02.0000] <othermaciej>
I don't actually know

[22:11:03.0000] <G0k>
i'm haven't benchmarked it

[22:12:00.0000] <G0k>
this wikipedia page seems to suggest that it never fires on webkit until at least 256 bytes are recieved

[22:12:01.0000] <othermaciej>
anyway it would be good for WebKit to support multipart/x-mixed-replace in XHR (I assume that is the kind people mean), but I am not entirely sure what correct behavior for that is supposed to be

[22:12:02.0000] <othermaciej>
I guess we'd have to reverse-engineer Gecko

[22:12:03.0000] <othermaciej>
G0k: I don't think that is true

[22:12:04.0000] <othermaciej>
older versions used to require some amount of data to be sent to prime the buffer initially

[22:13:00.0000] <othermaciej>
I think after that (and now right away) it will fire readystate 3 without a floor on bytes received

[22:13:01.0000] <othermaciej>
(could be wrong, but that's my recollection)

[22:13:02.0000] <G0k>
ok, but it's highly possible that opera and IE don't even do that

[22:14:00.0000] <G0k>
and i don't think the XHR specs even specify this

[22:14:01.0000] <G0k>
also imagine a proxy server

[22:14:02.0000] <G0k>
actually, don't, that makes no sense

[22:14:03.0000] <Hixie>
58 tests done, 42 tests to go.

[22:14:04.0000] <Hixie>
more than half-way there!

[22:14:05.0000] <G0k>
woot

[22:15:00.0000] <othermaciej>
XHR specs don't specify this, but they could

[22:15:01.0000] <othermaciej>
used to be they didn't specify anything

[22:15:02.0000] <G0k>
ok but that won't make IE support it

[22:16:00.0000] <G0k>
i really really feel being able to emulate this kind of thing on old browsers is a splendid idea

[22:16:01.0000] <othermaciej>
x-mixed-replace is a pretty crappy wire protocol as far as message boundaries go

[22:16:02.0000] <G0k>
yeah

[22:17:00.0000] <G0k>
plus it makes server code potentially really complicated

[22:17:01.0000] <othermaciej>
really? seems no worse than any other server-sent message protocol

[22:18:00.0000] <othermaciej>
as far as impact on most of your server code

[22:18:01.0000] <othermaciej>
(presumably on some level the server has an API that says "post this message now" or something)

[22:19:00.0000] <G0k>
well yeah once you abstract that away

[22:19:01.0000] <G0k>
but now you have to set up boundaires

[22:20:00.0000] <G0k>
and escape your data appropriately

[22:22:00.0000] <othermaciej>
is there escaping?

[22:22:01.0000] <othermaciej>
I think you just need to make sure to pick a boundary string that won't appear in the message

[22:22:02.0000] <othermaciej>
which is what sucks

[22:22:03.0000] <othermaciej>
if there was escaping, you could let some abstraction layer pick the boundary and do escaping

[22:22:04.0000] <G0k>
yeah so how do you know that before you start sending

[22:23:00.0000] <G0k>
i mean in this particular case, i think the fact that boundaries start with --- and the dom event stuff doesn't makes it easier

[22:23:01.0000] <othermaciej>
I guess you can do "escaping" by making sure no line ever starts with --

[22:26:00.0000] <G0k>
still, this doesn't help us for older UAs that don't support mixed

[22:27:00.0000] <othermaciej>
no new feature helps for older UAs

[22:28:00.0000] <G0k>
but i'm saying if we had a mode which used mulitple connections

[22:28:01.0000] <G0k>
that could emulate server sent events even on UAs which only support single part XHR

[22:29:00.0000] <othermaciej>
I think you'd be better off using the Htmlfile control in IE and streaming XHR in other browsers

[22:29:01.0000] <othermaciej>
if what you want to do is put a nicer API on top of existing UA functionality

[22:30:00.0000] <G0k>
what is the Htmlfile control?

[23:37:00.0000] <Hixie>
i want to test HTTP somehow in acid3

[23:37:01.0000] <Hixie>
but i have no idea how

[23:37:02.0000] <Hixie>
i don't want to do anything fancy on the server side...

[23:59:00.0000] <jruderman>
Hixie: what aspect of HTTP?

[00:00:00.0000] <Hixie>
dunno

[00:00:01.0000] <jruderman>
Hixie: acid 2 tested browsers' recognition of 404 errors quite nicely, i hear ;)

[00:00:02.0000] <Hixie>
ooh, yeah, could test <object> and 404 stuff

[00:01:00.0000] <jruderman>
how about <object type> vs server-provided content-type?

[00:01:01.0000] <Hixie>
that one's controversial

[00:02:00.0000] <jruderman>
oh, you're trying to stay *away* from controversy? :P

[00:02:01.0000] <Hixie>
in acid tests? yeah, ideally

[00:03:00.0000] <Hixie>
acid tests are controversial enough as it is without them risking their credibility

[00:03:01.0000] <jruderman>
hehe, ok

[00:03:02.0000] <Dashiva>
They're supposed to be borderline useful, not purely spec nitpicking :)

[00:03:03.0000] <jruderman>
according to https://bugzilla.mozilla.org/show_bug.cgi?id=395110#c17 safari get the <object type> thing "wrong"

[00:03:04.0000] <Hixie>
yeah but html5 might make that "right"

[00:03:05.0000] <jruderman>
so i'm not surprised to hear that it's controversial

[00:03:06.0000] <Hixie>
it's unclear what's going to happen with that

[00:03:07.0000] <jruderman>
interesting

[00:04:00.0000] <Hixie>
html5 already says to ignore content-type for <script>

[00:04:01.0000] <Hixie>
and <img> has some thing where all image/* types are treated equivalently iirc

[00:05:00.0000] <Hixie>
content-type, in retrospect, is such a bad idea

[00:05:01.0000] <jruderman>
why is it a bad idea?

[00:05:02.0000] <Hixie>
so few people get it right

[00:05:03.0000] <Hixie>
it gets in the way of people more often than it helps

[00:06:00.0000] <Hixie>
doesn't really help the human race

[00:06:01.0000] <Hixie>
we shoudla done everything with unambiguous magic byte sequences

[00:33:00.0000] <othermaciej>
Hixie: it's hard to test http in any serious way without using XMLHttpRequest

[01:09:00.0000] <Hixie>
othermaciej: yeah

[01:14:00.0000] <Hixie>
oh jesus

[01:14:01.0000] <Hixie>
i try to catch a webkit bug and a gecko bug with one carefully crafted test, and IE7 responds by crashing.

[01:15:00.0000] <Hixie>
*sigh*

[01:16:00.0000] <Lachy>
are you trying to avoid including crash bugs in the acid test?

[01:16:01.0000] <Hixie>
yes

[01:16:02.0000] <Hixie>
pissing off the media is tactically bad

[01:16:03.0000] <Hixie>
and crashing a reporter's browser would piss him off

[01:16:04.0000] <Hixie>
:-)

[01:19:00.0000] <othermaciej>
Hixie: obviously you need to make pH 0 acid test of all crash bugs

[01:19:01.0000] <Hixie>
man that would be a bitch to write :-)

[01:19:02.0000] <Hixie>
so apparently it's only my copy that crashes

[01:20:00.0000] <Hixie>
i have two people who've tested IE7 on XP and it didn't crash

[01:21:00.0000] <Lachy>
oh nice, MS are disabling support for older MS Office formats. http://it.slashdot.org/article.pl?sid=08/01/01/137257 - Hooray for proprietary formats! :-) (too bad if you have some in your archive you need to read one day)

[01:22:00.0000] <othermaciej>
good thing we're not reading that through an article.xaml or article.swf url then

[01:22:01.0000] <Hixie>
the last test i added to acid3 shows a really weird bug in firefox

[01:22:02.0000] <Hixie>
check out the dot in the "i" of "Acid3"

[01:34:00.0000] <Lachy>
Hixie, is the support-a.png image supposed to be a cat?

[01:36:00.0000] <Lachy>
/me wonders if Hixie would ever use a picture of any other type of animal?

[01:37:00.0000] <Lachy>
gotta go, back soon

[01:41:00.0000] <Hixie>
heh

[01:41:01.0000] <Hixie>
support-a.png returns a 404 of a cat, yes

[01:53:00.0000] <Hixie>
right

[01:54:00.0000] <Hixie>
i worked around the IE crash

[01:54:01.0000] <Hixie>
it still shows the IE error messages

[01:54:02.0000] <Hixie>
oh wait i might be able to work around that too

[01:55:00.0000] <Hixie>
yes!

[01:55:01.0000] <Hixie>
haha!

[01:55:02.0000] <Hixie>
take that, silly crashing browser that i wasn't even trying to show a bug in!

[01:55:03.0000] <Hixie>
i managed to make it not crash or show errors without even using anything outside of DOM1 Core!

[01:55:04.0000] <Hixie>
and without doing anything unjustifiable!

[01:56:00.0000] <Hixie>
and it still shows the wacky rendering in firefox!

[01:56:01.0000] <Hixie>
41 tests to go

[02:15:00.0000] <hsivonen>
Philip`: hmm. looks like the Xalan serializer is broken. :-(

[02:16:00.0000] <hsivonen>
Philip`: also, the Sun UTF-8 decoder is bogus for not catching CESU-8

[02:22:00.0000] <hsivonen>
I wonder if there's somekind of project management theory on when it's worthwhile to write your own XML serializer instead of work around the bugs in someone else's

[02:40:00.0000] <hsivonen>
aargh. People should write UTF-8-only serializers. The UTF-8 output of the Xalan serializer is broken because it tries to be too smart about output encodings

[03:10:00.0000] <hsivonen>
http://java.sys-con.com/read/478303_2.htm

[03:11:00.0000] <hsivonen>
"HTML5 will eclipse XHTML" according to Microsoft Senior Evangelist

[03:11:01.0000] <Hixie>
didn't that happen already?

[03:23:00.0000] <hsivonen>
Philip`: https://issues.apache.org/jira/browse/XALANJ-2419

[03:39:00.0000] <Philip`>
hsivonen: Fun

[03:53:00.0000] <hsivonen>
Philip`: I could turn my HTML5 serializer into a doctypeless namespaceless XML serializer with relative ease

[03:53:01.0000] <hsivonen>
Philip`: the problem is that to really replace the Xalan serializer, I'd need to write the code that reconstructs the namespace declarations

[03:54:00.0000] <hsivonen>
and it seems to me that the time it would take could be used for feature work

[03:58:00.0000] <Hixie>
40 tests to go

[04:04:00.0000] <hsivonen>
so, should a filter that takes out extension namespaces before validating zap the tags or zap the subtree?

[04:05:00.0000] <hsivonen>
I'm inclined to say subtree, but I could argue why you'd want to zap just tags

[04:06:00.0000] <Philip`>
http://validator.w3.org/check?uri=http%3A%2F%2Fphilip.html5.org%2Fmisc%2Fchars.html&charset=iso-8859-1&output=soap12

[04:07:00.0000] <Philip`>
Why is well-formedness so totally impossible to get right?

[04:08:00.0000] <hsivonen>
Philip`: fun. Are you planning on reporting the bug?

[04:09:00.0000] <Philip`>
hsivonen: I don't really care enough about getting it fixed to bother reporting it

[04:10:00.0000] <Philip`>
/me thinks someone should make an Apache filter which detects XML responses and tests for well-formedness and if there's a problem it emails the server owner

[04:20:00.0000] <hsivonen>
Philip`: reported

[04:27:00.0000] <zcorpan>
http://validator.nu/?doc=http%3A%2F%2Fphilip.html5.org%2Fmisc%2Fchars.html&out=xhtml

[04:31:00.0000] <hsivonen>
zcorpan: yeah, known bug. https://issues.apache.org/jira/browse/XALANJ-2419

[04:43:00.0000] <Philip`>
hsivonen: Thanks

[04:43:01.0000] <Philip`>
(I should probably stop being so lazy...)

[05:05:00.0000] <krijnh>
Ping

[07:08:00.0000] <Philip`>
Evil plan:

[07:08:01.0000] <Philip`>
* Find a project which uses git

[07:08:02.0000] <Philip`>
* Commit something, and put U+FFFE in the commit message

[07:09:00.0000] <Philip`>
and then nobody can use gitweb any more, unless they use IE

[07:09:01.0000] <Philip`>
(git says "Warning: commit message does not conform to UTF-8." but it commits anyway)

[07:09:02.0000] <hdh>
probably put some dummy repo on repo.or.cz

[07:24:00.0000] <takkaria>
Philip`: why's that a good idea?

[07:26:00.0000] <Philip`>
takkaria: Evil plans aren't meant to be good ideas :-p

[07:39:00.0000] <kig>
MacDomeOut: re: tablet, the cheapest intuos 3 is $200, but maybe easier to find someone in vicinity with one..

[07:44:00.0000] <zcorpan>
hsivonen: your xhtml 1.0 schema seems to allow <noscript> in inline contexts

[07:48:00.0000] <hsivonen>
zcorpan: did XHTML 1.0 ban that?

[07:48:01.0000] <zcorpan>
hsivonen: html4 and xhtml1 allows noscript in block contexts only

[07:48:02.0000] <hsivonen>
zcorpan: ok. thanks

[07:50:00.0000] <zcorpan>
<!ENTITY % Block "(%block; | form | %misc;)*"> ... <!ENTITY % misc "noscript | %misc.inline;">

[07:50:01.0000] <hsivonen>
<script> works as inline, doesn't it?

[07:50:02.0000] <zcorpan>
yes

[07:51:00.0000] <zcorpan>
<!ENTITY % Inline "(#PCDATA | %inline; | %misc.inline;)*"> ... <!ENTITY % misc.inline "ins | del | script">

[07:55:00.0000] <hsivonen>
zcorpan: fix deployed. thanks

[08:01:00.0000] <zcorpan>
hsivonen: <h1><noscript><p>... still validates for me

[08:02:00.0000] <hsivonen>
hmm

[08:41:00.0000] <Philip`>
/me wonders how best to implement X3D's <Text/>

[08:42:00.0000] <Philip`>
I guess I have to do it as a textured quad, probably using mozDrawText in Firefox and using drawImage(svg) in Opera, or something like that...

[08:44:00.0000] <kig>
unless you want to write a freetype font server and  .... 

[08:48:00.0000] <Philip`>
I'd like to avoid relying on a server, though I think I'll end up requiring one anyway so I can do cross-domain XHR :-(

[09:15:00.0000] <Philip`>
What is window.Text? (I can't find any documentation of it...)

[09:15:01.0000] <Philip`>
Oh, looks like http://www.w3.org/TR/DOM-Level-2-Core/core.html#ID-1312295772

[09:16:00.0000] <Philip`>
Doesn't sound very useful, so I'll overwrite it with my own global Text variable

[10:33:00.0000] <kig>
hohoo, bounding box scaling working. next is snap to original scale and shift-constrained rotate and scale

[10:33:01.0000] <Philip`>
Well, this would work better if texImage2DHTML didn't always crash when I use it

[10:34:00.0000] <kig>
ssss

[10:35:00.0000] <kig>
what is it supposed to do?

[10:35:01.0000] <Philip`>
It's supposed to not crash

[10:35:02.0000] <Philip`>
and, preferably, it should do some texture binding stuff

[10:35:03.0000] <Philip`>
(when given an image or canvas to convert into a GL texture)

[10:36:00.0000] <kig>
ah

[10:39:00.0000] <kig>
do you have the texture bound?

[10:40:00.0000] <kig>
since all texImage2DHTML seems to do is get the image surf data and call glTexImage2D with it

[10:41:00.0000] <Philip`>
I was stupid and forgot to call bindTexture; but now I am calling it and it still crashes :-(

[10:43:00.0000] <kig>
:I

[10:44:00.0000] <Philip`>
/me tries building a debug version, and hopes he has enough disk space

[10:45:00.0000] <kig>
paste a snippet?

[10:46:00.0000] <kig>
(not that crashing the browser as a failure mode is very nice)

[10:55:00.0000] <Philip`>
http://software.hixie.ch/utilities/js/live-dom-viewer/?%3C!doctype%20html%3E%0D%0A%3Cimg%20src%3Dhttp%3A%2F%2Fphilip.html5.org%2Ftests%2Fcanvas%2Fsuite%2Fimages%2Fred-16x16.png%20id%3Di%3E%3Ccanvas%20id%3Dc%3E%3C%2Fcanvas%3E%0D%0A%3Cscript%3E%0D%0Awindow.onload%20%3D%20function%20()%20%7B%0D%0A%20%20var%20gl%20%3D%20document.getElementById('c').getContext('moz-glweb20')%3B%0D%0A%20%20var%20ids%20%3D%20gl.genTextures(1)%3B%0D%0A%20%20gl.bindTexture(gl.T

[10:55:01.0000] <Philip`>
Oops, bit long

[10:55:02.0000] <Philip`>
http://tinyurl.com/28eceb

[11:04:00.0000] <kig>
that sure looks like it should work

[11:06:00.0000] <Philip`>
I was going to look at normal texturing after adding some primitive text, but I guess I'll have to give up on both of those ideas for now :-(

[11:21:00.0000] <Philip`>
Oh, great, now I get errors when compiling Mozilla on Vista because Vista guesses that nsinstall.exe is a program installer because it has "install" in its name, and so it requires admin privileges which it can't get when running on the command line and so it dies

[11:36:00.0000] <jruderman>
Hixie: https://bugzilla.mozilla.org/show_bug.cgi?id=410460 ;)

[11:40:00.0000] <gavin>
I filed that yesterday when Hixie was asking about it in #devs

[11:40:01.0000] <gavin>
he knows about it :)

[13:07:00.0000] <gsnedders>
hmmm. "ANSI" seems to be an alias for US-ASCII in the real world.

[13:26:00.0000] <gsnedders>
No, for windows-1252

[13:27:00.0000] <gsnedders>
That can't be right :\

[13:33:00.0000] <Hixie>
hsivonen: http://groups.google.com/group/google-caja-discuss/browse_thread/thread/712c772b93777a64/88dcb5f7799358af?hl=en&q=whatwg#88dcb5f7799358af (search for validator.nu) in case you didn't know

[13:51:00.0000] <hsivonen>
Hixie: interesting. I wasn't aware. thanks. (however, it isn't called libhtmlparser and it's under the MIT license, not MPL)

[13:53:00.0000] <Philip`>
(There's no version 1.5.1 either)

[14:34:00.0000] <Philip`>
Hmm, texImage2DHTML doesn't crash now that I've compiled it myself

[14:34:01.0000] <Philip`>
but gl.uniformi doesn't work because it has unimplemented code

[14:36:00.0000] <Philip`>
and the only way to use textures is by using uniformi

[15:04:00.0000] <webben>
Philip`: What are you actually making btw? A renderer that will take X3D input and produce a canvas rendering?

[15:04:01.0000] <webben>
(just curious)

[15:05:00.0000] <Philip`>
webben: Yes (using Firefox's/Opera's 3d canvas contexts)

[15:05:01.0000] <Philip`>
Well, it's not just producing a rendering - it does some animation and user-controlled camera movement and stuff

[15:05:02.0000] <webben>
I see.

[15:09:00.0000] <Philip`>
My idea is that X3D can't be implemented natively by browsers (because there would be approximately no interoperability, given how it's defined), so they have to implement something like OpenGL, but OpenGL is really painful to use for anything non-trivial, so a higher-level 3D engine is needed, and X3D is a vaguely sensible way of doing that

[15:19:00.0000] <othermaciej>
http://torgo-x.livejournal.com/1013176.html

[15:21:00.0000] <Philip`>
/me found some Netscape 3.0 floppy disks at home today

[15:21:01.0000] <Philip`>
but I think that's the oldest version I've used, except when intentionally searching for ancient versions

[15:27:00.0000] <othermaciej>
what I find interesting about that post is that netscape 0.9b pretty much can't browse the current web

[15:27:01.0000] <othermaciej>
and that the showstopper problems are mostly at the HTTP level

[15:28:00.0000] <Hixie>
the bus i'm on just totally ran a red light

[15:28:01.0000] <Hixie>
good times

[15:30:00.0000] <webben>
the current web works pretty bad in mosaic IIRC too.

[15:30:01.0000] <webben>
or at least whatever mosaic is available for Windows systems from evolt

[15:30:02.0000] <webben>
can't remember if the problems were HTTP-related though

[15:31:00.0000] <webben>
/me wonders if worldwideweb works at all

[15:32:00.0000] <othermaciej>
I dunno

[15:32:01.0000] <othermaciej>
the current web works pretty bad in Amaya

[15:32:02.0000] <othermaciej>
so I guess a browser doesn't have to be old to fail

[15:32:03.0000] <othermaciej>
but I don't think Amaya fails quite as badly as Netscape 0.9

[15:33:00.0000] <Hixie>
amaya is a browser to the same extent that a hybrid SUV is a way to save on carbon emissions

[15:34:00.0000] <webben>
Well, Amaya can't render text properly or handle HTTPS, but I think it can handle ordinary HTTP in a vaguely similar way to other browsers.

[15:35:00.0000] <webben>
Though I probably shouldn't whinge about it's text rendering without trying the latest version.

[15:36:00.0000] <Philip`>
Hooray, now I've got text, though it's upside-down and repeated five times and squashed so there's lots of empty space

[15:37:00.0000] <webben>
Now that sounds like Amaya's text rendering ;)

[15:37:01.0000] <webben>
(well except maybe the upside-down bit)


2008-01-03
[17:18:00.0000] <Hixie>
i could do a form post to an iframe and have the server respond with a 204 response and a Link: header, and check that the iframe has its stylesheet updated

[17:18:01.0000] <Hixie>
but maybe that's a bit contrived

[17:45:00.0000] <Hixie>
gotta say, it's hard to find bugs in teh processing of URIs

[17:47:00.0000] <jruderman>
how about bugs related to escaping and charsets?

[17:47:01.0000] <jruderman>
proper handling of backslash \

[17:47:02.0000] <jruderman>
proper handling of % within javascript: or data: URIs

[17:48:00.0000] <Hixie>
got any specific examples of bugs?

[17:48:01.0000] <Hixie>
everything i've tried has worked in all browsers

[17:48:02.0000] <jruderman>
properly rejecting <img src="https:..."> when the cert is invalid

[17:48:03.0000] <Hixie>
(except for backslashes in data:, which is in the test)

[17:48:04.0000] <Hixie>
who says you should reject that?

[17:48:05.0000] <Hixie>
the problem is all the bugs i've found are things that aren't actually required by any specs

[17:50:00.0000] <jruderman>
common sense says you should reject that?

[17:50:01.0000] <jruderman>
how about <script src="https:...">

[17:50:02.0000] <Hixie>
sadly common sense isn't normative

[17:50:03.0000] <Hixie>
and i have to be able to justify everything in acid3 with normative text

[17:51:00.0000] <jruderman>
so add something to HTML5 saying that embedded stuff (especially <script> and <style>) pointing at https has to be ignored if the server has a bogus cert. if browsers get that wrong (i don't know whether they do) it's pretty bad for security.

[17:52:00.0000] <Hixie>
can you send me mail reminding me to add that?

[17:52:01.0000] <Hixie>
that'd be useful to add

[17:52:02.0000] <othermaciej>
Hixie: relative URL resolution when the relative part has too many ./ or ../ used to not match the URI spec (not sure if that is still true)

[17:52:03.0000] <jruderman>
ok

[17:52:04.0000] <othermaciej>
but that likely needs to be fixed in the spec

[17:52:05.0000] <Hixie>
not useful for acid3, though, i'm trying to target 2004-or-earlier only

[17:52:06.0000] <othermaciej>
(regarding URI processing bugs)

[17:52:07.0000] <jruderman>
2004-or-earlier specs?

[17:53:00.0000] <Hixie>
jruderman: yeah. anything that was in CR or REC in 2004 or earlier.

[17:53:01.0000] <jruderman>
so that you can have "acid 5" test html5? ;)

[17:53:02.0000] <Hixie>
othermaciej: i just tried some stuff like that and couldn't find any bugs

[17:53:03.0000] <Hixie>
jruderman: good idea :-D

[17:54:00.0000] <othermaciej>
Hixie: I think browsers may also collapse together ../ and ./ in the non-relative part with ones in the relative part

[17:54:01.0000] <othermaciej>
or something like that

[17:54:02.0000] <othermaciej>
(I'm not sure that's even possible)

[17:54:03.0000] <Hixie>
can you give me an example? i'm not really following. how can a non-relative part have .. parts?

[17:54:04.0000] <othermaciej>
or maybe there is ./ and ../ processing in absolute URIs

[17:55:00.0000] <othermaciej>
I don't think a non-relative part can, I'm not remembering this very well

[17:55:01.0000] <Hixie>
yeah that's my problem too

[17:55:02.0000] <othermaciej>
since I last dealt with this stuff in like 2002 or so

[17:55:03.0000] <Hixie>
none of my tests are finding anything useful to test

[17:56:00.0000] <othermaciej>
<a href="http://bsalert.com/./news/./2196/./Programmer_Testifies_He_Was_Paid_To_Hack_Florida_Election.html">check</a>

[17:57:00.0000] <othermaciej>
I think browsers collapse away the ./ components there

[17:57:01.0000] <Hixie>
yeah, that's per spec

[17:57:02.0000] <Hixie>
rfc 3986 section 5.2.4

[17:57:03.0000] <jruderman>
hixie: test proper handling of <a href="//www.google.com/"> perhaps?

[17:59:00.0000] <jruderman>
hixie: https://bugzilla.mozilla.org/show_bug.cgi?id=284474 and https://bugzilla.mozilla.org/show_bug.cgi?id=261929 (which parts of urls get sent as utf-8 and which parts get sent in the page's charset) ... dunno if any of that is covered by specs

[18:01:00.0000] <Hixie>
everyone seems to handle "//..." correctly

[18:01:01.0000] <Hixie>
sadly the character encoding stuff is wrong in the specs

[18:01:02.0000] <Hixie>
so i can't test it, lest i prevent the specs from being fixed

[18:01:03.0000] <Hixie>
man, testing URIs is a pain

[18:04:00.0000] <jruderman>
because browsers aren't buggy enough?

[18:05:00.0000] <Hixie>
no, because the specs are so vague

[18:05:01.0000] <jruderman>
i see #fragments in my server's referrer logs sometimes, but i don't know whether that's due to browsers being buggy or something else

[18:05:02.0000] <Hixie>
if they were written like HTML5, with very specific things that must happen, it would be easy to see if it was working

[18:05:03.0000] <Hixie>
most bad HTTP seems to be down to spammers' spiders, as far as i can tell

[18:06:00.0000] <Hixie>
right. no more URI and HTTP tests. maybe I'll focus on DOM Traversal and DOM Range instead

[18:06:01.0000] <Hixie>
those don't have much testing

[18:06:02.0000] <Philip`>
/me has never seen href="//..." except on slashdot.org

[18:07:00.0000] <jruderman>
test that IDN works?

[18:07:01.0000] <Hixie>
Philip`: it's suprisingly common

[18:07:02.0000] <othermaciej>
I think I need a new laptop

[18:08:00.0000] <jruderman>
test that port 25 is blocked? ;)

[18:08:01.0000] <Philip`>
othermaciej: You could get a nice HP one

[18:09:00.0000] <othermaciej>
Philip`: sure, I'll keep it next to my Zune and my Windows Mobile phone

[18:10:00.0000] <jruderman>
huh, RFC 3986 explicitly disallows URIs that use IP address formats other than dotted-decimal

[18:11:00.0000] <Hixie>
jruderman: but does it say what the error handling for the others should be?

[18:11:01.0000] <Philip`>
You could test IPv6 URIs

[18:11:02.0000] <Hixie>
Philip`: not sure how :-)

[18:11:03.0000] <jruderman>
nope, it says "many implementations allow..."

[18:11:04.0000] <othermaciej>
jruderman: does that include ruling out IPv6 addresses?

[18:11:05.0000] <Hixie>
jruderman: typical

[18:12:00.0000] <jruderman>
so i guess it doesn't exactly disallow them, just says they aren't valid URIs

[18:12:01.0000] <Hixie>
it disallows them, just like <em><i></em></i> is disallowed

[18:12:02.0000] <Hixie>
but that doesn't mean much for UAs

[18:14:00.0000] <Philip`>
Hixie: I'm not quite sure how you could do it so it's only testing the browser and not the whole network path to some external server :-(

[18:14:01.0000] <Hixie>
yeah

[18:15:00.0000] <othermaciej>
you could test that IPv6 IP addresses in a URI are not rejected

[18:15:01.0000] <othermaciej>
by using the <a> element's attributes to see that the host part is right

[18:16:00.0000] <othermaciej>
that would not test the network path at all

[18:16:01.0000] <othermaciej>
HTMLAnchorElement.host etc

[18:16:02.0000] <Hixie>
sadly those attributes aren't in DOM2 HTML :-(

[18:16:03.0000] <othermaciej>
they're not?

[18:16:04.0000] <Hixie>
(html5 has them)

[18:16:05.0000] <Hixie>
not as far as i can tell

[18:16:06.0000] <Hixie>
i may have missed them

[18:16:07.0000] <othermaciej>
good gravy

[18:16:08.0000] <Hixie>
but i couldn'd find them

[18:17:00.0000] <othermaciej>
yeah, only href

[18:17:01.0000] <othermaciej>
though you can use that to test relative URI resolution without having to load the target

[18:17:02.0000] <Philip`>
Is there any other way to detect invalid URI vs unreachable URI?

[18:17:03.0000] <Hixie>
othermaciej: true

[18:27:00.0000] <Philip`>
Does anything say that e.g. <iframe src="http://[::1]"> .src should give back an absolute URI like "http://[::1]/"?

[18:29:00.0000] <othermaciej>
it's so weird that HTMLFrameElement and HTMLIFrameElement don't inherit from anything in common besides HTMLElement

[18:30:00.0000] <othermaciej>
but anyway, it appears that the src property is not specified to resolve the value of the src attribute

[18:30:01.0000] <othermaciej>
http://www.w3.org/TR/DOM-Level-2-HTML/html.html#ID-50708718

[18:30:02.0000] <othermaciej>
though it's hard to tell what the actual normative requirement is if any

[18:35:00.0000] <Hixie>
html5 requires any dom attribute reflecting a content attribute that contains a url to be absolute/resolved

[18:35:01.0000] <Hixie>
bbiab

[18:36:00.0000] <Philip`>
Hixie: If you'd just worked a bit faster and got HTML5 published as CR in 2004, you'd have saved yourself a lot of problems writing these tests

[18:37:00.0000] <Hixie>
if i'd gotten html5 done in 2004, either it would be as crap as all these specs are, or i'd be dead.

[18:37:01.0000] <Hixie>
:-)

[18:37:02.0000] <Hixie>
so i disagree :-P

[18:38:00.0000] <Hixie>
/me goes to dinner

[19:03:00.0000] <MacDome>
kig: there are plenty o' tablets aroudn me

[20:08:00.0000] <kig>
MacDome: good to hear :)

[05:22:00.0000] <hsivonen>
Philip`: I deployed a very quick and very dirty temporary fix for the astral character issue in the XML serializer

[05:24:00.0000] <hsivonen>
I'm not yet sure whether I should 1) wait for the Xalan folks to fix it upstream, 2) develop a proper fix that not only fixes my use case but their myriad of other configurations that I don't need or 3) write my own serializer

[05:33:00.0000] <hsivonen>
note to whoever flagged my statement about hacking Xalan serializer in the IRC logs: a reasonable non-prettyprinting SAX ContentHandler to UTF-8 byte stream serializer should take one or two smallish source files. The Xalan serializer does a lot more and has 93 source files, so quickly hacking just what I need could easily break something else that someone else uses the code for

[05:38:00.0000] <Hemebond>
I have no idea what you just said.

[05:38:01.0000] <Hemebond>
Isn't that awful?

[05:40:00.0000] <hsivonen>
Hemebond: did I say something that didn't make sense?

[05:40:01.0000] <Philip`>
/me wonders if anyone has a C preprocessor implementation in JavaScript

[05:40:02.0000] <Hemebond>
hsivonen: No. I just have no idea what it means.

[05:49:00.0000] <kig>
how are the svg filters implemented? software renderer is draw to temp surface, apply filter, composite? hardware, shader chain

[05:52:00.0000] <Philip`>
kig: I believe Firefox's SVG uses Cairo, which does different things on different platforms (e.g. sending commands to X on Linux so it can use whatever hardware acceleration the X driver supports)

[05:53:00.0000] <Philip`>
and different things for different compositing/filtering/etc modes, depending on what features the backend provides and what it has to emulate itself

[05:55:00.0000] <krijnh>
/me doesn't get http://arjaneising.nl/me/2007-as-an-html-element :s

[06:08:00.0000] <kig>
Philip`: okay, but if you want to do them using the 2d canvas?

[06:09:00.0000] <kig>
it's going to be hellishly slow, but better than not having them.. 

[06:13:00.0000] <Philip`>
I guess that depends on what the filter is - some look fairly straightforward, but others could only be done with getPixelData

[06:20:00.0000] <zcorpan>
Hixie: something for acid3 (assuming the spec covers it): # in data: url

[06:26:00.0000] <Lachy>
# in URLs is, I believe, covered by the URI RFC. It's always supposed to mean a fragment identifier in all URIs

[06:27:00.0000] <Lachy>
is anyone able to access http://lachy.id.au/ ? It's timing out for me.

[06:28:00.0000] <Philip`>
/me wonders if he's forgetting an easy way to load stuff from one XML file into scripts in another XHTML file, without requiring something irritating like XHR

[06:29:00.0000] <Philip`>
Oh, maybe <iframe> does it

[06:29:01.0000] <zcorpan>
Lachy: well, that doesn't really make sense for e.g. mailto: or javascript:

[06:29:02.0000] <Philip`>
except that's a bit ugly :-(

[06:31:00.0000] <zcorpan>
/me can't access http://lachy.id.au/

[06:31:01.0000] <zcorpan>
Lachy: but in any case, firefox and opera treat # in data: differently

[06:31:02.0000] <Philip`>
Lachy: I can ping it and ssh into it and connect to port 80, but then it times out before responding

[06:33:00.0000] <Lachy>
Philip`, same result I'm getting

[06:33:01.0000] <Lachy>
thanks

[06:33:02.0000] <Lachy>
/me emails tech support...

[06:34:00.0000] <Lachy>
that's weird, I can't ssh to it.

[06:41:00.0000] <Philip`>
$ ssh lachy.id.au

[06:41:01.0000] <Philip`>
The authenticity of host 'lachy.id.au (207.210.111.50)' can't be established.

[06:41:02.0000] <Philip`>
RSA key fingerprint is 5e:13:16:fc:77:53:f5:f5:2a:7a:62:04:38:b2:9b:53.

[06:41:03.0000] <Philip`>
...seems to indicate that it's connecting fine

[06:42:00.0000] <Philip`>
/me wonders how cryptographically hard it is to get a "near collision" between RSA key fingerprints, so that somebody comparing two of them by eye will think they're the same

[06:43:00.0000] <Philip`>
(I usually compare MD5 checksums by only looking at the first half a dozen hex digits, which doesn't do much good to its security properties)

[06:49:00.0000] <Lachy>
Philip`, I once read an article somewhere that discussed the usability of fingerprints, and IIRC, it said if the first and last few chars are the same, it's enough to fool most people.

[06:50:00.0000] <MugginsM>
would be an interesting programming problem, produce matching hexes that to a passing glance, look the same

[06:50:01.0000] <Lachy>
looks like lachy.id.au is back up

[06:53:00.0000] <Philip`>
Ooh, 'gl_FragColor = normal' makes prettily-coloured spheres

[07:53:00.0000] <zcorpan>
http://software.hixie.ch/utilities/js/live-dom-viewer/?%3Ctextarea%20style%3D%22overflow%3Avisible%22%3E%0D%0A1%0D%0A2%0D%0A3%0D%0A4%0D%0A%3C%2Ftextarea%3E

[07:53:01.0000] <zcorpan>
try that in ie

[07:54:00.0000] <zcorpan>
seems useful... any reason why we shouldn't copy this behavior?

[07:58:00.0000] <krijnh>
Please copy that, it's super handy :)

[08:00:00.0000] <zcorpan>
i wonder why ie only does it in quirks mode

[08:01:00.0000] <krijnh>
Does it?

[08:01:01.0000] <zcorpan>
yeah

[08:01:02.0000] <krijnh>
I've used it in standards mode

[08:02:00.0000] <zcorpan>
...in ie7

[08:02:01.0000] <zcorpan>
ie6 does it in standards mode too

[08:02:02.0000] <krijnh>
IE7 as well

[08:02:03.0000] <krijnh>
/me tests

[08:03:00.0000] <krijnh>
/me still sucks at that

[08:03:01.0000] <krijnh>
You're right :)

[08:03:02.0000] <zcorpan>
perhaps they dropped it because they didn't know how to do it with correct impl of 'height'

[08:04:00.0000] <zcorpan>
should the text overflow outside the textarea when you've set a height?

[08:05:00.0000] <zcorpan>
or should height act as min-height?

[08:05:01.0000] <krijnh>
You shouldn't set a height when you want it to be as high as the content

[08:06:00.0000] <zcorpan>
that doesn't tell what UAs should do

[08:07:00.0000] <zcorpan>
ignore height altogether?

[08:07:01.0000] <zcorpan>
(act as min-height seems more useful of the alternatives, like ie6)

[08:11:00.0000] <krijnh>
Yeah, I think so

[08:29:00.0000] <Philip`>
http://www.microsoft.com/beta/downloads/About.aspx - hmm, the "Step 2" text on the right gets drawn underneath some other text in FF/Opera - does it work better in IE?

[08:30:00.0000] <krijnh>
Yes

[14:44:00.0000] <jruderman>
Hixie: does the nodelist returned by getElementsByClassName have to be in document order?

[15:46:00.0000] <gsnedders>
Hixie: http://www.digitalcitizen.info/2007/12/30/ogg-theoravorbis-as-default-for-video-scuttled-in-html5-spec-who-benefits/#comment-1487

[15:53:00.0000] <zcorpan>
http://tech.gtaero.net/2008/01/xhtml2-vs-html5.html -- hmm, someone should write a comment there. i don't have the energy to do so atm

[15:56:00.0000] <Hixie>
jruderman: spec doesn't say. feel free to send me e-mail if you think it should be defined

[15:59:00.0000] <Dashiva>
gsnedders: Why is it that those people always take "won't implement something new unless there's an advantage" and turn it into "won't implement something new, ever"?


2008-01-04
[16:00:00.0000] <jgraham>
/me thinks getElementsByClassName should be document order unless there is a good reason not to be (e.g. speed, implementation complexity)

[16:03:00.0000] <zcorpan>
jgraham: agree (and i think it should be defined)

[16:04:00.0000] <zcorpan>
same as getElementsByTagName

[16:04:01.0000] <jgraham>
Yes, I meant it should be defined to be document order, unless there is a good reason not to make it document order in which case it should be explictly noted it is not

[16:05:00.0000] <jgraham>
and the same as DOM 2 Range and DOM 3 XPath IIRC

[16:05:01.0000] <zcorpan>
getElementsByTagName

[16:05:02.0000] <zcorpan>
Returns a NodeList of all the Elements in document order... -- http://www.w3.org/TR/DOM-Level-3-Core/core.html#ID-A6C9094

[16:07:00.0000] <jgraham>
(ah XPath has ordered and unordered as options)

[16:14:00.0000] <Philip`>
/me wonders how you can have an unordered list

[16:14:01.0000] <Philip`>
Unordered sets make sense, but I'm not sure how an unordered list could work

[16:15:00.0000] <Philip`>
/me discovers that writing asynchronous JS code is sometimes nasty

[16:21:00.0000] <zcorpan>
http://tinyurl.com/yv9atd -- both opera and firefox have managed to implement getElementsByClassName in document order... :)

[16:21:01.0000] <jgraham>
/me will send email about gEBCN unless anyone else already did

[16:45:00.0000] <Dashiva>
/me laughs at the puny job queue

[16:52:00.0000] <Philip`>
/me now has properly-shaded X3D text in Firefox, but realises it'd require far too much effort to bother doing in Opera (if it's even possible)

[19:41:00.0000] <Hixie>
k, commented on http://tech.gtaero.net/2008/01/xhtml2-vs-html5.html

[19:41:01.0000] <MacDome>
/me wonders if WebKIt failed to implement gEBCN in document order... I kinda doubt it

[19:57:00.0000] <othermaciej>
MacDome: it's in document order

[19:58:00.0000] <othermaciej>
we'd have to go out of our way to use any other order

[19:58:01.0000] <MacDome>
othermaciej: I figured it would be, given that it's *right there* in the spec

[19:58:02.0000] <MacDome>
/me was failing to undersatnd the line of questioning beofre about gEBCN

[19:58:03.0000] <MacDome>
no matter

[19:59:00.0000] <othermaciej>
does the spec say document order?

[20:01:00.0000] <othermaciej>
both getElementsByName and getElementsByClassName don't seem specify an ordering

[20:03:00.0000] <othermaciej>
in contrast DOM 2 Core says this for getElementsByTagName: "Returns a NodeList of all the Elements with a given tag name in the order in which they are encountered in a preorder traversal of the Document tree."

[20:03:01.0000] <othermaciej>
(preorder traversal is document order)

[23:24:00.0000] <kig>
hard to do glows in svg, skipping

[00:06:00.0000] <hdh>
in <http://hdh.dyn-o-saur.com:81/~hdh/blos/twitter-160>, does anyone see the ETX mark appears after the first paragraph?

[00:07:00.0000] <hdh>
konqueror4 (khtml) and qt demo browser display that way, firefox2 and opera beta put ETX before "posted at"

[00:43:00.0000] <hdh>
http://hdh.dyn-o-saur.com:81/~hdh/misc/html5/after.html konqueror (khtml) and qtwebkit display the added content after the 1st paragraph

[00:56:00.0000] <kig>
oh. firefox 2 doesn't do feGaussianBlur

[02:19:00.0000] <virtuelv>
ugh. the double-click handler in the spec is annoying

[02:20:00.0000] <virtuelv>
I can no longer triple-click to select paragraphs

[02:36:00.0000] <Lachy>
virtuelv, yeah, I have the same problem with it.

[02:37:00.0000] <Lachy>
Hixie, maybe the script should require the user to Shift+Double-Click or something

[02:38:00.0000] <hsivonen>
Lachy: wouldn't that be too device-dependent?

[02:39:00.0000] <hsivonen>
Hixie: Re: doctype sniffing: I think it doesn't make sense to second-guess the Mozilla quirky doctype list. having three entries of dead code is cheap relative to the data size of the list that has to be there anyway, the doctypes didn't come out of nowhere and Anne says Opera has hit one of them

[02:41:00.0000] <Hixie>
lachy: k it requires ctrl+dblclick now

[02:42:00.0000] <Hixie>
hsivonen: the doctypes came out of dbaron and i going through looking at what we could find at the time, iirc

[02:42:01.0000] <Hixie>
but i will be looking at anne's mail in due course

[02:48:00.0000] <hsivonen>
Hixie: I'm aware that dbaron collected the inital list. my point is that taking the three doctypes out of the quirky list has no real upside and has a potential downside

[02:49:00.0000] <hsivonen>
I just tried googling for "David's list of doctypes" but it seems the original list isn't on the Web anymore 

[02:50:00.0000] <hsivonen>
archive.org doesn't have the relevant file from fas.harvard.edu, either

[02:50:01.0000] <Lachy>
hsivonen, not much more device-dependent than it is already. It already requires a mouse, which not all devices have

[02:50:02.0000] <Lachy>
Hixie, thanks

[02:51:00.0000] <hsivonen>
Lachy: actually, it required a pointing device that can emit a double-click :-)

[02:51:01.0000] <hsivonen>
but yeah, not worth tweaking

[02:51:02.0000] <Lachy>
Hixie, Ctrl+DblClick is not good. Ctrl+Click triggers the context menu on Macs

[02:52:00.0000] <hsivonen>
but in general, e.g. on the N800 keyboard emulation occupies the pointing device

[02:52:01.0000] <Hixie>
Lachy: k, meta-dblclick

[02:54:00.0000] <Lachy>
Hixie, ok, now that works on Mac. But which key is the meta key on windows?

[02:54:01.0000] <OmegaJunior>
ctrl

[02:54:02.0000] <Hixie>
alt, actually

[02:54:03.0000] <OmegaJunior>
oh?

[02:54:04.0000] <Hixie>
ctrl is, well, ctrl

[02:54:05.0000] <Lachy>
Alt doesn't work in Firefox on Windows

[02:55:00.0000] <Hixie>
really?

[02:55:01.0000] <Hixie>
odd

[02:55:02.0000] <Hixie>
maybe windows doesn't have meta

[02:55:03.0000] <Hixie>
silly line of computers

[02:56:00.0000] <Hixie>
k, changed it to alt

[02:56:01.0000] <Lachy>
AFAIK, Windows only supports the "Alt", "Shift" and "Ctrl", and maybe "AltGraph" with some keybaords

[02:57:00.0000] <Lachy>
can you make it work with either Ctrl+DblClick or Meta+DblClick

[02:57:01.0000] <OmegaJunior>
Apple has option, command and shift. Option usually maps to the alt key, and command maps to the ctrl key on windows.

[02:58:00.0000] <OmegaJunior>
(and the Apple key maps to the Windows key ;) )

[02:58:01.0000] <Lachy>
OmegaJunior, the command key is the apple key.

[02:59:00.0000] <OmegaJunior>
Hmm... it's been almost a year since I stopped using Macs... I must have forgotten a lot in the mean time.

[03:00:00.0000] <Lachy>
Apple's keys don't map directly one-to-one to the windows keys, unfortunately

[03:01:00.0000] <OmegaJunior>
Didn't people already work out this difference for the javascript click event model?

[03:01:01.0000] <Hixie>
Lachy: i could, but is there a good reason to?

[03:02:00.0000] <Hixie>
anyone got any TreeWalker or NodeIterator bugs they know about?

[03:02:01.0000] <Lachy>
Hixie, it depends if you want to allow both Windows and Mac users to add annotations, you either need a single key that works for both, or allow either key to be used.

[03:03:00.0000] <Hixie>
Lachy: alt works for both, no?

[03:03:01.0000] <Lachy>
it should

[03:03:02.0000] <Hixie>
that's what it's current set to

[03:04:00.0000] <Lachy>
yes, it works

[03:05:00.0000] <Lachy>
Hixie, just that, IIRC, NodeIterator and TreeWalker are totally unsupported in IE.

[03:05:01.0000] <Hixie>
and firefox, it seems

[03:05:02.0000] <Lachy>
I thought they were supported in FF

[03:06:00.0000] <Hixie>
so did i

[03:06:01.0000] <hsivonen>
/me thought Firefox had TreeWalker

[03:07:00.0000] <hsivonen>
Does TreeWalked plus NodeFilter even reduce XPCOM crossings significantly compared to pure-JS DOM traversal?

[03:07:01.0000] <Hixie>
it certainly has the potential to

[03:08:00.0000] <Hixie>
but personally i just find it very convenient to be able to walk the tree witha  filter without having to implement the whole thing myself

[03:09:00.0000] <hsivonen>
I think it is code-wise easier to have the generic DOM walk loop stored somewhere so that I can copy and paste the same loop when I need it

[03:09:01.0000] <Lachy>
my test shows that TreeWalker is supproted, but NodeFilter isn't in Firefox

[03:09:02.0000] <hsivonen>
too bad the pure-JS walk is too slow over the whole HTML 5 spec in Gecko

[03:10:00.0000] <hsivonen>
(especially if run from chrome)

[03:10:01.0000] <Lachy>
same result in Opera 9.24

[03:10:02.0000] <Hixie>
opera fails the node iterator tests pretty fundamentally, yet shows presence of support

[03:10:03.0000] <Hixie>
wtf

[03:11:00.0000] <Lachy>
Opera isn't showing any support for NodeFilter in my test

[03:14:00.0000] <Hixie>
oh it's definitely doing _something_ with nodeiterator

[03:14:01.0000] <Hixie>
my filter function is being called

[03:16:00.0000] <Hixie>
check out test 6 in opera

[03:16:01.0000] <Hixie>
it fails in expectation 2

[03:16:02.0000] <Hixie>
which means expectation 1 is being called

[03:16:03.0000] <Hixie>
and that's in the node filter!

[03:25:00.0000] <hdh>
meta+LMB triggers window moving on x11 

[03:33:00.0000] <Lachy>
oops, I just realised I wrote NodeFilter instead of NodeIterator above in my last 3 messages.

[03:53:00.0000] <Hixie>
i don't understand why firefox fails test 9

[03:54:00.0000] <Hixie>
35 tests to go

[03:54:01.0000] <Hixie>
bed time nownn

[07:12:00.0000] <zcorpan>
http://software.hixie.ch/utilities/js/live-dom-viewer/?%3C!DOCTYPE%20html%3E%0D%0A%3Cstyle%3E%0D%0Abody%20%7B%20color%3Agreen%20%7D%0D%0A%5Balign%3D%C4%B0%5D%20%7B%20color%3Ared%20%7D%0D%0A%3C%2Fstyle%3E%0D%0A%3Cbody%3E%0D%0A%3Cscript%3E%0D%0Avar%20e%20%3D%20document.createElementNS('x'%2C%20'y')%3B%0D%0Ae.setAttribute('align'%2C%20'i')%3B%0D%0Ae.textContent%20%3D%20'This%20text%20should%20be%20green.'%3B%0D%0Adocument

[07:12:01.0000] <zcorpan>
A%3C%2Fscript%3E

[07:13:00.0000] <zcorpan>
try that in firefox

[07:14:00.0000] <zcorpan>
or [align=I] in safari

[07:28:00.0000] <zcorpan>
it seems that in firefox, a set of attributes are unicode case-insensitive for *all* elements. in safari, *all* attributes on *all* elements are ascii case-insensitive. in opera, a set of attributes are unicode case-insensitive for all *html* elements.

[07:31:00.0000] <zcorpan>
http://simon.html5.org/test/selectors/case-sensitivity/

[07:35:00.0000] <Lachy>
zcorpan, that dom viewer link was too long and broke. Can you just upload it to the clipboard

[07:37:00.0000] <zcorpan>
Lachy: done

[07:41:00.0000] <Lachy>
zcorpan, it's not clear how to interpret the result of those case-sensitivity tests.

[07:47:00.0000] <zcorpan>
everything listed matched the selector

[07:52:00.0000] <Lachy>
ok. It would be much more useful if there was some kind of explanation and/or summary

[08:03:00.0000] <zcorpan>
opera is missing valign='', and firefox is missing ismap='', but otherwise opera and firefox have the same set of attributes that are case insensitive

[08:05:00.0000] <zcorpan>
combining them gives 54 different attributes... assuming i haven't missed some attribute

[08:06:00.0000] <Philip`>
Is each attribute treated the same regardless of which element it's on?

[08:06:01.0000] <zcorpan>
yes

[08:08:00.0000] <kig>
need a smarter thumbnail cache. 2.6GB memory use for half a million images is no fun

[08:09:00.0000] <Philip`>
kig: Need fewer images :-p

[08:09:01.0000] <kig>
/me plans to scale to billions :(

[08:10:00.0000] <Philip`>
/me wonders where that many images would come from

[08:10:01.0000] <kig>
internet

[08:11:00.0000] <Philip`>
Oh, makes sense

[08:11:01.0000] <kig>
( http://dark.fhtr.org/exafile/ )

[08:12:00.0000] <kig>
... all my projects tend to be somehow strangely deranged and megalomanic 

[08:13:00.0000] <Philip`>
Is this somewhat related to the thingy that Microsoft Research showed a while ago?

[08:14:00.0000] <Philip`>
like http://www.labs.live.com/photosynth/ though they had a different demo that was just zooming in on lots of thumbnails

[08:14:01.0000] <kig>
yes and no

[08:15:00.0000] <kig>
similar, same ideas, nothing else to do with it

[08:17:00.0000] <kig>
here video http://fhtr.blogspot.com/2007/09/and-screencap-video-of-zoomable-file.html

[08:18:00.0000] <kig>
i think the photosynth demo had something like 600 photos on screen

[08:21:00.0000] <Philip`>
That looks quite neat :-)

[08:22:00.0000] <Philip`>
How are you meant to find a particular image when it's somewhere in a pile of fifty thousand other images?

[08:23:00.0000] <Philip`>
Also, can you do this with AJAX and canvas? ;-)

[08:23:01.0000] <kig>
the same way you find it when it's on the file system 

[08:23:02.0000] <kig>
it is ajax, actually..

[08:23:03.0000] <kig>
and html

[08:23:04.0000] <Philip`>
Ooh

[08:25:00.0000] <kig>
but has wacky js cross-platform issues that i have never ironed out, and hence works only in firefox 2 (ouch)

[08:29:00.0000] <hdh>
/me likes the scale in Goals

[08:32:00.0000] <Philip`>
"Every file produced by humanity during 30 thousand years." sounds a bit suspicious - most 30,000 year spans have resulted in zero files being produced

[08:33:00.0000] <kig>
extrapolating with 10 billion people each producing a thousand files a year (or something like that)

[08:34:00.0000] <hdh>
<meter>?

[08:35:00.0000] <Philip`>
It seems hard to accurately extrapolate the population of the earth into the next century, never mind thirty thousand years into the future :-)

[08:35:01.0000] <kig>
yeah, could replace it with something else

[08:35:02.0000] <Philip`>
It seems hard to accurately extrapolate the idea of "humanity" that far, too :-p

[08:35:03.0000] <hdh>
lol

[08:36:00.0000] <kig>
http://en.wikipedia.org/wiki/Orders_of_magnitude_%28numbers%29#1018

[08:37:00.0000] <kig>
"every insect on earth"

[08:37:01.0000] <kig>
"crawling"

[08:47:00.0000] <zcorpan>
ok... so how do we want case-insensitivity for values in attribute selectors to work?

[08:48:00.0000] <zcorpan>
leaking case-insensitivity to attributes on non-html elements (like firefox and safari) seems clearly wrong

[08:49:00.0000] <zcorpan>
but perhaps checking the element to see if the attribute should be case-insensitive is too much of a perf hit?

[08:50:00.0000] <zcorpan>
e.g. should <a accept> be case-insensitive?

[08:54:00.0000] <Philip`>
/me discovers why his gl.blendFunc(gl.ONE_MINUS_DEST_ALPHA, ...) code wasn't working as expected - it's spelled ONE_MINUS_DST_ALPHA instead

[08:55:00.0000] <Philip`>
/me would like the API to warn him when passing undefined arguments

[09:00:00.0000] <gsnedders>
/me needs an XML caching format

[09:00:01.0000] <gsnedders>
(for caching processed XML data)

[09:03:00.0000] <Philip`>
gsnedders: "Processed" in what form? Just a simple tree of 'struct node { string content; map<string, string> attributes; list<node> children; }' or something?

[09:04:00.0000] <Philip`>
/me wrote something like that to cache parsed XML for a game (in C++)

[09:04:01.0000] <gsnedders>
Philip`: this element/attribute has this processed content (i.e., a string) with these options

[09:04:02.0000] <gsnedders>
Philip`: I need to serialise it back in XML though

[09:05:00.0000] <Philip`>
(because it took far too long to parse every time the game was loaded, but writing custom binary formats is a bit of a pain, so we just cache the parsed XML in a fast binary format)

[09:06:00.0000] <Philip`>
(which is easier when it's a subset of XML that doesn't have namespaces or mixed text/element children or anything fancy)

[09:06:01.0000] <Philip`>
(Age of Mythology / Age of Empires III does exactly the same, incidentally)

[09:07:00.0000] <gsnedders>
Ah. I need to use XML as the cached format as it's the only format PHP can natively parse into a DOM tree (and anything in userland code is far slower)

[09:07:01.0000] <Philip`>
Ah, okay

[09:08:00.0000] <gsnedders>
And because I need non-lossy storage of the XML input

[09:08:01.0000] <Lachy>
Philip`, where did you quote "Every file produced by humanity during 30 thousand years." from?

[09:09:00.0000] <Philip`>
Lachy: From the page kig pointed at

[09:09:01.0000] <Philip`>
http://dark.fhtr.org/exafile/

[09:12:00.0000] <Lachy>
/me wonders what the screen resolution would need to be to get "A quintillion files in a 100 quadrillion directory hierarchy." on screen at once

[09:12:01.0000] <hdh>
subpixel hinting

[09:13:00.0000] <Philip`>
You can get sixteen million images into a single pixel, such that each image still potentially has an effect on the output image

[09:14:00.0000] <Philip`>
so you'd need a couple of hundred thousand pixels width/height on your monitor, else some of the input images would never have any effect and it wouldn't really be fair to say they're being displayed

[09:15:00.0000] <hdh>
:)

[09:16:00.0000] <Lachy>
Philip`, I don't think the number of colours that can be represented by a pixel equals the number of files that could be represtented with that single pixel in the way you describe

[09:16:01.0000] <Philip`>
Uh, that's true

[09:17:00.0000] <Philip`>
I should have said 24 instead of sixteen million

[09:17:01.0000] <Lachy>
why 24?

[09:19:00.0000] <Philip`>
Because one pixel is 24 bits, so I was thinking that if you had more than 24 images then at least one of them couldn't possibly affect the output since there aren't enough bits, except actually I'm being stupid

[09:19:01.0000] <Philip`>
because it's easy to have fractional bits of information

[09:19:02.0000] <gsnedders>
silly Philip` 

[09:19:03.0000] <gsnedders>
I mean, I'm _never_ silly.

[09:19:04.0000] <Philip`>
e.g. compute the MD5 of all the images then take the first 24 bits

[09:19:05.0000] <Philip`>
so every image will have an effect on the output

[09:20:00.0000] <Philip`>
though that'd also be a silly way to represent multiple images

[09:20:01.0000] <Lachy>
you'd have to find the average colour of every file, and then find the average of all those averages.  Given an even distribution of colours, eventually the pixel would end up being a shade of grey.

[09:20:02.0000] <Lachy>
or white

[09:21:00.0000] <Lachy>
I don

[09:21:01.0000] <Philip`>
If you're just taking the mean, then the limit would be 256

[09:22:00.0000] <Philip`>
because if you have 256 images, an additional image would contribute < 1/256 to each component, so it would have no effect

[09:22:01.0000] <Lachy>
no, say you have 256 predomindately red files.  Then you add a bunch of predominately blue files to the collection.  The average colour would still be shifted towards blue.

[09:23:00.0000] <Philip`>
It wouldn't, since the output blue would be (256*0.0 + 1*1.0)/257 = 0 (rounded to the display's colour precision)

[09:23:01.0000] <Philip`>
...if you're only adding one blue image

[09:23:02.0000] <Lachy>
I said a *bunch*

[09:24:00.0000] <Philip`>
If you add a bunch, you could remove one of them and have no effect on the output, so that image isn't really in the output

[09:25:00.0000] <Philip`>
I'm not at all convinced by myself, though

[09:25:01.0000] <Lachy>
add 256 blue files to the collection of 256 red files.  The average will then be a shade of magenta

[09:25:02.0000] <Philip`>
Remove one of those red files, and the output will be precisely the same as before

[09:26:00.0000] <Philip`>
so all you're really displaying is 256 blue and 255 red files

[09:26:01.0000] <Lachy>
there is no limit to the number of files.  However, as the number of files increases, the effect of a single file reduces

[09:27:00.0000] <Philip`>
There is a limit because eventually the effect of a single file reduces to zero :-)

[09:28:00.0000] <Lachy>
no, the effect of a single file just asymptotically approaches zero

[09:28:01.0000] <Philip`>
The output is quantised to 24 bits, so the effect does reach zero

[09:28:02.0000] <Philip`>
(Er, I guess it's more correct to say it's quantised to 8 bits)

[09:28:03.0000] <Lachy>
that's a rounding error that occurs after the calculation

[09:28:04.0000] <gsnedders>
/me might actually write a spec in terms of ABNF! :o

[09:29:00.0000] <Lachy>
it doesn't affect the calculation itself

[09:29:01.0000] <Philip`>
It's not a rounding error - it's a fundamental part of the question of how many images you can meaningfully represent in a pixel on a monitor :-)

[09:30:00.0000] <Philip`>
(...assuming it's not a silly LCD monitor that does 18-bit-plus-dithering or something)

[09:31:00.0000] <Lachy>
IIRC, the human eye can only distinguish about 10 million colours anyway

[09:31:01.0000] <Philip`>
Bah, humans weren't part of the question

[09:32:00.0000] <Philip`>
In 30,000 years we will all be robots and we'll plug ourselves directly into the VGA socket

[09:32:01.0000] <Lachy>
You think we'll still have VGA in 30,000 years? Surely we'll have upgraded to at least Dual-DVI by then :-)

[09:33:00.0000] <Philip`>
Don't underestimate the problems of backward compatibility in technology!

[09:33:01.0000] <Lachy>
(hopefully HDMI will have been thrown out by then)

[09:34:00.0000] <Lachy>
DVI is backwards compatible with VGA, so not a problem

[09:34:01.0000] <Lachy>
just needs a simple DVI-VGA adapter

[09:34:02.0000] <gsnedders>
hmmm… ABNF doesn't specify which match to use if multiple alternatives match.

[09:34:03.0000] <Philip`>
Only DVI-I

[09:35:00.0000] <Lachy>
what about DVI-A?

[09:35:01.0000] <Philip`>
gsnedders: Probably the idea is that you don't have multiple alternatives matching, because that would be an ambiguous / non-deterministic grammar

[09:35:02.0000] <gsnedders>
Lachy: Dual-DVI? Not Dual-link DVI? Why would we want two sockets? :P

[09:35:03.0000] <gsnedders>
Philip`: yeah, I guess I'll just use something like, "If xxx doesn't match, yyy is a string."

[09:36:00.0000] <Philip`>
Is DVI-A something other than VGA but in an incompatible shape?

[09:36:01.0000] <Lachy>
yeah, I meant Dual Link DVI

[09:36:02.0000] <gsnedders>
Philip`: DVI-A is VGA only

[09:36:03.0000] <gsnedders>
Philip`: DVI-I is VGA and DVI-D

[09:37:00.0000] <Lachy>
but 2 sockets are necessary for 2 monitors.  Or, when we are robots, one for each eye

[09:37:01.0000] <gsnedders>
(where DVI-D is the native digital one)

[09:37:02.0000] <Philip`>
Anyway, when the robots invent time travel, they'll make us pay for inventing all these legacy technologies that they'll be shackled to for the rest of eternity

[09:40:00.0000] <Lachy>
in that case, we should just deposit $1 in a long term savings account, and by the time the robots come to collect their compensation in 30,000 years, then interest earned should cover it.

[09:40:01.0000] <Dashiva>
Dunno, there's inflation to consider too

[09:41:00.0000] <Philip`>
There's the matter of writing down the PIN number too

[09:42:00.0000] <gsnedders>
/me once managed to get through five PIN numbers in a year.

[09:44:00.0000] <Lachy>
nah, just write it in your Will that the money in the account is left to the robots. Your heirs generally don't need your PIN to access their inheritence, and nor should the robots

[09:45:00.0000] <Lachy>
/me has to go home. Back soon.

[09:47:00.0000] <gsnedders>
Hixie (or anyone else who knows): is the spec-gen available at all?

[09:53:00.0000] <Philip`>
gsnedders: Do you mean the source code, or just remote access to the service?

[09:53:01.0000] <gsnedders>
Philip`: either

[09:54:00.0000] <gsnedders>
/me vaguely remembers something being said about it being by Bert Bos and being remotely available to W3C members, but isn't very sure

[09:56:00.0000] <Philip`>
/me remembers the same

[09:56:01.0000] <Philip`>
but all I can find is http://www.w3.org/Tools/HTML-XML-utils/ which doesn't look like the same thing

[10:06:00.0000] <Lachy>
gsnedders, the spec generator is for W3C members only. I could look up the URL for you, but wouldn't do you much good

[10:07:00.0000] <Lachy>
it was originally made for the CSSWG

[10:07:01.0000] <gsnedders>
Lachy: yeah, that's what I thought.

[10:08:00.0000] <Lachy>
it would be nice if someone could write a similar system using html5lib

[10:08:01.0000] <Lachy>
and an HTML5 serialiser

[10:09:00.0000] <gsnedders>
/me wonders if he can, until then, occasionally nag someone into putting stuff through it for him

[10:09:01.0000] <Lachy>
what do you need done?

[10:10:00.0000] <gsnedders>
now? nothing.

[10:10:01.0000] <gsnedders>
just nice to decide what format to write a spec in before writing it :)

[10:10:02.0000] <Lachy>
ok, sure. I can do nothing for you now :-)

[10:10:03.0000] <gsnedders>
Lachy: hard working guy, eh? :)

[10:11:00.0000] <Lachy>
I could do it for you occasionally

[10:12:00.0000] <gsnedders>
I expect I could get others to do so occasionally too: most likely whoever happens to be around here when I need it done :)

[10:15:00.0000] <gsnedders>
/me tries to reverse-engineer what it does

[10:15:01.0000] <gsnedders>
.no-num, .no-toc, and <!--toc--> are the obvious parts

[10:16:00.0000] <gsnedders>
IIRC it does cross-references too

[10:58:00.0000] <Dashiva>
> The 'height' property doesn't apply. The height of the content area should be based on the font, but this specification does not specify how.

[10:59:00.0000] <Dashiva>
Anyone know off-hand if this is interop and if so, what is used?

[12:03:00.0000] <Philip`>
/me doesn't like having to depth-sort transparent objects

[15:14:00.0000] <zcorpan>
hsivonen: validator.nu doesn't catch errors in xml-stylesheet PIs

[15:19:00.0000] <gsnedders>
Hixie: ping

[15:21:00.0000] <gsnedders>
Hixie: do you do refs manually and not through what <http://www.w3.org/Style/spec-mark-up> says?

[15:21:01.0000] <gsnedders>
(or are they pre-processed somehow to be in the WF2 source?)

[15:29:00.0000] <Hixie>
i do all references manually


2008-01-05
[19:57:00.0000] <Hixie>
how the hell do you tell a RangeException from a DOMException??

[20:02:00.0000] <weinig>
Hixie: in WebKit now, you can do e instanceof RangeException

[20:02:01.0000] <weinig>
Hixie: I believe you can do that in Firefox as well

[20:05:00.0000] <weinig>
or alternatively, e.constructor == RangeException :)

[20:05:01.0000] <weinig>
where e is of course the exception being thrown

[20:10:00.0000] <Hixie>
i mean how do you tell in a spec-justifiable way

[20:11:00.0000] <Hixie>
ideally using specs from 2004 :-)

[20:12:00.0000] <weinig>
Hixie: testing e.BAD_BOUNDARYPOINTS_ERR == 1

[20:12:01.0000] <Hixie>
hm, yeah, that might work

[20:12:02.0000] <Hixie>
thanks

[20:13:00.0000] <weinig>
no problem

[20:15:00.0000] <weinig>
Hixie: though  in no way exaustive, http://trac.webkit.org/projects/webkit/browser/trunk/LayoutTests/fast/dom/DOMException/ might be of some help

[20:17:00.0000] <Hixie>
thanks

[22:18:00.0000] <Hixie>
DOM Range is really badly defined

[22:19:00.0000] <Hixie>
it's full of holes

[22:19:01.0000] <Hixie>
e.g. selectNode() on an orphan seems to cause a crash, as i understand it

[22:19:02.0000] <Hixie>
and you can set the boundary points as being in different unconnected trees

[22:22:00.0000] <Hixie>
or if you set the offset to a value out of range

[22:31:00.0000] <jruderman>
Hixie: have you seen https://bugzilla.mozilla.org/show_bug.cgi?id=409380 ?

[22:32:00.0000] <Hixie>
yeah i'm looking at those bugs as we speak

[22:32:01.0000] <jruderman>
:)

[23:44:00.0000] <G0k>
hey anyone know where annevk has been?

[23:52:00.0000] <kura>
probably busy with his new place and all

[23:55:00.0000] <G0k>
where did he move?

[00:01:00.0000] <kura>
no idea

[00:02:00.0000] <kura>
i just saw him tweet a while ago that he got his own place

[00:02:01.0000] <kura>
like, just before the holidays

[00:12:00.0000] <Hixie>
wow, dom range's interaction with splitText() is retarded

[00:13:00.0000] <othermaciej>
how does it interact?

[02:36:00.0000] <hsivonen>
zcorpan: Validator.nu doesn't check the contents of any PI

[08:33:00.0000] <gsnedders>
hsivonen: didn't you have a spec for serialising a DOM structure somewhere?

[09:46:00.0000] <jgraham>
gsnedders: are you thinking of http://simon.html5.org/specs/sdf

[09:46:01.0000] <gsnedders>
jgraham: yes.

[09:46:02.0000] <gsnedders>
so it was my second thought of ed.

[12:48:00.0000] <zcorpan>
hsivonen: consider it a feature request to validate xml-stylesheet PIs :) (i'll spec down conf requirements for it in my draft, though it already defines what is a parse error...)

[13:31:00.0000] <gsnedders>
Hixie: ping


2008-01-06
[17:58:00.0000] <zcorpan>
Hixie: can't you write valid html? :) http://tech.gtaero.net/2008/01/depressing-validation-results.html

[18:01:00.0000] <Philip`>
Validity is just a guideline :-)

[18:07:00.0000] <othermaciej>
I wonder why Apple's homepage fails to validate

[18:10:00.0000] <zcorpan>
/me runs apple.com through v.nu

[18:13:00.0000] <zcorpan>
Error: Stray / in tag. The /> syntax is not permitted in HTML4. (HTML4-only error)

[18:13:01.0000] <zcorpan>
Error: Bad value search for attribute type on element input.

[18:13:02.0000] <zcorpan>
Error: Required attributes missing on element script.

[18:13:03.0000] <zcorpan>
Error: Duplicate attribute id.

[18:17:00.0000] <zcorpan>
apart from duplicate id, those are not errors per html5, but validating as html5 yields many more other errors

[21:55:00.0000] <Hixie>
zcorpan: fixed (except for the error that's actually an error in the html4 spec)

[22:15:00.0000] <G0k>
hixie: any thoughts on my server-sent events proposal?

[22:36:00.0000] <Hixie>
i haven't looked at server-sent events recently

[22:37:00.0000] <Hixie>
however all feedback sent to the list ends up in the server-sent events folder and will be dealt with in due course

[22:37:01.0000] <G0k>
heh oki

[23:36:00.0000] <Hixie>
29 tests to go

[23:37:00.0000] <Hixie>
I'm looking for tests that fail in one of the top four browsers that cover any of the following subject areas but which are justifiable using only specifications that were in REC in 2004 or earlier:

[23:38:00.0000] <Hixie>
HTTP, URI, data:, NodeIterator, TreeWalker, Range, DOM Core, DOM Events, DOM Views, DOM Style, Selectors, HTML4, DOM2HTML, DOM manipulation, accessors, tables, forms, JavaScript, XHTML

[23:38:01.0000] <Hixie>
...and which can be demonstrated purely from script

[23:38:02.0000] <Hixie>
i.e. that don't depend on rendering

[23:44:00.0000] <jruderman>
does IE still refuse to render application/xhtml+xml ?

[23:44:01.0000] <MacDome>
/me bets there are lots of JS errors in svg usage :)

[23:46:00.0000] <Hixie>
i'm trying to avoid entering svg

[23:46:01.0000] <othermaciej>
do you have any http ones?

[23:46:02.0000] <othermaciej>
there's gotta be something good

[23:46:03.0000] <Hixie>
jruderman: yeah, they have no xhtml support. already have a basic test for that though.

[23:47:00.0000] <othermaciej>
or URI

[23:47:01.0000] <Hixie>
othermaciej: some simple ones, but i want to avoid anything that needs too much fancy server side config

[23:47:02.0000] <othermaciej>
yeah

[23:47:03.0000] <Hixie>
othermaciej: i'm all ears if you know of anything to test

[23:47:04.0000] <Hixie>
othermaciej: i just can't find any more justifiable bugs! :-)

[23:48:00.0000] <othermaciej>
I dunno, it's hard to even think of techniques for testing

[23:48:01.0000] <Hixie>
well i'm really just looking for bugs

[23:48:02.0000] <Hixie>
i can come up with testing techniques

[23:50:00.0000] <jwalden>
Hixie: are there tests for things like |window.alert instanceof Function| and |window.alert.apply(null, ["stuff works!"])| ?  I'm guessing yes but have to ask :-)

[23:53:00.0000] <Hixie>
"window" isn't justifiable using only specifications that were in REC in 2004 or earlier

[23:53:01.0000] <Hixie>
nor is anything relating to how DOM functions are exposed in JS, really

[23:56:00.0000] <jwalden>
sigh

[00:07:00.0000] <Lachy>
Hixie, can you test for constants like Node.ELEMENT_NODE? IE lacks support for them

[00:10:00.0000] <MacDome>
/me notes that IE already fails basically every test anyway :)

[00:10:01.0000] <MacDome>
if they passed Acid3 test as-is I'd be happy :)

[00:11:00.0000] <MacDome>
/me notes that Safari 3.0.4 gets 60% while TOT gets 77%

[00:12:00.0000] <Lachy>
What's TOT?

[00:12:01.0000] <MacDome>
I lied, 61%

[00:12:02.0000] <MacDome>
top-of-tree/tip-of-tree, aka HEAD, aka the latest sources.  TOT is an appleism

[00:13:00.0000] <Lachy>
ok, you mean the latest webkit?

[00:13:01.0000] <MacDome>
opera 9.5b1 gets 67%, FF3b2 gets 71%

[00:13:02.0000] <MacDome>
Lachy: yes, the latest webkit

[00:13:03.0000] <MacDome>
although a new nightly hasn't been built yet

[00:13:04.0000] <MacDome>
I bet the most recent nightly gets like 75%, there have been a couple fixes tonight

[00:14:00.0000] <MacDome>
of course, hixie hasn't finished making the test yet, so there are still 30+ chances for failure

[00:14:01.0000] <MacDome>
so it' more like 40-something %

[00:15:00.0000] <Hixie>
Lachy: yeah that's already tested

[00:15:01.0000] <Hixie>
MacDome: safari screws up the rendering way more than, say, mozilla

[00:15:02.0000] <MacDome>
Hixie: it does render differently than your test expects, yes.

[00:15:03.0000] <Hixie>
:-)

[00:16:00.0000] <MacDome>
Hixie: I don't know all of the things which are being tested in the CSS parts yet

[00:16:01.0000] <MacDome>
Hixie: like what's that red square?

[00:16:02.0000] <Hixie>
the one with the cat?

[00:16:03.0000] <Hixie>
that's testing the <object> handling that acid2 failed to test, and which safari therefore failed to get right when fixing acid2

[00:18:00.0000] <Lachy>
cool, internal builds of Opera do slightly better than 9.5b1

[00:19:00.0000] <jwalden>
Hixie: which part of object handling, incidentally?

[00:19:01.0000] <Hixie>
processing of Content-Type headers, iirc

[00:20:00.0000] <jwalden>
haha, exactly the bug I mentioned in a recent whatwg email :-)

[00:21:00.0000] <jwalden>
and filed, incidentally, as <http://bugs.webkit.org/show_bug.cgi?id=16690>

[00:23:00.0000] <Lachy>
Hixie, how stable are the existing tests in acid 3? If I start extracting them and making individual test cases from them, are they likely to change in the future?

[00:25:00.0000] <zcorpan>
Lachy: does it matter, so long as the tests are correct? :)

[00:25:01.0000] <Hixie>
Lachy: very likely to change, but that doesn't matter, if you find bugs feel free to file them, they don't become less important

[00:25:02.0000] <MacDome>
Hixie: so we're supposed to ignore it due to the 404? http://bugs.webkit.org/show_bug.cgi?id=16760

[00:26:00.0000] <Hixie>
i don't know if that's the bug, but yes, 404s should cause fallback

[00:26:01.0000] <Hixie>
but that shouldn't be the bug

[00:26:02.0000] <Hixie>
acid2 tested for that too

[00:28:00.0000] <zcorpan>
Hixie: testing <link rel=stylesheet href=not-css> will introduce yet another difference between quirks mode and standards mode...

[00:29:00.0000] <Hixie>
that's already a difference in firefox

[00:29:01.0000] <zcorpan>
true

[00:29:02.0000] <zcorpan>
/me doesn't like differences though

[00:29:03.0000] <Hixie>
and it's important not to treat non-css files as css

[00:30:00.0000] <Hixie>
otherwise how will we introduce a new stylesheet language? or differentiate css from xslt?

[00:30:01.0000] <zcorpan>
you honor type=""

[00:31:00.0000] <zcorpan>
and let absense of type="" mean "text/css"

[00:31:01.0000] <Hixie>
what if you don't know in advance?

[00:32:00.0000] <zcorpan>
with xml-stylesheet, i've specced that absense of type="" means text/css. that's what browsers do. i guess <link> could work the same...

[00:34:00.0000] <zcorpan>
(i.e., to use xslt you have to specify type="" in the PI, or it doesn't work)

[00:36:00.0000] <zcorpan>
(xml-stylesheet currently requires the resource to be dropped if content-type doesn't match what was expected, like in firefox, but i might change that)

[00:38:00.0000] <Hixie>
but what if you don't know what the remote resourc's type is?

[00:39:00.0000] <Hixie>
we need some sort of mechanism for distinguishing remote content's type, whether that be content-type or sniffing or something else

[00:40:00.0000] <zcorpan>
with <link>, you would always know the type if the type defaults to text/css

[00:40:01.0000] <zcorpan>
no?

[00:41:00.0000] <Hixie>
no i mean say i have a URI that points to a stylesheet resource

[00:41:01.0000] <Hixie>
but nobody knows whether that resource is CSS or XSLT

[00:41:02.0000] <Hixie>
as it changes from day to day

[00:41:03.0000] <zcorpan>
ah

[00:41:04.0000] <Hixie>
what do i put in my markup?

[00:41:05.0000] <zcorpan>
if you load it in the top-level browsing context then you honor content-type

[00:42:00.0000] <Hixie>
not that helpful for a stylesheet

[00:42:01.0000] <Lachy>
why would an author link to a resource that randomly changes between CSS and XSLT?

[00:43:00.0000] <zcorpan>
oh, now i see the scenario. seems like a non-real-world scenario though

[00:43:01.0000] <Hixie>
it's not realistic today

[00:43:02.0000] <Hixie>
but what about in 100 years when we have a new stylesheet language that's insanely better than css?

[00:44:00.0000] <zcorpan>
you specify <link type="text/inherently-better-than-css"

[00:44:01.0000] <zcorpan>
s/inherently/insanely/

[00:44:02.0000] <Lachy>
you mean when the CSS working groups takes the XHTML2-approach to spec development?

[00:44:03.0000] <Hixie>
but you don't know if it's css or ibtcss

[00:44:04.0000] <Hixie>
some designers will use css, some won't

[00:44:05.0000] <Lachy>
by starting over instead of just making CSS better?

[00:45:00.0000] <Hixie>
and also, you don't want to require that ibtcss have this extra attribute, when the server can tell the client what the type is

[00:45:01.0000] <Hixie>
Lachy: occasionally, languages come along that are better enough that they really are worth boiling the oceans for

[00:45:02.0000] <zcorpan>
Hixie: that's already the case with XSLT and xml-stylesheet, though

[00:46:00.0000] <Hixie>
zcorpan: and that's a problem we should solve, rather than making it worse

[00:46:01.0000] <zcorpan>
i don't see requiring an attribute as a big problem

[00:47:00.0000] <zcorpan>
when we also have the requirement to work with mislabeled content

[00:47:01.0000] <zcorpan>
(well, at least in quirks mode)

[00:47:02.0000] <Hixie>
we can avoid that requirement in standards mode

[00:49:00.0000] <zcorpan>
should i change xml-stylesheet to not default to text/css when type="" is absent?

[00:50:00.0000] <Hixie>
i would make the type="" attribute entirely advisory, just like with <link>

[00:50:01.0000] <Hixie>
and make the server have the final say

[00:50:02.0000] <Hixie>
just like http requires

[00:50:03.0000] <zcorpan>
also, type="text/xml" and type="application/xml" means xslt in browsers (except ie)

[00:51:00.0000] <Hixie>
well, if the type is xml, the browser should parse it as xml, and if the namespace is xslt, then treat it as xslt

[00:51:01.0000] <zcorpan>
yeah

[00:53:00.0000] <zcorpan>
/me revamps xml-stylesheet

[01:28:00.0000] <othermaciej>
so is there anything in the Gears image manipulation API proposal that should be in Canvas?

[01:32:00.0000] <othermaciej>
(it doesn't look like it can do anything that canvas can't do, actually)

[01:33:00.0000] <annevk_zeist>
yeah

[01:33:01.0000] <annevk_zeist>
maybe they implement it on top of <canvas>?

[01:34:00.0000] <othermaciej>
no idea

[01:34:01.0000] <Hixie>
afk

[01:35:00.0000] <annevk_zeist>
seems they also want to implement postMessage() from the WHATWG

[01:35:01.0000] <othermaciej>
I suggested that they just make it match the <canvas> API

[01:36:00.0000] <MacDome>
/me met one of the gears dudes the other day

[01:36:01.0000] <MacDome>
/me can't even remember his name, sadly

[01:37:00.0000] <othermaciej>
I don't really understand what Google really wants out of Gears

[01:38:00.0000] <othermaciej>
sometimes they seem to begrudge the idea that browsers would implement the same functionality natively

[01:38:01.0000] <othermaciej>
and seem uninterested in working with standards

[01:38:02.0000] <othermaciej>
but I figure we need to implement equivalent functionality in WebKit anyway

[01:38:03.0000] <annevk_zeist>
they did contribute to the HTML5 stuff a lot on the WHATWG list...

[01:38:04.0000] <othermaciej>
since Gears for Safari is not in a usable state right now and will probably always be behind

[01:39:00.0000] <othermaciej>
yes, they did help once stuff started getting added to the spec

[01:39:01.0000] <othermaciej>
which was good

[01:39:02.0000] <MacDome>
othermaciej: I would expect that gears is most useful for Google for IE

[01:39:03.0000] <MacDome>
/me doesn't know though

[01:40:00.0000] <MacDome>
othermaciej: as IE doesn't have any gears functionality natively

[01:40:01.0000] <MacDome>
gears is much less exciting for Safari or FF

[01:40:02.0000] <MacDome>
IMO

[01:42:00.0000] <othermaciej>
it's certainly true that IE is less likely to add useful functionality needed for web apps in the near term

[01:43:00.0000] <othermaciej>
but I would think they might want to make feature requests to browser vendors who are interested in working with them (individually, cause I know they have the channels, or collectively via WHATWG) rather than just slap it all in a browser extension

[01:46:00.0000] <MacDome>
/me shrugs

[01:46:01.0000] <MacDome>
I would guess that for some of those things it's easier to implement, try it out, and iterate

[01:46:02.0000] <MacDome>
since certainly some of those things need iteration

[01:46:03.0000] <MacDome>
feedback from app developers, etc.

[01:46:04.0000] <MacDome>
and writing your own, does make that an easier process

[01:50:00.0000] <zcorpan>
http://simon.html5.org/specs/xml-stylesheet5#processing updated

[01:52:00.0000] <hsivonen>
zcorpan: Re: xml-stylesheet: Validator.nu does not check any PI contents. Should it?

[01:52:01.0000] <annevk_zeist>
yes

[01:53:00.0000] <hsivonen>
annevk_zeist: which ones and to which specs?

[01:53:01.0000] <annevk_zeist>
http://simon.html5.org/specs/xml-stylesheet5 ?

[01:54:00.0000] <hsivonen>
annevk_zeist: any other? access-control perhaps?

[01:54:01.0000] <annevk_zeist>
access-control and xbl should probably wait until there are more implementations

[01:55:00.0000] <hsivonen>
ok

[01:55:01.0000] <annevk_zeist>
I would expect those to use the same tokenization rules as simon uses for xml-stylesheet btw

[01:55:02.0000] <hsivonen>
xml-stylesheet5 doesn't look like a stable spec...

[01:56:00.0000] <annevk_zeist>
maybe it's better to wait then

[03:38:00.0000] <kig>
http://glimr.rubyforge.org/cake/cakenu.png well, that got out of hand. the svg renders at 15fps though so all i need is a lot of caching and only redrawing changed parts :|

[04:00:00.0000] <MacDome>
kig?

[04:00:01.0000] <kig>
doing webdesign

[04:00:02.0000] <MacDome>
kig: if you have an SVG which performs poorly, I'd like to know about it so we can make it much better :)

[04:00:03.0000] <kig>
by mixing svg, canvas and html

[04:01:00.0000] <kig>
(or, planning to)

[04:02:00.0000] <MacDome>
kig: well, please file a bug if Safari's SVG implementation doesn't blow you away speed-wise :)

[04:02:01.0000] <MacDome>
we haven't done much profiling, but we'd love to make slow SVGs faster :)

[04:03:00.0000] <kig>
/me renders svgs on canvas ...

[04:03:01.0000] <kig>
but yeah, i'll check if the svg renders correctly on safari, sec

[04:12:00.0000] <kig>
nice, 30fps on safari

[04:13:00.0000] <kig>
but no gaussian blur filter (not that firefox has one either)

[04:17:00.0000] <kig>
and svg hasn't got much in the way of blend modes

[04:17:01.0000] <kig>
(even in the spec)

[04:22:00.0000] <gsnedders>
/me wonders how quickly Hixie will reply to email

[04:26:00.0000] <kig>
though svg 1.2 draft has all the good stuff

[04:39:00.0000] <MacDome>
kig: if you have features you want from SVG 1.2, you should file bugs :)

[04:39:01.0000] <MacDome>
kig: however... we mostly think SVG 1.2 is totally wacko

[04:39:02.0000] <MacDome>
and are ignoring it for now

[04:39:03.0000] <kig>
yes, that

[04:40:00.0000] <MacDome>
kig: every time I sit down to hack on webkit, I check the list of SVG bugs :)  Rob often scans through them as well and picks of easy ones

[04:40:01.0000] <kig>
it has everything! including all the things it shouldn't have!

[04:40:02.0000] <MacDome>
like my favorite: Socket :)

[04:44:00.0000] <kig>
http://www.w3.org/TR/2004/WD-SVG12-20041027/rendering.html <- comp-op would be nice, i haven't read the other things

[04:45:00.0000] <kig>
around 1/3 down

[04:45:01.0000] <kig>
heck, those'd be nice to have in canvas too

[04:46:00.0000] <MacDome>
kig: just file a bug asking for http://www.w3.org/TR/2004/WD-SVG12-20041027/rendering.html#comp-op-prop supportr

[04:46:01.0000] <MacDome>
kig: we could probably do that pretty easily.

[04:46:02.0000] <kig>
yeah, i think CG already has all of those

[04:47:00.0000] <kig>
core image stuff or whatwasit

[04:47:01.0000] <othermaciej>
I'm not sure it has color-dodge or color-burn

[04:47:02.0000] <othermaciej>
I'm not even sure what those are

[04:48:00.0000] <othermaciej>
oh, that's not the 1.2 Tiny draft

[04:48:01.0000] <othermaciej>
that's an old draft of 1.2 Full

[04:48:02.0000] <MacDome>
yeah

[04:49:00.0000] <kig>
/me never really understood the purpose of the porter-duff ops

[04:49:01.0000] <MacDome>
looks like it was dropped from tiny

[04:49:02.0000] <MacDome>
kig: I doubt we'd implement something out of an old draft of full

[04:49:03.0000] <MacDome>
unless there were folks actually gonna use it

[04:49:04.0000] <kig>
yes, i understand


2008-01-07
[21:05:00.0000] <jwalden>
Hixie: another idea for a test -- make sure that the CSS float property can be accessed through the DOM by the property name "cssFloat"; I've heard rumors IE only supports styleFloat

[21:50:00.0000] <Hixie>
jwalden: thanks

[21:50:01.0000] <jwalden>
np

[21:51:00.0000] <Hixie>
if you have any firefox or safari bugs, those are even more valuable... the test is already a mess in IE, we don't really need to add more IE bugs :-)

[21:51:01.0000] <Hixie>
but i'll try this one

[21:52:00.0000] <jwalden>
I know; I should skim through the list of bugs I'm CCed on and see if there are any that have been around awhile

[21:53:00.0000] <jwalden>
Hixie: btw, your use of text-shadow is nice, and I wish Gecko supported it, but (I'd hope!) you're not going to be able to get accurate rendering with it, unless you're just checking that it gets DOMified

[22:01:00.0000] <Hixie>
why?

[22:07:00.0000] <jwalden>
Hixie: surely CSS wouldn't prescribe exact rendering for text-shadow, would it?

[22:31:00.0000] <Hixie>
jwalden_: in the extreme case of there not being a blur radius, sure

[22:32:00.0000] <gavin>
/me finds it rather odd that jwalden_ and Hixie are having two separate conversations in two different channels on two different networks

[22:56:00.0000] <jwalden>
Hixie: https://bugzilla.mozilla.org/show_bug.cgi?id=98694 might be reasonable

[22:57:00.0000] <Hixie>
can't test :hover from script

[23:05:00.0000] <jwalden>
ah, point

[23:15:00.0000] <othermaciej>
you could require the mouse to be in the window and ensure that the feature which should be in :hover covers the whole page and then use getComputedStyle

[23:15:01.0000] <othermaciej>
(:hover on a column, yuck)

[23:17:00.0000] <othermaciej>
that one's not clearly justified by standards I don't think

[23:17:01.0000] <othermaciej>
even if it were testable

[23:17:02.0000] <Hixie>
i don't want to require much of reporters at all :-)

[23:21:00.0000] <jwalden>
Hixie: <https://bugzilla.mozilla.org/show_bug.cgi?id=312354> might fit a bill

[23:32:00.0000] <Hixie>
26 tests to go

[23:32:01.0000] <Hixie>
jwalden: looking

[23:33:00.0000] <Hixie>
jwalden: E4X isn't old enough

[23:34:00.0000] <jwalden>
Hixie: don't need E4X, just something that will do the conversion -- |var c = node.textContent = {toString: function() { return "string"; }};| would do the trick -- is c a string or an object?

[23:34:01.0000] <jwalden>
or at least that's how I understand it

[23:34:02.0000] <Hixie>
oh

[23:34:03.0000] <Hixie>
/me looks closer

[23:37:00.0000] <Hixie>
typeof(window.name = 6) retrns number for me

[23:37:01.0000] <Hixie>
as does typeof(document.documentElement.id = 6)

[23:38:00.0000] <Hixie>
and typeof(document.documentElement.id = {toString: function() { return "string"; }}) returns object

[23:38:01.0000] <Hixie>
i can't reproduce this bug

[23:38:02.0000] <jwalden>
hm

[23:39:00.0000] <Hixie>
(without e4x)

[23:40:00.0000] <jwalden>
Hixie: see comment 3, or try javascript:var re = /x/g; var y; y = re.lastIndex = "7"; typeof y

[23:40:01.0000] <jwalden>
it's only a problem when it chains, I think

[23:41:00.0000] <Hixie>
var x; typeof(x = document.documentElement.id = {toString: function() { return "string"; }}) still says object

[23:41:01.0000] <Hixie>
but your example does fail

[23:41:02.0000] <Hixie>
weird

[23:51:00.0000] <Hixie>
thanks for that one

[23:51:01.0000] <Hixie>
added it

[23:53:00.0000] <jwalden>
Hixie: https://bugzilla.mozilla.org/show_bug.cgi?id=385166 is an HTTP compliance one

[23:54:00.0000] <Hixie>
not clear that that's a bug

[23:54:01.0000] <Hixie>
since HTTP doesn't define error handling

[23:54:02.0000] <Hixie>
find bugs is hard :-/

[23:54:03.0000] <Hixie>
finding bugs, even

[23:54:04.0000] <Hixie>
or rather, finding usable bugs for an acid test

[23:55:00.0000] <jwalden>
except that treating something with the wrong content-type as text/css is clearly wrong, isn't it?

[23:55:01.0000] <Hixie>
it's not clear that it has the wrong content-type

[23:55:02.0000] <Hixie>
it may have no content-type

[23:56:00.0000] <Hixie>
according to http, behaviour is undefined

[00:17:00.0000] <jwalden>
<https://bugzilla.mozilla.org/show_bug.cgi?id=398681>, <https://bugzilla.mozilla.org/show_bug.cgi?id=398682>, <https://bugzilla.mozilla.org/show_bug.cgi?id=398686>, <https://bugzilla.mozilla.org/show_bug.cgi?id=398820> for more possibilities (didn't look beyond the summaries, tho)

[00:25:00.0000] <om_sleep>
table layout is not very well specified

[00:25:01.0000] <jwalden>
and with that I've run through the list of open bugs I'm CCed on

[00:25:02.0000] <jwalden>
yeah

[00:25:03.0000] <othermaciej>
so not likely to be good fodder for an acid test

[00:26:00.0000] <jwalden>
I also was sorta trying to find bugs where the situation hit is one you might reasonably see in a web page, or where the tested functionality is generally useful

[00:26:01.0000] <jwalden>
so much of this is edge-case functionality that's not especially useful

[00:26:02.0000] <jwalden>
or has easy workarounds

[00:27:00.0000] <jwalden>
or similar

[03:06:00.0000] <Hixie>
i love when working groups are asked to define error handling and their response is "defining error handling is hard" as if that means they shouldn't do it

[03:10:00.0000] <jwalden>
Hixie: btw, totally understandable if you don't want to do it, but if you could throw some testing in the document.createElement(badness) test for createElementNS(badness) that'd be awesome and would save us a little effort ;-)

[03:21:00.0000] <Hixie>
jwalden: come again?

[03:23:00.0000] <jwalden>
Hixie: it would be convenient to have something like test 22 (maybe just more added to it) which tested createElementNS, possibly for things that only it would have problems handling (qname = "xml:foo" with wrong ns comes to mind as one, for example)

[03:23:01.0000] <jwalden>
since I doubt our impl of that is fully correct either

[03:24:00.0000] <Hixie>
oh i see

[03:24:01.0000] <Hixie>
will do

[03:24:02.0000] <Hixie>
sure thing

[03:24:03.0000] <Hixie>
bed time now though

[03:24:04.0000] <Hixie>
nn

[03:24:05.0000] <jwalden>
/me should really do that too

[03:31:00.0000] <hsivonen>
zcorpan: xml-stylesheet PIs recorded as a feature request

[04:51:00.0000] <jwalden>
Hixie: I don't think the |assert(!s.MIN_VALUE, "attribute is a Number");| means what you think it means in test 54; you want typeof == "number", I think

[04:53:00.0000] <jwalden>
Hixie: |s.match| is a function because |typeof s == "string"|, but the MIN_VALUE property only exists on the Number ctor

[04:54:00.0000] <jwalden>
Hixie: also, the messages in those two asserts seem to have inverted logic

[08:11:00.0000] <zcorpan>
Hixie: ping

[08:36:00.0000] <hsivonen>
Hixie: regarding plain text form submission and almost arbitrary cross-domain POST: the hazard can be neutralized by servers not accepting text/plain POSTs, right?

[11:48:00.0000] <gsnedders>
Lachy: I have no MS-DOS 5 installed :(

[12:57:00.0000] <Hixie>
jwalden: i thnk you misread them

[12:57:01.0000] <Hixie>
hsivonen: yes

[12:57:02.0000] <Hixie>
zcpong

[12:58:00.0000] <jwalden>
Hixie: how so?

[12:59:00.0000] <Hixie>
jwalden: the assert message is the error message shown when the assert expression is false

[12:59:01.0000] <Hixie>
      assert(!s.MIN_VALUE, "attribute is a Number");

[12:59:02.0000] <jwalden>
oh

[12:59:03.0000] <Hixie>
the expression is only false when s.MIN_VALUE is present, thus when it is a Number

[13:00:00.0000] <jwalden>
/me prefers messages of the form "should be" for unambiguity

[13:01:00.0000] <jwalden>
Hixie: except that MIN_VALUE isn't on any object in JS but Number (not numbers, not Number instances), so the test is over-permissive -- !s.toFixed would be better

[13:02:00.0000] <jwalden>
toPrecision, &c.

[13:04:00.0000] <Hixie>
it caught the error in the browser is was trying to catch the error in :-)

[13:04:01.0000] <hsivonen>
Hixie: what was "yes" in response to?

[13:04:02.0000] <Hixie>
17:42 <      hsivonen> Hixie: regarding plain text form submission and almost arbitrary cross-domain POST: the hazard can be neutralized by servers not accepting text/plain  POSTs, right?

[13:09:00.0000] <jwalden>
zounds

[13:14:00.0000] <hsivonen>
Hixie: ok. so in that case, the threat of scripted form POST isn't at all the same as the thread of cross-domain XHR POST without access-control pre-flight

[13:14:01.0000] <Hixie>
hsivonen: few servers if any check the content-type header.

[13:29:00.0000] <hsivonen>
http://www.w3.org/MarkUp/2008/WD-xhtml-access-20080107/


2008-01-08
[18:06:00.0000] <Hixie>
so tempted to test E4X in Acid3

[18:09:00.0000] <jruderman>
eww

[18:09:01.0000] <jruderman>
i'm not a fan of E4X

[18:10:00.0000] <jruderman>
do you test trailing commas in array literals and object literals?

[18:11:00.0000] <Hixie>
yup

[18:12:00.0000] <Hixie>
test 81

[18:12:01.0000] <Hixie>
at least, i do for array literals

[18:12:02.0000] <Hixie>
how should i test it for oject literals?

[18:14:00.0000] <eseidel>
{ "foo": "bar",} ?

[18:15:00.0000] <Hixie>
but how do i test it?

[18:15:01.0000] <Hixie>
what's the failure condition?

[18:15:02.0000] <eseidel>
eval? for a parse error?

[18:15:03.0000] <eseidel>
/me doesn't know

[18:15:04.0000] <Hixie>
oh, there are browsers that have parse errors with that?

[18:15:05.0000] <Hixie>
wow

[18:15:06.0000] <Hixie>
/me tests

[18:16:00.0000] <eseidel>
Hixie: I doubt there are

[18:17:00.0000] <eseidel>
/me doesn't understand what support would mean other than not erroring out

[18:17:01.0000] <Hixie>
/me can't find object literals in es3

[18:20:00.0000] <Hixie>
so uh

[18:20:01.0000] <Hixie>
{a:0,} is illegal

[18:21:00.0000] <Hixie>
safari and opera allow it

[18:21:01.0000] <Hixie>
firefox and ie throw

[18:24:00.0000] <othermaciej>
Hixie: are you sure?

[18:24:01.0000] <othermaciej>
javascript:alert({a:0,})

[18:24:02.0000] <othermaciej>
that works for me in Firefox

[18:25:00.0000] <Hixie>
what does it alert?

[18:25:01.0000] <Hixie>
http://software.hixie.ch/utilities/js/js-eval-window/ for {a:0,} raises a SyntaxError for me

[18:25:02.0000] <othermaciej>
[object Object]

[18:25:03.0000] <othermaciej>
(it's obviously not a parse error)

[18:25:04.0000] <othermaciej>
I think the syntax error might be because it parses it as a block

[18:25:05.0000] <Hixie>
ah indeed

[18:26:00.0000] <othermaciej>
if you put it in parens I bet it works

[18:26:01.0000] <Hixie>
yeah

[18:26:02.0000] <Hixie>
that's what i just did

[18:26:03.0000] <Hixie>
i'm so not going near this in acid3

[18:26:04.0000] <othermaciej>
Safari and Opera probably are doing extra semicolon insertion

[18:26:05.0000] <othermaciej>
when parsing as a block

[18:26:06.0000] <othermaciej>
or something

[18:27:00.0000] <othermaciej>
actually 0, isn't even a valid comma expression

[18:27:01.0000] <othermaciej>
I'm not sure why it parses

[18:27:02.0000] <Hixie>
yeah

[19:38:00.0000] <jwalden>
Hixie, eseidel: ES4 is making the trailing comma in object literals optional -- and furthermore, it's not a spec violation because the spec explicitly allows extensions to what it considers valid syntax

[19:42:00.0000] <othermaciej_>
jwalden: by making the optional, you mean, making it optional for implementations, or optional for code (i.e. mandatory for implementations to support)

[19:44:00.0000] <jwalden>
othermaciej: right now the spec grammar doesn't allow them; ES4 will allow them to be present (but have no semantic effect)

[19:45:00.0000] <othermaciej>
jwalden: by "right now" you mean ES3, right?

[19:45:01.0000] <othermaciej>
and the ES4 grammar will allow them?

[19:45:02.0000] <jwalden>
othermaciej: yes

[19:45:03.0000] <jwalden>
yes

[19:45:04.0000] <jwalden>
allow in the same way that the trailing comma in an array literal is allowed to be present but otherwise has no effect (in the absence of any other trailing commas, that is)

[19:45:05.0000] <jwalden>
so 1 === [1,] and 2 === [1,2,]

[19:46:00.0000] <othermaciej>
/me hopes ES4 has a work-in-progress spec draft to reference soon

[19:46:01.0000] <jwalden>
brendan follows rather more closely than I do; I don't know the state of what's publicly published as of yet

[19:47:00.0000] <jwalden>
er, with .length after those examples

[19:49:00.0000] <othermaciej>
yeah I know how commas in array literals work

[19:49:01.0000] <othermaciej>
and I think everyone now implements trailing commas in object syntax too

[19:51:00.0000] <jruderman>
i think IE still rejects object literals with trailing commas

[19:52:00.0000] <jruderman>
but since it isn't covered by a 2004-or-earlier spec, i guess it's out for acid3

[19:52:01.0000] <jruderman>
too bad, that one annoyed me ;)

[19:56:00.0000] <jwalden>
Opera threw a SyntaxError for awhile; lemme track down the blog post grumbling about it :-)

[19:58:00.0000] <jwalden>
http://my.opera.com/hallvors/blog/show.dml/26650

[20:01:00.0000] <jwalden>
Hixie: oh, on commas: another test which Firefox fails is javascript:alert(1 in [0, , 2] ? "FAIL" : "PASS")

[20:10:00.0000] <othermaciej>
I bet Microsoft's JS compatibility document would be a goldmine of JS bugs in all browsers

[20:10:01.0000] <othermaciej>
(have they posted that publicly anywhere?)

[20:11:00.0000] <othermaciej>
linked here as a PDF: http://blogs.msdn.com/jscript/archive/2007/10/29/ecmascript-3-and-beyond.aspx

[20:15:00.0000] <jruderman>
othermaciej++

[20:16:00.0000] <othermaciej>
I mean, they conveniently documented their bugs for the world to see

[20:16:01.0000] <othermaciej>
so that's handy

[20:17:00.0000] <jruderman>
exactly

[20:20:00.0000] <MacDome>
othermaciej: holy crap, they've documented our bugs too!

[20:22:00.0000] <jwalden>
yeah, that thing was amazing

[20:23:00.0000] <jwalden>
also because it exactly laid out just how much IE's JS sucks :-)

[20:26:00.0000] <othermaciej>
in some cases I think the IE behavior should just be declared correct, but it's hard to tell which way is more of a compat issue sometimes

[20:27:00.0000] <othermaciej>
some of the things they label as "deviations" are actually technically unspecified

[20:27:01.0000] <othermaciej>
perhaps also vice versa

[20:29:00.0000] <othermaciej>
oh, I guess I missed the section break actually

[20:34:00.0000] <jruderman>
what's the highest possible score in the current version of acid3?

[20:35:00.0000] <gavin>
100%

[20:35:01.0000] <gavin>
incomplete tests are treated as passes, afaik

[20:35:02.0000] <gavin>
non-existent, I should say

[20:35:03.0000] <jruderman>
oh, wow, gecko and webkit have a ways to go then ;)

[20:51:00.0000] <Hixie>
jwalden: where in the spec does it say what should happen for that?

[20:52:00.0000] <jwalden>
gnarliness in 11.1.4, sec

[20:58:00.0000] <othermaciej>
Hixie: you should check out the Microsoft compat document I linked

[21:04:00.0000] <jwalden>
https://bugzilla.mozilla.org/show_bug.cgi?id=260106 while I'm tracking through to find the exact details

[21:06:00.0000] <jwalden>
The production Element List: ElementList , ElisionAssignment Expression is evaluated as follows:

[21:07:00.0000] <jwalden>
step 2 is "Evaluate Elision_opt, if not present use the value zero"

[21:07:01.0000] <jwalden>
(insert "_opt " after the first "Elision" two lines ago)

[21:08:00.0000] <jwalden>
and then step 6 calls [[Put]] with arguments (Result(2) + Result(5)) and Result(4)

[21:08:01.0000] <jwalden>
4 calculates the element's value

[21:08:02.0000] <jwalden>
Result(5) is the length of the partially-constructed array

[21:08:03.0000] <jwalden>
Elision is evaluated as "Return the numeric value 1"

[21:09:00.0000] <jwalden>
so an elision shifts all inserted values up an index, but it doesn't result in any value being inserted at the elided index

[21:09:01.0000] <jwalden>
so that index/property is not present, so |index in array| should be false

[21:09:02.0000] <jwalden>
Hixie: ^

[21:23:00.0000] <MacDome>
jruderman: the nightlies are OK at acid3

[21:23:01.0000] <MacDome>
jruderman: there were like 17 fixes or something since 3.0.4

[21:23:02.0000] <MacDome>
jruderman: still awful :)

[21:23:03.0000] <MacDome>
but better than 3.0.4

[21:24:00.0000] <MacDome>
Hixie: the blog comments also list more bugs :)

[21:26:00.0000] <jruderman>
MacDome: cool

[21:29:00.0000] <jruderman>
eep, at 14%, both webkit trunk and firefox trunk hang for a bit

[21:30:00.0000] <jruderman>
webkit trunk gets 71% and firefox trunk gets 67%. not that it means anything, since hixie is taking bug suggestions from both teams ;)

[21:32:00.0000] <jruderman>
it triggers

[21:32:01.0000] <jruderman>
###!!! ASSERTION: ReplaceElementAt(negative index): 'aIndex >= 0', file nsVoidArray.cpp, line 491

[21:32:02.0000] <jruderman>
nice

[21:32:03.0000] <jruderman>
might be https://bugzilla.mozilla.org/show_bug.cgi?id=378969

[21:33:00.0000] <jruderman>
which appears to be a TreeWalker bug

[21:33:01.0000] <jwalden>
jruderman: see the spreadsheet, known

[21:33:02.0000] <jruderman>
the spreadsheet?

[21:34:00.0000] <jwalden>
jruderman: and the "hang" is Hixie triggering GC

[21:34:01.0000] <jwalden>
bug acid3

[21:34:02.0000] <jwalden>
lemme add you to the editor list, actually

[21:40:00.0000] <jwalden>
the instability of the numbering isn't helping things all that much :-)

[21:41:00.0000] <jruderman>
hehe

[21:41:01.0000] <jruderman>
maybe we can convince hixie to give them names instead of numbers?

[21:42:00.0000] <jwalden>
it's also fun sometimes to load it and get a random debugging alert that halts the test :-)

[21:42:01.0000] <jwalden>
possibly

[21:42:02.0000] <jwalden>
although that just means it's harder to find specific tests in the source

[21:43:00.0000] <jwalden>
don't think there's a good solution here no matter how it's cut

[21:43:01.0000] <jwalden>
and this will all be immaterial when it's actually finished

[21:44:00.0000] <jruderman>
wow, that GC thing is evil

[21:44:01.0000] <jruderman>
      var loops = (((new Date()).valueOf() - 1.07e12) / 32e9) * 0x800; // increases linearly over time

[21:45:00.0000] <jwalden>
oh, it's ghastly all right

[21:45:01.0000] <jruderman>
and a kungFuDeathGrip!?!?!?

[21:45:02.0000] <jwalden>
on the other hand...kungFuDeathGrip!

[21:45:03.0000] <jwalden>
haha

[21:46:00.0000] <jwalden>
you can't possibly not love the name

[21:52:00.0000] <Hixie>
jwalden: k

[21:54:00.0000] <Hixie>
jruderman: the tests sometimes get merged, too

[21:54:01.0000] <Hixie>
jruderman: (and more rarely, split)

[21:54:02.0000] <Hixie>
jruderman: (and sometimes removed altogether)

[21:54:03.0000] <jruderman>
k

[21:55:00.0000] <Hixie>
the GC thing is pretty evil, but i like the idea of sliding a perf test for DOM manipulation into the middle of the test there :-)

[21:55:01.0000] <Hixie>
safari does way better on that perf test than firefox at the moment

[21:56:00.0000] <othermaciej>
jwalden: I think Mozilla has that name all over internally

[21:56:01.0000] <jwalden>
Hixie: btw, the parens around |new Date()| aren't needed, as whatever's new'd ends at the first pair of parens

[21:56:02.0000] <othermaciej>
(kungFuDeathGrip)

[21:56:03.0000] <Hixie>
jwalden: interesting

[21:56:04.0000] <Hixie>
othermaciej: yeah, that's where i got the name from

[21:56:05.0000] <othermaciej>
we usually call variables for that same purpose "protect" or "protector" or something

[21:57:00.0000] <Hixie>
kungFuDeathGrip is so much more vivid a variable name

[21:57:01.0000] <Hixie>
jruderman: any idea what test triggers the assert?

[21:57:02.0000] <jwalden>
Hixie: jruderman could tell you all about that (or maybe he should have brendan tell you, seeing as brendan spent so much quality time on such issues somewhat recently) :-)

[21:57:03.0000] <othermaciej>
shich part of the test is secretly a perf test?

[21:57:04.0000] <jwalden>
Hixie: it's the treewalker test with currentNode mutations; the assert doesn't have any bad side effects

[21:57:05.0000] <othermaciej>
*which

[21:58:00.0000] <Hixie>
othermaciej: test 26, the part that attempts to force a GC

[21:58:01.0000] <Hixie>
(and which will do more and more loops with each passing day)

[21:58:02.0000] <jwalden>
or at least that's which one it appears to be based on inspection+stack of the assertion

[21:58:03.0000] <Hixie>
(though i really should increase the number of loops quadratically to take into account moore's law)

[21:59:00.0000] <jruderman>
Hixie: the spreadsheet says which test it is

[21:59:01.0000] <Hixie>
jwalden: k

[21:59:02.0000] <othermaciej>
Hixie: is it because the bug it is testing for fails only when a GC happens?

[21:59:03.0000] <Hixie>
jruderman: there's a spreadsheet?

[21:59:04.0000] <othermaciej>
moore's law does not apply to RAM bandwidth

[21:59:05.0000] <Hixie>
othermaciej: yeah

[21:59:06.0000] <jruderman>
Hixie: http://spreadsheets.google.com/pub?key=pNgBCwWdyRTT2JeiZn4B2Yw

[21:59:07.0000] <jruderman>
Hixie: https://bugzilla.mozilla.org/show_bug.cgi?id=acid3 links to it

[22:00:00.0000] <jwalden>
that bug needs another URL field

[22:00:01.0000] <Hixie>
jruderman: cool

[22:00:02.0000] <jruderman>
jwalden: hah

[22:01:00.0000] <Hixie>
jruderman: the tests from 49 to 80 massively changed numbers recently, btw

[22:01:01.0000] <Hixie>
basicaly bucket 5 is empty right now

[22:01:02.0000] <Hixie>
i merged what was 4 and 5 into 5

[22:02:00.0000] <jruderman>
how do you decide how large each test should be? (wrt splitting / merging)

[22:03:00.0000] <jwalden>
Hixie: the earlier test numbers changed, too, probably a bit less, but I fixed them in the last hour or so :-)

[22:04:00.0000] <Hixie>
jruderman: judgement call, but basically i'd like each test to fail in at least one browser, and the more browsers fail each test the better

[22:04:01.0000] <jruderman>
hah

[22:04:02.0000] <jruderman>
if we fix a bug too soon, will it be removed from acid3 and replaced by something else?

[22:06:00.0000] <Hixie>
you can't fix a bug too soon

[22:07:00.0000] <Hixie>
however, if a test ends up not failing in any browser before the test is done, it might get replaced, if i can find something better

[23:37:00.0000] <kig>
having written my own isPointInPath is proving to be a clairvoyant decision

[23:38:00.0000] <kig>
screw browsers, they can't be trusted anyhow

[02:42:00.0000] <hsivonen>
Hixie: regarding iframe fallback content: should the fallback be expected to be targeted at Netscape 4 or is HTML5 meant to bless Opera-style disabling of iframes?

[02:44:00.0000] <Hixie>
i hadn't really thought about it

[02:44:01.0000] <hsivonen>
hmm. I wonder if someone should write a spec for Gecko's DTD catalog behavior so that the behavior could be considered grandfathered 

[02:44:02.0000] <Hixie>
what difference does it make for you?

[02:45:00.0000] <hsivonen>
Hixie: If the parser has to treat it as CDATA and the validation layer needs to reparse it as markup, the cost/utility ratio of the whole thing is going to be seriously bad

[02:46:00.0000] <hsivonen>
Hixie: it is far easier to either parse it as markup the first time round or to do what is done now: parse as CDATA and not to place any conformance constraints on the text

[02:46:01.0000] <Hixie>
yeah i dunno

[02:46:02.0000] <Hixie>
i'm tempted to just say it shoul be the empty string

[02:47:00.0000] <Hixie>
but i dunno

[02:47:01.0000] <hsivonen>
as for the DTD catalog thing, I have long had an idea shelved away about validator support

[02:47:02.0000] <hsivonen>
that is, I could add a parser mode with Gecko DTD catalog emulation

[02:47:03.0000] <Hixie>
we can't parse as markup the first time around (i.e. we need to have a reparse stage somehow) because otherwise the DOM might not match reality, as it were

[02:47:04.0000] <hsivonen>
but I'm not sure if it would be worthwhile and Good for the Web

[02:48:00.0000] <hsivonen>
Hixie: OK, in that case, do we really care about checking the iframe contents?

[02:48:01.0000] <Hixie>
but if we allow <script> in the <iframe> contents, we're screwed in oh so many ways

[02:48:02.0000] <Hixie>
i dunno

[02:48:03.0000] <hsivonen>
wow. good point

[02:48:04.0000] <Hixie>
if we don't care, i'm just gonna require it be blank

[02:49:00.0000] <Hixie>
is <iframe> support widespread enough?

[02:49:01.0000] <Hixie>
(lynx, etc?)

[02:49:02.0000] <hsivonen>
can authors put a <script> in there and annoy Opera users who disable iframes?

[02:49:03.0000] <Hixie>
i have no idea what oepra does

[02:50:00.0000] <hsivonen>
Hmm. I haven't used Lynx for real browsing in a long time

[02:50:01.0000] <othermaciej>
DTD catalog?

[02:50:02.0000] <othermaciej>
/me read the logs

[02:50:03.0000] <othermaciej>
I guess I should google it

[02:50:04.0000] <Hixie>
othermaciej: the list of bugs that microsoft put out has some bugs (things that they claim are bugs but are in fact not)

[02:51:00.0000] <hsivonen>
othermaciej: lxr.mozilla.org :-)

[02:51:01.0000] <othermaciej>
Hixie: you should wait for their list of bugs, SP1

[02:51:02.0000] <Hixie>
hehe

[02:51:03.0000] <hsivonen>
othermaciej: Gecko hard-wires certain public IDs to certain bogo-DTDs that only list character entities

[02:52:00.0000] <hsivonen>
othermaciej: and real Web content out there depends on it

[02:52:01.0000] <othermaciej>
awesome

[03:02:00.0000] <hsivonen>
othermaciej: http://lxr.mozilla.org/seamonkey/source/parser/htmlparser/src/nsExpatDriver.cpp#285 that's the magic list

[03:03:00.0000] <hsivonen>
FWIW, I don't like the "resource://gre/res/mathml.css" bit at all

[03:05:00.0000] <othermaciej>
hsivonen: hey, it's your fault!

[03:06:00.0000] <othermaciej>
(WebKit has some hardcoded suport for HTML entities in XHTML content, probably because of that)

[03:06:01.0000] <hsivonen>
othermaciej: my fault?

[03:06:02.0000] <othermaciej>
oh, sorry

[03:06:03.0000] <othermaciej>
I saw you listed as the only "Contributor"

[03:07:00.0000] <othermaciej>
and forgot that there's also an "Original Code" statement

[03:08:00.0000] <othermaciej>
it's heikki's fault (whoever that is, sounds Finnish though)

[03:09:00.0000] <Hixie>
http://markus.fischer.name/about/archives/2005/10/17/ie-having-fun-with-js-and-links/

[03:10:00.0000] <Hixie>
weirdest IE7 bug ever

[03:11:00.0000] <othermaciej>
Hixie: holy toledo

[03:12:00.0000] <Hixie>
that's going in acid3 for sure

[03:12:01.0000] <OmegaJunior>
Yet another reason to hate MSIE

[03:14:00.0000] <othermaciej>
I don't even understand how that bug could happen

[03:14:01.0000] <othermaciej>
it has to be somehow on purpose

[03:15:00.0000] <Hixie>
that's now test 99

[03:17:00.0000] <Hixie>
19 bugs to go

[03:27:00.0000] <Hixie>
ok, i have 16 tests to write

[03:27:01.0000] <Hixie>
all on one topic

[03:27:02.0000] <Hixie>
i could cave and test svg

[03:27:03.0000] <Hixie>
or i could test a more modern spec that we really want implemented

[03:28:00.0000] <Hixie>
or i could test e4x

[03:28:01.0000] <Hixie>
any preferences?

[03:28:02.0000] <Hixie>
i could test xbl2 :-)

[03:29:00.0000] <othermaciej>
is e4x a desirable thing to have implemented?

[03:29:01.0000] <othermaciej>
we don't consider WebKit's lack of support a bug

[03:30:00.0000] <Philip`>
/me almost wants DOM3 XPath

[03:31:00.0000] <othermaciej>
unfortunately that one is only a Note

[03:31:01.0000] <Philip`>
The previous version is a CR, though

[03:32:00.0000] <othermaciej>
so Note was just the way to abandon it before REC?

[03:32:01.0000] <othermaciej>
I'm actually not sure if WebKit's XPath API is that one or only the nonstandard IE stuff

[03:33:00.0000] <Philip`>
"The W3C DOM Working Group participants do not expect to provide two interoperable implementations of this module, /using the same binding/."

[03:33:01.0000] <Philip`>
Not quite sure what that means

[03:33:02.0000] <hsivonen>
guessing from package names, Xerces2-J has some kind of XPath DOM API

[03:33:03.0000] <othermaciej>
I guess they expected one Java one and one JS one

[03:33:04.0000] <hsivonen>
I'd expect it to be based on some kind of W3C document

[03:34:00.0000] <Philip`>
/me doesn't really care what the API is, as long as it can do "find all elements matching this string" without much effort, and it seems that at least Firefox and Opera can do that in the same way

[03:38:00.0000] <othermaciej>
I think every major browser has some kind of XPath API

[03:38:01.0000] <othermaciej>
I am not sure to what extent they match

[03:53:00.0000] <Hixie>
i like e4x as a compile-time-syntax-checked replacement for innerHTML

[04:00:00.0000] <Hixie>
i have no idea what to test with these 16 tests

[04:00:01.0000] <othermaciej>
you mean JS-parse-time instead of HTML-parse-time (on actual use of innerHTML) syntax-checked?

[04:00:02.0000] <othermaciej>
(cause there is no compile time)

[04:00:03.0000] <Hixie>
yeah

[04:00:04.0000] <Hixie>
when the JS is compiled

[04:01:00.0000] <othermaciej>
JS parse failures tend to be more catastrophic than HTML syntax errors

[04:01:01.0000] <Hixie>
right, which is why you want to catch them at compile time

[04:02:00.0000] <Hixie>
either the script compiles, or it doesn't

[04:02:01.0000] <othermaciej>
if hard failure is desirable, then at least XML's model makes the cause of the failure obvious

[04:03:00.0000] <othermaciej>
script parse errors make the page break with no meaningful error message displayed normally

[04:03:01.0000] <Hixie>
manipulating markup as strings is a horrible way to work

[04:03:02.0000] <othermaciej>
that's true

[04:03:03.0000] <Hixie>
manipulating markup as DOM objects is a horrible way to work

[04:03:04.0000] <Hixie>
E4X provides a third option, that imho is not quite so horrible

[04:04:00.0000] <Hixie>
(however, given its status as quite controversial, it obviously doesn't belong in acid3)

[04:04:01.0000] <Hixie>
i don't know what to test in bucket 5 though

[04:04:02.0000] <othermaciej>
but using XML literals as part of a language syntax is gross

[04:04:03.0000] <Hixie>
eh

[04:04:04.0000] <othermaciej>
and no one implements it in a useful way anyway

[04:04:05.0000] <Hixie>
no more gross than using numeric literals, imho

[04:05:00.0000] <Hixie>
i agree that mozilla's implementation is dumb

[04:05:01.0000] <othermaciej>
<, = and " already have meaning in JS

[04:05:02.0000] <Hixie>
svg is the only thing i can think of and i really don't want to test the svg dom in acid3

[04:05:03.0000] <Dashiva>
heredoc xml next stop?

[04:05:04.0000] <othermaciej>
something with a clear delimiter would be better

[04:06:00.0000] <othermaciej>
so I'd actually be more excited about heredoc xml

[04:06:01.0000] <othermaciej>
Hixie: do you have XML tests?

[04:06:02.0000] <Hixie>
othermaciej: like what?

[04:06:03.0000] <othermaciej>
(XML DOM on actual XML documents)

[04:07:00.0000] <othermaciej>
presence of HTML dom on XHTML documents might be interesting too

[04:07:01.0000] <othermaciej>
although that's kind of in the "gratuitously mean to IE" category

[04:08:00.0000] <Hixie>
i have some dom2 xml tests

[04:09:00.0000] <Hixie>
that use the xhtml namespace

[04:09:01.0000] <Hixie>
i'm not sure i can come up with 16 more

[04:10:00.0000] <hsivonen>
othermaciej: I don't think it is gratuitously mean

[04:11:00.0000] <othermaciej>
ah, shit, Mac IE somehow made itself the default application for XHTML on my new laptop

[04:11:01.0000] <hsivonen>
othermaciej: I had a good-faith script that wasn't trying to expose any bugs that failed in WebKit in XHTML, because WebKit didn't do all the HTML DOM stuff on the XHTML side

[04:11:02.0000] <othermaciej>
yeah, I'm trying to remember if we fixed that yet in trunk

[04:11:03.0000] <othermaciej>
and whether it was broken in Safari 3

[04:12:00.0000] <hsivonen>
the great December content model change leads to the deletion of a lot of code...

[04:13:00.0000] <Hixie>
well i'll work something out tomorrow for this remaining bucket of 16 tests

[04:13:01.0000] <Hixie>
(suggestions welcome)

[04:14:00.0000] <Hixie>
nn

[04:18:00.0000] <othermaciej>
yeah, HTMLDocument in xhtml works in WebKit trunk (though not in Safari 3)

[04:22:00.0000] <hsivonen>
othermaciej: nice. thanks

[04:23:00.0000] <othermaciej>
(we did support HTML element interfaces on xhtml elements already)

[04:26:00.0000] <othermaciej>
the way the E4X spec is written is weird

[04:30:00.0000] <hsivonen>
fun fun fun: fixing all the test cases that testing bimorphic stuff

[06:00:00.0000] <zcorpan>
wtf... https://www.tdnam.com/trpItemListing.aspx?miid=10238899

[06:02:00.0000] <othermaciej>
did whatwg itself formerly have the .com?

[06:03:00.0000] <zcorpan>
don't think so

[06:18:00.0000] <zcorpan>
Hixie: please test svg in acid3... not necessarily the weird svg udom parts, but basic support and support for svg in <img> and 'background' would be nice

[06:20:00.0000] <zcorpan>
without svg in 'background', svg is basically unusable for layout purposes

[06:21:00.0000] <zcorpan>
this is way more requested by authors than e4x

[06:21:01.0000] <zcorpan>
(in fact, i think no-one even cares about e4x)

[06:22:00.0000] <zcorpan>
see e.g. http://www.sitepoint.com/forums/showthread.php?t=523315

[06:25:00.0000] <othermaciej>
zcorpan: using SVG in CSS backgrounds is pretty bleeding-edge and not clearly justified by any spec that has ever reached CR

[06:25:01.0000] <othermaciej>
zcorpan: that being said I do think it is a really good feature

[06:26:00.0000] <OmegaJunior>
I think internal builds of Opera 9.5 have an implementation of exactly that.

[06:27:00.0000] <othermaciej>
WebKit trunk has an implementation of it as well

[06:28:00.0000] <Philip`>
/me wondered why his page was using the incorrect font size inside <table>s, and then realised he had written <DOCTYPE HTML>

[06:28:01.0000] <othermaciej>
(ain't just internal)

[06:28:02.0000] <Philip`>
(so quirks mode is not much fun even when I'm specifically trying to avoid using it)

[06:29:00.0000] <Philip`>
OmegaJunior: Non-internal Opera 9.5 alphas/betas have that too

[06:31:00.0000] <othermaciej>
WebKit even suports svg images in -webkit-border-image

[06:32:00.0000] <Philip`>
Does WebKit support SVG images in canvas drawImage?

[06:32:01.0000] <othermaciej>
if they are in an <img> tag I'm sure it does

[06:33:00.0000] <Philip`>
Including SVG with foreignContent?

[06:33:01.0000] <othermaciej>
I don't think it supports drawImage of an <svg> element

[06:33:02.0000] <othermaciej>
foreignObject you mean

[06:33:03.0000] <Philip`>
Oops, yes

[06:33:04.0000] <othermaciej>
I don't see why that wouldn't work, though I haven't tried it myself

[06:34:00.0000] <othermaciej>
it can certainly render svg in an img or as a CSS image if it embeds non-SVG markup

[06:34:01.0000] <othermaciej>
I guess you could use that as a very cheesy way to get text rendering in <canvas>

[06:35:00.0000] <Philip`>
Does it attempt to avoid security issues, like by preventing toDataURL / getImageData after you've drawn an SVG image?

[06:35:01.0000] <Philip`>
If not, that may be a potential problem :-)

[06:36:00.0000] <othermaciej>
we don't have toDataURL or getImageData (yet)

[06:36:01.0000] <othermaciej>
so not an issue

[06:36:02.0000] <Philip`>
Oh, good point

[06:36:03.0000] <othermaciej>
I imagine SVG images would be subject to the same security restrictions for those purposes as regular type images

[06:40:00.0000] <Philip`>
othermaciej: That might be inadequate, because it'd still let you e.g. move an <input type=file> into a same-origin SVG image and then render it onto a canvas and read the pixels to extract the file path and circumvent the browser's attempts at privacy

[06:40:01.0000] <OmegaJunior>
Hmm... can svg be used to draw real 3d objects? or are they mere simulations in 2d? I can imagine a conflict.

[06:41:00.0000] <OmegaJunior>
A conflict with getContext()

[06:41:01.0000] <othermaciej>
Philip`: you can read the value of <input type="file"> through the DOM

[06:42:00.0000] <othermaciej>
noted however that there may be security ieeus

[06:43:00.0000] <othermaciej>
OmegaJunior: it doesn't have real 3d, though you can sort of simulate it by moving polygons around in 2d

[06:43:01.0000] <OmegaJunior>
Good

[06:43:02.0000] <Philip`>
othermaciej: Oh, maybe I'm misremembering - Opera only returns the filename (not the displayed path) but FF and IE6 still seem to return the whole path

[06:44:00.0000] <othermaciej>
Safari doesn't even display the full path

[06:44:01.0000] <othermaciej>
(it doesn't have a type-in box for <input type="file">)

[06:45:00.0000] <Philip`>
(Hmm, Opera 9.2 draws a peculiar button for http://software.hixie.ch/utilities/js/live-dom-viewer/?%3C!DOCTYPE%20html%3E%0D%0A%3Cbutton%3ETest%20test_test_test_test%3C%2Fbutton )

[06:45:01.0000] <Philip`>
OmegaJunior: I'm not sure what you mean by "a conflict"

[06:47:00.0000] <Philip`>
(http://apike.ca/prog_svg_threed.html says "SVG has no 3D support. In fact, it is almost anti-3D.", which sounds possibly true - I don't remember seeing anything more advanced than a 3D cube in SVG)

[06:47:01.0000] <OmegaJunior>
Well, the mozilla tutorial I'm reading says only the 2d context is defined. The 3d context is theoretical at best. If SVG is used to display something in a canvas element, it will need to get a context. Following the tutorial, it will be a 2d context. However, if the SVG has 3d, it needs a 3d context. Hence the conflict. Since SVG does not do 3d, the conflict does not exist.

[06:49:00.0000] <Philip`>
OmegaJunior: Even if SVG did 3D things, SVG would describe how it's converted into a flat rectangular 2D bitmap, and that bitmap can be drawn onto a 2D canvas, so there wouldn't be a problem

[06:49:01.0000] <OmegaJunior>
Exactly.

[06:50:00.0000] <Philip`>
(The 3D context isn't really theoretical, given that there's at least two attempted implementations :-) )

[06:50:01.0000] <OmegaJunior>
Really? Awesome.

[06:50:02.0000] <Philip`>
http://blog.vlad1.com/2007/11/26/canvas-3d-gl-power-web-style/

[06:50:03.0000] <othermaciej>
this has some neat pseduo-3d in svg: http://www.lutanho.net/svgvml3d/index.html

[06:50:04.0000] <Philip`>
http://my.opera.com/timjoh/blog/2007/11/13/taking-the-canvas-to-another-dimension

[06:51:00.0000] <OmegaJunior>
OpenGL did come to mind, yes. Especially for web games.

[06:51:01.0000] <othermaciej>
(the rubik's cube one is neat)

[06:53:00.0000] <Philip`>
othermaciej: Aha, that looks better than plain cubes :-)

[06:53:01.0000] <Philip`>
It flickers a bit nastily in Firefox while redrawing, though

[06:53:02.0000] <othermaciej>
http://www.kevlindev.com/geometry/3D/js3d/index.htm

[06:54:00.0000] <Philip`>
Bah, wireframe is cheating :-p

[06:58:00.0000] <zcorpan>
/me would appriciate feedback about http://simon.html5.org/specs/xml-stylesheet5 from webkit and mozilla people

[07:01:00.0000] <othermaciej>
is it substantively different from the current xml-stylesheet PI spec?

[07:02:00.0000] <zcorpan>
it is pretty much aligned with firefox/ie/safari, actually

[07:03:00.0000] <zcorpan>
the parsing part is aligned mostly with firefox, i think

[07:03:01.0000] <othermaciej>
I'm not sure what this means: "When the UA is to stop parsing, it must return pseudo-attributes so that the appropriate semantics can be applied."

[07:03:02.0000] <othermaciej>
I think the syntax would be better expressed as a BNF grammar than a state machine

[07:04:00.0000] <zcorpan>
yeah, i don't know how to phrase that sentence

[07:04:01.0000] <zcorpan>
ok. but can BNF express how to handle error conditions?

[07:05:00.0000] <zcorpan>
for some errors you just drop the pseudo-attribute, for others you ignore the rest of the PI

[07:07:00.0000] <zcorpan>
stop parsing means basically... stop the state machine and return pseudo-attributes. is that clearer?

[07:10:00.0000] <othermaciej>
I'm not sure "return" is the right word

[07:10:01.0000] <othermaciej>
writing this in such an operational style makes it hard for me to follow

[07:10:02.0000] <othermaciej>
may review more later but not right now

[07:10:03.0000] <zcorpan>
ok

[07:10:04.0000] <zcorpan>
thanks

[07:11:00.0000] <othermaciej>
(gotta admit ?xml-styleshet? PI interop isn't that high on my personal priority list)

[07:11:01.0000] <zcorpan>
yeah, but the parsing part also applies to access-control and xbl

[07:12:00.0000] <othermaciej>
it would really be better if XML PIs applied XML-style draconian parsing to PI pseudo-attributes, just as if they were XML element attributes

[07:13:00.0000] <othermaciej>
that would be more consistent

[07:13:01.0000] <othermaciej>
I don't know if that creates compatibility issues for ?xml-stylesheet? specifically

[07:15:00.0000] <Philip`>
Does anyone know how current content relies on PI parsing?

[07:16:00.0000] <othermaciej>
I don't think there is that much CSS-styled XML on the web in general

[07:16:01.0000] <othermaciej>
(I guess the PI can also request XSLT processing, which may be more common; dunno)

[07:17:00.0000] <Philip`>
/me sees things like <?xml:namespace prefix = o ns = "urn:schemas-microsoft-com:office:office" />

[07:17:01.0000] <Philip`>
(in text/html documents)

[07:19:00.0000] <othermaciej>
looks like that syntax might be part of an obsolete version of Namespaces in XML: http://www.w3.org/TR/1998/WD-xml-names-19980518

[07:20:00.0000] <othermaciej>
nowadays use of that syntax would not be namespace-well-formed

[07:22:00.0000] <OmegaJunior>
Knowing the vendor, that means our parsers and validators have to allow for their kinks.

[07:22:01.0000] <othermaciej>
if that's in text/html content I am not sure it has much bearing on what needs to be allowed in XML

[07:23:00.0000] <OmegaJunior>
Hopefully none

[07:26:00.0000] <Philip`>
<?xml version=\"1.0\" encoding=\"UTF-8\"?>

[07:26:01.0000] <Philip`>
<?xml-stylesheet type=\"text/css\" href=\"css/standard.css\"?>

[07:26:02.0000] <Philip`>
on http://www.kletterzentrum-badtoelz.de/ though that redirects immediately away from there anyway

[07:26:03.0000] <Philip`>
Does xml-stylesheet ever do anything in text/html?

[07:27:00.0000] <OmegaJunior>
Yes, it works perfectly in Internet Explorer 

[07:27:01.0000] <OmegaJunior>
(Tried it)

[07:28:00.0000] <OmegaJunior>
Remember that Internet Explorer doesn't do application/xhtml+xml, so anything that resembles html or xhtml will have to be sent as text/html

[07:28:01.0000] <OmegaJunior>
Hopefully this will change with MSIE8, but I doubt it.

[07:28:02.0000] <OmegaJunior>
As a result, MSIE renders xhtml as tag soup.

[07:32:00.0000] <Philip`>
http://philip.html5.org/data/pis.html is everything starting with "<?" in ~15K pages

[07:41:00.0000] <Philip`>
http://www.montere.it/ - <!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.1 Transitional//IT" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd"> - hmm, not quite the right idea there

[07:52:00.0000] <kig>
hmm

[07:59:00.0000] <kig>
this'll be either difficult, slow, or a pain

[08:00:00.0000] <Philip`>
That's not too bad, if it's 'either' rather than all

[08:00:01.0000] <kig>
(drawing and animating a full-screen svg on canvas)

[08:01:00.0000] <kig>
difficult: only redraw portions that have changed

[08:01:01.0000] <kig>
slow: redraw everything

[08:02:00.0000] <kig>
pain: manually split document into layers, render them into images and hope that the html image renderer is faster than the canvas one

[08:03:00.0000] <Philip`>
Given the performance of background-position:fixed, I don't think I'd trust the browser to render layers fast

[08:04:00.0000] <Philip`>
(at least when the layers are moving relative to each other)

[08:04:01.0000] <Lachy>
wow, what a great example of why RDFa is a bad idea. http://www.w3.org/QA/2008/01/rdfa_and_html_imagemap.html - That's so complex and unnecessary. The SVG effect could be done entirely without the RDFa

[08:06:00.0000] <Philip`>
Lachy: The SVG effects *is* done entirely without the RDFa

[08:06:01.0000] <Philip`>
(or at least I can't see any RDFa bits in the XSLT code)

[08:09:00.0000] <hsivonen>
http://dubinko.info/blog/2008/01/07/yahoo-introduces-mobile-xforms/ is that a multi-UA thing or using a W3C spec as part of a single-UA system (like, e.g., Joost)?

[08:11:00.0000] <Lachy>
Philip`, yes, I know. That's why I said the RDFa wasn't necessary. It's just there as useless metadata

[08:16:00.0000] <hsivonen>
if a metadatum falls in the forest and there's no one to interpret it, is it a metadatum?

[08:17:00.0000] <Philip`>
Yes by definition, sine you already said it was a metadatum :-)

[08:17:01.0000] <Philip`>
*since

[08:19:00.0000] <Lachy>
hsivonen, I think that should be "if a metadatum falls in the forest and there's no one to interpret it, is it [useful?]"

[08:21:00.0000] <Philip`>
I assume the problem comes from saying "I'd like a way to say, "this area of the image depicts the person who is the primaryTopic of http://danbri.org/".", rather than e.g. "I'd like a way to say "who is in this picture?" so that I can stalk people by finding all the photos (on a certain subset of web sites) that are linked to their homepage"

[08:24:00.0000] <Philip`>
but maybe that's just a simple fundamental difference of perspective, about the value of providing data without prior knowledge of how the data will be used

[08:31:00.0000] <zcorpan>
othermaciej: opera does drocanian parsing for xml-stylesheet currently

[08:31:01.0000] <zcorpan>
but i don't think it makes sense

[08:31:02.0000] <zcorpan>
what do you do when you create or update the PI with script?

[08:32:00.0000] <zcorpan>
should the xml processor have to know about xml-stylesheet, access-control and xbl? and other future PIs that might use pseudo-attributes?

[08:34:00.0000] <zcorpan>
speaking of which... i think i'll move the requirement about the placement of the PI from the parsing rules to the processing rules... since future PIs with pseudo-attributes might want to allow them in other places than in the prolog

[08:34:01.0000] <hsivonen>
zcorpan: by definition, no, but the next layer should

[08:36:00.0000] <zcorpan>
hsivonen: ok, wrongly phrased... why should the well-formedness of a given document depend on whether the UA supports xml-stylesheet, access-control or xbl?

[08:38:00.0000] <hsivonen>
zcorpan: well-formedness shouldn't. but rephrasing: why should YSoD depend on support for a particular PI

[08:39:00.0000] <hsivonen>
the Web is probably better off if there are as few YSoD reasons as possible

[08:39:01.0000] <zcorpan>
indeed

[08:39:02.0000] <zcorpan>
that's why my spec removes fatal errors for PIs

[08:39:03.0000] <hsivonen>
zcorpan: you could, though, be Draconian about what causes a PI to be rejected from further processing

[08:40:00.0000] <zcorpan>
yes

[08:40:01.0000] <zcorpan>
<?xml-stylesheet =="" href="a"?> is the same as <?xml-stylesheet?>

[09:47:00.0000] <kig>
Philip`: http://glimr.rubyforge.org/cake/canvas.html#DesignSketching <- the "pain" approach, not that it's much faster than the "slow" approach (20fps vs 10fps. though, if that were 60fps vs 30fps...)

[09:51:00.0000] <Philip`>
kig: Opera 9.2 really isn't very good at this :-(

[09:51:01.0000] <kig>
i can imagine

[09:55:00.0000] <kig>
might be easiest to make the site an svg document with html on top and a clipped canvas. but. uh. 

[09:56:00.0000] <kig>
that's not going to look nice in firefox

[09:56:01.0000] <Philip`>
Why not?

[09:57:00.0000] <kig>
because firefox doesn't double-buffer svgs

[09:58:00.0000] <Philip`>
Ah

[09:58:01.0000] <kig>
(and i'd like to stay as far away from the <object>-tag as humanly possible)

[09:59:00.0000] <Philip`>
You could just use a PNG ;-)

[10:07:00.0000] <kig>
or wmv..

[10:07:01.0000] <Philip`>
You can use APNG to do things like slowly-fading-out trails, in a not-too-inefficient way

[11:35:00.0000] <kig>
creating fewer arrays per frame sure reduces GC runs 

[11:36:00.0000] <kig>
reusing a matrix arrays now..

[11:36:01.0000] <kig>
-a

[11:40:00.0000] <Philip`>
You should avoid the GC entirely by packing all your data structures into integers

[11:41:00.0000] <Philip`>
Store two 10.5 fixed-point values per variable, use three variables per matrix, and it'll work perfectly!

[11:41:01.0000] <kig>
ssss

[11:41:02.0000] <kig>
sounds like a plan!

[11:42:00.0000] <kig>
i thought of writing a temp object allocator

[11:42:01.0000] <Philip`>
(How are you detecting the number of GC runs?)

[11:43:00.0000] <kig>
by watching the fps histogram when running an animation and "hey, it's 0.5fps now, go GC go!"

[11:44:00.0000] <Philip`>
Oh, okay

[11:44:01.0000] <Philip`>
Perhaps not quite the most scientific method :-)

[11:46:00.0000] <kig>
i could automate the fps-watching and draw pretty graphs titled "fps glitches per minute per browser"

[11:46:01.0000] <kig>
or maybe not bother

[11:46:02.0000] <Philip`>
I was thinking more of getting the GC system itself to tell you what it's doing

[11:46:03.0000] <Philip`>
/me goes away a bit

[11:46:04.0000] <kig>
that'd be harder :|

[11:52:00.0000] <kig>
temp array allocator: free-stack and reserved-list, alloc : function() { var a = free.pop(); reserved.push(a); },   free : function(a) { reserved.deleteFirst(a); maybeClear(a); free.push(a); }; all the joys of C with none of the performance 

[12:20:00.0000] <Philip`>
I think I got useful GC numbers out of SpiderMonkey when embedding it into some other application, without too much bother, so perhaps Firefox could be modified a bit to report some numbers

[12:20:01.0000] <Philip`>
(or maybe it's easier to just use DTrace or something, except I haven't got a clue how to use that)

[12:29:00.0000] <gsnedders>
Philip`: DTrace for what? JS?

[12:30:00.0000] <Philip`>
gsnedders: Yes

[12:30:01.0000] <Philip`>
(particulary garbage collection)

[12:31:00.0000] <gsnedders>
Philip`: there's a patch for SpiderMonkey out there somewhere, IIRC

[12:31:01.0000] <gsnedders>
(which of course requires an OS that supports DTrace)

[12:32:00.0000] <Philip`>
(It's not like many people have Solaris desktops, so you might as well just say "OS X" :-p )

[12:34:00.0000] <gsnedders>
Only Leopard :P

[12:34:01.0000] <gsnedders>
And only OpenSolaris based Solaris builds :P

[12:34:02.0000] <gsnedders>
(or is DTrace in Solaris 10?)

[12:34:03.0000] <gsnedders>
/me looks up

[12:34:04.0000] <gsnedders>
seemingly yes

[12:36:00.0000] <Philip`>
Seems it was in Solaris 10 and not in 9

[12:37:00.0000] <Philip`>
except http://www.usenix.org/event/usenix04/tech/general/full_papers/cantrill/cantrill_html/ was before Solaris 10 was released, apparently

[12:37:01.0000] <Philip`>
(and says it was publicly available at that time)

[12:54:00.0000] <kig>
Philip`: btw, happen to know a way to do an in_fill check for a bezier path?

[13:00:00.0000] <eseidel>
Philip`: I think http://apike.ca/prog_svg_threed.html  is broken.  I think it depends on broken ASV behavior (of running all scripts *after* the document fully loads)

[13:03:00.0000] <Philip`>
kig: I guess you could do the non-zero-winding thing just with line/Bezier intersections, like http://www.kevlindev.com/gui/math/intersection/Intersection.js intersectBezier3Line, though that sounds a bit inefficient

[13:03:01.0000] <eseidel>
Philip`: Opera, FF and Safari all fail with that SVG

[13:03:02.0000] <eseidel>
Philip`: if you believe it's a browser error, we'd love to see a bug filed

[13:04:00.0000] <Philip`>
eseidel: Hmm, I thought I remembered seeing it working in a sensible browser at some point in the past

[13:04:01.0000] <kig>
Philip`: thanks, it isn't really speed-critical as i can ditch most paths with a bbox check

[13:06:00.0000] <Philip`>
eseidel: but I can't get it to work in any browser now, so I'll guess the code is just broken

[13:06:01.0000] <eseidel>
Philip`: it might work in IE+ASVG

[13:06:02.0000] <eseidel>
ASV, rather

[14:34:00.0000] <Philip`>
/me wonders how best to handle multiple lights in GLSL

[14:49:00.0000] <jgraham>
/me notes the main network in his department is entirely Solaris-on-the-desktop (though I think they are all running Solaris 9)

[14:57:00.0000] <Hixie>
zcorpan: svg-in-img and svg-in-background are not scripting tests

[14:58:00.0000] <kig>
re: JS GC tracking, there any tool to track allocations? want to figure out what i need to fix

[14:59:00.0000] <kig>
might be floats though..

[15:01:00.0000] <eseidel>
Hixie: sadly, he's gone... but they also aren't spec'd yet.  WICD is trying :)

[15:08:00.0000] <Hixie>
WICD is a waste of time

[15:08:01.0000] <Hixie>
how are they not specced?

[15:15:00.0000] <eseidel>
Hixie: where are <img src="foo.svg"> and background: foo.svg spec'd?

[15:15:01.0000] <eseidel>
if not by WICD

[15:16:00.0000] <Hixie>
HTML, SVG, and CSS

[15:16:01.0000] <Hixie>
same as <img src="foo.png"> and background: foo.png is specced by HTML, PNG, and CSS

[15:17:00.0000] <eseidel>
CSS 2.1 does make mention of non-fixed intrinsic sized replaced elements

[15:18:00.0000] <eseidel>
not sure about background: coverage for non-fixed size images, i'd have to go read more

[15:18:01.0000] <Hixie>
there may be holes in CSS/SVG/HTML

[15:18:02.0000] <Hixie>
in which case those specs should be fixed

[15:18:03.0000] <Hixie>
but that doesn't mean adding a whole new spec

[15:18:04.0000] <Hixie>
that's just retarded


2008-01-09
[18:36:00.0000] <roc>
Philip`, gsnedders: Spidermonkey dtrace instrumentation is actually in Mozilla trunk now I believe

[18:49:00.0000] <takkaria>
I think webkit should have a lower pass rate when acid3 is released than firefox does, because otherwise Hixie is clearly just making Apple look good after the Ogg fiasco

[18:51:00.0000] <Hixie>
safari looks like crap on acid3, compared to firefox :-)

[18:52:00.0000] <roc>
Hixie should accept testcases from anyone. Browser vendors and fanboys compete to make other browsers look bad, Hixie quickly builds the most complete test suite the world has ever seen

[18:55:00.0000] <Hixie>
roc: i was seriously thinking of posting a blog entry saying that bucket 5 was going to be open to the 16 best tests anyone could come up with

[18:55:01.0000] <Hixie>
roc: and push it to digg, reddit, etc

[18:56:00.0000] <Hixie>
not sure how to collect the tests though

[18:56:01.0000] <jwalden>
hrm

[18:56:02.0000] <jwalden>
/me wonders how much of an IE pile-on that would become

[18:56:03.0000] <Hixie>
i can just say that the tests must show bugs in at least two browsers

[18:56:04.0000] <roc>
people would push the envelope of what should be considered a "test"

[18:57:00.0000] <Hixie>
and i would be the judge of what is a valid test :-)

[18:57:01.0000] <roc>
which browsers? IE and Amaya OK?

[18:57:02.0000] <Hixie>
ie, opera, safari, firefox

[18:57:03.0000] <Hixie>
latest trunk only for safari and firefox

[18:58:00.0000] <Hixie>
i.e. the latest builds i can test

[18:58:01.0000] <othermaciej>
I suspect a lot of the submissions would not be justified by appropriate standards

[18:58:02.0000] <othermaciej>
you'd have to require that submissions cite what standards justify them and give a list of allowed standards or something

[18:58:03.0000] <Hixie>
then they'd get ignored :-)

[18:58:04.0000] <Hixie>
me ignoring the tests is probably easier :-)

[18:59:00.0000] <othermaciej>
I guess it depends on whether you have time to process the flood

[18:59:01.0000] <othermaciej>
and whether it's easy to tell what tests are bogus

[19:04:00.0000] <roc>
I wish we could share more tests. It would be pretty easy to get our reftests running on all browsers

[19:16:00.0000] <othermaciej>
we've copied some tests from Mozilla

[19:16:01.0000] <othermaciej>
movement in the other direction is welcome

[19:16:02.0000] <othermaciej>
though we have a different approach to automated testing

[19:17:00.0000] <jwalden>
image comparisons start to lose when multiple platforms enter the picture

[19:18:00.0000] <jwalden>
and of course the Linux snafu doesn't help either

[19:19:00.0000] <gavin>
"the linux snafu"?

[19:20:00.0000] <jwalden>
what libraries you have, the variety of distros all with their own specific patches, etc.

[21:36:00.0000] <Hixie>
http://www.w3.org/mid/4783BC64.9020607⊙in is so sad

[21:37:00.0000] <Hixie>
that the first two points required a committee meeting to decide is sad

[21:37:01.0000] <Hixie>
that the third point will further lead to people considering the "css working group members" to be some elevated group is sad

[21:38:00.0000] <Hixie>
that the 6th item includes once again talking about the charter and about centering, something that's been discussed for probably more than a decade now, is sad

[21:38:01.0000] <Hixie>
that animation and transitions are considered out of scope is sad

[21:39:00.0000] <Hixie>
and that the working group expect a quality spec to come out of encouraging "people" to "draft text", especially without having a true sense of community around the project, is sad

[21:41:00.0000] <Hixie>
(the saddest part, though, is that if the working group was to see my comments above, they would immediately switch to the defensive)

[22:04:00.0000] <othermaciej>
I'm not sure why they would want dev.w3.org used for an out-of-scope spec

[22:07:00.0000] <othermaciej>
does that mean they want to put it in their next charter?

[22:07:01.0000] <othermaciej>
given the rate of progress in the CSS WG I'm not sure it matters either way

[23:30:00.0000] <MacDome>
kig: are you writing yet another SVG renderer in canvas?

[00:00:00.0000] <kig>
MacDome: it's the same old svg renderer in canvas

[00:00:01.0000] <MacDome>
one you wrote?

[00:00:02.0000] <kig>
yes

[00:01:00.0000] <MacDome>
because there are multiple

[00:09:00.0000] <kig>
i know of canvasvg at least, are there more

[03:09:00.0000] <Philip`>
http://portal.acm.org/citation.cfm?doid=1327452.1327492 - "The indexing system takes as input a large set of documents that have been retrieved by our crawling system, stored as a set of GFS files. The raw contents for these documents are more than 20 terabytes of data"

[03:10:00.0000] <Philip`>
How does that work out? From what I've seen, the mean page size is over 20KB, so 20TB would only be a billion documents, which is off by more than an order of magnitude from the number Google claims to index

[06:12:00.0000] <Philip`>
hsivonen: I interpreted his "I will show this presentation in russian "mirror" committee for ISO, and I would be very thankfull for all remarks." as meaning it hadn't been presented yet, but is planned to be

[06:20:00.0000] <hsivonen>
Philip`: oh. I missed that bit.

[07:19:00.0000] <kig>
/me wonders how to do masks with canvas

[07:52:00.0000] <Philip`>
kig: With clipping?

[07:53:00.0000] <Philip`>
Or, composite the mask and image onto a temporary surface, and then draw that surface back onto the main surface?

[07:55:00.0000] <kig>
latter

[07:55:01.0000] <kig>
clipping is 1-bi

[07:55:02.0000] <kig>
t

[07:56:00.0000] <kig>
and easy since canvas already has clip

[08:03:00.0000] <kig>
source-in :?

[08:04:00.0000] <kig>
got svg clipping paths implemented, including objectBoundingBox

[08:05:00.0000] <kig>
in fact, it's so powerful it breaks the SVG spec :P

[08:05:01.0000] <Philip`>
kig: Do you mean drawing a greyscale mask image (with white for visible bits of mask), then drawing the image on top with source-in?

[08:05:02.0000] <kig>
yes

[08:06:00.0000] <Philip`>
http://lists.whatwg.org/pipermail/whatwg-whatwg.org/2007-March/010608.html has a handy table of operators, so source-in looks the right one for that

[08:07:00.0000] <Philip`>
Oh, I didn't mean greyscale mask image, I meant arbitrarily-coloured image with mask data in the alpha channel

[08:07:01.0000] <kig>
svg: only geometry primitives allowed inside <clipPath>. cake: whatever you like inside <clipPath>

[08:08:00.0000] <Philip`>
/me puts <foreignObject> inside <clipPath>

[08:08:01.0000] <kig>
that's, uh

[08:09:00.0000] <kig>
it'll work, but no foreignObject support so~

[08:10:00.0000] <kig>
foreignObject is yet another input-event-stealing travesty?

[08:11:00.0000] <Philip`>
It usefully lets you embed interactive content

[08:11:01.0000] <Philip`>
which probably means "yes"

[08:34:00.0000] <kig>
the problem is exemplified by having a thin titlebar with a foreign object under it. drag titlebar to move the titlebar and the object. mousemove enters object -> drag stops

[08:37:00.0000] <kig>
solution? explicit drag handling

[08:38:00.0000] <MacDome>
kig: capture?

[08:38:01.0000] <kig>
parent doc doesn't get the event and shouldn't get the event

[08:39:00.0000] <MacDome>
ah

[08:39:01.0000] <kig>
otherwise you can record input events to an iframe etc

[08:45:00.0000] <kig>
a hacky workaround on the browser side would be to: if (firstMouseMoveOverForeign) { passToParent; firstMouseMoveOverForeign = mouseOverParent; } else { nickIt; }

[09:31:00.0000] <zcorpan>
Hixie: yt?

[10:16:00.0000] <hsivonen>
http://en.wikipedia.org/wiki/Wikipedia:Articles_for_deletion/Web_Hypertext_Application_Technology_Working_Group

[10:39:00.0000] <jruderman>
ugh, https://bugzilla.mozilla.org/show_bug.cgi?id=280959#c110

[12:58:00.0000] <zcorpan>
it's unclear to me whether a literal result element is allowed in other places than as the root element... http://www.w3.org/TR/xslt#result-element-stylesheet

[12:58:01.0000] <zcorpan>
i think it is

[12:59:00.0000] <anne-mac>
dude, don't do XSLT; bad :p

[12:59:01.0000] <zcorpan>
:)

[13:08:00.0000] <zcorpan>
i thought inline css with xml-stylesheet was implemented somewhere, but perhaps it wasn't

[13:08:01.0000] <anne-mac>
it sounds like over engineering

[13:09:00.0000] <anne-mac>
though I have advocated for it to be added to Gecko back in the days :)

[13:09:01.0000] <anne-mac>
/me cared about specs starting with an X back then

[13:10:00.0000] <Philip`>
(Like XML5?)

[13:10:01.0000] <Philip`>
(and XMLHttpRequest?)

[13:10:02.0000] <zcorpan>
i'm tempted to define how it should work, but perhaps i shouldn't

[13:10:03.0000] <gsnedders>
Philip`: XMLHttpRequest5? :)

[13:10:04.0000] <anne-mac>
Philip`, renaming either would be bad

[13:11:00.0000] <anne-mac>
like renaming HTML would be bad

[13:11:01.0000] <hsivonen>
anne-mac: JSONRequest?-)

[13:12:00.0000] <Philip`>
(and XBL2?)

[13:13:00.0000] <Philip`>
I guess you must care about slightly more than just the first letter of the name :-p

[13:13:01.0000] <anne-mac>
I tried to make that WBL (wibble), but dhaytt refused

[13:13:02.0000] <anne-mac>
(or wobble)

[13:14:00.0000] <zcorpan>
with the W standing for?

[13:15:00.0000] <zcorpan>
Wobble? :)

[13:15:01.0000] <anne-mac>
Web?

[13:16:00.0000] <zcorpan>
Wobble Binding Language would have been a pretty funny name

[13:22:00.0000] <gsnedders>
not very good at binding, then

[13:22:01.0000] <Philip`>
It's better at bending than binding, I guess

[13:26:00.0000] <zcorpan>
/me finds that <?xml-stylesheet href="#" type="text/xsl"?> ... <xsl:stylesheet id="" ... > works in opera

[13:31:00.0000] <zcorpan>
ok, updated http://simon.html5.org/specs/xml-stylesheet5 . geez, what a sentence... (in the last paragraph in Processing)

[13:32:00.0000] <anne-mac>
i see you copied from HTML5

[13:32:01.0000] <anne-mac>
that has to be revised at some point to cope with the CSSOM

[13:33:00.0000] <zcorpan>
copied what?

[13:33:01.0000] <anne-mac>
in the processing section

[13:34:00.0000] <zcorpan>
aha. yeah

[13:35:00.0000] <anne-mac>
have you checked surrogate characters in Firefox btw for entites?

[13:35:01.0000] <anne-mac>
i think they actually work

[13:35:02.0000] <zcorpan>
i haven't

[13:36:00.0000] <anne-mac>
another copy from HTML5

[13:36:01.0000] <anne-mac>
hah

[13:36:02.0000] <zcorpan>
i plan to update that when html5 is fixed :)

[13:44:00.0000] <zcorpan>
perhaps i should ask the xml core wg if they're interested in this spec

[13:49:00.0000] <gsnedders>
anne-mac: Like you can talk about HTML5 copies :P

[13:49:01.0000] <gsnedders>
Oh, wait…

[13:49:02.0000] <gsnedders>
/me shuts up

[13:49:03.0000] <gsnedders>
:)

[14:59:00.0000] <Hixie>
zcorpan: HERE

[14:59:01.0000] <Hixie>
er

[14:59:02.0000] <Hixie>
here


2008-01-10
[16:12:00.0000] <zcorpan>
Hixie: about <link> pointing to text/html... wouldn't this satisfy the requirements (except being HTTP compliant, perhaps)?: treat text/plain, text/html, text/css and bogus as text/css. this could work for both quirks and standards mode

[16:12:01.0000] <zcorpan>
and still allow for new styling languages to be introduced in the future

[16:45:00.0000] <Hixie>
zcorpan: it certainly would be better.

[22:53:00.0000] <jwalden>
Hixie: I assume you were asking for spec references (beyond just to ensure test correctness) to aid in writing an acid3 guide a la <http://www.webstandards.org/action/acid2/guide/>?

[00:00:00.0000] <Hixie>
jwalden: no, not really

[00:00:01.0000] <Hixie>
jwalden: not sure what i'm gonna do for a guide yet

[02:45:00.0000] <kig>
http://glimr.rubyforge.org/cake/redesign.html that sure is slow and heavy

[03:20:00.0000] <kig>
but 60kB after stripping comments and gzipping (25k js.gz, 35k svg.gz)

[03:24:00.0000] <Philip`>
kig: Slow and heavy and probably not entirely practical, but still a pretty nice demonstration :-)

[03:25:00.0000] <Philip`>
It might be nice to send http://glimr.rubyforge.org/cake/cakenu2.svg with the right content-type, so that it works in proper SVG viewers too

[03:25:01.0000] <Philip`>
Incidentally, the page needs scrolling up/down annoyingly since my screen is too short :-(

[03:25:02.0000] <kig>
have to go bug the admin about the content-type

[03:27:00.0000] <kig>
i had a version that scaled the document to fit the page but i haven't made the html inserts work correctly with it

[03:29:00.0000] <kig>
all of those would be a lot easier to do with plain svg + foreignObjects for the textarea and canvas, heh

[03:34:00.0000] <kig>
width="100%" height="100%", align to bottom-left

[05:21:00.0000] <zcorpan>
Hixie: http://hixie.ch/tests/adhoc/xml/styling/pi/internal/xsl/001.xml and 003 are invalid... they produce malformed output

[05:58:00.0000] <Philip`>
zcorpan: Maybe you could do BNF with error handling sort of vaguely like http://philip.html5.org/misc/xmlπ.txt

[06:02:00.0000] <Philip`>
(That's definitely not correct, but I think it's probably not fundamentally incorrect)

[06:09:00.0000] <Philip`>
(Oh, and entity expansion needs to be added as an extra post-parsing step)

[06:14:00.0000] <zcorpan>
Philip`: interesting

[06:15:00.0000] <zcorpan>
though i'm not sure it's worth rewriting it...

[06:16:00.0000] <zcorpan>
maybe i can have BNF as well in a Writing PIs with pseudo-attributes section, which doesn't deal with error handling

[06:17:00.0000] <Philip`>
It only has to be (re)written once, compared to lots of people reading it, so you should optimise for reads :-)

[06:17:01.0000] <zcorpan>
true... :)

[06:17:02.0000] <Philip`>
I don't know if the BNF is better or worse that the state machine, though

[06:17:03.0000] <Philip`>
(at least when including error handling, which makes the BNF more confusing)

[06:18:00.0000] <zcorpan>
if anything, i think i'm gonna have both, and without the error handling in the BNF

[06:18:01.0000] <Philip`>
(s/that/than/)

[06:19:00.0000] <gsnedders>
/me remembers he was going to email Hixie seeming he's been avoiding me here :P

[06:22:00.0000] <zcorpan>
Philip`: not sure if entity handling can be done as post-parsing without changing the algorithm, since it affects how duplicate pseudo-attrs are handled

[06:23:00.0000] <zcorpan>
<?xml-stylesheet href='&' href='x'?>

[06:24:00.0000] <hsivonen>
Hixie: btw, allowing common attributes on a charset meta a at least a theoretical problem when it comes to converting between HTML and XHTML

[06:24:01.0000] <zcorpan>
oh, i guess it could if dropping duplicates is also done post-parsing

[06:24:02.0000] <hsivonen>
I wonder if I've said that before

[06:24:03.0000] <Philip`>
zcorpan: It can be done after the BNF parsing, and before the bit where it finds the matching productions an sticks them in the array

[06:24:04.0000] <hsivonen>
I get the feeling that I keep rediscovering issues each time a do a review sweep over the spec

[06:24:05.0000] <zcorpan>
Philip`: yeah

[06:25:00.0000] <hsivonen>
is the meta name=dns thingy implemented somewhere?

[06:25:01.0000] <zcorpan>
hsivonen: don't think so

[06:26:00.0000] <hsivonen>
ok

[06:26:01.0000] <hsivonen>
I wonder if it is worth the trouble

[06:26:02.0000] <Philip`>
/me doesn't know how people usually define how to go from a BNF grammar into a useful data structure

[06:27:00.0000] <zcorpan>
Philip`: lack of whitespace between pseudo-attrs should also be a parse error

[06:27:01.0000] <hsivonen>
ooh. <style scoped> has changed substantially

[06:27:02.0000] <Philip`>
zcorpan: Does that parse error do anything at all?

[06:27:03.0000] <zcorpan>
Philip`: no

[06:27:04.0000] <Philip`>
Then why is it a problem to omit it? :-)

[06:28:00.0000] <zcorpan>
Philip`: because it doesn't work in opera, ie and safari, iirc

[06:28:01.0000] <zcorpan>
perhaps i should require it instead

[06:28:02.0000] <Philip`>
I did try to add that in, but then I realised it was hard (because of the "reconsume the current input character") and couldn't be bothered :-p

[06:28:03.0000] <hsivonen>
time to send mail about style scoped...

[06:31:00.0000] <zcorpan>
Philip`: does your BNF do "stop parsing" correctly?

[06:31:01.0000] <Philip`>
(By "hard" I just mean I couldn't work out how to do it nicely; there might still be a nice obvious way that I just haven't seen)

[06:32:00.0000] <zcorpan>
although i guess i could change the parsing rules slightly, it doesn't really matter if = in name stops parsing or not

[06:34:00.0000] <Philip`>
zcorpan: Hmm, no, I think it parses '<?... foo bar...' totally wrong because it'll get the name foo and then skip the WS and then match the b and be an error and then go back around and match the ar as a name

[06:34:01.0000] <Philip`>
...but that's easy enough to fix by adding a 'ANYTHING* EOF' in the 'stop parsing' places, I guess

[06:36:00.0000] <zcorpan>
perhaps it's because i'm not very used to BNF, but i don't see where the holes are... :) seems fragile

[06:37:00.0000] <Philip`>
I'd expect it's possible to automatically prove that it handles every input deterministically

[06:38:00.0000] <zcorpan>
that's good

[06:38:01.0000] <Philip`>
and then use test cases to show that it does what you expect it to do :-)

[06:38:02.0000] <zcorpan>
i'll have a look at this later

[06:38:03.0000] <zcorpan>
thanks for the help :)

[06:39:00.0000] <Philip`>
/me wonders if it's easier to invent a new formal grammar system that does error handling

[06:40:00.0000] <Philip`>
or maybe just a more compact syntax for the English prose state machines that are so popular nowadays

[06:40:01.0000] <anne-mac>
gsnedders, I didn't forget it, I knew you'd fill it in :p

[06:40:02.0000] <gsnedders>
:P

[06:49:00.0000] <Philip`>
(By the way, SFTP to Dreamhost doesn't really like Unicode filenames :-( )

[06:52:00.0000] <gsnedders>
Advance Higher Computing isn't quite as bad as I originally thought! Not only is the course mostly correct(!), but the programming can be done in any language you want!

[06:52:01.0000] <Philip`>
Befunge!

[06:52:02.0000] <gsnedders>
Brainfuck!

[06:53:00.0000] <Philip`>
Perl 6!

[06:56:00.0000] <gsnedders>
/me , realistically, could do with learning C++ better

[06:57:00.0000] <Philip`>
/me likes C++

[06:57:01.0000] <jwalden>
/me suggests whitespace

[06:58:00.0000] <Philip`>
so much so that I've got open a window showing Valgrind logs of memory leaks inside five levels of stack trace lines that just say "?"

[06:58:01.0000] <gsnedders>
that's even worse.

[06:59:00.0000] <Philip`>
Oops, I meant "???", not "?"

[08:01:00.0000] <hsivonen>
hrm. the issue of xml:space in XHTML5 is still not addressed in the spec

[08:02:00.0000] <anne-mac>
?

[08:02:01.0000] <hsivonen>
anne-mac: the XML spec says that it up to the vocabulary spec to say where xml:space is allowed

[08:03:00.0000] <hsivonen>
anne-mac: HTML 5 is silent

[08:03:01.0000] <anne-mac>
that means it's not allowed, no?

[08:03:02.0000] <hsivonen>
anne-mac: yes, and that's bad

[08:03:03.0000] <anne-mac>
/me thinks xml:space is bad

[08:04:00.0000] <hsivonen>
anne-mac: for practical purposes, at least pre, textarea, style and script should allow xml:space='preserve'

[08:04:01.0000] <zcorpan>
i think xml:space should be allowed on all elements in the html namespace

[08:04:02.0000] <hsivonen>
anne-mac: well, in practice, not having xml:space sucks if you edit in e.g. oXygen

[08:05:00.0000] <zcorpan>
actually, i think xml:space should be allowed on all elements, regardless of namespace

[08:05:01.0000] <zcorpan>
(that or drop xml:space :) )

[08:06:00.0000] <anne-mac>
are XML editor allowed to drop inter-element whitespace if there's no DTD present?

[08:06:01.0000] <gsnedders>
/me wonders what anne-mac will rely on me saying next

[08:08:00.0000] <hsivonen>
zcorpan: ok. for now, I'm making xml:space='preserve' a common attribute in XHTML5

[08:08:01.0000] <anne-mac>
seems this only applies to validating XML parsers which is not relevant for XHTML5

[08:08:02.0000] <anne-mac>
/me notes that SVG redefines xml:space to mean something different

[08:08:03.0000] <zcorpan>
anne-mac: i would presume that an editor can do whatever it wants, so long as the result is conforming... no?

[08:08:04.0000] <hsivonen>
anne-mac: in practice, XML editors tamper with whitespace unless you tell them not to

[08:08:05.0000] <hsivonen>
anne-mac: especially if you as the editor to format source

[08:10:00.0000] <anne-mac>
hmm, maybe they should be fixed?

[08:11:00.0000] <hsivonen>
anne-mac: would you remove commands for reindenting source? or would you make the feature have vocabulary-specific knowledge?

[08:14:00.0000] <anne-mac>
the latter

[08:15:00.0000] <anne-mac>
doesn't seem entirely unreasonable given the target audience of the language

[08:17:00.0000] <hsivonen>
does IE7 render some kind of quotation marks for <q> in the standards mode?

[08:17:01.0000] <zcorpan>
hsivonen: no

[08:18:00.0000] <zcorpan>
iirc

[08:18:01.0000] <gsnedders>
no, definitely.

[08:18:02.0000] <hsivonen>
thanks

[08:18:03.0000] <hsivonen>
<font color='...'> is probably more useful than <q>...

[08:20:00.0000] <hsivonen>
"Although there is no formal way to indicate the language of computer code being marked up, authors who wish to mark code elements with the language used, e.g. so that syntax highlighting scripts can use the right rules, may do so by adding a class prefixed with "language-" to the element." when did *that* appear?

[08:30:00.0000] <zcorpan>
http://html5.org/tools/web-apps-tracker?from=1143&to=1144

[08:30:01.0000] <Philip`>
/me wonders if web-apps-tracker can do something like 'svn blame'

[08:31:00.0000] <hsivonen>
zcorpan: thanks. can I get the date of the change from the tracker?

[08:31:01.0000] <zcorpan>
yeah, from the main page... 2007-12-11 04:29

[08:31:02.0000] <hsivonen>
ok. thanks

[08:41:00.0000] <anne-mac>
Philip`, patches accepted

[08:47:00.0000] <gsnedders>
anne-mac: can you set svn:mime-type on the XML5 repo so I can read the spec in the repo itself?

[08:47:01.0000] <anne-mac>
/me is not familiar enough with SVN to configure such things

[08:47:02.0000] <gsnedders>
anne-mac: svn ps svn:mime-type .

[08:48:00.0000] <gsnedders>
hmm

[08:48:01.0000] <gsnedders>
that's not how :\

[08:48:02.0000] <gsnedders>
`svn pe svn:mime-type .`

[08:50:00.0000] <gsnedders>
anne-mac: `svn ps svn:mime-type text/html trunk/specification/Overview.html`

[08:50:01.0000] <gsnedders>
that'll change it.

[08:52:00.0000] <gsnedders>
/me wonders how to define finding the character encoding

[11:04:00.0000] <Lachy>
hmm. this an incredibly complex solution to a problem that actually has an easy, though not quite ideal, solution http://monkey.paularms.com/awesome/almost/reverse-list/

[11:04:01.0000] <Lachy>
<ol><li value="10">item 10 <li value="9">item 9 ... <li value="1">item 1</ol>

[11:12:00.0000] <hsivonen>
gloves!

[11:15:00.0000] <zcorpan>
question: should <ol reverse> be inherited?

[11:15:01.0000] <Lachy>
no

[11:15:02.0000] <Lachy>
well, not if it's a boolean

[11:15:03.0000] <zcorpan>
ah, indeed

[11:35:00.0000] <zcorpan>
so i guess the choise of boolean vs ascending/descending depends on the utility and impl complexity of inheritance

[11:38:00.0000] <zcorpan>
i don't think i would expect it to be inherited. it would change the meaning of a list when it is pasted somewhere else (consider e.g. if you have a <blockquote> in between)

[11:42:00.0000] <jgraham>
/me quite likes the idea of a step attribute but can't think of any truly compelling usecase 

[12:36:00.0000] <zcorpan>
perhaps i should make a tower defence game in <canvas>

[12:38:00.0000] <zcorpan>
...multiplayer

[12:39:00.0000] <Philip`>
...with OpenGL

[12:44:00.0000] <Hixie>
i have been thinking of making one of those, though not with opengl

[13:33:00.0000] <webben>
hsivonen: As per spec, uses of font color=: 1) Making things pretty (but not in any way that CSS couldn't do). Uses of Q: 1) Unambiguously distinguish quotations from direct speech, scare quotes, etc. 2) Unambiguously associate a quotation with its source, for extraction, comparison, or backtracking. 3) CSS-based stylings for quotations, direct speech, and square allow you to repurpose text for different house styles.

[13:34:00.0000] <webben>
hsivonen: Q suffers from IE's implementation, but it's hard unique in that.

[13:36:00.0000] <webben>
Q also suffers from: poor implementations of CSS 2.1 generated content spec in other browsers, the insufficiency of CSS spec for quotation styling (although this is also a problem with raw markup), and the lack of an element for direct speech.

[13:36:01.0000] <webben>
Beyond that, it's alright.

[13:39:00.0000] <webben>
*and scare quotes allow you to repurpose, that should have read.

[13:50:00.0000] <Hixie>
i'm amused that dean edridge, in one thread, tells me that he has self-declared himself my enemy, and then in a later thread he complains that i am ignoring him

[13:52:00.0000] <Hixie>
HAHAHAHAHA

[13:52:01.0000] <Hixie>
/me gets to the e-mail where dean claims we are trying not to upset the xhtml2 wg

[15:16:00.0000] <zcorpan>
/me reads http://krijnhoetmer.nl/irc-logs/xhtml/20080109 ... about CURIEs


2008-01-11
[18:13:00.0000] <Hixie>
acid3 updated a bit

[18:37:00.0000] <eseidel_>
Hixie: I'm confused by the presence of @media in Acid3

[18:37:01.0000] <eseidel_>
didn't media queries get spec'd this summer?

[18:37:02.0000] <eseidel_>
Hixie: http://www.w3.org/TR/css3-mediaqueries/ or was there an earlier @media spec?

[18:42:00.0000] <othermaciej>
eseidel_: non-query media values are much older

[18:42:01.0000] <eseidel_>
sure, but he uses @media

[18:42:02.0000] <othermaciej>
eseidel_: also, http://www.w3.org/TR/2002/CR-css3-mediaqueries-20020708/

[18:42:03.0000] <eseidel_>
@media all { foo: bar; }

[18:43:00.0000] <othermaciej>
(last CR was 2002)

[18:43:01.0000] <eseidel_>
ah

[18:43:02.0000] <eseidel_>
that's the one

[18:44:00.0000] <eseidel_>
othermaciej: however that can't be quite what Hixie was using since that doesn't support ',' syntax

[18:45:00.0000] <eseidel_>
also it rquires ()

[18:45:01.0000] <othermaciej>
"Several Media Queries can be combined in a comma-separated list."

[18:45:02.0000] <othermaciej>
@media screen and (color),

[18:45:03.0000] <othermaciej>
  projection and (color) { ... }

[18:45:04.0000] <othermaciej>
is one of the examples

[18:45:05.0000] <eseidel_>
interesting, the () remain required

[18:46:00.0000] <eseidel_>
so then this should be a CSS parse error, no?

[18:46:01.0000] <eseidel_>
style.appendChild(doc.createTextNode('@media all, all and color { #i { text-transform: uppercase; } }'));                             // matches

[18:46:02.0000] <eseidel_>
since it should be @media all, all and (color) {

[18:47:00.0000] <othermaciej>
I have no idea

[18:51:00.0000] <eseidel_>
othermaciej: I'm pretty sure they are.  even though our error reporting is quite poor in that case.  I updated http://bugs.webkit.org/show_bug.cgi?id=16796 and cc'd hixie

[18:51:01.0000] <eseidel_>
still 2 which we fail.  one due to missing features, and one I'm not sure about

[19:52:00.0000] <Hixie>
eseidel_: media queries were in CR in 2002

[19:52:01.0000] <eseidel_>
Hixie: yes, othermaciej pointed that out

[19:52:02.0000] <eseidel_>
they re-cr'd in 07?

[19:52:03.0000] <Hixie>
yeah, just saw that :-)

[19:52:04.0000] <Hixie>
fixing editorial problems

[19:52:05.0000] <Hixie>
it's common

[19:52:06.0000] <Hixie>
CSS 2.1 has been in CR at least 3 times

[19:53:00.0000] <Hixie>
(if you count the original CSS2 "REC")

[19:55:00.0000] <eseidel_>
Hixie: btw, assert(test( would be better if test() just did the assert, IMO.  Then test could provide what exception was actually thrown 

[19:56:00.0000] <Hixie>
can you send me mail with that bug # and the assert feedback? i'm about to run off

[19:56:01.0000] <eseidel_>
Hixie: sure...

[19:56:02.0000] <eseidel_>
you should see mail about the @media but anyway, you're cc'd

[19:56:03.0000] <eseidel_>
/me writes hixie a mail

[19:56:04.0000] <Hixie>
thanks

[23:15:00.0000] <MikeSmith>
does IE5 support getElementById ?

[23:17:00.0000] <MikeSmith>
er, make that IE4 .

[23:20:00.0000] <MikeSmith>
ah, nair mind

[23:33:00.0000] <hubick>
Using Firefox on my Fedora 8 x86_64 box spontaneously reboots the whole machine instantly on http://planet.mozilla.org/ when viewing a post about Acid3 test.  Can anyone reproduce?

[01:39:00.0000] <krijnh>
I'm on vacation till the 21st, so sorry for the missing logs if I disconnect and don't reconnect again :)

[01:42:00.0000] <Philip`>
Vacation away from IRC? How dreadful :-(

[03:46:00.0000] <Hixie>
crap, i don't have the build toold installed on my mac yet

[04:49:00.0000] <gsnedders>
They tend to be useful :P

[10:30:00.0000] <gsnedders>
Hixie: any reason you used XML-RPC not SOAP for Pingback?

[10:55:00.0000] <Dashiva>
gsnedders: Do you need a reason not to use SOAP? ;)

[10:56:00.0000] <gsnedders>
Dashiva: any reason to use/not use either would be nice, especially in the context of things like Pingback

[13:03:00.0000] <Hixie>
gsnedders: SOAP is more insane than XML-RPC. But using XML-RPC was pretty dumb too.

[13:04:00.0000] <gsnedders>
Hixie: From my experience with RSS I tend to be a bit concerned about any standard written by Dave Winer

[13:04:01.0000] <Dashiva>
He was outdone this time :)

[13:41:00.0000] <gsnedders>
Hixie: Content-Type sniffing is currently type-sensitive. It shouldn't be.

[13:41:01.0000] <gsnedders>
Hixie: for the MIME types, that is.

[13:42:00.0000] <gsnedders>
Hixie: I assume it is safe to change step one to be totally case-insensitive?

[13:42:01.0000] <othermaciej>
type-sensitive?

[13:43:00.0000] <gsnedders>
s/type/case/

[13:44:00.0000] <gsnedders>
Hixie: I just noticed step 2 makes it lowercase

[13:44:01.0000] <gsnedders>
/me headdesks

[13:52:00.0000] <Hixie>
i have no idea what you're asking :-)

[14:04:00.0000] <gsnedders>
Hixie: ignore me. I can't read the spec :)

[14:05:00.0000] <gsnedders>
Hixie: (assuming you read this :)) well, just the above bit

[14:20:00.0000] <Lachy>
hmm, I got request to write some articles/tutorials for developertutorials.com - has anyone heard of that site before?

[14:22:00.0000] <Hixie>
not off-hand

[14:26:00.0000] <jwalden>
Hixie: see <http://spreadsheets.google.com/pub?key=pNgBCwWdyRTT2JeiZn4B2Yw>, the notes next to 19 and 85

[14:27:00.0000] <Hixie>
fixed 85

[14:28:00.0000] <Hixie>
and for 19, i was using DOM2, which seems to justify having it on the prototype

[14:28:01.0000] <Hixie>
i think we want the constants on all objects, no?

[14:29:00.0000] <Lachy>
which browser is that spreadsheet listing results for?

[14:29:01.0000] <jwalden>
Firefox trunk

[14:34:00.0000] <jwalden>
Hixie: I don't mind either way, but Moz had thought constants on non-ctors wasn't per spec

[14:34:01.0000] <jwalden>
Hixie: just thinking about this because of the conversation in <http://groups.google.com/group/mozilla.dev.tech.dom/browse_frm/thread/8f7feeb90be81c99/02a92f4574ca032a?lnk=st&q=class+properties+prototype+properties#02a92f4574ca032a>

[14:36:00.0000] <Hixie>
well i don't mind changing it to test the constructor

[14:36:01.0000] <jwalden>
Hixie: see bz in #9 there: "They might also break in future Mozilla versions (e.g. if we stop using XPConnect for DOM classes). "

[14:36:02.0000] <Hixie>
that's just gonna show even more bugs in IE...

[14:37:00.0000] <gsnedders>
But IE6 supports 100% of it!

[14:37:01.0000] <jwalden>
/me tries to decide whether this makes him laugh or just be sad

[14:50:00.0000] <gsnedders>
Hixie: if you were to create Pingback from the ground up today with no regard for backwards compat., what would you use in place of XML-RPC?

[14:52:00.0000] <Hixie>
the Referer header and a GET request

[14:53:00.0000] <gsnedders>
Okay, that doesn't map to the slightly different use-case of tracking comments on other sites.

[14:53:01.0000] <gsnedders>
(where you need to send at least the commenter's name + comment)

[14:54:00.0000] <gsnedders>
Ideas for transport media are welcome :)

[14:55:00.0000] <Lachy>
Hixie, wouldn't Referer spam, which has been happening since long before pingback, have made that a bad idea?

[14:55:01.0000] <gsnedders>
(over HTTP, obviously)

[14:55:02.0000] <gsnedders>
Lachy: it's done using Pingback, what difference does it make?

[14:58:00.0000] <Lachy>
dunno, it just seems like it would be worse

[14:58:01.0000] <gsnedders>
/me thinks we'll never know

[15:02:00.0000] <Hixie>
Lachy: the techniques used to avoid it for pingback can be used for referer spam.

[15:03:00.0000] <Hixie>
Lachy: spammers do trackback spam, pingback spam, and referer spam, they don't care what the exact protocol is.

[15:03:01.0000] <Hixie>
gsnedders: for tracking comments, i recommend NNTP

[15:04:00.0000] <gsnedders>
/me ponders how that'd work

[15:04:01.0000] <gsnedders>
Hixie: <http://groups.google.com/group/habari-dev/browse_thread/thread/5a5fabe48110df2b> is the current proposal

[15:05:00.0000] <gsnedders>
NNTP would probably be overkill anyway.

[15:22:00.0000] <gsnedders>
Hixie: if you have any good thoughts about such a thing, could I possibly con you into replying to that within the next month or so? or is that too ambitious of a timescale?

[15:22:01.0000] <Hixie>
i have no thoughts

[15:23:00.0000] <Hixie>
i think http is a dumb protocol to do threaded communication over

[15:23:01.0000] <gsnedders>
Think, Ian, think. :)

[15:24:00.0000] <gsnedders>
I think requiring blog software to implement a whole protocol like NNTP is unrealistic.

[15:25:00.0000] <gsnedders>
It almost certainly has to be done over a protocol they already support: HTTP & XML-RPC is already widely supported, however unidealistic it is.

[15:27:00.0000] <Hixie>
i wouldn't implement a whole protocol like NNTP

[15:27:01.0000] <Hixie>
i would just use NNTP

[15:27:02.0000] <Hixie>
or SMTP

[15:27:03.0000] <Hixie>
what's wrong with e-mail?

[15:29:00.0000] <gsnedders>
/me doesn't bother going into use-cases

[15:29:01.0000] <gsnedders>
/me needs to sleep


2008-01-12
[16:44:00.0000] <jwalden>
Hixie: assertEquals((-0.00006).toFixed(4), "-0.0001", "toFixd(4) wrong for -0.00006"); // typo "toFixd"

[19:34:00.0000] <othermaciej>
Hixie: ayt?

[20:03:00.0000] <Hixie>
othermaciej: yeah

[20:03:01.0000] <othermaciej>
Hixie: one of the khtml developers said that acid3 tests for the default type of <button> being "button"

[20:03:02.0000] <othermaciej>
I didn't verify that it does, but if so, that's contrary to HTML 4.01

[20:04:00.0000] <othermaciej>
(and I don't think there is a superseding later spec)

[20:15:00.0000] <Hixie>
it is?

[21:40:00.0000] <othermaciej>
HTML 4.01 says the default is "submit"

[21:40:01.0000] <othermaciej>
http://www.w3.org/TR/REC-html40/interact/forms.html#adef-type-BUTTON

[23:11:00.0000] <Hixie>
othermaciej: oh right. IE defaults to button.

[23:11:01.0000] <Hixie>
duh

[23:11:02.0000] <Hixie>
my bad will fix

[01:07:00.0000] <MacDome>
othermaciej: we do it wrong of course :)

[01:07:01.0000] <MacDome>
Hixie: there is some other part of the spec which talks about "type = button" though, I'm sure of it

[01:09:00.0000] <MacDome>
ah

[01:09:01.0000] <MacDome>
I was just reading the spec wrong

[01:51:00.0000] <othermaciej>
MacDome: I don't remember if we match IE or Firefox, or which matches the spec, or whether this is a compat issue

[04:42:00.0000] <gsnedders>
Lachy: ASCII art rulez.

[05:05:00.0000] <Lachy>
gsnedders, I assume you're referring to the site I twitterd? http://procool.ru/interesting/funny_kitten.htm

[05:08:00.0000] <gsnedders>
Lachy: yeah

[05:09:00.0000] <gsnedders>
anyhow, bbiab

[05:49:00.0000] <hsivonen>
hmm. <menu> now has this: "If there is a menu element ancestor: phrasing content."

[05:50:00.0000] <hsivonen>
that requirement together with the element normally being prose is no fun at all

[05:51:00.0000] <hsivonen>
Hixie: are you sure that is what you meant and you didn't mean that <li> as descendants of <menu> take either phrase or <menu>?

[05:52:00.0000] <hsivonen>
Hixie: why would one want to allow <menu><li><code><menu>...</menu></code></li></menu>?

[05:56:00.0000] <zcorpan>
hsivonen: the intent was to allow nested <menu>s (for submenus)

[05:57:00.0000] <zcorpan>
perhaps the rule would be better as "if the parent is an <li>, and that element's parent is a <menu>"?

[05:57:01.0000] <hsivonen>
zcorpan: do you mean in ways other than having the nested menu as the only child of a <li>?

[05:57:02.0000] <hsivonen>
zcorpan: right. that's what I'm after

[05:59:00.0000] <hsivonen>
time for me to send email again, I guess

[06:12:00.0000] <hsivonen>
Hixie: in general, making the proseness of an element depend on ancestors is very, very bad for RELAX NG

[06:13:00.0000] <hsivonen>
(proseness depending on parent is fine, though)

[06:14:00.0000] <hsivonen>
ouch. I had forgot about the whole datatemplate thing

[06:16:00.0000] <hsivonen>
/me continues with the ostrich approach to datatemplates

[08:18:00.0000] <jwalden>
/me is sad that RFC 4329 is two years too late for acid3

[08:25:00.0000] <jwalden>
Hixie: any reason for a duplicated case 12 in test 1?


2008-01-13
[23:29:00.0000] <aconbere|mobile>
hey, I'm working with html5lib in python and wondering if anyone has any advice on getting the lxml treebuilder working

[23:29:01.0000] <aconbere|mobile>
there don't apear to be any exmples that use it

[23:29:02.0000] <aconbere|mobile>
and when I do

[23:29:03.0000] <aconbere|mobile>
parser = html5lib.HTMLParser(tree=treebuilders.getTreeBuilder('lxml'))

[23:29:04.0000] <aconbere|mobile>
I get the following error

[23:30:00.0000] <aconbere|mobile>
  File "/Users/aconbere/Projects/python/html5lib/html5parser.py", line 52, in __init__

[23:30:01.0000] <aconbere|mobile>
    self.tree = tree()

[23:30:02.0000] <aconbere|mobile>
TypeError: 'NoneType' object is not callable

[23:30:03.0000] <aconbere|mobile>
This happens for me both in trunk and in .10

[23:30:04.0000] <aconbere|mobile>
so I don't know if that's how you expected lxml to be implimented and there's a bug, or if there was some other expectation :-P

[23:31:00.0000] <aconbere|mobile>
ahh, actually the trunks doc string helps clarify that

[23:36:00.0000] <aconbere|mobile>
http://dpaste.com/30872/

[23:36:01.0000] <aconbere|mobile>
is the new traceback

[23:36:02.0000] <aconbere|mobile>
for the test file

[23:36:03.0000] <aconbere|mobile>
http://dpaste.com/30873/

[23:46:00.0000] <aconbere|mobile>
hmmm

[23:46:01.0000] <aconbere|mobile>
known bug

[23:46:02.0000] <aconbere|mobile>
okay I'll be about my buisness then

[00:44:00.0000] <MacDome>
kig: url of your rewrite page?

[02:49:00.0000] <jgraham>
aconbere|mobile: Yeah, there have been problems with lxml since they started validating tag names. We need to come up with a long term solution better than the magic-name based hack we were previously using.

[02:50:00.0000] <jgraham>
Sadly, our design assumptions are not quit the same as those made in lxml so there's a bit of an impedance mismatch.

[03:14:00.0000] <aconbere|mobile>
jgraham: understood

[03:15:00.0000] <aconbere|mobile>
really I was looking for a way to make parsing microformats easier, which if all I was interested in was getting properly formed xml out html5lib would have been fine for (using one of the other Etree implimentations)

[03:15:01.0000] <aconbere|mobile>
but I /really/ wanted to be able to apply xsl transforms to the xml

[03:15:02.0000] <aconbere|mobile>
and lxml makes that so much easier :P

[03:25:00.0000] <jgraham>
aconbere|mobile: Yeah, I rather like lxml myself, so there is an incentive there to find a fix :)

[03:27:00.0000] <aconbere|mobile>
:-D

[04:41:00.0000] <zcorpan>
Hixie: hmm.... i think the layout of acid3 probably isn't mobile friendly

[04:51:00.0000] <hsivonen>
Whoa!

[04:52:00.0000] <hsivonen>
the December content model change makes the real Web so much more valid

[04:52:01.0000] <hsivonen>
oops. my mistake...

[04:56:00.0000] <zcorpan>
hsivonen: do you have any figures? :)

[04:57:00.0000] <hsivonen>
zcorpan: no. And I made a mistake with the start symbol in the schema, so things looked better than they were...

[04:57:01.0000] <zcorpan>
ok

[04:57:02.0000] <Philip`>
Do you have any way to automatedly run the validator on lots of pages and see how frequent various errors are?

[04:58:00.0000] <hsivonen>
Philip`: I don't have that kind of test harness.

[04:59:00.0000] <Philip`>
/me wonders whether it would be a useful thing to have

[04:59:01.0000] <gsnedders>
Atom autodiscovery test suite is b0rked

[05:01:00.0000] <zcorpan>
hmm... opera thinks that http://s.validator.nu/html5/html5full.rnc is text/plain and that http://s.validator.nu/html5/meta.rnc is text/html

[05:01:01.0000] <zcorpan>
(both are application/octet-stream)

[05:02:00.0000] <hsivonen>
hmm. I guess I should fix that...

[05:07:00.0000] <hsivonen>
zcorpan: fixed

[05:08:00.0000] <hsivonen>
whether having a type like application/relax-ng-compact-syntax at all is between browsers, browser users and the IETF to debate...

[05:11:00.0000] <hsivonen>
Philip`: early on, Sean Fraser picked up the HTML WG task of testing top sites against the spec definition of validity

[05:11:01.0000] <hsivonen>
Philip`: I think that would be good to automate

[05:12:00.0000] <hsivonen>
Philip`: if you already have a framework that prepares an ErrorHandler and an InputSource at hand that would help

[05:13:00.0000] <hsivonen>
Philip`: alternatively, the Validator.nu Web service interface could be used for that kind of thing

[05:14:00.0000] <zcorpan>
hsivonen: can you see which errors are most common by just people using the validator?

[05:14:01.0000] <hsivonen>
Philip`: I could add a parameter for putting the HTML parser into the survey mode (where legacy doctypes aren't errors)

[05:14:02.0000] <hsivonen>
zcorpan: I think I have a log for that but have never analyzed it

[05:15:00.0000] <zcorpan>
ok

[05:16:00.0000] <hsivonen>
zcorpan: hmm. looks like I didn't enable the log in deployment after all

[05:17:00.0000] <hsivonen>
It might be a good idea to enable it after I land the new content model changes

[05:17:01.0000] <hsivonen>
I guess I should adjust the privacy policy accodingly before I do.

[05:59:00.0000] <kig>
MacDomeSleep: url> http://glimr.rubyforge.org/cake/redesign.html (just woke up myself)

[06:35:00.0000] <hsivonen>
Lachy: seen the blog.whatwg.org moderation queue lately?

[06:36:00.0000] <hsivonen>
I'm going to zap the entries from the rapidshare and ringtones users

[06:37:00.0000] <hsivonen>
Lachy: also, a new version of WP is available

[07:15:00.0000] <hsivonen>
Lachy: there are two Polish translations of a post of yours in the moderation queue

[07:24:00.0000] <hsivonen>
hmm. http://www.w3.org/TR/html/

[07:24:01.0000] <hsivonen>
linked from http://www.w3.org/TR/html4/

[08:07:00.0000] <Lachy>
hsivonen, thanks for letting me know.

[08:33:00.0000] <zcorpan>
hsivonen: yeah, that should probably be changed to point to html4/

[08:49:00.0000] <zcorpan>
hmm... is this valid? <figure><legend></legend></figure>

[08:52:00.0000] <hsivonen>
zcorpan: should be, since emptiness is valid prose

[08:52:01.0000] <hsivonen>
zcorpan: however, RELAX NG is unable to make this invalid: <figure>foo<legend></legend>bar</figure>

[08:52:02.0000] <hsivonen>
zcorpan: I'm working on fixing that in Java

[08:53:00.0000] <zcorpan>
ok, so you're aware of v.nu not agreeing with the spec wrt figure... :)

[08:56:00.0000] <zcorpan>
it seems to do the right thing when you put elements in there, but not text or nothing

[09:02:00.0000] <hsivonen>
zcorpan: I wasn't aware that there was a problem with nothingness

[09:05:00.0000] <zcorpan>
Error: Required children missing from element figure.

[09:07:00.0000] <hsivonen>
zcorpan: I had accidentally made it require one prose element instead of prose content

[09:09:00.0000] <zcorpan>
i was about to send an email about empty <tbody>, but it turns out that i had already complained about that twice

[09:09:01.0000] <hsivonen>
heh

[09:12:00.0000] <hsivonen>
zcorpan: fix for nothingness deployed. thanks

[09:13:00.0000] <hsivonen>
whoa. I was wrong about the expressiveness of RELAX NG in this case, apparently

[09:13:01.0000] <hsivonen>
which is nice

[09:24:00.0000] <zcorpan>
/me notes that <map> now also has a friendlier content model

[09:26:00.0000] <hsivonen>
zcorpan: I implemented that one correctly, didn't I?

[09:26:01.0000] <zcorpan>
yes, afaict

[09:27:00.0000] <hsivonen>
ok

[09:27:01.0000] <zcorpan>
it was a note to self... :) i think i have sent email about that too, before

[09:27:02.0000] <zcorpan>
previously this was not allowed: <map><area ...></map>

[09:29:00.0000] <hsivonen>
I'm positively puzzled and surprised to learn that RELAX NG can deal with <figure>a<legend/>b</figure>

[09:32:00.0000] <zcorpan>
is text different from elements in relax ng?

[09:34:00.0000] <hsivonen>
zcorpan: I had thought it was different with the comma combinator, but it seems that it isn't

[09:34:01.0000] <zcorpan>
ok

[09:41:00.0000] <hsivonen>
zcorpan: It seems I have fixed a noscript-in-head bug you reported. thanks

[09:42:00.0000] <zcorpan>
hsivonen: cool. can't remember what it was i reported, though :)

[09:46:00.0000] <zcorpan>
why did html4 forbid IMG|OBJECT|BIG|SMALL|SUB|SUP from <pre>?

[09:47:00.0000] <hsivonen>
zcorpan: presumably they don't fit the idea of having only monospace text

[09:48:00.0000] <hsivonen>
zcorpan: you reported that <h1><noscript><p>... validates in HTML 4 in Validator.nu. I can't reproduce the problem.

[09:53:00.0000] <zcorpan>
aha. right

[09:55:00.0000] <zcorpan>
hsivonen: yeah. if that's a good reason then perhaps html5 should ban it as well

[09:56:00.0000] <zcorpan>
"The DTD fragment above indicates which elements may not appear within a PRE declaration. This is the same as in HTML 3.2, and is intended to preserve constant line spacing and column alignment for text rendered in a fixed pitch font. Authors are discouraged from altering this behavior through style sheets."

[10:35:00.0000] <gsnedders>
can <dl> be within <p>?

[10:35:01.0000] <gsnedders>
(in the text/html serialisation)

[10:36:00.0000] <gsnedders>
/me looks

[10:36:01.0000] <gsnedders>
no.

[10:47:00.0000] <MacDome>
Hixie: this one is still wrong:

[10:47:01.0000] <MacDome>
      style.appendChild(doc.createTextNode('@media not all and (bogus) { #f { text-transform: uppercase; } }'));

[10:47:02.0000] <MacDome>
Hixie: that should match (as it does in Safari)

[10:47:03.0000] <MacDome>
at least according to my reading of the spec

[10:48:00.0000] <MacDome>
the logic reads !(true and false) -> !(false) -> true

[11:06:00.0000] <virtuelv>
MacDome: matches in Opera as well

[11:09:00.0000] <virtuelv>
(and I'm reading the spec the same way as you, the not negates the entire expression

[11:11:00.0000] <MacDome>
virtuelv: which honestly I find kinda odd

[11:11:01.0000] <MacDome>
but it does make the grammar simpler

[11:12:00.0000] <virtuelv>
MacDome: indeed

[11:12:01.0000] <virtuelv>
(or rather, it isn't odd when you are aware that 'not' except at the start of a query is invalid)

[11:22:00.0000] <Hixie>
MacDome: surely that reads as !(true and NaN) -> !(NaN) -> NaN ?

[14:01:00.0000] <MacDome>
Hixie: I wonder if it shouldn't throw an exception

[14:01:01.0000] <MacDome>
I'm not sure <value> is defiene

[14:01:02.0000] <MacDome>
Hixie: searching media queries for "nan" was no hits

[14:02:00.0000] <MacDome>
/me reads http://www.w3.org/TR/css3-values/

[14:02:01.0000] <jwalden>
MacDome: test 23 is fixed, right?  I see the "code" thing got fixed, and the last createElementNS's arguments are now reversed correctly

[14:03:00.0000] <MacDome>
jwalden: I believe hixie fixed it

[14:03:01.0000] <jwalden>
or at least fixed as far as you'd been asking

[14:03:02.0000] <MacDome>
jwalden: I didn't reply to all his emails yet

[14:03:03.0000] <MacDome>
/me wonders why "true and NaN" would be "NaN"

[14:04:00.0000] <MacDome>
that's "true and number"

[14:04:01.0000] <MacDome>
which is "true and ToBoolean(number)"

[14:04:02.0000] <MacDome>
ToBoolean(NaN) is false

[14:04:03.0000] <MacDome>
at least talking about ecmascript, which really has no bearing on CSS3 media queries :)

[14:04:04.0000] <jruderman>
&& and || in ecmascript return one of their arguments, not booleans

[14:05:00.0000] <MacDome>
it's true, media queries do talk in terms of "1" and "0" instead of "true" and "false"

[14:06:00.0000] <MacDome>
"A Media Query is a logical expression that is either true or false. A Media Query is true if the media type of the Media Query matches the media type of the device where the user agent is running, and all expressions in the Media Query are true. Also, a Media Query which is otherwise false becomes true if the "not" keyword is present."

[14:06:01.0000] <MacDome>
Hixie: I think it actually should be a CSS3 parse error

[14:07:00.0000] <MacDome>
Hixie: since @media specifies a grammar, and (bogus) does not conform to that grammar

[14:07:01.0000] <othermaciej>
MacDome: media queries that include an invalid keyword should fail to parse

[14:07:02.0000] <othermaciej>
whether or not there's a "not"

[14:07:03.0000] <othermaciej>
so the @media rule is discarded

[14:07:04.0000] <othermaciej>
since that's how CSS error handling works

[14:07:05.0000] <othermaciej>
I think the NaN was meant to be an analogy

[14:07:06.0000] <jwalden>
MacDome: incidentally, it looks like the algorithm I have for determining which exception to throw is (component-)start(s)-with-colon, ends-with-colon, multiple-colons-in-createElementNS, and start-with-non-ASCII-non-starting-valid-character cause NAMESPACE_ERR with createElementNS, all others are INVALID_CHARACTER_ERR

[14:08:00.0000] <MacDome>
othermaciej: ok, well, that would support hixie's test then

[14:08:01.0000] <MacDome>
the entire rule can be thrown out

[14:08:02.0000] <MacDome>
and a CSS parse error raised

[14:09:00.0000] <jwalden>
so "a::", "a::b", ":foo", "a:b:c", and <something that matches the start-with-non-ASCII possibility> are examples of all the possible namespace errors

[14:10:00.0000] <othermaciej>
DOM2 and DOM3 are actually inconsistent about when NAMESPACE_ERR or INVALID_CHARACTER_ERR should be thrown

[14:11:00.0000] <jwalden>
ha ha ha

[14:11:01.0000] <MacDome>
jwalden: a test case would demonstrate this better for me

[14:11:02.0000] <jwalden>
I should read 3, then -- think I've been using 2

[14:12:00.0000] <othermaciej>
DOM2 Core generally says this:

[14:12:01.0000] <othermaciej>
INVALID_CHARACTER_ERR: Raised if the specified qualified name contains an illegal character.

[14:12:02.0000] <othermaciej>
NAMESPACE_ERR: Raised if the qualifiedName is malformed, if the qualifiedName has a prefix and the namespaceURI is null, or if the qualifiedName has a prefix that is "xml" and the namespaceURI is different from "http://www.w3.org/XML/1998/namespace" [Namespaces].

[14:12:03.0000] <jwalden>
actually, no, I've been using 3

[14:12:04.0000] <othermaciej>
but DOM3 Core says this:

[14:12:05.0000] <othermaciej>
INVALID_CHARACTER_ERR: Raised if the specified qualified name is not an XML name according to [XML 1.0].

[14:12:06.0000] <othermaciej>
NAMESPACE_ERR: Raised if the qualifiedName is malformed, if the qualifiedName has a prefix and the namespaceURI is null, or if the qualifiedName is null and the namespaceURI is different from null, or if the qualifiedName has a prefix that is "xml" and the namespaceURI is different from "http://www.w3.org/XML/1998/namespace" [XML Namespaces], or if the DOM implementation does not support the "XML" feature but a non-null namespace UR

[14:13:00.0000] <jwalden>
but I was fixing parsing code as opposed to namespace code, which the changes didn't affect

[14:13:01.0000] <othermaciej>
and there are strings which are not "an XML name", but for reasons other than containing an illegal character

[14:14:00.0000] <MacDome>
I can't imagine this really affects real web sites

[14:14:01.0000] <othermaciej>
in DOM2Core, that's a NAMESPACE_ERR ("qualifiedName is malformed"), but in DOM3Core, that's an INVALID_CHARACTER_ERR ("the specified qualified name is not an XML name")

[14:14:02.0000] <othermaciej>
I don't think it does

[14:14:03.0000] <MacDome>
jwalden: I'm most interested in us just agreeing

[14:14:04.0000] <jwalden>
yeah

[14:14:05.0000] <othermaciej>
but, oddly, the DOM2 Core test suite from the w3c tests for the DOM3 Core behavior

[14:14:06.0000] <MacDome>
jwalden: if we have a nice set of tests, we'll do that.  there are some attached to the bug i posted

[14:14:07.0000] <othermaciej>
we could really use a DOM5 Core

[14:14:08.0000] <jwalden>
MacDome: URL again?

[14:14:09.0000] <MacDome>
othermaciej: like HTML5?

[14:14:10.0000] <othermaciej>
yes, exactly

[14:14:11.0000] <othermaciej>
rewrite the spec to make sense

[14:14:12.0000] <jwalden>
ambiguity die die die

[14:15:00.0000] <MacDome>
one which actually tries to describe behavior instead of make a fairytale?

[14:15:01.0000] <gsnedders>
ooo! I like fairytales!

[14:15:02.0000] <gsnedders>
/me goes to read the DOM specs

[14:16:00.0000] <MacDome>
I always got the impression when reading sections of specs which say "left to the implementor" that the authors were thinking they were doing us a favor by leaving us "freedom"

[14:16:01.0000] <MacDome>
they sorta are,since some specs are crazy

[14:16:02.0000] <MacDome>
but often it just seems lazy to me

[14:16:03.0000] <MacDome>
or that they didn't sit down to think out what would make sense.

[14:16:04.0000] <othermaciej>
well, some things that were left up to the implementation are cases where, if we'd locked in the first guess at the right behavior, we'd be stuck with bad performance

[14:16:05.0000] <MacDome>
/me is making poor generalizations about spec authors

[14:17:00.0000] <othermaciej>
like how exactly the prototype / method structure of JS DOM bindings should work

[14:17:01.0000] <jruderman>
speaking of specs and poor performance

[14:17:02.0000] <MacDome>
spec authoring is kinda a thankless job

[14:17:03.0000] <othermaciej>
but yeah, in most cases, interoperability is worth more than implementation freedom

[14:17:04.0000] <jruderman>
do DOM specs require support for "attribute nodes" and other such nonsense?

[14:17:05.0000] <jruderman>
or is that part optional?

[14:17:06.0000] <othermaciej>
they do require it, but it's possible to avoid ever making them for normal cases

[14:17:07.0000] <gsnedders>
MacDome: sometimes I do wonder why I try, knowing I'll be ridiculed whatever I write in the spec.

[14:18:00.0000] <gsnedders>
(where the spec = any spec I write)

[14:18:01.0000] <othermaciej>
WebKit makes real attribute nodes only on demand

[14:18:02.0000] <MacDome>
Hixie: I think your @media tests could be made more clear by indicating // silently fails to parse

[14:18:03.0000] <othermaciej>
(afaik the only demand comes from the DOM test suite)

[14:18:04.0000] <MacDome>
gsnedders: well, IMO Hixie (and the other whatwg participants) have done a huge service to web authors

[14:19:00.0000] <othermaciej>
I think WebKit passes pretty much all of the DOM1 Core and DOM2 Core w3c test suites, except for the tests that are contrary to compatibility requirements, and the tests where DOM2 and DOM3 have contradictory requirements

[14:19:01.0000] <othermaciej>
but the DOM working group refused to fix those things in the spec

[14:19:02.0000] <gsnedders>
MacDome: but still, ridiculed for trying to specify exact behaviour, and leaving nothing able to be added to the parser (like namespaces, if it is possible)

[14:20:00.0000] <MacDome>
othermaciej: I wonder if a public page of "we intentionally disagree" would aid in convincing them.  it probably wouldnt' be worth the time

[14:20:01.0000] <othermaciej>
MacDome: the DOM Working Group no longer exists

[14:20:02.0000] <MacDome>
/me is against making work for arguing with folks

[14:20:03.0000] <MacDome>
i see.

[14:21:00.0000] <gsnedders>
That does complicate matters, then.

[14:21:01.0000] <MacDome>
othermaciej: nothing more exciting to do with the DOM?

[14:21:02.0000] <othermaciej>
I think the Web API Working Group would be willing to host work for a realistic DOM spec

[14:21:03.0000] <othermaciej>
but no one has time

[14:21:04.0000] <gsnedders>
Some of the specs already in the Web API WG have died off for lack of time.

[14:21:05.0000] <MacDome>
web browsers (And more importantly web apps) have hit a layer of complexity where things like HTML5 become essential

[14:21:06.0000] <othermaciej>
MacDome: the DOM working group towards the end was seemingly more focused on server-side Java than browser-hosted implementations

[14:21:07.0000] <MacDome>
browsers are coming to another level of refinement

[14:22:00.0000] <gsnedders>
(I am, FWIW, working on a spec of dealing with HTTP data)

[14:24:00.0000] <othermaciej>
someone should propose that HTTP headers should use XML-like namespaces defined by URIs

[14:24:01.0000] <othermaciej>
just to watch the fireworks

[14:25:00.0000] <gsnedders>
Already been proposed.

[14:25:01.0000] <othermaciej>
(and hey, why only headers, maybe methods too)

[14:25:02.0000] <gsnedders>
I probably can't find a link to a discussion, but it's happened.

[14:25:03.0000] <othermaciej>
gsnedders: I underestimated the power of human stupidity

[14:25:04.0000] <MacDome>
oh, I totally want to namespace my headers!

[14:26:00.0000] <MacDome>
xmlns:FooBar="http://www.foobar.com/2007/FooBar"

[14:26:01.0000] <gsnedders>
Get rid of all this X-* nonsense!

[14:26:02.0000] <MacDome>
FooBar:ContentType = FooDelicious

[14:26:03.0000] <gsnedders>
/me sniffs the delicious foo

[14:27:00.0000] <MacDome>
gsnedders: most interesting would be someone making a locally-runable HTTP test suite

[14:27:01.0000] <MacDome>
with all sorts of header parsing tests

[14:28:00.0000] <gsnedders>
MacDome: I've made a start, but the biggest issue is testing how things like dates are parsed

[14:28:01.0000] <MacDome>
gsnedders: the fact that CF network still has cookie parsing errors is an indication to me of the lack of a good test suite

[14:29:00.0000] <MacDome>
or just a big test

[14:29:01.0000] <MacDome>
like Acid3

[14:29:02.0000] <MacDome>
which when you pass you can claim compliance

[14:29:03.0000] <MacDome>
something that tested for pipelining support would be preferred :)

[14:29:04.0000] <gsnedders>
A lot of behaviour is undefined anyway

[14:29:05.0000] <othermaciej>
MacDome: cookies don't even have a proper spec defining them

[14:29:06.0000] <MacDome>
gsnedders: well I'm totally looking forward to Base1 :)

[14:30:00.0000] <gsnedders>
/me wonders where Base1 came from :)

[14:30:01.0000] <othermaciej>
there's the "HTTP State Management" spec which defines cookie headers that no one uses

[14:30:02.0000] <MacDome>
Acid2 :)

[14:30:03.0000] <gsnedders>
ah.

[14:30:04.0000] <othermaciej>
gsnedders: if you have an acid test, why not a base test?

[14:30:05.0000] <MacDome>
/me bets gsnedders can mke the connection :)

[14:30:06.0000] <gsnedders>
/me hasn't done chemistry is a couple of years :P

[14:30:07.0000] <MacDome>
gsnedders: you could be our hero!

[14:31:00.0000] <MacDome>
fix damn networking issues for good

[14:31:01.0000] <gsnedders>
<super:gsnedders>?

[14:31:02.0000] <MacDome>
require support for some sort of sane multi-part/mixed thing as well :

[14:31:03.0000] <MacDome>
)

[14:31:04.0000] <gsnedders>
Maybe I'll make Base1 when I'm finished with everything else :)

[14:32:00.0000] <MacDome>
/me wishes the W3c would do more test suite development *alongside* their spec work

[14:32:01.0000] <gsnedders>
/me hopes Hixie hasn't trademarked Acid*, Alkaline*, Base*

[14:32:02.0000] <MacDome>
things like SVG should have had 10000 tests

[14:32:03.0000] <gsnedders>
some people are questioning the need for tests for HTML 5, sadly.

[14:32:04.0000] <othermaciej>
the original acid test was the CSS box model acid test

[14:33:00.0000] <gsnedders>
was IE5/Mac not the first to pass acid?

[14:34:00.0000] <Philip`>
It's a bit annoying to write tests while the spec is still being developed, because any spec change could potentially invalidate anything in the test suite and you have to carefully check every one to see if it should change

[14:34:01.0000] <gsnedders>
In the case of HTML 5, I've found some bugs in some algorithms doing so though, that weren't obvious just looking at them.

[14:35:00.0000] <gsnedders>
MacDome: if you have any suggestions of actually finding parsed values of headers it'd be welcome

[14:35:01.0000] <gsnedders>
/me finds undefined behaviour in XMLHttpRequest

[14:35:02.0000] <MacDome>
Philip`: I think that could be mitigated by using some sort of assert() scheme where you swapped out assert during development, and had it only print the current result, instead of actually checking

[14:35:03.0000] <MacDome>
then you coudl go back and fix the "expected" side of the assertr

[14:35:04.0000] <MacDome>
shouldBeEqual(foo, bar);

[14:36:00.0000] <MacDome>
develpoment : print whatever foo actually is

[14:36:01.0000] <MacDome>
production : check against bar

[14:36:02.0000] <MacDome>
I guess you can always check

[14:36:03.0000] <MacDome>
you just would ignore FAIL

[14:37:00.0000] <MacDome>
/me didn't actually have a very useful proposal just then

[14:37:01.0000] <MacDome>
mostly lots of hot air

[14:37:02.0000] <MacDome>
/me goes back to coding

[14:37:03.0000] <othermaciej>
unfortunately, serializing spec development and test suite development is also a bad thing

[14:37:04.0000] <othermaciej>
because applying the test suite to implementations may find bugs in the spec

[14:39:00.0000] <roc>
that's more of an argument for interleaving spec development with implementation

[14:40:00.0000] <roc>
randomized testing is also good at finding bugs in specs, but you need an implementation

[14:41:00.0000] <gsnedders>
MacDome, othermaciej: what would be the best way to contact the CF Network guys?

[14:41:01.0000] <othermaciej>
you need multiple implementations

[14:42:00.0000] <roc>
that too

[14:42:01.0000] <othermaciej>
but then you need thorough testing, not just spot tests, to make them interoperable

[14:42:02.0000] <othermaciej>
gsnedders: contact about what?

[14:42:03.0000] <Philip`>
I've been slightly surprised when writing tests to find bits of the spec that are undefined or ambiguous, but have been implemented multiple times and no implementor commented on them

[14:42:04.0000] <roc>
in super-high-integerity software development, there's this idea called "traceability", which is that you maintain a database tracking all dependencies between code, specs and testcases

[14:42:05.0000] <gsnedders>
othermaciej: Impl. of HTTP

[14:43:00.0000] <othermaciej>
gsnedders: what I'm getting at is, would this be a bug report?

[14:43:01.0000] <othermaciej>
if so, bugreport.apple.com is the right way

[14:43:02.0000] <othermaciej>
if not, I'm not sure

[14:43:03.0000] <gsnedders>
othermaciej: well, judging by the fact that I don't really know what yet… :D

[14:43:04.0000] <roc>
unfortunately that is incredibly expensive and slow

[14:43:05.0000] <gsnedders>
othermaciej: you need to be 18 to join the ADC, so can't really use bugreport.apple.com

[14:44:00.0000] <Philip`>
gsnedders: You could lie like everyone else does :-p

[14:44:01.0000] <gsnedders>
Philip`: already done that :P

[14:44:02.0000] <gsnedders>
Philip`: "can't *really*"

[14:44:03.0000] <roc>
Philip`: well, many times I've implemented something where the spec is just plain *wrong* yet other implementations claim to have implemented it correctly :-)

[14:45:00.0000] <othermaciej>
gsnedders: even for the student membership?

[14:45:01.0000] <gsnedders>
othermaciej: yeah

[14:45:02.0000] <othermaciej>
go figure

[14:45:03.0000] <gsnedders>
/me sues Apple under agism laws :P

[14:46:00.0000] <dglazkov>
it's probably because of all the porn

[14:46:01.0000] <othermaciej>
gsnedders: it's probably because contracts with a minor are not enforceable, and access to ADC provides access to some info that is technically under NDA

[14:46:02.0000] <othermaciej>
Philip`: most implementors are not overly concerned with ambiguities or even outright wrongness in the spec

[14:46:03.0000] <Philip`>
What do really old people do when they go to a website with over-18-only content that requires them to select their year of birth from a drop-down list that starts at 1901?

[14:47:00.0000] <gsnedders>
Philip`: what if they're female, and seeming you're not meant to ask old women for their age…

[14:47:01.0000] <Philip`>
gsnedders: Hmm, that wouldn't work very well if it's only for old women, because that would mean if you didn't ask someone their age then you would be implying they are old

[14:48:00.0000] <roc>
they append the required year to the combobox by handwriting a javascript: URL

[14:49:00.0000] <Philip`>
Ah, cunning

[14:50:00.0000] <gsnedders>
or just use telnet to submit a request to the server with the correct year, and hope the server just uses inequality year less than, and copy the cookie to the browser

[14:51:00.0000] <roc>
someone could write a pointy-clicky Firefox extension for this

[14:51:01.0000] <roc>
thus locking up Firefox share in the 108+ demographic

[14:52:00.0000] <gsnedders>
Nice, my… would be thankful.

[14:52:01.0000] <gsnedders>
Wait, I don't have any relatives over >108.

[15:40:00.0000] <jwalden>
Hixie: if you want a really evil testcase for createElementNS, createElementNS("http://example.com/", "a:\u0BC6") should throw with e.code == 14 (the Unicode char is a CombiningChar, which is NCNameChar but not Letter | "_")


2008-01-14
[16:16:00.0000] <jwalden>
Hixie: or, really, anything in <http://bugs.webkit.org/attachment.cgi?id=18427>, but watch out for the ones where the printed message says that I think either can apply

[16:18:00.0000] <jwalden>
blah

[16:19:00.0000] <jwalden>
Hixie: createElementNS(null, ":div") can't be tested because ":div" is both an invalid XML name and an invalid QName, so either exception might be thrown

[16:19:01.0000] <jwalden>
given the spec's prose

[16:22:00.0000] <jwalden>
oh, blah

[16:22:01.0000] <jwalden>
I'm wrong about that in the XML 1.0 spec

[16:22:02.0000] <jwalden>
more blah

[16:23:00.0000] <jwalden>
it depends on the current XML version

[16:23:01.0000] <jwalden>
crazy, crazy mess

[16:25:00.0000] <jwalden>
/me wonders whose idiotic idea it was to not put namespaces in XML 1.0 if they wanted namespaces to happen compatibly

[16:36:00.0000] <anne-mac>
@media not all and (bogus) should not match I think

[16:36:01.0000] <anne-mac>
in fact, the entire rule should be ignored

[16:37:00.0000] <anne-mac>
having said that, this might not be clear in older versions of the media queries spec

[16:41:00.0000] <jwalden>
sigh

[16:51:00.0000] <othermaciej>
jwalden: which bit were you wrong about

[16:51:01.0000] <othermaciej>
?

[16:51:02.0000] <othermaciej>
;s 

[16:51:03.0000] <othermaciej>
is ":div" actually a valid QName

[16:51:04.0000] <othermaciej>
or a valid XML name?

[16:51:05.0000] <jwalden>
not QName, but it's a valid XML name

[16:51:06.0000] <jwalden>
/me uploads the fixed test to the webkit bug

[16:52:00.0000] <jwalden>
at least in XML 1.0

[21:32:00.0000] <Hixie>
MacDome_: the test is based on this sentence in the media queries spec: "Expressions involving unknown media features or unknown/illegal values are always false"

[21:32:01.0000] <Hixie>
MacDome_: where i'm interpreting "expression" to mean "media_que... oh. wait. that's wrong.

[21:32:02.0000] <Hixie>
hm.

[21:33:00.0000] <Hixie>
/me goes to fix the test

[21:37:00.0000] <Hixie>
yay, it found a new bug in webkit

[21:59:00.0000] <Hixie>
sayrer: the range tests were a bitch to write, the spec is so damned vague

[22:10:00.0000] <Hixie>
hey if anyone is around, i just updated the text at the bottom of acid3, what do you think? http://www.hixie.ch/tests/evil/acid/003/NOT_READY_PLEASE_DO_NOT_USE.html

[22:14:00.0000] <jruderman>
it's covered by a red square with a cat in it

[22:14:01.0000] <jruderman>
i don't see how you can expect the animation to be smooth with the gc hack / "perf test" in the middle

[22:15:00.0000] <jruderman>
what changed in that text? just 100% --> 100/100?

[22:18:00.0000] <othermaciej>
the animation is pretty smooth in Safari

[22:18:01.0000] <othermaciej>
it does visibly pause very briefly around 20 though

[22:18:02.0000] <othermaciej>
I don't think it's fair to require other browsers to be as fast as Safari

[22:19:00.0000] <jruderman>
whether perf is adequate depends on the machine and is subjective. i don't think perf testing belongs in acid3.

[22:23:00.0000] <Hixie>
i think it's entirely fair to requires browsers to be as fast as safari, given what's in the perf test and what the Web is headed towards (big web apps that do DOM manipulation up the wazoo)

[22:23:01.0000] <Hixie>
the whole point of acid3 is to guide browsers towards being better for running big web apps

[22:24:00.0000] <Hixie>
jruderman: (btw the red cat is showing a bug in whatever browser you tested)

[22:25:00.0000] <jruderman>
safari 3. kinda annoying that it covers the instructions ;)

[22:26:00.0000] <Hixie>
:-)

[22:26:01.0000] <Hixie>
oh wow yeah, safari 3 covers them up more than the webkit trunk

[22:27:00.0000] <othermaciej>
Hixie: maybe after a few hardware generations they will have a chance

[22:28:00.0000] <Hixie>
actually they won't, the test increases the number of loops based on the current time :-P

[22:31:00.0000] <othermaciej>
exponentially?

[22:32:00.0000] <Hixie>
no, linearly

[22:33:00.0000] <Hixie>
it's not really CPU bound, i would imagine

[22:33:01.0000] <Hixie>
probably more memory-bound

[22:33:02.0000] <Hixie>
there's a lot of allocation in the loop

[22:34:00.0000] <othermaciej>
isn't it a lot of allocation of things that are immediately garbage

[22:34:01.0000] <othermaciej>
?

[22:34:02.0000] <Hixie>
not immediately

[22:34:03.0000] <Hixie>
but yes, at the end of the loop

[22:36:00.0000] <Hixie>
it creates a date, and then converts that to a string using a lambda, and then creates a text node with that string's value, then creates an element with that text node as a child, then inserts that node into the document, does a regexp on it, sets a class with that element's textContent, and then finally removes it from the document and drops it on the floor

[22:37:00.0000] <Hixie>
so it's mostly shuffling data around memory, not intense computation.

[22:37:01.0000] <Hixie>
i thought i'd leave that to sunspider

[23:27:00.0000] <MacDome_>
Hixie?

[23:28:00.0000] <Hixie>
MacDome: yo

[23:28:01.0000] <MacDome>
/me thinks it's totally fair to ask browsers to be faster than Safari

[23:29:00.0000] <MacDome>
Hixie: new bug in WK?

[23:29:01.0000] <MacDome>
/me hurt his thuumb playing guitar tonight :(

[23:29:02.0000] <Hixie>
WK?

[23:29:03.0000] <Hixie>
new bug?

[23:29:04.0000] <Hixie>
/me confused

[23:31:00.0000] <MacDome>
webkit

[23:32:00.0000] <MacDome>
WK=WebKit, FF=Firefox, IE=Internet Explorer, WC=WebCore, SS=SunSpider, JSC=JavaScriptCore

[23:32:01.0000] <MacDome>
I think that's all the acronyms I use on a regular basis :)

[23:32:02.0000] <MacDome>
"<Hixie> yay, it found a new bug in webkit"

[23:33:00.0000] <Hixie>
oh

[23:33:01.0000] <Hixie>
heh

[23:33:02.0000] <Hixie>
that

[23:34:00.0000] <Hixie>
i fixed a bug, and was expecting webkit to totally pass the relevant subtest

[23:34:01.0000] <Hixie>
but then one of the next bits of that test still failed

[23:34:02.0000] <Hixie>
so i was happy

[23:37:00.0000] <MacDome>
sweeeet.  no morning meetings!

[23:39:00.0000] <MacDome>
Hixie: if you'd liek to demonstrate brokeness in WebKIt, manipulate the DOM not using Range methods and watch the Range get out of sync :(

[23:39:01.0000] <Hixie>
already in the test

[23:39:02.0000] <MacDome>
k

[23:39:03.0000] <MacDome>
Hixie: I also found a few more Range edge cases in my testsing

[23:39:04.0000] <MacDome>
which I've not yet fixed, but plan to fil a bug on

[23:42:00.0000] <Hixie>
cool

[23:42:01.0000] <Hixie>
cc me :-)

[23:44:00.0000] <MacDome>
/me doesn't quite understand what's going wrong with the cursor test

[23:47:00.0000] <MacDome>
Hixie: why would this match?

[23:47:01.0000] <MacDome>
      style.appendChild(doc.createTextNode('@media (bogus), all { #h { text-transform: uppercase; } }'));                                   // matches

[23:47:02.0000] <MacDome>
shouldn't it fail to parse?

[23:47:03.0000] <Hixie>
why would it fail to parse?

[23:48:00.0000] <Hixie>
it's an expression with an unknown keyword, which evaluates to false, and a media query "all", which always evaluates to true

[23:48:01.0000] <MacDome>
but ( is not a valid keyword char

[23:49:00.0000] <MacDome>
Hixie: I mean... the spec isn't very clear.  and I'm not sure what our impl is actually doing in that case, maybe @media (monchrome), all would be a better test

[23:49:01.0000] <MacDome>
since IMO that should also fail due to a misparse

[23:49:02.0000] <othermaciej>
Range is a crazy API

[23:50:00.0000] <MacDome>
Hixie: the grammar is quiet clear, the question is if ( and ) can be interpreted as part of a media_feature and thus be an "unknown media feature" and thus be false

[23:50:01.0000] <MacDome>
Hixie: if they can't be part of a media_feature, than it's a parse error, and is silently ignored

[23:50:02.0000] <Hixie>
"@media (monchrome), all" would be a very different test, since it would be testing something else on a monochrome UA

[23:50:03.0000] <MacDome>
IMO it's a parse error :)

[23:51:00.0000] <MacDome>
Hixie: well, the point there was that it's a valid keyword with extra parenthesis

[23:51:01.0000] <Hixie>
he spec very clearly says: "Expressions involving unknown media features or unknown/illegal values are always false"

[23:51:02.0000] <MacDome>
yeah, so the only part of that which applies here is "unknown media features"

[23:51:03.0000] <MacDome>
since "values" is on the other side of a colon

[23:51:04.0000] <MacDome>
so can ( ) be part of an "unknown media feature" ?

[23:52:00.0000] <Hixie>
oh i see, you're saying "(color)" is not valid because it doesn't have a media keyword first

[23:52:01.0000] <MacDome>
I kinda doubt it.  the parser would reject them as being a different token

[23:52:02.0000] <hsivonen>
zcorpan: restored method="post" enctype="multipart/form-data" on the file upload form. sorry about that.

[23:52:03.0000] <Hixie>
hm, some parts of media queries say the media keyword is required and others don't

[23:52:04.0000] <MacDome>
Hixie: it's kinda like saying if @media ,,,,,,, , all  { } should match

[23:52:05.0000] <MacDome>
saying that ",,,,,,," would be an "unknown media feature"

[23:53:00.0000] <MacDome>
which I would argue is rather a "parse error"

[23:53:01.0000] <Hixie>
we're arguing different things

[23:53:02.0000] <Hixie>
i had thought <media_type> was optional, as some of the examples imply it is

[23:53:03.0000] <MacDome>
Hixie: yes, @media (color) is equally invalid

[23:53:04.0000] <Hixie>
but it seems the examples are invalid

[23:54:00.0000] <MacDome>
the spec is quite clear on where parens are allowed

[23:54:01.0000] <MacDome>
even if stupidly clear

[23:54:02.0000] <MacDome>
equally so for the "not" keyword

[23:55:00.0000] <Hixie>
fixed subtest h

[23:55:01.0000] <Hixie>
fixed subtest l too

[23:56:00.0000] <jwalden>
Hixie: test 5 isn't done yet, right?

[23:57:00.0000] <Hixie>
how do you mean?

[23:58:00.0000] <jwalden>
Hixie: the line which compares against "!!!" -- I don't see how that could possibly be in the DOM at that point

[23:59:00.0000] <Hixie>
oops, crap, i forgot to fix the tests depending on !!!

[23:59:01.0000] <Hixie>
when i removed the !!!

[00:00:00.0000] <jwalden>
heh

[00:00:01.0000] <MacDome>
/me thinks hixie might have actually found a bug finally in kompo's code with test v

[00:00:02.0000] <MacDome>
so far Kompo's code has been BUG FREE :)

[00:01:00.0000] <jwalden>
just like all the code I've ever written, right?

[00:01:01.0000] <jwalden>
and all the code you've ever written

[00:01:02.0000] <jwalden>
:-P

[00:01:03.0000] <Hixie>
fixed test 5

[00:01:04.0000] <MacDome>
jwalden: oh, my code is never bug free :)

[00:01:05.0000] <MacDome>
I just write a lot of it to make up for it

[00:01:06.0000] <MacDome>
and surround myself with people who seem to be good and cleaning up my messes

[00:01:07.0000] <Hixie>
MacDome: nope, sadly for me, webkit now passes the media queries test

[00:01:08.0000] <MacDome>
(and seem to enjoy it)

[00:01:09.0000] <MacDome>
Hixie: oh, was "v' wrong too?

[00:02:00.0000] <jwalden>
nobody's code is bug-free

[00:02:01.0000] <Hixie>
MacDome: yeah

[00:02:02.0000] <MacDome>
oh

[00:02:03.0000] <MacDome>
Hixie: blame Kompo

[00:02:04.0000] <jwalden>
66->67 pass now in my build :-)

[00:02:05.0000] <Hixie>
there has to be SOME bug here

[00:02:06.0000] <Hixie>
:-P

[00:02:07.0000] <Hixie>
the real test i want to do involves shrinking the viewport dynamically

[00:02:08.0000] <MacDome>
Hixie: there are are a bunch which we don't implement

[00:03:00.0000] <MacDome>
color-index is one

[00:03:01.0000] <MacDome>
Hixie: there is a bug I filed on it

[00:03:02.0000] <Hixie>
oh

[00:03:03.0000] <Hixie>
well

[00:03:04.0000] <MacDome>
Hixie: but you're kinda venturing into the obscure now

[00:03:05.0000] <Hixie>
yes

[00:03:06.0000] <jwalden>
"now"?

[00:03:07.0000] <MacDome>
/me pulls Hixie back from the crazy weeds before he gets lost

[00:03:08.0000] <Hixie>
jwalden: ?

[00:04:00.0000] <jwalden>
Hixie: nothing other than the echoing of bz's sentiments, more or less

[00:04:01.0000] <MacDome>
woh.  suddenly were back up to 73!

[00:04:02.0000] <MacDome>
74 if I fix up my :div patch

[00:05:00.0000] <Hixie>
jwalden: which ones?

[00:05:01.0000] <MacDome>
/me wants to see Darin's patch land and fix all the iterator tests

[00:05:02.0000] <jwalden>
jwalden: that the tests are getting obscure in what's being tested

[00:06:00.0000] <jwalden>
I mean, I really don't know that ranges are used all that often, tbh

[00:06:01.0000] <jwalden>
or would be if browsers all implemented them correctly

[00:07:00.0000] <Hixie>
jwalden: DOM ranges are used a lot, actually, mostly for handing text selection

[00:07:01.0000] <Hixie>
handling

[00:08:00.0000] <Hixie>
people complain about them all the time

[00:08:01.0000] <Hixie>
that's how i came across the bugs that i tested in acid3

[00:08:02.0000] <othermaciej>
ranges are used a fair amount

[00:08:03.0000] <othermaciej>
TreeWalker and NodeIterator, I think not so much

[00:08:04.0000] <jwalden>
huh

[00:09:00.0000] <MacDome>
jwalden: I would agree, I think Ranges are useful

[00:09:01.0000] <othermaciej>
execCommand is probably used more than either, but has not yet gotten to CR (or even WD yet) in standard form

[00:10:00.0000] <MacDome>
/me is very much in favor of fixing ranges

[00:10:01.0000] <Hixie>
TreeWalker and NodeIterator would be used a lot more if they actually worked and people knew about them.

[00:11:00.0000] <jwalden>
Hixie: in moz-land it's been pointed out to me that |var nullInRegexpArgumentResult = 0 < /script/.test('\0script') ? "failed" : "passed";| should correctly return "failed", because test() returns true

[00:44:00.0000] <Hixie>
i'm about to announce a competition to get more tests for acid3

[00:44:01.0000] <Hixie>
http://www.hixie.ch/tests/evil/acid/003/competition/

[00:44:02.0000] <Hixie>
can anyone proof-read the rules and see if i missed anythin?

[00:47:00.0000] <jwalden>
I'd not say 'returns "5"' if you don't want someone to submit something which returns the string "5"

[00:48:00.0000] <Philip`>
It would be helpful to give an example of how you indicate failure

[00:48:01.0000] <Philip`>
(like what kind of exception to throw)

[00:49:00.0000] <Philip`>
It's not really a competition if there's no prizes

[00:49:01.0000] <jwalden>
I assume Hixie's going to clean up submitted tests to report in the way all the others are reporting

[00:49:02.0000] <jwalden>
with just as good error messages, etc.

[00:50:00.0000] <Hixie>
he prize is your name in the source :-P

[00:51:00.0000] <Hixie>
(and thanks for the other suggestions; fixed)

[00:51:01.0000] <jwalden>
oh, Hixie: you should add an extra way to display test results that uses window.open with a data: URL, so you can reasonably see all the results without blowing away display of acid3 :-)

[00:52:00.0000] <Hixie>
yeah

[00:52:01.0000] <Hixie>
good idea

[00:52:02.0000] <Hixie>
will look into it

[00:53:00.0000] <Hixie>
oh oops, i missed off the paragraph saying the name would be in the source

[00:53:01.0000] <Hixie>
duh

[00:55:00.0000] <Hixie>
ok, blogged it

[00:57:00.0000] <MacDomeSleep>
Hixie: looks fine... but I'm sad that you require trunk builds to fail :(

[00:57:01.0000] <MacDomeSleep>
/me had hoped to get away with Safari 3 failing

[00:57:02.0000] <Hixie>
MacDomeSleep: heh

[00:58:00.0000] <MacDomeSleep>
I guess trunk builds failing means that it won't be a repeat of one of your existing tests

[01:01:00.0000] <Hixie>
:-)

[01:02:00.0000] <MacDomeSleep>
Hixie: you realize that you're deincentivizing us from fixing existing acid3 tests

[01:02:01.0000] <MacDomeSleep>
encouraging us to wait :)

[01:02:02.0000] <MacDomeSleep>
hyatt has at least decided to wait

[01:03:00.0000] <Hixie>
well, if you wait it'll certainly make _my_ life easier :-)

[01:03:01.0000] <MacDomeSleep>
really?

[01:03:02.0000] <MacDomeSleep>
why so?

[01:03:03.0000] <MacDomeSleep>
we're doing lots of work for you!

[01:03:04.0000] <Hixie>
won't have to keep coming up with new tests :-P

[01:03:05.0000] <MacDomeSleep>
we're debugging your darn test!

[01:03:06.0000] <Hixie>
yes, that actually is very helpful

[01:03:07.0000] <jwalden>
true 'dat

[01:03:08.0000] <MacDomeSleep>
Hixie: I'm suggesting you not come up with new ones :)

[01:03:09.0000] <MacDomeSleep>
it's OK if WebKit passes w/ 100% when you release :)

[01:04:00.0000] <MacDomeSleep>
so long as FF and Opera don't :)

[01:04:01.0000] <Hixie>
if i were you i would not let the acid3 test affect your priorities either one way or the other

[01:04:02.0000] <MacDomeSleep>
Hixie: well, I just do it for fun

[01:04:03.0000] <Hixie>
you should prioritise the bugs based on how important they are

[01:04:04.0000] <Hixie>
sure

[01:04:05.0000] <MacDomeSleep>
then again, that's pretty much all my webkit hacking

[01:04:06.0000] <MacDomeSleep>
my actual "priorities" lie elsewhere

[01:06:00.0000] <Hixie>
i just meant you as in the project as a whole

[01:08:00.0000] <Hixie>
bed time

[01:08:01.0000] <Hixie>
nn

[01:08:02.0000] <MacDomeSleep>
Hixie: German, French or Italian?

[01:08:03.0000] <MacDomeSleep>
for some definition of "german" :)

[01:35:00.0000] <Philip`>
Hixie: Maybe you could test something like http://tinyurl.com/38d3lj if you haven't already - unless something changed since I last looked, WebKit doesn't handle dynamic updates with sibling selectors

[01:36:00.0000] <hsivonen>
/me smiles at Hixie commit message for the subtitle

[01:36:01.0000] <hsivonen>
Hixie's even

[02:22:00.0000] <Lachy>
Hixie, why is the subtitle missing from the whatwg version of the spec?

[03:01:00.0000] <Dashiva>
Lachy: Probably because whatwg doesn't have the same process requirements as w3c

[03:01:01.0000] <Dashiva>
(to put it in a nice way)

[03:12:00.0000] <Lachy>
maybe, but we want people to understand that the specs are mostly identical (excluding the metadata at the top), and differences like that might send the wrong message.

[03:12:01.0000] <hsivonen>
I agree with Lachy 

[03:26:00.0000] <Philip`>
Lachy: The subtitle is metadata at the top

[03:29:00.0000] <Philip`>
kig: With http://glimr.rubyforge.org/cake/canvas.html#ImageDataFill are you aware that the putImageData won't necessarily draw 640x120 canvas pixels (e.g. it might be drawn at half the intended size in some implementations)?

[03:31:00.0000] <Lachy>
Philip`, I was just referring to the the links to version history/other versions, copyright statement, etc.

[03:31:01.0000] <Philip`>
and the abstract?

[03:33:00.0000] <hsivonen>
is there a sure exec trick for self-restarting a CPython script regardless of what the interpreter and script paths are?

[03:33:01.0000] <Lachy>
yeah, everything down to the TOC.  But, arguably, the abstract should be identical

[03:36:00.0000] <kig>
Philip`: . uh .. really?

[03:38:00.0000] <kig>
it's not quite fast enough to be of much use anyhow but screwing up blitting is pretty high on the "why do they even bother"-scale

[03:38:01.0000] <Philip`>
kig: http://www.whatwg.org/specs/web-apps/current-work/multipage/section-the-canvas.html#getimagedata says "Note: The width and height (w and h) might be different than the sw and sh arguments to the function, e.g. if the canvas is backed by a high-resolution bitmap."

[03:39:00.0000] <Philip`>
and the example below says "The data returned by getImageData() is at the resolution of the canvas backing store, which is likely to not be one device pixel to each CSS pixel if the display used is a high resolution display. Thus, while one could create an ImageData object, one would net necessarily know what resolution the canvas expected (how many pixels the canvas wants to paint over one coordinate space unit pixel)."

[03:39:01.0000] <kig>
oh that

[03:39:02.0000] <Philip`>
The problem is that WebKit wants to implement it with that kind of scaling, and it seems like a big pain since it'll break everyone because nobody expects it

[03:40:00.0000] <kig>
i'm correcting for that in the mouse coords (discounting -webkit-transform) but haven't done anything with putImageData

[03:41:00.0000] <Philip`>
(so it'd be nice to have a better solution for this, where authors don't have to be so careful to not get it wrong and break Safari)

[03:42:00.0000] <kig>
get the real width and real height, scale

[03:42:01.0000] <Philip`>
kig: It's not about CSS scaling (or transforms) of the displayed canvas - it's about how many pixels the implementation stores for a <canvas width=100 height=100>

[03:43:00.0000] <kig>
ah

[03:43:01.0000] <kig>
search for pixel width & pixel height with one-pixel putImageData + getImageData -combos?

[03:45:00.0000] <Philip`>
I think you can't get the right numbers from one-pixel ImageDatas, since there might be 0.5 real-pixels per canvas-pixel, or might be 1.5, etc

[03:45:01.0000] <kig>
okay, so don't use ImageData

[03:45:02.0000] <kig>
problem solved, let's use gl canvas instead

[03:46:00.0000] <Philip`>
That makes the feature a bit useless, which isn't a great solution :-)

[03:47:00.0000] <Philip`>
It'd be nice if we could fix ImageData but I don't know how :-(

[03:48:00.0000] <kig>
ditch the "ha ha ha the real width of a canvas in pixels is UNKNOWABLE!", perhaps?

[03:50:00.0000] <Philip`>
kig: The objection to that is that people want to run e.g. Safari on OS X with a 400% UI scaling factor on a really-high-res display, and want the canvas to be implemented with 4x as many pixels per side so that it's still sharp and vector-like

[03:50:01.0000] <kig>
that doesn't stop you from knowing the width of the canvas in pixels

[03:51:00.0000] <kig>
canvas.getPixelWidth(), getPixelHeight() ?

[03:51:01.0000] <Philip`>
Ah, so you'd manually read canvas.realWidth or something?

[03:52:00.0000] <Philip`>
then I guess you'd use putImageData({ width: w*Math.round(canvas.realWidth/canvas.width), ... })

[03:53:00.0000] <Philip`>
and also your array-filling code would take n^2 more time when the scaling factor increases, which sounds like great fun

[03:57:00.0000] <Philip`>
Maybe it'd be nearly as good to just use getImageData(x, y, w, h) first to get the .width and .height, then overwrite all the .data and put it back

[03:57:01.0000] <Philip`>
since the extra cost of creating a JS array of integers should be negligible compared to the cost of manipulating it with JS and then converting it back into a C array

[04:08:00.0000] <kig>
/me counted something like nine branches per pixel in firefox's canvas.putImageData

[04:10:00.0000] <kig>
for each component, errorcheck value, check if float or int, cast accordingly

[04:45:00.0000] <kig>
Philip`: why doing SVD to decompose transformation matrices into rotate+scale+rotate is a bad idea: http://glimr.rubyforge.org/cake/benchmark.html

[04:46:00.0000] <Philip`>
kig: Firefox needs to do more comparisons to clamp to 0-255, too

[04:47:00.0000] <Philip`>
kig: There's broken character encoding on benchmark.html :-p

[04:48:00.0000] <Philip`>
Also, that does look like a problem

[04:49:00.0000] <zcorpan>
Hixie: hmm, why w3c version only? i think more people "don't read" the whatwg version

[05:01:00.0000] <hsivonen>
Philip`: http://validator.nu/?doc=http%3A%2F%2Fphilip.html5.org%2Fdemos%2Fcanvas%2F3d%2Fx3d%2Ftest.xhtml&charset=&nsfilter=http%3A%2F%2Fwww.web3d.org%2Fspecifications%2Fx3d-namespace

[05:01:01.0000] <hsivonen>
enjoy the creeping featurism :-)

[05:07:00.0000] <Philip`>
hsivonen: Looks good :-)

[05:08:00.0000] <Philip`>
though could the "Namespace Filter" words be made non-breakingly-spaced, since there's plenty of horizontal room on the screen and it looks a little inconsistent when it's wrapped?

[05:10:00.0000] <zcorpan>
hsivonen: now we're talking :D

[05:12:00.0000] <Lachy>
Hixie, is the prize for the acid3 competition simply being attributed in the comments in the file?

[05:12:01.0000] <Philip`>
hsivonen: Would it be sensible to emit a warning/comment that there is some filtered-namespace content and it isn't being validated and so the document may not be valid?

[05:14:00.0000] <Philip`>
Also, it's not clear that this doesn't affect the text/html parser if you try to filter the HTML namespace

[05:17:00.0000] <Philip`>
hsivonen: Why is http://html5.validator.nu/?doc=http%3A%2F%2Fphilip.html5.org%2Ftests%2Fcanvas%2Fsuite%2Ftests%2Fresults.html (number of <col> != number of columns) an error?

[05:17:01.0000] <annevk>
for something that only needs a URI the UI of the validator is becoming increasingly complex

[05:18:00.0000] <Philip`>
annevk: Use http://html5.validator.nu/ if you want to avoid the complexity of XML :-)

[05:19:00.0000] <hsivonen>
Philip`: yeah, the length of "Namespace Filter" is a problem. I have to try out different options with that one

[05:20:00.0000] <hsivonen>
Philip`: presumably you'd put stuff in the filter field in order to suppress messages, so a warning wouldn't be very productive. Could be argued either way, though.

[05:21:00.0000] <hsivonen>
btw, there might be a bug with the automatic schema selection mechanism and the namespace filter. need to debug :-(

[05:21:01.0000] <zcorpan>
hsivonen: the encoding override emits a warning... i'd expect namespace override to emit a warning as well

[05:21:02.0000] <hsivonen>
Philip`: I can't recall if the col thing is based on HTML 4, WHATWG list email from Hixie or my own judgment

[05:22:00.0000] <zcorpan>
otherwise it's easy to fool people that a document validates when they're not paying attention to the URL

[05:22:01.0000] <hsivonen>
annevk: http://html5.validator.nu/ has simple UI. for the generic case, people want to be able to do stuff while others want simplicity. UI design is hard.

[05:23:00.0000] <Philip`>
People could put "Valid XHTML5!" buttons on their web page, linking to the validator with nsfilter=http://www.w3.org/1999/xhtml

[05:23:01.0000] <hsivonen>
annevk: in any case, you can paste a URI in the Document field and hit return and get sensible defaults

[05:23:02.0000] <hsivonen>
zcorpan, Philip`: ok, I'll add a warning

[05:24:00.0000] <hsivonen>
schema override doesn't warn though

[05:24:01.0000] <hsivonen>
by design

[05:24:02.0000] <zcorpan>
that's fine :)

[05:25:00.0000] <hsivonen>
annevk: not that on the HTML5 side, encoding override and ns filter are subtle :-)

[05:25:01.0000] <hsivonen>
s/not/note/

[05:26:00.0000] <hsivonen>
Philip`: I think I'll add JavaScript for dimming the ns filter field when an HTML parser option is chosen.

[05:26:01.0000] <annevk>
hmm, I'd think html5.validator.nu should be on validator.nu and what's now on validator.nu should be on advanced or complex.validator.nu

[05:26:02.0000] <annevk>
but nevermind

[05:27:00.0000] <hsivonen>
Philip`: I don't know how to communicate the applicability when the parser choice is in the auto state

[05:27:01.0000] <hsivonen>
annevk: yeah, that has occurred to me

[05:27:02.0000] <hsivonen>
annevk: at least I should make links between them

[05:28:00.0000] <annevk>
in the end i'd want this validator to be on w3.org but that may be hard :)

[05:28:01.0000] <Philip`>
hsivonen: I'm not sure how much it matters since the only thing that would affect text/html is filtering http://blah/xhtml, and that's a silly thing to do

[05:28:02.0000] <hsivonen>
Philip`: actually, there's also the XML namespace

[05:29:00.0000] <hsivonen>
Philip`: since the implementation of lang is magic

[05:29:01.0000] <Philip`>
Ah

[05:29:02.0000] <Philip`>
Still doesn't sound like anyone would have a valid reason to filter namespaces from text/html, though

[05:30:00.0000] <hsivonen>
annevk: http://lists.w3.org/Archives/Public/public-qa-dev/2007Dec/0000.html

[05:32:00.0000] <hsivonen>
food before software fixes...

[05:32:01.0000] <annevk>
ah cool, discussion seems to continue as well

[05:56:00.0000] <annevk>
crap

[05:57:00.0000] <annevk>
/me only saw the first four e-mails of the <canvas> security stuff

[06:54:00.0000] <MikeSmith>
annevk (or anybody) - Can you find out when the first public release of Opera with XHR support was?

[06:54:01.0000] <MikeSmith>
If so, I would appreciate it.

[06:55:00.0000] <MikeSmith>
I guess it would have been a development/beta release of Opera 8

[06:55:01.0000] <MikeSmith>
early 2005 or late 2004

[06:55:02.0000] <annevk>
http://snapshot.opera.com/windows/w760p1.html

[06:56:00.0000] <Philip`>
MikeSmith: http://annevankesteren.nl/2005/04/opera-8 has relevant comments like "Opera 8 only supports enough of XMLHttpRequest to get gmail working correctly. They're only supporting it because of gmail."

[06:56:01.0000] <annevk>
(g opera xmlhttprequest changelog)

[06:58:00.0000] <annevk>
oh, I was still promoting xml:id back then

[06:59:00.0000] <hsivonen>
Opera 8 lacked quite a bit HTTP header manipulation stuff

[07:03:00.0000] <MikeSmith>
"2004-08: First public release of Opera with XHR support (v7.60 Technical Preview for Windows)"

[07:04:00.0000] <MikeSmith>
is probably good enough for me

[07:04:01.0000] <MikeSmith>
since elsewhere I already have:

[07:04:02.0000] <MikeSmith>
2000-07: XMLHttpRequest support lands in Mozilla codebase

[07:04:03.0000] <MikeSmith>
(thanks to Gavin)

[07:05:00.0000] <MikeSmith>
http://bonsai.mozilla.org/cvslog.cgi?file=mozilla/configure.in&rev=1.692

[07:07:00.0000] <gavin>
"XMLHttpRequest support enabled by default in Mozilla codebase" might be more accurate

[07:07:01.0000] <gavin>
doesn't matter much to me, though :)

[07:08:00.0000] <Philip`>
When did IE get it?

[07:08:01.0000] <Philip`>
(or its equivalent)

[07:09:00.0000] <gsnedders>
Philip`: Trident V, IE7

[07:10:00.0000] <Philip`>
(where by "equivalent" I mean the XMLHTTP ActiveX thing)

[07:10:01.0000] <Philip`>
Oh, apparently IE 5.0

[07:11:00.0000] <Philip`>
which would be 1999-03

[07:17:00.0000] <hsivonen>
eventually this compound document stuff is going to lead to one huge Web schema and checking that the content type matches the root element

[07:17:01.0000] <hsivonen>
Atom+XHTML5+SVG1.1+MathML2+XBL2

[07:55:00.0000] <MikeSmith>
gsnedders - thanks, I reworded now with your phrasing

[07:55:01.0000] <MikeSmith>
oops

[07:55:02.0000] <MikeSmith>
make that,

[07:55:03.0000] <gsnedders>
reworded what?

[07:55:04.0000] <MikeSmith>
gavin  - thanks, I reworded now with your phrasing

[07:55:05.0000] <gsnedders>
ah. not me.

[07:55:06.0000] <gsnedders>
that makes more sense :)

[07:55:07.0000] <MikeSmith>
gsnedders - thanks to you also, for various unspecified stuff

[07:56:00.0000] <gsnedders>
:D

[08:56:00.0000] <MikeSmith>
anybody remember when the first public draft of Web Apps 1.0 was posted?

[08:56:01.0000] <MikeSmith>
was there any announcement?

[08:56:02.0000] <annevk>
it's on hixie's site

[08:57:00.0000] <zcorpan>
WF2 came first...

[08:57:01.0000] <annevk>
http://www.hixie.ch/specs/html/apps/web-apps-1

[08:57:02.0000] <annevk>
oh yeah, started all with http://lists.w3.org/Archives/Member/w3c-archive/2003Sep/att-0014/hfp.html

[08:59:00.0000] <MikeSmith>
annevk, zcorpan - thanks

[09:00:00.0000] <annevk>
working on an essey on "recent" web history? :)

[09:02:00.0000] <Philip`>
I think he's planning to go back in time and stop all these events to prevent the future destruction of human civilisation

[09:02:01.0000] <annevk>
that sounds more realistic indeed

[09:03:00.0000] <zcorpan>
i think i read through an early version of WF2 in 2004, probably on hixie's site, before i knew what whatwg was

[09:04:00.0000] <zcorpan>
when i realised that it wasn't implemented anywhere i thought "why the heck am i reading this?" :)

[09:06:00.0000] <zcorpan>
i don't remember how or why i was reading it, i was probably trying to learn about xhtml and stumbled upon hixie's blog

[09:06:01.0000] <Dashiva>
A common feeling

[09:06:02.0000] <gsnedders>
zcorpan: half the specs I read aren't implemented anywhere, or uniformly differently from the spec.

[09:08:00.0000] <Dashiva>
Fortran 2003 will rock your world (not implemented)

[09:09:00.0000] <Philip`>
http://gcc.gnu.org/wiki/Fortran2003 ?

[09:10:00.0000] <Philip`>
It doesn't appear to be not implemented...

[11:44:00.0000] <jwalden>
Hixie: another bug -- in test 90, |assert((/(1)\0(2)/.test("1\02")), "NUL in regexp didn't match correctly")| should correctly fail because "1\02" is a two-character string where the \02 is an octal escape

[12:08:00.0000] <zcorpan>
"character access by index "foo"[1] (part of the ECMAScript 4 spec)." -- http://ejohn.org/blog/acid3-tackles-ecmascript/ hmm, not in es3?

[12:09:00.0000] <gavin>
don't think so

[12:09:01.0000] <zcorpan>
then i would guess that acid3 can't test that...

[12:09:02.0000] <gavin>
although that example does work in a trunk firefox

[12:10:00.0000] <zcorpan>
yeah, it works everywhere except ie, iirc

[12:22:00.0000] <Hixie>
acid3 doesn't test that (anymore)

[12:22:01.0000] <Hixie>
jwalden: thanks, will fix

[12:23:00.0000] <zcorpan>
Hixie: ok

[12:28:00.0000] <zcorpan>
Hixie: have you thought about how to be able to run the test on opera mobile or iphone?

[12:28:01.0000] <zcorpan>
acid2 was no problem, but acid3 causes wrapping, i think

[12:29:00.0000] <Hixie>
Acid3 requires a browser with a width of 665 pixels minimum.

[12:30:00.0000] <Hixie>
in opera you'd have to switch to desktop mode

[12:30:01.0000] <Hixie>
i don't recall how wide iphone's viewport is

[12:51:00.0000] <othermaciej>
not 665 pixels

[12:51:01.0000] <othermaciej>
even in landscape

[12:52:00.0000] <aroben>
othermaciej: but the default viewport is 980px, I believe

[12:52:01.0000] <aroben>
*wide

[12:52:02.0000] <eseidel_>
wb dbaron 

[12:53:00.0000] <othermaciej>
oh, the viewport

[12:57:00.0000] <takkaria>
/me bops the w3c and its member-only mailing lists

[13:17:00.0000] <eseidel>
Hixie: see my comments on http://bugs.webkit.org/show_bug.cgi?id=16797 when you get time

[13:17:01.0000] <zcorpan>
Hixie: in the reference rendering, opera wraps in the result div at the "/" because the parent has a width of 0

[13:18:00.0000] <Hixie>
zcorpan: fixed

[13:18:01.0000] <zcorpan>
Hixie: thanks

[13:18:02.0000] <Hixie>
eseidel: oops

[13:19:00.0000] <eseidel>
Hixie: the "cursor: none;" getting treated as "cursor: crosshair;l" is *awesome*

[13:20:00.0000] <Hixie>
eseidel: fixed; can't seem to reproduce the none/crosshair issue though

[13:20:01.0000] <Hixie>
afk biab

[13:20:02.0000] <eseidel>
Hixie: I think it might be a regression in TOT

[13:20:03.0000] <Hixie>
k

[13:39:00.0000] <zcorpan>
"Junto a la definición de HTML 5 también se está haciendo lo mismo con XHTML 5 (Extensible HyperText Markup Language), que no es más que el mismo HTML pero cumpliendo con todas las características del XML y, por lo tanto, aún más estandarizado." -- http://www.frihost.com/forums/vt-87178.html

[13:40:00.0000] <zcorpan>
oh... so once a vocabulary is serialized as xml, it becomes even more standardized. that's great, then :)

[13:41:00.0000] <Philip`>
("Together with the definition of HTML 5 is also doing the same with XHTML 5 (Extensible HyperText Markup Language), which is not  More than the same HTML but complying with all the features of XML and therefore even more standardized.")

[13:42:00.0000] <annevk>
fun

[13:42:01.0000] <Dashiva>
"More standardized". Nice

[14:15:00.0000] <zcorpan>
hsivonen: why does validator.nu think that application/octet-stream is an xml mime type? (and non-html mime type)

[14:16:00.0000] <zcorpan>
(the net effect being that i can't validate extensionless html documents with file upload, even with the lax option set)

[14:24:00.0000] <zcorpan>
filtering http://www.w3.org/1999/xhtml makes xhtml documents invalid... which is probably a good thing :)

[14:37:00.0000] <zcorpan>
hsivonen: v.nu doesn't warn about filtered attributes

[15:34:00.0000] <Hixie>
vote it up :-) http://programming.reddit.com/info/65fdm/comments

[15:35:00.0000] <annevk>
so the three votes are arve, you and me? :)

[15:36:00.0000] <Hixie>
i guess :-)

[15:37:00.0000] <gavin>
/me doesn't have a reddit account

[15:39:00.0000] <annevk>
takes 10 seconds

[15:40:00.0000] <kingryan>
/me is number 5 :)

[15:44:00.0000] <Lachy>
/me registers a reddit account

[15:47:00.0000] <Lachy>
/me is number 9

[15:48:00.0000] <hober>
I was 4 or 5 I think

[15:49:00.0000] <Lachy>
hober, you must have been 4, kingryan said he was 5

[15:52:00.0000] <Philip`>
I will attempt to win by waiting until I can get the largest number

[15:52:01.0000] <Lachy>
Reddit's UI is really horrible. Where do I find the links to the comment pages for other posts?

[15:53:00.0000] <annevk>
the links that say "comment"?

[15:53:01.0000] <annevk>
/me thinks the UI is pretty obvious

[15:53:02.0000] <Hixie>
Philip`: you win by convincing other people to vote as well -- it's the count of how many people you can convince to vote for it

[15:54:00.0000] <Hixie>
Philip`: so far i think i'm up to about 5

[15:54:01.0000] <Lachy>
oh, it's just hidden with non-obvious links in the same colour as other text

[15:55:00.0000] <Lachy>
I prefer Digg, it's so much better organised

[15:55:01.0000] <Hixie>
Lachy: feel free to vote for that blog entry on digg too :-)

[15:55:02.0000] <annevk>
i once got on digg, wasn't pretty

[15:55:03.0000] <gavin>
I thought I was 5

[15:56:00.0000] <annevk>
i was one, hah

[15:57:00.0000] <Lachy>
/me twitters the URL.


2008-01-15
[16:00:00.0000] <Lachy>
Hixie, I think the contest needs a better prize

[16:00:01.0000] <Hixie>
like what?

[16:00:02.0000] <Hixie>
and yes, i agree

[16:01:00.0000] <Lachy>
hmm... well, a million dollars would be nice :-)  But how about a JavaScript development book

[16:02:00.0000] <Dashiva>
How about a signed copy of the html5 spec (when it's done) :)

[16:02:01.0000] <jruderman_>
tour of google?

[16:02:02.0000] <Hixie>
Dashiva: i don't want to encourage people to consider my signature worth anything.

[16:03:00.0000] <Dashiva>
Not yours, the entire WG's

[16:03:01.0000] <Hixie>
lordy

[16:03:02.0000] <Lachy>
or alternatively, a voucher for an online store

[16:03:03.0000] <Hixie>
that would be scary

[16:03:04.0000] <annevk>
one of the five handwritten versions of the HTML5 :p

[16:03:05.0000] <Hixie>
/me ponders on the issue

[16:03:06.0000] <Dashiva>
We need something to put in a museum to document it all

[16:03:07.0000] <annevk>
we will also sell one to amazon for a billion dollars to buy off patents

[16:03:08.0000] <Hixie>
my concern is that if there's a prize with monetary value it becomes a whole legal issue that i'm not competent to deal with

[16:04:00.0000] <jruderman_>
rumor has it that if the prize is worth less than $5000 you don't have to deal with too much crap

[16:04:01.0000] <Hixie>
/me notices a google exercise ball has rolled into his cube and wonders where it came from

[16:04:02.0000] <Hixie>
jruderman_: oh?

[16:05:00.0000] <Dashiva>
I always imagined google would have other polygons than just simple cubes

[16:06:00.0000] <Philip`>
The number of sides of the polygon represents the status of the employee, and the people at the very top have rooms that are indistinguishable from circles

[16:06:01.0000] <Hixie>
i love that book

[16:06:02.0000] <Lachy>
Hixie, a signed copy of Bible5 ;-) http://lists.w3.org/Archives/Public/www-html/2007Jun/0008.html

[16:06:03.0000] <Dashiva>
Wasn't there going to be a movie?

[16:06:04.0000] <Hixie>
Lachy: :-P

[16:07:00.0000] <Hixie>
what's it called. flatworld? flatland?

[16:07:01.0000] <Dashiva>
Flatland, I think

[16:07:02.0000] <Hixie>
great book

[16:07:03.0000] <Philip`>
http://xahlee.org/flatland/index.html

[16:07:04.0000] <Dashiva>
I read it on gutenberg, worked surprisingly well

[16:07:05.0000] <Hixie>
oh the other problem with prizes is there are sixteen tests, and likely they'll be built from many more than 16 submissions :-P

[16:08:00.0000] <Lachy>
so how will the winner be decided?

[16:08:01.0000] <Lachy>
or were you intending to just say everyone who's test was included was a winner

[16:08:02.0000] <Hixie>
well currently everyone who ends up contributing a test that i use will be mentioned in the source

[16:09:00.0000] <Hixie>
but i could probably come up with some "best" test determination somehow

[16:09:01.0000] <Lachy>
/me needs to write a test

[16:09:02.0000] <Lachy>
any known bugs that don't have tests in there yet?

[16:09:03.0000] <Hixie>
not good ones

[16:10:00.0000] <Philip`>
/me wonders about the sibling-selector dynamic update bug he mentioned a while ago

[16:10:01.0000] <Hixie>
that's already tested at least twice, i believe

[16:11:00.0000] <Philip`>
Ah, good

[16:12:00.0000] <Lachy>
I came across a bug today in Firefox, but I don't think it qualifies due to the spec requirements (unless I can reproduce it without those parts)

[16:13:00.0000] <jruderman_>
Hixie: isn't the real prize that you can be almost certain that gecko and/or webkit developers will fix your bug? ;)

[16:15:00.0000] <Lachy>
at the very least, the winner should get a free upgrade of their favourite browser :-)

[16:15:01.0000] <Dashiva>
The winner gets to choose the code name for Firefox 4

[16:16:00.0000] <Hixie>
jruderman_: that's what i figured, but apparently people want more!

[16:17:00.0000] <kingryan>
/me is going to start a pool to take bets on which browser passes it first and when

[16:17:01.0000] <Philip`>
Dashiva: There's http://www.flatlandthemovie.com/ and http://www.flatlandthefilm.com/ (I'd only heard of the second one before now)

[16:17:02.0000] <Lachy>
/me votes Opera

[16:18:00.0000] <Philip`>
/me votes Konqueror

[16:18:01.0000] <Dashiva>
Probably same as for acid2 :)

[16:18:02.0000] <Lachy>
(I wonder if I'm inelible for this pool, since I work for Opera?)

[16:18:03.0000] <kingryan>
Lachy, Philip`: yeah, but how long will it take? :)

[16:18:04.0000] <Lachy>
*ineligible

[16:19:00.0000] <Dashiva>
Opera passes acid3 in May 2009

[16:20:00.0000] <Philip`>
kingryan: 2008-08-27T16Z

[16:20:01.0000] <Philip`>
(for development builds)

[16:21:00.0000] <Dashiva>
Pssh, those don't count. If you can't do it without breaking the web, it's cheating :)

[16:21:01.0000] <Lachy>
My guess is the next major version of Opera that ships after 9.5 (currently in beta)

[16:22:00.0000] <kingryan>
of course, we don't know when the test itself will be done yet

[16:22:01.0000] <kingryan>
nor what specifically it will test

[16:22:02.0000] <Lachy>
we know about 84% if the tests

[16:22:03.0000] <Lachy>
s/if/of/

[16:23:00.0000] <Philip`>
Dashiva: Okay, then I'll say 2008-12-09T11Z for a released build

[16:23:01.0000] <Philip`>
Oops, I got confused by timezones, I meant 2008-12-09T12Z

[16:25:00.0000] <Lachy>
Philip`, guesses should be down to millisecond precision :-)

[16:27:00.0000] <Philip`>
Lachy: That would be too hard to judge - there might be two people guessing correctly to the nearest second, but the internet latencies and FTP timestamp imprecisions would make it too hard to tell them apart

[16:27:01.0000] <kingryan>
second precision is probably enough :)

[16:29:00.0000] <jgraham>
Hmm. I guess webkit passes first, but neither Webkit nor Gecko are at the right point in their release cycle to ship soon...

[16:29:01.0000] <Philip`>
Could you give me a couple of weeks before I settle on the minute and second portions of my predictions?

[16:29:02.0000] <jgraham>
Maybe IE8 will astound everyone :)

[16:30:00.0000] <Lachy>
if the time is for the final release build that passes the test, then all votes need to be in before any preview releases are available

[16:30:01.0000] <Philip`>
Lachy: Can you give that vote deadline in seconds please?

[16:31:00.0000] <Hixie>
how do you define "preview releases"?

[16:32:00.0000] <Lachy>
any publicly available build that passes the test

[16:32:01.0000] <Philip`>
jgraham: It'd be interesting to know how many fixes Firefox 3.1 might include

[16:32:02.0000] <Lachy>
including nightlies

[16:32:03.0000] <Hixie>
Philip`: so... it looks like safari and firefox aren't changing their path construction to ignore the CTM as per spec

[16:32:04.0000] <Hixie>
Philip`: so i guess i'll have to change the spec

[16:32:05.0000] <Hixie>
Philip`: any advice on this matter?

[16:34:00.0000] <jgraham>
Philip`: Are the Mozilla folks planning to release 3.x versions?

[16:35:00.0000] <annevk>
http://www.google.com/search?q=%22firefox+3.1%22

[16:36:00.0000] <Philip`>
Hixie: Seems sensible - I'd expect the most complex bit would be describing how strokes are transformed (I think Firefox and Safari do it the same, which is helpful), and maybe issues with pattern fill transforms, and I'm not sure what else

[16:37:00.0000] <Hixie>
can you elaborate on those?

[16:38:00.0000] <gavin>
jgraham: what do you mean?

[16:38:01.0000] <gavin>
3.0.x security releases are planned

[16:38:02.0000] <Lachy>
Hixie, you got a response on reddit.

[16:38:03.0000] <Philip`>
jgraham: I'd hope so, because Moz2 (presumably for FF4) sounds like a potentially risky step and it'd be nice to get some intermediate improvements :-)

[16:38:04.0000] <gavin>
but there are no plans for "major minor" releases, as in 3.1

[16:39:00.0000] <jgraham>
gavin: Yeah, that's what I had thought

[16:39:01.0000] <gavin>
the release after 3 is most likely to be 4, in my opinion

[16:39:02.0000] <gavin>
subject to change, IANAL, etc, etc ;)

[16:40:00.0000] <jgraham>
gavin: which means, to return to the original context, that a released gecko won't pass acid 3 for several years

[16:40:01.0000] <gavin>
several years?

[16:41:00.0000] <jgraham>
since mozilla 2 is unlikely to be quick :)

[16:41:01.0000] <gavin>
I don't think anyone really knows when the next gecko release will be

[16:41:02.0000] <gavin>
it might be 1.9.1

[16:42:00.0000] <Philip`>
Hixie: The CTM's scale/rotation is applied to the stroke lines when stroke() is called, so e.g. rect(...); scale(n, n); stroke(); makes the lines n times wider

[16:43:00.0000] <Philip`>
Hixie: and http://tinyurl.com/2bfvog has a more interesting interaction of stroke and rotation/scale

[16:44:00.0000] <Philip`>
(Translations have no effect)

[16:44:01.0000] <jgraham>
gavin: Well FF2 shipped in october 2006 which is, I guess, roughly an 18 month release cycle for FF2-3. Wildly extrapolating into the future, I conclude that "several years" was probably a slight overstatement but "not soon" is probably accurate

[16:45:00.0000] <Hixie>
Philip`: o_O

[16:45:01.0000] <gavin>
a 1.9.1-based release could be pretty soon

[16:45:02.0000] <gavin>
more of a FF1.5-FF2 timeframe

[16:46:00.0000] <Hixie>
Philip`: well that's just fucking _weird_

[16:47:00.0000] <Philip`>
(Hmm, I think I didn't actually test that Safari acts the same as Firefox in those cases)

[16:48:00.0000] <Philip`>
Hixie: Maybe ask e.g. Cairo developers if there's a relatively straightforward explanation of how their strokes are rendered?

[16:48:01.0000] <Philip`>
or leave it as implementation-defined behaviour :-)

[16:49:00.0000] <Philip`>
or at least don't worry much about it now since it's not as important as just applying the CTM to points at the right times

[16:50:00.0000] <fredrikh>
Hixie: speaking of paths, the arcTo specification in HTML5 seems to disagree with postscript and CG on one point

[16:50:01.0000] <Hixie>
fredrikh: send mail :-)

[16:51:00.0000] <Philip`>
fredrikh: Maybe see http://lists.whatwg.org/pipermail/whatwg-whatwg.org/2007-July/012117.html first in case that mentions it already :-)

[16:51:01.0000] <fredrikh>
Philip`: yeah, that's what i'm talking about :)

[16:55:00.0000] <Philip`>
Hixie: About pattern fills, I have no idea how it's implemented already, but I guess it'd do something like use the current CTM at the time where fill() is called (so fillStyle=createPattern(...); rect(...); scale(n, n); fill(); would let you scale the pattern without affecting the path) or something

[16:55:01.0000] <Philip`>
I should probably try testing that some day (not today) to see what happens...

[16:56:00.0000] <kig>
Philip`: that works in firefox and safari

[16:56:01.0000] <Hixie>
Philip`: k

[16:56:02.0000] <Philip`>
kig: The pattern thing?

[16:56:03.0000] <Hixie>
/me mumbles something about all this being way over his head

[16:56:04.0000] <kig>
but it's a hack because transforms change the stroke

[16:57:00.0000] <Philip`>
kig: Ah, okay, thanks

[17:01:00.0000] <kig>
(how i'm doing it in the SVG renderer is: setup path transform, create path, setup fill pattern transform, fill, setup stroke pattern transform, tweak ctx.lineWidth, stroke)

[17:01:01.0000] <Philip`>
Hixie: Anything I can help with (preferably not something very complex since I only barely know enough to pretend to know more than I really do)? :-)

[17:01:02.0000] <Philip`>
kig: Does that break when there's a non-uniform scale?

[17:01:03.0000] <kig>
yes

[17:02:00.0000] <Philip`>
Okay

[17:02:01.0000] <Philip`>
kig: Do you have ideas for redesigning the canvas API in a backward-compatible way so that it actually makes sense? ;-)

[17:03:00.0000] <Hixie>
Philip`: review the new text when i'm done, i guess :-)

[17:05:00.0000] <kig>
Philip`: have a transformation matrix for gradient/pattern objects 

[17:06:00.0000] <kig>
that's applied after determining which pixels to draw on, but before the actual drawing

[17:08:00.0000] <kig>
var g = createLinearGradient(...); g.setTransform(1,0,0,1,0,0); g.rotate(0.5); g.translate(20,50); g.scale(0.4, 2.6); g.transform(1,0.9, -0.9,1, 0, 0); 

[17:10:00.0000] <Philip`>
g.save(); g.restore() or is that not needed?

[17:13:00.0000] <kig>
i don't really need those..

[17:15:00.0000] <Philip`>
This doesn't seem useful for linear gradients because you can just manually apply the transform to the two end points

[17:15:01.0000] <kig>
radial gradients on the other hand

[17:16:00.0000] <Philip`>
Radial gradients with non-uniform scaling?

[17:16:01.0000] <Philip`>
(I can't think of any other cases where it'd matter)

[17:17:00.0000] <kig>
and if you don't have it for linear gradients, you need a fork in the fill/stroke-path to create a new linear gradient based on the old one whenever you need to transform it..

[17:19:00.0000] <kig>
the "not really possible currently" thing is stroking with a pattern/gradient that has non-uniform scale

[17:20:00.0000] <kig>
and/or shear

[17:22:00.0000] <kig>
fwiw, cairo already has cairo_pattern_set_matrix

[17:23:00.0000] <Philip`>
/me wonders if Quartz(?) has something similar

[17:23:01.0000] <Philip`>
/me wonders if Opera's thing has a name at all

[17:24:00.0000] <kig>
quartz has pattern matrix, specified at pattern creation time(?)

[17:27:00.0000] <fredrikh>
Philip`: QBrush, if it uses Qt in its canvas implementation

[17:28:00.0000] <fredrikh>
and it supports that as well

[17:32:00.0000] <fredrikh>
(opera, that is)

[18:14:00.0000] <jwalden>
Hixie: any chance you could change tests 31 and 32 to handle error reporting the usual way instead of giving no error messages if the test fails?

[18:16:00.0000] <Hixie>
done

[18:18:00.0000] <Hixie>
it's very sad, i haven't even received a single usable suggestion yet for acid3

[18:18:01.0000] <jwalden>
you, sir, are a gentleman and a scholar

[18:19:00.0000] <jwalden>
I could write up <http://bugs.webkit.org/show_bug.cgi?id=16690> into a test, although pedantically speaking that's probably better as part of the test HTML

[18:21:00.0000] <Hixie>
you couldn't write it into a single JS function

[18:21:01.0000] <jwalden>
I could, I'd just have to modify the acid3 DOM

[18:22:00.0000] <jwalden>
Hixie: 32, |captureCount| is undefined

[18:22:01.0000] <Hixie>
fixed

[18:23:00.0000] <Hixie>
jwalden: you couldn't write it into a single JS function without something else as well, such as changing the markup before the test runs

[18:23:01.0000] <Hixie>
jwalden: but i'd rather not do anything that can't be done from a single JS function

[18:23:02.0000] <jwalden>
yeah

[18:23:03.0000] <jwalden>
oh, true

[18:23:04.0000] <Hixie>
http://www.hixie.ch/tests/evil/acid/003/competition/

[18:24:00.0000] <Hixie>
Philip`: http://www.whatwg.org/specs/web-apps/current-work/index-diff is the diff of the changes for the path stuff

[18:24:01.0000] <Hixie>
http://www.whatwg.org/specs/web-apps/current-work/index-diff#the-2d

[18:25:00.0000] <Philip`>
/me will look tomorrow since he has to sleep now

[18:25:01.0000] <Hixie>
k

[18:25:02.0000] <Hixie>
nn

[18:26:00.0000] <Lachy>
Hixie, where will the final test be hosted and publicised? on WaSP again?

[18:26:01.0000] <Hixie>
that's still being figured out, but yeah, basically

[18:30:00.0000] <Lachy>
ok. I gotta go to bed and hope I don't sleep in tomorrow morning (I've set 2 alarms).

[18:30:01.0000] <Lachy>
I can't be late for work again. cya

[18:30:02.0000] <Hixie>
heh

[18:30:03.0000] <Hixie>
nn

[18:30:04.0000] <jruderman_>
any good acid3 competition submissions so far?

[18:30:05.0000] <Hixie>
jruderman_: none

[18:31:00.0000] <jruderman_>
oh, you said that 13 minutes ago

[18:31:01.0000] <Lachy>
Hixie, I will try to get one in by the end of the week

[18:31:02.0000] <Hixie>
Lachy: you might have to try for 16 :-)

[18:31:03.0000] <Hixie>
jruderman_: it's very sad

[18:31:04.0000] <Lachy>
if you could send me a list of bugs, that would help :-)

[18:32:00.0000] <Lachy>
ok, really gotta go. cya

[18:32:01.0000] <Hixie>
i really have no known bugs

[18:32:02.0000] <Hixie>
if i did, i'd have written tests already

[18:34:00.0000] <Philip`>
Lachy: Only two alarms? I've got four set now...

[18:34:01.0000] <Hixie>
/me is glad he doesn't have to use alarms

[18:34:02.0000] <Hixie>
though i occasionally set an alarm for 5pm so i make sure to get to work before dinner

[18:35:00.0000] <jwalden>
heh

[18:38:00.0000] <jruderman_>
do either of these look interesting? https://bugzilla.mozilla.org/show_bug.cgi?id=2212 https://bugzilla.mozilla.org/show_bug.cgi?id=2056 

[18:40:00.0000] <jruderman_>
https://bugzilla.mozilla.org/show_bug.cgi?id=3655

[18:40:01.0000] <jruderman_>
are css 3 selectors fair game?

[18:40:02.0000] <Hixie>
if you can find a way to test them from JS in a way you can reproduce in http://www.hixie.ch/tests/evil/acid/003/competition/ then please send them to ian⊙hc

[18:40:03.0000] <Hixie>
i have to go now

[18:40:04.0000] <Hixie>
(and yes, anything that matches those rules are fair game. selectors are widely tested in Acid3 already in fact.)

[18:40:05.0000] <Hixie>
gotta go now

[18:40:06.0000] <Hixie>
nn

[18:41:00.0000] <jruderman_>
k

[18:53:00.0000] <jwalden>
dangit dangit dangit

[18:54:00.0000] <jwalden>
okay

[18:54:01.0000] <jwalden>
test 31 is buggy

[18:55:00.0000] <jwalden>
the input it inserts into the page has no type attribute

[18:55:01.0000] <jwalden>
HTML4 says the default is text

[18:56:00.0000] <jwalden>
and <http://www.w3.org/TR/DOM-Level-2-HTML/html.html#ID-6043025> clearly says that .click() isn't supported for inputs of type text

[18:56:01.0000] <jwalden>
Hixie: ^ when you get back

[18:56:02.0000] <jwalden>
if you get back tonight, that is

[19:00:00.0000] <jwalden>
hey, that exposes a webkit bug!

[19:01:00.0000] <jwalden>
seems click() isn't a noop on at least inputs with type="text"

[19:02:00.0000] <fantasai>
Does anyone know if "The DOM attributes height and width must return the rendered height and width of the image, in CSS pixels" is implemented?

[19:03:00.0000] <jwalden>
fantasai: <http://mxr.mozilla.org/mozilla/source/content/html/content/src/nsHTMLImageElement.cpp#275> says Gecko does

[19:04:00.0000] <fantasai>
jwalden: does it get modified by CSS?

[19:04:01.0000] <fantasai>
e.g. if I set "width: 100px" on a 200px-wide image, does width return 100px or 200px?

[19:06:00.0000] <jwalden>
I'm guessing from reading nsFrame::GetContentRect that it probably does, but it's probably faster to write a testcase

[19:06:01.0000] <jwalden>
than to read the code

[19:09:00.0000] <fantasai>
k. If the spec doesn't say anything about a DOM attribute reflecting the content attribute, does that mean they are independent?

[19:10:00.0000] <jwalden>
no idea

[19:54:00.0000] <fantasai>
/w/window 4

[20:12:00.0000] <jruderman_>
https://bugzilla.mozilla.org/show_bug.cgi?id=254144 might be a good test for acid3

[20:13:00.0000] <jruderman_>
if it's justifiable using specs, which maybe it isn't

[23:40:00.0000] <Hixie>
jwalden: i think the spec could be read either way, but i've made it type=reset to avoid ambiguity

[00:49:00.0000] <Philip`>
Hixie: About the canvas shadow thing: see http://lists.whatwg.org/pipermail/whatwg-whatwg.org/2007-June/011799.html :-)

[00:56:00.0000] <hsivonen>
zcorpan: the ns filtering warning is now triggered by attribute filtering, too

[00:56:01.0000] <hsivonen>
(it is a one-time warning)

[00:56:02.0000] <Lachy>
dammit. Slept in again cause my backup alarm was still set to Australian time :-(  But not quite late for work though.

[01:23:00.0000] <hsivonen>
zcorpan: I fixed the HTML octet-stream thing. You have to force one of the HTML parsing modes, though, since XML is more likely to have a bogus type than HTML

[01:42:00.0000] <annevk>
Philip`, so not all transformations affect the current path?

[01:42:01.0000] <annevk>
/me didn't know that was the case

[01:44:00.0000] <hsivonen>
IIRC, Gecko has (had?) some stroke transformation weirdness with SVG. was that a Cairo thing or an SVG thing?

[01:49:00.0000] <Philip`>
annevk: Not entirely sure what you mean

[01:50:00.0000] <hsivonen>
is there a way to detect when a page is being redisplayed due to the user pressing Back?

[01:50:01.0000] <hsivonen>
in JS that is?

[01:51:00.0000] <hsivonen>
The v.nu UI script modifies the form onsubmit. when the user presses Back in Firefox, the form is unusable

[01:51:01.0000] <annevk>
http://krijnhoetmer.nl/irc-logs/whatwg/20080115#l-137

[01:52:00.0000] <Philip`>
annevk: Oh - translations just don't affect the stroke shape of a path

[01:52:01.0000] <Philip`>
(The path itself still gets translated)

[01:53:00.0000] <Philip`>
(but then the stroke goes over that path, with just the stroke width (and some skewiness) affected by the CTM)

[01:53:01.0000] <OmegaJunior>
hsivonen: I wouldn't know

[01:53:02.0000] <OmegaJunior>
I can imagine comparing a timestamp in the page with a timestamp in javascript

[01:54:00.0000] <OmegaJunior>
but that has issues with caching proxies etc.

[01:56:00.0000] <hsivonen>
hmm. Is the form submission data built before or after the unload event?

[01:56:01.0000] <OmegaJunior>
Before

[01:57:00.0000] <hsivonen>
excellent

[01:57:01.0000] <hsivonen>
then I can modify the form onsubmit and modify it back onunload

[01:57:02.0000] <OmegaJunior>
Yes, or just modify it onunload, to prevent a second submit

[01:58:00.0000] <hsivonen>
I want to *allow* Back button plus second submit

[01:58:01.0000] <hsivonen>
that's the problem

[01:58:02.0000] <OmegaJunior>
Ah

[01:59:00.0000] <hsivonen>
I just want to make the GET URI parameters pretty by disabling fields that have an empty value

[01:59:01.0000] <OmegaJunior>
With some ajaxed handling you may find a lack of onunload.

[02:13:00.0000] <annevk>
hmm http://www.dreamhoststatus.com/2008/01/15/billing-issues/

[03:38:00.0000] <mpt>
hsivonen, ah, shades of the "Bugzilla query.cgi URLs should be shortened" bug

[03:38:01.0000] <mpt>
Why not eat the unused parameters on the server and redirect?

[03:40:00.0000] <hsivonen>
mpt: because that would break the simplicity of request-response

[03:40:01.0000] <hsivonen>
mpt: I think I have it covered in JS now. (tested Firefox 2, Safari 3 and Opera 9.5 beta)

[03:42:00.0000] <Lachy>
Firefox seems to have a bug with moving elements between documents. I'll have to investigate that more thoroughly later and write a test case for acid3 if I can

[03:42:01.0000] <othermaciej>
hsivonen: Firefox has a (nonstandard) event when loading something from the back/forward cache, but on a back that doesn't get the special b/f cache treatment you get a load event instead (makes it kinda hard to use)

[03:43:00.0000] <othermaciej>
Lachy: moving elements between documents is not allowed, per official DOM specs

[03:43:01.0000] <Lachy>
really?  Opera allows it

[03:43:02.0000] <othermaciej>
(WebKit supports it anyway due to compat requirements to emulate Mozilla)

[03:43:03.0000] <othermaciej>
(probably Opera for the same reason)

[03:44:00.0000] <othermaciej>
this and getAttribute("nonexistent") returning null instead of "" are our only two DOM 1 Core violations that I am aware of (both intentional for compat with teh Fox)

[03:44:01.0000] <hsivonen>
othermaciej: ok. thanks. I already addressed the issue using onunload, and the same codepath works for Gecko/WebKit/Opera.

[03:44:02.0000] <hsivonen>
othermaciej: do you happen to remember the name of the event?

[03:44:03.0000] <othermaciej>
I was going to suggest onunload

[03:44:04.0000] <othermaciej>
I don't remember

[03:45:00.0000] <hsivonen>
othermaciej: ok

[03:45:01.0000] <othermaciej>
using it would not work in Safari or Opera anyway

[03:45:02.0000] <Lachy>
Then, when using XHR to retrieve an XML document, obtaining the DOM from responseXML (which returns a Document), how is one supposed to move those elements into the DOM of the main document?

[03:45:03.0000] <annevk>
using importNode()

[03:45:04.0000] <othermaciej>
adoptNode() or something like that

[03:45:05.0000] <othermaciej>
it's a lame restriction

[03:46:00.0000] <Lachy>
ok.

[03:46:01.0000] <hsivonen>
also, making each node know their owner document seems an inefficient idea 

[03:46:02.0000] <Lachy>
annevk, you should consider adding an example of that to the XHR spec.

[03:46:03.0000] <annevk>
feel free to write one

[03:46:04.0000] <Lachy>
ok, will do later

[03:47:00.0000] <othermaciej>
hsivonen: I think there's reasons beyond that which require every node to know their owner document

[03:47:01.0000] <othermaciej>
(even ones not currently in a document)

[03:47:02.0000] <othermaciej>
the DOM is not really designed for efficiency

[03:47:03.0000] <annevk>
so Firefox does it arguably we could test for it in Acid3

[03:47:04.0000] <othermaciej>
otherwise it wouldn't expose child nodes as both a linked list *and* an array

[03:48:00.0000] <hsivonen>
I think in a Java environment it can even happen in practice that different trees are backed by different DOM impls.

[03:48:01.0000] <annevk>
the DOM also has all kinds of quirks such as CDATASection and EntityReference

[03:48:02.0000] <othermaciej>
(which results in a set of operations that can't possibly all be efficient)

[03:49:00.0000] <othermaciej>
(I think it may have even been proven with information theory that you can't make append, prepend, insert, remove, next, previous, and get nth all O(1) )

[03:49:01.0000] <hsivonen>
I think it would be good to guarantee certain efficiency properties for central operations

[03:50:00.0000] <hsivonen>
like iterating over a children with increasing index

[03:50:01.0000] <Lachy>
hmm. importNode isn't tested in acid3. maybe I should look for bugs with that - its spec looks quite complicated

[03:50:02.0000] <othermaciej>
Safari and Mozilla have fundamentally different performance profiles

[03:50:03.0000] <hsivonen>
or document order traversal using firstChild/nextSibling

[03:50:04.0000] <othermaciej>
WebKit has a linked list internally so previousSibling/nextSibling are very fast and childNodes relies on a cache

[03:50:05.0000] <othermaciej>
Mozilla has an array internally so childNodes is fast and previousSibling/nextSibling rely on a cache

[03:51:00.0000] <othermaciej>
(though I think in many common cases WebKit's indexed access ends up being faster than Mozilla's anyway)

[03:51:01.0000] <Lachy>
/me wonders if it's possible to have a combined array/linked list data structure to get the best of both worlds

[03:51:02.0000] <othermaciej>
Lachy: not really

[03:52:00.0000] <othermaciej>
it might be possible to design a data structure where none of the operations I listed are worse than O(log N), but even that is very hard

[03:52:01.0000] <hsivonen>
exposing the index to app code seems ugly anyway (like charAt()). I think firstChild/nextSibling traversal looks better that way

[03:52:02.0000] <othermaciej>
using one or the other with a cache seems to be the best you can do

[03:52:03.0000] <Lachy>
it would make inserting into the array a pain, since you'd have to update the array indexes as well as the pointers from the previous and next objects

[03:52:04.0000] <othermaciej>
firstChild/nextSibling is easier to extend to a full preorder tree traversal

[03:53:00.0000] <othermaciej>
(internally in webkit we have a Node::traverseNextNode() method that gives you the next node in document order

[03:53:01.0000] <othermaciej>
it might be handy as a public API for JS someday

[03:53:02.0000] <othermaciej>
certainly easier to use than nonsense like TreeWalker

[03:53:03.0000] <hsivonen>
othermaciej: how does it distinguish between initial visit and revisit of a parent?

[03:54:00.0000] <othermaciej>
hsivonen: in preorder traversal you never revisit a parent

[03:54:01.0000] <othermaciej>
(document order == preorder)

[03:54:02.0000] <othermaciej>
or rather, whenever you run out of next siblings, you go up until you find an ancestor that has a next sibling and go there

[03:54:03.0000] <hsivonen>
othermaciej: depends on use case. when serializing, you definitely want the preorder travelsal to revisit

[03:56:00.0000] <othermaciej>
that can't be done with an equally simple API afaik

[03:56:01.0000] <othermaciej>
though a callback-driven API could do it with no more than one node's worth of internal state

[03:56:02.0000] <zcorpan>
JS has innerHTML for serializing... :)

[03:56:03.0000] <othermaciej>
(possibly an extra outermost container node, which our traverseNextNode handles)

[03:59:00.0000] <othermaciej>
but yeah, in a tree structure with parent pointers you can do just about any traversal of interest without either recursion or an explicit stack

[05:35:00.0000] <hsivonen>
Hixie: here's an idea for a test: have element in the DOM with an id attribute, replace the element with a different one with the same id attribute value, try to getElementById and see if you get the new element back (without spinning in the event loop in between)

[05:36:00.0000] <hsivonen>
my hypothesis is that the getElementById hash is inconsistent until event loop spin

[05:36:01.0000] <gavin>
/me would be surprised if that was the case in gecko

[05:37:00.0000] <hsivonen>
gavin: oh. then I'm seeing some other weirdness in my attempts to polish the Validator.nu UI

[05:38:00.0000] <hsivonen>
hmm. scratch that.

[05:39:00.0000] <hsivonen>
I'm seeing weirdness but I misdiagnosed it

[06:42:00.0000] <mpt>
hsivonen, the tooltip for "Encoding" refers to "the schema field above", but it's below

[06:43:00.0000] <mpt>
Also, I think you could get away with s/The * field //g

[06:44:00.0000] <mpt>
(capitalizing the next word in each tooltip as appropriate)

[06:44:01.0000] <mpt>
"Don't override" might be clearer as "As specified by the document" or similar

[06:45:00.0000] <hsivonen>
mpt: it's the wrong tooltip. I thought I had already pushed out a fix. (already fixed locally)

[06:45:01.0000] <hsivonen>
mpt: I'll make wording changes for the next iteration. thank you

[06:45:02.0000] <hsivonen>
afk

[06:46:00.0000] <mpt>
Yay for supporting https: URLs :-)

[10:04:00.0000] <gsnedders>
the py html5lib just calls the filters with, "treewalker = Filter(treewalker)". How does calling __init__ call __iter__?

[11:23:00.0000] <jgraham_>
gsnedders: I'm not quite sure what your question is, but __iter__ is automatically called when looping over an object

[11:24:00.0000] <jgraham_>
See http://docs.python.org/lib/typeiter.html for full details

[12:06:00.0000] <gsnedders>
jgraham_: but when does the looping happen? looking at the serialiser, all it calls is Filter(treewalker), and __init__ doesn't do any looping…

[12:14:00.0000] <Lachy>
gsnedders, your last email to www-archive wasn't clear whether your comments were aimed at James or Dean

[12:15:00.0000] <gsnedders>
Lachy: oops. just follow the "to"

[12:15:01.0000] <Lachy>
from what you wrote, I assume it was supposed to be aimed at Dean, despite directly responding to James

[12:16:00.0000] <Lachy>
yeah, I looked at that after I started reading and wondered why you were saying all those things to James

[12:18:00.0000] <Lachy>
It's strange how external floppy drives and CD drives were common in the early days, then they were integrated into computers for convenience, and now the MacBook Air is shipping only with an optional external drive.

[12:19:00.0000] <Lachy>
I guess Apple's Time Machine must work too well :-)

[13:00:00.0000] <Lachy>
Maybe we could distinguish between the language and the serialisation by calling them HTML (for the language) and HTMS (Hypertext Markup Serialisation)

[13:00:01.0000] <Lachy>
or Hypertext Markup Syntax

[13:15:00.0000] <jgraham_>
gsnedders: Look at filters/_base.py __init__ doesn't call __iter__ (that would be odd); it just adds a .source attribute to the filter pointing to the treewalker Then __iter__ returns an iterator over .source. Subclasses then alter the tokens produced by this iterator 

[13:15:01.0000] <jgraham_>
(see e.g. filter/whitespace.py)

[13:15:02.0000] <gsnedders>
quite when is __iter__ controller?

[13:16:00.0000] <gsnedders>
what the ehll did I just type?

[13:16:01.0000] <gsnedders>
*hell

[13:16:02.0000] <gsnedders>
quite when is __iter__ called?

[13:16:03.0000] <gsnedders>
that makes more sense.

[13:16:04.0000] <jgraham_>
When you do something like "for x in y:" you call y.__iter__

[13:17:00.0000] <jgraham_>
which has to return an object with a .next() method

[13:17:01.0000] <jgraham_>
In the html serializer it happens on line 103

[13:17:02.0000] <jgraham_>
for token in treewalker:

[13:18:00.0000] <gsnedders>
jgraham_: ah, so it just applies all the filters then?

[13:19:00.0000] <gsnedders>
/me is finally making sense of this

[13:19:01.0000] <jgraham_>
Indeed. It's just a way of chaining things together

[13:20:00.0000] <gsnedders>
It finally makes sense!

[13:20:01.0000] <gsnedders>
thanks

[13:21:00.0000] <gsnedders>
jgraham_: actually, where is next() defined?

[13:22:00.0000] <jgraham_>
gsnedders: If you use yield it automatically does the right thing wrt .next()

[13:22:01.0000] <gsnedders>
ah

[13:26:00.0000] <gsnedders>
/me wonders whether to write his own RSS Profile

[13:40:00.0000] <Lachy>
gsnedders, why would you want to use RSS for anything, even if you wrote your own profile?  Atom is better

[13:41:00.0000] <gsnedders>
Lachy: oh, I wouldn't. But as I can tell you, and anyone else who's read the spec can tell you, the spec is useless for implementing it from either a UA POV or an authoring POV.

[13:41:01.0000] <Lachy>
oh, so you want to write RSS5

[13:42:00.0000] <gsnedders>
basically.

[13:42:01.0000] <gsnedders>
Probably ought to call it that.

[13:42:02.0000] <Lachy>
yeah, I'd wait for XML5 first, though.

[13:43:00.0000] <Lachy>
or you could spec the vocabulary and the processing requirements, leave parsing requirements for later

[13:43:01.0000] <gsnedders>
even <http://www.rssboard.org/rss-profile> is too vague, and I disagree with some of the advice (despite being listed as one of the four contributors)

[13:44:00.0000] <gsnedders>
Lachy: peh, I'd just help with XML5 (though annevk advised me to revise for my exams, which start tomorrow)

[13:44:01.0000] <gsnedders>
Lachy: I could also do the HTML 5 solution so XML 1.0 or any later version

[13:44:02.0000] <Lachy>
RSS5 should handle all 10 versions of RSS from 0.90 to 2.0

[13:45:00.0000] <Lachy>
note that they're all incompatible with each other too :-)

[13:45:01.0000] <gsnedders>
Lachy: the RDF and non-RDF ones need to be handled differently though

[13:45:02.0000] <gsnedders>
Lachy: (on top of the other incompatibilities)

[13:46:00.0000] <Lachy>
so, the important question is, what would RSS5 stand for? Rich Site Summary, RDF Site Summary or Really Simple Syndication?

[13:46:01.0000] <gsnedders>
Really Stupid Syndication

[13:46:02.0000] <Lachy>
LOL

[13:47:00.0000] <Dashiva>
Rather Silly Stuff

[13:47:01.0000] <Dashiva>
RSS5 is already known as Atom :P

[13:47:02.0000] <Lachy>
authoring conformance requirements would be easy, though.

[13:47:03.0000] <gsnedders>
(the sad thing is, I'm actually serious about that)

[13:47:04.0000] <gsnedders>
Lachy: author the subset of all RSS versions

[13:47:05.0000] <Lachy>
"Authors must not use this languague"

[13:47:06.0000] <Dashiva>
Lachy: Try writing a feed parser and you'll join the "RSS is evil and needs to be destroyed" club soon enough

[13:48:00.0000] <Lachy>
Dashiva, I'm already in the club

[13:48:01.0000] <gsnedders>
Lachy: the two are entirely equivalent, AFAIK

[13:49:00.0000] <Dashiva>
The largest common subset would probably end up being the <title> tag

[13:49:01.0000] <gsnedders>
I'm actually about to step-down from lead developer of SimplePie

[13:49:02.0000] <gsnedders>
Dashiva: no, it's content model and whether you have to sniff it depends on the version

[13:49:03.0000] <Lachy>
"Authors must produce RSS documents that conform to the requirements specified in The Atom Syndication Format. [RFC4287]"

[13:49:04.0000] <Dashiva>
gsnedders: Sure, but the tag itself is mandatory :)

[13:50:00.0000] <gsnedders>
Dashiva: and whether it is in a namespace (for RSS 0.90 or RSS 1.0)

[13:50:01.0000] <Dashiva>
Lachy: I love it

[13:50:02.0000] <gsnedders>
Lachy: Hmm, I wouldn't put that, probably only should (but must not conform to any version of RSS)

[13:51:00.0000] <Lachy>
unfortunately, future specifications can't retroactively change the conformace of documents with respect to the older specifications.  So people will still be able to claim conformance

[13:51:01.0000] <Dashiva>
User agent conformance: Must pretend to handle it

[13:52:00.0000] <gsnedders>
"Authors MUST NOT use this language. The editor RECOMMENDS usage of The Atom Syndication Format. [RFC4287]"

[13:52:01.0000] <gsnedders>
(in RFC2119 document)

[13:52:02.0000] <Dashiva>
I didn't know recommends was a special word. Interesting.

[13:53:00.0000] <gsnedders>
alias for SHOULD

[13:54:00.0000] <Dashiva>
So, what does RSS5 say about hamburger vs pasta for dinner?

[13:55:00.0000] <gsnedders>
Pasta.

[13:55:01.0000] <Lachy>
/me made hamburgers

[13:55:02.0000] <Lachy>
... real Aussie hamburgers (in Norway)

[13:55:03.0000] <gsnedders>
markp: I sent you an email a day of two about the remote base atom autodiscovery test-suite tests being broken, FYI

[13:56:00.0000] <gsnedders>
(seeming your always months behind emails, and it's nice to have test suites that work :))

[13:57:00.0000] <Lachy>
Dashiva, the choice between burgers and pasta really depends on what you have to put on the burger

[13:57:01.0000] <Dashiva>
I have all the required condiments

[13:57:02.0000] <gsnedders>
"The editor RECOMMENDS eating pasta while implementing this specification. Lachlan Hunt RECOMMENDS eating hamburgers while implementing this specification."

[13:58:00.0000] <Lachy>
so long as there's beef, lettuce, tomato, onion, egg, pineapple and, most importantly, beetroot, you're set.

[13:58:01.0000] <Dashiva>
... using pineapple on burgers is a criminal offense in many places

[13:59:00.0000] <Lachy>
pineapple is one of the 2 essential ingredients

[13:59:01.0000] <Lachy>
well, 3, cause I forgot to count beef.

[13:59:02.0000] <Dashiva>
And the buns?

[13:59:03.0000] <Lachy>
sure

[14:00:00.0000] <Lachy>
in fact, the only optional ingredients are egg and onion

[14:01:00.0000] <Lachy>
(I'm surprised you haven't objected to the beetroot yet. Most non-Aussies do)

[14:01:01.0000] <gsnedders>
"The food MUST contain beef, lettuce, tomato, pineapple, beetroot, as well as bread and MAY contain egg and onion."

[14:01:02.0000] <gsnedders>
(is that right?)

[14:02:00.0000] <gsnedders>
Lachy: oh, certainly, I'm objecting by not implementing Lachy's food REC

[14:02:01.0000] <Dashiva>
I'm gonna be as bold as to add ketchup

[14:02:02.0000] <Lachy>
Food5

[14:02:03.0000] <Lachy>
of course, sauce is ok

[14:02:04.0000] <gsnedders>
Lachy: that'll cause endless flamewars.

[14:03:00.0000] <Dashiva>
The flamewars are even more pronounced when the flame-broiling is brought up

[14:03:01.0000] <gsnedders>
/me needs to go sleep, though

[14:03:02.0000] <Lachy>
nn

[14:03:03.0000] <gsnedders>
hope that I don't fail the English exam tomorrow afternoon for me :)

[14:04:00.0000] <Lachy>
I should start a burger shop called Burger5

[14:04:01.0000] <Dashiva>
Then I'll compete with my newly founded Burgr

[14:08:00.0000] <zcorpan>
/me will do Semantic Burger 2.0

[14:08:01.0000] <zcorpan>
with support for ARIA

[14:08:02.0000] <zcorpan>
and RDF

[14:10:00.0000] <Dashiva>
Really Delicious Food

[14:11:00.0000] <zcorpan>
Ain't Really ... hmm, can't come up with anything for "ARIA"

[14:11:01.0000] <othermaciej>
Lachy: ozzie burgers are funny

[14:12:00.0000] <othermaciej>
(never seen pineapple on them before though)

[14:15:00.0000] <Philip`>
Really Simple Burgers - you have two pieces of bread, and inside you can put either the filling or a recipe for the filling, and there is no way for someone to tell the difference until they try eating it

[14:16:00.0000] <Dashiva>
And they try to check, you flame them for doing it wrong!

[14:18:00.0000] <Lachy>
othermaciej, fyi, it's spelt "Aussie" (unless you're referring to Ozzie Ostrich) - but what's funny about them?

[14:20:00.0000] <othermaciej>
Lachy: I've seen Australians use the term, but they are probably the bad kind from not-the-city-you're-from and your rugby team can totally beat their rugby team

[14:21:00.0000] <Dashiva>
Did I mention my markup language can beat up your markup language?

[14:21:01.0000] <jgraham_>
/me was about to object to pineapple+burger when he realised that his local pub does pineapple+stilton burger

[14:21:02.0000] <Molly__>
:: enters with an enormous piece of steak ::

[14:22:00.0000] <jgraham_>
Molly__: You can only come in if you're sharing

[14:22:01.0000] <Dashiva>
It's creepy when people enter the channel and join in on conversation that happened before they joined

[14:23:00.0000] <molly>
nah, there were rumors about a food fight in here

[14:23:01.0000] <molly>
I couldn't not join in :)

[14:23:02.0000] <molly>
jgraham : oh, I'll share

[14:23:03.0000] <jwalden>
mm, pineapple

[14:24:00.0000] <gsnedders>
molly: as long as you don't blame me.

[14:24:01.0000] <Lachy>
molly, we were discussing the merits of putting pineapple and beetroot on burgers, and the possibility of writing a Burger5 specificaion

[14:24:02.0000] <jgraham_>
Excellent, I'll have mine rare. 

[14:24:03.0000] <gsnedders>
jgraham_: ewwww

[14:24:04.0000] <molly>
what's the Burger4 spec say?

[14:24:05.0000] <molly>
in re pineapple and beetroot?

[14:24:06.0000] <gsnedders>
molly: who needs Burger4? We just have Food4 and Burger1!

[14:25:00.0000] <molly>
but how will we style the burger?

[14:25:01.0000] <Philip`>
We need to do a survey of existing burgers to find the current best practices

[14:25:02.0000] <jgraham_>
Unless it's really nice in which case maybe some sort of steak tartare

[14:25:03.0000] <Lachy>
Well, the McOz was a success for McDonalds in Australia, and I think that was based on Burger3.2

[14:25:04.0000] <molly>
what about all this buzz about BurgerML?

[14:25:05.0000] <gsnedders>
/me points molly at IM.

[14:26:00.0000] <gsnedders>
Am I emo, or not?

[14:26:01.0000] <gsnedders>
</totally_out_of_context>

[14:26:02.0000] <jgraham_>
<bun><meat origin="unidentified"/></bun>

[14:26:03.0000] <molly>
apparently, this allows for burger extensibility

[14:27:00.0000] <molly>
I'm not sure how this plays into the grander scheme of burger specs

[14:27:01.0000] <gsnedders>
molly: nonono, Burger5 needs to be an XML5 application.

[14:28:00.0000] <molly>
has that already been decided?

[14:28:01.0000] <gsnedders>
No, but the emo kid says so, so it must be true.

[14:28:02.0000] <molly>
I'm not sure how far we could extend a burger

[14:28:03.0000] <gsnedders>
Pineapple?

[14:28:04.0000] <molly>
I mean, a burger is a fairly well-defined entity

[14:29:00.0000] <molly>
is that an extension?

[14:29:01.0000] <jgraham_>
Presumably McDonalds could embed almost anything from ChemML into a burger

[14:29:02.0000] <molly>
or merely a style variation?

[14:29:03.0000] <molly>
jgraham now that worries me a bit

[14:29:04.0000] <molly>
hmm, do I detect a namespace concern?

[14:31:00.0000] <gsnedders>
well we definitely need to embed ChemML into Burgr5.0

[14:32:00.0000] <annevk>
I think burgers are already addressed by http:// and tel:

[14:32:01.0000] <molly>
I don't like the idea of a meat element

[14:32:02.0000] <molly>
we need something more generic that would include non-meat ingredients

[14:33:00.0000] <gsnedders>
Food5?

[14:33:01.0000] <molly>
it's too presentational

[14:33:02.0000] <Philip`>
Use DTD modularisation to create a vegetarian profile

[14:33:03.0000] <molly>
/me thinks we might be on to something!

[14:33:04.0000] <jgraham_>
The meat affects the burger semantics for sure

[14:33:05.0000] <annevk>
<meat> is presentational?

[14:33:06.0000] <annevk>
hmm

[14:33:07.0000] <molly>
well you can have a veggie burger

[14:33:08.0000] <molly>
which doesn't have meat

[14:34:00.0000] <annevk>
sure

[14:34:01.0000] <jgraham_>
veggie burger is not a presentational variation on a proper burger by any strech of the imagination

[14:34:02.0000] <molly>
do we really need TWO elements or one more semantic element?

[14:34:03.0000] <annevk>
but <burger><meat/></burger> would be quite a different burger from <burger><salad/></burger>

[14:34:04.0000] <molly>
but it's called a veggie "burger"

[14:34:05.0000] <annevk>
in practice it turns out that more elements is better

[14:34:06.0000] <annevk>
see HTML <object>

[14:35:00.0000] <jgraham_>
Sure. <burger> would be the root element

[14:35:01.0000] <Philip`>
You could grow a chicken out of Quorn and then have a vegetarian chickenburger

[14:35:02.0000] <molly>
that's a fair point

[14:35:03.0000] <molly>
but wouldn't a veggie burger be a variant?

[14:35:04.0000] <molly>
so you'd have <meat variant="veggie" />

[14:35:05.0000] <molly>
that doesn't make any sense

[14:36:00.0000] <molly>
I know, how about "filler"

[14:36:01.0000] <jgraham_>
<burger><bread type="bun"><cheese/><meat type="bacon"/><meat type="beef"/></bread></burger>

[14:36:02.0000] <molly>
<filler type="beef" />

[14:36:03.0000] <Lachy>
as long as vege-burgers are not supported in BurgerML, I'm happy

[14:36:04.0000] <molly>
Lachy, why not?

[14:36:05.0000] <Lachy>
s/vege/vegie/

[14:36:06.0000] <Lachy>
cause a buger isn't a burger without meat

[14:37:00.0000] <molly>
being a voracious carnivore myself I'd tend to agree

[14:37:01.0000] <molly>
but that's not true in a broader social context

[14:37:02.0000] <Lachy>
damn, I still didn't spell "veggie" right :-(

[14:38:00.0000] <molly>
now I'm hungry

[14:45:00.0000] <molly>
/me takes a big bite of her fully compliant and accessible Steak 2.2

[14:51:00.0000] <Philip`>
Does anyone happen to know if an affine-transformed Bézier curve is equal to an untransformed Bézier between transformed control points?

[14:53:00.0000] <Philip`>
Oh, it clearly is since it's just a linear combination

[14:54:00.0000] <Philip`>
The arc/arcTo definitions are broken, though...

[14:57:00.0000] <Philip`>
(and rect)

[15:07:00.0000] <Philip`>
Hmm, Safari resets the path when you do restore() - I'd forgotten about that bug :-/

[15:10:00.0000] <Philip`>
Also, it's funny to watch Opera attempting to do arcTo

[15:44:00.0000] <jwalden>
Hixie: you sure in test 5 you didn't mean for |substr(0, 1)| to be |substr(-1, 1)|?

[15:59:00.0000] <kig>
Philip`: write an arc/arcTo implementation that uses bezier curves :|


2008-01-16
[16:00:00.0000] <kig>
the solution to all problems is to plaster over the crackrock that the world gives

[16:01:00.0000] <kig>
css differences between browsers? roll your own css with js and position:absolute

[16:01:01.0000] <Philip`>
Has anybody written a JS interpreter in pure JS?

[16:01:02.0000] <kig>
i wish

[16:02:00.0000] <kig>
would settle for a js-to-browser-js -compiler too

[16:02:01.0000] <webben_>
I thought someone had.

[16:02:02.0000] <Philip`>
There's Narcissus but I think that requires some SpiderMonkey extensions

[16:02:03.0000] <webben_>
But maybe that's a false memory.

[16:02:04.0000] <Philip`>
http://lxr.mozilla.org/mozilla/source/js/narcissus/jsparse.js etc

[16:02:05.0000] <Lachy>
it'd cool if someone wrote a JS interpeter in LOLCode, and then ran that in the LOLCode interpreter that's written in JS :-)

[16:03:00.0000] <Philip`>
__defineProperty__? What does that do?

[16:04:00.0000] <jgraham>
If you wrote a js interpreter in python you could compile it to js PyPy, the python interpreter written in python...

[16:04:01.0000] <Philip`>
http://www.nabble.com/__defineProperty__-by-default-in-SpiderMonkey-td2853378.html - oh, it's only there if you #define NARCISSUS, which is cheating

[16:11:00.0000] <Philip`>
There is (or used to be) a JS code-generating backend for Pugs (the Perl 6 compiler written in Haskell)

[16:11:01.0000] <Philip`>
but "hello world" was about 1MB of JS, and it didn't work in any browser :-(

[16:14:00.0000] <Philip`>
/me is reminded that he really needs to finish his JS HTML5 parser

[16:15:00.0000] <Philip`>
(Actually I need the Perl one more than JS, but the JS one is more fun)

[16:52:00.0000] <Philip`>
Is IDL "float" 32-bit or 64-bit?

[16:59:00.0000] <jwalden>
32-bit

[16:59:01.0000] <jwalden>
can you guess why it's called 'double'? ;-)

[16:59:02.0000] <Philip`>
Ah, thanks

[17:00:00.0000] <Philip`>
I couldn't find anything in HTML5 using 'double', so it was possible that 'float' was just referring generically to a large floating point type :-)

[17:11:00.0000] <Philip`>
/me wonders if he should send comments to public-html in attempt to increase the SNR

[17:11:01.0000] <Philip`>
s/ / an /

[17:11:02.0000] <jwalden>
Philip`: well, in that matter, it might just be generic -- just note that JS numbers are traditional doubles

[17:20:00.0000] <Philip`>
jwalden: I guess it doesn't matter much for the case I was looking at, since it all gets converted to 16.16 fixed-point anyway

[17:20:01.0000] <jwalden>
heh, no :-)

[17:23:00.0000] <Philip`>
/me wonders who thought 64K coordinate space units would be enough for anyone

[17:46:00.0000] <Hixie>
jwalden: oops, fixed. i changed the text in instructions.inc and forgot to update the test.

[17:47:00.0000] <jwalden>
Hixie: incidentally, I don't hugely care any more for 31/32 now that you've made them reset and Firefox passes, but -- I can't help wondering how you're reading the HTML DOM spec to allow click() to work on type="text"; I just don't see it

[17:47:01.0000] <jwalden>
it seems clear-cut to me that it only works on the specific enumerated types

[17:48:00.0000] <Hixie>
the spec says "Simulate a mouse-click. For INPUT elements whose type attribute has one of the following values: "button", "checkbox", "radio", "reset", or "submit".".

[17:48:01.0000] <Hixie>
the first sentence is an imperative statement saying what the UA must do if the method is invoked

[17:48:02.0000] <Hixie>
the second sentence is an informative statement of intent.

[17:48:03.0000] <jwalden>
shudder

[17:48:04.0000] <jwalden>
but I guess I can see

[17:49:00.0000] <jwalden>
I'm sure if you'd written it this wouldn't be anywhere close to ambiguous :-)

[17:51:00.0000] <Philip`>
/me would still suggest reviewing the spec for ambiguity rather than assuming Hixie is perfect :-)

[17:51:01.0000] <Hixie>
yeah well

[17:51:02.0000] <Hixie>
that spec has issues

[17:51:03.0000] <Hixie>
Philip`: indeed!

[17:52:00.0000] <jwalden>
oh, certainly :-)

[17:52:01.0000] <Hixie>
good lord, this xhtml nonsense is getting out of hand

[17:52:02.0000] <jwalden>
I think I've referred to specs more in the last week than in the entire last month

[17:53:00.0000] <Hixie>
heh

[19:28:00.0000] <Hixie>
seems you can crash Safari by doing a shadowBlur that's more than about 10000px.

[19:54:00.0000] <jwalden>
fun

[00:54:00.0000] <Philip`>
Hixie: When implementing shadows for FF, I just clamped shadowBlur to 2000 (i.e. about 600 pixels radius) since that seemed a sensible way to avoid using gigabytes of memory for a large blur

[01:52:00.0000] <zcorpan>
http://www.ytqm.org/2008/01/16/whatyouseeiswhatthefuck/

[01:55:00.0000] <hsivonen>
zcorpan: redirects me to an anti-spyware scam

[01:55:01.0000] <Lachy>
hsivonen, doesn't do that for me

[01:56:00.0000] <Lachy>
hsivonen, the page contains this comic strip http://www.userfriendly.org/cartoons/archives/07jul/uf010526.gif

[01:57:00.0000] <zcorpan>
and, translated text equivalent underneath the image... try this one http://translate.google.com/translate?u=http%3A%2F%2Fwww.ytqm.org%2F2008%2F01%2F16%2Fwhatyouseeiswhatthefuck%2F

[01:59:00.0000] <hsivonen>
that one shows a NSFW penis enlargement ad

[01:59:01.0000] <hsivonen>
clearly a quality site

[01:59:02.0000] <zcorpan>
lol

[02:04:00.0000] <virtuelv>
hehe

[02:05:00.0000] <zcorpan>
Hixie: hmm, in test 10 you test that Attr nodes have child nodes. that's something i'd like to change in the dom spec actually

[02:06:00.0000] <Hixie>
isn't it interoperably implemented already?

[02:06:01.0000] <zcorpan>
not in opera

[02:06:02.0000] <zcorpan>
or ie

[02:08:00.0000] <hsivonen>
what's the point of attribute nodes?

[02:08:01.0000] <annevk>
it's for entityreference nodes

[02:08:02.0000] <annevk>
which must die

[02:08:03.0000] <zcorpan>
hsivonen: more to the point, what's the point of attribute nodes having its value duplicated as a child text node?

[02:59:00.0000] <hsivonen>
mpt: Coming up with a correct positive wording for "Don't override." is hard

[03:00:00.0000] <hsivonen>
mpt: Since the positive wording would be along the lines of "Use encoding info from transfer protocol or the document."

[03:00:01.0000] <hsivonen>
which is long

[03:00:02.0000] <mpt>
"As set by the server/page"?

[03:01:00.0000] <hsivonen>
ok

[03:01:01.0000] <hsivonen>
thanks

[03:01:02.0000] <mpt>
yw

[04:22:00.0000] <zcorpan>
Hixie: in order to allow us to fix <link> ignoring content-type in a way that doesn't introduce more differences between quirks and non-quirks, could you perhaps change the test to use image/gif or something instead of text/html?

[06:37:00.0000] <hsivonen>
which one is worse: cloning a lot of DOM text nodes or concatenating as many JS strings?

[06:38:00.0000] <hsivonen>
say I have 1500 DOM strings that I want to copy into a text area

[06:38:01.0000] <hsivonen>
should I build a concatenation of the strings and put it into the text area

[06:38:02.0000] <hsivonen>
or insert each string without modification as a text node of its own into the textarea?

[06:42:00.0000] <gavin>
by "1500 DOM strings" do you mean "1500 DOM text nodes"?

[06:43:00.0000] <gavin>
my gut feeling is that the JS string concatenation approach would perform better than any kind of DOM manipulation

[06:45:00.0000] <gavin>
assuming you mean something like |for each (textnode in nodes) total += textnode.textContent; textarea.value = total;| vs. |for each (textnode in nodes) textarea.appendChild(textnode.cloneNode());|

[06:46:00.0000] <zcorpan>
hsivonen: iirc, string concatenation is horrobly slow in ie; it's at least an order of magnitude faster to append the strings to an array and then do .join('')

[06:46:01.0000] <zcorpan>
i don't know about cloning though

[06:47:00.0000] <zcorpan>
s/horrobly/horribly/

[06:47:01.0000] <hsivonen>
gavin: yes, I mean 1500 DOM text node and total += textnode.textContent

[06:47:02.0000] <hsivonen>
zcorpan: ok. 

[06:48:00.0000] <hsivonen>
thanks. I guess this means that I should collect the strings in an array and then join

[06:48:01.0000] <zcorpan>
i think you also need to set .value instead of inserting child nodes for compat with ... ie i think

[06:48:02.0000] <gavin>
yeah, there was a mozilla bug about improving that kind of JS string concatenation

[06:48:03.0000] <gavin>
iincluding workarounds just like zcorpan mentioned

[06:50:00.0000] <gavin>
https://bugzilla.mozilla.org/show_bug.cgi?id=56940#c14

[06:50:01.0000] <hsivonen>
thanks

[06:51:00.0000] <hsivonen>
I hope textContent is smart about the single text child case


2008-01-17
[18:01:00.0000] <Hixie>
Philip`: http://www.whatwg.org/specs/web-apps/current-work/#shadows

[18:01:01.0000] <Hixie>
Philip`: what do you think? i tried avoiding the maths...

[18:03:00.0000] <Philip`>
Hixie: "Shadows form part of the source image during composition." - they don't in Safari

[18:03:01.0000] <Hixie>
oh?

[18:03:02.0000] <Philip`>
(The shadow gets composited onto the canvas first, and then the source image is composited on top)

[18:03:03.0000] <Hixie>
that seems dumb

[18:04:00.0000] <Hixie>
wouldn't that mean you would get non-shadow-like effects when your globalcompositethingy is not source-over?

[18:06:00.0000] <Philip`>
http://canvex.lazyilluminati.com/misc/shadow/shadow2.html (in Safari) - the rows have different globalCompositeOperations, and it does result in things that don't really look like shadows

[18:07:00.0000] <Hixie>
does any browser to shadows other than safair?

[18:07:01.0000] <Hixie>
safari?

[18:07:02.0000] <Philip`>
No (though there's a patch for Firefox that I wrote)

[18:08:00.0000] <Hixie>
do you recommend that we try to get safari to change, or should i just make the spec do this weird behaviour?

[18:09:00.0000] <Philip`>
I assume Safari uses some CG function to draw shadows, so it'd be a pain if they had to rewrite it all to do custom rendering, and I don't think any other behaviour would be significantly less weird

[18:09:01.0000] <Hixie>
k

[18:10:00.0000] <Philip`>
(I don't have any kind of intuitive understanding of what should happen when you xor a semi-transparent shadowed shape onto a background, so everything is equally weird)

[18:11:00.0000] <Hixie>
true

[18:11:01.0000] <Philip`>
(and Safari's approach is at least sensible when you have operation=source-over and globalAlpha=anything)

[18:12:00.0000] <Hixie>
ok, changed the drawing model (it'll update in about 60 seconds)

[18:14:00.0000] <Philip`>
"The shadowBlur attribute specifies the number of coordinate space units that the blurring is to cover." - it doesn't really specify that, since there's some non-linear calculation to convert shadowBlur into the Gaussian radius and then the blur is theoretically infinitely wide; so maybe it should say something vague like "The shadowBlur attribute determines the size of the blur"

[18:16:00.0000] <Philip`>
"Copy the alpha channel of A to B, offset by shadowOffsetX in the positive x direction, and shadowOffsetY in the positive y direction." - shadowOffsetY is not a link

[18:16:01.0000] <Philip`>
"let σ be the square root of span>shadowBlur*2" - HTML leakage, and also the sentence doesn't end with a "."

[18:18:00.0000] <Hixie>
thanks, fixed and regenning...

[18:18:01.0000] <Philip`>
"Perform a Gaussian Blur on B" - might be slightly clearer as "Perform a 2D Gaussian blur on B"

[18:18:02.0000] <Hixie>
fixed and regenning...

[18:19:00.0000] <Hixie>
do you have a good reference for 2D Gaussian Blur, btw? i looked at google scholar for a siggraph paper or something, but found nothing

[18:19:01.0000] <Philip`>
"Multiply the alpha component of every pixel in B by the alpha components of the color of shadowColor." - s/components/component/

[18:20:00.0000] <Hixie>
fixed internally

[18:21:00.0000] <Philip`>
Hmm, I don't know of any references

[18:22:00.0000] <Philip`>
Gauss probably wasn't into computer graphics much, and afterwards Gaussian blurs were sufficiently obvious that maybe nobody could publish research papers about it

[18:22:01.0000] <Hixie>
heh

[18:24:00.0000] <Philip`>
Maybe there's some standard graphics textbook that describes fundamental things like that, but I wouldn't know of it

[18:24:01.0000] <Hixie>
several people have suggested text books, but i'd rather refer to the original reference or to nothing at all

[18:27:00.0000] <Philip`>
"Rendered the shadow from image A, using the current shadow styles, creating image B." - s/Rendered/Render/

[18:27:01.0000] <Philip`>
It's not clear what should be done when shadows are not supported

[18:28:00.0000] <kig>
it's a convolution kernel with the factors following a gaussian distribution, right?

[18:28:01.0000] <Hixie>
Philip`: hm, good point

[18:28:02.0000] <Philip`>
kig: Yes

[18:31:00.0000] <Philip`>
"Multiply the alpha component of every pixel in B by globalAlpha." (and subsequent lines) - "B" should be italics

[18:32:00.0000] <Hixie>
will fix

[18:33:00.0000] <Philip`>
Back at the beginning, "Shadows form part of the source image during composition." should be removed (if it isn't already)

[18:35:00.0000] <Philip`>
Is it worth saying something like "σ (may|should) be clamped to a maximum value before drawing, to prevent excessive memory usage"?

[18:36:00.0000] <Philip`>
Hmm, don't think I see anything else to comment on at the moment

[18:37:00.0000] <Philip`>
(It's sensible to avoid the maths for the blurring - I don't know why I originally suggested writing it all explicitly, when it's not like anyone is going to implement it based on the spec's maths)

[18:39:00.0000] <Hixie>
would this be ok:

[18:39:01.0000] <Hixie>
    <p>User agents may limit values of <var title="">&sigma;</var> to

[18:39:02.0000] <Hixie>
    an implementation-specific maximum value to avoid memory or CPU

[18:39:03.0000] <Hixie>
    limitations during the Gaussian blur operation.</p>

[18:39:04.0000] <Hixie>
s/avoid memory/avoid exceeding memory/

[18:40:00.0000] <Hixie>
and s/memory or CPU/hardware/

[18:41:00.0000] <Philip`>
I think that sounds reasonable, just as a hint to implementors that they should prevent shadowBlur=1e10

[18:43:00.0000] <Hixie>
is clearRect() affected by the clipping region?

[18:44:00.0000] <Philip`>
Yes, in Opera/Firefox/Safari

[18:44:01.0000] <Hixie>
but not globalAlpha or globalCompositeOperation, right?

[18:44:02.0000] <Philip`>
according to http://philip.html5.org/tests/canvas/suite/tests/2d.clearRect.clip.html (although Opera is a bit funny and gets the alpha slightly wrong)

[18:44:03.0000] <Philip`>
No (except globalCompositeOperation in Opera 9.2 (not 9.5)), according to http://philip.html5.org/tests/canvas/suite/tests/2d.clearRect.globalcomposite.html

[18:45:00.0000] <Hixie>
ok

[18:45:01.0000] <Philip`>
(and http://philip.html5.org/tests/canvas/suite/tests/2d.clearRect.globalalpha.html)

[18:45:02.0000] <Hixie>
thanks

[18:45:03.0000] <Philip`>
(and it's affected by shadows in Safari, which seems silly)

[18:46:00.0000] <Hixie>
ok, regenning the new text for shadows and clearRect()

[18:49:00.0000] <Hixie>
i don't seem to be getting as much mail this year as last year

[18:49:01.0000] <Hixie>
let's hope this lasts

[18:50:00.0000] <Hixie>
regenned

[18:55:00.0000] <Philip`>
Is there any value in being explicit that shadowOffset[XY] are not affected by the CTM?

[18:55:01.0000] <Philip`>
(since it's now mentioned that shadowBlur is unaffected by it)

[18:56:00.0000] <Philip`>
"... the new value is igored." - I'm not sure what Igor is doing here

[18:57:00.0000] <Philip`>
The whole "Let A be the source image for which a shadow is being created." etc section has non-italic "A", whereas the Drawing Model section has italic "A"

[18:59:00.0000] <Philip`>
"If shadowBlur is less than 8, let σ be shadowBlur/2; otherwise, let σ be the square root of shadowBlur*2." - the "/" and "*" look a bit out of place - maybe use the proper divide and times symbols?

[19:00:00.0000] <Philip`>
I'll assume implementors can work out for themselves that the shadow rendering can be skipped iff shadowColor.alpha == 0

[19:01:00.0000] <Philip`>
(since they'd be stupid to not optimise that case)

[19:02:00.0000] <Philip`>
It'd be nice if "Render the shadow from image A, using the current shadow styles, creating image B." linked back to the definition of how to render a shadow

[19:02:01.0000] <Philip`>
/me can't think of any comments now again

[19:04:00.0000] <Philip`>
/me goes to bed

[06:12:00.0000] <hsivonen>
based on the minutes, the waf telecon seems to have been one that would have been interesting to listen to...

[06:14:00.0000] <Dashiva>
Are the minutes public?

[06:14:01.0000] <hsivonen>
Dashiva: yes.

[06:15:00.0000] <hsivonen>
Dashiva: http://www.w3.org/mid/213B17B2-B67E-4D5F-A6D9-D7C3499AB228⊙nc

[06:23:00.0000] <Dashiva>
Interesting indeed

[10:52:00.0000] <hsivonen>
annevk: FYI: https://bugzilla.mozilla.org/show_bug.cgi?id=289938#c16

[11:29:00.0000] <SadEagle>
Hiya Hixie... Any chance you have a reference/spec on how you expect button.type to behave? Mozilla's and Opera's implementations are not interoperable (and ours just play sucks)

[11:33:00.0000] <SadEagle>
I guess WF2.0 behavior is consistent with Opera, though..

[11:38:00.0000] <heycam>
Hixie, the not crashing requirement on safari 3 for the acid3 submissions, is that an actual safari 3 release, rather than a webkit nightly?

[12:03:00.0000] <Hixie>
SadEagle: dom2 html :-)

[12:03:01.0000] <Hixie>
heycam: both, ideally

[12:04:00.0000] <SadEagle>
Hixie: come on. You know as well as me that that spec is barely above useless.

[12:05:00.0000] <SadEagle>
I can make some guesses about what they -meant- by the case folding remark. But it says nothing about what to do when the value isn't one of the button / submit / reset.

[12:07:00.0000] <SadEagle>
Mozilla behavior is that the values submit / button / reset are case folded on return. Other values are unaffected, including returning uppercase (which does contradict the lowercasing remark). Lack of attribute (what you test for, I think?) is interpreted as submit.

[12:08:00.0000] <heycam>
Hixie, ok

[12:08:01.0000] <SadEagle>
Opera (and ~now Konq) behavior is to revert to 'submit' if the value of type isn't valid (or blank), and otherwise return the type. 

[12:11:00.0000] <Hixie>
SadEagle: unless WF2 says something else, i don't have any better spec yet. HTML5 will eventually cover this of course. Feel free to send mail to whatwg or public-html to remind me to fix this.

[12:12:00.0000] <SadEagle>
Hixie: well, WF2 says that invalid values of attributes should be ignored, which is basically what opera does, with the interpretation that type is returning the computed value..

[12:42:00.0000] <othermaciej>
Hixie: I'm not sure tests 26 and 27 are a good idea, since it is an obscure case and the obvious ways preserving connected ancestors as well as descendants across GC would likely hurt DOM performance

[12:42:01.0000] <othermaciej>
(I guess we can see if it does for real though)

[12:47:00.0000] <othermaciej>
the expected behavior also could cause web apps to unintentionally hold down larger chunks of memory than they might expect (XHR, grab a single node without removing it, now you have extended the lifetime of the whole result document)

[12:48:00.0000] <gsnedders>
/me annevk pig

[12:49:00.0000] <gsnedders>
/me can't type

[12:49:01.0000] <gsnedders>
that was meant to be: /msg annevk ping

[12:59:00.0000] <Hixie>
othermaciej: i disagree, iv'e run into this kind of thing before, as have others, and i think it's clear that the DOM requires browsers to not be GCing accessible stuff

[13:01:00.0000] <othermaciej>
Hixie: I'm not sure it's particularly clear that the DOM requires anything on this

[13:02:00.0000] <Hixie>
i think you'd be hard-pressed to argue that the DOM allows you to just start setting parentNode to null whimsically

[13:03:00.0000] <othermaciej>
I don't think it's clear that it doesn't require it either - just not sure "clear" is a word that applies

[13:03:01.0000] <othermaciej>
it doesn't say anything about what operations not mentioned by the DOM spec may mutate the DOM

[13:04:00.0000] <othermaciej>
it's clearly not "none", since other specs require various things to mutate the DOM

[13:04:01.0000] <Hixie>
so you're saying that if IE started moving nodes around randomly in the DOM, it would be conforming?

[13:04:02.0000] <othermaciej>
I can see how a sensible person might not think "allocating memory" shouldn't be one of those operations

[13:04:03.0000] <othermaciej>
well, it would be a perverse interpretation of the spec

[13:05:00.0000] <othermaciej>
but I don't think the spec is "clear" on this

[13:05:01.0000] <Hixie>
there is no normative prose anywhere that allows the parentNode to change, as far as i can tell

[13:05:02.0000] <Hixie>
in this spec or any other

[13:06:00.0000] <Hixie>
and since parentNode is defined as returning the parent, and appendChild is defined as setting the parent, i don't see how you can have an interpretation that allows the parent to change

[13:06:01.0000] <othermaciej>
you mean, "as a result of garbage collection", or no prose allows the parentNode to change ever?

[13:06:02.0000] <Hixie>
i meant as a result of the browser randomly deciding to do it (e.g. as part of GC)

[13:07:00.0000] <Hixie>
if there was some text that could define _when_ exactly the parent would be lost, then ok

[13:07:01.0000] <Hixie>
but there isn't, and browsers are losing the parent in different ways because of it

[13:08:00.0000] <Hixie>
this is an interoperability nightmare that should be fixed by not dropping parts of the DOM on the floor

[13:08:01.0000] <Hixie>
it's not like you're actually saving memory intentionally on real sites because of this

[13:08:02.0000] <Hixie>
bbiab

[13:08:03.0000] <othermaciej>
it's true that no normative prose explicitly allows that, but nor does it explicitly forbid it

[13:08:04.0000] <annevk>
hsivonen, actually, we have magic behavior that approaches Gecko, just not for all public identifiers that Gecko recognizes, such as MathML

[13:08:05.0000] <Hixie>
othermaciej: yes it does! it says it should return the parent, and the parent was set by appendChild

[13:09:00.0000] <othermaciej>
Hixie: but clearly there's things not in the DOM Core spec which would require you to change the parent

[13:09:01.0000] <othermaciej>
even things that do not result from any DOM call (like parsing a document)

[13:09:02.0000] <Hixie>
othermaciej: and none of those things are happening here

[13:10:00.0000] <Hixie>
othermaciej: indeed _nothing_ is happening here, it's one piece of script

[13:10:01.0000] <othermaciej>
if script is executing then obviously something is happening

[13:11:00.0000] <Hixie>
othermaciej: i mrsn nothing is happening to the DOM, between the setting and the checking

[13:11:01.0000] <Hixie>
othermaciej: specs cannot say what must not happen, there's an infinite list of things that would have to be listed

[13:12:00.0000] <Hixie>
othermaciej: "browsers must not set attributes for no reason. browsers must not change the values of attributes for no reason. browsers must not..."

[13:12:01.0000] <Hixie>
othermaciej: if you go down this line of argument, then almost any bug can be explained as "well the spec doesn't say it _shouldn't_ happen on the 3rd of september at 2pm..."

[13:13:00.0000] <Hixie>
really must go, will be back shortly

[13:14:00.0000] <othermaciej>
I'm not sure if there's a justification in the text of DOM Core why html parsing can mutate the DOM but garbage collection (or occurence of a random date) is not, but I admit I can't think of how you would write it to make that clear

[13:16:00.0000] <othermaciej>
it can't just be "another standard says so" because I don't think the fact that insertAdjacentHTML mutates the DOM would be considered nonconforming to the DOM spec

[13:17:00.0000] <annevk>
HTML parsing defines what DOM mutations are to be performed

[13:17:01.0000] <othermaciej>
but it does indeed seem lame to assume that therefore anything is permitted

[13:17:02.0000] <annevk>
which is slightly different I'd say

[13:18:00.0000] <othermaciej>
well, I could write a document saying what DOM mutations may or may not be performed when garbage collecting, but I don't think that should retroactively change the meaning of DOM Core

[13:19:00.0000] <othermaciej>
and no spec defines what DOM mutations are to be performed when calling insertAdjacentHTML

[13:19:01.0000] <annevk>
no spec defines insertAdjacentHTML

[13:20:00.0000] <othermaciej>
that is true

[13:21:00.0000] <roc>
defining side effects that can happen during GC is nasty, because GC is very non-deterministic

[13:21:01.0000] <othermaciej>
there is a spec that defines ECMAScript garbage collection, namely ECMA-262

[13:23:00.0000] <othermaciej>
but it's probably super vague about participation of host objects in GC

[13:24:00.0000] <annevk>
in the name of interop it's probably good that Acid3 includes things that really annoy each of the browser vendors

[13:24:01.0000] <othermaciej>
the logical model is that child references are strong references and parent references are weak references

[13:24:02.0000] <annevk>
the 0 bytes in the DOM issue bites us

[13:25:00.0000] <roc>
surely by now all browser vendors are too jaded to be annoyed by anything

[13:25:01.0000] <othermaciej>
yeah

[13:27:00.0000] <roc>
othermaciej: weak references suck too. especially when they're not explicit

[13:27:01.0000] <othermaciej>
actually I think it would be easy to make the specific acid3 test for this pass, the hard case would be preserving pieces of the DOM that have never been referenced from JS

[13:28:00.0000] <roc>
if (elem.parentNode) { elem.parentNode.setAttribute(...) }

[13:28:01.0000] <roc>
sure hope you didn't GC in there!

[13:29:00.0000] <roc>
at least with explicit weak refs like in Java, I have to declare the weak ref and then do a .get() to get the real reference, so I know something's up

[13:30:00.0000] <othermaciej>
I'm not saying it's great behavior, it just happens to be what we lovingly reverse-engineered from Mozilla as best we could

[13:31:00.0000] <roc>
oh, I didn't know there was a compatibility argument

[13:32:00.0000] <othermaciej>
I'm not sure compatibility cares that much one way or the other

[13:32:01.0000] <roc>
so why'd you reverse engineer it?

[13:32:02.0000] <othermaciej>
(about preserving parents in detached DOM fragments)

[13:32:03.0000] <othermaciej>
there was some site that required specific things about preserving DOM wrappers for descendants of detached DOM subtrees years ago

[13:33:00.0000] <othermaciej>
(actually worse than a site, I think it was an "enterprise" app's html interface)

[13:33:01.0000] <hsivonen>
doesn't the Web JS concurrency model guarantee that if you walk down the tree, you can walk back up in the same method without someone else mutating the tree in ways that make weak refs collectable?

[13:33:02.0000] <othermaciej>
so we tested what other browsers did for parents or siblings of detached trees across GC

[13:34:00.0000] <othermaciej>
hsivonen: if what you're getting at is that roc's example can't possibly fail if "eleme" is in the document tree then I think you are right

[13:35:00.0000] <roc>
yeah

[13:35:01.0000] <roc>
but if it isn't...

[13:35:02.0000] <hsivonen>
othermaciej: I meant roc's case, yes

[13:35:03.0000] <Hixie>
one thing to consider is that any argument that could be made to say test 23 is invalid could also be used to make test 99 invalid

[13:36:00.0000] <Hixie>
er, s/23/26/

[13:36:01.0000] <Hixie>
and i really don't think you want test 99 to be invalid

[13:36:02.0000] <othermaciej>
if elem is not in the document tree then indeed weird things could happen in very speculative theory, but in fact won't, since there's nothing to trigger a GC at times that no temporary expression holds a reference

[13:36:03.0000] <hsivonen>
I still don't understand when parentNode is a weak ref to something for which there isn't a reciprocal hard ref

[13:36:04.0000] <hsivonen>
isn't parentNode nulled automatically if you detach a node from the tree?

[13:37:00.0000] <othermaciej>
if you removeChild, yes, it is nulled

[13:38:00.0000] <othermaciej>
the case where it is effectively a weak ref in WebKit (and was in Gecko and IE at least last time I tested) is if you have node A containing node B in document D, then you remove node A from the document, keep a reference to node B, and drop all your references to node A

[13:39:00.0000] <hsivonen>
hmm. interesting case

[13:39:01.0000] <Hixie>
the gc bg fails in gecko differently than webkit

[13:39:02.0000] <roc>
FWIW it still is weak in Gecko, we fail testcase 26, but we have enough infrastructure to fix it pretty easily post-FF3

[13:39:03.0000] <Hixie>
in one the ndoes have to still be in the doc, in the other the nodes have to be outside of the dic

[13:39:04.0000] <othermaciej>
Hixie: test 99 is comedy gold

[13:40:00.0000] <Hixie>
indeed

[13:40:01.0000] <hsivonen>
I don't recall seeing any weak refs in Java DOM impls, but then weak refs wasn't what I was paying attention to

[13:40:02.0000] <Hixie>
hsivonen: you have to have weak refs if you're using ref counting, otherwise you'll never reach zero

[13:40:03.0000] <Hixie>
hsivonen: not so much an issue with other GC schemes

[13:41:00.0000] <roc>
you wouldn't expect to, Java has a real collector so cyclic structures were never a problem

[13:41:01.0000] <othermaciej>
Java DOM impls probably have strong refs both ways because Java DOMs would be written in pure Java

[13:41:02.0000] <hsivonen>
ah right. 

[13:42:00.0000] <roc>
othermaciej: "if elem is not in the document tree then indeed weird things could happen in very speculative theory, but in fact won't" ... I'm not sure about that. I can easily imagine running unrelated windows in different threads sharing a common JS heap

[13:43:00.0000] <roc>
or the Gears thread stuff

[13:45:00.0000] <othermaciej>
roc: that's the kind of stuff that I considered to be in the "speculative theory" category (though Gears might potentially be less speculative)

[13:54:00.0000] <roc>
ok

[13:55:00.0000] <roc>
we can differ on how far-fetched it is

[13:57:00.0000] <roc>
I think the only thing preventing that case from occurring in Gecko + Gears today is where we place our GC safe points

[13:57:01.0000] <roc>
so I don't see it as all that far-fetched

[14:02:00.0000] <roc>
anyway, if that doesn't bother you, there's still the problem that inserting almost any code between the test of parentNode and the use of parentNode could allocate and trigger GC itself

[14:09:00.0000] <jruderman>
Hixie: does safari 3 fail acid3's text-shadow by having the shadow too close to the text?

[14:09:01.0000] <Hixie>
what maks you ask that?

[14:09:02.0000] <Hixie>
makes

[14:09:03.0000] <jruderman>
its shadow is close to the text "Acid3" than in the reference

[14:10:00.0000] <Hixie>
not on my machine...

[14:10:01.0000] <Hixie>
but yes, if it is not pixel perfect, then it has failed

[14:10:02.0000] <jruderman>
ok

[14:14:00.0000] <annevk>
are you testing for multiple shadows?

[14:14:01.0000] <annevk>
that will make Safari fail

[14:14:02.0000] <Hixie>
no, just the one

[14:14:03.0000] <Hixie>
multiple shadows are out in css3, iirc

[14:15:00.0000] <Hixie>
ok i found a way to make the shift-click thing work in 3/4 browsers, up from 2/4

[14:15:01.0000] <Hixie>
still doesn't work in opera though

[14:15:02.0000] <annevk>
they're not out

[14:15:03.0000] <Hixie>
i thought they were out?

[14:15:04.0000] <annevk>
afaict they're not

[14:15:05.0000] <Hixie>
huh

[14:15:06.0000] <Hixie>
oh well

[14:15:07.0000] <Hixie>
they should be :-

[14:15:08.0000] <Hixie>
)

[14:16:00.0000] <annevk>
if you use document.close() it might start working in Opera

[14:16:01.0000] <annevk>
i haven't actually tested that myself though

[14:17:00.0000] <annevk>
oh, you do that now

[14:17:01.0000] <Hixie>
well if you work out something that will make it work in opera, let me know

[14:17:02.0000] <Hixie>
in the meantime, i'm out of here

[14:17:03.0000] <Hixie>
later

[14:17:04.0000] <annevk>
use <pre>

[14:18:00.0000] <annevk>
thought that requires some additional effort to escape the rest

[15:15:00.0000] <zcorpan>
Hixie: i used        document.write('<pre>Failed ' + (tests.length - score) + ' of ' + tests.length + ' tests.\n' + log.replace(/&/g,'&amp;').replace(/</g,'&lt;').replace('\0', '\\0') + '</pre>');

[15:16:00.0000] <Hixie>
and that worked?

[15:16:01.0000] <Philip`>
zcorpan: Should be /\0/g, not '\0'

[15:20:00.0000] <Hixie>
well i've put that in

[15:20:01.0000] <Hixie>
no time to test it right now

[15:20:02.0000] <Hixie>
but let me know if it breaks anything if you try it before me

[15:22:00.0000] <zcorpan>
it worked for me, yeah

[15:22:01.0000] <zcorpan>
Philip`: that didn't work

[15:22:02.0000] <zcorpan>
there's only one \0 in the string anyway

[15:29:00.0000] <Philip`>
zcorpan: Hmm, how did it not work?

[15:30:00.0000] <Philip`>
http://software.hixie.ch/utilities/js/live-dom-viewer/?%3C!DOCTYPE%20html%3E%0D%0A%3Cscript%3E%0D%0Avar%20s%3D'a%5C0b%5C0c'%3B%0D%0Aw(s.replace(%2F%5C0%2Fg%2C%20'%5C%5C0'))%3B%0D%0A%3C%2Fscript%3E seems to be doing the right replacements...

[15:32:00.0000] <othermaciej>
I think I know an easy way to fix tests 26 and 27 in WebKit

[15:32:01.0000] <othermaciej>
still not sure if it is a good idea though

[15:35:00.0000] <SadEagle>
othermaciej: interesting (but may be not for the rest of the channel :-) )

[15:36:00.0000] <othermaciej>
SadEagle: well, a few hours ago I was debating the test with people

[15:41:00.0000] <SadEagle>
othermaciej: well, I am curious about the potential solution, but this isn't the place for it


2008-01-18
[16:02:00.0000] <zcorpan>
hsivonen: shouldn't the html5 datatype library include link types?

[16:40:00.0000] <Hixie>
ah crap

[16:40:01.0000] <Hixie>
the next e-mail is about colour spaces

[16:40:02.0000] <Hixie>
/me tries to see if the e-mail has any suggestion that would allow him to duck the entire issue neatly

[16:44:00.0000] <Hixie>
Philip`, o' Philip`, where art thou

[16:56:00.0000] <Philip`>
Hixie: *waves*

[16:57:00.0000] <Hixie>
Philip`: check out the new color section

[16:59:00.0000] <Philip`>
Hixie: Hmm, I don't really know much about colour spaces - I just assume everything is nice RGB 0-255 and then twiddle my monitor brightness until it looks alright

[16:59:01.0000] <Hixie>
i tried that

[16:59:02.0000] <Hixie>
but then you raised issues!

[16:59:03.0000] <Hixie>
:-P

[16:59:04.0000] <Philip`>
Oh, I don't remember that

[17:01:00.0000] <Philip`>
Since all my canvas tests assume there's no magical colour space conversion anyway, and browsers seem to pass the tests, I guess that means they do everything without conversions, which is good

[17:01:01.0000] <Hixie>
even for drawImage() of an image with gamma info?

[17:02:00.0000] <Philip`>
but I have no idea if they're really using sRGB or some device-specific colour space or something else

[17:02:01.0000] <Hixie>
and what does toDataURL return in its gamma information?

[17:02:02.0000] <Hixie>
what should putImageData() do if one of the pixels is 127.5 ?

[17:02:03.0000] <Philip`>
I haven't tried drawImage with gamma, since that sounds like it would lead to hard problems and I would get confused :-)

[17:02:04.0000] <Hixie>
...has a component that is...

[17:03:00.0000] <SadEagle>
isn't there also possibility of rounding errors in e.g. JPEG decoders and such?

[17:04:00.0000] <othermaciej>
ugh, color spaces

[17:05:00.0000] <othermaciej>
it's probably sufficient to require that reading and writing pixels occurs in the same colorspace

[17:05:01.0000] <othermaciej>
(maybe you also require that it's the same colorspace used for any rendering done by CSS)

[17:06:00.0000] <SadEagle>
hmm, css3 color-profile inherits.

[17:06:01.0000] <SadEagle>
othermaciej: there is some nastiness there if you do a drawImage, though, since the 2 can have different css colorspaces set..

[17:06:02.0000] <Philip`>
Hixie: It would be helpful for authors if it was rounded, instead of throwing an exception

[17:06:03.0000] <Philip`>
but it doesn't matter which way it's rounded

[17:06:04.0000] <Hixie>
IEEE754r it is

[17:07:00.0000] <Philip`>
because e.g. Firefox does the canvas with premultiplied alpha, while Opera does it without, so you get imprecise results whatever you do

[17:07:01.0000] <Philip`>
(because a colour with alpha=0.5 has only 7 bits of precision for each colour component in Firefox)

[17:08:00.0000] <Hixie>
surely we need to fix that

[17:08:01.0000] <Philip`>
I don't see why

[17:08:02.0000] <Hixie>
doesn't that mean you'll get different results for the same code?

[17:08:03.0000] <Hixie>
or is it just a matter of accuracy

[17:09:00.0000] <SadEagle>
I doubt you'll get exact results with different rasterizers.

[17:10:00.0000] <Philip`>
About drawImage alpha: See http://software.hixie.ch/utilities/js/live-dom-viewer/ and 'download' if nobody's overwritten it - Firefox/Opera/Safari have the same output from the <canvas> as from the <img>s, though Safari (at least on Windows) does the gamma wrong (for some definition of 'wrong')

[17:10:01.0000] <Philip`>
Hixie: Not quite sure what you mean - if there's a matter with accuracy, then you will get different results for the same code because of the inaccuracy

[17:11:00.0000] <harri>
hi

[17:11:01.0000] <othermaciej>
are those images supposed to look the same, other than the number?

[17:11:02.0000] <Philip`>
othermaciej: http://www.libpng.org/pub/png/pngsuite.html says they should

[17:11:03.0000] <gavin>
Hixie: is the acid3 test in some kind of version control?

[17:11:04.0000] <Hixie>
Philip`: i mean, it's not like the alpha channel will have 1.0 in one browser and 0.5 in another, right? they'll both be roughly the same, just with different number of significant bits of accuracy?

[17:11:05.0000] <othermaciej>
ok (wasn't sure what the test was doing)

[17:12:00.0000] <SadEagle>
othermaciej: hmm, seems like I got something to fix.

[17:12:01.0000] <othermaciej>
Hixie: it's not the alpha channel that is mainly affected by premultiplied alpha, it's the color channels

[17:12:02.0000] <Hixie>
ok, so, the color channels will all be roughly the same? it's not like one will be 0 and the other 255?

[17:13:00.0000] <Philip`>
Hixie: If you draw rgba(255, 255, 255, 0) then do getImageData, Opera will return (255, 255, 255, 0) and Firefox will return (0, 0, 0, 0)

[17:13:01.0000] <Hixie>
getImageData says "Pixels must be returned as non-premultiplied alpha values."

[17:13:02.0000] <Hixie>
so that seems like a bug in firefox

[17:13:03.0000] <othermaciej>
on Mac, Firefox appears to draw those images lighter than Safari (probably due to not accounting for the system colorspace)

[17:14:00.0000] <Philip`>
Hixie: rgba(n, n, n, 0) converted to premultiplied alpha is (0, 0, 0, 0), so it's impossible to recover the colour components from it

[17:14:01.0000] <gavin_>
othermaciej: if you're using a trunk build, you could retry the test with gfx.color_management.enabled set to true

[17:14:02.0000] <Hixie>
Philip`: right

[17:14:03.0000] <Hixie>
Philip`: so, that's a bug.

[17:14:04.0000] <Hixie>
according to the spec

[17:14:05.0000] <Philip`>
If you draw something with zero alpha, nothing will ever get drawn, so it doesn't matter that the colour components were lost

[17:15:00.0000] <othermaciej>
it only matters if you get the pixels back and do something to them that un-zeroes the alpha

[17:15:01.0000] <Hixie>
right

[17:15:02.0000] <othermaciej>
premultiplying is a good optimization

[17:15:03.0000] <othermaciej>
it would be unfortunate to rule it out

[17:15:04.0000] <Philip`>
Hixie: It's the same 'bug' as rgba(1, 2, 3, 0.5) being read back as something like (2, 2, 4, 127) - it's just a loss of precision, and when alpha=0 it's just ending up with zero precision

[17:16:00.0000] <Philip`>
so it's not like a horrible thing for the browser to do :-)

[17:17:00.0000] <Hixie>
well right now the spec rules it out

[17:17:01.0000] <Philip`>
I don't see where the spec rules it out

[17:18:00.0000] <Hixie>
3.14.11.1.10. Pixel manipulation, first paragraph, last sentence

[17:18:01.0000] <othermaciej>
s/would be unfortunate/is unfortunate/

[17:18:02.0000] <Hixie>
i seem to recall responding to feedback that basically said that they really didn't want it premultiplied for some reason

[17:21:00.0000] <Philip`>
Hixie: That part isn't relevant - the canvas pixel colours are still being returned non-premultiplied, and nothing says that e.g. filling with (255,0,0,0) can't result in the canvas pixel colours being (0,0,0,0) and thus being returned as (0,0,0,0) from getImageData

[17:22:00.0000] <othermaciej>
is there a requirement that a putImageData / getImageData round trip has to return identical data?

[17:22:01.0000] <Philip`>
No

[17:22:02.0000] <Philip`>
(though there's a requirement that getImageData / putImageData has no effect) 

[17:23:00.0000] <Hixie>
maybe i should make it clear that getImageData / putImageData / getImageData / putImageData should have no effect either

[17:23:01.0000] <Philip`>
I think that's clear already

[17:23:02.0000] <othermaciej>
that wouldn't affect premult

[17:23:03.0000] <Philip`>
because if get/put has no effect, then get/put/get/put can't possibly have any effect...

[17:24:00.0000] <Hixie>
though to be honest if 3.14.11.1.10. Pixel manipulation, first paragraph, last sentence doesn't apply here, i don't really understand what we're talking about

[17:24:01.0000] <Hixie>
which is unsurprising given my general ignorance in this region of the spec

[17:25:00.0000] <othermaciej>
(127, 127, 127, 0.5) would be stored internally as (64, 64, 64, 0.5) (I can't remember if you premultiply alpha by itself, but I think you don't) but would return (128, 128, 128, 0.5) when retrieving because premult is undone

[17:25:01.0000] <Philip`>
I think we're talking about the internal canvas representations not being required to have a specific precision

[17:26:00.0000] <othermaciej>
but (128, 128, 128, 0.5) and (127, 127, 127, 0.5) would draw the same thing

[17:26:01.0000] <Hixie>
oh i understand what Philip` meant earlier about the extreme 0 case meaning that data was "lost" but that really just being that the precision is lost

[17:27:00.0000] <othermaciej>
so a put/get cycle from arbitrary data might not retrieve the same data

[17:27:01.0000] <Hixie>
it's just that with alpha=0, the number of bits left is 0, so you'll always get 0 in the rgb components

[17:27:02.0000] <othermaciej>
but a get/put always would preserve contents

[17:27:03.0000] <Hixie>
ok

[17:27:04.0000] <Philip`>
(and so there's no point in worrying about whether 127.5 gets rounded to 127 or to 128, because it'll get clobbered by the conversion to the internal representation anyway)

[17:27:05.0000] <Hixie>
i don't care so much about that

[17:27:06.0000] <othermaciej>
Philip`: not if alpha is 1!

[17:28:00.0000] <Philip`>
othermaciej: Is there any point worrying about it in that specific case?

[17:28:01.0000] <othermaciej>
I don't think rounding mode of fractional pixels is that important, no

[17:28:02.0000] <othermaciej>
but not for the reason you stated

[17:29:00.0000] <othermaciej>
probably the simplest thing for implementations would be to do an ECMA-262 ToInt32 conversion on the provided pixel value

[17:29:01.0000] <othermaciej>
(I think that truncates)

[17:30:00.0000] <Hixie>
truncation is going to mean that you are always slightly off-white

[17:30:01.0000] <Philip`>
Since performance kind of matters here, is there some particular way of handling putImageData that would be as fast as possible while still being reasonably sane?

[17:31:00.0000] <Philip`>
(like, not doing lots of conversions and roundings and range checks for every component of every pixel because it'll make putImageData more unusably slow)

[17:32:00.0000] <SadEagle>
Philip`: it's much easier if you don't require the image data object to be an actual array

[17:32:01.0000] <Philip`>
SadEagle: What would be the alternative?

[17:32:02.0000] <Hixie>
my assumption has been that if you use getImageData then you get back something with a [[Class]] of ImageData that, when you set things to it, keeps the data in a really compact representation so long as you're only setting valid data 

[17:32:03.0000] <SadEagle>
Philip`: An object with length and integer accessor properties. 

[17:33:00.0000] <Hixie>
and expands to a normal JS object (which happens to have a [[Class]] of ImageData) if you do anything "wrong" (like set a pixel value to a string)

[17:34:00.0000] <Philip`>
Hixie: That sort of magic sounds annoying to implement

[17:35:00.0000] <SadEagle>
Philip`: anyway, if you do that, storing data in a native format, you only need to do conversion when JS explicitly requests it. And if JS is doing a lot of pixel throbbing, a few expensive ALU ops aren't gonna kill everything (even if their latency is gonna be hard to hide)

[17:35:01.0000] <Hixie>
well, if you don't, you have no choice but to type check and range check and so on

[17:35:02.0000] <Philip`>
e.g. when setting to a number, you'd have to work out whether that number was an integer and could be safely stored in the int[]

[17:35:03.0000] <SadEagle>
Philip`: no more than the imagedata in general.

[17:36:00.0000] <SadEagle>
It's not too disimilar from the native array object, but w/o the worry about autoboxing and whatnot.

[17:36:01.0000] <SadEagle>
one can just let JS properties shadow those of the internal impl. 

[17:36:02.0000] <SadEagle>
s/autoboxing/small int/

[17:37:00.0000] <Philip`>
SadEagle: I think the usual uses of ImageData involve JS manipulating every pixel, so it needs to be optimised more for pixels that are accessed than for pixels that aren't

[17:38:00.0000] <Philip`>
Does nobody have a nice simple fast ByteArray in JS already? :-(

[17:39:00.0000] <SadEagle>
Philip`: again, array objects have all the tricks. The most obvious thing I can say: with a JS array, your cost per image color component is at least a pointer.

[17:39:01.0000] <SadEagle>
Philip`: with a specialized object, it's about a byte

[17:41:00.0000] <Philip`>
That wouldn't be a problem at all if we had 8-bit pointers

[17:41:01.0000] <Philip`>
I blame whoever thought we needed so much address space

[17:42:00.0000] <SadEagle>
then we wouldn't have to worry about JS iterating over megapixel images, too.

[17:42:01.0000] <Philip`>
/me has forgotten what the original discussion was about now :-)

[17:43:00.0000] <Hixie>
ok, nobody tell Philip` about 64 bit architectures

[17:43:01.0000] <SadEagle>
premultiplied alpha and getPixelData/putPixelData

[17:43:02.0000] <SadEagle>
Philip`: are your tests up-to-date wrt to the spec changes?

[17:44:00.0000] <Philip`>
SadEagle: The path transformation tests aren't

[17:44:01.0000] <Philip`>
I don't think there have been any other spec changes that would have affected tests

[17:45:00.0000] <fredrikh>
Philip`: one of the shadow tests rely on a quirks mode in webkit for dashboard compatibility

[17:45:01.0000] <Hixie>
there, i made it so if you have a true ImageData object, then you can't store non-numeric data in there

[17:45:02.0000] <Hixie>
that should simplify matters a little

[17:45:03.0000] <fredrikh>
relies*

[17:46:00.0000] <Philip`>
fredrikh: Hmm, do you know which test or quirk that is?

[17:46:01.0000] <fredrikh>
Philip`: clip() clearing the path

[17:47:00.0000] <fredrikh>
in 2d.shadow.blur.low

[17:48:00.0000] <SadEagle>
Hixie: thanks. Does the website update quickly, or is there a more up-to-date way of looking at it

[17:48:01.0000] <Hixie>
SadEagle: it updates about 60 seconds after i say that i've updated it here

[17:48:02.0000] <Hixie>
sometimes longer

[17:48:03.0000] <Hixie>
(the regenning script takes a long time to run)

[17:48:04.0000] <SadEagle>
cool. Hmm, are images of about 4.2 billion pixels intended to be supported?

[17:48:05.0000] <Philip`>
fredrikh: Ah, thanks - it looks like 2d.path.clip.unaffected is meant to be testing that, so 2d.shadow.blur.low probably shouldn't

[17:49:00.0000] <Hixie>
SadEagle: UAs may have implementation-defined limits and may be subject to hardware limitations.

[17:49:01.0000] <Philip`>
/me fixes in his local copy

[17:49:02.0000] <SadEagle>
Hixie: ah, the reason I asked was actually some subtle difference between how foo[1] and foo['1'] behaves.

[17:50:00.0000] <SadEagle>
where instead of 1, you use 2^32-1 :-)

[17:50:01.0000] <Philip`>
(Would be nice if everyone passed 2d.path.clip.unaffected in the same way, of course :-) )

[17:50:02.0000] <Philip`>
(but only Firefox follows the spec there, seemingly)

[17:50:03.0000] <Hixie>
SadEagle: yeah, not sure how to handle that exactly, i'm waiting on the dom bindings spec

[17:51:00.0000] <Hixie>
christ, the w3c site is getting slower every time i regen the spec

[17:51:01.0000] <Hixie>
sure looking forward to gsnedders' spec generator :-)

[17:52:00.0000] <SadEagle>
Philip`: hmm, I thought we passed that, but I gues snot

[17:53:00.0000] <fredrikh>
it's strange that we don't, because we do close the sub path

[17:55:00.0000] <fredrikh>
but while on the topic of shadows...

[17:55:01.0000] <fredrikh>
Hixie: i'd really appreciate it if the spec didn't say that implementations must use the specified algorithm

[17:55:02.0000] <Hixie>
which one?

[17:55:03.0000] <fredrikh>
for shadows

[17:55:04.0000] <Philip`>
Why?

[17:56:00.0000] <Philip`>
(The specified algorithm ought to match what Safari does now)

[17:56:01.0000] <fredrikh>
in khtml we use a different filter that produces an effect that's very similar to a gaussian blur, but is many times faster

[17:56:02.0000] <Hixie>
fredrikh: Conformance requirements phrased as algorithms or specific steps may be implemented in any manner, so long as the end result is equivalent.

[17:57:00.0000] <Philip`>
Ah

[17:57:01.0000] <fredrikh>
Hixie: okay

[17:57:02.0000] <takkaria>
apparently someone needs to write Cookie5

[17:57:03.0000] <Philip`>
"equivalent" is fairly loose here since rounding/precision issues mean nobody's going to really notice if some values are off by a few percent

[17:57:04.0000] <Hixie>
right

[17:57:05.0000] <SadEagle>
Hixie: is it intended that drawImage function when the source image is the same canvas element as the destination?

[17:58:00.0000] <Hixie>
if there's some algorithm that looks like gaussian but happens to be an approximation, that's just an implemetation of gaussian blur that happens to approximate

[17:58:01.0000] <Philip`>
(or at least it means I'm willing to add lots of +/- value tolerance in my tests - I don't know if anybody else minds that :-) )

[17:58:02.0000] <Hixie>
SadEagle: what do browsers do now?

[18:01:00.0000] <Philip`>
/me notes that his Firefox shadow patch is a (possibly poor) Gaussian approximation since it just chops off the ends of the distribution

[18:02:00.0000] <SadEagle>
Hixie: no idea, will try. Just a mental observation of a potential problem (after supper..)

[18:03:00.0000] <Philip`>
http://software.hixie.ch/utilities/js/live-dom-viewer/?%3C!DOCTYPE%20html%3E%0D%0A%3Ccanvas%20id%3Dc%3E%3C%2Fcanvas%3E%0D%0A%3Cscript%3E%0D%0Awindow.onload%20%3D%20function%20()%20%7B%0D%0Avar%20ctx%20%3D%20document.getElementById('c').getContext('2d')%3B%0D%0Actx.fillStyle%20%3D%20'red'%3B%0D%0Actx.fillRect(0%2C%200%2C%2050%2C%2050)%3B%0D%0Actx.drawImage(document.getElementById('c')%2C%2020%2C%2020)%3B%0D%0A%7D%0D%0A%3C%2Fscript%3E

[18:03:01.0000] <Hixie>
SadEagle: k

[18:04:00.0000] <Hixie>
Philip`: the real question is what happens if the source pixels would change value during the opueration

[18:04:01.0000] <Hixie>
e.g. using one of the PNG test images

[18:04:02.0000] <Philip`>
Firefox/Safari draw two red rectangles, Opera draws an endless chain of rectangles

[18:04:03.0000] <Hixie>
testing both bottom right and top left overlap

[18:05:00.0000] <Philip`>
so it is testing that already, and Opera loses :-)

[18:05:01.0000] <Hixie>
endless chain?

[18:05:02.0000] <Philip`>
s/Opera/Opera 9.2/

[18:05:03.0000] <Hixie>
oh right

[18:05:04.0000] <Hixie>
it paints the whole canvas

[18:05:05.0000] <Philip`>
(Opera 9.5 works like FF/S)

[18:05:06.0000] <Hixie>
i thought you were only painting the rect

[18:05:07.0000] <Hixie>
teehee

[18:05:08.0000] <Hixie>
cool

[18:06:00.0000] <Philip`>
/me adds to his list of things to add tests for

[18:06:01.0000] <fredrikh>
Philip`: that's the only way to do it if you want reasonable performance, and the gaussian curve is effectively 0 after about 3 standard deviations

[18:08:00.0000] <Hixie>
is there a better way to say it than:

[18:08:01.0000] <Hixie>
  <p>When a canvas is drawn onto itself, user agents must act as if

[18:08:02.0000] <Hixie>
  the source was copied before the drawing operation started.</p>

[18:09:00.0000] <Philip`>
fredrikh: Apparently about 0.27% percent is outside +/- 3 sigma, so I guess that's fine since it'll be lost in the rounding errors

[18:09:01.0000] <Philip`>
Hixie: That's not necessary to state, since the drawing model already covers it

[18:09:02.0000] <Hixie>
really?

[18:10:00.0000] <Philip`>
The canvas would get drawn to the source image bitmap, and then it would get composited onto the canvas bitmap later

[18:10:01.0000] <Hixie>
valid, valid

[18:10:02.0000] <Philip`>
so it has to be read before anything is written

[18:10:03.0000] <Hixie>
/me removes the paragraph

[18:11:00.0000] <Hixie>
i'll just add this note instead:

[18:11:01.0000] <Hixie>
  <p class="note">When a canvas is drawn onto itself, the drawing

[18:11:02.0000] <Hixie>
  model requires the source to be copied before the image is drawn

[18:11:03.0000] <Hixie>
  back onto the canvas, so it is possible to copy parts of a canvas

[18:11:04.0000] <Hixie>
  onto overlapping parts of itself.</p>

[18:11:05.0000] <Hixie>
unless you think even that is unnecessary (but someone asked the question, so...)

[18:12:00.0000] <SadEagle>
Hixie: thanks

[18:12:01.0000] <Philip`>
Seems sensible to have that note

[18:12:02.0000] <fredrikh>
Hixie: you could perhaps say that it's an atomic operation

[18:14:00.0000] <Hixie>
i think the drawing model describes that part well enough, as Philip` pointed out

[18:14:01.0000] <Hixie>
we should have an example of fudging with putImageData()

[18:14:02.0000] <Hixie>
anyone want to come up with a decent, useful filter that isn't long?

[18:15:00.0000] <Philip`>
http://canvex.lazyilluminati.com/misc/filter.html ?

[18:16:00.0000] <Hixie>
do you mind contributing that to the spec?

[18:17:00.0000] <Philip`>
I wouldn't mind at all, although it could probably doing with being cleaned up a bit first :-)

[18:17:01.0000] <Hixie>
yeah don't worry, i'll clean it up :-)

[18:17:02.0000] <Hixie>
i'll also change the image you use :-P

[18:18:00.0000] <Philip`>
(It's just a boring edge detection filter - don't know if it's got an official name or anything)

[18:18:01.0000] <Philip`>
That's the only image on the web whose URL I can remember

[18:18:02.0000] <kig>
laplacian edge detection or somesuch

[18:19:00.0000] <Philip`>
Oh, but I had to copy it to my own server because of the annoying security restrictions :-(

[18:19:01.0000] <Philip`>
/me wonders about Access-Control for canvas images

[18:20:00.0000] <Hixie>
(grr, who's idea was it to make the Image() constructor take _dimensions_ as its argument. all i care about is the uri!)

[18:20:01.0000] <Hixie>
Philip`: let's wait for access-control to be resolved first :-)

[18:21:00.0000] <kig>
and do fast image filtering ops instead :9

[18:21:01.0000] <Philip`>
kig: Ah, yes, looks like it is Laplacian

[18:22:00.0000] <Philip`>
It would be great if we could generate Java bytecode in JS to do the filtering operation, and then tell the browser to compile and JIT it and run it on every pixel

[18:24:00.0000] <Hixie>
Philip`: what's with the fillrects in that demo? :-)

[18:24:01.0000] <Philip`>
Hixie: That was to measure how much faster putImageData was

[18:25:00.0000] <Philip`>
"fillRects: 2606ms; putImageData: 30ms"

[18:25:01.0000] <Hixie>
k

[18:25:02.0000] <Hixie>
/me deletes code

[18:26:00.0000] <takkaria>
Philip`: great is one word for it. :)

[18:27:00.0000] <Philip`>
Hmm, the isNaN thing is a bit ugly, but the alternative ways of filling the outermost 1-pixel edge of the image with 0 are a bit ugly too :-(

[18:32:00.0000] <Philip`>
(It would be much nicer to write this kind of code in C)

[18:33:00.0000] <Philip`>
(Oh, that's a good idea - web browsers should allow <script type="text/c">)

[18:33:01.0000] <kig>
gnu lightning 

[18:35:00.0000] <Philip`>
You could use a self-hosted instance of the lcc compiler to convert C into whatever the JIT backend needs

[18:37:00.0000] <Hixie>
Philip`: download on http://software.hixie.ch/utilities/js/live-dom-viewer/

[18:37:01.0000] <Hixie>
what am i doing wrong

[18:38:00.0000] <kig>
GLSL is a lot nicer than C for graphics though

[18:40:00.0000] <Philip`>
Hixie: Are you using something like FF2 on Linux?

[18:41:00.0000] <Hixie>
it worked on your demo

[18:41:01.0000] <Hixie>
but yes

[18:41:02.0000] <Philip`>
https://bugzilla.mozilla.org/show_bug.cgi?id=406036

[18:41:03.0000] <Hixie>
awesome

[18:41:04.0000] <Philip`>
There's a bug with images with certain dimensions

[18:41:05.0000] <Philip`>
which I guess might be what's breaking this

[18:41:06.0000] <Hixie>
is it working for you?

[18:41:07.0000] <Philip`>
(Your example works for me in FF3 on Windows, but not FF2 on Linux)

[18:41:08.0000] <Hixie>
k

[18:41:09.0000] <Philip`>
It looks pretty ugly, though :-p

[18:42:00.0000] <Hixie>
the code or the output? :-)

[18:42:01.0000] <Philip`>
The output

[18:42:02.0000] <Philip`>
I haven't looked at the code much :-)

[18:42:03.0000] <Hixie>
hehe

[18:43:00.0000] <Philip`>
I think it'd be good to at least get rid of the "var w4 = w*4" because it's not a sufficiently useful optimisation

[18:46:00.0000] <Hixie>
ok gotta go. regenning the spec, i'll commit it tomorrow.

[18:48:00.0000] <Philip`>
Okay, sounds good

[18:49:00.0000] <Philip`>
In the new spec, s/clamed/clamped/

[18:53:00.0000] <Philip`>
"The toDataURL() method must not include color space information in the resource returned." - hmm, I guess I need to write a PNG decoder to be able to test that...

[18:54:00.0000] <Philip`>
(Well, at least enough to parse out all the chunk types)

[18:54:01.0000] <Philip`>
Or I could not bother, which would be much easier

[18:55:00.0000] <SadEagle>
fredrikh: 77%

[18:56:00.0000] <Philip`>
Aha, if undefined is like 0 then the isNaN checks can be removed from clamp256, and the loops made to go 1<=y<h-1, 1<=x<w-1

[18:56:01.0000] <Philip`>
which is much nicer

[18:57:00.0000] <Philip`>
except you'd have to say "outputData.length = w*h*4" to make sure it's got the right number of undefineds

[18:58:00.0000] <SadEagle>
Philip`: wrt to 2d.composite.operation.darker --- was 'darker' removed from the spec at some point?

[18:58:01.0000] <Philip`>
SadEagle: Yes

[18:59:00.0000] <SadEagle>
I see, thanks. *removes*

[19:00:00.0000] <Philip`>
http://lists.whatwg.org/htdig.cgi/whatwg-whatwg.org/2007-May/011386.html etc

[19:00:01.0000] <Philip`>
(Firefox/Opera/Safari all implemented it totally differently)

[19:01:00.0000] <takkaria>
Philip`: it's not hard to write a PNG decoder that just does that

[19:01:01.0000] <Philip`>
takkaria: In JavaScript? :-)

[19:01:02.0000] <takkaria>
you have a fair point there

[19:05:00.0000] <Philip`>
/me tries to work out what Gecko 1.8.1.12 is

[19:05:01.0000] <Philip`>
I think that's going to be Firefox 2.0.whatever

[19:06:00.0000] <Philip`>
so that should mean Firefox 2 will get a working putImageData

[19:06:01.0000] <SadEagle>
1.8.1.11 is 2.0.0.11

[19:06:02.0000] <SadEagle>
that's almost binutils-like

[19:06:03.0000] <SadEagle>
Philip`: uh-oh. Now I definitely will have to implement that ;-)

[19:07:00.0000] <Philip`>
(where "working" means "buggy" because it's still returning premultiplied colours, I think)

[19:07:01.0000] <Philip`>
(but at least you can work around that in JS)

[19:21:00.0000] <Philip`>
fredrikh: Oops, I just noticed I misinterpreted what you said about 2d.shadow.blur.low - I thought shadow bugs were being masked by clip bugs, but actually the test was relying on those clip bugs...

[19:21:01.0000] <fredrikh>
Philip`: right

[20:44:00.0000] <kig>
Philip`: re: canvas 2d impl in opengl, going to do it?

[21:45:00.0000] <jwalden>
Hixie: there's an instructions.in/test 5 asymmetry again :-)

[21:56:00.0000] <annevk>
Hixie, s/clamed to 255/clamped to 255/

[21:56:01.0000] <jwalden>
s/in\//inc\//

[22:09:00.0000] <annevk>
hmm, Acid3 is testing @font-face now?

[22:10:00.0000] <annevk>
is that the purple "X" ?

[22:10:01.0000] <jwalden>
wow

[22:10:02.0000] <annevk>
so it seems

[22:11:00.0000] <jwalden>
fun times

[22:11:01.0000] <jwalden>
/me gasps

[22:11:02.0000] <jwalden>
it's not an EOT font!

[22:12:00.0000] <annevk>
that same test also tests positioned generated content, nice

[22:15:00.0000] <othermaciej>
omg Hixie is teh font pirate!!!111

[22:18:00.0000] <MacDome>
annevk: is that what the red square in the upper right corner is?

[22:18:01.0000] <MacDome>
hum.. hixie.ch is failing to load

[22:18:02.0000] <annevk>
MacDome, an "X" drawn in the Ahem font is supposed to cover that

[22:19:00.0000] <MacDome>
we support @font-face...

[22:19:01.0000] <MacDome>
/me wonders what sort of @font-face madness he's doing

[22:19:02.0000] <annevk>
do you support positioned generated content though?

[22:19:03.0000] <othermaciej>
probably

[22:20:00.0000] <annevk>
otherwise the X will not be on top of the red square (the "X" is also invisible if you support @font-face afaict)

[22:24:00.0000] <annevk>
is there some documentation on what subset of descriptors WebKit supports?

[22:28:00.0000] <MacDome>
annevk: for @font-face? not many

[22:29:00.0000] <annevk>
i'm all for not many, just wondering which :)

[23:08:00.0000] <othermaciej>
UTSL

[23:08:01.0000] <othermaciej>
I do not think it is documented otherwise

[23:10:00.0000] <annevk>
it's not that strong with me it seems

[23:24:00.0000] <hsivonen>
zcorpan: link types are extensible and the extensibility mechanism is unstable

[00:59:00.0000] <hsivonen>
/me notes that Opera violates the HTML5 requirement that UAs MUST NOT support UTF-7

[01:09:00.0000] <Lachy>
what's the reason for forbidding UTF-7?

[01:09:01.0000] <Lachy>
other than it being a totally useless encoding for the web

[01:15:00.0000] <hsivonen>
Lachy: it is a security problem, too

[01:18:00.0000] <Philip`>
kig: I'm not planning to do that

[01:25:00.0000] <annevk>
hsivonen, what's the scenario?

[01:28:00.0000] <hsivonen>
annevk: an attacker injects UTF-7 encoded evil code into a forum. the forum software assumes that Basic Latin and ASCII bytes have a sane correspondence and doesn't filter out the evil attack code.

[01:29:00.0000] <hsivonen>
annevk: the user is somehow tricked to selecting UTF-7 (e.g. by simply posting an instruction to do so; so gullible people will fall for it).

[01:29:01.0000] <hsivonen>
annevk: the attack code runs

[01:31:00.0000] <Lachy>
Firefox supports UTF-7 too

[01:31:01.0000] <Lachy>
and IE

[01:32:00.0000] <othermaciej>
Safari doesn't let you pick UTF-7 from the encoding menu in the UI at least

[01:32:01.0000] <othermaciej>
though I dunno if it supports it generally

[01:33:00.0000] <othermaciej>
8-bit encodings where ASCII is not ASCII are bad mojo

[01:33:01.0000] <hsivonen>
Lachy: I think there's a bug about disabling UTF-7 from Gecko wherever feasible

[01:34:00.0000] <Lachy>
it's most insecure when auto-detect is enabled and allowed to switch to UTF-7 automatically

[01:36:00.0000] <hsivonen>
https://bugzilla.mozilla.org/show_bug.cgi?id=408457

[01:36:01.0000] <hsivonen>
https://bugzilla.mozilla.org/show_bug.cgi?id=406777

[01:38:00.0000] <hsivonen>
/me has very little sympathy for authors whose sites would break due to UTF-7 getting disabled

[01:38:01.0000] <Lachy>
I wonder how many sites are actually using UTF-7

[01:39:00.0000] <hsivonen>
probably in the same ballpark with UTF-32 usage

[01:40:00.0000] <hsivonen>
is there an easy way to test whether an encoding is ebcdic-based?

[01:40:01.0000] <annevk>
UTF-32 is not used

[01:40:02.0000] <hsivonen>
annevk: it is by test suites, I believe

[01:40:03.0000] <Lachy>
test suites don't matter

[01:40:04.0000] <annevk>
yeah, test suites caused us to support it iirc

[01:41:00.0000] <hsivonen>
coming up with new character encodings should carry an even more drastic punishment than coming up with new C++ features

[01:41:01.0000] <Lachy>
if it's only test suites using it, then that's not real world usage and it can be dropped

[01:49:00.0000] <hsivonen>
is x-JISAutoDetect a real Web encoding decl or an ICU internal magic name?

[01:55:00.0000] <hsivonen>
are there encodings that aren't either: 1) ASCII-based, 2) EBCDIC-based or 3) designed for Unicode?

[01:58:00.0000] <roc>
definitely

[01:59:00.0000] <MikeSmith>
isn't JISAutoDetect a Java-specific thing?

[01:59:01.0000] <roc>
lots of the older Asian encodings for example

[01:59:02.0000] <hsivonen>
MikeSmith: perhaps. I'll put in on the banned list.

[01:59:03.0000] <MikeSmith>
hsivonen - I'll also ask Felix Sasaki about it

[01:59:04.0000] <MikeSmith>
I reckon he'll know for sure

[02:00:00.0000] <hsivonen>
(the banned list is stuff that the Validator.nu deployment has decoders for but that a Web-facing piece of software should not support)

[02:01:00.0000] <roc>
Big5 and GB2312 for example

[02:01:01.0000] <hsivonen>
roc: ah. ok. 

[02:01:02.0000] <hsivonen>
/me thought GB stuff was ASCII-based

[02:02:00.0000] <hsivonen>
roc: according to my test code, ASCII bytes decode to corresponding Basic Lating in Big5 and GB2312

[02:03:00.0000] <roc>
well, if that's what you mean by ASCII based...

[02:03:01.0000] <roc>
then Unicode is ASCII based too :-)

[02:03:02.0000] <roc>
The mappings for bytes 00-7F are actually not specified by Big5 or GB2312 or comparable encodings

[02:03:03.0000] <hsivonen>
roc: well, UTF-8 and CESU-8

[02:04:00.0000] <roc>
they're just "whatever the system does"

[02:04:01.0000] <hsivonen>
oh. that's bad

[02:04:02.0000] <roc>
http://en.wikipedia.org/wiki/Big5

[02:04:03.0000] <hsivonen>
ASCII is de facto, though, isn't it?

[02:04:04.0000] <roc>
"The modern characterization of Big5 as an MBCS consisting of the DBCS of Big5 plus the SBCS of ASCII is therefore historically incorrect and potentially flawed, as the choice of the matching SBCS was, and theoretically still is, quite independent of the flavour of Big5 being used."

[02:05:00.0000] <hsivonen>
I care about the IANA meaning and actual Web usage

[02:07:00.0000] <hsivonen>
more specifically, I'm right now implementing checking for the HTML5 requirements about encodings implementations MUST NOT support, authors SHOULD NOT use and the ASCII superset requirement

[02:08:00.0000] <hsivonen>
Hixie: you have a definition for ASCII supersetness but you don't say how to tell if an encoding is EBCDIC-based

[02:10:00.0000] <hsivonen>
It seems that the stuff on my non-ASCII list consists of UTF-16, UTF-32, ISCII, legacy dingbat stuff, a couple of Japanese and Korean encodings and an insane number of IBM encodings

[02:10:01.0000] <hsivonen>
it looks almost safe to whitelist UTF-16 and complain about all other non-ASCII-superset encodings

[02:13:00.0000] <hsivonen>
hmm. or perhaps this heuristic works for non-x-encodings: if non-ASCII-superset and name starts with "cp" or "ibm", the encoding falls under the EBCDIC SHOULD NOT

[02:27:00.0000] <zcorpan>
hsivonen: while you're at it, you could warn about encodings other than utf-8 and utf-16 for xml

[02:28:00.0000] <zcorpan>
(or drop support for other encodings altogether, although that probably makes the validator less useful)

[02:29:00.0000] <hsivonen>
zcorpan: Don't I already warn about them? (other than ISO-8859-1 and US-ASCII that is)

[02:29:01.0000] <annevk>
/me hopes hsivonen does not warn about text/xml

[02:30:00.0000] <annevk>
s/hsivonen/validator.nu/ :p

[02:31:00.0000] <hsivonen>
annevk: I don't remember what exactly the text/xml warning are, but I think I warn if charset= is missing on the HTTP level

[02:31:01.0000] <annevk>
:(

[02:32:00.0000] <hsivonen>
annevk: isn't your patch about that still in queue for Gecko? might be a good idea to suggest that it not be checked in

[02:33:00.0000] <zcorpan>
hsivonen: oh, i just tested with iso-8859-1

[02:33:01.0000] <annevk>
so far I only updated some architecture

[02:33:02.0000] <hsivonen>
zcorpan: warning about iso-8859-1 and us-ascii seems unproductive considering implementation reality

[02:34:00.0000] <zcorpan>
hsivonen: true

[02:34:01.0000] <annevk>
isn't iso-8859-1 really windows-1252?

[02:34:02.0000] <hsivonen>
annevk: not in Validator.nu XML support

[02:35:00.0000] <annevk>
/me wonders what the various control characters do in browsers

[02:35:01.0000] <hsivonen>
C1 range should give a warning in V.nu

[02:37:00.0000] <hsivonen>
annevk: the lax type checkbox turns off RFC 3023 uselessness.

[02:38:00.0000] <hsivonen>
but if the checkbox is unchecked, I'm eligible for the t-shirt

[02:55:00.0000] <MikeSmith>
fyi, I've set up the following page to document milestones related to HTML over the last 10 years (between publication of the HTML 4.0 Rec and creation of the current HTML WG) and to try to provide context for HTML5

[02:55:01.0000] <MikeSmith>
http://esw.w3.org/topic/HTML/history

[02:56:00.0000] <MikeSmith>
I'm sure there are some things of significance that I've missed, so if anybody notices such, please add it.

[02:57:00.0000] <MikeSmith>
Or change anything that's not accurate

[02:57:01.0000] <MikeSmith>
If you do add or change anything, please also include a comment indicating what you added or changed.

[03:07:00.0000] <Philip`>
"first compatible native implementation of XMLHttpRequest" - compatible with what?

[03:09:00.0000] <annevk>
the APIs matched

[03:09:01.0000] <annevk>
though getting the object was slightly different

[03:09:02.0000] <annevk>
i should say "matched"

[03:15:00.0000] <MikeSmith>
Philip` - I copied that wording directly from Wikipedia. I don't know what it means either. I guess it means compatible with the implementation in IE6.

[03:30:00.0000] <MikeSmith>
..

[03:31:00.0000] <MikeSmith>
What kinds of Web applications are the use cases behind the Network Connections part of the current HTML5 spec?

[03:31:01.0000] <MikeSmith>
http://www.w3.org/html/wg/html5/#network

[03:32:00.0000] <Dashiva>
Chat rooms and such, maybe?

[03:32:01.0000] <annevk>
p2p games, avoiding overhead of HTTP

[03:33:00.0000] <MikeSmith>
OK

[03:35:00.0000] <MikeSmith>
recent discussions around Access Control leave me thinking it might be a worthwhile to try to start getting use cases documented for various parts of the HTML5 spec

[03:35:01.0000] <annevk>
probably, yeah

[03:35:02.0000] <annevk>
sigh

[03:37:00.0000] <MikeSmith>
yeah, definitely worthy of a big sigh

[03:37:01.0000] <MikeSmith>
maybe can get some people to volunteer to do the work of gathering the use cases and documenting them and maintaining the doc

[03:38:00.0000] <MikeSmith>
would be quite different work than spec-editing, with nowhere near the same need of technical expertise to write it up

[03:40:00.0000] <annevk>
yup

[03:41:00.0000] <annevk>
i think i've address all the concerns with access control now

[03:41:01.0000] <annevk>
addressed*

[04:12:00.0000] <takkaria>
http://users.ecs.soton.ac.uk/jmb/test/cookies.php

[04:35:00.0000] <hsivonen>
MikeSmith: hmm. the wiki should probably mention the introduction of doctype sniffing. I don't have the dates at hand. Tantek and Peter Linss probably recall the historical specifics.

[04:36:00.0000] <MikeSmith>
hsivonen - If you can have time to find dates for that, I'd appreciate it

[04:37:00.0000] <MikeSmith>
I'm reminded now that I wanted to add the date for first public launch of your conformance checker

[04:37:01.0000] <MikeSmith>
and also for validator.nu launch

[04:38:00.0000] <hsivonen>
I'll see if I can dig up some the dates

[04:41:00.0000] <MikeSmith>
thanks

[04:57:00.0000] <Philip`>
You could list all the occasions that the HTML WG has agreed on something

[05:13:00.0000] <hsivonen>
sigh. so much character encoding code tweaking

[05:13:01.0000] <hsivonen>
everyone should just use utf-8

[05:16:00.0000] <Philip`>
Everyone should just use us-ascii and NCRs

[05:16:01.0000] <takkaria>
everyone should use utf-7, the imap version

[05:17:00.0000] <hsivonen>
takkaria: oh, yeah, the IMAP version... I found out about it earlier today and put it on the banned list

[05:17:01.0000] <Philip`>
All characters should be encoded as PNGs

[05:17:02.0000] <jwalden>
nope, not enough XML

[05:18:00.0000] <takkaria>
/me has a printed copy of the IMAP spec for when he can't get to sleep

[05:18:01.0000] <OmegaJunior>
And the screen readers (audio) should recognise the pattern in the PNG character and interpret it as a sound.

[05:19:00.0000] <Philip`>
Sounds like IMAP UTF-7 doesn't have the security problems of plain UTF-7, since ASCII characters can't be encoded as multiple bytes

[05:19:01.0000] <Philip`>
OmegaJunior: PNG is extensible so we can add a new chunk that gives a textual representation of the image

[05:20:00.0000] <OmegaJunior>
And an audio representation?

[05:20:01.0000] <Philip`>
That would be a good way of making accessible CAPTCHAs, actually

[05:20:02.0000] <OmegaJunior>
Not if it has the text rep built in... automated retrieval not good for security

[05:20:03.0000] <Philip`>
OmegaJunior: I'm not sure why that would be needed - screen readers can convert the text to audio

[05:21:00.0000] <OmegaJunior>
Less CPU power needed by the screen readers :)

[05:21:01.0000] <Philip`>
They can make up for that CPU power usage by disabling the graphics output

[05:21:02.0000] <OmegaJunior>
true

[05:29:00.0000] <zcorpan>
getting innerHTML: "If one of the ancestors of the child node is a style, script, xmp, iframe, noembed, noframes, noscript, or plaintext element, then append the value of the child node's data DOM attribute literally."

[05:30:00.0000] <zcorpan>
perhaps that should say "If the parent node of the child node ..." in order to make the algorithm more performant while still DTRT in normal cases

[05:34:00.0000] <zcorpan>
in fact, firefox seems to only serialize the child text nodes of e.g. <script>

[05:38:00.0000] <zcorpan>
but opera serializes all children and only checks parent for deciding about < vs. &lt;

[05:38:01.0000] <zcorpan>
/me sends email

[05:43:00.0000] <zcorpan>
actually, i guess the spec could be implemented in a performant way by just using a flag

[05:44:00.0000] <annevk>
it's not quite clear if what the spec says is nice for <script><?test alert(1)?></script>

[05:44:01.0000] <annevk>
which is not entirely unlikely if you copy and paste nodes of responseXML into your own DOM and then serialize

[05:45:00.0000] <zcorpan>
i've complained about serializing PIs

[05:45:01.0000] <annevk>
same applies to comments i guess

[05:46:00.0000] <zcorpan>
what do you mean? you think comments should be omitted from the serialization?

[05:47:00.0000] <zcorpan>
(firefox omits them)

[05:47:01.0000] <annevk>
i'm not sure if what is being said for <script> etc. makes sense for comments

[05:49:00.0000] <zcorpan>
the spec says to serialize them as normal. which we do, but firefox doesn't

[05:51:00.0000] <zcorpan>
neither roundtrips correctly of course, but omitting probably roundtrips better than not omitting

[05:53:00.0000] <Philip`>
Hixie: I'd suggest changing the edge filtering demo to be more like http://philip.html5.org/demos/canvas/edgedetect.html - the clamping is now unnecessary, and the edges can be handled by setting .length so they are undefined and thus black

[05:54:00.0000] <Philip`>
(This doesn't work in Firefox or in Opera 9.5, though)

[07:20:00.0000] <zcorpan>
Hixie: in test 1, you have

[07:20:01.0000] <zcorpan>
          case 1: case 3: case 4: case 6: case 7: case 8: case 9: case 12: case 12: throw exception;

[07:20:02.0000] <zcorpan>
was it intended to list "case 12" twice?

[08:14:00.0000] <gsnedders>
takkaria: Cookie5 falls into the HTTPbis work, IIRC

[08:15:00.0000] <gsnedders>
(and parsing and dealing of invalid things falls into my own draft, as the WG seems to not want to do it itself)

[08:34:00.0000] <Philip`>
http://www.cisco.com/univercd/illus/6/42/65242.jpg - hmm, I think this is the first time I've noticed a web site with small print that can't be made readable by increasing the font size

[09:16:00.0000] <gsnedders>
is there any way to get back to a DOM from a tree walker?

[09:17:00.0000] <gsnedders>
(in html5lib)

[09:34:00.0000] <BlueG>
should I use xhtml or html for my web site, and why?

[09:36:00.0000] <Philip`>
BlueG: You should, because the alternatives are usually proprietary technologies from a single vendor and don't have as wide adoption as (X)HTML

[09:37:00.0000] <SadEagle>
does anyone perchance know of any good dom traversal testsuites?

[09:41:00.0000] <BlueG>
Philip`: I meant I want to know why to choose one of the two over the other...

[09:43:00.0000] <Camaban>
a bit OT for this channel, but considering virtually all 'XHTML' sites serve content as if they are HTML, there's virtually only one option

[09:43:01.0000] <BlueG>
would it be legitimate to serve xhtml code with content negotiation so that all of the browsers that support the application/xml+xhtml mime type get it that way, and IE recieves it at text/html?

[09:43:02.0000] <Camaban>
BlueG: it states you can do that in the XHTML spec

[09:43:03.0000] <Philip`>
BlueG: What would be the benefit of doing that?

[09:46:00.0000] <BlueG>
I am told that serving xhtml at text/html is a bad idea, loosing most of the benefits of using xhtml, but that IE doesn't understand the proper mime type

[09:46:01.0000] <SadEagle>
what are the benefits of using xhtml? :-)

[09:48:00.0000] <BlueG>
good question. I have read a few things, but what I am really wanting to know is whether I should use xhtml or html and why

[09:48:01.0000] <Philip`>
BlueG: If the application/xhtml+xml (in Firefox etc) and text/html (in IE etc) versions of the page have the same features, then you aren't using any of the features that XHTML provides, and you might as well send it as text/html to everyone because it's easier and less likely to break

[09:50:00.0000] <Philip`>
(Er, any of the *new* features that XHTML provides)

[09:50:01.0000] <BlueG>
would I be better off using html 4.01, instead of xhtml 1.0?

[09:50:02.0000] <Camaban>
BlueG: if you serve XHTML as text/html, you may as well use HTML anyway, as the browser looks at it in the same way.  And you can't send XHTML as XTHML because IE doesn't like it....  So either use HTML, or use XHTML as if it's HTML, the end result is, it gets treated as HTML

[09:50:03.0000] <Philip`>
You can send XHTML as XHTML if you don't mind blocking IE users :-)

[09:51:00.0000] <Camaban>
well, that's an option that is rarely open :)

[09:51:01.0000] <BlueG>
hehe... maybe I don't... :-)

[09:51:02.0000] <BlueG>
it's my personal web page... I can do what I want :-p

[09:52:00.0000] <BlueG>
what are the advantages of xhtml when actually served as xhtml anyways?

[09:52:01.0000] <Camaban>
unless you have a particular penchant for XHTML (I tend to code in it still because I got use to it before I knew that there was no point) then HTML4.01 strict is your best bet

[09:52:02.0000] <SadEagle>
BlueG: your browser will tell you if you made a stupid typo in a closing tag.

[09:52:03.0000] <Camaban>
http://www.w3.org/MarkUp/2004/xhtml-faq#advantages

[09:53:00.0000] <SadEagle>
does anyone actually use/support XForms?

[09:54:00.0000] <Philip`>
BlueG: Inline SVG seems to be the most common benefit from using XHTML

[09:55:00.0000] <Philip`>
I can't think of much else that is used in practice, except for some rare MathML

[09:55:01.0000] <anne-mibbit>
yeah, we need to port that to HTML in due course

[09:56:00.0000] <Philip`>
SadEagle: Is that an advantage? :-)

[09:59:00.0000] <SadEagle>
Philip`: the FAQ above lists it as one :-)

[09:59:01.0000] <gsnedders>
SadEagle: Gecko does with an extension to give a UI

[09:59:02.0000] <gsnedders>
(IIRC that's all the extension does, the dealing with the data is in gecko)

[09:59:03.0000] <Philip`>
SadEagle: (I was referring to the typo thing, rather than XForms)

[10:01:00.0000] <SadEagle>
Philip`: it does reduce the chance of unexpected parsing incompatibilities. But then, one should validate against the DTD if one really cares, anyway :-)

[10:02:00.0000] <anne-mibbit>
don't say that in here

[10:02:01.0000] <Philip`>
Don't say DTD?

[10:03:00.0000] <anne-mibbit>
DTD and validate in one sentence :)

[10:03:01.0000] <Philip`>
Aren't the non-validation uses of DTDs even worse? :-)

[10:04:00.0000] <anne-mibbit>
well, DTD then

[10:05:00.0000] <Philip`>
Okay, I won't say DTD then

[10:06:00.0000] <anne-mibbit>
:evil:

[10:06:01.0000] <Philip`>
krijnh: I think you need to erase the last 6 lines from the log because we don't say DTD in here

[10:06:02.0000] <SadEagle>
/me apologizes in multiple languages

[10:07:00.0000] <SadEagle>
May I use "tree grammar", though?

[10:07:01.0000] <gsnedders>
anne-mibbit: mibbit?

[10:07:02.0000] <Philip`>
I think we don't like grammars

[10:08:00.0000] <anne-mibbit>
gsnedders, it's Web IRC interface (mibbit.com)

[10:08:01.0000] <anne-mibbit>
and it's pretty decent too

[10:15:00.0000] <BlueG>
what is the deal with not saying "D" acronym?

[10:20:00.0000] <jwalden>
they don't provide sufficient or useful guarantees for the real world, and if you rely on them for anything you're likely to be let down

[10:21:00.0000] <BlueG>
so, does that mean we shouldn't use a doctype declaration?

[10:22:00.0000] <SadEagle>
you should use it to get the browser into strict mode.

[10:22:01.0000] <Philip`>
You should use a doctype in text/html, because otherwise browsers think you're asking for more bugs

[10:22:02.0000] <BlueG>
so what is it we are _not_ doing?

[10:23:00.0000] <SadEagle>
I believe the idea is that the d-word validation tools are far from sufficient.

[10:23:01.0000] <Philip`>
(HTML5 currently uses "<!doctype html>", because that has the right effect of making browsers not act buggier, and it doesn't mention or use a DTD at all)

[10:24:00.0000] <SadEagle>
it's also easy to remember :-)

[10:25:00.0000] <Philip`>
The old doctype strings aren't just not easy to remember - they are impossible :-)

[10:36:00.0000] <BlueG>
so, how does this work, using html 5? it won't validate as any w3c standard yet, right? 

[10:38:00.0000] <BlueG>
should one use html 5, instead of 4.01, or wait for the standard?

[10:39:00.0000] <MikeSmith>
BlueG - http://hsivonen.iki.fi/doctype/ is worth reading

[10:40:00.0000] <MikeSmith>
as far as using HTML5 now, see the advice in the "What About HTML5?" section

[10:52:00.0000] <Philip`>
BlueG: HTML5 won't become a standard if people don't use it first :-)

[10:53:00.0000] <BlueG>
hmmm... so, we want to promote standards, but in order to promote the _progress_ of standards, we have to break the current standards?

[10:53:01.0000] <BlueG>
/me scratches head

[10:54:00.0000] <Philip`>
It isn't breaking current standards - it's just not following them

[10:54:01.0000] <Philip`>
Most web pages don't follow the ISO C standard either, but that's okay because they're not meant to be valid C

[10:54:02.0000] <BlueG>
ok, yea, i guess thats true... still seems like something of an oxymoron... promoting standards by not following them

[10:54:03.0000] <BlueG>
haha, good point

[10:57:00.0000] <SadEagle>
Philip`: most C programs aren't 'strictly conforming' with ISO C either, BTW.

[10:58:00.0000] <hober>
I more-or-less use HTML5 on my site

[10:58:01.0000] <hober>
Basically, a subset of HTML5: I don't use "new" elements and attributes

[10:58:02.0000] <hober>
(new being not necessarily "newly defined in a standard," more like "new as in not widely deployed on the web")

[10:59:00.0000] <BlueG>
hober: so what does that mean practically? does it work well for most users? what can you claim about that kind of markup (as opposed to valid html 4.01 strict, or some such)?

[11:00:00.0000] <hober>
I haven't received any complaints, if that's what you mean. Also, the site lands in standards mode in the major browsers.

[11:00:01.0000] <hober>
I'm not sure what you mean about claims.

[11:01:00.0000] <BlueG>
well, lots of people put buttons or links on their page claiming the validity of their markup, pressumably to promote others to use better markup

[11:01:01.0000] <hober>
Ahh. No, I don't have any such links on the page.

[11:10:00.0000] <BlueG>
so, if I have content written as xhtml 1.0 and want it to validate as html 4.01 instead, all I should need to do is remove the xml namespace and lang stuff, and change the <br /> type stuff to <br>?

[11:10:01.0000] <BlueG>
and if I am not interested in validating, I could start adding html 5 features?

[11:11:00.0000] <BlueG>
what are the most useful features of html 5 that are already widely implemented?

[11:11:01.0000] <Philip`>
That sounds like it'd probably be sufficient for getting mostly-valid HTML4, and validators can point out any minor issues

[11:12:00.0000] <Philip`>
You can use the "Highly Experimental" http://html5.validator.nu/ if you want to validate HTML5, though your page might become invalid when the spec changes so you need to be a bit careful

[11:13:00.0000] <Philip`>
http://wiki.whatwg.org/wiki/Implementations_in_Web_browsers lists some of the implemented things

[11:15:00.0000] <SadEagle>
Philip`: shall I add things konqueror 4 implements?

[11:16:00.0000] <BlueG>
I would certainly be interested in what konqueror 4 implements

[11:16:01.0000] <Philip`>
SadEagle: Please do :-)

[11:16:02.0000] <Philip`>
/me wonders if it's able to run Canvex yet...

[11:17:00.0000] <SadEagle>
Philip`: somewhat. no SVG. what sort of SVG functionality do you need? 

[11:18:00.0000] <Philip`>
SadEagle: Hmm, not sure - I just click the buttons in Inkscape and hope browsers can understand it

[11:19:00.0000] <SadEagle>
Philip`: I mean how do you use it?

[11:20:00.0000] <Philip`>
SadEagle: Er, I'm not quite sure what you mean now

[11:22:00.0000] <SadEagle>
do you just put them in an <img>, or do somethign fancier?

[11:23:00.0000] <Philip`>
Oh - they're in an <object> and I do some dynamic setAttribute('transform', '...') on elements inside them

[11:23:01.0000] <SadEagle>
oh, SVG dom? not soon then :(

[11:23:02.0000] <Philip`>
(which is a pretty stupid way of implementing an FPS counter, but I wasn't aiming for non-stupidity :-) )

[11:24:00.0000] <SadEagle>
I am not sure I want to see that :-)

[12:03:00.0000] <takkaria>
gsnedders: well, there's an independent small open-source browser called netsurf that's just updated their cookie support, I'm not sure what kind of feedback you'd want off them but I could pass messages along

[12:32:00.0000] <gsnedders>
is there any way to get back to a DOM from a tree walker (in html5lib)?

[12:34:00.0000] <gsnedders>
takkaria: in a world where everyone has to remain compat. with the guy with the largest marketshare, not much — probably just comments on what I generally send out (which will be sent to whatwg⊙wo among other places)

[13:01:00.0000] <Hixie>
hsivonen: mail me about the ebcdic stuff

[13:02:00.0000] <Hixie>
Philip`: i changed the code based on your earlier comments and haven't seen your edgedetect.html -- let me know when i regen the spec if you like the new code

[13:03:00.0000] <Hixie>
"case 12: case 12:" fixed

[13:04:00.0000] <Hixie>
regarding the @font-face test, safari passes it, but fails the positioning test

[13:04:01.0000] <Hixie>
opera fails the font-face part but passes the positioning part (not that you'd know it given the mess that's going on around it)

[13:04:02.0000] <Hixie>
and firefox fails both

[13:05:00.0000] <SadEagle>
Hixie: is it intentional that the treewalker testcases don't seem to test the really nasty stuff?

[13:05:01.0000] <Hixie>
what's the nasty stuff?

[13:05:02.0000] <SadEagle>
filtering of non-leafs

[13:05:03.0000] <Hixie>
if you can come up with something that matches the conditions listed on http://ln.hixie.ch/ i'd be happy to add it

[13:06:00.0000] <Hixie>
however i don't recall finding any bugs with the non-leafs filtering

[13:06:01.0000] <SadEagle>
(reading). I have to make a bunch of TC's anyway

[13:06:02.0000] <jwalden>
Hixie: test 5/instructions.inc got out of sync again

[13:06:03.0000] <SadEagle>
Hixie: safari should be completely broken with that if my code reading is right

[13:07:00.0000] <Hixie>
jwalden: heh, i went back to what i had before and again forgot to update the test :-)

[13:07:01.0000] <Hixie>
SadEagle: http://www.hixie.ch/tests/evil/acid/003/competition/ can help you write a test to check

[13:07:02.0000] <SadEagle>
Hixie: thanks

[13:08:00.0000] <jwalden>
acid3 points for everyone!

[13:08:01.0000] <jwalden>
if you implement treewalker correctly, that is

[13:08:02.0000] <SadEagle>
/me goes back to debugging treewalker :-)

[13:08:03.0000] <Hixie>
k, gotta go catch a bus

[13:08:04.0000] <Hixie>
bbiab

[13:53:00.0000] <Philip`>
Hixie: The "var i = 0;" should be removed

[13:55:00.0000] <Philip`>
Otherwise I think it looks reasonable

[14:09:00.0000] <jruderman>
how is the acid3 competition going?

[14:31:00.0000] <jgraham__>
gsnedders: Re: html5lib, from memory it's not trivial 

[14:32:00.0000] <jgraham__>
Although I make no promises about the quality of my memory on this point

[14:33:00.0000] <gsnedders>
sux.

[14:33:01.0000] <gsnedders>
jgraham__: can I buy a memory upgrade for you?

[14:33:02.0000] <jgraham__>
But it shouldn't be hard to implement because the tokens a treewalker produces look like the ones the tokenizer produces, so you just use the treewalker as a tokenizer

[14:34:00.0000] <jgraham__>
I'd like a memory upgrade. And more registers

[14:35:00.0000] <gsnedders>
jgraham__: what arch are you based on?

[14:35:01.0000] <gsnedders>
s/arch/arch./

[14:35:02.0000] <jgraham__>
Homo Sapiens/Male

[14:37:00.0000] <gsnedders>
jgraham__: Homo and Sapiens/Male?

[14:42:00.0000] <jgraham__>
All one term. Do parentheses help?: (Homo sapiens)/Male It's a fundamentally mammalian arch. although it still suffers of many of the design flaws of earlier models in its lineage. Many people are of the opinion that a ground-up redesign is the only way forward, but current users can't be persuaded to make the upgrade

[15:28:00.0000] <Philip`>
I wish I could use apostrophes in the comments in my canvas tests, without having to write them in pairs to avoid totally breaking Vim's YAML syntax highlighting

[15:49:00.0000] <Philip`>
/me spends a while adding descriptions to his test cases, then realises he's still only up to line 498 in the 7211-line source file and gives up

[15:54:00.0000] <Philip`>
hsivonen: Why does http://html5.validator.nu/?doc=http%3A%2F%2Fmxr.mozilla.org%2Fmozilla%2Fsource%2Fcontent%2Fcanvas%2Ftest%2Ftest_2d.composite.image.copy.html%3Fforce%3D1&showsource=yes complain?

[15:54:01.0000] <Philip`>
with <body><canvas><p>

[15:54:02.0000] <Philip`>
when <body><p> is (I think) allowed, and <canvas> is transparent

[15:55:00.0000] <annevk>
ah good, <canvas> allows block-level content now?


2008-01-19
[16:19:00.0000] <Philip`>
Hixie: "The strokeRect() method must draw stroke the specified rectangle's path" - s/draw stroke/something/

[16:32:00.0000] <Hixie>
"The strokeRect() method must something the specified rectangle's path" ? :-)

[16:32:01.0000] <Philip`>
Argh, my automatic spec-annotating script can't handle "Bézier"

[16:33:00.0000] <Philip`>
Hixie: Sounds good to me!

[16:37:00.0000] <Philip`>
Hmm, can I complain that Opera's ImageData.data isn't a JS array?

[16:37:01.0000] <Philip`>
at least to the extent that ImageData.data.join(',') doesn't work

[16:38:00.0000] <Philip`>
(where "complain" means "add a test case for", preferably with some kind of justification from specifications, except I can't see anything saying what IDL "int[]" means...)

[16:42:00.0000] <Hixie>
Philip`: i'm waiting for dom bindings for js spec before really going there

[16:43:00.0000] <Philip`>
"The current path, shadow attributes, global alpha, clipping path, and global composition operator must not affect the getImageData() and putImageData() methods." - should that mention the CTM too?

[16:44:00.0000] <Philip`>
Hixie: Okay

[16:44:01.0000] <Philip`>
/me will add a test anyway, because it causes interoperability problems in practice

[16:44:02.0000] <Hixie>
i thought i'd mentioned CTM with imagedata already

[16:44:03.0000] <Philip`>
I can't see it mentioned anywhere

[16:45:00.0000] <Hixie>
seems not indeed

[16:54:00.0000] <Philip`>
Hixie: "The ImageData object's width is greater than zero." (and subsequent lines) is wrong, since it's talking about an object that's explicitly not an ImageData

[17:06:00.0000] <Philip`>
Hixie: What happens with NaN in ImageData.data? (It's not below 0, or above 255, and it can't be rounded to the nearest integer)

[17:12:00.0000] <Hixie>
Philip`: i'm about to go offline for a few days, can you mail the last two lines you wrote to the list/me?

[17:12:01.0000] <Philip`>
Hixie: Okay, will do

[17:12:02.0000] <Hixie>
(well, not completely offline, but likely not working on the spec)

[17:12:03.0000] <Hixie>
thanks dude

[17:13:00.0000] <Hixie>
your help is, as ever, highly appreciated

[17:17:00.0000] <Philip`>
Hmm, is NaN a Number?

[17:18:00.0000] <AwayEagle>
in ES sense, yes

[17:18:01.0000] <Philip`>
Ah, thanks

[17:18:02.0000] <othermaciej>
it's not an instance of the Number builtin class, but it is an intance of the Number value type

[17:18:03.0000] <Philip`>
(That is mildly confusing...)

[17:18:04.0000] <othermaciej>
(to be exactingly clear)

[17:18:05.0000] <Philip`>
Oh

[17:18:06.0000] <othermaciej>
what, that Not a Number is a Number?

[17:19:00.0000] <Philip`>
Yes

[17:19:01.0000] <Philip`>
I'm mostly just wondering if "a data attribute whose value is an enumerable list of values that are either JS Numbers or the JS value undefined." is allowed to contain NaN

[17:19:02.0000] <Philip`>
so it sounds like it probably is

[17:19:03.0000] <AwayEagle>
I don't remember, is the Number constructor object a Number? :-)

[17:19:04.0000] <othermaciej>
in ECMA-262 terms, it's a 4.3.20 Number Type

[17:20:00.0000] <othermaciej>
not a 4.3.21 Number Object

[17:20:01.0000] <Philip`>
(or at least it's close enough to be worth being explicit about how it's handled)

[17:20:02.0000] <othermaciej>
sorry, I meant it's a 4.3.19 Number Value (NaN that is)

[17:20:03.0000] <othermaciej>
NaN is a JS Number, yeah, in that sense

[17:20:04.0000] <AwayEagle>
you could use 4.3.20 and 4.3.23 too ;-)

[17:20:05.0000] <Philip`>
Is e.g. 7 the same 4.3.19 Number Value too?

[17:20:06.0000] <othermaciej>
to be anal it could distinguish Number Type and Number Object

[17:21:00.0000] <othermaciej>
Philip`: yes

[17:21:01.0000] <Philip`>
Okay

[17:21:02.0000] <othermaciej>
the Number Object type only comes into play when you call methods on a number or explicitly invoke the Number constructor to make a wrapper object

[17:21:03.0000] <othermaciej>
primitive types in ECMAScript (Number, String, Boolean) have corresponding wrapper object types

[17:21:04.0000] <Philip`>
That makes sense

[17:22:00.0000] <othermaciej>
which are sometimes created automatically

[17:22:01.0000] <AwayEagle>
othermaciej: oh, I need to show you the nasty String.prototype.toString testcase I showed ggaren

[17:22:02.0000] <Philip`>
Similar to Java, I guess?

[17:22:03.0000] <othermaciej>
Philip`: yes, but worse

[17:26:00.0000] <AwayEagle>
othermaciej: http://rafb.net/p/jLOXKL92.html (speaking of worse)

[17:28:00.0000] <Philip`>
Hmm, Opera 9.5 has gone from 93% down to 81% on the ImageData tests

[18:04:00.0000] <heycam>
Hixie, for an acid3 submission, what's the best way to get a new document?  create an iframe and insert it into the document?

[18:05:00.0000] <heycam>
or should i use the getTestDocument() function?

[18:40:00.0000] <Hixie>
heycam: just use createDocument on the DOMImplementation object

[18:40:01.0000] <Hixie>
heycam: getTestDocument() is used too much already

[18:40:02.0000] <Hixie>
heycam: and creating an iframe is asynchronous and so wouldn't work in the function

[18:57:00.0000] <takkaria>
gsnedders: I don't know how much data you have on the cookie5 issue, but

[18:58:00.0000] <takkaria>
gsnedders: http://users.ecs.soton.ac.uk/jmb/test/cookies.php yields the results shown in http://users.ecs.soton.ac.uk/jmb/test/results/cookies.txt for a bunch of major browsers

[00:33:00.0000] <MacDome>
Hixie: I need you to explain your @font-face test at some point

[00:33:01.0000] <MacDome>
I dont' see why your X is in the right place

[00:34:00.0000] <Hixie>
the containing block is the rectangle the size of the viewport, anchored at the origin

[00:34:01.0000] <MacDome>
Hixie: I guess the 20px is supposed to be measured from the top of the viewport instead of the top of the body?

[00:34:02.0000] <Hixie>
yes

[00:34:03.0000] <Hixie>
the body isn't position:relative or anything

[00:34:04.0000] <MacDome>
interesting

[00:34:05.0000] <MacDome>
I wonder if we get that wrong for all absolute positioning

[00:35:00.0000] <MacDome>
I don't think generated content would be treated differently here

[00:37:00.0000] <MacDome>
Hixie: well, I'll have to ask hyatt

[00:37:01.0000] <Hixie>
 heh

[00:38:00.0000] <MacDome>
oh, actually

[00:38:01.0000] <MacDome>
hum... we seem to do this right most of the time

[00:38:02.0000] <MacDome>
why fail in this case?

[00:40:00.0000] <MacDome>
Hixie: and he margins on <html> don't affect this?

[00:40:01.0000] <MacDome>
or on :root ?

[00:41:00.0000] <Hixie>
why would they?

[00:41:01.0000] <MacDome>
/me doens't know

[00:41:02.0000] <MacDome>
/me hasn't read css 2.1 yet :)

[00:42:00.0000] <MacDome>
/me kinda thinks of <html> as the viewport, but maybe its' not

[00:42:01.0000] <MacDome>
Hixie: yeah, margins on <html> seem to affect absolute positioning in Safari and FF

[00:42:02.0000] <MacDome>
your test would suggest that they're not supposed to

[00:43:00.0000] <Hixie>
see css2.1 section 10.1

[00:44:00.0000] <Hixie>
first bullet point

[00:47:00.0000] <MacDome>
it's actually bullet 4 which is most intersting

[03:30:00.0000] <hsivonen>
Can someone remind me why Unicode reserves U+FFFE as a non-character?

[03:33:00.0000] <annevk>
maybe for bitshifting?

[03:36:00.0000] <hsivonen>
annevk: oh right. it's the byteswapped FEFF

[03:36:01.0000] <hsivonen>
silly me

[03:37:00.0000] <hsivonen>
thanks

[04:14:00.0000] <zcorpan>
annevk: i think the 512 bytes thing for the <meta charset> is since long gone

[04:38:00.0000] <annevk>
fixed

[04:44:00.0000] <hsivonen>
it is interesting how the mindset in some circles has shifted from everything-in-XML to everything-in-JSON

[04:50:00.0000] <othermaciej>
I insist on everything in octet sequences

[04:50:01.0000] <othermaciej>
it's what the link layer demands!

[04:51:00.0000] <zcorpan>
"These elements have new meanings in HTML 5 which are incompatible with HTML 4. The new meanings better reflect the way they are used on the Web or gives them a purpose so people can start using them."

[04:51:01.0000] <zcorpan>
i find this paragraph confusing and i think it gets the wrong point across

[04:51:02.0000] <zcorpan>
the point it gets across is that html5 is incompatible with html4

[04:52:00.0000] <zcorpan>
i'd suggest to change it to something along the lines of "These elements have slightly modified meanings in HTML5 to better reflect how they are used on the Web or make them more useful."

[04:54:00.0000] <zcorpan>
also, the last bullet point doesn't seem to fit in that section. it discusses the optionalness of an attribute -- not changed meanings

[04:56:00.0000] <zcorpan>
i'd suggest to either strike it or phrase it in such a way that it discusses the meaning of <img> when it has no alt=''

[05:01:00.0000] <zcorpan>
since <img> with no alt='' represents an image and <img> with alt='' also represents an image, it seems that the meaning hasn't really changed since html4

[05:33:00.0000] <jwalden>
zcorpan: note Hixie's out for a few days and not watching, probably want to send email

[05:34:00.0000] <zcorpan>
jwalden: this is about the differences document, which annevk is editing

[05:34:01.0000] <jwalden>
ah

[05:34:02.0000] <jwalden>
carry on!

[05:34:03.0000] <zcorpan>
:)

[07:32:00.0000] <SadEagle>
Hixie: hi... are you perhaps here and have a second free?

[08:04:00.0000] <jwalden>
SadEagle: he's gone for a couple days, send email

[08:06:00.0000] <SadEagle>
jwalden: thanks. does he have a preferred labeling scheme or something?

[08:06:01.0000] <jwalden>
"labeling scheme"?

[08:07:00.0000] <SadEagle>
as in titles, etc, to help him sort things out.

[08:09:00.0000] <jwalden>
dunno

[08:12:00.0000] <Philip`>
SadEagle: For emails? Things get sorted into folders like http://www.whatwg.org/issues/ manually, so the subject line doesn't seem critical

[08:13:00.0000] <SadEagle>
Philip`: thanks. is there an acid3 issues page, perhaps?

[08:19:00.0000] <Philip`>
SadEagle: There isn't - I'd guess most Acid3 discussion is by IRC or private email

[08:21:00.0000] <jwalden>
so far I've found he's been responsive enough here to suffice

[09:21:00.0000] <annevk>
zcorpan, fixed

[10:24:00.0000] <jgraham>
Does anyone have a good example of a table where colgroups are needed, assuming that table headers naturally apply to all columns they span?

[10:27:00.0000] <jgraham>
(specifically I'm looking at the headers thing again, I understand that, in principle, colgroup can be used for other things)

[10:31:00.0000] <jgraham>
Presumably such a table would have a header that didn't span an entire colgroup but did apply to all the cells in the colgroup.

[12:04:00.0000] <Philip`>
/me installs KDE 4.0.0

[12:04:01.0000] <takkaria>
.0.0 releases make me nervous

[12:04:02.0000] <Philip`>
Now I can sort of run the canvas tests in Konqueror, except half of them say "Service Temporarily Unavailable"

[12:04:03.0000] <Philip`>
takkaria: That's why I'm not replacing KDE3.5 with it, and am running it under a separate user account :-)

[12:05:00.0000] <takkaria>
ah, good move. :)

[12:09:00.0000] <SadEagle>
Philip`: cool. But if you're building from source, you're better off using 4.0 branch. I fixed a bunch of whoppers on there

[12:09:01.0000] <SadEagle>
Philip`: and fredrikh made some canvas progress since then. I can give you my test results, but they're kind of cheating 

[12:12:00.0000] <Philip`>
SadEagle: I'm just using Gentoo's packages for now - would it be straightforward to just compile Konqueror from source, without having to manually build the rest of KDE4?

[12:12:01.0000] <SadEagle>
depends on your definition of straightforward and the rest. You'd only need kdelibs. But I don't know if gentoo does any tricks for concurrent installs and whatnot

[12:14:00.0000] <SadEagle>
Philip`: do you have some sort of an AVM router?

[12:16:00.0000] <Philip`>
SadEagle: "straightforward" means copying-and-pasting a few commands to get it compiled and installed somewhere safe (like in /home since I don't want to mess up anything on my system) and running, ideally

[12:16:01.0000] <Philip`>
AVM router?

[12:18:00.0000] <SadEagle>
german(?) router vendor of some sort.. a lot of people reporting the timeout problem seem to have one of those.

[12:19:00.0000] <Philip`>
Ah

[12:19:01.0000] <Philip`>
I don't, and it was a server-side error message anyway

[12:19:02.0000] <SadEagle>
As for straightforward.. hmm, it's not too few commands, but there are howtos that are very safe, let me dig it up. Actually, if you're building with tests on, you only need kdelibs, though testkhtml isn't much of a browser :-)

[12:20:00.0000] <Philip`>
On a page with loads of iframes, is there some limit on how many concurrent connections Kwhatever will create?

[12:20:01.0000] <Philip`>
(I saw dozens of kio-something processes, which seemed odd)

[12:20:02.0000] <SadEagle>
not sure. I need to double check. there may be too many :(

[12:21:00.0000] <SadEagle>
note that there is a bug with onload events with many iframes using the same image -- that's the 'cheating' part I was referring to

[12:21:01.0000] <Philip`>
Ah

[12:22:00.0000] <Philip`>
Incidentally, please don't trust my tests to be correct if they're not saying something that's justified by the spec, since I haven't carefully reviewed them at all :-)

[12:23:00.0000] <SadEagle>
it should limit it to 32 requests, in theory, anyway

[12:23:01.0000] <Philip`>
Hmm, 32 seems a bit much when most browsers limit it to about 2...

[12:24:00.0000] <SadEagle>
that's global for the entire process, though.

[12:24:01.0000] <SadEagle>
may be it needs some sort of fancier policy

[12:25:00.0000] <Philip`>
/me should run the tests on his local machine instead of potentially killing html5.org

[12:25:01.0000] <SadEagle>
/me tests whether the limit really works.

[12:26:00.0000] <SadEagle>
oh. 

[12:26:01.0000] <SadEagle>
there might be a problem with iframes without a content-type specified :(

[12:27:00.0000] <SadEagle>
wrt to # of requests.

[12:27:01.0000] <Philip`>
How do you specify a content-type on an iframe?

[12:32:00.0000] <SadEagle>
good point. only doable on object, right? :(

[12:33:00.0000] <Philip`>
Apparently so

[12:33:01.0000] <Philip`>
I used <iframe> rather than <object> because FF3-trunk didn't seem to do onload on <object> at the time when I was testing it

[12:33:02.0000] <SadEagle>
this may be hard to fix, will have to talk to some kparts gurus, better run it locally then. 

[12:37:00.0000] <Philip`>
It's surprising how many bugs can be found in a test harness, without even considering the tests themselves :-)

[12:38:00.0000] <Philip`>
s/in/by/

[12:41:00.0000] <SadEagle>
the easiest way to build from source safely is to use this script, and not as .bashrc -- but an explicit one http://techbase.kde.org/index.php?title=Getting_Started/Increased_Productivity_in_KDE4_with_Scripts/.bashrc

[12:41:01.0000] <SadEagle>
then one can just source it in a terminal window for KDE4 stuff, and run things from there..

[12:43:00.0000] <SadEagle>
most likely working steps would be: 1) cd 2) mkdir kde 3) cd kde 4) download that script as ~/kde4/setup-env 5) mkdir src 6) mkdir build 

[12:45:00.0000] <SadEagle>
7) cd src 8) svn checkout svn://anonsvn.kde.org/home/kde/branches/KDE/4.0/kdelibs 9) edit that setup-env script to remove the alias  make=makeobj line 10) cd ../build && mkdir kdelibs && cd kdelibs 11) source ~/kde/setup-env 12) cmakekde

[12:45:01.0000] <SadEagle>
chances of me not making a mistake there: 0.

[12:46:00.0000] <SadEagle>
actially, step 10 is not needed :-) 

[12:47:00.0000] <Philip`>
Thanks!

[12:47:01.0000] <Philip`>
/me tries that

[12:47:02.0000] <SadEagle>
thanks for doing this

[12:53:00.0000] <Philip`>
"CMake Error: The source directory "/home/kde4/kde/src" does not appear to contain CMakeLists.txt."

[12:53:01.0000] <Philip`>
when doing step 12, having skipped step 10

[12:54:00.0000] <SadEagle>
cd ~/kde4/src/kdelibs, sorry.

[12:55:00.0000] <Philip`>
That seems happier - thanks again :-)

[12:56:00.0000] <SadEagle>
and thanks again for testing. Except now I'll have to fix the multi-frame image loading/onload bug ;-)

[13:23:00.0000] <Philip`>
Hmm, now I'm running something that might be the newly compiled version though I'm not certain

[13:23:01.0000] <SadEagle>
well, it didn't build konqueror, so probably not :-)

[13:23:02.0000] <SadEagle>
unless you also build kdebase when you weren't looking

[13:24:00.0000] <SadEagle>
what it did build is testkhtml.. go to ~/kde/build/kdelibs/bin, ./testkhtml <url goes here>

[13:24:01.0000] <Philip`>
I told it to run the old (4.0.0) Konqueror with the new ~/kde/lib directory

[13:25:00.0000] <Philip`>
and it prints lots of debug-like messages to the console, which it doesn't do when I run without ~/kde/lib

[13:25:01.0000] <Philip`>
so it sounds like it's doing something different

[13:26:00.0000] <SadEagle>
hmm, I am honestly not sure what will happen. easy way to check, though: cat /proc/<pid>/maps | grep khtml, and see where it comes from

[13:26:01.0000] <Philip`>
(Incidentally, Canvex seems to reveal a bug - the upscaling image filter wraps around the edges)

[13:26:02.0000] <SadEagle>
hmm, odd.

[13:27:00.0000] <Philip`>
b456b000-b4a3a000 r-xp 00000000 08:04 8930658    /home/kde4/kde/lib/libkhtml.so.5.0.0

[13:27:01.0000] <SadEagle>
sounds like it worked.

[13:27:02.0000] <Philip`>
(Also, Canvex reveals an apparent lack of XHTML support :-p )

[13:27:03.0000] <Philip`>
Also, View Source crashes

[13:28:00.0000] <SadEagle>
Philip`: for reasons I am too embarassed to admit. it's using the html parser. Actually, I completely forgot why we didn't switch it over.

[13:28:01.0000] <Philip`>
(but maybe it's not helped by me having a mixture of different KDE versions)

[13:30:00.0000] <Philip`>
I think parsing XML with an HTML parser is sadly non-conforming :-(

[13:31:00.0000] <SadEagle>
:(

[13:33:00.0000] <SadEagle>
one of those days I'll understand XHTML and flip the switch.

[13:35:00.0000] <Philip`>
Failed assertion ctx.fillStyle matches /^#(?!(FF0000|ff0000|f00)$)/ (got #ff0000[string])

[13:35:01.0000] <Philip`>
How come that doesn't match?

[13:36:00.0000] <Philip`>
Oops

[13:36:01.0000] <Philip`>
/me missed the !

[13:38:00.0000] <Philip`>
Also, it'd be nice to have getImageData so the test results are more automatic :-)

[13:38:01.0000] <SadEagle>
yeah, if I can get Hixie to make it spec'd in a way I can do it w/o killing the GC

[13:51:00.0000] <Philip`>
Once this is all complete, you'll have to start on 3D canvas ;-)

[13:51:01.0000] <SadEagle>
that's for fredrikh, not me :-)

[14:42:00.0000] <Philip`>
/me discovers that his bank now allows Opera, instead of redirecting to a page which supposedly lists supported browsers but actually they obviously didn't test that page since it didn't work

[14:53:00.0000] <jruderman>
hah

[15:52:00.0000] <Philip`>
(Ooh, Safari on Wine - that's quite useful)

[15:54:00.0000] <kig>
http://dark.fhtr.org/safari_on_wine.jpg and then it crashes D:

[15:56:00.0000] <Philip`>
It crashed for me before I installed all the corefonts, but now it seems happy enough


2008-01-20
[16:03:00.0000] <Philip`>
(It is quite hideous and also slow, though)

[16:12:00.0000] <Philip`>
Argh, I wrote a test with arcTo and Firefox actually passed it :-(

[16:15:00.0000] <jwalden>
/me snickers

[17:26:00.0000] <Philip`>
Hmm, even KHTML does the peculiar http://tinyurl.com/2bfvog thing

[17:35:00.0000] <SadEagle>
Philip`: I cna probably get the guy wrote the relevant code here.

[17:36:00.0000] <Philip`>
SadEagle: Firefox and Safari do the same, so the problem is working out how the spec should say to do that

[17:37:00.0000] <SadEagle>
note: I have no idea of what in particular you're referring to here

[17:39:00.0000] <Philip`>
Ah - the issue is that a straight line with a wide stroke, with some suitable transformations before doing the stroke, draws the stroke as a skewed rectangle

[18:09:00.0000] <Philip`>
/me gets really tired of hitting the 'y' and 'n' keys in Safari

[18:37:00.0000] <Philip`>
http://philip.html5.org/tests/canvas/suite/tests/results.html

[18:37:01.0000] <Philip`>
now with fewer incorrect tests, though still some

[18:40:00.0000] <SadEagle>
/me winces as he sees the effects of that load event bug

[18:41:00.0000] <Philip`>
Where are the effects?

[18:43:00.0000] <SadEagle>
hmm, never mind. somehow it didn't show up :-)

[18:44:00.0000] <SadEagle>
thanks for generating this.

[18:44:01.0000] <Philip`>
I had to run the tests in groups of 100, else it seemed to fail to load some of them

[18:45:00.0000] <Philip`>
I'm not sure if Safari's shadow rendering is worse than when I first tested it, or if I'm just being harsher and complaining that it's off by a single pixel line

[18:45:01.0000] <harri>
Philip`: thanks from me for the inclusion, too.

[18:45:02.0000] <Philip`>
s/complaining that/failing it because/

[18:46:00.0000] <Philip`>
harri: Konqueror crashed horribly when I last tried doing canvas things with it (probably months ago), so I'm happy that it's able to be successfully tested now :-)

[18:47:00.0000] <SadEagle>
Philip`: I completely rewrote the state code, and fredrikh completely rewrote the graphics code since then. Before, it was a half-assed port of the Apple tree circa 2004.

[18:48:00.0000] <harri>
seeing independant tests being run certainly helps to become productive

[18:48:01.0000] <SadEagle>
Philip`: oh, BTW, do you have any tests that scale the canvas element with CSS? :-)

[18:48:02.0000] <SadEagle>
Philip`: I must thank you for the tests, BTW, they were a huge help in getting stuff working

[18:48:03.0000] <Philip`>
SadEagle: http://philip.html5.org/tests/canvas/suite/tests/size.attributes.style.html is the only one, and that doesn't test that the rendered output is correct

[18:49:00.0000] <Philip`>
/me isn't sure what else could be usefully tested for scaled canvases

[18:51:00.0000] <Philip`>
(I suppose http://canvex.lazyilluminati.com/83/play.xhtml set to "Tiny" could count as a way of testing scaled canvases...)

[18:51:01.0000] <SadEagle>
Philip`: fredrikh noticed gtkwebkit wasn't scaling right when we were discussing some performance stuff

[19:00:00.0000] <SadEagle>
Philip`: may be canvas width = 50, height = 50, draw green rect with 0, 0, 50, 50 and scale with CSS to 100, 100?

[19:01:00.0000] <Philip`>
SadEagle: I've just tried that, and see the problem

[19:05:00.0000] <Philip`>
SadEagle: Added http://philip.html5.org/tests/canvas/suite/tests/2d.scaled.html (but not updated results.html because I'm lazy)

[19:06:00.0000] <SadEagle>
hrmhmh. when the heck did I break it? :-)

[19:07:00.0000] <Philip`>
Oh, I'd only tested in gtkwebkit and didn't realise it was broken elsewhere too

[19:08:00.0000] <SadEagle>
well, it's -supposed- to work in konq, but apparently doesn't. funny, since things are sort of designed to be able to handle this sort of setup

[19:08:01.0000] <Philip`>
At least in WebKit it does draw something

[19:09:00.0000] <Philip`>
/me needs to fix all the places where he's not correctly referencing the spec

[19:12:00.0000] <Philip`>
...after fixing the places where I'm probably contradicting the spec

[19:12:01.0000] <Philip`>
(like I haven't looked at pattern transforms, and they're probably affected by recent changes)

[19:17:00.0000] <SadEagle>
hmm, much of the nodefilter/nodeiterator stuff in acid3 looks bogus to me

[19:22:00.0000] <takkaria>
SadEagle: so you're on the khtml team?

[19:26:00.0000] <SadEagle>
takkaria: yes.

[19:28:00.0000] <takkaria>
SadEagle: I'd read somewhere that some people just want to port back webkit as a kpart and dump khtml... I assume this isn't something you're planning on?  I don't follow the community closely but would quite like links to somewhere where the situation regarding the forks is explained

[19:30:00.0000] <SadEagle>
takkaria: we might do a merge of webcore sources into khtml kpart. we might not. Some 3rd parties may ship a webkit kpart regardless of our opinion, however.

[19:30:01.0000] <SadEagle>
takkaria: let's just say that things got kinda ugly, and leave it at that.

[19:32:00.0000] <takkaria>
right, sounds like the kind of thing that's not easily summarised.  thanks for your time. :)

[19:33:00.0000] <SadEagle>
thanks for asking.

[19:34:00.0000] <SadEagle>
it's kind of funny, though. One of the best reasons for using WebCore is that we have limited manpower. But it's also one of the reasons that makes using it very hard, since doing proper integration would be quite time/resource consuming, and we still have to maintain stuff, and fix bugs in the overall infrastructure.

[19:37:00.0000] <Philip`>
You could become an OS X user and then it wouldn't be a problem at all

[19:37:01.0000] <takkaria>
heh

[19:38:00.0000] <takkaria>
I know the kind of situation you're in, I have it in one of my projects, on significantly smaller scale

[19:43:00.0000] <fredrikh>
Philip`: indeed, thanks very much for those tests, and for including us in the results :)

[20:16:00.0000] <SadEagle>
Philip`: fun, your 2d.scaled works part of the time...something is not being marked dirty as it should be..

[22:18:00.0000] <SadEagle>
Philip`: uff. fixed. thanks for that testcase, found some really stupid stuff due to it

[03:04:00.0000] <heycam`>
Hixie, shepazu was talking to you earlier about svg acid test submissions?  it seems various svg dom method calls don't return anything useful when used on a document created by DOMImplementation.createDocument().

[03:05:00.0000] <heycam`>
and while those calls should work, i think for the purpose of demonstrating the particular dom interfaces being tested, it'd be good to go the iframe route

[03:05:01.0000] <Hixie>
yeah, that's a bug

[03:05:02.0000] <heycam`>
i.e., could you include an <iframe> with an empty svg document?

[03:05:03.0000] <Hixie>
i think you misunderstand how acid tests work :-)

[03:05:04.0000] <Hixie>
the more broken things you rely on for the test, the better :-)

[03:05:05.0000] <heycam`>
heh

[03:06:00.0000] <heycam`>
so you'd rather a submission like that then?

[03:06:01.0000] <Hixie>
sure

[03:06:02.0000] <heycam`>
ok then

[03:06:03.0000] <Hixie>
i can always tweak it later if necessary

[03:06:04.0000] <heycam`>
righto

[03:07:00.0000] <heycam`>
(btw doug's gonna coordinate a few tests from us svg guys and send them in to you)

[03:07:01.0000] <Hixie>
it's so sad, i've received very few acid3 test submissions, and most of those that i have received have fundamentally missed at least one of the rules

[03:07:02.0000] <heycam`>
hmm

[03:07:03.0000] <Hixie>
(different rules each time)

[03:08:00.0000] <heycam`>
do you have enough for the 10 at least? :)

[03:08:01.0000] <Hixie>
not even close

[03:08:02.0000] <Hixie>
(and it's 16 :-( )

[03:08:03.0000] <heycam`>
ah

[03:08:04.0000] <Hixie>
someone submitted 11 tests... for XMLHttpRequest

[03:08:05.0000] <Hixie>
which isn't even in LC yet

[03:08:06.0000] <heycam`>
:(

[03:08:07.0000] <Hixie>
let alone CR in 2004

[03:09:00.0000] <heycam`>
i didn't have much time during the week, so i've really only been working on it the last few days

[03:09:01.0000] <heycam`>
so just one test from me

[03:09:02.0000] <Hixie>
every little bit helps :-)

[03:09:03.0000] <heycam`>
/me enjoys tests involving non plane 0 characters

[03:11:00.0000] <Hixie>
i got two tests from someone called Sylvain which look solid

[03:21:00.0000] <jwalden>
Hixie: think that's syp_, Sylvain Pasche

[03:22:00.0000] <Hixie>
yup

[03:22:01.0000] <harri>
Hixie: one question: do you expect the numbering of tests to remain stable?

[03:23:00.0000] <jwalden>
/me thought the numbering stable enough to remove the note from <http://spreadsheets.google.com/pub?key=pNgBCwWdyRTT2JeiZn4B2Yw>

[03:23:01.0000] <harri>
I'm asking because I wonder whether it makes sense to refer to tests by number right now (when talking to other developers, noting down info)

[03:23:02.0000] <Hixie>
harri: not until the test is finished, no

[03:24:00.0000] <Hixie>
http://chanweiyee.blogspot.com/2008/01/removal-of-ogg-vorbis-and-theora-from.html is hilarious

[03:24:01.0000] <harri>
Hixie: ok. I'll refrain from adding comments to C++ then

[03:24:02.0000] <Hixie>
"Nokia and Apple have privately pushed to remove Ogg in HTML5."

[03:24:03.0000] <Hixie>
PRIVATELY?

[03:24:04.0000] <Hixie>
nokia published a position paper!

[03:24:05.0000] <Hixie>
how much more public can you get!

[03:24:06.0000] <Dashiva>
They didn't mail it to me!

[03:24:07.0000] <Hixie>
and then the change was twittered, e-mailed to TWO public lists, posted on slashdot, digg, and reddit!

[03:25:00.0000] <Hixie>
what more can i possibly do to make this public!

[03:27:00.0000] <Dashiva>
Door to door announcements

[03:27:01.0000] <heycam`>
Hixie, where's that test submission test page again?

[03:27:02.0000] <heycam`>
nm found it

[03:31:00.0000] <othermaciej>
Hixie: I had a good WebKit-only CSS1 bug but hyatt went and fixed it

[03:31:01.0000] <othermaciej>
(granted, I goaded him into doing so)

[03:32:00.0000] <heycam`>
btw are we not meant to use those assertEquals() and assert() and fail() functions?  they're not available from the test development console page.

[03:33:00.0000] <Hixie>
heycam`: that level of detail doesn't matter, i'll rewrite the tests to use those probably anyway

[03:33:01.0000] <Hixie>
nn

[04:18:00.0000] <webben>
Re: http://lists.w3.org/Archives/Public/public-html/2008Jan/0143.html (required="false") attribute in ASP.net): it's also worth noting that the ARIA draft likewise uses required="false" (http://www.w3.org/TR/aria-state/#required)

[05:11:00.0000] <Richardigel>
hello! i love html5! used it already and tweaked my personal copy of squeak seaside to produce a flavor of html5 which currently works already with browsers.

[05:12:00.0000] <Richardigel>
i just would have wished the FORM section of html5 to have useful content.

[05:16:00.0000] <Philip`>
Richardigel: http://www.whatwg.org/specs/web-forms/current-work/ is currently where the form things are

[05:21:00.0000] <zcorpan>
webben: that's aria-required="false"

[05:22:00.0000] <zcorpan>
the current aria drafts are wrong

[05:22:01.0000] <webben>
zcorpan: ah okay

[06:57:00.0000] <Richardigel>
did you know that logging and publishing the chat is legally dangerous? at least in German law, that is forbidden without permission of that ones that are being logged.

[09:10:00.0000] <Philip`>
I really wish I could say <select selected="b"><option value="a">A <option value="b">B ...</select>

[09:12:00.0000] <Philip`>
/me gives up wishing and writes ugly stuff like <option value="a"[% IF thing.value == "a" %] selected[% END %]> instead

[09:49:00.0000] <hsivonen>
Philip`: http://html5.validator.nu/?doc=http%3A%2F%2Fmxr.mozilla.org%2Fmozilla%2Fsource%2Fcontent%2Fcanvas%2Ftest%2Ftest_2d.composite.image.copy.html%3Fforce%3D1&showsource=yes fixed. thanks

[09:49:01.0000] <hsivonen>
(copypaste error)

[09:51:00.0000] <Richardigel>
wouldn't it be about time to take http://whattf.org/ off the net?

[09:52:00.0000] <Philip`>
hsivonen: Thanks!

[09:52:01.0000] <hsivonen>
Richardigel: why?

[09:53:00.0000] <hsivonen>
the front page could use an update, though

[09:53:01.0000] <Richardigel>
hsivonen: the joke's getting old.

[09:54:00.0000] <Dashiva>
It's new to people who haven't seen it before :)

[09:55:00.0000] <Richardigel>
right.

[10:11:00.0000] <hsivonen>
hmm. http://validator.w3.org/mobile/alpha?docAddr=http%3A%2F%2Fvalidator.nu%2F

[10:28:00.0000] <Dashiva>
First they say there's no doctype, and then they start reporting HTML errors anyway

[11:40:00.0000] <Philip`>
http://validator.w3.org/mobile/alpha?docAddr=http://canvex.lazyilluminati.com/83/play.xhtml - it doesn't seem to mind me using <canvas>

[11:58:00.0000] <SadEagle>
Philip`: thanks again for that scale testcase, if you didn't see my previous thanks in the backlog

[12:48:00.0000] <Philip`>
SadEagle: Let me know if you have other bugs that could be tested for easily :-)

[13:11:00.0000] <harri>
Philip`: you had problems with the realiability for downloading pages with konqueror?

[13:20:00.0000] <Philip`>
harri: I think the only problem was that it tried downloading dozens of iframes at once, and the web server didn't like that and returned errors

[13:25:00.0000] <SadEagle>
harri: we have a problem in that if we don't know the mimetype (some objects, all iframes), we start a new KRun to get it... Which on a testcase page can result in 100s of  connections

[13:53:00.0000] <Philip`>
/me wonders if there are any known problems in existing browsers with nested <form>s

[13:53:01.0000] <Philip`>
(when they're created via DOM manipulation, rather than through the HTML parser)

[13:53:02.0000] <Philip`>
(Some minimal tests seem to work in IE6/FF2/O9, at least)

[14:29:00.0000] <annevk>
Philip`, using XML might be more easier

[14:33:00.0000] <Philip`>
annevk: Not when I need to work in IE6

[14:33:01.0000] <annevk>
good point

[14:48:00.0000] <gsnedders>
RFC: http://pastebin.ca/866821

[14:50:00.0000] <SadEagle>
gsnedders: is #25 missing a "not"?

[15:08:00.0000] <annevk>
is now the right time to drag that up again?

[15:09:00.0000] <SadEagle>
and yeah, I am not sure it'll do any good.

[15:11:00.0000] <annevk>
SadEagle, how exactly is KHTML different from WebCore at this point?

[15:12:00.0000] <Philip`>
Parse error at line 28: Expected ), got EOF

[15:12:01.0000] <annevk>
/me actually thought KHTML was no longer maintained

[15:12:02.0000] <SadEagle>
annevk: very. I can't really say more in an accurate way.

[15:12:03.0000] <SadEagle>
annevk: that's false.

[15:12:04.0000] <annevk>
SadEagle, ok

[15:12:05.0000] <SadEagle>
(but I don't blame you for being mistaken)

[15:13:00.0000] <annevk>
so that makes 5 relatively mature rendering engines, nice

[15:13:01.0000] <annevk>
well, mature and maintained

[15:14:00.0000] <Philip`>
Shouldn't IE count as several?

[15:14:01.0000] <annevk>
the engine iCab had was also pretty good

[15:14:02.0000] <annevk>
Philip`, :(

[15:14:03.0000] <SadEagle>
well, it is more like 4.5, and we are certainly less likely to provide big features, unless we just lift them off Apple, which is still possible.

[15:16:00.0000] <annevk>
with not providing "big features" you mean not keeping up with the rest or not having lots of time to innovate yourselves?

[15:17:00.0000] <SadEagle>
I mean stuff like local DB, etc. I don't think we're really interested in innovating stuff, since realistically no one will use any extensions if we fell like inventing them.

[15:17:01.0000] <SadEagle>
I think you Opera folks should have a good idea of that... Well, I've certainly considered ripping off the browser JavaScript idea :-)

[15:22:00.0000] <Philip`>
You can innovate extensions then promote them as standards and have other browsers implement them and then people will start using the extensions and you'll already support them :-)

[15:23:00.0000] <SadEagle>
Philip`: you need spare manpower for that, though. And you need to be able to deal with stuff suddenly breaking, like IIRC it did on some sites for Opera due to WebForms 2.0

[15:24:00.0000] <annevk>
yeah, WF2 causes issues now and then

[15:25:00.0000] <Philip`>
It's best if those issues get discovered in browsers with very few users, so the specs can be fixed before anyone else is affected ;-)

[15:26:00.0000] <Ketsuban>
Bah, I want to install Konqueror so I can test my site design in it, but konqueror drags half of KDE kicking and screaming with it due to some really insane dependencies. konqueror-kde4 seems more well-behaved, but there's a disturbing amount of "core libraries" and other worrying-sounding packages which make me wonder if it's just the same as with konqueror, only the packages are divided up differently.

[15:27:00.0000] <SadEagle>
Ketsuban: you only need kdelibs and parts of kdebase.

[15:27:01.0000] <SadEagle>
though you probably want to lay off testing until 4.0.1 :-)

[15:28:00.0000] <SadEagle>
Philip`: the #1 issue any browser with small market share has is the user agent string.

[15:28:01.0000] <annevk>
Philip`, a major browser would simply get sites changed

[15:28:02.0000] <SadEagle>
.. as well as the minor browsers.

[15:30:00.0000] <Ketsuban>
SadEagle: Unless you can test for me. I don't plan on making any changes if it renders incorrectly, but I'm curious to know if it works. :P

[15:30:01.0000] <SadEagle>
Ketsuban: fair enough. I might throw the book at you, though :-)

[15:30:02.0000] <Ketsuban>
I'd like to test with Safari too, but I'm allergic to Macs.

[15:31:00.0000] <SadEagle>
Supposedly win Safari runs under Wine

[15:31:01.0000] <Philip`>
/me can confirm that Safari works in Wine

[15:31:02.0000] <Philip`>
Something like http://browsershots.org/ might be useful for testing certain browser versions

[15:33:00.0000] <Philip`>
(Also, if you're allergic to Macs but not to Windows then you could just run Safari in Windows properly)

[15:33:01.0000] <Ketsuban>
At any rate: http://ketsuban.cleverpun.com/testing/blogdesign/index.html is the page to test. I know it works in Opera 9.5 weeklies, Firefox 2 and IE7, it "works" in Opera 9.25 (there's a bug regarding sizing with ems which I could work around with JavaScript, but an't willing to do) and doesn't work in IE6 or below (for which I have provided a slightly-snarky message telling people to upgrade to IE7).

[15:34:00.0000] <othermaciej>
whether UA checks are a problem depends on the type of site

[15:34:01.0000] <othermaciej>
unfortunately, fancy advanced "web app" type sites are the most likely to completely lock you out based on UA string

[15:34:02.0000] <othermaciej>
or otherwise rely on UA testing in a bad way

[15:35:00.0000] <SadEagle>
Ketsuban: looks fine, in both 3.5.something and 4.0.1-pre. Except it doesn't look so hot at 1024x768

[15:35:01.0000] <Ketsuban>
Normally if I'm working on a site design I'll write it in a compliant browser (generally I'll start off with Firefox, then make sure it works in standards-compliant browsers by testing in Opera) and then provide fixes for IE using conditional comments.

[15:35:02.0000] <Philip`>
Fancy advanced "web app" types sites are the most likely to do X, for any action X :-)

[15:36:00.0000] <Ketsuban>
SadEagle: Yeah, one thing I'm going to do is take out the 200px left margin - that's a relic from when I had an image there I wanted to show through. :P

[15:36:01.0000] <Philip`>
Unfortunately Firefox and Opera aren't standards-compliant :-p

[15:36:02.0000] <SadEagle>
othermaciej: jquery 1.2.something used to crash on its browser check is the browser wasn't one in a certain set of 4.

[15:36:03.0000] <othermaciej>
a certain Major Web App Vendor has code in many of their web apps that test if you have certain combinations of methods and properties available on the DOM Element and Document interfaces, and if so assumes what browser you are, and then makes completely unrelated assumptions

[15:36:04.0000] <othermaciej>
because their experts on the matter told them not to test the UA string

[15:37:00.0000] <othermaciej>
so they ended up finding a way to do it even worse

[15:37:01.0000] <SadEagle>
heh. browser fingerprinting is a fun topic, though.

[15:37:02.0000] <othermaciej>
(we found out because in Safari we fixed what methods were on Document and Element to better match other browsers, and they no longer detected us as Safari)

[15:37:03.0000] <othermaciej>
(so they started using Firefox designMode hacks instead of contentEditable for editing)

[15:40:00.0000] <annevk>
I wonder what contenteditable quirks Firefox 3 will introduce

[15:41:00.0000] <SadEagle>
so othermaciej, are you awake enough to talk about the quirks in handling of Cf characters? :-)

[15:41:01.0000] <Ketsuban>
SadEagle: Would you prefer centred or left-aligned? I slightly prefer centred, but left-aligned may well work better at 1024x768.

[15:41:02.0000] <othermaciej>
SadEagle: we just don't do Cf dropping at all - we used to but it caused web compat problems with Firefox and IE

[15:41:03.0000] <othermaciej>
that's all I remember

[15:41:04.0000] <SadEagle>
Ketsuban: I have no artistic taste :-)

[15:41:05.0000] <othermaciej>
if BOMs are dropped it's probably at another level (text decoding or something)

[15:42:00.0000] <SadEagle>
othermaciej: well, the point is that Mozilla drops -some- Cf's. (Not the soft-hyphen). It also handles zero-width space as a space...

[15:42:01.0000] <othermaciej>
I don't know how exhaustively we match all their quirks

[15:43:00.0000] <SadEagle>
othermaciej: IE handles the BOM at whitespace, drops the inverse BOM at the beginning of the file, and has totally weird behavior in ~4 other characters, which is appears to permit in identifiers in some spots(?)

[15:44:00.0000] <SadEagle>
othermaciej: I don't see anything like that in your version of Lexer.cpp.... 

[15:44:01.0000] <othermaciej>
SadEagle: I don't think we do either of those sets of quirks

[15:45:00.0000] <othermaciej>
if you have a particular site breaking I can try it and see if I can figure out why/whether it works

[15:45:01.0000] <SadEagle>
tvguide.com :-)

[15:45:02.0000] <othermaciej>
I would guess our text codecs drop stray BOMs

[15:45:03.0000] <SadEagle>
probably. /me tries the testcase in Opera.

[15:45:04.0000] <SadEagle>
othermaciej: my tendency is probably just to handle it as whitespace, and not worry much unless something comes up.

[15:46:00.0000] <othermaciej>
I think soft hyphen may be the only case we ran into where folowing the spec caused a real compat ssue

[15:48:00.0000] <SadEagle>
heh, and Opera 9.24 does something entirely different :-)

[15:48:01.0000] <annevk>
I think BOM as whitespace char is part of ES4

[15:52:00.0000] <SadEagle>
Opera9.24 seem to handle Cf as identifier characters, except leading BOMs are stripped, and ZWSP is stripped in some contexts(?)

[15:54:00.0000] <SadEagle>
Philip`: see, you're right, nothing is standards compliant. JSC tried following ES3, and it broke a website :-)


2008-01-21
[16:03:00.0000] <Philip`>
Has anybody already mentioned that <canvas> ImageData won't work with high-end display systems that use 12-bit colour components, or floating point components?

[16:06:00.0000] <SadEagle>
I guess it should permit better precision in the same range?

[16:07:00.0000] <Philip`>
That wouldn't help the floating-point HDR case, though maybe that case is a bit too theoretical

[16:08:00.0000] <SadEagle>
I suppose the clamping is the right behavior for a non-HDR implementation on HDR data, or am I mistaken?

[16:09:00.0000] <Philip`>
Depends on whether you consider data loss to be "right behavior" :-)

[16:11:00.0000] <annevk>
css has the same issue

[16:11:01.0000] <SadEagle>
well, premultiplied alpha is data loss, too .... 

[16:11:02.0000] <annevk>
although CSS has the weird thing that it allows percentages too which allow for a far larger range than the integer alternative

[16:12:00.0000] <Philip`>
When we all have cyborg eyes that can detect four distinct colours, all this three-component RGB legacy will be a real pain

[16:12:01.0000] <SadEagle>
It definitely seems like something that should be permitted. So if an implementation supports 9 bits,and is given 179.5, it can represent it well.

[16:57:00.0000] <roc>
othermaciej: what was the soft-hyphen problem with following the spec?

[16:58:00.0000] <roc>
if there's some site depending on us not following the spec, I'll make sure we break them in Firefox 3 :-)

[16:58:01.0000] <othermaciej>
roc: the ECMAScript 3 spec says that soft hyphens in JS source should be skipped, but Mozilla doesn't do that (in fact the Mozilla JS regression tests had a test in the ecma_3 directory that tests for not doing it)

[16:58:02.0000] <othermaciej>
roc: I don't think dropping soft hyphens is a useful behavior anyway

[16:58:03.0000] <othermaciej>
it should just be dropped in ES4

[16:58:04.0000] <roc>
ah ok, JS, sorry, can't help you there

[16:59:00.0000] <othermaciej>
roc: I'm not sure breaking sites to follow the spec is always be best approach in any case

[16:59:01.0000] <othermaciej>
depends on the bug and the site

[16:59:02.0000] <roc>
yep

[16:59:03.0000] <Dashiva>
Philip`: Isn't part of the motivation for imagedata being able to fit it into bytes for an bytearray?

[17:00:00.0000] <othermaciej>
in that way I guess it's healthier to be doing testing and development on specs where a new version is under active development, so things can be fixed in the spec too

[17:00:01.0000] <roc>
specs need maintenance too

[17:02:00.0000] <Philip`>
We need an acid test for specs, to detect when the specs are broken

[17:02:01.0000] <othermaciej>
yes and it's hard to develop against an unmaintained spec

[17:02:02.0000] <Dashiva>
Philip`: First we need a spec spec to say what's a conforming spec

[17:02:03.0000] <othermaciej>
I'd say DOM Core is probably the most unmaintained now

[17:02:04.0000] <othermaciej>
although for ES4 it's very hard right now to tell how much it is fixing ES3 spec bugs

[18:05:00.0000] <Lachy>
interesting. IE6 supports security=restricted attribute for iframes http://blogs.msdn.com/ie/archive/2008/01/18/using-frames-more-securely.aspx

[18:06:00.0000] <othermaciej>
I'm curious how much detail is available about what they restrict

[18:06:01.0000] <othermaciej>
it might be a useful thing for ad frames or the like

[18:07:00.0000] <othermaciej>
or if you were willing to put user-generated content in an iframe you could use it for XSS robustness

[18:07:01.0000] <webben>
othermaciej: It says: "Frames running in the Restricted Sites zone cannot run script" so I'm guessing: not very useful.

[18:08:00.0000] <othermaciej>
webben: I guess it depends on how much of what your ad server does is client-side

[18:08:01.0000] <othermaciej>
I guess even a regular iframe off of a different domain is a useful security restriction

[18:08:02.0000] <webben>
Sure. But the typical graphical ad seems very JS-dependent.

[18:08:03.0000] <othermaciej>
they're either animated gifs or Flash

[18:08:04.0000] <othermaciej>
few of them use JS as part of the ad per se

[18:09:00.0000] <SadEagle>
a huge number use JS to boostrap it

[18:09:01.0000] <webben>
indeed

[18:09:02.0000] <webben>
pretty much all of them on the network I work on --- although most have a noscript fallback or whatever.

[18:10:00.0000] <webben>
that's not to say they genuinely require JS for what they do; but changing what ad authors do isn't necessarily easy

[18:10:01.0000] <webben>
(there's also the issue of JS used for click tracking etc)

[18:12:00.0000] <SadEagle>
Hmm, does window.location on a frame actually navigate the entire window, though?

[18:13:00.0000] <othermaciej>
no

[18:14:00.0000] <othermaciej>
it navigates the frame

[18:15:00.0000] <SadEagle>
I thought so :-). yeah, so the example in the blog is wrong.

[18:49:00.0000] <weinig_>
SadEagle: it could do top.location though

[18:49:01.0000] <SadEagle>
weinig_: hmm, right, the XSS models permits setting of location href :(

[01:35:00.0000] <jruderman>
Hixie: safari messes up http://www.libpr0n.com/ :(

[01:35:01.0000] <jruderman>
Hixie: i think acid3 should test whatever it is that makes safari mess it up

[01:36:00.0000] <jruderman>
clearly something related to the "@ debug" thing

[01:39:00.0000] <othermaciej>
jruderman: @ debug; * { border: 1px solid white ! important; } /* see below */ is matching

[01:39:01.0000] <othermaciej>
I'm not sure whether it should or not

[01:40:00.0000] <othermaciej>
as I do not know what is expected to terminate a bad @ rule

[01:40:01.0000] <othermaciej>
I am not sure why it uses such a weird-ass technique to comment that line

[01:40:02.0000] <jruderman>
"see below" has a long explanation

[01:41:00.0000] <jruderman>
it's there to give the site author an easy way to toggle that rule on and off (by switching between "@debug" and "@ debug")

[01:41:01.0000] <othermaciej>
crazy stuff

[01:42:00.0000] <jruderman>
yes, crazy stuff

[01:42:01.0000] <othermaciej>
I am too lazy to check the spec references

[02:09:00.0000] <annevk>
at-rules are ; or { }-block terminated

[02:09:01.0000] <annevk>
so Safari is buggy

[02:11:00.0000] <annevk>
seems that Opera pre-9.5 got this wrong too

[02:11:01.0000] <annevk>
maybe pre-9.3 hmm

[02:12:00.0000] <Ketsuban>
I wasn't aware @debug was a valid at-rule.

[02:12:01.0000] <annevk>
it's not

[02:14:00.0000] <Ketsuban>
So changing @ debug to @debug ought to have no effect.

[02:14:01.0000] <annevk>
it should have effect

[02:15:00.0000] <Philip`>
Changing from @ debug to @debug changes it from invalid selector to invalid at-rule, which is different

[02:15:01.0000] <annevk>
there are generic parsing rules for at-rules

[02:15:02.0000] <annevk>
/me initially thought the trick was @debug versus @debug;

[02:16:00.0000] <Ketsuban>
"User agents must ignore an invalid at-keyword together with everything following it, up to and including the next semicolon (;) or block ({...}), whichever comes first."

[02:20:00.0000] <Ketsuban>
Either way this is a really stupid "trick" - if you want to "quickly switch on/off a style" comment/uncomment it.

[02:22:00.0000] <annevk>
it's just a hack

[02:23:00.0000] <annevk>
and probably not widely known

[02:25:00.0000] <Philip`>
It's probably intended to break as many non-Mozilla browsers as possible

[02:27:00.0000] <annevk>
yeah

[02:31:00.0000] <jruderman>
hehe

[02:31:01.0000] <jruderman>
who owns libpr0n.com? hixie?

[02:34:00.0000] <jruderman>
http://libpr0n.com/links.html tries to link a porn site, but apparently its registration expired and now it displays a non-porn squatter page. what irony ;)

[02:43:00.0000] <krijnh>
Wow, I didn't disconnect :)

[03:00:00.0000] <othermaciej>
the actual CSS file contains "@ debug;"

[03:01:00.0000] <othermaciej>
the trick is that this is the start of a bad selector, not a bad @rule

[05:55:00.0000] <gsnedders>
a feed served as text/rdf. fun.

[06:02:00.0000] <Philip`>
/me wonders what makes it fun

[06:03:00.0000] <gsnedders>
Philip`: doing magic tricks working out what content is :)

[06:04:00.0000] <gsnedders>
(also note text/rdf is an unregistered MIME type, RDF should be application/rdf+xml)

[06:06:00.0000] <Philip`>
Having seen a "Content-Type: ��~/html;charset=UTF-8", I won't consider any content-type fun if it merely has the wrong letters in it

[06:07:00.0000] <Philip`>
Also, argh, those characters break my IRC display

[06:08:00.0000] <gsnedders>
:P

[06:28:00.0000] <Ketsuban>
Philip`: Can you give Unicode references for those? They got replaced with U+FFFD REPLACEMENT CHARACTER.

[06:31:00.0000] <Philip`>
Ketsuban: I can't, since I only see U+FFFD and I can't just redownload the headers since they're random

[06:31:01.0000] <Philip`>
but see HEAD http://www.louvre.fr for a live demonstration :-)

[06:32:00.0000] <Ketsuban>
Looks normal to me.

[06:33:00.0000] <gsnedders>
looks fine to me too

[06:33:01.0000] <Philip`>
Using HEAD, not GET?

[06:34:00.0000] <annevk>
doesn't look normal to me

[06:34:01.0000] <Ketsuban>
If I knew what "using HEAD, not GET" meant I might be able to tell. :P

[06:34:02.0000] <gsnedders>
using HEAD.

[06:35:00.0000] <zcorpan>
http://www.rexswain.com/httpview.html says Content-Type:·text/html;·charset=iso-8859-1(CR)(LF)

[06:35:01.0000] <Philip`>
Oh, maybe my HEAD is following redirections

[06:35:02.0000] <Philip`>
Try it with http://www.louvre.fr/llv/commun/home.jsp instead

[06:35:03.0000] <zcorpan>
i tried with both follow and not follow redirects with rexswain

[06:36:00.0000] <Ketsuban>
Content-Type:·(B0)(HT)B(03)/html;charset=UTF-8(CR)(LF)

[06:36:01.0000] <annevk>
does that use HEAD requests though?

[06:36:02.0000] <Philip`>
Content-Type:·8(CC)D(06)/html;charset=UTF-8(CR)(LF)

[06:36:03.0000] <zcorpan>
ah yep

[06:36:04.0000] <Philip`>
Ketsuban: "(HT)" ?

[06:36:05.0000] <annevk>
I get a different response each time

[06:36:06.0000] <Philip`>
Oh, horizontal tab, not weird hex

[06:37:00.0000] <zcorpan>
ah, i didn't look at "Location 2" ...

[06:37:01.0000] <annevk>
 �`D/html;charset=UTF-8 and  P'/html;charset=UTF-8 ...

[06:37:02.0000] <Philip`>
annevk: Now you've made my IRC display blink :-(

[06:38:00.0000] <zcorpan>
������������������������������

[06:45:00.0000] <didymos>
Philip`, Yeah, it's quite annoying

[07:12:00.0000] <harri>
same here. funny that it's still possible in 2008.

[09:22:00.0000] <gsnedders>
annevk: re: dragging it up again: it never went away

[12:41:00.0000] <zcorpan>
http://sitegod.blogspot.com/2008/01/alright-i-come-clean-i-hate-html-5.html

[12:50:00.0000] <roc>
lame

[12:50:01.0000] <roc>
It's good to hear we control the W3C though

[12:51:00.0000] <SadEagle>
indeed lame. I don't agree with some things in html5, but I can't argue with the preference of getting useful features in there, instead of taking part in self-indulgent dances going nowhere.

[12:53:00.0000] <jasonw22>
it's too bad folks don't limit themselves to the technical details in this discussion, and resort to hysterical vitriol

[12:55:00.0000] <gsnedders>
And get the technical details wrong

[12:56:00.0000] <SadEagle>
uhm, the guy is 16 :-)

[12:56:01.0000] <gsnedders>
SadEagle: uhm, I'm 15

[12:56:02.0000] <jasonw22>
ah, 'nuf said

[12:57:00.0000] <gsnedders>
So I guess I'm as dumb as him, just because of my age.

[12:57:01.0000] <SadEagle>
gsnedders: that's not what I meant. I mean that some people of your age are not quite mature yet. 

[12:58:00.0000] <Philip`>
Some people of any age aren't :-)

[12:59:00.0000] <gsnedders>
… which is the entire issue of basing it on age

[12:59:01.0000] <SadEagle>
well, but they should be held to a somewhat higher standard :-)

[12:59:02.0000] <SadEagle>
/me ponders shutting his mouth before he digs an even bigger hole.

[13:02:00.0000] <gsnedders>
on the subject of digging your way out of holes, I ought to write a post about local branch of Tesco

[13:06:00.0000] <gsnedders>
<http://www.fifetoday.co.uk/news/Madras-pupils-voice-anger-over.3369908.jp> — very shortened copy of the article in newspaper

[13:06:01.0000] <Philip`>
There was almost a new Tesco store a couple of years ago around where I lived, built on top of a railway tunnel, but it got delayed a bit because the tunnel collapsed and they haven't restarted building yet

[13:07:00.0000] <gsnedders>
That was silly, to say the least.

[13:08:00.0000] <Philip`>
(Fortunately there weren't any trains there at the moment it collapsed, but it did cause quite a lot of disruption)

[13:09:00.0000] <gsnedders>
the whole situation here was far more bizarre than that article leads to suggest

[15:02:00.0000] <gsnedders>
http://pastebin.ca/867866 should fix your parse error Philip` as well as one or two other issues

[15:05:00.0000] <gsnedders>
(again, and further comments are welcome)

[15:05:01.0000] <gsnedders>
(and, before it's asked: the discussion about the issue never ended sadly, this won't make anything worse happen :P)


2008-01-22
[17:30:00.0000] <Hixie>
5 tests to go

[17:30:01.0000] <SadEagle>
aha, hi Hixie.

[17:30:02.0000] <SadEagle>
I gotta some feedback/questions on some of the traversal ones, do you have time for that

[17:30:03.0000] <Hixie>
not right now, can you send mail?

[17:30:04.0000] <Hixie>
ian⊙hc

[17:31:00.0000] <jwalden>
SadEagle: curious, which ones, on the chance I know why they work?

[17:33:00.0000] <SadEagle>
test 02, this step: expect(10, i.nextNode(), t3); // filter 4

[17:33:01.0000] <SadEagle>
I don't see why that filter should ever run, since it's at the end of the physical list at that point (// B 1 2 [3] *, as commented)

[17:35:00.0000] <SadEagle>
Though, I am not sure the entire design of that test, and #1 really, is kosher due to "However, the exact timing of these filter calls may vary from one DOM implementation to another"

[17:36:00.0000] <jwalden>
SadEagle: ah, sorry -- was hoping it was treewalker, which I actually do understand (and which Gecko *does* implement) :-)

[17:36:01.0000] <SadEagle>
jwalden: those work fine for me :-)

[17:52:00.0000] <Hixie>
SadEagle: fixed

[17:53:00.0000] <SadEagle>
thanks

[17:57:00.0000] <jwalden>
/me is sad SVG made it into acid3

[17:57:01.0000] <jwalden>
/me would have preferred an SVG acid test

[17:57:02.0000] <Hixie>
me too

[17:57:03.0000] <Hixie>
but i have tests to fill, and those were the tests people sent

[17:58:00.0000] <jwalden>
also, testing NamedNodeMap seems...less than truly useful :-\

[17:58:01.0000] <jwalden>
([gs]et|has)Attribute is what people will actually use

[17:58:02.0000] <Hixie>
send better tests, and they can replace the ones there :-)

[17:59:00.0000] <jwalden>
I totally would, if I knew where people were hitting real bugs

[17:59:01.0000] <Hixie>
ditto

[17:59:02.0000] <jwalden>
care for any tests for HTML5 postMessage?  I have some that completely trash at least Safari ;-)

[17:59:03.0000] <jwalden>
(I know you don't, now)

[18:00:00.0000] <SadEagle>
/me could make totally useless ES262 tests that don't work anywhere :-)

[18:00:01.0000] <Hixie>
the rules for what can be in the test are at ln.hixie.ch

[18:00:02.0000] <Hixie>
e4x doesn't quite make the cut

[18:01:00.0000] <Hixie>
(es3 does, of course)

[18:02:00.0000] <jwalden>
Hixie: seriously, you don't want E4X even if it did make the cut

[18:02:01.0000] <Hixie>
/me likes e4x, actually

[18:02:02.0000] <jwalden>
it looks nice

[18:02:03.0000] <Hixie>
it would be so much better than innerHTML

[18:02:04.0000] <jwalden>
until you realize that 60-70% of the bugs that get filed against your implementation are bugs in the specification

[18:03:00.0000] <jwalden>
and that the spec isn't rigorously written to ensure XML type-safety

[18:03:01.0000] <jwalden>
or serialization validity

[18:03:02.0000] <jwalden>
or many other things

[18:03:03.0000] <SadEagle>
Hixie: your node traversal tests seems to assume that the nodefilter implementation doesn't move reference node to the candidate position before calling the filter. I am not sure that's justified (the spec is rather vague on effects of non-pure filters)

[18:03:04.0000] <Hixie>
jwalden: i'm not familiar with the spec itself, but the idea certainly would be better than innerHTML

[18:04:00.0000] <jwalden>
Hixie: the syntax might work, more or less, but I think you need a clean base on which to build it; E4X is fundamentally flawed, and I would welcome a replacement that didn't suck

[18:04:01.0000] <Hixie>
SadEagle: surely moving the reference node before you knew if that node was rejected or not would make no sense?

[18:04:02.0000] <Hixie>
jwalden: i can't speak to that

[18:04:03.0000] <jwalden>
sure

[18:04:04.0000] <jwalden>
just trying to educate

[18:04:05.0000] <jwalden>
ask brendan about it sometime

[18:04:06.0000] <Hixie>
:-)

[18:05:00.0000] <SadEagle>
Hixie: it makes a huge amount of sense from implementation robustness POV, and it's indistinguishable unless filters do iffy stuff.

[18:05:01.0000] <SadEagle>
hmm, might not be so bad, actually. 

[18:05:02.0000] <Hixie>
SadEagle: what would be different?

[18:06:00.0000] <SadEagle>
could you please elaborate on that question?

[18:07:00.0000] <SadEagle>
actually, please ignore me for a bit. My head isn't working well right now, so I am likely wasting both of our's time

[18:07:01.0000] <Hixie>
heh

[18:08:00.0000] <Hixie>
i just meant what test result would be different

[18:09:00.0000] <SadEagle>
I'll defer that for a while to avoid any overly wrong answers...

[18:09:01.0000] <Hixie>
hehe

[18:09:02.0000] <othermaciej>
jwalden: if E4X style APIs are super convenient, it might be nice to use them on an in-tree DOM

[18:09:03.0000] <othermaciej>
E4X bundles together a couple of different things which make it an awkward fit with other web APIs

[18:10:00.0000] <jwalden>
othermaciej: quite possibly; the specification of those APIs is most but not all of the problem

[18:11:00.0000] <othermaciej>
1) inline checked syntax for markup in JavaScript; 2) separate object model for XML documents/fragments; 3) simple (but to me kind of icky) API for manipulation and querying of XML chunklets

[18:11:01.0000] <othermaciej>
I think the sweet spot would be a cleaned up version of 1 and 3 without 2

[18:11:02.0000] <Hixie>
agreed

[18:47:00.0000] <jwalden>
oh, Hixie: I may have some postMessage tests for you to host somewhere, if I can work out a reasonable way to export them and make them runnable in any browser; I'll keep you posted

[18:59:00.0000] <Hixie>
jwalden: cool. you're probably best off talking to anne about tests, he's got testsuites.org or whatever it's called

[18:59:01.0000] <Hixie>
or just submit them ot the html5 wg

[18:59:02.0000] <Hixie>
there's some sort of cvs system for tests there

[18:59:03.0000] <jwalden>
Hixie: problem is they require proxy mucking, due to the cross-domain requirement, so it's not quite as simple as "visit this page"

[19:00:00.0000] <jwalden>
but easy enough to handle, given the right tools

[19:00:01.0000] <jwalden>
and ability to tweak proxy autoconfig

[19:00:02.0000] <Hixie>
ah

[19:01:00.0000] <jwalden>
Hixie: I make liberal use of the reservations of example.com and example.org :-)

[19:01:01.0000] <Hixie>
heh

[19:01:02.0000] <Hixie>
my cross-site tests use another.domain.libpr0n.com and hixie.ch

[19:05:00.0000] <Ketsuban>
I don't suppose I could ask for some CSS selector assistance?

[19:06:00.0000] <Ketsuban>
I know it's not strictly on-topic, but #html is silent and this place isn't. :P

[19:07:00.0000] <othermaciej>
maybe #css would be a good place to ask about CSS

[19:09:00.0000] <Ketsuban>
I only realised that channel existed after I'd already asked here. Now I feel stupid. :P

[22:30:00.0000] <Hixie>
bed time

[22:30:01.0000] <Hixie>
nn

[22:51:00.0000] <MacDome>
holy crap

[22:51:01.0000] <othermaciej>
MacDome: eh?

[22:51:02.0000] <MacDome>
those are some wicked SVG tests

[22:52:00.0000] <othermaciej>
in acid3?

[22:52:01.0000] <MacDome>
definitely living up to the directory name of "evil"

[22:52:02.0000] <MacDome>
although verging on "useless"

[22:52:03.0000] <MacDome>
but having good SVG font and animation support across all browsers could be very good for the web

[22:52:04.0000] <MacDome>
at least the bleeding edge bwe

[22:52:05.0000] <MacDome>
web

[22:54:00.0000] <MacDome>
I'm surprised that Safari 3.0.4 fails so badly on those SVG tests

[22:54:01.0000] <MacDome>
othermaciej: it's sad that most of the compat issues for the web are not the specified ones

[22:55:00.0000] <MacDome>
at least that's what I've seen in my limited experiance

[22:55:01.0000] <othermaciej>
MacDome: maybe you should submit tests that actually affect compat

[22:55:02.0000] <MacDome>
othermaciej: I agree, I think that's a good idea

[22:55:03.0000] <MacDome>
any of the bugs from help.improve.safari would be good candidates :)

[22:55:04.0000] <othermaciej>
I'm guessing these tests are effective in part due to testing some not-universally-implemented features

[22:56:00.0000] <MacDome>
assuming they can actually be found in a spec

[22:56:01.0000] <othermaciej>
testing the edge cases might be more effective than just testing a very basic case

[23:01:00.0000] <MacDome>
othermaciej: odd that getSVGDocument would fail on <object>

[23:01:01.0000] <MacDome>
I'm quite certain I implemented that... at least for <embed>

[23:01:02.0000] <othermaciej>
MacDome: it's a dumb API anyway, they should just use contentDocument

[23:01:03.0000] <MacDome>
supposedly that's failing too

[23:02:00.0000] <MacDome>
maybe it's expecting a "Document" instead of an "SVGDocument"

[23:02:01.0000] <othermaciej>
for an <object> containing SVG?

[23:02:02.0000] <MacDome>
I'll have to look at it

[23:02:03.0000] <MacDome>
for an object pointing to an SVG

[23:02:04.0000] <MacDome>
I haven't looked at the test yet

[23:02:05.0000] <MacDome>
(in detail)

[23:02:06.0000] <MacDome>
I expect that Hixie and I may have to go a couple rounds on it :)

[23:02:07.0000] <othermaciej>
I do see a getSVGDocument() call

[23:03:00.0000] <othermaciej>
in the IDL

[23:03:01.0000] <othermaciej>
but it checks for the document being an SVGDocument, not a document

[23:03:02.0000] <othermaciej>
(not sure if that is what's happening here)

[23:03:03.0000] <MacDome>
it was one of the first things I remember adding when SVG moved into WebCore from DrawCore :)

[23:04:00.0000] <MacDome>
othermaciej: this might be our problem:

[23:04:01.0000] <MacDome>
Unsafe JavaScript attempt to access frame with URL data:image/svg+xml;base64,

[23:04:02.0000] <MacDome>
othermaciej: I see 4 of those in the console log

[23:04:03.0000] <MacDome>
othermaciej: I'm surprised data: urls aren't special cased

[23:05:00.0000] <othermaciej>
MacDome: they are special cased to deny all access

[23:05:01.0000] <othermaciej>
in both WebKit and Gecko

[23:05:02.0000] <othermaciej>
they have no privs and no access

[23:05:03.0000] <othermaciej>
so I think the test is invalid

[23:05:04.0000] <othermaciej>
unless something specifies the security model for data: URLs

[23:06:00.0000] <othermaciej>
(it's actually really hard to get a model that allows any form of access and is secure)

[23:08:00.0000] <MacDome>
othermaciej: well I filed it as http://bugs.webkit.org/show_bug.cgi?id=16968, you and Hixie and weinig can debate it out there

[23:19:00.0000] <MacDome>
othermaciej: so why is it unsafe to allow access to data urls?

[23:20:00.0000] <MacDome>
because it's impossible to know where the data came from?

[23:20:01.0000] <othermaciej>
MacDome: well, the tempting model is to treat it like about:blank or javascript: URLs

[23:21:00.0000] <othermaciej>
MacDome: treating it like javascript: URLs would mean you have to prevent ever navigating a frame you don't have access to, to a data: URL

[23:21:01.0000] <othermaciej>
like we do for javascript:

[23:21:02.0000] <MacDome>
/me doesn't know enough about the problem... but it seems to me like a data: url would be very similar to a javascript: url

[23:21:03.0000] <othermaciej>
I think there are complications

[23:21:04.0000] <othermaciej>
weinig and I drew it up on the whiteboard

[23:21:05.0000] <othermaciej>
hi weinig 

[23:21:06.0000] <weinig>
hi othermaciej 

[23:22:00.0000] <weinig>
what did we draw?

[23:22:01.0000] <MacDome>
weinig: perfect timing!

[23:22:02.0000] <weinig>
:)

[23:22:03.0000] <MacDome>
weinig: we were just discussing http://bugs.webkit.org/show_bug.cgi?id=16968 and why we deny all data: url access

[23:22:04.0000] <othermaciej>
weinig: I was explaining why we ended up with a no-access policy for data: URLs

[23:22:05.0000] <weinig>
ah

[23:22:06.0000] <othermaciej>
MacDome: we actually tried to have something more generous, one reason we backed of was Firefox denying all access to/from data: URLs

[23:23:00.0000] <MacDome>
the opera guys who wrote those tests seem to assume that a js generated iframe with a data: url SVG document contents should be accessible 

[23:23:01.0000] <MacDome>
but it would be easy to rewrite the test to use separate files

[23:23:02.0000] <othermaciej>
or, ironically, a javascript: URL would work

[23:23:03.0000] <othermaciej>
no, wait, ti wouldn't

[23:24:00.0000] <othermaciej>
you can't use 'em for svg

[23:24:01.0000] <othermaciej>
they are assumed text/html w/ a string result

[23:24:02.0000] <othermaciej>
/me eats his chicken soup

[23:24:03.0000] <weinig>
yum

[23:25:00.0000] <MacDome>
well, weinig, one of you two should comment in the bug, to motivate hixie to change the test :)

[23:33:00.0000] <othermaciej>
I don't think any qualifying spec defines the security policy so you could certainly claim the test as written is not justified by specs

[23:33:01.0000] <othermaciej>
(HTML5 does define the security policy, but I don't recall what it says about special cases for data:, javascript: and about: URIs)

[23:56:00.0000] <hsivonen>
I find it interesting that the IE version switch syntax gets announced on ALA instead of the IE blog

[23:58:00.0000] <takkaria>
my reaction that article, I think, is "ew"

[00:00:00.0000] <takkaria>
and being able to set it as a HTTP header is horrible from a save-to-disk perspective

[00:11:00.0000] <roc>
from an implementation point of view, it seems to me they're making life very hard for themselves

[00:11:01.0000] <jwalden>
hsivonen: I'm cynically not surprised, except that I'd have expected the blog post much later so people would blow their tops on a site other than the IE blog

[00:11:02.0000] <jwalden>
this is only an hour or two of difference

[00:24:00.0000] <jwalden>
anyone know whether Opera's implementing array extras, e.g. forEach and friends?

[00:33:00.0000] <othermaciej>
roc: they seem to be willing to ship as many separate engines as it takes

[00:33:01.0000] <othermaciej>
in some ways, that is easier than carefully navigating between the rocks of standards and compatibility

[00:34:00.0000] <othermaciej>
changing the IE user agent string would probably be the best way to dodge the compat legacy

[00:34:01.0000] <othermaciej>
for the public web

[00:34:02.0000] <othermaciej>
but it would kill them on IE-only intranet sites

[00:40:00.0000] <hsivonen>
othermaciej: Intranet Explorer could have a different UA string for an admin-set intranet zone

[01:03:00.0000] <virtuelv_>
sigh

[01:03:01.0000] <virtuelv_>
(I'm reading a list apart)

[01:13:00.0000] <roc>
othermaciej: shipping many separate "engines" isn't easy

[01:13:01.0000] <roc>
there's footprint

[01:14:00.0000] <roc>
which components are separated? layout presumably. style system? DOM? JS engine?

[01:14:01.0000] <othermaciej>
roc: clearly it's not what I would choose as a strategy, given the choice

[01:14:02.0000] <roc>
different versions have to interact due to iframes etc

[01:15:00.0000] <roc>
you still have to fix crasher and security bugs in each version

[01:15:01.0000] <roc>
the burden gets heavier and heavier with each release

[01:18:00.0000] <mpt>
Like successive editions of the Oxford English Dictionary

[01:18:01.0000] <roc>
mmm, thinking about security just makes me queasy

[01:18:02.0000] <roc>
talk about attack surface

[01:18:03.0000] <mpt>
each of them trying to include all words that have been used in the history of Modern English

[01:19:00.0000] <roc>
well

[01:20:00.0000] <roc>
it's more like each edition has to include a complete copy of the previous edition, plus all the words currently in use

[01:20:01.0000] <MikeSmith>
we should eliminate all the useless words from English

[01:20:02.0000] <MikeSmith>
make them non-conformant for authors

[01:21:00.0000] <MikeSmith>
reduce the complexity of the spec

[01:21:01.0000] <takkaria>
MikeSmith: isn't that pretty much what already happens?

[01:21:02.0000] <roc>
I understand why they're doing what they're doing

[01:21:03.0000] <takkaria>
as in, their use is non-comformant, people still have to understand them

[01:21:04.0000] <MikeSmith>
takkaria - yeah, but that's mostly just through stupidity

[01:22:00.0000] <roc>
but it still seems non-viable for the long term

[01:22:01.0000] <mpt>
They're doing it because it'll make IE8 easier, and they won't be around when the developers of IE17 are cursing them.

[01:23:00.0000] <roc>
maybe they're betting that the Web is going to grind to a halt

[01:23:01.0000] <roc>
but they bet that before and lost

[01:23:02.0000] <mpt>
Well, the same compatibility factors would apply to successive versions of Silverlight, no?

[01:24:00.0000] <mpt>
or whatever the Hypercard du jour is

[01:24:01.0000] <roc>
I don't know what their compat plan for Silverlight is

[01:26:00.0000] <roc>
maybe they'll just do side-by-side; interaction between Silverlight versions is probably very limited

[01:26:01.0000] <roc>
mpt, are you still in Nelson?

[01:27:00.0000] <roc>
maybe MS has some magic technology that makes multiple engines easier than it looks

[01:28:00.0000] <roc>
but the only thing I can think of is some tool that stitches together common code to reduce footprint

[01:29:00.0000] <jgraham>
I would have thought the backwards compatibility problems for Silverlight would be relatively easy to solve since they can always define Silverline n+1 to be easy to implement in the Silverlight n codebase

[01:29:01.0000] <roc>
other way around?

[01:29:02.0000] <mpt>
roc, no, London

[01:30:00.0000] <jgraham>
I mean they can decide Silverlight n+1 will only have features that they can implement easily given their existing Silverlight n code

[01:30:01.0000] <roc>
ah yes, sure.

[01:31:00.0000] <mpt>
jgraham, yeah, but then Silvernight n+m would become unreasonably complicated with all its inherited quirks (similar to how de-facto-HTML would have become in the absence of HTML5, and to some extent is even in HTML5)

[01:32:00.0000] <mpt>
Any language is subject to exactly the same dynamics, I think

[01:32:01.0000] <annevk>
hmm, the anti-competitive, infinite amount of quirks mode switches, has been announced, bah

[01:32:02.0000] <mpt>
whether markup, programming, or human

[01:32:03.0000] <jgraham>
mpt: Perhaps. (How) has Flash managed to avoid the issue?

[01:32:04.0000] <mpt>
jgraham, it's too soon to say. ;-)

[01:33:00.0000] <mpt>
Flash is half the age of HTML

[01:33:01.0000] <roc>
annevk: why anti-compeitive?

[01:33:02.0000] <roc>
Flash does ship duplicate components of some stuff

[01:35:00.0000] <annevk>
of sites start to rely on this behavior we have to emulate it, but hopefully not

[01:35:01.0000] <jgraham>
annevk: it kind of seems like they've taken the least-bad approach

[01:35:02.0000] <jgraham>
from our point of view

[01:36:00.0000] <annevk>
but i'd expect for intranets it's definitely anti-competitive

[01:41:00.0000] <takkaria>
annevk: given that more people are using other browsers than IE thesedays, I would hope that it shouldn't make too much of a difference

[01:42:00.0000] <hsivonen>
oops. I forgot to announce the new HTML parser release

[01:44:00.0000] <roc>
I think we don't track IE quirks closely enough for this tag to matter

[01:44:01.0000] <hsivonen>
are people going to XTech this year?

[01:50:00.0000] <annevk>
i was hoping to

[01:52:00.0000] <takkaria>
grr.  anyone know how to disable the new security certificate warnings in firefox3?

[01:53:00.0000] <Philip`>
Fixed the security certificates?

[01:53:01.0000] <Philip`>
Uh

[01:53:02.0000] <Philip`>
Fix the security certificates?

[01:53:03.0000] <takkaria>
not my server, but it's not letting me check my webmail as a result

[01:54:00.0000] <Philip`>
Oh

[01:54:01.0000] <takkaria>
googling doesn't seem to give me much in the way of help, but persevence may be the key

[01:54:02.0000] <Philip`>
/me knows little about it

[02:03:00.0000] <jgraham>
takkaria: Which version, exactly? I thought they added a "Add to whitelist" type button recently, but it might have been after the last beta

[02:06:00.0000] <jgraham>
hsivonen: re:XTech I suspect not, but I'm not really sure yet

[02:09:00.0000] <Philip`>
/me wonders what happens if he sends two X-UA-Compatible HTTP headers for a page

[02:09:01.0000] <hsivonen>
I won't be presenting and haven't arranged funding, so I'm most likely not going to XTech

[02:10:00.0000] <hsivonen>
Philip`: see, that's wrong with the mindset on this channel. constantly breaking things with edge cases. :-)

[02:10:01.0000] <takkaria>
jgraham: beta 2

[02:12:00.0000] <roc>
Philip`: the latest trunk builds have a way to get around it

[02:13:00.0000] <Philip`>
roc: Do you mean "takkaria: "?

[02:13:01.0000] <roc>
er sorry yes

[02:15:00.0000] <Philip`>
/me also wonders about <meta http-equiv=x-ua-compatible content=ie8> and <meta http-equiv=x-ua-compatible content=IE=8;IE=7> and hopes Microsoft will define this properly somewhere

[02:18:00.0000] <takkaria>
I think you're a little too hopeful there

[02:18:01.0000] <annevk>
how do DOCTYPEs and x-ua-compatible work together?

[02:19:00.0000] <annevk>
can you trigger standards mode without the DOCTYPE?

[02:21:00.0000] <hsivonen>
/me notes that http-equiv=x-ua-compatible is invalid as HTML5 given the current draft

[02:22:00.0000] <annevk>
good

[02:24:00.0000] <Philip`>
The HTTP header isn't invalid for HTML5, though

[02:24:01.0000] <takkaria>
I wonder if IE8 will do XHTML and if it will, how that will interact with the meta tag

[02:38:00.0000] <Philip`>
I guess we'll just have to wait for a (beta?) release and reverse-engineer it

[03:12:00.0000] <MikeSmith>
Is it me, or does it seem kind of odd that the Web Standards Project didn't reckon it was worth having a real public discussion about this before they cooked it up?

[03:12:01.0000] <MikeSmith>
[[

[03:12:02.0000] <MikeSmith>
Microsoft reached out to The Web Standards Project (of which I am a member) and to several other standards-aware developers, and asked for our help in coming up with a better method of allowing developers to “opt in” to proper standards support. The goal was to find a method that was more explicit than the DOCTYPE switch, and could be implemented in any browser, not just IE.

[03:12:03.0000] <MikeSmith>
]]

[03:13:00.0000] <annevk>
they were probably all made to sign nda's and happily obliged so they could get a paid visit to MS

[03:13:01.0000] <MikeSmith>
So they have a discussion about it behind closed doors and the best they can come up with it meta@http-equiv 

[03:14:00.0000] <annevk>
it's just insane that the group that advocated Acid2 now lets MS get away with not supporting it

[03:14:01.0000] <MikeSmith>
something they were well aware was not conformant with the current HTML5 spec

[03:14:02.0000] <annevk>
i doubt wasp is aware of html5 in so much detail

[03:14:03.0000] <takkaria>
I wonder if we'll have a round of "WaSP is dead to me" posts now

[03:15:00.0000] <MikeSmith>
[[

[03:15:01.0000] <annevk>
so far all the standardistas are advocating this insanity

[03:15:02.0000] <MikeSmith>
We considered many syntax options, including a conditional comment-like syntax, processing instructions a la the XML prolog, and even HTML profiles such as those adopted by the Microformats community, but few seemed to fit the job as well as the meta element.

[03:15:03.0000] <MikeSmith>
]]

[03:15:04.0000] <MikeSmith>
what advantages does meta@http-equiv have over a PI?

[03:15:05.0000] <annevk>
they apparently never thought about whether this is the right solution

[03:16:00.0000] <MikeSmith>
a real brain trust

[03:16:01.0000] <annevk>
i'm so amazed Eric Meyer suggests that this would lead browsers to introduce new features faster

[03:16:02.0000] <annevk>
if anything, it's the exact opposite of that

[03:17:00.0000] <annevk>
having to test features in various modes increases the amount of work quadratically (maybe a bit less)

[03:18:00.0000] <MikeSmith>
aside from discussion about whether it's a good idea or not, it'll be interesting to hear their rationale for the choice of meta@equiv over the alternatives

[03:18:01.0000] <MikeSmith>
particuarly the alternative of just using a PI

[03:18:02.0000] <annevk>
PI doesn't work in HTML

[03:19:00.0000] <MikeSmith>
a specific PI would

[03:20:00.0000] <MikeSmith>
for their browser

[03:20:01.0000] <MikeSmith>
concern about making it implementable by other browsers seems like not particularly important

[03:20:02.0000] <annevk>
that would be even less compatible with the HTML language though

[03:21:00.0000] <annevk>
I think they did have that concern is they're trying to get other browsers to join this crazyness

[03:21:01.0000] <annevk>
see the various examples in the Alist Apart article about ="IE7;FF3"

[03:21:02.0000] <MikeSmith>
yeah, well, having a unilateral decision made about it ahead of time

[03:22:00.0000] <MikeSmith>
that's doesn't seem likely to motivate other browser vendors to support

[03:23:00.0000] <annevk>
it's a good thing that IE doesn't have its 90% market share anymore

[03:24:00.0000] <annevk>
that would've made this even worse

[03:24:01.0000] <annevk>
but it's still pretty bad

[03:30:00.0000] <Camaban>
I'm hoping that at the very least, everyone else ignores it

[03:31:00.0000] <annevk>
afaict that's pretty much guaranteed as far as earlier statements of Safari, Mozilla, and Opera representatives count

[03:31:01.0000] <annevk>
regarding this subject

[03:31:02.0000] <annevk>
but please do tell if anyone is reconsidering their position

[03:32:00.0000] <Camaban>
good, I'm not keen on seeing things borked in Opera because someone couldn't be arsed testing in it, and gave it some default old rendering version to use

[03:33:00.0000] <Philip`>
The real problem is that Opera and Safari don't have nice short acronyms, unlike IE and FF/Fx

[03:33:01.0000] <Camaban>
lol

[03:34:00.0000] <Philip`>
(Calling them "S" and "O" just sounds stupid)

[03:34:01.0000] <Camaban>
not to mention Opera mini/mobile/wii

[03:34:02.0000] <Philip`>
and also there's the problem that SeaMonkey and Camino would be unhappy with "FF3"

[03:35:00.0000] <hsivonen>
MikeSmith: I wrote preper docs for &out=gnu: http://wiki.whatwg.org/wiki/Validator.nu_GNU_Output

[03:36:00.0000] <Philip`>
(Will other Trident browsers/embedders have to make use of the "IE7" flags too?)

[03:36:01.0000] <MikeSmith>
hsivonen - looks great

[03:36:02.0000] <MikeSmith>
you might want to add a link to http://www.gnu.org/prep/standards/standards.html#Errors

[03:37:00.0000] <hsivonen>
MikeSmith: oops. yeah

[03:37:01.0000] <hsivonen>
MikeSmith: fixed

[03:39:00.0000] <MikeSmith>
hsivonen - cool. So I hope some other people will try this with URIs and test the error messages with Emacs or whatever

[03:39:01.0000] <Philip`>
/me doesn't like C code with ^L control characters in it

[03:39:02.0000] <MikeSmith>
so that I don't have to :)

[03:40:00.0000] <hsivonen>
MikeSmith: I guess I should add support for this format to html5check.py

[03:40:01.0000] <Lachy>
damn, that ALA article about IE's bug mode switch is sad.

[03:41:00.0000] <Lachy>
especially at the end where he says "I, for one, hope other browser vendors join Microsoft in implementing this functionality." - that would be a complete disaster and I hope no other browsers resort to it

[03:42:00.0000] <Camaban>
Lachy: I kind of think Meyer's article is worse.  Starting off going WTF like everyone else, and then seemingly arguing in favour of it (with reservations)

[03:42:01.0000] <hsivonen>
Lachy: there seems to be a notable disconnect between how ALA-famous designers and how people close to browser vendors see this issue

[03:43:00.0000] <Camaban>
hsivonen: or people who actually believed in the idea of browser sniffing being bad the first time

[03:44:00.0000] <Lachy>
where's Meyer's article?

[03:44:01.0000] <Camaban>
it's the 2nd of this weeks ala articles

[03:44:02.0000] <MikeSmith>
hsivonen - having it supported in html5check.py would certainly seem to make a lot of sense :)

[03:45:00.0000] <Camaban>
I've only very briefly scanned it, but it seems he goes from WTF to kind of supporting it in the space of one article

[03:46:00.0000] <Lachy>
I'll have to read Eric's later.  I'm going to have to write a rebuttal against the technique later and explain why it's a really bad idea and needs to be used as a temporary work around only

[03:47:00.0000] <Lachy>
and why no other browser should ever implement it

[03:47:01.0000] <Philip`>
It would be good to suggest a better idea too

[03:49:00.0000] <Lachy>
I have suggested a better idea before.  Use the bug mode switch for HTML4/XHTML1 DOCTYPES, and always use full standards mode with the HTML5 DOCTYPE

[03:49:01.0000] <Camaban>
I'm slightly apathetic about that, MS got themselves into this situation by doing things badly before, now they want us to bail them out

[03:49:02.0000] <Camaban>
though as a front end coder, I do have a vested interest in IE getting it's act together I guess

[03:50:00.0000] <Lachy>
that allows MS to use the time it will take to transition from HTML4 to HTML5 in order to get IE on par with other browsers and then allow for progressive enhancement

[03:50:01.0000] <hsivonen>
Lachy: if you suggest that, you need a plausible story why IE8 to IE9 with the HTML5 doctype already around the Web wouldn't cause a situation similar to IE6 to IE7

[03:50:02.0000] <Camaban>
I'm not convinced I want to use HTML5 yet, so please don't go suggesting borking HTMl4 and XHTML1

[03:51:00.0000] <Lachy>
unfortunately, we need to discourage wide adoption of the HTML5 DOCTYPE until IE is ready for it

[03:51:01.0000] <hsivonen>
Lachy: yes, indeed. ( http://hsivonen.iki.fi/doctype/#html5 )

[03:55:00.0000] <Lachy>
Aaron's article didn't mention that unknown doctypes incl. <!DOCTYPE html> would make the meta redundant for IE8. I wonder if that was a strategic decision to avoid encouraging early adoption

[03:57:00.0000] <hsivonen>
Lachy: if it was a strategic decision, what's the strategy behind announcing the meta before shipping IE8 beta?

[03:59:00.0000] <Lachy>
hsivonen, I have no idea

[04:03:00.0000] <Lachy>
so how will this affect Acid3? As a matter of principle, I hope Hixie doesn't add the meta element, but that means IE will never support it as-is

[04:03:01.0000] <madmoose>
Nor acid2.

[04:03:02.0000] <Lachy>
indeed

[04:03:03.0000] <madmoose>
Despite their claims to the contrary.

[04:07:00.0000] <annevk>
it should affect acid3 as much as acid2

[04:10:00.0000] <Philip`>
http://www.alistapart.com/articles/fromswitchestotargets - "If a page doesn’t have any version-targting information, then the DOCTYPE will be used as a proxy for version targeting. For example, all the HTML4 and XHTML1 DOCTYPEs will be targeted to IE7 by default. In the future, HTML5 DOCTYPEs might by default be targeted to IE9 or IE10, depending on how things shake out."

[04:13:00.0000] <Philip`>
<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01//EN"> is used little enough that maybe it could be not included in the list of "HTML4 and XHTML1 DOCTYPEs", and so Acid2 would get handled differently

[04:13:01.0000] <gsnedders>
wow. so much has happened last night.

[04:16:00.0000] <MikeSmith>
gsnedders - you pinged me here yesterday but I was away

[04:16:01.0000] <gsnedders>
MikeSmith: in #html-wg, did I not?

[04:16:02.0000] <gsnedders>
I saw there, but I pinged you here as well?

[04:16:03.0000] <gsnedders>
I can't remember :)

[04:19:00.0000] <MikeSmith>
gsnedders - I guess it was on #html-wg mayve

[04:19:01.0000] <gsnedders>
MikeSmith: I saw your response, though

[04:21:00.0000] <MikeSmith>
oh, OK

[04:45:00.0000] <Philip`>
Does anyone happen to have a mechanism for automatically detecting browsers' doctype-sniffing behaviours on various inputs?

[04:54:00.0000] <annevk>
I have one but it doesn't work in IE

[04:54:01.0000] <annevk>
http://tc.labs.opera.com/html/parsing/doctype/001.htm

[04:54:02.0000] <Philip`>
Ah, thanks, but IE is the more interesting case to test :-)

[04:55:00.0000] <annevk>
my IE doesn't let itself easily debug

[04:56:00.0000] <Philip`>
In IE6 I get a mixture of Errors and Quirks Mode

[04:57:00.0000] <annevk>
yeah, me to

[04:57:01.0000] <annevk>
too

[04:59:00.0000] <hsivonen>
MikeSmith: http://about.validator.nu/html5check.py

[04:59:01.0000] <hsivonen>
Now we need someone to script emacs to pipe the current buffer to python html5check.py -geh

[05:07:00.0000] <hsivonen>
annevk: what's the implementation status of Method-Check using OPTIONS?

[05:21:00.0000] <Philip`>
<meta http-equiv="x-ua-compatible" content="ie=edge;ff=feist;o=guts">

[05:22:00.0000] <Dashiva>
funn

[05:22:01.0000] <hsivonen>
:-)

[05:23:00.0000] <hsivonen>
am I the only one who thinks using = in the attribute value is a bad design choice?

[05:23:01.0000] <krijnh>
Why can't IE8 just use the HTML5 doctype as a switch and replace IE with MSIE in conditional comments and move on?

[05:24:00.0000] <Dashiva>
krijnh: Because they're committed to an incomplete implementation, so they'd need a new switch for IE9

[05:24:01.0000] <Philip`>
hsivonen: Why do you think that?

[05:24:02.0000] <krijnh>
<!--[if IE]> would just become <!--[if IEnewandimproved]>

[05:25:00.0000] <krijnh>
Dashiva: all browsers have that issue, why can't they just ship and keep updating/bug fixing

[05:26:00.0000] <Dashiva>
krijnh: That's what everyone else is wondering too

[05:26:01.0000] <krijnh>
Then what is everyone else missing?

[05:27:00.0000] <hsivonen>
Philip`: see what happened with charset= when people omitted quotes

[05:27:01.0000] <Philip`>
People build big complex fragile intranet applications on IE6; they don't build such things on Firefox or Opera or Safari

[05:27:02.0000] <Philip`>
which seems like a significant difference

[05:27:03.0000] <hsivonen>
krijnh: Boeing, Chevron, etc.

[05:28:00.0000] <krijnh>
They can still do that, don't they?

[05:28:01.0000] <krijnh>
Just use the same doctypes we use now, same conditional comments, if needed

[05:28:02.0000] <krijnh>
IE8 should of course still include IE6/7 engines, that's pretty logical

[05:29:00.0000] <Dashiva>
But they probably want people to make big complex fragile intranet applications in IE8 too

[05:29:01.0000] <krijnh>
You can already do amazingly complex things in IE6/7

[05:29:02.0000] <krijnh>
Just not using standards :)

[05:30:00.0000] <hsivonen>
krijnh: if the same intranet has insanely complex stuff depending on IE 5.5, IE 7 and IE 8, switching to Firefox, Safari or Opera will be even harder

[05:31:00.0000] <Dashiva>
Please note the topic, common sense doesn't work. You have to consider business sense

[05:31:01.0000] <krijnh>
Why should you switch to a non-MS UA in an intranet

[05:32:00.0000] <krijnh>
Dashiva: I know, but I don't get it from that point either :)

[05:32:01.0000] <hsivonen>
krijnh: say you wan to upgrade from Windows XP to Ubuntu?

[05:32:02.0000] <krijnh>
hsivonen: and I'm in a huge corporation, where intranets apply?

[05:32:03.0000] <krijnh>
With sysadmins and stuff

[05:33:00.0000] <krijnh>
I think I'm not really into switching to Ubuntu then

[05:33:01.0000] <hsivonen>
krijnh: some corporations are into switching to RedHat, though

[05:33:02.0000] <hsivonen>
or SuSE

[05:34:00.0000] <Camaban>
some run a lot of mac's, and IE/mac is hardly useful anymore

[05:34:01.0000] <krijnh>
Yeah, well then they shouldn't have bought or developed IE only intranet apps

[05:35:00.0000] <krijnh>
I'm fine with a meta thing for IE, I just don't get why Fx and Opera also should be included

[05:35:01.0000] <Camaban>
so as to make it look like a generic internet thing, rather than jsut catering to IE's failings?

[05:36:00.0000] <krijnh>
We're catering to IEs failings every day

[05:36:01.0000] <krijnh>
Why should that be different in the near future? :)

[05:37:00.0000] <annevk>
hsivonen, it will be in Firefox 3 as i understand it

[05:37:01.0000] <Camaban>
/me shrugs

[05:37:02.0000] <krijnh>
That's the perfect world we live in, no?

[05:37:03.0000] <Camaban>
at the moment I generally fix IE6 using liberal use of haslayout, other than that, I don't get 'too' many problems

[05:38:00.0000] <krijnh>
Me neither

[05:38:01.0000] <hsivonen>
annevk: have you seen it in the nightlies yet?

[05:38:02.0000] <krijnh>
Camaban: I just consider that part of our job

[05:38:03.0000] <annevk>
hsivonen, I hope Jonas is on top of it

[05:39:00.0000] <Camaban>
krijnh: it's only part of our job due to IE's previous failings

[05:39:01.0000] <Camaban>
between IE6 and 7, Opera released 4 major versions

[05:39:02.0000] <krijnh>
Camaban: I know, we'll have to live with that

[05:40:00.0000] <Camaban>
if MS are now struggling with how to update their browser, while not screwing up the stuff that their old software did, I'm thinking that's their issue, not somehting to be used to lump us with extra restrictions

[05:40:01.0000] <Camaban>
the reason for HTMl specs in the first place is so that this kind of thing shouldn't be our job

[05:41:00.0000] <krijnh>
We wouldn't have a job in a perfect world..

[05:41:01.0000] <annevk>
hsivonen, if you could push them as well that would be appreciated

[05:41:02.0000] <annevk>
hsivonen, btw, as seen on public-appformats we may need to change the Access-Control header slightly

[05:41:03.0000] <Camaban>
oh we would, there's plenty in web development beyond getting a site to work cross browser

[05:42:00.0000] <krijnh>
In a perfect world there wouldn't be browsers ;)

[05:42:01.0000] <krijnh>
Anyway

[05:43:00.0000] <annevk>
in a perfect world humanity wouldn't exist

[05:43:01.0000] <hsivonen>
annevk: I'll ask sicking

[05:43:02.0000] <annevk>
cool

[05:43:03.0000] <annevk>
perfect world arguments are kind of silly

[05:43:04.0000] <Camaban>
and as Opera/Mozila etc... have managed to do fairly well in the last few years, wanting IE to match them in terms of support is hardly requesting a perfect world

[05:47:00.0000] <hsivonen>
does someone have a WHATWG blog post about the W3C WD drafted?

[05:47:01.0000] <Lachy>
hsivonen, I don't

[05:47:02.0000] <hsivonen>
what about a Slashdot submission?

[05:48:00.0000] <Lachy>
I could submit to slashdot

[05:48:01.0000] <Lachy>
what time is the spec going live?

[06:04:00.0000] <annevk>
interesting

[06:04:01.0000] <annevk>
WaSP will host Acid3: http://www.webstandards.org/2008/01/16/whats-the-best-test-for-acid3/

[06:04:02.0000] <annevk>
Lachy, in theory 5PM your time

[06:05:00.0000] <Lachy>
ok, I'll do it as soon as the press release is published

[06:51:00.0000] <Philip`>
Hmph, Opera doesn't call onload for iframes if I have lots of them :-(

[06:53:00.0000] <Philip`>
Oh, actually, that was because I had infinitely recursing iframes

[07:02:00.0000] <krijnh>
Ow, wait, it's almost April 1 ...

[07:03:00.0000] <krijnh>
annevk: nice post

[07:09:00.0000] <zcorpan_>
Hixie: ping

[07:15:00.0000] <Philip`>
<!doctype html 2> = quirks, <!doctype html 1> = standards

[07:15:01.0000] <Philip`>
(in IE)

[07:16:00.0000] <Philip`>
(<!doctype html 5> = standards too - you're just not allowed 2, 3 or 4)

[07:19:00.0000] <zcorpan_>
<!doctype dtd html 4.>

[07:21:00.0000] <zcorpan_>
<!doctype dtd html 4. transitional//>

[07:22:00.0000] <Philip`>
<!doctype transitional// dtd html 4.>

[07:22:01.0000] <Philip`>
(It just does substring matches)

[07:25:00.0000] <Philip`>
<!doctype netsc dtd xhtml> vs <!doctype netsc dtd html>

[07:25:01.0000] <Philip`>
/me wants to find a good way to work out which order it's doing the substring comparisons in

[07:28:00.0000] <Philip`>
Oh, that's trivial for pairs

[07:48:00.0000] <Lachy>
MikeSmith, is everything still on schedule to publish in the next 5 minutes?

[07:48:01.0000] <MikeSmith>
Lachy - roughly

[07:54:00.0000] <Philip`>
http://philip.html5.org/docs/quirks.txt

[07:56:00.0000] <Philip`>
I don't think that's entirely complete, but I don't know any cases it's wrong on

[07:56:01.0000] <annevk>
HTML5 is published

[07:56:02.0000] <annevk>
http://www.w3.org/TR/html5/

[07:56:03.0000] <annevk>
http://www.w3.org/TR/html5-diff/

[07:56:04.0000] <annevk>
we can party now

[07:57:00.0000] <krijnh>
Congrats :)

[07:57:01.0000] <jdandrea>
w00t!

[07:59:00.0000] <mpt>
awesome

[08:01:00.0000] <Philip`>
(Argh, it's more complex with some " Frameset//" bits...)

[08:04:00.0000] <mpt>
/me wonders if there should be a "roughshod" content model for <ins>, <del>, and <m>

[08:05:00.0000] <Lachy>
/me submitted it to slashdot

[08:06:00.0000] <annevk>
oh, who's doing the WHATWG blog entry?

[08:07:00.0000] <annevk>
"Moments ago the join effort of the W3C HTML WG and WHATWG resulted in publication of two documents in the W3C Technical Report space: ... and ..."

[08:07:01.0000] <Lachy>
maybe hsivonen?

[08:07:02.0000] <Lachy>
if not, you can.

[08:08:00.0000] <hsivonen>
I just submitted to Slashdot.

[08:09:00.0000] <annevk>
ok, i'll try

[08:09:01.0000] <Philip`>
annevk: http://tc.labs.opera.com/html/parsing/doctype/001.htm has some DOCYTPEs

[08:09:02.0000] <hsivonen>
that would be nice. afk

[08:09:03.0000] <Lachy>
hsivonen, I told you I would (and did already)

[08:09:04.0000] <Lachy>
oh well

[08:10:00.0000] <hsivonen>
Lachy: I was following the wrong channel, so I didn't notice you were on the case. 

[08:11:00.0000] <hsivonen>
well, having two entries in the pipeline doesn't hurt

[08:11:01.0000] <hsivonen>
afk for real

[08:11:02.0000] <annevk>
bye

[08:16:00.0000] <annevk>
Lachy, you can publish drafts right?

[08:16:01.0000] <annevk>
I submitted something for review

[08:19:00.0000] <annevk>
"The WHATWG version of this specification is available under a more permissive license." is interesting

[08:20:00.0000] <jgraham_mibbit>
annevk: in your blog post s/join/joint/

[08:21:00.0000] <jgraham_mibbit>
You should probably repeat the bit about it being a FPWD in the body too because people don't read titles

[08:22:00.0000] <annevk>
kk

[08:22:01.0000] <annevk>
can you allow me to post?

[08:23:00.0000] <annevk>
euhm, i can't find the post I drafted anymore

[08:24:00.0000] <jgraham_mibbit>
Dunno. I thought I could post without review before but maybe I was mistaken

[08:25:00.0000] <jgraham_mibbit>
http://blog.whatwg.org/wp-admin/post.php?action=edit&post=131

[08:25:01.0000] <jgraham_mibbit>
I think

[08:26:00.0000] <hsivonen>
I wonder if we are going to make it to the digg front page

[08:26:01.0000] <annevk>
made some changes

[08:26:02.0000] <annevk>
if someone can press publish, allow me to publish, etc. that would be cool

[08:27:00.0000] <hsivonen>
annevk: I can press publish

[08:27:01.0000] <annevk>
ok, i think it's ready now

[08:28:00.0000] <annevk>
so go ahead :)

[08:28:01.0000] <hsivonen>
I already pressed the button. did I do it too early?

[08:28:02.0000] <hsivonen>
the blog is already slow

[08:29:00.0000] <annevk>
seems to be there now, sorry

[08:30:00.0000] <annevk>
it has an awesome long URI

[08:30:01.0000] <annevk>
oops

[08:30:02.0000] <tndH>
the tags got eaten in Lachy's /. post, at least on http://slashdot.org/firehose.pl?op=view&id=480454

[08:30:03.0000] <tndH>
though i suppose that's why /. has editors ;)

[08:30:04.0000] <virtuelv>
draft now public?

[08:31:00.0000] <annevk>
http://blog.whatwg.org/html-5-published-as-w3c-first-public-working-draft

[08:31:01.0000] <annevk>
maybe I should translate it to Dutch

[08:31:02.0000] <krijnh>
Yeah :)

[08:32:00.0000] <annevk>
and everyone here who knows another language than English should do the same so we have a lot of national announcements available on the WHATWG blog

[08:32:01.0000] <virtuelv>
http://reddit.com/r/programming/info/668qq/details/

[08:42:00.0000] <Philip`>
/me wishes he could set Gmail to never put WHATWG messages into the Spam folder

[08:47:00.0000] <annevk>
zcorpan_, I have a hard time understanding how your ignoring is different from mine

[08:56:00.0000] <zcorpan_>
http://digg.com/design/W3C_HTML5_draft_published_2

[09:08:00.0000] <gsnedders>
/me wonders if the IE team will still be alive tomorrow

[09:08:01.0000] <jgraham_mibbit>
/me wonders why they wouldn't be

[09:08:02.0000] <Camaban>
depends if they can run faster than the WaSP team

[09:09:00.0000] <Philip`>
That won't help them, since wasps can fly

[09:09:01.0000] <annevk>
hmm, I get e-mails for comments on my WHATWG blog post?

[09:09:02.0000] <annevk>
and I can't seem to disable that

[09:11:00.0000] <Lachy_>
My post got accepted to slashdot, should be published soon

[09:19:00.0000] <gsnedders>
Lachy_: what post?

[09:59:00.0000] <Philip`>
Rather than <meta>, I think IE should look for a <img src="iexplore.gif" alt="Best viewed in IE $n!"> and fall back to the appropriate rendering mode

[10:02:00.0000] <gsnedders>
:D

[10:18:00.0000] <hsivonen>
yay. Lachy's post on slashdot's front page

[10:26:00.0000] <annevk>
html5-diff is not updated though

[10:26:01.0000] <annevk>
it's a fpwd too

[10:26:02.0000] <annevk>
oh well

[10:36:00.0000] <gsnedders>
http://pastebin.ca/868809 if anyone wants to read over it (and bug me about it making no sense)

[10:54:00.0000] <Lachy_>
http://developers.slashdot.org/article.pl?sid=08/01/22/175243

[10:56:00.0000] <takkaria>
Lachy_: nice to see people missing the point so earlyon

[10:57:00.0000] <jdandrea>
I don't even think they really read it. I think those commenters just like to hear themselves complain.

[11:12:00.0000] <zcorpan_>
hmm. the ie8 meta tag should, for reasonable compat with other browsers, only have an effect if the page has a doctype that triggers full standards mode in other browsers

[11:12:01.0000] <zcorpan_>
i.e. no doctype and quirky doctypes override the meta

[11:13:00.0000] <zcorpan_>
otherwise pages start to use the ie8 meta with no doctype and expect standards mode

[11:14:00.0000] <Hixie>
i expect, in 5 years, to see a large number of pages say <meta http-equiv="X-UA-Compatible" content="IE=edge" />

[11:14:01.0000] <Hixie>
(though i expect a majority not to have the flag at all)

[11:14:02.0000] <zcorpan_>
right

[11:14:03.0000] <zcorpan_>
at which point they might be tempted to introduce a new switch mechanism

[11:15:00.0000] <Ketsuban>
I expect <!--[if IE]><meta http-equiv="X-UA-Compatible" content="IE=edge"><![endif--> and <!--[if IE]><meta http-equiv="X-UA-Compatible" content="IE=edge" /><![endif--> depending on DOCTYPE. =P

[11:15:01.0000] <Ketsuban>
<![endif]-->*

[11:16:00.0000] <zcorpan_>
why the cc?

[11:16:01.0000] <Ketsuban>
Because it's a pointless piece of code if other UAs don't implement it.

[11:16:02.0000] <Philip`>
To hide it from HTML5 validators

[11:17:00.0000] <zcorpan_>
people don't hide <meta noimagetoolbar> with cc

[11:17:01.0000] <Ketsuban>
I'd love it if other UAs had conditional comments too - if I had a penny for every time I've wanted <!--[if Opera]>...<![endif]--> I'd be richer than I am.

[11:18:00.0000] <zcorpan_>
if you file a bug everytime you wanted a cc for opera, perhaps you wouldn't need it anymore :)

[11:19:00.0000] <zcorpan_>
(i.e. not about the lack of cc, but for the reason you want to use a cc)

[11:19:01.0000] <Ketsuban>
I do file bugs, but that's only a future fix for any problems, and sometimes the problem I've run into is an undefined or ambiguous case in the specification. :P

[11:19:02.0000] <Philip`>
Ketsuban: Use <![CDATA[ stuff that only Opera should display ]]> and it'll be an invisible comment in Firefox :-)

[11:20:00.0000] <zcorpan_>
that doesn't work if what you want to include contains >

[11:21:00.0000] <Ketsuban>
At any rate what I have now works in Firefox and IE7, should work in Opera 9.5, works in Opera 9.25 with the exception of the known quantisation error for values > 20.47em, probably works in Safari and Konqueror but hasn't been tested.

[11:21:01.0000] <Philip`>
zcorpan_: It does work, as long as it doesn't contain a > after two more ]s than [s

[11:21:02.0000] <zcorpan_>
Philip`: > will truncate the comment in firefox

[11:22:00.0000] <Philip`>
Oh

[11:22:01.0000] <Philip`>
Good point :-)

[11:23:00.0000] <zcorpan_>
furthermore you can't use markup in cdata, which makes it not very interesting even if it didn't truncate the comment in fx

[11:23:01.0000] <zcorpan_>
(and you can't use cdata sections in <script> or <style>, either)

[11:23:02.0000] <Philip`>
Okay, maybe it's not an absolutely perfect solution :-(

[11:24:00.0000] <zcorpan_>
works if you want to say "ZOMG i couldn't be bothered to test in opera" :)

[11:26:00.0000] <Philip`>
<![CDATA[ Here's a nickel, kid. Get yourself a better browser. ]]>

[11:27:00.0000] <Ketsuban>
I already have a big ugly red <div> telling users of IE6 and below to upgrade to IE7. :P

[11:33:00.0000] <Hixie>
i wonder if the timing of the IE8 quirks mode switch was timed to match the release of html5

[11:40:00.0000] <jasonw22>
is html5 support planned for ie8?

[11:42:00.0000] <roc>
It would be useful if there was some comment from Webkit people on the Safari blog about the new IE switch

[11:43:00.0000] <Hixie>
jasonw22: html5 likely won't be done by the time ie8 ships

[11:43:01.0000] <Hixie>
roc: i believe they are working on it, but i could be wrong

[11:43:02.0000] <roc>
cool

[11:43:03.0000] <Hixie>
othermaciej would know

[11:45:00.0000] <jasonw22>
Hixie, I guess I just didn't understand what you meant, "i wonder if the timing of the IE8 quirks mode switch was timed to match the release of html5"

[11:49:00.0000] <hdh>
he means the first W3C stamped WD

[11:53:00.0000] <Hixie>
right

[11:53:01.0000] <Hixie>
we released the first "public" working draft today

[11:54:00.0000] <jasonw22>
ah, got it

[11:58:00.0000] <Hixie>
holy crap, the html5 press release didn't once mention xhtml

[11:58:01.0000] <Hixie>
and only once mentioned xml

[12:01:00.0000] <gsnedders>
http://pastebin.ca/868809 — any comments?

[12:04:00.0000] <roc>
yeah. Just because there's not much wikipedia Theora content now doesn't mean there couldn't be in the future

[12:06:00.0000] <gsnedders>
roc: people aren't going to create content unless decoders are widespread

[12:06:01.0000] <roc>
people with an agenda might

[12:06:02.0000] <roc>
NBC is going to stream Olympics footage via Silverlight, that's not widespread

[12:07:00.0000] <gsnedders>
So I have an agenda? I would only use a codec if I can rely on it being supported for the vast majority of my site's users

[12:07:01.0000] <gsnedders>
(and even then only a standardised codec)

[12:07:02.0000] <Philip`>
Hmm, now I can emulate IE's quirks-mode algorithm for the ~550 unique doctypes on ~15K pages, except for <!doctype html public "-//"AOL Hometown//html 3.0 transitional//en"> ...

[12:08:00.0000] <roc>
wasn't I clear?

[12:08:01.0000] <Philip`>
Oh, and that's just broken because it's got odd quotes, which I'm not trying to handle

[12:08:02.0000] <roc>
Microsoft has an agenda -> Microsoft pays content vendors to use Silverlight even though people have to download the viewer

[12:09:00.0000] <roc>
Wikipedia has an agenda -> publishes Theora content even though people have to download the viewer (actually though, they don't, the Java viewer is OK)

[12:09:01.0000] <gsnedders>
roc: I took the comments to be only partially related, and the former to be related to Theora too

[12:10:00.0000] <Philip`>
Does anyone happen to know why "strings -el mshtml.dll" shows "http://www.w3.org/TR/REC-html40/strict.dtd" amongst a list of doctype-detection strings? As far as I can tell, it's not actually used for anything...

[12:13:00.0000] <roc>
so it doesn't follow that technical superiority is a cast-iron requirement. It's possible that Wikipedia and other sites might just start using Theora for ideological reasons and that could drive client vendors to support it.

[12:18:00.0000] <Philip`>
Exception in thread "pool-1-thread-153" java.lang.StackOverflowError at java.util.regex.Pattern$Loop.match(Pattern.java:4179) at java.util.regex.Pattern$GroupTail.match(Pattern.java:4111) ...

[12:18:01.0000] <Philip`>
Hmm

[12:29:00.0000] <Philip`>
Oops, I was wrong about the AOL Hometown thing, that was just a bug in my code :-(

[12:30:00.0000] <Philip`>
I'm slightly sure that http://philip.html5.org/docs/quirks.txt is now correct

[12:36:00.0000] <webben>
I'm vaguely remembering someone providing some stats about doctype distribution.

[12:36:01.0000] <webben>
I'm trying to put a rough figure on how much of the web depends on standards vs quirks mode.

[12:37:00.0000] <Philip`>
I can give you information about 15K pages from dmoz.org, and what proportion IE treats as standards vs quirks

[12:37:01.0000] <jasonw22>
http://ejohn.org/blog/meta-madness/

[12:41:00.0000] <webben>
Philip`: is that info online already or do you mean you'd need to run your tests?

[12:46:00.0000] <Philip`>
webben: It's not online in a summarised form anywhere, but I've already got the data and can stick it in a table easily

[12:47:00.0000] <webben>
Philip`: Are you able to differentiate between IE7 and IE6 (e.g. for quirks mode triggered by XML prolog)?

[12:47:01.0000] <webben>
I'd be interested to see that :)

[12:49:00.0000] <Philip`>
webben: Hmm, I'd have to modify my code (which would be easy iff someone can say exactly what to change it to) and re-run it (which would take about thirty seconds), so it could be possible

[12:52:00.0000] <webben>
Did they change anything about standards/quirks in IE7 other than not switching to quirks when there's an XML prolog?

[12:55:00.0000] <gsnedders>
webben: nope

[12:55:01.0000] <webben>
Philip`: Any other info you'd need?

[12:56:00.0000] <gsnedders>
dunno if anything apart from XML prologs get through before it, though, FWIW

[12:56:01.0000] <Philip`>
webben: I'll say nope too, and with more justification since I've just tried IE7 on a few hundred doctypes and it does the same as IE6

[12:56:02.0000] <Philip`>
(when considering just the part inside the <!doctype...> string)

[12:57:00.0000] <Philip`>
webben: It would be helpful to know what an XML prolog is

[12:57:01.0000] <webben>
hehe

[12:57:02.0000] <webben>
I see.

[12:57:03.0000] <webben>
How much stuff is that looks vaguely like an XML prolog, but isn't?

[12:57:04.0000] <Philip`>
Compare e.g. <?xml ""'?> vs <?xml "" '?>

[12:57:05.0000] <webben>
*is there

[12:57:06.0000] <annevk>
I think he meant XML declaration

[12:57:07.0000] <gsnedders>
is <?…?> an XML prolog

[12:57:08.0000] <webben>
oh 

[12:57:09.0000] <webben>
yeah I mean the declaration

[12:58:00.0000] <webben>
I think that is the prolog

[12:58:01.0000] <webben>
isn't the generic term processing instruction?

[12:58:02.0000] <annevk>
the XML prolog is everything up to including the DOCTYPE

[12:58:03.0000] <webben>
oh right, okay

[12:58:04.0000] <annevk>
well, everything until the root element start tag

[12:59:00.0000] <gsnedders>
/me starts to correct annevk on that but gets beaten

[12:59:01.0000] <Philip`>
webben: http://philip.html5.org/data/pis.html is stuff that looks vaguely like an XML prolog or whatever it's called

[12:59:02.0000] <annevk>
webben, you're not the only one btw: http://www.google.com/search?q=xml+prolog+declaration

[12:59:03.0000] <webben>
gsnedders: Yeah, that's what the spec says: http://www.w3.org/TR/REC-xml/#sec-prolog-dtd

[13:01:00.0000] <annevk>
/me curses BNF

[13:01:01.0000] <webben>
I see distinguishing doctype and prolog is an MSism: http://msdn2.microsoft.com/en-us/library/bb250496.aspx

[13:02:00.0000] <webben>
how /very/ helpful of them

[13:02:01.0000] <Philip`>
So... It looks like /^(\s|<\?xml [^>]*>)*$doctype/i is a reasonable approximation for what IE7 accepts

[13:03:00.0000] <Philip`>
and $doctype is (?xi) <!doctype [^>\\s]* ( ( \\s+ | \"[^\"]*\" | '[^']*' ) [^>\\s]* )* > as exactly as I can make out

[13:03:01.0000] <Philip`>
Uh, but with the double-slashes unslashed

[13:03:02.0000] <webben>
Regular expressions: how to make anything instantly more confusing ;)

[13:03:03.0000] <Philip`>
and the slash-quotes unslashed too

[13:03:04.0000] <annevk>
if someone can convert all BNF in http://dev.w3.org/2006/waf/access-control/ and tell me the result that would be cool :)

[13:04:00.0000] <Philip`>
I added whitespace to the doctype one for readabilty :-p

[13:04:01.0000] <webben>
annevk: convert it into what? Human?

[13:05:00.0000] <Philip`>
Hmm, actually, I think detecting IE7 vs IE6 would take too much time for me to bother with tonight, since I'd have to change all my string matching and everything

[13:06:00.0000] <webben>
fair enough ... it's worth knowing the difference (at least AFAI am concerned)

[13:07:00.0000] <Philip`>
I'll see if I can work on that during the day tomorrow

[13:08:00.0000] <webben>
awesome :)

[13:09:00.0000] <Hixie>
hsivonen: http://developers.slashdot.org/comments.pl?sid=426306&cid=22143528

[13:09:01.0000] <jgraham>
lol

[13:10:00.0000] <Philip`>
Counting doctypes (not pages), I see 3598 IE-quirks, 4165 IE-standards

[13:11:00.0000] <Philip`>
and then something like 7-8K pages with no doctype being quirks

[13:11:01.0000] <Philip`>
so actually I do need to change all my string matching and everything before being able to get more useful numbers for that

[13:12:00.0000] <Philip`>
but still it'll be about half with no doctype, and half of the remainder with quirky doctype

[13:16:00.0000] <webben>
Philip`: interesting, thanks for that :)

[13:21:00.0000] <Philip`>
webben: http://philip.html5.org/data/doctypes.txt is the individual counts, after replacing all whitespace by spaces so it displays better

[13:26:00.0000] <annevk>
sorry, to ABNF

[13:26:01.0000] <annevk>
oops

[13:35:00.0000] <Philip`>
http://www.zeldman.com/2008/01/22/in-defense-of-version-targeting/

[13:43:00.0000] <gsnedders>
Hixie: "What's wrong with it?" — it belongs in 1999! :P

[13:45:00.0000] <Hixie>
well i agree it's a bit late, but there's not much i can do about that

[13:48:00.0000] <gsnedders>
sad that half the comments clearly haven't even read the PR yet alone the spec itself

[13:49:00.0000] <inimino>
congrats on WD publication, all

[13:50:00.0000] <gsnedders>
FWIW, for those who don't follow me on Twitter (i.e., most of you): "FPWD of HTML 5 published. Sometimes I wondered if this day would ever come."

[13:52:00.0000] <Hixie>
you know, i'm amused

[13:52:01.0000] <Hixie>
when whatwg got slashdotted, the comments were quite positive

[13:53:00.0000] <Hixie>
e.g. last october when we published html5

[13:53:01.0000] <Hixie>
but now that the w3c gets slashdotted, the comments are quite negative

[13:53:02.0000] <Hixie>
i wonder if maybe we were better off without hte w3c stamp

[13:53:03.0000] <ray>
maybe you're better off not reading the slashdot comments :)

[13:54:00.0000] <Dashiva>
Well, there are also the comments saying "Finally Opera and Mozilla and Adobe will have to implementing standards" :)

[13:54:01.0000] <Dashiva>
*to start

[13:56:00.0000] <gsnedders>
life in the HTML WG is fun

[13:56:01.0000] <Philip`>
Has anybody actually told the HTML WG that the spec has been published now?

[13:57:00.0000] <Hixie>
oh btw, http://www.acidtests.org/

[13:57:01.0000] <gsnedders>
I don't think so, actually.

[13:57:02.0000] <gsnedders>
Hixie: lovin' the references thrown around the page :)

[13:58:00.0000] <gsnedders>
Hixie: how is "Content-Type" tested in Acid3?

[13:58:01.0000] <othermaciej>
roc: what sort of comment did you have in mind?

[13:58:02.0000] <roc>
I dunno

[13:58:03.0000] <roc>
whether you think it's a good idea

[13:58:04.0000] <roc>
whether you'll implement it

[13:58:05.0000] <annevk>
Hixie, nice

[13:58:06.0000] <Hixie>
gsnedders: several ways

[13:58:07.0000] <Hixie>
gsnedders: mostly near <object>

[13:59:00.0000] <roc>
Aaron Gustafson said "I hope other browsers implement this!" so I think it's a good idea to let him know we won't

[14:03:00.0000] <hdh>
http://www.w3.org/QA/2008/01/ie8-versioning-mechanism.html label the ALA article as "WASP article"

[14:03:01.0000] <Philip`>
In IE: http://software.hixie.ch/utilities/js/live-dom-viewer/?%3Cbody%3E%0D%0A%3Cscript%3Edocument.createElement('bar')%3C%2Fscript%3E%0D%0A%3Cfoo%3Efoo%3C%2Ffoo%3E%0D%0A%3Cbar%3Ebar%3C%2Fbar%3E%0D%0A%3Cbaz%3Ebaz%3C%2Fbaz%3E%0D%0A

[14:04:00.0000] <Philip`>
<bar> gets parsed like a recognised element

[14:04:01.0000] <Hixie>
woah

[14:05:00.0000] <Hixie>
freaky

[14:05:01.0000] <Philip`>
(via http://intertwingly.net/blog/2008/01/22/Best-Standards-Support#c1201006277 )

[14:05:02.0000] <Hixie>
http://software.hixie.ch/utilities/js/live-dom-viewer/?%3Cbody%3E%0D%0A%3Cscript%3Edocument.createElement('bar')%3C%2Fscript%3E%0D%0A%3Cfoo%3Efoo%3C%2Ffoo%3E%0D%0A%3Cbar%3Ebar%3C%2Fbar%3E%0D%0A%3Cbaz%3Ebaz%3C%2Fbaz%3E%0D%0A

[14:05:03.0000] <Hixie>
well well well

[14:05:04.0000] <Hixie>
this changes matters

[14:05:05.0000] <annevk>
you're not going to host the tests on acidtests.org?

[14:08:00.0000] <Hixie>
acid3 probably will be

[14:08:01.0000] <Philip`>
<script>/* HTML5 compatibility toolkit */ document.createElement('section'); document.createElement('header'); ...</script>

[14:10:00.0000] <Hixie>
Philip`: actually i'm not sure this really changes much at all, except that it means our life is going ot be way easier

[14:11:00.0000] <Philip`>
Also excanvas should just do a document.createElement('canvas') instead of its funny tree-reconstruction tricks

[14:11:01.0000] <Philip`>
/me wonders why nobody knew about this before

[14:12:00.0000] <Philip`>
s/nobody/a very small though non-zero number of people/

[14:19:00.0000] <othermaciej>
roc: we usually say more what we *are* going to do (or more specifically what we already *have* done) than what we're not going to do, but I'll see if there is something useful to say

[14:19:01.0000] <othermaciej>
roc: has anyone from Mozilla posted on the topic?

[14:21:00.0000] <othermaciej>
roc: for what it's worth, unofficially, we want to stick to just quirks and standards mode and not lock in new modes

[14:21:01.0000] <roc>
yeah

[14:21:02.0000] <roc>
I posted

[14:21:03.0000] <Philip`>
No Dashboard compatibility mode?

[14:22:00.0000] <roc>
http://weblogs.mozillazine.org/roc/archives/2008/01/post_2.html

[14:22:01.0000] <roc>
http://weblogs.mozillazine.org/roc/archives/2008/01/slipping_the_ba.html

[14:22:02.0000] <roc>
it's not an official position, but Mozilla doesn't usually have official positions :-)

[14:23:00.0000] <othermaciej>
roc: and I think the whole thing is a bad idea, but I'm not sure publicly criticizing Microsoft's browser strategy is necessarily appropriate for the webkit blog

[14:23:01.0000] <Philip`>
Is "post_2" just what happens when you auto-URLify "<META HTTP-EQUIV="X-BALL-CHAIN">"? :-)

[14:23:02.0000] <roc>
something like that yeah

[14:23:03.0000] <roc>
othermaciej: I understand

[14:24:00.0000] <roc>
maybe a response in some other forum then

[14:24:01.0000] <othermaciej>
Philip`: we do also have the Dashboard quirks mode, but I hope that can be phased out because it sucks to have a mode that's not just anti-standards but also anti-web-compatibility

[14:25:00.0000] <gsnedders>
Dashboard quirks mode?

[14:25:01.0000] <jacobolus>
Philip`: is there any reason whatsoever for people to use a quirky doctype?

[14:25:02.0000] <roc>
I didn't really slam their strategy the way others are slamming it. I think it's dumb for them but hopefully it won't affect us too much if we just ignore it.

[14:25:03.0000] <hsivonen>
Hixie: thanks for the pointer

[14:26:00.0000] <jacobolus>
Philip`: or do they just do it for fun?

[14:26:01.0000] <Philip`>
jacobolus: I'd assume (based on no evidence or experience) that most people copy and paste the quirky doctype from somewhere, without understanding what it's for

[14:27:00.0000] <roc>
but Microsoft and the ALA people were playing it up as some sort of generous cross-browser approach to compatibility and I think we should make it clear it's not

[14:27:01.0000] <Philip`>
jacobolus: but some people might legitimately want compatibility with IE5.5, so they need to make other browsers act as much like IE5.5 as possible, and they still want to use validators, so they use a quirky doctype

[14:28:00.0000] <jacobolus>
ah, validators.  okay

[14:29:00.0000] <gsnedders>
They need some way to not break existing content, as so blatantly caused issues with naïve assumptions that all IE versions forever and ever will have the same bugs as happened with IE7

[14:29:01.0000] <Philip`>
jacobolus: I've got no idea if anybody actually uses that reason, though

[14:30:00.0000] <jacobolus>
Philip`: seems like that's a bug in the validator then though; it should just assume no doctype = quirks, no?

[14:30:01.0000] <Philip`>
jacobolus: The (W3C) validator doesn't know about quirks at all, so it couldn't assume something like that

[14:30:02.0000] <jacobolus>
Philip`: I guess it just seems surprising that ~half the pages with doctypes would have quirks doctypes, if that does nothing useful

[14:32:00.0000] <jacobolus>
so does adding quirks doctype do anything useful for the w3c validator? it just treats it the same as any doctype?

[14:33:00.0000] <gsnedders>
jacobolus: for the spec'd ones, yeah

[14:33:01.0000] <Philip`>
jacobolus: 98% of pages have <head> even though that does nothing useful (since it's optional and almost never has attributes)

[14:33:02.0000] <jacobolus>
fair enough :)

[14:33:03.0000] <gsnedders>
jacobolus: for the non-standards ones it throws an error

[14:34:00.0000] <jacobolus>
Philip`: but people are told to use <head>.  Does anyone recommend using a quirks doctype?

[14:36:00.0000] <jacobolus>
don't bother answering that. :)

[14:37:00.0000] <Philip`>
jacobolus: People recommend using HTML4 Transitional, which is quirks

[14:38:00.0000] <Philip`>
though I've not seen anybody recommending <!DOCTYPE !DOCTYPE html PUBLIC \"-//W3C//DTD HTML 4.01 Transitional//EN\"> so that was presumably all down to the site's author

[14:42:00.0000] <annevk>
heh

[14:42:01.0000] <jacobolus>
:D

[14:42:02.0000] <annevk>
i got two comments on HTML5 by private e-mail

[14:42:03.0000] <annevk>
(from one person)

[14:42:04.0000] <annevk>
both were CSS requests

[14:54:00.0000] <annevk>
(got another e-mail from him saying his friend pointed out those were CSS3 features)

[14:54:01.0000] <jacobolus>
annevk: is http://dev.w3.org/2006/waf/access-control/ already implemented by opera?

[14:55:00.0000] <annevk>
no

[14:55:01.0000] <annevk>
hopefully in due course

[14:56:00.0000] <jacobolus>
so only upcoming mozilla browsers have it so far?

[14:57:00.0000] <annevk>
othermaciej, the WebKit blog could say that you don't plan to support this in WebKit

[14:58:00.0000] <annevk>
jacobolus, yeah, and they have bugs :)

[14:58:01.0000] <annevk>
(and the spec is still changing slightly now and then :-()

[15:00:00.0000] <zcorpan_>
Philip`: ie7 skips PIs that start with "<?xml " (last being U+0020)... and then you have the funny > in quotes parsing

[15:00:01.0000] <zcorpan_>
<?xml ">

[15:00:02.0000] <zcorpan_>
<?xml ">">

[15:03:00.0000] <Philip`>
where "funny > in quotes parsing" means

[15:03:01.0000] <Philip`>
(?xi) <\?xml [ ] [^>\s]* ( ( \s+ | "[^\"]*" | '[^']*' ) [^>\s]* )* >

[15:03:02.0000] <Philip`>
?

[15:03:03.0000] <Philip`>
Oops

[15:03:04.0000] <Philip`>
(?xi) <\?xml [ ] [^>\s]* ( ( \s+ | "[^"]*" | '[^']*' ) [^>\s]* )* >

[15:04:00.0000] <Philip`>
(That's what it seems to do for <!doctype>, and <?xml > looks about the same)

[15:05:00.0000] <zcorpan_>
well, not sure. ie reparses if you hit an unexpected EOF

[15:05:01.0000] <zcorpan_>
so <?xml "> might be equivalent to &lt;?xml ">

[15:05:02.0000] <othermaciej>
vote up HTML5 on reddit: http://reddit.com/r/programming

[15:06:00.0000] <Philip`>
Is it possible to get an unexpected EOF inside the <?xml..., while still having a doctype and some actual content in your page?

[15:07:00.0000] <zcorpan_>
possible, yes. likely? no

[15:08:00.0000] <Philip`>
Hmm, I think I'll be happy enough to ignore the EOF reparsing case :-)

[15:08:01.0000] <zcorpan_>
sounds reasonable :)

[15:09:00.0000] <annevk>
roc, nice posts btw

[15:09:01.0000] <annevk>
I should probably do one with a list of arguments too :)

[15:14:00.0000] <zcorpan_>
perhaps we should try to make them use an attribute on <html> instead of a meta

[15:14:01.0000] <Philip`>
That would be invalid HTML4

[15:15:00.0000] <zcorpan_>
there's a version='' attribute

[15:16:00.0000] <Philip`>
Not in Strict

[15:17:00.0000] <zcorpan_>
hmm, you're right

[15:18:00.0000] <Philip`>
(I'm only right because I looked it up to check :-) )


2008-01-23
[16:20:00.0000] <jacobolus>
ooh, this one is fun: http://ejohn.org/blog/meta-madness/

[16:21:00.0000] <hober>
yup

[16:22:00.0000] <jacobolus>
it's a fun day to be Chris Wilson

[16:22:01.0000] <hober>
fsvo fun

[16:46:00.0000] <zcorpan_>
Hixie: have you confirmed your theory about http://ln.hixie.ch/?start=1190803943&count=1 ? :)

[17:31:00.0000] <Hixie>
zcorpan_: yeah, most people seem to use the tip line

[17:35:00.0000] <Philip`>
I really should get a blog, just so I can put invalid UTF-8 in its title and try trackbacking people who use XHTML

[17:37:00.0000] <Hixie>
heh

[17:41:00.0000] <jacobolus>
haha

[17:43:00.0000] <othermaciej>
Philip`: you're mean

[17:44:00.0000] <othermaciej>
jacobolus: Microsoft is getting more support for their move than I would have expected

[17:45:00.0000] <jacobolus>
othermaciej: the comments everywhere seem overwhelmingly negative to me

[17:45:01.0000] <othermaciej>
jacobolus: they got some positive remarks from big shot web standards people like Eric Meyer

[17:45:02.0000] <othermaciej>
and some supportive comments from web developers

[17:45:03.0000] <othermaciej>
I do see some negativity as well

[17:46:00.0000] <othermaciej>
though much of it from Mozilla-affiliated bloggers

[17:46:01.0000] <jacobolus>
yeah, and Zeldman

[17:47:00.0000] <jacobolus>
I really don't think Meyer et al. have done a great job explaining their 180 on the question though

[17:47:01.0000] <Hixie>
i didn't understand eric's article

[17:47:02.0000] <Hixie>
it seemed uncharacteristically rambly

[17:47:03.0000] <othermaciej>
I was unable to follow Eric's reasoning

[17:47:04.0000] <othermaciej>
I do think arguments could be made for Microsoft's choice

[17:47:05.0000] <othermaciej>
I don't know if they have been expounded that well

[17:48:00.0000] <jacobolus>
I think mostly that those arguments underestimate the benefits of getting browsers on the same page

[17:48:01.0000] <hdh>
/me doesn't get the post's graphics

[17:49:00.0000] <Hixie>
the strange thing about this move is that it would make a lot of sense if they had 95% of the market and wanted to block competition

[17:49:01.0000] <jacobolus>
which is odd because the same people have spent years explaining the other side

[17:49:02.0000] <Hixie>
but in their position, bleeding market share, it actually hurts them

[17:49:03.0000] <othermaciej>
Hixie: so it's 5 years late?

[17:50:00.0000] <Hixie>
and it could be near-fatal if they ever get to low enough numbers that they are no longer the leading browser

[17:50:01.0000] <Hixie>
othermaciej: yes

[17:50:02.0000] <jacobolus>
othermaciej: I guess the main thing is I don't see the arguments working out at all for public-facing websites

[17:50:03.0000] <hdh>
does he mean to say a) it's like cc, numbered, documented and b) doesn't affect other browsers like "like Gecko"?

[17:50:04.0000] <jacobolus>
where any kind of x-browser compat is desired whatsoever

[17:51:00.0000] <othermaciej>
jacobolus: for public-facing web sites that are actively maintained, they'd probably want to either upgrade the switch for every IE release, or never upgrade it and be stuck in IE7 mode forever

[17:51:01.0000] <othermaciej>
or something

[17:51:02.0000] <jacobolus>
the idea that this new switch will allow microsoft to do a better job innovating seems completely ludicrous

[17:52:00.0000] <othermaciej>
I don't think they are interested in innovating on top of standards-based web technologies

[17:52:01.0000] <othermaciej>
so it doesn't much matter

[17:53:00.0000] <jacobolus>
sorry, i mean bug fixing: “This actually makes browser vendors more susceptible to pressure to fix their bugs, and less fearful of doing so.”

[17:53:01.0000] <jacobolus>
I just don't see that increased pressure coming out of this

[17:54:00.0000] <othermaciej>
I don't think it increases pressure

[17:54:01.0000] <othermaciej>
it somewhat decreases reasons *not* to fix bugs

[17:55:00.0000] <othermaciej>
but also decreases the web-wide benefit of fixing bugs

[17:55:01.0000] <jacobolus>
someone should start some sort of betting pool about percentage of pages which use the new meta tag within 6 months of IE 8 being out

[17:55:02.0000] <jacobolus>
assuming they don't alter their plans between now and then

[17:56:00.0000] <Philip`>
Percentage of which finite set of pages?

[17:56:01.0000] <othermaciej>
probably fewer than the percentage of users using it

[17:56:02.0000] <othermaciej>
(using IE8 that is)

[17:56:03.0000] <jacobolus>
Philip`: I dunno… I'm mostly joking :)

[17:57:00.0000] <Philip`>
Only "mostly"? :-)

[17:57:01.0000] <jacobolus>
well, in the sense that I don't actually plan to make any bets, but would be interested in seeing the studies about adoption

[17:58:00.0000] <Philip`>
I'd just make a CGI script which produces an infinite number of pages using the meta tag

[17:59:00.0000] <jacobolus>
and given that there are already infinitely many without, it becomes impossible to compare?

[18:01:00.0000] <Philip`>
If someone else has an infinite set of pages without the meta tag, where each is identified by some URL µ, I'll make a CGI script which you call like 'exciting.cgi?id=n;w=µ' for any positive integer n, and therefore there'll be infinitely many more pages with my meta tag than there are others without

[18:02:00.0000] <Philip`>
and you can't argue with maths!

[18:03:00.0000] <roc>
sorry

[18:03:01.0000] <roc>
those sets are the same size

[18:04:00.0000] <Philip`>
Hmph

[18:05:00.0000] <Philip`>
How about I have 'exciting2.cgi?ids=a,b,c,...' where you pass a comma-separated set of URLs, for each member of the power set of URLs

[18:06:00.0000] <Philip`>
(Is there any RFC that requires URLs to be of finite length?)

[18:09:00.0000] <roc>
as long as URLs are of finite length, you lose

[18:10:00.0000] <Hixie>
not really, a large enough number is all you really need

[18:10:01.0000] <Hixie>
assuming you're trying to bias a result

[18:10:02.0000] <Hixie>
bloo2, meet Philip` 

[18:10:03.0000] <Hixie>
Philip`, meet bloo2 

[18:10:04.0000] <Hixie>
you have both worked on studies of the Web

[18:11:00.0000] <Hixie>
markup and that kind of thing

[18:11:01.0000] <bloo2>
hi philip 8-}

[18:11:02.0000] <jacobolus>
Philip`: wait a second there, both are countably infinite

[18:11:03.0000] <jacobolus>
Philip`: if you can make an uncountable set of pages, you can certainly win the bet though

[18:11:04.0000] <Hixie>
aren't URIs countable by definition?

[18:11:05.0000] <Hixie>
since they're bit strings

[18:12:00.0000] <jacobolus>
Hixie: that's why making an uncountable set of them is damn impressive

[18:12:01.0000] <roc>
yes

[18:12:02.0000] <Hixie>
ok, just checking

[18:12:03.0000] <roc>
Philip` is going to argue that infinite URIs are allowed by the spec

[18:12:04.0000] <Philip`>
bloo2: Good morning

[18:12:05.0000] <jacobolus>
lol

[18:12:06.0000] <Hixie>
i stick by my original point that if you're just trying to bias a sample, though, you just need a large number of uris, not an infinite number

[18:12:07.0000] <Hixie>
but i wasn't here for the start of the discussion, so...

[18:13:00.0000] <Philip`>
If you're trying to bias a sample, the best thing to do is be the person who picks the sample

[18:13:01.0000] <Hixie>
indeed

[18:14:00.0000] <Hixie>
my prices start at $1000.

[18:14:01.0000] <Hixie>
depending on how much of a skew you want.

[18:14:02.0000] <bloo2>
philip`: Hixie had mentioned you'd done some work in the area recently, but I hadn't followed up. Pleased to meet you (hrm. Must register to send a prv msg...have to look in to that)

[18:15:00.0000] <jacobolus>
Hixie: the start of it was my curious musing about the adoption of IE's new meta tag, after IE8 has been on the market a few months, plus an apparently ill-advised reference to betting :)

[18:15:01.0000] <Hixie>
hah

[18:16:00.0000] <jacobolus>
Philip`: a better bet might be about how whether microsoft.com uses their new tag ;)

[18:16:01.0000] <Philip`>
bloo2: Indeed - I did some stuff like http://canvex.lazyilluminati.com/survey/2007-07-17/analyse.cgi/index a while ago, and looked at more/different things recently

[18:17:00.0000] <Philip`>
jacobolus: Which part of microsoft.com? :-)

[18:17:01.0000] <jacobolus>
but I still wouldn't put real money on it :)

[18:17:02.0000] <jacobolus>
the front page?

[18:17:03.0000] <jacobolus>
any part of it whatsoever?

[18:17:04.0000] <Philip`>
(It was msdn.microsoft.com that originally made me switch from IE to Firefox, because I wanted to look up some documentation but it kept freezing and crashing in IE)

[18:18:00.0000] <Philip`>
jacobolus: I bet at least one part will have it, since they'll give examples in the documentation

[18:19:00.0000] <jacobolus>
heh

[18:19:01.0000] <jacobolus>
do they give examples as complete pages?

[18:20:00.0000] <Philip`>
Er, I'd guess so, but I don't actually know

[18:20:01.0000] <bloo2>
philip`: (question about the research) what is "Duplicate attribute names"?

[18:20:02.0000] <jacobolus>
anyway, gotta run.  have fun with the rest of standards flamewar day, everyone

[18:21:00.0000] <bloo2>
/me considered doing a 6 month metric test of IE's new META syntax to see if there is any uptake.

[18:21:01.0000] <Philip`>
bloo2: That's when an element has >= 2 attributes with the same name

[18:21:02.0000] <bloo2>
philip`: interesting. I hadn't thought of that one before. 8-}

[18:22:00.0000] <Philip`>
(Since it's only counting the number of pages with duplicates, it doesn't matter if it's 2 or 3 etc)

[18:22:01.0000] <Philip`>
bloo2: I was mostly looking for duplicate style attributes, since that potentially has to be handled specially for compatibility with existing content

[18:23:00.0000] <jwalden>
https://bugzilla.mozilla.org/show_bug.cgi?id=postMessage

[18:23:01.0000] <Philip`>
(but it looks like it's not a huge problem in practice)

[18:23:02.0000] <jwalden>
^ this has a reasonable chance of being in Firefox 3

[18:23:03.0000] <jwalden>
amazingly enough

[18:23:04.0000] <gavin>
/me would be interested in seeing the uptake of the new meta tag before IE8 is released

[18:24:00.0000] <Philip`>
(That data came from an ugly slow C++ / Perl mixture with various problems that cause things like "u000D" to appear in the output - I've switched to a nicer faster Java approach now)

[18:25:00.0000] <bloo>
/me works on trying to find an open nick

[18:27:00.0000] <Philip`>
gavin: http://www.cl.cam.ac.uk/~pjt47/misc/attributes.html and scroll down to "meta http-equiv": uptake was 0% about a month ago, so there's one data point already

[18:27:01.0000] <gavin_>
heh

[18:28:00.0000] <blooberry>
philip`: I found the same thing today from my research of the full dmoz set. 8-} We can consider any search before today a good "starting point" I think

[18:49:00.0000] <jruderman>
/me wonders whether hixie plans to put "X-UA-Compatible" into acid2 or acid3

[18:49:01.0000] <Hixie>
hahahaha no.

[18:50:00.0000] <eseidel_>
Hixie: I assume you saw the security bug...

[18:50:01.0000] <eseidel_>
about data:

[18:51:00.0000] <eseidel_>
and Acid3

[18:51:01.0000] <Hixie>
haven't looked at bugmail yet

[18:53:00.0000] <jruderman>
is IE8's X-UA-Compatible really "render this exactly as IE7 would" or is it a limited number of quirks? in particular, say IE8 adds support for text-shadow; will you have to use X-UA-Compatible for text-shadow to work?

[18:55:00.0000] <Hixie>
IE7's quirks mode is "render this exactly as IE5.5 would"

[18:55:01.0000] <Hixie>
i would expect the same to apply

[18:55:02.0000] <Hixie>
in particular, i'd expect new features not to be supported

[18:55:03.0000] <Hixie>
just like they aren't in the current fewer-quirks quirks mode

[18:58:00.0000] <jruderman>
ok

[19:25:00.0000] <othermaciej>
Hixie: is there any info technically on whether IE7 actually has two separate layout engines, or just one with a bunch of conditional quirks?

[21:10:00.0000] <jruderman>
othermaciej: http://ejohn.org/blog/meta-madness/#comment-296861 ?

[21:11:00.0000] <jruderman>
"I'll detail more about the Javascript solution in the future - the short answer is that it's not two engines, it's two modes of a single engine; we can, in fact, work across boundaries like that."

[21:28:00.0000] <othermaciej>
jruderman: can't tell if that's referring to the JavaScript engine or the whole rendering engine

[21:36:00.0000] <roc>
me neither but it sounds more like the JS engine

[21:36:01.0000] <gavin_>
when I read it I assumed that his "it" refers to the overall solution

[21:37:00.0000] <roc>
we'll see

[21:38:00.0000] <othermaciej>
I assume some chunk of code has to be duplicated to totally freeze all bugs

[21:38:01.0000] <othermaciej>
unless they are super anal about conditionalizing every single code change

[21:38:02.0000] <othermaciej>
in which case I feel even more sorry for them

[21:52:00.0000] <othermaciej>
wow, there are a lot of blog posts about the IE version thing

[22:01:00.0000] <roc>
othermaciej: yeah

[22:01:01.0000] <roc>
othermaciej: shipping multiple engines sucks, but weaving them together in your source code must suck even more

[22:03:00.0000] <roc>
and the first time you want to rearchitect your code in a substantial way, you have to fork anyway

[23:12:00.0000] <MikeSmith>
kind of amazed to see so much attention about a change related to a product that hasn't even shipped yet

[23:13:00.0000] <MikeSmith>
and that nobody knows when it will actually ship

[23:14:00.0000] <MikeSmith>
the option remains of them not actually implementing this

[23:14:01.0000] <MikeSmith>
it's not like just because they have announced it preemptively, it's now written in stone

[23:15:00.0000] <MikeSmith>
I'm a bit confused about why they did go ahead and announce it already

[23:15:01.0000] <MikeSmith>
the timing  -- what benefit it was to them to do so now

[23:16:00.0000] <MikeSmith>
worries that word about it would get leaked early?

[23:23:00.0000] <othermaciej>
information is good

[23:23:01.0000] <othermaciej>
I would not want to discourage them

[23:28:00.0000] <Hixie>
othermaciej: i don't know exactly what IE7 is like inside, but it certainly seems to have two engines, as they don't even, e.g., support any new features in quirks mode

[23:29:00.0000] <othermaciej>
it could just mean every change is bracketed with an if statement

[23:29:01.0000] <othermaciej>
/me shrugs

[23:29:02.0000] <othermaciej>
Hyatt seems to think IE7's quirks mode is based on conditionals, not multiple engines, but I'm not sure how he would know

[23:33:00.0000] <Hixie>
yeah but god, can you imagine that?

[23:33:01.0000] <Hixie>
the code would suck so bad

[23:34:00.0000] <Hixie>
and as roc said, what if you rearchitect something? like their removal of hasLayout

[23:40:00.0000] <Hixie>
i mean, if you want to change something like your class hierarchy, which they well have to for what they've done in IE8...

[23:46:00.0000] <othermaciej>
at some point the whole engine has to be an if statement

[23:46:01.0000] <othermaciej>
roc, annevk: http://webkit.org/blog/155/versioning-compatibility-and-standards/

[23:46:02.0000] <othermaciej>
(since y'all suggested I should post something)

[23:57:00.0000] <hsivonen>
Aaron Gustafson contradicts what Andy Clarke said on Anne's site: http://www.webstandards.org/2008/01/22/ie8-will-see-the-smile/

[00:06:00.0000] <othermaciej>
hsivonen: I'm slow - what's the contradiction?

[00:07:00.0000] <hsivonen>
othermaciej: whether or not the people involved were acting as individuals or as WaSP

[00:08:00.0000] <hsivonen>
annevk: aside: http://annevankesteren.nl/2008/02/ is 500

[00:09:00.0000] <Hixie>
http://www.w3.org/mid/1A373905-DEAF-429E-B358-C8A49CAD550F⊙yc is funny, because Mark basically says that HTTP headers are "whole new way to associate policy with resources"

[00:09:01.0000] <Hixie>
which is news to me!

[00:11:00.0000] <othermaciej>
hsivonen: I don't see him claiming that this was an official WaSP project, just that Microsoft approached WaSP

[00:12:00.0000] <hsivonen>
othermaciej: oh. good point. so the exact wordings don't contradict each other, but at least I get the impression from the WaSP post that WaSP was consulted as WaSP even if it doesn't strictly say that

[00:17:00.0000] <othermaciej>
this post (also on the WaSP site) is pretty unambiguous: http://www.webstandards.org/2008/01/22/microsofts-version-targeting-proposal/

[00:19:00.0000] <hsivonen>
yeah

[01:14:00.0000] <jacobolus>
othermaciej: excellent statement :)

[01:16:00.0000] <annevk>
hsivonen, hmm

[01:17:00.0000] <annevk>
/me has an idea as to what the issue is

[01:23:00.0000] <krijnh>
http://alistapart.com/comments/beyonddoctype?page=10#97

[01:27:00.0000] <takkaria>
he seems to think people don't upgrade their browsers for compatibility reasons

[01:27:01.0000] <krijnh>
For IE that's probably partly true

[01:27:02.0000] <krijnh>
And partly in IE terms means a lot of users

[01:28:00.0000] <takkaria>
I think the vast, vast majority of web browser users don't know or care

[01:28:01.0000] <Hixie>
it wouldn't be as big an issue if IE didn't have so many bugs

[01:28:02.0000] <Hixie>
this is only really an issue because IE6 became entrenched after being left unmaintained for over half a decade

[01:28:03.0000] <Hixie>
nearly one third of the lifetime of the web

[01:29:00.0000] <Hixie>
it wouldn't be nearly as bad for future releases

[01:29:01.0000] <Hixie>
at least once microsoft caught up to the other browsers in terms of standards compliance

[01:30:00.0000] <krijnh>
Yeah, but IE has many bugs

[01:30:01.0000] <krijnh>
So there is an issue

[01:33:00.0000] <Hixie>
/me blogs

[01:36:00.0000] <roc>
othermaciej: nice, thanks!

[01:49:00.0000] <jgraham>
/me has only just found out that <!DOCTYPE html> and other unknown doctypes will not require the <meta> madness for the latest rendering mode

[01:50:00.0000] <annevk>
interesting

[01:50:01.0000] <annevk>
that might explain Acid2

[01:50:02.0000] <Philip`>
What does "unknown" mean?

[01:51:00.0000] <krijnh>
If "Don't break the web" would be written as "Don't break the intranets which only rely on IE6/IE7 anyway" in the last couple of days and there was no mention of 'and we hope to see it implemented in other browsers as well', I think more people would have been in favor of the meta thing :)

[01:51:01.0000] <Camaban>
would that suggest that if we wanted to use HTML4.01strict, we could use the appropriate doctype in the code, then use a conditional comment to give IE8 a 'different' doctype to trigger standards mode?

[01:53:00.0000] <jgraham>
Philip`: Apparently "unknown" means "not widely deployed"

[01:53:01.0000] <annevk>
Acid3 is testing SVG now

[01:53:02.0000] <jgraham>
But all I've read is http://blogs.msdn.com/cwilso/archive/2008/01/22/i-feel-happy-too.aspx#7202711

[01:54:00.0000] <jgraham>
(it isn't clear what will happen for IE > 8)

[01:55:00.0000] <jgraham>
given which I shouldn't have said "latest" originally...

[01:55:01.0000] <Hixie>
hm, i guess we should get major sites to use that doctype asap then

[01:56:00.0000] <Hixie>
(to force them to make it either trigger ie7 mode or "break the web" in ie8)

[01:56:01.0000] <Hixie>
(and thus discredit this nonsense some more)

[01:56:02.0000] <annevk>
Hixie, the second link in your article also points to HTML5

[01:57:00.0000] <Hixie>
oops

[01:57:01.0000] <Philip`>
I suppose they could just say everything containing "DTD HTML 4.0" and "DTD XHTML 1.0" is IE7-mode, and that would cover almost all current standards-mode doctypes

[01:58:00.0000] <Hixie>
fixed

[01:58:01.0000] <Hixie>
thanks

[01:58:02.0000] <annevk>
haven't read it yet: http://norman.walsh.name/2008/01/22/html5

[01:58:03.0000] <annevk>
(he works on XML specs and such so it might be interesting)

[01:59:00.0000] <Hixie>
read it earlier

[01:59:01.0000] <Hixie>
bed time

[01:59:02.0000] <Hixie>
nn

[02:01:00.0000] <annevk>
not so much thoughts in there yet :)

[02:08:00.0000] <mpt>
"Will they hard-code the URI?" - exactly what I was thinking last week :-)

[02:10:00.0000] <Philip`>
They wouldn't be the first browser to hard-code the Acid2 URI and do special processing on it :-)

[02:10:01.0000] <mpt>
Really?

[02:11:00.0000] <harri>
as everybody went so crazy we once did such a hack for fun in Konqueror. just showed a screenshot.

[02:12:00.0000] <mpt>
ah

[02:12:01.0000] <Philip`>
Some version of Opera made the face wink and show a special message if you left it for a couple of minutes

[02:12:02.0000] <Philip`>
though I can no longer find any references to that...

[02:28:00.0000] <Lachy>
hmm. Something weird is going on. Firefox 2.0.0.11 (Mac) is failing Acid 1 for me

[02:28:01.0000] <Lachy>
crap. It seems to be something wrong with my profile, since it works with a new default user profile

[02:32:00.0000] <annevk>
Philip`, I believe it was a mobile version that had some pretty funny gimmick

[02:32:01.0000] <annevk>
/me made a greasemonkey script that did special processing for the test URI

[02:34:00.0000] <othermaciej>
roc: if you read *very* between the lines it casts IE in a bit of a negative light

[02:34:01.0000] <othermaciej>
roc: but I managed to jeep it diplomatic

[02:35:00.0000] <roc>
yeah, it's good

[02:37:00.0000] <roc>
I think I did too. At least, Chris Wilson left a favourable comment on my second post :-)

[02:37:01.0000] <roc>
but I really wanted him to comment on the implementation issues

[02:37:02.0000] <roc>
oh well

[02:38:00.0000] <roc>
get some sleep, it's late over there

[02:39:00.0000] <roc>
/me realizes that this time tomorrow he'll be on CA time

[02:40:00.0000] <roc>
for a loose definition of tomorrow

[02:44:00.0000] <annevk>
hsivonen, fixed

[02:44:01.0000] <annevk>
it was some PHP oddity

[02:44:02.0000] <annevk>
header("Not Found",true,404) versus header("HTTP 1.1 404 Not Found)

[02:44:03.0000] <annevk>
the latter works

[02:45:00.0000] <annevk>
well, if you don't omit the final quote

[02:49:00.0000] <roc>
I feel a bit neglected that there isn't a WaSP-Mozilla task force

[02:50:00.0000] <annevk>
that's because IE has the most issues

[02:50:01.0000] <annevk>
i was told

[02:59:00.0000] <Lachy>
Hixie, I disagree with your recommendation on your blog for authors to continue using IE7 mode.

[03:00:00.0000] <Lachy>
But everyone using IE=edge is also a bad idea.  I think using IE=[large-random-number] is the best solution

[03:02:00.0000] <Lachy>
although, as I've suggested before, IE should implement it as an opt-out that can be quickly added to existing pages that need it, instead of an opt-in for new pages

[03:02:01.0000] <krijnh>
That's even more hell for authors

[03:03:00.0000] <Lachy>
krijnh, why?

[03:04:00.0000] <krijnh>
Unless they ignore conditional comments and change their UA string

[03:05:00.0000] <krijnh>
Lachy: Because I seriously don't want to go through all the sites I've built and check them in IE8.. I'd prefer adding a little thingy to _new_ stuff I make, just as I now have to add conditional comments to cater for IE6 and IE7

[03:05:01.0000] <annevk>
I think what Hixie suggested is fine

[03:06:00.0000] <Lachy>
krijnh, if MS did the right thing and *didn't* introduce this evil hack, more complicated changes may have to be made.  But, if MS did things right, then you shouldn't need to make any significant changes

[03:07:00.0000] <krijnh>
Yep

[03:07:01.0000] <krijnh>
But they didn't

[03:07:02.0000] <Lachy>
krijnh, so are you saying you support MS's decision for the opt-in?

[03:08:00.0000] <krijnh>
If only they implement it, I think I can live with it

[03:09:00.0000] <krijnh>
Err, I think I have to live with it :)

[03:09:01.0000] <Lachy>
I just hope they make the HTML5 DOCTYPE equivalent to IE=edge, while still allowing the meta as an opt-out if needed

[03:10:00.0000] <krijnh>
The opt-out ?

[03:10:01.0000] <krijnh>
Perhaps they need both :)

[03:10:02.0000] <krijnh>
Ow, wait, they already do, of course ;\

[03:10:03.0000] <annevk>
<!doctype html> triggers "edge"

[03:10:04.0000] <krijnh>
Yeah

[03:10:05.0000] <krijnh>
And the meta thing with IE=7 untriggers it, right?

[03:10:06.0000] <krijnh>
Cool stuff :)

[03:11:00.0000] <Lachy>
yeah, so if you have an HTML5 page that works in IE10 (after IE adds some support for it).  Then IE11 comes out and something breaks. You can quickly add the opt-out to your HTML5 page to trigger IE10 mode until a more permanent fix can be deployed

[03:11:01.0000] <krijnh>
Yeah, it's just that nobody does that

[03:11:02.0000] <roc>
annevk: do we know that for sure?

[03:11:03.0000] <krijnh>
There is no 'quickly do something to site x and be done with it'

[03:12:00.0000] <annevk>
roc, cwilso said so in comments on his blog

[03:12:01.0000] <annevk>
I'm not sure if it's a good or bad thing though

[03:12:02.0000] <roc>
it sounded a bit off the cuff

[03:12:03.0000] <annevk>
it does seem a little bit weird given that normal standards mode is not whitelist based

[03:13:00.0000] <annevk>
as in, the reason that <!doctype html> triggers standards mode in Presto, Gecko, and WebKit is that it was not part of a blacklist

[03:14:00.0000] <Lachy>
krijnh, deploying a simple opt-out to fix a bug due to a browser upgrade is faster than working out what the bug is, finding a solution that works in both new and old versions and deploying that. I didn't "ad be done with it" - the opt-out would be a quick and dirty hack that should only be used as a temporary measure

[03:15:00.0000] <krijnh>
Lachy: but that's possible right?

[03:16:00.0000] <Lachy>
why wouldn't it be possible?

[03:17:00.0000] <krijnh>
I thought you meant you wanted to them to only make it possible to opt-out

[03:17:01.0000] <krijnh>
-to

[03:18:00.0000] <annevk>
i still don't think they should do this at all

[03:19:00.0000] <annevk>
especially the infinite amount of quirks modes scares me, but given the current landscape only intranet content might get crippled and I can live with that

[03:20:00.0000] <krijnh>
As an author, I think I like it

[03:21:00.0000] <krijnh>
I'm probably the only one here not working for some UA vendor :)

[03:21:01.0000] <Camaban>
I don't and I don't like it

[03:21:02.0000] <Camaban>
it's an IE hack for people who use IE hacks

[03:21:03.0000] <roc>
I like it because I think it'll make IE development implode :-)

[03:21:04.0000] <krijnh>
Camaban: you don't use conditional comments now?

[03:21:05.0000] <roc>
(not really)

[03:22:00.0000] <Camaban>
krijnh: very very very rarely

[03:22:01.0000] <krijnh>
Yeah, but you use them

[03:22:02.0000] <Camaban>
maybe a couple of times

[03:23:00.0000] <krijnh>
If it triggers on the HTML5 doctype, I don't see a problem

[03:23:01.0000] <Camaban>
I didn't have any problems when IE7 came out, I wasn;t one of the stupid satndards based coders spewing futureproof commentary and then using IE hacks which broke with a new version

[03:24:00.0000] <annevk>
how they did IE7 was very stupid though, btw

[03:24:01.0000] <Camaban>
I don't expect to have problems when IE8 comes out, and so I just want my web sites to use the browsers latest standards mode

[03:24:02.0000] <annevk>
i blogged about that long ago

[03:24:03.0000] <annevk>
they fixed the hacks but not the underlying issues

[03:24:04.0000] <annevk>
no wonder stuff breaks

[03:25:00.0000] <krijnh>
I just want my websites to all be run by people using MOS, but they just don't

[03:25:01.0000] <krijnh>
Damn users :)

[03:26:00.0000] <Camaban>
from the moaning I saw, most of it was related to * html, and people using it to hack anything and everything for IE

[03:28:00.0000] <annevk>
* html, a > b, a + b, etc.

[03:28:01.0000] <krijnh>
Wrongly written conditional comments were probably messier

[03:29:00.0000] <Camaban>
I wouldn't place all the blame for that MS, people buying into the standards based coding idea, and then using lots of hacks like that are missing the point

[03:29:01.0000] <Camaban>
though MS take the original blame for letting things get to that state in the first place

[03:29:02.0000] <annevk>
MS could have stopped supporting conditional comments, those hacks, etc.

[03:30:00.0000] <krijnh>
You think they've tried that?

[03:30:01.0000] <Camaban>
what do you mean by stop supporting?

[03:31:00.0000] <krijnh>
Just see them as comments, like other browsers do

[03:31:01.0000] <krijnh>
They must have tried that with IE8, to see what happens

[03:31:02.0000] <krijnh>
They must have tried removing the UA string or something

[03:32:00.0000] <annevk>
i don't know

[03:32:01.0000] <krijnh>
For every thing we come up with, they prolly have 10 outsourced programmers testing it out

[03:32:02.0000] <krijnh>
And this was probably the best thing they could handle

[03:33:00.0000] <krijnh>
And now they've wrapped in something 'other UAs could implement as well'

[03:33:01.0000] <krijnh>
But if that doesn't happen, this probably the best thing for everybody

[03:35:00.0000] <krijnh>
Do other vendors forsee problems in backwards engineering this IE behavior?

[03:36:00.0000] <roc>
we don't try hard enough for IE compatibility to care

[03:36:01.0000] <krijnh>
Well, that's the biggest argument I see people make in comments

[03:38:00.0000] <krijnh>
annevk: that's the 'infinite amount of quirks modes' (and others have to implement as well) you're talking about, right?

[03:39:00.0000] <annevk>
the moment we have to start caring is when IE is in a dominant position again

[03:40:00.0000] <krijnh>
Isn't it still?

[03:40:01.0000] <annevk>
it's not dominant enough for people to stop care about the other browsers

[03:40:02.0000] <annevk>
(although sometimes it is, so it may still cause issues)

[03:41:00.0000] <Camaban>
even then, getting people to care about browsers other than IE and FF can be tricky

[03:43:00.0000] <roc>
I don't really worry about the scenario where people only care about IE

[03:43:01.0000] <roc>
we're far away from that in most of the public Web, and getting further away

[03:43:02.0000] <roc>
and if it happens, the Web is screwed in so many ways

[03:44:00.0000] <krijnh>
So what's the problem again for authors, users and other vendors?

[03:44:01.0000] <roc>
I haven't haven't the foggiest idea with IE's mobile strategy is

[03:45:00.0000] <roc>
this approach to compatibility can only hurt them there

[03:45:01.0000] <roc>
I don't see them roaring back to unquestioned dominance

[03:46:00.0000] <roc>
krijnh: it's going to be confusing for authors. Down the road they'll have to know the bugs of several different versions of IE

[03:46:01.0000] <roc>
if they want to work on someone's existing content

[03:47:00.0000] <krijnh>
I can only imagine people updating their crappy IE6 quicker now.. Old stuff and intranets still work, and we authors can use shiny new features

[03:47:01.0000] <Camaban>
nad if several of us start advocating use of 'edge', it'll jsut be an issue that raises it's head everytime they release another version anyway, so doesn't resolve the issue at all

[03:48:00.0000] <krijnh>
Camaban: not if they fix and release often now

[03:48:01.0000] <roc>
it reduces the incentive to modernize dusty intranets for standards-based, cross-browser access, that's bad for vendors, users and maybe authors

[03:48:02.0000] <roc>
krijnh: well no, IE8 doesn't include an IE6 mode AFAIK

[03:48:03.0000] <Camaban>
krijnh: quite a big IF, an not something they've ever done previously

[03:49:00.0000] <krijnh>
roc: ow, damn

[03:49:01.0000] <roc>
AFAIK it's IE7 + a new IE8 mode

[03:50:00.0000] <roc>
so, IE6 quirks mode, IE7 standards mode, IE8 really-standards mode

[03:50:01.0000] <krijnh>
Camaban: I think they get it at least a little bit now

[03:50:02.0000] <Camaban>
and say people do start using IE=8 a lot, when they come to do 9, they could say "oh, there's no demand for various updates, people are using IE8 rendering anyway"

[03:51:00.0000] <krijnh>
roc: they've put a lot of effort into making sure intranets still work in IE7, no? I think the only issue for not updating a company to IE7 is the OS..

[03:51:01.0000] <roc>
it sounds like new features only get added to the very latest mode, so that might inhibit people from adding features to existing content

[03:52:00.0000] <roc>
krijnh: they did, but they talk a lot about how much pain IE7 caused their customers who had content in IE6 standards mode

[03:52:01.0000] <roc>
which didn't work in IE7

[03:52:02.0000] <roc>
companies are afraid of that

[03:53:00.0000] <Camaban>
the fact IE6 still has as much market share as it does says something

[03:53:01.0000] <krijnh>
Perhaps they slap an IE6 standards mode in IE8 as well, and just tell those companies to use IE=6 in their intranet apps, dunno :)

[03:53:02.0000] <Camaban>
difficult to make a guess as to how much of that is corporates not wanting to upgrade, but I bets there's a good number of them

[03:53:03.0000] <krijnh>
I'm pretty sure

[03:53:04.0000] <krijnh>
I've just built a voting site which is mostly used in corporate environments

[03:54:00.0000] <krijnh>
38% IE6, 19% IE7, 9% Fx2

[03:54:01.0000] <krijnh>
Ow, and 9% IE3 - my statistics suck :p

[03:56:00.0000] <roc>
I've heard FF2 usage is up around 10% in many corporate samples, which is surprisingly high to me

[03:56:01.0000] <roc>
since we basically don't target that market at all

[03:57:00.0000] <Camaban>
roc: any idea of OS' there? could be some of that is due to corporates wiht mac's maybe?

[03:58:00.0000] <roc>
dunno, but I thought Mac share in corporations was very low

[03:58:01.0000] <Camaban>
probably

[03:59:00.0000] <Camaban>
I sued to work for a reasonably big magazine publisher, they ahd a fair few macs around, and FF usage was fairly high, they were a bit split between officially supporting IE and FF, but as IE/Mac was dying out quickly, they could hardly continue to enforce IE usage everywhere

[04:06:00.0000] <gsnedders>
Philip`: re: invalid UTF-8 for trackbacks: remember trackbacks have no defined character set, so it's sniffed, so it will probably be treated as either ISO-8859-1 or Windows-1851 (forgive me if that number is wrong)

[04:08:00.0000] <gsnedders>
Philip`: URLs are of infinite length, but IE6 at least had a limit (IIRC IE7 doesn't)

[04:10:00.0000] <roc>
technically you mean URLs are of unbounded length

[04:11:00.0000] <roc>
sending an infinite-length URL to the server takes too long :-)

[04:12:00.0000] <annevk>
:p

[04:13:00.0000] <annevk>
we need infinite time to go with infinite URIs

[04:13:01.0000] <gsnedders>
well, there are infinitely long HTML documents on the real world web :P

[04:22:00.0000] <Dashiva>
But do those documents support offsets when fetching? Otherwise you're stuck when the server goes down after a few years

[04:31:00.0000] <zcorpan>
oh, completely forgot about <ol start=6 reverse>

[04:31:01.0000] <zcorpan>
oh well

[05:24:00.0000] <Philip`>
gsnedders: Re: re: invalid UTF-8 for trackbacks: If it's close-enough-to-valid UTF-8 that's just forbidden by XML, then hopefully it wouldn't get sniffed as something else

[05:25:00.0000] <Philip`>
Maybe just using &#0; would be enough to break things that do non-strict XML parsing

[05:55:00.0000] <krijnh>
Can't IE8 just make a guess with the Last-Modified HTTP headers each file has? :]

[05:57:00.0000] <krijnh>
Everything before X should go in IE7 compatmode/quirksmode, everything after X is in truly standards mode, unless the developer has opted out with a shiny meta

[05:57:01.0000] <Philip`>
Half of the pages on the web don't have a Last-Modified header at all

[05:57:02.0000] <krijnh>
Is that the half with no doctype either?

[05:58:00.0000] <Philip`>
I would assume server configuration is independent of served HTML content

[05:58:01.0000] <Philip`>
by which I mean, I have no idea whatsoever

[05:59:00.0000] <krijnh>
Well, other content then

[05:59:01.0000] <Philip`>
(http://http-parsing.gsnedders.com/ )

[05:59:02.0000] <krijnh>
Static files mostly have a last-modified, no?

[06:00:00.0000] <Philip`>
No idea :-)

[06:00:01.0000] <krijnh>
Well, PHP generated stuff for example doesn't have a last-modified header by default

[06:01:00.0000] <Philip`>
That would make sense

[06:02:00.0000] <krijnh>
But HTML can be ignored

[06:02:01.0000] <Philip`>
but I have no idea how to determine whether most static files have last-modified

[06:02:02.0000] <Philip`>
except by ugly things like guessing from the file extension

[06:02:03.0000] <krijnh>
Uhm

[06:03:00.0000] <krijnh>
http://http-parsing.gsnedders.com/ - fetch everything where content-type is text/css and has a last-modified

[06:04:00.0000] <krijnh>
That would be hard with embedded stylesheets though

[06:05:00.0000] <Philip`>
Not entirely sure what you mean... Follow all the <link rel=stylesheet href=...> links, assume the returned files are static, and then count last-modified?

[06:05:01.0000] <krijnh>
Yeah

[06:05:02.0000] <Philip`>
(Could do the same with <img src=...> since most images will be static)

[06:05:03.0000] <krijnh>
Yeah, but images don't change that much

[06:06:00.0000] <krijnh>
It's about the development assets

[06:07:00.0000] <Philip`>
So IE8 should download and parse the page, extract all stylesheet links, download all stylesheets, check their last-modified headers, and if they're past a certain date then switch to the fewer-bugs mode? That doesn't sound totally efficient :-)

[06:07:01.0000] <krijnh>
If the last change in the newest stylesheet or js file was in 2007 it's safe to assume IE7 compat, or something

[06:07:02.0000] <krijnh>
Yeah ;p

[06:08:00.0000] <krijnh>
Glad I'm no browser engineer :D

[06:08:01.0000] <Philip`>
I'd hate to be the web developer who makes a trivial change to one file, then discovers their whole site has collapsed in a pile of bugs, and reverts their change but still suffers from the same pile of bugs and has no idea what they did wrong :-)

[06:09:00.0000] <krijnh>
Well then

[06:09:01.0000] <krijnh>
The simple answer to my first question would be 'No, you idiot' :)

[06:10:00.0000] <Camaban>
krijnh: No, you idiot

[06:10:01.0000] <Camaban>
:)

[06:11:00.0000] <Philip`>
Okay, glad it's resolved so easily ;-)

[06:11:01.0000] <krijnh>
:P

[06:12:00.0000] <krijnh>
Meanwhile, in a channel not so far away, people are on mute because his earplug isn't working and his synthesizer tends to bother others

[06:21:00.0000] <krijnh>
http://krijnhoetmer.nl/stuff/html5/section-elements/ - yay, now it almost works cross browser..

[06:25:00.0000] <MikeSmith>
Hixie - for being able to directly reference the list in of doctypes that must trigger quirks mode in HTML5 UAs, it would be useful to have an ID at the beginning of the list

[06:26:00.0000] <MikeSmith>
maybe at the sentence preceding the list

[06:26:01.0000] <MikeSmith>
"Then, if the DOCTYPE token matches one of the conditions in the following list, then set the document to quirks mode:"

[06:27:00.0000] <Philip`>
krijnh: Except for Firefox :-(

[06:27:01.0000] <krijnh>
Philip`: Yeah

[06:28:00.0000] <krijnh>
But IE6, IE7, Opera 9 and Safari 3 handle it now

[06:28:01.0000] <krijnh>
How is Fx3 ?

[06:28:02.0000] <Philip`>
Still as broken as FF2, as far as I'm aware

[06:28:03.0000] <krijnh>
Hmm

[06:29:00.0000] <krijnh>
Hmm

[06:29:01.0000] <krijnh>
That's 2 times hmm

[06:29:02.0000] <Philip`>
https://bugzilla.mozilla.org/show_bug.cgi?id=311366

[06:29:03.0000] <krijnh>
Would document.createElement('abbr') enable support for <abbr> in IE6? :o

[06:30:00.0000] <Philip`>
It does

[06:30:01.0000] <Philip`>
<abbr title> tooltips work too

[06:30:02.0000] <krijnh>
Yeah, cool

[06:31:00.0000] <krijnh>
http://krijnhoetmer.nl/zooi/abbr.html

[06:31:01.0000] <krijnh>
Tee hee

[06:34:00.0000] <krijnh>
Why did no IE developer ever mention this, when people complained about IE6 not supporting <abbr> ? :| Were all their developers killed after releasing IE6 or something?

[06:35:00.0000] <Philip`>
krijnh: Maybe no IE developer understands the IE engine well enough to know about such things? :-)

[06:35:01.0000] <Philip`>
It doesn't seem like an intentional feature, so the thought might have just not occurred to them

[06:36:00.0000] <krijnh>
/me tries document.createElement('canvas') to explore other hidden IE6 features :)

[06:36:01.0000] <Camaban>
maybe no IE developer understood <abbr> so didnt know what it was meant to do :)

[06:37:00.0000] <Philip`>
Maybe they've got an entire <canvas> implementation in there and we just have to add a magical script line to enable it!

[06:37:01.0000] <jwalden>
or a CSS property

[06:37:02.0000] <Camaban>
document.createElement(godmode')

[06:37:03.0000] <krijnh>
DNKROZ :P

[06:37:04.0000] <Philip`>
krijnh: Excanvas does some searching for CANVAS and /CANVAS tags to reconstruct canvases, and that'd be much nicer if they used this method instead

[06:38:00.0000] <krijnh>
The .createElement() should be called before using the element though

[06:39:00.0000] <Philip`>
That's not really a problem since everyone puts the <script> in the <head> anyway

[06:40:00.0000] <krijnh>
Didn't Yahoo teach everybody to put the scripts at the bottom ?

[06:41:00.0000] <Philip`>
We can just unteach them

[06:41:01.0000] <krijnh>
Unteach me while you're at it :)

[06:41:02.0000] <Philip`>
And you should put the IE-parser-fixing scripts in a <![whatever it is, so that other browsers don't have the cost of downloading an extra script

[06:42:00.0000] <Camaban>
krijnh: then people discovered that if using js based analytics software (like google analytics), having the script at the bottom of the page meant you completely missed some page views, because the user clicked a link before the bottom of the page was loaded and the script was run :)

[06:42:01.0000] <krijnh>
Statistics are like bikinis anyway

[06:43:00.0000] <krijnh>
They smell, when used

[06:44:00.0000] <Camaban>
well, if you're stats aren't right because you included the srcipt at the bottom of the page, quite possibly :)

[06:44:01.0000] <krijnh>
And when you're not using stats scripts?

[06:45:00.0000] <Camaban>
well, if you're using web server logs, then you've a whole other raft of issues :)

[06:45:01.0000] <Camaban>
point being, advice these days is to put js based stats scripts at the top of the code

[06:45:02.0000] <krijnh>
Yeah, you get 9% IE3 visitors :]

[06:46:00.0000] <krijnh>
Which means you didn't update your software, even though Fx3 and Safari 3 are out

[06:46:01.0000] <Camaban>
or means something is faking it's UA :)

[06:46:02.0000] <krijnh>
Then why did the smart people at Yahoo put a silly warning in YSlow?

[06:47:00.0000] <Camaban>
probably because laoding a script early is likely to slow down the rest of the page

[06:47:01.0000] <Camaban>
especially if it's external

[06:47:02.0000] <Camaban>
swings and roundabouts

[06:48:00.0000] <Camaban>
people serious about stat sofwtare tend to accep the slow donw a bit

[06:48:01.0000] <krijnh>
So stats scripts in the head, other stuff at the bottom?

[06:48:02.0000] <Philip`>
I just write all my JavaScript code inline

[06:48:03.0000] <Camaban>
probably depends on the script, but potential, yes

[06:49:00.0000] <Camaban>
have had to put ad code at the bottom of code before because some ad servers were slow responding and casuing long delays in page load

[06:49:01.0000] <Camaban>
but might be some other cases like stats where getting them fired earlier is desirable

[06:50:00.0000] <krijnh>
http://krijnhoetmer.nl/irc-logs/xhtml/20080123#l-209 :)

[06:51:00.0000] <krijnh>
daft - adjective, -er, -est. 1. senseless, stupid, or foolish. 2. insane; crazy. 3. Scot. merry; playful; frolicsome.

[06:52:00.0000] <Philip`>
HTML5 Editor's Daft

[06:52:01.0000] <krijnh>
:P

[06:56:00.0000] <krijnh>
If only we could see the IE7 codebase.. I wonder how they implemented <abbr>

[06:59:00.0000] <jwalden>
I don't want to know

[07:00:00.0000] <Philip`>
What does IE7 do about <abbr> in quirks?

[07:00:01.0000] <krijnh>
Nothing, just supported

[07:01:00.0000] <krijnh>
Same in IE6 in quirks mode

[07:05:00.0000] <Philip`>
Hmm, I thought people said IE7 had a frozen copy of an older engine for quirks mode; but IE7 supports quirks <abbr> like standards <abbr>, and unlike IE6 which never supports <abbr>

[07:15:00.0000] <zcorpan>
Philip`: indeed, ie7's quirks mode is not the same as ie6's quirks mode

[07:15:01.0000] <zcorpan>
even though they said they wouldn't change anything in quirks mode

[07:21:00.0000] <Philip`>
Did they intentionally add <abbr> to IE7 quirks mode, or is it just shared code?

[07:33:00.0000] <zcorpan>
no idea. perhaps they figured that supporting <abbr> in quirks wouldn't break anything.

[07:37:00.0000] <krijnh>
"I for one am excited about the IE-version Meta tag, as long as I can set it to IE1. That way all of my pages can look good in Safari, Firefox and Opera while looking like badly munged Geocities pages circa 1995. Hoorayl!"

[08:06:00.0000] <jwalden>
/me wonders why freenode doesn't display idle time in /whois

[08:09:00.0000] <gavin_>
jwalden: it will if you do /whois nick nick rather than /whois nick

[08:10:00.0000] <jwalden>
ah, of course!  how natural!

[08:10:01.0000] <jwalden>
/me wonders why this behavior differs across servers

[08:17:00.0000] <gsnedders>
jwalden: Because nothing follows the spec, because the spec is totally incompatible with the real world

[08:17:01.0000] <jwalden>
I'd have expected nominal real-world compatibility

[08:17:02.0000] <jwalden>
at least on common things like /nick

[08:17:03.0000] <jwalden>
er

[08:18:00.0000] <jwalden>
/whois

[08:18:01.0000] <gsnedders>
oh, hell no. :)

[08:18:02.0000] <annevk>
"you must be new here"

[08:20:00.0000] <gsnedders>
"Please leave your sense of logic at the door, thanks!"

[08:21:00.0000] <gsnedders>
on an unrelated note, can we have a spec for feed autodiscovery that actually is usable?

[08:21:01.0000] <Ketsuban>
/whois is remarkably uncommon. Most IRCites use IRC for two things only - speaking and actions. :P

[08:27:00.0000] <SadEagle>
Philip`: are non-JS comments in e.g. 2d.imageData.put.round intentional?

[08:29:00.0000] <Philip`>
SadEagle: Urgh, no

[08:29:01.0000] <Philip`>
That's what happens when I mix JS and Python and YAML in a single source file...

[08:30:00.0000] <SadEagle>
BTW, for some reason your script doesn't work with 'real' yaml implementation..

[08:30:01.0000] <Philip`>
/me unindents the comments so they become YAML instead of JS

[08:30:02.0000] <Philip`>
Hmm, what's a "'real' yaml implementation"?

[08:32:00.0000] <SadEagle>
as in not 'syck' or whatever is supposed to be faster. whines about double arcto annotation or something(?)

[08:32:01.0000] <Philip`>
SadEagle: Fixed and uploaded (for .round and .clamp) - thanks

[08:32:02.0000] <SadEagle>
thanks for the testcases

[08:33:00.0000] <SadEagle>
are you planning on security testcases for getImageData?

[08:33:01.0000] <Philip`>
Oh, that's probably because I've got two &arcto

[08:34:00.0000] <SadEagle>
heh, I fail .round pretty miserably :-)

[08:34:01.0000] <Philip`>
Fixed local copy of YAML file

[08:35:00.0000] <SadEagle>
thanks.

[08:35:01.0000] <Philip`>
I should probably just duplicate all the toDataURL cases for getImageData, since I can't think of any differences

[08:36:00.0000] <Philip`>
(If you want the YAML thing to work, just change the second "&arcto ..." line to say "*arcto" instead)

[08:37:00.0000] <Hixie>
Lachy: using IE=large-number or IE=edge are both trivial for microsoft to route around

[08:37:01.0000] <SadEagle>
BTW, do i understand correctly that the origin of image data in a canvas element should be transitive?

[08:38:00.0000] <annevk>
Philip`, in http://philip.html5.org/data/doctypes.txt what's the difference between #2, #4, and #5?

[08:38:01.0000] <Philip`>
Not sure what you mean by transitive here

[08:39:00.0000] <Philip`>
annevk: Whitespace (which was all collapsed to spaces before outputting to the .txt file)

[08:40:00.0000] <Lachy>
Hixie, but MS have to realise that if someone has gone to all the trouble of using IE=edge or large-number then they should accept that the author has taken responsibility for themselves and not screw them over

[08:40:01.0000] <annevk>
thx

[08:40:02.0000] <jwalden>
Hixie: if I have pages A and B on the same domain, and A calls a function in B which calls someWindow.postMessage, the uri of the event is B, correct?

[08:40:03.0000] <Hixie>
Philip`: (the excanvas guys know, i told them yesterday, and they immediately were like "wow, we could totally fix the <canvas>-finding code...")

[08:41:00.0000] <Hixie>
Lachy: you mean like how they should accept that the author has taken responsibility for themselves and not screw them over when they pick standards mode using a doctype?

[08:41:01.0000] <Hixie>
jwalden: iirc

[08:41:02.0000] <Philip`>
annevk: Added a comment to the file to hopefully make it clearer

[08:41:03.0000] <SadEagle>
Philip`: if you have a canvas A, that had images from domains d1 and d2 painted, and you painted from it on canvas B, d1 and d2 should be included on its list of domains, right?

[08:42:00.0000] <Hixie>
Lachy: this isn't about them accepting anything, it's about them thinking they know better about what users want as far as compat goes

[08:42:01.0000] <jwalden>
cool; the exact phrasing was "the document that the script that invoked the methods is associated with", for what it's worth

[08:42:02.0000] <Hixie>
yeah, i should make that clearer

[08:42:03.0000] <Philip`>
SadEagle: In at least Firefox, there's just a boolean "unsafe" flag per canvas, which gets set whenever you paint from a different-origin image or from an unsafe canvas

[08:43:00.0000] <Philip`>
SadEagle: which seems sensible, and I can't think of cases where it's unsafe or overly restrictive, though I know very little about security

[08:43:01.0000] <gsnedders>
I think part of the issue is the umber of sites using <!--[if IE]> without any version

[08:43:02.0000] <gsnedders>
*number

[08:43:03.0000] <SadEagle>
Philip`: yeah, I just realized that 2 sources can never be equal to 1 :-)

[08:44:00.0000] <annevk>
SadEagle, no need for domain lists, just a "safe" flag

[08:44:01.0000] <Philip`>
http://philip.html5.org/data/ccs.html

[08:44:02.0000] <Philip`>
<!--[if IE]> is quite common :-(

[08:44:03.0000] <SadEagle>
/me won't worry too much about websites not working in IE

[08:44:04.0000] <Philip`>
(Well, 1.5%)

[08:44:05.0000] <annevk>
you need a "safe" flag on CanvasPattern, HTMLCanvasElement, and maybe HTMLImageElement depending on how you implement things

[08:45:00.0000] <jwalden>
Hixie: second: what should be the domain/uri when postMessage is called from within a window in which about:blank was initially loaded but which has been document.open|write|closed with different contents?  null/"about:blank" is my guess per <http://www.whatwg.org/specs/web-apps/current-work/multipage/section-documents.html#domain>

[08:45:01.0000] <Philip`>
(or 1.5% of not-very-complex web pages - these aren't fancy application sites)

[08:46:00.0000] <Hixie>
jwalden: doesn't document.open() propagate a domain/origin into the about:blank apage?

[08:46:01.0000] <SadEagle>
annevk: thanks for reminding me of patterns. 

[08:46:02.0000] <jwalden>
/me checks

[08:46:03.0000] <jwalden>
that's the behavior of Moz right now, but I wasn't sure if it was right or not

[08:46:04.0000] <Philip`>
/me wonders if he had a test for drawing data: onto canvas being safe

[08:47:00.0000] <annevk>
i believe so

[08:47:01.0000] <annevk>
and apart from Opera most browsers fail iirc :(

[08:47:02.0000] <Philip`>
Oh, I do

[08:47:03.0000] <Philip`>
Opera 9.2 fails, Opera 9.5 passes, Firefox fails, Safari doesn't have toDataURL

[08:48:00.0000] <Hixie>
jwalden: sorry, i'm confused. what is? about:blank, or propagating the domain?

[08:48:01.0000] <annevk>
Hixie also needs to update the spec to mention that <img src=data:...> is always "safe"

[08:48:02.0000] <annevk>
for <canvas> purposes

[08:49:00.0000] <Hixie>
send mail, everyone :-)

[08:49:01.0000] <annevk>
and that <img src=external.foo -> data:...> is not

[08:49:02.0000] <jwalden>
Hixie: sorry, Moz currently has the URI/domain of the writer (or possibly opener, I've not tested)

[08:49:03.0000] <Hixie>
jwalden: that seems reasonable to me. i expect html5 to eventually require that once i have clarified the 'origin' of documents.

[08:50:00.0000] <jwalden>
Hixie: okay; should I send an email to the list to make sure that gets put in the open() description, as it's not there now?

[08:50:01.0000] <jwalden>
(for whichever of document or window is causing this behavior, that is)

[08:50:02.0000] <Philip`>
annevk: I think the spec already requires that - data: URIs have the same origin as the document they're used in, or something like that

[08:50:03.0000] <Philip`>
(Er, things created from data: URIs have the same ...)

[08:51:00.0000] <SadEagle>
annevk: the origin of an image element is always the origin of its document, right?

[08:51:01.0000] <Philip`>
SadEagle: No, it depends on the src

[08:51:02.0000] <annevk>
SadEagle, <img src="http://external.example.org/img.gif"> in an foobar.invalid document would be an "unsafe" image

[08:52:00.0000] <annevk>
SadEagle, as it could contain information from an intranet or so

[08:52:01.0000] <annevk>
(the attack vector is that until <canvas> there was no way to read image data and therefore cross-site images were not an issue)

[08:53:00.0000] <Hixie>
jwalden: yes please

[08:54:00.0000] <SadEagle>
annevk: hmm, if you paint it on an external.example.org--owned canvas, it's safe though?

[08:54:01.0000] <Philip`>
How do you get a reference to a differently-owned canvas?

[08:55:00.0000] <SadEagle>
one can restrict domains further via JS..

[08:56:00.0000] <SadEagle>
hmm, or not. I wish I was the guy who wrote the XSS-checks infrastructure :(

[08:58:00.0000] <SadEagle>
patterns aren't tied toa particular context, are they?

[08:58:01.0000] <Philip`>
They shouldn't be

[08:59:00.0000] <Philip`>
http://philip.html5.org/tests/canvas/suite/tests/2d.pattern.crosscanvas.html

[08:59:01.0000] <jwalden>
/me is rather glad he wasn't the person who wrote the XSS-checks infrastructure

[08:59:02.0000] <jwalden>
I can armchair-critique what resulted with the best of them, however!

[09:00:00.0000] <Philip`>
If you change document.domain with JS, I've got entirely no idea what should happen :-)

[09:00:01.0000] <SadEagle>
/me tries to think whether an unsafe bit is really enough for them, then.

[09:01:00.0000] <SadEagle>
(I think this calls for pen-and-paper... and an auditor)

[09:01:01.0000] <Philip`>
A list of domains might not be enough, since there could be some other non-image-drawing functions that make the canvas unsafe

[09:02:00.0000] <Philip`>
like a drawWindow etc

[09:02:01.0000] <SadEagle>
well, a pattern created from an unsafe canvas is always unsafe.. but what about images? I guess only if the images origin isn't the same as the domain of the document, or?

[09:03:00.0000] <SadEagle>
/me notes the use of the word 'guess', and gets scared

[09:03:01.0000] <Philip`>
Comparing image origin vs document domain is what people seem to be doing

[09:05:00.0000] <annevk>
and that makes sense

[09:05:01.0000] <annevk>
document.domain doesn't really matter here afaict

[09:05:02.0000] <SadEagle>
since normal checks should prevent that?

[09:07:00.0000] <annevk>
well, if you have access to some other place because of document.domain you can extract the image data anyhow

[09:07:01.0000] <annevk>
so the only problem might be that if you compare the origin of the <canvas> on which you draw against the <img> origin which you draw upon it you might be too strict

[09:22:00.0000] <annevk>
http://www.b-list.org/weblog/2008/jan/23/legacy/

[09:27:00.0000] <SadEagle>
well, if they set the default the other way around, they'd be doing everyone else a huge favor, and what's their motivation for doing that?

[09:27:01.0000] <annevk>
i'm not sure they're doing themselves a favor right now

[09:30:00.0000] <Camaban>
piss off IE only developers, or piss off everyone else...

[09:30:01.0000] <SadEagle>
annevk: so to double-check, the only origin of unsafety would be an image element with a mismatch of origin?

[09:32:00.0000] <annevk>
well, and <canvas> and CanvasPattern objects which have such images painted on them

[09:32:01.0000] <SadEagle>
thanks. I view that as transitivity and not origin :-)

[09:32:02.0000] <annevk>
<canvas>.drawImage(<canvas>.drawImage(unsafeimage)) -> both are unsafe

[09:32:03.0000] <annevk>
ok

[09:33:00.0000] <annevk>
hmm, so UTF-7 may not be needed after all

[09:33:01.0000] <annevk>
Philip`, got stats on usage? :)

[09:34:00.0000] <SadEagle>
And I am curious whether utf-7 or ISO 8859-5 are used less

[09:36:00.0000] <Philip`>
annevk: I don't think I do, and I wouldn't have a large enough sample to get anything meaningful for things like utf-7

[09:37:00.0000] <annevk>
k

[09:37:01.0000] <Hixie>
annevk: re our earlier conversation

[09:37:02.0000] <Hixie>
according to my data, as of july last year, the most common doctypes were:

[09:37:03.0000] <Hixie>
1. no doctype

[09:38:00.0000] <Hixie>
2. html,-//W3C//DTD XHTML 1.0 Transitional//EN,http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd

[09:38:01.0000] <Hixie>
3. HTML,-//W3C//DTD HTML 4.01 Transitional//EN,(no uri)

[09:38:02.0000] <Hixie>
...

[09:38:03.0000] <Hixie>
6. html,-//W3C//DTD XHTML 1.0 Strict//EN,http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd

[09:39:00.0000] <Hixie>
7. html5 doctype (no fpi or uri)

[09:39:01.0000] <Hixie>
8. HTML,-//W3C//DTD HTML 4.01//EN,http://www.w3.org/TR/html4/strict.dtd

[09:39:02.0000] <Hixie>
13. html,-//W3C//DTD XHTML 1.1//EN,http://www.w3.org/TR/xhtml11/DTD/xhtml11.dtd

[09:39:03.0000] <Hixie>
(skipping transationals)

[09:39:04.0000] <annevk>
7 html5?!

[09:40:00.0000] <Hixie>
23. HTML,-//W3C//DTD HTML 4.0//EN,(no uri)

[09:40:01.0000] <Hixie>
annevk: they might also have been parse errors, it's unclear

[09:40:02.0000] <annevk>
k

[09:41:00.0000] <Hixie>
HTML,-//W3C//DTD HTML 4.01//EN,http://www.w3.org/TR/html4/strict.dtd seems to be the most common non-transitional, non-xhtml doctype

[09:41:01.0000] <Hixie>
i guess i should use that for acid3

[09:41:02.0000] <annevk>
i'd go for 8 then

[09:41:03.0000] <annevk>
yeah

[09:42:00.0000] <Hixie>
i'm surprised about #7

[09:42:01.0000] <Hixie>
how weird

[09:42:02.0000] <Hixie>
i should investigate further

[09:42:03.0000] <Hixie>
but now i have to go to a meeting. bbl.

[09:43:00.0000] <blooberry>
hixie: html5 doctype was pretty far down on my list

[09:45:00.0000] <Philip`>
Hixie: Was that using the HTML5 tokenisation algorithm to extract the doctype?

[09:45:01.0000] <Hixie>
yeah

[09:45:02.0000] <Hixie>
maybe those were all bogus doctypes

[09:45:03.0000] <Hixie>
afk

[09:46:00.0000] <Philip`>
http://philip.html5.org/data/doctypes.txt has zero <!doctype html>s

[09:46:01.0000] <annevk>
hsivonen, http://www.b-list.org/weblog/2008/jan/23/legacy/#c53749 shows that your tables are slightly confusing

[09:47:00.0000] <Philip`>
Hixie: Also, were you ignoring case when counting commonness?

[09:50:00.0000] <Philip`>
Argh, I forgot case-sensitivity in my quirks/standards detector...

[09:51:00.0000] <blooberry>
philip` my list has it about 150 times (with varying case results)

[09:52:00.0000] <blooberry>
philip`: Do you keep an active linkage in your research to the results, eg, if you wanted to find a particular URL in that result set, can you?

[09:52:01.0000] <Philip`>
blooberry: 150 out of how many?

[09:52:02.0000] <blooberry>
philip`: a lot. ;-} 1681088 domains

[09:54:00.0000] <blooberry>
(that number didn't count any results with no doctypes in the set. Total domains in set is ~3.2 million)

[09:54:01.0000] <Philip`>
blooberry: For e.g. doctypes, I generate a list of (uri, matched string)s, and then have a separate program to summarise the data, so I can go back and find the URIs from there

[09:54:02.0000] <blooberry>
very cool

[09:54:03.0000] <Philip`>
but also I cache all the pages I downloaded, so I can re-run the whole data-extraction program without any network activity

[09:54:04.0000] <Philip`>
(so it only takes about thirty seconds for 16K pages)

[09:55:00.0000] <blooberry>
also useful...what is the disk hit on that? (how much space does it cost)

[09:55:01.0000] <blooberry>
whoa. Very nice. 8-}

[09:55:02.0000] <Philip`>
400MB for the 16K HTML pages (plus HTTP headers, plus serialised Java exceptions)

[09:55:03.0000] <Philip`>
It's only 14MB for the extracted doctype data

[09:56:00.0000] <blooberry>
any external object references analyzed or saved?

[09:58:00.0000] <blooberry>
philip`: oh...I've seen you reference statistics now you have generated from I think at least 3 domains. Do you have any central place where you summarize or link to all the far-flung pieces?

[09:58:01.0000] <Philip`>
I've checked external references in the past, for e.g. http://canvex.lazyilluminati.com/misc/stats/scripttypes2.html

[09:59:00.0000] <blooberry>
philip`: hmm. I think that makes it 4 domains now. ;-}

[09:59:01.0000] <Philip`>
I don't have any central place at the moment, and I keep changing my mind about where I want to bother saving stuff :-)

[09:59:02.0000] <blooberry>
8-D

[09:59:03.0000] <Philip`>
I've been meaning to make a list of all the stuff I've done, so I could do that soon if you're interested in finding the various bits

[10:00:00.0000] <blooberry>
do you have some sort of list of all the things you have covered? Or is it all in your head? ah, ok.

[10:00:01.0000] <Philip`>
It's not in my head - I just have to search through all the servers to find anything

[10:01:00.0000] <Philip`>
Some of it is only exists in mailing list posts, too...

[10:01:01.0000] <Philip`>
s/ is//

[10:05:00.0000] <annevk>
http://www.computable.nl/nieuws.jsp?id=2319711 talks about HTML5 making an initial step to the Semantic Web :)

[10:05:01.0000] <Philip`>
http://philip.html5.org/data/doctypes.txt - now correcter in its quirks/standards determination

[10:06:00.0000] <Philip`>
and also http://philip.html5.org/data/doctypes-lc.txt - now ignoring trivial differences

[10:07:00.0000] <Philip`>
XHTML 1.0 Strict beats HTML 4.01 Strict by a lot

[10:09:00.0000] <hsivonen>
annevk: can you suggest how to make the table clearer? it seems inappropriate to suggest that IE7's standards mode were more standards that Gecko/WebKit/Opera Almost Standards

[10:10:00.0000] <Philip`>
hsivonen: Label it "standards" but colour it in the "almost standards" darker green?

[10:10:01.0000] <Philip`>
I'm sure that's bad for accessibility, though

[10:12:00.0000] <annevk>
http://www.metah.ch/blog/2008/01/23/w3c-working-draft-use-html5-not-flash-or-silverlight/

[10:12:01.0000] <annevk>
hsivonen, "IE standards mode"

[10:12:02.0000] <annevk>
hsivonen, with an additional paragraph that explains the difference

[10:13:00.0000] <hsivonen>
annevk: hmm...

[10:15:00.0000] <hsivonen>
annevk: I don't quite like that characterization. but perhaps I have to do something like that when IE8 comes out at the latest

[10:16:00.0000] <hsivonen>
it isn't quite fair to suggest Netscape 6 or Mac IE 5 standards modes were on par with contemporary standads modes, either

[10:18:00.0000] <annevk>
at some point you should probably put the historical info in a separate table

[10:20:00.0000] <hsivonen>
annevk: or do what I did with the gamma article: put the conclusion in the article and move the research results (for those who don't take my conclusions on face value) on another page

[10:22:00.0000] <hsivonen>
annevk: after all, the point of the table isn't to suggest that Web authors use the data. the point is to convince them that I known what I'm talking about (and to give browser QA something to test with)

[10:27:00.0000] <annevk>
i've seen at least one post now suggesting that MS might want to push HTML5 forward by accepting that DOCTYPE

[10:27:01.0000] <annevk>
/me wondered when that would happen

[10:29:00.0000] <hsivonen>
I don't have the bandwidth to correct all the doctype sniffing misconceptions that have been flying around in various blog comment sections.

[10:30:00.0000] <hsivonen>
I guess I need to update my doctype page sooner or later nonetheless

[10:56:00.0000] <SadEagle>
Philip`: 83.3% :-)

[10:58:00.0000] <Hixie>
Philip`: I don't think so

[10:58:01.0000] <Philip`>
SadEagle: I hope you won't make me feel guilty if I ever suggest that the spec should be changed to be more compatible with Firefox/Safari/Opera, if that'll harm your test results since you've actually been following the spec :-)

[10:59:00.0000] <SadEagle>
Philip`: that happened already with the path transformation...

[11:00:00.0000] <SadEagle>
Philip`: it's not that bad, though, since there at least is a spec.

[11:00:01.0000] <SadEagle>
Though fredrik was still reverse-engineering Safari's arcTo..

[11:02:00.0000] <Philip`>
SadEagle: Does http://lists.whatwg.org/pipermail/whatwg-whatwg.org/2007-July/012117.html miss some parts of arcTo?

[11:03:00.0000] <SadEagle>
Philip`: I won't know, and fredrik isn't around atm

[11:47:00.0000] <jwalden>
Hixie: HTML5 says data: URIs have no domain; spec says that document.domain must then be null, but postMessage doesn't quite say how "has no domain" maps to the |domain| attribute on the dispatched event -- is it likewise null, or is it the empty string?

[11:48:00.0000] <hsivonen>
Real pre-ISO-8859-1, pre-HTTP 1.0 Web content: http://montaasi.tky.fi/vanha/johtis/vanhat/1957/Kokous-27.09.1957.txt

[11:54:00.0000] <hsivonen>
hmm. I need a non-disruptive way to trigger reflow in Gecko from JS

[11:55:00.0000] <annevk>
jwalden, the URI itself?

[11:56:00.0000] <jwalden>
annevk: a document contained in a data: URL uses postMessage -- what's the value of the domain attribute on the event the receiver will get, null or ""?

[12:03:00.0000] <annevk>
oh wait, data: doesn't have a domain so it can't be itself

[12:03:01.0000] <annevk>
dunno

[12:03:02.0000] <annevk>
haven't tested that

[12:07:00.0000] <jwalden>
it's super-edge-case, but I'm implementing it now and can do either way -- figure I should do it right the first time

[12:13:00.0000] <annevk>
do you have a test using document.postMessage() ?

[12:13:01.0000] <annevk>
i could test in Opera

[12:32:00.0000] <h3h>
I'm sufficiently confused now

[12:32:01.0000] <h3h>
http://blogs.msdn.com/cwilso/archive/2008/01/22/i-feel-happy-too.aspx#7202711

[12:32:02.0000] <h3h>
so...the IE version lock-in only applies for HTML4 / XHTML1 doctypes?

[12:32:03.0000] <h3h>
which means HTML5 can proceed using the latest (most standards-compliant) mode of IE?

[12:33:00.0000] <jwalden>
annevk: sec, I'll write something up

[12:35:00.0000] <Philip`>
h3h: Apparently so, though it's kind of hard to tell yet since Microsoft hasn't been giving out many details and people have to try to piece together random blog comments to work out how it works...

[12:35:01.0000] <jwalden>
annevk: data:text/html,<script>window.onload%20=%20function()%20{%20document.addEventListener("message",%20function(e)%20{%20alert("domain:%20"%20+%20e.domain%20+%20",%20type:%20"%20+%20(typeof%20e.domain));%20},%20false);%20window.postMessage("foo");%20};</script>

[12:35:02.0000] <h3h>
yeah, kinda ridiculous

[12:35:03.0000] <h3h>
they need to publish a technical document

[12:36:00.0000] <h3h>
that seems like kind of a big detail to leave out

[12:36:01.0000] <h3h>
I think it's the difference between me caring a lot and not caring at all

[12:36:02.0000] <Philip`>
If <!doctype not-html-4-or-xhtml-1> gets maximum-standards-support, that would prevent much of the criticism that they've been getting, so it does seem odd to have not mentioned it

[12:39:00.0000] <annevk>
/me -> mtg

[13:01:00.0000] <gsnedders>
I love half the comments on the IE blog post. "Opt-in to standards? Never!" while assuming the current doctype switch is a standard.

[13:12:00.0000] <gsnedders>
anyone know when unicode support was added into Python?

[13:16:00.0000] <gsnedders>
2.0, seemingly

[13:17:00.0000] <Philip`>
What counts as "support"?

[13:22:00.0000] <gsnedders>
I mean in having a native Unicode string type

[13:25:00.0000] <Philip`>
/me adds ieparsehack.js to his web page

[13:39:00.0000] <zcorpan_>
http://software.hixie.ch/utilities/js/live-dom-viewer/?%3Cbody%3E%0D%0A%3Cscript%3Edocument.createElement('bar')%3C%2Fscript%3E%0D%0A%3Cbar%2F%3Ex%3Cbar%3Ey%3C%2Fbar%3Ez%3C%2Fbar%3E

[13:39:01.0000] <mpt>
Philip`, what does it do? Change the render mode between IE7 and IE8 every 0.5 seconds?

[13:40:00.0000] <Dashiva>
Philip`: Is the first bar supposed to be self-closing?

[13:42:00.0000] <zcorpan_>
Dashiva: was that meant to me?

[13:42:01.0000] <Dashiva>
right

[13:42:02.0000] <zcorpan_>
well, it is in ie

[13:42:03.0000] <annevk>
jwalden, empty string in Opera

[13:43:00.0000] <Dashiva>
zcorpan_: Well, it's <bar/>, then <bar></bar> and finally an unmatched </bar> right now

[13:43:01.0000] <annevk>
jwalden, sorry for the delay, had a meeting and window.postMessage() does not work in Opera; we use document.postMessage()

[13:43:02.0000] <jwalden>
ah

[13:43:03.0000] <jwalden>
are you planning on supporting both eventually, then?

[13:43:04.0000] <zcorpan_>
Dashiva: right

[13:44:00.0000] <annevk>
jwalden, I suppose so...

[13:44:01.0000] <jwalden>
we currently return an empty string, for what that's worth

[13:44:02.0000] <zcorpan_>
Dashiva: my point is that createElement() causes ie to use "xml parsing" for that tag name, same as tags that have colons in them

[13:44:03.0000] <annevk>
ok, that's the same then

[13:44:04.0000] <zcorpan_>
i.e. /> is self-closing, unlike for "html parsing"

[13:45:00.0000] <jwalden>
hm

[13:45:01.0000] <jwalden>
too bad we can't have the same behavior for both

[13:45:02.0000] <Dashiva>
zcorpan_: Aren't all unknown elements self-closing by default in IE?

[13:45:03.0000] <jwalden>
dunno how much a compatibility concern it'd be to make both null, since changing document.domain is risky-ish

[13:45:04.0000] <zcorpan_>
Dashiva: not <foo:bar>

[13:46:00.0000] <annevk>
jwalden, does the domain value do what document.domain does?

[13:46:01.0000] <annevk>
jwalden, I don't think there's content out there that relies on it being "" so that should be changeable

[13:46:02.0000] <Dashiva>
zcorpan_: Yeah, but the issue is making the new elements work in IE, isn't it? And those don't have colons

[13:46:03.0000] <jwalden>
annevk: no, data:text/html,<script>alert(document.domain)</script> alerts null for me while the previous was empty string

[13:47:00.0000] <annevk>
that's the empty string in Opera

[13:47:01.0000] <zcorpan_>
Dashiva: yep. *but*, integration of svg and mathml has been discussed, with /> syntax

[13:47:02.0000] <jwalden>
haha

[13:47:03.0000] <annevk>
thank god

[13:47:04.0000] <annevk>
we're internally consistent :p

[13:47:05.0000] <jwalden>
what a mess

[13:48:00.0000] <annevk>
/me tries Safari

[13:48:01.0000] <annevk>
Safari does empty string too it seems

[13:49:00.0000] <annevk>
data:text/html,<script>alert(document.domain === "")</script> yields true anyway

[13:49:01.0000] <annevk>
/me hopes Firefox can change

[13:49:02.0000] <jwalden>
guess Hixie may want to reconsider null vs. empty string

[13:49:03.0000] <jwalden>
I can certainly change postMessage

[13:50:00.0000] <jwalden>
document.domain, probably as well

[13:50:01.0000] <jwalden>
shouldn't be hard, question is whether it breaks people

[13:50:02.0000] <jwalden>
/me would hope not

[13:52:00.0000] <annevk>
they'd rely on non-standards!

[13:52:01.0000] <annevk>
can you imagine?

[13:53:00.0000] <gsnedders>
But they aren't MS, so no need to do much.

[13:53:01.0000] <Philip`>
mpt: It just calls document.createElement('header') etc

[13:54:00.0000] <mpt>
Seriously, I wonder whether changing the value of the <meta> element after-the-fact works

[13:54:01.0000] <gsnedders>
mpt: it won't, the action is done when the parser comes across it

[13:56:00.0000] <mpt>
that's no fun

[13:57:00.0000] <gsnedders>
Or at least that's the impression I got from Chris Wilson when talking to him about it over a month ago in #html-wg

[13:59:00.0000] <Philip`>
I wonder how nicely it will interact with the Live DOM Viewer's method of dynamically constructing pages...

[14:25:00.0000] <roc_>
of course changing the meta value could not work

[14:41:00.0000] <jruderman>
Hixie: why doesn't <a ping> send referrer? (or cookies or http auth)

[14:41:01.0000] <jruderman>
Hixie: not sending referrer seems like it invites CSRF

[14:42:00.0000] <jruderman>
/me finds the changelog entry pointing at http://lists.whatwg.org/pipermail/whatwg-whatwg.org/2008-January/013637.html and starts reading it

[14:43:00.0000] <jruderman>
ugh

[14:44:00.0000] <jruderman>
sites that blacklist attributes in an attempt to prevent XSS/CSRF are broken

[14:44:01.0000] <Hixie>
not sending referrer seems to invite CSRF, but that's blocked by not sending cookies, no?

[14:44:02.0000] <Hixie>
there's no question that the sites in question are broken

[14:44:03.0000] <jruderman>
not sending referrer+cookies makes it harder to prevent CSRF against the link tracker

[14:44:04.0000] <Hixie>
why?

[14:45:00.0000] <jruderman>
because you have to include a magic token in the ping url

[14:45:01.0000] <jruderman>
instead of being able to check the referrer

[14:47:00.0000] <annevk>
Referer is not that reliable...

[14:48:00.0000] <jruderman>
it's a whole lot more sane than magic tokens

[14:52:00.0000] <annevk>
dare I suggest using a new HTTP method "PING" ...

[14:52:01.0000] <Philip`>
Only if I can suggest another new HTTP method "PONG"

[14:53:00.0000] <Philip`>
which gets sent in response to PINGs, or gets sent if the web server thinks the client smells

[14:53:01.0000] <gsnedders>
is that case-insensitive like currently defined methods or not?

[14:53:02.0000] <annevk>
or if the server wants to play PING/PONG

[14:55:00.0000] <annevk>
maybe PING/PONG is more server-to-server communication

[14:56:00.0000] <othermaciej>
clearly we should use SYN/ACK

[14:56:01.0000] <othermaciej>
or GET/200 OK

[14:57:00.0000] <Hixie>
jruderman: sorry, had to run off briefly

[14:58:00.0000] <Hixie>
tbl had the interesting idea of using a raw UDP packet

[14:58:01.0000] <Hixie>
but i don't know that that's where we want to go

[14:58:02.0000] <Hixie>
jruderman: i'm very open to feedback on what to do about the referer thing

[14:59:00.0000] <Philip`>
RX packets:100854 errors:1057 dropped:230798 overruns:0 frame:0

[14:59:01.0000] <Philip`>
I'm not sure UDP is a great idea :-)

[15:00:00.0000] <annevk>
how easy is it to script against UDP on the server?

[15:01:00.0000] <Hixie>
(udp is a bad idea for a host of reasons, i wouldn't worry about seriously considering it)

[15:01:01.0000] <Philip`>
You need to run a new server process, which is possibly difficult on many web hosts

[15:02:00.0000] <annevk>
i see, i'd still be interested to know though

[15:02:01.0000] <Philip`>
although if the protocol is simple enough, your server process could be "netcat -ul 1234 >> ping_log"

[15:03:00.0000] <annevk>
ah, i see

[15:03:01.0000] <annevk>
that shouldn't be too tricky i think

[15:03:02.0000] <Philip`>
(You'd need to be a bit carefuller to avoid data corruption if people violate the protocol when sending you packets)

[15:04:00.0000] <Philip`>
(Also, it'd be pretty nasty with virtual hosting)

[15:05:00.0000] <Hixie>
you'd also have troubles with proxies and firewalls

[15:08:00.0000] <SadEagle>
Philip`: if you care, getImageData/putImageData/toDataURL are in in konq svn (both branches..)

[15:09:00.0000] <SadEagle>
Philip`: still need to fix the onload bug that may cause some pixmap-based testcases to fail intermittengly..

[15:10:00.0000] <Philip`>
SadEagle: Sounds good - I ought to be busy with other things tonight, so I'll try to avoid the distraction of trying it out right now, but I'll have a look soon and see if I can break it :-)

[15:10:01.0000] <SadEagle>
thanks :-). It's a lot easier to try it out now :-)

[15:11:00.0000] <fredrikh>
Philip`: SadEagle mentioned you had a question about arcTo in khtml?

[15:13:00.0000] <Philip`>
fredrikh: I think he mentioned you'd been looking at Safari's arcTo, so I was just wondering if you'd seen http://lists.whatwg.org/pipermail/whatwg-whatwg.org/2007-July/012117.html

[15:14:00.0000] <fredrikh>
Philip`: i had

[15:14:01.0000] <Philip`>
fredrikh: Okay

[15:14:02.0000] <Philip`>
fredrikh: I don't think I have anything new or useful to add now :-)

[15:15:00.0000] <fredrikh>
Philip`: but there's one thing that you didn't mention there: http://ktown.kde.org/~fredrik/canvas/arcto3.html

[15:15:01.0000] <fredrikh>
what happens when the lines are too short for the circle to tangent them :)

[15:17:00.0000] <Philip`>
"the line defined by the points (x0, y0) and (x1, y1)" etc meant the infinite line which passes through those points (assuming the points are not coincident)

[15:17:01.0000] <fredrikh>
i was also interested in knowing where the final point ends up when the angle between the tangent lines is 0 degrees

[15:18:00.0000] <fredrikh>
since you can't really add an infinitely long line to the path

[15:18:01.0000] <fredrikh>
Philip`: ah, i must have missed that

[15:18:02.0000] <Philip`>
You can do a good approximation of an infinitely long line, as long as you're not silly like Firefox and have a very limited coordinate range

[15:20:00.0000] <fredrikh>
yeah, the current implementation just adds a very long line segment

[15:25:00.0000] <SadEagle>
fredrikh: I think I might know what's up with the slightly-off colors..

[15:27:00.0000] <SadEagle>
fredrikh: it's probably just AA blending w/the red BG with very high, but not full, pixel coverage

[15:55:00.0000] <fredrikh>
SadEagle: well, the odd thing about it is that it's pixels in the middle, not near the edges

[15:56:00.0000] <SadEagle>
well, the one I tested had it on the edge, and not the middle ones...

[15:57:00.0000] <fredrikh>
in the skewed transform test, and one of the arctTo tests it's in the middle

[15:57:01.0000] <fredrikh>
or close to it


2008-01-24
[16:01:00.0000] <jwalden>
anyway, Hixie: sounds like |document.domain| should probably be the empty string in contexts where there's no host, and likewise for |MessageEvent.domain| -- I'll send an email to the list about this as a reminder

[16:01:01.0000] <SadEagle>
fredrikh: if you look at the skewed example, that seems to be right on the interior,I think

[16:04:00.0000] <Hixie>
it would be funny if browsers looked for the "UA compat" switch and broke rendering if they saw it

[16:04:01.0000] <Hixie>
(regardless of the value)

[16:04:02.0000] <Hixie>
jwalden: thanks

[16:05:00.0000] <hober>
/me contemplated telling Emacs to highlight it in `font-lock-error-face'

[16:05:01.0000] <jwalden>
/me also remembers to send the email about open() and origins, while he's at it

[16:06:00.0000] <SadEagle>
Hixie: making a bug icon crawl over it may be less drastic

[16:21:00.0000] <Hixie>
i think we need to drop non-native ImageData

[16:21:01.0000] <Hixie>
and just have a createImageData() method

[16:21:02.0000] <Hixie>
and require manipulation of the native ImageData objects

[16:21:03.0000] <Hixie>
for perf

[16:21:04.0000] <Hixie>
(based on discussions with various people)

[16:30:00.0000] <SadEagle>
Hixie: the KJS garbage collector (and I am sure the JSC one) like that idea

[16:32:00.0000] <SadEagle>
Hixie: oh, and am I imagining things, or did html5 have a rule saying to raise an exception in JS if there were not enough arguments... is that gone now?

[16:33:00.0000] <Hixie>
that kind of contern is gonna be part of dom bindings, i believe

[16:33:01.0000] <SadEagle>
that spec seem to have the machinery for describing stuff right now, but not the actual info.. 

[16:34:00.0000] <Hixie>
yeah

[16:35:00.0000] <othermaciej>
SadEagle: I don't think GC is the biggest problem with the current design

[16:35:01.0000] <SadEagle>
othermaciej: think of GC marking a million-element array..

[16:35:02.0000] <othermaciej>
just serialize/deserialize overhead

[16:35:03.0000] <Philip`>
SadEagle: Think of calculating the contents of a million-element array

[16:36:00.0000] <Philip`>
(in JavaScript)

[16:36:01.0000] <SadEagle>
well, my current impl doesn't use a native array object anyway

[16:36:02.0000] <Philip`>
(and preferably with interesting contents, so you have to do lots of work per pixel anyway)

[16:37:00.0000] <SadEagle>
Philip`: sure. Just the GC has an additional complication of being hard-to-interrupt native code.

[16:38:00.0000] <SadEagle>
othermaciej: the way I just did in khtml is to have a special object for ImageData.data, and then if one calls putImageData with a non-ImageData it does the deserialize mess

[16:43:00.0000] <othermaciej>
SadEagle: yeah, that wouldn't be great (though not totally tragic if they are all immediate values)

[16:43:01.0000] <Hixie>
http://blogs.zdnet.com/open-source/?p=1925 -- apparently we started in october 2005

[16:44:00.0000] <Hixie>
i actually thought we started around november 2003, but you know, details.

[17:11:00.0000] <othermaciej>
Hixie: that createElement parsing trick is really good news

[17:11:01.0000] <othermaciej>
Hixie: now if Firefox would just fix parsing of blocks inside unknown elements...

[17:12:00.0000] <Hixie>
yeah

[18:19:00.0000] <takkaria>
I wonder how much effort it would take to fix the parsing of blocks inside unknown elements

[18:19:01.0000] <takkaria>
(in Fx)

[18:26:00.0000] <Ketsuban>
I love the prevailing opinion in #html. They seem to be pretty heavily in favour of XHTML 2 over HTML5. :P

[18:28:00.0000] <Hixie>
woe is us

[18:28:01.0000] <Hixie>
whatever shall we do

[18:29:00.0000] <Ketsuban>
Maybe we should all post in our LiveJournals about it. :P

[19:01:00.0000] <AwayEagle>
Hixie: is any browser vendor planning on supporting xhtml2?

[19:22:00.0000] <Philip`>
/me notices that the number of comments on http://blogs.msdn.com/ie/archive/2008/01/21/compatibility-and-ie8.aspx is rapidly approaching the number on http://blogs.msdn.com/ie/archive/2007/12/19/internet-explorer-8-and-acid2-a-milestone.aspx

[19:24:00.0000] <Philip`>
/me also notices that both comment pages are long enough that anybody who posts a comment will have either not read all the previous comments, or will have been driven insane by reading them, so in both cases they shouldn't be adding more

[20:51:00.0000] <Hixie>
AwayEagle: not that i've heard of, at least not web browser vendors

[21:18:00.0000] <jruderman>
acid3 is requiring SVG and SMIL? :/

[21:32:00.0000] <MacDome>
jruderman: until someone sends Hixie better tests

[21:32:01.0000] <jruderman>
hah

[21:32:02.0000] <MacDome>
jruderman: I think he's holding us ransom

[21:41:00.0000] <Hixie>
pretty much

[21:41:01.0000] <Hixie>
nobody has sent better tests, though

[21:41:02.0000] <Hixie>
so...

[22:48:00.0000] <othermaciej>
Ian Hickson promotes SMIL, podcast at 11

[23:00:00.0000] <MacDome>
othermaciej: I expect with all the slashdot coverage, this is just Ian lashing out, like an injured beast, cornered.

[00:26:00.0000] <hsivonen>
what's the deal with all this access-control PEP location debate? The browser is already the PEP.

[00:29:00.0000] <Hixie>
hsivonen: dunno, but if you work out the answer, let me know

[00:32:00.0000] <hsivonen>
I also find it interesting that Web arch people think that /robots.txt is bad and mnot as a HTTP cacheability expert likes it

[00:34:00.0000] <Hixie>
i found it hilarious that mnot described HTTP headers as "new"

[00:34:01.0000] <Hixie>
and that using OPTIONS was inappropriate

[00:36:00.0000] <hsivonen>
it seems to me that OPTIONS is achitecturally the most pure way to deal with this

[02:07:00.0000] <annevk>
hmm, http://ejohn.org/blog/html5-shiv/ mentions the IE workaround but no workaround for Firefox' bug

[02:08:00.0000] <jgraham>
annevk: I should perhaps have mentioned the <span> workaround in my comment

[02:09:00.0000] <annevk>
i don't like that

[02:09:01.0000] <jgraham>
Do you have a better one?

[02:09:02.0000] <annevk>
yes, Firefox to fix their damn bug

[02:09:03.0000] <annevk>
:)

[02:10:00.0000] <jgraham>
annevk: Fixing the bug is trivial, fiing it without breaking the web less so :)

[02:10:01.0000] <jgraham>
s/fiing/fixing/

[02:12:00.0000] <annevk>
Safari and Opera do it

[02:12:01.0000] <jgraham>
(although I don't know how many sites rely on residual style working across unknown elements, I guess it's a non-trivial number)

[02:13:00.0000] <annevk>
maybe if i'll complain on my blog someone will get annoyed and fixes it

[02:13:01.0000] <jgraham>
annevk: Safari and opera deal with <i><b><section><p></p></section></i></b> differently

[02:14:00.0000] <annevk>
oh yeah, Opera has some issues with that

[02:24:00.0000] <jgraham>
annevk: you shoul go ahead and blog if you think it will make any difference

[02:27:00.0000] <Philip`>
I've not noticed any Firefox developers objecting to the change - they just haven't bothered working on it

[02:30:00.0000] <krijnh>
http://www.quirksmode.org/blog/archives/2008/01/toughquiz_viii.html#c10784

[02:31:00.0000] <Philip`>
"Just tried this on my valid XHTML4 page." - wow, futuristic

[02:31:01.0000] <krijnh>
That too

[02:32:00.0000] <krijnh>
So what happens when everybody starts advicing the HTML5 doctype _already_ ?

[02:32:01.0000] <krijnh>
Would that be a good thing for HTML5, or a bad thing?

[02:33:00.0000] <krijnh>
Seems like this issue put lots of attention on HTML5

[02:34:00.0000] <annevk>
Philip`, actually, in our world XHTML4 is ancient

[02:35:00.0000] <annevk>
it would be bad for the IE team

[02:39:00.0000] <Camaban>
would be kind of weird, and potentially confusing if people start using HTML5 doctype, but are still coding in HTM4/XHTML1.0

[02:39:01.0000] <Camaban>
+L

[02:43:00.0000] <annevk>
some features are becoming increasingly more usable

[02:43:01.0000] <annevk>
such as <canvas>

[02:45:00.0000] <Camaban>
partly depends when IE8 comes out I guess

[02:45:01.0000] <Camaban>
if it's another year away....

[02:49:00.0000] <annevk>
excanvas makes <canvas> usable in IE

[02:50:00.0000] <krijnh>
And things like <svg> and <video> ?

[02:53:00.0000] <Philip`>
Just implement a Theora decoder in JavaScript, and use <canvas> to output the image date

[02:53:01.0000] <Camaban>
is there any "differences between HTML4.01 and HTML5" documentation?

[02:53:02.0000] <hsivonen>
hmm. I've lost track about scripting differences between quirks and standards modes

[02:53:03.0000] <hsivonen>
I'm pretty sure there are some

[02:53:04.0000] <Philip`>
Camaban: http://www.w3.org/TR/html5-diff/

[02:54:00.0000] <Camaban>
excellent, ty

[02:55:00.0000] <annevk>
hsivonen, document.compatMode :)

[02:55:01.0000] <annevk>
some browsers have differences for various layout related DOM attributes, but we might be able to get rid of those

[02:56:00.0000] <annevk>
getElementsByClassName() is likely different

[02:57:00.0000] <Philip`>
Firefox does http://software.hixie.ch/utilities/js/live-dom-viewer/?%3C!DOCTYPE%20html%3E%0A%3Cbody%20id%3Db%20onload%3Dw(b)%3E differently in quirks vs standards - does that count?

[02:58:00.0000] <Philip`>
(But Opera and IE don't)

[02:59:00.0000] <hsivonen>
Philip`: thanks. that counts

[03:00:00.0000] <hsivonen>
annevk: the IE8 thing inspired me to refactor my doctype article roughly like you suggested last year

[03:00:01.0000] <hsivonen>
(not published yet)

[03:01:00.0000] <annevk>
k, does it simply talk about Opera instead of Opera 7.5 (and later) now? :)

[03:01:01.0000] <annevk>
/me was already skimming through it to see if it changed

[03:01:02.0000] <hsivonen>
annevk: no. at least not yet :-)

[03:02:00.0000] <krijnh>
http://ejohn.org/blog/html5-doctype/#comment-296943

[03:03:00.0000] <hsivonen>
krijnh: I'll reply

[03:04:00.0000] <krijnh>
annevk: why would it be bad for the IE team?

[03:06:00.0000] <Camaban>
that comment kind of raises the point I'm wondering about, how much effort, beyond just changing the doctype, would people already writing decent code need to make

[03:07:00.0000] <hsivonen>
krijnh: replied

[03:09:00.0000] <hsivonen>
Camaban: as the draft currently stands, most people will also hit the internal character encoding declaration syntax change issue

[03:12:00.0000] <krijnh>
There goes your number one position for 'html5 doctype' btw annevk ;)

[03:13:00.0000] <hsivonen>
can I get the #1 position for "doctype"? and a pony, too?

[03:13:01.0000] <zcorpan_>
hsivonen: elm.style.height = 5;

[03:13:02.0000] <hsivonen>
zcorpan_: thanks

[03:15:00.0000] <krijnh>
http://snook.ca/archives/browsers/importance_of_being_html5/#c57321

[03:16:00.0000] <zcorpan_>
hmm, if the html5 doctype triggers ie8 mode, then that means that my and Hixie's advice effectively is "don't use the html5 doctype"

[03:16:01.0000] <hsivonen>
all this blog talk about the HTML5 doctype and IE8 has the potential of poisoning the doctype before IE8 ships as far as MS is concerned...

[03:17:00.0000] <annevk>
krijnh, not many people search for that

[03:17:01.0000] <annevk>
krijnh, it's too simple

[03:17:02.0000] <annevk>
"related:youporn.com/" on the other hand...

[03:18:00.0000] <krijnh>
Hehe

[03:19:00.0000] <zcorpan_>
granted, this ie8 thing is going to result in a lot of uptake on html5 doctype usage

[03:19:01.0000] <krijnh>
hsivonen: that's my point exactly

[03:19:02.0000] <krijnh>
I hope there's enough information available to guide the newcomers

[03:19:03.0000] <Camaban>
uptake of HTML5 doctype perhaps, but not HTML5

[03:20:00.0000] <hsivonen>
krijnh: I'm working on that

[03:20:01.0000] <krijnh>
Camaban: that would be bad

[03:20:02.0000] <Camaban>
krijnh: indeed

[03:20:03.0000] <Camaban>
but if people can write code mostly like they do now, and use the HTML5 doctype to 'fix' ie8....

[03:20:04.0000] <annevk>
what would be bad?

[03:20:05.0000] <annevk>
actually, what is bad about that?

[03:20:06.0000] <krijnh>
If the HTML5 doctype becomes a IE7 standards mode trigger

[03:20:07.0000] <Lachy>
yes, unfortunately, we can't encourage widespread use of the HTML5 DOCTYPE until at least IE9, but more likely not until browsers, especially IE, start shipping support for more HTML5 features.

[03:21:00.0000] <krijnh>
And NOT the IE8 standards mode trigger

[03:21:01.0000] <hsivonen>
annevk: if MS decides that the HTML5 doctype is deployed too widely when IE8 ships

[03:21:02.0000] <krijnh>
Yeah

[03:21:03.0000] <krijnh>
That's not bad for IE devs, that's bad for authors

[03:21:04.0000] <annevk>
that depends on what we think of the IE strategy

[03:21:05.0000] <annevk>
and how much we think it will work, etc.

[03:21:06.0000] <annevk>
/me doesn't see a real problem either way

[03:22:00.0000] <krijnh>
Well, if the news now is you can use the html5 doctype so you don't have to use the meta.. And that's dismissed when IE8 is shipped..

[03:23:00.0000] <Lachy>
maybe I should blog about not actively using the HTML5 DOCTYPE, explaining the problems with doing so

[03:23:01.0000] <krijnh>
Not that it makes sense to already include the new doctype, but does everybody know that?

[03:24:00.0000] <annevk>
if IE does lock it down who cares? i don't really see their strategy succeeding

[03:24:01.0000] <Camaban>
bit of a gamble to take :)

[03:25:00.0000] <annevk>
acknowledging that we agree that their solution is the way to go and therefore recommending people to not use the HTML5 DOCTYPE seems wrong to me

[03:26:00.0000] <krijnh>
To not use it _yet_

[03:26:01.0000] <krijnh>
It would be great for HTML5 adoption if IE8 comes out and developers don't want to add an IE-only meta tag

[03:27:00.0000] <annevk>
if the goal is for browsers to behave the same (and I think it still is, however near impossible it is to get that watertight), x-ua-compatible is not the way to go

[03:27:01.0000] <krijnh>
But not if the new doctype doesn't change the way the page is rendered anyway

[03:28:00.0000] <annevk>
i'm not ready to make concessions on that goal

[03:30:00.0000] <krijnh>
I'm just seeing people unhappy with the meta thing, and totally happy with the HTML5 doctype solution

[03:30:01.0000] <krijnh>
And getting enthousiastic about HTML5, which is also even a WD this week..

[03:31:00.0000] <Camaban>
krijnh: wouldn't say totally happy ;) not everyones keen on HTML5

[03:31:01.0000] <Camaban>
more good will towards HTML5 than the meta tag though, by a long way...

[03:31:02.0000] <krijnh>
Indeed

[03:32:00.0000] <othermaciej>
I think IE locking in bug mode for the HTML5 doctype would be Microsoft's problem

[03:32:01.0000] <othermaciej>
I don't think there is any reason to advocate that people shouldn't use it

[03:32:02.0000] <hsivonen>
annevk: I'm assuming that MS won't change their mind about the number of IE8 modes in the IE8 timeframe, so that needs to be assumed as a constraint on what advice I give. However, I assume that there is a chance that they change their mind in the IE9 timeframe.

[03:32:03.0000] <krijnh>
I think it would be my problem as well, as an author

[03:34:00.0000] <Camaban>
well if you're going to advocate HTML5 doctype, that triggers 'edge' mode doesn't it? so they would end up back in the same situation for IE9 anyway

[03:34:01.0000] <Camaban>
same way if we advocate using the meta tag, but just setting everything to edge

[03:34:02.0000] <krijnh>
Not if they continue development after IE8, just as other browsers do

[03:34:03.0000] <krijnh>
Improve their standards support et cetera

[03:35:00.0000] <Camaban>
still got the issue of things that work in IE8, not working in IE9, causing people to complain that MS 'broke the web'

[03:35:01.0000] <krijnh>
Wouldn't IE9 still support the same trigger as IE8 ?

[03:36:00.0000] <krijnh>
Switch that is

[03:36:01.0000] <krijnh>
Why would they need a different switch again in IE9? The only reason I can think of is if they start development/bugfixing after IE8 again for 5 years

[03:37:00.0000] <krijnh>
s/start/stop - details :)

[03:37:01.0000] <Camaban>
the gap between IE7 and 8 won't be 5 years

[03:37:02.0000] <Camaban>
I don't see your point?

[03:38:00.0000] <krijnh>
Between IE8 and IE9

[03:38:01.0000] <Camaban>
depends entirely on the differences between the 2, not the length of time between them

[03:39:00.0000] <Camaban>
if there's some equivilent to something like the * html hack breaking between 8 and 9, it'll still be an issue

[03:44:00.0000] <Lachy>
othermaciej, if MS locks in the HTML5 DOCTYPE to IE8 mode, then while it is certainly their problem, they make it a problem for *every single web developer*.

[03:44:01.0000] <Lachy>
therefore, reducing the chance of MS encountering problems with the HTML5 DOCTYPE is the only solution until their standards support increases sufficiently

[03:45:00.0000] <Philip`>
It wouldn't be a problem if HTML5 then changed its doctype to something else

[03:45:01.0000] <othermaciej>
I think they would be hard pressed to lock it in before they've even implemented any of the spec

[03:45:02.0000] <krijnh>
Lachy: You mean to IE7 mode?

[03:45:03.0000] <othermaciej>
or their locked in bug mode for it could never meaningfully support HTTML5 at all

[03:45:04.0000] <Lachy>
krijnh, no, Chris has already stated that HTML5 DOCTYPE will trigger IE8 mode in IE8.  The question is whether they lock it to IE8 mode for IE9, or any other future version

[03:46:00.0000] <zcorpan_>
<!doctypehtml>

[03:46:01.0000] <krijnh>
And what if between now and the IE8 release everybody starts using the new doctype?

[03:46:02.0000] <Philip`>
Lachy: It's only been stated as an example in a comment in a blog post, so it wouldn't be impossible for that to change before IE8 is released

[03:47:00.0000] <Lachy>
Philip`, from previous conversations I've had with Chris, I'm certain the decision to make <!DOCTYPE html> trigger full standards mode won't change

[03:48:00.0000] <Philip`>
"Any unknown (i.e. not widely deployed) DOCTYPE.  HTML5, for example." will change if the HTML5 doctype becomes known and widely deployed

[03:48:01.0000] <krijnh>
And it's becoming known right now

[03:48:02.0000] <krijnh>
Because of the IE-only meta switch we have to include otherwise

[03:48:03.0000] <othermaciej>
the risk isn't that it will get locked into IE7 mode, more that it will get locked into IE8 mode and therefore not gain any bug fixes or new features in IE9

[03:49:00.0000] <othermaciej>
I am curious how Microsoft intends to deal with DOM and JS issues in their versioning scheme

[03:49:01.0000] <othermaciej>
will different compat modes have different sets of JS and DOM bugs and functionality?

[03:49:02.0000] <annevk>
and Acid2...

[03:50:00.0000] <Lachy>
acid2 won't pass with modifying it to include x-ua-compatible

[03:50:01.0000] <othermaciej>
with their scheme it seems impossible for them to really pass Acid2, short of some sort of blatant cheating which would probably look worse than just not passing

[03:50:02.0000] <krijnh>
othermaciej: wouldn't that risk be greater if people start using the new doctype now (because of the great news and all), see no difference between browsers and just keep using it because they like it..

[03:51:00.0000] <Philip`>
They could make <!doctype html public "-//w3c//dtd html 4.01//en"> (as in Acid2) be treated the same as an unknown doctype (i.e. latest rendering mode), since it's used on less than 0.1% of some set of pages

[03:51:01.0000] <othermaciej>
krijnh: I don't really know

[03:51:02.0000] <othermaciej>
I guess I'm glad I'm not a web developer

[03:51:03.0000] <krijnh>
Heh :)

[03:52:00.0000] <othermaciej>
I don't know how common it is for the doctype to not mention strict.dtd or loose.dtd or whatever

[03:53:00.0000] <Philip`>
http://philip.html5.org/data/doctypes-lc.txt

[03:53:01.0000] <Philip`>
(Not very common)

[03:53:02.0000] <krijnh>
It's probably not a big deal, there aren't too many developers who like losing their validation mechanism

[03:53:03.0000] <krijnh>
But if hsivonen starts spreading validator.nu everywhere..

[03:54:00.0000] <krijnh>
I don't know what happens, I guess we'll just have to see

[03:54:01.0000] <hsivonen>
comments? http://hsivonen.iki.fi/doctype/temp.html

[03:54:02.0000] <othermaciej>
special-casing the Acid2 DTD string would be kind of cheesy, though less so than hardcoding the URL

[03:54:03.0000] <hsivonen>
(I noticed that I need to update the table key to cover Safari 3)

[03:55:00.0000] <othermaciej>
too bad Hixie didn't use a super popular standards mod doctype

[03:55:01.0000] <hsivonen>
Hixie seems to have a tendency towards minimizing the length of the doctype

[03:55:02.0000] <Philip`>
hsivonen: s/discused/discussed/

[03:56:00.0000] <madmoose>
html6 will probably have <!dctp h>, then ;)

[03:56:01.0000] <krijnh>
Mr. Turin will handle that for us ;)

[03:56:02.0000] <hsivonen>
Philip`: thanks

[03:58:00.0000] <othermaciej>
hsivonen: the Dashboard compat mode in WebKit isn't really a browser mode

[03:59:00.0000] <othermaciej>
hsivonen: it's not ever exposed in Safari or anything else that would be considered a browser, only in Dashboard itself

[03:59:01.0000] <othermaciej>
(it would be fair to call it an engine mode but it's even less browser-relevant than WML mode in Opera)

[04:00:00.0000] <hsivonen>
othermaciej: changed to "engine"

[04:01:00.0000] <krijnh>
I guess I'm glad I'm not a browser developer

[04:03:00.0000] <othermaciej>
hsivonen: I didn't know Firefox had scripting quirks - now I feel educated

[04:04:00.0000] <othermaciej>
(we've tried to avoid them in WebKit but I think Dashboard mode may have some; not the regular quirks mode though)

[04:05:00.0000] <annevk>
i'd think that style.width = 2 just invokes the CSS parser

[04:06:00.0000] <annevk>
and that therefore it's not really a scripting quirks

[04:08:00.0000] <hsivonen>
annevk: ok

[04:09:00.0000] <hsivonen>
annevk: removed. the goal is to give existence proof--not to document all the quirks anyway

[04:10:00.0000] <hsivonen>
published

[04:12:00.0000] <othermaciej>
hsivonen: that's good organization for the document

[04:13:00.0000] <hsivonen>
othermaciej: thanks. this is the first major reorg since 2000

[04:16:00.0000] <hsivonen>
I should test iCab some day to find out if it has modes, too.

[04:17:00.0000] <zcorpan_>
annevk: true

[04:22:00.0000] <annevk>
hsivonen, http://hsivonen.iki.fi/engines/ Opera 9.5 and up use "futhark"

[04:23:00.0000] <Lachy>
http://www.katemonkey.co.uk/article/48/x-ua-lemur-compatible

[04:23:01.0000] <hsivonen>
annevk: thanks.

[04:24:00.0000] <annevk>
hsivonen, also, I believe the main reason HTML5 calls it "no quirks mode" and "limited quirks mode" is that the moment you start defining these modes calling one "standards" does not make sense as they are all part of a standard

[04:24:01.0000] <hsivonen>
annevk: oh. I though the reason I gave was the main reason.

[04:24:02.0000] <hsivonen>
Hixie: what's the main reason?

[04:26:00.0000] <hsivonen>
annevk: updated

[04:26:01.0000] <krijnh>
Lachy: :D

[04:27:00.0000] <annevk>
hsivonen, you refer to XML mode (which makes sense) but you only define application/xhtml+xml mode

[04:29:00.0000] <hsivonen>
annevk: do I need to define some document object and createElement craziness, too?

[04:30:00.0000] <hsivonen>
s/define/document/

[04:30:01.0000] <annevk>
seems fine as is

[04:32:00.0000] <zcorpan_>
Lachy: that was really funny :)

[04:32:01.0000] <hsivonen>
annevk: I try to balance hair-split correctness against misunderstandings induced by XHTML propaganda

[04:32:02.0000] <hsivonen>
annevk: I think if I don't put MIME types in the readers' face, some will think they can get an XML mode with doctype

[04:33:00.0000] <annevk>
just say (XML mode) after it

[04:33:01.0000] <hsivonen>
annevk: ok

[04:34:00.0000] <hsivonen>
annevk: done. thanks

[04:40:00.0000] <MikeSmith>
virtuelv, annevk  - are Opera weeklies apt-gettable from anywhere

[04:41:00.0000] <annevk>
/me doesn't know

[04:42:00.0000] <zcorpan_>
hsivonen: looks good

[04:42:01.0000] <hsivonen>
zcorpan_: thanks

[04:42:02.0000] <MikeSmith>
annevk - ok

[04:42:03.0000] <virtuelv>
MikeSmith: as in "are they in a repository?" -- not as far as I know

[04:43:00.0000] <MikeSmith>
virtuelv - OK. at least being able to automate download of the latest available weekly would be nice

[04:44:00.0000] <MikeSmith>
script it I mean

[04:44:01.0000] <MikeSmith>
I used to just pipe the buildbot messages from my mail client to a script

[05:01:00.0000] <MikeSmith>
hsivonen, annevk, jgraham - I know I've asked this before, but I'm trying to remember if html5lib and the validator.nu parser are capable of round-tripping a file from html to xml back to html

[05:04:00.0000] <othermaciej>
MikeSmith: were you looking for me earlier?

[05:05:00.0000] <MikeSmith>
othermaciej - yeah, but I'll ask over on #webkit because it's an iPhone-related question

[05:05:01.0000] <othermaciej>
ok

[05:24:00.0000] <hsivonen>
I wonder if I should shorten the title of my doctype page to something like Activating Browser Modes with Doctype

[05:25:00.0000] <othermaciej>
hsivonen: we usually refer to Safari's engine as "WebKit" nowadays (regarding your engine page again)

[05:25:01.0000] <othermaciej>
WebCore is an implementation detail and a somewhat obsolete term for referring to the engine

[05:26:00.0000] <hsivonen>
othermaciej: fixed. thanks

[05:27:00.0000] <othermaciej>
hsivonen: this comment below still mentions WebCore: "WebCore and JavaScriptCore are not independent implementations but Apple’s forks of KHTML and KJS"

[05:27:01.0000] <othermaciej>
hsivonen: (and I'm not sure it's a useful way to think about things any more, even though it's still true that they are forks)

[05:28:00.0000] <hsivonen>
othermaciej: fixed again. thanks

[05:31:00.0000] <hsivonen>
Hixie: from your manual pingback client: Failed to ping back 'http://ln.hixie.ch/': RPC::XML::Client:send_request: parse-level error: 

[05:31:01.0000] <hsivonen>
syntax error at line 1, column 0, byte 0 at /usr/lib/perl5/XML/Parser.pm line 187 (Acknowledged.)

[05:31:02.0000] <hsivonen>
Hixie: same thing with pinging webkit.org

[06:15:00.0000] <krijnh>
<blockquote><p>[Quoted]</p><p><cite>[Cited]</cite></p></blockquote> isn't the way HTML5 want it, right?

[06:16:00.0000] <krijnh>
What's the reason for that?

[06:34:00.0000] <hsivonen>
MikeSmith: I'm not sure I understand your round-tripping question

[06:34:01.0000] <hsivonen>
MikeSmith: did you mean parse as HTML5, serialize as XHTML5 without namaspace prefix or CDATA sections and reparse as HTML5?

[06:35:00.0000] <hsivonen>
I think there'd be some edge cases related to <pre> or <textarea> content starting with a line feed

[06:36:00.0000] <hsivonen>
MikeSmith: as for whether the adoption agency stuff is stable under reparse, I'm not sure

[06:41:00.0000] <MikeSmith>
hsivonen - OK. I was thinking of the use case where somebody might want to take an html source file, parse and serialize to xml because they want to run some xml tool on it (to do some minor xslt transformation on), then serialize that (slightly different) result back to html

[06:42:00.0000] <MikeSmith>
xslt part being just an example

[06:42:01.0000] <MikeSmith>
general case being just to be able to run it through xml tools

[06:42:02.0000] <hsivonen>
MikeSmith: that's possible but the HTML serialization may not parse back as the same DOM

[06:43:00.0000] <MikeSmith>
right, Ok

[06:43:01.0000] <hsivonen>
depends on what kind of tree comes out of the XML tool

[06:43:02.0000] <hsivonen>
conceptually, that's what the XLST4HTML5 sample program that comes with the V.nu parser does

[06:44:00.0000] <MikeSmith>
yeah, this is coming back to me now from the previous time(s) I asked the same question

[06:44:01.0000] <hsivonen>
it just skips the parts of serializing to XML and parsing the XML back

[06:46:00.0000] <zcorpan_>
Hixie: test 4 is wrong

[06:47:00.0000] <zcorpan_>
      expect(i.nextNode(), document.getElementById('instructions').firstChild);

[06:47:01.0000] <zcorpan_>
      expect(i.nextNode(), document.links[0]);

[06:47:02.0000] <zcorpan_>
there's a <span></span> in there which you have forgotten in the script, it seems

[06:52:00.0000] <MikeSmith>
hsivonen - anyway, the reason I was thinking of it was also because of Norm's blog entry about HTML5 and his mention that 'One of the two “authoring formats” described by the HTML 5 specification is a custom one.' and 'The goal of the custom parser, as I understand it, is that it imposes an unambiguous HTML 5 interpretation on any random stream of characters."

[06:56:00.0000] <zcorpan_>
Hixie: also, other tests seem to create and insert links, so document.links[0] doesn't point to the link to reference.html. i'm not sure if this is a bug in the test or not, yet

[06:56:01.0000] <zcorpan_>
(i.e. when checking against document.links[0] in test 4)

[07:07:00.0000] <Lachy>
/me successfully upgraded blog.whatwg.org to wordpress 2.3.2

[07:13:00.0000] <krijnh>
Code is poetry :)

[07:18:00.0000] <inimino>
*some* code is poetry

[07:29:00.0000] <krijnh>
Yeah, like http://www.joomla.org/content/view/4488/1/ (also released on January 22 btw)

[07:33:00.0000] <annevk>
that was not a successful upgrade Lachy

[07:33:01.0000] <annevk>
http://blog.whatwg.org/html-5-published-as-w3c-first-public-working-draft

[07:35:00.0000] <krijnh>
Details :)

[07:40:00.0000] <Lachy>
what?

[07:40:01.0000] <Lachy>
oh crap. I forgot the damn .htaccess

[07:41:00.0000] <Lachy>
I knew I should have kept the orignal folder around longer :-(

[07:42:00.0000] <Lachy>
fixed

[07:44:00.0000] <Lachy>
I must write some sort of upgrade script to make that easier

[07:46:00.0000] <Lachy>
should be possible: just download latest.zip from wordpress.org, unzip, cp required files across to new directory, replace old dir with new dir (keeping backup of old dir) and then wget upgrade.php

[07:49:00.0000] <zcorpan_>
Hixie: oh, and document.links also includes <area href>s

[07:52:00.0000] <annevk>
you'd think someone has written such a script already

[07:56:00.0000] <Lachy>
google reveals several different plugins and shell scripts. Just need to pick one that will work

[08:07:00.0000] <gsnedders>
"Note that whatever solution we have today is not necessarily final. We've explained (I hope) why we need a solution. We can debate if a solution is in fact needed (I am convinced it is) and what the best solution might be..." — Alex Mogilevsky on www-style (about IE8 Standards Mode opt-in)

[08:13:00.0000] <annevk>
http://lists.w3.org/Archives/Public/public-xml-core-wg/2008Jan/0053.html

[08:13:01.0000] <annevk>
hmm

[08:15:00.0000] <krijnh>
What's wrong with it?

[08:23:00.0000] <gsnedders>
/me sighs

[08:24:00.0000] <gsnedders>
Time to sit down and write http-parsing

[09:30:00.0000] <annevk>
http://lists.w3.org/Archives/Public/public-html-comments/2008Jan/0023.html CSS5 heh

[09:30:01.0000] <annevk>
didn't notice that :)

[10:00:00.0000] <gsnedders>
anyone have a clue how many sites use the wrong Content-Encoding?

[10:01:00.0000] <Philip`>
Since http://http-parsing.gsnedders.com/ indicates 1 content-encoding header in total, I have no clue

[10:02:00.0000] <gsnedders>
1 out of ~15k I find amazing to believe, FWIW

[10:02:01.0000] <gsnedders>
I normally hit issues trying to follow the spec after a few hundred

[10:03:00.0000] <annevk>
text/html;ISO-8859-1; charset=UTF-8 nice

[10:03:01.0000] <SadEagle>
heh.

[10:04:00.0000] <SadEagle>
annevk: nothing beats charset=UCS-2 or such in an ascii file :-)

[10:05:00.0000] <SadEagle>
gsnedders: what % of the pages you tested were missing content-type?

[10:05:01.0000] <gsnedders>
SadEagle: no idea :P

[10:06:00.0000] <SadEagle>
man, I need to write myself a todo list of things to write whatwg list or hixie about..

[10:06:01.0000] <gsnedders>
I just create a draft email with a subject line and no more

[10:06:02.0000] <Philip`>
gsnedders: Maybe I need to send an accept-encoding request header?

[10:06:03.0000] <gsnedders>
Philip`: maybe :)

[10:08:00.0000] <gsnedders>
SadEagle: the data set comes from Philip` 

[10:08:01.0000] <annevk>
SadEagle, please do cc some list :)

[10:09:00.0000] <gsnedders>
annevk: didn't you say something about chunked transfer encoding and trailing headers?

[10:10:00.0000] <annevk>
might be

[10:11:00.0000] <SadEagle>
looking through kio_http sources, the only 2 quirks it has for content-encoding: some servers like[d] to make tar.gz files into content-encoding:gzip mimetype:tar, and some site out there used content-encoding:8bit

[10:12:00.0000] <gsnedders>
annevk: "it's not entirely clear to me how that works though" is what you said, so nothing useful :)

[10:13:00.0000] <gsnedders>
SadEagle: yeah, Mozilla seems to do nothing more too

[10:15:00.0000] <zcorpan_>
hsivonen: hmm, "[Image of a nutshell]" seems like a bit weird alt text to me

[10:15:01.0000] <zcorpan_>
"In a nutshell: " or just "" seems to read better

[10:16:00.0000] <hsivonen>
zcorpan_: thanks. that has probably been there since 2000 when I didn't know better

[10:16:01.0000] <hsivonen>
zcorpan_: fixed

[10:17:00.0000] <hsivonen>
I find it amusing that SVG is sometimes marketed as being big on mobile. Today I read planet intertwingly on my phone and saw the text "embedded svg failed to render" or something to that effect

[10:18:00.0000] <hsivonen>
all of my desktop browsers support SVG but at least three out of my four mobile browsers don't

[10:22:00.0000] <hsivonen>
too bad that I seem to have lost the high-res alpha channel version of the nutshell photo in a hard disk crash or something

[10:35:00.0000] <gsnedders>
knowing when to trust Content-Length seems slightly more complex

[10:36:00.0000] <hsivonen>
/me naïvely thought that Content-Length worked

[10:37:00.0000] <virtuelv>
exactly what does IE do here? http://ejohn.org/blog/html5-shiv/ ?

[10:37:01.0000] <gsnedders>
hsivonen: oh, of course not.

[10:37:02.0000] <gsnedders>
hsivonen: why assume anything works? :)

[10:37:03.0000] <virtuelv>
does it prevent IE from autoclosing the unknown element, so that the DOM is autocorrected?

[10:38:00.0000] <gsnedders>
hsivonen: that said, I've never seen anything that isn't a number greater than or equal to 0 being returned (though when zero you have to discard the header, I think)

[10:39:00.0000] <annevk>
virtuelv, it sets different parsing behavior

[10:40:00.0000] <zcorpan_>
virtuelv: the parser treats that tag the same as it treats tags that have colons in them

[10:41:00.0000] <virtuelv>
zcorpan_: but you get a "correct" DOM, at least for non-empty elements?

[10:41:01.0000] <virtuelv>
s/DOM/document tree/

[10:42:00.0000] <zcorpan_>
the element ends up in the DOM with the original case preserved, /> is treated "like XML", the element can have contents, and so forth

[10:43:00.0000] <virtuelv>
Neat. IE's inane behavior is my last stumbling block for using certain HTML5 features

[10:44:00.0000] <zcorpan_>
stray end tags are ignored instead of generating empty "/FOO" elements

[10:51:00.0000] <annevk>
http://www.infoworld.com/article/08/01/22/W3C-offers-HTML-5-draft_1.html

[10:51:01.0000] <zcorpan_>
hsivonen: hmm, i found a bug in validator.nu

[10:51:02.0000] <zcorpan_>
Info: Using the schema for HTML5.

[10:51:03.0000] <zcorpan_>
The document validates according to the specified schema(s).

[10:51:04.0000] <zcorpan_>
<!DOCTYPE html>↩

[10:51:05.0000] <zcorpan_>
<title></title>↩

[10:51:06.0000] <zcorpan_>
<body>↩

[10:51:07.0000] <zcorpan_>
</span>

[10:56:00.0000] <annevk>
parsing bug?

[10:57:00.0000] <zcorpan_>
seems so

[11:00:00.0000] <zcorpan_>
html5lib doesn't have this bug

[11:02:00.0000] <zcorpan_>
same with </foobar>

[11:07:00.0000] <virtuelv>
huh? http://ejohn.org/blog/html5-doctype/

[11:13:00.0000] <gsnedders>
virtuelv: Just follow the quote of Chris Wilson: unknown doctypes trigger IE8 Standards Mode (or maybe edge, dunno, not clear)

[11:16:00.0000] <Philip`>
zcorpan_: "tags that have colons in them" aren't normally handled specially by IE

[11:17:00.0000] <Philip`>
(It's only if they're in a document.write or are after an <html xmlns:foo> or after some PI thing)

[11:17:01.0000] <virtuelv>
gsnedders: I certainly _hope_ they will go for edge mode

[11:20:00.0000] <webben_>
It's a bit problematic that they (or at least the alistapart author) are recommending people avoid edge

[11:21:00.0000] <virtuelv>
indeed

[11:21:01.0000] <virtuelv>
and I have problems just mentioning this

[11:21:02.0000] <gsnedders>
it's logical, though, if you look at the argument

[11:24:00.0000] <webben_>
/me fails to see how forcing browsers to have multiple engines like some sort of Matryoshka doll for ever more is a good idea. (It's going to be hard enough dealing with multiple formal standards, like HTML and XHTML (and whatever eventually replaces those).)

[11:24:01.0000] <annevk>
differences between html and xhtml are trivial

[11:24:02.0000] <annevk>
as far as browsers are concerned

[11:24:03.0000] <gsnedders>
both are dealt with from a single DOM

[11:25:00.0000] <gsnedders>
you parse them into a DOM, and have a couple of if statements. It really isn't very major.

[11:25:01.0000] <Philip`>
webben_: It's unlikely to be "for ever more" - it's just until the cost of maintenance outweighs the cost of hurting paying customers

[11:25:02.0000] <webben_>
Philip`: That's not the argument put forward.

[11:25:03.0000] <webben_>
Philip`: Note: "Sure, most trips through the “Wayback Machine” don’t suffer in modern browsers because the DOCTYPE switch still serves them well, but what about a site built to IE6’s implementation of “standards” mode?"

[11:26:00.0000] <webben_>
Like Hixie (to some degree), these folks are worried about long-term archival renderings.

[11:26:01.0000] <Philip`>
/me wonders where that is quoted from

[11:26:02.0000] <webben_>
Philip`: soz: http://www.alistapart.com/articles/beyonddoctype

[11:26:03.0000] <Philip`>
Ah, thanks

[11:27:00.0000] <annevk>
long-term archival renderings tied to a single proprietary rendering engine is just plain silly

[11:27:01.0000] <Philip`>
Who are "these folks"? I don't think Microsoft is going to be interested in preserving the Wayback Machine, because it is of no value to them

[11:27:02.0000] <annevk>
especially given prior experience with the vendor on a product that used a similar strategy and failed: MS Office

[11:28:00.0000] <webben_>
If someone could demonstrate that browser developers could reliably create mock-IE5, -IE6, -IE7, -IE8 engines I'd be a bit less worried. But the general consensus as expressed by their participation in WHATWG seems to be that creating multiple rendering engines is /hard/ and faking IE is /really/ hard.

[11:28:01.0000] <Philip`>
Actually, I suppose "these folk" are the author of the article plus maybe others

[11:28:02.0000] <Philip`>
so that answers that question

[11:29:00.0000] <webben_>
I think anyone with an interest in the transformative powers of the web would have /some/ sort of interest in the archival question. ... That doesn't translate into being a big business goal for MS, necessarily.

[11:30:00.0000] <webben_>
But it would be part of the developer buy-in that keeps them operational as a tech company.

[11:30:01.0000] <hsivonen>
hmm. interesting. even parsetree.validator.nu doesn't report an error in zcorpan's case

[11:30:02.0000] <webben_>
(internal and external)

[11:30:03.0000] <Philip`>
I imagine a future historian will have more severe difficulties if they want to e.g. see what Google and Hotmail were like centuries ago - the CSS layout bugs will be a very minor problem

[11:31:00.0000] <SadEagle>
webben_: IE does some freakish stuff, but fortunately it's so freaking, I don't think it's used that much

[11:31:01.0000] <webben_>
/me isn't so sure about that.

[11:31:02.0000] <SadEagle>
not too many sites using vml or whatever it's called, e.g. :-)

[11:31:03.0000] <webben_>
You can easily get away with doing freakish stuff if you're catering to 90% or whatever of the market by doing so.

[11:32:00.0000] <webben_>
VML's potentially implementable (there's an open spec submitted as a note to W3C)

[11:32:01.0000] <SadEagle>
OTOH, the window object is just a disaster

[11:32:02.0000] <hsivonen>
webben_: submitted to ISO, too

[11:32:03.0000] <webben_>
hsivonen: Did it make it to ISO Standard status?

[11:33:00.0000] <virtuelv>
" It's unlikely to be "for ever more" - it's just until the cost of maintenance outweighs the cost of hurting paying customers"

[11:33:01.0000] <hsivonen>
webben_: the OOXML saga ain't over yet

[11:33:02.0000] <virtuelv>
it's not that long ago I had to deal with people who maintained NS4.x-compatibility

[11:33:03.0000] <webben_>
If one can write translations of SVG to VML, one presumably could write translations the other way round.

[11:33:04.0000] <webben_>
well, presumably's too strong, let's say: hopefully

[11:34:00.0000] <hsivonen>
what was wrong with VML that caused SVG to be developed instead?

[11:34:01.0000] <hsivonen>
/me doesn't know VML

[11:34:02.0000] <SadEagle>
webben_: let me rephrase... I think stuff like getElementById returning things by name tends to cause a lot more problems than things that are very different

[11:35:00.0000] <webben_>
Philip`: I think for that sort of thing (experiencing Gmail), a historian's likely to use some sort of VM. It's actual content that you'd most want to extract I suspect.

[11:35:01.0000] <webben_>
SadEagle: I think that's true.

[11:36:00.0000] <Philip`>
SadEagle: VML isn't used nowhere - it's more common than e.g. <bdo>

[11:36:01.0000] <Philip`>
http://canvex.lazyilluminati.com/survey/2007-07-17/analyse.cgi/tag/v%253Astroke is on 6 out of 7739 pages

[11:37:00.0000] <SadEagle>
OTOH, IE does have all sorts of oddness in how JS and the DOM and the DOM state vs. e.g. form element state mesh together

[11:37:01.0000] <SadEagle>
Philip`: how much of that is word output?

[11:37:02.0000] <hsivonen>
part Word Google Maps rest?

[11:37:03.0000] <hsivonen>
hmm. the </span> occurs IN_BODY phase, so it is not an end-game bug

[11:38:00.0000] <Philip`>
http://www.magneticsforyou.com/ is broken in Firefox since none of the VML images come through

[11:38:01.0000] <Philip`>
SadEagle: Probably all of it, but I'm too lazy to check :-)

[11:38:02.0000] <SadEagle>
<html xmlns:v="urn:schemas-microsoft-com:vml" xmlns:o="urn:schemas-microsoft-com:office:office" xmlns="http://www.w3.org/TR/REC-html40">

[11:39:00.0000] <SadEagle>
nice one on an html document

[11:39:01.0000] <Philip`>
http://canvex.lazyilluminati.com/survey/2007-07-17/analyse.cgi/attr/xmlns:o

[11:39:02.0000] <Philip`>
It's pretty common

[11:40:00.0000] <webben_>
it's not much weirder than serving XML as HTML in the first place.

[11:40:01.0000] <SadEagle>
is that sort of stuff why you folks were reverse-engineering the : behavior in IE?

[11:40:02.0000] <SadEagle>
webben_: people seem confused about that

[11:40:03.0000] <webben_>
SadEagle: about what?

[11:40:04.0000] <webben_>
(or rather: how?)

[11:40:05.0000] <SadEagle>
about sering XML as HTML

[11:41:00.0000] <webben_>
Well, yes, people are confused by it.

[11:41:01.0000] <SadEagle>
Philip`: seems like FrontPage makes it, too

[11:41:02.0000] <webben_>
Oh I see what you mean.

[11:41:03.0000] <webben_>
SadEagle: What I meant is it's weird; but then XML-as-HTML is a weird thing.

[11:42:00.0000] <Philip`>
SadEagle: People were reverse-engineering the : behaviour in IE because it would be nice to use that syntax for e.g. embedding SVG, not because anybody wants to implement VML or <o:p>

[11:42:01.0000] <SadEagle>
Philip`: right. But I am guessing there may be something to reverse-engineer due in part to this stuff...

[11:42:02.0000] <Philip`>
but IE is insane so now people want to avoid using : wherever possible :-)

[11:43:00.0000] <webben_>
although presumably it would path the way to doing so

[11:43:01.0000] <webben_>
(which wouldn't necessarily be a bad thing ... if lots of sites use VML, maybe it's worth implementing as a backwards compat feature)

[11:49:00.0000] <blooberry>
philip`: what is the best way to get the full list of alexa 500 sites?

[11:50:00.0000] <Philip`>
blooberry: I did it by downloading http://www.alexa.com/site/ds/top_sites?ts_mode=global&lang=none and the next four pages, then regexping the site list from each page

[11:51:00.0000] <blooberry>
*sigh* been there and done that for lycos' top lists in the past. 8-} ok. Thanks.

[11:52:00.0000] <hsivonen>
zcorpan: fixed. Thank you.

[11:52:01.0000] <hsivonen>
clearly, the html5lib test suite could have better coverage

[12:06:00.0000] <blooberry>
whoa...over 80,000 URLs from dmoz (out of a URL space of ~4 million) declare the VML namespace. That's a lot higher than I expected

[12:10:00.0000] <Philip`>
2%?

[12:10:01.0000] <Philip`>
That matches http://canvex.lazyilluminati.com/survey/2007-07-17/analyse.cgi/attr/xmlns:v and the list of pages indicates it's spread over lots of independent sites

[12:10:02.0000] <hsivonen>
blooberry: what are you using as your analysis tool?

[12:11:00.0000] <blooberry>
Something I wrote. I'm writing up the results to put up somewhere right now. 

[12:12:00.0000] <Philip`>
Are you using an existing library for parsing HTML?

[12:12:01.0000] <blooberry>
no. I wrote it, and at times it is not the prettiest thing. 8-}

[12:13:00.0000] <blooberry>
and it evolved from some rather simplistic checking

[12:14:00.0000] <blooberry>
I eschewed using an existing parsing library at one point because I didn't know how well it would react to the sorts of brain-dead markup I had been running into.

[12:16:00.0000] <blooberry>
I figure that when analyzing a document, you have 3 main parsing styles to allow for - very strict for the script, pretty strict for the CSS, and not-so-strict for the markup.

[12:18:00.0000] <Philip`>
You could consider there to just be one main parsing style, which is to be compatible with what web browsers do

[12:18:01.0000] <SadEagle>
there are some quirks in ES parsing as well

[12:19:00.0000] <blooberry>
yes, but to reflect what web browsers actually do, it seems to me that the above "styles" of parsing seem the most realistic. (10,000 ft view, of course)

[12:20:00.0000] <blooberry>
sadeagle: most certainly. 8-}

[12:21:00.0000] <gsnedders>
there are quirks everywhere :P

[12:23:00.0000] <Philip`>
Are there GIF-handling quirks?

[12:23:01.0000] <gsnedders>
/me would be amazed if there weren't

[12:24:00.0000] <SadEagle>
Philip`: yes.

[12:24:01.0000] <SadEagle>
Philip`: actually, it's hard to say if there are or aren't, since GIF is specified in a way that's not very web-relevant

[12:25:00.0000] <zcorpan_>
SadEagle: is handling of GIF in browsers different in quirks mode and standards mode?

[12:25:01.0000] <Philip`>
/me wasn't thinking of that type of quirk

[12:26:00.0000] <SadEagle>
zcorpan_: don't believe so

[12:27:00.0000] <SadEagle>
Philip`: e.g.  gif images can provide geometries, and sometimes the one that should be the entire image's size isn't trustworthy. There is also an undocumented/illegal animation mode in pretty wide use

[12:28:00.0000] <Philip`>
Hmm, sounds fun

[12:28:01.0000] <Philip`>
Isn't there anything old enough that all the quirks have been shaken out by now?

[12:42:00.0000] <SadEagle>
Philip`: to be honest, I didn't quite figure out all the animation modes, either... May be I can find some mozilla guy to explain it to me, though

[13:09:00.0000] <ed_home>
MacDomeOut: I was just browsing the irclogs, and was wondering about something you said about iframes with dataURI:s in the svg acid-tests, for the record you can see the ACID3 submissions I made on the public www-svg list...no data-uri:s in there I can assure you

[13:09:01.0000] <ed_home>
...http://lists.w3.org/Archives/Public/www-svg/2008Jan/0055.html

[13:11:00.0000] <annevk>
ed_home, hey!

[13:11:01.0000] <ed_home>
hey anne :)

[13:21:00.0000] <Hixie>
zcorpan_: i actually would encourage people to use <!DOCTYPE HTML> a lot before IE8 comes out, so that when IE8 comes out either they are forced to make that DOCTYPE trigger IE7 mode, or lots of sites break and they realise that their idea didn't work anyway

[13:21:01.0000] <Hixie>
zcorpan_: (i would rather everyone was using the same mode, IE7-mode, than have multiple modes in use.)

[13:22:00.0000] <Hixie>
hsivonen: i called the modes "no quirks" and "limited quirks" and "quirks" because as annevk says, it makes no sense to refer to a "standards" mode when all the modes are in the standard

[13:22:01.0000] <Hixie>
othermaciej: acid3 uses a common doctype. acid2 uses a somewhat common doctype.

[13:22:02.0000] <Hixie>
hsivonen: my pingback stuff is probably broken. i don't plan to fix it any time soon.

[13:22:03.0000] <othermaciej>
Hixie: someone showed me some distribution stats

[13:23:00.0000] <Hixie>
zcorpan_: please send mail about acid3, i am swamped right now

[13:26:00.0000] <Hixie>
holy crap, roy fielding agreed with me on something

[13:27:00.0000] <Hixie>
othermaciej: acid2's is low, but it still affects in the order of 1% of pages, iirc

[13:27:01.0000] <Hixie>
(50% of pages have no dcptype, and the majority of hte rest have xhtml or transitional doctypes, so...)

[13:34:00.0000] <hsivonen>
Hixie: ok. I updated my doctype page not to ascribe a motivation to the nomenclature in HTML 5.

[13:35:00.0000] <hsivonen>
my own Pingback impl. is years late... perhaps I should use telnet to port 80...

[13:36:00.0000] <gsnedders>
/me was using telnet for port 80 a few minutes ago

[13:45:00.0000] <zcorpan_>
"If you want to be more annoying, use IE=${random(9,12)}" -- http://annevankesteren.nl/2008/01/ie-lock-in#comment-6424

[13:46:00.0000] <webben_>
lol

[13:56:00.0000] <cgriego>
IE=2

[13:56:01.0000] <Hixie>
that would just make them change the syntax

[13:57:00.0000] <zcorpan_>
indeed

[13:57:01.0000] <Hixie>
the only way to actually make any difference, as far as i can tell, is to not use it

[13:57:02.0000] <Hixie>
as i discussed on ln.hixie.ch

[13:58:00.0000] <zcorpan_>
Hixie: if <!doctype html> triggers ie8 mode, then that means not using <!doctype html>, too. no?

[13:59:00.0000] <zcorpan_>
Hixie: btw, did you see my comments on acid3 earlier?

[14:00:00.0000] <zcorpan_>
http://krijnhoetmer.nl/irc-logs/whatwg/20080124#l-584

[14:01:00.0000] <virtuelv>
IE=1

[14:01:01.0000] <gsnedders>
/me comes across <http://bugs.php.net/bug.php?id=24083>

[14:05:00.0000] <Hixie>
zcorpan_: if enough people use it early enough, they'll be forced to make it not trigger IE8 mode

[14:05:01.0000] <Hixie>
(or, lots of pages will break, which is fine too, since it will suggest that this technique doesn't work)

[14:06:00.0000] <Hixie>
zcorpan_: i mailed your comments to myself

[14:06:01.0000] <zcorpan_>
k

[14:08:00.0000] <annevk>
"maxage" is used in cache-control

[14:33:00.0000] <Hixie>
annevk: so?

[14:33:01.0000] <Hixie>
annevk: it's not used as part of a hypenated word

[14:33:02.0000] <annevk>
fn

[14:34:00.0000] <Hixie>
annevk: the point is just that you should either have a phrase that is consistently mashedtogether, or is-hyphenated, or isCamelCase, or TitleCase, or whatever

[14:34:01.0000] <Hixie>
mixing-them justLooks quitesilly

[14:34:02.0000] <Hixie>
or rather, "mixing-ThemJustLooks-quitesilly"

[15:01:00.0000] <annevk>
http://annevankesteren.nl/2008/01/firefox-html5#comment-6433

[15:01:01.0000] <annevk>
<input type=date> styling in IE

[15:01:02.0000] <Dashiva>
Wow, that last mail about ogg really made me rethink everything said so far

[15:02:00.0000] <Dashiva>
The last PS of anti-microsoft paranoia really closed the deal

[15:11:00.0000] <Hixie>
"Can we make standards ISO compliant" -- isn't MPEG an ISO standard?

[15:12:00.0000] <Hixie>
or at least ISO standards track?

[15:13:00.0000] <dbloom>
Moving Picture Experts Group  is a working group of ISO

[15:13:01.0000] <billmason>
There are various mpeg references in http://standards.iso.org/ittf/PubliclyAvailableStandards/index.html if that's significant.

[15:13:02.0000] <dbloom>
so i would hope so

[15:13:03.0000] <Hixie>
k

[15:15:00.0000] <takkaria>
annevk: that's pretty awesome

[15:24:00.0000] <hubick>
Any HTML5 Java programmers here that know if it's possible to get a javax.xml.transform.Transformer to output a <!DOCTYPE HTML> header, being that there doesn't seem to be an OutputKeys.DOCTYPE_NAME I can set on it?

[15:27:00.0000] <annevk>
I don't know about Java, but I do know that with XSLT you need to output literal text using <xsl:text> or something to get the DOCTYPE out correctly

[15:28:00.0000] <annevk>
As XSLT is currently not HTML5 aware

[15:29:00.0000] <hubick>
annevk: hmm... I am feeding this thing a DOM tree, and if that contains such literal text, I think it would be encoded upon output

[15:29:01.0000] <annevk>
you also need disable-output-escaping or something like that

[15:30:00.0000] <hubick>
in my simple case, the transformer is used with no XSLT, just simply as an XML serialization tool (hack)

[15:31:00.0000] <annevk>
I see

[15:31:01.0000] <hubick>
hmm, i may be forced to look into DOM Load/Save code... though I don't know if that actually ships with Java yet in 1.6 or 1.7

[15:31:02.0000] <annevk>
http://about.validator.nu/htmlparser/ might have a better serializer

[15:32:00.0000] <annevk>
that's the only HTML5 Java project I know of

[15:32:01.0000] <hubick>
annevk: good idea.  I'm already using Henri's stuff on the input side

[15:33:00.0000] <annevk>
I suspect he went to bed already, in about 8-9 hours he might be online

[15:45:00.0000] <weinig>
Hixie: If you have some time, I would be curious as to what your thoughts on http://bugs.webkit.org/show_bug.cgi?id=16968 are?

[15:56:00.0000] <Hixie>
yeah it's a known issue i will deal with before acid3 is done

[15:59:00.0000] <hubick>
if (user agent Accept's HTML5) then output <header> else output <div class="header">; Is there a way to know if the user agent accepts html5?


2008-01-25
[16:01:00.0000] <hubick>
or am I expected to fallback to regular old HTML and not XHTML, if there is no Accept: application/xhtml+xml?

[16:02:00.0000] <Hixie>
for now i'd just use <div class="header">.

[16:02:01.0000] <hubick>
(also, I don't see this answered in the FAQ, which I would think it must be one)

[16:03:00.0000] <annevk>
feel free to add questions to the faq where the answer is "..."

[16:03:01.0000] <annevk>
as far as detecting HTML5 support, there's not really such a thing

[16:04:00.0000] <annevk>
the Web evolves incrementally

[16:04:01.0000] <hubick>
Hixie: I am trying to be forward looking and code in XHTML5 support to my software today, with a property to disable it.

[16:04:02.0000] <annevk>
anyway, bedtime

[16:04:03.0000] <annevk>
g'night all

[16:04:04.0000] <hubick>
I guess it will need to be a property for the whole server, not based on user agent

[16:04:05.0000] <hubick>
annevk: gnight, thanks for your advice

[17:19:00.0000] <Hixie>
i really think SOMEONE on slashdot has a think for henri

[17:19:01.0000] <Hixie>
http://slashdot.org/comments.pl?sid=426306&cid=22165240

[17:24:00.0000] <jwalden>
yeah, that Henri Sovinen dude

[17:27:00.0000] <Hixie>
/me blinks at the current svg discussion on whatwg

[17:28:00.0000] <Hixie>
sure which i understood what people were talking about

[19:19:00.0000] <heycam>
/me is hungry at the thought of a "laughing stock of tag soup" (from that slashdot comment)

[19:22:00.0000] <Hixie>
someone just pointed me to a blog post by anne in 2006 as an argument for why application/javascript is better than text/javascript

[19:22:01.0000] <Hixie>
since when can anne be used to appeal to authority over me :-P

[19:29:00.0000] <othermaciej>
Hixie: you need to remind him of his official Mindless Hixie Minion agreement

[19:29:01.0000] <othermaciej>
heycam: I prefer a chicken stock

[19:29:02.0000] <othermaciej>
or beef stock

[19:29:03.0000] <othermaciej>
I don't think laughing stock makes very good soup

[19:29:04.0000] <heycam>
:)

[20:40:00.0000] <MikeSmith>
Hixie - minor suggested edit to text you added in latest checkin

[20:41:00.0000] <Hixie>
yeah?

[20:41:01.0000] <MikeSmith>
"Zero length line segments" might better be "Zero-length line segments"

[20:41:02.0000] <Hixie>
good call

[20:43:00.0000] <jwalden>
Hixie: quick question about event.uri for a message posted from a data: page -- is the property based on the page that opened the data: page, or is it the data: URL?  former seems better for compat with how about:blank is handled, for what it's worth

[20:43:01.0000] <Hixie>
i have no idea, i don't think i ever considered posting from a data: page when writing this part of the spec

[20:44:00.0000] <jwalden>
okay

[20:44:01.0000] <jwalden>
I shall boldly forge a path through this insanity!

[20:44:02.0000] <Hixie>
:-)

[20:44:03.0000] <Hixie>
please do mail the list with your conclusions :-)

[20:44:04.0000] <jwalden>
and unilaterally make it act like about:blank does

[20:44:05.0000] <jwalden>
yes

[20:44:06.0000] <jwalden>
I'll have a nice tidy set of testcases to post at that point as well

[20:45:00.0000] <jwalden>
just trying to fight through the review process now before posting the full set, which is always fun (more than triply so at this point in the release cycle)

[20:47:00.0000] <Hixie>
cool

[20:49:00.0000] <othermaciej>
jwalden: data: pages don't normally get the security domain of their opener in most contexts

[20:49:01.0000] <othermaciej>
at least in Firefox and Mozilla

[20:49:02.0000] <othermaciej>
er

[20:50:00.0000] <othermaciej>
in Firefox and Safari

[20:50:01.0000] <othermaciej>
(or Gecko and WebKit if you prefer)

[20:51:00.0000] <jwalden>
othermaciej: not in webkit, but in Gecko a data page can do whatever its opener's domain can do

[20:51:01.0000] <jwalden>
opener, parent

[20:51:02.0000] <othermaciej>
jwalden: are you sure?

[20:51:03.0000] <othermaciej>
jwalden: they used to have no privileges at all

[20:51:04.0000] <othermaciej>
did this change recently?

[20:54:00.0000] <othermaciej>
(my last info on this is an email from Boris Zbarsky from October of last year, I guess I can make a test case)

[20:56:00.0000] <jwalden>
pretty sure it's always been that way

[20:56:01.0000] <othermaciej>
I remember specifically reading a mozilla bugzilla bug saying that all access to/from data: was disallowed

[20:56:02.0000] <jwalden>
https://bugzilla.mozilla.org/show_bug.cgi?id=255107

[20:56:03.0000] <othermaciej>
(because it's more complicated to deal with than about:blank)

[20:56:04.0000] <jwalden>
^ wants to make it more complicated, but hasn't

[20:58:00.0000] <othermaciej>
I see, I misremembered

[20:58:01.0000] <othermaciej>
so yeah, if data: URIs have their opener's principal

[20:59:00.0000] <othermaciej>
then either you have to define opener differently than for about:blank (where it's the window.open sense opener or the parent frame always), and instead track which frame triggered opening the data: URL even for things like targeted links, or a frame self-navigating to a data: URL if it has a parent or opener....

[20:59:01.0000] <othermaciej>
or you have to disallow navigation of a frame that is or would be in a different security domain to a data: URL if you follow the about:blank / javascript: rule

[21:00:00.0000] <othermaciej>
either of these is pretty tricky to get right (either way it has to be somewhat more restrictive than javascipt: URLs)

[21:03:00.0000] <othermaciej>
(in other words, for data: URIs the origin has to be the origin of the Referer (in the http sense) which we don't currently have a good way to track

[21:03:01.0000] <othermaciej>
(it might not be derivable just from the Referer URI, imagine a site at example.org with an about:blank frame containing a data: frame)

[21:04:00.0000] <othermaciej>
it seems that Firefox's current behavior allows XSS exploits, if I understand it correctly

[21:05:00.0000] <othermaciej>
if you can get a site to embed you as a subframe and navigate yourself to a data: URI for instance

[21:05:01.0000] <jwalden>
yeah

[21:05:02.0000] <jwalden>
I kind of agree; I don't know if it'll change, tho

[21:05:03.0000] <othermaciej>
that means an ad in an iframe can always xss exploit its containing document in Firefox

[21:06:00.0000] <othermaciej>
(of course ads that are served as a JS script you embed can exploit you even esier but still, this kills iframe as a way to mitigate)

[21:07:00.0000] <jwalden>
anyway...

[21:07:01.0000] <jwalden>
for now I think I'll go with the uri/domain of the parent/opener

[21:07:02.0000] <jwalden>
and I think with the methods I'm using, if we change how data: works that'll change too

[21:08:00.0000] <jwalden>
in any case, this isn't likely to be a huge use case, so if we change it later I don't think it's going to be a big problem

[21:20:00.0000] <MikeSmith>
Hixie - what's the relationship between the "source" and "index" files for the spec. Is the index file generated from source + header-whatwg ? it seems like not completely at least, because I notice that there are sometimes comments in the index file that aren't in the source file..

[00:21:00.0000] <hsivonen>
Whoa! iCab has dropped legacy OS support!

[00:23:00.0000] <othermaciej>
and, more significantly, their engine

[00:26:00.0000] <hsivonen>
othermaciej: WebKit now?

[00:26:01.0000] <othermaciej>
hsivonen: that appears to be the case

[00:27:00.0000] <hsivonen>
interesting

[00:30:00.0000] <othermaciej>
the number of WebKit-based browsers is reaching crazy levels

[00:30:01.0000] <othermaciej>
(though I'm not sure how many could truly be considered polished products just yet, especially ones on non-Mac platforms)

[00:32:00.0000] <hsivonen>
I just discovered that iCab 3 has at least a standards mode and a quirks mode

[00:33:00.0000] <othermaciej>
I think WebKit can take credit for having killed at least 4 layout engines now

[00:33:01.0000] <hsivonen>
and if it does have an almost standards mode, it is different from Gecko/WebKit/Opera

[00:34:00.0000] <hsivonen>
iCab, Nokia in-house, Tasman and ?

[00:34:01.0000] <othermaciej>
I wasn't even counting the Nokia one - I'm not sure if that is totally abandoned but I guess so

[00:34:02.0000] <othermaciej>
other ones were Apple's old htmldisplay framework (now not in the OS any more) and OmniWeb's old engine

[00:35:00.0000] <hsivonen>
ok.

[00:35:01.0000] <hsivonen>
I had forgetten about the old OmniWeb engine

[00:35:02.0000] <othermaciej>
that was actually our first (and entirely unintentional) non-Apple design win

[00:36:00.0000] <hsivonen>
it sure was legacy. and, yet, Mac users like Cocoa so much that there was pressure on Mac-related sites to support it

[00:36:01.0000] <othermaciej>
(so to speak - we're not exactly doing CFPs or anything)

[00:36:02.0000] <othermaciej>
it had many problems but at the time was the only engine to do high-quality text rendering on OS X

[00:38:00.0000] <MikeSmith>
kind of sad to see the iCab engine go

[00:39:00.0000] <MikeSmith>
I was always kind of amazed at that guy

[00:39:01.0000] <MikeSmith>
it's always been a one-man project, right?

[00:39:02.0000] <hsivonen>
MikeSmith: IIRC, the JS engine was written by another guy

[00:40:00.0000] <MikeSmith>
ah, OK. well still pretty commendable for one guy to produce a web engine of that level

[00:40:01.0000] <MikeSmith>
e.g., able to pass ACID2

[00:40:02.0000] <hsivonen>
yes

[00:41:00.0000] <MikeSmith>
I paid the iCab license fee.. can't remember how much it was, but very little 20 USD or something I think

[00:41:01.0000] <hsivonen>
hmm. HTML5 doctype is quirks in iCab 3.0.3

[00:43:00.0000] <othermaciej>
I have bittersweet feelings about most of WebKit's layout engine victims

[00:43:01.0000] <othermaciej>
(not htmldisplay though, that was just total crap)

[00:43:02.0000] <othermaciej>
even Tasman was a very nice engine for its day and quite good on standards compliance, compared to Trident

[00:44:00.0000] <hsivonen>
Tasman certainly had a lot of potential

[00:44:01.0000] <hsivonen>
IIRC, Tantek had something about a win32 port on his resume

[00:45:00.0000] <MikeSmith>
Tasman was the first to implement full support for CSS1, right?

[00:45:01.0000] <hsivonen>
MikeSmith: yes

[00:45:02.0000] <othermaciej>
I wonder if the next few years will see any significant new entrants to either browser or engine markets

[00:46:00.0000] <MikeSmith>
othermaciej - would bet probably not new engines, given the amount of work involved

[00:46:01.0000] <MikeSmith>
if anything, maybe only on mobile

[00:47:00.0000] <MikeSmith>
there's a browser that runs on Docomo handsets here in Japan

[00:47:01.0000] <othermaciej>
it would be hard to launch a new open source one

[00:47:02.0000] <MikeSmith>
Picsel

[00:47:03.0000] <MikeSmith>
yeah, I don't reckon we are going to see a new open source one

[00:47:04.0000] <othermaciej>
and few companies have both the means and the resources to do a new proprietary one

[00:47:05.0000] <MikeSmith>
I know Netsurf project is still going 

[00:48:00.0000] <MikeSmith>
othermaciej - yeah, question is what value it would be for them to build a whole new engine

[00:48:01.0000] <hsivonen>
MikeSmith: is Picsel's browser developed in-house or based on something better-known?

[00:48:02.0000] <hsivonen>
is it good?

[00:49:00.0000] <MikeSmith>
I haven't tested Picsel so much, but it has a very good UI, developed in-house. I don't know about their engine for sure, but I think it was developed in-house as well

[00:50:00.0000] <MikeSmith>
there is a handset here in Japan -- a true mobile phone, with keypad -- that has an actual pointing device on it

[00:51:00.0000] <MikeSmith>
like an IBM trackpoint

[00:51:01.0000] <MikeSmith>
instead of 5-way arrow-key thing

[00:51:02.0000] <MikeSmith>
Picsel runs on that handset

[00:51:03.0000] <MikeSmith>
so the browser UI on that has a cursor

[00:52:00.0000] <hsivonen>
it seems that Picsel isn't for end users to install but something that is sold for bundling with a handset

[00:52:01.0000] <hsivonen>
right?

[00:52:02.0000] <MikeSmith>
yeah

[00:52:03.0000] <hsivonen>
who ships it? Panasonic?

[00:52:04.0000] <MikeSmith>
here in Japan, NEC

[00:52:05.0000] <MikeSmith>
not sure which others, if any

[00:52:06.0000] <MikeSmith>
I know a couple of developers who work at the Picsel office here

[00:53:00.0000] <MikeSmith>
in Tokyo

[00:53:01.0000] <MikeSmith>
anyway, that's only "new" browser for mobile that's come along recently that I know of

[00:53:02.0000] <MikeSmith>
well, with exception of Java ones

[00:53:03.0000] <MikeSmith>
J2ME ones, like Opera Mini

[00:54:00.0000] <hsivonen>
I don't recall ever noticing anyone from Picsel in a W3C or WHATWG context

[00:54:01.0000] <MikeSmith>
which all rely on proxies on the server side to do the rendering

[00:54:02.0000] <hsivonen>
oh, are there others than Opera Mini in the Opera Mini product category?

[00:54:03.0000] <MikeSmith>
hsivonen - yeah, they've not been involved

[00:54:04.0000] <MikeSmith>
hsivonen - yeah

[00:55:00.0000] <MikeSmith>
one here in Japan called "Jig"

[00:55:01.0000] <hsivonen>
ok. Japan-only?

[00:55:02.0000] <MikeSmith>
I think it may be downloadable

[00:55:03.0000] <MikeSmith>
for J2ME

[00:55:04.0000] <MikeSmith>
super-fast scrolling behavior in that thing

[00:56:00.0000] <MikeSmith>
and Bitstream makes a browser too

[00:56:01.0000] <MikeSmith>
Thunderhawk

[00:57:00.0000] <hsivonen>
interesting

[00:57:01.0000] <MikeSmith>
proxied system like Opera Mini

[00:57:02.0000] <MikeSmith>
in fact, I reckon we probably will see more of those

[00:57:03.0000] <MikeSmith>
along with Opera Mini, Jig, Thunderhaw, I mean

[00:58:00.0000] <othermaciej>
I think in a few years (max 5) even basic feature-phone hardware will have as much power as today's iPhone

[00:59:00.0000] <MikeSmith>
yeah

[00:59:01.0000] <MikeSmith>
that is the way we are headed

[01:00:00.0000] <MikeSmith>
btw, here's a page with info about some mobile browsers, including Japan-specific ones

[01:00:01.0000] <MikeSmith>
http://ja.wikipedia.org/wiki/フルブラウザ

[01:00:02.0000] <MikeSmith>
"full browser" is the name of the article

[01:02:00.0000] <hsivonen>
MikeSmith: is it known what those non-Opera J2ME offering use as their engines on the server?

[01:02:01.0000] <MikeSmith>
this page has good info too

[01:02:02.0000] <MikeSmith>
http://en.wikipedia.org/wiki/Microbrowser

[01:02:03.0000] <Hixie>
MikeSmith: in the subversion repo, you mean?

[01:02:04.0000] <MikeSmith>
Hixie - yeah

[01:02:05.0000] <MikeSmith>
hsivonen - Thunderhawk and Jig both use engines they have developed in-house

[01:04:00.0000] <Hixie>
MikeSmith: source is a snapshot of the file i edit

[01:04:01.0000] <MikeSmith>
/me nods

[01:04:02.0000] <Hixie>
MikeSmith: and index is header-whatwg + source after going through several preprocessors

[01:04:03.0000] <hsivonen>
MikeSmith: ok. I find it interesting that there are developers of full browser engines that don't send a rep to the HTML WG.

[01:05:00.0000] <MikeSmith>
hsivonen - that's not for lack of my trying to get them involved

[01:05:01.0000] <Hixie>
i've often wondered why the smaller browser and AT vendors aren't more active in the w3c and other standards forums

[01:05:02.0000] <MikeSmith>
s/of my/of me/

[01:05:03.0000] <Hixie>
it's not like they haven't been invited many times by many people

[01:05:04.0000] <hsivonen>
I didn't doubt invitations

[01:05:05.0000] <MikeSmith>
yep. I think the main reason is lack of people

[01:06:00.0000] <MikeSmith>
qualified people who have the time

[01:06:01.0000] <Hixie>
it doesn't take much to at least pay attention

[01:06:02.0000] <MikeSmith>
true

[01:06:03.0000] <Hixie>
and the cost has to be far outweighed by the benefits

[01:06:04.0000] <MikeSmith>
I need to try harder to get the in, I guess

[01:06:05.0000] <MikeSmith>
I spent a lot of time at it when the HTML WG was first formed

[01:07:00.0000] <Hixie>
well at some point you have to just figure that they don't care and screw 'em, imho

[01:07:01.0000] <MikeSmith>
even before I was the team contact for the group

[01:08:00.0000] <MikeSmith>
Hixie - yeah, that's kind of what ended up happening -- not exactly screw 'em, but at least thinking, maybe this ain't paying off for the time I'm putting into it

[01:08:01.0000] <MikeSmith>
but with the FPWD publication, maybe a good opportunity to try again

[01:08:02.0000] <MikeSmith>
btw, Christian Sejersen from Mozilla mobile team is a member of the HTML WG

[01:08:03.0000] <Hixie>
i think we have enough people involved now that i can honestly say that they'd benefit more from taking part than we would from their taking part

[01:09:00.0000] <Hixie>
which is why i don't understand why they don't take part, given how much we have invited everyone

[01:09:01.0000] <Hixie>
anyway

[01:09:02.0000] <MikeSmith>
certainly would be to their big benefit to be paying attention

[01:09:03.0000] <MikeSmith>
Hixie - the thing that confused me about index and source is the comments

[01:09:04.0000] <MikeSmith>
comments that are in index but not in source

[01:10:00.0000] <Hixie>
~like what?

[01:12:00.0000] <othermaciej>
it's pretty hard to even get the people at major browser vendors really actively engaged

[01:12:01.0000] <othermaciej>
(in fact, among Microsoft, Mozilla, Apple and Opera, degree of active HTML5 standards engagement seems inversely proportional to market share)

[01:12:02.0000] <Hixie>
that makes sense

[01:12:03.0000] <Hixie>
you benefit more from standards if you are a small player

[01:13:00.0000] <MikeSmith>
Hixie - hang on, let me find the diff I was looking at

[01:13:01.0000] <othermaciej>
but there's a cliff at Opera

[01:13:02.0000] <Hixie>
yeah

[01:13:03.0000] <Hixie>
it's od

[01:13:04.0000] <othermaciej>
I think players below that are just too small to play

[01:13:05.0000] <Hixie>
i also don't understand why, apart from google, and aol -- but only in css really -- the big publishers don't seem to take part either

[01:16:00.0000] <MikeSmith>
http://lists.whatwg.org/pipermail/commit-watchers-whatwg.org/2008/000369.html

[01:16:01.0000] <MikeSmith>
r1170

[01:16:02.0000] <MikeSmith>
oops

[01:16:03.0000] <MikeSmith>
um, er, ignore me

[01:16:04.0000] <Hixie>
heh

[01:16:05.0000] <MikeSmith>
I see it's in the source... 

[01:16:06.0000] <MikeSmith>
too many nights without much sleep recently

[01:18:00.0000] <MikeSmith>
Hixie - last brilliant question/suggestion I will offer for today

[01:18:01.0000] <MikeSmith>
this one:

[01:18:02.0000] <MikeSmith>
might be good to have an ID on the list of doctypes for quirks mode

[01:18:03.0000] <MikeSmith>
in the spec

[01:18:04.0000] <MikeSmith>
that is the list in http://www.whatwg.org/specs/web-apps/current-work/#tree-construction0

[01:18:05.0000] <othermaciej>
I would expect Yahoo to participate

[01:19:00.0000] <othermaciej>
but some of it could be quirky interests of their self-proclaimed standards experts

[01:19:01.0000] <othermaciej>
Yahoo is active in ECMAScript standardization

[01:19:02.0000] <othermaciej>
(though in a somewhat unusual way)

[01:20:00.0000] <MikeSmith>
I really don't understand why Yahoo doesn't participate more

[01:22:00.0000] <Hixie>
MikeSmith: yeah, i should do that

[01:22:01.0000] <othermaciej>
Doug thinks JavaScript is the source of, and solution to, all Web problems

[01:23:00.0000] <othermaciej>
I blew people's minds today when I pointed out that a "secure JavaScript" dialect for in-page embeddable widgets would do no good without a restricted DOM design

[01:23:01.0000] <othermaciej>
(which is incredibly hard)

[01:24:00.0000] <MikeSmith>
Hixie - reason I suggested it was just because I had been planning to write a blog entry about "HTML5, IE8, doctype switching, and version targeting"

[01:24:01.0000] <othermaciej>
MikeSmith: all the cool kids are doing it

[01:24:02.0000] <MikeSmith>
heh

[01:24:03.0000] <Hixie>
i have added an id

[01:24:04.0000] <MikeSmith>
Hixie - thanks

[01:26:00.0000] <MikeSmith>
othermaciej - passé now to that all the cool kids have had their say

[01:27:00.0000] <MikeSmith>
but maybe still useful to let people know that doctype switching is part of the spec

[01:27:01.0000] <MikeSmith>
and that it's a mechanism meant to work in standard way across browsers

[01:27:02.0000] <MikeSmith>
not targeting any specific browser or version

[01:27:03.0000] <MikeSmith>
etc.

[01:28:00.0000] <othermaciej>
MikeSmith: seems like a good thing to mention

[01:28:01.0000] <MikeSmith>
well, I'll try to get it written up on W3C Q&A blog today

[01:29:00.0000] <MikeSmith>
/me stumbles upon http://www.winningsolutionsinc.com/services/webDesign/w3cInformation.asp?gclid=CObbg5OJkZECFQZLbwodry3_Pw

[01:29:01.0000] <MikeSmith>
speaking of participation...

[01:29:02.0000] <MikeSmith>
"Winning Solutions, Inc. (WSI) has been actively involved in keeping up to date on the standards provided by The World Wide Web Consortium (W3C). "

[01:30:00.0000] <MikeSmith>
they sell services for making your site "W3C compliant"

[01:30:01.0000] <MikeSmith>
"Professional W3C compliance for your site on time and budget."

[01:31:00.0000] <MikeSmith>
"actively inolved in keeping up to date on standards" is any interesting turn of phrse

[01:31:01.0000] <MikeSmith>
phrase

[01:32:00.0000] <MikeSmith>
If you can't be troubled to getting actively involved in actual work on standards, at least you can get actively involved in keeping up to date on them.

[01:43:00.0000] <hendry>
tbh, i find it a little hard to stay on top of stuff

[02:03:00.0000] <MikeSmith>
hendry - hard to do that and also get other work done, I guess

[02:04:00.0000] <hendry>
MikeSmith: yes, i'm busy with webvm. you'll be at 3GSM btw?

[02:06:00.0000] <MikeSmith>
nope. would be nice to be in Barcelona at that time instead of hanging out at home, but can't justify taking time out to go there

[02:06:01.0000] <MikeSmith>
I was there for the whole event last year

[02:07:00.0000] <MikeSmith>
at the W3C boot

[02:07:01.0000] <MikeSmith>
booth

[02:07:02.0000] <MikeSmith>
and walking around

[02:07:03.0000] <MikeSmith>
talking to everybody

[02:07:04.0000] <MikeSmith>
Opera and Trolltech had been booth areas right next to each other

[02:07:05.0000] <MikeSmith>
overall, it was pretty exhausting

[02:08:00.0000] <MikeSmith>
lots of mobile-porn companies there, though

[02:08:01.0000] <MikeSmith>
so that was a plus

[02:08:02.0000] <hendry>
MikeSmith: i'm not sure about going myself

[02:08:03.0000] <hendry>
i think i might be too exhausted by then ;)

[02:08:04.0000] <MikeSmith>
W3C MWI folks will be there

[02:09:00.0000] <MikeSmith>
W3C team plus many folks from W3C member orgs that will be exhibiting there

[02:10:00.0000] <MikeSmith>
I do have to say there's all kinds of really cool products/technologies to see there

[02:10:01.0000] <MikeSmith>
always some big announcements of course

[02:28:00.0000] <MikeSmith>
anybody submit proposals for XTech 2008?

[02:28:01.0000] <MikeSmith>
hsivonen ?

[02:29:00.0000] <hsivonen>
MikeSmith: I didn't

[02:29:01.0000] <MikeSmith>
me neither

[02:30:00.0000] <hsivonen>
hmm. in the wake of the IE8 meta thing, perhaps I should blog about bug 42525, the Almost Standards Mode and lessons learned

[02:30:01.0000] <MikeSmith>
hsivonen - that would be very good I think

[02:31:00.0000] <MikeSmith>
karl pointed out Eric Meyer's latest entry related to this, but I haven't read it yet

[02:31:01.0000] <MikeSmith>
skimmed through it

[02:31:02.0000] <MikeSmith>
I think he tries to present a bit of the history in that

[02:31:03.0000] <hsivonen>
MikeSmith: my comment there is the short version of what I think

[02:33:00.0000] <MikeSmith>
/me goes over to read hsivonen comment

[02:33:01.0000] <om_sleep>
in retrospect it would have been better than CSS

[02:34:00.0000] <othermaciej>
the world is not really a better place on account of CSS image alignment changing in standards mode

[02:34:01.0000] <MikeSmith>
hsivonen - so you already have most of your blog posting already written :)

[02:35:00.0000] <MikeSmith>
copy and paste your comment there

[02:35:01.0000] <othermaciej>
incidentally Almost Standards Mode is pretty distinguishable from IE versioning (even though I resent having the extra mode)

[02:35:02.0000] <othermaciej>
because it's a selective quirk

[02:35:03.0000] <othermaciej>
not a whole frozen engine

[02:35:04.0000] <othermaciej>
the web would be a different place if Mozilla's quirks mode and almost standards mode were based on frozen Netscape 4 and Netscape 5 behaviors

[02:36:00.0000] <MikeSmith>
re: thacker comment "When a course correction is required, do you maneuver the ship or try to move the ocean?", I think the correct answer is, Sink the ship before it leaves the harbor.

[02:37:00.0000] <othermaciej>
in fact that's roc's first comment

[02:37:01.0000] <othermaciej>
that roc is a smart guy

[02:46:00.0000] <othermaciej>
in fact hsivonen and roc between them (and Rijk by reference) said exactly what I think about the story

[03:28:00.0000] <ed_work>
Hixie: test #70 in acid3, slightly incorrect error message: if (!kungFuDeathGrip.firstChild.getSVGDocument)  fail("getSVGDocument missing on <object> element.");

[03:29:00.0000] <ed_work>
should be <iframe> there

[03:30:00.0000] <ed_work>
not sure about if you can modify content of a data URI document either...

[03:30:01.0000] <ed_work>
should that work?

[04:48:00.0000] <annevk>
MikeSmith, where is that comment?

[05:04:00.0000] <annevk>
ooh, dirac is still alive

[05:18:00.0000] <Lachy>
annevk, what's happening with dirac? link?

[05:19:00.0000] <annevk>
http://sonofid.blogspot.com/2008/01/on-road-to-dirac-standard-at-last.html

[05:20:00.0000] <Lachy>
nice. Maybe there's hope for a decent basline video codec in HTML5 after all :-)

[05:21:00.0000] <hsivonen>
standardization doesn't mean it will really be unencumbered, though

[05:22:00.0000] <Lachy>
if there's enough support behind it from large enough organisations, the perceived risk is lower

[05:22:01.0000] <Lachy>
gotta go

[05:22:02.0000] <annevk>
that blog post claims it's RF

[05:22:03.0000] <annevk>
but yeah

[05:24:00.0000] <annevk>
ok, it was about http://meyerweb.com/eric/thoughts/2008/01/24/almost-target/

[05:29:00.0000] <Camaban>
my feeling about that blog post from meyer is that the web is a bit different now than it was in 2002

[05:30:00.0000] <hsivonen>
Camaban: indeed. see also http://hsivonen.iki.fi/almost-precedent/

[05:30:01.0000] <annevk>
it's such a crappy comparison too

[05:30:02.0000] <annevk>
<canvas> works in almost standards mode

[05:30:03.0000] <annevk>
<canvas> would never work in IE7 mode

[05:30:04.0000] <annevk>
(per current proposal)

[05:31:00.0000] <Camaban>
in 2002 NS was dying out and IE was the only other browser with any significant market share wasn't it?

[05:31:01.0000] <hsivonen>
Camaban: yes

[05:33:00.0000] <Camaban>
little different to the landscape now with FF alreayd forcing MS to restart dev on IE, and Opera and Safari biting at their heals as well, now it's more of a case of people saying "it works in every other browser, but not IE, why?"

[05:35:00.0000] <Camaban>
/me goes to read almost precident

[05:36:00.0000] <Camaban>
sorry, but I have to lol a bit at the domain that was going to break :)

[05:42:00.0000] <hsivonen>
Camaban: do you mean apple.com or the site Eric was referring to?

[05:43:00.0000] <Camaban>
apple.com

[05:43:01.0000] <Camaban>
when you talk about big sites breaking, that's pretty well up there

[05:43:02.0000] <Camaban>
but also slightly ironic with Apple's "easier to use" line

[05:45:00.0000] <Camaban>
hsivonen: I assume form that comment that the example you used, and the example Eric used are different cases?

[05:45:01.0000] <Camaban>
*from

[05:45:02.0000] <hsivonen>
Camaban: that's my understanding, yes. 

[05:46:00.0000] <Camaban>
ok, wasn't terribly clear, though if you're on about 2000, and Eric's on about 2002, I guess chances are they are different

[05:51:00.0000] <MikeSmith>
annevk - yeah the http://meyerweb.com/eric/thoughts/2008/01/24/almost-target/ article

[05:51:01.0000] <annevk>
ok, posted my own thoughts and linked hsivonen

[05:53:00.0000] <MikeSmith>
about Diracd and the codec issue, I think the point that mikko and/or others have made about video in browsers on mobile devices is going to remain important

[05:53:01.0000] <MikeSmith>
that is, that the codec needs to be supported at the hardware level on those devices

[05:54:00.0000] <MikeSmith>
in order to provide a usable level of performance

[05:54:01.0000] <annevk>
solving problems takes time, sure :)

[05:55:00.0000] <gsnedders>
/me needs to write his own thoughts about the issue

[05:56:00.0000] <hsivonen>
annevk: thanks for linkage

[06:00:00.0000] <annevk>
given how the various doctype sniffing scenarios could've turned out the current one as specced in html5 isn't so bad

[06:00:01.0000] <MikeSmith>
annevk - did you submit any proposals for Xtech 2008

[06:01:00.0000] <annevk>
have not

[06:01:01.0000] <annevk>
wasn't aware that it is that time again

[06:01:02.0000] <MikeSmith>
today's the deadline

[06:01:03.0000] <MikeSmith>
hsivonen - you should whip up something and submit it if you have time

[06:01:04.0000] <MikeSmith>
annevk - you too

[06:02:00.0000] <MikeSmith>
even if you're not sure you can go (or want to)

[06:02:01.0000] <MikeSmith>
if you need more time, just e-mail edd and let him know

[06:03:00.0000] <MikeSmith>
I'm pretty sure he'll accept stuff up through Monday anyway

[06:04:00.0000] <annevk>
what to talk about though

[06:04:01.0000] <annevk>
all my talks are like 15 minutes max

[06:04:02.0000] <annevk>
maybe i should talk about stuff i've been involved in and mix it into one large talk :)

[06:05:00.0000] <MikeSmith>
that'd work

[06:05:01.0000] <MikeSmith>
worth a try at least

[06:06:00.0000] <gsnedders>
/me can't talk in public at all

[06:08:00.0000] <hsivonen>
MikeSmith: I think now it's too late in practice. 

[06:08:01.0000] <MikeSmith>
annevk - a talk on XHR and Access Control and related issues around them would be plenty enough for a talk

[06:10:00.0000] <annevk>
i suppose

[06:10:01.0000] <annevk>
ok, where can i submit?

[06:10:02.0000] <annevk>
http://2008.xtech.org/public/cfp

[06:10:03.0000] <MikeSmith>
hsivonen - well, for me the main point of XTech is an opportunity to meet face to face with people and talk. If you and annevk and jgraham and others aren't planning to go, it gives me much less reason to go

[06:11:00.0000] <MikeSmith>
annevk - yeah, that

[06:11:01.0000] <MikeSmith>
/me wonders if hendry might be going

[06:11:02.0000] <annevk>
crap, you need to login

[06:11:03.0000] <annevk>
i should get an openid server running somewhere

[06:12:00.0000] <hsivonen>
MikeSmith: right. earlier, I got a feeling that the usual suspects from the last three years weren't going.

[06:12:01.0000] <MikeSmith>
I've been meaning to set up my openid server on my mail/web host

[06:12:02.0000] <annevk>
/me sets up an openid server first

[06:12:03.0000] <hsivonen>
MikeSmith: in addition, the stuff I've been up to lately is stuff I already talked about last year in future tense

[06:13:00.0000] <MikeSmith>
hsivonen - true, but could talk about what progress you've made

[06:14:00.0000] <MikeSmith>
as far as usual suspects, I guess Mozilla people probably won't be there

[06:15:00.0000] <MikeSmith>
folks from Opera maybe

[06:16:00.0000] <MikeSmith>
we really ought to try to cook up some way to get together for an annual thing in Europe that we don't have to pay to attend

[06:17:00.0000] <MikeSmith>
hmm, I remember there is this:

[06:17:01.0000] <MikeSmith>
http://www.w3.org/2002/09/TPOverview.html

[06:17:02.0000] <annevk>
i'd like a yearly thingie where Web browser people meet

[06:17:03.0000] <MikeSmith>
20-25 October 2008, Mandelieu, France

[06:17:04.0000] <MikeSmith>
annevk - yeah, that's pretty much what I meant

[06:18:00.0000] <MikeSmith>
except for financial reasons (costs of travel), I think it might need to be two yearly thingies 

[06:18:01.0000] <MikeSmith>
one in Europe, one in North America

[06:18:02.0000] <hsivonen>
I like having the Tech Plenary in France

[06:19:00.0000] <MikeSmith>
America one should be in San Francisco/Silicon Valley

[06:20:00.0000] <hsivonen>
San Francisto is nice, too. (the flight duration, carbon emissions and U.S. border stuff not so nice)

[06:20:01.0000] <gsnedders>
sodz.

[06:20:02.0000] <gsnedders>
TP is in my school holidays.

[06:22:00.0000] <MikeSmith>
hmm, the "Sofitel Cannes Mandelieu Royal Casino Hotel"

[06:22:01.0000] <MikeSmith>
that doesn't sound inexpensive

[06:22:02.0000] <gsnedders>
there are plenty of places nearby, though

[06:23:00.0000] <MikeSmith>
I wonder if there is an "Adequate with Decent Wireless That Doesn't Cost Extra Hotel"

[06:24:00.0000] <MikeSmith>
the word "Royal" is a synonym for "We will ream you" usually

[06:24:01.0000] <MikeSmith>
as far as hotels go

[06:24:02.0000] <gsnedders>
/me looks up on website

[06:25:00.0000] <gsnedders>
for one person, seemingly 199EUR/night (145.94GBP/night)

[06:25:01.0000] <gsnedders>
and same price for two people in one room

[06:26:00.0000] <gsnedders>
/me goes back to doing something more useful

[06:27:00.0000] <hsivonen>
if Google Maps is any indication, I don't expect other cheper hotels to be at convenient walking distance

[06:28:00.0000] <gsnedders>
hsivonen: 2006 page lists <http://www.w3.org/2005/12/allgroupoverview.html#Alternate>

[06:28:01.0000] <gsnedders>
vary from 200m away to 10/15 minutes walk

[06:28:02.0000] <hsivonen>
gsnedders: thanks

[06:29:00.0000] <gsnedders>
np

[06:29:01.0000] <Philip`>
"First, Dirac (or part of it) is going to be an international standard. Yay! We made a cut-down version doing intra coding only and this has only just been submitted to the SMPTE."

[06:30:00.0000] <Philip`>
"intra coding" sounds like it's just what Motion JPEG does, i.e. kind of rubbish for video compression

[06:31:00.0000] <Philip`>
(like compressing each frame independently, not making use of any inter-frame similarities over time)

[06:31:01.0000] <gsnedders>
hsivonen, MikeSmith: that suggests hotels half the price, FWIW

[06:34:00.0000] <MikeSmith>
Philip` - I seem to remember discussions of Dirac saying the quality was pretty good

[06:34:01.0000] <MikeSmith>
or not?

[06:35:00.0000] <MikeSmith>
at least better than Theora

[06:36:00.0000] <gsnedders>
MikeSmith: but a profile without wavelet encoding? it's questionable.

[06:36:01.0000] <MikeSmith>
I wonder if Dirac is anywhere on par with codecs available to Flash developers

[06:36:02.0000] <MikeSmith>
/me doesn't know what codecs Flash supports

[06:37:00.0000] <gsnedders>
MikeSmith: H.264 is coming in the next version of flash, so it becomes quite unlikely for a Dirac profile to be better

[06:37:01.0000] <gsnedders>
MikeSmith: actually, already shipping in Flash 9 Update 3

[06:38:00.0000] <gsnedders>
H.263, VP6, and H.264 are supported

[06:39:00.0000] <Philip`>
MikeSmith: That's possible, but it sounds like the thing they're submitting to ISO now is a significantly stripped-down version

[06:39:01.0000] <Philip`>
Oh, actually, am I just making up the ISO part?

[06:40:00.0000] <Philip`>
Ah, SMPTE

[06:41:00.0000] <Philip`>
/me gets confused by all these fancy new organisations claiming to define standards

[06:41:01.0000] <hsivonen>
Philip`: I gather that SMPTE is where you go in order to get the stamp if ISO says no

[06:46:00.0000] <hendry>
MikeSmith: i'm preparing some right now. i didn't realise they needed an abstract

[07:00:00.0000] <MikeSmith>
Philip` - hmm, this whole one-codec-with-multiple-profiles thing really muddies the waters

[07:00:01.0000] <MikeSmith>
or whatever the call them (if not profiles)

[07:00:02.0000] <MikeSmith>
Dirac Light

[07:00:03.0000] <MikeSmith>
Dirac with More Cowbell

[07:00:04.0000] <annevk>
oh, an abstract

[07:00:05.0000] <Philip`>
I'm not sure it was ever "waters" - it's just piling more mud into the existing mud

[07:01:00.0000] <MikeSmith>
heh

[07:02:00.0000] <MikeSmith>
then calcification and then strata for future generations to dig into and explore 

[07:02:01.0000] <hsivonen>
that's one point where Theora really shines: it's just Theora--not with profiles and levels

[07:02:02.0000] <annevk>
Abstract: A talk explaining how client-side cross-site requests will be done two years from now.

[07:02:03.0000] <MikeSmith>
yeah, profiles generally suck

[07:03:00.0000] <MikeSmith>
annevk - you need to pad that out with extra words

[07:03:01.0000] <MikeSmith>
e.g., "An exciting talk..."

[07:04:00.0000] <MikeSmith>
or "A glimpse into the future..."

[07:05:00.0000] <MikeSmith>
I find that "glimpse into the future" bit is really useful when talking about standards

[07:05:01.0000] <MikeSmith>
since they take so long to get done and support deployed

[07:06:00.0000] <MikeSmith>
"Something to look forward to..."

[07:06:01.0000] <MikeSmith>
when you are old and gray

[07:06:02.0000] <MikeSmith>
"Something you grandchildren will enjoy the use of (maybe, if we are done by then)"

[07:10:00.0000] <gsnedders>
how lovely. I can get by train from here to Mandelieu in just under 24 hours :P

[07:11:00.0000] <gsnedders>
Oh, and I can get back in a single day!111!! :P

[07:12:00.0000] <gsnedders>
/me somehow doubts he'll be doing that

[07:27:00.0000] <Philip`>
/me notices that the putImageData proposals are sounding a lot like drawImage

[08:13:00.0000] <zcorpan>
is this the right time to try to eliminate full standards mode?

[08:14:00.0000] <annevk>
now is as good as ever

[08:14:01.0000] <Philip`>
http://my.opera.com/desktopteam/blog/2008/01/25/new-snapshot-experimenting-with-document-all-cloaking - is that cloaking something that Firefox does already?

[08:15:00.0000] <annevk>
yes

[08:28:00.0000] <aroben>
WebKit does it as well

[08:33:00.0000] <Philip`>
/me wonders if HTML5 says anything about it

[08:34:00.0000] <Philip`>
Oh, looks like it doesn't

[08:52:00.0000] <jwalden>
haha

[08:53:00.0000] <jwalden>
supporting non-standard features to gain compatibility results in compatibility bustage

[09:09:00.0000] <annevk>
jwalden, that's mostly why Gecko hides it too ;)

[09:09:01.0000] <jwalden>
yuppers

[09:58:00.0000] <annevk>
SVG images are nice: http://id.annevankesteren.nl/

[10:11:00.0000] <annevk>
hmm, but my openid doesn't really work, or maybe i don't understand how it's supposed to work

[10:16:00.0000] <MikeSmith>
rubys - hei

[10:17:00.0000] <MikeSmith>
久しぶり as we say in Japan

[10:17:01.0000] <MikeSmith>
"hisashiburi" meaning "long time no see"

[10:18:00.0000] <rubys>
hi!

[10:19:00.0000] <rubys>
wandered in to find annevk

[10:19:01.0000] <annevk>
lets tests this again :)

[10:22:00.0000] <Ketsuban>
MikeSmith: Now I know how to greet my Japanese teacher when I go back on Monday, thanks. :P

[10:51:00.0000] <annevk>
ok, added a proposal for XTech

[12:07:00.0000] <annevk>
http://lists.w3.org/Archives/Public/public-forms/2008Jan/0043.html

[12:11:00.0000] <annevk>
oh, better: http://lists.w3.org/Archives/Public/public-forms/2008Jan/0055.html

[12:13:00.0000] <hober>
Was http://lists.w3.org/Archives/Public/public-forms-tf/2007Nov/0000.html really the last post to public-forms-tf?

[12:14:00.0000] <annevk>
yes

[12:14:01.0000] <annevk>
that list hasn't been active at all

[12:14:02.0000] <annevk>
i tried getting people to participate but it hasn't worked out

[12:15:00.0000] <annevk>
but there's a due date in april or so

[13:33:00.0000] <virtuelv>
those of you who also hang out on reddit: http://reddit.com/r/browsers

[13:53:00.0000] <zcorpan_>
Hixie: a test for acid3: http://software.hixie.ch/utilities/js/live-dom-viewer/?%3C!DOCTYPE%20html%3E%3Cinput%20value%3Dx%3E%3Cscript%3Edocument.body.firstChild.value%3Dnull%3C%2Fscript%3E

[13:53:01.0000] <Hixie>
please e-mail me, i am swamped right now

[13:53:02.0000] <Hixie>
(sorry)

[13:53:03.0000] <Hixie>
(i do appreciate the help)

[13:54:00.0000] <zcorpan_>
done

[13:54:01.0000] <Hixie>
thanks

[13:59:00.0000] <annevk>
ah yeah, Firefox parsing quirks

[14:00:00.0000] <zcorpan_>
parsing quirk?

[14:02:00.0000] <annevk>
somehow <script> ends up before <body>

[14:02:01.0000] <annevk>
and therefore the reference fails

[14:02:02.0000] <zcorpan_>
not in my firefox (for that case, anyway)

[14:02:03.0000] <zcorpan_>
but that's not the point of the test

[14:03:00.0000] <zcorpan_>
that's also something to put in acid3 though

[14:03:01.0000] <annevk>
my Firefox 3 most definitely does that

[14:03:02.0000] <annevk>
head > script, body > input

[14:03:03.0000] <annevk>
instead of body > input, script

[14:03:04.0000] <zcorpan_>
Mozilla/5.0 (Windows; U; Windows NT 5.1; en-US; rv:1.9b3pre) Gecko/2008010211 Minefield/3.0b3pre

[14:04:00.0000] <zcorpan_>
i get script in head if i use <span> or so instead of <input> though

[14:04:01.0000] <annevk>
interesting

[14:04:02.0000] <annevk>
my Firefox 3 is from September or so

[14:12:00.0000] <annevk>
zcorpan_, I suppose <span></span><script> ... </script> might not fail in WebKit and that therefore it does not count :-(

[14:12:01.0000] <annevk>
oh well, I can submit it anyway

[14:19:00.0000] <Hixie>
ok people need to stop being so happy that the html5 doctype will trigger ie8-bugs-mode

[14:20:00.0000] <Hixie>
there's no advantage to it triggering that bugs mode vs ie7 bugs mode

[14:20:01.0000] <Hixie>
it's still a frozen bugs mode

[14:21:00.0000] <zcorpan_>
speaking of interactivity, i wonder if <iframe> and perhaps <object> should be classified as interactive as far as content models go

[14:22:00.0000] <othermaciej>
Hixie: it sounds like right now it triggers best-effort standards mode, but they reserve the right to freeze it to a bug mode in the future

[14:22:01.0000] <Hixie>
best-effort mode is IE8 mode

[14:23:00.0000] <annevk>
zcorpan_, depending on whether they have a scrollbar, perhaps

[14:24:00.0000] <zcorpan_>
annevk: my point was that click events don't bubble up from the iframe

[14:24:01.0000] <zcorpan_>
so <a href=''><iframe> is pretty bogus

[14:24:02.0000] <Hixie>
the "Alright, I Come Clean: I hate HTML 5" sent me a long e-mail about his actual concerns, heh

[14:25:00.0000] <Hixie>
one of his problems is:

[14:25:01.0000] <Hixie>
   - It could've been better in terms of openness of the project. A lot

[14:25:02.0000] <Hixie>
   better.

[14:25:03.0000] <Hixie>
how the hell can we be more open. seriously.

[14:25:04.0000] <zcorpan_>
but <object> might be <img>ish or <iframe>ish depening on what is embedded, which makes the conf criteria a bit harder

[14:26:00.0000] <Hixie>
oh, apparently he just wanted a forum... guess we'd better make forums.whatwg.org more visible

[14:26:01.0000] <zcorpan_>
anything i can do on that front? rename it to "html5 forum"?

[14:27:00.0000] <Hixie>
i dunno

[14:27:01.0000] <Hixie>
maybe that might work

[14:27:02.0000] <othermaciej>
Hixie: the difference is only for post-IE8 releases where we can't predict what Microsoft will do

[14:27:03.0000] <Hixie>
WHATWG HTML5 Forums, so we don't piss off the w3c

[14:27:04.0000] <othermaciej>
(between best-effort mode and IE8 mode)

[14:27:05.0000] <Hixie>
othermaciej: sure... and if people use the html5 doctype, guess what they'll do

[14:28:00.0000] <othermaciej>
I'm not recommending using it - I honestly don't know what I'd do if I were a web developer

[14:28:01.0000] <Hixie>
i'd recommend not doing anything

[14:28:02.0000] <othermaciej>
what's the "I come clean" thing?

[14:28:03.0000] <Hixie>
http://sitegod.blogspot.com/

[14:29:00.0000] <zcorpan_>
as a web developer, it doesn't help you anything at this point to use ie8 mode, because you still need to support ie6 and ie7

[14:29:01.0000] <zcorpan_>
instead it probably means you have to work around bugs in ie8 mode as well, meaning more work

[14:30:00.0000] <othermaciej>
hmmm, which of us are yuppies and which are cowboys?

[14:30:01.0000] <Ketsuban>
<zcorpan_> instead it probably means you have to work around bugs in ie8 mode as well, meaning more work

[14:30:02.0000] <Ketsuban>
But working around bugs in any IE version after 5 is trivial.

[14:31:00.0000] <zcorpan_>
Ketsuban: what i mean is that instead of working around bugs in ie6 and ie7, if you put ie8 in ie8 mode, you *also* have to work around bugs in ie8's ie8 mode

[14:31:01.0000] <virtuelv>
heh. vitriolic guy

[14:32:00.0000] <othermaciej>
zcorpan_: you also have to make sure that your IE7 workarounds don't break IE8 in IE8 mode

[14:32:01.0000] <zcorpan_>
othermaciej: indeed

[14:32:02.0000] <annevk>
spam: http://forums.whatwg.org/viewtopic.php?p=559#559

[14:34:00.0000] <zcorpan_>
annevk: thanks

[14:34:01.0000] <zcorpan_>
renamed f.w.o to WHATWG HTML5 Forums

[14:39:00.0000] <virtuelv>
does anyone know of a tool to generate a diff between an archive.org copy of a site and the current document?

[14:40:00.0000] <Hixie>
diff(1) ?

[14:40:01.0000] <virtuelv>
the latest a list apart showed up in my feeds again, I'm wondering if anything changed within

[14:40:02.0000] <Hixie>
(with curl(1)?)

[14:40:03.0000] <eseidel_>
sounds like a fun little tool to write

[14:40:04.0000] <eseidel_>
could diff between archive.org versions too

[14:41:00.0000] <virtuelv>
not that it really helps with alistapart

[14:41:01.0000] <virtuelv>
" Material typically becomes available here 6 months after collection (See FAQ) "

[14:41:02.0000] <virtuelv>
google cache might be an alternative

[14:42:00.0000] <virtuelv>
(But I realise that requires massage, and permission from Google

[14:42:01.0000] <virtuelv>
)

[14:44:00.0000] <zcorpan_>
"Really, from the point of view of HTML5 it doesn't matter whose fault the headers being sent are.  It might be the fault of Apache, or IE, or Netscape, or the great spaghetti monster."

[14:44:01.0000] <zcorpan_>
let's blame the great spaghetti monster ;)

[14:44:02.0000] <Dashiva>
He doesn't like being blamed, I hear

[14:44:03.0000] <Hixie>
is the great spaghetti monster his highness the flying spaghetti monster?

[14:45:00.0000] <zcorpan_>
not sure, but it's his fault we now will have to sniff text/plain; charset=UTF-8 :P

[14:45:01.0000] <Dashiva>
I bet if everyone used IIS, we wouldn't have this problem :P

[14:50:00.0000] <annevk>
Hixie, you disagree with that part of Web Arch?

[14:52:00.0000] <Hixie>
i disagree with much of webarch

[14:52:01.0000] <Hixie>
i haven't recently checked whether i agree or disagree with that particular section, or whether it applies here.

[14:53:00.0000] <annevk>
i see

[14:53:01.0000] <annevk>
might not have been the smartest move :)

[15:27:00.0000] <jwalden>
/me wonders why HTML5 forbids UTF-32

[15:27:01.0000] <gsnedders>
jwalden: because it's pointless, it's verbose, and nobody uses it

[15:28:00.0000] <gsnedders>
jwalden: and it doesn't forbid it, it's just SHOULD NOT

[15:28:01.0000] <jwalden>
<https://bugzilla.mozilla.org/show_bug.cgi?id=414064#c0> claims it's a must not

[15:28:02.0000] <gsnedders>
jwalden: then either the spec or the bug report is wrong :)

[15:28:03.0000] <gsnedders>
"Authors should not use UTF-32."

[15:28:04.0000] <Dashiva>
If you use enough non-BMP characters that UTF-32 is a size advantage, I'd like to see it :)

[15:29:00.0000] <gsnedders>
"Support for UTF-32 is not recommended."

[15:29:01.0000] <Dashiva>
jwalden: Um

[15:29:02.0000] <gsnedders>
jwalden: i..e, the bug report is wrong :)

[15:29:03.0000] <jwalden>
I can't speak to the third, the second's accurate, but the first seems wrong in that you have constant-time indexing access, which might be useful

[15:29:04.0000] <gsnedders>
jwalden: no, the bug report is right. it doesn't say UTF-32 is must not

[15:29:05.0000] <jwalden>
er

[15:29:06.0000] <gavin>
that comment doesn't say that it's a MUST NOT

[15:30:00.0000] <jwalden>
oh, misread

[15:30:01.0000] <annevk>
not recommended == should not

[15:30:02.0000] <jwalden>
blah

[15:30:03.0000] <jwalden>
I skimmed the first part and assumed UTF-32 was in the same category

[15:30:04.0000] <jwalden>
without reading the latter half of the paragraph closely

[15:30:05.0000] <jwalden>
/me wonders how else he can waste everyone's time here!

[15:31:00.0000] <gsnedders>
jwalden: tell me to go to bed

[15:31:01.0000] <Dashiva>
jwalden: Watch me and learn

[15:31:02.0000] <jwalden>
/me just learned!

[15:34:00.0000] <annevk>
i wouldn't mind must not i think

[15:35:00.0000] <annevk>
the less encodings the better

[15:35:01.0000] <gsnedders>
I don't see why it should be must not

[15:36:00.0000] <gsnedders>
it's so little code once you have unicode support anyway

[15:36:01.0000] <annevk>
oliver hunt in this channel?

[15:36:02.0000] <annevk>
less encodings, less edge case testing, less bugs, fewer options, etc.

[15:37:00.0000] <jgraham>
Authors must not use UTF-32, UAs should not support UTF-32

[15:41:00.0000] <SadEagle>
annevk: he is olliej on #webkit, I think


2008-01-26
[16:34:00.0000] <annevk>
http://pipwerks.com/journal/2008/01/25/html-5-the-strong-element/

[16:34:01.0000] <annevk>
SadEagle, thanks btw

[16:34:02.0000] <SadEagle>
np

[16:35:00.0000] <SadEagle>
/me thinks it'll be confusing for the default stylesheet

[16:35:01.0000] <annevk>
the default style sheet will be 'b, strong { font-weight:bolder }' presumably

[16:35:02.0000] <annevk>
or maybe for <b> it will just be 'b { font-weight:bold }'

[16:35:03.0000] <annevk>
hmm

[16:36:00.0000] <annevk>
it's not like browsers show much of a difference between the various font weights

[16:37:00.0000] <SadEagle>
Not too many fonts have natural variants for many weights --- or am I mistaken?

[16:38:00.0000] <annevk>
i guess that's the easy, yeah

[16:39:00.0000] <SadEagle>
this is kind of weird, since it seems like the styling one wants depends on appearance of the markup above, and not its element/etc. structure (or am I confusing myself?)

[16:40:00.0000] <annevk>
hmm, Safari doesn't support Link: <foobar.css>;rel=stylesheet

[16:41:00.0000] <annevk>
SadEagle, I'm not sure I understand what you're saying

[16:41:01.0000] <annevk>
as far as default styling goes, that's pretty much locked by legacy

[16:43:00.0000] <SadEagle>
annevk: I think I was being silly (I often am). the default styling of semantic elements isn't normally robust against changes to styling of surrounfing markup, right..

[17:24:00.0000] <zcorpan_>
 // ok we have a conforming XHTML1 doc in |doc| now.

[17:24:01.0000] <zcorpan_>
not true, the root element doesn't contain an xmlns declaration as the spec requires ;)

[17:25:00.0000] <zcorpan_>
(acid3)

[17:27:00.0000] <jwalden>
/me snickers

[17:27:01.0000] <SadEagle>
silly serializations and their xmlns attributes :-)

[17:28:00.0000] <jwalden>
silly DOM

[17:28:01.0000] <jwalden>
silly XML

[17:28:02.0000] <SadEagle>
DOM doesn't need xmlns's, though.

[17:28:03.0000] <zcorpan_>
silly xhtml spec that specifies document conformance in terms of the xml serialization

[17:29:00.0000] <SadEagle>
<chuckle>

[17:29:01.0000] <Philip`>
Is that an HTML-serialised chuckle, or are you just being ill formed?

[17:30:00.0000] <SadEagle>
no, that's IRC-serialization

[17:30:01.0000] <Philip`>
Hmm, that sounds highly unstandardised

[17:31:00.0000] <SadEagle>
thankfully, the typical parsers are highly robust

[17:32:00.0000] <zcorpan_>
/me is still waiting for the end tag before rendering

[17:32:01.0000] <Philip`>
They have the advantage of being able to ask the author for clarification in case of unresolvable parsing ambiguities

[17:33:00.0000] <zcorpan_>
/me doesn't support incremental content sink yet :(

[17:33:01.0000] <Ketsuban>
</chuckle>

[17:34:00.0000] <zcorpan_>
ah, thanks!

[17:34:01.0000] <SadEagle>
Philip`: the advantage is in a case? how odd

[17:41:00.0000] <othermaciej>
do xmlns attributes have to appear in the DOM?

[17:42:00.0000] <othermaciej>
(and do they affecte seriaization, if the element has the right namespace anyway?)

[17:42:01.0000] <zcorpan_>
othermaciej: not sure if they have to, but they do appear

[17:42:02.0000] <SadEagle>
I presume the second aprt would be DOM3 L&S, right?

[17:46:00.0000] <othermaciej>
DOM3 L&S is a pile of pernicious nonsense

[17:46:01.0000] <othermaciej>
but I guess something has to define it for specs like XHR and HTML5 to rely on

[17:47:00.0000] <SadEagle>
I guess for a usable serialization, it should produce xmlns attributes, but they can be local to each element that needs them...

[17:47:01.0000] <zcorpan_>
othermaciej: i guess declarations that are in conflict with the element's namespace or prefix is dropped or modified in the serialization, and unused declarations are serialized... well, assuming the serializer is sane

[17:47:02.0000] <SadEagle>
Ah prefixes... forgot that they're in the DOM.

[17:48:00.0000] <SadEagle>
So it's pretty easy to make a DOM that's not serializable to XML

[17:48:01.0000] <othermaciej>
zcorpan_: declarations could even be in conflict with children, if they were added through the DOM

[17:48:02.0000] <zcorpan_>
othermaciej: yeah, true

[17:48:03.0000] <othermaciej>
(I guess children could override them though

[17:48:04.0000] <othermaciej>
)

[17:48:05.0000] <othermaciej>
so yeah, you can still do something sane an element at a time

[17:49:00.0000] <SadEagle>
attr's have their own namespace, don't they?

[17:49:01.0000] <zcorpan_>
yes

[17:49:02.0000] <zcorpan_>
namespace declarations have are in a special namespace

[17:49:03.0000] <othermaciej>
the meme that IE8 bugmode was developed "in collaboration with the Web Standards Project" has impressive traction

[17:49:04.0000] <othermaciej>
mentioned on ars technical with no disclaimer: http://arstechnica.com/articles/paedia/ie8-super-standards-mode.ars

[17:50:00.0000] <othermaciej>
ok I have a debate topic

[17:50:01.0000] <othermaciej>
XML Namespaces: Useless or Pointless?

[17:50:02.0000] <othermaciej>
discuss

[17:50:03.0000] <zcorpan_>
at least wrongly designed

[17:50:04.0000] <SadEagle>
zcorpan_:  then one can probably use the same prefix with different namespaceURIs for an element and its attributes.. I don't think that's serializable

[17:50:05.0000] <SadEagle>
othermaciej: I like the idea, not the implementation

[17:51:00.0000] <othermaciej>
the concept of namespaces in general is good

[17:51:01.0000] <SadEagle>
CSS gets it better, IMHO

[17:51:02.0000] <othermaciej>
Namespaces in XML has some major problems

[17:51:03.0000] <zcorpan_>
SadEagle: serializable if you modify the prefixes

[17:51:04.0000] <othermaciej>
1) the fact that namespace unique identifiers are URIs (and typically long, unmemorable http URIs) --> stupid

[17:52:00.0000] <othermaciej>
2) the use of attribute syntax 

[17:52:01.0000] <SadEagle>
re: #1: that's the easy way of managing a namespace. re: #2: that's why I think CSS gets it better :-)

[17:52:02.0000] <othermaciej>
3) the two level thing with namespace URIs and prefixes, resulting in non-local prefix definitions

[17:53:00.0000] <othermaciej>
SadEagle: just DNS domain names would be better than URIs, if it is a critical goal not to add a registry

[17:53:01.0000] <othermaciej>
however, DNS is also a registry

[17:53:02.0000] <othermaciej>
if namespace identifiers were something that could be used as a prefix directly, it would suck a lot less

[17:53:03.0000] <SadEagle>
I guess one can shorten them w/o losing much. e.g. w3c.org/xhtml1

[17:54:00.0000] <othermaciej>
if you could "import" namespaces like in C++ so long as they don't conflict, it would suck a lot less

[17:54:01.0000] <SadEagle>
that doesn't layer

[17:54:02.0000] <othermaciej>
"layer"?

[17:55:00.0000] <othermaciej>
I guess you'd still have to say something when creating elements

[17:55:01.0000] <SadEagle>
well, you can't make the parser resolve them. But that might not be such a big deal as on first sight

[17:55:02.0000] <othermaciej>
still, having only one kind of identifier which is always unique and if needed a registry for them would suck a lot less

[17:55:03.0000] <othermaciej>
but even org.w3c.xhtml (a la Java) would be way better than http://www.w3.org/1999/xhtm

[17:56:00.0000] <othermaciej>
(er, sorry, lost the l)

[17:56:01.0000] <zcorpan_>
a bit annoying if you want to use it as prefix for all elements though

[17:57:00.0000] <othermaciej>
this would also solve the problem that namespace-prefixed keywords in attribute values create

[17:57:01.0000] <SadEagle>
I'd personally have namespaceless attributes.

[17:57:02.0000] <SadEagle>
since their interpretation depends on the element, anyway.

[17:58:00.0000] <zcorpan_>
speaking of that

[17:58:01.0000] <SadEagle>
I guess it might help in cases like WF2, though.

[17:58:02.0000] <zcorpan_>
i think the xml: attributes suck

[17:58:03.0000] <othermaciej>
in theory namespaced attributes are intended to be element-independent

[17:58:04.0000] <othermaciej>
xml:id certainly sucks

[17:59:00.0000] <zcorpan_>
id='', class='' and lang='' and what other attribute i'm forgetting, if any, should have been superglobal attributes with predefined semantics in xml

[17:59:01.0000] <SadEagle>
othermaciej: as does the DOM3 idea of multiple id attributes..

[17:59:02.0000] <othermaciej>
zcorpan_: that would have been better

[17:59:03.0000] <othermaciej>
zcorpan_: and xml:whitespace should have been omitted

[18:00:00.0000] <SadEagle>
ah, an another thing that sucks is the DOM special-casing of xml and xmlns attributes...

[18:00:01.0000] <othermaciej>
sorry, xml:space

[18:00:02.0000] <SadEagle>
it's specified to be completely oblivious to prefix and namespace binding -- except in one case...

[18:01:00.0000] <SadEagle>
xml:space --- is that the one that affects parsing?

[18:01:01.0000] <zcorpan_>
only if you're stipping whitespace

[18:02:00.0000] <zcorpan_>
with is a design problem in itself

[18:02:01.0000] <SadEagle>
/me looks it up... sounds... extraneous

[18:03:00.0000] <zcorpan_>
i mean the design problem is that whitespace in xml can either be content or pretty-print

[18:04:00.0000] <zcorpan_>
html has that too, though

[18:10:00.0000] <zcorpan_>
http://software.hixie.ch/utilities/js/live-dom-viewer/?%3C!DOCTYPE%20html%3E%0D%0A%3Cscript%3Edocument.createElement('header')%3C%2Fscript%3E%0D%0A%3Cbody%3E%3CHEADER%3Ea%3C%2Fheader%3Eb%3Cx%3Aheader%3Ec%3C%2FX%3AHEADER%3Ed

[18:12:00.0000] <zcorpan_>
oh, nm. i thought ie did something interesting there but it doesn't

[18:14:00.0000] <Dashiva>
Luckily ElementTraversal will save us from at least parts of the whitespace mess

[18:22:00.0000] <SadEagle>
from having to write loops?

[18:28:00.0000] <zcorpan_>
weird ie bug: <?xml-stylesheet type='text/css'?><x>&amp;auml;</x>

[18:31:00.0000] <zcorpan_>
it can be carried further...

[18:31:01.0000] <zcorpan_>
y { color:red }

[18:32:00.0000] <zcorpan_>
<?xml-stylesheet type='text/css' href='test.css'?><x>&lt;y>TEST</x>

[18:38:00.0000] <zcorpan_>
or <?xml-...?><y>&lt;x> f<test>oo &lt;z> b</test>ar &lt;/x> baz &lt;z></y>

[18:42:00.0000] <zcorpan_>
acid2 breaks in almost standards mode

[18:43:00.0000] <othermaciej>
will IE8 have standards/almost standards versions of IE8 mode, I wonder?

[18:44:00.0000] <zcorpan_>
would make sense if they do what hsivonen proposed

[18:44:01.0000] <othermaciej>
obviously they won't

[18:44:02.0000] <SadEagle>
othermaciej: I think i get it now. Their stategy is to get all competing browser vendors to go nuts by trying to figure out what they're doing (oops, I think they might have tried it before)

[18:51:00.0000] <zcorpan_>
acid2 looks surprisingly similar in almost standards mode across fx, opera and safari. in fact i think they're actually pixel perfectly the same

[18:54:00.0000] <zcorpan_>
quirks mode is a bit different though, but fx and safari are pretty alike

[19:05:00.0000] <othermaciej>
I think Opera's quirks mode is somewhat more IE-like

[19:07:00.0000] <zcorpan_>
yeah

[19:09:00.0000] <othermaciej>
but yes, non-IE browsers are surprisingly similar even on things that aren't specifically standard

[19:09:01.0000] <othermaciej>
especially considering how vague many of the controlling standards are

[19:17:00.0000] <zcorpan_>
i should probably get along with writing my quirks spec so we can get a smiling acid quirks face cross-browser

[19:28:00.0000] <othermaciej>
IE changing their quirks mode seems pretty unlikely

[19:29:00.0000] <zcorpan_>
still, other browsers can interoperate

[19:31:00.0000] <zcorpan_>
/me thinks quirks mode deserves more attention, given that it affects the vast majority of authors

[19:32:00.0000] <othermaciej>
it does

[19:32:01.0000] <othermaciej>
no question

[19:32:02.0000] <othermaciej>
interop is good

[19:32:03.0000] <othermaciej>
but caring about interop seems inversely proportional to market share, which is a little unfortunate

[19:32:04.0000] <SadEagle>
cutting down on reverse-engineering time is good, too

[19:33:00.0000] <othermaciej>
yes, good standards ensure long-term competitiveness in the face of new entrants

[19:33:01.0000] <othermaciej>
there hasn't been a serious new browser engine developed in some time

[19:34:00.0000] <othermaciej>
and many older ones have died out

[19:36:00.0000] <SadEagle>
well, what's the financial incentive, anyway?

[19:37:00.0000] <SadEagle>
there are good ones available under reasonable licensing terms for free, and I don't know about how much of differentiation one can get

[19:57:00.0000] <othermaciej>
true, doesn't seem like much incentive for a new one

[20:17:00.0000] <MikeSmith>
hsivonen, annevk (+whoever else might care) - deadline for submitting proposals for XTech has been extended to Monday

[20:17:01.0000] <MikeSmith>
http://2008.xtech.org/public/cfp/9

[20:23:00.0000] <MikeSmith>
I'm writing a proposal for a presentation that looks at what substantial changes have been made to various browser engines over the last since (since XTech 2007 last May)

[21:18:00.0000] <zcorpan_>
"Style sheet data (%StyleSheet; in the DTD) can be the content of the STYLE element and the value of the style attribute. User agents must not evaluate style data as HTML markup."

[21:18:01.0000] <zcorpan_>
http://www.w3.org/TR/REC-html40/types.html#h-6.15

[21:18:02.0000] <zcorpan_>
that means that entities and NCRs in style='' must not be resolved

[21:19:00.0000] <zcorpan_>
no?

[21:23:00.0000] <Ketsuban>
* zcorpan_ thinks quirks mode deserves more attention, given that it affects the vast majority of authors <- doesn't it defeat the object to create a standard for quirks mode?

[21:24:00.0000] <zcorpan_>
i don't follow

[21:45:00.0000] <Ketsuban>
zcorpan_: The whole point of quirks mode is that it's quirky - it doesn't follow any standards except the standards of the writer of the browser.

[21:46:00.0000] <othermaciej>
Ketsuban: the point of quirks mode is compatibility

[21:46:01.0000] <othermaciej>
(I'd call it "compatibility mode" if I were naming it)

[23:38:00.0000] <jruderman>
Hixie: are there specs that say whether https://bugzilla.mozilla.org/show_bug.cgi?id=340017 is a bug?

[23:39:00.0000] <othermaciej>
jruderman: no specs define the document.formName behavior

[23:40:00.0000] <jruderman>
ok

[23:40:01.0000] <jruderman>
i'd prefer for it to work in XHTML because i don't want there to be too many differences between HTML and XHTML

[23:44:00.0000] <jruderman>
https://bugzilla.mozilla.org/show_bug.cgi?id=371711 would be a fun one to have in acid3

[23:47:00.0000] <jruderman>
 https://bugzilla.mozilla.org/show_bug.cgi?id=378666 too

[23:51:00.0000] <othermaciej>
jruderman: putting things directly on window or document based on the markup is pretty dodgy because it creates namespace risk when those APIs are extended

[23:51:01.0000] <othermaciej>
jruderman: so I wouldn't feel too sad about XHTML phasing that practice out

[23:52:00.0000] <jruderman>
ok

[23:59:00.0000] <MacDomeOut>
ed_home: http://bugs.webkit.org/show_bug.cgi?id=16968

[23:59:01.0000] <MacDome>
ed_home: Hixie used data: urls for load guarantees 

[00:00:00.0000] <MacDome>
otherwise he'd have to use an additional <iframe> and re-write all his traversal tests to be aware of said iframe

[00:00:01.0000] <MacDome>
doing a dynamic insertion would not guarantee it to load fast enough

[00:07:00.0000] <jruderman>
https://bugzilla.mozilla.org/show_bug.cgi?id=393340 confuses me

[00:15:00.0000] <weinig>
MacDome: why would there need to be a guaranteed load speed?  could the iframe simply call a function in it's parent to notify that it had finished loading? 

[00:15:01.0000] <MacDome>
weinig: if the load is kicked off from teh test, part of Acid3 is that the anim shoudl be fluid

[00:15:02.0000] <MacDome>
so either the load needs to be done before any tests

[00:16:00.0000] <MacDome>
or the load needs to be basically instant

[00:16:01.0000] <MacDome>
weinig: I think Hixie had most recently decided to just add a "load up things" phase, which did all the loads (via js) after the onload, but before starting the tests

[00:16:02.0000] <jwalden>
/me sorta disagrees

[00:16:03.0000] <jwalden>
class += "P"

[00:17:00.0000] <jwalden>
as long as they happen, smoothness not so much a concern to me

[00:17:01.0000] <weinig>
MacDome: is there any spec that states that data: urls are loaded synchronously? 

[00:17:02.0000] <MacDome>
weinig: no, that part has nothing to do with data loads

[00:17:03.0000] <weinig>
MacDome: nm

[00:17:04.0000] <jwalden>
does *any* URL load sync?

[00:17:05.0000] <MacDome>
it has to do with not being able to use external loads

[00:17:06.0000] <jwalden>
I'm not aware of anything

[00:17:07.0000] <weinig>
that was a dumb question

[00:18:00.0000] <MacDome>
src="foo.svg"

[00:18:01.0000] <MacDome>
load speed should not affect animation speed

[00:18:02.0000] <MacDome>
at least resource fetch speed shouldn't

[00:18:03.0000] <MacDome>
that's not the point of the test

[00:19:00.0000] <MacDome>
so he needs to preload them, or use data urls

[00:19:01.0000] <MacDome>
he didn't want to edit the actual source (since that would change the traversed dom)

[00:19:02.0000] <MacDome>
so he needs to add a pre-load phase

[00:19:03.0000] <MacDome>
a "load up everything before actually kicking off the tests" phase

[00:24:00.0000] <hsivonen>
jwalden: re: constant-time indexing and UTF-32, roc has a good blog post about why string indexing misses the point

[00:24:01.0000] <jwalden>
that it does isn't the point

[00:24:02.0000] <jwalden>
er

[00:25:00.0000] <jwalden>
I think it's a reasonable tradeoff in the long haul

[00:25:01.0000] <jwalden>
memory is cheap

[00:25:02.0000] <jwalden>
and getting cheaper

[00:26:00.0000] <roc>
gah

[00:27:00.0000] <jwalden>
although

[00:28:00.0000] <jwalden>
it makes more sense as an internal format than as something you'd send over the network

[00:28:01.0000] <roc>
memory may be cheap but memory bandwidth, cache and CPU arne't

[00:29:00.0000] <jwalden>
sure

[00:29:01.0000] <roc>
and maybe we should use memory for useful stuff instead of just wasting up

[00:29:02.0000] <roc>
then there's mobile

[00:29:03.0000] <jwalden>
for some work loads that may not matter

[00:29:04.0000] <hsivonen>
jwalden: in any case, sending UTF-32 over the network makes absolutely no sense

[00:29:05.0000] <hsivonen>
jwalden: only test suites do it

[00:30:00.0000] <hsivonen>
jwalden: and if browsers support it and sites other than test suites use it for whatever misguided reason, non-browser scrapers need to add UTF-32

[00:31:00.0000] <hsivonen>
and if the UTF-32 decoder doesn't exist as part of the platform, implementing it is a remarkable bad use of developer time 

[00:32:00.0000] <hsivonen>
jwalden: IIRC, the UTF-32 should not was put in the spec after Mike Day pointed out that implementing UTF-32 support in Prince would have been useless use of dev time

[00:34:00.0000] <hsivonen>
UTF-32 has already wasted my time since the JDK doesn't support it but ICU4J does and I want the V.nu parser to be usable on pure JDK but also use ICU4J when available

[02:57:00.0000] <hsivonen>
http://en.wikipedia.org/wiki/HTML#Elements 

[02:57:01.0000] <hsivonen>
"label" hmmkay

[04:20:00.0000] <ed_japan>
MacDomeSleep: dataURI:s may load faster but I don't know if that's guaranteed, I think having them like that is fine but it's probably better to preload the necessary resources before starting the test

[04:20:01.0000] <MacDomeSleep>
ed_home: I expet that's what Hixie is planning on doing

[04:20:02.0000] <MacDomeSleep>
ed_home: the data: load is expected to be synchronous I bet

[04:24:00.0000] <annevk>
it's not

[04:24:01.0000] <annevk>
it's just expected to take very little time

[05:01:00.0000] <gsnedders>
hsivonen: for the validator, how do you know whether to use ISO-8859-1 or Windows-1252?

[05:03:00.0000] <annevk>
isn't ISO-8859-1 just an alias?

[05:05:00.0000] <gsnedders>
he lists both in the options

[05:05:01.0000] <gsnedders>
is ISO-8859-1 only ever sniffed as Windows-1252 so to validate using ISO-8859-1 you need to explicitly use it?

[05:24:00.0000] <hsivonen>
gsnedders: the override overrides the HTTP layer encoding info

[05:24:01.0000] <hsivonen>
gsnedders: the result follow from that

[05:25:00.0000] <hsivonen>
gsnedders: so it is an alias in the HTML case but different encoding in the XML case

[05:25:01.0000] <gsnedders>
ah.

[05:25:02.0000] <hsivonen>
I could be persuaded to take ISO-8859-1 off the menu

[05:27:00.0000] <gsnedders>
I found some many mis-served feeds that I treat ISO-8859-1 as Windows-1252 in XML too, FWIW

[05:42:00.0000] <annevk>
making ISO-8859-1 an alias for Windows-1252 "globally" seems like the most practical solution

[05:43:00.0000] <gsnedders>
anyone want to try and register that? :P

[05:44:00.0000] <Philip`>
Surely ISO wouldn't mind updating their spec to better match reality

[05:45:00.0000] <gsnedders>
/me dunnos

[05:46:00.0000] <hsivonen>
from the usability point of view, though, should I keep the menu item?

[05:46:01.0000] <hsivonen>
browsers keep the menu item

[05:47:00.0000] <hsivonen>
but a validator is aimed at a different audience 

[05:50:00.0000] <gsnedders>
Philip`: Hmm, I doubt we could get ISO-8859-1 changed. We have more hope at getting the IANA to register it as an alias.

[05:51:00.0000] <hsivonen>
gsnedders: I don't think the IANA subscribes to WHATWG principles yet

[05:51:01.0000] <gsnedders>
Nor do I.

[05:51:02.0000] <gsnedders>
All I said is "more hope", not having much :)

[06:03:00.0000] <annevk>
maybe we should have an alternative to IANA on the WHATWG wiki (A)

[06:03:01.0000] <gsnedders>
:D

[07:04:00.0000] <hsivonen>
hmm. Looks like Shelley Powers went application/xhtml+xml-only even for IE

[07:05:00.0000] <hsivonen>
I wonder if others who write reading-worthy stuff follow her lead

[07:05:01.0000] <annevk>
maybe I should start serving up style sheets using Link:

[07:06:00.0000] <hsivonen>
annevk: that's a bit different, though

[07:06:01.0000] <hsivonen>
Link was removed from HTTP 1.1

[07:07:00.0000] <webben_>
hsivonen: hmm, when I curl http://burningbird.net/ I get text/html.

[07:07:01.0000] <webben_>
"XHTML 1.1 plus MathML 2.0 plus SVG 1.1//EN" served as text/html to be precised

[07:07:02.0000] <webben_>
*precise

[07:07:03.0000] <hsivonen>
webben_: ah. I only tried realtech.burningbird.net (checked with IE UA string and Accept: text/html)

[07:51:00.0000] <zcorpan_>
this is probably the sneakiets spam i've ever seen... http://forums.whatwg.org/viewtopic.php?t=134

[07:51:01.0000] <zcorpan_>
well, at least on f.w.o

[07:53:00.0000] <zcorpan_>
"Hello! 

[07:53:01.0000] <zcorpan_>
Could you tell me a portal where I can add advertisements for printing and graphic art machines free?

[07:53:02.0000] <zcorpan_>
Here’s one www.allf...."

[08:15:00.0000] <zcorpan_>
hsivonen: i fixed the terminology on the wikie page. well, only in that section. we'll see if someone reverts it or fixes the rest

[08:15:01.0000] <zcorpan_>
s/wikie/wiki/

[08:16:00.0000] <hsivonen>
zcorpan_: thanks

[08:17:00.0000] <hsivonen>
earlier today, I added mentions of the HTML5 WD to wikipedia

[08:17:01.0000] <hsivonen>
I'm slightly surprised that the hive mind hadn't taken care of it

[08:18:00.0000] <hsivonen>
or it had for "HTML 5" but not for "HTML" and "XHTML"

[08:43:00.0000] <hsivonen>
I could waste the whole weekend if I wanted to fix what the Finnish Wikipedia says about HTML matters

[08:43:01.0000] <hsivonen>
:-(

[08:44:00.0000] <annevk>
give it a few years

[08:44:01.0000] <annevk>
there's no hurry

[08:53:00.0000] <hsivonen>
the quality of Web-related articles on the Finnish wikipedia is really sad

[08:54:00.0000] <hsivonen>
I guess the people who care are literate in English and prefer to play in the bigger sandbox

[08:54:01.0000] <hsivonen>
like me

[08:54:02.0000] <annevk>
whoa

[08:55:00.0000] <annevk>
i just noticed that the guy who asked about extensibility is from microsoft

[08:56:00.0000] <annevk>
it does say so pretty clearly at the bottom of http://lists.w3.org/Archives/Public/public-html-comments/2008Jan/0038.html but then I don't read very well :o

[08:56:01.0000] <annevk>
i guess my answer would still have been pretty much the same

[08:57:00.0000] <hsivonen>
annevk: I think your answer missed the point

[08:58:00.0000] <hsivonen>
annevk: the way I read it was that (s)he wanted to add custom elements to bind the XBL stuff to

[08:58:01.0000] <annevk>
from http://www.nikhilk.net/HTML5-Thoughts.aspx I gathered that it was also about XBL

[08:58:02.0000] <annevk>
or HTC

[08:59:00.0000] <annevk>
" I would have loved to see the HTML 5 spec address extensibility of the tag set and rationalize things like HTC behaviors and XBL bindings."

[08:59:01.0000] <annevk>
though maybe I misunderstand "rationalize"

[09:00:00.0000] <hsivonen>
I think it means that XBL is kind of pointless as an implementation mechanism for custom elements if HTML5 doesn't allow you to create custom elements

[09:00:01.0000] <annevk>
ah ok

[09:01:00.0000] <annevk>
he has some thoughts on <dialog> too: http://www.nikhilk.net/HTML5-Dialog-Microformats.aspx

[09:01:01.0000] <SadEagle>
/me reads the charset thread and wonders whether some people would have a different opinion if they were not from Western Europe

[09:03:00.0000] <hsivonen>
SadEagle: UTF-8 covers all of Unicode and Western Europe has a legacy to get rid of, too

[09:06:00.0000] <SadEagle>
hsivonen: sure. But e.g. I can tell you that for Cyrillic (at least Russian), it used to be a real mess (and still parly is) --- some of the bigger websites would have proxies to automatically recode things into different encoding, including transliteration into latin..

[09:06:01.0000] <hsivonen>
SadEagle: I know. Are we talking about the same thread?

[09:06:02.0000] <SadEagle>
hsivonen: probably.... ... and despite having 2+ codes in wide uses, a lot of websites would not specify their encoding, so good encoding autoguessing is actually a part of interoperability needs :(

[09:08:00.0000] <hsivonen>
SadEagle: yeah, failure to declare the encoding is a very, very bad idea.

[09:08:01.0000] <hsivonen>
I was referring to the public-html-comments thread.

[09:09:00.0000] <SadEagle>
yeah, me too. BTW, on the link to verifier you added... apparently some people actually use MacCyrrilic. Not too many, thankfully.

[09:10:00.0000] <SadEagle>
(I don't think i've seen anyone use 8859-5, though)

[09:12:00.0000] <hsivonen>
SadEagle: apparantly no one has cared enough to register MacCyrillic with the IANA, so it's not on the list

[09:12:01.0000] <hsivonen>
and, yes, the Web might not break if ISO-8859-5 were not supported

[09:12:02.0000] <hsivonen>
but then, it is supported and registered, so it is on my list

[09:14:00.0000] <hsivonen>
SadEagle: btw, that list is the intersection of the IANA registry, Python 2.4 (or 2.3 I forget), Sun JDK 1.4.2, IE 7, Firefox 2, Safari 2 and Opera 9

[09:14:01.0000] <hsivonen>
minus US-ASCII which doesn't make sense as an override

[09:15:00.0000] <SadEagle>
sounds reasonable, expect you probably have to union in IE6 :(

[09:16:00.0000] <hsivonen>
if that add encodings, they are probably seriously in the diminishing returns department and cover very little Web content

[09:16:01.0000] <hsivonen>
s/add/adds/

[09:18:00.0000] <hsivonen>
in any case, my point is that the proliferation is bad and BOCU-1 is not part of the real Web content legacy

[09:19:00.0000] <SadEagle>
I guess my point is that you won't have to explain that to people who had to deal with a whole bunch of encoding legacy :-)

[10:36:00.0000] <hsivonen>
the WHATWG wiki doesn't have Atom feeds like wikipedia

[10:36:01.0000] <hsivonen>
can I get email notifications from the WHATWG wiki when it is edited?

[10:37:00.0000] <hsivonen>
hmm. looks like I already have that enabled. the wiki just isn't edited often

[10:46:00.0000] <marcreichelt>
hi there :)

[10:46:01.0000] <marcreichelt>
I have a question about HTML 5

[10:47:00.0000] <marcreichelt>
is there a rational reason for the <embed> element being part of the new HTML 5 draft?

[10:48:00.0000] <marcreichelt>
because then there would be 2 elements for embedding random content - <embed> and <object>

[10:49:00.0000] <SadEagle>
that's the least of problems with embed :-)

[10:50:00.0000] <annevk>
<object> is a generic inclusion mechanism, <embed> is for plugins

[10:50:01.0000] <annevk>
so <embed> is actually a specific form of <object>, just like <img>

[10:51:00.0000] <hsivonen>
marcreichelt: content authors need embed to support existing browsers, so we might as well make it valid

[10:51:01.0000] <marcreichelt>
which browser needs embed today?

[10:51:02.0000] <SadEagle>
all of them

[10:51:03.0000] <marcreichelt>
besides, Netscape is dead

[10:51:04.0000] <SadEagle>
if you mean from the browser side, not author side

[10:51:05.0000] <annevk>
yes, but <embed> isn't :)

[10:51:06.0000] <marcreichelt>
and all the multimedia content can be embedded via object, too

[10:52:00.0000] <SadEagle>
annevk: <lazy>does html5 still do the evil embed-in-object thing though</lazy> ?

[10:52:01.0000] <marcreichelt>
:(

[10:52:02.0000] <annevk>
SadEagle, <object> can have <embed>, sure

[10:53:00.0000] <hsivonen>
embed in object is still needed to make Flash work in both IE and Firefox

[10:53:01.0000] <marcreichelt>
no

[10:53:02.0000] <marcreichelt>
it is not

[10:53:03.0000] <SadEagle>
annevk: but is there any special behavior outside of normall fallback content there?

[10:53:04.0000] <hsivonen>
marcreichelt: can you get one object to work in both with accessibility stuff and all?

[10:54:00.0000] <marcreichelt>
oh - I think I know what you are talking about

[10:54:01.0000] <marcreichelt>
so you are taking <embed> in because of the accessibility?

[10:55:00.0000] <marcreichelt>
if HTML 5 wouldn't have <embed> in it, the creators of accessibility programs (like YAWS) will definitely fix this

[10:56:00.0000] <hsivonen>
marcreichelt: I can't say what rationale Hixie had, but from my point of view, admitting that it exists and making it conforming is more productive than embarking on a massive re-education campaign

[10:56:01.0000] <marcreichelt>
the support of two elements (object AND embed) is just not reasonable to me

[10:56:02.0000] <marcreichelt>
:(

[10:56:03.0000] <hsivonen>
marcreichelt: browsers other than IE will have to support both no matter what the spec says

[10:56:04.0000] <hsivonen>
marcreichelt: it is mainly an issue of whether we admit <embed> as conforming

[10:57:00.0000] <marcreichelt>
"browsers other than IE"

[10:57:01.0000] <marcreichelt>
?

[10:58:00.0000] <hsivonen>
marcreichelt: evidence shows MS can get away with doing something different

[10:58:01.0000] <marcreichelt>
my argument is: if you will conform the embed-Element, the evil embed-in-object thing will live long and prosper

[10:58:02.0000] <hsivonen>
what's evil about it?

[10:59:00.0000] <marcreichelt>
you have to embed the same content twice

[10:59:01.0000] <marcreichelt>
and the parameters of embed and object have to be kept twice

[11:00:00.0000] <marcreichelt>
this is a great source for errors (why does IE play my flash movie, but Firefox does not?)

[11:01:00.0000] <SadEagle>
marcreichelt: actually, you only need most stuff on the embed

[11:01:01.0000] <SadEagle>
object will automatically pick stuff up from it.

[11:02:00.0000] <marcreichelt>
right now, special parameters for embed are passed by non-conform attributes

[11:02:01.0000] <marcreichelt>
for object, there is the <param>-Tag

[11:05:00.0000] <hsivonen>
marcreichelt: it is kind of pointless to change HTML5 if https://bugzilla.mozilla.org/show_bug.cgi?id=46569 doesn't get reversed and the current installed based replaced

[11:06:00.0000] <hsivonen>
marcreichelt: HTML5 makes the embed attributes conforming, so they're no longer non-conform :-)

[11:06:01.0000] <marcreichelt>
hsivonen: and what about the parameters for the content?

[11:07:00.0000] <hsivonen>
marcreichelt: they are conforming, too, per HTML5

[11:07:01.0000] <marcreichelt>
just look at the standard-embed for any multimedia (Flash or something like that) content

[11:07:02.0000] <marcreichelt>
for example flash:

[11:07:03.0000] <marcreichelt>
http://kb.adobe.com/selfservice/viewContent.do?externalId=tn_4150&sliceId=2

[11:07:04.0000] <marcreichelt>
<embed> is not like <embed src="..." type="..." width="..." height="..." />

[11:07:05.0000] <marcreichelt>
but like:

[11:08:00.0000] <marcreichelt>
<embed src="..." type="..." width="..." height="..." bgcolor="..." pluginspage="..." quality="..." fooattribute="..." />

[11:08:01.0000] <hsivonen>
marcreichelt: the errors I got from Validator.nu pertain to classid, codebase and the end tag </embed>

[11:09:00.0000] <hsivonen>
marcreichelt: the spec allows that stuff

[11:09:01.0000] <marcreichelt>
wohw?

[11:09:02.0000] <marcreichelt>
no :(

[11:09:03.0000] <marcreichelt>
ok, thats it

[11:09:04.0000] <marcreichelt>
HTML 5 is no goot to me

[11:09:05.0000] <marcreichelt>
-t+d

[11:09:06.0000] <SadEagle>
marcreichelt: the point is interoperability.

[11:10:00.0000] <marcreichelt>
so I believe <embed> can take _any_ attribute?

[11:10:01.0000] <hsivonen>
marcreichelt: yes

[11:10:02.0000] <marcreichelt>
wahh

[11:10:03.0000] <marcreichelt>
ok

[11:10:04.0000] <SadEagle>
people don't write nice mark up. This sort of thing is one the web, and it'll be on the web regardless of what html5 says

[11:10:05.0000] <marcreichelt>
great

[11:10:06.0000] <hsivonen>
marcreichelt: or, rather, any attribute that is not in a namespace

[11:10:07.0000] <marcreichelt>
is this allowed for other elements, too?

[11:10:08.0000] <hsivonen>
marcreichelt: no

[11:10:09.0000] <marcreichelt>
kay

[11:11:00.0000] <hsivonen>
marcreichelt: the W3C tried to kill <embed> a decade ago

[11:11:01.0000] <hsivonen>
marcreichelt: <embed> is still around so we might as well admit that killing it didn't work

[11:12:00.0000] <marcreichelt>
or maybe there has not been enough time

[11:12:01.0000] <hsivonen>
marcreichelt: is getting rid of <embed> really worth a more than a decade of trying?

[11:12:02.0000] <marcreichelt>
yes

[11:12:03.0000] <SadEagle>
it won't happen.

[11:13:00.0000] <marcreichelt>
it is worth to me if I see complex constructions like the embed-in-object

[11:13:01.0000] <marcreichelt>
and users that are confused why they have to type in the same information twice

[11:13:02.0000] <SadEagle>
marcreichelt: it's even uglier on the implementation end, but the implementors will have to support it /anyway/. So it's better to bring some order to it.

[11:14:00.0000] <marcreichelt>
if you say so

[11:14:01.0000] <marcreichelt>
you are the master

[11:14:02.0000] <marcreichelt>
;)

[11:14:03.0000] <SadEagle>
I am not :-). Well, I sort of am on the "ugly on the implementation end" part..

[11:15:00.0000] <marcreichelt>
k

[11:15:01.0000] <marcreichelt>
for which implementation if I may ask?

[11:16:00.0000] <SadEagle>
khtml.

[11:16:01.0000] <marcreichelt>
ah, okay :)

[11:17:00.0000] <SadEagle>
I think it can be simplified by taking advantage of fallback content, though

[11:17:01.0000] <marcreichelt>
all I can say is that having the embed element is not good for a longer time

[11:17:02.0000] <hsivonen>
marcreichelt: Flash itself is a much bigger problem than the entry point

[11:17:03.0000] <marcreichelt>
and there is no alternative content for <embed>, right?

[11:17:04.0000] <gsnedders>
right.

[11:18:00.0000] <hsivonen>
marcreichelt: the main use case for <embed> is Flash and the right way to do Flash accessibility is to have the Flash player talk to the accessibility framework

[11:19:00.0000] <marcreichelt>
so the alternative content of the <object> element will always be an <embed> element

[11:19:01.0000] <hsivonen>
pretty much, yes.

[11:20:00.0000] <marcreichelt>
so in the case no Flash Player is installed there will be no alternative content

[11:21:00.0000] <hsivonen>
marcreichelt: right

[11:21:01.0000] <SadEagle>
marcreichelt: and actually, part of the problem for a minor developer is that one has to reverse-engineer this sort of stuff... So having it written down helps

[11:21:02.0000] <hsivonen>
marcreichelt: evidence suggests that authors either don't care or provide an <a href link to alternative content

[11:22:00.0000] <marcreichelt>
why don't they care?

[11:22:01.0000] <marcreichelt>
because it is not possible right now

[11:22:02.0000] <hsivonen>
marcreichelt: and Flash being proprietary is the real problem behind Flash not being installed somewhere

[11:22:03.0000] <marcreichelt>
because the alternative content for an object element will be an embed element

[11:23:00.0000] <SadEagle>
marcreichelt: is impossibility why many websites don't have "well-structured" markup?

[11:23:01.0000] <hsivonen>
marcreichelt: ad hoc analysis suggests that Flash is often used for marketing and if marketers care about alternative content, they think of SEO first

[11:24:00.0000] <hsivonen>
marcreichelt: marketers usually don't care about FreeBSD on MIPS or other platforms that don't run Flash

[11:25:00.0000] <hsivonen>
marcreichelt: and like I said, alternative content isn't the right way to do Flash accessibility

[11:25:01.0000] <marcreichelt>
no - not do do Flash accessibility

[11:25:02.0000] <gsnedders>
hsivonen: heck, they don't care about Windows x64, yet alone FreeBSD on MIPS

[11:25:03.0000] <hsivonen>
gsnedders: good point

[11:27:00.0000] <marcreichelt>
okay then

[11:27:01.0000] <hsivonen>
basically, to do what's done with Flash but in a non-proprietary way, there are <canvas>, <video> and <svg>

[11:27:02.0000] <marcreichelt>
I think there is no possibility to change this

[11:36:00.0000] <marcreichelt>
see you

[11:38:00.0000] <harri>
annevk: you had been writing some xmlhttprequest tests, right?

[11:43:00.0000] <hsivonen>
is there a pure python alternative for pygenx? does html5lib contain one by any chance?

[11:59:00.0000] <hsivonen>
hmm. interesting. iCab 4 contains only the Growl framework, which suggests all the features have been implemented with the OS copy of WebKit

[13:06:00.0000] <gsnedders>
/me realises he's reading the GZIP spec wrong

[13:07:00.0000] <gsnedders>
the bits are written in big-endian form within a byte, with bytes in little-endian order

[13:10:00.0000] <kig>
is there even a system that uses little-endian bit order within byte..

[13:11:00.0000] <roc>
that never matters

[13:11:01.0000] <roc>
oh I guess it does for gzip

[13:13:00.0000] <gsnedders>
it doesn't, AFAIK

[13:19:00.0000] <gsnedders>
gzip is defined as a sequence of 8-bit bytes, with certain parts being little-endian words

[13:20:00.0000] <gsnedders>
How you choose to store those bits is up to you.

[13:45:00.0000] <zcorpan_>
hsivonen: "In that case, you a probably better off tracking XHTML5 as opposed to XHTML 1.1." -- s/a /are /

[13:51:00.0000] <annevk>
harri, http://tc.labs.opera.com/apis/XMLHttpRequest/

[13:52:00.0000] <SadEagle>
annevk: I am quite impressive by how you folks don't block the UI on synchronous (puke) XHR

[13:52:01.0000] <SadEagle>
impressed, that is.

[13:54:00.0000] <hsivonen>
zcorpan_: thanks. fixed

[13:55:00.0000] <jwalden>
synchronous APIs are bad

[13:55:01.0000] <jwalden>
albeit convenient

[13:55:02.0000] <jwalden>
just gotta bite the bullet

[13:57:00.0000] <gsnedders>
ABNF isn't expressive enough.

[13:59:00.0000] <annevk>
SadEagle, that's probably one of my favorite Opera features

[14:00:00.0000] <gsnedders>
RFC 1952 is too vague.

[14:03:00.0000] <hsivonen>
annevk: does Presto run in the UI thread nonetheless?

[14:03:01.0000] <SadEagle>
hmm, looks like we need lots of work on that tc..

[14:04:00.0000] <annevk>
I'd recommend coding against http://dev.w3.org/2006/webapi/XMLHttpRequest/ and then use the tests to verify

[14:04:01.0000] <annevk>
so we can catch bugs in both

[14:04:02.0000] <annevk>
(well, and in your impl :) )

[14:04:03.0000] <SadEagle>
Well, the code is there, but it could surely use an audit.

[14:04:04.0000] <SadEagle>
how interoperable is the stuff the tests test?

[14:04:05.0000] <annevk>
hsivonen, can't comment on that I think

[14:05:00.0000] <hsivonen>
annevk: ok

[14:05:01.0000] <annevk>
SadEagle, it's compatible with other browsers

[14:05:02.0000] <annevk>
I think we aligned with IE the most

[14:12:00.0000] <annevk>
acid test moved: http://acid3.acidtests.org/

[14:14:00.0000] <hsivonen>
Hixie: acid3 just crashed my copy of firefox 2

[14:20:00.0000] <annevk>
so is text/html;charset=latin1 identical to text/html;charset=iso-8859-1 ?

[14:22:00.0000] <hsivonen>
annevk: if you use an alias, v.nu will tell you the preferred iana name

[14:22:01.0000] <annevk>
but aliases are supported and such?

[14:23:00.0000] <hsivonen>
yes

[14:23:01.0000] <hsivonen>
http://validator.nu/?doc=http%3A%2F%2Fw3.org%2F&charset=latin1

[14:23:02.0000] <hsivonen>
yes, latin1 is an alias of iso-8859-1

[14:24:00.0000] <hsivonen>
oh, did you mean supported in browsers? I'm not sure

[14:24:01.0000] <annevk>
regarding that document, the lang= attribute value message is confusing

[14:24:02.0000] <annevk>
yeah, i'd guess so...

[14:25:00.0000] <annevk>
would be nice if documentation on this sucked less

[14:26:00.0000] <annevk>
and also exact algorithms for bytestream + encoding -> unicode character stream

[14:26:01.0000] <hsivonen>
which message is confusing?

[14:26:02.0000] <annevk>
including handling errors, etc.

[14:26:03.0000] <annevk>
" Attribute lang not allowed on XHTML element html at this point."

[14:26:04.0000] <annevk>
where you mean xml:lang probably

[14:27:00.0000] <annevk>
oh wait

[14:27:01.0000] <hsivonen>
annevk: no, lang is not allowed

[14:27:02.0000] <hsivonen>
xml:lang is allowed

[14:27:03.0000] <annevk>
it's served as XML, blah

[14:27:04.0000] <hsivonen>
hmm. the page has hreflang='en-uk' even

[14:28:00.0000] <annevk>
i think lang= should be allowed, but i don't care enough to raise it

[14:30:00.0000] <annevk>
"XML processors are required to support the UTF-8 and UTF-16 character encodings. The encoding was latin1 instead, which is an incompatibility risk."

[14:30:01.0000] <annevk>
wasn't that supposedly disabled for ISO-8859-1?

[14:32:00.0000] <hsivonen>
annevk: yeah, but apparently, the code compares the declared charset--not the canonical name

[14:33:00.0000] <hsivonen>
which is OK, considering that aliases may not be as safe as "ISO-8859-1"

[14:34:00.0000] <hsivonen>
compare with http://validator.nu/?doc=http%3A%2F%2Fw3.org%2F&charset=iso-8859-1

[14:41:00.0000] <annevk>
k

[15:13:00.0000] <zcorpan_>
Hixie: s#&lt/#&lt;/#g in html5 source

[15:13:01.0000] <zcorpan_>
(validating the spec now worked, but it took a while)


2008-01-27
[17:54:00.0000] <webben_>
Is there a document that describes the typical testing process when new elements/attributes are proposed for HTML5?

[17:54:01.0000] <webben_>
(note, not the stuff about finding problems and evaluating different solutions)

[18:12:00.0000] <zcorpan_>
webben_: what testing process?

[18:13:00.0000] <webben_>
stuff like inspecting in the live DOM viewer, testing in actual browsers, making experimental implementations

[18:14:00.0000] <webben_>
oh, and surveying the web to see what's out there

[18:14:01.0000] <zcorpan_>
i'm not aware of any document that describes that, no

[18:14:02.0000] <webben_>
ah well. thanks anyhow :)

[18:15:00.0000] <zcorpan_>
perhaps there's an archived email though

[18:15:01.0000] <zcorpan_>
dunno

[18:15:02.0000] <webben_>
does that short list miss out any obvious steps?

[18:17:00.0000] <zcorpan_>
researching if there are proprietary implementations that solve the same problem

[18:18:00.0000] <webben_>
ah, that comes under evaluating different solutions

[18:18:01.0000] <zcorpan_>
true

[04:09:00.0000] <hsivonen>
bad stuff. my email provider has a load problem and I'm locked into their service :-(

[07:47:00.0000] <hsivonen>
is there a replacement for Hixie's character identifier? it is currently broken

[08:25:00.0000] <webben_>
hsivonen: Character identifier?

[08:25:01.0000] <webben_>
what did it do?

[08:26:00.0000] <hsivonen>
webben_: identify the code points and unicode names of pasted text

[08:26:01.0000] <webben_>
hsivonen: http://people.w3.org/rishida/scripts/uniview/conversion.php

[08:26:02.0000] <hsivonen>
webben_: cool. Thanks.

[08:26:03.0000] <webben_>
yw

[13:55:00.0000] <zcorpan_>
http://aetherlumina.com/html/sucks.html is pretty funny

[13:58:00.0000] <zcorpan_>
at the same time it's sad because it's largely true

[13:59:00.0000] <webben>
when he says XHTML isn't valid XML, precisely what sort of XHTML is he talking about? XHTML distorted via Appendix C, or vanilla "XML" XHTML?

[14:00:00.0000] <webben>
or does he just mean the document of the XHTML 1.0 spec itself?

[14:01:00.0000] <webben>
also, some of the sites he lists as having no doctype do have a doctype (maybe the rant's just old, I dunno)

[14:01:01.0000] <zcorpan_>
dunno. when i try validating w3.org with the service he says i get a number of errors about the dtd

[14:03:00.0000] <zcorpan_>
wayback machine's first copy of the rant is from april 2003

[14:34:00.0000] <jgraham_>
annevk2: yt?

[14:39:00.0000] <annevk2>
sort of

[14:41:00.0000] <jgraham_>
It's not at all urgent. I was just wondering if there's any chance of getting enough space on james.html5.org to build python 2.5, since that seems to be the right way to fix python suckiness on dreamhost 

[14:41:01.0000] <jgraham_>
But it's not a big problem if not

[14:42:00.0000] <annevk>
how much do you need?

[14:42:01.0000] <annevk>
gigabyte?

[14:43:00.0000] <annevk>
just give me a number of MB

[14:45:00.0000] <annevk>
you got 10GB now

[14:45:01.0000] <annevk>
instead of 100MB

[14:45:02.0000] <jgraham_>
OK, so that rather makes my attemp to estimate how much is needed pointless :)

[14:45:03.0000] <jgraham_>
Thanks :)

[14:46:00.0000] <annevk>
the plan comes with 290GB and the UI sort of encourages to put limits on users so I give everyone 100MB by default

[14:47:00.0000] <annevk>
assuming that scripts + html pages + the occasional image doesn't go over that, but it's a pretty arbitrary limit

[14:48:00.0000] <hsivonen>
hmm. would be interesting to build an encrypted Dreamhost filesystem with FUSE

[14:48:01.0000] <jgraham_>
Yeah, having limits makes sense

[14:48:02.0000] <hsivonen>
and use it as a TimeMachine backing store...

[14:49:00.0000] <gsnedders>
I mean, you never know what I might use it for :P

[14:49:01.0000] <gsnedders>
/me needs to write more tests

[14:49:02.0000] <gsnedders>
/me has too much to-do

[14:53:00.0000] <jgraham_>
hsivonen: So I was thinking about the whole table @headers thing again and I wondered if it should be made conforming but the spec should say that authors SHOULD NOT use @headers unless no other mechanism could express the correct relationships

[14:53:01.0000] <jgraham_>
However I thought you might not like the machine-checkable-but-hard-o-implement criteria

[14:53:02.0000] <jgraham_>
s/-o /-to-/

[14:54:00.0000] <gsnedders>
jgraham: someone might see one way of marking something up, but another person might not

[14:54:01.0000] <webben>
Given the complexity of some of the proposed header/cell association mechanisms, I should think that imposes a substantial cognitive load on authors. 

[14:54:02.0000] <jgraham_>
The theory is that the only people who care about @headers also care about accessibility and so are more likely than average to actualy follow the spec on this point

[14:54:03.0000] <gsnedders>
that pushes it a bit too far

[14:54:04.0000] <webben>
But I can see you could machine-check it.

[14:55:00.0000] <webben>
OTOH it's unclear what the advantage of burdening authors with the burden of checking it would be.

[14:56:00.0000] <webben>
saving bytes?

[14:56:01.0000] <jgraham_>
gsnedders: I don't think that's actually likely to be a problem in practice

[14:57:00.0000] <jgraham_>
webben: The problem is that people get @headers wrong so often that it can actually be harmful to respect it

[14:57:01.0000] <jgraham_>
OTOH there are a few legitimate cases where no other mechanism so far proposed can work

[14:58:00.0000] <webben>
The problem there is incorrect heading information, not how the information is expressed.

[14:59:00.0000] <webben>
If people get headers wrong, and you run a tool which checks to see if the headers info is superflous, then the tool's result will be wrong too.

[14:59:01.0000] <jgraham_>
The problem is @headers makes it so easy to get the information wrong that _in practice_ it can be worse than doing nothing

[14:59:02.0000] <webben>
So the only sort of tool that helps is one that shows you the associations and asks if they're right.

[15:00:00.0000] <jgraham_>
(typical mistakes include mistyping the attribute name, mistyping the idrefs, putting an idref to an element not in the table)

[15:00:01.0000] <webben>
all three sound like situations where a UA should act as if the attribute isn't there

[15:01:00.0000] <webben>
and therefore the fact that the attribute is wrong shouldn't make it worse than if it wasn't there

[15:02:00.0000] <jgraham_>
webben: it does make it worse than using e.g. scope attributes to express the same information though

[15:03:00.0000] <jgraham_>
and in some cases - e.g. if the author just gets one idref wrong, it houldn't ignore the whole value, presumably

[15:03:01.0000] <webben>
well, the only reason not to use scope is because either a) you're generating with a tool that generates table markup and just uses header/id (removing the human error element) or b) consuming agents don't support scope.

[15:03:02.0000] <webben>
artificially limiting authors to scope doesn't help in either situation

[15:03:03.0000] <jgraham_>
webben: Let's ignore the limitations of UAs for the moment

[15:04:00.0000] <jgraham_>
(arguably that would be a good reason to violate a SHOULD NOT, but not enough to violate the implicit MUST NOT of removing the attribute from the spec)

[15:05:00.0000] <jgraham_>
s/that/UA limitations/

[15:05:01.0000] <webben>
I think making good practice (making websites that actually work) dependent on violating SHOULD NOTs is counter-intuitive.

[15:06:00.0000] <webben>
(although I can see your point given the technical definition of SHOULD NOT)

[15:07:00.0000] <jgraham_>
The solution to that problem is to make the UA vendors implement non-@headers algorithms in their product.

[15:07:01.0000] <webben>
Yeah, and the solution to IE not supporting XHTML is to "make" MS implement XHTML.

[15:07:02.0000] <jgraham_>
Which they really ought to do anyway since so few sites use @headers

[15:07:03.0000] <webben>
few sites use scope either

[15:08:00.0000] <jgraham_>
Hey I didn't say it would be easy :)

[15:08:01.0000] <webben>
I don't think the solution to making websites that actually work is to foist problems onto client software vendors and end-users.

[15:08:02.0000] <jgraham_>
re:scope indeed, which is why I'm trying to make it needed in as few cases as possible

[15:10:00.0000] <othermaciej>
webben: actually, putting a burden on client software vendors is probably better than putting it on web developers, if getting it right is possible either way and if it matters to the end user

[15:10:01.0000] <othermaciej>
because there's a lot fewer user agents than web sites

[15:10:02.0000] <othermaciej>
so that's fewer places to get it wrong

[15:10:03.0000] <jgraham_>
The history of the web suggests that trying to adjust the behavior of the inhomogeneous mass of authors is ineffective way to solve problems

[15:11:00.0000] <webben>
I wouldn't say the history of web developers desiring UAs to implement specs is a particularly happy history either.

[15:11:01.0000] <othermaciej>
do you mean that we developers don't desire that, or that UAs don't implement the specs that web developers want?

[15:11:02.0000] <webben>
besides we're not talking here about giving authors licence, but about restricting them with a SHOULD NOT.

[15:11:03.0000] <jgraham_>
I would rather try and change a handful of UAs than a large number of authors

[15:12:00.0000] <webben>
(or appearing to restrict them, and thus confusing the issue)

[15:12:01.0000] <webben>
meh, changing web output is cheap compared to changing expensive software installs

[15:13:00.0000] <othermaciej>
per unit, yes

[15:13:01.0000] <othermaciej>
but web output is much much larger in total

[15:13:02.0000] <webben>
(witness how we bend over backwards to serve IE6 ... and upgrading from IE6 is nearly free)

[15:13:03.0000] <jgraham_>
webben: Restricting people is often good overall

[15:13:04.0000] <webben>
(where upgrading means moving to IE7 or any other decent browser)

[15:13:05.0000] <jgraham_>
e.g. the more limited UI in Firefox made it a success over the Mozilla suite

[15:14:00.0000] <othermaciej>
IE seems to be the only browser that doesn't get upgrade traction

[15:14:01.0000] <jgraham_>
(often web output is backed by expensive software installs)

[15:14:02.0000] <othermaciej>
(not sure why - bug lockin? people who never upgrade?)

[15:15:00.0000] <webben>
I'm not sure how far you can push an analogy between user interfaces (which are designed to present functionality to the user) and markup languages (that are designed, basically, to trigger functionality in client software0

[15:15:01.0000] <othermaciej>
languages are a user interface for developers

[15:15:02.0000] <jgraham_>
they both involve human interaction at some stage in the process

[15:15:03.0000] <webben>
yes, but UIs are intrinsically much freer

[15:16:00.0000] <webben>
because the functionality on the backend can be guaranteed by the same developers

[15:16:01.0000] <webben>
(if the language was being designed from scratch, this would be a void argument of course)

[15:17:00.0000] <jgraham_>
An obvious example of a restriction in a language for increased usability is python+whitespace

[15:17:01.0000] <jgraham_>
(irrespective of whether you think that is a design success, that's why it works the way it does)

[15:17:02.0000] <webben>
heh, well that's as controversial as restricting HTML5 to XHTML-esque markup styles.

[15:18:00.0000] <webben>
I'm not saying restrictions in languages are bad; I'm just saying that the need to make this language actually deliver imposes constraints on what restrictions are realistic.

[15:18:01.0000] <othermaciej>
Python in general tries to avoid having More Than One Way To Do It

[15:19:00.0000] <jgraham_>
Although a more accurate statement would be "more than one unnecessarily redundant way to do it"

[15:20:00.0000] <webben>
(It's also notable that since web consuming software is tolerant, the basic reaction to restrictions in this language is to ignore them. People pay attention to white space in Python cos not doing so breaks their programs.)

[15:22:00.0000] <jgraham_>
webben: To get back to the point, we have a feature with a small set of use cases but which is known in practice to cause significant problems for authors (and hence end users). We can either a) ban it entirely b) discourage it except when absolutely necessary or c) ignore the problems. I think b) makes the most sense

[15:24:00.0000] <webben>
it's necessary wherever scope would be necessary

[15:24:01.0000] <webben>
assuming one wants it to work

[15:24:02.0000] <webben>
(it's theoretically necessary only in a smaller set of cases I agree.)

[15:25:00.0000] <webben>
I suppose what you could have would be a WCAG1-style discouragement, "Once user agents support, don't use unless bla bla bla"

[15:26:00.0000] <webben>
but even then one's basically second-guessing what level of backwards-compatibility developers want to provide.

[15:28:00.0000] <webben>
Maybe one would be best served by actually explaining the problems and letting devs make up their own minds.

[15:30:00.0000] <jgraham_>
I don' think the spec is the right place to put UA compatibly information, but it could certainly go in the authoring guide

[15:30:01.0000] <webben>
Oh, I didn't mean say UA X supports this, UA X does not. More just explaining the general problem that some UAs do, and some UAs don't.

[15:31:00.0000] <webben>
(but all UAs should)

[15:36:00.0000] <jgraham_>
I still think the authoring guide would be better


2008-01-28
[20:49:00.0000] <Hixie>
i guess the fact that e.g. the http group are jumping up and down and talking about html5, should be taken as a good sign

[21:26:00.0000] <Hixie>
wtf is UTF-4

[21:26:01.0000] <takkaria>
hah

[21:26:02.0000] <takkaria>
an academic exercise in the least efficient Unicode encoding

[21:27:00.0000] <Hixie>
is there a page about it somewhere?

[21:27:01.0000] <Hixie>
good lord, people actually want to register about:blank

[21:27:02.0000] <Hixie>
what a waste of time that would be

[21:28:00.0000] <Hixie>
/me fears the day that tools like "curl" support about:blank

[21:28:01.0000] <Hixie>
about: should _so_ just be left up to the browsers...

[21:29:00.0000] <takkaria>
I can only find one mention of utf-4 on the web and that looks like the same typo in libxml

[21:32:00.0000] <Hixie>
yeah i couldn't find anything either

[21:32:01.0000] <Hixie>
wouldn't have asked here if i could :-)

[21:44:00.0000] <takkaria>
Hixie: where did you find mention of utf-4?

[21:49:00.0000] <Dashiva>
takkaria: I suspect even utf-4 would be more efficient than utf-32 on boring english text

[21:49:01.0000] <takkaria>
/me chuckles

[21:50:00.0000] <takkaria>
it's quite true, that

[23:58:00.0000] <hsivonen>
Hmm. Nokia buys Trolltech. I didn't see that one coming.

[00:01:00.0000] <maikmerten>
d'oh

[00:02:00.0000] <maikmerten>
well, I guess it makes some sense

[00:03:00.0000] <maikmerten>
albeit I was under the impression that e.g. Maemo was Gtk based?

[00:04:00.0000] <maikmerten>
notice how Nokia apparently is *not* partner of Google's Android

[00:05:00.0000] <maikmerten>
so I can only guess they're trying to grab whatever mobility mindshare is available for money to develop their own platform

[00:09:00.0000] <hsivonen>
for years Nokia leadership has talked about "level playing field" as a nice way of saying "we won't use Qt". I guess this levels the playing field to Nokia's taste...

[00:11:00.0000] <hsivonen>
so far Nokia has liked LGPL but not the GPL

[00:12:00.0000] <hsivonen>
It'll be interesting to see if the Trolltech business model stays 

[00:22:00.0000] <MikeSmith>
hsivonen - wow

[00:25:00.0000] <virtuelv>
they're set to pay around USD 155M

[00:25:01.0000] <virtuelv>
http://www.newsweb.no/newsweb/index.jsp?messageId=201563&lang=

[00:25:02.0000] <maikmerten>
is Gtk really causing them that much damage? ;-)

[00:27:00.0000] <hsivonen>
the press release talk about accelerating strategy and improving the competitiveness of S60 and *S40*

[00:28:00.0000] <hsivonen>
Qtopia runs without X

[00:28:01.0000] <hsivonen>
but Maemo requires X and all

[00:28:02.0000] <maikmerten>
yeah, Maemo has a rather deep software stack

[00:28:03.0000] <maikmerten>
which of course is what makes so a tempting hacking device

[00:29:00.0000] <maikmerten>
but for real phones something "thinner" may just make more sense

[00:58:00.0000] <MikeSmith>
hsivonen - "Nokia will have a live webcast today at 11.15am Helsinki time (+1 CET), which can be followed from the Nokia website at http://www.nokia.com/press. You may also post your questions while listening to the webcast."

[00:58:01.0000] <MikeSmith>
that's in 10 minutes, right?

[01:01:00.0000] <takkaria>
MikeSmith: now only 8

[01:02:00.0000] <MikeSmith>
damn, seems it requires Windows Media Player support

[01:05:00.0000] <takkaria>
I can pick up audio using VLC

[01:06:00.0000] <Philip`>
Tried mplayer?

[01:07:00.0000] <takkaria>
no luck there either

[01:09:00.0000] <maikmerten>
I find it somewhat amusing that Nokia isn't streaming some kind MPEG

[01:10:00.0000] <Philip`>
I thought they would use Theora

[01:11:00.0000] <maikmerten>
haha, yeah, that would put a big smile onto my face

[01:11:01.0000] <takkaria>
apparently this is actually just an audiocast

[01:11:02.0000] <maikmerten>
but given the position paper Nokia issued to the video workshop... nope, won't happen for now

[01:11:03.0000] <maikmerten>
bah, then I wonder why they're using Windows Media at all

[01:12:00.0000] <maikmerten>
(one could argue that WMV + WMA would be reaching more people than every other video/audio solution)

[01:12:01.0000] <maikmerten>
(for audio this clearly isn't as... clear)

[01:13:00.0000] <MikeSmith>
(Nokia webcast starting now)

[01:14:00.0000] <takkaria>
maikmerten: how about mp3 streaming? :)

[01:15:00.0000] <maikmerten>
yeah, that would have been the obvious solution

[01:15:01.0000] <maikmerten>
but obviously I won't recommend any patented format, bias ahoi!

[01:16:00.0000] <takkaria>
not patented for too much longer

[01:16:01.0000] <maikmerten>
(that is: any patented format without non-free patent licensing)

[01:16:02.0000] <takkaria>
MikeSmith: tell us if any interesting comes up, please

[01:16:03.0000] <maikmerten>
yeah, I think MP3 may expire like in 2011

[01:17:00.0000] <MikeSmith>
takkaria - so far, it's mostly just the same information from the press release

[01:18:00.0000] <MikeSmith>
talking now is VP of devices for Nokia, Kai Öistämö

[01:19:00.0000] <MikeSmith>
I think he borrowed these slides from the marketing dept.

[01:20:00.0000] <MikeSmith>
"...enable Web 2.0 on the mobile"

[01:22:00.0000] <MikeSmith>
mentions PC as a platform, along with mobile, as part of their "software strategy"

[01:23:00.0000] <hdh>
phonon in 4.4 on gnu/linux links with xine or gstreamer, and get theora for free

[01:24:00.0000] <MikeSmith>
"key driver is *not* to develop a Linux-based mobile device"

[01:27:00.0000] <MikeSmith>
"Qt is the only set of libraries available on all desktop platforms and mobile devices"

[01:29:00.0000] <MikeSmith>
"all major software platforms in the world"

[01:30:00.0000] <MikeSmith>
"will greatly improve the competiveness of Series 40 and Series 60"

[01:30:01.0000] <MikeSmith>
"continue to work closely with OSS community, especially KDE"

[01:30:02.0000] <MikeSmith>
now taking questions

[01:30:03.0000] <MikeSmith>
Mark [somebody] talking

[01:31:00.0000] <MikeSmith>
Eirik Chambe-Eng on also 

[01:31:01.0000] <MikeSmith>
and Lee Williams from Nokia R&D

[01:32:00.0000] <MikeSmith>
"will continue to work on S30, S40, S60, as well as Maemo"

[01:33:00.0000] <MikeSmith>
will development of X11 of Qt continue? Eirik: Definitely, of course

[01:34:00.0000] <takkaria>
hmm, interesting

[01:35:00.0000] <MikeSmith>
how does Qt tie in with existing platforms like Maemo? when do we get to develop Qt apps for Nokia devices?

[01:35:01.0000] <MikeSmith>
Lee: Not prepared to talk about that now... stay tuned

[01:36:00.0000] <MikeSmith>
Does this help to decrease porting costs for mobile gaming segment?

[01:37:00.0000] <MikeSmith>
Kai: That is a valid question... whole idea of this is that is reducing development costs for [third-party] application developers.

[01:37:01.0000] <MikeSmith>
.. but not willing to talk about specifics now

[01:38:00.0000] <MikeSmith>
Q: Will support of Windows PC continue? Kai: Yes, important

[01:39:00.0000] <MikeSmith>
Q: When is official public offer?

[01:39:01.0000] <MikeSmith>
will complete in 2nd quarter of this year?

[01:39:02.0000] <MikeSmith>
Q: Will any trolls be fired?

[01:40:00.0000] <MikeSmith>
Kai: one of the key reasons for this really is the talent... makes me laugh.. at the moment we have not plans to reduce a workforce we are just now acquiring.. of course not

[01:40:01.0000] <MikeSmith>
Eirik: Everyone at Trolltech is gung-ho about this

[01:41:00.0000] <MikeSmith>
... realization of Qt everywhere

[01:42:00.0000] <MikeSmith>
Kai's closing comments: Helping us and third-party developers more efficiently develop [across platforms]

[01:42:01.0000] <MikeSmith>
[end of webcast]

[01:42:02.0000] <MikeSmith>
hmm, not too much meat there

[01:42:03.0000] <Chani>
aw, I missed it?

[01:43:00.0000] <hdh>
thanks MikeSmith

[01:44:00.0000] <MikeSmith>
Chani - didn't miss so much.. most of what they said was in their press release already

[01:44:01.0000] <blauzahl>
MikeSmith: nice work!

[01:44:02.0000] <takkaria>
MikeSmith: ta

[01:44:03.0000] <MikeSmith>
log is here too:

[01:45:00.0000] <MikeSmith>
http://krijnhoetmer.nl/irc-logs/whatwg/20080128

[01:45:01.0000] <blauzahl>
:)

[01:45:02.0000] <Chani>
cool

[02:29:00.0000] <hdh>
audio recording in http://www.libqxt.org/stuff/ but in some weird IVR format

[02:41:00.0000] <Philip`>
Not Vorbis? :-(

[02:47:00.0000] <hdh>
the recorder (zbenjamin in #qt) doesn't know how to convert it, and uses real player

[03:13:00.0000] <annevk>
if registering about is what it takes...

[03:13:01.0000] <annevk>
re: Hixie earlier

[03:16:00.0000] <annevk>
though curl about:blank would be a bit weird

[03:16:01.0000] <annevk>
much like curl data:... or curl javascript:...

[03:17:00.0000] <Lachy>
or curl mailto:  But I wouldn't expect curl to support non-network-retrievable URIs.

[03:18:00.0000] <Lachy>
although curl data:... could be useful if you just want to quickly convert a data URI into a file.

[03:19:00.0000] <annevk>
also, content relies on about:blank, clients support it as URI, makes sense if it was registered leaving the "blank" space to HTML5 and the rest to client software

[04:16:00.0000] <Philip`>
/me doesn't like the cssutils parser since it seems to be quadratically slow

[04:22:00.0000] <annevk>
hsivonen, on about.validator.nu "identd" -> "identity"?

[04:23:00.0000] <annevk>
hsivonen, also, your copyright only extends until 2007?

[04:43:00.0000] <MikeSmith>
new mobile browser announced today

[04:43:01.0000] <MikeSmith>
http://www.skyfire.com/product/

[04:44:00.0000] <MikeSmith>
link to a video there

[04:46:00.0000] <Philip`>
http://66.102.9.104/search?q=cache:DfrjbPJEZIsJ:www.dvclabs.com/mozilla.html - sounds like they're building it on Mozilla

[04:47:00.0000] <Camaban>
er, how many mobile phones have a stylus?

[04:47:01.0000] <MikeSmith>
heh

[04:47:02.0000] <MikeSmith>
Camaban - yeah, I had same thought

[04:48:00.0000] <MikeSmith>
It also doesn't seem to have any sort of adaptive/intelligent zoom

[04:48:01.0000] <MikeSmith>
i.e., on zoom, it doesn't wrap text to the width of the screen

[04:48:02.0000] <Camaban>
hmmm, and playing youtube videos?

[04:49:00.0000] <zcorpan>
MikeSmith: then it wouldn't be exactly as on your PC ;)

[04:50:00.0000] <zcorpan>
i wonder if it supports xhtml

[04:53:00.0000] <MikeSmith>
zcorpan - yeah, I guess they're taking the "exactly as on your PC" part literally

[04:53:01.0000] <Camaban>
"For the first time, you can watch any video, listen to any music,"

[04:53:02.0000] <Camaban>
/me is dubious

[04:54:00.0000] <MikeSmith>
Philip` - that seems to suggest it's based on Minimo (now end-of-lifed)

[04:54:01.0000] <MikeSmith>
or I guess they may have done something themselves with Mozilla embedded

[04:57:00.0000] <Camaban>
"The Skyfire private beta will initially support Windows Mobile phones in the U.S. In the coming months, we will introduce a version for Symbian phones."

[04:57:01.0000] <Camaban>
not exactly supporting all mobile phones....

[04:58:00.0000] <Camaban>
/me pats Opera Mini on the head

[04:59:00.0000] <Philip`>
Opera Mini doesn't work on my phone :-(

[04:59:01.0000] <MikeSmith>
Philip` - which model is your phone?

[04:59:02.0000] <Philip`>
(or at least I couldn't get it to actually connect to the internet, which made it a bit useless)

[04:59:03.0000] <Camaban>
heh, I knew if I mentioned someone would point out an exception :P

[05:00:00.0000] <Philip`>
It's apparently a T630

[05:00:01.0000] <Camaban>
still, much broader support than "Windows Mobile" phones...

[05:01:00.0000] <Philip`>
Hmm, Opera Mini 3 claims it should work there, so maybe I just need to set up the internet access properly

[05:03:00.0000] <MikeSmith>
Philip` - there's a help page at the Opera site for resolving connection problems

[05:03:01.0000] <MikeSmith>
http://www.operamini.com/help/connect/

[05:03:02.0000] <MikeSmith>
this page has some info too: http://wapreview.com/blog/?p=466

[05:06:00.0000] <Philip`>
I think I just don't care enough about mobile web access to bother with anything like that :-)

[05:07:00.0000] <hsivonen>
MikeSmith: thanks for relaying the Nokia/Trolltech info

[05:08:00.0000] <MikeSmith>
yup

[05:11:00.0000] <Philip`>
/me avoids most needs for mobile devices by simply not moving

[05:18:00.0000] <MikeSmith>
Philip` - I guess I'd see a lot less need for mobile devices if I didn't have to move around so much. 90-minute one-way commute to office by bus+(crowded)train+walk kind of makes it seem more useful

[05:18:01.0000] <MikeSmith>
plus not having a car

[05:19:00.0000] <Camaban>
/me finds it useful for the pub and wikipedia access :)

[05:20:00.0000] <hsivonen>
annevk: thanks, but neither identd nor 2007 is a typo

[05:20:01.0000] <hsivonen>
http://en.wikipedia.org/wiki/Ident

[05:28:00.0000] <annevk>
oh, ok

[05:28:01.0000] <annevk>
why don't you retain copyright?

[05:31:00.0000] <hendry>
annevk: i have question regarding http://www.w3.org/TR/access-control/#access-item

[05:32:00.0000] <annevk>
please use http://dev.w3.org/2006/waf/access-control/ instead

[05:32:01.0000] <annevk>
but go ahead anyway :)

[05:32:02.0000] <hendry>
ok, i didn't read "The following access items would make the user agent deny access to the resource:" :)

[05:32:03.0000] <annevk>
ok

[05:33:00.0000] <hendry>
so myspace.com/annevk type access items won't be allowed

[05:33:01.0000] <annevk>
that's actually slightly clearer in the revised version based on similar feedback :)

[05:33:02.0000] <annevk>
correct, it doesn't help

[05:33:03.0000] <hendry>
annevk: ok, i'm fine with that :)

[05:34:00.0000] <annevk>
myspace.com/evil could inject an <iframe> that loads /annevk and then execute some script that causes the load from /annevk ...

[05:34:01.0000] <annevk>
so making it origin based like the rest of the Web is better

[05:34:02.0000] <hendry>
agreed

[06:48:00.0000] <zcorpan>
http://simon.html5.org/specs/xml-stylesheet5 now features BNF

[06:48:01.0000] <zcorpan>
/me hopes it is correct

[06:51:00.0000] <gsnedders>
/me prefers ABNF

[06:52:00.0000] <zcorpan>
i just tried to mimic the xml-stylesheet 1.0 and xml 1.0 specs :)

[06:52:01.0000] <gsnedders>
ah, that isn't actual BNF (BNF has no reptition form for one)

[06:52:02.0000] <gsnedders>
and it's not EBNF's reptition form

[06:53:00.0000] <gsnedders>
http://www.w3.org/TR/REC-xml/#sec-notation

[06:53:01.0000] <hsivonen>
I submitted a presentation proposal to XTech after all

[06:54:00.0000] <zcorpan>
oh. EBNF is not what i want

[06:54:01.0000] <zcorpan>
i don't want [^...] to be Char

[06:55:00.0000] <zcorpan>
or i guess i can use my own Char and say Char - ( ... | ... )

[07:38:00.0000] <annevk>
gsnedders, ah, you know ABNF?

[07:38:01.0000] <gsnedders>
annevk: ya

[07:38:02.0000] <annevk>
do you have spare time?

[07:39:00.0000] <gsnedders>
annevk: well, you're the one who advised me to spend more time on revising, but seeming I'm not doing so, sure :)

[07:39:01.0000] <annevk>
I need the productions in section 4 of http://dev.w3.org/2006/waf/access-control/ converted to ABNF preferably

[07:39:02.0000] <annevk>
this should be pretty trivial as the amount of productions is small

[07:39:03.0000] <gsnedders>
there's not that much there, so sure

[07:40:00.0000] <annevk>
feel free to e-mail public-appformats⊙wo, me, or paste it in here :)

[07:40:01.0000] <annevk>
as a "bonus" your name will appear at the bottom of the spec

[07:42:00.0000] <gsnedders>
oh wows!

[07:42:01.0000] <gsnedders>
I must do it now!

[08:42:00.0000] <Philip`>
putImageData isn't going to work when we move to hexagonal pixels

[08:44:00.0000] <Dashiva>
What about two-layer displays?

[08:48:00.0000] <kig>
<script type="text/c">

[08:51:00.0000] <kig>
putImageData with lazy infinite lists would be a bit funny

[08:52:00.0000] <annevk>
from Gecko's public bug database it seems that removing almost standards mode would make quite a few people happy

[08:52:01.0000] <annevk>
(removing it by introducing the same quirk in standards mode)

[08:52:02.0000] <hsivonen>
annevk: URL?

[08:53:00.0000] <annevk>
see recent duplicates on https://bugzilla.mozilla.org/show_bug.cgi?id=22274

[08:53:01.0000] <hsivonen>
ah. bug 22274

[09:00:00.0000] <annevk>
with SVG inside table cells for instance

[09:00:01.0000] <annevk>
maybe i should just raise it on www-style and see where it goes

[09:23:00.0000] <webben>
Wouldn't that just result in lots of bug reports of people with standards mode pages that are broken.

[09:25:00.0000] <Dashiva>
How would it ever be a feature, though?

[09:26:00.0000] <annevk>
webben, I don't think it will have averse effects

[09:27:00.0000] <hsivonen>
webben: do pages depend on the standards mode behavior on this point?

[09:27:01.0000] <webben>
why wouldn't they?

[09:27:02.0000] <hsivonen>
webben: IE7 has different behavior

[09:27:03.0000] <webben>
if pages depend on the non-standards mode behaviour, then wouldn't the inverse be true too

[09:28:00.0000] <Dashiva>
No, only if there is an inverse use case

[09:28:01.0000] <webben>
IE7 having different behavior might just result in hacks/conditional comments

[09:28:02.0000] <Dashiva>
Take our friend the global RegExp object for literals in es3, a prime example :)

[09:29:00.0000] <annevk>
is the inverse even noticable?

[09:30:00.0000] <annevk>
webben, for this case that seems highly unlikely

[09:45:00.0000] <zcorpan_>
"First, XHTML doesn't 

[09:45:01.0000] <zcorpan_>
really envision the idea of adding attributes to a document after it is 

[09:45:02.0000] <zcorpan_>
loaded (after DOMready or the LOAD event fires). " -- http://lists.w3.org/Archives/Public/public-xhtml2/2008Jan/0030.html

[09:57:00.0000] <annevk>
earth >< public-xhtml2

[09:57:01.0000] <gsnedders>
soil!

[09:58:00.0000] <Philip`>
Makes sense for something that is document markup, rather than interactive applications shoved into what used to be document markup

[09:58:01.0000] <SadEagle>
DOM Core >< public-xhtml2

[09:58:02.0000] <SadEagle>
Philip`: then what are the events for?

[09:58:03.0000] <annevk>
Philip`, it somehow seems to conflict with XForms Actions

[09:58:04.0000] <Philip`>
Um... Maybe they're for backward compatibility

[09:58:05.0000] <annevk>
but perhaps that's less expressive than I thought

[09:59:00.0000] <zcorpan_>
Philip`: but role is about interactive applications, at least when combined with aria

[10:02:00.0000] <annevk>
i'd just reply that such a response doesn't work

[10:14:00.0000] <alp>
kig: i linked to CAKE in my blog post about canvas GL acceleration, http://www.atoker.com/blog/2008/01/28/accelerating-webkit-with-openvg/

[10:16:00.0000] <kig>
alp: nice!

[10:23:00.0000] <kig>
cairo openvg backend sounds awesome too

[10:29:00.0000] <zcorpan_>
/me replied

[10:59:00.0000] <hsivonen>
oh noes. they have an RFC 4646bis in the works already

[10:59:01.0000] <hsivonen>
http://www1.ietf.org/internet-drafts/draft-ietf-ltru-4646bis-11.txt

[10:59:02.0000] <hsivonen>
can someone summarize what the changes are?

[11:02:00.0000] <gsnedders>
hsivonen: um, isn;t section 8 a summary?

[11:07:00.0000] <hsivonen>
gsnedders: thanks. 

[11:10:00.0000] <hsivonen>
my first reading suggests that I don't need to change my implementation

[11:53:00.0000] <Hixie>
zcorpan, annevk: the tests suggestions you e-mailed me unfortunately aren't JS tests, so they are hard to add to acid3

[11:55:00.0000] <annevk>
<iframe> that reports back just like you have those other notification tests?

[11:56:00.0000] <Hixie>
i don't want to add more content to the <body>

[11:57:00.0000] <Hixie>
every time i add more content to <body>, i break half a dozen tests in subtle ways that i don't detect for a week or more

[11:57:01.0000] <Hixie>
this is why the svg tests are proving to be a bitch

[11:57:02.0000] <Hixie>
since people don't want to use data:...

[11:57:03.0000] <Hixie>
which i still think is dumb but i understand is hard and not in a spec...

[12:09:00.0000] <hsivonen>
Michaeljohn Clement++ on -comments

[12:11:00.0000] <annevk>
Hixie, better spec it then for Acid5

[12:11:01.0000] <Hixie>
yeah

[12:12:00.0000] <annevk>
i think you can test WRONG_DOCUMENT_ERR btw

[12:13:00.0000] <annevk>
since Firefox fixed it

[12:13:01.0000] <annevk>
although it would only expose bugs in Opera + WebKit + maybe IE

[12:13:02.0000] <SadEagle>
annevk: wow? Firefox actually does that now?

[12:14:00.0000] <annevk>
https://bugzilla.mozilla.org/show_bug.cgi?id=47903 suggests that

[12:15:00.0000] <SadEagle>
/me ponders closing the wishlist for the auto-adopt quirk, then :-)

[12:17:00.0000] <Hixie>
annevk: ?

[12:17:01.0000] <Hixie>
oh you mean check that you must cal import?

[12:17:02.0000] <Hixie>
i'd rather change the spec

[12:17:03.0000] <annevk>
yeah

[12:18:00.0000] <annevk>
hmm, DOM specs

[12:20:00.0000] <annevk>
that works for me

[12:20:01.0000] <annevk>
you can add CSS parsing tests

[12:20:02.0000] <annevk>
such as "@media all { x } element { background:lime }"

[12:23:00.0000] <Hixie>
i have a bunch of @media tests already

[12:23:01.0000] <Hixie>
i really just want to focus on dom and js

[12:43:00.0000] <Hixie>
ok i need just a few more tests

[13:33:00.0000] <aseem>
hi all

[13:33:01.0000] <aseem>
I had a ques about html sanitization using html5lib

[13:36:00.0000] <aseem>
anybody??

[13:37:00.0000] <hober>
What's your question?

[13:37:01.0000] <aseem>
I wanted to be able to strip out tags instead of simply escaping them...

[13:37:02.0000] <aseem>
I could use a treewalker to do that too, but was wondering if I could use the build in sanitizer to so

[13:40:00.0000] <aseem>
I could also modify the code to do what I want, but that would be a tad bit unmaintainable in the long run

[13:45:00.0000] <annevk>
TAG discussing <meta> madness

[13:45:01.0000] <annevk>
could be interesting

[13:48:00.0000] <jgraham_>
aseem: This is a pretty common feature request (well two people have asked), so a patch to do it would be welcome

[13:49:00.0000] <aseem>
ok... I will give it a go and if it works fine, submit a patch..

[13:49:01.0000] <aseem>
thx

[13:55:00.0000] <Hixie>
i need to come up with one more thing to test

[13:56:00.0000] <Hixie>
i have room for up to three more things if anyone comes up with anything

[14:13:00.0000] <jgraham_>
/me dons his table headers hard-hat

[15:10:00.0000] <jgraham_>
Apologies in advance btw

[15:27:00.0000] <annevk>
Hixie, loading Acid3 results in something weird

[15:33:00.0000] <annevk>
crap, about: is not interoperable

[15:34:00.0000] <SadEagle>
what about 'about:blank'?

[15:38:00.0000] <annevk>
hmm, seems to be some other problem


2008-01-29
[23:54:00.0000] <krijnh>
It's shitty connection day today, yay

[02:43:00.0000] <heycam>
Hixie, there seems to be an error in my submitted acid3 test (#69).  the last string literal in the function-serialised SVG fragment should have an 'A' at the end (i.e., it should be '\uD800\uDC85A' instead of '\uD800\uDC85'), since the rest of the test assumes that there is an A character after the astral character.

[03:42:00.0000] <virtuelv>
http://www.katemonkey.co.uk/article/48/x-ua-lemur-compatible

[04:00:00.0000] <hdh>
all of the Internets, lol

[04:49:00.0000] <Dashiva>
virtuelv: Does Opera plan to support lemurs in the next version?

[04:49:01.0000] <Dashiva>
It could boost the user base quite a lot!

[05:06:00.0000] <hsivonen>
Hixie: the W3C boilerplate for HTML5 uses <acronym> instead of <abbr>...

[05:07:00.0000] <annevk>
that's what the W3C boilerplate is like

[05:08:00.0000] <hsivonen>
Hixie: there are also two instances of "&lt/pre><", which wouldn't be OK in HTML5.

[05:09:00.0000] <hsivonen>
annevk: well, it seems that either the boilerplate needs to change or the spec needs to change. otherwise, the ingredients of a permathread are here.

[05:09:01.0000] <annevk>
cool

[05:09:02.0000] <annevk>
validator.nu can now validate the spec

[05:09:03.0000] <annevk>
pretty fast too

[05:10:00.0000] <hsivonen>
And I didn't even deploy Saxon, yet.

[05:10:01.0000] <hsivonen>
weird

[05:10:02.0000] <annevk>
maybe Hixie should hook it up to his publishing process

[05:10:03.0000] <annevk>
Saxon?

[05:10:04.0000] <hsivonen>
annevk: a faster XSLT back end

[05:12:00.0000] <nickshanks>
hat is it using at the moment?

[05:12:01.0000] <nickshanks>
+W

[05:12:02.0000] <hsivonen>
nickshanks: Xalan

[05:12:03.0000] <nickshanks>
i played around with XSLT engines a while ago, and found many bugs

[05:13:00.0000] <hsivonen>
nickshanks: what's your assesment of Xalan vs. Saxon?

[05:13:01.0000] <nickshanks>
Xalan wasn't one of them

[05:13:02.0000] <hsivonen>
nickshanks: was Saxon 9?

[05:15:00.0000] <nickshanks>
it was whatever was included with http://www.entropy.ch/software/macosx/#testxslt

[05:15:01.0000] <hsivonen>
nickshanks: that includes Xalan

[05:16:00.0000] <nickshanks>
hmm, so it does

[05:16:01.0000] <nickshanks>
okay

[05:16:02.0000] <nickshanks>
then it was unmemorable :)

[05:16:03.0000] <nickshanks>
Saxon was better, but libxslt was the best for my purposes

[05:16:04.0000] <nickshanks>
e.g. saxon introduced whitespace where it shouldn't have

[05:16:05.0000] <hsivonen>
I'm just about ready to push Saxon 9 out to Validator.nu

[05:17:00.0000] <hsivonen>
but now Xalan runs fast enough. when I decided to switch it was insanely slow

[05:17:01.0000] <nickshanks>
in XHTML, <q>Hello</q> should not become <q>\n\t\tHello\n\n</q>

[05:17:02.0000] <hsivonen>
really unbearably insanely slow

[05:17:03.0000] <hsivonen>
now I'm puzzled

[05:18:00.0000] <nickshanks>
one of them did that, libxslt didn't

[05:48:00.0000] <annevk>
hsivonen, maybe your webhost pushed out an update?

[05:50:00.0000] <hsivonen>
annevk: changed load on host running the virtual machine would be an explanation

[05:50:01.0000] <hsivonen>
annevk: on the VM, I control the software

[05:51:00.0000] <annevk>
are you still planning on taking out schematron?

[05:51:01.0000] <hsivonen>
not from the entire service, no

[05:51:02.0000] <hsivonen>
but from the HTML5 presets, yes

[05:52:00.0000] <hsivonen>
unfortunately, user-provided Schematron is a DoS attack vector

[05:52:01.0000] <hsivonen>
but it would be a shame to disable it because of that

[05:53:00.0000] <hsivonen>
I guess trusting the host for benchmarking is a bad idea

[05:53:01.0000] <hsivonen>
I'm going to run some more tests on my development machine

[05:54:00.0000] <hsivonen>
but my dev machine runs a different JIT back end on a different CPU arch...

[05:59:00.0000] <hsivonen>
hmm. I wonder if the W3C WD and the WHATWG draft from earlier this month have notably different document trees

[05:59:01.0000] <hsivonen>
I'm able to reproduce the insane slowness with my old copy of the spec

[06:02:00.0000] <hsivonen>
ok. Xalan is sometimes insanely slow

[06:02:01.0000] <hsivonen>
but Saxon isn't

[06:02:02.0000] <hsivonen>
so switching to Saxon was the right call

[06:02:03.0000] <hsivonen>
I just need to polish things a bit before I deploy

[07:12:00.0000] <hsivonen>
/me likes the new Firefox 3 Mac look

[07:13:00.0000] <MikeSmith>
hsivonen - might be useful to get feedback to Xalan project

[07:14:00.0000] <MikeSmith>
let them know it is proving to be not usable for your application

[07:14:01.0000] <MikeSmith>
maybe they can give you some tips on profiling you could do

[07:15:00.0000] <MikeSmith>
but I think it would be good for them to hear from you at least

[07:15:01.0000] <MikeSmith>
though seems like probably there's nothing they can/will do

[07:15:02.0000] <hdh>
/me prefers the huge Back button design

[07:19:00.0000] <Lachy>
hsivonen, has a Firefox 3 build for mac been released with the new look yet?

[07:21:00.0000] <Lachy>
or are there final mockups available somewhere?  Last I saw, there were just some outlines of the planned look

[07:21:01.0000] <hsivonen>
Lachy: nightlies

[07:21:02.0000] <hsivonen>
MikeSmith: my trial balloon about getting feedback to Xalan has gone nowhere

[07:22:00.0000] <hsivonen>
MikeSmith: specifically: http://issues.apache.org/jira/browse/XALANJ-2419

[07:22:01.0000] <MikeSmith>
hsivonen - disappointing but not surprised to hear it

[07:22:02.0000] <MikeSmith>
I guess they just don't care

[07:22:03.0000] <hdh>
http://tomayko.com/weblog/2008/01/28/firefox3-mac-theme-lands

[07:22:04.0000] <Lachy>
/me downloads the latest trunk

[07:23:00.0000] <MikeSmith>
thank god there's saxon at least

[07:23:01.0000] <MikeSmith>
or thank Michael Kay

[07:23:02.0000] <hsivonen>
MikeSmith: I'm also mighty disappointed that Saxon doesn't do column numbers, but I'm just biting the bullet and patching it (not nearly as simple as it first looked)

[07:24:00.0000] <MikeSmith>
I swear I thought there was some extension for Saxon for column numbers

[07:24:01.0000] <MikeSmith>
maybe worth asking Norm Walsh

[07:24:02.0000] <hsivonen>
MikeSmith: line numbers only

[07:24:03.0000] <MikeSmith>
damn

[07:24:04.0000] <MikeSmith>
that sucks

[07:24:05.0000] <hsivonen>
MikeSmith: I asked on xml-dev and Michael Kay replied already

[07:24:06.0000] <MikeSmith>
oh, OK

[07:24:07.0000] <MikeSmith>
no glimmer of hope there?

[07:24:08.0000] <Lachy>
ooh, it really does look nice :-)

[07:25:00.0000] <MikeSmith>
is FF3 UI diferrent from Minefield?

[07:25:01.0000] <hsivonen>
MikeSmith: it seems to be a design decision

[07:25:02.0000] <hsivonen>
I have a counter-use case, though

[07:26:00.0000] <MikeSmith>
unfortunate design decision, that

[07:26:01.0000] <MikeSmith>
counter-use case?

[07:26:02.0000] <hsivonen>
MikeSmith: a use case that works as a counter-example for the rationale for the design decision

[07:27:00.0000] <hsivonen>
anyway, my patch now works

[07:27:01.0000] <hsivonen>
gotta update the build system still

[07:54:00.0000] <virtuelv>
X-No-Thanks: http://www.b-list.org/weblog/2008/jan/28/ie8/

[09:03:00.0000] <csarven>
Authors: Foo, Bar, Baz --- how would you mark this up in HTML4 and in HTML5?

[09:04:00.0000] <Philip`>
<p>Authors: Foo, Bar, Baz</p>

[09:07:00.0000] <csarven>
Philip` in which?

[09:08:00.0000] <csarven>
there are other possibilities in HMTL4; <hX><ul> or <dl> ..

[09:10:00.0000] <csarven>
re: http://www.w3.org/html/wg/html5/#the-dl "The dl element introduces an unordered association list consisting of zero or more name-value groups (a description list)" is rather vague imo. that suggests that one can mark a list of news stories with its headline and a summary of it with <dl> -- not that there is an issue with that but its just uncommon. most would approach that with a heading and paragraph for instance

[09:11:00.0000] <csarven>
in an <ul> or <ol> <li>s

[09:12:00.0000] <Camaban>
probably not appropriate to sue a list for that

[09:15:00.0000] <hdh>
the W3C specs use <dl>

[09:15:01.0000] <Philip`>
csarven: In both

[09:16:00.0000] <Philip`>
(and I'd probably use <p><b>Authors:</b> Foo, Bar, Baz</p> if I wanted it to stand out more)

[09:17:00.0000] <csarven>
hdh are you referring to an example in HTML4 at W3C?

[09:17:01.0000] <Philip`>
(because I wouldn't think of a good reason to do anything more complex than that)

[09:18:00.0000] <hdh>
XML 1.0

[09:18:01.0000] <hdh>
the spec document, in its header

[09:19:00.0000] <csarven>
Philip` see the first example in http://www.w3.org/html/wg/html5/#the-dl

[10:07:00.0000] <Dashiva>
Hixie: Available?

[11:07:00.0000] <Hixie>
heycam: fixed

[11:10:00.0000] <Dashiva>
Hixie: In the reflecting content attributes section, most of the cases have a "if attribute is absent, return default value, or <type-appropriate null value> if none" clause. But the "DOMString that doesn't fall into any of the above" says nothing about this.

[11:11:00.0000] <Dashiva>
Do you recall off-hand if that's intended?

[11:20:00.0000] <Hixie>
no idea

[11:48:00.0000] <zcorpan_>
Hixie: acid3 now reveals a parsing bug in opera that prevents the test from running at all. could you test that in one of the js tests instead using doc.write() or so? (namely < /script> closing the script)

[11:48:01.0000] <Hixie>
that comment will disappear in due course

[11:48:02.0000] <Hixie>
i'm editing as we speak

[11:48:03.0000] <zcorpan_>
ok. food for something to test otherwise :)

[11:49:00.0000] <Hixie>
that bug is already tested elsewhere actually

[11:49:01.0000] <zcorpan_>
ah ok

[12:24:00.0000] <Hixie>
is there some thing wrong with acid3.acidtests.org/empty.xml ?

[12:24:01.0000] <Hixie>
as in, is my test invalid somehow?

[12:25:00.0000] <Hixie>
i don't understand why absolutely no browsers pass test 71

[12:26:00.0000] <jwalden>
/me looks

[12:27:00.0000] <SadEagle>
konqueror 4.0.1 does :-)

[12:27:01.0000] <Hixie>
ok good

[12:27:02.0000] <Hixie>
glad at least someone does

[12:28:00.0000] <SadEagle>
might be a bug :-)

[12:31:00.0000] <jwalden>
Firefox replaces it with 0xFFFD -- that's the replacement code point, right?

[12:31:01.0000] <gsnedders>
jwalden: yea

[12:31:02.0000] <jwalden>
/me has no idea what the spec says about doing that

[12:42:00.0000] <jwalden>
/me shoots the person who decided to use the word "entity" to mean two different things in the XML spec

[12:44:00.0000] <SadEagle>
/me hands jwalden more bullets

[12:44:01.0000] <jwalden>
heh, you reading too?

[12:46:00.0000] <SadEagle>
no, just bad memories :-)

[12:47:00.0000] <jwalden>
It is a fatal error if an XML entity is determined (via default, encoding declaration, or higher-level protocol) to be in a certain encoding but contains byte sequences that are not legal in that encoding. Specifically, it is a fatal error if an entity encoded in UTF-8 contains any irregular code unit sequences, as defined in Unicode 3.1 [Unicode3].

[12:47:01.0000] <jwalden>
I call bug

[12:48:00.0000] <jwalden>
that's weird that only konqueror would pass that

[12:48:01.0000] <SadEagle>
may be because we're the only ones using QXML? 

[12:49:00.0000] <SadEagle>
and I am not at all sure it passes for the right reason.

[12:49:01.0000] <SadEagle>
the test isn't exactly standalone

[12:50:00.0000] <SadEagle>
jwalden: heh, it fails when I open empty.xml

[12:50:01.0000] <SadEagle>
jwalden: I think it does the replacement char thing as well

[12:50:02.0000] <jwalden>
haha

[12:51:00.0000] <SadEagle>
jwalden: I bet the XML parser doesn't even -see- that character

[12:51:01.0000] <jwalden>
quite possibly not

[12:52:00.0000] <jwalden>
/me guesses in Moz the stream converter is being initialized with the replacement char for errors and not 0

[12:52:01.0000] <SadEagle>
OTOH, is the replacement character legal there?

[12:52:02.0000] <jwalden>
think so

[12:52:03.0000] <jwalden>
why wouldn't it be?

[12:53:00.0000] <SadEagle>
well, KWrite passes that test :p

[12:53:01.0000] <SadEagle>
FFFD is legal, yep.

[12:55:00.0000] <Hixie>
other than getComputedStyle() and img.height/width, is there any standards-compliant way to detect whether a style rule had an effect? i don't mind which style rule

[12:58:00.0000] <Dashiva>
I suppose that rules out all the width/height properties

[12:59:00.0000] <Hixie>
like offsetWidth? yeah.

[13:07:00.0000] <Dashiva>
Only thing that comes to mind is server hits for resources (e.g. background-image) but that's probably the inverse of what you want to test

[13:09:00.0000] <SadEagle>
an implementation could reasonably load them even if a rule isn't applied, no?

[13:09:01.0000] <jwalden>
or not reload if already cached

[13:09:02.0000] <jwalden>
which might matter for a public-facing test

[13:10:00.0000] <Dashiva>
Caching could be defeated, but always loading would be a problem, yes

[13:36:00.0000] <Hixie>
ok

[13:36:01.0000] <Hixie>
acid3 is basically done

[13:36:02.0000] <Hixie>
i have room for two more tests if anyone comes up with something good to test

[13:36:03.0000] <Hixie>
but other than that, it's done

[13:37:00.0000] <Hixie>
if anyone wanted to review the test, now's the time :-)

[13:37:01.0000] <nickshanks>
hixie: are you maintaining http://acid3.acidtests.org/

[13:37:02.0000] <Hixie>
yes

[13:37:03.0000] <SadEagle>
I could  whine about the nodeiterator tests some more :-)

[13:37:04.0000] <Hixie>
are they broken?

[13:37:05.0000] <Hixie>
i thought i fixed them

[13:40:00.0000] <SadEagle>
re-checking.. Last I looked, IMHO they relied on unspecified behavior

[13:45:00.0000] <SadEagle>
e.g. I don't believe that the state of the iterator is specified anywhere if the filter throws an exception

[13:46:00.0000] <hsivonen>
why does loading this page make Safari quit: http://my.opera.com/MacDev_ed/blog/2008/01/22/core-web

[13:46:01.0000] <gsnedders>
hsivonen: works fine in Saf3/Leopard

[13:47:00.0000] <hsivonen>
gsnedders: not for me in either Safari 3 or nightly on PPC Leopard

[13:47:01.0000] <hsivonen>
In NNW, I see the alternative content for SVG

[13:47:02.0000] <hsivonen>
works in Minefield

[13:48:00.0000] <Hixie>
SadEagle: what behaviour do you think the test requires that the spec doesn't?

[13:48:01.0000] <Hixie>
SadEagle: i thought i'd walked very carefully around the spec's holes

[13:49:00.0000] <SadEagle>
well, I'll start with this quote: "However, the exact timing of these filter calls may vary from one DOM implementation to another."

[13:51:00.0000] <Hixie>
does your implementation have different timing than expected by the test?

[13:51:01.0000] <SadEagle>
sort of --- with respect to how it updates the reference node.

[13:52:00.0000] <Hixie>
in which test?

[13:52:01.0000] <SadEagle>
1 & 2

[13:52:02.0000] <SadEagle>
/me thinks some more

[13:52:03.0000] <Hixie>
1 doesn't mutate the dom

[13:53:00.0000] <nickshanks>
Hixie: can you post percentages for the latest released versions of top browsers as of the release date of Acid3? i.e. "When first released, here's how some browsers score: ..."

[13:53:01.0000] <SadEagle>
yeah, but it throws an exception.

[13:53:02.0000] <Hixie>
and as far as i can tell, the mutations in 2 are such that it doesn't matter whether you do the filter calls "when a traversal operation is performed" or "when a NodeIterator's reference node is removed from the subtree being iterated over and it must select a new one", which are the only two allowed options.

[13:53:03.0000] <Hixie>
so?

[13:53:04.0000] <Hixie>
behaviour in the face of exceptions seems well-defined

[13:54:00.0000] <SadEagle>
does it? it only says to propagate them

[13:54:01.0000] <SadEagle>
I may be missing something, of course

[13:55:00.0000] <Hixie>
well what behaviour are you saying is compliant that would cause the test to fail?

[13:56:00.0000] <SadEagle>
updating the reference node position before calling the filter

[13:56:01.0000] <SadEagle>
that's in #1, that is

[13:57:00.0000] <Hixie>
/me looks

[13:57:01.0000] <Hixie>
where?

[13:58:00.0000] <SadEagle>
/ 2 in there would be enough

[13:58:01.0000] <SadEagle>
the line commented with //2, that is

[13:59:00.0000] <Hixie>
i don't understand how an implementation could ever _not_ get documentElement there

[13:59:01.0000] <Hixie>
the filter never gave you an answer for the first one, so how can you assume an answer?

[14:00:00.0000] <SadEagle>
I don't. You would move to the next position regardless of the answer.

[14:00:01.0000] <SadEagle>
The answer merely determines whether to return the node to the app.

[14:00:02.0000] <SadEagle>
I am pretty sure at least xerces behaves the same, I guess I should check.

[14:03:00.0000] <Hixie>
i can't see anything in the spec that justifies having the reference node be something that hasn't been returned except for two cases: one, before any node has been returned, and then it must be the root node, and two, after a mutation.

[14:04:00.0000] <SadEagle>
ok, that's a somewhat reasonable reading, though I am not sure that's what's intended.

[14:05:00.0000] <SadEagle>
/me double-checks stuff on test 2..

[14:08:00.0000] <SadEagle>
that one is indeed my bug.

[14:09:00.0000] <Hixie>
certainly i don't disagree that traversal/range is a badly written spec full of vagueries and holes

[14:10:00.0000] <SadEagle>
anyway, my tendency would be to read it as "if your filter isn't purely functional, good luck. You'll need it"

[14:10:01.0000] <Hixie>
oh i agree

[14:11:00.0000] <Hixie>
but i don't think that's a really good thing for a web spec to be saying, really :-)

[14:11:01.0000] <SadEagle>
And unfortunately, when it comes to vagueries, IMHO DOM2 HTML has it beat

[14:11:02.0000] <Hixie>
if it was server-side only, that'd be one thing

[14:11:03.0000] <Hixie>
yes

[14:11:04.0000] <Hixie>
the difference is

[14:11:05.0000] <Hixie>
dom2html is being replaced by dom5 html

[14:11:06.0000] <Hixie>
whereas nobody is working on dom traversal/range

[14:12:00.0000] <MacDome>
hsivonen: http://my.opera.com/MacDev_ed/blog/2008/01/22/core-web does not quit for me in TOT.  however any time you see a crash, a bug at http://bugs.webkit.org/ is most appreciated

[14:12:01.0000] <SadEagle>
I don't know if too many people use it. Does IE support any of it? I know gecko doesn't support NodeFilter, and Opera's 9.2's impl seems buggy.

[14:14:00.0000] <hsivonen>
MacDome: that's the weird part. it's auto-quit. the crash reporter doesn't catch it

[14:15:00.0000] <SadEagle>
hsivonen: might be stack overflow

[14:16:00.0000] <SadEagle>
Hixie: hmm, my impl guarantees that all the nodes it returns are in the physical list, but I don't think that's required..

[14:17:00.0000] <Hixie>
SadEagle: lack of good implementations is what is blocking adoption, i'd wager.

[14:17:01.0000] <Hixie>
SadEagle: lack of a good spec might be blocking implementations

[14:17:02.0000] <SadEagle>
Hixie: well, actually let me ask you a question: what should happen if the node that just got tested is moved within the view?

[14:17:03.0000] <SadEagle>
s/view/physical list/

[14:17:04.0000] <Hixie>
mvoed when?

[14:17:05.0000] <Hixie>
in the filter, after teh filter?

[14:17:06.0000] <SadEagle>
inside the NodeFilter.

[14:18:00.0000] <SadEagle>
outside it's well-spec'd

[14:21:00.0000] <hsivonen>
MacDome: filed http://bugs.webkit.org/show_bug.cgi?id=17073 though not much useful info to report

[14:22:00.0000] <Hixie>
SadEagle: you mean, if the filter moves the node that's being tested?

[14:22:01.0000] <SadEagle>
yes.

[14:22:02.0000] <jgraham_>
/me had a vague notion that people disliked SVG fonts

[14:23:00.0000] <hsivonen>
jgraham_: oh yes indeed

[14:23:01.0000] <Hixie>
SadEagle: if the node is _moved_, i have no iea

[14:23:02.0000] <nickshanks>
i don't get SVG fonts

[14:23:03.0000] <nickshanks>
how re they better than truetype?

[14:23:04.0000] <hsivonen>
jgraham_: http://www.w3.org/Bugs/Public/show_bug.cgi?id=5253 would be a much more useful approach

[14:23:05.0000] <Hixie>
the svg fonts tests can be removed, all it takes is for someone to send me a better test

[14:24:00.0000] <Hixie>
they were requested by opera

[14:24:01.0000] <SadEagle>
Hixie: let's make it simpler... what if it's just deleted, from inside the filter, of course

[14:24:02.0000] <SadEagle>
nickshanks: might be patent issues?

[14:24:03.0000] <hsivonen>
jgraham_: and as far as visual presentation goes, compatible with deployed SVG renderers

[14:24:04.0000] <Hixie>
and i checked, and at least safari and mozilla either implement, or plan to implement, svg fonts

[14:24:05.0000] <Hixie>
so...

[14:24:06.0000] <Hixie>
SadEagle: well

[14:24:07.0000] <jgraham_>
/me knows very little about SVG fonts

[14:25:00.0000] <jgraham_>
I just thought they were unimplemented and disliked, so I was surprised to see them in ACID 3 :)

[14:26:00.0000] <hsivonen>
SVG fonts in Acid3? well that sure is a surprise

[14:26:01.0000] <SadEagle>
hmm, this one I am pretty sure is just a test typo: expect(13, i.previousNode(), t4);

[14:26:02.0000] <hsivonen>
/me didn't actually inspect the SVG tests

[14:26:03.0000] <SadEagle>
since the connects suggest it should be t3

[14:26:04.0000] <hsivonen>
I got distracted with reporting a WebKit bug

[14:26:05.0000] <Hixie>
SadEagle: the spec says "For instance, if a NodeFilter removes a node from a document, it can still accept the node, which means that the node may be returned by the NodeIterator or TreeWalker even though it is no longer in the subtree being traversed."

[14:27:00.0000] <SadEagle>
Hixie: yeah, but what happens to the reference node, in particular if it skipped over some nodes?

[14:29:00.0000] <Hixie>
SadEagle: the reference node doesn't change, according to the spec, since the node was removed while the reference node was something else

[14:29:01.0000] <Hixie>
SadEagle: so i guess the last test of test 2 is wrong

[14:30:00.0000] <SadEagle>
could you please re-check expectation 13 of test 2 first? :-)

[14:30:01.0000] <SadEagle>
hmm, for extra fun, the iterator can be reentered.

[14:31:00.0000] <Hixie>
oops, yeah, that should be t3

[14:31:01.0000] <Hixie>
yeah, i was just thinking about that

[14:31:02.0000] <Hixie>
the spec doesn't even mention that

[14:31:03.0000] <SadEagle>
anyway, implementation-wise, this sort of scenario is a pain, since you either have to watch multiple nodes per iterator, or re-check membership (which is where the move case comes from)

[14:33:00.0000] <Hixie>
i agree that it is a pain

[14:33:01.0000] <Hixie>
we need someone to step up and take this spec and rewrite it to be decent and proper

[14:33:02.0000] <Hixie>
andunambiguous

[14:33:03.0000] <Hixie>
i'll happily change acid3 to match whatever spec is made

[14:35:00.0000] <SadEagle>
the Java/standalone impls are probably something to check..

[14:36:00.0000] <Hixie>
not really, since those don't need interop

[14:36:01.0000] <Hixie>
i would expect the dom specs to cut loose the non-web implementations

[14:41:00.0000] <SadEagle>
I think if I was writing the spec, my tendency would be to say that if the list is modified from within a filter, an exception is thrown, and the iterator is reset to the beginning of the physical list

[14:43:00.0000] <Hixie>
that's also non-trivial, you'd have to actually pay attention to the whole tree

[14:43:01.0000] <SadEagle>
though you get the funny case of the filter throwing an exception -and- modifiying.

[14:43:02.0000] <Hixie>
personally i'd just say that you change the reference node before calling the filter, and that, like with treewalker, you keep following the reference node

[14:43:03.0000] <SadEagle>
Not really. You kind of have too, since the reference node may be nested within a tree that is removed.

[14:44:00.0000] <SadEagle>
heh, which is how I implemented it :-)

[14:44:01.0000] <Hixie>
you wouldn't have to track that either, with my version

[14:44:02.0000] <Hixie>
and you could use nodeiterator outside of a document, too

[14:48:00.0000] <SadEagle>
don't see why that's not possible now.

[14:50:00.0000] <Hixie>
SadEagle: i mean, outside of the root

[14:51:00.0000] <SadEagle>
oh, I see, so you wouldn't move the reference node for deletions while the filter is running?

[14:51:01.0000] <jgraham_>
/me wonders exactly what Charles wants the HTML 5 spec to say about <video>

[14:56:00.0000] <Hixie>
SadEagle: i wouldn't move the reference node for deletions at all.

[14:57:00.0000] <SadEagle>
ah. I see what you meant by not needing to track that either.

[15:06:00.0000] <jwalden>
/me curses namespaces

[15:23:00.0000] <Dashiva>
html:curses

[15:25:00.0000] <nickshanks>
i think he meant xmlns:curses="http://voodoo.org/ns/curses"

[15:26:00.0000] <SadEagle>
would that go with the dumbTerminal module of xhtml3?

[15:26:01.0000] <nickshanks>
you're thinking of ncurses rahter than voodoo curses

[15:27:00.0000] <nickshanks>
anyway, i am sleep

[15:27:01.0000] <nickshanks>
nightall

[15:34:00.0000] <SadEagle>
heh, all this talk of video makes me want to implement it. But I guess <audio> to go with Audio should be first


2008-01-30
[16:21:00.0000] <roc>
hmm

[16:22:00.0000] <roc>
SVG fonts are fine for Acid3, we'll do those

[16:22:01.0000] <roc>
SMIL, not so sure :-)

[16:23:00.0000] <Hixie>
the smil test was contributed by a browser vendor

[16:23:01.0000] <Hixie>
feel free to contribute a test to make their life hard too :-)

[16:25:00.0000] <roc>
it's not our lives SMIL makes hell, it's more authors :-)

[16:25:01.0000] <Hixie>
well

[16:25:02.0000] <Hixie>
that applies to all of svg

[16:25:03.0000] <Hixie>
so...

[16:25:04.0000] <roc>
there is a difference of degree

[16:26:00.0000] <Hixie>
wow, doctypes have become much more common over the past few years

[16:26:01.0000] <Hixie>
it was about 50% of pages that had a doctype a year or two ago

[16:26:02.0000] <Hixie>
now it's 66%

[16:27:00.0000] <Hixie>
and according to this, most of them are valid (like, ~99%)

[16:27:01.0000] <Hixie>
valid as in they parse per html5 without syntax errors

[16:28:00.0000] <Lachy>
Hixie, I find those stats really hard to believe

[16:29:00.0000] <Lachy>
there must be some mistake or maybe a bias sample

[16:30:00.0000] <Hixie>
why?

[16:32:00.0000] <Lachy>
99% validity just seems way too high

[16:33:00.0000] <Hixie>
that's 99% of pages that emitted a doctype emitted one that was marked correct

[16:33:01.0000] <Hixie>
i think that's not that unreasonable given how most will be copy-and-pasted

[16:34:00.0000] <Hixie>
28% of all pages were xhtml 1.0 transitional with uri

[16:34:01.0000] <Hixie>
10% were html 4.01 transitional without uri

[16:35:00.0000] <Hixie>
only 66% had a doctype at all, so we're already more than half way there just with the two most common doctypes

[16:36:00.0000] <Hixie>
7% are 4.01 transitional without uri

[16:36:01.0000] <Lachy>
oh, so you're just talking about the correctness of the doctype, not the validity of the whole page?

[16:36:02.0000] <Hixie>
right

[16:36:03.0000] <Lachy>
ok. Now it makes sense

[16:36:04.0000] <Hixie>
5% are xhtml 1.0 strict with uri

[16:36:05.0000] <Ketsuban>
I don't understand why people don't use Strict rather than Transitional. :P

[16:36:06.0000] <Hixie>
er the 7% were with uri, not without uri

[16:37:00.0000] <Hixie>
5% again are html 4.0 transitional without uri

[16:38:00.0000] <Hixie>
2% are 4.01 strict with uri, the acid3 doctype

[16:38:01.0000] <Ketsuban>
Awesome, I'm part of a 2% minority. :D

[16:38:02.0000] <Hixie>
after that the values are all below 1%

[16:39:00.0000] <Hixie>
(the next one is 4.01 transitional with the uri "http://www.w3.org/tr/1999/rec-html401-19991224/loose.dtd") (after lowercasing)

[16:39:01.0000] <Hixie>
1.1 strict with uri is next

[16:39:02.0000] <Hixie>
which is ironic given that this is only testing text/html iirc, and 1.1 strict can't be sent as text/html legally

[16:40:00.0000] <Ketsuban>
Apparently not many people hold the belief that it's only worth using XHTML if you're going to be embedding other XML technologies like SVG, and if you're not you might as well use HTML.

[16:40:01.0000] <Lachy>
I think it's only a SHOULD NOT

[16:40:02.0000] <Hixie>
for 1.1 i thought it was a must not

[16:40:03.0000] <Lachy>
so techically, it can. But it's pointless

[16:40:04.0000] <Hixie>
i also have data about which doctypes had the most syntax errors

[16:41:00.0000] <Hixie>
and which had the most elements that they weren't allowed to have

[16:41:01.0000] <Hixie>
but that's harder to process from the raw data

[16:41:02.0000] <Ketsuban>
http://www.w3.org/TR/xhtml-media-types/#summary

[16:41:03.0000] <Hixie>
50% of pages in this multi-billion file sample are in quirks. that's a huge step forward past the graph i had that ended in 2006.

[16:42:00.0000] <Hixie>
(40% limited quirks, 10% no quirks)

[16:56:00.0000] <takkaria>
Hixie: as in, 50% of pages are in standards mode?

[17:03:00.0000] <Hixie>
takkaria: almost standards and standards, yeah

[17:03:01.0000] <takkaria>
that's pretty awesome

[17:04:00.0000] <Hixie>
pretty surprising, too

[17:04:01.0000] <Hixie>
it's a much faster migration than i had expected

[17:04:02.0000] <takkaria>
Hixie: are you going to do a new webstats thing for code.google.com?

[17:05:00.0000] <Hixie>
probably not

[17:05:01.0000] <Hixie>
not any time soon anyway

[17:05:02.0000] <takkaria>
shame

[17:06:00.0000] <Hixie>
it's a lot of work :-)

[17:06:01.0000] <takkaria>
I could imagine.  still, it's nice to hear that the web migrates fairly fast

[17:13:00.0000] <Dashiva>
Hixie: I wonder, though. How much is migration, and how much is simply from the web growing and more new pages being with doctype by default rather than intent?

[17:14:00.0000] <Hixie>
could be that too

[17:32:00.0000] <blooberry>
*reading back* hixie: wow. That *does* seem unbelievably high

[18:02:00.0000] <Hixie>
hmm

[18:02:01.0000] <Hixie>
<iframe> isn't in HTML4 strict

[18:02:02.0000] <Hixie>
this poses a problem for making Acid3 validate

[18:06:00.0000] <Dashiva>
Hixie: Not if you create it dynamically ;)

[18:06:01.0000] <Hixie>
these are specifically elements that have to be present statically

[18:07:00.0000] <Dashiva>
What's the issue with using transitional?

[18:08:00.0000] <Hixie>
i could

[18:08:01.0000] <Hixie>
what transitional doctype triggers standards mode?

[18:08:02.0000] <Lachy>
transitional doctypes only trigger almost standards mode

[18:09:00.0000] <Dashiva>
standard or almost standard?

[18:09:01.0000] <Hixie>
standards

[18:14:00.0000] <Hixie>
well

[18:14:01.0000] <Hixie>
this is a bummer

[18:14:02.0000] <Hixie>
not sure what to do

[18:15:00.0000] <Dashiva>
On one hand, it seems odd to worry about iframe validation when we're making a spec to allow iframe

[18:18:00.0000] <Hixie>
you know people will complain otherwise

[18:19:00.0000] <Dashiva>
That's the other hand I don't want to acknowledge :)

[18:19:01.0000] <Dashiva>
For me, doctypes are ingrained as something you use to choose a compat mode, nothing else

[18:21:00.0000] <Hixie>
sadly you are in a minority

[18:23:00.0000] <Dashiva>
USing the html5 doctype isn't an option either, since the validator complains there too

[18:25:00.0000] <SadEagle>
hood

[18:25:01.0000] <SadEagle>
uhm. wrong window. and a typo :(

[18:25:02.0000] <Hixie>
/me cheats using document.write()

[18:27:00.0000] <Hixie>
dbaron: in case you didn't see my comment earlier, i made the AttributeNode tests optional -- they'll pass if there is no support at al

[18:27:01.0000] <Hixie>
l

[18:27:02.0000] <dbaron>
Hixie, yep, saw it

[18:28:00.0000] <dbaron>
Hixie, not sure if I'll be able to convince other people to remove it -- I guess that depends what other browsers do.

[18:28:01.0000] <Hixie>
well, if it's not removed, it should presumably work interoperably

[18:28:02.0000] <Hixie>
but i think having the acid3 test make it optional will actually help the argument to remove it

[18:28:03.0000] <Hixie>
since it's easier to remove than support :-)

[18:29:00.0000] <Hixie>
dbaron: thanks for forcing the issue though, i agree it is something that needs to be dealt with

[19:04:00.0000] <Hixie>
hsivonen: getting a 503 from html5.validator.nu

[19:47:00.0000] <othermaciej>
dbaron: are attribute nodes really that bad?

[19:48:00.0000] <othermaciej>
I mean, they're pretty useless, but it's also not that hard to support them in a DOM-compliant way by creating hem lazily

[19:54:00.0000] <dbaron>
If they're pretty useless, why waste the code?

[20:34:00.0000] <jruderman>
Hixie: test 10 and test 60 use different, seemingly incompatible methods for determining whether attribute nodes are supported

[20:34:01.0000] <jruderman>
Hixie: and in test 60, i think you don't want to skip the whole test if attribute nodes are not supported

[20:35:00.0000] <jruderman>
and test 60 should return 4, not 1, when attribute nodes are not supported ;)

[22:23:00.0000] <hsivonen>
Hixie: v.nu is back up. the kernel had killed the process. reason not given. sorry about that.

[22:49:00.0000] <Hixie>
jruderman: fixed test 60 (copy/paste edit error)

[22:49:01.0000] <Hixie>
jruderman: why would i not want to skip the whole test?

[22:50:00.0000] <jruderman>
after reading the rest of the test, i think you're right to skip the whole test. so never mind.

[22:52:00.0000] <jruderman>
Hixie: i'd add to test 60

[22:52:01.0000] <jruderman>
assertEquals(attr.value, 'ocelots', "attribute value wrong");

[22:53:00.0000] <Hixie>
where?

[22:53:01.0000] <Hixie>
after setting it?

[22:53:02.0000] <jruderman>
yeah

[22:53:03.0000] <Hixie>
done

[22:55:00.0000] <jruderman>
:)

[23:14:00.0000] <jwalden>
/me finally sends the postMessage feedback and tests of the last several months to whatwg

[23:22:00.0000] <MikeSmith>
/me reads http://lists.whatwg.org/pipermail/whatwg-whatwg.org/2008-January/013795.html

[23:22:01.0000] <MikeSmith>
How complete is the Firefox cross-messaging implementation?

[23:24:00.0000] <gavin>
complete!

[23:25:00.0000] <gavin>
(I think?)

[23:25:01.0000] <gavin>
jwalden knows

[23:25:02.0000] <jwalden>
Gecko's postMessage totally pwns the webkit one

[23:25:03.0000] <MikeSmith>
heh

[23:25:04.0000] <jwalden>
I mean it

[23:25:05.0000] <jwalden>
I don't think example.org can call postMessage on example.com in WebKit

[23:26:00.0000] <jwalden>
which is kinda the point of the feature

[23:29:00.0000] <jwalden>
no idea what the status of Opera's implementation is, if it were to be transplanted to Window

[23:32:00.0000] <MikeSmith>
Opera implementation is just a partial one, right?

[23:32:01.0000] <jwalden>
I don't know

[23:32:02.0000] <jwalden>
it's on document

[23:33:00.0000] <jwalden>
so it's rather incompatible from that point of view

[23:33:01.0000] <jwalden>
and IE and Gecko 1.9 don't allow access to documents across domains

[23:34:00.0000] <jwalden>
I hoped to run the tests against Opera to make sure they at least ran, before I found out that doing so would be pretty meaningless given postMessage's location in Opera

[23:38:00.0000] <MikeSmith>
jwalden - is there a version target for when this will be in a final FF release? I mean 3.1 or whatever

[23:38:01.0000] <jwalden>
MikeSmith: it'll be in 3.0b3

[23:38:02.0000] <MikeSmith>
OK

[23:38:03.0000] <jwalden>
out in a week or so, with luck

[23:39:00.0000] <MikeSmith>
so it's targeted to go in the final 3.0 release?

[23:39:01.0000] <jwalden>
yes

[23:39:02.0000] <jwalden>
I still don't know quite how

[23:40:00.0000] <jwalden>
given when we were "backend-feature-complete"

[23:40:01.0000] <jwalden>
that said, as features go this one's actually not that complicated

[23:45:00.0000] <MikeSmith>
/me just now re-reads first paragraph of jwalden's message

[23:45:01.0000] <jwalden>
ah, you skipped that one?  heh

[23:46:00.0000] <MikeSmith>
yeah, dunno why.. skipped ahead to interesting bits first :)

[23:46:01.0000] <MikeSmith>
like the part that starts "The spec's incomplete or vague on a few points right now..." 

[23:47:00.0000] <jwalden>
the rest is only interesting given the first paragraph

[23:47:01.0000] <jwalden>
otherwise we're talking 5% of the web

[23:47:02.0000] <jwalden>
fact of life, sadly

[23:47:03.0000] <jwalden>
/me would like to see a totally homogeneous browser population

[23:48:00.0000] <jwalden>
/me suspects many web developers would disagree :-)

[23:48:01.0000] <MikeSmith>
jwalden - visit Korea

[23:48:02.0000] <MikeSmith>
you will find one there

[23:48:03.0000] <jwalden>
hm

[23:48:04.0000] <jwalden>
maybe that's not the word I wanted!

[23:48:05.0000] <MikeSmith>
heh

[23:48:06.0000] <hsivonen>
MikeSmith: how's Korea coping with IE7 and Vista?

[23:49:00.0000] <jwalden>
"evenly distributed", for lack of a better word

[23:49:01.0000] <hsivonen>
so I haven't deployed Saxon yet, because the build doesn't run an Linux even though it runs on Mac OS X

[23:50:00.0000] <hsivonen>
I wonder if Linux has a lower limit for the max number of command line parameters for a process than Mac OS X

[23:50:01.0000] <hsivonen>
the command for jarring Saxon fails on Linux

[23:51:00.0000] <othermaciej>
dbaron: there's more useless things than attribute nodes which take far more code

[23:51:01.0000] <MikeSmith>
hsivonen - dunno much about IE7 and Vista in Korea, but i remember there being complaints/anger in Japan about the fact they MS had/has not made available yet in Japan some system for enterprise/corporate sysadmins to push out automatic IE7 updates to users

[23:52:00.0000] <MikeSmith>
I think same situation in Korea about that update thingy

[23:52:01.0000] <othermaciej>
dbaron: if there is to be a cutoff point on DOM Core specs that matter, it would be somewhat nice to at least include all of DOM Core 2

[23:52:02.0000] <othermaciej>
jwalden: are you sure about that? (example.org calling example.com)

[23:53:00.0000] <othermaciej>
jwalden: I would be highly surprised if postMessage didn't work cross-domain, since that is kind of the whole point

[23:53:01.0000] <MikeSmith>
hsivonen - Debian Linux packagers might be able to help solve that

[23:53:02.0000] <othermaciej>
jwalden: indeed, DOMWindow.idl says:

[23:53:03.0000] <othermaciej>
 [DoNotCheckDomainSecurity, Custom] void postMessage(in DOMString message);

[23:53:04.0000] <jwalden>
Unsafe JavaScript attempt to access frame with URL http://localhost:8888/tests/dom/tests/mochitest/whatwg/test_postMessage.html from frame with URL http://example.org:8000/tests/dom/tests/mochitest/whatwg/postMessage_helper.html. Domains, protocols and ports must match.

[23:54:00.0000] <othermaciej>
so if you have a test case where it doesn't work cross-domain, either it's a WebKit bug or your test case is buggy

[23:54:01.0000] <othermaciej>
can you post the test case somewhere?

[23:54:02.0000] <jwalden>
othermaciej: see the whatwg post

[23:55:00.0000] <jwalden>
that's from test_postMessage.html

[23:55:01.0000] <othermaciej>
jwalden: sounds like running it is hard

[23:55:02.0000] <othermaciej>
jwalden: thanks for making tests though

[23:55:03.0000] <jwalden>
sure

[23:56:00.0000] <jwalden>
I don't think it'd have gotten in without as many tests as it had

[23:56:01.0000] <jwalden>
as for the "hard" part, just requires the right test-harness work :-)

[23:57:00.0000] <othermaciej>
jwalden: we have tests for cross-domain postMessage in our regression tests and they appear to be passing

[23:57:01.0000] <jwalden>
yeah, I saw them; I don't know what's up, to be honest, but I was definitely seeing failures

[23:57:02.0000] <jwalden>
this is 29807

[23:57:03.0000] <othermaciej>
jwalden: so I think your test fails for some reason other than cross-domain access to postMessage not working in general

[23:58:00.0000] <jwalden>
hm

[23:59:00.0000] <jwalden>
so javascript:alert(window.otherCrossDomain) in test_postMessage.html is causing that error

[00:00:00.0000] <othermaciej>
jwalden: I don't see that in the test file?

[00:01:00.0000] <jwalden>
that's me running in the location bar

[00:01:01.0000] <jwalden>
I'm certainly accessing window.otherCrossDomain all over the place, tho

[00:01:02.0000] <jwalden>
or window.frames.otherCrossDomain, natch

[00:01:03.0000] <jwalden>
same thing

[00:02:00.0000] <hsivonen>
MikeSmith: a DD said that the limit is 128 KB. The command I tried to run is 150 KB. sigh

[00:02:01.0000] <othermaciej>
jwalden: I think we disallow toString on windows in other domains, so that's probably way

[00:02:02.0000] <othermaciej>
perhaps you are doing something else to the Window that WebKit disallows

[00:02:03.0000] <jwalden>
ah

[00:03:00.0000] <othermaciej>
you actually do window.frames.otherCrossDomain

[00:03:01.0000] <othermaciej>
which is slightly less evil

[00:03:02.0000] <othermaciej>
but maybe the === comparison is disallowed

[00:03:03.0000] <MikeSmith>
hsivonen - Xalan didn't require as many/as long arguments?

[00:03:04.0000] <othermaciej>
which I guess it shouldn't be

[00:03:05.0000] <hsivonen>
MikeSmith: I used Xalan without building it

[00:03:06.0000] <MikeSmith>
oh

[00:03:07.0000] <hsivonen>
MikeSmith: Saxon has too many classes to jar in one go

[00:04:00.0000] <jwalden>
also note not == since that can have messy side effects :-\

[00:04:01.0000] <jwalden>
/me wishes == had been ===

[00:04:02.0000] <jwalden>
when you're not careful, at least

[00:04:03.0000] <hsivonen>
MikeSmith: my build script names every class for jar and changes directory explicitly for each one

[00:04:04.0000] <hsivonen>
changing directory works around a design bug in jar

[00:04:05.0000] <jwalden>
so javascript:alert(window.frames.otherCrossDomain.postMessage) alerts undefined when run on test_postMessage.html

[00:04:06.0000] <hsivonen>
I guess I have to figure a new way to work around it

[00:06:00.0000] <othermaciej>
jwalden: can you get at close on that frame?

[00:06:01.0000] <MikeSmith>
hsivonen - seems like Java packagers from Debian or other Linux distros might have run into same problem before

[00:06:02.0000] <jwalden>
othermaciej: yes

[00:06:03.0000] <othermaciej>
jwalden: I can definitely get at "close" and "postMessage" both in windows in foreign domains

[00:06:04.0000] <MikeSmith>
but I guess it may be a case where there's not general solution to work around the limit

[00:07:00.0000] <hsivonen>
MikeSmith: they probably give a directory name to jar and let jar traverse it

[00:07:01.0000] <hsivonen>
I had a reason not to do that

[00:09:00.0000] <othermaciej>
jwalden: are you tests based on the WebKit layout tests for postMessage or totally independent?

[00:09:01.0000] <jwalden>
othermaciej: totally independent

[00:09:02.0000] <othermaciej>
(if the latter we should fold them into our regression tests)

[00:10:00.0000] <othermaciej>
(and also you should include ours probably)

[00:10:01.0000] <othermaciej>
(feature won't be very interoperable if we don't pass each other's tests)

[00:10:02.0000] <jwalden>
I'm pretty my tests subsume yours in functionality, but it could be done easily enough

[00:10:03.0000] <jwalden>
s/my/sure my/

[00:11:00.0000] <MikeSmith>
/me takes a moment to read http://ejohn.org/blog/the-state-of-json/

[00:11:01.0000] <hsivonen>
http://twitter.com/cwilso/statuses/656169372

[00:11:02.0000] <othermaciej>
who is "OH"?

[00:12:00.0000] <MikeSmith>
"a way to access native JSON encoding and decoding from web pages... there should be something within the browser by the time the Firefox 3 betas wrap-up."

[00:12:01.0000] <hsivonen>
othermaciej: overheard

[00:13:00.0000] <jwalden>
MikeSmith: last I heard, that's unlikely -- worries about not enough vetting of the impl

[00:13:01.0000] <othermaciej>
Microsoft certainly knows how to motivate the web developer community

[00:13:02.0000] <jwalden>
hrm

[00:13:03.0000] <jwalden>
/me wonders whether jresig missed that memo

[00:14:00.0000] <jwalden>
(bug comment, really :-) )

[00:14:01.0000] <MikeSmith>
jwalden - I see

[00:15:00.0000] <jwalden>
https://bugzilla.mozilla.org/show_bug.cgi?id=408838

[00:16:00.0000] <MikeSmith>
jwalden - thanks

[00:16:01.0000] <jwalden>
no problem

[00:16:02.0000] <othermaciej>
jwalden: I could encourage you to at least try the tests once, for the same reason you encourage other implementors to try yours

[00:16:03.0000] <jwalden>
sure, I'll give it a shot

[00:21:00.0000] <hsivonen>
looks like jar can read its command line from a file to work around the OS limit...

[00:27:00.0000] <MikeSmith>
hsivonen - that's good news

[00:27:01.0000] <MikeSmith>
that'll work for your case, right?

[00:28:00.0000] <hsivonen>
MikeSmith: yes

[00:28:01.0000] <MikeSmith>
great

[01:16:00.0000] <hsivonen>
whew. Validator.nu now validates the old spec copy without choking: http://html5.validator.nu/?doc=http%3A%2F%2Fabout.validator.nu%2Fspec2.html

[01:17:00.0000] <hsivonen>
hmm. and looks like I need to fix about.validator.nu server config... 

[01:27:00.0000] <zcorpan_>
http://files.myopera.com/MacDev_ed/svg/sign_danger_corrosive.svg

[01:27:01.0000] <zcorpan_>
/me thinks that's a suitable reference rendering for acid3 :)

[01:45:00.0000] <othermaciej>
haha

[01:46:00.0000] <hsivonen>
that SVG file is what's corroding my copy of safari

[01:48:00.0000] <zcorpan_>
well it warned you now didn't it? :)

[01:48:01.0000] <hsivonen>
:-)

[01:49:00.0000] <hsivonen>
was it so that I need to set a timeout if I want to emulate hashChanged in current browsers?

[01:50:00.0000] <zcorpan_>
i think so, unless you're happy to assume that the hash will only change in response to click or keyboard events

[01:51:00.0000] <annevk>
what is window.otherCrossDomain ?

[01:52:00.0000] <hsivonen>
zcorpan_: is that a good assumption with alternative input methods, spatnav, etc.?

[01:53:00.0000] <hsivonen>
are <body onload='...> and window.onload different handlers or is there some legacy sameness going on?

[01:54:00.0000] <zcorpan_>
spatnav still emits keyboard events, but it's certainly not fool proof. e.g. the user might enter a hash in the address bar

[01:54:01.0000] <zcorpan_>
hsivonen: they should be the same, but i'm not sure if opera gets it right yet

[01:55:00.0000] <hsivonen>
I wonder if I should clean away the event handler attributes from the Validator.nu HTML output and install everything in script...

[01:55:01.0000] <zcorpan_>
using window.onload instead of <body onload> certainly works cross-browser

[01:55:02.0000] <zcorpan_>
using both doesn't :)

[01:56:00.0000] <hsivonen>
ok. I'll clean up my HTML

[01:57:00.0000] <zcorpan_>
sounds good, i guess you get a better mobileOK score then :)

[01:58:00.0000] <hsivonen>
heh.

[01:58:01.0000] <hsivonen>
the key parts of the scripted stuff work in Opera Mini even

[01:58:02.0000] <zcorpan_>
that's nice

[01:59:00.0000] <hsivonen>
I hope mini doesn't care about attributes vs. script-installed handlers

[02:03:00.0000] <othermaciej>
annevk: just a piece of jwalden's tests - hapens to be the name of a frame

[02:03:01.0000] <othermaciej>
annevk: it does not have deep meaning

[02:03:02.0000] <zcorpan_>
the group messages button works, which has script-installed handler, so i guess it should work

[02:04:00.0000] <hsivonen>
zcorpan_: ok

[02:04:01.0000] <hsivonen>
last I checked the part that didn't work in Mini was the textarea/fileupload mode popup

[02:05:00.0000] <hsivonen>
but then, that doesn't need to work in Mini

[02:05:01.0000] <hsivonen>
/me wants media queries in MicroB, S60 Browser and Opera Mobile

[02:08:00.0000] <annevk>
othermaciej, good, I was hoping it was that :)

[02:10:00.0000] <MacDome>
Hixie: I agree with roc... SMIL could be hell to implement :)  But it also is moderately useful to the web

[02:10:01.0000] <MacDome>
it's more the SVG animation DOM which is a bitch

[02:11:00.0000] <MacDome>
the baseVal animVal problem

[02:11:01.0000] <hsivonen>
does Opera implement SMIL?

[02:11:02.0000] <annevk>
we implement SVG Animation

[02:12:00.0000] <annevk>
which reuses part of SMIL

[02:12:01.0000] <othermaciej>
I think people are using "SMIL" as a slightly imprecise shorthand for "SVG Animation"

[02:12:02.0000] <annevk>
we do not implement the 111 and growing namespace monster that is SMIL 2.1

[02:12:03.0000] <zcorpan_>
annevk: they settled for a single namespace for smil3, though

[02:13:00.0000] <hsivonen>
fwiw, for HTML eyecandy, I think the Apple CSS animation proposal is way more elegant than the transition stuff from the SMIL group

[02:13:01.0000] <annevk>
that makes 112

[02:13:02.0000] <annevk>
alarm number of Europe

[02:13:03.0000] <hsivonen>
:-)

[02:14:00.0000] <annevk>
i agree that the CSS animation stuff is nicer

[02:15:00.0000] <webben_>
SMIL isn't really intended for "eye candy": it's a content language.

[02:15:01.0000] <annevk>
unfortunately the CSS group won't work on it right away

[02:15:02.0000] <webben_>
(AFAIK)

[02:15:03.0000] <MacDome>
now we just need a nice way to apply the CSS animation to SVG :)

[02:15:04.0000] <MacDome>
/me should submit a test or two to get SMIL kicked from the test

[02:15:05.0000] <MacDome>
it's just so low on actual browser feature lists

[02:16:00.0000] <annevk>
othermaciej, btw, any simplification of the DOM that is possible is good imo, if we can remove attribute nodes that would be a win

[02:16:01.0000] <MacDome>
since no one in their right mind is trying to use it on the web right now

[02:16:02.0000] <webben_>
No. It's like with video. Easier to use Flash for complex presentations.

[02:16:03.0000] <jruderman>
implementing SMIL might hurt static svg perf

[02:16:04.0000] <webben_>
and there's Slidy for simple ones.

[02:16:05.0000] <jruderman>
assuming it requires sprinkling "if(animated)" all over

[02:17:00.0000] <annevk>
MacDome, might be chicken/egg problem

[02:17:01.0000] <othermaciej>
annevk: TreeWalker doesn't seem any more useful to me than attribute nodes...

[02:17:02.0000] <MacDome>
annevk: might

[02:17:03.0000] <annevk>
sure

[02:17:04.0000] <webben_>
So it's limited to people who want to make complex presentations in an open format.

[02:17:05.0000] <annevk>
(to both)

[02:17:06.0000] <MacDome>
jruderman: I don't think it's a bunch of branching

[02:17:07.0000] <annevk>
othermaciej, but if we can remove one why not do it?

[02:17:08.0000] <webben_>
(And the pool of people who care about that is small.)

[02:18:00.0000] <MacDome>
jruderman: it is a bunch of added complex code however

[02:18:01.0000] <othermaciej>
annevk: well, I'd put TreeWalker on the chopping block too

[02:18:02.0000] <othermaciej>
I'm not sure why attribute nodes are worse

[02:18:03.0000] <webben_>
(and I guess it has to compete with ODF)

[02:18:04.0000] <MacDome>
/me thinks that TreeWalker is on the list of "simple to actually implement so we should just get it out of the way and be done with it"

[02:18:05.0000] <annevk>
i'm fine with putting both on the chopping block, it just seems that dropping attribute nodes might be easier

[02:19:00.0000] <othermaciej>
just seems a little arbitrary 

[02:19:01.0000] <annevk>
maybe it's because it's part of the Core DOM

[02:19:02.0000] <othermaciej>
Attr nodes are part of DOM 1 Core, TreeWalker is part of DOM2 Traversal, does any web content use it?

[02:19:03.0000] <annevk>
i also think that namespace events should be dropped from dom3events

[02:20:00.0000] <annevk>
for treewalker there are some use cases

[02:20:01.0000] <annevk>
for attr nodes there are none given that no implementation does entity nodes

[02:20:02.0000] <othermaciej>
TreeWalker is a bad API for traversing a DOM tree

[02:20:03.0000] <othermaciej>
I agree there are use cases for a good API for doing so

[02:21:00.0000] <annevk>
xhr is a bad api for network requests...

[02:21:01.0000] <othermaciej>
what I hate most out of DOM Events is mutation events

[02:21:02.0000] <othermaciej>
it's not just useless, it is actively harmful to code complexity and performance all over the DOM

[02:21:03.0000] <jruderman>
oh, yes, mutation events are evil

[02:21:04.0000] <othermaciej>
annevk: but XHR is used, unlike TreeWalker

[02:21:05.0000] <annevk>
is treewalker implemented everywhere?

[02:22:00.0000] <othermaciej>
surely not in IE

[02:22:01.0000] <annevk>
that's probably a good reason for not using it then :)

[02:22:02.0000] <othermaciej>
it is in WebKit and Mozilla

[02:22:03.0000] <othermaciej>
I'd assume Opera too

[02:22:04.0000] <jruderman>
othermaciej: did you see that gecko decided to stop firing mutation events during page load?

[02:22:05.0000] <othermaciej>
jruderman: even if they are caused by explicit mutation, not parsing?

[02:22:06.0000] <jruderman>
i think so, but i'm not sure

[02:22:07.0000] <othermaciej>
(we never did fire them as side effects of initial parsing)

[02:23:00.0000] <othermaciej>
we actually don't fire them at all if no listener is registered

[02:23:01.0000] <jruderman>
https://bugzilla.mozilla.org/show_bug.cgi?id=90983

[02:23:02.0000] <othermaciej>
that reduces perf cost

[02:23:03.0000] <othermaciej>
but there's still a lot of code complexity to make basic DOM operations robust in the face of mutation event listeners possibly modifying the DOM

[02:23:04.0000] <jruderman>
we had that optimization too, and we were spending time looking to see if there were mutation listeners

[02:23:05.0000] <jruderman>
yes

[02:23:06.0000] <othermaciej>
(which no one ever really wants to do in a way that invalidates the DOM operation)

[02:23:07.0000] <jruderman>
we had a fair number of crashes due to bad assumptions in there

[02:24:00.0000] <othermaciej>
if DOM change notifications are actually useful, they should be batched

[02:24:01.0000] <othermaciej>
until the end of operations that ought to be atomic

[02:24:02.0000] <othermaciej>
our editing operations just skip mutation events entirely I think

[02:24:03.0000] <jruderman>
as opposed to some being required to be sent before the mutation actually happens? :P

[02:25:00.0000] <othermaciej>
the worst are the ones that happen in the middle

[02:25:01.0000] <othermaciej>
over half the code in our Node.replaceChild core implementation is to account for mutation events possibly doing something crazy

[02:29:00.0000] <annevk>
heh, that bug is filed by an Opera developer

[02:29:01.0000] <annevk>
s/is/was/

[02:31:00.0000] <hsivonen>
is DOMContentLoaded going to be part of a spec?

[02:32:00.0000] <annevk>
it's part of HTML 5

[02:32:01.0000] <hsivonen>
oh. :-)

[02:33:00.0000] <annevk>
Opera 9.2x now passes less than 50% of the Acid3 tests

[02:34:00.0000] <takkaria>
that Charles fella on whatwg doesn't seem to grok the video element

[02:35:00.0000] <othermaciej>
in Safari 3 it just says "JS ?"

[02:35:01.0000] <othermaciej>
is that intended?

[02:35:02.0000] <othermaciej>
(65/100 in WebKit trunk)

[02:37:00.0000] <annevk>
i don't think so

[02:37:01.0000] <harri>
he. khtml fell back to 65 after the recent changes, too.

[02:49:00.0000] <hsivonen>
does any browser support hashchanged yet?

[02:50:00.0000] <annevk>
neh

[02:50:01.0000] <hsivonen>
ok

[03:01:00.0000] <hsivonen>
Hmm. Validator.nu script initialization isn't good if show source is enabled and the doc is huge

[03:02:00.0000] <hsivonen>
I wonder if I should move the script element right after the form and make the form initialization code run immediately at that point...

[03:02:01.0000] <MacDome>
om_sleep: Safari 3 used to show like 46/100

[03:02:02.0000] <MacDome>
insetad of JS ?

[03:04:00.0000] <hsivonen>
is there any harm, if I move the <script> element except it isn't as elegant? will it break XHTML loading in legacy browsers, for example?

[03:06:00.0000] <annevk>
xhtml in gecko had issues with <script>

[03:06:01.0000] <hsivonen>
:-(

[03:07:00.0000] <hsivonen>
annevk: do you recall what kind of issues?

[03:08:00.0000] <annevk>
vague memory tells me the script executed directly but the DOM wasn't build up so stuff failed

[03:08:01.0000] <hsivonen>
annevk: ok. that can be coded for

[03:08:02.0000] <annevk>
i wouldn't worry aout it though and simply assume incremental XML parsers

[03:08:03.0000] <annevk>
i'm sure content already relies on that (at leasts tests :))

[03:10:00.0000] <hsivonen>
now I need to learn to do cross-browser stylesheet manipulation...

[03:11:00.0000] <annevk>
it surprises me that 10% of the Web is in standards mode

[03:12:00.0000] <hsivonen>
hmm. alternatively, I could just do some dirty className toggling.

[03:12:01.0000] <hsivonen>
that might be easier and even force style resolution and layout reflow in legacy UAs

[03:14:00.0000] <hsivonen>
annevk: can you recommend a good CSSOM tutorial?

[03:17:00.0000] <annevk>
no :(

[03:18:00.0000] <hsivonen>
in terms of perf and compat, should I modify the main stylesheet in DOM or should I create a <style> element and do dynamic styles there?

[03:26:00.0000] <hsivonen>
how do I create an object that implements CSSStyleSheet?

[03:37:00.0000] <hsivonen>
hmm. looks like manipulating the textContent of a <style> element is much easier than dealing with the CSSOM...

[03:51:00.0000] <annevk>
you can do document.styleSheets[0].insertRule("", -1) or something like that

[03:52:00.0000] <annevk>
but manipulating textContent of <style> seems fine

[06:30:00.0000] <hsivonen>
annevk: manipulating the textContent of <style> works in Gecko and WebKit. fails in opera...

[06:31:00.0000] <zcorpan>
/me notes that his changes to the wiki HTML page have stayed

[06:31:01.0000] <hsivonen>
hmm. misdianosed

[06:31:02.0000] <hsivonen>
hmm. textContent manipulation works in Opera after all

[06:32:00.0000] <hsivonen>
does assigning to innerText of <style> work in IE?

[06:42:00.0000] <zcorpan>
no

[06:43:00.0000] <zcorpan>
but see http://status.whatwg.org/annotate-web-apps.js for how to make it work in ie (search for an3err)

[06:44:00.0000] <hsivonen>
zcorpan: so appendChild with a text node works cross-browser?

[06:45:00.0000] <zcorpan>
not in ie

[06:45:01.0000] <zcorpan>
but the catch block works in ie

[06:45:02.0000] <hsivonen>
if(an3err.number == -0x7FFF0001) style.styleSheet.cssText

[06:45:03.0000] <hsivonen>
that bit ah

[06:46:00.0000] <hsivonen>
zcorpan: thanks

[06:47:00.0000] <zcorpan>
welcome, though i didn't write that piece of code... don't remember who it was though

[06:48:00.0000] <Philip`>
http://lists.whatwg.org/htdig.cgi/whatwg-whatwg.org/2007-May/011474.html ?

[06:48:01.0000] <hsivonen>
does the line style.type = "text/css"; // required in html4...

[06:48:02.0000] <hsivonen>
have any actual effec anywhere?

[06:48:03.0000] <zcorpan>
no

[06:48:04.0000] <hsivonen>
ok

[06:49:00.0000] <zcorpan>
i didn't want to invalidate the spec :)

[06:49:01.0000] <zcorpan>
Philip`: yes

[06:51:00.0000] <zcorpan>
(the fix was in trunk but not published at that point)

[07:12:00.0000] <hsivonen>
what's the expected way of detecting whether hashchanged is supported?

[07:12:01.0000] <annevk>
"The following line is used in a number of the tests. It is done using document.write() to sidestep complaints of validity." why not use <object>?

[07:12:02.0000] <annevk>
i guess there mightbe more issues

[07:13:00.0000] <annevk>
if(window.onhaschanged) maybe

[07:13:01.0000] <annevk>
with proper spelling

[07:15:00.0000] <hsivonen>
oh. I didn't expect it to have non-false truthiness until set

[07:16:00.0000] <Philip`>
if (window.onhaschanged !== undefined) maybe?

[07:16:01.0000] <hsivonen>
annevk: it appears that unset event handlers are undefined

[07:16:02.0000] <Philip`>
s//h/

[07:16:03.0000] <annevk>
what Philip` said should work

[07:16:04.0000] <Philip`>
Oh, Opera 9.2 says window.onload === null, Firefox 2 says undefined

[07:16:05.0000] <hsivonen>
Philip`: that kind of test doesn't detect support for window.onload

[07:16:06.0000] <annevk>
hsivonen, they are null

[07:17:00.0000] <annevk>
oh, Firefox :(

[07:17:01.0000] <hsivonen>
annevk: undefined in firefox 3

[07:17:02.0000] <annevk>
does anyone still use that?

[07:17:03.0000] <Philip`>
IE6 says null

[07:18:00.0000] <annevk>
HTML5 says null

[07:18:01.0000] <annevk>
hmm, what does HTML4 say

[07:18:02.0000] <annevk>
we should add this to Acid3

[07:18:03.0000] <hsivonen>
well then. I guess it is time to search bugzilla

[07:19:00.0000] <annevk>
oh, I guess these type of event handlers are not defined anywhere

[07:19:01.0000] <hsivonen>
specs++

[07:19:02.0000] <annevk>
HTML5 has them fortunately

[07:19:03.0000] <annevk>
but that's a bit late for Acid3

[07:21:00.0000] <annevk>
lol http://www.w3.org/TR/html4/interact/scripts.html#h-18.2.3

[07:21:01.0000] <annevk>
"Note. Authors of HTML documents are advised that changes are likely to occur in the realm of intrinsic events (e.g., how scripts are bound to events). Research in this realm is carried on by members of the W3C Document Object Model Working Group (see the W3C Web Site at http://www.w3.org/ for more information)."

[07:21:02.0000] <annevk>
and how much better it became...

[07:22:00.0000] <hsivonen>
hmm. looks like this bug hasn't  been filed yet

[07:22:01.0000] <hsivonen>
/me files

[07:25:00.0000] <zcorpan>
annevk: both object and iframe are tested

[07:26:00.0000] <hsivonen>
hmm. window.onload is undefined in Opera 9.50 beta, too

[07:26:01.0000] <annevk>
grmbl

[07:28:00.0000] <hsivonen>
but null indeed in Opera 9.20

[07:31:00.0000] <hsivonen>
annevk: I can't find a HTML5 justification for event handelers on the window object getting initialized to null

[07:31:01.0000] <hsivonen>
oops. found it

[07:32:00.0000] <annevk>
4.3.6

[07:39:00.0000] <hsivonen>
filed bug https://bugzilla.mozilla.org/show_bug.cgi?id=414853

[07:51:00.0000] <Philip`>
Oh, IE6 has window.onload === null but window.onanythingelse === undefined for all anythingelses that I've tried

[07:52:00.0000] <Philip`>
and Opera 9.2 seems to do it for onload and nothing else too

[07:52:01.0000] <annevk>
hmm

[07:53:00.0000] <annevk>
there's a use case for changing the behavior, but how useful that would be given deployed stuff...

[07:54:00.0000] <annevk>
and given that you can use "typeof window.onload" as well

[07:55:00.0000] <Philip`>
(Ah, IE6 does onunload === null too)

[07:55:01.0000] <annevk>
oh wait, typeof also only works for certain stuff

[07:55:02.0000] <annevk>
bah

[07:55:03.0000] <Philip`>
and Opera 9.2 does it on onunload too

[07:56:00.0000] <hsivonen>
Hixie: see above. should the spec or Gecko to be considered erroneous wrt. event handler initialization

[07:56:01.0000] <hsivonen>
?

[08:14:00.0000] <hsivonen>
hmm. why is google reporting my doctype page as http://hsivonen.iki.fi/DOCTYPE/ ?

[08:14:01.0000] <hsivonen>
where did it get the upper case from?

[08:16:00.0000] <annevk>
your server is case-insensitive?

[08:16:01.0000] <gsnedders>
annevk: it's settable at an Apache level, IIRC

[08:16:02.0000] <hsivonen>
annevk: yeah, but there are many more lower-case links pointing to the page

[08:16:03.0000] <hsivonen>
gsnedders: it is backed by HFS+

[08:17:00.0000] <annevk>
hmm, I think that information might come from this tagging thing Google has going on

[08:17:01.0000] <annevk>
Google Base?

[08:17:02.0000] <hsivonen>
I guess I have to take counter-measures now

[08:17:03.0000] <annevk>
the summary for my weblog says "Weblog on working for Opera Software, web standards, mark-up and style." for instance which appears exactly nowhere on my site

[08:18:00.0000] <hsivonen>
otherwise links will break if/when I switch to an Ubuntu server

[08:18:01.0000] <annevk>
if you switch you can enable mod_speling

[08:18:02.0000] <gsnedders>
hsivonen: you can just set Apache to be case-insensitive on a case-sensitive fs

[08:19:00.0000] <Philip`>
annevk: That's the same description as on Google Directory / Open Directory

[08:19:01.0000] <Philip`>
so I think they get the text from there

[08:21:00.0000] <takkaria>
annevk: that's probably how your site is described in dmoz.org

[08:21:01.0000] <hsivonen>
I set a permanent redirect to /doctype/

[08:23:00.0000] <hsivonen>
looks like Google penalized my doctype article for the recent major clarifying edits :-(

[08:24:00.0000] <hsivonen>
still on the first result page, though

[08:54:00.0000] <mpt>
http://www.dmoz.org/Computers/Internet/Web_Design_and_Development/Weblogs/

[08:55:00.0000] <mpt>
The same reason Wikipedia articles often show up in Google results with a summary beginning "Hyperlinked encyclopedia article..." -- because dmoz.org editors have a fetish for describing Wikipedia as "hyperlinked"

[08:57:00.0000] <Camaban>
<META NAME="ROBOTS" CONTENT="NOODP"> will stop that

[09:00:00.0000] <annevk>
/me finds http://www.mattcutts.com/blog/google-supports-meta-noodp-tag/

[09:01:00.0000] <annevk>
i don't think i'll add that element

[09:05:00.0000] <Camaban>
heh, bit of matt cutts subtle spin there, if you've got a less than ideal odp description, it's useful

[09:06:00.0000] <Camaban>
looks like yours is useful enough though :)

[10:56:00.0000] <hsivonen>
I changed the way the Validator.nu UI script interacts with DOM loading

[10:56:01.0000] <hsivonen>
please let me know if I broke something in some browser

[10:56:02.0000] <hsivonen>
I tested Firefox 3, Safari 3 and Opera 9.50

[11:01:00.0000] <SadEagle>
looks just spiffy in konq4.

[11:02:00.0000] <hsivonen>
good

[11:02:01.0000] <SadEagle>
what's the 'group messages' button is supposed to be about?

[11:02:02.0000] <SadEagle>
FF2 looks fine, I guess.

[11:03:00.0000] <hsivonen>
SadEagle: if there are messages with multiple instances, it groups them

[11:03:01.0000] <SadEagle>
hmm, then we don't disable the button somehow

[11:07:00.0000] <SadEagle>
hsivonen: where would the group button be disabled?

[11:07:01.0000] <hsivonen>
SadEagle: http://html5.validator.nu/?doc=http%3A%2F%2Fhsivonen.iki.fi%2Ftest%2Fmoz%2Felaboration-demo.xhtml

[11:08:00.0000] <SadEagle>
I mean code-wise. hrmbl, work better in 3.5.9-pre :-)

[11:09:00.0000] <hsivonen>
oh. :-)

[11:09:01.0000] <hsivonen>
line 328 in

[11:09:02.0000] <hsivonen>
http://about.validator.nu/script.js

[11:11:00.0000] <SadEagle>
OK, that ought to work :-)

[11:12:00.0000] <SadEagle>
(what the heck?)

[11:13:00.0000] <hsivonen>
the only marginally special thing is that the button is not inserted into the document tree at that point

[11:33:00.0000] <SadEagle>
hsivonen: that's fun. it actually makes it disabled. It just doesn't look it

[11:33:01.0000] <hsivonen>
SadEagle: nice. :-)

[11:36:00.0000] <SadEagle>
o

[12:04:00.0000] <zcorpan_>
hsivonen: seems like boot() is run thrice

[12:04:01.0000] <hsivonen>
zcorpan_: hmm. it should run only twice

[12:05:00.0000] <zcorpan_>
hsivonen: you still have <body onload>

[12:05:01.0000] <hsivonen>
oh.

[12:05:02.0000] <hsivonen>
thanks

[12:06:00.0000] <zcorpan_>
why should it run twice?

[12:07:00.0000] <hsivonen>
zcorpan_: once after the form and another time when the load is complete in case the first time failed legacy Gecko in XHTML mode

[12:07:01.0000] <zcorpan_>
ok

[14:20:00.0000] <zcorpan_>
http://timepedia.blogspot.com/2008/01/chronoscope-demo-in-flash-whatwg-canvas.html

[14:20:01.0000] <zcorpan_>
"Text rendering is my biggest complaint about WHATWG Canvas, so it was a no-brainer to include it."

[14:21:00.0000] <Hixie>
i don't understand how to do text rendering on canvas, given that we can't guarentee fonts, and therefore the text would have radically different metrics on different platforms

[14:22:00.0000] <othermaciej>
web fonts!

[14:22:01.0000] <SadEagle>
heh.

[14:22:02.0000] <SadEagle>
I've seen different metrics with different freetype revisions

[14:23:00.0000] <Hixie>
one solution maybe is to give a rect instead of a point, and have the text fit the rect

[14:23:01.0000] <Hixie>
but then you can't make multiple lines the same font-size

[14:27:00.0000] <Philip`>
Why is it a problem if text has different metrics on different platforms? (I would expect 12px sans-serif on one platform is not going to be radically different to 12px sans-serif on a different platform, because normal fonts aren't that crazy, and it'll be as portable as tightly-sized CSS layouts are)

[14:29:00.0000] <zcorpan_>
yeah, i would think most authors are happy with slight differences. they get differences anyway if they want text on canvas today since they have to overlay divs or something

[14:29:01.0000] <zcorpan_>
and if they're not happy with it then there are web fonts :)

[14:31:00.0000] <Philip`>
(Firefox's canvas text implementation is annoying because even CSS-px-sized fonts change when you alter the browser's text size setting, so font sizes ought to be specified in canvas coordinate space units instead)

[14:33:00.0000] <SadEagle>
does it offer metrics info?

[14:34:00.0000] <Philip`>
You can get the width of a string, and that's it

[14:34:01.0000] <Philip`>
( http://developer.mozilla.org/en/docs/Drawing_text_using_a_canvas )

[14:35:00.0000] <Philip`>
so it's kind of useless if you e.g. want to know the line separation so you can write multiple lines, or if you e.g. want to know the bounding box so you can save the text onto a temporary canvas or something

[14:36:00.0000] <SadEagle>
part of the issue with text, though, is that the full APIs are hardly trivial.

[14:36:01.0000] <SadEagle>
especially if you want to do stuff like linebreaking right with BiDi

[14:37:00.0000] <Philip`>
But when there's no API at all, people do things like have a bitmap of all the ASCII characters, which is much worse that just having BiDi problems

[14:37:01.0000] <Philip`>
s/that/than/

[14:38:00.0000] <SadEagle>
yeah, but any real/official API has to get it right, IMHO

[14:39:00.0000] <Philip`>
Hasn't anybody already solved the problem of text drawing APIs, so we could just copy from them?

[14:40:00.0000] <Philip`>
It's not like it's something that nobody has ever wanted to do before

[14:40:01.0000] <Hixie>
looking at that moz api -- using the 'font' shorthand's syntax seems like a good technique, but i don't know how to combine that with using coordinte space units

[14:41:00.0000] <othermaciej>
Hixie: could do it like svg

[14:42:00.0000] <othermaciej>
"px" == "user unit", other units are fixed multiples

[14:42:01.0000] <Hixie>
yeah, that might work

[14:42:02.0000] <Hixie>
and obviously the mozMeasureText would have to be a getBoundingBox-style api

[14:43:00.0000] <Hixie>
maybe getTextMetrics("string") -> object with height, width, baseline offset

[14:47:00.0000] <Philip`>
(My particular desire for text metrics was so I could implement X3D text rendering, by drawing onto a temporary canvas and then loading that as an OpenGL texture and drawing it on a 3D quad, so it really needs to know the bounding box of the rendered string)

[14:52:00.0000] <hsivonen>
Hixie: oops. schema bug. thanks

[15:26:00.0000] <kig>
canvas text, draw elements on canvas

[15:26:01.0000] <kig>
or not, heck do i know

[15:28:00.0000] <kig>
point being that browsers already do all the weird text stuff, so there's no reason to re-invent the wheel

[15:29:00.0000] <Philip`>
kig: Drawing arbitrary HTML elements onto the canvas, so you can e.g. draw a <p> with some CSSed text in it?

[15:29:01.0000] <kig>
yes

[15:29:02.0000] <Hixie>
that becomes complicated with things like iframes and plugins

[15:30:00.0000] <Hixie>
not to mention determining exactly what is rendered

[15:30:01.0000] <Philip`>
How would it know how wide an area to wrap text and render into?

[15:30:02.0000] <kig>
use the box model for the rendered element

[15:31:00.0000] <Philip`>
since presumably you'd be drawing an HTML fragment that's not part of the document, since you don't want your canvas text elements to be displayed in the page too

[15:32:00.0000] <SadEagle>
might as well just position the elements over the canvas then :-)

[15:33:00.0000] <kig>
if you could change their composite op, use them as clip and draw on top of them, sure

[15:34:00.0000] <kig>
but i don't know. just string + font metrics would suffice for rewrite-the-world stuff

[15:35:00.0000] <Philip`>
You'd want to be able to transform the elements too

[15:35:01.0000] <SadEagle>
using as clip already requires stuff outside normal CSSed text, since you have to convert things to path.

[15:35:02.0000] <kig>
"justification? tex.js! text along path? arc-length reparametrized path interpolation is easy!"

[15:36:00.0000] <Philip`>
and for 3D canvas you'd want to do perspective transforms, which really doesn't seem like something that CSS should support itself

[15:36:01.0000] <zcorpan_>
http://www.google.com/search?q=http%3A%2F%2Fminghong.f2g.net%2F

[15:37:00.0000] <zcorpan_>
i wonder if google supports prefixed xhtml

[15:38:00.0000] <kig>
i'd assume that transform matrices are orthogonal to text.

[15:39:00.0000] <zcorpan_>
i don't follow

[15:39:01.0000] <kig>
02:41 < Philip`> and for 3D canvas you'd want to do perspective transforms, which really doesn't seem like something that CSS should support itself

[15:40:00.0000] <zcorpan_>
ah. i thought it was a reply to me...

[15:40:01.0000] <kig>
need sleep -> zzz

[15:40:02.0000] <zcorpan_>
/me too

[15:44:00.0000] <annevk>
/me can't sleep; has to get up in four hours :(


2008-01-31
[17:08:00.0000] <Hixie>
Philip`: yt?

[17:10:00.0000] <Philip`>
Hixie: Yes

[17:10:01.0000] <Philip`>
(though somewhat tired and not able to think perfectly coherently)

[17:10:02.0000] <Hixie>
i'm going through canvas feedback

[17:10:03.0000] <Hixie>
and got to your comment about 0x0 patterns

[17:11:00.0000] <Hixie>
and i realised that the spec doesn't say how to handle broken images as patterns either

[17:11:01.0000] <Hixie>
so i'm just gonna make both do the same thing

[17:11:02.0000] <Hixie>
i'm debating raise an exception, and return a pattern that is indistinguishable from a 1x1 transparent black pixel

[17:11:03.0000] <Philip`>
Broken images should have .complete = false and so it'll throw an exception if you try using them

[17:12:00.0000] <Hixie>
oh oops, it is defined. i missed that second paragraph. duh.

[17:12:01.0000] <Hixie>
well then i'll just make 0x0 canvases do that

[17:12:02.0000] <Hixie>
but we have other feedback to the effect that we should make fewer things raise exceptions

[17:12:03.0000] <Philip`>
Sounds reasonable

[17:12:04.0000] <Hixie>
so what "that" is might change

[17:14:00.0000] <Hixie>
safari seems to treat createPattern() with a non-complete image as an infinite black pattern (same as 'black')

[17:14:01.0000] <Philip`>
Is it not just ignoring the attempt to set fillStyle?

[17:15:00.0000] <Philip`>
I though it returned undefined from createPattern, or something like that

[17:15:01.0000] <Hixie>
ah yes

[17:15:02.0000] <Hixie>
indeed

[17:15:03.0000] <Philip`>
s//t/

[17:15:04.0000] <Hixie>
it does that with a 0x0 canvas too

[17:15:05.0000] <Hixie>
k

[17:21:00.0000] <Hixie>
well the mozilla guys are against not raising exceptions for exceptional errorneous inputs

[17:21:01.0000] <Hixie>
so

[17:22:00.0000] <Philip`>
I thought the specific complaints about exceptions were things like negative-sized rectangles, where the spec currently throws exceptions but it's sensible to define non-erroneous behaviour

[17:22:01.0000] <Hixie>
yeah

[17:22:02.0000] <Hixie>
that will certainly be changed

[17:22:03.0000] <Philip`>
(as opposed to cases which are clearly errors and can't do anything sensible)

[17:22:04.0000] <Hixie>
right

[23:55:00.0000] <MikeSmith>
wondering if anybody's see this:

[23:55:01.0000] <MikeSmith>
http://timepedia.blogspot.com/2008/01/chronoscope-demo-in-flash-whatwg-canvas.html

[01:13:00.0000] <krijnh>
annevk: zet je presentatie van 8 feb ook online?

[04:43:00.0000] <zcorpan_>
0004 / 345 Bad value “en-GB-hixie” for attribute “lang” from namespace “http://www.w3.org/XML/1998/namespace” on element “html” from namespace “http://www.w3.org/1999/xhtml”: Bad language tag: Bad variant subtag.

[04:48:00.0000] <zcorpan_>
Bad value “image” for attribute “type” on element “input” from namespace “http://www.w3.org/1999/xhtml”. seems like a confusing message

[04:49:00.0000] <Dashiva>
annevk, zcorpan_, Lachy: Add me to your default acid3 cc list, would you? :)

[04:49:01.0000] <hsivonen>
zcorpan_: or that a bug in v.nu?

[04:50:00.0000] <hsivonen>
is type='image' still in?

[04:50:01.0000] <zcorpan_>
it complains about either value='' or type='' when both are set, depending on which came first

[04:51:00.0000] <hsivonen>
fail-fast behavior :-)

[04:55:00.0000] <hsivonen>
hmm. perhaps I need to do some trick that reorders attributes before the RELAX NG stage

[04:56:00.0000] <zcorpan_>
i can't find where it says that image inputs can't have value

[04:57:00.0000] <Lachy>
Dashiva, what acid3 cc list?

[04:57:01.0000] <Lachy>
do you mean when we mail Hixie about bugs in the tests or something?

[04:59:00.0000] <zcorpan_>
ah, it doesn't apply according to the attribute summary in wf2, so i guess the prose bans it somewhere

[05:15:00.0000] <hsivonen>
hmm. someone has typoed and used a ns URI: http://www.w3.org/XML/1998/namespaces

[05:15:01.0000] <hsivonen>
that one would be hard to spot if V.nu allowed unknown namespaces to pass silently

[05:16:00.0000] <zcorpan_>
that might have been me :)

[05:16:01.0000] <zcorpan_>
if it was via the textarea interface

[05:17:00.0000] <hsivonen>
zcorpan_: it probably was. I don't log errors from POSTs, but it looks like I've accidentally logged unknown NS URIs from POSTed stuff

[05:18:00.0000] <zcorpan_>
(which wasn't a typo but experimenting)

[05:20:00.0000] <Philip`>
http://www.ninebynine.org/Software/HaskellUtils/HXmlToolbox-4.00/hdom/Namespace.hs - other people have made that typo

[05:21:00.0000] <zcorpan_>
hsivonen: it would be hard to spot only if the prefix was typoed, too

[05:22:00.0000] <zcorpan_>
since xmlns:xml="foo" is namespace-malformed

[05:25:00.0000] <zcorpan_>
hmm http://www.google.com/search?q=www.w3.org-1998-XML-namespace

[05:28:00.0000] <hsivonen>
POSTed unknown namespaces are no longer logged.

[05:51:00.0000] <Philip`>
/me sees that http://gnuplot.sourceforge.net/demo_svg/ uses <embed src=....svg>, and it doesn't work in Opera 9.2 (but does in 9.5 and FF2)

[05:57:00.0000] <hsivonen>
Philip`: with plug-in or without?

[05:58:00.0000] <Philip`>
hsivonen: No plugins

[05:58:01.0000] <hsivonen>
ok.

[05:59:00.0000] <hsivonen>
/me finds Verified Download Plug-in and Digital Rights Management Plugin on his plugi-in list

[06:04:00.0000] <Philip`>
Hmm, apparently I have plugins for QuickTime, RealPlayer, DivX and Windows Media

[06:04:01.0000] <Philip`>
seemingly due to mplayer pretending to be all of those

[10:18:00.0000] <Hixie>
if anyone wants to try to reply to this rant: http://blogs.techrepublic.com.com/programming-and-development/?p=599

[10:18:01.0000] <Hixie>
..then please be my guest

[10:18:02.0000] <Hixie>
i can't work out what to say, he doesn't make any specific criticisms

[10:24:00.0000] <SadEagle>
/me chuckles at the "impossible to print" part

[10:25:00.0000] <gavin>
he seems to think that the "issues that [proprietary] technologies try to solve" are "become difficult for the disabled, hard for search engines to parse, and impossible to print"?

[10:25:01.0000] <gavin>
that argument makes no sense

[10:29:00.0000] <Dashiva>
Well, impossible to print is probably DRM :)

[10:30:00.0000] <SadEagle>
gavin: it makes a bit more sense later. I guess it's an issue of what he views html as for --- as a pure document display/markup language.

[10:32:00.0000] <Dashiva>
But HTML fails at that too, compared to ps and pdf

[10:34:00.0000] <Dashiva>
He clarifies in a comment that he didn't want HTML4 changed at all (but he likes video and audio.

[10:35:00.0000] <SadEagle>
Well, I'd personally much prefer a less ambitious HTML5, but that doesn't make HTML5 -bad-. People have different goals.

[10:38:00.0000] <Dashiva>
And the web is moving away from static documents, pretending a spec can change that isn't very effective

[10:44:00.0000] <Hixie>
hsivonen: dude that is the most awesome data ever. well, for this week anyway.

[10:45:00.0000] <Hixie>
hsivonen: please do send more data on this at some point :-)

[11:18:00.0000] <hsivonen>
Hixie: thanks. I think I'll send some of my conclusions to the list as well. and yes, I intend to rerun the numbers later

[11:19:00.0000] <Hixie>
cool

[11:20:00.0000] <Hixie>
that e-mail alone has done more to convince me that we need to add Content-Type as a pragma to <meta> than any arguments up to this point

[11:20:01.0000] <Hixie>
not that i didn't agree with it before, but data is convincing.

[12:02:00.0000] <jgraham_>
/me reads the techrepulic article and thinks for King Canute

[12:03:00.0000] <Dashiva>
I notice one new reply suggests doing away with scripting entirely

[12:05:00.0000] <mpt>
I'm sure the XHTML2 WG would welcome new contributors

[12:06:00.0000] <jgraham_>
"In other words, no XHTML 2, just an XML representation of HTML 5. Bleh."

[12:07:00.0000] <jgraham_>
He can't join the XHTML2 WG because he doesn't believe it exists :)

[12:09:00.0000] <hsivonen>
that page has more than one body start tag...

[12:33:00.0000] <jruderman_>
Hixie: i noticed that google search often returns sites with invalid certs. do you know whether the spider "knows" which sites have invalid certs, or just ignores certs entirely?

[12:34:00.0000] <jruderman_>
Hixie: i'm curious because some people at mozilla wanted data on how many public-facing sites have invalid certs

[12:34:01.0000] <Hixie>
no idea

[12:36:00.0000] <jruderman_>
"HTML 5 takes this smart direction, locks it in a warehouse full of gasoline and ball bearings, and throws a match inside." sounds like a perfectly specific criticism.  why are you resorting to arson?

[12:36:01.0000] <Hixie>
have you any idea how hard it is to destroy tag soup?

[12:36:02.0000] <Hixie>
heavy fire is the only option

[12:37:00.0000] <Hixie>
not sure where he got the ball bearings from though

[12:38:00.0000] <Hixie>
why would we want to use ball bearings to burn something

[12:38:01.0000] <Hixie>
that seems weird

[12:38:02.0000] <jruderman_>
hmm, maybe that was his criticism. why *are* you using ball bearings when gasoline alone would do?

[12:39:00.0000] <Hixie>
we're not!

[12:39:01.0000] <Hixie>
doing so would be silly

[12:39:02.0000] <Dashiva>
Maybe the ball bearings are needed to keep the soup inside

[12:44:00.0000] <Hixie>
the tag soup is pretty viscous

[12:44:01.0000] <Hixie>
i don't think ball bearings would help

[12:46:00.0000] <jwalden>
/me thinks it's just the mainstream-ization of IEDs

[12:46:01.0000] <Hixie>
IEDs?

[12:47:00.0000] <gsnedders>
I thought the gasoline was just there to lubricate the ball bearings…

[12:47:01.0000] <jwalden>
improv explosive devices, popularized by an insurgency in a certain Middle-Eastern state?

[12:47:02.0000] <Hixie>
why throw a match then?

[12:47:03.0000] <gsnedders>
Hixie: I dunno, some other person firelighting for fun>

[12:47:04.0000] <gsnedders>
*?

[12:49:00.0000] <Hixie>
fair enough

[12:49:01.0000] <Hixie>
still a very confusing review

[12:59:00.0000] <zcorpan_>
speaking of confusing, can someone make sense of this? http://forums.whatwg.org/viewtopic.php?t=138

[13:03:00.0000] <kingryan>
/me is getting an "internal server error"

[13:04:00.0000] <zcorpan_>
hmm, me too. worked when i posted the link

[13:04:01.0000] <zcorpan_>
now it works again

[13:06:00.0000] <hsivonen>
Hixie: btw, I reran the numbers. I haven't written my commentary for the numbers, yet, though

[13:07:00.0000] <hsivonen>
Hixie: the new numbers are in the same location

[13:07:01.0000] <hsivonen>
now with 400 distinct URIs

[13:07:02.0000] <Hixie>
uri?

[13:08:00.0000] <hsivonen>
Hixie: http://hsivonen.iki.fi/test/moz/analysis.txt

[13:09:00.0000] <zcorpan_>
only 2 had duplicate ID

[13:09:01.0000] <Hixie>
zcorpan_: i got a 500 error trying to reply to that

[13:09:02.0000] <Hixie>
wonder why

[13:09:03.0000] <Hixie>
oh wait

[13:10:00.0000] <Hixie>
my entire site is giving issues

[13:10:01.0000] <Hixie>
/me gets on it

[13:10:02.0000] <Hixie>
uh oh

[13:10:03.0000] <Hixie>
i'm guessing acid3 hit some site

[13:10:04.0000] <zcorpan_>
css3.info

[13:10:05.0000] <Hixie>
some... bigger site

[13:11:00.0000] <zcorpan_>
css3.info claims the test is completed now

[13:12:00.0000] <eseidel>
/me thinks it's slightly scary that Hixie moved it to the main url :)

[13:13:00.0000] <Hixie>
is there a unix tool like uniq that will count how many instances of a line there were?

[13:13:01.0000] <Hixie>
oh nevermind

[13:14:00.0000] <Hixie>
uniq will do it

[13:14:01.0000] <Hixie>
-c

[13:14:02.0000] <Hixie>
http://www.cdr.cz/a/23477 seems to be the source of most hits

[13:14:03.0000] <Hixie>
hahahahahaha

[13:14:04.0000] <Hixie>
netscape 4 just crashes on acid3

[13:15:00.0000] <Hixie>
good times

[13:16:00.0000] <Hixie>
http://www.genbeta.com/2008/01/31-acid3-test-nuevos-navegadores-nuevas-pruebas also drove a lot of traffic

[13:16:01.0000] <Hixie>
and http://zaistniejwsieci.pl/2008/01/30/acid3-gotowy-przetestuj-swoja-przegladarke/

[13:16:02.0000] <Hixie>
all three drove hundreds more than css3.info

[13:16:03.0000] <gsnedders>
Eastern Europe, interesting.

[13:18:00.0000] <eseidel>
I guess adding Analytics to the test itself would kinda defeat the purpose :)

[13:18:01.0000] <Hixie>
:-)

[13:21:00.0000] <gsnedders>
eseidel: just use really complex ECMAScript for it! :P

[13:21:01.0000] <gsnedders>
then claim nobody visits it, because nothing ever registers as visiting it.

[13:22:00.0000] <Philip`>
IE 5.0 just has a script error and says "Scripting must be enabled to use this test."

[13:23:00.0000] <Philip`>
IE 5.5 gets "6 100"

[13:23:01.0000] <SadEagle>
konq 3.5.8 crashes :(

[13:23:02.0000] <Philip`>
Oh, it went up to "14 100"

[13:23:03.0000] <Hixie>
zcreplied

[13:23:04.0000] <Hixie>
er

[13:23:05.0000] <Hixie>
zcorpan left.

[13:23:06.0000] <Hixie>
oh well.

[13:25:00.0000] <gsnedders>
oh, and on a totally unrelated note, any suggestions for learning C++?

[13:25:01.0000] <Hixie>
fix some webkit bugs? :-)

[13:25:02.0000] <gsnedders>
Hixie: that's hard when you know no C++ :)

[13:25:03.0000] <Hixie>
probably a good way to learn :-)

[13:25:04.0000] <Hixie>
(i'm serious)

[13:26:00.0000] <gsnedders>
need some to start with, really, though.

[13:26:01.0000] <SadEagle>
gsnedders: what do you know now?

[13:26:02.0000] <gsnedders>
SadEagle: PHP, Python, and a little Obj-C

[13:26:03.0000] <gsnedders>
(but when I say little I mean really little)

[13:27:00.0000] <gsnedders>
SadEagle: oh, and I know BASIC from school

[13:27:01.0000] <othermaciej>
gsnedders: in all seriousness, it's a pretty good way to learn, if you already know some programming

[13:27:02.0000] <gsnedders>
/me spits at the ground at the very mention of BASIC

[13:28:00.0000] <Philip`>
Why do you want to learn C++?

[13:28:01.0000] <othermaciej>
gsnedders: though doing a few tutorial excercises in a language with explicit pointers might help preparation

[13:28:02.0000] <gsnedders>
Philip`: ironically for this discussion, WebKit

[13:28:03.0000] <jgraham_>
/me predicted that answer

[13:29:00.0000] <SadEagle>
gsnedders: good. That's the value of learning BASIC: it teaches you what a bad/primitive programming language looks like, so you can appreciate the important language features it lacks :-)

[13:29:01.0000] <SadEagle>
/me kidnaps gsnedders

[13:29:02.0000] <Philip`>
gsnedders: You could learn by writing patches for Mozilla

[13:29:03.0000] <Hixie>
i'd definitely start on webkit rather than mozilla

[13:29:04.0000] <othermaciej>
gsnedders: pointers and memory management are the most likely things to trip up someone who's only programmed in higher-level languages

[13:30:00.0000] <gsnedders>
SadEagle: "jeff!!! was NOT here either, what have u done with him?! i hope u havent jeff-napped him or something, because beleive me, hes mine, FOR EVER!" (to quote a girl from school)

[13:30:01.0000] <Hixie>
unless what you're trying to learn is appreciation for sane code

[13:30:02.0000] <gsnedders>
(but she can't spell my name, and she calls me geoff, so ergh)

[13:31:00.0000] <gsnedders>
othermaciej: pointers I probably do more or less know enough about, it's the memory management where I'll need the most practise

[13:31:01.0000] <Dashiva>
Crazy++

[13:31:02.0000] <gsnedders>
Hixie: I've got that from code I wrote now around three years ago that I still maintain, having never totally rewritten it :)

[13:31:03.0000] <Dashiva>
Memory management is simple, it's just an eternal process of not slipping up

[13:32:00.0000] <Hixie>
zcorpan_: replied to that forum post

[13:32:01.0000] <zcorpan_>
hsivonen: if i got the numbers right, about 27% used the html5 doctype in your sample

[13:32:02.0000] <gsnedders>
in C++, does anything free memory automagically? Leaving a function and local variables in that?

[13:32:03.0000] <Philip`>
Memory management is just pointers, and remembering what they're pointing at

[13:32:04.0000] <zcorpan_>
Hixie: thanks

[13:33:00.0000] <gsnedders>
othermaciej: as long as you can stop anyone from killing me for my useless bad buggy patches, I'll try sometime :)

[13:35:00.0000] <othermaciej>
gsnedders: there's stack memory and heap memory

[13:35:01.0000] <Philip`>
gsnedders: Whenever memory is allocated with "new", it has to be freed with "delete", and that's about the only rule; everything else is automatic

[13:35:02.0000] <othermaciej>
gsnedders: stack memory is freed when you call the function, but not heap memory

[13:35:03.0000] <othermaciej>
however, many C++ programs use a pattern where heap memory is pointed to by a stack object with a destructor that frees it automatically

[13:36:00.0000] <gsnedders>
I'm sure I'm more confused now than I was a minute ago.

[13:36:01.0000] <Dashiva>
Philip`: Unless you malloc :)

[13:37:00.0000] <othermaciej>
gsnedders: that's because it's confusing (tragically)

[13:37:01.0000] <zcorpan_>
hsivonen: ah, make that 29%...

[13:37:02.0000] <Dashiva>
They didn't invent gc because doing it manually was fun

[13:37:03.0000] <Philip`>
Dashiva: or calloc or realloc or strdup or I can't remember what else, but I was trying to avoid details :-p

[13:37:04.0000] <gsnedders>
how useful do you think it'd be to get back in practice with the little Obj-C I once knew before trying to take on C++>

[13:37:05.0000] <gsnedders>
s/>/?/

[13:38:00.0000] <Philip`>
Just replace all occurrences of T* with std::tr1::shared_ptr<T*> and you'll be fine

[13:38:01.0000] <gsnedders>
/me squints

[13:38:02.0000] <Dashiva>
I still have nightmares about stl core code

[13:40:00.0000] <Philip`>
It might be useful to do something with plain C (write chtml5lib!) if you want to learn how manual memory management works so you can understand what C++ is doing

[13:41:00.0000] <gsnedders>
Philip`: learning C how? :P

[13:41:01.0000] <Philip`>
By writing code :-)

[13:41:02.0000] <gsnedders>
while (need_to_learn) learn_another_language();

[13:41:03.0000] <othermaciej>
Philip`: now you're just trying to confuse him further

[13:41:04.0000] <Philip`>
#define need_to_learn 1

[13:42:00.0000] <SadEagle>
Philip`: unfortunately, the first thing C programmers learning to write C++ need to do is to forget C.

[13:42:01.0000] <othermaciej>
gsnedders: Obj-C and C++ are not that deeply conceptually different

[13:42:02.0000] <othermaciej>
(though ObjC developers will tell you otherwise)

[13:43:00.0000] <gsnedders>
what's Safari itself written in, BTW?

[13:43:01.0000] <Philip`>
You could try OCaml instead

[13:43:02.0000] <Philip`>
That's got a C in its name

[13:43:03.0000] <gsnedders>
Philip`: LOL

[13:43:04.0000] <gsnedders>
really _useful_ for C++. :P

[13:43:05.0000] <jgraham_>
Incidentally if you do decide to contribute to chtml5lib , it might bubble further up my priority queue

[13:44:00.0000] <gsnedders>
/me ought to have a to-do list on backing-store and not just in memory

[13:44:01.0000] <Philip`>
/me has a to-do set rather than a to-do list

[13:44:02.0000] <jgraham_>
gsnedders: Well they start all the comp-sci's here on ML (which I think OCaml is based on) so it must be good for learning something

[13:45:00.0000] <gsnedders>
jgraham_: here == Cam, right?

[13:45:01.0000] <jgraham_>
Indeed

[13:45:02.0000] <jgraham_>
Philip` could tell you more :)

[13:45:03.0000] <gsnedders>
/me wonders if jgraham_ and Philip` will be around in mid-May, or if they'll have run away

[13:46:00.0000] <jgraham_>
/me will be around mot of May, but probably not the 27-30th

[13:46:01.0000] <jgraham_>
s/mot/most/

[13:46:02.0000] <Philip`>
The first term has ML, but the second has Java and most of the rest of the course is also Java :-(

[13:46:03.0000] <gsnedders>
/me will be in Cambridge around the 14th, most likely

[13:47:00.0000] <jgraham_>
gsnedders: Any reason

[13:47:01.0000] <jgraham_>
?

[13:47:02.0000] <SadEagle>
ML  is quite tighly connected with formal types.

[13:47:03.0000] <Philip`>
/me will probably be here nearly constantly for the next few years

[13:47:04.0000] <gsnedders>
jgraham_, Philip`: see you (mad) people :)

[13:48:00.0000] <jgraham_>
Philip`: All the people I know who did NatSci+25%CompSci 1A and then switched to NatSci still complain about the ML 7 years later :)

[13:49:00.0000] <jgraham_>
("All the people" being 2, so not a great sample)

[13:50:00.0000] <hsivonen>
zcorpan_: yeah 29%

[13:52:00.0000] <gsnedders>
jgraham_, Philip`: But yeah, if either of you are around, I'm more than willing to meet up with either (or both) of you sometime while I'm there

[13:52:01.0000] <jgraham_>
gsnedders: Sure

[13:53:00.0000] <gsnedders>
/me doesn't know for certain when he'll be there

[13:53:01.0000] <jgraham_>
Is it me or is the HTMLWG  pretty much inactive at the moment?

[13:54:00.0000] <gsnedders>
I'm going down for a memorial service for my grandmother, at an undecided time, who lived in Cambridge for c. 50 years until a few weeks before she died

[13:54:01.0000] <gsnedders>
jgraham_: yeah

[13:56:00.0000] <hsivonen>
jgraham_: let's see how much reaction my suggestion to make border='0' and friends conforming gets

[13:56:01.0000] <gsnedders>
/me runs off

[13:56:02.0000] <gsnedders>
/me waves

[13:58:00.0000] <Hixie>
jgraham_: lots of activity on the -comments list (relatively speakiing)

[13:58:01.0000] <jgraham_>
hsivonen: Well I didn't get a single response, positive or negative about table headers, which I found a little surprising. I don't expect that meant tacit agreement from all parties though :)

[13:58:02.0000] <Hixie>
but i wouldn't complain about the group being inactive...

[14:02:00.0000] <jgraham_>
Hixie: The only concern I have is that all the detailed discussions that people will expect to happen before CR aren't happening and so the spec will get stuck later in a done but unpublished state (though maybe that doesn't matter if vendors don't care)

[14:04:00.0000] <Hixie>
the longer the bikeshedding is delayed, the better, since once the spec is implemented, it's set in stone.

[14:04:01.0000] <hsivonen>
Hixie: I don't consider the header association algorithm bikeshedding

[14:05:00.0000] <Hixie>
sure, i was just talking about "the detailed discussions that people will expect to happen before CR" that aren't happening

[14:05:01.0000] <Hixie>
i assumed that meant bikeshedding :-)

[14:05:02.0000] <hsivonen>
ok

[14:05:03.0000] <hsivonen>
heh

[14:05:04.0000] <Hixie>
i'm not seeing any discussions that i want to have happen that aren't happening

[14:06:00.0000] <Hixie>
but then i'm still dealing with the discussions from 2 years ago

[14:06:01.0000] <hsivonen>
Hixie: what's your inital reaction to making border='0', language='JavaScript', etc. conforming?

[14:07:00.0000] <Hixie>
border=0 i'm against

[14:07:01.0000] <Hixie>
actually i guess i'm against both

[14:07:02.0000] <Hixie>
though language='JavaScript' is the default so it'd be harmless, i think

[14:07:03.0000] <Hixie>
what's the advantage, other than hiding those errors from users?

[14:07:04.0000] <Hixie>
er, authors

[14:07:05.0000] <hsivonen>
Hixie: border='0' is a cowpath if there ever was one

[14:08:00.0000] <Hixie>
border=0 is not the default

[14:08:01.0000] <zcorpan_>
it should be... :)

[14:08:02.0000] <Hixie>
that's a different matter

[14:08:03.0000] <hsivonen>
Hixie: hiding them leaves attention to stuff that matters

[14:08:04.0000] <zcorpan_>
it is in opera and safari

[14:08:05.0000] <jgraham_>
zcorpan_: Wrong tense :)

[14:08:06.0000] <Hixie>
hsivonen: if i was an author, i would want to know about spurious attributes like those

[14:08:07.0000] <SadEagle>
zcorpan_: it sort of used to be in konq, and people whined :-)

[14:09:00.0000] <zcorpan_>
SadEagle: really?

[14:09:01.0000] <hsivonen>
Hixie: depends a lot on whether updating existing site or syndicading content or whether creating a new bandwidth-optimized site

[14:09:02.0000] <SadEagle>
zcorpan_: well, not as much about border 0, but about a solid border and not a cheesy 3D effect, IIRC

[14:10:00.0000] <Philip`>
SadEagle: Indeed - subsets of ML are used here for teaching about types, and about functional programming and semantics and things, so I suppose it actually comes up nearly as much as Java (though far less in terms of time spent programming in the languages)

[14:10:01.0000] <Hixie>
hsivonen: i wouldn't object to a validator making a value judgement and moving all that kind of errors to a "site cleanup issues" section of the results

[14:10:02.0000] <jgraham_>
hsivonen: Also there is a marketing reason not to make too many presentation attributes conforming, because you loose but-in from the type of people who speak at web conferences and those people can have substantial effects on people's markup usage

[14:10:03.0000] <Hixie>
hsivonen: but i don't think we should make them allowed

[14:10:04.0000] <Hixie>
s/loose but-in/lose buy-in/ :-)

[14:10:05.0000] <Philip`>
gsnedders: Sounds like a plausible plan :-)

[14:10:06.0000] <jgraham_>
:-p 

[14:10:07.0000] <Hixie>
though the loose butting-in of those people...

[14:10:08.0000] <hsivonen>
jgraham_: that's why only '0' or '100%' should be conforming

[14:11:00.0000] <hsivonen>
jgraham_: it doesn't allow full CSSless design

[14:11:01.0000] <Hixie>
i think that'd be too confusing a message

[14:11:02.0000] <Hixie>
"you can do this but only for these values"

[14:11:03.0000] <Hixie>
better to just have a clear message

[14:11:04.0000] <Hixie>
"no presentation stuff in html, use css"

[14:11:05.0000] <jgraham_>
hsivonen: HTML5 has too many weird quirks already

[14:11:06.0000] <Hixie>
yeah, really

[14:11:07.0000] <zcorpan_>
look what happened with <font>

[14:12:00.0000] <zcorpan_>
i think border='0' is in the same bucket

[14:12:01.0000] <zcorpan_>
to be honest

[14:13:00.0000] <Hixie>
what happened with <font>?

[14:13:01.0000] <zcorpan_>
people thought html5 was the worst idea ever because it allowed <font>

[14:14:00.0000] <Hixie>
people thought html5 was the worst idea ever because it didn't allow style="", too

[14:14:01.0000] <Hixie>
so i don't know

[14:14:02.0000] <Hixie>
but yes

[14:15:00.0000] <Hixie>
i agree with your conclusion

[14:15:01.0000] <zcorpan_>
lack of style='' didn't get the same attention as precense of font

[14:15:02.0000] <SadEagle>
did the lack of style thing change?

[14:15:03.0000] <jgraham_>
SadEagle: Not yet :)

[14:15:04.0000] <Hixie>
no, nor did the presence of <font>

[14:15:05.0000] <Hixie>
still not really sure how to deal with them

[14:15:06.0000] <SadEagle>
It seems some people replace style="" by a unique classname and such in the wild.

[14:15:07.0000] <zcorpan_>
in fact i haven't seen anyone complain about lack of style='' outside the wg

[14:15:08.0000] <jgraham_>
(validator.nu doesn't have an error or style="")

[14:16:00.0000] <jgraham_>
s/or/on/

[14:16:01.0000] <Hixie>
i'm still considering having a "low quality" version of html5 conformance, which you can use in rapid prototyping

[14:16:02.0000] <SadEagle>
(which produces some honking ugly stylesheets)

[14:16:03.0000] <hsivonen>
jgraham_: It's too obvious that style='' needs to be allowed, so I never bothered taking it out

[14:17:00.0000] <jgraham_>
Hixie: I on't see a good reason to disallow style="" really. Simply disallowing style isn't going to magically make all pages work in a media independent way

[14:17:01.0000] <zcorpan_>
s/precense/presence/

[14:17:02.0000] <Hixie>
jgraham_: nor is disallowing layout tables, but i still think we should do that

[14:18:00.0000] <Hixie>
style="" and .style have many use cases, but none actually apply to final-form web sites

[14:18:01.0000] <Hixie>
they all apply to prototyping, demos, media-specific code, etc

[14:18:02.0000] <zcorpan_>
.style is needed for animation stuff

[14:18:03.0000] <hsivonen>
Hixie: what about dbaron's point #2 in http://lists.w3.org/Archives/Public/www-style/2008Jan/0598.html ?

[14:19:00.0000] <Philip`>
Modern web applications are all about early releases and constant updates and perpetual betas, so things are always in prototyping and never reach a final-form state

[14:20:00.0000] <zcorpan_>
i've also used style='' for things that are on final-form web sites but for things that are there on a temporary basis because i don't want to mess with the external style sheet and its caching...

[14:20:01.0000] <jgraham_>
I thought some of the use cases put forward in the WG were convincing in the sense that there wasn't an obvious, equally painless method of achieving the effect without @style (though there might be a non-obvious or hard way of doing it) 

[14:20:02.0000] <hsivonen>
I'd be interested to see Sam's take on border='0' considering how often it appears on planet intertwingly

[14:21:00.0000] <Hixie>
hsivonen: btw, content-type is in

[14:21:01.0000] <hsivonen>
Hixie: great.

[14:21:02.0000] <hsivonen>
Hixie: with mandatory text/html as the type?

[14:21:03.0000] <Hixie>
zcorpan_: no, you can use override style. but eventually, we should use safari's animation stuff, too.

[14:21:04.0000] <Hixie>
hsivonen: yes

[14:21:05.0000] <Hixie>
http://www.whatwg.org/specs/web-apps/current-work/#meta0

[14:22:00.0000] <zcorpan_>
Hixie: override style?

[14:22:01.0000] <Hixie>
cssom stuff

[14:22:02.0000] <Dashiva>
But if .style is allowed and @style is not, you're left with something you can't serialize

[14:22:03.0000] <Hixie>
might not be implemented, though

[14:22:04.0000] <Hixie>
Dashiva: we already have that with <input>

[14:22:05.0000] <Hixie>
amongst other things

[14:23:00.0000] <hsivonen>
Hixie: "must have a value consisting either of the literal string "text/html;", followed by a single U+0020 SPACE character, followed by the literal string "charset=", followed by the character encoding name of the character encoding declaration." I can't parse "either"

[14:25:00.0000] <Hixie>
uh

[14:25:01.0000] <Hixie>
why is that word there

[14:25:02.0000] <Hixie>
ignore that word

[14:25:03.0000] <Hixie>
oh, copy/paste edit error

[14:26:00.0000] <hsivonen>
ok :-)

[14:26:01.0000] <Philip`>
Is content="text/html" not allowed?

[14:26:02.0000] <Hixie>
no

[14:26:03.0000] <Hixie>
not allowed

[14:27:00.0000] <zcorpan_>
can't that be abbreviated to "must have a value consisting of the literal string "text/html; charset=" followed by..." ?

[14:28:00.0000] <Hixie>
it could, except that it might word-wrap at the space

[14:28:01.0000] <Hixie>
and if i use a NBSP instead of a space, then people will get confused...

[14:28:02.0000] <Hixie>
and all kinds of problems like that

[14:28:03.0000] <hsivonen>
<nobr>!

[14:28:04.0000] <zcorpan_>
<nobr> ;)

[14:28:05.0000] <zcorpan_>
bah you beat me to it

[14:28:06.0000] <Dashiva>
white-space: nowrap;

[14:34:00.0000] <zcorpan_>
Hixie: i don't think the way html5 defines http-equiv reflects how browsers have to implement it

[14:34:01.0000] <Hixie>
hsivonen: 

[14:34:02.0000] <Hixie>
0020 / 400Bad value “_top” for attribute “target” on element “a” from namespace “http://www.w3.org/1999/xhtml”: Bad browsing context name: Browsing context name started with the underscore and used a reserved keyword “top”.

[14:34:03.0000] <Hixie>
hsivonen: ^ that seems like a bogus error (_top is allowed)

[14:34:04.0000] <Hixie>
zcorpan_: oh?

[14:35:00.0000] <zcorpan_>
Hixie: e.g., i think we have to support things like cache-control as meta, and refresh as a http header

[14:35:01.0000] <Hixie>
as defined, nothing stops you from handling refresh as an http header

[14:35:02.0000] <Hixie>
and if needed, we could add cache-control

[14:36:00.0000] <zcorpan_>
ok

[14:36:01.0000] <hsivonen>
Hixie: I'm pretty sure it wasn't allowe two hours ago

[14:36:02.0000] <zcorpan_>
i don't have data at hand but i'm pretty sure we'd get lots of bug reports if we dropped support for most http-equiv values

[14:36:03.0000] <Hixie>
hsivonen: i haven't changed that section of the spec this year :-)

[14:36:04.0000] <hsivonen>
whoa!

[14:37:00.0000] <Hixie>
zcorpan_: it would be helpful to know which are supported and which should be in the spec

[14:38:00.0000] <Hixie>
zcorpan_: there are certainly many that we _don't_ want to support, and quite possible some that we really do that aren't on the list

[14:38:01.0000] <hsivonen>
Hixie: fix compiling. thanks

[14:38:02.0000] <zcorpan_>
Hixie: true

[14:39:00.0000] <Hixie>
"0018 / 400Entity reference was not terminated by a semicolon." is an error I'd be interested in mitigating

[14:39:01.0000] <Hixie>
not sure how easily we can do so

[14:39:02.0000] <Hixie>
"0094 / 400Text after “&” did not match an entity name." too

[14:39:03.0000] <hsivonen>
Hixie: actually, I don't feel a need to eliminate the former. I want to eleminate the latter.

[14:40:00.0000] <hsivonen>
but even more, I want to make border='0' conforming

[14:40:01.0000] <Hixie>
why?

[14:40:02.0000] <hsivonen>
it is harmless except for bandwidth cost

[14:40:03.0000] <Hixie>
it's as harmless as <center>, no?

[14:41:00.0000] <hsivonen>
and editing it out of every single image embedding snippet offered on the Web is a waste of time

[14:41:01.0000] <hsivonen>
Hixie: <center> is a bit different

[14:41:02.0000] <hsivonen>
Hixie: <center> doesn't fix an awful browser default and it isn't as common

[14:42:00.0000] <hsivonen>
Hixie: OTOH, <center> makes centering easy while CSS doesn't

[14:42:01.0000] <zcorpan_>
/me still thinks the browser default should be fixed ;)

[14:43:00.0000] <Hixie>
zcorpan_: rendering section. send feedback. :-)

[14:43:01.0000] <hsivonen>
zcorpan_: I think the browser default should be fixed for the sake of coming generations of Web authors

[14:43:02.0000] <hsivonen>
zcorpan_: and border='0' should be allowed to stop bothering the current generation

[14:44:00.0000] <zcorpan_>
makes sense, but i'm afraid that allowing border='0' is going to backfire because the current generation doesn't want html5 to allow "presentational markup"

[14:45:00.0000] <Hixie>
hsivonen: why would you rather the spec allow it as opposed to having the validator move that kind of error to a separate "harmless issues that you might want to fix to save bandwidth" area?

[14:46:00.0000] <hsivonen>
zcorpan_: the part of the current generation making top sites seems to be in habit of using it

[14:46:01.0000] <Philip`>
<meta name="content-type" content="..."> seems reasonably common - do browsers support that?

[14:47:00.0000] <hsivonen>
Hixie: I'd rather have validator warnings about wasteful but otherwise harmless stuff

[14:47:01.0000] <Hixie>
hsivonen: well, i guess i could be convinced that this is similar to the style="" attribute, and could be convinced that it would be something to put into a "low quality" conformance level

[14:48:00.0000] <hsivonen>
Hixie: I'm not a fan of conformance levels, so I'd prefer to bargain with errors

[14:48:01.0000] <hsivonen>
doh

[14:48:02.0000] <hsivonen>
warnigns

[14:48:03.0000] <hsivonen>
typo++

[14:49:00.0000] <Hixie>
i don't think the spec should allow useless stuff

[14:49:01.0000] <Hixie>
harmless though it may be

[14:49:02.0000] <hsivonen>
Hixie: we are already down that slippery slope with /> and xmlns

[14:49:03.0000] <hsivonen>
(allowing those is good, imo)

[14:50:00.0000] <Hixie>
i'm against the whole xmlns="" nonsense and /> nonsense that we have now, but at least that has some semi-sane value (in terms of making it harder to argue that a document is xml and not html when sent as text/html)

[14:50:01.0000] <zcorpan_>
hsivonen: i thought you were against /> at first?

[14:50:02.0000] <Hixie>
wow, you have 4 instances of "Attribute “abbr” not allowed on element “th”"

[14:50:03.0000] <hsivonen>
zcorpan_: could be. I'm not any longer

[14:50:04.0000] <zcorpan_>
hsivonen: ok

[14:51:00.0000] <Hixie>
hsivonen: "Attribute "accept-charset" not allowed on element "form" at this point." seems bogus, isn't accept-charset allowed on <form>?

[14:51:01.0000] <Philip`>
http://philip.html5.org/data/meta-content-type.txt

[14:51:02.0000] <Philip`>
Hmm, content="text/html" isn't that common

[14:53:00.0000] <zcorpan_>
Philip`: hmm. opera thinks that's application/octet-stream

[14:53:01.0000] <zcorpan_>
content sniffing++

[14:53:02.0000] <gsnedders>
Saf3 too

[14:53:03.0000] <hsivonen>
Hixie: fix in build

[14:53:04.0000] <Hixie>
Philip`: i've made the space in the content-type stuff optional, given that data

[14:54:00.0000] <hsivonen>
Hixie: given Philip`'s data, the space should probably be optional

[14:54:01.0000] <Hixie>
hah

[14:54:02.0000] <Hixie>
way ahead of you

[14:54:03.0000] <Hixie>
:-P

[14:54:04.0000] <hsivonen>
thanks

[14:54:05.0000] <Philip`>
zcorpan_: Opera 9.2 says "Type  text/plain" after popping up the file-download box

[14:54:06.0000] <Hixie>
I assume that "Attribute "alt" not allowed on element "input" at this point." was because the type="" attribute wasn't "image"

[14:55:00.0000] <Philip`>
so at least it's not lying about the type, but it is handling it wrong

[14:55:01.0000] <Philip`>
(for some definition of "wrong")

[14:55:02.0000] <zcorpan_>
Philip`: i pressed open, then it showed it as normal text/plain but the info sidebar says it's a/o-s

[14:55:03.0000] <hsivonen>
Hixie: yeah

[14:56:00.0000] <Hixie>
hsivonen: another reason i'm against border=0 being allowed is that i don't want to have anything deprecated. if we're trying to phase something out, it shouldn't be allowed. that's why i was against adding the meta http-equiv=content/type thing, but eventually i just realised we shouldn't bother trying to get rid of it, and that's why i added it -- i don't treat it as something we're phasing out.

[14:56:01.0000] <Hixie>
hsivonen: i really do want to phase <img border=0> out

[14:57:00.0000] <Hixie>
same with <script language>

[14:57:01.0000] <hsivonen>
Hixie: I think we don't need to deprecate stuff that we don't particularly encourage authors to use

[14:57:02.0000] <Hixie>
deprecate = not particularly encourage

[14:58:00.0000] <hsivonen>
Hixie: we can just allow those, put in warnings and let them fade without deprecation

[14:58:01.0000] <hsivonen>
deprecate = source of endless debates

[14:58:02.0000] <Hixie>
if we want them to fade, then we shouldn't allow them, imho

[14:58:03.0000] <Hixie>
i think growing pains type stuff belongs in the validator as a ui distinction, not in the spec

[14:59:00.0000] <hsivonen>
I can let them fade, but I don't particularly want them to

[14:59:01.0000] <Hixie>
i do :-)

[15:00:00.0000] <hsivonen>
Hixie: I already have the Lax Content-Type box for RFC 3023...

[15:00:01.0000] <Philip`>
jruderman: It's easy to find ~1000 https sites from dmoz.org, to look for invalid certificates, but I don't if that's enough to be informative

[15:01:00.0000] <hsivonen>
Hixie: I think needing a checkbox for turning a spec off is a sign of the spec needed adjustment

[15:02:00.0000] <hsivonen>
s/needed/needing/

[15:02:01.0000] <Hixie>
hsivonen: i'm not suggesting a checkbox

[15:02:02.0000] <Hixie>
hsivonen: i'm suggesting that the report separate those errors out and list them after the other errors, as things that are errors but likely harmless.

[15:03:00.0000] <Hixie>
"Bad value "2008-01-18T14:33:01-0800" for attribute "datetime" on element "time"" is an interesting error, maybe we should relax that syntax, if that is found to be common. more study required.

[15:03:01.0000] <Philip`>
Hmm, Opera displays http://philip.html5.org/data/meta-content-type.txt as utf-8 but Firefox displays it as iso-8859-1

[15:04:00.0000] <gsnedders>
Hixie: IMO we should allow all possible ISO8601 forms of calendar date + time

[15:04:01.0000] <gsnedders>
(but not other date forms like week dates and ordinal dates)

[15:04:02.0000] <Hixie>
that's a whole lot of syntax

[15:04:03.0000] <Hixie>
there's little chance of that happening

[15:05:00.0000] <Philip`>
/me adds an HTTP charset

[15:05:01.0000] <Philip`>
...and now Opera seems to display it as text properly, rather than sniffing it as undisplayable

[15:06:00.0000] <gsnedders>
Hixie: I don't think we need to change that much, though

[15:07:00.0000] <gsnedders>
or rather, if we require it to be a full date/time format

[15:07:01.0000] <Hixie>
not sure what you mean

[15:08:00.0000] <gsnedders>
we actually require everything up to seconds to be present

[15:09:00.0000] <Hixie>
i think ISO8601 allows more than you realise

[15:09:01.0000] <gsnedders>
like what?

[15:09:02.0000] <Hixie>
W23-2004

[15:09:03.0000] <Hixie>
and all kinds of other stuff

[15:09:04.0000] <Hixie>
it's a crazy spec that defines all kinds of random stuff

[15:10:00.0000] <gsnedders>
Hixie: "calendar date" as I said above excludes week dates like that

[15:10:01.0000] <gsnedders>
Hixie: "calendar dates expressed in terms of calendar year, calendar month and calendar day of the month

[15:10:02.0000] <gsnedders>
(to quote ISO8601:2004)

[15:11:00.0000] <Hixie>
you have access to the spec?

[15:12:00.0000] <gsnedders>
yes, I had to implement it once. Not fun.

[15:12:01.0000] <Hixie>
ah

[15:12:02.0000] <gsnedders>
Horrible spec, actually.

[15:12:03.0000] <Hixie>
/me doesn't recall ever actually seeing it, only having second hand reports of it

[15:13:00.0000] <gsnedders>
First and second editions apparently allow even more than the forth edition apparently

[15:14:00.0000] <hsivonen>
the used to be final committee drafts on the Web

[15:14:01.0000] <hsivonen>
s/the/there/

[15:15:00.0000] <Hixie>
i should get google to just buy me a copy

[15:15:01.0000] <gsnedders>
<http://feedparser.org/docs/date-parsing.html> lists some forms that aren't valid under ISO8601:2004 and only under earlier editions

[15:15:02.0000] <gsnedders>
s/and only/but are/

[15:16:00.0000] <gsnedders>
the -yy ones are all invalid ISO8601:204

[15:16:01.0000] <gsnedders>
*2004

[15:18:00.0000] <Philip`>
It'll be interesting to see how date/time formats develop once humans start regularly moving relativistically

[15:20:00.0000] <jgraham_>
s/once/if/ :)

[15:21:00.0000] <Hixie>
/me has now read every error in henri's datafile

[15:23:00.0000] <Philip`>
http://philip.html5.org/data/meta-http-equiv.txt - "Содержимое-Тип"?

[15:23:01.0000] <Philip`>
/me guesses that's Russian for Content-Type

[15:24:00.0000] <Philip`>
http://tnt.udm.ru/ - ah, it is

[15:25:00.0000] <Hixie>
yay for curl | sort -n

[15:28:00.0000] <Philip`>
Oh, good idea

[15:28:01.0000] <Philip`>
/me updates the files so they're sorted by default

