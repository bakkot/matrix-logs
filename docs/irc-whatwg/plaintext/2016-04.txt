2016-04-01
[20:24:52.0000] <MikeSmith>
krijn: I wonder if we could get the Web History Project to archive the logs

[20:25:14.0000] <MikeSmith>
krijn: and maybe also provide some funds, however modest

[20:25:40.0000] <MikeSmith>
krijn: we have 10 years of important history there

[20:26:44.0000] <MikeSmith>
I mean other than just whatever is at archive.org

[21:58:36.0000] <krijn>
MikeSmith: if I can do anything to help, let me know!

[22:18:39.0000] <MikeSmith>
krijn: FYI https://lists.w3.org/Archives/Public/public-webhistory/2016Apr/0000.html

[22:30:32.0000] <krijn>
Thanks The Mike Smith :)

[22:31:31.0000] <krijn>
I can easily make a static dump of all files and add a redirect to a new location

[22:33:15.0000] <MikeSmith>
yeah I am partly interested in just raising awareness about the logs among web-archaeologist people who could benefit from knowing about them

[22:33:24.0000] <MikeSmith>
heh yeah I don’t know where that “the” in “the Krijn Hoetmer” crept in from

[02:20:59.0000] <Ms2ger>
Lovely: https://twitter.com/LeonieWatson/status/715788733040168960

[02:21:26.0000] <Ms2ger>
TabAtkins, you know why google is wasting money on the fork?

[02:22:17.0000] <hallvors>
There still isn't a spec which can give a canonical answer to whether a key should fire 'keypress' events or not, right?

[02:25:18.0000] <annevk>
hallvors: nope

[02:26:35.0000] <hallvors>
I'm pretty sure I wrote several tests that could be applied..

[02:26:43.0000] <hallvors>
..to create such a spec

[02:27:21.0000] <hallvors>
s/applied/useful to sound less like a chatbot or something

[02:28:56.0000] <annevk>
hallvors: in theory https://www.w3.org/TR/uievents/ should do it, but they have been opting out of most hard things it seems

[02:30:28.0000] <hallvors>
Right. I did scan through it..

[02:31:14.0000] <annevk>
Most spec editors seem to fancy adding cruft, specifying existing cruft isn't much loved

[02:32:02.0000] <annevk>
That nobody seems to learn that the existing cruft influences the new cruft is a little worrisome

[03:26:05.0000] <jgraham>
hallvors: You don't sound nearly nazi enough to be a chatbot

[03:32:28.0000] <hallvors>
jgraham: thanks :)

[04:56:47.0000] <annevk>
krijn: btw, krijn.html5.org is still a thing if you need space

[05:15:49.0000] <nox>
annevk: https://github.com/whatwg/url/commit/ae7a0f6f4f0314fa1af163844c33cfdefd83334f Is it intended that URL.href's setter doesn't take into account the URL's base anymore?

[05:17:33.0000] <annevk>
Yeah I think so

[05:17:58.0000] <nox>
annevk: Why?

[05:18:06.0000] <annevk>
URL.prototype.href should probably just have been a getter

[05:18:26.0000] <nox>
annevk: Oh I see, URL doesn't have a base anymore anyway?

[05:18:31.0000] <annevk>
nox: yeah

[05:18:38.0000] <nox>
annevk: Makes sense. :)

[06:34:53.0000] <krijn>
annevk: oh right! I could move big part of the archive there of course, and then start logging new stuff. Now remember at some point I put http://krijn.html5.org/irc-logs/ up there already..

[06:38:43.0000] <annevk>
It has all the space you want...

[06:44:46.0000] <smaug____>
annevk: has it been discussed somewhere how shadow scripts should be executed?

[06:45:18.0000] <smaug____>
or have we always just think of "like normal script"

[06:47:47.0000] <annevk>
That was the conclusion based on some discussion

[06:49:49.0000] <krijn>
annevk: will do, thanks!

[06:50:12.0000] <krijn>
And then 301 a few years over there

[06:51:34.0000] <krijn>
Wouldn't something like irc-logs.html5.org be better by the way? No need to keep my personal branding in there (even though I'm a sucker for all the extra attention throughout the years! ;)

[06:52:15.0000] <annevk>
krijn: sure if you want

[07:21:56.0000] <annevk>
krijn: can set that up later

[07:22:36.0000] <annevk>
krijn: also happy to provide you with money for a new hard drive or some such, or something else you need

[07:29:01.0000] <wanderview>
annevk: do you think we will ever expose the URLs in the Response url list to script?  I'm trying to decide if its worth the storage costs of saving the entire URL list or if we can just save a boolean "redirected" flag

[07:31:08.0000] <wanderview>
annevk: nm, I see spec note now that it won;t be allowed due "atomic HTTP redirect handling"

[07:31:27.0000] <annevk>
wanderview: ever is hard, but not until we have CORS-like protocol for redirects

[07:31:39.0000] <annevk>
wanderview: right

[07:32:12.0000] <wanderview>
annevk: we can start tracking URLs at that point

[07:32:16.0000] <wanderview>
if its added

[07:32:47.0000] <annevk>
wanderview: yeah, makes sense, would require quite some work anyway

[07:33:22.0000] <wanderview>
annevk: are their other algorithms that look at older URLs in the list?  like internal stuff that says "if ever redirected through origin X, do Y"?

[07:33:47.0000] <wanderview>
my impression is there are not

[07:39:20.0000] <annevk>
wanderview: CSP and MIX maybe

[07:40:02.0000] <annevk>
wanderview: if main page CSP wants to act on SW response

[07:40:22.0000] <annevk>
wanderview: not sure if mkwst has defined the details yet

[07:41:35.0000] <wanderview>
I guess that would be good to know if its going to be needed

[07:41:39.0000] <wanderview>
mkwst: any thoughts?

[07:42:31.0000] <annevk>
I think that's the reason the spec keeps track

[07:45:35.0000] <JonathanNeal>
Would anyone know why all elements appear block when you put display: flex on a button in Firefox?

[07:45:46.0000] <JonathanNeal>
s/elements/child elements

[07:47:31.0000] <wanderview>
JonathanNeal: #layout at irc.mozilla.org may be able to help more if its firefox specific behavior

[07:48:18.0000] <JonathanNeal>
Thanks @wanderview, I didn’t know if that’s how flex is supposed to lay things out.

[07:48:37.0000] <wanderview>
I don't know if it is either, but if its a firefox bug the people in #layout would probably be the ones to talk to about it

[07:52:27.0000] <wanderview>
annevk: I guess we will store all the URLs in the list... it should be a minor hit given most Responses will still only have one URL

[08:22:57.0000] <JonathanNeal>
That is a seriously quiet room, @wanderview, but thanks all the same :)

[08:23:18.0000] <wanderview>
JonathanNeal: ah, sorry... they might be on west coast US time... just waking up

[08:23:40.0000] <JonathanNeal>
Fair enough.

[08:58:30.0000] <mkwst>
I think the CSP and MIX integrations are ~clearly defined.

[08:58:37.0000] <mkwst>
annevk, wanderview ^^

[08:58:55.0000] <mkwst>
I haven't looked at MIX in a while, though, so I won't swear on it.

[08:59:15.0000] <mkwst>
But CSP certainly has a hook at the bottom of Fetch to deal with Responses (and passes in the Request for context).

[08:59:28.0000] <mkwst>
I haven't implemented that in Chrome yet. It's on a list somewhere.

[09:58:13.0000] <annevk>
jyasskin: I was thinking, most permissions probably do need to deal with revocation

[09:58:35.0000] <annevk>
jyasskin: e.g., if I revoke "notifications", existing notifications should probably be cleared

[09:59:47.0000] <annevk>
jyasskin: and for "persistent-storage", the box mode should be changed and such (I don't want to change the box mode when permission is granted though, I think that should still go through the persist() method)

[10:18:36.0000] <jyasskin>
annevk: So then I wouldn't bother defining "boolean permission", and would just have each permission define its revocation algorithm. Boolean ones would just make that the only algorithm they define.

[10:19:33.0000] <annevk>
jyasskin: yeah, I guess null or algorithm makes sense for some of them

[10:19:55.0000] <jyasskin>
annevk: For now, nothing defines its revocation behavior, and I think some permissions need to take the argument into account, but I'll plan for almost every permission needing to do something.

[10:20:40.0000] <annevk>
jyasskin: yeah, it seems like revocation should mostly have an effect, e.g., stop watchPosition for "geolocation"

[10:40:02.0000] <annevk>
Ooooh https://twitter.com/FxSiteCompat/status/715908743351967744

[10:40:05.0000] <annevk>
No more AppCache API

[10:43:37.0000] <annevk>
I hope that works out, saves me a bunch of work fixing the existing stuff

[11:02:53.0000] <wanderview>
annevk: I think there is some question about the use counter analysis... they are still looking at it

[16:14:02.0000] <gwicke>
hi, my interpretation of https://fetch.spec.whatwg.org/#http-redirect-fetch is that the fetch spec intends to preserve custom request headers across redirects, especially for same-origin redirects; however, https://bugzilla.mozilla.org/show_bug.cgi?id=216828#c4 implies that this is not the case. Is anybody here familiar with this topic?


2016-04-02
[17:24:06.0000] <MikeSmith>
gwicke: annevk

[18:41:06.0000] <gwicke>
MikeSmith: thanks, might try again next week

[21:36:07.0000] <annevk>
gwicke: bug in Gecko then

[04:47:47.0000] <annevk>
gwicke: I reopened the bug

[08:00:40.0000] <benjamingr__>
Domenic: I noticed something interesting - `filter` is much harder to implement than `map` with async iterators.

[08:01:38.0000] <benjamingr__>
I have all sorts of pyramids, anywhere I can check an existing implementation?

[09:49:26.0000] <annevk>
gwicke: turns out wanderview already fixed it elsewhere, such a great person

[10:27:17.0000] <Domenic>
benjamingr__: async function* filter(ai, cb) { for await (const e of ai) { if (await cb(e)) { yield e; } } }

[10:27:42.0000] <Domenic>
benjamingr__: can omit the await before cb(e) if you only want sync predicates

[10:27:55.0000] <MikeSmith>
do JavaScript-engine implementations actually ever need to have code that directly corresponds to so ES slots, or are slots just a conceptual feature of the spec

[10:28:17.0000] <MikeSmith>
and of other specs that define things in terms of ES slots

[10:28:31.0000] <benjamingr__>
Domenic: I meant without having async generators - also, I noticed async generators aren't working in babel and they used to - any idea why?

[10:28:48.0000] <Domenic>
benjamingr__: sure, if you only use half the proposal, using the proposal is hard.

[10:28:52.0000] <Domenic>
benjamingr__: no idea

[10:29:25.0000] <Domenic>
MikeSmith: they need to produce all the observable features of the slots existing, so usually the easiest way to implement that is with some kind of slot-like thing (which I know for a fact V8 and JSC have)

[10:29:54.0000] <benjamingr__>
Domenic: well, since I'm doing it to understand the proposal - I think it's fair to place such a constraint on myself.

[10:30:12.0000] <benjamingr__>
Just like implementing map/filter on iterators without having generators.

[10:32:05.0000] <Domenic>
benjamingr__: maybe Babel originally implemented the now-withdrawn observable version of async generators and they never got around to implementing the stage 2 version.

[10:36:21.0000] <MikeSmith>
Domenic: OK, thanks. And the slot stuff came along in ES6 and after, right? I don’t remember anything about it being in ES5.1 or before. Or maybe there was another name previously? hmm, but if so I don’t know what it would have been.

[10:36:48.0000] <Domenic>
MikeSmith: no, it was in ES5, just with a more-confusing name "internal properties" I believe.

[10:36:58.0000] <MikeSmith>
aha

[10:37:03.0000] <MikeSmith>
geez

[10:37:04.0000] <MikeSmith>
OK

[10:37:17.0000] <MikeSmith>
well clearly I was overthinking this

[10:37:19.0000] <MikeSmith>
thanks

[10:37:29.0000] <Domenic>
(It was confusing since they did not behave like properties at all, e.g. no prototypal inheritance.)

[10:37:33.0000] <Domenic>
anytime!

[10:37:43.0000] <MikeSmith>
yup agreed about the old name

[10:38:15.0000] <MikeSmith>
and now that I understand “slots” seems very much the apt name

[10:39:15.0000] <MikeSmith>
/me now goes back to reading the spec he was reading before he distracted himself

[11:38:46.0000] <benjamingr__>
Domenic: ah, do you have any presentation about that?

[11:39:40.0000] <benjamingr__>
I was asked to talk about async iterators and to be frank I'm clueless about where things stand in ES, I can give an hour long talk about async iterators in Python but that'd be mega-lame. I want  to show off async generators as an alternative to observables for many use cases and as a concurrency primitive on its own.

[12:33:37.0000] <zcorpan>
I unchecked "allow merge commits" for html

[12:42:32.0000] <annevk>
zcorpan: great, we should do that everywhere

[12:44:12.0000] <zcorpan>
i can do that

[12:49:07.0000] <zcorpan>
dnoe

[15:18:49.0000] <MikeSmith>
zcorpan++

[15:22:33.0000] <MikeSmith>
annevk: I wonder if we should now update the TEAM.md to drop the instructions about how to merge a PR branch manually

[15:23:23.0000] <MikeSmith>
anyway, for now let’s see if this thing actually works

[15:23:41.0000] <MikeSmith>
/me pushes the green button on libpackage-deprecationmanager-perl

[15:23:46.0000] <MikeSmith>
oofs

[15:23:53.0000] <MikeSmith>
/me pushes the green button on libpackage-deprecationmanager-perl

[15:23:57.0000] <MikeSmith>
christ

[15:25:46.0000] <MikeSmith>
hot diggety dog https://github.com/whatwg/html/commit/78806b0a466dd8f1f04fdcd5bc51ca002ccbf31f


2016-04-03
[19:43:11.0000] <MikeSmith>
https://w3c.github.io/browser-payment-api/specs/paymentrequest.html#user-agent-delegates-payment-request-algorithm has the statement “A user agent may not always be able to abort a request.” which could be misread as RFC 2219 language

[19:43:36.0000] <MikeSmith>
any suggestions for language to replace it with?

[19:43:56.0000] <MikeSmith>
or just leave it as is?

[19:45:35.0000] <MikeSmith>
maybe just “might”

[04:00:17.0000] <annevk>
MikeSmith: yeah, a lot can be simplified now

[04:00:32.0000] <annevk>
MikeSmith: great that it works


2016-04-04
[00:13:53.0000] <annevk>
MikeSmith: so I just did it as well, it seems a little weird that the option that we haven't enabled (and creates a merge commit) is still selected by default

[00:14:15.0000] <annevk>
MikeSmith: probably something GitHub will fix and I'm not the first to notice I guess

[00:15:31.0000] <MikeSmith>
yeah

[00:15:50.0000] <MikeSmith>
I ran into that too and reckoned the same thing

[00:16:03.0000] <MikeSmith>
minor wrinkle that I guess they will get ironed out soon

[01:10:11.0000] <annevk>
TabAtkins: another issue that's been awaiting a reply from you: https://www.w3.org/Bugs/Public/show_bug.cgi?id=23893

[01:10:48.0000] <annevk>
TabAtkins: there's quite a few, perhaps you should schedule some time to work on HTML rendering 😊

[03:48:21.0000] <annevk>
What was the way to become op on this channel again?

[04:53:14.0000] <annevk>
hallvors: I don't think https://github.com/w3c/clipboard-apis/issues/26 can be left to them

[04:53:47.0000] <annevk>
hallvors: in particular, I believe Michiel works on the W3C HTML fork and that's unlikely to be actively maintained for the long term

[04:54:14.0000] <annevk>
Heck, it isn't even actively maintained now

[04:54:23.0000] <hallvors>
annevk: it's more in Selection or Editing land than in HTML though

[04:54:35.0000] <annevk>
hallvors: focus isn't

[04:54:42.0000] <annevk>
hallvors: and Clipboard isn't either, last I looked

[04:55:15.0000] <hallvors>
Not? I don't see any particular requirements I need to follow up that don't seem to be better spec'ed as Editing requirements..

[04:55:20.0000] <annevk>
Sorry, DataTransfer

[04:55:50.0000] <hallvors>
To clarify: I'm not talking about the existing state of things

[04:55:53.0000] <annevk>
hallvors: e.g. the bits around focus transfer is very much a thing nothing but HTML defines

[04:55:59.0000] <hallvors>
but more conceptually what belongs where

[04:56:37.0000] <annevk>
hallvors: I'm having a hard time believing that the focus stuff can migrate from HTML to elsewhere anytime soon

[04:56:55.0000] <hallvors>
why should the Clipboard API spec have to deal with focus transfer stuff?

[04:57:17.0000] <annevk>
hallvors: "I have one requirement about focus (as far as I can remember) which is if JS during paste event processing moves focus, the pasting must target the control that gained focus."

[04:57:50.0000] <annevk>
hallvors: afaict that requires using some kind of hook to clearly indicate what control you're talking about

[04:58:56.0000] <hallvors>
hm.. crap, why doesn't ReSpec generate a ToC for the spec now??

[04:59:19.0000] <hallvors>
OK, now it did

[04:59:22.0000] <hallvors>
just slow..

[04:59:51.0000] <hallvors>
What it says about focus is this one sentence: https://w3c.github.io/clipboard-apis/#event-listeners-that-modify-selection-or-focus

[05:00:16.0000] <annevk>
hallvors: that link doesn't work

[05:00:37.0000] <annevk>
But I'm also not sure why it matters that it's a single sentence

[05:00:52.0000] <annevk>
If it's normative it should be crystal clear how it fits into the bigger picture

[05:01:14.0000] <hallvors>
because Respec is weird now.. .-p so this needs to hook into some definitions of Focus and Selection to be useful?

[05:01:41.0000] <hallvors>
(just search for focus, you'll find it fast)

[05:04:00.0000] <annevk>
hallvors: yeah, all occurrences of focus require some link

[05:04:07.0000] <hallvors>
annevk: could you add some specific suggestions for that paragraph to issue 26?

[05:04:24.0000] <annevk>
hallvors: I don't really have good suggestions at the moment, only that we'd want to define it

[05:04:51.0000] <annevk>
hallvors: and once we do "If the event listener modifies the selection or focus, the clipboard action must be completed on the modified selection." can probably be removed (or turned into a note) since it would follow from the requirements

[05:05:22.0000] <annevk>
hallvors: whenever you have something out-of-band like that requiring something, it's a good idea to figure out how you can turn it into a note, since it's likely some integration is missing

[05:09:59.0000] <hallvors>
So..you're saying there is no authoritative definition of Focus to link to at the moment?

[05:11:30.0000] <hallvors>
But once there is one, I should hook things up

[05:12:03.0000] <annevk>
hallvors: HTML is the authoritative definition

[05:12:24.0000] <annevk>
hallvors: I'm just saying that I don't really know the specifics of focus since I haven't studied that in detail

[05:12:42.0000] <annevk>
hallvors: that's why I suggested you file some issues (also for DataTransfer)

[05:23:26.0000] <hallvors>
https://w3c.github.io/html/editing.html#focused and https://w3c.github.io/html/editing.html#focusable might define the concepts we should reference.

[05:25:02.0000] <annevk>
hallvors: you should definitely not reference the fork...

[05:25:50.0000] <hallvors>
s/w3c.github/specs.whatwg or something

[05:25:57.0000] <annevk>
hallvors: but e.g., https://html.spec.whatwg.org/multipage/interaction.html#focused seems reasonable

[05:26:01.0000] <hallvors>
/me doesn't like politics

[05:26:34.0000] <hallvors>
/me actually likes politics when it is about real issues

[05:26:35.0000] <annevk>
hallvors: just think of it as the wrong link then

[05:26:51.0000] <annevk>
hallvors: since it'll lead to the wrong thing being implemented

[05:27:04.0000] <annevk>
it's not really a political thing at that point

[06:01:34.0000] <zcorpan>
Is there a bug in github's UI? Twice now while navigating the UI, the green button says "Confirm squash and merge" but I have NOT clicked "Merge pull request"

[06:02:52.0000] <zcorpan>
e.g. reloading the page is enough

[06:06:03.0000] <annevk>
zcorpan: dunno, just got the same

[06:34:54.0000] <annevk>
Domenic: where should https://www.w3.org/Bugs/Public/show_bug.cgi?id=26182 go?

[06:35:38.0000] <Domenic>
annevk: https://github.com/whatwg/console/issues

[06:38:52.0000] <annevk>
Domenic: thanks, moved there

[06:43:21.0000] <zcorpan>
The commit message also has doubled linebreaks in the textarea... Such confidence

[09:55:04.0000] <MikeSmith>
https://developer.microsoft.com/en-us/microsoft-edge/platform/issues/

[09:55:08.0000] <MikeSmith>
new it seems

[10:50:22.0000] <annulen>
GPHemsley: in https://mimesniff.spec.whatwg.org/#rules-for-identifying-an-unknown-mime-type 7.1.1 ends with "What about feeds?" question. I wonder, was there any discussion on this topic?

[10:50:49.0000] <annulen>
also, what about SVG? AFAIU, according to this section it should end up as text/xml

[11:55:37.0000] <Domenic>
This is amazing https://developer.microsoft.com/en-us/microsoft-edge/platform/catalog/

[11:55:52.0000] <Domenic>
Scrapes current specs and compares against all browser IDLs

[11:56:13.0000] <Domenic>
Using open source data for everyone but Edge, and internal data for Edge.

[12:23:06.0000] <zcorpan>
nice!

[12:23:49.0000] <zcorpan>
DOM2 Style but not CSSOM

[12:29:23.0000] <zcorpan>
the visualization looks like a Venn Diagram but it looks like it only changes the size of the balloons, and the intersection is the same?

[12:49:09.0000] <zcorpan>
annevk: HTMLHyperlinkElementUtils doesn't provide a searchParams getter? is that intentional?

[13:30:37.0000] <Domenic>
annevk: custom elements DOM+ parts is ready for another look after your last round of excellent feedback. It's ready for upstreaming IMO, but you might find new bugs.


2016-04-05
[18:05:02.0000] <jhiesey>
@Domenic: am i right in thinking that encodingOverride doesn't actually do anything yet in https://github.com/jsdom/whatwg-url ?

[18:05:38.0000] <jhiesey>
in general, how finished is https://url.spec.whatwg.org/ and are there any complete reference implementations?

[18:08:03.0000] <jhiesey>
@Sebmaster: ^

[18:12:30.0000] <MikeSmith>
jhiesey: https://url.spec.whatwg.org/ intends to be finished and has browser implementations that conform

[18:12:41.0000] <MikeSmith>
annevk would be the person to ask for more details

[18:13:32.0000] <MikeSmith>
and fwiw there is java implementation at https://github.com/smola/galimatias that was written from scratch to match the requirements in teh spec

[18:14:05.0000] <Sebmaster>
jhiesey: yeah, encodingOverride isn't actually implemented

[18:14:51.0000] <Sebmaster>
I'm not sure it actually matters because it produce queryParams yet, which is the only point where it's used if i remember correctly

[18:17:20.0000] <Sebmaster>
s/because it produce/because it doesn't produce/

[18:33:52.0000] <boogyman>
Is anyone here  familiar with multipart streams? Forwarding on an inquiry from another channel "can one file be split between two parts of the same multipart stream"

[20:44:56.0000] <annevk>
Sebmaster: you need it for correctly parsing the query state

[20:45:27.0000] <annevk>
Sebmaster: URLSearchParams doesn't really use it

[00:34:15.0000] <mkwst>
annevk: If I add crytographic nonce metadata to requests, would you like me to expose it via Request/RequestInit? (re: https://github.com/whatwg/fetch/issues/269)

[00:34:53.0000] <annevk>
mkwst: is there a use case?

[00:35:10.0000] <mkwst>
Beyond "explain the platform", I don't have one.

[00:35:20.0000] <annevk>
mkwst: probably not for v0 then

[00:35:34.0000] <annevk>
mkwst: it's rather tied to the CSP header, no?

[00:36:01.0000] <mkwst>
annevk: Yes. I don't know of anything else using the `nonce` attribute for anything.

[00:36:01.0000] <annevk>
mkwst: that is, at the moment you also can't fake type or destination

[00:36:19.0000] <annevk>
mkwst: so if nonce only works when type is script, it doesn't add much value

[00:36:34.0000] <annevk>
mkwst: you might want to add nonce support to workers though...

[00:36:38.0000] <mkwst>
annevk: style too.

[00:37:29.0000] <mkwst>
https://github.com/w3c/webappsec-csp/issues/15 <-- worker nonces.

[00:38:21.0000] <annevk>
Seems Nadoedalo is ahead of the curve

[00:38:38.0000] <mkwst>
it's not tough to be ahead of me...

[00:39:39.0000] <mkwst>
Do you happen to know how the HTML bits of xref work?

[00:39:49.0000] <mkwst>
Do I just run `html.py` to regenerate the json files?

[00:40:21.0000] <annevk>
mkwst: you need to update html.json unfortunately

[00:40:26.0000] <annevk>
mkwst: and then run html.py

[00:40:54.0000] <mkwst>
um. ok? what does html.py do, then?

[00:41:39.0000] <annevk>
mkwst: cleanup and multipage references

[00:42:16.0000] <annevk>
mkwst: so you don't need to stick to alphabetical order when inserting stuff in html.json

[00:42:37.0000] <mkwst>
Ok. Well, it's throwing exceptions. :)

[00:42:46.0000] <Ms2ger>
Is that still being used?

[00:43:15.0000] <mkwst>
Will you be terribly sad if I just add references without running html.py? :)

[00:45:32.0000] <annevk>
Ms2ger: yeah

[00:45:43.0000] <annevk>
mkwst: I guess I can try to fix it

[00:46:57.0000] <Ms2ger>
You could try to argue this is all my code, I suppose

[00:49:47.0000] <annevk>
I'm mostly stuck with it since bikeshed has these odd things

[00:50:05.0000] <annevk>
I guess I should really try to get bikeshed not to do the things I dislike, that's probably more productive

[00:57:03.0000] <zcorpan>
annevk: HTMLHyperlinkElementUtils doesn't provide a searchParams getter? is that intentional?

[00:57:24.0000] <annevk>
zcorpan: yeah

[00:57:43.0000] <zcorpan>
annevk: ok. what was the rationale?

[00:57:53.0000] <annevk>
zcorpan: since it can't work for Location and WorkerLocation it seemed better to just have it for URL

[00:58:46.0000] <annevk>
zcorpan: minor post-decision-reason could be that <a> and <area> use an override encoding and URL doesn't

[00:59:00.0000] <annevk>
zcorpan: and that URLSearchParams always uses utf-8

[00:59:27.0000] <zcorpan>
ok thanks

[01:06:47.0000] <annevk>
mkwst: so for https://github.com/whatwg/fetch/pull/273 you didn't update xref at all?

[01:06:52.0000] <annevk>
mkwst: or it wasn't needed?

[01:07:19.0000] <mkwst>
I updated it locally, and apparently didn't send a PR. 2 seconds.

[01:08:23.0000] <mkwst>
https://github.com/whatwg/xref/pull/11

[01:20:12.0000] <annevk>
mkwst: wasn't sure whether https://github.com/whatwg/fetch/issues/269 should be closed, will leave that to you

[01:20:39.0000] <mkwst>
Probably not. It needs an HTML patch I'm writing now.

[01:20:48.0000] <mkwst>
And a CSP patch, but that's less relevant to Fetch.

[01:23:07.0000] <annevk>
GitHub is super slow?

[01:31:05.0000] <alrra>
annevk:  yes (see: https://status.github.com/messages)

[01:36:09.0000] <annevk>
ta

[01:36:19.0000] <annevk>
TabAtkins: so I got conflicts now for "origin"

[01:36:28.0000] <annevk>
TabAtkins: then I use "spec" as suggested to disambiguate

[01:36:46.0000] <annevk>
TabAtkins: but by default "spec" just picks the first <dfn> in HTML, even it says noexport!

[01:37:00.0000] <annevk>
TabAtkins: that's somewhat absurd, no?

[01:51:16.0000] <mkwst>
zcorpan: Where's the best place to submit PRs for CSSOM? :)

[01:51:22.0000] <mkwst>
Just file something at https://www.w3.org/Bugs/Public/buglist.cgi?component=CSSOM&list_id=62622&product=CSS&resolution=--- ?

[02:00:50.0000] <zcorpan_>
mkwst: https://github.com/w3c/csswg-drafts/ - but create a fork, branches on this repo don't work because of the hg sync

[02:01:10.0000] <mkwst>
zcorpan_: Thanks!

[02:02:01.0000] <mkwst>
/me waits an hour for GitHub to catch up. :/

[02:08:56.0000] <MikeSmith>
/me lights his peace pipe and enjoys an early-evening break

[02:14:38.0000] <mkwst>
zcorpan_: If you have a moment, can you help me understand how "fetch a CSS style sheet" relates to "create a CSS style sheet"?

[02:14:52.0000] <mkwst>
The latter has data I want to use in the former (namely the "owner node" of the sheet).

[02:15:35.0000] <mkwst>
"create" is called from HTML.

[02:15:42.0000] <mkwst>
"fetch" doesn't seem to be called at all.

[02:16:51.0000] <zcorpan_>
mkwst: https://github.com/whatwg/html/issues/968

[02:17:26.0000] <zcorpan_>
mkwst: also i think several things in this area are currently broken, i haven't spent time yet to fix it

[02:19:04.0000] <mkwst>
Got it. Ok. Then I'll defer this PR a bit and file a bug for myself to come back to it. :)

[02:19:12.0000] <zcorpan_>
mkwst: happy to allocate time for this soon though and help with whatever you want to fix

[02:19:54.0000] <mkwst>
I know jochen__ wants clarity here for Referrer Policy, and it would be helpful for CSP and SRI, which both need to stuff things into Fetch for various checks.

[02:20:30.0000] <mkwst>
*shrug* Not the most important thing ever, but it would be nice to have a clear path from `<link>` in HTML through to Fetch for stylesheets.

[02:20:31.0000] <annevk>
Yeah, he's always reminding me how CSS doesn't have its act together

[02:20:50.0000] <annevk>
But note that fixing that would also requiring some deeper fixes, such as defining what `background-image` and such do

[02:20:59.0000] <mkwst>
Yup. Baby steps.

[02:21:54.0000] <annevk>
Yeah, it's only a two decade old feature

[02:22:05.0000] <annevk>
Would be a bit soon for it to be properly defined

[02:22:29.0000] <mkwst>
Fetch isn't two decades old. :)

[02:22:37.0000] <annevk>
mkwst: background-image is

[02:22:57.0000] <mkwst>
I see.

[02:23:38.0000] <zcorpan_>
1) Here's a URL. 2) ??? 3) It works!!

[02:23:43.0000] <annevk>
Also, I think I could argue that parts of Fetch maybe are that old

[02:23:57.0000] <Ms2ger>
zcorpan_, hey, you know if attr() case-sensitivity is specced?

[02:24:09.0000] <zcorpan_>
Ms2ger: what aspect of it?

[02:24:16.0000] <annevk>
E.g., the redirect behavior has existed since, well, browsers

[02:25:01.0000] <Ms2ger>
zcorpan_, something that says "it's case-insensitive in HTML documents, case-sensitive elsewhere"

[02:29:22.0000] <Ms2ger>
zcorpan_, will file on HTML, I guess

[02:29:24.0000] <zcorpan_>
Ms2ger: i don't find anything about that

[02:32:48.0000] <zcorpan_>
html http://software.hixie.ch/utilities/js/live-dom-viewer/saved/4034 xhtml http://software.hixie.ch/utilities/js/live-dom-viewer/saved/4035

[02:33:37.0000] <Ms2ger>
Also http://test.csswg.org/suites/css21_dev/nightly-unstable/html4/content-attr-case-001.htm :)

[02:35:47.0000] <zcorpan_>
"The case-sensitivity of attribute names depends on the document language." says CSS 2.1

[02:36:09.0000] <Ms2ger>
https://github.com/whatwg/html/issues/991

[02:36:12.0000] <zcorpan_>
but no such text in https://drafts.csswg.org/css-values-3/#funcdef-attr

[02:40:21.0000] <Ms2ger>
I'd file an issue there, but they use Tracker

[02:40:38.0000] <Ms2ger>
And that's really not worth my time

[02:43:18.0000] <Ms2ger>
TabAtkins, ^

[02:55:49.0000] <annevk>
squash and merge is very satisfying

[03:12:45.0000] <annevk>
mkwst: should the HTML parser hide nonce attributes?

[03:15:04.0000] <mkwst>
annevk: Why?

[03:15:34.0000] <annevk>
mkwst: probably not worth the complexity, but it reduces the risk of nonce being reused by an attacker

[03:16:06.0000] <mkwst>
An attacker could only gain access to the nonce if they had the ability to run script on the page though, right?

[03:16:16.0000] <mkwst>
At that point, it's not clear what we'd be defending against.

[03:16:37.0000] <annevk>
mkwst: sure, it's defense-in-depth, similar to your credential scheme

[03:17:07.0000] <annevk>
mkwst: e.g., it might prevent exfiltration

[03:19:54.0000] <mkwst>
annevk: File a bug? It's certainly worth considering, though I'm not sure the complexity is worth it.

[03:20:06.0000] <mkwst>
annevk: I've been thinking about something else that might be worth it, though:

[03:20:28.0000] <mkwst>
An issue that keeps coming up is injection of partial tags to capture attributes on subsequent tagfs.

[03:21:09.0000] <mkwst>
Like, an attacker injects `<script src='whatever'` just before a page writes `<script nonce='whatever' ...>`.

[03:21:45.0000] <mkwst>
Could we prevent script execution for script elements that contain an attribute named "<script"?

[03:22:05.0000] <annevk>
If it's web-compatible we could...

[03:23:06.0000] <mkwst>
I'm doing it in CSP (https://github.com/w3c/webappsec-csp/commit/2c92a09beeede27e45f2acef4041aa0a1770fa99), but I can't imagine there's any real use case.

[03:23:16.0000] <mkwst>
I guess I'll file a bug, add a use counter, and wait. :)

[03:23:38.0000] <annevk>
Yeah, that'd be a good approach

[03:24:20.0000] <annevk>
The cool alternative would be <script-[nonce]>, but that's not really backwards compatible

[03:24:44.0000] <annevk>
And you'd have </script-[nonce]> too of course

[03:24:55.0000] <mkwst>
Well, that's the next thing. :)

[03:25:02.0000] <annevk>
And the parser inserts <script> if [nonce] is good

[03:25:31.0000] <mkwst>
Since HTML isn't XML, how about we add `<tag closes-with='nonce'> ... </tag nonce>` :)

[03:25:55.0000] <annevk>
That'd be a lot more compatible, for sure

[03:26:17.0000] <annevk>
I have no objections, XML compat hasn't really done us any favors

[03:26:42.0000] <mkwst>
Hooray! Maybe I'll look at our HTML parser to see if this is at all implementable.

[03:27:25.0000] <annevk>
Attributes on the closing tag are definitely tokenized, but probably not along

[03:27:32.0000] <annevk>
passed along*

[05:36:34.0000] <annevk>
What's a good presentation framework these days? Other than Opera Presto which I can't really recommend anymore due to it not being maintained...

[05:36:40.0000] <annevk>
Anyone experience with https://github.com/hakimel/reveal.js?

[05:52:52.0000] <ondras>
/me has http://ondras.github.io/jsslides/v3/

[05:52:53.0000] <ondras>
annevk: ^

[07:30:04.0000] <annevk>
ondras: ta, none of these looks very simple, but maybe it's not a simple problem anymore

[07:30:16.0000] <annevk>
ondras: <style media=projection> was quite nice

[07:31:52.0000] <ondras>
depends on your definition of "simple" I guess

[07:32:22.0000] <ondras>
media=projection is nice but you often want to have this functionality without projection

[07:32:32.0000] <ondras>
and you want some interactivity not achievable with css

[07:32:44.0000] <ondras>
I have this pure-css variant: http://ondras.zarovi.cz/demos/nojs/

[07:32:48.0000] <ondras>
but it is more of a hack

[07:33:36.0000] <ondras>
anyway, my jsslides is generally done by one additional <script src=...> node, sounds quite accessible to me

[07:33:39.0000] <ondras>
annevk: ^

[09:47:15.0000] <Domenic>
Always so interesting when someone's only GitHub contribution is a reasonable, non-spammy spec bug: https://github.com/whatwg/dom/issues/203

[09:51:01.0000] <jgraham>
Outside the filter bubble there are lots of technical people that never have occasion to use GitHub

[09:56:03.0000] <annevk>
Domenic: had not even noticed that

[10:55:01.0000] <TabAtkins>
Ms2ger: We do not, in fact, use Tracker for anything; I'll go fix that spec to stop lying.

[10:55:53.0000] <Ms2ger>
That's nice, I guess

[10:56:22.0000] <TabAtkins>
And yeah, you're right, we should ref the "CI defined by the host language".

[10:56:48.0000] <Ms2ger>
zcorpan also sent email

[11:43:15.0000] <TabAtkins>
Cool

[11:45:47.0000] <TabAtkins>
annevk: (re spec and noexport) That's actually intended behavior.  The entire point of noexport is to hide definitions *by default*, if they're not considered sufficiently useful to pollute the global namespace with.  The spec argument's main purpose is to *override* that, indicating that no, you really do want to look inside of this spec for a definition,

[11:45:47.0000] <TabAtkins>
so that overrides noexport.

[11:46:20.0000] <TabAtkins>
If spec didn't do that, I'd have to invent a *further* indicator to mean "no, really, I don't care whether they're exported or not".

[11:47:30.0000] <Domenic>
then how do you indicate which spec you want to get the definition from, while still respecting noexport?

[11:47:36.0000] <TabAtkins>
You don't.

[11:47:47.0000] <TabAtkins>
There is no such indicator right now. Hasn't been needed.

[11:48:19.0000] <TabAtkins>
As long as a single spec's definition are well-formed (all distinguishable), you don't need it - you can just say "use this spec, and get me this particular definition".

[11:48:40.0000] <TabAtkins>
Which is possible in this case anyway - I don't know how correct it is, but the one exported HTML "origin" definition is for=origin

[11:48:55.0000] <Domenic>
I guess this comes back to the conflict where you think textContent is unique and we think IDs are unique

[11:49:14.0000] <TabAtkins>
While the other three aren't for anything. (They're not well-formed per Bikeshed's model, but as long as you're not trying to link them that doesn't matter.)

[11:50:07.0000] <TabAtkins>
I mean, IDs are unique, yes. But they're also arbitrary strings that require extra memorization to use, and should be left to automation to generate anyway.  They're a tool of the underlying tech, not really intended for usability at the authoring layer.

[11:50:58.0000] <Domenic>
I disagree, probably because of the years of using <a href="#id">

[11:51:33.0000] <TabAtkins>
Yeah, if you've already got calluses over the parts of your brain that remember IDs, it doesn't feel like it's a problem.

[11:53:19.0000] <Domenic>
I mean, it'd only be used for the disambiguation cases where the textContent is not unique

[11:54:05.0000] <TabAtkins>
Bikeshedded specs already enforce that case as a fatal error; this is only for the handful of specs that (a) want to be in the cross-spec-linking db, and (b) don't want to play by the rules of that db.

[11:54:41.0000] <TabAtkins>
There's only a handful of those, and they can be fixed over time.  Blessing their behavior isn't great for the ecosystem.

[11:56:27.0000] <Domenic>
I pretty strongly disagree that unique text content is necessary for being a good citizen of the ecosystem

[11:56:35.0000] <Domenic>
but, it's not my db

[11:56:40.0000] <TabAtkins>
Good thing it's not!

[11:56:51.0000] <Domenic>
ouch

[11:56:58.0000] <TabAtkins>
Ugh, collision.

[11:57:02.0000] <TabAtkins>
Was responding to the *previous* line.

[11:57:21.0000] <TabAtkins>
You have to be a unique {linking text, type, for, spec} value.  Which is a very low bar to meet.

[11:58:21.0000] <TabAtkins>
(Being unique on {linking text, type, for} is *nice*, but not required.  When I finally implement support for obsoletion, it'll be easier.)

[12:04:34.0000] <TabAtkins>
That all said, my error message *does* explicitly say to insert "spec:html; type:dfn; text:origin" into link defaults, which would not be sufficient here.  I should improve that.

[12:05:07.0000] <Domenic>
I guess this all sounds reasonable; we'll see if I run into problems again and have more specific complaints

[12:06:35.0000] <Domenic>
Somewhat-relatedly, we should talk about what we can do to HTML to make it a good citizen for cross-spec links. Add more data- attributes, mainly? Especially export, but also some type-related ones---e.g. get it to mark up the IDL somehow?

[12:07:08.0000] <TabAtkins>
I think the for=origin on that value is wrong.  It's actually the core "origin" definition, all by its lonesome; it should be the only one *without* a for='' value.  The other three should get for=request, for=url, and for=http, or something like that.

[12:07:59.0000] <TabAtkins>
I *think* plinss's parser handles IDL reasonably well automatically, but I'll have to check.  Otherwise, yeah, it's just a matter of honoring the anchor contract <https://github.com/tabatkins/bikeshed/blob/master/docs/dfn-contract.md>

[12:08:45.0000] <Domenic>
I can't believe we've been putting data-noexport on all our <dfn>s like chumps, so silly

[12:09:17.0000] <TabAtkins>
A lot of them *do* need it.  HTML is *not* defining the url origin, for example.

[12:09:27.0000] <Domenic>
but dfn is noexport by default, I thought?

[12:09:34.0000] <TabAtkins>
Oh yeah, right, that's true.

[13:53:05.0000] <jyasskin>
TabAtkins: While I was looking at BT's HTML use, I noticed that I have to define anchors for https://www.w3.org/2001/tag/doc/promises-guide and https://heycam.github.io/webidl/. Can you add those to shepherd? (I'll still have to define link-defaults for those, but that's preferable)

[13:57:40.0000] <jyasskin>
Domenic: Note that https://www.w3.org/2001/tag/doc/promises-guide#resolve-promise has link-text "Resolve p with x", which doesn't work at all in other specs. I'm using just "Resolve" in Bluetooth.

[13:57:55.0000] <Domenic>
jyasskin: yeah I should probably fix that

[13:59:32.0000] <TabAtkins>
jyasskin: Promises Guide is already in there.

[13:59:51.0000] <TabAtkins>
WebIDL isn't Bikeshed-friendly. Dunno what results we'd get if we put it in.

[14:00:04.0000] <jyasskin>
Thanks. I bet I searched for the wrong thing. WebIDL would have results like HTML, right?

[14:00:11.0000] <TabAtkins>
Yeah, approximately.

[14:00:18.0000] <jyasskin>
That's better than nothing.

[14:06:06.0000] <TabAtkins>
Hmmmmm, there's only 225 definitions.  It shouldn't be too hard to just add the right attrs to WebIDL.

[14:06:13.0000] <TabAtkins>
Gimme an hour.

[14:16:32.0000] <Domenic>
Just Bikeshed it ;)

[14:16:41.0000] <Domenic>
Ms2ger or nox started such a project IIRc

[14:17:02.0000] <TabAtkins>
Bikeshedding it would be a lot more work. ^_^ I can at least make it *friendly* easily.

[14:17:29.0000] <TabAtkins>
And yeah, I recall someone starting a Bikeshedding, but I guess they lost interest; haven't heard anything about it in a while.

[14:18:22.0000] <nox>
Domenic: I would like to do it but I have other things to do and I've been told there are some licensing issue to take care of or whatever.

[14:19:23.0000] <Domenic>
but the XSLT ;_;

[14:22:08.0000] <TabAtkins>
Eh, who cares, data-* attributes still work I'm pretty sure.

[14:22:44.0000] <TabAtkins>
But also: licensing??!?

[15:19:36.0000] <nox>
TabAtkins: You would have to look into this very channel's logs, because I don't remember.

[15:23:26.0000] <Domenic>
It does seem like Web IDL is currently under the "no derivative works allowed" copyright.

[15:32:41.0000] <TabAtkins>
Right, but that doesn't stop it from *switching* to another processor.

[16:26:56.0000] <TabAtkins>
Wooo https://github.com/heycam/webidl/pull/105

[16:31:37.0000] <heycam>
TabAtkins: thank you!

[16:32:00.0000] <TabAtkins>
Welcome! Hope it works and everything's kosher!

[16:33:17.0000] <heycam>
TabAtkins: unfortunately no, since it's XML those data-* attributes need an =""

[16:33:25.0000] <TabAtkins>
Ah, kk, gimme a sec

[16:33:38.0000] <TabAtkins>
I thought of that early, but forgot by the time I was writing things.

[16:34:39.0000] <TabAtkins>
k, done

[16:35:09.0000] <heycam>
/me tries

[16:35:38.0000] <heycam>
TabAtkins: https://pastebin.mozilla.org/8866534

[16:36:22.0000] <TabAtkins>
Holy crap, what possible reason could XML have for disallowing < in attr values?

[16:36:35.0000] <heycam>
/me started Bikeshedification (as did Ms2ger), which he should get back to completing

[16:37:43.0000] <TabAtkins>
And done.

[16:38:45.0000] <heycam>
TabAtkins: success :)

[16:38:51.0000] <TabAtkins>
yus

[16:39:10.0000] <heycam>
/me brb will land in a min


2016-04-06
[17:41:35.0000] <MikeSmith>
TabAtkins: the XML-disallows-<-in-attr-values things causes problems in Bikeshed?

[17:41:42.0000] <MikeSmith>
or somewhere else?

[17:41:56.0000] <TabAtkins>
No, it causes problems in *my head* because I was editting WebIDL's index.xml file and wtf

[17:42:03.0000] <MikeSmith>
ah

[17:42:10.0000] <TabAtkins>
Bikeshed doesn't go anywhere near XML.

[17:42:20.0000] <MikeSmith>
count me relieved

[22:42:21.0000] <annevk>
krijn: hey sorry, I totally forget, going to set up irc-logs.html5.org now

[22:42:26.0000] <annevk>
forgot, even

[22:43:15.0000] <krijn>
Thanks! Haven't had time myself either though

[22:44:37.0000] <annevk>
krijn: okay, it's added to your account, might take a couple minutes

[22:44:57.0000] <annevk>
krijn: you'll have to add HSTS headers yourself btw

[23:56:22.0000] <annevk>
hsivonen: we got some PRs formalizing the HTML parser language; is that something you have time for to look through?

[23:56:40.0000] <annevk>
hsivonen: https://github.com/whatwg/html/pull/993 and https://github.com/whatwg/html/pull/994

[23:57:10.0000] <annevk>
nox: might also be of interest to you? Forgot if you wrote an HTML parser or not

[23:58:16.0000] <nox>
annevk: I maintain h5e with SimonSapin.

[00:20:00.0000] <gsnedders>
annevk: yay

[00:20:21.0000] <gsnedders>
/me remembers writing to the mailing list about this ages ago

[01:18:37.0000] <mkwst>
Domenic: I assume you're sleeping, right? :)

[01:19:15.0000] <annevk>
mkwst: if this is about the PR, I can probably do the final review

[01:19:38.0000] <mkwst>
annevk: It's about CSP hooks for ECMAScript.

[01:19:49.0000] <mkwst>
https://github.com/whatwg/html/issues/271#issuecomment-198084014

[01:20:47.0000] <annevk>
mkwst: something unclear?

[01:21:17.0000] <mkwst>
I just don't know the relationship between HTML concepts and ECMAScript concepts.

[01:21:25.0000] <mkwst>
Is a "realm" a settings object?

[01:21:33.0000] <mkwst>
Or a global object?

[01:21:33.0000] <annevk>
mkwst: they're 1:1

[01:21:40.0000] <annevk>
mkwst: those are also 1:1

[01:22:13.0000] <annevk>
mkwst: https://html.spec.whatwg.org/multipage/webappapis.html#global-object

[01:24:18.0000] <mkwst>
The way I read that, an environment settings object has a realm. I'm missing the way to get from a realm to its settings object.

[01:24:28.0000] <mkwst>
Does a realm have a "relevant settings object" or something similar?

[01:24:55.0000] <mkwst>
Oh. `[[HostDefined]]`?

[01:27:06.0000] <annevk>
mkwst: yeah

[01:27:45.0000] <annevk>
mkwst: I recommend using the terms HTML defines, in this case, "the Realm's settings object"

[01:27:57.0000] <mkwst>
Yup. I see that now. Thanks for the link!

[01:34:54.0000] <mkwst>
annevk: If you have a second for another n00b ECMA question:

[01:35:08.0000] <annevk>
mkwst: sure

[01:35:14.0000] <mkwst>
Given spec text like "Perform ? HostEnsureCanCompileStrings(the current Realm Record, evalRealm).", what is the expected implementation?

[01:35:19.0000] <mkwst>
return abruptly"

[01:35:21.0000] <mkwst>
?

[01:35:52.0000] <mkwst>
return normally with some value?

[01:36:33.0000] <annevk>
mkwst: that means you can throw or just return

[01:36:44.0000] <annevk>
mkwst: if you throw it'll stop at that step basically

[01:36:52.0000] <annevk>
mkwst: and rethrow the exception

[01:37:24.0000] <annevk>
mkwst: if you return it'll proceed to the next step

[01:37:43.0000] <mkwst>
Ok. I think I understand, thanks!

[01:38:34.0000] <annevk>
If forbidden, then throw a ... exception.

[01:38:41.0000] <annevk>
Otherwise, then return.

[01:38:55.0000] <annevk>
That could also be just "Return." I suppose

[01:39:31.0000] <annevk>
More bikeshed, you don't need the second step, just the throw step

[02:00:55.0000] <zcorpan>
is it weird for unsigned long to be nullable? (input.selectionStart)

[02:07:16.0000] <mkwst>
annevk: Is https://github.com/w3c/webappsec-csp/pull/66 more or less reasonable? If so, I'll put together an HTML patch that wires up an implementation of HostEnsureCanCompileStrings to the new method defined in CSP.

[02:07:21.0000] <annevk>
zcorpan: a bit, cannot just return 0?

[02:08:02.0000] <zcorpan>
annevk: that doesn't distinguish it from when it applies. -1 maybe?

[02:08:16.0000] <annevk>
mkwst: I think you can omit step 3

[02:08:34.0000] <annevk>
mkwst: normally is not really a thing

[02:08:55.0000] <mkwst>
Ok. The language in ECMA262 made it sound like a thing.

[02:09:53.0000] <mkwst>
I'll whip up an HTML patch, then. Thanks.

[02:09:59.0000] <annevk>
mkwst: a normal completion is, but don't think that's needed hete

[02:10:03.0000] <annevk>
here

[02:10:26.0000] <annevk>
zcorpan: that would not be unsigned

[02:10:54.0000] <zcorpan>
annevk: right so i'd change it to long

[02:11:32.0000] <zcorpan>
maybe long long while at it?

[02:11:33.0000] <annevk>
zcorpan: not sure if it matters enough to change types for, can't developers use the type attribute instead?

[02:12:55.0000] <zcorpan>
annevk: changing the type seems trivial that can be changed at the same time as not throwing an exception on getting

[02:14:59.0000] <annevk>
I guess it'd be best to discuss with an implementer

[02:15:23.0000] <annevk>
Seems unnecessary to me, but I don't care strongly

[02:18:57.0000] <Ms2ger>
zcorpan, -1 is a horrible sentinel value, though

[02:21:54.0000] <zcorpan>
there's also that setting it forwards to setSelectionRange whose arguments are unsigned long

[05:42:20.0000] <Domenic>
-1 is used as a sentinel for HTMLProgressElement

[05:42:56.0000] <Domenic>
A React dev recently contacted me about cases where there's a lack of mutable property <-> attribute correspondence; I think <progress> is one of them

[05:43:07.0000] <Domenic>
I told him to put together a list and post an issue so hopefully we'll get an exhaustive list soon

[05:43:27.0000] <Domenic>
Maybe that is what this is discussing I dunno I went to IRC first after waking up instead of email

[09:28:00.0000] <Domenic>
TabAtkins: no link type for pseudo-classes it seems? just use dfn? that's what selectors4 seems to do

[09:28:31.0000] <TabAtkins>
Domenic: They're type=selector. Bikeshed has some CSS-specific type-detection if there's no type manually specified.

[09:28:52.0000] <TabAtkins>
(In other words, the rule "a dfn without a type is automatically type=dfn" is not *strictly* true.)

[09:29:23.0000] <TabAtkins>
(This is well-documented in the <dfn> docs, tho.)

[09:30:24.0000] <Domenic>
TabAtkins: ok. When I try to add an external anchor that is type: selector, and reference it using '':defined'', it links but doesn't get the fancy curly quotes around it

[09:31:43.0000] <TabAtkins>
Those come from the stylesheet; they're generated content.

[09:32:01.0000] <TabAtkins>
Y'all's stylesheet doesn't add it.

[09:32:31.0000] <Domenic>
ah ok cool

[09:33:44.0000] <Domenic>
annevk: do you prefer markdown style lists in DOM, or <li><p>, or <li>? Omit closing tags I assume, if the latter?

[09:34:07.0000] <annevk>
Domenic: <li><p>, it's a bit inconsistent now though

[09:34:16.0000] <Domenic>
annevk: sounds good

[09:34:37.0000] <annevk>
Domenic: it's pretty much the same style as HTML, except I keep inline elements unwrapped

[09:35:00.0000] <Domenic>
annevk: "unwrapped"?

[09:35:01.0000] <annevk>
Domenic: and I omit closing tags, though sometimes not since I'm getting used to editing HTML...

[09:35:06.0000] <annevk>
Domenic: without newlines inside

[09:35:09.0000] <Domenic>
hmm ok

[09:35:37.0000] <annevk>
Domenic: makes it much easier to search for important terms if you don't have to use \s+ all the time

[09:35:49.0000] <Domenic>
yeah fair

[09:44:15.0000] <Domenic>
TabAtkins: is there a way for anchors to provide alternate linking texts? https://github.com/tabatkins/bikeshed/blob/master/docs/definitions-autolinks.md#providing-custom-definitions seems to imply no

[09:47:53.0000] <annevk>
Hmm, so the reason service workers exposing client closure is okay, is because they don't use message ports: https://lists.w3.org/Archives/Public/public-whatwg-archive/2013Oct/0004.html

[09:48:13.0000] <annevk>
MessagePort is both super nice and super nasty

[09:48:17.0000] <TabAtkins>
Domenic: Provide multiple text: values under a single url:.

[09:48:28.0000] <Domenic>
TabAtkins: ah right of course, thanks

[10:25:38.0000] <Domenic>
annevk: hmm, cloning purposefully doesn't go through append an attribute, i.e. purposefully doesn't trigger mutation observers or similar? I wonder if it should trigger attributeChangedCallback...

[10:25:45.0000] <Domenic>
it seems like it should

[10:40:29.0000] <annevk>
Domenic: are you sure that's purposeful?

[10:40:54.0000] <Domenic>
annevk: not sure. Will probably be a thing to investigate after we finish this initial PR

[10:41:08.0000] <Domenic>
I guess it might not be observable currently

[10:41:19.0000] <Domenic>
since you can't run code during cloning

[10:41:32.0000] <Domenic>
so you can't set up a mutation observer or mutation event listener on the new element

[10:42:08.0000] <annevk>
I think Hixie_ did at some point have feedback that it needed to be atomic

[10:42:26.0000] <annevk>
As if the new element had all the attributes at once, just like the parser, but I've never really been able to figure out why

[10:45:31.0000] <Domenic>
annevk: OK I think it's just a wording bug actually. It says "Append copyAttribute to copy’s attribute list." But "Append" links to "append an attribute" which does the list-appending itself, plus the mutation record stuff

[10:45:46.0000] <Domenic>
So I'll just remove "'s attribute lits"

[10:46:07.0000] <Hixie_>
there's elements that do different things when their attributes are set vs when they are created

[10:46:21.0000] <Hixie_>
e.g. look at the crazy shit form elements do

[10:46:43.0000] <annevk>
Hixie_: ah, okay, I'll study those at some point

[10:47:06.0000] <Hixie_>
or img, e.g. consider what happens if you set src then set srcset then set crossorigin

[10:47:09.0000] <Hixie_>
vs setting them all at once

[10:47:20.0000] <Hixie_>
maybe img defers the load enough that it's not an issue

[10:47:25.0000] <Hixie_>
but in principle you see what i mean

[10:47:32.0000] <Hixie_>
i forget the details of which ones do it which way

[10:48:16.0000] <annevk>
Yeah, it's understandable and browsers do have an "allAttributesSetCallback"

[10:48:40.0000] <annevk>
So they can have created weirdness

[11:12:54.0000] <wanderview>
Domenic: annevk: does each document loaded in a window get a new environment settings object?  so if doc 1 navigates to doc 2 in the same window, they get separate environment settings objects?

[11:13:33.0000] <annevk>
wanderview: no

[11:13:54.0000] <annevk>
wanderview: settings objects are 1:1 with globals

[11:14:14.0000] <wanderview>
and globals aren't created for each document?

[11:14:17.0000] <Domenic>
wanderview: I recently tried to clarify those things a bit: https://html.spec.whatwg.org/multipage/webappapis.html#global-object

[11:14:54.0000] <Domenic>
wanderview: globals are not 1:1 with documents, per the second note at https://html.spec.whatwg.org/multipage/browsers.html#browsing-context

[11:14:55.0000] <annevk>
wanderview: they mostly are, maybe you meant something else with window? Browsing context?

[11:16:26.0000] <wanderview>
I guess I am wondering if doc 1 navigates to doc 2 within a window... do you get a new browsing context

[11:16:39.0000] <wanderview>
the spec seems to say "if the browser is configured to" do that, then yes

[11:16:48.0000] <Domenic>
yeah, unless doc1 was the initial about:blank document

[11:16:54.0000] <Domenic>
oh wait

[11:17:00.0000] <Domenic>
you said browsing context not global

[11:17:07.0000] <Domenic>
so browsing context basically represents "a tab"

[11:17:11.0000] <Domenic>
it lives for a long time

[11:17:17.0000] <Domenic>
it's what things like session history and such are associated with

[11:17:24.0000] <wanderview>
well I really care about global... but I thought you said global was 1:1 to browsing context

[11:17:51.0000] <Domenic>
ah, no, sorry if we gave you that impression

[11:18:06.0000] <Domenic>
the answer to "do you get a new global" is "yes, except for the initial about:blank navigation"

[11:18:14.0000] <wanderview>
maybe I should just ask my real question

[11:18:19.0000] <wanderview>
this part of the SW spec: https://slightlyoff.github.io/ServiceWorker/spec/service_worker/index.html#dfn-service-worker-client-id

[11:18:32.0000] <wanderview>
says to create a new unique value when the environment settings objects is created

[11:18:45.0000] <jwalden>
"Although typically objects cannot be accessed across origins, the web platform would not be true to itself if it did not have some legacy exceptions to that rule that the web depends upon." lol

[11:18:49.0000] <wanderview>
wtf does that mean for a window where you are navigating between documents

[11:19:25.0000] <Domenic>
wanderview: it means that on navigation, unless it is navigation from the initial about:blank, a new unique value/environment settings object will be created

[11:19:36.0000] <wanderview>
ok

[11:19:42.0000] <wanderview>
Domenic: thanks!

[11:19:48.0000] <Domenic>
\o/

[11:20:28.0000] <Domenic>
i personally put the point at which i learned about the non-1:1ness of windows and documents as the point where my life started down a very different path

[11:21:53.0000] <wanderview>
Domenic: like the movie Pi?

[11:22:18.0000] <Domenic>
hmm, haven't seen that one

[11:25:02.0000] <wanderview>
http://www.imdb.com/title/tt0138704/?ref_=fn_al_tt_1

[11:34:23.0000] <jwalden>
"Although WindowProxy is named as a "proxy", it does not do polymorphic dispatch on its target's internal methods as a real proxy would, due to a desire to reuse machinery between WindowProxy and Location objects. As long as the Window object remains an ordinary object this is unobservable and can be implemented either way."

[11:34:38.0000] <jwalden>
annevk: ^ what exactly is meant by "proxy" and "real proxy" and "as a real proxy would"?

[11:36:06.0000] <annevk>
jwalden: a "real" proxy supposedly would invoke _O_.[[GetPrototypeOf]]

[11:36:21.0000] <annevk>
jwalden: we use OrdinaryGetPrototypeOf(_O_)

[11:36:36.0000] <annevk>
jwalden: so code can be reused between WindowProxy and Location

[11:36:41.0000] <jwalden>
annevk: what is _O_ there?

[11:36:47.0000] <annevk>
jwalden: an object

[11:37:39.0000] <jwalden>
annevk: I'm still confused

[11:38:06.0000] <jwalden>
annevk: WindowProxy is an exotic object, and it has custom [[GetPrototypeOf]] and other internal method definitions: right, or wrong?

[11:38:22.0000] <annevk>
jwalden: it matters when the object being proxied is exotic, but since Window is not, it doesn't

[11:38:32.0000] <annevk>
jwalden: that's correct

[11:39:17.0000] <annevk>
jwalden: so sometimes WindowProxy invokes Ordinary* methods with the Window object, rather than invoking the [[*]] methods on the Window object

[11:39:34.0000] <annevk>
jwalden: because that allows WindowProxy and Location to share code

[11:40:10.0000] <annevk>
jwalden: I'd be happy to improve that sentence if you have suggestions btw, though file an issue at https://github.com/whatwg/html as I won't get to it now

[11:40:55.0000] <jwalden>
annevk: for my immediate purpose, simply knowing [[GetPrototypeOf]] isn't the ordinary definition is enough

[11:41:15.0000] <jwalden>
annevk: but I might take you up on that later, 'cause jorendorff and I are a bit confuzzled by the language as it is right now

[11:41:31.0000] <jwalden>
annevk: although bz is edumacating me on this as we speak, if I switch back to that IRC-tab

[11:41:42.0000] <jwalden>
so who knows whether anything *really* truly should be changed

[11:41:43.0000] <jwalden>
maybe

[11:41:44.0000] <annevk>
jwalden: the quote you gave is a note, so maybe just ignore that and see if the rest makes sense

[11:41:56.0000] <annevk>
jwalden: I do think Gecko as is has some bugs

[11:42:08.0000] <annevk>
jwalden: though I don't recall which

[11:43:07.0000] <jwalden>
I guess in my particular case, the global's immutable prototype chain means my particular question-to-answer is only a perf difference and nothing more

[11:43:38.0000] <jwalden>
(what I'm doing, is implementing Object.setPrototypeOf's aborting its loop to check for prototype chains, when an object with non-ordinary [[GetPrototypeOf]] is encountered)

[11:44:15.0000] <jwalden>
(but you can't have a cycle because of the immutability, so saying ordinary/not here just means you either abort the loop early, or you keep looping through the last several things on the chain)

[11:44:43.0000] <annevk>
is there an abstract operation defined for non-ordinary?

[11:44:49.0000] <annevk>
sounds a little magical

[11:45:20.0000] <jwalden>
annevk: basically this is all step 8c(i) in https://tc39.github.io/ecma262/#sec-ordinarysetprototypeof

[11:45:27.0000] <annevk>
also, if that's the same-origin issue leaking cross-origin stuff I didn't really follow that

[11:45:38.0000] <jwalden>
annevk: there isn't an abstract operation; there probably should be, but there isn't

[11:45:55.0000] <jwalden>
SpiderMonkey's going to implement it as an abstract operation, for sure

[11:46:04.0000] <annevk>
oh wow, some actual prose

[11:46:11.0000] <annevk>
interesting primitive

[11:46:42.0000] <jwalden>
annevk: the idea is objects without proxies on their prototype chains, will never have cyclic prototypes

[11:47:03.0000] <jwalden>
annevk: but once you can have a proxy on the chain, the potential for cycles (that can't be simply legislated away) is unavoidable

[11:47:45.0000] <jwalden>
var obj; var p = new Proxy({}, { getPrototypeOf() { return obj; } }); obj = Object.create(p);

[11:48:12.0000] <jwalden>
obj's prototype is |p|, |p|'s prototype when observed is |obj|, and you can't really prevent it any good way

[11:48:32.0000] <jwalden>
so non-cyclic is only enforced when the "ordinary" [[GetPrototypeOf]] is the only thing in sight

[13:23:07.0000] <rniwa>
Domenic: yt?

[13:25:56.0000] <Domenic>
rniwa: kinda, a meeting starts in 3 minutes

[13:26:09.0000] <rniwa>
Domenic: I commented on https://github.com/whatwg/dom/pull/204

[13:26:23.0000] <rniwa>
Domenic: merging custom elements / shadow DOM into DOM / HTML will make it impossible for me to follow

[13:27:33.0000] <rniwa>
Domenic: can we at least update the existing doc to up to the point where we agreed yesterday?

[13:27:50.0000] <Domenic>
rniwa: why is that? custom elements is basically baked. (i agree on shadow dom)

[13:28:06.0000] <rniwa>
Domenic: not really.

[13:28:10.0000] <rniwa>
Domenic: we don't want type extensions

[13:28:14.0000] <Domenic>
rniwa: only updates left are the extended attribute thing, and patching the specs seems better than maintaining a giant list

[13:28:19.0000] <Domenic>
rniwa: sure, but you agreed that it's in the spec

[13:28:25.0000] <rniwa>
Domenic: we didn't.

[13:28:34.0000] <Domenic>
rniwa: you can ignore them just as well in dom/html as you can in custom elements

[13:29:00.0000] <rniwa>
Domenic: anyway, more practical matter is that it's going to be a lot harder to figure out what has changed since the last meeting

[13:29:14.0000] <Domenic>
rniwa: nothing has changed.

[13:29:25.0000] <rniwa>
Domenic: I mean last F2F

[13:29:52.0000] <Domenic>
rniwa: compare the custom elements spec to the DOM/HTML specs.

[13:29:54.0000] <rniwa>
Domenic: this whole bureaucracy between W3C and WHATWG is uttrly insane

[13:30:28.0000] <rniwa>
Domenic: I'm saying that's a lot harder because everything has moved around :(

[13:30:29.0000] <Domenic>
rniwa: I don't think this is about what organization. I think this is about upstreaming vs. maintaining a separate document full of monkeypatches.

[13:30:37.0000] <Domenic>
rniwa: sure, but it moved around when it was all in one document anyway

[13:30:46.0000] <rniwa>
Domenic: and I'm saying that we should maintain a separate document for now

[13:31:02.0000] <rniwa>
Domenic: otherwise, I don't think I can meaningfully give further feedback on the API

[13:31:09.0000] <rniwa>
Domenic: in any reasonable timeframe

[13:31:10.0000] <Domenic>
rniwa: OK, well, I am not interested in maintaining that document, especially since it's just an index of "please insert this sentence in this part of the other spec"

[13:31:49.0000] <Domenic>
gtg meeting, bbiab

[13:55:12.0000] <Domenic>
rniwa: back. I really don't think this is a big deal. What are your concrete concerns with putting things in the specs they're monkeypatching, instead of maintaining a monkeypatch document?

[13:55:48.0000] <Domenic>
rniwa: I agree that shadow DOM needs more time to bake, but custom elements is in good shape.

[13:55:55.0000] <rniwa>
Domenic: I'd like to see all the things related to custom elements in one place so that I can update the implementation in WebKit

[13:56:38.0000] <rniwa>
Domenic: if the thing you're working got merged, it's probably faster for me to just start from scratch than to try to update things.

[13:56:53.0000] <rniwa>
Domenic: because I'm going to miss something somewhere

[13:57:10.0000] <rniwa>
Domenic: or maybe I can find some colleague of mine who can figure that out.

[13:57:34.0000] <rniwa>
Domenic: but I'm really done dealing with all these W3C/WHATWG shenanigans

[13:57:38.0000] <Domenic>
rniwa: maybe it would help to note that https://rawgit.com/w3c/webcomponents/15a203c8393aef0df7223ab1d43406aa11a7e71e/spec/custom/index.html is still available. The only differences in the "upstream" patches are typo fixes and editorial stuff

[13:57:56.0000] <Domenic>
rniwa: you can follow any further revisions as they land (but as I said, I don't anticipate many)

[13:58:26.0000] <Domenic>
rniwa: again, I don't think this is about organizations. If we landed these in the DOM4/HTML5.1 forks it wouldn't change the nature of your complaint

[13:58:43.0000] <rniwa>
Domenic: and I'd object to that change.

[13:59:21.0000] <Domenic>
rniwa: I'm still trying to understand why. Because you're going to miss something somewhere? But how, since there's no changes to miss in the initial important, and subsequent changes are obvious commits in the commit history?

[13:59:32.0000] <Domenic>
rniwa: would it be helpful if we prefixed all custom elements related commits with "Custom elements:"?

[13:59:48.0000] <Domenic>
rniwa: I'd even be willing to email you every time I made such a commit if you're really concerned.

[13:59:55.0000] <rniwa>
Domenic: well, the thing is, I'm not going to look at every single commit

[14:00:08.0000] <rniwa>
Domenic: I'm going to look at the spec.

[14:00:18.0000] <Domenic>
rniwa: oh ok, great, then what's the issue?

[14:00:23.0000] <rniwa>
Domenic: but now the spec will be scattered across multiple places in DOM

[14:00:47.0000] <rniwa>
Domenic: and it's going to be the impossible for me to figure out which concepts, steps, and algorithms are relevant for custom elements

[14:01:03.0000] <Domenic>
rniwa: I think I have just the thing you for

[14:01:06.0000] <Domenic>
*for you

[14:01:07.0000] <Domenic>
one sec

[14:01:57.0000] <Domenic>
rniwa: http://services.w3.org/htmldiff?doc1=https%3A%2F%2Fdom.spec.whatwg.org%2F&doc2=https%3A%2F%2Fraw.githubusercontent.com%2Fwhatwg%2Fdom%2Fcustom-elements%2Fdom.html perfect

[14:02:14.0000] <Domenic>
rniwa: same "all the patches are obvious" experience as before, one spec instead of monkeypatches.

[14:04:53.0000] <rniwa>
Domenic: well, but this diff is going to include all other DOM spec changes in the future, no?

[14:05:06.0000] <Domenic>
rniwa: nope! it's pegged to the custom elements changes.

[14:07:39.0000] <rniwa>
Domenic: so it'll show and only show all future custom elements changes?

[14:07:56.0000] <Domenic>
rniwa: yep!

[14:08:04.0000] <rniwa>
Domenic: oh, cool. this is great!

[14:08:14.0000] <Domenic>
yay \o/

[14:08:48.0000] <Domenic>
i'll try to work on something similar for html, will be a bit tricky given htmldiff fails on singlepage but we can make it work

[14:09:14.0000] <Domenic>
easy first pass is just maintain a list of links to a few multipage diffs

[14:10:42.0000] <rniwa>
Domenic: yeah, diff on multi-page urls will be just fine

[14:11:08.0000] <rniwa>
Domenic: did we fix the problem that cross-section linking doesn't work in multi-page docs?

[14:12:45.0000] <Domenic>
rniwa: I made a slight correction to the diff URL to make it keep working after merge. I added the updated URL to https://github.com/whatwg/dom/wiki.

[14:12:57.0000] <Domenic>
rniwa: cross-section linking works, but the dfn popups do not work yet :(

[14:14:43.0000] <rniwa>
Domenic: that popup is what I was talking about

[14:15:26.0000] <Domenic>
rniwa: yeah :(. it's high priority on the tooling to-fix list, MikeSmith was looking into it a bit.

[14:16:11.0000] <MikeSmith>
ears burning

[14:16:16.0000] <MikeSmith>
ah

[14:16:57.0000] <MikeSmith>
yeah need to step back and re-think that really

[14:19:23.0000] <MikeSmith>
and I implemented cross-document linking for those popups previously, years ago, in the python splitter we were using at the time

[14:19:50.0000] <hober>
R.I.P. Anolis

[14:19:57.0000] <MikeSmith>
heh

[14:20:21.0000] <MikeSmith>
it worked then, what I made, but it increased the build time by 20 times or more

[14:20:55.0000] <hober>
:)

[14:20:59.0000] <MikeSmith>
so I think we really need to have something that doesn’t make a massive hit to build time

[14:22:20.0000] <Domenic>
hmm

[14:22:21.0000] <MikeSmith>
this would be a great project for a code contributor who wanted to help out with the effort

[14:22:42.0000] <Domenic>
^ that sounds like a great way for something to not get done, sadly

[14:23:02.0000] <Domenic>
i would be ok with increased build times if you could turn off multipage generation during development

[14:23:27.0000] <MikeSmith>
OK yeah

[14:25:27.0000] <MikeSmith>
given how fast the build is and how carefully Hixie_ designed it to be that way, I would feel really bad about going in their and just tanking it naively

[14:26:29.0000] <MikeSmith>
anyway I need to make time to try it myself, to see if what I imagine might work

[14:28:41.0000] <MikeSmith>
I think users would be OK with a popup for a particular term taking some time to generate on the client side the first time they want to look at the refs for that term, if it gets cached on the client side after that

[14:29:20.0000] <MikeSmith>
I think a typical use case is that users only look at a few terms, but they look at those again and again

[14:30:24.0000] <MikeSmith>
at least that is the usage pattern I follow when I am trying to figure out something or trace something around the spec when I am using the popups to walk through it

[14:32:33.0000] <MikeSmith>
in other news I see we may be headed for some drama when getting the shadow-dom and custom-elements stuff folded into HTML and the DOM spec where it seems like everybody agrees they should end up

[14:33:23.0000] <MikeSmith>
well the people who care about getting it specified in the right way at least, instead of keeping the spec separate for non-technical reasons

[14:35:13.0000] <MikeSmith>
by which I don’t mean rniwa because I can totally understand his POV on this as an implementor

[14:36:04.0000] <MikeSmith>
rniwa: but if you think it’s premature to be moving those back to the HTML and DOM specs now, when would you imagine it would time? what would need to change before it was time for them to quit being separate monkeypatch specs

[14:38:04.0000] <rniwa>
MikeSmith: well, it looks like the diff Domenic sent me suffices my needs

[14:38:21.0000] <MikeSmith>
oh OK

[14:38:34.0000] <MikeSmith>
well I was just looking at your comment at https://github.com/whatwg/dom/pull/204#issuecomment-206545194

[14:38:50.0000] <rniwa>
MikeSmith: my concern with monolithical spec is really about having to understand/read everything even if you're interested in a super small subset of it

[14:38:52.0000] <MikeSmith>
so you are saying you have changed your mind after chatting with Domenic

[14:38:59.0000] <MikeSmith>
OK

[14:39:20.0000] <rniwa>
MikeSmith: ya

[14:39:38.0000] <rniwa>
MikeSmith: not so much that I changed my mind. It's more that there was a solution to the problem I had

[14:39:44.0000] <hober>
rniwa: maybe drop a comment on that pull request to reflect that?

[14:39:46.0000] <rniwa>
MikeSmith: I would be still opposed if we didn't have http://services.w3.org/htmldiff?doc1=https%3A%2F%2Fdom.spec.whatwg.org%2F&doc2=https%3A%2F%2Fraw.githubusercontent.com%2Fwhatwg%2Fdom%2Fcustom-elements%2Fdom.html

[14:39:47.0000] <MikeSmith>
k

[14:39:51.0000] <rniwa>
MikeSmith: just done that

[14:39:55.0000] <rniwa>
hober: ^

[14:39:58.0000] <hober>
sweet

[14:39:59.0000] <hober>
thanks

[14:40:08.0000] <MikeSmith>
cool, thanks

[14:40:37.0000] <rniwa>
MikeSmith: I don't think making readers of the spec wait longer for the sake of shorter build time is a good tradeoff though

[14:41:00.0000] <rniwa>
MikeSmith: since most people are readers

[14:41:22.0000] <rniwa>
MikeSmith: we can probably build the cross-reference index separately asynchronously though

[14:41:31.0000] <MikeSmith>
bingo

[14:42:01.0000] <MikeSmith>
and yeah it is bad to make readers take the performance hit

[14:42:08.0000] <MikeSmith>
performance is a PITA

[14:42:45.0000] <MikeSmith>
Moore’s Law and such just need to move faster :)

[14:43:41.0000] <rniwa>
MikeSmith: soon, people will be complaining about how HTML5 spec won't load fast enough in their contact lenses LOL

[14:43:50.0000] <MikeSmith>
hahah

[14:45:48.0000] <MikeSmith>
honestly another concern any time I attempt a major coding project is just the fear of being laughed at and pointed at by y’all when you see the naiveté of my code

[14:47:09.0000] <Domenic>
aww <3

[14:47:24.0000] <Domenic>
MikeSmith: FWIW the things I've seen you do with Bash have me in awe, or maybe a little terror.

[14:49:24.0000] <MikeSmith>
heh

[14:50:55.0000] <MikeSmith>
the secret to coding in bash is that you have to either pretend you’re under the influence of psychoactive chemicals, or to actually be under the influence of psychoactive chemicals

[14:51:07.0000] <MikeSmith>
or to just be psychotic

[14:52:56.0000] <hober>
MikeSmith: https://gottsusa.files.wordpress.com/2015/04/img_1364-bison-and-sign.jpg

[14:54:27.0000] <TabAtkins>
MikeSmith: Bikeshed was literally my intro "let's teach myself Python!" project.

[14:54:45.0000] <TabAtkins>
My skills have obviously gone up a ton in the process, but naive code is never a problem. ^_^

[14:59:09.0000] <rniwa>
Domenic, annevk, hayato: fyi, anttik is implementing the correct display: contents semantics for slot element in https://bugs.webkit.org/show_bug.cgi?id=149439

[15:00:59.0000] <Domenic>
rniwa: pretty exciting :)

[15:02:58.0000] <TabAtkins>
+1

[15:04:20.0000] <MikeSmith>
hober: hey I think I have actually met those bison during some of my trips, back in my Tatanka Yotanka days. I think the reason they don’t want them doing psychoactive substances is that they start to talk some crazy talk and you can only understand it if you also are tripping

[15:04:55.0000] <MikeSmith>
TabAtkins: Bikeshed is a pretty impressive first Python project

[15:05:42.0000] <TabAtkins>
It was less impressive originally.  Also, I'm a pretty good coder in general, and Python's not too dissimilar from JS, so a lot of my style knowledge could transfer over.

[15:09:03.0000] <MikeSmith>
TabAtkins: so I think you would love Free Pascal coding and I have just the project that would get you an opportunity for fun :) Free Pascal is pretty much just like Python and JS except for the places where it is not

[15:09:17.0000] <TabAtkins>
Noooope

[15:09:30.0000] <MikeSmith>
heh

[15:40:15.0000] <hober>
pascal was my second high level programming language, after basic

[15:48:03.0000] <TabAtkins>
I went TI-83 Basic => C++ => Java => Lisp => JS => Python

[15:48:18.0000] <TabAtkins>
Now I accidentally have a good working knowledge of Haskell due to reading papers.

[15:48:34.0000] <TabAtkins>
Oh sorry, PHP between Lisp and JS there.

[15:57:07.0000] <TabAtkins>
What's the name for the list of elements you can tab thru?

[16:00:19.0000] <jsbell>
TabAtkins: "control group" ?

[16:00:39.0000] <TabAtkins>
I'm just going for "tabbing through the document's focusable elements"

[16:01:14.0000] <jsbell>
"Each focusable area belongs to a single control group..."

[16:10:54.0000] <rniwa>
hayato: yt?


2016-04-07
[18:29:17.0000] <Domenic>
TabAtkins: I think you want control group. It is equal to document in all cases except dialogs being open. (And nobody implements that last part, even Chrome :()

[18:31:05.0000] <TabAtkins>
This was informal, so my slightly inaccurate terminology is more understandable. 😀

[18:35:35.0000] <Domenic>
fair!

[03:41:41.0000] <annevk>
So I looked into https://github.com/w3c/html/issues/165 and it seems first of all that JSFiddle is getting in the way since once I take it out of JSFiddle I'm unable to reproduce browser differences

[03:46:41.0000] <annevk>
Actually, I sometimes can

[04:00:27.0000] <annevk>
And solved...

[04:10:25.0000] <zcorpan>
hmm i don't remember <ol reversed> getting implemented! per http://caniuse.com/#search=reversed it seems it was a while ago :-)

[04:11:35.0000] <annevk>
Was news to me too

[07:15:12.0000] <zcorpan>
has anyone replied to Dean, John on help⊙wo (20 March, unsubscribe)?

[07:26:14.0000] <zcorpan>
i haven't looked at this in detail yet but storage proposals are always interesting https://discourse.wicg.io/t/writable-file-api/1433 https://discourse.wicg.io/t/service-worker-content-indexing/1432

[08:15:38.0000] <Ms2ger>
TabAtkins, now I'm curious about the Member-only FUD

[08:19:04.0000] <TabAtkins>
chaals trying to rewrite history about whatwg/w3c and the forking situation

[08:40:03.0000] <MikeSmith>
there is probably some clinical term for the underlying psychological disorder

[08:41:05.0000] <MikeSmith>
that is, when you know are the one who has committed a wrong, and you yourself are doing something that you know in your heart to be dishonest and wrong and unprincipled

[08:41:29.0000] <MikeSmith>
but instead of admitting that, you blame the people you are wronging

[08:42:19.0000] <MikeSmith>
you create a rationalization that justifies to try to justify your behavior

[08:42:43.0000] <MikeSmith>
*you create a rationalization to try to justify your behavior

[08:43:59.0000] <TabAtkins>
Yeah, that's cognitive dissonance, and rationalization.

[08:44:23.0000] <TabAtkins>
People don't like thinking of themselves as bad, so they construct narratives where their actions are justified.

[08:44:35.0000] <TabAtkins>
Everyone does it, it's not a psych disorder.

[08:44:54.0000] <TabAtkins>
Well, *constantly* doing things that are bad, that you then have to justify, that's something wrong.

[08:48:36.0000] <astearns>
psychological projection

[09:14:48.0000] <MikeSmith>
> People don't like thinking of themselves as bad, so they construct narratives where their actions are justified.

[09:14:52.0000] <MikeSmith>
bingo

[09:15:25.0000] <MikeSmith>
astearns: thanks that sounds like what I was trying to think of

[09:34:49.0000] <annevk>
Domenic: I'm going to add a note about that is attribute behavior

[09:35:01.0000] <annevk>
Domenic: seems like a thing folks will ask about

[09:35:09.0000] <Domenic>
annevk: ah OK. There is going to be one in HTML but having one in DOM too is probably good.

[09:35:25.0000] <Domenic>
annevk: I was about to push and squash so perfect timing. I'll leave it to you. I unprotected it for now.

[09:35:41.0000] <annevk>
Domenic: okay

[09:35:55.0000] <annevk>
Domenic: I'll just push it as a fixup and then still leave honors to you

[09:36:02.0000] <Domenic>
ok cool

[09:41:44.0000] <annevk>
Domenic: never mind, just land it as-is

[09:41:56.0000] <Domenic>
annevk: ok, if you say so!

[09:42:08.0000] <annevk>
Domenic: I can't really think of a better note than saying set an attribute has side effects and that is pretty obvious when you follow the link

[09:44:38.0000] <davygrvy>
Hi, I was wondering if I could ask about chromium's WebKit encodings module?  Is there a way to put it in a strict mode so named encodings such as iso8859-1 don't become windows-1252, but stay strict to what they are claimed as?

[09:47:55.0000] <annevk>
davygrvy: the person who might know doesn't seem to be around, but I kinda doubt it

[09:48:07.0000] <davygrvy>
tnks

[09:48:19.0000] <annevk>
davygrvy: not sure why they'd ship encodings the web doesn't need

[09:48:45.0000] <davygrvy>
for test/validation purposes

[09:50:48.0000] <jsbell>
irc-logs ends in january :(

[09:50:52.0000] <Domenic>
annevk: how long does it usually take for a merge to make its way to dom.spec.whatwg.org?

[09:50:58.0000] <Domenic>
jsbell: second link works still

[09:51:30.0000] <jsbell>
Dominic: \o/

[09:52:03.0000] <annevk>
Domenic: hmm should be immediate usually

[09:52:24.0000] <Domenic>
not seeing it, hope I didn't break anything...

[09:52:34.0000] <annevk>
Domenic: triggered a manual refresh, should be there now

[09:52:41.0000] <Domenic>
oh, there it goes

[09:53:01.0000] <jsbell>
davygrvy: I'm sorry you didn't like the answers you were given on chromium-discuss, but those are the answers you're going to get.

[09:53:04.0000] <annevk>
Domenic: sometimes there seems to be a little fluke, also with the tweets

[09:53:29.0000] <jsbell>
When specs and reality disagree, reality usually wins.

[09:53:37.0000] <davygrvy>
hi jsbell

[09:53:50.0000] <MikeSmith>
jsbell: also logged to http://logs.glob.uno/?c=freenode%23whatwg

[09:53:52.0000] <davygrvy>
or do it oneself

[09:54:36.0000] <davygrvy>
and not even bothering to to commit a changelog

[09:55:18.0000] <jsbell>
davygrvy: I can answer your questions on #blink

[09:56:26.0000] <jsbell>
(i.e. where to look to make a local build with the behavior you want)

[09:57:11.0000] <davygrvy>
I see most of it.. I thought I was forced to climb the mountain myself

[10:10:51.0000] <jsbell>
davygrvy: you're on your own for the changes, but time permitting I'm happy to answer questions over on #blink

[12:07:56.0000] <jhack>
is there a size limit to fetch’s body? I’m trying to send a base64 string within the body, but my fetch doesn’t seem to be working at all. Not sure whether it’s fetch or something else

[12:08:11.0000] <jhack>
pretty sure it’s something else, but wnated to double check

[12:10:07.0000] <wanderview>
jhack: shouldn't be a size limit... what browser?

[12:10:19.0000] <jhack>
doing this on react-native

[12:10:34.0000] <jhack>
chrome

[12:12:04.0000] <wanderview>
jhack: how are you initializing the body?

[12:12:15.0000] <jhack>
JSON.stringify ?

[12:13:08.0000] <wanderview>
jhack: I mean the Request or fetch() code you are using

[12:13:59.0000] <jhack>
it’s apart of the request obj

[12:14:18.0000] <jhack>
so fetch(..url.., { method, header, body })

[12:14:42.0000] <jhack>
ill put it up on gist

[12:14:46.0000] <wanderview>
thanks

[12:15:35.0000] <jhack>
https://gist.github.com/jhack32/6186ae4612a631e518e505c58d74c56f

[12:16:17.0000] <wanderview>
jhack: and what happens when you run it?

[12:16:23.0000] <jhack>
it doesnt run

[12:16:34.0000] <jhack>
holdon let me update that gist actually

[12:16:56.0000] <wanderview>
does it reject with an error?

[12:17:11.0000] <jhack>
no reject

[12:17:13.0000] <jhack>
or anything

[12:17:19.0000] <jhack>
my console logs inside the fetch doesnt show either

[12:17:28.0000] <jhack>
which was weird

[12:17:41.0000] <jhack>
but if I take out the promise before it, itll run fine

[12:18:08.0000] <wanderview>
the promise before it?

[12:18:17.0000] <jhack>
I updated the gist

[12:18:43.0000] <jhack>
so, it reads the file, converts it into base64, then does the fetch call

[12:19:39.0000] <wanderview>
jhack: I think you need `return fetch(` here: https://gist.github.com/jhack32/6186ae4612a631e518e505c58d74c56f#file-gistfile1-txt-L5

[12:19:49.0000] <wanderview>
you're not returning the promise from the fetch(), right?

[12:20:00.0000] <jhack>
no

[12:21:04.0000] <wanderview>
because if it throws then your inner .catch() just returns its error

[12:21:09.0000] <wanderview>
but its not returned to the outer .catch()

[12:22:35.0000] <jhack>
stil not gettin into fetch

[12:23:12.0000] <wanderview>
is your `this` correct?

[12:23:43.0000] <jhack>
should be, it consolelogs correctly

[12:23:58.0000] <jhack>
So it works on the emulator, but not on a device

[12:24:04.0000] <jhack>
which is what I’m trying to test it on right now

[12:24:10.0000] <wanderview>
hmm... you got me then, sorry

[12:24:19.0000] <jhack>
thanks tho

[12:40:50.0000] <wanderview>
jsbell: fyi, I started the upstream of our SW wpt tests today... hopefully it will get fully upstreamed on to github before our meeting monday https://hg.mozilla.org/integration/mozilla-inbound/rev/26e409f43a2e

[12:41:08.0000] <jsbell>
wanderview: awesome

[12:41:30.0000] <wanderview>
only took me a year to get around to it... :-\

[14:11:36.0000] <jhack>
is there usually a reason why fetch gives the error TypeError: Network request failed

[14:11:52.0000] <jhack>
I’m reading it could be due to the server’s certificate? But i’m trying to run fetch to AWS

[14:21:03.0000] <wanderview>
jhack: is this a cross-origin fetch?

[14:21:33.0000] <jhack>
yes

[14:22:41.0000] <jhack>
how can i log xhr?


2016-04-08
[01:08:48.0000] <Ms2ger>
/me hates css

[01:28:52.0000] <zcorpan>
MikeSmith: https://www.w3.org/Bugs/Public/show_bug.cgi?id=29563 maybe kill that component?

[01:46:51.0000] <MikeSmith>
zcorpan: thanks for the heads-up

[01:47:01.0000] <MikeSmith>
have disabled it for new bugs

[03:27:12.0000] <gsnedders>
Ms2ger: what's CSS done now?

[04:02:13.0000] <Ms2ger>
gsnedders, I was trying to start my day with something simple: add a few spec links to our text-decoration code

[04:02:44.0000] <Ms2ger>
Unfortunately, the spec doesn't have any requirements, let alone anchors to link to

[04:03:11.0000] <jgraham>
You sound surprised

[04:03:20.0000] <jgraham>
Any chance I can interest you in some PR reviews?

[04:03:31.0000] <Ms2ger>
You could try

[04:04:33.0000] <jgraham>
https://github.com/w3c/wptrunner/pull/179 or https://github.com/w3c/wpt-tools/pull/61 perhaps

[04:06:27.0000] <Ms2ger>
I wish wpt-tools had tests

[04:06:47.0000] <jgraham>
I wrote a test in that patch!

[04:07:17.0000] <Ms2ger>
!

[04:07:43.0000] <Ms2ger>
How does one run it?

[04:07:50.0000] <jgraham>
Using py.test

[04:08:58.0000] <Ms2ger>
, he says, expecting the other party to understand what that means in practice :)

[04:13:01.0000] <gsnedders>
Ms2ger: pip install pytest; py.test

[04:13:30.0000] <Ms2ger>
/me pokes around

[04:13:45.0000] <jgraham>
In general I agree that the lack of tests is sadness

[04:14:32.0000] <jgraham>
Code that is mostly reading files is kind of hard to test without the tests spiralling out of control

[04:15:44.0000] <jgraham>
I suppose I could try writing something that actually creates a git repo with some content and then makes local changes to that…

[04:16:53.0000] <jgraham>
In other news, all the blink-derived, mozilla-modified, web-platorm-tests for service workers just got upstreamed

[04:17:01.0000] <jgraham>
So hurrah to wanderview and others for that

[04:17:17.0000] <MikeSmith>
yippee

[04:22:05.0000] <Ms2ger>
Hmm, it discovered pywebsocket tests

[04:22:17.0000] <jgraham>
Hah

[04:22:29.0000] <jgraham>
You might want to run it under the manifest directory

[04:22:45.0000] <jgraham>
Or pass in that directory on the command line

[04:34:33.0000] <Ms2ger>
ImportError: No module named html5lib

[04:37:22.0000] <jgraham>
Ms2ger: Ah, you might have to create a virtualenv and install that, or something

[04:37:41.0000] <annevk>
Hmm, GitHub should have some feature where the author changes depending on who made the most changes in a squashed changeset

[07:04:55.0000] <annevk>
Interesting tactic by the W3C: https://github.com/w3c/webcomponents/commit/9d349eed0182c4a2c04e9da1676af2b2c41fdb9c

[07:05:04.0000] <annevk>
You can't be an editor but we'll take your edits anyway

[07:11:01.0000] <ato>
annevk: When a browsing context navigates to i.e. file:///, does the spec still consider that the same browsing context?

[07:12:04.0000] <ato>
annevk: May sound like an odd question, but it looks like Gecko replaces the content window with a chrome window, and I’m finding it difficult to grasp the terminology here.

[07:13:22.0000] <wanderview>
jgraham: thanks for uplifting it!

[07:14:37.0000] <jgraham>
wanderview: np

[07:14:53.0000] <jgraham>
I was super-pleased with the number of patches to uplift this time

[07:16:12.0000] <wanderview>
meaning lots of new wpt tests?

[07:16:38.0000] <jgraham>
Well I think lots of fixes from the e10s work too

[07:16:50.0000] <wanderview>
cool

[07:17:00.0000] <annevk>
ato: I think it would be the same browsing context, yes

[07:17:22.0000] <annevk>
ato: browsing context : window is 1:m

[07:17:42.0000] <annevk>
ato: but each browsing context does have a single WindowProxy, iirc, which makes this a bit confusing

[07:19:23.0000] <ato>
annevk: Okay, this is fine.  Just needed some confirmation my tests aren’t completely off.

[07:20:23.0000] <Ms2ger>
browsing context : windowproxy is 1:1, yes

[07:20:24.0000] <annevk>
jgraham: sounds like a couple of years of work are starting to have some impact 😃

[08:34:58.0000] <zcorpan>
Domenic: do you want https://github.com/whatwg/html/pull/994 as one commit or as three?

[08:39:04.0000] <zcorpan>
i suppose one

[08:47:15.0000] <Domenic>
zcorpan: sorry. Could go either way, one is fine.

[08:47:24.0000] <Domenic>
Interesting, I can no longer close or assign bugs on w3c/webcomponents.

[09:03:27.0000] <annevk>
That is weird, MikeSmith? ^^

[09:04:16.0000] <annevk>
I wonder if I got the same treatment, can't check right now, but that seems super petty

[09:04:44.0000] <annevk>
Especially after all the work they just copied from you without asking

[09:58:50.0000] <annevk>
Domenic: seems they only took it out on you, I can still do those kind of things, though I can't assign anything to you

[11:54:31.0000] <smaug____>
trying to recall... DOMString may include '\0', right?

[11:55:38.0000] <jsbell>
smaug____: yes

[11:56:34.0000] <jsbell>
and doesn't need to be valid UTF-16, can include non-characters, yadda yadda

[11:57:23.0000] <smaug____>
\u0000 seems to work

[12:03:03.0000] <jsbell>
Frequent source of implementation bugs with APIs that take DOMStrings, of course.

[12:56:29.0000] <TabAtkins>
Yeah, DOMString is in the WTF-16 encoding https://simonsapin.github.io/wtf-8/#wtf-16

[13:46:32.0000] <Sebmaster>
annevk: does http://unicode.org/reports/tr46/#Validity_Criteria disallow urls like https://r3---sn-p5qlsnz6.googlevideo.com/, or am i misinterpreting somewhere?

[14:38:53.0000] <SimonSapin>
Sebmaster: it does but implementations apparently don’t follow that rule: https://github.com/whatwg/url/issues/53#issuecomment-181528158

[14:40:00.0000] <Sebmaster>
Sweet, thanks, missed that response for some reason

[15:03:59.0000] <TabAtkins>
Domenic: Mind screenshotting that date input and sending to me?

[15:04:36.0000] <jyasskin>
MikeSmith: Can you switch https://github.com/w3c/permissions to only allow squash merges? (Or give me admin over that repo so I can do it?)

[15:04:48.0000] <Domenic>
TabAtkins: I just did a google image search https://www.google.com/search?q=ios+input+type+date&source=lnms&tbm=isch&sa=X&ved=0ahUKEwij06vBhYDMAhXLez4KHVyOA_YQ_AUICCgC&biw=2301&bih=1315

[15:04:52.0000] <Domenic>
I'll edit the post to include that link

[15:09:11.0000] <jyasskin>
MikeSmith: (https://help.github.com/articles/configuring-pull-request-merge-squashing/)

[15:11:20.0000] <MikeSmith>
jyasskin: Yeah will do now

[15:11:26.0000] <jyasskin>
MikeSmith: Thanks!

[15:11:54.0000] <MikeSmith>
we have done so already for other repos

[15:12:10.0000] <MikeSmith>
well, where we = whatwg

[15:19:00.0000] <MikeSmith>
jyasskin: done now

[15:19:14.0000] <MikeSmith>
and you are now an admin for it as well

[15:19:43.0000] <jyasskin>
:)


2016-04-09
[23:08:10.0000] <jyasskin>
It looks like there's no <dfn> of "user agent" or "browser" in HTML. Several other specs define "user agent", but they don't seem authoritative.

[02:55:47.0000] <annevk>
jyasskin: we should maybe have some overarching specification that defines a couple of those things

[02:56:11.0000] <annevk>
jyasskin: so far "user agent" is just a term of art I guess, without formal definition

[02:58:20.0000] <MikeSmith>
I think that is by design

[02:58:22.0000] <MikeSmith>
from Hixie_

[02:58:31.0000] <MikeSmith>
not an oversight

[02:58:57.0000] <MikeSmith>
as far as HTML goes

[04:37:17.0000] <SimonSapin>
annevk: re overarching spec, isn’t HTML the kitchen sink already? :)

[04:40:47.0000] <annevk>
Heh, hopefully one day we figure out a way to make it not like that

[05:07:55.0000] <smaug____>
/me wonders if CustomElementRegistry handling in case of document.write or initial about:blank document has been thought through.

[05:14:39.0000] <annevk>
smaug____: it has been considered

[05:15:12.0000] <annevk>
smaug____: document.write() probably only to the extent that </script> can do that too

[05:35:39.0000] <smaug____>
so not document.write after load event

[05:35:46.0000] <smaug____>
but perhaps the current setup is fine

[05:41:11.0000] <smaug____>
cancelBubble has been in UIEvent in Gecko at least 15 years

[05:43:58.0000] <smaug____>
hmm, it used to have some different behavior

[05:44:20.0000] <smaug____>
it has always set the stopPropagation flag

[05:44:52.0000] <smaug____>
but if I read this code from 1999 right, one was able to set it only during bubble phase or something

[05:45:14.0000] <smaug____>
/me tries to recall the meaning of various flags in old gecko

[05:45:54.0000] <smaug____>
ok, cancelBubble was added in a commit "Adding old 4.x capture/release compatibility code"

[05:46:04.0000] <smaug____>
(unfortunately no bug number)

[09:35:29.0000] <annevk>
smaug____: I sure hope toggling stop propagation is a sufficient implementation

[09:49:32.0000] <smaug____>
yeah

[09:49:35.0000] <smaug____>
I wonder what Edge does

[09:50:04.0000] <smaug____>
annevk: one option is to try to remove the attribute

[09:50:14.0000] <smaug____>
I have no idea how often it is being used

[09:51:12.0000] <annevk>
smaug____: hopefully philipj can figure that out, but with everyone having something…

[09:51:34.0000] <smaug____>
oh, "EventCancelBubble 3.2310%"

[09:51:42.0000] <smaug____>
if I interpret chrome status right

[09:53:21.0000] <annevk>
Geez

[10:04:00.0000] <smaug____>
oh, right. IE didn't use to have .stopPropagation() but only cancelBubble

[10:04:03.0000] <smaug____>
no wonder


2016-04-10
[04:14:51.0000] <hsivonen>
what's the use case for https://encoding.spec.whatwg.org/#utf-8-decode ? (UTF-8 decode with BOM removal but not honoring UTF-16 BOMs)

[04:15:02.0000] <hsivonen>
i.e. which specs use that hook?

[04:36:32.0000] <annevk>
hsivonen: workers, JS modules, EventSource, XHR JSON, WebVTT, etc

[06:37:00.0000] <hsivonen>
annevk: thanks

[07:30:22.0000] <GPHemsley>
annulen et al.: There was little to no discussion on any of my XXX comments in mimesniff.

[07:33:03.0000] <annevk>
GPHemsley: annulen?

[07:33:35.0000] <GPHemsley>
Hey, I'm just responding to whoever asked me a question.

[07:34:38.0000] <GPHemsley>
<annulen> GPHemsley: in https://mimesniff.spec.whatwg.org/#rules-for-identifying-an-unknown-mime-type 7.1.1 ends with "What about feeds?" question. I wonder, was there any discussion on this topic?

[07:34:39.0000] <GPHemsley>
<annulen> also, what about SVG? AFAIU, according to this section it should end up as text/xml

[07:40:48.0000] <annevk>
Ah

[14:44:00.0000] <Domenic>
Are there no web platform tests for the encoding standard as it applies to parsing? Only for TextEncoder/TextDecoder? /cc jgraham Ms2ger

[14:53:19.0000] <gsnedders>
Domenic: not really

[14:57:44.0000] <Domenic>
Well, I'm going to try to make a jsdom volunteer write some, then...

[15:02:53.0000] <Domenic>
And SVG tests are in the CSSWG test suite, I assume :-/

[15:03:15.0000] <Domenic>
or... don't exist?

[15:04:00.0000] <gsnedders>
SVG tests are in their own repo

[15:04:18.0000] <gsnedders>
I'm not entirely sure about the status wrt SVG2

[15:07:46.0000] <gsnedders>
Domenic: or, uh, maybe they aren't in any repo?

[15:07:55.0000] <Domenic>
I found https://www.w3.org/Graphics/SVG/WG/wiki/Test_Suite_Overview ...

[15:08:01.0000] <gsnedders>
yeah

[15:08:09.0000] <gsnedders>
maybe there's nothing being updated for SVG2 yet :\

[15:08:20.0000] <gsnedders>
/me wonders who to ping who'll know

[15:08:21.0000] <Domenic>
looks like nothing on github at least

[15:08:31.0000] <Domenic>
heycam|away or TabAtkins have been my recent go-tos for SVG questions

[15:08:46.0000] <Domenic>
I'll just tell this contributor to put them in web-platform-tests/to-upstream/svg/

[15:08:50.0000] <Domenic>
and we'll figure it out later

[15:21:06.0000] <gsnedders>
https://www.w3.org/Graphics/SVG/WG/wiki/SVG2/Authoring_Guide has nothing ontestsuites

[15:21:43.0000] <gsnedders>
https://www.w3.org/Graphics/SVG/WG/wiki/Main_Page#Testing says they should go into wpt

[15:26:17.0000] <gsnedders>
Domenic: so yeah, the svg directory in wpt is the current SVG testsuite


2016-04-11
[09:55:09.0000] <jyasskin>
TabAtkins: Could you add the now-bikeshedded https://w3c.github.io/permissions/ to Shepherd?

[09:56:17.0000] <annevk>
jyasskin: that is great news

[09:56:38.0000] <annevk>
TabAtkins: also add https://storage.spec.whatwg.org/ if it isn't already

[09:57:01.0000] <annevk>
jyasskin: I should have some later this week to get persistent-storage in

[09:58:17.0000] <jyasskin>
annevk: Cool. I'm going to go through the comments folks made on #66 and get them fixed up, in spare time between Bluetooth work. I should be able to accept PRs fairly quickly.

[10:10:58.0000] <jgraham>
So, what's the input to the navigation algorithm these days? A URL object or a URL string?

[10:11:23.0000] <jgraham>
The text looks like it expects an object, but https://html.spec.whatwg.org/#following-hyperlinks:navigate seems to call it with a string

[10:27:59.0000] <annevk>
jgraham: there's no consistency on that yet, but it should be an object in the end

[10:28:14.0000] <annevk>
jgraham: I'm hoping to get around to refactoring the navigate algorithm in due course

[10:28:38.0000] <annevk>
jgraham: probably starting with making it clearer what the actual arguments to the algorithm are

[10:36:46.0000] <jgraham>
annevk: So one should expect the final outcome to be that you have to pass in a url object?

[10:37:16.0000] <annevk>
jgraham: I think so, otherwise navigating to blob URLs would not work correctly

[10:38:55.0000] <jgraham>
OK

[10:39:04.0000] <jgraham>
Thanks

[10:56:20.0000] <annevk>
smaug____: any chance you could update https://bugzilla.mozilla.org/show_bug.cgi?id=1211894?

[11:11:44.0000] <smaug____>
/me tries to page in that change soon

[11:20:31.0000] <annevk>
ta

[12:16:24.0000] <smaug____>
annevk: so do you know if Edge has the same behavior as Blink?

[12:37:56.0000] <annevk>
smaug____: I don't know apart from what Travis wrote in the corresponding issue

[12:38:17.0000] <annevk>
smaug____: I still need to get Edge on a VM

[12:44:44.0000] <Domenic>
Someone provide me something to test, I can run it in Edge.

[12:45:07.0000] <Domenic>
I feel like Microsoft should send free windows laptops to all spec editors or something

[12:46:13.0000] <annevk>
Hmm, free hardware from all the vendors for spec editors!

[12:47:58.0000] <Domenic>
yeah, i guess apple should provide us with macs too

[12:48:11.0000] <Domenic>
or we could be employed by companies that let us expense such things, that works too

[12:49:32.0000] <smaug____>
/me has a macbook just to boot it twice a year to test something on OSX

[14:31:01.0000] <laughinghan>
of the two links for logs for this channel, only the second one works, the first link shows empty logs for today and the past several days: https://wiki.whatwg.org/wiki/IRC

[15:35:24.0000] <miketaylr>
Domenic: guess they didn't like ur edits https://github.com/w3c/webcomponents/commit/03b9f3ec9e456c86d088b8f211c84d15818bbbdc

[15:54:21.0000] <Domenic>
miketaylr: they took all the text

[15:54:56.0000] <miketaylr>
Domenic: oh, so they did like your edits

[15:55:10.0000] <Domenic>
unclear it's legit

[15:55:18.0000] <Domenic>
it wasn't contributed under the process


2016-04-12
[18:23:41.0000] <Domenic>
realm craziness https://github.com/w3c/battery/issues/2

[19:41:39.0000] <MikeSmith>
wow

[22:03:09.0000] <annevk>
Domenic: prolly just poorly reviewed and not implemented that way

[22:03:17.0000] <terinjokes>
Domenic: 👏

[22:03:33.0000] <annevk>
Domenic: unclear how it is implemented though…

[22:04:27.0000] <annevk>
krijn: any ETA on log migration?

[22:49:40.0000] <krijn>
Will try this week, but very busy

[00:36:32.0000] <annevk>
krijn: ta, understood

[01:58:45.0000] <zcorpan>
Error: missing <dfn> for topic "math:mi" explicitly from <code> element containing "mi"; previous heading contents are "12.2.3.2 The stack of open elements"

[01:58:49.0000] <zcorpan>
annevk: do you get that also?

[01:59:28.0000] <annevk>
zcorpan: you might need to do git pull, I think Domenic fixed that in a follow up commit

[01:59:56.0000] <annevk>
zcorpan: your menuitem change was incorrectly rebased I suppose

[02:00:13.0000] <zcorpan>
i see

[02:52:06.0000] <Ms2ger>
annevk, is there a non-historical reason that "origin" is defined in HTML rather than URL?

[02:54:22.0000] <annevk>
Ms2ger: it seems a bit bigger than URLs, since many things can have them, dunno

[04:05:42.0000] <zcorpan>
MikeSmith: thoughts on checking lang against language analysis in the html checker? https://www.w3.org/Bugs/Public/show_bug.cgi?id=26942#c13

[04:23:13.0000] <MikeSmith>
/me looks at zcorpan link

[04:26:06.0000] <MikeSmith>
zcorpan: https://github.com/shuyo/language-detection

[04:27:21.0000] <MikeSmith>
「99% accuracy for 53 languages」

[04:27:30.0000] <MikeSmith>
(if that is what you had in mind)

[04:28:07.0000] <MikeSmith>
would be a fun thing to implement

[04:29:18.0000] <MikeSmith>
not sure how to do it without just collecting all the text content of the entire document

[04:31:11.0000] <MikeSmith>
or I guess I wouldn’t need to save/store the text content but instead just check each text node as the parser exposes it

[05:02:15.0000] <smaug____>
what is sicking's github handle

[05:06:39.0000] <Ms2ger>
https://github.com/sicking

[05:33:16.0000] <zcorpan>
MikeSmith: yeah

[06:18:02.0000] <SimonSapin>
annevk: what do you think? https://github.com/whatwg/url/issues/104

[06:20:40.0000] <annevk>
SimonSapin: wouldn't that allow a URL without a host to get a special scheme?

[06:36:10.0000] <SimonSapin>
annevk: yes, that’s a case that I forgot and should be prevented

[06:36:36.0000] <SimonSapin>
still, nothing wrong going between http://example.com/ and view-source+http://example.com/

[06:37:27.0000] <annevk>
I think that might be blocked for Location actually

[06:37:49.0000] <SimonSapin>
but for URL objects?

[06:37:50.0000] <annevk>
But that might require some further fixes

[06:38:16.0000] <annevk>
Can we make that distinction easily?

[06:38:49.0000] <SimonSapin>
annevk: now that URLUtils is gone and everything defines their own getters and setters yes

[06:39:12.0000] <annevk>
Well, they all still use the same parser

[06:39:27.0000] <annevk>
But sure, everything is possible

[06:49:07.0000] <annevk>
SimonSapin: anyway, prolly reasonable to fix in some way, just need to find a bit of time

[06:49:40.0000] <annevk>
SimonSapin: if you are blocking on me I'll try to get to it by Friday

[06:51:15.0000] <SimonSapin>
annevk: I’m writting some tests for setters and need to write them one way or another, but I can change them later

[06:51:41.0000] <SimonSapin>
I’ll submit them to wpt

[06:59:17.0000] <Domenic>
yessss setter tests yessss

[06:59:20.0000] <Domenic>
need those badly

[06:59:43.0000] <annevk>
Sorry for the delay in fixes, between Shadow DOM, whatwg/html, and this presentation I need to finish I'm suddenly strap for time

[07:00:44.0000] <annevk>
SimonSapin: if you ever want to start editing again 😊

[07:02:25.0000] <SimonSapin>
Domenic: want to write a JS harness for https://github.com/servo/rust-url/blob/1.0/tests/setters_tests.json ?

[07:02:42.0000] <Domenic>
SimonSapin: not if you're going to do it first! :)

[07:03:20.0000] <SimonSapin>
Domenic: testing my rust implementation for now

[07:03:34.0000] <zcorpan>
hsivonen: fyi I get a 502 again for *.validator.nu

[07:08:00.0000] <annevk>
zcorpan: https://checker.html5.org/

[07:08:29.0000] <zcorpan>
annevk: thx, though i actually wanted to use https://parsetree.validator.nu/ :-)

[07:08:56.0000] <annevk>
aah, maybe MikeSmith should add that to checker.html5.org somewhere

[07:10:25.0000] <SimonSapin>
annevk: no worries re delays. I don’t mind sending PRs for edits once they’re decided, but there’s plenty of corner cases where I don’t know if there a reason if something is the way it is or if it’s a copy/paste mistake or something

[07:11:53.0000] <Ms2ger>
/me unsubscribed from whatwg/{html,dom}

[07:12:37.0000] <Domenic>
aww

[07:15:22.0000] <Ms2ger>
Feel free to cc me if you think I'd be interested, but y'all spam too much :)

[07:15:50.0000] <Ms2ger>
Especially with github's one-email-per-review-comment crap

[07:16:07.0000] <annevk>
Enabling email for GitHub is beginner's mode

[07:16:34.0000] <annevk>
But you'll be paged as appropriate

[07:17:06.0000] <SimonSapin>
subscribing to repos is a terrible idea http://i.imgur.com/uVDIXm4.png

[07:17:48.0000] <Domenic>
somehow it works for me. but i guess it is my job.

[07:18:10.0000] <Domenic>
i unsubscribe from individual threads aggressively, but i haven't done that on html

[07:18:26.0000] <SimonSapin>
("Mentions" these days is header :is ["X-GitHub-Reason"] ["manual", "author", "comment", "mention", "assign"])

[07:19:04.0000] <annevk>
This is why email seems so terrible for this, if there was a long discussion, you'll have 25 emails, just one notification though

[07:23:46.0000] <MikeSmith>
zcorpan: https://checker.html5.org/parsetree/

[07:29:11.0000] <zcorpan>
MikeSmith: ty!

[07:43:05.0000] <Ms2ger>
Oh look: https://www.w3.org/TR/2016/WD-CSS22-20160412/

[08:12:44.0000] <Ms2ger>
annevk, do you know of any spec that defines onfoo idl attributes well?

[08:23:15.0000] <annevk>
Ms2ger: not for nodes or global

[08:24:22.0000] <Ms2ger>
This is for https://github.com/w3c/page-visibility/issues/22

[08:52:02.0000] <hsivonen>
Validator.nu is back. The server had got so stuck that the watchdog didn't work and I couldn't log in, either.

[09:24:26.0000] <zcorpan>
what is the right design for https://lists.w3.org/Archives/Public/www-style/2016Apr/0171.html ? Domenic?

[09:25:38.0000] <Domenic>
zcorpan: uhhhhh definitely not an event listener that fires when you add it

[09:26:16.0000] <zcorpan>
right

[09:26:18.0000] <Domenic>
zcorpan: promises are appropriate when you care about the *next* change, not all future ones. not sure if that's tehe case here

[09:26:31.0000] <Domenic>
I haven't backed up to read the whole thread yet but I'd guess property + event?

[09:27:24.0000] <zcorpan>
the problem with property is that it could either be out of date or it would flush layout

[09:31:17.0000] <Ms2ger>
Fire along with DOMContentLoaded?

[09:32:02.0000] <Domenic>
maybe make it a method so it's more obvious it flushes layout?

[09:55:25.0000] <smaug____>
does anyone recall why we decided (I assume we decided it at some point) why shadow scripts run scripts in global scope?

[12:15:31.0000] <annevk>
smaug____: I think other engines do not have much options here, we did discuss the various levels of encapsulation

[12:16:10.0000] <annevk>
smaug____: isolation is some kind of v2 concept some want, though processing model is unclear

[12:16:11.0000] <smaug____>
well, I wasn't thinking about encapsulation here

[12:16:15.0000] <smaug____>
nor isolation

[12:16:18.0000] <smaug____>
but about the scope

[12:17:27.0000] <annevk>
Hmm well without a global there is not much API

[12:17:53.0000] <annevk>
But maybe I do not understand what you are thinking off

[12:18:02.0000] <smaug____>
there are different options

[12:18:17.0000] <smaug____>
like, 'this' could point to the shadow <script>

[12:19:43.0000] <smaug____>
similar to event handler I guess

[12:20:01.0000] <benjamingr__>
I have a question: `var embed = document.createElement("embed"); embed()` - this is correct behavior according to the spec, but I'm not sure why - or how I can utilize it or why it's there - if it's some legacy reason is there any reference about why it's there somewhere?

[12:22:55.0000] <jyasskin>
Ms2ger: Is https://webbluetoothcg.github.io/web-bluetooth/#idl-event-handlers a reasonable way to define the onfoo idl attributes?

[13:21:49.0000] <Domenic>
benjamingr__: because websites depend on it?

[14:12:38.0000] <TabAtkins>
jyasskin: I think so, yes.

[14:12:58.0000] <jyasskin>
TabAtkins: Thx. I sent it to https://github.com/w3c/page-visibility/issues/22.

[14:19:40.0000] <benjamingr__>
Domenic: yes, but I'm wondering why? What plugin utilized this so that websites would depend on it?

[14:20:27.0000] <Domenic>
benjamingr__: I'd guess Java or Flash.

[14:21:13.0000] <benjamingr__>
I tried both and couldn't find info for either about how to control what `()` does on the embed element. Trying it for some random flash files and java applets didn't produce anything meaningful in Chrome or IE9, maybe I'll check earlier

[15:05:29.0000] <jyasskin>
TabAtkins: Can you ingest https://encoding.spec.whatwg.org/ into Shepherd?

[16:55:17.0000] <jyasskin>
TabAtkins: Also ping on adding https://w3c.github.io/permissions/

[16:57:23.0000] <TabAtkins>
Permissions is easy. Encoding won't have any of their definitions exported, so you'll have to provide a `spec` argument for all the links (or set them up in link-defaults) - is that ok?

[16:58:12.0000] <jyasskin>
TabAtkins: I've sent https://github.com/whatwg/encoding/pull/43 to export the definitions.

[16:58:21.0000] <TabAtkins>
Ah, cool.

[16:59:05.0000] <jyasskin>
Thanks!


2016-04-13
[17:01:35.0000] <TabAtkins>
Both done.

[21:15:11.0000] <annevk>
benjamingr__: I think legacycaller is there for plugins, if that is what you meant

[21:53:31.0000] <Domenic>
annevk: yay, thanks for the review. Will merge tomorrow morning!!

[21:53:42.0000] <annevk>
\o/

[21:54:05.0000] <annevk>
/me woke up early and figured he should ignore all distraction until that was done

[21:54:27.0000] <annevk>
I mostly ended up adding "then"

[21:54:56.0000] <annevk>
I also removed the comment under the HTMLUnknownElement list since it was no longer accurate and I renamed "re-throw" to "rethrow" once to match established conventions

[22:00:17.0000] <Domenic>
perfect <3

[22:31:32.0000] <laughinghan>
question that's narrowly about history.scrollRestoration but more broadly about when breaking changes are allowed to the spec

[22:31:56.0000] <laughinghan>
if something has been implemented in two major browsers, compatibly, but hasn't been implemented in the others yet (like at all, not even experimentally)

[22:32:09.0000] <laughinghan>
is a breaking change out of the question? Especially if it makes more sense

[22:51:31.0000] <MikeSmith>
laughinghan: not out of the question and there have been non-hypothetical cases of that

[22:51:42.0000] <laughinghan>
really? awesome

[22:51:50.0000] <laughinghan>
I'm working on an illustration right now

[22:51:59.0000] <laughinghan>
(of the change I'm gonna propose)

[22:52:03.0000] <MikeSmith>
cool

[22:52:09.0000] <laughinghan>
MikeSmith: out of curiosity, know off the top of your head

[22:52:16.0000] <laughinghan>
of such cases?

[22:53:43.0000] <MikeSmith>
not off the top of my head but annevk or Domenic might have some at hand

[22:55:01.0000] <MikeSmith>
one thing I do remember, there is something that everybody changed that affected Acid2 rendering

[22:55:32.0000] <MikeSmith>
http://acid2.acidtests.org/#top

[22:55:43.0000] <MikeSmith>
that band across the eyes

[22:55:57.0000] <laughinghan>
what about it?

[22:56:30.0000] <MikeSmith>
that is an artifact of a subsequent change in implementations

[22:56:49.0000] <MikeSmith>
originally all browsers did not have the in their renderings

[22:57:02.0000] <MikeSmith>
instead it looked just like http://acid2.acidtests.org/reference.html

[22:57:44.0000] <annevk>
I think for new features that is rare, but who knows

[23:00:12.0000] <laughinghan>
ohhh

[23:00:20.0000] <laughinghan>
interesting

[23:00:37.0000] <laughinghan>
wait but that got enshrined as official behavior right?

[23:00:49.0000] <laughinghan>
so the opposite of what I want?

[23:01:03.0000] <laughinghan>
Not that I'm complaining, that's still interesting

[23:01:33.0000] <MikeSmith>
it was a breaking change for anything that relied on the behavior that acid2 required previously

[23:01:51.0000] <MikeSmith>
maybe there wasn’t much that relied on it, I dunno

[23:02:16.0000] <MikeSmith>
that test tests some crazy-ass corner-case stuff

[23:03:56.0000] <laughinghan>
huh, interesting

[23:04:17.0000] <MikeSmith>
anyway you never know til you try

[23:04:25.0000] <MikeSmith>
stranger things have happened

[23:06:31.0000] <laughinghan>
:)

[23:48:21.0000] <laughinghan>
okay here it is: http://output.jsbin.com/zapoyu

[23:48:24.0000] <laughinghan>
I'm also gonna open a GitHub ticket (unless you say I shouldn't)

[00:01:15.0000] <MikeSmith>
haha

[00:01:33.0000] <MikeSmith>
massive points for incorporation of the dada engine

[00:02:19.0000] <MikeSmith>
btw you may enjoy https://logopoeia.com/wisdom/

[00:02:40.0000] <MikeSmith>
ah he’s gone

[00:02:54.0000] <MikeSmith>
well I hope he does open an issue

[00:45:51.0000] <laughinghan>
okay submitted issue: https://github.com/whatwg/html/issues/1042

[00:46:04.0000] <laughinghan>
also created a test case for the desired browser behavior (automated & manual)

[00:46:23.0000] <laughinghan>
good night

[03:59:02.0000] <zcorpan>
disappointed that github's squash and merge isn't smart about fixup commits

[04:01:09.0000] <jgraham>
Well yes

[04:01:17.0000] <jgraham>
GitHub are great at half-assing features

[04:15:00.0000] <annevk>
zcorpan: you mean that you need to determine yourself whether to keep the commit message?

[04:16:19.0000] <zcorpan>
annevk: git commit --fixup hash means there's no message, and it gets automatically squashed into the provided commit when rebasing

[04:16:49.0000] <zcorpan>
annevk: but github doesn't seem to care and i still need to do cleanup in the textarea

[04:16:55.0000] <annevk>
I see

[06:18:48.0000] <Ms2ger>
Anyone know what spec defines a dictionary constructor?

[06:22:01.0000] <smaug____>
Ms2ger: webidl?

[06:25:58.0000] <smaug____>
Ms2ger: like http://heycam.github.io/webidl/#es-dictionary-constructors

[06:26:04.0000] <Ms2ger>
Yeah

[06:26:41.0000] <smaug____>
can't recall why it was added though

[06:26:48.0000] <smaug____>
I guess there must have been some use case

[06:27:13.0000] <Ms2ger>
/me looks at blame

[06:28:51.0000] <Ms2ger>
>  heycam committed on 26 Mar 2013

[06:29:17.0000] <smaug____>
I hope there was some message why it was committed

[06:29:35.0000] <Ms2ger>
" Allow [Constructor] on dictionaries. "

[06:30:05.0000] <smaug____>
/me kicks w3c spec stylesheet

[06:32:37.0000] <smaug____>
good that webidl still uses the old, good one, but some other specs ...

[07:26:48.0000] <zcorpan>
can SVG elements be customized built-in elements?

[07:29:21.0000] <annevk>
zcorpan: don't think so

[07:37:49.0000] <zcorpan>
how come we allow any attribute on customized built-in elements? isn't that as problematic for future extensions to the language as any attribute on non-custom standard elements?

[08:33:13.0000] <Domenic>
yeah, maybe we should leave them disallowed for now and discuss in a separate issue

[13:53:51.0000] <zcorpan>
https://www.peterkrautzberger.org/0186/?utm_source=html5weekly&utm_medium=email "MathML is a failed web standard"

[13:55:21.0000] <laughinghan>
zcorpan: https://www.w3.org/community/mathonwebpages/2016/04/13/call-for-participation-in-getting-math-onto-web-pages-community-group/

[13:55:57.0000] <Domenic>
zcorpan: oh, you're back. review custom elements ^_^

[13:56:11.0000] <laughinghan>
the charter for the Math WG (in charge of MathML) has lapsed; the author of that blogpost launched the new CG I just linked to

[13:56:33.0000] <Domenic>
MathML has 2 impls, right? WebKit and Gecko? So not a straightforward thing to remove :-/

[13:56:45.0000] <laughinghan>
also is that being posted here 'cos we hate MathML here? :D

[13:57:51.0000] <laughinghan>
Domenic: according to pkra, at least, both of those impls were written and primarily maintained by volunteers from his community, not browser vendor employees

[13:57:53.0000] <Domenic>
meh, seems fine, just not implemented and doesn't seem to be going places.

[13:58:06.0000] <Domenic>
yeah, still

[13:58:25.0000] <Domenic>
Gecko had a debate on removing mathml a while ago that didn't seem to go anywhere

[13:59:10.0000] <laughinghan>
the dev.platform.mozilla or whatever mailing list thread? Yeah I have that open a browser tab, read halfway through haha

[13:59:17.0000] <Domenic>
yeah

[13:59:41.0000] <zcorpan>
laughinghan: i don't think it's hated here, i posted it because i found it interesting and thought it would be interesting for people here also

[13:59:55.0000] <laughinghan>
damn haha

[14:00:06.0000] <laughinghan>
but yeah, def a good article

[14:02:16.0000] <zcorpan>
in practical terms there being two partial implementations shouldn't prevent better solutions from being developed, but maybe mentally people expect MathML to eventually magically become good

[14:04:50.0000] <TabAtkins>
annevk: <3 for getting some useful Shadow DOM terms into DOM; reffing them now in the CSS Scoping spec instead of redefining them.

[14:08:18.0000] <zcorpan>
Domenic: r+

[14:08:23.0000] <Domenic>
\o/

[14:10:02.0000] <zcorpan>
nice work 👏

[14:16:01.0000] <gsnedders>
Domenic: Presto supported the CSS subset of MathML

[14:16:09.0000] <gsnedders>
Domenic: not that that is relevant any more

[14:28:47.0000] <jgraham>
Presto invented the CSS subset of MathML

[15:07:07.0000] <jyasskin>
TabAtkins: Might it be the case that Shepherd isn't indexing enum-value dfns? My {{"prompt"}} isn't finding the definition in Permissions.

[15:17:19.0000] <TabAtkins>
jyasskin: Hmmmmmmmmm. It shows up in the db just fine, so it's being indexed.  `bikeshed refs --text='"prompt"'` returns it.  It's just not working in the {{"prompt"}} shorthand. Investigating.

[15:18:07.0000] <TabAtkins>
Oh, I see the problem.

[15:18:22.0000] <TabAtkins>
It's indexed as type=value for some reason. Your markup is right, so yeah, looks like a Shepherd bug. Bugging plinss now.

[15:48:21.0000] <TabAtkins>
jyasskin: plinss is fixing the issue now. Should show up in a little while.

[15:48:32.0000] <jyasskin>
Great, thanks!


2016-04-14
[20:14:53.0000] <hdhoang>
 .gwwwwwwwwiiyj .py,

[20:15:33.0000] <hdhoang>
=

[20:15:34.0000] <hdhoang>
h

[20:17:23.0000] <hdhoang>
jyasskin, w89g ku.ekj x bwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwmmmmmmmmmmmmmmmmmmmmmuuuuk6666666666666666666666666666666666bbbbbbbbbbbb

[20:17:59.0000] <hdhoang>
qbhqoae

[20:19:14.0000] <hdhoang>
ooooooooooooooooooohhhhhhhhhhhhhhhhh            h55cccccccccccuqquuuuuuu

[20:19:17.0000] <hdhoang>
 

[20:19:18.0000] <hdhoang>
b

[20:20:27.0000] <hdhoang>
hg77bbbbbb      yyyyyyyyyyyyyyjkyyjjjjjjjjjjjjjjjjjjjjjjjq,sorry

[23:52:54.0000] <shaharmor>
Hey Anne, i see that you are also one of the owners here so i guess there's not point for me asking it here too..

[00:00:53.0000] <annevk>
shaharmor: ask what?

[00:01:16.0000] <annevk>
shaharmor: oh, that ProgressEvent thing?

[00:01:24.0000] <shaharmor>
Yeah

[00:02:01.0000] <annevk>
Almost always when the specification says something but all implementations do something else, the specification is wrong

[00:02:10.0000] <shaharmor>
But in Chrome its not like this

[00:02:13.0000] <shaharmor>
Its only on Firefox

[00:02:20.0000] <annevk>
That is interesting

[00:03:00.0000] <annevk>
shaharmor: that would have been good to mention

[00:03:07.0000] <annevk>
shaharmor: I support reopening on that basis

[00:03:15.0000] <shaharmor>
Oh, sorry about that

[00:03:20.0000] <shaharmor>
Ok i will

[00:03:24.0000] <shaharmor>
Thanks

[00:09:36.0000] <shaharmor_>
done

[00:12:07.0000] <annevk>
shaharmor_: filed https://github.com/whatwg/fetch/issues/284

[00:12:37.0000] <annevk>
shaharmor_: and thanks, sorry about causing you some trouble

[00:13:04.0000] <shaharmor_>
No thank you

[00:13:21.0000] <shaharmor_>
This will be helpful if it will be fixed :)

[00:18:19.0000] <shaharmor_>
If this will indeed be fixed, will it only go to Fetch or also to XHR?

[00:19:22.0000] <annevk>
shaharmor_: mostly Fetch, XHR just reads out the bits that Fetch passes to it at this point

[00:20:01.0000] <annevk>
shaharmor_: e.g., progress event's total attribute just reflects Fetch's response's body's total bytes's value

[00:22:43.0000] <shaharmor_>
That means that if it will be fixed in Fetch it will not be reflected in XHR

[00:24:59.0000] <annevk>
shaharmor_: XHR would automatically pick it up, really

[00:25:22.0000] <shaharmor_>
Got it, thats great

[01:25:13.0000] <MikeSmith>
anybody know if Firefox devtools provide a way for me to delete a service worker

[01:25:32.0000] <MikeSmith>
wanderview: ⬆

[01:30:39.0000] <annevk>
MikeSmith: you can use about:serviceworkers to do it

[01:33:32.0000] <MikeSmith>
annevk: yup, just found that

[01:33:40.0000] <MikeSmith>
by way of https://wiki.mozilla.org/Service_Workers

[01:33:44.0000] <MikeSmith>
overholt++

[01:58:11.0000] <MikeSmith>
annevk: FYI I’m told about:debugging#workers is the new hotness

[01:58:34.0000] <MikeSmith>
central place, rather than separate about:serviceworkers etc

[02:56:44.0000] <annevk>
Is there some programmer's guide to encapsulation?

[02:57:27.0000] <annevk>
I feel like we keep treading water with Shadow DOM with only smaug---- and rniwa having a set of principles in their head

[06:33:50.0000] <zcorpan>
https://html.spec.whatwg.org/multipage/browsers.html#nested-browsing-contexts - is there any element that creates a browsing context when it's not in a document?

[06:34:55.0000] <Ms2ger>
I don't think so

[06:39:29.0000] <annevk>
zcorpan: shadow trees might

[06:39:39.0000] <annevk>
zcorpan: unless you meant in a shadow-including document

[06:40:04.0000] <annevk>
zcorpan: I still need to figure out a sensible model for that though since it seems like nobody else is going to

[06:40:34.0000] <zcorpan>
annevk: the spec references https://dom.spec.whatwg.org/#in-a-document for "in" currently

[06:40:36.0000] <annevk>
Hopefully tomorrow I can put some time into shadow trees again, they're kinda fun

[06:40:57.0000] <annevk>
zcorpan: yeah I know, that will all need to change throughout the entire HTML Standard for shadow trees

[06:41:15.0000] <annevk>
zcorpan: except of course where we want to keep the existing behavior, good times all around

[06:41:25.0000] <zcorpan>
:-)

[06:44:40.0000] <annevk>
zcorpan: so mkwst is touching "update a style block" and I noticed that at no point whatsoever do we pass "style data" to the CSS subsystem

[06:45:02.0000] <annevk>
zcorpan: is CSS expected to use the element and then extract the style data itself, hopefully using the same algorithm HTML put in place?

[06:46:50.0000] <zcorpan>
annevk: no, we should pass the style data to CSSOM I think. loading CSS is broken in the spec, i need to fix that

[06:47:10.0000] <mkwst>
annevk, zcorpan: I didn't see anything that looked like it read style data in CSSOM either, FWIW.

[06:47:52.0000] <annevk>
Anyway, I think https://github.com/whatwg/html/pull/1051/files looks good. zcorpan, agreed?

[06:48:07.0000] <annevk>
This is something that's not really mkwst's fault and we need to fix separately

[06:48:22.0000] <mkwst>
https://drafts.csswg.org/cssom/#create-a-css-style-sheet calls into https://drafts.csswg.org/cssom/#add-a-css-style-sheet, but neither appear to do anything that would gather style data.

[06:51:19.0000] <zcorpan>
annevk: yep

[10:01:33.0000] <TabAtkins>
annevk: The paragraph at https://dom.spec.whatwg.org/#concept-shadow-including-tree-order is nonsense English.

[10:01:54.0000] <TabAtkins>
I understand what it's saying, but it's missing a lot of words.

[10:02:49.0000] <annevk>
TabAtkins: ah, thanks for verifying

[10:03:01.0000] <annevk>
TabAtkins: I wasn't too sure how to word that

[10:03:19.0000] <annevk>
TabAtkins: I'd appreciate suggestions, preferably in an issue, since it's getting rather late

[10:03:38.0000] <annevk>
TabAtkins: seems I also forgot to uppercase something after a period...

[10:04:03.0000] <TabAtkins>
kk, will try to remember to PR you later today.

[10:04:25.0000] <annevk>
TabAtkins: https://dom.spec.whatwg.org/#concept-tree-order is okay with you, right?

[10:05:27.0000] <TabAtkins>
Not quite.  I think it should read:

[10:05:30.0000] <annevk>
It's deferring a little bit to dictionary/wikipedia land, which I'm not entirely comfortable with, but has worked thus far

[10:05:40.0000] <TabAtkins>
"In tree order" is preorder, depth-first traversal of a tree.

[10:05:59.0000] <TabAtkins>
That is, add quotes to clarify what you're defining.  Without quotes it feels like an incompletely sentence.

[10:06:29.0000] <annevk>
That's why it's bold, no?

[10:06:32.0000] <TabAtkins>
It's still not perfect, but good enough.  Doing the same with shadow-including tree order would definitely help.

[10:07:05.0000] <TabAtkins>
No, you've bolded "tree order", because it's the definition anchor.  But for the purposes of constructing the English sentence, "In tree order" is the subject you're defining.

[10:07:58.0000] <TabAtkins>
Or drop the "In" entirely.

[10:08:02.0000] <TabAtkins>
That makes sense too.

[10:08:09.0000] <annevk>
That might be okay

[10:08:39.0000] <annevk>
Though definitions often have various words leading them in, "When invoked, [x]", "The [x]", etc.

[10:10:02.0000] <TabAtkins>
Right. But starting a sentence with "In" like that typically means you're providing a context for the following subject.

[10:10:10.0000] <TabAtkins>
But here "in tree order" *is* the subject.

[10:10:16.0000] <TabAtkins>
So the mismatch makes it look like bad English.

[10:10:38.0000] <TabAtkins>
The quotes clarify that "in" is part of the subject, not a grammatical indicator of a clarifying context.

[10:11:02.0000] <annevk>
I'll take your word for it, but then I think I'd rather omit "in". Adding quotes would make it look very suspect to me

[10:11:22.0000] <TabAtkins>
Sure.

[10:11:32.0000] <annevk>
Anyway, thanks for reviewing

[10:11:39.0000] <annevk>
As a heads up, the slots stuff is not stable

[10:11:52.0000] <TabAtkins>
As in, the concepts aren't, or the text in DOM isn't?

[10:11:56.0000] <annevk>
See the end of https://github.com/w3c/webcomponents/issues/288 for the planned changes

[10:12:13.0000] <annevk>
TabAtkins: some of the slots concepts probably aren't stable

[10:12:45.0000] <annevk>
TabAtkins: instead of getting slotables, slotables will be assigned

[10:13:12.0000] <TabAtkins>
Luckily that's exactly the way I'm talking about things.

[10:13:36.0000] <TabAtkins>
(I don't explicitly ref your algorithms, just the concepts, and allude to slotables being assigned to slots.)

[10:13:48.0000] <annevk>
Basically when insert/remove run we'll also assign all the slots

[10:14:05.0000] <annevk>
Assign the slotables, doh

[10:14:27.0000] <annevk>
Hopefully there's nothing else tomorrow so I can work on that

[10:14:40.0000] <TabAtkins>
Yup, sounds like those changes won't affect me at all, which is fine.

[10:14:46.0000] <annevk>
I think in the end I'd like it tightly integrated with CSS, but we can go multiple rounds

[10:40:27.0000] <laughinghan>
obviously no one here owes me anything, but I'm also going out of my way on this to try to make things better for everyone, my own issue I've already worked-around

[10:40:37.0000] <laughinghan>
(right now I'm thinking of https://github.com/whatwg/html/issues/639#issuecomment-209189744 )

[10:40:46.0000] <annevk>
laughinghan: I would say at least a week, but it depends

[10:40:56.0000] <laughinghan>
annevk: copy, thanks!

[10:42:53.0000] <annevk>
laughinghan: could maybe bug smaug____ since he hangs out here

[10:43:14.0000] <laughinghan>
beep boop smaug____ https://github.com/whatwg/html/issues/639#issuecomment-209189744

[10:43:25.0000] <annevk>
laughinghan: also, if you plan on doing more standards work patience helps

[10:43:31.0000] <laughinghan>
:)

[10:44:25.0000] <laughinghan>
by the way annevk I've been following your blog on and off for a while, used Opera for a long time, I'm a fan of yorus :)

[10:44:27.0000] <smaug____>
laughinghan: pong

[10:45:24.0000] <smaug____>
/me notes that github is totally horrible for any kind of issue tracking, or "needs feedback from person X" tracking

[10:46:06.0000] <smaug____>
laughinghan: don't know what information you want from me?

[10:46:44.0000] <laughinghan>
:/ haha maybe I don't know how this works

[10:47:13.0000] <laughinghan>
I guess feedback? Or you guys don't really care, the browser makers are who I have to convince

[10:48:07.0000] <smaug____>
I consider myself as a voice from a browser engine vendor ;)

[10:48:28.0000] <smaug____>
laughinghan: you could ping devs from other vendors too

[10:48:32.0000] <laughinghan>
okay! so then

[10:48:37.0000] <laughinghan>
well I commented on all of those tickets

[10:48:39.0000] <laughinghan>
that were linked

[10:48:46.0000] <smaug____>
@majido from blink

[10:49:01.0000] <laughinghan>
so I guess my questions are

[10:49:27.0000] <laughinghan>
1. is it out of the question to implement it as a breaking change

[10:49:29.0000] <smaug____>
laughinghan: well, you want a spec change, and spec changes aren't done in implementation specific bug trackers

[10:49:40.0000] <laughinghan>
breaking from both spec and how browsers consistently behave

[10:49:55.0000] <laughinghan>
if I can show at least one of the ways people might rely on it don't happen

[10:50:23.0000] <laughinghan>
to just try the breaking change in Nightlies to see if people complain

[10:51:12.0000] <smaug____>
I could say that even tiniest changes to existing history API tend to break pages

[10:51:29.0000] <smaug____>
and such issues aren't often found during Nightly/Aurora testing

[10:51:53.0000] <laughinghan>
this is basically just a tweak to the :target selector

[10:51:55.0000] <smaug____>
but later in beta or even later when the change is actually shipped

[10:52:01.0000] <laughinghan>
barely affected by the history API

[10:52:06.0000] <laughinghan>
I see

[10:52:14.0000] <smaug____>
don't underestimate what breaks the web ;)

[10:52:29.0000] <laughinghan>
well I guess interaction with the history API. But not really a history API change

[10:52:36.0000] <smaug____>
sure

[10:52:39.0000] <laughinghan>
haha very fair

[10:53:28.0000] <laughinghan>
do you have suggestions of where I could find stylesheets of the top 1000 websites or...something?

[10:54:28.0000] <smaug____>
philipj might be able to help with that

[10:54:47.0000] <smaug____>
laughinghan:  but ask feedback from @majido too in the bug

[10:54:57.0000] <laughinghan>
copoy

[11:01:23.0000] <smaug____>
laughinghan: but how would you deal with :target here? Like, would the implementation need to check if #foo is passed as new url?

[11:01:37.0000] <smaug____>
but if some other value is passed, then :target isn't changed?

[11:01:41.0000] <smaug____>
I assume so...

[11:02:11.0000] <laughinghan>
implementation-wise?

[11:02:13.0000] <smaug____>
what should passing foo#foo as url do?

[11:02:41.0000] <laughinghan>
oh like what if we change the path too, not just the fragment?

[11:02:45.0000] <laughinghan>
hmm, good point

[11:06:27.0000] <smaug____>
maybe it should work in all the cases, just take the fragment. But what if scrolling is manual, then :target handling may not make so much sense. maybe

[11:07:04.0000] <laughinghan>
I guess the thing that seems obvious to me is for :target to select for whatever is the current fragment portion of the URL, regardless of what the path is. But suddenly that seems more likely to break real sites

[11:07:35.0000] <laughinghan>
yeah, exactly for the first sentence you said. I think with manual scrolling it still makes perfect sense

[11:08:25.0000] <smaug____>
well, if there is manual scrolling, and #target is somewhere outside view port...

[11:09:50.0000] <smaug____>
might be good to try to find out why the spec ended up not dispatching hashchange event in this case

[11:10:14.0000] <smaug____>
since if we change :target handling, also hashchange handling should be changed, IMO

[11:12:13.0000] <laughinghan>
I'm not sure why it matters to manual vs auto scrolling whether #target changes or doesn't styles?

[11:12:32.0000] <laughinghan>
good point about hashchange though, ugh you're so right

[11:14:28.0000] <smaug____>
laughinghan: I assume the discussion about hashchange and pushState etc. are in whatwg mailing list archives.

[11:15:03.0000] <hsivonen>
ouch. I thought the ISO-2022-JP decoder was the worst, but it seems the GB18030 decoder is

[11:15:21.0000] <laughinghan>
okay, I can try searching for them in a mo, right now I'm checking something about how :target is affected by going Back and Fwd. This might be a really good argument why the breaking change doesn't break anything

[11:17:13.0000] <smaug____>
The spec has  "Since this is neither a navigation of the browsing context nor a history traversal, it does not cause a hashchange event to be fired." mentioned explicitly, so better to know the reasoning for that decision.

[11:20:16.0000] <laughinghan>
fair point

[11:43:50.0000] <smaug____>
is w3c irc working normally?

[11:44:06.0000] <smaug____>
(or do I see a regression in my irc client)

[13:16:31.0000] <jyasskin>
TabAtkins: Another possible Shepherd problem: https://w3c.github.io/permissions/#permission-store works fine as a definition inside of the spec, but `bikeshed refs --text 'permission store'` doesn't return it from a separate directory.

[13:33:01.0000] <TabAtkins>
jyasskin: Interesting. Busy right now, but will look into this in the afternoon.

[13:33:06.0000] <jyasskin>
TabAtkins: Thx


2016-04-15
[21:13:33.0000] <annevk>
hsivonen: retrofitting Unicode on top of gbk, not sure why they thought that was a good idea

[00:25:12.0000] <davve>
I got referred to https://html.spec.whatwg.org/#imagebitmapfactories but can't get it to show (page stays at top) in any of my browsers. Ideas?

[00:27:23.0000] <annevk>
davve: that is now https://html.spec.whatwg.org/#windoworworkerglobalscope

[00:28:01.0000] <annevk>
davve: it was a mixin that we merged with other mixins that apply to Window and WorkerGlobalScope objects

[00:28:08.0000] <davve>
Excellent. Thanks.

[04:31:10.0000] <MikeSmith>
annevk: btw you saw https://bugs.chromium.org/p/chromium/issues/detail?id=602925 I guess (can’t remember where I found out about it)

[04:31:13.0000] <MikeSmith>
= Measure how many pages are using cross-origin XHR with credentials

[04:46:40.0000] <annevk>
/me keeps looking for excuses not to work on slotting

[04:51:53.0000] <Ms2ger>
zcorpan, is "there is no viewport associated with the document" equivalent to "browsing context is null"?

[04:53:08.0000] <zcorpan>
Ms2ger: a display:none iframe has no viewport but has a browsing context, i believe

[04:54:42.0000] <zcorpan>
Ms2ger: hmm nope

[04:54:54.0000] <zcorpan>
Ms2ger: "If a browsing context is not being rendered, it is expected to have a viewport with zero width and zero height."

[04:55:55.0000] <zcorpan>
Ms2ger: so, i guess that's equivalent. except i don't know if shadow dom changes something

[04:56:52.0000] <Ms2ger>
zcorpan, ok, thanks

[06:21:56.0000] <annevk>
Okay, I did some work on slotting: https://github.com/w3c/webcomponents/issues/288#issuecomment-210461414

[06:22:05.0000] <annevk>
Review appreciated

[07:17:39.0000] <annevk>
rbyers: have you updated the specs yet that dispatch events that might make use of passive listeners?

[07:18:27.0000] <annevk>
rbyers: it seems that in order to dispatch such events you need to go through the event path and check the listeners for each node in the path

[07:18:52.0000] <annevk>
rbyers: I wonder if the DOM Standard should provide some kind of operation for that, to isolate the amount of listener inspection

[09:30:18.0000] <m4nu>
Hixie_: thanks for the input on the blog post, finally got around to responding to your comment (been busy) :) http://manu.sporny.org/2016/browser-api-incubation-antipattern/#comment-29988

[09:37:31.0000] <annevk>
m4nu: if you're only realizing that now you've been a little naive

[09:37:55.0000] <annevk>
m4nu: having said that, <picture> was done by a CG

[09:39:09.0000] <annevk>
m4nu: that kind of culture clash is as old as the W3C

[09:40:42.0000] <annevk>
m4nu: XSL-FO vs CSS, XPath vs Selectors, sXBL vs XBL 2 (although neither made it out alive in the end), HTML vs XHTML2

[09:41:18.0000] <annevk>
m4nu: just like you can always bet on JavaScript, you can also bet on browsers

[09:58:05.0000] <m4nu>
annevk: I'm not only now realizing the power dynamic, not that naieve. I'm reporting that the way the W3C (and browser vendors) suggest how to get stuff into the Web Platform is largely ineffective.

[09:59:07.0000] <annevk>
m4nu: depends on who you're listening to I suppose, but W3C is a lot of smoke and mirrors

[09:59:26.0000] <m4nu>
annevk: Yep, and the blog post is reporting on that...

[09:59:27.0000] <annevk>
m4nu: WHATWG is much more straightforward and the advice the FAQ lists has been used with success

[09:59:54.0000] <annevk>
m4nu: sure, just saying it has been like that since forever

[10:00:48.0000] <m4nu>
annevk: I don't think WHATWG is really that different. In that, there are no smoke and mirrors and the power dynamic is transparent... but it's a really terrible power dynamic.

[10:01:14.0000] <m4nu>
annevk: and I think there's this narrative where people go around telling Web developers that "this is your platform, you have the power to change it" - and that's not true.

[10:01:25.0000] <laughinghan>
hey annevk the first "logs" link in the topic is broken, can we remove it for now?

[10:01:28.0000] <m4nu>
annevk: It /is/ true that they don't have to use browser features that they don't want to

[10:01:42.0000] <m4nu>
annevk: but it is not true that they have any significant amount of say over those browser features.

[10:01:54.0000] <m4nu>
and W3C keeps asserting that they do - and they don't.

[10:02:03.0000] <m4nu>
WHATWG doesn't assert that they do - and that's true. :)

[10:02:43.0000] <m4nu>
annevk: and that you and a handful of other folks (like me) know this doesn't mean that the vast majority of Web developers or participants in W3C know this.

[10:03:25.0000] <annevk>
laughinghan: krijn will prolly make it working again, but we could swap the order

[10:03:54.0000] <laughinghan>
thanks

[10:04:20.0000] <annevk>
m4nu: well, WHATWG has been saying forever that the buck stops with what browsers are willing to ship

[10:04:20.0000] <laughinghan>
also apparently you can link directly to http://logs.glob.uno/?c=freenode%23whatwg

[10:04:39.0000] <m4nu>
annevk: it's just a pretty terrible dynamic, and it's getting worse... and I don't think it's a good direction for the Web. I think W3C and developer advocates need to start being more honest about that. That's all. :)

[10:05:20.0000] <laughinghan>
how is it getting worse or a bad direction?

[10:05:32.0000] <laughinghan>
hasn't it always been this way? It got us this far

[10:05:37.0000] <annevk>
m4nu: I think in general web developers have a fair amount of influence, when they don't use shipped features, those features get removed

[10:05:47.0000] <annevk>
m4nu: and the problems they have are getting addressed

[10:06:38.0000] <annevk>
laughinghan: hmm, will have to wait for Ms2ger to get back so they can make me an op

[10:07:09.0000] <krijn>
annevk: will fix some things this Sunday, when I will be at that machine physically

[10:07:17.0000] <annevk>
\o/

[10:07:22.0000] <krijn>
Can't reach it atm

[10:07:39.0000] <m4nu>
laughinghan: getting worse as in browser deployment figures show only two companies really dominating browser environments now.

[10:08:34.0000] <m4nu>
laughinghan: and no, I don't think it's always been this way - when the market has had more competitors in it, things have fared better.

[10:08:35.0000] <laughinghan>
m4nu: did it used to be more than two?

[10:09:33.0000] <laughinghan>
from my understanding, there was IE and Netscape competing, then IE and Firefox, then Firefox and Chrome (during this time IE was just playing catchup, it wasn't competitive), and now...what even are the big two?

[10:09:41.0000] <laughinghan>
Chrome and Safari on iOS?

[10:09:47.0000] <m4nu>
laughinghan: there was a time where Microsoft, Google, and Mozilla were competitive.

[10:09:56.0000] <m4nu>
laughinghan annevk: Don't want to spam the WHATWG channel w/ this discussion - if you have thoughts, you could leave them here: http://manu.sporny.org/2016/browser-api-incubation-antipattern/#comment-29988

[10:10:32.0000] <laughinghan>
since before Chrome was released IE has been purely in catch-up, it wasn't at all competitive

[10:13:47.0000] <annevk>
m4nu: IRC is easy, writing blog not so much

[10:13:51.0000] <annevk>
blog comments, even

[10:16:51.0000] <laughing_>
especially an 840-word blog comment

[14:15:46.0000] <zcorpan>
is ::slotted() the thing that was discussed at tpac if it should have one or two colons, and hober2 suggested three colons and i suggested zero colons? TabAtkins?

[14:15:59.0000] <TabAtkins>
Hahaha, I think so.

[14:16:14.0000] <TabAtkins>
Because it's an alias for other elements in the tree, not an element itself.

[14:16:48.0000] <zcorpan>
maybe i should push for zero colons again

[14:17:01.0000] <zcorpan>
or was there some reason that didn't work?

[14:17:50.0000] <TabAtkins>
Because all selectors need to start with some sigil that won't get parsed as part of an ident.

[14:18:05.0000] <TabAtkins>
Only tagname selectors get away with not having that, and as a result they ahve to be first in the compound selector.

[14:18:51.0000] <zcorpan>
it'll be a FUNCTION, no?

[14:19:07.0000] <TabAtkins>
Functions are ident-like.

[14:19:19.0000] <TabAtkins>
slot::slotted() works parsing wise.

[14:19:30.0000] <TabAtkins>
slotslotted() obviously doesn't. ^_^

[14:20:37.0000] <zcorpan>
ah right. i had in mind you'd put a space there but maybe that's weird

[15:12:22.0000] <TabAtkins>
Yeah, that would be a descendant combinator. ^_^


2016-04-16
[09:59:42.0000] <annevk>
Only 10 custom element issues left, including v2: https://github.com/w3c/webcomponents/labels/custom-elements \o/

[10:01:25.0000] <annevk>
11

[10:01:30.0000] <annevk>
thanks Domenic :-P

[10:02:00.0000] <Domenic>
:P

[10:02:19.0000] <Domenic>
Still gonna get to https://github.com/w3c/webcomponents/issues/186 soon

[10:02:27.0000] <Domenic>
and https://github.com/w3c/webcomponents/issues/282

[10:02:41.0000] <Domenic>
or i guess https://github.com/w3c/webcomponents/issues/468

[10:02:52.0000] <Domenic>
282 can probably be closed in favor of 468? let me re-read...

[10:04:01.0000] <Domenic>
i guess 282 is 468 with a Stylesheet object instead of a string

[16:56:09.0000] <robertkowalski>
hi! :)

[16:56:31.0000] <robertkowalski>
Domenic: great blog post!

[16:57:17.0000] <robertkowalski>
Domenic: i also plan a blogpost / presentation on the console standard.

[16:58:24.0000] <robertkowalski>
a bit inspired from your web standards talk (everyone can do great stuff in the whatwg) - but also showing some of the things we have found etc...

[16:58:55.0000] <robertkowalski>
had a quite busy month, but soon more time again :)


2016-04-17
[20:04:13.0000] <Domenic>
robertkowalski: awesome! Yeah, we'd love to have you do a blog on blog.whatwg.org introducing the console standard

[03:06:11.0000] <pard>
hello

[03:07:07.0000] <pard>
i was wondering what would be the case when an unfloated block-element appears before a floated div

[03:07:46.0000] <pard>
i could not get any clues from the spec though

[03:08:15.0000] <pard>
would hence be glad if someone could help me on that matter

[03:08:19.0000] <pard>
thanks

[03:16:07.0000] <pard>
any one?

[05:23:37.0000] <pard>
hello

[05:23:50.0000] <pard>
any one on the channel?

[05:25:00.0000] <pard>
I have something to ask about floated elems coming after unfloated block elems

[05:25:37.0000] <pard>
(the way they are laid out is not in the spec)

[05:26:17.0000] <pard>
at least I did not come up with a clear explanation in the spec

[05:27:59.0000] <pard>
any ideas?

[07:59:09.0000] <krijnhoetmer>
Testin', testin'


2016-04-18
[18:20:18.0000] <rbyers>
annevk: regarding your question Friday about observing event listeners (sorry I was out for the day):  Yes I did update the touch events spec but it's pretty handy-wavy: https://w3c.github.io/touch-events/#cancelability

[18:21:40.0000] <rbyers>
What we actually implement here is pretty special (been this way for ages - passive doesn't change that really) but the other browsers all seem to have similar similarly special (with different details).  Rather than explicitly walk the event path as you suggest, we compute layer regions as a list of rectangles and update on layout.

[18:22:25.0000] <rbyers>
This is because the compositor thread doesn't have access to the DOM.

[18:25:14.0000] <rbyers>
For 'passive' the main thing we did was opt-out of this fancy (and somewhat hacky) system and just tracking a single bit indicating that there are passive touch listeners somewhere (to continue to support an additional minor CPU optimization for the case when there are really no listeners at all).

[18:26:11.0000] <rbyers>
We could probably define that in terms of some sort of algorithm on the DOM at event dispatch time, but it would look nothing like the implementation and so be tricky to verify.  Perhaps it's more useful to try to define properties of the behavior (and associated web-platform-tests) rather than to try to actually specify an algorithm here?

[18:28:24.0000] <rbyers>
And again, my understanding is this isn't just blink - Safari, Edge and Firefox have something similar with the details depending on the design of each browser's threaded compositing system.  So, unlike most of DOM, this is the sort of thing that is probably hard to specify as an algorithm that'll bear any semblance to any mainstream implementation :-)

[21:20:29.0000] <annevk>
rbyers: passive somewhere? But what about a mix of passive and non-passive?

[22:11:55.0000] <annevk>
rbyers: in any event, passive has been great in unblocking some new event listener primitives

[23:51:22.0000] <annevk>
Ms2ger: hey, I want to change the topic again

[23:56:23.0000] <annevk>
GPHemsley: the wiki is acting up, when trying to login I get a cached copy of sorts

[23:56:52.0000] <annevk>
GPHemsley: "This is a cached copy of the requested page, and may not be up to date.", "Sorry! This site is experiencing technical difficulties.", at https://wiki.whatwg.org/index.php?title=Special:UserLogin&returnto=Main+Page

[00:40:28.0000] <annevk>
Why did https://github.com/coonsta disappear?

[01:02:19.0000] <MikeSmith>
annevk: apparently renamed to https://github.com/dominiccooney

[01:02:30.0000] <MikeSmith>
https://github.com/dominiccooney?tab=activity

[01:02:54.0000] <MikeSmith>
I guess github doesn’t automatically redirect in that case

[01:03:34.0000] <annevk>
Ta, that's useful to know

[01:35:44.0000] <annevk>
hayato: hey, if you're still awake could you have one more look at the slotchange issue?

[01:36:02.0000] <annevk>
hayato: I'm going to write a patch for the DOM Standard today

[02:04:07.0000] <annevk>
hayato: thank you!

[07:11:24.0000] <smaug____>
lovely, github has rather horrible bug with lists

[07:11:34.0000] <smaug____>
https://github.com/w3c/webcomponents/issues/184#issuecomment-210474769

[07:11:55.0000] <smaug____>
those numbers aren't 1, 2, 3, 4

[07:11:58.0000] <smaug____>
but 4, 5, 6, 7

[07:28:48.0000] <annevk>
Yeah, noticed that. It's nice if you edit a long list that you don't have to update the following numbers, but if you actually mean a certain number it's a little annoying.

[07:38:24.0000] <annevk>
Teehee, I think slotchange is done

[07:38:39.0000] <annevk>
So tomorrow, shadow event extensions and <slot>, perhaps?

[07:39:03.0000] <annevk>
And then change all the features one-by-one...

[07:43:38.0000] <hsivonen>
annevk: fwiw, I think it's possible to implement the decoders in the Encoding Standard with less buffering that you previously said was needed

[07:44:01.0000] <hsivonen>
annevk: in encoding-rs, I have the capability to unread only the current byte

[07:44:41.0000] <hsivonen>
annevk: in addition to that, I need to have a specialy one-byte "buffer" for gb18030 and ISO-2022-JP

[07:45:21.0000] <hsivonen>
annevk: but in both cases, the value of the byte is pretty restricted, so manually inlining its handling to the top of the decode function is pretty easy

[07:47:01.0000] <hsivonen>
annevk: the key insight is that if there's a bogus byte when gb18030 third is already non-zero, gb18030 second goes into the special one-byte buffer to be output as Basic Latin code point and third becomes first, since the range of third and first is the same.

[07:47:41.0000] <annevk>
jsbell might be interested to hear about that

[07:48:18.0000] <hsivonen>
https://github.com/hsivonen/encoding-rs/blob/master/src/iso_2022_jp.rs#L57 and https://github.com/hsivonen/encoding-rs/blob/master/src/gb18030.rs#L44

[07:51:55.0000] <annevk>
hsivonen: wait, but if you have 3 variables for gb18030 that's more than a two-byte buffer, no?

[07:58:22.0000] <annevk>
I think I see what you mean now. You can only unread, not prepend, so you need an alternative strategy for that

[07:59:07.0000] <annevk>
Maybe we should add the trick to the standard at some point in a note

[07:59:31.0000] <hsivonen>
annevk: the trick is that "third" becomes the new "first" and "second" becomes a "pending ASCII" that's going to get out of the way before "first" is checked for non-zero

[08:02:55.0000] <annevk>
hsivonen: could you comment on https://github.com/whatwg/encoding/issues/42?

[08:45:39.0000] <MikeSmith>
about the design questions for the canvas hit regions API, I would think Rik Cabanier would be the one who knows

[08:45:55.0000] <MikeSmith>
I thought he was the one who specced it

[08:51:05.0000] <annevk>
According to junov Frank was mostly responsible

[08:51:36.0000] <MikeSmith>
ah OK yeah I was just reading more of it

[08:52:12.0000] <MikeSmith>
so I guess if it was Rik that specced it out originally he just did it based on the requirements that had been given

[13:01:47.0000] <smaug____>
is there some way to know which wpt tests are passed by which browsers

[13:02:42.0000] <smaug____>
hmm, or, jgraham_, can I run wpt tests I have in local mozilla-inbound tree using other browsers?

[13:25:06.0000] <jgraham_>
smaug____: You can!

[13:25:25.0000] <jgraham_>
But it's not really a well cleared path :(

[13:25:58.0000] <jgraham_>
smaug____: https://developer.mozilla.org/en-US/docs/Mozilla/QA/web-platform-tests#Chrome has instructions for Chrome

[13:26:07.0000] <jgraham_>
Safari doesn't work afaik

[13:26:15.0000] <smaug____>
ok, let me try

[13:26:21.0000] <jgraham_>
Edge needs some code that never got reviewed

[13:26:27.0000] <smaug____>
pip?

[13:26:34.0000] <smaug____>
/me doesn't know what pip is

[13:26:40.0000] <smaug____>
some python thingie I assume

[13:26:55.0000] <smaug____>
oh, I have it

[13:34:05.0000] <smaug____>
jgraham_: is there some way to run just some particular test from github or something like that

[13:39:04.0000] <jgraham_>
smaug____: Pass the path to the test? Or if you are just running a single test and it's already upstream http://w3c-test.org/tools/runner/index.html

[13:39:11.0000] <jgraham_>
Maybe should add that to the wiki

[13:45:38.0000] <smaug____>
jgraham_: I mean without those instructions in MDN

[13:45:50.0000] <smaug____>
/me tries http://w3c-test.org/tools/runner/index.html

[13:48:39.0000] <Domenic>
Ooh I didn't know about http://w3c-test.org/tools/runner/index.html. I always just browsed to the HTML files directly.

[13:48:49.0000] <smaug____>
how does one then see which test failed?

[13:50:17.0000] <smaug____>
I guess looking at the json

[13:50:38.0000] <smaug____>
jgraham_: ok, thanks. Verified there is a buggy test. fix it coming to mozilla tree first

[13:50:52.0000] <jgraham_>
smaug____: Thanks!

[15:23:48.0000] <rodneyrehm>
Which part of the DOMTokenList IDL (https://dom.spec.whatwg.org/#domtokenlist) reflects the "tokenlist[index]" shown in the next Note block? is that implicitly defined by .item()?

[15:24:27.0000] <TabAtkins>
rodneyrehm: It has "supported property indices" defined for it.

[15:25:31.0000] <rodneyrehm>
right, second paragraph below the Note box, found it, thanks!

[15:25:35.0000] <TabAtkins>
rodneyrehm: And yeah, the "getter ..." line actually defines it. (And happens to also define that .item() is a method that does the same thing)

[15:26:34.0000] <TabAtkins>
/me should linkify "getter" appropriately in Bikeshed.

[15:27:37.0000] <rodneyrehm>
yes please :)


2016-04-19
[07:20:53.0000] <smaug____>
has there been talk to put all the interface objects behind so global property

[07:21:07.0000] <smaug____>
like platformInterfaces.Animation or such

[07:21:47.0000] <smaug____>
kind of namespacing so that commonly used names would be less likely to cause compat issues

[07:26:23.0000] <annevk>
smaug____: JavaScript modules, basically

[07:26:37.0000] <annevk>
smaug____: until that time we should just pick unique enough names, imo

[07:27:06.0000] <smaug____>
how do modules help with this

[07:27:34.0000] <annevk>
smaug____: stuff is no longer in the global scope, you have to import it first to use it

[07:28:31.0000] <smaug____>
so what all is in the scope of module by default?

[07:28:49.0000] <smaug____>
JS stuff, Math, Date and such?

[07:28:54.0000] <smaug____>
or nothing?

[07:29:54.0000] <smaug____>
and how do modules play with event handlers

[07:29:59.0000] <annevk>
smaug____: I meant that you could have built-in modules that you import to add functionality

[07:30:05.0000] <annevk>
smaug____: they don't

[07:30:56.0000] <annevk>
smaug____: I believe that when a module script executes in a browser it sees exactly the same stuff as a classic script would (though it executes in strict mode)

[07:31:07.0000] <smaug____>
annevk: so module informs that one can import names Foo and Bar out from it to other js to use?

[07:31:48.0000] <annevk>
smaug____: something like that, you'd have import FancyNewFeature from "web/fancy" or some such

[07:31:51.0000] <smaug____>
what guarantees Foo and Bar won't be used as interface names later?

[07:32:36.0000] <annevk>
smaug____: those importing get to decide on the names, aiui

[07:32:57.0000] <annevk>
Anyway, I gotta go

[07:33:16.0000] <annevk>
Would love your input on how to design event dispatch with shadow trees

[07:33:28.0000] <annevk>
See https://github.com/w3c/webcomponents/issues/485 and https://github.com/w3c/webcomponents/issues/486

[07:33:54.0000] <smaug____>
/me still doesn't see how it helps. Whoever is deciding that Foo is imported as Bar, doesn't know whether Bar will be an interface object later

[07:42:33.0000] <Domenic>
you can think of module imports as equivalent to `var Bar = platformInterfaces.Bar`

[07:42:44.0000] <Domenic>
If you can understand how that helps collisions then you should be able to understand how modules help.

[07:43:14.0000] <Domenic>
(They're nothing like C++ header files, if that's misleading you.)

[07:44:44.0000] <smaug____>
Domenic: that doesn't help. What if there is later interface Bar added to the platform

[07:44:52.0000] <smaug____>
and some code then tries to do new Bar();

[07:45:22.0000] <Domenic>
smaug____: then the same "problem" (I don't think it's a real problem) will occur whether you do platformInterfaces.Bar or a module.

[07:45:33.0000] <smaug____>
but I know forcing to call new platformInterfaces.Bar() would be horrible

[07:45:51.0000] <Domenic>
It doesn't break back-compat since local bindings always shadow global ones

[07:46:14.0000] <Domenic>
I guess we are anticipating some scenario where someone copies and pastes code expecting the new platform Bar() into a scope that has defined a variable named Bar?

[07:46:17.0000] <smaug____>
sure

[07:46:37.0000] <smaug____>
I'm talking about the case where you have some code doing var Bar = module.Bar;

[07:46:54.0000] <smaug____>
and then some other code doing new Bar(); (but that wants to use the platform object)

[07:47:14.0000] <smaug____>
so yes, to your last comment

[07:47:48.0000] <smaug____>
I started to wonder this again while thinking about Animation interface

[07:48:10.0000] <smaug____>
per spec it is a normal interface with ctor

[07:48:32.0000] <smaug____>
but browsers aren't ready to expose it as such

[07:48:38.0000] <smaug____>
but with NoInterfaceObject

[07:51:17.0000] <smaug____>
lunch

[10:02:37.0000] <annevk>
Do we need a label for "problem with standard" that is more serious than "clarification"?

[10:03:16.0000] <annevk>
E.g., https://github.com/whatwg/html/issues/1073 is great implementer feedback, but if nobody picks it up it'll get lost

[10:04:27.0000] <caitp>
I thought github had something like "critical" in the default label set

[10:05:10.0000] <caitp>
this is a critical spec bug, it isn't just a missing apostraphe, it's a sentence that ends with a preposition!

[10:50:20.0000] <TabAtkins>
annevk: Do you know what the use-case is for "find flattened slotables"?

[10:50:41.0000] <annevk>
TabAtkins: assignedNodes() and CSS

[10:50:56.0000] <TabAtkins>
I *think* CSS's use of it only wants to "find slotables", with the "sub in its normal children if nothing is assigned" behavior.

[10:51:30.0000] <TabAtkins>
It's not 100% clear to me what node slotables are supposed to inherit from, or what the intended model is for when you give a <slot> a non-contents display value.

[10:51:56.0000] <TabAtkins>
Oh right, CSS does need flattened slotables for ::slotted() still, nm.

[10:52:16.0000] <annevk>
TabAtkins: ah yes, for the flat tree <slot> elements need to be kept around

[10:52:24.0000] <TabAtkins>
Okay cool.

[10:52:59.0000] <TabAtkins>
And so I *think* that means that slotables inherit from the first/highest slot they're assigned to, not their light-tree parent or any deeper slots they get flattened into.

[10:53:02.0000] <annevk>
TabAtkins: seems like we have a bit much ways of looking at this

[10:53:27.0000] <TabAtkins>
Yeah, I'm making CSS much more explicit about what it sees at each phase.

[10:53:50.0000] <TabAtkins>
At Hayato's urging, I'm sucking the whole flat tree concept into the CSS Scoping spec.

[10:53:59.0000] <annevk>
Yeah, that makes sense

[10:54:01.0000] <TabAtkins>
When you and I are done, there might not be anything left in the actual Shadow DOM spec.

[10:54:09.0000] <annevk>
That was more or less the goal

[10:54:12.0000] <TabAtkins>
Cool.

[10:54:25.0000] <annevk>
Glad we both came to the same conclusion

[10:54:51.0000] <TabAtkins>
Okay, I can handle "use its real children if nothing is assigned" by myself.

[11:02:13.0000] <TabAtkins>
annevk: btw, I like the use of "flattened slotables" better, good change.

[11:51:24.0000] <TabAtkins>
annevk: Please export your shadow dom definitions - "find slotables" is unexported right now

[11:56:24.0000] <Mek>
hmm, why does bikeshed not know USVString is a valid type...

[11:59:21.0000] <TabAtkins>
Mek: Because it's not defined as such in a spec that Shepherd knows about. Where's it defined?

[11:59:44.0000] <Mek>
TabAtkins: http://heycam.github.io/webidl/#idl-USVString probably? DOMString does seem to correctly link to WebIDL

[12:00:53.0000] <TabAtkins>
Ah, USVString was marked up right. Checking right now whether it's actually in the db...

[12:00:59.0000] <TabAtkins>
Well, heaidng to lunch now. bbs

[12:06:22.0000] <jyasskin>
TabAtkins: With bikeshed at c16b9046 (HEAD), `bikeshed update` returns "FATAL ERROR: This version of the anchor-data API is no longer supported. Please update Bikeshed."

[12:54:32.0000] <TabAtkins>
jyasskin: Yup, just got it myself. Pinging plinss.

[12:54:49.0000] <jyasskin>
TabAtkins: Try visiting csswg.org in your browser.

[12:55:35.0000] <jyasskin>
plinss had me debug and revealed that my DNS is broken, and Bikeshed is just giving a very bad error message.

[12:58:18.0000] <annevk>
TabAtkins: ah yes, could you file a reminder? Sorry about that

[12:58:50.0000] <annevk>
TabAtkins: I should really go through all <dfn in DOM

[13:50:25.0000] <TabAtkins>
Mek: Ok, checked on it - USVString *is* defined in Bikeshed (make sure you've run `bikeshed update` recently!), but I forgot to mark it as exported. >_<

[13:51:19.0000] <jyasskin>
TabAtkins: I see it in HTML rather than WebIDL.

[13:51:34.0000] <Mek>
can't run bikeshed update until whatever that DNS thing is is fixed...

[13:51:41.0000] <TabAtkins>
jyasskin: ...huh, indeed

[13:51:45.0000] <TabAtkins>
Mek: Fixed by now for me.

[13:51:47.0000] <jyasskin>
The DNS thing is now fixed.

[13:51:52.0000] <Mek>
ah yeah, seems fixed now

[13:51:54.0000] <TabAtkins>
(It was a linode thing)

[13:52:16.0000] <Mek>
It still complains "LINK ERROR: No 'idl' refs found for 'USVString'." though

[13:52:40.0000] <TabAtkins>
Yeah, if it's coming from HTML, it'll be read as a dfn-type. :/

[13:52:54.0000] <TabAtkins>
But I marked it up in WebIDL, so I need to debug and see what's up with it.

[13:53:36.0000] <Mek>
and the definition in HTML is just the reference to the WebIDL definition anyway, so not a very useful reference

[13:56:12.0000] <TabAtkins>
Uggghhhhh, I see the problem.

[13:56:24.0000] <TabAtkins>
Stupid unrunnable XML pipeline for WebIDL.

[13:56:26.0000] <Domenic>
I thought HTML data-noexport'ed everything, but also it didn't need to since dfns are not exported

[13:56:36.0000] <TabAtkins>
Domenic: Right, that's not a problem, dont' worry.

[13:57:06.0000] <Domenic>
ok ^_^

[13:57:40.0000] <TabAtkins>
Problem is that the XSLT for WebIDL inserts section numbers into the heading text, and doesn't take Bikeshed into account, so the handful of "heading dfns" I set up have linking text like "3.10.7. USVString"

[13:57:51.0000] <TabAtkins>
I'll fix and send heycam a PR.

[14:00:20.0000] <jyasskin>
lol

[14:44:54.0000] <smaug____>
hmm, browsers handle <iframe scrolling=no> quite differently


2016-04-20
[17:28:17.0000] <smaug____>
anyone want to interpret a sentence to me?

[17:28:21.0000] <smaug____>
Domenic: perhaps you're awake

[17:28:24.0000] <TabAtkins>
heycam: Yo, PR on WebIDL.

[17:28:32.0000] <smaug____>
https://html.spec.whatwg.org/multipage/forms.html#dom-cva-reportvalidity

[17:28:37.0000] <TabAtkins>
smaug____: I'm also available if it's in my wheelhouse.

[17:28:54.0000] <heycam>
TabAtkins: looking

[17:29:24.0000] <TabAtkins>
smaug____: What needs to be interpreted about that?

[17:29:33.0000] <smaug____>
TabAtkins: so, "if the element is a candidate for constraint validation and does not satisfy its constraints" ... "return false", "Otherwise, it must only return true without doing anything else."

[17:29:53.0000] <smaug____>
or is the "Otherwise, it must only return true without doing anything else." bound somehow differently

[17:30:07.0000] <smaug____>
like to  "if that event is not canceled"

[17:30:53.0000] <TabAtkins>
Unless this sentence is perverse, your first interpretation is right - the condition covers the rest of that sentence, and the following sentence gives the "else" branch for the conditional.

[17:31:24.0000] <MikeSmith>
I concur with TabAtkins’s assessment

[17:31:30.0000] <smaug____>
ok, thanks

[17:31:53.0000] <smaug____>
so, return true if element is valid effectively

[17:32:08.0000] <TabAtkins>
yeah

[17:33:04.0000] <TabAtkins>
I prefer wording my conditionals so that the simpler branch is first, so the binding is clearer. So I'd have reversed this if I were writing it.

[17:33:46.0000] <TabAtkins>
I see why it's the way it is, tho - the condition is an AND of two conditions, and negating that makes it less clear to express.

[17:34:14.0000] <TabAtkins>
"If the element is not a candidate for constraint validation, or is a candidate and satisfies its constraints..."

[17:34:21.0000] <TabAtkins>
Definitely a little fiddlier.

[17:35:02.0000] <TabAtkins>
I might just abandon English and go for a <dt class=switch>, then.  Those are great when you've got conditionals with long branches.

[17:35:24.0000] <TabAtkins>
s/dt/dl/

[02:28:59.0000] <annevk>
hayato: not sure if you're still awake, but would greatly appreciate your input on the issues around events

[02:30:07.0000] <zcorpan>
      <p>If the <var>current media resource</var> is a raw data stream (e.g. from a

[02:30:07.0000] <zcorpan>
      <code>File</code> object), then to determine the format of the <span>media resource</span>,

[02:30:21.0000] <zcorpan>
can it be a File object?

[02:30:52.0000] <annevk>
zcorpan: MediaProvider lists Blob, so yes

[03:30:00.0000] <zcorpan>
can someone test http://software.hixie.ch/utilities/js/live-dom-viewer/saved/4085 in Edge?

[03:30:24.0000] <zcorpan>
(interested in whether body fills the viewport or not)

[03:45:28.0000] <MikeSmith>
apologies to any Star Wars fans who follow me in twitter and may have been offended by my disrespect

[03:45:35.0000] <MikeSmith>
at the time I tweeted I was filled up with a lot of cheap airplane Chardonnay washed down with Goosehead IPA

[03:47:04.0000] <AutomatedTester>
MikeSmith: were those tweets about the latest one?

[03:47:08.0000] <annevk>
haha

[03:48:25.0000] <annevk>
MikeSmith: was already thinking of putting on Star Wars movies while you're here

[03:51:53.0000] <MikeSmith>
annevk: haha

[03:52:05.0000] <MikeSmith>
Star Wars marathon

[03:52:31.0000] <MikeSmith>
AutomatedTester: yeah the latest one

[03:53:51.0000] <MikeSmith>
anyway was I drifting in and out of sleep so in hindsight I am not sure how much of it I remember was the the actual movie or instead something I was dreaming

[04:09:41.0000] <annevk>
Wait per https://code.google.com/p/chromium/codesearch#chromium/src/third_party/WebKit/Source/core/events/EventTarget.cpp&sq=package:chromium&l=274 stuff dispatched through dispatchEvent() doesn't go through various phases in Chrome?

[04:13:14.0000] <annevk>
I guess I'm missing something

[04:13:17.0000] <annevk>
<script>document.documentElement.addEventListener("x", w);document.body.dispatchEvent(new Event("x", { bubbles: true }))</script> works fine

[04:14:29.0000] <ondras>
annevk: I would say that it goes only through AT_TARGET and bubbling

[04:14:29.0000] <Ms2ger>
JS calls https://code.google.com/p/chromium/codesearch#chromium/src/third_party/WebKit/Source/core/events/EventTarget.cpp&sq=package:chromium&l=252&rcl=1461122240

[04:14:51.0000] <ondras>
or maybe not

[04:17:38.0000] <annevk>
I wonder why they have all that different code

[04:17:52.0000] <annevk>
It's certainly not very clear

[04:19:54.0000] <annevk>
Ms2ger: but that also seems to call dispatchEventInternal

[04:20:15.0000] <Ms2ger>
Yeah, dunno

[04:23:45.0000] <annevk>
I was trying to figure out the shadow tree logic by reading the code, but ...

[04:58:06.0000] <MikeSmith>
so anybody ever had to block somebody from being able to post comments to a github issue tracker?

[04:58:36.0000] <MikeSmith>
have reached the end of my patience with this clown: https://github.com/w3c/push-api/issues/189#issuecomment-212377594

[04:58:39.0000] <annevk>
I blocked the entire <keygen> issue...

[05:04:47.0000] <Ms2ger>
Woot

[05:04:57.0000] <Ms2ger>
FileAPI has an editor

[05:17:49.0000] <MikeSmith>
yeah

[05:18:11.0000] <MikeSmith>
was there any announcement anywhere?

[05:18:46.0000] <MikeSmith>
Ms2ger: ⬆

[05:18:55.0000] <Ms2ger>
Not that I saw

[05:23:59.0000] <MikeSmith>
OK yeah would like to avoid somebody noticing who thinks we need to get formal approval

[05:24:23.0000] <MikeSmith>
and instead just get the facts on the ground from actual editing before they do

[05:25:15.0000] <MikeSmith>
not that I can imagine anybody would find this controversial but they do find surprising and novel ways to step in the way of productive working actually getting done

[06:09:54.0000] <annevk>
smaug____: \o/

[06:10:05.0000] <annevk>
smaug____: you're awake, do you also have time?

[06:51:36.0000] <MikeSmith>
I did manage to figure out how to perma-ban the https://github.com/w3c/push-api/issues/189#issuecomment-212377594 troll org-wide

[06:53:39.0000] <MikeSmith>
it’s at https://github.com/organizations/FOO/settings/user_blocks where FOO is the org name

[07:00:46.0000] <MikeSmith>
in other news, among the long list of ugly consequences the semweb crowd have inflicted on themselves with bad (over)designs, apparently since RDF vocabularies and “JSON-LD context files” are hard-wired in some way to depend on dereferenceable namespaces, they have dug themselves into being stuck with http as a result

[07:01:05.0000] <MikeSmith>
and can’t move those resources to https URLs ever

[07:02:01.0000] <annevk>
Can't they use owl:sameAs?

[07:02:36.0000] <MikeSmith>
I guess this was noted in the objections of some TAG members to the consensus that the rest of the universe has about moving to HTTPS everywhere, but I wasn’t paying attention

[07:03:21.0000] <MikeSmith>
annevk: dunno but if not that maybe the can layer even some more extra shit on top of it

[07:04:13.0000] <MikeSmith>
no matter what they would have a hard time making it fundamentally worse

[07:04:18.0000] <annevk>
That's exactly what I understood owl:sameAs to be

[07:04:33.0000] <annevk>
Some way to paper over shit that is other people's identifiers

[07:04:45.0000] <MikeSmith>
nobody has mentioned that yet that I recall

[07:05:19.0000] <MikeSmith>
but again I’m not really paying attention more than just to read stuff and shake my head in disbelief

[07:06:03.0000] <annevk>
MikeSmith: you don't read the stuff W3C publishes? This is from back in the days of "The Workshop": https://www.w3.org/TR/owl-ref/#sameAs-def

[07:06:06.0000] <MikeSmith>
the context for why I notice this today is that (surprise surprise) they are lobbying against efforts to get the W3C site moved all over to TLS

[07:06:36.0000] <MikeSmith>
/me looks at https://www.w3.org/TR/owl-ref/#sameAs-def

[07:07:36.0000] <MikeSmith>
shrug I guess they have no way to hook that into namespace resolution

[07:08:33.0000] <MikeSmith>
but boy look at the list of worthies who authored that doc

[07:08:51.0000] <MikeSmith>
really heavy-hitters in Web technologies

[07:09:30.0000] <MikeSmith>
seriously this is what happens when you have people designing things for that Web who don’t actually understand how the Web actually works

[07:10:35.0000] <annevk>
There's lots that applies though

[07:10:42.0000] <MikeSmith>
sure

[07:10:56.0000] <annevk>
SMIL must be one of my more favorite examples of designing gone wrong: https://annevankesteren.nl/2006/03/smil

[07:11:54.0000] <MikeSmith>
/me reads https://annevankesteren.nl/2006/03/smil

[07:12:08.0000] <MikeSmith>
god ten years ago, old man

[07:12:16.0000] <MikeSmith>
and still nobody listens to you!

[07:13:01.0000] <MikeSmith>
haha “Ten namespaces more than HTML element names in HTML 2.0, 3.2, 4.01 and XHTML 1.1 combined” nice

[07:13:31.0000] <MikeSmith>
the Schreiber guy who co-edited that doc at least went on to become Wolverine’s brother and fight back to back together when him against evil Dead Pool, which is arguably a bit more than you have accomplished

[07:13:36.0000] <MikeSmith>
but you still have time

[07:15:40.0000] <Ms2ger>
"W3C isn't really consistent"

[07:15:49.0000] <Ms2ger>
- annevk, 17 December 2003

[07:21:03.0000] <wanderview>
annevk: is there a big difference between a Response with an empty url list and a Response with a single url that is the empty string?

[07:21:11.0000] <wanderview>
or a significant difference, I mean

[07:21:34.0000] <annevk>
wanderview: a URL cannot be the empty string

[07:21:59.0000] <annevk>
wanderview: at least, a URL record cannot

[07:22:08.0000] <wanderview>
annevk: but Response only exposes urls as strings

[07:23:01.0000] <wanderview>
annevk: is it safe to safe Request must have at least one url in its url list, but Response may have no urls in its url list?

[07:23:23.0000] <annevk>
wanderview: that sounds correct

[08:01:22.0000] <annevk>
gsnedders: happy b-day young man 🎉🎂

[08:50:10.0000] <gsnedders>
annevk: I SAID YOUNG MAN WHEN YOU WALK IN THE DOOR

[08:51:17.0000] <annevk>
gsnedders: loud party? 😛

[10:16:27.0000] <Domenic>
TabAtkins: should Bikeshed grow an "extended attribute" definition type (for Web IDL), or should I just stick with "dfn"?

[10:17:26.0000] <TabAtkins>
Domenic: Currently I sprout specific types for the few extended attributes I care about. Lay out some use-cases for me that you want to hit and I'll see what the right thing should be.

[10:18:16.0000] <Domenic>
TabAtkins: well I realized I defined https://html.spec.whatwg.org/multipage/scripting.html#cereactions yesterday but forgot to export it so I can use it in DOM etc. So now I want to correct that but I'm not sure how I should mark it up.

[10:19:19.0000] <annevk>
smaug____: could you make time today to explain how Gecko does retargating (I'm assuming we have code for that) in https://github.com/w3c/webcomponents/issues/485?

[10:20:08.0000] <annevk>
smaug____: I have to go in a bit, but that would help a lot with figuring out the right way to integrate the monkey patching of events from Shadow DOM

[10:20:35.0000] <annevk>
smaug____: it's rather unclear to me at the moment what the right design should be, since the existing specification is rather unclear on the particulars, at least to me

[10:20:51.0000] <TabAtkins>
Right now "dfn" is the right type. A new type *might* be useful, so I could autolink IDL to the definition of the extended attribute, but that would also clash with the autolinking of [Constructor]. I'll have to think about this.

[10:21:15.0000] <Domenic>
Yeah, I was going to ask about autolinking. But for now I think it works to just add [<a>CEReactions</a>]

[10:21:48.0000] <smaug____>
annevk: Gecko's relatedTarget retargeting may not be the good one. it happens during event handling

[10:22:43.0000] <annevk>
smaug____: I'm just talking about target retargeting for now

[10:22:59.0000] <TabAtkins>
Domenic: It does not, no, because Bikeshed reparses the IDL and throws out any markup in it. ^_^

[10:23:05.0000] <smaug____>
annevk: but let me read that bug again once I've dealt with these housing cooperative papers

[10:23:07.0000] <Domenic>
uh oh

[10:23:09.0000] <TabAtkins>
(It'll work for HTML where y'all still mark up all your IDL manually.)

[10:23:11.0000] <smaug____>
in 10 mins or so

[10:23:26.0000] <annevk>
smaug____: enjoy and thanks

[10:23:36.0000] <Domenic>
So I guess I'll file a bug on Bikeshed to figure this out, and in the meantime DOM will just not have clickable annotations

[10:24:02.0000] <TabAtkins>
It might be fine to clash with Constructor linking - the definition of a Constructor is just the constructor method, which is super-obvious.

[10:24:09.0000] <TabAtkins>
All the rest can link to their concept definition.

[11:01:15.0000] <wanderview>
JakeA: ping?

[12:22:01.0000] <Domenic>
annevk: is ShadowRoot's innerHTML defined anywhere?

[12:23:08.0000] <annevk>
Domenic: that's why I'm considering taking over parts of P&S…

[12:23:16.0000] <Domenic>
annevk: ah OK...

[12:26:53.0000] <Domenic>
So many ReSpec specs.....

[12:43:22.0000] <zcorpan>
font-family: monospace, Droid Sans Fallback, Helvetica Neue, sans-serif; https://resources.whatwg.org/standard.css

[12:43:28.0000] <zcorpan>
that... makes little sense

[12:46:30.0000] <smaug____>
contradiction in the spec: " In all cases, the input event comes before the corresponding change event (if any)." ... "the user agent must queue a task to fire a simple event that bubbles named input at the input element. The corresponding change event, if any, will be fired when the control loses focus."

[12:47:53.0000] <smaug____>
/me files a bug

[13:11:51.0000] <smaug____>
mounir: so what would a web page do with memorypressure?

[13:12:23.0000] <smaug____>
I mean, it could sure try to not keep certain stuff alive, but it would be still up to the GC/CC/whatever to actually release the stuff

[13:12:34.0000] <Domenic>
release blobs or canvases maybe

[13:13:09.0000] <smaug____>
mounir: oh, I see, UA is expected to GC afterwards

[13:15:25.0000] <smaug____>
maybe this could work

[13:18:21.0000] <smaug____>
mounir: though, do we really need any levels?

[13:36:25.0000] <JonathanNeal>
I’m rewriting flex in JS, and I’m trying to group (row with row-reverse) and (column with column-reverse). I’m thinking the former means the container has a mainAxis of inline and later means the container has a mainAxis of block. Or should I just call them horizontal and vertical?

[14:14:21.0000] <TabAtkins>
Correct - row means inline, column means block

[14:14:38.0000] <TabAtkins>
JonathanNeal: ^^^

[14:15:07.0000] <JonathanNeal>
Awesome. I thought I had caught that. And the label for that is `axis`?

[14:15:30.0000] <TabAtkins>
What do you mean by "label"?

[14:17:47.0000] <JonathanNeal>
/me hopes to explain shortly.

[14:33:47.0000] <JonathanNeal>
TabAtkins: something like this https://gist.github.com/jonathantneal/500a650ce01ddea12d555e127cbb49ba#flex-container- I’m trying to define what happens as I calculate flexbox.

[14:39:48.0000] <JonathanNeal>
I’m describing an `axis` property on the flex container. It is either `inline` or `block` based on `flex-direction`.

[15:38:01.0000] <TabAtkins>
JonathanNeal: Then yes.


2016-04-21
[23:05:47.0000] <annevk>
Anyone know a simple way to draw tree structures with SVG?

[23:15:34.0000] <MikeSmith>
annevk: google says http://fperucic.github.io/treant-js/

[23:17:14.0000] <MikeSmith>
or http://jimblackler.net/treefun/index.html

[23:20:31.0000] <annevk>
I like that one from Jim, I wonder if the copyleft license poses an issue though

[23:21:08.0000] <MikeSmith>
well if you are just using it to create diagrams the license doesn’t matter, right?

[23:21:23.0000] <MikeSmith>
or you are wanting to embed something?

[23:21:48.0000] <annevk>
Yeah maybe that's right

[23:22:19.0000] <annevk>
No need for embedding, though I suppose there is a need for that project staying alive so we can create more diagrams as needed...

[23:24:26.0000] <MikeSmith>
sure

[23:26:07.0000] <annevk>
What I want is to create similar graphics to those in Shadow DOM but with SVG I can edit and make accessible

[23:26:33.0000] <annevk>
And perhaps some extra graphics too to explain event dispatch and how shadow trees mess with that, etc.

[23:28:05.0000] <MikeSmith>
I wonder if TabAtkins has diagrams in CSS specs he used something to create

[23:28:22.0000] <MikeSmith>
I mean other than his railroad diagrams

[23:29:02.0000] <MikeSmith>
in general he seems to have a knack for diagrams

[23:29:41.0000] <MikeSmith>
anyway, that interactive treefun tool seems pretty serviceable

[01:29:13.0000] <Ms2ger>
annevk, r? https://github.com/w3c/web-platform-tests/pull/2875

[01:33:49.0000] <annevk>
Ms2ger: merged

[03:14:12.0000] <Neu>
hello, why does noscript element contain markup as raw text node when scripting is enabled? What's the purpose of this?

[03:15:18.0000] <Neu>
Why can't it just parse contents, create DOM nodes, but browser would hide this subtree

[03:16:08.0000] <annevk>
Neu: I suspect it's a browser-introduced hack from back in the day to prevent <img> and such to load

[03:16:31.0000] <Neu>
hmm. yea, this makes sense

[03:23:48.0000] <Neu>
I'm reading https://www.w3.org/TR/2012/WD-html5-20121025/the-noscript-element.html : "The noscript element must contain only link, style, and meta elements." Does this mean I must drop all other tags? E.g. firefox for this case (simplified) <head><noscript><strong>HEAD</strong></noscript> migrates <strong> into body.

[03:25:02.0000] <annevk>
Neu: I recommend reading https://html.spec.whatwg.org/multipage/scripting.html#the-noscript-element

[03:25:14.0000] <annevk>
Neu: what is allowed as contents depends on the context

[03:25:29.0000] <annevk>
Neu: if you place <noscript> inside <head>, you can only allow elements similar to what <head> allows

[03:25:39.0000] <annevk>
Neu: if you place <noscript> inside <body>, similar

[03:25:46.0000] <Neu>
sure

[03:26:02.0000] <Neu>
the context is <head>

[03:26:12.0000] <annevk>
Then you can't use <strong>

[03:26:18.0000] <annevk>
Or text

[03:26:54.0000] <Neu>
and firefox behaves wrong in this case?

[03:28:09.0000] <zcorpan>
no. how it parses depends on whether script is enabled (per spec)

[03:28:56.0000] <Neu>
let me show. http://i.imgur.com/1LbApEp.png

[03:29:30.0000] <zcorpan>
Neu: do you have script disabled?

[03:29:35.0000] <Neu>
scripting is disabled, first <strong> was in head

[03:29:38.0000] <Neu>
yes

[03:29:44.0000] <zcorpan>
that's per spec

[03:29:46.0000] <Neu>
I can see HEADBODY

[03:30:17.0000] <zcorpan>
the <strong> closes noscript and opens body

[03:30:27.0000] <zcorpan>
closes noscript and head and opens body

[03:31:15.0000] <zcorpan>
https://html.spec.whatwg.org/multipage/syntax.html#parsing-main-inheadnoscript

[03:32:44.0000] <zcorpan>
hmm wonder if <head><noscript></p> is a spec bug

[03:33:10.0000] <Neu>
zcorpan: you're right, added <styles> everywhere, and really, first <strong> just finished the <head>

[03:35:22.0000] <zcorpan>
(no </p> is ignored until body is opened...)

[03:35:51.0000] <Neu>
is there any test suite except one from html5lib? (https://github.com/html5lib/html5lib-tests)

[03:47:20.0000] <jgraham_>
That's the best parser testsuite

[04:13:56.0000] <zcorpan>
i've bikeshedded https://quirks.spec.whatwg.org/ \o/

[04:25:58.0000] <annevk>
zcorpan: nice

[04:26:16.0000] <annevk>
zcorpan: README should list code of conduct

[04:26:52.0000] <zcorpan>
annevk: yeah, will fix that

[04:40:43.0000] <annevk>
zcorpan: ah, I had already filed an issue

[04:40:46.0000] <annevk>
zcorpan: forgot about that

[05:36:11.0000] <zcorpan>
Domenic: can you test http://software.hixie.ch/utilities/js/live-dom-viewer/?saved=4085 in Edge?

[05:36:17.0000] <zcorpan>
(or someone else)

[06:01:14.0000] <zcorpan>
i have a result (it fills the viewport)

[06:30:02.0000] <jochen__>
does somebody know the right magic spec: line for bikeshed to reference css fonts?

[06:30:22.0000] <Ms2ger>
zcorpan / TabAtkins: is element.closest(":has(> :scope)") supposed to work?

[06:36:59.0000] <zcorpan>
Ms2ger: i don't know

[07:36:54.0000] <annevk>
I wish I had access to more folks that understand event dispatch as well as smaug... Anyone want to volunteer?

[07:37:00.0000] <annevk>
/me wants feedback on https://github.com/w3c/webcomponents/issues/485#issuecomment-212938463

[09:01:04.0000] <TabAtkins>
Ms2ger: Yes, it should - DOM sends the appropriate arguments to the abstract op in its definition.

[09:01:56.0000] <Ms2ger>
So the weird half-selector syntax ended up existing? :(

[09:02:29.0000] <TabAtkins>
Yeah, relative selectors are really useful for cases like :has(), and .query() off of an element.

[09:03:55.0000] <TabAtkins>
Oh, wait tho.

[09:04:25.0000] <TabAtkins>
:has() lays claim to :scope in a way that conflicts with .closest(), so that won't match anything.

[09:04:43.0000] <TabAtkins>
(It's asking for an element which has itself as its own child.)

[09:06:49.0000] <TabAtkins>
MikeSmith: I don't have anything to generate tree diagrams, no.  dot isn't too hard to mess with, tho, and can output SVG.

[09:10:15.0000] <TabAtkins>
zcorpan: I put Quirks in Shepherd.

[09:14:26.0000] <Ms2ger>
TabAtkins, yeah, was wondering about throwing rather than whether it matched anything

[09:14:43.0000] <TabAtkins>
It shouldn't throw per spec, definitely.

[09:14:52.0000] <TabAtkins>
It's a valid, if unfortunately nonsensical, selector.

[09:15:09.0000] <TabAtkins>
(The clashing :scope pseudo is a problem I recognized years ago but don't have a good idea to fix.)

[09:15:36.0000] <Ms2ger>
Bwuh

[09:15:51.0000] <Ms2ger>
SimonSapin, want to file an issue to support :scope in Servo?

[09:15:54.0000] <Ms2ger>
/me disappears

[09:28:51.0000] <nox>
I think I did that already.

[09:29:50.0000] <nox>
Well, kind of. https://github.com/servo/servo/issues/7598

[10:19:20.0000] <Domenic>
TabAtkins: do you have time to work on https://github.com/w3c/webcomponents/issues/468#issuecomment-207622151 this week? Not sure where you are with all the shadow DOM stuff.

[10:21:45.0000] <TabAtkins>
Yeah, I think I do.  I finished the CSS Shadow DOM stuff yesterday, it's up in the Scoping spec now.

[10:23:19.0000] <Domenic>
Awesome

[10:23:59.0000] <Domenic>
I think it would probably be best if you took the lead on defining the primitive needed? Once that's done the actual HTML PR to hook it up to a define() option is pretty simple...

[10:31:55.0000] <annevk>
https://www.w3.org/Bugs/Public/show_bug.cgi?id=28326 I guess feedback from Mozilla was not needed...

[10:41:10.0000] <Domenic>
I don't understand that bug

[10:41:18.0000] <Domenic>
How did they remove isindex parsing? I don't see any commits in w3c/html

[10:41:23.0000] <Domenic>
Was it part of the initial import?

[10:43:41.0000] <Domenic>
It's just wrong

[10:43:44.0000] <annevk>
I guess so

[10:44:14.0000] <annevk>
It's very wrong

[10:44:39.0000] <annevk>
Oh, you pointed out that they didn't remove it

[10:44:44.0000] <Domenic>
yeah

[10:45:07.0000] <annevk>
sigh

[10:49:34.0000] <Domenic>
Is there a mozilla bug filed

[10:50:29.0000] <gsnedders>
is there any way to see whether someone is subscribed to a given W3C mailing list?

[10:50:35.0000] <gsnedders>
/me assumes not

[10:51:44.0000] <annevk>
Domenic: I don't think so

[10:51:50.0000] <annevk>
gsnedders: yeah Member-only

[10:52:46.0000] <Domenic>
OK let's open a whatwg/html bug for it and then open Mozilla and WebKit bugs

[10:52:57.0000] <Domenic>
I'll do so

[10:53:45.0000] <annevk>
gsnedders: https://www.w3.org/Member/Mail/AuditForm

[11:02:59.0000] <smaug____>
philipj: ping

[11:03:24.0000] <philipj>
smaug____: ping

[11:03:27.0000] <philipj>
pong even

[11:03:52.0000] <smaug____>
philipj: do you have some way to check if "Animate" is used often in web pages?

[11:04:41.0000] <smaug____>
this is about the Animation spec and blink doesn't yet have the interface without [NoInterfaceObject], but we're thinking to follow the spec in Gecko

[11:04:50.0000] <smaug____>
(normal interface and Constructor)

[11:05:44.0000] <philipj>
smaug____: what's the interface name?

[11:05:54.0000] <smaug____>
Animation

[11:06:31.0000] <philipj>
and you're wondering if there's a risk in having that on the global object I guess?

[11:07:36.0000] <smaug____>
right

[11:16:59.0000] <gsnedders>
annevk: thx for that link; was assuming it would be MO

[11:17:15.0000] <annevk>
gsnedders: that link is not MO?

[11:17:24.0000] <annevk>
gsnedders: I think it is

[11:18:46.0000] <gsnedders>
annevk: I mean I was assuming it would be MO if it existed

[11:19:00.0000] <annevk>
oh doh

[11:19:42.0000] <gsnedders>
(I'm nowadays an Invited Expert with Member-Only Access according to what my account says, so that's fine by me)

[12:02:11.0000] <philipj>
smaug____: so what you can do is to search the httparchive for that string, but to be useful you'd want to search on JS I guess. Using BigQuery is supposedly the easiest way to do it, but I've never actually used that. Rick Byers could probably help you get started, though.

[12:02:48.0000] <smaug____>
rbyers: ^

[12:25:59.0000] <jsbell>
smaug____: See https://www.igvita.com/2013/06/20/http-archive-bigquery-web-performance-answers/ for general overview...

[12:27:28.0000] <jsbell>
smaug____: And a sample query for JS content: https://gist.github.com/inexorabletash/471d674259cb96f0f9ca363b7e533c70

[12:31:53.0000] <rbyers>
Smaug: also https://docs.google.com/a/chromium.org/document/d/1cpjWFoXBiuFYI4zb9I7wHs7uYZ0ntbOgLwH-mgqXdEM/edit?usp=drive_web

[12:41:55.0000] <laughinghan>
thanks to discussion with smaug____, I think I've found a good reason to believe that fixing :target selectors to update upon history.pushState() is unlikely to break any webapps

[12:41:56.0000] <smaug____>
thanks

[12:42:27.0000] <laughinghan>
which is that currently after pushState, though :target selectors aren't updated, if you then hit Back and then Fwd, the :target rules will apply

[12:42:42.0000] <laughinghan>
http://output.jsbin.com/quludi

[12:42:47.0000] <smaug____>
interesting

[12:43:24.0000] <smaug____>
laughinghan: what about hashchange event?

[12:43:53.0000] <laughinghan>
so the only way a webapp could be broken by the change that wasn't already broken by Back+Fwd is if they had a broken :target rule that was obscured by hysteresis due to popstate/hashchange event handlers

[12:44:22.0000] <smaug____>
laughinghan: so in that testcase dispatch hashchange when?

[12:44:43.0000] <laughinghan>
smaug____: oh, your idea that pushState() should also dispatch hashchange?

[12:44:46.0000] <laughinghan>
you know I'm not sold on that

[12:44:57.0000] <laughinghan>
to be honest

[12:45:10.0000] <laughinghan>
but if we're gonna try to be consistent with something

[12:45:15.0000] <smaug____>
well, if :target is updated...

[12:45:16.0000] <laughinghan>
I think we should be consistent with hitting the Fwd button

[12:45:35.0000] <smaug____>
consistency is important

[12:45:46.0000] <laughinghan>
just like Fwd updates the :target, it fires hashchange at a certain time

[12:46:13.0000] <laughinghan>
I think it fires hashchange after window.location and history.state has been updated

[12:46:40.0000] <laughinghan>
therefore, pushState should fire hashchange after window.location and history.state have been updated

[12:46:52.0000] <laughinghan>
smaug____: is that what you mean by "dispatch hashchange when?"

[12:47:30.0000] <smaug____>
that sounds about right

[12:50:12.0000] <laughinghan>
huh

[12:50:23.0000] <laughinghan>
unlike popstate, hashchange fires after scroll has been restored

[12:50:32.0000] <laughinghan>
http://output.jsbin.com/qeloye

[12:50:56.0000] <laughinghan>
er, that test case needs some explanation

[12:51:04.0000] <laughinghan>
basically in the console a nonzero number is logged

[13:17:53.0000] <TabAtkins>
Anyone remember who runs the @CSSCommits bot?

[13:18:01.0000] <TabAtkins>
(It's got some bizarre bug at the moment.)

[13:32:14.0000] <Domenic>
mathiasbynens I believe

[14:24:39.0000] <smaug____>
So https://html.spec.whatwg.org/multipage/forms.html#the-select-element "Upon this option element being picked (either through a click...." ... "before the relevant user interaction event is queued (e.g. before the click event)"

[14:24:45.0000] <smaug____>
doesn't quite make sense to me

[14:25:03.0000] <smaug____>
if we're picking based on click, that click sure has been queued already

[14:25:13.0000] <smaug____>
and click event isn't something to queue

[14:25:23.0000] <smaug____>
it is dispatched based on mousedown/up usually

[14:25:31.0000] <smaug____>
/me files a bug

[14:25:36.0000] <smaug____>
poor editors

[14:52:57.0000] <smaug____>
anyone recall if firing "input" for <select> was added recently

[14:52:59.0000] <smaug____>
I think it is

[14:53:06.0000] <smaug____>
but can't find the bug

[14:53:30.0000] <smaug____>
github's search is really horrible :/

[15:06:52.0000] <Domenic>
I think it was before the move to GitHub


2016-04-22
[22:27:00.0000] <annevk>
Hmm, no event discussion ugh

[23:50:46.0000] <MikeSmith>
oh man

[23:51:23.0000] <MikeSmith>
I was going to post a link to https://twitter.com/w3c/status/723167929395605509 here for the lulz

[23:52:02.0000] <MikeSmith>
but I see Domenic and hsivonen are already way ahead of me and have favorited it

[23:52:07.0000] <annevk>
I saw that, hsivonen make a point of retweeting those events

[23:52:13.0000] <annevk>
mkaes*

[23:52:15.0000] <annevk>
makes*

[01:27:47.0000] <Ms2ger>
annevk, yt?

[01:28:02.0000] <annevk>
Ms2ger: yeah

[01:28:13.0000] <annevk>
Ms2ger: fixing non-dispatchy things

[01:28:23.0000] <Ms2ger>
annevk, so origins are shared and mutable now, right?

[01:28:38.0000] <annevk>
Ms2ger: partially mutable, yes

[01:28:53.0000] <annevk>
Ms2ger: and yes, they are shared freely

[01:29:31.0000] <Ms2ger>
About that "partially" bit... It can't change opaque <-> tuple, or if it's a tuple, change scheme/host/port, correct?

[01:29:46.0000] <annevk>
Ms2ger: if it's tuple, it can change domain, that's it

[01:29:59.0000] <Ms2ger>
Okay, great

[01:30:26.0000] <annevk>
scheme/host/port never change, opaque never changes, they never change from opaque to tuple

[01:30:42.0000] <Ms2ger>
That's what I thought, thanks

[01:30:47.0000] <annevk>
If you file an issue I can add a note underneath that details these invariants

[01:30:53.0000] <annevk>
at some point

[01:32:34.0000] <Ms2ger>
https://github.com/whatwg/html/issues/1093

[02:36:20.0000] <jochen__>
what's the implication of a "relevant mutation" of an img element?

[02:36:45.0000] <annevk>
zcorpan should know

[02:38:53.0000] <annevk>
jochen__: so I think that referrerpolicy should probably be part of relevant mutations

[02:39:09.0000] <zcorpan>
jochen__: it runs "update the image data"

[02:39:13.0000] <annevk>
jochen__: it seems that the eventual request happens asynchronously at a later point so can be updated

[02:48:45.0000] <jochen__>
ok

[02:48:50.0000] <jochen__>
i guess we should have a test for that

[03:03:24.0000] <Ms2ger>
Yes

[06:03:09.0000] <Ms2ger>
zcorpan, fyi https://github.com/whatwg/html/issues/1099

[06:50:54.0000] <annevk>
smaug____: so I guess I'll wait a bit with defining events until that issue is sorted

[06:51:19.0000] <annevk>
smaug____: it's a little annoying feedback from the others is slow since everything else seems to depend on it

[06:51:39.0000] <annevk>
smaug____: e.g., I created a patch for <script> in HTML, but the "load" event it dispatches needs to be scoped...

[06:52:13.0000] <smaug____>
annevk: "that issue"?

[06:52:35.0000] <smaug____>
event dispatching in shadow DOM?

[06:52:46.0000] <annevk>
smaug____: https://github.com/w3c/webcomponents/issues/485

[06:52:49.0000] <annevk>
smaug____: yeah

[06:55:32.0000] <smaug____>
annevk: I wonder...this iframe + session history.

[06:56:07.0000] <smaug____>
if the top level page is navigated back() and then forward(), I assume the iframe in shadow dom will get a new session history

[06:56:42.0000] <smaug____>
(bfcache is different since that keeps the iframe alive)

[06:57:38.0000] <annevk>
smaug____: I'm not sure I know enough about it, but that sounds right if there's no cache

[07:00:58.0000] <smaug____>
and random note, I _think_ having separate session history for iframes should be easy to implement in Gecko. In xul:browser (which internally uses the same code as html:iframe), we support disablehistory attribute. If not set, session history is created for the contained browsing context (and its descendants)

[07:22:08.0000] <wanderview>
JakeA: does chrome return workers as Client objects from matchAll() yet?  I wonder if that will confuse sites when we start doing that

[07:30:02.0000] <annevk>
wanderview: not working on streams just yet?

[07:30:53.0000] <wanderview>
annevk: I started this week, but then Matt Gaunt wrote a bug that has been ruining my day for a few days now

[07:33:49.0000] <annevk>
😢

[07:36:10.0000] <gsnedders>
Uh, how am I meant to animate a changing SVG path nowadays?

[07:36:22.0000] <gsnedders>
I presume with JS?

[07:37:34.0000] <JakeA>
wanderview: hm, not sure. It won't show up unless you pass an option to matchAll though right?

[07:37:42.0000] <wanderview>
thats true

[07:37:45.0000] <wanderview>
ok, that seems safe

[07:38:17.0000] <JakeA>
https://slightlyoff.github.io/ServiceWorker/spec/service_worker/#enumdef-clients-clienttype

[07:38:33.0000] <wanderview>
yea... I forgot about that

[07:39:01.0000] <wanderview>
JakeA: the whole "order by most recently focused" thing might be interesting with workers in the mix

[07:39:42.0000] <JakeA>
wanderview: hmm, good point, we need to define that

[07:40:01.0000] <wanderview>
JakeA: like workers count as never being focused... so always at the end

[07:40:38.0000] <JakeA>
That's probably good enough tbh

[07:41:06.0000] <wanderview>
I'll write an issue

[09:20:28.0000] <wanderview>
JakeA: https://github.com/slightlyoff/ServiceWorker/issues/887

[09:21:17.0000] <JakeA>
Taa!

[09:22:13.0000] <TabAtkins>
gsnedders: The 'd' property is in the process of being specced/implemented, so you can animate that.

[09:22:28.0000] <TabAtkins>
Now if you want to animate it *today*, SMIL still works everywhere but IE.

[09:22:35.0000] <TabAtkins>
But if you want IE support, yeah, JS is the way to go.

[11:24:19.0000] <Mek>
hmm, to properly specify Link rel=serviceworker support in http response headers I'd like to somehow express that: for subresource requests the request was made from a secure context, and for non-subresource requests the resulting document/worker will be a secure context. For the subresource case I can just check if the requests client is a secure context. For workers the requests client is the new worker, so that same check should work. But for

[11:24:20.0000] <Mek>
navigations the settings object for which I care if it is a secure context doesn't exist yet until well after the fetch is complete...

[13:47:23.0000] <wanderview>
Mek: err... why would we allow it on http response headers at all?  regardless of how it was initiated it could have be mitm'd, right?

[13:49:14.0000] <Mek>
wanderview: the regular registration checks already ensure that various origins match, are all secure origins, http/https only etc.

[13:49:32.0000] <Mek>
so I meant http the protocol, not http vs https

[13:49:38.0000] <wanderview>
oh, sorry

[13:51:06.0000] <gsnedders>
TabAtkins: this freakin' sucks

[16:54:32.0000] <Mek>
woot, I filed html issue 1111 :P (okay, not sure why that number amuses me)


2016-04-23
[08:47:24.0000] <november2>
From the WHATWG FAQ: "The specs can and have diverged on some topics; unfortunately, these differences are not documented anywhere."  Is this still true?  From someone getting back into the HTML game after 10 years, I can say that a simple list of differences is something I want to read, just to know what is controversial.

[08:47:55.0000] <november2>
If a list doesn't exist, I might try making it.

[08:57:58.0000] <gsnedders>
november2: people have occasionally tried to make such lists but they've ended up out of date; it's also worthwhile pointing out that now HTML5 is in TR space every single change to the WHATWG spec increases the number of differences

[08:58:27.0000] <gsnedders>
november2: and when HTML5.1 work starts up properly who knows whether that delta will go up or down

[09:04:24.0000] <annevk>
november2: there is https://diffofhtmls.herokuapp.com/

[09:04:39.0000] <annevk>
november2: see also https://annevankesteren.nl/2016/01/film-at-11

[09:10:07.0000] <november2>
Thanks :)

[09:10:55.0000] <charl>
some things will never change :)

[09:11:33.0000] <charl>
like the w3c :P

[09:12:20.0000] <charl>
/me shouts hi at annevk

[09:12:22.0000] <charl>
long time no speak to

[09:16:38.0000] <annevk>
charl: hoe gaat het?

[09:18:21.0000] <charl>
heel goed! ik zit nog op de utwente na 4 jaar :P

[09:19:24.0000] <annevk>
Ooh dat wist ik niet

[09:19:38.0000] <charl>
ik doe trouwens tegenwoordig heel weinig met frontend, ben wel een backender geworden

[09:19:39.0000] <annevk>
Dacht nog in ZA

[09:20:07.0000] <charl>
hehehe

[09:20:23.0000] <charl>
en jij zit in engeland dacht ik ? bij mozilla ?

[09:20:45.0000] <annevk>
Zwitserland nu, nog steeds Mozilla ja

[09:20:56.0000] <charl>
hartstikke leuk, goed bezig

[09:21:15.0000] <annevk>
Ja erg leuk, hoe bevalt de uni?

[09:21:33.0000] <charl>
ik PM je wel even als het goed is :P

[13:14:45.0000] <smaug____>
does github give plain old patch view for changes

[13:18:47.0000] <gsnedders>
smaug____: there's a unified diff mode; there's options for split and unified diff views

[13:18:52.0000] <gsnedders>
idk if that's what you're asking?

[13:19:20.0000] <gsnedders>
smaug____: uhh, did you accidentally send half of this on #blink?

[13:20:02.0000] <gsnedders>
smaug____: there's a "diff options" link near the top which pulls down to give a unified option

[15:45:31.0000] <GPHemsley>
annevk: I'm unable to reproduce the wiki issue. Did it resolve itself?


2016-04-24
[17:35:43.0000] <jyasskin>
If folks have opinions about specifying temporary permissions, I'd appreciate hearing them in https://github.com/w3c/permissions/issues/86#issuecomment-213857053. I'll probably ping this again Monday to catch people who work at reasonable hours.

[17:38:34.0000] <gsnedders>
jyasskin: btw, sorry for prodding you on the test-infra stuff about what's needed for testing stuff

[17:39:26.0000] <jyasskin>
gsnedders: np. Unfortunately I haven't looked into it since TPAC so I can't help Shane much.

[17:43:13.0000] <gsnedders>
jyasskin: do you know if anyone else around Web Bluetooth has any idea?

[17:45:56.0000] <jyasskin>
gsnedders: I haven't heard from Sam Uong recently, who was going to look into it. jsbell was also looking at making wpt work better with Chrome's tests, which is a pre-requisite for us moving the tests over, but I also don't know how that's going.

[17:47:18.0000] <jyasskin>
I've forwarded your question to Sam.

[17:47:25.0000] <gsnedders>
thx!

[17:50:22.0000] <gsnedders>
speaking of jsbell, I was wondering about prodding a few of the Bay Area people (he's there, right? as is Dirk?) to see if they wanted to meet up at all while I'm about in case we could make some progress with getting Blink running wpt/csswg-test

[17:53:59.0000] <jyasskin>
Cool. I'm in Portland now, but it's definitely worth pinging jsbell. How long are you around?

[17:55:49.0000] <gsnedders>
jyasskin: I'm around a few days after the CSS WG F2F at Google SF, but practically that means 5/6th May (really I can do 7th and most of 8th as well); Houdini will be meeting then so it cuts out some people

[17:57:50.0000] <jyasskin>
I've pinged them too.

[17:58:16.0000] <gsnedders>
jyasskin: thanks!

[17:59:02.0000] <gsnedders>
(sidenote: I much prefer dealing with jyasskin in written media, because it's so much less confusing given obviously different names)

[17:59:12.0000] <jyasskin>
Indeed. :)

[08:28:37.0000] <annevk>
GPHemsley: yeah, I it did, it was probably related to a general outage of DreamHost services on whatwg.org


2016-04-25
[01:59:27.0000] <zcorpan>
Domenic: in https://streams.spec.whatwg.org/ is there a difference between foo@[[bar]] and foo.[[bar]] ? it seems to use both forms

[02:15:24.0000] <annevk>
zcorpan: suspect the latter is in error

[04:46:30.0000] <MikeSmith>
wtf http://stackoverflow.com/questions/36837781/cors-with-chrome-50-0-2661-86-in-node

[04:46:59.0000] <MikeSmith>
PATCH http method?

[04:48:04.0000] <MikeSmith>
wow so it actually exists

[04:50:40.0000] <caitp>
sounds like you've somehow avoided all of the "blah blah blah RESTful blah blah blah" on the internet over the past decade or so :) nice

[04:52:09.0000] <MikeSmith>
yeah I have I think

[04:52:35.0000] <MikeSmith>
avoided most of it by just not reading the www-tag list very closely in the past

[04:52:56.0000] <annevk>
/me replies

[04:53:29.0000] <MikeSmith>
where the 5 people in the universe who actually care about that stuff used to have their discussions with each other about it

[04:54:32.0000] <nox>
Quite a few APIs in the wild understand PATCH though.

[04:55:02.0000] <annevk>
I think PATCH is quite popular, it comes up now and then since folks think fetch() should uppercase it

[04:55:32.0000] <annevk>
There's an outstanding issue on fetch() to provide some examples around it, e.g., how patch and PATCH are different

[04:56:21.0000] <MikeSmith>
man I still feel like this is just part of some conspiracy to troll me

[04:56:37.0000] <MikeSmith>
I guess I just don’t get around enough

[04:57:17.0000] <MikeSmith>
/me reads https://www.mnot.net/blog/2012/09/05/patch

[04:57:58.0000] <caitp>
if you try to design a RESTful api, which you probably do if you're being hit in the face with it at conferences and on twitter and in books and in school and etc, you probably like the idea of PATCH vs PUT, for most changes to existing articles

[04:59:42.0000] <MikeSmith>
I never have occasion to even use PUT

[05:00:38.0000] <MikeSmith>
so again I guess this is basically all lost on me and I am revealing what at dilettante I am

[05:01:19.0000] <MikeSmith>
not that I claim to actually be a real web developer

[05:03:57.0000] <annevk>
zcorpan: I'm thinking of taking a stab at merging the <source> element sections

[05:05:38.0000] <annevk>
MikeSmith: I think the conspiracy would be all the carefully introduced idiosyncrasies of the web, keeping us busy for decades

[05:06:49.0000] <MikeSmith>
well thank god for that then, for keeping us all employed

[05:07:08.0000] <MikeSmith>
though I guess the downside of it is that you in particular are working yourself out of job

[05:08:20.0000] <Ms2ger>
Or into a job that's actually fun ;)

[05:08:37.0000] <annevk>
Sounds good, more time to enjoy all this spring snow

[05:45:33.0000] <zcorpan>
annevk: ok. i had planned to fix <template> content model first since it affects <source> but i suppose either way works

[06:03:28.0000] <Ms2ger>
slightlyoff, ping

[06:04:21.0000] <Ms2ger>
Or anyone who knows a thing or two about service workers

[06:14:49.0000] <annevk>
zcorpan: ended up being a pretty big change

[06:15:01.0000] <zcorpan>
annevk: looking at the diff now

[06:16:04.0000] <annevk>
zcorpan: main thing that is new is saying which attributes must not be present in the media element case

[06:27:14.0000] <zcorpan>
annevk: yeah

[06:46:54.0000] <Ms2ger>
I wish I could link to specific versions of ES

[06:50:56.0000] <caitp>
you can, sort of

[06:51:49.0000] <caitp>
maybe if someone will pay for hosting, snapshots of the living standard could be uploaded every week or something

[06:52:59.0000] <caitp>
but the snapshots on ecma-international.org (and ToT of the living standard) are probably good enough for most uses?

[06:58:46.0000] <TabAtkins>
Ms2ger: I know a few things, tho I don't promise it's enough.

[06:59:50.0000] <Ms2ger>
https://slightlyoff.github.io/ServiceWorker/spec/service_worker/#on-fetch-request-algorithm step 18.5 mentions "activeWorker�s environment settings object"

[07:00:10.0000] <Ms2ger>
Is that "the ECMAScript global environment associated with" activeWorker as in WebIDL?

[07:03:29.0000] <TabAtkins>
It's the [[GlobalObject]] field of the Realm associated with the activeWorker's environment settings object, per HTML.

[07:03:32.0000] <TabAtkins>
So: probably, yes.

[07:04:53.0000] <Ms2ger>
I'm asking what "activeWorker's environment settings object" is, though

[07:05:32.0000] <Ms2ger>
The xref is useless, since it links to the definition of "environment settings object" as a concept, rather than a property of a service worker

[07:12:35.0000] <TabAtkins>
Ms2ger: Ah, following defs back a bit, it comes from the "service worker client", which is the document that talks to the SW, a la the "client" concept of SharedWorkers.

[07:17:00.0000] <Ms2ger>
TabAtkins, while I have you...

[07:17:37.0000] <Ms2ger>
https://github.com/heycam/webidl/commit/54ebc4cef602a80747ae4b6e502c46d157165a00 broke the toc generation for common-ArrayBufferView and friends, because the section no longer has an id

[07:19:15.0000] <TabAtkins>
Oh! I didn't realize that processor depended on the section having an id.

[07:19:42.0000] <Ms2ger>
Is common-ArrayBufferView actually the ID we want for the concept?

[07:19:59.0000] <Ms2ger>
I would have thought dom-ArrayBufferView or typedef-ArrayBufferView or something

[07:20:24.0000] <TabAtkins>
Yeah, it's probably not. It was just the nearest appropriate ID.

[07:21:25.0000] <Ms2ger>
BS won't complain if I put another ID there?

[07:22:02.0000] <TabAtkins>
Nope. It just wants *some* ID on the heading, because it's providing a ref anchor.

[07:22:07.0000] <Ms2ger>
Ok, thanks

[07:23:33.0000] <Ms2ger>
/me wishes idl was on BS already

[07:24:51.0000] <TabAtkins>
Sorry, I didn't want to spend the time converting it. :/

[07:34:04.0000] <Ms2ger>
TabAtkins, can't blame you

[07:40:55.0000] <Domenic>
zcorpan: annevk: foo.[[bar]] is for record fields, foo@[[bar]] is for object internal slots. Inherited from ES, which uses foo.[[bar]] and "the [[foo]] internal slot of bar"

[07:42:11.0000] <annevk>
Isn't .[[ unique anyway?

[07:42:48.0000] <Domenic>
unique in what way?

[07:43:36.0000] <annevk>
Not sure what justifies the @

[07:44:10.0000] <Domenic>
Well, it lets you know whether you're looking at a field of a record or a private slot of an object

[07:46:29.0000] <TabAtkins>
That's obvious from the type of foo, no?

[07:47:09.0000] <Domenic>
yes, in a hypothetical world where you can hover over any references to foo and see its strongly-typed declaration.

[07:50:33.0000] <TabAtkins>
Or just look slightly upwards to where in the algorithm it's declared.

[07:58:12.0000] <Domenic>
Often things are passed as parameters (and parameters don't have type declarations)

[08:01:00.0000] <TabAtkins>
Input params should be declared at the top of the algorithm; if not that's just confusing spec writing, and should be considered a bug.

[08:01:03.0000] <Ms2ger>
(Though maybe they should)

[08:01:32.0000] <TabAtkins>
/me considers implementing Hindly-Miller type inference for Bikeshed...

[08:02:05.0000] <mounir>
annevk: should CORS check follow 301 by default (ie. if no Access-Control-* flags)?

[08:21:21.0000] <annevk>
mounir: nope

[08:21:36.0000] <mounir>
annevk: thanks :)

[08:54:23.0000] <darobin>
annevk: is https://github.com/annevk/webvtt still current?

[08:54:36.0000] <darobin>
it doesn't look like there's much in terms of JS tooling for WebVTT

[08:55:10.0000] <annevk>
darobin: I think so; I have thus far refused to add some new features that seemed only implemented by a single browser

[08:55:35.0000] <annevk>
I suspect zcorpan might know better, but it appears he's gone

[08:55:40.0000] <darobin>
gone!!!

[08:55:47.0000] <annevk>
Forever

[08:55:52.0000] <darobin>
seriously?

[08:55:55.0000] <annevk>
No

[08:56:00.0000] <darobin>
oh :-p

[08:56:50.0000] <darobin>
do you just want to keep it as is or are changes to turn it into more of a reusable thing of interest?

[08:57:14.0000] <annevk>
darobin: sounds fine, depends a bit on whether I can still read the result I suppose

[08:57:30.0000] <darobin>
I'm mostly thinking about making it usable from Node and all

[08:57:45.0000] <darobin>
(this is assuming I end up actually needing a parser, I'm still surveying options)

[08:58:14.0000] <annevk>
yeah seems fine

[08:58:18.0000] <darobin>
cool ta

[08:58:23.0000] <darobin>
if I need it I'll make you some PRs

[08:58:54.0000] <darobin>
probably not ES6ify it so you don't need dependencies and all

[08:59:09.0000] <darobin>
well at least not babel, 'cause that's hell

[09:00:14.0000] <annevk>
yeah, no dependencies please

[09:00:26.0000] <annevk>
stuff that ships in browsers seems fine

[09:00:38.0000] <annevk>
e.g. (x) => yay(x)

[09:02:23.0000] <darobin>
ok

[09:03:02.0000] <darobin>
a build step fine (so as to support UMD and other ways of loading)? otherwise I guess I can just fork it, but it seems like a shame

[09:03:25.0000] <darobin>
I mean I guess if you just want to use it to try out correctness and such anything that makes it more like a lib is a hassle

[09:04:59.0000] <annevk>
Yeah... Hmm, perhaps forking is better

[09:05:14.0000] <annevk>
It's also deployed here https://quuz.org/webvtt/

[09:05:26.0000] <annevk>
Kinda want to keep that working without lots of work

[09:05:44.0000] <darobin>
annevk: if I get to use it I'll make you a lightweight PR; if you like it take it, if it's too much hassle I'll just fork it

[09:11:04.0000] <annevk>
okido

[09:45:49.0000] <Domenic>
Can someone click this link in Safari and tell us what happens: http://software.hixie.ch/utilities/js/live-dom-viewer/?saved=4101

[09:48:38.0000] <yury`moz>
the same things as in Firefox

[09:50:11.0000] <yury`moz>
Domenic: and Chrome, anything in particular we shall look at?

[09:50:31.0000] <Domenic>
yury`moz: hmm I see different behavior in Chrome and Firefox

[09:50:39.0000] <Domenic>
yury`moz: sorry, I meant click the "test" link

[09:50:42.0000] <MikeSmith>
if you click on `test` you get 5 in firefox

[09:50:43.0000] <caitp>
`error: SyntaxError: Unexpected token ')' on line 1`

[09:51:01.0000] <MikeSmith>
yeah nothing in safari

[09:51:05.0000] <Domenic>
ohhh let's try not an arrow function, one sec

[09:51:25.0000] <yury`moz>
yeah, `error: SyntaxError: Unexpected token ')' on line 1` for 'test' click

[09:51:26.0000] <Domenic>
http://software.hixie.ch/utilities/js/live-dom-viewer/?saved=4103

[09:52:06.0000] <yury`moz>
no '5' now

[09:52:17.0000] <Domenic>
except in Firefox :)

[09:52:19.0000] <Domenic>
ok cool

[09:53:35.0000] <caitp>
is firefox correct in doing that? seems weird

[09:54:56.0000] <Domenic>
caitp: well the spec is ambiguous, which is what we're trying to fix

[09:55:23.0000] <Domenic>
caitp: so it seems like the interoperable behavior is "if the result is a string, use it as the response body". Whereas Firefox does ToString(result)

[09:55:59.0000] <caitp>
ah I see

[12:34:39.0000] <jsbell>
gsnedders: I'll be around SF first week of May.

[12:44:16.0000] <gsnedders>
jsbell: do you have any interest in meeting and/or think it'll be at all useful?

[12:47:48.0000] <jsbell>
gsnedders: interest, yes; I'm not sure there's much to learn other than "we need to make it work" but I'm sure there will be something to learn/share

[12:49:45.0000] <gsnedders>
jsbell: if you're in SF that really does make it easy, at least, and worst case we lose a small amount of time

[12:51:15.0000] <jsbell>
gsnedders: I am, and agree it seems worthwhile.

[13:13:36.0000] <TabAtkins>
Domenic, annevk: I'm doing some shuffling in how Bikeshed handles stylesheets - the styles that Bikeshed *expects* to exist so that it can render properly (like autolink and selflink styles) are now added automatically, rather than being expected to be embedded in the spec's stylesheet.  Since WHATWG specs handle these already via bikeshed.css, I'm adding

[13:13:36.0000] <TabAtkins>
some stuff to WHATWG's defaults.include to omit the extra stylesheets.

[13:13:39.0000] <TabAtkins>
Just a heads up.

[15:52:20.0000] <Domenic>
 TabAtkins: hmm could you pull request bikeshed.css to remove stuff instead?


2016-04-26
[17:42:19.0000] <jwalden>
is there a convenient site out there for doing cross-origin (and document.domain-joined origin) demonstration of behaviors?  or do I need to conjure up one of my own provision?

[17:42:30.0000] <TabAtkins>
Domenic: Sure, you've just expressed annoyance at the "inlining" Bikeshed does for some things, so I assumed you'd prefer the linking thing.

[17:43:03.0000] <jwalden>
something like http://software.hixie.ch/utilities/js/live-dom-viewer/ that lets me do testing on nested.software.hixie.ch as well, or so

[18:31:23.0000] <smaug____>
rbyers: are you perhaps writing wpt tests for eventlistener options stuff?

[18:31:45.0000] <smaug____>
or maybe there is even some patches waiting for review ?

[18:32:31.0000] <rbyers>
smaug: Yes, sorry I haven't done it yet - been on my list, just been swamped with other stuff :-(

[18:32:39.0000] <smaug____>
ok

[18:32:40.0000] <rbyers>
Are you working on the Gecko impl and need tests?

[18:32:50.0000] <smaug____>
baku is working on the impl

[18:32:53.0000] <smaug____>
right now

[18:33:12.0000] <smaug____>
well, has patch for the dictionary (no passive handling or anything, just the dictionary)

[18:33:22.0000] <smaug____>
and I was wondering if we already have good test coverage

[18:33:30.0000] <rbyers>
I've got management crap occupying my time until Thursday but could make it my top priority then.

[18:33:46.0000] <rbyers>
We've got blink tests of course, still working on our WPT pipeline/process to avoid the test duplication...

[18:34:14.0000] <rbyers>
(had a good f2f chat with jdm@ and other Moz folks in Toronto a week ago about this)

[18:34:55.0000] <smaug____>
I think I can ask him to write tests

[18:34:58.0000] <rbyers>
Our blink tests are here: https://code.google.com/p/chromium/codesearch#chromium/src/third_party/WebKit/LayoutTests/fast/events/eventlisteneroptions/&q=file:LayoutTests%20file:passive&sq=package:chromium&type=cs

[18:35:24.0000] <rbyers>
Oh right these are already testharness.js tests

[18:35:46.0000] <rbyers>
Perhaps all we need to do is upstream these

[18:36:00.0000] <rbyers>
dtapuska is about to land the change for the key, so they'll change then obviously

[18:36:35.0000] <smaug____>
that is about passive only I guess

[18:38:11.0000] <rbyers>
right

[18:40:24.0000] <rbyers>
looks like our tests have a few blinkisms in them, but shouldn't be hard to clean them up for WPT.  Maybe I can get to that sooner than Thursday - I'll do my best (I haven't landed anything in WPT yet myself - was actually looking forward to the forcing function to experience the review pain people are telling me about <grin>)

[19:05:05.0000] <jwalden>
/me rolls his own cross-domain testing scheme, in the absence of someone else setting up a nice live system

[19:16:27.0000] <Domenic>
TabAtkins: Oh, I see, I misunderstood. Now that I get it, either solution sounds reasonable to me.

[20:32:05.0000] <Domenic>
'

[21:47:15.0000] <annevk>
smaug____: rbyers: thoughts on https://github.com/whatwg/dom/issues/215?

[21:47:45.0000] <annevk>
smaug____: rbyers: delegation proposal seems quite nice, though making it fast might require bring some CSS selector tricks over to DOM

[21:48:29.0000] <annevk>
rbyers: I guess I should ping the other folks you mentioned instead, will do that

[21:50:14.0000] <smaug____>
performance is rather critical with event dispatch

[21:50:48.0000] <smaug____>
but I'll try to look at that a bit later, like on Thursday. rather busy right now

[21:51:39.0000] <smaug____>
I couldn't understand the last comment in that bug though

[21:51:50.0000] <smaug____>
what (1) and (2) refer to

[21:53:18.0000] <annevk>
smaug____: to my comment earlier, https://github.com/whatwg/dom/issues/215#issuecomment-213980467

[21:53:36.0000] <annevk>
smaug____: lists two strategies for implementing delegation, but one is rather suboptimal it turns out

[21:54:19.0000] <annevk>
smaug____: agreed that it's important, I guess the question is if it's better that the browser does it or have libraries emulate it all over in JavaScript, since that's what's happening now

[21:54:34.0000] <annevk>
smaug____: happy to wait until Thursday day, there's no rush

[21:56:00.0000] <smaug____>
I don't understand what delegate: "foo" means

[21:57:25.0000] <annevk>
smaug____: "foo" is a selector

[21:57:55.0000] <smaug____>
and it selects what

[21:58:03.0000] <smaug____>
descendants ?

[21:58:08.0000] <annevk>
smaug____: yeah

[21:58:23.0000] <annevk>
smaug____: it's as if you registered the listener on descendants

[21:59:03.0000] <annevk>
smaug____: so you don't have to worry about elements getting inserted and removed

[21:59:22.0000] <smaug____>
I see

[22:00:01.0000] <smaug____>
I wonder... whether that should be delegation or some kind of automatic registration. I guess it is the latter, if it means "as if you registered the listener on descendants"

[22:01:41.0000] <annevk>
smaug____: then you'd also have to automatically deregister

[22:02:46.0000] <annevk>
smaug____: perhaps engines could implement it either way, not sure

[22:03:50.0000] <smaug____>
a question is when to run the selector

[22:07:49.0000] <annevk>
smaug____: yeah, I was thinking during dispatch

[22:08:53.0000] <annevk>
smaug____: I guess at the start of dispatch would be most consistent, but that would require going through the parent chain twice

[22:09:19.0000] <annevk>
smaug____: but the alternative might require going through the parent chain many more times

[22:10:36.0000] <smaug____>
gecko goes through the chain...hmm, 3 times. First creating the chain, then dispatch in default group (normal DOM dispatch) and then system group (for certain default handling and so)

[22:10:44.0000] <smaug____>
that iteration isn't slow

[22:11:07.0000] <smaug____>
but doing any specific operation on entries in the chain might slow things down quite a bit

[22:11:21.0000] <smaug____>
would need to think about how to optimize this all

[22:11:52.0000] <smaug____>
but I'm too jetlagged now to think about optimizations :)

[22:12:44.0000] <annevk>
smaug____: as I said, there's no rush, but it's appreciated 😊

[01:20:42.0000] <zcorpan>
"Thanks for getting in touch. We've added your idea of supporting fixup option in the squash and merge feature to our internal Feature Request List so the team can see it. It might be something we support in the future, but we can't promise when it will happen."

[01:28:08.0000] <smaug____>
rbyers: ok, since you have the tests in wpt form (or some similar) already, we decided to wait for you to upload those

[02:32:26.0000] <annevk>
MikeSmith: 日本語 is Japanese in Japanese, right?

[02:54:44.0000] <annevk>
MikeSmith: I went with that for now, believing Wikipedia...

[04:44:37.0000] <MikeSmith>
annevk: yeah

[04:49:33.0000] <annevk>
I added a commit to the navigate-editorial branch but it's not showing up in the PR...

[05:12:24.0000] <MikeSmith>
/me looks at that branch

[05:12:56.0000] <MikeSmith>
annevk: “more browsingContext”?

[05:13:10.0000] <annevk>
MikeSmith: yeah

[05:13:36.0000] <annevk>
Seems to be resolved now

[05:13:42.0000] <MikeSmith>
hai

[05:13:43.0000] <annevk>
Maybe I was hitting some cache issues

[05:19:36.0000] <MikeSmith>
annevk: given https://github.com/w3c/webappsec-subresource-integrity/issues/31#issuecomment-214691579 maybe I will try to make PR myself for upstreaming the integrity attribute

[05:20:23.0000] <annevk>
MikeSmith: cool, mkwst can probably help review

[05:20:43.0000] <MikeSmith>
yeah

[06:24:27.0000] <JonathanNeal>
I’ve been working on a flexibility polyfill, and I have most of the calculations complete, but I’m unsure when/how I’m supposed to calculate flex within flex. Here is an example of flex rendered via JS https://rawgit.com/10up/flexibility/release/2.0.0/test.row.html

[06:25:51.0000] <JonathanNeal>
I’m a little unsure of what order I am supposed to run align-content, align-items, and when I should begin calculating flex within flex. Should flex within flex trigger a re-calc of the parent, or should I optimize the order to avoid this? Anyone know?

[06:29:16.0000] <JonathanNeal>
And here’s the control / native flexbox example https://rawgit.com/10up/flexibility/release/2.0.0/test.row.control.html

[07:04:24.0000] <miketaylr>
hober++ (re https://webkit.org/blog/6131/updating-our-prefixing-policy/)

[07:04:27.0000] <miketaylr>
et al

[07:22:03.0000] <Ms2ger>
About fucking time

[07:27:01.0000] <MikeSmith>
hober: Ms2ger is suggesting you edit your blog post to change the title to his suggestion just above

[07:30:22.0000] <jgraham>
Maybe he's angling for a job as head of PR at W3C

[07:32:06.0000] <mounir>
jgraham: I'm pretty sure Ms2ger would be able to disrupt the PR business :)

[08:03:44.0000] <wanderview>
does it make sense to queue a microtask to update an attribute on a DOM object exposed in a worker thread?  that seems strange to me

[08:12:01.0000] <annevk>
wanderview: it doesn't not make sense, but it's not really typical either

[08:12:26.0000] <wanderview>
I think we can just use queue a task here... I asked him to change it

[08:24:28.0000] <hober>
MikeSmith miketaylr Ms2ger: :)

[08:25:21.0000] <Ms2ger>
hober, if you're bored at Apple, I'd be happy to write some copy ;)

[08:30:11.0000] <miketaylr>
:)~

[09:05:18.0000] <annevk>
Domenic: I'm going to refactor document.open() and window.open()

[09:05:37.0000] <annevk>
Domenic: I'm thinking of "document open steps" and "window open steps"

[09:05:50.0000] <annevk>
Domenic: let me know if you have any concerns

[09:08:19.0000] <Domenic>
annevk: sounds reasonable. One thing I'd kind of like to fix is how document.open()s window-ish overload is in "mutations" or something in the IDL block and section structure.

[09:09:27.0000] <annevk>
Domenic: yeah, I was hoping that early in document.open() we could dispatch to either "document open steps" or "window open steps" based on the arguments

[09:10:23.0000] <Domenic>
I guess that could work. I was thinking of just moving the overload's dfn to a new section.

[09:11:48.0000] <annevk>
Yeah, maybe hmm

[09:12:21.0000] <annevk>
My main issue is all these algorithms invoking open() directly

[09:12:44.0000] <TabAtkins>
JonathanNeal: This should all be clear from the flex layout algorithm in the spec.

[09:33:37.0000] <annevk>
Domenic: created a branch document-open-steps with some WIP

[10:34:04.0000] <JonathanNeal>
TabAtkins: thanks, I’m still looking. Is this the right spot to be looking? https://www.w3.org/TR/css-flexbox-1/

[10:35:00.0000] <gsnedders>
JonathanNeal: you probably want the editor's draft, see link at the top

[10:35:10.0000] <JonathanNeal>
Will do https://drafts.csswg.org/css-flexbox/#box-model

[10:36:26.0000] <Domenic>
Remember, /TR/ stands for trash.

[10:39:29.0000] <JonathanNeal>
/me mumbles “technical report”...

[10:39:53.0000] <TabAtkins>
JonathanNeal: https://drafts.csswg.org/css-flexbox/#layout-algorithm to be specific

[10:40:15.0000] <TabAtkins>
Reading the rest of the spec helps you understand how to *use* Flexbox, but only the layout algo will actually tell you how it works.

[10:41:18.0000] <JonathanNeal>
Wonderful. I’m very close. I just got stuck once I needed to implement flex within flex.

[10:43:20.0000] <TabAtkins>
Important bit is to find the parts where the flex container tells the children to layout into some space.  Layout is very hierarchical - you find available space in the parent, then lay out children into that space, then the parent positions them and finds out its full dimensions, and reports back to *its* parent that its layout is done.

[10:43:52.0000] <TabAtkins>
A quick tree-descent into the leaves, then a reverse walk back up finishing everything.

[10:44:53.0000] <JonathanNeal>
Yeap, it’s how much “lay out children into that space” I need to do before decending into the children for the same deal.

[10:45:37.0000] <TabAtkins>
And the layout algo should explain that in detail. ^_^

[10:45:48.0000] <JonathanNeal>
I am looking. I would imagine it’s something like 9 to 9.4.

[10:47:54.0000] <TabAtkins>
Hmmmmmm, the step numbering got broken and no longer continues thru the sections. >_<

[10:49:44.0000] <JonathanNeal>
If a flex item is also flex, then I need to know that item’s main and cross size before laying out its children.

[11:40:23.0000] <Domenic>
TabAtkins: ping on speccing https://github.com/w3c/webcomponents/issues/468 for me :)

[11:40:38.0000] <TabAtkins>
Yup, was thinking about that when I saw the bug activity today. ^_^

[11:40:47.0000] <TabAtkins>
What form do you want that in, actually?

[11:41:20.0000] <TabAtkins>
oh never mind, you actuall provided that

[11:41:27.0000] <TabAtkins>
i'll slip it into scoping

[11:41:30.0000] <Domenic>
\o/

[11:41:48.0000] <Domenic>
Open to suggestions if you think my "creates a custom user-agent stylesheet" idea could use some tweaking

[11:42:26.0000] <Domenic>
I want it to be window scoped since custom element registries are, but not sure if that fits with CSS infrastructure

[11:42:53.0000] <Domenic>
"element's node document's window" is I guess how you get from element -> window

[11:44:16.0000] <Domenic>
annevk: what is "the default origin"?

[11:44:32.0000] <annevk>
Domenic: dunno

[11:44:55.0000] <Domenic>
annevk: from your post in https://github.com/whatwg/html/pull/1122#issuecomment-214757427

[11:48:18.0000] <annevk>
Domenic: ooh, the origin for fetching when none is specified is from the client

[11:48:36.0000] <Domenic>
hmm

[11:53:11.0000] <Mek>
but yeah, it definitely seems something is broken in the workers/fetch/csp3 integration. Where the child-src CSP policies of the document/worker creating a worker should possibly block creating the worker but the way it is currently specced in csp3 we would end up using the CSP policies from the worker itself (which don't even exist yet before the worker is fetched)

[14:49:02.0000] <miketaylr>
TabAtkins: yo, what's the magic way to make <<color>> autolinks point to css-color-4 in bikeshed?

[14:49:10.0000] <miketaylr>
link-defaults doesn't seem to like "spec:css-color-4; type:value; text:color"


2016-04-27
[19:29:44.0000] <rniwa>
kochi: yt?

[20:12:42.0000] <TabAtkins>
miketaylr: Currently I have a manual default setting <color> to css-color-3

[20:12:54.0000] <TabAtkins>
You can override it, but it's a "type" type, not a "value" type.

[22:11:52.0000] <rniwa>
hayato: yt?

[22:17:39.0000] <rniwa>
Domenic: yt?

[00:20:04.0000] <Ms2ger>
Huh: https://lists.w3.org/Archives/Public/public-webapps/2016AprJun/0068.html

[00:29:51.0000] <annevk>
Ms2ger: I don't even think Domenic really knows what that entails since de-upstreaming is obviously not a thing that's going to happen

[01:35:54.0000] <annevk>
Should we revisit <cite>'s bit about not being able to be used for persons? I saw some chatter on Twitter and it seems nobody really cares for that restriction

[01:36:17.0000] <annevk>
The only shame there would be losing the rather fun remark surrounding it

[01:39:54.0000] <hsivonen>
/me still thinks the aliases of <i> just fuel arguments, but if we are arguing, <cite> should map to the "title of work" concept in the Chicago Manual of Style

[01:43:35.0000] <annevk>
Yeah, I guess I don't care strongly enough to take action here, it's all rather arbitrary anyway

[02:42:51.0000] <smaug____>
annevk: remind me, why do URLs use USVStrings?

[02:43:58.0000] <annevk>
smaug____: so that the URL parser can operate on scalar values rather than code points

[02:45:06.0000] <smaug____>
ehsan: ^

[02:45:12.0000] <nox>
annevk: You sure the things in DOMString are called code points, btw?

[02:45:21.0000] <annevk>
smaug____: this is interesting when writing new subsystems in languages that are build around the scalar value notion, such as Rust

[02:45:47.0000] <nox>
Because scalar values are code points, and other 16-bits values that aren't scalar values are UTF-16 code units. Not code points.

[02:46:17.0000] <ehsan>
annevk: so I guess you can't have non-plane-1 characters in URLs?

[02:46:30.0000] <annevk>
ehsan: yes you can

[02:46:40.0000] <ehsan>
annevk: and those can be encoded in USVStrings?

[02:46:56.0000] <annevk>
ehsan: yes

[02:47:00.0000] <ehsan>
huh

[02:47:01.0000] <nox>
ehsan: USVString == Unicode string, conceptually.

[02:47:06.0000] <nox>
ehsan: DOMString is more than Unicode.

[02:47:13.0000] <ehsan>
so I guess I don't understand USVStrings after all

[02:47:29.0000] <annevk>
nox: non-scalar values are code points, e.g., surrogate values

[02:47:33.0000] <ehsan>
nox: what's the difference in plain english? :)

[02:47:33.0000] <nox>
ehsan: DOMString can contain lone surrogates.

[02:47:40.0000] <ehsan>
oh

[02:47:45.0000] <ehsan>
I had it backwards!

[02:47:49.0000] <nox>
annevk: I think you got that wrong but I wouldn't bet.

[02:47:57.0000] <annevk>
nox: I would

[02:48:33.0000] <annevk>
nox: though it's true that a DOMString isn't normally described as having code points

[02:48:40.0000] <nox>
annevk: And you would have won money indeed.

[02:49:14.0000] <nox>
annevk: So confusing. :)

[02:49:20.0000] <annevk>
quite

[02:49:30.0000] <annevk>
ehsan: so yeah, USVString is DOMString without lone surrogates

[02:49:32.0000] <ehsan>
glad I'm not the only one totally confused by this

[02:49:47.0000] <ehsan>
annevk: yeah everything makes sense now

[02:50:18.0000] <annevk>
ehsan: bit early no for such a topic? :-p

[02:51:09.0000] <ehsan>
annevk: I'm in Taipei, so just about the right time :P

[02:51:20.0000] <annevk>
aaah

[02:51:23.0000] <ehsan>
only thing missing from the scene is a glass of scotch ;)

[06:36:50.0000] <annevk>
The problem with refactoring HTML to account for shadow trees is that you then feel like you have to fix all the issues you notice along the way too

[06:37:23.0000] <annevk>
It's a positive, I suppose, but it's also a lot of work

[06:56:06.0000] <smaug____>
there is really no needinfo? or similar in github?

[06:57:33.0000] <smaug____>
I'm sure I'm not answering to many questions because I just forget them as soon as I've read the email github sends

[06:58:16.0000] <smaug____>
(in other words, could we move back to using w3c bugzilla ;) )

[07:01:05.0000] <annevk>
smaug____: there's not, you can use https://github.com/notifications

[07:01:40.0000] <annevk>
smaug____: there's also https://github.com/issues/mentioned

[07:03:56.0000] <smaug____>
but those contain too many bugs

[07:04:31.0000] <smaug____>
would need to go through them all and see if there is something to comment

[07:18:53.0000] <annevk>
I do see how needinfo can be useful, if I really need to get someone's feedback I just ping them a few times in different places...

[07:18:55.0000] <annevk>
Not ideal

[07:54:02.0000] <miketaylr>
TabAtkins: ah cool, wrong type thx

[09:11:21.0000] <annevk>
/me stumbles upon https://github.com/testomato/minicrawler

[09:11:32.0000] <annevk>
"single-threaded multi-socket web client and WHATWG URL compliant library written in C"

[09:12:58.0000] <miketaylr>
that's cool.

[09:13:03.0000] <annevk>
smaug____: created several more shadow tree PRs btw: https://github.com/whatwg/html/pulls (not all of them have issues)

[09:28:42.0000] <Domenic>
so many PRs to review

[09:30:42.0000] <JoWie>
mine is simplest :p

[09:34:27.0000] <annevk>
JoWie: false, but I'll allow it

[10:17:33.0000] <JoWie>
hehe

[14:06:54.0000] <TabAtkins>
Domenic: Rereading Streams, I get the feeling that it's specialized heavily on binary data, and wouldn't be the best fit for the "promise, but the value can be updated" or "ping whenever an event happens" use-cases.  Am I wrong?

[14:07:48.0000] <Domenic>
TabAtkins: I would say it's specialized for I/O, but not necessarily binary I/O. But yes, probably not the best fit for those use cases, unless e.g. the event is a flood of new data from the webcam or something.

[14:09:06.0000] <TabAtkins>
Right.  I'm thinking about cases like piping a mousemove event into an Observable, so you have a constant "current mouse position" object that you can listen to updates on.

[14:09:36.0000] <TabAtkins>
(Context is Alex wondering if Streams and Observables have a sub/superset relationship that needs to be reflected in their design.)

[14:11:38.0000] <Domenic>
No, this is covered in the streams FAQ....

[14:11:53.0000] <Domenic>
https://github.com/whatwg/streams/blob/master/FAQ.md#how-do-readable-streams-relate-to-observables-or-eventtarget

[14:15:37.0000] <TabAtkins>
That's not in the spec, and is thus invisible. ^_^


2016-04-28
[21:11:45.0000] <Domenic>
annevk: hayato: what is the criteria for an event being scoped or not? It seems like we are trying to make everything scoped these days?

[21:12:56.0000] <hayato>
I think we have judged case by case so far.

[21:25:39.0000] <Domenic>
I guess I am wondering if there will ever be a case when you say "this should not be scoped"

[21:40:00.0000] <smaug____>
mousemove

[21:45:39.0000] <smaug____>
I've rarely seen as horrible API as what blink filesystem API is :/

[22:16:50.0000] <annevk>
TabAtkins: that is how I think about explainers too

[22:17:53.0000] <annevk>
Domenic: mouse and pointer events in general make sense to leak

[22:18:04.0000] <annevk>
Domenic: focus too

[22:18:44.0000] <annevk>
Domenic: events specific to the implementation of a component make less if no sense

[22:18:59.0000] <annevk>
Domenic: so yeah, case-by-case

[00:16:48.0000] <annevk>
hayato: it seems deepPath() excludes non-nodes?

[00:16:56.0000] <annevk>
hayato: from a cursory reading of https://w3c.github.io/webcomponents/spec/shadow/#widl-Event-deepPath-sequence-EventTarget anyway

[00:17:08.0000] <annevk>
hayato: if that's the case, I think that's wrong, deepPath() should work for IndexedDB

[00:18:14.0000] <hayato>
My intention is includes non-nodes.

[00:18:21.0000] <hayato>
Let me check

[00:18:23.0000] <annevk>
Okay

[00:19:10.0000] <annevk>
Maybe 4.3 handles it

[00:20:01.0000] <hayato>
Yeah, right.

[00:21:34.0000] <annevk>
hayato: thank you

[00:39:01.0000] <zcorpan>
the <!--TOPIC:foo--> comments are not used for anything, are they+

[00:39:55.0000] <annevk>
nope

[00:40:12.0000] <annevk>
I sometimes remove one if it's near something I change

[05:44:49.0000] <annevk>
smaug____: https://github.com/whatwg/html/issues/1127 is waiting for input from you

[05:47:37.0000] <smaug____>
annevk: sorry, been busy with reviews and random stuff here in Taipei

[05:50:00.0000] <annevk>
fair, I guess there's no rush for that one or others

[05:50:45.0000] <annevk>
smaug____: take your time there and pick up all the standards nonsense sometime after you're back

[05:50:57.0000] <smaug____>
I'll be back next week

[05:51:13.0000] <smaug____>
in Finland

[05:51:13.0000] <annevk>
I was hoping that was the case

[05:52:12.0000] <smaug____>
I wish github will manage to tell me where all my nick has been mentioned recently

[05:54:41.0000] <nox>
smaug____: https://github.com/issues/mentioned, kind of.

[05:54:54.0000] <smaug____>
yup, got link to that yesterday

[05:55:13.0000] <nox>
You can also remove "is:issue" from the search box.

[05:55:14.0000] <smaug____>
/me still thinks github should have something similar to needinfo

[05:55:17.0000] <nox>
That will show issues and PRs.

[07:32:13.0000] <JonathanNeal>
Have there been suggestions for a better way to hide content visually while preserving it for screen readers? Right now, the best method tends to involve `clip: rect(0, 0, 0, 0); position: absolute;`. Are there other suggested syntaxes (for the future), like `visibility: visually-hidden` or something?

[07:34:37.0000] <MikeSmith>
/me smaug____ as a workaround for needinfo, the thing that people do is to assign the issue the person you need info from

[07:36:45.0000] <Ms2ger>
With the issue that github doesn't let you assign just anybody

[07:37:31.0000] <annevk>
And you might need info from several folks

[07:37:53.0000] <annevk>
I agree that needsinfo is quite a useful Bugzilla invention that should be ported

[07:40:07.0000] <MikeSmith>
yes

[07:46:48.0000] <miketaylr>
smaug____: we were thinking of abusing labels in the webcompat/web-bugs repo as a proxy for needinfo

[07:47:24.0000] <miketaylr>
(but that doesn't nag you via email every day, so you still gotta remember to check all issues for a needinfo_miketaylr label, or similar)

[07:56:33.0000] <smaug____>
I think it is fine to check requested needinfos

[07:56:45.0000] <smaug____>
that is what I do with bugzilla requests too

[11:26:05.0000] <TabAtkins>
annevk: Just checking - those 8 linking errors in DOM (all to various *Event interfaces) are intentional, right?

[11:34:03.0000] <Domenic>
TabAtkins: yeah they are

[11:50:50.0000] <JonathanNeal>
Where might I find the blink user agent stylesheet? I would think this one only applies to Safari now? http://trac.webkit.org/browser/trunk/Source/WebCore/css/html.css

[11:56:45.0000] <Domenic>
In the Blink source code, not the Safari source code ;)

[11:57:30.0000] <Domenic>
https://code.google.com/p/chromium/codesearch#chromium/src/third_party/WebKit/Source/core/css/html.css

[12:01:36.0000] <JonathanNeal>
Thanks, Domenic. It is actually quite hard to find them these days via web search.

[12:04:04.0000] <JonathanNeal>
Does Edge put theirs out?

[12:06:56.0000] <JonathanNeal>
And for Firefox, I keep finding old links.  http://mxr.mozilla.org/mozilla-central/source/layout/style/html.css

[12:08:39.0000] <JonathanNeal>
Similarly. All the links I find seem out of date. https://github.com/mozilla/gecko-dev/blob/master/layout/style/html.css

[12:14:39.0000] <Domenic>
Why do you think the mozilla-central one is out of date?

[12:14:51.0000] <Domenic>
oh, because it 404s

[12:15:17.0000] <Domenic>
but you can just search for html.css in mozilla-central and find https://mxr.mozilla.org/mozilla-central/source/layout/style/res/html.css

[12:21:36.0000] <JonathanNeal>
Domenic: Honest, I searched. I couldn’t find it. Thanks! Do you know if Edge makes theirs available?

[12:21:52.0000] <Domenic>
JonathanNeal: Edge is not open source, so no, they do not.

[12:57:51.0000] <Grumpy>
I'm attempting to create a notification with the NotificationAPI (With javascript on a php platform, for desktop), but my icon isn't showing up. Does it have to be a specific size?


2016-04-29
[18:14:40.0000] <smaug____>
rbyers: ping

[19:12:36.0000] <rbyers>
smaug____: yes?

[19:32:42.0000] <smaug____>
rbyers: it was about fullscreen API

[19:33:01.0000] <smaug____>
I guess xidorn will send some information about the issues in unprefixing

[19:33:29.0000] <smaug____>
rbyers: are you perhaps aware of the situation at all? and do you know if blink was willing to try to unprefix?

[19:33:52.0000] <smaug____>
(it would help a ton if most of the browser vendors unprefixed around the same time)

[19:34:48.0000] <rbyers>
We want to yes, but there are some nasty problems to fix first.  It's on our layout team's list but may not happen anytime soon unfortunately.

[19:35:12.0000] <rbyers>
I'm trying to see if I can get it funded from just the interoperability perspective too, so I'm hopeful.

[19:35:22.0000] <rbyers>
Edge also wants us to do it...

[19:39:38.0000] <smaug____>
rbyers: yes, this is related to the Edge stuff

[19:43:43.0000] <smaug____>
annevk: has there been more talk about hiding APIs in certain contexts

[22:52:02.0000] <annevk>
smaug____: only secure contexts

[22:52:46.0000] <annevk>
smaug____: seems like that is still the plan

[22:55:20.0000] <smaug____>
annevk: this came up in a discussion about Presentation API which should be somehow disabled (not defined how in the spec) in sandboxed iframes by default

[22:56:26.0000] <smaug____>
and the question was whether to hide the API or make getters to return null and some ctors to throw

[22:56:45.0000] <smaug____>
(restarting)

[23:03:37.0000] <annevk>
smaug____: hmm

[23:03:56.0000] <annevk>
smaug____: typically we use sandboxing for that

[23:04:08.0000] <smaug____>
for what?

[23:04:12.0000] <annevk>
smaug____: or what fullscreen uses

[23:04:37.0000] <annevk>
smaug____: disabling things in certain browsing contexts

[23:04:56.0000] <smaug____>
annevk: sure, that is what Presentation API does

[23:05:05.0000] <smaug____>
the question is how to disable features

[23:05:32.0000] <annevk>
smaug____: throw I suppose

[23:05:33.0000] <smaug____>
like, hiding the API in the sandboxed iframe or making the getters return null or throwing or making methods no-ops or what

[23:05:45.0000] <smaug____>
so, no hiding in this case I guess

[23:06:11.0000] <smaug____>
yeah, for now the plan is to make the getter return null and a ctor to throw

[23:06:11.0000] <annevk>
smaug____: yeah, seems like something we might provide optin for too

[01:13:06.0000] <MikeSmith>
the editors of the Payment Request API have been recently getting issues resolved that were blocking implementors

[01:13:39.0000] <MikeSmith>
so the spec is moving along well and I encourage anybody and everybody here to please scrutinize it

[01:13:43.0000] <MikeSmith>
https://w3c.github.io/browser-payment-api/specs/paymentrequest.html

[01:14:41.0000] <MikeSmith>
and if you find problems, please file issues https://github.com/w3c/browser-payment-api/issues

[01:18:20.0000] <annevk>
Anyone have 5min to review a blog post for me?

[01:19:14.0000] <MikeSmith>
annevk: I can

[01:19:42.0000] <MikeSmith>
as long as it’s not something too esoteric

[01:20:11.0000] <annevk>
maybe a little bit esoteric

[01:20:25.0000] <annevk>
definitely considering the entire world population

[01:25:52.0000] <MikeSmith>
heh, well by the definition everything we do here is very esoteric

[05:16:09.0000] <annevk>
So components for HTML has been dabbled around for nearly two decades

[05:18:30.0000] <MikeSmith>
annevk: yeah?

[05:18:53.0000] <annevk>
MikeSmith: https://www.w3.org/TR/NOTE-HTMLComponents is from 98

[05:19:22.0000] <annevk>
MikeSmith: I'm feeling inspired to write another short blog post, since I can't quite concentrate on editing standards today

[05:24:32.0000] <MikeSmith>
if you write it I will be happy to review it

[05:29:07.0000] <MikeSmith>
annevk: I wonder if https://www.w3.org/TR/NOTE-HTMLComponents was based on the IE “Behaviors” thing, or whether it predates that

[05:31:48.0000] <MikeSmith>
/me finds https://msdn.microsoft.com/en-us/library/ms532146(v=vs.85).aspx

[05:32:06.0000] <MikeSmith>
“Using HTML Components to Implement DHTML Behaviors in Script”

[06:41:01.0000] <MikeSmith>
.win 33

[06:41:04.0000] <MikeSmith>
oofs

[06:44:19.0000] <annevk>
So if I want a better mobile experience for my site, I need to use <meta content="width=device-width, initial-scale=1, shrink-to-fit=no" name=viewport> to this day?

[06:44:22.0000] <annevk>
This is so sad

[06:45:13.0000] <Ms2ger>
Very

[06:49:30.0000] <MikeSmith>
I think it is not just “to this day” but instead we are now stuck with it forever

[06:50:47.0000] <caitp>
surely there's a betterw ay

[06:53:45.0000] <MikeSmith>
there was before Apple unilaterally minted that

[06:53:50.0000] <MikeSmith>
but too late now

[06:56:08.0000] <annevk>
Also, designing for mobile is hard, I kinda want the <h1> to become part of the <nav> but ...

[06:56:31.0000] <annevk>
I guess this is what you deserve when you've been neglecting CSS for a while

[07:17:21.0000] <zcorpan>
MikeSmith: https://github.com/validator/validator/pull/286

[07:17:55.0000] <MikeSmith>
zcorpan: yup, thanks, will try to get that changed this weekend

[07:18:40.0000] <zcorpan>
MikeSmith: cool, no rush, just thought i'd drop it here in case you were flooded with github notifications :-)

[07:21:51.0000] <MikeSmith>
well I am always flooded with github notifications so yeah I appreciate it

[07:54:07.0000] <wanderview>
Domenic: would you be ok if I changed some "let" variables in for of loops to "var"s in the stream tests?  its not actually something that works well in firefox now and prevents me from really running the tests to work on streams

[07:54:12.0000] <wanderview>
https://bugzilla.mozilla.org/show_bug.cgi?id=1268812

[07:54:22.0000] <wanderview>
obviously we need to fix that, but it seems its not the focus of these tests

[08:03:03.0000] <Ms2ger>
wanderview, since they're in wpt now, I'm going to claim I can r+ that, so go for it :)

[08:03:37.0000] <wanderview>
Ms2ger: I'm going to wait a bit since its not blocking me quite yet... but will probably do it in next couple weeks

[08:03:52.0000] <wanderview>
just wanted to get Domenic's opinion since its not a pressing issue yet

[08:04:28.0000] <wanderview>
thats assuming people don't bring me more service worker bustage :-(

[09:05:50.0000] <Domenic>
wanderview: sure, I guess. Sad that even in nightly you guys are behind on fairly basic ES6 stuff... Just be sure it doesn't change the semantics, as changing let to var often does, especially in loops with closures.

[09:06:24.0000] <Ms2ger>
Turns out `let` is hard

[09:06:36.0000] <Ms2ger>
Even harder if you had it before it was cool, and then it changed

[09:10:59.0000] <annevk>
So I tried to use this name=viewport thing and added a stylesheet, but it still looks bogus in Safari

[09:11:41.0000] <Domenic>
annevk: cross origin objects blog post!

[09:11:56.0000] <annevk>
yeah should do that

[09:12:13.0000] <Domenic>
let's keep a good cadence on blog.whatwg.org

[09:12:15.0000] <annevk>
Desktop Safari is fine though meeh

[09:22:37.0000] <caitp>
in your view, 10 years from now, is web development going to be more streamlined than it is now

[09:22:57.0000] <caitp>
or is it going to be even more of a mess

[09:25:33.0000] <annevk>
Firefox for iOS renders something I expect, Safari for iOS does not...

[09:27:41.0000] <MikeSmith>
botie, inform zcorpan label[form] change pushed to https://checker.html5.org/ with some additional fixups https://github.com/validator/validator/commit/4bdaa25fb95ed23b2fbcf97b79207db7afbc6303

[09:28:02.0000] <nox>
annevk: That sounds wonderful.

[09:28:34.0000] <annevk>
nox: you'd think that after 9 years of iPhone this would be easy

[09:29:11.0000] <nox>
Especially with them using the same engine, right?

[09:30:10.0000] <annevk>
nox: I guess WebView is a bit different from Safari here

[09:30:35.0000] <annevk>
UIWebView?

[09:31:30.0000] <annevk>
Also, there's a weird horizontal scrollbar

[09:33:02.0000] <caitp>
you know if you asked about it on twitter someone would tell you in a short timespan exactly how to fix it

[09:33:36.0000] <caitp>
...maybe

[09:35:17.0000] <annevk>
Yeah, last resort

[09:38:44.0000] <annevk>
Okay, so Safari is affected by overflow somehow

[09:38:54.0000] <annevk>
If you have overflow, it'll rescale the page

[09:38:58.0000] <annevk>
UIWebView does not do this

[09:39:54.0000] <MikeSmith>
botie, inform zcorpan label[form] change pushed to https://checker.html5.org/ with some additional fixups https://github.com/validator/validator/commit/4bdaa25fb95ed23b2fbcf97b79207db7afbc6303

[09:39:54.0000] <botie>
will do

[09:43:15.0000] <annevk>
caitp: https://twitter.com/annevk/status/726089939725766656 answer away 😃

[09:43:37.0000] <caitp>
I said someone would, I didn't say I had a clue about it :x

[09:44:39.0000] <annevk>
caitp: as for your question earlier, I have no idea

[09:44:58.0000] <annevk>
caitp: I tend to think it gets better over time, but the transitional period of new technology is always painful

[09:46:24.0000] <Domenic>
annevk: there's some flag for this, hold on...

[09:46:40.0000] <Domenic>
annevk: <meta content="width=device-width, initial-scale=1, shrink-to-fit=no" name="viewport">

[09:46:47.0000] <Domenic>
shrink-to-fit=no being the key I think

[09:46:51.0000] <annevk>
Domenic: my site uses that

[09:49:42.0000] <annevk>
Oooh maybe something got incorrectly cached, it seems to work now

[09:53:04.0000] <caitp>
it seems like the transitional period for new tech never really ends, though

[09:54:35.0000] <annevk>
Maybe, but there's lots of features that are more than usable without requiring hacks

[10:07:49.0000] <Domenic>
let's see how it looks on Firefox Android

[10:08:18.0000] <Domenic>
Isn't it time to update the "URLs suck" though

[10:08:30.0000] <Domenic>
hmm ok kind of works on mobile

[10:08:36.0000] <Domenic>
the sidebar should really be hidden ideally

[10:08:41.0000] <Domenic>
or turned into a footer

[10:08:50.0000] <Domenic>
but, write a cross origin objects blog post instead of tweaking your CSS :P

[10:10:00.0000] <Domenic>
https://usercontent.irccloud-cdn.com/file/hsMjGda9/Screenshot_20160429-131111.png

[10:11:29.0000] <Domenic>
woah it looks great on chrome mobile

[10:11:47.0000] <Domenic>
except if you scroll left there's a lot of purple for no clear reason

[10:25:42.0000] <annevk>
Domenic: isn't the sidebar hidden on mobile?

[10:25:51.0000] <Domenic>
annevk: not in Firefox, yes in Chrome

[10:26:01.0000] <Domenic>
probably worth filing a bug on Firefox

[10:26:12.0000] <annevk>
Domenic: I wonder why all these browsers work differently

[10:26:27.0000] <annevk>
Domenic: the lots of purple is because of an overflowing <pre>

[10:27:04.0000] <annevk>
Maybe Firefox has the CSS cached?

[10:27:15.0000] <wanderview>
Domenic: the sidebar on anne's site is hidden on my firefox for android...

[10:27:26.0000] <Domenic>
Hmmmm

[10:27:41.0000] <Domenic>
Is there a force reload on mobile FF?

[10:27:53.0000] <Domenic>
Ah yep!

[10:27:56.0000] <Domenic>
Good now

[10:28:15.0000] <Domenic>
You just have to actually reload instead of just pressing enter on the URL bar again

[10:29:19.0000] <annevk>
Thanks for checking on Android 😃

[10:33:41.0000] <botie>
zcorpan, at 2016-04-29 16:41 UTC, MikeSmith said: label[form] change pushed to https://checker.html5.org/ with some additional fixups https://github.com/validator/validator/commit/4bdaa25fb95ed23b2fbcf97b79207db7afbc6303

[10:34:16.0000] <MikeSmith>
zcorpan: thanks for the PR!

[15:27:27.0000] <rniwa>
annevk: yt?


2016-04-30
[08:21:48.0000] <annevk>
mkwst: when you get back to the office: https://github.com/whatwg/html/pull/1128

