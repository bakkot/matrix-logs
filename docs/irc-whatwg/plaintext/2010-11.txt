2010-11-01
[01:07:00.0000] <othermaciej>
hi folks

[01:13:00.0000] <annevk>
VPN works

[01:13:01.0000] <annevk>
after a while

[01:13:02.0000] <annevk>
not bad

[06:27:00.0000] <foolip>
is anyone in here at TPAC? Hixie?

[06:28:00.0000] <Ms2ger>
/me suspects at least kennyluck, othermaciej and homata_ 

[06:30:00.0000] <othermaciej>
I am

[06:31:00.0000] <Moo^_^>
TPAC?

[06:33:00.0000] <karlcow>
W3C Technical Plenary - Advisory Committee

[06:33:01.0000] <karlcow>
Moo^_^: http://www.w3.org/2010/11/TPAC/

[06:33:02.0000] <karlcow>
also http://search.twitter.com/search?q=%23tpac

[06:42:00.0000] <Moo^_^>
karlcow: thx

[06:56:00.0000] <annevk>
foolip, yeah

[06:56:01.0000] <annevk>
also those Ms2ger mentioned

[06:56:02.0000] <annevk>
Ms2ger, we can put ElementTraversal into Web DOM Core

[07:03:00.0000] <hendry>
/me is at TPAC

[07:04:00.0000] <annevk>
oh cool

[07:12:00.0000] <hsivonen>
Ms2ger: while you were away, I took the liberty to land one of your patches

[07:13:00.0000] <hsivonen>
Ms2ger: http://hg.mozilla.org/mozilla-central/rev/6aad432efa02

[07:13:01.0000] <zcorpan>
annevk: why bother touching ElementTraversal?

[07:14:00.0000] <annevk>
it's like HTML5 takes in from HTML4 and DOM 2 HTML and some DOM 0 stuff

[07:15:00.0000] <annevk>
less specs for DOM Core is a good thing imo

[07:16:00.0000] <zcorpan>
html4 and dom2 were underspecified and broken

[07:16:01.0000] <zcorpan>
elementtraversal is fine afaik

[08:04:00.0000] <annevk>
zcorpan, sure

[08:05:00.0000] <othermaciej>
hi all

[08:11:00.0000] <necttocon>
Sup guys

[08:11:01.0000] <necttocon>
I was told to go here for questions etc

[08:11:02.0000] <necttocon>
so um

[08:11:03.0000] <necttocon>
maybe you guys have an idea why my rectangle is rotating around a circle, instead of rotating around the middle of the rectangle?

[08:12:00.0000] <foolip>
Does anyone know who the <video> developer(s) for Chrome are?

[08:12:01.0000] <annevk>
necttocon, URL or it didn't happen?

[08:12:02.0000] <Philip`>
necttocon: When you call rotate(), it rotates around the (0,0) point

[08:13:00.0000] <necttocon>
Philip` oh

[08:13:01.0000] <Philip`>
If you want to rotate around some arbitrary point (x,y), you have to do translate(-x, -y); rotate(a); translate(x, y);

[08:13:02.0000] <necttocon>
Wow

[08:13:03.0000] <necttocon>
Thanks Philip`

[08:13:04.0000] <necttocon>
Will try it out in a sec

[08:13:05.0000] <Philip`>
(unless the translates are the other way round)

[08:14:00.0000] <Philip`>
(I can never quite remember)

[08:14:01.0000] <zcorpan>
i think they're the other way around

[08:15:00.0000] <Philip`>
Trial-and-error is my usual approach to working out what the signs should be

[08:15:01.0000] <Philip`>
which works okay up to about four independent boolean variables

[08:15:02.0000] <necttocon>
Philip`: They should add it to the docs, or did I miss it?

[08:15:03.0000] <Philip`>
necttocon: Which docs?

[08:16:00.0000] <necttocon>
Philip`: specification

[08:16:01.0000] <necttocon>
Sorry, docs != specification

[08:17:00.0000] <Philip`>
I think it's not really the spec's job to teach readers about geometry and transformations and other standard computer-graphics things

[08:17:01.0000] <Philip`>
since that's a pretty large job and isn't specific to canvas

[08:18:00.0000] <Philip`>
so it's probably better to refer to some other document/book to understand the fundamental concepts like this

[08:19:00.0000] <necttocon>
Philip`: I've never worked with rotations/transformations so it's new to me that it always rotates around the (0,0) point

[08:22:00.0000] <Philip`>
http://en.wikipedia.org/wiki/Transformation_matrix#Rotation is what the spec means by "rotation transformation"

[08:22:01.0000] <Philip`>
but the matrix stuff isn't entirely intuitive if you've never seen it before :-)

[08:23:00.0000] <necttocon>
I never read formulas on wikipedia

[08:23:01.0000] <necttocon>
they scare me

[08:24:00.0000] <Philip`>
Any introduction to computer graphics should cover this, though I don't know any specific examples to recommend

[08:25:00.0000] <zcorpan>
"introduction to computer graphics" on google gives plenty of results :)

[13:05:00.0000] <Hixie>
abarth: dude, the http guy just used googlebot against you

[13:05:01.0000] <abarth>
omg

[13:05:02.0000] <Hixie>
oh you already replied to that one

[13:05:03.0000] <Hixie>
i'm surprised you didn't jump on it :-)

[13:05:04.0000] <AryehGregor>
Is there any simple standard JavaScript way to just say "load this script/stylesheet", without having to actually create a script or link element and put it somewhere in the DOM?

[13:06:00.0000] <AryehGregor>
There should be.  It's a very common need.

[13:06:01.0000] <abarth>
whenever i interact with that working group, i'm tempted to start my own standards body

[13:07:00.0000] <Philip`>
AryehGregor: XHR + eval?

[13:07:01.0000] <AryehGregor>
:/

[13:07:02.0000] <AryehGregor>
I was thinking something more like document.loadScript("http://...");

[13:08:00.0000] <Hixie>
abarth: well, i replied to that e-mail too

[13:14:00.0000] <Ms2ger>
AryehGregor, write a spec and get it implemented? :)

[13:14:01.0000] <AryehGregor>
Ms2ger, maybe I could find an existing spec and try to get someone else to do it for me.  :)

[13:21:00.0000] <AryehGregor>
I guess you'd want that to somehow translate into adding something to the DOM in a predictable place, since otherwise you couldn't remove it.

[13:22:00.0000] <Philip`>
What does it mean to remove a script?

[13:22:01.0000] <AryehGregor>
Well, say for styles.

[13:22:02.0000] <Philip`>
Ah, that seems like an independent thing

[13:22:03.0000] <AryehGregor>
Although, what happens if you do remove a <script>?

[13:22:04.0000] <AryehGregor>
Yes, in practice they're going to be quite different.

[13:22:05.0000] <Philip`>
Nothing, I think

[13:22:06.0000] <Hixie>
nothing interesting

[13:23:00.0000] <Hixie>
<script> is only interesting when you insert it into a doc

[13:23:01.0000] <Hixie>
after that it becomes boring

[13:23:02.0000] <abarth>
Hixie: using a dummy document for fragment parsing is causing performance problems.  WebKit innerHTML is not 10x slower for trivial values.  :(

[13:24:00.0000] <Hixie>
yeah i never expected anyone to actually implement it that way

[13:25:00.0000] <abarth>
i like the model.  we'll figure out how to make it fast

[13:25:01.0000] <Hixie>
so long as you don't run scripts and fire no mutation events except the last one(s) at the end, as if it'd all been inserted at once, i think the effect is the same

[13:25:02.0000] <Hixie>
there might be some other subtlties

[13:25:03.0000] <smaug____>
abarth: did you accidentally fix webkit to not have the "optimization" for simple innerHTML values?

[13:25:04.0000] <smaug____>
(the optimization which is against the spec)

[13:26:00.0000] <abarth>
smaug____: possibly.  there aren't any optimizations for innerHTML

[13:26:01.0000] <Hixie>
webkit used to do something dodgy with reusing a text node or something

[13:26:02.0000] <smaug____>
yeah, it at least used to reuse the text node in some cases

[13:26:03.0000] <abarth>
boo

[13:26:04.0000] <abarth>
that doesn't seem anywhere close to correct

[13:26:05.0000] <Hixie>
indeed

[13:26:06.0000] <Hixie>
fast though!

[13:27:00.0000] <smaug____>
fast, but no one else does that, IIRC

[13:27:01.0000] <smaug____>
since it doesn't make sense

[13:27:02.0000] <Hixie>
yeah

[13:27:03.0000] <smaug____>
IMO

[13:27:04.0000] <Hixie>
agreed

[13:27:05.0000] <Hixie>
that's why the spec doesn't allow it :-)

[13:27:06.0000] <abarth>
that case is tested in peacemaker

[13:28:00.0000] <abarth>
which is about the lamest benchmark suite i've ever seen

[13:28:01.0000] <abarth>
https://bugs.webkit.org/show_bug.cgi?id=48719

[13:29:00.0000] <jamesr_>
peacekeeper is the worst browser benchmark out there

[13:29:01.0000] <Hixie>
you can still mostly do the optimisation if you just make sure that you don't do it if there are any references from JS to the text node

[13:29:02.0000] <jamesr_>
which is quite a feat

[13:29:03.0000] <Hixie>
(which there will almost never be)

[13:30:00.0000] <abarth>
that's true

[13:30:01.0000] <abarth>
a first step is to recognize the case and use a new text node

[13:30:02.0000] <abarth>
rather than constructing a whole new document

[13:34:00.0000] <AryehGregor>
So the standards-compliant way to add a stylesheet would be something like: var link = document.createElement("link"); link.rel = "stylesheet"; link.src = foo; document.appendChild(link);

[13:36:00.0000] <Ms2ger>
s/document.appendChild/document.head.appendChild/

[13:36:01.0000] <AryehGregor>
What if document.head is null?

[13:36:02.0000] <Hixie>
then your document is not conforming html

[13:37:00.0000] <AryehGregor>
Yeah, I guess it would be pretty hard for that to happen.  How could it be null by the time you get to executing script, in text/html?

[13:37:01.0000] <AryehGregor>
Isn't something going to auto-create the <head> at some point?

[13:38:00.0000] <Hixie>
<html onclick="something..." style="...."><!-- network pauses here, user clicks on document -->

[13:38:01.0000] <AryehGregor>
Aha, so it could fail in some cases where your document is conforming.

[13:38:02.0000] <Hixie>
true

[13:39:00.0000] <AryehGregor>
So using document is safer.  Although technically HTML5 claims that it's non-conforming if you put the link element outside the head/body, the validator won't notice so no one will care.

[13:39:01.0000] <AryehGregor>
(besides, that seems like a bogus requirement anyway when it comes to script-inserted stuff)

[13:39:02.0000] <Hixie>
you won't be able to insert it outside the root element

[13:39:03.0000] <Hixie>
you'll get a HIERARCHY_ERR

[13:39:04.0000] <Hixie>
if you're going to all this effort, just create a <head> element :-)

[13:40:00.0000] <Hixie>
or do it in such a way that you can't run script before the <head> is seen

[13:40:01.0000] <Hixie>
i mean, a script could always just remove the <head> manually, to not have a <head>

[13:40:02.0000] <Hixie>
it's not clear to me what your use case is though

[13:42:00.0000] <romeo_>
I am looking at tokenization states. Are the cases supposed to be ordered in some way?

[13:44:00.0000] <romeo_>
E.g. the tag open state is not ordered numerically.

[13:44:01.0000] <romeo_>
It would be faster if small ascii letters was moved up before capital asciis.

[13:45:00.0000] <romeo_>
s/was/were/

[13:45:01.0000] <Hixie>
it's theoretically ordered by unicode code point except that things that cause parse errors come last

[13:46:00.0000] <Hixie>
however i've not always been good about keeping that order consistent

[13:46:01.0000] <AryehGregor>
Hixie, it's very common to want to load stylesheets from script.  Currently it's pretty awkward to do.

[13:46:02.0000] <Hixie>
AryehGregor: agreed

[13:48:00.0000] <AryehGregor>
So do you have any ideas for an API to make it nicer?

[13:48:01.0000] <Hixie>
document.addStyleSheet(url, [title], [alternate-p]); ?

[13:48:02.0000] <Hixie>
or document.addStyleSheet(url, [media], [title], [alternate-p]); ?

[13:49:00.0000] <Hixie>
anne might have something cooking along these lines as part of the CSSOM AltSS stuff

[13:49:01.0000] <romeo_>
Okay, thanks.

[13:53:00.0000] <abarth>
AryehGregor: document.head can also be null if you remove the head from the DOM

[14:26:00.0000] <Hixie>
how do i get a url from a File object these days?

[14:39:00.0000] <Hixie>
ok, dropzone is done

[14:43:00.0000] <Hixie>
abarth: his response makes no sense... "ok, so class A and class B of UAs might need to interoperate... but there are other classes (which i am not going to name) that don't need to interoperate"

[14:43:01.0000] <Hixie>
say what?

[14:43:02.0000] <Hixie>
you gotta wonder why these people are writing specs, some times

[14:44:00.0000] <abarth>
they seem to have some aesthetic thats important to them

[14:44:01.0000] <abarth>
which i haven't quite figured out yet

[14:44:02.0000] <hober>
what list is this on? httpbis?

[14:44:03.0000] <Hixie>
yeah

[14:45:00.0000] <gsnedders>
/me stopped reading that a while ago

[14:45:01.0000] <abarth>
his mail really makes no sense

[14:46:00.0000] <Hixie>
gsnedders: me too, but every now and then someone says something that hits one of my alarms, and i get to see it again :-)

[14:46:01.0000] <abarth>
he's arguing that the requested file name isn't part of the semantics of Content-Disposition: attachment; filename=foo

[14:47:00.0000] <Hixie>
i added HTTP to the list of specs we need to write, linking to his e-mail to show that the wg asked us to write it and we're not just doing it because of NIH syndrome

[15:29:00.0000] <JonathanNeal>
What do you guys think of http://forums.whatwg.org/viewtopic.php?p=5912&sid=995810a1b65454d366aee56fdc8f504a ?

[15:30:00.0000] <Hixie>
interesting idea

[15:33:00.0000] <JonathanNeal>
More modern websites would validate.  I mean, sticking <script>s after <body> seems pretty normal practice to me.

[15:36:00.0000] <Hixie>
sticking <script> before or after </body> today has no effect (the browser moves them all before the </body> anyway), so there's no reason to do that today

[15:37:00.0000] <JonathanNeal>
I'm pretty sure it has an effect.  Let me see...

[15:37:01.0000] <Hixie>
the parser essentially ignores </body>

[15:37:02.0000] <Hixie>
if it has an effect, that is significant news

[15:39:00.0000] <JonathanNeal>
I always thought the document was not accessible until it had </body>'d.

[15:39:01.0000] <Hixie>
good lord no

[15:39:02.0000] <Hixie>
the document can be accessible as soon as the browser wants it to be

[15:43:00.0000] <hober>
IE9 will support application/xhtml+xml

[15:43:01.0000] <JonathanNeal>
Thanks Hixie.

[15:44:00.0000] <AryehGregor>
JonathanNeal, that's disproven by just loading any particularly long page.  You'll see that the top loads before the full page content has loaded.

[15:44:01.0000] <JonathanNeal>
Maybe it's just in older IEs

[15:44:02.0000] <JonathanNeal>
And I think too legacy or something stupid.

[15:44:03.0000] <Hixie>
IE does have weird behaviour in this space

[15:44:04.0000] <Hixie>
but even in IE you can disprove it if you run a script with an alert() half way through the page

[15:44:05.0000] <Hixie>
amongst other means

[15:46:00.0000] <JonathanNeal>
Sure, I guess I just couldn't access the document.body until it was done or something.

[15:48:00.0000] <AryehGregor>
You can access that as long as the opening tag has been parsed, it just won't contain its full contents.

[15:49:00.0000] <AryehGregor>
If you only want to run after the full document has been parsed, use onreadystatechange or whatever that new feature is called.

[16:01:00.0000] <Rik`>
DOMContentLoaded ?

[16:02:00.0000] <AryehGregor>
Sounds right.

[16:34:00.0000] <cardona507>
anyone know what % of html5 tests were submitted by microsoft?

[16:36:00.0000] <AryehGregor>
You can look yourself to get an idea: http://dvcs.w3.org/hg/html/file/662a167f802d/tests

[16:36:01.0000] <AryehGregor>
approved/ and submission/ are the relevant ones.

[16:36:02.0000] <AryehGregor>
Oh, approved/ doesn't say who submitted them.

[16:37:00.0000] <AryehGregor>
Well, submission/ does.

[16:37:01.0000] <cardona507>
thnx AryehGregor 


2010-11-02
[23:58:00.0000] <necttocon>
Philip`: I did not succeed :(

[23:59:00.0000] <necttocon>
http://js.pastebin.com/RhJUY9KU

[23:59:01.0000] <necttocon>
The rectangle is not rotating correctly

[00:00:00.0000] <necttocon>
Anyone mind checking out what I'm doing wrong?

[00:14:00.0000] <necttocon>
:-(

[00:32:00.0000] <zcorpan>
Philip`: http://canvex.lazyilluminati.com/survey/2007-07-17/analyse.cgi/index says software error

[00:44:00.0000] <othermaciej>
good evening

[00:44:01.0000] <othermaciej>
er, morning

[00:44:02.0000] <othermaciej>
/me is confused about local time

[00:45:00.0000] <zcorpan>
morning

[00:46:00.0000] <zcorpan>
http://www.readwriteweb.com/archives/ie9_outperforms_other_browsers_for_html5_complianc.php

[00:50:00.0000] <hsivonen>
It's completely bogus to report results of a woefully incomplete test suite as news. Did the W3C advertise the results?

[00:52:00.0000] <zcorpan>
http://www.w3.org/QA/2010/09/how_do_we_test_a_web_browser_o.html

[00:53:00.0000] <hsivonen>
zcorpan: I think that blog post shouldn't have been posted

[00:53:01.0000] <hsivonen>
well, not with the result table

[01:49:00.0000] <annevk>
Hixie, dropzone should accept image/* stuff like stuff

[01:49:01.0000] <annevk>
Hixie, just like <input type=file>

[01:56:00.0000] <erlehmann>
hehe, dropzone sounds like a web storage startup name ;)

[01:58:00.0000] <micheil>
hey, is the stuff mozilla's doing with capturing audio/video part of any spec?

[02:04:00.0000] <smaug____>
micheil: what capturing?

[02:04:01.0000] <micheil>
hmm,, one sec

[03:14:00.0000] <othermaciej>
Hixie: would it be feasible to add a close/collapse box to the warning, same as the WHATWG bug box has?

[03:44:00.0000] <Philip`>
zcorpan: That page has intentionally not worked for ages (since moving to a new server)

[03:45:00.0000] <zcorpan>
Philip`: oh. i was following links from philip.html5.org

[04:38:00.0000] <Lachy>
"Note that this means XHTML documents cannot be loaded into frames unless the parent page is also running in IE9 Standards Mode. These versioning rules also apply to SVG documents received as "image/svg+xml"." -- http://blogs.msdn.com/b/ie/archive/2010/11/01/xhtml-in-ie9.aspx

[04:39:00.0000] <Lachy>
that seems like a really stupid restriction.

[04:40:00.0000] <Lachy>
but I guess that probably has something to do with them not being able to run multiple rendering engines simultaneously in the some tab or something.

[04:41:00.0000] <Lachy>
though, that doesn't make sense either. How would they handle any regular quirks mode HTML page with an iframe containing a standards mode HTML, or vice versa.

[05:44:00.0000] <virtuelv>
Hixie: seen http://www.reddit.com/r/programming/comments/dzww6/who_edits_the_w3c_specs_they_look_like_a_ransom/c146krx ?

[05:46:00.0000] <jcranmer>
I don't find them that unreadable

[05:49:00.0000] <zcorpan>
"It's not only the HTML5 spec. All of the W3C specs, ever since the nineties, have been written in a very inaccessible style. They are just not very good at writing accessible specs."

[05:51:00.0000] <jcranmer>
try reading some of MS's published specs

[06:17:00.0000] <virtuelv>
I sort of understand those people, though

[06:18:00.0000] <virtuelv>
reading the HTML5 spec isn't easy, and it could be made easier

[06:18:01.0000] <virtuelv>
then again, I'm not entirely certain their proposed fixes are what I would want either

[06:21:00.0000] <Workshiva>
It's written for spec lawyers by spec lawyers, if anything it's not verbose and specific enough.

[06:21:01.0000] <karlcow>
virtuelv: The readers audience is very diverse, but the specification target audience is becoming smaller. More and more focused on implementers and a lot less on Web developers and Integrators 

[06:21:02.0000] <annevk>
we're not opposed to making changes though

[06:21:03.0000] <annevk>
though the style sheet is sort of out our control when it comes to the W3C version

[06:22:00.0000] <annevk>
if the reddit people want us to reword, they can file bugs and we will

[06:22:01.0000] <annevk>
don't wanna write incomprehensibly on purpose

[06:23:00.0000] <karlcow>
annevk: not sure the css alone will change anything. It might help for readability, but not really for understandability for web dev/int. 

[06:24:00.0000] <Philip`>
I doubt the spec is written as absolutely clearly as it possibly could be written without comprising verbosity/specificity/etc

[06:24:01.0000] <othermaciej>
the font changes can make it painful to scan the text, but on the other hand are useful for calling out key terms when close reading

[06:24:02.0000] <Philip`>
so it's probably good to welcome suggested improvements

[06:25:00.0000] <Philip`>
as long as they're sufficiently improved to balance the risk of introducing bugs due to changing the text

[06:34:00.0000] <slinkcoding>
re

[07:36:00.0000] <MikeSmith>
slinkcoding: hey

[08:24:00.0000] <hober>
Interesting point about punycoded urls in comments

[08:25:00.0000] <hober>
( http://lists.whatwg.org/htdig.cgi/whatwg-whatwg.org/2010-November/028937.html )

[08:30:00.0000] <zcorpan>
i guess we could make -- valid now that firefox is going to ship with html5 parser

[08:31:00.0000] <hober>
I'm reminded that vendor-specific attributes were once foo--bar-baz

[08:35:00.0000] <Philip`>
/me would guess that JS code like "i--;" would be more likely to occur in commented-out code than Punycoded URLs

[08:36:00.0000] <zcorpan>
or html comments

[08:36:01.0000] <zcorpan>
which do break if you try to comment them out, but might not give any validation errors

[08:36:02.0000] <zcorpan>
if we make -- valid

[08:37:00.0000] <Philip`>
Like "<!-- foo <!-- bar --> baz -->"?

[08:37:01.0000] <Philip`>
Maybe the rendering of "baz -->" on the screen would make it obvious enough

[08:46:00.0000] <zcorpan>
yes

[09:01:00.0000] <Workshiva>
Comments in comments could be solved by looking for <!-- instead of --

[09:01:01.0000] <zcorpan>
yes

[09:17:00.0000] <hober>
well, mr last week has woken up; i guess (s)he's at tpac again

[09:19:00.0000] <Philip`>
Or just making stuff up

[09:26:00.0000] <hsivonen>
Hixie: how come you are not at TPAC?

[12:12:00.0000] <gsnedders>
Gah, having an address with heading content within it makes sense for a CV where the header can just be the person's name…

[12:38:00.0000] <hober>
indeed

[12:40:00.0000] <Philip`>
http://www.theregister.co.uk/2010/11/01/w3c_html5_conformance_tests/ / http://tech.slashdot.org/article.pl?sid=10/11/02/1851255

[12:41:00.0000] <Philip`>
Those results are spreading quite a bit

[12:41:01.0000] <annevk>
yeah, oops

[12:42:00.0000] <Hixie>
guess the other browser vendors should start contributing more tests :-)

[12:43:00.0000] <Hixie>
i love the last two sentences of http://tech.slashdot.org/article.pl?sid=10/11/02/1851255

[12:46:00.0000] <annevk>
that's /. for ya

[12:47:00.0000] <hsivonen>
Hixie: that's awesome

[12:48:00.0000] <cardona507>
please other browser vendors submit tests :)

[12:58:00.0000] <annevk>
Hixie, should I file a bug on allowing image/* in dropzone=""?

[12:58:01.0000] <Hixie>
i'd rather you filed bugs on use cases than solutions :-)

[12:58:02.0000] <Hixie>
when would you want to accept an image/tiff file?

[12:59:00.0000] <Hixie>
or image/x-proprietary-3d-bitmap ?

[12:59:01.0000] <annevk>
why do we have <input type=file accept=image/*>?

[12:59:02.0000] <gsnedders>
Am I right thinking there are no event handlers that when set on Window should actually get set on Document?

[12:59:03.0000] <annevk>
yes

[13:00:00.0000] <annevk>
Hixie, I think they should be consistent, mainly

[13:00:01.0000] <Hixie>
annevk: because we need a way to say "display an image-based UI"

[13:00:02.0000] <Hixie>
but that doesn't make sense for DND

[13:00:03.0000] <Hixie>
since you already have the image when doign the drop

[13:00:04.0000] <annevk>
Hixie, you can display an image-based UI for accept=image/png,image/jpeg etc. too now?

[13:01:00.0000] <annevk>
s/now?/no?/

[13:01:01.0000] <zcorpan>
http://wiki.whatwg.org/wiki/Implementations_in_Web_browsers is pretty out of date

[13:01:02.0000] <annevk>
but I guess it is less intuitive

[13:01:03.0000] <Hixie>
annevk: you could

[13:01:04.0000] <annevk>
but the UI problem seems the same for dropzone=""

[13:01:05.0000] <Hixie>
annevk: it would be a bit weird though

[13:02:00.0000] <annevk>
if you want to indicate something to AT

[13:03:00.0000] <Hixie>
annevk: you don't look at the dropzones until after you've started the drag, typically

[13:03:01.0000] <Hixie>
annevk: i mean, i suppose a UI could expose this info, but it'd be pretty unusual

[13:04:00.0000] <annevk>
fair point

[13:04:01.0000] <annevk>
alright

[13:57:00.0000] <karlcow>
http://www.bing.com/community/site_blogs/b/maps/archive/2010/11/02/changes-to-bird-s-eye-and-3d-maps.aspx

[13:57:01.0000] <karlcow>
"As a consequence, we are also announcing that we will be discontinuing investment in the Bing Maps 3D control plug-in. "

[13:59:00.0000] <aho>
"Silverlight" pfeh... *spit*

[13:59:01.0000] <aho>
<:

[14:24:00.0000] <zcorpan>
where's mikesmith's html version of es5 again?

[14:24:01.0000] <Philip`>
http://sideshowbarker.github.com/es5-spec/

[14:25:00.0000] <zcorpan>
thanks

[14:35:00.0000] <karlcow>
i have a mail blocked in the public-html-testsuite :)

[14:35:01.0000] <karlcow>
to add a boilerplate to the page. :)

[15:02:00.0000] <Hixie>
can someone explain the http://www.w3.org/Bugs/Public/show_bug.cgi?id=10808 use case to me and in particular explain how it is different than inserting spans of text from another language (the use case in bug 10807)?

[15:02:01.0000] <Hixie>
AryehGregor?

[15:12:00.0000] <Steve^>
Can't they have the same use case?

[15:14:00.0000] <Hixie>
then they'd be the same bug

[15:14:01.0000] <Steve^>
10808's benefit comes more from user inputted content

[15:15:00.0000] <Hixie>
but when i marked them as duplicates of each other, people said they had different use cases

[15:15:01.0000] <Hixie>
(without saying how)

[15:16:00.0000] <Steve^>
I don't see a problem with them being a single bug, but with 2 proposed changes

[15:16:01.0000] <Steve^>
except maybe for ease of discussion

[15:23:00.0000] <Hixie>
i don't care about hte proposed changes yet

[15:23:01.0000] <Hixie>
i just want to understand what the problem is

[15:37:00.0000] <Steve^>
The use cases are (1) Being able to display arbitrary content in a mixed rtl/ltr site. (2) Having user input respond better when rtl is typed in an ltr environment and visa versa

[15:37:01.0000] <Hixie>
http://www.w3.org/2010/Talks/1102-html-plh/#(5) is funny, given that almost all the "resolved lc" ones were due to the brief lack of spam filtering

[15:37:02.0000] <Steve^>
I couldn't say which bug is which case, it seems to have blurred slightly

[15:37:03.0000] <Hixie>
Steve^: ok (1) is clearly bug 10807. Can you explain (2) a little?

[15:39:00.0000] <Steve^>
I tried it out on jsbin, typing in a textarea set to rtl is funky. The site would currently need to choose whether input is ltr or rtl, they couldn't accept both

[15:40:00.0000] <Hixie>
that sounds like the problem in bug 10821

[15:47:00.0000] <Steve^>
agreed

[15:55:00.0000] <Hixie>
actually comment 20 does give some good use cases in bug 10808


2010-11-03
[18:35:00.0000] <paul_irish>
if an image is served with CORS, shouldn't canvas be able to get its imageData?

[18:39:00.0000] <Philip`>
I think the specs currently say you shouldn't, but it would be a sensible feature to have

[18:40:00.0000] <paul_irish>
indeed. if i'm greenlighting use of my images crossdomain, then there shouldnt be a problem with people absorbing the imagedata

[18:40:01.0000] <paul_irish>
currently all browsers still throw on the getImageData, regardless of cors. :(

[19:36:00.0000] <abarth>
paul_irish: yeah, we want to support that in WebKit

[19:37:00.0000] <abarth>
paul_irish: it requires some architectural changes to how we load images off the network

[19:37:01.0000] <abarth>
paul_irish: but we've got some folks working on fixing that

[19:37:02.0000] <paul_irish>
cool! should i file a ticket to track it?

[19:37:03.0000] <abarth>
(me included)

[19:37:04.0000] <abarth>
you can if you like

[19:38:00.0000] <abarth>
webkit isn't very good at using its bug database to prioritize work

[19:38:01.0000] <abarth>
because the project is very decentralized

[19:38:02.0000] <abarth>
and prioritization is somewhat of a centralized concept

[19:38:03.0000] <paul_irish>
aye.

[19:38:04.0000] <paul_irish>
while i've got you.. i just came across a unique case where the html5 parser is a bit cranky

[19:39:00.0000] <paul_irish>
http://rexcasteel.com/

[19:39:01.0000] <paul_irish>
it has an    </center   tag with no closing >

[19:39:02.0000] <abarth>
hum

[19:39:03.0000] <abarth>
ah

[19:39:04.0000] <abarth>
</center<foo>

[19:39:05.0000] <paul_irish>
which makes the <table> which...

[19:39:06.0000] <paul_irish>
yes

[19:39:07.0000] <paul_irish>
the table dies.

[19:39:08.0000] <abarth>
that's one of the top problems we have with the HTML5 algorithm

[19:40:00.0000] <abarth>
however, that site is probably equally busted in IE

[19:40:01.0000] <abarth>
shall we email the author and ask him to fix his page?

[19:41:00.0000] <paul_irish>
yeah i can do that no problem.

[19:41:01.0000] <abarth>
thanks

[19:41:02.0000] <abarth>
<!doctype html public "-//w3c//dtd xhtml 1.0 strict//en" "dtd/xhtml1-strict.dtd">

[19:41:03.0000] <abarth>
:)

[19:41:04.0000] <aho>
strict

[19:41:05.0000] <abarth>
yeah

[19:41:06.0000] <aho>
of course :>

[19:41:07.0000] <paul_irish>
yeah.. commented out prolog+doctype, too

[19:42:00.0000] <paul_irish>
(yes its busted in ie6, at least.)

[19:42:01.0000] <abarth>
its a tokenization issue

[19:42:02.0000] <abarth>
both tokenization choices there break web sites

[19:42:03.0000] <paul_irish>
aiight.. well no problem.. just makig sure i didnt hit an edge case that wasnt captured before.

[19:42:04.0000] <paul_irish>
figured it wasnt likely. :)

[19:42:05.0000] <abarth>
its a matter of picking your poison

[19:42:06.0000] <abarth>
we've picked the IE poison :)

[19:43:00.0000] <aho>
you say that like it's a good thing

[19:44:00.0000] <aho>
ie6 is down to 1.23% in germany, by the way

[19:44:01.0000] <aho>
woo

[19:44:02.0000] <aho>
<:

[19:44:03.0000] <aho>
which isn't even half of what ff 3.0 got

[19:45:00.0000] <aho>
and we surely dont test for that one :)

[19:47:00.0000] <abarth>
/me <3 germany's browser market

[19:49:00.0000] <aho>
ie7 will most likely drop below 5% next month

[19:49:01.0000] <aho>
good times :)

[22:35:00.0000] <Hixie>
oh lordy, the _summary_ to http://lists.w3.org/Archives/Public/public-html/2010Oct/0268.html is longer than some of my CPs in their entirety

[22:35:01.0000] <Hixie>
some people really don't know how to be succint

[00:35:00.0000] <mnot>
hixie: one thing re: http://lists.w3.org/Archives/Public/public-html/2010Oct/0268.html

[00:35:01.0000] <mnot>
I haven't read the whole thing, but one of the stated motivations is that "It would avoid clashes with the Nottingham draft." 

[00:36:00.0000] <mnot>
I don't see how that is the case, since the draft only sets up a framework for link relations, and re-registers what existed in the IETF registry at the time

[00:37:00.0000] <mnot>
the relations themselves — and their semantics — are effectively owned by the community; in this case, the HTML community (since HTML registered the ones he's talking about, IIRC)

[00:42:00.0000] <annevk>
mnot, Hixie didn't write that

[00:42:01.0000] <mnot>
I know - just making sure that feedback gets in

[00:42:02.0000] <mnot>
/me would never dream that hixie could write that

[00:43:00.0000] <Hixie>
mnot: the place to put such feedback is the poll, whenever that happens

[00:43:01.0000] <Hixie>
heh

[00:43:02.0000] <mnot>
hixie: I'm not a member of the WG

[00:43:03.0000] <Hixie>
/me couldn't really work out what leif was proposing anyway

[00:43:04.0000] <Hixie>
mnot: then you should join

[00:43:05.0000] <mnot>
the w3c's rules don't allow me to allow myself to join

[00:43:06.0000] <mnot>
it's complex

[00:44:00.0000] <Hixie>
oh, right, i remember now

[00:44:01.0000] <Hixie>
well, tell sam to put your feedback in on your behalf or something

[00:44:02.0000] <mnot>
k

[00:44:03.0000] <Hixie>
i can't believe the w3c is actively turning someone like you away

[00:44:04.0000] <Hixie>
so ridiculous

[00:45:00.0000] <Hixie>
especially given how open the html work is

[00:45:01.0000] <Hixie>
fwiw you are always welcome in the whatwg

[00:45:02.0000] <mnot>
will keep that in mind; just over-committed already. 

[00:45:03.0000] <Hixie>
yeah, i hear ya

[00:45:04.0000] <mnot>
(and REALLY glad I cancelled going to Lyon)

[00:56:00.0000] <nessy>
I think to become part of public-html you just have to fill in some forms and stuff to become an invited expert

[00:57:00.0000] <MikeSmith>
mnot: why you glad you cancelled going to Lyon?

[00:58:00.0000] <mnot>
because its f'ing far away, and I've already been travelling a lot this year, with more to come. 

[00:58:01.0000] <annevk>
nessy, not if you work for an organization that can become a Member

[00:58:02.0000] <othermaciej>
Lyon is quite nice

[00:58:03.0000] <mnot>
I miss the interaction, of course, but have to prioritise other stuff.

[00:59:00.0000] <mnot>
/me wonders if it's as good as Maastricht — I loved Maastricht.

[00:59:01.0000] <nessy>
annevk: http://www.w3.org/2004/01/pp-impl/40318/instructions says otherwise

[00:59:02.0000] <othermaciej>
it is rather far away

[00:59:03.0000] <annevk>
nessy, yes it is, see "If you do not work for a W3C Member organization, first consider whether your employer can join W3C and get the benefits of Membership."

[00:59:04.0000] <othermaciej>
from California anyway

[00:59:05.0000] <nessy>
I joined as invited expert without company affiliation

[00:59:06.0000] <annevk>
mnot, nope, and not just saying that because I'm Dutch

[00:59:07.0000] <mnot>
Everywhere is far from Australia.

[01:00:00.0000] <nessy>
annevk: and then it says "If this is not an option and you think that you have the expertise and availability to participate, you may request to participate as an Invited Expert as follows."

[01:00:01.0000] <annevk>
nessy, but for the company mnot works for it is an option

[01:00:02.0000] <nessy>
that sentence is only marketing talk

[01:01:00.0000] <nessy>
if the company doesn't decide to become a member, then it's not an option for you personally

[01:01:01.0000] <annevk>
clearly it is not

[01:01:02.0000] <annevk>
but I am not sure why I am debating this

[01:01:03.0000] <nessy>
:)

[01:15:00.0000] <nessy>
say, the MediaStreamTransceiver on https://labs.ericsson.com/developer-community/blog/beyond-html5-conversational-voice-and-video-implemented-webkit-gtk was made up by the Ericsson guys - it's not something that's specced anywhere - or am I missing something

[01:16:00.0000] <nessy>
we have ConnectionPeer for that, right? http://www.whatwg.org/specs/web-apps/current-work/complete/commands.html#peer-to-peer-connections

[01:17:00.0000] <Hixie>
well, we have a skeleton

[01:17:01.0000] <Hixie>
i don't think it makes much sense to do video over websockets

[01:17:02.0000] <Hixie>
you'd want to do a direct connection to the other peer

[01:17:03.0000] <Hixie>
which is what the ConnectionPeer stuff is about

[01:18:00.0000] <Hixie>
i tried making a skeleton for someone to define ICE/STUN for this: http://hixie.ch/specs/rtc-skeleton/

[01:18:01.0000] <Hixie>
no takers yet though

[01:18:02.0000] <Hixie>
(i know nowhere near enough to fill in that spec)

[01:19:00.0000] <annevk>
Hixie, even stuff like Skype often carries it via an intermediate server because of firewall issues

[01:20:00.0000] <Hixie>
yeah, as a last resort

[01:20:01.0000] <Hixie>
but the browser would do that, you wouldn't want to tunnel it over websockets

[01:20:02.0000] <annevk>
from what I hear from our Unite stuff P2P fails often

[01:21:00.0000] <annevk>
the browser would do that? you mean browsers need to set up intermediate servers and such?

[01:21:01.0000] <annevk>
and start paying the traffic bill?

[01:21:02.0000] <annevk>
that seems somewhat unlikely

[01:24:00.0000] <othermaciej>
my favorite part of every TPAC is when Henri gets up to the mic for a question

[01:25:00.0000] <nessy>
Hixie: I think that whole RTC group wants to have a go at that spec by the looks of it

[01:26:00.0000] <Hixie>
annevk: no, i mean the browser would fall back to a given routing server, you wouldn't have to create a WebSocket connection, etc

[01:26:01.0000] <Hixie>
nessy: have i been missing mail? i didn't see any rtc mail after i sent that proposal in

[01:26:02.0000] <nessy>
no, I don't think so either

[01:27:00.0000] <Hixie>
looked to me more like the whole TRC group wanted someone else to have a go at it :-)

[01:27:01.0000] <nessy>
but doesn't that whole meeting indicate that they want to attack the issue?

[01:27:02.0000] <annevk>
Hixie, oh, so you give a peer URL and a routing URL?

[01:27:03.0000] <weinig>
good morning annevk!

[01:27:04.0000] <annevk>
hey there weinig

[01:27:05.0000] <Hixie>
annevk: you give whatever ICE/STUN want, i'm not sure what that is exactly and am hoping to make it NMP

[01:27:06.0000] <Hixie>
or rather, SEP

[01:27:07.0000] <Hixie>
(Not My Problem / Someone Else's Problem)

[01:28:00.0000] <annevk>
fair enough

[01:28:01.0000] <annevk>
I do sort of think we want to have video -> websocket too

[01:28:02.0000] <annevk>
for live broadcast

[01:28:03.0000] <Hixie>
sure, eventually

[01:28:04.0000] <annevk>
and it seems easier than video -> p2p, but I could be missing things

[01:28:05.0000] <Hixie>
maybe

[01:29:00.0000] <othermaciej>
what kind of information do peers need to have previously exchanged to use ICE/STUN to connect?

[01:29:01.0000] <annevk>
weinig, #tpac-chat is the backchannel basically

[01:29:02.0000] <othermaciej>
/me has not much idea how this stuff works

[01:29:03.0000] <othermaciej>
for a live broadcast with the web client doing the broadcasting?

[01:29:04.0000] <othermaciej>
i.e. streaming upload of video?

[01:29:05.0000] <Hixie>
othermaciej: they need a low-bandwidth JS-supported communication channel, as i understand it, it's not just here's some info, go ahead.

[01:29:06.0000] <weinig>
annevk: ah, cute

[01:30:00.0000] <Hixie>
anyway, i should head to bed

[01:31:00.0000] <othermaciej>
I wish I knew how FaceTime does the initial exchange of info

[01:31:01.0000] <eighty4>
/me hates minified js files

[01:31:02.0000] <MikeSmith>
the first time I ever saw hsivonen was when he came up to the mic at sessions at XTech 2005 or whatever year it was

[01:31:03.0000] <othermaciej>
good night!

[01:32:00.0000] <othermaciej>
heh

[01:32:01.0000] <othermaciej>
my favorite thing about his questions/comments is that 95% of the time it's clear the speaker did not actually understand what hsivonen was talking about, even though it makes perfect sense

[01:32:02.0000] <MikeSmith>
lol

[01:32:03.0000] <MikeSmith>
yeah

[01:33:00.0000] <MikeSmith>
or most of the people in the room

[01:33:01.0000] <annevk>
also sad

[01:33:02.0000] <MikeSmith>
I was expecting some reaction to his comment today 

[01:33:03.0000] <MikeSmith>
about the parser

[01:33:04.0000] <MikeSmith>
but I guess I was expecting too much

[01:34:00.0000] <othermaciej>
I was hoping after glazou suggested "XML2", that someone would suggest to call it XML5

[01:35:00.0000] <annevk>
at one point I wrote a mostly functioning XML5 parser

[01:35:01.0000] <MikeSmith>
maybe it would be more effective to just go up to the mic, say, "This problem has already been solved.", and then just walk away from the mic

[01:35:02.0000] <annevk>
MikeSmith, that's great

[01:37:00.0000] <Rik`>
ah ah, annevk is a women again in a french blog

[01:37:01.0000] <Rik`>
http://www.macgeneration.com/news/voir/175132/html5-le-tableau-d-honneur-du-w3c-conteste

[01:37:02.0000] <Rik`>
"La représentante d'Opera"

[01:37:03.0000] <weinig>
Rik`: one of the top women in Web Standards?

[01:38:00.0000] <othermaciej>
annevk should get a sex change just to stop confusing people

[01:38:01.0000] <annevk>
also sexy

[01:39:00.0000] <Rik`>
othermaciej: don't laugh, you are said to be "annevk's equivalent at Apple"

[01:40:00.0000] <othermaciej>
lol

[01:40:01.0000] <zcorpan>
why, do people think othermaciej is a girl too?

[01:41:00.0000] <weinig>
zcorpan: you mean Macie J?

[01:41:01.0000] <othermaciej>
sometimes people think my name is "Macie J. Stachowiak" and Macie might be a woman's name in the US, but then again, could be a man's name too

[01:41:02.0000] <Rik`>
zcorpan: no no, it says "His counterpart at Apple"

[01:41:03.0000] <Rik`>
the comments of this article are so wrong…

[01:43:00.0000] <Rik`>
oh wait no, othermaciej is considered a woman in this article

[01:44:00.0000] <annevk>
I do more background check than these journalists on a day-to-day basis

[01:44:01.0000] <annevk>
sad

[01:45:00.0000] <annevk>
but also funny :)

[01:46:00.0000] <Rik`>
I wouldn't consider them journalists

[01:47:00.0000] <MikeSmith>
they are more like "journalists light"

[01:47:01.0000] <MikeSmith>
like lite beer

[01:48:00.0000] <annevk>
that makes it sound quite bad

[01:50:00.0000] <MikeSmith>
we should start an "annevk's equivalent at…" meme

[01:54:00.0000] <nessy>
I'm about to start checking if IE really does 100% on video - I really doubt it

[01:54:01.0000] <zcorpan>
MikeSmith: so apparently you have some competition in generating the best html version of es5

[01:54:02.0000] <MikeSmith>
zcorpan: may a thousand flowers grow

[01:55:00.0000] <zcorpan>
MikeSmith: http://people.mozilla.org/~jorendorff/es5.html

[01:55:01.0000] <MikeSmith>
yep

[01:55:02.0000] <MikeSmith>
looks better than what I put together

[01:55:03.0000] <MikeSmith>
more hyperlinks

[02:01:00.0000] <zcorpan>
but no ToC

[02:02:00.0000] <MikeSmith>
oh

[02:02:01.0000] <MikeSmith>
well, that's easy enough to fix

[02:02:02.0000] <MikeSmith>
he could just use the online HTML5 outliner

[02:02:03.0000] <MikeSmith>
and generate one

[02:03:00.0000] <MikeSmith>
and then just copy that generated TOC in

[02:03:01.0000] <MikeSmith>
that's how I made the one I included

[02:03:02.0000] <MikeSmith>
I think

[02:49:00.0000] <zcorpan>
i wonder if i should suggest that we move away from http-like headers and instead use JSON or something simpler for websockets

[02:49:01.0000] <zcorpan>
if we're going to XOR it, there's no reason to use http-like headers

[02:52:00.0000] <mnot>
FWIW, I think that's worth considering; the HTTP-ish-ness of the current proposal misleads people.

[02:55:00.0000] <annevk>
XML!

[02:56:00.0000] <annevk>
no wait, RDF/XML!

[04:00:00.0000] <slinkcoding>
re

[04:13:00.0000] <micheil>
abarth: ping?

[04:13:01.0000] <micheil>
hmm, maybe not, it's kinda late state-side

[06:43:00.0000] <AryehGregor>
Hixie, didn't I already say at least twice what the difference is?  http://www.w3.org/Bugs/Public/show_bug.cgi?id=10808#c17

[06:44:00.0000] <AryehGregor>
Hixie, go to data:text/html,<textarea dir=rtl></textarea> and type a few sentences in English.  That's what you get when you try to type in Hebrew on any LTR site, i.e., practically any site.  One use-case of bug 10808 is avoiding that.

[06:45:00.0000] <AryehGregor>
Another use-case is inserting blocks of text where you might know the direction, but don't want to bother manually specifying direction on each paragraph, so a Hebrew paragraph inserted in a mostly-English document should magically be interpreted as RTL instead of LTR (so, e.g., a trailing period would be put in the correct place).

[06:48:00.0000] <AryehGregor>
bdi has nothing to do with any use-case where you're inserting entire paragraphs, since paragraphs are already isolated.

[06:48:01.0000] <AryehGregor>
Is that a good enough explanation, or should I explain it a fourth time?  :)

[06:49:00.0000] <AryehGregor>
(Although yes, the use-cases do overlap a bit -- as Aharon points out, dir=auto would also be useful if you're inserting inline stuff of unknown directionality.  But they're mostly disjoint.)

[06:56:00.0000] <AryehGregor>
(I need to get around to reviewing what Aharon last said on bug 10808.  I'm quite sure his solution is overcomplicated and too cautious and generally wrong, but I doubt my proposal is particularly good either, and I need to review his objections to it in detail.)

[11:08:00.0000] <Hixie>
AryehGregor: yeah i ended up understanding it better when i reread the bug, but thanks

[12:11:00.0000] <AryehGregor>
Grr, validator.nu uses POST instead of GET now?  No copy-pasteable URLs.

[12:11:01.0000] <AryehGregor>
Doesn't seem to even accept GETs.

[12:12:00.0000] <AryehGregor>
Or is this some sneaky anti-XSS thing interfering or whatnot?

[12:12:01.0000] <AryehGregor>
How obnoxious.

[12:18:00.0000] <AryehGregor>
Oh, I can still use data URLs.

[15:13:00.0000] <Hixie>
anyone write arabic or hebrew?

[15:15:00.0000] <annevk>
your colleague Aharon that is at TPAC prolly does :)

[15:16:00.0000] <Hixie>
good point

[15:16:01.0000] <Hixie>
thanks

[15:18:00.0000] <hsivonen>
oh, great. the host of hsivonen.iki.fi seems to be down...

[15:19:00.0000] <Hixie>
on another note, does anyone have a page that, given text, gives back a list of unicode codepoints? my tool for doing that is buggy with non-ascii sadly

[15:19:01.0000] <hsivonen>
I really should take the time to relocate it to a more reliable host

[15:19:02.0000] <Hixie>
if you pick dreamhost, dibs on being your reference! :-P

[15:20:00.0000] <drclue>
Just out of curiosity , does anyone know if there would be an issue with a regular "ws:" websocket trying to connect from a page delivered with a red https in chrome?

[15:20:01.0000] <Hixie>
(but i don't think dreamhost would be first choice for reliability)

[15:21:00.0000] <annevk>
you can do it in JavaScript quite easily for everything that fits in 16 bits

[15:23:00.0000] <hsivonen>
Hixie: I'm considering the VM that now has about.validator.nu

[15:23:01.0000] <hsivonen>
it lacks PHP and Jython and GCC

[15:23:02.0000] <hsivonen>
I have crazy legacy stuff running in cron

[15:25:00.0000] <drclue>
I've got a websocket server that has been running fine, but I'm trying to get it happy in a particular VPS situation and the browser stalls at the handshake.

[15:26:00.0000] <Hixie>
annevk: true, i'll do that

[15:28:00.0000] <Aleoss>
HTML5 REQUEST: Is it possible you guys could add a maxlength attribute to the <textarea> element?

[15:29:00.0000] <Hixie>
Aleoss: done

[15:29:01.0000] <Aleoss>
Oh? -checks the spec again-

[15:29:02.0000] <Hixie>
:-)

[15:31:00.0000] <Aleoss>
So it is. Missed that while looking over the spec.

[15:35:00.0000] <Hixie>
is hebrew "he"?

[15:35:01.0000] <Hixie>
it appears so

[15:39:00.0000] <hober>
Hixie: I could make an Emacs command to replace chars with codepoints if you'd like

[15:46:00.0000] <hober>
Hixie: (defun hixie-codepointize-region (start end) "Get the Unicode codepoints of the chars between START and END." (interactive "r") (goto-char start) (while (< (point) end) (message "U+%04X" (encode-char (char-after) 'ucs)) (forward-char)))

[15:46:01.0000] <hober>
only lightly tested

[15:47:00.0000] <hober>
select a region, M-x hixie-codepointize-region RET, and you'll have all the codepoints in *Messages*

[15:48:00.0000] <Hixie>
actually the reason i need it is so that i can send just ASCII to my emacs :-)

[15:48:01.0000] <Hixie>
my editing environment is not 8-bit clean, sadly

[15:48:02.0000] <david_carlisle>
hixie: http://people.w3.org/rishida/tools/conversion/

[15:48:03.0000] <Hixie>
it's ok, i did it in js when anne suggested it :-)

[15:53:00.0000] <hober>
ahh

[16:45:00.0000] <nessy>
Hixie: I recently saw some SRT files that had metadata in a first cue with the cue length 0, i.e. going from 0 —> 0; I can see that as the only way to introduce file-wide metadata without breaking backwards compatibility. Do you have a better idea?


2010-11-04
[19:28:00.0000] <boblet>
hey all, anyone know the status of microdata support in WebKit?

[19:29:00.0000] <boogyman>
boblet: i'm sure google does

[19:30:00.0000] <boblet>
boogyman: thank you for your kind suggestion to lmgtfy. however I wouldn’t be asking here if I had not already done so

[19:30:01.0000] <boblet>
maybe my google-fu is weak today :/

[19:30:02.0000] <boogyman>
you'd be surprised :)

[19:31:00.0000] <boogyman>
google is always my first reference :)

[19:32:00.0000] <boblet>
when you get zero hits from http://www.google.com/search?q=site:bugs.webkit.org+microdata and your own pages coming up in the top 10 for general queries…

[19:36:00.0000] <Philip`>
https://bugs.webkit.org/robots.txt

[19:36:01.0000] <Philip`>
Not surprising if you get 0 hits :-)

[19:37:00.0000] <Philip`>
https://bugs.webkit.org/buglist.cgi?quicksearch=ALL+microdata doesn't give any hits either, though

[19:42:00.0000] <boblet>
Philip`: ooh, interesting. will note for future. I did try a Bugzilla search before, but Bugzilla search sux

[19:43:00.0000] <boblet>
I thought I remembered reading some tweets about microdata progress in webkit from mikesmith, but Twitter search is even more broken

[19:44:00.0000] <Philip`>
(The "ALL" keyword in Bugzilla's quicksearch is handy, since it counts closed bugs too)

[19:45:00.0000] <boogyman>
any UI "sucks" if the user cannot accomplish what he/she is attempting to accomplish

[19:48:00.0000] <boblet>
Philip`: again, noted for future ref. thanks for ejamakatin’ me :)

[19:48:01.0000] <boblet>
boogy|movie: that pretty much describes my interactions with bugzilla

[00:59:00.0000] <slinkcoding>
hey

[01:00:00.0000] <MikeSmith>
slinkcoding: hé

[01:00:01.0000] <slinkcoding>
(:

[01:01:00.0000] <MikeSmith>
slinkcoding: how's things in Budapest?

[01:02:00.0000] <slinkcoding>
haha besides the new goverment's craziness its as usual.

[01:02:01.0000] <slinkcoding>
i have a lot to work and thats fine for me (:

[01:02:02.0000] <slinkcoding>
attending great html5 sessions for instance

[01:03:00.0000] <MikeSmith>
If the new government is crazier than the old one, that's an achievement

[01:03:01.0000] <MikeSmith>
I guess the old one wasn't crazy, but just completely corrupt

[01:03:02.0000] <MikeSmith>
anyway

[01:03:03.0000] <MikeSmith>
wanted to ask you about something

[01:03:04.0000] <slinkcoding>
tell me

[01:03:05.0000] <MikeSmith>
your elisp HTML5 parser thing

[01:03:06.0000] <MikeSmith>
did you start actual word on that yet?

[01:04:00.0000] <MikeSmith>
because I know hober has been working on one too

[01:04:01.0000] <slinkcoding>
yep, he did contact me

[01:04:02.0000] <MikeSmith>
ah, OK

[01:05:00.0000] <slinkcoding>
i chose it for my thesis to write a html5 parser in elisp but had no time so far to start it 

[01:06:00.0000] <slinkcoding>
and hober overtook mi (:

[01:06:01.0000] <MikeSmith>
I see

[01:06:02.0000] <MikeSmith>
OK

[01:06:03.0000] <MikeSmith>
well, maybe you can help him out some

[01:06:04.0000] <MikeSmith>
btw, have you looked at fab?

[01:07:00.0000] <MikeSmith>
https://github.com/jed/fab

[01:07:01.0000] <slinkcoding>
fab means what? the js pattern or the python tool

[01:07:02.0000] <slinkcoding>
so the pattern

[01:07:03.0000] <MikeSmith>
the Jed Schmidt one

[01:07:04.0000] <MikeSmith>
yeah

[01:07:05.0000] <slinkcoding>
yup, i see it

[01:07:06.0000] <slinkcoding>
its very interesting

[01:07:07.0000] <slinkcoding>
i organize a javascript meetup in budapest

[01:07:08.0000] <MikeSmith>
syntax is sort of lisp-ish

[01:08:00.0000] <MikeSmith>
oh

[01:08:01.0000] <MikeSmith>
cool

[01:08:02.0000] <slinkcoding>
and planned to speak about fab on the next one

[01:08:03.0000] <MikeSmith>
great

[01:08:04.0000] <slinkcoding>
yeah, it has a great functional approach as I saw

[01:10:00.0000] <slinkcoding>
i found it particularly interesting because most of the js patterns and frameworks rely on the classical oo approach

[01:10:01.0000] <slinkcoding>
while js has strong functional roots

[01:10:02.0000] <slinkcoding>
and fab is a good example how to exploit it

[01:12:00.0000] <slinkcoding>
anyway, it was very sad to see so few people attended your session in bp

[01:13:00.0000] <slinkcoding>
not to mention, the communication of the hungarian office for w3c was not the best

[01:17:00.0000] <MikeSmith>
slinkcoding: I was pretty happy about that session

[01:18:00.0000] <MikeSmith>
there were about 45 people there

[01:18:01.0000] <MikeSmith>
but seemed like most everybody was fairly knowledgeable already about Web-platform stuff

[01:19:00.0000] <slinkcoding>
yeah

[01:19:01.0000] <MikeSmith>
e.g., everybody already seemed to have fairly detailed knowledge of Firebug

[01:20:00.0000] <slinkcoding>
okay, but that's somewhat also a problem 

[01:20:01.0000] <slinkcoding>
it means there were only developers

[01:20:02.0000] <slinkcoding>
but html is not only about developing

[01:20:03.0000] <slinkcoding>
i think

[01:23:00.0000] <slinkcoding>
i mean it'd had been nice to see designers too

[01:24:00.0000] <MikeSmith>
true

[01:24:01.0000] <MikeSmith>
but I'm not a designer,

[01:25:00.0000] <MikeSmith>
so personally I don't have as much to say about the design side

[01:25:01.0000] <slinkcoding>
i argue it

[01:25:02.0000] <slinkcoding>
you demonstrate all the power that html5 brings

[01:25:03.0000] <MikeSmith>
when I speak at events, people often ask me about stuff related to CSS stuff but I usually don't know what to tell them

[01:25:04.0000] <slinkcoding>
its also interesting for designers

[01:26:00.0000] <slinkcoding>
i see

[01:29:00.0000] <TabAtkinsTPAC>
Oh, huh.  FAB is... interesting.

[01:47:00.0000] <MikeSmith>
http://saxonica.blogharbor.com/blog/_archives/2010/11/4/4671786.html

[01:52:00.0000] <slinkcoding>
interesting point

[01:56:00.0000] <TabAtkinsTPAC>
slinkcoding: I... don't think so.  I mean, what does Kay *want*?  Supporting, say, MusicXML isn't just a matter of having an XML parser in the browser.  It involves a ton of coding and testing and such.  There's no way to just "make it available".

[01:58:00.0000] <TabAtkinsTPAC>
Had Kay actually gotten up to the mike and done the rant he wishes he did, he would have been met with a stunned silence, followed by a "You have no idea what you're trying to ask for, and I recommend you actually spend some time behind an implementation if you feel like doing that would be easy."

[01:59:00.0000] <MikeSmith>
TabAtkinsTPAC: i don't think it's a matter of Mike not having any idea what he's asking for

[01:59:01.0000] <MikeSmith>
he's an implementor

[01:59:02.0000] <MikeSmith>
he may not be a browser implementor

[02:00:00.0000] <TabAtkinsTPAC>
He's bringing up a list of things he thinks browsers should pay attention to.  Paying attention takes time and effort.  If we pay attention to what he wants, yet another person will be disappointed by what we no longer have time to pay attention to.

[02:01:00.0000] <MikeSmith>
interesting argument

[02:01:01.0000] <TabAtkinsTPAC>
It would be fine if his argument was "Browser vendors are paying attention to the wrong things.", but it's not.

[02:01:02.0000] <TabAtkinsTPAC>
He's saying "I want to be able to use anything I want, and so should everyone", which is incredibly naive, unless there's some subtle point I'm missing.

[02:02:00.0000] <Workshiva>
He also seems to miss the part where half the current browsers are open source, so he _can_ do anything he wants if he puts in the effort

[02:02:01.0000] <TabAtkinsTPAC>
Workshiva: Well, assuming his patches get accepted.

[02:03:00.0000] <Workshiva>
He can always fork

[02:03:01.0000] <MikeSmith>
true

[02:03:02.0000] <MikeSmith>
there's nothing preventing anybody from doing that

[02:03:03.0000] <MikeSmith>
he mentions XSLT 2.0 for example

[02:05:00.0000] <TabAtkinsTPAC>
Another possible interpretation of his argument is that browsers should instead expose some sort of fully general platform so anyone can add new stuff to the web.

[02:05:01.0000] <Workshiva>
Sort of like... plugins?

[02:05:02.0000] <MikeSmith>
one might just as well ask why there's not XSLT 2.0 support in libxslt

[02:05:03.0000] <TabAtkinsTPAC>
Precisely.  ^_^

[02:05:04.0000] <TabAtkinsTPAC>
(to workshiva)

[02:08:00.0000] <MikeSmith>
anyway, for better or worse, I think his comments are representative of the sentiments of quite a few other people

[02:10:00.0000] <MikeSmith>
and maybe would be good to try to understand why they are frustrated instead of just dismissing them out of hand

[02:12:00.0000] <slinkcoding>
maybe the point here is that how can w3c put pressure on vendors

[02:12:01.0000] <Workshiva>
But he doesn

[02:12:02.0000] <Workshiva>
't seem to care much for w3c either

[02:14:00.0000] <MikeSmith>
the "w3c" is the vendors

[02:14:01.0000] <MikeSmith>
the w3c is a bunch of working groups

[02:14:02.0000] <Workshiva>
A series of dudes

[02:15:00.0000] <MikeSmith>
heh

[02:15:01.0000] <MikeSmith>
well, with editors and chairs and working-group members

[02:15:02.0000] <MikeSmith>
and specs

[02:15:03.0000] <MikeSmith>
and the work is driven by the people who show up

[02:16:00.0000] <MikeSmith>
and who care to invest time in actual detailed technical discussions about the technologies

[02:17:00.0000] <MikeSmith>
and of course in doing things like writing test cases

[02:20:00.0000] <TabAtkinsTPAC>
As far as I can tell, he's just channeling generic XML rage, and doesn't realize that in trying to make the argument less about "But I want XML stuff!", he's making it incoherent.

[02:31:00.0000] <nessy>
is there a logged irc channel for the html wg?

[02:32:00.0000] <Lachy>
nessy, #html-wg on irc.w3.org

[02:32:01.0000] <nessy>
thanks!

[02:32:02.0000] <nessy>
anything happening at lyon yet with the html wg?

[02:33:00.0000] <Lachy>
the meeting is just starting today

[02:33:01.0000] <Lachy>
nessy, you can see what's happened already here http://krijnhoetmer.nl/irc-logs/html-wg/

[02:34:00.0000] <Lachy>
not much yet though, just sorting out agenda

[02:34:01.0000] <nessy>
ah thanks - just in a break now?

[02:35:00.0000] <zcorpan>
mmm cookies

[02:35:01.0000] <zcorpan>
/me realizes he hasn't been in #html-wg for quite some time

[02:36:00.0000] <Lachy>
there's also #html-wg2 now for the 2nd room.

[02:42:00.0000] <zcorpan>
not logged?

[02:42:01.0000] <Lachy>
zcorpan, RRSAgent is logging it to http://www.w3.org/2010/11/04-html-wg2-irc

[02:42:02.0000] <Lachy>
but that's not currently visible

[02:42:03.0000] <Lachy>
nothing has been said in there yet though

[02:49:00.0000] <zcorpan>
none of webkit/opera/gecko get the new select example right

[04:15:00.0000] <MikeSmith>
http://www.w3.org/html/wg/wiki/TPAC_2010_Agenda

[04:15:01.0000] <MikeSmith>
http://www.w3.org/2010/11/04-html-wg2-minutes.html

[05:36:00.0000] <MikeSmith>
nessy: we are having a discussion about media accessibility in about 20 minutes

[05:36:01.0000] <MikeSmith>
any chance you might be able to call in?

[05:36:02.0000] <nessy>
yeah, I know - not sure I will survive until then

[05:36:03.0000] <MikeSmith>
ok

[05:36:04.0000] <nessy>
it'll be midnight and I already have a headache

[05:37:00.0000] <nessy>
I'll watch on irc and see if it's necessary for me to call in, ok?

[05:37:01.0000] <nessy>
(until I fall asleep)

[05:38:00.0000] <MikeSmith>
nessy: sounds good

[06:21:00.0000] <Craig`>
hey guys, just used geolocation api for first time, was wondering if there was a way i could extract country from the position, so far i've just used latitude/longitude and redirected to google maps, but i'd like to know the country and then display a flag (just for learning purposes)

[06:23:00.0000] <annevk>
you'd either need to get some geodata from somewhere so you can compute it yourself

[06:23:01.0000] <annevk>
or find an HTTP API that does it for you

[06:23:02.0000] <annevk>
geolocation v2 might handle this automatically

[06:24:00.0000] <asmodai>
/me eyes tomshardware article @ http://www.tomshardware.com/news/ie9-chrome-firefox-safari-opera,11574.html

[06:26:00.0000] <Lachy>
annevk, that might work, so long as you're not trying to figure out which country some point in a disputed region belongs to. That would just be a political nightmare to deal with.

[06:28:00.0000] <annevk>
Lachy, something else...

[06:29:00.0000] <annevk>
Lachy, people told you me you said something about about URLs and did not follow up

[06:29:01.0000] <annevk>
Lachy, can you fix that?

[06:29:02.0000] <annevk>
Lachy, you are removing my reasons to yell at the IETF

[06:29:03.0000] <annevk>
Lachy, well, limiting for certain topics :)

[06:29:04.0000] <Lachy>
what?

[06:29:05.0000] <Lachy>
oh, right, probably about the about: URI scheme

[06:30:00.0000] <Lachy>
I need to follow up on that one day. It's just low priority

[06:30:01.0000] <annevk>
Lachy, I was told there are certain outstanding issues that need minor edits after which the draft needs to be submitted again to make it all work

[06:30:02.0000] <annevk>
Lachy, that is what I said

[06:30:03.0000] <annevk>
Lachy, if you are busy please tell them that

[06:30:04.0000] <annevk>
Lachy, because they can find someone else to do it

[06:31:00.0000] <Lachy>
I'll do it. It wasn't too much that was needed.

[06:34:00.0000] <annevk>
Lachy, great

[06:38:00.0000] <TabAtkinsTPAC>
Lachy: You're not at TPAC, right?

[06:39:00.0000] <annevk>
nope

[06:40:00.0000] <TabAtkinsTPAC>
kk.  I was hoping to discharge my debt.  ^_^

[06:40:01.0000] <Lachy>
TabAtkinsTPAC, yeah, unfortunately I wasn't allowed to go.

[06:40:02.0000] <Lachy>
thanks for reminding me about your debt though! :-)

[06:41:00.0000] <Lachy>
how much was it anyway? About 200Kr or something?

[06:41:01.0000] <TabAtkinsTPAC>
Yah, about a dinner worth.

[06:43:00.0000] <Lachy>
ok, nevermind. I'm sure you'll make it up to me one day. Maybe TPAC next year.

[06:43:01.0000] <Lachy>
or maybe just pay it forward to Anne or something

[06:44:00.0000] <Craig`>
i'm trying to use google maps api but i don't know what i'm doing wrong, could you help please.. http://www.webdevout.net/test?02g

[06:54:00.0000] <karlcow>
I wonder how many mimetypes are deployed and not described, same thing for protocol schemes. 

[06:56:00.0000] <karlcow>
I'm thinking about things like "webcal:" (Apple ®)

[06:59:00.0000] <othermaciej>
a lot

[06:59:01.0000] <othermaciej>
well, depends on what counts as "described"

[07:01:00.0000] <karlcow>
heh. indeed. described could be a spec somewhere at a URI or in IETF space. Let say that I had in mind described at IETF

[07:02:00.0000] <othermaciej>
if you mean registered in the appropriate registry, then a whole host of MIME types and URI schemes in common use are not registered

[07:03:00.0000] <karlcow>
http://en.wikipedia.org/wiki/URI_scheme#Unofficial_but_common_URI_schemes

[07:04:00.0000] <karlcow>
http://en.wikipedia.org/wiki/Mime_type#List_of_common_media_types

[07:06:00.0000] <karlcow>
ah and some are grouped in some IETF RFCs such as application/svg+xml http://tools.ietf.org/html/rfc3023#section-8.19

[07:06:01.0000] <karlcow>
"However, no

[07:06:02.0000] <karlcow>
   content type has yet been registered for SVG and so this media type

[07:06:03.0000] <karlcow>
   should not be used until such registration has been completed."

[07:10:00.0000] <karlcow>
/me sees that this has never been answered http://www.ietf.org/mail-archive/web/ietf-types/current/msg00999.html

[08:33:00.0000] <annevk>
jgraham, yt?

[08:33:01.0000] <annevk>
jgraham, testing discussion starting in #html-wg2

[08:37:00.0000] <annevk>
(he's away, as he told me, and then I forgot)

[11:17:00.0000] <karlcow>
selectAllChildren  has been dropped from the spec?

[11:18:00.0000] <karlcow>
or did it go in another draft?

[11:19:00.0000] <Ms2ger>
karlcow, Selection moved entirely

[11:19:01.0000] <karlcow>
Ms2ger: to where?

[11:20:00.0000] <karlcow>
found

[11:20:01.0000] <karlcow>
thanks

[11:20:02.0000] <Ms2ger>
Np

[11:48:00.0000] <Ms2ger>
Ooh, does Opera have a new date picker?

[13:12:00.0000] <romeo_>
Why is http://dev.w3.org/html5/spec/Overview.html dated ahead of time? (9 November 2010)

[13:20:00.0000] <Ms2ger>
romeo_, that's normal around publication time

[13:20:01.0000] <Ms2ger>
Presumably a WD is intended to be published on the ninth

[13:21:00.0000] <romeo_>
That would explain it. Thanks.

[15:20:00.0000] <hsivonen>
TabAtkins_: Mike Kay *is* an XSLT 2.0 implementor

[15:21:00.0000] <annevk>
publish another WD on the ninth?

[15:21:01.0000] <annevk>
that seems somewhat implausible

[15:24:00.0000] <Ms2ger>
Rather

[15:28:00.0000] <Ms2ger>
/me pulls in innerHTML

[15:29:00.0000] <annevk>
bitbucket should get some auto checkout place

[15:30:00.0000] <annevk>
in related trivia, I am not too happy with Hixie removing Selection from the draft without some kind of published alternative published elsewhere

[15:31:00.0000] <annevk>
we learned that with URLs it kind of sucks when that happens and we should have taken more note of that

[15:31:01.0000] <Hixie>
i waited til it was in the Range spec

[15:31:02.0000] <Hixie>
the text is unchanged

[15:32:00.0000] <annevk>
I guess if bitbucket was more usable it would have mattered less

[15:32:01.0000] <annevk>
pointing colleagues to http://bitbucket.org/ms2ger/dom-range rather than some kind of HTML readable version kind of sucks

[15:36:00.0000] <hsivonen>
TabAtkinsTPAC: I think it's not a good idea to suggest that XSLT 2.0 would be supported if enough people want it

[15:37:00.0000] <hsivonen>
because the value of "enough" would have to be quite large to offset the dependence on the PSVI

[15:37:01.0000] <TabAtkinsTPAC>
Still, if "enough" people do, it will be.

[15:38:00.0000] <hsivonen>
TabAtkinsTPAC: but it can give people wrong ideas, still

[15:38:01.0000] <TabAtkinsTPAC>
What's the PSVI?

[15:39:00.0000] <hsivonen>
TabAtkinsTPAC: Post-Schema Validation Infoset

[15:39:01.0000] <TabAtkinsTPAC>
o...k.

[15:39:02.0000] <hsivonen>
TabAtkinsTPAC: good for you if you haven't run into it before

[15:40:00.0000] <TabAtkinsTPAC>
^_^

[15:41:00.0000] <Hixie>
annevk: can you host a copy on html5.org?

[15:46:00.0000] <annevk>
yeah, that might be an idea

[15:47:00.0000] <annevk>
though not entirely sure how to update it all automatically

[15:47:01.0000] <annevk>
if Ms2ger has any ideas maybe we can sort that out next week

[15:58:00.0000] <spk>
hi everyone im doing some work for the ruby port of html5lib, is someone interested ?

[16:01:00.0000] <jarib>
spk: i would be interested

[16:02:00.0000] <jarib>
been a while since i looked at the code though

[16:02:01.0000] <spk>
jarib: cool, im pushing to https://github.com/spk/html5lib/commits/spk-ruby if you have time to review 

[16:03:00.0000] <spk>
i dont know mercurial sorry 

[16:03:01.0000] <gsnedders>
been a while since any looked at the code, I think :)

[16:03:02.0000] <AryehGregor>
If you know git, Mercurial is not hard to pick up.

[16:03:03.0000] <mgdm>
I find the commands in mercurial make a little more sense than in git

[16:04:00.0000] <mgdm>
(though I still use git)

[16:04:01.0000] <jarib>
spk: nice. won't have time to play until next week, but i'd certainly be willing to help out

[16:04:02.0000] <jarib>
amazes me that no one is looking into a portable C port though

[16:04:03.0000] <spk>
cool i you .patch files i can send it to you

[16:05:00.0000] <jarib>
or adding it to libxml

[16:05:01.0000] <jarib>
both options would make it very available from other langs

[16:05:02.0000] <jarib>
spk: git is better than patches :)

[16:05:03.0000] <jarib>
i'd like to learn more mercurial though

[16:05:04.0000] <spk>
maybe waiting that the spec is finalized 

[16:06:00.0000] <spk>
jarib: yeah :)

[16:10:00.0000] <spk>
is the Ruby code is generated by the python one ?

[16:11:00.0000] <gsnedders>
No

[16:11:01.0000] <spk>
s/python/Python/

[16:12:00.0000] <gsnedders>
The PHP, Python, and Ruby copies are all separate. The Python3 is basically generated by 2to3 from the Python one, though.

[16:12:01.0000] <spk>
oki sometime its like it was a translate

[16:12:02.0000] <gsnedders>
In what way?

[16:16:00.0000] <spk>
for example https://github.com/spk/html5lib/blob/0f3b0ead1a76c044fbbe8df411cf49e48598aa47/ruby/lib/html5/filters/rfc2046.rb

[16:19:00.0000] <spk>
and Python https://github.com/spk/html5lib/blob/master/python3/src/html5lib/filters/rfc2046.py 

[16:19:01.0000] <spk>
look the same :)

[16:22:00.0000] <Philip`>
spk: The Ruby one was initially created by manually translating from the Python version, I believe

[16:22:01.0000] <Philip`>
(and then it got mostly abandoned)

[16:22:02.0000] <jarib>
spk: what's your use case?

[16:23:00.0000] <spk>
oki 

[16:23:01.0000] <gsnedders>
Philip`: "mostly"? In what way not "totally"?

[16:23:02.0000] <Philip`>
gsnedders: There were subsequent time periods in which people worked on it

[16:23:03.0000] <spk>
im using the gem for a Ruby project

[16:24:00.0000] <spk>
https://github.com/spk/validate-website 


2010-11-05
[17:13:00.0000] <david_carlisle>
hsivonen: quite large to offset the dependence on the PSVI 

[17:13:01.0000] <david_carlisle>
But most people use a basic xslt 2 processor which has no PSVI dependencies (thank goodness:-)

[17:15:00.0000] <Hixie>
david_carlisle: thanks for the cc btw

[17:18:00.0000] <david_carlisle>
It's too late for us as we've gone to REC, but can you arrange to get  U+1F4A9 into an example in html5:-)

[17:19:00.0000] <Hixie>
no :-P

[17:19:01.0000] <Hixie>
some of the others maybe though :-)

[17:19:02.0000] <Hixie>
the HTML spec is full of in-jokes like that

[17:21:00.0000] <gsnedders>
heh.

[17:23:00.0000] <Hixie>
i need an arabic username for an example i'm writing

[17:23:01.0000] <Hixie>
something that isn't going to offend anyone

[17:27:00.0000] <david_carlisle>
hixie:  http://en.wikipedia.org/wiki/Muhammad_ibn_Musa_al-Khwarizmi ?

[17:28:00.0000] <david_carlisle>
no one could be offended by algebra

[17:28:01.0000] <Hixie>
that's a bit of a long name for a username

[17:28:02.0000] <Dashiva>
Just al-Khwarizmi then?

[17:28:03.0000] <Hixie>
by "arabic" i mean in the arabic script

[17:29:00.0000] <Hixie>
it's for a bidi example

[17:29:01.0000] <david_carlisle>
well its more than one name but I don't have the cultral background to cut it down (also I wasnt; sure if you wanted the arabic or ascii transliteration, hence wikipedia link which has both)

[17:29:02.0000] <Hixie>
and i learnt not to assume that something isn't offensive after learning about the weird rules hebrew has for numbering :-)

[17:29:03.0000] <Hixie>
david_carlisle: yeah, i've been crawling wikipedia for the last few minutes on the same quest :-)

[17:34:00.0000] <jcranmer>
I would suggest using Allah

[17:34:01.0000] <jcranmer>
but that might be slightly offensive

[17:35:00.0000] <Hixie>
i think i'll go with google translate's translation of "Ian"

[17:35:01.0000] <jcranmer>
أنتاركتيكا ?

[17:35:02.0000] <jcranmer>
(supposedly, Antaractica in Arabic)

[17:36:00.0000] <Dashiva>
TabAtkins_: I must say, you spent a lot of time shouting into the wind over at saxonica

[17:39:00.0000] <Hixie>
the next two people to say anything get their usernames used as examples in this example

[17:39:01.0000] <jcranmer>
what?

[17:39:02.0000] <jcranmer>
what is the example?

[17:40:00.0000] <hober>
yo

[17:42:00.0000] <Dashiva>
Good, safe to talk again

[17:42:01.0000] <Hixie>
http://www.whatwg.org/specs/web-apps/current-work/complete.html#the-bdi-element

[17:45:00.0000] <jcranmer>
so nothing I'll regret

[17:46:00.0000] <Hixie>
:-)

[17:46:01.0000] <Dashiva>
My name appears enough places on the internet as it is, it doesn't need to be in a html spec :)

[17:47:00.0000] <jcranmer>
bah, stupid social networking ruining my rankings in search results

[17:47:01.0000] <Hixie>
Dashiva: you're already in the spec :-P

[17:48:00.0000] <jcranmer>
Hixie: you should have been evil and used the last two usernames

[17:48:01.0000] <Hixie>
:-)

[17:51:00.0000] <Dashiva>
Hixie: Only the acknowledgements, surely

[17:55:00.0000] <Hixie>
no

[17:55:01.0000] <Hixie>
the word "Dashiva" doesn't appear in the acknowledgements

[17:56:00.0000] <Hixie>
but it does appear in the spec!

[17:56:01.0000] <Hixie>
has done for some time

[17:56:02.0000] <Hixie>
ok i gotta go. bbiab.

[17:58:00.0000] <jcranmer>
see ya

[18:36:00.0000] <wirepair>
everyone has probably already seen it but... http://www.iestolemylife.com/

[01:41:00.0000] <slinkcoding>
yo

[04:09:00.0000] <othermaciej>
Hixie: I am still really wishing for a way to hide the warning

[04:12:00.0000] <othermaciej>
/me would pay money

[04:14:00.0000] <Lachy>
which warning?

[04:15:00.0000] <annevk>
http://dev.w3.org/html5/spec/Overview.html

[04:16:00.0000] <Lachy>
oh, that doesn't show up in the mutlipage version

[04:16:01.0000] <othermaciej>
with no way to hide it, it makes the draft almost unreadable

[04:16:02.0000] <othermaciej>
I guess I should use the multipage

[04:17:00.0000] <othermaciej>
except the multipage is out of date :-/

[04:17:01.0000] <Lachy>
or use whatwg version

[04:17:02.0000] <annevk>
which is probably why it does not show up there

[04:18:00.0000] <othermaciej>
I find the spec by typing HTML5 into Google or Bing

[04:18:01.0000] <othermaciej>
in both cases the W3C Editor's Draft is on the first page of results and the WHATWG copy is not

[04:18:02.0000] <annevk>
wait what?

[04:18:03.0000] <nessy>
yeah, that surprised me, too, the other day

[04:18:04.0000] <annevk>
Google is part of our cabal

[04:18:05.0000] <Lachy>
oh, that sucks. So many people being directed to an inferior version :-(

[04:19:00.0000] <nessy>
I have it in my browser cache :)

[04:19:01.0000] <annevk>
/me thinks typing whatwg.org/c is faster than doing the whole search nonsense

[04:19:02.0000] <Lachy>
just keep http://whatwg.org/html5 in your browser history, so that when you start typing the address in your address bar, you get that as your first result in history.

[04:19:03.0000] <MikeSmith>
I had temporaritly turned off the automation for building the multipage version

[04:20:00.0000] <nessy>
I type "what" and it's there

[04:20:01.0000] <MikeSmith>
I guess I need to turn it back on

[04:20:02.0000] <Lachy>
oh, nice. I wasn't aware of the /c shortcut

[04:20:03.0000] <annevk>
same here

[04:20:04.0000] <annevk>
there's also whatwg.org/C for complete multipage

[04:20:05.0000] <MikeSmith>
I'm running the multipage rebuild right now, should be available in a few minutes

[04:20:06.0000] <annevk>
and whatwg.org/html is an alias for whatwg.org/html5

[04:22:00.0000] <othermaciej>
I think using a search engine with the term "html5" is totally reasonable and probably what most people would do, even if there are cool secret shortcuts

[04:23:00.0000] <MikeSmith>
update - http://dev.w3.org/html5/spec/

[04:23:01.0000] <MikeSmith>
*updated

[04:24:00.0000] <MikeSmith>
regenerated

[04:24:01.0000] <Lachy>
MikeSmith, shouldn't the warning from that multipage version link back to the multipage editor's draft?

[04:25:00.0000] <MikeSmith>
yeah, I suppose it should

[04:25:01.0000] <MikeSmith>
ideally

[04:25:02.0000] <MikeSmith>
I would need to make a change to the document build to have it do that

[04:25:03.0000] <Lachy>
also, is that warning only being added for use on the /TR/ version?

[04:25:04.0000] <MikeSmith>
yeah

[04:25:05.0000] <Lachy>
ok, so I assume it'll be removed from the editor's draft after that

[04:25:06.0000] <MikeSmith>
yep

[04:26:00.0000] <nessy>
excellent, that's what I expected

[04:26:01.0000] <nessy>
yesterday it was the other way around, which was kinda weird

[04:26:02.0000] <Lachy>
so how is the HTMLWG able to get away with that? Marcos told me he tried to do something similar recently with one of his widget specs, and was told the warning had to go.

[04:27:00.0000] <Lachy>
is the W3C changing their policy?

[04:27:01.0000] <MikeSmith>
we are having a discussion about it

[04:27:02.0000] <Lachy>
ok

[04:27:03.0000] <MikeSmith>
this could be considered a pilot maybe

[04:28:00.0000] <MikeSmith>
I didn't know that Marcos had run into the same problem

[04:28:01.0000] <MikeSmith>
but it's great to know that

[04:28:02.0000] <MikeSmith>
because I have already been pointing out that it's a general problem we need to fix

[04:29:00.0000] <MikeSmith>
we had problems in the past with other specs in the webapps wg

[04:29:01.0000] <MikeSmith>
one specifically was somebody reviewing a draft of the XHR1 spec

[04:29:02.0000] <Lachy>
MikeSmith, is there telcon facilities available for the HTMLWG meeting at tpac this year? I was thinking about calling in for the DRM topic later

[04:29:03.0000] <MikeSmith>
we have a voice line in the other room

[04:29:04.0000] <MikeSmith>
dunno where the DRM discussion is

[04:30:00.0000] <MikeSmith>
which room it's in 

[04:30:01.0000] <MikeSmith>
I mean

[04:30:02.0000] <Lachy>
I think the agenda said it was room B

[04:30:03.0000] <MikeSmith>
oh

[04:30:04.0000] <Lachy>
but I'll check...

[04:30:05.0000] <MikeSmith>
so in that case, if I am in the room, I can skype you in

[04:30:06.0000] <MikeSmith>
or somebody else could too

[04:30:07.0000] <Lachy>
oh, DRM is cancelled apparently

[04:30:08.0000] <MikeSmith>
we used skype to get somebody in for a discussion this morning and it worked fine

[04:31:00.0000] <MikeSmith>
oh

[04:31:01.0000] <MikeSmith>
well, if there are others you want to call into this afternoon

[04:31:02.0000] <MikeSmith>
just let me know

[04:31:03.0000] <MikeSmith>
and I will make sure we figure out a way to get you in

[04:31:04.0000] <Lachy>
so what will be on instead of the drm talk?

[04:31:05.0000] <Lachy>
agenda doesn't say.

[04:33:00.0000] <MikeSmith>
dunno

[04:34:00.0000] <MikeSmith>
maybe the wiki page is update

[04:34:01.0000] <MikeSmith>
*updated

[04:34:02.0000] <MikeSmith>
I'll look

[04:35:00.0000] <MikeSmith>
Lachy: I'm guessing the testing discussion mighr run over into that time

[04:35:01.0000] <MikeSmith>
as long as it's freed up now

[04:51:00.0000] <Rik`>
karlcow: http://www.opera.com/mobile/next/ videos are served with text/plain instead of video/webm and so Firefox 4 is using the ogg version instead

[05:01:00.0000] <Lachy>
Rik`, I'll let our web team know

[05:02:00.0000] <Rik`>
Lachy: thanks

[05:13:00.0000] <Lachy>
Rik`, the issue will be fixed shortly. Thanks

[08:33:00.0000] <lyhana8>
hi, is there a better way to express this kind of résumé information: http://pastebin.com/20sg4fx0

[08:34:00.0000] <lyhana8>
to express 1) a period of time (a duration), 2) and replace attribute `company`, `place`, `role-description` ?

[08:39:00.0000] <annevk>
lyhana8, that misses a closing tag

[08:46:00.0000] <MikeSmith>
hsivonen: 

[08:46:01.0000] <MikeSmith>
./htmlparser/src/nu/validator/htmlparser/impl/TreeBuilder.java:1228: method does not override a method from its superclass

[08:46:02.0000] <MikeSmith>
    @Override public void zeroOriginatingReplacementCharacter()

[08:46:03.0000] <MikeSmith>
     ^

[08:46:04.0000] <MikeSmith>
./htmlparser/src/nu/validator/htmlparser/impl/TreeBuilder.java:5230: method does not override a method from its superclass

[08:46:05.0000] <MikeSmith>
    @Override public boolean cdataSectionAllowed() throws SAXException {

[08:46:06.0000] <MikeSmith>
     ^

[08:48:00.0000] <hsivonen>
MikeSmith: oops, sorry

[09:19:00.0000] <lyhana8>
is there a better way to express résumé experience w/ HTML5? http://pastebin.com/h1VasdaJ

[09:20:00.0000] <annevk>
I think some people would tell you to use a microformat or maybe microdata

[09:20:01.0000] <annevk>
and it is somewhat ugly to have implied paragraphs imo, but it is allowed I guess

[09:20:02.0000] <lyhana8>
annevk: nothing in the HTML* recommendation about duration?

[09:21:00.0000] <lyhana8>
" implied paragraphs"?

[09:21:01.0000] <annevk>
no, there's no duration markup

[09:21:02.0000] <annevk>
you will get an implied paragraph around your <span>s

[09:22:00.0000] <annevk>
see "3.2.5.3 Paragraphs"

[09:26:00.0000] <lyhana8>
any plan for a <location>?

[09:26:01.0000] <lyhana8>
or should we use <adress> instead?

[09:29:00.0000] <annevk>
<address> gives contact information for the containing section

[09:29:01.0000] <annevk>
so depending on what it is for, it might be ok

[09:48:00.0000] <lyhana8>
annevk: just for the location, university name and country

[09:49:00.0000] <annevk>
prolly just use <p> and <br>

[09:57:00.0000] <lyhana8>
ok, thank

[11:12:00.0000] <karlcow>
scrivener an authoring tool helping authors to write books. With a feature for exporting as ePub http://www.youtube.com/watch?v=7cgJ8x-R86M

[12:34:00.0000] <jamesr_>
Philip`: yt?

[12:34:01.0000] <jamesr_>
Hixie: or you? got a canvas 2d question

[12:35:00.0000] <Ms2ger>
Just ask

[12:36:00.0000] <jamesr_>
what should happen when a page does .getImageData(20000, 20000, 5000000, 500000); ? the spec says that pixels outside the canvas should be transparent black, but do i really have to allocate a gigantic array full of transparent black pixels?

[12:38:00.0000] <Ms2ger>
Yes, I suppose

[12:38:01.0000] <jamesr_>
well that's obviously impossible

[12:38:02.0000] <jamesr_>
so my real question is what should we do about it

[12:38:03.0000] <Ms2ger>
Though you could use the hardware limitations clause

[12:39:00.0000] <jamesr_>
and do what? throw an exception, return an ImageData representing a smaller size, something else?

[12:39:01.0000] <Ms2ger>
Anything

[12:39:02.0000] <jamesr_>
that's not a very good answer

[12:40:00.0000] <Hixie>
we can't really define what you do when you hit hardware limitations, since you may be constrained in peculiar ways

[12:40:01.0000] <Ms2ger>
User agents may impose implementation-specific limits on otherwise unconstrained inputs, e.g. to prevent denial of service attacks, to guard against running out of memory, or to work around platform-specific limitations.

[12:41:00.0000] <Hixie>
what you _should_ do is return a gigantic array. Ideally, you'd do so by returning a lazy sparse array.

[12:41:01.0000] <Hixie>
But what you'll probably do is throw an exception like NOT_SUPPORTED_ERR

[12:42:00.0000] <jamesr_>
having a lazily backed canvaspixelarray would be handy

[12:55:00.0000] <Philip`>
Hooray, it's Bonfire Night, where we celebrate the capture, torture, unjust trial, mutilation and public execution of a man who fought against an oppressive government, by burning his effigy every year for four hundred years

[12:57:00.0000] <Hixie>
you don't have to celebrate it

[12:59:00.0000] <Philip`>
But the fireworks are pretty

[12:59:01.0000] <AryehGregor>
To be fair, presumably the government he wanted to institute would have been about equally oppressive, by today's standards.

[13:01:00.0000] <Ms2ger>
Real revolution is when the offices change, not just the office holders?

[13:01:01.0000] <AryehGregor>
On the other hand, if the British instead wanted to celebrate the successful overthrow of tyrannical British rule, you could always move the holiday to July 4.  :)

[13:01:02.0000] <jcranmer>
real revolution is when you change the center of gravity

[13:01:03.0000] <Ms2ger>
real revolution is when you change gravity

[13:02:00.0000] <jcranmer>
or perhaps you could do nothing

[13:02:01.0000] <jcranmer>
and let the Earth revolve

[13:02:02.0000] <jcranmer>
it's so much fun to take advantage of polysemy

[13:02:03.0000] <jcranmer>
and as much fun to come up with a reason to use that word

[13:31:00.0000] <paul_irish>
Just a PSA: We've been using the #html5 channel for developer support and education, recently. If anyone wants to come over, idle, and share knowledge that's cool. Also feel free to route people there from here. :)

[13:41:00.0000] <tabatkins>
/me is stuck in the Brussels airport for the next 14 hours.

[13:43:00.0000] <Ms2ger>
Do enjoy the waffles

[13:44:00.0000] <tabatkins>
If I find some waffles, I'll enjoy the hell out of them.

[13:44:01.0000] <tabatkins>
Sounds like something good to have in about 8 hours, when it's breakfast time.

[13:58:00.0000] <jamesr_>
tabatkins: how does that even happen?

[14:12:00.0000] <tabatkins>
jamesr_: Originally I was going to fly to Brussels and arrive at 8am tomorrow, to catch my plane back to the states leaving at 11am.  But I was afraid of getting held up by striking, so instead I took a train to Brussels tonight.  Now I have to wait til 11am tomorrow to fly out.

[14:12:01.0000] <AryehGregor>
/me enables tcpcrypt on his computer, for the heck of it: http://tcpcrypt.org/

[14:12:02.0000] <tabatkins>
11am european time, that is.

[14:12:03.0000] <AryehGregor>
 Your tcpcrypt session ID is: BF3894EA9BFD9A00A4D5C30B6A175E951E697E96 

[14:15:00.0000] <Philip`>
AryehGregor: Does it work in a way that doesn't e.g. add an extra roundtrip latency to every new TCP connection?

[14:18:00.0000] <tabatkins>
Philip`: Because it probes for tcpcrypt support, I suspect there's an extra rtt.

[14:18:01.0000] <tabatkins>
/me can't seem to figure out how to install it.  The binary is some sort of ".linux" file.

[14:18:02.0000] <tabatkins>
Also: Bwahaha - 

[14:18:03.0000] <tabatkins>
http://www.reddit.com/r/programming/comments/dzww6/who_edits_the_w3c_specs_they_look_like_a_ransom/

[14:24:00.0000] <tabatkins>
Hrm, upgrading to Lucid somehow broke the "hold middle-click to make the nub scroll the page" behavior.

[15:29:00.0000] <hsivonen>
I like the stray comment end that renders on http://www.iestolemylife.com/

[15:30:00.0000] <annevk>
tomorrow is going to be one of my lesser days this week

[15:30:01.0000] <annevk>
I asked the hotel to wake me up at 4:45AM

[15:31:00.0000] <tabatkins>
hsivonen: The lack of nestable comments strikes again!

[15:32:00.0000] <annevk>
whenever I read anything about waffles (as in the logs) I am now inclined to ask "do you mean carrots?"

[15:40:00.0000] <annevk>
kind of sad that no standards suck episodes were recorded

[15:40:01.0000] <paul_irish>
aww bummer

[15:40:02.0000] <annevk>
somehow this TPAC felt way more busy than the last one

[15:40:03.0000] <annevk>
and there was more commuting, which did not help

[15:50:00.0000] <Hixie>
man, i can't even count how much time IE has wasted in terms of the impact it's had on our spec on html

[15:50:01.0000] <Hixie>
s/on/for/

[16:09:00.0000] <jamesr_>
i've got a question about table rendering

[16:10:00.0000] <jamesr_>
the question is how to render a table with multiple <caption>s

[16:10:01.0000] <jamesr_>
http://www.whatwg.org/specs/web-apps/current-work/multipage/tabular-data.html#table-model says "Associate the first caption element child of the table element with the table. If there are no such children, then it has no associated caption element." which implies there's only one

[16:10:02.0000] <jamesr_>
in the case of <table><caption>one</caption><caption>two</caption></table>, gecko and webkit will only render the 'two' caption

[16:10:03.0000] <jamesr_>
opera renders both

[16:11:00.0000] <jamesr_>
if the 'one' caption is positioned then gecko, webkit, and opera all render it

[16:11:01.0000] <annevk>
http://www.youtube.com/watch?v=Cf06WJQ4FnE lol

[16:11:02.0000] <annevk>
jamesr_, that is actually a CSS question

[16:12:00.0000] <annevk>
jamesr_, what HTML5 there says just has affect on the semantics of the table

[16:12:01.0000] <jamesr_>
if only css actually described how tables should be rendered :(

[16:12:02.0000] <annevk>
s/affect/effect/

[16:12:03.0000] <annevk>
jamesr_, yeah, someone should fix that

[16:12:04.0000] <jamesr_>
do any of y'all have opinions on what should happen here?

[16:13:00.0000] <annevk>
better to ask www-style

[16:14:00.0000] <annevk>
CSS actually says that a table can have multiple captions

[16:14:01.0000] <annevk>
"Specifies a caption for the table. All elements with 'display: table-caption' must be rendered, as described in section 17.4."

[16:15:00.0000] <annevk>
but then 17.4 does not define much

[16:15:01.0000] <jamesr_>
i'm not sure if 17.4 is saying that one caption box is generated per caption, or one per caption-side

[16:16:00.0000] <jamesr_>
also given that webkit/gecko do not render captions past the first one i'm a little wary of compat issues if i start rendering multiple ones

[16:16:01.0000] <jamesr_>
looks like www-style is the next step. thanks

[16:16:02.0000] <annevk>
it's been too long since I looked at the whole formatting/box model

[16:18:00.0000] <jamesr_>
tabatkins: you have any opinions on ^^ before i spam the list?

[16:19:00.0000] <jamesr_>
i kinda think 17.4 agrees more with opera here, actually

[16:50:00.0000] <tabatkins>
jamesr_: Spam the list.  I'm not certain about the details.


2010-11-06
[17:02:00.0000] <gsnedders>
I got bored in a lecture about strings today. I ended up implementing a LL(1) parser instead. I'm sure this says something about my course…

[17:03:00.0000] <Philip`>
Strings as in string theory?

[17:04:00.0000] <gsnedders>
No, as in the string type in Python.

[17:04:01.0000] <jcranmer>
gsnedders: that's boring

[17:04:02.0000] <jcranmer>
go for an LALR(1) parser

[17:05:00.0000] <gsnedders>
jcranmer: WebIDL has a LL(1) grammar though

[17:08:00.0000] <jcranmer>
but LR(1) is more fun to code

[17:14:00.0000] <gsnedders>
jcranmer: Well, maybe. But less useful for me now.

[17:15:00.0000] <gsnedders>
(Well, I mean, I could use a LR parser, but it's needless complexity)

[17:17:00.0000] <jcranmer>
obviously, you live in Europe

[17:28:00.0000] <tabatkins>
So, anyone know a quick way I can spoof myself as being in the US so I can watch netflix?

[17:30:00.0000] <jamesr_>
VPN to work?

[17:41:00.0000] <Philip`>
tabatkins: Set up an EC2 virtual machine and install a proxy on it?

[17:41:01.0000] <Philip`>
(where "Set up" means "boot" and probably only takes ten minutes)

[19:24:00.0000] <JonathanNeal>
Can I write my own namespace and use it as a namespace uri?

[19:24:01.0000] <JonathanNeal>
Like document.createElementNS('http://localhost/jon.xml', 'jon'); ?  I've been looking through the docs on how to do this.

[19:28:00.0000] <Philip`>
As far as web browsers are concerned, namespaces are just meaningless strings

[19:28:01.0000] <Philip`>
It doesn't even need to be a syntactically valid URI

[19:37:00.0000] <JonathanNeal>
Philip`, when I make it null, I notice I lose the ability to work with the element in Firefox 2.

[19:39:00.0000] <JonathanNeal>
Basically --- I'm seeing if there's something someone has overlooked when it comes to getting html5 elements to work in firefox 2.

[19:42:00.0000] <JonathanNeal>
For instance, http://sandbox.thewikies.com/xmlns/ --- exact same code, difference being the xmlns.

[19:44:00.0000] <JonathanNeal>
In Chrome, Firefox 3, Firefox 2, the null namespaced element is totally bunk.

[19:51:00.0000] <tabatkins>
JonathanNeal: Why are you caring about FF2?

[19:51:01.0000] <JonathanNeal>
Well, it's a small, small niche population of browsers that got left out of html5.

[19:51:02.0000] <tabatkins>
Unrelated: I'm having fun playing around with the mandelbrot set in canvas.  I'll have a new blog background in a few minutes.

[19:51:03.0000] <tabatkins>
JonathanNeal: ...and?

[19:51:04.0000] <JonathanNeal>
And I wanted to help 'em out.

[19:52:00.0000] <tabatkins>
Why?  They're scarily insecure, not to mention out-of-date.

[19:53:00.0000] <nimbupani>
tabatkins: I knew there is a very minor population stuck of solaris machines with custom build of Firefox 2 

[19:53:01.0000] <tabatkins>
That doesn't change the above.  Sucks that they're stuck with some custom version of a very old, insecure browser.  They should change.

[19:54:00.0000] <JonathanNeal>
I could say the same for ie6, 7, and 8, but we took the time to hack them into presentational awareness of html5.

[19:54:01.0000] <JonathanNeal>
I'm just trying the same thing with Firefox 2.

[19:56:00.0000] <tabatkins>
You really can't say the same.  They're certainly old and insecure, but they're not a tiny population.  They demand catering purely due to their numbers.

[19:57:00.0000] <tabatkins>
You can do what you want, I'm just saying I think it's a waste of time.  ^_^

[19:58:00.0000] <JonathanNeal>
So I'm trying to learn more about how createElementNS works.

[19:58:01.0000] <JonathanNeal>
because document.createElementNS('http://www.w3.org/1999/xhtml', 'section'); and document.createElementNS('html5', 'section'); produce very different kinds of elements.

[20:02:00.0000] <JonathanNeal>
I've been trying to get any xmlns elements to work in firefox 2, actually.

[20:16:00.0000] <tabatkins>
Reasonably happy with my new blog background.  I'll at least keep it up for a little while: http://www.xanthir.com/blog/

[20:34:00.0000] <aho>
tabatkins, http://i.imgur.com/RQLSj.png <- are you really satisfied with that? :>

[20:35:00.0000] <aho>
you probably shouldn't generate ~160kb of markup... especially not if it's that slow and uncompressed :f

[20:37:00.0000] <aho>
http://i.imgur.com/y5EVt.png <- looks a lot better while loading

[20:46:00.0000] <nimbupani>
tabatkins website is a new performance metric for canvas 

[20:50:00.0000] <tabatkins>
aho: Interesting.  The background isn't working in FF, but it's not throwing errors either.

[20:50:01.0000] <tabatkins>
Hrm.

[20:52:00.0000] <aho>
looks better now

[20:52:01.0000] <aho>
but still awful ;>

[20:52:02.0000] <tabatkins>
aho: And yeah, I need to actually implement an archiving functionality, rather than just sending out every post I've written.

[20:52:03.0000] <tabatkins>
Look at it in Chrome instead.  ^_^

[20:54:00.0000] <tabatkins>
aho: It'll look better in Firefox now, since FF isn't doing the canvas for some reason.

[20:55:00.0000] <aho>
that style block at the very bottom... put that at the top

[20:55:01.0000] <aho>
i'm using noscript

[20:55:02.0000] <tabatkins>
Nah, that's not it.  FF isn't doing the canvas on my machine either.

[20:57:00.0000] <aho>
try window.onload

[20:57:01.0000] <tabatkins>
Ah, that does it.

[20:58:00.0000] <tabatkins>
It also reveals that Chrome's canvas handling is *way* faster than FF's.

[20:58:01.0000] <tabatkins>
So I need to put in some dynamic scaling.

[21:10:00.0000] <aho>
first you should put all your styles at the top

[21:10:01.0000] <aho>
it's better if the site looks right right off the bat

[21:11:00.0000] <aho>
and not 10, 20, or even 30 seconds later :>

[21:12:00.0000] <tabatkins>
My styles are at the top.  The only thing at the bottom is the style for the <canvas>, also at the very bottom.

[21:13:00.0000] <aho>
all styles should be at the top

[21:13:01.0000] <aho>
google says so, yahoo says so, and i also say so :>

[21:14:00.0000] <tabatkins>
That, um, doesn't matter.  The style at the bottom doesn't reflow anything.

[21:16:00.0000] <aho>
well, before you were setting the background to black there... that looked pretty bad without javascript, that is

[21:16:01.0000] <tabatkins>
Yup, and I fixed that.

[21:46:00.0000] <tabatkins>
Dynamic scaling works great now.  FF properly throttles itself down to an extremely low level, while Chrome gets to render at closer to the initial settings on my comp.

[21:48:00.0000] <tabatkins>
That was a fun experiment.

[22:01:00.0000] <annevk>
while Skype Access is somewhat expensive, not having to deal with the silly login screens is awesome

[22:02:00.0000] <annevk>
also, yay for waking up ridiculously early

[15:45:00.0000] <gsnedders>
Hmm, interesting…

[15:46:00.0000] <gsnedders>
Accessing the HTML element in a same-origin frameset document is fine, but accessing the FRAMESET element in the same document throws SECURITY_ERR

[15:46:01.0000] <gsnedders>
Someone explain?

[15:57:00.0000] <gsnedders>
Oh, duh

[15:57:01.0000] <gsnedders>
It's not SECURITY_ERR

[15:57:02.0000] <gsnedders>
It's just the iframe hasn't loaded yet :)


2010-11-07
[01:41:00.0000] <gsnedders>
So trying to use testharness.js, I want a bunch of tests to run after an iframe has loaded. How do I do this?

[01:42:00.0000] <annevk>
invoke a function from onload that invokes test.step

[01:43:00.0000] <annevk>
see the XHR test cases, they deal with asynchronous tests

[01:45:00.0000] <gsnedders>
But I thought test.step only reported one test back, and if the test object has already failed, it gives up.

[01:47:00.0000] <annevk>
test.step just makes sure exceptions are caught within the test framework

[01:47:01.0000] <annevk>
it does not do any reporting

[01:49:00.0000] <gsnedders>
But Test.prototype.step begins with: if (this.status !== null) return

[01:50:00.0000] <annevk>
sure, currently stuff stops when something has failed

[01:55:00.0000] <gsnedders>
Hmm, could call test() from within test.step…

[01:56:00.0000] <gsnedders>
Or not even that, really…

[01:57:00.0000] <gsnedders>
http://software.hixie.ch/utilities/js/live-dom-viewer/?%3C!DOCTYPE%20html%3E%0D%0A%3Cdiv%20id%3Dlog%3E%3C%2Fdiv%3E%0D%0A%3Cscript%20src%3Dhttp%3A%2F%2Ftest.w3.org%2Fresources%2Ftestharness.js%3E%3C%2Fscript%3E%0D%0A%3Cscript%3E%0D%0Avar%20t%20%3D%20async_test(%22Simple%20async%20test%22)%3B%0D%0A%20%20%20%20function%20windowLoad()%0D%0A%20%20%20%20%7B%0D%0Atest(function()%7Bassert_true(false)%7D%2C%20%22foobar%22)%3B%0D%0Atest(function()%7Bassert_true

[01:57:01.0000] <gsnedders>
How evil is that?

[01:58:00.0000] <gsnedders>
jgraham: for when you return see above

[01:00:00.0000] <Ms2ger>
gsnedders, incomplete URL

[01:01:00.0000] <gsnedders>
http://software.hixie.ch/utilities/js/live-dom-viewer/saved/692

[01:04:00.0000] <annevk>
http://pivotfinland.com/frozendefence/ is pretty cool

[01:05:00.0000] <annevk>
gsnedders, http://tc.labs.opera.com/apis/XMLHttpRequest/open-url-javascript-window-2.htm

[01:06:00.0000] <gsnedders>
annevk: So? I don't want several hundred tests being reported as one.

[01:10:00.0000] <annevk>
so you start multiple async tests

[01:11:00.0000] <gsnedders>
annevk: That's kinda cool…

[01:24:00.0000] <gsnedders>
annevk: Also, a productivity killer :)

[05:59:00.0000] <karlcow>
http://blogs.adobe.com/designandweb/2010/10/improving-the-web-for-digital-publishing.html

[06:03:00.0000] <Aleoss>
ReCAPTCHA is broken. http://www.darkreading.com/authentication/security/vulnerabilities/showArticle.jhtml?cid=sem_edit_Security&articleID=226700514&wc=4

[08:02:00.0000] <Rik`>
karlcow: where is the syntax/source code ? :(

[08:03:00.0000] <Rik`>
(for adobe/text wrapping)

[08:13:00.0000] <karlcow>
Rik`: oui exactement. C'est pour cela que j'ai laissé un commentaire au moins pour une spec

[08:13:01.0000] <karlcow>
>By karl - 2:10 PM on November 7, 2010   Reply

[08:13:02.0000] <karlcow>
Did you publish a draft specification document somewhere about it? Could you send it as a W3C Member Submission and/or Editor’s draft to CSS WG. The earlier, the better.

[08:14:00.0000] <Rik`>
that would be a great effort, but even an example would be enough for now

[08:57:00.0000] <AryehGregor>
Philip`, tcpcrypt adds no latency if the other side doesn't support it.  It adds one round-trip on the first connection to a server if both sides support it, but the resulting secret can be cached, so not every connection.

[09:13:00.0000] <AryehGregor>
Okay, Firefox 4's "switch to tab" feature is really annoying.  Often I have one tab open talking about some site, then I want to open a new tab with that site in it, but the first option is the already-open tab I just left, so I have to go down to the second option . . .

[09:26:00.0000] <AryehGregor>
Looks like tcpcrypt broke something or other.

[09:26:01.0000] <AryehGregor>
Cool idea, though.

[09:26:02.0000] <AryehGregor>
/me turns it off

[10:50:00.0000] <AryehGregor>
Is it just me, or does Google autocorrect searches too aggressively these days?

[10:50:01.0000] <AryehGregor>
"Did you mean: firefox 2 market share wikipedia"  No, I meant "wikimedia", not "wikipedia", that's why I typed "wikimedia".

[10:54:00.0000] <Philip`>
I find it irritating since I usually don't even notice it's done the auto-correction

[10:54:01.0000] <Philip`>
so I get confused as to why the search results all seem unrelated to what I wanted

[11:02:00.0000] <AryehGregor>
I generally notice, but it's an extra click to fix it.

[11:02:01.0000] <AryehGregor>
But it does that *way* too much.

[11:02:02.0000] <AryehGregor>
Searching for even a slightly obscure term will often trigger it if it happens to be spelled similarly to a common term.

[11:06:00.0000] <AryehGregor>
There's something to be said for predictability.

[11:06:01.0000] <AryehGregor>
Programs that try to be too clever can be annoying.

[11:07:00.0000] <Ms2ger>
Programs can be annoying.

[11:07:01.0000] <smaug____>
Google's "autocorrect" usually does something wrong for me. Same with Google Instant (which is why I disabled it pretty fast)

[11:07:02.0000] <Ms2ger>
Fixed that for you

[11:28:00.0000] <Lachy>
AryehGregor, re google autocorrect, don't you mean carrots? http://knowyourmeme.com/i/000/081/068/original/5Q9Ok.png?1288919403

[11:41:00.0000] <annevk>
idea: move the obsolete IDL interfaces into the other interface blocks (when one exists) shielded with class="impl obsolete"

[11:41:01.0000] <annevk>
or some such

[11:45:00.0000] <Ms2ger>
Why?

[11:46:00.0000] <annevk>
the current setup is more complicated than needed

[11:46:01.0000] <annevk>
and hence confuses developers

[11:48:00.0000] <annevk>
it's not that important however

[11:57:00.0000] <Dashiva>
Roy works for Adobe now? Interesting.

[12:00:00.0000] <Dashiva>
/me ponders the absurdity of requiring minimum contrast levels for greyed-out text

[12:07:00.0000] <Dashiva>
And IRC is inaccessible to blind people? Really?

[12:11:00.0000] <annevk>
I've seen blind people use it successfully

[12:11:01.0000] <annevk>
quite a few actually

[12:12:00.0000] <Dashiva>
According to Shelley, it isn't

[12:13:00.0000] <heycam>
yeah, to be honest, i would have thought that irc would be one of the more accessible communication mediums

[12:14:00.0000] <annevk>
I thought Shelly could see?

[12:15:00.0000] <othermaciej>
blind people are on W3C IRC all the time

[12:15:01.0000] <othermaciej>
during meetings and everything

[12:18:00.0000] <Dashiva>
Maybe she was saying the IRC logs website is inaccessible, but that seems equally odd

[12:36:00.0000] <AryehGregor>
I've spoken to blind people on IRC.

[12:36:01.0000] <AryehGregor>
At least one.

[12:36:02.0000] <AryehGregor>
He did write "smile" instead of ":)", though.  Apparently because his screen-reader read ":)" as "colon right parenthesis" or something.

[12:36:03.0000] <AryehGregor>
Emoticons are kind of fail for blind people, I guess.

[12:37:00.0000] <Dashiva>
I've been wondering about that

[12:37:01.0000] <Dashiva>
I would assume the basic smileys are pervasive enough that screen readers would handle them, but at the same time I keep hearing about how screen readers don't support so many apparently obvious things

[12:38:00.0000] <AryehGregor>
Presumably the screen-reader could translate, just like some IM programs annoyingly translate them to images.

[12:38:01.0000] <AryehGregor>
But yeah, screen-readers seem to just be garbage.

[12:38:02.0000] <Dashiva>
(Or not necessary don't support, but hide it behind non-default settings)

[12:39:00.0000] <AryehGregor>
Maybe there are too few blind people to lend them to much competition, or maybe they have to focus all their resources on heuristics to decide what text to read instead of how to read it, or something.

[12:39:01.0000] <AryehGregor>
But reading bold and italics the same as regular text?  That just seems . . . I dunno.

[12:39:02.0000] <Dashiva>
Especially since replacing <i> and <b> was phrased by many (not all, of course) as an accessibility thing

[12:40:00.0000] <annevk>
gregory told me the other day he uses some kind of weird config file to make a mapping from :-) to "smile"

[12:40:01.0000] <annevk>
which seems annoying

[12:40:02.0000] <annevk>
until then he did not know what o_O meant either

[12:40:03.0000] <Dashiva>
"emoticon: left-facing noseless smiling face"

[12:41:00.0000] <Dashiva>
I bet unicode has good descriptions we could reuse

[12:41:01.0000] <AryehGregor>
Emoticons must be pretty opaque if you've been blind your whole life.

[12:41:02.0000] <AryehGregor>
(presumably not if you lost your sight later in life)

[12:41:03.0000] <AryehGregor>
Although I guess you can figure out from context eventually.

[12:41:04.0000] <Dashiva>
I actually have that problem as a non-disabled user

[12:42:00.0000] <Dashiva>
When I communicate with heavy MSN users, they will use complex smileys and my client doesn't translate

[12:42:01.0000] <Dashiva>
I ran into ({) earlier this week

[12:43:00.0000] <AryehGregor>
Oh, well, that's because they're really writing in some markup language that just masquerades as plaintext.

[12:44:00.0000] <Dashiva>
Unicode will save us

[12:44:01.0000] <AryehGregor>
Actually, it includes explicit markup for things like bold, so why doesn't it mark up smilies explicitly?

[12:44:02.0000] <AryehGregor>
Will Unicode be able to keep up with lists like this?  http://www.astro.umd.edu/~marshall/smileys.html

[12:44:03.0000] <Dashiva>
I think w3c worked on some kind of emoticon markup language

[12:44:04.0000] <AryehGregor>
******:-)       Marge Simpson

[12:45:00.0000] <AryehGregor>
:-F             Bucktoothed vampire with one tooth missing

[12:45:01.0000] <Dashiva>
Unicode is outpacing us by far

[12:45:02.0000] <mgdm>
MSN messenger can be set up to intercept more or less any bit of text and replace it with an emoticon of some sort

[12:45:03.0000] <Dashiva>
POUTING CAT FACE

[12:46:00.0000] <AryehGregor>
/me places an order that "is 100% secure using SSL technology."

[12:46:01.0000] <Dashiva>
#unicodebandnames is my favorite twitter hashtag

[12:47:00.0000] <annevk>
except that without an iPhone with emoji enabled Unicode emoticons are hard

[12:47:01.0000] <Ms2ger>
/me is reminded of http://ln.hixie.ch/?start=1031829070&count=1

[12:47:02.0000] <Dashiva>
Doesn't the iPhone have an emoticon shortcut panel?

[12:48:00.0000] <AryehGregor>
!⃤

[12:48:01.0000] <AryehGregor>
Doesn't render well in my font.

[12:48:02.0000] <AryehGregor>
!⃤     

[12:48:03.0000] <Dashiva>
Narrow exclamation point and narrow box for me

[12:49:00.0000] <annevk>
Dashiva, yes, if you download some app to enable it

[12:49:01.0000] <annevk>
Dashiva, I did this last weekend, I'm still discovering new icons

[12:49:02.0000] <annevk>
euh, last week

[12:49:03.0000] <AryehGregor>
Sadly, the more intricate Unicode icons really need a large font size to display properly.

[12:50:00.0000] <hendry>
Is SVG in HTML5 just done with an img tag? http://svg.dabase.com/ -- or can someone point me out to a better example (that works in FF)?

[12:50:01.0000] <AryehGregor>
hendry, you can do SVG with an img tag in all reasonably recent browsers that support SVG, except Firefox 3.x.  Firefox supports it in 4.0.

[12:50:02.0000] <AryehGregor>
For earlier Firefox versions, you have to use <object> or <iframe>, IIRC.

[12:50:03.0000] <AryehGregor>
(which both stink)

[12:51:00.0000] <Hixie>
<!DOCTYPE html><title>SVG in HTML</title><svg><circle cx=10 cy=10 r=10 /></svg>

[12:51:01.0000] <Ms2ger>
/me gives Hixie a badge saying "I live on the edge"

[12:51:02.0000] <AryehGregor>
By "that works in FF" I assume he means "that works in final released versions of Firefox without turning on the HTML5 parser in about:config", but maybe I'm wrong.

[12:52:00.0000] <hendry>
Hixie: inline doesn't work for me :) http://svg.dabase.com/inline.html

[12:53:00.0000] <AryehGregor>
hendry, it does in Firefox 4, and IE9, and some version of WebKit somewhere.

[12:53:01.0000] <Hixie>
the above works for me in chrome, didn't test ff

[12:53:02.0000] <AryehGregor>
Oh, it works in Chrome too now?

[12:53:03.0000] <AryehGregor>
Seems to.

[12:53:04.0000] <AryehGregor>
Just dev channel, or has that been pushed out to beta/stable yet?

[12:53:05.0000] <hendry>
Chrome 9.0.570.1 renders half my face with http://svg.dabase.com/inline.html

[12:53:06.0000] <Hixie>
what is this "stable" you speak of? :-)

[12:53:07.0000] <AryehGregor>
inline.html looks fairly broken in HTML.

[12:53:08.0000] <AryehGregor>
Er.

[12:53:09.0000] <annevk>
AryehGregor, the iPhone just renders the glyphs using an image

[12:53:10.0000] <AryehGregor>
In Chrome.

[12:54:00.0000] <annevk>
taking fonts to a whole new level

[12:54:01.0000] <AryehGregor>
annevk, like a colored bitmap image?  A PNG or something?

[12:54:02.0000] <annevk>
something like that

[12:54:03.0000] <AryehGregor>
http://svg.dabase.com/ works in Chrome, but not Firefox 4 for some reason.

[12:55:00.0000] <hendry>
/me sighs

[12:55:01.0000] <AryehGregor>
Oh, I guess SVG-in-img hasn't been turned on yet in the Firefox 4 betas.

[12:55:02.0000] <AryehGregor>
Man, I wish they'd get with the program and adopt a Chrome model for releases, at least something like the dev channel.

[12:55:03.0000] <Hixie>
firefox has a dev channel

[12:56:00.0000] <Hixie>
it's called "nightly builds"

[12:56:01.0000] <Hixie>
and they autoupdate just like chrome

[12:56:02.0000] <Hixie>
it's what i use

[12:56:03.0000] <AryehGregor>
They auto-update?  I didn't know that.

[12:56:04.0000] <AryehGregor>
My betas don't even seem to auto-update.

[12:56:05.0000] <annevk>
mine do

[12:56:06.0000] <annevk>
well, I don't use beta

[12:56:07.0000] <Hixie>
well it's not as silent as the chrome updates, but yes, they have (chatty) autoupdate

[12:56:08.0000] <hendry>
most importantly it doesn't work on a mobile OS like Android, so I guess I need to experiment with <object>

[12:56:09.0000] <AryehGregor>
What platform?

[12:56:10.0000] <annevk>
/me fetched something wrong http://ftp.mozilla.org/pub/mozilla.org/firefox/nightly/latest-trunk/

[12:57:00.0000] <Hixie>
mac

[12:57:01.0000] <hendry>
Hixie: i doubt http://nightly.mozilla.org/ updates on Linux

[12:57:02.0000] <Hixie>
but they do it on windows and linux

[12:57:03.0000] <annevk>
from*

[12:57:04.0000] <AryehGregor>
I've used nightlies on Linux and they don't seem to auto-update.

[12:57:05.0000] <AryehGregor>
Chrome gives me a .deb that installs a software source that shows up with all the other updates.

[12:57:06.0000] <AryehGregor>
That's how it should be done.

[12:58:00.0000] <Hixie>
oh you have to install it locally, it won't do it using the package thingy, yeah

[12:58:01.0000] <Ms2ger>
AryehGregor++

[12:58:02.0000] <AryehGregor>
Firefox nightlies are a .tar.bz.

[12:58:03.0000] <AryehGregor>
Doesn't seem likely to auto-update.

[12:59:00.0000] <AryehGregor>
(although in principle it could)

[12:59:01.0000] <Hixie>
it does

[12:59:02.0000] <AryehGregor>
Well, it doesn't for me when I've used it.

[12:59:03.0000] <Hixie>
at least it did for me when i used linux desktop years ago

[12:59:04.0000] <AryehGregor>
Maybe their Linux support has regressed.

[12:59:05.0000] <hendry>
AryehGregor: not getting much luck with http://svg.dabase.com/object.html either. doh.

[13:00:00.0000] <AryehGregor>
hendry, works for me in Firefox 4, although the picture is cut off.

[13:01:00.0000] <AryehGregor>
I'd test in Firefox 3.6, but of course, Firefox doesn't let me run two different versions at once unless I jump through hoops like make new profiles or something, which I'm not interested enough to do.

[13:01:01.0000] <AryehGregor>
(Chrome doesn't let you run two different versions at once, but its versions are only ever separated by like a month or two of development time, so it's not really necessary.)

[13:01:02.0000] <AryehGregor>
I guess I'll still with trying out Firefox 4 until its final release before I decide whether to switch back to Chrome.

[13:04:00.0000] <AryehGregor>
/me thinks he meant "I'll stick with" rather than "I'll still with"

[13:10:00.0000] <AryehGregor>
The kind of psychological warfare I'm waging against myself is sort of fascinating.  To prevent wasting time, I banned myself from doing my routine morning web tasks (checking non-important e-mail, feeds, common sites, etc.) more than once per day, and wrote some filters to eliminate a lot of the useless mail I get, and cut back on posting comments on the feeds I read.  Now, rather than doing any real work, I still manage to spend my time sta

[13:10:01.0000] <AryehGregor>
ring at IRC chats.

[13:10:02.0000] <AryehGregor>
/me wonders what strategy he'll adopt to combat this.  Possibly "stop procrastinating and do the work already".

[13:31:00.0000] <Chilaquiles>
anybody here helps with html5?

[13:34:00.0000] <boogyman>
Chilaquiles: this isn't an HTML5 support channel, please visit #html for those discussions

[14:38:00.0000] <Chilaquiles>
somebody told me that people help in #html but nobody knows there

[14:38:01.0000] <Chilaquiles>
they just are a bunch of noobs like me

[14:43:00.0000] <AryehGregor>
boogyman, people can ask their HTML5 support questions here, doesn't hurt.

[14:43:01.0000] <AryehGregor>
It's one of the only places they're likely to get an informed answer to certain types of questions.

[14:44:00.0000] <boogyman>
AryehGregor: in that case, please define, and I quote "stylistically offset from the normal prose without conveying any extra importance"

[14:45:00.0000] <boogyman>
(sorry for "enter" punctuation), and how that's not presentational html

[14:45:01.0000] <AryehGregor>
The translation of that is "do whatever you want, nobody actually cares about this stuff but we have to appease the semantics mafia".  Next question.

[14:46:00.0000] <Dashiva>
<em> conveys emphasis, not importance, so that seems to apply :)

[14:48:00.0000] <AryehGregor>
Or at more length, "we obviously need a <b> element because Unicode doesn't let us do bold, but bold is used for a huge variety of basically unrelated semantics, so we're stuck with having a <b> tag, and since we want to maintain a veneer of 'HTML doesn't do presentation, only semantics', and we don't want to not say what <b> is used for, we add a lame attempt at summarizing what bold fonts are generally used for in typography."

[14:49:00.0000] <boogyman>
Dashiva: semantics != importance

[14:54:00.0000] <AryehGregor>
boogyman, I filed a bug for you: http://www.w3.org/Bugs/Public/show_bug.cgi?id=11254

[14:54:01.0000] <AryehGregor>
Alas, I expect WONTFIX, because Hixie is a member of the semantics mafia.

[14:55:00.0000] <AryehGregor>
Or at least a fellow traveler.

[14:55:01.0000] <AryehGregor>
(not to be confused with the Semantic Web mafia)

[14:57:00.0000] <boogyman>
I'm surprised you actually included all non-semantic elements :P even though <b> is equivalent to font-weight:bold, therefore is applicable with CSS

[15:01:00.0000] <AryehGregor>
You need some element to apply bold to stuff, though.

[15:01:01.0000] <AryehGregor>
CSS can't apply to unadorned runs of text.

[15:02:00.0000] <AryehGregor>
So you need some presentational stuff at a level below CSS, like HTML or Unicode.

[15:02:01.0000] <AryehGregor>
Unicode is totally presentational, but it has gaps, and CSS can't fill all of them, so HTML has to fill some.

[15:02:02.0000] <AryehGregor>
Pretending that <br> isn't presentational is just silly.

[15:03:00.0000] <boogyman>
unadorned runs for text?

[15:03:01.0000] <boogyman>
of*

[15:03:02.0000] <aho>
horray for white-space:pre-line :>

[15:07:00.0000] <AryehGregor>
Runs of text that have no element enclosing them.


2010-11-08
[16:17:00.0000] <Xano__>
Is it usual to expirience a long delay between requestion the current position using geolocation and the excution of the callback? Sometimes I don't get so anything, even after a minute

[16:22:00.0000] <AryehGregor>
Xano_, maybe the user didn't give permission.

[16:23:00.0000] <AryehGregor>
Generally it will pop up a bar asking if the user wants to allow the location to be used.

[16:23:01.0000] <AryehGregor>
If not, then you won't ever get it.  If so, you'll still only get it when the user gets around to clicking.

[16:25:00.0000] <MikeSmith>
AryehGregor: looks like dud left already

[16:26:00.0000] <MikeSmith>
2 minutes after asking his question

[16:26:01.0000] <AryehGregor>
He left and came back.

[16:26:02.0000] <MikeSmith>
oh

[16:26:03.0000] <AryehGregor>
[101107 19:24:36] * Xano__ has quit (Read error: Connection reset by peer)

[16:26:04.0000] <MikeSmith>
I see he's still here

[16:26:05.0000] <Xano__>
AryehGregor: Yeah, my connection went dead for a moment

[16:26:06.0000] <Xano__>
AryehGregor: I got the permission dialog

[16:27:00.0000] <Xano__>
And I believe I checked the checkbox to remember my permission

[16:28:00.0000] <AryehGregor>
What browser?

[16:33:00.0000] <Xano__>
And there it happened again

[16:34:00.0000] <Xano__>
/me blames his flatmates

[16:35:00.0000] <MikeSmith>
Xano_: why is that not just something that's implementation dependent?

[16:37:00.0000] <Hixie>
Xano__: it can take a long time if it's spinning up the GPS receiver, that might be it

[16:38:00.0000] <Xano__>
MikeSmith: I believe it *is* implementation dependent, but because I guess folks here have tested those implementations I figured I'd ask here

[16:38:01.0000] <Xano__>
Hixie: I'm testing in FF now

[16:38:02.0000] <Xano__>
Forgot to mention that, sorry

[16:39:00.0000] <Philip`>
Hixie: I didn't know GPS receivers used any kind of spinning gyroscope or flywheel

[16:40:00.0000] <AryehGregor>
Philip`, of course they do, how else would they attract the satellites' attention?

[16:41:00.0000] <Xano__>
AryehGregor: They don't.

[16:41:01.0000] <Xano__>
AryehGregor: They use their built-in towel to know where they are

[16:41:02.0000] <AryehGregor>
But their towel ceases to function indoors?

[16:42:00.0000] <AryehGregor>
All my towels are indoors.  Maybe if I brought them outdoors, they'd work as location sensors too, rather than just things to dry off other objects with.

[16:42:01.0000] <Xano__>
AryehGregor: Not if you carry it around your head

[16:42:02.0000] <Xano__>
/me is going to order a towel with "GPS receiver" on it

[16:46:00.0000] <MikeSmith>
revolutionary new browser whose only difference from any existing browser seems to be that it requires users to have a facebook account

[16:47:00.0000] <MikeSmith>
wish I could get investors to give me 10 million dollars to come up with an idea like that one

[16:47:01.0000] <AryehGregor>
You're supposed to come up with the idea before they give you the money, usually.

[16:47:02.0000] <MikeSmith>
ah

[16:48:00.0000] <AryehGregor>
. . . also, which browser?

[16:48:01.0000] <MikeSmith>
well, in that case they should be paying their 10 million to the Flock people

[16:48:02.0000] <MikeSmith>
because I can't see there's anything here that Flock didn't do 5 years ago or whatever

[16:48:03.0000] <MikeSmith>
AryehGregor: RockMelt

[16:49:00.0000] <MikeSmith>
something Marc Andreesen is involved with, apparently

[16:49:01.0000] <AryehGregor>
It's remarkable how a name can evoke such visceral contempt before I have the faintest clue what the thing is.

[16:50:00.0000] <MikeSmith>
heh

[16:50:01.0000] <MikeSmith>
yeah, Marc Andreeson seems to have that effect on people

[16:50:02.0000] <MikeSmith>
oh

[16:50:03.0000] <MikeSmith>
I guess you meant the name RockMelt

[16:50:04.0000] <MikeSmith>
"Netscape founder seeks to revolutionize Web surfing again"

[16:50:05.0000] <AryehGregor>
"Hopefully as profitably as the last time"

[16:51:00.0000] <MikeSmith>
"RockMelt, a new browser that lives in the cloud"

[16:51:01.0000] <MikeSmith>
so that's revolutionary at least

[16:52:00.0000] <MikeSmith>
living in the cloud

[16:52:01.0000] <MikeSmith>
I guess that means I don't even have to download it

[16:52:02.0000] <AryehGregor>
I'm pretty sure there are all sorts of mythologies where various beings live in the clouds.

[16:52:03.0000] <AryehGregor>
And build castles there and everything.

[16:52:04.0000] <Hixie>
Philip`: they use hamster wheel

[16:52:05.0000] <MikeSmith>
Star Trek

[16:52:06.0000] <AryehGregor>
Unless Heroes of Might & Magic lied to me.

[16:52:07.0000] <MikeSmith>
cloud people

[16:52:08.0000] <AryehGregor>
It says titans live in cloud castles.

[16:53:00.0000] <MikeSmith>
http://en.wikipedia.org/wiki/The_Cloud_Minders

[16:53:01.0000] <karlcow>
/me is using eagle feathers, skin of frogs, and moose horns to find my way around

[16:55:00.0000] <MikeSmith>
each Star Trek reference should have a special section that lists the name of whatever scantily but not too scantily clad alien babe Kirk has discretely implied sex with

[16:55:01.0000] <MikeSmith>
for each episode, I mean

[16:56:00.0000] <Philip`>
http://www.vgmaps.com/Atlas/SuperNES/ChronoTrigger-12000BC-KingdomOfZeal.png - they even had cloud castles in caveman times

[16:57:00.0000] <AryehGregor>
Living in the cloud seems impractical.  They aren't dense enough to provide sound structural support.

[16:58:00.0000] <AryehGregor>
I've heard that the atmosphere of Venus can be dense enough for habitation, though.  Maybe they mean the clouds of Venus.

[16:59:00.0000] <Philip`>
Why do you need structural support?

[16:59:01.0000] <AryehGregor>
http://www.universetoday.com/15570/colonizing-venus-with-floating-cities/

[16:59:02.0000] <Philip`>
Just use something equivalent to a helicopter

[16:59:03.0000] <Philip`>
plus a clever refuelling system

[16:59:04.0000] <AryehGregor>
Then you're really only using the cloud for what, cover from potential enemies?  Otherwise you could just as well use any old patch of sky.

[16:59:05.0000] <Philip`>
Or, I suppose, a hot air balloon

[17:00:00.0000] <Philip`>
Use the cloud for fresh water

[17:02:00.0000] <AryehGregor>
Hmm, I see.

[17:02:01.0000] <AryehGregor>
What sort of cloud would you want?  I imagine more like cumulus or stratus clouds.

[17:02:02.0000] <AryehGregor>
What do you do if the cloud dissipates?

[17:04:00.0000] <Philip`>
You migrate to another cloud

[17:04:01.0000] <AryehGregor>
Sounds great.  How much does it cost to sign up?

[17:05:00.0000] <MikeSmith>
http://en.wikipedia.org/wiki/Castle_in_the_Sky

[17:05:01.0000] <Philip`>
That's the beauty of it - you only have to pay for what you use

[17:05:02.0000] <MikeSmith>
Laputa

[17:05:03.0000] <Philip`>
MikeSmith: They totally stole that from Gulliver :-(

[17:06:00.0000] <MikeSmith>
most of Miyazaki films are based on ideas from somebody else

[17:07:00.0000] <MikeSmith>
but he just uses the idea to hang all kinds of other stuff on

[17:07:01.0000] <Philip`>
Better not hang too much stuff on, or it'll fall out of the sky

[17:07:02.0000] <MikeSmith>
he sort of just keeps making the same movie, and just changing the story a little

[17:08:00.0000] <MikeSmith>
dudes

[17:08:01.0000] <MikeSmith>
"HTML 5 is the glue for the cloud, says Ballmer2

[17:08:02.0000] <AryehGregor>
That's mixing your metaphors all right.

[17:08:03.0000] <MikeSmith>
*Ballmer

[17:09:00.0000] <MikeSmith>
AryehGregor: he's clearly anticipated already the problem you described

[17:09:01.0000] <MikeSmith>
the solution is glue

[17:09:02.0000] <MikeSmith>
you just pump a bunch of glue into the cloud

[17:09:03.0000] <MikeSmith>
and that glue is made of pure unadulterated HTML5

[17:12:00.0000] <MikeSmith>
man, Alexander Clauss is still at it with iCab

[17:12:01.0000] <MikeSmith>
http://pmptoday.com/apple/6379

[17:12:02.0000] <MikeSmith>
"iCab Mobile is a web browser for the iPhone and iPod Touch"

[17:13:00.0000] <AryehGregor>
Who can fail to be impressed by the stunning feature list?  I mean, just look at the first (thus presumably most important) one: "iCab Mobile comes with several default search engines you can choose from. You can easily add new search engines. Search suggestions from google and yahoo can be activated. It’s also possible to search within a web page."

[17:13:01.0000] <AryehGregor>
. . . actually, maybe that is a non-ubiquitous feature for mobile browsers.  :(

[17:14:00.0000] <AryehGregor>
"- Kiosk Mode – a restricted variation of the fullscreen mode for Kiosk environments."  For iPhone kiosks?

[17:19:00.0000] <MikeSmith>
iCab was a lot more impressive before he switched from developing and maintaining his own browser engine

[17:20:00.0000] <MikeSmith>
I always thought it was pretty amazing that he managed to do that all

[17:21:00.0000] <MikeSmith>
anybody know what the deal is with Chrome's "integrated PDF viewer"?

[17:21:01.0000] <MikeSmith>
http://chrome.blogspot.com/2010/11/pdf-goodness-in-chrome.html

[17:21:02.0000] <MikeSmith>
I mean, what library they are using

[17:24:00.0000] <robman>
hey MikeSmith - how's it going?

[17:24:01.0000] <MikeSmith>
oh, and it's also using Pepper?

[17:24:02.0000] <MikeSmith>
robman: going good

[17:25:00.0000] <robman>
sorry i disappeared mid conversation

[17:25:01.0000] <robman>
been swamped all last week 8/

[17:25:02.0000] <karlcow>
Now that all big marketing machines are full throttle toward html5… I fear the future of html. I might finally regret Web Services and Co. for attention attractors

[17:25:03.0000] <MikeSmith>
yeah, last time you were here I think I was asking you what this "trigger" thing was in your slides

[17:26:00.0000] <robman>
karlcow HTML5 is now almost in the corporate bingo pool 8)

[17:26:01.0000] <robman>
MikeSmith hrm...the idea was that a pattern language could be used to define mappings from "sensor data bundle" patterns to "web requests"

[17:26:02.0000] <robman>
loosely described as a triffer

[17:26:03.0000] <robman>
s/ff/gg/

[17:27:00.0000] <robman>
hey...what was that IOT conference in japan you were mentioning too

[17:27:01.0000] <MikeSmith>
http://www.iot2010.org/

[17:28:00.0000] <robman>
cool..t.

[17:28:01.0000] <robman>
a

[17:29:00.0000] <robman>
gah...too soon...can't make it 8(

[17:30:00.0000] <robman>
/me looks to see if it's streaming?

[17:31:00.0000] <MikeSmith>
there's a guy named Dominique Guinard in Zurich who has been doing some interesting work

[17:31:01.0000] <MikeSmith>
and who will be at that event

[17:31:02.0000] <MikeSmith>
http://www.webofthings.com/ is one of the things he's involved with

[17:32:00.0000] <robman>
ta

[17:32:01.0000] <robman>
oooh...interesting 8)

[17:33:00.0000] <robman>
hey MikeSmith - is there any work going on to create a single sensors API (e.g. integrating SSN-XG, DAPI, Video/Audio, etc) ?

[17:34:00.0000] <MikeSmith>
no idea

[17:34:01.0000] <MikeSmith>
I don't know what SSN-XG or DAPI are

[17:34:02.0000] <robman>
8)

[17:35:00.0000] <robman>
SSN-XG is the Semantic Sensor Network XG and DAPI is the Device API WG

[17:35:01.0000] <robman>
nevermind 8)

[17:35:02.0000] <MikeSmith>
ah

[17:35:03.0000] <robman>
/me crawls back under his rock

[17:35:04.0000] <MikeSmith>
well, my sense is that SSN-XG is going nowhere

[17:35:05.0000] <robman>
i have heard it's at a "turning point"

[17:35:06.0000] <MikeSmith>
heh

[17:36:00.0000] <MikeSmith>
I guess that's a way to describe it

[17:36:01.0000] <MikeSmith>
I know Laurent Lefort has put a lot of work into it

[17:36:02.0000] <MikeSmith>
but it does not seem to have generated a lot of interest so far

[17:38:00.0000] <robman>
8/

[17:40:00.0000] <MikeSmith>
as far as Device APIs WG and work going on with video/audio APIs in other groups, I can't say that we are making a concerted effort at coordination

[17:41:00.0000] <MikeSmith>
we so far have one instance of an API that started life in the DAP WG but subsequently moved out completely when greater vendor interest in it developed

[17:41:01.0000] <MikeSmith>
which is the File API

[17:42:00.0000] <MikeSmith>
and which is now looking like it's on a path to eventually becoming a part of the core Web platform

[17:44:00.0000] <robman>
hrm...ok

[17:47:00.0000] <MikeSmith>
in other news, I see Eric Lawrence is still doing regular updates to Fiddler

[17:48:00.0000] <MikeSmith>
http://www.fiddler2.com/Fiddler/changelog.asp#v2

[21:21:00.0000] <MikeSmith>
http://lists.w3.org/Archives/Public/public-html/2010Nov/0061.html was another useful outcome of the meeting

[21:22:00.0000] <MikeSmith>
oh wow

[21:22:01.0000] <MikeSmith>
i just noticed this:

[21:22:02.0000] <MikeSmith>
http://lists.w3.org/Archives/Public/public-html-comments/2010Nov/0000.html

[21:23:00.0000] <MikeSmith>
from James Clark

[21:24:00.0000] <MikeSmith>
on how to get an outline for a "chunk" that you want to be the entire content of a page

[21:24:01.0000] <MikeSmith>
proposing a "nosection" boolean attribute on <body> as possible solution

[23:31:00.0000] <MikeSmith>
krijnh: I would like to say I meant that tweet sarcastically

[23:31:01.0000] <MikeSmith>
btw, thanks for tweeting in something other than English

[23:31:02.0000] <MikeSmith>
or not in English exclusively at least

[23:32:00.0000] <MikeSmith>
I wish more people would do that

[00:14:00.0000] <annevk>
Unicode is presentational? Where does that come from?

[00:18:00.0000] <othermaciej>
Aryeh's message in that regard seems confused

[00:19:00.0000] <othermaciej>
characters are almost by definition semantic, not presentational, so I would consider a tag equivalent to a character to be semantic

[00:19:01.0000] <annevk>
yeah, the presentation is in the glyph

[00:20:00.0000] <annevk>
of course, with some characters the line is somewhat blurry, but still

[00:34:00.0000] <jgraham>
So, anyone want to summarise what I missed in the last week in about two sentences?

[00:36:00.0000] <annevk>
sad stuff on ietf-http-wg

[00:36:01.0000] <annevk>
"I even tried calling Chase customer service about the mixed content

[00:36:02.0000] <annevk>
warnings on the login page to their banking web site.  They told me to

[00:36:03.0000] <annevk>
use Firefox because the warning didn't show in that browser (this was

[00:36:04.0000] <annevk>
a case where Chrome's mixed content detector was more accurate than

[00:36:05.0000] <annevk>
Firefox's in detecting the vulnerability)."

[00:36:06.0000] <annevk>
though not entirely surprising, my bank until recently advocated IE6

[00:37:00.0000] <annevk>
jgraham, reading lots of email

[00:42:00.0000] <hsivonen>
are all the HTML WG minutes from the TPAC week collected somewhere in the form of links?

[00:45:00.0000] <annevk>
Laura Carlson made this I noticed: http://www.w3.org/html/wg/wiki/Minutes

[00:45:01.0000] <annevk>
(or kept it up to date)

[00:46:00.0000] <hsivonen>
annevk: cool. thanks

[00:47:00.0000] <hsivonen>
I'm trying to flush my action queue right away

[00:48:00.0000] <annevk>
I hope I do not have any actions

[00:48:01.0000] <annevk>
though I guess I should write up something on registries

[00:48:02.0000] <annevk>
and I got a somewhat indirect request to blog about <bdi>

[00:56:00.0000] <annevk>
abarth|melting, thanks for the update on URLs

[00:56:01.0000] <abarth|melting>
annevk: np

[00:57:00.0000] <abarth|melting>
annevk: hopefully i'll get some time to concentrate on it and make some actual progress

[00:57:01.0000] <annevk>
abarth|melting, agreed that sorting out hybi deserves priority :)

[00:57:02.0000] <abarth|melting>
i think the hybi thing is almost done

[00:58:00.0000] <abarth|melting>
i'm mostly just waiting on some vendors to tell me its ok to release the results of this experiment we ran

[00:58:01.0000] <othermaciej>
/me wonders which vendors are sitting on the results

[00:59:00.0000] <othermaciej>
annevk: I guess I should send links to each set of minutes

[01:01:00.0000] <annevk>
I think people have been sending out links already, but maybe a pointer to the wiki on public-html-announce or some such

[01:07:00.0000] <othermaciej>
yeah, there were some individual links, but not for each session

[01:13:00.0000] <othermaciej>
this makes me sad: http://news.ycombinator.com/item?id=1880412

[01:13:01.0000] <othermaciej>
especially the discussion that blames browsers for flagging mixed content

[01:15:00.0000] <abarth|melting>
collin had a lot of trouble with one of his web sites

[01:15:01.0000] <abarth|melting>
making it work over HTTPS without mixed content

[01:15:02.0000] <abarth|melting>
a bunch of things you want to integrate with don't work

[01:15:03.0000] <abarth|melting>
like facebook connect

[01:15:04.0000] <hsivonen>
othermaciej: from the comments, it seems that mixed content warnings are a real problem from the site POV

[01:15:05.0000] <abarth|melting>
he ended up contracting a CDN to proxy everything over HTTPS

[01:16:00.0000] <hsivonen>
othermaciej: so it seems at least semi-appropriate to blame browsers

[01:16:01.0000] <othermaciej>
hsivonen: I'd prefer just not showing the lock instead of showing a mixed-content warning

[01:16:02.0000] <othermaciej>
(in fact I think that is what Safari does)

[01:16:03.0000] <hsivonen>
othermaciej: sure. that's what Firefox 4 does, too.

[01:17:00.0000] <othermaciej>
if sites want to still show a normal HTTPS lock icon on mixed content pages, then there's really no way to help them

[01:17:01.0000] <othermaciej>
I suppose using SSL with mixed content mostly protects against Firesheep-style passive attacks - you'd have to actually intercept and MITM the non-SSL content to make it still work

[01:18:00.0000] <othermaciej>
(unless your non-SSL content shares cookies with your SSL content)

[01:18:01.0000] <abarth|melting>
there's actually a nice way of solving these problems

[01:18:02.0000] <abarth|melting>
which is to let the site talk TLS to the browser

[01:18:03.0000] <abarth|melting>
but use the "http" scheme

[01:19:00.0000] <abarth|melting>
that gives you protection from passive network attackers

[01:19:01.0000] <abarth|melting>
and doesn't trigger any of these interoperability problems

[01:19:02.0000] <abarth|melting>
s/interoperability/integration/

[01:20:00.0000] <abarth|melting>
if folks are interested, i can write up a document explaining how to do it

[01:20:01.0000] <othermaciej>
it seems to me that being less noisy about the mixed content warning (just hide the lock and don't show EV cert UI or whatever) would be easier to implement and would serve about as well

[01:20:02.0000] <abarth|melting>
IE8 will have noisy mixed content errors for a long time

[01:21:00.0000] <abarth|melting>
(like show a modal dialog noisy)

[01:21:01.0000] <othermaciej>
is IE8 compatible with the "talk TLS over HTTP" solution?

[01:21:02.0000] <abarth|melting>
yes, it just doesn't get the improved security

[01:21:03.0000] <abarth|melting>
:)

[01:21:04.0000] <othermaciej>
I see, so it would fall back to normal HTTP?

[01:22:00.0000] <abarth|melting>
it starts out as normal HTTP

[01:22:01.0000] <abarth|melting>
imagine we magically teleported a policy bit from the server to the client

[01:23:00.0000] <abarth|melting>
that says "Whenever you see an http URL pointing to me, talk to me at port XXX over TLS instead please"

[01:23:01.0000] <abarth|melting>
now, all the URLs are http

[01:23:02.0000] <abarth|melting>
but right before they hit the wire, we decide to send the HTTP requests over TLS instead

[01:24:00.0000] <abarth|melting>
this is playing on the fact that URL schemes don't have to be the same as on-the-wire protocols

[01:24:01.0000] <othermaciej>
I was going to suggest this sounds a lot like STS, but I guess STS would specifically not want to allow mixed content

[01:24:02.0000] <abarth|melting>
its very much like STS

[01:25:00.0000] <abarth|melting>
but instead of upgrading your https to "bullet proof", you're upgrading your http transport to use tls

[01:25:01.0000] <othermaciej>
it's just sad that AdSense is one of the integration problems

[01:25:02.0000] <othermaciej>
but surely there will be others for some time

[01:25:03.0000] <abarth|melting>
the github guy mentions the charts API

[01:26:00.0000] <abarth|melting>
presumably Google could clean up its act

[01:26:01.0000] <abarth|melting>
Facebook connect is a big one

[01:26:02.0000] <abarth|melting>
i think collin found that he could get that to work if he haxored the script they gave him

[01:27:00.0000] <othermaciej>
many at Google are pushing for going all-TLS

[01:27:01.0000] <abarth|melting>
which is basically what the github guy said about the charts API

[01:27:02.0000] <abarth|melting>
i'm in favor of all-TLS

[01:27:03.0000] <othermaciej>
I know you are :-)

[01:28:00.0000] <othermaciej>
I'm just saying it's odd that Google does things like Google Search over TLS while holding out on the API side

[01:28:01.0000] <abarth|melting>
i'm sure you've heard stories from Microsoft about how no one tells the Office business unit what to do

[01:28:02.0000] <abarth|melting>
you might imagine that adsense has a similar position :)

[01:33:00.0000] <zcorpan>
/me wonders what correction gsnedders refers to in http://www.w3.org/mid/4CD555C7.8010005⊙oc

[01:34:00.0000] <othermaciej>
I have heard surprisingly few stories about Microsoft's internal politics

[01:35:00.0000] <abarth|melting>
brb

[01:39:00.0000] <abarth>
X-Bodge-Transport-Security

[01:39:01.0000] <abarth>
i think that turns on that feature in chrome

[01:41:00.0000] <annevk>
yay more X-prefixed headers

[01:41:01.0000] <abarth>
annevk: it's meant to be named rediculously

[01:42:00.0000] <abarth>
i don't think anyone knows it exists

[01:43:00.0000] <othermaciej>
you just revealed the secret!

[01:43:01.0000] <abarth>
OMG!

[01:43:02.0000] <abarth>
actually, it looks like this doesn't quite do what we want

[01:44:00.0000] <abarth>
http://src.chromium.org/viewvc/chrome/trunk/src/net/base/transport_security_state.h?view=markup

[01:44:01.0000] <abarth>
MODE_STRICT is for HSTS

[01:44:02.0000] <abarth>
X-Bodge-Transport-Security gets you into MODE_SPDY_ONLY, which is for SPDY

[01:44:03.0000] <abarth>
we want MODE_OPPORTUNISTIC

[01:45:00.0000] <abarth>
but i'm not sure if there's syntax to activate that

[01:47:00.0000] <abarth>
oh, i see

[01:47:01.0000] <abarth>
agl is too clever for his own good

[01:48:00.0000] <abarth>
/ TODO(agl): implement opportunistic HTTPS upgrade.

[01:48:01.0000] <abarth>
:)

[01:48:02.0000] <abarth>
now that i've gotten this far, I should just implement it

[02:09:00.0000] <wirepair>
is there something wrong with the html5 sandbox / iframe srcdoc validator on html5.validator.nu?

[02:09:01.0000] <wirepair>
getting Attribute srcdoc not allowed on element iframe at this point. when taking an example from the html5 spec directly

[02:09:02.0000] <hsivonen>
wirepair: most likely there is a problem yes

[02:09:03.0000] <annevk>
might not be implemented yet

[02:09:04.0000] <wirepair>
ok cool, was scratching my head there :)

[02:12:00.0000] <wirepair>
anyone know off the top of their heads which browsers have started implementing (in a testable form) srcdoc?

[02:16:00.0000] <annevk>
I remember some work in progress in WebKit

[02:16:01.0000] <abarth>
i don't think it's landed yet

[03:28:00.0000] <annevk>
nice change proposal hsivonen

[03:32:00.0000] <hsivonen>
annevk: thanks

[04:00:00.0000] <wirepair>
hu just found a Really Weird ie9 vulnerability

[04:00:01.0000] <wirepair>
can read remote cssRules *only* when it's framed

[04:00:02.0000] <wirepair>
w.t.f

[04:03:00.0000] <zcorpan>
remote as in cross-origin?

[04:04:00.0000] <wirepair>
yes

[04:10:00.0000] <david_carlisle>
abarth: on using http: URI scheme rather than https:, seems like you are in good company TBL moans about https appearing in the URI in http://www.w3.org/DesignIssues/Architecture.html#Extension

[04:27:00.0000] <wirepair>
heh, not only is it only when it's framed, it has to be dynamically framed

[04:27:01.0000] <wirepair>
wow that's a messed up flow :/

[04:27:02.0000] <wirepair>
(dynamically in the sense that the iframe src tag needs to be assigned in javascript, not just in the element src="...")

[04:37:00.0000] <wirepair>
buh i don't get it, sometimse cssRules are valid, sometimes they're null

[04:37:01.0000] <wirepair>
even though i see them in their developer tools debugger

[04:37:02.0000] <wirepair>
/me gives up

[04:37:03.0000] <wirepair>
s/their/there

[04:54:00.0000] <jgraham>
hsivonen: yt? Did you implement the counters in the AAA as in the spec or only incrementing the inner loop counter whn actually inserting an element?

[05:02:00.0000] <jgraham>
abarth: ^

[05:08:00.0000] <gsnedders>
zcorpan: The final case in jgraham's email which he claimed could never happen

[05:09:00.0000] <jgraham>
/me wonders what he claimed could never happen

[05:10:00.0000] <gsnedders>
I guess zcorpan was referring to my email to public-html-testsuite

[07:27:00.0000] <zcorpan>
hsivonen: webkit looks at htmlness?

[07:28:00.0000] <annevk>
and if there's no ownerDocument you default to XML?

[07:28:01.0000] <zcorpan>
yeah

[07:29:00.0000] <annevk>
can you even get in that situation?

[07:30:00.0000] <zcorpan>
doctypes can have null as ownerDocument :)

[07:43:00.0000] <hsivonen>
zcorpan: yeah, webkit looks at the HTMLness of the owner doc

[07:44:00.0000] <zcorpan>
then i agree with your comment that we should align with webkit and add an argument to override

[07:45:00.0000] <zcorpan>
does anyone support DOMParser(s, 'text/html') ?

[07:46:00.0000] <annevk>
I think Mozilla does

[07:46:01.0000] <zcorpan>
uh, that's not the right syntax

[07:47:00.0000] <hsivonen>
annevk: I'm pretty sure we don't yet

[07:47:01.0000] <gavin>
our domparser doesn't support text/html yet

[07:47:02.0000] <zcorpan>
http://software.hixie.ch/utilities/js/live-dom-viewer/saved/694

[07:47:03.0000] <gavin>
bug 102699

[07:48:00.0000] <zcorpan>
http://software.hixie.ch/utilities/js/live-dom-viewer/saved/695 even

[07:48:01.0000] <zcorpan>
i guess it's bad that opera doesn't throw

[07:48:02.0000] <zcorpan>
doc is null in webkit

[07:53:00.0000] <hsivonen>
spot-checking other Change Proposals, it sees that people rarely list the Negative Effects of their proposals

[07:54:00.0000] <gavin>
heh

[07:56:00.0000] <jgraham>
hsivonen: I don't remember anyone else ever filling out the "risks" section of their proposal

[07:56:01.0000] <jgraham>
It is quite worthless IMHO

[08:00:00.0000] <zcorpan>
only Hixie putting jokes in the Risks section

[08:01:00.0000] <hsivonen>
aargh. Wikia sniffs Firefox and Opera and expects their script execution to be HTML5-incompliant

[08:08:00.0000] <zcorpan>
yay

[08:53:00.0000] <TabAtkins_>
<!DOCTYPE html><title>SVG in HTML</title><svg><circle cx=10 cy=10 r=10 /></svg>

[08:55:00.0000] <jgraham>
TabAtkins_: Very nice. But why?

[09:03:00.0000] <TabAtkins_>
jgraham: Argh, sorry.  Unintentional.  Copypasta from Hixie's message a day or so ago.

[09:09:00.0000] <jpike>
yay

[09:10:00.0000] <annevk>
who, interwebs was down

[09:10:01.0000] <cdbb>
i've got a question for you pros

[09:10:02.0000] <annevk>
I mean, whoa

[09:11:00.0000] <cdbb>
i have a slider, with 10 slides. they are marked up with figure/figcaption. how do i fix my outline (it appears there is a blank list with 10 bullets)?

[09:12:00.0000] <TabAtkins_>
cdbb: Figures scope their contents from the heading algorithm, so yeah, anything in them won't be shown.

[09:12:01.0000] <annevk>
<section> seems more appropriate for a slide in a slideshow

[09:12:02.0000] <TabAtkins_>
If you want them to show in the ouline, instead mark them up with <section>/<h1>.

[09:12:03.0000] <annevk>
depending on the contents

[09:13:00.0000] <TabAtkins_>
annevk: Right.  If the slides are important enough to be in the outline, they're too important to be <figure>s.

[09:13:01.0000] <TabAtkins_>
(If they're not, then <figure> is perfect.)

[09:13:02.0000] <cdbb>
ah 

[09:13:03.0000] <cdbb>
ok, they are a large image with a graphical caption combined into a single image

[09:13:04.0000] <annevk>
/me usually goes for <p>

[09:13:05.0000] <cdbb>
so i thought figure/figcaption would make the most sense

[09:14:00.0000] <cdbb>
but section probably makes more sense semantically

[09:14:01.0000] <cdbb>
thx guys

[09:14:02.0000] <TabAtkins_>
Np.

[09:14:03.0000] <annevk>
if it's just a couple of lines i'd go for <h1> and <p><img> for each slide personally

[09:14:04.0000] <annevk>
<h1> for the title of the presentation

[09:15:00.0000] <TabAtkins_>
I gave my last talk with <section> slides.  The presentation was particularly fun, because they were placed all over the place in the document and used transitions on top/left to animate slide changes.

[09:52:00.0000] <annevk>
hahaha http://active.tutsplus.com/articles/roundups/html5-and-flash-17-industry-experts-have-their-say/

[09:57:00.0000] <annevk>
http://twitter.com/html4nana

[09:59:00.0000] <othermaciej>
if progress is measured by novelty accounts, HTML5 is doing pretty well

[11:26:00.0000] <mikekelly>
ok I'm looking at an overview of html5 that says the link element 'lost @type because of the prevelence of css' - is that true?

[11:28:00.0000] <annevk>
not entirely

[11:28:01.0000] <annevk>
pointer?

[11:29:00.0000] <mikekelly>
it's a devzone refcard thing

[11:30:00.0000] <mikekelly>
annevk: default for link is css ?

[11:30:01.0000] <annevk>
no

[11:30:02.0000] <annevk>
for <link> type is mostly meaningless

[11:30:03.0000] <annevk>
but it's still there

[11:31:00.0000] <annevk>
see http://simon.html5.org/html5-elements

[11:31:01.0000] <mikekelly>
sure, where is that article coming from

[11:31:02.0000] <mikekelly>
and why is it slightly true? :P

[11:32:00.0000] <annevk>
it isn't really

[11:32:01.0000] <annevk>
and I've no idea where random articles without URLs on the internet are from

[11:32:02.0000] <annevk>
or where they get their ideas from

[11:32:03.0000] <mikekelly>
ok all it says is: "The <link> element has lost its type attribute due to the prevalence of CSS."

[11:34:00.0000] <mikekelly>
so that's wrong, basically

[11:36:00.0000] <beowulf>
mikekelly: where on the internet does it say this?

[11:39:00.0000] <mikekelly>
beowulf: why do you ask?

[11:41:00.0000] <mikekelly>
@type is a crazily pointless attribute

[11:49:00.0000] <annevk>
mikekelly, basically, because URL or it didn't happen

[11:52:00.0000] <AryehGregor>
othermaciej, annevk: Well, I don't want to get into an argument about . . . er . . . semantics.  But there's a big difference between semantics in the HTML sense, and typography.  Something like a line break or non-breaking space is not semantic by any definition I see -- it specifies appearance and can be used for any semantics where you desire that appearance.  Of course Unicode doesn't dictate presentation on a pixel level as CSS sometimes

[11:52:01.0000] <AryehGregor>
 does, either.

[11:53:00.0000] <annevk>
Unicode does not dictate presentation at all

[11:53:01.0000] <annevk>
it just defines meaning of code points

[11:53:02.0000] <AryehGregor>
Some of which are presentational.

[11:53:03.0000] <annevk>
fonts dictate presentation

[11:53:04.0000] <annevk>
well sure, Unicode has its shade of gray, just like any other technology

[11:55:00.0000] <AryehGregor>
Unicode says U+41 is a Latin capital letter A.  That suggests how it should be presented, not how it should be used.  Unicode doesn't have an opinion on whether you use A as an English letter, a Spanish letter, ASCII art for an Asteroids-style spaceship, or total gibberish.  It's semantics-neutral.

[11:55:01.0000] <AryehGregor>
But it had better look something like Latin capital letter A usually looks, in any font.

[11:56:00.0000] <AryehGregor>
Otherwise you should be using private-use code points or something.

[12:19:00.0000] <JonathanNeal>
Is this Section 508 happy all by itself or would it also require a label? <input type="text" name="month" maxlength="2" title="Date of Birth Month" />

[12:20:00.0000] <AryehGregor>
You don't need to label all inputs, as far as I know.

[12:20:01.0000] <AryehGregor>
However, you probably do want to use a label here instead of a title.

[12:20:02.0000] <AryehGregor>
Titles aren't suited for containing essential info like what you're supposed to put in an input.

[12:20:03.0000] <JonathanNeal>
I think I'm good, because <input>, <textarea>, and <select> elements have label elements associated with them in the markup or are given a descriptive title attribute.

[12:21:00.0000] <JonathanNeal>
Hmm.

[12:22:00.0000] <JonathanNeal>
I'm imaginging this in the context of three inputs representing a date of birth.

[12:23:00.0000] <Philip`>
How about an <input type="date">?

[12:26:00.0000] <JonathanNeal>
is there type="year", type="month", and type="day" ?

[12:26:01.0000] <annevk>
AryehGregor, it being a capital A in itself has meaning

[12:26:02.0000] <annevk>
AryehGregor, saying it has no semantics is the same as people saying <h1> has no semantics because it is completely unspecific

[12:27:00.0000] <JonathanNeal>
And I imagine the "Date of Birth" text in ... Date of Birth <input type="text" name="month" maxlength="2" title="Date of Birth Month"/> <input type="text" name="day" maxlength="2" title="Date of Birth Day"/> <input type="text" name="year" maxlength="4" title="Date of Birth Year"/> ... wouldn't be appropriate as a label or as a legend in a fieldset.

[12:28:00.0000] <Philip`>
(That series of inputs would be extremely confusing to people who aren't used to the US date format, and also confusing to people who try to write "Jan" etc as the month)

[12:29:00.0000] <JonathanNeal>
Okay.  So, 1. a label for each would be appropriate (and not a title)? And 2. the "Date of Birth" text would work best as... ? a heading?

[12:38:00.0000] <TabAtkins_>
JonathanNeal: Yes to both.

[12:40:00.0000] <FGRibreau>
Hi

[12:40:01.0000] <FGRibreau>
is there anyone here ?

[12:41:00.0000] <TabAtkins_>
Nope.

[12:41:01.0000] <annevk>
FGRibreau, better to state your actual question ;)

[12:42:00.0000] <FGRibreau>
I don't know if it's the best place to discuss this. I've read the spec about HTML5 postMessage and I've go a question

[12:42:01.0000] <FGRibreau>
(and a bug in my case)

[12:42:02.0000] <FGRibreau>
My parent iframe is on "http://www.webiste.com" and contain another iframe on "https://www.web2.com"

[12:43:00.0000] <FGRibreau>
web2 try a postMessage to "http://www.website.com" and it doesn't work.

[12:43:01.0000] <TabAtkins_>
Right.

[12:43:02.0000] <FGRibreau>
Is it normal ?

[12:43:03.0000] <annevk>
so you did parent.postMessage() from web2?

[12:43:04.0000] <FGRibreau>
yep

[12:44:00.0000] <FGRibreau>
It work when web2 is without https

[12:44:01.0000] <annevk>
ooh

[12:44:02.0000] <FGRibreau>
I've tested on safari & chrome

[12:44:03.0000] <annevk>
https to http?

[12:44:04.0000] <FGRibreau>
(yes)

[12:45:00.0000] <FGRibreau>
I thought postMessage was able to deliver a message from https to http & http to https & http to http

[12:45:01.0000] <annevk>
maybe browsers block that

[12:45:02.0000] <FGRibreau>
humm

[12:45:03.0000] <annevk>
in theory yes

[12:45:04.0000] <FGRibreau>
ok

[12:45:05.0000] <annevk>
but certain things get disabled when you cross the "secure" boundary and not all of that is defined

[12:45:06.0000] <FGRibreau>
That was what I was thinking about -__-'

[12:46:00.0000] <FGRibreau>
thanks for your help

[12:46:01.0000] <FGRibreau>
I'll try another way to get it work

[12:46:02.0000] <FGRibreau>
++

[12:46:03.0000] <annevk>
I'd suggest trying Firefox/Opera/IE as well

[12:46:04.0000] <annevk>
oh well

[12:49:00.0000] <AryehGregor>
annevk, so let's put it this way: Unicode, like CSS, is not media-independent.  It's designed entirely around typography.  The concept of a capital A only really makes sense in visual contexts -- in other media (like speech) you have to do some kind of lossy conversion to preserve the semantics.  Likewise, <br> and <b> and so on are not media-independent, but <h1> is.

[13:05:00.0000] <TabAtkins_>
MikeSmith: Um, HTMLWG minutes are being *crazy*.  Right now it looks like the minutes are a plain-text dump of a photoshop file.

[13:05:01.0000] <TabAtkins_>
MikeSmith: http://www.w3.org/2010/11/04-html-wg-minutes.html

[13:06:00.0000] <annevk>
wfm

[13:07:00.0000] <TabAtkins_>
wtf

[13:07:01.0000] <TabAtkins_>
Okay, it works now...

[13:19:00.0000] <TabAtkins_>
Urgh, now I'm back to the minutes not working at all, which I was having earlier this morning.

[13:25:00.0000] <TabAtkins_>
annevk: When you pointed me to the bug about an anonymous relation and said something about CSS, are you thinking something in the direction of "background-image: anon-url(http://www.example.com/example.jpg);"?

[13:45:00.0000] <jamesr_>
what are the recent canvas bugs on w3.org bug tracker talking about? http://www.w3.org/Bugs/Public/show_bug.cgi?id=11242 for example

[13:52:00.0000] <JonathanNeal>
TabAtkins_, is there an example online somewhere of how to properly use headings, legends, labels, and titles in html5 forms?

[13:52:01.0000] <JonathanNeal>
And if so, would you share it with me? :D

[13:53:00.0000] <Philip`>
jamesr_: Accessibility

[13:55:00.0000] <jamesr_>
so it's about the fallback content inside a canvas?

[13:56:00.0000] <Philip`>
jamesr_: Yes

[13:57:00.0000] <jamesr_>
why's canvas different from any other html element?

[13:59:00.0000] <Philip`>
I don't know

[14:00:00.0000] <AryehGregor>
jamesr_, because people write entire applications in canvas.

[14:00:01.0000] <AryehGregor>
Which aren't exposed to AT at all, and can't really be, because canvas is just a bitmap manipulated by JavaScript.

[14:01:00.0000] <AryehGregor>
I mean, can't really be without special APIs.

[14:01:01.0000] <AryehGregor>
Whereas other HTML elements tend to contain convenient things like text, which can be exposed to ATs easily.  Or otherwise they have semantics that can be exposed to AT.

[14:02:00.0000] <jamesr_>
right, but people also put entire applications in <embed>

[14:02:01.0000] <AryehGregor>
Yeah, but the processing model for that is entirely nonstandard, so it's up to the particular embedded thingie to define its own accessibility model.

[14:03:00.0000] <jamesr_>
so the idea with this series of bugs is that the application author would provide DOM that parallels the application being rendered in the <canvas>?

[14:03:01.0000] <AryehGregor>
I don't know, I haven't looked at them.

[14:06:00.0000] <Philip`>
The HTML5 spec already requires that you provide a non-canvas-based equivalent to what you're using canvas for

[14:09:00.0000] <zcorpan>
maybe i should write a non-canvas-based tower defence game to see what would be suitable as fallback

[14:11:00.0000] <zcorpan>
i guess it's a bit hard to play tower defence if you're blind

[14:40:00.0000] <MikeSmith>
TabAtkins_: still have problems with the minutes?

[15:10:00.0000] <TabAtkins_>
heycam: Yo, in the WebIDL spec there's a reference to the toNumber(), etc. functions, which are claimed to be defined in Chapter 9.  Chapter 9 doesn't exist.  Thoughts?

[15:11:00.0000] <heycam>
oh :)

[15:11:01.0000] <heycam>
/me checks

[15:11:02.0000] <heycam>
ecmascript apocrypha

[15:11:03.0000] <heycam>
http://sideshowbarker.github.com/es5-spec/#x9.3

[15:12:00.0000] <TabAtkins_>
Danke.  You may want to update that reference in the webidl spec, because it's pretty confusing.

[15:13:00.0000] <heycam>
but that's chapter 9

[15:13:01.0000] <TabAtkins_>
MikeSmith: Yes.

[15:13:02.0000] <heycam>
or is the issue that it should say "section 9"?

[15:14:00.0000] <TabAtkins_>
heycam: The issue is that both me and the dude who asked me the question missed that all the section references in this chapter refer to es5, not to the webidl spec.

[15:15:00.0000] <heycam>
TabAtkins_, ah gotcha

[15:15:01.0000] <TabAtkins_>
Because we just searched for "toNumber", and didn't think it was important to read the first paragraph of the chapter that the first hit happened to be in.  ^_^

[15:18:00.0000] <heycam>
TabAtkins_, btw there is a sentence at the top of that section saying "Section numbers in this section refer to sections of ECMAScript Language Specification, 5th Edition"

[15:19:00.0000] <heycam>
TabAtkins_, because things were looking messy when i included the target spec for each of those references

[15:20:00.0000] <MikeSmith>
heycam: Jason Orendorff also has an HTML ES5 spec -

[15:20:01.0000] <MikeSmith>
http://people.mozilla.org/~jorendorff/es5.html#sec-9.3

[15:20:02.0000] <heycam>
TabAtkins_, maybe i could use a different section notation, like ?9.3

[15:20:03.0000] <heycam>
MikeSmith, yeah i saw that -- i really like the formatting on that one

[15:20:04.0000] <MikeSmith>
yeah

[15:21:00.0000] <heycam>
yours is just the first that came up in my history when i typed "es5" :)

[15:21:01.0000] <TabAtkins_>
MikeSmith: Yeah, minutes are still causing me problems.  I dunno why.

[15:22:00.0000] <MikeSmith>
TabAtkins_:  so what's the problem exactly? it just shows up garbled?

[15:22:01.0000] <TabAtkins_>
Right now it's just giving me a "this webpage is unavailable" message.

[15:22:02.0000] <heycam>
TabAtkins_, filed http://www.w3.org/Bugs/Public/show_bug.cgi?id=11268

[15:23:00.0000] <TabAtkins_>
For a short period of time, a few hours ago it was barfing out the contents of a photoshop-created image.

[15:23:01.0000] <MikeSmith>
TabAtkins_: might be a problem with one of the mirrors… lemme check

[15:23:02.0000] <TabAtkins_>
Woops, now it's back to doing that again.

[15:24:00.0000] <TabAtkins_>
And now they work again.

[15:24:01.0000] <TabAtkins_>
I dunno if it's something crazy with me, or what.

[15:25:00.0000] <TabAtkins_>
Back to "not available".  I suspect I pulled from cache a second ago when they worked.

[15:27:00.0000] <AryehGregor>
So, visiting this URL causes X to crash and my window manager to reset: http://upload.wikimedia.org/wikipedia/commons/thumb/8/8f/Whole_world_-_land_and_oceans_12000.jpg/800px-Whole_world_-_land_and_oceans_12000.jpg

[15:29:00.0000] <AryehGregor>
No, wait, this is the one that crashed X: http://upload.wikimedia.org/wikipedia/commons/thumb/8/8f/Whole_world_-_land_and_oceans_12000.jpg/800px-Whole_world_-_land_and_oceans_12000.jpg

[15:29:01.0000] <MikeSmith>
TabAtkins_: mirrors are all OK and I don't see anything weird in the headers for that page or anywhere else that might be causing problems

[15:29:02.0000] <AryehGregor>
Presumably because it's 19.11 MB.

[15:30:00.0000] <AryehGregor>
Wait, I mean: http://upload.wikimedia.org/wikipedia/commons/8/8f/Whole_world_-_land_and_oceans_12000.jpg

[15:30:01.0000] <AryehGregor>
There we go.

[15:30:02.0000] <AryehGregor>
Don't click it.

[15:30:03.0000] <TabAtkins_>
MikeSmith: Shrug, then.  It seems to load fine initially, then if I refresh it dies, then sometimes if I refresh it starts barfing out an image as text.


2010-11-09
[18:13:00.0000] <Hixie>
anyone have a better idea for a name for the attribute in http://www.w3.org/Bugs/Public/show_bug.cgi?id=10809 than "submitdir"?

[18:14:00.0000] <Hixie>
we don't really have a good precedent, which is surprising given how many attributes <input> already has

[18:15:00.0000] <jamesr_>
i thought that was for 'submit directory'

[18:17:00.0000] <Hixie>
yeah i'm not a fan of "submitdir" as a name

[18:17:01.0000] <Hixie>
can't think of anything better though

[18:18:00.0000] <boogyman>
Hixie: "action" seems like a more appropriate verb given the "action" attribute of the form element

[18:20:00.0000] <boogyman>
then again 'actiondir' isn't fluid either

[18:20:01.0000] <Hixie>
i don't think the attribute does what you think it does, but it does rather prove my point about "submitdir" being a bad name :-)

[18:21:00.0000] <karlcow>
hmmm <input> is already for submission somehow. "textdir", "inputdir" could be an option. 

[18:21:01.0000] <Hixie>
it's not setting the value, it's setting a flag to make the client submit the value

[18:22:00.0000] <boogyman>
Hixie: From the bug, I conclude that it's used to reference the placement of an element after form submission (from a server perspective)

[18:22:01.0000] <jamesr_>
i thought it was requesting that the client tell the server what directionality the input's data had

[18:23:00.0000] <Rik`>
exposedir ?

[18:23:01.0000] <Hixie>
<input name=foo value=bar submitdir> means that instead of just submitting foo=bar, it also submits foo.dir=ltr

[18:24:00.0000] <karlcow>
dirflag

[18:24:01.0000] <othermaciej>
submitdir means "please submit the user-set direction of this element in addition to the value"

[18:24:02.0000] <karlcow>
dirvalue

[18:24:03.0000] <karlcow>
dirsend

[18:26:00.0000] <karlcow>
I think othermaciej got it: pleasesubmittheusersetdirectionofthiselementinadditiontothevalue. But it might be prone to errors

[18:26:01.0000] <Hixie>
also-send-dir=""

[18:27:00.0000] <jamesr_>
gimmehdir

[18:28:00.0000] <karlcow>
dir-u-got-me

[18:28:01.0000] <karlcow>
send-bidi

[18:31:00.0000] <othermaciej>
the problem with submitdir is that it sounds like it should take a value to use as the direction when submitting the form, a little

[18:31:01.0000] <othermaciej>
but it is pretty accurate if you don't misparse it that way

[18:33:00.0000] <Philip`>
<input name="foo" value="bar"><input type="hidden" name="_dir_.foo">

[18:34:00.0000] <Philip`>
by analogy with name="_charset_"

[18:35:00.0000] <karlcow>
<input name="foo" value="bar" registerdir>, <input name="foo" value="bar" putdir>, <input name="foo" value="bar" assertdir>

[18:36:00.0000] <karlcow>
transmitdir

[18:36:01.0000] <karlcow>
ok giving up and going back to what I was writing.

[18:49:00.0000] <MikeSmith>
I notice that http://www.zdnet.co.uk/ has a top-level category for HTML5 now

[18:51:00.0000] <MikeSmith>
News Reviews Blogs Broadband Cloud DigitalGov HTML Security Windows 7 Apple Google Linux

[18:52:00.0000] <MikeSmith>
hmm

[18:52:01.0000] <MikeSmith>
News Reviews Blogs Broadband Cloud DigitalGov HTML 5 Security Windows 7 Apple Google Linux

[18:53:00.0000] <Philip`>
"HTML 5 will be the development language of the cloud for the next decade."

[18:53:01.0000] <Philip`>
What's the cloud got to do with it?

[18:53:02.0000] <Philip`>
I thought the development language of the cloud was various proprietary APIs

[18:54:00.0000] <boogyman>
Philip`: <insert buzzword> :-s

[18:55:00.0000] <karlcow>
html5, smoke a joint, code for the cloud

[19:01:00.0000] <MikeSmith>
I don't see any browser-project people in the attendees list of IETF 79

[19:01:01.0000] <MikeSmith>
https://www.ietf.org/registration/ietf79/attendance.py?sortkey=3

[19:04:00.0000] <MikeSmith>
but also seems like there are not many especially Web-relevant f2f meetings

[19:04:01.0000] <MikeSmith>
https://datatracker.ietf.org/meeting/79/agenda.html

[19:04:02.0000] <MikeSmith>
except for the Web Security WG

[19:04:03.0000] <MikeSmith>
http://www.ietf.org/proceedings/79/agenda/websec.txt

[19:04:04.0000] <MikeSmith>
and IRI

[19:05:00.0000] <MikeSmith>
looks like the Web Security meeting is starting in about 50 minutes

[19:06:00.0000] <MikeSmith>
Jabber: websec⊙jio

[19:06:01.0000] <MikeSmith>
Audio: http://videolab.uoregon.edu/events/ietf/ietf797.m3u

[19:07:00.0000] <MikeSmith>
no real details on the IRI meeting

[19:07:01.0000] <MikeSmith>
http://www.ietf.org/proceedings/79/agenda/iri.txt

[19:08:00.0000] <MikeSmith>
…and neither Larry nor Martin are in the list of attendees

[19:19:00.0000] <MikeSmith>
I wonder if it would be dumb to suggest that they might consider discussing Adam's URL draft

[19:19:01.0000] <MikeSmith>
https://github.com/abarth/url-spec/raw/master/drafts/url.txt

[19:28:00.0000] <MikeSmith>
audio for the IRI WG meeting is http://videolab.uoregon.edu/events/ietf/ietf794.m3u

[19:30:00.0000] <MikeSmith>
and I guess the jabber address is iri⊙jio

[19:35:00.0000] <MikeSmith>
abarth: http://code.google.com/p/curlies/wiki/RecommendationsForBrowserDevelopers

[19:35:01.0000] <MikeSmith>
in case there's anything useful in there that's not in your URL draft

[19:42:00.0000] <abarth>
MikeSmith: thanks

[20:30:00.0000] <MikeSmith>
abarth: is there a plan for the http-state WG to have a face to face meeting at IETF 80?

[20:42:00.0000] <abarth>
MikeSmith: i think the http-state WG is basically done

[20:42:01.0000] <MikeSmith>
oh

[20:42:02.0000] <MikeSmith>
well that's cool

[20:42:03.0000] <abarth>
the plan is to go to IETF last call sometime soon

[20:42:04.0000] <MikeSmith>
great

[20:43:00.0000] <abarth>
i've been playing around with some improvements to cookies:

[20:43:01.0000] <MikeSmith>
nice to have an IETF success story

[20:43:02.0000] <abarth>
http://codereview.chromium.org/4630001/show

[20:43:03.0000] <MikeSmith>
/me reads

[20:43:04.0000] <abarth>
the basic idea is to have an Origin attribute on cookies

[20:43:05.0000] <abarth>
that scopes the cookie to an origin

[20:43:06.0000] <abarth>
the UA sends the cookie back to the server in a new header

[20:43:07.0000] <abarth>
Origin-Cookie

[20:44:00.0000] <MikeSmith>
other implementors have interest in this?

[20:44:01.0000] <abarth>
its basically "Secure cookies done correctly"

[20:44:02.0000] <MikeSmith>
yeah, I get the basic idea

[20:44:03.0000] <MikeSmith>
has there been mailing-list discussion about it yet?

[20:44:04.0000] <abarth>
we've been talking with folks from Mozilla and Apple

[20:44:05.0000] <MikeSmith>
OK

[20:44:06.0000] <abarth>
i sent some earlier versions to the http-state mailing list

[20:45:00.0000] <abarth>
but that was before we figured out how to integrate it with cookies

[20:45:01.0000] <MikeSmith>
ah

[20:45:02.0000] <abarth>
it's still very much experimental

[20:45:03.0000] <abarth>
i'd really like to improve the privacy story for http state management

[20:45:04.0000] <abarth>
sessionStorage has a nice privacy story

[20:46:00.0000] <abarth>
we're thinking about using that model to improve privacy

[20:46:01.0000] <MikeSmith>
I think a lot of people would like to see that privacy story improve

[20:46:02.0000] <abarth>
the tricky part is we probably wont be able to remove support for cookies

[20:46:03.0000] <abarth>
as they're pretty popular

[20:46:04.0000] <MikeSmith>
yeah

[20:47:00.0000] <MikeSmith>
it's hard to imagine sites migrating away from cookies on a large scale any time soon

[20:48:00.0000] <abarth>
one thought is that if we provide a viable alternative

[20:48:01.0000] <abarth>
then you can imagine regulatory or PR pressure

[20:48:02.0000] <MikeSmith>
oh

[20:48:03.0000] <MikeSmith>
I would prefer not inviting regulatory pressure

[20:48:04.0000] <abarth>
:)

[20:48:05.0000] <abarth>
well, imagine something like Mozilla's privacy icons

[20:49:00.0000] <abarth>
were you could get a nicer privacy icon if you didn't use cookies

[20:49:01.0000] <abarth>
that's hard today because there isn't really an alternative

[20:49:02.0000] <abarth>
but yeah, the privacy parts are a bit of a dream at the moment

[20:49:03.0000] <abarth>
the security parts are more straightforward

[20:50:00.0000] <MikeSmith>
I do like the icon ideas

[20:50:01.0000] <abarth>
i worry that it's like P3P and P3P wasn't an overwhelming success

[20:50:02.0000] <abarth>
but P3P might have been ahead of its time

[20:51:00.0000] <MikeSmith>
I think it was, in part

[20:51:01.0000] <MikeSmith>
I think it also suffered from overengineering

[20:54:00.0000] <MikeSmith>
and if the only problem were that it was just ahead of its time, then I think we could just start using it now and would not need any alternatives

[20:55:00.0000] <MikeSmith>
anyway, I wanted to also ask if you plan on publishing your URL parsing doc as an Internet Draft soonish

[20:56:00.0000] <MikeSmith>
(in the copious amounts of free time you have)

[20:56:01.0000] <abarth>
yeah, i can do that now

[20:56:02.0000] <abarth>
it needs a lot of work

[20:56:03.0000] <MikeSmith>
cool

[20:56:04.0000] <abarth>
but i think folks would be happier if i uploaded it

[21:00:00.0000] <MikeSmith>
I would make me happier

[21:01:00.0000] <MikeSmith>
that's the most important thing :)

[21:01:01.0000] <MikeSmith>
seriously, I think it would also help the IRI WG work

[21:01:02.0000] <MikeSmith>
if they are actually going to be working actively

[21:02:00.0000] <MikeSmith>
hmm, did Alan Kay blog somewhere recently?

[21:02:01.0000] <MikeSmith>
/me finds mention in e-mail of "the recent blog of Alan Kay"

[21:02:02.0000] <abarth>
dunno

[21:54:00.0000] <MikeSmith>
Hixie: if you can remember to add the conformance-checker flag for changes that need it, that would be really nice

[21:55:00.0000] <MikeSmith>
e..g., r5669, for bdi

[21:56:00.0000] <MikeSmith>
and r5636, for audio attribute on video 

[22:44:00.0000] <Hixie>
MikeSmith: oops, sorry

[22:44:01.0000] <Hixie>
hm, how about dirname="..." where ... is the field name we end up using

[22:44:02.0000] <Hixie>
rather than just making it name+".dir"

[22:44:03.0000] <Hixie>
or dirfield

[22:46:00.0000] <MikeSmith>
sounds like the name of a place in Illinois

[22:46:01.0000] <MikeSmith>
or maybe Michigan

[22:46:02.0000] <MikeSmith>
somewhere up there

[22:48:00.0000] <MikeSmith>
Icelandic has a very nice short word for "direction"

[22:48:01.0000] <MikeSmith>
which is "átt"

[22:48:02.0000] <MikeSmith>
but I guess that doesn't help us much

[23:00:00.0000] <MikeSmith>
Hixie: only thought I can offer is that it's really about reading order and I think the "dir" abbreviation has always been confusing

[23:07:00.0000] <MikeSmith>
http://www.theregister.co.uk/2010/11/08/opera_transaction_cache/print.html is a really interesting article

[23:13:00.0000] <Hixie>
MikeSmith: yeah... dunno which would be more confusing though, using "dir" in there, or _not_ using "dir" in there

[23:13:01.0000] <MikeSmith>
hmm, yeah

[23:39:00.0000] <MikeSmith>
Hixie: about r5248, "Make rel=prefetch apply to <a>."

[23:39:01.0000] <MikeSmith>
you subsequently reverted that at some later point,right?

[23:39:02.0000] <Hixie>
/me looks

[23:40:00.0000] <MikeSmith>
spec currently allows it on link as well

[23:40:01.0000] <Hixie>
"The prefetch keyword may be used with link, a, and area elements."

[23:40:02.0000] <Hixie>
it used to only apply to <link>

[23:40:03.0000] <Hixie>
it was made to apply to all three

[23:40:04.0000] <MikeSmith>
ah OK

[23:41:00.0000] <MikeSmith>
thanks

[23:42:00.0000] <MikeSmith>
but now I remember that validator.nu is not currently doing any checking on rel values anyway, so I don't need to worry about that one for now

[23:44:00.0000] <MikeSmith>
hsivonen: as you may or may not have noticed, I just raised a whole bug of new validator.nu bugs for spec changes that Hixie made over the last 4 months

[23:45:00.0000] <MikeSmith>
http://bugzilla.validator.nu/buglist.cgi?cmdtype=runnamed&namedcmd=open%20bugs

[23:45:01.0000] <MikeSmith>
about 20 new bugs

[23:46:00.0000] <MikeSmith>
I think I caught most or all of the changes that would affect validation behavior

[23:46:01.0000] <MikeSmith>
though not parser behavior

[23:47:00.0000] <MikeSmith>
anyway, I don't think you need to run your script that auto-generates bugs for spec checkins

[23:48:00.0000] <MikeSmith>
except maybe for anything that's related to parser behavior

[23:52:00.0000] <Hixie>
speaking of bugs and scripts, i need to find some way to integrate bugzilla and my mail folders into a single workflow

[23:52:01.0000] <Hixie>
maybe have the bugmails go to my imap folder and just use that...

[23:52:02.0000] <Hixie>
let's try that for now

[23:56:00.0000] <annevk>
Hixie, how about something similar to _charset_?

[23:56:01.0000] <annevk>
Hixie, and when there's such a hidden input field you will get the direction for all textual-controls

[23:57:00.0000] <Hixie>
yeah i considered that, but that seems extra complicated, since you'd still have to introduce an attribute to say which control you wanted the direction of

[23:57:01.0000] <MikeSmith>
annevk: lemme know if I need to do anything about http://lists.w3.org/Archives/Public/public-web-notification/2010Nov/0001.html (Moving Feature Permissions to DAP)

[23:58:00.0000] <Hixie>
and it doesn't seem to make things any simpler than just having the attribute straight on the control in the first place

[23:58:01.0000] <annevk>
Hixie, it would give you the direction of all controls where it is needed

[23:58:02.0000] <annevk>
i.e. it is not needed for <input type=date> but it is needed for <input type=text>, <textarea>, <input type=password> maybe?

[00:00:00.0000] <Hixie>
oh you'd set this once and it would just generate a whole bunch of fields?

[00:00:01.0000] <Hixie>
that'd be weird, you almost never actually want the direction

[00:00:02.0000] <Hixie>
e.g. you wouldn't want it for a password field

[00:00:03.0000] <hsivonen>
how does form submission on bidi sites work now?

[00:00:04.0000] <hsivonen>
badly?

[00:00:05.0000] <Hixie>
not great, yeah

[00:01:00.0000] <annevk>
Hixie, it would only do it for controls where it is necessary; if it is never needed for password, it would never give it for that one

[00:01:01.0000] <annevk>
it's just an idea though

[00:01:02.0000] <Hixie>
well how would you know which it's needed for?

[00:01:03.0000] <annevk>
it seemed sort of similar to the _charset_ usecase

[00:02:00.0000] <Hixie>
e.g. it'd be needed for a type=text that is a subject line, but not a type=text that is a credit card number

[00:02:01.0000] <annevk>
well, I only know it is not needed for <input type=tel>, various date inputs

[00:02:02.0000] <annevk>
right, for both of those it would give it

[00:03:00.0000] <annevk>
not sure the overhead would be that big though

[00:03:01.0000] <Hixie>
i think it'd be better to just have the controls that need it opt into it

[00:12:00.0000] <annevk>
MikeSmith, I considered going to Beijing, but hybi was not meeting and HTTP was not either

[00:12:01.0000] <Hixie>
should dirname or submitdir or whatever we call it apply to all input types and just submit the dir="" attribute, or should it only apply to certain types, and submit the element's directionality?

[00:12:02.0000] <annevk>
MikeSmith, and IRI is a failure so far

[00:12:03.0000] <MikeSmith>
I see

[00:12:04.0000] <annevk>
MikeSmith, so it would be for the security stuff and maybe talking to some people, that didn't seem worth it

[00:13:00.0000] <MikeSmith>
yeah

[00:15:00.0000] <annevk>
Hixie, I don't think it should apply to date-related input fields

[00:15:01.0000] <Hixie>
k

[00:15:02.0000] <annevk>
Hixie, of URL/email?/tel

[00:15:03.0000] <annevk>
s/of/or/

[00:16:00.0000] <Hixie>
.dirname or .dirName

[00:16:01.0000] <annevk>
should apply to <textarea>

[00:16:02.0000] <Hixie>
.dirName i guess

[00:16:03.0000] <annevk>
so it's not a boolean?

[00:17:00.0000] <Hixie>
nobody understood the boolean name

[00:17:01.0000] <abarth>
MikeSmith: http://www.ietf.org/id/draft-abarth-url-00.txt

[00:17:02.0000] <annevk>
but now you need to enter more info

[00:17:03.0000] <annevk>
rather than name + "dir" or some such

[00:17:04.0000] <Hixie>
well i can always make it imply the name if you just say "dirname"

[00:17:05.0000] <Hixie>
if you think that's a problem

[00:17:06.0000] <MikeSmith>
abarth: cool, thanks for the heads-up

[00:17:07.0000] <annevk>
that's kind of neat

[00:17:08.0000] <Hixie>
it'd look weird though

[00:18:00.0000] <Hixie>
<input type=text required name=subject dirname>

[00:18:01.0000] <Hixie>
<input type=text required name=subject dirname=subject.dir>

[00:18:02.0000] <Hixie>
<input type=text required name=subject submitdir>

[00:18:03.0000] <annevk>
maybe includedir

[00:19:00.0000] <annevk>
I guess the naming round already happened before I woke up

[00:19:01.0000] <Hixie>
yeah i considered that but it looks like "included ir"

[00:19:02.0000] <Hixie>
i should go to bed, but if anyone comes up with a better name while i'm asleep, whether for a boolean attribute or a field name attribute, comment on the bug http://www.w3.org/Bugs/Public/show_bug.cgi?id=10809

[00:20:00.0000] <Hixie>
nn

[00:25:00.0000] <annevk>
MikeSmith, I think DAP will just take over Feature Permissions

[00:25:01.0000] <annevk>
MikeSmith, nothing really needs to be done

[00:26:00.0000] <MikeSmith>
great

[00:26:01.0000] <annevk>
I wonder when the notification documents will be updated

[00:26:02.0000] <MikeSmith>
by the editor you mean?

[00:27:00.0000] <annevk>
I wonder why abarth's draft is not on tools.ietf.org

[00:27:01.0000] <annevk>
takes a while to propagate?

[00:27:02.0000] <annevk>
MikeSmith, yup

[00:27:03.0000] <abarth>
yeah

[00:29:00.0000] <annevk>
so I missed the IRI meeting by an hour

[00:29:01.0000] <annevk>
oh well

[00:29:02.0000] <annevk>
oh, it's still going on

[00:34:00.0000] <annevk>
wow, that's hard to follow

[00:56:00.0000] <annevk>
also, bidirectional URLs o_O

[01:13:00.0000] <annevk>
krijnh isn't a sad person either, smiling 22.7% of the time. 

[01:13:01.0000] <annevk>
krijnh is also a sad person, crying 2.1% of the time.

[01:13:02.0000] <annevk>
something is up

[01:29:00.0000] <jgraham>
annevk: Maybe he is just bipolar or something

[02:22:00.0000] <annevk>
yay http://tools.ietf.org/html/draft-abarth-url

[03:24:00.0000] <MikeSmith>
discussion in comments in http://www.marcozehe.de/2010/11/09/new-accessibility-support-for-html5-elements-and-attributes/ is interesting

[03:25:00.0000] <MikeSmith>
FF4 is mapping the HTML5 article element to ARIA "main" role

[03:28:00.0000] <gsnedders>
jgraham: yt?

[03:35:00.0000] <jgraham>
gsnedders: YEs

[03:35:01.0000] <MikeSmith>
hmm, so the IME proposal involves adding a getInputContext() method to the HTMLElement interface

[03:36:00.0000] <MikeSmith>
https://docs.google.com/fileview?id=0B8eVDHQ9_22-MzJhMTg2YmItNWU3NC00NzJmLThlMTAtYmU1ZTBlZWJhNzM0&hl=en&authkey=CLLHkFw&pli=1

[03:39:00.0000] <gsnedders>
jgraham: http://software.hixie.ch/utilities/js/live-dom-viewer/saved/692 — evil, or what's better?

[03:41:00.0000] <jgraham>
gsnedders: I'm not sure what you are trying to achieve

[03:41:01.0000] <gsnedders>
jgraham: Basically, I have a load of tests which needs the browsing context of an iframe

[03:41:02.0000] <gsnedders>
jgraham: So I can't run the tests until the iframe has loaded

[03:42:00.0000] <jgraham>
gsnedders: So create all the test objects

[03:42:01.0000] <gsnedders>
jgraham: Create a new async test for each?

[03:42:02.0000] <jgraham>
and then addEventListener("load", function() {test_obj.step(function(){})}, false)

[03:42:03.0000] <gsnedders>
/me sighs

[03:42:04.0000] <jgraham>
for each test object

[03:42:05.0000] <gsnedders>
Yay for creating hundreds of test objects.

[03:43:00.0000] <jgraham>
gsnedders: Well if you want hundreds of tests what do you expect?

[03:43:01.0000] <jgraham>
It would do it implicitly anyway

[03:43:02.0000] <gsnedders>
Well, sure, but it seems kinda ugly

[03:43:03.0000] <jgraham>
just shove them all in an array 

[03:44:00.0000] <gsnedders>
Yeah, will have to do that

[03:44:01.0000] <jgraham>
tests = []; for (var i=0;i<100;i++) {tests.push(async_test()}

[03:44:02.0000] <jgraham>
With more brackets

[03:44:03.0000] <gsnedders>
But it's not awesome when you have to get elements from the DOM from within the iframe

[03:44:04.0000] <jgraham>
What's not awesome? 

[03:44:05.0000] <jgraham>
And what would be better?

[03:45:00.0000] <gsnedders>
And the most exact reference you can have within the function is the iframe element

[03:45:01.0000] <gsnedders>
So you have to have iframe.contentDocument.gEBTN("body"), etc…

[03:46:00.0000] <jgraham>
You can write the tests inside the iframe document

[03:46:01.0000] <gsnedders>
Or am I missing an obvious way around this?

[03:47:00.0000] <gsnedders>
But does that create any event handlers within the iframe document?

[03:47:01.0000] <gsnedders>
I guess not…

[03:47:02.0000] <jgraham>
No, just normal cross frame variable access

[03:49:00.0000] <gsnedders>
/me wonders if it's worthwhile testing event handlers for both body and frameset in general

[03:49:01.0000] <gsnedders>
Or only the things that should differ…

[04:46:00.0000] <MikeSmith>
for the record, there's been recent discussion about the possibility of adding XSLT 2.0 support to WebKit

[04:46:01.0000] <MikeSmith>
even before the topic came up last week

[04:46:02.0000] <MikeSmith>
and unrelated to any discussion of that

[04:46:03.0000] <MikeSmith>
https://lists.webkit.org/pipermail/webkit-dev/2010-November/015023.html

[04:47:00.0000] <MikeSmith>
Alex Milowski

[04:47:01.0000] <jgraham>
Please, no

[04:47:02.0000] <MikeSmith>
heh

[04:48:00.0000] <MikeSmith>
you can't stand in the way of progress

[04:48:01.0000] <jgraham>
XSLT-on-the-web has been a huge waste of time as far as I can see. It is just used enough that you have to support it, but not so much that there is any benefit in doing it well

[04:49:00.0000] <MikeSmith>
I wonder if jl feels differently

[04:50:00.0000] <jgraham>
Well he probably enjoyed implementing it :)

[04:50:01.0000] <jgraham>
As awesome as jl is I don't think the right yardstick for web technologies is "is implementing this an intersting CS problem"

[04:51:00.0000] <MikeSmith>
:)

[04:51:01.0000] <MikeSmith>
I suppose so

[04:51:02.0000] <annevk>
if lots of people were using XML putting more effort in it would make sense

[04:53:00.0000] <MikeSmith>
maybe the right yardstick should be whether or not there's a cute icon for the technology

[04:53:01.0000] <MikeSmith>
in which case, http://xqilla.sourceforge.net/HomePage

[04:53:02.0000] <jgraham>
Oh, so that's why feeds are so widely implemented despite being pretty unpopular ouside tech circles

[04:53:03.0000] <MikeSmith>
midget dinosaur smashing the crap out of some city

[04:53:04.0000] <annevk>
haha

[04:55:00.0000] <hsivonen_>
it would be sad to go on the XPath 2.0 treadmill just because someone integrated some Qt stuff into WebKit

[04:58:00.0000] <MikeSmith>
the Qt XSLT2 stuff is nowhere near complete

[04:58:01.0000] <MikeSmith>
but this XQuilla stuff seems to be

[05:01:00.0000] <hsivonen>
I think demand for XPath 2.0 stuff should first be demonstrated by a JS implementation becoming super-popular

[05:01:01.0000] <hsivonen>
like jQuery became popular and the Selector API happened

[05:11:00.0000] <MikeSmith>
I guess that same argument could me made for holding off on natively implementing a lot of other stuff

[05:13:00.0000] <MikeSmith>
and if there is somebody who has time an interest to integrate it into browser code rather than waiting for somebody else to develop a JS implementation, it would seem pretty odd to stand in the way of them doing that

[05:14:00.0000] <hsivonen>
MikeSmith: I guess that depends on who is going to maintain it later

[05:14:01.0000] <MikeSmith>
true

[05:14:02.0000] <jgraham>
WebIDL needs a comments box :(

[05:20:00.0000] <jgraham>
/me wonders where the restrictions in http://www.w3.org/TR/WebIDL/#native-objects come from

[05:21:00.0000] <jgraham>
It seems like it is designed to only cover the possibility of passing in a function(){} instead of an object for addEventListener and similar

[05:23:00.0000] <jgraham>
In particular it seems like it should be possible to allow native objects to be used for ImageData, but the restrictions prevent that

[05:24:00.0000] <jgraham>
Also, Gecko and current Opera allow that

[05:25:00.0000] <jgraham>
Also, someone should force heycam to use irssi+screen so I can ramble on here and pretend it counted as useful feedback

[05:29:00.0000] <annevk>
you could just ramble and expect him to read the logs

[05:29:01.0000] <jgraham>
What do you think I am doing?

[05:30:00.0000] <annevk>
just rambling?

[05:31:00.0000] <jgraham>
Hmm, it seems these days that the stack of open elements is more like a stack of open tokens

[05:32:00.0000] <jgraham>
/me assumes that is what hsivonen implements at least

[05:36:00.0000] <hsivonen>
jgraham: well, at least the list of active formatting elements contains the data that was on the token

[05:38:00.0000] <jgraham>
You never have to do an identity comparison between the stack of open elements and the active formatting elements?

[05:39:00.0000] <hsivonen>
jgraham: that's why the element node reference is also there

[05:39:01.0000] <hsivonen>
jgraham: so you can compare element node identity

[05:39:02.0000] <hsivonen>
jgraham: but you never read the attributes from the element node

[05:39:03.0000] <jgraham>
Oh so you store (token, node) tuples?

[05:39:04.0000] <hsivonen>
jgraham: you use the attributes from the token

[05:39:05.0000] <hsivonen>
jgraham: roughly

[05:42:00.0000] <zcorpan>
http://meteatamel.wordpress.com/2010/11/09/websocket-handshake-and-content-length/

[06:02:00.0000] <annevk>
anyone ideas on how to restructure http://dev.w3.org/csswg/cssom-view/ to be more feature-oriented rather than interface-oriented?

[06:05:00.0000] <erlehmann>
anyone knows if there is en equivalent to a soft hyphen, without a hyphen

[06:05:01.0000] <erlehmann>
?

[06:05:02.0000] <erlehmann>
a soft line break?

[06:05:03.0000] <annevk>
invisible space

[06:05:04.0000] <Philip`>
Zero-width space?

[06:05:05.0000] <annevk>
that one

[06:06:00.0000] <Philip`>
http://www.fileformat.info/info/unicode/char/200b/index.htm

[06:06:01.0000] <erlehmann>
annevk, Philip`, thanks. i'll just test it.

[06:07:00.0000] <erlehmann>
works like a charm!

[06:07:01.0000] <erlehmann>
:)

[06:08:00.0000] <annevk>
unexpected victory there :)

[06:09:00.0000] <Philip`>
I think some browsers and some fonts may render it as a visible little box

[06:09:01.0000] <Philip`>
but that might have only been IE6 in Wine

[06:09:02.0000] <Philip`>
so probably best to just test it in whichever browsers/platforms you care about

[06:10:00.0000] <erlehmann>
I HAVE DONE AN ART

[06:11:00.0000] <erlehmann>
javascript:function asort(text) {return text.split("").sort().join("\u200b");/* joining with a zero width space makes line breaks possible */}var xPathResult = document.evaluate('.//text()[normalize-space(.) != ""]',document.body,null,XPathResult.ORDERED_NODE_SNAPSHOT_TYPE,null);for(var i = 0, l = xPathResult.snapshotLength; i < l + 1; i++) {var textNode = xPathResult.snapshotItem(i);textNode.data = asort(textNode.data);}

[06:11:01.0000] <erlehmann>
do this on your favourite website, and it gets sorted. though i have to sort out the alphabetical stuff.

[06:13:00.0000] <erlehmann>
string.sort() puts "ABC" before "abc" :(

[06:35:00.0000] <zcorpan>
erlehmann: just pass your own function to sort() that lowercases before comparing

[06:35:01.0000] <erlehmann>
zcorpan, done. thanks.

[06:48:00.0000] <erlehmann>
this :) http://daten.dieweltistgarnichtso.net/src/alphabetize.js

[06:49:00.0000] <jgraham>
erlehmann: You will be glad to know there is a special place in heaven for people who endure the DOM3 XPath APIs

[06:50:00.0000] <erlehmann>
jgraham, and a special hell for those who invented them.

[06:52:00.0000] <jgraham>
It's so bad it was considered NSFD (Not Safe For Dante)

[07:17:00.0000] <hsivonen>
looks like the whatwg wiki needs a higher spec VM

[07:18:00.0000] <annevk>
VM?

[07:18:01.0000] <annevk>
oh I see, it's down

[07:43:00.0000] <annevk>
AryehGregor, you around?

[08:40:00.0000] <webr3>
http://www.kickstarter.com/projects/seantron/we-are-battle looks cool

[08:51:00.0000] <annevk>
AryehGregor, wanted to ask feedback on http://annevankesteren.nl/2010/11/html5-bidirectional-text

[09:26:00.0000] <jdaggett>
joe: ping

[09:27:00.0000] <Philip`>
jdaggett: (There doesn't appear to be a joe here)

[09:27:01.0000] <jdaggett>
pardon, wrong room...

[11:23:00.0000] <grantg>
Is anyone else noticing problems in the chromium implementation of typed arrays?

[11:24:00.0000] <grantg>
U_U

[11:25:00.0000] <grantg>
Does anyone else here notice typed arrays are faster in Firefox, but gecko in webkit?

[11:25:01.0000] <grantg>
*but slower in webkit.

[11:25:02.0000] <grantg>
/me is bad at typing, sorry.

[11:25:03.0000] <grantg>
/me curses out autocomplete

[11:26:00.0000] <grantg>
oh, shiz, gtg

[11:53:00.0000] <TabAtkins_>
annevk: What kind of feedback?  It seems like you've hit the issues well.

[12:29:00.0000] <schalkn>
greetings everyone

[12:30:00.0000] <schalkn>
When refering to HTML5 arguments, does refer to the new one's such as spellcheck, contenteditable etc?

[12:31:00.0000] <Hixie>
i don't understand the question

[12:31:01.0000] <MikeSmith>
schalkn: maybe you mean attributes?

[12:31:02.0000] <schalkn>
One of the tests the IE9 did 'so well' in was HTML5 arguments

[12:31:03.0000] <schalkn>
What does this refer to exactly?

[12:33:00.0000] <schalkn>
From the web monkey article: "The W3C test looks at seven elements of HTML5: attributes, audio, video, Canvas, getElementsByClassName, foreigncontent, and XHTML5."

[12:34:00.0000] <Philip`>
schalkn: Do you mean "attributes" rather than "arguments"?

[12:34:01.0000] <schalkn>
Ah crap, yes exactly ;D

[12:35:00.0000] <Philip`>
In this context, "attributes" means http://dvcs.w3.org/hg/html/file/43589d3b48db/tests/approved/attributes/anchor_href.htm

[12:35:01.0000] <Philip`>
That's the only test case

[12:35:02.0000] <schalkn>
For example, what does this test do exactly: http://test.w3.org/html/tests/harness/harness.htm

[12:35:03.0000] <schalkn>
ok, refered to the same thing

[12:35:04.0000] <Philip`>
The test suite is incredibly incomplete (well under 1% of the number of tests it'll need when it's finished) and the results are meaningless

[12:36:00.0000] <schalkn>
I was putting something together that uses stuff such as contenteditable, spellcheck, accesskey etc.

[12:36:01.0000] <schalkn>
And was wondering whether this is what was meant by attributes

[12:36:02.0000] <schalkn>
it seems so

[12:37:00.0000] <Philip`>
You should ignore any article that talks about the test suite, because they all seem to be totally missing the point

[12:38:00.0000] <Philip`>
(the point being that the results are currently meaningless)

[12:38:01.0000] <Philip`>
In other contexts, "attributes" means lots of different things

[12:38:02.0000] <schalkn>
ok, note taken

[12:40:00.0000] <schalkn>
so would the final test include tests against attributes

[12:40:01.0000] <Philip`>
The hypothetical goal is for the completed test suite to test everything

[12:40:02.0000] <schalkn>
ok, I see

[12:41:00.0000] <Philip`>
(or at least everything that's arguably part of HTML, not e.g. CSS)

[12:41:01.0000] <schalkn>
sure

[12:41:02.0000] <Philip`>
Need to get people to write the tests before that'll be achieved, though :-)

[12:41:03.0000] <schalkn>
I am basically working on that here thebrowsereview.com

[12:41:04.0000] <schalkn>
;D

[12:44:00.0000] <MikeSmith>
schalkn: if http://thebrowsereview.com/ is your site,is it OK with you if I add it to our HTML5 aggregator at http://www.w3.org/html/planet/ ?

[12:46:00.0000] <schalkn>
definitely, that would be great

[12:46:01.0000] <schalkn>
It is my site

[12:47:00.0000] <schalkn>
Still a LOT of content that will be going up there. Writing and researching as much as time allows me

[12:55:00.0000] <jgraham>
schalkn: (insert my standard caution-around-benchmarks note here)

[12:58:00.0000] <schalkn>
jgraham: bench marks are definitely not perfect and one actually needs to aggregate results from multiple sources, which I hope to do, but over time it does give an indication of the evolution and improvement of say, JavaScript engines

[12:59:00.0000] <jgraham>
Well yes, if you are doing comparisons like "are engines from 2005 slower than those from 2010" then they are not unreasonable

[12:59:01.0000] <schalkn>
jip, exactly what I meant

[12:59:02.0000] <jgraham>
If you are doing "is X faster than Y for real applications" not so much

[13:00:00.0000] <jgraham>
where X and Y are current browsers

[13:01:00.0000] <jgraham>
w

[13:01:01.0000] <schalkn>
The http://dromaeo.com/ tests are pretty good though

[13:01:02.0000] <Philip`>
/me found http://www.tomshardware.com/news/ie9-chrome-firefox-safari-opera,11574.html which seems to be reading a lot into the test results :-/

[13:02:00.0000] <schalkn>
Much more intensive and broader than SunSpider

[13:03:00.0000] <schalkn>
Jip, there were a ton of articles around those test result the last week or so

[13:07:00.0000] <jgraham>
Not sure that dromeo is particularly good. It tests more than sunspider for sure

[13:08:00.0000] <jgraham>
Oh man. That Tom's Hardware article

[13:08:01.0000] <gsnedders>
tl;dr summary?

[13:09:00.0000] <jgraham>
"OMG the W3C published the HTML5 test results and they say they're not reliable but I am going to take them seriously anyway and make an enormous conspiracy theory out of it"

[13:10:00.0000] <gsnedders>
Okay.

[13:10:01.0000] <gsnedders>
Just, okay.

[13:10:02.0000] <schalkn>
yeah, that is pretty much the gist of it

[13:10:03.0000] <jgraham>
At least that's what I got from skimming it

[13:10:04.0000] <jgraham>
I guess I should read it now

[13:10:05.0000] <gsnedders>
/me has better stuff to do here than read such articles on my laptop

[13:11:00.0000] <jgraham>
But when it starts with "The W3C has spoken, the IE9 is the best HTML5 browser" I don't hold much hope

[13:18:00.0000] <MikeSmith>
schalkn: added - http://www.w3.org/html/planet/

[13:20:00.0000] <schalkn>
Awesome, thanks Mike

[13:20:01.0000] <schalkn>
Now let me get to work on more content ;D

[13:22:00.0000] <MikeSmith>
schalkn: it only picked up your "HTML5 Form Elements Browser Support" item, because it doesn't care about CSS or whatever

[13:22:01.0000] <schalkn>
Ah, ok. Lot more HTML5 stuff coming though

[13:23:00.0000] <MikeSmith>
great -- it should pick up anything you tag with "HTML5" or anything that mentions HTML5 in the  body of the post

[13:23:01.0000] <schalkn>
perfect

[13:24:00.0000] <schalkn>
Regarding accesskey, is there some standard being worked towards or suggested that browser vendors will adhere to? I mean, specifying H for home, for example. In IE9, maybe earlier as well, pressing alt+H will move focus to the element with the H accesskey but in others not. The reason being, the not all browsers have implemented access key triggers with Alt+accesskey

[13:24:01.0000] <schalkn>
There is also the problem that some Alt+ are already mapped to browser menu's and such

[13:25:00.0000] <schalkn>
I have always found it incredibly hard to make good use of access keys while at the same time making them useful for users and avoiding conflicts with the UA

[13:26:00.0000] <schalkn>
I completely understand their need and do not foresee it being removed from the spec, but the current implementation is a bit all over the place with regards to browsers.

[13:27:00.0000] <schalkn>
Thoughts anyone?

[13:31:00.0000] <jgraham>
"""First I noticed that it is a fairly comprehensive and time-consuming test. There are 212 tests [...]"""

[13:32:00.0000] <jgraham>
That is the scale of the disconnect we have to work through

[13:33:00.0000] <schalkn>
That is a lot of tests

[13:34:00.0000] <schalkn>
But heck, there is also a lot of ground to cover

[13:34:01.0000] <Philip`>
SVG only needed 280 tests, so we're catching up well already

[13:35:00.0000] <Philip`>
schalkn: 212 is a lot?

[13:36:00.0000] <jgraham>
schalkn: 212 is a pitiful number of tests compared to the size of HTML5

[13:36:01.0000] <schalkn>
Well, the number sound large but see my comment after that.

[13:36:02.0000] <schalkn>
I thought someone was complaining that, that is to many tests

[13:36:03.0000] <schalkn>
I personally do not think so

[13:36:04.0000] <schalkn>
There is a LOT to test

[13:37:00.0000] <webr3>
212 is not a low, infact there should be a lot more, and that article is ridiculous

[13:37:01.0000] <webr3>
/me thinks the writer missed thus HUGE disclaimer

[13:37:02.0000] <Philip`>
I've got 804 tests just for <canvas>, and that's still missing quite a lot

[13:37:03.0000] <webr3>
/me s/thus/the

[13:38:00.0000] <schalkn>
To test HTML5 there will have to be a ton

[13:38:01.0000] <tabatkins>
"ton" = probably about 100k

[13:39:00.0000] <schalkn>
Just a quick side not to throw in here(more accesske related stuff). Why is the spec so ambiguous regarding access keys. It seems a bit strange that it can either trigger the link or just move focus to it. Should it not be one of the two?

[13:40:00.0000] <schalkn>
I mean, if one browser simply moves focus (IE) and another actually activates/follows the link (FF), this can easily become confusing to the end user

[13:41:00.0000] <schalkn>
So when they are using an access key, they are not sure whether focus will be moved or whether it will follow the link

[13:42:00.0000] <schalkn>
Maybe it was meant in the context of any HTML element being able to have an access key and some will therefore not be links and as such focus will simply be moved to them

[13:42:01.0000] <schalkn>
I guess I am answering my own question ;D

[13:42:02.0000] <Philip`>
Do you mean the bit that says "Each element that can be activated or focused can be assigned a single key combination to activate it, using the accesskey attribute." ?

[13:43:00.0000] <schalkn>
This bit "All HTML elements may have the accesskey content attribute set. The accesskey attribute's value is used by the user agent as a guide for creating a keyboard shortcut that activates or focuses the element."

[13:43:01.0000] <Philip`>
That doesn't say "must" (or "should" or other RFC2119 keywords) so it's not a normative requirement - it's just an informative summary of the normative behaviour that's required by other parts of the spec

[13:45:00.0000] <jgraham>
(technically "may" is a RFC2119 keyword)

[13:46:00.0000] <jgraham>
(but that sentence isn't relevant to UAs even if you read it as a conformance requirement)

[13:46:01.0000] <Philip`>
(I was referring more to the bit I quoted, and then was too lazy to bother reading schalkn's quote and updating my response)

[13:48:00.0000] <Philip`>
I can't actually see a bit that normatively says to focus elements, though

[13:50:00.0000] <schalkn>
Wait, I am new to reading the specs in depth so please be patient ;D, I read the introduction and I belive I have a better understanding now

[13:53:00.0000] <Philip`>
It takes a while to get used to the style :-)

[13:54:00.0000] <Philip`>
I think the most important thing is to be careful to distinguish conformance requirements (things with "must" etc) from everything else

[13:54:01.0000] <Philip`>
since otherwise there will likely be great confusion

[13:54:02.0000] <schalkn>
sure, understood

[13:54:03.0000] <jgraham>
And to distingush author conformance requirements from UA conformance requirements

[13:55:00.0000] <jgraham>
People often get the first and trip up over the second

[13:56:00.0000] <Hixie>
http://ln.hixie.ch/?start=1140242962&count=1 might help too

[13:56:01.0000] <schalkn>
Ah awesome, thanks Ian. Will definitely read that

[13:57:00.0000] <schalkn>
Quick question, could the text under 8.4.3 Processing model, be seen as something that can form the basis of a test?

[14:01:00.0000] <othermaciej>
Hixie: btw, I wrote tests for the id element and noticed some things that I wanted to test but couldn't justify based on HTML5

[14:01:01.0000] <othermaciej>
Hixie: wanted to ask you about them before I file bugs

[14:01:02.0000] <Hixie>
sure

[14:01:03.0000] <Hixie>
schalkn: which processing model is 8.4.3?

[14:02:00.0000] <schalkn>
For accesskey, not stuck on accesskey, just conveniently located at the moment

[14:02:01.0000] <schalkn>
http://www.whatwg.org/specs/web-apps/current-work/multipage/editing.html?style=highlight#assigned-access-key

[14:02:02.0000] <jgraham>
schalkn: Yes, but it might be quite difficult to write good tests

[14:03:00.0000] <Hixie>
it is definitely testable, but as jgraham says, it's a bit of a tricky one

[14:03:01.0000] <Hixie>
because it is hard to automate

[14:03:02.0000] <jgraham>
Hixie: That section seems to violate your specification reading guide btw :)

[14:03:03.0000] <Hixie>
and because the UAs have some leeway

[14:03:04.0000] <schalkn>
Cool, just want to get a feel for the thinking behind these tests

[14:03:05.0000] <Hixie>
jgraham: oh?

[14:03:06.0000] <Hixie>
jgraham: how so?

[14:03:07.0000] <jgraham>
It is phrased as a statement of fact, but it should be a conformance requirement

[14:03:08.0000] <Hixie>
jgraham: hm, yes, that section uses 'must' inappropriately

[14:03:09.0000] <Hixie>
jgraham: it's supposed to be a definition

[14:04:00.0000] <Hixie>
shouldn't have a "must" in there at all

[14:04:01.0000] <Hixie>
filed a bug

[14:04:02.0000] <jgraham>
Ah, OK that would be one fix

[14:04:03.0000] <Hixie>
http://www.w3.org/Bugs/Public/show_bug.cgi?id=11279

[14:06:00.0000] <othermaciej>
Hixie: the two things I wanted to test are:

[14:06:01.0000] <othermaciej>
(1) <span id=""> (literally empty value) doesn't create an id association

[14:06:02.0000] <schalkn>
Wow, I must say I am getting a great insight into the whole spec writing process I do not think a lot of people are aware of. Intense

[14:06:03.0000] <othermaciej>
(2) what happens when you have multiple elements with the same id

[14:06:04.0000] <othermaciej>
I guess #2 will be covered by Web DOM Core

[14:07:00.0000] <othermaciej>
#1 could be fixed by changing an "if" to "if and only if"

[14:07:01.0000] <othermaciej>
specifically "If the value is not the empty string, user agents must associate the element with the given value"

[14:07:02.0000] <othermaciej>
if that was "If and only if", I could justify a test for empty id not making an association

[14:07:03.0000] <othermaciej>
am I reading this right or did I miss a subtletly?

[14:08:00.0000] <othermaciej>
this is the section I have in mind btw http://dev.w3.org/html5/spec/Overview.html#the-id-attribute

[14:10:00.0000] <jgraham>
othermaciej: Isn't the "and only if" implied

[14:10:01.0000] <Hixie>
getElementById() in the face of multiple IDs is a DOM Core issue, but the answer will be to take hte first one in tree order iirc

[14:10:02.0000] <jgraham>
Because the absence of a specified behaviour always implies the absence of a behaviour

[14:10:03.0000] <Hixie>
for (1), the spec says "If the value is not the empty string, user agents must associate the element with the given value"

[14:10:04.0000] <Hixie>
so that seems clear

[14:10:05.0000] <othermaciej>
jgraham: as a former math geek, I would never assume "if" means "if and only if"

[14:11:00.0000] <othermaciej>
it seems to me that the spec doesn't say what to do in the empty string case

[14:11:01.0000] <Hixie>
it's not "only if" because there's a stack of things that could cause the element to have an ID other than this

[14:11:02.0000] <jgraham>
othermaciej: As a current HTML5 reader you might find it helps :)

[14:11:03.0000] <Hixie>
e.g. xml:id=""

[14:11:04.0000] <othermaciej>
it only says what to do in the non-empty-string case

[14:11:05.0000] <Hixie>
if the spec doesn't tell you to do something, don't do it

[14:11:06.0000] <jgraham>
So the implication is that in the empty string case you do nothing

[14:11:07.0000] <Hixie>
i'm not going to list all the things you shouldn't do

[14:12:00.0000] <Hixie>
because there's an infinite number of them

[14:12:01.0000] <jgraham>
/me tends to agree with Hixie here

[14:12:02.0000] <othermaciej>
well, the spec certainly doesn't take the position that any implementation with a vendor extension is nonconforming

[14:12:03.0000] <othermaciej>
so I would have to do mind reading to tell which unmentioned things are secret MUST NOTs

[14:12:04.0000] <Hixie>
because it explicitly has a "may" for vendor extensions

[14:13:00.0000] <othermaciej>
is an implementation with a vendor extension to support empty id conforming?

[14:13:01.0000] <Hixie>
"All extensions must be defined so that the use of extensions neither contradicts nor causes the non-conformance of functionality defined in the specification."

[14:13:02.0000] <Hixie>
so no

[14:13:03.0000] <jgraham>
Arguably it doesn't contradict

[14:14:00.0000] <othermaciej>
I don't see how it contradicts what the spec says

[14:14:01.0000] <othermaciej>
it would just define a behavior for the case the spec doesn't define

[14:14:02.0000] <schalkn>
Thanks for all of the information everyone, cheers

[14:14:03.0000] <jgraham>
But then neither would it if it caused the default background to blink red and yellow

[14:14:04.0000] <Hixie>
well you can always define that every element has ID "foo"

[14:14:05.0000] <Hixie>
i mean, i can't stop that

[14:14:06.0000] <jgraham>
Which the spec also fails to explicitly forbid

[14:14:07.0000] <Hixie>
if you just do what the HTML spec says, then you won't assigned an ID for id="" (empty)

[14:14:08.0000] <Hixie>
if you do other things, you might

[14:15:00.0000] <Hixie>
the HTML spec just lists the IDs you have to have

[14:15:01.0000] <othermaciej>
from the position of implementor, I wouldn't assign an ID for empty id

[14:15:02.0000] <Hixie>
it doesn't prevent you from having other ones

[14:15:03.0000] <othermaciej>
from the position of test case author, I don't see a justification for testing that

[14:15:04.0000] <othermaciej>
I'm fine with leaving the test case as is

[14:15:05.0000] <Hixie>
in particular, xml:id, XML DTDs, and legacy DOM3 Core can all assign IDs in ways outside of HTML's definition

[14:16:00.0000] <jgraham>
I think you are being more pedantic than is actually usefull :)

[14:16:01.0000] <jgraham>
s/ll/l/

[14:16:02.0000] <othermaciej>
if any element may have any extra ids, for no reason apparent in the markup, then my whole test case is invalid

[14:16:03.0000] <Hixie>
othermaciej: if you can come up with a way to phrase this that restricts it as we are describing without making an incorrect requirement, i'm all for updating the spec

[14:17:00.0000] <othermaciej>
well, I can think of how to patch the empty id attribute case, but I am not sure how to properly deal with other sources of ids

[14:18:00.0000] <othermaciej>
I'll think about it

[14:18:01.0000] <Hixie>
how would you patch the empty ID attribute case?

[14:21:00.0000] <othermaciej>
Assuming we are being paranoid about other sources of ids, my first try would be "If the value is not the empty string, user agents must associate the element with the given value ... If the value is the empty string, then user agents must not create an association due to the attribute."

[14:21:01.0000] <othermaciej>
but then I'd check whether any other means of associating an ID can create an empty ID

[14:22:00.0000] <zcorpan>
clearly the attribute should be called icanhasdir=""

[14:22:01.0000] <Hixie>
what if the attribute is missing?

[14:22:02.0000] <Hixie>
surely if the attribute is missing, then user agents must not create an association due to the attribute either

[14:22:03.0000] <othermaciej>
anyway, if I think of something good, I'll file a bug

[14:22:04.0000] <othermaciej>
need to go back to naptime now

[14:22:05.0000] <Hixie>
also, if the attribute is present, the browser should not crash

[14:23:00.0000] <Hixie>
and should not make the node in the DOM have an extra invisible parent

[14:23:01.0000] <Hixie>
and all kinds of other things that the spec doesn't require that you do, but which you could do if you're going down the line of thought that requires you to enumerate the things you should not do...

[14:28:00.0000] <othermaciej>
I hope HTML5 spells out what should happen in the case of missing or empty-valued attributes in cases where testing that behavior is worthwhile (e.g. the href attribute on <a>)

[14:28:01.0000] <Hixie>
it spells out what should happen

[14:28:02.0000] <othermaciej>
you may be right that taking my position to an extreme would lead to the conclusion that no test is valid

[14:28:03.0000] <Hixie>
it doesn't enumerate what should not happen

[14:28:04.0000] <Hixie>
id="" is representative of how this is done

[14:29:00.0000] <Hixie>
throughout the spec

[15:35:00.0000] <annevk>
fwiw, I hope we can nuke xml:id

[15:35:01.0000] <annevk>
DOM3 Core methods are nuked by Web DOM Core

[15:36:00.0000] <annevk>
and dunno about DTD ID assignment, but I hope at some point we can drop that too

[15:37:00.0000] <Hixie>
yeah in practice it's not as big a deal, those are really just existence proofs more than a real concern

[15:42:00.0000] <annevk>
I have this idea of introducing Element.id 

[15:42:01.0000] <Hixie>
wfm

[15:42:02.0000] <annevk>
and Element.class[Name|List]

[15:42:03.0000] <Hixie>
wfm also

[15:42:04.0000] <annevk>
great :)

[15:43:00.0000] <annevk>
the idea being that while maybe we cannot change the syntax layers, we can change the layer that matters

[15:52:00.0000] <jacobolus>
doesn't Element.id, Element.className already exist?

[15:53:00.0000] <othermaciej>
annevk: I would love to see xml:id die

[15:54:00.0000] <annevk>
jacobolus, no

[15:54:01.0000] <annevk>
hsivonen, feel sorry for the replies you are getting on www-tag

[15:57:00.0000] <jacobolus>
annevk: those seem to exist in some browsers?

[15:57:01.0000] <jacobolus>
annevk: or maybe I'm just completely missing the point of the discussion

[15:58:00.0000] <Hixie>
anne is making the distinction of HTML vs non-HTML Element objects

[15:59:00.0000] <jacobolus>
so non-HTML elements don't have id/className, but HTML elements do, is that it?

[15:59:01.0000] <Hixie>
currently


2010-11-10
[16:00:00.0000] <jacobolus>
gotcha. I definitely agree then that anything that gets a DOM node should have Element.id/Element.className

[16:00:01.0000] <jacobolus>
and should work w/ getElementById, etc.

[16:01:00.0000] <zcorpan>
should we make all elements HTMLElements? :)

[16:02:00.0000] <jacobolus>
annevk: I seem to be able to use Element.id on SVG elements in Safari

[16:02:01.0000] <jacobolus>
and then fetch them w/ getElementById, etc.

[16:03:00.0000] <jacobolus>
but maybe that's browser-specific?

[16:03:01.0000] <annevk>
try with non-SVG, non-MathML, non-HTML elements

[16:04:00.0000] <jacobolus>
annevk: is there a page someplace w/ some of those? I'm not sure if I have a use for such...

[16:04:01.0000] <annevk>
also non-XBL, non-XUL if you happen to use some Gecko flavor

[16:04:02.0000] <zcorpan>
data:text/xml,<foo id="bar"/>

[16:04:03.0000] <zcorpan>
javascript:alert(document.documentElement.id)

[16:04:04.0000] <annevk>
zcorpan, one step at the time :)

[16:05:00.0000] <weinig>
jacobolus: SVGElement has an id attribute http://www.w3.org/TR/SVG/types.html#InterfaceSVGElement

[16:05:01.0000] <jacobolus>
weinig: gotcha

[16:06:00.0000] <jacobolus>
is the use of non-{HTML/SVG/MathML/XUL} elements common?

[16:08:00.0000] <jacobolus>
annevk: ISTM that anything that's going to be in the DOM should get an ID, so +1 from me (not that my opinion necessarily counts for anything)

[16:13:00.0000] <annevk>
it's not common, but it would simplify things and if we ever get more XML vocabularies the right answer is implied

[16:15:00.0000] <othermaciej>
XML should have just reserved id for an ID attribute instead of xml:id

[16:15:01.0000] <othermaciej>
sadly I think there are some obscure DTDs that use an attribute named "id" for a non-id purpose

[16:16:00.0000] <annevk>
there's one I think

[16:16:01.0000] <annevk>
ChemML or some such?

[16:16:02.0000] <jacobolus>
seems like something to put into http://www.w3.org/TR/2004/REC-DOM-Level-3-Core-20040407/core.html#ID-745549614 to me

[16:16:03.0000] <annevk>
but they don't have a DOM :)

[16:17:00.0000] <annevk>
jacobolus, it's http://www.w3.org/TR/domcore/ now

[16:17:01.0000] <annevk>
keep up ;p

[16:17:02.0000] <jacobolus>
okay, into http://www.w3.org/TR/domcore/#interface-element then

[16:17:03.0000] <annevk>
nn

[16:17:04.0000] <zcorpan>
nn

[16:18:00.0000] <jacobolus>
annevk: just take your red box there and make it part of the spec. sounds great :)

[17:52:00.0000] <gavin>
is irc.w3.org down?

[17:53:00.0000] <boogyman>
I'm unable to connect as well

[18:15:00.0000] <gavin>
looks like it's back now

[19:39:00.0000] <zaythan>
hi all :)

[21:13:00.0000] <AryehGregor>
annevk, seems accurate.  In real life you'd probably use just <bdi>, though, not <bdi dir=rtl>, for that example (since it's probably auto-generated by an application that doesn't know the direction of the string).

[21:14:00.0000] <AryehGregor>
I haven't had a chance to look over the details of what Hixie did for dir=auto.

[22:38:00.0000] <hsivonen>
othermaciej: is http://www.w3.org/html/wg/tracker/issues/128 going to be put to poll soon? I'd like to have the Chairs' decision soonish considering that Firefox 4 is close to shipping

[23:51:00.0000] <MikeSmith>
hsivonen: I believe the chairs are still planning to ask for counter proposals for issue 128 before taking it to a poll

[23:53:00.0000] <MikeSmith>
hsivonen: so if you have some urgency around trying to get it resolved before Firefox 4 ships, I think that is a legitimate reason for asking the chairs to consider prioritizing it higher

[00:04:00.0000] <hsivonen>
MikeSmith: Hixie already filed a counter-CP

[00:04:01.0000] <hsivonen>
MikeSmith: it seems unlikely that someone would write a CP with a third way

[00:05:00.0000] <MikeSmith>
hsivonen: yeah, I'm not sure myself what else they are expecting

[00:06:00.0000] <MikeSmith>
but that is what I understand they are intending

[00:06:01.0000] <hsivonen>
I see

[00:06:02.0000] <hsivonen>
I wish the Decision cycle was faster in general

[00:07:00.0000] <MikeSmith>
yeah

[00:07:01.0000] <MikeSmith>
I think given the number of issues that LC is likely to generate, it's going to need to be faster

[00:08:00.0000] <MikeSmith>
about issue 128 in particular I can discuss it with the chairs on the HTML WG telcon this week

[00:08:01.0000] <MikeSmith>
tomorrow

[00:08:02.0000] <hsivonen>
MikeSmith: thanks

[00:08:03.0000] <MikeSmith>
if you are able to attend the call yourself, that would be helpful also

[00:13:00.0000] <hsivonen>
hmm. if the call starts at 18 Helsinki time, I'd miss the start of the call but might be able to make it to the second half

[00:14:00.0000] <hsivonen>
jgraham: ?

[00:15:00.0000] <jgraham>
Sorry, thought my connection had dropped

[00:15:01.0000] <MikeSmith>
hsivonen: there typically isn't a second half -- the calls don't often run more than 30 minutes these days

[00:15:02.0000] <MikeSmith>
hsivonen: so it's probably better for you not to try to rush to make the second half of the call

[00:17:00.0000] <MikeSmith>
if there's not likely to be one

[00:17:01.0000] <hsivonen>
MikeSmith: ok

[00:17:02.0000] <MikeSmith>
hmm, is anybody around yet who has admin access to the whatwg mailing list config/

[00:18:00.0000] <MikeSmith>
seems like the spammer is going to be at it for a while

[00:18:01.0000] <MikeSmith>
oh man

[00:18:02.0000] <MikeSmith>
even more yet

[00:18:03.0000] <virtuelv>
jebus, the torrent of spam to the mailing list is annoying

[00:19:00.0000] <MikeSmith>
Гоннов is nice name at least

[01:01:00.0000] <Peter`>
The spam wasn't nice, but I don't think Alexandre replying to the guy is going to help

[01:09:00.0000] <zcorpan>
it helped the spammer since the links got in yet another message

[01:19:00.0000] <othermaciej>
hsivonen: probably fairly soonish, yes - we want to give anyone else with an interest in creating additional proposals the opportunity to speak up

[01:21:00.0000] <hsivonen>
othermaciej: oh is this the process step where the counter-proposal clock starts only after the initial proposal deadline has passed even when the counter-proposal has already been written?

[01:22:00.0000] <othermaciej>
hsivonen: we should probably short circuit it since we already have a proposal and counter-proposal, and odds of a third distinct proposal do not seem high

[01:23:00.0000] <hsivonen>
othermaciej: yeah

[02:37:00.0000] <zcorpan>
hsivonen: http://ukwebfocus.wordpress.com/2010/11/10/experiences-migrating-from-xhtml-1-to-html5/ (in case you want to comment with your validator hat on)

[02:49:00.0000] <hsivonen>
zcorpan: thanks

[02:52:00.0000] <david_carlisle>
zcorpan: should we make all elements HTMLElements? :)  

[02:52:01.0000] <david_carlisle>
yes why not (it would simplify the mathml story if math elements inherited from that, and I can't see why other vocabularies wouldn't also benefit)

[02:55:00.0000] <zcorpan>
david_carlisle: i think it's better to more stuff to Element that we want to have everywhere

[02:55:01.0000] <hsivonen>
I think it should true that all elements in the HTML namespace and only those element implement HTMLElement

[02:56:00.0000] <hsivonen>
analogously for SVGElement and the SVG namespace

[02:56:01.0000] <hsivonen>
and if we want stuff on all elements, those things should be hoisted to Element

[02:57:00.0000] <zcorpan>
s/more/move/

[02:58:00.0000] <othermaciej>
hsivonen: do you know if Mozilla has any plans to support XSLT 2.0 or XPath 2.0?

[02:59:00.0000] <david_carlisle>
that works for me, if Element (if used in a browser) really is the baseline for what's expected (innerHTML, id, ..)

[02:59:01.0000] <othermaciej>
(or do you know who might know, if you don't?)

[03:08:00.0000] <hsivonen>
the guardians of XSLT in Gecko are peterv and sicking

[03:09:00.0000] <othermaciej>
thanks

[03:09:01.0000] <nw>
I somehow first read that as "pervert" and "sickening."

[03:10:00.0000] <nw>
Says something about me, I guess...

[03:10:01.0000] <annevk>
heh

[03:12:00.0000] <othermaciej>
annevk: do you know if Opera has any plans to support XSLT 2.0 or XPath 2.0, or who to ask about it?

[03:12:01.0000] <annevk>
othermaciej, your issue-137 email points to 133

[03:12:02.0000] <othermaciej>
oops

[03:13:00.0000] <annevk>
othermaciej, I'm pretty sure we have more useful things to implement

[03:14:00.0000] <annevk>
othermaciej, messaged you a name for a second opinion

[03:14:01.0000] <othermaciej>
thanks

[03:34:00.0000] <hsivonen>
I guess I should escalate the <u> bug into an ISSUE as a follow-up to the f2f meeting

[03:35:00.0000] <annevk>
more new elements yay

[03:35:01.0000] <hsivonen>
"new"

[03:35:02.0000] <boogyman>
has there been a resolution for 11254?

[03:35:03.0000] <annevk>
count is at 108 including <device>

[03:37:00.0000] <annevk>
boogyman, if there's no resolution in the bug, there's no resolution

[03:38:00.0000] <annevk>
othermaciej. so are you guys seriously considering taking it on?

[03:38:01.0000] <othermaciej>
annevk: a WebKit volunteer contributor wants to do it

[03:39:00.0000] <hsivonen>
othermaciej: will (s)he maintain it?

[03:40:00.0000] <othermaciej>
hsivonen: this same person did most of our MathML support, so it's plausible he/she could implement and maintain a large project

[03:40:01.0000] <hsivonen>
I see

[03:41:00.0000] <othermaciej>
however, I am worried about the compatibility breakage, the fact that other browser vendors do not seem super enthusiastic, and about the amount of code it would take

[03:41:01.0000] <annevk>
that XSLT and XPath are not backwards compatible is kind of a deal breaker

[03:42:00.0000] <annevk>
on top of that, they're hardly used

[03:42:01.0000] <jgraham>
I don't think the experience of XSLT 1 on the web suggests that it is a direction that is worth significant further investment

[03:42:02.0000] <annevk>
a few of my friends are heavily involved with an XML editor, but they are writing most things from scratch in ECMAScript

[03:42:03.0000] <jgraham>
For the platform

[03:42:04.0000] <othermaciej>
it's claimed by some that the compat breakage is unlikely to be a big deal in practice

[03:43:00.0000] <othermaciej>
I do not have the data to make a real assessment

[03:43:01.0000] <annevk>
then we should maybe just drop the feature

[03:43:02.0000] <jgraham>
I would much rather we applied the engineering effort to something that people are actually demanding

[03:43:03.0000] <othermaciej>
the lists of compat breakage in XSLT 2.0 and XPath 2.0 look pretty long

[03:43:04.0000] <webr3>
annevk, what platform?

[03:43:05.0000] <annevk>
if there's no breakage, the feature is vastly underimportant

[03:44:00.0000] <annevk>
webr3, ?

[03:44:01.0000] <othermaciej>
also as far as XPath API goes, I'm not sure how the XPath version would be determined

[03:44:02.0000] <david_carlisle>
the vast majority of actual xslt1 styesheets will work unchanged on a v2 engine

[03:44:03.0000] <othermaciej>
jgraham, there is a group of people who are vocally interested in XSLT 2.0/XPath 2.0, not clear how much that extends to mainstream web developers

[03:44:04.0000] <othermaciej>
how big is the minority that won't work?

[03:45:00.0000] <othermaciej>
5%? 1%? .0001%?

[03:45:01.0000] <webr3>
annevk, ignore i strapped jgrahams "for the platform" on to the end of your sentence by mistake

[03:45:02.0000] <jgraham>
I think it would be more worthwhile use of time to spec out the IE XPath DOM API to replace all the document.evaluate nastiness

[03:45:03.0000] <david_carlisle>
how long is a piece of string?

[03:45:04.0000] <hsivonen>
Saxon doesn't do XSLT versioning

[03:45:05.0000] <jgraham>
And just keep XPath 1 but with an API that miught enougrage people to use it

[03:45:06.0000] <hsivonen>
it just treats XSLT 1.0 as XSLT 2.0 and emits a warning

[03:45:07.0000] <othermaciej>
david_carlisle, this is a question that, at least so far as deployed content goes, can be answered with data

[03:46:00.0000] <david_carlisle>
taht is the specified xslt2 behaviour, not a saxon thing

[03:46:01.0000] <webr3>
othermaciej - whatever percentage it is, it's likely to rise considerably as more people move to client side applications wth deployed xml-based server side stacks

[03:46:02.0000] <hsivonen>
when I was worried about this, I was lead to believe that there's no practical stuff to worry about, only theory

[03:46:03.0000] <othermaciej>
XSLT 2.0 is supposed to have a 1.0 compat mode

[03:46:04.0000] <othermaciej>
which is not 100% compatible, but less incompatible than full 2.0 mode

[03:46:05.0000] <hsivonen>
othermaciej: oh, maybe Saxon enabled that or something

[03:46:06.0000] <hsivonen>
othermaciej: in any case, it warned that it's not 100% compatible, I was worried and was told not to worry

[03:47:00.0000] <jgraham>
(fun fact; HTML5 has about the same number of elements as DocBook 1)

[03:47:01.0000] <hsivonen>
I have zero knowledge about what would actually break

[03:47:02.0000] <othermaciej>
hsivonen: I remember people saying the same thing about XHTML 2

[03:48:00.0000] <jgraham>
othermaciej: I think there was a group of people who were vocally interested in XSLT 1.0 but it still has no real traction

[03:48:01.0000] <hsivonen>
my main worries about XSLT/XPath 2.0 are: getting dragged into implementing the optional schema-aware features and using up the finite attention of engineers who have rare knowledge that could be used better

[03:49:00.0000] <david_carlisle>
for my own stylesheets I had to change probably a few dozen lines out of a few tens of thousands of lines,  so that;s a very small percentage, but on the other hand a rather larger percentage (I don't remember) of top level stylesheets did need a change, so it depends what you want to measure.

[03:49:01.0000] <david_carlisle>
hsivonen: don't touch the schema aware part:-)

[03:49:02.0000] <jgraham>
Having to change anything on the web is a big problem

[03:50:00.0000] <jgraham>
We can't just suddenly land some feature that breaks a bank or whatever and say "oh well you only have to change a little bit"

[03:50:01.0000] <othermaciej>
from the browser point of view, if we ship something that requires deployed XSLT stylesheets to be changed, it doesn't matter much how few lines need to be changed in each one

[03:50:02.0000] <hsivonen>
david_carlisle: well, if browsers say they are doing XSLT 2.0 and someone puts schema-awareness in an acid test and someone caves, we'd all be in trouble

[03:51:00.0000] <hsivonen>
othermaciej: I thought we had a rule on this channel that you aren't supposed to say "XSLT stylesheet" and are supposed to say "XSLT transformation" :-)

[03:51:01.0000] <david_carlisle>
the schema awareness is an explict extra conformance layer in the language, so it's just a matter of what you say is implemented. At with saxon, the free one is not schema aware the paid for one is, but that ism't a saxon split you can tell from the language spec these different layers

[03:51:02.0000] <othermaciej>
hsivonen: sorry for not being up to speed on the official terminology

[03:52:00.0000] <david_carlisle>
if web developers (and browser implementers) thought more about xslt and less about javascript they'ed be happier more well rounded people.

[03:52:01.0000] <david_carlisle>
and i always say stylesheet

[03:53:00.0000] <jgraham>
/me wouldn't like to bet on that claim :)

[03:53:01.0000] <webr3>
/me nor i

[03:53:02.0000] <jgraham>
(that they would be happier, more well rounded people)

[03:54:00.0000] <david_carlisle>
or of course you could use lisp and be even happier

[03:54:01.0000] <othermaciej>
in my opinion, for any given web technology, the more you think about it, the greater the risk to your sanity

[03:55:00.0000] <hsivonen>
The HTML5 spec says "XSLT transform" or "XSLT transformation", because CSS is the one true style sheet language

[03:55:01.0000] <jgraham>
You can write lisp and compile it down to javascript :)

[03:55:02.0000] <jgraham>
And then replace your HTML with sexps

[03:57:00.0000] <david_carlisle>
well I would use lisp (dsssl) but round brackets went out of vogue so we started using angle ones to be trendy (xslt) but javascript uses curly brackets so is clearly all wrong. (in depth comparative language review over)

[03:57:01.0000] <hsivonen>
(more seriously: it seems incorrect to call a transformation to an HTML tree styling, so the HTML5 spec doesn't call it styling)

[03:57:02.0000] <asmodai>
crap

[03:57:03.0000] <asmodai>
what's eating cpu and memory this time :S

[03:59:00.0000] <david_carlisle>
hsivonen: that stylesheet/transform nonsense (presumably indicative of a committee disagreement) causes all sorts of confusion with people suggesting baroque rules of when to use which word, so I always just tell people to use stylesheet

[03:59:01.0000] <hsivonen>
david_carlisle: I try to say "transform", since it is correct and avoids suggesting that XSLT in browsers is an alternative to CSS

[04:00:00.0000] <david_carlisle>
whatever, just use the same word always and don't (as some have done) spend hours trying to classify some as one and some as the other.

[04:01:00.0000] <othermaciej>
the word "transform" seems fine for all purposes

[04:01:01.0000] <asmodai>
hsivonen: Managed to trip another CPU and memory guzzling problem in Firefox again. I sure am lucky eh? :)

[04:01:02.0000] <david_carlisle>
maybe browsers should have ditched there html/css engines, implemented xsl-fo, and then xslt would have been a replacement for css. Oops I said it, i'd better go now...

[04:01:03.0000] <othermaciej>
I don't really ever think of it as a stylesheet, I just use the word for historical reasons (e.g. the fact that the xml-stylesheet PI is used to invoke an XSLT trnasform)

[04:01:04.0000] <othermaciej>
funny use of the word "should"!

[04:02:00.0000] <annevk>
david_carlisle, CSS uses curly braces too

[04:02:01.0000] <david_carlisle>
quite

[04:02:02.0000] <annevk>
and given the popularity...

[04:02:03.0000] <david_carlisle>
good reason for replacing it with xslfo

[04:03:00.0000] <othermaciej>
angle brackets are clearly far superior to curly braces

[04:03:01.0000] <hsivonen>
asmodai: It's unfortunate that those things happen to you. bug filing time I guess.

[04:03:02.0000] <othermaciej>
the fact that xslt + xsl-fo has no reasonable story for styling a dynamically changing document makes it non-viable as a css replacement

[04:04:00.0000] <othermaciej>
(nor a story for changing the true "model" DOM client side instead of the transformed "presentation" DOM)

[04:05:00.0000] <othermaciej>
solve those problems, and it might be worthwhile to have a conversation

[04:06:00.0000] <othermaciej>
except not even then, because CSS is good enough

[04:06:01.0000] <david_carlisle>
True but there is a large class of documents that don't change in real time in the client, some of them last for thousands of years, and xslt really comes from that tradition

[04:06:02.0000] <jgraham>
You probably want a time machine too

[04:06:03.0000] <jgraham>
So that you can solve it before the legacy lock in

[04:06:04.0000] <othermaciej>
you can't "replace" the CSS layout engine with something that only handles a subset of Web use cases

[04:06:05.0000] <jgraham>
That is a surprisingly small class of web documents

[04:07:00.0000] <othermaciej>
you can't "replace

[04:07:01.0000] <othermaciej>
" it at all really

[04:07:02.0000] <othermaciej>
but there's more reasons than just compat why it would be bad

[04:07:03.0000] <david_carlisle>
Well yess that's why XSLt is used a lot more on the server (or before the document gets to the server) than on the client

[04:08:00.0000] <asmodai>
hsivonen: been trying to find out what page/page combination triggered it

[04:09:00.0000] <othermaciej>
so I hope you can understand why "maybe browsers should have ditched there html/css engines, implemented xsl-fo, and then xslt would have been a replacement for css" is not even a valid syllogism, let alone something that ever would have been likely to happen

[04:09:01.0000] <david_carlisle>
er yes

[04:10:00.0000] <david_carlisle>
Im now watching an internal presentation introduciing Fortran "the most advanced programming language available today2"filmed in 1958... must go

[04:11:00.0000] <othermaciej>
heh

[04:15:00.0000] <annevk>
yeah, on the server...

[04:15:01.0000] <annevk>
PHP is also used on the server

[04:15:02.0000] <annevk>
o_O

[04:17:00.0000] <asmodai>
hsivonen: Think I might have caught it, at least part of it. Seems the latest PageSpeed addin update is causing issues. keeping CPU at like >70% and growing memory with megabytes per second. At least with the pages I have open

[04:29:00.0000] <asmodai>
grrr, or maybe not, hate heidenbugs

[04:34:00.0000] <david_carlisle>
annevk: yeah, on the server...   yes but there are many places where xslt on the client works well, content mathml to presentation for example (or presentation mathml to whatever html/css/javascript works on a system without mathml support) and in general (the original xml vision) of serving semantically richer markup and converting for display on the client is much easier in xslt than javascript and not totally without merit, even if it's not a

[04:34:01.0000] <david_carlisle>
topic with mass appeal. (but then I'm a pure mathematician, that doesn't have mass appeal either)

[04:44:00.0000] <annevk>
except that vision does not work

[04:45:00.0000] <annevk>
you need something like HTML; a language whose semantics are widely understood

[04:45:01.0000] <annevk>
not a language of which only you understand the semantics

[04:56:00.0000] <david_carlisle>
annevk; it depends.  You need HTML that is widely understood, but you may also need some other source language that is not widely understood (which is why you are translating to html) but that you want to share with those that do understand it (which is why you don't just want to translate on the server)

[04:56:01.0000] <david_carlisle>
There are alsternatives to client side transform (justserve two files, or use conneg or something) but just because there are alternatives doesn't mean that it's a bad idea

[04:58:00.0000] <david_carlisle>
sorry I can't type and eat at the same time (actually I can't type even when im not eating) apply spelling correction to the above

[05:35:00.0000] <hsivonen>
asmodai: the extension might poke at stuff in a cross-compartment way or something

[05:38:00.0000] <hsivonen>
did sicking volunteer to write a fourth CP for ISSUE-27?

[05:39:00.0000] <asmodai>
hsivonen: No, it's not the extension

[05:39:01.0000] <asmodai>
hsivonen: disabled both ones that got updated.

[05:39:02.0000] <hsivonen>
asmodai: ok

[05:40:00.0000] <hsivonen>
othermaciej: according to the minutes, sicking volunteered to write a fourth CP for ISSUE-27

[05:40:01.0000] <asmodai>
hsivonen: So far only managed to trace it, sort of, to www.speedtree.com and www.facefx.com being open at the same time 

[05:41:00.0000] <hsivonen>
asmodai: I wonder if they share the ad provider or something of that nature

[05:42:00.0000] <annevk>
what change proposal would sicking write?

[05:42:01.0000] <hsivonen>
annevk: delegating rel registry to microformats.org

[05:43:00.0000] <asmodai>
hsivonen: Only symptom I noticed is that those open with the ones I already have open causes my dual core to show 20%-40% CPU utilization even if the tab is not focused on either of those two sites.

[05:43:01.0000] <asmodai>
hsivonen: The memory leaks apparently needs 4-5 extra pages open, which I had closed trying to nail this issue. :S

[05:43:02.0000] <asmodai>
hsivonen: I seriously dislike trying to come up with a repro case like this :(

[05:44:00.0000] <asmodai>
bloody heisenbugs

[05:45:00.0000] <annevk>
hsivonen, yeah, that is said in the minutes

[05:46:00.0000] <annevk>
with "new information" being experience with IANA

[05:46:01.0000] <annevk>
should we raise this on list?

[05:47:00.0000] <hsivonen>
annevk: probably worthwhile to mention on the list

[05:47:01.0000] <annevk>
i will

[05:48:00.0000] <hsivonen>
aside, I find it questionable that when I file a crash bug using the Ubuntu crash reporting tool, the command line I used that contains potentially private file names is posted to launchpad publicly

[05:48:01.0000] <hsivonen>
annevk: thanks

[05:48:02.0000] <hsivonen>
now everyone can tell the names of the patches I'm working on

[05:48:03.0000] <hsivonen>
though I'm disclosing that information usually anyway for non-security bugs

[05:51:00.0000] <asmodai>
hsivonen: ouchies

[05:52:00.0000] <nessy>
zcorpan: just a quick note that I think I got it now - but I don't see why not supporting percent would be a bug then...

[05:54:00.0000] <annevk>
nessy, UAs are required to process invalid content in the same way

[05:54:01.0000] <annevk>
nessy, otherwise sites start using width="50%" and expect it to be treated as width="50" for instance

[05:54:02.0000] <nessy>
so we distinguish between different kinds of invalid?

[05:55:00.0000] <annevk>
no

[05:55:01.0000] <nessy>
well, 50% is different invalid from 50px

[05:55:02.0000] <annevk>
we distinguish between authors and user agents

[05:55:03.0000] <annevk>
it's not different invalid

[05:55:04.0000] <annevk>
it has different behavior

[05:56:00.0000] <nessy>
so… it's invalid from a standard POV, but it's kinda valid for an author, because browsers show a defined behaviour?

[05:57:00.0000] <nessy>
(where "it" are both those examples ;-)

[06:00:00.0000] <annevk>
you are trying to draw lines that are not really there

[06:01:00.0000] <annevk>
it is as invalid as e.g. <style>body{background:green</style>

[06:01:01.0000] <nessy>
I'm trying to consolidate in my own mind how "invalid" and "defined behaviour" gel

[06:02:00.0000] <annevk>
well, the way we write specifications they are mostly orthogonal

[06:02:01.0000] <annevk>
in the sense that everything "works" and a subset of that is "valid"

[06:02:02.0000] <annevk>
(the subset that makes sense, ideally)

[06:03:00.0000] <nessy>
So - it's not just because sometimes markup is incomplete, it's also because people have expectations from things that used to work?

[06:03:01.0000] <nessy>
s/work/be valid/

[06:05:00.0000] <zcorpan>
nessy: what authors need to know is what is valid

[06:06:00.0000] <zcorpan>
nessy: no need to say what browsers will do when they break the rules

[06:06:01.0000] <zcorpan>
imho :)

[06:06:02.0000] <zcorpan>
gotta go

[06:07:00.0000] <nessy>
well, for things that get typically done wrong, it makes sense to mention it IMHO

[06:07:01.0000] <nessy>
anyway :)

[06:36:00.0000] <MikeSmith>
hsivonen: so it seems like James is amenable to having functionality from the jing validator-nu branch ported back to the trunk

[06:37:00.0000] <MikeSmith>
though he mentions "Some of them may be hard to do in a general-purpose way"

[06:38:00.0000] <MikeSmith>
I would like to start with any low-hanging fruit

[06:38:01.0000] <MikeSmith>
if there is any

[06:39:00.0000] <MikeSmith>
that is, anything that I might be able to port back that doesn't have the problem of being hard to do in a general-purpose way

[06:58:00.0000] <karlcow>
Are there tests out there showing what Opera/Firefox/Safarire/IE/ returns for " " <- (non breaking space in innerHTML)

[06:59:00.0000] <Ms2ger>
/me wonders if "Safa-rire" was intentional

[07:00:00.0000] <karlcow>
Ms2ger: I'm so used of calling things with different names that I do not realize when I write them. unintentional but play of words I always do. Safa-rire and Caca-script among others

[07:02:00.0000] <karlcow>
I have noticed also that I do some typos in handwriting that I have acquired because of the keyboard mistyping. braiiiiins

[07:02:01.0000] <AryehGregor>
You mean, what they do when you set an element's innerHTML to a non-breaking space?

[07:03:00.0000] <AryehGregor>
Like in what way?

[07:04:00.0000] <karlcow>
a text area form: You type a non breaking space. What is sent to the server? Opera seems to send the correct unicode character, but firefox seems to send the entity &nbsp;  (Not sure)

[07:05:00.0000] <AryehGregor>
Well, that's easy to test.

[07:06:00.0000] <karlcow>
yes I was wondering it had already been done. :)

[07:08:00.0000] <jgraham>
Isn't the innerHTML case just http://software.hixie.ch/utilities/js/live-dom-viewer/saved/699 ?

[07:11:00.0000] <AryehGregor>
Opera 10.something, Firefox 4, Chrome dev all seem to submit as %A0 in this test-case: <!doctype html><form><input name=foo value="&nbsp;"><input type=submit></form>

[07:13:00.0000] <AryehGregor>
But for innerHTML, Firefox and Chrome change it to &nbsp;, Opera changes it to a literal.

[07:13:01.0000] <AryehGregor>
Opera sounds the most reasonable here.  What does IE do?

[07:13:02.0000] <AryehGregor>
(And what does the spec say?)

[07:14:00.0000] <AryehGregor>
http://www.whatwg.org/specs/web-apps/current-work/multipage/the-end.html#escapingString

[07:14:01.0000] <AryehGregor>
Gecko and WebKit are correct per spec, Opera is wrong.

[07:14:02.0000] <karlcow>
yep it seems 

[07:15:00.0000] <karlcow>
I wonder about IE

[07:27:00.0000] <karlcow>
Thanks AryehGregor 

[07:44:00.0000] <kennyluck>
I was horrified by the fact that the current spec has a predefined behavior for the 'top' fragment identifier -> http://www.whatwg.org/specs/web-apps/current-work/multipage/history.html#scroll-to-fragid

[07:45:00.0000] <kennyluck>
Is this implemented by IE or other browsers? It doesn't work on my Firefox 3.6

[07:45:01.0000] <Ms2ger>
It probably is

[07:47:00.0000] <Lachy>
It was supported by IE. Not sure about other browsers.

[07:48:00.0000] <jgraham>
Works in Opera

[07:48:01.0000] <kennyluck>
wow.

[07:48:02.0000] <jgraham>
I agree it seems kinda silly

[07:49:00.0000] <Ms2ger>
Welcome to the web?

[07:49:01.0000] <kennyluck>
It would be silly if this is listed in the "HTML5 difference from HTML4" document as a new HTML5 feature

[07:50:00.0000] <annevk>
can't list everything

[07:50:01.0000] <Ms2ger>
Just as much a new HTML5 feature as innerHTML

[07:51:00.0000] <jgraham>
Yeah, but it can't really be needed that much for compat

[07:52:00.0000] <Ms2ger>
Perhaps you could drop it :)

[07:52:01.0000] <annevk>
we added it for compat

[07:52:02.0000] <annevk>
people use that stuff

[07:53:00.0000] <jgraham>
Seems weird that gecko gets away without it

[07:53:01.0000] <jgraham>
But whatever

[07:53:02.0000] <annevk>
and I don't really see what's wrong with it

[07:54:00.0000] <jgraham>
Magic global definitions are generally quite bad

[07:54:01.0000] <jgraham>
But it's not really worse than the acceptness badness of the platform

[07:54:02.0000] <jgraham>
*accepted

[08:10:00.0000] <erlehmann>
is there a listing for circumstances under which canvas cross origin restrictions are relaxed? i cannot seem to find one, but my bookmarklet seems to run in the context of the current origin.

[08:16:00.0000] <jgraham>
erlehmann: Bookmarklets are same-origin in general

[08:17:00.0000] <erlehmann>
jgraham, would you suggest i make a greasemonkey script then?

[08:17:01.0000] <erlehmann>
or is that same-origin too?

[08:17:02.0000] <Ms2ger>
I'd hope so

[08:21:00.0000] <jgraham>
Browser extensions might be a good bed

[08:21:01.0000] <jgraham>
*bet

[08:21:02.0000] <jgraham>
depending on just what you want to do and what APIs the browsers have

[08:22:00.0000] <erlehmann>
jgraham, filter every image on a page. just for fun, so i'll don't do anything to complicated.

[08:26:00.0000] <othermaciej>
hsivonen: he did - I am not sure if he still plans to

[08:44:00.0000] <jgraham>
Yay. Fixing rev 5666 seems like lots of fun!

[08:44:01.0000] <jgraham>
(that was sarcasm)

[08:50:00.0000] <gsnedders>
jgraham: Dr Graham using sarcasm? Well I never!

[08:58:00.0000] <Philip`>
AryehGregor: Re http://www.w3.org/Bugs/Public/show_bug.cgi?id=11011 : /abc (?idef)/ is a syntax error, it should be /abc (?i)def/ or /abc ((?i)def)/

[09:27:00.0000] <annevk>
so the main problem with most current registries is that they encode only "REC" stuff

[09:27:01.0000] <annevk>
whereas the web consists of a lot of non-"REC" stuff

[09:30:00.0000] <annevk>
i.e. web registries need to accept the transient nature of the web

[09:33:00.0000] <othermaciej>
does MIME type regitration really happen only at REC stage?

[09:34:00.0000] <othermaciej>
it seems like, if we had provisional registration very early in the process, it would make it more likely that registry experts could give feedback before it's too late

[09:34:01.0000] <othermaciej>
by the time the spec gets to REC, it is almost certainly too late to materially change the registration

[09:34:02.0000] <annevk>
yeah, e.g. text/cache-manifest has had no MIME review so far

[09:35:00.0000] <annevk>
Opera currently has a few something/x-opera-... MIME types because people thought registering was too hard

[09:36:00.0000] <annevk>
I have a really hard time seeing what is wrong with a wiki, or a more structured form of that

[09:41:00.0000] <othermaciej>
I think if we go with the w3c xpointer-style registry for link relations, and if it works out well, then we should consider using it for the other registries in HTML5

[09:41:01.0000] <annevk>
the worse cases are actually when there's no good media type, as with fonts

[09:42:00.0000] <othermaciej>
(meta name, meta http-equiv, maybe canvas contexts? can't remember what else)

[09:42:01.0000] <othermaciej>
is there any MIME type appropriate for TrueType fonts?

[09:42:02.0000] <othermaciej>
font/otf?

[09:42:03.0000] <othermaciej>
is font/* even a real MIME type namespace?

[09:42:04.0000] <annevk>
it's not

[09:43:00.0000] <annevk>
the idea was that it would be though, but it never happened and now it is too late

[09:43:01.0000] <annevk>
I think those are the registries HTML5 currently has, yes

[09:43:02.0000] <annevk>
if it works out I hope URL schemes etc. will move towards that too

[09:45:00.0000] <Philip`>
/me isn't sure there will ever be enough canvas contexts for there to be any value in a registry

[09:46:00.0000] <Philip`>
(I'm only aware of about three that exist)

[09:47:00.0000] <annevk>
yeah

[09:48:00.0000] <zcorpan>
jgraham: firefox supports #top in quirks mode

[09:49:00.0000] <tabatkins>
Philip`: The 2d, opera 2d, and webgl contexts, right?

[09:50:00.0000] <annevk>
we had opera-3d as well

[09:50:01.0000] <annevk>
but they are being phased out

[09:50:02.0000] <Philip`>
tabatkins: Yeah

[09:51:00.0000] <Philip`>
I don't think opera-3d was ever in a non-experimental build

[09:51:01.0000] <annevk>
that sounds likely

[09:54:00.0000] <zcorpan>
i don't understand why (?i) can't be added to javascript

[09:54:01.0000] <zcorpan>
if everyone agrees that it's the best solution, why not go for it?

[09:55:00.0000] <zcorpan>
Web ECMAScript already has stuff that ES5 sticks its head in the sand... and firefox also already supports a non-standard regexp flag

[09:56:00.0000] <annevk>
say it on the list

[09:59:00.0000] <othermaciej>
zcorpan: it might be that ES folks would be willing to add it

[10:00:00.0000] <othermaciej>
though I expect "/foobar/i" is a more familiar syntax than "(?i foobar)"

[10:00:01.0000] <othermaciej>
my suggestion was simply to allow the full ES regexp literal syntax in pattern="", as an alternative to the ES pattern syntax

[10:01:00.0000] <othermaciej>
so you could say pattern="/whatever/i"

[10:01:01.0000] <othermaciej>
this would avoid adding any attributes to HTML5, but would make the pattern microsyntax a hair more complicated

[10:01:02.0000] <Philip`>
Support both syntaxes at once?

[10:01:03.0000] <othermaciej>
yep

[10:01:04.0000] <Philip`>
That'd be somewhat ambiguous

[10:01:05.0000] <othermaciej>
just check for initial / to decide which to use

[10:02:00.0000] <othermaciej>
I suspect ES pattern syntax requires / to be escaped anyway, or regexp literals wouldn't work

[10:03:00.0000] <othermaciej>
anyway I also think it's fine to punt on it for now and return to the issue once we have a better handle on how pattern="" gets used

[10:03:01.0000] <Philip`>
/ doesn't need to be escaped in e.g. new RegExp("/...")

[10:04:00.0000] <Philip`>
(where it's interpreted as matching a literal '/' character)

[10:06:00.0000] <TabAtkins_>
annevk: I'm not sure how to possibly resolve the ?HR issue without creating a new constructor(s).  You even say that having .responseText and .responseXML would be confusing.  If it's confusing, why not just take the solution that's *not* confusing?

[10:15:00.0000] <MikeSmith>
TabAtkins_: hey, do you have any updated info about plans from the Chrome team for the HTML5 context-menu feature?

[10:15:01.0000] <MikeSmith>
I remember we discussed is quite a while back

[10:15:02.0000] <TabAtkins_>
I talked to an engineer about it a few weeks back, and had an involved discussion about how things work.  Havne't followed up on it.

[10:20:00.0000] <AryehGregor>
Philip`, oh, shows how much I've ever used that feature.  I assumed it worked like (?:foo) to avoid capturing.

[10:22:00.0000] <Philip`>
AryehGregor: The syntax is not that consistent :-)

[10:35:00.0000] <JonathanNeal>
What is the proper way to label a group of radio inputs?

[10:37:00.0000] <TabAtkins_>
Labelling the group itself?  A heading, usually.

[10:38:00.0000] <TabAtkins_>
Or a fieldset legend, if that's appropriate.

[10:41:00.0000] <JonathanNeal>
Thanks TabAtkins_, I find myself wanting a way to label a group the same way I label a control, perhaps a fieldset is appropriate, but I have a connotation in my head that a new fieldset means a subject change (when really I'm just trying to intelligently group some radios together)

[10:42:00.0000] <TabAtkins_>
As usual, the answer is to not stress about it.  ^_^

[10:42:01.0000] <JonathanNeal>
It's not to have you guys create a new html5 element?  Oh, okay. :D

[10:43:00.0000] <TabAtkins_>
Another heading element?  Zeus forbid...

[10:43:01.0000] <gsnedders>
/me would just get confused with another

[10:43:02.0000] <gsnedders>
/me is confused enough as is

[10:44:00.0000] <JonathanNeal>
<grouplabel> :P

[10:45:00.0000] <JonathanNeal>
and<group> naturally

[10:46:00.0000] <TabAtkins_>
Otherwise known as <h1> and <section>.

[10:46:01.0000] <TabAtkins_>
Or <legend> and <fieldset>

[10:46:02.0000] <TabAtkins_>
Or <label> and <select>

[10:51:00.0000] <JonathanNeal>
ia fielset a sectioning element?

[10:53:00.0000] <karlcow>
this "top" fragid… looks like a magic mushroom. Designed in Amsterdam?

[10:54:00.0000] <TabAtkins_>
JonathanNeal: Don't think so, no.

[10:54:01.0000] <Ms2ger>
karlcow, Redmond, I suppose

[12:15:00.0000] <Hixie>
/me finds and lols @ TabAtkins_'s WFM on a recent bug

[12:25:00.0000] <Ms2ger>
Node.document? I wonder who invented that...

[12:25:01.0000] <heycam>
Ms2ger, is that different from ownerDocument?

[12:25:02.0000] <Ms2ger>
No

[12:26:00.0000] <heycam>
it is shorter though :)

[12:26:01.0000] <Ms2ger>
They should have used Node.d :)

[12:27:00.0000] <Ms2ger>
And Opera++

[12:36:00.0000] <TabAtkins_>
You're welcome, Hixie.  ^_^

[12:37:00.0000] <annevk>
a new constructor does not automatically make matters less confusing

[12:42:00.0000] <TabAtkins_>
annevk: A new constructor solves the issue of .responseText being potentially available when it doesnt' really do anything (or maybe throws on access).

[12:45:00.0000] <annevk>
I'm not really sure that is the issue

[12:45:01.0000] <annevk>
or a issue, for that matter

[12:50:00.0000] <TabAtkins_>
I thought that was basically the whole issue - whether or not they exist, what they do if they do exist, et.

[12:55:00.0000] <TabAtkins_>
annevk: Is there another issue you're aware of?

[12:56:00.0000] <annevk>
the main issue seems to be limited memory

[12:56:01.0000] <annevk>
and then there's various constraints

[12:56:02.0000] <annevk>
but I should really get some sleep

[12:56:03.0000] <TabAtkins_>
Quitter!

[12:57:00.0000] <annevk>
colleague of yours summed up some more negatives with new objects

[12:57:01.0000] <TabAtkins_>
Yeah, but I don't know how valid I think those are.

[12:58:00.0000] <annevk>
well, I think they're valid

[13:00:00.0000] <TabAtkins_>
Complaining about binding gunk is a *pure* impl concern, with no effect on authors or users (unlike memory usage).  Rejecting something that may be simpler for authors just because the backend plumbing in the implementation might be a little bit heftier (not more complicated) seems like a bad move.

[13:01:00.0000] <jamesr_>
having nearly-duplicate bindings is a burden on authors

[13:02:00.0000] <annevk>
it complicates testing a lot, it requires authors to make informed decisions and for the foreseeable future to have different constructor codepaths, different prototype paths, etc.

[13:03:00.0000] <TabAtkins_>
jamesr_: It was precisely the non-duplicate part that seems to be the problem, though.

[13:04:00.0000] <annevk>
it's like

[13:05:00.0000] <Hixie>
ok i wrote a counter-CP for <link rel=noreferrer>

[13:05:01.0000] <annevk>
o i know, lets do Cookie2

[13:05:02.0000] <jamesr_>
i don't really see any issues with putting responseType/response on the XHR object

[13:05:03.0000] <annevk>
now you have 2 problems

[13:05:04.0000] <annevk>
or in the XHR case, 4

[13:05:05.0000] <jamesr_>
code that only wants to think about .responseText will work fine since it won't mutate responseType

[13:06:00.0000] <annevk>
Hixie, changing it to rel=anonymous would make some sense

[13:07:00.0000] <annevk>
Hixie, especially if we add a way to <img>, <script>, and <video>/<audio> to set it too

[13:07:01.0000] <annevk>
and <form>?

[13:07:02.0000] <TabAtkins_>
Sure.  annevk, wasn't it you specifically that was complaining about it being potentially confusing that .responseText would still be available on a binary request?

[13:08:00.0000] <annevk>
Boris and I, yes

[13:08:01.0000] <TabAtkins_>
So...

[13:08:02.0000] <TabAtkins_>
I'm confused then.

[13:08:03.0000] <annevk>
binary logic does that to you ;p

[13:09:00.0000] <TabAtkins_>
Binary logic is 'murrican.

[13:09:01.0000] <annevk>
That I think it is confusing does not mean I want to go to the extreme of having more objects

[13:09:02.0000] <annevk>
It just means I will not get my way

[13:10:00.0000] <jamesr_>
the XHR interface is horrible and gross and confusing, but there's not very much we can do to fix that at this point

[13:10:01.0000] <jamesr_>
that work was mostly done a decade ago

[13:11:00.0000] <annevk>
maybe over a decade now

[13:11:01.0000] <annevk>
Mozilla added it in 2000, I believe

[13:11:02.0000] <TabAtkins_>
So the idea is just that we make .response always return the correct type, and leave .responseText and .responseXML for when the type is set to Text or whatever.

[13:11:03.0000] <TabAtkins_>
?

[13:12:00.0000] <annevk>
something like that

[13:12:01.0000] <TabAtkins_>
That's fine with me, I just thought you'd want to address your objection, and I think new constructors is the only way to do that. ^_^

[13:13:00.0000] <annevk>
I suspect something like "legacy" / "text" / "document" / "arraybuffer" / "blob" or some such would be it depending on impl strategies

[13:13:01.0000] <annevk>
addressing objections by compromise generally leads to poor design :(

[13:13:02.0000] <annevk>
(not that XHR is nicely designed or anything :) )

[13:14:00.0000] <TabAtkins_>
Hmm, "legacy" seems pretty nice.  Perhaps .response could contain nothing if the type was "legacy"?

[13:14:01.0000] <jamesr_>
i think jonas' suggestion was that empty string would be the default value and it would mean the old way

[13:15:00.0000] <annevk>
yeah ok

[13:15:01.0000] <TabAtkins_>
Ah, so you could test .responseType as a boolean and see if you're allowed to grab from .response or not?

[13:15:02.0000] <jamesr_>
i don't think anyone will actually set the 'legacy' value

[13:15:03.0000] <annevk>
haven't really thought out how the API should look... still don't like the name responseType

[13:18:00.0000] <jamesr_>
yeah i dunno about the name. i like the properties of it

[13:23:00.0000] <jamesr_>
i'd really prefer if we had separate APIs for interacting with the network and interpreting the results and good easy ways to chain them together

[13:23:01.0000] <TabAtkins_>
Yeah.

[13:24:00.0000] <jamesr_>
one thing people have mentioned is they want to download a chunk of data and interpret portions of it as (say) utf-8 text

[13:24:01.0000] <jamesr_>
but interpret another portion as an ArrayBuffer of floats or whatever

[13:25:00.0000] <Ms2ger>
You want good APIS on the web?

[13:25:01.0000] <jamesr_>
since the networking API is also the text decoding API there's no good way to do that now without base64ing the binary portion or something equally yucky

[13:25:02.0000] <Ms2ger>
Ha. Haha. Hahaha.

[13:26:00.0000] <TabAtkins_>
Right, but changing over to using .responseType='arraybuffer' lets you then interpret the bytes as anything you want.

[13:26:01.0000] <jamesr_>
yeah, that gets closer. we also need a way to pass a view into an arraybuffer to the browser and tell it to do text decoding

[13:28:00.0000] <TabAtkins_>
Right.

[13:28:01.0000] <TabAtkins_>
Luckily, that's orthogonal (as it should be).

[13:28:02.0000] <jamesr_>
yup. gettin' there

[13:29:00.0000] <jamesr_>
i think it'll take some work to get this to be a little less awkward

[13:31:00.0000] <virtuelv>
Hixie: I take it you also nuked the spam so it won't show up in the archives either?

[13:32:00.0000] <TabAtkins_>
Unless he wants to get the archives blacklisted by Google, I suspect he has.

[13:44:00.0000] <annevk>
really book + nap time now

[13:44:01.0000] <annevk>
nn

[14:09:00.0000] <jgraham>
/me would prefer a constant to a string for .response, assuming we go down that road, fwiw

[14:10:00.0000] <jgraham>
s/.response/.responseType/

[14:10:01.0000] <TabAtkins_>
The only problem with constants is figuring out where to place them.  A constant on XMLHTTPRequest would be *horrible* for typing.

[14:11:00.0000] <TabAtkins_>
XMLHttpRequest.responseType = XMLHttpRequest.RESPONSE_ARRAYBUFFER (or something)

[14:17:00.0000] <jgraham>
Still a bit better than strings I think

[14:17:01.0000] <TabAtkins_>
I violently disagree.

[14:17:02.0000] <jgraham>
Well even just using emacs and M+/ I can likely autocomplete the XMLHttpRequest part

[14:18:00.0000] <TabAtkins_>
A string value is best, with .responseType resetting to '' if it doesn't recognize the value (like input@type does).

[14:18:01.0000] <TabAtkins_>
I am deeply opposed to gratuitous verbosity.

[14:18:02.0000] <jgraham>
I am deeply opposed to using strings to indicate one of a finite number of choices where it can be avoided

[14:19:00.0000] <jgraham>
Although I have been known to do it occasionally

[14:19:01.0000] <jgraham>
I have always felt it was wrong

[14:19:02.0000] <TabAtkins_>
If the API object was actually named XHR instead of XMLHttpRequest, I'd be more inclined to accept constants.

[14:20:00.0000] <jgraham>
Given that this will all be abstracted away by libraries anyway a little verbosity doesn't seem like a big deal

[14:20:01.0000] <TabAtkins_>
I am violently opposed to that point of view.  ^_^

[14:21:00.0000] <jgraham>
Although I guess one could ask WWJD (jQuery)

[14:21:01.0000] <jgraham>
Well it is kind of a "tools will save us" argument

[14:21:02.0000] <TabAtkins_>
The web platform should be the API you program to by default.  We shouldn't design for libraries, unless we are explicitly trying to design a low-level api (like indexeddb).

[14:21:03.0000] <jgraham>
But I have already given up hope on the DOM in general and XHR in particular being pretty

[14:21:04.0000] <jgraham>
(add commas)

[14:22:00.0000] <jgraham>
Well it *isn't* the API that people program by default

[14:22:01.0000] <TabAtkins_>
I'm surprised you didn't go with s//,/

[14:22:02.0000] <jgraham>
would have been s//,/g

[14:22:03.0000] <TabAtkins_>
"It sucks" shouldn't be an argument to make it suck more.

[14:23:00.0000] <jgraham>
Yeah, which is why using strings is a bad idea :)

[14:23:01.0000] <TabAtkins_>
Strings are perfectly acceptable and familiar.  What's your reason for hating them?

[14:23:02.0000] <jgraham>
Because there are only a few well defined options. 

[14:24:00.0000] <jgraham>
Using strings makes that unclear and makes it easier to make mistakes

[14:24:01.0000] <jgraham>
Particularly in tooled-up dev environements that will autocomplete for you

[14:25:00.0000] <TabAtkins_>
I don't see how this would prevent auto-completion.

[14:26:00.0000] <Hixie>
virtuelv: i don't have any control over the archives

[14:26:01.0000] <jgraham>
It seems harder to build autocompletion that knows that the input foo.responseText = " should result in the right autocompletion options

[14:27:00.0000] <jgraham>
Argh

[14:27:01.0000] <jgraham>
Type

[14:27:02.0000] <TabAtkins_>
Heh.

[14:27:03.0000] <jgraham>
Compared to the constants case where XMLHttpRequest is a known global object and had known properties

[14:27:04.0000] <TabAtkins_>
(Unrelated: Ooh, json should be a responsetype too.  I use the "json" type in jquery all the time.)

[14:28:00.0000] <jgraham>
Yes, it should

[14:28:01.0000] <TabAtkins_>
Harder, yeah.  But not so much that it's unreasonable.

[14:29:00.0000] <jgraham>
I don't really use IDEs that do that sort of thing, but are they really clever enough to do the first autocompletion in javascript?

[14:29:01.0000] <jgraham>
It seems like it would be hugely difficult

[14:30:00.0000] <jgraham>
Or very prone to false positives

[14:30:01.0000] <jgraham>
Because you can't know the type of foo

[14:31:00.0000] <jgraham>
So you can't work out what foo.responseType refers to

[14:31:01.0000] <jgraham>
So at best you can guess that the rhs of an assignment to a property called response type should be one of the magic strings

[14:31:02.0000] <TabAtkins_>
I doubt the false positive rate for that would be too high.

[14:32:00.0000] <TabAtkins_>
Alternately: I don't really care about autocompletion, and don't use it anywhere.

[14:32:01.0000] <jgraham>
Maybe not for this specific case, but if you implemented that feature in general

[14:32:02.0000] <jgraham>
Well, like I say I mainly use the magic of M+/

[14:32:03.0000] <jgraham>
But I don't think we should go out of our way to make this hard

[14:32:04.0000] <virtuelv>
Hixie: oh, I see - you actually seem to need raw access to the mbox files and delete them from there before regenerating it

[14:33:00.0000] <Hixie>
virtuelv: yeah, i don't have access to that at all, that's all done by dreamhost

[14:33:01.0000] <TabAtkins_>
Hixie: XSLT transformation.

[14:33:02.0000] <Hixie>
TabAtkins_: DOM model.

[14:34:00.0000] <Hixie>
/me guesses at the rules of this game

[14:34:01.0000] <TabAtkins_>
(Really, you can probably just ask Dreamhost to kill them for you.)

[14:34:02.0000] <Hixie>
probably

[14:34:03.0000] <TabAtkins_>
(The game is "what's the most ridiculous way Hixie could remove the child porn from the archives?".)

[14:34:04.0000] <Hixie>
aah

[14:34:05.0000] <Hixie>
wait, is there actual child porn? i thought it was just links

[14:35:00.0000] <TabAtkins_>
Yeah, sure.

[14:35:01.0000] <TabAtkins_>
I only looked at one because it had responses, and I only saw links.

[14:35:02.0000] <Hixie>
i have to admit that my filters actually caught everything so i wasn't aware of the problem until it was mentioned on irc

[14:35:03.0000] <Hixie>
and i can't say i looked at the mails themselves

[14:35:04.0000] <Hixie>
beyond the subject lines

[14:37:00.0000] <TabAtkins_>
I have my filters specifically set up to never auto-spam anything from whatwg, because otherwise emails from @google.com trigger false-positives and get spammed.

[14:40:00.0000] <Hixie>
heh

[14:42:00.0000] <jgraham>
Hmm, seems travis has a point about the load event for inline scripts. Where did that come from?

[14:51:00.0000] <TabAtkins_>
Is there anything fundamentally wrong with having an @rule without a space between the keyword and other information?  Specifically, I'm wondering if it's okay to have an @this keyword for nesting selectors, and just make it the @this act like an element reference, so you can do @this:hover to specialize the selector for hover.

[14:52:00.0000] <Hixie>
i don't really understand the proposal

[14:52:01.0000] <Hixie>
btw, mac os x has really nice ui for rtl editing

[14:52:02.0000] <Hixie>
when you're between an ltr and an rtl span, the cursor splits in half!

[14:52:03.0000] <Hixie>
it's neat

[15:01:00.0000] <othermaciej>
I thought we copied the split cursor from Windows

[15:01:01.0000] <othermaciej>
(split caret really)

[15:02:00.0000] <Hixie>
ah

[15:02:01.0000] <Hixie>
haven't used windows in a while

[15:11:00.0000] <MikeSmith>
http://www.w3.org/2010/11/10-webperf-minutes.html

[15:11:01.0000] <MikeSmith>
"Moving forward with Private Domain definition of same origin, where hello.bar.com is the same private domain as foo.bar.com"

[15:12:00.0000] <MikeSmith>
/me tries to read through list mail to see what the use case is

[15:21:00.0000] <robman>
/me thinks MikeSmith needs a new hobby

[15:24:00.0000] <TabAtkins_>
Hixie: Okay, like, say you have a long complicated selector pointing to a button.  You want to provide some styles, and additional style it in :hover, :active, :focus, etc.  Maybe style it differently when it has .disabled too.

[15:24:01.0000] <MikeSmith>
robman: I tried cross-stitch but I never felt fully accepted in the cross-stitch community

[15:25:00.0000] <robman>
they're a bunch of pricks

[15:25:01.0000] <robman>
har har har (dad joke0

[15:25:02.0000] <TabAtkins_>
Hixie: Writing out the long selector every time, like you do today, is both overly verbose and brittle, as any change to the base selector has to be reflected across all the instances.

[15:25:03.0000] <Hixie>
TabAtkins_: ah

[15:25:04.0000] <TabAtkins_>
So instead, something like "long > verbose > selector { prop: value; @this:hover { prop: value; }}"

[15:26:00.0000] <Hixie>
would you want to be able to use combinators in this featyre?

[15:26:01.0000] <Hixie>
feature

[15:26:02.0000] <TabAtkins_>
Yes.

[15:26:03.0000] <TabAtkins_>
long > verbose > selector { prop: value; @this + more > elems { prop: value; }}

[15:26:04.0000] <Hixie>
i.e. "my long selector" and "my long selector child"?

[15:26:05.0000] <hober>
/me would love such a feature

[15:26:06.0000] <Hixie>
hm

[15:26:07.0000] <Hixie>
@this seems like a really ugly way to do it, but i could see it making sense

[15:27:00.0000] <TabAtkins_>
@this is just the best name we've come up with so far.

[15:27:01.0000] <Hixie>
i'd recommend reusing whatever syntax we use to refer to the subject with :matches()

[15:27:02.0000] <Hixie>
which i think is currently "#"

[15:27:03.0000] <Hixie>
and then do:

[15:28:00.0000] <Hixie>
@group my long selector { # { color: black; } #:hover { color: red; } #:hover em { color: pink; } }

[15:28:01.0000] <TabAtkins_>
Ah, so within the top-level @group block, # has a special meanign?

[15:28:02.0000] <Hixie>
yeah

[15:28:03.0000] <Hixie>
you could even nest them

[15:28:04.0000] <TabAtkins_>
That's very possible too.

[15:29:00.0000] <Hixie>
@group .REC { @group # p { @group #.copyright { ... } ... } ... }

[15:29:01.0000] <Hixie>
would be a long-winded way of writing  .REC p.copyright { ... }

[15:30:00.0000] <Hixie>
(but it'd be less long-winded if you started having more rules, obviously)

[15:30:01.0000] <TabAtkins_>
This sounds intriguing.\

[15:30:02.0000] <Hixie>
:matches() uses '#' in a similar way

[15:30:03.0000] <aho>
<TabAtkins_> Hixie: Okay, like, say you have a long complicated selector pointing to a button. <- bad architecture. implies that the style is location specific, which should be avoided in first place :>

[15:31:00.0000] <TabAtkins_>
I'm also pretty excited about the potential optimization potential here, since this is an explicit indicator of scoping

[15:31:01.0000] <Hixie>
body > p:matches(# + footer) { ... } /* matches the <p> before <footer> where both a children of <body> */

[15:31:02.0000] <aho>
i.e. a .whatever-button should look the same no matter where you place it

[15:31:03.0000] <Hixie>
generally i'd say using classes is bad architecture

[15:31:04.0000] <TabAtkins_>
aho: Not always.  The long complicated part could be just jumping down into the article of a page structurally, rather than requiring the author to tag the article with an id.

[15:31:05.0000] <Hixie>
and location specific is good practice :-)

[15:32:00.0000] <aho>
location specific is f-ing awful :)

[15:32:01.0000] <aho>
it doesn't scale

[15:32:02.0000] <TabAtkins_>
"body > section > article button" is long enough to be annoying.

[15:32:03.0000] <Hixie>
scales fine

[15:32:04.0000] <Hixie>
especially if you have @group

[15:32:05.0000] <aho>
which you currently don't have anywhere .)

[15:32:06.0000] <Hixie>
.class is bad because it implies you're not using semantics well enough :-)

[15:33:00.0000] <aho>
the semantics aren't fine-grained enough

[15:33:01.0000] <Hixie>
they often are, if you're willing to make things context-aware in the style sheet

[15:33:02.0000] <aho>
you mean... location specific? :>

[15:34:00.0000] <Hixie>
sure

[15:34:01.0000] <Hixie>
whatever you call it :-)

[15:34:02.0000] <Hixie>
i tend to think of location as physical location, so i prefer the word context

[15:34:03.0000] <Hixie>
but either is fine

[15:34:04.0000] <aho>
i call it... bloaty, fragile, repetitive, specificity wars, etc ;)

[15:35:00.0000] <Hixie>
*shrug*

[15:35:01.0000] <aho>
or just... "more work"

[15:35:02.0000] <TabAtkins_>
I tend to use as few classes and ids as possible in my doc.  I generally only scatter them around as scoping hooks so I can prefix a structural selector with them.

[15:37:00.0000] <aho>
http://www.slideshare.net/stubbornella

[15:37:01.0000] <aho>
css bloat & 5 mistakes of massive css

[15:38:00.0000] <robman>
aho - oocss rawks 8)

[15:38:01.0000] <aho>
i totally agree with her :>

[15:38:02.0000] <aho>
ye

[15:38:03.0000] <aho>
love the concept

[15:38:04.0000] <TabAtkins_>
I've written and mainted stylesheets for a middle-size company using mostly structural selectors.  The sheets were neither fragile nor bloated.

[15:38:05.0000] <TabAtkins_>
Repetitive, yes, which is a problem I want to solve.

[15:39:00.0000] <aho>
i'm doing ecommerce thingies most of the time

[15:39:01.0000] <aho>
last 2 clients were toyota and audi for example... they want really complicated stuff

[15:39:02.0000] <Hixie>
i find if you use the semantics properly, and make good use of everything HTML provides, and use CSS features like pseudo-classes and attribute selectors, etc, that context-based selectors tend to be more reliable and simpler to maintain than using classes

[15:40:00.0000] <aho>
ie6

[15:40:01.0000] <aho>
there

[15:40:02.0000] <aho>
i said it

[15:40:03.0000] <aho>
:f

[15:40:04.0000] <TabAtkins_>
Why should I care about IE6?

[15:40:05.0000] <TabAtkins_>
/me stopped supporting that years ago.

[15:40:06.0000] <aho>
audi got like 60-70% ie6 internally

[15:40:07.0000] <Hixie>
i target standards-compliant browsers only, not deployed browsers, so my situation may be less representative :-)

[15:40:08.0000] <aho>
cant really skip ie6 there, can i?

[15:41:00.0000] <Hixie>
however, you didn't say that context-aware rules didn't work with deployed browsers, you said they were bloaty and fragile

[15:41:01.0000] <TabAtkins_>
No, but I don't care about audi in that case.  I wouldn't accept a job with them, and wouldn't accept a contract without a hefy extra fee.

[15:41:02.0000] <aho>
well, the better term is unpredictable... perhaps

[15:41:03.0000] <aho>
like a h2 will look different depending on where you put it

[15:42:00.0000] <aho>
that's a bad thing

[15:42:01.0000] <TabAtkins_>
...yes?

[15:42:02.0000] <TabAtkins_>
No, that's how things are supposed to work.

[15:42:03.0000] <TabAtkins_>
An <h2> in my <nav> should be different than one in my <article>.

[15:42:04.0000] <aho>
check nicole's talks

[15:42:05.0000] <TabAtkins_>
I've seen them before.  I disagree.  ^_^

[15:42:06.0000] <aho>
but she's right

[15:42:07.0000] <TabAtkins_>
No...?

[15:43:00.0000] <aho>
(at a bigger scale you really have to do it that way)

[15:43:01.0000] <webr3>
annevk, around?

[15:43:02.0000] <aho>
unless you want to write 2-4 times as much css

[15:43:03.0000] <TabAtkins_>
Like I said, I've maintained decent-size websites using my techniques, and didn't have to write a ton of CSS.

[15:44:00.0000] <TabAtkins_>
More importantly, I didn't have to write a lot of HTML with classes and ids thrown around all over the place, nor did the other people responsible for editting the site who are much less HTML-savvy.

[15:44:01.0000] <aho>
i usually have to write crazy amounts of css because the layouts are really complicated and detailed

[15:44:02.0000] <TabAtkins_>
Write cleaner layouts.  ^_^

[15:45:00.0000] <aho>
i don't do the design... and in these cases we aren't involved in that step at all

[15:45:01.0000] <TabAtkins_>
I identify the break points in the page structure, where what's inside doesn't have much relevance to what's outside, and tag them.  Then I hook structural selectors off of those tags.

[15:47:00.0000] <aho>
look, with a simple layout i can easily get away with very little extra markup and very little css :>

[15:47:01.0000] <TabAtkins_>
I assure you that I've gotten away with this with relatively complex layouts.  I've been a webdev for years. ^_^

[15:47:02.0000] <aho>
the problem are complex layouts which also need to work in crap browsers

[15:47:03.0000] <TabAtkins_>
Correct.

[15:48:00.0000] <aho>
cant do anything about either factor

[15:48:01.0000] <TabAtkins_>
Lowest-common-denominator means you have to write things very explicitly.  That has nothing to do with best practice for modern browsers.

[15:48:02.0000] <aho>
well... d'oh :P

[15:48:03.0000] <TabAtkins_>
I mean, ffs, IE6 doesn't support the child selector.  

[15:48:04.0000] <aho>
child combinator

[15:48:05.0000] <aho>
yea

[15:48:06.0000] <TabAtkins_>
s/selector/combinator/

[15:48:07.0000] <aho>
big problem

[15:49:00.0000] <aho>
current project doesnt support ie6... it's a lot more fun

[15:49:01.0000] <aho>
<:

[15:49:02.0000] <TabAtkins_>
So *anything* you do for IE6 has *zero* applicability for other browsers.  In fact, trying to apply IE6-inspired lessons is probably actively harmful, since you often want to avoid the descendant selector as much as possible.

[15:49:03.0000] <Hixie>
i agree that classes are probably the best way to do things if you target IE6

[15:49:04.0000] <Hixie>
then again, if you target IE6 you're probably better off using <table>s for layout, too

[15:49:05.0000] <Hixie>
doesn't mean that it's the best way to do things in theory

[15:49:06.0000] <TabAtkins_>
Agreed.

[15:50:00.0000] <aho>
naaah... these concepts aren't about ie6

[15:50:01.0000] <aho>
it's about doing things in reverse

[15:50:02.0000] <aho>
define structures, write css, create markup... and it looks right to begin with

[15:50:03.0000] <aho>
little tiny bricks which can be combined in arbitrary ways

[15:51:00.0000] <TabAtkins_>
I create markup then write CSS, and it looks right to begin with.

[15:51:01.0000] <aho>
then you create new markup

[15:51:02.0000] <aho>
and then you need to write more css

[15:51:03.0000] <aho>
:>

[15:51:04.0000] <aho>
it's all about excessive reuse

[15:51:05.0000] <TabAtkins_>
...yes?  It's new markup, which doesn't have any style rules yet.  On the other hand, if it's just a new kind of existing content, then it's already covered.

[15:52:00.0000] <TabAtkins_>
That is, if I'm just making a new page within an existing site, I can probably get away with no CSS, or maybe just a handful of rules to cover that specific page.

[15:52:01.0000] <aho>
it's a new combination of existing building blocks

[15:52:02.0000] <aho>
top down vs bottom up, basically

[15:53:00.0000] <TabAtkins_>
If so, then I don't need any new CSS if I've done my job right from the beginning.

[15:53:01.0000] <TabAtkins_>
If I'm just resuing existing constructs but need new CSS for it, then I did something wrong in my initial coding.

[15:53:02.0000] <Hixie>
the best practice is to write the HTML first, without any CSS at all, no classes and IDs except those needed by script, and only then to write the CSS -- because you can then write multiple alternative style sheets without having to worry about changing the markup at all

[15:53:03.0000] <Hixie>
it just doesn't make sense to use classes in such a scenario

[15:54:00.0000] <aho>
well, apparently it's easier to do it right if you start with tiny pieces and create everything out of those things

[15:54:01.0000] <aho>
it's like lego :)

[15:55:00.0000] <TabAtkins_>
Building it from the bottom up means you have to be more explicit, which can be easier in some circumstances.  I like the cleanliness and easy maintainabily of taking a more holistic view.

[15:56:00.0000] <aho>
there is no holistic view if there are hundrets of components which need to look correct and uniform

[15:56:01.0000] <TabAtkins_>
Actually, making everything look uniform is easier, I would think, by designing the rules top-down.

[15:56:02.0000] <aho>
our relatively simple shop system got over 200 different components for example

[15:57:00.0000] <TabAtkins_>
Rather than repeating for each component what a heading should look like.

[15:58:00.0000] <aho>
IM(hard earned)E it's a *lot* easier (and quicker and far more maintainable) with tiny legos

[15:58:01.0000] <TabAtkins_>
I don't think you can claim that such an approach is less bloaty, though.

[15:58:02.0000] <aho>
it also results in way smaller css files

[15:58:03.0000] <aho>
especially if there are several update cycles

[15:58:04.0000] <TabAtkins_>
A hundred ".component1 > h1", ".component2 > h1", ".component3 > h1" rules is quite a bit more verbose than a single consistent ".component > h1" rule.

[15:59:00.0000] <aho>
you can use multiple classes :>


2010-11-11
[16:00:00.0000] <aho>
so, every heading of each box would look the same by default, but you can also change that if absolutely needed

[16:01:00.0000] <aho>
well, css and html was never meant to be used for this kind of stuff and it really shows, but that's how things are and we gotta work with it

[16:26:00.0000] <MikeSmith>
my Chrome is telling me it's up to date even though it's only at 9.0.572.1 and 9.0.576.0 is supposed to be available

[16:28:00.0000] <MikeSmith>
wonder if it's just me or if there's something awry

[16:29:00.0000] <MikeSmith>
Peter`: you were able to auto-update to 576?

[16:46:00.0000] <hober>
I'm at 9.0.576.0 dev

[16:47:00.0000] <hober>
at least on this machine (running windows)

[16:47:01.0000] <hober>
could be there's a delay for the other platforms

[16:48:00.0000] <aho>
also at 9.0.576.0 dev

[16:48:01.0000] <aho>
(winxp)

[16:51:00.0000] <nessy>
MikeSmith: I am on OS X and have the same version to you 9.0.572.1

[16:51:01.0000] <MikeSmith>
nessy: OK, I'm on OS X too

[16:52:00.0000] <MikeSmith>
so maybe it's just a problem with the OS X build not being up to date or available yet

[16:52:01.0000] <nessy>
yup, would think so

[16:52:02.0000] <MikeSmith>
k

[16:52:03.0000] <aho>
there is some lag .)

[16:53:00.0000] <MikeSmith>
yeah, I now notice that the release announcement says, "The Dev channel has been updated to 9.0.576.0 for Windows and Linux."

[16:56:00.0000] <cardona507>
damn you are on chrome 9?

[16:56:01.0000] <cardona507>
nightly build?

[16:56:02.0000] <Hixie>
dev channel

[16:57:00.0000] <cardona507>
i c 

[17:02:00.0000] <cardona507>
/me is suddenly feeling ashamed of my decrepit stable channel version of Chrome

[17:14:00.0000] <TabAtkins_>
jgraham: What do you think of David Flanagan's latest point re: responseType?

[17:59:00.0000] <Hixie>
the bidi algorithm makes my head hurt

[17:59:01.0000] <Hixie>
like, literally.

[18:03:00.0000] <Hixie>
why does

[18:03:01.0000] <Hixie>
<span dir="ltr"><bdo dir="rtl">&#x05D1;</bdo> <bdo dir="ltr">B</bdo></span>

[18:03:02.0000] <Hixie>
render differently (modulo the space) than

[18:03:03.0000] <Hixie>
<span dir="ltr"><bdo dir="rtl">&#x05D1;</bdo><bdo dir="ltr">B</bdo></span>

[18:04:00.0000] <Hixie>
aaaaaaaaaaaaaaaaaaarrrrrrrrrrrrrrrrrrrrggggggggggggggggghhhhhhhhhhhhhhhhhhhh

[18:07:00.0000] <Hixie>
surely it should render aleph B regardless of whether there's a space between them or not???

[18:08:00.0000] <Hixie>
why would it ever render B aleph?

[18:08:01.0000] <Hixie>
(alef, sorry)

[18:09:00.0000] <othermaciej>
my hypothesis: with no space, the whole run becomes RTL

[18:09:01.0000] <othermaciej>
(i.e. you can't switch directionality in the middle of a word)

[18:10:00.0000] <Hixie>
the sooner i'm done with these i18n bugs the sooner i'll be happy again

[18:10:01.0000] <othermaciej>
though that doesn't correctly predict what happens if you put a non-space character between the aleph and the B

[18:10:02.0000] <othermaciej>
hmm, depends on what character it seems

[18:11:00.0000] <othermaciej>
putting a 2 in between results in 2Bב

[18:11:01.0000] <othermaciej>
an x results in בxB

[18:11:02.0000] <Hixie>
can you get B something ALEF ?

[18:11:03.0000] <Hixie>
anyway, http://www.w3.org/Bugs/Public/show_bug.cgi?id=11211 is the only pre-LC1 bug i have left open

[18:12:00.0000] <Hixie>
and that one will get marked NEEDSINFO if I can't find an answer soon

[18:12:01.0000] <Hixie>
then i'm going back to whatwg mail and changing my work pattern to deal with bugs by having their bugmail be in my IMAP folders and dealing with each bug when i hit a bugmail from that bug

[18:13:00.0000] <Hixie>
rather than sometimes going through bugs and sometimes going through mail

[18:13:01.0000] <othermaciej>
it's not clear to me why you can't just use a unicode LS character for that use case

[18:13:02.0000] <MikeSmith>
Hixie: should I ask r12a to respond to that bug asap?

[18:13:03.0000] <MikeSmith>
/me reads the latest bug comments

[18:13:04.0000] <othermaciej>
unlike a newline, it doesn't need whitespace: pre to be preserved

[18:13:05.0000] <Hixie>
doesn't it?

[18:13:06.0000] <othermaciej>
so I don't think it needs a dedicated element

[18:13:07.0000] <Hixie>
it's not clear to me what CSS says to do with LS

[18:14:00.0000] <Hixie>
it's not a control character, technically, but it seems more control-like than glyph-like

[18:14:01.0000] <othermaciej>
does CSS say what to do with zero-width space, or non-breaking space?

[18:14:02.0000] <MikeSmith>
Hixie: you're waiting for a response to comment 8 about CSS?

[18:14:03.0000] <othermaciej>
I assume CSS only mangles the whitespace that it says it does

[18:15:00.0000] <Hixie>
oh actually CSS explicitly includes LS in its list of control characters

[18:15:01.0000] <Hixie>
MikeSmith: first paragraph of comment 8 or last paragraph of comment 11

[18:15:02.0000] <MikeSmith>
k

[18:15:03.0000] <Hixie>
(same question phrased two different ways)

[18:16:00.0000] <Hixie>
CSS says:

[18:16:01.0000] <Hixie>
   Control characters other than U+0009 (tab), U+000A (line feed), U+0020

[18:16:02.0000] <Hixie>
   (space), and U+202x (bidi formatting characters) are treated as

[18:16:03.0000] <Hixie>
   characters to render in the same way as any normal character.

[18:16:04.0000] <Hixie>
LS is 202x (2028)

[18:16:05.0000] <Hixie>
but nowhere else does it say how to render it

[18:16:06.0000] <Hixie>
it in particular doesn't say it should create a new line box anywhere

[18:16:07.0000] <Hixie>
like it does for LF

[18:16:08.0000] <Hixie>
as far as i can tell

[18:17:00.0000] <Hixie>
anyway if we can just use LS that's fine by me

[18:17:01.0000] <Hixie>
"&#x2028;" is shorter than "<br xxxx>", and I don't know what "xxxx" should be anyway

[18:18:00.0000] <othermaciej>
I see

[18:18:01.0000] <othermaciej>
WebKit doesn't seem to do anything for U+2028 in any whitespace mode

[18:18:02.0000] <Hixie>
as far as i know nobody does

[18:19:00.0000] <Hixie>
btw i love all my recent bidi examples, but i would really appreciate it if someone who speaks arabic or hebrew could check them

[18:19:01.0000] <Hixie>
my arabic is all from wikipedia or google translate

[18:19:02.0000] <Hixie>
so it's likely full of insults

[18:19:03.0000] <othermaciej>
I would guess AryehGregor can check your Hebrew

[18:20:00.0000] <Hixie>
the hebrew is from Aharon so I think it's ok

[18:20:01.0000] <Hixie>
but if someone could double check it too that would certainly be useful

[18:21:00.0000] <Hixie>
afk for a bit, probably bbiab

[18:21:01.0000] <MikeSmith>
Hixie: I've pinged r12a about it and ask him if he could help with facilitating a response from teh CSS WG

[18:23:00.0000] <othermaciej>
I think unicode does not consider U+2028 to be a bidi formatting character, even though it is 202x

[18:25:00.0000] <othermaciej>
202A-E seem to be the bidi formatting characters

[18:27:00.0000] <othermaciej>
the rest of 202x are mostly punctuation characters

[18:27:01.0000] <jwalden>
just curious, what's the rationale for <input type=checkbox required> meaning the checkbox *must* be checked?  seems odd for required to mean any validation at all for checkboxes

[18:28:00.0000] <othermaciej>
well, there are some forms (EULAs and the like) where you must check a certain checkbox to submit

[18:28:01.0000] <othermaciej>
so there is a use case

[18:29:00.0000] <othermaciej>
the other possible interpretation of "required" is that it has no effect on a checkbox

[18:29:01.0000] <othermaciej>
which seems less useful

[18:29:02.0000] <othermaciej>
others have suggested "at least one checkbox out of the group is checked" as a meaning, but checkboxes don't have groups

[18:34:00.0000] <MikeSmith>
http://unicode.org/Public/UNIDATA/PropList.txt

[18:34:01.0000] <MikeSmith>
200E..200F    ; Bidi_Control # Cf   [2] LEFT-TO-RIGHT MARK..RIGHT-TO-LEFT MARK

[18:34:02.0000] <MikeSmith>
202A..202E    ; Bidi_Control # Cf   [5] LEFT-TO-RIGHT EMBEDDING..RIGHT-TO-LEFT OVERRIDE

[18:37:00.0000] <jwalden>
ah, the EULA case -- that makes sense

[18:38:00.0000] <jwalden>
"at least one" sounds like a new widget cross-breed of radiobuttons and checkboxes

[18:38:01.0000] <jwalden>
<input type=radiocheckbutton>

[18:39:00.0000] <othermaciej>
there are in fact forms in existence that want you to check at least one of several checkboxes

[18:39:01.0000] <othermaciej>
or sometimes at least N for other values of N

[18:39:02.0000] <othermaciej>
or sometimes exactly N

[18:39:03.0000] <jwalden>
yeah, I can think of some without much trouble

[18:39:04.0000] <othermaciej>
(usually in cases like "check the following topics you are interested in")

[18:44:00.0000] <jwalden>
I'm a little surprised no one's actually gone to the effort to propose radiocheckbox as an input type, actually

[18:54:00.0000] <jwalden>
huh, does <input type=email> really not allow IDN domain names?  if I'm reading it right, that's a bit unfortunate, if understandable

[18:55:00.0000] <jwalden>
pattern is |1*( atext / "." ) "@" ldh-str 1*( "." ldh-str )|, ldh-str as in http://tools.ietf.org/html/rfc1034

[19:01:00.0000] <jwalden>
ah, spec permits display tricks

[19:06:00.0000] <jwalden>
I wonder if that's enough for something like gmail, tho, which may want to be able to display a name rather than an email address, and I don't see a way to tell the browser to do that

[19:10:00.0000] <MikeSmith>
if that's relevanthttp://www.w3.org/2010/02/rdfa/wiki/Subsets

[19:10:01.0000] <MikeSmith>
oofs

[19:10:02.0000] <MikeSmith>
http://www.w3.org/2010/02/rdfa/wiki/Subsets

[19:10:03.0000] <MikeSmith>
"Certain consumers of RDFa have indicated that they wish to offer only partial support. While the W3C has recommended full RDFa, the RDFa Working Group recognises demand for simpler, consumer-specific subsets"

[19:12:00.0000] <MikeSmith>
http://www.w3.org/2010/02/rdfa/wiki/Subsets#Ignoring_XML_Namespaces

[19:12:01.0000] <MikeSmith>
" A consumer may prefer not to support XML namespaces as a CURIE mapping method. "

[19:39:00.0000] <karlcow>
you had beautiful nightmares with blink in html, you will have enjoyable scary css3 animation http://www.fabulant.com/downloadcenter/textpropeller/textpropeller.html

[20:58:00.0000] <jwalden>
for anyone reading logs, sicking explained that the gmail-multiple-addresses use case needs a new input type so that names (in addition to addresses) are submitted, and that the topic's been discussed before

[21:23:00.0000] <MikeSmith>
https://lists.webkit.org/pipermail/webkit-dev/2010-November/015042.html

[21:23:01.0000] <MikeSmith>
"One more datum, that I just discovered, Apple has implemented XPath 2.0, XSLT 2.0, and XQuery"

[21:23:02.0000] <MikeSmith>
http://developer.apple.com/library/mac/documentation/Cocoa/Conceptual/NSXML_Concepts/NSXML.html

[21:31:00.0000] <MikeSmith>
is NSXML part of standard OSX, or is it a developer library that you need to statically link into apps?

[21:32:00.0000] <abarth>
there was some recent discussion of XSLT 2.0 on the webkit-dev list

[21:32:01.0000] <abarth>
the generally feeling seemed to be against implementing it

[21:32:02.0000] <abarth>
in WebKit

[21:32:03.0000] <abarth>
but i don't think it was ruled out

[21:41:00.0000] <MikeSmith>
abarth: yeah, that's where I came across mention of OS X NSXML already having XPath 2.0 and XSLT 2.0 support

[21:44:00.0000] <Hixie>
jwalden: i doubt gmail would use a browser-provided widget for that

[21:44:01.0000] <jwalden>
Hixie: that was also something sicking said :-)

[21:45:00.0000] <jwalden>
which seems slightly dumb to me, but whatever

[22:58:00.0000] <Peter`>
MikeSmith: Mac had the flash player updated last Monday, so it's a tad behind

[22:58:01.0000] <MikeSmith>
rok

[22:58:02.0000] <MikeSmith>
er

[22:58:03.0000] <MikeSmith>
ok

[00:29:00.0000] <zcorpan>
for constants on XHR: you probably have an XHR instant as a variable and the constants appear on that, too

[00:29:01.0000] <zcorpan>
so you'd write xhr.responseType == xhr.RESPONSE_ARRAYBUFFER

[00:29:02.0000] <zcorpan>
s/==/=/

[00:30:00.0000] <zcorpan>
s/instant/instance/

[00:43:00.0000] <annevk>
canvas API uses strings

[01:18:00.0000] <annevk>
hsivonen, you're fine with the IANA-based registry after all?

[01:18:01.0000] <annevk>
hsivonen, or did you make a mistake in your email?

[01:25:00.0000] <hsivonen>
oooops.

[01:26:00.0000] <hsivonen>
annevk: thanks

[01:47:00.0000] <zcorpan>
wow seems https://bugzilla.mozilla.org/show_bug.cgi?id=602028 has had a major bikeshed this morning

[01:49:00.0000] <annevk>
oh

[01:49:01.0000] <annevk>
tl;dr?

[01:49:02.0000] <zcorpan>
haven't read it yet

[01:50:00.0000] <Ms2ger>
No real new arguments

[01:51:00.0000] <jgraham>
Are there are no limits to the ways that WebSockets can make me sad?

[01:51:01.0000] <annevk>
it is waiting for you to disappear

[01:51:02.0000] <jgraham>
scare quotes implied?

[01:53:00.0000] <gsnedders>
jgraham: emo.

[01:55:00.0000] <jgraham>
Dude I am not an emo. I am just worried that Anne has the Mafia out to "disappear" me in the hope that it brings unity to the WebSockets worls and people ship the damn thing rather than endlessly talking about it

[01:58:00.0000] <annevk>
/me has the "connections"

[01:59:00.0000] <jgraham>
TabAtkins_: I think that using string constants violates TSBO(APOO)OWTDI

[02:00:00.0000] <annevk>
fortunately nobody knows what that is

[02:00:01.0000] <jgraham>
Because some people will write foo.responseType = "whatever" and others will write foo.responseType = XmlHttpRequest.WHATEVER_TYPE

[02:01:00.0000] <jgraham>
and confusion will reign

[02:01:01.0000] <annevk>
people are doing that with the <canvas> API today?

[02:01:02.0000] <annevk>
I somewhat doubt it

[02:01:03.0000] <Ms2ger>
s/Xml/XML/

[02:03:00.0000] <jgraham>
What named string constants does it have?

[02:03:01.0000] <hsivonen>
IMO, the constants are entirely unhelpful, because they aren't backwards compatible

[02:04:00.0000] <hsivonen>
I was pretty annoyed when I tried to use the constants and they didn't work

[02:04:01.0000] <annevk>
you're talking about the readyState constants

[02:04:02.0000] <hsivonen>
it's not much of a victory if 8 years from now, we'll be able to write == 4 instead of == DONE

[02:04:03.0000] <hsivonen>
annevk: yes

[02:05:00.0000] <annevk>
we're talking about something else

[02:05:01.0000] <hsivonen>
I saw constants and XHR together and that was my cue to whine

[02:05:02.0000] <annevk>
:)

[02:05:03.0000] <jgraham>
hsivonen: You could define the constants yourself in the meantime :)

[02:05:04.0000] <annevk>
or you could just keep using the numbers

[02:05:05.0000] <hsivonen>
jgraham: oh like for namespace URIs?

[02:06:00.0000] <hsivonen>
annevk: I use the numbers now

[02:06:01.0000] <hsivonen>
annevk: but my time was wasted when I ended up finding out that I should use the numbers

[02:06:02.0000] <jgraham>
Well there are only a few and raw numbers are bad

[02:06:03.0000] <hsivonen>
raw numbers work!

[02:07:00.0000] <jgraham>
You can easilly do XMLHttpRequest.DONE = 4 at the top of your script

[02:07:01.0000] <jgraham>
and then use the constants

[02:07:02.0000] <jgraham>
(or however they work; maybe you need to put it on the prototype object)

[02:08:00.0000] <annevk>
I wouldn't exactly call it wasted time; this pretty much applies to each new feature we introduce

[02:08:01.0000] <annevk>
I agree some new features are more useful than others

[02:10:00.0000] <hsivonen>
in this case, the new feature is syntactic sugaring, so it's by definition not useful in the sense of having new functionality

[02:11:00.0000] <jgraham>
hsivonen: Did you agree with the resolution of 9659 in the end?

[02:11:01.0000] <jgraham>
http://www.w3.org/Bugs/Public/show_bug.cgi?id=9659

[02:12:00.0000] <zcorpan>
jgraham: constants are both on the prototype and on the interface object, iirc

[02:13:00.0000] <zcorpan>
annevk: tl;dr is someone WONTFIXed the bug, someone else REOPENed it and the same arguments were repeated in further 36 messages and still no conclusion

[02:13:01.0000] <gsnedders>
That's not my memory…

[02:14:00.0000] <jgraham>
gsnedders: Finding things in your head that you're sure didn't happen to you?

[02:14:01.0000] <jgraham>
A rock and roll lifestyle will have that effect you know

[02:14:02.0000] <hsivonen>
jgraham: I haven't reviewed the resolution but I'm not planning on making substantial code changes 

[02:15:00.0000] <jgraham>
hsivonen: Hmm. Ok

[02:15:01.0000] <jgraham>
I want html5lib to be close to the spec and I want to update the tests to match the new spec which is not quite trivial

[02:16:00.0000] <hsivonen>
jgraham: if the update isn't trivial, I think the bug should be reopened

[02:16:01.0000] <jgraham>
Pushing the null handling into each tokenizer state is lots of extra complexity

[02:17:00.0000] <hsivonen>
there's really no point in tweaking away from Gecko and WebKit interoperating

[02:17:01.0000] <hsivonen>
oh, you meant tokenizer tests

[02:17:02.0000] <hsivonen>
yeah, it's already in the tokenizer in Gecko, so that's good :-)

[02:17:03.0000] <hsivonen>
I thought you meant tree builder tests

[02:17:04.0000] <jgraham>
Well there is no difference between tokenizer tests and parser tests really :)

[02:18:00.0000] <jgraham>
s/parser/treebuilder/

[02:18:01.0000] <jgraham>
Oh, so you always handle null explicitly?

[02:18:02.0000] <hsivonen>
I guess I really need to review the spec change as soon as I finish dealing with orange and have had lunch

[02:18:03.0000] <hsivonen>
jgraham: yes

[02:19:00.0000] <hsivonen>
jgraham: and I have a special token type for it

[02:20:00.0000] <jgraham>
Why?

[02:20:01.0000] <hsivonen>
jgraham: to avoid another pass over the data just to remap U+0000 and to be able to do context-sensitive handling

[02:21:00.0000] <hsivonen>
basically, I don't preprocess the input stream

[02:21:01.0000] <hsivonen>
that's baked into the tokenizer

[02:21:02.0000] <hsivonen>
always has been

[02:22:00.0000] <jgraham>
So you have special handling for all the characters that are converted to U+FFFD?

[02:22:01.0000] <jgraham>
in each tokenizer state?

[02:22:02.0000] <hsivonen>
jgraham: there's only U+0000

[02:23:00.0000] <hsivonen>
jgraham: no other character turns into U+FFFD unless encoded as a numeric character reference

[02:23:01.0000] <hsivonen>
jgraham: but yeah, U+0000 is handled in every tokenizer state unless it gets reprocessed in another state as part of "anything else"

[02:24:00.0000] <jgraham>
hsivonen: You can't get unpaired surrogates?

[02:24:01.0000] <hsivonen>
jgraham: I think that belongs into the UTF-16 to UTF-16 converter

[02:25:00.0000] <hsivonen>
and the UTF-8 to UTF-16 converter

[02:25:01.0000] <jgraham>
So the input stream is actually preprocessed 

[02:25:02.0000] <jgraham>
By the code that does bytes->unicode conversion

[02:25:03.0000] <hsivonen>
the byte stream is preprocessed by the bytes to UTF-16 code units converter

[02:25:04.0000] <jgraham>
Right

[02:26:00.0000] <hsivonen>
but the UTF-16 code unit stream isn't

[02:26:01.0000] <hsivonen>
e.g. document.write() isn't preprocessed for unpaired surrogates

[02:26:02.0000] <asmodai>
hsivonen: can there be CSS bugs in the Mac version of FF, but not in the Windows version?

[02:27:00.0000] <hsivonen>
asmodai: depends on what kind of CSS bugs

[02:27:01.0000] <jgraham>
Oh, that's an interesting point; should U+D800 get converted to U+FFFD in document.write

[02:27:02.0000] <hsivonen>
asmodai: pure style system bugs, no

[02:27:03.0000] <asmodai>
Colleague got a design that shows up perfectly on all kinds of browsers on Windows and Mac, but FF on Mac shows an issue

[02:27:04.0000] <hsivonen>
asmodai: graphics layer bugs, yes

[02:27:05.0000] <hsivonen>
asmodai: font metrics?

[02:27:06.0000] <asmodai>
wait, getting a screenie

[02:27:07.0000] <hsivonen>
jgraham: do browsers really do that? if not, we should make it a spec bug

[02:28:00.0000] <jgraham>
I'm not sure

[02:28:01.0000] <jgraham>
I'm not really sure what the spec requires either

[02:28:02.0000] <hsivonen>
jgraham: I'd be very unhappy about added complexity here if it isn't required for compat

[02:32:00.0000] <zcorpan>
seems opera gecko and webkit put U+D800 in the dom for document.write('\uD800')

[02:32:01.0000] <hsivonen>
problem solved

[02:33:00.0000] <jgraham>
hsivonen: So it seems likely that you will be happy with the resolution of that bug

[02:34:00.0000] <jgraham>
/me is surprised we don't already have tests for null in every input mode if that is how you implement it

[02:34:01.0000] <hsivonen>
jgraham: cool. I'll have a look after lunch

[02:39:00.0000] <asmodai>
hsivonen: http://www.in-nomine.org/~asmodai/firefox_windows.png and http://www.in-nomine.org/~asmodai/firefox_mac.png

[02:39:01.0000] <asmodai>
design is stable across Windows/Mac with Chrome, Safari, IE, only with the Mac FF does it do this

[02:41:00.0000] <Ms2ger>
HTML pls

[02:42:00.0000] <hsivonen>
asmodai: so the problem is the left gray sidebar? does its size depend on font metrics?

[02:42:01.0000] <asmodai>
hsivonen: Also on the right side, the grey bar is shorter suddenly

[02:42:02.0000] <asmodai>
moment, getting URL

[02:42:03.0000] <hsivonen>
/me goes get lunch

[02:43:00.0000] <asmodai>
hsivonen / Ms2ger : http://www.rsm.nl/home/execed/In-Company/How_We_Work

[02:46:00.0000] <Ms2ger>
No idea about your problem, but you have |color: #000000d;| in print.css

[02:48:00.0000] <asmodai>
Ms2ger: tossing that to my colleague.

[02:48:01.0000] <asmodai>
Thanks

[02:49:00.0000] <Ms2ger>
Thank whoever made Firefox dump that in the error console :)

[02:49:01.0000] <asmodai>
hehe

[02:49:02.0000] <asmodai>
He just fixed that part at least

[03:14:00.0000] <zcorpan>
abarth: under the attack scenario that motivates the masking, where a php script implements the handshake, can't the php script send the relevant information to the client to make it possible for the client to replay the masking and thus control the network bytes anyway (after the handshake has completed)?

[03:17:00.0000] <jgraham>
zcorpan: Does that not assume that the server being attacked is cooperating with the attacker in order to make itself vunerable?

[03:18:00.0000] <jgraham>
Although maybe that is possible in a shared-hosting scenario

[03:18:01.0000] <zcorpan>
jgraham: the scenario was attacking another virtual host on the same physical server

[03:23:00.0000] <jgraham>
Does it matter after the handshake has completed?

[03:27:00.0000] <Philip`>
Is test2.w3.org intentionally broken?

[03:35:00.0000] <hsivonen>
asmodai: I don't have an explanation to the Mac layout problem you are seeing. sorry

[03:38:00.0000] <annevk>
Philip`, prolly not?

[03:41:00.0000] <asmodai>
hsivonen: That's ok, bug for sure?

[03:43:00.0000] <hsivonen>
asmodai: could be a bug. could be a font metrics thing. but if it's a font metrics thing, it's at least mildly odd

[03:51:00.0000] <hsivonen>
jgraham: filed http://www.w3.org/Bugs/Public/show_bug.cgi?id=11298

[03:58:00.0000] <hsivonen>
jgraham: the U+0000 fix looks reasonable to me

[03:59:00.0000] <asmodai>
hsivonen: logging a bug for core, which component should I pick do you think?

[03:59:01.0000] <hsivonen>
asmodai: layout

[03:59:02.0000] <asmodai>
ts

[03:59:03.0000] <asmodai>
ta

[04:00:00.0000] <hsivonen>
jgraham: ooh. now U+0000 gets ignored in "in select". well, ok whatever.

[04:01:00.0000] <hsivonen>
hmm. yeah, that's about right. nothing to see here

[04:09:00.0000] <jarib>
hi, the spec at http://www.whatwg.org/specs/web-apps/current-work/ has a syntax error in the IDL for HTMLVideoElement

[04:09:01.0000] <jarib>
  [PutForwards=value attribute DOMSettableTokenList audio; 

[04:09:02.0000] <jarib>
what's the right place to report this?

[04:10:00.0000] <Lachy>
jarib, use the bug reporting form at the bottom of the page

[04:10:01.0000] <jarib>
ok, thanks

[04:11:00.0000] <jarib>
you mean the "submit review comment" thing?

[04:11:01.0000] <asmodai>
hsivonen: Is this clear enough: https://bugzilla.mozilla.org/show_bug.cgi?id=611285 ?

[04:12:00.0000] <jarib>
ah, very nice

[04:13:00.0000] <hsivonen>
asmodai: I added a comment for clarity. thanks for filing

[04:14:00.0000] <asmodai>
hsivonen: no problem, thanks for the note. Hope they wont change the URL's code in the mean time :)  (yay for screenies)

[04:14:01.0000] <Lachy>
asmodai, why do I get an Invalid Bug ID error when I look at that bug?

[04:15:00.0000] <Lachy>
oh, weird. It gives me an error when I'm not logged it, but works when I am.

[04:15:01.0000] <asmodai>
Lachy: Peculiar

[04:15:02.0000] <asmodai>
maybe because of the https?

[04:18:00.0000] <jgraham>
hsivonen: Arguably that bug is invalid, since it might be implied in the spec that preprocessing the input stream doesn't happen for things that you insert into it via document.write

[04:18:01.0000] <jgraham>
It is not 100% clear though

[04:23:00.0000] <zcorpan>
jarib: known issue

[04:23:01.0000] <jarib>
zcorpan: ah

[04:23:02.0000] <zcorpan>
iirc at least :)

[04:24:00.0000] <jarib>
got it

[04:24:01.0000] <smaug____>
annevk: ping

[04:24:02.0000] <smaug____>
annevk: could you paste the link to your XHR tests?

[04:25:00.0000] <annevk>
http://tc.labs.opera.com/apis/XMLHttpRequest/ .com/svn for subversion

[04:25:01.0000] <smaug____>
thanks

[04:53:00.0000] <asmodai>
/me pokes bugzilla.mozilla.org -- not your day is it?

[05:19:00.0000] <jgraham>
Is it intentional that CDATA sections no longer trandform U+0000->U+FFFD?

[05:19:01.0000] <jgraham>
hsivonen: ^

[05:19:02.0000] <jgraham>
*transform

[05:20:00.0000] <hsivonen>
jgraham: nope, not at all intentional

[05:20:01.0000] <hsivonen>
I suck at spec review, it seems.

[05:21:00.0000] <hsivonen>
jgraham: that's what happens with spec writing that tries to avoid spelling out all the states

[05:32:00.0000] <jcranmer>
/me wonders why people find specs unreadable

[05:42:00.0000] <annevk>
jcranmer, because like reading code, it's difficult

[05:45:00.0000] <Philip`>
jcranmer: Because they're written with the assumption that the reader already knows how to read them and has a large amount of prior knowledge of the topic

[05:46:00.0000] <Philip`>
(They'd probably be ten times as long if they didn't make those assumptions)

[06:02:00.0000] <espadrine>
Is there any way at all to do syntax highlighted editing of text in html?

[06:03:00.0000] <espadrine>
Section "user-editing-actions" of the spec is very imprecise about javascript ways to move the caret

[06:03:01.0000] <jgraham>
espadrine: Build a text editor using <canvas>?

[06:04:00.0000] <espadrine>
jgraham: Bespin way... but that means the text is not searchable, right?

[06:05:00.0000] <Philip`>
It means you lose all kinds of features that OSes/browsers already provide and users often expect

[06:07:00.0000] <jgraham>
/me was being ironic

[06:07:01.0000] <espadrine>
Philip`: I think that is unfortunate.

[06:07:02.0000] <zcorpan>
use <textarea> and XBL

[06:07:03.0000] <jgraham>
The irony being that it is an obviously crazy idea, but also the way that seems to work

[06:07:04.0000] <jgraham>
or at least a way

[06:12:00.0000] <espadrine>
zcorpan: XBL seems nice, but it's a Mozilla-only api

[06:12:01.0000] <espadrine>
Am I wrong?

[06:12:02.0000] <jgraham>
It is standard

[06:12:03.0000] <jgraham>
An unimplemented

[06:12:04.0000] <jgraham>
*and

[06:12:05.0000] <jgraham>
(XBL2)

[06:13:00.0000] <jgraham>
Philip`: Hmm, this single-character-unget stuff is annoying

[06:14:00.0000] <jgraham>
By which I mean "makes things look confusingly unlike the spec"

[06:18:00.0000] <Philip`>
jgraham: How so?

[06:18:01.0000] <Philip`>
I thought ungetting a character then consuming it was just meant to be equivalent to the spec's notion of reconsuming

[06:20:00.0000] <jgraham>
Because when you lookahead you can't unconsume all the characters that you just looked at

[06:20:01.0000] <jgraham>
So you have to add extra modes and extra not-in-the-spec logic

[06:22:00.0000] <Philip`>
I thought that only happened with character references, and in that case the characters will all be (?i)[&0-9a-z] so they won't be handled as anything other than character tokens

[06:22:01.0000] <Philip`>
or something like that

[06:23:00.0000] <jgraham>
Doctypes

[06:24:00.0000] <Philip`>
Oh, that too

[06:24:01.0000] <Ms2ger>
Doctypes add a whole new sense of fun

[06:25:00.0000] <gsnedders>
Nah, they're not that fun until you end up on insane amounts of switching like IE

[06:26:00.0000] <Philip`>
The sad thing is that the entire meaningful output of the complex doctype syntax is 1.6 bits of data

[06:29:00.0000] <Philip`>
jgraham: I suppose the current implementation of unget means it possibly wouldn't be hard or slow to support ungetting multiple characters

[06:29:01.0000] <Philip`>
jgraham: I vaguely remember it was originally an issue due to keeping track of line number, perhaps

[06:32:00.0000] <karlcow>
hmm the number of times in a form when I press Command+S instead of clicking on Save Draft and having the stupid dialog window. :)

[06:32:01.0000] <Philip`>
jgraham: The code will never really look like the spec though, since lookahead is incompatible with streaming input

[06:38:00.0000] <hsivonen>
it's uncool that the spec has lookahead

[06:40:00.0000] <jgraham>
Philip`: True, but extra states seem quite bad

[06:41:00.0000] <hsivonen>
/me has extra states

[06:42:00.0000] <jgraham>
Philip`: I can't see why unget wouldn't worj with > 1 character at the moment

[06:49:00.0000] <jgraham>
This new null handling doesn't seem to maintain the relationship that 1 null character === 1 parse error

[07:18:00.0000] <jgraham>
Is it me or does the end tag open state eat the first character of the bogus comment in the "anything Else" case?

[07:18:01.0000] <jgraham>
http://www.whatwg.org/specs/web-apps/current-work/complete.html#end-tag-open-state

[07:18:02.0000] <jgraham>
That seems wrong

[07:23:00.0000] <zcorpan>
jgraham: "Emit a comment token whose data is the concatenation of all the characters starting from and including the character that caused the state machine to switch into the bogus comment state, ..."

[07:24:00.0000] <hober>
hsivonen: in your latest blog post, in the definition of External Script: s/and/an/

[07:24:01.0000] <zcorpan>
jgraham: or do you want the slash to be part of the data?

[07:25:00.0000] <jgraham>
zcorpan: Oh, I missed that because it is a dumb place to put that requirement :)

[07:26:00.0000] <zcorpan>
yeah the bogus comment stuff is a bit different to the rest of the parser

[07:26:01.0000] <zcorpan>
tokenizer*

[07:26:02.0000] <hober>
hsivonen: in the definition of Executing a script, s/text a JavaScript/text as JavaScript/

[07:27:00.0000] <jgraham>
The rest isn't so bad; it's just that particular bit that basically reads "collect some characters then emit a tokejn containing them and one more character that you probably discarded by now"

[07:30:00.0000] <hober>
jgraham: that bit was really easy in elisp

[07:31:00.0000] <hober>
I don't discard any characters, since I'm tokenizing a buffer in-place :)

[07:31:01.0000] <hober>
"consume the next input character" is just (forward-char 1)

[07:31:02.0000] <jgraham>
hober: That is cheating :)

[07:31:03.0000] <hober>
indeed

[07:32:00.0000] <jgraham>
hober: How is that going?

[07:32:01.0000] <jgraham>
I am totally psyced about a decent HTML mode for emacs

[07:32:02.0000] <jgraham>
(sp?)

[07:33:00.0000] <hober>
I haven't worked on it in a couple of weeks

[07:33:01.0000] <jgraham>
(although in my dream world, I would get to use js2-mode inside <script> elements and css mode inside <style> elements)

[07:33:02.0000] <hober>
insofar as the tokenizer is concerned, it's essentially done, but I can't prove that yet, until I improve my html5lib-test-runner

[07:33:03.0000] <jgraham>
(I think if I got that I would probably cry)

[07:33:04.0000] <hober>
yeah, that bit isn't going to happen

[07:33:05.0000] <jgraham>
:)

[07:34:00.0000] <hober>
clone-indirect-buffer, narrow-to-region, foo-mode

[07:34:01.0000] <Philip`>
jgraham: (And you'd get HTML mode inside document.write inside <script>)

[07:34:02.0000] <jgraham>
Philip`: Hah

[07:34:03.0000] <jgraham>
Not even I am that unreasonable

[07:35:00.0000] <hober>
I suppose I could work on the editing mode in parallel to improving my test passing score

[07:35:01.0000] <Philip`>
I wonder what it'd be like if web technology had a strict concept of layers

[07:36:00.0000] <hober>
hsivonen would like the mode to be able to run relax ng validation with nxml's rng-valid stuff

[07:36:01.0000] <Philip`>
instead of being lots of components which can all embed each other and be embedded in each other

[07:36:02.0000] <zcorpan>
Philip`: and css mode in style="" in document.write inside <script>?

[07:36:03.0000] <hober>
hopefully that isn't too tightly coupled to a) xml and b) nxml

[07:36:04.0000] <hober>
zcorpan: and js2-mode in an IE behavior expression in style="" in document.write inside <script> :)

[07:36:05.0000] <Philip`>
(HTML containing PHP using SQL to return HTML which contains scripts which print HTML which call scripts which ...)

[07:37:00.0000] <zcorpan>
hober: naw, IE behaviors are non-standard

[07:37:01.0000] <Philip`>
(It's not surprising there's so many security vulnerabilities due to incorrect escaping)

[08:25:00.0000] <eric_carlson>
/me works on a build fix

[08:26:00.0000] <Ms2ger>
Wrong window? ;)

[08:27:00.0000] <jgraham>
It's like twitter, he's just broadcasting some irrelevant details from his life to people he has never met

[08:30:00.0000] <eric_carlson>
wrong window, but I have met some of the people here :-)

[08:30:01.0000] <othermaciej>
MikeSmith: to answer your earlier question, NSXML is part of Foundation and a Mac OS X system API

[08:31:00.0000] <othermaciej>
MikeSmith: it doesn't generally get random Web content thrown at it in uncontrolled conditions, so the XSLT 2.0 compatibility breaks are probably less of an issue

[08:31:01.0000] <MikeSmith>
ok

[09:08:00.0000] <MikeSmith>
Hixie: please note http://lists.w3.org/Archives/Public/public-html/2010Nov/0192.html if you've not already

[09:08:01.0000] <MikeSmith>
about issue 128, "Authors should be able to use <figure> where <img> can be used""

[09:09:00.0000] <MikeSmith>
"if either of the original proposal authors would like additional time to revise their proposals, please respond to this message by Wednesday, November 17"

[09:19:00.0000] <AryehGregor>
Hixie, I don't see where the Hebrew stuff is.  I only see Arabic examples in <bdi> and dir=auto.

[09:24:00.0000] <Hixie>
AryehGregor: there's a hebrew example that contains the word "F#"

[09:24:01.0000] <Hixie>
MikeSmith: are there edits I should make that I haven't made?

[09:24:02.0000] <MikeSmith>
Hixie: up to you

[09:25:00.0000] <MikeSmith>
I just wanted to give you a heads-up that the deadline had been set

[09:25:01.0000] <MikeSmith>
in case you might want to change anything

[09:25:02.0000] <Hixie>
don't worry, i read all the mail from the chairs sent to the list :-)

[09:25:03.0000] <AryehGregor>
Hixie, does that imply that you expect me to open up the complete version of the spec so I can search for it?  Because right now I'm using Firefox, and even in Firefox 4, it basically freezes all the other tabs for a minute or two whenever I do that.

[09:25:04.0000] <MikeSmith>
hai hai

[09:25:05.0000] <AryehGregor>
/me finds it anyway

[09:25:06.0000] <AryehGregor>
"בחר שפת תכנות"

[09:25:07.0000] <Hixie>
AryehGregor: it's in the rendering section, i think, but honestly i don't remember at this point

[09:25:08.0000] <Hixie>
does ff4 really still not handle the complete spec?

[09:26:00.0000] <Hixie>
i thought they fixed that

[09:26:01.0000] <Hixie>
it was working last i tried

[09:26:02.0000] <AryehGregor>
It does, if you wait a minute or two.

[09:26:03.0000] <AryehGregor>
/me wonders if IE9 renders it faster

[09:26:04.0000] <AryehGregor>
(not that it helps me on Linux)

[09:27:00.0000] <AryehGregor>
Awesome, RTL text jumps around in XChat if you even try to select it.

[09:27:01.0000] <AryehGregor>
/me sighs

[09:27:02.0000] <AryehGregor>
"בחר" certainly means "choose".

[09:27:03.0000] <AryehGregor>
Yay first-string!

[09:27:04.0000] <AryehGregor>
The word "בחר" certainly means "choose".

[09:27:05.0000] <AryehGregor>
Er, "Yay first-strong!"

[09:28:00.0000] <Ms2ger>
All you need is bdi on IRC

[09:28:01.0000] <AryehGregor>
In the masculine singular.  Wikipedia seems to use the plural for things like this.  No idea if "שפת תכנות" means "programming language", but it seems plausible.

[09:29:00.0000] <AryehGregor>
This is rather modern stuff for me to be sure.

[09:29:01.0000] <AryehGregor>
Give me a prayer or something, that's more up my alley.

[09:29:02.0000] <AryehGregor>
But I'm guessing Aharon is Israeli and knows what he's talking about.

[09:29:03.0000] <Hixie>
hehe

[09:40:00.0000] <AryehGregor>
/me notices that Linus Torvalds seems to use Chrome: https://bugzilla.redhat.com/show_bug.cgi?id=638477#c38

[10:04:00.0000] <AryehGregor>
hsivonen, "The old Firefox behavior was to execute non-async, non-defer scripts in the order in which they were run." http://hsivonen.iki.fi/script-execution/

[10:04:01.0000] <AryehGregor>
Surely you mean "the order in which they occurred in the document" or something?

[10:05:00.0000] <gsnedders>
execute them in the order they were run? Wow.

[10:05:01.0000] <Ms2ger>
run != execute

[10:06:00.0000] <AryehGregor>
Oh, wait.

[10:07:00.0000] <AryehGregor>
I didn't read the definitions.

[10:07:01.0000] <AryehGregor>
How confusing.

[10:07:02.0000] <AryehGregor>
"(Blame the HTML5 spec for giving distinct meanings to “run” and “execute”.)"

[10:07:03.0000] <AryehGregor>
/me throws tomatoes at Hixie 

[10:07:04.0000] <AryehGregor>
That is exceptionally horrible terminology.

[10:07:05.0000] <Hixie>
feel free to file a bug suggesting better terminology

[10:08:00.0000] <Hixie>
this stuff just evolves and often ends up silly

[10:08:01.0000] <AryehGregor>
http://www.w3.org/Bugs/Public/show_bug.cgi?id=11301

[10:08:02.0000] <Ms2ger>
Hixie, btw, are you planning to remove the stuff that's in DOM Core now?

[10:50:00.0000] <Hixie>
AryehGregor: awesome, thanks

[10:50:01.0000] <Hixie>
Ms2ger: haven't been following DOM Core, but if there's stuff that needs removing, file a bug or send mail

[10:50:02.0000] <Ms2ger>
Okay

[11:26:00.0000] <annevk>
Hixie, plenty of stuff can be removed

[11:32:00.0000] <Ms2ger>
/me wants RESOLVED JUNK

[11:34:00.0000] <annevk>
INVALID is not enough?

[11:35:00.0000] <mdelaney>
Philip`: ping

[11:35:01.0000] <annevk>
I guess sometimes you want to express "your bug report is so stupid it is not even worth classifying as INVALID"; especially for the spam

[11:35:02.0000] <Ms2ger>
Yeah

[11:38:00.0000] <Ms2ger>
/me sighs

[11:39:00.0000] <kennyluck>
SPAM

[11:39:01.0000] <Ms2ger>
We are now discussing the wording of the sentence "Entire novels have been written about the security considerations that apply to HTML documents."

[11:50:00.0000] <Philip`>
mdelaney: Pong

[11:51:00.0000] <mdelaney>
Philip`: just sent you an email

[11:51:01.0000] <Philip`>
mdelaney: I saw :-)

[11:51:02.0000] <mdelaney>
kk

[11:52:00.0000] <Philip`>
mdelaney: Will reply when I have a bit more time, if it's not urgent

[11:54:00.0000] <mdelaney>
No, it's not. I'm just on a canvas clean-up rampage and it's a quick thing. No rush.

[12:17:00.0000] <heycam>
i like the idea of novels having been written about security considerations of html

[12:17:01.0000] <heycam>
http://mcc.id.au/temp/novel.html

[12:25:00.0000] <Hixie>
rofl

[12:25:01.0000] <Hixie>
that's awesome

[12:26:00.0000] <TabAtkins_>
Hahahahahaha

[12:28:00.0000] <annevk>
heycam, want more

[12:28:01.0000] <heycam>
:)

[12:30:00.0000] <annevk>
also, that should not be in temp

[12:30:01.0000] <Philip`>
Hmph, I was just about to complain bitterly about your inconsistent use of "--" vs "—", but now it looks like you've fixed it already so I've got nothing to complain about :-(

[12:30:02.0000] <annevk>
/me makes a copy

[12:31:00.0000] <heycam>
more permanent - http://mcc.id.au/2010/novel.html

[12:32:00.0000] <heycam>
(in practice, my temp dir is reasonably permanent though)

[12:32:01.0000] <gsnedders>
heycam: +1

[12:33:00.0000] <annevk>
I hope we see more of this now you have permanent free time ;p

[12:33:01.0000] <heycam>
good point

[12:33:02.0000] <heycam>
/me returns to work

[12:37:00.0000] <nimbupani>
heycam: is this something I can tweet :)

[12:37:01.0000] <annevk>
it is on the interwebs but you cannot link to it

[12:37:02.0000] <nimbupani>
its polite to ask annevk :P

[12:38:00.0000] <annevk>
you must be new here

[12:38:01.0000] <heycam>
nimbupani, if you want

[12:38:02.0000] <nimbupani>
ok TabAtkins_ oredi did :)

[12:39:00.0000] <Philip`>
nimbupani: Surely it's too long to tweet

[12:39:01.0000] <nimbupani>
so I am no longer responsible for its widespread popularity.

[12:40:00.0000] <Philip`>
though you could do it in serialised instalments

[12:40:01.0000] <annevk>
Philip`, are you even on twitter?

[12:40:02.0000] <Philip`>
No

[12:41:00.0000] <nimbupani>
serialised twitter novels are not that fun Philip`

[12:45:00.0000] <Peter->
heycam: haha! :D

[12:46:00.0000] <Ms2ger>
/me expects to see the novel on public-html

[12:47:00.0000] <annevk>
any minute now

[12:47:01.0000] <annevk>
taking bets in #whatwg-bets

[12:53:00.0000] <hober>
Max Barry's _Machine Man_ is being published, one page at a time, on a blog: http://www.maxbarry.com/machineman/

[12:54:00.0000] <hober>
you could do that with _Security Considerations_ :)

[13:07:00.0000] <Ms2ger>
Does the item attribute still exist?

[13:07:01.0000] <zcorpan>
hmm, the http-like header parsing didn't go away in the introduction of json in abarth-01

[13:08:00.0000] <Ms2ger>
...they can quite legitimately say that the aforementioned random junk is just that, junk...

[13:09:00.0000] <annevk>
Ms2ger, not mentioned as global attribute

[13:10:00.0000] <TabAtkins_>
Ms2ger: Renamed to @itemscope

[13:26:00.0000] <zcorpan>
although i guess it became a bit simpler for the server side, at least if there's an off-the-shelf json parser available

[13:28:00.0000] <Ms2ger>
TabAtkins_, thanks, filed a bug already

[13:32:00.0000] <Ms2ger>
Hixie, annevk, filed bug 11305 for DOM Core stuff

[13:44:00.0000] <zcorpan>
Hixie: the length of the attribute name is not so relevant imho, it should be easy to remember and easy to type

[13:44:01.0000] <zcorpan>
Hixie: <br foobar> wins on both compared to &#x2028; for many values of foobar, i think

[13:45:00.0000] <aho>
you cant go wrong with asdf :>

[13:49:00.0000] <zcorpan>
Hixie: the behavior in browsers without the feature is also worth considering: is it more important to get a line break than to not mess up the direction, or the other way around

[13:49:01.0000] <zcorpan>
if the line break is more important, then <br foobar> is better; otherwise a new element is probably better

[13:58:00.0000] <Philip`>
zcorpan: Would a named character reference be harder to remember than <br foobar>?

[13:59:00.0000] <zcorpan>
Philip`: probably not, but seems worse than an element in browsers without the feature

[14:03:00.0000] <Hixie>
it's better to not break than to break with the direction wrong

[14:03:01.0000] <Hixie>
the direction being wrong can actually reverse the meaning in some edge cases

[14:04:00.0000] <zcorpan>
thus: invent a new element

[14:06:00.0000] <jcranmer>
I shall call it... ununbium

[14:07:00.0000] <zcorpan>
does <ubi><br></ubi> have the desired effect in browsers that support <ubi>?

[14:08:00.0000] <zcorpan>
or bdi or what it's called

[14:10:00.0000] <zcorpan>
/me wonders if it's possible to get the desired effect of bdi with :before and :after in legacy browsers

[14:15:00.0000] <zcorpan>
hsivonen: you should get a favicon :)

[14:26:00.0000] <zcorpan>
hsivonen: s/a JavaScript/as JavaScript/

[14:28:00.0000] <Dashiva>
I didn't know people still capitalized the s

[14:29:00.0000] <gsnedders>
/me just calls it ECMAScript unless he's actually referring to the dialect supported by Mozilla, pretty much

[14:29:01.0000] <gsnedders>
Which, of course, confuses people. :P

[14:35:00.0000] <TabAtkins_>
I just call it js.  That works well enough.

[14:35:01.0000] <Dashiva>
I write javascript, but the spellchecker keeps complaining

[14:38:00.0000] <Hixie>
zcorpan: a new element or a character reference, yeah

[14:39:00.0000] <Hixie>
&br;

[14:39:01.0000] <Hixie>
or &ls;

[14:39:02.0000] <Hixie>
which, as some people sometimes say, is probably how it should have been defined in the first place

[14:39:03.0000] <TabAtkins_>
What precisely is the problem caused by <br> in bidi situations?

[14:39:04.0000] <Hixie>
the text on the next line ends up backwards

[14:40:00.0000] <TabAtkins_>
Does <br> have some weird directionality or something?

[14:40:01.0000] <Hixie>
it is treated as a paragraph break

[14:40:02.0000] <Hixie>
liek <p>

[14:41:00.0000] <TabAtkins_>
Ah, and that restarts the algorithm.

[14:41:01.0000] <TabAtkins_>
We discussed having an attribute on <br> that would make it just act like a neutral character for the purposes of the bidi algorithm, but didn't end up recommending anything.

[14:42:00.0000] <Hixie>
so if you have "english1 english2 HEBREW3 <br> HEBREW4 english5 english6" you'll have "english1 english2 3WERBEH" "4WERBEH english5 english6" or something

[14:42:01.0000] <Hixie>
no wait

[14:42:02.0000] <Hixie>
i have it wrong

[14:42:03.0000] <Hixie>
but whatever

[14:42:04.0000] <Hixie>
it's complicated

[14:42:05.0000] <Hixie>
my head hurts when i try to page in the bidi algorithm

[14:42:06.0000] <TabAtkins_>
Yeah, I don't pretend to understand the bidi algorithm, but at least I can grasp what some of the inputs to the algo are.

[14:45:00.0000] <Hixie>
there was a brief period of time a few years ago where i understood it completely

[14:45:01.0000] <Hixie>
and could write multilevel complicated test suites for it

[14:45:02.0000] <Hixie>
test cases, rather

[15:12:00.0000] <zcorpan>
hsivonen: here's one you could use if you want: http://simon.html5.org/temp/hsivonen/favicon.png

[15:13:00.0000] <zcorpan>
/me is not very creative with icons

[15:15:00.0000] <zcorpan>
maybe that looks like it refers to Hun Stuff

[15:19:00.0000] <Rik`>
fun, HS in French means Hors Sujet or Hors Service which means out of order or off topic

[15:20:00.0000] <Hixie>
i've never seen that abbreviation in practice

[15:20:01.0000] <Hixie>
but my time in french-speaking land is limited these days

[15:21:00.0000] <gsnedders>
And I guess as a kid you don't have much reason to see it…

[15:23:00.0000] <david_carlisle>
hixie: if you mint a new entity name, I'd have to shoot you

[15:23:01.0000] <Rik`>
Hixie: all school teachers use this as comments on students copies

[15:24:00.0000] <Hixie>
david_carlisle: lol

[15:24:01.0000] <Hixie>
Rik`: interesting

[15:24:02.0000] <Hixie>
david_carlisle: i'd have _you_ mint it! :-)

[15:25:00.0000] <Rik`>
and saying "je suis complètement HS" is pretty common too

[15:25:01.0000] <zcorpan>
Hixie: then maybe you risk him comitting suicide

[15:25:02.0000] <david_carlisle>
hixie: seriously, i see that you;re just batting ideas around but if it does look like that's what you want to do, could you keep me in the loop

[15:26:00.0000] <Hixie>
david_carlisle: absolutely, i wouldn't do anything to the entities without the mathml wg, don't worry

[15:26:01.0000] <david_carlisle>
as adding another one on th exml side would probably be better than getting out of sync

[15:26:02.0000] <Hixie>
david_carlisle: to start with, actually adding one would be a huge pain for me if it wasn't in unicode.xml :-)

[15:26:03.0000] <Hixie>
david_carlisle: the html5 spec's entity stuff is literally autogenerated from unicode.xml each time, i don't have anything in the spec for it

[15:28:00.0000] <david_carlisle>
have you seen https://bugzilla.mozilla.org/show_bug.cgi?id=603716

[15:28:01.0000] <david_carlisle>
the lawyers will probably say we can't use entities at all....

[15:28:02.0000] <david_carlisle>
and I can get my life back

[15:30:00.0000] <zcorpan>
lol @ http://mcc.id.au/2010/novel.html

[15:30:01.0000] <zcorpan>
abarth pwns Hixie

[15:31:00.0000] <Hixie>
david_carlisle: i saw that yeah :-)

[15:32:00.0000] <Dashiva>
I would buy it

[15:34:00.0000] <jamesr_>
i dunno how much sense the story makes given both parties are employed by Google

[15:34:01.0000] <gsnedder1>
Oh come on, who cares. abarth kicks ass.

[15:37:00.0000] <Dashiva>
It should say "the Google", though

[15:37:01.0000] <Dashiva>
Sounds more ominous


2010-11-12
[16:13:00.0000] <heycam>
jamesr_, you can consider abarth as "internal affairs" then :)

[16:13:01.0000] <heycam>
where internal affairs isn't aware of Management's nefarious plot

[16:14:00.0000] <Hixie>
aw man

[16:14:01.0000] <Hixie>
how did i end up the bad guy here!

[16:14:02.0000] <Hixie>
i was just following orders!

[16:15:00.0000] <heycam>
/me thinks perhaps we shouldn't talk of this lest tom's hardware write a scathing expose

[16:45:00.0000] <gsnedders>
http://dev.ckeditor.com/ticket/6666 — yay!

[23:55:00.0000] <hsivonen>
hober, AryehGregor, zcorpan: Script execution post fixed. thanks

[23:55:01.0000] <hsivonen>
zcorpan: missing favicon acknowledged. thanks. (not fixed yet)

[01:51:00.0000] <zcorpan>
so for <img src=404>, in ie .complete is false while in gecko/webkit/opera it's true

[01:51:01.0000] <zcorpan>
afaict the spec sides with ie for that case

[01:52:00.0000] <zcorpan>
do we want to change the spec?

[01:53:00.0000] <annevk>
prolly

[01:56:00.0000] <zcorpan>
it makes .complete less useful though

[01:57:00.0000] <Ms2ger>
Even less useful?

[01:57:01.0000] <zcorpan>
yes

[01:58:00.0000] <zcorpan>
i was using it in my media testsuite and expected it to be false for 404, but now we had to add a workaround :)

[01:59:00.0000] <annevk>
should it be false for all error status codes?

[02:00:00.0000] <annevk>
what about a 301 without a Location header?

[02:00:01.0000] <zcorpan>
"no data could be obtained" http://www.whatwg.org/specs/web-apps/current-work/complete/embedded-content-1.html#img-error

[02:01:00.0000] <annevk>
oh, so in that case it ought to just work

[02:01:01.0000] <annevk>
if the 404 is an image

[02:01:02.0000] <zcorpan>
actually the status code is not so relevant for <img>, the relevant part is if the body is a valid image

[02:01:03.0000] <zcorpan>
yeah

[02:01:04.0000] <annevk>
I was already wondering when Hixie would have changed his mind on this

[02:02:00.0000] <annevk>
because "we" decided on this behavior long ago

[02:02:01.0000] <zcorpan>
so an HTML 404 is the same as a "broken" image

[02:03:00.0000] <annevk>
it's the same as a HTML 200

[02:41:00.0000] <annevk>
there's a typo in the novel

[02:42:00.0000] <annevk>
"He cackled to himself as his committed" s/his/he/ right?

[02:42:01.0000] <annevk>
or is using "his" some kind of old English I am not familiar with?

[02:45:00.0000] <jgraham>
No, it's a typo

[02:46:00.0000] <jgraham>
Did anyone ever mirror the webapps repo in some sensible format?

[02:46:01.0000] <jgraham>
i.e. git/mercurial

[02:47:00.0000] <jgraham>
(and keep it up to date)?

[02:47:01.0000] <MikeSmith>
jgraham: not that I know of

[02:47:02.0000] <MikeSmith>
if you think it's useful I could set it up at github

[02:49:00.0000] <jgraham>
MikeSmith: I would find it useful right about now :)

[03:24:00.0000] <MikeSmith>
jgraham: importing now

[03:24:01.0000] <MikeSmith>
it's taking a while

[03:25:00.0000] <jgraham>
MikeSmith: I actually started doing it myself as well. I guess Hixie loves us…

[03:25:01.0000] <jgraham>
(not to github though, which indeed seems more useful)

[03:31:00.0000] <MikeSmith>
jgraham: wiil be at https://github.com/sideshowbarker/html5-spec when it's done

[03:31:01.0000] <MikeSmith>
git⊙gc:sideshowbarker/html5-spec.git

[03:31:02.0000] <gsnedders>
A git-svn clone for the spec?

[03:31:03.0000] <gsnedders>
/me has one of those locally :P

[03:32:00.0000] <jgraham>
gsnedders: If you had said that like an hour ago (and uploaded it somewhere sensible) you coudl have saved everyone lots of heartache

[03:33:00.0000] <gsnedders>
/me was writing a five page essay worth 2% of the course…

[03:36:00.0000] <MikeSmith>
use really small paper

[03:42:00.0000] <jgraham>
gsnedders: It is likely worth 0% of your final degree. The point of the excerise is to *learn*

[03:42:01.0000] <jgraham>
Not to accumulate points

[03:43:00.0000] <gsnedders>
jgraham: I've learnt I've totally forgotten everything I knew about writing essays from school :)

[03:43:01.0000] <jgraham>
(although the points are useful)

[03:45:00.0000] <MikeSmith>
the point it to learn how to parrot your instructors' words in such a way that reinforces their egos so they give you higher marks 

[03:46:00.0000] <MikeSmith>
make them see that you understand well how clever they are

[03:47:00.0000] <Philip`>
Be sure to get a section on pathetic fallacy in there too

[03:47:01.0000] <Philip`>
That's the main thing I remember from writing essays

[06:12:00.0000] <jgraham>
Is it me or does the spec allow literal U+0000 through in the foster parenting case?

[06:15:00.0000] <jgraham>
/me files a bug

[06:21:00.0000] <gsnedders>
I thought U+0000 was handled within the tokenizer so where it goes within the tree constructor is surely irrelevent?

[06:21:01.0000] <gsnedders>
/me hasn't read the spec closely since it was changed for null-handling

[06:25:00.0000] <jgraham>
No, now the handling is split over the treebuilder and the tokenizer in a slightly ugly way

[06:30:00.0000] <annevk>
parser changes seem to confuse everyone and satisfy nobody :/

[06:31:00.0000] <annevk>
oh, so Apple will keep Java support on Lion?

[06:31:01.0000] <hsivonen>
annevk: that's because Hixie didn't spec *exactly* the conceptual model I described :-)

[06:31:02.0000] <hsivonen>
annevk: URL about Java?

[06:33:00.0000] <hsivonen>
in other parser news, we got another <foo </bar> bug

[06:33:01.0000] <hsivonen>
(sent over to evang, so nothing special about it. just noting that those bugs do show up)

[06:35:00.0000] <annevk>
hsivonen, http://www.apple.com/pr/library/2010/11/12openjdk.html

[06:35:01.0000] <Philip`>
Is there any way the spec could distinguish between cases where content relies on it closing the foo, and where content relies on it not closing the foo?

[06:35:02.0000] <Philip`>
(like the exact tokeniser state in which the '<' is encountered)

[06:36:00.0000] <hsivonen>
annevk: cool. Apple contributing their previously proprietary code to OpenJDK is probably the best outcome for all stake holders

[06:37:00.0000] <hsivonen>
Philip`: I think it would be even more confusing to vary < by state

[06:38:00.0000] <Philip`>
hsivonen: Maybe increasing compatibility is more important than decreasing confusion

[06:38:01.0000] <Philip`>
(I don't know if it's really possible to increase compatibility by complexifying the logic, though)

[06:39:00.0000] <hsivonen>
It would be awesome if we could just make things more complex to make them more compatible :-)

[06:40:00.0000] <hsivonen>
(that is, making them more complex in whatever random ways :-)

[06:42:00.0000] <Philip`>
Hmm, random complexity seems unlikely to work, unless we could develop some automatic measure of compatibility and then use a genetic algorithm to evolve the parser algorithm to optimise compatibility

[06:43:00.0000] <zcorpan>
we could change the parser every week based on the output of the compat measurement

[06:44:00.0000] <jgraham>
The problem would be measuring compatibility

[06:45:00.0000] <hsivonen>
I wonder how common it is that sites respond to beta cycle evang by saying that they'll fix the site once the browser is final (as in no longer beta)

[06:46:00.0000] <hsivonen>
as opposed to fixing the site right away

[06:46:01.0000] <Philip`>
Maybe they don't want to make changes they can't test, and don't want to install beta browsers for testing since it may disturb their current browser installations

[06:47:00.0000] <Philip`>
Or maybe they think that if they hold out long enough then you'll revert the browser changes and they won't have to do anything

[06:49:00.0000] <jgraham>
I wonder what will happen to foreignContent mode (again)

[06:49:01.0000] <hsivonen>
jgraham: which bug?

[06:49:02.0000] <jgraham>
hsivonen: Dunno if there was a bug

[06:50:00.0000] <Philip`>
Re http://www.apple.com/pr/library/2010/11/12openjdk.html : "Apple [...] has recently introduced its magical iPad" - they actually call it magical?

[06:50:01.0000] <jgraham>
I should have filed one on the changes to end tag handling in the last updates, but I don't recall if I did

[06:53:00.0000] <hsivonen>
jgraham: would that one get fixed if Hixie adopted the model I've been proposing?

[06:53:01.0000] <jgraham>
Yeah, I think so

[06:54:00.0000] <hsivonen>
Philip`: you should watch one of those Stevenote remixes with only the adjectives

[06:54:01.0000] <hsivonen>
jgraham: let's just do it then

[06:54:02.0000] <jgraham>
I was vaugely contemplating making an experimental spec change to the model you proposed

[06:55:00.0000] <jgraham>
Because it seems like the big barrier at this point is that it is a big change and Hixie only has the bandwidth for bugfixes

[07:14:00.0000] <hsivonen>
/me is a bit surprised that https://bugzilla.mozilla.org/show_bug.cgi?id=587452 hasn't been fixed at Google's end yet

[07:15:00.0000] <annevk>
smaug____, I made a small update to the XHR tests

[07:15:01.0000] <annevk>
smaug____, they now include a reference to testharnessreport.js

[07:15:02.0000] <annevk>
smaug____, that also made http://tc.labs.opera.com/apis/XMLHttpRequest/testrunner.htm possible

[07:15:03.0000] <annevk>
smaug____, although the way that works is not entirely how I'd like it

[07:16:00.0000] <smaug____>
annevk: ok, will look at that soon

[08:01:00.0000] <annevk>
hsivonen, so this OpenJDK is not so open that Google can use it for Android in a slightly different way?

[08:17:00.0000] <tabatkins>
hsivonen: Do you know if anyone's bugged us about it yet?

[08:37:00.0000] <annevk>
Ms2ger, html5.org is updated now

[08:37:01.0000] <Ms2ger>
Thanks

[08:37:02.0000] <annevk>
Ms2ger, kind of strange that bitbucket.org does not propagate things directly

[08:37:03.0000] <Ms2ger>
Yeah

[08:39:00.0000] <annevk>
so the parsing spec should prolly say when <script> is executed and when it isn't

[08:40:00.0000] <Ms2ger>
I'm waiting for Hixie to give me a flag

[08:40:01.0000] <Ms2ger>
Currently, it's conditional on being a fragment parser

[11:10:00.0000] <AryehGregor>
hsivonen, "cross-broser-compatible" http://hsivonen.iki.fi/script-execution/

[11:11:00.0000] <Ms2ger>
hsivonen, did all this land for b7?

[12:13:00.0000] <cying>
CSS nerdy question:

[12:13:01.0000] <cying>
how do i style the first child of a container's first line in all caps?

[12:13:02.0000] <tabatkins>
Lines don't have children.

[12:14:00.0000] <tabatkins>
(At least, not in the element tree, which is where Selectors operate.)

[12:14:01.0000] <tabatkins>
Or... wait.  I think I misparsed your sentence.

[12:14:02.0000] <tabatkins>
#container > :first-child::first-line should work

[12:15:00.0000] <tabatkins>
That'll select the ((first child of a container)'s first line), but not the (first child of (a container's first line)).

[12:16:00.0000] <tabatkins>
And then, of course, text-transform: uppercase;.

[12:17:00.0000] <tabatkins>
cying: ^^^

[12:17:01.0000] <tabatkins>
cying: Also, your request is a heisen-sentence.  It can be read either way, and swapping the order of the "first *" clauses is equally ambiguous.

[12:18:00.0000] <cying>
hehe

[12:18:01.0000] <cying>
tabatkins: i mean the former not the latter

[12:18:02.0000] <cying>
((first child of a container)'s first line)

[12:18:03.0000] <tabatkins>
K, then my selector will work.

[12:18:04.0000] <cying>
sadly not working in mobile safari

[12:18:05.0000] <tabatkins>
That'll be a bug, then.

[12:20:00.0000] <tabatkins>
What's the failure?  It doesn't work at all?  It selects more than you think?  Less than you think?

[12:33:00.0000] <cying>
tabatkins: it doesn't work at all

[12:33:01.0000] <cying>
tabatkins: it selects nothing

[12:34:00.0000] <annevk>
is the child a block?

[12:36:00.0000] <cpojer>
hey guys

[12:36:01.0000] <cpojer>
I have a question about window.onpopstate

[12:37:00.0000] <cpojer>
I am not clear about what the expected behavior is

[12:37:01.0000] <cpojer>
in chrome/firefox4 popstates fires for the initial page load

[12:37:02.0000] <cpojer>
in safari it doesn't

[12:37:03.0000] <cpojer>
I read this: http://lists.w3.org/Archives/Public/public-html-bugzilla/2010Nov/0078.html

[12:38:00.0000] <cpojer>
but I am not sure I understand it :D

[12:38:01.0000] <cpojer>
if anyone cares to enlighten me that would be great

[12:38:02.0000] <Ms2ger>
cpojer, so

[12:40:00.0000] <cpojer>
so.

[12:40:01.0000] <Ms2ger>
Say, you click a link

[12:40:02.0000] <Ms2ger>
http://www.whatwg.org/specs/web-apps/current-work/multipage/text-level-semantics.html#the-a-element

[12:40:03.0000] <Ms2ger>
Finally, the user agent must follow the hyperlink 

[12:40:04.0000] <Ms2ger>
http://www.whatwg.org/specs/web-apps/current-work/multipage/links.html#following-hyperlinks

[12:41:00.0000] <cpojer>
wait what?

[12:41:01.0000] <Ms2ger>
... must navigate a browsing context to the resulting absolute URL.

[12:41:02.0000] <Ms2ger>
http://www.whatwg.org/specs/web-apps/current-work/multipage/history.html#navigate

[12:42:00.0000] <cpojer>
wait sorry, I don't really want to read through all the specs if thats ok

[12:42:01.0000] <cpojer>
just want to know what the expected behavior for popstate is

[12:42:02.0000] <cpojer>
should it fire on the initial page load or not

[12:42:03.0000] <cpojer>
that is, if I navigate to example.com from an empty tab

[12:42:04.0000] <cpojer>
should it fire popstate or not?

[12:42:05.0000] <cpojer>
chrome/ff4 do, safari does not

[12:42:06.0000] <cpojer>
any maybe because its friday night I am not fully able to understand that response in the bug tracker

[12:48:00.0000] <Ms2ger>
Yes, should fire

[12:48:01.0000] <cpojer>
ok thanks

[13:52:00.0000] <zcorpan>
http://www.d.umn.edu/~lcarlson/html5bugchart/20101002/ld/chart1.html is indeed a pretty long description

[14:08:00.0000] <Hixie>
zcorpan: i wonder why she didn't just put that on the main page, it's more useful than the pie charts!

[14:08:01.0000] <tabatkins>
Dammit, Hixie, I was just about to say that.

[14:09:00.0000] <tabatkins>
The information about trends and such is not obvious from the infographic.  It's much easier to understand from the description.

[14:14:00.0000] <annevk>
I can't follow those tables, why is there no summary?

[14:17:00.0000] <Philip`>
The first table seems to have a typo - INVALID is 6% for 1, LATER is 2% for 5

[14:17:01.0000] <zcorpan>
does the typo in the table propagate to the graph?

[14:18:00.0000] <Philip`>
No

[14:18:01.0000] <karlcow>
http://okfn.org/projects/annotator/ - Open-Source Annotation Toolkit for Inline, Online Web Annotation

[14:26:00.0000] <cying>
annevk: it sure is

[14:26:01.0000] <cying>
annevk: (re: :first-child::first-line)

[14:26:02.0000] <tabatkins>
data:text/html,<style>#container > :first-child::first-line { color: red; }</style><div id=container>foo foo<p>foo bar<br>bar baz</p>

[14:27:00.0000] <tabatkins>
cying: Given ^^^, which works on desktop, it's clear that if Mobile Safari isn't doing it, it has a bug.

[14:27:01.0000] <cying>
ahhhh

[14:27:02.0000] <cying>
tabatkins: thanks


2010-11-13
[18:39:00.0000] <youdontmeanmuch>
 hola, i'm working on a desktop application using web technologies using something like titanium desktop / adobe air

[18:40:00.0000] <youdontmeanmuch>
so i know that i have the most recent browsers (mostly webkit)

[18:40:01.0000] <youdontmeanmuch>
i'm structuring my application right now with markup

[18:40:02.0000] <youdontmeanmuch>
but right now i'm deciding what tags to use. with html5 comes with some nice tags focused for the web

[18:40:03.0000] <youdontmeanmuch>
such as <aside>, <nav> etc.

[18:40:04.0000] <youdontmeanmuch>
but i was wondering if it would be advisable to use my own tags

[18:40:05.0000] <youdontmeanmuch>
such as <region><component type="example-1"></component>....</region>, etc

[18:40:06.0000] <youdontmeanmuch>
does anybody know some cons or reasons i should go with using regular markup (div's with classes and id's)?

[19:41:00.0000] <hober>
why are some html5lib tokenizer tests double-escaped?

[02:09:00.0000] <zcorpan>
youdontmeanmuch: http://annevankesteren.nl/2010/09/generic-elements

[03:30:00.0000] <hsivonen>
AryehGregor: typo fixed. thanks

[03:32:00.0000] <hsivonen>
annevk: OpenJDK is GPLv2 with Classpath Exception. Android userland is Apache License 2.0, so I guess Google could use OpenJDK but then Android vendors would be required to publish their modifications to OpenJDK

[03:32:01.0000] <hsivonen>
annevk: currently, Android vendors only need to publish their kernel patches

[03:33:00.0000] <hsivonen>
Ms2ger: HTML5-compliant script execution landed for beta 7. The .async defaults to true thing landed immediately after beta 7 had been shipped.

[03:34:00.0000] <hsivonen>
tabatkins: About Google search thumbnails in Firefox 4, I reported the bug to Google via a Googler in August

[04:53:00.0000] <Dashiva>
What's the context here? http://twitter.com/fielding/status/3220658943172609

[05:01:00.0000] <hsivonen>
Dashiva: Oracle is using GPLv2 in OpenJDK and they are suing Google over Android's Java-ish stack that an independent Apache-licensed impl.

[05:01:01.0000] <hsivonen>
Dashiva: GPLv3 has new Apache-inspired patent language

[05:01:02.0000] <hsivonen>
s/that/that is/

[05:01:03.0000] <Dashiva>
Aha. Thanks

[05:05:00.0000] <gsnedders>
hsivonen: I thought the GPLv3 patent language only covered derivitives, so it wouldn't help in this case.

[05:06:00.0000] <hsivonen>
gsnedders: I'm not claiming anything about any facts. I'm just guessing what the context of the tweet is.

[05:06:01.0000] <hsivonen>
gsnedders: well, I am claiming that GPLv3's patent language is Apache-inspired, but I'm not claiming anything about what it says

[05:29:00.0000] <Ms2ger>
/me sighs

[05:47:00.0000] <Ms2ger>
/me hopes Ryosuke is happy now

[05:59:00.0000] <hsivonen>
Ms2ger: huh? do you change the spec explicitly to prevent script execution from createContextualFragment?

[05:59:01.0000] <hsivonen>
s/do/did/

[06:00:00.0000] <Ms2ger>
Ugh, I guess I missed "un"

[06:06:00.0000] <hsivonen>
Hixie: using < and > as access keys seems like a combination of an a11y and i18n problem in the making

[07:09:00.0000] <hober>
I wish accesskey="" took Emacs' `kbd' syntax. :)

[11:57:00.0000] <schalkn>
Hi all

[11:57:01.0000] <schalkn>
Is there any decent documentation on the JavaScript Audio API?

[11:59:00.0000] <Ms2ger>
Which API?

[12:01:00.0000] <schalkn>
I know there are methods to stop, play/pause etc. audio that runs via the audio tag. I was wondering if there is more to it than that, besides Mozilla's stuff, like an actual API to work with audio in the browser

[12:03:00.0000] <schalkn>
I think this sorta might be it: http://www.w3.org/TR/html5/video.html#htmlmediaelement

[12:07:00.0000] <schalkn>
Well, not entirely

[12:10:00.0000] <Ms2ger>
And #htmlaudioelement

[12:15:00.0000] <Hixie>
hsivonen: the great thing about accesskey="" is that it should actually support this pretty well now

[12:43:00.0000] <schalkn>
Does anyone know of a central searchable location of browser release notes?

[12:43:01.0000] <schalkn>
Say for example, you want to know which is the earliest version of a browser to support a specific tag. You could head over to the site and search for, for example audio, firefox

[12:45:00.0000] <_o>
http://dev.w3.org/html5/spec/Overview.html#audio http://www.whatwg.org/specs/web-apps/current-work/#audio https://wiki.mozilla.org/Audio_Data_API http://audioscene.org/

[12:51:00.0000] <schalkn>
thanks _o

[12:54:00.0000] <Ms2ger>
schalkn, something like http://en.wikipedia.org/wiki/Comparison_of_layout_engines_%28HTML5%29 ?

[13:48:00.0000] <schalkn>
Thanks Ms2ger, thanks looks like a really awesome resource


2010-11-14
[18:34:00.0000] <llrcombs>
hey guys

[18:35:00.0000] <llrcombs>
we ##javascript -ers have decided that this needs a spec:

[18:35:01.0000] <llrcombs>
adding data to a <video> live

[18:37:00.0000] <llrcombs>
for example: downloading a video with WebSocket, live decoding its DRM in JS, and continuously appending the output to a <video>

[18:40:00.0000] <micheil>
llrcombs: well, theoretically you can pipe videos over websockets.

[18:40:01.0000] <micheil>
practically you can't though, iirc.

[18:40:02.0000] <llrcombs>
how's it done in theory?

[18:41:00.0000] <micheil>
well, the idea of being able to use websockets to send / recv video and audio does work

[18:41:01.0000] <micheil>
but in current implementations it doesn't.

[18:42:00.0000] <llrcombs>
I mean, how does one hook up a <video> to a WebSocket in theory? Even if it doesn't work now, I can bug the #webkit guys

[18:50:00.0000] <Hixie>
the theory is not yet at a point where it can be done

[18:51:00.0000] <Hixie>
as in, it's still just ideas

[18:51:01.0000] <Hixie>
but there is work in that area

[18:51:02.0000] <Hixie>
ongoing

[18:51:03.0000] <micheil>
thanks for saving me on that one hixie 

[18:51:04.0000] <llrcombs>
ahh, as in, "we have an idea but it's not spec'd out yet", not "we have a spec but it's not implemented yet"

[18:57:00.0000] <micheil>
well, the websocket spec does support sending video over it.

[18:57:01.0000] <micheil>
it's the javascript api's that don't support binary data yet

[18:58:00.0000] <micheil>
like, you could go server-to-server and send binary data, as long as both understand binary data

[19:06:00.0000] <llrcombs>
oh, and also

[19:06:01.0000] <llrcombs>
has anything recent created an ability to get the URL that a 300-range status'd page is redirecting to?

[19:08:00.0000] <llrcombs>
because right now I have to do that server-side with a PHP script calling curl

[19:12:00.0000] <micheil>
Hixie: do you know much about how CORS will impact on websockets?

[19:12:01.0000] <micheil>
Hixie: I've just had a question about how WebSockets are XSS safe..

[19:49:00.0000] <Hixie>
micheil: dunno, i haven't followed the recent changes to web sockets

[19:50:00.0000] <micheil>
okay

[21:01:00.0000] <llrcombs>
question: should an element with position: fixed; height: 100%; width: 100%; left: 0px; top: 0px; z-index: 10000000; take up the entire window?

[21:02:00.0000] <llrcombs>
because right now, other elements around it are showing up above it

[21:03:00.0000] <llrcombs>
because its parent node has z-index: 100;

[23:32:00.0000] <aho>
is that same origin stuff defined for "file://"?

[23:32:01.0000] <aho>
e.g. right now chrome and firefox don't allow read access to images from file (everything came from there), but opera is perfectly fine with it

[23:33:00.0000] <aho>
there isn't a port for example

[23:42:00.0000] <aho>
read the specs, but i'm still not sure :)

[00:00:00.0000] <abarth>
aho: different browsers use different security policies for file

[00:01:00.0000] <abarth>
aho: the spec lets them do that

[00:01:01.0000] <aho>
so... it's unspecified?

[00:14:00.0000] <abarth>
the spec allows the browsers to do what they do

[00:14:01.0000] <abarth>
i suspect they'll eventually converge on a security policy for file URLs

[00:14:02.0000] <abarth>
it just might be a while :)

[00:16:00.0000] <aho>
as far as i'm concerned, i'd say opera's behavior makes more sense

[00:17:00.0000] <aho>
a script from the local filesystem should be allowed to read the pixel data from some image which also came from the local filesystem

[00:17:01.0000] <aho>
<:

[00:18:00.0000] <abarth>
it's unclear why that should be true

[00:18:01.0000] <abarth>
consider a network file system

[00:18:02.0000] <abarth>
like AFS

[00:18:03.0000] <abarth>
why should an HTML file that I receive as a mail attachment

[00:19:00.0000] <abarth>
be able to use my Kerberos ticket to access all the AFS drives in the world?

[00:20:00.0000] <aho>
well, in this specific example... everything was in the same directory

[00:20:01.0000] <aho>
the origin is totally the same - no matter how you look at it

[00:20:02.0000] <abarth>
that's getting closer to the mozilla security model

[00:20:03.0000] <abarth>
which is based on the directory tree

[00:20:04.0000] <abarth>
but ends up being very complicated

[00:20:05.0000] <abarth>
because the security original of a document depends on what other document caused it to load

[00:20:06.0000] <abarth>
and how

[00:21:00.0000] <abarth>
AFAIK, no one understands the firefox policy, not even the folks who invented it

[00:21:01.0000] <aho>
heh

[02:41:00.0000] <mikekelly>
morning internet friends

[02:45:00.0000] <mikekelly>
Wondering if someone could clarify for me what the current state of HTTP Digest is from a browser perspective

[02:45:01.0000] <mikekelly>
is there a way to make it interoperable across the most common browsers?

[02:46:00.0000] <virtuelv>
mikekelly: http://en.wikipedia.org/wiki/Digest_access_authentication#Browser_implementation

[02:49:00.0000] <virtuelv>
problem with any http auth is that browsers act like the Hotel California 

[02:49:01.0000] <virtuelv>
you can never leave

[02:49:02.0000] <mikekelly>
? :)

[02:50:00.0000] <mikekelly>
oh right, yeah :)

[02:50:01.0000] <mikekelly>
any effort on browser side to make this workable?

[02:51:00.0000] <mikekelly>
i.e. the 'look and feel' problem and the logout problem

[02:59:00.0000] <jgraham>
virtuelv: It's more like the opposite of Hotel California; you can leave any time you like but you can never check out

[03:11:00.0000] <schalkn>
Question: Why is autoplay still part of the specification for audio and video?

[03:12:00.0000] <Lachy>
schalkn, because it has some valid use cases.

[03:23:00.0000] <schalkn>
ok, are you aware of identified use cases for using autoplay? Is it more related to video than audio?

[03:29:00.0000] <virtuelv>
schalkn: there are valid usecases for autoplay of both

[03:31:00.0000] <virtuelv>
A useragent should rather prevent web sites and applications from playing audio

[03:31:01.0000] <virtuelv>
or allow override of the autoplay attribute

[03:36:00.0000] <schalkn>
virtuelv - Yeah, I read that in the spec. I just curious to know of identified use cases.

[03:37:00.0000] <schalkn>
I writing a bunch of tests and test pages regarding the various elements of HTML5 and would like to include valid use cases of autoplay

[03:37:01.0000] <schalkn>
So any pointers will be appreciated

[03:52:00.0000] <virtuelv>
schalkn: any web page that in the past used embeds to autoplay audio files

[03:52:01.0000] <virtuelv>
not that I'd say they are particularily good websites, but I'd identify (the original) hampsterdance as being valid

[04:01:00.0000] <jgraham>
schalkn: When you say "tests" what do you mean? If you are planning on making detailed conformance tests it would be good to contribute them back to the WG

[04:25:00.0000] <schalkn>
jgraham - It is definitely conformance tests, and I will definitely contribute back

[04:27:00.0000] <schalkn>
virtuelv - ok, so autoplay is more there for backwards 'compatibility'

[04:43:00.0000] <mikekelly>
fwiw I wrote some thoughts about cookies vs digest http://restafari.blogspot.com/2010/11/cookies-are-gross.html

[04:52:00.0000] <virtuelv>
schalkn: I didn't say that

[04:52:01.0000] <virtuelv>
I said there is what people consider valid usecases

[04:52:02.0000] <Dashiva>
I consider youtube a valid usecase

[05:00:00.0000] <schalkn>
Dashiva -  In terms of autoplaying video? I personally do not like if a video or audio site autoplays anything. But I guess that if this is user preference driven, then it will be real easy to implement. If a user specified autoplay in their preferences, just add the attribute to the media.

[05:04:00.0000] <Philip`>
There are e.g. news sites in which some pages have articles with videos at the top, which shouldn't autoplay because normally you'll just want to read the text instead, and some pages which only contain video, which should autoplay because you followed the link to that page because you wanted to watch the video

[05:05:00.0000] <Philip`>
and only the site knows the distinction between those two groups of pages

[05:05:01.0000] <Philip`>
so it can't just be a user preference

[05:11:00.0000] <schalkn>
Philip - Ok, I agree with that. I guess it boils down to resposible use.

[05:11:01.0000] <Dashiva>
That's what the browser pref is for, lets the user override irresponsible use

[05:19:00.0000] <schalkn>
Dashiva - Do you know of a user agant that has implemented this preference currently or, is this more related to assitive technologies such as screen readers?

[05:20:00.0000] <Dashiva>
Presumably it's not a high priority feature until video and audio tags start becoming mainstream

[05:27:00.0000] <schalkn>
Jip, I reckon at the moment the bigger issue is codecs and getting overyone on board with one open audio format

[05:28:00.0000] <schalkn>
everyone

[05:39:00.0000] <schalkn>
Am I reading this right

[05:40:00.0000] <schalkn>
on getting it must return the last value it was set to, or 1.0 if it hasn't yet been set - Context = playbackRate of audio

[05:41:00.0000] <schalkn>
So if an audio is playing and the result of audio.playbackRate = 1 it was not set. Therefore the browser did not follow the following:

[05:41:01.0000] <schalkn>
The "play" function in a user agent's interface must set the playbackRate attribute to the value of the defaultPlaybackRate attribute before invoking the play() method's steps

[05:42:00.0000] <schalkn>
Does this apply only when using the browsers controls to play and pause the audio or also if the author calls the play method from javascript?

[05:42:01.0000] <schalkn>
i.e. In the second case, it is the author's responsibility to set the playbackRate before calling play

[06:04:00.0000] <mikekelly>
jgraham: does digest behave like that because it is spec'd wrong?


2010-11-15
[18:05:00.0000] <webr3>
do any browsers support secure websockets with client side certificates?

[01:39:00.0000] <hsivonen>
Is the spec supposed to cover stopping the parser on assigning to location.href during the parse?

[01:40:00.0000] <zcorpan>
hsivonen: http://html5.org/tools/web-apps-tracker?from=5642&to=5643 ?

[01:41:00.0000] <hsivonen>
zcorpan: yeah. thanks. that's hard to locate by looking at the full spec :-(

[01:43:00.0000] <hsivonen>
the spec is annoyingly hard to follow here :-(

[01:44:00.0000] <hsivonen>
I'm unable to tell from the spec if the load event for the aborted document should fire and if it should fire synchronously :-(

[01:45:00.0000] <jgraham>
This is kinda a dumb thing to say… but wouldn't firing the load event for the aborted document be quite strange

[01:45:01.0000] <jgraham>
? 

[01:45:02.0000] <hsivonen>
jgraham: this is the Web platform. I can't rely on what makes sense.

[01:46:00.0000] <hsivonen>
I was hoping the spec would have the answers. Do I need to test this myself now?

[01:46:01.0000] <jgraham>
I know, I know, on the web "strange" is just a synonym for "probable"

[01:48:00.0000] <zcorpan>
Hixie: ^

[01:58:00.0000] <hsivonen>
so it appears onload doesn't fire, but it's not clear to me from Gecko code why that is

[03:03:00.0000] <jgraham>
hsivonen: Your latest blog entry keeps floating to the top of planet.mozilla.org

[03:40:00.0000] <hsivonen>
jgraham: I edited it today with advice to update RequireJS to 0.15.0

[03:41:00.0000] <jgraham>
hsivonen: It would be more friendly if it was not considered new for every update

[03:42:00.0000] <hsivonen>
jgraham: I don't really know what's happening there

[03:42:01.0000] <hsivonen>
jgraham: that is, previously Venus handled this case OK for my feed

[03:43:00.0000] <hsivonen>
jgraham: but now my feed is different. it no longer contains the full text of the newest post.

[03:43:01.0000] <gsnedders>
hsivonen: Are you updating atom:updated?

[03:43:02.0000] <hsivonen>
jgraham: I have no idea why

[03:43:03.0000] <hsivonen>
gsnedders: I can't remember. the feed is generated by a script that has been running for 5 years without maintenance and it's too scary to touch it before I have time to do a rewrite

[03:44:00.0000] <gsnedders>
hsivonen: If you update atom:updated, you've signified a major update to the entry, FWIW.

[03:45:00.0000] <hsivonen>
gsnedders: that's probably what the script does, because it just looks at the modified date on the file system

[03:45:01.0000] <hsivonen>
sorry everyone. my feed sucks. I really want to rewrite it when I have time.

[03:45:02.0000] <hsivonen>
but I haven't had time

[03:47:00.0000] <hsivonen>
(yes, this also means I'm not dogfooding the V.nu HTML parser there, since the script predates the existence of the parser)

[03:47:01.0000] <hsivonen>
any ideas how to flag minor edits when there's no database--just flat files?

[03:48:00.0000] <hsivonen>
usually this isn't a problem because usually I don't keep editing a post over a period of four days

[03:48:01.0000] <gsnedders>
I did for a while have a prototype system that just stored entries on fs as Atom Entry documents

[03:48:02.0000] <hsivonen>
I store plain HTML files

[03:49:00.0000] <hsivonen>
my system is very retro in many ways

[03:49:01.0000] <hsivonen>
I still don't have Pingback or comment support

[03:50:00.0000] <jgraham>
Hmm, abarth is asleep

[03:50:01.0000] <gsnedders>
Damned night-time!

[03:50:02.0000] <jgraham>
abarth|zZz: Fancy resyncing the webkit tests with html5lib when you wake up? You seem to have some tests from http://www.w3.org/Bugs/Public/show_bug.cgi?id=10314

[03:51:00.0000] <jgraham>
s/from/for/

[03:53:00.0000] <hsivonen>
maybe I should have my site sources in one dir and what apache sees in another and have some kind of automated build process in between

[03:54:00.0000] <hsivonen>
by now I'm too much on the record on certain blogging systems doing things wrong, so now I can't just take one off the shelf

[04:35:00.0000] <annevk>
hsivonen, you can just omit atom:updated and use atom:modified instead

[04:35:01.0000] <annevk>
hsivonen, that would be more accurate

[04:35:02.0000] <annevk>
(I'm recalling this element from several years back when I was still somewhat involved with feeds so a quick check wouldn't hurt.)

[04:37:00.0000] <hsivonen>
annevk: thanks

[04:43:00.0000] <zcorpan>
annevk: re testrunner, could it support subdirectories? could it skip helper files? could it support document.domain tests by reporting results with postMessage? :)

[04:45:00.0000] <jgraham>
zcorpan: I have plans

[04:45:01.0000] <Ms2ger>
/me notes http://ms2ger.freehostia.com/tests/runner/?path=../html-official/

[04:45:02.0000] <jgraham>
Ms2ger: Oh, interesting

[04:46:00.0000] <jgraham>
My plan involves adding a manifest file to each directory

[04:46:01.0000] <Ms2ger>
jgraham, that's what I do :)

[04:47:00.0000] <jgraham>
{tests:{"001.html":{flags:[], type:javascript, requires_top_level_context:false}}, "subdirs":["more_tests"]}

[04:47:01.0000] <jgraham>
and so on

[04:47:02.0000] <jgraham>
with reasonable defaults

[04:47:03.0000] <jgraham>
Oh and number_expected:10

[04:48:00.0000] <jgraham>
For tests that should report > 1 result

[04:48:01.0000] <jgraham>
Also, support for running reftests and manual tests

[04:48:02.0000] <Ms2ger>
Wasn't Tab working on that?

[04:49:00.0000] <jgraham>
reftests just by loading the ref and the test in two iframes positioned on top of each other and allowing the tester to flip between them

[04:49:01.0000] <jgraham>
Assuming browser vendors will implement real reftest support themselves

[04:49:02.0000] <jgraham>
Ms2ger: Yeah, I'm not really sure what he was doing

[04:50:00.0000] <jgraham>
Code that is already written is nice

[04:51:00.0000] <Ms2ger>
Code that is written and available is even nicer

[04:51:01.0000] <annevk>
zcorpan, it's mostly an indication that I rather not have us go ahead with what there is now

[04:51:02.0000] <Ms2ger>
Also, Philip`'s tests are nice

[04:51:03.0000] <annevk>
zcorpan, I'm not really the right person to make it I think, but I thought I could at least try to get a proof of concept

[04:51:04.0000] <annevk>
(also found a crasher in WebKit)

[04:52:00.0000] <Ms2ger>
That always happens to me

[04:52:01.0000] <jgraham>
Yeah, in-browser test harnesses suck for that reason

[04:53:00.0000] <jgraham>
But there is no standard for driving browsers from the outside yet

[04:53:01.0000] <Ms2ger>
Mozilla runs most tests in an iframe, actually

[04:53:02.0000] <annevk>
having browsers crash is a pretty bad sign

[04:53:03.0000] <annevk>
imo

[04:53:04.0000] <annevk>
(for the browser)

[04:53:05.0000] <jgraham>
How do they deal if a test crashes?

[04:54:00.0000] <Ms2ger>
Fix the crash :)

[04:54:01.0000] <Ms2ger>
Or disable the test

[04:54:02.0000] <annevk>
it's like OS crashes, except it takes a little less long to reboot

[04:54:03.0000] <annevk>
zcorpan, btw, feel free to add some thoughts in a reply

[04:54:04.0000] <hsivonen>
jgraham: when I tried to write a test with the HTML WG test harness, I found the test to be much more verbose than a mochitest

[04:54:05.0000] <jgraham>
Well I guess we can try the "you should never crash" approach

[04:55:00.0000] <jgraham>
hsivonen: Can you point me to code?

[04:55:01.0000] <hsivonen>
jgraham: it would be super-nice to be able to do ok(bool, "Message");

[04:55:02.0000] <annevk>
same for you, Ms2ger, especially if you already have a test runner :)

[04:55:03.0000] <Ms2ger>
"Just use mine" :)

[04:55:04.0000] <hsivonen>
jgraham: the basic problem is having to wrap everything in the test functions

[04:56:00.0000] <Ms2ger>
jgraham, that's not in the HTML spec, can't require that browsers don't crash

[04:56:01.0000] <Ms2ger>
That would be out of scope

[04:56:02.0000] <jgraham>
hsivonen: The requirement that drives that is wanting to catch unexpected errors

[04:56:03.0000] <Ms2ger>
window.onerror :)

[04:56:04.0000] <jgraham>
Without assuming window.onerror

[04:56:05.0000] <jgraham>
Don't want to rely on the platform we are testing too much :)

[04:57:00.0000] <annevk>
I do agree that having window.onerror would have been nice

[04:57:01.0000] <Ms2ger>
Is it just Webkit we're waiting for?

[04:58:00.0000] <jgraham>
hsivonen: (I agree it is not perfect but I am not sure I have seen a concrete suggestion for a better design that would have met all the requirements)

[04:58:01.0000] <jgraham>
Ms2ger: And Opera I think

[04:58:02.0000] <Ms2ger>
Oh

[04:58:03.0000] <Ms2ger>
Go and implement it then :)

[04:58:04.0000] <hsivonen>
jgraham: I'd prefer browsers that don't have onerror implement it

[04:58:05.0000] <hsivonen>
jgraham: http://pastebin.mozilla.org/852544

[04:58:06.0000] <jgraham>
hsivonen: Not a reasonable solution, sadly

[04:59:00.0000] <Ms2ger>
Also, ok instead of assert_true is nice

[04:59:01.0000] <hsivonen>
would it be feasible to make a function ok that creates some kind of closure thingy with test and assert_true and calls it immediately?

[05:00:00.0000] <hsivonen>
jgraham: in the pastebin case, I couldn't just do ok(false, "boo"); in scripts that aren't supposed to run

[05:00:01.0000] <hsivonen>
jgraham: then the loops where I test the resulting arrays abort if one test fails

[05:00:02.0000] <hsivonen>
jgraham: which sucks

[05:00:03.0000] <jgraham>
hsivonen: Feasible, yes. A reasonable optimisation? I'm not sure. Also I don't think it would work for your case

[05:00:04.0000] <Ms2ger>
while () {test(...)}

[05:01:00.0000] <jgraham>
hsivonen: If they are logically seperate tests, make seperate async_test calls

[05:01:01.0000] <zcorpan>
how do you test window.onerror if the harness uses window.onerror?

[05:01:02.0000] <jgraham>
That is, for each item in the array create one Test not one assert

[05:01:03.0000] <hsivonen>
jgraham: hmmkay.

[05:01:04.0000] <hsivonen>
this is so much harder than writing a mochitest for this stuff :-(

[05:02:00.0000] <Ms2ger>
hsivonen, how about you write a manual test? :)

[05:02:01.0000] <jgraham>
Pulling in the whole of Mochikit is a big dependency though

[05:02:02.0000] <Ms2ger>
Microsoft would approve it

[05:02:03.0000] <jgraham>
Ms2ger: Don't

[05:03:00.0000] <jgraham>
It's bad for my blood pressure ;)

[05:03:01.0000] <hsivonen>
if this is all about window.onerror, it seems to me that it's the wrong optimization to let some browser developer avoid an window.onerror implementation and make everyone's test writing more costly

[05:04:00.0000] <hsivonen>
jgraham: I don't care about all of mochikit. I only care about ok() and signaling when I'm done

[05:04:01.0000] <jgraham>
hsivonen: so, I am not opposed to making the API better if we can do so. What are the actual requirements for your case?

[05:05:00.0000] <jgraham>
You want to do ok(bool, message)

[05:05:01.0000] <jgraham>
But you want to do it at load time

[05:05:02.0000] <hsivonen>
 1) I want to be able to call ok(bool, message) an arbitrary number of times

[05:05:03.0000] <hsivonen>
and

[05:05:04.0000] <hsivonen>
 2) I want to have another method to call to signal that the test is done and I won't call ok() anymore

[05:05:05.0000] <jgraham>
Which is a bit problematic because the current harness assume it knows how many tests will run by the time the load event fires

[05:05:06.0000] <hsivonen>
without any wrapper methods

[05:06:00.0000] <hsivonen>
jgraham: why does it need to know that?

[05:06:01.0000] <jgraham>
Because it signals doneness per-test rather than per-file

[05:06:02.0000] <hsivonen>
jgraham: where did that requirement come from?

[05:07:00.0000] <jgraham>
It was an arbitary decision I think

[05:07:01.0000] <jgraham>
Although I might have forgotten something I was thinking about at the time

[05:07:02.0000] <hsivonen>
jgraham: then I suggest it be fixed.

[05:07:03.0000] <jgraham>
Let me think about it

[05:08:00.0000] <hsivonen>
jgraham: fwiw, I think mochitest has a bad default of assuming the test is done on onload.

[05:08:01.0000] <hsivonen>
jgraham: I find that I almost always end up calling SimpleTest.waitForExplicitFinish() and SimpleTest.finish()

[05:08:02.0000] <hsivonen>
so the default might as well be that you always have to signal finish explicitly

[05:09:00.0000] <jgraham>
So the point was this: You might have many tests in a file. They might respond to different events. You might not know the order of eacxh of those events

[05:09:01.0000] <jgraham>
Therefore to have doneness signalled globally you have to maintain state in the test file

[05:09:02.0000] <hsivonen>
jgraham: I think you shouldn't optimize for that case

[05:09:03.0000] <hsivonen>
jgraham: I have had that problem with mochitest exactly once

[05:09:04.0000] <hsivonen>
jgraham: an in that case, I did my own even counting

[05:10:00.0000] <hsivonen>
and called finish() when the right number of events had been seen

[05:10:01.0000] <jgraham>
So I think my design doesn't actually _require_ all tests to be known onload

[05:11:00.0000] <jgraham>
It just requires there to be at least one test active onload, and each test to be added whilst there is still one active test

[05:13:00.0000] <jgraham>
But making use of that fact is somewhat hacky

[05:15:00.0000] <jgraham>
So I could add a Mochitest-like harness.wait() or something

[05:15:01.0000] <hsivonen>
I could live with that

[05:15:02.0000] <hsivonen>
but I think the optimal design would be:

[05:15:03.0000] <hsivonen>
 1) The harness waits by default without paying attention no onload

[05:16:00.0000] <jgraham>
I am somewhat loathe to add the ok(bool, message) thing because I want people to wrap as much code as possible inside the test()

[05:16:01.0000] <hsivonen>
 2) The test calls ok() and arbitrary number of times.

[05:16:02.0000] <hsivonen>
 3) The test calls finish()

[05:17:00.0000] <hsivonen>
jgraham: why? my experience so far is that it's a bad idea to wrap more than one assertion in one test(), because if one assertion fails, the rest don't run

[05:17:01.0000] <jgraham>
hsivonen: Because many tests have significant setup code that could error

[05:17:02.0000] <hsivonen>
jgraham: how significant is significant?

[05:18:00.0000] <jgraham>
hsivonen: I don't know how to answer that

[05:18:01.0000] <hsivonen>
jgraham: is http://mxr.mozilla.org/mozilla-central/source/content/base/test/test_bug604660.html?raw=1 significant?

[05:18:02.0000] <hsivonen>
jgraham: I find that mochitests are typically simpler than that

[05:19:00.0000] <hsivonen>
jgraham: and that test WFM as a mochitest

[05:19:01.0000] <jgraham>
That is *huge* amounts of setup code comparatively speaking

[05:19:02.0000] <hsivonen>
jgraham: I get a feeling that the harness is optimized for more complex cases than what I see in practice

[05:19:03.0000] <jgraham>
So yes

[05:20:00.0000] <hsivonen>
jgraham: well, that case works nicely as a mochitest

[05:20:01.0000] <hsivonen>
with ok() and finish()

[05:20:02.0000] <hsivonen>
and nothing fancier than that

[05:21:00.0000] <jgraham>
hsivonen: It works as a mochitest either because the code other than the ok() call rarely fails (e.g. the XHR never fails) or because your systems deal with such failures in some way

[05:21:01.0000] <jgraham>
The only overhead I am adding is a single test(function() {})

[05:21:02.0000] <hsivonen>
jgraham: it assumes XHR never fails

[05:22:00.0000] <hsivonen>
jgraham: If XHR failed, something would be very badly broken anyway

[05:22:01.0000] <hsivonen>
jgraham: I believe you are adding much more overhead, because I find I'd have to turn each ok() into test+assert_true

[05:23:00.0000] <jgraham>
hsivonen: I am generally not happy making the assumption that the only things that can fail are what isw being explicitly tested

[05:23:01.0000] <jgraham>
Especially for cross-browser tests

[05:25:00.0000] <hsivonen>
jgraham: I'd rather add an ok(false, "XHR failed"); error handler to XHR itself than wrap everything in test()

[05:25:01.0000] <jgraham>
hsivonen: Doing that for every possible point of failure doesn't scale

[05:26:00.0000] <hsivonen>
jgraham: would your approach save Mozilla from random orange?

[05:26:01.0000] <hsivonen>
if not, what's the win?

[05:26:02.0000] <hsivonen>
(I might be less unhappy if the harness came with for-dummies documentation explaining common patterns)

[05:26:03.0000] <jgraham>
I know that javascript has a sucky syntax for anonymous functions, but apart from that, and the corresponding typing overhead, I don't clearly understand your objection

[05:27:00.0000] <jgraham>
hsivonen: (there is at least some documentation in the latest verion of the harness)

[05:27:01.0000] <jgraham>
hsivonen: (it may not meet your requirements)

[05:27:02.0000] <hsivonen>
the basic objecting is that Mozilla's mochitest is proof that an easier system can be made, so I'm unhappy about the prospect of having to write to a harder to use system

[05:27:03.0000] <hsivonen>
*objection

[05:28:00.0000] <jgraham>
I expect that Mochitests would fail in unexpected ways when run in browsers that they weren't originally tested in

[05:29:00.0000] <jgraham>
and that the tests themselves would provide little information about what went wrong

[05:29:01.0000] <hsivonen>
I think I'd be more OK with testing my tests in 4 engines than with dealing with boilerplate

[05:29:02.0000] <hsivonen>
I don't think I'd be able to write tests without testing in browser anyway

[05:30:00.0000] <jgraham>
Me neither. But I don't typically test in IE, for example

[05:30:01.0000] <hsivonen>
I think test() won't save us from people assuming random engine-specific details

[05:31:00.0000] <hsivonen>
the only way to avoid that is to try the tests in multiple engines

[05:31:01.0000] <jgraham>
It won't save us, but it ought to make it clearer what is going on when they do

[05:32:00.0000] <jgraham>
I don't know, I might be entirely wrong about this. But it at least isn't *obvious* to me that I made the wrong tradeoffs

[05:32:01.0000] <hsivonen>
jgraham: sorry about being so grumpy after all the work you've done, but the experience of trying to write a test case with the harness really sucked for me compared to what I'm used to

[05:33:00.0000] <jgraham>
I will investigate the thing about waiting for an explicit done call

[05:34:00.0000] <jgraham>
(I assume you will not be surprised if that is still subject to the timeout for the page)?

[05:34:01.0000] <hsivonen>
frankly, my reaction was along the lines of "WTF? Complexity!" :-(

[05:34:02.0000] <hsivonen>
jgraham: the timeout was truly bizarre, IMO

[05:34:03.0000] <hsivonen>
jgraham: that is, that some tests waited for a timeout until passing

[05:35:00.0000] <jgraham>
hsivonen: Hmm?

[05:35:01.0000] <hsivonen>
jgraham: it makes sense to me to have a timeout that fails a test is the test hasn't passed by a deadline

[05:35:02.0000] <jgraham>
That sounds like what is supposed to happen

[05:35:03.0000] <hsivonen>
also, the mix of manual and automated tests in the W3C harness was *really* weird

[05:36:00.0000] <jgraham>
/me disclaims all responsibility for that

[05:36:01.0000] <hsivonen>
jgraham: I might have misunderstood how the timeout was used

[05:38:00.0000] <jgraham>
hsivonen: Oh, I just realised, we have a bug tracker :)

[05:38:01.0000] <jgraham>
hsivonen: Can you file the bug in W3C bugzilla

[05:39:00.0000] <hsivonen>
jgraham: sure

[05:39:01.0000] <jgraham>
hsivonen: Thanks. And I appreciate the feedback btw. The goal wasn't to make people miserable or stop them contributing :)

[05:46:00.0000] <hsivonen>
jgraham: http://www.w3.org/Bugs/Public/show_bug.cgi?id=11321

[05:47:00.0000] <jgraham>
hsivonen: Thanks. I was actually expecting a bug on the timeout issue you saw though :)

[05:54:00.0000] <hsivonen>
jgraham: oh :-)

[05:54:01.0000] <hsivonen>
I'll file if I see it again

[05:55:00.0000] <hsivonen>
now that I tried to look for it, I discovered that http://test.w3.org/html/tests/approved/getElementsByClassName/ has an assertion per file

[05:55:01.0000] <hsivonen>
which scares me from the scalability POV 

[05:55:02.0000] <hsivonen>
since each file has some overhead

[05:55:03.0000] <jgraham>
It is the usual style at Opera

[05:56:00.0000] <jgraham>
Because our test systems were originally designed for (and still prefer) one file === one result

[05:56:01.0000] <jgraham>
It does indeed have a perf. impact

[05:57:00.0000] <jgraham>
(biab)

[06:01:00.0000] <cyberix>
WebSocket W3C spec says that when a message arrives you get an onmessage event. Where is that event defined?

[06:08:00.0000] <annevk>
you get a message event

[06:08:01.0000] <annevk>
the interface that event implements is defined in HTML5

[06:08:02.0000] <annevk>
it's called MessageEvent

[06:12:00.0000] <cyberix>
how about the others

[06:12:01.0000] <cyberix>
onopen is supposed to give me an "open" event

[06:13:00.0000] <cyberix>
is there an OpenEvent defined in HTML5 then?

[06:14:00.0000] <annevk>
I think that implements the basic Event interface

[06:59:00.0000] <jgraham>
Aww MS2ger just quit

[07:00:00.0000] <jgraham>
And I was about to complement him on his award for "best use of LaTeX in a discussion of HTML" 

[07:00:01.0000] <jgraham>
/me wonders if Ms2ger is actually male

[07:01:00.0000] <jgraham>
Also on his second prize for "best use of PDF in a discussion of HTML", narrowly losing out to Microsoft due to their superior grasp of comic irony

[07:02:00.0000] <Philip`>
20:50  * Ms2ger should actually get around to creating bugs for the warnings he's fixed locally

[07:02:01.0000] <Philip`>
Sounds like he considers himself to be male

[07:03:00.0000] <jgraham>
Good enough for me

[07:04:00.0000] <Philip`>
Or, at least, sounds like considered himself to be male two months ago

[07:04:01.0000] <Workshiva>
'he' might not be self-referential

[07:05:00.0000] <annevk>
Workshiva, stop trolling ;p

[07:06:00.0000] <Workshiva>
It's no fair that he gets off so easily when I have to deal with people who think I'm a girl all the time :P

[07:10:00.0000] <annevk>
problem?

[07:13:00.0000] <Philip`>
     def to_test((r,g,b,a)):

[07:13:01.0000] <Philip`>
-        return '%d,%d,%d,%d' % (r, g, b, int(a*255))

[07:13:02.0000] <Philip`>
+        return '%d,%d,%d,%d' % (round(r), round(g), round(b), round(a*255))

[07:13:03.0000] <Philip`>
I wonder if that addresses all of Ms2ger's comments

[07:14:00.0000] <annevk>
he quit, so we might never know

[07:19:00.0000] <Philip`>
Hmm, yeah, looks like that's all of it

[08:36:00.0000] <jgraham>
Anyone know how the lsit of SVG element names to case-shift came about? Doesn't seem to be the full SVG-tiny 1.2 list since it is missing e.g. solidColor

[08:39:00.0000] <Philip`>
From the spec:

[08:39:01.0000] <Philip`>
      <!--<tr> <td> <code title="">solidcolor</code> <td> <code title="">solidColor</code> (SVG 1.2)-->

[08:40:00.0000] <Philip`>
http://lists.w3.org/Archives/Public/public-html/2008May/0520.html

[08:40:01.0000] <Philip`>
"I haven't added anything from SVG 1.2."

[08:40:02.0000] <jgraham>
That makes no sense

[08:40:03.0000] <jgraham>
The spec *references* 1.2

[08:41:00.0000] <jgraham>
Apart from the textArea thing

[08:41:01.0000] <jgraham>
Which is just silly

[08:41:02.0000] <annevk>
damnit

[08:41:03.0000] <Philip`>
http://www.w3.org/Bugs/Public/show_bug.cgi?id=7378

[08:41:04.0000] <annevk>
I forgot to upload the latest version of web-apps-tracker to SVN

[08:42:00.0000] <annevk>
and now I've modified an older copy instead and overwritten what was there

[08:42:01.0000] <annevk>
<--- idiot

[08:42:02.0000] <jgraham>
Philip`: Thanks

[08:43:00.0000] <Philip`>
Not sure if any of that actually answers your question, but it appears to be an intentional omission

[08:43:01.0000] <jgraham>
Well it means the spec is internally inconsistent and confusing at least

[09:03:00.0000] <annevk>
so on http://html5.org/tools/web-apps-tracker W3C bugs are now in a separate column and clickable

[09:03:01.0000] <annevk>
as long as Hixie does not change the formatting (on a separate line, starting with Fixing http...) it should remain working

[09:03:02.0000] <annevk>
I also put everything in SVN

[09:04:00.0000] <annevk>
jgraham suggested not making the "Comment" field clickable on diff result pages

[09:05:00.0000] <annevk>
the downside of doing that is when viewing several diffs at once you would no longer be able to click through to a specific revision

[09:05:01.0000] <annevk>
does anyone care about that?

[09:06:00.0000] <tabatkins>
Why can't you just change it to be the id that's clickable?

[09:06:01.0000] <annevk>
not usable?

[09:07:00.0000] <tabatkins>
Less usable than making the comment clickable?

[09:09:00.0000] <annevk>
I want a large clickable area

[09:10:00.0000] <TabAtkins>
Okay, then you're probably stuck.  Why does jgraham want the comments not clickable?

[09:10:01.0000] <jgraham>
/me thinks that TabAtkins's suggestion is sensible

[09:10:02.0000] <jgraham>
It interferes with text section in some browsers

[09:10:03.0000] <jgraham>
*selection

[09:12:00.0000] <jgraham>
(which I want to copy bug links)

[09:12:01.0000] <annevk>
bug links?

[09:12:02.0000] <annevk>
they are now separate

[09:12:03.0000] <annevk>
have their own column

[09:14:00.0000] <jgraham>
On the individual diff page though

[09:14:01.0000] <jgraham>
?

[09:14:02.0000] <annevk>
everywhere

[09:17:00.0000] <jgraham>
s/B/Bug/ and I am happy

[09:17:01.0000] <annevk>
and the other one Rev?

[09:29:00.0000] <gsnedders>
/me sighs

[09:29:01.0000] <gsnedders>
It turns out removing HTMLElement.all support breaks a fair bit :\

[09:46:00.0000] <a-ja>
are there currently any browser implementations of websrt?

[09:53:00.0000] <karlcow>
a-ja: https://bugzilla.mozilla.org/buglist.cgi?quicksearch=websrt

[09:53:01.0000] <karlcow>
https://bugs.webkit.org/buglist.cgi?query_format=specific&order=relevance+desc&bug_status=__open__&product=WebKit&content=websrt

[09:53:02.0000] <karlcow>
for browsers with Open bug tracker, it seems not.

[09:56:00.0000] <karlcow>
a-ja: there are possibilities of doing through javascript

[09:56:01.0000] <karlcow>
see http://dev.opera.com/articles/view/more-accessible-html5-video-player/

[09:59:00.0000] <a-ja>
karlcow: tks.....reading now

[10:10:00.0000] <Rik`>
karlcow: wrong search, you're only searching for open bugs

[10:11:00.0000] <karlcow>
Rik`: on webkit

[10:11:01.0000] <Rik`>
on mozilla too

[10:13:00.0000] <karlcow>
for mozilla by selecting all you get the same empty result

[10:13:01.0000] <Rik`>
i'm not saying the result is different

[10:13:02.0000] <karlcow>
hihih

[10:13:03.0000] <Rik`>
just that the queries used won't tell you if there is an implementation

[10:13:04.0000] <TabAtkins>
jgraham: What was the compiz grid widget you liked?  I upgraded to lucid recently, so I should actually be able to use it.

[10:14:00.0000] <gsnedders>
TabAtkins: Grid

[10:14:01.0000] <gsnedders>
(Sorry, I know jgraham too well…)

[10:14:02.0000] <Rik`>
if you want to know if something is implemented, you specifically want to search for closed bugs

[10:15:00.0000] <karlcow>
Rik`: I doubt it will be already implemented :)

[10:16:00.0000] <Rik`>
and if something is implemented, it will have some bugs :)

[10:26:00.0000] <TabAtkins>
gsnedders: Thanks, got it done.  Just discovered that, since I operate my monitors in portrait mode, it's not as useful as I'd like, but still.

[11:32:00.0000] <Hixie>
hsivonen: what is hard to follow? It looks like your question is answered.

[11:35:00.0000] <hsivonen>
Hixie: it was hard to locate "abort" from location.href

[11:35:01.0000] <Hixie>
well it's not specific to location.href

[11:35:02.0000] <Hixie>
it's just any navigation

[11:36:00.0000] <Hixie>
that's like saying you can't find the parser from location.href :-)

[13:25:00.0000] <jgraham>
Oh yay let's have another discussion about bugmail

[13:31:00.0000] <zcorpan>
argh, now i can't escape html wg accessibility whinings even at sitepoint :(

[13:31:01.0000] <jgraham>
hober: Doesn't public-html-bugzilla get *all* bugmail

[13:31:02.0000] <hober>
I think so, yeah

[13:31:03.0000] <jgraham>
hober: not just new bug notifications

[13:31:04.0000] <jgraham>
That is too much :)

[13:32:00.0000] <hober>
I'm actually subscribed to public-html-bugzilla, so I wouldn't mind the public-html CCing going away.

[13:32:01.0000] <jgraham>
I really never want to get email from someone adding a a11y label to a bug ever again

[13:32:02.0000] <TabAtkins>
Same here.

[13:56:00.0000] <Hixie>
http://download.oracle.com/docs/cd/E14571_01/apirefs.1111/e15862/toc.htm ...!

[13:59:00.0000] <annevk>
context?

[14:00:00.0000] <Hixie>
i had no idea people were using Selectors in such wild ways

[14:01:00.0000] <Hixie>
they've basically taken selectors and added a whole bunch of new pseudos and stuff for their needs

[14:01:01.0000] <Hixie>
it's cool

[14:01:02.0000] <Hixie>
found it while looking for ":ltr pseudo-class"

[14:01:03.0000] <TabAtkins>
Selectors are all kinds of sexy for some reason.  They're just plain a pretty darned usable DSL.

[14:02:00.0000] <Hixie>
dsl?

[14:02:01.0000] <TabAtkins>
domain-specific language

[14:02:02.0000] <Hixie>
ah, yes

[14:03:00.0000] <hober>
jgraham: yeah, I could do without those myself. on the other hand, I don't want to miss technical discussion that happens in random bugs

[14:03:01.0000] <TabAtkins>
Argh, "svn up" keeps quitting immediately with "skipping ." and I dont' know how to override it.  >_<

[14:04:00.0000] <Hixie>
what does svn status say?

[14:04:01.0000] <TabAtkins>
Hixie: Limiting myself to suggesting things in public drafts means that I actually have to do some work, which is a good thing.

[14:04:02.0000] <jgraham>
TabAtkins: Don't you like work with the svn authors?

[14:04:03.0000] <Hixie>
heh

[14:04:04.0000] <Hixie>
TabAtkins: can't argue with that :-P

[14:04:05.0000] <TabAtkins>
Hixie: Oh, that's why.  ". is not a working directory".  Huh.

[14:05:00.0000] <TabAtkins>
s/directory/copy/

[14:05:01.0000] <gsnedders>
TabAtkins: n00b

[14:05:02.0000] <Hixie>
lol

[14:05:03.0000] <TabAtkins>
jgraham: ...maybe?

[14:05:04.0000] <Hixie>
the mature gsnedders is in the house :-P

[14:05:05.0000] <jgraham>
TabAtkins: Pretty sure Hixie does anyway

[14:05:06.0000] <jgraham>
TabAtkins: Do you work with Hixie? 

[14:05:07.0000] <TabAtkins>
jgraham: Yes.

[14:05:08.0000] <jgraham>
We can solve this using Logic!

[14:05:09.0000] <TabAtkins>
jgraham: Well, in the same company.

[14:06:00.0000] <TabAtkins>
jgraham: But "works with" isn't transitive in a useful sense.

[14:06:01.0000] <TabAtkins>
"works in the same company as" is, but that doesn't help me much in a company this large.

[14:06:02.0000] <jgraham>
Dammit, you with your reason

[14:06:03.0000] <jgraham>
Why can't things just be simple

[14:06:04.0000] <gsnedders>
Why do you have it here?

[14:06:05.0000] <gsnedders>
You were meant to leave it at the door!

[14:06:06.0000] <TabAtkins>
...this directory is CVS-versioned.  That's why.

[14:07:00.0000] <jgraham>
Also, this is the point at which I hate on svn for a while

[14:07:01.0000] <jgraham>
Hah

[14:07:02.0000] <jgraham>
Just when you thought "oh man I have to use SVN" you find it got worse

[14:07:03.0000] <jgraham>
Next you know you will find one subdirectory requires Visual Source Safe

[14:07:04.0000] <jgraham>
And someone else locked the files in 1998

[14:08:00.0000] <jgraham>
and still has the lock

[14:08:01.0000] <TabAtkins>
Luckily no one in the csswg is *that* crazy.

[14:08:02.0000] <Hixie>
TabAtkins: lol

[14:09:00.0000] <Hixie>
i recommend (not that i've done it) having an alias for svn and cvs that works out which is appropriate and calls the right one :-)

[14:09:01.0000] <Hixie>
though i have directories that are intentionally both, for added amusement

[14:09:02.0000] <TabAtkins>
Or I can just remember that for some reason csswg still runs on cvs, while everything else I do is on svn.

[14:10:00.0000] <Hixie>
yeah i know that feeling

[14:10:01.0000] <jgraham>
TabAtkins: http://twitter.com/glazou/statuses/21942648163 <-- are you sure no one is that crazy?

[14:11:00.0000] <TabAtkins>
Bert just use CVS, is all.  That's a handleable level of crazy.

[14:11:01.0000] <jgraham>
(OK, I guess using VSS would be a whole level of crazy above predicting the demise of the web as we know it)

[14:11:02.0000] <jgraham>
(but still)

[14:12:00.0000] <Hixie>
btw if you do work on lists i have a bunch of e-mails of feedback i've been collecting over the years

[14:12:01.0000] <TabAtkins>
http://twitpic.com/37709c

[14:12:02.0000] <TabAtkins>
I'm working on Lists *right now*.

[14:12:03.0000] <Hixie>
oh cool

[14:12:04.0000] <Hixie>
let me forward you the batch

[14:14:00.0000] <Hixie>
sent

[14:18:00.0000] <cardona507>
TabAtkins: that picture is wack

[14:19:00.0000] <cardona507>
I am traveling to kauai in a couple of week and am not looking forward to the preflight grope

[14:19:01.0000] <cardona507>
*weeks

[14:19:02.0000] <TabAtkins>
cardona507: Choose the grope over the nudie picture, at least.

[14:19:03.0000] <cardona507>
the story of my life

[14:19:04.0000] <cardona507>
:)

[14:19:05.0000] <TabAtkins>
Hah.

[14:20:00.0000] <jgraham>
/me seems to be alone in being unbothered by the idea of a tetrahertz imaging scan

[14:21:00.0000] <jgraham>
Or x-ray backscatter

[14:21:01.0000] <TabAtkins>
I'm bothered by the existing evidence that the pictures are capable of being saved, and were in fact saved in some cases already.

[14:21:02.0000] <jgraham>
Not sure if they are the same

[14:22:00.0000] <Rik`>
have you seen how they do it in Israel? http://www.thestar.com/news/world/article/744199---israelification-high-security-little-bother

[14:22:01.0000] <TabAtkins>
Plus the emerging reports of attractive women being disproportionately selected to go through them.

[14:22:02.0000] <Philip`>
Even if they save the images, you're just one of millions, so why would anyone care about you?

[14:22:03.0000] <jgraham>
I somewhat share Philip's view

[14:23:00.0000] <Philip`>
Your body isn't that interesting

[14:23:01.0000] <jgraham>
After the first 10,000 people going through that day I don't think I am anything special

[14:23:02.0000] <TabAtkins>
Rik`: Yeah, they're a bit more sane there.  On the other hand, they also don't quite have the racism issues we have in America (that is, it seems to be more okay to be racist in particular directions in Israel), so the issue with subjective profiling isn't as large.

[14:23:03.0000] <TabAtkins>
I, um, don't care that someone may be taking pictures of ten thousand *other* naked people home along with mine.

[14:23:04.0000] <TabAtkins>
Or, you know, my wife.

[14:24:00.0000] <cardona507>
or my kid

[14:24:01.0000] <jgraham>
It is more bothering for children, yes

[14:24:02.0000] <TabAtkins>
I care that I, or my wife, may be forced to have naked pictures taken of us that we can't control.

[14:24:03.0000] <jgraham>
But I am not talking about other people

[14:24:04.0000] <jgraham>
I am talking about myself

[14:24:05.0000] <TabAtkins>
So, hey, forcing the line to move a bit slower as I get a grope seems like a lesser evil.

[14:25:00.0000] <gsnedders>
/me is more scared of the grope…

[14:25:01.0000] <jgraham>
I am no more bothered *personally* than if anyone takes any other picture of me that I can't control

[14:25:02.0000] <gsnedders>
But there again, I'm absurdly ticklish.

[14:25:03.0000] <bckenny>
just make sure to wear a kilt

[14:25:04.0000] <TabAtkins>
jgraham: You're seriously equally okay with a normal picture and a naked picture?

[14:25:05.0000] <Rik`>
I'm bothered that we have to go through such stupid measures to travel

[14:25:06.0000] <TabAtkins>
gsnedders: That makes it better!

[14:26:00.0000] <jgraham>
TabAtkins: Given that it is one of hundreds of thousands and low resolution, yes

[14:26:01.0000] <TabAtkins>
Hixie: Damn, this is a lot of feedback.

[14:26:02.0000] <TabAtkins>
jgraham: You're odd, then.

[14:26:03.0000] <jgraham>
What are they going to do? Publish my penis size on the internet?

[14:27:00.0000] <gsnedders>
/me is not convinced airport security in general is justifiable

[14:27:01.0000] <jgraham>
And if they did, what bad thing would happen?

[14:27:02.0000] <bckenny>
even if you're ok with it, not being bothered by something is an extremely poor criteria for judging TSA policies

[14:27:03.0000] <Philip`>
Maybe someone will send the entire image database to Wikileaks

[14:27:04.0000] <bckenny>
that would be awesome

[14:27:05.0000] <TabAtkins>
gsnedders: It's not.  It's ridiculous.  There are a million better places to commit terrorism than *on* an airplane.

[14:27:06.0000] <jgraham>
Oh, it might be an entirely unnecessary security measure

[14:27:07.0000] <jgraham>
I don't know

[14:27:08.0000] <gsnedders>
TabAtkins: e.g., the bombing on the TGV in the 1980s

[14:28:00.0000] <jgraham>
I don't understand why terrorists are still so obsessed with planes in general

[14:28:01.0000] <TabAtkins>
jgraham: I am not, in general, okay with people seeing me naked without my permission (and my wife's permission, for that matter).

[14:28:02.0000] <gsnedders>
jgraham: Because it's more visually dramatic, and hence increases the fear induced in people

[14:29:00.0000] <jgraham>
TabAtkins: Can you justify that rationally?

[14:29:01.0000] <bckenny>
http://www.theonion.com/articles/local-man-foremost-expert-on-what-the-terrorists-s,18432/

[14:29:02.0000] <jgraham>
gsnedders: I sort-of assumed it was mainly the symbolism value

[14:29:03.0000] <TabAtkins>
jgraham: Don't need to, as the majority of the public thinks similarly.  ^_^

[14:30:00.0000] <jgraham>
TabAtkins: Not a very forward looking response

[14:31:00.0000] <jgraham>
(imagine the conversation were instead about burning witches)

[14:31:01.0000] <bckenny>
now youre being silly

[14:31:02.0000] <jgraham>
Not at all

[14:31:03.0000] <jgraham>
I think 

[14:31:04.0000] <zcorpan>
annevk: thanks for the bug column

[14:31:05.0000] <jgraham>
*) These are likely silly security measures

[14:32:00.0000] <jgraham>
*) Most of the people making a fuss have no rational reason to be concerned

[14:32:01.0000] <Hixie>
TabAtkins: yeah

[14:32:02.0000] <jgraham>
*) There is some cause for complaint about images being saved 

[14:33:00.0000] <cardona507>
did you just reference burning witches?

[14:33:01.0000] <bckenny>
yes, and backdoors should be required in all encryption systems

[14:33:02.0000] <Rik`>
jgraham: you don't mind people seeing you naked ?

[14:33:03.0000] <cardona507>
/me waits for the nazi mention

[14:33:04.0000] <TabAtkins>
jgraham: Sigh.  Okay.  While I appreciate the idea that other people would find me desirable, I get squicked out by the idea that they are directly deriving sexual gratification from an image of me.  As well, society in general has long considered viewing the body a privacy issue, and my thoughts are in line with that.  I consider it an invasion of my privacy to look at me naked without my express permission, and thus need a really good 

[14:33:05.0000] <bckenny>
the slope is slippery in all directions!

[14:33:06.0000] <gsnedders>
Rik`: That's not a rational reason.

[14:33:07.0000] <gsnedders>
Rik`: That's a purely emotion one.

[14:33:08.0000] <Hixie>
i'd be fine going through the TSA line naked if only the TSA staff were naked also

[14:33:09.0000] <Hixie>
it's the imbalance that's the problem, IMHO

[14:33:10.0000] <TabAtkins>
A "clothing optional" airport might be okay, yeah.  ^_^

[14:33:11.0000] <Rik`>
so if jgraham doesn't mind, I assume he is naked all day long for every activity?

[14:34:00.0000] <bckenny>
mutual groping?

[14:34:01.0000] <zcorpan>
Hixie: dirname looks like dimname

[14:34:02.0000] <jgraham>
Rik`: My coworkers would not appreciate that

[14:34:03.0000] <TabAtkins>
(That doesn't fix the fact that it's still very easy to smuggle in sufficient explosive via the rectum, which can't be detected short of a cavity search or a full Xray.)

[14:34:04.0000] <jgraham>
and also it would be cold

[14:34:05.0000] <Hixie>
having said that, the entire thing is a complete joke, because not only does it not help security (e.g. there's no cavity search, the highest risk isn't passengers, etc) but it actually makes it worse by providing an unscreened soft target

[14:35:00.0000] <jgraham>
(the slim possibility that they would be sexually excited by me is so far down on the list of concerns with that plan it doesn't register)

[14:35:01.0000] <bckenny>
4th ammendment isnt contingent on someone getting off to a picture of me

[14:36:00.0000] <Hixie>
zcorpan: yeah, not sure what to do about that

[14:38:00.0000] <jgraham>
(I can see that females might have more to worry about from that point of view. Although frankly attractive females are being identified as such, and treated accordingly, scanner or no)

[14:39:00.0000] <jgraham>
(and there is a genuine issue around children)

[14:39:01.0000] <Hixie>
how does http://www.w3.org/Bugs/Public/show_bug.cgi?id=11297 even happen

[14:39:02.0000] <Hixie>
i don't understand

[14:39:03.0000] <TabAtkins>
There is a difference of kind between someone paying a little extra attention to attractive females and attractive females actively being singled out for nudie pictures to be taken of them.  If you don't admit that you're being unreasonable.

[14:39:04.0000] <Hixie>
jgraham: there's also a genuine issue around people who have had scarring experiences in their past who may be triggered by being touched or by the thought of being seen naked

[14:40:00.0000] <Hixie>
the whole thing is a joke though because it's predicated on a lie

[14:40:01.0000] <Hixie>
(that anything here is making us safer)

[14:43:00.0000] <jgraham>
Hixie: Agreed.

[14:44:00.0000] <jgraham>
TabAtkins: Saving images is not ideal. But really they are rather low resolution and it is hard to imagine anyone who works with them every day for an extended period getting anything unprofessional out of them

[14:44:01.0000] <TabAtkins>
jgraham: You have a very poor imagination.

[14:45:00.0000] <cardona507>
no doubt

[14:45:01.0000] <jgraham>
But in any case, I stand by my original assertion that I personally have no problem with going through such a scan, except that I highly doubt it is useful for security

[14:46:00.0000] <Dashiva>
Anyone saying those images are low resolution clearly never surfed for porn in the 90s

[14:46:01.0000] <jgraham>
TabAtkins: People are rather quickly conditioned to things they see all the time

[14:46:02.0000] <gavin>
jgraham: I feel the same way (doesn't bother me personally)

[14:46:03.0000] <gsnedders>
Or surfed porn on a mobile

[14:46:04.0000] <bckenny>
unprofessional? http://abcnews.go.com/Travel/miami-airport-tsa-officer-charged-assault-manhood-jokes/story?id=10583691

[14:46:05.0000] <jgraham>
Hence the (apparent) trend toward more violent porn

[14:47:00.0000] <AryehGregor>
Does http://www.thestar.com/news/world/article/744199---israelification-high-security-little-bother freeze up Firefox 4b7 for anyone but me?

[14:47:01.0000] <zcorpan>
gsnedders: depends on the resolution of the mobile screen

[14:47:02.0000] <AryehGregor>
Also, I've flown on El Al (Israeli state airline) a couple of times, and lots of people I know have gone many times.  I don't remember it personally, but the interview is apparently very effective, it's not just racial profiling.

[14:47:03.0000] <cardona507>
wow he beat the shit out of someone for saying he had a small penis

[14:48:00.0000] <AryehGregor>
They ask you a series of unpredictable questions about what you'll be doing and where you're from and so on, and they're watching you.

[14:48:01.0000] <AryehGregor>
If you're really planning on blowing up the plane, you won't have honest answers and will have to make them up on the spot, and that's not hard to catch.

[14:48:02.0000] <jgraham>
/me always wonders how you judge the effectiveness of such things

[14:49:00.0000] <jgraham>
I mean you can hardly have a control sample

[14:49:01.0000] <TabAtkins>
AryehGregor: Yeah, definitely - I've been through similar.  The point is, though, that with a subjective profiling like that, it's easier for racist biases to play in, which I think is a bigger no-no in America.  But shrug, it's probably what we'll have to do.

[14:49:02.0000] <zcorpan>
"are you going to blow up the plane?" "no" "ok"

[14:49:03.0000] <gsnedders>
AryehGregor: Why not just blow up a major train route instead?

[14:49:04.0000] <gsnedders>
AryehGregor: Or a notable building?

[14:49:05.0000] <jgraham>
(in Spain they x-ray luggage before you get on the train)

[14:50:00.0000] <AryehGregor>
gsnedders, you can, which is why it's not reasonable to go overboard here.

[14:50:01.0000] <zcorpan>
gsnedders: too easy

[14:50:02.0000] <jgraham>
(but you could just drop a concrete block on the line or something)

[14:50:03.0000] <bckenny>
"how are you going to blow up the plane?" "well i made this liquid explosive...wait a minute..."

[14:50:04.0000] <AryehGregor>
In fact, Palestinian terrorists do mostly target Israeli buses/malls/discos/etc., not planes.

[14:50:05.0000] <Hixie>
the way you stop terrorist attacks is by not giving the terrorists reason to blow stuff up (e.g. don't go and wage warn on their country) and by having good intelligence (which is how the vast majority of attacks are stopped)

[14:51:00.0000] <bckenny>
also, incompetent terrorists

[14:51:01.0000] <Hixie>
yeah well that's the primary line of defence, sure

[14:51:02.0000] <AryehGregor>
And sometimes people catch them as they're trying to pull off the attack.

[14:51:03.0000] <AryehGregor>
I doubt that not giving them reason to blow stuff up is effective, relative to the costs.

[14:51:04.0000] <Hixie>
making everyone happy is worth the cost :-)

[14:52:00.0000] <AryehGregor>
Unless you happen to mostly disagree with the policies they object to anyway.

[14:52:01.0000] <jgraham>
The problem is that people often want mutually contradictory things

[14:52:02.0000] <TabAtkins>
I'm totally in favor of just going for full-frontal paradise engineering.  ^_^

[14:53:00.0000] <jgraham>
Which is why you can get away with wishing for "world peace" if you are going for Miss World and other such intellectual prizes, but less so in serious discourse

[14:53:01.0000] <AryehGregor>
As a general rule, if something would make everyone happy then we'd be doing it.  If we're waging war on some country, it follows that at least one person must prefer waging war to not waging war, since you can't fight a war without at least one person's support.

[14:54:00.0000] <AryehGregor>
TabAtkins, yeah, but that only really works to appease hedonists.  In particular, if people have preferences about how other people behave even when that doesn't affect them, you're unlikely to be able to please everyone no matter what.

[14:55:00.0000] <TabAtkins>
With sufficient engineering, you can make everyone a hedonist by definition, e.g. because you've eliminated pain and now people only experience gradations of pleasure.

[14:55:01.0000] <AryehGregor>
(I guess I don't really mean only hedonists.  Depends how literally you mean "paradise".)

[14:55:02.0000] <AryehGregor>
That doesn't help if people have preferences unrelated to pleasure.

[14:56:00.0000] <AryehGregor>
E.g., if religion A thinks everyone from religion B needs to be converted, and conversely, you can never make both groups happy without changing one group's preferences (e.g., forcibly converting them).  This can happen with secular beliefs too.

[14:56:01.0000] <TabAtkins>
Sure, but combine that with greatly enhanced empathy, possibly augmented by something like low-level electronic telempathy, and you've pretty much eliminated anger too.

[14:56:02.0000] <AryehGregor>
It's not about emotion, it's about principled beliefs.

[14:56:03.0000] <TabAtkins>
So people can disagree and still be cool.

[14:57:00.0000] <TabAtkins>
/me ultimately believes in reworking humanity substantially.

[14:57:01.0000] <AryehGregor>
It's not like adherents of one religion think the other religion should be eliminated because they're angry, it's because they believe that God said so and will reward or punish everyone in a manner incommensurably greater than any earthly pleasure depending on whether they listen to him.

[14:58:00.0000] <AryehGregor>
(at least in the typical Abrahamic model)

[14:58:01.0000] <jgraham>
http://www.phdcomics.com/comics/archive/phd102710s.gif <-- why this discussion started

[14:58:02.0000] <Hixie>
AryehGregor: well i guess one solution would be to go and find god and ask him what he meant exactly

[14:58:03.0000] <Hixie>
AryehGregor: assuming there is a god

[14:58:04.0000] <TabAtkins>
It's very rare for someone to actually want to kill someone without anger being involved at some point, or insanity.

[14:59:00.0000] <AryehGregor>
TabAtkins, you're very, very mistaken.

[14:59:01.0000] <AryehGregor>
Hixie, that's a nice idea, but it doesn't seem likely to be effective.  Whether God exists isn't really material here, only whether people believe he does.

[14:59:02.0000] <TabAtkins>
AryehGregor: Really?

[14:59:03.0000] <AryehGregor>
I mean, of course you could just reeducate everyone to your preferred tolerant belief system, that'd do the trick.

[15:00:00.0000] <AryehGregor>
TabAtkins, yes.  Like, say, all executions.

[15:00:01.0000] <espadrine>
http://www.w3.org/Bugs/Public/show_bug.cgi?id=11297 is a copy-&-paste from http://josephjiang.com/entry.php?id=338

[15:00:02.0000] <AryehGregor>
Which were very common until very recently.

[15:00:03.0000] <TabAtkins>
I imagine greatly enhanced empathy would generally eliminate executions, too.

[15:00:04.0000] <gsnedders>
/nice/.

[15:01:00.0000] <jgraham>
Are we considering genetic engineering tolerance into the population, or what?

[15:01:01.0000] <TabAtkins>
Sure, either genengineering or cyborging.

[15:01:02.0000] <gavin>
you could argue that executions are indirect, institutionalized expressions of anger

[15:01:03.0000] <webr3>
do any browsers modify the Accept header sent based on the @type attrib on <a> ? if-not-why-not

[15:01:04.0000] <AryehGregor>
TabAtkins, do you plan to *force* everyone to be empathic?  If not, people would refuse as soon as they saw that similar-minded people radically changed their beliefs upon becoming more empathic.

[15:02:00.0000] <AryehGregor>
gavin, seems like a stretch.  Execution is a means of deterring behavior society deems harmful, and could exist even in a totally nonemotional species.

[15:02:01.0000] <TabAtkins>
AryehGregor: I haven't decided how I feel about that yet.  I mean, it's violating their prerogative of mind-freedom, but *not* forcing them is allowing them to continue suffering.

[15:02:02.0000] <krijnserver>
-_-

[15:02:03.0000] <gsnedders>
webr3: No. Because, um, nobody thought to do it originally? I guess there's little more reason than that. (And any change now bears a cost.)

[15:02:04.0000] <jgraham>
(if you use something like genetic engineering it can spread through the population naturally in a few generations with sufficient initial coverage)

[15:02:05.0000] <krijnserver>
How is the peoples of the internets here?

[15:03:00.0000] <AryehGregor>
Like if you had a big swarm of robots, you can easily imagine them destroying any robots that don't follow their game plan.

[15:03:01.0000] <TabAtkins>
krijnserver: Yo.

[15:03:02.0000] <AryehGregor>
TabAtkins, that argument totally reminds me of the ending dialog with Khergan in Arcanum.

[15:03:03.0000] <webr3>
gsnedders, ack would have been nice for conneg - think it's worth mentioning on a list?

[15:03:04.0000] <krijnh>
Are the logs still fine?

[15:03:05.0000] <TabAtkins>
AryehGregor: Didn't play/read/watch Arcanum (choose whichever is appropriate).

[15:03:06.0000] <gsnedders>
webr3: The answer will basically be: get browsers to implement it.

[15:03:07.0000] <AryehGregor>
jgraham, only if it's adaptive.  If people don't like it, they'll refuse to breed with the ones who have it.

[15:04:00.0000] <AryehGregor>
TabAtkins, it's an RPG, one of my favorite of all time.

[15:04:01.0000] <AryehGregor>
Apparently it's Kerghan.

[15:04:02.0000] <AryehGregor>
TabAtkins, http://www.youtube.com/watch?v=IkBrIrQikWY

[15:05:00.0000] <TabAtkins>
AryehGregor: The wikipedia page for arcanum consists solely of his final speech.  ^_^

[15:05:01.0000] <webr3>
gsnedders, ahh, I won't hold my breath then :p

[15:05:02.0000] <gsnedders>
webr3: The answer then will be, I expect, prove it won't break sites.

[15:06:00.0000] <AryehGregor>
TabAtkins, ?  I don't see it: http://en.wikipedia.org/wiki/Arcanum:_Of_Steamworks_and_Magick_Obscura

[15:06:01.0000] <TabAtkins>
Ah, sorry, wikiquote actually.

[15:06:02.0000] <webr3>
gsnedders :) thanks for feedback, will stick it on my to do list, it's one of those nice to haves but can live without things

[15:06:03.0000] <gsnedders>
webr3: Also, there's the question of whether the page author knows better than the UA about the user's preferences for MIME type

[15:06:04.0000] <AryehGregor>
TabAtkins, the video is cooler.

[15:07:00.0000] <TabAtkins>
AryehGregor: Yeah, paradise engineering often verges off into areas that sound similar to the more nuanced grand villain speech.

[15:07:01.0000] <TabAtkins>
AryehGregor: The notable difference being that making everyone happy is at least conceivably a good outcome, as opposed to killing everyone.

[15:07:02.0000] <Dashiva>
Just make sure you have a short or no mustache

[15:08:00.0000] <AryehGregor>
TabAtkins, man, weren't you paying attention to the speech?  Killing everyone is totally a good way to make everyone happy, in the setting of Arcanum.

[15:08:01.0000] <webr3>
gsnedders, good point - I need to think about this more.. one could always use the content-location instead of the conneg uri in the @href if needing direct access to a particular flavour..

[15:08:02.0000] <TabAtkins>
AryehGregor: No, it seems that it's talking about a lack of pain, not a surplus of happiness.

[15:08:03.0000] <TabAtkins>
no pain != happy

[15:09:00.0000] <gsnedders>
certainly not if you're a masochist

[15:09:01.0000] <AryehGregor>
Well, the point he's making is that all the souls are much happier dead than alive.

[15:09:02.0000] <AryehGregor>
Of course, one problem with this story is inconsistent preferences.

[15:09:03.0000] <gsnedders>
webr3: also think about what if a page author wants to deliberately abuse it

[15:09:04.0000] <TabAtkins>
That's one problem, yeah.

[15:09:05.0000] <AryehGregor>
In that setting, people prefer to be alive while they're alive, and prefer to be dead while they're dead, so there's no clear justification for mass-moving them one way or the other.

[15:10:00.0000] <AryehGregor>
Also, Firefox is still frozen using 100% CPU from trying to open this: http://www.thestar.com/news/world/article/744199---israelification-high-security-little-bother

[15:10:01.0000] <Rik`>
AryehGregor: i'm not seeing this

[15:10:02.0000] <AryehGregor>
What version, 4b7?

[15:10:03.0000] <Rik`>
hmm, no nightly

[15:11:00.0000] <TabAtkins>
AryehGregor: Indeed.  On the other hand, having fun all the time with the full varied experiences of life seems much less objectionable.

[15:12:00.0000] <AryehGregor>
Well, but you're biased.

[15:12:01.0000] <TabAtkins>
?

[15:12:02.0000] <AryehGregor>
If you were dead, you'd see things the opposite way, clearly.

[15:12:03.0000] <AryehGregor>
(in Arcanum's setting)

[15:12:04.0000] <AryehGregor>
You're just advocating what you're used to based on your current preferences.

[15:12:05.0000] <TabAtkins>
I'm not proposing to alter the dead.  Just the living.

[15:13:00.0000] <AryehGregor>
gfxSkipCharsIterator::IsOriginalCharSkipped(int*)

[15:13:01.0000] <webr3>
gsnedders, cheers :)

[15:13:02.0000] <webr3>
all: anybody know if any browsers support client side certificates over wss:// ?

[15:13:03.0000] <AryehGregor>
Seems to be an infinite loop in there.

[15:15:00.0000] <AryehGregor>
Yeah, it's all gfxSkipCharsIterator.

[15:15:01.0000] <AryehGregor>
/me doesn't seem to have a full stack trace

[15:15:02.0000] <AryehGregor>
Reproducible for me.

[15:15:03.0000] <AryehGregor>
Anyone else want to test on 4b7?

[15:25:00.0000] <gavin>
what platform?

[15:26:00.0000] <AryehGregor>
Linux, Ubuntu 10.10.

[15:28:00.0000] <gavin>
where are you getting the stack? about:crashes?

[15:28:01.0000] <gavin>
worth filing a bug, CC me if you do

[15:28:02.0000] <AryehGregor>
No, gdb (copy-pasted boilerplate, I don't know how to use it).

[15:28:03.0000] <AryehGregor>
Let me look at about:crashes.

[15:28:04.0000] <gavin>
about:Crashes is only useful if you get the crash reporter dialog and submit the crash

[15:29:00.0000] <AryehGregor>
Well, here it just froze at 100% CPU, I had to kill it.

[15:29:01.0000] <AryehGregor>
So I guess it's not useful.

[15:29:02.0000] <gavin>
oh, I misread

[15:29:03.0000] <gavin>
thought you were crashing

[15:46:00.0000] <jamesr_>
you can force kill it while locked and get a crash report that way

[15:46:01.0000] <jamesr_>
the stack should still be useful

[15:54:00.0000] <AryehGregor>
Force-kill it in what way?  kill -9?  How will it get the stack trace that way?


2010-11-16
[16:21:00.0000] <AryehGregor>
sicking, why is a.innerHTML += "<b>what's up dog</b>"; terrible perf-wise?  I thought innerHTML was much faster than, say, DOM methods.

[16:24:00.0000] <Dashiva>
AryehGregor: Because it forces the browser to serialize and then reparse the existing contents in addition to the new markup?

[16:25:00.0000] <AryehGregor>
So it's fast if the existing contents are short?  What would be a better alternative if the contents are long?

[16:25:01.0000] <TabAtkins>
a.appendChild(b)?

[16:26:00.0000] <Dashiva>
Isn't this where insertAdjacentHtml is supposed to shine?

[16:26:01.0000] <Dashiva>
Generally I make sure there is a single element I can just replace the existing contents of

[16:28:00.0000] <othermaciej>
AryehGregor: it's O(N^2) if you do it N times to the same element

[16:28:01.0000] <othermaciej>
insertAdjacentHtml avoids the perf hazard, yes

[16:29:00.0000] <AryehGregor>
Makes sense.

[16:29:01.0000] <othermaciej>
besides the perf issue per se, by reparsing and replacing contents it could destroy state

[16:29:02.0000] <othermaciej>
imagine if a includes a playing video, or a currently checked checkbox

[16:30:00.0000] <AryehGregor>
Interesting point, I hadn't thought of that.

[16:30:01.0000] <AryehGregor>
So html.innerHTML += foo is very different from document.write(foo).  I had thought they were similar.

[16:31:00.0000] <AryehGregor>
But if the former destroys everything and reparses, and the latter doesn't, that's a very big difference.

[16:31:01.0000] <othermaciej>
yes

[16:31:02.0000] <othermaciej>
think of it as html.innerHTML = html.innerHTML + foo

[16:32:00.0000] <AryehGregor>
Yeah, from that perspective it's clear.

[16:32:01.0000] <othermaciej>
it's not an in-place append, it a serialize-append-replace-reparse

[16:35:00.0000] <AryehGregor>
"Casting an array of integers to an array of bytes will give you different results on different hardware."  Ugh, isn't JavaScript supposed to not expose endianness?

[16:36:00.0000] <Philip`>
Not any more

[19:46:00.0000] <m0>
Do you any of you believe that resizing a canvas should clear the canvas?

[19:47:00.0000] <m0>
Do any of you believe against that?

[22:01:00.0000] <heycam>
does innerHTML parse as xml in xml documents?

[22:20:00.0000] <toyoshim>
ls

[22:21:00.0000] <othermaciej>
heycam: yes, per the spec http://dev.w3.org/html5/spec/Overview.html

[22:21:01.0000] <othermaciej>
er

[22:21:02.0000] <othermaciej>
sorry for lack of fragment ID

[22:21:03.0000] <othermaciej>
http://dev.w3.org/html5/spec/Overview.html#dom-innerhtml

[22:22:00.0000] <othermaciej>
heycam: I believe that historically it doesn't work in xml documents

[22:25:00.0000] <heycam>
crazy :)

[22:26:00.0000] <heycam>
it is nice to have the facility in xml documents

[22:26:01.0000] <heycam>
it's just surprising with the name innerHTML -- i assumed the html parser would get at it

[22:29:00.0000] <hsivonen>
heycam: I think it's sad that innerHTML in XML uses the XML parser. probably Mozilla's fault.

[22:29:01.0000] <hsivonen>
water under the bridge now, though

[22:29:02.0000] <heycam>
gecko is indeed where i just discovered that it parsed as xml :)

[22:30:00.0000] <hsivonen>
the behavior comes from the era when people still believed in XML

[22:30:01.0000] <heycam>
pshaw

[22:31:00.0000] <heycam>
i still believe in xml!

[22:31:01.0000] <heycam>
actually, i just like xslt :)

[22:31:02.0000] <heycam>
xml infoset + some infoset-like abstraction of xslt would do me

[22:31:03.0000] <heycam>
regardless of the serialization

[22:32:00.0000] <hsivonen>
XSLTProcessor::transformToDocument works on text/html input DOMs

[22:32:01.0000] <hsivonen>
<?xml-stylesheet?> doesn't

[22:32:02.0000] <heycam>
sure.  although i should clarify that nearly all my uses of xslt are off-web.

[22:32:03.0000] <hsivonen>
heycam: I have code for that!

[22:33:00.0000] <heycam>
hsivonen, huh?

[22:33:01.0000] <hsivonen>
heycam: http://about.validator.nu/htmlparser/ look for the XSLT4HTML5 sample app

[22:33:02.0000] <heycam>
oh!

[22:33:03.0000] <hsivonen>
heycam: though I recomment using the code from hg tip instead of the latest release

[22:33:04.0000] <hsivonen>
the release is *old*

[22:33:05.0000] <heycam>
/me does have a toolchain that uses html5parser to convert .html files to .xhtml before passing them through saxon

[22:33:06.0000] <hsivonen>
/me should make a new release

[22:33:07.0000] <heycam>
er, html5lib

[22:34:00.0000] <hsivonen>
heycam: on trunk, there's a class you can give to Saxon as the parser, so no boilerplate Java wrapper code is required

[22:35:00.0000] <heycam>
hsivonen, ah cool

[22:35:01.0000] <hsivonen>
nu.validator.htmlparser.sax.InfosetCoercingHtmlParser

[22:35:02.0000] <heycam>
for me this is just in a makefile btw

[22:35:03.0000] <hsivonen>
http://hg.mozilla.org/projects/htmlparser/rev/b0fe4ac38a02

[22:35:04.0000] <heycam>
a small python script invoking html5lib to output xhtml, then calling saxon from the cmdline

[22:36:00.0000] <heycam>
might be quicker to just involve java and avoid python by using validator.nu

[22:36:01.0000] <heycam>
probably marginal tho

[22:46:00.0000] <hsivonen>
now I've seen the third type of script loading browser sniffing: sniffing for "MSIE" and "Safari" and giving them safe code and giving unsfae code to all other browsers :-(

[23:16:00.0000] <zcorpan>
<http://www.w3.org/mid/6E2EDBA33586754AB83E7D6B3C51CD0907478F⊙Twwnmc> i guess we're going to see more of that

[23:17:00.0000] <zcorpan>
also a nice way to get the score down for ie...

[23:30:00.0000] <zcorpan>
would be nice if aminutewithbrendan.com used <audio> (also in the feed)

[23:35:00.0000] <paul_irish>
instead of using an enclosure? or in addition?

[23:36:00.0000] <zcorpan>
what do you mean with enclosure?

[23:36:01.0000] <paul_irish>
the feed has a podcast style <enclosure> referencing the mp3. the site uses <audio> already.. just wondering what you're suggesting. 

[23:39:00.0000] <zcorpan>
ah. though opera doesn't support mp3, and only shows a link for <enclosure>...

[23:39:01.0000] <zcorpan>
i don't see <audio> in the source of the page

[23:40:00.0000] <zcorpan>
oh i see

[23:41:00.0000] <paul_irish>
https://amwb.s3.amazonaws.com/amwb.js he does it with jPlayer based on.. the something

[23:41:01.0000] <paul_irish>
anyway.. i'll tell Chris to use an audio element and enhance from there for great justice.

[23:43:00.0000] <zcorpan>
so i guess what i'd like is an <audio controls> in the body of the feed entries :)

[23:44:00.0000] <paul_irish>
yup. i think that makes sense.

[00:53:00.0000] <hsivonen>
hmm. looking at the html5lib tokenizer test changes, it seems that the U+0000 refactoring had interesting effects on the parse errors in the doctypes states

[00:55:00.0000] <jgraham>
abarth|nacl: Did you see my request to resync the webkit tests with html5lib?

[00:55:01.0000] <jgraham>
abarth|nacl: It seems like you have some tests for recent changes

[00:56:00.0000] <jgraham>
hsivonen: Yeah, I seem to recall cases that went from N -> N-1 parse errors since null was not handled specially where it would be dropped anyway

[00:56:01.0000] <jgraham>
Or something

[00:56:02.0000] <hsivonen>
jgraham: yeah

[01:28:00.0000] <hsivonen>
when did <option><span><option> change?

[01:28:01.0000] <hsivonen>
or has the V.nu parser been wrong all along when parsing that?

[01:33:00.0000] <zcorpan>
hsivonen: http://html5.org/tools/web-apps-tracker?from=5504&to=5505

[01:33:01.0000] <MrWax>
Does anyone know a good overview of new functions (the new JS in HTML5) like getElementByClassName() - functions that were normally used through a lib like jq  - but are now native?

[01:33:02.0000] <hsivonen>
zcorpan: no bug number :-(

[01:34:00.0000] <hsivonen>
unclear what problem this solves

[01:34:01.0000] <zcorpan>
hsivonen: there's a separate column for the bug number

[01:34:02.0000] <MrWax>
Well, I ment , stuff that was normally supposed to be handled with jq (like selecting element by class)

[01:34:03.0000] <hsivonen>
zcorpan: oh. nice

[01:38:00.0000] <annevk>
ooh, Microsoft discovered my quirks mode testcase

[01:39:00.0000] <annevk>
they're not gonna like the parser tests either I assume

[01:39:01.0000] <annevk>
or the spec for that matter when they realize the tests are right

[01:46:00.0000] <jgraham>
Yeah, that could be an… interesting discussion

[01:49:00.0000] <gsnedders>
TabAtkins: Happy birthday!

[01:50:00.0000] <jgraham>
Yo you

[01:50:01.0000] <jgraham>
To

[01:50:02.0000] <jgraham>
Oh god I suck

[02:34:00.0000] <annevk>
http://www.w3.org/2008/webapps/wiki/Testing_Requirements -- please fix jgraham / gsnedders / zcorpan / TabAtkins / anyone else with ideas about testing

[02:42:00.0000] <jgraham>
annevk: Note that pywebsocket itself is a known security risk

[02:43:00.0000] <annevk>
that's a bit too broad

[02:43:01.0000] <annevk>
risk in what way?

[02:44:00.0000] <jgraham>
I think it is open to remote code execution vunerabilities

[02:44:01.0000] <jgraham>
http://code.google.com/p/pywebsocket/issues/detail?id=65

[02:46:00.0000] <annevk>
I think the problem Tantek is seeing is more about public-html-a11y⊙wo as they cc that email address to bug reports and get everything single email

[02:46:01.0000] <annevk>
and maybe he does not realize that

[02:47:00.0000] <annevk>
jgraham, oh, that sounds problematic

[02:47:01.0000] <annevk>
add to the wiki?

[03:16:00.0000] <jgraham>
annevk: AFAICT i don't have access to that page

[03:20:00.0000] <annevk>
ftfy

[03:20:01.0000] <annevk>
(well, not the access, but the wiki text)

[04:09:00.0000] <hsivonen>
/me wonders if there's some tutorial out there that tells people to avoid document.write() and run HTML5-incompatible code in browsers whose UA string doesn't say "MSIE" or "Safari"

[04:10:00.0000] <hsivonen>
there are use cases where document.write() is the right answer

[04:30:00.0000] <aho>
lies! :v

[05:10:00.0000] <Workshiva>
hsivonen: You could instead claim that those use cases are the wrong answer to whatever problem they're solving :)

[06:28:00.0000] <hsivonen>
Bug filed by Hixie in a different era: https://bugzilla.mozilla.org/show_bug.cgi?id=1996

[06:29:00.0000] <Workshiva>
We have seen the enemy and he is us

[06:32:00.0000] <annevk>
it's the era when specifications were gold and critical thinking was so-so

[06:36:00.0000] <jgraham>
Also from several years before it became obvious that longdesc had failed

[06:38:00.0000] <hsivonen>
I just saw bugs where Hixie asked for http-equiv="Link" support and Link header support, too

[06:42:00.0000] <annevk>
surprised you never saw those before

[06:43:00.0000] <hsivonen>
annevk: I may have seen them before

[06:44:00.0000] <hsivonen>
I'm just amused by the percentage of Hixie-filed bugs in the still-open deps of the HTML 4.01 tracking bug

[07:38:00.0000] <annevk>
ooh hmm

[07:38:01.0000] <annevk>
my recollection skills failed

[07:38:02.0000] <annevk>
I wonder how we addressed that maxlength issue

[07:40:00.0000] <zcorpan>
wasn't the issue that pages use <input value="Foo" maxlength=2 name=x> and expect the form to be submittable?

[07:43:00.0000] <Rik`>
isn't it a reasonable expectation, given that HTML4 has no validation mechanism?

[07:43:01.0000] <zcorpan>
sure

[07:43:02.0000] <annevk>
well yeah, but I thought the .value case was included

[07:43:03.0000] <zcorpan>
submit() skips validation, maybe that solved some of the maxlength problems?

[07:45:00.0000] <annevk>
could be

[07:45:01.0000] <annevk>
making submit throw was a real problem

[08:40:00.0000] <TabAtkins>
gsnedders: Thanks!  Woo!

[08:40:01.0000] <TabAtkins>
/me wonders exactly when Facebook informed gsnedders of his birthday.  After midnight UK time, or after midnight California time?

[08:47:00.0000] <karlcow>
http://www.w3.org/Bugs/Public/show_bug.cgi?id=11326#c0

[08:47:01.0000] <karlcow>
hmm Cable tv

[12:34:00.0000] <MrWax>
i am looking to retrieve some websql databases i have created in a web page.. how can I retrieve these in chrome?>

[12:34:01.0000] <MrWax>
i was expecting to see something called 'Developer Tools -> Storage'

[12:35:00.0000] <cardona507>
use the chrome developer tools (command + option + i) then click on the storage tab

[12:37:00.0000] <cardona507>
MrWax: ^

[12:38:00.0000] <MrWax>
thanks

[12:38:01.0000] <cardona507>
no prob

[12:59:00.0000] <karlcow>
what is the state of implementation for CORS http://www.w3.org/TR/cors/ ?

[13:09:00.0000] <Rik`>
karlcow: I think all latest versions of browsers have support

[13:41:00.0000] <jgraham>
I think Opera doesn't

[13:41:01.0000] <jgraham>
karlcow: ^

[13:41:02.0000] <jgraham>
Unless we implemented it whilst I wasn't looking

[13:43:00.0000] <Rik`>
really ?

[13:43:01.0000] <karlcow>
yes jgraham that was my impression too

[13:46:00.0000] <annevk>
someone from Opera is just editing it

[13:54:00.0000] <cardona507>
TabAtkins: this seems great. Is there going to be a video?

[13:56:00.0000] <Peter->
Do you still need one? :P

[13:56:01.0000] <cardona507>
haha

[14:09:00.0000] <TabAtkins>
cardona507: Yeah, there'll be a video.  I'll tweet it when it arrives.

[14:10:00.0000] <cardona507>
sweetness

[14:10:01.0000] <cardona507>
that talk seems like a trip

[14:10:02.0000] <TabAtkins>
It was fun.

[14:12:00.0000] <paul_irish>
lol @ "a trip". Sylvain's tweet was a good time.

[14:12:01.0000] <TabAtkins>
Heh, yeah.

[14:35:00.0000] <gsnedders>
TabAtkins: After midnight in Europe/London

[14:36:00.0000] <TabAtkins>
gsnedders: kk, interesting.

[14:41:00.0000] <eighty4>
hey gsnedders mind answering a question?

[14:42:00.0000] <eighty4>
gsnedders: why is name used for forms? Seems like a lot extra markup for things. Why not just use ids for it?

[14:42:01.0000] <gsnedders>
eighty4: Legacy, and doing otherwise would break content.

[14:43:00.0000] <gsnedders>
eighty4: And no point in asking my in particular :)

[14:43:01.0000] <TabAtkins>
Ask whoever invented <form>.

[14:44:00.0000] <eighty4>
gsnedders: the "channel" is scary :)

[14:44:01.0000] <eighty4>
gsnedders: yeah, I get that it cant just be removed. But seems stupid that it was ever implemented

[14:45:00.0000] <TabAtkins>
@id didn't exist at the time that <form> was created.

[14:45:01.0000] <eighty4>
but as always I guess it was due to some smart thing I don't understand right now

[14:45:02.0000] <gsnedders>
What TabAtkins said.

[14:45:03.0000] <TabAtkins>
In fact, @name carried a decent chunk of the functionality that @id now does.

[14:46:00.0000] <eighty4>
TabAtkins: in that case it would have been nice if id replaced names use in html5, if name doesn't exist or sometning like that

[14:47:00.0000] <TabAtkins>
You can't ever "

[14:47:01.0000] <TabAtkins>
You can't ever "replace" on the web.  You can just make something better.

[14:47:02.0000] <eighty4>
yeah I know :/

[14:47:03.0000] <eighty4>
but sometime you just have to say *** legacy.

[14:47:04.0000] <gsnedders>
eighty4: replacing would break existing content, unless you had different behaviour for HTML5 v. legacy, and the three modes we have already are too many IMO

[14:48:00.0000] <gsnedders>
eighty4: And XHTML2 was the fuck legacy route

[14:50:00.0000] <eighty4>
and look how that turned out :/

[14:51:00.0000] <Aleoss>
TabAtkins: Wanna bet? There is lots of obsolete attribute in HTML elements.

[14:51:01.0000] <gsnedders>
eighty4: Indeed. Fuck legacy doesn't work on the web.

[14:51:02.0000] <gsnedders>
Aleoss: But how many have no affect on processing?

[14:51:03.0000] <eighty4>
gsnedders: fuck legacy never works :(

[14:51:04.0000] <eighty4>
but how nice wouldn't it be :)

[14:51:05.0000] <jgraham>
We replaced <spacer>!

[14:51:06.0000] <eighty4>
every 5 year ALL legacy is droped and everything is renewed

[14:51:07.0000] <gsnedders>
jgraham: Only NN (and its successor) ever supported it

[14:52:00.0000] <jgraham>
Yeah

[14:52:01.0000] <gsnedders>
So it's not like that was massively widely supported

[14:52:02.0000] <jgraham>
But that was Victory

[14:52:03.0000] <TabAtkins>
Aleoss: Yup, but they're rare compared to the language as a whole.  It all depends on uptake, and <form>'s @name usage obviously has *far* too much uptake to ever drop.

[14:52:04.0000] <jgraham>
We don't get that very often

[14:52:05.0000] <Aleoss>
<b>, <i>, <u> are all obsoleted. They still work for compatibility today, but in ~10 years I bet they will be completely removed from browser rendering of HTML objects.

[14:53:00.0000] <TabAtkins>
Uh, what?  You honestly think that browsers will stop rendering <b>, <i>, etc., thus harming the rendering of a substantial fraction of the trillion+ web pages existing today?

[14:53:01.0000] <gsnedders>
Aleoss: I bet they'll never be removed.

[14:53:02.0000] <TabAtkins>
(And <b> and <i> aren't obsoleted, anyway.)

[14:53:03.0000] <jgraham>
Hahaha

[14:53:04.0000] <jgraham>
In the nicest possible way

[14:54:00.0000] <Aleoss>
TabAtkins: Yes, CSS has superceded them.

[14:54:01.0000] <TabAtkins>
Aleoss: Your sentence doesn't make sense.

[14:55:00.0000] <Aleoss>
TabAtkins: It's like how Google stopped supporting IE6 a number of months back, as soon as that happened, lots of people got on that as well and said, "Ya, screw IE6."

[14:55:01.0000] <TabAtkins>
Yes, <b> is entirely described by a "b { font-weight: bold}" rule in the UA stylesheet.  And?

[14:55:02.0000] <TabAtkins>
Why would a browser ever remove that rule from their stylesheet?

[14:56:00.0000] <jgraham>
Out of all the problems in the world, the <b> and <i> element's continued existence is notable only for the amount of attention it gets compared to its notability

[14:56:01.0000] <Aleoss>
TabAtkins: I'm saying that <b> is deprecated and obsolete in favour of CSS's font-weight: bold;

[14:57:00.0000] <TabAtkins>
Aleoss: But it's not.  <b> is a perfectly valid and okay element today.  And it has value besides the styling (insofar as it indicates in markup something that is bolded in traditional visual display, but which doesn't otherwise have a specific element).

[14:57:01.0000] <Aleoss>
TabAtkins: Give it about 10 years or so and I bet that the major browsers won't even have <b> or <u> or <i>

[14:57:02.0000] <jgraham>
In truth, most "semantic" markup is angels-on-the-head-of-a-pin stuff

[14:58:00.0000] <TabAtkins>
Again, "won't even have <b>" *doesn't make sense*.

[14:58:01.0000] <jgraham>
some of it is useful though

[14:58:02.0000] <jgraham>
Aleoss: I would take you up n that bet. For real money and all

[14:58:03.0000] <TabAtkins>
<b> isn't something that browser have to specially handle, except insofar as they create a particular type of DOM node for it.  Outside of the DOM, <b> is just a <span> with a special rule in the UA stylesheet.

[14:58:04.0000] <TabAtkins>
I would also bet you real money.

[14:59:00.0000] <Aleoss>
jgraham: I don't care for betting, however, you'll see for yourself in ~10 years.

[15:00:00.0000] <jgraham>
Indeed I will. In particular I will see that browsers will render <b> as bold just like they did 10 years ago

[15:00:01.0000] <jgraham>
In order to support all the 25-yeay-old content

[15:00:02.0000] <jgraham>
*year

[15:00:03.0000] <jgraham>
That people will still expect to work in their 2020 web browser

[15:00:04.0000] <TabAtkins>
I just... I just don't understand why you even think it would be *worth* anything to stop rendering <b> as bold.  There is literally *zero* benefit, and a ton of cost.

[15:01:00.0000] <Philip`>
Aleoss: Browsers haven't even got rid of <xmp> yet, and that was deprecated before 1993

[15:01:01.0000] <jgraham>
(not to mention 10 year old content and 5 year old content or 1 year old content or entirely contemparary content)

[15:01:02.0000] <gsnedders>
Aleoss: <b> was deprecated by HTML 4.0 twelve years ago. A decade more is 22 years after deprecation. The web hasn't yet even been around for 22 years, and the longest things that have been deprecated have been for 17 years and are still supported. Why is this going to be so different?

[15:04:00.0000] <Aleoss>
TabAtkins: A better example is <menu> or <dir> or <center>. They aren't even valid in the HTML 4.0 spec nevermind the HTML 4.01 or later.

[15:04:01.0000] <jgraham>
Browsers even support <plaintext> and dropping support for that might not be world-endingly-awful

[15:04:02.0000] <gsnedders>
And plaintext was never in /any/ spec.

[15:04:03.0000] <gsnedders>
Oh, no, that's untrue.

[15:04:04.0000] <jgraham>
But this discussion is silly

[15:04:05.0000] <Aleoss>
https://secure.wikimedia.org/wikipedia/en/wiki/HTML_element#Document_body_elements

[15:06:00.0000] <Aleoss>
jgraham: According to that URL, <plaintext> was obsolete in HTML 2.0 and was never a HTML standard.

[15:06:01.0000] <gsnedders>
Aleoss: Yet browsers still support it.

[15:07:00.0000] <eighty4>
sorry for starting this debate :)

[15:07:01.0000] <TabAtkins>
Psh, not like we have anything better to do.

[15:08:00.0000] <gsnedders>
You mean talking about girls on IM isn't better? Oh shit — there goes all semblance of doing anything useful…

[15:10:00.0000] <Aleoss>
Why talk about girls? They're all the same, only difference is that some are more beautiful and use that to their own advantage.

[15:10:01.0000] <TabAtkins>
...

[15:11:00.0000] <gsnedders>
Some are cute and cuddly ^-^

[15:11:01.0000] <TabAtkins>
/me thinks that most are, personally, though of course he only actually cuddles with his wife.

[15:12:00.0000] <jgraham>
Aleoss: http://software.hixie.ch/utilities/js/live-dom-viewer/saved/705 <-- try in your favourite browser. You will find that <plaintext> is quite functional wikipedia notwithstanding

[15:13:00.0000] <jgraham>
/me thinks TabAtkins appraoch to determining cuddliness cannot be very scientific

[15:14:00.0000] <TabAtkins>
It's very scientific.  My instruments are just more accepting.

[15:14:01.0000] <gsnedders>
Hmm, maybe we should be talking about huggability than cuddliness

[15:14:02.0000] <jgraham>
For all you know most woment hide a variety of pointy weaponry about their person

[15:14:03.0000] <jgraham>
Which would make cuddling them lethal

[15:15:00.0000] <jgraham>
*women

[15:15:01.0000] <TabAtkins>
My experience does not back up that statement.

[15:15:02.0000] <jgraham>
Your experience is a sample of 1

[15:15:03.0000] <jgraham>
Not very scientific :)

[15:16:00.0000] <jgraham>
Is it obvious that I should be asleep already?

[15:16:01.0000] <TabAtkins>
My sample size was much larger in the past before public opinion required me to cut it down to a single specimen.

[15:16:02.0000] <jgraham>
Public opinion or your wife's opinion?

[15:16:03.0000] <TabAtkins>
I'll leave that to the media to decide.

[15:17:00.0000] <gsnedders>
/me just runs around cuddling everyone

[15:17:01.0000] <gsnedders>
(as jgraham can attest, even though he never wanted to be cuddled)

[15:17:02.0000] <TabAtkins>
But jgraham is inherently cuddly!

[15:18:00.0000] <jgraham>
You appear to be confusing me with paddington bear

[15:18:01.0000] <jgraham>
an easy mistake to make

[15:18:02.0000] <jgraham>
But I am not from Peru

[15:18:03.0000] <Dashiva>
You both speak English, though

[15:19:00.0000] <TabAtkins>
Dashiva's got you there.

[15:19:01.0000] <TabAtkins>
On a random note, my little brother is conducting extensive genetic studies of ghost/human hybrids in Sims 3.  His results are fascinating.

[15:21:00.0000] <eighty4>
gsnedders: ok, one more question :) 

[15:22:00.0000] <gsnedders>
eighty4: Ask the channel!

[15:22:01.0000] <gsnedders>
They're not scary.

[15:22:02.0000] <eighty4>
why not at least take one step in the right direction and say that in html5 if name is "missing" it should use id instaed

[15:22:03.0000] <gsnedders>
They don't bite!

[15:22:04.0000] <eighty4>
*instead.

[15:22:05.0000] <gsnedders>
eighty4: Content relies upon that not happening.

[15:22:06.0000] <gsnedders>
(Yes, seriously.)

[15:22:07.0000] <TabAtkins>
eighty4: Still not compatible with legacy content, which has plenty of form elements lying around with an id but no name.

[15:22:08.0000] <eighty4>
Just deciding that would likely make some people use it and would force new browsers to implement it

[15:23:00.0000] <eighty4>
TabAtkins: what would break?

[15:24:00.0000] <TabAtkins>
Some forms would submit more inputs than expected.

[15:24:01.0000] <eighty4>
oh...

[15:25:00.0000] <eighty4>
yeah, just realized that

[15:25:01.0000] <eighty4>
it could cause validation problems on the server side, stupid ><

[15:25:02.0000] <TabAtkins>
form-processing scripts are just remarkably fragile all around, sadly.

[15:26:00.0000] <eighty4>
I still say, fuck legacy. It'st just stupid to strive for perfect legacy support. Imagine 100 years from now :P

[15:26:01.0000] <gsnedders>
Then you end up with IE6.

[15:26:02.0000] <eighty4>
and now it's time to sleep, 00.31 here. Way to late

[15:26:03.0000] <gsnedders>
The later versions break legacy content, so people keep using the old browser.

[15:27:00.0000] <eighty4>
gsnedders: ie7 is still broken just to support ie6 code

[15:27:01.0000] <gsnedders>
So even all browsers at once making the breaking change doesn't help

[15:27:02.0000] <eighty4>
the net would need a total reinstall every 5 year. I say wipe it all!

[15:27:03.0000] <eighty4>
except for actual data, that is

[15:27:04.0000] <eighty4>
and recode it all!

[15:28:00.0000] <TabAtkins>
There are a trillion pages in existence, most of which depend on stupid legacy behavior in some form or another.  Are you really willing to say "Hey everybody, start using this new browser which won't correctly render any of those trillion pages!"?

[15:28:01.0000] <eighty4>
Would make our work a lot simpler :P end the demand for webdevs a lot bigger

[15:28:02.0000] <TabAtkins>
Breaking windows to make work for the glassmaker isn't a net plus for the village.  ^_^

[15:28:03.0000] <eighty4>
TabAtkins: no, I know :/

[15:29:00.0000] <eighty4>
it's not a solution, but at least let me dream about it

[15:29:01.0000] <TabAtkins>
Legacy sucks, but that's how the world works.  Shrug.  Make the best of it.

[15:29:02.0000] <eighty4>
TabAtkins: well, it's not really how the rest of the world works. Is it?

[15:31:00.0000] <eighty4>
hardware doesn't really work that way, computers don't come with a 5.25'' just to not break legacy. No one have walkmans any more

[15:31:01.0000] <eighty4>
and so on

[15:31:02.0000] <TabAtkins>
Sure it is.  The only difference is that the rest of the world has decay as a force that helps them obsolete stuff.

[15:31:03.0000] <TabAtkins>
Bitrot isn't quite the same thing as decay.  ^_^

[15:32:00.0000] <eighty4>
so you're saying we need more decay on the web?

[15:32:01.0000] <eighty4>
but NOW i need to sleep. Later!

[15:32:02.0000] <gsnedders>
And then they turn into zombies and — SHIT! THEY'RE COMING!


2010-11-17
[22:34:00.0000] <hsivonen>
gsnedders: HTML 4 didn't deprecate <b>! beware of the propaganda!

[00:39:00.0000] <MikeSmith>
hsivonen: 

[00:39:01.0000] <MikeSmith>
./htmlparser/src/nu/validator/htmlparser/impl/Tokenizer.java:38: cannot find symbol

[00:39:02.0000] <MikeSmith>
symbol  : class Auto

[00:39:03.0000] <MikeSmith>
location: package nu.validator.htmlparser.annotation

[00:39:04.0000] <MikeSmith>
import nu.validator.htmlparser.annotation.Auto;

[00:39:05.0000] <MikeSmith>
                                          ^

[00:39:06.0000] <MikeSmith>
./htmlparser/src/nu/validator/htmlparser/impl/Tokenizer.java:39: cannot find symbol

[00:39:07.0000] <MikeSmith>
symbol  : class CharacterName

[00:39:08.0000] <MikeSmith>
location: package nu.validator.htmlparser.annotation

[00:39:09.0000] <MikeSmith>
import nu.validator.htmlparser.annotation.CharacterName;

[00:39:10.0000] <MikeSmith>
                                          ^

[00:40:00.0000] <MikeSmith>
etc.

[00:41:00.0000] <hsivonen>
MikeSmith: hmm. have I forgotten to hg add stuff...

[00:41:01.0000] <MikeSmith>
yeah, figured that might be it

[00:41:02.0000] <hsivonen>
yes, I have. I suck. sorry

[00:41:03.0000] <MikeSmith>
no problem man :)

[00:42:00.0000] <MikeSmith>
no loss of life caused

[00:42:01.0000] <MikeSmith>
yet

[00:44:00.0000] <hsivonen>
MikeSmith: added & pushed

[00:45:00.0000] <MikeSmith>
thanks

[00:45:01.0000] <MikeSmith>
/me rebuilds

[00:46:00.0000] <MikeSmith>
hsivonen: ah, back to still getting these:

[00:46:01.0000] <MikeSmith>
./htmlparser/src/nu/validator/htmlparser/impl/TreeBuilder.java:1229: method does not override a method from its superclass

[00:46:02.0000] <MikeSmith>
    @Override public void zeroOriginatingReplacementCharacter()

[00:46:03.0000] <MikeSmith>
     ^

[00:46:04.0000] <MikeSmith>
./htmlparser/src/nu/validator/htmlparser/impl/TreeBuilder.java:5220: method does not override a method from its superclass

[00:46:05.0000] <MikeSmith>
    @Override public boolean cdataSectionAllowed() throws SAXException {

[00:46:06.0000] <MikeSmith>
     ^

[00:47:00.0000] <hsivonen>
let's see...

[00:51:00.0000] <hsivonen>
MikeSmith: how about now?

[00:52:00.0000] <hsivonen>
/me wonders why the compiler wasn't whining at me

[00:53:00.0000] <annevk>
http://www.benedelman.org/hardcoding/ -- not unexpected

[00:57:00.0000] <hsivonen>
MikeSmith: now I see what's happening. I'm using Java 1.6 compiler and you are probably using a Java 1.5 compiler

[00:58:00.0000] <hsivonen>
MikeSmith: and the semantics of @Override changed between 1.5 and 1.6 to allow the use that I had in the source file

[01:01:00.0000] <MikeSmith>
hsivonen: yeah

[01:06:00.0000] <MrWax>
does anyone have an overview of the new css3 attributes that come with html5?

[01:08:00.0000] <roc>
MrWax: CSS3 is not part of HTML5

[01:09:00.0000] <MrWax>
Well, a lot people seem to define CSS3 WITH the HTML5 standard

[01:09:01.0000] <MrWax>
i know its not the same

[01:09:02.0000] <ako>
http://www.brucelawson.co.uk/2010/meet-newt-new-exciting-web-technologies/

[01:09:03.0000] <ako>
NEWT :>

[01:19:00.0000] <annevk>
MrWax, but now you're asking people defining the HTML5 standard

[01:28:00.0000] <annevk>
it seems we need to set up our own charset registry

[01:28:01.0000] <annevk>
reasoning with these guys is not really feasible

[01:29:00.0000] <annevk>
tried twice now

[01:29:01.0000] <annevk>
i actually think it should just be one spec that has all the mappings

[01:29:02.0000] <annevk>
no registry needed

[01:29:03.0000] <annevk>
it's all legacy anyway

[01:30:00.0000] <hsivonen>
annevk: who are "these guys"

[01:30:01.0000] <hsivonen>
/me is lacking context

[01:31:00.0000] <hsivonen>
oh charset registry

[02:19:00.0000] <annevk>
is markp member of the WG?

[02:19:01.0000] <annevk>
I think that is another req

[02:19:02.0000] <jgraham>
Oh, it could be

[02:20:00.0000] <jgraham>
If not he should join

[02:20:01.0000] <jgraham>
Or get someone else to do the commit

[02:20:02.0000] <annevk>
http://www.w3.org/2000/09/dbwg/details?group=40318&public=1 -- he is not

[02:22:00.0000] <jgraham>
/me will self-reply

[03:07:00.0000] <annevk>
hmm, CSS blog uses en-EU

[03:08:00.0000] <erlehmann>
can anyone tell me what difference gecko and webkit have so that webkit does load the script and gecko (20100916) does not? http://daten.dieweltistgarnichtso.net/src/blinkenworld/index.html

[03:22:00.0000] <hsivonen>
annevk: it's a valid language tag

[03:22:01.0000] <jgraham>
/me is lost in WebIDL (again)

[03:23:00.0000] <hsivonen>
erlehmann: OpenLayers does UA sniffing for "Safari" and "MSIE"

[03:23:01.0000] <jgraham>
Where does it define how readonly maps into ECMAScript

[03:23:02.0000] <hsivonen>
erlehmann: Firefox 4 has neither of those substrings, so the script breaks

[03:23:03.0000] <jgraham>
i.e. which ES properties it corresponds to

[03:23:04.0000] <hsivonen>
erlehmann: http://trac.osgeo.org/openlayers/ticket/2933

[03:24:00.0000] <annevk>
hsivonen, can you do en-NL and such too?

[03:24:01.0000] <annevk>
or en-FI

[03:24:02.0000] <hsivonen>
annevk: sure

[03:24:03.0000] <erlehmann>
hsivonen, UA sniffing bad. but this does not seem to be my problem?

[03:24:04.0000] <annevk>
good times

[03:25:00.0000] <hsivonen>
erlehmann: I don't know of other problems with OpenLayers

[03:26:00.0000] <erlehmann>
>please run the document.write()-based code path in all browsers

[03:26:01.0000] <erlehmann>
ahahahaha

[03:28:00.0000] <hsivonen>
well, if you want to block the parser, document.write is what HTML5 gives you

[03:28:01.0000] <erlehmann>
hsivonen, you seem to be an expert on javascript execution order. is there any gooy way to ensure that OpenLayers is loaded until I load my script?

[03:29:00.0000] <hsivonen>
erlehmann: ooh. you have defer in there

[03:29:01.0000] <hsivonen>
erlehmann: that won't work 

[03:29:02.0000] <hsivonen>
*never* use defer on a script that might call document.write

[03:30:00.0000] <hsivonen>
and we know this script calls document.write in some cases

[03:30:01.0000] <erlehmann>
i didn't.

[03:30:02.0000] <erlehmann>
hmmpf

[03:31:00.0000] <hsivonen>
erlehmann: is there an OpenLayers tutorial recommending defer, or did you use defer on your own initiative?

[03:31:01.0000] <erlehmann>
i thought it was some canvas based solution. until i looked. will probably encounter many more “interesting” things.

[03:32:00.0000] <erlehmann>
hsivonen, i used it on my own initiative because i wanted to defer script execution. after all, the document should be fully ready, my thought.

[03:32:01.0000] <jgraham>
OK, lazyirc, is there any reason that calling delete on a readonly property should not return false? Assuming we are not in strict mode.

[03:32:02.0000] <hsivonen>
erlehmann: anyway, I can't answer your question  with certainty without examining all the code in OpenLayers, but my guess is your script will load after OpenLayers if you remove defer from both

[03:32:03.0000] <jgraham>
e.g. delete document.body

[03:33:00.0000] <hsivonen>
erlehmann: defer is rarely any good

[03:33:01.0000] <hsivonen>
erlehmann: it still defers the load event, so it doesn't help with perceived performance

[03:33:02.0000] <hsivonen>
erlehmann: defer mainly exists for backwards compat at this point

[03:34:00.0000] <hsivonen>
async actually makes sense for some use cases, but unfortunately async scripts are specced to delay the load event, too

[03:34:01.0000] <erlehmann>
hsivonen, i removed it, but it does not seem to help. thanks anyway

[03:35:00.0000] <hsivonen>
erlehmann: not helping in which browser?

[03:36:00.0000] <erlehmann>
firefox 3.6

[03:37:00.0000] <hsivonen>
oh. 3.6

[03:37:01.0000] <hsivonen>
no idea what's going on then

[03:37:02.0000] <hsivonen>
erlehmann: if you put "Safari" in your UA string, does the script work?

[03:40:00.0000] <hsivonen>
jgraham: fwiw, my support case about the Ubuntu jumpiness got closed without any real solution except not trying to do so much stuff on this hardware

[03:41:00.0000] <hsivonen>
jgraham: however, on the linux kernel mailing list, there's now a patch that could make my case better

[03:41:01.0000] <hsivonen>
jgraham: so the options seem to be waiting for natty or do-it-your-self kernel patching and compiling

[03:42:00.0000] <virtuelv>
HTMLMediaElement.playbackRate fails to define what should happen to the audio when increasing the playback rate

[03:42:01.0000] <erlehmann>
hsivonen, changes nothing. seems to be something else that makes OpenLayers not werk.

[03:43:00.0000] <hsivonen>
erlehmann: ok

[03:43:01.0000] <hsivonen>
virtuelv: worth filing a spec bug, I guess

[03:43:02.0000] <virtuelv>
hsivonen: probably, but I'm unsure which is the right behavior

[03:44:00.0000] <virtuelv>
for me, it would have been decidedly useful if the playback rate altered the pitch, instead of working as a timestretch

[03:44:01.0000] <virtuelv>
but I can see why this is not sensible for the general case

[03:47:00.0000] <jgraham>
hsivonen: yeah, I saw think thing about the kernel patch

[03:47:01.0000] <jgraham>
*the thing

[03:47:02.0000] <erlehmann>
hsivonen, got it. openlayers cannot into empty divs.

[03:48:00.0000] <erlehmann>
if i insert a node, everything is fine.

[03:48:01.0000] <erlehmann>
weird.

[03:48:02.0000] <erlehmann>
even a text node does work.

[03:48:03.0000] <erlehmann>
:(

[04:33:00.0000] <zcorpan>
i wonder if mozilla people can agree on whining in the error console for websockets

[04:56:00.0000] <hsivonen>
http://www.w3.org/Bugs/Public/show_bug.cgi?id=11326 looks so totally out of scope to me

[04:57:00.0000] <hsivonen>
esp. considering the drive to LC

[04:58:00.0000] <annevk>
it's filed after the LC date

[05:22:00.0000] <virtuelv>
hsivonen: that proposal looks like it belongs in at least a number of other wg's

[05:23:00.0000] <virtuelv>
probably webapps

[05:24:00.0000] <virtuelv>
or even an entirely new WG

[05:24:01.0000] <hsivonen>
virtuelv: is the proposal asking for features one would put in a general purpose browser?

[05:25:00.0000] <hsivonen>
virtuelv: or is it asking for features one would put in a set top box that reuses a browser engine to implement a cable TV UI?

[05:26:00.0000] <virtuelv>
I see the value in having local service discovery in a local browser

[05:26:01.0000] <virtuelv>
s/local/general purpose/

[05:26:02.0000] <hsivonen>
I see. I hope the local services aren't trying to be entangled into MPEG stuff

[05:26:03.0000] <virtuelv>
so, say you have a web-based media player service

[05:26:04.0000] <hsivonen>
(4 or 2)

[05:27:00.0000] <virtuelv>
the local media server could potentially offer video sources for playback through the browser

[05:27:01.0000] <hsivonen>
virtuelv: so if you have a local box that serves WebM video, you could already navigate to it, no?

[05:28:00.0000] <virtuelv>
hsivonen: the point is that your local videos could be directly integrated with youtube

[05:29:00.0000] <virtuelv>
so: go to youtube, see a mix of local and remote media in the sidebar

[05:29:01.0000] <hsivonen>
virtuelv: oh.

[05:29:02.0000] <Philip`>
It sounded to me like a general purpose desktop browser should be able to discover set top boxes on the local network, so e.g. you could visit a TV channel's web site and it could find you've got a box and do <video src="rtmp://192.168.12.34"> and call some API to tell the box to switch to the right channel, or something

[05:29:03.0000] <virtuelv>
that, however, sounds downright scary

[05:29:04.0000] <virtuelv>
and/or fun

[05:30:00.0000] <Philip`>
(with appropriate security controls etc)

[05:30:01.0000] <virtuelv>
then again, I am only commenting on the UPnP service discovery part here, not that

[05:32:00.0000] <hsivonen>
my knee-jerk reaction is that it sounds scary that a Web site out there could query for services on the other side of the firewall

[05:32:01.0000] <hsivonen>
even with user authorization

[05:39:00.0000] <heycam>
jgraham, if you didn't get an answer earlier: readonly attributes in IDL currently map to configurable accesor properties with a getter but no setter

[05:39:01.0000] <heycam>
jgraham, and thus calling delete on them will succeed

[05:40:00.0000] <heycam>
(previously, when Web IDL targetted ES3, these properties were ReadOnly ones and you couldn't delete them)

[05:41:00.0000] <hsivonen>
what would be a good tool for creating nice-looking flowcharts in SVG?

[05:42:00.0000] <hsivonen>
stuff like http://hsivonen.iki.fi/doctype/ie8-mode.png but in SVG

[05:42:01.0000] <heycam>
hsivonen, hmm not really sure. i know lots of people like OmniGraffle for mac. (which i believe can output SVG.)

[05:42:02.0000] <hsivonen>
heycam: last time I tried OmniGraffle Pro, its SVG export was rather broken

[05:42:03.0000] <heycam>
hsivonen, was that done with graphviz?

[05:42:04.0000] <hsivonen>
maybe I should try again

[05:42:05.0000] <hsivonen>
heycam: OmniGraffle non-Pro

[05:42:06.0000] <heycam>
ah

[05:42:07.0000] <paul_irish>
http://svg-edit.googlecode.com/svn/trunk/editor/svg-editor.html maybe?

[05:43:00.0000] <annevk>
that is kind of neat

[05:43:01.0000] <hsivonen>
paul_irish: looks like a generic drawing tool. does it support anchoring lines to flowchart boxes?

[05:43:02.0000] <annevk>
even supports fn+backspace

[05:44:00.0000] <paul_irish>
i doubt it. :)

[05:47:00.0000] <hsivonen>
hmm. $99.95 for SVG export...

[05:47:01.0000] <jgraham>
heycam: In what sense suceed?

[05:47:02.0000] <jgraham>
*succeed

[05:47:03.0000] <hsivonen>
(upgrade from OmniGraffle 5 to 5 Pro)

[05:47:04.0000] <heycam>
jgraham, succeed as in return true and remove the property

[05:47:05.0000] <heycam>
hsivonen, ouch

[05:47:06.0000] <jgraham>
heycam: That seems very wrong

[05:47:07.0000] <jgraham>
delete document.body shouldn't have any effect

[05:48:00.0000] <jgraham>
But it should return true

[05:48:01.0000] <jgraham>
AFAICT

[05:48:02.0000] <jgraham>
So I am very confused

[05:48:03.0000] <heycam>
jgraham, orly?

[05:48:04.0000] <heycam>
/me thinks a bit

[05:49:00.0000] <heycam>
does the delete operator only delete own properties?

[05:49:01.0000] <jgraham>
heycam: http://software.hixie.ch/utilities/js/live-dom-viewer/saved/706

[05:49:02.0000] <jgraham>
Good question; I will look

[05:50:00.0000] <heycam>
because Web IDL now specifies that the accessor properties for IDL attributes go on the prototype

[05:53:00.0000] <jgraham>
heycam: Ah, it does seem to be an own property only operation

[05:54:00.0000] <heycam>
jgraham, ok cool then no problem :)

[05:54:01.0000] <jgraham>
So delete document.__proto__.body should work?

[05:54:02.0000] <heycam>
yes

[05:57:00.0000] <jgraham>
http://software.hixie.ch/utilities/js/live-dom-viewer/saved/707

[05:57:01.0000] <jgraham>
heycam: Did I do something wrong?

[05:58:00.0000] <heycam>
jgraham, no but probably the spec doesn't match all browsers yet

[05:58:01.0000] <gsnedders>
jgraham: Do you foresee anyone actually making use of a expected_results field?

[06:14:00.0000] <jgraham>
heycam: Is it desirable to be able to delete DOM properties from the prototype?

[06:51:00.0000] <heycam>
jgraham, it's desirable that they can be reconfigured -- just as you can overwrite the properties that correspond to IDL operations

[06:54:00.0000] <jgraham>
heycam: Why?

[06:54:01.0000] <jgraham>
It seems like it would be poor form to ever write a script that actually did that

[06:54:02.0000] <heycam>
jgraham, so you can do monkey patching of the dom

[06:55:00.0000] <jgraham>
Hmm

[06:55:01.0000] <jgraham>
Anyway, I have way I need

[06:55:02.0000] <jgraham>
*what

[06:55:03.0000] <heycam>
ok

[06:55:04.0000] <heycam>
someone was suggesting that a select few properties would be non-configurable

[06:55:05.0000] <matjas>
Does anyone know why/when the text/javascript MIME type was declared “obsolete”? http://tools.ietf.org/html/rfc4329#section-7.1

[06:55:06.0000] <heycam>
like window.location (i think)

[06:56:00.0000] <matjas>
annevk: I’ve read your old blog posts (plural) on the JavaScript MIME type but couldn’t find the answer there

[06:56:01.0000] <jgraham>
heycam: (thanks, btw :)

[06:56:02.0000] <heycam>
jgraham, np :)

[06:57:00.0000] <jgraham>
matjas: I think it is some silly reason like people thinking it is prettier to use application/ for scripts

[06:58:00.0000] <zcorpan>
isn't the reason the same as text/xml being deprecated?

[06:58:01.0000] <matjas>
jgraham: I couldn’t think of any good reason either. text/javascript has great browsers support, according to http://krijnhoetmer.nl/stuff/javascript/mime-types/

[06:58:02.0000] <matjas>
zcorpan: What was the reason for that?

[06:59:00.0000] <annevk>
JavaScript media types are somewhat messed up

[06:59:01.0000] <zcorpan>
matjas: encoding must be us-ascii if there's no charset= parameter, according to some RFC

[06:59:02.0000] <annevk>
servers do not need to use them, for instance

[07:01:00.0000] <zcorpan>
matjas: in practice, nobody implements the us-ascii requirement, servers traditionally use application/x-javascript for .js files, browsers ignore the server-provided mime type completely for <script src>, and <script type> has best browser compat with text/javascript (or omitted type altogether)

[07:02:00.0000] <matjas>
annevk: Oh, the MIME type can be blank? Would be interesting to test browser support for that. 

[07:03:00.0000] <matjas>
zcorpan: I don’t understand the reasoning there. charset (as specified through the Content-Type header) has nothing to do with the plain MIME type AFAICS

[07:05:00.0000] <zcorpan>
matjas: yes it does. for text/* the default encoding (according to the unimplemented RFC, don't know the number) is us-ascii unless the charset parameter is set, and the message body can't override it

[07:06:00.0000] <zcorpan>
http://tools.ietf.org/html/rfc2046 has the us-ascii requirement

[07:06:01.0000] <MikeSmith>
hsivonen: thanks for the parser changes

[07:07:00.0000] <MikeSmith>
everything seems to be working as expected now

[07:07:01.0000] <zcorpan>
http://tools.ietf.org/html/rfc3023 has details around text/xml

[07:08:00.0000] <hsivonen>
MikeSmith: nice

[07:08:01.0000] <MikeSmith>
I'm updating the validator.w3.org instances now

[07:09:00.0000] <MikeSmith>
they were pretty far out of date with upstream

[07:09:01.0000] <matjas>
zcorpan: I see. Thanks for your explanation.

[07:12:00.0000] <zcorpan>
matjas: http 1.1 has a different encoding default, and the html and css specs require that the message body can set the encoding for text/html and text/css (actually text/css and text/javascript can inherit the encoding from the embedding document)

[07:13:00.0000] <zcorpan>
matjas: so what mime and http 1.1 say are mostly academic since higher level specs don't follow it (except text/xml, but nobody implements it that way)

[07:18:00.0000] <hsivonen>
bah. gedit can't handle named-character-references.html from the multipage spec

[07:18:01.0000] <hsivonen>
crashed

[07:32:00.0000] <matjas>
zcorpan: So basically, text/javascript can still be used, even though it’s officially “obsolete”.

[07:33:00.0000] <matjas>
It doesn’t really matter much, but `text/javascript` is obviously shorter than `application/javascript` or `application/x-javascript`.

[07:33:01.0000] <matjas>
Good to know!

[07:35:00.0000] <zcorpan>
matjas: yeah. my conclusion is "don't touch the server config for .js files since it doesn't matter anyway" and "just use "<script>", type="" is not necessary"

[07:36:00.0000] <matjas>
I knew about the latter ;)

[08:30:00.0000] <Philip`>
About submitting tests: Given that it's a DVCS, maybe mpilgrim should just push to a public copy of the repository and then someone with W3C access can push them across

[08:30:01.0000] <Philip`>
Seems a bit silly to get hung up by lack of access permissions

[08:32:00.0000] <zcorpan>
"2. Microsoft engineers working on Internet Explorer 9 could have been using the SunSpider Benchmark and unintentionally over-optimized the JavaScript engine for the SunSpider Benchmark." - http://digitizor.com/2010/11/17/internet-explorer-9-caught-cheating-in-sunspider-benchmark/

[08:32:01.0000] <zcorpan>
how can you over-optimize something?

[08:32:02.0000] <jgraham>
People seem a bit concerned about having the logs correspond to who submitted what

[08:32:03.0000] <jgraham>
zcorpan: If you optimize for a specific case at the expense of the general case

[08:33:00.0000] <jgraham>
It's a classic thing to do wrong in machine learning

[08:33:01.0000] <jgraham>
where you make something that works perfectly for the training data but poorly for other data

[08:34:00.0000] <zcorpan>
ah. ok.

[08:35:00.0000] <jgraham>
(I am not really sure why people are worried about the accuracy of the logs or whether having someone else push mpilgrim's changes would be a problem)

[10:59:00.0000] <tabatkin1>
Hixie: You around?

[11:00:00.0000] <annevk>
hsivonen, did you donate in a way that made money not show up at local chapters?

[11:01:00.0000] <annevk>
hsivonen, I am undecided yet, but I do not really care for my money ending up at the Dutch chapter of Wikipedia

[11:02:00.0000] <annevk>
anyone taken a look at what markp submitted?

[11:43:00.0000] <annevk>
omg so much grandstanding again in http://blogs.msdn.com/b/ie/archive/2010/11/17/html5-and-real-world-site-performance-seventh-ie9-platform-preview-available-for-developers.aspx

[11:45:00.0000] <miketaylr>
i like how html5 is the first word...for an article on chakra

[11:48:00.0000] <jgraham>
I like the fact that they bemoan microbenchmarks and then only present sunspider results, the microest of all microbenchmarks

[11:49:00.0000] <jgraham>
If there was any more irony, the article would have serious problems walking past magnets

[11:55:00.0000] <espadrine>
Just been on http://ie.microsoft.com/testdrive/, and there it was, written in big bitmap letters, "Cool, you're using a Chrome 9 nighly build!" But what exactly would have been "un-cool"? Internet Explorer.

[11:56:00.0000] <jgraham>
mpilgrim: It looks like you just changed the mode of some Microsoft tests to me. Or did I miss something

[11:57:00.0000] <mpilgrim>
ah, that would explain it

[11:57:01.0000] <mpilgrim>
i've backed it out

[11:57:02.0000] <mpilgrim>
and will resubmit from a fresh clone

[11:59:00.0000] <jgraham>
The new values looked more sensible :)

[11:59:01.0000] <mpilgrim>
i was testing privately on a remote server and running into permission problems

[12:00:00.0000] <mpilgrim>
some of my tests re-use Microsoft's common/media.js to get a supported video or audio URI

[12:05:00.0000] <jgraham>
Hmm, I see that it is not sufficiently obvious how I intended the harness to be used

[12:05:01.0000] <jgraham>
This is my fault of course

[12:07:00.0000] <jgraham>
But there are clearly cases where more of the test setup could be in the step()

[12:07:01.0000] <karlcow>
http://norman.walsh.name/2010/11/17/deprecatingXML

[12:14:00.0000] <mpilgrim>
jgraham: i am happy to update tests if i'm using the harness incorrectly, or even just suboptimally

[12:15:00.0000] <mpilgrim>
presumably these will be rolled into an actual harness someday

[12:15:01.0000] <mpilgrim>
all the tests i just submitted were designed to be run automatically

[12:16:00.0000] <mpilgrim>
but i haven't done anything wild and crazy like actually testing that or anything

[12:17:00.0000] <jgraham>
mpilgrim: It is mostly a style point. My "vision" (although it was really nothing so grandiose) was that one would wrap almost all code for a particular test in either test.step(function(){}) or test(function(){}) (for sync tests)

[12:18:00.0000] <jgraham>
That way unexpected failures in some part of the setup code would be caught by the harness and other tests on the page could still run

[12:18:01.0000] <mpilgrim>
i am happy to do that

[12:18:02.0000] <mpilgrim>
but i've opted for one test per page

[12:18:03.0000] <jgraham>
I like one test per page :)

[12:19:00.0000] <jgraham>
But it doesn't always make sense

[12:19:01.0000] <mpilgrim>
as it will make submitting bugs easier

[12:19:02.0000] <jgraham>
e.g. if you are autogenerating 10,000 tests from some javascript

[12:19:03.0000] <jgraham>
Making 10,000 files a quite the overhead

[12:20:00.0000] <jgraham>
So the harness(which should have been called framework) supports both

[12:20:01.0000] <jgraham>
/me remembers that the reason it was not called "testframework.js" was that we already had something with that name on an internal server

[12:20:02.0000] <mpilgrim>
yes, i saw AryehGregor's reflection tests

[12:21:00.0000] <jgraham>
:)

[12:21:01.0000] <mpilgrim>
one file that generates enough tests to expose a dozen bugs in 3 browsers... that's impressive

[12:22:00.0000] <mpilgrim>
so far i've only found bugs in IE

[12:22:01.0000] <mpilgrim>
and webkit, only insofar as we don't support the <video audio> attribute yet

[12:23:00.0000] <mpilgrim>
no, i take it back, i found 1 bug in opera

[12:23:01.0000] <mpilgrim>
tests/submission/Google/video/canPlayType/canPlayType_application_octet_stream.html

[12:23:02.0000] <mpilgrim>
fails in opera

[12:23:03.0000] <zcorpan>
that's known :)

[12:24:00.0000] <zcorpan>
(the spec used to require 'maybe' for that case)

[12:24:01.0000] <mpilgrim>
yes, it's a strange thing

[12:24:02.0000] <mpilgrim>
my test case was actually the exact opposite until i read the spec three more times

[12:25:00.0000] <zcorpan>
heh

[12:25:01.0000] <mpilgrim>
in one place it says "The MIME type "application/octet-stream" with no parameters is never a type that the user agent knows it cannot render."

[12:25:02.0000] <mpilgrim>
but elsewhere it says "The canPlayType(type) method must return the empty string if type is a type that the user agent knows it cannot render or is the type "application/octet-stream""

[12:26:00.0000] <mpilgrim>
tests are hard

[12:27:00.0000] <mpilgrim>
let's create a grammar to express assertions and replace the spec with a bunch of those

[12:28:00.0000] <espadrine>
seems like the complexity is externalized to the spec in this case!

[12:31:00.0000] <zcorpan>
mpilgrim: some tests have 30 or 60 seconds timeout if i'm reading it right. do they need to be that long?

[12:32:00.0000] <mpilgrim>
make media.w3.org faster

[12:32:01.0000] <mpilgrim>
whoa

[12:33:00.0000] <mpilgrim>
apparently when you join the working group, you start getting email

[12:33:01.0000] <mpilgrim>
i was wondering where i had gone wrong in my life that roy fielding was in my inbox

[12:34:00.0000] <mpilgrim>
Matches: list:"<public-html.w3.org>" Do this: Skip Inbox

[12:37:00.0000] <annevk>
:)

[13:21:00.0000] <zcorpan>
http://www.favbrowser.com/browser-adoption-rate-looks-good/ - i wonder how much of the "other versions" is nightly/alpha/beta/dev of the *next* release

[13:55:00.0000] <jgraham>
zcorpan: I'm pretty sure it is almost none

[13:56:00.0000] <jamesr_>
i hope they mean chrome >= 7.0

[13:58:00.0000] <Hixie>
hsivonen: yeah, those bugs were filed in the same era that i was in support of xhtml2 and where acid2 was written assuming we couldn't change the spec

[13:58:01.0000] <Hixie>
and where i thought quirks mode was a good idea

[13:58:02.0000] <Hixie>
and where dbaron and i thought the way to fix css was to define the inline box model and margin collapsing to be what CSS2 implied it had to be, rather than doing something compatible with UAs

[14:02:00.0000] <jgraham>
Hixie: This multi-day lag is confusing. It's like getting echos from the past

[14:02:01.0000] <Hixie>
heh

[14:02:02.0000] <Hixie>
sorry, was offlien yesterday

[14:02:03.0000] <Hixie>
offline, too

[14:03:00.0000] <jgraham>
:)

[14:04:00.0000] <jgraham>
jamesr_: Why would you assume that? They explicitly say "equal to"

[14:04:01.0000] <jamesr_>
well that would mean their article is worthless

[14:05:00.0000] <jgraham>
It doesn't even seem to properly account for point releases

[14:05:01.0000] <jgraham>
Their article probably is worthless, but not because some tiny fraction of people are running dev versions

[14:06:00.0000] <jamesr_>
the % of chrome users running 6.0 and lower is way less than 10%

[14:07:00.0000] <jgraham>
Well if you already know that, the article is clearly worthless because you already know the result :)

[14:07:01.0000] <jamesr_>
i only know the %s for chrome

[14:08:00.0000] <jgraham>
Well they claim that 90% of people run chrome exactly equal to 7

[14:08:01.0000] <jgraham>
If that doesn't match your numbers then one or both of you are wrong

[14:09:00.0000] <TabAtkins>
I'm confused: http://www.w3.org/Bugs/Public/show_bug.cgi?id=11333  What the hell does that even mean?

[14:09:01.0000] <jamesr_>
there's a decent number of users on chrome 8 and chrome 9 currently

[14:10:00.0000] <zcorpan>
TabAtkins: i read it to mean that "title" is outdated (no idea why), and thus we should mint another name

[14:11:00.0000] <jamesr_>
who filed that?

[14:13:00.0000] <TabAtkins>
jamesr_: Someone random.

[14:16:00.0000] <jgraham>
TabAtkins: If you are going to try to decipher every lunatic bug report, we could be here a while

[14:16:01.0000] <TabAtkins>
I was wondering if it was a lunatic, or it was actually saying something reasonable.

[14:17:00.0000] <jgraham>
Well given that they appear to want to rename the <title> tag for no particular reason, my crankometer is showing a definite reading

[14:19:00.0000] <Philip`>
I assumed they meant title="", not <title>

[14:20:00.0000] <jgraham>
Would that explain why it is filed agianst the 2d context spec?

[14:21:00.0000] <jgraham>
(I guess @title would make marginally more sense than <title>. But not a lot more)

[14:21:01.0000] <Philip`>
Isn't the component derived automatically by Hixie's script?

[14:22:00.0000] <Philip`>
(presumably incorrectly in this case)

[14:22:01.0000] <TabAtkins>
This is a #top bug, so it's filed on a W3C-version spec.

[14:22:02.0000] <TabAtkins>
Presumably the canvas 2d one?

[14:25:00.0000] <Philip`>
If they mean the title attribute, maybe they mean the spec's own usage of the attribute

[14:25:01.0000] <Philip`>
since it's used for crossreferences rather than for titling

[14:25:02.0000] <jgraham>
I thought maybe they mean the usage of <title> in the example. Although I see nothing wrong with it

[14:27:00.0000] <jgraham>
But the @title usage is more reasonable

[14:27:01.0000] <jgraham>
Sadly W3C pubrules prevent the obvious solution being employed

[14:27:02.0000] <jgraham>
(data attributes)

[14:28:00.0000] <Philip`>
Maybe we could guess an email address based on the hostname of the IP address of the submitter, and ask for clarification

[14:46:00.0000] <Hixie>
you can tell which spec the bug was filed from from the Specification: link which is derived from the Referer: header sent to my script

[14:49:00.0000] <Philip`>
Where does the Component field come from?

[14:49:01.0000] <Hixie>
it's in the form

[14:55:00.0000] <Philip`>
Ah


2010-11-18
[19:15:00.0000] <karlcow>
http://www.slideshare.net/danwrong/bringing-the-sameorigin-policy-to-its-knees

[19:29:00.0000] <karlcow>
https://github.com/oyvindkinsey/easyXDM#readme

[00:17:00.0000] <asmodai>
hsivonen: Noticed the memory leak problem again yesterday, but I'll be fecked if I can trace it :(

[00:22:00.0000] <hsivonen>
:-(

[00:22:01.0000] <hsivonen>
jgraham: speaking of memory leaks, is nautilus consuming insane amounts of RAM for you?

[00:27:00.0000] <asmodai>
hsivonen: so it's leaking right now, any hints/tips to track it?

[00:27:01.0000] <asmodai>
Wish I had Purify on this box

[00:29:00.0000] <hsivonen>
asmodai: sorry, I have no idea how to investigate memory leaks in an opt build. someone else on #developers on irc.mozilla.org might know

[00:29:01.0000] <hsivonen>
asmodai: this is on Windows, right?

[00:33:00.0000] <hsivonen>
why does this list have both Safari and Apple WebKit? http://www.networkworld.com/news/2010/111510-google-chrome-dirty-dozen.html

[00:35:00.0000] <asmodai>
hsivonen: yea

[00:42:00.0000] <jgraham>
hsivonen: I don't think so. I am still on 10.04 though. With 9.10 or whatever I had before I would sometimes get gconfd consuming insane amounts of RAM, but that seems to be fixed

[00:44:00.0000] <hsivonen>
jgraham: ok. I had nautilus consume insane amounts of RAM and my system got much better when I killed nautilus

[00:44:01.0000] <hsivonen>
asmodai: sorry, no one who'd know seems to be awake on #developers

[00:45:00.0000] <hsivonen>
my current gconf problem is in that my .gconf/ gets corrupted on relogin and I have to restore it from backup

[00:45:01.0000] <jgraham>
hsivonen: I usually have browsers consuming insane amounts of RAM. Can't really blame Ubuntu for that :)

[00:45:02.0000] <hsivonen>
jgraham: that's different and expected

[00:45:03.0000] <jgraham>
Indeed :)

[00:52:00.0000] <asmodai>
hsivonen: no worries, I'll see what I can do to get details.

[00:52:01.0000] <asmodai>
hsivonen: Think I still have an old Purify laying around somewhere

[01:11:00.0000] <hsivonen>
annevk: I used the Paypal button on en.wikipedia.org

[01:12:00.0000] <hsivonen>
annevk: It didn't occur to me that I should have my donation tallied for a local chapter

[01:13:00.0000] <hsivonen>
but then, I use en.wikipedia.org for pretty much all topics except Finnish history, geography and plants

[01:14:00.0000] <hsivonen>
so as of now, WebKit is the only one of the top 4 engines that doesn't download document.written scripts in parallel

[01:42:00.0000] <jgraham>
Hahaha

[01:42:01.0000] <jgraham>
I love the hg response to authorisation failure

[01:42:02.0000] <jgraham>
"""1500 lines later

[01:42:03.0000] <jgraham>
RuntimeError: maximum recursion depth exceeded

[01:43:00.0000] <jgraham>
"""

[01:43:01.0000] <jgraham>
(this may strictly be something W3C screwed up rather than the Mercurial people)

[01:44:00.0000] <jgraham>
othermaciej: What do you think the advantage is of requiring HTMLWG membership?

[01:54:00.0000] <asmodai>
jgraham: Can't remember having seen that with many hg repos I use and the eventual problems that arise.

[01:56:00.0000] <jgraham>
asmodai: Pushing over https? Anyway, as I say, I'm not sure whose fault it is. But it is a pretty user0unfriendly way of saying "Not authorised to push to this repository"

[02:02:00.0000] <asmodai>
jgraham: mmm, not sure if it was https

[02:03:00.0000] <MikeSmith>
is http://sandbox.thewikies.com/ Jon Neal's site?

[02:03:01.0000] <MikeSmith>
JonathanNeal: ↑

[02:07:00.0000] <hsivonen>
Is the named character table trying to hide the glyphs on hover?

[02:07:01.0000] <hsivonen>
or in the graphics layer of Gecko broken

[02:08:00.0000] <hsivonen>
apparently a page bug

[02:08:01.0000] <hsivonen>
Hixie: sometimes the named character table fails to show the glyphs when the hovering ends

[02:08:02.0000] <JonathanNeal>
MikeSmith, howdy!

[02:08:03.0000] <JonathanNeal>
That's me.

[02:09:00.0000] <MikeSmith>
hey brother man

[02:09:01.0000] <MikeSmith>
that's some sweet javascript

[02:09:02.0000] <MikeSmith>
the audio thing

[02:09:03.0000] <JonathanNeal>
which one?

[02:09:04.0000] <MikeSmith>
http://sandbox.thewikies.com/iphone-audio/

[02:09:05.0000] <JonathanNeal>
ty :D

[02:09:06.0000] <JonathanNeal>
it's just createElement, load, play.

[02:10:00.0000] <JonathanNeal>
I guess iPhone Safari had it slipped in and no one noticed.

[02:10:01.0000] <MikeSmith>
seems so

[02:10:02.0000] <JonathanNeal>
This is great news.  I hope the same buttons give developers ideas.

[02:11:00.0000] <JonathanNeal>
A sound board, a gps nav, a music page, etc.

[02:11:01.0000] <jgraham>
Does anyone know where the unicode.xml file lives?

[02:11:02.0000] <MikeSmith>
I'm sitting next to Jonathan Stark and showed it to him

[02:11:03.0000] <asmodai>
hsivonen: *cry* [O] Pure: (EIP: 0x3f02e1d3): unexpected execution path

[02:11:04.0000] <MikeSmith>
JonathanNeal: so maybe he'll be inspired

[02:11:05.0000] <asmodai>
hsivonen: What good is a memory leak tool if it cannot run the binary >_<

[02:12:00.0000] <JonathanNeal>
Nice.  I'll definitely create a Super Mario Bros sound board :P

[02:12:01.0000] <MikeSmith>
hsivonen: the glyph hiding seems to work as expected in my Minefield

[02:13:00.0000] <MikeSmith>
on OSX

[02:13:01.0000] <hsivonen>
asmodai: :-(

[02:14:00.0000] <hsivonen>
MikeSmith: fails for me in Minefield and Chrome dev channel on Linux64

[02:14:01.0000] <MikeSmith>
weird

[02:16:00.0000] <gsnedders>
/me wonders if some of the Xvfb memory leaks that are happening are race-condition dependent, thus the higher frequency of them on ARM v. x86_64

[02:18:00.0000] <jgraham>
/me bemoans the difficulty of reading the entity table at 80% zoom

[02:18:01.0000] <jgraham>
/me also wonders if gsnedders is typing in the right window

[02:20:00.0000] <gsnedders>
/me is mumbling it here because someone here might have a clue

[02:20:01.0000] <jgraham>
gsnedders: In that case, what you said makes no sense

[02:21:00.0000] <jgraham>
I mean you gave no context

[02:21:01.0000] <jgraham>
"the Xvfb memory leaks" doesn't refer to anything

[02:21:02.0000] <jgraham>
You just crashed most of the participants as they tried to dereference the null pointer

[02:21:03.0000] <jgraham>
implied by the word "the"

[02:22:00.0000] <jgraham>
Right now, somewhere in darkest Japan, MikeSmith is just saying "NullPointerException" over and over

[02:23:00.0000] <jgraham>
And will keep doing so until someone resets him

[02:23:01.0000] <jgraham>
Think before you mumble, man!

[02:25:00.0000] <hsivonen>
jgraham: throwing JVM exceptions is better than segfaulting

[02:25:01.0000] <MikeSmith>
jgraham: I'm saying nam myo ho renge kyo

[02:26:00.0000] <JonathanNeal>
I'm seeing which events are supported for audio

[02:31:00.0000] <JonathanNeal>
I'm pretty sure these events are not working on the iPhone: canplay, canplaythrough, canshowcurrentframe, durationchange, empty

[02:31:01.0000] <JonathanNeal>
However, I'm pretty sure these are: ended, loadstart, play, progress, suspend

[02:46:00.0000] <MikeSmith>
JonathanNeal: Jonathan Stark is wondering if you know why the audio element doesn't cause the Quicktime player to pop up

[02:46:01.0000] <MikeSmith>
the way it does for video

[02:46:02.0000] <JonathanNeal>
Yea, because they exposed the <audio></audio> tag.

[02:46:03.0000] <JonathanNeal>
But it left the door open.

[02:47:00.0000] <MikeSmith>
JonathanNeal: ?

[02:47:01.0000] <JonathanNeal>
The latest iOS allowed for the <audio> element to be used inline on a page.

[02:48:00.0000] <davidc>
jgraham: glad to have brought some happiness to your life

[02:48:01.0000] <paul_irish>
on the ipad only, though, right? 

[02:48:02.0000] <JonathanNeal>
On the iPhone too.

[02:48:03.0000] <jgraham>
davidc: :)

[02:48:04.0000] <paul_irish>
oh! cool.

[02:49:00.0000] <JonathanNeal>
So this left some of the js api open for audio too.

[02:49:01.0000] <jgraham>
The tests look fine btw (dunno if you saw my mail yet)

[02:50:00.0000] <JonathanNeal>
I don't think .load() even works correctly.

[02:51:00.0000] <JonathanNeal>
It triggers load start, but it never triggers any other events that I yet know of.

[02:51:01.0000] <davidc>
jgraham: oh thanks I just saw on the archive. 

[02:52:00.0000] <JonathanNeal>
load() triggers loadstart, but play() triggers loadeddata

[02:53:00.0000] <JonathanNeal>
And you can only load so many files on a page, I think.

[02:53:01.0000] <davidc>
jgraham (or anyone) what's the feeling about visual tests, you can do so much in javascript, but at some point you want to test that mfrac 1 2 does look like a 1 over a 2 with a line between, the mathml test suite takes ages to run because it's almost all visual subjective checking

[02:54:00.0000] <jgraham>
davidc: My feeling about visual tests is… not positive (to be polite)

[02:54:01.0000] <jgraham>
In some cases they are necessary though

[02:54:02.0000] <jgraham>
But generally the preferred order is javascript tests > reftest > manual test

[02:55:00.0000] <jgraham>
I guess reftesting mathml could be challenging though

[02:55:01.0000] <jgraham>
(maybe Mozilla have some examples?)

[02:55:02.0000] <JonathanNeal>
The audio needs to be at least 200ms

[02:55:03.0000] <davidc>
jgraham: I think the thing to do in math is just have the basic auto ests to see if there is any support at all, in html test suite, then suggest people who care run the full mml test suite at some other time 9when they have some spare time:-)

[02:58:00.0000] <jgraham>
That also makes sense because actually supporting the rendering of MathML is not required hy HTML5.

[02:58:01.0000] <jgraham>
*by

[02:58:02.0000] <jgraham>
(just like for SVG)

[02:58:03.0000] <davidc>
jgraham: well yes there is that, but that's not a fact I'm particularly wanting to highlight:-)

[02:59:00.0000] <jgraham>
I am very much in favour of people implementing MathML too :)

[03:04:00.0000] <MikeSmith>
heh - http://twitter.com/#!/henrikfalck/status/5215729586540544

[03:04:01.0000] <MikeSmith>
"it only took 10 years to reinvent <BGSOUND> RT @jon_neal Background audio on the iOS mobile webkit? Yup, we got that. http://j.mp/c4zCwE"

[03:06:00.0000] <jgraham>
davidc: It occurs to me that you are the ideal person to tell me where unicode.xml lives :)

[03:06:01.0000] <jgraham>
(that is the right name for the file with all the entities in, yes?)

[03:06:02.0000] <davidc>
jgraham: It's on this laptop

[03:06:03.0000] <jgraham>
Does it have a URL?

[03:07:00.0000] <davidc>
http://www.w3.org/2003/entities/2007xml/

[03:07:01.0000] <davidc>
or w3c cvs version of that if you have access

[03:07:02.0000] <jgraham>
davidc: Thanks. Easier than stealing your laptop

[03:07:03.0000] <davidc>
good thing this internet, it might catch on

[03:08:00.0000] <zcorpan>
im in ur internets, stealin ur entities

[03:15:00.0000] <JonathanNeal>
i can get the other events to trigger in weird ways, but nap time.

[07:49:00.0000] <jgraham>
OK, this has been bothering me all day. In the conetxt of 11338

[07:50:00.0000] <jgraham>
+bug

[07:50:01.0000] <jgraham>
who or what is "Zeros"

[07:50:02.0000] <Philip`>
A person on #html-wg

[07:50:03.0000] <jgraham>
Oh

[07:50:04.0000] <jgraham>
I guess if I didn't habitually ignore that channel I could have saved myself a bunch of bother

[07:51:00.0000] <Philip`>
The bug now says "Zeros = Elliott from the HTML WG" too

[08:50:00.0000] <annevk>
"Please see discussions on media type at the Lyon f2f meeting. In the end we decided to go with application/font-woff because past experience showed that attempting to registera font top level type would encounter significant resistance at IANA." -- not that font media types matter at this point (also partially due to IETF/IANA) but this is another case for having a simple wiki imo

[08:50:01.0000] <annevk>
s/case/argument/

[08:50:02.0000] <othermaciej>
jgraham: if I were designing it from scratch, I would make accounts be separate from everything and on-demand, rather than tied to either HTML WG or having a W3C account

[08:51:00.0000] <TabAtkins>
annevk: What's that from?

[08:51:01.0000] <othermaciej>
jgraham: but if they are to be handed out en masse, HTML WG seems like a more sensible condition than "has W3C account for any reason"

[08:51:02.0000] <annevk>
some email

[08:51:03.0000] <TabAtkins>
We... *didn't* decide to do that, though, unless it happened in the hour or two of meetings after I left on Friday.

[08:52:00.0000] <TabAtkins>
We explicitly decided on Thursday to try for a font/woff declaration.

[08:52:01.0000] <annevk>
okay, well, it doesn't matter

[08:52:02.0000] <annevk>
fonts are sniffed

[08:52:03.0000] <TabAtkins>
Yeah.

[08:52:04.0000] <Philip`>
If Hg access was independent of the W3C membership system, might as well just stick the official repository on Bitbucket and give write access to whoever's trusted with it and let everyone else fork it

[08:53:00.0000] <jgraham>
othermaciej: The experience of two non-members of HTMLWG wanting to submit tests whilst both were W3C members does suggest that "has W3C account for any reason" is a more useful condition than "is HTMLWG member"

[08:53:01.0000] <Philip`>
rather than bothering with getting W3C people to maintain the service

[08:54:00.0000] <jgraham>
I think W3C would not be happy with that setup. I imagine they like being in control to some extent

[08:54:01.0000] <david_carlisle>
jgraham: personally I could probably just join html wg to simplify matters but I thought math wg might have a special interest in mathml in html and be more likely to submit tests if they could just do it

[08:54:02.0000] <david_carlisle>
same for svg

[08:54:03.0000] <othermaciej>
jgraham: well, it extends the completely unknown random set of people who might commit something broken (whether accidentally or maliciously) from hundreds to thousands

[08:54:04.0000] <othermaciej>
I guess that hasn't generally been a problem for w3c cvs

[08:55:00.0000] <annevk>
it hasn't

[08:55:01.0000] <othermaciej>
but cvs actually has meaningful audit trails

[08:55:02.0000] <annevk>
if they install a plugin mercurial has too

[08:55:03.0000] <annevk>
they're looking into adding that

[08:55:04.0000] <jgraham>
othermaciej: I trust the D in DVCS to save us there, as long as people can't submit things that execute automatically

[08:56:00.0000] <jgraham>
Or, at least, I don't understand what the threat is

[08:56:01.0000] <othermaciej>
the weird thing to me about the setup is that you have to commit to the master repository to contribute a test at all

[08:57:00.0000] <jgraham>
othermaciej: What setup would you expect?

[09:00:00.0000] <othermaciej>
jgraham: most projects I am familiar with that include a source repository do not have becoming a committer and then committing as step 1 for any contributor

[09:02:00.0000] <jgraham>
You would expect people to post a diff or something?

[09:03:00.0000] <jgraham>
Or maybe request a pull, but that is typically rather harder to set up

[10:24:00.0000] <karlcow>
Opera is far too advanced for Google it seems - http://www.20thingsilearned.com/

[10:40:00.0000] <jacobolus>
karlcow: in that link, justified text in somewhat narrow columns sure looks shitty with no hyphenation

[10:41:00.0000] <jacobolus>
e.g. from page 10, In    the    traditional    world    of    desktop

[10:45:00.0000] <Philip`>
I love trying to read content that's displayed as about two paragraphs at once and takes two seconds to switch to the next two paragraphs and takes ten seconds to first load

[10:45:01.0000] <Philip`>
It's so much better than just having a web page with text on it

[10:47:00.0000] <Ms2ger>
Of course it is, it came out of Google

[10:51:00.0000] <jacobolus>
Philip`: you don't like flippy page animations?!

[10:51:01.0000] <jacobolus>
how old fashioned

[10:55:00.0000] <Philip`>
They were cute when I first saw them, around 2003, where they were better implemented than this (you could drag corners up and down rather than just side to side)

[10:57:00.0000] <Philip`>
(Also they had content on both sides of the pages that moved properly as you dragged, rather than just being a totally blank static thing)

[10:58:00.0000] <Hixie>
hsivonen: the hover thing is just a :hover rule in CSS that makes the glyph bigger, i don't see how the page could be doing anything buggy there

[11:02:00.0000] <mpilgrim>
so here's a random question: is there an easy way to check for support for events like ondrop?

[11:02:01.0000] <mpilgrim>
is there some platonic ideal of a drop event that one could create manually and check its properties?

[11:03:00.0000] <Hixie>
you can test for 'ondrop' in HTMLElement

[11:04:00.0000] <Hixie>
but i don't know if it'll work everywhere

[11:05:00.0000] <mpilgrim>
"ondrop" in HTMLElement returns false in Chrome

[11:05:01.0000] <mpilgrim>
or am i misunderstanding?

[11:05:02.0000] <Hixie>
Chrome might be one of the places where it doesn't work

[11:05:03.0000] <Hixie>
does "onclick" in HTMLElement work?

[11:06:00.0000] <Hixie>
or "onclick" in anActualElement?

[11:06:01.0000] <Hixie>
e.g. "onclick" in new Image() ?

[11:06:02.0000] <mpilgrim>
"ondrop" in document.body returns true

[11:06:03.0000] <mpilgrim>
neat

[11:07:00.0000] <Hixie>
probably just a difference between what elements and element prototypes do

[11:07:01.0000] <Hixie>
not sure what WebIDL actually requires these days

[11:07:02.0000] <heycam>
these days it requires IDL attributes causing properties to appear on prototypes

[11:07:03.0000] <heycam>
and not on the instances themselves

[11:09:00.0000] <mpilgrim>
("ondrop" in document.body) returns false in Minefield and Opera 11 :(

[11:09:01.0000] <mpilgrim>
is that because they don't support it or because the test is invalid?

[11:10:00.0000] <mpilgrim>
(usually i know in advance which browsers support a feature i'm testing, but here i realize i have no clue)

[11:10:01.0000] <Hixie>
dunno about opera but iirc firefox has a bug with how it exposes event handlers

[11:10:02.0000] <Hixie>
again, try "onclick"

[11:10:03.0000] <Hixie>
as a control

[11:11:00.0000] <mpilgrim>
javascript:alert("onclick" in document.createElement("a")) returns false in Minefield

[11:11:01.0000] <mpilgrim>
:(

[11:11:02.0000] <Hixie>
try looking for "draggable" in an element

[11:12:00.0000] <Hixie>
that might work if they implemented the whole HTML DND model rather than just what IE5 had

[11:13:00.0000] <mpilgrim>
("draggable" in document.createElement("a")) returns true in Chrome, Minefield

[11:13:01.0000] <mpilgrim>
false in Opera 11

[11:13:02.0000] <Hixie>
TabAtkins: if application/font-woff isn't the type you think should be registered, note that it's being registered in the ietf-types list

[11:13:03.0000] <mpilgrim>
wow, that's amazing, that was my next question

[11:14:00.0000] <mpilgrim>
chrome debugger is complaining about "Resource interpreted as font but transferred with MIME type application/x-woff"

[11:15:00.0000] <mpilgrim>
it seems no matter what MIME type I use for fonts, I get nasty email about it

[11:15:01.0000] <mpilgrim>
it's the kobayashi maru of web development

[11:16:00.0000] <AryehGregor>
What's wrong with just application/woff?  Why is the font- prefix needed?

[11:17:00.0000] <Hixie>
what's wrong with font/truetype ? :-)

[11:18:00.0000] <mpilgrim>
/me finds https://addons.mozilla.org/en-US/firefox/addon/61269/?advanced=on

[11:19:00.0000] <mpilgrim>
which doesn't answer my MIME type question, but is pretty funny regardless

[11:19:01.0000] <mpilgrim>
wasn't the entire point of TypeKit (and WOFF for that matter) so you couldn't just download web fonts?

[11:20:00.0000] <Hixie>
how would it stop you from downloading web fonts?

[11:20:01.0000] <mpilgrim>
dunno, i stopped paying attention back when that foundry guy was talking about adding a bozo bit to font tables

[11:22:00.0000] <Philip`>
mpilgrim: The point of WOFF was at least partially to guarantee compression, and the point of TypeKit seems largely to provide a convenient easy-to-use system for buying and using commercial fonts

[11:22:01.0000] <TabAtkins>
Not "download", but "install trivially on Windows".

[11:23:00.0000] <Hixie>
lol, image/svg+xml registration once again stymmied, this time by julian

[11:23:01.0000] <TabAtkins>
What. The. Fuck.

[11:24:00.0000] <mpilgrim>
it's generally a bad idea to invent a new format based on the premise of what is "trivial"

[11:24:01.0000] <TabAtkins>
mpilgrim: Agreed, but shrug.  It got everyone to shut the hell up.

[11:25:00.0000] <TabAtkins>
And has extremely minor technical consequences.

[11:25:01.0000] <mpilgrim>
but i will concede that the WOFF fonts i use are smaller than their TTF and OTF counterparts

[11:28:00.0000] <mpilgrim>
nope, i take that back. gzipping the TTF generates consistently smaller files

[11:29:00.0000] <mpilgrim>
did we really invent an entire format based on the fact that some people don't use gzip correctly?

[11:29:01.0000] <TabAtkins>
No, we invented it to make people shut up.  Any compression benefits are nice if they exist, but unnecessary if they don't.

[11:30:00.0000] <TabAtkins>
(And it *should* be smaller. Interesting.)

[11:30:01.0000] <mpilgrim>
that makes even less sense, but ok

[11:30:02.0000] <TabAtkins>
I know people certainly tested several fonts with the per-table-zlib compression that WOFF settled on vs gzip, and the former consistently won.

[11:31:00.0000] <Ms2ger>
mpilgrim, "on*" in element doesn't work in Gecko, except for onhashchange, known bug

[11:31:01.0000] <TabAtkins>
Though, it's not required that WOFF producers zip the tables, so maybe your woff producer doesn't?

[11:32:00.0000] <mpilgrim>
dunno, i use fontsquirrel.com/fontface/generator with identical subsetting

[11:32:01.0000] <mpilgrim>
the ungzipped file sizes are significantly different, but the entire difference disappears after gzipping the TTF

[11:32:02.0000] <mpilgrim>
files i'm testing are at http://diveintohtml5.org/f/essays1743-webfont.[eot|svg|ttf|woff]

[11:33:00.0000] <mpilgrim>
ms2ger: thanks, good to know

[11:34:00.0000] <mpilgrim>
looks like "draggable" in document.createElement("span") is the best test

[11:35:00.0000] <Philip`>
TabAtkins: There's enough shared structure between different font tables that I don't see why per-table compression wouldn't lose out to whole-file compression

[11:35:01.0000] <Philip`>
but I can't find any references with actual data

[11:36:00.0000] <Philip`>
(Seems the more compelling reason for per-table compression is that you can decompress individual tables and ignore ones you don't want)

[11:36:01.0000] <Hixie>
TabAtkins: doing something to shut people up makes no sense. there's an easier way to solve the problem of people disrupting, and that's to ignore them. we have very good technology to do that these days.

[11:36:02.0000] <TabAtkins>
Philip`: Shrug, I'm just remembering conversations from www-font a while back.

[11:37:00.0000] <TabAtkins>
Hixie: Shrug, I just want to be able to deliver a single font format in a few years, and WOFF did the job faster than anything else.

[11:38:00.0000] <Hixie>
TTF did it faster

[11:39:00.0000] <TabAtkins>
Not for real; only the subset of fonts that have everything set up free.

[11:41:00.0000] <AryehGregor>
Hixie, the point was to get IE to support it.

[11:41:01.0000] <Hixie>
IE supports TTF

[11:42:00.0000] <TabAtkins>
The subset of TTF that has everything set up free.

[11:42:01.0000] <AryehGregor>
Anyway, they originally said they wouldn't.

[11:42:02.0000] <AryehGregor>
Mildly stupid compromises are acceptable if it means people can actually ship the same code to IE and everyone else.

[11:44:00.0000] <othermaciej>
reddit is the worst thing to happen to Web accessibility in a long time

[11:45:00.0000] <othermaciej>
at least half the front page posts are direct links to images of text

[11:46:00.0000] <Ms2ger>
reddit is the worst thing to happen to the Web in a long time

[11:46:01.0000] <Ms2ger>
ftfy

[11:48:00.0000] <othermaciej>
I don't know if I can agree with that

[11:48:01.0000] <othermaciej>
overall, digg is still worse

[11:48:02.0000] <othermaciej>
but they tend more towards The <N> Things You Need to Know About Topic <X>

[11:48:03.0000] <othermaciej>
instead of images of text

[11:49:00.0000] <othermaciej>
I wonder if the people doing this even realize that it is totally fail for accessibility, and typically also for mobile devices

[11:49:01.0000] <othermaciej>
(since scaling up a downsampled image of text from an IE screenshot is unlikely to be legible)

[12:01:00.0000] <othermaciej>
does anyone in the testing TF actually understand how Mercurial works?

[12:02:00.0000] <othermaciej>
/me wonders why it got picked in the first place, since no one seems to understand how to use the distributed capabilities...

[12:03:00.0000] <AryehGregor>
I understand how git works, so I at least get the distributed idea.

[12:03:01.0000] <AryehGregor>
(I don't know if I'm technically part of the testing TF.  Probably not, unless signing up to the mailing list is enough.)

[12:04:00.0000] <othermaciej>
signing up for the mailing list is enough

[12:04:01.0000] <othermaciej>
I wish I did not have to try to explain how DVCS works, since it's not something I understand really well myself

[12:05:00.0000] <AryehGregor>
Are you referring to some thread there?  I'll probably get to it today, if so, and chip in if it seems like I can add anything.

[12:06:00.0000] <AryehGregor>
I don't think the distributed aspect of Mercurial is so useful for the W3C, except for the associated performance advantages (which are substantial).

[12:06:01.0000] <AryehGregor>
It lets non-WG members more easily submit stuff, I guess, but it's pretty easy to become a WG member.

[12:07:00.0000] <othermaciej>
I think I should just stay out of further discussion

[12:07:01.0000] <othermaciej>
since I don't participate very actively

[12:07:02.0000] <othermaciej>
I am not even sure how to get approval on the one test I submitted

[12:08:00.0000] <AryehGregor>
I think you just have to ask someone else to look at it.

[12:08:01.0000] <jgraham>
othermaciej: I like to pretend I understand how Mercurial works

[12:09:00.0000] <othermaciej>
I don't understand why using a DVCS with a centralized repository model makes sense for a test suite

[12:09:01.0000] <jgraham>
And I understand that people could clone+publish and we could pull that changeset

[12:09:02.0000] <othermaciej>
it just seems to make things harder to use, with no actual benefit

[12:09:03.0000] <othermaciej>
it's not like you need long-lived personal branches for a test suite

[12:09:04.0000] <othermaciej>
especially since we have personal staging areas in the master repository

[12:10:00.0000] <jgraham>
I consider that a requirement, actually

[12:10:01.0000] <jgraham>
It is useful for vendors

[12:10:02.0000] <othermaciej>
it is?

[12:10:03.0000] <othermaciej>
/me , as a vendor, is intrigued to learn how

[12:10:04.0000] <jgraham>
I think so

[12:11:00.0000] <jgraham>
You can replace bits and pieces of the harnesses so they integrate with your regression tracking system

[12:11:01.0000] <othermaciej>
if we wanted to import a snapshot of some or all of the test suite, we would just import it into our repository

[12:11:02.0000] <othermaciej>
not clone the master Hg repository and try to track it

[12:11:03.0000] <jgraham>
Yeah, we do that. It *really* sucks

[12:11:04.0000] <jgraham>
Importing snapshots, I mean

[12:11:05.0000] <AryehGregor>
othermaciej, I find DVCSes more convenient even for centralized development.

[12:12:00.0000] <AryehGregor>
It lets me more easily organize and test changes before committing them.

[12:12:01.0000] <jgraham>
We typically end up with out of date, buggy versions of testsuites because doing updates is so hard

[12:12:02.0000] <AryehGregor>
I use git-svn if possible when forced to use an SVN repo.

[12:12:03.0000] <othermaciej>
it seems like the main effect is that for every operation, I have to type two commands

[12:12:04.0000] <jgraham>
Also, what AryehGregor said

[12:12:05.0000] <jgraham>
I use git or hg for all projects

[12:12:06.0000] <TabAtkins>
Urgh, I hate dealing with narrow-vs-wide string issues.  >_<  Python 3 would be nice, but I don't want to bother with switching over right now

[12:12:07.0000] <AryehGregor>
You don't have to push things right after you commit them.

[12:12:08.0000] <jgraham>
even if I am the only developer

[12:12:09.0000] <AryehGregor>
You can commit a few things in a row, then push them all at once.

[12:13:00.0000] <AryehGregor>
/me uses git for tons of stuff where he's the only developer, but that's mainly because it's way easier to set up than svn

[12:13:01.0000] <AryehGregor>
(but rebasing is also nice for private repos)

[12:13:02.0000] <jgraham>
You can also commit as you work and then refactor the commits later

[12:13:03.0000] <jgraham>
using rebase

[12:13:04.0000] <jgraham>
Which is very nice

[12:13:05.0000] <othermaciej>
these considerations seem pretty irrelevant to a test suite

[12:14:00.0000] <jgraham>
I use it with the htmlwg testsuite

[12:14:01.0000] <jgraham>
I have a number of local patches that aren't ready to push yet

[12:14:02.0000] <othermaciej>
you refactor your commits on a test?

[12:15:00.0000] <jgraham>
I haven't yet, but I have one case where I will have to because a commit added many unnecessary files

[12:15:01.0000] <jgraham>
and I want to remove them from history

[12:16:00.0000] <AryehGregor>
I try to at least briefly review commits locally before pushing them.

[12:16:01.0000] <jgraham>
Anyway, I consider being able to use version control locally before sharing changes to be a huge win

[12:16:02.0000] <othermaciej>
I guess if I end up contributing to the HTML WG test suite more, I'll make some wrapper scripts so I don't have to do everything in two phases

[12:17:00.0000] <othermaciej>
so far my contribution is too small for my opinion to be relevant

[12:18:00.0000] <jgraham>
Your central objection is that you have to do 'hg ci -m "Commit message"; hg push' rather than 'svn ci -m "Commit message"'?

[12:18:01.0000] <othermaciej>
and also "hg pull; hg update" (I am not sure that is even in the right order) and the extra jumping jacks you have to do if you try to commit and the master has changed

[12:18:02.0000] <othermaciej>
(even if it has changed in a way that is totally unrelated to the files you touched)

[12:19:00.0000] <othermaciej>
I cannot even recite the "commit when things have changed" incantation from memory after doing it several times in the past few weeks

[12:19:01.0000] <jgraham>
If you enable the rebase extension doing hg pull --rebase might help you

[12:19:02.0000] <AryehGregor>
"hg pull; hg update" is silly, in git it's just "hg pull".  I think you can enable something to make it "hg fetch".

[12:19:03.0000] <jgraham>
Yeah, I think there might be a fetch extension

[12:20:00.0000] <Ms2ger>
othermaciej, hg pull -u

[12:20:01.0000] <jgraham>
/me would like the hg people to make some more useful extensions on by default

[12:20:02.0000] <AryehGregor>
This is part of why I dislike hg.  git is nicer in this way.

[12:20:03.0000] <Rik`>
othermaciej: the ability to record your changes while being offline is really cool in DVCS

[12:20:04.0000] <jgraham>
Yes, git is nicer in this way

[12:20:05.0000] <AryehGregor>
Out of the box, you can do "git pull --rebase".

[12:20:06.0000] <jgraham>
Although it is less nice in other ways

[12:20:07.0000] <AryehGregor>
Like what?

[12:21:00.0000] <othermaciej>
apparently the full commit sequence is hg commit -m "My commit message"; hg pull; hg merge; hg commit -m "Merge."; hg push

[12:21:01.0000] <charlvn>
git feels much faster than hg while cloning, or is it just me?

[12:21:02.0000] <jgraham>
git probably is faster

[12:21:03.0000] <Ms2ger>
Git compresses, doesn't it?

[12:21:04.0000] <jgraham>
So does hg

[12:21:05.0000] <jgraham>
I think the git code is just faster

[12:21:06.0000] <othermaciej>
the thing that most confused me about git is the fact that every command is named "commit", except the one I would actually think of as committing (sending your change to the master repository)

[12:22:00.0000] <jgraham>
C+shell scripts compared to python

[12:22:01.0000] <AryehGregor>
othermaciej, you can do hg commit -m "My commit message"; hg pull --rebase; hg push if you have the rebase extension enabled.

[12:22:02.0000] <jgraham>
othermaciej: It feels like you haven't worked on a large project with git or hg?

[12:22:03.0000] <Ms2ger>
othermaciej, mercurial queues are useful

[12:22:04.0000] <AryehGregor>
I don't know why hg doesn't enable it by default, it's annoying that way.

[12:23:00.0000] <AryehGregor>
hg pull --rebase is only necessary if your copy isn't up-to-date.

[12:23:01.0000] <Ms2ger>
hg qpo -a && hg pull -u && hg qpu -a && hg qfin -a && hg pus

[12:23:02.0000] <othermaciej>
jgraham: I have tried a number of times to use git-svn or hg-svn with an svn-based project, and I generally gave up in frustration every time

[12:23:03.0000] <othermaciej>
I am sure there are cool benefits if you can actually make use of the fancy things they do, but they seem to make basic things harder

[12:23:04.0000] <AryehGregor>
Given the rate at which people commit to the testing repo, you probably can omit it.

[12:24:00.0000] <othermaciej>
so far all the times I tried to commit, I had to rebase

[12:24:01.0000] <jgraham>
/me usually finds his copy is out of date :)

[12:24:02.0000] <AryehGregor>
. . . why is "hg help push" partly in German on my machine?

[12:24:03.0000] <othermaciej>
I don't think I am going to try install an extension to my version control system

[12:24:04.0000] <othermaciej>
to add a basic capability that it should already have

[12:24:05.0000] <jgraham>
othermaciej: The extensions are bundled, just not on by default

[12:25:00.0000] <AryehGregor>
Oh, because I'm on someone else's computer and didn't notice.

[12:25:01.0000] <AryehGregor>
And the other person is German.

[12:25:02.0000] <AryehGregor>
That makes sense.

[12:25:03.0000] <jgraham>
All you need to do is

[12:25:04.0000] <jgraham>
[extensions]

[12:25:05.0000] <jgraham>
rebase =

[12:25:06.0000] <jgraham>
in your ~/.hgrc

[12:26:00.0000] <Ms2ger>
Fun thing is that rebase can corrupt your commits

[12:27:00.0000] <jgraham>
othermaciej: It seems possible you would not get the feel of a dvcs using it on a project based on svn, because you would probably keep trying to use a svn-like workflow

[12:27:01.0000] <othermaciej>
sounds like I am better off just making my five-step shell script

[12:27:02.0000] <jgraham>
In particular if you are not making lots of local commits before you push (and, particularly in the case of git, using local branches), you are likely missing the point

[12:27:03.0000] <othermaciej>
jgraham: I think my bottom line is that when I do things that work fine in an svn-like workflow, I want them to not get any harder - I'd like to pay the cost for fancy features only if I actually want to use them

[12:28:00.0000] <jgraham>
othermaciej: Fair enough. All I can say is that after using hg and git, svn feels like it is based on a broken model

[12:29:00.0000] <AryehGregor>
/me concurs with jgraham 

[12:29:01.0000] <jgraham>
There are only two benefits of svn I can think of:

[12:29:02.0000] <AryehGregor>
They make SVN workflows harder because they think anyone who wants to actually use an SVN workflow hasn't really tried a DVCS workflow properly.

[12:30:00.0000] <jgraham>
1) You don't need a copy of the complete history locally

[12:30:01.0000] <jgraham>
2) Partial checkouts

[12:30:02.0000] <jgraham>
For certian repositories, those are essential features

[12:30:03.0000] <othermaciej>
I don't even really care about either of those things

[12:30:04.0000] <jgraham>
For everything else it feels broekn

[12:30:05.0000] <othermaciej>
the only benefit I find valuable is (3) simple things are simple

[12:31:00.0000] <othermaciej>
anyway

[12:31:01.0000] <othermaciej>
I have ranted enough

[12:31:02.0000] <AryehGregor>
If you define "simple things" to mean "things that are simple in SVN", then yes, that's tautological.  :)

[12:31:03.0000] <othermaciej>
I feel like I shouldn't have to type 5 commands to commit a 1-line patch to a file that hasn't changed upstream

[12:31:04.0000] <jgraham>
/me has the point of view that simple things are impossible

[12:31:05.0000] <jgraham>
e.g. making a local commit

[12:31:06.0000] <othermaciej>
(or enable an extension that might reduce it to 3 commands, but might corrupt my commits)

[12:32:00.0000] <jgraham>
Ms2ger: What is the deal with rebase corrupting things? Is it any worse than a normal merge?

[12:32:01.0000] <Ms2ger>
Accidentally deleting files without telling you, apparently

[12:33:00.0000] <othermaciej>
it sounds like the only solution is to convince myself that committing twice and updating twice are fundamentally the right thing, and my expectations are as foolish as wanting to edit the master directly with emacs

[12:33:01.0000] <jgraham>
Ms2ger: pointer?

[12:34:00.0000] <Ms2ger>
http://hg.mozilla.org/tracemonkey/rev/f9785814bdbc, for example

[12:34:01.0000] <Dashiva>
othermaciej: Don't lose hope

[12:34:02.0000] <Dashiva>
Maybe one day the DVCS-brainwashing will fade and people will come to their senses

[12:35:00.0000] <othermaciej>
Dashiva: it seems more practical to brainwash myself

[12:35:01.0000] <AryehGregor>
othermaciej, more accurately, you're supposed to convince yourself that the distributed model is useful, and that you want to have local commits.  Then the extra steps become logically necessary.

[12:35:02.0000] <jgraham>
Ms2ger: I was hoping you would have a pointer to an explaination so I could find out how to avoid it :)

[12:35:03.0000] <AryehGregor>
(or at least, some of them do -- as I said, hg is more verbose here than git)

[12:35:04.0000] <Ms2ger>
"Not", afaict

[12:36:00.0000] <othermaciej>
git just seems differently verbose

[12:36:01.0000] <jgraham>
You can probably set up a git client to a hg remote somehow, if that's your thing

[12:37:00.0000] <AryehGregor>
If the model is that you commit everything locally first, you're going to need at least one extra step to commit locally and then push to the origin.

[12:38:00.0000] <AryehGregor>
The rebase step could happen as part of the push if the files weren't touched by anyone else, hypothetically, like SVN does it.

[12:38:01.0000] <othermaciej>
I'm sure I can convince myself to have faith in Committing-Twiceism if I try hard enough

[12:39:00.0000] <AryehGregor>
Everyone else seems to, when they get used to it.

[12:39:01.0000] <othermaciej>
after all, I already believe in Committing-Onceism, so I am halfway there

[12:39:02.0000] <jgraham>
You are only commiting once

[12:39:03.0000] <jgraham>
You are sharing once

[12:39:04.0000] <jgraham>
We just need to convince you to believe in sharing :)

[12:39:05.0000] <AryehGregor>
When projects switch to git or hg, are there lots of people who remain perpetually annoyed and wish they were back on svn?

[12:40:00.0000] <othermaciej>
no idea

[12:40:01.0000] <AryehGregor>
I was about to ask about Mozilla, but their workflow basically pretends they still use SVN, so.

[12:40:02.0000] <othermaciej>
when we switched WebKit from CVS to SVN way back when, 0 people were annoyed afterwards

[12:40:03.0000] <jgraham>
/me only knows about cvs-[git|hg]

[12:40:04.0000] <jgraham>
AryehGregor: I don't think that's true of Mozilla

[12:41:00.0000] <othermaciej>
probably because it was nearly transparent, except for the things that didn't work with CVS at all

[12:41:01.0000] <jgraham>
There seems to be a lot of mercurial features being used afaict

[12:41:02.0000] <AryehGregor>
jgraham, maybe not.  I guess some of them use queues a lot.

[12:41:03.0000] <david_carlisle>
othermaciej: don't let them brainwash you, editing cvs ,v files in emacs is still TheOneTrueWay.

[12:41:04.0000] <jgraham>
e.g. mq seems to be heavily used

[12:41:05.0000] <AryehGregor>
To post patch series.

[12:41:06.0000] <othermaciej>
I wish there was a DVCS system like that, where you don't have to care that you are using it until you want to do stuff that you couldn't before

[12:41:07.0000] <othermaciej>
david_carlisle: too late, I told you I am already a Committing-Onceist

[12:42:00.0000] <AryehGregor>
But I haven't seen that many (if any) developers publish their own branches, for example.

[12:42:01.0000] <AryehGregor>
It's very much oriented around one central repository.

[12:42:02.0000] <Ms2ger>
We do use branches more than you think ;)

[12:42:03.0000] <Ms2ger>
Almost all JS engine work happens in another repository

[12:43:00.0000] <AryehGregor>
You still publish all patches via Bugzilla instead of using the built-in functionality for shuffling patches around, right?

[12:43:01.0000] <Ms2ger>
True

[12:43:02.0000] <AryehGregor>
So like, committers have to copy the patches off Bugzilla instead of just pulling from someone's repo.

[12:44:00.0000] <Ms2ger>
Well, most people just push themselves

[12:44:01.0000] <jgraham>
That seems like a bugzilla-oriented workflow rather than a svn-oriented workflow, really

[12:44:02.0000] <jgraham>
Maybe bugzilla ought to support hg better

[12:45:00.0000] <AryehGregor>
True.

[12:46:00.0000] <AryehGregor>
It's possibly better than the Linux model of posting patches to a mailing list.

[12:46:01.0000] <jgraham>
(fun CVS fact, the author of "Version Management with CVS" sits a couple of floors above me. I'm told he is no longer a big fan)

[12:46:02.0000] <AryehGregor>
Although git has built-in support for that.

[12:46:03.0000] <gsnedders>
jgraham: Who?

[12:46:04.0000] <jgraham>
gsnedders: Per

[12:46:05.0000] <othermaciej>
is anyone a CVS fan these days?

[12:47:00.0000] <gsnedders>
jgraham: pc, specially. There's multiple Per's upstairs from you.

[12:47:01.0000] <jcranmer>
uh....

[12:47:02.0000] <jgraham>
(I might be wrong and horribly misrepresenting his opinion)

[12:47:03.0000] <gsnedders>
*specifically

[12:47:04.0000] <jcranmer>
doubt it

[12:47:05.0000] <jgraham>
gsnedders: But you managed to understand me anyway :)

[12:47:06.0000] <gsnedders>
jgraham: Google helped :)

[12:48:00.0000] <jgraham>
gsnedders: You should repay them in donuts

[12:49:00.0000] <Ms2ger>
Or contribute to their browser, I hear it's open source ;)

[12:49:01.0000] <gsnedders>
I hear I might have a conflict of interest there :)

[12:50:00.0000] <jgraham>
It must be quite depressing to write a book on something like CVS and then realise a few years later that everyone who uses it hates it with a passion

[12:51:00.0000] <Philip`>
If the book can teach them to use it slightly more productively and hate it slightly less, that still seems worthwhile

[12:52:00.0000] <jgraham>
Not if you are one of the people that hates it

[12:53:00.0000] <jgraham>
And you have to live every day with the knowledge that you encouraged people to use it

[12:53:01.0000] <jgraham>
Anyway, in conclusion, I appreciate and make use of the distributed features of Mercurial in the context of the HTML testsuite

[12:53:02.0000] <Philip`>
Those people might have otherwise still been stuck with RCS, or cp

[12:54:00.0000] <AryehGregor>
Well, if you believe Linus Torvalds, posting patches and tarballs to mailing lists is a much better method of software development than CVS.

[12:54:01.0000] <Philip`>
I like Hg for the test suite primarily because diff is instant

[12:54:02.0000] <Ms2ger>
Philip`, only on small repositories ;)

[12:56:00.0000] <AryehGregor>
You can install an extension to make diff instant on all repos, right?  By having it run a daemon in the background that watches for file changes?

[12:56:01.0000] <jgraham>
Ms2ger: Is it less instant than svn on the same sized repository?

[12:56:02.0000] <AryehGregor>
And yeah, it's still probably a lot faster than SVN.

[12:56:03.0000] <Ms2ger>
No idea, I'm lucky enough not to use svn

[12:57:00.0000] <AryehGregor>
Plus, I do find git diff to be instant on MediaWiki's repo, which is something like a gigabyte (not quite mozilla-central scale, granted).

[12:57:01.0000] <jgraham>
svn seems to be slow for pretty much everything

[12:57:02.0000] <AryehGregor>
Except checkout.  It does beat DVCSes on that if you have a lot of history, although by an embarrassingly small margin.

[12:57:03.0000] <jgraham>
AryehGregor: I'm not sure if that is true

[12:58:00.0000] <jgraham>
At least checking out 10,000 files in svn can take hours

[12:58:01.0000] <AryehGregor>
It depends heavily on the configuration.

[12:58:02.0000] <AryehGregor>
I think if you configure the SVN server properly, it can do decently.

[12:58:03.0000] <jgraham>
That could be true

[12:58:04.0000] <AryehGregor>
Although I admit I might be wrong.

[12:59:00.0000] <gsnedders>
AryehGregor: Checking out 20GB will never be quick, when it has two copies of every file in the checkout, so you have over 40GB of I/O

[12:59:01.0000] <gsnedders>
(This is how git-svn clones can be smaller than SVN checkouts)

[12:59:02.0000] <AryehGregor>
Personally I have to admit that I once timed a git clone of my git-svn checkout of the entire MediaWiki repo including branches and tags and full history, from across the Atlantic, was faster than an SVN checkout over HTTP from a server in the same data center.

[13:00:00.0000] <Philip`>
/me had to intentionally configure his SVN server to do slow checkouts, because in the default configuration it used up all his RAM :-(

[13:01:00.0000] <AryehGregor>
DVCSes are definitely lighter load on the servers.

[13:02:00.0000] <Philip`>
I assume this was some kind of bug in SVN, since there's no good reason it should use 300MB of memory for a single in-progress checkout

[13:03:00.0000] <gsnedders>
But RAM is yummy! OM NOM RAM!

[13:04:00.0000] <jgraham>
/me remembers having svn eat all his RAM

[13:04:01.0000] <jgraham>
But I don't recall what I was doing

[13:04:02.0000] <jgraham>
gsnedders probably does

[13:04:03.0000] <gsnedders>
Yeah, I've had that happen too. I think it was running "svn up" in a 20GB repo (with a 40GB working copy).

[13:05:00.0000] <jgraham>
Oh, I might have been trying to checkout a large repo

[13:05:01.0000] <gsnedders>
jgraham: I like that you expect me to remember stuff better than you when it relates to you. :P

[13:05:02.0000] <AryehGregor>
I had git eat all my RAM when I tried to check in a multi-gigabyte file.

[13:05:03.0000] <jgraham>
gsnedders: You have a quite good memory. I don't

[13:05:04.0000] <AryehGregor>
Protip: git is not a good idea for incremental database backups.

[13:05:05.0000] <AryehGregor>
Or at least wasn't.

[13:06:00.0000] <AryehGregor>
/me tries now, just for fun

[13:06:01.0000] <jgraham>
I suppose this could have been a few large files causing the explosion in RAM usage

[13:07:00.0000] <gsnedders>
jgraham: You're not the amusing one to discuss this with. It's more amusing to be able to say, "We discussed that before, remember? The night we also discussed how you get annoyed at my good memory?"

[13:07:01.0000] <jgraham>
But really there is no obvious reason that svn should use lots of memory just do do a checkout, irrespective of the repo size

[13:07:02.0000] <jgraham>
Whereas git has to calculate a diff and compress it

[13:07:03.0000] <jgraham>
So you can see how that might use lots of memory

[13:08:00.0000] <jgraham>
For big files

[13:08:01.0000] <AryehGregor>
Yes.

[13:08:02.0000] <AryehGregor>
Well, it doesn't need to calculate a diff for a newly-added file.

[13:08:03.0000] <AryehGregor>
But it does need to add it to the staging area when you do git add.

[13:11:00.0000] <jgraham>
Why does adding it to the staging area use lots of RAM?

[13:12:00.0000] <AryehGregor>
Presumably it reads it entirely into memory first, or at least used to.

[13:12:01.0000] <AryehGregor>
Since it's designed for source code, why not?

[13:12:02.0000] <AryehGregor>
Probably no one bothered to be more sophisticated.

[13:12:03.0000] <AryehGregor>
(I'm guessing it does some processing beyond just copying it, otherwise it'd use sendfile() or something.)

[13:12:04.0000] <jgraham>
I don't know why it should; I don't really know what the staging area is for

[13:13:00.0000] <AryehGregor>
Ooh, now I get "fatal: Out of memory? mmap failed: Cannot allocate memory"

[13:13:01.0000] <AryehGregor>
Presumably because I'm using a 32-bit system.

[13:13:02.0000] <AryehGregor>
Let me try again on a 64-bit system.

[13:13:03.0000] <jgraham>
Apart from making the git workflow slightly more complex than hg in simple cases

[13:57:00.0000] <AryehGregor>
Yep, git add on a 12G file causes git to use over 1G of RAM before I kill it.

[13:58:00.0000] <AryehGregor>
jgraham, the staging area lets you commit something less than the full current state of the working copy.

[13:58:01.0000] <AryehGregor>
When I'm adding a feature or something and find I want to do some unrelated cleanup first, I sometimes do the cleanup and then use git add -i to commit only some of the changes, then proceed.

[13:59:00.0000] <AryehGregor>
I guess I could use git stash instead, but it seems less convenient and more error-prone (e.g., more likely to cause merge conflicts).

[13:59:01.0000] <AryehGregor>
Although I agree that overall, I don't see that the staging area is worth the extra complexity.

[14:38:00.0000] <cying>
is it possible to parse a HTML document from within Javascript?

[14:39:00.0000] <hober>
cying: browser-side javascript or server-side javascript? either way, the answer is essentially yes

[14:39:01.0000] <cying>
hober: browser-side javascript

[14:39:02.0000] <JoePeck>
innerHTML? =)

[14:39:03.0000] <cying>
hober: i'm not sure what to google for... setting innerHTML on a div element just gives me the children of the body element of a doc

[14:39:04.0000] <JoePeck>
I have a vague memory of something like document.implementation.createHTMLDocument

[14:40:00.0000] <gsnedders>
cying: Well, you could do something like var f = document.createElement("iframe"); f.onload = function(){alert(f.contentDocument);}; f.src="data:text/html," + htmlDocument;

[14:40:01.0000] <gsnedders>
JoePeck: That doesn't help.

[14:41:00.0000] <cying>
gsnedders: hmmm

[14:41:01.0000] <cying>
trying both suggestions, thanks folks

[14:42:00.0000] <cying>
(all three)

[14:42:01.0000] <gsnedders>
innerHTML works if you just have a fragment

[14:42:02.0000] <gsnedders>
(and is way better than the others if you just have a fragment)

[14:44:00.0000] <JoePeck>
yah, I don't recommend the document.implementation stuff. Prolly should refrain from even mentioning it

[14:44:01.0000] <gsnedders>
Not supported by everyone, either

[14:45:00.0000] <cying>
yeesh

[14:47:00.0000] <cying>
hmmm both don't seem to work

[15:39:00.0000] <AryehGregor>
Hmm, caniuse.com crashes Firefox 4b7 for me.

[15:39:01.0000] <AryehGregor>
/me submits the crash report, twice


2010-11-19
[16:10:00.0000] <cardona507>
/me waves bye bye to the web sql database

[16:33:00.0000] <AryehGregor>
Ugh, Android-like security model for the web: http://blog.chromium.org/2010/11/app-permissions.html

[16:34:00.0000] <AryehGregor>
That's one of the lamest parts of Android, everyone winds up just giving everything full access to their phone.

[16:34:01.0000] <AryehGregor>
There has to be a saner way to do it than that.

[16:34:02.0000] <boogyman>
Stuxnet ftw :-s 

[16:35:00.0000] <gsnedders>
AryehGregor: Give me full-access to your phone.

[16:36:00.0000] <AryehGregor>
gsnedders, by "everyone" I meant "normal people", not "me".

[16:37:00.0000] <AryehGregor>
At a minimum, users need to be able to deny requested permissions.

[16:38:00.0000] <AryehGregor>
If some random app claims to need geolocation for no plausible reason, I should be able to deny it.

[16:38:01.0000] <AryehGregor>
But I don't even care about geolocation, I'm talking about random apps I've tried to install that say they want the rights to *make* *calls*.

[16:39:00.0000] <AryehGregor>
Like games and stuff.

[16:39:01.0000] <AryehGregor>
Everyone else just blindly installs all this stuff.

[17:54:00.0000] <Sonja>
any recommended <canvas> tutorials for drawing lines and shapes ?

[17:56:00.0000] <TabAtkins>
Sonja: Try http://diveintohtml5.org/canvas.html#divingin

[17:57:00.0000] <Sonja>
merci

[20:47:00.0000] <MikeSmith>
manogo

[22:19:00.0000] <MikeSmith>
hsivonen: I wanted to ask if you could please redeploy validator.nu today if you have time

[22:20:00.0000] <MikeSmith>
mainly to get the missing-but-required attributes checking live

[22:23:00.0000] <hsivonen>
MikeSmith: ok

[22:24:00.0000] <hsivonen>
I guess I should distupgrade my VMs while I'm at it

[22:24:01.0000] <MikeSmith>
hsivonen: by the way, I spent some time looking into what it would take to port the validator-nu branch changes back to trunk

[22:25:00.0000] <hsivonen>
MikeSmith: what's your conclusion?

[22:25:01.0000] <MikeSmith>
too much work :(

[22:25:02.0000] <hsivonen>
:-(

[22:25:03.0000] <MikeSmith>
plus, the required-but-missing attributes reporting in the trunk is near worthless

[22:27:00.0000] <hsivonen>
even more :-(

[22:30:00.0000] <MikeSmith>
hsivonen: take a look at https://gist.github.com/706192

[22:30:01.0000] <MikeSmith>
what the trunk seems to do is just list out all the allowed attributes

[22:31:00.0000] <hsivonen>
MikeSmith: wow. that sucks

[22:31:01.0000] <MikeSmith>
yeah

[22:38:00.0000] <Sirisian>
Anyone here much about WebSockets in relation to binary data/ArrayBuffer stuffs?

[22:39:00.0000] <Sirisian>
hear*

[22:40:00.0000] <zcorpan>
"Errors that result in disproportionally poor performance" in http://www.whatwg.org/specs/web-apps/current-work/complete/introduction.html#conformance-requirements-for-authors still bugs me; i'm totally unconvinced that the example results in disproportionally poor performance

[22:40:01.0000] <nessy>
Sirisian: other than base64 encoding it? ;-)

[22:41:00.0000] <Sirisian>
I'm using a 7 bit format

[22:42:00.0000] <Sirisian>
well that's the idea. I hoped that after all this time the binary format was defined, but when I checked I noticed no change.

[22:42:01.0000] <Sirisian>
Kind of curious why since ArrayBuffer exists.

[22:44:00.0000] <hsivonen>
zcorpan: that's not a great example

[22:49:00.0000] <Sirisian>
nessy, know if anyone has brought that up to Hixie yet?

[22:49:01.0000] <Sirisian>
I know he made a note in the spec about it

[22:49:02.0000] <nessy>
I'm sure it's on the roadmap, but maybe not in focus right now

[22:50:00.0000] <zcorpan>
hsivonen: can you think of a better example?

[22:51:00.0000] <hsivonen>
zcorpan: anything that reconstructs the active formatting elements a few times

[22:55:00.0000] <zcorpan>
<p><a><b><i><s><p>x<p>x<p>x

[22:58:00.0000] <zcorpan>
or maybe <p><a><b><i><s></p><p>x</p><p>x</p><p>x</p> to not make authors think that omitting </p> is what results in bad perf

[22:59:00.0000] <hsivonen>
I'm impressed that the W3C processes allowed the "Beware" note on http://www.w3.org/TR/webdatabase/

[23:00:00.0000] <heycam>
that yellow dotted border is... unpleasant

[23:02:00.0000] <zcorpan>
the styling gives the expectation that the text is something like "FIRE!!!! GET OUT OF THE BUILDING!"

[23:03:00.0000] <hsivonen>
validator.nu is going to undergo a couple on distribution upgrades. expect downtime

[23:03:01.0000] <hsivonen>
zcorpan: isn't that the right expectation for an API that is backed by the implementation details on a particular piece of software that isn't designed with the Web platform stability in mind?

[23:07:00.0000] <zcorpan>
only if half of the relevant vendors refuse to implement it :)

[23:22:00.0000] <hsivonen>
oh. awesome. validator.nu broke itself during the distribution upgrade

[23:23:00.0000] <hsivonen>
I pointed the DNS for validator.nu to the VM that's serving html5.validator.nu

[23:37:00.0000] <slartsa>
I've never committed a dist upgrade on a server without something to back up with in case of emergency

[23:49:00.0000] <hsivonen>
slartsa: well, I have two VMs that can supply the validator services for either html5.validator.nu, validator.nu or both, but I don't have bugzilla.validator.nu and about.validator.nu replicated to two VMs

[23:49:01.0000] <hsivonen>
I do have a tarball with backups, though

[23:50:00.0000] <hsivonen>
It will take a while to figure out how to restore bugzilla.validator.nu and about.validator.nu

[23:50:01.0000] <hsivonen>
the basic problem is that I don't employ a sysadmin myself and I'm myself a software developer and not a sysadmin

[23:52:00.0000] <slartsa>
augh, hope you'll sort things out

[23:56:00.0000] <hsivonen>
MikeSmith: anyway, I believe html5.validator.nu has been redeployed, but it's currently CSS-naked

[23:56:01.0000] <MikeSmith>
ok

[23:56:02.0000] <MikeSmith>
thanks

[00:37:00.0000] <hsivonen>
my hosting provider told me they've heard from other customers that Ubuntu upgrades are broken

[00:38:00.0000] <hsivonen>
I expect to migrate to a fresh Lucid image today

[00:38:01.0000] <hsivonen>
(at this point, one probably should dump Ubuntu and move to CentOS, but I don't want to deal with multiple distros)

[00:54:00.0000] <asmodai>
cute  http://www.20thingsilearned.com/

[00:57:00.0000] <hsivonen>
I was too lazy to view source. what do they use to implement the page turn graphics?

[01:08:00.0000] <nessy>
hsivonen: CSS transitions - nicely done actually

[01:08:01.0000] <hsivonen>
nessy: interesting. I didn't know you could do that with CSS transitions

[01:13:00.0000] <paul_irish>
fairly sure its a pretty heavy use of canvas for the page turn.

[01:16:00.0000] <hsivonen>
/me wonders if the message of 20 things is that the Chrome Team views Web users as children, since the book is in a children's book format

[01:19:00.0000] <annevk>
"Tweets While High is now following you on Twitter!"

[01:20:00.0000] <hsivonen>
/me turned new follower notifications off long ago

[02:02:00.0000] <Rik`>
nessy: I also think it is canvas for the page turn

[02:03:00.0000] <Rik`>
hsivonen: the message of 20things is "we're teaching you the web while doing nasty browser sniffing"

[02:15:00.0000] <jgraham>
Google do love their browser sniffing

[02:35:00.0000] <Rik`>
I'm wondering if Google has heard of this thing called Modernizr

[02:36:00.0000] <Peter`>
its creator works for Google, so I'm pretty sure they do

[02:37:00.0000] <Rik`>
Peter`: that was ironic :)

[02:38:00.0000] <Peter`>
that'd make sense :p I shouldn't randomly switch to IRC while working

[02:51:00.0000] <zcorpan>
http://www.whatbrowser.org/ doesn't know about Minefield

[02:54:00.0000] <zcorpan>
also nice: "Try a new browser for your Mac: ... Internet Explorer"

[02:54:01.0000] <jgraham>
Or Opera 11

[02:55:00.0000] <jgraham>
and yeah, it suggests I download IE on Linux

[02:55:01.0000] <jgraham>
(what is the point of this site?)

[02:55:02.0000] <annevk>
IE on Linux is great

[02:56:00.0000] <zcorpan>
hmm, now when i reload the page, the IE link is gone

[03:04:00.0000] <Rik`>
jgraham: provide information to Chrome marketing about how people choose a new browser 

[03:10:00.0000] <zcorpan>
reading about browser cookies makes me need to eat a real cookie

[03:34:00.0000] <hsivonen>
whatbrowser.org can't recognize Opera Mini or Opera Mobile

[04:20:00.0000] <jgraham>
/me wishes javascript looked more like CoffeeScript without an intermediate compilation step

[05:37:00.0000] <annevk>
wait, so now using a tracker on someone's personal domain is considered acceptable?

[05:37:01.0000] <annevk>
(re IANA email)

[05:37:02.0000] <annevk>
funny how that works

[05:44:00.0000] <hsivonen>
annevk: which email? is this the case where the registry is at the IANA but the front end is on mnot's domain?

[05:45:00.0000] <hsivonen>
s/the front/a front/

[05:45:01.0000] <annevk>
and the tracker

[05:45:02.0000] <annevk>
with issues and "reserved" items

[05:45:03.0000] <annevk>
not that it any way solves the single overview of all values potentially in use case discussed at TPAC

[05:45:04.0000] <annevk>
but Julian is still confused apparently

[06:13:00.0000] <annevk>
http://maplight.org/us-congress/bill/111-s-3804/874681/total-contributions o_O

[07:34:00.0000] <hsivonen>
so the previous host of all validator.nu stuff except html5.validator.nu is taking a long time to set up a new VM with the data of the old VM

[07:34:01.0000] <hsivonen>
in the mean time, I created a throw-away VM elsewhere and restored about.validator.nu onto it

[07:35:00.0000] <hsivonen>
so html5.validator.nu operation should return to normal (with styles and scripts) once DNS updates propagate

[07:37:00.0000] <hsivonen>
apparently, the right way to do things is to have some scripts for rsyncing a clone of the server to another VM. maybe I should have that

[07:38:00.0000] <hsivonen>
so one could create a new VM, rsync to it and throw the old VM away

[07:46:00.0000] <hsivonen>
also, I learned that it's slow to dig a few (<< 20 GB) out of the hosting provider's backup system

[08:45:00.0000] <smaug____>
annevk: what do you think about moving .classList to Web DOM Core?

[08:52:00.0000] <annevk>
smaug____, we had a plan to move classList, className, and id to DOM Core

[08:52:01.0000] <annevk>
smaug____, as well as getElementsByClassName

[08:52:02.0000] <smaug____>
ok, good

[08:52:03.0000] <smaug____>
hmm

[08:52:04.0000] <smaug____>
"had"?

[08:53:00.0000] <annevk>
smaug____, sorry, have

[08:53:01.0000] <smaug____>
good :)

[08:53:02.0000] <annevk>
smaug____, :)

[08:53:03.0000] <annevk>
/me will be back Monday evening

[09:42:00.0000] <TabAtkins>
Dammit, Firefox is broken on my system now. Wtf.  From a fresh boot, I try to open it and immediately get the "Firefox is already running" message.

[09:42:01.0000] <TabAtkins>
This bothers me because making gradient diagrams is way easier in FF, since they actually implement the syntax.

[09:43:00.0000] <Ms2ger>
$ killall firefox-bin

[09:43:01.0000] <TabAtkins>
"firefox-bin: no process found"

[09:43:02.0000] <AryehGregor>
Do not try that if you're running Firefox on Solaris.  :)

[09:44:00.0000] <AryehGregor>
$ ps aux | grep firefox

[09:44:01.0000] <Ms2ger>
I'm assuming Tab is sane

[09:44:02.0000] <AryehGregor>
Be careful what you assume.

[09:44:03.0000] <AryehGregor>
Especially in this channel.

[09:44:04.0000] <Ms2ger>
Well, sane enough not to use solaris

[09:44:05.0000] <AryehGregor>
I mean, maybe he was just heeding the topic.

[09:44:06.0000] <TabAtkins>
I have no idea what the implications of anything on Solaris are, as I've never run it.

[09:45:00.0000] <AryehGregor>
"killall" on Solaris means "kill all processes".

[09:45:01.0000] <AryehGregor>
On Linux it means "kill all processes with the given name".

[09:45:02.0000] <AryehGregor>
Hilarity ensues.

[09:45:03.0000] <TabAtkins>
AryehGregor: 107020    4729  0.0  0.0   6468   892 pts/3    S+   09:50   0:00 grep firefox

[09:45:04.0000] <TabAtkins>
So... nothing.

[09:45:05.0000] <AryehGregor>
/me wouldn't know this stuff, but the Wikimedia toolserver runs almost all Solaris because River Tarnell likes Solaris, and I'm a toolserver root

[09:46:00.0000] <AryehGregor>
TabAtkins, so it must be checking for a lock file or something, right?  Try "strace firefox 2>&1 | grep 'open('" and see what files it's trying to open.

[09:46:01.0000] <AryehGregor>
(Or you could, like, ask one of the several Mozilla developers here instead of listening to me, but then I'd have nothing to say)

[09:47:00.0000] <TabAtkins>
The only thing that seems useful is the very last call, where it does 'open("/usr/lib/firefox-3.6.12/firefox", O_RDONLY) = 3

[09:48:00.0000] <AryehGregor>
Surely the lock file (or whatever) is per-user, so /usr/lib seems unlikely.

[09:48:01.0000] <AryehGregor>
Also, what kind of weird distro are you using that puts stuff in /usr/lib/firefox-3.6.12?

[09:48:02.0000] <TabAtkins>
Goobuntu default.

[09:48:03.0000] <AryehGregor>
Oh, looks like Ubuntu does that too.

[09:49:00.0000] <AryehGregor>
I wonder why it's not just /usr/lib/firefox/.

[09:49:01.0000] <AryehGregor>
Anyway, I'm using the Firefox 4 beta instead.  It's much nicer, maybe you should just switch to that.

[09:49:02.0000] <TabAtkins>
I should.

[09:49:03.0000] <AryehGregor>
(although maybe you'll get the same error)

[09:49:04.0000] <TabAtkins>
/me goes to do that.

[09:51:00.0000] <TabAtkins>
Dammit, same problem.

[09:51:01.0000] <romeo_>
rm ~/.mozilla/firefox/********.Default/lock or something like that

[09:51:02.0000] <AryehGregor>
It's got to be something in your profile.

[09:51:03.0000] <AryehGregor>
Why doesn't Firefox check whether anything else actually has the lock file open, and ignore it if not?  Or something like that?

[09:52:00.0000] <AryehGregor>
Silly Firefox.

[09:52:01.0000] <AryehGregor>
(presumably it does and this is something more subtle)

[09:52:02.0000] <TabAtkins>
romeo_: Killed the lock, tried again, no go.

[09:52:03.0000] <romeo_>
I haven't had lock file problems for years. Used to be a common issue with netscape

[09:52:04.0000] <AryehGregor>
Nuke it from orbit.  It's the only way to be sure.

[09:53:00.0000] <TabAtkins>
For real.

[09:53:01.0000] <TabAtkins>
/me FIRES ZE MISSILES.

[09:54:00.0000] <TabAtkins>
Ah, hrm.  An attempt to rm -rf the .mozilla folder is dying with two files that can't be removed because "Device or resource busy".

[09:55:00.0000] <AryehGregor>
. . .

[09:55:01.0000] <AryehGregor>
What does that even mean on Unix?

[09:55:02.0000] <TabAtkins>
I don't know.

[09:55:03.0000] <AryehGregor>
Also, you could have just moved it to .mozilla-old.

[09:55:04.0000] <TabAtkins>
Bah.

[09:55:05.0000] <TabAtkins>
Too late now!

[09:56:00.0000] <Philip`>
You probably need "strace -f", since firefox is just a wrapper script

[09:56:01.0000] <AryehGregor>
Interesting observation.

[09:56:02.0000] <charlvn>
i think the binary is called firefox-bin

[09:57:00.0000] <AryehGregor>
Well, I knew that, but I didn't know how strace worked.

[09:57:01.0000] <AryehGregor>
I just blindly run it on random commands without actually understanding what I'm doing.

[09:57:02.0000] <AryehGregor>
It's fun!

[09:57:03.0000] <TabAtkins>
Um.  Firefox works now?

[09:57:04.0000] <TabAtkins>
The beta, at least.

[09:57:05.0000] <TabAtkins>
...huh

[09:57:06.0000] <AryehGregor>
(like, I have no idea if grepping for "open" made any sense here, maybe it would be getting file descriptors through some other syscall, I dunno)

[09:58:00.0000] <TabAtkins>
Anyway, I apparently killed *something* useful, because I'm no longer being blocked.  Yay!

[09:59:00.0000] <Philip`>
lsof is useful if you want to see what's got a particular file open/locked/etc

[09:59:01.0000] <TabAtkins>
No clue where this thing is trying to store my profile now, though.

[10:00:00.0000] <AryehGregor>
It didn't recreate the directory?

[10:01:00.0000] <TabAtkins>
Oh, there it is got it.

[10:05:00.0000] <TabAtkins>
Thanks, everyone.  High fives all around.

[10:06:00.0000] <AryehGregor>
Thanks for helping you decide to fix a Firefox problem by just deleting your .mozilla directory since none of us had any idea what was causing the problem, and none of us actually directly suggested the solution of deleting the directory anyway?

[10:07:00.0000] <AryehGregor>
Well, you're welcome, then.

[10:07:01.0000] <TabAtkins>
Dude, you said "nuke it from orbit".  I don't know how to interpret that other than "rm -rf the fucker".

[10:09:00.0000] <AryehGregor>
Well, yeah, I guess so.

[10:09:01.0000] <AryehGregor>
I wasn't really serious, though.

[10:11:00.0000] <TabAtkins>
Ah well, I was certain I could repair the damage if I did something wrong, so I rolled with it.

[10:19:00.0000] <charlvn>
you know you're speaking to geeks when they do a full post mortem of getting firefox to work again :P

[10:43:00.0000] <TabAtkins>
Ah, abusing gradients to make diagonal lines for my diagram is fun.

[10:43:01.0000] <TabAtkins>
Screw SVG.  ^_^

[10:44:00.0000] <shepazu>
TabAtkins: same to you and more of it :)

[10:44:01.0000] <TabAtkins>
It's SVG's fault for being an XML language.

[10:48:00.0000] <TabAtkins>
shepazu: Do you have "SVG" in your nicknames file or something?

[10:49:00.0000] <shepazu>
TabAtkins: colloquy lets you set up alert rules

[10:50:00.0000] <TabAtkins>
Yeah, that's what I was wondering.  You seem to show up magically when SVG is mentioned.

[10:50:01.0000] <Ms2ger>
"We are about to start implementing stream.record() and StreamRecorder."

[10:50:02.0000] <shepazu>
did someone mention SVG?

[10:50:03.0000] <Ms2ger>
Fun

[10:51:00.0000] <TabAtkins>
shepazu: I did?

[10:52:00.0000] <shepazu>
ah, that explains it :P

[12:14:00.0000] <Ms2ger>
(FTR, yes, I'm male)

[12:17:00.0000] <TabAtkins>
Ms2ger: ?_?

[12:34:00.0000] <gsnedders>
Ms2ger: So we don't get to call you "it" anymore? Lame.

[12:35:00.0000] <Ms2ger>
:(

[12:37:00.0000] <Dashiva>
Note that he didn't specify he was human

[13:40:00.0000] <Sirisian>
Hixie, did you see my question yesterday?

[13:45:00.0000] <Hixie>
what was it?

[13:45:01.0000] <Sirisian>
I was wondering if you had found a nice solution for websocket binary data like using ArrayBuffer or something? I've been waiting for it.

[13:45:02.0000] <Hixie>
oh dunno, i don't really do websockets anymroe

[13:46:00.0000] <Sirisian>
oh!

[13:46:01.0000] <Sirisian>
Do you know who does?

[13:46:02.0000] <Hixie>
ian fette is the editor of the protocol spec

[13:46:03.0000] <Hixie>
once they've figured out what the protocol should be i'll update the api accordingly

[13:46:04.0000] <Sirisian>
Is he on IRC much?

[13:47:00.0000] <Hixie>
he might be in #chromium

[13:47:01.0000] <Hixie>
dunno

[13:51:00.0000] <TabAtkins>
He's not at his desk right now, so he may not be available today.

[13:51:01.0000] <Hixie>
basically from the week before thanksgiving until the second week of january, silicon valley goes on vacation

[13:51:02.0000] <Hixie>
so... yeah

[13:56:00.0000] <othermaciej>
the work on the protocol spec has not been making good progress lately

[14:02:00.0000] <Okee>
This channel post private information to the internet, including the source of the ISP connection.  How do we get this info removed?

[14:02:01.0000] <aho>
huh?

[14:03:00.0000] <Hixie>
there is no way to have it removed

[14:03:01.0000] <aho>
i mean... this is IRC, right? :>

[14:06:00.0000] <heycam>
Okee, http://freenode.net/faq.shtml#cloaks if you don't want people to know where you're connecting from

[14:06:01.0000] <charlvn>
Okee: are you referring to Krijn's logs?

[14:06:02.0000] <heycam>
(that's specific to the Freenode network though, not just this channel)

[14:16:00.0000] <Sirisian>
TabAtkins, interesting. I'll come back in a few weeks then.

[14:29:00.0000] <Bugaroo>
Your link for cloaks is no good.

[14:30:00.0000] <Bugaroo>
The link says to ask ops to turn it on for us.

[14:31:00.0000] <Bugaroo>
The links says to just ask a network staffer to turn it on for us.  So who is the network staffer?

[14:31:01.0000] <Hixie>
why would we want to turn it on?

[14:35:00.0000] <Bugaroo>
why not?

[14:35:01.0000] <Hixie>
because people tend to be more responsible when they're not anonymous

[14:35:02.0000] <Bugaroo>
People don't want their ISP broadcast in Google Search engine.  I think this is a reasonable thing to ask for.

[14:36:00.0000] <TabAtkins>
Why not?  IPs are public information.

[14:36:01.0000] <Bugaroo>
Tell that to all of the people who are victims of identity theft and hacked online bank account.  Or worse yet, people contacted by government regulators.

[14:37:00.0000] <TabAtkins>
The former has nothing to do with IP addresses.  The second does, but that's why you protect *yourself* with an anonymizing service, since otherwise everyone in the chain knows who you are.

[14:37:01.0000] <Hixie>
i don't understand the relationship between one's ISP being logged and the above situations.

[14:37:02.0000] <Bugaroo>
It depends.  The manner that you are broadcasting information is not appropriate.  The fact that you are this great guru, all ominipotent, who knows what is good for people, sounds a bit egocentric.

[14:37:03.0000] <Hixie>
o_O

[14:38:00.0000] <Bugaroo>
I want my credentials removed from Google.  I haven't given you permissin to put them on there, and your privacy disclosure was a bit lacking as to the extent of your policies.

[14:38:01.0000] <Hixie>
credentials?

[14:38:02.0000] <TabAtkins>
Um, no.  The fact is that I actually understand the security implications of the matter, and realize that cloaking your IP solely at the endpoint is a useless gesture.

[14:39:00.0000] <Hixie>
i don't understand. if you think "government regulators" are searching google to get your IP from IRC logs, what makes you think they might not also be running the Freenode IRC servers in the first place?

[14:39:01.0000] <TabAtkins>
If you want anonymity, that's your responsibility.  It has to be done at the earlist possible point in the chain, or else the entire thing is futile.

[14:39:02.0000] <Bugaroo>
This is what I mean about the condescending nature of this channel.

[14:40:00.0000] <Bugaroo>
There was no disclosure in this channel that your ISP is going to be publicly uploaded to Google's index.

[14:41:00.0000] <TabAtkins>
That's because *the entire internet, and every router between you and freenode* notes and possibly records and broadcasts your IP address.

[14:41:01.0000] <TabAtkins>
Your IP address is publicly-available information, with no expectation of privacy.

[14:42:00.0000] <Hixie>
actually the fact that the channel is logged is listed in the channel topic, as per the Freenode policies, which you agreed to when you read the /motd message when you connected

[14:42:01.0000] <Hixie>
so you _were_ notified.

[14:42:02.0000] <privacy_violated>
Your decision to broadcast information from this channel is not support by many people.  Your attitude is a bit conceited and fails to take into account the needs of others who use this channel.

[14:42:03.0000] <TabAtkins>
Sigh.  /mute

[14:43:00.0000] <Hixie>
you misunderstand the nature of security and privacy on the internet. It is true that we are not very good about teaching security and privacy fundamentals on this channel, but that's not really what this channel is about.

[14:43:01.0000] <privacy_violated>
I am plan on filing a formal complaint with Freenode administrators.  For reasons unknown, you are not taking this matter seriously.

[14:44:00.0000] <Craig`>
alright guys, where would you recommend me starting for canvas game devZ

[14:45:00.0000] <Hixie>
pv: ok, please let me know how that goes

[14:45:01.0000] <Hixie>
Craig`: what's your experience with programming so far?

[14:47:00.0000] <Craig`>
id class myself as decent, ive been learning js lately, know the syntax etc just i havent really had a project as such

[14:48:00.0000] <gsnedders>
/me wonders what to do as free programming project for uni (which must be in Python…)

[14:48:01.0000] <gsnedders>
/me wants to do something siny

[14:48:02.0000] <gsnedders>
*shiny

[14:49:00.0000] <Philip`>
gsnedders: A raytracer with chrome spheres?

[14:50:00.0000] <Hixie>
gsnedders: make anolis way faster? :-)

[14:50:01.0000] <Craig`>
Hixie, so basically i have programming experience just none whatsoever in game dev

[14:51:00.0000] <Hixie>
gsnedders: or make it do multispec cross-references, multipage splitting, and index generation :-)

[14:51:01.0000] <Hixie>
Craig`: ah, hm

[14:51:02.0000] <Hixie>
Craig`: i dunno then, i'm in pretty much the same boat :-)

[14:51:03.0000] <charlvn>
gsnedders: if you want to do something with the web and a python server, tornado is awesome for websockets

[14:52:00.0000] <Craig`>
i know js syntax, and html/css to a deep level

[14:52:01.0000] <Craig`>
gah im typing slow because of dvorak

[15:01:00.0000] <TabAtkins>
Craig`: Try out some simple games.  Checkers, or even tic-tac-toe first.  That should only take a few hours to get right, and will teach most of the fundamentals of game programming.

[15:01:01.0000] <TabAtkins>
Then do something more fun, like Worms.

[15:02:00.0000] <TabAtkins>
/me has a demo of a simple Worms-like game he livecoded as part of a talk on developing games with Canvas.

[15:03:00.0000] <Craig`>
thanks, its just im unsure if i'd be able to solely work out the game logic

[15:04:00.0000] <TabAtkins>
Right, so start with a super-trivial game like ttt so you can learn how turn flow, painting order, etc. works before saddling yourself with a more complicated project.

[15:04:01.0000] <Hixie>
tab's advice is good

[15:04:02.0000] <Hixie>
also, url to worms game?!

[15:05:00.0000] <Philip`>
/me notes that some people have been working on porting http://www.hedgewars.org/ (Worms clone) to JS

[15:07:00.0000] <TabAtkins>
Hixie: http://www.xanthir.com/blog/b48D1

[15:08:00.0000] <TabAtkins>
It's very simply, and mainly intended as a didactic aid, not an actual game.

[15:08:01.0000] <Craig`>
thanks TabAtkins 

[15:08:02.0000] <Hixie>
neat

[15:09:00.0000] <Hixie>
i like how you can keep firing while it's your turn :-P

[15:09:01.0000] <TabAtkins>
Like I said, simple and intended for didactic purposes only.  ^_^

[15:09:02.0000] <TabAtkins>
Otherwise known as "I coded the whole thing the morning of my talk"

[15:11:00.0000] <Hixie>
very neat

[15:11:01.0000] <TabAtkins>
I need to finish it out sometime and hand it over to the devrel team.

[15:12:00.0000] <Hixie>
i've been playing with doing a multiplayer dungeon crawl type game, but i have no experience doing realtime client/server gaming code so i got bogged down in trying to write that part of the code

[15:12:01.0000] <Hixie>
haven't worked on it in ages though

[15:12:02.0000] <Hixie>
maybe i'll work on it some next week

[15:15:00.0000] <Craig`>
i just never get around to programming things, heh

[15:29:00.0000] <aho>
js/canvas is very easy to use

[15:30:00.0000] <aho>
it's like any other 2d api... just a bit easier :>

[15:30:01.0000] <boogyman>
thanks for stating your opinion

[15:33:00.0000] <aho>
Craig`, got some simple code over here: http://kaioa.com/node/104

[15:33:01.0000] <Craig`>
cheers

[15:33:02.0000] <aho>
and that simpleLoader thingy explained: http://www.reddit.com/r/javascript/comments/e5vhj/emulating_lossy_rgba_images_with_html5s_canvas/c15jr22

[15:35:00.0000] <aho>
wondered if i should write some straightforward game tutorial

[15:35:01.0000] <Craig`>
i always have ideas just if after googling a bit and no luck i tend to just go on games or alike

[15:35:02.0000] <aho>
(simpler than pong) :>

[15:35:03.0000] <Craig`>
id like that

[15:36:00.0000] <Hixie>
there's a lot of tutorials for the simple stuff, and there's lots of books on the advanced stuff, but what i haven't found is tutorials introducing the middle ground stuff, like how to actually implement multiplayer real-time games in principle (handling lag and the like)

[15:36:01.0000] <aho>
but first i gotta write about this: http://kaioa.com/k/bugger/bugger.js

[15:36:02.0000] <aho>
because it's so f-ing silly :)

[15:36:03.0000] <heycam>
is there a list of split-out specs that have been published at the w3c that still exist in the whatwg full version?

[15:36:04.0000] <Hixie>
yeah, it's on the whatwg faq

[15:37:00.0000] <heycam>
ah http://wiki.whatwg.org/wiki/FAQ#What_are_the_various_versions_of_the_spec.3F thanks

[15:38:00.0000] <aho>
handling lag is a f-ing mess

[15:38:01.0000] <Craig`>
so yeah, is there a list or alike for games to try to implement starting from easy? heh.

[15:39:00.0000] <aho>
i can explain the concepts of a game called ping (first game i ever wrote)... it's the bare minimum... it's just enough to call it a game

[15:40:00.0000] <aho>
there are two lanes... and a paddle which can be either on the left lane or the right one. a ball drops randomly... and you gotta deflect it... you can switch the lanes by pressing a key

[15:40:01.0000] <aho>
over time it gets faster

[15:40:02.0000] <Craig`>
tbh after reading some tuts i think i could have a go at pong

[15:40:03.0000] <aho>
and you get more points

[15:40:04.0000] <aho>
:>

[15:41:00.0000] <aho>
shoot em ups (the simple kind that is) are also very easy to write

[15:42:00.0000] <Craig`>
im guessing that once youve got the basics they seem to become easier

[15:42:01.0000] <Hixie>
singleplayer (or locally multiplayer) pong and tic tac toe are both good starting games

[15:43:00.0000] <aho>
or apple chess

[15:43:01.0000] <Hixie>
i did rock paper scissors long ago :-) http://software.hixie.ch/fun/games/rps

[15:43:02.0000] <Hixie>
apparently the images for rock and paper have broken

[15:44:00.0000] <aho>
Adobe's license agreement for downloading Acrobat Reader is a PDF. Well done Adobe. Well done. - https://twitter.com/#!/robarnold/status/5753460003704833

[15:44:01.0000] <aho>
haha

[15:44:02.0000] <Craig`>
heh cool Hixie 

[15:44:03.0000] <Hixie>
here's my tic tac toe http://software.hixie.ch/fun/games/tic-tac-toe

[15:45:00.0000] <Hixie>
did most of those over christmas of 2000 iirc

[15:45:01.0000] <aho>
http://mbtic.com/ddd (still not finished) :f

[15:46:00.0000] <aho>
100% pure backtracking :)

[15:46:01.0000] <aho>
i do like logic maze games though

[15:47:00.0000] <boogyman>
Hixie: ttt fail :P

[15:48:00.0000] <Craig`>
aho, i like that; you make it?

[15:48:01.0000] <aho>
ye

[15:48:02.0000] <Craig`>
very nice

[15:48:03.0000] <aho>
~3kb js + ~83kb blob file

[15:49:00.0000] <aho>
<4kb for the page :)

[15:49:01.0000] <Hixie>
aho: pretty neat

[15:49:02.0000] <Hixie>
and pretty pretty too :-)

[15:49:03.0000] <Craig`>
im interested in webgl but im wanting to play around with canvas first

[15:49:04.0000] <aho>
:)~

[15:50:00.0000] <Hixie>
boogyman: how is it fail?

[15:51:00.0000] <Philip`>
Hixie: RTS-style multiplayer, or FPS-style multiplayer, or something else?

[15:51:01.0000] <Hixie>
Philip`: not sure what difference it makes in this context, can you elaborate?

[15:51:02.0000] <aho>
http://kaioa.com/k/rm2.avi <- also need to port that one over :)

[15:51:03.0000] <boogyman>
if the "computer" goes first and game ends on a draw, the last piece isn't placed prior to the "It's a draw" message being shown

[15:51:04.0000] <aho>
would be perfect as small n silly web game

[15:52:00.0000] <Hixie>
boogyman: it says "it's a draw" as soon as the game is a draw

[15:53:00.0000] <Hixie>
boogyman: which can be before all the pieces are placed

[15:53:01.0000] <boogyman>
Then it fails on the draw logic

[15:53:02.0000] <TabAtkins>
Hixie: ttt is solved.  You should just say "It's a draw" immediately.  ^_^

[15:53:03.0000] <Philip`>
Hixie: RTS usually has a lot more objects moving around the world, and usually allows more latency - you can press a key and then your input gets shared across the network and then executed simultaneously by every player perhaps 300ms later, and nobody notices the delay

[15:53:04.0000] <Craig`>
aho, thats brilliant!

[15:54:00.0000] <aho>
:)

[15:54:01.0000] <Hixie>
TabAtkins: it's not a draw if you play poorly :-)

[15:54:02.0000] <Craig`>
id love to be able to make things like that D:

[15:54:03.0000] <Hixie>
Philip`: i guess FPS, then, though it's actually a 2d over-the-top rendering in the current implementation

[15:54:04.0000] <Philip`>
Hixie: FPS requires much more responsive input, so usually it does some approximate client-side prediction and then tries to catch up with the server to stay in sync

[15:55:00.0000] <Hixie>
Philip`: imagine multiplayer pacman, where the position of the ghosts can't be 300ms behind

[15:55:01.0000] <boogyman>
Hixie: A draw can be already determined with 2 pieces yet to play

[15:55:02.0000] <Hixie>
Philip`: diablo 2 might be another good analogue

[15:56:00.0000] <Hixie>
boogyman: yeah i think it's only testing it on the computer's turn

[15:56:01.0000] <TabAtkins>
Hixie: Luckily for things like Pacman, you can do prediction pretty easily.

[15:56:02.0000] <Hixie>
TabAtkins: yeah, but it'd still be nice to have a tutorial somewhere that walked someone through this. It's not a hard problem, it's just something for which I've never seen good beginner tutorials.

[15:57:00.0000] <Hixie>
boogyman: specifically iirc what happens is that if the computer determines it can't either win or lose, it just says "it's a draw" instead of picking a move at random

[15:57:01.0000] <boogyman>
Yeah, I understand the logic :P

[15:57:02.0000] <Hixie>
well it's not a fail :-P

[15:57:03.0000] <TabAtkins>
Hixie: I guess I'll write on, then?

[15:57:04.0000] <Hixie>
TabAtkins: that'd be awesome :-)

[15:58:00.0000] <TabAtkins>
/me has too many projects he wants to do this weekend since he has the whole thing to himself.

[15:58:01.0000] <TabAtkins>
/me will probably end up doing none of them and just playing video games instead.

[15:58:02.0000] <Philip`>
Hixie: Okay, that sounds closer to the FPS style since you want to respond to player inputs faster than the network latency

[15:58:03.0000] <boogyman>
It's a half fail, because you stated as soon as the game is a draw, well it's a draw when neither player can win, not only if the computer cannot win

[15:59:00.0000] <Craig`>
brb moving from desktop to laptop

[15:59:01.0000] <TabAtkins>
/me forgot that his wife is now involved in the story of Brutal Legend, and so he probably can't play it this weekend without her.

[15:59:02.0000] <Hixie>
Philip`: yeah

[15:59:03.0000] <Dashiva>
Story

[15:59:04.0000] <Dashiva>
That's also a word to use to describe it

[15:59:05.0000] <Hixie>
boogyman: it's just attempting to act like a human -- i generally when playing would not say "it's a draw" after i played, only before i played.

[15:59:06.0000] <Philip`>
Hixie: If it was the other thing then I would have pointed at http://www.gamasutra.com/view/feature/3094/1500_archers_on_a_288_network_.php?print=1 as a useful article, but it's probably entirely irrelevant here


2010-11-20
[16:00:00.0000] <TabAtkins>
Dashiva: It has a perfectly servicable (and awesome) story.

[16:00:01.0000] <TabAtkins>
(Though the metal is more important.)

[16:00:02.0000] <TabAtkins>
/me has rediscovered the metal his dad listened to through this game.

[16:00:03.0000] <Hixie>
Philip`: interesting, thanks

[16:02:00.0000] <craiggles>
hey again

[16:05:00.0000] <Hixie>
Philip`: very interesting stuff

[16:06:00.0000] <boogyman>
wb Craig

[16:36:00.0000] <hober>
using the DOM, is it possible to add new comment nodes before the document.documentElement?

[16:39:00.0000] <Hixie>
hober: in theory yes

[16:39:01.0000] <Hixie>
untested though

[16:45:00.0000] <hober>
document.documentElement.insertBefore(ref_to_comment_node) ?

[16:45:01.0000] <hober>
/me will give that a try (in tmpvar's js impl of the dom)

[16:46:00.0000] <Dashiva>
Wouldn't it be document.insertBefore(comment, document.documentElement)?

[16:46:01.0000] <hober>
(I'm trying to add paul_irish-style IE conditional comments before <html> in a document that I'm creating with the DOM and then serializing

[16:47:00.0000] <hober>
Dashiva: probably

[07:08:00.0000] <pererik_>
 /nick pererik

[07:29:00.0000] <jgraham>
gsnedders: Siny? You should write something that does lots of tinagle-based graphcs. Sure to be very siny

[07:29:01.0000] <jgraham>
*triangle

[07:32:00.0000] <jgraham>
Ms2ger: You could have tried pdf2pdf or something

[07:32:01.0000] <jgraham>
(but the pdf worked for me, so...)

[07:33:00.0000] <Ms2ger>
I wouldn't have known whether the new PDF would work for Kris

[07:33:01.0000] <jgraham>
No, me neither

[07:34:00.0000] <jgraham>
I suppose he is useing acrobat

[07:34:01.0000] <jgraham>
on Windows

[07:34:02.0000] <jgraham>
If you had such a thing to test with

[07:43:00.0000] <Philip`>
You should have made it an XPS file instead

[07:53:00.0000] <Ms2ger>
jgraham, btw, would you mind adding MIT headers to your new Anolis files?

[08:00:00.0000] <jgraham>
Ms2ger: I don't mind it happening

[08:01:00.0000] <jgraham>
I would be quite surprised if I actually do it though

[08:01:01.0000] <Ms2ger>
Okay


2010-11-22
[02:29:00.0000] <phrearch>
morning

[02:30:00.0000] <phrearch>
does anyone know if the html5 audio tag supports streaming yet? (in some browser implementation)

[04:26:00.0000] <zcorpan>
phrearch: i think that's something that hasn't been tested much but should work fine in theory

[04:27:00.0000] <phrearch>
zcorpan: i thought about adding a shoutcast player in a webpage

[04:27:01.0000] <phrearch>
worth to give it a try

[04:28:00.0000] <zcorpan>
sure

[04:28:01.0000] <zcorpan>
file any bugs you find :)

[04:36:00.0000] <zcorpan>
one thing i'm concerned about with websockets is that most generic websocket servers seem to just echo the Origin field without giving an obvious way for the app writer to restrict which Origins to allow, let alone making it clear to the app writer that it is his responsibility to restrict connections from different origins

[04:37:00.0000] <zcorpan>
so people might assume that "websockets uses origin-based security model" and go ahead and assume that the browser will disallow connections from other origins

[04:44:00.0000] <zcorpan>
i guess i should send email to hybi

[04:48:00.0000] <hsivonen>
MikeSmith: I believe I've now restored all *.validator.nu stuff except s.validator.nu

[04:49:00.0000] <hsivonen>
some services will experience some DNS lag, particularly livedom.validator.nu

[04:57:00.0000] <phrearch>
zcorpan: are there some docs how to secure websockets properly?

[04:58:00.0000] <phrearch>
im currently using websockets alot, but havent thought much about security yet

[05:02:00.0000] <zcorpan>
phrearch: if you only want to allow connections from your own site, you need to either hardcode your site's origin in the Sec-WebSocket-Origin response field or refuse the connection when the Origin request field does not match your site's origin

[05:02:01.0000] <zcorpan>
just sent an email to hybi

[05:03:00.0000] <phrearch>
hm, isnt the origin a header option?

[05:03:01.0000] <zcorpan>
what do you mean option?

[05:03:02.0000] <phrearch>
ehm, i mean isnt origin something that can be forged?

[05:04:00.0000] <phrearch>
i probably should check the websocket code im using for the sec-websocket-origin thing 

[05:06:00.0000] <phrearch>
http://paste.pocoo.org/show/294567/

[05:06:01.0000] <phrearch>
i guess its handled already in the code

[05:10:00.0000] <zcorpan>
you can't forge the origin field in a browser without actually running script in your origin, in which case it's already game over :)

[05:10:01.0000] <zcorpan>
            handshake.append("Sec-WebSocket-Origin: %s" % (originHeader))

[05:11:00.0000] <zcorpan>
unless i misread the code, that echos the origin value, which thus allows connection from anywhere

[05:19:00.0000] <zcorpan>
http://software.hixie.ch/utilities/js/live-dom-viewer/saved/713 - test your websocket server from the origin 'http://software.hixie.ch' (change ws://localhost:12345/test to whatever URL your websocket server lives at)

[10:06:00.0000] <TabAtkins>
I couldn't figure out why davidc's post was giving me a different renderig in Chrome than FF. Then I realized it's MathML!  Yay!

[10:06:01.0000] <jgraham>
Took me a while to realise it was text/html. More yay!

[10:07:00.0000] <TabAtkins>
/me wishes Chrome exposed the Page Info stuff that ff does.  FF is still a better browser for doing webdev in. ;_;

[10:08:00.0000] <TabAtkins>
I don't understand - can someone explain to me why the "pre-multiplied" color has the multiplication in it, while the post-multiplied color doesn't?

[10:09:00.0000] <paul_irish>
TabAtkins: what Page Info?

[10:09:01.0000] <TabAtkins>
paul_irish: Right click on a page in firefox, and Page Info is a menu option.

[10:09:02.0000] <TabAtkins>
right below "view page source"

[10:09:03.0000] <paul_irish>
but what's the info in there thats useful for you

[10:09:04.0000] <TabAtkins>
Oh!  Type and encoding, mostly.

[10:10:00.0000] <TabAtkins>
I've had to look that information up a couple times over my webdesign career.

[10:10:01.0000] <TabAtkins>
If it turns out this is exposed somewhere in the console I'll be happy.

[10:11:00.0000] <paul_irish>
not in the console but i typically get it from the response headers in the network tab

[10:11:01.0000] <TabAtkins>
I don't see a Network tab.  Do you mean Resources?

[10:12:00.0000] <jgraham>
paul_irish: Does it also have the values the browser is actually using?

[10:12:01.0000] <jgraham>
Since these can be different in strange and unexpected ways

[10:12:02.0000] <Philip`>
TabAtkins: Pre-multiplied colour has had the alpha multiplied into the colour components before rendering, hence the "pre"

[10:13:00.0000] <paul_irish>
TabAtkins: you're telling me you don't run dev channel chrome? lol

[10:13:01.0000] <TabAtkins>
Hm, I don't recall all this information in the Headers subtab before.  Just a few weeks ago I was trying to debug some eventsource code and had to switch to firefox so I coudl intercept request headers...

[10:13:02.0000] <Philip`>
TabAtkins: whereas non-pre-multiplied colours delay the multiplication until you perform the compositing operation

[10:13:03.0000] <TabAtkins>
paul_irish: No.  ^_^

[10:13:04.0000] <paul_irish>
terrible, just terrible.

[10:13:05.0000] <TabAtkins>
Philip`: Ah, so the pre/post is referring to the opposite thing I was thinkinga bout.

[10:14:00.0000] <Philip`>
TabAtkins: I think almost nobody ever uses the term "post-multiplied", and I don't think that term makes any sense because you're not multiplying after anything

[10:15:00.0000] <Philip`>
TabAtkins: You're just not multiplying before everything, so it's non-pre :-)

[10:16:00.0000] <TabAtkins>
Philip`: Kk, I suppose that makes sense.

[10:17:00.0000] <TabAtkins>
Color math still confuses me, unfortunately.  I haven't been able to glean sufficient understanding from occasional snatches of code and wikipedia skimming.

[10:21:00.0000] <Philip`>
I think the original Porter-Duff paper is quite readable and useful

[10:21:01.0000] <Philip`>
(http://keithp.com/~keithp/porterduff/)

[10:21:02.0000] <TabAtkins>
Thanks, I'll read it!

[10:53:00.0000] <david_carlisle>
TabAtkins:  chrome could pick up the webkit mathml code you know:-)

[10:53:01.0000] <TabAtkins>
I need to chat around and see what our progress on that is.

[10:54:00.0000] <TabAtkins>
I want math in my posts, dammit.

[11:03:00.0000] <bckenny>
TabAtkins: yes, please

[11:04:00.0000] <bckenny>
the stix fonts licensing was kind of messy last I heard though

[11:06:00.0000] <david_carlisle>
bckenny: its the SIL font licence, but FF for instance doesn't distribute stix, it just expects that some font with those characters is there,

[11:08:00.0000] <bckenny>
does that work well generally? it seems like a consistent and reliable font would at the very least be desirable

[11:08:01.0000] <david_carlisle>
I think currently the webkit code does assume stixgeneral in  its internal use of css, probably it would be better if it didn't (so i could experiment with other fonts:-) 

[11:09:00.0000] <david_carlisle>
well yes having a  font that you could rely on being there would be good, but ...

[11:10:00.0000] <bckenny>
i'm open to other ways, i just want it to work without me having to work too hard for it :)

[11:11:00.0000] <david_carlisle>
you and me both:-)

[11:11:01.0000] <bckenny>
and a 2.6MB font set is too big for me just to have equations in my blog

[11:13:00.0000] <david_carlisle>
yes eventually hopefully it'll "just be there" like times roman or something, but we're not quite there yet

[11:15:00.0000] <david_carlisle>
and also (coming back to not hard coding reliance on stix) a large class of documents just use fractions superscripts + 1 and brackets, and they don't need anything quite as exotic as the stix fonts

[11:20:00.0000] <zcorpan>
anyone have a good link about cookie "path" feature being useless because of same-origin-policy?

[11:35:00.0000] <Dashiva>
zcorpan: Isn't it just making an iframe to the path you want and reading contentWindow.document.cookie?

[11:39:00.0000] <zcorpan>
yeah. i found http://www.webappsec.org/lists/websecurity/archive/2006-03/msg00000.html

[13:35:00.0000] <Aleoss>
Suggestion to add to HTML5: Allow <label> to interact with <select>

[13:36:00.0000] <gsnedders>
Aleoss: Interact in what way?

[13:36:01.0000] <Aleoss>
By focusing it.

[13:39:00.0000] <gsnedders>
Aleoss: HTML5 already allows label@for to point to a select, if it doesn't focus it that's a UI issue and not a spec issue

[13:41:00.0000] <Aleoss>
gsnedders: Well I'm using <!DOCTYPE html> and the latest version of Firefox and clicking on <label for="sel">Select:</label> doesn't focus <select id="sel">

[13:41:01.0000] <gsnedders>
/me lets someone who actually knows about Gecko's impl of form elements comment more

[13:45:00.0000] <Peter->
Aleoss, clicking on the label @ http://peter.sh/files/select-focus-via-label.html does not focus the label for you?

[13:46:00.0000] <Peter->
Firefox 4b7 properly focusses the select here

[13:55:00.0000] <Aleoss>
Peter-: I must have done something wrong in my code then. Not sure why it wasn't selecting before. I re-wrote that portion and it seems to work now.

[14:56:00.0000] <Xano__>
Is it semantically correct to use the address tag for a restaurant's contact information on a website with restaurant reviews?

[14:57:00.0000] <Xano__>
Most explanations I find say something like "the address tag is meant for contact information of (the author of) a section"

[14:57:01.0000] <Xano__>
The restaurant isn't the author, but it does count as contact info for a particular section

[14:58:00.0000] <AryehGregor>
Xano__, seems to be correct usage according to the spec: http://www.whatwg.org/specs/web-apps/current-work/multipage/sections.html#the-address-element

[14:58:01.0000] <AryehGregor>
It's not so clear.

[14:58:02.0000] <AryehGregor>
It just says "the contact information for its nearest article or body element ancestor".

[14:59:00.0000] <Xano__>
AryehGregor: That looks like what I do is semantically correct then

[14:59:01.0000] <AryehGregor>
Or close enough, sure.

[14:59:02.0000] <Xano__>
Is the it allowed to contain block level elements?

[15:00:00.0000] <AryehGregor>
Yes, the content model is "    Flow content, but with no heading content descendants, no sectioning content descendants, and no header, footer, or address element descendants."

[15:00:01.0000] <AryehGregor>
If you follow the link for "flow content", it includes what HTML 4 refers to as block-level elements.

[15:03:00.0000] <Aleoss>
Which is best to use and why? <object> or <embed> or <video>

[15:05:00.0000] <TabAtkins>
Aleoss: What are you trying to do?  If it's "embed a video", use <video>.

[15:05:01.0000] <AryehGregor>
(probably with fallback unless you don't care about IE and old browsers and don't mind encoding in at least two formats)

[15:07:00.0000] <Xano__>
Also, do mobile browsers already add extra features to <address>, like integration with a maps application?

[15:07:01.0000] <AryehGregor>
What do you mean by "already"?

[15:07:02.0000] <TabAtkins>
Xano__: I don't believe any browser does anything special for <address> at all.

[15:07:03.0000] <AryehGregor>
<address> has been around for ages, way before HTML5.

[15:07:04.0000] <AryehGregor>
It's practically unused, so I don't think anyone adds features for it.

[15:08:00.0000] <Xano__>
AryehGregor: But its meaning is different in HTML5, right?

[15:08:01.0000] <AryehGregor>
Not really.

[15:08:02.0000] <Xano__>
At least I thought so

[15:08:03.0000] <jgraham>
Xano__: AFAIK no one adds any features around <address> and it is widely misused per the letter of the spec

[15:08:04.0000] <AryehGregor>
Pretty much the same as in HTML 4.

[15:08:05.0000] <AryehGregor>
Maybe a little broader.

[15:08:06.0000] <jgraham>
So it is really irrelevant how you use it

[15:08:07.0000] <jgraham>
Except insofar as it makes you happy

[15:08:08.0000] <Xano__>
okay

[15:08:09.0000] <Xano__>
Thanks for the info :)

[15:09:00.0000] <jgraham>
Or you have something like microdata which imposes additional semantics that are actually consumed by someone

[15:09:01.0000] <jgraham>
(Hixie may disagree with this view)

[15:09:02.0000] <Xano__>
Nah, it's just a (crappy) mobile website

[15:13:00.0000] <jgraham>
(one might posit that per-spec use of <address> now would facilitate the addition of some microdata or microformats or whatever later on, if those formats assumed <address> was used as the spec says)

[15:18:00.0000] <AryehGregor>
(one might also posit that that sort of planning is useless and you should work on things like that after you have the features in place)

[15:19:00.0000] <jgraham>
(YAGNI in other words)

[15:19:01.0000] <Xano__>
This may not be the right channel to ask, but I'll try anyway. I have used an iframe to include a GMap on a page (little quick & dirty bc greedy client). THe problem is that it works great in desktop browsers, but mobile browsers show a white rectangle, with a Sign in link, and "View in classic | mobile" and a copyright notice, but no map and I cannot click the link. Even if I make Firefox switch to an iPhone 3 user agent string, it still s

[15:19:02.0000] <Xano__>
the map. What may be wrong?

[15:19:03.0000] <jgraham>
/me concludes from recent email that the a11y people have not understood <hgroup>

[15:20:00.0000] <jgraham>
Which is sad because headings are a good example of semantic markup that it is worth doing right

[15:20:01.0000] <Xano__>
Asking here because nobody else knows and people here have a lot of experience with client sided coding in general

[15:23:00.0000] <paul_irish>
Xano__: this isn't a support channel.. sounds like the google maps user groups would be the best place for this issue.

[15:25:00.0000] <AryehGregor>
Well, it's sometimes okay for standards-based support, but it's pretty lousy for support for proprietary APIs.

[15:25:01.0000] <AryehGregor>
Not many of us are actually client-side developers.

[15:25:02.0000] <paul_irish>
speak for yourself. :)

[15:26:00.0000] <AryehGregor>
/me is pretty sure he is

[15:26:01.0000] <paul_irish>
heh.


2010-11-23
[23:46:00.0000] <hsivonen>
MikeSmith: as you may have noticed from bugmail, I managed to restore bugzilla.validator.nu yesterday.

[23:47:00.0000] <MikeSmith>
yup

[23:47:01.0000] <MikeSmith>
thanks

[23:47:02.0000] <MikeSmith>
your server mostly back to normal now?

[23:47:03.0000] <hsivonen>
MikeSmith: yeah, except for s.validator.nu

[23:47:04.0000] <MikeSmith>
oh

[23:48:00.0000] <hsivonen>
also, html5.validator.nu needs to be updates to an operating system that gets security patches

[23:48:01.0000] <MikeSmith>
heh

[23:48:02.0000] <MikeSmith>
yeah that'd be good

[23:48:03.0000] <hsivonen>
but I intend to create a new VM for that and repoint the DNS once that's done

[23:48:04.0000] <hsivonen>
I'm not planning on even trying to run a distribution upgrade on html5.validator.nu

[23:48:05.0000] <MikeSmith>
OK

[23:49:00.0000] <hsivonen>
then I intend to stay on an LTS release for a couple of years without trying to upgrade

[23:49:01.0000] <MikeSmith>
that sounds prudent

[23:49:02.0000] <hsivonen>
the reason why the servers weren't on LTS in the first place was that last time the LTS didn't yet have openjdk

[23:50:00.0000] <MikeSmith>
ah yeah

[23:51:00.0000] <hsivonen>
my unhappiness with Ubuntu on both the desktop and on the server is growing, but so far, I haven't made the jump to another distro

[23:51:01.0000] <MikeSmith>
FreeBSD

[23:51:02.0000] <MikeSmith>
I guess I don't see what the value proposition is for running Ubuntu on the server

[23:53:00.0000] <hsivonen>
my thinking was that by running Ubuntu on the servers, I don't need to use a different package system on the server compared to the desktop

[23:53:01.0000] <MikeSmith>
ah

[23:53:02.0000] <hsivonen>
and openjdk came to Ubuntu sooner than it came to a stable Debian release, IIRC

[23:53:03.0000] <hsivonen>
might be a false optimization and maybe I'd be better off running CentOS

[23:53:04.0000] <MikeSmith>
maybe

[23:53:05.0000] <MikeSmith>
or you could run Debian testing

[23:55:00.0000] <hsivonen>
I think I don't want to run a non-stable release on the servers

[23:55:01.0000] <MikeSmith>
yeah

[23:55:02.0000] <hsivonen>
though I could start believing that Debian testing is more stable than Ubuntu "stable" releases

[23:56:00.0000] <MikeSmith>
that might not be so far from the truth

[23:56:01.0000] <MikeSmith>
and it's easy enough to revert individual packages when you need to

[23:56:02.0000] <MikeSmith>
e.g., when jackass Debian dev gets a brilliant idea like changing cron behavior so it generates nofications any time a process exits non-zero

[23:56:03.0000] <hsivonen>
for desktop, I've occasionally wondered if RHEL desktop came with better-working hardware drivers and support that actually helps

[23:58:00.0000] <hsivonen>
the problem with desktop is that home users don't use RHEL desktop, so proprietary packages like Skype, Spotify and Chrome aren't advertised to support RHEL Desktop

[23:58:01.0000] <MikeSmith>
ah

[23:59:00.0000] <hsivonen>
AFAICT, Ubuntu has the best 3rd-party package availability and is the only one of the distros officially supported by Skype and Chrome that has a paid support service available

[23:59:01.0000] <hsivonen>
but now that I've used the paid support service for over 6 months, I'm inclined to think it's useless

[23:59:02.0000] <MikeSmith>
I guess I've pretty much gave up on desktop LInux after 10 years of it seeming to find more and more ways of burning up inordinate amounts of my time, and I'm now just using OSX and macports stuff

[00:00:00.0000] <MikeSmith>
paid support for desktop?

[00:00:01.0000] <MikeSmith>
or with server support too?

[00:00:02.0000] <hsivonen>
MikeSmith: I pay for desktop support. For the servers, I usually don't need professional help. And when I do, the hosting provider helps me.

[00:00:03.0000] <MikeSmith>
ok

[00:01:00.0000] <hsivonen>
Canonical's paid desktop support has semi-solved a problem for me once.

[00:01:01.0000] <hsivonen>
but then the next distribution upgrade broke stuff even more so that the solution no longer works

[00:02:00.0000] <MikeSmith>
when they break stuff to that degree it can only seem to me that they just don't care enough to actually do complete testing

[00:02:01.0000] <hsivonen>
I think it's really sad that the paid support couldn't manage to successfully instruct me how to make a bootable clone of the system onto another disk

[00:03:00.0000] <MikeSmith>
people bitch about stable Debian releases taking forever, but at least you can be confident they've tested the hell out of it before releasing

[00:03:01.0000] <hsivonen>
and the latest was that the support analyst suggested buying another computer when I later figured that they are just shipping me super-leaky software and my problem is semi-solved if I kill nautilus every morning

[00:03:02.0000] <MikeSmith>
heh

[00:03:03.0000] <MikeSmith>
wonderful

[00:04:00.0000] <MikeSmith>
maybe he should have suggested you buy another OS with your new computer

[00:05:00.0000] <hsivonen>
maybe

[00:05:01.0000] <hsivonen>
this year, on my work computer, Ubuntu has regressed support for 3 pieces of hardware

[00:06:00.0000] <hsivonen>
on my grandfather's Ubuntu installation, Ubuntu has regressed support for 1 piece of hardware lately

[00:06:01.0000] <MikeSmith>
reminds me of previous job where I knew some apps we had sold to customers were just not what they should have been… felt like telling them, you shouldn't listen to our sales people

[00:06:02.0000] <hsivonen>
and on my girlfriend's, also one piece of hardware

[00:06:03.0000] <MikeSmith>
regressed?

[00:06:04.0000] <MikeSmith>
crazy

[00:06:05.0000] <MikeSmith>
seems like that should never happen

[00:06:06.0000] <hsivonen>
MikeSmith: hardware used to work. after distribution upgrade doesn't work at all or works worse

[00:07:00.0000] <MikeSmith>
geez

[00:07:01.0000] <MikeSmith>
that's the kind of thing that would make me want to find out who the guy is who caused that, and where he lives

[00:09:00.0000] <MikeSmith>
or their names and pictures should be published on a site somewhere

[00:09:01.0000] <MikeSmith>
wall of shame

[00:10:00.0000] <MikeSmith>
 or dock their pay

[00:10:01.0000] <MikeSmith>
1000 dollars for every regression that makes it into production

[00:11:00.0000] <MikeSmith>
100 dollars for every time they break a build

[00:12:00.0000] <hsivonen>
as a developer, I sympathize with developers regressing stuff, but an OS distributor really ought to have serious hardware support regression testing with a wide array of hardware

[00:12:01.0000] <MikeSmith>
hsivonen: anyway, I plan on trying to go through open validator bugs over next two weeks and checking in some fixes

[00:12:02.0000] <hsivonen>
I realize that that's would be a significant capital investment and an ongoing personnel investment

[00:13:00.0000] <hsivonen>
MikeSmith: cool

[00:13:01.0000] <MikeSmith>
they could be doing it a lot better

[00:13:02.0000] <hsivonen>
MikeSmith: I intend to switch to a newer Jetty today

[00:13:03.0000] <hsivonen>
Jetty's security bugs generally aren't in the part that V.nu uses, but just to be sure

[00:13:04.0000] <MikeSmith>
they are cutting corners in order to get "stable" releases out more often

[00:14:00.0000] <MikeSmith>
well, "plan on trying"… I guess I should say I will make sure I do actually get at least a couple fixe in soonish

[00:16:00.0000] <phrearch>
hi

[00:17:00.0000] <MikeSmith>
lemme know when you do that Jetty upgrade

[00:17:01.0000] <MikeSmith>
I can try it out on several machines

[00:17:02.0000] <MikeSmith>
not sure what they all are running

[00:17:03.0000] <MikeSmith>
/me checks

[00:20:00.0000] <MikeSmith>
hsivonen: actually, I see that they're all 2.6.26-2-amd64 x86_64 GNU/Linux

[00:20:01.0000] <MikeSmith>
so that doesn't help much as far as variety of environments

[00:20:02.0000] <MikeSmith>
phrearch: hey

[00:20:03.0000] <phrearch>
hi MikeSmith

[00:21:00.0000] <phrearch>
i wonder if a contenteditable has the same events/properties as a textbox

[00:22:00.0000] <MikeSmith>
same events?

[00:22:01.0000] <phrearch>
yea, like when you click on a position, select some text, remove some, etc.

[00:23:00.0000] <phrearch>
this texteditor that i want to integrate in a wiki, has collaborative features showing who is typing and where with coloured text

[00:23:01.0000] <phrearch>
currently it uses a textbox for the typing, and some mechanism outside that to show the text with colour

[00:24:00.0000] <MikeSmith>
I think http://dev.w3.org/html5/spec/editing.html#user-editing-actions is a possibly relevant part of the spec 

[00:24:01.0000] <phrearch>
http://img809.imageshack.us/f/snapshot1u.jpg/

[00:24:02.0000] <phrearch>
thanks

[00:25:00.0000] <MikeSmith>
though not sure how interoperable behavior is across browsers with this stuff

[00:25:01.0000] <phrearch>
as long it works in webkit :)

[00:25:02.0000] <MikeSmith>
ah, don't say that

[00:25:03.0000] <phrearch>
im not really concerned about ie operability :)

[00:26:00.0000] <phrearch>
but yea, i prefer a crossbrowser solution

[00:26:01.0000] <MikeSmith>
I guess you should just write native apps then

[00:26:02.0000] <phrearch>
not really. its just that html5 stuff is better implemented in webkit browsers atm

[00:27:00.0000] <MikeSmith>
heh

[00:30:00.0000] <phrearch>
trying to implement http://www.jinfinote.com/ in a wiki

[00:30:01.0000] <phrearch>
pretty cool. its a javascript implementation of the infinote protocol

[00:31:00.0000] <hsivonen>
MikeSmith: I committed the Jetty update to the build script

[00:31:01.0000] <MikeSmith>
hsivonen: oh

[00:31:02.0000] <MikeSmith>
I'll sync up my workspace and try it

[00:32:00.0000] <hsivonen>
it seems that there are other libs that have had maintanance releases since whenever I last updated the jars

[00:32:01.0000] <MikeSmith>
hmm

[00:33:00.0000] <MikeSmith>
maybe would be good to update them one-by-one

[00:33:01.0000] <MikeSmith>
if you do update them

[00:33:02.0000] <hsivonen>
I really ought to be better at staying on top of library updates. I've been assuming that with the current setup, running in a managed environment keeps V.nu safe from bad stuff that one would be exposed to by running old C libs

[00:33:03.0000] <hsivonen>
MikeSmith: I have no idea if there's a true security or stability need to update anything

[00:34:00.0000] <MikeSmith>
I guess it's probably good to update them just to be safe

[00:34:01.0000] <MikeSmith>
eventually

[00:35:00.0000] <MikeSmith>
as long as they don't break stuff

[00:35:01.0000] <MikeSmith>
phrearch: is there an actual spec for infonote somewhere?

[00:36:00.0000] <MikeSmith>
hsivonen: "Bad MD5 hash for http://dist.codehaus.org/jetty/jetty-6.1.26/jetty-6.1.26.zip."

[00:37:00.0000] <phrearch>
yea, at http://gobby.0x539.de/trac/wiki/Infinote/Protocol

[00:37:01.0000] <MikeSmith>
formatting of these pages smells kind of GNU info-like

[00:38:00.0000] <hsivonen>
MikeSmith: weird. I tried it before committing. :-(

[00:38:01.0000] <hsivonen>
MikeSmith: worked for me on two computers

[00:39:00.0000] <MikeSmith>
hsivonen: OK, I'll try again

[00:39:01.0000] <hsivonen>
MikeSmith: if you retrieve the URL manually, do you get a zip file or an error page?

[00:39:02.0000] <MikeSmith>
dunno

[00:39:03.0000] <MikeSmith>
whill try now

[00:39:04.0000] <hsivonen>
looks like updating HttpClient isn't worthwhile

[00:40:00.0000] <hsivonen>
it ain't broke

[00:40:01.0000] <MikeSmith>
ok

[00:40:02.0000] <hsivonen>
at least not in an obvious way

[00:40:03.0000] <hsivonen>
and 4.0 is a rewrite that fixes architectural flaws

[00:40:04.0000] <hsivonen>
to me that means API changes

[00:41:00.0000] <MikeSmith>
man, I am on a really sucky connection here… ~45 K/s

[00:41:01.0000] <MikeSmith>
stalled

[00:41:02.0000] <MikeSmith>
hsivonen: I think it probably just failed to download completely

[00:42:00.0000] <hsivonen>
MikeSmith: ok

[00:42:01.0000] <hsivonen>
Rhino is not worth updating

[00:42:02.0000] <MikeSmith>
oh

[00:42:03.0000] <MikeSmith>
that sounds not so good

[00:42:04.0000] <hsivonen>
Jena IRI lib seems to be stable as in almost dead, so no need to update

[00:43:00.0000] <hsivonen>
I guess I should update ICU4J in order to get up-to-date Unicode tables

[00:43:01.0000] <MikeSmith>
yeah

[00:44:00.0000] <MikeSmith>
what is slf4j?

[00:45:00.0000] <MikeSmith>
logging?

[00:45:01.0000] <hsivonen>
MikeSmith: it's yet another logging wrapper

[00:45:02.0000] <MikeSmith>
ok

[00:46:00.0000] <hsivonen>
log4j is the best and was there first, but still people feel compelled to write more and more logging system and logging system abstraction layers

[00:46:01.0000] <hsivonen>
it's quite sad, really

[00:48:00.0000] <MikeSmith>
seems in general like one of those kinds of things 

[00:48:01.0000] <MikeSmith>
that developers seem to love to screw around with writing up 

[00:48:02.0000] <MikeSmith>
whether anybody else really needs it or not

[00:49:00.0000] <hsivonen>
part of the problem is that Sun put the kitchen sink in the standard library badly and Apache has better versions of nearly everything

[00:49:01.0000] <hsivonen>
so then people feel compelled to abstract over the standard library stuff and the Apache stuff

[00:50:00.0000] <MikeSmith>
ah

[00:50:01.0000] <hsivonen>
everyone would be better off if the standard lib was smaller and everyone used the Apache stuff

[00:50:02.0000] <MikeSmith>
I see

[00:50:03.0000] <MikeSmith>
amen

[00:55:00.0000] <MikeSmith>
hsivonen: one thing there's been a couple of bug reports about recently is style/@scoped not supported where the spec says it should be

[00:56:00.0000] <MikeSmith>
i'm trying to remember if there was some complication involved with making that change

[00:56:01.0000] <MikeSmith>
I think there was but can't recall now

[00:56:02.0000] <hsivonen>
MikeSmith: no complication that I can remember

[00:56:03.0000] <MikeSmith>
ok

[00:57:00.0000] <hsivonen>
except, of course, that since <style scoped> isn't supported by browsers, it's a bit scary that users validate code with it

[00:57:01.0000] <MikeSmith>
true

[00:57:02.0000] <MikeSmith>
which makes it not such a huge priority I guess

[00:57:03.0000] <hsivonen>
aargh. validator.nu is down again

[00:57:04.0000] <MikeSmith>
oh

[00:59:00.0000] <hsivonen>
huh. my ~/.ssh/known_hosts on Ubuntu is not clear text for the host names as it is on Mac

[01:00:00.0000] <MikeSmith>
hsivonen: btw, you saw my note a couple days ago about the parser error message for rt outside of ruby?

[01:00:01.0000] <MikeSmith>
/me looks for link in logs

[01:00:02.0000] <hsivonen>
MikeSmith: I didn't

[01:01:00.0000] <MikeSmith>
lemme find it now

[01:02:00.0000] <MikeSmith>
hmm, weird

[01:02:01.0000] <MikeSmith>
maybe krijn was away

[01:02:02.0000] <MikeSmith>
/me checks local logs

[01:04:00.0000] <MikeSmith>
hsivonen: -

[01:04:01.0000] <MikeSmith>
17:40 <       MikeSmith > hsivonen: I think the parse-error messages that the validator.nu parser generates for the following case are not correct:17:40 <       MikeSmith > <!DOCTYPE html>

[01:04:02.0000] <MikeSmith>
17:40 <       MikeSmith > <title>Ruby vs ins/del</title>

[01:04:03.0000] <MikeSmith>
17:40 <       MikeSmith > <p>X<rt>x</rt>Y<ins><rt>y</rt></ins></p>

[01:04:04.0000] <MikeSmith>
17:41 <       MikeSmith > it reports "Error: Unclosed children in ruby."

[01:04:05.0000] <MikeSmith>
17:42 <       MikeSmith > but there is no ruby element in the source, nor does one get created in the DOM

[01:04:06.0000] <MikeSmith>
17:44 <       MikeSmith > and it's not an unclosed-children error case

[01:04:07.0000] <MikeSmith>
17:45 <       MikeSmith > because it goes into the DOM just the way it is in the source, without any implied end tag being generated

[01:04:08.0000] <MikeSmith>
17:46 <       MikeSmith > it seems like the error reported for this case should instead be something like "rt start tag outside of ruby element" or "rt star

[01:04:09.0000] <MikeSmith>
t tag found by current node is not ruby element" 

[01:05:00.0000] <hsivonen>
so it looks like the build script is bogus as far as deps.tar.gz deployment goes...

[01:05:01.0000] <MikeSmith>
eh?

[01:05:02.0000] <MikeSmith>
something changed?

[01:05:03.0000] <MikeSmith>
how could it be bogus if it was working previously?

[01:05:04.0000] <hsivonen>
MikeSmith: it seems it has been bogus for a long time

[01:05:05.0000] <hsivonen>
MikeSmith: the dependencies haven't changed in a long time...

[01:06:00.0000] <MikeSmith>
ah

[01:06:01.0000] <MikeSmith>
that python script is something else man

[01:07:00.0000] <MikeSmith>
but not sure using an actual make system would be better

[01:07:01.0000] <MikeSmith>
I guess not ant or maven at least

[01:07:02.0000] <hsivonen>
the script sucks, yeah, but I doubt we'd be better off with make or ant

[01:07:03.0000] <MikeSmith>
yeah

[01:08:00.0000] <MikeSmith>
not for building java at least

[01:08:01.0000] <hsivonen>
MikeSmith: I think the parsing algorithm just ignores </rt> tags

[01:09:00.0000] <hsivonen>
and INS is not special

[01:09:01.0000] <hsivonen>
so </ins> doesn't generate implied end tags

[01:09:02.0000] <MikeSmith>
yeah, I know that

[01:09:03.0000] <hsivonen>
MikeSmith: I blame the spec

[01:10:00.0000] <MikeSmith>
as I understand it, rt causes the implied end tag for ins to be generated

[01:10:01.0000] <MikeSmith>
but only if the rt element is a descendant of a ruby element

[01:10:02.0000] <MikeSmith>
if it's not a descendant of a ruby element, it ends up as a child of the ins as expected

[01:11:00.0000] <MikeSmith>
and it's a parse error in either case

[01:11:01.0000] <MikeSmith>
it's just a different parse error

[01:11:02.0000] <hsivonen>
oh, right, so what's needed is special-cased error message.

[01:11:03.0000] <MikeSmith>
yeah

[01:11:04.0000] <MikeSmith>
I think the parse error you are emitting there now is for the within-ruby case

[01:12:00.0000] <MikeSmith>
anyway, it's not a big deal

[01:12:01.0000] <MikeSmith>
but I can raise a bug for it somewhere if you want

[01:12:02.0000] <MikeSmith>
just wasn't sure where it should go

[01:13:00.0000] <hsivonen>
so, what's happening here is that I haven't put too much thought into the error messages

[01:13:01.0000] <MikeSmith>
oh, and bugzilla.validator.nu was down

[01:13:02.0000] <MikeSmith>
ok

[01:13:03.0000] <hsivonen>
the spec says "Parse Error"

[01:13:04.0000] <MikeSmith>
yeah

[01:13:05.0000] <MikeSmith>
so maybe that's something else I can help with

[01:13:06.0000] <hsivonen>
and I didn't realize the error needs different messages depending on what happened a couple of lines earlier

[01:13:07.0000] <MikeSmith>
ok

[01:14:00.0000] <MikeSmith>
well, I guess I can write patches for these when I find them

[01:14:01.0000] <MikeSmith>
the thing is they are reported by validator.nu,

[01:14:02.0000] <MikeSmith>
so they do get exposed to end users

[01:14:03.0000] <MikeSmith>
and some of them can confuse the hell out of people

[01:14:04.0000] <MikeSmith>
actually, the reason I noticed this one was because of a bug that James Clark raised

[01:15:00.0000] <hsivonen>
MikeSmith: I can fix this one today once I sort out the deployment and ICU4J problems

[01:15:01.0000] <MikeSmith>
ok

[01:15:02.0000] <MikeSmith>
well, no rush

[01:16:00.0000] <MikeSmith>
anyway, the bug from James was http://www.w3.org/Bugs/Public/show_bug.cgi?id=11363

[01:16:01.0000] <benschwarz>
MikeSmith: ! Allo :)

[01:17:00.0000] <MikeSmith>
hsivonen: which is not directly related since it's about the within-ruby case, but just mentioning it 

[01:17:01.0000] <MikeSmith>
benschwarz: hej

[01:18:00.0000] <hsivonen>
part of my problem is that I don't tweak build.py every day, so I nearly always fail to remember what dark corners there are

[01:19:00.0000] <MikeSmith>
hmm

[01:19:01.0000] <MikeSmith>
yeah

[01:19:02.0000] <hsivonen>
but at least it's Python and not Perl, so there's some chance of reading the code to find out

[01:19:03.0000] <MikeSmith>
heh

[01:20:00.0000] <MikeSmith>
it is quite readable

[01:20:01.0000] <MikeSmith>
I'll give you that at least

[01:21:00.0000] <hsivonen>
I'm quite ashamed of the support code for V.nu and the HTML5 parser

[01:21:01.0000] <hsivonen>
i.e. build.py and the C++ translator

[01:22:00.0000] <MikeSmith>
I wonder if wscript is any good or if it's as messed up as other build stuff

[01:22:01.0000] <MikeSmith>
hsivonen: ashamed?

[01:22:02.0000] <MikeSmith>
what's wrong with it?

[01:23:00.0000] <hsivonen>
MikeSmith: just now I discovered total bogosity in the "deploy" target of build.py

[01:23:01.0000] <MikeSmith>
oh

[01:23:02.0000] <MikeSmith>
well, I never use that :)

[01:24:00.0000] <hsivonen>
MikeSmith: and the code in the C++ translator that translated the fields of a class from Java to C++ is just terrible

[01:24:01.0000] <MikeSmith>
ah

[01:24:02.0000] <hsivonen>
s/translated/translates/

[01:25:00.0000] <MikeSmith>
seems to get the job done, at least

[01:25:01.0000] <thiessenp>
newb question: just started with html5 geolocation and am using the W3C API with FF3 - when I try to get a position using window.navigator.geolocation.getCurrentPosition I get a JS error that "location is undefined". The error points to the WifiGeoCoordsObject. This odd because I'm on a desktop without Wifi, though I am behind a firewall. *Any ideas?*

[01:27:00.0000] <MikeSmith>
thiessenp: try FF4 and see if it fixes it?

[01:27:01.0000] <thiessenp>
MikeSmith: good idea - will do now :D

[01:29:00.0000] <hsivonen>
clearly, I should make the deploy target use rsync instead of scp

[01:30:00.0000] <hsivonen>
to move only the changed bits

[01:40:00.0000] <hsivonen>
MikeSmith: fix to the error message pushed to hg

[01:40:01.0000] <MikeSmith>
thanks

[01:41:00.0000] <MikeSmith>
/me syncs up his workspace

[01:56:00.0000] <jgraham>
abarth: Any chance of syncing the WebKit HTML parser tests with those in html5lib?

[02:02:00.0000] <hsivonen>
heh. the build number of Opera 11 beta is 1111

[02:03:00.0000] <hsivonen>
/me wonders what exactly "Enhanced HTML5 support" means in the context of Opera 11

[02:04:00.0000] <zcorpan>
faster javascript? :)

[02:04:01.0000] <hsivonen>
zcorpan: that's a different item on the list

[02:04:02.0000] <gsnedders>
There's faster JS in 11?

[02:04:03.0000] <hsivonen>
I'm guessing Web Socket but anything else?

[02:04:04.0000] <jgraham>
Maybe we are using "enhanced" to be "augmented with plastic surgery"

[02:05:00.0000] <zcorpan>
hsivonen: updated EventSource

[02:05:01.0000] <jgraham>
/me isn't actually sure which things made it into the beta

[02:06:00.0000] <hsivonen>
zcorpan: ok.

[02:06:01.0000] <zcorpan>
hsivonen: maybe small fixes like fixing the structured clone algorithm to be up-to-date (haven't tested if it's in the beta though)

[02:06:02.0000] <hsivonen>
jgraham: I gather Opera has a less linear release path than Mozilla

[02:06:03.0000] <gsnedders>
hsivonen: "linear" meaning in terms of how often, etc?

[02:07:00.0000] <jgraham>
hsivonen: Core is rather seperate, and core itself uses a rather branched development process

[02:07:01.0000] <hsivonen>
gsnedders: in terms of if feature X has landed in some repo at time t1, a realease made at t2 (where t1<t2) will have feature X

[02:08:00.0000] <gsnedders>
hsivonen: The answer, needless to say, is no comment.

[02:09:00.0000] <gsnedders>
hsivonen: But what is public is that Core development is separate from Desktop development.

[02:11:00.0000] <gsnedders>
(and separate from Devices SDK, from Mobile, from Mini, etc. development)

[02:15:00.0000] <hsivonen>
anyway, I'm generally impressed by Opera's ability to deal with multiple branches (at least as observed from the outside; dunno how terrible it feels on the inside)

[02:15:01.0000] <zcorpan>
/me sent http://lists.w3.org/Archives/Public/public-web-perf/2010Nov/0032.html Move window.performance to navigator.performance

[02:17:00.0000] <jgraham>
zcorpan: Why would that break scripts

[02:17:01.0000] <jgraham>
presumably the global would be shadowed?

[02:17:02.0000] <gsnedders>
hsivonen: http://www.opera.com/docs/changelogs/windows/1100b/ has more explaination for HTML5 support

[02:17:03.0000] <jgraham>
(although maybe not if you have <div id=performance> or so on)

[02:20:00.0000] <hsivonen>
gsnedders: thanks

[02:21:00.0000] <hsivonen>
btw, does Big5-HKSCS participate in any willful IANA violation alias resolution in Opera?

[02:25:00.0000] <zcorpan>
jgraham: maybe existing pages will still continue to work, but then it won't be possible to use script libraries that measure perf on those pages

[02:26:00.0000] <jgraham>
Indeed

[02:27:00.0000] <zcorpan>
jgraham: and it might break in subtle ways if pages expect window.performance == undefined until they insert the element

[02:27:01.0000] <zcorpan>
or whatever

[02:28:00.0000] <jgraham>
Yes, it is not impossible to break pages by adding things

[02:32:00.0000] <thiessenp>
MikeSmith: FF4 didn't help with the location error but oddly enough enabling Wifi on my desktop worked - just encase you were curious 

[02:32:01.0000] <MikeSmith>
interesting

[03:54:00.0000] <zcorpan>
wow i didn't know navigator survived page transitions in gecko

[03:54:01.0000] <zcorpan>
doesn't seem like it does in opera

[03:55:00.0000] <zcorpan>
also not in chrome

[03:55:01.0000] <zcorpan>
or safari

[04:11:00.0000] <zcorpan>
oh navigator survives page transitions in ie too

[04:28:00.0000] <thiessenp>
Has anyone had success with IP based geolocation? 

[04:29:00.0000] <thiessenp>
For example, my accuracy seams to be off by about a city length. So, yes NL is right by Leidschendam is wrong, I'm currently in Amsterdam :)

[04:29:01.0000] <thiessenp>
by=but

[04:35:00.0000] <hsivonen>
thiessenp: I guess it depends on your ISP, Google's databases, etc.

[04:35:01.0000] <hsivonen>
thiessenp: IP-based geolocation puts me in the right city

[04:36:00.0000] <thiessenp>
hsivonen: I feared this much. Hmm, can you point me to any JS code examples? (maybe I'm missing something - first attempt now for fun)

[04:36:01.0000] <hsivonen>
but then my ISP is also based in the same city and I don't know if their clients in other cities are also placed here

[04:36:02.0000] <hsivonen>
thiessenp: http://isgeolocationpartofhtml5.com/

[04:38:00.0000] <hsivonen>
looks like Safari and Chrome aren't big enough in France, yet.

[04:38:01.0000] <thiessenp>
hsivonen: that example put me in the right coords (dead on) - looks like its my code :)  thx will try this example

[04:38:02.0000] <thiessenp>
hmm noted

[04:39:00.0000] <hsivonen>
/me dealt with an evangelism bug where a French site no longer worked in Firefox 4 due to the AAA, but also didn't work in Safari or Chrome

[04:43:00.0000] <thiessenp>
hsivonen: interesting out of curiosity what part of WCAG-AAA was no longer compliant? 

[04:43:01.0000] <jgraham>
/me seems to be either near Stockholm or somewhere near the West Coast according to IP based Geolocation

[04:44:00.0000] <jgraham>
(these are some hundreds of km wrong)

[04:44:01.0000] <jgraham>
(in roughly opposite directions)

[04:45:00.0000] <hsivonen>
thiessenp: not WCAG-AAA but the Adoption Agency Algorithm

[04:46:00.0000] <thiessenp>
hsivonen: oh ok - will look up what that is :)

[04:47:00.0000] <thiessenp>
hsivonen: btw: when I ran the code from the example you gave locally on my dev environment I ended up in the north pacific ocean. I love swimming but ... :) I think this may have something to do with a firewal or proxy? I know I'm asking vague questions.

[04:51:00.0000] <hsivonen>
thiessenp: the example randomizes the location on error

[04:51:01.0000] <thiessenp>
hsivonen: busted - guess I better take a closer look at the code (thx)

[04:56:00.0000] <annevk>
 XMLHttpRequest Level 2 (aka AJAX 2) -- orly?

[04:56:01.0000] <annevk>
-- http://www.mobilexweb.com/blog/safari-ios-accelerometer-websockets-html5

[05:16:00.0000] <hsivonen>
annevk: how does it feel to be the editor of the latest buzzword?

[05:20:00.0000] <MikeSmith>
buzzword?

[05:20:01.0000] <hsivonen>
MikeSmith: AJAX 2

[05:22:00.0000] <Philip`>
That's not the latest buzzword, that's just the combination of the two previous now-obsolete buzzwords

[05:23:00.0000] <hsivonen>
scary. I got NS_ERROR_FAILURE from virtualbox

[05:23:01.0000] <hsivonen>
is virtualbox based on Mozilla code?

[05:24:00.0000] <Rik`>
hsivonen: isn't it NS as in NextStep ?

[05:25:00.0000] <Philip`>
http://www.virtualbox.org/wiki/Developer_FAQ

[05:25:01.0000] <hsivonen>
Rik`: I'm not aware of Next having used that exact error name

[05:25:02.0000] <Philip`>
"On Linux hosts, VirtualBox makes use of Mozilla XPCOM as its component model."

[05:26:00.0000] <hsivonen>
Philip`: wow.

[05:26:01.0000] <hsivonen>
that such a strange design decision

[05:26:02.0000] <hsivonen>
*that's

[05:26:03.0000] <jgraham>
Philip`: No point making a whole new buzzwoard when you can stitch together and reanimate two dead buzzwords, zombie style

[05:27:00.0000] <MikeSmith>
reCOMifying

[05:28:00.0000] <jcranmer>
wait, someone's seriously trying to use XPCOM?

[05:29:00.0000] <jcranmer>
mozlla's trying to use it less

[05:30:00.0000] <Philip`>
They say "For Windows hosts, we do not rely on XPCOM" so maybe the situation was that they relied heavily on Win32 COM and didn't care about portability, and then realised that actually it'd be nice to port to Linux

[05:31:00.0000] <Philip`>
but COM doesn't exist there so they just grabbed the closest thing they could find to emulate it

[06:03:00.0000] <hsivonen>
jgraham: do you recall implementing the scopingness the MathML elements that accept HTML children?

[06:07:00.0000] <hsivonen>
jgraham: I'm going to assume that the tests are stale per my reading of the spec and will update the tests that test the non-scopingness of <mi>, <mo>, <mn>, <ms> and <mtext>

[06:23:00.0000] <hsivonen>
jgraham: looks like Google Code put my code review comment on the wrong changeset for no apparent reason

[06:33:00.0000] <jgraham>
hsivonen: I think that html5lib should be up to date as per a few days ago, but it is possible I missed something

[06:33:01.0000] <gsnedders>
jgraham: html5lib/Py or the tests?

[06:34:00.0000] <jgraham>
gsnedders: Both, I think

[06:43:00.0000] <hsivonen>
jgraham: I pushed fixes to what I believe to be broken tests

[06:45:00.0000] <jgraham>
hsivonen: Great. I was going to suggest that as a good remedy :)

[08:18:00.0000] <Xano_>
Where do I find the geolocation specification?

[08:18:01.0000] <annevk>
http://dev.w3.org/geo/api/spec-source.html

[08:18:02.0000] <Xano_>
Oh, that's W3C, not WHATWG

[08:18:03.0000] <Xano_>
annevk: Heh, just found it. Thanks for the quick response

[08:19:00.0000] <jgraham>
Still a reasonable place to ask about it, all things considered

[08:19:01.0000] <Xano_>
Was googling for "Whatwg geolocation... " :')

[08:24:00.0000] <annevk>
http://www.aminutewithbrendan.com/pages/20101122 Karakan? It's Carakan!

[08:29:00.0000] <jgraham>
(that link is entirely bogus)

[08:31:00.0000] <jgraham>
http://my.opera.com/core/blog/2009/02/04/carakan is a much less bogus link if anyone wants to propogate the message

[08:32:00.0000] <annevk>
happy to hear Brendan does mostly agree with the WHATWG versioning message

[08:33:00.0000] <annevk>
and that he's not really in favor of having bytecode shipped to browsers

[08:44:00.0000] <annevk>
I tried posting a comment with that corrected link, but failed to get passed the images asking me to spell

[09:10:00.0000] <jgraham>
/me tries to avoid disqus based comment forms

[09:30:00.0000] <gsnedders>
http://www.vemihelvete.se/2010/10/en-nord-gor-musik.html (or <http://translate.google.com/translate?u=http%3A%2F%2Fwww.vemihelvete.se%2F2010%2F10%2Fen-nord-gor-musik.html&sl=sv&tl=en&hl=&ie=UTF-8> for the Swedish challenged). JS music!

[09:44:00.0000] <gsnedders>
Who here has IE9? Can someone copy/paste results for Sputnik in IE9?

[10:05:00.0000] <TabAtkins>
Where's sputnik?

[10:06:00.0000] <TabAtkins>
Unrelated: it looks like canvas gradients are defined to transition in non-premultiplied space, right?  If so, that's the only place on the platform where colors transition that way now.

[10:07:00.0000] <gsnedders>
TabAtkins: http://sputnik.googlelabs.com/run

[10:07:01.0000] <TabAtkins>
k, one sec then

[10:08:00.0000] <Philip`>
TabAtkins: Everything in canvas is non-premultiplied

[10:08:01.0000] <Philip`>
(except for implementations)

[10:09:00.0000] <TabAtkins>
Philip`: So implementations currently transition in pre-multiplied space?

[10:12:00.0000] <Philip`>
TabAtkins: No, I believe they behaviourally match the spec

[10:12:01.0000] <Philip`>
http://test.w3.org/html/tests/submission/PhilipTaylor/canvas/2d.gradient.interpolate.colouralpha.html

[10:12:02.0000] <Philip`>
I think that'd give different output if interpolating linearly in premultiplied colour space

[10:12:03.0000] <Philip`>
The implementations just store everything in premultiplied form in the backing store, then do whatever's necessary to get the right behaviour

[10:13:00.0000] <gsnedders>
http://www.reddit.com/r/IAmA/comments/eadq7/iama_person_with_zero_creative_talent_ill_draw/c16ln1w

[10:14:00.0000] <TabAtkins>
gsnedders: Oh. Man. AWESOME.

[10:17:00.0000] <gsnedders>
TabAtkins: Yeah, I'm having one of these moments where I can't help but think: I fucking love this company.

[10:39:00.0000] <annevk>
http://www.opera.com/?display=myopera omg lol

[10:40:00.0000] <Rik`>
sadly it only works in English

[10:41:00.0000] <virtuelv>
context to that link from annevk http://www.reddit.com/r/bestof/comments/eakz7/selfproclaimed_zerotalent_artist_creates_drawings/

[10:41:01.0000] <gsnedders>
TabAtkins: Run it in IE9?

[10:43:00.0000] <TabAtkins>
Ah, I did, but on a screen that's hidden now so I forgot about it.  What info do you want from it?

[10:43:01.0000] <gsnedders>
TabAtkins: The list of tests that fail

[10:48:00.0000] <TabAtkins>
gsnedders: http://pastebin.com/HusmnmTF

[10:48:01.0000] <gsnedders>
TabAtkins: thx

[11:53:00.0000] <jgraham>
Dear Wikipedia: if you are going to try and coerce me into donating with dramatically-lit photographs advertisting personal appeals, please try not to blow out the highlights on Jimmy Wales' nose

[11:54:00.0000] <Philip`>
/me clicked on the donation ad once, but only because he was clicking a link near the top of the page when the ad suddenly popped into existence under his mouse

[11:55:00.0000] <karlushi>
Dear wikipedia, I'm 10 years old, what is this old pervert looking at me all the time.

[12:42:00.0000] <annevk>
thanks TabAtkins for following up on the gradient stuff

[12:43:00.0000] <TabAtkins>
No problem, annevk.

[13:11:00.0000] <TabAtkins>
annevk: Now if you could get someone relevant from Opera to comment on the canvas gradient thread...

[13:13:00.0000] <annevk>
I probably can, tomorrow

[13:14:00.0000] <TabAtkins>
Cool.

[13:21:00.0000] <karlcow>
/me wonders if TabAtkins is hidden in Tab Stacking

[13:27:00.0000] <Philip`>
TabAtkins: If interpolating from (255,255,255,1) to (0,0,0,0) doesn't give the effect you want, why not simply interpolate to (255,255,255,0) instead?

[13:28:00.0000] <Philip`>
(in the non-premultiplied world)

[13:29:00.0000] <Philip`>
If you *do* want the effect of non-premultipliedly interpolating from (255,255,255,1) to (0,0,0,0), then I guess the only way to get it in the premultiplied world is interpolating to (0,0,0,0.01) which looks like a nasty hack

[14:03:00.0000] <aidan>
What is the format of the datetime attribute, and why can't I find it ANYWHERE?

[14:03:01.0000] <aidan>
I can find parsing instructions, but I can't find the actual name of the format

[14:03:02.0000] <aidan>
http://dev.w3.org/html5/spec/common-microsyntaxes.html#parse-a-date-component

[14:04:00.0000] <hober>
essentially, it's an RFC3339 timestamp

[14:05:00.0000] <beowulf>
http://www.whatwg.org/specs/web-apps/current-work/multipage/common-microsyntaxes.html#valid-global-date-and-time-string

[14:08:00.0000] <jacobolus>
anyone have an idea why opera renders &thinsp; (from a font that doesn't have the character built in, I believe) about 5 times wider than expected?

[14:08:01.0000] <jacobolus>
it makes &thinsp; effectively worthless

[14:09:00.0000] <jacobolus>
(also, does the same with &hairsp; which is perhaps even worse as sometimes multiple &hairsp; are used in a row to get the desired amount of space)

[14:10:00.0000] <jacobolus>
(by 5 times too wide I mean that &thinsp; renders about 3x as wide as a regular space)

[14:11:00.0000] <beowulf>
if the font doesn't have a thin space glyph it may be using a regular space (which is 5 to 6 times the width of a space if a space is 1 em wide)

[14:11:01.0000] <jacobolus>
what's a "regular" space?

[14:11:02.0000] <jacobolus>
that's just what you get with the space bar?

[14:11:03.0000] <jacobolus>
it's using a space that's substantially *wider* than that

[14:12:00.0000] <beowulf>
by regular space i mean the one that appears when you press the space bar

[14:13:00.0000] <beowulf>
it's about an em wide, i think

[14:14:00.0000] <jacobolus>
let me put an image online

[14:14:01.0000] <jacobolus>
http://i.imgur.com/bxl6m.png

[14:14:02.0000] <beowulf>
my suggestion would be to use a font that has a &thinsp

[14:15:00.0000] <jacobolus>
the space before the % is &thinsp;

[14:15:01.0000] <jacobolus>
the other spaces are regular spaces

[14:15:02.0000] <jacobolus>
beowulf: no other browser does this as far as I can tell

[14:16:00.0000] <jacobolus>
at least none on my machine

[14:16:01.0000] <jacobolus>
maybe it's trying to pick out some CJK font with a fixed-width very wide space?

[14:16:02.0000] <jacobolus>
(under the &thinsp; code point)

[14:17:00.0000] <TabAtkins>
Philip`: I covered that in the email - it's extra work, and more importantly, it's exta work *you don't have to do* in other parts of the web stack.

[14:17:01.0000] <jacobolus>
completely unrelated question: does anyone know why javascript mod operator (%) returns a negative value with a negative dividend? who ever decided that was a good behavior? :)

[14:17:02.0000] <beowulf>
jacobolus: that is indeed a large space

[14:17:03.0000] <jacobolus>
beowulf: right? :)

[14:18:00.0000] <jacobolus>
beowulf: in case it's helpful, the font here is Delicious

[14:18:01.0000] <TabAtkins>
Yeah, *actually* transitioning from, say, white to transparent black, hitting partially-transparent gray along the way, isn't really possible.  Even going to (0,0,0,.01) doesn't work right - that is, expectedly, almost the same thing as just going to (0,0,0,0).

[14:18:02.0000] <jacobolus>
(which does not have a &thinsp;)

[14:18:03.0000] <Philip`>
TabAtkins: Writing rgba(255,255,250,0) when you want transparent yellow doesn't seem significantly more work than writing rgba(0,0,0,0), and it does seem much clearer

[14:19:00.0000] <TabAtkins>
It's more work and less clear than writing "transparent".

[14:19:01.0000] <Philip`>
"transparent" doesn't mean transparent yellow

[14:19:02.0000] <Philip`>
It means transparent black

[14:19:03.0000] <TabAtkins>
Exactly.

[14:19:04.0000] <TabAtkins>
Which is rarely what is intended.

[14:19:05.0000] <Philip`>
If you want transparent yellow, "transparent" is about as appropriate as "peach"

[14:19:06.0000] <jacobolus>
beowulf: I guess a workaround might be to edit the font to add a &thinsp; character; not sure if that violates the license, but I doubt the font's author would mind so terribly much

[14:19:07.0000] <Philip`>
so don't use it :-)

[14:19:08.0000] <TabAtkins>
The fact that fully transparent colors still have a "color" is a technical detail.

[14:20:00.0000] <Philip`>
(Did you see my email response, by the way?)

[14:20:01.0000] <TabAtkins>
Haven't read it yet - I just got back to my desk.

[14:22:00.0000] <beowulf>
jacobolus: fwiw another exljibris font, museo, has a thinsp

[14:23:00.0000] <jacobolus>
beowulf: maybe I should email Jos

[14:23:01.0000] <jacobolus>
I'm pretty sure if this one had a &thinsp; it wouldn't be making such a giant space in opera

[14:23:02.0000] <jacobolus>
(looking to see now if it does or not)

[14:24:00.0000] <jacobolus>
seems not

[14:24:01.0000] <jacobolus>
just the bare basic characters

[15:04:00.0000] <annevk>
oh, Tyler Close replied to my CORS email

[15:04:01.0000] <annevk>
guess it's time to go to bed

[15:05:00.0000] <annevk>
nn

[15:08:00.0000] <bga_>
hi

[15:10:00.0000] <bga_>
anybody not zombie? :)

[15:10:01.0000] <TabAtkins>
Ask a question, not a meta-question, please.

[15:10:02.0000] <TabAtkins>
^_^

[15:10:03.0000] <bga_>
ok

[15:11:00.0000] <bga_>
i want to talk about future of web :)

[15:11:01.0000] <bga_>
i dream about multilanguage web

[15:12:00.0000] <bga_>
i mean multi programming language

[15:12:01.0000] <bga_>
we should split renderer and scripting engine

[15:12:02.0000] <bga_>
as google does in chome

[15:12:03.0000] <bga_>
webkit + v8

[15:13:00.0000] <bga_>
but instead v8 we should use .NET

[15:13:01.0000] <bga_>
because it allows alot of languages

[15:14:00.0000] <bga_>
for example i can make my site usiing ADA or F# :)

[15:14:01.0000] <bga_>
not only js

[15:14:02.0000] <bga_>
also there is a very good feature

[15:14:03.0000] <bga_>
we do not need to compress source code

[15:15:00.0000] <TabAtkins>
We already have multi-language support a *tiny* bit, in that you can switch between different javascript engines in some browsers.  The main problem with more langauges is defining a new DOM interface that respects the particular language's strengths and quirks.

[15:15:01.0000] <bga_>
browser download CRL binary code

[15:15:02.0000] <TabAtkins>
(We tried creating interfaces in a generic fashion so both javascript and java could use the same code, and that was a *massive* mistake.)

[15:16:00.0000] <TabAtkins>
Downloading binaries is also somewhat of a minus, because it kills the ability to view source, which a lot of us webdevs used to learn stuff (and still do).

[15:16:01.0000] <Rik`>
and we also have enough troubles with having interoperable JS implementations

[15:18:00.0000] <bga_>
yes but .NET declares classes in CRL level and all languages can uses it w/o troubles

[15:18:01.0000] <Rik`>
I'm not sure we want MS deciding for the future of the web either

[15:18:02.0000] <bga_>
TabAtkins yes but it reduces world`s traffic

[15:19:00.0000] <bga_>
Rik` yes but we have Mono

[15:19:01.0000] <TabAtkins>
bga_: I didn't say it was evil, just that it has minuses.

[15:19:02.0000] <Rik`>
TabAtkins: do you really view source on minified code ?

[15:21:00.0000] <bga_>
TabAtkins also we can have normal debug in IDE ^_^

[15:21:01.0000] <TabAtkins>
Rik`: Yes, though I don't like it because I have to pass it through a beautifier first.

[15:21:02.0000] <Rik`>
bga_: Mono is financed by Microsoft and follow .NET choices so this is not relevant

[15:21:03.0000] <Rik`>
TabAtkins: I can't read a beautified minified code

[15:21:04.0000] <TabAtkins>
Rik`: It's not the same as the original code, but it's usually "good enough".

[15:21:05.0000] <Rik`>
this is not how you want to learn

[15:22:00.0000] <TabAtkins>
I'm just talking about minified by stripping whitespace.  Renaming vars and such is too much.

[15:22:01.0000] <Rik`>
minifying by stripping whitespace is kind of useless

[15:23:00.0000] <Rik`>
gzip is just enough for that

[15:23:01.0000] <bga_>
TabAtkins i see its also good because now renderer developers do not need to develop scripting engine

[15:24:00.0000] <bga_>
and they can fix bugs faster

[15:24:01.0000] <bga_>
:)

[15:24:02.0000] <Rik`>
bga_: that's not true

[15:24:03.0000] <TabAtkins>
Separating the scripting engine from the rendering engine is a good idea anyway, but it's completely separate from using multiple languages.

[15:25:00.0000] <Rik`>
scripting and redering teams are already quite separated

[15:25:01.0000] <bga_>
but i understand. i should talk about this ideas with MS team

[15:25:02.0000] <Philip`>
Script performance gives browser developers something quantitative to compete on and use in marketing

[15:25:03.0000] <jcranmer>
crossing language barriers can hurt speed performance

[15:25:04.0000] <Philip`>
It'd be much harder if they all just embedded Mono and there was no difference between them

[15:26:00.0000] <jcranmer>
I remember speeding something up by a factor of 5% by not throwing cross-language barrier exceptions

[15:26:01.0000] <jcranmer>
maybe it was 20%

[15:26:02.0000] <bga_>
Philip` they can compare rendering speed

[15:27:00.0000] <jcranmer>
the way the web is going

[15:27:01.0000] <bga_>
and quality of output

[15:27:02.0000] <jcranmer>
it's scripting speed that is more important

[15:27:03.0000] <jcranmer>
since you have to script to make things that depend on speed

[15:27:04.0000] <jcranmer>
e.g., web games

[15:27:05.0000] <bga_>
i guess no

[15:27:06.0000] <jcranmer>
rendering happens about once per page

[15:27:07.0000] <bga_>
js 2% rendering 98%

[15:28:00.0000] <jcranmer>
script events happen many, many, many more times

[15:28:01.0000] <jcranmer>
bga_: let me put it like this

[15:28:02.0000] <gsnedders>
bga_: At a certain level, you have to go for some bytecode that works for a variety of languages, and you won't get one that works for all. Quite possibly JS isn't /that/ bad as a target, given JIT'ing compilers that have a relatively small number of typechecks

[15:28:03.0000] <jcranmer>
if you're talking about smallish webpages

[15:28:04.0000] <jcranmer>
well

[15:29:00.0000] <jcranmer>
in many cases, network overhead outperforms rendering speed

[15:29:01.0000] <TabAtkins>
Google uses several languages that compile to JS.  ^_^

[15:29:02.0000] <Philip`>
Has anyone made a JIT that targets JS?

[15:29:03.0000] <bga_>
yes

[15:29:04.0000] <gsnedders>
TabAtkins: And don't get any JS engine QA started on the output :)

[15:29:05.0000] <jcranmer>
so the initial rendering speed really isn't all that important, as long as it's not super-slow

[15:29:06.0000] <TabAtkins>
gsnedders: Oh god, I know.  I'm just saying.

[15:29:07.0000] <bga_>
i know haskell -> js c# -> js java -> python -> js list -> js translators

[15:29:08.0000] <jcranmer>
on the other hand, some JS events need to be fired hundreds of times a second

[15:29:09.0000] <bga_>
even basic %)

[15:30:00.0000] <jcranmer>
in that case, I need fast JS speed

[15:30:01.0000] <bga_>
ppl wants more languages

[15:30:02.0000] <jcranmer>
I don't care about rendering speed, that happens fast enough

[15:30:03.0000] <jcranmer>
what I need is to driver the renderer fast enough

[15:30:04.0000] <bga_>
*lisp

[15:31:00.0000] <gsnedders>
bga_: The thing is ultimately something is going to be the target, and is the cost of introducing a new language (which effectively it is, even if only binary bytecode) bigger than the perf benefit you'd get by introducing something with strict typing?

[15:31:01.0000] <jcranmer>
I'll also note that there have been active proposals to introduce static typing to JS

[15:32:00.0000] <bga_>
yes

[15:32:01.0000] <bga_>
in es6

[15:32:02.0000] <gsnedders>
Nothing is really certain for Harmony (what will presumably be ES6) yet though

[15:32:03.0000] <jcranmer>
I thought harmony was es5

[15:32:04.0000] <TabAtkins>
We're treating harmony as es5.

[15:32:05.0000] <gsnedders>
Harmony itself is what will follow ES5

[15:33:00.0000] <gsnedders>
ES5 is really just a minor update to ES3, a stepping stone before Harmony

[15:33:01.0000] <gsnedders>
(Thus why it for the longest time was called ES3.1)

[15:33:02.0000] <bga_>
jcranmer http://wiki.ecmascript.org/doku.php?id=strawman:types

[15:34:00.0000] <bga_>
gsnedders you know than each language is best in own category of tasks

[15:35:00.0000] <bga_>
Haskell in parralell calcalations

[15:35:01.0000] <jcranmer>
adding new language backends introduces extremely high security risks

[15:35:02.0000] <bga_>
C in low level code

[15:35:03.0000] <TabAtkins>
jcranmer: Not necessarily.  Chrome has NaCl, which you can run arbitrary languages in.

[15:35:04.0000] <TabAtkins>
(Because it's just running x86 bytecode.)

[15:35:05.0000] <TabAtkins>
It's sandboxed, though.

[15:36:00.0000] <jcranmer>
TabAtkins: well, Mozilla theoretically lets you run different languages

[15:36:01.0000] <bga_>
jcranmer CRL is absolutely safe

[15:36:02.0000] <jcranmer>
there's more than just the language itself

[15:36:03.0000] <jcranmer>
you have to do the cross-language glue

[15:36:04.0000] <bga_>
yes

[15:36:05.0000] <bga_>
.NET does it

[15:36:06.0000] <jcranmer>
that's where security holes can come into play

[15:37:00.0000] <bga_>
by desing

[15:37:01.0000] <jcranmer>
yes, but most people don't use .NET interfaces internally

[15:37:02.0000] <gsnedders>
bga_: Will MS grant a RF license for everything in .NET?

[15:37:03.0000] <jcranmer>
the other really big issue is compatibility

[15:38:00.0000] <jcranmer>
ECMAScript is supported by everybody

[15:38:01.0000] <jcranmer>
any other scripting language would not be

[15:39:00.0000] <bga_>
i guess embeding Mono to renderer is 2-3 years

[15:39:01.0000] <jcranmer>
that will probably never happen, I suppose

[15:39:02.0000] <bga_>
ie ff5 opera12 chrome11 safari6 will have it

[15:39:03.0000] <jcranmer>
mono is too far beyond in terms of .NET support, last I checked

[15:40:00.0000] <bga_>
yes

[15:40:01.0000] <jcranmer>
at this point

[15:41:00.0000] <jcranmer>
you'd need something that could realistically run on Windows, Mac OS X, Linux, and probably Android and iOS as well

[15:41:01.0000] <bga_>
but part of mozilla`s google`s etc can contribute mono

[15:41:02.0000] <bga_>
*+ team

[15:41:03.0000] <jcranmer>
why should they?

[15:41:04.0000] <TabAtkins>
bga_: Speaking completely unofficially, I doubt Google would ever touch Mono.  We already spent significant resources developing NativeClient, which fills the same niche.

[15:42:00.0000] <bga_>
contibute to common scripting engine

[15:42:01.0000] <jcranmer>
why should they expend valuable effort to support implementation for features that no one is using?

[15:42:02.0000] <jcranmer>
bga_: they don't use the same JS engine

[15:42:03.0000] <gsnedders>
And have a spec for it that actually defines it (the base classes for example are unspecified) to allow other impls, and have a patent grant, etc.

[15:42:04.0000] <bga_>
i know

[15:43:00.0000] <jcranmer>
if they're not contributing to a common scripting engine now, what makes you think they would contribute to a common one later?

[15:43:01.0000] <jcranmer>
to a common one for another language, that is

[15:43:02.0000] <gsnedders>
Multiple impls drives competition, which is benefical to the market

[15:43:03.0000] <jcranmer>
what the market is asking for is not support for another language

[15:43:04.0000] <jcranmer>
they're asking for improved speed on the JS engine

[15:44:00.0000] <jcranmer>
you're more likely to get traction on compiling other languages to *JS* than getting browsers to support other scripting languages

[15:44:01.0000] <bga_>
but mozilla has python as alternative scripting language :)

[15:44:02.0000] <jcranmer>
not really

[15:44:03.0000] <jcranmer>
you have to install an extension, which is at best semi-official

[15:45:00.0000] <jcranmer>
in that "if PyXPCOM crashes and burns, we don't really care"

[15:47:00.0000] <bga_>
too bad

[15:48:00.0000] <bga_>
may be in future we will have multilanguage web

[15:49:00.0000] <jcranmer>
perhaps

[15:49:01.0000] <jcranmer>
but to my knowledge, it's not a feature people have been clamoring for

[15:49:02.0000] <TabAtkins>
/me points against to NaCl, which you can compile any language towards.  It just only works in Chrome right now.

[15:50:00.0000] <bga_>
they want

[15:50:01.0000] <bga_>
but they do not talks about it

[15:51:00.0000] <jcranmer>
https://bugzilla.mozilla.org/show_bug.cgi?id=255942

[15:51:01.0000] <bga_>
alot of %language% -> js translators says about it

[15:51:02.0000] <jcranmer>
34 votes

[15:52:00.0000] <jcranmer>
that's a really high number, you know... 

[15:52:01.0000] <jcranmer>
I mean, restore mng only had 600 or so votes

[15:53:00.0000] <jcranmer>
oh, 700 votes as of now

[15:53:01.0000] <bga_>
http://twitter.com/bga_/status/7221442764611585 :)

[15:53:02.0000] <bga_>
wait 2000 :)

[15:54:00.0000] <jcranmer>
supporting XInclude has even more votes

[15:55:00.0000] <Philip`>
/me doesn't like how NaCl seems to be using x86 as probably the worst imaginable bytecode format, just because it happens to have a trivial mapping from bytecode to machine code on the current dominant desktop platform

[15:56:00.0000] <jcranmer>
/me is suprised that more of these aren't WONTFIX'd

[15:56:01.0000] <jcranmer>
Philip`: it makes more sense to do ARM

[15:56:02.0000] <jcranmer>
considering that there are already a not-insignificant number of ARM emulators

[15:56:03.0000] <jcranmer>
on x86

[15:56:04.0000] <jcranmer>
seeing as how the GBA is implemented in ARM ;-)

[15:57:00.0000] <jcranmer>
heck, I think someone even did a GBA emulator in JS

[15:57:01.0000] <gsnedders>
It's a question of how large and complex you want your bytecode to be. :)

[15:58:00.0000] <jcranmer>
ah, no, it's only the original GameBoy

[15:58:01.0000] <Philip`>
Hmm, looks like the current NaCl approach to portability is that you should compile your application three times (for x86, amd64 and ARM), which seems a bit of a step backwards compared to the current state of the web

[15:59:00.0000] <jcranmer>
. . .

[15:59:01.0000] <Philip`>
(and the future NaCl approach is to use the LLVM bytecode format instead, in which case I'm not sure how it's Native any more)

[15:59:02.0000] <gsnedders>
Unsurprisingly for the vendor that probably ships on more platforms than any of the other major browser vendors, we don't want to do that.

[15:59:03.0000] <bga_>
btw i`ll planning open source project which will translate CRL -> js

[15:59:04.0000] <bga_>
:)


2010-11-24
[16:00:00.0000] <Philip`>
http://code.google.com/p/nativeclient-sdk/source/browse/trunk/src/examples/hello_world/hello_world.html#84 - lovely

[16:01:00.0000] <jcranmer>
Philip`: well, I suppose the people who want to use it are mostly the people who want to screw compatability

[16:01:01.0000] <bga_>
jcranmer https://bugzilla.mozilla.org/show_bug.cgi?id=255942 79 votes

[16:02:00.0000] <TabAtkins>
Philip`: Ah, it looks like maybe we support arm there?  In addition to x86-32bit and x86-64bit.

[16:02:01.0000] <gsnedders>
What about all these MIPS-based internet-enabled TVs?

[16:03:00.0000] <jcranmer>
bga_: no, 35 votes

[16:03:01.0000] <Philip`>
What about everybody who's going to not bother compiling for x86-64 because there's not enough users to be worth the bother?

[16:04:00.0000] <TabAtkins>
I dunno how all this works.

[16:04:01.0000] <Philip`>
Seems it'll be exactly like plugins, just minus the security issues

[16:32:00.0000] <TabAtkins>
Philip`: Yeah, that's basically what it is - a native plugin system.

[16:33:00.0000] <jacobolus>
beowulf: okay, I added a &thinsp; glyph to Delicious (and even made it slightly thinner than a usual &thinsp;), and now it renders fine in Opera. Still, I wonder why it picked such a honking huge replacement before

[16:50:00.0000] <nessy>
question for those here that understand WebSRT: how can I address a single cue through the CSS selectors?

[16:51:00.0000] <nessy>
IIUC you can only address all cues or all cue-parts of a certain node type

[16:54:00.0000] <TabAtkins>
nessy: Right now, the only way to do so is to give it a unique voice and target that.

[16:54:01.0000] <nessy>
ok, thanks

[17:08:00.0000] <_bga>
hm

[17:08:01.0000] <_bga>
MonoTouch - Mono for iOS

[18:12:00.0000] <tau>
hi

[18:12:01.0000] <tau>
when i make d = html5lib.parse(f) it simply returns none.

[18:13:00.0000] <TabAtkins>
I believe the people you'd want to talk to are asleep, since they're european.

[18:13:01.0000] <tau>
TabAtkins, hm, could you help me then ?

[18:14:00.0000] <TabAtkins>
Not really.  ^_^  html5lib was just written by a couple of the dudes who hang out in this room.

[18:14:01.0000] <tau>
TabAtkins, where are you from ?

[18:14:02.0000] <TabAtkins>
west coast of america

[18:14:03.0000] <tau>
cool

[18:18:00.0000] <tau>
lolwut

[18:19:00.0000] <TabAtkins>
Um?

[18:31:00.0000] <nessy>
TabAtkins: just to confirm about WebSRT - if I want to position a cue 5 lines higher than the bottom rendering area of the video, it would need to get a L: 5 cue setting, right?

[18:31:01.0000] <nessy>
or is it L: −5 ?

[20:33:00.0000] <boogyman>
Hixie, AryehGregor is there a tentative date, or general timeframe, when the HTML5 spec is supposed to mature to the next phase?

[20:33:01.0000] <MikeSmith>
boogyman: what do you mean by next phase?

[20:33:02.0000] <MikeSmith>
do you mean as far as W3C process, or something else?

[20:34:00.0000] <boogyman>
currently in working draft, I assume the next is candidate recommendation

[20:35:00.0000] <MikeSmith>
yeah, that's the next big step

[20:35:01.0000] <MikeSmith>
but prior to that there's another step

[20:35:02.0000] <MikeSmith>
which is so-called Last Call

[20:35:03.0000] <MikeSmith>
which is actually more like First Call

[20:35:04.0000] <m0>
How long is the Last Call?

[20:36:00.0000] <boogyman>
Is there a tentative eta for that mike?

[20:36:01.0000] <MikeSmith>
we have not decided how long the LC for it will be

[20:37:00.0000] <MikeSmith>
boogyman: schedule from the chairs is here:

[20:37:01.0000] <MikeSmith>
http://lists.w3.org/Archives/Public/public-html/2010Sep/0074.html

[20:37:02.0000] <boogyman>
Thanks

[20:37:03.0000] <MikeSmith>
the date we are aiming to start LC is May 22

[20:38:00.0000] <MikeSmith>
"LC resolution carries" = resolution from the group to agree to start LC

[20:38:01.0000] <MikeSmith>
and what LC at W3C means is that the group must record every comment it receives about the spec during the LC period

[20:39:00.0000] <MikeSmith>
and at the end of the LC period, publish a report listing the "disposition" for every comment

[20:40:00.0000] <MikeSmith>
including whether whether any change was made to the spec based on the comment 

[20:40:01.0000] <boogyman>
ok

[20:42:00.0000] <MikeSmith>
what the HTML WG is doing right now is, the chairs are reviewing all escalated issues that have come in so far

[20:42:01.0000] <MikeSmith>
where "escalated issues" means, cases where somebody in the group asked for a change to the spec but the change was rejected

[20:43:00.0000] <MikeSmith>
those are cases that have to be adjudicated by the chairs

[20:43:01.0000] <MikeSmith>
based on their review of all the available information about the issue

[20:44:00.0000] <MikeSmith>
and the plan is to try to get all those open issues decided by the chairs, on behalf of the group, by April 22

[20:44:01.0000] <MikeSmith>
m0: is some groups, the LC period is just 1 month or so

[20:44:02.0000] <m0>
Ah cool

[20:44:03.0000] <MikeSmith>
in this case, it will be significantly longer, though

[20:45:00.0000] <m0>
/me reading the mailing list

[20:45:01.0000] <karlcow>
plus theoritically we never exit a phase, but always enter a new phase. Aka we enter in a phase when all the requirements for entering are met

[20:45:02.0000] <karlcow>
but that is just semantics

[20:45:03.0000] <karlcow>
:)

[20:46:00.0000] <MikeSmith>
yeah, the phases all just accumulate

[20:46:01.0000] <m0>
I am surprised I never joined w3 working group :x Doing that now.

[20:46:02.0000] <MikeSmith>
like karmic dust

[20:49:00.0000] <MikeSmith>
anyway, Hixie originally estimated we would go to CR in 2012

[20:49:01.0000] <MikeSmith>
and a lot of people scoffed at that as being too far in the future

[20:49:02.0000] <MikeSmith>
when he said it back in 2006 or early 2007 or so

[20:50:00.0000] <boogyman>
From prior experience and looking at the development thus far, I'd say that Feb/Mar 2010 sounds about right

[20:50:01.0000] <karlcow>
(and given the type of specification that people were used to produce aka not a microscopically detailed specification ;) )

[20:50:02.0000] <boogyman>
2012*

[20:50:03.0000] <karlcow>
different expectations

[20:51:00.0000] <MikeSmith>
yeah

[20:51:01.0000] <MikeSmith>
anyway, all the above said, none of these dates really have any effect on end users of the actual technologies

[20:51:02.0000] <MikeSmith>
or on most adopters of the technologies

[20:52:00.0000] <MikeSmith>
I mean on content providers or developers

[20:52:01.0000] <MikeSmith>
what really matters is what has actually been implemented

[20:52:02.0000] <MikeSmith>
and how interoperably it's been implemented 

[20:52:03.0000] <MikeSmith>
and how stable it is

[20:52:04.0000] <MikeSmith>
an example is WebSocket

[20:53:00.0000] <boogyman>
I'm just happy MS is developing IE9 to be compliant with the new spec so developers wont have to waste another decade bickering over the inequities

[20:54:00.0000] <MikeSmith>
yeah, they have done some great stuff so far, as far as getting important features implemented in IE9

[20:54:01.0000] <MikeSmith>
but they have a lot left to do

[20:54:02.0000] <MikeSmith>
everybody does

[20:54:03.0000] <MikeSmith>
an good example is HTML5 forms support

[20:54:04.0000] <MikeSmith>
we still have a long way to go on that

[20:55:00.0000] <MikeSmith>
as far as getting it implemented 

[20:55:01.0000] <MikeSmith>
and the example of WebSocket is one where we do already have some solid implementations

[20:56:00.0000] <MikeSmith>
but the spec is not completely stable

[20:56:01.0000] <MikeSmith>
for the protocol part

[20:56:02.0000] <boogyman>
I'm intrigued to see what roll web-sockets and <canvas> once decently implemented

[20:56:03.0000] <MikeSmith>
and implementations are all going to need to change still

[20:57:00.0000] <MikeSmith>
canvas is probably the most stable new feature from HTML5 that's actually been implemented

[20:57:01.0000] <boogyman>
I'm not really sold on regular expressions defined in dev source though

[20:57:02.0000] <MikeSmith>
huh?

[20:57:03.0000] <MikeSmith>
in what context?

[20:58:00.0000] <boogyman>
for instance input type=email pattern="RegEx"

[21:00:00.0000] <MikeSmith>
ah

[21:01:00.0000] <boogyman>
although, i guess that's more of an implementation bit, as it does have valid use for non-security type instances, such as a name or date

[21:02:00.0000] <MikeSmith>
yeah, but I supposed naive developers are certainly going to find ways to do stupid things with it

[21:02:01.0000] <MikeSmith>
but that's true of exposing any kind of feature like that to the masses

[21:02:02.0000] <jacobolus>
svg is more exciting than canvas IMO. once IE supports it, adoption is going to take off

[21:03:00.0000] <MikeSmith>
jacobolus: it's not an either-or at all

[21:03:01.0000] <jacobolus>
sure

[21:03:02.0000] <jacobolus>
SVG has I think more interesting applications than canvas does

[21:03:03.0000] <MikeSmith>
the market seems to thing they are both pretty exciting

[21:03:04.0000] <jacobolus>
definitely

[21:04:00.0000] <boogyman>
I've not really broken the surface with svg, I was going to do that on my holiday break while traveling

[21:04:01.0000] <jacobolus>
I've been playing with protovis for a couple weeks. After a somewhat steep learning curve, it's pretty neat

[21:04:02.0000] <MikeSmith>
what's protovis?

[21:04:03.0000] <MikeSmith>
authoring tool?

[21:04:04.0000] <jacobolus>
http://vis.stanford.edu/protovis/

[21:05:00.0000] <jacobolus>
infographic/visualization/chart tool by a prof. and a grad student at stanford

[21:05:01.0000] <MikeSmith>
/me looks

[21:05:02.0000] <jacobolus>
better link: http://vis.stanford.edu/protovis/ex/

[21:05:03.0000] <MikeSmith>
nice

[21:05:04.0000] <karlcow>
svg and html are TSA approved, you can view the source. With canvas it is a bit more opaque ;)

[21:06:00.0000] <m0>
lol

[21:06:01.0000] <jacobolus>
karlcow: if you're generating SVG from javascript, it's not always super helpful

[21:06:02.0000] <m0>
jacobolus: well, you can inspect the page of generated JS and see the SVG

[21:07:00.0000] <jacobolus>
you can inspect the javascript drawing on the canvas too.... :)

[21:07:01.0000] <MikeSmith>
I'm not sure most JS programmers would agree that code for a canvas-based image/app is more opaque than that for a SVG one

[21:08:00.0000] <jacobolus>
but yeah, the era of multiplayer web games is on us, in a way it never was with flash

[21:08:01.0000] <jacobolus>
(and also multiplayer web other stuff)

[21:08:02.0000] <jacobolus>
("multi-user"?)

[21:08:03.0000] <MikeSmith>
yeah, god help us all

[21:09:00.0000] <boogyman>
jacobolus: have you seen http://10k.aneventapart.com/Entry/83

[21:09:01.0000] <MikeSmith>
great productivity booster that multiplayer games are

[21:10:00.0000] <karlcow>
"god" in French is a… (no, I'll pass on this one) 

[21:10:01.0000] <karlcow>
/me is going to bed

[23:06:00.0000] <JonathanNeal>
Does anyone here know how I can correct for webkit's underflow?  http://sandbox.thewikies.com/float-bugs/

[23:09:00.0000] <MikeSmith>
JonathanNeal: is that a problem only in webkit?

[23:10:00.0000] <MikeSmith>
looks same to me in Minefield

[23:10:01.0000] <MikeSmith>
ah wait

[23:10:02.0000] <JonathanNeal>
I don't see it in Firefox 3.6.12 or Firefox 4.0b6

[23:10:03.0000] <MikeSmith>
one pixel

[23:10:04.0000] <MikeSmith>
yeah, I wasn't looking close enough

[23:14:00.0000] <JonathanNeal>
Is there a css property to adjust for this?

[23:48:00.0000] <MikeSmith>
https://github.com/ry/node/raw/19478ed4b14263c489e872156ca55ff16a07ebe0/README is great

[23:49:00.0000] <MikeSmith>
WHEREAS, The usage of threads has complicated computer programming; and WHEREAS, V8 javascript comes free of I/O and threads; and WHEREAS, Most operating systems do not provide asynchonous file system access. Now, therefore: This set server and client libraries were made to build simple but fast servers. They are provided free of charge under a permissive simple license.

[23:50:00.0000] <MikeSmith>
JonathanNeal: no clue from me about whether there's a CSS property for adjusting that

[23:50:01.0000] <MikeSmith>
but it seems like a bug

[23:50:02.0000] <MikeSmith>
that you should report at least

[23:50:03.0000] <MikeSmith>
(which is realize doesn't help you for now with trying to get it to work the same)

[23:51:00.0000] <JonathanNeal>
Should I report @ https://bugs.webkit.org/ ?

[23:51:01.0000] <MikeSmith>
yep

[23:51:02.0000] <JonathanNeal>
or is it better to do it on the Chrome side?  Okay, you got it.

[23:52:00.0000] <MikeSmith>
/me steps away for a bit

[23:52:01.0000] <MikeSmith>
http://wordsquared.com/

[23:53:00.0000] <MikeSmith>
node-based multiplayer word game

[23:53:01.0000] <MikeSmith>
/me now really steps away for a bit

[00:02:00.0000] <JonathanNeal>
MikeSmith, there we go @ https://bugs.webkit.org/show_bug.cgi?id=50006 hope that helps.

[00:03:00.0000] <JonathanNeal>
In the meantime I'm trying to think of ways of correcting it with JS, without breaking FF or IE.

[00:51:00.0000] <phrearch>
hi

[00:51:01.0000] <phrearch>
does a contenteditable div have the same events as a regular textarea?

[00:52:00.0000] <phrearch>
im trying to build a wysiwyg editor on top of jinfinote

[02:13:00.0000] <Hixie>
http://blogs.gnome.org/alexl/2010/11/23/gtk3-vs-html5/ oh dear.

[02:13:01.0000] <Hixie>
someone's gonna have to explain html to them.

[02:24:00.0000] <hsivonen>
Hixie: the same person who is going to explain HTML and JavaScript to Google?

[02:24:01.0000] <hsivonen>
(GWT team in particular)

[02:24:02.0000] <Hixie>
yeah, probably

[02:24:03.0000] <Hixie>
or indeed to the bespin team :-)

[02:26:00.0000] <hsivonen>
WebSocket would be more appropriate for the use case than XHR

[02:26:01.0000] <Hixie>
i'm far more concerned about the canvas side of it

[02:26:02.0000] <Hixie>
XHR vs WebSocket doesn't really harm anyone except the programmer

[02:27:00.0000] <hsivonen>
I think there's a pending "yo, dawg" joke in there when they get a browser running

[02:28:00.0000] <hsivonen>
Hixie: next, they need to implement an atk to ARIA bridge

[02:28:01.0000] <Hixie>
we don't provide enough hooks for them to do it

[02:28:02.0000] <zcorpan>
hsivonen: then they can do gtk in the browser in the gtk in the browser

[02:28:03.0000] <Hixie>
nor should we, the whole idea is hare-brained :-)

[02:29:00.0000] <Hixie>
(as implemented)

[02:29:01.0000] <Hixie>
would make much more sense to have gtk map to html

[02:29:02.0000] <Hixie>
that would actually be useful

[02:29:03.0000] <hsivonen>
Hixie: do we provide enough hooks for *that*?

[02:30:00.0000] <Hixie>
i dunno if we provide enough hooks to get you 100% of the way there

[02:30:01.0000] <hsivonen>
/me notes that VNC sends over bitmaps, not the semantics of the toolkit of the remote system

[02:30:02.0000] <espadrine>
zcorpan: didn't you see that the firefox copy he was running was actually inside a chrome tab?

[02:31:00.0000] <Hixie>
but the 80% of the way there that you get will be 100% "native" compared to the vnc-like solution which can get you 100% of the way there in terms of pixels and precisely 0% of the way there in terms of native

[02:31:01.0000] <espadrine>
(I hope it wasn't)

[02:31:02.0000] <hsivonen>
the word "accessibility" doesn't appear in the comment section of the blog post

[02:31:03.0000] <Hixie>
(where native means hooking into system things like IME, accessibility, etc)

[02:39:00.0000] <hsivonen>
speaking of native, I find it amusing (in a sad way) that the W3C offers an HTML/CSS/SVG reference as an Android app

[02:41:00.0000] <annevk>
there's also an online version I think

[02:41:01.0000] <espadrine>
I hope they don't go over the network in the app version, at least...

[02:42:00.0000] <hsivonen>
annevk: I'm aware of the dogfood version

[02:42:01.0000] <zcorpan>
where's this reference?

[02:43:00.0000] <hsivonen>
zcorpan: http://dev.w3.org/2009/cheatsheet/doc/android

[02:49:00.0000] <zcorpan>
hsivonen: thanks. i don't understand how i get to the "web" version from http://dev.w3.org/2009/cheatsheet/doc/

[02:50:00.0000] <espadrine>
http://www.w3.org/2009/cheatsheet/

[02:50:01.0000] <zcorpan>
ah

[02:53:00.0000] <zcorpan>
no <datalist>

[02:53:01.0000] <Rik`>
http://www.w3.org/2009/cheatsheet/#search,datalist 

[02:53:02.0000] <zcorpan>
i mean, the app doesn't use <datalist>

[02:54:00.0000] <Rik`>
well, datalist is quite unusable considering the webkit implementation

[02:54:01.0000] <annevk>
does use a non-polyglot DOCTYPE and a namespace declaration

[02:54:02.0000] <annevk>
hurray

[02:57:00.0000] <jgraham>
Hmm, I think the GTK-in-HTML thing is rather neat. I mean, doing it with HTML widgets would be better but would probably have the disadvantage of not actually working

[02:58:00.0000] <jgraham>
Obviously a11y is an issue

[04:03:00.0000] <annevk>
"After briefly trying out Debian and Fedora, I suspect Ubuntu might be the worst distro choice, except for all the others." :/

[04:12:00.0000] <jgraham>
I thought that was common wisdom

[04:31:00.0000] <annevk>
this MS extensions to window.screen thread is completely useless

[04:32:00.0000] <annevk>
aah, found the start of the thread

[04:33:00.0000] <annevk>
aah okay

[04:34:00.0000] <annevk>
it's about APIs nobody wants to add

[04:34:01.0000] <annevk>
/me moves along

[04:34:02.0000] <annevk>
/me deletes thread

[12:07:00.0000] <AryehGregor>
Could someone tell me if these look the same or different in IE9 beta?

[12:07:01.0000] <AryehGregor>
data:text/html,<!doctype html><img src='data:image/svg+xml,<!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.0//EN" "http://www.w3.org/TR/2001/REC-SVG-20010904/DTD/svg10.dtd"><svg xmlns="http://www.w3.org/2000/svg" width="200" height="200"><circle r="100" fill="red" /></svg>' style="height: 5em">

[12:07:02.0000] <AryehGregor>
data:text/html,<!doctype html><img src='data:image/svg+xml,<!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.0//EN" "http://www.w3.org/TR/2001/REC-SVG-20010904/DTD/svg10.dtd"><svg xmlns="http://www.w3.org/2000/svg" width="200" height="200" viewBox="0 0 200 200"><circle r="100" fill="red" /></svg>' style="height: 5em">

[12:08:00.0000] <AryehGregor>
WebKit and Opera render them the same, Firefox 4.0b7 renders them differently (clipping the former instead of scaling it).

[12:08:01.0000] <AryehGregor>
I can't figure out from the SVG spec which is correct.  It doesn't say what you do if viewBox isn't defined.

[12:10:00.0000] <AryehGregor>
I have no Vista or 7 machine that I can install IE9 on, since my father needs IE8 for work (sigh).

[12:12:00.0000] <AryehGregor>
CSS height/width scales everything else, so I don't see why it wouldn't scale SVG.

[12:13:00.0000] <AryehGregor>
Does CSS say clearly whether replaced content should be scaled vs. clipped?

[12:13:01.0000] <AryehGregor>
(when given width/height)

[12:14:00.0000] <AryehGregor>
I now hate all specs other than HTML5.  They're much too vague.  :(

[12:14:01.0000] <AryehGregor>
(well, and some other post-HTML5 specs)

[12:14:02.0000] <Ms2ger>
AryehGregor++

[12:14:03.0000] <AryehGregor>
(and some non-web specs, and possibly some web specs before HTML5 that I haven't heard of)

[12:22:00.0000] <david_carlisle>
AryehGregor: IE9 doesn't seem to acept data: in that context and if  save the contentto local .html files and then load them, they each just render as a broken image symbol

[12:22:01.0000] <AryehGregor>
Well, it could be rewritten as a proper document.

[12:22:02.0000] <AryehGregor>
One sec.

[12:23:00.0000] <david_carlisle>
yes thats what I meant i saved from <!doctype to the end (and checked ift worked in FF)

[12:24:00.0000] <AryehGregor>
http://aryeh.name/tmp/test1.html http://aryeh.name/tmp/test2.html

[12:24:01.0000] <AryehGregor>
How do those look?

[12:24:02.0000] <AryehGregor>
Whee, Chrome messes up the second one in a weird way.

[12:24:03.0000] <TabAtkins>
Whether to scale or not is up to SVG.  CSS asks it for its intrinsic dimensions, then figures out a box for it to render in and just tells it to go crazy.

[12:24:04.0000] <AryehGregor>
(Opera doesn't handle inline SVG at all in the version I'm using, which is why I used data URLs)

[12:25:00.0000] <TabAtkins>
(http://dev.w3.org/csswg/css3-images/#sizing)

[12:26:00.0000] <david_carlisle>
1 quater circle 2 half

[12:26:01.0000] <david_carlisle>
sorry need to go...

[12:27:00.0000] <AryehGregor>
SVG 1.1 is what I should be looking at, right?

[12:27:01.0000] <TabAtkins>
...probably.  I think that's the one everyone implements, yeah.

[12:28:00.0000] <AryehGregor>
TabAtkins, typo for you to fix there: "conain".

[12:28:01.0000] <TabAtkins>
Yeah, there's a few typos in that section that I'm just now seeing.

[12:34:00.0000] <TabAtkins>
Argh, I can't get a cubic-bezier timing function to work in animation.  Hrm.

[12:37:00.0000] <TabAtkins>
Ah, there it is.  It's very annoying trying to figure out exactly what combination of things need to be prefixed in a complex experimental syntax.

[12:40:00.0000] <AryehGregor>
Is there any chance we can get browsers to start ignoring doctype and xmlns for SVG?

[12:40:01.0000] <AryehGregor>
Because man, those are obnoxious.

[12:40:02.0000] <TabAtkins>
That's the primary reason I don't use SVG in practice, definitely.

[12:42:00.0000] <AryehGregor>
So can we persuade the SVGWG about this, or work around them, or what?  Has it come up there?

[12:43:00.0000] <TabAtkins>
I doubt SVG will stop being an XML language, so probably a no-go in SVG itself.

[12:43:01.0000] <AryehGregor>
You don't need doctype or xmlns to be an XML language.

[12:43:02.0000] <AryehGregor>
XML doesn't require either of those.

[12:44:00.0000] <TabAtkins>
Oh, yeah, you're right.  Damn things just sprout them as a matter of course, so I forget.

[12:44:01.0000] <TabAtkins>
Um, then maybe!

[12:44:02.0000] <roc>
just write your SVG in HTML

[12:44:03.0000] <Ms2ger>
It works in Firefox! :)

[12:45:00.0000] <roc>
and Chrome, I think

[12:45:01.0000] <AryehGregor>
So just do <img src="foo.html"> where foo.html is like <!doctype html><svg>...</svg>?  Does that work?

[12:45:02.0000] <roc>
mmmm no

[12:45:03.0000] <roc>
<object> would though

[12:45:04.0000] <roc>
so would <iframe>

[12:45:05.0000] <roc>
I suppose we could make HTML images work, although someone might blow a gasket

[12:46:00.0000] <TabAtkins>
Well, just doing the svg-in-html certainly works in Chrome just fine.  Yay!@

[12:46:01.0000] <AryehGregor>
Do height and width work as expected on object and iframe?

[12:46:02.0000] <david_carlisle>
AryehGregor: don't you want a mime type for "svg serialised as html"

[12:46:03.0000] <Ms2ger>
image/html

[12:46:04.0000] <AryehGregor>
Ms2ger++

[12:46:05.0000] <TabAtkins>
AryehGregor: No, they work differently than they do for <img>.

[12:46:06.0000] <roc>
it should work in IE9 as well

[12:47:00.0000] <Ms2ger>
/me is reminded of image/xhtml+xml

[12:47:01.0000] <AryehGregor>
I vaguely remember trying out object/iframe for SVG on my site and got annoyed at how they worked differently, so I used img.

[12:49:00.0000] <AryehGregor>
It looks like Firefox lets me leave out doctype, but not xmlns.

[12:50:00.0000] <Ms2ger>
In XML? That's what I'd expect

[12:50:01.0000] <AryehGregor>
Ditto Chrome and Opera.

[12:50:02.0000] <AryehGregor>
Oh well.

[12:51:00.0000] <TabAtkins>
Huh?  Chrome lets me leave out xmlns in html.

[12:51:01.0000] <AryehGregor>
In <img>.

[12:51:02.0000] <AryehGregor>
In text/html you're supposed to be able to leave out xmlns, yeah.

[12:53:00.0000] <TabAtkins>
Ah, darn, you're right.  I can't use svg-in-html-in-img.

[12:53:01.0000] <TabAtkins>
;_;

[12:54:00.0000] <jgraham>
Do the SVG doctypes map to the magic set of entities?

[12:54:01.0000] <jgraham>
Like they do for MathML?

[12:55:00.0000] <jgraham>
Not that you need them for SVG, typically

[12:55:01.0000] <Ms2ger>
I don't think so

[12:56:00.0000] <jgraham>
So you can use them in MathML, XHTML, HTML, but not SVG? Weird

[12:56:01.0000] <jgraham>
consistency++

[13:03:00.0000] <TabAtkins>
Ah, now I remember what the problem I had with Firefox's SVG-in-<img> support - it doesn't do SMIL while inside an <img>.  I tried to change over to <object> but it failed pretty bad, so I just decided that FF doesn't get animated conveyor belts.

[13:08:00.0000] <david_carlisle>
so don't you want an image/svg+html mime type for svg serialised as per html5 to use with image?

[13:09:00.0000] <david_carlisle>
It only took 12 years to (not) register the mime type for svg as xml...

[13:10:00.0000] <david_carlisle>
jgraham, you can use whatever entities you line in svg as xml if you use an appropriate dtd

[13:10:01.0000] <david_carlisle>
'cept that in a browser context you don't fetch the dtd...

[13:16:00.0000] <webr3>
anybody know if xhr.statusText should be '200 OK' or just 'OK'? (as in with code or without)

[13:24:00.0000] <jgraham>
david_carlisle: Yeah, you could use an internal subset but it's about as appealing as hacking your own arm off. With a spoon.

[13:26:00.0000] <david_carlisle>
or the browsers could all decide to parse all xml with an effective catalogue that predefined all the entities always rather than just looking for certain old legacy doctypes and adding the mathml ones, sometimes.

[13:36:00.0000] <TabAtkins>
david_carlisle: That would be nice, yes.  Then maybe Anne could drop doctype handling from his XML5 stuff.

[13:37:00.0000] <TabAtkins>
(Right now, he only parses doctypes for entities.  If he didn't need that, he could drop it down to a handful of states just describing how to ignore a doctype.)

[13:38:00.0000] <david_carlisle>
sIn an environment where you don't fetch external dtd and don't validate,

[13:38:01.0000] <david_carlisle>
just always using the same set of entities makes sense to me

[13:38:02.0000] <TabAtkins>
Me too.

[13:39:00.0000] <david_carlisle>
(and means i didn't waste half a lifetime maintaining them through changes in Unicode:-)

[13:41:00.0000] <webr3>
IIRC all the us gov data (new) all uses doctypes w/ entities &myns; etc

[13:41:01.0000] <webr3>
several thousand data sets

[13:41:02.0000] <david_carlisle>
rdf?

[13:42:00.0000] <webr3>
yeah everything via RPI

[13:45:00.0000] <david_carlisle>
webr3: do you have an example uri? Also for xml, ignoring any external subset and just using a dtd that defines the htmlmathml entities is (just about) conformant xml, but you'd also have to define entities defined in a local subset (in xml,  Anne's xml5 can do whatever he says:-0

[13:47:00.0000] <webr3>
david, http://tw2.tw.rpi.edu/data-gov/data-10048.rdf

[13:48:00.0000] <david_carlisle>
thanks

[13:50:00.0000] <david_carlisle>
webr3: that's got a lot of namespaces but no doctype (and thus) no entities to worry about.

[13:53:00.0000] <webr3>
hmm maybe i gave wrong link (should have checked) - I may be confused, will confirm in a mo

[13:53:01.0000] <webr3>
ack wrong link

[13:56:00.0000] <webr3>
ahh yes, http://data-gov.tw.rpi.edu/vocab.php?instance=Dataset_616 (and all data sets_

[13:57:00.0000] <webr3>
aside: it caught my attention yesterday as it was a huge amount of datasets in this style, and it's not often I see doctypes and entities in RDF/XML - until this set that, there is one other big oen the same, can't remember which off hand

[14:02:00.0000] <david_carlisle>
webr3: thanks yes rdf gives xml a bad name:-) 

[14:03:00.0000] <david_carlisle>
as I say it's conformant (and would work with that) to ignore any external dtd subset and substitute the html5 entities, and then to define any entities in the local subset

[14:05:00.0000] <david_carlisle>
it would be interesting to know what's behind that php script whether it could serve the rdf/xml without the local subset and all the namespaces uri inlined

[14:06:00.0000] <webr3>
probably a good time to ask, as they're migrating to different server's atm

[14:07:00.0000] <david_carlisle>
well it isn't my government so someone else should probably ask:-)

[15:31:00.0000] <AryehGregor>
/me is slightly disoriented when he reads random cryptography articles on Wikipedia and finds references regularly to things named after the guy who taught his crypto course

[15:31:01.0000] <TabAtkins>
Heh, that's pretty cool.

[15:32:00.0000] <gsnedders>
AryehGregor: Maybe he did know what he was talking about, after all, then :P

[15:34:00.0000] <AryehGregor>
I guess that's what you get at a place like NYU, they have top researchers.  He was a really good instructor, too.

[15:34:01.0000] <AryehGregor>
I haven't noticed it with my math professors, but I guess math research is just way too specialized for me to know anything that touches on their research.

[15:38:00.0000] <AryehGregor>
/me finds http://en.wikipedia.org/wiki/Very_smooth_hash suspicious, since it claims to be collision-resistant but not preimage-resistant, which is self-evidently impossible

[15:40:00.0000] <TabAtkins>
My cryptography knowledge is very obviously based on me reading wikipedia and blogs, so I slip up and confused collision and preimage a lot.  >_<

[15:44:00.0000] <AryehGregor>
/me notices that the article only cites two sources, of which one is the original paper and the other link is broken . . .

[15:45:00.0000] <gsnedders>
I just claim to not know much about crypto :)

[15:51:00.0000] <AryehGregor>
Okay, so apparently collision resistance implies that you can't do preimage attacks on *most* hashes, but you might still be able to do them on particular important subsets of hashes.

[15:53:00.0000] <AryehGregor>
So formally it implies preimage resistance, if you define preimage resistance in terms of the challenger selecting a hash uniformly at random, but not in practice.

[15:53:01.0000] <AryehGregor>
Learn something new every day.

[15:55:00.0000] <AryehGregor>
I don't feel so bad, because I learned this particular fact from this famous professor I was talking about.

[15:55:01.0000] <AryehGregor>
/me stops talking to himself


2010-11-25
[16:12:00.0000] <yuhong>
"Authors must not use the lang attribute in the XML namespace on HTML elements in HTML documents. To ease migration to and from XHTML, authors may specify an attribute in no namespace with no prefix and with the literal localname "xml:lang" on HTML elements in HTML documents, but such attributes must only be specified if a lang attribute in no namespace is also specified, and both attributes...

[16:12:01.0000] <yuhong>
...must have the same value when compared in an ASCII case-insensitive manner."

[16:12:02.0000] <yuhong>
Unfortunately, XHTML 1.1 can now be served as text/html and that does not allow lang to be used.

[16:12:03.0000] <yuhong>
http://www.w3.org/TR/2009/NOTE-xhtml-media-types-20090116/

[16:13:00.0000] <AryehGregor>
Huh?  XHTML 1.1 allows lang to be used.

[16:14:00.0000] <AryehGregor>
Oh, 1.1.

[16:14:01.0000] <AryehGregor>
Who uses 1.1?

[16:14:02.0000] <AryehGregor>
I doubt HTML5 aims for compatibility with XHTML 1.1.

[16:14:03.0000] <yuhong>
Nobody so far, but that is partly because before it can't be served as text/html.

[16:14:04.0000] <AryehGregor>
1.0, yes, more or less.

[16:14:05.0000] <yuhong>
Now it can.

[16:14:06.0000] <yuhong>
Thanks to the second edition.

[16:15:00.0000] <AryehGregor>
Okay, so is there a problem here?

[16:15:01.0000] <AryehGregor>
Serve it as XHTML 1.1 and use xml:lang, or as HTML5 and use lang.

[16:15:02.0000] <AryehGregor>
The XHTML 1.1 doctype isn't allowed by HTML5 either.

[16:15:03.0000] <AryehGregor>
So you can't serve the same document for both.

[16:15:04.0000] <AryehGregor>
Not to mention that if you tried that you couldn't use all the new HTML5 features like <canvas> and <video> and so forth.

[16:15:05.0000] <AryehGregor>
(in which case, why bother with HTML5 at all?)

[16:17:00.0000] <AryehGregor>
Would you like the spec to say "To ease migration to and from XHTML 1.0, . . ." instead?

[16:28:00.0000] <MikeSmith>
that Wikipedia article is indeed suspicious

[16:28:01.0000] <MikeSmith>
from the title, you'd expect there to be something about hash in there

[16:29:00.0000] <MikeSmith>
but you read it and instead it's all about mathematical formulas or some damn thing

[16:30:00.0000] <MikeSmith>
this article about this subject is much more straightforward:

[16:30:01.0000] <MikeSmith>
http://en.wikipedia.org/wiki/Hashish

[16:30:02.0000] <MikeSmith>
it gets to the point right away

[16:31:00.0000] <nimbupani>
i had a print of a 1973 poster from a katmandu shop

[16:31:01.0000] <nimbupani>
with a goddess who has a marijuana in her hand 

[16:31:02.0000] <nimbupani>
and the slogan

[16:32:00.0000] <nimbupani>
"We Take You Higher"

[16:32:01.0000] <nimbupani>
a marijuana leaf*

[16:33:00.0000] <MikeSmith>
heh

[16:36:00.0000] <paul_irish>
relatedly: thx to MikeSmith i got a tshirt that says. "HTML. So High!   Too much love."

[16:36:01.0000] <MikeSmith>
yeah, there's lots more where that one came from

[16:37:00.0000] <nimbupani>
too bad they dont do CSS

[16:37:01.0000] <nimbupani>
or SVG

[16:37:02.0000] <nimbupani>
i bet W3C will get lots of money if they start creating such t-shirts :D

[16:37:03.0000] <paul_irish>
fundraiser whaat!

[16:37:04.0000] <cardona507>
i need an html so high! shirt 

[16:37:05.0000] <paul_irish>
boom.

[16:37:06.0000] <cardona507>
we need a screenshot of sir tim wearing one of those shirts

[16:37:07.0000] <cardona507>
that would be hot

[16:38:00.0000] <nimbupani>
i think we have a biz plan right here MikeSmith

[16:39:00.0000] <MikeSmith>
yeah, we need to execute on this

[16:39:01.0000] <MikeSmith>
it's interesting that the words HTML and THC both have the letter H in them… there's no way that could just be a simple coincidence

[16:39:02.0000] <MikeSmith>
I think we should rename XBL2 to THC

[16:46:00.0000] <MikeSmith>
JonathanNeal: did you get any feedback yet on that bug you filed?

[16:46:01.0000] <JonathanNeal>
none that I know of, let's check.

[16:47:00.0000] <MikeSmith>
what's the bug number?

[16:49:00.0000] <JonathanNeal>
https://bugs.webkit.org/show_bug.cgi?id=50006

[16:49:01.0000] <JonathanNeal>
UNCONFIRMED

[16:52:00.0000] <MikeSmith>
ah, it's cool you added the red

[16:52:01.0000] <MikeSmith>
in the test page

[16:52:02.0000] <MikeSmith>
makes it a lot easier to see

[16:57:00.0000] <JonathanNeal>
Yea, that was based on your initial reaction.

[16:58:00.0000] <JonathanNeal>
When I have free time I'd be interested in seeing how Firefox handles the spread, like, where it distributes the leftover pixels.

[17:01:00.0000] <JonathanNeal>
okay, time to bring pie to the gf's fam and then home for more coding. see you guys a little later (if you're on)

[17:01:01.0000] <MikeSmith>
cheers

[17:54:00.0000] <yuhong>
Sorry, I found out later actually XHTML 1.1 second edition did add the lang attribute, so there is no incompatibility anyway.

[17:54:01.0000] <yuhong>
Look at the beginning of http://www.w3.org/TR/xhtml11/.

[19:59:00.0000] <MikeSmith>
in C++ program, if I have an int, is there any way I can determine how many digits there in it?

[20:30:00.0000] <heycam>
MikeSmith, without repeatedly dividing by 10?

[20:31:00.0000] <MikeSmith>
heycam: yeah, preferably

[20:32:00.0000] <MikeSmith>
but I have since realized it's not going to help me to know it anyway

[20:32:01.0000] <heycam>
aha i knew there would be a bit twiddling hack for it

[20:32:02.0000] <heycam>
http://graphics.stanford.edu/~seander/bithacks.html#IntegerLog10

[20:33:00.0000] <MikeSmith>
/me looks

[20:33:01.0000] <MikeSmith>
wow

[20:34:00.0000] <heycam>
that page is full of awesome

[20:34:01.0000] <MikeSmith>
see, I knew there was some obvious way to do it :)

[20:34:02.0000] <MikeSmith>
yeah

[20:34:03.0000] <heycam>
heh

[20:34:04.0000] <MikeSmith>
that page is indeed great

[20:35:00.0000] <MikeSmith>
my C++ programming skills are the complete opposite of awesome

[20:35:01.0000] <MikeSmith>
but I did just manage to find and fix another bug in the V8 date-parsing code

[20:35:02.0000] <MikeSmith>
despite my caveman-level programming chops

[20:36:00.0000] <MikeSmith>
and no thanks to gdb

[20:36:01.0000] <heycam>
maybe you can pick up a monetary reward for that

[20:37:00.0000] <MikeSmith>
I would be happy with a new skateboard

[20:38:00.0000] <MikeSmith>
or a new deck at least

[20:41:00.0000] <MikeSmith>
anyway, I have decided that debuggers are overkill

[20:41:01.0000] <MikeSmith>
printf and the like are the best debugging tool ever

[20:42:00.0000] <heycam>
totally

[20:42:01.0000] <MikeSmith>
/me is listening to "Cadaverous / Ultraviolent Junglist" by Venetian Snares on WFMU on HotRod's show from WFMU - Freeform Radio the Way it Oughta Be (✮✮✮✮✮)

[20:46:00.0000] <MikeSmith>
I'm also convinced that listening to breakcore helps me thinks better

[20:46:01.0000] <MikeSmith>
or faster at least

[22:57:00.0000] <MikeSmith>
kennyluck: http://blog.jclark.com/2010/11/xml-vs-web_24.html

[02:04:00.0000] <zcorpan>
xhtml2 wg is still alive... http://www.w3.org/News/2010.html#entry-8962

[02:07:00.0000] <jgraham>
I like how the top item on their homepage is "XHTML 2 Working Group Expected to Stop Work End of 2009". No one expects the… well you see where I am going. Maybe it's not that surprising, since Steven Pemberton was involved with ABC which was the precursor to Python

[02:52:00.0000] <jgraham>
david_carlisle: I think the answer to your question about testsuites is something like "use common sense", i.e. if you make a test that is known to fail in some UA for a reason unrelated to what it purports to test, that is probably bad

[02:53:00.0000] <jgraham>
and the less interoperable the features you use in your test, the more likely that is to happen

[02:53:01.0000] <jgraham>
/me should write something like that to the list

[02:54:00.0000] <annevk>
david_carlisle, if that innerHTML issue gets resolved I suspect it will be out of scope for the HTML WG test suite

[02:54:01.0000] <annevk>
david_carlisle, we could still add it I suppose, but HTML5 would not place the requirements

[03:02:00.0000] <david_carlisle>
jgraham: but I haven't any javascript common sense (no natural feel for the language). Now if the test suite was in xslt it would be so much easier...

[03:09:00.0000] <jgraham>
Yeah, because you would be the only contributer :p

[03:11:00.0000] <david_carlisle>
annevk: if it's out of scope to test for innerHTML on math, then why $ grep innerHTML  approved/foreigncontent/foreign_content_009.html

[03:11:01.0000] <david_carlisle>
for example

[03:14:00.0000] <david_carlisle>
jgraham: on interoperability, I checked the thing worked as expected in webkit/opera/ff/ie is that "interoperable enough" in practice.  there are mathml systems that don't do javascript at all, which would no doubt have serious problems with the test harness, so it wasn't clear to me what was likely to be acceptable.

[03:16:00.0000] <annevk>
david_carlisle, is that testing innerHTML on an HTML or MathML element?

[03:16:01.0000] <jgraham>
Neither, it is using innerHTML to set the results, afaict

[03:24:00.0000] <david_carlisle>
annevk: its on svg not mathml, but whatever its testing if innerHTML didn't work on svg the test would fall over

[03:25:00.0000] <david_carlisle>
sorry, i need to move wifi only stays up for a minute at a time here

[03:25:01.0000] <jgraham>
david_carlisle: It only uses .innerHTML on a HTMLElement afaict

[03:27:00.0000] <david_carlisle>
does it, oops must look harder next time:-0

[03:38:00.0000] <david_carlisle>
annevk: i still don't really see why it's out of scope for html5, .innerHTML works on math in html in  pre-html5 parsers eg opera. It's just the html5 spec as currently written that says it shouldn't work.

[03:42:00.0000] <jgraham>
david_carlisle: Surely it is in scope for the Math WG to put whatever they like on the interface implemented by MathML elements. But I guess annevk means it will become part of Web DOM Core

[03:42:01.0000] <jgraham>
No reason not to test it in HTML5 testsuite if it does

[03:43:00.0000] <jgraham>
But not strictly in scope

[03:44:00.0000] <annevk>
david_carlisle, HTML5 can say what happens on HTML elements, not what happens on non-HTML elements

[03:45:00.0000] <annevk>
david_carlisle, that is how we have scoped it from the beginning anyway

[03:45:01.0000] <annevk>
david_carlisle, and the current proposal for generalizing innerHTML is outside HTML5

[03:46:00.0000] <annevk>
david_carlisle, it is this specification: http://html5.org/specs/dom-parsing.html

[03:47:00.0000] <david_carlisle>
jgraham: but basically the browser manufacturers told us they didn't want a mathml specific dom as it was work for not much gain (and it was hard to disagree) so we currently don't have anywhere to specify a mathml specific interface, we assumed that in a browser context it would just do the right thing using a generaic interface (ie one more like HTMLElement than Element)

[03:47:01.0000] <david_carlisle>
annevk: it is the html5 spec that has said what to do with math, if it haddnt said that it would be unknown html element and these methods would be available

[03:47:02.0000] <david_carlisle>
as they are in FF3 or opera, or IE9

[03:49:00.0000] <jgraham>
david_carlisle: It seems like it should be rather easy to say that all elements in MathML implement HTMLElement rather than Element

[03:49:01.0000] <david_carlisle>
yes please!

[03:50:00.0000] <david_carlisle>
curently as far as dom scripting support goes mathml elemnts get less functionality than <wibble-foo-bar> which can't be right

[03:52:00.0000] <jgraham>
david_carlisle: Well, strictly speaking it is for the Math WG to say, not HTML. But I suggest sending an email to public-html

[03:54:00.0000] <david_carlisle>
jgraham; As I say we have essentially retired the mathml dom spec (chapter 8 of mathml2 has no equiv in mathml3) but if necessary we would see if we could get ourself chartered to make a new rec trac document that said the one line  MathMLElement inherits from HTMLElement in a DOM that supports HTMLElement

[03:55:00.0000] <annevk>
david_carlisle, HTML5 cannot say what interface elements in a non-HTML namespace implement

[03:56:00.0000] <jgraham>
annevk: Presumably HTML can say anything that we can get along the Rec. track

[03:57:00.0000] <annevk>
jgraham, I guess, but I would not agree to this approach

[03:58:00.0000] <jgraham>
What, saying that MathMLElement inherits HTMLElement?

[03:58:01.0000] <jgraham>
Or saying that without rechartering the MathML WG?

[03:58:02.0000] <jgraham>
That is, is your issue technical or procedural?

[03:58:03.0000] <annevk>
either

[03:58:04.0000] <annevk>
I think innerHTML should move to Element

[04:00:00.0000] <jgraham>
annevk: It seems like there is a lot of other stuff on HTMLElement that I would want on all elements in a text/html document

[04:01:00.0000] <david_carlisle>
jgraham: yes innerHTML is just one aspect that happened to bite first.

[04:01:01.0000] <annevk>
and not in a text/xml document?

[04:01:02.0000] <annevk>
and not for SVG elements?

[04:01:03.0000] <jgraham>
I don't care about XML documents

[04:01:04.0000] <jgraham>
Also for SVG, yes

[04:02:00.0000] <jgraham>
But that is more complex as SVG has a non-trivial DOM of its own

[04:02:01.0000] <annevk>
well, DOM consistency is important

[04:02:02.0000] <david_carlisle>
annevk: In doms that support HTMLElement, in a pure XML world thinsg are different but mathml in html should behave like an html element and mathml in xhtml should behave like an xhtml one

[04:03:00.0000] <annevk>
I'm not sure what you mean with a pure XML world. From a browser's perspective there's hardly any difference.

[04:03:01.0000] <annevk>
And there's also hardly any difference between HTML and XHTML.

[04:03:02.0000] <david_carlisle>
annevk:  I mean if you are not in a browser

[04:04:00.0000] <annevk>
Even then the same considerations would apply I hope...

[04:05:00.0000] <david_carlisle>
annevk: sorry you lost me.  i just want someone to say that if a DOM implements HTMLElement then MathML elements should inherit from that, and if the DOM doesn't implement  HTMLElement then they inherit from Element

[04:06:00.0000] <jgraham>
That sounds… odd

[04:06:01.0000] <annevk>
yeah...

[04:06:02.0000] <jgraham>
(I think you just want to inherit from HTMLElement, always)

[04:07:00.0000] <slartsa>
aaaagh the firefly song is going through my head again!

[04:07:01.0000] <FireFly>
._.

[04:07:02.0000] <jgraham>
/me repeats himself

[04:07:03.0000] <Philip`>
Just make Element inherit from HTMLElement 

[04:07:04.0000] <jgraham>
(I think you just want to inherit from HTMLElement, always)

[04:08:00.0000] <david_carlisle>
jgraham:  it's consistent with the way xhtml works in practice. If you use a browser DOM it has HTML specific support, but if you just treat it as generic XML in an XML DOM then it's Element, isn't it?

[04:13:00.0000] <david_carlisle>
jgraham:  "I think you just want to inherit from HTMLElement, always", I want that if HTMLElement is defined, but I don't want to say you can't use MathML without implementing HTML, The exact best way to say that in terms of dom inheritance I'd be happy to leave to someone who knows what they are talking about,

[04:15:00.0000] <hsivonen>
jgraham: I believe the sane invariants should be that a node implements HTMLElement if and only if its namespace is the HTML namespace (and analogously for SVG)

[04:16:00.0000] <hsivonen>
there's something weird in Gecko that makes this not always hold for SVG

[04:16:01.0000] <hsivonen>
might be some SVG spec badness that got implemented carefully

[04:16:02.0000] <annevk>
SVG said only known SVG elements implement SVGElement

[04:17:00.0000] <david_carlisle>
hsvionen: Is there a way (in IDL) to say MathMLElement is same as HTMLElement without saying it inherits from it, or are yiu saying we need to textually copy th espec of HTMLElement and then do s/HTML/MathML/g

[04:18:00.0000] <david_carlisle>
hsivonen: because if we really have to do the latter we'd do it 

[04:19:00.0000] <hsivonen>
david_carlisle: I don't know, but I expect that IDL does not have such a feature

[04:19:01.0000] <hsivonen>
annevk: can we change the SVG spec say that all elements in the SVG namespace implement SVGElement?

[04:20:00.0000] <david_carlisle>
hsivonen: and is inheriting from HTMLElement really bad?

[04:21:00.0000] <annevk>
hsivonen, yeah, I think that is the plan anyway

[04:21:01.0000] <annevk>
david_carlisle, it makes no sense?

[04:22:00.0000] <david_carlisle>
annevk: what makes no sense?

[04:22:01.0000] <annevk>
to have Math elements inherit from HTML elements

[04:23:00.0000] <david_carlisle>
annevk: why in 50 years time should anyone care that in an html/svg/mathml document that different elements got defined in different bits of the w3c?

[04:24:00.0000] <hsivonen>
david_carlisle: in Gecko, it's nice to know that if a node is in one of the main namespaces, it can be unconditionally cast into certain interfaces/classes

[04:24:01.0000] <david_carlisle>
annevk: a math fragment is just a natural part of the sentence structure, all interaction and scripting should just work naturally across the tree

[04:25:00.0000] <hsivonen>
david_carlisle: I'm not sure of the implications of MathML elements inheriting from HTMLElement

[04:25:01.0000] <david_carlisle>
hsivonen: yes exactly i want th einterfaces that you'd give to unknown html elemnts, not just get dropped on the floor with no support

[04:26:00.0000] <hsivonen>
david_carlisle: Boris Zbarsky is likely to have a better idea of the consequences of such a change

[04:27:00.0000] <david_carlisle>
maybe the discussion should be in bugzilla rather than here, but it's been fun chatting, got some xslt to attend to in the day job, better go (or at least stop watching)

[04:31:00.0000] <annevk>
david_carlisle, that is a good question -- I do not think that necessarily leads to what you think is the obvious answer though

[04:53:00.0000] <kling>
reni: ping

[04:53:01.0000] <reni>
kling: and here

[05:39:00.0000] <openstandards>
Hi there, has anyone suggest a widget for developers to use that just selects a folder instead of a file

[05:44:00.0000] <karlcow>
Why You Guys Taking So Much Time for HTML5.... -- http://www.w3.org/Bugs/Public/show_bug.cgi?id=11405

[05:44:01.0000] <karlcow>
that was useful…

[05:45:00.0000] <openstandards>
:(

[05:45:01.0000] <karlcow>
I'm tempted to reply to the guy "because you haven't pedal fast enough"

[05:46:00.0000] <karlcow>
openstandards: what is the question?

[05:46:01.0000] <openstandards>
you should do, thats annoying... people will moan if theres problems with the spec if things aren't done properly 

[05:47:00.0000] <karlcow>
I do not parse the " a widget for developers to use that just selects a folder instead of a file"

[05:47:01.0000] <openstandards>
karlcow, has anything been purposed for selecting a download folder I know theres input=file but then the user will have to select a file for the widget to close

[05:47:02.0000] <karlcow>
for FileAPI you mean?

[05:48:00.0000] <annevk>
there's no such thing

[05:48:01.0000] <openstandards>
damn thats annoying :(

[05:48:02.0000] <annevk>
<input type=file multiple> is what is closest

[05:49:00.0000] <openstandards>
has this issue been mentioned before?

[05:50:00.0000] <Rik`>
webkit has an implementation of a dir selection, can't remember the attribute

[05:51:00.0000] <annevk>
openstandards, yes

[05:52:00.0000] <annevk>
openstandards, some consider it a UI issue

[05:54:00.0000] <hsivonen>
Hixie: I started implementing the approach that puts the insertion mode onto the stack

[05:54:01.0000] <openstandards>
I do thats partly why i asked i looked into the input types but didn't see anything, I saw someone mentioned input="directory" for uploads but wasn't sure if this talks has been carried on

[05:54:02.0000] <hsivonen>
Hixie: then I figured it was too much trouble and reverted

[05:55:00.0000] <hsivonen>
Hixie: however, I implemented the idea of getting rid of the "in foreign content" insertion mode and instead checking the namespace of the current element

[05:55:01.0000] <hsivonen>
Hixie: I'm pleased with the result

[06:22:00.0000] <hsivonen>
jgraham: I don't understand why some of your frameset-ok tests are in plain-text-unsafe.dat

[06:25:00.0000] <jgraham>
I think some of them might have been me noticing the open buffer had <frameset> tests, but not noticing that it was plaintext-unsafe

[06:25:01.0000] <hsivonen>
jgraham: I see

[06:26:00.0000] <hsivonen>
jgraham: btw, you had also removed LF from the end of file in both plain-text-unsafe files

[06:26:01.0000] <hsivonen>
I put them back in a hex editor and will push to hg

[06:26:02.0000] <jgraham>
Thanks

[06:27:00.0000] <hsivonen>
I guess html5lib's test harness is less picky about LF at end of file

[06:28:00.0000] <hsivonen>
I wonder if U+FFFD for U+0000 is a safe substitution in text/plain

[06:29:00.0000] <hsivonen>
for reasons I fail to recall, I've made Gecko throw away U+0000 in <plaintext> 

[06:29:01.0000] <hsivonen>
and now the test cases want U+FFFD there

[06:30:00.0000] <jgraham>
The spec specifically requires that and it also required a change in html5lib

[06:30:01.0000] <jgraham>
Kinsd of silly really

[06:31:00.0000] <hsivonen>
Chrome 9 sniffs http://hsivonen.iki.fi/test/moz/null-crlf.txt as a file that gets downloaded instead of viewed as plain text

[06:35:00.0000] <jgraham>
hsivonen: The html5lib harness gets upset if there are >1 newlines at the end of a file

[06:36:00.0000] <jgraham>
But it is fine with 0 or 1

[06:37:00.0000] <hsivonen>
jgraham: my harness wants 1 newline at the end of file

[06:37:01.0000] <jgraham>
hsivonen: I will try to make sure that happens

[06:38:00.0000] <hsivonen>
jgraham: thanks

[06:39:00.0000] <hsivonen>
Firefox 3.6 and Opera don't throw away U+0000 in text/plain, so I guess I'm OK with what the new spec text / test cases

[06:42:00.0000] <hsivonen>
so why doesn't the 'plaintext' start tag token put the tree builder into the 'text' insertion mode?

[06:47:00.0000] <jgraham>
What difference would it make?

[06:47:01.0000] <hsivonen>
dunno

[06:48:00.0000] <hsivonen>
no difference that the test suite could catch provided that original mode  is set also

[06:49:00.0000] <jgraham>
Why would it matter if the original mode is set? You could only end up in the "a character token" branch

[06:49:01.0000] <jgraham>
Oh, wait I think it would make a difference

[06:50:00.0000] <jgraham>
It wouldn't e.g. reconstruct active formatting elements

[06:50:01.0000] <hsivonen>
in what situation?

[06:51:00.0000] <jgraham>
<p><a><b><plaintext>c

[06:52:00.0000] <hsivonen>
jgraham: that's an evil test that needs to be in the test suite!

[06:52:01.0000] <hsivonen>
do we really want to reconstruct the active formatting elements in that case?

[06:53:00.0000] <jgraham>
hsivonen: Yeah. Although in all honestly zcorpan gets the credit for it

[06:53:01.0000] <jgraham>
I have no opinion what we do here because I think eorrying about interoperability of <plaintext> is rather silly

[06:54:00.0000] <jgraham>
Well interoperability is nice

[06:54:01.0000] <jgraham>
but worrying about the exact behaviour is quite silly

[06:54:02.0000] <hsivonen>
well, if it ends up in the test suite, everyone needs to worry about it

[06:55:00.0000] <jgraham>
Right. I think we should be interoperable. I am entirely unconcerned with what behaviour we interoperate on

[06:55:01.0000] <jgraham>
s/on/with/

[06:55:02.0000] <jgraham>
e.g. I don't care if we reconstruct or not

[06:56:00.0000] <hsivonen>
the old WebKit behavior differs from the spec, FWIW

[06:56:01.0000] <jgraham>
Seeming that Chrome and Firefox 4 already reconstruct it implies that changing now would be a bad idea

[06:58:00.0000] <hsivonen>
jgraham: well, not necessarily, since it looks like I'm going to change code around this area in the next few minutes anyhow

[06:59:00.0000] <jgraham>
hsivonen: So I should land that test now? :p

[06:59:01.0000] <hsivonen>
jgraham: I haven't yet decided what I want

[06:59:02.0000] <hsivonen>
I'm a bit annoyed at having to think about this

[06:59:03.0000] <hsivonen>
IE9 agrees with old WebKit, FWIW

[07:01:00.0000] <jgraham>
I think that it is a silly change but an entirely harmless one. I wonder if we could just have dropped <plaintext>

[07:02:00.0000] <hsivonen>
jgraham: I guess it's OK to land the test in any case

[07:03:00.0000] <hsivonen>
even if the test expectation ends up changing later

[07:03:01.0000] <hsivonen>
maybe I should just implement what the spec says to avoid the spec change process

[07:03:02.0000] <hsivonen>
though I think it would make more sense to use the 'text' mode inside <plaintext> and to make <plaintext> not close p implicitly

[07:03:03.0000] <Philip`>
jgraham: It's only been deprecated for 17 years, you can't drop it yet

[07:04:00.0000] <hsivonen>
Philip`: s/deprecated/obsolete/

[07:04:01.0000] <Philip`>
jgraham: and it fulfils important use cases, like emulating HTML5 parsing behaviour in old browsers

[07:05:00.0000] <hsivonen>
ha! <plaintext> doesn't close <p> in any legacy browser. It's a new Hixie-ism.

[07:06:00.0000] <hsivonen>
spec bug filing time

[07:07:00.0000] <annevk>
does in Safari?

[07:08:00.0000] <hsivonen>
annevk: nope

[07:08:01.0000] <annevk>
oh, Safari 5.0.3 has an updated parser then?

[07:10:00.0000] <hsivonen>
hmm.

[07:10:01.0000] <hsivonen>
/me rechecks

[07:11:00.0000] <hsivonen>
annevk: oh, you are right

[07:12:00.0000] <jgraham>
/me has pushed the test for the current spec

[07:13:00.0000] <jgraham>
/me wonders if Hixie is away

[07:17:00.0000] <hsivonen>
oh well, I guess I'll just implement the spec

[07:21:00.0000] <hsivonen>
this resulted in one more special-case method :-(

[07:23:00.0000] <hsivonen>
I think it's somehow distasteful that <plaintext> can get element children inserted by the parser 

[07:25:00.0000] <zcorpan>
should we special-case <plaintext> so that it doesn't reconstruct?

[07:27:00.0000] <zcorpan>
<p><b><xmp>x\0

[07:27:01.0000] <zcorpan>
is that also an issue?

[07:28:00.0000] <hsivonen>
zcorpan: we could make <plaintext> not implicitly close <p> and then use the 'text' insertion mode

[07:28:01.0000] <hsivonen>
that would match IE8, Opera and Firefox 3.6

[07:28:02.0000] <hsivonen>
clearly, IE9 has very carefully cloned old WebKit here

[07:28:03.0000] <hsivonen>
I wonder what possessed them to clone old WebKit instead of implementing the spec

[07:33:00.0000] <jgraham>
Maybe they think that you can be sure to get web compatibility from cloning web-compatible implementations and that people who write specs are by-and-large idealistic hippies who can't be relied on to do the right thing

[07:36:00.0000] <hsivonen>
zcorpan: looks like xmp in the spec behaves like plaintext in Safari...

[07:36:01.0000] <hsivonen>
consistency? what consistency?

[07:40:00.0000] <zcorpan>
jgraham: not entirely unreasonable :)

[08:32:00.0000] <webr3>
what HTMLElement can I use to embed content of a different type in the document.. something like

[08:32:01.0000] <webr3>
<embed type="text/something"> content-inline-here </embed>

[08:36:00.0000] <Philip`>
webr3: <script>

[08:37:00.0000] <Philip`>
webr3: See e.g. the <script type="text/x-game-map"> in http://www.whatwg.org/specs/web-apps/current-work/multipage/scripting-1.html

[08:39:00.0000] <webr3>
yeah that's what I am using, but I want the script to be human viewable too, on the page

[08:41:00.0000] <Philip`>
If it should be visible as plain text, maybe just use <pre>?

[08:47:00.0000] <webr3>
aye, basically can see a use case where it's both, for instance with examples

[08:47:01.0000] <webr3>
<script type="text/custom" showaspre="true"> for example </script>

[08:48:00.0000] <webr3>
like script+pre merged

[08:50:00.0000] <Philip`>
<script style="display:block; white-space:pre"> should do that

[08:50:01.0000] <Philip`>
though it's probably not great semantically

[08:51:00.0000] <Philip`>
A simple <pre> seems more appropriate when you want to display text, and you can have scripts that extract the textContent and process it if you want

[08:51:01.0000] <webr3>
yes that's it! awesome

[08:53:00.0000] <webr3>
you can wrap a script in pre!

[08:53:01.0000] <webr3>
<pre><script ... etc - awesome

[08:58:00.0000] <annevk>
o_O

[09:06:00.0000] <webr3>
http://webr3.org/apps/play/embeds/javascript

[09:06:01.0000] <webr3>
and now i can embed RDF and make it human viewable too, nice http://webr3.org/apps/play/embeds/turtle

[09:06:02.0000] <webr3>
Philip`, ty :)

[09:09:00.0000] <Philip`>
Putting it in <script> will probably stop search engines from indexing it, which may not be what you want

[09:10:00.0000] <webr3>
indeed, but I'm fine w/ that and linked data crawlers can start to use it - have always got RDFa as well which is deployed and stable, this is for a different use case

[09:11:00.0000] <jgraham>
<plaintext>!

[09:11:01.0000] <Philip`>
<xmp>!

[09:13:00.0000] <webr3>
meh script does what i need, no stupid encoding, backwards comaptible expected functionality, and can make normal js libs to "do things" w/ the data - I'm quite happy as is

[09:14:00.0000] <webr3>
just drop in a css rule to toggle displaying it, why would i want or need or need any more?

[09:15:00.0000] <webr3>
and it's got the content @type and @charset encoding which I need too..

[09:20:00.0000] <annevk>
charset is illegal for inline data

[09:26:00.0000] <webr3>
charset isn't on script..?

[09:27:00.0000] <webr3>
or you can't displauy:block a <script>?

[10:42:00.0000] <annevk>
no tab?

[10:42:01.0000] <annevk>
fwiw, Opera devs agreed with Philip` and remarked that we support rgba() in SVG

[10:42:02.0000] <annevk>
re gradient thread

[10:43:00.0000] <Philip`>
Will someone post to that thread?

[10:44:00.0000] <annevk>
timj is busy with other things and the other relevant people are not on the WHATWG list

[10:44:01.0000] <annevk>
as I understand it

[10:44:02.0000] <annevk>
I thought of posting, but I wasn't sure whether it would be worth it just noting that

[10:47:00.0000] <Philip`>
Might be worthwhile since otherwise people may assume there's consensus among the browser developers

[10:53:00.0000] <annevk>
done

[10:59:00.0000] <Philip`>
Thanks

[11:30:00.0000] <webr3>
what's the easiest way to get at the original DOM, pre-javascript-manipulation?

[11:31:00.0000] <webr3>
for instance if one has an extension which reads microformats/rdfa out of the dom, and a js manipulates the dom first, then this could cause significant problems

[11:47:00.0000] <hober>
webr3: what sorts of problems?

[12:32:00.0000] <webr3>
hober, well malicous scripts can manipulate the dom to add new data and "say" things that are incorrect

[12:33:00.0000] <webr3>
like.. <a href="http://spammy-company.com" rel="tag"

[12:33:01.0000] <webr3>
and a parser running over the DOM will pull that info out and "believe" it, even though bad.js injected it in to the DOM

[12:39:00.0000] <Philip`>
The web security model is that scripts that run on a page are as trusted as the page itself (because the page chose to run them)

[12:40:00.0000] <Philip`>
so the raw HTML read over the wire before any JS execution is no more trustworthy than what you'll get after running its scripts

[12:42:00.0000] <Philip`>
Parsing and script execution are entangled anyway, because of document.write - neither can happen entirely before the other

[12:51:00.0000] <webr3>
good points Philip` - however to some degree I'd suggest that the HTML source document sent over the wire is "purer" and more trustworthy in some senses, because there's much less room for manipulation by scripts, trusted, untrusted or simply hijacked

[13:23:00.0000] <jgraham>
webr3: wget?

[13:23:01.0000] <jgraham>
I mean there isn't any way in a typical browser

[13:23:02.0000] <jgraham>
Although sometimes it is preserved for view-source

[13:50:00.0000] <karlcow>
webr3: another issue is that… servers send different content depending on the user agents or features.

[13:50:01.0000] <karlcow>
so for example when you play with let say, curl -A "here your favorite useragent string" URI  

[13:51:00.0000] <karlcow>
you get different results. 

[13:54:00.0000] <webr3>
I wonder if there should be a way to get doc/dom prior to any manipulation


2010-11-26
[17:03:00.0000] <bga_>
:)

[17:04:00.0000] <bga_>
night guys

[17:35:00.0000] <itissid>
I want to understand a trend here... Is it a given that most of google gears will/already has moved into HTML5  and google gears will become a legacy project... 

[18:00:00.0000] <MikeSmith>
itissid: Gears has already become a legacy project, quite a while back

[18:00:01.0000] <MikeSmith>
all the work is going instead into trying to put features into the core Web platform itself

[18:00:02.0000] <MikeSmith>
to get them implemented natively across multiple browsers

[18:01:00.0000] <itissid>
Is there a page showing the cross browser adoption of the features specific to gears that were moved to HTML5

[18:01:01.0000] <MikeSmith>
not that i know of

[18:01:02.0000] <MikeSmith>
most people working on this stuff tend to be pretty busy and pages like that don't get put together so often

[18:02:00.0000] <MikeSmith>
not updated once they have been put together

[18:02:01.0000] <MikeSmith>
do to lack of time to get them written up and maintained

[18:02:02.0000] <MikeSmith>
in part because things are just changing very quickly

[18:03:00.0000] <itissid>
hmm

[18:03:01.0000] <MikeSmith>
we are in the midsts of what is by far the most rapid pace of significant new features going into the Web platform that there has ever been in the entire history of the Web

[18:05:00.0000] <itissid>
Yeah I noticed... I had not worked in gears at all... Then i made an Chrome Extension which used things like local storage and  Webworkers and then read that this was all a gears idea initially...

[18:08:00.0000] <MikeSmith>
yup

[18:12:00.0000] <Aleoss>
Hello everyone.

[01:50:00.0000] <matjas>
http://twitter.com/WHATWG hasn’t been posting updates since Sept 1st — intentional?

[01:50:01.0000] <matjas>
Not switched to oAuth yet?

[01:51:00.0000] <zcorpan>
matjas: iirc nobody noticed when it broke so Hixie figured that it was pointless

[01:51:01.0000] <matjas>
zcorpan: Real shame, I loved that stream.

[01:52:00.0000] <jgraham>
matjas: You are exactly the second person to complain

[01:52:01.0000] <slartsa>
oh there was something in twitter

[01:53:00.0000] <matjas>
jgraham: Damn. I’d noticed it before, just never realized it was because of Twitter switching to oAuth.

[01:54:00.0000] <matjas>
How does everyone keep track of spec changes nowadays (besides this channel, that is)? There doesn’t seem to be a syndication feed either.

[01:55:00.0000] <hsivonen>
matjas: subscribing to bugmail and spec change mail

[01:55:01.0000] <hsivonen>
matjas: and keeping open an insane number of bug / spec tracker tabs for later inspection

[01:55:02.0000] <matjas>
hsivonen: I was afraid so :)

[01:55:03.0000] <jgraham>
matjas: http://html5.org/tools/web-apps-tracker

[01:56:00.0000] <jgraham>
You could probably convince annevk to add a feed

[01:56:01.0000] <matjas>
jgraham: I know; sadly refreshing that page every once in a while isn’t really handy. A feed would be nice.

[01:56:02.0000] <matjas>
Consider this my +1 on fixing the @WHATWG bot. It was perfect.

[01:57:00.0000] <hsivonen>
matjas: also, I expect someone to land tests for spec changes that I've missed myself

[01:57:01.0000] <hsivonen>
matjas: so I'll find out when the html5lib test suite no longer passes

[01:57:02.0000] <jgraham>
/me honestly uses hsivonen's appraoch a lot

[01:57:03.0000] <jgraham>
That is "if I miss something it will become obviosu over time"

[01:57:04.0000] <hsivonen>
jgraham: that's scary. I'm relying on you noticing stuff!

[01:57:05.0000] <jgraham>
hsivonen: Well I do notice stuff

[01:58:00.0000] <matjas>
Surely there must be a better way…

[01:58:01.0000] <jgraham>
But not everything

[01:58:02.0000] <jgraham>
You notice some stuff I miss, for example

[01:58:03.0000] <jgraham>
(but generally I keep more up to date with parser changes than other areas of the spec)

[01:59:00.0000] <matjas>
annevk, Hixie: Would you mind adding a syndication feed to http://html5.org/tools/web-apps-tracker AND/OR adding oAuth support to the @WHATWG Twitter bot? I really liked that guy.

[02:00:00.0000] <annevk>
matjas, can you fix the WHATWG bot?

[02:00:01.0000] <annevk>
matjas, I think all it takes is for someone to write the OAuth part

[02:00:02.0000] <matjas>
annevk: I would certainly like to give it a try. What’s it written in?

[02:02:00.0000] <annevk>
I would assume Perl, but I think any service would work for Hixie

[02:02:01.0000] <annevk>
he just needs a simple service that he can hand the message that puts it on twitter

[02:04:00.0000] <matjas>
In that case, adding a syndication feed and passing it through something like TwitterFeed sounds like the easiest solution.

[02:05:00.0000] <matjas>
But I’ll see if I can write a simple service where he can POST to. Would be much better.

[02:05:01.0000] <annevk>
I'm afraid for syndication feed load with html5.org

[02:05:02.0000] <annevk>
though I suppose I could use one of those services that only fetches it every 5 minutes and takes over the load

[02:06:00.0000] <annevk>
Google bought one of those right?

[02:09:00.0000] <jgraham>
Fetching every five minutes seems way to often. ANyway, I think you might be thinking of FeedBurner

[02:10:00.0000] <annevk>
I'll think it over; I'd prefer just fixing the twitter API

[02:10:01.0000] <hsivonen>
annevk: you could have a cron job dumping the data into a plain file instead of hitting svn for each GET

[02:11:00.0000] <annevk>
I could do lots of things to complicate my life, but do I want to?

[02:12:00.0000] <jgraham>
MikeSmith: Did you finish the GitHub pull of the spec?

[02:13:00.0000] <MikeSmith>
jgraham: no, it timed out without completing :(

[02:13:01.0000] <jgraham>
MikeSmith: Not that surprising; I did it locally and ended yo with a 5Gb repo

[02:13:02.0000] <MikeSmith>
good god

[02:13:03.0000] <jgraham>
After a few hours

[02:13:04.0000] <MikeSmith>
epic

[02:16:00.0000] <MikeSmith>
matjas: I wonder if CIA.vc or somewhere might have some way of generating a feed from svn

[02:16:01.0000] <MikeSmith>
/me looks

[02:16:02.0000] <MikeSmith>
or oloh

[02:17:00.0000] <MikeSmith>
ohloh

[02:17:01.0000] <annevk>
looking for http://www.youtube.com/watch?v=sdShzYpa6i8 ?

[02:19:00.0000] <MikeSmith>
that's sick

[02:20:00.0000] <jgraham>
MikeSmith: So if we put the Git repo on html5.org and synced it using cron, one could write out an atom file using a post-recieve hook. The only problem is that people cloning the repo would burn through bandwidth

[02:21:00.0000] <MikeSmith>
hmm

[02:21:01.0000] <jgraham>
But the feed would just be a static file and so play nicely with web arch

[02:22:00.0000] <MikeSmith>
I agree with annevk sentiment about complicating life

[02:22:01.0000] <jgraham>
:)

[02:22:02.0000] <MikeSmith>
CIA.vc does feeds

[02:22:03.0000] <MikeSmith>
feed://cia.vc/stats/project/Chromium/.rss

[02:23:00.0000] <MikeSmith>
feed://cia.vc/stats/project/V8/.rss

[02:23:01.0000] <MikeSmith>
etc.

[02:23:02.0000] <MikeSmith>
so I can will add the svn rep to CIA.vc now

[02:23:03.0000] <MikeSmith>
then we get IRC integration too

[02:24:00.0000] <MikeSmith>
to #html-wg or here or wherever

[02:24:01.0000] <MikeSmith>
well, not integration

[02:24:02.0000] <MikeSmith>
but notifications at least

[02:24:03.0000] <jgraham>
I think I would like notifications here, but maybe others would disagree

[02:26:00.0000] <MikeSmith>
project name: html5-spec ?

[02:26:01.0000] <MikeSmith>
html-spec ?

[02:26:02.0000] <jgraham>
html is better

[02:26:03.0000] <MikeSmith>
k

[02:26:04.0000] <jgraham>
webapps is perhaps more accurate

[02:26:05.0000] <jgraham>
well sort of

[02:27:00.0000] <Philip`>
/me would probably prefer not to get floods of automated notifications into here, lest this becomes like #html-wg

[02:28:00.0000] <jgraham>
Would it be floods? What's the median/max number of checkins per day?

[02:29:00.0000] <Philip`>
If it's only SVN checkins then it might not be bad

[02:29:01.0000] <jgraham>
Yeah, I wouldn't want bugspam here

[02:31:00.0000] <MikeSmith>
feed://cia.vc/stats/project/html-spec/.rss

[02:31:01.0000] <zcorpan>
i'd prefer if notifications were left for #html-wg and #whatwg is just discussion :)

[02:37:00.0000] <matjas>
My Perl skills are lame, but this looks useful AFAICT: http://ashbentiel.mine.nu/tweet.pl

[02:38:00.0000] <annevk>
now all we need is wake Hixie

[02:38:01.0000] <hsivonen>
I'm rather impressed that the Windows 7 Action Center manages to link crashes of 3rd-party software to relevant documentation on the site of the 3rd-party software provider

[02:39:00.0000] <hsivonen>
maybe Hixie is on a Thanksgiving vacation

[02:40:00.0000] <zcorpan>
http://www.xkcd.com/786/

[02:41:00.0000] <jgraham>
You think that Hixie will get left off the web rollercoaster if he takes vacation?

[02:43:00.0000] <zcorpan>
i'm just worried we'll have implemented all his specs while he's away...

[02:44:00.0000] <jgraham>
And built nuke-riding city ships just to alleviate the boredom?

[02:44:01.0000] <zcorpan>
yeah

[02:44:02.0000] <jgraham>
Good thing he's in America then. Vacation is basically against the law, so he'll be back soon

[02:45:00.0000] <jgraham>
Although imagine how much more ionteresting standards flame wars would be if the opposing factions had nuke-riding city ships under their command

[02:48:00.0000] <matjas>
“No img/@longdesc in HTML5? BOOM!”

[02:49:00.0000] <zcorpan>
well then you leave us no choice but to blow up the earth

[02:50:00.0000] <jgraham>
/me now has some sort of standards/Girl Genius mashup going on in his head Adventure! Romance! Mad Standards!

[02:55:00.0000] <jgraham>
Does anyone remember that page with a huge number of nested <strong> elements?

[03:06:00.0000] <matjas>
On http://html5.org/tools/web-apps-tracker, isn’t this wrong? function readCookie(name) { return localStorage["tracker-" + ""] }

[03:07:00.0000] <matjas>
Why would you want to + "" if not for implicit toString coercion?

[03:07:01.0000] <matjas>
Should probably be something like function readCookie(name) { return localStorage["tracker-" + name] }, right?

[03:08:00.0000] <zcorpan>
yeah

[03:09:00.0000] <zcorpan>
feel free to fix, it's in http://code.google.com/p/html5/source/checkout

[03:10:00.0000] <matjas>
Cool, I did not know that!

[03:44:00.0000] <MikeSmith>
I assume from hsivonen 's latest tweet that he must be working on a sanitzer

[03:48:00.0000] <MikeSmith>
ah sweet, I got another patch landed in V8 source

[03:48:01.0000] <MikeSmith>
http://code.google.com/p/v8/source/detail?r=5893

[03:51:00.0000] <hsivonen>
MikeSmith: just planning at this point

[03:52:00.0000] <MikeSmith>
ok

[03:52:01.0000] <hsivonen>
MikeSmith: since the sanitizer isn't targeted to Firefox 4, all Firefox 4 blockers get service first

[03:52:02.0000] <MikeSmith>
yeah, I can imagine

[03:53:00.0000] <jgraham>
hsivonen: Have you looked at what the html5lib sanitizer does? It has some (crazy, regexp based) CSS filtering

[03:53:01.0000] <hsivonen>
jgraham: I haven't

[03:53:02.0000] <hsivonen>
I was planning on providing an interface for pluggable CSS sanitizers

[03:53:03.0000] <jgraham>
Which you need in order to remove scripts

[03:53:04.0000] <hsivonen>
so that the Gecko version could use the existing Gecko CSS sanitizer and the Java version could use something else

[03:54:00.0000] <jgraham>
At least if you target browsers that can run scripts from CSS

[03:54:01.0000] <hsivonen>
yeah, using a CSS sanitizer is part of the requirements

[03:55:00.0000] <hsivonen>
at some point, I think I will need to learn which SVG attributes are defined in terms of CSS in such a way that they can carry dangerous payloads

[04:00:00.0000] <hsivonen>
jgraham: whoa. html5lib is much more liberal with allowed protocols than I had expected

[04:01:00.0000] <hsivonen>
otoh, there are fewer acceptable CSS properties than I expected

[04:01:01.0000] <hsivonen>
also, Semantics MathML isn't allowed

[04:01:02.0000] <jgraham>
hsivonen: (I have not been much involved with this part of the library)

[04:02:00.0000] <jgraham>
In particular the list of allowed stuff mainly came from Sam and Jacques

[04:02:01.0000] <hsivonen>
hmm. so it sanitizer between the tokenizer and the tree builder

[04:02:02.0000] <hsivonen>
instead of sanitizing after the tree builder when it's known if something is an HTML, SVG or MathML element

[04:02:03.0000] <jgraham>
I think it predates foreignContent

[04:03:00.0000] <jgraham>
|Foreign Content"

[04:03:01.0000] <jgraham>
s/|/"/

[04:06:00.0000] <jgraham>
(that is, althought there is support for SVG elements, that was based on Sam's experimental liberal XHTML parser. Although presumably that assigned namespaceness in treebuilder too)

[04:09:00.0000] <hsivonen>
for blog comments and such, it might be useful to have a feature for normalizing all the "semantic" aliases of <i> to <i> for simpler styling

[04:17:00.0000] <hsivonen>
hmm. does http://www.whatwg.org/specs/web-apps/current-work/multipage/parsing.html#determining-the-character-encoding ever care about /mode/ being "charset"?

[04:18:00.0000] <hsivonen>
it seems to me it only cares about it being "pragma" vs not

[04:20:00.0000] <hsivonen>
oh. it does care

[04:21:00.0000] <hsivonen>
so <meta charset="UTF-8" content="text/html; charset=UTF-8"> doesn't sniff to UTF-8

[04:21:01.0000] <hsivonen>
but <meta content="text/html; charset=UTF-8" charset="UTF-8"> does

[04:21:02.0000] <hsivonen>
looks like spec bug to me...

[04:22:00.0000] <hsivonen>
I hate it when I find spec bugs when I just want to implement and be done

[04:29:00.0000] <zcorpan>
hsivonen: how does it not sniff to utf-8? "If the attribute's name is "charset": If charset is still set to null, let charset be the encoding corresponding to the attribute's value, and set mode to "charset"."

[04:32:00.0000] <hsivonen>
zcorpan: the content attribute sets mode again, this time to pragma

[04:32:01.0000] <hsivonen>
zcorpan: when content="" comes after charset=""

[04:33:00.0000] <zcorpan>
hsivonen: oh, i missed step 9

[04:34:00.0000] <zcorpan>
hsivonen: yeah, spec bug

[04:34:01.0000] <jgraham>
/me wonders is document.written meta charset has an effect

[04:34:02.0000] <jgraham>
*if

[04:35:00.0000] <hsivonen>
jgraham: In Gecko, it doesn't

[04:35:01.0000] <hsivonen>
jgraham: but Hixie WONTFIXed the spec bug: http://www.w3.org/Bugs/Public/show_bug.cgi?id=10803

[04:35:02.0000] <hsivonen>
I didn't change Gecko according to WONTFIXing

[04:35:03.0000] <jgraham>
Ah. I had a feeling it was something like that

[04:35:04.0000] <jgraham>
Any idea what webkit or IE do?

[04:36:00.0000] <hsivonen>
jgraham: testing other browsers and reopening certain bugs is on my todo list

[04:42:00.0000] <hsivonen>
whoa. the "in head" handling of the charset attribute seems bogus as far as the UTF-16 part goes

[04:42:01.0000] <hsivonen>
sigh.

[04:43:00.0000] <hsivonen>
the difference between the spec and Gecko is larger than I thought

[04:44:00.0000] <hsivonen>
oh. UTF-16 gets handled later

[05:14:00.0000] <annevk>
damnit http://www.ragingplatypus.com/ is offline

[05:14:01.0000] <annevk>
fix it

[06:01:00.0000] <hsivonen>
aargh. what's wrong with validator.nu *now*?

[06:06:00.0000] <hsivonen>
looks like a network problem

[06:27:00.0000] <matjas>
hsivonen: Fixed already? Works fine here/now

[06:27:01.0000] <hsivonen>
matjas: does validator.nu work or only html5.validator.nu?

[06:28:00.0000] <hsivonen>
matjas: the latter is unaffected iff you happen to have CSS and JS cached already

[06:28:01.0000] <matjas>
hsivonen: both worked just a minute ago, but now only html5.validator.nu seems to work

[06:29:00.0000] <matjas>
hsivonen: does validator.nu have a cache manifest?

[06:29:01.0000] <hsivonen>
matjas: no

[06:30:00.0000] <matjas>
must've been some weird browser caching then

[06:31:00.0000] <hsivonen>
I guess I should make html5.validator.nu load CSS and JS from itself instead of loading them from the server that runs about.validator.nu and validator.nu

[06:36:00.0000] <hsivonen>
hmm. maybe bugzilla.validator.nu has a bad robots.txt after reinstall and a crawler is indexing it

[06:51:00.0000] <fortes>
What's the best way to express a boolean property using html5 microdata?

[06:52:00.0000] <annevk>
there's no design patterns afaik

[06:52:01.0000] <annevk>
HTML5 itself uses presence/absence of attributes for booleans

[06:52:02.0000] <fortes>
annevk: So perhaps I should mint a data- attribute to indicate my boolean property?

[06:53:00.0000] <fortes>
Something like <div itemscope data-foo> ?

[06:53:01.0000] <Lachy>
fortes, depends what you're trying to use it for

[06:53:02.0000] <annevk>
data- != microdata

[06:54:00.0000] <fortes>
I'm using metadata to construct a table of contents

[06:54:01.0000] <fortes>
Where each item is an article

[06:54:02.0000] <Lachy>
microdata is useful when you want to share data with 3rd parties via a shared vocabulary. data-* is useful if you just want extra metadata for your own scripts to use internally on the page.

[06:54:03.0000] <fortes>
And I need the ability to set a boolean flag or two on the articles

[06:55:00.0000] <fortes>
Microdata also seems to be useful when the content is the data as well, no?

[06:55:01.0000] <fortes>
Like an article's title

[06:57:00.0000] <Lachy>
yes, it can be, depending on what use cases and problems your trying to solve.

[06:57:01.0000] <fortes>
From what I've played around with it seemed that <h2 itemprop="title">Article Title</h2> was a better choice than <div data-title="..."><h2>....

[06:57:02.0000] <Lachy>
you could just use class="title"

[06:58:00.0000] <fortes>
True, although I was concerned with name conflicts

[06:58:01.0000] <fortes>
goal is also to eventually be able to use native document.getItems

[06:59:00.0000] <Lachy>
that's not a goal, that's a specific solution for achieving some other goal.

[07:01:00.0000] <Lachy>
you could just as easily use document.querySelectorAll("[data-title]"); or .querySelectorAll(".title");

[07:02:00.0000] <fortes>
slightly more complicated since there is a bit of structure. each article has a title, author, etc

[07:02:01.0000] <fortes>
but yes, since doc.getItems doesn't exist, I've been implementing it manually

[07:03:00.0000] <Lachy>
ok, so then you have a requriement for obtaining easily scriptable and structured data from your page?

[07:05:00.0000] <fortes>
yes. balancing performance with ease of authoring

[07:07:00.0000] <Philip`>
/me sees PNaCl, and wonders what the "native" in its name means

[07:08:00.0000] <Philip`>
since it's no longer got native machine code (except to the extent that e.g. JavaScript does, via JITs), and you can't use native APIs or anything like that

[07:09:00.0000] <Philip`>
Seems the main thing it adds that's fundamentally impossible with JS is shared-memory concurrency, which everyone nowadays hates

[07:12:00.0000] <matjas>
Weird, document.images is 70% slower than getElementsByTagName('img') in Chrome. In every other browser the images collection is faster.

[07:12:01.0000] <webr3>
/me mentions something about RDFa Core 1.1 and that kind of data..

[07:13:00.0000] <matjas>
Well, /s/Chrome/WebKit/

[07:15:00.0000] <gsnedders>
So, hmm… fun doing analyis of Sputnik failures. The two engines that have actually tried to impl ES5 have 74 and 75 failures, but only 50 of those are shared between the two

[07:15:01.0000] <gsnedders>
Of those 50 failure, there are seven of those that both SpiderMonkey and V8 pass.

[12:50:00.0000] <AryehGregor>
Interesting: http://blog.benstrong.com/2010/11/google-and-microsoft-cheat-on-slow.html

[12:50:01.0000] <AryehGregor>
Probably a good idea.

[12:50:02.0000] <AryehGregor>
(Cheating on slow start, I mean.)

[15:43:00.0000] <JonathanNeal>
And hello.

[15:43:01.0000] <_bga>
hi


2010-11-27
[07:28:00.0000] <ru_funnynick>
hey, how apply border-radius on inner side?

[07:28:01.0000] <nimbupani>
you cant ru_funnynick

[07:30:00.0000] <ru_funnynick>
ok, here http://madebyelephant.com how add border-radius effect on inner side of border ?

[07:31:00.0000] <nimbupani>
but its not on the "inner side" ru_funnynick

[07:32:00.0000] <nimbupani>
are you talking about the border radius on the card which has box-shadow?

[07:38:00.0000] <annevk>
still kind of a pain that sshfs not works nicely on Mac

[07:39:00.0000] <annevk>
I guess on the positive side I learned to use nano and scp, but they're not that great

[07:47:00.0000] <annevk>
what is the use of rel="author"?

[07:50:00.0000] <annevk>
I also have rel=prev, rel=first and such on individual posts

[07:51:00.0000] <annevk>
I never use them

[07:54:00.0000] <matjas>
annevk: me neither, but doesn't opera have a setting where it adds clickable rel-based buttons to the browser chrome?

[07:55:00.0000] <matjas>
that's the only ‘useful’ implementation i've seen tbh

[07:55:01.0000] <gsnedders>
matjas: With a non-default toolbar enabled, and the impl is buggy

[07:55:02.0000] <gsnedders>
(it doesn't split on spaces)

[07:56:00.0000] <annevk>
matjas, Opera does and I have long thought we should kill it

[07:56:01.0000] <annevk>
well, improving it was something I thought initially, but then I learned, or something

[07:56:02.0000] <matjas>
annevk: /s/kill/fix/ ;)

[07:56:03.0000] <annevk>
beat you ;p

[07:57:00.0000] <matjas>
I blame the time zone difference

[07:57:01.0000] <annevk>
omg, I actually have attachEvent on my site

[07:57:02.0000] <annevk>
*did not realize*

[07:57:03.0000] <gsnedders>
annevk: EPIC FAIL

[07:57:04.0000] <annevk>
/me removes

[07:58:00.0000] <matjas>
/me refreshes http://annevankesteren.nl/js/global like a madman

[08:11:00.0000] <annevk>
maybe I should try to inline the first and last links somehow

[08:16:00.0000] <annevk>
although really they're not that useful

[08:16:01.0000] <annevk>
if you really want the first post you can find it easily via the archives

[08:16:02.0000] <annevk>
and the last one is on the homepage...

[08:38:00.0000] <thiessenp>
canvas question:  is using translate more browser efficient that using the clear/draw rect functions of say a small moving square?

[08:39:00.0000] <Philip`>
thiessenp: Don't quite understand the question - if you use translate then you still have to clear/draw the rect yourself, it doesn't change any of the image data that's previously been drawn

[08:40:00.0000] <thiessenp>
Philip': hmm so translate doesn't "animate" an object - what is its purpose? (canvas newb here)

[08:43:00.0000] <Philip`>
thiessenp: Instead of doing e.g. "fillRect(x+10, y+10, 20, 20)" you can do "translate(x, y); fillRect(10, 10, 20, 20)"

[08:43:01.0000] <Philip`>
which is more useful if you're drawing a complicated shape instead of a single rectangle

[08:44:00.0000] <Philip`>
Also you can then do e.g. "rotate(a); translate(x, y); fillRect(10, 10, 20, 20)" to draw a rotated shape at the given position

[08:45:00.0000] <thiessenp>
Philip': oh ok but hmmm no function to move an object? Though maybe the idea of moving an object is anti-canvas with its one state. I've never done pixel pushing before - it seams odd. But I gather over time you create a bunch of your own utility functions to do things like move stuff around?

[08:45:01.0000] <Philip`>
It's not technically necessary, since you could do the maths to compute the position of every point yourself, but it's a convenient way to move/rotate/scale objects before you draw them

[08:46:00.0000] <thiessenp>
I just started playing around with have many canvasas - 1 for each moving thingy

[08:46:01.0000] <thiessenp>
It seams a pain to have to create a sort of virtual/logical DOM of all canvas objects

[08:46:02.0000] <thiessenp>
but then again I'm sure this makes sense just not to a newb

[08:47:00.0000] <Philip`>
It's rarely useful to copy regions of the image you've already drawn to - usually you clear the whole canvas and then draw the whole thing again, for the next frame in the animation

[08:47:01.0000] <Philip`>
and usually a single canvas is sufficient (and much simpler) :-)

[08:48:00.0000] <thiessenp>
Here's what I'm trying to do:  create a JS/Canvas based space invaders game - really just to learn canvas.

[08:48:01.0000] <thiessenp>
So I've chopped the canvas up into about 4 peaces: score bar, invaders, player, and background

[08:48:02.0000] <thiessenp>
the idea/assumption was that redrawing a smaller canvas would be more efficient than a big one

[08:49:00.0000] <thiessenp>
(assumption = newb assumption)

[08:51:00.0000] <Philip`>
Have you tried a single big canvas and measured it and found it to be too slow? Canvas performance often seems counter-intuitive so it's probably best to stick with the simplest approach until you find it really doesn't work

[08:54:00.0000] <thiessenp>
Philip': I haven't noticed a difference in performance writing to a small vs. larger canvas. Also, I agree that having N canvasas definitely adds complexity. One canvas it is from now on :D (thanks for the help +1 Philip')

[08:54:01.0000] <annevk>
I wonder if I should ditch my <ul> in favor of a <nav> with just three links in it

[08:55:00.0000] <annevk>
hmm, in theory the <h1> would need to be in it too maybe

[08:55:01.0000] <annevk>
but then the <h1> is no longer the heading of the page

[08:56:00.0000] <annevk>
semantics

[08:56:01.0000] <annevk>
bah

[09:05:00.0000] <annevk>
sometimes I wish cmd+q would fail

[09:06:00.0000] <annevk>
I have added rel=top and rel=author to the nav section

[09:07:00.0000] <annevk>
not sure if that was worth it

[09:07:01.0000] <thiessenp>
:)

[09:10:00.0000] <matjas>
annevk: for great semantic justice, you should add <link rel="up up" href="/2010/" title="Archives 2010"> to individual blog posts

[09:10:01.0000] <matjas>
/me runs

[09:11:00.0000] <annevk>
yeah, I've been thinking about doing that

[09:11:01.0000] <annevk>
it's either that or we should remove this concept from HTML ;p

[09:12:00.0000] <annevk>
not eating dogfood is uncool

[09:12:01.0000] <annevk>
/me gets hungry

[09:13:00.0000] <matjas>
annevk: QMS has this kind of stuff built-in, you know…

[09:14:00.0000] <annevk>
maybe one day

[09:14:01.0000] <annevk>
once I get tired of finetuning my HTML

[09:15:00.0000] <annevk>
I have actually thought of moving to something like WordPress even

[09:15:01.0000] <matjas>
NOOOOOOOOOOOOOOOOOOOOO

[09:16:00.0000] <annevk>
the thing is though, preserving all the links, markup, weird structures, is just not going to work without a lot of hacking

[09:24:00.0000] <annevk>
I could do away entirely with <link>...

[09:25:00.0000] <matjas>
I propose /s/<link>/<blink>/

[09:25:01.0000] <annevk>
but I guess most software doesn't support Link: </feeds/weblog>; rel="alternate" ... yet

[09:26:00.0000] <annevk>
well, "yet", not sure if we should

[09:32:00.0000] <matjas>
i’m still pissed that Google Reader doesn’t recognize <link href="/feed.atom" rel="alternate" type="application/atom+xml"> without the type attribute

[09:33:00.0000] <annevk>
I was hoping rel=feed would catch on

[09:33:01.0000] <annevk>
but it did not

[09:42:00.0000] <MikeSmith>
for anybody interested, the validator.nu sources are all mirrored at github now

[09:42:01.0000] <MikeSmith>
https://github.com/validator

[09:42:02.0000] <MikeSmith>
except for the htmlparser sources

[09:42:03.0000] <MikeSmith>
which are only in the mozilla repo

[09:46:00.0000] <JonathanNeal>
MikeSmith, nice.

[09:47:00.0000] <MikeSmith>
maybe this will help to encourage some other contributors to get involved

[09:47:01.0000] <MikeSmith>
and maybe can eventually make those the actual source repos instead of just being mirrors

[09:50:00.0000] <JonathanNeal>
What's the license?

[09:50:01.0000] <MikeSmith>
MIT

[09:59:00.0000] <JonathanNeal>
well groovy pie

[10:55:00.0000] <ru_funnynick2>
is there padding edge radius in css ?

[12:43:00.0000] <Dashiva>
http://xmltoday.org/2010/11/five-myths-about-xforms/

[12:51:00.0000] <annevk>
"Myth #1: XForms is Dead"

[12:51:01.0000] <annevk>
the only articles I ever see about XForms are written by him...

[12:52:00.0000] <Dashiva>
It seems like the author considers XML to be primarily its syntax, rather than the infoset it serializes

[12:53:00.0000] <annevk>
scanning further

[12:53:01.0000] <annevk>
"HTML5, the massive updating of the HTML specification given a decade of changes in the browser world, has provided an opportunity to rethink a great deal of the underlying way that we build web content."

[12:53:02.0000] <annevk>
rethinking? not so much...

[12:54:00.0000] <annevk>
"but any time you reach a point where you need to work with XML content (a growing requirement over time)" [citation needed]

[12:55:00.0000] <Dashiva>
There's an interesting comment:

[12:55:01.0000] <Dashiva>
One thing that I must add is the durability of XForms. I have XForms that I wrote over five years ago and with a few modifications they run just fine today on XSLTForms and they now run even faster and on almost every browser.

[12:55:02.0000] <Dashiva>
I compare this with no totally unusable web apps I wrote with JavaScript frameworks that seem to come and go every year or so and I am very glad I have stuck with W3C standards!

[12:56:00.0000] <annevk>
wait what

[12:56:01.0000] <annevk>
"XForms isn't going away. Indeed, the Web forms group recently chartered the XForms 1.2 working group in great part because it was evident that the need which XForms has evolved to meet"

[12:56:02.0000] <annevk>
what does this mean?

[14:13:00.0000] <MikeSmith>
"Web forms group"?

[14:14:00.0000] <annevk>
apart the that, the sentence just does not compute

[14:14:01.0000] <annevk>
apart from that*

[14:15:00.0000] <MikeSmith>
yeah

[14:19:00.0000] <MikeSmith>
I wonder of XForms uses Canonical XML

[14:37:00.0000] <Dashiva>
Does Canonical XML have anything to do with Canonical?

[14:42:00.0000] <MikeSmith>
heh

[14:45:00.0000] <MikeSmith>
do we really need a separate "valid date string with optional time" definition?

[14:46:00.0000] <MikeSmith>
it is really just "A valid date string or a valid global date and time string."

[14:46:01.0000] <MikeSmith>
http://dev.w3.org/html5/spec/common-microsyntaxes.html#valid-date-string-with-optional-time

[14:48:00.0000] <MikeSmith>
hmm

[14:48:01.0000] <MikeSmith>
and I just now notice "A string is a valid date or time string in content if it consists of zero or more White_Space characters, followed by a valid date or time string, followed by zero or more further White_Space characters."

[14:48:02.0000] <MikeSmith>
which we are not currently allowing

[14:49:00.0000] <MikeSmith>
that is, validator doesn't allow date/time strings in attribute values to have surrounding whitespace at all

[15:11:00.0000] <MikeSmith>
hmm, it seems like the value of an input/@type=date attribute is not allowed to contain surrounding whitespace

[15:12:00.0000] <MikeSmith>
oh, value of an input/@type=datetime attribute is also not allowed to contain surrounding whitespace


2010-11-28
[13:02:00.0000] <Schalk>
Is it just me or does this line not read correctly? "In the algorithms below, the number of days in month month of year year is"

[13:02:01.0000] <Schalk>
http://www.w3.org/TR/html5/common-microsyntaxes.html#dates-and-times

[13:03:00.0000] <Schalk>
Oh wait, yes it does

[15:27:00.0000] <JonathanNeal>
hello


2010-11-29
[19:52:00.0000] <jgautier>
can anyone help me out with canvas?

[20:08:00.0000] <gsnedders>
http://stackoverflow.com/questions/4300504/jump-in-running-time-of-repeated-splice-in-webkit — O(2^n) behaviour in JSC apparently. Nice.

[20:34:00.0000] <MikeSmith>
gsnedders: I think it's not in JSC

[20:34:01.0000] <MikeSmith>
or not just in JSC

[20:37:00.0000] <MikeSmith>
because I see the same behavior when I try it in Chrome

[23:06:00.0000] <hsivonen>
Google browser sniffs, episode N+1: https://bugzilla.mozilla.org/show_bug.cgi?id=614864

[23:10:00.0000] <gsnedders>
You'd think with the evangelisim they do externally to get sites working with Chrome they could do more internally…

[23:40:00.0000] <hsivonen>
gsnedders: well, it looks like they've done enough internal evangelism to get Chrome working.

[00:34:00.0000] <hsivonen>
what would be a good forum for getting Apache CGI advice?

[00:34:01.0000] <hsivonen>
(I want to limit the number of concurrently executed CGI scripts)

[00:35:00.0000] <hsivonen>
maybe serverfault.com?

[00:44:00.0000] <hsivonen>
I posted on serverfault: http://serverfault.com/questions/206895/how-to-limit-the-number-of-concurrent-cgi-script-invocations-in-apache-2-2

[00:46:00.0000] <hsivonen>
In case anyone wonders, the Friday Validator.nu outage was caused by a single host rapidly GETting a lot of pages from bugzilla.validator.nu

[00:50:00.0000] <MikeSmith>
hsivonen: how did you fix it?

[00:51:00.0000] <MikeSmith>
just blocked the IP of that host?

[00:51:01.0000] <hsivonen>
MikeSmith: blocked the IP of that host and tweaked overall connection timeouts

[00:52:00.0000] <hsivonen>
MikeSmith: so it's not really fixed

[00:52:01.0000] <MikeSmith>
ok

[00:52:02.0000] <hsivonen>
I restored the timeout I had on the old server 

[00:52:03.0000] <hsivonen>
I had failed to restore those when moving to a fresh VM

[00:53:00.0000] <hsivonen>
I'm still rather unhappy about the DoS killing 2.5 hours from my Friday night

[00:53:01.0000] <MikeSmith>
yeah, that sucks

[00:54:00.0000] <MikeSmith>
stuff like this always seems to happen at the worst times

[00:54:01.0000] <hsivonen>
I wonder if there's a way to tell Linux to always keep a RAM reserve for ssh+su+shell+nano

[00:55:00.0000] <hsivonen>
that would have helped *a lot*

[00:55:01.0000] <MikeSmith>
you mean because you couldn't even shell in?

[00:55:02.0000] <hsivonen>
ssh'ing into the server during the incident was ridiculously slow

[00:55:03.0000] <MikeSmith>
ssh in?

[00:55:04.0000] <MikeSmith>
ah

[00:55:05.0000] <MikeSmith>
well, that's something your hosting service should provide

[00:55:06.0000] <hsivonen>
which is why it took me 2.5 hours to resolve the situation

[00:55:07.0000] <MikeSmith>
ah

[00:56:00.0000] <hsivonen>
because I didn't want to just flip the virtual power switch out of fear of corrupting some files

[00:56:01.0000] <MikeSmith>
yeah

[00:56:02.0000] <MikeSmith>
I was going to say, my service provides a special admin console

[00:56:03.0000] <MikeSmith>
but I think for this case that wouldn't have been what you needed anyway

[00:56:04.0000] <hsivonen>
fwiw, Gandi has a virtual console thingy, which I guess doesn't require RAM for sshd--only shell

[00:57:00.0000] <hsivonen>
but the host for the other VM doesn't provide that

[00:57:01.0000] <MikeSmith>
ah

[00:57:02.0000] <hsivonen>
but on balance, the other host keeps backups

[00:57:03.0000] <hsivonen>
and has customer service

[00:57:04.0000] <MikeSmith>
my hosting service gives me space for backups, but I have to run them myself

[00:58:00.0000] <hsivonen>
the VM that runs over at Gandi has no important data on it

[00:58:01.0000] <MikeSmith>
ah

[00:58:02.0000] <MikeSmith>
but this one has the bugzilla DB

[00:58:03.0000] <hsivonen>
yeah

[00:58:04.0000] <hsivonen>
I don't have any Gandi disaster recovery experience

[00:59:00.0000] <hsivonen>
but I assume that at a lower price with larger volumes and without a promise of backup, you shouldn't expect disaster recovery help

[01:00:00.0000] <hsivonen>
also, with the other host, I can take a bus to their office and go complain face to face in the same jurisdiction in the worst case

[01:01:00.0000] <Ms2ger>
"It's not like registering a character set with IANA is a particularly difficult or drawn-out process"

[01:01:01.0000] <hsivonen>
Ms2ger: haha. where's the quote from?

[01:01:02.0000] <Ms2ger>
http://www.w3.org/Bugs/Public/show_bug.cgi?id=11423

[01:07:00.0000] <MikeSmith>
hsivonen: I set up mirrors of the validator.nu sources here:

[01:07:01.0000] <MikeSmith>
https://github.com/validator

[01:09:00.0000] <hsivonen>
MikeSmith: ok. what does this mean in practice?

[01:09:01.0000] <hsivonen>
MikeSmith: do you have some kind of git-svn bridge pushing stuff to svn still?

[01:09:02.0000] <MikeSmith>
pushing the other way

[01:09:03.0000] <MikeSmith>
from svn to git

[01:10:00.0000] <hsivonen>
ok. what's the benefit of git in that case?

[01:10:01.0000] <hsivonen>
also, why git/github? didn't you ask about moving to hg before?

[01:10:02.0000] <MikeSmith>
it gives us public diffs, for one thing

[01:10:03.0000] <hsivonen>
ok

[01:11:00.0000] <MikeSmith>
hg is great too, but as far as hosting goes, I've been using github a lot lately and have found it quite nice in a lot of ways

[01:11:01.0000] <hsivonen>
fwiw, I think svn sucks. I don't know if I should be wanting git or hg, but hg is currently more familiar, so git feels like yet another thing to learn

[01:12:00.0000] <hsivonen>
I see. I gather people really like github.

[01:12:01.0000] <hsivonen>
Is there a proper git plug-in for Eclipse these days?

[01:12:02.0000] <MikeSmith>
I think there are bigger network effects around github currently, compared to bitbucket 

[01:12:03.0000] <MikeSmith>
not sure

[01:12:04.0000] <MikeSmith>
I've not used one myself, at least

[01:13:00.0000] <hsivonen>
MikeSmith: thanks for arranging public diffs

[01:13:01.0000] <hsivonen>
I really want to move away from svn, but I'm not yet sure what to think of git vs. hg

[01:14:00.0000] <MikeSmith>
it's never been clear to me why cvsdude does diffs the way they do

[01:14:01.0000] <MikeSmith>
hsivonen: I think github is worth taking a look at when you have time

[01:15:00.0000] <hsivonen>
all I've done on github so far is registering an account in order to file one bug

[01:15:01.0000] <MikeSmith>
if you set up an account, let me know and I will switch the ownership to you

[01:15:02.0000] <MikeSmith>
oh, so you do have an account?

[01:16:00.0000] <hsivonen>
I'm https://github.com/hsivonen

[01:16:01.0000] <hsivonen>
but I have about zero git skills

[01:16:02.0000] <MikeSmith>
weird, I looked for you but didn't find you for some reason

[01:17:00.0000] <hsivonen>
I've only had an account since Nov 12

[01:19:00.0000] <MikeSmith>
OK, you should now have ownership of https://github.com/organizations/validator/

[01:19:01.0000] <MikeSmith>
settings are at https://github.com/organizations/validator/settings

[01:21:00.0000] <MikeSmith>
as far as advantages of github, another thing I think is great is that it allows people to easily forking repos

[01:22:00.0000] <MikeSmith>
and then provides an easy way to send "pull requests"

[01:23:00.0000] <MikeSmith>
which are just patches from one repo to another

[01:23:01.0000] <MikeSmith>
e.g., from the forked repo back to upstream

[01:23:02.0000] <hsivonen>
MikeSmith: thanks. Do I need to take any admin action right now to accept?

[01:23:03.0000] <jgraham>
hsivonen: I have no idea how Google manages to have such a supposedly smart-across-the-board engineering team and keep making n00b mistakes like "web browsers never fix bugs"

[01:23:04.0000] <MikeSmith>
no, I don't think you need to take any action

[01:23:05.0000] <hsivonen>
MikeSmith: ok

[01:25:00.0000] <hsivonen>
jgraham: I don't really know what they assume. the code is so obfuscated that figuring out what exactly happens is not good use of time

[01:26:00.0000] <hsivonen>
jgraham: I hope that at some point, so Google engineer takes the time to fix stuff

[01:26:01.0000] <hsivonen>
s/so/some/

[01:27:00.0000] <hsivonen>
jgraham: maybe if you believe in your own skillz, you are more likely to try stunts like 6-ways browser-sniffed code paths

[01:28:00.0000] <hsivonen>
(IIRC, GWT is 6-ways these days)

[01:28:01.0000] <gsnedders>
hsivonen: What are the six?

[01:28:02.0000] <jgraham>
hsivonen: Sniffing on UA strings to work around browser-specific behaviour is a strategy predicated on the assumption that browser-specific behaviour will survive and not be treated as a bug to be fixed

[01:29:00.0000] <hsivonen>
safari, opera, gecko (older than 1.8), gecko 1.8 (1.8 or later), ie (6 and 7), ie8

[01:29:01.0000] <hsivonen>
(don't ask me why they keep around code for Gecko < 1.8)

[01:29:02.0000] <jgraham>
So, which codepath does IE9 get?

[01:29:03.0000] <MikeSmith>
sniffing is evil

[01:30:00.0000] <hsivonen>
jgraham: I don't know. Fun QA time for someone.

[01:30:01.0000] <gsnedders>
jgraham: Gecko 1.8

[01:30:02.0000] <gsnedders>
(I presume, it's the default, or at least was a year ago)

[01:30:03.0000] <jgraham>
gsnedders: For real?

[01:30:04.0000] <hsivonen>
jgraham: http://code.google.com/p/google-web-toolkit/source/browse/trunk/user/src/com/google/gwt/user/UserAgent.gwt.xml

[01:31:00.0000] <gsnedders>
jgraham: Do you want me to remind you about Opera and Google Wave?

[01:31:01.0000] <hsivonen>
looks like IE9 is going to get ie8 if the compat mode button hasn't been pressed or the site isn't on IE's blacklist

[01:32:00.0000] <MikeSmith>
hmm, http://googlenewsblog.blogspot.com/2010/11/credit-where-credit-is-due.html

[01:32:01.0000] <hsivonen>
fwiw, this stuff is why I haven't updated livedom.validator.nu in months

[01:32:02.0000] <jgraham>
/me is somewhat concered that javascript-as-bytecode and proprietry-protocols-over-websockets are the future of the web

[01:32:03.0000] <MikeSmith>
<meta name="syndication-source" content="http://www.publisherX.com/wire_story_1.html">

[01:32:04.0000] <MikeSmith>
<meta name="original-source" content="http://www.example.com/burglary_at_watergate.html">

[01:32:05.0000] <jgraham>
Which will make being a browser QA "fun"

[01:33:00.0000] <gsnedders>
jgraham: bah, I never found obfuscated JS that bad.

[01:33:01.0000] <gsnedders>
That was you who found it bad :P

[01:33:02.0000] <hsivonen>
does anyone have up-to-date charset sniffing tests for text/html

[01:33:03.0000] <hsivonen>
?

[01:33:04.0000] <gsnedders>
(And then threw the bugs at me.)

[01:34:00.0000] <jgraham>
gsnedders: Huh?

[01:34:01.0000] <gsnedders>
jgraham: I never found JS-as-bytecode too bad as a browser QA. You were the one who did that… and gave me the bugs. :P

[01:35:00.0000] <hsivonen>
whoa! GWT has dropped "gecko" since I last took a good look at the file I linked to above

[01:35:01.0000] <hsivonen>
so it's only 5-ways sniffing these days

[01:37:00.0000] <hsivonen>
looks like I need to write some encoding sniffing tests :-(

[01:38:00.0000] <annevk2>
Hixie wrote a lot

[01:38:01.0000] <annevk2>
they're not sufficient?

[01:38:02.0000] <annevk2>
(and he wrote them from a script, so maybe you can reuse that)

[01:38:03.0000] <hsivonen>
annevk2: then I need to locate them

[01:38:04.0000] <hsivonen>
annevk2: also, the spec was buggy...

[01:38:05.0000] <annevk>
/me looks

[01:38:06.0000] <hsivonen>
still is

[01:39:00.0000] <annevk>
http://www.hixie.ch/tests/adhoc/html/parsing/encoding/

[01:39:01.0000] <hsivonen>
thanks

[01:40:00.0000] <MikeSmith>
hsivonen: I sent you mail about a patch that I can't remember getting any review feedback for yet

[01:40:01.0000] <MikeSmith>
for http://bugzilla.validator.nu/show_bug.cgi?id=749

[01:41:00.0000] <MikeSmith>
patch is at http://bugzilla.validator.nu/attachment.cgi?id=181

[01:41:01.0000] <hsivonen>
/me looks

[01:41:02.0000] <hsivonen>
and it looks like my patch fails http://hixie.ch/tests/adhoc/html/parsing/encoding/012.html

[01:42:00.0000] <MikeSmith>
this patch is so that instead of doing this:

[01:42:01.0000] <MikeSmith>
  Bad value for attribute href on element a: DOUBLE_WHITESPACE in PATH.

[01:42:02.0000] <MikeSmith>
...we instead do:

[01:42:03.0000] <MikeSmith>
  Bad value for attribute href on element a: The IRI path component contains illegal whitespace.

[01:42:04.0000] <MikeSmith>
or actually, more like:

[01:42:05.0000] <MikeSmith>
Error: Bad value http://example.com/?foo bar for attribute href on element a: Whitespace in query component. Use %20 in place of spaces.

[01:43:00.0000] <hsivonen>
MikeSmith: it seems a bit odd to initialize vc to null instead of initializing it to ZZZ_DUMMY_DEFAULT

[01:43:01.0000] <MikeSmith>
/me looks

[01:43:02.0000] <MikeSmith>
I'm probably not going to be able to remember why I did it that way

[01:44:00.0000] <MikeSmith>
so I'll just go ahead and change it

[01:45:00.0000] <hsivonen>
MikeSmith: other than that, look great. thanks

[01:45:01.0000] <MikeSmith>
ok

[01:45:02.0000] <MikeSmith>
thanks

[01:47:00.0000] <MikeSmith>
hsivonen: another thing I've been wanting to ask you about is this part of the spec:

[01:47:01.0000] <MikeSmith>
http://dev.w3.org/html5/spec/webappapis.html#event-handler-content-attributes

[01:47:02.0000] <MikeSmith>
"Event handler content attributes, when specified, must contain valid JavaScript code matching the FunctionBody production. [ECMA262]"

[01:48:00.0000] <MikeSmith>
I think it might be possible to use Closure Compiler programatically to run a check to see if values are valid JavaScript code

[01:49:00.0000] <MikeSmith>
though not yet more specifically to check if they match the FunctionBody production

[01:49:01.0000] <hsivonen>
MikeSmith: Rhino is already included, so it makes more sense not to add another JS parser :-)

[01:49:02.0000] <MikeSmith>
OK, does Rhino have an API for reporting errors?

[01:50:00.0000] <hsivonen>
I has something. I haven't looked at the API since 2006, so I don't remember what exactly it has

[01:50:01.0000] <MikeSmith>
ok

[01:50:02.0000] <hsivonen>
If Closure is nicer and has an appropriate license, switching to Closure would work, too

[01:50:03.0000] <gsnedders>
For the parser? I don't think it has anything fine-grained enough to do that…

[01:50:04.0000] <MikeSmith>
hsivonen: I think Closure actually has a dependency on Rhino

[01:51:00.0000] <MikeSmith>
I think it may actually be wrapped around Rhino

[01:51:01.0000] <hsivonen>
ok. in that case, I think it would make sense to first try to use Rhino directly

[01:53:00.0000] <MikeSmith>
/me reads Rhino docs to try to figure out what the entry point for using it is

[01:55:00.0000] <gsnedders>
MikeSmith: Note that CVS has a new API for this stuff which most stuff uses nowadays

[01:55:01.0000] <MikeSmith>
gsnedders: CVS of Rhino?

[01:56:00.0000] <gsnedders>
MikeSmith: Yeah

[01:56:01.0000] <MikeSmith>
wow, cool

[01:56:02.0000] <MikeSmith>
you got a URL handy?

[01:56:03.0000] <gsnedders>
No.

[01:56:04.0000] <MikeSmith>
/me finds http://mxr.mozilla.org/mozilla/source/js/rhino/

[01:58:00.0000] <hsivonen>
MikeSmith: the current entry lives in whattf/syntax/relaxng/datatype/java/src/org/whattf/datatype/IriRef.java 

[01:58:01.0000] <hsivonen>
looks like the API used there is deprecated, though

[02:04:00.0000] <MikeSmith>
hsivonen: OK, thanks

[02:05:00.0000] <MikeSmith>
if I manage to get the even-handler attribute checking added, I can maybe also switch that to using the current API as well

[02:07:00.0000] <MikeSmith>
I guess it's now http://www.mozilla.org/rhino/apidocs/org/mozilla/javascript/ContextFactory.html#enterContext()

[02:47:00.0000] <thiessenp>
I'm newbing Canvas but oi, I'm having trouble because I keep trying to use it like a DOM. Would anyone know any papers/tutorials on thinking in Canvas (so to speak :)?

[02:49:00.0000] <annevk>
you could use SVG

[02:50:00.0000] <jgraham>
Or read something like http://billmill.org/static/canvastutorial/ maybe

[02:54:00.0000] <MikeSmith>
http://www.phoronix.com/scan.php?page=news_item&px=ODgzMA

[02:54:01.0000] <MikeSmith>
"A new feature though for GTK+3 is being worked on and its quite interesting: an HTML back-end that allows GTK applications to run natively within a HTML5 web-browser off a web server. "

[02:55:00.0000] <thiessenp>
annevk: don't temp me :) (just trying to get familiar with all the bits of HTML5 and canvas is the last one looming)

[02:55:01.0000] <thiessenp>
jgraham: thanks will read

[02:55:02.0000] <annevk>
SVG is part of HTML5 these days

[02:55:03.0000] <MikeSmith>
http://blogs.gnome.org/alexl/2010/11/23/gtk3-vs-html5/

[02:55:04.0000] <thiessenp>
annevk: oh, hmm what to do now :) (thanks)

[02:56:00.0000] <thiessenp>
back to Starcraft2 I guess ... :)

[02:56:01.0000] <annevk>
food

[02:59:00.0000] <MikeSmith>
http://mkt.appmobi.com/

[03:00:00.0000] <MikeSmith>
"an online PhoneGap Hosting Environment"

[03:34:00.0000] <hsivonen>
so the latest Debian stable has iceweasel 3.0.x

[03:34:01.0000] <hsivonen>
and Firefox 3.0.x no longer gets security updates from the Mozilla Corporation

[03:34:02.0000] <hsivonen>
does Debian actually backport all security patches to 3.0.x?

[03:35:00.0000] <hsivonen>
and what does Red Hat do, considering that they have a 10-year support cycle on the server at least?

[03:43:00.0000] <hsivonen>
looks like Red Hat ships new Firefox releases to old OS releases

[03:44:00.0000] <MikeSmith>
http://packages.debian.org/changelogs/pool/main/i/iceweasel/iceweasel_3.0.6-3/changelog

[03:44:01.0000] <MikeSmith>
http://packages.debian.org/changelogs/pool/main/i/iceweasel/iceweasel_3.5.15-1/changelog

[03:48:00.0000] <hsivonen>
MikeSmith: http://packages.debian.org/lenny/iceweasel shows 3.0.6-3 as the latest in stable

[03:48:01.0000] <hsivonen>
and that's what I got when I installed stable

[03:49:00.0000] <MikeSmith>
yeah

[03:49:01.0000] <MikeSmith>
it looks like it has not been getting any security updates for a while

[03:49:02.0000] <MikeSmith>
more than a year

[03:49:03.0000] <Rik`>
http://packages.debian.org/search?keywords=iceweasel

[03:50:00.0000] <hsivonen>
Rik`: Is a user supposed to know that it's necessary to use backports to get security updates?

[03:50:01.0000] <hsivonen>
/me also observes that Camino uses a rather old Gecko branch

[03:51:00.0000] <hsivonen>
interesting that 3.6 is still in experimental and not even in unstable

[03:53:00.0000] <Rik`>
I'd say a Debian user has to know

[03:54:00.0000] <MikeSmith>
I'm a Debian user, and I didn't know…

[03:54:01.0000] <MikeSmith>
but then I've never run stable

[03:54:02.0000] <hsivonen>
/me had though Debian supported everything in main for the lifetime of the Debian release

[03:56:00.0000] <hsivonen>
to be clear, I think it preferable to move to a new Gecko major release compared to keeping a really old one on extended life support

[03:59:00.0000] <hsivonen>
MikeSmith: do you recall what the use case for http://bugzilla.validator.nu/show_bug.cgi?id=68 was and if we still want it?

[03:59:01.0000] <MikeSmith_>
/me takes a look

[04:00:00.0000] <MikeSmith>
hsivonen: don't remember :'(

[04:00:01.0000] <MikeSmith>
guess it can just be closed

[04:00:02.0000] <hsivonen>
MikeSmith: ok. thanks

[04:00:03.0000] <hsivonen>
I think it has something to do with copying the value of something that failed into the error message

[04:01:00.0000] <hsivonen>
/me wonders if Validator.nu got ISO Schematron support from upstream at some point...

[04:02:00.0000] <hsivonen>
I *think* oNVDL had it

[04:02:01.0000] <annevk>
if rel=up is for months, what is the relationship for days?

[04:03:00.0000] <hsivonen>
but did the validator-nu branch start before that part of oNVDL got merged into jing-trang trunk...

[04:05:00.0000] <MikeSmith>
hsivonen: I am pretty sure that it did

[04:05:01.0000] <MikeSmith>
so no ISO Schematron support

[04:05:02.0000] <MikeSmith>
btw, I think catalog resolver support was added to upstream jing some time recently

[04:06:00.0000] <annevk>
CSS question: negative values for cubic-bezier(), has that been discussed?

[04:06:01.0000] <annevk>
works in Opera/Gecko and is pretty cool (though negative time is weird of course)

[04:06:02.0000] <annevk>
but is not allowed per spec

[04:07:00.0000] <MikeSmith>
hsivonen: hmm, or I guess it's been there for a while

[04:10:00.0000] <hsivonen>
MikeSmith: so it turns out that ISO Schematron *still* hasn't landed on jing-trang trunk. I wonder what the delay is about.

[04:10:01.0000] <MikeSmith>
oh

[04:10:02.0000] <MikeSmith>
maybe there was some problem trying to merge it in

[04:11:00.0000] <MikeSmith>
I wonder what George is actually running in oXygen

[04:11:01.0000] <hsivonen>
I have zero experience with branch merging with SVN. the whole idea of doing advanced stuff with SVN scares me, but at some point, I should take a good look at the differences between the trunk and the validator-nu branch of jing-trang

[04:11:02.0000] <annevk>
hmm, more registry failure: http://mail.apps.ietf.org/ietf/charsets/msg01510.html

[04:11:03.0000] <MikeSmith>
hsivonen: yeah, please do when you have time

[04:14:00.0000] <hsivonen>
annevk: are you going to comment on http://www.w3.org/Bugs/Public/show_bug.cgi?id=11423 ?

[04:15:00.0000] <annevk>
I was reading that and decided not to care for now

[04:15:01.0000] <annevk>
I think the solution for encodings is to not have a registry at all and just have a spec that defines everything

[04:31:00.0000] <jgraham>
/me thought git-svn was the solution to doing branch merges in svn :p

[04:33:00.0000] <thiessenp>
Just to say the Red Bean book is your friend for all things SVN (svnbook.red-bean.com)

[04:38:00.0000] <hsivonen>
jgraham: that's quite possible

[04:38:01.0000] <hsivonen>
/me wishes jing-trang transitioned to hg on Google Code

[04:43:00.0000] <hsivonen>
I'm a bit worried that requiring http-equiv="content-type" for content="text/html; charset=iso-8859-2" to take effect is going to break sites with typos in the http-equiv="content-type" part

[04:43:01.0000] <hsivonen>
/me starts updating the html5lib encoding tests

[04:44:00.0000] <zcorpan>
if i uncheck 'allow comments on this post' on an old post in the whatwg blog, do the old comments disappear?

[04:44:01.0000] <hsivonen>
<script>alert('step 1 of 3 ("<FE>")')</script>

[04:44:02.0000] <hsivonen>
where <FE> is the byte 0xFE

[04:44:03.0000] <hsivonen>
jgraham: do we really want such bogus bytes in the encoding tests?

[04:44:04.0000] <annevk>
zcorpan, they shouldn't

[04:44:05.0000] <hsivonen>
makes the test file uneditable in gedit

[04:45:00.0000] <zcorpan>
hsivonen: so we should find out which typos we need to support for web compat

[04:45:01.0000] <jgraham>
hsivonen: I remember nothing about these tests

[04:46:00.0000] <hsivonen>
the byte decodes to þ in Windows-1252

[04:46:01.0000] <hsivonen>
I wonder if it intentionally overlaps a byte from the UTF-8 BOM

[04:46:02.0000] <hsivonen>
well, I guess I can manage editing this file as Windows-1252 instead of UTF-8

[04:47:00.0000] <zcorpan>
annevk: thanks, they didn't

[04:47:01.0000] <hsivonen>
files that don't decode cleanly as either UTF-8 or Windows-1252 are much more annoying

[04:48:00.0000] <annevk>
maybe we should disable registering on the blog

[04:48:01.0000] <annevk>
it seems to mostly generate a lot of crap in the pending category

[04:48:02.0000] <annevk>
and anyone who wants a legitimate account can request one here

[04:49:00.0000] <zcorpan>
i'd like automatic disabling of comments after a few weeks

[04:49:01.0000] <annevk>
there's probably a plugin that does that

[04:49:02.0000] <annevk>
the spam filtering for comments is not good enough?

[04:49:03.0000] <zcorpan>
(and trackbacks)

[04:50:00.0000] <zcorpan>
maybe i can disable getting email for new comments and trackbacks instead, since that's what annoys me

[04:52:00.0000] <hsivonen>
we should blog more

[04:52:01.0000] <hsivonen>
Real Soon Now when I make an new release of the parser, I can blog about it

[04:53:00.0000] <hsivonen>
jgraham: are the encoding tests really meant to test the full stack and not just prescan?

[04:54:00.0000] <annevk>
yeah, where did markp go?

[04:54:01.0000] <annevk>
though activity has gone down somewhat on WHATWG-related matters

[04:55:00.0000] <jgraham>
Well yeah, what would a blog post say? "HTML5: it's pretty much done"?

[04:55:01.0000] <annevk>
that is, focus is more on implementing / conformance / fixing minor bugs

[04:55:02.0000] <annevk>
and the new features are very sketchy still

[04:55:03.0000] <jgraham>
Well I guess I should blog about the testsuite or something

[04:55:04.0000] <annevk>
yeah

[04:59:00.0000] <hsivonen>
I guess I could blog about exciting stuff like HTML in annotation-xml and two-character named characters when my patch queue lands

[05:00:00.0000] <jgraham>
hsivonen: I guess that's what they were supposed to test since that's what the code does. It might not be sensible of course

[05:01:00.0000] <annevk>
annotation-xml, whoo

[05:01:01.0000] <annevk>
reddit will go crazy

[05:01:02.0000] <annevk>
(does seem like a good idea though)

[05:02:00.0000] <erlehmann>
it is always fun to glance at inevitable success as it is planned :D

[05:02:01.0000] <hsivonen>
jgraham: supposed to test the full stack that is?

[05:02:02.0000] <jgraham>
hsivonen: Yes

[05:02:03.0000] <hsivonen>
jgraham: it's quite easy to miss severe bugs in the prescan if you test the full stack

[05:03:00.0000] <hsivonen>
my testing was miserable until I started testing the prescan in isolation

[05:03:01.0000] <hsivonen>
but ok, I won't change the test that should pass if you test the full stack

[05:03:02.0000] <hsivonen>
*tests

[05:04:00.0000] <jgraham>
annevk: If we wanted to make reddit go crazy we would have to link HTML5 to drug legalization or whatever current hangup is

[05:04:01.0000] <jgraham>
+their

[05:05:00.0000] <jgraham>
hsivonen: You are probably right

[05:06:00.0000] <annevk>
TSA

[05:06:01.0000] <annevk>
also Wikileaks

[05:06:02.0000] <annevk>
reddit is awesome

[05:07:00.0000] <hsivonen>
I'm scheduled to board 3 flights in the U.S. next month :-(

[05:07:01.0000] <jgraham>
I don't get reddit. I mean the s/n is *so* low

[05:07:02.0000] <jgraham>
in the comments

[05:07:03.0000] <hsivonen>
jgraham: better or worse than slashdot?

[05:07:04.0000] <annevk>
they're fricking funny

[05:07:05.0000] <annevk>
usually

[05:08:00.0000] <jgraham>
annevk: I think that's the problem. Being cute and funny is valued over being insightful. So there are just endless lame attempts at humor and nothing substantial

[05:08:01.0000] <annevk>
there's insight too as far as I can tell; it varies

[05:09:00.0000] <jgraham>
hsivonen: Different. /. is usually just full of people being wrong. reddit is usually full of people making 2 word puns and stuff

[05:09:01.0000] <annevk>
e.g. the topvoted comment here seems insightful: http://www.reddit.com/r/worldnews/comments/ed2in/wikileaks_asked_the_us_for_help_redacting/

[05:10:00.0000] <jgraham>
annevk: Sure, there is some. There is probably some fabulous content. But there is an awful lot of noise

[05:10:01.0000] <annevk>
not in my experience

[05:10:02.0000] <jgraham>
Enough that I can't be bothered with it

[05:10:03.0000] <hsivonen>
annevk: is "When comparing a string specifying a character encoding with the name or alias of a character encoding to determine if they are equal, user agents must remove any leading or trailing space characters in both names, and then perform the comparison in an ASCII case-insensitive manner." the Web-compatible way to compare?

[05:12:00.0000] <annevk>
I think Firefox only did ASCII lowercasing

[05:12:01.0000] <annevk>
IE also strips leading and trailing whitespace

[05:12:02.0000] <annevk>
Opera plans to match IE

[05:13:00.0000] <annevk>
(not sure whether the patch landed yet)

[05:13:01.0000] <hsivonen>
annevk: ok.

[05:13:02.0000] <hsivonen>
then the Validator.nu Java code is wrong

[05:14:00.0000] <annevk>
it is definitely a lot better than UTS22

[05:14:01.0000] <annevk>
that breaks shit

[05:15:00.0000] <hsivonen>
is UTS22 where you ASCII-lowercase and throw away everything except a-z and 0-9?

[05:15:01.0000] <annevk>
yeah

[05:15:02.0000] <hsivonen>
ok

[05:16:00.0000] <hsivonen>
some of these tests are so old that the spec has probably changed to UTS22 and back without the tests following

[05:16:01.0000] <erlehmann>
annevk, jgraham, post it on hacker news if you don't like reddit?

[05:17:00.0000] <annevk>
hsivonen, could be, Hixie_ generates his tests from a script

[05:17:01.0000] <annevk>
hsivonen, so they should be easy to fix I guess

[05:17:02.0000] <erlehmann>
rationalists will rip your parser apart, of course. ;)

[05:17:03.0000] <jgraham>
erlehmann: Huh?

[05:18:00.0000] <annevk>
erlehmann, only if you don't use sufficient variables

[05:18:01.0000] <erlehmann>
jgraham, there: <http://news.ycombinator.com/>

[05:20:00.0000] <jgraham>
erlehmann: Yeah, I know Hacker News. It is even quite bearable (mod "humor" to oblivion, narrow focus of articles) despite the crazy startups/self-improvement bent it has. But it was the next line I didn;t understand

[05:20:01.0000] <jgraham>
"rationalists will rip your parser apart, of course. ;)"

[05:21:00.0000] <erlehmann>
jgraham, the self-improvement part often has some kind of rationalist ring to it, i.e. articles from eliezer yudkowski.

[05:24:00.0000] <jgraham>
erlehmann: You could be right, I haven't noticed

[05:25:00.0000] <erlehmann>
jgraham, careful. it could be a bias on my part, hehe

[05:26:00.0000] <erlehmann>
quick, reroute auxilliary power to the bayes coils to increase its efficiency in subspace!

[05:27:00.0000] <jgraham>
You are making combined Star Trek / Bayes theorem jokes? This must be some definition of geekiness

[05:56:00.0000] <hsivonen>
annevk: looks like Hixie's tests are out of date: http://hixie.ch/tests/adhoc/html/parsing/encoding/018.html

[05:58:00.0000] <annevk>
I think we should just drop ISO-8859-9 to be hoenst

[05:58:01.0000] <annevk>
honest*

[05:58:02.0000] <hsivonen>
drop in what sense?

[05:58:03.0000] <annevk>
if we need to support Windows-1254 already and it is more compatible...

[05:58:04.0000] <annevk>
and it is a superset*

[05:58:05.0000] <hsivonen>
oh. in that sense

[05:59:00.0000] <hsivonen>
annevk: you wouldn't drop support for the iso-8859-9 label, though, right?

[05:59:01.0000] <annevk>
right, but it would mean Windows-1254

[05:59:02.0000] <zcorpan>
hsivonen: about typos in http-equiv="content-type", if you could run your html parser against a set of pages and compare the sniffed encoding compared to an older version of your html parser that doesn't have the http-equiv="content-type" check, and log the URLs where the encoding is different, I could have a look at those pages (some day)

[05:59:03.0000] <hsivonen>
that's what Hixie's test already expect

[06:00:00.0000] <hsivonen>
zcorpan: good idea. I wonder if Philip` would run that test if I provide parser jars...

[06:01:00.0000] <hsivonen>
Hooray! Hixie's test cases are hosted on Dreamhost's broken Apache: http://hixie.ch/tests/adhoc/html/parsing/encoding/047.html

[06:01:01.0000] <hsivonen>
Hixie_: test baseline is broken

[06:02:00.0000] <hsivonen>
jgraham: I see now why there was weird byte in the test suite

[06:03:00.0000] <hsivonen>
the weird byte came from Hixie and only makes sense as a full-stack test

[06:03:01.0000] <annevk>
re my CSS question, apparently the spec for transitions simply hasn't been updated yet

[06:06:00.0000] <hsivonen>
http://hixie.ch/tests/adhoc/html/parsing/encoding/057.html makes the spec look very suspicious on the document.write front

[06:11:00.0000] <karlcow>
http://googlenewsblog.blogspot.com/2010/11/credit-where-credit-is-due.html

[06:11:01.0000] <hsivonen>
assuming that http://www.w3.org/Bugs/Public/show_bug.cgi?id=10803#c2 is correct, given #c4 it would be nice is someone from Opera could say why Opera changed

[06:13:00.0000] <annevk>
<script type=whatever src=...> is still fetched?

[06:13:01.0000] <annevk>
what is the point of that?

[06:14:00.0000] <hsivonen>
annevk: not fetched in Opera, Firefox, WebKit trunk or the spec. Fetched in IE and old WebKit.

[06:15:00.0000] <hsivonen>
annevk: did you tune out the script-inserted script execution order discussion?

[06:17:00.0000] <annevk>
I think I reversed the pass condition of an internal bug; my bad

[06:17:01.0000] <annevk>
I am tuned out of that whole discussion, yes

[06:18:00.0000] <annevk>
thank you

[06:19:00.0000] <hsivonen>
annevk: anyway, the point is that in IE and old WebKit you get an onload event when the resource has loaded, so you can use it for preloading stuff to cache and you know when the content has been fetched

[06:22:00.0000] <hsivonen>
is this test correct per current spec http://hixie.ch/tests/adhoc/html/parsing/encoding/063.html

[06:22:01.0000] <hsivonen>
I suppose it is

[06:22:02.0000] <hsivonen>
I wonder what's happening there...

[06:22:03.0000] <hsivonen>
with my patches applied that is...

[06:25:00.0000] <hsivonen>
today gdb keeps hanging. not cool

[06:27:00.0000] <Philip`>
hsivonen: I could probably manage to do that

[06:28:00.0000] <hsivonen>
Philip`: cool. I make jars when I have debugged my patch

[06:28:01.0000] <hsivonen>
sadly, it seems that there's a lot to debug

[06:29:00.0000] <hsivonen>
which is rather counter-intuitive

[06:31:00.0000] <hsivonen>
it feels like stuff in Ubuntu just keeps regressing and regressing

[06:31:01.0000] <hsivonen>
gdb hasn't been systematically hanging before

[06:32:00.0000] <hsivonen>
I need to go to a virtual console to kill it

[06:32:01.0000] <hsivonen>
since it locks X event delivery until killed

[06:33:00.0000] <hsivonen>
I guess I will have to use printfs to debug why http://hixie.ch/tests/adhoc/html/parsing/encoding/063.html fails :-(

[06:34:00.0000] <hsivonen>
well, http://hixie.ch/tests/adhoc/html/parsing/encoding/067.html is interesting, too

[06:35:00.0000] <zcorpan>
i don't follow why http://hixie.ch/tests/adhoc/html/parsing/encoding/063.html expects windows-1252

[06:36:00.0000] <zcorpan>
the prescan doesn't skip <script> blocks, does it?

[06:36:01.0000] <hsivonen>
zcorpan: it doesn't

[06:37:00.0000] <hsivonen>
zcorpan: but the prescan sets confidence to tentative and the tree builder should later change the encoding

[06:37:01.0000] <zcorpan>
oh

[06:37:02.0000] <zcorpan>
right

[06:41:00.0000] <zcorpan>
step 2 of "A sequence of bytes starting with a 0x3C byte (ASCII <), optionally a 0x2F byte (ASCII /), and finally a byte in the range 0x41-0x5A or 0x61-0x7A (an ASCII letter)" seems bogus if the byte found in step 1 was 0x3E (ASCII >)

[06:45:00.0000] <zcorpan>
<html>a="<meta charset=utf-8>"

[06:45:01.0000] <zcorpan>
the prescan misses the meta there afaict

[06:45:02.0000] <hsivonen>
oh joy. the parser does the right thing with 063.html but the rest of the browser rejects the reload request

[06:47:00.0000] <erlehmann>
is there something forbidding that a body element contains only a canvas?

[06:47:01.0000] <hsivonen>
not anymore, IIRC

[06:48:00.0000] <zcorpan>
erlehmann: depends on what the purpose of the <canvas> is

[06:49:00.0000] <zcorpan>
erlehmann: well, the spec wants children of the <canvas> itself (for fallback/accessibility)

[06:49:01.0000] <annevk>
there was no xml:id bug before today?

[06:49:02.0000] <annevk>
weird

[06:50:00.0000] <erlehmann>
zcorpan, it seems that with gecko, <canvas id=universe></canvas> will not be returned by getElementById() if it is the sole element in the body. if i add another element or fallback content is added, it will be returned.

[06:50:01.0000] <erlehmann>
webkit returns without fallback content, but you are right; i should add it.

[06:50:02.0000] <hsivonen>
erlehmann: which version of Gecko or Firefox?

[06:51:00.0000] <erlehmann>
hsivonen, Mozilla/5.0 (X11; U; Linux i686; de; rv:1.9.1.13) Gecko/20100916 Iceweasel/3.5.13 (like Firefox/3.5.13)

[06:51:01.0000] <erlehmann>
in before fixed in 4.0

[06:51:02.0000] <zcorpan>
erlehmann: do you check getElementById in a <script> that is inside or after the <canvas>?

[06:52:00.0000] <annevk>
erlehmann, that's a parsing issue

[06:52:01.0000] <erlehmann>
after.

[06:52:02.0000] <zcorpan>
firefox 3.5 moves the <script> to head

[06:52:03.0000] <annevk>
erlehmann, if scripts occur before "significant content" they are moved to <head>

[06:52:04.0000] <annevk>
in Firefox 3.5

[06:53:00.0000] <erlehmann>
interesting, thanks.

[06:57:00.0000] <zcorpan>
Hixie_: fwiw, the dialog that appears after submitting a bug in the spec always immidiately disappears again for me (in opera), i presume it's because it disappears when scrolling (even if i don't actually scroll)

[08:54:00.0000] <annevk>
o_O

[08:54:01.0000] <TabAtkins>
@_@

[08:54:02.0000] <annevk>
http://www.saxonica.com/ -- I wonder if he even considered how Google is going to navigate that

[08:55:00.0000] <TabAtkins>
Ah, hm.  I dunno if we run xsl or not.

[08:56:00.0000] <TabAtkins>
Augh, and he's got talismans on his <script>.

[08:56:01.0000] <annevk>
http://ln.hixie.ch/?start=1064828134&count=1 -- was a bad idea in 2003 -- still is today

[08:56:02.0000] <TabAtkins>
s/xsl/xslt/

[08:57:00.0000] <annevk>
haha #sneeuw is a trending topic on twitter

[08:58:00.0000] <jgraham>
Searching from the URLs on that page doesn't return the page, so I guess Google doesn't run XSLT

[08:58:01.0000] <jgraham>
Nor bing

[08:58:02.0000] <annevk>
nor should they really

[08:58:03.0000] <TabAtkins>
Argh, why does Hixie's domain think look like a link and feel like a link, but isn't actually a link?

[08:59:00.0000] <TabAtkins>
Setting "cursor:pointer" on something that isn't a link or otherwise meaningfully interactive is just *cruel*.

[08:59:01.0000] <jgraham>
TabAtkins: Surely you aren't suggesting a link between semantics and presentation

[08:59:02.0000] <annevk>
I think it used to do something

[08:59:03.0000] <jgraham>
It is there to test your faith

[08:59:04.0000] <annevk>
give a popover of some sorts

[09:00:00.0000] <jgraham>
A true believer in the Glorious Semantic Revolution would never question such things

[09:00:01.0000] <annevk>
ah yeah

[09:00:02.0000] <annevk>
Hixie uses   h1 { -moz-binding: url(../bindings/sites.xml#menu); -khtml-binding: url(../bindi... which now fails everywhere

[09:00:03.0000] <TabAtkins>
I most certainly am.  Presentation can convey semantics as well (it's just not universal design, and thus not a good idea in general).

[09:01:00.0000] <jgraham>
TabAtkins: The Inquisition will be talking to you., Although you will need to wait as there is a backlog

[09:02:00.0000] <TabAtkins>
Excellent.

[09:03:00.0000] <JonathanNeal>
hello

[09:03:01.0000] <TabAtkins>
Yo, J-nizzle.

[09:22:00.0000] <annevk>
whoa

[09:23:00.0000] <annevk>
dealing with XMLHttpRequest discussion

[09:23:01.0000] <annevk>
-100 emails

[09:26:00.0000] <JonathanNeal>
TabAtkins, thank you for that.

[11:27:00.0000] <TabAtkins>
...dammit, my math is rusty.  I just worked out that a circle of radius 1 centered at (1,1) actually has a radius of i*sqrt(3).

[11:27:01.0000] <TabAtkins>
I... don't understand what I did wrong here.

[11:27:02.0000] <TabAtkins>
(Other than get the wrong answer, obviously.)

[11:27:03.0000] <Hixie>
i'm hoping that i'm missing some context because otherwise that's a very odd circle :-)

[11:28:00.0000] <TabAtkins>
I'm trying to determine the major/minor axes of an ellipse that circumscribes a box with a particular axis ratio.  I'm testing out my math with a simple example first, and it's, um, wrong.

[11:28:01.0000] <Workshiva>
Have you been hanging out with Cthulhu?

[11:29:00.0000] <TabAtkins>
...wait, I worked out all this math earlier.  Let me go dig up that code...

[11:30:00.0000] <TabAtkins>
(And I know it was correct at the time, because it generated correct pictures.)

[11:30:01.0000] <Steve^>
I think it's because you're restricting yourself to a single mathematic, you try using a few of them

[11:35:00.0000] <TabAtkins>
Ah, that's right.  The size difference between an ellipse that is circumscribed by a rectangle and one which circumscribes the same rectangle with the same ratio is just sqrt(2).

[11:37:00.0000] <Workshiva>
http://homepage.eircom.net/~miscellaneous/images/animath.jpg

[11:41:00.0000] <paulschreiber>
i just found this transcript: http://krijnhoetmer.nl/irc-logs/whatwg/20100321

[11:41:01.0000] <paulschreiber>
 . http://krijnhoetmer.nl/irc-logs/whatwg/20100321#l-656 [16:48] <MikeSmith> Error: Element script is missing required attribute src.  

[11:41:02.0000] <paulschreiber>
 . http://krijnhoetmer.nl/irc-logs/whatwg/20100321#l-657 [16:48] <MikeSmith> I really need to get that fix committed  

[11:41:03.0000] <paulschreiber>
 . http://krijnhoetmer.nl/irc-logs/whatwg/20100321#l-658 [16:49] <Philip`> That's still a far less helpful error than saying it's required because of the charset  

[11:41:04.0000] <paulschreiber>
 . http://krijnhoetmer.nl/irc-logs/whatwg/20100321#l-660 [16:49] <Philip`> People will think they have to add a src, they won't think they have to remove the charset  

[11:41:05.0000] <paulschreiber>
that was the same error i hit with the validator

[11:42:00.0000] <paulschreiber>
what's the best way to get the error message fixed to help folks like myself?

[11:47:00.0000] <Schalk>
For the HTMLDocument implementation in Chrome it returns a HTMLBodyElement instead of the HTMLElement defined here: http://www.w3.org/TR/html5/dom.html#dom

[11:48:00.0000] <Schalk>
As such one does not seem to have access to the same attributes

[11:49:00.0000] <Schalk>
I cannot seem to find the documentation regarding the HTMLBodyElement

[11:50:00.0000] <Hixie>
not sure what you mean

[11:50:01.0000] <Hixie>
it returns it for what?

[11:50:02.0000] <Hixie>
do you have a snippet of JS demonstrating the problem?

[11:51:00.0000] <paulschreiber>
@hixie are you talking to me?

[11:51:01.0000] <Hixie>
no, Schalk 

[11:52:00.0000] <Schalk>
If I run : document.body I get body: [object HTMLBodyElement]

[11:52:01.0000] <Hixie>
paulschreiber: for your question, you want MikeSmith or hsivonen

[11:52:02.0000] <Schalk>
seems that is should return HTMLElement

[11:52:03.0000] <Hixie>
Schalk: HTMLBodyElement is an HTMLElement

[11:52:04.0000] <Schalk>
attribute HTMLElement body;

[11:53:00.0000] <Hixie>
document.body instanceof HTMLElement -> true

[11:53:01.0000] <Hixie>
document.body instanceof HTMLBodyElement -> true

[11:53:02.0000] <Schalk>
ok

[11:53:03.0000] <Hixie>
it's also an Element and a Node

[11:54:00.0000] <Schalk>
Ok, so all of these should be available from the Object : http://www.w3.org/TR/html5/elements.html#htmlelement

[11:54:01.0000] <Workshiva>
Guess we have dom core to thank for this...

[11:55:00.0000] <Hixie>
Schalk: yeah, document.body.getElementsByClassName for instance is a method

[11:55:01.0000] <Schalk>
sure

[11:55:02.0000] <Hixie>
Workshiva: i don't see anything wrong with inheritance here, it makes a lot of sense

[11:55:03.0000] <Schalk>
I am writing some JS to see the values returned by all these

[11:55:04.0000] <Workshiva>
I'm wondering when would document.body not be HTMLBodyElement?

[11:56:00.0000] <Hixie>
document.body is defined as returning just an HTMLElement and not an HTMLBodyElement btw is because in some cases it returns an HTMLFramesetElement

[11:56:01.0000] <Hixie>
for historical reasons

[11:56:02.0000] <Workshiva>
aha

[11:56:03.0000] <Schalk>
ah, perfect

[11:56:04.0000] <Schalk>
thanks Ian

[11:57:00.0000] <Hixie>
btw, Schalk, you might find http://whatwg.org/html prettier than the w3.org copy

[11:57:01.0000] <Hixie>
they're essentially the same other than the styling

[11:57:02.0000] <Schalk>
cool, let me jump into that

[11:57:03.0000] <Hixie>
if you like having lots of web specs in one place, http://whatwg.org/C is similar but subsumes other specs like web workers and web storage into the same document

[11:57:04.0000] <Schalk>
been there before ;D

[11:58:00.0000] <Schalk>
I am currently reading through the entire spec, I REALLY want to understand what I am working with

[11:59:00.0000] <Hixie>
awesome :_)

[11:59:01.0000] <Schalk>
thanks for all your hard work

[13:05:00.0000] <Hixie>
heycam: the extends thing lgtm

[13:05:01.0000] <Hixie>
let me know when it's specced and i'll update my specs

[13:15:00.0000] <heycam>
Hixie, cool ok

[13:18:00.0000] <MikeSmith>
heycam: btw, I've not been able to figure out yet what the cause of the cvs keywords problem is

[13:20:00.0000] <MikeSmith>
wow, you can make Google Translate beatbox

[13:20:01.0000] <MikeSmith>
http://translate.google.com/#de%7Cde%7Cpv%20zk%20pv%20pv%20zk%20pv%20zk%20kz%20zk%20pv%20pv%20pv%20zk%20pv%20zk%20zk%20pzk%20pzk%20pvzkpkzvpvzk%20kkkkkk%20bsch

[13:35:00.0000] <heycam>
MikeSmith, ok, thanks for looking anyway

[13:35:01.0000] <heycam>
MikeSmith, (I guess you tried deleting a file and `cvs up`ing it?)

[13:44:00.0000] <MikeSmith>
heycam: well, that's basically what I did to get the file to begin with

[13:44:01.0000] <MikeSmith>
I mean, I did not have a workspace with those files already

[13:45:00.0000] <MikeSmith>
I checked them out from scratch

[13:45:01.0000] <MikeSmith>
ah wait

[13:51:00.0000] <MikeSmith>
heycam: http://dev.w3.org/SVG/profiles/1.1F2/test/svg/coords-trans-10-f.svg

[13:52:00.0000] <MikeSmith>
I realize that the problem was that cvs doesn't think the files have changed

[13:52:01.0000] <MikeSmith>
so it won't commit them

[13:53:00.0000] <MikeSmith>
so in order to get the repo copy updated you have to make some other change to the file also

[13:53:01.0000] <MikeSmith>
e.g., some some whitespace change or add a comment

[13:53:02.0000] <MikeSmith>
and then commit it

[13:54:00.0000] <MikeSmith>
but I have to say that, going forward, relying on RCS keywords for this kind may not be the most prudent thing to be doing anyway

[13:55:00.0000] <MikeSmith>
since modern VCS don't support it, by design

[13:56:00.0000] <MikeSmith>
http://twitter.com/#!/ryah/status/9362620238798848 "http clients are much harder than http servers"

[13:59:00.0000] <heycam>
MikeSmith, ah ok great -- so I just need to commit some actual change to each of those files. thanks!

[13:59:01.0000] <heycam>
MikeSmith, yeah the use of the revision numbers in the test slides isn't great. we won't be using them for future test suites.

[13:59:02.0000] <MikeSmith>
OK

[14:00:00.0000] <MikeSmith>
and yeah, sorry, but I think making some update to each of the files and then re-checking them in is the only way

[14:10:00.0000] <heycam>
MikeSmith, that's no problem

[14:10:01.0000] <MikeSmith>
ok

[15:32:00.0000] <Hixie>
othermaciej: i just noticed the link to the CP for -127 on the issue-status page is broken (points to a -129 CP if i'm not mistaken)

[15:34:00.0000] <othermaciej>
Hixie: ok, I'll look into it

[15:51:00.0000] <TabAtkins>
Hixie: Could you fix your blog's site heading to point back to the homepage?  Right now it's just underlined and curser-pointing plain text, which is *really annoying* to interact with.

[15:51:01.0000] <Hixie>
did the xbl break? 'doh

[15:51:02.0000] <Hixie>
d'oh een

[15:51:03.0000] <TabAtkins>
It's never worked in my memory.

[15:52:00.0000] <Hixie>
it worked in mozilla many years ago

[15:52:01.0000] <Hixie>
i should fix the styling on my blog in general

[15:52:02.0000] <TabAtkins>
If you're overriding it with xbl, at least make the default rendering an <a>.

[15:52:03.0000] <TabAtkins>
s/rendering/tree or whatever/

[15:52:04.0000] <Hixie>
well it was just a page to fool around with, not ever a serious page

[15:52:05.0000] <Hixie>
i'll add "redesign site" to my todo list

[15:52:06.0000] <TabAtkins>
Still, it trips me up *every time* I visit.  ^_^

[15:53:00.0000] <Hixie>
i haven't blogged in forever, you can just not visit :-)

[15:53:01.0000] <TabAtkins>
I don't know that!

[15:53:02.0000] <TabAtkins>
also: blog more.

[15:53:03.0000] <TabAtkins>
note to self: blog more too.

[15:53:04.0000] <Hixie>
i fear that if i blogged it'd all just be me ranting

[15:53:05.0000] <Hixie>
e.g. about julian's latest CPs

[15:53:06.0000] <TabAtkins>
Ranting is interesting.

[15:54:00.0000] <TabAtkins>
And it gives people like cssquirrel something to do.

[15:54:01.0000] <Hixie>
rofl, i just got to the mail where mark suggested that to make the pingback spec more reliably available, i should move it from hixie.ch to whatwg.org

[15:55:00.0000] <TabAtkins>
Hosted on the same server, right?

[15:55:01.0000] <Hixie>
it's the same web server, same dns servers, and same registrant.


2010-11-30
[16:02:00.0000] <erlehmann>
TabAtkins, I asked the alpha gradients question to several people at an extended family gathering. most “non-IT” people initially insist that while the description “50% translucent blue” is understandable (if you have some opaque reference blue), “fully transparent” is something that neither should nor could not be assigned a color in some meaningful way.

[16:03:00.0000] <Dashiva>
Fully transparent black is a rather amusing concept

[16:03:01.0000] <TabAtkins>
That matches my thoughts exactly, erlehmann.  The fact that "transparent" has a color in the standard rgba syntax is an accident of notation, and shouldn't be considered meaningful imo.

[16:04:00.0000] <Dashiva>
The downside is that the IPU is no longer a paradox

[16:04:01.0000] <othermaciej>
it's a coordinate singularity

[16:04:02.0000] <erlehmann>
indeed

[16:05:00.0000] <TabAtkins>
Anyway, my mind's made up on the matter.  We use premultiplied in CSS transitions and gradients, and that's that.

[16:05:01.0000] <erlehmann>
And this is why the common sense approach — linear transitioning each value, but having several colors that look transparent, thus using "fully transparent red" when the gradient includes red and "fully transparent blue" — breaks down as soon as we allow that gradients can have more than two control points: It is simply not possible to go from red to transparent to blue then while conforming to our intuition regarding hues.

[16:05:02.0000] <TabAtkins>
Right.

[16:06:00.0000] <TabAtkins>
I don't even want to consider how you would apply that approach to a mesh gradient.

[16:06:01.0000] <erlehmann>
TabAtkins, The end of the story was rather satisfying: My brother sketched a a circle with hue transitions around the border and a transparent center point; thus treating the hue as angle and transparency as radius. It was obvious that using simple vector addition, we could go from every point to every other one and adding more dimensions would preserve this capability.

[16:06:02.0000] <erlehmann>
And I think sketching out that colorspace further gave us premultiplying. ;)

[16:07:00.0000] <TabAtkins>
Yeah, it does.

[16:07:01.0000] <TabAtkins>
In hsla, the premultiplied space is a hypercone.

[16:07:02.0000] <TabAtkins>
(It's a hyper-triangular prism or whatever in rgba space, but same deal.)

[16:10:00.0000] <Hixie>
erlehmann: wouldn't you go red -> transparent red -> transparent blue -> blue ?

[16:10:01.0000] <bckenny>
yes, premultiplied alpha has been the only sane way to do it for like 25 years now

[16:10:02.0000] <bckenny>
the only problem is precision, but graphics libraries shouldnt be filtering on 8 bit linear color anyway...

[16:10:03.0000] <TabAtkins>
Hixie: The point is that having to explicitly put in *two* transparent colors is silly.

[16:11:00.0000] <TabAtkins>
linear-gradient(red, rgba(255,0,0,0) 50%, rgba(0,0,255,0) 50%, blue) is ridiculous.  It should just be linear-gradient(red, transparent, blue)

[16:12:00.0000] <Hixie>
no disagreement from me there

[16:12:01.0000] <erlehmann>
Hixie, it is not only weird notation, you also cannot express something that from intuition has 3 control points reliably with that — as soon as something has alpha, all is lost.

[16:12:02.0000] <erlehmann>
so for opaque: red -> green -> blue i can use 3 points. but for transparent i'd need four. weird, wouldn't it be?

[16:13:00.0000] <Hixie>
well we could certainly make the browsers magically expand "transparent" to two colours in a list of colours like that

[16:14:00.0000] <erlehmann>
DON'T. ;_;

[16:14:01.0000] <TabAtkins>
We could.  Or we could just work in premultiplied space, where that comes for free.

[16:14:02.0000] <Hixie>
sounds good to me!

[16:14:03.0000] <TabAtkins>
(And the "auto-expanding" doesn't work for gradients with non-colinear color-stops, like mesh gradients.)

[16:15:00.0000] <Hixie>
(how does it just work in premultiplied space?)

[16:15:01.0000] <TabAtkins>
Hixie: I've already suggested it on the list.  Moz and Webkit are in favor.  ^_^

[16:15:02.0000] <erlehmann>
TabAtkins, is this referring (or “refering”) to canvas gradients? <TabAtkins> Anyway, my mind's made up on the matter.  We use premultiplied in CSS transitions and gradients, and that's that.

[16:16:00.0000] <TabAtkins>
Hixie: In premultiplied, the space of possible colors shrink as the alpha drops, with transparent itself being the only possible color at alpha=0.  The particular transformation of the color-space that this implies means that a straight line from a solid color to transparent always passes through equal-hued variants of the color.

[16:16:01.0000] <Philip`>
(Even if you don't want it to pass through equal-hued variants :-p )

[16:17:00.0000] <erlehmann>
it's my brother's napkin-sketch circle, only in THREE DEE!

[16:17:01.0000] <erlehmann>
Philip`, think outside the cone!

[16:17:02.0000] <TabAtkins>
(Properly, the number of possible colors doesn't shrink, but the range you can specify does.  If you specify colors with discrete components like integers, it reduces the total number of colors, but theoretically there is still the same amount until you hit alpha=0.)

[16:17:03.0000] <erlehmann>
oh wait, it's 4D.

[16:17:04.0000] <Hixie>
so going from red to blue via transparent will still have you darkening the colour in the middle?

[16:18:00.0000] <TabAtkins>
Hixie: No, it looks exactly like it would if you did the two-transparent version.

[16:19:00.0000] <Hixie>
i'll take your word for it :-)

[16:19:01.0000] <TabAtkins>
Particularly, things like a transition from white->transparent composited on a white background will be properly invisible, rather than going to a gray in the middle.

[16:19:02.0000] <Hixie>
well that sounds like a win

[16:19:03.0000] <TabAtkins>
Hixie: I can draw you diagrams that would make it clearer, but IRC-sized soundbites are hard to communicate color math through.

[16:19:04.0000] <Hixie>
no need, i have every confidence in your abilities :-)

[16:20:00.0000] <Hixie>
/me goes back to trying to work out how navigation should work during load

[16:20:01.0000] <TabAtkins>
Heh, I just properly learned my color-math last week.  Before this I was trusting *Boris's* abilities, which admittedly is a pretty good idea in general.

[16:20:02.0000] <erlehmann>
Hixie, basically, the alpha is the lower bound for the rest of the values, since every value gets multiplied with the alpha. you can see, 50% transparent dark-gray should not occur naturally.

[16:21:00.0000] <TabAtkins>
Nonono, 50% transparent dark gray is perfectly fine.

[16:21:01.0000] <erlehmann>
I mean in that whitey transition.

[16:22:00.0000] <TabAtkins>
Oh, okay.

[16:22:01.0000] <erlehmann>
white -> transparent

[16:22:02.0000] <TabAtkins>
But still, saying "the alpha is the lower bound for the rest of the values" isn't right.  First, it's an upper bound, and second, it's not actually a bound.

[16:22:03.0000] <erlehmann>
oh.

[16:22:04.0000] <TabAtkins>
Not in the way that saying that naively implies.

[16:22:05.0000] <jamesr__>
AryehGregor: yt?

[16:22:06.0000] <AryehGregor>
jamesr__, yes.

[16:22:07.0000] <AryehGregor>
(briefly)

[16:23:00.0000] <TabAtkins>
Yes, the 4-tuple representing a premultiplied color has no components higher than the alpha.  But that's a notational convenience.

[16:23:01.0000] <erlehmann>
TabAtkins, I retract my statement and state the opposite. And yes, I relied on custom of notation.

[16:23:02.0000] <TabAtkins>
It doesn't imply that any colors are omitted.  A color like rgba(0,0,255,.5) is just represented as (0,0,127.5,.5) in the premultiplied tuple, but it represent the same full-blue color.

[16:24:00.0000] <Hixie>
so how do you represent rgb(0,0,127.5) with 50% transparency?

[16:24:01.0000] <TabAtkins>
(half-transparent half-full blue, like rgba(0,0,127,.5), is instead written as (0,0,63.5,.5).)

[16:24:02.0000] <Hixie>
ah

[16:24:03.0000] <erlehmann>
ba-dum. tssss.

[16:25:00.0000] <Hixie>
so how do you know what colour you're representing when alpha=0?

[16:25:01.0000] <AryehGregor>
You're representing "transparent".

[16:25:02.0000] <TabAtkins>
You're *not* representing a color - that's the point.

[16:25:03.0000] <TabAtkins>
transparent is hueless.

[16:25:04.0000] <AryehGregor>
The other channels are fairly useless in that case, after all.

[16:25:05.0000] <TabAtkins>
So, as an example of why this is good, say you're transitioning from blue to transparent.

[16:26:00.0000] <TabAtkins>
Start by converting to components - rgba(0,0,255,1) and rgba(0,0,0,0).

[16:26:01.0000] <TabAtkins>
Then convert to premultiplied tuples - (0,0,255,1) and (0,0,0,0).

[16:26:02.0000] <erlehmann>
Hixie, on the risk of being corrected again: it's the tip of the hypercone. all unmultiplied RGB colors with full transparency are mapped to it.

[16:26:03.0000] <TabAtkins>
Then linearly interpolate.

[16:27:00.0000] <TabAtkins>
Halfway through, you have the premultiplied color (0,0,127.5,.5).  Convert that back to rgba space by dividing each component by the alpha, and you find that this is the representation for the color rgba(0,0,255,.5).

[16:27:01.0000] <Philip`>
One problem is when you need to convert from premultiplied to non-premultiplied, for (0,0,0,0) you have to arbitrarily pick some non-premultiplied colour which is typically (0,0,0,0) but there's no justification for that

[16:27:02.0000] <Hixie>
so if you're going from white to transparent, why don't you go through grey? isn't one of the interpolated colours going to be (127,127,127,0.5)?

[16:27:03.0000] <AryehGregor>
Hixie, yes, but in postmultiplied form that's (255, 255, 255, 0.5).

[16:28:00.0000] <AryehGregor>
You only use the premultiplied form for interpolation, not rendering.

[16:28:01.0000] <Hixie>
/me hugs the html parser like a safety blanket

[16:28:02.0000] <AryehGregor>
Careful, it's spiky.

[16:28:03.0000] <TabAtkins>
Hixie: Yeah, it will.  Now, convert that tuple back to rgba by dividing each component by the alpha.

[16:28:04.0000] <TabAtkins>
(You converted from rgba to premult by multiplying each component by the alpha, so dividing is the obvious inverse transform.)

[16:29:00.0000] <AryehGregor>
Now, what happens when you interpolate between two colors where an intermediate color is imaginary?  I.e., it doesn't physically exist and can't be displayed?  Someone asked that on the list, and I thought it was a cool question, although it's kind of irrelevant to standard monitors.

[16:29:01.0000] <AryehGregor>
I guess the UA rounds to the nearest existing color.  I wonder how that would look in practice, though.

[16:29:02.0000] <TabAtkins>
AryehGregor: The obvious thing.  You get an imaginary color at some points, which is mapped to an in-gamut color, usually by clipping component-wise.

[16:29:03.0000] <bckenny>
wait wait, no need to translate back to unpremultiplied

[16:30:00.0000] <TabAtkins>
AryehGregor: Actually, you often use the premultiplied for rendering as well, because it actually simplifies the compositing math.

[16:30:01.0000] <erlehmann>
bckenny, ?

[16:30:02.0000] <bckenny>
(127,127,127,0.5) is half transparent, so when its composited it takes half of the background components and adds 127 to them

[16:30:03.0000] <TabAtkins>
However, we're used to seeing colors in the rgba space, so it's useful to convert back when talking about colors.

[16:30:04.0000] <AryehGregor>
Okay, well, I mean that what's displayed is the same as what you get if you specify rgba(255, 255, 255, 0.5) in CSS.

[16:30:05.0000] <TabAtkins>
Yes.

[16:30:06.0000] <bckenny>
compositing is color =  background * (1-alpha) + foreground

[16:31:00.0000] <erlehmann>
keep premultiplied for compositing, win price!

[16:31:01.0000] <bckenny>
so over white, white to transparent would stay white, but over black it would indeed be grey halfway through...but thats what half transparent white over black looks like

[16:32:00.0000] <bckenny>
ah, sorry, TabAtkins was saying the same thing simultaneously

[16:42:00.0000] <TabAtkins>
AryehGregor: Unfortunately, Alan Gresley (the guy who asked the question about imaginary colors) doesn't really know what he's talking about.  I answered his questions (they're all trivial), but he's very confused about how colors work.

[16:42:01.0000] <MikeSmith>
commits feed at CIA.vc for the spec appears to be working now

[16:42:02.0000] <MikeSmith>
http://cia.vc/stats/project/html-spec/.rss

[16:43:00.0000] <MikeSmith>
I guess I'll need to tweak it to filter only on one of the files

[16:43:01.0000] <MikeSmith>
because the way it is now, it will send duplicates each time

[16:55:00.0000] <jamesr__>
AryehGregor: sorry ran off. still there?

[16:56:00.0000] <jamesr__>
i'm seeing some really slow script on wikipedia.org and want to report it but dunno where

[17:00:00.0000] <TabAtkins>
Pretty sure he's gone by now, jamesr__ - Aryeh's on east coast time.

[17:01:00.0000] <jamesr__>
it's only 8pm :P

[17:01:01.0000] <gsnedders>
It's only 1am.

[17:01:02.0000] <gsnedders>
There again, I'm a student, so what do people expect? :P

[17:05:00.0000] <nessy>
it's midday, don't know what you're talking about!

[17:11:00.0000] <Hixie>
Philip`: yt?

[17:54:00.0000] <MikeSmith>
I have http://twitter.com/html5 working again

[17:54:01.0000] <Hixie>
cool

[17:55:00.0000] <Hixie>
were you using my code before?

[17:55:01.0000] <Hixie>
and if so, does that mean your new code is a drop-in replacement? :-0)

[17:55:02.0000] <Hixie>
s/0//

[19:06:00.0000] <oojacoboo>
anyone know if <figcaption> can be used block level with nested elements ?

[19:07:00.0000] <oojacoboo>
I am looking to use it in a case with a legend

[19:07:01.0000] <oojacoboo>
where I have a figure with number representing sections of a screenshot, and want to use <figcaption> with an ordered list to describe the points of the figure

[19:24:00.0000] <MikeSmith>
feeling an earthquake just now in Tokyo

[19:24:01.0000] <MikeSmith>
pretty decent size

[19:35:00.0000] <aaaazzz>
MikeSmith: "6.9 earthquake hits 502 miles South of TOKYO, Japan "

[19:35:01.0000] <aaaazzz>
MikeSmith: http://earthquake.usgs.gov/earthquakes/recenteqsww/Maps/region/Asia.php

[19:35:02.0000] <oojacoboo>
ha, wow

[19:36:00.0000] <oojacoboo>
I was living in Taipei a few months back and we'd get earthquakes all the time

[19:36:01.0000] <oojacoboo>
once every month or so

[19:36:02.0000] <MikeSmith>
aaaazzz: thanks

[19:37:00.0000] <MikeSmith>
that thing must have been pretty strong in Okinawa

[19:37:01.0000] <aaaazzz>
note the big red square. that's an earthquake in the last few minutes.

[19:37:02.0000] <oojacoboo>
6.9 is decent, but not for Japan, the buildings there handle that with ease

[19:37:03.0000] <oojacoboo>
probably not much damage

[19:38:00.0000] <MikeSmith>
oojacoboo: I think there are earthquakes in Japan pretty much everyday; just that most of them are not very strong at all

[19:38:01.0000] <oojacoboo>
it's like that most all places on faults

[19:38:02.0000] <oojacoboo>
1-2-3-4 scale quakes

[19:39:00.0000] <oojacoboo>
you can start to feel it in the upper 4s and 5s, of course, depending on the depth of the quake itself

[21:14:00.0000] <JonathanNeal>
Anyone here good with javascript and ranges?

[00:21:00.0000] <MikeSmith>
http://p2pdns.baywords.com/2010/11/30/hello-world/

[00:44:00.0000] <Dashiva>
Will they be leveraging the web of trust?

[01:18:00.0000] <jgraham>
Aren't we onto the  Web 2.0 of Trust now? The one where you trust facebook for everything?

[02:04:00.0000] <Workshiva>
jgraham: I think that requires Semantic Web 2.0 to work

[02:07:00.0000] <jgraham>
hsivonen: BTW there is now an "official" call for comments about testharness.js on public-html-testsuite

[02:12:00.0000] <hsivonen>
jgraham: thanks

[02:17:00.0000] <hsivonen>
my computer use experience became so much better after I patched libgtk-vnc. I guess I should attempt patching libvte again

[02:18:00.0000] <hsivonen>
maybe I should try patching xserver-xorg-input-wacom, too

[02:27:00.0000] <Philip`>
Hixie: Pong

[02:59:00.0000] <MikeSmith>
hsivonen: so we've gotten multiple reports about validator error messages for src-less script elements being confusing/misleading

[03:00:00.0000] <MikeSmith>
specifically, for the case where you have a script element with an inline script

[03:00:01.0000] <MikeSmith>
that is, non-empty

[03:00:02.0000] <MikeSmith>
but you have, e.g., a charset attribute on it

[03:20:00.0000] <annevk>
strings over enums

[03:20:01.0000] <annevk>
it does make some sense

[03:35:00.0000] <hsivonen>
MikeSmith: well, I suppose hacking Jing would be too hard

[03:35:01.0000] <hsivonen>
MikeSmith: so I guess this needs to move to assertions.sch/Assertions.java :-(

[03:35:02.0000] <MikeSmith>
yeah

[03:35:03.0000] <MikeSmith>
hsivonen: I think that's the easiest thing

[03:35:04.0000] <MikeSmith>
I'm working on it now

[03:44:00.0000] <MikeSmith>
hsivonen: please try <script defer>var foo;</script> or something at http://www.w3.org/html/check and let me know what you think

[03:44:01.0000] <MikeSmith>
or async or charset

[03:48:00.0000] <hsivonen>
MikeSmith: looks good

[03:48:01.0000] <MikeSmith>
/me steps away for a bit

[03:48:02.0000] <MikeSmith>
ah cool

[03:48:03.0000] <MikeSmith>
I'll send you a patch to review

[03:48:04.0000] <hsivonen>
ok

[03:48:05.0000] <MikeSmith>
thanks

[03:48:06.0000] <hsivonen>
/me wonders how to do printf debugging with X input drivers

[03:49:00.0000] <hsivonen>
maybe there's a function for dumping stuff in the X server log or something

[04:04:00.0000] <hsivonen>
http://timesofindia.indiatimes.com/cms.dll/xml/uncomp/articleshow?msid=167551 gives me the YSoD (link from Hixie's anti-XSLT blog post from years ago)

[04:05:00.0000] <annevk>
"non-xslt top-level element with null namespace uri"

[04:05:01.0000] <annevk>
good times

[04:06:00.0000] <annevk>
"That is not possible. Developers would fix the mistake before it hits users."

[04:10:00.0000] <jgraham>
Maybe the error message should read "Something impossible just happened. If you have any feedback on our handling of this issue, please contact tbray⊙tc"

[04:12:00.0000] <annevk>
"Also, the author of this site is a bozo."

[04:34:00.0000] <annevk>
"and had several off-line meetings with the HTML5 chairs" -- http://www.w3.org/QA/2010/11/progress_in_lyon_-_tpac_2010.html -- such usage of "offline" always strikes me as weird

[04:36:00.0000] <annevk>
"One piece of advice from the AB was to support our current policy of having dues paid in three currencies; even as they advised that this should be reviewed on a regular basis."

[04:36:01.0000] <annevk>
?!

[04:39:00.0000] <jgraham>
You have to pay 1/3 in each currency?

[04:40:00.0000] <annevk>
no, depends on which W3C host you're associated with

[04:41:00.0000] <annevk>
I just don't see how the above is advice

[04:43:00.0000] <hsivonen>
annevk: is trimming whitespace before comparing encoding names an HTML thing or a Web Platform thing?

[04:43:01.0000] <hsivonen>
that is, should I fix it in the HTML parser or in Gecko's charset alias service?

[04:43:02.0000] <annevk>
that is a good question

[04:44:00.0000] <annevk>
and I don't really know; guess it depends on what happens in XML

[04:44:01.0000] <annevk>
or you can maybe test it with charset=" ..." in HTTP, but Gecko had issues with quotes there...

[04:45:00.0000] <hsivonen>
what about @charset in CSS?

[04:46:00.0000] <annevk>
yeah

[04:46:01.0000] <annevk>
though I guess it ought to be tested in IE

[04:46:02.0000] <annevk>
and I don't have Windows yet so I cannot help

[04:48:00.0000] <hsivonen>
ok.

[04:50:00.0000] <jgraham>
annevk: The case shifting for getAttribute et. al. should happen for any node in a HTML document, right?

[04:51:00.0000] <annevk>
yes

[04:51:01.0000] <hsivonen>
no, no

[04:51:02.0000] <annevk>
oh wait

[04:51:03.0000] <jgraham>
So how does one deal with foreign content where the name is case shifted

[04:51:04.0000] <hsivonen>
only if the element is in the HTML namespace

[04:51:05.0000] <annevk>
rtfs instead

[04:51:06.0000] <annevk>
http://dvcs.w3.org/hg/domcore/raw-file/tip/Overview.html

[04:51:07.0000] <jgraham>
Ah, somehow I missed the first clause

[04:52:00.0000] <jgraham>
Sorry for being sumb

[04:52:01.0000] <jgraham>
*dumb

[06:03:00.0000] <hsivonen>
does anyone happen to have CSS @charset tests with spaces inside the quoted string?

[06:03:01.0000] <hsivonen>
(I could make some, but I think I've configured my servers to send a HTTP-level charset for CSS...)

[06:06:00.0000] <annevk>
you could check if Content-Type: text/html;charset="utf-8" works in IE and then play with that

[06:09:00.0000] <hsivonen>
I think I'll make a zip file of my test and run it locally on Windows

[06:11:00.0000] <hsivonen>
Gecko rejects CSS with bogus @charset

[06:11:01.0000] <hsivonen>
Chrome uses the default charset

[06:13:00.0000] <hsivonen>
annevk: IE9 doesn't trim spaces in CSS @charset

[06:14:00.0000] <hsivonen>
and rejects the sheet

[06:14:01.0000] <hsivonen>
annevk: I guess that makes the behavior of Opera 11 beta a bug

[06:14:02.0000] <hsivonen>
(Opera 11 beta trims space)

[06:19:00.0000] <annevk>
hmm

[06:19:01.0000] <annevk>
I guess only case-insensitive matching is a platform thing then

[06:19:02.0000] <annevk>
does Opera 11 beta no longer do UTS22?

[06:20:00.0000] <annevk>
in other news

[06:20:01.0000] <annevk>
if you define an attribute for the web platform

[06:20:02.0000] <annevk>
and its setter sometimes throws and only accepts certain values

[06:21:00.0000] <annevk>
but eventually the attribute "becomes" that value

[06:21:01.0000] <annevk>
it would be nice if that didn't require a separate variable

[06:21:02.0000] <annevk>
e.g. http://dev.w3.org/2006/webapi/XMLHttpRequest-2/#the-withcredentials-attribute has a separate "credentials flag"

[06:22:00.0000] <annevk>
which is really just reflecting the attribute

[06:22:01.0000] <annevk>
could I say for step 4 "set the withCredentials attribute to the given value"

[06:23:00.0000] <annevk>
if you read that literally I guess you would get recursion...

[06:23:01.0000] <annevk>
bah

[06:25:00.0000] <annevk>
set the withCredentials attribute value to the given value makes it work, I think

[06:25:01.0000] <annevk>
Hixie did something like that in the <canvas> API

[06:35:00.0000] <annevk>
heycam, maybe Web IDL should have support for "string enums"

[06:35:01.0000] <annevk>
heycam, i.e. attributes that accept a limited amount of string values

[06:36:00.0000] <annevk>
heycam, it's an extensible pattern  that is used quite a lot

[06:57:00.0000] <hsivonen>
is hixie.ch down?

[06:57:01.0000] <hsivonen>
ah just really slow

[07:42:00.0000] <annevk>
heycam, I emailed public-script-coord with somewhat more context

[07:52:00.0000] <annevk>
RESOLVED: The TAG endorses the health warning "If you deploy a 30x Location: C#D, then be aware that anyone who creates a URI A#B, might be inconvenienced (since there are no fragment combination rules)."

[07:52:01.0000] <annevk>
oh god

[07:52:02.0000] <annevk>
this is the first time I have seen a RESOLVED from the TAG

[07:52:03.0000] <annevk>
does this mean they don't do much?

[07:54:00.0000] <webr3>
no they were just jammed in a corner and that was the best all round advise for the web - real solution would be to drop frags from HTTP alltogether, Location should be an absolute or relative-uri and not oen with clientside identifiers in it

[07:55:00.0000] <webr3>
hard to fix deployed mistakes, so can only offer best practise advice in those circumstances

[07:55:01.0000] <webr3>
/me imo

[07:56:00.0000] <zcorpan>
better to tell people that they should know that they're inconveniencing other people (how they're being inconvenienced i have no idea)

[07:57:00.0000] <annevk>
the problem is that fragment identifiers are removed from the request

[07:57:01.0000] <annevk>
imo

[07:57:02.0000] <annevk>
and how they work with Location will become interoperable over time, pretty sure of that

[07:58:00.0000] <webr3>
but they were created for the client, specified by the mediattype and so that no protocol or anything on the web could have juristiction over them, if you need server to know use one of the other uri parts - like query params

[07:59:00.0000] <webr3>
if you make them webwide, then they are pointless and may as well just be dropped in favour of querystring only

[07:59:01.0000] <webr3>
webwide as in servers and protocols have knowledge

[07:59:02.0000] <annevk>
querystrings don't have the same features

[08:00:00.0000] <annevk>
but I guess if you still believe in content negotiation and such this all works differently

[08:02:00.0000] <webr3>
what features are missing from querystring but in fragments? (other than the clientside per mediatype nature of them)

[08:02:01.0000] <annevk>
in particular, you want to know the fragment identifier on the server if you moved from largedocument#foo to just foo

[08:02:02.0000] <annevk>
so links remain working

[08:05:00.0000] <webr3>
aye that's a problem for sure

[08:05:01.0000] <webr3>
/me that I've avoided thus far by not makign hugedocument#foo in the first place :p

[08:06:00.0000] <annevk>
no blog with #comments?

[08:07:00.0000] <webr3>
#recentcomments and /all-comments

[08:09:00.0000] <webr3>
I see the problem btw, have done for ages, but think solving it in this way will create more problems, for instance how long before my blog post is just the post, and comments are pull in from other uris (and on other sites) dynamically depending on the view of the page

[08:09:01.0000] <webr3>
and/or client considerations

[08:51:00.0000] <Philip`>
jgraham: With canvas tests, I want to wait for onload and then set some variables (canvas, ctx) which all the subsequent code uses

[08:52:00.0000] <Philip`>
For synchronous tests, I think I can just do "test(function() { var canvas = ...; subsequent code });" and that's fine

[08:52:01.0000] <Philip`>
but for async tests I don't see an easy way to do that

[08:52:02.0000] <jgraham>
Philip`: at the moment the harness assumes that all test objects have been created before onload

[08:53:00.0000] <jgraham>
so you would have to do 

[08:53:01.0000] <jgraham>
var t = async_test()

[08:53:02.0000] <jgraham>
addEventListener("load", function() {t.step(function() {/*do the setup here*/})}, false)

[08:53:03.0000] <jgraham>
or so

[08:54:00.0000] <jgraham>
Unless I am missing your point

[08:54:01.0000] <jgraham>
If you have a better way, I am open to suggestions

[08:58:00.0000] <Philip`>
Hmm, including the setup code that'd be like addEventListener("load", function() { t.step(function() { var canvas = ...; img.onload = t.step(function() { use canvas, img; t.done(); }); } }, false);, I think

[09:00:00.0000] <Philip`>
Maybe it'd be nice if I could write "var t = test(function() { var canvas = ...; img.onload = t.step(function() { use canvas, img; t.done(); }); });"

[09:01:00.0000] <Philip`>
Oh, actually, synchronous test doesn't wait for onload either

[09:01:01.0000] <Philip`>
I think

[09:03:00.0000] <Philip`>
so I'll have to make almost every test asynchronous (since they need to wait for images and fonts etc to load)

[09:05:00.0000] <jgraham>
Yeah, sync tests really are sync, they just run straight away

[09:08:00.0000] <jgraham>
I suppose one could have some hack like "if you pass an async test a function(){} it gets run on onload, and if that test calls a step() before onload() it is an error"

[09:08:01.0000] <jgraham>
s/onload/load/g

[09:08:02.0000] <jgraham>
and remove some ()

[09:12:00.0000] <jgraham>
(does that sound like it would be useful?)

[09:13:00.0000] <Philip`>
Depends on whether running after onload is far more common than the alternative, I guess

[09:14:00.0000] <Philip`>
Hmm, when I said "img.onload = t.step(function() { use canvas, img; t.done(); });" I think that was wrong

[09:14:01.0000] <Philip`>
and it needs "img.onload = function() { t.step(function() { use canvas, img; t.done(); }); };"

[09:15:00.0000] <jgraham>
Well I guess there might be a large class of tests for which some resource is needed after onload

[09:15:01.0000] <Philip`>
Could t.step return a function that can be called later to execute the test step, rather than executing it immediately?

[09:15:02.0000] <jgraham>
It could

[09:15:03.0000] <Philip`>
so that onload = t.step(function() ...) would do the right thing

[09:15:04.0000] <jgraham>
Or there could be a different method for that

[09:16:00.0000] <jgraham>
t.step_func or something

[09:16:01.0000] <Philip`>
In what cases is the current t.step useful?

[09:16:02.0000] <jgraham>
I agree it seems like an appealing design

[09:18:00.0000] <Philip`>
/me can't think of any cases where he'd want t.step to execute the step immediately

[09:19:00.0000] <jgraham>
I guess it is always trivial to get the other behaviour, just by doing t.step(function() {})()

[09:20:00.0000] <jgraham>
So, yes, that seems like an improvement

[09:20:01.0000] <jgraham>
I guess I should email public-html-testsuite

[09:21:00.0000] <jgraham>
Since it is a breaking change

[09:22:00.0000] <Philip`>
I suppose there's no fundamental difference, it just seems more syntactically convenient to get a test-happy wrapped function you can use in async event handlers directly

[09:24:00.0000] <Philip`>
Then I can do var t = async_test("%(name)s"); on_event(window, "load", t.step(function() { ...; t.done(); })); which isn't terribly verbose

[09:27:00.0000] <jgraham>
Indeed

[09:34:00.0000] <Philip`>
"people who have already submitted tests" - there's less than 100 tests currently using .step, and hypothetically probably at least two orders of magnitude more tests that need to be written in the future using these functions, so it doesn't seem particularly important to maintain backward compatibility yet

[09:48:00.0000] <JonathanNeal>
Anyone here good with createRange, selections, etc?

[10:06:00.0000] <TabAtkins>
Ranges and selections confuse me.

[10:12:00.0000] <JonathanNeal>
TabAtkins, me too.

[10:12:01.0000] <JonathanNeal>
Yesterday I decided I wanted to write a wysiwyg.

[10:12:02.0000] <TabAtkins>
Now you have many problems.

[10:18:00.0000] <Workshiva>
Now you have problem{2,}

[10:22:00.0000] <JonathanNeal>
I like the word "issues"

[10:23:00.0000] <Workshiva>
/me ponders the value of changing <b> into <span> with font-weight: bold;

[10:24:00.0000] <TabAtkins>
Workshiva: From where?

[10:25:00.0000] <Workshiva>
In this page I'm working on

[10:26:00.0000] <Workshiva>
Well, actually, I'm moving a <th> and <td> out of a table, and to preserve the visuals I need to make the part from the th bold somehow

[10:27:00.0000] <Workshiva>
Some people, when presented with this problem think "I know, I'll use <b>". Now they have change comments.

[10:34:00.0000] <beowulf>
/me doesn't understand Workshiva's problem

[10:50:00.0000] <hsivonen>
TabAtkins: waht's an effective way to report a bug like https://bugzilla.mozilla.org/show_bug.cgi?id=614864 to people responsible for Google search front end code?

[11:01:00.0000] <TabAtkins>
hsivonen: I don't know the proper official way.  I just use internal Buzz, and it finds its way to the right people.  ^_^

[11:02:00.0000] <TabAtkins>
I'll push it along, and also ask for a public way to report it and get back to you.

[11:02:01.0000] <hsivonen>
TabAtkins: thanks

[11:03:00.0000] <jgraham>
othermaciej: I haven't fully understood your email to public-html-testsuite, but it seems a bit like the "doctor, doctor, it hurts when I do this" joke

[11:03:01.0000] <othermaciej>
jgraham: look at the test I cited

[11:04:00.0000] <othermaciej>
jgraham: is there a way to do it "right", but still report each assertion independently in the output?

[11:04:01.0000] <jgraham>
You're not supposed to create multiple independent tests where the result of one depends on dom manipulation in another

[11:04:02.0000] <othermaciej>
I know

[11:04:03.0000] <othermaciej>
that's why I assume I did it "wrong"

[11:05:00.0000] <othermaciej>
but I like the output produced by my version a lot more than what happens if I do it in the intended way

[11:05:01.0000] <jgraham>
If they are logically independent tests they should have seperate test() functions

[11:05:02.0000] <othermaciej>
in fact, I don't see anything wrong with the way I did it, other than grungy syntax and failing to match the intended philosophy of the test framework

[11:06:00.0000] <othermaciej>
what if they are dependent, but I want to report each result independently?

[11:06:01.0000] <jgraham>
"don't do that"

[11:06:02.0000] <jgraham>
/me -> food

[11:06:03.0000] <jgraham>
biab

[11:06:04.0000] <othermaciej>
are you saying my use case is invalid?

[11:07:00.0000] <othermaciej>
I don't think having a single result line that says "The second half of the id tests, because at this point I started doing DOM mutation" would improve the quality of my tests

[11:07:01.0000] <JonathanNeal>
Heck yes, finally did it.

[11:07:02.0000] <othermaciej>
and even for fully independent tests, having to wrap it in test() { function() { assert_equals(... seems like needless verbiage

[11:40:00.0000] <jgraham>
othermaciej: Given the simplicity of your DOM manipulations, your test is probably fine

[11:41:00.0000] <othermaciej>
jgraham: besides my theoretical problem with going against the philosophy (which I'm satisfied to ignore), I think the syntax for doing a series of assertions and reporting on each independently is a bit overly verbose

[11:42:00.0000] <othermaciej>
for this test at least, I would have found it handy to be able to say test_equals(function() { return "foo"; }, "foo");

[11:43:00.0000] <jgraham>
othermaciej: Possibly, but that seems to be optimising for your specific case

[11:43:01.0000] <othermaciej>
well, I expect any script test with many assertions would benefit

[11:43:02.0000] <othermaciej>
almost any non-trivial script test is likely to have a dozen or so assertions which are worth reporting independently

[11:43:03.0000] <jgraham>
It would have the side effect of moving all the calls to e.g. setAttribute out of the try/catch

[11:43:04.0000] <othermaciej>
the other possibility is to report each assertion, not just each test

[11:44:00.0000] <othermaciej>
that would have also satisfied my goals and would be syntactically nicer

[11:44:01.0000] <jgraham>
othermaciej: Not necessarily e.g. Opera house style is one test/file

[11:44:02.0000] <othermaciej>
doing this set of id tests as one test per file would be a poor way to do it

[11:45:00.0000] <othermaciej>
it would be even more wastefully verbose

[11:45:01.0000] <jgraham>
Reporting each assertion seems very bad because, by design, the number of assertions can vary

[11:45:02.0000] <othermaciej>
WebKit style is to put related tests for one feature in one file

[11:45:03.0000] <jgraham>
It seems like you can get most of what you want by having an array of functions and running each in turn

[11:46:00.0000] <othermaciej>
what's the reason not to report each assertion?

[11:46:01.0000] <othermaciej>
I do not understand the benfit of running 100 assertions and reporting only one vague pass/fail result

[11:46:02.0000] <jgraham>
Because one assertion might not be meaningful on its own

[11:46:03.0000] <jgraham>
In this case it is

[11:46:04.0000] <othermaciej>
yes, I could invent something myself, but I would like the test framework to be good for this kind of test

[11:46:05.0000] <othermaciej>
I believe it is not

[11:46:06.0000] <jgraham>
But in a more complex case one assertion !== one pass

[11:47:00.0000] <othermaciej>
you asked for feedback

[11:47:01.0000] <jgraham>
othermaciej: Yes, I know :)

[11:47:02.0000] <othermaciej>
can you give me an example of an assertion that would not be worth reporting?

[11:48:00.0000] <jgraham>
e.g. if you are checking that part of the dom has a given structure and you do that in several stages

[11:48:01.0000] <jgraham>
e.g. first you check the number of child nodes for a given element

[11:49:00.0000] <Philip`>
http://philip.html5.org/tests/canvas/suite/tests/2d.state.saverestore.stackdepth.html does 512 assertions and it's probably not very interesting to know that it's passed 512 of them

[11:49:01.0000] <othermaciej>
why would it be bad to report which of those steps failed?

[11:49:02.0000] <jgraham>
then you check they have the expected tag names

[11:49:03.0000] <jgraham>
It does report which of those steps failed

[11:49:04.0000] <othermaciej>
or are you saying that in some cases it might not make sense to even run the later assertions?

[11:49:05.0000] <jgraham>
It doesn't even run them

[11:49:06.0000] <othermaciej>
I can see how that is a possibility, but I suspect it is the rare case, not the common case

[11:50:00.0000] <jgraham>
e.g. if you find that node x has 0 children there is no point in trying to find out what their tag names are

[11:50:01.0000] <jgraham>
and indeed if you do try you are likely to run into more problems

[11:51:00.0000] <jgraham>
(assuming you expected it to have > 0 for the test to pass)

[11:51:01.0000] <othermaciej>
we use assertion-style tests in WebKit (using a different harness) and I don't think we've ever had a serious problem with this

[11:51:02.0000] <othermaciej>
so I am skeptical that it is the common case

[11:51:03.0000] <othermaciej>
nontheless, if all steps of a multi-step test pass, it seems useful to report that they all passed

[11:51:04.0000] <othermaciej>
at the very least while developing the test, so you can confirm that all the assertions you expected to be run were run

[11:52:00.0000] <jgraham>
Well that is possible of course

[11:52:01.0000] <jgraham>
But it doesn't change the fact that, for your case, multiple test()s are the intended approach 

[11:53:00.0000] <othermaciej>
I agree that it is intended

[11:53:01.0000] <othermaciej>
I find it overly syntactically inconvenient

[11:53:02.0000] <othermaciej>
I think this type of test is not uncommon

[11:54:00.0000] <othermaciej>
while writing it, I saw sicking and weinig writing similar multi-assertion tests where it was worthwhile reporting each

[11:54:01.0000] <othermaciej>
(it was during TPAC)

[11:55:00.0000] <othermaciej>
sicking ended up wrapping it all in one test(), so you only get a single pass/fail result, which is unfortunate for anyone trying to use the test to find and fix bugs

[11:55:01.0000] <jgraham>
So, I am open to suggestions for API changes that would improve the situation

[11:55:02.0000] <othermaciej>
I suggested two possibilities

[11:55:03.0000] <othermaciej>
if you want, I can make them more concrete and detailed

[11:56:00.0000] <othermaciej>
(will post details on the list in that case)

[11:57:00.0000] <jgraham>
I think blurring the line between an assertion and a test() is the wrong approach. I think one test() === one thing that is reported to the top level harness

[11:57:01.0000] <jgraham>
and one assertion === one thing required for a test to pass

[11:58:00.0000] <jgraham>
Adding a more convenient way to run multiple sync tests is possible

[11:58:01.0000] <jgraham>
Although, in all honesty, I think async tests are more common

[11:59:00.0000] <othermaciej>
that may be so; I chose to make a sync test because it was easier

[11:59:01.0000] <othermaciej>
but HTML5 has a lot of DOM interfaces that can be tested sync

[11:59:02.0000] <othermaciej>
I expect there could be thousands of such tests

[12:00:00.0000] <jgraham>
I wouldn't expect they all can (or should) be tested with assert_equals though

[12:00:01.0000] <jgraham>
e.g. you might well want to use assert_readonly

[12:00:02.0000] <othermaciej>
no, but I expect they can all be tested with the assert_* functions provided

[12:00:03.0000] <jgraham>
So optimising for the specific case of assert_equals seems wrong

[12:01:00.0000] <othermaciej>
I think another way to state my issue is this: test() combines multiple purposes

[12:01:01.0000] <othermaciej>
- It is the exception-catching block that prevents the test framework itself from failing to report a result

[12:02:00.0000] <othermaciej>
- It is the unit of result reporting

[12:02:01.0000] <Dashiva>
"XHTML 1.0 - the first baby step toward a well-formed, valid web."

[12:02:02.0000] <Dashiva>
I guess there is some truth in this, since people will never write valid HTML if we don't force them :)

[12:02:03.0000] <othermaciej>
- It is the unit of stop-fail combination of assertions (such that if one fails you do not run the rest)

[12:03:00.0000] <Hixie>
Dashiva: XHTML proponents say that it's ok to send XHTML as text/html, so how is it different?

[12:03:01.0000] <Hixie>
it's more like "XHTML - another step towards ensuring that all pages are invalid"

[12:04:00.0000] <othermaciej>
for tests where it is useful to report each test assertion separately, having all those properties for one construct, but a separate construct for the assert, is inconvenient

[12:04:01.0000] <othermaciej>
I'll make some concrete proposals with worked examples

[12:04:02.0000] <othermaciej>
I agree that adding *only* test_equals would suck, but I think adding a test_* for each assert_* is one viable option

[12:05:00.0000] <Dashiva>
Hixie: It introduced an optional failure point by sending as application/xhtml+xml

[12:05:01.0000] <jgraham>
othermaciej: If you were going to go down that path I would prefer test_assert or something where you pass the function in

[12:05:02.0000] <othermaciej>
another viable option is to report each assertion independently by default, and run all within a test by default, and add new constructs for the case where you want to bail after a failure, or combine reporting of several assertions

[12:06:00.0000] <Hixie>
Dashiva: text/html had an optional failure point too, called validation :-)

[12:06:01.0000] <othermaciej>
I'll post something more precise to the list later today or tomorrow

[12:06:02.0000] <jgraham>
I really really dislike the idea of reporting each assertion seperatly

[12:06:03.0000] <othermaciej>
then you can tell me what details of my proposal suck

[12:07:00.0000] <sicking>
jgraham: why? We do that in mochitest which we use for firefox testing. It makes writing tests quite nice

[12:07:01.0000] <othermaciej>
I really dislike reporting just one result for many assertions

[12:07:02.0000] <othermaciej>
it makes the test much less useful for a partially-conforming implementation

[12:07:03.0000] <othermaciej>
and it makes it harder to see what the test tested, even if it passes

[12:08:00.0000] <othermaciej>
if there is really a legit reason to do it in some cases, it should be an unusual case and not the default behavior

[12:08:01.0000] <sicking>
jgraham: one thing that you can do is to by default only print failed assertions. Then you can easily handle having literally thousands of passing assertions without making the result unreadable 

[12:08:02.0000] <Dashiva>
Hixie: This is true, but with xhtml a server admin can disable server-side scripting and set the mime-type for .html! :P

[12:09:00.0000] <othermaciej>
I kind of like printing the passing assertions as well, but I can see an argument either way

[12:09:01.0000] <Hixie>
ah well, this is all water under the bridge anyway

[12:09:02.0000] <jgraham>
othermaciej: It should also be noted that test(f) is a shorthand for async_test().step(f)

[12:09:03.0000] <jgraham>
So the fact that test() does multiple things is just a convenience

[12:10:00.0000] <sicking>
othermaciej: i think it's a requirement to at least be able to hide them, but i don't care much if they are hidden or displayed by default

[12:10:01.0000] <sicking>
note that i think that showing/hiding should be an action the tester-person takes, not that the test itself takes

[12:11:00.0000] <othermaciej>
sicking: it should be easy to make a setup that can show only failures in the UI

[12:11:01.0000] <sicking>
othermaciej: true

[12:11:02.0000] <othermaciej>
also useful would be a failure count at the top, maybe

[12:11:03.0000] <othermaciej>
all you really need is a distinct class on the result rows that failed

[12:11:04.0000] <jgraham>
sicking: The conceptual divide is that a test() corresponds to one thing that you want to test whereas an assertion is just a means to an end i.e. you might use many asserts to determine if you got the expected result of your test

[12:12:00.0000] <jgraham>
I often see tests that have var apssed = passed1 && passed2 && passed3 and so on

[12:12:01.0000] <jgraham>
Which is bad

[12:12:02.0000] <othermaciej>
I don't ever see that in WebKit script tests

[12:12:03.0000] <othermaciej>
where we report each assertion

[12:12:04.0000] <jgraham>
I don't mind printing the results of asserts in the output

[12:13:00.0000] <sicking>
jgraham: i'm not sure i understand the purpose of the test/assertion distinction

[12:13:01.0000] <jgraham>
sicking: Did you see my earlier example?

[12:13:02.0000] <sicking>
jgraham: no

[12:13:03.0000] <jgraham>
Where you do something (e.g. set innerHTML) and want to check that you get the DOM you expect

[12:13:04.0000] <othermaciej>
it's useful in the case where you want to make running an assertion conditional on a previous one passing

[12:14:00.0000] <jgraham>
So you check a number of things about the resulting DOM

[12:14:01.0000] <othermaciej>
which I think is the rare case, not the common case

[12:14:02.0000] <jgraham>
Like the number of nodes, their names, their values, etc.

[12:14:03.0000] <sicking>
right, i'm not sure i've ever needed to do that

[12:14:04.0000] <othermaciej>
I don't think I have either, and I have written a lot of assertion-based tests for WebKit

[12:14:05.0000] <sicking>
(answering maciej)

[12:14:06.0000] <jgraham>
I see that sort of thing all the time

[12:15:00.0000] <jgraham>
Philip` had another example from his canvas tests

[12:15:01.0000] <sicking>
can you point to it?

[12:15:02.0000] <sicking>
as in, got link?

[12:15:03.0000] <othermaciej>
I would be highly surprised if it is the majority case

[12:16:00.0000] <sicking>
indeed

[12:16:01.0000] <jgraham>
http://philip.html5.org/tests/canvas/suite/tests/2d.state.saverestore.stackdepth.html

[12:17:00.0000] <sicking>
why do you need the assert/test distinction there?

[12:17:01.0000] <jgraham>
It was at least a rather common case last time I used a harness with a similar design (testing pure ECMAScript)

[12:17:02.0000] <sicking>
/me isn't sure he's understanding the argument

[12:18:00.0000] <jgraham>
Because you don't want 512 individual assertions

[12:18:01.0000] <sicking>
why not?

[12:18:02.0000] <jgraham>
That test should contribute 1 to the overall results

[12:18:03.0000] <sicking>
why?

[12:19:00.0000] <sicking>
the number of pass/fails are meaningless. It's fails != 0 that matters

[12:19:01.0000] <jgraham>
Because it tests a single point from the spec

[12:19:02.0000] <othermaciej>
I think it would be useful if that test reported exactly which cases passed or failed

[12:19:03.0000] <sicking>
first of all that's not really true

[12:20:00.0000] <sicking>
that testcase tests at least 3 different APIs on canvas

[12:20:01.0000] <othermaciej>
in the unlikely case that only some of the cases fail, rather than all or none, it's very useful to know precisely which all at once

[12:20:02.0000] <jgraham>
The number of fails matters in a spec conformance testsuite

[12:20:03.0000] <sicking>
how?

[12:20:04.0000] <sicking>
either a browser passes or it fails 

[12:21:00.0000] <othermaciej>
it matters if people start marketing their x% pass rate and comparing to someone else's y%

[12:21:01.0000] <jgraham>
Not the way it is presented at the moment

[12:21:02.0000] <othermaciej>
but I don't think tests should optimize for that

[12:21:03.0000] <jgraham>
I don't think I am optimising for that

[12:22:00.0000] <sicking>
indeed. It's really really hard to get people to write tests as it is, i don't want to lay the additional constraint of asking them to worry about marketing as well

[12:22:01.0000] <jgraham>
FWIW qunit uses a similar design

[12:22:02.0000] <sicking>
i have never cared about how many tests i fail. Only if i the fail count is 0 or not

[12:22:03.0000] <jgraham>
As does dojo object harness

[12:23:00.0000] <jgraham>
So there is at least precedent for the one test / multiple assertions in successful existing harnesses

[12:23:01.0000] <othermaciej>
There is also precedent for the other way

[12:24:00.0000] <othermaciej>
I don't think precedent is a slam dunk

[12:24:01.0000] <sicking>
indeed. We're not really breaking new ground here, so I don't think we need to worry about doing something so outragous that people will ask if there is precedence or not

[12:24:02.0000] <jgraham>
Sure. But my point is that I am not proposing something unreasonable

[12:24:03.0000] <othermaciej>
IMO we want to make it easy to write tests that are useful to implementors

[12:24:04.0000] <sicking>
you're not. I just think there are better solutions

[12:24:05.0000] <sicking>
yup

[12:25:00.0000] <othermaciej>
reporting failing assertions individually, and reporting multiple failures at once, is generally better for implementors

[12:25:01.0000] <othermaciej>
for two reasons:

[12:25:02.0000] <othermaciej>
(1) you can fix more bugs at once pass without having to tackle failing asserts one at a time

[12:25:03.0000] <othermaciej>
(2) if your implementation is not fully conforming, you can more usefully use the test as a regression test, because you will see if assertions past the first failure go from fail to pass

[12:26:00.0000] <othermaciej>
(and bonus reason (3), sometimes the first failure is hard to fix but later failures are easy to fix)

[12:26:01.0000] <jgraham>
If things are independent in the way you suggest they are seperate test()s, not seperate asserts

[12:26:02.0000] <othermaciej>
therefore, in my opinion the harness should optimize for that case

[12:26:03.0000] <othermaciej>
by making it the obvious and easy path to create tests that work that way

[12:27:00.0000] <jgraham>
If the syntax of test()s is too difficult let's wok on that

[12:27:01.0000] <jgraham>
*work

[12:27:02.0000] <sicking>
jgraham: i still don't understand the need for the test/assert distinction

[12:28:00.0000] <sicking>
i'd rather not ever see anyone be asked "can you merge these three tests into one with three asserts as they kind'a test the same thing"

[12:28:01.0000] <jgraham>
sicking: Then I don't know how to convince you. I see people perform contortions in tests to make the result depend on multiple independent things all the time

[12:28:02.0000] <sicking>
(or the other way obviously)

[12:28:03.0000] <jgraham>
If you can write it as three test()s then it shouldn't be one test

[12:29:00.0000] <sicking>
you can write *any* test as a single test()

[12:29:01.0000] <jgraham>
Right

[12:29:02.0000] <jgraham>
That's what I said

[12:29:03.0000] <sicking>
just do all the testing and set a boolean to false once anything fails. At the end do test(boolean) (or whatever the syntax is, i forget)

[12:29:04.0000] <sicking>
i also argue that there is no such thing as testing a single feature

[12:29:05.0000] <jgraham>
That is exactly what I want to avoid

[12:30:00.0000] <othermaciej>
in HTML5 test suite syntax, I have to do this:

[12:30:01.0000] <othermaciej>
test(function() {

[12:30:02.0000] <othermaciej>
        assert_equals(document.getElementById("abcd"), document.getElementsByTagName("i")[0]);

[12:30:03.0000] <othermaciej>
    }, "User agents must associate the element with an id value for purposes of getElementById.");

[12:30:04.0000] <sicking>
it is *very* common for our regression tests to catch regressions in features they don't think they are testing

[12:30:05.0000] <jgraham>
The "set a boolean to false and make all assertions just assert_true")

[12:30:06.0000] <othermaciej>
but it could be this:

[12:30:07.0000] <jgraham>
sicking: Yes, I am well aware of this fact

[12:30:08.0000] <jgraham>
But I don't see how it is related

[12:31:00.0000] <othermaciej>
test_equals('document.getElementById("abcd")', 'document.getElementsByTagName("i")[0])', "User agents must associate the element with an id value for purposes of getElementById.");

[12:31:01.0000] <jgraham>
Except that you are encouraged to put all code inside *some* test() 

[12:31:02.0000] <sicking>
i thought the argument of having test/assert distinction was so that you can test separate features in separate test()s

[12:31:03.0000] <othermaciej>
(or skip the message if the expressions are informative enough)

[12:31:04.0000] <jgraham>
othermaciej: I hate the "code as a string" pattern

[12:32:00.0000] <jgraham>
Also in the webkit tests :)

[12:32:01.0000] <othermaciej>
or alternately, if I could wrap all my asserts in a single test(), I could drop the single-qoutes from that

[12:32:02.0000] <othermaciej>
(with test() being there mainly to centralize the exception-catching)

[12:33:00.0000] <sicking>
i'm not sure what the test() pattern is really buying us. Why can't we just use assertions direction

[12:33:01.0000] <othermaciej>
I don't see the benefit of requiring the more verbose version to get detailed result reporting

[12:33:02.0000] <sicking>
err

[12:33:03.0000] <sicking>
directly

[12:33:04.0000] <sicking>
and make the test harness hook into onerror to catch exceptions

[12:33:05.0000] <othermaciej>
it seems like that discourages creating tests with detailed result reporting

[12:33:06.0000] <jgraham>
sicking: Because then you can only have one test per file or have to manually deal with unexpected exceptions

[12:33:07.0000] <sicking>
at some point in the future browsers will implement onerror, at which point they'll start failing if they erronously throw somewhere

[12:33:08.0000] <othermaciej>
onerror is not yet supported enough to do that

[12:34:00.0000] <jgraham>
Anyway I will haveto bow out of this conversation for a bit

[12:34:01.0000] <sicking>
othermaciej: but it will be soon enough (say a year or two) i'm assuming

[12:34:02.0000] <othermaciej>
anyway, I have to run to grab lunch

[12:34:03.0000] <sicking>
heh

[12:40:00.0000] <jgraham>
(while I remember, another good example of why you want seperate assert() functions is to check that a feature exists before you try to do something with it, and fail if it does not)

[12:47:00.0000] <hober>
sicking: OK, I'll write the ISSUE-27 CP

[12:48:00.0000] <hober>
sicking: when's it due?

[12:48:01.0000] <sicking>
hober: yay!! thanks!

[12:48:02.0000] <sicking>
hober: it's way overdue already :( I'll ask maciej when he gets back from food what would be a good new due date

[12:48:03.0000] <hober>
ahh, ok

[12:49:00.0000] <hober>
good times :)

[12:50:00.0000] <hober>
othermaciej: any chance I can get a deadline in the future for the host-the-rel-registry-on-the-µf-wiki ISSUE-27 CP?

[12:51:00.0000] <othermaciej>
hober: if you volunteer on the list and give a specific reasonable deadline, I expect the chairs would accept that

[12:51:01.0000] <othermaciej>
(like 1-2 weeks from today max)

[12:51:02.0000] <hober>
ok

[12:51:03.0000] <hober>
sounds good

[12:54:00.0000] <sicking>
jgraham: i don't know why you'd want to do that. Just use the feature and if it fails then you fail the test

[12:54:01.0000] <hober>
sent

[12:56:00.0000] <sicking>
jgraham: the only thing i could think of is if you'd want to use some feature that isn't in HTML5, and thus shouldn't be relied upon. But first of all I can't think of a case when that would be, second in this to me seemingly very rare case, you can always just use feature detection and separate code paths. No need for harness support for this.

[13:28:00.0000] <jgraham>
Hixie: btw I strongly disagree about linking tests to the spec. Unless we link tests to the spec it is almost impossible to determine if we have coverage of a particular area

[13:29:00.0000] <jgraham>
I don't think questioning invalid tests is the main problem

[13:29:01.0000] <Hixie>
linking tests to the spec doesn't help you with determining coverage either, unless you plan to have an ungodly number of links per test and plan to be updating them frequently

[13:30:00.0000] <jgraham>
Why an ungodly number of links per test? I don't think it is a disaster if tests fail to link to APIs that they only use for setup

[13:30:01.0000] <jgraham>
Because those APIs need detailed tests of their own

[13:31:00.0000] <jgraham>
(indeed it is probably a good thing)

[13:31:01.0000] <jgraham>
Certainly what Philip` has done with the <canvas> tests is extremely useful

[14:27:00.0000] <Hixie>
jgraham: the vast majority of tests will be testing combinations of features

[14:27:01.0000] <Hixie>
jgraham: and even many of the tests that don't test combinations will be testing things that are specified across many sections

[14:28:00.0000] <Hixie>
jgraham: consider any test for 'unload'

[14:46:00.0000] <jgraham>
Hixie: I don't think that changes my point

[14:56:00.0000] <annevk>
so when will some decisions be announced?

[14:57:00.0000] <Hixie>
when i spoke to the chairs a few weeks ago, they said "monday"

[14:57:01.0000] <Hixie>
but that was last monday

[14:57:02.0000] <Hixie>
so...

[15:02:00.0000] <annevk>
"monday" is a great date

[15:04:00.0000] <Hixie>
they were referring to last monday

[15:04:01.0000] <Hixie>
22nd

[15:10:00.0000] <annevk>
isn't that the Monday before last?

[15:10:01.0000] <annevk>
not that it matters

[15:10:02.0000] <Hixie>
"this monday" is yesterday

[15:10:03.0000] <Hixie>
"last monday" is the monday before

[15:10:04.0000] <annevk>
it's Wednesday here

[15:11:00.0000] <Hixie>
it's tuesday until you've slept! :-P

[15:11:01.0000] <hober>
I wonder when the ISSUE-41 decision will be published.

[15:11:02.0000] <annevk>
last Monday

[15:12:00.0000] <hober>
with apologies to markp, I must be new here. :)

[15:12:01.0000] <annevk>
Hixie, ooh, that can lead to six-day weeks

[15:12:02.0000] <Hixie>
yeah, i used to live monday,tuesday,wednesday,thursday,friday,weekend back when i was at netscape

[15:12:03.0000] <Hixie>
and my "friday" started rather late

[15:12:04.0000] <TabAtkins>
28-hour days, or just long weekends?

[15:13:00.0000] <Hixie>
28

[15:18:00.0000] <TabAtkins>
What was the problem in canvas with something having different behavior based on rounding?  Something about arcs?

[15:18:01.0000] <TabAtkins>
/me is writing an email.

[15:18:02.0000] <Hixie>
there was a problem once with 0..2pi being either a full circle or a dot depending on how you rounded

[15:18:03.0000] <Hixie>
but i think we resolved it

[15:19:00.0000] <TabAtkins>
Ah, right.

[15:19:01.0000] <TabAtkins>
/me goes and looks it up.

[15:19:02.0000] <TabAtkins>
Dammit, I keep typing "whatwg.orc/C".  At least chrome suggests the correct url to me now.

[15:20:00.0000] <Hixie>
shouldn't you just be able to type "w" by now

[15:22:00.0000] <TabAtkins>
Not at work.  For reasons I haven't yet gotten the energy to diagnose, Chrome on my work linux machine no longer has permissions to my profile, so autocomplete is totally dead.

[15:22:01.0000] <Hixie>
lol

[15:22:02.0000] <Hixie>
good times

[15:26:00.0000] <TabAtkins>
Ah, the way we solved the arcTo() issue doesn't help here.

[15:26:01.0000] <TabAtkins>
Darn.

[15:26:02.0000] <TabAtkins>
/me is trying to solve the problem of interpolating colors in hsl space when the hues are 180deg apart.

[15:27:00.0000] <TabAtkins>
The best I've got so far is (1) Shrug, or (2) when transitioning, always increase/decrease/wrap/don't wrap the hue.

[15:27:01.0000] <TabAtkins>
(2) solves the problem, but makes other cases bad.  So I'm leaning towards (1).

[15:28:00.0000] <Hixie>
my suggestion is pick your favourite colour, and then when you're in that one edge case, require that the transition go in the direction that would go through your favourite colour

[15:28:01.0000] <TabAtkins>
That doesn't work when I'm transitioning to/from my favorite color.

[15:28:02.0000] <Hixie>
and when one of the two ends is that colour, um, do the same with your second-favourite colour, i guess

[15:28:03.0000] <TabAtkins>
And before you suggest "pick two", what if my two favorites are 180deg apart?

[15:29:00.0000] <TabAtkins>
Dammit.

[15:29:01.0000] <Hixie>
or define your favourite colour as something that you can't specify, e.g. if you only accept integers, give a value with a fractional component

[15:29:02.0000] <Hixie>
also, if your favourite colour is white or black, i can't help you

[15:30:00.0000] <Hixie>
(or grey)

[15:30:01.0000] <TabAtkins>
Actually, that doesn't solve the problem anyway.  The issue isnt' that 180deg apart is ambiguous (that's solveable), but rather than rounding can make something be in or out of the edge case unpredictably.

[15:30:02.0000] <Hixie>
aah

[15:30:03.0000] <Hixie>
can't you define the rounding algorithm?

[15:30:04.0000] <TabAtkins>
Which was the problem with arcTo(), but you solved that.

[15:30:05.0000] <TabAtkins>
We don't even define the numeric precision of CSS numbers.

[15:30:06.0000] <Hixie>
ah

[15:30:07.0000] <Hixie>
well

[15:30:08.0000] <TabAtkins>
(We should.)

[15:31:00.0000] <Hixie>
maybe

[15:31:01.0000] <Hixie>
with arcTo the solution iirc was to make it so that there was no edge case, right?

[15:31:02.0000] <TabAtkins>
Yes.

[15:31:03.0000] <Hixie>
i recommend the same approach.

[15:31:04.0000] <Hixie>
good luck!

[15:31:05.0000] <Hixie>
/me ducks

[15:31:06.0000] <TabAtkins>
@_@

[15:32:00.0000] <TabAtkins>
The "make it so there's no edge case" approach is my (2), which unfortunately it's great for half of all gradients.

[15:32:01.0000] <Hixie>
you could always do (3), have the author specify whether to transition clockwise or anticlockwise

[15:32:02.0000] <TabAtkins>
For example, if the strategy is "never wrap the hue", then you can't actually transition from purple to orange through red.

[15:32:03.0000] <TabAtkins>
That doesn't solve the problem, Hixie.

[15:32:04.0000] <Hixie>
why not?

[15:33:00.0000] <TabAtkins>
Or, well, it does if you mean "do (2), but give the author a choice".

[15:33:01.0000] <Hixie>
essentially, yeah, make the author pick which solution to use

[15:33:02.0000] <Hixie>
but that's lame most of hte time

[15:33:03.0000] <TabAtkins>
But, still not very well.  *None* of the choices interpolate well in general.

[15:34:00.0000] <TabAtkins>
So I'm going with "shrug" as my answer.

[15:34:01.0000] <Hixie>
boo

[15:34:02.0000] <TabAtkins>
In animations and gradients, the author can get around it by providing a third color between the two points.

[15:35:00.0000] <TabAtkins>
You can't do that in Transitions currently, but you will once we support keyframes in transitions.

[15:35:01.0000] <TabAtkins>
Which'll be like Transitions 4 I guess.

[15:35:02.0000] <annevk>
yay, the bug feature is still working

[15:35:03.0000] <Hixie>
(if you don't specify it, some browser will get big adoption and force the rounding of css values to be defined a particular way)

[15:35:04.0000] <Hixie>
bug feature?

[15:35:05.0000] <annevk>
on html5.org

[15:36:00.0000] <annevk>
puts W3C bugs in a separate column

[15:36:01.0000] <bckenny>
TabAtkins: will this be for any properties specified in hsl? what if you want to author in hsl but interpolate in rgb?

[15:36:02.0000] <Hixie>
oh on the tracker?

[15:36:03.0000] <Hixie>
/me looks

[15:36:04.0000] <Hixie>
neat

[15:36:05.0000] <bckenny>
or is this for approximately the same time as transition-strategy or what have you?

[15:36:06.0000] <TabAtkins>
bckenny: It would just be an interpolation strategy.  It doesn't matter how you specify the endpoints.

[15:37:00.0000] <bckenny>
ah

[15:37:01.0000] <TabAtkins>
A color is a color is a color, after all, regardless of the colorspace you use.

[15:37:02.0000] <Hixie>
annevk: di you need an answer to http://lists.whatwg.org/htdig.cgi/whatwg-whatwg.org/2010-August/027987.html ?

[15:37:03.0000] <TabAtkins>
It's just when you try to draw "straigt lines" between colors that the colorspace matters.

[15:38:00.0000] <Hixie>
you could sidestep the problem then by requiring that the browsers draw wavy lines

[15:38:01.0000] <TabAtkins>
The nature of the curve varies from space to space as well.

[15:39:00.0000] <bckenny>
the extra color stop is a fine (eventual) solution

[15:40:00.0000] <bckenny>
though it is unfortunate that browsers and anyone generating dynamic colors will have to detect that situation

[15:40:01.0000] <Hixie>
oh, tab, i have another solution!

[15:40:02.0000] <bckenny>
but it's ambiguous, so what are you going to do

[15:40:03.0000] <Hixie>
pick your favourite colour again defined as something that can't be specified exactly, and then require that that colour be transitioned to in between each other colour

[15:40:04.0000] <Hixie>
that way it's never ambiguous, right?

[15:41:00.0000] <TabAtkins>
Right, that's just another (2) strategy, which is guaranteed to be bad for about half of all transitions.

[15:41:01.0000] <TabAtkins>
(It's equivalent to "always wrap the hue", with the wrap point being the favorite color rather than 0deg.)

[15:42:00.0000] <annevk>
Hixie, no, it sort of resolved itself I think

[15:42:01.0000] <annevk>
still need to update CSSOM View

[15:43:00.0000] <Hixie>
k

[15:43:01.0000] <Hixie>
TabAtkins: true

[15:43:02.0000] <Hixie>
TabAtkins: but it has the advantage of making the web prettier for you

[15:43:03.0000] <Hixie>
TabAtkins: as you'd see your favourite colour more often

[15:43:04.0000] <TabAtkins>
This is true.

[15:43:05.0000] <TabAtkins>
(I don't need to make my favorite color unspecifable if I just specify two favorite colors that aren't 180deg apart.)

[15:45:00.0000] <Hixie>
well if you have two favourite colours, sure

[15:45:01.0000] <TabAtkins>
They can be 1deg apart.

[15:45:02.0000] <bckenny>
ultraviolet

[15:45:03.0000] <bckenny>
take that, gamut

[15:45:04.0000] <TabAtkins>
Pretty sure ultraviolet doesn't exist in the sRGB space at all, let alone the sRGB gamut.

[15:50:00.0000] <bga_>
hi

[15:50:01.0000] <bga_>
we have found some issue

[15:51:00.0000] <bga_>
i want auto "lang" attribute

[15:52:00.0000] <bga_>
if i do not set it manualy

[15:52:01.0000] <TabAtkins>
What's the problem you're trying to solve?

[15:52:02.0000] <bga_>
i have static html page

[15:53:00.0000] <jamesr_>
TabAtkins: is there a www-style IRC channel?

[15:53:01.0000] <bga_>
i want  that it works w/o js

[15:53:02.0000] <TabAtkins>
jamesr_: Are you already on the w3.org server?

[15:54:00.0000] <jamesr_>
nope. should i be?

[15:54:01.0000] <Hixie>
so a while ago aryeh suggested changing th.scope and td.wrap to be limited to known values, which is a change away from every browser, but makes some modicum of sense... any opinions?

[15:54:02.0000] <TabAtkins>
Yeah.  irc.w3.org, port 6665.

[15:54:03.0000] <TabAtkins>
Then channel #css

[15:54:04.0000] <bga_>
and i want that this will be multilangage

[15:54:05.0000] <jamesr_>
are there real people there?

[15:54:06.0000] <TabAtkins>
Hixie: I support the change.

[15:54:07.0000] <TabAtkins>
jamesr_: Yes, though we don't pay a ton of attention.  We'll see a question eventually, though.

[15:55:00.0000] <TabAtkins>
jamesr_: It helps if you know who you want to talk to and can target them.

[15:55:01.0000] <cying>
CSS + HTML5 question...

[15:55:02.0000] <cying>
what do the width and height attributes mean for images in HTML5? how do they react when styled?

[15:55:03.0000] <bga_>
<span class="ru">привет</span><span class="en">hi</span>

[15:55:04.0000] <TabAtkins>
bga_: You haven't described a problem yet.

[15:55:05.0000] <TabAtkins>
cying: That's defined in the rendering chapter of HTML5.

[15:56:00.0000] <Hixie>
what they _mean_ is defined in the elements section

[15:56:01.0000] <Hixie>
what they do is defined in the rendering section

[15:56:02.0000] <TabAtkins>
cying: Simply, @width and @height are presentational hints for the 'width' and 'height' CSS properties.

[15:56:03.0000] <bga_>
span{ display:none; }  :lang(ru) span.ru { display: inline; }; :lang(en) span.en { display: inline; };

[15:56:04.0000] <cying>
TabAtkins: hmmm

[15:56:05.0000] <cying>
Hixie: cool

[15:56:06.0000] <TabAtkins>
cying: Pres hints are treated as author-level rules that are less specific than any other rule.

[15:57:00.0000] <bga_>
do you understand me? :)

[15:57:01.0000] <jamesr_>
TabAtkins: i'm wondering what people think about -moz-crisp-edges for the image-rendering property. i'm interested in giving it a non-shit name and implementing it

[15:57:02.0000] <jamesr_>
in webkit

[15:57:03.0000] <Hixie>
bga_: dir="auto" was added to HTML a few weeks ago, http://www.whatwg.org/specs/web-apps/current-work/complete.html#attr-dir-auto

[15:57:04.0000] <TabAtkins>
bga_: Your design isn't good.  If the page is loaded without CSS, the user will see both the russian and english words.

[15:57:05.0000] <Hixie>
bga_: oh, wait, you're asking for lang=auto

[15:57:06.0000] <Hixie>
nevermind

[15:57:07.0000] <cying>
TabAtkins: so if i were to say: <img width="500" height="500" src="..."> and then style it with { width: 250px; height: auto; } it'll size it to 250px x 250px?

[15:57:08.0000] <Hixie>
what tab said

[15:57:09.0000] <TabAtkins>
bga_: If you're wanting to give different languages on the same page and display only one of them, that should be done server-side as you build the page.

[15:58:00.0000] <TabAtkins>
cying: Yes.

[15:58:01.0000] <Hixie>
html doesn't support in-page localisation

[15:58:02.0000] <cying>
TabAtkins: coooool

[15:58:03.0000] <TabAtkins>
cying: Or, um, whatever height:auto does for replaced elements.  It's magic.

[15:58:04.0000] <cying>
TabAtkins: cool. i like magic :)

[15:58:05.0000] <bga_>
Hixie :(

[15:59:00.0000] <Hixie>
bga_: why would you want to send the user multiple copies of the page? just send them the copy that has the language you want

[15:59:01.0000] <bga_>
i want static page w/o backend

[15:59:02.0000] <Hixie>
bga_: in practice, localisation requires changing much more than just text, anyway. For example, localising to arabic means moving the scrollbar to a different position. To Japanese might mean having hte entire layout be vertical instead of horizontal. To French will mean different date styles. etc.

