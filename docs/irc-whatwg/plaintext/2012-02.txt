2012-02-01
[16:14:00.0000] <sicking>
Hixie: how so?

[16:14:01.0000] <Hixie>
sicking: can't do both that an [ArrayClass]

[16:14:02.0000] <Hixie>
and

[16:15:00.0000] <sicking>
Hixie: that is indeed a problem. But so is not inheriting from EventTarget

[16:16:00.0000] <Hixie>
yeah, i know

[16:16:01.0000] <Hixie>
i'm just joshing you

[16:16:02.0000] <Hixie>
but i did say there would be _something_ else that we wanted interfaces to be

[16:16:03.0000] <Hixie>
just didn't know what at the time :-)

[16:16:04.0000] <sicking>
Hixie: indeed. You were right :)

[16:20:00.0000] <Hixie>
good lord, the multipage problems are getting worse and worse

[16:20:01.0000] <Hixie>
now not only is it not updating, it's missing entire pages

[16:20:02.0000] <Hixie>
what's going on here

[16:24:00.0000] <WeirdAl>
!seen annevk

[16:25:00.0000] <Hixie>
he's on vacation for a few more days

[16:25:01.0000] <Hixie>
ok i got the pages back

[16:25:02.0000] <Hixie>
still out of date though

[16:25:03.0000] <Hixie>
i wonder if that's an issue my end

[16:28:00.0000] <Hixie>
ok well i've found one problem

[16:29:00.0000] <Hixie>
it's not splitting the spec i'm giving it

[16:29:01.0000] <Hixie>
wonder what that's about

[16:30:00.0000] <Hixie>
aha, yes, the problem is that anne is no longer fetching the spec before splitting it

[16:30:01.0000] <Hixie>
i get no hits from him to get the spec to split

[16:31:00.0000] <Hixie>
anyone want to write an article for IEEE about HTML?

[16:42:00.0000] <divya>
hhahah will this be a 'whitepaper' presented at some symposium?

[16:47:00.0000] <Hixie>
no, for IEEE Spectrum or whatever their magazine is called

[16:50:00.0000] <divya>
ohh k

[16:51:00.0000] <Hixie>
if anyone _is_ interested, drop me a mail or ping me here, i'll hook you up (they're looking for someone)

[17:55:00.0000] <MikeSmith>
https://twitter.com/#!/grorgwork/status/164445742981844994

[18:05:00.0000] <davidb>
is

[00:01:00.0000] <zcorpan>
huh, what does chrome do with the attributes here? http://software.hixie.ch/utilities/js/live-dom-viewer/saved/1318

[02:11:00.0000] <smaug____>
mouseenter/leave seem to be tricky to understand

[02:11:01.0000] <smaug____>
perhaps it was a mistake to implement them in Gecko

[02:12:00.0000] <smaug____>
(and accept them i nD3E)

[08:30:00.0000] <jgraham>
http://www.readwriteweb.com/mobile/2012/01/how-lanyrd-uses-html5-for-a-gr.php is mildly interesting. We should make sure to get their feedback on the offline stuff

[08:37:00.0000] <AryehGregor>
Does it take a while for CSS drafts on dev.w3.org to update?

[08:40:00.0000] <AryehGregor>
It seems so.

[08:40:01.0000] <AryehGregor>
Sigh.

[08:45:00.0000] <Ms2ger>
CVS *sigh*

[08:47:00.0000] <karlcow>
cvsigh

[09:00:00.0000] <JohnAlbin>
CVS? ouch.

[09:02:00.0000] <dglazkov>
good morning, Whatwg!

[09:02:01.0000] <AryehGregor>
Argh, bugzilla.mozilla.org is slow.  >:(

[09:06:00.0000] <AryehGregor>
I never thought my math background would come in so useful for standards: https://www.w3.org/Bugs/Public/show_bug.cgi?id=15610#c2

[09:08:00.0000] <Berge>
Hi! I'm trying to stream (not psuedo-stream, it's a live broadcast) h.264 video to browsers with <video> support, but it's not proving too easy. What muxes are supported in various browsers?

[09:10:00.0000] <Berge>
(The encoding box hasn't got enough CPU power to encode VP8 in addition to the HD and SD h.264 streams.)

[09:11:00.0000] <AryehGregor>
Firefox/Opera don't support H.264 in any form.

[09:11:01.0000] <Berge>
The spec lists some examples, but my encoder can't mux MP4 to IP streams (only files), and I haven't found anyone able to do that, so it seems very file-only.

[09:12:00.0000] <Berge>
AryehGregor: I know. We've got flash fallback.

[09:12:01.0000] <Berge>
(And multicast!)

[09:12:02.0000] <AryehGregor>
Okay.  Then I probably don't know enough to be helpful.  :)

[09:13:00.0000] <Berge>
But even if I did encode VP8, what mux, container format and MIME type should I deliver it in?

[09:14:00.0000] <Velmont>
Hmm. The chromium ubuntu-ppa is not new enough it seems. Chromium 17, but 18 is the thing now. So trying this new chrome dev thing instead then.

[09:16:00.0000] <Velmont>
Berge: I've been streaming Ogg Theora + Vorbis, with Java applet fallback for non-opera, non-fx, non-chromium.

[09:17:00.0000] <Berge>
Theroa is inferior quality-wise, though.

[09:17:01.0000] <Berge>
Theora, even.

[09:18:00.0000] <Velmont>
Well. Depends on what you're streaming. I've been doing conferences, and it's good there. Especially the newer versions. The old ones were terrible.

[09:18:01.0000] <Velmont>
It's easy to encode at least, doesn't require all that much horse power.

[09:19:00.0000] <Berge>
True, but x264 encoding h.264 is really a different world in bits vs quality.

[09:19:01.0000] <wilhelm>
Java applet, not Flash?

[09:20:00.0000] <Velmont>
wilhelm: Flash can't decode theora. - And I'm evil enough to let people who absolutely want to use either IE or Safari bite the bullet and get the Java applet :-)

[09:20:01.0000] <Velmont>
But it actually works rather well.

[09:20:02.0000] <Velmont>
Berge: Yes, -- but other h264 encoders and Theora is not really a huge difference.

[09:21:00.0000] <Berge>
Velmont: Probably, but there's a reason why I use x264 (-:

[09:21:01.0000] <Berge>
IME, it's loads better than even rather expensive hardware solutions.

[09:22:00.0000] <Velmont>
Berge: Yep. I wouldn't use anything else if I'd need to encode h264. No contest.

[09:22:01.0000] <Velmont>
Berge: But Theora encoder got many of the good parts of x264 in the latest iterations.

[09:22:02.0000] <Berge>
Velmont: Hm, that's good news.

[09:22:03.0000] <Velmont>
Berge: Sadly, the WebM announcement put a halt to much of the good Theora work.

[09:22:04.0000] <Berge>
For better or worse, I guess.

[09:23:00.0000] <Berge>
VP8 is pretty good, but encoders need some love.

[09:23:01.0000] <Velmont>
The lowest hanging fruit was done, -- but lots of small improvements were in the pipeline :-)

[09:23:02.0000] <Berge>
I'm told they're getting better as well, though.

[09:23:03.0000] <Velmont>
Berge: I'm waiting for some toolchain-stuff that's still not there though. --- BUT! Yesterday, there was an announcement of a WebM-patch for Icecast. So I can probably start looking at WebM soonish. :]

[09:24:00.0000] <Berge>
Yes, see, this is why this whole stream-video-without-flash is a bit tricky right know.

[09:24:01.0000] <gsnedders>
Berge: I can't think of any streaming container supported cross-browser for <video>

[09:24:02.0000] <Berge>
We've already patched VLC twice for this project.

[09:24:03.0000] <Berge>
And the kernel(!)

[09:25:00.0000] <Berge>
gsnedders: Doesn't have to be all that cross browser, really. Most viewers will be more happy with VLC.

[09:25:01.0000] <Berge>
Or Flash fallback, for that matter.

[09:25:02.0000] <Berge>
The <video> part is mostly for fun.

[09:25:03.0000] <Velmont>
Berge: That's why I'm still using Theora, -- live streaming works reliably in Opera, Firefox and Chromium. And all the toolchain is there and it's easy to use and set up.

[09:25:04.0000] <Berge>
Velmont: It's all very pick-your-poison.

[09:26:00.0000] <Velmont>
Ah, it also works nicely in IE, because IE and Java is quite OK-ish friends. -- But, I agree Berge, pick your poison :-]

[09:26:01.0000] <Berge>
But since I don't really follow web development closely; is the world slowly moving towards VP8 support?

[09:27:00.0000] <gsnedders>
Except for MS and Apple, it is at least.

[09:27:01.0000] <Berge>
Then it's not.

[09:27:02.0000] <gsnedders>
No idea what happened about support in Flash.

[09:27:03.0000] <gsnedders>
Berge: On mobile at least it's happening.

[09:27:04.0000] <Berge>
gsnedders: At least if we forget Windows PHone?

[09:27:05.0000] <Velmont>
And on an unrelated note... Seems like WebKit hasn't updated its IndexedDB support as I thought it had after reading the mailing lists.

[09:27:06.0000] <Berge>
(I'm happy to, of course (-: )

[09:28:00.0000] <gsnedders>
Berge: Windows Phone 7 has minimal marketshare, iOS is the bigger issue.

[09:28:01.0000] <Velmont>
http://tests.velmont.net/IndexedDB/testrunner.htm << I've ported Microsofts IDB tests.

[09:29:00.0000] <gsnedders>
Velmont: ported to what?

[09:29:01.0000] <Ms2ger>
Velmont, hey, I know that UI :)

[09:29:02.0000] <Velmont>
gsnedders: New spec, and better error reporting. -- So using testharness.js as it's supposed to be used.

[09:29:03.0000] <Velmont>
Ms2ger: Hehe, yes, thanks :P

[09:30:00.0000] <Ms2ger>
Does it work well? :)

[09:30:01.0000] <Velmont>
Ms2ger: I use it for all tests I write for Opera.

[09:30:02.0000] <Ms2ger>
\o/

[09:30:03.0000] <gsnedders>
So, like, I still don't get why so few people understand "this" in JS.

[09:31:00.0000] <TabAtkins_>
Because 'this' is really confusing.

[09:31:01.0000] <TabAtkins_>
Largely because it (a) doesn't soft-bind, and (b) gets shadowed when you use higher-order functions.

[09:31:02.0000] <jgraham>
gsnedders: It's not that people don't *understand*

[09:31:03.0000] <gsnedders>
"this" is just another argument for function calls. Once you accept that, it's simple.

[09:32:00.0000] <jgraham>
It's that the semantics are braindead

[09:32:01.0000] <jgraham>
because they are easy to forget about

[09:32:02.0000] <Ms2ger>
gsnedders, oh, it's like Python?

[09:32:03.0000] <Velmont>
Python has it explicit at least. Easier to understand :]

[09:32:04.0000] <TabAtkins_>
Velmont: Agreed.

[09:32:05.0000] <jgraham>
It's not just that it's explicit in python

[09:33:00.0000] <gsnedders>
The only confusing part is that it is *implicit* in JS.

[09:33:01.0000] <jgraham>
It's also that it is bound to the function

[09:33:02.0000] <jgraham>
gsnedders: The only confusing part is that it's confusing?

[09:33:03.0000] <jgraham>
the only tautological part is that it's tautological, much?

[09:34:00.0000] <TabAtkins_>
gsnedders: The fact that it doesn't soft-bind - that is, "var x = foo.bar; x();" doesn't do the same thing as "foo.bar()" if the function relies on 'this'.

[09:44:00.0000] <AryehGregor>
TabAtkins_, so what's the procedure for proposing that we unprefix everything related to CSS Transforms?

[09:44:01.0000] <AryehGregor>
/me guesses teleconference >:(

[09:52:00.0000] <Ms2ger>
AryehGregor, nice out-trigonometring smfr :)

[09:53:00.0000] <hober>
AryehGregor: 2d is ready to unprefix, but 3d isn't, and they share the same property names. so even with 2d ready i don't think unprefixing is a good idea.

[09:53:01.0000] <AryehGregor>
My high school calculus teacher had a policy that if you gave him an answer involving trig functions that he didn't think was the same as what he got, he'd give you credit if you submitted a proof that they were the same.

[09:53:02.0000] <hober>
(and i say that as someone who would love to unprefix this stuff)

[09:54:00.0000] <AryehGregor>
hober, 1) We could unprefix only 2D, by having (e.g.) transform: scale3d(5); be a parse error.  Browsers could either support only -webkit-transform: scale3d(5), or also support transform: -webkit-scale3d(5) (substitute prefixes as appropriate).

[09:55:00.0000] <AryehGregor>
hober, 2) We don't have great interop on 3D yet, but the syntax is almost completely settled.  There's almost no difference in how Gecko and WebKit interpret 3D syntax, they just have different sets of bugs.

[09:55:01.0000] <AryehGregor>
I.e., non-syntax-related bugs.

[09:55:02.0000] <TabAtkins_>
AryehGregor: It's "get the fucker to CR".

[09:55:03.0000] <AryehGregor>
The syntax bugs I've found are minor, e.g., WebKit accepting perspective(5) to mean perspective(5px), or treating certain things as identity transforms instead of parse errors.

[09:56:00.0000] <divya>
wasnt this discussed at the seattle F2F?

[09:56:01.0000] <divya>
same problems

[09:56:02.0000] <AryehGregor>
TabAtkins_, the CSSWG seriously requires prefixing everything until the spec formally reaches CR?  Even if the syntax is totally stable?

[09:56:03.0000] <TabAtkins_>
Argh, really? perspective(5) is parsed as 5px?  That doesn't even make *sense*.

[09:56:04.0000] <hober>
divya: yes

[09:57:00.0000] <AryehGregor>
TabAtkins_, originally WebKit didn't even accept perspective(5px), AFAIK . . . on the other hand, Gecko accepts matrix(1,0,0,1,5px,0).

[09:57:01.0000] <hober>
AryehGregor: yeah, and 2d is ready to enter cr, at least in my opinion.

[09:57:02.0000] <TabAtkins_>
AryehGregor: No, but it's still desirable.  This being a special case probably means it's fine to drop prefixes early.

[09:57:03.0000] <hober>
AryehGregor: but trying to have the behavior you describe above for the split 2d-unprefixed/3d-prefixed would be gross to implement for little benefit

[09:57:04.0000] <TabAtkins_>
But really, 2d should be cr-ready now that it's getting a bit of bugfix attention paid to it.

[09:58:00.0000] <hober>
TabAtkins_: yeah, it pretty much is. i think there's one open issue marked in the spec

[09:58:01.0000] <AryehGregor>
2D is definitely CR-ready.

[09:58:02.0000] <hober>
i really don't want to do some frankensteinian unprefixing

[09:58:03.0000] <AryehGregor>
It's almost PR-ready, in fact.

[09:59:00.0000] <TabAtkins_>
Good.,

[09:59:01.0000] <AryehGregor>
hober, hasn't it been pointed out often enough that the prefixing situation we have in these cases is horrible for authors?

[09:59:02.0000] <hober>
indeed it is

[09:59:03.0000] <divya>
point out to death

[09:59:04.0000] <TabAtkins_>
Take it through LC while finishing the test suite, and then CR will just be a formality as impls change to pass the suite.

[09:59:05.0000] <hober>
which is why we should try to get 3d to cr as quickly as we can

[09:59:06.0000] <AryehGregor>
TabAtkins_, the test suite is basically finished, IMO.

[09:59:07.0000] <TabAtkins_>
Cool, then.

[09:59:08.0000] <AryehGregor>
. . . meaning, the one I wrote in the last month or so.

[10:00:00.0000] <TabAtkins_>
Yeah.

[10:00:01.0000] <AryehGregor>
I'm sure there are some gaps.

[10:00:02.0000] <hober>
so that we can drop prefixes on transform and transform-origin in a clean way

[10:00:03.0000] <AryehGregor>
And there are some spec bugs to be resolved.

[10:00:04.0000] <TabAtkins_>
There will need to be a review of the test suite, so it'll spend a little bit in CR.

[10:00:05.0000] <AryehGregor>
Sure.

[10:00:06.0000] <AryehGregor>
If people add me as an editor of the combined transform spec and let me clarify the spec freely to match browsers, I bet I could resolve all spec issues and have a full test suite in less than a month.

[10:01:00.0000] <Ms2ger>
After LC, I guess you need WG approval for all changes in the CSSWG

[10:01:01.0000] <AryehGregor>
This stuff is way simpler than editing.

[10:01:02.0000] <AryehGregor>
Oh, wait, one thing: transitions and animations.

[10:01:03.0000] <AryehGregor>
There's no way to test those right now.

[10:02:00.0000] <AryehGregor>
Slight difficulty in getting to Pr.

[10:02:01.0000] <AryehGregor>
PR.

[10:03:00.0000] <TabAtkins_>
For now those'll probably have to be manual tests. :/

[10:03:01.0000] <hober>
AryehGregor: but we can enter cr without a test suite, and we drop prefixes at cr-entering time, so there's that

[10:03:02.0000] <AryehGregor>
Right.

[10:03:03.0000] <AryehGregor>
TabAtkins_, how can you verify the timing functions are implemented properly even manually?

[10:04:00.0000] <TabAtkins_>
You can't do so exactly.

[10:04:01.0000] <AryehGregor>
(FWIW, I'm treating my reftests as manual tests; I wouldn't be surprised if they aren't all pixel-perfect in browsers, and IMO they shouldn't have to be)

[10:04:02.0000] <TabAtkins_>
But you *can* set up tests that can be eyeballed.

[10:05:00.0000] <AryehGregor>
/me tries to install Windows 8 Developer Preview in a VM inside Ubuntu

[10:05:01.0000] <TabAtkins_>
Only some properties can be eyeballed in this way.

[10:05:02.0000] <AryehGregor>
(so I can run IE10)

[10:19:00.0000] <Velmont>
AryehGregor: How is it going? If installing W8 devpreview is easy, I want to do it as well. To run the IE10, ofc.

[10:19:01.0000] <AryehGregor>
Velmont, still downloading the .iso.

[10:19:02.0000] <AryehGregor>
I've installed VirtualBox and set up a VM.

[10:19:03.0000] <AryehGregor>
Looks easy enough.

[10:19:04.0000] <AryehGregor>
But I don't know if it will work.

[10:19:05.0000] <AryehGregor>
(if it does, I can stop using EC2, which would be nice)

[10:20:00.0000] <bga>
http://www.onemorelevel.com/html-5-vs-flash-games/html5vsflash3.jpeg

[10:20:01.0000] <Velmont>
AryehGregor: EC2? Not to test IE10 I presume?

[10:21:00.0000] <AryehGregor>
Velmont, no, I was using it for IE9.

[10:21:01.0000] <AryehGregor>
Their Windows micro VMs are very cheap, and nowadays even free for the first year if you don't use them too much.

[10:24:00.0000] <Velmont>
AryehGregor: And you rdesktop to it?

[10:24:01.0000] <AryehGregor>
Velmont, yes.

[10:24:02.0000] <AryehGregor>
Much cheaper than a Windows license.

[10:25:00.0000] <Velmont>
Hmm. Well, my collegaue behind me has a Windows machine he never uses, so I just rdesktop to that one now. Although it throws me or him out, because seemingly windows 7 pro only support one user.

[10:28:00.0000] <jgraham>
That's how you know it's pro - all professionals get their *own* computer so multiuser support is unneeded

[10:28:01.0000] <Velmont>
jgraham: Ah.

[10:29:00.0000] <jgraham>
/me is disappointed that the unprefixing conversation was couched entirely in terms of the Process rather than end user benefit

[10:32:00.0000] <AryehGregor>
jgraham, precisely.

[10:32:01.0000] <AryehGregor>
I'm starting to get annoyed at the CSSWG.

[10:32:02.0000] <AryehGregor>
It seems much more bureaucratic and political, and less goal-oriented, than what I'm used to in HTML/DOM stuff.

[10:32:03.0000] <Velmont>
Hehe, starting sounds like an understatement. :]

[10:33:00.0000] <AryehGregor>
Oh well.

[10:33:01.0000] <AryehGregor>
As long as I'm doing useful work.

[10:54:00.0000] <AryehGregor>
Velmont, seems to be working so far.

[10:55:00.0000] <AryehGregor>
Good thing I have 8 GB of RAM . . .

[10:56:00.0000] <AryehGregor>
Ack, swapping!

[11:02:00.0000] <AryehGregor>
/me grumbles

[11:02:01.0000] <AryehGregor>
Too much memory usage.

[11:02:02.0000] <AryehGregor>
Shouldn't have tried compiz --replace, though.

[11:02:03.0000] <AryehGregor>
Even though compiz was using 1.9G resident . . . whatever.

[11:03:00.0000] <Hixie>
so on the whatwg list there are people asking for an API to help them create a browser hosted by a browser

[11:04:00.0000] <Hixie>
which is pretty crazy

[11:04:01.0000] <Hixie>
but then on public-webapps tbl suggests the same thing?!

[11:04:02.0000] <Hixie>
did we just go straight from january to april???

[11:04:03.0000] <Ms2ger>
Isn't that what Mozilla is spending all its time on?

[11:12:00.0000] <Hixie>
assuming you mean "chromeless", my understanding is that they're not expecting that to just be something any site can just do

[11:19:00.0000] <AryehGregor>
Velmont, looks like it works fine.

[11:28:00.0000] <Velmont>
AryehGregor: Cool! Will try it tomorrow then :D

[11:58:00.0000] <AryehGregor>
/me is really, really confused by fixed backgrounds now

[13:03:00.0000] <roc>
AryehGregor: ping?

[13:03:01.0000] <AryehGregor>
roc, pong.

[13:03:02.0000] <roc>
suppose we have a CSS-transformed <span> containing a float

[13:04:00.0000] <AryehGregor>
roc, 'transform' has no effect on <span> per spec.

[13:04:01.0000] <roc>
... oh

[13:04:02.0000] <AryehGregor>
Whatever question you were about to ask is probably a reason for that to be true.  :)

[13:04:03.0000] <AryehGregor>
roc, https://bugzilla.mozilla.org/show_bug.cgi?id=722463

[13:05:00.0000] <roc>
hmm

[13:05:01.0000] <roc>
will transforms be applicable to flexboxes?

[13:05:02.0000] <AryehGregor>
I have not the faintest idea.

[13:06:00.0000] <AryehGregor>
CSS seems like a house of cards to me, with everyone bolting on new features in different places without trying to model them in a unified way, so the interactions between different new pieces are impossible to reason about per spec.

[13:06:01.0000] <AryehGregor>
Everything has to be special-cased.

[13:06:02.0000] <AryehGregor>
We really need to remodel CSS from scratch to make it well-defined.

[13:07:00.0000] <roc>
I totally agree

[13:07:01.0000] <roc>
regions are the worst example of that right now

[13:07:02.0000] <hober>
AryehGregor: where will you find a hixie-clone to do that?

[13:08:00.0000] <roc>
they break existing assumptions in all kinds of ways and no-one seems to care

[13:08:01.0000] <Hixie>
i've been saying we need to do that for a while now

[13:08:02.0000] <AryehGregor>
hober, I'd volunteer if I were sure I'd keep working on a regular basis indefinitely (which I probably won't).

[13:08:03.0000] <AryehGregor>
I'm pretty sure I could do it.

[13:08:04.0000] <roc>
but this is understandable behavior given the market dynamics

[13:08:05.0000] <roc>
the market rewards shipping features and not much elese

[13:09:00.0000] <hober>
AryehGregor: why wouldn't you be working on a regular basis indefinitely?

[13:09:01.0000] <AryehGregor>
hober, because I'm starting school again soon, probably for a few years.  Probably I'll start regular work after that.

[13:09:02.0000] <hober>
err, that sounded too much like eliza, sorry

[13:09:03.0000] <Hixie>
the biggest problem is that it'd be politically impossible to do it right now

[13:09:04.0000] <hober>
AryehGregor: ahh, ok

[13:09:05.0000] <Hixie>
since the csswg doesn't want to do it

[13:09:06.0000] <Hixie>
and doing it elsewhere would make the whatwg/htmlwg situation look like a birthday party

[13:10:00.0000] <AryehGregor>
Unfortunately, the CSSWG is a problem but not as much of one as an XHTMLWG, so it's probably not practical to work around it in the same way.

[13:10:01.0000] <roc>
I don't think the WG is opposed to it

[13:10:02.0000] <roc>
it's just that there's no-one to do it

[13:10:03.0000] <roc>
because everyone in the group either wants to work on new features instead, or is forced by market pressure to do so

[13:11:00.0000] <AryehGregor>
So for instance: https://www.w3.org/Bugs/Public/show_bug.cgi?id=15834

[13:11:01.0000] <gsnedders>
roc: I think some WG members would push back as it'd mean a bunch of things taking longer to REC in all probability

[13:11:02.0000] <Hixie>
i'm pretty sure that if you said you wanted to start over and define css from scratch, wg members would push back so hard you would find yourself out of the group

[13:11:03.0000] <AryehGregor>
I just proposed this text: "If the root element is transformed, the transformation applies to the entire canvas, including any background specified for the root element.  Since the background painting area <http://dev.w3.org/csswg/css3-background/#background-painting-area> for the root element is the entire canvas, which is infinite, the transformation might cause parts of the background that were originally off-screen to appear.  For example

[13:11:04.0000] <AryehGregor>
, if the root element's background were repeating dots, and a transformation of scale(0.5) were specified on the root element, the dots would shrink to half their size, but there will be twice as many, so they still cover the whole viewport."

[13:11:05.0000] <AryehGregor>
That is such ridiculous hand-waving.

[13:12:00.0000] <AryehGregor>
If we had proper centralized definitions, that would be one short sentence.

[13:12:01.0000] <roc>
gsnedders: they'd have to be done in parallel. If you stop things going to REC, that just makes everything worse

[13:12:02.0000] <AryehGregor>
Hixie, I think they can't kick anyone out of the group, can they?  But they can refuse to host the spec.

[13:13:00.0000] <roc>
Hixie: I don't, as long as you promise to be compatible, which if course you would

[13:13:01.0000] <gsnedders>
roc: Oh, certainly. But I still think there will be a kick-back as it'd divert discussion time and the like, which would thereby delay REC for other things.

[13:13:02.0000] <Hixie>
well we'll never know since as you say, we don't have a volunteer :-)

[13:14:00.0000] <AryehGregor>
gsnedders, it wouldn't divert discussion time if someone wanders into a cave for three years and comes back out with a big spec and test-suite that matches implementations and is vastly clearer.

[13:14:01.0000] <roc>
given the umpteen billion dollars being spent on Web browsers and apps, you'd think we could fund something as critical as this

[13:14:02.0000] <Hixie>
it's not a funding problem

[13:14:03.0000] <AryehGregor>
Hey, I'm willing to do it.  Just I don't foresee having the time for the next few years.

[13:14:04.0000] <gsnedders>
AryehGregor: Oh, if you didn't change any conformance requirements, then I agree.

[13:15:00.0000] <roc>
Hixie: sure it is. With enough funding, we could make Aryeh do it :-)

[13:15:01.0000] <gsnedders>
But everytime anyone touches anything, from experience, they end up changing conformance requirements they disagree with.

[13:15:02.0000] <AryehGregor>
gsnedders, only because they don't have the attitude of people like Hixie or me.

[13:15:03.0000] <AryehGregor>
I.e., match implementations at all costs.

[13:15:04.0000] <AryehGregor>
Except if they don't agree anyway or are completely insane.

[13:16:00.0000] <gsnedders>
AryehGregor: Where has the CSS WG gone against that POV?

[13:16:01.0000] <AryehGregor>
gsnedders, I'm not saying it has.

[13:16:02.0000] <AryehGregor>
Example of current craziness: I just realized that <table> elements generate two boxes, an inner and an outer one.

[13:16:03.0000] <AryehGregor>
Thus, *every single thing* that refers to an element's box is ambiguous unless it special-cases tables.

[13:16:04.0000] <roc>
yeah, that's a good one

[13:17:00.0000] <roc>
everything that refers to an element's box is ambiguous for lots of reasons

[13:17:01.0000] <AryehGregor>
Argh.

[13:17:02.0000] <roc>
elements that have been broken across lines, columns or pages, for example

[13:17:03.0000] <gsnedders>
AryehGregor: Most things in CSS WG specs that diverge from impls are where impls intend on converging on that behaviour.

[13:17:04.0000] <roc>
oh, and regions, which introduce additional issues

[13:18:00.0000] <roc>
and of course, some elements have no box

[13:18:01.0000] <AryehGregor>
gsnedders, not if the transforms spec is anything to judge by.  I've filed 30 bugs in the last month.

[13:19:00.0000] <gsnedders>
AryehGregor: That spec is in flux, and impls often don't match each other.

[13:19:01.0000] <AryehGregor>
Implementations match each other almost perfectly for 2D transforms.

[13:19:02.0000] <AryehGregor>
There are issues like rotate3d() being defined with the angle reversed compared to implementations.

[13:19:03.0000] <AryehGregor>
Or skew() not being defined at all.

[13:19:04.0000] <roc>
I am confident that the CSS WG is sold on the idea that specs must match implementations

[13:19:05.0000] <AryehGregor>
Or transform-origin being defined in two different contradictory ways.

[13:19:06.0000] <AryehGregor>
roc, yes, that's true.

[13:19:07.0000] <roc>
on the whole

[13:22:00.0000] <astearns>
roc: do you see additional breaking problems in regions that aren't already present in multicol?

[13:22:01.0000] <roc>
oh, in some cases elements generate multiple boxes due to bidi splitting

[13:22:02.0000] <AryehGregor>
Block elements or just inline?

[13:22:03.0000] <roc>
inline

[13:23:00.0000] <roc>
The CSS 2.1 spec recommended table headers and footers being replicated across pages, which leads to multiple boxes per element, but AFAIK no-one except Gecko implements that and we should just remove it

[13:23:01.0000] <roc>
since it's hellish

[13:23:02.0000] <gsnedders>
Prince does.

[13:23:03.0000] <astearns>
that is hellish, but it is something people want to use

[13:24:00.0000] <roc>
they don't handle DOM changes, which is where it *really* gets hellish

[13:24:01.0000] <roc>
oh, there's position:fixed elements that need to replicate across pages. I think that is implemented across browsers. More boxes per element

[13:25:00.0000] <AryehGregor>
In those cases the boxes at least have the same dimensions, right?

[13:25:01.0000] <AryehGregor>
Or maybe not, especially with transforms . . .

[13:25:02.0000] <gsnedders>
Yeah. that's implemented cross-browser.

[13:25:03.0000] <roc>
yes, as long as you don't support per-page styles

[13:25:04.0000] <gsnedders>
Both WebKit and Presto are buggy around it, though, AFAIK

[13:25:05.0000] <roc>
oh, but pages have different sizes

[13:25:06.0000] <roc>
so, no

[13:25:07.0000] <roc>
sorry :-)

[13:25:08.0000] <AryehGregor>
Yay.

[13:26:00.0000] <roc>
another case is block-in-inline situations

[13:26:01.0000] <AryehGregor>
If I followed my usual way of writing a spec, I'd write a CSS implementation in JavaScript using <canvas> in the course of writing the spec to verify it's correct.  :)

[13:26:02.0000] <roc>
<span>A<div/>B</span> ... the span gets broken into an inline part, an anonymous block part, and an inline part

[13:26:03.0000] <AryehGregor>
Yeah, this is all fun times.

[13:26:04.0000] <roc>
you can think of that as a grotesque form of line breaking I suppose

[13:27:00.0000] <roc>
but it means your boxes don't even all have the same type

[13:27:01.0000] <roc>
OK, I think I'm done :-)

[13:27:02.0000] <roc>
astearns: yes

[13:28:00.0000] <roc>
regions are worse than multicol

[13:28:01.0000] <AryehGregor>
All of which suggests that I'm wasting my time trying to find corner cases where browsers disagree on exactly how to apply transforms, because it's shooting fish in a barrel and is just going to require zillions of special cases.

[13:28:02.0000] <roc>
astearns: in multicol, at least each column box has the same parent. with regions that doesn't hold

[13:28:03.0000] <AryehGregor>
It would be more worthwhile for me to finish up a basic transform test suite for both 2D and 3D, help work out any remaining kinks, and move on to something more productive than CSS until it's rewritten from scratch.

[13:29:00.0000] <hober>
nonono, your bug-filing on the transforms spec is super useful

[13:29:01.0000] <hober>
and the test suite work too

[13:29:02.0000] <roc>
AryehGregor: I think our goal here is to have enough interop and tests to progress to CR

[13:29:03.0000] <gsnedders>
AryehGregor: No, edge-cases are far more important in layout-land than DOM-land.

[13:29:04.0000] <roc>
the Web badly needs that

[13:29:05.0000] <AryehGregor>
hober, I know, but only up to a point . . .

[13:29:06.0000] <AryehGregor>
roc, well, who decides how many tests are needed for CR?

[13:29:07.0000] <hober>
s/for/to exit/

[13:29:08.0000] <roc>
I'm willing to let you decide :-)

[13:30:00.0000] <hober>
obviously, only you can choose how to spend your time, but personally I'm very happy that you're making tests and filing bugs wrt transforms

[13:30:01.0000] <roc>
astearns: the current example I'm harping on is where you have an element that has 'opacity' and needs to get rendered as a single unit. It flows into two regions, and one of the regions is inside an element with its own 'opacity'

[13:31:00.0000] <AryehGregor>
roc, I spent the last two days or so finding more corner cases.

[13:31:01.0000] <roc>
astearns: how do you render that? The first element needs to be rendered as a single unit, but it can't be

[13:31:02.0000] <AryehGregor>
Some are just silly bugs, like Gecko and WebKit mangling transformed file inputs in some cases.

[13:31:03.0000] <hober>
roc: do two renders of the element with opacity and slice?

[13:31:04.0000] <AryehGregor>
But some are bugs that arise from the ambiguity of CSS.

[13:31:05.0000] <roc>
this can't happen with columns since two column boxes can't have different ancestor chains

[13:31:06.0000] <astearns>
roc: thanks - I don't think we have that as an issue, so I'll add it

[13:31:07.0000] <AryehGregor>
I grant that the stuff I've done so far remains useful.

[13:31:08.0000] <gsnedders>
(Bear in mind for CR the main aim is to prove that the whole spec can implemented)

[13:31:09.0000] <roc>
I've brought it up on the www-style list multiple times

[13:32:00.0000] <AryehGregor>
But does anyone really want me to file a bug on how browsers behave when a position: fixed element is repeated across multiple pages with different sizes and you transform it?

[13:32:01.0000] <AryehGregor>
That far doesn't seem very useful to me.

[13:34:00.0000] <roc>
astearns: forgive me if I come across as a self-righteous prat in the following ... but this is a pattern that I've seen repeated too many times

[13:34:01.0000] <AryehGregor>
I'd actually be really interested to see how hard it is to start writing a unified CSS spec.  Start with just block and inline elements in normal flow with margin/border/padding, that kind of thing.

[13:34:02.0000] <AryehGregor>
I imagine no one will be willing to pay me to do that, though.  :)

[13:35:00.0000] <jgraham>
Well that is an interesting and testable question

[13:35:01.0000] <jgraham>
Is nyone prepared to pay AryehGregor enough to rewrite CSS

[13:36:00.0000] <roc>
astearns: a) vendor(s) rush to implement a feature and "get it out there" (probably prefixed) b) lots of corner cases are ignored c) the Web starts to depend on the (prefixed) feature c) later spec writers and/or other implementors try to implement, discover feature makes no sense d) those people get to clean up the mess while implementors a) move on to the next feature

[13:36:01.0000] <AryehGregor>
Well, I don't have time to fully rewrite it just yet, only to do a very basic start.

[13:36:02.0000] <AryehGregor>
So it wouldn't be of much use to anyone.

[13:36:03.0000] <AryehGregor>
I hope someone will be willing to pay me to do it someday, if no one else beats me to it.

[13:36:04.0000] <divya>
/me starts a kikstarter project

[13:36:05.0000] <divya>
kickstarter even

[13:37:00.0000] <jgraham>
Well they would have to pay you enough that you were prepared to keep working on it rather than do whatever else you had in mind

[13:37:01.0000] <jgraham>
:)

[13:37:02.0000] <AryehGregor>
The problem is, my desire for money is finite relative to the other things I want to do.  So you'd just encourage me to work fewer hours if you paid me more per hour.

[13:37:03.0000] <astearns>
roc: no worries, I agree with you. I want to get all the corner cases considered (and get implementation feedback from mozilla and opera)

[13:41:00.0000] <roc>
hober: that might work

[13:41:01.0000] <roc>
for opacity

[13:42:00.0000] <roc>
in fact, duplicating the rendering might work in general

[13:43:00.0000] <roc>
but it's hard to be sure

[13:46:00.0000] <jgraham>
In unrelated news, developing webaps seems to kind of suck. I mean there is lots of - what seems to be - accidential complexity. If you want to do something "simple" like sync the state of some controls with a server using ajax it isn't really obvious what the right choices are for storing the data, or for organising the code.

[13:47:00.0000] <divya>
its why people use frameworks

[13:47:01.0000] <jgraham>
Well yes

[13:48:00.0000] <jgraham>
But there is a major paradox of choice issue there

[13:48:01.0000] <divya>
yeah :(

[13:48:02.0000] <jgraham>
and it's not really clear what works with what other things

[13:49:00.0000] <divya>
yeah true enough, we have a surfeit of frameworks and not enough understanding of what does what and when

[13:53:00.0000] <jgraham>
The only thing that everyone seems to use is jQuery. Which is better than DOM I guess, but it does make me feel a bit... unclean, perhaps. Because everything seems to be based on magic and string manipulation. And having all these things that are sometimes wrapped in magic jQuery stuff and sometimes have the underlying implementation leak through

[13:53:01.0000] <astearns>
roc: bug stub at https://www.w3.org/Bugs/Public/show_bug.cgi?id=15835 (with your latest list comment)

[13:53:02.0000] <roc>
actually I think Vincent Hardy just responded to my email by filing his own bug :-)

[13:54:00.0000] <jgraham>
I guess my perspective on that is very unusual though since I know DOM rather well and jQuery rather poorly whilst most webdevs are the exact opposite

[13:54:01.0000] <astearns>
bah

[13:55:00.0000] <divya>
jgraham: ha true. but jQuery is hardly enough for these webapps

[13:55:01.0000] <roc>
yes, it's always good to check the latest messages on the mailing list before going off on a rant :-)

[13:57:00.0000] <astearns>
actually, they might be separate bugs. Vincent's is about stacking contexts, which could be specified without addressing opacity/filters directly

[13:57:01.0000] <roc>
ok

[14:07:00.0000] <jgraham>
divya: Right. That is tidying up the platform. The next level where there are relatively high-level primitives for writing complex applications seems to be missing

[14:08:00.0000] <jgraham>
This is not a new observation, obviously

[14:08:01.0000] <divya>
yeah everyone seems to have their own idea of what that would look like :(

[14:08:02.0000] <divya>
hence the fragmentation


2012-02-02
[16:56:00.0000] <Hixie>
hm, no abarth

[16:56:01.0000] <Hixie>
aha, he's in #webkit

[23:16:00.0000] <MikeSmith>
Hixie: http://www.whatwg.org/issues/data.html looks borked

[23:17:00.0000] <MikeSmith>
oh

[08:00:00.0000] <gsnedders>
Anyone around that understands __proto__ in SM?

[08:10:00.0000] <gsnedders>
Basically, anyone know what Object.prototype.__proto__ does?

[08:11:00.0000] <gsnedders>
I'm confused looking over the thread in es-discuss.

[08:59:00.0000] <asmodai>
Mmm

[08:59:01.0000] <asmodai>
I wonder why Opera mobile does not allow fingerpress on URL to have a copy URL popup option.

[09:12:00.0000] <gsnedders>
asmodai: What OS?

[09:13:00.0000] <asmodai>
Android 3

[09:13:01.0000] <asmodai>
Only got a Save As and Copy Text option when long pressing an URL leading to an apk (nightly firefox in this case)

[09:16:00.0000] <gsnedders>
Oh, you mean on a link?

[09:17:00.0000] <asmodai>
Aye

[09:18:00.0000] <asmodai>
Many cases where you might want to drop an URL into an evernote note or something like that

[09:34:00.0000] <TabAtkins_>
Argh, Transforms are *so* messed up.

[09:34:01.0000] <TabAtkins_>
I suspect largely because nobody ever finished the spec, but everyone implemented anyway.

[09:35:00.0000] <Ms2ger>
Sounds like something to blame Apple for

[09:35:01.0000] <AryehGregor>
TabAtkins_, :)

[09:36:00.0000] <AryehGregor>
TabAtkins_, on the other hand, it might get interesting if you resolved ems for computed value but not percentages . . .

[09:36:01.0000] <AryehGregor>
/me tries to think of an interesting case

[09:36:02.0000] <AryehGregor>
It's a corner case anyway, since there's no reason for anyone to specify transform: inherit, ever.

[09:37:00.0000] <AryehGregor>
We could probably change it so ems are resolved and no one would notice.

[09:41:00.0000] <Ms2ger>
AryehGregor, I think a well-written css3-box would be really nice, fwiw

[09:42:00.0000] <AryehGregor>
/me has never looked at css3-box

[09:42:01.0000] <Ms2ger>
Hey, it doesn't have a warning

[09:42:02.0000] <Ms2ger>
TabAtkins?

[09:44:00.0000] <bga>
w3c reminds me idef more and more

[09:49:00.0000] <annevk>
back

[09:49:01.0000] <annevk>
jetlagged

[09:49:02.0000] <TabAtkins_>
Ms2ger: Yes?

[09:50:00.0000] <TabAtkins_>
Oh, I see.

[09:50:01.0000] <TabAtkins_>
Huh, I wonder how that escaped my warning crusade.

[09:50:02.0000] <hober>
annevk: welcome back!

[09:51:00.0000] <annevk>
inbox >4000

[09:51:01.0000] <Ms2ger>
annevk, multipage HTML is broken

[09:51:02.0000] <annevk>
yeah, I read about that

[09:51:03.0000] <annevk>
is foolip away too?

[09:51:04.0000] <annevk>
or just didn't have the time

[09:58:00.0000] <TabAtkins_>
AryehGregor: Changing it to resolve ems would be great, yes.

[10:05:00.0000] <annevk>
MikeSmith: resolved bugs still don't go to www-dom I think

[10:05:01.0000] <annevk>
MikeSmith: the timeout given in my email (backed up by Art) has long since passed

[10:05:02.0000] <annevk>
MikeSmith: so I think we can go ahead with that now

[10:11:00.0000] <annevk>
Velmont: hey, have you ever played with gzip and XHR?

[10:12:00.0000] <annevk>
Velmont: should work fine no?

[10:12:01.0000] <AryehGregor>
Ms2ger or some Mozilla person: do reftests detect differences that aren't painted onto the screen?  Like, they're outside the initial viewport?

[10:12:02.0000] <Ms2ger>
Don't think so

[10:13:00.0000] <AryehGregor>
I just found a reftest that seems to want to say matrix3d(1,0,0,0, 0,2,0,0, 0,0,3,0, 4,5,6,1) is the same as scale3d(1,2,3) translate3d(4px,5px,6px), which of course it's not, but the transformed div has no background and the text is off-screen, so I guess it's not surprising that it passes anyway.

[10:13:01.0000] <annevk>
"Responses must have the content-encodings automatically decoded."

[10:13:02.0000] <annevk>
so that should work fine

[10:16:00.0000] <AryehGregor>
. . . also, I just found a test that's precisely identical to its ref.

[10:16:01.0000] <Ms2ger>
<3

[10:16:02.0000] <AryehGregor>
I guess I should file bugs.

[10:16:03.0000] <Ms2ger>
Checked for silly things like BOMs?

[10:17:00.0000] <AryehGregor>
diff -u returned nothing.

[10:17:01.0000] <Ms2ger>
A bug it is, then, I guess

[10:17:02.0000] <AryehGregor>
diff -u layout/reftests/transform-3d/overflow-hidden-1{a,-ref}.html

[10:17:03.0000] <AryehGregor>
/me reports

[10:17:04.0000] <Ms2ger>
Hah

[10:51:00.0000] <AryehGregor>
Ms2ger, if I'm filing a bug that was introduced by another bug, the new bug I file should depend on the old bug, right?  Not block it?

[10:52:00.0000] <AryehGregor>
/me always gets them confused

[10:52:01.0000] <Hixie>
MikeSmith: wfm now

[10:52:02.0000] <Ms2ger>
AryehGregor, block

[10:52:03.0000] <AryehGregor>
Okay.

[10:55:00.0000] <Hixie>
anyone have IE handy?

[10:55:01.0000] <AryehGregor>
Hixie, yes.

[10:55:02.0000] <AryehGregor>
/me is using Windows 8 Developer Preview in VirtualBox with IE10

[10:56:00.0000] <AryehGregor>
No need for licensing fees.

[10:56:01.0000] <Hixie>
can you load http://software.hixie.ch/utilities/js/live-dom-viewer/ and hit the download link

[10:56:02.0000] <AryehGregor>
Then what?

[10:56:03.0000] <Hixie>
and then hit set 0, check that option 0 is selected, then hit set 1, check that option 1 is selected, and then hit set null, and see what happens?

[10:57:00.0000] <AryehGregor>
When I hit "set 0", option 0 is selected.  Then when I hit "set 1", option 1 is selected.  Then when I hit "set null", option 0 is selected again.

[10:57:01.0000] <AryehGregor>
In IE10 Developer Preview.

[10:57:02.0000] <Hixie>
awesome, thanks

[10:57:03.0000] <Hixie>
and nothing is selected for set 2, right?

[10:57:04.0000] <AryehGregor>
Right.

[10:57:05.0000] <Hixie>
ok so the guy reporting this bug was just wrong, cool

[10:57:06.0000] <Hixie>
thanks

[10:58:00.0000] <Hixie>
it's so cool the way these days the specs all line up and actually describe obscure edge cases interoperably

[10:59:00.0000] <AryehGregor>
Well, the HTML/DOM type of specs, at least . . . CSS not so much, as I'm finding.

[10:59:01.0000] <Hixie>
:-(

[11:02:00.0000] <TabAtkins_>
Dude, you're explicitly dealing with specs that are shitty because they got dropped.

[11:02:01.0000] <TabAtkins_>
Stop generalizing, please. >_<

[11:02:02.0000] <dglazkov>
good morning, Whatwg!

[11:02:03.0000] <AryehGregor>
TabAtkins_, no, I definitely mean all CSS specs.  At least all the ones to do with layout.  Parsing and the cascade seems fine.  But layout is horribly vague.  It needs to be redefined algorithmically using precise hyperlinked definitions.

[11:03:00.0000] <AryehGregor>
We were just talking about how terms like "the element's box" are ambiguous in tons of cases.

[11:03:01.0000] <annevk>
oh hey Hixie, until when are you around?

[11:03:02.0000] <TabAtkins_>
Mm, that's true.

[11:03:03.0000] <Hixie>
woot, anne has returned!

[11:04:00.0000] <Hixie>
annevk: i'm at home with some virus or something

[11:04:01.0000] <annevk>
Hixie: planning on looking into that multipage issue, but food is getting near

[11:04:02.0000] <Hixie>
annevk: so on and off depending on when i'm feeling better and when i'm out cold in bed

[11:04:03.0000] <TabAtkins_>
A big problem there is that no one has written Box yet, and 2.1 is still overly vague.

[11:04:04.0000] <annevk>
Hixie: oh, good luck with that

[11:04:05.0000] <Hixie>
i'll be fine

[11:04:06.0000] <annevk>
Hixie: will take a look a little later (still going through email) and ping you again

[11:04:07.0000] <AryehGregor>
A big problem is that tons of different people are all writing different specs to bolt on features in different places and there's very little thought given to how they interact, because nothing is being done in a unified fashion.

[11:04:08.0000] <Hixie>
annevk: cool

[11:05:00.0000] <Hixie>
annevk: it looks like your end isn't fetching the spec

[11:05:01.0000] <Hixie>
annevk: at least, i don't get any hits for the spec when i ping your end

[11:05:02.0000] <annevk>
I use svn update

[11:05:03.0000] <Hixie>
oh

[11:05:04.0000] <Hixie>
hm

[11:05:05.0000] <Hixie>
might be my fault then

[11:05:06.0000] <Hixie>
maybe i'm no longer updating something

[11:05:07.0000] <Hixie>
let me check

[11:06:00.0000] <Hixie>
nope, looks like the repo is up to date

[11:06:01.0000] <Hixie>
both complete.html and index (though tehy're identical now of course)

[11:07:00.0000] <Hixie>
man, i really need to add a mail filter to send anything matching (to:public-webapps subject:charter) to trash

[11:08:00.0000] <annevk>
hmm a week out of date

[11:12:00.0000] <annevk>
oh, dreamhost was hacked, had to reset my password

[11:12:01.0000] <annevk>
they were hacked jan 21... spec stopped updating jan 24

[11:12:02.0000] <annevk>
hmm

[11:15:00.0000] <Hixie>
yeah i don't think the password change would have any effect

[11:19:00.0000] <annevk>
and I'm in

[11:22:00.0000] <annevk>
Hixie: fixed

[11:23:00.0000] <Hixie>
what was wrong?

[11:23:01.0000] <annevk>
Hixie: same problem as last time, svn cleanup was required

[11:23:02.0000] <Hixie>
weird

[11:23:03.0000] <annevk>
I put it in the cgi script now

[11:23:04.0000] <Hixie>
heh

[11:23:05.0000] <annevk>
not sure if that'll help

[11:25:00.0000] <Hixie>
annevk: any idea what's causing svn cleanup to be needed?

[11:26:00.0000] <annevk>
svn being locked while checking out maybe? not sure if that's possible, but it complaints about locking

[11:26:01.0000] <Hixie>
weird

[11:31:00.0000] <Ms2ger>
This is actually what *specs* do?

[11:31:01.0000] <annevk>
https://www.w3.org/Bugs/Public/show_bug.cgi?id=12539#c11 is still not fixed

[11:31:02.0000] <annevk>
any idea jgraham ?

[11:32:00.0000] <Ms2ger>
Apparently the web wants isSameNode :(

[11:32:01.0000] <Ms2ger>
And GWT in particular

[11:33:00.0000] <Ms2ger>
annevk, ^

[11:34:00.0000] <annevk>
aah

[11:34:01.0000] <annevk>
sad

[12:03:00.0000] <annevk>
IE is shipping BlobBuilder?

[12:03:01.0000] <annevk>
I thought we were going to kill that? :(

[12:05:00.0000] <AryehGregor>
WTF -- transform-origin parses differently in standards and quirks mode?

[12:05:01.0000] <AryehGregor>
Interoperably?

[12:07:00.0000] <AryehGregor>
transform-origin: 100 100 is interpreted as transform-origin: 100px 100px in quirks mode, but not standards mode . . .

[12:07:01.0000] <AryehGregor>
Is this an across-the-board difference in CSS parsing?  If so, is it specced somewhere?

[12:07:02.0000] <AryehGregor>
TabAtkins, ^^

[12:07:03.0000] <Philip`>
https://developer.mozilla.org/en/Mozilla_Quirks_Mode_Behavior ?

[12:07:04.0000] <Philip`>
("The CSS parser interprets unitless numbers as px")

[12:08:00.0000] <Philip`>
(Oh, I misread "specced" as "documented")

[12:08:01.0000] <AryehGregor>
Seems interoperable.

[12:09:00.0000] <AryehGregor>
This should probably be in Values and Units.

[12:09:01.0000] <Ms2ger>
Oh, and I think we parse color: 000000 in quirks

[12:09:02.0000] <Ms2ger>
Quirks mode doesn't exist in CSS, though

[12:10:00.0000] <AryehGregor>
So it's only for styles that are inline in an HTML document?

[12:10:01.0000] <bga>
css compressors will be happy to hear this

[12:11:00.0000] <bga>
Ms2ger and color: fff too?

[12:11:01.0000] <Ms2ger>
Dunno

[12:11:02.0000] <Ms2ger>
AryehGregor, is it? I'm not sure

[12:11:03.0000] <AryehGregor>
/me also doesn't

[12:13:00.0000] <AryehGregor>
data:text/html,<div style="background:00ff00; height:100;width:100"> displays a green box in IE/Chrome/Opera, but not Firefox.

[12:14:00.0000] <Ms2ger>
Hmm, attributes may go through another path

[12:15:00.0000] <AryehGregor>
Awesome.

[12:21:00.0000] <annevk>
I think they should all go through the same path

[12:21:01.0000] <annevk>
and I think we should define it

[12:24:00.0000] <AryehGregor>
/me just sent mail to www-style

[12:28:00.0000] <Ms2ger>
Hmm, ParseStyleAttribute does seem to check for quirks mode

[12:30:00.0000] <Ms2ger>
Seems like this should work...

[12:32:00.0000] <Ms2ger>
Aha

[12:33:00.0000] <Ms2ger>
AryehGregor, doesn't work for compound properties; color and background-color work

[12:33:01.0000] <AryehGregor>
Nice.

[12:34:00.0000] <Ms2ger>
Ah, and bz beat me to it

[12:49:00.0000] <annevk>
so data URL rules when fetching data URLs through an HTTP API

[12:49:01.0000] <annevk>
what would be the best place?

[12:49:02.0000] <annevk>
XMLHttpRequest for now?

[13:10:00.0000] <bga>
gwt users blame Ms2ger that he deleted isSameNode

[13:12:00.0000] <annevk>
I wonder why GWT uses isSameNode

[13:34:00.0000] <annevk>
so what's HTTP/2.0?

[13:34:01.0000] <annevk>
is it intended to be the new name for SPDY?

[13:52:00.0000] <jgraham>
I presume HTTP/2.0 will be where they take SPDY, make some backward-incompatible changes, and leave browsers with 3 protocols to implement

[13:57:00.0000] <annevk>
reminiscent of Kafka

[14:00:00.0000] <annevk>
<2400

[14:00:01.0000] <annevk>
(there was a lot of spam :( )

[14:04:00.0000] <hober>
jgraham: sounds familiar...

[14:10:00.0000] <gsnedders>
jgraham: I'm not sure SPDY has any legacy which prevents it from being dropped, though.

[14:10:01.0000] <annevk>
why is http://tools.ietf.org/html/draft-ietf-websec-origin not linked to http://tools.ietf.org/html/draft-abarth-origin ?

[14:11:00.0000] <gsnedders>
jgraham: Also Firefox already supports at least four already: HTTP, FTP, SPDY, and Gopher.

[14:11:01.0000] <hober>
annevk: and both should really point to http://tools.ietf.org/html/rfc6454

[14:11:02.0000] <abarth>
annevk: dunno.  I think we'd need to ask someone at the IETF to add the links

[14:12:00.0000] <annevk>
hober: yeah, the former does, but I found the latter via Google :/

[14:12:01.0000] <hober>
annevk abarth: of course the ietf have always been so good about this sort of thing</sarcasm>

[14:13:00.0000] <abarth>
annevk: I can update the draft with a link if all else fails

[14:15:00.0000] <annevk>
abarth: I guess I'll ask Julian if I remember

[14:20:00.0000] <jgraham>
gsnedders: I don't think that FTP or Gopher are functionally equivalent to HTTP. I mean Opera support SMTP but it's hardly comparable

[14:23:00.0000] <annevk>
oh, by donating you become an EFF member?

[14:24:00.0000] <annevk>
I wonder if I could have avoided that somehow

[14:26:00.0000] <annevk>
should we add something to http://wiki.whatwg.org/wiki/MetaExtensions about emailing whatwg⊙wo for community review?

[14:26:01.0000] <annevk>
as optional step of course

[14:35:00.0000] <annevk>
only two sleeping spammers on the wiki since I left

[14:35:01.0000] <annevk>
good times

[14:35:02.0000] <asmodai>
Oh hey, it's anne!

[14:40:00.0000] <annevk>
"Obsolescence notices on old specifications, again" ooh

[14:48:00.0000] <annevk>
ooh, there's a subthread on www-archive with the same name

[14:48:01.0000] <annevk>
and no popcorn available

[14:56:00.0000] <jacobolus>
does anyone know what the right way is to unpack a javascript float? i.e. to figure out the exact bits of the internal number?

[14:56:01.0000] <jacobolus>
*internal representation

[14:56:02.0000] <gsnedders>
You mean get at the actual repr of it?

[14:56:03.0000] <jacobolus>
right

[14:57:00.0000] <gsnedders>
Um, there's no built-in way to do so.

[14:57:01.0000] <jacobolus>
sure. I'm just wondering what the best arithmetic to do is that won't introduce rounding errors or w/e

[14:57:02.0000] <gsnedders>
You can probably achieve it through Typed Arrays, actually.

[14:57:03.0000] <jacobolus>
gsnedders: yeah, but that doesn't help me in old browsers :)

[14:57:04.0000] <gsnedders>
Then it's less easy :)

[14:58:00.0000] <jacobolus>
gsnedders: and one thing I'm trying to do is test out the PRNGs behind Math.random(), just for my own edification

[14:59:00.0000] <gsnedders>
I guess you just need to calculate the needed exponent and mantissa yourself.

[15:00:00.0000] <jacobolus>
yeah. so in theory, if I have a number 0 < x < 1, repeatedly multiplying by 2 and sometimes subtracting 1 should avoid rounding problems, right?

[15:01:00.0000] <gsnedders>
I'm nowhere near awake enough to think in that level of detail :)

[15:01:01.0000] <jacobolus>
heh. boo

[15:02:00.0000] <jacobolus>
:)

[15:02:01.0000] <gsnedders>
Well, the exponent is such that you take log2, round-down.

[15:03:00.0000] <gsnedders>
IEEE754 means you need to deal with the exponent bias.

[15:03:01.0000] <gsnedders>
But then you should just be able to subtract Math.pow(2, exponent) from your value to get the mantissa, no?

[15:04:00.0000] <jacobolus>
that's what I would expect

[15:05:00.0000] <jacobolus>
but once I have the mantissa, that's still as a float. I should be able to pull out the bits w/ repeated [multiply by 2], [if > 1 then subtract 1] steps, right?

[15:05:01.0000] <gsnedders>
And both the exponent and mantissa can be expressed exactly (both are less than 2^53), and Math.pow(2, exponent) is guaranteed to have a representation possible.

[15:05:02.0000] <gsnedders>
jacobolus: Just x.toString(2)

[15:06:00.0000] <jacobolus>
gsnedders: oh! didn't realize that one.

[15:07:00.0000] <jacobolus>
gsnedders: I can just use x.toString(2) in general then

[15:08:00.0000] <gsnedders>
jacobolus: Doesn't get you the actual repr of the float, though

[15:08:01.0000] <jacobolus>
but it gives the exponent & mantissa

[15:09:00.0000] <gsnedders>
jacobolus: It shouldn't.

[15:09:01.0000] <gsnedders>
> (Math.pow(2, 51)+1.5).toString(2)

[15:09:02.0000] <gsnedders>
"1000000000000000000000000000000000000000000000000001.1"

[15:09:03.0000] <gsnedders>
For example

[15:10:00.0000] <jacobolus>
that looks correct...?

[15:10:01.0000] <gsnedders>
It's not the exponent and mantissa, though

[15:10:02.0000] <jacobolus>
well, the exponent is however far the . is to the right

[15:11:00.0000] <jacobolus>
and the mantissa is the value if we remove the . and strip leading 0s

[15:11:01.0000] <jacobolus>
and if I read the ieee 754 spec I could figure out precisely how the bits of that are arranged

[15:11:02.0000] <gsnedders>
jacobolus: That's not going to be in IEEE754 double format, though

[15:12:00.0000] <jacobolus>
what do you mean?

[15:12:01.0000] <gsnedders>
(where the mantissa has an implicit leading 1, effectively making it normalized)

[15:12:02.0000] <jacobolus>
sure

[15:12:03.0000] <gsnedders>
Or am I being stupid and half-asleep?

[15:12:04.0000] <gsnedders>
(This seems quite plausible)

[15:12:05.0000] <gsnedders>
(Seeming I am, in fact, half asleep)

[15:12:06.0000] <jacobolus>
gsnedders: what I'm saying is I can deterministically figure out the representation from that, I think

[15:12:07.0000] <gsnedders>
Right.

[15:13:00.0000] <jacobolus>
but in any event, it's good enough for my purposes here

[15:13:01.0000] <jacobolus>
gsnedders: interestingly, v8's Math.random() seems to only do 32 random bits?

[15:13:02.0000] <gsnedders>
jacobolus: No idea.

[15:13:03.0000] <jacobolus>
safari as well

[15:14:00.0000] <jacobolus>
in theory they could do 53 random bits, right?

[15:14:01.0000] <jacobolus>
for a number in (0, 1)

[15:14:02.0000] <gsnedders>
(0, 1]

[15:15:00.0000] <Philip`>
[0, 1)

[15:15:01.0000] <jacobolus>
is it (0, 1]? I was under the impression that they'd never produce 1.

[15:15:02.0000] <gsnedders>
No, I'm just getting my brackets the wrong way around.

[15:15:03.0000] <jacobolus>
gotcha

[15:15:04.0000] <gsnedders>
What Philip` said.

[15:15:05.0000] <Philip`>
0 <= x < 1, if you want the not incredibly confusing notation

[15:15:06.0000] <jacobolus>
:)

[15:16:00.0000] <jacobolus>
the notation is plenty readable to former math students :)

[15:16:01.0000] <jacobolus>
gsnedders: thanks for the toString(2) lead. I for whatever reason thought that only worked for integers

[15:19:00.0000] <Philip`>
I believe at least SpiderMonkey uses an RNG equivalent to lrand48(), which returns 31 bits, but then it gets two random ints and shifts and adds to get a random double

[15:20:00.0000] <Philip`>
I think one difficulty with Math.random() is that if you change it to a higher quality RNG, you lose on critical-for-marketing benchmarks

[15:20:01.0000] <jacobolus>
boo

[15:20:02.0000] <jacobolus>
prngs like MWC are pretty fast though

[15:21:00.0000] <zewt_>
integrate randomness quality into the benchmarks? heh

[15:21:01.0000] <jacobolus>
Philip`: but it's hard to imagine a case where actual calls to random() is the bottleneck. adding just a couple noop function calls seem to dramatically slow things down relative to calling random() bare

[15:22:00.0000] <zewt>
as long as you're not doing anything stupid (like touching /dev/random)

[15:22:01.0000] <jacobolus>
i.e. hard to imagine such cases in real code

[15:22:02.0000] <Philip`>
jacobolus: Never underestimate the ability of benchmark writers to write benchmarks whose bottleneck is nowhere like where they intended :-)

[15:22:03.0000] <jacobolus>
heh. fair enough

[15:23:00.0000] <Philip`>
(especially since the bottlenecks change after the benchmarks are written)

[15:23:01.0000] <jacobolus>
I guess what I mean is, doing `for (var i = 0, r = Math.random; i < 1e6; i++) { r(); };` seems like a relatively rare sort of occurrence

[15:24:00.0000] <jacobolus>
if there's a benchmark along those lines, maybe it should be scrapped :)

[15:24:01.0000] <zewt>
jacobolus: of course, a smart JIT would notice that Math.random() has no side-effects, and elide the whole damn thing :P

[15:24:02.0000] <gsnedders>
A lot of Peacekeeper comes down to little more than that.

[15:25:00.0000] <zewt>
c/c++ compilers definitely do that sort of thing

[15:26:00.0000] <zewt>
(no clue if JS engines do)

[15:26:01.0000] <zewt>
(guess it'd be easy enough to find out)

[15:27:00.0000] <gsnedders>
I *think* V8 and SM should, but in V8's case it needs to be detected as hot-code to get the optimization done!

[15:27:01.0000] <zewt>
chrome production doesn't, anyway

[15:27:02.0000] <zewt>
well, not when pasting into the console

[15:27:03.0000] <zewt>
gsnedders: of course, that's another problem with benchmarking JS :P

[15:27:04.0000] <zewt>
was: re: stating the obvious

[15:28:00.0000] <gsnedders>
zewt: It's optimization for hot-code should, at least. The problem is you have to run the non-optimized code first. :P

[15:28:01.0000] <gsnedders>
zewt: Well, it's a problem with any JITing language.

[15:28:02.0000] <zewt>
sticking it in a function and calling it a few times and it doesn't change, at least

[15:28:03.0000] <zewt>
gsnedders: well, I'm blaming the naive benchmarks, not JS

[15:28:04.0000] <gsnedders>
Try a few hundred :P

[15:28:05.0000] <jacobolus>
gsnedders: is commented peacekeeper code easily accessible someplace?

[15:28:06.0000] <gsnedders>
jacobolus: No.

[15:28:07.0000] <jacobolus>
their site is kind of a mess

[15:29:00.0000] <zewt>
shouldn't have to run an expensive function a few hundred times to get it to optimize :P not when calling the function takes over a second

[15:29:01.0000] <zewt>
(increased to 1e7 so I could see the runtime clearly)

[15:29:02.0000] <gsnedders>
jacobolus: The test frame just loads the same URL over and over again, and changes based on cookies :P

[15:30:00.0000] <jacobolus>
how can people take a 21st century benchmark seriously that doesn't clearly show & explain what it's doing?

[15:30:01.0000] <gsnedders>
Marketing.

[15:31:00.0000] <Philip`>
The perceived quality of a benchmark is entirely dependent on how pretty its graphs are

[15:31:01.0000] <Philip`>
(That's how I judge them, at least)

[15:31:02.0000] <jacobolus>
Philip`: well are there any good benchmarks with shitty graphs that need help?

[15:32:00.0000] <jacobolus>
I bet with a couple days effort it would be possible to make some damn pretty graphs

[15:32:01.0000] <jacobolus>
use canvas or SVG, and if they aren't supported, just "sorry, your browser is so obsolete we can't even show you results"

[15:33:00.0000] <gsnedders>
Kraken for example tests CSE quite heavily.

[15:35:00.0000] <gsnedders>
(for var i = 0; i < 1000; i++) { foo[i] = Math.abs(foo[i] >> 1); bar[i] = foo[i] >> 1; }

[15:35:01.0000] <Philip`>
/me knows too little to know of any good benchmarks

[15:35:02.0000] <gsnedders>
Is what you need to be quick on to be good on Kraken.

[15:36:00.0000] <jacobolus>
gsnedders: "CSE"?

[15:36:01.0000] <gsnedders>
jacobolus: common subexpression elimination

[15:37:00.0000] <jacobolus>
ah, I see

[15:37:01.0000] <gsnedders>
Also you need to be able to tell Math.abs is loop-invariant

[15:37:02.0000] <jacobolus>
gsnedders: with the idea there being that foo[i] >> 1 can't be eliminated because foo[i] changes after the first time?

[15:38:00.0000] <gsnedders>
jacobolus: Gah! No, switch the two statements in the block around.

[15:38:01.0000] <zewt>
understanding const functions is a pretty fundamental optimization anyway, i'd expect

[15:38:02.0000] <gsnedders>
(which means you have to be able to tell that Math.abs is the built-in pure one, and that foo[i] and bar[i] are data properties for all i)

[15:39:00.0000] <gsnedders>
(because if they are accessor properties for any i then they could have side-effects and mutate Math.abs)

[15:39:01.0000] <jacobolus>
sure

[15:39:02.0000] <zewt>
i'd expect engines to optimize for functions like that not being mutated, and have an exception path if anything ever does ("fuck, throw everything jitted away and give up because someone did something horrible")

[15:41:00.0000] <gsnedders>
Also if any are {valueOf:function(){return 1;}} because obv. you can do whatever in that function

[15:41:01.0000] <jacobolus>
are there any "how fast can the jit do when we throw horrible stuff" tests? those would be fun to write

[15:41:02.0000] <zewt>
and if someone creates benchmarks for performance when people do horrible things that break optimizations, they get shot in the head

[15:41:03.0000] <gsnedders>
zewt: Ah, but the point is you don't want the branch for the exception path in the hot code.

[15:41:04.0000] <gsnedders>
Oh, you mean just throwing out all generated code if something mutates such a thing?

[15:41:05.0000] <zewt>
gsnedders: the branch would happen on assignment, not on access

[15:42:00.0000] <zewt>
(putting aside how to do *that* efficiently)

[15:42:01.0000] <zewt>
right

[15:42:02.0000] <gsnedders>
zewt: That could be fun with OSR.

[15:42:03.0000] <zewt>
with who?

[15:42:04.0000] <gsnedders>
on-stack replacement

[15:43:00.0000] <gsnedders>
Imagine you have generated code that assumes a built-in is a built-in, and then you change the built-in.

[15:43:01.0000] <zewt>
right

[15:43:02.0000] <gsnedders>
Everything higher up on the stack has to cope with this change.

[15:43:03.0000] <zewt>
i'd think that would be an important assumption to be able to make

[15:43:04.0000] <zewt>
and cope with if someone is a jerk and violates it

[15:43:05.0000] <gsnedders>
So throwing away code isn't obviously always simple.

[15:43:06.0000] <zewt>
but not optimize for

[15:43:07.0000] <zewt>
heh, i wouldn't expect anything related to JIT to be simple :)

[15:44:00.0000] <zewt>
but yeah, it's definitely a tough problem

[15:44:01.0000] <zewt>
i'd expect the wins to be pretty significant, though

[15:44:02.0000] <gsnedders>
I mean, something like that example at first glance appears to be quite easy to optimize, until you start finding edge-cases that make optimization hard.

[15:45:00.0000] <gsnedders>
zewt: Eh, mostly only on benchmarks, though

[15:45:01.0000] <gsnedders>
Anyhow, time for me to vanish.

[15:45:02.0000] <zewt>
gsnedders: i don't know about that; it should allow general sets of constant-value folding

[15:46:00.0000] <zewt>
granted, many of which you can do by hand, but that's exactly what you shouldn't have to do with a good optimizer

[15:46:01.0000] <zewt>
heh, I think some C optimizers will optimize x = 0; for(int i = 0; i < n; ++i) x += i; to x = n*(n+1)/2

[15:47:00.0000] <zewt>
(which, to be sure, is an optimization only relevant to benchmarks)

[15:53:00.0000] <Philip`>
(I imagine it could be argued that those kinds of optimisations are actually somewhat useful, even though a human could perform the same transformation trivially, because dumb code will be generated via macros or templates and it's nice if the compiler can recognise the special cases instead of forcing the programmer to abandon their nice abstractions and optimise those cases by hand)

[15:53:01.0000] <zewt>
also, those optimizations tend to (though don't always) mirror more useful optimizations

[15:54:00.0000] <zewt>
eg. having enough information in a C compiler to notice common patterns (as opposed to, say, a dumb peephole match for a summation) is obviously a good thing

[15:54:01.0000] <zewt>
(no idea what level the above optimization is actually done at)


2012-02-03
[23:59:00.0000] <zcorpan>
annevk: wb

[00:58:00.0000] <matjas>
where in the spec does it say <summary> may not be omitted if <details> is used?

[01:04:00.0000] <zcorpan>
Content model:

[01:04:01.0000] <zcorpan>
One summary element followed by flow content.

[01:04:02.0000] <zcorpan>
http://www.whatwg.org/specs/web-apps/current-work/multipage/interactive-elements.html#the-details-element

[01:09:00.0000] <matjas>
thanks

[01:09:01.0000] <matjas>
/me files validator.nu bug

[01:34:00.0000] <Ms2ger>
gsnedders, I believe we killed gopher

[01:44:00.0000] <Ms2ger>
/me loves https://bugzilla.mozilla.org/show_bug.cgi?id=723661

[01:44:01.0000] <Ms2ger>
Especially how it was filed yesterday

[02:35:00.0000] <matjas>
MikeSmith: that was quick; thanks!

[02:36:00.0000] <MikeSmith>
no problem man

[02:36:01.0000] <MikeSmith>
th

[02:36:02.0000] <MikeSmith>
thanks for taking time to report it

[02:36:03.0000] <MikeSmith>
as is often the case I'm fixing regressions I introduced myself

[04:03:00.0000] <annevk>
snow

[04:04:00.0000] <annevk>
pretty crazy

[04:15:00.0000] <TabAtkins_>
I'm glad I just now bought some gloves and a scarf, for Paris.  It's below freezing here in London, and colder in France.

[04:16:00.0000] <TabAtkins_>
Does anyone know what 'color' is used for in SVG?

[04:16:01.0000] <annevk>
text?

[04:16:02.0000] <annevk>
and presumably for the currentColor value

[04:16:03.0000] <TabAtkins_>
Oh, it's solely so you can use currentColor

[04:17:00.0000] <TabAtkins_>
No, text uses fill/stroke like everything else.

[04:17:01.0000] <TabAtkins_>
The spec actually calls out that currentColor is the sole use for 'color'.

[04:17:02.0000] <annevk>
thanks zcorpan

[04:17:03.0000] <annevk>
and SVG introduced currentColor... weird

[04:18:00.0000] <annevk>
(CSS only camelcase value?)

[04:18:01.0000] <annevk>
+'

[04:18:02.0000] <TabAtkins_>
Yes, I'm confused about this as well.

[04:19:00.0000] <TabAtkins_>
Maybe it did more in some earlier version?

[04:23:00.0000] <annevk>
did you go through http://www.w3.org/TR/SVG11/ ?

[04:23:01.0000] <annevk>
hmm that says also it's just for currentColor

[04:36:00.0000] <annevk>
how does this change attribute proposal address table editing?

[04:36:01.0000] <annevk>
I thought list items was a solved problem

[04:37:00.0000] <annevk>
HTML even gives advice about it iirc

[04:37:01.0000] <annevk>
oh well, hopefully someone else cares more than I do

[05:09:00.0000] <Velmont>
annevk: No, I never did any real XHR work, only CORS. :]

[05:15:00.0000] <TabAtkins_>
annevk: I figured it out.  currentColor lets SVG use 'color' as a very limited form of CSS variables.

[05:16:00.0000] <annevk>
well yeah

[05:16:01.0000] <annevk>
was that the only reason it was added?

[05:17:00.0000] <TabAtkins_>
Looks like it, yeah.  'color' has literally no effect on anything, anywhere in SVG.

[05:17:01.0000] <annevk>
it allows defining 'border' in terms of CSS, but that's outside SVG and not really that big of a benefit

[05:22:00.0000] <TabAtkins_>
I didn't think that was obvious, btw.  In CSS it doesn't really serve as a variable, since 'color' has *other* effects.  It's a more limited theming device in CSS.

[05:22:01.0000] <TabAtkins_>
But in SVG, 'color' is fully meaningless, so it can be used solely as a vehicle to transmit colors down the DOM for use in descendants.

[05:22:02.0000] <TabAtkins_>
s/colors/a color/

[05:26:00.0000] <annevk>
well it's used by <foreignObject> children at least

[05:32:00.0000] <Velmont>
Trying to find any decision/answer about IndexedDB keypath and "." to seperate objects, anyone know anything about it?

[05:33:00.0000] <Velmont>
It's very possible I could get data from a third party that has   a["my.value"] = thing,  and I'd want to have a keypath that accesses  my.value  like that, not the property value on a my object.

[05:33:01.0000] <Velmont>
So either "my\.value" escaping, or similar stuff. --

[05:40:00.0000] <jgraham>
Velmont: Wait 'till sicking is around and ambush him

[05:40:01.0000] <Velmont>
But I'll be on the plane for FOSDEM soon.

[05:40:02.0000] <Velmont>
Ah, anyone going to FOSDEM?

[06:00:00.0000] <izhak>
Guys, is html5 parser specification finished and ready for implementation?

[06:02:00.0000] <annevk>
it's been implemented in all browsers more or less

[06:03:00.0000] <annevk>
so it's pretty stable I'd say :)

[06:03:01.0000] <annevk>
then again, it might change when we add new features

[06:06:00.0000] <annevk>
inbox <800 teehee

[06:06:01.0000] <annevk>
still about 400 to go to be back to normal

[06:14:00.0000] <asmodai>
shite

[06:15:00.0000] <asmodai>
FF 10 really causing a ton of TDRs with my Nvidia driver >_<

[06:27:00.0000] <bga>
http://webdemo.visionobjects.com/equation.html?locale=default

[06:32:00.0000] <zewt>
bronislav + pritchard = lots o' mail

[08:18:00.0000] <annevk>
hmm

[08:18:01.0000] <annevk>
anyone seen robbert?

[08:19:00.0000] <annevk>
train connections are kind of shitty due to snow :/

[08:50:00.0000] <AryehGregor>
. . . you know that I never even realized that was a 'font' shorthand property?

[08:50:01.0000] <AryehGregor>
I actually find it hard to believe.

[08:51:00.0000] <AryehGregor>
Why do I feel like I've never seen it in my life?

[08:54:00.0000] <AryehGregor>
Odd that font-size is required in the shorthand.

[08:58:00.0000] <charlvn>
one step closer to replacing mobile apps with mobile webapps? http://www.w3.org/TR/vibration/

[09:09:00.0000] <dglazkov>
good morning, Whatwg!

[09:12:00.0000] <charlvn>
good evening dimitri

[13:58:00.0000] <pablof>
[[ When content whose URL has the same origin as the iframe element's Document fails to load (e.g. due to a DNS error, network error, or if the server returned a 4xx or 5xx status code or equivalent), then the user agent must queue a task to fire a simple event named error at the element instead. ]]

[13:59:00.0000] <pablof>
what element does "[...] named error at the element instead." refer to? the iframe or the document that contains the iframe?

[13:59:01.0000] <Ms2ger>
iframe

[13:59:02.0000] <Ms2ger>
A document isn't an element

[13:59:03.0000] <pablof>
:-)

[14:01:00.0000] <pablof>
no browser implements that currently, right?

[14:01:01.0000] <Ms2ger>
Dunno

[14:20:00.0000] <jgraham>
pablof: Write a testcase, submit it :)

[14:20:01.0000] <jgraham>
Also: hi :)

[14:21:00.0000] <pablof>
jgraham: hey

[14:21:01.0000] <pablof>
i

[14:22:00.0000] <pablof>
i made a dumb testcase, but i was double checking to see if i wasn't totally incompetent :P

[14:22:01.0000] <pablof>
where are tests usually? now that i don't have you guys around i don't know where anything is :D

[14:23:00.0000] <jgraham>
Well the W3C has a testsuite repo at http://dvcs.w3.org/hg/html/

[14:23:01.0000] <jgraham>
(and a similar one for webapps)

[14:24:00.0000] <pablof>
cool

[14:24:01.0000] <jgraham>
So if you make tests in testharness.js format (assuming they are javascript) you can submit them there and we all get to use them :)

[14:30:00.0000] <rniwa>
/me needs to figure out where to put tests for his undomanager


2012-02-04
[17:26:00.0000] <heycam>
TabAtkins, yeah that's totally what currentColor is for

[17:27:00.0000] <heycam>
you could have a mixed HTML/SVG document, inherit your text colour through the color property into the SVG fragment, and use currentColor to set the fill of the SVG <text> elements to the same colour

[22:46:00.0000] <benschwarz>
Hixie: !

[22:47:00.0000] <Hixie>
sup

[22:47:01.0000] <benschwarz>
Hey mate

[22:47:02.0000] <benschwarz>
enjoying australian supper

[22:47:03.0000] <benschwarz>
erm

[22:47:04.0000] <benschwarz>
hah. summer.

[22:48:00.0000] <benschwarz>
just had a bike ride, a little fried

[22:48:01.0000] <benschwarz>
(its 33º)

[22:49:00.0000] <Hixie>
it's "winter" here but, you know, it's california, so... :-)

[22:49:01.0000] <benschwarz>
Hixie: what do you think about making localstorage automagically stringify a json object?

[22:49:02.0000] <benschwarz>
as a change to localstorage

[22:50:00.0000] <Hixie>
tried it

[22:50:01.0000] <Hixie>
browsers wouldn't do it

[22:50:02.0000] <Hixie>
gave up

[22:50:03.0000] <Hixie>
and it wouldn't be backwards-incompatible now, so not much we can do

[22:51:00.0000] <benschwarz>
vendors didn't go for it?

[22:51:01.0000] <benschwarz>
how come?

[22:52:00.0000] <Hixie>
i forget the details

[22:52:01.0000] <Hixie>
it was a while back now

[22:56:00.0000] <benschwarz>
Hixie: the appcache / localstorage screencast I recorded last july came out today

[22:57:00.0000] <Hixie>
cool

[22:57:01.0000] <Hixie>
that's quite the latency :-)

[23:04:00.0000] <benschwarz>
well, yeah

[23:04:01.0000] <benschwarz>
we were both very busy through the latter part of the year

[23:05:00.0000] <benschwarz>
but, nice to see it out

[23:24:00.0000] <brighthas>
IE9 nosuper  __defineGetter__  ?

[23:28:00.0000] <MikeSmith>
benschwarz: I think the reason why browser vendors didn't want to change it was what Hixie mentioned about it not being backward-compatible

[23:28:01.0000] <MikeSmith>
so it would have required changing their implementations and breaking some sites that we already using local storage

[23:30:00.0000] <MikeSmith>
I think the browser vendors in general are now not real keen on encouraging developers to use local storage at all to begin with

[23:30:01.0000] <MikeSmith>
and would rather everybody just used indexed database api instead

[23:31:00.0000] <MikeSmith>
which kinda sucks for Web developers in that it's a lot more complicated API to use

[00:57:00.0000] <benschwarz>
indexdb is a solution looking for a problem

[00:57:01.0000] <benschwarz>
@ MikeSmith & Hixie

[00:57:02.0000] <benschwarz>
and MikeSmith, good to see you :)

[01:11:00.0000] <benschwarz>
and localStorage is easy to use and understand, useful, well deployed…

[01:42:00.0000] <MikeSmith>
benschwarz: http://html5doctor.com/storing-data-the-simple-html5-way-and-a-few-tricks-you-might-not-have-known/#comment-17291

[01:45:00.0000] <MikeSmith>
this article claims to have a way to handle deal with the race-condition problem - http://sixrevisions.com/html/introduction-web-storage/

[02:25:00.0000] <benschwarz>
I never thought about using an event like that

[02:25:01.0000] <benschwarz>
one thing the chrome team had trouble with, is that each tab runs in its own process too…

[02:26:00.0000] <benschwarz>
well, I guess its a software design technicality, not a single thing they had trouble with

[02:26:01.0000] <Velmont>
Well, I'm using websql right now, -- so i'll have to port it to idb once opera supports that. :-)

[02:26:02.0000] <benschwarz>
its fundamentally a more complex browser for that reason

[06:16:00.0000] <zewt>
the problems with localStorage tend to be overstated, too; they're valid in complex cases, but I've yet to hear of it causing issues in the real world, with the sorts of things most people use it for

[06:17:00.0000] <zewt>
if you're just storing the user's last selected sort column for client-side results sorting, you have to contrive pretty hard to come up with a serious problem it could cause

[07:06:00.0000] <benschwarz>
zewt: we used localstorage for currency.io, again, simple, but it was the perfect tool for the job

[07:23:00.0000] <zewt>
i suppose you could sort-of emulate it with idb+workers

[07:24:00.0000] <zewt>
load the entire structure (some waste here); when you change it, send the change to the (shared) worker, which broadcasts the change to anyone else using it

[07:24:01.0000] <zewt>
not the same since changes would be exposed to other threads asynchronously rather than synchronously, but most uses (and all sane uses, I think) don't care about that

[07:25:00.0000] <zewt>
or just use idb directly, I suppose, but preloading its contents so it can be read synchronously (which is the main thing people like about localStorage)

[07:26:00.0000] <zewt>
(and the main thing people hate about it. heh)

[09:18:00.0000] <annevk>
Ms2ger: where does this new-style for optional parameter values come from?

[09:18:01.0000] <annevk>
guess I should use that elsewhere too

[09:22:00.0000] <Ms2ger>
We wanted to implement that in Mozilla's WebIDL parser, and thought it would be useful for specs too

[09:26:00.0000] <annevk>
is it experimental or part of Web IDL?

[09:26:01.0000] <annevk>
#lazy

[09:27:00.0000] <Ms2ger>
Part of WebIDL

[09:28:00.0000] <annevk>
ta

[09:28:01.0000] <Ms2ger>
It's nice to have the editor on your payroll ;)

[09:28:02.0000] <smaug____>
what new style ?

[09:28:03.0000] <Ms2ger>
optional boolean deep = true

[09:28:04.0000] <smaug____>
ah

[09:28:05.0000] <smaug____>
that sounds good

[09:29:00.0000] <Ms2ger>
Next up, WebIDL dictionaries in XPIDL

[09:29:01.0000] <smaug____>
Ms2ger: why in XPIDL ?

[09:30:00.0000] <Ms2ger>
Dunno, ask emk

[09:38:00.0000] <mhausenblas>
annevk around?

[09:38:01.0000] <mhausenblas>
http://www.caniuse.com/#feat=cors ... meh

[09:40:00.0000] <mhausenblas>
annevk, I get a shit-load of suggestions and requests for http://enable-cors.org/ ... what do you think, is it time for a little FAQ/screencast/video that covers the most pressing issues?

[10:51:00.0000] <annevk>
mh...?


2012-02-05
[20:40:00.0000] <kilua17>
anyone there??

[01:16:00.0000] <Taggnostr>
is there a CSS3 validator?

[01:18:00.0000] <Taggnostr>
now I found it in the option before the validation, but it would be better to provide a way to change the version in the result page, or try CSS3 validation when CSS2 validation fails (if that makes sense)

[01:19:00.0000] <Taggnostr>
(is a valid CSS2 page always valid CSS3 too?)

[02:06:00.0000] <estellevw>
Taggnostr: Louis wrote a piece on it: http://www.impressivewebs.com/css3-validation/

[02:06:01.0000] <estellevw>
basically, use the validator with these steps: Change the “Profile” to “CSS Level 3″

[02:06:02.0000] <estellevw>
Change the “Warnings” to “No warnings” or “Most important”

[02:06:03.0000] <estellevw>
Change the “Vendor extensions” to “Warnings”

[02:07:00.0000] <estellevw>
http://jigsaw.w3.org/css-validator/#validate_by_uri+with_options

[02:08:00.0000] <Taggnostr>
vendor extensions is another thing that sometimes annoys me, but in this specific instance I saw 8 errors and when I went to check they were about :last-child

[02:09:00.0000] <Taggnostr>
couldn't the validator use CSS3 by default? I usually get directly to the validation page without going through the page you linked

[02:12:00.0000] <Taggnostr>
estellevw, thanks for the link though, I think I might just tweak the tools I'm using to use css3 by default in the meanwhile

[02:40:00.0000] <Ms2ger>
"you may have questions regarding recent W3C

[02:40:01.0000] <Ms2ger>
developments, including

[02:40:02.0000] <Ms2ger>
    XHTML 1.0

[02:40:03.0000] <Ms2ger>
    http://www.w3.org/TR/xhtml1"

[02:43:00.0000] <estellevw>
the date on that is 2002

[02:55:00.0000] <Ms2ger>
Anne, could you redeploy web-apps-tracker to fix the bug numbers?

[03:04:00.0000] <annevk>
Ms2ger: can you also make sure it always outputs https URLs?

[03:06:00.0000] <annevk>
Ms2ger: I can do it too I suppose

[03:16:00.0000] <annevk>
I can, but apparently cannot commit it back from the server ...

[03:16:01.0000] <annevk>
maybe once foolip is around he can sort that out

[03:18:00.0000] <Ms2ger>
/me looks

[03:19:00.0000] <annevk>
html5.org is updated

[03:19:01.0000] <annevk>
I also have this in my copy:

[03:19:02.0000] <annevk>
+        elif line.startswith("Affected topics:"):

[03:19:03.0000] <annevk>
+            pass

[03:20:00.0000] <annevk>
as well as

[03:20:01.0000] <annevk>
-        bug = "<a href=\"http://www.w3.org/Bugs/Public/show_bug.cgi?id=" + revChanges["bug"] + "\">" + revChanges["bug"] + "</a>"

[03:20:02.0000] <annevk>
+        bug = "<a href=\"https://www.w3.org/Bugs/Public/show_bug.cgi?id=" + revChanges["bug"] + "\">" + revChanges["bug"] + "</a>"

[03:20:03.0000] <annevk>
but no way to commit it :/

[03:23:00.0000] <Ms2ger>
Committed both of those

[03:28:00.0000] <annevk>
cheers

[03:30:00.0000] <annevk>
hmm feedback on File API draft resulted in discussion on method parameters without topic change...

[03:30:01.0000] <annevk>
/me reviews readAsTExt

[03:42:00.0000] <annevk>
I forgot to quote the last part of Arun's email: "Feel free to respond to public-webapps"

[03:49:00.0000] <annevk>
how did StreamBuilder even end up getting introduced?

[03:49:01.0000] <annevk>
seems like it was introduced post the BlobBuilder fiasco

[03:57:00.0000] <Ms2ger>
Microsoft?

[03:57:01.0000] <annevk>
Ms2ger: for http://html5.org/specs/dom-parsing.html the URL should be about:blank, which is the initial value

[03:58:00.0000] <annevk>
Ms2ger: it should not be null in particular

[03:58:01.0000] <Ms2ger>
It was null in Chrome/Opera, I believe

[03:58:02.0000] <annevk>
yeah, but we want to align with Gecko

[03:58:03.0000] <annevk>
so it's always a valid URL

[03:58:04.0000] <mhausenblas>
hey annevk, got a sec?

[03:59:00.0000] <annevk>
mhausenblas: I saw your query yesterday, what are unanswered questions? sounds like they should go to a mailing list

[03:59:01.0000] <Ms2ger>
Well, Gecko had the URL of the page

[04:00:00.0000] <annevk>
ugh

[04:00:01.0000] <mhausenblas>
more like deployment issues and sorta 'is this gonna happen? stable?' - I always point them in your direction, annevk :P

[04:00:02.0000] <Ms2ger>
Fun, isn't it? :)

[04:01:00.0000] <annevk>
mhausenblas: I see

[04:01:01.0000] <annevk>
Ms2ger: I think we can still get them all to align on the about:blank thingie...

[04:01:02.0000] <mhausenblas>
I try to gather and address the stuff at enable-cors.org anyways, but I was thinking more of a sort of statement, like 'yes, it's safe to use it. it's stable, etc.'

[04:02:00.0000] <Ms2ger>
That works for me too

[04:02:01.0000] <mhausenblas>
anyways, looks like you're busy - lemme know if you wanna do something about it, annevk, yes?

[04:02:02.0000] <Ms2ger>
File a bug, please? I need to go now.

[04:02:03.0000] <annevk>
Ms2ger: k, btw, when you create an error document is content type still the original content type?

[04:02:04.0000] <annevk>
mhausenblas: what do you want to do about it?

[04:03:00.0000] <annevk>
mhausenblas: isn't stackoverflow there to help people out?

[04:03:01.0000] <mhausenblas>
hmmm, good question - dunno, maybe a screen cast

[04:03:02.0000] <Ms2ger>
Yes

[04:03:03.0000] <mhausenblas>
yeah, sure

[04:03:04.0000] <mhausenblas>
I think more along the advocacy line

[04:04:00.0000] <annevk>
mhausenblas: we can try a screencast for sure

[04:04:01.0000] <annevk>
been a while since I did something like that

[04:04:02.0000] <mhausenblas>
of course, providing the solutions is also a goal of enable-cors.org but advocacy is still important

[04:05:00.0000] <mhausenblas>
right. now, we could do it sort of interview style - I can prep some questions and the via G+ hangout, as you, etc

[04:06:00.0000] <mhausenblas>
I didn't really think hard about it, but something to reassure people that CORS is the right thing to do, and it's easy and safe to use, etc

[04:06:01.0000] <mhausenblas>
s/and the via G+ hangout, as you, etc/and then via G+ hangout, ask you, etc

[04:07:00.0000] <annevk>
sure okay

[04:07:01.0000] <mhausenblas>
OMG, still a bit hangover-ish from yesterdays Scotch night, sry

[04:07:02.0000] <annevk>
haha

[04:07:03.0000] <mhausenblas>
don't laugh so loud, my brain hurts :P

[04:07:04.0000] <mhausenblas>
right, so I might pop you some questions via mail and then we take it from there, annevk, yes?

[04:08:00.0000] <mhausenblas>
to annevk AT opera DOT com - or?

[04:09:00.0000] <annevk>
sure

[04:09:01.0000] <annevk>
and yes, that email works

[04:09:02.0000] <mhausenblas>
cool. cya & have a nice one ...

[04:12:00.0000] <annevk>
you too man, I recommend fruit and maybe a beer ;)

[04:12:01.0000] <mhausenblas>
fruit++ -  beer, dunno, wife looks suspicious and kids somehow demand a sober dad on Sunday ;)

[04:25:00.0000] <hsivonen>
sigh. the wikipedia page on xhr is out of date but the policies are against me fixing it. https://en.wikipedia.org/wiki/Talk:XMLHttpRequest#Neither_limited_to_XML_nor_HTTP

[04:26:00.0000] <wilhelm_>
Write something on the discussion page.

[04:26:01.0000] <annevk>
prolly the wrong channel for lobbying for such changes :)

[04:26:02.0000] <annevk>
that's what he did

[04:28:00.0000] <wilhelm_>
I can't read, apparently.

[04:32:00.0000] <bga>
inkscape so slow :(

[05:01:00.0000] <mhausenblas>
hsivonen re editing https://en.wikipedia.org/wiki/XMLHttpRequest - I think you have some very valid points there

[05:02:00.0000] <mhausenblas>
/me folding in the edits now

[05:03:00.0000] <mhausenblas>
/me forgot how painful Wikipedia editing got ;)

[05:05:00.0000] <annevk>
oh yes

[05:05:01.0000] <annevk>
inbox <400

[05:05:02.0000] <annevk>
I wonder if I was at less than 300 before I left...

[05:06:00.0000] <mhausenblas>
:)

[05:16:00.0000] <mhausenblas>
ok, hsivonen - pls have a look at https://en.wikipedia.org/wiki/XMLHttpRequest and lemme know if the edits are fine ...

[05:23:00.0000] <mhausenblas>
and now for something completely different. to the tunes of 'especially for you', annevk - https://plus.google.com/u/0/102497386507936526460/posts/gYquiyQ7xXj

[05:23:01.0000] <annevk>
lol

[05:23:02.0000] <annevk>
how do I attribute you on twitter for that?

[05:23:03.0000] <annevk>
ah

[05:24:00.0000] <mhausenblas>
no worries, just provide link to G+ post, should work

[05:25:00.0000] <mhausenblas>
tx, bro ;)

[05:58:00.0000] <annevk>
Philip`: can you maybe weigh in on https://bugzilla.mozilla.org/show_bug.cgi?id=470523 ? encoding support for iso-2022-cn

[05:59:00.0000] <annevk>
Philip`: see my comment (7)

[06:03:00.0000] <Philip`>
annevk: http://code.google.com/p/chromium/issues/detail?id=21354 seems to be the reasoning for Chrome's implementation

[06:04:00.0000] <Philip`>
annevk: I'm not sure what kind of weighing in would be useful

[06:08:00.0000] <annevk>
thanks

[06:08:01.0000] <annevk>
I'll just add a pointer to that discussion

[06:10:00.0000] <zewt_>
bugzilla needs to stop with the useless "comment collision" silliness

[06:11:00.0000] <annevk>
seems better to just have a simplistic decoder and encoder to me

[06:11:01.0000] <smaug____>
zewt: file a bug

[06:12:00.0000] <smaug____>
zewt: though, I'm pretty sure there is a bug file filed already

[06:12:01.0000] <annevk>
I don't like that people file ACTIONS on me to fix a spec bug

[06:12:02.0000] <annevk>
e.g. https://www.w3.org/2011/webappsec/track/actions/46

[06:12:03.0000] <annevk>
no way to add a comment

[06:12:04.0000] <annevk>
meh

[06:17:00.0000] <smaug____>
timeless could just fix some bugs https://bugzilla.mozilla.org/show_bug.cgi?id=303738

[06:59:00.0000] <zewt>
annevk: might be

[07:04:00.0000] <nueva>
is there any easy way in Python's html5lib to not convert HTML entities from input stream into unicode characters?

[07:05:00.0000] <nueva>
i want just sanitize input stream but leave HTML entities as-is

[07:06:00.0000] <Philip`>
nueva: Would it be acceptable if it converted Unicode characters back into entities when re-serializing the stream?

[07:06:01.0000] <nueva>
yes

[07:07:00.0000] <gsnedders>
You can just use encoding="ascii" and then it'll encode everything that's not ASCII

[07:13:00.0000] <nueva>
ok it works, thanks. but my input stream is in utf-8 and i want it to stay as-is and not in form of HTML entities for every character. is there any another way?

[08:08:00.0000] <annevk>
working in the weekend is nice

[08:08:01.0000] <annevk>
the only email you get is your own

[08:08:02.0000] <annevk>
inbox <350

[11:56:00.0000] <charlvn>
http://tools.ietf.org/html/draft-pbryan-http-json-resource-01

[12:03:00.0000] <mhausenblas>
tx charlvn for spotting the ID

[12:04:00.0000] <mhausenblas>
great, now we have three contenders in this space

[12:04:01.0000] <mhausenblas>
OData/JSON, Object Network and this one

[12:07:00.0000] <charlvn>
this one seems to be purely for JSON+REST, i think the scope of the others might be a little more specific?

[12:09:00.0000] <mhausenblas>
charlvn, oh, let's not go down the REST route ;)

[12:10:00.0000] <mhausenblas>
OData is APP with a JSON serialisation and ON is too new to tell, really

[12:10:01.0000] <mhausenblas>
but good to see competition in this area, really

[12:10:02.0000] <charlvn>
sorry, HTTP :)

[12:10:03.0000] <charlvn>
but yeah

[12:11:00.0000] <mhausenblas>
OData, though backed by MS and what seems to be a big community is too hefty for my taste

[12:11:01.0000] <mhausenblas>
he he

[12:11:02.0000] <mhausenblas>
'A Convention for HTTP Access to JSON Resources' sounds also humble enough to me ;)

[12:12:00.0000] <mhausenblas>
charlvn,  do you know the Editor ( Paul C. Bryan)?

[12:13:00.0000] <charlvn>
nope can't say i do

[12:13:01.0000] <mhausenblas>
righto

[12:13:02.0000] <mhausenblas>
seems there is a bit of a CouchDB influence there (see ack section)

[12:16:00.0000] <mhausenblas>
time for a blog post about this topic. TTYL, charlvn and tx again for great spotting!

[12:17:00.0000] <charlvn>
np :)

[12:21:00.0000] <mhausenblas>
/me will credit you, of course, charlvn - any preferred handle? twitter?

[12:23:00.0000] <mhausenblas>
BTW, hsivonen, seems the Wikipedia policy hasn't figured my today's edits (yet) ... https://en.wikipedia.org/w/index.php?title=XMLHttpRequest&action=history

[12:23:01.0000] <mhausenblas>
s/policy/police

[12:26:00.0000] <charlvn>
mhausenblas: nah not at all, my full name is "Charl van Niekerk"

[12:26:01.0000] <mhausenblas>
k

[12:27:00.0000] <mhausenblas>
/me will paste the URL of blog post here later on in case you wanna follow-up on it ;)

[13:20:00.0000] <mhausenblas>
charlvn, see http://webofdata.wordpress.com/2012/02/05/json-http-data-links/

[13:20:01.0000] <charlvn>
cool, thanks!

[13:26:00.0000] <mhausenblas>
yw


2012-02-06
[23:47:00.0000] <zcorpan>
hsivonen: you sure we want DOMParser to parse noscript as markup?

[23:58:00.0000] <annevk>
I think that's what happens for XMLHttpRequest too

[23:59:00.0000] <zcorpan>
oh

[23:59:01.0000] <annevk>
but maybe they should all use the same mode as innerHTML?

[23:59:02.0000] <zcorpan>
for some reason i thought xhr parsed with "scripting enabled" but without running scripts

[00:00:00.0000] <zcorpan>
if xhr is interoperable, then it seems fine

[00:47:00.0000] <annevk>
instead of // historical maybe DOM4 should use // legacy

[00:47:01.0000] <annevk>
hmm

[00:48:00.0000] <annevk>
basically we need one word that means, existed once, no longer implemented and one word that means, still there, but do not use

[00:49:00.0000] <jgraham>
The word for the latter is "deprecated: "p

[00:49:01.0000] <annevk>
but deprecated is so misunderstood

[00:49:02.0000] <annevk>
hmm

[00:51:00.0000] <jgraham>
The word, or the concept?

[01:17:00.0000] <mpt>
I think that's the oldest topic I've ever seen in an IRC channel

[01:59:00.0000] <hsivonen>
Ms2ger: congrats for Accept-Charset removal making it to a release finally.

[02:01:00.0000] <Ms2ger>
Did it? That's good to hear :)

[02:03:00.0000] <hsivonen>
Ms2ger: Yahoo! still hasn't fixed Babelfish

[02:04:00.0000] <hsivonen>
I'm unsurprised

[02:04:01.0000] <Ms2ger>
Go Yahoo!

[02:13:00.0000] <zcorpan>
how to resolve conflicts in svn that works every time: remove working copy, do a new checkout

[02:14:00.0000] <jgraham>
For small values of "resolve"

[02:16:00.0000] <Ms2ger>
svn di > foo && patch -R <foo?

[02:28:00.0000] <hsivonen>
aargh. how can I type "since" as "sense"? I wasn't even using voice recognition.

[02:28:01.0000] <hsivonen>
/me hangs head in shame

[02:30:00.0000] <zcorpan>
you could claim to use dvorak where e and i only have one key in between

[02:36:00.0000] <hsivonen>
zcorpan: I did type it on dvorak, but the explation is still implausible

[02:39:00.0000] <michel_v>
implausible indeed, there's a u in the middle :p

[02:53:00.0000] <hsivonen>
zcorpan: regarding noscript in DOMParser: It's consistent with XHR and it's logical, since neither DOMParser nor XHR runs scripts

[02:54:00.0000] <hsivonen>
zcorpan: people who control the input and don't want noscript, should probably not put noscript in the input

[02:57:00.0000] <hsivonen>
implementing features and fixing bugs interferes with my ability to track public-html

[03:01:00.0000] <zcorpan>
hsivonen: consistent with xhr is good

[03:02:00.0000] <hsivonen>
so it looks like public-html is as full of a11y Revert Requests as ever :-(

[03:11:00.0000] <jgraham>
Yeah, it turns out that public-html is the first against the wall when there's work to get done

[03:13:00.0000] <hsivonen>
What kind of product does Charles Pritchard work on?

[03:39:00.0000] <mhausenblas>
hsivonen around?

[03:41:00.0000] <hsivonen>
mhausenblas: yes. Thanks for editing Wikipedia.

[03:41:01.0000] <mhausenblas>
yw

[03:42:00.0000] <mhausenblas>
lemme know if there's something else to be fixed over there ;)

[03:44:00.0000] <hsivonen>
hmm. the second sentence still describes the old XHR instead of the new generic thing for loading URL-addressable resources

[03:46:00.0000] <hsivonen>
curiously, Wikipedians don't seem to have a problem with using primary sources for fact citations when the primary sources are W3C specs

[03:47:00.0000] <mhausenblas>
yup ;)

[03:48:00.0000] <mhausenblas>
now, happy to edit more there, but would need some concrete wording - just paste it here or vial mail to michael DOT hausenblas AT gmail DOT com ... ok, hsivonen?

[03:51:00.0000] <hsivonen>
I'd say something like "XMLHttpRequest is a API for loading URL-addressable resources and for sending data to URL end points from scripts."

[03:57:00.0000] <mhausenblas>
ok, hsivonen - but where? :)

[03:57:01.0000] <mhausenblas>
replacing the first sentence?

[04:00:00.0000] <hsivonen>
mhausenblas: I meant the second, but I guess what covers part of the first one, too

[04:01:00.0000] <mhausenblas>
so, s/It is used to send HTTP or HTTPS requests directly to a web server and load the server response data directly back into the script./XMLHttpRequest is a API for loading URL-addressable resources and for sending data to URL end points from scripts

[04:01:01.0000] <mhausenblas>
?

[04:01:02.0000] <mhausenblas>
hmm

[04:02:00.0000] <mhausenblas>
I think it better replaces the first sentence, but your call really ;)

[04:12:00.0000] <hsivonen>
mhausenblas: hmm. maybe it replaces the first sentence if the second is the qualified by "It is most commonly used..." or something.

[04:21:00.0000] <annevk>
http://hsivonen.iki.fi/accept-charset/ is nice

[04:21:01.0000] <annevk>
I wish we killed the Accept header too when there was still a chance of doing that

[04:21:02.0000] <annevk>
i.e. that our predecessors killed it

[04:24:00.0000] <hsivonen>
annevk: I now wish Accept had been killed. Instead what really happened a decade ago was that I advocated bloating Accept. :-(

[04:25:00.0000] <annevk>
good point, I might have done the same

[04:27:00.0000] <zcorpan>
Accept: */* works for most requests, doesn't it?

[04:27:01.0000] <annevk>
yeah, that's what I'm advocating now

[04:28:00.0000] <annevk>
although our network guys claim it breaks some stuff

[04:28:01.0000] <annevk>
I haven't really followed up

[04:28:02.0000] <hsivonen>
annevk: what breaks? X-Philes blogs?

[04:28:03.0000] <annevk>
not sure

[04:28:04.0000] <hsivonen>
which reminds me that I should make an HTML5 version of my master's thesis and zap conneg

[04:30:00.0000] <annevk>
hmm

[04:30:01.0000] <annevk>
more people added me on G+ than Twitter

[04:30:02.0000] <annevk>
seems suspicious

[04:32:00.0000] <annevk>
anyone here going to Prague this weekend btw?

[04:44:00.0000] <Lachy>
hsivonen, in what ways did you previously advocate bloating Accept?

[04:45:00.0000] <annevk>
I think I have suggested that application/mathml+xml needed to be added

[04:45:01.0000] <annevk>
somewhere

[04:47:00.0000] <Lachy>
looks like they ended up adding that, along with 2 others http://www.w3.org/TR/MathML3/appendixb.html

[04:49:00.0000] <annevk>
I wonder if HTTP covers stuff like https://bugzilla.mozilla.org/show_bug.cgi?id=613159#c14

[04:49:01.0000] <hsivonen>
Lachy: putting application/xhtml+xml in the Accept header

[04:49:02.0000] <Lachy>
oh

[04:51:00.0000] <hsivonen>
Lachy: https://bugzilla.mozilla.org/show_bug.cgi?id=58040#c28

[04:53:00.0000] <zcorpan>
made sense with the landscape as it was then

[04:57:00.0000] <annevk>
ooh man

[04:57:01.0000] <annevk>
people knew back in 2000

[04:57:02.0000] <annevk>
comment 0

[04:57:03.0000] <annevk>
"Comment in the source code says that the Accept: */* header is done because MIME based content negotiation is dead."

[04:59:00.0000] <hsivonen>
other fun threads: http://groups.google.com/group/netscape.public.mozilla.mathml/browse_thread/thread/f0d7442075946397/

[04:59:01.0000] <hsivonen>
http://groups.google.com/group/netscape.public.mozilla.mathml/browse_thread/thread/ab83de837ff21576/

[04:59:02.0000] <hsivonen>
http://groups.google.com/group/netscape.public.mozilla.mathml/browse_thread/thread/a2dd34dc398590f2/

[05:00:00.0000] <hsivonen>
annevk: still dead, with more bytes wasted. :-(

[05:05:00.0000] <jgraham>
hsivonen: People are claiming that Chrome still send Accept-Charset

[05:07:00.0000] <hsivonen>
jgraham: whoa. indeed. Turns out that I tested something else that was charset-related in my Chrome window today but not *this* and thought I had tested this

[05:15:00.0000] <Ms2ger>
Fun stuff, webkit inventing proprietary stuff and filing a bug on Gecko to implement it without bothering to bring it up on spec lists

[05:15:01.0000] <Ms2ger>
https://bugzilla.mozilla.org/show_bug.cgi?id=403510

[05:17:00.0000] <jgraham>
Wow

[05:17:01.0000] <TabAtkins_>
son of a *bitch*

[05:18:00.0000] <Ms2ger>
Young dog?

[05:19:00.0000] <jgraham>
Oh, I thought that was TabAtkins_'s password

[05:19:01.0000] <TabAtkins_>
Nah, man, that's hunter42

[05:19:02.0000] <hsivonen>
jgraham: thanks. I added a correction to the post. Makes the situation less newsworthy. :-(

[05:19:03.0000] <Ms2ger>
hunter2*

[05:20:00.0000] <TabAtkins_>
d'oh.

[05:20:01.0000] <TabAtkins_>
I ruined the joke.

[05:20:02.0000] <Ms2ger>
Sorry :)

[05:24:00.0000] <TabAtkins_>
Aw man, and it's Arv that filed it.  In three hours I'll bitch him out.

[05:25:00.0000] <hsivonen>
argh. my bogus article made it to hacker news already. :-(

[05:25:01.0000] <MikeSmith>
hsivonen: bogus article?

[05:26:00.0000] <MikeSmith>
hsivonen: btw, hsivonen: http://www.jumis.com/software/developer.html lists some Charles Pritchard software

[05:28:00.0000] <Ms2ger>
annevk, any particular reason you dropped Abstract from the DOM4 ED? It seems somewhat useful

[05:34:00.0000] <hsivonen>
MikeSmith: the bogus article being http://hsivonen.iki.fi/accept-charset/

[05:42:00.0000] <hsivonen>
MikeSmith: so Charles Pritchard specializes in implementing the canvas API in contexts other than browser-native implementations?

[05:42:01.0000] <hsivonen>
I wonder what the motivating use cases are

[05:43:00.0000] <hsivonen>
jgraham: I'm amused by this reply to a comment of yours: http://news.ycombinator.com/item?id=3557299

[06:05:00.0000] <Ms2ger>
MikeSmith, seems like the CSSOM bug component should move from WebAppsWG to CSS

[06:06:00.0000] <Ms2ger>
(I can file a bug)

[06:06:01.0000] <MikeSmith>
OK

[06:06:02.0000] <MikeSmith>
yeah please

[06:06:03.0000] <Ms2ger>
And Fullscreen to webapps now we have consensus?

[06:06:04.0000] <MikeSmith>
if we actually do

[06:07:00.0000] <Ms2ger>
OH, hmm

[06:07:01.0000] <Ms2ger>
The Bugzilla product only has an a11y component, where should I file?

[06:08:00.0000] <Ms2ger>
MikeSmith, ^

[06:10:00.0000] <annevk>
per http://lists.w3.org/Archives/Public/public-webapps/2012JanMar/0542.html it will be added to the draft charter

[06:11:00.0000] <annevk>
but maybe we should wait until it is actually chartered

[06:13:00.0000] <Ms2ger>
wfm

[06:18:00.0000] <Ms2ger>
annevk, is there anything besides document.{documentURI,URL} to test for concept-document-url?

[06:19:00.0000] <annevk>
I think window.location is a different URL

[06:19:01.0000] <annevk>
"current URL"

[06:19:02.0000] <annevk>
you could test xml:base stuff

[06:19:03.0000] <annevk>
maybe

[06:24:00.0000] <matjas>
hsivonen: I couldn’t find a Chrome bug for Accept-Charset, so I created a simple test case (http://mathiasbynens.be/demo/accept-charset) and filed a ticket: http://crbug.com/112805

[06:25:00.0000] <Ms2ger>
Anybody around with IE?

[06:26:00.0000] <annevk>
I can fire it up

[06:26:01.0000] <matjas>
hsivonen: make that http://crbug.com/112804; I was 23 seconds too late to file it

[06:26:02.0000] <Ms2ger>
download link on livedom, if that works in IE

[06:27:00.0000] <annevk>
sorry

[06:28:00.0000] <annevk>
VMWare trial expired

[06:28:01.0000] <annevk>
have to figure out how to get license key first (if Opera has some bulk license or not)

[06:33:00.0000] <Philip`>
annevk: Can you use the free VMware Player?

[06:34:00.0000] <Ms2ger>
Ta anyway

[06:34:01.0000] <hsivonen>
matjas: thanks

[06:35:00.0000] <annevk>
figured out how, will take some time :(

[06:37:00.0000] <Ms2ger>
People may be interested in www.cs.purdue.edu/homes/jv/pubs/ecoop11.pdf "The Eval that Men Do: A Large-scale Study of the Use of Eval in JavaScript Applications"

[06:48:00.0000] <annevk>
http://www.reddit.com/r/pics/comments/pczpz/this_guy_was_elected_president_of_finland/ haha

[06:56:00.0000] <hsivonen>
annevk: what's the "haha" part?

[06:58:00.0000] <Ms2ger>
Fins

[06:58:01.0000] <Ms2ger>
;)

[07:00:00.0000] <annevk>
hsivonen: just kind of funny that the president does that kind of thing

[07:00:01.0000] <annevk>
in jeans

[07:03:00.0000] <krijnh>
Somebody from #css: just has a power failure here, during your meeting. If somebody can mail me the missing parts, I'll add them

[07:03:01.0000] <Ms2ger>
TabAtkins, ^

[07:04:00.0000] <hsivonen>
annevk: it means he is an elitist who has a house with a yard instead of living in a block of flats :-)

[07:04:01.0000] <Ms2ger>
Hah

[07:06:00.0000] <jgraham>
/me doesn't really understand why flats are so popular in Scandanavia

[07:06:01.0000] <hsivonen>
jgraham: they are more energy-efficient and you don't need to take care of the snow yourself

[07:06:02.0000] <Ms2ger>
What he said

[07:07:00.0000] <jgraham>
Well they might be more environmentally friendly

[07:07:01.0000] <jgraham>
But actually living in them sucks

[07:07:02.0000] <hsivonen>
jgraham: how?

[07:08:00.0000] <jgraham>
No outdoor space. Horrible communal areas (satircases, etc).People on all sides -> high chance of noise. Typically communal facilities that have to be booked. Landlords.

[07:08:01.0000] <TabAtkins_>
krijnh: I'm on it.

[07:09:00.0000] <TabAtkins_>
krijnh: I'm not sure what the outage was, and I don't want to diff these myself.

[07:09:01.0000] <TabAtkins_>
s/what/when/

[07:11:00.0000] <hsivonen>
jgraham: you don't have a landlord if you own stock in the apartment building LLC

[07:12:00.0000] <jgraham>
Right, that would be a bostadsrätt in Swedish. All the other points apply though.

[07:13:00.0000] <hsivonen>
jgraham: I don't feel a need for non-shared yard. The staircase is clean enough.

[07:14:00.0000] <hsivonen>
jgraham: also, I'm not that into sauna, so I don't need to book sauna facilities, since I don't use them

[07:14:01.0000] <hsivonen>
jgraham: besides, many apartments have per-apartment saunas, but that's again energy-inefficient

[07:15:00.0000] <jgraham>
I was thinking of washing machines :) Of course it is possible to have your own but the default here is shared washing facilities

[07:15:01.0000] <jgraham>
And most people stick with the default it seems

[07:16:00.0000] <timeless>
smaug____: i'm not actively working on bugzilla. and lpsolit hasn't been a very welcoming  person. i do not have the energy to deal with him or his cabal

[07:17:00.0000] <karlcow>
/me loves shared washing machines!

[07:17:01.0000] <jgraham>
karlcow: That needs an explaination or a <sarcasm> sign for the hard of understanding

[07:18:00.0000] <karlcow>
not sarcasm.

[07:19:00.0000] <karlcow>
I do not own a washing machine for the last 10 years and I find that a lot better as a society in urban environment. We go usually to the laundry beside our place. 1 min walking. Winter or summer.

[07:20:00.0000] <karlcow>
When I was living in Japan, I didn't have a fridge because I was living very close from supermarket opened at convenient time. So the fridge was the supermarket. Not possible unfortunately where I am now.

[07:20:01.0000] <karlcow>
I ditched the car 12 years ago too aka sold it.

[07:20:02.0000] <karlcow>
and TV

[07:21:00.0000] <hsivonen>
karlcow: you always ate full packs of perishable groceries?

[07:22:00.0000] <jgraham>
karlcow: Now you are turning into area man

[07:22:01.0000] <karlcow>
hsivonen: in Japan you can buy in small portion :) that is the key.

[07:22:02.0000] <jgraham>
karlcow: But the assertion that not having a washing machine was better for the environment is [citation needed]

[07:23:00.0000] <jgraham>
It isn't trivially obvious to me why comercial machines would be more efficient

[07:23:01.0000] <jgraham>
Unless it is the machine itself that you are thinking of

[07:24:00.0000] <karlcow>
plenty of individual washing machines used once or twice a week compared to a washing machine used a lot more by many people is definitely better for the environment.

[07:24:01.0000] <jgraham>
But I would have thought the machine lifetime was ~number of uses rather than ~ time

[07:24:02.0000] <karlcow>
yup the machine.

[07:24:03.0000] <jgraham>
karlcow: That is far from obvious

[07:25:00.0000] <karlcow>
jgraham: do you have used the same machine for 10 years

[07:26:00.0000] <jgraham>
karlcow: Well not right now since we just moved and got the machine that the old people had bought (I think it is like ~5 years old). But my parents have, for example.

[07:27:00.0000] <annevk>
Ms2ger: in particular, DOM made those attributes non-nullable

[07:27:01.0000] <Ms2ger>
Yeah

[07:27:02.0000] <Ms2ger>
That's not an argument, though ;)

[07:30:00.0000] <annevk>
not sure why browsers are so woefully inconsistent for DOMParser

[07:31:00.0000] <annevk>
e.g. why it's different from createDocument in Gecko for instance

[07:33:00.0000] <Ms2ger>
No idea

[07:44:00.0000] <hsivonen>
so does HTML+RDFa 1.1 really want to add href and src to all elements?

[07:44:01.0000] <hsivonen>
see http://www.w3.org/TR/rdfa-in-html/#extensions-to-the-html5-syntax

[07:44:02.0000] <hsivonen>
says All RDFa attributes and valid values (including CURIEs), as listed in Section 2.1: The RDFa Attributes, must be allowed and seen as conforming when used in an HTML4, HTML5 or XHTML5 document.

[07:45:00.0000] <hsivonen>
http://www.w3.org/TR/rdfa-core/#rdfa-attributes doesn't really define "RDFa attributes"

[07:45:01.0000] <hsivonen>
but points to an appendix "For a complete list of RDFa attribute names and syntax, see Attributes and Syntax."

[07:45:02.0000] <timeless>
awesome

[07:46:00.0000] <hsivonen>
the appendix being http://www.w3.org/TR/rdfa-core/#s_syntax

[07:46:01.0000] <hsivonen>
which lists href and src

[07:46:02.0000] <hsivonen>
I have trouble figuring out which kind of bad spec writing this is

[07:47:00.0000] <hsivonen>
oops. it's not an appendix

[07:47:01.0000] <hsivonen>
just a plain section

[07:49:00.0000] <hsivonen>
whoa. http://www.w3.org/TR/rdfa-in-html/ contains a DTD

[07:49:01.0000] <annevk>
hahaha

[07:50:00.0000] <hsivonen>
a quick look suggests the DTD puts href on all elements but doesn't put src on all elements

[07:52:00.0000] <manu1>
hsivonen - I don't think we intended @src to go on all attributes, only @href.

[07:53:00.0000] <manu1>
not that people tend to use @href on all attributes... it may be used so little that we could deprecate it's usage if an RDFa 2.0 ever ends up being created (I have no intention of being a part of that)

[07:54:00.0000] <manu1>
hsivonen - somewhat related: Searching for Microformats, RDFa, and Microdata Usage in the Wild - http://manu.sporny.org/2012/structured-data-searching/

[07:56:00.0000] <manu1>
also, the latest Editor's draft moves the DTD out of the spec: http://dev.w3.org/html5/rdfa/

[07:56:01.0000] <manu1>
if you have suggestions on how to improve any of those documents, we'd love to hear about it on public-rdfa-wg⊙wo

[07:57:00.0000] <hsivonen>
manu1: oops. I fell into the old trap of reading stuff under /TR/. :-( I should know better.

[07:57:01.0000] <manu1>
yep - we need a warning across all W3C non-REC TR docs... wonder when that'll happen.

[07:59:00.0000] <hsivonen>
manu1: is there an ED of RDFa Core, too?

[08:01:00.0000] <manu1>
the TR version is the latest for RDFa Core

[08:01:01.0000] <manu1>
we're in LC for that doc

[08:02:00.0000] <hsivonen>
manu1: ok

[08:06:00.0000] <hsivonen>
manu1: I filed a bug https://www.w3.org/Bugs/Public/show_bug.cgi?id=15913

[08:06:01.0000] <manu1>
/me looks.

[08:10:00.0000] <manu1>
Thanks for the bug report. I have a feeling that the RDFa WG is going to keep @href, @rel and @rev allowable on all attributes (it was a big debate during the RDFa 1.0 days and we had revisted the decision multiple times and kept allowing them on all attributes. You also can't do some forms of chaining w/o them, and because it would break backwards compatibility w/ XHTML, and if we have...

[08:10:01.0000] <manu1>
...different rules for different host languages it's going to confuse authors). I think allowing @src on everything was a mistake, but we'll check to make sure that's the case.

[08:11:00.0000] <manu1>
... and that's not to say that the HTML WG will come to the same conclusion, just giving you a heads up on what I predict will happen.

[08:12:00.0000] <manu1>
hsivonen, what would be more compelling, imho, is some sort of technical issue raised by the modification... Does adding @href to span's create some sort of nastiness in the DOM/parsers/etc.?

[08:14:00.0000] <manu1>
That said, with the current RDFa Lite 1.1 changes, it may be that the vast majority of markup doesn't end up using @rel and @rev... and the markup that does use @href may limit itself to <a> - another suggestion that you might put in there is to have us tell authors that they should strive to only use @href where it is typically found in "regular" HTML (even though I know that's not your...

[08:14:01.0000] <manu1>
...ideal solution)

[08:15:00.0000] <annevk>
you keep saying attributes when you mean elements

[08:16:00.0000] <annevk>
fwiw ^^

[08:16:01.0000] <manu1>
yeah, sorry - I keep doing that :)

[08:16:02.0000] <manu1>
s/@href, @rel and @rev allowable on all attributes/@href, @rel and @rev allowable on all elements/ ... etc.

[08:17:00.0000] <annevk>
that sounds rather silly given it was vetoed by implementors time and again

[08:18:00.0000] <Ms2ger>
Does Opera still implement global href?

[08:18:01.0000] <annevk>
but who knows, maybe the crazy happens one day

[08:18:02.0000] <annevk>
Ms2ger: did we ever?

[08:18:03.0000] <Ms2ger>
Through CSS

[08:18:04.0000] <annevk>
I think we killed those

[08:18:05.0000] <annevk>
stopped working at some point

[08:19:00.0000] <hsivonen>
manu1: the argument is that <p href="http://example.org">Click?</p> looks like a link that can be clicked to follow but isn't

[08:19:01.0000] <hsivonen>
manu1: and <p src="http://example.org/foo"></p> looks like emdedding some content but isn't

[08:19:02.0000] <manu1>
hsivonen, yes - I understand the argument... but we've found that RDFa authors don't always want to create click-able links.

[08:19:03.0000] <manu1>
your second example shouldn't be allowed, btw

[08:20:00.0000] <manu1>
(and @href is more familiar to them than @resource)

[08:21:00.0000] <manu1>
annevk, re: "vetoed by implementors" - do you mean in HTML or in RDFa?

[08:21:01.0000] <annevk>
former

[08:21:02.0000] <manu1>
/me nods at annevk.

[08:22:00.0000] <annevk>
and if you want <p href> to mean something else than the proposed <p href> from XHTML 2.0...

[08:22:01.0000] <manu1>
hsivonen, like I said - it's not best practice, we don't suggest that people do it... but at times, they don't want a clickable link... and they typically put this stuff on <span> and <div>s

[08:22:02.0000] <annevk>
well that sounds like a world of confusion

[08:22:03.0000] <manu1>
XHTML 2.0-what?

[08:22:04.0000] <annevk>
and prevents extending HTML in such a way in the future

[08:23:00.0000] <manu1>
are there plans to extend HTML to allow @href on all elements?

[08:23:01.0000] <hsivonen>
manu1: don't you have @resource already for non-clickable stuff?

[08:23:02.0000] <annevk>
there's certainly demand, not so much plans at this point

[08:23:03.0000] <annevk>
and @about

[08:24:00.0000] <manu1>
hsivonen - we have @resource to overload @href if used on the same element... not necessarily for non-clickable stuff.

[08:24:01.0000] <manu1>
annevk - there are plans to add @about to HTML?

[08:24:02.0000] <manu1>
or rather, demand?

[08:25:00.0000] <hsivonen>
manu1: when you use both @href and @resource, can anyone except RDFa WG members remember what triples it produces?

[08:25:01.0000] <manu1>
If there is demand to add @href to HTML... is it being introduced in HTML+RDFa in an incompatible way to that demand, annevk?

[08:26:00.0000] <manu1>
hsivonen: The question is moot - do people understand how the DOM is built if elements are placed where they shouldn't be?

[08:26:01.0000] <hsivonen>
manu1: as for nastiness for DOM/parsers/etc., I expect someone will make the argument that <p href> should become a clickable link, since RDFa "allowed" it but it doesn't "work"

[08:26:02.0000] <manu1>
The solution in both cases is the same: You use a browser to check to see if the page "looks right"... you use an RDFa processor to see if the page produces the correct triples.

[08:26:03.0000] <hsivonen>
manu1: you guys are making the incomprehensible stuff conforming

[08:27:00.0000] <manu1>
That is, there are exceptions to all rules, especially when it comes to what authors intend and what ends up happening in the browser.

[08:27:01.0000] <hsivonen>
manu1: HTML makes markup that triggens the incomprehensible fixups non-conforming

[08:28:00.0000] <manu1>
hsivonen: If someone makes the argument that <p href> should become a clickable link, they will also need to convince everybody that the entire paragraph should have a bright blue underline (or some other visual cue to specify it is a clickable link) and at that point, their argument will be dismissed.

[08:28:01.0000] <manu1>
hsivonen: define "incomprehensible fixups"

[08:29:00.0000] <Ms2ger>
<table>Foo</table>, perhaps?

[08:29:01.0000] <hsivonen>
manu1: in the HTML case, stuff like the AAA

[08:30:00.0000] <annevk>
Ms2ger: did you define the origin of the Document?

[08:30:01.0000] <Ms2ger>
No

[08:31:00.0000] <annevk>
Ms2ger: that also needs to be covered I believe

[08:31:01.0000] <Ms2ger>
I guess it does

[08:31:02.0000] <Ms2ger>
I'll need prose for that, though, because I don't understand origin stuff :)

[08:31:03.0000] <manu1>
hsivonen, so what is "incomprehensible" in your opinion? Please don't say 'everything' that is not currently defined in HTML but is in RDFa because I can't work with that... :)

[08:32:00.0000] <manu1>
hsivonen - stuff like this: <table href="...">Foo</table> ?

[08:33:00.0000] <manu1>
or stuff like this: <span href="...">My homepage</span> ?

[08:33:01.0000] <manu1>
(if the second one is incomprehensible... why is it incomprehensible)?

[08:34:00.0000] <annevk>
Ms2ger: filed a bug for now

[08:34:01.0000] <hsivonen>
manu1: 'incomprehensible stuff includes <table><i><b><font><font><font><font></b></font></i></table>

[08:34:02.0000] <annevk>
Ms2ger: might figure out the answer later

[08:34:03.0000] <Ms2ger>
Thanks

[08:34:04.0000] <manu1>
I agree that the first one is incomprehensible, but how could anybody do that that doesn't cause the browser manufacturers to say: "Wow, that markup is really stupid, we're not going to support it."

[08:34:05.0000] <annevk>
maybe document-origin should be part of DOM too... hmm

[08:35:00.0000] <hsivonen>
manu1: also <span resource="http://example.com/a" src="http://example.com/b" about="http://example.com/c" property="http://example.com/d" src="http://example.com/e">

[08:35:01.0000] <manu1>
hsivonen: Ok, yes <table><i><b><font><font><font><font></b></font></i></table> is ridiculous - but how does that apply to @href everywhere... seems like an extreme off-base example to prove a point? Is <p href="..."> a better representation of your concern?

[08:36:00.0000] <manu1>
and is that concern making <p> a click-able link... or the ability to express that "this paragraph has a hyperlink pointing to X"?

[08:36:01.0000] <hsivonen>
manu1: <table><i><b><font><font><font><font></b></font></i></table> is non-conforming. You are making <p href> conforming.

[08:36:02.0000] <manu1>
or is the concern that @href may end up on <p> eventually and we're spec'ing it in a way in HTML+RDFa that makes it impossible to have HTML adopt @href in the future?

[08:37:00.0000] <hsivonen>
manu1: the concern is making stuff that doesn't do what it looks like conforming

[08:37:01.0000] <manu1>
hsivonen: Yes, but why is <p href> conforming such a terrible thing? (other than it's just bad practice)?

[08:37:02.0000] <Ms2ger>
Because it doesn't work

[08:37:03.0000] <hsivonen>
manu1: another concern is that making stuff that the definers of HTML explicitly rejected conforming is going to give rise to annoying threads

[08:38:00.0000] <hsivonen>
manu1: I find it distressing that you don't seem to consider <p href> for RDFa purposes as an obviously bad idea

[08:38:01.0000] <manu1>
hsivonen: I don't think it's a good idea

[08:38:02.0000] <manu1>
hsivonen: but I don't think making it conforming is a bad idea either

[08:39:00.0000] <hsivonen>
manu1: do you believe all DOMs should be conforming?

[08:40:00.0000] <manu1>
hsivonen: I don't think it's necessary, no.

[08:40:01.0000] <manu1>
I agree that it would be nice... but authors stick all sorts of non-conforming stuff in their documents... is that the question you were asking?

[08:40:02.0000] <manu1>
(because your question could be interpreted a few different ways)

[08:41:00.0000] <hsivonen>
manu1: when authors stick crazy stuff in their documents, what should a validator say?

[08:41:01.0000] <manu1>
It should say: Hey, you've done something kinda crazy - you might want to do something else.

[08:41:02.0000] <hsivonen>
(note that I'm not contesting your processing model for <p href> in any way.)

[08:41:03.0000] <manu1>
(and give an example of an alternative)

[08:42:00.0000] <hsivonen>
manu1: should the definition of crazy be up to the validator developer or should spec try to define crazy?

[08:42:01.0000] <manu1>
If your argument is that a document conformance checker may want to kick out a warning, but not an error... then I think that'd be a fine thing to do for <p href>

[08:42:02.0000] <manu1>
I think it's very difficult for the spec to define what crazy is because there is a lot of crazy out there.

[08:42:03.0000] <hsivonen>
manu1: I'm saying I think a conformance checker should give an error for <p href>

[08:43:00.0000] <hsivonen>
lots of crazy out there hasn't stopped Hixie from being prescriptive in the HTML spec

[08:43:01.0000] <manu1>
I'm saying that I think a conformance checker should give a warning for <p href>... but not an error, because somebody may have a very good reason to do that.

[08:43:02.0000] <hsivonen>
manu1: do you have an example of a good reason?

[08:43:03.0000] <manu1>
For example... if you want to link each paragraph to the source of the document it came from, <p href> makes sense...

[08:44:00.0000] <manu1>
(for example - when referring to legislation in a government law or bill)

[08:44:01.0000] <hsivonen>
manu1: why not @resource?

[08:44:02.0000] <manu1>
Why not @href? :)

[08:44:03.0000] <manu1>
Not @resource because it's meant to override @href.

[08:44:04.0000] <hsivonen>
manu1: because @resource is understood not to be clickable

[08:45:00.0000] <manu1>
and then the argument becomes, why is <p resource> ok?

[08:45:01.0000] <manu1>
but <p href> is not.

[08:45:02.0000] <manu1>
hsivonen, it's not clickable in a browser-sense... but it is a hyperlink, none-the-less.

[08:45:03.0000] <manu1>
the same as @href.

[08:45:04.0000] <hsivonen>
It's OK (to the extent RDFa is "OK") because @resource has no clickability expectations but @href has

[08:45:05.0000] <manu1>
whether or not it is "click-able" is really a display issue.

[08:46:00.0000] <hsivonen>
manu1: that's a slippery slope towards someone asking for <p href> to become clickable

[08:46:01.0000] <manu1>
I think this really boils down to a philosophy on whether an HTML document is purely information... or if it is visual representation as well.

[08:46:02.0000] <manu1>
hsivonen: Yes, but if your concern is that we make <p href> clickable - I don't think anyone in their right mind would allow that to happen in a browser.

[08:47:00.0000] <manu1>
(and it's really the browser's prerogative)

[08:47:01.0000] <manu1>
(granted, at that point we have a huge argument on how to standardize the clickability of <p href>

[08:48:00.0000] <manu1>
but for now, I don't see anybody in their right mind saying that we need to change the visual display of <p href> to make sure that the user can click through to the @href that the <p> is pointing at)

[08:49:00.0000] <manu1>
I agree that /somebody/ at some point in time is going to ask you to make <p href> clickable... but at that point, I think the vast majority of us are going to say: That's insane... and keep going on our merry way making the Web better.

[08:49:01.0000] <hsivonen>
manu1: I guess you've never seen anyone ask for browser UI for <blockquote cite>

[08:49:02.0000] <manu1>
My point is: People are going to ask for crazy stuff... and we don't have to tell them "Yes."

[08:49:03.0000] <Ms2ger>
/me has

[08:49:04.0000] <annevk>
hsivonen: do you set responseXML.characterSet correctly?

[08:50:00.0000] <annevk>
I wonder what the correct interface for that is

[08:50:01.0000] <annevk>
spec-wise

[08:50:02.0000] <hsivonen>
manu1: it would be awesome if RDFa WG didn't say "Yes" to putting stuff like this in specs ;-)

[08:50:03.0000] <manu1>
hsivonen: :)

[08:50:04.0000] <hsivonen>
annevk: I don't know.

[08:51:00.0000] <hsivonen>
annevk: that's the kind of thing where I would expect Gecko to do the right thing, but you need a test case to be sure

[08:51:01.0000] <manu1>
hsivonen - I do think you have a valid concern, but I don't think the concern is strong enough to warrant the removal of @href, @rel and @rev everywhere (for the purposes of RDFa)

[08:52:00.0000] <manu1>
hsivonen - in any case, I'll put this down as Last Call feedback from you, so we'll have to discuss it... I just don't expect that we'll disallow it completely... maybe ask conformance checkers to kick out a warning - could you live with that decision?

[08:52:01.0000] <AryehGregor>
hober, can you explain to me why there's any such thing as transform-style: flat?  Isn't transform-style: preserve-3d what you'd expect?

[08:53:00.0000] <hsivonen>
manu1: I'd probably escalate to the fun HTML WG Decision Process

[08:53:01.0000] <AryehGregor>
I don't see the value in transform-style: flat at all . . . you can emulate it by just adding scaleZ(0) at the end of the transform list for the element, no?

[08:53:02.0000] <manu1>
/me cringes.

[08:53:03.0000] <manu1>
hsivonen - even in the case that conformance checkers kick out a warning?

[08:55:00.0000] <manu1>
/me has to run, drop any other thoughts in here and I'll get to them once I'm back. Thanks for the comments, hsivonen :)

[08:55:01.0000] <manu1>
(they're always appreciated)

[08:56:00.0000] <hsivonen>
manu1: yes, even in the warning case

[09:03:00.0000] <annevk>
yeah seems to work

[09:06:00.0000] <dglazkov>
good morning, Whatwg!

[09:06:01.0000] <Ms2ger>
'Night

[09:07:00.0000] <annevk>
should we add xhr.responseURL? https://www.w3.org/Bugs/Public/show_bug.cgi?id=15417

[09:09:00.0000] <annevk>
I thought Gecko had fixed responseXML for non well-formed XML?

[09:09:01.0000] <annevk>
still returns some bogus tree

[09:10:00.0000] <annevk>
should we align XHR with DOMParser?

[09:14:00.0000] <smaug____>
annevk: last time I tried to make responseXML to not have that strange DOM tree, it broke some sites, IIRC

[09:16:00.0000] <annevk>
:/

[09:22:00.0000] <AryehGregor>
hg people: is there some way to get rid of my local commits in hg?

[09:23:00.0000] <AryehGregor>
I.e., I don't have commit access and can't commit my changes and just want them to go away so I don't have to merge them for the rest of eternity.

[09:24:00.0000] <annevk>
I haven't found it

[09:24:01.0000] <smaug____>
hg strip works

[09:24:02.0000] <AryehGregor>
Or is this another case where the answer is "you have to use mq if you want hg to behave that way, stop trying to pretend it's git"?

[09:24:03.0000] <AryehGregor>
Hmm, okay.

[09:24:04.0000] <smaug____>
it is reasonable powerful

[09:24:05.0000] <AryehGregor>
/me will have to give in and learn mq anyway, probably

[09:24:06.0000] <smaug____>
so can do evil things if not used carefully, I think

[09:24:07.0000] <annevk>
ooh, extensions

[09:25:00.0000] <AryehGregor>
smaug____, right -- hg supports commands that are just as powerful as git, except without the clever idea of actually not destroying data, so in practice they're only usable by daredevils and masochists.

[09:25:01.0000] <AryehGregor>
Oh, this seems to have saved a backup of some kind.

[09:26:00.0000] <AryehGregor>
That's kind of  it.

[09:27:00.0000] <smaug____>
I use hg strip all the time. Works fine for me

[09:27:01.0000] <AryehGregor>
Worked well enough for me, thanks.

[13:19:00.0000] <AryehGregor>
Is there an hg equivalent of git reset --mixed, i.e., "forget about all the adds/removes/mvs/etc. I scheduled but don't touch the working copy"?

[13:21:00.0000] <AryehGregor>
I'm trying to work around this: http://mercurial.selenic.com/bts/issue1686

[13:21:01.0000] <AryehGregor>
/me gives up and does hg revert --all, then redoes the commit

[13:21:02.0000] <AryehGregor>
Or maybe I should just not use --git.

[13:21:03.0000] <Ms2ger>
Huh

[13:21:04.0000] <AryehGregor>
Oh, that just doesn't show moves/renames at all . . . ?

[13:21:05.0000] <Ms2ger>
Yeah

[13:21:06.0000] <AryehGregor>
Sigh.

[13:21:07.0000] <Ms2ger>
That's why we suggest --git :)

[13:27:00.0000] <Velmont>
Hmm, anyone know when sicking will be here? Have IndexedDB-questions.

[13:28:00.0000] <Velmont>
Or anyone else that could answer it :]

[13:30:00.0000] <jgraham>
Pretty sure no one apart from sicking understands indexdb

[13:30:01.0000] <jgraham>
Make of that what you will :)

[13:30:02.0000] <Velmont>
jgraham: Well, I asked here and was told to wait for sicking :P

[13:30:03.0000] <Velmont>
--> Trying to find any decision/answer about IndexedDB keypath and "." to seperate objects, anyone know anything about it?

[13:30:04.0000] <Velmont>
It's very possible I could get data from a third party that has   a["my.value"] = thing,  and I'd want to have a keypath that accesses  my.value  like that, not the property value on a my object.

[13:30:05.0000] <Velmont>
So either "my\.value" escaping, or similar stuff.

[13:31:00.0000] <jgraham>
Velmont: Yeah, I told you that iirc :)

[13:31:01.0000] <Velmont>
jgraham: Hehe, scrollback doesn't go that far back, so... :-)

[13:31:02.0000] <jgraham>
Velmont: You could try irc.mozilla.org I guess.

[13:32:00.0000] <Velmont>
But he's never in. He was in 10 minutes 07.15-07.27. Which wasn't really a great time for me :P

[13:46:00.0000] <matjas>
hsivonen: <a href=""http://code.google.com/p/chromium/issues/detail?id=112804> typo

[13:48:00.0000] <annevk>
if he had omitted the quotes, it would have worked just fine

[13:48:01.0000] <annevk>
boo quotes

[13:48:02.0000] <annevk>
or you know, used a validator :p

[13:50:00.0000] <matjas>
http://mothereff.in/unquoted-attributes#http%3A%2F%2Fcode.google.com%2Fp%2Fchromium%2Fissues%2Fdetail%3Fid%3D112804

[13:56:00.0000] <WeirdAl>
hi annevk:  I'm wondering, does the XHR2 spec have those little browser-support icons that HTML5 has?

[13:56:01.0000] <WeirdAl>
I kinda liked that about Hixie's work

[14:00:00.0000] <zewt>
ugh, filing bugs on webkit/chrome is such a waste of time

[14:01:00.0000] <zewt>
because somehow the user is expected to figure out whether things are chrome or webkit bugs

[14:24:00.0000] <krijn>
TabAtkins: http://krijnhoetmer.nl/irc-logs/css/20120206#l-759

[14:39:00.0000] <roc>
where can I file bugs on GMail?

[14:39:01.0000] <Hixie>
roc: what's the bug?

[14:40:00.0000] <roc>
every couple of minutes GMail pops up a message asking me to confirm that it should use rocallahan⊙mc as a backup address. I click "yes, this address is correct" and the message goes way, then comes back a bit later

[14:43:00.0000] <Hixie>
roc: do you have the exact text of the message?

[14:43:01.0000] <roc>
I'll give it to you when it comes back :-)

[14:43:02.0000] <roc>
there we go

[14:43:03.0000] <roc>
"Hey, this is important: If you ever lose access to your account, we can send password reset info to rocallahan⊙mc This address is correct | Update this address"

[14:47:00.0000] <Hixie>
roc: can you tell me your account e-mail address so i can put it in the bug report? (since it doesn't seem to happen to everyone so they might need it to track down the issue)

[14:47:01.0000] <roc>
rocallahan⊙gc

[14:47:02.0000] <roc>
thanks!

[14:48:00.0000] <roc>
although I can't help feeling that being a front-end to Google's bug database is an incredibly poor use of your time

[14:49:00.0000] <Hixie>
google has too many users to actually expose the bug database, unfortunately

[14:49:01.0000] <Hixie>
it would be completely unmanageable

[14:50:00.0000] <Hixie>
anyway, np

[14:50:01.0000] <Hixie>
i'll let you know if anything happens specifically on your bug

[14:50:02.0000] <Hixie>
it's probably a known issue so it'll probably just get aggregated down to some todo list somewhere and i'll never hear back :-P

[14:53:00.0000] <roc>
FWIW it only just started happening today

[14:54:00.0000] <Hixie>
noted

[14:55:00.0000] <roc>
Exposing our Bugzilla to hundreds of millions of users hasn't gone too badly, all things considered.  As you scale out almost none of the extra users will be able to find or use the bug database anyway

[14:56:00.0000] <Hixie>
so this may surprise you, but there's actually a way to report bugs on google search results

[14:56:01.0000] <Hixie>
it's not obvious

[14:57:00.0000] <Hixie>
yet the volume we get is so high we basically can only handle it via automated aggregation

[14:57:01.0000] <Hixie>
dunno what the difference is between that and bugzilla

[14:57:02.0000] <roc>
SEO people gaming the system? :-)

[14:57:03.0000] <Hixie>
from what i've seen, it's not seo people

[14:57:04.0000] <Hixie>
just regular users

[14:59:00.0000] <Hixie>
roc: btw there actually is a way to file bugs on gmail directly if you want to try it that way and see if it works better than through me (dunno which works best!)

[15:00:00.0000] <roc>
ah, so there is

[15:00:01.0000] <roc>
now that I get off my arse and look for it

[15:01:00.0000] <roc>
I'll try it

[15:01:01.0000] <roc>
sorry

[15:01:02.0000] <Hixie>
no worries

[15:01:03.0000] <Hixie>
i didn't know it had shipped til just now :-P

[15:11:00.0000] <gavin>
Hixie: I just saw your "I've specced it" message in the "Can we deprecate alert(), confirm(), prompt() ?" thread, and am kind of wishing you'd included a link to a changelog or something

[15:11:01.0000] <gavin>
is there an easy way for me to look something like that up?

[15:11:02.0000] <Hixie>
http://html5.org/tools/web-apps-tracker

[15:11:03.0000] <gavin>
ah

[15:12:00.0000] <Hixie>
i can't include the link to that when writing the e-mail because the process of generating the spec and committing the change takes a long time, which is the time i use to reply to the e-mail and move on to the next one :-)

[15:12:01.0000] <Hixie>
you can also subscribe to get all the changes by e-mail, on a per-topic basis

[15:13:00.0000] <Hixie>
see the "Edit subscriptions" button at the top right of the spec

[15:13:01.0000] <gavin>
I don't generally want to subscribe to changes, I just want to look up the ones that interest me (I was working on disabling dialogs onunload in gecko)

[15:13:02.0000] <Hixie>
ah ok

[15:13:03.0000] <gavin>
I always end up looking for the change tracker thing and can't find it

[15:14:00.0000] <gavin>
anyways, thanks :)

[15:14:01.0000] <Hixie>
there's a link to it in the header of the spec

[15:14:02.0000] <Hixie>
under "Version history"

[15:14:03.0000] <Hixie>
also all the changes are tweeted https://twitter.com/#!/whatwg :-)

[15:14:04.0000] <Hixie>
those include a link to the diff

[15:53:00.0000] <Hixie>
bummer. time to add a global attribute.

[15:53:01.0000] <Hixie>
/me hates adding new attributes and elements

[15:54:00.0000] <Hixie>
(mostly because of the indexes)


2012-02-07
[00:15:00.0000] <hsivonen>
matjas: sigh. Corrected the correction. :-( Thanks.

[00:15:01.0000] <hsivonen>
For a different perspective: https://twitter.com/#!/asadotzler/status/166792492778389504

[00:39:00.0000] <MikeSmith>
hsivonen: Asa often seems to have a different perspective on things.

[00:40:00.0000] <freedrull>
should i be able to stream an OGG icecast stream in an audio element?

[01:08:00.0000] <annevk>
hmm

[01:08:01.0000] <annevk>
there should not be a initWheelEvent method to begin with I think...

[01:15:00.0000] <smaug____>
hsivonen: doesn't Asa always have a different perspective on things.

[01:15:01.0000] <smaug____>
hsivonen: khuey was worried when he agreed with Asa about something :)

[01:18:00.0000] <annevk>
I have that with some people

[02:00:00.0000] <roc>
it's kind of sad how easy it is to write simple JS programs that give different results in different browsers

[02:00:01.0000] <jgraham>
Define "simple js programs"

[02:01:00.0000] <roc>
I'm glad you asked me that

[02:01:01.0000] <annevk>
Math.random()

[02:01:02.0000] <roc>
var p = { get y() { delete this.y; return 4; } }; var y = 1; with (p) { y += 2; } alert(y + " " + p.y);

[02:01:03.0000] <annevk>
I win!

[02:02:00.0000] <jgraham>
roc: You lost "simple" when you wrote "with"

[02:02:01.0000] <roc>
"with" is simple

[02:02:02.0000] <roc>
it's just evil

[02:02:03.0000] <jgraham>
It's not simple

[02:02:04.0000] <roc>
in the spec it is

[02:05:00.0000] <jgraham>
Ig by "simple" you mean "requires operations that aren't used in any other part of the spec"

[02:05:01.0000] <roc>
my sadness reflects on the inherent bogosity of the JS language, not the heroic efforts of its implementors

[02:06:00.0000] <roc>
"with" just pushes the object onto the scope chain. The complexity is all in how it interacts with other features.

[02:06:01.0000] <roc>
anyway, I agree with you really; the *program* is simple, it's the language that gets fiendishly complicated when these things start interacting

[02:07:00.0000] <zcorpan>
i get the same result in gecko and opera at least

[02:09:00.0000] <smaug____>
chrome gives very surprising result

[02:09:01.0000] <jgraham>
The program only looks superficially simple, it is actually rather complicated. I agree that the langugae shouldn't have constructs that make superficially simple things complex.

[02:10:00.0000] <smaug____>
or, hmm, both FF/Opera and Chrome interpretations are kind of understandable

[02:11:00.0000] <smaug____>
I wonder which one is correct per spec

[02:11:01.0000] <roc>
FF/Opera as far as I can tell

[02:11:02.0000] <roc>
the spec says to figure out what object and slot the LHS refers to before evaluating the LHS or RHS

[02:12:00.0000] <smaug____>
makes sense

[02:22:00.0000] <annevk>
zcorpan: translate attribute link werkt niet

[02:22:01.0000] <annevk>
zcorpan: is dat omdat developers.whatwg.org nog niet is bijgewerkt?

[02:22:02.0000] <zcorpan>
annevk: ben moet updaten

[02:22:03.0000] <annevk>
k

[02:35:00.0000] <Velmont>
omg. I was holding off on the RWD discussion, hoping it was something I'd not be interested in. Sadly, it's Responsive Web Design, and I've got a ton of backlog if I want to read it all *shrug*.

[02:36:00.0000] <jgraham>
Velmont: Obviously the right solution is to only read the maiols I sent ;)

[02:36:01.0000] <annevk>
I'm surprised we keep discussing width/height

[02:37:00.0000] <annevk>
nobody wants to know location up front?

[02:37:01.0000] <annevk>
orientation?

[02:37:02.0000] <annevk>
light conditions?

[02:37:03.0000] <jgraham>
We don't have *any* way to work out some of those

[02:38:00.0000] <jgraham>
It surprises me a bit that people are so obsessed with images

[02:38:01.0000] <annevk>
it's a big step up over > vs />

[02:38:02.0000] <jgraham>
Heh

[02:38:03.0000] <Velmont>
I am too. I have a news paper with many images on it, -- I serve them quite big, it's quite a load. I made another m.site url in order to make one with small images.

[02:39:00.0000] <Velmont>
Although I'd really prefer to just have one site.

[02:39:01.0000] <jgraham>
Velmont: But if you had the information you needed to have just one site, being able to serve different sized images would fall out naturally

[02:40:00.0000] <jgraham>
The only special thing about images is that you might want to replace the whole image when zooming/resizing the window

[02:40:01.0000] <roc>
obviously you want a media query that reads the light sensor so you can send an appropriately color-adjusted image

[02:42:00.0000] <jgraham>
Oh, a site that changed the colour temperature through the day to match the outside conditions would be fun. It would screw with people running F.lux though

[02:47:00.0000] <TabAtkins_>
F.lux is some good stuff.

[02:47:01.0000] <TabAtkins_>
Hm. How do I indicate that a map interface should be enumerable?

[02:47:02.0000] <TabAtkins_>
It currently just has a getter.

[02:48:00.0000] <Velmont>
I'm using RedShift, which I think is the same.

[02:48:01.0000] <jgraham>
TabAtkins_: Unless you are in an unexpected location, it doesn't seem to be helping you sleep ;)

[02:48:02.0000] <TabAtkins_>
jgraham: I'm in Paris.

[02:48:03.0000] <jgraham>
Oh, OK

[02:48:04.0000] <TabAtkins_>
And it's not for sleep, it just makes my screen less harsh.

[02:50:00.0000] <jgraham>
Fair enough; lots of people claim it helps them sleep better (but I have nver seem more than anecdote on this point)

[03:02:00.0000] <TabAtkins_>
Hmm, in webidl, if you specify the "set of named properties" for an interface with a getter, does that automatically make it enumerable?  I haven't found anything about that yet.

[03:03:00.0000] <TabAtkins_>
Ah, yes, section 4.6 specifies that it does.  Good.

[03:04:00.0000] <MikeSmith>
annevk: so you guys really want me to change the CSSOM component to CSS WG product, right?

[03:05:00.0000] <annevk>
shane and glenn own that spec now I think

[03:05:01.0000] <MikeSmith>
wow

[03:05:02.0000] <annevk>
I dropped out of the CSS WG

[03:06:00.0000] <MikeSmith>
yeah, I knew that

[03:06:01.0000] <MikeSmith>
all right, I will make it so

[03:06:02.0000] <annevk>
so yeah, I also stopped editing CSSOM, CSSOM, Media Queries, and CSS Namespaces

[03:06:03.0000] <annevk>
CSSOM View ^

[03:07:00.0000] <annevk>
oh, CSS Namespaces is actually REC, so I guess that doesn't matter

[03:13:00.0000] <MikeSmith>
annevk: OK, moved all the CSSOM bugs

[03:13:01.0000] <MikeSmith>
TabAtkins: I know I still need to create those other CSS WG components, and will try to get that done today

[03:13:02.0000] <MikeSmith>
first I will move Fullscreen

[03:16:00.0000] <annevk>
oh, let me know when that's done so I can update the spec

[03:19:00.0000] <MikeSmith>
annevk: hey can't we get the Encoding spec into Webapps while we are at it?

[03:21:00.0000] <MikeSmith>
annevk: OK, WebApps now has a Fullscreen component

[03:21:01.0000] <MikeSmith>
I didn't move any bugs because there were no bugs against the current Fullscreen component

[03:22:00.0000] <annevk>
k

[03:22:01.0000] <annevk>
I wouldn't mind Encoding to be there, but it's not really an API...

[03:25:00.0000] <MikeSmith>
wow, 38 components TabAtkins_ wants to add

[03:25:01.0000] <MikeSmith>
I hope these are really going to be used

[03:27:00.0000] <TabAtkins_>
MikeSmith: Wait - I haven't given you primary person yet.

[03:27:01.0000] <MikeSmith>
TabAtkins_: don't need to, I can just get that from the editor's drafts, right?

[03:27:02.0000] <TabAtkins_>
Sure, that works.

[03:27:03.0000] <MikeSmith>
OK

[03:32:00.0000] <MikeSmith>
btw, I also just created a public-css-bugzilla⊙wo list

[03:33:00.0000] <MikeSmith>
for firehose notifications for all CSS WG components

[03:33:01.0000] <MikeSmith>
http://lists.w3.org/Archives/Public/public-css-bugzilla/

[03:35:00.0000] <annevk>
MikeSmith: can you also send email to www-dom once those bugs are resolved?

[03:36:00.0000] <MikeSmith>
annevk: which bugs?

[03:36:01.0000] <annevk>
MikeSmith: applies to DOM, maybe DOM3Events too

[03:36:02.0000] <MikeSmith>
you mean not just for new bugs?

[03:36:03.0000] <annevk>
yeah

[03:36:04.0000] <annevk>
both new bugs and bugs that are resolved should notify the list

[03:37:00.0000] <annevk>
this also happens on public-webapps

[03:37:01.0000] <annevk>
I mean there it's implemented that way and it's better

[03:37:02.0000] <MikeSmith>
OK

[03:37:03.0000] <MikeSmith>
btw, where should DOM Parsing and Serialization notifications go?

[03:37:04.0000] <MikeSmith>
it currently goes to public-webapps

[03:38:00.0000] <MikeSmith>
should it go to www-dom?

[03:38:01.0000] <annevk>
maybe, I don't really care

[03:38:02.0000] <annevk>
I guess that would be more consistent

[03:41:00.0000] <MikeSmith>
OK, I now have it set so that the resolved notifications go to the www-dom list as well

[03:41:01.0000] <MikeSmith>
and move the parsing and serialization notices to there as well

[03:43:00.0000] <annevk>
time for a beer :)

[03:49:00.0000] <MikeSmith>
annevk: please tell Rune he needs a W3C bugzilla account

[03:51:00.0000] <annevk>
Rune L?

[03:51:01.0000] <MikeSmith>
yeah

[03:51:02.0000] <MikeSmith>
for getting notifications about CSS Device Adaptation bugs

[03:52:00.0000] <annevk>
pinged him on IRC

[03:56:00.0000] <annevk>
MikeSmith: he has one now

[03:56:01.0000] <MikeSmith>
thanks

[03:57:00.0000] <MikeSmith>
please tell Rune I said thanks too

[03:57:01.0000] <annevk>
done

[04:26:00.0000] <zcorpan>
Philip`: https://www.w3.org/Bugs/Public/show_bug.cgi?id=15925

[04:29:00.0000] <MikeSmith>
TabAtkins: https://www.w3.org/Bugs/Public/describecomponents.cgi?product=CSS

[04:29:01.0000] <MikeSmith>
I think I got everything added that needs adding

[04:29:02.0000] <MikeSmith>
I skipped some things like CSS Ruby that are now marked as obsolete

[04:30:00.0000] <MikeSmith>
and I munged a CSS3 Text and CSS4 Text into one component

[04:30:01.0000] <MikeSmith>
a

[04:30:02.0000] <MikeSmith>
and also Images into one component

[04:30:03.0000] <MikeSmith>
if you really do want separate components for 3 and 4 of those, lemme know

[04:31:00.0000] <MikeSmith>
I also renamed some of the existing components to drop the "CSS " part

[04:31:01.0000] <MikeSmith>
so that may break some bookmarked searches or scripts that others have set up

[04:32:00.0000] <MikeSmith>
if so, I think that would mostly just be for the Animations, Transforms, and Transitions specs

[04:53:00.0000] <Velmont>
AryehGregor: Meh, I'm not able to install Windows 8 in VirtualBox. I only get «Windows developer Preview» -- Then suddenly some console text that says «You need to restart your computer» and some error codes. Did you get any of that?

[04:55:00.0000] <zcorpan>
the status box for http://www.whatwg.org/specs/web-apps/current-work/multipage/introduction.html#abstract looks suspicious

[05:00:00.0000] <zcorpan>
teh other sections in introduction more so

[05:01:00.0000] <zcorpan>
Hixie: ^

[05:54:00.0000] <annevk>
why is the translate feature not aided by e.g. making <kbd> and <code> get translate=no by default?

[05:57:00.0000] <zcorpan>
no automatic translator skips <kbd> and <code> currently, afaik

[06:05:00.0000] <hsivonen>
so much email. so little code written. :-(

[06:07:00.0000] <annevk>
it's pretty bad

[06:07:01.0000] <annevk>
even after dropping out of www-style

[06:11:00.0000] <MikeSmith>
hsivonen: you can have one or the other

[06:11:01.0000] <MikeSmith>
after several days of doing validator hacking, I come back to my inbox to find ~1500 messages

[06:18:00.0000] <MikeSmith>
I don't know how you guys that a real full-time coders manage to keep up with e-mail

[06:20:00.0000] <wilhelm_>
I mostly ignore it and hope it goes away.

[06:22:00.0000] <annevk>
hope haha

[06:23:00.0000] <Velmont>
I read it, but I have to stop that, I haven't been able to do much today after not reading email during FOSDEM and not on monday.

[06:24:00.0000] <annevk>
I manage to keep up with html5.org/tools/web-apps-tracker

[06:24:01.0000] <annevk>
and some of the email related to specs I edit

[06:24:02.0000] <annevk>
other than that, mwaha

[06:25:00.0000] <annevk>
why is WordPress complaining about my out of date Opera installation?

[06:25:01.0000] <Velmont>
annevk: I didn't find the subscribe to email-part of that one...

[06:25:02.0000] <annevk>
shouldn't Opera do that?

[06:25:03.0000] <annevk>
amusing

[06:34:00.0000] <annevk>
because the world needs more Java: http://www.w3.org/TR/2012/WD-WebIDL-Java-20120207/

[06:35:00.0000] <hsivonen>
annevk: who is implementing that? Batik?

[06:36:00.0000] <annevk>
nobody

[06:36:01.0000] <annevk>
it's intended to be a Note

[06:52:00.0000] <jgraham>
hsivonen: I am interested to know whether you think that it is specifically the *image* part of the RWD thread that is not a problem worth solving or the general idea that one might like to serve device-specific content without an extra RTT

[06:53:00.0000] <jgraham>
Where by "device" I might mean a number of things like "screen size (in solid angle)" or "power source"

[07:07:00.0000] <AryehGregor>
Velmont, no, it worked fine for me first try.

[07:08:00.0000] <hsivonen>
jgraham: at this time, I'm not saying that any particular part of RWD isn't worth solving

[07:08:01.0000] <hsivonen>
jgraham: however, considering my own experience as a user, any RWD-related thread tends to have bogus assumptions on the part of authors

[07:09:00.0000] <hsivonen>
I browse the Web on a HD TV, on a phone, on a tablet, on desktop

[07:10:00.0000] <hsivonen>
I don't like it that sites assume device px == CSS px on any of these

[07:10:01.0000] <wilhelm_>
Yikes. The vendor prefixes discussion is … interesting.

[07:10:02.0000] <hsivonen>
I assume wilhelm_ is referring to http://lists.w3.org/Archives/Public/www-style/2012Feb/0313.html

[07:10:03.0000] <wilhelm_>
Yes.

[07:11:00.0000] <hsivonen>
jgraham: I particularly don't like it when a site decides to give me fewer news items on their front page on a tablet than on desktop

[07:11:01.0000] <hsivonen>
jgraham: also, my phone has as much bandwidth (at least in theory) as my office had in 2007

[07:12:00.0000] <hsivonen>
jgraham: and people were OK with sending me bits in 2007

[07:13:00.0000] <zewt>
phones (in the US, anyway) are almost always on bandwidth quotas, though I doubt that's something they're actually thinking about

[07:13:01.0000] <hsivonen>
zewt: I don't want the Web platform to be designed to the bugs of the U.S.

[07:13:02.0000] <zewt>
(externality)

[07:14:00.0000] <zewt>
hsivonen: too bad, you're stuck with us :)

[07:14:01.0000] <jgraham>
hsivonen: It probably has worse latency though

[07:14:02.0000] <jgraham>
In any case it seems to be accepted as OK that app-store apps for iPhone vs Desktop mac should be very different in terms of UI conventions + etc.

[07:14:03.0000] <zewt>
can whoever came up with google's "new look" be banned for life from creating UIs

[07:15:00.0000] <jgraham>
So it doesn't seem unreasonable for people to want the same for apps that happen to be implemnted on the web

[07:15:01.0000] <zewt>
jgraham: native apps follow native conventions; web apps (as a convention) generally don't, so I don't know if that's a meaningful comparison

[07:15:02.0000] <hsivonen>
jgraham: RWD threads tend to be about the size of photos

[07:16:00.0000] <jgraham>
hsivonen: I am not that intersted in the size of photos :)

[07:16:01.0000] <hsivonen>
jgraham: apps send a bunch of JS can match media queries all they want

[07:16:02.0000] <jgraham>
zewt: Right, but that is because the design needs of the different formats are very different

[07:17:00.0000] <jgraham>
hsivonen: But then you have to deal with extra latency or doing the wrong work

[07:17:01.0000] <zewt>
jgraham: no; Android and iPhone apps have different conventions, even though the devices are nearly identical

[07:17:02.0000] <hsivonen>
jgraham: also, UA strings now reveal desktop vs. phone vs. tablet, so you can adapt app interaction model on the same level of granularity as in the iUniverse

[07:17:03.0000] <jgraham>
zewt: But my example was OSX vs iOS

[07:17:04.0000] <zewt>
so?

[07:17:05.0000] <jgraham>
hsivonen: I am not that happy when the "right answer" is UA sniffing

[07:18:00.0000] <jgraham>
Because that has never ended well

[07:18:01.0000] <hsivonen>
"plinss: I think the fact that Mozilla is discussing this publicly is harmful."

[07:18:02.0000] <zewt>
native apps generally follow the conventions of the platform, whether that's iOS, Android, OSX or Windows; web apps don't

[07:18:03.0000] <hsivonen>
jgraham: I'm not, either. Is there a media query for touch yet?

[07:19:00.0000] <jgraham>
zewt: My point is that the different conventions between iOS and OSX are to do with meaningful differences in the abilities of the devices. It is not arbitary decisions like iOS vs Android

[07:19:01.0000] <jgraham>
hsivonen: No idea

[07:20:00.0000] <zewt>
just saying that the fact that it's accepted that iPhone vs OSX apps will look different doesn't necessarily imply web pages are expected to be different

[07:20:01.0000] <zewt>
jgraham: it's the "accepted as OK" part I'm talking about--user expectations--not what possibly should be

[07:21:00.0000] <zewt>
valid reasons to do things differently on desktop+keyboard+mouse vs. handheld+touch, yes, of course

[07:24:00.0000] <zewt>
(personally I'd do that with a simple loader that stores a cookie the first time the user visits a site and reloads--the whole "describe everything in an HTTP header" thing is just silly)

[07:28:00.0000] <hsivonen>
"sylvaing: The people who think prefixing is a good feature, majority of them are in this room."

[07:29:00.0000] <zewt>
... i'm not in that room, whatever room it is; obviously prefixing is a good feature

[07:29:01.0000] <zewt>
(it's prefixing things *forever* that's bad)

[07:30:00.0000] <TabAtkins_>
Yup.  Which is why we landed on this new horrible-but-necessary idea.

[07:30:01.0000] <zewt>
(well, for JS; for CSS, I might be convinced otherwise, since writing identical CSS lines 3-4 times gets old)

[07:30:02.0000] <zewt>
what "idea"? heh

[07:31:00.0000] <wilhelm_>
Is there any consensus on what to do with new, experimental, vendor-specific CSS properties?

[07:32:00.0000] <hsivonen>
I'm disappointed but not suprised by the stances taken by the chairs in that discussion

[07:32:01.0000] <zewt>
that's exactly where vendor prefixes are ideal. hard to imagine anyone would debate *that* ...

[07:32:02.0000] <ksweeney>
if you like them, use them. that's how they become standard.

[07:32:03.0000] <annevk>
chairs should be neutral

[07:32:04.0000] <jgraham>
One of the several problems with prefixing is that it's the very antithesis of the Open Web ideal. It makes it trivial and attractive to write sites that work in high-marketshare browsers and fail in equally capable low-marketshare browsers.

[07:33:00.0000] <hsivonen>
annevk: yeah, right

[07:33:01.0000] <TabAtkins_>
zewt: For a limited (and to-be-determined) set of properties, all the browsers want to support the -webkit- prefix.

[07:33:02.0000] <jgraham>
annevk: hahahaha

[07:33:03.0000] <wilhelm_>
annevk: That's… difficult. (c:

[07:33:04.0000] <annevk>
just saying

[07:33:05.0000] <TabAtkins_>
Specifically on mobile.

[07:34:00.0000] <TabAtkins_>
On account of our effective monoculture that's making it too hard to break into decent mobile marketshare.

[07:34:01.0000] <hsivonen>
TabAtkins_: It's a problem on desktop, too

[07:34:02.0000] <annevk>
http://www.w3.org/Guide/chair-roles

[07:34:03.0000] <annevk>
'Generally stays neutral in discussion but can participate in technical discussions if announces in advance that will remove his or her chair "hat" at that time.'

[07:34:04.0000] <TabAtkins_>
hsivonen: The discussion yesterday suggested that mobile was the only place where it mattered enough to swallow this pill.

[07:35:00.0000] <annevk>
art is pretty good at that

[07:35:01.0000] <ksweeney>
(For more information, see: agenda, hidden)

[07:35:02.0000] <zewt>
TabAtkins_: that sounds like effectively deprefixing those properties, and giving them a name that just happens to begin with -webkit-

[07:36:00.0000] <zcorpan>
i'm happy with what was RESOLVED

[07:37:00.0000] <hsivonen>
is Florian on Twitter?

[07:37:01.0000] <karlcow>
annevk: it's why it is called "The Art of Chairing"

[07:39:00.0000] <annevk>
:)

[07:39:01.0000] <zewt>
:|

[07:39:02.0000] <annevk>
hsivonen: @frivoal but not active

[07:40:00.0000] <hsivonen>
annevk: thanks

[07:41:00.0000] <zcorpan>
whatever comes out of the <picture> discussion, i sure hope we don't add any more alt="" attributes

[07:41:01.0000] <zewt>
<picture>? i don't think i want to know, heh

[07:41:02.0000] <jgraham>
Everyone loves @alt!

[07:41:03.0000] <jgraham>
It's almost as good as @longdesc!

[07:42:00.0000] <zcorpan>
don't go there!

[07:42:01.0000] <zewt>
the primary purpose of alt seems to be to make validators yell at authors, who them ignore it

[07:43:00.0000] <TabAtkins_>
zewt: The idea is to do this at the same time as you do an unprefixed version.  So then yes, it becomes an alternate way to express an unprefix, basically.

[07:43:01.0000] <zcorpan>
<picture alt="potato"> <img alt="potato" longdesc=potato.html src=1> <source alt="huge potato" longdesc=hugepotato.html src=2> <source alt="tiny, cropped potato" longdesc=tinypotato.html src=3>

[07:44:00.0000] <TabAtkins_>
zewt: No, alt is great.  It's actually done *really well* for me several times, when an image has gone missing but its alt still serves the same purpose.

[07:44:01.0000] <TabAtkins_>
On my old company's site.

[07:44:02.0000] <jgraham>
TabAtkins_: It is horrible design though

[07:45:00.0000] <jgraham>
<image>Alt text here</image> was the way to go

[07:45:01.0000] <TabAtkins_>
jgraham: Oh god, yes, of course.

[07:45:02.0000] <TabAtkins_>
It's the worst design ever.  But the feature is actually quite useful, contrary to what zewt said.

[07:45:03.0000] <zewt>
didn't say it wasn't useful.

[07:47:00.0000] <TabAtkins_>
You said the primary purpose was to do something that authors will ignore.  I assumed that meant you found it not useful.

[07:48:00.0000] <zewt>
if I meant it was the only purpose, I'd have omitted "primary" :)

[08:08:00.0000] <smaug____>
TabAtkins: why doesn't webkit remove webkit prefixed css properties?

[08:09:00.0000] <smaug____>
remove/replace with non-prefixed

[08:10:00.0000] <jgraham>
smaug____: Because it turns out that people depend on it! Who would have though!

[08:10:01.0000] <jgraham>
+t

[08:10:02.0000] <Velmont>
Well, people never get the chance to fix things because everyone is always so scared to break stuff though...

[08:10:03.0000] <smaug____>
sure, but doing it in few steps

[08:11:00.0000] <smaug____>
first warn for some time

[08:11:01.0000] <smaug____>
and then remove

[08:14:00.0000] <TabAtkins_>
smaug____: What jgraham said.  There's tons and tons of content on the mobile web that use only -webkit- prefixes on properties that are important for their display/layout.

[08:14:01.0000] <TabAtkins_>
There's enough of it that the significant fraction that will never be updated is too much.

[08:14:02.0000] <TabAtkins_>
And there's too many to evangelize the problem away - all the browsers have tried and acknowledged failure.

[08:14:03.0000] <smaug____>
TabAtkins: has it even been tried ?

[08:15:00.0000] <TabAtkins_>
smaug____: We know from observation that it will very likely cause serious problems.

[08:15:01.0000] <TabAtkins_>
And the other browsers (who brought the issue to the WG) believe the same.

[08:15:02.0000] <smaug____>
TabAtkins: has webkit browsers warned about deprecated css properties ?

[08:15:03.0000] <smaug____>
s/has/have/

[08:15:04.0000] <smaug____>
ever

[08:16:00.0000] <smaug____>
just to try how it work

[08:16:01.0000] <jgraham>
smaug____: Where would you do that in an app store app that embeds a webkit view?

[08:16:02.0000] <TabAtkins_>
I don't know.  Don't think so.  However, Luke Macpherson and I will suggest doing precisely that when we get back to our offices.

[08:16:03.0000] <smaug____>
jgraham: app store is not web

[08:16:04.0000] <TabAtkins_>
jgraham: app store apps aren't viewable in other browsers anyway.

[08:17:00.0000] <jgraham>
Right, so you have to keep the prefixes working at least in that context

[08:17:01.0000] <jgraham>
You could make them not work in normal web content though

[08:17:02.0000] <jgraham>
Anyway the fundamental problem is that the model is broken

[08:17:03.0000] <smaug____>
I don't care what happens in walled gardens

[08:18:00.0000] <jgraham>
And broken in a dangerous way

[08:18:01.0000] <smaug____>
the model is very broken

[08:18:02.0000] <TabAtkins_>
The WG as a whole disagrees.

[08:18:03.0000] <smaug____>
it wouldn't be so broken if vendors were more willing to remove prefixes

[08:19:00.0000] <TabAtkins_>
I would like to remove them more, yes.

[08:19:01.0000] <jgraham>
TabAtkins_: The WG as a whole is composed both theorists and people who benefit from the brokenness

[08:20:00.0000] <jgraham>
(as well as people for whom it is a serious problem)

[08:20:01.0000] <TabAtkins_>
jgraham: Dude, the people for whom it's a serious issue are among the ones that believe the prefixing model is still fundamentally sound.

[08:20:02.0000] <TabAtkins_>
And that the current problem is caused by a particular, preventable failure case.

[08:21:00.0000] <jgraham>
In what way is it particular, or preventable?

[08:21:01.0000] <TabAtkins_>
(Which is allowing a popular, interoperable feature to stay in WD for an extended period of time because the editors didn't drive it forward themselves.)

[08:22:00.0000] <TabAtkins_>
Had the WG been paying appropriate attention, the troublesome specs would have been picked up by another editor at least a year ago, polished up, and taken to CR so prefixes can drop.

[08:22:01.0000] <TabAtkins_>
We are now alerted to this problem.

[08:23:00.0000] <jgraham>
That way of viewing it assumes that the fundamental model is sound

[08:23:01.0000] <Velmont>
I really haven't heard much opposition to doing   -draft3-foobar  prefixing though. That would mitigate stuff a bit. Where the specs are responsible to update their -draft- version at each milestone where there is potential breakage etc.

[08:24:00.0000] <TabAtkins_>
Velmont: Nearly the entire WG disagrees with it for fundamental technical reasons.

[08:24:01.0000] <TabAtkins_>
Namely, that it doesn't solve the problems at hand at all, and introduces the potential for exciting new types of problems.

[08:25:00.0000] <TabAtkins_>
jgraham: Sure.  Which we do.

[08:25:01.0000] <jgraham>
It seems to me that the -draftFoo- scheme makes the situation very clear

[08:25:02.0000] <jgraham>
If it turns out that everyone is using -draft3- and it is needed for webcompat you implement -draft3- in your engine

[08:26:00.0000] <smaug____>
important thing is to have the prefixes live short time enough, so that no one can rely on them to be there always

[08:26:01.0000] <TabAtkins_>
smaug____: Yup, exactly.

[08:26:02.0000] <jgraham>
smaug____: Totally never going to happen

[08:26:03.0000] <jgraham>
The market dynamics just don't work liek that

[08:26:04.0000] <TabAtkins_>
jgraham: That doesn't solve anything except make people happier that the frozen prefix isn't the string "-webkit-".

[08:26:05.0000] <jgraham>
But if you believe they do, I have XHTML 2 to sell you

[08:27:00.0000] <jgraham>
TabAtkins_: It allows the WG to stop wasting time on -draft4- because it is clear that -draft3- was good enough for authors

[08:27:01.0000] <smaug____>
adding -webkit-* to other engines would break pages

[08:27:02.0000] <Velmont>
That's correct. But using -draft- will also make it less cool for engines to tug onto it. For marketing and whatnot.

[08:27:03.0000] <smaug____>
-webkit-* are used for browser engine detection

[08:27:04.0000] <jgraham>
smaug____: Evidence suggests otherwise

[08:28:00.0000] <smaug____>
IIRC adding support for certain -webkit-* properties breaks for example Angry Birds

[08:28:01.0000] <smaug____>
I mean, you get totally non-working page

[08:28:02.0000] <Velmont>
smaug____: A little breakage in exchange for a whole lot of new workable sites.

[08:28:03.0000] <smaug____>
without -webkit-* you at least get some warning

[08:31:00.0000] <jgraham>
Anyway: there is no incentive for browsers to remove prefixes. They is no incentive for authors not to use them, *particularly* on sites where the market is already unheathily unbalanced. The people who lose out most are end users. None of these facts is going to change.

[08:31:01.0000] <jgraham>
s/sites/platforms/

[08:33:00.0000] <zewt>
perhaps, but that doesn't mean the benefits of them aren't still present

[08:33:01.0000] <smaug____>
jgraham: the incentive to remove prefixes is to make web APIs better

[08:34:00.0000] <jgraham>
smaug____: Like I said there is no incentive to remove prefixes.

[08:34:01.0000] <jgraham>
Indeed people will quite reaonably argue that APIs that change all the time are *worse*

[08:34:02.0000] <jgraham>
*reasonably

[08:35:00.0000] <zewt>
("people will", but not you? heh)

[08:35:01.0000] <smaug____>
I'm quite disappointed if browser developers don't want to make APIs better

[08:35:02.0000] <smaug____>
jgraham: we're breaking DOM APIs all the time

[08:36:00.0000] <jgraham>
smaug____: We break DOM APIs very, very cautiously

[08:36:01.0000] <zewt>
... once they're unprefixed

[08:36:02.0000] <smaug____>
no really

[08:36:03.0000] <jgraham>
smaug____: What did you have in mind?

[08:36:04.0000] <smaug____>
isSameNode is one thing

[08:37:00.0000] <smaug____>
disabling sync XHR in some cases is  another one

[08:37:01.0000] <jgraham>
zewt: Hardly any DOM APIs have ever had a significant amount of content depending on a prefix

[08:38:00.0000] <zewt>
smaug: and those were done cautiously

[08:38:01.0000] <jgraham>
smaug____: I thought there was a reason that isSameNode wasn't going to fly. But in any case that is a almost-never-used method

[08:38:02.0000] <zewt>
smaug: both expecting very few sites to be affected, afaik

[08:38:03.0000] <jgraham>
sync-XHR we piggybacked onto another change; we didn't make the API better by disallowing syc XHR altogether

[08:38:04.0000] <smaug____>
jgraham: isSameNode was removed from the spec and from Gecko, and some sites broke

[08:38:05.0000] <jgraham>
even though we would all have liked to

[08:39:00.0000] <smaug____>
jgraham: sure we're making sync XHR better

[08:39:01.0000] <smaug____>
my aim is to remove it at some point in window context

[08:39:02.0000] <smaug____>
it may take long time

[08:40:00.0000] <jgraham>
smaug____: Yeah I'll get back to you in a few decades on that one

[08:40:01.0000] <smaug____>
I don't understand why it couldn't be removed like in 5 years

[08:40:02.0000] <jgraham>
Because people will still depend on it in 5 years

[08:41:00.0000] <smaug____>
not if browsers start to warn about it like now

[08:41:01.0000] <zewt>
if developers actually heed warnings

[08:41:02.0000] <jgraham>
Also, while I think it is very noble that Gecko are prepared to leverage their desktop market share to try and improve the platform, they can't really do the same on mobile

[08:41:03.0000] <zewt>
whether they would or not for browser APIs i think isn't known; i've never actually seen it tried (though for sure not *everyone* would)

[08:42:00.0000] <smaug____>
jgraham: indeed. I'm hoping webkit could do some good work on mobile

[08:42:01.0000] <zewt>
i still think that browsers should switch to sans serif or play show tunes or something when bad, obsolete APIs are used

[08:42:02.0000] <zewt>
lsdkjf

[08:42:03.0000] <zewt>
comic sans

[08:42:04.0000] <jgraham>
Anyway, the point is this is a very slow, cautious process

[08:43:00.0000] <smaug____>
the fact that removing bad APIs is possibly slow doesn't mean we shouldn't try to do it

[08:43:01.0000] <jgraham>
It is not like the CSSWG inventing brand new syntax after prefixed ones have become so widespread as to be unremovable

[08:43:02.0000] <jgraham>
and required for site-compat

[08:43:03.0000] <jgraham>
*that* is the problem

[08:44:00.0000] <zewt>
smaug____: we should try, but I think there's no indication that it's even possible to remove entrenched things like sync xhr

[08:44:01.0000] <jgraham>
That they look at The Process when making decisions rather than deployed reality

[08:44:02.0000] <Ms2ger>
Maybe people should start unprefixing stable stuff even if Tab doesn't like them

[08:44:03.0000] <smaug____>
/me has spent too much time in the garden. A year is a short time there... a tree might start to look interesting in a decade

[08:45:00.0000] <zewt>
i don't think it matters how you warn or how slowly you go, the existing content using it probably will never go away

[08:45:01.0000] <zewt>
but I won't say not to try :)

[08:45:02.0000] <Ms2ger>
Sure will

[08:45:03.0000] <smaug____>
old code does go away

[08:45:04.0000] <Ms2ger>
Imagine how much cruft we can remove now geocities died :)

[08:45:05.0000] <zewt>
some does, much doesn't

[08:45:06.0000] <smaug____>
web pages designed for NS4 sure don't work in any browser

[08:46:00.0000] <zewt>
it would be a little interesting to see graphs for that

[08:46:01.0000] <jgraham>
Geocities didn't die it just moved

[08:46:02.0000] <zewt>
how much old code on the web eventually gets removed or rewritten, and how much is written once and is then used untouched for a decade

[08:46:03.0000] <jgraham>
http://reocities.com/

[08:46:04.0000] <ksweeney>
jgraham, moved into a 4GB zip file on bittorrent you mean? ;)

[08:47:00.0000] <ksweeney>
hm…or was it TB

[08:48:00.0000] <Ms2ger>
And of those pages that have been untouched for a decade, does anybody visit them?

[08:49:00.0000] <jgraham>
Ms2ger: Well people cared enough to save the geocities content. And people use teh wayback machine

[08:50:00.0000] <Ms2ger>
I suspect people cared about geocities because of memories, more than because they actually look at those sites

[08:51:00.0000] <jgraham>
Pretty sure karlcow would have something to say about that line of reasoning.

[08:52:00.0000] <karlcow>
:)

[09:06:00.0000] <hsivonen>
Velmont: http://hsivonen.iki.fi/vendor-prefixes/#draftprefix

[09:13:00.0000] <TabAtkins_>
Ms2ger: I've had to use reocities to look at an old geocities site for the purpose of writing a standard before

[09:14:00.0000] <TabAtkins_>
And I was sad that some of the images weren't preserved. ;_;

[09:15:00.0000] <TabAtkins_>
Ms2ger: I'm, um, not the one holding back people from unprefixing.

[09:16:00.0000] <TabAtkins_>
Ms2ger: The people holding that back for each browser are the ones *in* the WG.

[09:17:00.0000] <Ms2ger>
For gradients, I'd argue you did stop people from prefixing by rewriting the spec so many times

[09:20:00.0000] <hsivonen>
TabAtkins_: when you revamp the syntax of something under the pretext that it's ok, because it's prefixed today, you validate the point of view of people who say prefixing is good, because the syntax ended up changing

[09:21:00.0000] <hsivonen>
TabAtkins_: even if grammar-incompatible revamping doesn't truly validate their position

[09:23:00.0000] <jgraham>
My point of view is that on the web there are two options: 1) "don't ship" 2) "ship and make any future changes sensitive to the legacy established by shipping". Acting like there is an option 3) "Ship and then make backwards incompatible changes justified by the fiction that the legacy doesn't exist because it has a funny name" is just delusion.

[09:23:01.0000] <Ms2ger>
... that the IETF and the CSSWG get away with

[09:25:00.0000] <jgraham>
The IETF eventually got away with it for websockets because there really wasn't so much legacy and it wasn't that hard to make the transition painless (a server could support both the old and new protocols)

[09:25:01.0000] <jgraham>
(and there were no client side API changes)

[09:25:02.0000] <jgraham>
The CSSWG haven't got away with it

[09:25:03.0000] <jgraham>
That's why we're having this discussion

[09:29:00.0000] <hsivonen>
jgraham: http://hsivonen.iki.fi/vendor-prefixes/#whattodo is based on a belief that option 3 is bogus

[09:33:00.0000] <hsivonen>
sigh. http://lists.w3.org/Archives/Public/www-style/2012Feb/0352.html

[09:43:00.0000] <AryehGregor>
So it looks like no browser actually allows things to intersect in 3D space.

[10:51:00.0000] <bga>
> iekit6

[10:51:01.0000] <bga>
lol

[12:25:00.0000] <gsnedders>
Hixie, TabAtkins: So my google account (geoffers) got disabled with standard "common reasons inc. ToS violations" message. Any chance either of you could ping anyone?

[12:26:00.0000] <smaug____>
gsnedders: huh

[12:26:01.0000] <smaug____>
just give up with Google ? :)

[12:26:02.0000] <gsnedders>
In other news it turns out Android sucks without a working Google account.

[12:27:00.0000] <nimbu>
gsnedders: really? I go by fine as long as I dont use the native apps :)

[12:28:00.0000] <gsnedders>
nimbu: Market is nice, and having contacts synced between devices is nice.

[12:29:00.0000] <wilhelm_>
gsnedders: Stop violating ToS, then!

[12:29:01.0000] <gsnedders>
wilhelm_: In what way!?

[12:29:02.0000] <Hixie>
gsnedders: wtf did you do?

[12:29:03.0000] <gsnedders>
I haven't even sent an email from my Gmail account in a month or so!

[12:30:00.0000] <gsnedders>
Hixie: Dunno. Haven't sent an email in a month, try to login this morning and get error. :\

[12:30:01.0000] <gsnedders>
And I've not touched + in ages, nor done anything apart from edit contacts which are syned…

[12:30:02.0000] <Hixie>
is there no link for escalation in the message?

[12:31:00.0000] <gsnedders>
There is, but no guarantee of a response or anything.

[12:31:01.0000] <Hixie>
use that mechanism

[12:31:02.0000] <Hixie>
let me know if it doesn't work

[12:31:03.0000] <gsnedders>
Hixie: Over what time-span?

[12:31:04.0000] <bga>
gsnedders i have 4 or 5 google accounts but google dont know about that

[12:32:00.0000] <Hixie>
gsnedders: keep me updated every 24 hours :-)

[12:32:01.0000] <Hixie>
gsnedders: do you use any of our ads products?

[12:32:02.0000] <gsnedders>
Hixie: No

[12:32:03.0000] <Hixie>
gsnedders: did you have two-factor authentication enabled?

[12:33:00.0000] <gsnedders>
Hixie: I don't *think* so.

[12:34:00.0000] <Hixie>
gsnedders: was your password easy to brute force? (e.g. dictionary word, numeric, or short)

[12:34:01.0000] <Ms2ger>
Or "hunter2"?

[12:35:00.0000] <nimbu>
hahah wilhelm_ :D

[12:35:01.0000] <gsnedders>
Hixie: No.

[12:35:02.0000] <nimbu>
gsnedders: yeah I barely use my phone other than for calls. :)

[12:35:03.0000] <Hixie>
gsnedders: hm

[12:36:00.0000] <Hixie>
gsnedders: can you paste the exact message you're getting?

[12:37:00.0000] <gsnedders>
http://support.google.com/accounts/bin/answer.py?hl=en&p=profiles&ctx=ch_ServiceLoginAuth&answer=40695

[12:38:00.0000] <Hixie>
ok go through the "contact us" flow from that page and let me know if you don't hear back in 24 hours

[12:38:01.0000] <Hixie>
(it might take longer than that, but let's start there)

[12:38:02.0000] <gsnedders>
Sent a thing there 9ish hours ago

[12:39:00.0000] <Hixie>
k

[12:43:00.0000] <Hixie>
gsnedders: have you used any of our photo sharing or video sharing products? (youtube, picasa, panoramio, blogger, etc)

[12:43:01.0000] <gsnedders>
Hixie: no

[12:43:02.0000] <Hixie>
k

[12:44:00.0000] <Hixie>
ever logged in to your account from an internet cafe or other untrusted computer?

[12:44:01.0000] <gsnedders>
Hixie: Uni computers, but that's as untrusted as it gets.

[12:45:00.0000] <gsnedders>
(I'd be dubious if anything came off them, though)

[12:45:01.0000] <Hixie>
how untrusted are those? any chance of a keylogger?

[12:45:02.0000] <gsnedders>
I'd be really quite surprised.

[12:46:00.0000] <gsnedders>
Certainly not heard of anything like that.

[12:46:01.0000] <gsnedders>
And the setup is decent.

[12:46:02.0000] <Hixie>
hmm k

[12:47:00.0000] <gsnedders>
(And given the network setup, you'd be hard pushed to get much data out)

[12:48:00.0000] <Hixie>
do you have an android phone, or an iphone with the google+ app?

[12:48:01.0000] <gsnedders>
(and local storage is re-imaged daily (or maybe even per login?) so you couldn't get much there for long)

[12:48:02.0000] <gsnedders>
Hixie: Android phone

[12:49:00.0000] <Hixie>
does it use the same account?

[12:50:00.0000] <gsnedders>
Yeah

[12:50:01.0000] <Hixie>
do you have the g+ app with photo upload enabled?

[12:50:02.0000] <gsnedders>
Yes and only if it's the default.

[12:51:00.0000] <Hixie>
not the default

[12:51:01.0000] <gsnedders>
(Certainly photos aren't uploaded by default?)

[12:51:02.0000] <Hixie>
hmm

[12:51:03.0000] <gsnedders>
And nobody's got at my phone, either.

[12:51:04.0000] <Hixie>
(btw that feature is awesome, you should totally use it if you get the chance)

[12:52:00.0000] <Hixie>
i can't see what it could be

[12:53:00.0000] <Hixie>
let me know if they haven't replied by tomorrow

[12:55:00.0000] <gsnedders>
Hixie: k

[14:21:00.0000] <jamesr_>
gsnedders, maybe your uni is different than mine, but i wouldn't trust computers at my uni at all for logging in (not that it ever stopped me)

[15:47:00.0000] <Hixie>
zcorpan pointed me to some spam on the status annotations, so i poked around a bit

[15:47:01.0000] <Hixie>
and cleared out the obvious spam

[15:47:02.0000] <Hixie>
yay for having a database that logs every single change and trivially lets me roll back specific changes

[15:47:03.0000] <Hixie>
my favourite was that #background had the following test: http://www12.0zz0.com/2012/02/07/10/492179392.jpg

[15:54:00.0000] <nessy>
lol


2012-02-08
[16:28:00.0000] <Hixie>
abarth: is there a more up to date reference for "The Web Origin Concept" than the RFC?

[16:30:00.0000] <abarth>
Hixie: nope

[16:30:01.0000] <Hixie>
k

[16:58:00.0000] <crankharder>
my cache manifest looks somethin like this: http://pastie.org/3338233 -- after it gets loaded, it seems that any page that returns a 404/500 gets redirected to the cached version of /offline, even when still online

[18:21:00.0000] <MikeSmith>
hsivonen: on the topic of unnecessary headers: http://lists.w3.org/Archives/Public/public-tracking/2012Feb/0144.html

[18:21:01.0000] <MikeSmith>
(in this case, response headers)

[18:31:00.0000] <MikeSmith>
I wish it was possible to run Firefox and Nightly at the same time

[18:32:00.0000] <heycam>
it is!

[18:33:00.0000] <heycam>
you just need to start from the command line to do it

[18:33:01.0000] <heycam>
and use separate profiles

[18:39:00.0000] <MikeSmith>
heycam: ah, OK

[18:39:01.0000] <MikeSmith>
didn't know

[01:18:00.0000] <annevk>
morning

[01:27:00.0000] <annevk>
oh yes

[01:27:01.0000] <annevk>
HTTP was fixed with regards to automatic redirect behavior

[01:27:02.0000] <annevk>
only took half a decade

[01:34:00.0000] <MikeSmith>
hsivonen: dunno if you saw my ping about this earlier, but on the topic of unnecessary headers: http://lists.w3.org/Archives/Public/public-tracking/2012Feb/0144.html

[01:34:01.0000] <MikeSmith>
response header in this case

[01:52:00.0000] <zcorpan>
"I think that while talking about responsive image, introducing element that would choose image based on media-query, we should explore more generic approach... any media"

[01:52:01.0000] <zcorpan>
OK, now that thread totally lost track of the original problem

[01:52:02.0000] <wilhelm_>
zcorpan: Which list?

[01:52:03.0000] <zcorpan>
whatwg

[01:53:00.0000] <zcorpan>
http://lists.whatwg.org/pipermail/whatwg-whatwg.org/2012-February/034767.html

[01:55:00.0000] <annevk>
there already is a media attribute

[01:55:01.0000] <zcorpan>
why stop there? let's reinvent SVG's <switch>

[01:56:00.0000] <MikeSmith>
oh did that some from SVG?

[01:56:01.0000] <annevk>
repressed CDF memories bubble up

[01:56:02.0000] <MikeSmith>
is that the same switch that was in early drafts of Web Forms 2.0?

[01:56:03.0000] <annevk>
I don't think so

[01:56:04.0000] <MikeSmith>
I had thought that came from XForms

[01:56:05.0000] <MikeSmith>
ah OK

[01:57:00.0000] <zcorpan>
wow i don't remember a WF2 <switch>

[01:57:01.0000] <MikeSmith>
yeah

[01:57:02.0000] <zcorpan>
was it dropped in 2004?

[01:57:03.0000] <MikeSmith>
ah wait

[01:58:00.0000] <MikeSmith>
maybe it was in early Web Apps 1.0

[01:58:01.0000] <MikeSmith>
lemme look

[01:58:02.0000] <MikeSmith>
http://www.whatwg.org/specs/web-apps/2005-09-01/#using

[01:59:00.0000] <MikeSmith>
http://www.whatwg.org/specs/web-apps/2005-09-01/#switch

[02:00:00.0000] <zcorpan>
was that for tabbed interfaces?

[02:01:00.0000] <zcorpan>
seems so

[02:01:01.0000] <annevk>
yeah

[02:03:00.0000] <MikeSmith>
http://www.w3.org/TR/2001/WD-xforms-20010608/slice8.html#ui-conditional-switch

[02:03:01.0000] <MikeSmith>
ah

[02:03:02.0000] <MikeSmith>
yeah

[02:03:03.0000] <MikeSmith>
that Xforms one was just a normal case-switch

[03:12:00.0000] <annevk>
http://validator.w3.org/nu/

[03:46:00.0000] <MikeSmith>
http://dvcs.w3.org/hg/ime-api/raw-file/default/use-cases/Overview.html

[03:49:00.0000] <KjetilK>
/me comes looking for annevk, long time :-)

[03:51:00.0000] <KjetilK>
annevk, people have been advocating putting Access-Control-Allow-Origin:* indiscriminately into response headers based on the CORS spec

[03:52:00.0000] <annevk>
hey man

[03:52:01.0000] <KjetilK>
I think it makes sense to do so, but when I read the spec, it seems to me it doesn't allow it

[03:52:02.0000] <KjetilK>
o/

[03:52:03.0000] <annevk>
oh

[03:52:04.0000] <annevk>
it's allowed for sure

[03:52:05.0000] <KjetilK>
oh, ok

[03:52:06.0000] <annevk>
and it's safe, too

[03:52:07.0000] <KjetilK>
yeah, it amounts to saying "actually, I don't care"

[03:53:00.0000] <annevk>
unless it's an intranet resource or some such

[03:53:01.0000] <KjetilK>
right

[03:53:02.0000] <annevk>
then it's not safe

[03:54:00.0000] <KjetilK>
so, I suppose it is the start of 5.1 that is a bit confusing

[03:54:01.0000] <KjetilK>
since if I just follow the link to "simple cross-origin request", then, yes, it seems to be allowed

[03:54:02.0000] <KjetilK>
but if I just read on, then it seems it is conditional on the request Origin header

[03:55:00.0000] <annevk>
should clarify that I guess

[03:55:01.0000] <KjetilK>
would be nice

[03:57:00.0000] <KjetilK>
/me was about to create som Plack middleware for it, but sees it has already been done

[03:58:00.0000] <annevk>
cool

[04:01:00.0000] <KjetilK>
/me pings his favorite Debian developer about it instead

[04:02:00.0000] <annevk>
i think i'm gonna water down the server requirements

[04:03:00.0000] <annevk>
they are rough guidelines for certain scenarios, but servers can really do whatever the fuck they want

[04:03:01.0000] <annevk>
it doesn't matter

[04:03:02.0000] <KjetilK>
ok

[04:03:03.0000] <annevk>
as long as the clients are compliant everything should be good

[04:03:04.0000] <KjetilK>
yup

[04:03:05.0000] <KjetilK>
any timeline for it to go to Rec?

[04:04:00.0000] <annevk>
I don't really care, but people seem to try to push it to Last Call

[04:04:01.0000] <annevk>
so, couple more years maybe...

[04:04:02.0000] <KjetilK>
hehe

[04:04:03.0000] <annevk>
it's not going to change

[04:05:00.0000] <KjetilK>
/me would have liked a normative reference from the SPARQL 1.1 Protocol, but that's happening RSN :-)

[04:18:00.0000] <hsivonen>
Exorcising DTDs with RDFa: http://www.w3.org/News/2012.html#entry-9353

[04:22:00.0000] <zcorpan>
wasn't there a DTD for RDFa+HTML?

[04:30:00.0000] <MikeSmith>
zcorpan: yeah, there is still

[04:30:01.0000] <MikeSmith>
oh

[04:30:02.0000] <MikeSmith>
no, not for RDFa+HTML specifically

[04:30:03.0000] <MikeSmith>
not currently at least afaik

[04:30:04.0000] <MikeSmith>
they do have a DTD in the RDF Core 1.1 spec

[04:31:00.0000] <hsivonen>
zcorpan: there have been various RDFa + some legacy deliverable of the XHTML2 WG

[04:33:00.0000] <MikeSmith>
I seriously think we should have a policy that bans WGs from publishing any new DTDs

[04:33:01.0000] <GPHemsley>
annevk: I think it is dangerous to suggest that a content author would have sufficient knowledge to determine whether a particular phrase might be untranslatable in another language; this differs from specifically asserting that something should not be translated, as a name or technical term.

[04:34:00.0000] <MikeSmith>
hsivonen: I've pushed all changes upstream

[04:34:01.0000] <hsivonen>
MikeSmith: thanks

[04:34:02.0000] <MikeSmith>
thank you man

[04:35:00.0000] <zcorpan>
http://dev.w3.org/html5/rdfa/#validation

[04:35:01.0000] <hsivonen>
zcorpan: :-(

[04:36:00.0000] <MikeSmith>
hsivonen: btw, if you happen to (re)look at the changesets, probably best to look in reverse chronological order, because I ending up backing out/reverting much of the initial changes

[04:36:01.0000] <hsivonen>
zcorpan: that's an HTML WG deliverable, so it can be put through the Decision Process

[04:36:02.0000] <MikeSmith>
yeah

[04:36:03.0000] <MikeSmith>
i guess I missed that part of the spec :(

[04:37:00.0000] <hsivonen>
MikeSmith: the validator doesn't start due to schema errors

[04:37:01.0000] <MikeSmith>
yeah

[04:37:02.0000] <MikeSmith>
please retry it

[04:37:03.0000] <MikeSmith>
I found that too

[04:37:04.0000] <MikeSmith>
I think it's due to the presets changing and the entity map needing to be rebuilt

[04:37:05.0000] <zcorpan>
hsivonen: sadly i've stopped caring about that kind of thing

[04:38:00.0000] <MikeSmith>
hsivonen: but if that doesn't work, lemme know

[04:38:01.0000] <zcorpan>
i've objected to dtds being written and new doctypes being minted before with not so much success

[04:39:00.0000] <hsivonen>
Prediction: Wikipedia will cite Appendix B.1 as the truth despite its rules about primary sources.

[04:39:01.0000] <gsnedders>
Hixie: Google account lives again, FYI.

[04:39:02.0000] <hsivonen>
gsnedders: what happened?

[04:39:03.0000] <hsivonen>
MikeSmith: ok. rerunning build.py fixed it

[04:40:00.0000] <MikeSmith>
/me breathes a sigh of reliev

[04:40:01.0000] <gsnedders>
hsivonen: No idea. I got account login forwarding to generic "common reasons for an account to be disabled include ToS violations", etc. etc. Sent email questioning, 24 hours later I login again.

[04:40:02.0000] <gsnedders>
hsivonen: Never heard from a human.

[04:41:00.0000] <hsivonen>
gsnedders: scary to be chosen for deletion. but good that it was resolved so quickly

[04:42:00.0000] <hsivonen>
"The only difference between the RDFa 1.1 DTD versus the RDFa 1.1 Lite DTD is the addition of the following attributes to the metainformation attributes collection; content, rel, rev, datatype, resource, and inlist. "

[04:42:01.0000] <hsivonen>
what about href and src?

[04:42:02.0000] <gsnedders>
hsivonen: Makes me want to prioritize moving my email off there higher.

[04:43:00.0000] <hsivonen>
gsnedders: it's unfortunate that Gmail's UI is so vastly superior to Fastmail's

[04:45:00.0000] <gsnedders>
hsivonen: I practically use the IMAP interface all the time.

[05:02:00.0000] <hsivonen>
zcorpan: I filed https://www.w3.org/Bugs/Public/show_bug.cgi?id=15936

[05:13:00.0000] <hsivonen>
this deployment mechanism for Validator.nu is so brittle

[05:13:01.0000] <hsivonen>
I expect real sysadmins to laugh at me

[05:13:02.0000] <annevk>
GPHemsley: could leave a comment on the blog post saying that's taking the spec too far

[05:13:03.0000] <annevk>
GPHemsley: not sure I care enough to change the post

[05:16:00.0000] <zcorpan>
hsivonen: thanks

[05:19:00.0000] <hsivonen>
annevk: what's prefixing the Fullscreen API buying is so far other than sites having to support multiple syntaxes and "cancel" getting bikeshedded to "exit" and "S" to "s"?

[05:20:00.0000] <annevk>
anyone familiar with http://en.wikipedia.org/wiki/Dagstuhl ?

[05:21:00.0000] <annevk>
hsivonen: dunno

[05:24:00.0000] <zcorpan>
hsivonen: speaking of prefixes, it'd be nice to get Blob.mozSlice unprefixed (also webkitSlice)

[05:25:00.0000] <annevk>
I got an invite and they upgraded my academic credentials from nothing to Dr.

[05:25:01.0000] <hsivonen>
zcorpan: is a bug on file?

[05:25:02.0000] <annevk>
not sure if that's a positive or negative, but the castle looks nice

[05:25:03.0000] <zcorpan>
not sure

[05:25:04.0000] <hsivonen>
annevk: everyone is a Dr. in Germany

[05:26:00.0000] <annevk>
so what about the people that actually studied?

[05:28:00.0000] <hsivonen>
MikeSmith: deployed to validator.nu

[05:29:00.0000] <MikeSmith>
hsivonen: excellent

[05:29:01.0000] <hsivonen>
annevk: doktordoktor I suppose :-)

[05:29:02.0000] <zcorpan>
hsivonen: appears not, but i'll file

[05:29:03.0000] <MikeSmith>
glad the changes didn't cause anything to blow up

[05:29:04.0000] <hsivonen>
MikeSmith: it blew up deployment but I fixed it

[05:29:05.0000] <MikeSmith>
ok, glad for that

[05:29:06.0000] <MikeSmith>
and sorry if it blindsided you

[05:30:00.0000] <hsivonen>
fortunately, the app crashed before it told the old process to shut down

[05:30:01.0000] <hsivonen>
so there was no user-visible interruption in service

[05:31:00.0000] <MikeSmith>
ah good

[05:35:00.0000] <hsivonen>
hmm. glazou hasn't posted the most import post yet yet

[05:38:00.0000] <GPHemsley>
annevk: Done (awaiting moderation).

[05:38:01.0000] <annevk>
approved

[05:41:00.0000] <GPHemsley>
thanks

[05:43:00.0000] <annevk>
roc: I can email www-dom for you

[06:03:00.0000] <zcorpan>
hsivonen: https://bugzilla.mozilla.org/show_bug.cgi?id=725289

[06:07:00.0000] <zcorpan>
https://bugs.webkit.org/show_bug.cgi?id=78111

[06:09:00.0000] <hsivonen>
zcorpan: thanks. we should give you the bit that allows you to file confirmed bugs

[06:09:01.0000] <annevk>
webkit should too

[06:11:00.0000] <hsivonen>
zcorpan: I'm told you now have the CANCONFIRM bit

[06:12:00.0000] <annevk>
heh

[06:12:01.0000] <annevk>
open source, it works

[06:12:02.0000] <jgraham>
hsivonen: But you can't confirm it? ;)

[06:15:00.0000] <hsivonen>
jgraham: I haven't leveled high enough to confirm that someone can confirm

[06:27:00.0000] <matjas>
did this section get moved to a different spec? http://web.archive.org/web/20110123174457/http://www.whatwg.org/specs/web-apps/current-work/multipage/apis-in-html-documents.html#dom-innerhtml

[06:27:01.0000] <annevk>
yes

[06:28:00.0000] <annevk>
http://html5.org/specs/dom-parsing.html

[06:28:01.0000] <annevk>
long time ago

[06:28:02.0000] <annevk>
you should read the WHATWG Weekly :p

[06:28:03.0000] <matjas>
i must’ve missed that one :(

[06:28:04.0000] <annevk>
spread the news :)

[06:29:00.0000] <matjas>
document.innerHTML used to be mentioned explicitly; has it been removed or does `element.innerHTML` imply it should also work for `document`?

[06:30:00.0000] <matjas>
http://html5.org/specs/dom-parsing.html#innerhtml

[06:30:01.0000] <annevk>
Ms2ger killed it

[06:30:02.0000] <annevk>
and thereby broke XHR

[06:30:03.0000] <annevk>
he has yet to fix it somehow I believe

[06:32:00.0000] <hsivonen>
killed what? Document.innerHTML?

[06:32:01.0000] <annevk>
yeah

[06:32:02.0000] <hsivonen>
ok

[06:32:03.0000] <annevk>
lack of implementations

[06:32:04.0000] <hsivonen>
DOMParser FTW

[06:32:05.0000] <annevk>
I thought it was useful personally

[06:32:06.0000] <annevk>
people are actually testing XHR + data URLs because they want async

[06:33:00.0000] <annevk>
iirc

[06:33:01.0000] <annevk>
have to ask the typlab guys again

[06:33:02.0000] <hsivonen>
XHR is nicer that DOMParser of course

[06:33:03.0000] <hsivonen>
in Gecko, it does stuff on another thread and doesn't lock the UI

[06:34:00.0000] <annevk>
using XHR seems kind of hackish to me

[06:34:01.0000] <annevk>
but well, if it works

[07:08:00.0000] <zcorpan>
there's something wrong with table 1 in http://transitioning.to/2012/01/the-world-of-pain-that-is-html5-video/

[07:09:00.0000] <zcorpan>
it doesn't include firefox 4 and above

[07:09:01.0000] <zcorpan>
maybe each version has less market share than ie6

[07:10:00.0000] <zcorpan>
but that seems unlikely, no?

[07:12:00.0000] <hsivonen>
zcorpan: not according to statcounter

[07:12:01.0000] <hsivonen>
zcorpan: does Chrome really support HW acceleration for H.264?

[07:38:00.0000] <zcorpan>
i guess the ALA article is the reason for the new whatwg permathreads

[07:43:00.0000] <Wilto>
Whoever wrote that thing is a total hack. Handsome, though.

[07:44:00.0000] <Wilto>
But since you mentioned it, I'd kinda like to un-perma the <picture> thread, at least. There's a pretty solid general consensus, but now it's treading water a bit.

[07:45:00.0000] <Wilto>
I'm not certain what the next steps are, but I've pestered a couple of vendor folks about whipping up a functional prototype and I'm writing up a slightly more formal proposal based on the feedback in that thread.

[07:46:00.0000] <Ms2ger>
Wilto, wait until Hixie gets to it

[07:46:01.0000] <zcorpan>
the <picture> proposal from 2007 was totally different. it was for enabling rich fallback.

[07:46:02.0000] <Wilto>
Hah, I kinda thought that might be the next step.

[07:47:00.0000] <beverloo>
I like the <picture> proposal, but do also think it may be a bit ambiguous to authors to have <img>, <picture> and <figure>

[07:47:01.0000] <Wilto>
“picture” drives me up a wall.

[07:47:02.0000] <beverloo>
(name-wise)

[07:47:03.0000] <Wilto>
Yeah.

[07:48:00.0000] <Wilto>
I want something that says "bigass art." Like you guys saw, I've been chucking around "art" (dumb) and "poster" (ambiguous and also dumb).

[07:50:00.0000] <hsivonen>
Wilto: what Boris said about what media queries match changing after page load still applies to <picture>, though

[07:50:01.0000] <zcorpan>
Wilto: if you want a successful outcome, try to steer the discussion into use cases, problem descriptions, existing sites working around the lack of the feature, and away from solution proposals

[07:52:00.0000] <zcorpan>
Wilto: when all there is is solution proposals, it gets ignored

[07:52:01.0000] <zcorpan>
Wilto: if there's a clear problem description, a solution can be designed that solves the problem in the best technical way

[07:52:02.0000] <zcorpan>
having 20 people bikeshedding where the alt attribute should go is just wasting time

[07:53:00.0000] <Wilto>
zcorpan: Seriously, man.

[07:53:01.0000] <jgraham>
/me tried to move to use cases and failed to think of anything that could even possibly be a solution

[07:53:02.0000] <Wilto>
I mean, I can absolutely see use cases. I covered some in that ALA thing. Maybe I'll just move it back in that way.

[07:54:00.0000] <Wilto>
And I can cite no small number of failed attempts to work around the issue.

[07:54:01.0000] <zcorpan>
post use cases and work arounds to the list

[07:54:02.0000] <zcorpan>
that's what Hixie looks at

[07:55:00.0000] <zcorpan>
and then wait for Hixie to respond

[07:55:01.0000] <zcorpan>
good luck :-)

[07:56:00.0000] <Wilto>
Thanks dude! Huge help, this.

[07:56:01.0000] <zcorpan>
np

[07:59:00.0000] <AryehGregor>
Is this the "RWD Heaven" megathread that I've been ignoring?

[07:59:01.0000] <Wilto>
Nah, that thing scares the hell out of me.

[08:00:00.0000] <Wilto>
I'm not touching that discussion.

[08:00:01.0000] <jgraham>
And the child threads it spawned

[08:00:02.0000] <Wilto>
Is that how the <picture> thread kicked off? Eesh.

[08:00:03.0000] <Ms2ger>
 (http://www.w3.org/TR/DOM-Bindings/),

[08:00:04.0000] <Ms2ger>
Heh

[08:00:05.0000] <Wilto>
No wonder it's going in circles.

[08:05:00.0000] <Wilto>
Anyway. Figure I'll post a big "maybe we're getting a little off-track here; let me sum up the original reasoning, the need, and how we arrived at some of the conclusions we did" thing on there.

[08:05:01.0000] <Wilto>
Thanks again, zcorpan!

[08:07:00.0000] <jgraham>
Wilto: Try to keep it short and to the point :) There are a few epic rambles on that thread already :)

[08:08:00.0000] <Wilto>
Oh, for sure. I'll keep it concise.

[08:09:00.0000] <Wilto>
I'd like to just say "everyone go read the history on the EtherPad link I posted, and around the third mention of <noscript> you may see where we've exhausted all our options."

[08:10:00.0000] <jgraham>
Wilto: So the most important thing is "what are your *requirements*"

[08:11:00.0000] <jgraham>
(weird use of quotes there)

[08:11:01.0000] <Wilto>
"A single request that serves an appropriately sized _content_ image, based on screen size." In a perfect world, that's based on media queries—since it would be crazy flexible going forward.

[08:12:00.0000] <Wilto>
But that's the elevator version of it.

[08:12:01.0000] <jgraham>
Just a simple list of "this is what we want to achieve" and "this is why we don't think it is only a temporary set of requirements"

[08:12:02.0000] <annevk>
Ms2ger: where is dom-bindings from?

[08:12:03.0000] <annevk>
Ms2ger: I guess it redirects...

[08:12:04.0000] <Ms2ger>
It does

[08:12:05.0000] <zcorpan>
Wilto: media queries is in the solution proposal bucket

[08:12:06.0000] <jgraham>
Wilto: That is sort of high-level. Your actual requirements must be lower level than that

[08:12:07.0000] <Wilto>
Yeah. Kind of an aside, there.

[08:12:08.0000] <Ms2ger>
I assume you ignore "exclusion opportunity" emails

[08:13:00.0000] <jgraham>
Liek why does the image have to be "appropriately sized"

[08:13:01.0000] <jgraham>
(can you even define what that means?)

[08:13:02.0000] <jgraham>
(because it probably doesn't mean "viewport width")

[08:13:03.0000] <Wilto>
That's a good point.

[08:14:00.0000] <jgraham>
(at least not at the time of the request)

[08:14:01.0000] <Wilto>
"Alternate image sources based on device properties, including but not limited to screen size."

[08:16:00.0000] <Wilto>
Sure wish I did words gooder.

[08:16:01.0000] <zcorpan>
maybe something like "i want users to see my images with as good quality as possible, as fast as possible, and with as little bandwidth as possible. the user should be able to print a high resolution image after going offline."

[08:17:00.0000] <zcorpan>
if that's what you want

[08:17:01.0000] <Wilto>
Ah, I follow you. I'm phrasing it like I'm pitching a line for a spec somewhere, not describing the goal.

[08:17:02.0000] <Wilto>
Also, that is completely what I want.

[08:18:00.0000] <zcorpan>
then say that :)

[08:18:01.0000] <Wilto>
Also a pony.

[08:18:02.0000] <Wilto>
Santa is really dropping the ball on those two fronts.

[08:19:00.0000] <Wilto>
Again: hugely helpful, guys. Thanks so much.

[08:19:01.0000] <MikeSmith>
hey guys, stop whatever else bulshit you're discussing, because game-changing breaking news just became available: "libreffice" not is including rich text editing

[08:19:02.0000] <MikeSmith>
using HTML 5 canvas

[08:19:03.0000] <jgraham>
Yeah, the key thing about use cases is that they are typically about what your *users* want

[08:19:04.0000] <annevk>
Ms2ger: no idea what it was originally?

[08:20:00.0000] <hsivonen>
MikeSmith: did you mean "not" or "now"?

[08:20:01.0000] <MikeSmith>
oops

[08:20:02.0000] <MikeSmith>
yeah

[08:20:03.0000] <MikeSmith>
NOW

[08:20:04.0000] <MikeSmith>
see, nobody knew that before yesterday

[08:20:05.0000] <Wilto>
Apparently, shit just got real.

[08:20:06.0000] <annevk>
oh yeah http://www.w3.org/TR/2008/WD-DOM-Bindings-20080410/

[08:20:07.0000] <hsivonen>
MikeSmith: that won't pre-empt the thread, then :-/

[08:20:08.0000] <annevk>
doh

[08:20:09.0000] <MikeSmith>
nobody involved in the discussions knew that until YESTERDAY

[08:20:10.0000] <zcorpan>
one solution i have proposed in the past is using high-res progressive image and http range requests, and let the UA download as much of the image it wants until it has good enough quality, and do a range request for more of the image when it wants higher quality (e.g. because the user zooms in)

[08:20:11.0000] <MikeSmith>
wink wink

[08:21:00.0000] <MikeSmith>
what a fuggin facade

[08:21:01.0000] <MikeSmith>
who is trying to fool who here?

[08:21:02.0000] <MikeSmith>
one fool talking to another and trying to pretend that neither of them knew

[08:21:03.0000] <MikeSmith>
BIG NEWS

[08:21:04.0000] <zcorpan>
but i don't know if that's the best possible solution to the problem

[08:21:05.0000] <MikeSmith>
jesus

[08:21:06.0000] <hsivonen>
zcorpan: I suppose that'd work with interlaced PNG, but is there a photo compression format where that works?

[08:22:00.0000] <hsivonen>
zcorpan: (JPEG2000 is not it)

[08:22:01.0000] <zcorpan>
hsivonen: normal JPEG supports progressive compression. is that not good enough?

[08:22:02.0000] <hsivonen>
zcorpan: that is, a format that has the property that to decode with both dimensions halved, you download the first quarter of data

[08:22:03.0000] <hsivonen>
zcorpan: does it have the property I just stated?

[08:23:00.0000] <hsivonen>
zcorpan: JPEG2000 was supposed to be an improvement in this department, but it was full of FAIL

[08:23:01.0000] <zcorpan>
no idea

[08:23:02.0000] <annevk>
haha "alexmog: More people understand matrices than margin collapsing"

[08:23:03.0000] <hsivonen>
to decode JPEG2000 with dimensions halved without compromising quality, you need to download the first *half* of data

[08:23:04.0000] <MikeSmith>
Wilto: btw your tweets are a model for how others should conduct themselves on twitter

[08:24:00.0000] <hsivonen>
annevk: matrices are taught in high school

[08:24:01.0000] <zcorpan>
my idea is for it to work like <video> fetching where you do an unbounded range fetch and abort when you have "enough"

[08:24:02.0000] <zcorpan>
and do another request when you want more

[08:24:03.0000] <hsivonen>
annevk: margin collapsing wasn't taught when I want to school

[08:25:00.0000] <annevk>
you got matrix math in high school? i'm so jealous

[08:25:01.0000] <jgraham>
We got it in 6th form i.e. at age 17-18

[08:25:02.0000] <annevk>
/me is prolly better with margin collapsing than matrices

[08:25:03.0000] <jgraham>
But not much, really

[08:26:00.0000] <Ms2ger>
5th form! ;)

[08:26:01.0000] <MikeSmith>
hsivonen: on the subject of searching for appropriate words for things, I wonder if there is a word for "preach the process while simultaneously blowing smoke up everbody's asses"

[08:26:02.0000] <hsivonen>
annevk: it was an opt-in course of an opt-in level of math

[08:27:00.0000] <hsivonen>
MikeSmith: who is doing that?

[08:27:01.0000] <annevk>
ah, maybe it's Level A math

[08:27:02.0000] <annevk>
we had Level A 1,2 and Level B 1,2

[08:27:03.0000] <annevk>
I did B 1,2

[08:28:00.0000] <annevk>
which was mostly about proofs and silly things

[08:28:01.0000] <beverloo>
matrices sound much, much more like a B thing though

[08:28:02.0000] <beverloo>
given Dutch high-scool maths

[08:28:03.0000] <annevk>
yeah dunno

[08:28:04.0000] <annevk>
too late now

[08:29:00.0000] <annevk>
chance was Level A too, didn't make much sense either

[08:29:01.0000] <annevk>
especially as you needed it quite a bit in advanced Physics

[08:29:02.0000] <zcorpan>
Wilto: maybe the best solution to this problem is "give 10 developers a year or two to improve JPEG encoders to radically reduce file size/quality ratio of JPEG images"

[08:31:00.0000] <zcorpan>
any markup solution to this problem isn't going to be usable in the next few years anyway, whereas encoding improvements are available to authors immediately

[08:31:01.0000] <hsivonen>
it's nice that people are interested in improving JPEG encoders again

[08:32:00.0000] <hsivonen>
as I understand it, the encoder everyone uses is very old

[08:32:01.0000] <annevk>
decoder or encoder?

[08:32:02.0000] <zcorpan>
encoder

[08:32:03.0000] <hsivonen>
has it been improved since the Independent JPEG group dude wrote it?

[08:34:00.0000] <annevk>
supposedly Opera has a proprietary decoder (not sure about encoder) that's superior

[08:35:00.0000] <hsivonen>
superior in speed? memory footprint?

[08:35:01.0000] <annevk>
both I believe

[08:35:02.0000] <annevk>
but this information is quite old :)

[08:36:00.0000] <zcorpan>
next stop: örebro c

[08:36:01.0000] <annevk>
on the train?

[08:36:02.0000] <annevk>
guess so

[08:37:00.0000] <annevk>
so Sweden uses "C", Norway "S", and the Netherlands "CS"

[08:37:01.0000] <Ms2ger>
hbf?

[08:38:00.0000] <annevk>
Ms2ger: Germany

[08:38:01.0000] <Ms2ger>
Correct

[08:38:02.0000] <annevk>
Hauptbahnhof

[08:39:00.0000] <annevk>
kind of funny how in Norway and Sweden the words are put together whereas in Dutch, which typically does that, they are not

[08:40:00.0000] <annevk>
oh well, back to work

[09:03:00.0000] <dglazkov>
good morning, Whatwg!

[09:16:00.0000] <MikeSmith>
dglazkov: you are too 元気過ぎ with that message

[09:16:01.0000] <MikeSmith>
or maybe not

[09:17:00.0000] <MikeSmith>
instead we need more positive vibrations

[09:18:00.0000] <Wilto>
MikeSmith: Swearing about the MBTA and referencing Zelda constantly?

[09:19:00.0000] <AryehGregor>
This demonstrates the value of testing lots of permutations: -ms-transform-origin: 0 0 1em computes to "0px 0px 0px", but "1em 0 1em" computes to "16px 0px 16px".

[09:19:01.0000] <AryehGregor>
Cool bug.

[09:19:02.0000] <jgraham>
MikeSmith: We have a WebAPI for that right?

[09:21:00.0000] <MikeSmith>
you dudes are great

[09:21:01.0000] <MikeSmith>
you give me hope

[09:21:02.0000] <MikeSmith>
Wilto: keep that shit up man

[09:21:03.0000] <MikeSmith>
seriously

[09:22:00.0000] <MikeSmith>
jgraham: but don't be quite so cynical

[09:22:01.0000] <MikeSmith>
there is hope

[09:22:02.0000] <Wilto>
MikeSmith: Will do, sir. Will do.

[09:36:00.0000] <dglazkov>
MikeSmith: stay positive, dammit!

[09:37:00.0000] <dglazkov>
MikeSmith: also, Google translate says your funny pictures mean "Too healthy" :)

[09:37:01.0000] <MikeSmith>
heh

[09:38:00.0000] <dglazkov>
or "past energetic", apparently.

[09:38:01.0000] <MikeSmith>
no

[09:38:02.0000] <MikeSmith>
keep pushing

[09:38:03.0000] <dglazkov>
that would be when I start all-caping my greetings.

[09:38:04.0000] <MikeSmith>
keep Dominic in the loop

[10:24:00.0000] <MikeSmith>
hsivonen: heh

[10:47:00.0000] <hober>
Wilto: if constantly swearing about the T is wrong, I don't want to be right

[10:52:00.0000] <kennyluck>
I think what the RWD thread needs is a wiki page.

[10:53:00.0000] <Ms2ger>
I think what it needs is a flamethrower

[10:54:00.0000] <Wilto>
That “heaven” one?

[10:55:00.0000] <Wilto>
hober: Our hatred only fuels the T. Until it falls over and/or bursts into flames.

[11:10:00.0000] <crankharder>
soooo: http://stackoverflow.com/questions/9187094/application-cache-404-500-pages

[11:10:01.0000] <crankharder>
^-- app cache, fallback, 400/500 pages

[11:11:00.0000] <hober>
Wilto: these days I spend my time cursing Muni; i'm just a veteran of T-cursing

[11:48:00.0000] <Hixie>
gsnedders: k

[11:55:00.0000] <Hixie>
gsnedders: sorry about the lack of transparency, fwiw

[11:56:00.0000] <Hixie>
gsnedders: as far as e-mail goes, what i do is have my own domain redirect all mail to gmail, and gmail redirect all mail back, so gmail is in the loop (and does spam filtering) but isn't in control (since i can always route around it)

[12:01:00.0000] <gsnedders>
Hixie: What I'd like to know, more than anything else, is what flipped the presumably automatic switch

[12:01:01.0000] <gsnedders>
Hixie: So I can make sure that isn't a side-effect of my setup

[12:20:00.0000] <Hixie>
gsnedders: yeah, the lack of transparency there sucks. i think the theory is that if we were transparent, abusers would be able to work out what the heuristics were and could game them

[12:21:00.0000] <Hixie>
gsnedders: but it still sucks

[12:42:00.0000] <gsnedders>
Hixie: Any intention to move CanvasPixelArray over to a Uint8ClampedArray?

[12:42:01.0000] <Hixie>
what's CanvasPixelArray? :-)

[12:43:00.0000] <Hixie>
(we moved over months ago)

[12:43:01.0000] <gsnedders>
Ah, I missed that. :)

[12:43:02.0000] <gsnedders>
/me has scarcely followed HTML5-land in a while…

[12:44:00.0000] <Ms2ger>
I even fixed the tests, as Philip` doesn't work on them

[12:45:00.0000] <Ms2ger>
(Hi Philip`! Got something planned for tomorrow?)

[12:45:01.0000] <gsnedders>
Ms2ger: The ones in the W3C HTML5 test repo?

[12:45:02.0000] <Ms2ger>
Yep

[12:47:00.0000] <roc>
annevk: thanks for the email to www-dom. Also, I have been to Dagstuhl a couple of times

[12:50:00.0000] <Hixie>
lol, csswg wants to keep fullscreen in its charter

[12:50:01.0000] <Hixie>
meanwhile, the spec is being written elsewhere

[12:52:00.0000] <annevk>
roc: oh really, is it worth it?

[12:53:00.0000] <roc>
it will depend mostly on who's going and what the topic is

[12:54:00.0000] <roc>
I really liked the location but mainly because of the history, and you already live in a place that has history so that may not matter to you

[12:55:00.0000] <annevk>
kk, guess I won't be going then; not that much into security

[12:55:01.0000] <roc>
zcorpan: other than mysteriously failing to mention Firefox 4, they also fail to mention that Google has promised to remove H.264 from Chrome

[12:56:00.0000] <jgraham>
roc: So far that promise hasn't been worth much

[12:56:01.0000] <roc>
annevk: btw I don't know if you noticed, but hsivonen was castigating you for changing the case of the identifiers in the fullscreen spec

[12:57:00.0000] <roc>
jgraham: don't get me started

[12:57:01.0000] <Ms2ger>
Alright, we won't

[12:58:00.0000] <roc>
gaaaah

[12:58:01.0000] <roc>
something happened to my machine during a Windows update and now Flash crashes incessantly ... in all browsers

[12:59:00.0000] <jgraham>
Haha

[12:59:01.0000] <jgraham>
I suggest deleting flash :)

[14:18:00.0000] <roc>
This is the best idea I've heard all day: "I'm confident that if authors had to write "-webkit-contact-www-hyphen-style-at-w3-dot-org-for-standardization-text-size-adjust" that there would be a strong incentive to get the first W3C draft submitted quickly."

[14:24:00.0000] <annevk>
roc: the casing changed ages ago with some amount of discussion; if everyone thinks it's better with a dash and all I guess we should go with that, but it seems rather silly to me

[14:24:01.0000] <annevk>
and anyway, implementations are prefixed today so it does not seem to matter much

[14:25:00.0000] <annevk>
long term it seems that dashes in words go away anyway; just some kind of transition period

[14:25:01.0000] <roc>
there's no dash in our implementation

[14:25:02.0000] <roc>
we're currently mozRequestFullScreen

[14:26:00.0000] <roc>
and mozCancelFullScreen

[14:27:00.0000] <roc>
Webkit is analogous

[14:27:01.0000] <roc>
Henri was complaining that changing the case of the S and changing cancel to exit were bikeshedding changes

[14:28:00.0000] <roc>
(that we should have prevented by shipping unprefixed)

[14:28:01.0000] <roc>
I'd like you guys to sort it out :-)

[14:32:00.0000] <annevk>
there's a dash in the pseudo-class, implies camelcase in the name

[14:32:01.0000] <annevk>
both equally bad imo

[14:32:02.0000] <annevk>
guess I can ask hsivonen tomorrow

[14:33:00.0000] <annevk>
I don't really feel that strongly, but it seems that if it's acceptable to have a simpler to type variant, we should go with that

[14:37:00.0000] <jgraham>
roc: Not sure why a long silly name is good. The only way it would help would be to discourage people from using stuff. But if that was the goal, simply not releasing it would be far more effective.

[14:38:00.0000] <annevk>
meh

[14:38:01.0000] <annevk>
inbox 404

[14:38:02.0000] <annevk>
i was at less than 330 or so

[14:39:00.0000] <annevk>
holidays are over it seems

[14:39:01.0000] <roc>
there are competing valid goals, so simply choosing some and dropping the others doesn't solve the problem

[14:39:02.0000] <jgraham>
You are aiming to reach 310?

[14:39:03.0000] <annevk>
maybe i should 410 it

[14:39:04.0000] <annevk>
inbox gone certainly has a nice ring to it

[14:39:05.0000] <jgraham>
Uh, yeah 410

[14:39:06.0000] <jgraham>
Dammit

[14:39:07.0000] <annevk>
anyway, sleepytimes

[14:39:08.0000] <annevk>
nn

[14:41:00.0000] <jgraham>
roc: It isn't clear to me why anyone would favour the paricular compromise where you go for maximum ridiculosity in the name.

[14:45:00.0000] <roc>
annevk: oh, you're talking about the CSS identifiers? CSS is totally addicted to hyphens in names, there's no getting away from that

[14:58:00.0000] <Hixie>
hsivonen: what's up with the itemprop="" error messages when validating the spec?

[14:58:01.0000] <Hixie>
hsivonen: i don't see what's wrong with the markup

[14:58:02.0000] <Hixie>
hsivonen: am i missing something?


2012-02-09
[16:03:00.0000] <smaug____>
dglazkov: I don't understand the need for nested <template> elements

[16:04:00.0000] <smaug____>
looks like trying to take some of the mvc proposal (or whatever it was called) into webcomponents

[17:44:00.0000] <sicking>
Hixie: ping

[17:44:01.0000] <Hixie>
pong

[17:45:00.0000] <sicking>
Hixie: the webidl for the global scope interfaces in workers look wrong

[17:45:01.0000] <sicking>
Hixie: specifically, SharedWorkerGlobalScope both inherits and 'implements' WorkerGlobalScope

[17:45:02.0000] <Hixie>
ignore the implements thing, that's an oversight

[17:45:03.0000] <Hixie>
will fix

[17:46:00.0000] <Hixie>
wait

[17:46:01.0000] <sicking>
Hixie: so both shared and dedicated scopes will inherit workerglobalscope?

[17:46:02.0000] <Hixie>
other way around

[17:46:03.0000] <sicking>
Hixie: nooooo

[17:46:04.0000] <sicking>
Hixie: why other way around?

[17:46:05.0000] <Hixie>
no, you're right, should be inheritance

[17:47:00.0000] <sicking>
Hixie: being able to check |x instanceof WorkerGlobalScope| seems useful

[17:47:01.0000] <Hixie>
looks like i screwed it up when fixing it

[17:47:02.0000] <sicking>
Hixie: cool

[17:47:03.0000] <Hixie>
WorkerGlobalScope is NoInterfaceObject

[17:47:04.0000] <Hixie>
currently

[17:47:05.0000] <sicking>
why?

[17:47:06.0000] <Hixie>
it was only ever meant to be an editorial convenience

[17:47:07.0000] <Hixie>
i don't feel strongly about it

[17:48:00.0000] <Hixie>
hm, i wonder what i meant to do when i did this

[17:48:01.0000] <Hixie>
clearly not what i wrote

[17:49:00.0000] <sicking>
Hixie: hehe

[17:50:00.0000] <sicking>
Hixie: i don't think there are any good use cases for messing with the interface object of global scopes. *Possibly* with exception of being able to do instanceof checks

[17:50:01.0000] <sicking>
Hixie: but it seems like having objects with prototypes which aren't interface objects would be inconsistent

[17:50:02.0000] <sicking>
Hixie: keeping things simple and consistent seems better

[17:51:00.0000] <Hixie>
well originally i just wanted the global scope to be WorkerGlobalScope and to have just one flat prototype

[17:51:01.0000] <Hixie>
(different in dedicated, worker, and window contexts)

[17:51:02.0000] <sicking>
Hixie: i remember

[17:52:00.0000] <sicking>
Hixie: i don't think creating "shallow" proto chains is that important

[17:52:01.0000] <sicking>
Hixie: all script engines avoid walking up proto chains heavily anyway. You need to otherwise the DOM is dog slow

[17:52:02.0000] <Hixie>
it was more of an aesthetical concern

[17:53:00.0000] <sicking>
Hixie: meh. I think making things consistent and predictible is more important. I don't think it matters a whole lot either way though

[17:57:00.0000] <Hixie>
anyway

[17:57:01.0000] <Hixie>
fixed

[18:05:00.0000] <Hixie>
sicking: look ok?

[18:05:01.0000] <sicking>
Hixie: looking

[18:05:02.0000] <sicking>
Hixie: woot! looks great, thanks!

[18:05:03.0000] <Hixie>
np

[18:06:00.0000] <Hixie>
really have no idea what i was thinking when i last changed it

[18:08:00.0000] <sicking>
heh

[18:09:00.0000] <michaelw>
hmm, according to the spec, the html5 parser error recovery for </span</div> appears to emit a </span<> tag and discard the "div", is that correct?

[18:09:01.0000] <Hixie>
sounds right

[18:10:00.0000] <michaelw>
what was likely meant is </span></div>, though...  why not correct that way?

[18:11:00.0000] <Hixie>
that's even what HTML4 required, it wasn't even a non-conforming syntax back then

[18:11:01.0000] <Hixie>
the short answer is "see the /topic"

[18:11:02.0000] <Hixie>
long answer is some complicated story about compatibility with something or other, i expect

[18:11:03.0000] <Hixie>
though i forget the details

[18:11:04.0000] <michaelw>
the "door" part? :)

[18:13:00.0000] <michaelw>
would it be futile if I would rework the spec to correct to </span></div>?

[18:13:01.0000] <Hixie>
yes and yes :-)

[18:14:00.0000] <michaelw>
bah :)

[18:15:00.0000] <michaelw>
Hixie: well, thanks anyway

[18:17:00.0000] <Hixie>
it's already shipped, changing it would be too much pain, too high risk, and too little reward

[18:19:00.0000] <llrcombs>
has anyone ever considered adding a CSS value to the <img> tag that makes text wrap around the alpha channel of the image, like it does in a word processor?

[18:36:00.0000] <roc>
yes

[18:44:00.0000] <llrcombs>
roc: is there a reason it doesn't exist, or has it just never been spec'd?

[18:45:00.0000] <MikeSmith>
llrcombs: I would think for the same reasons described here:

[18:45:01.0000] <MikeSmith>
http://lists.w3.org/Archives/Public/www-svg/2011Apr/0052.html

[18:47:00.0000] <roc>
I think it actually might happen as part of "CSS exclusions"

[18:47:01.0000] <roc>
Alex's concern is not a problem; the browser can get access to the alpha channel if it needs to

[18:47:02.0000] <roc>
various features require it

[18:48:00.0000] <llrcombs>
roc: link?

[18:48:01.0000] <roc>
http://google.com

[18:48:02.0000] <roc>
sorry, don't have it handy

[18:48:03.0000] <llrcombs>
alrighty, that was fast

[18:48:04.0000] <MikeSmith>
roc: it's good to hear that it's not a problem

[18:49:00.0000] <MikeSmith>
because I would be great to have something to address the hit-testing case as well

[18:50:00.0000] <roc>
right

[18:51:00.0000] <llrcombs>
roc: yeah, looks like it'd fit there pretty well. Still, I don't see anything on non-rectangular shapes for the exclusion box

[18:51:01.0000] <llrcombs>
so... to the mailing list?

[18:56:00.0000] <roc>
and beyond!

[18:59:00.0000] <llrcombs>
alrighty then

[22:58:00.0000] <zcorpan>
Wilto: did you send your use cases to the list?

[23:32:00.0000] <zcorpan>
http://simon.html5.org/specs/quirks-mode.src

[23:38:00.0000] <jgraham>
hsivonen: Isn't the backwards-compatible template parsing solution spelled <script type="template"> ?

[23:39:00.0000] <jgraham>
Although I guess it sucks to then have scripts in the template itself

[23:53:00.0000] <hsivonen>
jgraham: maybe it is

[00:31:00.0000] <zcorpan>
what's the right spec reference for the css width and height properties?

[00:32:00.0000] <zcorpan>
http://dev.w3.org/csswg/css3-box/#the-width-and-height-properties ?

[00:33:00.0000] <zcorpan>
/me considers a different approach

[00:53:00.0000] <hsivonen>
yet another commentator who seems to be attached to prefixes: http://qfox.nl/weblog/244

[00:53:01.0000] <hsivonen>
as if not undermining prefixes or not killing prefixes were goals

[00:57:00.0000] <annevk>
not sure anyone who is not doing browser QA knows enough about the shit they cause

[00:57:01.0000] <annevk>
pretty hard to write specs too without browser QA experience

[00:58:00.0000] <hsivonen>
commentators often seem to be confused about who does the actual speccing work at the W3C and who pays for their time

[00:59:00.0000] <jgraham>
We need more than just hsivonen's article pointing out that prefixes are aligned with many interests but not with that of the open web

[00:59:01.0000] <annevk>
time to start a blog?

[01:00:00.0000] <annevk>
or you could use blog.whatwg.org

[01:00:01.0000] <hsivonen>
jgraham: you could write an article. I'll link to it

[01:00:02.0000] <annevk>
there's also james.html5.org still

[01:00:03.0000] <zcorpan>
ok, got hashless hexcolors and unitless lengths covered now

[01:01:00.0000] <hsivonen>
also it seems common for readers of the minutes to not realize that Florian is from Opera

[01:01:01.0000] <annevk>
he's our CSS guy now

[01:01:02.0000] <zcorpan>
we need a blog post that translates the minutes to English

[01:01:03.0000] <annevk>
I'm sure people will get used to it

[01:02:00.0000] <annevk>
zcorpan: heh

[01:02:01.0000] <hsivonen>
zcorpan: indeed! I've been thinking there'd already be an English translation if Mark Pilgrim was still blogging

[01:06:00.0000] <hsivonen>
aaaaand glazou goes for the "educade Web authors" option: http://www.glazman.org/weblog/dotclear/index.php?post/2012/02/09/CALL-FOR-ACTION%3A-THE-OPEN-WEB-NEEDS-YOU-NOW

[01:07:00.0000] <jgraham>
I am honmestly surprised that glazou still thinks that evangalism can work to persuade people not do do things that are in their own best interests

[01:07:01.0000] <jgraham>
and using prefixed properties is very much in author's best interests

[01:08:00.0000] <jgraham>
Because it allows them to create new designs that people haven't managed before, and blog about them. This helps establish their professional credibility in a competitive market

[01:09:00.0000] <jgraham>
Even if they only use them in demos, the effects can becoem popular enough that people demand them on their production sites

[01:09:01.0000] <jgraham>
Which is very easy to justify if it only breaks lower-marketshare browsers

[01:09:02.0000] <jgraham>
/me is just saving up notes in case he ever writes that blog article

[01:10:00.0000] <jgraham>
(I realise I am preaching to the choir here)

[01:10:01.0000] <jgraham>
Anyway, my original point is that galzou has been around long enough to see evangalism fail

[01:10:02.0000] <jgraham>
Repeatedly

[01:11:00.0000] <jgraham>
So it's kind of sad that he thinks it will work in his pet case

[01:12:00.0000] <hsivonen>
well, at least I guessed correctly what the most important blog post ever was going to be

[01:14:00.0000] <hsivonen>
This could use a translation by Mark Pilgrim, too

[01:15:00.0000] <hsivonen>
the "also represents an official discussion of the CSS Working Group and was decided by consensus in the Group" part is probably the most sad one

[01:15:01.0000] <zcorpan>
what was it with "chair should be neutral" again?

[01:18:00.0000] <zcorpan>
"In many if not most cases, the -webkit-* properties WebKit-specific web sites are using do have -moz-*, -ms-*, -o-* equivalents."

[01:18:01.0000] <zcorpan>
I am high as a kite.

[01:18:02.0000] <wilhelm_>
Apart from the minor fact that is't not going to work, he does have a point.

[01:18:03.0000] <hsivonen>
using -moz-, -ms- and -o- also misses the point. that pattern means there can never be a new entrant to the market who doesn't implement someone else's prefixes

[01:18:04.0000] <zcorpan>
unless he means that the browsers have implemented their equivalent prefixed properties

[01:19:00.0000] <zcorpan>
which maybe he did

[01:21:00.0000] <zcorpan>
/me goes back to standardizing quirks

[01:22:00.0000] <jgraham>
zcorpan: Heresy!

[01:28:00.0000] <matjas>
how is <input type=email value=foo@mañana.com> invalid markup?

[01:29:00.0000] <matjas>
trying to understand what Hixie’s saying here https://www.w3.org/Bugs/Public/show_bug.cgi?id=15489#c12

[01:29:01.0000] <zcorpan>
matjas: see the requirements for the value attribute

[01:29:02.0000] <hsivonen>
matjas: validating email values is a long-standing unimplemented feature in V.nu, FWIW

[01:30:00.0000] <hsivonen>
email addresses are hard

[01:30:01.0000] <zcorpan>
http://www.whatwg.org/specs/web-apps/current-work/multipage/states-of-the-type-attribute.html#e-mail-state-(type=email)

[01:30:02.0000] <zcorpan>
"The value attribute, if specified and not empty, must have a value that is a single valid e-mail address."

[01:30:03.0000] <zcorpan>
foo@mañana.com does not match the production http://www.whatwg.org/specs/web-apps/current-work/multipage/states-of-the-type-attribute.html#valid-e-mail-address

[01:31:00.0000] <zcorpan>
hsivonen: just use the non-normative regex. :-)

[01:31:01.0000] <matjas>
thanks

[01:31:02.0000] <matjas>
hah, in a way, that’s what that bug is about — “why not allow IDN emails?”

[01:32:00.0000] <zcorpan>
there's a difference between allowing the user to type IDN emails and allowing the author to use IDN emails in markup

[01:33:00.0000] <zcorpan>
the former is already supported

[01:33:01.0000] <zcorpan>
the latter is not

[01:33:02.0000] <matjas>
yeah, but i don’t see what’s so bad about the latter

[01:34:00.0000] <zcorpan>
me either

[01:34:01.0000] <zcorpan>
but i haven't heard any use cases

[01:34:02.0000] <zcorpan>
not that i have been listening really :-)

[01:36:00.0000] <zcorpan>
it's similar to <input type=color value=blue>

[01:36:01.0000] <zcorpan>
which is also not allowed

[01:36:02.0000] <zcorpan>
sure, the browser could convert the value

[01:36:03.0000] <zcorpan>
but what's the use case?

[01:37:00.0000] <zcorpan>
allowing one syntax and not doing conversion makes the impl simpler, which means less bugs overall

[01:37:01.0000] <zcorpan>
and more time can be spent on adding more features that actually give new abilities

[01:37:02.0000] <matjas>
i don’t know, say you’ve imported an email database from a desktop app that allowed IDN addresses…

[01:38:00.0000] <zcorpan>
just convert it to ASCII before putting it in markup

[01:38:01.0000] <zcorpan>
what if you have a database of colors using a mix of hex and keywords and you want to use them in <input type=color value=...>?

[01:39:00.0000] <matjas>
that means web devs need to implement a punycode encoder, even though the browser already has that built-in

[01:39:01.0000] <zcorpan>
yeah

[01:39:02.0000] <zcorpan>
aren't there libraries available to do that already?

[01:40:00.0000] <matjas>
probably

[01:40:01.0000] <matjas>
(I know I’ve written one in JS)

[01:49:00.0000] <zcorpan>
wait. css font-size keywords and <font size> aren't different between quirks and standards anymore? or am i doing something wrong in my testing?

[02:08:00.0000] <hsivonen>
my sarcasm detector is broken: https://twitter.com/#!/slightlylate/status/167549285754339328

[02:35:00.0000] <roc>
boy

[02:37:00.0000] <zcorpan>
:hover and :active quirk specced

[02:42:00.0000] <roc>
at least glazou's pointing his guns in the right directions, even if he doesn't have any ammo. For a while I thought he was going to shoot the messengers

[02:44:00.0000] <MikeSmith>
zcorpan: specced where?

[02:44:01.0000] <Ms2ger>
http://simon.html5.org/specs/quirks-mode.src

[02:44:02.0000] <MikeSmith>
oh cool

[02:49:00.0000] <MikeSmith>
https://twitter.com/#!/balmer/status/167553463792832512 is good

[03:08:00.0000] <wilhelm_>
Heh. https://twitter.com/#!/TinaHolmboe/status/167562350910652416

[03:16:00.0000] <zcorpan>
In quirks mode, the font element changes the color of text decorations specified on ancestor elements

[03:16:01.0000] <zcorpan>
-> In this spec. Should maybe move the HTML's rendering section.

[03:16:02.0000] <zcorpan>
   In WebKit, <font> always overrides the ancestor's text-decoration color, even in standards mode.

[03:16:03.0000] <zcorpan>
   In Opera, <font> overrides the ancestor's text-decoration in quirks mode if it has a color attribute and the color is not overridden by CSS.

[03:16:04.0000] <zcorpan>
   In Gecko, <font> overrides the ancestor's text-decoration in quirks mode if it has a color attribute that is not the empty string or consists of only whitespace.

[03:16:05.0000] <zcorpan>
   Since there's lack of interop, let's drop the check of the color attribute.

[03:16:06.0000] <zcorpan>
   WebKit's behavior also seems tempting, but then this really should move to HTML.

[03:16:07.0000] <zcorpan>
   What does IE do?

[03:17:00.0000] <zcorpan>
http://software.hixie.ch/utilities/js/live-dom-viewer/saved/1332 can be used for experimenting in case somebody has IE and is curious enough

[03:19:00.0000] <wilhelm_>
zcorpan: foo is black, bar is red, baz is black. Underline is black.

[03:19:01.0000] <wilhelm_>
IE9.

[03:20:00.0000] <zcorpan>
wilhelm_: what about http://software.hixie.ch/utilities/js/live-dom-viewer/saved/1333 ?

[03:20:01.0000] <wilhelm_>
Identical rendering.

[03:21:00.0000] <zcorpan>
woah

[03:21:01.0000] <zcorpan>
so maybe this quirks isn't really needed

[03:21:02.0000] <zcorpan>
thanks!

[03:23:00.0000] <wilhelm_>
zcorpan: Just in case I'm colour blind, here's a screenshot: http://i.imgur.com/YXJjY.png

[03:23:01.0000] <zcorpan>
yep, the underline is black alright

[03:23:02.0000] <zcorpan>
are you color blind?

[03:24:00.0000] <wilhelm_>
Not to my knowledge. (c:

[03:24:01.0000] <zcorpan>
k :)

[03:25:00.0000] <zcorpan>
can you check http://software.hixie.ch/utilities/js/live-dom-viewer/saved/1334  also?

[03:26:00.0000] <zcorpan>
(does bar have underline?)

[03:27:00.0000] <wilhelm_>
No.

[03:27:01.0000] <zcorpan>
thanks

[03:27:02.0000] <wilhelm_>
No underline after the last “o” in “foo”.

[03:33:00.0000] <annevk>
hsivonen: I think Alex is serious

[03:33:01.0000] <annevk>
hsivonen: also wrong

[03:44:00.0000] <zcorpan>
wilhelm_: what about http://software.hixie.ch/utilities/js/live-dom-viewer/saved/1335 - does the table show a border around the first (empty) cell in ie?

[03:45:00.0000] <wilhelm_>
Yes.

[03:45:01.0000] <zcorpan>
excellent

[03:46:00.0000] <zcorpan>
several quirks can be dropped it seems

[03:46:01.0000] <wilhelm_>
Fun.

[03:50:00.0000] <annevk>
speccing quirks mode finally?

[03:50:01.0000] <annevk>
oh joy

[03:53:00.0000] <zcorpan>
yep

[03:53:01.0000] <zcorpan>
today is our first "do WTF you want" day

[03:53:02.0000] <zcorpan>
so that's what i'm doing

[03:54:00.0000] <wilhelm_>
Company-wide?

[03:56:00.0000] <annevk>
/me made eggs

[03:57:00.0000] <zcorpan>
don't know if it's company wide

[03:57:01.0000] <annevk>
just core afaik

[04:00:00.0000] <annevk>
http://intertwingly.net/blog/2012/02/09/Dominos is pretty straightforward

[04:19:00.0000] <asmodai>
The whole CSS thing reached tweakers.net as well

[04:21:00.0000] <wilhelm_>
Interesting comments.

[04:22:00.0000] <asmodai>
I like the amount of "W3C is slow as molasses" comments.

[04:23:00.0000] <zcorpan>
yeah, they're fucking slow

[04:23:01.0000] <zcorpan>
if only they could fuck faster

[04:23:02.0000] <asmodai>
zcorpan: lol

[04:34:00.0000] <zcorpan>
wilhelm_: http://software.hixie.ch/utilities/js/live-dom-viewer/saved/1337 does ie wrap the table?

[04:34:01.0000] <zcorpan>
w00t i got 1337

[04:36:00.0000] <zcorpan>
(or if somebody else has ie...)

[04:37:00.0000] <wilhelm_>
zcorpan: No. There is one line of text.

[04:37:01.0000] <zcorpan>
and what if you remove the doctype?

[04:38:00.0000] <wilhelm_>
No difference.

[04:38:01.0000] <zcorpan>
hah

[04:38:02.0000] <wilhelm_>
(You should get a Windows VM :P)

[04:39:00.0000] <zcorpan>
yeah. you know, come to think of it, i could just borrow my wife's computer. doesn't have ie9, but is probably good enough

[04:39:01.0000] <zcorpan>
thanks for the help!

[05:10:00.0000] <MikeSmith>
zcorpan: congrats on scoring 1337

[05:10:01.0000] <MikeSmith>
must be some kind of sign from god

[05:10:02.0000] <MikeSmith>
you have been chosen

[05:11:00.0000] <MikeSmith>
wilhelm_: hahaha

[05:11:01.0000] <MikeSmith>
The Day the Music Died

[05:12:00.0000] <wilhelm_>
Indeed.

[05:12:01.0000] <zcorpan>
so anyone know what happened to the font-size:small quirk? i can't reproduce it in any of my browsers, including IE

[05:13:00.0000] <MikeSmith>
wilhelm_: great touch the scare quotes too

[05:13:01.0000] <MikeSmith>
HTML "5"

[05:13:02.0000] <zcorpan>
http://www.cs.tut.fi/~jkorpela/quirks-mode.html "Font size keywords are interpreted incorrectly so that medium is larger than the browser’s basic font size and small equals that basic font size. Similarly, the entire scale of keywords, xx-small, x-small, small, large, x-large, xx-large is interpreted systematically wrong: each value is interpreted as one step larger than it should."

[05:14:00.0000] <zcorpan>
i totally remember this quirk

[05:17:00.0000] <zcorpan>
oh, this was ie9. i thought it was ie8

[05:18:00.0000] <zcorpan>
ie9 normal quirks mode doesn't have this quirk

[05:18:01.0000] <zcorpan>
but ie9 quirks mode in "compat view" has it

[05:18:02.0000] <zcorpan>
awesome

[05:18:03.0000] <wilhelm_>
MikeSmith: This really is all the politics of the past 15 years distilled down to a single discussion. All factions appear to be represented. Quite fascinating.

[05:19:00.0000] <MikeSmith>
The Sound and the Fury, man

[05:20:00.0000] <wilhelm_>
/me had to look that up. (c:

[05:35:00.0000] <Ms2ger>
"CSS Rates and Velocities Community Group"?

[06:21:00.0000] <zcorpan>
http://simon.html5.org/specs/quirks-mode - first draft

[06:23:00.0000] <annevk>
you should somehow define these only apply in quirks mode :)

[06:23:01.0000] <annevk>
and reference the HTML term for that

[06:25:00.0000] <zcorpan>
dude quirks mode is a DOM4 term

[06:25:01.0000] <annevk>
dude

[06:26:00.0000] <annevk>
where is my spec dude

[06:26:01.0000] <zcorpan>
sweet

[06:26:02.0000] <zcorpan>
what does mine say?

[06:30:00.0000] <volkmar>
someone knows in which spec the Screen interface is specified?

[06:31:00.0000] <Ms2ger>
HTML?

[06:31:01.0000] <Ms2ger>
Or CSSOM

[06:32:00.0000] <volkmar>
Ms2ger: CSSOM

[06:32:01.0000] <volkmar>
Ms2ger: thanks :)

[06:32:02.0000] <Ms2ger>
Np

[06:33:00.0000] <zcorpan>
annevk: fixed

[06:40:00.0000] <smaug____>
hmm, web needs some new tools to prevent memory leaks

[06:40:01.0000] <smaug____>
memory leaks in the pages

[06:42:00.0000] <smaug____>
/me has seen leaks in Google services way too often

[06:44:00.0000] <MacTed>
G+ leaks uncontrollably.  something about endlessly increasing pagelength, constantly prepending more content, no way to go to "next page" when scrolling through the stream...

[06:47:00.0000] <zewt>
last i saw, gmaps leaked continually in chrome, though that seemed like a webkit/chrome bug

[06:47:01.0000] <AryehGregor>
So I've started to get used to mq.

[06:48:00.0000] <smaug____>
yeah, that happens with Google Reader too, and I think in some cases with Gmail. Of course other web sites have similar problems. IRCcloud for example

[06:48:01.0000] <smaug____>
ah, I haven't look gmaps

[06:48:02.0000] <zewt>
found it fascinating that one of google's most high-profile products leaks in one of their others

[06:48:03.0000] <smaug____>
but anyway, it is way too easy to write leaky web pages

[06:48:04.0000] <AryehGregor>
It seems like it serves roughly the same purpose as git branches, except inferior in almost every conceivable fashion.

[06:48:05.0000] <zcorpan>
now, where should i email this? www-style?

[06:48:06.0000] <zewt>
webkit seems (seemed? been a while) to leak whenever lots of dynamic images were used

[06:48:07.0000] <smaug____>
I'm not talking about browser leaks

[06:48:08.0000] <AryehGregor>
Like how you have to manage them using an entirely separate set of commands, which inexplicably work in slightly different ways from the ones you use for actual commits.

[06:49:00.0000] <smaug____>
I'm talking about web site leaks

[06:49:01.0000] <Ms2ger>
zcorpan, depends, how much time do you have to waste on the resulting permathread? :)

[06:49:02.0000] <zewt>
that's no easier than in any language

[06:49:03.0000] <AryehGregor>
Like, qnew doesn't prompt you for a commit message by default.  Why not?  I don't know.

[06:49:04.0000] <zewt>
except perhaps for the lack of weakrefs (but most people who end up with code that leaks refs probably don't know what those are anyway)

[06:49:05.0000] <zcorpan>
Ms2ger: not much. :-)

[06:49:06.0000] <AryehGregor>
And you have to give every patch an arbitrary name.

[06:49:07.0000] <Ms2ger>
zcorpan, in that case I'd recommend whatwg :)

[06:49:08.0000] <smaug____>
zewt: well, there is weakmap

[06:49:09.0000] <smaug____>
(at least in some JS engs)

[06:50:00.0000] <Ms2ger>
/me removes quirks instead

[06:50:01.0000] <AryehGregor>
And everything refuses to do anything whatsoever if you have uncommitted changes.  git will pretty much always just try to merge your changes with whatever you're doing, which is normally the correct thing.

[06:51:00.0000] <zcorpan>
ok sent to whatwg

[06:51:01.0000] <AryehGregor>
I've had to resort to hg diff > /tmp/patch; hg revert --all; hg purge; hg qpop -a; hg qq -c somenewqueue; hg qimport /tmp/patch

[06:51:02.0000] <smaug____>
zewt: I don't know if there are any good tools to debug js leaks

[06:51:03.0000] <smaug____>
/me should write one for FF based on cycle collector logs

[06:51:04.0000] <AryehGregor>
As opposed to, in git: git branch -c somenewbranch master; git commit -a

[06:51:05.0000] <karlcow>
in Normandy, it has been a very long time we know that CSS (Camenbert Style Sheet) is leaking in web pages http://la-grange.net/2004/03/24-css-fluid-design

[06:53:00.0000] <AryehGregor>
"In WebKit, <font> always overrides the ancestor's text-decoration color, even in standards mode."

[06:54:00.0000] <AryehGregor>
zcorpan, FWIW, that's because WebKit's handling of text-decoration is completely not per CSS2.1.

[06:54:01.0000] <AryehGregor>
Only one text-decoration of a given type (underline, etc.) can apply to any given glyph, and it always takes the size and color of that glyph.

[06:54:02.0000] <zcorpan>
AryehGregor: i tried with <span style=color:red> and it didn't change the color

[06:54:03.0000] <AryehGregor>
Really?

[06:54:04.0000] <AryehGregor>
Maybe I'm just thinking of size.

[06:54:05.0000] <AryehGregor>
/me tests

[06:55:00.0000] <AryehGregor>
You're right.

[06:55:01.0000] <AryehGregor>
Weird.

[06:55:02.0000] <zcorpan>
ok i'm done for today. i'll read the logs

[06:55:03.0000] <AryehGregor>
I'm thinking of superscript/subscript.

[07:17:00.0000] <jgraham>
AryehGregor: I have roughly the same impression of mq fwiw

[07:28:00.0000] <Ms2ger>
Hrm

[07:28:01.0000] <Ms2ger>
<table border cellpadding=-10><tr><td>A<td>B</table>

[07:29:00.0000] <Ms2ger>
What should the padding on the cells be?

[07:29:01.0000] <AryehGregor>
How does the spec say to parse cellpadding?

[07:30:00.0000] <GlitchMr>
I would guess either 0 or cellpadding value being ignored...

[07:30:01.0000] <Ms2ger>
"The table element's cellpadding attribute maps to the pixel length properties 'padding-top', 'padding-right', 'padding-bottom', and 'padding-left' of any td and th elements that have corresponding cells in the table corresponding to the table element."

[07:30:02.0000] <Ms2ger>
"When the text below says that an attribute attribute on an element element maps to the pixel length property (or properties) properties, it means that if element has an attribute attribute set, and parsing that attribute's value using the rules for parsing non-negative integers doesn't generate an error, then the user agent is expected to use the parsed value as a pixel length for a presentational hint for properties."

[07:31:00.0000] <Alesk\o_>
hello

[07:33:00.0000] <GlitchMr>
Negative paddings don't exist in CSS (negative margins exist in CSS nevertheless), so it would be syntax error. Attribute would be ignored (visual part of it, it will be still in DOM), I guess.

[07:33:01.0000] <GlitchMr>
But that's just my guess

[07:34:00.0000] <Ms2ger>
I just want someone to tell me that Chrome and Opera are wrong

[07:34:01.0000] <GlitchMr>
In what?

[07:35:00.0000] <Ms2ger>
In having 0 padding

[07:36:00.0000] <GlitchMr>
It has 0 padding even without this invalid attribute

[07:36:01.0000] <Ms2ger>
No it doesn't, it has 1 pixel

[07:36:02.0000] <GlitchMr>
I don't see difference... weird...

[07:37:00.0000] <GlitchMr>
It has 1 pixel padding.

[07:37:01.0000] <GlitchMr>
Either with invalid attribute or without attribute at all.

[07:37:02.0000] <GlitchMr>
According to Opera debugging tools...

[07:39:00.0000] <GlitchMr>
Oh wait, I had cellpading lol

[07:39:01.0000] <GlitchMr>
Yeah, you're right...

[07:40:00.0000] <Ms2ger>
Good

[07:40:01.0000] <Ms2ger>
/me wanders off

[07:40:02.0000] <GlitchMr>
I wouldn't say it's issue. You're using obviously bad HTML code.

[07:40:03.0000] <GlitchMr>
I will even skip that cellpadding is deprecated in HTML5...

[07:43:00.0000] <Alesk\o_>
hello, what about a reset property ? in CSS

[08:17:00.0000] <Alesk\o_>
no ? :)

[08:28:00.0000] <AryehGregor>
Is there some way with mq to reorder patches in a queue?  I don't see it in hg help mq . . .

[08:30:00.0000] <Philip`>
AryehGregor: Pop them all, then edit .hg/patches/series

[08:30:01.0000] <AryehGregor>
. . .

[08:31:00.0000] <AryehGregor>
That is patently ludicrous.

[08:31:01.0000] <Philip`>
http://mercurial.selenic.com/wiki/MqExtension#Using_Mercurial_Queues

[08:47:00.0000] <AryehGregor>
(although, thanks for the tip)

[08:47:01.0000] <AryehGregor>
(I just hate Mercurial)

[08:47:02.0000] <AryehGregor>
(as regulars of this channel might have noticed)

[08:55:00.0000] <MikeSmith>
AryehGregor: not ht push --move foo ?

[08:55:01.0000] <AryehGregor>
MikeSmith, what?

[08:55:02.0000] <MikeSmith>
*hg qpush --move foo

[08:56:00.0000] <Philip`>
/me likes it when all the metadata is in nice simple text files that he can edit with a standard text editor, instead of having to memorise sequences of command line arguments

[09:01:00.0000] <AryehGregor>
MikeSmith, ah, that might do it.  Thanks.

[09:02:00.0000] <AryehGregor>
Philip`, I'm fine with the text files, just not text-file editing as the recommended way to do things.  It's harder to ensure integrity -- mistype and you could corrupt the file.

[09:05:00.0000] <Philip`>
Then you'll just get an error when qpushing and you can go and fix it, hopefully

[09:06:00.0000] <Philip`>
(I suppose the "hopefully" part is worrying)

[09:18:00.0000] <bga>
continue 'all in one' idea of opera http://leechcraft.org/

[10:05:00.0000] <erlehmann>
oh hai

[10:08:00.0000] <erlehmann>
dat prefix

[10:08:01.0000] <erlehmann>
._.

[10:09:00.0000] <erlehmann>
is there anything that can be said against http://leaverou.github.com/prefixfree/ ?

[10:09:01.0000] <Wilto>
I have Opinions, but I don’t think you’re looking for the thoughts of some scrub non-WHATWG developer.

[10:10:00.0000] <erlehmann>
show and tell

[10:12:00.0000] <Wilto>
I think it is clever. I think it is well-coded. I will never, ever use it because it is terrifying to me.

[10:13:00.0000] <Wilto>
It is a massive solution to a almost non-existent problem: a minor increase in the verbosity of one’s CSS.

[10:13:01.0000] <Wilto>
It’s a new point of failure, it’s a mashing-together of concerns; I dunno. I get the idea—and like I said, it’s cleverly done. I never fault anyone for making cool things. But I wouldn’t use it.

[10:15:00.0000] <erlehmann>
Wilto, intredasting.

[10:15:01.0000] <Wilto>
She’s good people, too. I feel bad bad-mouthing it.

[10:15:02.0000] <Wilto>
Anyway.

[10:15:03.0000] <zewt>
quotostrophes

[10:16:00.0000] <erlehmann>
wat

[10:16:01.0000] <Wilto>
Sorry, sorry. Force of habit.

[10:16:02.0000] <AryehGregor>
So looks like elementFromPoint() only works on stuff in the viewport.  Rats.

[10:16:03.0000] <erlehmann>
Is it “she's”, “she`s”, “sh

[10:17:00.0000] <erlehmann>
e‘s” or „she’s“ ?

[10:17:01.0000] <erlehmann>
AryehGregor, what you use it for?

[10:17:02.0000] <AryehGregor>
erlehmann, testing the bounds of transformed elements programmatically.

[10:17:03.0000] <AryehGregor>
Looks like I have to keep them in the viewport somehow.

[10:18:00.0000] <erlehmann>
scrollTo

[10:18:01.0000] <erlehmann>
AryehGregor, is that a solution?

[10:19:00.0000] <AryehGregor>
/me will try

[10:19:01.0000] <AryehGregor>
Seems like Opera's elementFromPoint() is a stub that just always returns undefined.

[10:19:02.0000] <AryehGregor>
Guess it will fail all these tests.

[10:19:03.0000] <AryehGregor>
Oh well.

[10:20:00.0000] <erlehmann>
scrollTop

[10:20:01.0000] <erlehmann>
set element.scrollTop

[10:20:02.0000] <dglazkov>
good morning, Whatwg!

[10:21:00.0000] <erlehmann>
AryehGregor, this is how i scroll http://warumnicht.so/wn-8.html

[10:21:01.0000] <dglazkov>
hsivonen: how does DWIM deabbreviate?

[10:21:02.0000] <AryehGregor>
dglazkov, "do what I mean"

[10:21:03.0000] <dglazkov>
sure! I'll do it. What do you mean? :)

[10:22:00.0000] <dglazkov>
AryehGregor: and thanks -- I suspected as much, just wanted to check.

[10:24:00.0000] <gsnedders>
AryehGregor: elementFromPoint should return stuff at times.

[10:24:01.0000] <AryehGregor>
gsnedders, good to know.

[10:25:00.0000] <AryehGregor>
Seems to not work in my test-cases, though.

[10:25:01.0000] <gsnedders>
AryehGregor: http://tc.labs.opera.com/apis/cssom/023.htm is a case of us returning too much!

[10:52:00.0000] <BenoitRen>
Hi there. I'm a bit confused about the q element and have a question about the i element.

[10:52:01.0000] <BenoitRen>
See, I've always used the q element for lines spoke by characters in fan fiction.

[10:52:02.0000] <BenoitRen>
Additionally, I've also used the q element for characters's thoughts, with a "thoughts" class to have them in italics.

[10:53:00.0000] <BenoitRen>
I just did some reading and I may have been using the q element wrong, at least for thoughts. It seems the i element should be used for those.

[10:54:00.0000] <BenoitRen>
As for using the q element for character lines, I'm not sure about that.

[10:54:01.0000] <BenoitRen>
Please advice.

[11:05:00.0000] <Philip`>
BenoitRen: What's wrong with just using double-quotes to denote speech?

[11:05:01.0000] <BenoitRen>
Philip`: Nothing; I just thought using the q element added semantic value.

[11:06:00.0000] <erlehmann>
BenoitRen, which value? if you are not quoting something?

[11:06:01.0000] <erlehmann>
if you are quoting something, i understand q.

[11:06:02.0000] <BenoitRen>
erlehmann: I thought I was quoting the speaker.

[11:07:00.0000] <erlehmann>
BenoitRen, does the speaker have a URI?

[11:07:01.0000] <BenoitRen>
erlehmann: No...

[11:07:02.0000] <erlehmann>
BenoitRen, what are you denoting then?

[11:07:03.0000] <BenoitRen>
erlehmann: A quote, I thought.

[11:08:00.0000] <AryehGregor>
Okay, so if you have a patch in your queue and it was applied upstream and you qpop -a, pull -u, qpush -a . . . every patch that was applied upstream fails with merge conflicts and you have to manually delete it?

[11:08:01.0000] <AryehGregor>
Really?

[11:08:02.0000] <erlehmann>
BenoitRen, try to phrase it subject-verb-object.

[11:09:00.0000] <AryehGregor>
As opposed to git rebase, which silently drops any patches that were accepted upstream?

[11:09:01.0000] <AryehGregor>
Is there some smart way to avoid this, or do I just have to manually delete those patches?

[11:09:02.0000] <erlehmann>
like, someone said „x“

[11:10:00.0000] <Philip`>
BenoitRen: I think "semantic value" by itself isn't usually worthwhile - markup is only useful when it's interpreted by something, and then you can use the way it's interpreted as a guide to how you should use the markup

[11:11:00.0000] <AryehGregor>
Okay, so maybe I want to do hg qfinish -a?

[11:11:01.0000] <Philip`>
BenoitRen: and I'm not aware of <q> being interpreted usefully by anything (though that may just be my ignorance)

[11:11:02.0000] <AryehGregor>
That looks like it does what I want.

[11:11:03.0000] <AryehGregor>
Oh, no, it doesn't.

[11:11:04.0000] <erlehmann>
Philip (i cannot find out which quote character is that)

[11:11:05.0000] <AryehGregor>
Grrr.

[11:11:06.0000] <erlehmann>
Philip, q @cite can be interpreted usefully.

[11:12:00.0000] <erlehmann>
also styling hooks

[11:12:01.0000] <erlehmann>
q[lang=en]

[11:12:02.0000] <erlehmann>
„quotes“ can be ”different”

[11:14:00.0000] <Philip`>
Seems easier to just write the quote characters that you want, using whatever system you already have in place for i18n to handle all the language-specific things that can't be hooked onto <q>

[11:14:01.0000] <erlehmann>
i always use q and blockquote with cite, in case i have to untangle something.

[11:15:00.0000] <erlehmann>
Philip, “whatever system you already have in place” certainly isn't easier ;)

[11:15:01.0000] <erlehmann>
but writing quote characters for speech, that i support.

[11:28:00.0000] <BenoitRen>
So, uh, I've been using the quote characters wrong, then? :S

[11:28:01.0000] <BenoitRen>
The q element, I mean.

[11:28:02.0000] <BenoitRen>
s/quote characters/q element

[11:30:00.0000] <Philip`>
BenoitRen: I think the problem is that "wrong" is hard to define, when there is basically no noticeable effect from using the elements at all, so you can't tell whether it's having an appropriate or inappropriate effect

[11:31:00.0000] <BenoitRen>
Philip`: I define 'wrong' as 'is not what the spec says it should be used for'.

[11:31:01.0000] <Philip`>
Specs can be wrong :-)

[11:32:00.0000] <BenoitRen>
Then the spec has to be fixed! But in the meantime, it is what I'm using...

[11:33:00.0000] <Philip`>
Per my reading of HTML5, using <q> for speech inside a piece of text is wrong, since you're not quoting from an external piece of text

[11:34:00.0000] <BenoitRen>
Okay.

[11:34:01.0000] <Philip`>
though I wouldn't be entirely certain about that

[11:34:02.0000] <BenoitRen>
*a smash into a wall could be heard*

[11:35:00.0000] <Philip`>
but then I'm never certain about the semantics of any of HTML, because they always seem to be phrased strangely and/or vaguely :-)

[11:37:00.0000] <Philip`>
If you want an 'official' answer, I guess the best way is to file a bug asking for the spec to clarify your particular case, and see what Hixie thinks the semantics should be

[11:40:00.0000] <BenoitRen>
B-b-but I already asked for a clarification a couple months ago on a different issue in an existing bug and didn't get a reply. :'(

[11:41:00.0000] <Philip`>
Some people wait years for a response from the editor :-)

[11:42:00.0000] <Philip`>
/me thinks 5 years is about the longest he's seen

[11:42:01.0000] <erlehmann>
the spec should have a section “leters from the editor”

[11:43:00.0000] <Philip`>
I suppose it'd be quicker if someone else on IRC understands the issue properly and can help

[11:44:00.0000] <Philip`>
/me doesn't know much, and just has a general distrust of vague subjective semantics that don't provide any real value to anyone :-p

[11:44:01.0000] <Hixie>
matjas: you'll need to have a punycode encoder anyway, before you can send your e-mails

[11:46:00.0000] <matjas>
Hixie: not if your back-end scripting language or mail client handles that for you automatically

[11:46:01.0000] <Hixie>
well if it handles it for you automatically, you already have a punycode encoder

[11:46:02.0000] <Hixie>
so just use that

[11:47:00.0000] <Hixie>
bbiab, gotta go to the office

[11:47:01.0000] <matjas>
what if it doesn’t expose the API?

[11:47:02.0000] <erlehmann>
be back in a binute?

[11:48:00.0000] <matjas>
erlehmann: boat*

[11:54:00.0000] <BenoitRen>
So can I use the i element for an onomatopoeia?

[11:55:00.0000] <erlehmann>
stop doing that

[11:56:00.0000] <BenoitRen>
I haven't done it yet, but I'm asking if it's appropriate.

[11:56:01.0000] <BenoitRen>
If not, what element would be appropriate?

[12:09:00.0000] <erlehmann>
BenoitRen, what exactly are you trying to convey here?

[12:10:00.0000] <BenoitRen>
erlehmann: An onomatopoeia? Hold on, I'll paste the relevant line.

[12:10:01.0000] <BenoitRen>
"Hearing the loud /ka-KLANG/ of an iron door slamming shut is a scary experience."

[12:11:00.0000] <erlehmann>
well, make it strong?

[12:11:01.0000] <erlehmann>
or wait

[12:11:02.0000] <erlehmann>
is it a different, set-off tone?

[12:11:03.0000] <Wilto>
I mean, that _is_ an "alternate voice," I suppose.

[12:15:00.0000] <BenoitRen>
I don't have much more to go on other than that line and the fact that the ka-KLANG must be in italics.

[12:15:01.0000] <BenoitRen>
Because it's an onomatopoeia.

[12:15:02.0000] <BenoitRen>
It sounds like a different tone to me, though.

[12:16:00.0000] <BenoitRen>
Full disclosure: people send me stories, I zap the typos, then mark them up.

[12:23:00.0000] <erlehmann>
BenoitRen, how much does that pay?

[12:25:00.0000] <Philip`>
BenoitRen: If it would usually be rendered in italics in a visual medium, and there isn't an obviously more appropriate semantic element, then that sounds like a good use for <i>

[12:50:00.0000] <BenoitRen>
erlehmann: Pay? I'm doing this for free. It's for a fansite.

[12:53:00.0000] <Wilto>
I bet it's a WHATWG fansite. I could've sworn I heard a "ka-KLANG" in here earlier.

[13:03:00.0000] <BenoitRen>
/me wonders what ka-KLANG has to do with WHATWG.

[13:04:00.0000] <bga>
http://mozilla-antarctica.org/

[13:09:00.0000] <BenoitRen>
I'm always disappointed to find out that Mozilla-related sites make no effort at being standards compliant.

[13:11:00.0000] <roc>
what's wrong with it?

[13:12:00.0000] <roc>
erlehmann: the only thing against prefix-free and other similar tools is that if everyone used them, we might as well not have vendor prefixes at all

[13:13:00.0000] <BenoitRen>
Divitis, fake XHTML, some invalid CSS, doesn't resize to viewport...

[13:13:01.0000] <erlehmann>
roc, but vendor prefixes work differently and have different notations.

[13:15:00.0000] <roc>
the point of vendor prefixes is (was?) to let people experiment without creating compatibility issues around the unprefixed name

[13:15:01.0000] <BenoitRen>
Oh, I see the root of the problem already; the site uses WordPress.

[13:15:02.0000] <bga>
as result you will need jq for css. was attachEvent or addEventListener, become css prefixes w/ defferent notations

[13:15:03.0000] <roc>
everything that encourages Web developers to start using the unprefixed name immediately, reduces that benefit.

[13:16:00.0000] <roc>
if all Web developers use the unprefixed name immediately, there is no benefit.

[13:16:01.0000] <BenoitRen>
When I look at my Error Console I wonder who had the bright idea of reporting every use of vendor-prefixed CSS as a warning.

[13:16:02.0000] <erlehmann>
roc, i see.

[13:17:00.0000] <roc>
Henri explained all this quite some time ago :-)

[13:17:01.0000] <BenoitRen>
It even reports CSS that's valid but that it doesn't support yet.

[13:18:00.0000] <erlehmann>
Benoit, that is a good idea.

[13:19:00.0000] <roc>
it's hard to tell whether CSS we don't support yet is valid or not :-)

[13:19:01.0000] <roc>
yes, it would seem to make sense to suppress warnings for other vendor's prefixed properties

[13:19:02.0000] <roc>
dunno why we don't do that

[13:28:00.0000] <jgraham>
BenoitRen: "divitis" and "doesn't resize to the viewport" are hardly standards compliance isues

[13:28:01.0000] <BenoitRen>
jgraham: You're wrong.

[13:28:02.0000] <jgraham>
Convince me

[13:29:00.0000] <jgraham>
(also it doesn't seem to be fake XHTML, just to have a lot of vendor-specific, non-compliant facebook crap. Which makes it roughly like every other site on the internet)

[13:32:00.0000] <jgraham>
(to be fair it is not just facebook, there are several species of pseudo-namespaces living there)

[13:32:01.0000] <BenoitRen>
jgraham: It is fake XHTML. It's not sent as application/xhtml+xml, it has xmlns and rogue slashes, plus CDATA nonsense in JavaScript so an XML parser wouldn't barf on it.

[13:33:00.0000] <jgraham>
The rouge slashes are silly but allowed per spec

[13:33:01.0000] <BenoitRen>
jgraham: As for standards compliance, accessibility and using HTML semantically are part of standards compliance as defined by the W3C.

[13:33:02.0000] <jgraham>
The xmlns isn't for XHTML

[13:33:03.0000] <gsnedders>
@xmlns is allowed on the root element too, per spec.

[13:34:00.0000] <jgraham>
gsnedders: Not like this

[13:34:01.0000] <gsnedders>
But this isn't @xmlns

[13:34:02.0000] <gsnedders>
This is @xmlns:fb

[13:34:03.0000] <BenoitRen>
xmlns is an XML construct that's often used in XHTML, because XHTML is HTML in XML form.

[13:35:00.0000] <jgraham>
BenoitRen: you haven't explained why it is inaccesible. I see it using lots of divs for layout but lots of elements with more specific semantics in mostly OK ways

[13:35:01.0000] <BenoitRen>
Hence anyone who tries to use it in a web page is implicitly trying to write XHTML.

[13:35:02.0000] <gsnedders>
BenoitRen: Or trying to write RDFa.

[13:36:00.0000] <jgraham>
BenoitRen: In this case they are trying to do whatever they have to do to get the addthis script to work

[13:36:01.0000] <jgraham>
Which appears to involve some gunk involving the string "xmlns" but otherwise be entirely unconnected to XHTML

[13:36:02.0000] <jgraham>
It doesn't even look much like RDFa

[13:37:00.0000] <BenoitRen>
jgraham: <div>Written by: <a href="http://mozilla-antarctica.org/author/JanB/" title="Posts by Jan" rel="author">Jan</a></div>

[13:38:00.0000] <gsnedders>
fb:like:layout is invalid in both XHTML and RDFa and just bizzare.

[13:38:01.0000] <gsnedders>
BenoitRen: How does that div cause any problem for AT?

[13:38:02.0000] <BenoitRen>
gsnedders: That's an example of divitis. The div element is abused there.

[13:39:00.0000] <jgraham>
Yeah it's not ideal but I doubt it would make a practical difference in any UA to spell <div> <p> in that case

[13:40:00.0000] <BenoitRen>
<div><p>? Replacing div by p would be enough.

[13:40:01.0000] <BenoitRen>
It's a piece of text.

[13:40:02.0000] <BenoitRen>
div is meant to make sections of block-level elements.

[13:40:03.0000] <BenoitRen>
Text is not a block-level element.

[13:42:00.0000] <jgraham>
That is almost, but not quite entirely, unlike what the spec says

[13:43:00.0000] <jgraham>
"The div element has no special meaning at all. It represents its children. It can be used with the class, lang, and title attributes to mark up semantics common to a group of consecutive elements."

[13:43:01.0000] <hober>
s/ entirely,/, entirely/

[13:43:02.0000] <gsnedders>
hober: The two statements are both grammatically possible, though semantically different.

[13:43:03.0000] <gsnedders>
hober: I expect jgraham meant what he wrote.

[13:44:00.0000] <jgraham>
hober's sentence is closer to H2G2 though

[13:44:01.0000] <jgraham>
Which is really what I meant

[13:45:00.0000] <jgraham>
(at least if wikipedia managed to copy it correctly)

[13:45:01.0000] <gsnedders>
/me remembers jgraham saying that he would lend him And Another Thing… a while ago.

[13:46:00.0000] <gsnedders>
But seeming I live in another country now that seems mostly irrelevant.

[13:54:00.0000] <bga>
http://common-lisp.net/project/closure/

[14:13:00.0000] <BenoitRen>
Does narration count as a different voice or tone for which the i element would be used?

[14:13:01.0000] <BenoitRen>
I imagine it's similar to stage directions, which are used with it.

[14:24:00.0000] <erlehmann>
BenoitRen, then upgrade your browser.

[14:24:01.0000] <BenoitRen>
erlehmann: ?

[14:24:02.0000] <erlehmann>
22:18 <BenoitRen> When I look at my Error Console I wonder22:18 <BenoitRen> When I look at my Error Console I wonder who had the bright idea of reporting every use of vendor-prefixed CSS as a warning.

[14:24:03.0000] <erlehmann>
sorry, pastefail

[14:25:00.0000] <BenoitRen>
erlehmann: Does the latest version no longer do that, or something?

[14:25:01.0000] <erlehmann>
BenoitRen, does the latest version support more CSS?

[14:26:00.0000] <BenoitRen>
erlehmann: A little bit, I guess. I'm really most annoyed at the warnings about vendor-specific CSS, though.

[14:26:01.0000] <BenoitRen>
erlehmann: I don't think it supports box-shadow and other CSS3 friends, though.

[14:27:00.0000] <erlehmann>
BenoitRen, vendor-specific CSS is not good. stop using it.

[14:27:01.0000] <BenoitRen>
erlehmann: There's no other option if you want rounded corners in all web browsers.

[14:28:00.0000] <erlehmann>
BenoitRen, then you *don't* want that. let it degrade gracefully instead.

[14:28:01.0000] <BenoitRen>
erlehmann: I think you'll have a hard time selling that to your employers...

[14:29:00.0000] <zewt>
non-real-world viewpoints detected

[14:29:01.0000] <BenoitRen>
erlehmann: I don't see the problem as long as you include the standards compliant version so things will still look the same when the browsers do support CSS3 better.

[14:29:02.0000] <erlehmann>
BenoitRen, I am not an expert on the topic of “selling” but there are things a dev should not do.

[14:30:00.0000] <zewt>
and using vendor css is not one of them

[14:30:01.0000] <erlehmann>
BenoitRen, that is one acceptable thing.

[14:30:02.0000] <jarek>
Hello

[14:30:03.0000] <Philip`>
Yeah, you certainly shouldn't try to solve your customer's/employer's real problems, and you should focus on hypothetical future concerns instead

[14:30:04.0000] <roc>
this entire mini-thread is an excellent case study of why Henri is right and vendor prefixes can't work

[14:30:05.0000] <erlehmann>
roc, what does Henri say?

[14:31:00.0000] <jarek>
why do we have to use document.createElementNS() in order to create SVG element in HTML5?

[14:31:01.0000] <jarek>
it doesn't make sense, HTML has no namespaces

[14:31:02.0000] <erlehmann>
jarek, broblem?

[14:31:03.0000] <BenoitRen>
jarek: I'd imagine because SVG is XML-based.

[14:31:04.0000] <Hixie>
jarek: DOM has namespaces

[14:31:05.0000] <jarek>
BenoitRen: but document.createElementNS() belongs to HTML document :/

[14:31:06.0000] <roc>
http://hsivonen.iki.fi/vendor-prefixes/

[14:31:07.0000] <Hixie>
jarek: technically HTML has namespaces too, it's text/html that doesn't have them

[14:32:00.0000] <jarek>
if it's not required to specify namespace in markup, why should it be necessary when creating elements via JavaScript?

[14:32:01.0000] <heycam|away>
I would love it if createElement("svg") would work -- but I have a feeling we can't do that

[14:33:00.0000] <BenoitRen>
Hixie: Could you please enlighten me for a second by telling me if it's appropriate to use the q element for character lines spoken in a fan fiction story?

[14:33:01.0000] <BenoitRen>
Hixie: The spec is ambiguous.

[14:33:02.0000] <BenoitRen>
jarek: Because JavaScript interacts with the DOM, I think.

[14:33:03.0000] <Hixie>
jarek: so we know which namespace to put it in (in text/html, you specify the namespace too, by using certain elements before the others)

[14:34:00.0000] <Hixie>
BenoitRen: i would just use quote marks

[14:35:00.0000] <Hixie>
BenoitRen: <q> is supposed to be for specifically quoting another source

[14:35:01.0000] <jarek>
Hixie: but SVG element names don't clash with HTML or MathML element names, this seems to unnecessary

[14:35:02.0000] <Hixie>
jarek: sure they do

[14:35:03.0000] <jarek>
s/to/to be

[14:35:04.0000] <Hixie>
jarek: <a>, for example

[14:35:05.0000] <BenoitRen>
Hixie: Okay. Should I file a bug then about the spec? Because I don't think the spec makes this clear enough, specificially in the examples.

[14:35:06.0000] <jarek>
ahh... right...

[14:35:07.0000] <BenoitRen>
*specifically

[14:36:00.0000] <Hixie>
BenoitRen: if you think it's important, sure

[14:36:01.0000] <BenoitRen>
Hixie: I think an unambiguous spec is important. :) Thanks!

[14:38:00.0000] <jgraham>
"""Meanwhile, to the people who think the solution is for Mozilla and others to just "work harder" at evangelism, or implementation, or standards work --- I cast aspersions in your direction. You have no idea how hard we work.""" - roc, you are awesome

[14:39:00.0000] <jgraham>
(for saying that rather than for how hard you work)

[14:39:01.0000] <jgraham>
(although I don't dobt you work hard :)

[14:39:02.0000] <erlehmann>
I would like to see the strategic papers of the WebKit dev people.

[14:39:03.0000] <roc>
there aren't any

[14:39:04.0000] <roc>
there's no conspiracy

[14:40:00.0000] <roc>
they're even good people

[14:40:01.0000] <erlehmann>
roc, then it's worse than I thought :(

[14:40:02.0000] <jamesr_>
WebKit isn't even one thing in this discussion

[14:40:03.0000] <roc>
it's just market forces at work

[14:40:04.0000] <jamesr_>
we (chrome) have to reverse-engineer the implementaiton of -webkit- prefixed things to ship

[14:40:05.0000] <jamesr_>
the main difference for us is we don't have the same moral issues with shipping a -webkit- prefixed implementation of something that, say, a firefox or IE would

[14:41:00.0000] <jamesr_>
maybe that's wrong

[14:41:01.0000] <erlehmann>
jamesr_, aren't you using webkit? why reverse-engineer then?

[14:41:02.0000] <jamesr_>
but when you see webkit vendor prefixes sometimes it means that all webkit-based browsers share an implementation, and sometimes they're totally differen

[14:41:03.0000] <jamesr_>
erlehmann, the implementation isn't always in WebKit proper

[14:41:04.0000] <erlehmann>
lesson learned: if you ship stuff in a broken state, support it forever.

[14:41:05.0000] <jamesr_>
for example 3d transforms - the parsing and some of the logic is in webkit, but all of the rendering stuff we've had to reverse-engineer and reimplement something that kind of sort of matches CoreAnimation

[14:41:06.0000] <jamesr_>
just like everyone else

[14:41:07.0000] <jgraham>
s/in a broken state/

[14:42:00.0000] <jgraham>
The rule is "if you ship stuf everyone has to deal with the legacy you create"

[14:43:00.0000] <roc>
it's certainly true that Webkit browser companies could have done, and still could do, a lot more to support the open Web

[14:43:01.0000] <roc>
but it's not surprising that they haven't, or even wrong really

[14:44:00.0000] <erlehmann>
roc, wrong in a moral sense?

[14:44:01.0000] <jgraham>
It's not really in their best interests. And it is very easy to ignore stuff that isn't in your best interests when you are being praised for it.

[14:45:00.0000] <erlehmann>
hehe

[14:45:01.0000] <erlehmann>
then it may be good that people are creating awareness

[14:45:02.0000] <jgraham>
Creating awareness of what?

[14:46:00.0000] <jgraham>
So far the message that I have got is that Mozilla + Opera + Microsoft are evil for wanting content to work in their browsers

[14:46:01.0000] <jgraham>
That's not a message I care to endorse

[14:47:00.0000] <jamesr_>
discussions centered around who is and isn't being evil are safe to ignore

[14:47:01.0000] <jamesr_>
nothing productive comes out of them

[14:49:00.0000] <jgraham>
If only the chair of the CSS WG shared that opinion

[14:49:01.0000] <roc>
erlehmann: what, if anything, "morally" means for a company is a really hard question. Certainly I find it hard to single out Apple and Google as morally wrong for doing whatever's legal to maximize their profits, which is our current legal environment says they are obliged to do

[14:49:02.0000] <jamesr_>
jgraham, in this instance i think the chair can be ignored

[14:50:00.0000] <roc>
if only

[14:50:01.0000] <roc>
our press people are being bombarded

[14:50:02.0000] <erlehmann>
roc, in german we call this „rechtspositivismus“ and do not hold this position in high regard

[14:50:03.0000] <erlehmann>
(at least that's what i got from my history lessons)

[14:51:00.0000] <erlehmann>
roc, advocating that what a company is doing is legal does not solve any moral problem.

[14:51:01.0000] <erlehmann>
next up: don't hate webkit because it's so successful ;)

[14:57:00.0000] <roc>
Oh, I don't think everything legal is moral. I'm a Christian, I think tons of legal things are immoral. But the change that's needed is much more than just telling companies they should behave morally. They need to be reprogrammed with different goals.

[15:00:00.0000] <roc>
I disagree with jamesr_ on one thing though, which is that something productive can come of talking about who's evil. Namely, a lot of people don't like working for evil companies, and we can use that to put them at a hiring disadvantage.

[15:02:00.0000] <erlehmann>
a *lot* of people? color me surprised.

[15:02:01.0000] <jgraham>
/me notes for posterity that he agrees with the entire line starting "Oh, I don't think", with the single change s/a Christian/an atheist/

[15:03:00.0000] <erlehmann>
hehe

[15:03:01.0000] <roc>
put it this way, we don't hire a lot of great people at Mozilla because of the stock options

[15:03:02.0000] <gavin>
let the offical record reflect that I also concur

[15:04:00.0000] <jamesr_>
it can be a factor. there aren't many people who you would want to influence in this way to begin with. it's not immediately useful for changing the CSS WG policies, though

[15:04:01.0000] <jgraham>
erlehmann: Yeah, I think there is a large set of people that would be loathe to work at a company they didn't believe in

[15:04:02.0000] <Philip`>
Dungeon Keeper has taught me that evil is fun, so I'd only want to work for evil companies

[15:05:00.0000] <jgraham>
jamesr_: I'm not sure what is useful for changing their policy

[15:06:00.0000] <jgraham>
To my eyes they are clinging to a comforting fiction in the face of stark evidence it is wrong

[15:06:01.0000] <jamesr_>
they = us, for many of us anyway

[15:07:00.0000] <jamesr_>
CSS WG = browser vendors, web developers and other interested parties

[15:07:01.0000] <jgraham>
Well sure

[15:07:02.0000] <roc>
none of the browser vendors are arguing against supporting -webkit prefixes, not even you or Apple

[15:09:00.0000] <Hixie>
roc: maximising profits isn't, as far as i can tell, a legal requirement. (If it was, why would companies be giving profits away to charity all the time, even beyond any possible tax benefit?)

[15:09:01.0000] <roc>
it's Web devs and standardistas who are agains tit

[15:09:02.0000] <erlehmann>
:/

[15:09:03.0000] <roc>
Hixie: companies justify it as buying goodwill/PR

[15:09:04.0000] <jamesr_>
roc, you mean arguing against webkit-derived browsers supporting -webkit prefixes, or all browsers supporting -webkit?

[15:09:05.0000] <roc>
all

[15:10:00.0000] <Hixie>
roc: some may

[15:10:01.0000] <jgraham>
roc: It is much less clear that people from web browsers (including Opera) are in favour of dropping the prefix system entirely

[15:10:02.0000] <jamesr_>
in the US public companies are required to do what they promise to do in their filing documents

[15:10:03.0000] <roc>
jgraham: indeed

[15:10:04.0000] <jamesr_>
which may or may not be maximizing shareholder profit (it often is, but you can create a public company with another goal and be safe against shareholder suits for failing to maximize profits if you can show that you never said you would)

[15:12:00.0000] <jamesr_>
it's a common misconception that it's illegal to fail to maximize profits

[15:13:00.0000] <gsnedders>
Mozilla Corp. is wholly owned by the Foundation, right?

[15:13:01.0000] <gavin>
yes

[15:14:00.0000] <roc>
ok then

[15:14:01.0000] <roc>
I take it back

[15:14:02.0000] <roc>
Apple and Google are evil for prioritizing profits over the open Web

[15:15:00.0000] <BenoitRen>
I just read almost all of that weblog post about vendor prefixes. Phew.

[15:15:01.0000] <jamesr_>
this is where i have a problem, the discussion is starting out in a way that it can't end up productively

[15:15:02.0000] <BenoitRen>
I think he has some good points, but no, the box models should not have been changed to IE's.

[15:15:03.0000] <BenoitRen>
*box model

[15:16:00.0000] <jarek>
I hope that the vendor prefix madness will get even worse

[15:17:00.0000] <jarek>
... because I'm developing CSS ide that will be inserting them automatically

[15:17:01.0000] <erlehmann>
perverse incentices

[15:18:00.0000] <jgraham>
jarek: Man, I hadn't even thought about tool vendors as a constituent. No wonder Glazou wants to keep them so badly ;)

[15:18:01.0000] <jarek>
at some point it will be possible to write CSS by hand, they will have to buy my product :P

[15:18:02.0000] <jarek>
s/possible/impossible

[15:19:00.0000] <jarek>
jgraham: Glazou is the author of BlueGriffon, right?

[15:19:01.0000] <jgraham>
yup

[15:19:02.0000] <roc>
the conspiracy unmasked!

[15:21:00.0000] <jamesr_>
roc, i think it's a mistake to try to start a conversation with accusations and blame

[15:21:01.0000] <roc>
I didn't

[15:21:02.0000] <jamesr_>
ok, it's a mistake to put it in the middle of a conversation then

[15:21:03.0000] <roc>
http://robert.ocallahan.org/2012/02/alternatives-to-supporting-webkit.html no accusations, no blame

[15:22:00.0000] <roc>
apart from the people saying we should just work harder --- they suck

[15:23:00.0000] <roc>
and that dig at Apple I guess, but that's just fact

[15:23:01.0000] <jarek>
what about this idea https://news.ycombinator.com/item?id=3570609

[15:24:00.0000] <jarek>
"Evangelize Web developers to not use prefixed properties on production sites."

[15:24:01.0000] <roc>
I used to think the "common prefix" approach was dumb, but I'm gradually warming to it

[15:24:02.0000] <erlehmann>
jarek, implying anyone would write a draft before implementing?

[15:24:03.0000] <roc>
it might add some value

[15:24:04.0000] <erlehmann>
i thing it is dump.

[15:24:05.0000] <erlehmann>
dumz

[15:24:06.0000] <erlehmann>
dumb

[15:24:07.0000] <erlehmann>
right key.

[15:24:08.0000] <jarek>
I doubt anyone could convince me to drop vendor prefixes, there are too awesome

[15:24:09.0000] <roc>
not as good as "experimental features off by default in release builds" though

[15:24:10.0000] <jarek>
s/there/they

[15:25:00.0000] <erlehmann>
jarek, too awesome?

[15:25:01.0000] <erlehmann>
roc, I think “experimental features off by default” is something that would be nice.

[15:25:02.0000] <jgraham>
jarek: That isn't substantially better. It makes it easier for multiple people to implement prefixed stuff without having to fight tedious political battles, but as long as there is content that depends on -dev- then it still creates a legacy of undocumented features that the WG feel they can ignore

[15:25:03.0000] <gsnedders>
roc: Need to drop prefixes more quickly though relaly.

[15:25:04.0000] <gsnedders>
roc: (for that to work)

[15:26:00.0000] <jarek>
erlehmann: yeah, especially the stuff that landed in WebKit recently (filters, shaders)

[15:26:01.0000] <gsnedders>
But basically I think we should drop prefixes more quickly and have prefixed stuff off by default

[15:26:02.0000] <erlehmann>
jarek, I bet you also use IE filters.

[15:26:03.0000] <erlehmann>
gsnedders, i concur

[15:26:04.0000] <jgraham>
/me doesn't see how you will get people to agree to turn prefixed stuff of by default

[15:26:05.0000] <jarek>
erlehmann: only for gradients...

[15:26:06.0000] <jgraham>
*off

[15:26:07.0000] <jgraham>
It just doesn't align with their incentives

[15:26:08.0000] <erlehmann>
jarek, oh you

[15:27:00.0000] <erlehmann>
jgraham, one can still propose it.

[15:28:00.0000] <jgraham>
erlehmann: One can propose that we depend on FTL travel to violate causality and so get standards based on implementations before the implementations ship. It won't happen though.

[15:28:01.0000] <karlcow>
jarek: awesome in which ways? Are we not sometimes into "CSS Otaku", attracted by the last feature because it is our domain but the majority of users don't give a shit.

[15:28:02.0000] <roc>
sometimes we can persuade browser vendors to do things that don't align with their incentives

[15:28:03.0000] <erlehmann>
jgraham, you so negative

[15:28:04.0000] <roc>
Web authors are hopeless because there are too many of them

[15:28:05.0000] <erlehmann>
karlcow, harr harr

[15:28:06.0000] <jgraham>
roc: It is easier, I grant you

[15:28:07.0000] <roc>
for browsers, there's really only a small number of people who need to be persuaded

[15:28:08.0000] <erlehmann>
roc, i believe it when apple does vorbis ;)

[15:28:09.0000] <roc>
*sometimes*

[15:29:00.0000] <gsnedders>
erlehmann: Not everything is equally easy to persuade.

[15:29:01.0000] <jgraham>
roc: If you can get people to agree to never ship experimental stuff by default then I won't stand in your way

[15:29:02.0000] <roc>
also, the vast majority of browser developers are really excellent people, we have personal contacts, and so forth

[15:29:03.0000] <erlehmann>
gsnedders, i have no idea where to even start.

[15:29:04.0000] <jgraham>
Indeed I will be both ha[[y and impressed

[15:29:05.0000] <jgraham>
*happy

[15:29:06.0000] <roc>
jgraham: will you join in?

[15:29:07.0000] <erlehmann>
roc, “excellent people” is a null information. :/

[15:30:00.0000] <jgraham>
But I predict they will argue that shipping stuff by default is needed to get large scale feedback

[15:30:01.0000] <roc>
we can try

[15:30:02.0000] <roc>
I'm actually in favour of shipping stuff by default, but off by default behind about:config or similar

[15:30:03.0000] <jgraham>
and will be under pressure from their marketing people to ship stuff on by default for PR reasons

[15:31:00.0000] <gsnedders>
(e.g., shipping first)

[15:31:01.0000] <zewt>
... which i'd agree with; even on hobby sites i'd very rarely bother trying any API that isn't enabled on browsers by default

[15:31:02.0000] <jgraham>
Right "by default" I mean "on in the default config"

[15:31:03.0000] <roc>
Tab said he was in favour of this

[15:32:00.0000] <gsnedders>
roc: I think you'll find most engineers in favour of it. Whether that's enough is a different question.

[15:32:01.0000] <roc>
I don't know if it was discussed on webkit-dev. If there was agreement there, I'm pretty sure it would fly with Mozilla

[15:32:02.0000] <roc>
TabAtkins: ^^^

[15:32:03.0000] <jgraham>
It's not webkit-dev I am mostly worried about. It's pr⊙ac and similar

[15:33:00.0000] <erlehmann>
well, engineers. aren't that the guys who also use RF codecs? ;)

[15:33:01.0000] <erlehmann>
what jgraham said with less bitterness

[15:33:02.0000] <roc>
I think we're going to do it anyway where there isn't competitive pressure, like our new SVG Opentype fonts work

[15:34:00.0000] <jgraham>
roc: Great :)

[15:34:01.0000] <jgraham>
It is a little past my bedtime...

[15:34:02.0000] <jgraham>
/me -> sleep

[15:36:00.0000] <karlcow>
ah jgraham going to his -bedkit-

[15:40:00.0000] <BenoitRen>
So we're going to have websites who tell users to enable something in about:config to have some whiz-bang CSS work.

[15:41:00.0000] <bga>
heh you spawn new ie6 and now want to fight against it's monopoly

[15:42:00.0000] <jarek>
+ afaik there is no about:config in IE10

[15:42:01.0000] <jarek>
btw, what's the stance of Microsoft on this issue?

[15:42:02.0000] <jarek>
they have implement a lot of -ms-* properties in IE10

[15:42:03.0000] <roc>
BenoitRen: they can try that, but it probably won't work for most users, so sites wouldn't be able to rely on it

[15:44:00.0000] <BenoitRen>
Sites will just add more instructions for other browsers, like they already do for cookies, for example.

[15:44:01.0000] <erlehmann>
hell, not even „install a browser that can play h.264“ works

[15:44:02.0000] <erlehmann>
people just leave the site

[15:44:03.0000] <BenoitRen>
"PLEASE ENABLE COOKIES OUR WEB DEVELOPERS WERE TOO DUMB TO HAVE THE SITE WORK WITHOUT"

[15:45:00.0000] <BenoitRen>
erlehmann: Of course not. That's too vague. ;)

[15:45:01.0000] <jamesr_>
roc, we'd like to ship things only to our canary+dev channels and off in beta+stable

[15:45:02.0000] <BenoitRen>
But if people really want to see the dancing bunnies, they /will/ see the dancing bunnies!

[15:45:03.0000] <erlehmann>
BenoitRen, cookies are entrenched. also, round up those web devs and give them a scornful speech!

[15:46:00.0000] <roc>
jamesr_: maybe if just you guys and us and Opera agree, that's enough

[15:46:01.0000] <roc>
Apple and IE are less of a problem because of their slower update cycle

[15:47:00.0000] <roc>
/me wonders what the right way is to organize this

[15:47:01.0000] <BenoitRen>
erlehmann: If only I could. I once phoned a webshop's customer service to complain about their user agent sniffing that meant that some critical JavaScript wasn't provided. I couldn't even get the idiot to forward my complaint to the web developers; he was convinced that my browser was the problem.

[15:48:00.0000] <jamesr_>
roc, we have to get buy-in from apple on these sorts of things

[15:48:01.0000] <jamesr_>
i think they're a little less convinced of the channel idea

[15:48:02.0000] <jamesr_>
(since they have no such concept)

[15:48:03.0000] <jamesr_>
but maybe

[15:48:04.0000] <erlehmann>
BenoitRen, my provider sends mystery RST packets and they blamed the kernel of my device.

[15:48:05.0000] <jamesr_>
roc, note when i say "we" i mean "some of us"

[15:48:06.0000] <jamesr_>
we aren't a monolithic bloc in lockstep

[15:48:07.0000] <erlehmann>
jamesr_ i have said it before and i'll say it again: safari [mobile] is the new IE6

[15:48:08.0000] <jamesr_>
just like mozilla isn't, and just like apple isn't

[15:48:09.0000] <roc>
Webkit allows you to enable/disable experimental features, so I guess technically it's possible

[15:48:10.0000] <roc>
and Safari lags behind because of the update schedule anyway

[15:49:00.0000] <jamesr_>
webkit controls a lot of stuff with compile-time switches

[15:49:01.0000] <roc>
but I understand

[15:49:02.0000] <roc>
that's why I wondered if there was a webkit-dev discussion last time Tab raised this

[15:52:00.0000] <jamesr_>
and there's a genuine concern about landing code for features that they feel uneasy about even if we promise to restrict to some channels

[15:54:00.0000] <roc>
not sure I follow


2012-02-10
[16:01:00.0000] <jamesr_>
roc, even if we (chrome team) want to do new features this way (channel restrictions but no prefix), that's generally not sufficient for us to actually do it unless apple agrees

[16:02:00.0000] <roc>
I see, they might be worried about landing stuff unprefixed on any branch?

[16:03:00.0000] <jamesr_>
right, roughly. we don't have separate SVN branches for our releases, for instance

[16:03:01.0000] <jamesr_>
we land stuff in trunk and then we cut release branches off of trunk and they advance through the channels as a numbered branch

[16:03:02.0000] <roc>
Can you easily support having both prefixed and unprefixed aliases with independent enabling/disabling? I assume so

[16:04:00.0000] <roc>
anyway, if it hasn't been discussed on webkit-dev yet, I hope it can be soon

[16:05:00.0000] <jamesr_>
we've talked about this at webkit meetups, not sure if it's been discussed on the mailing list

[16:05:01.0000] <jamesr_>
i know simon and tab are flying/will fly soon back from paris

[16:05:02.0000] <jamesr_>
and they'll probably both have input

[16:05:03.0000] <roc>
none of this affects what we have to do for existing stuff of course

[16:26:00.0000] <BenoitRen>
Leaving. Laters!

[20:54:00.0000] <josephg>
hey guys

[20:55:00.0000] <josephg>
does anyone here know anything about mutation observers?

[20:55:01.0000] <josephg>
I'm playing with them in chrome canary, but they're quite buggy… I wonder if I should file the bugs I'm finding.

[22:29:00.0000] <jamesr_>
josephg, you mean the new API

[22:29:01.0000] <jamesr_>
josephg, ?

[22:29:02.0000] <jamesr_>
josephg, i don't know much about them in particular, but you should definitely file bugs!

[22:29:03.0000] <jamesr_>
it's new stuff and some rough edges are probably expected

[22:29:04.0000] <jamesr_>
bugs.webkit.org, minimal testcases preferred but not required

[22:30:00.0000] <jamesr_>
josephg, you can cc me (jamesr⊙co) if bugzilla will let you do that

[22:30:01.0000] <jamesr_>
cheers

[23:16:00.0000] <josephg>
jamesr_: yeah the new api. I filed a bug on chromium - should I file a bug on webkit as well?

[23:29:00.0000] <josephg>
jamesr_: http://code.google.com/p/chromium/issues/detail?id=113584

[23:48:00.0000] <mhausenblas>
hsivonen, congrats for http://validator.w3.org/nu/ - KUTGW!

[00:02:00.0000] <zcorpan>
Hixie: why did https://www.w3.org/Bugs/Public/show_bug.cgi?id=15941 get in the "other Hixie drafts" bucket?

[00:16:00.0000] <zcorpan>
"Instead of coding against a single CSS specification developers will need to code against changing vendor prefixes." http://www.webmonkey.com/2012/02/webkit-isnt-breaking-the-web-you-are/

[00:16:01.0000] <zcorpan>
of course, -webkit-foo is stable and the spec is the one that's changing

[00:17:00.0000] <zcorpan>
i don't understand the argument "it'll break the standards process"

[01:12:00.0000] <jgraham>
zcorpan: People seem to believe as an article of faith that -vendor- is needed to allow innovation in CSS (but not, apparently in other areas like HTML). The desire to not critically examine that particular belief is the number 1 cause of tortured, convoluted, and often nonsensical, reasoning in this whole discussion.

[01:15:00.0000] <zcorpan>
i see

[01:17:00.0000] <annevk5>
so someone wants to advertise a commercial good on blog.whatwg.org?

[01:17:01.0000] <annevk5>
is that okay?

[01:17:02.0000] <annevk5>
in particular: http://alaramills.com/store.html

[01:18:00.0000] <annevk5>
does not really strike me as something we want to do

[01:18:01.0000] <jgraham>
It sounds kind of not-OK to me

[01:21:00.0000] <GlitchMr>
Not interested in this Periodic table of HTML5 elements

[01:23:00.0000] <GlitchMr>
It seems less useful than for example http://www.smashingmagazine.com/2009/07/06/html-5-cheat-sheet-pdf/ (if you want something printable of course :P) and it's paid...

[01:24:00.0000] <GlitchMr>
Artistically, I like the format of it, but that's all.

[01:26:00.0000] <jgraham>
I think you can stop advertising them in the irc logs now ;)

[01:26:01.0000] <annevk5>
thanks for the feedback

[01:26:02.0000] <annevk5>
the samshingmag is free jgraham

[01:26:03.0000] <jgraham>
No, I meant the other thing

[01:27:00.0000] <jgraham>
I imagine that "it seems less useful than" will still make it more likely that people will investigate the link :)

[01:29:00.0000] <zcorpan>
oh, oh, but surely http://simon.html5.org/html-elements is the most useful of all! and FREE!!

[01:30:00.0000] <annevk5>
anyway I declined

[01:31:00.0000] <zcorpan>
I ALSO SELL VIAGRA PILLS

[01:31:01.0000] <zcorpan>
what? i didn't say anything

[01:31:02.0000] <GlitchMr>
Sorry, you were logged in IRC logs...

[01:44:00.0000] <annevk5>
cats

[01:44:01.0000] <Ms2ger>
dogs

[01:44:02.0000] <jgraham>
pigs, but after 9 months you slaughter them, and then bacon.

[01:45:00.0000] <annevk5>
btw

[01:45:01.0000] <annevk5>
tomorrow is my talk on XML5

[01:45:02.0000] <annevk5>
it'll be a bit over 20 minutes so there's not too much time

[01:46:00.0000] <annevk5>
anything I should cover?

[01:54:00.0000] <Ms2ger>
Vendor prefixes

[01:57:00.0000] <annevk5>
dude

[01:58:00.0000] <Ms2ger>
Yes dude?

[01:58:01.0000] <annevk5>
XML already has its own prefix hell

[01:58:02.0000] <annevk5>
no need for making it worse

[01:59:00.0000] <Ms2ger>
We could start using namespaces called http://www.mozilla.org/newlayout/xml/parsererror.xml

[01:59:01.0000] <Ms2ger>
Oh wait, we do

[01:59:02.0000] <jgraham>
Ms2ger: Oh may, you nailed it.

[01:59:03.0000] <jgraham>
*man

[01:59:04.0000] <Ms2ger>
Opera must be really evil to implement that instead of http://www.opera.com/newlayout/xml/parsererror.xml

[01:59:05.0000] <jgraham>
Vendor prefixes have failed because they're not URIs!

[01:59:06.0000] <Ms2ger>
jgraham++

[02:00:00.0000] <annevk5>
making them URLs might actually solve the problem

[02:01:00.0000] <jgraham>
annevk5: Not if your argument is "they would be hard to type"

[02:01:01.0000] <jgraham>
Because no one actually types CSS anymore

[02:01:02.0000] <jgraham>
Not the cool kids anyway

[02:03:00.0000] <annevk5>
I was going for too confusing

[02:03:01.0000] <annevk5>
but I was also mostly joking

[02:03:02.0000] <jgraham>
:)

[02:04:00.0000] <annevk5>
the main problem with this XML5 talk is that I'm not sure we want the hassle of changing XML anymore

[02:04:01.0000] <Ms2ger>
Heh

[02:04:02.0000] <Ms2ger>
"XML5: I dunno if we want this"

[02:05:00.0000] <jgraham>
Well if we had a non-sucky XML it might solve the problems that the Web Components people are having with templates, or something

[02:05:01.0000] <annevk5>
if XML has to become some kind of authoring format used by web developers I think XML5 is pretty much required

[02:05:02.0000] <annevk5>
but it seems we moved past that and nobody cared

[02:06:00.0000] <Ms2ger>
We have XML5, no?

[02:06:01.0000] <annevk5>
jgraham: well yeah, that's certainly true, and SVG/Math and Components might have provided a compelling story for it

[02:06:02.0000] <Ms2ger>
It's <br /> sent as text/html

[02:06:03.0000] <annevk5>
but now all is text/html anyway

[02:06:04.0000] <annevk5>
Ms2ger: only works in Belgium

[02:07:00.0000] <Ms2ger>
lulz

[02:08:00.0000] <annevk5>
whoa

[02:08:01.0000] <annevk5>
http://arstechnica.com/tech-policy/news/2012/02/jury-rules-that-eolass-interactive-web-patent-is-invalid.ars

[02:08:02.0000] <annevk5>
can we countersue now?

[02:08:03.0000] <annevk5>
we implemented all kinds of silly techniques iirc

[02:09:00.0000] <Ms2ger>
Alright

[02:09:01.0000] <Ms2ger>
If anybody said something useful in an email in my inbox that has "prefix" in the subject, send it again

[02:10:00.0000] <Ms2ger>
And add "responsive" to that

[02:14:00.0000] <jgraham>
YOu didn't like my email "Vendor prefixes for responsive web design nirvana" then?

[02:19:00.0000] <annevk5>
Ms2ger: just fix all the DOM bugs, mkay

[02:21:00.0000] <annevk5>
seems like it is time to fly

[02:21:01.0000] <annevk5>
bah

[02:22:00.0000] <annevk5>
from -6 to -13

[02:22:01.0000] <annevk5>
and there's hail

[02:22:02.0000] <annevk5>
/me wants to go back on vacation

[02:28:00.0000] <Ms2ger>
jgraham, I dunno if I liked it, it's moved to /dev/null

[02:40:00.0000] <MikeSmith>
annevk5: right after you got back you pinged me about the thing

[02:40:01.0000] <MikeSmith>
but I forgot what it wa

[02:40:02.0000] <MikeSmith>
was

[02:41:00.0000] <MikeSmith>
we were going to do something but we had to wait for some consensus call from webapps WG

[02:41:01.0000] <MikeSmith>
or www-dom list or something

[02:41:02.0000] <MikeSmith>
and I was all ready to do it

[02:41:03.0000] <MikeSmith>
but I forgot what it was I was all set to do

[02:42:00.0000] <MikeSmith>
haha that posters costs $47.99

[02:51:00.0000] <MikeSmith>
yee hah for CORS for XHR in IE10

[03:08:00.0000] <MikeSmith>
https://twitter.com/#!/ryah/status/167743028637872128

[03:10:00.0000] <zcorpan>
i saw a tv commercial the other day, for a smartphone. it included "internet, email and facebook"

[03:11:00.0000] <MikeSmith>
heh

[03:11:01.0000] <MikeSmith>
zcorpan: they know their market I guess

[03:11:02.0000] <MikeSmith>
annevk5: https://twitter.com/#!/mnot/status/167792607890644992

[03:12:00.0000] <zcorpan>
let's change CORS to suck less! wait, first we need to prefix all implementations...

[03:28:00.0000] <bga>
new regexp engine http://code.google.com/p/brre/

[03:29:00.0000] <MikeSmith>
Object Pascal

[03:29:01.0000] <MikeSmith>
cool

[03:59:00.0000] <Taggnostr>
I'm looking for broken html pages with lot of markup errors to test a parser, does anyone know where can I find it? (does the html validator at w3.org keep an high-score list of the sites with most errors?)

[04:00:00.0000] <Ms2ger>
Maybe try google.com?

[04:00:01.0000] <MikeSmith>
Taggnostr: Alexa keeps a list like that

[04:00:02.0000] <Taggnostr>
I found http://www.trentmueller.com/Top-10-Websites-with-the-Worst-HTML_Article/

[04:01:00.0000] <Taggnostr>
but those sites now have less errors

[04:01:01.0000] <Taggnostr>
MikeSmith, a list of sites with broken html?

[04:01:02.0000] <jgraham>
Taggnostr: http://code.google.com/p/html5lib/source/browse/#hg%2Ftestdata%2Ftree-construction

[04:02:00.0000] <MikeSmith>
http://www.alexa.com/topsites

[04:02:01.0000] <jgraham>
heh

[04:04:00.0000] <zcorpan>
MikeSmith: do the stars indicate the brokenness?

[04:04:01.0000] <MikeSmith>
haha

[04:04:02.0000] <Taggnostr>
I already tested the parser with 1000 popular sites, but I was looking for websites like http://www.dokimos.org/ajff/

[04:04:03.0000] <MikeSmith>
number of errors per page is not a great metric

[04:04:04.0000] <MikeSmith>
it's the quality of the errors that matter

[04:05:00.0000] <MikeSmith>
any jackass can ring up the error meter just by putting a bunch of &s or such

[04:05:01.0000] <MikeSmith>
Taggnostr: oh man

[04:05:02.0000] <MikeSmith>
how'd you find that one?

[04:06:00.0000] <MikeSmith>
this is gold

[04:06:01.0000] <Taggnostr>
googling for "worst websites" or something similar

[04:06:02.0000] <MikeSmith>
the security warning at the top is genius

[04:06:03.0000] <Ms2ger>
Forget all the other browsers and

[04:06:04.0000] <Ms2ger>
down with the Web 2.0 net police.

[04:06:05.0000] <Taggnostr>
but it only has 375 errors on the main page

[04:07:00.0000] <MikeSmith>
Error: meta element between head and body.

[04:07:01.0000] <Taggnostr>
(the people who signed the guestbook seem to like it though)

[04:07:02.0000] <MikeSmith>
that's the kind of thoughtful error I'm talking about

[04:08:00.0000] <Taggnostr>
I assume that a website made with word and photoshop and put together with frontpage has enough creative errors

[04:10:00.0000] <jgraham>
Taggnostr: Seriously, have you tried the tests I linked to

[04:10:01.0000] <jgraham>
?

[04:10:02.0000] <jgraham>
If you pass those you shoud do fine on websites

[04:11:00.0000] <Taggnostr>
I'm looking at them, but I was searching for real-world pages (it's also easy for me to wget them and use them in my tests)

[04:11:01.0000] <Taggnostr>
thanks for the link btw!

[04:11:02.0000] <jgraham>
Passing the tests is much more likely to be helpful than finding real world pages

[04:11:03.0000] <jgraham>
They are much easier to debug too :)

[04:12:00.0000] <jgraham>
The only thing that they really lack is crazy-deep nesting and so on

[04:13:00.0000] <zcorpan>
Taggnostr: what do you use the parser for?

[04:13:01.0000] <Taggnostr>
it's the Python built-in parser

[04:13:02.0000] <zcorpan>
ah

[04:14:00.0000] <zcorpan>
well i can only concur with jgraham, you really want to pass the testsuite

[04:14:01.0000] <Taggnostr>
my goal right now is to make it able to parse everything without errors, the next goal is to make it parse everything as correctly as possible (following the html5 standard)

[04:14:02.0000] <jgraham>
I don't understand the difference between those goals

[04:15:00.0000] <zcorpan>
just implement the parsing algorithm in the spec, it covers all cases

[04:15:01.0000] <Taggnostr>
right now when the parser finds invalid markup it just raises an error and give up parsing, and there's nothing you can do

[04:15:02.0000] <jgraham>
Unless you consider "without error" to simply mean "not throwing". In which case lambda html:"" meets the goal

[04:16:00.0000] <Taggnostr>
and I'm changing that so that it tries to figure out what to do with the invalid markup and keep going till the end

[04:16:01.0000] <Ms2ger>
You're modifying an existing parser?

[04:16:02.0000] <Taggnostr>
zcorpan, I can't start from scratch, so I'm adapting what I have to get closer to the specs gradually

[04:16:03.0000] <Taggnostr>
yes

[04:16:04.0000] <Ms2ger>
I... wouldn't recommend that

[04:17:00.0000] <zcorpan>
why can't you start from scratch?

[04:17:01.0000] <Ms2ger>
I don't know of anybody who's done that

[04:17:02.0000] <Taggnostr>
well, so far I managed to have it parse a list of 1000 pages successfully with 0 errors, so it's going quite well

[04:18:00.0000] <Taggnostr>
zcorpan, because I could just use html5lib if I wanted a python parser that follows the specs

[04:18:01.0000] <jgraham>
Pretty sure we had this conversation before

[04:18:02.0000] <Taggnostr>
we did

[04:19:00.0000] <jgraham>
But if I were you I would wrap html5lib in an API that looks more like the stdlib

[04:19:01.0000] <jgraham>
Rather than trying to make the internals of the stdlib more like html5lib

[04:19:02.0000] <zcorpan>
so you want something that is closer to the spec, but still isn't 100% compliant?

[04:20:00.0000] <Taggnostr>
but the goal is providing a better html parser in the stdlib, and improving the existing one is the only viable solution (replacing it with html5lib is not really an option)

[04:20:01.0000] <Taggnostr>
zcorpan, I want to get as close as 100% compliant as possible

[04:21:00.0000] <zcorpan>
why is replacing it with html5lib not an option?

[04:21:01.0000] <Taggnostr>
but if it does the wrong thing with some obscure corner cases it probably doesn't matter too much now

[04:23:00.0000] <Taggnostr>
zcorpan, for several reason, if html5lib is added to the stdlib it will have to follow the python release schedule (so you have to wait many months between releases), it needs someone willing to maintain it, it needs to have a compatible license, it has to be "good enough" to get in the stdlib and replace the existing one and have everyone to switch and so on

[04:24:00.0000] <jgraham>
So it would get a faster release schedule than today?

[04:24:01.0000] <jgraham>
/me has neglected html5lib recently

[04:25:00.0000] <jgraham>
The license shouldn't be a problem

[04:25:01.0000] <Taggnostr>
how often do you make html5lib releases?

[04:25:02.0000] <Taggnostr>
for python is more or less 16 months for new features and maybe 4 for bug fixes

[04:25:03.0000] <jgraham>
Well, uh, the last one was a few years ago. It is horribly out of date compared to trunk. This is somewhat embarassing

[04:26:00.0000] <Taggnostr>
are people even using it?

[04:26:01.0000] <jgraham>
It turns out that at any given moment there is always something more fun to do than make a release

[04:26:02.0000] <jgraham>
Yeah, we get a steady flow of bug reports

[04:27:00.0000] <jgraham>
and Mozilla use it in their html sanitizer, for example

[04:27:01.0000] <Ms2ger>
Philip`_, so about your canvas tests...

[04:27:02.0000] <Ms2ger>
jgraham, oh?

[04:27:03.0000] <jgraham>
(most of the bug reports as Invalid, I should say)

[04:27:04.0000] <jgraham>
Ms2ger: The one you use on your websites

[04:27:05.0000] <Taggnostr>
do they use the development version then?

[04:27:06.0000] <jgraham>
Nothing in the browser ofc

[04:27:07.0000] <Ms2ger>
Oh

[04:27:08.0000] <Ms2ger>
Those people use git

[04:27:09.0000] <jgraham>
And for that they are to be praised

[04:27:10.0000] <jgraham>
:p

[04:28:00.0000] <jgraham>
Taggnostr: I am not sure. A release is long, long overdue. And if I could do one right away I think I would now feel guilty enough to do one

[04:29:00.0000] <jgraham>
But we will see how the feeling persists to this evening

[04:29:01.0000] <Ms2ger>
jgraham, today isn't do what the hell you want day?

[04:30:00.0000] <Taggnostr>
these are some numbers about Python html parser btw: http://dpaste.com/699552/

[04:30:01.0000] <jgraham>
Nope :|

[04:31:00.0000] <Taggnostr>
the percentage represent the pages parsed till the end with no errors

[04:31:01.0000] <Taggnostr>
(with a sample of ~1000 pages)

[04:34:00.0000] <Philip`_>
Taggnostr: Have you tried parsing e.g. a PDF file and seeing if that hits any errors?

[04:34:01.0000] <Taggnostr>
nope

[04:35:00.0000] <Philip`_>
/me vaguely remembers a few difficulties with such files when parsing lots of random pages, though maybe that was just because he hadn't implemented a length limit before then

[04:38:00.0000] <Philip`_>
Taggnostr: If you want a larger selection of real-world pages to test, http://www.dotnetdotcom.org/ has something like half a million

[04:40:00.0000] <Taggnostr>
thanks

[05:18:00.0000] <zcorpan>
hmm. should track bugs be in the texttracks CG component?

[05:19:00.0000] <hsivonen>
sigh. http://www.change.org/petitions/microsoft-mozilla-opera-dont-make-webkit-prefixes-a-de-facto-standard

[05:21:00.0000] <zcorpan>
we won't. it already is. we'll make it a de jure standard.

[05:21:01.0000] <zcorpan>
that page doesn't load for me btw

[05:22:00.0000] <hsivonen>
WFM in Opera

[05:22:01.0000] <zcorpan>
ah now it loaded

[05:24:00.0000] <hsivonen>
glad to see PPK calls the BS on the call for action

[05:26:00.0000] <Ms2ger>
annevk5, so, what do you think about the DOMTokenList / space separated token list thread?

[05:35:00.0000] <zcorpan>
i don't follow how PPK recognizes that the problem lies with prefixes, yet proposes other prefixes

[05:36:00.0000] <zcorpan>
having -alpha-foo, -beta-foo, foo and -webkit-foo seems worse than just foo and -webkit-foo

[05:49:00.0000] <jgraham>
zcorpan: I refer you to what I said ~4h 37m ago

[05:50:00.0000] <jgraham>
Which really applies to -anything-, not just -vendor-

[05:52:00.0000] <zcorpan>
yeah

[06:19:00.0000] <MikeSmith>
"specs are not magical"

[06:19:01.0000] <MikeSmith>
sad but true

[06:19:02.0000] <MikeSmith>
I wish they were magical

[06:33:00.0000] <hsivonen>
amen to http://krijnhoetmer.nl/irc-logs/whatwg/20120210#l-693

[06:37:00.0000] <MikeSmith>
"This is not a game where the objective is to win independent of the merits of the arguments.  This is all about the merits of the arguments."

[06:37:01.0000] <MikeSmith>
well said

[06:37:02.0000] <MikeSmith>
http://lists.w3.org/Archives/Public/public-html/2012Feb/0110.html

[06:38:00.0000] <MikeSmith>
that should be put word-for-word into the W3C process doc

[06:39:00.0000] <Ms2ger>
Along with "longdesc is broken, don't waste your and my time on it"

[06:40:00.0000] <soapyfish>
Ahoy!

[06:43:00.0000] <karlcow>
MikeSmith: missing mushrooms?

[06:43:01.0000] <jgraham>
I wonder by what factor the number of characters in emails about longdesc attributes outweighs the number of characters of useful text pointed to by longdesc attributes.

[06:43:02.0000] <karlcow>
cf http://krijnhoetmer.nl/irc-logs/whatwg/20120210#l-1029 ;)

[06:44:00.0000] <MikeSmith>
karlcow: yeah, but I make my own substitutes -- windowpane

[06:44:01.0000] <karlcow>
heh

[07:10:00.0000] <annevk>
MikeSmith: it was about sending email for resolved bugs on www-dom

[07:11:00.0000] <annevk>
weather in Prague btw is better than expected, as long as you don't go outside for more than ten minutes

[07:13:00.0000] <MikeSmith>
annevk: oh so I did that already

[07:13:01.0000] <MikeSmith>
I recommend you go for the lulz in your talk

[07:13:02.0000] <jgraham>
annevk: So you mean the weather *indoors* in Prauge is better than expected

[07:13:03.0000] <jgraham>
?

[07:14:00.0000] <Ms2ger>
Will the talk be recorded?

[07:16:00.0000] <annevk>
I think there might be live broadcast even

[07:16:01.0000] <annevk>
not sure though

[07:17:00.0000] <annevk>
MikeSmith: cool that it's already done!

[07:19:00.0000] <MikeSmith>
"Rorschach test for standardistas" is good

[07:21:00.0000] <karlcow>
Roooarrrschach test even

[07:23:00.0000] <Taggnostr>
http://www.w3.org/TR/html5/tokenization.html#end-tag-open-state links to "tag name state", and "tag name state" includes attributes.  Does that mean that <foo></foo some="attr"> is not a parsing error?

[07:24:00.0000] <MikeSmith>
Taggnostr: that's a parsing error

[07:24:01.0000] <MikeSmith>
Taggnostr: is the default python parser written in python?

[07:24:02.0000] <Taggnostr>
MikeSmith, yes

[07:25:00.0000] <Taggnostr>
how is that a parsing error?

[07:25:01.0000] <MikeSmith>
because it is?

[07:25:02.0000] <MikeSmith>
I don't have the spec open

[07:25:03.0000] <Taggnostr>
if I follow the page, after </ there's "f", so it's the second entry that redirects to "tag name state"

[07:26:00.0000] <MikeSmith>
but it might help you to read the code of the validator.nu/Mozilla parser

[07:26:01.0000] <MikeSmith>
the source

[07:26:02.0000] <MikeSmith>
lemme get you a URL

[07:26:03.0000] <MikeSmith>
it's an error-reporting parser

[07:26:04.0000] <MikeSmith>
/me can't remember if html5lib is error-reporting

[07:26:05.0000] <Philip`_>
Taggnostr: I think the error occurs when the tokeniser emits the end tag token

[07:26:06.0000] <MikeSmith>
Taggnostr: when in doubt I read hsivonen code

[07:26:07.0000] <Philip`_>
since the spec says it's an error to emit end tag tokens that have attributes

[07:27:00.0000] <MikeSmith>
rather than the spec

[07:27:01.0000] <Taggnostr>
Philip`_, is that after the parsing?

[07:27:02.0000] <MikeSmith>
I find hsivonen code much easier to follow and it has comments that reference the spec

[07:27:03.0000] <Taggnostr>
MikeSmith, I think html5lib is error reporting

[07:27:04.0000] <Philip`_>
"When an end tag token is emitted with attributes, that is a parse error." (http://www.whatwg.org/specs/web-apps/current-work/multipage/tokenization.html#tokenization)

[07:28:00.0000] <MikeSmith>
Taggnostr: ok

[07:28:01.0000] <MikeSmith>
Taggnostr: http://hg.mozilla.org/projects/htmlparser/file/default/src/nu/validator/htmlparser/impl is worth perusing

[07:28:02.0000] <Taggnostr>
Philip`_, so I should parse all the attributes in the end tag normally, and then simply ignore them and emit only the tag name?

[07:29:00.0000] <Philip`_>
The tree construction algorithm never looks at the attributes of an end tag token, so you don't need to actually bother storing them when tokenising

[07:29:01.0000] <Taggnostr>
but I have to go through them in order to figure out where the tag ends

[07:30:00.0000] <Philip`_>
Yeah, I think you need to at least partially tokenise them, so you can handle </foo bar=">" baz> correctly

[07:31:00.0000] <Taggnostr>
yep, so in that case I'll just emit a foo, and ignore the rest

[07:31:01.0000] <Philip`_>
Storing the attributes then ignoring them later is presumably not going to hurt efficiency in practice (compared to having the tokeniser skip over them without storing anything), because almost nobody puts attributes in end tags in practice

[07:32:00.0000] <Philip`_>
but the spec doesn't care how you implement it as long as the visible end result (i.e. the DOM tree) is the same as what the spec says it should be

[07:32:01.0000] <Taggnostr>
there's also the case of e.g. </li<ul>, I think this should emit 'li<ul' as token name

[07:33:00.0000] <Ms2ger>
Indeed

[07:33:01.0000] <Philip`_>
By "should", do you mean you think the spec says that, or you think the spec ought to say that?

[07:33:02.0000] <Taggnostr>
the python "parser" just does tokenization, it doesn't build the tree

[07:33:03.0000] <Ms2ger>
The spec does say that, IIRC

[07:33:04.0000] <Taggnostr>
I mean that if I read them correctly that's what I should emit

[07:34:00.0000] <Philip`_>
That does seem to be the case

[07:35:00.0000] <Taggnostr>
MikeSmith, the code you linked doesn't seem too clear to me

[07:35:01.0000] <MikeSmith>
Taggnostr: so what does python use for tree building by default?

[07:35:02.0000] <MikeSmith>
Taggnostr: blame hsivonen

[07:35:03.0000] <MikeSmith>
it conforms to the spec anyway

[07:35:04.0000] <MikeSmith>
most of the time the spec is very clear

[07:35:05.0000] <MikeSmith>
as long as you know where to look

[07:35:06.0000] <MikeSmith>
problem is, some of the stuff is kind of spread around in the spec

[07:36:00.0000] <MikeSmith>
and once you know where it is it's clear

[07:36:01.0000] <Taggnostr>
MikeSmith, there's nothing in the stdlib for that, one option is BeautifulSoup, otherwise there are other alternatives like lxml and html5lib

[07:36:02.0000] <MikeSmith>
ah

[07:36:03.0000] <MikeSmith>
yeah

[07:36:04.0000] <Taggnostr>
MikeSmith, apparently all that I need is in http://www.w3.org/TR/html5/tokenization.html , but with all those states it might get a bit confusing to follow

[07:36:05.0000] <Philip`_>
One problem with only doing tokenisation and not building the tree is that it's hard to parse stuff like <script><div></script> properly, since it's not obvious when you should switch to the spec's 'script data state' or whichever state it is

[07:37:00.0000] <MikeSmith>
Taggnostr: be glad I guess that you don't have to implement tree-building

[07:37:01.0000] <Philip`_>
/me doesn't know whether "hard" means "impossible" or merely "not directly specified"

[07:37:02.0000] <Taggnostr>
luckily that's not my problem, for that I would emit a start 'script', a start 'div', and an end 'script'

[07:38:00.0000] <jgraham>
Taggnostr: Wow, really?

[07:38:01.0000] <Taggnostr>
jgraham, yes

[07:38:02.0000] <MikeSmith>
Taggnostr: fwiw seems like you are doing the wise thing by asking here instead of just trying to read teh spec in isolatin

[07:38:03.0000] <Philip`_>
What about <circle/><svg><circle/></svg> ?

[07:39:00.0000] <Taggnostr>
iirc <circle/> is seen as start+end, and the default implementation emits a start and an end

[07:39:01.0000] <Taggnostr>
so start circle, end circle, start svg, start circle, end circle, end svg

[07:40:00.0000] <Taggnostr>
jgraham, why are you surprised?

[07:40:01.0000] <Philip`_>
It should be more like start-circle, start-svg, start-circle, end-circle, end-svg, to match what a full HTML5 parser would do

[07:41:00.0000] <Philip`_>
What about <script><!--</script> ? (Should be start-script, text-"<!--", end-script; otherwise some pages will get all of their content slurped into the comment, which is probably undesirable)

[07:41:01.0000] <Taggnostr>
I think even <br/> emits start-br, end-br (unless you override the start/end method

[07:42:00.0000] <Taggnostr>
that should do the right thing, i.e. read everything between <script> and </script> and emit it as data

[07:43:00.0000] <Philip`_>
That makes sense for <br> and <br/>, since they're both equivalent to XML's "<br/>", but <circle/> is equivalent to XML "<circle>" if outside of <svg> etc or equivalent to XML "<circle/>" if inside of <svg> etc

[07:43:01.0000] <Philip`_>
so whether it should be treated as self-closing is context dependent

[07:44:00.0000] <Taggnostr>
can you elaborate on this a bit?

[07:46:00.0000] <Philip`_>
See e.g. http://livedom.validator.nu/?%3C!DOCTYPE%20html%3E%0D%0A%3Ccircle%2F%3Ex%3Csvg%3Ey%3Ccircle%2F%3Ez%3C%2Fsvg%3E

[07:47:00.0000] <Philip`_>
The "x" is a child of the first circle element, but the "z" is a sibling of the second circle element

[07:49:00.0000] <Philip`_>
(i.e. "<circle/>x<svg>y<circle/>z</svg>" is equivalent to "<circle>x<svg>y<circle></circle>z</svg>")

[07:49:01.0000] <Taggnostr>
I was looking for a dom viewer, this will be useful, thanks!

[07:51:00.0000] <Taggnostr>
so the first circle is parsed following the html rules so the / is discarded, whereas inside <svg> an xml parser is used and the / implies a self-closing tag?

[07:53:00.0000] <jgraham>
Yes

[07:53:01.0000] <jgraham>
Sort of

[07:53:02.0000] <Philip`_>
It's not a real XML parser - it's just a different mode in the tree construction algorithm which handles the token's self-closing flag differently

[07:53:03.0000] <Philip`_>
(in particularly, by treating the token as self-closing, rather than by ignoring the flag)

[07:54:00.0000] <Philip`_>
s/ly//

[07:54:01.0000] <Taggnostr>
ok

[07:54:02.0000] <Taggnostr>
I wonder why </br> is seen as a <br> whereas <hr> is ignored

[07:55:00.0000] <Taggnostr>
is hr gone from html5?

[07:55:01.0000] <Taggnostr>
s/<hr>/</hr>/

[07:56:00.0000] <Philip`_>
Maybe I'm confusing things since I don't know whether you're aiming to output a properly-nested stream of start/end tokens that correspond to an XML serialisation of the DOM produced by the HTML5 parser (which requires unlimited buffering to do it properly), or a usually-incorrectly-nested stream of tokens that match the HTML5 tokeniser's output (which requires an explicit self-closing flag so consumers can decide how to handle the token in a way tha

[07:56:01.0000] <Philip`_>
...that matches HTML5), or some mixture

[07:56:02.0000] <jgraham>
Don't you use irssi, Philip`_ ?

[07:56:03.0000] <Philip`_>
</br> is a special case due to the insanity of HTML

[07:56:04.0000] <Philip`_>
jgraham: Yes

[07:57:00.0000] <Taggnostr>
I just tokenize and emit tokens as soon as I parse them, I don't build trees and/or keep states

[07:57:01.0000] <jgraham>
 /load splitlong.pl ?

[07:59:00.0000] <Philip`_>
http://www.whatwg.org/specs/web-apps/current-work/multipage/tree-construction.html#tree-construction says "↪An end tag whose tag name is "br"  Parse error. Act as if a start tag token with the tag name "br" had been seen. Ignore the end tag token."

[08:00:00.0000] <Philip`_>
jgraham: That might be convenient

[08:05:00.0000] <Philip`_>
/me can't think of enough to say to test whether it actually works, but assumes it will since it didn't give any error messages or anything, so he conditionally thanks jgraham for the suggestion

[08:06:00.0000] <Ms2ger>
/me conditionally thanks Philip`_ for updating his canvas tests

[08:07:00.0000] <MikeSmith>
btw, I think Hixie likes his "no-quirks mode" term

[08:07:01.0000] <MikeSmith>
but who knows

[08:07:02.0000] <Philip`_>
Ms2ger: warning: conditional expression is constant

[08:07:03.0000] <MikeSmith>
sometimes you can't predict when Hixie will change his mind

[08:08:00.0000] <MikeSmith>
I like "no-quirks mode" myself

[08:08:01.0000] <Ms2ger>
MikeSmith, it's a lie, though

[08:08:02.0000] <Ms2ger>
"no-quirks mode" has plenty of quirks

[08:08:03.0000] <MikeSmith>
many things are a lie

[08:08:04.0000] <Hixie>
the problem is "standards mode" is a sillier name :-)

[08:08:05.0000] <Hixie>
and "almost-standards" doubly so :-)

[08:09:00.0000] <MikeSmith>
heh

[08:09:01.0000] <Ms2ger>
Because we have no standards?

[08:09:02.0000] <Hixie>
if we spec it all, it's all standards mode

[08:09:03.0000] <MikeSmith>
yeah, please "almost standards"? c'mon

[08:10:00.0000] <Wilto>
Something something dating joke.

[08:10:01.0000] <MikeSmith>
heh

[08:10:02.0000] <MikeSmith>
Wilto: please hang out here more often

[08:10:03.0000] <AryehGregor>
/me votes for "quirks mode", "marginally more quirks mode", and "appreciably more quirks mode"

[08:10:04.0000] <Wilto>
I’ll be like the Jar Jar Binks of #whatwg.

[08:11:00.0000] <MikeSmith>
/me seconds AryehGregor proposal

[08:11:01.0000] <Wilto>
Quirkiness should be measured on a scale of “zero” to “Zooey Deschanel.”

[08:12:00.0000] <Ms2ger>
AryehGregor, I still hope that "appreciably more quirks mode" will become appreciably less quirky

[08:12:01.0000] <AryehGregor>
Me too.

[08:12:02.0000] <Philip`_>
/me was going to suggest "quirks mode", "quirkier mode", "quirkiest mode", but realises that won't be extensible in the future when we discover an even weirder mode that browsers have to be compatible with

[08:12:03.0000] <Ms2ger>
Also, removing document.all entirely

[08:12:04.0000] <AryehGregor>
/me was also going to, but realized that the first mode would have to be called "quirky mode" instead of "quirks mode" for consistency

[08:13:00.0000] <Philip`_>
AryehGregor: The naming inconsistency is just another quirk

[08:13:01.0000] <karlcow>
we should pick up the name of modes according to a random selection of insect names

[08:21:00.0000] <MikeSmith>
so I started http://platform.html5.org/history/ recently

[08:21:01.0000] <MikeSmith>
for anybody who cares to help with the forensics

[08:22:00.0000] <MikeSmith>
https://github.com/sideshowbarker/platform.html5.org/tree/master/history

[08:23:00.0000] <MikeSmith>
ara

[08:23:01.0000] <MikeSmith>
Do Not Track support in Opera

[08:24:00.0000] <MikeSmith>
http://my.opera.com/desktopteam/blog/2012/02/10/core-dnt-mail-themes

[08:25:00.0000] <karlcow>
MikeSmith: well I have to write something about this.

[08:25:01.0000] <MikeSmith>
karlcow: merveilleux

[08:25:02.0000] <karlcow>
Because the DNT header on the client side is… peanuts. It's not really the part which matters. And the BIG HUGE battle will be on the server side

[08:26:00.0000] <MikeSmith>
yur caps hurts my eyes

[08:26:01.0000] <karlcow>
I hope I will take the time this afternoon on ODIN blog http://my.opera.com/ODIN/blog/

[08:26:02.0000] <MikeSmith>
"BIG HUGE" is good those in most context

[08:27:00.0000] <karlcow>
MikeSmith: I like to hurt you :p

[08:29:00.0000] <MikeSmith>
on an unrelated note, how do I say "peanut gallery" in your France language?

[08:31:00.0000] <PandaZ>
jquery

[08:31:01.0000] <PandaZ>
oops

[08:31:02.0000] <Ms2ger>
Gallerie d'arachide?

[08:41:00.0000] <MikeSmith>
gallery of spiders?

[08:41:01.0000] <Ms2ger>
No 'n'

[08:42:00.0000] <MikeSmith>
dammit why can't France people just use ENGLISH like the rest of the world

[08:42:01.0000] <MikeSmith>
I mean it's quaint and amusing

[08:42:02.0000] <MikeSmith>
but please

[08:42:03.0000] <MikeSmith>
enough is enough

[08:42:04.0000] <karlcow>
peanut gallery? which meaning for peanut

[08:43:00.0000] <karlcow>
sex or fruits

[08:43:01.0000] <Wilto>
Woah, I tuned back in at a weird time.

[08:43:02.0000] <Ms2ger>
There are no others

[08:43:03.0000] <karlcow>
Wilto: with me, it's always NSFW for americans crowd

[08:45:00.0000] <MikeSmith>
karlcow is a sexiste

[08:45:01.0000] <MikeSmith>
with the e on the end

[08:45:02.0000] <karlcow>
:)

[08:46:00.0000] <MikeSmith>
cf. alcholiste

[08:48:00.0000] <AryehGregor>
ARGH.

[08:49:00.0000] <AryehGregor>
https://www.w3.org/Bugs/Public/show_bug.cgi?id=15508

[08:49:01.0000] <MikeSmith>
AryehGregor: hah

[08:50:00.0000] <MikeSmith>
more of the same on the way

[08:50:01.0000] <Ms2ger>
Ah, CSS

[08:50:02.0000] <AryehGregor>
What do you mean?

[08:51:00.0000] <MikeSmith>
I mean that lots of stuff getting implemented hard and fast these days without much thought about how it should work with existing features

[08:51:01.0000] <MikeSmith>
or other proposed features

[08:51:02.0000] <AryehGregor>
It's not an implementer here, it's someone from Adobe.

[08:52:00.0000] <MikeSmith>
Adobe is an implementor

[08:52:01.0000] <AryehGregor>
I mean, maybe Adobe pays some WebKit people, I don't know.

[08:52:02.0000] <MikeSmith>
um

[08:52:03.0000] <AryehGregor>
For all I know he could work on transforms for WebKit.

[08:52:04.0000] <AryehGregor>
I was assuming not, but maybe that was unjustified.

[08:52:05.0000] <MikeSmith>
you know who Dirk is, right?

[08:52:06.0000] <AryehGregor>
. . . no.  :(

[08:52:07.0000] <MikeSmith>
ah

[08:52:08.0000] <MikeSmith>
well

[08:52:09.0000] <AryehGregor>
/me shouldn't make assumptions

[08:52:10.0000] <AryehGregor>
/me definitely shouldn't make assumptions in a publicly-logged IRC chat

[08:52:11.0000] <MikeSmith>
Dirk's been working on Webkit since before it was Webkit

[08:52:12.0000] <karlcow>
"absolutely" and others… are words that I would absolutely bannish.

[08:53:00.0000] <AryehGregor>
Heh, okay.

[08:53:01.0000] <AryehGregor>
My bad.

[08:53:02.0000] <MikeSmith>
no

[08:53:03.0000] <MikeSmith>
no way to know

[08:53:04.0000] <AryehGregor>
Well, I could have looked before making assumptions . . .

[08:53:05.0000] <MikeSmith>
since we don't record this stuff anywhere

[08:53:06.0000] <MikeSmith>
anyway, he knows a thing or two about a thing or two

[08:55:00.0000] <gsnedders>
AryehGregor: Adobe have quite a few people working on WebKit, on stuff like regions.

[08:55:01.0000] <AryehGregor>
Yeah, I somewhat knew that.

[08:55:02.0000] <AryehGregor>
Should have thought before I spoke.

[08:55:03.0000] <AryehGregor>
I think this would be a bad change, but it's not the end of the world.

[08:55:04.0000] <AryehGregor>
/me doesn't think CSS transforms should be brought in line with SVG transforms at all

[08:58:00.0000] <MikeSmith>
maybe should give up on SVG transforms at all

[08:58:01.0000] <MikeSmith>
or whatever they're called

[08:59:00.0000] <AryehGregor>
They should be deprecated presentational attributes.

[08:59:01.0000] <AryehGregor>
Or not deprecated.

[08:59:02.0000] <AryehGregor>
Since SVG is meant for display.

[08:59:03.0000] <AryehGregor>
Or whatever.

[08:59:04.0000] <AryehGregor>
I don't car.e

[08:59:05.0000] <AryehGregor>
care.

[08:59:06.0000] <AryehGregor>
But I don't want us complicating CSS to be more compatible with them.

[08:59:07.0000] <MikeSmith>
Doug and heycam|away and others might not be so keen on that

[08:59:08.0000] <AryehGregor>
Which part?

[09:00:00.0000] <MikeSmith>
dropping SVG transforms

[09:00:01.0000] <AryehGregor>
I'm being hasty and rash here.  I'm tired, and I shouldn't be so vocal just because I'm in a group of like-minded people.  I still think the change is a bad one, though.

[09:00:02.0000] <MikeSmith>
I don' think SVG actually calls them transforms

[09:00:03.0000] <AryehGregor>
Well, obviously keep them for compat.

[09:00:04.0000] <AryehGregor>
I think it does, no?

[09:00:05.0000] <MikeSmith>
I dunno

[09:01:00.0000] <MikeSmith>
don't know it well enugh

[09:01:01.0000] <MikeSmith>
but anyway

[09:02:00.0000] <MikeSmith>
I think for web author-developers, if they can do something usng CSS, that's what they're going to use

[09:02:01.0000] <MikeSmith>
if they have a CSS way to do it, they don't care if SVG can do it because after all for them them wtf is SVG anyway

[09:03:00.0000] <Wilto>
For what it’s worth, yeah, I’ll attest to that.

[09:03:01.0000] <Wilto>
Not that there’s any excuse for not keeping up with the New Hotnesses™, but… yeah.

[09:03:02.0000] <AryehGregor>
Right, exactly.

[09:03:03.0000] <AryehGregor>
People know about CSS but not SVG.

[09:04:00.0000] <AryehGregor>
I don't think it's worthwhile to make CSS more similar to SVG, but rather the reverse.

[09:04:01.0000] <Wilto>
Right. Not saying I wouldn’t be interested, but the lower the barrier to adoption the better.

[09:04:02.0000] <AryehGregor>
I think my disagreement with Dirk is mostly because he has a strong SVG background, and I'm just about at the point where I can make a red circle without having to look stuff up.  :)

[09:04:03.0000] <AryehGregor>
(except the namespace)

[09:04:04.0000] <Wilto>
I put borders on things for a living; I like things to be simple.

[09:32:00.0000] <AryehGregor>
. . . I admit that now I'm getting annoyed at git.  Is there really no way to set the default number of context lines for patches?

[09:36:00.0000] <AryehGregor>
Also, git doesn't figure out copies.

[09:36:01.0000] <AryehGregor>
That's one good thing about hg.

[09:36:02.0000] <AryehGregor>
Sigh . . .

[09:37:00.0000] <AryehGregor>
/me just hates everything now indiscriminately.

[09:38:00.0000] <dglazkov>
/me offers AryehGregor a hug

[10:08:00.0000] <AryehGregor>
I also forgot how it takes at least five minutes to find anything in a git man page, because every command has 200 options, half of them documented by reference to other man pages.  Most of which seem gratuitous, insofar as I've never missed them in hg.

[10:08:01.0000] <AryehGregor>
The not-tracking-renames thing is very bad when submitting patches to a non-git project.  I think for Mozilla, I'll stick to hg.

[10:08:02.0000] <AryehGregor>
When in Rome . . .

[10:09:00.0000] <AryehGregor>
It's not really nice to submit patches that won't work correctly in hg just because I generated them using git because I don't like hg.

[10:54:00.0000] <jamesr_>
how does 'null' convert to an optional double parameter?

[10:55:00.0000] <jamesr_>
someone's passing 'null' in for the maxWidth parameter of canvas2d's fillText(). trying to figure out if IDL says that it's ignored, or if it converts to 0

[10:55:01.0000] <Ms2ger>


[10:56:00.0000] <Ms2ger>
Er

[10:56:01.0000] <Ms2ger>
Or NaN

[10:56:02.0000] <Ms2ger>
/me checks

[10:56:03.0000] <Ms2ger>
jamesr_, +0

[10:56:04.0000] <Ms2ger>
(undefined would be NaN)

[10:57:00.0000] <Ms2ger>
And http://es5.github.com/#x9.3 is the relevant spec

[10:58:00.0000] <jamesr_>
well

[10:58:01.0000] <jamesr_>
the HTML spec says "If maxWidth is present ..."

[10:58:02.0000] <Ms2ger>
It is

[10:58:03.0000] <jamesr_>
what if you say fillText(..., undefined) ?

[10:59:00.0000] <jamesr_>
is it still present, even though the IDL is declared optional?

[10:59:01.0000] <Ms2ger>
It is present

[10:59:02.0000] <jamesr_>
so wait

[10:59:03.0000] <Ms2ger>
Unless

[10:59:04.0000] <jamesr_>
if i had a function with parameters (optional double a, optional double b), how the flip do i call it without 'a' being present?

[10:59:05.0000] <Ms2ger>
[TreatUndefinedAs=Missing] is on the argument

[10:59:06.0000] <Ms2ger>
You don't

[10:59:07.0000] <jamesr_>
void fillText(DOMString text, double x, double y, optional double maxWidth);

[11:00:00.0000] <jamesr_>
ok so i'd have to declare it void foo(optional [TreatUndefinedAs=Missing] double a, optional double b) then do foo(undefined, 1.0) ?

[11:00:01.0000] <jamesr_>
hmmmmm

[11:00:02.0000] <Ms2ger>
You can't omit a if you're passing b

[11:00:03.0000] <Ms2ger>
Impossible

[11:01:00.0000] <jamesr_>
so now i'm not sure what fillText(..., undefined) should do. the first line of the the fillText algorithm reads "If maxWidth is present but less than or equal to zero, return without doing anything; abort these steps."

[11:01:01.0000] <jamesr_>
so if someone passes undefined, that turns into NaN. NaN <= 0 is false, but so is NaN > 0

[11:02:00.0000] <Ms2ger>
Ah

[11:02:01.0000] <Ms2ger>
But there's a catch-all somewhere

[11:02:02.0000] <Ms2ger>
Except where otherwise specified, for the 2D context interface, any method call with a numeric argument whose value is infinite or a NaN value must be ignored.

[11:07:00.0000] <jamesr_>
so what's that mean for null?

[11:08:00.0000] <Ms2ger>
null turns into +0

[11:13:00.0000] <Hixie>
jamesr_: (optional double a, optional double b) is just shorthand for declaring three overloaded operations with (), (double a), and (double a, double b) respectively

[11:18:00.0000] <Ms2ger>
readonly attribute (DOMString or ArrayBuffer)? result

[11:18:01.0000] <Ms2ger>
That works, right?

[11:23:00.0000] <jamesr_>
hm ok

[11:48:00.0000] <jwalden>
/me sees days-ago scrollback talking about Mozilla (?) spewing CSS warnings for vendor-prefixed stuff and is quite sure we don't do that (except if it's a -moz- property we don't recognize), seeing as he implemented it

[11:50:00.0000] <jwalden>
well, more day-ago

[11:59:00.0000] <matjas>
hsivonen: can you explain why in old Firefox (3.6) the iframe gets rendered? <style>*{font-family:'</style <iframe onload=alert(1)//';</style>

[12:00:00.0000] <matjas>
i understand why `</style` followed by space acts as end tag for the <style> element

[12:02:00.0000] <Ms2ger>
matjas, treating the < as part of the tag name is an IEism, Gecko would imply a > when seeing a <

[12:06:00.0000] <Wilto>
So this is where you get your dark and arcane secrets, matjas.

[12:06:01.0000] <matjas>
HTML5 parsers seem to discard the iframe in <style>*{font-family:'</style <iframe onload=alert(1)>';</style>

[12:07:00.0000] <matjas>
not sure I understand why though

[12:07:01.0000] <Ms2ger>
Because it's an attribute in an end tag

[12:07:02.0000] <matjas>
i thought </style + space = ETAGO, which would close the element

[12:08:00.0000] <matjas>
but it only does so after the >, i see

[12:08:01.0000] <matjas>
that makes sense

[12:08:02.0000] <matjas>
thanks Ms2ger :)

[12:08:03.0000] <Ms2ger>
ETAGO?

[12:16:00.0000] <matjas>
well, </ = etago

[12:16:01.0000] <matjas>
and </style and </script followed by a space character, >, or / will close their respective opening tag

[12:16:02.0000] <matjas>
i knew that much

[14:38:00.0000] <zewt>
This webpage has disabled automatic filling for this form. <- yeah, uh, webpages shouldn't be able to do that. heh

[14:39:00.0000] <zewt>
This webpage has deliberately inconvenienced you.

[15:36:00.0000] <Hixie>
zewt: aw man i hate that

[15:36:01.0000] <Hixie>
zewt: i made sure to spec autocomplete="off" as optional, but no browser lets me override it as far as i can tell :-(


2012-02-11
[16:04:00.0000] <tantek_>
Hixie - this kind of problem has made me consider using CSS for such things, such that the user could always override such dumb behavior with their user style sheet.

[16:05:00.0000] <tantek_>
(zewt's autocomplete=off frustrations)

[16:12:00.0000] <astro73>
Sorry for being OT, is there a channel for WebSockets?

[16:13:00.0000] <Hixie>
astro73: this is on-topic if you don't mind people being snarky about it at the same time :-)

[16:13:01.0000] <Hixie>
astro73: #html5 might be better if you have authoring help (as opposed to wanting to discuss the spec itself, where this channel is very much the right one)

[16:14:00.0000] <astro73>
I'm actually looking for software supporting it

[16:14:01.0000] <Hixie>
client or server?

[16:15:00.0000] <astro73>
a reverse proxy capable of: SSL unwrapping, dispatch by URL, and can handle WebSockets

[16:15:01.0000] <Hixie>
ah, dunno then

[16:19:00.0000] <astro73>
I know that nginx and haproxy can't do dispatch and websocket at the same time. mod_proxy and apsis's pound can't handle ws (although there was an article once that said pound could)

[16:25:00.0000] <astro73>
but https://github.com/nodejitsu/node-http-proxy looks promising

[16:25:01.0000] <crankharder>
in indexedDB, everything is even driven, so, var request = window.indxedDB.open('foo') ; request.onsuccess = function(){alert('do stuff')}.  One thing I've never understood is what the timing is like of calling open(), which just returns a 'request' and then setting the onsuccess handler afterwards.  at no point do I see where the opening of the DB is triggered.  i think i'm missing something fundamental about how indxedDB events are 

[16:25:02.0000] <crankharder>
example: https://developer.mozilla.org/en/IndexedDB/IDBFactory#Example

[16:28:00.0000] <TabAtkins>
Events can't fire while your code is running - they need to wait for you to yield back to the event loop.  So, as long as you don't put the "request.onsuccess = ..." line in a setTimeout or something, you'll be fine.

[16:28:01.0000] <TabAtkins>
The listeners will be wired up before any events fire, and the events will go off automatically sometime after you yield to the event loop.

[16:29:00.0000] <crankharder>
so the event wont fire till after i set onsuccess then?

[16:29:01.0000] <TabAtkins>
Yes.

[16:29:02.0000] <TabAtkins>
It won't fire until your currently-executing function is completely done, actually.

[16:30:00.0000] <crankharder>
ok that makes sense

[20:37:00.0000] <llrcombs>
http://arstechnica.com/microsoft/news/2012/02/no-third-party-code-on-the-windows-on-arm-desktop-means-no-plugins-for-internet-explorer.ars <-- No Flash on Windows on ARM, period. YES!

[01:46:00.0000] <jgraham>
So, at risk of causing alarm and confusion, I made a html5lib release

[01:46:01.0000] <jgraham>
I even fixed a bug!

[01:46:02.0000] <jgraham>
There are a couple of remaining issues in the tests though, so I didn't call it 1.0

[01:48:00.0000] <jgraham>
I am quite tempted to swicth the repo to git so that the whole thing can be mirrored on github since people seem to assume that anything that's not on github doesn't exist these days

[01:50:00.0000] <jgraham>
(Google code still has better tools e.g. side-by-side diff views, which might be important if we ever used them)

[02:41:00.0000] <Philip`>
(It's odd that a decentralised VCS has by far the most centralised community of any VCS)

[02:51:00.0000] <jgraham>
(I'm not sure it's really the VCSs that have a community though)

[03:22:00.0000] <Taggnostr>
if we have </li</ul>, we start from http://www.w3.org/TR/html5/tokenization.html#end-tag-open-state , 'l' is a latin small letter, so we move on to "tag name state", we follow that and consume the  i and the < as part of the tag name, but then there's a /, and that apparently means "Switch to the self-closing start tag state."

[03:23:00.0000] <Taggnostr>
isn't this wrong considering that </li is already an end tag?

[03:27:00.0000] <Philip`>
I think it's just the state name that's misleading

[03:28:00.0000] <Philip`>
(Maybe "self-closing tag state" would be clearer)

[03:29:00.0000] <Taggnostr>
so in this case if I go to the "self-closing start tag state" I see 3 options, if there's a > I will emit what I got so far (as an end tag), if not I keep moving on

[03:30:00.0000] <Taggnostr>
so in this case I should go back and keep consuming till ul, and then emit 'li</ul', right?

[03:30:01.0000] <Taggnostr>
"self-closing tag state" is a bit better but afaiu there's nothing self-closing here

[03:31:00.0000] <Philip`>
"self-closing start tag or bogus end tag that looks quite like a self-closing start tag state"

[03:31:01.0000] <Taggnostr>
where "here" would be e.g. </li/> or </li</>ul>

[03:32:00.0000] <Philip`>
From self-closing start tag state, it says to reconsume the "/" in before attribute name state

[03:32:01.0000] <Taggnostr>
if it's not followed by >

[03:33:00.0000] <Philip`>
Oops, not "/"

[03:33:01.0000] <Philip`>
In self-closing start tag state it will see the "u" next, and reconsume that in before attribute name state

[03:34:00.0000] <Philip`>
which will make it create an attribute named "ul"

[03:35:00.0000] <Taggnostr>
so with </li</ul> I should emit a closing 'li</' and discard an 'ul' attribute, right?

[03:35:01.0000] <Philip`>
The tag name will be "li<", because the tag name state does not append the "/" to the tag name

[03:36:00.0000] <Taggnostr>
indeed

[03:37:00.0000] <Philip`>
("l" appends, "i" appends, "<" appends, "/" causes switch to self-closing state, "u" gets reconsumed in before attribute name state, "u" starts attribute name, "l" appends, ">" ends tag, I think)

[03:38:00.0000] <Taggnostr>
makes sense

[03:38:01.0000] <Philip`>
Really? Something must be wrong

[03:38:02.0000] <Philip`>
HTML should never make sense :-p

[03:38:03.0000] <Taggnostr>
s/makes sense/sounds like a correct interpretation of the standard/

[03:39:00.0000] <Philip`>
Matches the output of http://livedom.validator.nu/?%3C!DOCTYPE%20html%3E%0D%0A%3Cli%3C%2Ful%3E too

[03:39:01.0000] <Taggnostr>
what's "LIU00003C" ?

[03:40:00.0000] <Taggnostr>
U00003C == <?

[03:40:01.0000] <Philip`>
Yes

[03:40:02.0000] <Taggnostr>
why that weird notation?

[03:40:03.0000] <Philip`>
document.createElement("li<") is not allowed

[03:41:00.0000] <Philip`>
(and that DOM viewer uses createElement)

[03:41:01.0000] <Taggnostr>
why not LI\x3C or LI\u003c?

[03:41:02.0000] <Philip`>
You probably can't have "\" either

[03:41:03.0000] <Taggnostr>
does createElement even recognize U00003C as <?

[03:42:00.0000] <Taggnostr>
actually "LI\x3C" should be exactly the same as "LI<"

[03:43:00.0000] <Philip`>
No, it's just a relatively unambiguous way to represent the name without making createElement throw exceptions

[03:43:01.0000] <Philip`>
(Also it matches http://www.whatwg.org/specs/web-apps/current-work/multipage/the-end.html#coercing-an-html-dom-into-an-infoset )

[03:45:00.0000] <Taggnostr>
it's the first time I see this notation

[03:47:00.0000] <Philip`>
I don't know if anyone in the world other than hsivonen uses that notation

[04:13:00.0000] <krijn>
Five years, wow

[04:14:00.0000] <krijn>
People, I might have to stop the IRC logging thingy

[04:14:01.0000] <smaug____>
no no

[04:15:00.0000] <krijn>
We're moving away from this office, and I don't know if I can hook up my silly server somewhere else

[04:15:01.0000] <smaug____>
I'll buy you a beer if you keep logging IRC.

[04:15:02.0000] <krijn>
Beer won't pay the rent here, unfortunately :)

[04:16:00.0000] <Philip`>
How about buying a server? :-)

[04:16:01.0000] <smaug____>
are you sure? Just make the landlord to drink it  (and perhaps few other beers)

[04:16:02.0000] <krijn>
I'll probably move my domain to a static place, so the urls will just keep on working

[04:16:03.0000] <smaug____>
krijn: what is the schedule for the move?

[04:17:00.0000] <krijn>
Somewhere between April and July

[04:17:01.0000] <smaug____>
would be great to get replacement for your logging before that

[04:17:02.0000] <smaug____>
ok

[04:17:03.0000] <smaug____>
hmm, perhaps Mozilla could do the logging

[04:17:04.0000] <krijn>
Perhaps we can transfer the internet account as well, then it's not a problem and I'll just hook it up in the new place

[04:18:00.0000] <krijn>
But at least that will take some days off :)

[04:19:00.0000] <krijn>
</dramaqueen>

[04:22:00.0000] <Philip`>
krijn: If you're unable to keep running it on your server, would it be feasible to move the data and code to someone else's server?

[04:22:01.0000] <krijn>
Of course

[04:23:00.0000] <krijn>
I'll do that anyway

[04:23:01.0000] <krijn>
So the data won't be lost

[04:23:02.0000] <krijn>
But the logging itself, don't know

[04:27:00.0000] <krijn>
(Can't run IRC software on my normal server, that's why I'm running kh.nl on my home machine)

[04:30:00.0000] <svl>
How flexible is the display software? Can it easily be changed to parse logs in a slightly different format? Cause then you could run an existing irc bot, and use its logs as input

[04:31:00.0000] <krijn>
It only requires some naming conventions now

[04:32:00.0000] <krijn>
A log file for each channel for each day, only requiring line endings in the file itself

[04:34:00.0000] <svl>
Sounds like that should be a workable solution, then. Or is the limitation to running IRC software on your normal server not technical, but rather that your hosting provider doesn't allow it?

[04:35:00.0000] <krijn>
Both, I think, plus my brain doesn't get how that would work

[04:35:01.0000] <krijn>
This Windows + mIRC configuration, I get how that works :)

[04:42:00.0000] <krijn>
Anyways, I'll make sure the URLs will just keep on working. Worst case scenario is I won't flood the interwebs with new ones starting somewhere between April and July.

[04:44:00.0000] <Philip`>
You say "flood the interwebs", I say "bless the world with our pearls of wisdom"

[04:45:00.0000] <krijn>
About 300MB of it, yeah

[04:46:00.0000] <Philip`>
We offer very many pearls

[04:46:01.0000] <krijn>
:)

[05:03:00.0000] <kennyluck>
We need to the logger….

[05:47:00.0000] <annevk>
hmm yeah we should sort something out

[05:48:00.0000] <annevk>
maybe the W3C can help out, I heard shepazu was looking into better loggging

[05:51:00.0000] <Taggnostr>
Philip`, in case you want to take a look, this is the result: http://bugs.python.org/review/13993/patch/4169/14344?context=10&column_width=80

[05:52:00.0000] <Taggnostr>
I didn't implement the full attribute parsing for the closing tag

[06:12:00.0000] <Philip`>
Taggnostr: How does <img src="URL><//img></html</html> produce a comment "/img" (if I'm reading the test correctly)? The src attribute value ought to continue until EOF

[06:18:00.0000] <Philip`>
Taggnostr: You should never get \r in the element name, because http://www.whatwg.org/specs/web-apps/current-work/multipage/parsing.html#preprocessing-the-input-stream converts any CR or CRLF into LF before the tokeniser sees it

[06:18:01.0000] <Philip`>
(which is why the tokeniser algorithm doesn't bother saying to treat CR like any other whitespace character)

[06:20:00.0000] <Philip`>
If you don't do that input stream preprocessing, and don't handle \r in an intentionally spec-violating way, then you won't be tokenising input like "</li\r\n>" in a sensible way

[06:23:00.0000] <Taggnostr>
Philip`, indeed

[06:25:00.0000] <Taggnostr>
and I don't know about the first question (yet)

[06:25:01.0000] <kennyluck>
python…. why doesn't Python just switch to html5lib ?

[06:25:02.0000] <Taggnostr>
for the reasons I said yesterday

[06:25:03.0000] <Taggnostr>
it might actually happen at some point in the future

[06:26:00.0000] <kennyluck>
/me is reading logs. So apparently the log is very useful.

[06:28:00.0000] <Philip`>
/me wonders whether general Python people agree that they should be parsing HTML compatibly with the HTML5 parsing algorithm, and the question is just how to best implement that (e.g. adopting html5lib vs evolving HTMLParser), or whether the concept of HTML5 isn't accepted yet

[06:30:00.0000] <annevk>
html5lib is presumably too slow?

[06:30:01.0000] <Taggnostr>
we don't have any "html expert" except me and a couple of other devs that more or less care about html5, but moving toward HTML5 is fine

[06:31:00.0000] <Taggnostr>
and right now it's "easier" to fix the existing parser rather than adding a new one

[06:31:01.0000] <Taggnostr>
even if we add html5lib, that will happen for 3.3/3.4, and what I'm fixing also goes to 2.7/3.2

[06:32:00.0000] <annevk>
yay for you then :)

[06:33:00.0000] <kennyluck>
I'll go for porting html5lib to C if we really want to make it fast.

[06:33:01.0000] <gsnedders>
annevk: html5lib isn't that much slower than HTMLParser, IIRC

[06:34:00.0000] <gsnedders>
And html5lib needs a fair bit of work to get it fully working under Py3.

[06:34:01.0000] <Taggnostr>
I was thinking about writing a lightweight version of html5lib without error reporting, but that's just a thought, I haven't checked if html5lib is really slower and if removing the error reporting will make it faster

[06:35:00.0000] <annevk>
kk

[06:37:00.0000] <kennyluck>
That makes sense. I don't think general users of this library care about error reporting. They just want a data mining tool compatible with the browsers.

[06:37:01.0000] <Philip`>
If I remember correctly, what made it slow was scanning through every character in the string (either in a loop or with regexps)

[06:37:02.0000] <Taggnostr>
the idea is to use an approach similar to HTMLParser, so having a regex that matches everything that is valid, rather than going through several states and different functions every time

[06:37:03.0000] <Philip`>
which is unavoidable when you're parsing a string

[06:37:04.0000] <Philip`>
All the actual token generation and error detection and tree construction etc was a minor part of the total cost

[06:38:00.0000] <Taggnostr>
but what seems problematic to me is all the functions calls involved with the state changes

[06:38:01.0000] <Taggnostr>
(I might be completely wrong though)

[06:42:00.0000] <Taggnostr>
Philip`, I fixed the \r now, thanks for spotting it!

[06:44:00.0000] <Philip`>
I think the actual number of states has little effect on performance, so the best way to test performance is probably by using a trivial subset of the syntax (I just did characters and tag names (no attributes, no error handling, etc) when experimenting ages ago) and then measure what's the fastest way of generating tokens

[06:44:01.0000] <Philip`>
and then all the real states can be added on afterwards in the same style

[06:44:02.0000] <Taggnostr>
Philip`, usually function calls are expensive, and for something as simple as <foo attr="value"> there are like a dozen of states

[06:45:00.0000] <Taggnostr>
so a dozen function calls, and a single regex should be much faster than that

[06:46:00.0000] <Taggnostr>
unless you keep all in a huge loop with a switch inside

[06:46:01.0000] <Taggnostr>
s/all/everything/

[06:48:00.0000] <gsnedders>
Taggnostr: Nowadays there's no real bottleneck in html5lib under CPython, AFAIK

[06:51:00.0000] <Taggnostr>
ok, I haven't really looked at the performances

[06:52:00.0000] <Taggnostr>
gsnedders, what is missing to html5lib in order to work under py3?

[06:52:01.0000] <Philip`>
I think the main thing that's been missing is a reason to care about Python 3

[06:53:00.0000] <Taggnostr>
but does it need to be ported? is it ported already but not up to date? or the port is more or less working but still incomplete?

[06:53:01.0000] <Philip`>
(or to care enough to sort out the byte/character-related issues that 2to3 can't handle, or something like that)

[06:54:00.0000] <Taggnostr>
on py3 html.parser only works with unicode

[06:54:01.0000] <Philip`>
If I remember correctly (which I probably don't), it was ported partly with 2to3 and partly by hand, several years ago, and probably never worked properly, and then was not maintained

[06:55:00.0000] <Taggnostr>
2to3 usually don't touch bytes/string because on py2 they were used for both

[06:55:01.0000] <Taggnostr>
it might be an interesting gsoc project

[06:56:00.0000] <Philip`>
I imagine it's important to have a strategy for maintaining both branches in parallel, else one of them will quickly fall behind again

[06:56:01.0000] <Taggnostr>
how active is html5lib?

[06:57:00.0000] <Philip`>
http://code.google.com/p/html5lib/updates/list says not very

[06:57:01.0000] <Taggnostr>
I guess that if I get involved in this I will end up maintaining the py3 port

[06:58:00.0000] <Philip`>
I suppose it's easy for spec-related changes, since they will add tests and it's easy to verify that both versions pass all the tests

[06:58:01.0000] <gsnedders>
Taggnostr: 2to3 creates something that fails more TCs than under Python2.

[06:58:02.0000] <Taggnostr>
if it also gets included in the stdlib things will be a bit different, because the version included in the stdlib will become the main one, and possibly things will be backported to an external py2 version

[06:59:00.0000] <Taggnostr>
gsnedders, that's normal, 2to3 leaves many ambiguos things (like str/unicode) untouched

[07:01:00.0000] <zewt>
why am I continually surprised by the stupid things people do on the web?

[07:02:00.0000] <zewt>
this utility autopay setup form first prevents me from pasting my routing/account number, then makes me enter it twice (since hey, you can't paste it, so you're likely to make an error!)

[07:09:00.0000] <Taggnostr>
it's just saving you from computer-made copy errors and/or buggy clipboards

[07:19:00.0000] <jgraham>
Taggnostr: I don't think porting html5lib to Python 3 would be that much work, but there are a few non-trivial issues

[07:19:01.0000] <jgraham>
mostly related to encoding ofc

[07:32:00.0000] <StoneCypher>
When I write pixels to a <canvas>' imageData, they display as expected.  When I try to read them back, the whole buffer is 0.  Am I missing something?  Do I need to write the imageData to the context then make a new one, or something?

[07:33:00.0000] <Philip`>
StoneCypher: How are you trying to read them back?

[07:33:01.0000] <StoneCypher>
      var r1 = imageData.data[index+0];    // etc

[07:33:02.0000] <Philip`>
Where are you getting that imageData object from?

[07:33:03.0000] <StoneCypher>
      imageData             = tgtContext.createImageData(uWidth, uHeight);

[07:33:04.0000] <StoneCypher>
      tgtContext            = tgtCanvas.getContext('2d');

[07:33:05.0000] <StoneCypher>
those are out of order

[07:34:00.0000] <StoneCypher>
the imageData.data buffer is the right size

[07:34:01.0000] <StoneCypher>
it's just all zeroes, instead of the stuff that's actually on screen

[07:34:02.0000] <Philip`>
createImageData is for creating an empty ImageData object (so you can fill in its content then putImageData it)

[07:34:03.0000] <StoneCypher>
oh

[07:34:04.0000] <Philip`>
If you want to initialise it with the current canvas content, you have to use getImageData

[07:34:05.0000] <StoneCypher>
oh :)

[07:35:00.0000] <Philip`>
(and it makes a copy of the data, it's not a live view)

[07:35:01.0000] <Philip`>
(so do getImageData after all your drawing)

[07:35:02.0000] <StoneCypher>
ok cool

[07:35:03.0000] <StoneCypher>
/me had tried that, but with create, as a possibility already, so

[07:35:04.0000] <StoneCypher>
that should be straightforward, sec

[07:38:00.0000] <StoneCypher>
hooray!

[07:38:01.0000] <StoneCypher>
thank you :)

[07:39:00.0000] <StoneCypher>
and now on to fixing bugs i understand.

[08:07:00.0000] <StoneCypher>
Philip`: do you know a way to get .getImageData to include the color of the tag's background, or do i need to switch to setting that in the pixel data instead

[08:08:00.0000] <StoneCypher>
oh, maybe context.globalCompositeOperation = "destination-over";

[08:10:00.0000] <StoneCypher>
nope.

[08:11:00.0000] <StoneCypher>
hell with it, i'll just set it in the pixel data

[08:28:00.0000] <Philip`>
StoneCypher: By "the tag's background", do you mean the colour that shows through when the image data in the canvas is transparent?

[09:00:00.0000] <Taggnostr>
jgraham, do you think a gsoc project is too much for that?

[09:16:00.0000] <joancreus>
hmm. what's the general opinion on a new kind-of standard, a "navigational API". it should allow to unify site links. it could allow to format each entry (i.e. apply CSS) in PCs/laptops, but it could also be used to create custom context menus (i.e. next to Firefox button, a Wikipedia button) and also, for mobile phones, create websites which can make use of the "navigation" button (the...

[09:16:01.0000] <joancreus>
...usual interface to get to different options)

[09:24:00.0000] <webben>
joancreus: Not sure I get it. What user problem are you trying to solve? Does @rel not solve it?

[09:25:00.0000] <joancreus>
webben: navigation in mobile phones , basically

[09:25:01.0000] <joancreus>
it's a mess. in a PC, you got it at the top, or in the sides

[09:25:02.0000] <joancreus>
with mobile phones, you got it either on top, or on bottom

[09:25:03.0000] <joancreus>
what i suggest is that mobile phones should implement

[09:25:04.0000] <joancreus>
that when clicking the nav button on the phone, the links appear

[09:26:00.0000] <joancreus>
pc browsers could implement similar things, or keep nav links as they are, or adding a menu item for the website

[09:26:01.0000] <webben>
joancreus: sounds like a problem that can be solved by mobile ua's using <nav> to identity navigation links and putting them wherever they want

[09:27:00.0000] <webben>
joancreus: in practice the current trend seems to be for mobile UAs to mimic the presentation familiar to users from desktop UAs so they may not be inc;ined to use <nav> that way tho

[09:27:01.0000] <joancreus>
hmm but do mobile browsers implement such a thing? it'd be great

[09:27:02.0000] <joancreus>
webben: regarding what i said, imagine the wikipedia homepage

[09:27:03.0000] <joancreus>
there are a ton of links on the sidebar

[09:28:00.0000] <joancreus>
which could be grouped semantically (even inside nav); mobile browsers could implement what i was saying

[09:28:01.0000] <joancreus>
anyway, never mind, just random thoughts


2012-02-12
[19:35:00.0000] <zewt>
gah

[19:35:01.0000] <zewt>
does amazon use sync xhr? heh

[19:36:00.0000] <zewt>
tethering on my phone and having chrome freeze randomly searching on amazon

[21:49:00.0000] <smartie2>
>> "check ecma"

[03:51:00.0000] <jgraham>
Taggnostr: I can't imagine that making a Python 3 port of tml5lib would take more than a day or two. Maybe "make a Python 3 port and an API that acts a a drop-in replacement for HTMLParser" would be more reasonable. Well I imagine that adding that would also be pretty trivial, but enabling the parser to work with a streaming API for minimal memory consumption would be a little harder. Still seems like it would be ~10 days work including learning all 

[03:52:00.0000] <gsnedders>
(note that possibly for streaming you may have to buffer the whole document)

[03:52:01.0000] <gsnedders>
(as nodes can be moved and inserted earlier in the tree)

[03:57:00.0000] <jgraham>
Well looking at it, it seems that HTMLParser doesn't tell you where nodes were inserted

[04:00:00.0000] <jgraham>
So the only thing that you need the treebuilder for is to handle things like <script><div></script> and <sircle/><svg><circle/>

[04:00:01.0000] <jgraham>
s/sircle/circle/

[04:02:00.0000] <jgraham>
It is prety tempting to just hook into the tokenizer, ignore the treebuilder and say that it is an application-level concern to realise that if you just saw a <script>, a <div> tag is actually text

[04:05:00.0000] <gsnedders>
jgraham: But the treebuilder changes tokenizer state.

[04:06:00.0000] <jgraham>
gsnedders: I know

[04:06:01.0000] <gsnedders>
/me blames foreign content :(

[04:06:02.0000] <jgraham>
But the existing implementation seems to be horribly broken

[04:06:03.0000] <jgraham>
<script><div> -> 1 start tag

[04:06:04.0000] <jgraham>
<xmp><div> -> 2 start tags

[04:08:00.0000] <jgraham>
It seems quite possible to just find all the special cases that the existing implementation knows about, hardcode them in to the HTMLParser api, use that to change the tokenizer state, and accept that there are probably some corner cases where everything will break

[04:10:00.0000] <jgraham>
So far the list of special cases seems to be "script", "style"

[04:11:00.0000] <jgraham>
In fact that is exactly the list of special cases

[04:12:00.0000] <StoneCypher>
those two tags can't contain markup

[04:12:01.0000] <StoneCypher>
so that's not actually broken

[04:12:02.0000] <StoneCypher>
that's correct

[04:12:03.0000] <StoneCypher>
there are others too

[04:12:04.0000] <StoneCypher>
<object>, <embed>

[04:12:05.0000] <StoneCypher>
et cetera

[04:12:06.0000] <StoneCypher>
anything that contains <!cdata[[

[04:12:07.0000] <StoneCypher>
or whatever it is

[04:14:00.0000] <jgraham>
StoneCypher: Right, script and style switching the tokenizer state is right. What's wrong is e.g. xmp *not* doing it

[04:14:01.0000] <bga>
oh somebody uses xml islands

[04:15:00.0000] <StoneCypher>
bga: not since like 2004

[04:15:01.0000] <StoneCypher>
bga: i mean, back in the dark ages, sure

[04:15:02.0000] <StoneCypher>
jgraham: ah.  (i don't actually know what xmp does_)

[04:16:00.0000] <StoneCypher>
jgraham: sorry if i misunderstood :)

[04:16:01.0000] <bga>
StoneCypher but https://developer.mozilla.org/en/Using_XML_Data_Islands_in_Mozilla

[04:23:00.0000] <StoneCypher>
wow.

[04:23:01.0000] <StoneCypher>
so xml islands are back-ish, as a legit standard now?

[04:24:00.0000] <StoneCypher>
eenteresting.

[04:24:01.0000] <StoneCypher>
i bet the microformats people adore this.

[04:59:00.0000] <jgraham>
gsnedders, Taggnostr: Something like https://gist.github.com/1808356

[04:59:01.0000] <jgraham>
Not production quality ofc, but more or less does the same as HTMLParser, but using the html5lib tokenizer

[05:07:00.0000] <jgraham>
(the hard part would be making the incremental feeding work)

[14:03:00.0000] <yuhong>
BTW, it is interesting that Ian Hickson and Chris Wilson works at the same company now.


2012-02-13
[23:51:00.0000] <MikeSmith>
http://www.w3.org/2011/tracking-protection/drafts/tracking-dnt.html#status-resource looks pretty complicated to implement and deply

[23:51:01.0000] <MikeSmith>
*deploy

[01:19:00.0000] <zcorpan>
StoneCypher: <xmp> is not <xml>

[01:24:00.0000] <jgraham>
But it could be components!

[01:24:01.0000] <jgraham>
<xmp type="html"></xmp>

[01:24:02.0000] <jgraham>
I wonder if I should seriously propose that

[01:30:00.0000] <annevk>
hmm maybe we should update the note in http://dvcs.w3.org/hg/domcore/raw-file/tip/Overview.html#dom-node-ownerdocument

[01:30:01.0000] <annevk>
even though it is true it is the document itself, you will get back null

[01:46:00.0000] <annevk>
http://www.tbray.org/ongoing/When/201x/2012/02/12/Schema-dot-org-markup cares about well-formed, transmits as text/html...

[01:46:01.0000] <zcorpan>
MikeSmith++ http://platform.html5.org/history/

[01:47:00.0000] <MikeSmith>
zcorpan: yeah, got a long way to go on that one though

[01:47:01.0000] <zcorpan>
wasn't type=tel dropped and later added again?

[01:48:00.0000] <MikeSmith>
yeah

[01:48:01.0000] <MikeSmith>
I think so

[01:48:02.0000] <MikeSmith>
don't know whether it's worth noting that on that page not

[01:48:03.0000] <annevk>
uri got renamed to url after I realized uri is not what I meant to propose

[01:49:00.0000] <MikeSmith>
oh that I should definitely note the name changed

[01:49:01.0000] <annevk>
might not have happened until summer 2005, not sure

[01:49:02.0000] <MikeSmith>
in other news I wonder if/how I can get IRC clients to not disconnect after 4 minutes

[01:50:00.0000] <wilhelm_>
screen + irssi

[01:50:01.0000] <gsnedders>
Heh, amusing how much from WA1.0 was droppd

[01:50:02.0000] <gsnedders>
*dropped

[01:51:00.0000] <jgraham>
You can also write perl scripts that will respond "screen + irssi" for all lines matching "/IRC client/ig"

[01:51:01.0000] <zcorpan>
maybe we should use the longdesc approach for everything that was dropped

[01:52:00.0000] <zcorpan>
screen + irssi

[01:59:00.0000] <Mike^Droid>
Anyway, seems better now

[03:43:00.0000] <annevk>
is using XMLHttpRequest's origin for responseXML actually a good idea?

[03:43:01.0000] <annevk>
how do you go about testing the implications?

[03:47:00.0000] <jgraham>
Is there some API I can't think of right now that will allow me to run the resolve a url algorithm with a custom base/url?

[03:48:00.0000] <annevk>
jgraham: new URL(url, base) is the planned API

[03:48:01.0000] <jgraham>
That sounds nice.

[03:48:02.0000] <zcorpan>
for now there's <a href="url" xml:base="base">

[03:48:03.0000] <jgraham>
Pity I don't live in the future

[03:48:04.0000] <jgraham>
Yeah, that was the option I was thinking of

[03:49:00.0000] <jgraham>
It had the string "xml:" in it though which wasn't making me happy :)

[03:50:00.0000] <zcorpan>
you can avoid that string if you use setAttributeNS

[03:51:00.0000] <jgraham>
That's in fact what I have to do

[03:51:01.0000] <zcorpan>
so why is there no spec for css 'appearance'?

[03:51:02.0000] <jgraham>
It isn't making me any happier

[04:10:00.0000] <roc>
'appearance' is hard to spec

[04:11:00.0000] <wilhelm_>
Interesting. Android has a concept of a density-independent pixel (corresponding to 1 pixel at 160 dpi).

[04:15:00.0000] <roc>
so does CSS

[04:17:00.0000] <annevk>
someone is speccing that?

[04:17:01.0000] <annevk>
what about form controls in general?

[04:20:00.0000] <zcorpan>
roc: i thought about only supporting two values, 'auto' and 'none'

[04:21:00.0000] <roc>
that sounds good in theory but isn't compatible with what -moz-appearance and -webkit-appeareance do

[04:22:00.0000] <roc>
currently we rely on UA rules like "button { -moz-appearance:button; }" etc

[04:22:01.0000] <zcorpan>
right

[04:22:02.0000] <roc>
so we'd have to move all that logic from the UA sheet into engine internals

[04:22:03.0000] <roc>
possibly breaking extensions etc

[04:24:00.0000] <zcorpan>
http://www.whatwg.org/specs/web-apps/current-work/multipage/rendering.html#the-button-element-0

[04:25:00.0000] <annevk>
roc: you'd have to migrate away from the prefix regardless though...

[04:25:01.0000] <Mike^Droid>
Damn

[04:26:00.0000] <zcorpan>
i agree we need to figure out how forms should be implemented across browsers, but what i'm interested in right now is allowing authors to opt out of the replaced element rendering and get a normal CSS box for e.g. checkboxes

[04:27:00.0000] <zcorpan>
whether that is appearance:none or binding:none or something else, i care little

[04:33:00.0000] <roc>
it's easy to see that appearance:none is the right thing for that

[04:33:01.0000] <roc>
the problem is defining any other values :-)

[04:34:00.0000] <roc>
maybe we could just define a reasonable subset that makes sense, and assume vendors will extend it willy-nilly with additional values

[04:37:00.0000] <annevk>
flight cancelled bah

[04:37:01.0000] <annevk>
some bomb threat at Schiphol reportedly? (second hand info; "official" reason was weather)

[04:38:00.0000] <annevk>
brb, gonna find myself a boarding pass for the flight at four

[04:38:01.0000] <zcorpan>
/me hopes annevk survives

[04:48:00.0000] <Mike^Droid|>
zcorpan: survives what?

[04:55:00.0000] <Taggnostr>
is http://hg.python.org/cpython/file/e9cf34d56ff1/Lib/test/test_htmlparser.py#l160 valid in html?

[04:55:01.0000] <Taggnostr>
if I'm reading the standard correctly it shouldn't

[05:01:00.0000] <Philip`>
Taggnostr: DTD internal subsets aren't allowed - http://www.whatwg.org/specs/web-apps/current-work/multipage/syntax.html#the-doctype defines what is valid

[05:02:00.0000] <Philip`>
(and the parser will close the doctype after the "EMPTY>")

[05:04:00.0000] <Taggnostr>
ok, that's what the parser is doing now, so the test was failing

[05:08:00.0000] <Taggnostr>
should <!> emit an empty (bogus) comment token?

[05:10:00.0000] <Taggnostr>
it should be http://www.w3.org/TR/html5/tokenization.html#tag-open-state -> markup declaration open state -> bogus comment state

[05:14:00.0000] <Philip`>
Taggnostr: I believe that is correct

[05:14:01.0000] <Taggnostr>
ok, thanks again!

[05:14:02.0000] <Philip`>
and that's what html5lib's testdata/tokenizer/test3.test says

[05:17:00.0000] <zcorpan>
Mike^Droid:

[05:17:01.0000] <zcorpan>
http://krijnhoetmer.nl/irc-logs/whatwg/20120213#l-677

[05:36:00.0000] <jgraham>
Taggnostr: Did you see https://gist.github.com/1808356 ?

[05:36:01.0000] <jgraham>
Seems like you could use that to check your TCs against html5lib

[05:46:00.0000] <Mike^Droid>
smaug____ I vote for mutation observers work

[05:47:00.0000] <smaug____>
?

[05:47:01.0000] <Mike^Droid>
Bug mail

[05:47:02.0000] <smaug____>
ah, right

[05:47:03.0000] <smaug____>
it is really next in my todo list

[05:48:00.0000] <smaug____>
I was going to implement it long ago, but then something else came up

[05:49:00.0000] <Mike^Droid>
That's what happened with Jonas and xbox

[05:49:01.0000] <Mike^Droid>
I'm

[05:49:02.0000] <Mike^Droid>
Damn

[05:49:03.0000] <Mike^Droid>
Autocorrect

[05:49:04.0000] <smaug____>
xbl

[05:49:05.0000] <Mike^Droid>
Xbl2

[05:49:06.0000] <Mike^Droid>
Yeah

[05:49:07.0000] <jgraham>
Huh? I went to the "revising the W3C process" community group, clicked "join", loggied in, and got a form asking me to accept Charles leaving the group (or something)

[05:50:00.0000] <jgraham>
Was xbox the thing that stopped Jonas implementing XBL2?

[05:52:00.0000] <jgraham>
(I'm not really that sure I want to / can join the group, but that was pretty surprising)

[06:04:00.0000] <annevk>
http://www.nu.nl/binnenland/2739579/bommelder-aangehouden-schiphol.html

[06:04:01.0000] <annevk>
meh

[06:04:02.0000] <annevk>
"Bij de KLM waren geen vertragingen."

[06:04:03.0000] <annevk>
euh

[06:09:00.0000] <niloy>
how can I check from js if an input box with "pattern" attribute is valid or not?

[06:11:00.0000] <annevk>
input.validityState.valid ?

[06:11:01.0000] <annevk>
sorry, input.validity.valid

[06:24:00.0000] <niloy>
annevk, thank you ^_^

[06:32:00.0000] <niloy>
in html5, can I attach a custom error validation function to an input box?

[06:32:01.0000] <annevk>
yeah

[06:32:02.0000] <annevk>
use oninput=""

[06:33:00.0000] <annevk>
and whenever it's invalid you invoke setCustomValidity() iirc

[06:36:00.0000] <niloy>
oh thanks

[07:30:00.0000] <annevk>
I'm starting to think we should just commit Adam Klein's patches

[07:41:00.0000] <annevk>
inbox < 300

[07:42:00.0000] <annevk>
teehee

[07:48:00.0000] <infid>
is there a anything that lets you dynamically type in text anywhere you click on a page, and on top of other objects (think photoshop's text tool)?

[07:50:00.0000] <jgraham>
infid: Well sure, one could trivially write a bookmarklet/extension to allow that

[07:50:01.0000] <jgraham>
I am not aware of any specific ones tough

[07:50:02.0000] <jgraham>
*though

[08:05:00.0000] <infid>
doesn't seem trivial if i can't find one on google, someone would have done it by now

[08:05:01.0000] <infid>
everything ends up being one of those wysiwhg js editors

[08:55:00.0000] <crocket>
When will HTML5 be published as a final standard?

[08:56:00.0000] <ksweeney>
i think it was something like…2018?

[08:56:01.0000] <ksweeney>
(expected)

[08:57:00.0000] <gsnedders>
Whenever there are two implementations that pass each test in the mostly-yet-to-be-written testsuite.

[08:57:01.0000] <jcranmer>
HTML1x :-P

[08:57:02.0000] <jgraham>
When will we find a good reason to care about it's Process status?

[08:57:03.0000] <jgraham>
Hint: we won't

[08:57:04.0000] <jgraham>
argh

[08:57:05.0000] <jgraham>
*its*

[08:57:06.0000] <ksweeney>
2022, my bad

[08:57:07.0000] <gsnedders>
jgraham: Patent policy is arguably a good reason to care.

[08:57:08.0000] <Hixie>
crocket: it's already a final standard

[08:58:00.0000] <Hixie>
crocket: http://whatwg.org/html

[08:58:01.0000] <jgraham>
Sorry everyone

[08:58:02.0000] <crocket>
Hixie: w3c.org only introduces 11th draft.

[08:58:03.0000] <jgraham>
gsnedders: Patent policy is a good reason to press on with the W3C reforms

[08:58:04.0000] <Hixie>
crocket: w3.org is not the only group publishing HTML

[08:58:05.0000] <jcranmer>
the W3C is a bunch of n00bs

[08:58:06.0000] <jcranmer>
/me runs

[08:59:00.0000] <gsnedders>
jgraham: That's a separate point to whether Process status matters.

[08:59:01.0000] <jgraham>
jcranmer: YOu are right to run. A correct sentence would have been "The W3C *are* a bunch of n00bs"

[08:59:02.0000] <jgraham>
gsnedders: Not really

[08:59:03.0000] <ksweeney>
i took his question to mean REC status

[09:00:00.0000] <Hixie>
w3c is just a venue, there are people of all levels of competence there including us :-P

[09:01:00.0000] <jgraham>
I should probably have said "syntactical correct"

[09:01:01.0000] <jgraham>
since I meant to imply nothing about the correctness of the semantics

[09:01:02.0000] <jgraham>
But then it would have been even less funny

[09:01:03.0000] <jgraham>
If you can imagine such a thing

[09:01:04.0000] <jcranmer>
I speak American English, where we treat collective nouns as singular

[09:02:00.0000] <crocket>
http://dev.w3.org/html5/spec/spec.html introduces the standard as Draft 11.

[09:02:01.0000] <Hixie>
crocket: seriously though, HTML is a standard today. Unless you're worried about the patent policy status, you don't have to wait for it to get to the most mature status it'll reach, it's there already, whatever the w3c claim.

[09:03:00.0000] <jcranmer>
what matters is what browsers support, not what standards committees say

[09:03:01.0000] <crocket>
It's the same standard that whatwg advertises as living standard.

[09:03:02.0000] <Hixie>
crocket: on, that says "11 February 2012", that's the date it was last updated :-)

[09:03:03.0000] <gsnedders>
crocket: Did you only start caring about CSS 2.1 last year?

[09:03:04.0000] <gsnedders>
(when it became a REC)

[09:03:05.0000] <Hixie>
crocket: yes, i publish the spec more or less identically on the dev.w3.org site with the w3c header and on the whatwg.org site with the whatwg.org header

[09:04:00.0000] <Hixie>
crocket: they're not quite identical, for political reasons; see the intro of the whatwg.org spec to see what the differences are

[09:04:01.0000] <Hixie>
crocket: despite what the w3c require me to say in the w3c copy (e.g. that it's a "draft"), it's the most mature HTML specification ever written

[09:04:02.0000] <jgraham>
jcranmer: The brokenness of your local English derivative is not my concern ;)

[09:04:03.0000] <Hixie>
crocket: so if you consider HTML4 to have been an acceptable "standard", this is already far beyond that in terms of maturity.

[09:05:00.0000] <crocket>
ok

[09:05:01.0000] <crocket>
w3c is an ass.

[09:05:02.0000] <Hixie>
well again, w3c is just a venue, there are people of all assishnesses there, including us :-)

[09:06:00.0000] <crocket>
How long would it take to learn HTML5?

[09:06:01.0000] <crocket>
16 chapters

[09:06:02.0000] <jcranmer>
jgraham: you crazy English, thinking you have a monopoly on your language

[09:06:03.0000] <crocket>
each chapter is very large in volume.

[09:06:04.0000] <Wilto>
Roughly as long as learning to fix a car.

[09:06:05.0000] <Hixie>
crocket: if you're an author, try http://developers.whatwg.org/ for a sligthly more accessible version

[09:07:00.0000] <Hixie>
crocket: learning HTML is a long journey though, I wouldn't worry about learning all of it at once :-)

[09:07:01.0000] <Hixie>
crocket: you'd want to learn it in conjunction with other technologies like css and javascript

[09:07:02.0000] <Wilto>
crocket: Learning the document outline scheme is a good start. http://html5doctor.com/outlines/

[09:08:00.0000] <crocket>
Perusing HTML5's table of contents makes me puke.

[09:08:01.0000] <Wilto>
If you’re coming from HTML4, I mean.

[09:08:02.0000] <crocket>
I don't even know HTML4, well, either.

[09:08:03.0000] <ksweeney>
just start copying and pasting some code, seeing what happens when you try different orders/attributes etc.

[09:08:04.0000] <Hixie>
crocket: anything we can do to make it less nauseating?

[09:09:00.0000] <crocket>
I just know several basic tags.

[09:09:01.0000] <ksweeney>
THEN start learning to proper way to do things

[09:09:02.0000] <crocket>
Hixie: A proper learning schedule.

[09:09:03.0000] <Hixie>
crocket: ah well it's not meant to teach, it's meant to be a standard :-)

[09:09:04.0000] <Hixie>
crocket: a tutorial would indeed be more useful for you

[09:09:05.0000] <Hixie>
crocket: not sure if there's a good one to recommend

[09:10:00.0000] <Hixie>
did lachy's tutorial thing ever get anywhere?

[09:10:01.0000] <crocket>
There seems to be no authoritative and good tutorial on HTML5.

[09:10:02.0000] <Hixie>
crocket: well it's not really HTML_5_ you'd want a tutorial on, it's just HTML in general

[09:10:03.0000] <ksweeney>
*is amazed someone totally new to HTML found this room*

[09:10:04.0000] <crocket>
Some tutorials may be based on HTML4 mostly.

[09:11:00.0000] <Hixie>
ksweeney: it's mentioned at the top of teh psec :-)

[09:11:01.0000] <Hixie>
crocket: HTML"5" is based on HTML4 mostly -)

[09:11:02.0000] <ferdinandsalis>
By someone new, do you mean me?

[09:11:03.0000] <crocket>
I don't want to learn HTML4 craps.

[09:12:00.0000] <Hixie>
crocket: that's like saying you want to start with calculus and not bother with the algebra craps.

[09:12:01.0000] <Wilto>
Gotta walk before you can run, man. You’re not learning “HTML4,” you’re learning “the basic principles of markup.”

[09:12:02.0000] <Hixie>
what Wilto said

[09:12:03.0000] <crocket>
HTML5 differs in many aspects from HTML4

[09:13:00.0000] <ksweeney>
but the basics are the same

[09:13:01.0000] <ksweeney>
as is most of the syntax

[09:13:02.0000] <crocket>
I just don't want to invest my time twice as much as needed for learning a tutorial.

[09:13:03.0000] <Wilto>
Think of it as “a new version of markup.”

[09:14:00.0000] <Wilto>
You need to learn what markup is and how it works before getting into the specifics.

[09:14:01.0000] <Wilto>
It’s not “Visual Basic” vs. “C++.” You’re not learning two _languages_.

[09:14:02.0000] <Wilto>
You’re learning one, with variations from version to version.

[09:14:03.0000] <ferdinandsalis>
@crocket, so what do you mean by html5?

[09:14:04.0000] <crocket>
What about video tag?

[09:15:00.0000] <ksweeney>
what about it?

[09:15:01.0000] <crocket>
Does it now have a volume attribute?

[09:15:02.0000] <ksweeney>
video tag didn't exist in html4

[09:15:03.0000] <crocket>
ferdinandsalis: I mean a proper HTML5 tutorial.

[09:15:04.0000] <ksweeney>
it's an addition in html5

[09:15:05.0000] <jcranmer>
crocket: >80% of HTML5 is HTML4

[09:15:06.0000] <jcranmer>
and HTML4, as long as you write it correctly, is proper HTML5

[09:16:00.0000] <jcranmer>
where "write it correctly" means "follow what most tutorials will tell you"

[09:16:01.0000] <crocket>
Last time I checked, <video> tag didn't have the volume attribute. The volume had to be controlled via javascript.

[09:16:02.0000] <Wilto>
crocket: It sounds to me like you’re looking for a way to claim you “know HTML5” as quickly as possible, and that… is a worrysome philosophy. That’s not the case, yeah?

[09:17:00.0000] <Hixie>
crocket: it's worth noting that we dropped the "5", in part because it doesn't make sense to think of certain features as "html5"

[09:18:00.0000] <Hixie>
crocket: we've been adding stuff to HTML for years, at what point is that stuff "HTML5" and at what point is it something else?

[09:18:01.0000] <crocket>
Hixie: HTML4 was finalized in 1999.

[09:18:02.0000] <Hixie>
crocket: if you're worried that HTML4 is too old, you'd have to also worry about the things we first added to HTML since then as being too old :-)

[09:18:03.0000] <crocket>
Anything added since then is HTML5 probably.

[09:19:00.0000] <Wilto>
…I’m not sure where we’re going with this.

[09:19:01.0000] <dglazkov>
good morning, Whatwg!

[09:19:02.0000] <Hixie>
crocket: so HTML4, developed in 2 years or so, is one level, but everything added in the 13 years since is the next level? :-)

[09:19:03.0000] <crocket>
What a disappointment, video tag doesn't have a volume attribute in HTML5.

[09:19:04.0000] <crocket>
Hixie: I get the point.

[09:20:00.0000] <Hixie>
crocket: if you have use cases for which you need a new feature, i recommend filing a bug or e-mailing the list

[09:20:01.0000] <crocket>
Hixie: I proposed the volume attribute months ago to the mailing list.

[09:20:02.0000] <crocket>
Nobody seemed to take it seriously.

[09:20:03.0000] <Wilto>
…but you don’t know HTML?

[09:20:04.0000] <crocket>
I know just several tags.

[09:20:05.0000] <Hixie>
crocket: if i haven't replied to it yet then it's still on the list of things for me to process

[09:21:00.0000] <Hixie>
crocket: and if it has a good use case, it will be considered when i get to it

[09:21:01.0000] <crocket>
Hixie: Do you sweep the old archives?

[09:21:02.0000] <Hixie>
crocket: every e-mail that is sent to th ewhatwg list ends up in my imap folders until i reply to it (or decide it didn't have any feedback relating to the specs i edit)

[09:22:00.0000] <crocket>
Hixie : many internet boards prohibit the use of javascript, and users need a way to control initial volumes of <audio> and <video> tags.

[09:22:01.0000] <crocket>
That was the point.

[09:22:02.0000] <ferdinandsalis>
just a random question. what irc clients are you using. any favorites?

[09:22:03.0000] <crocket>
KVIrc

[09:22:04.0000] <Hixie>
crocket: k, i'll have to study that when i get to your e-mail

[09:23:00.0000] <gsnedders>
200% is a valid volume, right?

[09:23:01.0000] <gsnedders>
It seems like something that will still need to be filtered…

[09:27:00.0000] <crocket>
Hixie: http://lists.whatwg.org/htdig.cgi/whatwg-whatwg.org/2011-November/033828.html

[09:28:00.0000] <Ms2ger>
November? He might get to it over the summer, then :)

[09:28:01.0000] <crocket>
There is no hope.

[09:29:00.0000] <Ms2ger>
Rather the opposite, hope is all we have :)

[09:30:00.0000] <Wilto>
“Hope springs eternal in the WHATWG.”

[09:31:00.0000] <Hixie>
crocket: yeah definitely haven't gotten to that yet, i'm still dealing with feedback from july last year

[09:31:01.0000] <crocket>
Hixie: You're very diligent.

[09:31:02.0000] <Hixie>
it's my job :-)

[09:31:03.0000] <crocket>
How can you keep up for so many months?

[09:31:04.0000] <jcranmer>
crocket: there's a long lag in dealing with feedback

[09:31:05.0000] <crocket>
Hixie: Are you paid to do it?

[09:31:06.0000] <Hixie>
crocket: months? you mean years :-)

[09:31:07.0000] <Hixie>
yes

[09:32:00.0000] <crocket>
I should pay myself to do some things.

[09:32:01.0000] <Hixie>
http://www.whatwg.org/issues/data.html shows how well i've been doing since late 2007

[09:32:02.0000] <Hixie>
when i started recording the data

[09:32:03.0000] <crocket>
Hixie : I praise your diligence.

[09:33:00.0000] <Hixie>
thanks

[09:33:01.0000] <Ms2ger>
/me remembers last call in November 2009

[09:33:02.0000] <Ms2ger>
I've been around for a while, it seems

[09:35:00.0000] <Ms2ger>
Though I have to say that "5 issues remaining" looks a little silly

[09:36:00.0000] <zcorpan>
do we have a canned response for "is it not better to leave error handling [or quirks] undefined so that the lack of interop will cause authors to rely on it less and eventually it can be removed altogether"?

[09:37:00.0000] <gsnedders>
I believe not.

[09:37:01.0000] <Ms2ger>
"Don't venture onto www-style"

[09:41:00.0000] <gsnedders>
"The emergence of monopolies in markets (IE in the first decade of the 2000s, WebKit in some mobile demographics) leads to a reliance upon undefined behaviour as authors care about a single implementation. This leads any new entrant to the market having to either be incompatible with existing content or to reverse-engineer the market-holder."

[10:16:00.0000] <ksweeney>
where was that posted gsnedders?

[10:18:00.0000] <gsnedders>
Nowhere, I just made it up. :)

[10:24:00.0000] <bga>
http://webreflection.blogspot.com/2012/02/web-workers-current-status.html

[10:24:01.0000] <bga>
:(

[11:42:00.0000] <annevk>
back home for some days

[11:42:01.0000] <annevk>
prolly in Oslo 23 - 4 or 7 or so

[11:45:00.0000] <Hixie>
annevk: you still working on fullscreen?

[11:46:00.0000] <Hixie>
annevk: (i think we need to talk about how fullscreen and <dialog> handle the "make a new stacking context on top of everything" issue in a compatible way)

[11:46:01.0000] <annevk>
so that part of fullscreen I "outsourced" to hober (and maybe roc)

[11:47:00.0000] <annevk>
as that's mostly a CSS problem

[11:47:01.0000] <annevk>
so I'm afraid I cannot help with that

[11:47:02.0000] <Hixie>
k

[11:49:00.0000] <annevk>
http://lists.w3.org/Archives/Public/www-style/2011Nov/0705.html was what hober emailed in November

[11:49:01.0000] <annevk>
I have not followed it since

[11:53:00.0000] <Hixie>
k

[11:53:01.0000] <Hixie>
i've spoken to him since

[11:53:02.0000] <Hixie>
will do so again

[11:54:00.0000] <annevk>
cool

[11:55:00.0000] <annevk>
btw, about that semantics thread; having common elements is also useful for accessibility and indexing software; not just to make styling easier

[11:58:00.0000] <AryehGregor>
I love the bugs you get in IE sometimes.  "-ms-transform: skew(45deg,45deg )" doesn't parse.

[11:58:01.0000] <AryehGregor>
Because of the space before the closing parenthesis.

[11:58:02.0000] <AryehGregor>
Which doesn't cause a problem for *any* other transform.

[11:58:03.0000] <AryehGregor>
But for skew() it causes a parse error.

[11:58:04.0000] <annevk>
wow

[11:59:00.0000] <annevk>
I'd love to see a blog post from someone on the IE team explaining such a bug

[11:59:01.0000] <AryehGregor>
It's the kind of thing Raymond Chen explains for Windows.

[11:59:02.0000] <Ms2ger>
"We implement each function by hand in assembly"

[11:59:03.0000] <ksweeney>
lol

[12:00:00.0000] <AryehGregor>
IE seems to have much weirder bugs than other browsers, in my testing experience.

[12:00:01.0000] <Ms2ger>
Also, anybody know if there's version control for khtml somewhere on the web?

[12:02:00.0000] <AryehGregor>
Also, Opera normalizes all angles to degrees for .style serialization, but doesn't normalize lengths.

[12:03:00.0000] <annevk>
Ms2ger: the link from http://www.konqueror.org/getthesource/ 404s...

[12:03:01.0000] <Yuhong>
jgraham: As it happens, Basecamp Next is going to ditch support for IE8. I wonder if it will finally use application/xhtml+xml?

[12:03:02.0000] <tantek>
why would you ever use application/xhtml+xml? so you can make your site more fragile?

[12:04:00.0000] <Yuhong>
Defense in depth against XSS attacks, for one.

[12:04:01.0000] <Yuhong>
Note that I say "defense in depth". It is not a substitute for XSS filters.

[12:05:00.0000] <Ms2ger>
https://projects.kde.org/projects/kde/kde-baseapps/repository/revisions/master/show/konqueror worked

[12:05:01.0000] <tantek>
sorry, I don't know application/xhtml+xml helps that at all. All I know is that every site I've seen that's tried to ship application/xhtml+xml fails frequently.

[12:05:02.0000] <Ms2ger>
Thanks annevk

[12:05:03.0000] <tantek>
I think I have a bunch of screenshots on Flickr etc.

[12:05:04.0000] <tantek>
oh yeah, this blog post: http://tantek.com/2010/302/b1/xhtml-dead-long-live-xml-valid-html5

[12:06:00.0000] <annevk>
Ms2ger: I think I found it

[12:06:01.0000] <tantek>
scroll down to "Draconian = FAIL"

[12:06:02.0000] <annevk>
Ms2ger: very slow :(

[12:06:03.0000] <annevk>
Ms2ger: https://projects.kde.org/projects/kde/kdelibs/repository/revisions/master/show/khtml

[12:06:04.0000] <webben>
Yuhong: If browsers give up and parse your broken as XML as HTML (see mobile browser, Opera, etc.) it doesn't really help you.

[12:06:05.0000] <webben>
*broken XML as HTML

[12:06:06.0000] <Ms2ger>
\o/

[12:06:07.0000] <annevk>
Konquerer is https://projects.kde.org/projects/kde/kde-baseapps/repository/revisions/master/show/konqueror

[12:07:00.0000] <annevk>
oh, you found that already

[12:07:01.0000] <Ms2ger>
Now, does the history go back to 3.0...

[12:07:02.0000] <webben>
Yuhong: i.e. if the idea is an XSS attack might break the XML, you can't count on draconian error handling.

[12:08:00.0000] <webben>
so sometimes your XML will break and sometimes it will render as text/html, thus increasingly the number of interesting ways XSS could break your site.

[12:09:00.0000] <Yuhong>
tantek: I have said before about the blog post that making HTML XML-valid and then deliberately omitting the xmlns is stupid.

[12:10:00.0000] <Yuhong>
tantek: Sometimes it is done by mistake, but deliberately doing it? Huh?

[12:13:00.0000] <Yuhong>
BTW, it is interesting that Hixie and ChrisWilson now works for the same company.

[12:14:00.0000] <Ms2ger>
You said that

[12:14:01.0000] <Ms2ger>
Alright, so I found the changeset I was looking for...

[12:15:00.0000] <Ms2ger>
Only it doesn't link to any bug

[12:15:01.0000] <Hixie>
annevk: in general yes, but i don't really see how it helps with <blockquote>

[12:16:00.0000] <annevk>
fair enough

[12:17:00.0000] <Ms2ger>
I wonder if Dirk Mueller would remember a change he made in March 2002

[12:17:01.0000] <annevk>
dude what are you researching?

[12:17:02.0000] <Ms2ger>
https://projects.kde.org/projects/kde/kdelibs/repository/revisions/f7785ef82e8fe5e622b3ba65716d35fc33dc2cf8/diff/khtml/html/html_documentimpl.cpp

[12:18:00.0000] <Hixie>
waah, i don't want to fix https://www.w3.org/Bugs/Public/show_bug.cgi?id=14284

[12:18:01.0000] <Hixie>
gonna be a huge pain

[12:19:00.0000] <Ms2ger>
Oh, I probably need that for DOMParser

[12:26:00.0000] <Ms2ger>
annevk, so is Opera's document.body correct per spec?

[12:27:00.0000] <annevk>
dunno

[12:31:00.0000] <Ms2ger>
Interestingly enough, nobody seems to handle document.body = "foo" correctly

[12:34:00.0000] <kennyluck>
wow, the bug is amazing indeed. The "-ms-transform: skew(45deg,45deg )" thingy is.

[12:38:00.0000] <tantek>
Yuhong, xmlns itself is stupid, therefore omitting it is harmless.

[12:38:01.0000] <tantek>
more useless than stupid but same idea

[12:38:02.0000] <annevk>
oh hey tantek

[12:39:00.0000] <tantek>
hey annevk

[12:39:01.0000] <annevk>
people were wondering if you would be opposed to publishing Fullscreen through WebApps

[12:39:02.0000] <tantek>
I saw the charter thread thing - came up in the CSSWG f2f last week too

[12:39:03.0000] <tantek>
conclusion was joint document made the most sense

[12:39:04.0000] <tantek>
so I think Daniel will be sending a chair-to-chair message accordingly

[12:39:05.0000] <annevk>
most sense huh haha

[12:40:00.0000] <tantek>
let's just say makes the most companies commit their IP :P

[12:41:00.0000] <tantek>
plus hey, we've got an editor in each WG so we're all set :)

[12:43:00.0000] <annevk>
guess so

[12:43:01.0000] <annevk>
as long as glazou keeps his hands off the editor's draft

[12:44:00.0000] <annevk>
that came out a bit strong

[12:44:01.0000] <annevk>
I don't really feel like regressing on the license

[12:44:02.0000] <annevk>
that's all

[12:47:00.0000] <Ms2ger>
The chair-to-chair message was sent and is archived on www-archive, I believe

[13:00:00.0000] <Ms2ger>
AryehGregor, dammit, you made me read Raymond Chen's blog for the last hour :)

[13:00:01.0000] <Ms2ger>
Also, found a reference to Hixie

[13:00:02.0000] <AryehGregor>
Where?

[13:01:00.0000] <AryehGregor>
Oh, Opera follows CSSOM for <angle>, CSSOM is just totally wrong.

[13:01:01.0000] <Ms2ger>
http://blogs.msdn.com/b/oldnewthing/archive/2009/11/24/9927970.aspx

[13:01:02.0000] <AryehGregor>
Oh, in the comments.

[13:01:03.0000] <AryehGregor>
Doesn't count.

[13:11:00.0000] <tantek>
annevk - is the web apps group ok with the license?

[13:12:00.0000] <annevk>
yeah

[13:12:01.0000] <tantek>
oh cool

[13:12:02.0000] <annevk>
on TR/ it would have a different license, but that doesn't really matter

[13:12:03.0000] <Hixie>
annevk: please see comment on bug 14284 https://www.w3.org/Bugs/Public/show_bug.cgi?id=14284

[13:13:00.0000] <tantek>
so webapps wg is ok with the editor's draft having the liberal license?

[13:13:01.0000] <Hixie>
zewt: i assume finishedMessage is an author-provided constant, in your e-mail?

[13:13:02.0000] <annevk>
Hixie: DOMParser is UTF-8-only

[13:14:00.0000] <Hixie>
annevk: so Ms2ger is wrong?

[13:14:01.0000] <Ms2ger>
Am I?

[13:14:02.0000] <Hixie>
bbiab, food

[13:14:03.0000] <annevk>
Hixie: dunno, but I guess he wants a hook where you already know the encoding, but maybe that is already present

[13:14:04.0000] <Hixie>
comment on the bug :-)

[13:14:05.0000] <Ms2ger>
That exists

[13:14:06.0000] <Ms2ger>
There's something about a unicode stream

[13:15:00.0000] <annevk>
wait, DOMParser doesn't even need an encoding

[13:15:01.0000] <annevk>
right

[13:15:02.0000] <tantek>
somehow read that as unicorn stream

[13:15:03.0000] <annevk>
tantek: nobody complained to me thus far;

[13:15:04.0000] <annevk>
tantek: apart from some people on the W3C Team that is

[13:16:00.0000] <tantek>
ah ok - I'm meeting with Jaffe today and will note that we think this is a good incremental step forward in the licensing evolution - liberal as editor's see fit on Editor's draft, existing W3C Spec license on TR

[13:16:01.0000] <tantek>
and that you and I are trying it out with Full Screen and Web Apps WG

[13:16:02.0000] <annevk>
tantek: XHR / DOM / CORS / etc. are all in Public Domain

[13:16:03.0000] <tantek>
in TR?

[13:17:00.0000] <annevk>
no not on TR, but I'm not sure how that matters

[13:17:01.0000] <annevk>
it's the same text

[13:17:02.0000] <annevk>
and the license is not exclusive

[13:17:03.0000] <tantek>
beautiful

[13:18:00.0000] <tantek>
even better, a pattern of evolution

[13:19:00.0000] <tantek>
annevk - nicely done with CC0+OWFa on all those editor's drafts.

[13:20:00.0000] <tantek>
so from those examples, WebApps WG has at least an implicit policy of permitting liberal license on editor's drafts, and existing W3C Doc license on TR/ snapshots.

[13:21:00.0000] <tantek>
I will bring this up with Jaffe as a model that other WGs should move to

[13:23:00.0000] <annevk>
tantek: the license text is pretty much an exact copy of what you provided for Fullscreen

[13:24:00.0000] <tantek>
I noticed :)

[13:31:00.0000] <annevk>
Ms2ger: wait so why do you need the same algorithm?

[13:32:00.0000] <annevk>
Ms2ger: can't you skip the whole encoding thingie?

[13:32:01.0000] <annevk>
Ms2ger: and just say parse this Unicode stream?

[13:32:02.0000] <Ms2ger>
I... dunno?

[13:32:03.0000] <Ms2ger>
And hsivonen is away until the 20th, apparently

[13:32:04.0000] <annevk>
I mean DOMParser only accepts DOMString right?

[13:32:05.0000] <Ms2ger>
Right

[13:33:00.0000] <annevk>
so the only weirdness might be unpaired surrogates

[13:33:01.0000] <Ms2ger>
Don't make me think about those

[13:33:02.0000] <annevk>
but you don't need prescanning or anything like that

[13:33:03.0000] <annevk>
or looking at BOMs

[13:33:04.0000] <annevk>
or defaulting to UTF-8

[13:33:05.0000] <annevk>
so I don't think you need any options

[13:34:00.0000] <Ms2ger>
I'll have hsivonen figure it out :)

[13:35:00.0000] <annevk>
noob :p

[13:36:00.0000] <Ms2ger>
That's called "delegation" :)

[13:49:00.0000] <Ms2ger>
Oh, and Hixie, please have a look at https://www.w3.org/Bugs/Public/show_bug.cgi?id=15950

[13:52:00.0000] <annevk>
yeah, naming things!

[13:52:01.0000] <annevk>
favorite part of the job

[13:52:02.0000] <Ms2ger>
Orange!

[13:53:00.0000] <annevk>
carrots!

[13:53:01.0000] <Ms2ger>
xpc_qsThrowMethodFailedWithDetails!

[13:55:00.0000] <annevk>
whaleTaco()

[14:18:00.0000] <annevk>
maybe we should just elaborate on the nodes around document modes

[14:18:01.0000] <annevk>
notes*

[15:01:00.0000] <roc>
"astral characters" is the dumbest name ever

[15:02:00.0000] <roc>
except for all the other dumb ones

[15:02:01.0000] <annevk>
way to classify :p

[15:03:00.0000] <annevk>
nn all

[15:04:00.0000] <kennyluck>
we ran into trouble when we tried to localize this term for Firefox.

[15:52:00.0000] <isherman-book>
Hixie: Looks like the WhatWG discussion regarding http://wiki.whatwg.org/wiki/Autocomplete_Types has more or less settled into something resembling consensus

[15:53:00.0000] <isherman-book>
What would you recommend as next steps?


2012-02-14
[16:05:00.0000] <rniwa>
Hixie: what would be a good step to move undo manager spec on either whatwg or w3c repository?

[16:06:00.0000] <rniwa>
good steps*

[16:16:00.0000] <Hixie>
isherman-book: it's on my list of things to get to in due course

[16:16:01.0000] <Hixie>
isherman-book: so if "wait" isn't a good answer for you, i guess "implement, convince other vendors to implement, and ship" is probably it :-)

[16:17:00.0000] <Hixie>
rniwa: you ok maintaining the spec?

[16:17:01.0000] <rniwa>
Hixie: YES

[16:17:02.0000] <rniwa>
Hixie: in fact, i'm going to start implementing it in webkit and write tests for it

[16:17:03.0000] <Hixie>
rniwa: any idea if AryehGregor would be ok with having it under his editing CG?

[16:17:04.0000] <rniwa>
Hixie: but it's easier for me to convince the webkit community if it were "official"

[16:18:00.0000] <rniwa>
Hixie: not sure.

[16:22:00.0000] <rniwa>
AryehGregor: ping

[16:23:00.0000] <isherman-book>
Hixie: Ok, wasn't sure if there was anything I needed to do other than wait

[16:24:00.0000] <Hixie>
isherman-book: i'm unfortunately under a lot of backlog

[16:25:00.0000] <Hixie>
isherman-book: trying to clear that out asap

[16:25:01.0000] <isherman-book>
Hixie: no problem :)

[16:26:00.0000] <Hixie>
oh it's a problem :-)

[20:10:00.0000] <tantek>
hey what's this? http://www.w3.org/community/html5spec/

[20:11:00.0000] <tantek>
as recently announced: https://twitter.com/#!/w3c/status/169266573192863744

[21:51:00.0000] <MikeSmith>
http://dev.webinos.org/specifications/draft/vehicle.html

[21:53:00.0000] <MikeSmith>
http://webinos.org/blog/2012/02/08/webinos-demo-series-1-vehicle-api/

[21:53:01.0000] <jamesr__>
how old is this?

[21:54:00.0000] <jamesr__>
somebody should tell them about constructors for events

[21:57:00.0000] <MikeSmith>
jamesr: from November it seems

[21:58:00.0000] <MikeSmith>
don't recall having seen that doc discussed anywhere

[21:58:01.0000] <MikeSmith>
though might have been in Device APIs WG

[21:59:00.0000] <MikeSmith>
this is from some kind of EU/EC project I guess

[22:14:00.0000] <MikeSmith>
oh man

[22:14:01.0000] <MikeSmith>
http://dev.webinos.org/specifications/draft/events.html

[02:27:00.0000] <remysharp>
Is it defined anywhere that elements with IDs should become global variables on the window with the same name?

[02:27:01.0000] <remysharp>
I know browsers still do it, but I wasn't sure if it was part of any spec or if it should never be relied on (I generally keep away from relying on it)

[02:31:00.0000] <zcorpan>
http://www.whatwg.org/specs/web-apps/current-work/multipage/browsers.html#named-access-on-the-window-object

[02:32:00.0000] <roc>
Gecko doesn't do it in standards mode

[02:35:00.0000] <zcorpan>
roc: what mode? you mean no-quirks mode? you're not making sense! (https://www.w3.org/Bugs/Public/show_bug.cgi?id=15950 )

[02:36:00.0000] <roc>
it's late, can you give me some kind of sarcasm emoticon?

[02:36:01.0000] <zcorpan>
sorry, </sarcasm>

[02:37:00.0000] <roc>
thanks, just checking

[02:37:01.0000] <remysharp>
zcorpan: okay, so technically it's totally legit - I had assumed for a long time that it was just a dirty thing browser (read: IE) did

[02:37:02.0000] <roc>
it is a dirty thing

[02:37:03.0000] <remysharp>
no doubt about that

[02:37:04.0000] <roc>
zcorpan: in that bug, you should accuse Hixie of ignoring reality

[02:38:00.0000] <remysharp>
confuses the hell out of folk I teach as to why their code works, yet the variable wasn't declared

[02:38:01.0000] <zcorpan>
roc: feel free to comment on the bug

[02:38:02.0000] <remysharp>
then they go asking me why did I declare the variable if it's already there...

[02:38:03.0000] <roc>
I'm fighting enough battles at the moment, thanks

[02:38:04.0000] <zcorpan>
remysharp: it's not totally legit since browsers are considering limiting it to quirks mode

[02:38:05.0000] <roc>
remysharp: "so it'll work in Firefox"

[02:39:00.0000] <remysharp>
zcorpan: good stuff. that makes me feel like it's a little more sane

[02:43:00.0000] <jgraham>
remysharp: Oh, well I'm sure you will be dissuaded of that notion soon

[02:44:00.0000] <remysharp>
jgraham: aye, I never expect to feel sane about how browsers do things for longer than a couple of hours. Otherwise I'd just be mismanaging my expectations :)

[04:15:00.0000] <Taggnostr>
jgraham, thanks for the code! I haven't tried it yet, but I'll try to find some time to take a look

[04:16:00.0000] <jgraham>
Taggnostr: np. We should probably ship something like that with html5lib

[04:16:01.0000] <Taggnostr>
the award for the broken markup of the day goes to: <img width=902 height=250px src="/sites/default/files/images/homepage/ISL_cordless_902X250.jpg" /*qui manca alt--capire*/ />

[04:17:00.0000] <Taggnostr>
that "comment" means "/*here alt is missing--understand*/"

[04:18:00.0000] <Taggnostr>
probably they asked someone to validate the page and he didn't even know how to write an html comment and wasn't even smart enough to figure out what the error that the validator gives means

[04:18:01.0000] <Taggnostr>
so he left a js comment in the middle of the tag as a remainder

[04:19:00.0000] <bga>
where is get lastest chromium? anyone from google plz answer me

[04:19:01.0000] <bga>
http://build.chromium.org/f/chromium/snapshots/Win_Webkit_Latest/

[04:19:02.0000] <bga>
is bit outdated

[04:32:00.0000] <myakura>
bga: http://download-chromium.appspot.com/ will help you.

[04:32:01.0000] <myakura>
(I'm not a Googler though.)

[04:34:00.0000] <bga>
myakura thanks

[04:40:00.0000] <annevk>
http://lists.w3.org/Archives/Public/public-html/2012Feb/0083.html o_O

[04:40:01.0000] <annevk>
if that passes

[04:40:02.0000] <annevk>
lol

[05:39:00.0000] <bga>
gsnedders are you here?

[07:28:00.0000] <annevk>
man why are [ and ] not allowed in the frigging query component in URLs?

[07:28:01.0000] <annevk>
that's nonsense

[07:29:00.0000] <ksweeney>
or the domain? I would love http://[][][][][][][].com

[07:29:01.0000] <ksweeney>
:D

[07:29:02.0000] <annevk>
the difference is that does not even work, whereas putting them elsewhere works perfectly fine

[07:44:00.0000] <annevk>
abarth: you around?

[07:44:01.0000] <annevk>
abarth: should CORS require Origin:null or Origin:<chain of origins>?

[07:44:02.0000] <annevk>
abarth: would have been better if the Origin RFC decided on this :(

[07:45:00.0000] <annevk>
abarth: if you're not around I'll prolly check in "null"

[07:45:01.0000] <annevk>
Velmont: ^^

[08:17:00.0000] <annevk>
haven't heard anything from ALA in years, suddenly two articles

[08:23:00.0000] <annevk>
whoa Zurich is now more expensive than Oslo or Tokyo

[08:23:01.0000] <annevk>
http://www.economist.com/blogs/graphicdetail/2012/02/daily-chart-7

[09:59:00.0000] <[tm]>
annevk: +1 to the Recovering from XML Community Support Group

[10:12:00.0000] <[tm]>
"the main reason is that from the beginning we (the XML crowd) have been arrogant, over confident and have made a significant design error."

[10:14:00.0000] <othermaciej>
where's that quote from?

[10:16:00.0000] <StoneCypher>
othermaciej: http://eric.van-der-vlist.com/blog/

[10:26:00.0000] <[tm]>
"we have been proven wrong and that HTML has been enough to scale up to the amazing applications we see today."

[11:41:00.0000] <annevk>
http://blog.ioactive.com/2012/02/ssl-traffic-analysis-on-google-maps.html is pretty interesting

[11:41:01.0000] <annevk>
would SPDY make that more complicated because it all becomes a single stream?

[11:52:00.0000] <Hixie>
annevk: only if you were actually using more than just google maps at a time, as far as i can tell

[11:52:01.0000] <Hixie>
annevk: if i understand correctly, the only real solution is to pad all requests and responses and make them on a strict schedule

[11:53:00.0000] <Hixie>
annevk: hard core encrypted channels just send continual noise at the max bandwidth and when they want to send data they replace the noise with the data

[11:53:01.0000] <Hixie>
annevk: assuming a good encryption algorithm, my understanding is that you then can't tell what's being sent

[11:53:02.0000] <Hixie>
annevk: of course you can still tell a lot e.g. that there is a connection, so that both sides exist, which is an issue e.g. in war situations

[11:54:00.0000] <Hixie>
abarth would know more

[12:06:00.0000] <annevk>
sounds pretty fascinating

[12:13:00.0000] <annevk>
I wonder when w3.org will go TLS-only

[12:23:00.0000] <abarth>
traffic analysis is really hard to defeat

[12:23:01.0000] <abarth>
at least without cover traffic

[12:23:02.0000] <Hixie>
isn't it essentially impossible without cover traffic?

[12:36:00.0000] <annevk>
Microsoft research paper writes "XmlHttpRequest" o_O

[12:37:00.0000] <abarth>
Hixie: i try not to say "impossible" :)

[12:37:01.0000] <Hixie>
fair enough

[12:37:02.0000] <abarth>
i think Tor tries to defeat traffic analysis without cover traffic

[12:37:03.0000] <abarth>
but it's unclear how successful they are

[12:38:00.0000] <Hixie>
don't they use other people's traffic as cover traffic?

[12:38:01.0000] <abarth>
aren't you the one who says "the impossible just takes longer?"

[12:38:02.0000] <Hixie>
i mean it's not as good as a continuous stream, but...

[12:38:03.0000] <abarth>
Hixie: yes, they mix traffic from multiple sources, but they have problems because that traffic can be removed statistically

[12:38:04.0000] <abarth>
its more like noise

[12:39:00.0000] <Hixie>
wow, interesting

[12:39:01.0000] <abarth>
so, then you get into shaping the traffic by adding queues and delays

[12:39:02.0000] <abarth>
etc

[12:39:03.0000] <abarth>
there's a whole literature about it

[12:39:04.0000] <Hixie>
i'm sure

[12:41:00.0000] <annevk>
is it even possible to design a system that does not have these flaws?

[12:41:01.0000] <annevk>
can you measure anything other than amount of data?

[12:43:00.0000] <Hixie>
timing

[12:43:01.0000] <annevk>
oh, how fast the connection is? how often requests are made, etc?

[12:44:00.0000] <Hixie>
for example, if a site sends a ping every 2s in one mode and a ping every 2.5s in another mode, even if they're the same size, you can tell which mode the app is in

[12:44:01.0000] <Hixie>
just by looking at when the packets are sent

[12:44:02.0000] <annevk>
I guess that can tell you quite a bit

[12:44:03.0000] <Hixie>
the general topic here is called "side channel attacks".

[12:44:04.0000] <Hixie>
q.v. http://en.wikipedia.org/wiki/Side_channel_attack

[12:45:00.0000] <Hixie>
power consumption is another one that that page mentions

[12:45:01.0000] <annevk>
that is, size plus timing seem like vectors that will turn out to be pretty unique

[12:45:02.0000] <Hixie>
e.g. you can tell what's going on based on how much power you are pulling -- if it's just idling, it'll use less power than if it's doing heavy computation

[12:46:00.0000] <Hixie>
also in the case of TLS communication on the web there's things like DNS requests, the IP address of the communication's destination, etc

[12:47:00.0000] <Hixie>
e.g. you can tell if someone is logging in on big sites because they get redirected through a separate login service

[12:48:00.0000] <Hixie>
even if the data is mixed in with noise like i was suggesting earlier, you can also learn things by watching what happens if you flip random bits in the stream

[12:48:01.0000] <Hixie>
since the receiving end might just discard the noise rather than verify that it wasn't tampered with

[12:48:02.0000] <Hixie>
(encryption typically avoids this, q.v. integrity)

[12:49:00.0000] <Hixie>
encryption systems, i should say

[12:49:01.0000] <Hixie>
encryption itself doesn't

[14:06:00.0000] <gsnedders>
bga: I am here now, if at all relevant.

[14:09:00.0000] <_bga>
gsnedders i tried to hack js. Add Proxy object that throw error is property is undefined instead silent null value before Object but failed because engines isnt ready to such tricks

[14:10:00.0000] <_bga>
chrome just stop working, ff fall to recursion

[14:11:00.0000] <gsnedders>
bga: My brain can't parse what you just said.

[14:14:00.0000] <_bga>
i changed fundamental behavour. in js {}.foo == undefined but i do Object.prototype.__proto__ = some proxy object. so now {}.foo throw 'Getting unexisting property'

[14:14:01.0000] <_bga>
understand?

[14:14:02.0000] <_bga>
i try to make js safer

[14:17:00.0000] <gsnedders>
_bga: Ah.

[14:17:01.0000] <gsnedders>
_bga: Object.prototype.__proto__ is not like __proto__ on anything else in SpiderMonkey, IIRC.

[14:18:00.0000] <gsnedders>
(Though quite what its semantics is I am unsure.)

[14:20:00.0000] <gsnedders>
Not really surprising that trying to mutate the Object prototype object's prototype doesn't work.

[14:20:01.0000] <_bga>
Object.prototype.__proto__ = {a: 1, __proto__: null}; ({}).a == 1 work in v8 too

[14:22:00.0000] <_bga>
but main idea that new apis open such abilities so engines will be ready

[14:25:00.0000] <_bga>
iirc opera's String#concat work incorrectly w/ deleted toString/valueOf

[14:26:00.0000] <gsnedders>
Shouldn't as of 11.60

[14:30:00.0000] <isherman>
tantek: You previously expressed some technical concerns about http://wiki.whatwg.org/wiki/Autocomplete_Types on Google+.  Wanted to check, have your concerns been addressed by renaming the tokens to match hCard where possible?

[14:30:01.0000] <_bga>
gsnedders btw what your opinion? is js should move to full dynamic (lisp way) or static ?

[14:31:00.0000] <_bga>
i guess - js was born as dynamic and should move to better dynamic

[14:31:01.0000] <gsnedders>
_bga: Dynamic what?

[14:32:00.0000] <gsnedders>
_bga: Dynamic typing?

[14:33:00.0000] <_bga>
runtime access to local hash table of vars (prototyped chained), object has many prototypes, instance eval

[14:33:01.0000] <_bga>
runtime access to stack

[14:34:00.0000] <gsnedders>
_bga: Okay, in the sense of it being a dynamic language.

[14:34:01.0000] <_bga>
make stack[stack.length - 1].locals.a = 1 possible

[14:34:02.0000] <gsnedders>
_bga: On the whole I like the balance it has now.

[14:35:00.0000] <gsnedders>
Proxies I'm still on the fence about whether I think they're a good idea, because they have the same semantic issues as host objects can (e.g., [[HasProperty]] and [[GetProperty]] may not match up).

[14:39:00.0000] <_bga>
i can not balance between dynamic and static world. one my ego like full dynamic for experiments, other my ego want extreme static for real use

[14:41:00.0000] <gsnedders>
_bga: Runtime access to stack used to be possible in SpiderMonkey (through __scope__, I think it was called) and arguments.caller (so arguments.caller.__scope__, for example).

[14:45:00.0000] <_bga>
hm

[14:46:00.0000] <_bga>
bad that is dont work anymore

[14:48:00.0000] <gsnedders>
_bga: Stuff like that is hell for performance given dynamic typing, though

[14:48:01.0000] <gsnedders>
_bga: You get any TC for concat with deleted toString/valueOf?

[14:50:00.0000] <_bga>
now work corectly

[14:52:00.0000] <_bga>
gsnedders so if you want perfomance (or community/market force you) => way of more static stuff

[14:53:00.0000] <gsnedders>
_bga: We can't really make it less dynamic, though, more just optionally static


2012-02-15
[17:35:00.0000] <jwalden>
does webidl say that calling a method on an interface with fewer arguments than it's specified to take (and none are optional) throws a TypeError, as I'm currently reading it?  I could have sworn it was supposed to say otherwise

[17:38:00.0000] <jwalden>
gsnedders: there was a big change to the proxies API which theoretically addressed the [[HasProperty]]/[[GetProperty]] disconnect; I don't know how well it actually does so

[18:04:00.0000] <heycam>
jwalden, yeah, fewer arguments get TypeError; more arguments get ignored

[18:05:00.0000] <jwalden>
heycam: did that change at some point?  I could have sworn defaults got imputed at one point

[18:05:01.0000] <heycam>
jwalden, yes but I think it changed a long time ago

[18:05:02.0000] <jwalden>
heycam: how long, ballpark?

[18:06:00.0000] <jwalden>
/me 's attention is totally fragmented these days, hardly has any time to keep up on any specs

[18:06:01.0000] <heycam>
jwalden, somewhere between october 2010 and july 2011 -- so I guess not *that* long ago

[18:06:02.0000] <heycam>
(according to my changes list at the bottom of the spec)

[18:06:03.0000] <jwalden>
*I* don't even know what "long ago" would mean to me, srsly

[18:06:04.0000] <heycam>
heh

[18:13:00.0000] <kennyluck>
Are people here sometimes annoyed by corner cases that are not specced but also unlikely to happen in the real world?

[18:17:00.0000] <heycam>
kennyluck, sometimes, but I'd be more annoyed knowing at the back of my mind that there are corner cases in my specs that I haven't dealt with

[19:22:00.0000] <MikeSmith>
so I'm noticing that the command attribute was in the original WF2 spec

[19:22:01.0000] <MikeSmith>
ah now

[19:22:02.0000] <MikeSmith>
*ah no

[19:23:00.0000] <MikeSmith>
Web Apps 1.0

[19:23:01.0000] <MikeSmith>
http://web.archive.org/web/20041009144718/http://whatwg.org/specs/web-apps/current-work/#the-command

[19:36:00.0000] <MikeSmith>
"Any element that can define a command can also, instead, have a command attribute that specifies the ID of a command that the element should defer to."

[19:38:00.0000] <MikeSmith>
http://www.whatwg.org/specs/web-apps/current-work/multipage/interactive-elements.html#attr-command-command

[19:38:01.0000] <MikeSmith>
"If a command element slave has a command attribute, and slave is in a Document, and there is an element in that Document whose ID has a value equal to the value of slave's command attribute, and the first such element in tree order, hereafter master, itself defines a command and either is not a command element or does not itself have a command attribute, then the master command of slave is master."

[19:38:02.0000] <MikeSmith>
wow

[19:55:00.0000] <Hixie>
yeah that sentence was hard

[19:55:01.0000] <Hixie>
open to improvements :-)

[19:55:02.0000] <Hixie>
the old command="" attribute applied everywhere

[19:56:00.0000] <Hixie>
i figured for the new one i'd try something a bit less radical

[19:56:01.0000] <MikeSmith>
Hixie: that text is clear enough once I read it

[19:56:02.0000] <Hixie>
took me forever to write it

[19:57:00.0000] <MikeSmith>
just .. an interesting collection of words

[19:57:01.0000] <MikeSmith>
yeah I bet

[19:57:02.0000] <MikeSmith>
hmm, so where does it appy

[19:57:03.0000] <Hixie>
i couldn't work out how to refer to one of the command elements rather than the other one

[19:57:04.0000] <MikeSmith>
*apply

[19:57:05.0000] <Hixie>
only <command command=""> right now

[19:57:06.0000] <MikeSmith>
ah

[19:57:07.0000] <MikeSmith>
OK

[19:57:08.0000] <Hixie>
might be better as <command ref=""> or something

[19:57:09.0000] <MikeSmith>
maybe

[19:57:10.0000] <Hixie>
to avoid the xzibit jokes

[19:57:11.0000] <MikeSmith>
heh

[19:58:00.0000] <MikeSmith>
you don't want to avoid those

[19:59:00.0000] <MikeSmith>
repetition is a key element of poetry

[23:07:00.0000] <silentimp>
bga: I need you :)

[01:06:00.0000] <annevk>
HTML WG made a formal decision on a bug that asked to consider something and was considered and rejected by the editor

[01:07:00.0000] <gsnedders>
annevk: What where?

[01:07:01.0000] <jgraham>
They formally decided to consider it?

[01:07:02.0000] <annevk>
The one on code point verbosity

[01:08:00.0000] <zcorpan>
everyone, let's consider!

[01:08:01.0000] <annevk>
just struck me how the title of that bug is completely out of touch with its outcome

[01:29:00.0000] <MikeSmith>
idude complaining about curly apostrophe on the comment part of IDL

[01:32:00.0000] <jgraham>
iDude? is that some new Apple AI?

[01:33:00.0000] <MikeSmith>
heh

[01:33:01.0000] <MikeSmith>
mistyped

[01:33:02.0000] <annevk>
yeah I thought it would be in the normative part somehow

[01:34:00.0000] <annevk>
and also those comments are going to be deleted in due course

[01:34:01.0000] <annevk>
not sure how much I care

[01:34:02.0000] <MikeSmith>
I'm sure how much I care :-)

[01:34:03.0000] <MikeSmith>
I care about it nearly as much as I care about the code-point verbosity problem

[01:37:00.0000] <MikeSmith>
damn I'm getting an error for the splitter

[01:37:01.0000] <MikeSmith>
[[

[01:37:02.0000] <MikeSmith>
  File "html5-tools/spec-splitter/spec-splitter.py", line 413, in <module>

[01:37:03.0000] <MikeSmith>
    term.remove(term.find("./dt"))

[01:37:04.0000] <MikeSmith>
  File "lxml.etree.pyx", line 808, in lxml.etree._Element.remove (src/lxml/lxml.etree.c:36312)

[01:37:05.0000] <MikeSmith>
TypeError: Argument 'element' has incorrect type (expected lxml.etree._Element, got NoneType)

[01:37:06.0000] <MikeSmith>
]]

[01:37:07.0000] <MikeSmith>
look familiar to anybody?

[01:38:00.0000] <MikeSmith>
oh

[01:38:01.0000] <MikeSmith>
that's in code I added

[01:41:00.0000] <jgraham>
Heh, familiar to someone at least :)

[01:41:01.0000] <MikeSmith>
heh

[01:42:00.0000] <MikeSmith>
https://www.w3.org/Bugs/Public/show_bug.cgi?id=15992 is gold

[01:46:00.0000] <annevk>
:)

[01:47:00.0000] <annevk>
on twitter the best renaming of quirks mode and all thus far

[01:47:01.0000] <annevk>
"Sane mode", "Sigh mode" and "Stupid mode"

[01:47:02.0000] <annevk>
also the only

[01:47:03.0000] <annevk>
but I like it

[01:53:00.0000] <charlvn>
annevk: no "

[01:53:01.0000] <charlvn>
no shit mode? i'm disappointed :(

[01:55:00.0000] <annevk>
maybe we should rename stupid to silly

[01:55:01.0000] <annevk>
because quirks mode is mostly just silly

[01:56:00.0000] <jgraham>
annevk: Well some of the quirks should probably have just been standardised because they make more sense than the standards (don't ask for examples, but I seem to recall there are some where Hixie and dbaron treated the spec as gospel rather than the implemtations)

[01:56:01.0000] <jgraham>
So "stupid mode" is a bit unfair to the poor quirks

[01:56:02.0000] <roc>
box-sizing

[01:58:00.0000] <annevk>
box-sizing, margin collapsing (not sure if that's a quirk though), unitless lengths maybe...

[01:59:00.0000] <roc>
yeah, unitless lengths probably

[01:59:01.0000] <roc>
I don't know what quirks there are around margin-collapsing

[02:00:00.0000] <annevk>
maybe none, but that's the one hixie and dbaron specced based on sentences in 2.0 rather than thought about how it can be done better

[02:03:00.0000] <jgraham>
So if you looked only at those examples and ignored all the weid stuff in quirks, it would be called "we took the standards too seriously" mode, "no really, we took the standards so seriously that we insist that you use almost all of them even when you really don't want to" mode and "stupid authors don't care about standards" mode

[02:07:00.0000] <zcorpan>
http://memegenerator.net/instance/14626343

[02:13:00.0000] <MikeSmith>
zcorpan: beautiful

[02:21:00.0000] <charlvn>
zcorpan: sounds like a wrapper, makes no sense whatsoever, very good wrapping therefore

[02:28:00.0000] <zcorpan>
YO DAWG I HERD YOU LIKE RAPPING SO WE WRAPPED YO RAP CD SO YOU CAN WRAP WHILE YOU RAP

[02:29:00.0000] <zcorpan>
hmm, a wrapped wrap would be even better

[02:30:00.0000] <zcorpan>
YO DAWG I HERD YOU LIKE WRAPS SO WE WRAPPED A WRAP AROUND YO WRAP SO YOU CAN EAT WRAPS WHILE U EAT WRAPS

[02:32:00.0000] <charlvn>
zcorpan: as long as it's a mexican wrap then we're good (i live exclusively off those every time i travel to the usa)

[02:33:00.0000] <annevk>
I wonder what smaug thinks is wrong with MutationCallback

[02:59:00.0000] <Ms2ger>
annevk, the usual, not allowing { handleEvent: function() {} }

[02:59:01.0000] <annevk>
long discussion was had, handleEvent lost

[02:59:02.0000] <annevk>
so if that's it, he's out of luck

[03:00:00.0000] <jgraham>
As I believe the kids these days are saying, "web's got 99 problems, that ain't one"

[03:00:01.0000] <annevk>
oh help, even jgraham starts communicating in memes

[03:01:00.0000] <Ms2ger>
Anyway, I don't expect us to implement callbacks for anything else than Function

[03:02:00.0000] <jgraham>
annevk: If it helps I have never actually heard the song

[03:02:01.0000] <jgraham>
and had to check google to ensure I got the right form

[03:03:00.0000] <jgraham>
But the message that I actually wanted to convey is "oh no, another trivial issue that people are getting hung up about when they could be using the time to do something that would fix some of the major issues on the platform instead"

[03:04:00.0000] <Ms2ger>
Indeed, why do people insist on disallowing it instead of doing something useful? :)

[03:07:00.0000] <annevk>
Ms2ger: outside your role man, Philip` makes those remarks :p

[03:07:01.0000] <Ms2ger>
Oops, wrong IRC window ;)

[03:08:00.0000] <annevk>
but euh, because http://brokeninternets.com/wp-content/uploads/2011/10/alens.jpg

[03:41:00.0000] <annevk>
http://blog.whatwg.org/weekly-quirks-mode-xml

[03:46:00.0000] <jgraham>
annevk: The second sentence is very odd. "i.e." should be all lowercase and should never start a sentence

[03:46:01.0000] <jgraham>
quirks are countable so s/amount/number/

[03:47:00.0000] <jgraham>
introduces is in the wrong tense

[03:47:01.0000] <jgraham>
Possibly s/That was all/That is all/

[03:48:00.0000] <annevk>
aah

[03:50:00.0000] <annevk>
refresh

[03:50:01.0000] <annevk>
and my apologies

[03:50:02.0000] <jgraham>
No problem, thanks for writing them ;)

[04:02:00.0000] <zcorpan>
seems like quirks mode got Warnocked on www-style

[04:03:00.0000] <MikeSmith>
annevk, Ms2ger - are the dfns in the DOM spec meant to display pop-ups when you click on them?

[04:04:00.0000] <Ms2ger>
We might have removed that at some point

[04:04:01.0000] <Ms2ger>
Should work on the ED

[04:05:00.0000] <Ms2ger>
Oh, except the popupness seems broken

[04:05:01.0000] <annevk>
http://torrentfreak.com/dutch-parliament-rejects-acta-on-human-rights-violations-120214/

[04:05:02.0000] <annevk>
fuck yeah

[04:06:00.0000] <annevk>
MikeSmith: styles are missing

[04:06:01.0000] <MikeSmith>
seems so

[04:06:02.0000] <annevk>
zcorpan: or maybe missed among all the other email?

[04:06:03.0000] <jgraham>
zcorpan: I have serious difficulties believing that several of the Warnock possibilities exist on www-style. Number 2 in particular seems highly unlikely.

[04:07:00.0000] <jgraham>
zcorpan: Did you check that the message actually made it all the way to www- style ;)

[04:11:00.0000] <zcorpan>
it made it to the archives, and i see now responses, that's all i know :-)

[04:11:01.0000] <zcorpan>
s/w//

[04:19:00.0000] <zcorpan>
Hixie: whatwg.org/C redirects to complete/ which then redirects to multipage/

[04:41:00.0000] <niloy>
the websql was deprecated because everyone used sqlite, what exactly is the problem with single implementation?

[04:47:00.0000] <annevk>
niloy: search for software monoculture

[04:48:00.0000] <niloy>
thanks, will do

[04:48:01.0000] <annevk>
niloy: and SQLite updates were not guaranteed to be backwards compatible

[04:49:00.0000] <Ms2ger>
jgraham, Warnock's number 2 wouldn't happen on www-style because people *love* replying to utter nonsense?

[04:49:01.0000] <annevk>
niloy: I still sort of think we should have stuck with SQL, prolly defining some SQL dialect and map that to whatever engine is in use, but apparently inventing a whole new DB engine was thought to be better

[04:49:02.0000] <niloy>
yes, exactly, pleaseee

[04:50:00.0000] <annevk>
sorry man, DOM, XHR, and Encoding is what keeps me busy :)

[04:51:00.0000] <jgraham>
Ms2ger: bingo

[04:51:01.0000] <niloy>
annevk, nobody else in w3c or whatwg share your feelings?

[04:51:02.0000] <annevk>
those that do are busy too

[04:52:00.0000] <annevk>
and those that don't work on Indexed DB :)

[04:53:00.0000] <niloy>
oh sad

[05:02:00.0000] <niloy>
I read about software monoculture and realised that the "Internet" guys deprecating websql because of software monoculture is hypocrisy :P

[05:04:00.0000] <zcorpan>
"yeah i'm so hip because i used the html5 doctype mode", "i used spacer gifs in my tables and noticed this transitional doctype made the stupid margins go away mode", "i really have no idea WTF i'm doing mode"

[05:06:00.0000] <zcorpan>
would make a great title for my spec at least

[05:11:00.0000] <jgraham>
You want to write the "I have no idea WTF I'm doing specification"

[05:19:00.0000] <Ms2ger>
Isn't that all of zcorpan's specs? :)

[05:30:00.0000] <zcorpan>
yeah

[05:31:00.0000] <zcorpan>
maybe i should also start the "we have no idea WTF we're doing" working group

[05:33:00.0000] <Ms2ger>
"We don't Have Any idea wTf we're doing WG"

[05:33:01.0000] <annevk>
sicking: because those bullet points are the cache check

[05:34:00.0000] <annevk>
sicking: so in Gecko you can create a cache entry without a matching header or method

[05:34:01.0000] <annevk>
sicking: the spec doesn't have that

[05:34:02.0000] <annevk>
sicking: as detailed when the cache entry is created at the end of the preflight request: http://dvcs.w3.org/hg/cors/raw-file/tip/Overview.html#preflight-request

[05:35:00.0000] <sicking>
annevk: that seems worth fixing in the spec. I don't think i'd want to adjust our implementation for the worse

[05:35:01.0000] <annevk>
agreed, if I know exactly how

[05:36:00.0000] <annevk>
I don't really look forward to reverse engineering Gecko's preflight cache implementation

[05:36:01.0000] <sicking>
annevk: we're open source :-)

[05:37:00.0000] <sicking>
annevk: can't you just key on the method, even when the method is simple?

[05:38:00.0000] <annevk>
so you create a cache entry for say the POST method if force preflight is set?

[05:39:00.0000] <annevk>
and only then?

[05:39:01.0000] <sicking>
i suspect so yeah

[05:39:02.0000] <annevk>
i guess that could work

[05:39:03.0000] <sicking>
i don't actually remember, but i would assume that's what happens

[05:40:00.0000] <sicking>
actually we create a cache entry for destination+origin+withCredentials

[05:40:01.0000] <sicking>
and then in that cache which methods and headers are permitted

[05:42:00.0000] <annevk>
that's somewhat similar to the spec

[05:42:01.0000] <annevk>
less redundancy

[05:43:00.0000] <annevk>
depends on the details if it's the same

[06:29:00.0000] <annevk>
oh sicking is gone again

[06:29:01.0000] <annevk>
http://dvcs.w3.org/hg/cors/rev/1376d444aa1b is the fix I hope

[06:48:00.0000] <Ms2ger>
So, given void foo(ArrayBufferView?); void foo(ArrayBuffer?); void foo(long);, passing an object that isn't ArrayBufferView or ArrayBuffer should throw, correct?

[06:52:00.0000] <annevk>
or long?

[06:53:00.0000] <Ms2ger>
Hmm?

[06:55:00.0000] <jgraham>
or null?

[07:13:00.0000] <zewt>
it would seem strange if a function with only foo(long) didn't throw when passed an unexpected object type, but one with that plus foo(Object) did

[07:14:00.0000] <Philip`>
Type-based overloading in a dynamically typed language is inherently strange

[07:14:01.0000] <jgraham>
Philip`: Tell the jQuery people that

[07:15:00.0000] <Philip`>
The jQuery people are inherently strange

[07:18:00.0000] <zewt>
http://dev.w3.org/2006/webapi/WebIDL/#idl-overloading i ... don't feel like reading this at 9am, heh :P

[08:22:00.0000] <AryehGregor>
"The mark name cannot be the same name as any of the attributes in the PerformanceTiming interface [Navigation Timing]." http://w3c-test.org/webperf/specs/UserTiming/#ut-mark

[08:22:01.0000] <AryehGregor>
Ouch.

[08:22:02.0000] <AryehGregor>
Let's create more collision potential than we already have, huh?

[08:23:00.0000] <jgraham>
That's unbounded collision potential, no?

[08:23:01.0000] <jgraham>
Assuming that they might update the spec

[08:24:00.0000] <AryehGregor>
Yes, which is a problem we normally only have with a) Window, b) Node and descendant interfaces (maybe, if we don't institute one of the proposals for fixing that), c) authors who stick properties on objects they shouldn't (thankfully not common enough to worry about in most cases).

[08:26:00.0000] <AryehGregor>
/me does not understand why User Timing doesn't just expose a more accurate Date.now() function, instead of this mark() machinery

[08:26:01.0000] <jgraham>
AryehGregor: Send feedback? The people in that WG aren't very expert at all the things that people in WebApps take for granted

[08:27:00.0000] <jgraham>
(I mean about the collision thing)

[08:27:01.0000] <AryehGregor>
I could, but I'm supposed to be doing transition/animation tests and I've already procrastinated enough on transforms.

[08:27:02.0000] <AryehGregor>
/me was really just looking to see if this stuff would be useful for writing transition/animation tests

[08:28:00.0000] <AryehGregor>
"If the markName argument is not specified, the method returns an associative Array. Each key in the Array is a mark name. The value associated with the mark name is an Array of timestamps for that mark. In JSON notation, the data structure will look similar to this: { "mark1": [0, 1, 3], "mark2": [2] }"  Also known as an object . . . ?

[08:28:01.0000] <AryehGregor>
I should really send feedback here, or someone should.

[08:29:00.0000] <bga>
a:visited:after { position: absolute; left: -9999; top: -9999; background: url(attr(href)) }

[08:29:01.0000] <jgraham>
AryehGregor: I think the point is possibly that Date.now() is not monotonically increasing

[08:29:02.0000] <bga>
i happy that is not work

[08:29:03.0000] <AryehGregor>
jgraham, right, so define a new function that returns a monotonically increasing number of milliseconds since page load.

[08:30:00.0000] <jgraham>
AryehGregor: I agree that would be a simpler solution

[08:30:01.0000] <AryehGregor>
/me is particularly uninterested in subscribing to Yet Another Mailing List

[08:30:02.0000] <jgraham>
This API seems too high level

[08:31:00.0000] <jgraham>
But I assume that if I say that I will be told that Microsoft have already implemented it and won't change

[08:31:01.0000] <AryehGregor>
And I'd really have to read all the historical discussions about the spec before I could suggest in good conscience that it be scrapped and replaced with a single function.

[08:31:02.0000] <AryehGregor>
Heh.

[08:31:03.0000] <AryehGregor>
Well, as long as everyone else agrees to scrap it . . . it's only LC after all, right?

[08:31:04.0000] <jgraham>
I did read some of the discussion about this

[08:31:05.0000] <AryehGregor>
And still prefixed.

[08:31:06.0000] <jgraham>
and I think this did come up

[08:37:00.0000] <AryehGregor>
And they said "thanks for the feedback, but we're not going to bother changing it because we've already implemented it", or what?

[08:39:00.0000] <jgraham>
Well now I look I can't see that

[08:39:01.0000] <jgraham>
I just see bz pointing out that they should use a monotonic clock

[08:40:00.0000] <jgraham>
But I could well be missing something, I have only read like 5% of the email to that list

[08:40:01.0000] <AryehGregor>
The spec says UAs have to use a monotonic clock.

[08:40:02.0000] <jgraham>
Yeah, they adopted his feedback

[09:11:00.0000] <remysharp>
isn't there a method for listening for all events against the window? I'm sure I saw it in some spec, but forget what it's called...

[09:21:00.0000] <AryehGregor>
Is there a way to feature-test for event support?  Like, say, what prefix is used for transitionend, if any?

[09:21:01.0000] <AryehGregor>
Or do I just have to register an event handler for each possible type?

[09:21:02.0000] <AryehGregor>
/me hates prefixes

[09:26:00.0000] <zcorpan>
so firefox tolerates colors with a length of 1-6 if it starts with a number

[09:26:01.0000] <zcorpan>
and webkit tolerate colors with a lenght of 1-6 if it doesn't contain a-f

[09:26:02.0000] <zcorpan>
(apart from the standard lengths 3 and 6)

[09:27:00.0000] <AryehGregor>
In what context?

[09:27:01.0000] <AryehGregor>
Oh, quirks.

[09:27:02.0000] <zcorpan>
while ie and opera only tolerate the lengths 3 and 6

[09:27:03.0000] <zcorpan>
yeah

[09:27:04.0000] <zcorpan>
i'll go with ie/opera

[09:27:05.0000] <smaug____>
AryehGregor: there isn't any real good way

[09:27:06.0000] <smaug____>
D3E proposes a way

[09:28:00.0000] <AryehGregor>
Yay.

[09:29:00.0000] <zcorpan>
hey i don't need to extend the css grammar

[09:30:00.0000] <zcorpan>
it's either a NUMBER, IDENTIFIER or IDENT

[09:36:00.0000] <dglazkov>
good morning, Whatwg!

[09:36:01.0000] <jgraham>
dglazkov: Remove prefixes from the web and then I will let you call it a good morning

[09:44:00.0000] <matjas>
/me needs textarea@pattern again. grrrr

[09:51:00.0000] <dglazkov>
jgraham: no worries. It's just a matter of time.

[09:51:01.0000] <dglazkov>
:)

[10:25:00.0000] <zcorpan>
ok http://simon.html5.org/specs/quirks-mode the first two quirks should now be a bit closer to reality

[10:42:00.0000] <zcorpan>
anyone have any brilliant ideas for how to research which properties need those quirks?

[10:44:00.0000] <AryehGregor>
Argh.  How am I supposed to write tests for transition JS APIs when CSSOM interop is so atrocious?

[10:45:00.0000] <zcorpan>
assume perfect CSSOM compliance and file bugs :-P

[10:46:00.0000] <AryehGregor>
For that matter, some of these contradict CSS2.1, like "left" always computing to "auto" in some browsers if position is static . . .

[10:46:01.0000] <AryehGregor>
In some cases, nothing actually defines getComputedStyle()'s values at all.

[10:47:00.0000] <AryehGregor>
How does 'clip' serialize, with commas or without?

[10:47:01.0000] <zcorpan>
parsing of 'clip' is also handwavy in css2.1

[10:48:00.0000] <AryehGregor>
Tons of computed values in various CSS specs don't give fine details like order.

[10:48:01.0000] <Ms2ger>
clip(a, b c, d)?

[10:48:02.0000] <AryehGregor>
Relevant part of definition for computed value of 'clip': "a rectangle with four values".

[10:48:03.0000] <AryehGregor>
Also, text-shadow serializes with the color first in some browsers, the lengths first in others.

[10:48:04.0000] <AryehGregor>
SIGH.

[10:51:00.0000] <AryehGregor>
jgraham, I'm adding an assert_in_array() function, okay?  It's needed when there are multiple legitimate results.

[10:53:00.0000] <zcorpan>
IE is funny with 'font'

[10:53:01.0000] <zcorpan>
font:100 serif (not applied)

[10:53:02.0000] <zcorpan>
font:100p serif (applied)

[10:53:03.0000] <zcorpan>
font:100px serif (applied, gets a different font family!)

[10:54:00.0000] <nimbu>
is this in quirks mode zcorpan?

[10:55:00.0000] <zcorpan>
yeah

[10:55:01.0000] <zcorpan>
or maybe it's the 100p line that gets a different font family

[10:55:02.0000] <zcorpan>
well, i'll have to leave that for another day

[10:56:00.0000] <Hixie>
zcorpan: presumably it gets the "p serif" font family

[10:57:00.0000] <Hixie>
zcorpan: try font:100p serif, monospace;

[10:57:01.0000] <zcorpan>
Hixie: yeah, turns into monospace

[11:01:00.0000] <zcorpan>
Hixie: sorry to be such a PITA, but you didn't fix it like i said, so they still aren't equivalent (the webvtt signature thing)

[11:02:00.0000] <zcorpan>
Hixie: the file "WEBVTT" is now said to be successfully processed but the sniffing requires a space, tab or newline

[11:03:00.0000] <Hixie>
zcorpan: an empty WebVTT file seems like something pointless to sniff for

[11:03:01.0000] <Hixie>
zcorpan: but i guess i can mention that an empty WebVTT file would just be the six characters WEBVTT

[11:03:02.0000] <Hixie>
+/- BOM

[11:04:00.0000] <zcorpan>
in the text/vtt registration? WFM

[11:05:00.0000] <zcorpan>
although i'd rather have the parser match the current sniff rules, i think

[11:06:00.0000] <Hixie>
why?

[11:07:00.0000] <Hixie>
seems weird to make a trailing newline be the difference between onload and onerror

[11:07:01.0000] <Hixie>
AryehGregor: looking at window.find()... you suggest in one of these e-mails that we should make execCommand work on Range objects, is that still something you're looking at?

[11:07:02.0000] <AryehGregor>
Hixie, not actively, no.

[11:08:00.0000] <zcorpan>
i dunno. either way works

[11:09:00.0000] <Hixie>
AryehGregor: i'm trying to work out if i should spec window.find(), spec a subset of window.find() that just does the "destroy selection to let people manipulate the dom" thing people use it for, or punt on window.find() on the assumption that we'll add an API specifically for getting Ranges for search strings and then make execCommand() work on those

[11:09:01.0000] <Hixie>
AryehGregor: is there more to the Range/execCommand() thing than just putting execCommand() on the Range interface?

[11:10:00.0000] <Hixie>
(laughing at my naivete here is acceptable ;-) )

[11:10:01.0000] <AryehGregor>
Hixie, potentially, yes.  Not a *lot* more.  The issue that comes to mind is that the range mutation algorithms don't work as we want in all cases, so there are plenty of places where execCommand() resets the selection to something specific -- these might not all be trivial to make work if the selection can be something arbitrary.

[11:10:02.0000] <AryehGregor>
But we could just let execCommand() called on a Range do random weird things to the selection if we want, I guess.  :)

[11:11:00.0000] <Hixie>
AryehGregor: or we could just make certain commands only work on selections

[11:11:01.0000] <AryehGregor>
Wouldn't be very useful, IMO.

[11:11:02.0000] <AryehGregor>
E.g., if you do insertText, the selection is first deleted, then some text is inserted, then the selection is put before the start of the text (which may or may not have any relationship to the start of the original selection).

[11:11:03.0000] <AryehGregor>
I guess range mutation rules might work acceptably.

[11:12:00.0000] <AryehGregor>
I don't know offhand.

[11:12:01.0000] <Hixie>
k

[11:16:00.0000] <MikeSmith>
somebody needs to write a mail client in canvas

[11:16:01.0000] <StoneCypher>
i wrote a polygon image evolver in canvas the other day because i was bored

[11:16:02.0000] <MikeSmith>
cool

[11:16:03.0000] <AryehGregor>
Okay, so IE10 Developer Preview sometimes serializes text-shadow like "1px 2px 0px rgb(0,0,255)" (note lack of space after commas) and sometimes as "1px 2px 0px 0px rgba(0, 0, 255, 1)" (note *four* lengths).

[11:16:04.0000] <AryehGregor>
. . .

[11:17:00.0000] <Hixie>
rgb() vs rgba(), too

[11:17:01.0000] <Hixie>
does it depend on the input colour syntax?

[11:17:02.0000] <Hixie>
or only the number of lengths?

[11:18:00.0000] <zcorpan>
AryehGregor: does it support hashless hex colors or unitless lengths in text-shadow? :-)

[11:18:01.0000] <AryehGregor>
Hixie, it changes the output format right after I set it to a different value, with a transition applied (so the computed value shouldn't have changed yet).

[11:19:00.0000] <Hixie>
AryehGregor: funky

[11:19:01.0000] <AryehGregor>
jgraham, can I go ahead and commit my assert_in_array thing, or do you want to review it first?

[11:19:02.0000] <jgraham>
AryehGregor: Well I hate how bloated the API is becoming, but I don't know what to do about it, so sure

[11:19:03.0000] <Hixie>
AryehGregor: i wonder if it's working out that it'll become rgba() in due course, and so preemptively adding alpha to its concerns, and then just rgb() has a differnet serialiser than rgba()

[11:19:04.0000] <AryehGregor>
Hixie, no, it just generally serializes colors as rgba(..., 1).

[11:20:00.0000] <AryehGregor>
:)

[11:21:00.0000] <Hixie>
so what's with the rgb() case before then?

[11:21:01.0000] <Hixie>
weird

[11:21:02.0000] <jgraham>
AryehGregor: I mean sure you can write one

[11:21:03.0000] <Hixie>
AryehGregor: you speccing the c12n algorithm for cssom?

[11:21:04.0000] <jgraham>
AryehGregor: If you make a pull request against github I will review it

[11:21:05.0000] <AryehGregor>
IE is generally the weirdest browser, followed by Opera, then WebKit, then Gecko.

[11:21:06.0000] <AryehGregor>
Hixie, I'd be happy to, but no.  Just writing some transition tests.

[11:21:07.0000] <AryehGregor>
jgraham, okay.

[11:21:08.0000] <Hixie>
AryehGregor: ah, cool

[11:22:00.0000] <AryehGregor>
I already wrote a bunch of transforms tests.  Transitions are much more of a pain.

[11:22:01.0000] <zcorpan>
AryehGregor: with hashless hex color, the weirdness was reversed, i think, possibly having webkit at the end of the scale

[11:24:00.0000] <AryehGregor>
jgraham, done.

[11:24:01.0000] <AryehGregor>
<3 github.

[11:29:00.0000] <Ms2ger>
Bah, github

[11:29:01.0000] <zcorpan>
boo, logs are down

[11:30:00.0000] <Ms2ger>
Where does testharness.js live nowadays?

[11:33:00.0000] <AryehGregor>
Ms2ger, apparently https://github.com/jgraham/testharness.js

[11:40:00.0000] <jgraham>
Not relly

[11:40:01.0000] <jgraham>
*really

[11:41:00.0000] <jgraham>
It really lives in http://dvcs.w3.org/hg/resources/

[11:41:01.0000] <jgraham>
But the W3C infrastructure sucks

[11:42:00.0000] <tomer>
Hi. Is there any spec for how Unicode Emojis should work in a web browser? For example, if and how these icons should be replaced with graphical/colorful icons. Currently it is implemented in iOS and Safari on OSX10.7, and I'm looking for how we can push it to other browsers as well.

[11:44:00.0000] <tomer>
… For example, the following bug mention how it can be controlled by a special control character, but we might want a better way to control its representation directly from the HTML/CSS sources, like how we are dealing with the spellchecking on input fields in Firefox.

[11:44:01.0000] <tomer>
https://bugzilla.mozilla.org/show_bug.cgi?id=727276

[12:29:00.0000] <Ms2ger>
"This is a very boring kind of report this does not take each & every thing into consideration HTML 4.0.1 was good infact was better way better.."

[12:35:00.0000] <annevk>
whoa

[12:35:01.0000] <annevk>
locked myself out of the house

[12:35:02.0000] <annevk>
inbox 400 again

[12:35:03.0000] <bga>
ctrl + a, del

[12:36:00.0000] <bga>
so easy

[12:37:00.0000] <annevk>
heh

[12:37:01.0000] <annevk>
I was not alone https://twitter.com/#!/slicknet/status/169840384502009856

[12:50:00.0000] <isherman>
tantek: ping

[13:09:00.0000] <Ms2ger>
https://cvs.khronos.org/svn/

[13:09:01.0000] <Ms2ger>
...

[13:10:00.0000] <TabAtkins>
git://cvs.khronos.org/svn/

[13:10:01.0000] <Ms2ger>
TabAtkins--

[13:11:00.0000] <Ms2ger>
Anybody know how to submit tests to WebGL's test suite?

[13:11:01.0000] <TabAtkins>
I can ask.

[13:12:00.0000] <Ms2ger>
That would be nice

[13:12:01.0000] <TabAtkins>
File a bug on the public khronos bugzilla, attach the test as a patch.

[13:12:02.0000] <Ms2ger>
Good

[13:17:00.0000] <Ms2ger>
Though I have no idea how to test this...

[13:29:00.0000] <annevk>
it's kind of amusing how congress is interested in apps being to "steal" your addressbook data on phones, but nobody is asking about traditional operating systems

[13:30:00.0000] <annevk>
but I guess some interest in protecting privacy is better than none whatsoever

[13:31:00.0000] <TabAtkins>
Congress is half corrupt and half pig-ignorant about tech. :/

[13:37:00.0000] <jgraham>
It's probably not as common to have large a number of personal details on your non-portable device

[13:38:00.0000] <jgraham>
/me is pretty sure the whole thing must be illegal in the EU already

[13:39:00.0000] <jgraham>
Because AFAIK if I give you my personal information, that doesn't give you the right to do what you like with it

[13:39:01.0000] <jgraham>
At least it doesn't for businesses

[13:40:00.0000] <jgraham>
If it does for individuals it seems like a loophole that will be closed

[13:40:01.0000] <jgraham>
(IANAL, TINLA)

[14:06:00.0000] <jwalden>
privacy interests in information disclosed to third parties are weird in the US

[14:07:00.0000] <jwalden>
rather bizarrely, reasonable expectations often are not

[14:22:00.0000] <TabAtkins>
Who has control over the W3C's github account?

[14:22:01.0000] <TabAtkins>
And how can I get in on that action?

[14:24:00.0000] <jgraham>
The W3C has a github account?

[14:24:01.0000] <TabAtkins>
Yes.

[14:25:00.0000] <TabAtkins>
https://github.com/w3c

[14:25:01.0000] <jgraham>
TabAtkins: the email address on the profile page is a clue

[14:25:02.0000] <TabAtkins>
Hurp durp, yes.

[14:25:03.0000] <annevk>
/me was about to say

[14:25:04.0000] <annevk>
members too

[14:33:00.0000] <Hixie>
annevk, TabAtkins: i don't really want to jump into the perf thread, but fwiw, readyState is already a string on Document

[14:34:00.0000] <TabAtkins>
Cool.

[14:34:01.0000] <TabAtkins>
So it's *entirely* inconsistent across the platform.

[14:35:00.0000] <Hixie>
welcome to the web

[14:35:01.0000] <TabAtkins>
Yup.

[14:35:02.0000] <Hixie>
readyState in particular was a microsoft invention both on Document (DOMString) and XHR (unsigned short)

[14:36:00.0000] <TabAtkins>
That's awesome.

[14:37:00.0000] <annevk>
Hixie: oh right, well, if someone replies I'll point that out

[15:19:00.0000] <jwalden>
clearly readyState on XHR2 should switch to being a string

[15:26:00.0000] <annevk>
http://www.reddit.com/r/fifthworldproblems nice

[15:27:00.0000] <annevk>
jwalden: cannot make incompatible changes; but you can just use the events and forget about readyState

[15:27:01.0000] <jwalden>
annevk: I am tempted to string things along further, but I was not being serious

[15:30:00.0000] <annevk>
jwalden: we've been low on sarcasm lately

[15:30:01.0000] <annevk>
apparently it's all about memes these days

[15:33:00.0000] <annevk>
http://eric.van-der-vlist.com/blog/2012/02/15/xml-prague-2012-the-web-would-be-so-cool-without-the-web-developers/ is a pretty neat summary of the XML thing past weekend

[15:34:00.0000] <gsnedders>
jwalden: seeming you're around, know what the semantics of Object.prototype.__proto__ are? Just a accessor property that claims data property which mutates the [[Prototype]] of this?

[15:34:01.0000] <gsnedders>
(in SM)

[15:35:00.0000] <jwalden>
gsnedders: nobody represents it as an accessor, but it just reflects [[Prototype]]

[15:35:01.0000] <jwalden>
and lets you change it

[15:36:00.0000] <gsnedders>
And there's nothing magic about it apart from the fact that it is secretly an accessor, thus the fact it can be deleted fine?

[15:37:00.0000] <gsnedders>
(or have I misunderstood what be said on es-discuss about its deletability)

[15:42:00.0000] <gsnedders>
The more and more I think about it, the less I'm convinced my gut reaction of not wanting to ever make it an accessor is right, and the more I want to make it an accessor.

[15:46:00.0000] <TabAtkins>
jwalden: I thought that we (chrome) represent it as an accessor in recent builds?

[15:48:00.0000] <jwalden>
TabAtkins: might have changed; last I remembered the internal API implemented it as a CALLBACK

[15:48:01.0000] <jwalden>
er

[15:48:02.0000] <jwalden>
INTERCEPTOR, sorry, I think

[15:48:03.0000] <gsnedders>
TabAtkins: AFAIK only JSC has changed recently

[15:49:00.0000] <TabAtkins>
I only know what I overheard in the __proto__ thread on es-discuss.

[15:49:01.0000] <jwalden>
gsnedders: well, we mark it as non-configurable, so it can't be deleted; I think we should change this, and probably make it a getter/setter pair, but I haven't looked too closely

[15:50:00.0000] <gsnedders>
jwalden: The consensus on es-discuss seemed to be against making it an accessor, because the setter function could then be got. But you don't seem to lose much, seeming you can't statically determine the lookup anyway…

[15:50:01.0000] <gsnedders>
jwalden: And I thought someone claimed it could be deleted. Definite consensus that it much be deletable.

[15:50:02.0000] <gsnedders>
s/delete/configurable/

[15:51:00.0000] <gsnedders>
Bleh, now what I wrote just makes no sense, ignore that change :P

[15:51:01.0000] <jwalden>
frankly I say we nuke it from orbit, and we all do it at once and suck up the pain

[15:51:02.0000] <gsnedders>
jwalden: That's what I've been arguing for too.

[15:51:03.0000] <jwalden>
IE is totally in the right here

[15:53:00.0000] <gsnedders>
jwalden: Well, I've more been arguing for nuking the setter, I have no issue with Object.defineProperty(Object.prototype, "__proto__", {get:function(){return Object.getPrototypeOf(this);}, configurable:true}); given those exact semantics

[15:53:01.0000] <gsnedders>
(i.e., it's something which has obvious native semantics and is contained in a single place)

[15:54:00.0000] <jwalden>
that would be better than nothing, certainly

[15:54:01.0000] <gsnedders>
I think the ship has sailed with the getter — it looks more and more like mobile is forcing the setter :(

[15:54:02.0000] <gsnedders>
At the very least it'd be nice to poison the __proto__ in strict.

[15:54:03.0000] <jwalden>
stupid idiot web developers

[15:55:00.0000] <jwalden>
__proto__-setting is poisoned, at least

[15:55:01.0000] <gsnedders>
jwalden: In what?

[15:55:02.0000] <TabAtkins>
/me won't mention his own use of __proto__.

[15:56:00.0000] <jwalden>
er

[15:56:01.0000] <jwalden>
no, sorry, I was thinking of __proto__-setting on non-extensible objects

[15:56:02.0000] <gsnedders>
jwalden: But still, in what?

[15:56:03.0000] <gsnedders>
Or is that required by spec?

[15:56:04.0000] <gsnedders>
/me guesses test262 doesn't test that seeming __proto__ is non-standard

[15:56:05.0000] <jwalden>
"use strict"; Object.freeze({}).__proto__ = {}

[15:57:00.0000] <jwalden>
TypeError: Object.freeze({}).__proto__ is not extensible

[15:57:01.0000] <jwalden>
if you have a non-extensible object, you can't change its prototype

[15:57:02.0000] <jwalden>
and a TypeError gets thrown if you try in strict mode

[15:57:03.0000] <jwalden>
I think most engines implement this

[15:57:04.0000] <gsnedders>
Carakan seems to at least

[15:58:00.0000] <gsnedders>
/me didn't remember that being the case

[15:58:01.0000] <gsnedders>
http://trac.webkit.org/changeset/107498 is the JSC change

[15:58:02.0000] <gsnedders>
__proto__ is an accessor in JSC now.

[15:59:00.0000] <gsnedders>
And reverted.


2012-02-16
[16:00:00.0000] <gsnedders>
(Because it didn't work cross-origin)

[16:00:01.0000] <jwalden>
bumpy landings happen

[16:00:02.0000] <gsnedders>
I'm tempted to just try and make the change to an accessor in Carakan, and go back to arguing for that.

[16:01:00.0000] <gsnedders>
And try and pick the fight for the setter once we've got major mobile libraries not relying upon it.

[16:01:01.0000] <gsnedders>
Because I do really want to get rid of the setter.

[16:02:00.0000] <jwalden>
word to your mother

[16:02:01.0000] <gsnedders>
What I want is someone to do a good write-up of why you don't want to mutate [[Prototype]] and shove it in the face of developers who do.

[16:03:00.0000] <gsnedders>
jwalden: You were CC'd on the emails about dropping __proto__ before, weren't you, about a year or so ago now?

[16:04:00.0000] <gsnedders>
/me thinks he remembers Apple people agreeing in principle

[16:05:00.0000] <gsnedders>
Eh, not even I was.

[16:06:00.0000] <gsnedders>
Just your later email RegExp.prototype.compile.

[16:06:01.0000] <jwalden>
oh gag, that idiocy

[16:07:00.0000] <jwalden>
I vaguely remember some sort of segue there, not much more than that

[16:07:01.0000] <gsnedders>
/me doesn't really have his email on this laptop

[16:07:02.0000] <gsnedders>
And webmail is making me gag.

[16:09:00.0000] <gsnedders>
But yeah, on the whole I think we should just make it an accessor on Object.prototype and move towards getting rid of the setter.

[16:10:00.0000] <gsnedders>
Making the setter throw from strict is kinda evil, but probably a good idea.

[16:10:01.0000] <gsnedders>
(From what I've seen relying upon the setter, it's all non-strict)

[16:16:00.0000] <TabAtkins>
Did ES5 globally change the "reserved keyword" policy to not block them from being property names?

[16:17:00.0000] <jwalden>
you could always have them as property names

[16:17:01.0000] <jwalden>
but now, you can have them to the right of dots, as names in object literals, etc.

[16:18:00.0000] <TabAtkins>
Really?  I thought ES3 prevented you from doing, say, foo.delete()

[16:18:01.0000] <jwalden>
f["delete"]()

[16:18:02.0000] <TabAtkins>
That's what I meant, yeah.

[16:18:03.0000] <jwalden>
if you wanted to call such a function, or access such a property, you needed bracket notation

[16:19:00.0000] <jwalden>
the Javaheads in particular found this annoying for the delete method on files (I think)

[16:42:00.0000] <smaug____>
um, I'm bad with CSS

[16:43:00.0000] <StoneCypher>
/me <3 css

[16:43:01.0000] <smaug____>
how do I get layout where 1st column has the width of its content, and other 2 columns fill the rest of the viewport (they may overflow: auto if needed)

[16:44:00.0000] <smaug____>
all the "columns" are div elements

[16:44:01.0000] <StoneCypher>
<left style="position: absolute; left: 0; width: whatever;"/><right style="position: absolute; left: whatever; right: 0;"/>

[16:44:02.0000] <StoneCypher>
or any of a million other ways

[16:44:03.0000] <StoneCypher>
oh, width of its content

[16:45:00.0000] <StoneCypher>
hm.

[16:45:01.0000] <StoneCypher>
<left style="position: absolute; left: 0; width: auto;"/><right style="position: relative; left: 100%; right: 0;"/>  might work

[16:45:02.0000] <jwalden>
sounds like you want a box that will flex

[16:45:03.0000] <smaug____>
jwalden: yeah

[16:45:04.0000] <StoneCypher>
flexbox doesn't reach many browsers yert

[16:45:05.0000] <StoneCypher>
yet*

[16:46:00.0000] <smaug____>
I guess I could use -moz-box

[16:46:01.0000] <smaug____>
or flex, whatever it is called

[16:46:02.0000] <StoneCypher>
the above should do portably

[16:46:03.0000] <jwalden>
I just passed by dholbert a minute ago, I could corner him until he finishes implementing it

[16:46:04.0000] <smaug____>
:)

[16:46:05.0000] <jwalden>
might need reinforcements, tho

[16:51:00.0000] <TabAtkins>
smaug____: Use flexbox.

[17:31:00.0000] <smaug____>
hmm, can't get it to work

[17:31:01.0000] <smaug____>
it is ok if container of a column is small enough

[17:31:02.0000] <smaug____>
but overflow: auto doesn't work the way I'd like

[17:47:00.0000] <MikeSmith>
heycam: do we have any tests for WebIDL?

[17:48:00.0000] <heycam>
MikeSmith, AryehGregor has written some

[17:48:01.0000] <heycam>
I have not

[17:48:02.0000] <MikeSmith>
OK

[17:48:03.0000] <heycam>
we need to start a thread on the list about which specs we'll choose to be the basis of our test suite

[17:48:04.0000] <MikeSmith>
AryehGregor: you got WebIDL tests?

[17:48:05.0000] <MikeSmith>
heycam: OK

[17:50:00.0000] <heycam>
/me lunch bbl

[23:41:00.0000] <asmodai>
crap

[23:42:00.0000] <asmodai>
memory constraints on an Android device, pushing your browser out of memory when a new app starts, is a lovely way to lose your open tabs

[23:49:00.0000] <charlvn>
asmodai: just needs a model where memory isn't shared, similar to chrome

[23:53:00.0000] <asmodai>
charlvn: That or keeping a state file around

[00:22:00.0000] <charlvn>
asmodai: a state file could also be a good idea for when you need to turn off or restart your phone

[00:22:01.0000] <charlvn>
so that could serve two purposes

[00:27:00.0000] <asmodai>
charlvn: Guess I now know what to suggest to the Opera guys ;)

[00:39:00.0000] <charlvn>
asmodai: good idea; this is going to become a critical feature moving forward if we want to move the world from "traditional" mobile apps to html-based mobile apps

[00:40:00.0000] <asmodai>
I find myself often looking up some things in tabs while lying in bed to look at during the day

[00:40:01.0000] <asmodai>
and then you find your tabs gone XD

[00:50:00.0000] <annevk>
morning

[00:56:00.0000] <asmodai>
Hey annevk

[00:58:00.0000] <charlvn>
morning annevk

[00:58:01.0000] <annevk>
foolip

[00:58:02.0000] <annevk>
oops

[00:59:00.0000] <asmodai>
Now he's calling us fools

[01:01:00.0000] <charlvn>
foolip - a cross between a fool and a lip

[01:03:00.0000] <annevk>
so despite all the arguments we had on the list, web intents is still using <intent>?

[01:03:01.0000] <annevk>
blargh

[01:15:00.0000] <zcorpan>
matjas: no utf-8 love for the binary convertor?

[01:16:00.0000] <jgraham>
There was some blog post from a Mozilla guy going "hey, we could perhaps just replace all of this with messaging". Did nothing come of that?

[01:16:01.0000] <matjas>
zcorpan: i could make one that uses 24 bits per glyph

[01:16:02.0000] <zcorpan>
matjas: that's not how utf-8 works :-)

[01:17:00.0000] <matjas>
no, but it’s easier :)

[01:17:01.0000] <zcorpan>
booo :-P

[01:48:00.0000] <annevk>
I wonder if Adam Klein is going to provide an updated patch for mutations...

[01:54:00.0000] <foolip>
charlvn, it's a cross between foo and philip :)

[02:18:00.0000] <charlvn>
foolip: that sounds fubar :P

[02:27:00.0000] <foolip>
charlvn, why thank you :)

[02:31:00.0000] <annevk>
Timing-Allow-Origin header oh god

[02:48:00.0000] <annevk>
updated XHR BOM handling and defined text/html encoding details

[03:13:00.0000] <annevk>
anyone opposed to XHR defining the HTTP behavior of data URLs?

[03:14:00.0000] <jgraham>
Wild guess: Julian

[03:15:00.0000] <annevk>
nah

[03:18:00.0000] <annevk>
http://webwereld.nl/nieuws/109547/eu-hof-verbiedt-copyright-filterplicht-voor-hosters.html

[03:18:01.0000] <annevk>
sweet

[03:18:02.0000] <annevk>
zo xs4all piratebay ban is ruled obsolete now?

[03:18:03.0000] <annevk>
oh hosting

[03:19:00.0000] <annevk>
meh

[03:29:00.0000] <charlvn>
annevk: yeah i don't think that applies to ISPs

[03:30:00.0000] <charlvn>
i don't care much about the pirate bay but the concept of having sites banned is just so anti-western it's histerical

[03:36:00.0000] <charlvn>
heh i can actually open thepiratebay.org at work, just not at home (on ziggo) :P

[03:36:01.0000] <annevk>
you're in the Netherlands these days?

[03:36:02.0000] <annevk>
o_O

[03:37:00.0000] <annevk>
sort of thought you'd be in South Africa still

[03:37:01.0000] <charlvn>
annevk: what is that supposed to mean? :P

[03:39:00.0000] <annevk>
unless you're a different charlvn, I'm just surprised

[03:40:00.0000] <charlvn>
annevk: nah it's the same me (i hope, otherwise i have another me running around somewhere)

[04:17:00.0000] <annevk>
maybe http://dvcs.w3.org/hg/xhr/raw-file/tip/Overview.html#data:-urls-and-http should be included in HTML?

[04:17:01.0000] <annevk>
or at least in HTML's fetching algorithm

[05:11:00.0000] <annevk>
https://www.w3.org/Bugs/Public/show_bug.cgi?id=16000 is mine

[05:11:01.0000] <annevk>
teehee

[05:23:00.0000] <Velmont>
16:45 < annevk> abarth: if you're not around I'll prolly check in "null" <<< As long as it's either "null" or "list-of-origins" I agree. I find it easier to be explicit in the spec, -- I've shown I'm not so good at looking up dependent specs. :-)

[05:27:00.0000] <MikeSmith>
made some  updates to http://platform.html5.org/history/ today

[05:29:00.0000] <jgraham>
You've been editing history?

[05:36:00.0000] <annevk>
Velmont: it's null now

[05:36:01.0000] <annevk>
Velmont: well unique origin which becomes null when serialized

[06:21:00.0000] <annevk>
it would be nice if there was some URL hack to easily query bugs

[06:21:01.0000] <annevk>
e.g. w3.org/Bugs/open/xhr or some such for all open xhr bugs

[06:21:02.0000] <annevk>
bugzilla search is just awful

[06:24:00.0000] <charlvn>
@annevk instead of this? https://www.w3.org/Bugs/Public/buglist.cgi?product=WebAppsWG&component=XHR&resolution=---

[06:26:00.0000] <zcorpan>
MikeSmith: <!doctype html> was around june/july 2005

[06:26:01.0000] <annevk>
that's reasonably short

[06:27:00.0000] <zcorpan>
MikeSmith: there was <!doctype html5> also for a very short period, iirc

[06:27:01.0000] <jgraham>
annevk: There is a REST API. Make your own

[06:27:02.0000] <jgraham>
Or steal http://shaver.off.net/diary/2011/01/22/i-made-a-thing/

[06:28:00.0000] <[tm]_>
zcorpan: ok

[06:28:01.0000] <[tm]_>
will update it later

[06:29:00.0000] <annevk>
whoa

[06:29:01.0000] <annevk>
OS X Mountain Lion

[06:29:02.0000] <annevk>
I haven't seen any rumors thus far

[06:29:03.0000] <charlvn>
http://atomictango.com/wp-content/uploads/2009/08/Mac-OSX-Cougar.jpg

[06:39:00.0000] <jgraham>
annevk: Oh look they are only letting signed apps run by default. That seems about right given there are 3 years for mpligrim's prediction to come true

[06:40:00.0000] <jgraham>
(and only app-store apps as a non-default option)

[07:22:00.0000] <StoneCypher>
i'm having some trouble with seams between polygons in canvas.  stroking the edges isn't an option; they have complex fills.  expanding the polygons also isn't an option.  do i have a better answer than to supersample?

[07:26:00.0000] <Philip`>
StoneCypher: If the polygons never overlap, maybe you could draw them onto a black background with globalCompositeOperation='lighter'?

[07:26:01.0000] <StoneCypher>
unfortunately that doesn't work in chrome or opera

[07:26:02.0000] <Philip`>
Otherwise I guess antialiasing will always cause some inaccuracies

[07:26:03.0000] <StoneCypher>
er, no

[07:26:04.0000] <StoneCypher>
lots of canvas-style systems don't have this problem

[07:27:00.0000] <StoneCypher>
computer graphics had this worked out in the 1980s

[07:27:01.0000] <StoneCypher>
and i don't think that the w3 would release a graphics specification that made high quality graphics impossible

[07:27:02.0000] <StoneCypher>
this is a 101 topic, like corner mitering

[07:31:00.0000] <Philip`>
I thought most techniques required some extra buffer space (for supersampling at least some components of the pixels), which doesn't fit with canvas's model of a single 32-bit bitmap

[07:31:01.0000] <annevk>
time to stock up on yoghurt and eggs

[07:32:00.0000] <StoneCypher>
Philip`: lol no

[07:32:01.0000] <Philip`>
Otherwise it seems impossible to distinguish between a pixel drawn by an earlier polygon that is opaque and 50% covered, and a pixel that is fully covered and drawn with 50% alpha

[07:32:02.0000] <StoneCypher>
Philip`: and also, canvas doesn't specify the memory model, and layered patches are exactly how chrome works

[07:32:03.0000] <Philip`>
(assuming they're being draw in independent operations)

[07:32:04.0000] <StoneCypher>
er, it's really not.

[07:32:05.0000] <Velmont>
annevk: yoghurt? tomatoes and eggs, isn't it?

[07:33:00.0000] <StoneCypher>
antigrain geometry does it with constructive stacking.  flash does it with supersampling.  etc.

[07:33:01.0000] <StoneCypher>
and frankly

[07:33:02.0000] <StoneCypher>
it wouldn't be that hard to believe that there's a way to render multiple polys at once

[07:33:03.0000] <StoneCypher>
or something i just don't know about

[07:33:04.0000] <annevk>
Velmont: thanks for the reminder, should get tomatoes too

[07:33:05.0000] <StoneCypher>
but i cannot for the life of me imagine that the w3c said "let's make a vector engine that is fundamentally unable to render geometry that's touching"

[07:34:00.0000] <StoneCypher>
the idea that a vector engine can't represent two shapes next to one another correctly

[07:34:01.0000] <StoneCypher>
that violates the very most basic usage of vector graphics

[07:34:02.0000] <StoneCypher>
in a hilariously broken way

[07:34:03.0000] <Philip`>
(The W3C didn't really have anything to do with the design)

[07:34:04.0000] <StoneCypher>
i'm really not interested in nitpicking who it was that didn't actually make a mistake this obvious.

[07:34:05.0000] <Philip`>
(It was mostly just Apple, then incrementally extended by various people)

[07:34:06.0000] <StoneCypher>
*apple*U ?

[07:35:00.0000] <StoneCypher>
well fuck, then yes, it probably is this broken

[07:35:01.0000] <StoneCypher>
god damnit, i have to throw this whole thing away, then.  >:(

[07:35:02.0000] <StoneCypher>
who makes a vector geometry standard that can't handle basic vector geometry

[07:36:00.0000] <StoneCypher>
this is an embarrasment.

[07:36:01.0000] <StoneCypher>
and don't give me that "it works in passes, it can't work otherwise" answer again, because 1) no it doesn't, and 2) yes it could

[07:36:02.0000] <StoneCypher>
here's chrome working exactly the way you say it doesn't: http://neugierig.org/software/chromium/notes/2010/07/clipping.html

[07:36:03.0000] <Velmont>
Don't see the need to be so angry.

[07:36:04.0000] <StoneCypher>
why not

[07:37:00.0000] <StoneCypher>
the whole web is, apparently, moving to a broken standard

[07:37:01.0000] <StoneCypher>
one that most graphics people in the 1980s knew how to get around

[07:37:02.0000] <StoneCypher>
anyway, i'm not angry

[07:37:03.0000] <Velmont>
Well, I'm quite sure one guy being angry on an IRC channel isn't really going to help that.

[07:37:04.0000] <StoneCypher>
please stop playing freud with strangers

[07:37:05.0000] <StoneCypher>
thanks

[07:38:00.0000] <Velmont>
No, not angry, but ... some less intense word.

[07:38:01.0000] <annevk>
upset

[07:38:02.0000] <Velmont>
Yes

[07:38:03.0000] <Velmont>
That :-)

[07:38:04.0000] <StoneCypher>
i can see the two of you are good at reading emotions.

[07:38:05.0000] <annevk>
but euh, broken standards?

[07:38:06.0000] <annevk>
film at 11

[07:38:07.0000] <StoneCypher>
yes, that's how we get places like this, is people saying "i don't really care that this is fundamentally broken, and you shouldn't either."

[07:39:00.0000] <StoneCypher>
not really interested in people being not interested.

[07:39:01.0000] <annevk>
StoneCypher: anyway, if you want vectors, wouldn't it be better to use SVG?

[07:39:02.0000] <annevk>
StoneCypher: <canvas> is for bitmap graphics

[07:39:03.0000] <StoneCypher>
i don't want vectors.  i want raster.

[07:39:04.0000] <jgraham>
StoneCypher: I thought it was rather close to the graphics model on OSX

[07:39:05.0000] <annevk>
mkay

[07:39:06.0000] <jgraham>
Maybe I am wrong

[07:39:07.0000] <StoneCypher>
jgraham: yeah, that's why when they said it was apple i suddenly said "shit, maybe it is this broken"

[07:39:08.0000] <StoneCypher>
jgraham: apple's graphics model is the only major graphics model on the market that has this problem

[07:39:09.0000] <Philip`>
StoneCypher: That post says "the layer code never worked for <canvas> at all. Canvas calls don't manage the clipping stack as WebKit does. In fact, canvas code might not ever bother to pop the clipping stack. So, for canvas, we still use immediate, 1-bit clipping.", so it sounds like it's not compatible with how people currently use canvas, and anyway it's described as "a hack" and "falling apart" so it doesn't sound like an ideal model

[07:40:00.0000] <StoneCypher>
/me sighs

[07:40:01.0000] <StoneCypher>
Philip`, that's why i gave you that post

[07:41:00.0000] <StoneCypher>
was to show that layer clipping was indeed a valid case, which is what you had just said was not

[07:41:01.0000] <StoneCypher>
honestly i just wanted to know if anyone knew of a way to deal with this

[07:41:02.0000] <StoneCypher>
not to get into a series of mutually incompatible excuses for it being broken

[07:42:00.0000] <StoneCypher>
and for all of your discussions of how angry or upset you imagine i am, what you're actually misreading is frustration at people's rush to say things that have nothing to do with what i'm actually asking, which distracts from that i have a practical problem and someone in here may already have dealt with it

[07:42:01.0000] <StoneCypher>
there was someone trying to help at one point

[07:43:00.0000] <StoneCypher>
please stop bikeshedding so that that may return, thank you

[07:43:01.0000] <jgraham>
StoneCypher: If you can suggest a  backwards-compatble fix for the problem, please propose it on the maioling list along with your use case

[07:43:02.0000] <StoneCypher>
jgraham: backwards compatible is probably not possible

[07:43:03.0000] <StoneCypher>
but there may be something in place already

[07:44:00.0000] <Philip`>
/me was mostly just wanting to learn what ways the problem could be solved in, and whether any would be feasible to fit into the current canvas compatibility constraints

[07:44:01.0000] <StoneCypher>
well

[07:44:02.0000] <StoneCypher>
the general hacks to dealing with something like this are to expand the polygons (not possible for me) or to scale the canvas, render at a higher scale, then scale back down (doesn't fix the problem entirely, and very cpu expensive)

[07:45:00.0000] <StoneCypher>
actually

[07:45:01.0000] <StoneCypher>
there is a reasonable backwards compatible fix

[07:46:00.0000] <Philip`>
I guess you'd also want to disable the standard antialiasing when drawing at the higher scale (else you'll still get the seams)?

[07:46:01.0000] <StoneCypher>
just add a way to lock the canvas against geometric writes which either flushes on first non-geometric write or call

[07:46:02.0000] <StoneCypher>
that way the geometries can be applied at once and the only problem is getting the user to write their shared seams in a single batch

[07:46:03.0000] <StoneCypher>
still causes problems if you have composite layering

[07:47:00.0000] <StoneCypher>
but it's a hell of a lot better than nothing

[07:53:00.0000] <StoneCypher>
oh, huh

[07:54:00.0000] <StoneCypher>
actually that might already exist

[07:54:01.0000] <StoneCypher>
it may be that you can just postpone the call to .fill()

[07:54:02.0000] <StoneCypher>
... nope :)

[07:55:00.0000] <Velmont>
And all browsers behave like that?

[07:55:01.0000] <StoneCypher>
there's a hack that works with three of the five

[07:55:02.0000] <StoneCypher>
but yes, without the hack, they all show the seams at varying levels

[07:56:00.0000] <Velmont>
I mean with the posponing on fill.

[07:56:01.0000] <StoneCypher>
oh.  no, that doesn't work anywhere, i was just wrong

[07:57:00.0000] <Velmont>
OK. -- I might've thought someone had written it like that. It looked like a possible way to implement it.

[07:58:00.0000] <StoneCypher>
well it would be a smart way to write it

[07:58:01.0000] <StoneCypher>
and this makes it look like that's sane: https://developer.mozilla.org/samples/canvas-tutorial/6_1_canvas_composite.html

[08:05:00.0000] <StoneCypher>
i guess another sane way to fix this that would be ... not backwards compatible but backwards tolerant

[08:05:01.0000] <StoneCypher>
would be to make a new context type

[08:05:02.0000] <StoneCypher>
2d-procedural

[08:05:03.0000] <StoneCypher>
or something like that

[08:06:00.0000] <StoneCypher>
Velmont: would that be sufficient?  'cause that way nothing existing would break, and things could be adapted to the improved way with nearly zero effort

[08:10:00.0000] <jgraham>
I think you would need some major wins to get people on board with an entire new model

[08:11:00.0000] <jgraham>
Basically you woudl have to justify the cost of pulling people who would otherwise be working on, say, WebGL and making htem reimplement 2D canvas instead

[08:11:01.0000] <jgraham>
Plus the cost of retraining authors

[08:11:02.0000] <jgraham>
Plus the confusion

[08:18:00.0000] <Velmont>
It's sad that we didn't have it earlier. Having looked at it, I find the way the canvas model works now very strange and counterintuitive to how I thought it did.

[08:20:00.0000] <annevk>
damn it

[08:20:01.0000] <annevk>
forgot eggs amid all the yoghurt

[08:20:02.0000] <Velmont>
Getting a whole new context type will be seen as a quite intrusive and big thing, -- so I guess it'd meet a lot of opposition. Not that I know much about it.

[08:20:03.0000] <Velmont>
annevk: wth are you really doing? :P

[08:21:00.0000] <jgraham>
annevk: Did you remember tomatoes?

[08:21:01.0000] <annevk>
man, I fail at grocery shopping, does not get much sadder than that

[08:21:02.0000] <annevk>
I have some tomatoes

[08:21:03.0000] <annevk>
even onions

[08:21:04.0000] <jgraham>
Are they in the fridge?

[08:21:05.0000] <jgraham>
(the tomatoes)

[08:21:06.0000] <annevk>
tomatoes yes, onions no?

[08:22:00.0000] <jgraham>
Oh, you fail at storing tomatoes too then

[08:22:01.0000] <jgraham>
(it's OK I get that wrong quite often too)

[08:22:02.0000] <annevk>
they're the tiny tomatoes

[08:22:03.0000] <annevk>
man nobody ever taught me this stuff :)

[08:23:00.0000] <jgraham>
apparently the low fridge temperatures aren't good for the flavour-releasing compunds in the tomatoes

[08:23:01.0000] <jgraham>
No, I learnt this quite recently

[08:23:02.0000] <jgraham>
Which is why I still get it wrong quite often; habit

[08:23:03.0000] <StoneCypher>
jgraham: it wouldn't be an entire new model

[08:24:00.0000] <StoneCypher>
jgraham: it would just be adding two small concepts: delayed rendering of geometric primitives and a slight variant on the string used to get the context (which is how context is already meant to work)

[08:24:01.0000] <StoneCypher>
the only reason to do it at all is that the required change is not strictly backwards compatible

[08:24:02.0000] <jgraham>
StoneCypher: Could it be a mode on the existing context?

[08:24:03.0000] <jgraham>
Could we smuggle it in with path objects somehow?

[08:24:04.0000] <StoneCypher>
i don't know what a path object is.

[08:25:00.0000] <jgraham>
Is there a more creative solution?

[08:25:01.0000] <StoneCypher>
one, but it's not perfect

[08:25:02.0000] <StoneCypher>
what's a path object

[08:25:03.0000] <StoneCypher>
that might be a good answer

[08:25:04.0000] <jgraham>
They will be objects representing paths

[08:25:05.0000] <annevk>
jgraham: I'm taking out the tomatoes

[08:25:06.0000] <StoneCypher>
jgraham: beginPath, lineTo, closePath?

[08:27:00.0000] <jgraham>
StoneCypher: I am not entirely sure how it will work

[08:27:01.0000] <jgraham>
annevk might know better

[08:27:02.0000] <jgraham>
or Hixie

[08:27:03.0000] <annevk>
new Path()

[08:28:00.0000] <annevk>
then you have some methods on the Path() object to describe the path

[08:28:01.0000] <StoneCypher>
jgraham: i mean the change i'm considering is simple.  instead of .getContext('2d'), .getContext('2d-delayed'), then add two methods, .setDelayedFill(boolean) and .fillNow()

[08:28:02.0000] <StoneCypher>
or whatever

[08:28:03.0000] <annevk>
then you invoke fill(path) or some such

[08:28:04.0000] <annevk>
/me forgot the details

[08:28:05.0000] <StoneCypher>
oh.

[08:28:06.0000] <jgraham>
If you have path objects you can delay the rendering, right?

[08:28:07.0000] <StoneCypher>
well that, if you could fill multiple at once, would be enough

[08:28:08.0000] <StoneCypher>
jgraham: well you need that, but you also need the ability to fill a batch instead of a single object

[08:29:00.0000] <StoneCypher>
if there was canvasContext.fillMany(Array)

[08:29:01.0000] <StoneCypher>
that'd do the job

[08:29:02.0000] <StoneCypher>
annevk: is that sensible?

[08:29:03.0000] <annevk>
you should probably email the list

[08:29:04.0000] <jgraham>
StoneCypher: Then I suggest you mail the list

[08:29:05.0000] <StoneCypher>
/me is brand new to canvas

[08:29:06.0000] <StoneCypher>
/me will have to find the list

[08:29:07.0000] <StoneCypher>
/me just started learning canvas yesterday

[08:30:00.0000] <annevk>
I don't know man, better to email the list and add something like "Path object feedback"

[08:30:01.0000] <StoneCypher>
/me really wants this to be an already-solved problem that's just obscure

[08:30:02.0000] <annevk>
StoneCypher: http://www.whatwg.org/mailing-list#specs

[08:30:03.0000] <StoneCypher>
it seems like such an unlikely omission

[08:30:04.0000] <StoneCypher>
annevk: thanks

[08:30:05.0000] <annevk>
StoneCypher: if it's solved someone will point it out

[08:30:06.0000] <StoneCypher>
part of the reason i'm sad is Hixie usually knows exactly what i'm doing wrong

[08:30:07.0000] <StoneCypher>
granted it's been two years since i've needed to ask him

[08:31:00.0000] <StoneCypher>
but

[08:31:01.0000] <StoneCypher>
/me shrugs

[08:31:02.0000] <StoneCypher>
i'll get like three words into typing the question, won't have even hit return yet, and he'll answer

[08:32:00.0000] <StoneCypher>
oh well, maybe the mailing list has an idea :)

[08:32:01.0000] <StoneCypher>
annevk, jgraham, Velmont: do you see any immediate problems with a batch fill call for multiple path objects?

[08:32:02.0000] <StoneCypher>
Philip` too

[08:32:03.0000] <StoneCypher>
and then if not, thank you each for thinking this over with me

[08:32:04.0000] <annevk>
no, but then Path is still theoretical :)

[08:32:05.0000] <StoneCypher>
oh

[08:33:00.0000] <annevk>
I mean it's coming soonish, but there's no spec yet

[08:33:01.0000] <StoneCypher>
theoretical as in "this might exist" or theoretical as in "this will exist in the future"

[08:33:02.0000] <StoneCypher>
ah.

[08:33:03.0000] <StoneCypher>
/me really wanted this to work in chrome, because chrome's canvas is like 8x faster than the other browsers :(

[08:35:00.0000] <StoneCypher>
ok, i'm'a go have lunch and see if i can think of a way through this.

[08:35:01.0000] <StoneCypher>
thanks each

[08:35:02.0000] <AryehGregor>
MikeSmith, they're not nearly as complete or correct as I'd like, but yeah, I have some.  E.g., http://w3c-test.org/webapps/DOMCore/tests/approved/interfaces.html

[08:36:00.0000] <StoneCypher>
ooh.

[08:36:01.0000] <StoneCypher>
can tests be donated to that?

[08:36:02.0000] <annevk>
yes

[08:36:03.0000] <StoneCypher>
:D

[08:36:04.0000] <StoneCypher>
how please?

[08:36:05.0000] <MikeSmith>
AryehGregor: excellent, thanks

[08:36:06.0000] <annevk>
StoneCypher: http://lists.w3.org/Archives/Public/public-webapps-testsuite/

[08:37:00.0000] <annevk>
StoneCypher: i.e. upload them somewhere (using the same testharness framework) and point them out on the list, or attach them to your email or some such

[08:37:01.0000] <StoneCypher>
it may be productive to set up a dvcs for that, so that people can donate tests more trivially (pull request in git terminology)

[08:37:02.0000] <annevk>
StoneCypher: they're in dvcs

[08:37:03.0000] <StoneCypher>
orly.  are pull requests (or equivalent) a valid donation method?

[08:37:04.0000] <annevk>
StoneCypher: http://dvcs.w3.org/hg/webapps/ iirc

[08:38:00.0000] <annevk>
http://dvcs.w3.org/hg/webapps/file/tip/DOMCore/tests

[08:38:01.0000] <jgraham>
We haven't got them on github yet

[08:38:02.0000] <StoneCypher>
:D :D :D

[08:38:03.0000] <jgraham>
We probably should

[08:38:04.0000] <StoneCypher>
i would think github a great idea, just because it lowers the conceptual barrier to entry for so many people

[08:38:05.0000] <StoneCypher>
even though it's functionally equivalent

[08:39:00.0000] <annevk>
yeah, we should move all specs there too

[08:39:01.0000] <StoneCypher>
anyway, lunch and think-time

[08:39:02.0000] <StoneCypher>
bbl

[08:39:03.0000] <annevk>
kind of annoying as the W3C is using Mercurial at the moment

[08:39:04.0000] <annevk>
but it can be solved somehow

[08:39:05.0000] <MikeSmith>
we can easily mirror repos to git

[08:39:06.0000] <MikeSmith>
at github or wherever else

[08:39:07.0000] <jgraham>
For some value of easilly

[08:39:08.0000] <MikeSmith>
well, I can do it

[08:40:00.0000] <MikeSmith>
so that by definition means it's easy

[08:40:01.0000] <annevk>
MikeSmith: sweet

[08:40:02.0000] <jgraham>
But really if we are using github, we want to be able to accept pull requests

[08:40:03.0000] <MikeSmith>
yeah

[08:40:04.0000] <MikeSmith>
can do it both ways

[08:40:05.0000] <jgraham>
And afaict that is the point at which it all goes to hell

[08:40:06.0000] <annevk>
I have to go for a bit, but I'm definitely interested in working on this

[08:40:07.0000] <jgraham>
MikeSmith: Can one pull to a non-master branch in github?

[08:40:08.0000] <annevk>
making it easier for people to hack on specs / tests

[08:41:00.0000] <MikeSmith>
well, we can push from git repo to the mercurial one

[08:41:01.0000] <MikeSmith>
jgraham: dunno

[08:41:02.0000] <jgraham>
MikeSmith: In theory, or you got it working?

[08:41:03.0000] <MikeSmith>
but don't know that we'd need to

[08:41:04.0000] <MikeSmith>
well

[08:41:05.0000] <MikeSmith>
in theory

[08:41:06.0000] <jgraham>
MikeSmith: The only functional setup I remember seeing is doublec's Mozilla one

[08:41:07.0000] <annevk>
specs with http://s3.amazonaws.com/github/ribbons/forkme_right_darkblue_121621.png

[08:42:00.0000] <jgraham>
http://www.bluishcoder.co.nz/2011/04/16/my-git-workflow-for-mozilla-development.html

[08:43:00.0000] <jgraham>
The noticable thing about that setup is that he *never* commits to master

[08:43:01.0000] <jgraham>
(in git)

[08:43:02.0000] <jgraham>
I know in theory hg-git allows this to work, but it seems to be fragile as hell

[08:44:00.0000] <jgraham>
So if the flow of patches to master is always from hg to git it is rather simple

[08:44:01.0000] <jgraham>
(to keep the repos in sync)

[08:44:02.0000] <AryehGregor>
jgraham, I'm not clear on if you want me to modify my patch and resubmit it, and if so, what changes you want.  Do you want me to add protection against infinite recursion?  It seems like it's not worth the added code complexity to handle it -- the caller would have to be fairly pathological to trigger it, and it would be trivially diagnosed by going into a debugger, waiting a little while, and hitting "pause".

[08:45:00.0000] <jgraham>
AryehGregor: I think it is OK as is

[08:45:01.0000] <jgraham>
Unless you can think of a design that isn't goign to cause the horrible API surface area explosion we are currently seeing

[08:45:02.0000] <AryehGregor>
Also: I use hg-git to convert git to hg for the editing spec repo.  I just never change the hg version; I don't even pull from git to hg.  I just do a fresh hg clone of the git repo when I want to publish.

[08:46:00.0000] <AryehGregor>
jgraham, well, we could do like Mozilla and just pare back to assert_true() and assert_equals() and let everyone use assert_true() for everything nontrivial.

[08:46:01.0000] <jgraham>
AryehGregor: That works as long as no one ever touches the hg version

[08:46:02.0000] <AryehGregor>
The problem is it doesn't print the values nicely.

[08:46:03.0000] <jgraham>
I assume that won't be the case here

[08:46:04.0000] <AryehGregor>
jgraham, yep.  Fortunately, I'm the only one with commit access to my hg version.

[08:47:00.0000] <jgraham>
AryehGregor: Having only two functions is even worse :)

[08:47:01.0000] <AryehGregor>
Well then, pick your poison.

[08:48:00.0000] <jgraham>
Well, it feels like there exist other parts of design space that we just didn't use e.g. assert_equals(actual, expected, comparator)

[08:48:01.0000] <jgraham>
where comparator is a function

[08:48:02.0000] <AryehGregor>
In mochitests, people seem not to care much about informative error messages.  They're written by and for Gecko developers, so it's assumed to be fine if you have to hunt through the source code to find the failure.

[08:48:03.0000] <jgraham>
and you provide some built in functions

[08:48:04.0000] <AryehGregor>
Well, as the saying goes: the solution to any problem in computer science is more abstraction.

[08:49:00.0000] <jgraham>
Well that particular solution has the nice property that assert_array_approx_equals becomes assert_array_equals(expected, actual, delta(0.01))

[08:49:01.0000] <jgraham>
rather than a whole new function

[08:50:00.0000] <AryehGregor>
And then every call needs to have four arguments instead of three?  Or you want to autodetect the number of arguments?

[08:50:01.0000] <AryehGregor>
If you're making an optional third argument anyway, why not make it a number for now, instead of requiring the delta()?  Are there other functions we'd want just now?

[08:51:00.0000] <jgraham>
Well apparently you want a comparator that checks expected.indexOf(actual) != -1

[08:51:01.0000] <jgraham>
So that's two plus normal comparison

[08:52:00.0000] <AryehGregor>
How about instead of passing a function, you just pass a boolean?

[08:52:01.0000] <jgraham>
I can't work out what the boolean would do :)

[08:52:02.0000] <AryehGregor>
So instead of assert_equals(foo, bar, function(foo,bar){return bar.indexOf(foo) != -1}, desc), just assert_equals(foo, bar, bar.indexOf(foo) != -1, desc).

[08:52:03.0000] <AryehGregor>
It would basically be assert_true(bar.indexOf(foo) != -1, desc).

[08:53:00.0000] <AryehGregor>
Except with foo and bar used in printing the message.

[08:53:01.0000] <jgraham>
Well the point is that you would provide the comparison functions

[08:53:02.0000] <AryehGregor>
Yeah, but why not just have the caller do the comparison instead of passing a function whose only role is to be called with two known arguments?

[08:54:00.0000] <AryehGregor>
I guess it might be shorter if the arguments are complicated.

[08:54:01.0000] <jgraham>
Because it means that assert_array_whatever is just a map()

[08:54:02.0000] <AryehGregor>
. . . and?

[08:55:00.0000] <jgraham>
So you don't have to implement seperate API for the object case, the array case, and the single argument case

[08:55:01.0000] <jgraham>
You should end up with N+M functions rather than N*M

[08:56:00.0000] <AryehGregor>
Is N*M functions really a problem?  It's morally equivalent to passing one of the arguments as part of the function name.

[08:56:01.0000] <AryehGregor>
You could even autogenerate the functions if you like.

[08:57:00.0000] <jgraham>
Oh my, that sounds awful

[08:57:01.0000] <AryehGregor>
["", "_array", "_object"].forEach(function(s) { window["assert" + s + "_equals"] = function(....

[08:57:02.0000] <AryehGregor>
Well, I think we knew before now that our stylistic preferences differ.  :)

[08:57:03.0000] <jgraham>
I agree from the end user point of view it doesn't make that much difference. Unless you want to do something more complex where I guess it could matter

[08:59:00.0000] <AryehGregor>
You can always fall back to assert_true().

[08:59:01.0000] <jgraham>
e.g. if you had some function that could either return x in px or y in pt, instead of hardcoding x and y in an array you could pass a function that calculates y given x

[08:59:02.0000] <jgraham>
Of course, assert_true is always there as a last resort

[09:00:00.0000] <AryehGregor>
80/20 rule -- assert_true should be fine for anything that's not particularly common.

[09:01:00.0000] <jgraham>
It seems somewhat bad to make the complicated cases the ones that are hardest to read and get the worst error messages

[09:01:01.0000] <jgraham>
Anyway I am not particularly attached to this idea

[09:01:02.0000] <jgraham>
Or, I wish I had used this design at the start, but I didn't

[09:01:03.0000] <AryehGregor>
"No consensus positions were found, and all parties left the telecon frustrated.  Time estimates for finishing work on Transforms however were agreed to be within 2-3 months if appropriately prioritized. (This of course assumes future telecons are dedicated to making progress rather than arguing process.)"

[09:01:04.0000] <AryehGregor>
That sounds like the CSSWG, all right.

[09:02:00.0000] <jgraham>
So, no transforms for > 3 months then

[09:03:00.0000] <AryehGregor>
No unprefixed transforms.

[09:03:01.0000] <AryehGregor>
Which is ridiculous.

[09:04:00.0000] <AryehGregor>
Since the syntax has been completely stable for like a year.

[09:04:01.0000] <AryehGregor>
Interop is sure a heck of a lot better than, say, CSSOM.

[09:06:00.0000] <othermaciej>
I'm surprised that some of the people who opposed unprefixing transforms were also among those who said they thought they may need to implement widely used -webkit properties in a non-WebKit engine

[09:06:01.0000] <othermaciej>
it goes to show how much faith there is in the "unprefix at CR" rule, even though it is pretty arbitrary

[09:10:00.0000] <jgraham>
othermaciej: Only Sylvian or am I misreading?

[09:11:00.0000] <othermaciej>
I guess it was hard to follow who else was opposed

[09:11:01.0000] <othermaciej>
fwiw I think "drop prefix once syntax is stable enough for backwards compat" is a much more sensible rule than "drop prefix after entering CR", both in general and in this specific case

[09:12:00.0000] <othermaciej>
not sure if it is worth posting to www-style since I am not technically a CSS WG member

[09:13:00.0000] <jgraham>
/me predicts you would be told that CR is the point at which "syntax is stable enough for backwards compat"

[09:16:00.0000] <wilhelm_>
Are minutes available anywhere?

[09:19:00.0000] <othermaciej>
jgraham: given that specs sometimes drop out of CR and then completely change syntax or even drop whole properties, I think that is demonstrably not the case

[09:22:00.0000] <annevk>
when two vendors ship, you better get your story straight or just spec what they do

[09:22:01.0000] <jgraham>
othermaciej: Given that I think the whole Process is a work of fiction, I'm not going to disagree.

[09:26:00.0000] <MikeSmith>
http://www.w3.org/News/2012.html#entry-9363

[09:26:01.0000] <annevk>
http://www.w3.org/2002/ws/soapjms/ o_O

[09:27:00.0000] <jgraham>
Funny how SOAP makes you feel dirty

[10:34:00.0000] <StoneCypher>
[11:42] <jgraham> MikeSmith: The only functional setup I remember seeing is doublec's Mozilla one

[10:34:01.0000] <StoneCypher>
doublec plays here?

[10:34:02.0000] <StoneCypher>
i haven't talked to chris in ages

[10:42:00.0000] <gsnedders>
http://googlecode.blogspot.com/2012/02/tech-preview-of-chromium-with-dart.html

[10:50:00.0000] <bga>
good news

[10:50:01.0000] <smaug____>
sad

[11:01:00.0000] <TabAtkins>
othermaciej: Sylvain's precise position was, apparently, that he supported implementing the *non-standard* (but widely-used) -webkit things, but he didn't support recognizing the -webkit prefix on existing standardized properties.

[11:01:01.0000] <TabAtkins>
This was not communicated clearly during the meeting, but came out during the telcon yesterday.

[11:01:02.0000] <othermaciej>
does that mean they'd delete support for -webkit things as soon as someone writes an Editor's Draft?

[11:01:03.0000] <TabAtkins>
I don't know.

[11:02:00.0000] <othermaciej>
it sounds suspiciously like "I support a rule that coincidentally matches what Microsoft cares about but not what Mozilla cares about"

[11:02:01.0000] <TabAtkins>
I don't fully understand Sylvain's position, just that it's at least that much delta from Tantek's.

[11:04:00.0000] <bga>
i wait when ms add C# as scriptling lang to ie :)

[11:04:01.0000] <gsnedders>
Why add a single CLR language? :P

[11:05:00.0000] <bga>
or whole NET, yeah

[11:05:01.0000] <bga>
will be cool

[11:05:02.0000] <TabAtkins>
AryehGregor: Please note that this was not "the CSSWG" failing. It was particular members specifically resisting.

[11:09:00.0000] <Philip`>
"Both the Dart VM and modern JavaScript engines are first-class targets for Dart." - I wonder if that means they won't do blog posts and press releases saying how Chrome is ten times faster than any other browser on some application that happens to be written in Dart, or if the Dart VM will instead end up being more first-class than the JS translator

[11:14:00.0000] <jgraham>
Philip`: You so funny

[11:15:00.0000] <gsnedders>
Philip`: Will you marry me, your wit never ceases to amaze?

[11:15:01.0000] <jgraham>
TabAtkins: You do know though; Microsoft never drop support for things that they have released

[11:16:00.0000] <jgraham>
Because in 20 years time some fortune 100 company will have an intranet running IE10 on Windows Vista that depends critically on -webkit-something

[11:16:01.0000] <TabAtkins>
Probably, yeah.

[11:30:00.0000] <AryehGregor>
TabAtkins, if the process of the CSSWG allows such particular members to successfully resist, the process of the CSSWG is at fault and the CSSWG as a whole is accountable (even if some individual members aren't).

[11:34:00.0000] <TabAtkins>
The entire point of a standards body is to find consensus between members.  It can't always do so. So, we must take action as individuals.

[11:37:00.0000] <jgraham>
Uh, no, the point of a standards body is to create standards

[11:37:01.0000] <jgraham>
Consensus is just a common way to achieve that

[11:37:02.0000] <AryehGregor>
The entire point of a web standards body is to ensure interoperability between browsers.  Browsers implementing properties with names that work only in those browsers is ipso facto a failure of standards development.

[11:38:00.0000] <AryehGregor>
Consensus is a lousy way to make good standards, fiat works much better.

[11:38:01.0000] <AryehGregor>
Or arbitration, let's say.

[11:38:02.0000] <jgraham>
AryehGregor++

[11:38:03.0000] <AryehGregor>
An individual can make compromises much more efficiently than a group voting on something.

[11:39:00.0000] <AryehGregor>
The compromise should be between major implementers, without consideration for anyone else, as far as implementer requirements go.

[11:39:01.0000] <AryehGregor>
That's a grand total of roughly three parties, maybe four if you're generous.

[11:39:02.0000] <AryehGregor>
Sometimes they won't agree on anything, but then discussion usually doesn't help.  Resolve the issue -- either spec something or leave it undefined, but move on.

[11:39:03.0000] <AryehGregor>
The CSSWG tends to rehash the same issues endlessly without making anyone happy.

[11:40:00.0000] <AryehGregor>
Which leads to paralysis.

[11:40:01.0000] <AryehGregor>
The fact that there are about a million specs written by people who don't coordinate adequately and aren't working within a well-defined framework for rendering extensions doesn't help.

[11:41:00.0000] <AryehGregor>
(the framework for syntax extensions is good, but not layout)

[11:46:00.0000] <jwalden>
discussion seemed to be smashingly successful for the video codec issue

[11:46:01.0000] <AryehGregor>
Right, in which case the right answer is to leave it undefined and move on.

[11:46:02.0000] <AryehGregor>
No point in dwelling on it.

[11:47:00.0000] <AryehGregor>
WebM might win in a year or two, but not because of discussion.

[11:51:00.0000] <doublec>
StoneCypher: hi

[12:25:00.0000] <TabAtkins>
The three implementors you mention are precisely the ones that aren't agreeing.  Or rather, one isn't agreeing with the other two.

[12:29:00.0000] <AryehGregor>
In the case of prefixes, they really don't need to agree.  They can just independently decide whether to unprefix.

[12:30:00.0000] <TabAtkins>
I agree.

[12:30:01.0000] <AryehGregor>
FWIW, from the vote it looked like different WebKit developers had different opinions, so not sure what side you count them as.

[12:30:02.0000] <TabAtkins>
Apple was on one side, Chrome was on the other.

[12:36:00.0000] <jgraham>
wrt prefixes the problem is exactly that the standards goup is rying to maintain a highly unstable equlibrium

[12:36:01.0000] <AryehGregor>
So Mozilla and Google should unprefix, Microsoft and Apple don't have to if they don't want to.  Problem solved.

[12:36:02.0000] <jgraham>
*group

[12:36:03.0000] <Wilto>
Woah, I showed up just in time. Everything is solved forever!

[12:44:00.0000] <jgraham>
Wilto: Not everything maybe. But I am getting the experience of being the choir whilst AryehGregor preaches. And given my horrible singing voice and general tone-deafness, being in a choir is a new experience for me!

[12:44:01.0000] <AryehGregor>
/me is also not particularly musical :(

[12:44:02.0000] <Wilto>
I’ve just resolved not to use the internet anymore, me. PROBLEM(S) SOLVED

[12:46:00.0000] <gsnedders>
AryehGregor: You should do a sing-along Sound of Music!

[12:46:01.0000] <gsnedders>
/me hides from jgraham 

[12:47:00.0000] <Wilto>
The hills are alive with the sound of markup.

[12:55:00.0000] <TabAtkins>
AryehGregor: Any idea what the interop story is for Transitions/Animations?

[12:55:01.0000] <AryehGregor>
TabAtkins, not a clue.

[12:55:02.0000] <AryehGregor>
I'm just starting to poke at tests.

[12:58:00.0000] <TabAtkins>
kk.

[12:58:01.0000] <TabAtkins>
Also, <3 for your testing.

[13:01:00.0000] <AryehGregor>
/me is currently working on porting a Gecko transition test file to be cross-browser and based on testharness.js

[13:06:00.0000] <AryehGregor>
Transitions are complicated.  I don't like them.  :(

[13:06:01.0000] <AryehGregor>
Transforms are simple.  :)

[13:06:02.0000] <TabAtkins>
Learn to love the third dimension of time.

[13:07:00.0000] <AryehGregor>
Transforms already have four dimensions.

[13:07:01.0000] <AryehGregor>
Without time.

[13:07:02.0000] <TabAtkins>
Four?

[13:07:03.0000] <AryehGregor>
Well, kind of.

[13:07:04.0000] <AryehGregor>
I mean, matrix3d() is 4x4.

[13:07:05.0000] <AryehGregor>
The fourth coordinate isn't spatial or temporal, but it's there.

[13:07:06.0000] <TabAtkins>
But it has 3d in its name!

[13:07:07.0000] <TabAtkins>
QED

[13:08:00.0000] <AryehGregor>
Admittedly, it's a representation of something resembling three-dimensional projective space with four coordinates, so there are really only three *dimensions*.

[13:08:01.0000] <AryehGregor>
(it's not quite regular old projective space)

[13:08:02.0000] <AryehGregor>
(it has an origin, and (x, y, z, w) !~ (-x, -y, -z, -w))

[13:26:00.0000] <jgraham>
/me wonders what !~ is

[13:26:01.0000] <AryehGregor>
"not equivalent"

[13:27:00.0000] <jgraham>
Ah

[13:27:01.0000] <jgraham>
That makes more sense than "no of the same order of magnitude as" :)

[13:27:02.0000] <AryehGregor>
In projective space, one normally says that (x1, ..., xn) ~ (y1, ..., yn) if there exists some nonzero t so that (t*x1, ..., t*xn) = (y1, ...., yn).

[13:27:03.0000] <AryehGregor>
In 3D transform space, it seems like this only holds for positive t, not nonzero t.

[13:28:00.0000] <jgraham>
I imagine there is some great reason one has 4 coordinates to describe 3 dimensions, but I have no idea what it is

[13:28:01.0000] <AryehGregor>
P^(n - 1)(R) is defined as (R^n \ {0})/~ for the above ~.

[13:28:02.0000] <AryehGregor>
Perspective, basically.

[13:28:03.0000] <AryehGregor>
It's a clever trick.

[13:36:00.0000] <AryehGregor>
/me wonders why people mistype his name as Areyeh

[13:36:01.0000] <AryehGregor>
More than a few people have done that.

[13:36:02.0000] <AryehGregor>
Why that specific misspelling?

[13:38:00.0000] <StoneCypher>
it's just another english transliteration

[13:38:01.0000] <StoneCypher>
also it's phonetically how an american would spell that sound

[14:03:00.0000] <karlcow>
MikeSmith: for http://platform.html5.org/history/ do you consider SVG 1.0 be part of it? http://www.w3.org/TR/SVG10/

[14:04:00.0000] <heycam>
depends what "new" means

[14:04:01.0000] <shepazu>
depends what "means" means

[14:05:00.0000] <MikeSmith>
karlcow: really so far I've only been adding milestones from WF2 and Web Apps 1.0

[14:05:01.0000] <karlcow>
depends depends

[14:05:02.0000] <MikeSmith>
I've not even added any CSS3 stuff

[14:05:03.0000] <karlcow>
ok MikeSmith I was not sure about the scope of the list

[14:05:04.0000] <MikeSmith>
I think I will leave those to somebody else who knows that history better

[14:07:00.0000] <shepazu>
MikeSmith: who maintains http://platform.html5.org/ ?

[14:10:00.0000] <annevk>
http://imgur.com/urWHb man

[14:10:01.0000] <annevk>
now that's a cool suit to have

[14:11:00.0000] <StoneCypher>
is that a miyazaki creature?

[14:11:01.0000] <StoneCypher>
that looks like it belongs in totoro or something

[14:12:00.0000] <annevk>
that is Totoro

[14:12:01.0000] <StoneCypher>
oh.

[14:12:02.0000] <StoneCypher>
see 'cause i haven't actually seen totoro, only posters

[14:12:03.0000] <StoneCypher>
huhuhu

[14:12:04.0000] <annevk>
worth watching

[14:12:05.0000] <StoneCypher>
yeah i just haven't gotten around to it, i've seen most of his other work

[14:12:06.0000] <StoneCypher>
adore mononoke hime

[14:12:07.0000] <StoneCypher>
and nausicaa

[14:13:00.0000] <annevk>
nausicaa is cool

[14:13:01.0000] <annevk>
I really liked that one

[14:14:00.0000] <Velmont>
<3

[14:14:01.0000] <StoneCypher>
kiki might be my favorite

[14:14:02.0000] <shepazu>
nausicaa was the first miyazaki I ever saw, back when I was a kid, before I had any idea what anime was (it hadn't really reached the US yet)

[14:14:03.0000] <StoneCypher>
i cut my teeth on speed racer

[14:14:04.0000] <shepazu>
that sounds painful :)

[14:14:05.0000] <MikeSmith>
shepazu: the community maintains it

[14:14:06.0000] <StoneCypher>
then manzinger z, voltron and lupin the 3rd

[14:15:00.0000] <Velmont>
annevk: My gf have been making clothes for herself the last week (I got her, finally, after 3 years og nagging, a sewing machine). So when she saw me laughing at something, and looking at my screen, she said she could make me a suit like that :P

[14:15:01.0000] <annevk>
don't say no

[14:17:00.0000] <annevk>
in other news, DOM4 has mutation listener stuff embedded

[14:17:01.0000] <annevk>
first draft

[14:17:02.0000] <annevk>
euh mutation observer

[14:17:03.0000] <TabAtkins>
yay!

[14:17:04.0000] <smaug____>
reviewing needed :)

[14:17:05.0000] <smaug____>
callback is wrong...

[14:18:00.0000] <smaug____>
/me should file bugs

[14:18:01.0000] <annevk>
callback is right

[14:18:02.0000] <smaug____>
it is wrong :)

[14:18:03.0000] <smaug____>
it has never been right in the D4 draft

[14:19:00.0000] <annevk>
what exactly is wrong then?

[14:20:00.0000] <smaug____>
let me find the right syntax...

[14:20:01.0000] <smaug____>
it should allow { handleMutation: function() {} }

[14:20:02.0000] <annevk>
no it shouldn't

[14:20:03.0000] <annevk>
we had a long discussion on that

[14:20:04.0000] <annevk>
so yeah, not a bug

[14:21:00.0000] <smaug____>
I haven't seen such discussion about mutationcallback

[14:21:01.0000] <smaug____>
anyway, I'll implement { handleMutations: function() {} } :)

[14:21:02.0000] <TabAtkins>
It would be awesome if you didn't make unilateral changes in your impl that no one else wants.

[14:23:00.0000] <smaug____>
it would be awesome if specs wouldn't make the web APIs more inconsistent

[14:23:01.0000] <annevk>
pretty sure sicking won't allow it

[14:23:02.0000] <TabAtkins>
{ handleMutations: ... } isn't consistent anyway.  If you're making that argument, implement as { handleEvent: ... }

[14:24:00.0000] <smaug____>
handleEvent doesn't make any sense

[14:24:01.0000] <TabAtkins>
+1

[14:24:02.0000] <sicking>
/me agrees with smaug

[14:24:03.0000] <sicking>
i think it should be onmutation

[14:26:00.0000] <jgraham>
oh, please not this again

[14:45:00.0000] <sicking>
i do however think it's more important to make an API good, than to make it consistent with existing stuff

[14:45:01.0000] <sicking>
especially since we hear nothing but complaints about how much the DOM sucks

[15:45:00.0000] <annevk>
le sigh

[15:51:00.0000] <MikeSmith>
le un atre shitstorm


2012-02-17
[16:06:00.0000] <[tm]>
on the plus side, let's note how bitchin irssi connectbot for Android is

[00:37:00.0000] <zcorpan>
i removed outline-color from quirks mode, based on research (documented in the source)

[00:44:00.0000] <annevk>
"The script tag specifies a checksum calculated using a cryptographic hash function."

[00:44:01.0000] <annevk>
should be a FAQ entry for that one

[00:47:00.0000] <MikeSmith>
made some more updates http://platform.html5.org/history/

[00:47:01.0000] <MikeSmith>
now I stop for beer

[00:48:00.0000] <annevk>
wise choice

[00:48:01.0000] <annevk>
if it was not 10AM I might join you

[00:56:00.0000] <asmodai>
Whoever is responsible for the new release note pages of Firefox, I like it: https://www.mozilla.org/en-US/firefox/10.0.2/releasenotes/

[00:56:01.0000] <asmodai>
Very clear to look at, as both user and dev.

[00:57:00.0000] <annevk>
argh

[00:57:01.0000] <annevk>
why does Julian not simply read the original thread

[00:58:00.0000] <asmodai>
annevk: By the way, do you know if Opera mobile will use some persistent state storage at some point on Android devices?

[00:58:01.0000] <asmodai>
annevk: i.e. to restore tabs when the app gets pushed out of memory.

[00:59:00.0000] <annevk>
I don't really know anything about that I'm afraid

[01:00:00.0000] <annevk>
we should though :)

[01:00:01.0000] <asmodai>
annevk: Should I file a bug report?

[01:00:02.0000] <annevk>
yeah sure

[01:06:00.0000] <asmodai>
ANDMEX-6344 it is

[01:24:00.0000] <zcorpan>
hmm, 'size' shows up quite a bit. wonder if they meant 'font-size' or the paged media property

[01:25:00.0000] <asmodai>
Firefox' save complete page ought to duplicate the entire visual aspect of a page, right?

[02:44:00.0000] <MikeSmith>
"Working for Opera, Anne was probably the only real representative of the web community at this conference." seems to be overstating things a bit

[02:58:00.0000] <annevk>
the mutation observer stuff is really quite good

[02:58:01.0000] <annevk>
just needs some more markup and a bit of rephrasing

[04:38:00.0000] <Velmont>
So... How does this spec thing really work, -- the IDB bugs I've been littering the bug tracker with, - the once that are agreed OK'd, who is supposed to update them? One of the editors I guess, -- but can I poke people directly in a way?

[04:38:01.0000] <annevk>
you can email the editors

[04:38:02.0000] <annevk>
i'd give them at least a few weeks though

[04:39:00.0000] <annevk>
unless it's important to settle it soonish

[04:39:01.0000] <Velmont>
Ok. :P

[04:39:02.0000] <Velmont>
Not really. I'm just impatient :P

[04:45:00.0000] <Velmont>
WAAT! searching for xhr2, the first result is no longer the spec. Actually... It isn't on the first page of google at all :-(

[04:49:00.0000] <jdalton>
wondering if anyone has stats on the average number of html tags used on web sites

[04:50:00.0000] <bga_>
ask google

[04:50:01.0000] <bga_>
:)

[04:50:02.0000] <Velmont>
I hate that the ECMA-262 is a PDF-file. I just want to look up stuff, not download that big document all the time. >:-(

[04:52:00.0000] <annevk>
Velmont: http://es5.github.com/

[04:52:01.0000] <annevk>
Velmont: search for XHR

[04:52:02.0000] <Velmont>
annevk: Ah, how beautiful. -- Maybe the specs could now link directly also ;-)

[04:52:03.0000] <annevk>
Velmont: but even then you are mislead

[04:52:04.0000] <annevk>
misled

[04:53:00.0000] <annevk>
as it gives TR/

[04:53:01.0000] <annevk>
Google should really learn to read the email archives and based on that demote TR/ links as people do not value them

[04:53:02.0000] <Velmont>
Yep. All this extra clicking. :-/

[04:54:00.0000] <Velmont>
Well, we could just sync TR often...

[04:54:01.0000] <annevk>
haha, tell that to the W3C webmaster

[04:56:00.0000] <Velmont>
I mean, -- since everyone with a sane mind is supposed to use the dev versions, -- why is there another one at all? I think that strange.

[04:56:01.0000] <jgraham>
W3C is very strange

[04:56:02.0000] <Velmont>
Who wants the always out of date one?

[04:57:00.0000] <annevk>
ye olde guard

[04:57:01.0000] <jgraham>
Apparently some people critically depend on being out of date. These people are always shadowy and mysterious and rarely speak for themselves.

[05:00:00.0000] <matjas>
perhaps the data that was used when the most popular classnames were researched (and some HTML5 element names were decided) would be useful for jdalton… anyone got a link?

[05:00:01.0000] <kennyluck>
I honestly don't understand when people link to TR drafts. Where do people find those links? From the W3C site?

[05:00:02.0000] <jgraham>
From Google probably

[05:01:00.0000] <Velmont>
kennyluck: Google. I'm constantly at TR.

[05:01:01.0000] <jdalton>
word

[05:01:02.0000] <jgraham>
It often links me to TR/

[05:01:03.0000] <Velmont>
Google is hurting standards.

[05:01:04.0000] <Velmont>
:P

[05:01:05.0000] <annevk>
hg diff is pretty terrible for https://bitbucket.org/ms2ger/dom-core/changeset/e47f190a2bfb :(

[05:01:06.0000] <jgraham>
Then I have to do a special dance of rage to end up at dev.w3.org

[05:03:00.0000] <Velmont>
Anyway. Also, since I'm in a point out stuff-mood; why-o-why is there Hardware and OS in the W3C bugtracker? I don't see how that could ever be relevant to specs.   -- version field is also a bit strange, but I can at least see that it can be used in some specs.

[05:04:00.0000] <annevk>
maybe that's hardcoded by bugzilla?

[05:04:01.0000] <annevk>
and there's some software projects that use bugzilla

[05:05:00.0000] <annevk>
W3C Bugzilla*

[05:05:01.0000] <Velmont>
Could be. Although I think the w3c bugzilla is quite nicely set up and easy to use. -- So it feels like an omission that those fields are there still.

[05:06:00.0000] <annevk>
could ask Mike

[05:06:01.0000] <annevk>
tomorrow that is

[05:06:02.0000] <annevk>
or tonight

[05:10:00.0000] <Philip`>
jdalton: Total number of tags, or number of distinct tag names?

[05:11:00.0000] <jdalton>
tags in general

[05:11:01.0000] <jdalton>
(number of tags)

[05:11:02.0000] <[tm]>
i don't know if there's any way to remove those in config of the bugzilla version we are running

[05:11:03.0000] <Philip`>
jdalton: You could sum all the numbers from http://philip.html5.org/data/tag-count-total.txt and divide by the number of pages (130K) if you want a mean

[05:13:00.0000] <jdalton>
cool thanks

[05:13:01.0000] <Philip`>
(Mean isn't necessarily highly representative though, since there might be a few pages that each have hundreds of thousands of tags)

[05:13:02.0000] <jdalton>
wow perfect thanks!

[05:14:00.0000] <jdalton>
sure but in general

[05:14:01.0000] <jdalton>
imma making a benchmark for using css expressions

[05:14:02.0000] <jdalton>
and wanted to know a good average page size

[05:14:03.0000] <jdalton>
this is great cuz its targeted per element

[05:46:00.0000] <Velmont>
Is there a way to get all comments and stuff from e.g. indexeddb bugs in w3c tracker?

[05:47:00.0000] <Velmont>
I've made a search, which I'm using. And I'm getting new bugs (from the mailing list), but not comments on bugs I'm not watching.

[05:58:00.0000] <annevk>
Velmont: also ask MikeSmith when he's around

[05:58:01.0000] <annevk>
Velmont: he can probably set something up if there's nothing

[06:01:00.0000] <[tm]>
I'm here but on my mobile so typing limited

[06:01:01.0000] <annevk>
it's too late to be here man :p

[06:01:02.0000] <annevk>
oh, it's only 11PM

[06:02:00.0000] <annevk>
I guess there was some time zone change

[06:02:01.0000] <[tm]>
i love you guys so much i can't bear to be apart

[06:02:02.0000] <Velmont>
:p

[06:04:00.0000] <[tm]>
on my second chu-hai waiting for effects to kick in

[06:04:01.0000] <annevk>
no shōchū?

[06:05:00.0000] <[tm]>
probably need about two more at least for the good vibrations to start flowing

[06:05:01.0000] <[tm]>
at karaoke place

[06:05:02.0000] <annevk>
at the corner?

[06:05:03.0000] <[tm]>
no good shochu here

[06:06:00.0000] <annevk>
wish I was there, sounds like fun :)

[06:06:01.0000] <[tm]>
annevk:  different place

[06:07:00.0000] <[tm]>
not quite as funky as that corner place

[06:08:00.0000] <[tm]>
dude

[06:09:00.0000] <[tm]>
i got banned from fungo

[06:09:01.0000] <[tm]>
they don't like me passing out at the bar

[06:09:02.0000] <[tm]>
or something

[06:11:00.0000] <annevk>
actual lol here

[06:11:01.0000] <annevk>
hahaha

[06:11:02.0000] <annevk>
no kidding man

[06:11:03.0000] <annevk>
they're too expensive anyway

[06:52:00.0000] <annevk>
Ms2ger: what is that IDL bug report about?

[07:48:00.0000] <zcorpan>
<a style="{color: blue; background: d9eafe}:visited {color: green}

[07:48:01.0000] <zcorpan>
awesome

[07:49:00.0000] <Ms2ger>
DIdn't we have a CSS spec at some point that allowed that?

[07:50:00.0000] <zcorpan>
yeah i recall something also

[07:50:01.0000] <zcorpan>
oh the search is finished already

[07:51:00.0000] <zcorpan>
that was quick, the other regexes i've run took a lot longer

[07:51:01.0000] <charlvn>
zcorpan: where the heck did you find that?!

[07:51:02.0000] <zcorpan>
charlvn: dotnetdotcom's web200904

[07:52:00.0000] <charlvn>
:D

[07:52:01.0000] <charlvn>
nice

[07:55:00.0000] <StoneCypher>
that's very neat, but inline styles are still the devil

[07:55:01.0000] <zcorpan>
$ grep -iaPo "<[a-z]+\s[^>]*style\s*=\s*[\"']{[^\"'>]+" web200904 > style-braces.txt

[07:55:02.0000] <zcorpan>
6556 matches

[07:56:00.0000] <zcorpan>
seems like we should support that quirk huh

[07:56:01.0000] <StoneCypher>
horns, cloven hooves, barbed tail

[07:56:02.0000] <zewt>
out-of-line styles are the devil for a lot of locally isolated styles

[07:57:00.0000] <StoneCypher>
war of opinions!  (deploys AA guns to western border)

[07:57:01.0000] <StoneCypher>
MY SIDE HAS BETTER UNIFORMS

[07:57:02.0000] <zewt>
my side has more readable source

[07:57:03.0000] <StoneCypher>
:(

[07:58:00.0000] <StoneCypher>
fine, mister legitimate arguments

[07:58:01.0000] <StoneCypher>
my side has better modularity and easier long term maintenance

[07:59:00.0000] <StoneCypher>
and better uniforms

[08:00:00.0000] <AryehGregor>
Wow, transitions are way more complicated than transforms.

[08:00:01.0000] <zewt>
my side has less modularity-for-the-sake of it and much easier long term maintenance (the amount of time I've spent jumping around source files to find things that are separated out for no more reason than "someone said it should always be this way and he sounded like he knew what he was talking about")

[08:01:00.0000] <jgraham>
AryehGregor: Is that your version of "good morning whatwg"?

[08:01:01.0000] <jgraham>
You have started saying it regularly every day

[08:02:00.0000] <zewt>
right on the hour, no less

[08:02:01.0000] <zewt>
today, at least :P

[08:08:00.0000] <AryehGregor>
jgraham, well, maybe for now.  :)

[08:31:00.0000] <annevk>
oh

[08:31:01.0000] <annevk>
it seems removing isSameNode was successful after all

[08:31:02.0000] <annevk>
yay

[08:32:00.0000] <annevk>
hopefully next week I can finally work on encodings again

[08:33:00.0000] <annevk>
is http://wiki.whatwg.org/wiki/StringEncoding only discussed by the Kronos guys?

[08:33:01.0000] <annevk>
khronos

[08:35:00.0000] <jgraham>
Oh, adding character encoding related MAYs to the platform. Lovely.

[08:38:00.0000] <annevk>
i hope it's not happening like arraybuffer

[08:41:00.0000] <annevk>
"If <mediatype> is omitted, it defaults to text/plain;charset=US-ASCII."

[08:41:01.0000] <annevk>
" As a shorthand, "text/plain" can be omitted but the charset parameter supplied."

[08:41:02.0000] <annevk>
hmm

[08:42:00.0000] <annevk>
that seems buggy in Opera

[08:42:01.0000] <annevk>
data:;charset=hz-gb-2312,~~

[08:43:00.0000] <annevk>
it's not really a good spec, but the intent is clear, sort of

[08:43:01.0000] <annevk>
that should give a single ~

[08:46:00.0000] <annevk>
that is now CORE-44654 in case anyone cares

[08:46:01.0000] <Ms2ger>
Can't see that, I'm afraid

[08:47:00.0000] <jgraham>
Needs a longdesc

[08:48:00.0000] <Ms2ger>
Pff

[08:48:01.0000] <Ms2ger>
I used to use longdesc correctly

[08:50:00.0000] <Philip`>
I always use longdesc correctly, since the correct way is to not use it

[08:50:01.0000] <jgraham>
Ms2ger: Easy here <bug src="http://bugs.opera.com/browse/CORE-44654" longdesc="http://krijnhoetmer.nl/irc-logs/whatwg/20120217#l-407">

[08:50:02.0000] <annevk>
someone should write a new data URL spec maybe

[08:50:03.0000] <Ms2ger>
/me hears a volunteer

[08:50:04.0000] <jgraham>
What's wrong with the existing one?

[08:51:00.0000] <annevk>
somewhat vague

[08:51:01.0000] <annevk>
and it is missing http://dvcs.w3.org/hg/xhr/raw-file/tip/Overview.html#data:-urls-and-http

[08:51:02.0000] <Ms2ger>
Let's rewrite all the somewhat vague specs

[08:51:03.0000] <annevk>
it's on my future todo list

[08:51:04.0000] <annevk>
URL / MIME

[08:52:00.0000] <Ms2ger>
Once your current todo list is finished? :)

[08:52:01.0000] <annevk>
more likely when I get bored with the current one

[08:52:02.0000] <annevk>
but ideally yes

[08:52:03.0000] <Ms2ger>
/me opens his calendar on 2047

[08:54:00.0000] <annevk>
e.g. if you have data:;trala:test

[08:54:01.0000] <annevk>
what happens?

[08:55:00.0000] <annevk>
sorry

[08:55:01.0000] <annevk>
data:;trala,test

[08:55:02.0000] <annevk>
per RFC that should fail

[08:55:03.0000] <annevk>
it does in no browser however

[08:57:00.0000] <annevk>
and what does "As a shorthand, "text/plain" can be omitted but the charset parameter supplied." mean?

[08:57:01.0000] <annevk>
is that even English?

[09:00:00.0000] <annevk>
whoa inbox 212

[09:00:01.0000] <annevk>
and it's weekend

[09:18:00.0000] <annevk>
DOM is still under 50 pages

[09:19:00.0000] <annevk>
cannot get HTML print previewed

[09:19:01.0000] <Philip`>
annevk: I believe it is valid English, though I couldn't explain why

[09:19:02.0000] <annevk>
can you explain what it means?

[09:20:00.0000] <Philip`>
"As a shorthand, you can omit "text/plain" but supply the charset parameter"

[09:20:01.0000] <annevk>
e.g. if you specify data:;foo=bar,test what happens then?

[09:21:00.0000] <annevk>
<mediatype> is not exactly omitted then, but charset is not supplied either

[09:23:00.0000] <Philip`>
That doesn't sound like an instance of the specified shorthand, since it doesn't supply the charset parameter, so it's not allowed by that sentence

[09:23:01.0000] <annevk>
but it's allowed by the syntax

[09:25:00.0000] <Philip`>
In that case it sounds like it'd be good for the spec to be more precise about it

[09:35:00.0000] <zewt>
annevk: i wouldn't call that valid english, no

[09:37:00.0000] <asmodai>
annevk: It's English, but it assumes a lot/infers a lot implicitly.

[09:37:01.0000] <zewt>
it makes my native parser go "the charset parameter supplied what?"

[09:38:00.0000] <asmodai>
zewt: true, and calling it shorthand is just crude tbh

[09:38:01.0000] <asmodai>
If this is for a spec's text *shudder*

[09:44:00.0000] <annevk>
it's from http://tools.ietf.org/html/rfc2397

[09:46:00.0000] <smaug____>
Ms2ger: what is http://w3c-test.org/webapps/DOMCore/tests/submissions/Ms2ger/Node-cloneNode.html about

[09:46:01.0000] <Ms2ger>
Cloning nodes?

[09:47:00.0000] <smaug____>
Ms2ger: but the document cloning

[09:48:00.0000] <Ms2ger>
That's what the spec... used to say?

[09:48:01.0000] <smaug____>
Ms2ger: really?

[09:48:02.0000] <Ms2ger>
annevk, why does http://dvcs.w3.org/hg/domcore/raw-file/tip/Overview.html#concept-node-clone set node-document to null?

[09:49:00.0000] <smaug____>
IIRC support for document cloning was added to gecko because acid3 required it

[09:49:01.0000] <Ms2ger>
smaug____, I think we couldn't clone doctypes or something like that?

[09:49:02.0000] <Ms2ger>
Could you file a bug?

[09:50:00.0000] <annevk>
Ms2ger: I guess it should be set to itself

[09:50:01.0000] <Ms2ger>
I think so, yes

[09:50:02.0000] <annevk>
we probably changed it one place but not the other

[09:50:03.0000] <Ms2ger>
Anyway, I'm off for the weekend

[09:50:04.0000] <annevk>
so it should be set to /copy/

[09:51:00.0000] <Ms2ger>
See y'all

[09:51:01.0000] <annevk>
i'll fix that

[09:51:02.0000] <annevk>
have fun

[09:51:03.0000] <Ms2ger>
Thanks

[09:55:00.0000] <AryehGregor>
. . . what do arguments beyond the first two do when passed to setTimeout?

[09:55:01.0000] <AryehGregor>
MDN and HTML both document the extra parameters, but don't say what they do.

[09:55:02.0000] <AryehGregor>
It's an extra param passed to the function?

[09:56:00.0000] <AryehGregor>
Seems so.

[09:56:01.0000] <gavin>
yeah

[09:57:00.0000] <AryehGregor>
But IE doesn't support it, so the cross-browser way is setTimeout(f.bind(null, param1, param2, ...), timeout).

[09:57:01.0000] <annevk>
AryehGregor: "calls the Function with as its arguments the third and subsequent arguments to the invoked method (if any)"

[09:57:02.0000] <annevk>
from HTML

[09:57:03.0000] <annevk>
it's not universally implemented afaik

[09:58:00.0000] <AryehGregor>
Oh, it doesn't mention the "args" argument by name.

[11:52:00.0000] <aklein>
annevk: style/consistency/markup changes to mutation observers look great

[11:53:00.0000] <aklein>
annevk: especially the dom intro box around the MutationRecord stuff

[11:54:00.0000] <annevk>
thanks

[11:54:01.0000] <annevk>
I'll look into your email later and make some further changes

[11:55:00.0000] <annevk>
what I meant btw was that at the end of "Mutation observation algorithms" there's "add a transient observer"

[11:55:01.0000] <annevk>
which does not really seem needed

[11:55:02.0000] <annevk>
it's only used once so you might as well define that in place

[11:56:00.0000] <annevk>
and it doesn't use the "transient observer" shortcut that was defined earlier

[11:56:01.0000] <annevk>
which I found a bit weird

[11:58:00.0000] <annevk>
anyway, back to Taxi Driver

[12:29:00.0000] <aklein>
annevk: ah, I see. yeah, I agree that's probably not needed (though depending on how we spec the remove all mutation, it may get one more reference)

[12:40:00.0000] <annevk>
k

[13:04:00.0000] <TabAtkins>
There's an IE bug tracking the setTimeout thing, triggered by a demo of mine.  ^_^

[13:05:00.0000] <jgraham>
TabAtkins: You know, that sentence would have been more illuminating if there was something more substantial in place of the word "thing". A noun for example.

[13:07:00.0000] <_bga>
http://sphotos.xx.fbcdn.net/hphotos-snc7/383665_10150462880131136_395391936135_10704089_241975421_n.jpg

[13:07:01.0000] <TabAtkins>
Or you could, you know, look upward a few inches and see Aryeh talking about a setTimeout feature not being supported in IE.

[13:12:00.0000] <annevk>
aklein: how about instead of "dispatch" we name those "queue a TYPE record"?

[13:13:00.0000] <annevk>
aklein: because nothing is actually dispatched like events are

[13:14:00.0000] <annevk>
aklein: and just to be sure in http://dvcs.w3.org/hg/domcore/raw-file/tip/Overview.html#concept-mutation-dispatch-attributes you actually mean "run them for the next *registered* observer" right?

[13:14:01.0000] <annevk>
because observer is something else (somewhat unfortunate, but I cannot think of better terms either)

[13:26:00.0000] <smaug____>
yeah, I don't like using word dispatch with mutationobserver

[13:26:01.0000] <smaug____>
annevk: queue ... sounds better

[13:27:00.0000] <annevk>
problem with queue is that HTML uses it for tasks

[13:27:01.0000] <annevk>
but queue record is prolly good enough, and it's quite related to tasks after all

[14:03:00.0000] <aklein>
annevk: queue sounds great to me, this is another case of a method name leaking into the spec

[14:03:01.0000] <aklein>
annevk: and yeah, that was just a lack of precision, it's the next "registered observer"

[14:20:00.0000] <annevk>
made those changes

[14:20:01.0000] <annevk>
might make some more tomorrow including changes to the organization of the section

[14:21:00.0000] <annevk>
but starts to look pretty good I think; went quicker than expected thanks to all the effort you had put in already

[14:23:00.0000] <annevk>
eight months after http://annevankesteren.nl/2011/06/mutation

[14:23:01.0000] <annevk>
though the idea of replacing them has been around a little longer

[14:24:00.0000] <aklein>
we stumbled onto the idea due to nudging from ojan

[14:25:00.0000] <aklein>
ideally it would've gone faster, but given that it was my first significant addition to DOM-space I'm glad to see it at least in motion


2012-02-18
[00:10:00.0000] <annevk>
MikeSmith: can you set up an xml-er repo? or are community groups supposed to host someplace else?

[00:11:00.0000] <MikeSmith>
no I can set it up

[00:11:01.0000] <MikeSmith>
there's no policy on it for CGs as far as I know

[00:12:00.0000] <MikeSmith>
but I can't do it right now because a recent change to one of the systeam script libraries broke the script I need to use to create new repos

[00:13:00.0000] <MikeSmith>
well I could do it manually

[00:13:01.0000] <MikeSmith>
if you need it right away

[00:17:00.0000] <annevk>
nah

[00:18:00.0000] <annevk>
next week is fine

[00:18:01.0000] <annevk>
can maybe also move progress events at that point; my last dev.w3.org draft

[00:28:00.0000] <MikeSmith>
ok

[00:31:00.0000] <annevk>
swiping on the graph at http://w3.markmail.org/search/ is pretty interesting

[00:31:01.0000] <annevk>
apparently I was a big spammer between 06 and 08

[00:31:02.0000] <annevk>
Tab Atkins is now

[00:31:03.0000] <annevk>
with a wide margin

[00:31:04.0000] <MikeSmith>
/me takes a look

[00:34:00.0000] <MikeSmith>
wow

[00:36:00.0000] <annevk>
there's a problem though, public-webapps messages count double afaict

[00:36:01.0000] <annevk>
for some reason they didn't want to index public-webapps separately but indexed it as continuation of public-webapi and public-appformats

[00:36:02.0000] <annevk>
god knows why

[00:37:00.0000] <annevk>
so I'm not sure I should be in the non-bot top 3

[00:37:01.0000] <annevk>
6666 emails is a lot for seven years

[00:38:00.0000] <annevk>
http://w3.markmail.org/search/#query:from%3A%22Anne%20van%20Kesteren%22%20date%3A200906%20+page:1+state:facets shows for instance 77 emails in both public-webapi and public-appformats that are completely identical

[00:39:00.0000] <annevk>
reportedly the most email I wrote in one month, but it looks wrong

[00:41:00.0000] <annevk>
oh look, back then I still posted to public-html: http://lists.w3.org/Archives/Public/public-html/2008Feb/0295.html

[03:51:00.0000] <girl_bisex>
can i talking with someone in hear

[04:10:00.0000] <gsnedders>
JS fun: valid syntax depends upon what version of Unicode you use.

[07:03:00.0000] <annevk>
http://dvcs.w3.org/hg/domcore/raw-file/tip/Overview.html#mutationobserver now with domintro

[07:13:00.0000] <[tm]>
sweet

[12:48:00.0000] <bga>
https://github.com/d5/node.native


2012-02-19
[05:48:00.0000] <asmodai>
holy leaking memory batman *eyes firefox curiously*

[09:18:00.0000] <Hixie>
why was 'mod' removed from calc()?

[13:19:00.0000] <rniwa>
AryehGregor: are you here?

[14:04:00.0000] <rniwa>
annevk: hi anne

[14:07:00.0000] <annevk>
hey rniwa

[14:07:01.0000] <rniwa>
annevk: how are you doing?

[14:08:00.0000] <annevk>
pretty good, bit sleepy :)

[14:08:01.0000] <rniwa>
annevk: I see. I'm a bit confused about the whole discussion on HTMLCollection

[14:08:02.0000] <annevk>
still trying to get used to the cold after my shortish break

[14:09:00.0000] <rniwa>
annevk: oh oops, that sucks.

[14:09:01.0000] <rniwa>
annevk: hopefully it gets better.

[14:09:02.0000] <annevk>
well I think sicking wants to add new members to e.g. NodeList at some point

[14:09:03.0000] <rniwa>
annevk: yeah, that makes sense.

[14:09:04.0000] <rniwa>
annevk: but do you think he's opposed to make getElement*by* return HTMLCollection?

[14:10:00.0000] <annevk>
HTMLCollection has a named getter which would make that difficult if e.g. someone used an ID anywhere on the web and that matches the new member name while also using HTMLCollection in some way

[14:10:01.0000] <rniwa>
annevk: as I noted on the thread, I filed a WebKit bug and was intending to work on it this weekend or so

[14:10:02.0000] <rniwa>
but it sounded as if jonas doesn't want that.

[14:11:00.0000] <annevk>
I think he was somewhat opposed to getElementsByClassName, not the others

[14:12:00.0000] <rniwa>
annevk: I see.

[14:12:01.0000] <rniwa>
annevk: FWIW, we're never got complaints about named getters so maybe we can disable that feature?

[14:12:02.0000] <rniwa>
we've*

[14:13:00.0000] <annevk>
I think even WebKit has a named getter for getElementsByTagName

[14:13:01.0000] <annevk>
bz pointed that out

[14:13:02.0000] <rniwa>
annevk: ah, you're right.

[14:13:03.0000] <rniwa>
annevk: we had that extension on NodeList :(

[14:13:04.0000] <annevk>
yeah so this change would mean you can try to clean that up

[14:14:00.0000] <annevk>
gonna go watch some parks and recreation

[14:14:01.0000] <rniwa>
annevk: I will definitely do that assuming there's no compat. issues

[14:15:00.0000] <rniwa>
annevk: alright. ttyl.

[14:16:00.0000] <rniwa>
/me is so confused by Objective-C syntax

[14:25:00.0000] <zewt>
hmm, would be nice to get HTML's use of "default action" updated to use DOM4 terms (canceled flag) ... low editorial priority, i assume

[14:26:00.0000] <zewt>
rniwa: objc is one of the few languages that simply doesn't make even the most basic intuitive sense to me

[14:26:01.0000] <zewt>
putting aside weirdo functional languages, I guess

[14:27:00.0000] <rniwa>
zewt: like prolog?

[14:28:00.0000] <rniwa>
zewt: I mean it's a declarative language. but I find declarative programming languages even less intuitive than functional programming languages.

[14:29:00.0000] <zewt>
annevk: is the preferred way to look at "canceled flag" after dispatch to refer to the flag directly, or to use the return value of the "dispatch" algo

[14:29:01.0000] <zewt>
the latter seems more natural to me (but then there'd be no reason to have the return value at all, I think)

[14:30:00.0000] <zewt>
er

[14:30:01.0000] <zewt>
the former looks more natural (using the flag directly)

[14:36:00.0000] <annevk>
zewt: you'd use fire so there's no return value I think

[14:38:00.0000] <annevk>
could maybe move the return value to dispatchEvent()

[14:38:01.0000] <zewt>
"fire" only lets you create a basic Event, for events with other interfaces, etc. you want dispatch directly, right?

[14:38:02.0000] <zewt>
that's what i was thinking

[14:38:03.0000] <annevk>
no fire is also used for events with other interfaces

[14:38:04.0000] <annevk>
you'd use a modified fire definition

[14:38:05.0000] <zewt>
how? sounds contradictory

[14:39:00.0000] <annevk>
http://dev.w3.org/2006/webapi/progress/#firing-events-using-the-progressevent-interface-for-http

[14:39:01.0000] <annevk>
because otherwise you also need to set the trusted flag, etc.

[14:39:02.0000] <zewt>
yeah that looks contradictory

[14:39:03.0000] <zewt>
it's saying "dispatch an event using the Event interface using the ProgressEvent interface" :)

[14:40:00.0000] <zewt>
not that it's not obvious what's really meant

[14:40:01.0000] <annevk>
not if you read it in the way that it's overriding

[14:40:02.0000] <annevk>
which is more logical imo

[14:43:00.0000] <zewt>
replying to clipboard thread suggesting:

[14:43:01.0000] <zewt>
7. Fire an event using the ClipboardEvent interface, with its type attribute initialized to e and its clipboardData attribute initialized to data transfer, at event target. If the event's canceled flag is set then abort these steps.

[14:47:00.0000] <annevk>
the if statement should prolly be step 8 for clarity

[14:47:01.0000] <zewt>
it was before, i moved it into 7 based on http://www.whatwg.org/specs/web-apps/current-work/multipage/association-of-controls-and-forms.html#form-submission-algorithm step 6

[14:48:00.0000] <annevk>
hmm

[14:48:01.0000] <zewt>
seems like having a concise pattern for this is good ... not sure if it's unclear or not

[14:49:00.0000] <annevk>
maybe I should postpone encoding stuff a bit more and work on DOM next week too

[14:51:00.0000] <zewt>
let me know if you think strongly one way or the other; don't want to bait people like paul by going back and forth

[14:52:00.0000] <annevk>
I don't, it's something that can be mended easily over time

[14:53:00.0000] <annevk>
especially if we make specs more hackable

[14:53:01.0000] <zewt>
("this spec hasn't been set in stone so it can start getting out of date, so everyone should use a useless, confusing, decade-old spec" sigh)

[14:56:00.0000] <annevk>
yeah i don't know what's up with that

[14:56:01.0000] <annevk>
i can sort of see the i want-to-play-by-silly-rules-so-i-cannot-reference-what-implementors-actually-need, but if you need to reference the newer draft anyway, also referencing crappy material is just wrong

[14:57:00.0000] <annevk>
that you even need to argue such a point because of some hearsay about "hot debate"

[14:57:01.0000] <annevk>
ugh


2012-02-20
[16:21:00.0000] <adiabatic>
Occasionally I have fairly mundane questions about how, say, <form> elements (ought to) work or whether <hgroup><h2>…</h2><h1>…</h1></hgroup> is OK. Which location of "the HTML5 spec" should I use?

[16:22:00.0000] <adiabatic>
AFAICT there's at least one WHATWG one and more than one on w3.org

[16:47:00.0000] <kennyluck>
adiabatic, for the latter question you usually look up the content model of each element definition.

[16:47:01.0000] <kennyluck>
For the former, it depends on what you are looking for, I guess.

[16:47:02.0000] <kennyluck>
s/content model/content model entry/

[16:48:00.0000] <adiabatic>
sure, but on http://developers.whatwg.org/ or http://www.whatwg.org/specs/web-apps/current-work/multipage/ or http://www.w3.org/TR/html5/ or http://dev.w3.org/html5/spec/Overview.html or…? :D

[16:49:00.0000] <Philip`>
adiabatic: http://www.whatwg.org/specs/web-apps/current-work/multipage/ is the most complete and the most up-to-date

[16:50:00.0000] <kennyluck>
not the third one. But the others are pretty much similar in terms of content model, last I check.

[16:50:01.0000] <Philip`>
(Well, http://www.whatwg.org/specs/web-apps/current-work/ is more up-to-date but is too enormous)

[16:51:00.0000] <Philip`>
The developers one is intentionally incomplete and non-normative, but if you just want to know what is defined as valid syntax then it should suffice and is probably the easiest to read

[16:51:01.0000] <adiabatic>
I've never been a fan of it, myself. I know how to skim stuff that isn't for me.

[16:52:00.0000] <Philip`>
The ones on w3.org have various changes and omissions, listed in http://www.whatwg.org/specs/web-apps/current-work/multipage/introduction.html#how-do-the-whatwg-and-w3c-specifications-differ?

[16:53:00.0000] <Philip`>
Everything on w3.org/TR/ is generally hopelessly out of date and full of known bugs and has no value

[16:53:01.0000] <Philip`>
But the most important factor is what colour you prefer to read the spec in

[16:54:00.0000] <adiabatic>
Any huge spec bugs that you can name off the top of your head that I can use to dissuade others from using the w3.org one?

[16:54:01.0000] <adiabatic>
/me reads

[16:54:02.0000] <Philip`>
See also: http://wiki.whatwg.org/wiki/FAQ#What_are_the_various_versions_of_the_spec.3F

[16:54:03.0000] <Philip`>
The TR/ one, or the dev.w3.org one?

[16:55:00.0000] <adiabatic>
so: /TR/: old, dev.: less old?

[16:57:00.0000] <Philip`>
TR/html5 says it's 25 May 2011, which is ancient - there's been about a thousand edits since then (judging by http://html5.org/tools/web-apps-tracker)

[16:57:01.0000] <kennyluck>
dev.w3.org is not old I think.

[16:58:00.0000] <kennyluck>
At one time it was actually newer. That's was when the multipage version on whatwg.org was down.

[16:58:01.0000] <Philip`>
dev.w3.org is automatically updated after every commit, so it's about as up-to-date as the whatwg.org copies, when the build scripts aren't broken

[16:59:00.0000] <Philip`>
and when nobody has manually merged changes into the dev.w3.org copy because of HTML WG politics

[17:00:00.0000] <Philip`>
I think it's generally safe enough to use either the dev.w3.org or the whatwg.org copies, and doesn't make much difference for most people

[17:03:00.0000] <Philip`>
Oh, except that the dev.w3.org one omits stuff like the canvas 2D context and microdata and sticks them into separate documents, so it's harder to find features you're looking for

[17:04:00.0000] <Philip`>
You could choose to get overwhelmed by the complexity and just get everything from w3schools.com, I suppose

[17:04:01.0000] <adiabatic>
Funny man.

[19:57:00.0000] <heycam>
hsivonen, playing around with the the validator.nu live dom parser, I'm wondering what determines whether a given opening tag breaks out of SVG content

[19:58:00.0000] <heycam>
hsivonen, for example if I write <p><svg><canvas> that makes an svg:canvas element a child of the svg, but if I write <p><svg><span> then it creates an html:span as a child of the p

[20:02:00.0000] <MikeSmith>
heycam: http://hg.mozilla.org/projects/htmlparser/file/default/src/nu/validator/htmlparser/impl/TreeBuilder.java#l1555

[20:03:00.0000] <MikeSmith>
ah wait

[20:03:01.0000] <MikeSmith>
that's for mathml

[20:03:02.0000] <heycam>
or svg maybe?

[20:03:03.0000] <heycam>
at the end of the big if condition

[20:04:00.0000] <MikeSmith>
ah yeah

[20:04:01.0000] <MikeSmith>
it's for both

[20:04:02.0000] <heycam>
do you know what in the spec defines these particular elements as breaking out? are they all particular classes of elements?

[20:06:00.0000] <MikeSmith>
http://dev.w3.org/html5/spec/tree-construction.html#parsing-main-inforeign

[20:07:00.0000] <heycam>
ok

[20:07:01.0000] <heycam>
thanks. though I wonder why that particular list.

[20:07:02.0000] <manu1>
hsivonen, MikeSmith: I've escalated your bug against HTML+RDFa to a Last Call comment for RDFa Core 1.1 and RDFa Lite 1.1 - https://www.w3.org/2010/02/rdfa/track/issues/130

[20:07:03.0000] <MikeSmith>
manu1: hey

[20:08:00.0000] <MikeSmith>
manu1: thanks

[20:08:01.0000] <manu1>
np, just want to make sure it gets visibility in front of the entire WG (and some sort of sooner-than-later resolution) before we move forward.

[20:08:02.0000] <MikeSmith>
that's actually Henri's bug, I just +1ed it

[20:08:03.0000] <MikeSmith>
manu1: I appreciate it

[20:08:04.0000] <manu1>
/me nods.

[20:09:00.0000] <manu1>
I think we can do what you want... making HTML+RDFa Lite the default mode for the validator (HTML+RDFa Lite didn't intend to allow @href and @rel and @rev everywhere)

[20:10:00.0000] <MikeSmith>
that would be great

[20:11:00.0000] <manu1>
so, I think we can achieve what you hoped for in HTML+RDFa Lite 1.1... I think the WG will have a bigger issue w/ not allowing @rel and @rev and @href to be used on any element... it's worked that way for a long time and there are just some types of markup that you cannot do unless you allow @rel and @rev everywhere. We may be able to remove the @href everywhere rule, but that would trigger...

[20:11:01.0000] <manu1>
...all sorts of b/c issues that are not in our charter.

[20:11:02.0000] <MikeSmith>
I see

[20:11:03.0000] <manu1>
(note, this only applies to RDFa 1.1 "Full")

[20:11:04.0000] <MikeSmith>
yup

[20:12:00.0000] <manu1>
Henri did say that he will most likely file a formal objection if we take that route... so... we're between a rock and a hard place here...

[20:12:01.0000] <manu1>
we remove it, we create b/c issues... we don't remove it Henri files a FO

[20:13:00.0000] <manu1>
I was thinking that we could add text to say that, even in HTML+RDFa 1.1 Full, that validation /warnings/ could be spit out when you use @href or @rel or @rev in places where it's not traditionally allowed.

[20:14:00.0000] <MikeSmith>
That's worth considering

[20:14:01.0000] <manu1>
so, people may shy away from doing that unless absolutely necessary... but I don't think the WG will go for complete removal of @href/@rel/@rev everywhere (for the reasons stated previously)

[20:15:00.0000] <MikeSmith>
actually it's the same problem for src too

[20:15:01.0000] <MikeSmith>
I see now that Henri didn't mention that in the title of the bug

[20:15:02.0000] <manu1>
I don't think @src is allowed anywhere that it wasn't traditionally allowed (that was the intent anyway)

[20:15:03.0000] <MikeSmith>
but it is listed in the description

[20:15:04.0000] <MikeSmith>
really?

[20:15:05.0000] <MikeSmith>
if so, that's not clear in the spec

[20:16:00.0000] <manu1>
@src isn't in the same "allowed anywhere" category as @href, @rel and @rev ... that it's not clear in the spec is my bad... I'll try to clarify that further.

[20:16:01.0000] <MikeSmith>
OK

[20:16:02.0000] <manu1>
(or rather, in RDFa Core)

[20:16:03.0000] <MikeSmith>
that would help some

[20:16:04.0000] <MikeSmith>
I interpreted the current HTML+RDFa spec the same as Henri did

[20:17:00.0000] <MikeSmith>
"it's safe to guess that the above-quoted text tries to add attributes to all elements"

[20:17:01.0000] <MikeSmith>
and that's the way I implemented it in the validator schema

[20:17:02.0000] <manu1>
/me raises another bug for this one.

[20:17:03.0000] <MikeSmith>
thanks :)

[20:19:00.0000] <MikeSmith>
manu1: I don't see that the b/c argument is a strong one

[20:19:01.0000] <MikeSmith>
iirc those were added to the spec relatively recently in its lifecycle

[20:20:00.0000] <MikeSmith>
they weren't in RDFa 1.0, right?

[20:21:00.0000] <manu1>
They were in RDFa 1.0: http://www.w3.org/TR/rdfa-syntax/#rdfa-attributes

[20:21:01.0000] <MikeSmith>
oh

[20:21:02.0000] <MikeSmith>
yeah, just found that now

[20:22:00.0000] <MikeSmith>
well I guess that make the b/c argument stronger

[20:22:01.0000] <manu1>
We could argue that HTML+RDFa was never defined, so there isn't a b/c argument there...

[20:23:00.0000] <manu1>
 /however/ people have stuffed RDFa into HTML documents (non-XHTML) ...

[20:23:01.0000] <manu1>
the counter-argument to that is that there may not be that many of those documents out there...

[20:23:02.0000] <MikeSmith>
yeah

[20:24:00.0000] <manu1>
the counter-counter argument to that is: Yeah, but then you're talking about XHTML and HTML supporting a different subset of RDFa attributes... in XHTML you support @href/@rel/@rev everywhere, in HTML you don't.

[20:24:01.0000] <manu1>
and that may be even more confusing to people than being consistent.

[20:24:02.0000] <MikeSmith>
right, that would be odd

[20:24:03.0000] <MikeSmith>
so they should be removed from XHTML also :-)

[20:24:04.0000] <manu1>
and then we have the whole b/c argument again :)

[20:26:00.0000] <MikeSmith>
anyway, I think the first step is for you all to just do the normal thing of responding to Henri's comment with a WG resolution that says what the decision is about the comment and giving a rationale

[20:26:01.0000] <manu1>
I think the best that we can reasonably do (an address almost all of the concerns) is kick out validation warnings in HTML+RDFa when people use @rel/@rev and @href where they haven't traditionally been used. Something along the lines of: "Hey, you better really know what you're doing... if you don't... don't use @href/@rel/@rev here"

[20:26:02.0000] <manu1>
ok, well - we should have a response within the next two weeks.

[20:28:00.0000] <MikeSmith>
manu1: the warnings idea is worth discussing more

[20:28:01.0000] <manu1>
ok

[20:42:00.0000] <manu1>
hsivonen, MikeSmith: https://www.w3.org/2010/02/rdfa/track/issues/132

[20:42:01.0000] <MikeSmith>
/me looks

[20:42:02.0000] <MikeSmith>
thanks

[20:59:00.0000] <MikeSmith>
heycam: about why that particular list, Henri would know. But I think he won't be on today until at least another hour or so from now

[20:59:01.0000] <MikeSmith>
Hixie would know too of course

[21:00:00.0000] <heycam>
MikeSmith, cool

[21:22:00.0000] <Hixie>
heycam: we did a deep crawl of the web and looked for what non-svg elements are found in html files after <svg> tags and before </svg> tags

[21:22:01.0000] <Hixie>
heycam: that's what made the list

[21:23:00.0000] <heycam>
Hixie, ah ok

[21:23:01.0000] <heycam>
thanks

[21:23:02.0000] <MikeSmith>
/me finds http://lists.w3.org/Archives/Public/public-svg-wg/2009JanMar/0150.html

[21:23:03.0000] <MikeSmith>
" this list was determined empirically by studying over 6,000,000,000 pages that were specifically not XML pages"

[21:24:00.0000] <heycam>
thanks for jogging my memory of that mail I wrote 3 years ago :)

[21:25:00.0000] <shepazu>
that seems kinda arbitrary… you won't find significant existing pages that don't work in any browser

[21:25:01.0000] <shepazu>
there may be weird experiments, but they won't necessarily represent what people want to do with compound HTML+SVG documents

[21:26:00.0000] <Hixie>
there were a quite a few pages that included random <svg> fragments

[21:26:01.0000] <Hixie>
the goal was to make them not break badly

[21:26:02.0000] <Hixie>
(i.e. not be any worse than an extra blank spot on the page)

[21:26:03.0000] <shepazu>
that doesn't really seem like a sensible goal

[21:26:04.0000] <Hixie>
to each their own :-)

[21:27:00.0000] <Hixie>
it's a core goal of the whatwg effort

[21:27:01.0000] <shepazu>
you mean, to each your own

[21:27:02.0000] <heycam>
to each his own?

[21:28:00.0000] <shepazu>
no, to everybody, the goal of some small set of people making arbitrary judgments

[21:28:01.0000] <MikeSmith>
http://html5.org/r/1418 is the original change, for the record

[23:40:00.0000] <zcorpan>
heycam|away: it's that particular list because Hixie researched legacy text/html content and those were the most common tags in <svg> or <math> that weren't intended to be svg or mathml

[23:56:00.0000] <hsivonen>
heycam|away: breaking out of svg should happen per spec. does it not?

[23:58:00.0000] <hsivonen>
manu1: thanks for opening those issues

[00:16:00.0000] <annevk>
MikeSmith: can you make a repo now?

[00:18:00.0000] <MikeSmith>
yeah

[00:19:00.0000] <annevk>
sweet

[00:28:00.0000] <MikeSmith>
annevk: you wanted a particular repo created?

[00:29:00.0000] <annevk>
xml-er or xmler

[00:29:01.0000] <MikeSmith>
ah yeah

[00:38:00.0000] <MikeSmith>
annevk: ready

[00:38:01.0000] <MikeSmith>
https://dvcs.w3.org/hg/xml-er

[00:45:00.0000] <annevk>
guess I better do some work on it later then :)

[00:46:00.0000] <annevk>
thanks

[01:16:00.0000] <hsivonen>
hmm. If this xml-er thing happens and SVG starts using it, I'll probably have to implement it

[01:16:01.0000] <hsivonen>
maybe I should join the CG

[01:22:00.0000] <hsivonen>
http://www.w3.org/community/blog/2012/02/20/call-for-participation-in-responsive-images-community-group/ is not going to end well without implementor participation

[01:23:00.0000] <zcorpan>
/me specced style="{ ... }"

[01:28:00.0000] <zcorpan>
hmm.

[01:28:01.0000] <zcorpan>
grep -iaPo "([a-z]+-)*(position|spacing|width|bottom|clip|size|height|left|right|top|bottom|margin|padding|indent|align|width|end|start|columns|border|shadow)\s*:\s*-?([1-9][0-9]*(\.[0-9]+)?|[0-9]?\.[0-9]+)\s+(px|em|ex|cm|mm|in|pt|pc)" web200904

[01:28:02.0000] <zcorpan>
6265 occurrences

[01:28:03.0000] <zcorpan>
(i.e. space before unit)

[01:28:04.0000] <zcorpan>
but opera and firefox don't support that quirk

[01:28:05.0000] <zcorpan>
although i thought opera did before

[01:43:00.0000] <zcorpan>
apparently we dropped it because supporting it broke some sites

[01:45:00.0000] <zcorpan>
if that quirk could be dropped, maybe style={ can also be dropped

[02:20:00.0000] <asmodai>
buddy of mine asking: Does anyone know if Firefox emits events if it unloads/loads an image for memory usage reasons?

[02:43:00.0000] <hsivonen>
"Dropping prefixes before CR (via legacy clause in the prefixing policy documented at /TR/CSS)"

[02:43:01.0000] <hsivonen>
http://www.w3.org/blog/CSS/2012/02/19/resolutions-24/

[02:43:02.0000] <hsivonen>
does the CSS WG really need to lawyer a clause in their old policy to justify unprefixing?

[02:43:03.0000] <hsivonen>
why not just mint new policy as the situation requires?

[03:28:00.0000] <annevk>
jgraham: where do you store blueberries?

[03:51:00.0000] <annevk>
MikeSmith: aah, and one for progress events

[03:52:00.0000] <annevk>
so we can move http://dev.w3.org/2006/webapi/progress/

[03:52:01.0000] <MikeSmith>
annevk: set that up already

[03:52:02.0000] <annevk>
"2 months ago" oops :)

[03:52:03.0000] <MikeSmith>
no problem :)

[04:03:00.0000] <annevk>
I like https://www.w3.org/Bugs/Public/show_bug.cgi?id=16026

[04:04:00.0000] <annevk>
someone who's arguing on behalf of users/developers for who the level of indirection of CSS is too hard

[05:28:00.0000] <annevk>
MikeSmith: progress events has no bug component

[05:29:00.0000] <annevk>
maybe that's okay, but for consistency...

[05:33:00.0000] <zcorpan>
Hixie: i tried editing a status box. it said error 500

[05:34:00.0000] <hsivonen>
"Where, then, is the multi-million dollar advertising campaign for Fennec?" http://infrequently.org/2012/02/misdirection/

[05:35:00.0000] <annevk>
http://dvcs.w3.org/hg/progress/raw-file/tip/Overview.html

[05:35:01.0000] <hsivonen>
interesting point of view from someone who is working on a product that bootstrapped its success using Safari's vendor prefixes and UA string

[05:35:02.0000] <hsivonen>
as if Mozilla and Opera had the kind of advertising budgets Chrome seems to have

[05:36:00.0000] <annevk>
there was all kinds of wrong with that post

[05:36:01.0000] <hsivonen>
yes

[05:36:02.0000] <annevk>
but I've lost interest in arguing with people

[05:36:03.0000] <hsivonen>
vendor prefixes are full of 386

[05:44:00.0000] <annevk>
okay Progress Events is fully moved now

[05:44:01.0000] <annevk>
thanks MikeSmith

[05:44:02.0000] <annevk>
if anyone notices bugs I can fix them again

[05:46:00.0000] <StoneCypher>
hsivonen: i can't disagree with him more about css and documents

[05:46:01.0000] <smaug____>
hsivonen: welcome back

[05:47:00.0000] <StoneCypher>
hsivonen: css is god's gift to documents, if-f you can force a high quality reader (eg through compile to pdf)

[05:58:00.0000] <hsivonen>
smaug____: thanks

[06:04:00.0000] <[tm]>
annevk:  will add a bug component for progress events when i get back to my laptop

[06:06:00.0000] <annevk>
cheerios

[06:16:00.0000] <karlcow>
hsivonen: and sencha touch comment is going down the inception rabbit hole by taking the stance of a User experience monoculture, and then bashing the other platforms to not follow exactly the main one.

[06:17:00.0000] <StoneCypher>
i love how sencha touch thinks it isn't a flash in the pan

[06:20:00.0000] <hsivonen>
karlcow: the Web devs who say things along the lines of "I like vendor prefixes, because they let me target the engines I choose" aren't really making a persuasive argument against Mozilla/Opera/MS implementing -webkit- stuff

[06:20:01.0000] <hsivonen>
karlcow: but I bet many of them (not necessarily the sencha commenter) don't seem to realize this

[06:22:00.0000] <StoneCypher>
typical apple

[06:22:01.0000] <StoneCypher>
screech about the evil that microsoft does for ten years, then imitate it for ten more

[06:22:02.0000] <hsivonen>
StoneCypher: Apple has done things according to the CSS WG policy

[06:22:03.0000] <hsivonen>
StoneCypher: and then they've evangelized their product

[06:23:00.0000] <hsivonen>
StoneCypher: they submitted specs for their stuff, too

[06:23:01.0000] <StoneCypher>
yeah, there's more to apple than how they interact with whatwg

[06:23:02.0000] <hsivonen>
(except text-size-adjust, but that's a sidetrack)

[06:23:03.0000] <hsivonen>
the "Apple is evil" meme is missing the point

[06:23:04.0000] <StoneCypher>
1) that's not what a meme is

[06:23:05.0000] <StoneCypher>
2) i'm not using any stereotypes, despite your attempt to pigeonhole me into one

[06:23:06.0000] <hsivonen>
the vendor prefixing policy is fundamentally flawed, because it leads to this sort of thing

[06:23:07.0000] <StoneCypher>
3) don't tell me that what i'm saying is missing your point; i wasn't speaking to your point

[06:24:00.0000] <StoneCypher>
i'm.

[06:24:01.0000] <StoneCypher>
not.

[06:24:02.0000] <StoneCypher>
talking.

[06:24:03.0000] <StoneCypher>
about.

[06:24:04.0000] <StoneCypher>
vendor.

[06:24:05.0000] <StoneCypher>
prefixing.

[06:25:00.0000] <StoneCypher>
nevermind.  you're not interested in what other people are saying; you'll just keep telling me i'm missing the point as long as i'm not talking about what you're talking about.

[06:25:01.0000] <hsivonen>
StoneCypher: sorry. what were you referring to?

[06:26:00.0000] <StoneCypher>
do you remember when apple tried to have microsoft broken up by the department of justice?

[06:26:01.0000] <StoneCypher>
there were three big reasons

[06:26:02.0000] <StoneCypher>
all three now apply to apple's voluntary choices, even though they never applied to microsoft.

[06:26:03.0000] <StoneCypher>
i'm just pointing out that apple is the villain they've always pretended that microsoft is.

[06:27:00.0000] <StoneCypher>
1) forcing applications to go through a vendor store at a vendor set price

[06:27:01.0000] <StoneCypher>
2) controlling more than 10% of the hardware deployment

[06:27:02.0000] <hsivonen>
StoneCypher: actually I don't remember Apple trying to have Microsoft broken. Did they ask the DoJ to do that?

[06:27:03.0000] <StoneCypher>
about a dozen times.

[06:27:04.0000] <hsivonen>
I do remember Apple folks testifying

[06:27:05.0000] <StoneCypher>
this is why nobody understands apple

[06:27:06.0000] <StoneCypher>
they don't know a damn thing about it

[06:28:00.0000] <StoneCypher>
apple's got a litigious history that makes the RIAA look downright reasonable

[06:28:01.0000] <StoneCypher>
they're a bunch of monsters

[06:35:00.0000] <karlcow>
https://en.wikipedia.org/wiki/Apple_Computer,_Inc._v._Microsoft_Corporation

[06:36:00.0000] <hsivonen>
karlcow: that case didn't ask MS to be broken up, did it?

[06:37:00.0000] <karlcow>
hsivonen: nope, I'm searching for references. I didn't infer anything on the nature

[06:37:01.0000] <karlcow>
of the link

[06:38:00.0000] <hsivonen>
I'd be curious to see a reference for Apple asking the DoJ to break up MS.

[06:39:00.0000] <karlcow>
yup I was looking for it

[06:39:01.0000] <hsivonen>
(not suggesting that they didn't ask. just curious for [citation needed])

[06:39:02.0000] <karlcow>
I don't see it here eithe rhttps://en.wikipedia.org/wiki/Apple_Inc._litigation

[06:41:00.0000] <karlcow>
https://en.wikipedia.org/wiki/United_States_v._Microsoft

[06:41:01.0000] <karlcow>
still no obvious references to Apple

[06:42:00.0000] <mk___>
hello all - I've done a quick search of the mailing list and I can't figure out what happened re: forms and URI templates

[06:42:01.0000] <mk___>
was that officially denied as a feature request or did the discussion just die out ?

[06:44:00.0000] <mk___>
.. I'm not looking to discuss it here I'm just trying to figure out what the status with it is :)

[06:44:01.0000] <zcorpan>
can you find it here? http://www.whatwg.org/issues/

[06:45:00.0000] <mk___>
thanks, I'll have a look

[06:46:00.0000] <zcorpan>
/me can't find it using google on the static version

[06:46:01.0000] <zcorpan>
if you find it there, it means Hixie hasn't got to it yet

[06:47:00.0000] <MikeSmith>
http://lists.whatwg.org/pipermail/whatwg-whatwg.org/2008-November/016985.html looks relevant

[06:48:00.0000] <zcorpan>
"url--awaiting-work-from-abarth--timeout-end-q3-2011"

[06:51:00.0000] <mk___>
which is the right mailing list to use these days?

[06:51:01.0000] <mk___>
or do you just cross-post to both ?

[06:52:00.0000] <hsivonen>
mk___: no crossposting

[06:52:01.0000] <zcorpan>
if you want to whine about the process, use public-html

[06:52:02.0000] <hsivonen>
mk___: the whatwg  list for real work. the W3C list for raising ISSUES per the Decision Process

[06:52:03.0000] <zcorpan>
if you want to discuss technical matters, use whatwg :-)

[06:53:00.0000] <MikeSmith>
mk___: www-tag

[06:53:01.0000] <mk___>
public-html sounds wack yo!

[06:54:00.0000] <annevk>
http://dvcs.w3.org/hg/xml-er/raw-file/tip/Overview.html

[06:54:01.0000] <mk___>
fight the powa.

[06:55:00.0000] <zcorpan>
annevk: nice

[06:55:01.0000] <mk___>
MikeSmith: www-tag ? you mad bro ?

[06:55:02.0000] <hsivonen>
annevk: cool

[06:59:00.0000] <MikeSmith>
annevk: component for pgoress events added

[07:01:00.0000] <annevk>
thanks

[07:01:01.0000] <annevk>
added to the draft

[07:19:00.0000] <MikeSmith>
just made http://lists.w3.org/Archives/Public/public-webapps-bugzilla/

[07:20:00.0000] <MikeSmith>
bugzilla firehose for webapps bugz

[07:20:01.0000] <annevk>
nifty

[07:20:02.0000] <MikeSmith>
gets search engine love now

[07:21:00.0000] <MikeSmith>
it had been set up to go to member-webapi-cvs⊙wo

[07:22:00.0000] <annevk>
ah yeah, forgot about that

[08:04:00.0000] <karlcow>
A monoculture life http://www.flickr.com/photos/alanahmontreal/6907109137/

[08:19:00.0000] <hsivonen>
manu1: btw, the bugs I filed on HTML+RDFa can't cause backwards compat issues with processing existing content, because I didn't ask for processing model changes

[08:31:00.0000] <manu1>
b/c issues would relate to document conformance between XHTML1+RDFa and XHTML5+RDFa documents...

[08:32:00.0000] <kennyluck>
mk___, there's also a Bugzilal bug for this → https://www.w3.org/Bugs/Public/show_bug.cgi?id=11361

[08:33:00.0000] <manu1>
so, you're right - there would be no b/c issues w/ the processing algorithm... but there would be b/c issues between XHTML1+RDFa and XHTML5+RDFa... (primarily because authors won't understand the nuanced difference between the two and would expect their XHTML1+RDFa documents to continue to "conform" under XHTML5+RDFa.

[08:34:00.0000] <manu1>
I think we could make a technical argument that XHTML1+RDFa can be different from XHTML5+RDFa (based on document conformance)... but that nuance will be lost on authors, I imagine.

[08:34:01.0000] <manu1>
The technical argument would go something like this: Since RDFa was never defined for XHTML5+RDFa, there are no backwards incompatible issues by not allowing @href on all elements.

[08:35:00.0000] <manu1>
(but then, as I said a few hours ago, conformance differences for @href/@rel/@rev between XHTML1+RDFa and HTML5+RDFa will confuse authors)

[08:37:00.0000] <manu1>
(leading me to the conclusion that we should not allow those attributes as conforming in RDFa Lite 1.1, and warn strongly against using @href/@rel/@rev on elements that traditionally didn't allow those attributes in RDFa 1.1 Full via validator warnings)

[08:38:00.0000] <manu1>
... understanding, of course, that the solution isn't acceptable to you. :)

[09:08:00.0000] <Ms2ger>
AryehGregor, please ask webkit devs to email to www-dom instead of changing the spec when they complain in their bugzilla, we don't want to encourage that behaviour further

[09:09:00.0000] <AryehGregor>
Ms2ger, they CC'd Anne and me.

[09:09:01.0000] <AryehGregor>
I don't see any reason to require them to do more than contact the editors for tiny things like this.

[09:09:02.0000] <annevk>
what was this?

[09:09:03.0000] <AryehGregor>
They pointed out the spec was wrong, I'm not going to say I'm going to leave the spec wrong until they e-mail www-dom.

[09:09:04.0000] <AryehGregor>
annevk, https://bugs.webkit.org/show_bug.cgi?id=78887

[09:10:00.0000] <AryehGregor>
If I thought it needed discussion, I'd have e-mailed www-dom myself, but I don't think it did -- the spec says the parameter defaults to true, IE and WebKit default to false, Gecko and Opera make it non-optional.

[09:11:00.0000] <annevk>
that was an intentional change from WebKit actually

[09:11:01.0000] <annevk>
because false is useless default

[09:11:02.0000] <annevk>
so yeah, prolly better to email the list first

[09:11:03.0000] <AryehGregor>
Is it really worth breaking compat with IE/WebKit, especially if WebKit doesn't seem willing to change?

[09:11:04.0000] <AryehGregor>
cloneNode(false) isn't useless.  It depends what you're doing with it.

[09:11:05.0000] <annevk>
this is IE10...

[09:12:00.0000] <AryehGregor>
If you want me to revert it, I will.

[09:12:01.0000] <AryehGregor>
/me checks in compat modes

[09:12:02.0000] <annevk>
yeah I'd prefer that

[09:12:03.0000] <annevk>
at least until things are a bit more clear; I didn't realize IE had optional arguments

[09:12:04.0000] <AryehGregor>
Yay, my Windows 8 VM always freezes and bogs down.

[09:12:05.0000] <AryehGregor>
Great advertisement for the OS.

[09:13:00.0000] <AryehGregor>
/me will check what IE does in compat modes before reverting

[09:13:01.0000] <StoneCypher>
mine's fine

[09:14:00.0000] <AryehGregor>
Awesome.  Some antimalware thing was using all its CPU.

[09:14:01.0000] <AryehGregor>
Very handy.

[09:14:02.0000] <AryehGregor>
Since it's a VM with nothing installed on it and no files I care about.

[09:15:00.0000] <StoneCypher>
huhu

[09:19:00.0000] <AryehGregor>
annevk, IE10 Developer Preview treats the argument as null defaulting to false even in IE7 browser mode, quirks document mode.

[09:19:01.0000] <AryehGregor>
So it looks like old behavior.

[09:19:02.0000] <AryehGregor>
It doesn't seem worth changing the default here from what IE/WebKit have apparently done for years, IMO.

[09:19:03.0000] <AryehGregor>
/me solicits Ms2ger's opinion too

[09:21:00.0000] <Ms2ger>
I'm not convinces that default-to-false is better than mandatory in this case

[09:22:00.0000] <AryehGregor>
Well, mandatory is okay by me too.

[09:22:01.0000] <AryehGregor>
I don't see the value in making up a totally new behavior.

[09:22:02.0000] <AryehGregor>
Because authors won't be able to rely on it for a long time, and we have no reason to think IE or WebKit will actually change.

[09:22:03.0000] <AryehGregor>
As a general rule, I'm against requiring stuff in specs that goes against all browsers unless the browsers actually want to change.

[09:23:00.0000] <annevk>
we made a similar change already

[09:23:01.0000] <annevk>
for where the false-ness was not liked either

[09:24:00.0000] <annevk>
importNode()

[09:24:01.0000] <annevk>
and importNode and cloneNode should do the same

[09:25:00.0000] <AryehGregor>
Yeah, that's definitely true, they should be consistent.

[09:26:00.0000] <annevk>
it's only optional in webkit because of some legacy stuff they had

[09:27:00.0000] <AryehGregor>
Ooh, Gecko/WebKit treat that as true by default and IE/Opera make it mandatory.

[09:27:01.0000] <AryehGregor>
The plot thickens.

[09:27:02.0000] <AryehGregor>
I'll revert.

[09:27:03.0000] <Ms2ger>
/me mumbles about the mess that is the DOM

[09:38:00.0000] <hsivonen>
manu1: XHTML 1.1 docs aren't conforming HTML5 docs anyway. and in any case, claiming that RDFa 1.1 needs to keep RDFa 1.0 conforming is a Stop Energy tactic that prevents any sort of fixing of design failures in RDFa 1.0

[09:38:01.0000] <AryehGregor>
Why do mail archives not update immediately?  Is it really such a hard problem?

[09:39:00.0000] <hsivonen>
manu1: https://lists.w3.org/Archives/Member/w3c-archive/2011Mar/0199.html

[09:40:00.0000] <StoneCypher>
AryehGregor: it was in the 70s when they were invented

[10:58:00.0000] <AryehGregor>
jgraham, . . . are you planning to accept my pull request at some point?

[10:59:00.0000] <AryehGregor>
Also: why am I not surprised that WebKit refuses to consider budging on cloneNode()?

[10:59:01.0000] <AryehGregor>
They seem to practically never be willing to change to match other browsers or the spec if there's any chance they can hold out with their current behavior . . .

[11:11:00.0000] <StoneCypher>
AryehGregor: because apple only cares about standards as a marketing ploy?

[11:11:01.0000] <AryehGregor>
StoneCypher, who said anything about Apple?  Apple doesn't control WebKit.

[11:11:02.0000] <StoneCypher>
/me blinks. "isn't webkit apple's adaptation of khtml, like dolphin is nokia's?"

[11:12:00.0000] <AryehGregor>
It's an open-source project.

[11:12:01.0000] <AryehGregor>
Google has as much influence as Apple these days.

[11:12:02.0000] <AryehGregor>
Other companies do too, like Nokia, Adobe, . . .

[11:13:00.0000] <StoneCypher>
ah.

[11:13:01.0000] <AryehGregor>
Originally, yes, it was just Apple's.

[11:13:02.0000] <AryehGregor>
Not for several years now.

[11:16:00.0000] <gsnedders>
AFAIK Apple/Google practically have veto power over stuff, though

[11:17:00.0000] <AryehGregor>
Probably, but not just Apple.

[11:18:00.0000] <gsnedders>
AryehGregor: FWIW, most of the stop energy for mutli-VM bindings was from Apple

[11:18:01.0000] <AryehGregor>
Multi-VM bindings?

[11:18:02.0000] <gsnedders>
They can still stop stuff that Google wants in.

[11:18:03.0000] <AryehGregor>
Google does what in that case, moves the code it wants to Chromium?

[11:18:04.0000] <gsnedders>
AryehGregor: Add the possibilities to bind multiple VMs within the environment, so JS and Dart is what Google wanted.

[11:18:05.0000] <AryehGregor>
Ah.

[11:19:00.0000] <gsnedders>
AryehGregor: They tend to try and avoid divergence, though what exactly happens in such disputes normally I don't know

[11:19:01.0000] <gsnedders>
AFAIK normally they just discuss/comprimise.

[11:20:00.0000] <AryehGregor>
I've been told they have no formal decision-making or dispute-resolution process.

[11:21:00.0000] <AryehGregor>
Which seems a bit crazy.

[11:21:01.0000] <gsnedders>
That's my understanding too.

[11:46:00.0000] <AryehGregor>
/me wonders if his posts to www-style on prefixes are worth it

[11:47:00.0000] <AryehGregor>
gsnedders or someone: is there a list somewhere of what properties Opera will transition?

[11:49:00.0000] <Hixie>
a lot of people seem to be registering <meta> names that are specific to their tool and not intended for interoperation with other software

[11:49:01.0000] <Hixie>
i wonder if we should address that use separately

[11:49:02.0000] <AryehGregor>
Yay, it's not documented for IE.

[11:49:03.0000] <StoneCypher>
isn't that the purpose of meta?

[11:49:04.0000] <StoneCypher>
i thought it was basically #pragma

[11:50:00.0000] <Hixie>
well the purpose of registering values is to prevent different software packages from using the same name

[11:50:01.0000] <StoneCypher>
oh, i missed that you were talking about registration

[11:50:02.0000] <StoneCypher>
looking for ideas, or looking to nail down conflicting existing behaviors?

[11:50:03.0000] <Hixie>
but if the software packages are scoped to a particular domain, it doesn't make much sense to have to register the term to protect it against an identical term used by software for another domain

[11:51:00.0000] <StoneCypher>
big if

[11:51:01.0000] <StoneCypher>
wordpress violates that if

[11:51:02.0000] <StoneCypher>
runs on a bunch of domains, and on domains running other things

[11:52:00.0000] <Hixie>
by "domain" i mean more the term in the mathematical sense of "defined space"

[11:53:00.0000] <StoneCypher>
oh

[11:53:01.0000] <Hixie>
if wordpress and mediawiki both use a meta value for internal purposes, it doesn't matter if they clash

[11:53:02.0000] <Hixie>
so we shouldn't be requiring that they register the terms

[11:53:03.0000] <StoneCypher>
might.  they share extensions.

[11:53:04.0000] <Hixie>
anyway

[11:53:05.0000] <Hixie>
just an observation

[11:53:06.0000] <StoneCypher>
so

[11:53:07.0000] <StoneCypher>
i am against registration, for the record

[11:53:08.0000] <Ms2ger>
|(HTMLElement? or long)| or |(HTMLElement or long)?|?

[11:53:09.0000] <StoneCypher>
on grounds that i don't find it to be practical

[11:53:10.0000] <StoneCypher>
but

[11:53:11.0000] <StoneCypher>
that doesn't mean registration can't be faked

[11:53:12.0000] <StoneCypher>
and as a mechanism it is useful

[11:54:00.0000] <StoneCypher>
and you get right back into the same old "give it a fake namespace with a prefix" mindset

[11:54:01.0000] <StoneCypher>
if that became the norm

[11:54:02.0000] <StoneCypher>
then you'd actually have a pretty reasonable setup

[11:54:03.0000] <Hixie>
the other problem with registration is it isn't stopping people who happen to use the same term as someone else with a different meaning from doing so

[11:54:04.0000] <StoneCypher>
allow me to play hypothetical for a moment

[11:55:00.0000] <StoneCypher>
we get in our time machine and set the social norm, if not the requirement, that these be in the form "packagename-key"

[11:55:01.0000] <StoneCypher>
so all that needs to happen is that people manage their package names (string fake namespaces)

[11:55:02.0000] <StoneCypher>
webkit uses webkit, wordpress uses wordpress, google tells you to use google-token for ads

[11:56:00.0000] <StoneCypher>
does that satisfy the kind of thing you want to think about?

[11:56:01.0000] <gsnedders>
AryehGregor: Doubt anybody in here will know.

[11:56:02.0000] <Hixie>
yeah we could do something like that, like we do for data-* attributes

[11:57:00.0000] <StoneCypher>
that also has the advantage of not colliding (much) with current practice

[11:57:01.0000] <AryehGregor>
It seems to not include marginLeft, and IE doesn't do textIndent or most other useful stuff, so I can't find a test-case that will work in all browsers for the issue I just found.

[12:03:00.0000] <Ms2ger>
Hrm, AllowAny

[12:05:00.0000] <Ms2ger>
annevk, yt?

[12:11:00.0000] <annevk>
Ms2ger: yeah

[12:11:01.0000] <Ms2ger>
annevk, xhr.send()

[12:12:00.0000] <Ms2ger>
There's an overload that takes DOMString?, but the string case doesn't seem to handle null

[12:14:00.0000] <annevk>
not handle null?

[12:14:01.0000] <annevk>
do you mean in prose or IDL?

[12:17:00.0000] <Ms2ger>
Prose

[12:17:01.0000] <annevk>
http://dvcs.w3.org/hg/xhr/raw-file/tip/Overview.html#the-send()-method

[12:17:02.0000] <annevk>
"If the data argument has been omitted or is null, do not include a request entity body and go to the next step."

[12:19:00.0000] <annevk>
maybe i'll make it send(optional (ArrayBuffer or Blob ...)? data) at some point

[12:19:01.0000] <annevk>
not sure if that's worth it though

[12:20:00.0000] <Ms2ger>
Er, oops

[12:20:01.0000] <Ms2ger>
annevk, probably is: https://www.w3.org/Bugs/Public/show_bug.cgi?id=15986

[12:23:00.0000] <mk___>
thanks for pointing me to that kennyluck

[12:26:00.0000] <annevk>
Ms2ger: bug looks complex

[12:26:01.0000] <Ms2ger>
Yeah

[12:26:02.0000] <annevk>
Ms2ger: hopefully someone explains it at one point

[12:26:03.0000] <Ms2ger>
The conclusion seems to be that we can get rid of overloading

[12:27:00.0000] <Ms2ger>
And just have a map from the number of arguments to the right signature

[12:31:00.0000] <annevk>
so you would have to write test(X, A); test(X, B) as test(X, (A or B))

[12:31:01.0000] <Ms2ger>
Yes

[12:31:02.0000] <annevk>
are there any cases outlawed?

[12:32:00.0000] <Ms2ger>
I dunno

[12:36:00.0000] <AryehGregor>
annevk, none that anyone's found in actual specs.  In theory yes, e.g. foo(long a, boolean b) plus foo(Node a, float b) or something.

[12:36:01.0000] <AryehGregor>
In those cases you'd have to do foo((long or Node) a, (boolean or float) b) and enforce the extra restrictions in prose.

[12:36:02.0000] <AryehGregor>
In practice that seems not to happen.

[12:37:00.0000] <AryehGregor>
heycam|away compiled a list of all the overloading he could find in real specs, and it all works with this simplified overloading.

[12:44:00.0000] <annevk>
extra restrictions in prose is nasty

[12:45:00.0000] <AryehGregor>
It's not needed for any known example.

[12:45:01.0000] <annevk>
but yeah, that would seem like pretty poor API design

[12:45:02.0000] <AryehGregor>
Cases where it would be needed are probably -- right.

[12:45:03.0000] <annevk>
so maybe that should not be allowed anyway

[12:45:04.0000] <AryehGregor>
It would only happen if you had the type of one argument restrict the type of another argument.

[12:46:00.0000] <AryehGregor>
It's a significant WebIDL simplification, so if there are weird cases where we need an extra line of prose, it seems justified.

[12:47:00.0000] <AryehGregor>
The current situation requires arguments' types to be evaluated sometimes to determine which overloaded operation to use, and that's bad if evaluating the argument has side-effects.

[12:47:01.0000] <Ms2ger>
Oh

[12:47:02.0000] <annevk>
yeah sounds fair enough

[12:48:00.0000] <Ms2ger>
AryehGregor, did bz email you about testing left-to-right evaluation of arguments?

[12:48:01.0000] <AryehGregor>
Ms2ger, yes.

[12:48:02.0000] <AryehGregor>
That was what spawned that whole bug.

[12:48:03.0000] <Ms2ger>
Great

[13:20:00.0000] <matjas>
“Also, the author is some kind of hipster bastard? No one uses XHTML since 2010? are you kidding?” — http://www.reddit.com/r/programming/comments/px67c/using_css_without_html/c3t52vr

[13:21:00.0000] <StoneCypher>
's been longer than that

[13:23:00.0000] <matjas>
/me takes pride in being called a hipster bastard

[13:23:01.0000] <Hixie>
hardly anyone has ever used xhtml...

[13:24:00.0000] <matjas>
/me has, and still feels bad for it

[13:25:00.0000] <matjas>
/me unkills kittens

[13:26:00.0000] <Ms2ger>
/me has been there

[13:28:00.0000] <Philip`>
Unfortunately the laws of thermodynamics state that every time you unkill a kitten, God kills a kitten

[13:29:00.0000] <StoneCypher>
Hixie: that essay of yours is a big part of why

[13:30:00.0000] <Hixie>
StoneCypher: hopefully

[13:35:00.0000] <Ms2ger>
Weren't the CSSWG chairs going to shut down useless threads?

[13:41:00.0000] <gwicke>
hello, I am wondering about the current state of multiple itemtype support in microdata. As far as I know only a single itemtype is currently reported using the DOM, and similarly indexed by search engines. Are there any plans to associate absolute-url itemprops with secondary itemtypes based on url prefixes?

[13:56:00.0000] <Hixie>
gwicke: to your question, the answer is not currently; what's your use case?

[13:57:00.0000] <gwicke>
one would be marking up template arguments in wikipedia

[13:57:01.0000] <gwicke>
I am currently working on a new wiki parser, and we are using HTML DOM as our internal data model

[13:58:00.0000] <gwicke>
there is also a visual editor in development, that is supposed to allow WYSIWYG editing

[13:58:01.0000] <gwicke>
the idea is to use microdata to mark up template expansions to allow inline editing

[13:58:02.0000] <Hixie>
why can't you do inline editing without microdata?

[13:58:03.0000] <gwicke>
at the same time templates are quite structured, and also semantically interesting

[13:59:00.0000] <Hixie>
i don't understand what microdata is giving you here

[14:00:00.0000] <gwicke>
many users are interested in getting at template parameters, and we figured we might as well use the same mechanism for both the editor and semantic information

[14:00:01.0000] <Hixie>
i don't really understand who your consumers are

[14:00:02.0000] <Hixie>
i mean, why bother marking this up at all?

[14:01:00.0000] <gwicke>
for the editor, we would like to edit arguments to some infobox right in the expanded infobox template

[14:02:00.0000] <gwicke>
infoboxes are these boxes that are often displayed for towns, plants etc

[14:02:01.0000] <gwicke>
they mostly contain data such as number of inhabitants etc

[14:02:02.0000] <gwicke>
which makes them interesting for data extraction

[14:02:03.0000] <AryehGregor>
Ooh, anti-Google attack post by MS on IEBlog.  Fun stuff.  Wonder what Google will respond.

[14:02:04.0000] <Hixie>
gwicke: ok but for the editor that's trivial. you just put a class name on the element that holds the value, and boom, that value is editable.

[14:03:00.0000] <Hixie>
gwicke: my question is what is the software doing the extraction?

[14:03:01.0000] <gwicke>
right now there are projects like http://mappings.dbpedia.org/index.php/How_to_edit_the_DBpedia_Ontology

[14:04:00.0000] <gwicke>
they need to parse the source to get at any template information

[14:04:01.0000] <bga>
is there :contains() selector. I know that is evil but i want it for usercss. For gecko only is accepted

[14:04:02.0000] <gwicke>
so the idea is to make it easier or them to get at parameters, and potentially also map some parameters to names in a known vocabulary

[14:05:00.0000] <gwicke>
..which is where the second itemtype would come in

[14:05:01.0000] <Ms2ger>
bga, no

[14:05:02.0000] <heycam>
hsivonen, the breaking out of svg did happen. I had just forgotten the reason for certain tags breaking out and others not.

[14:05:03.0000] <Hixie>
gwicke: i don't understand why you'd need more than two properties, one to say "this is the name of the attribute" and one to say "this is the value"

[14:05:04.0000] <bga>
Ms2ger thanks

[14:05:05.0000] <Hixie>
gwicke: i suppose you could hard-code the accepted names, in which case you could have one property per value

[14:05:06.0000] <Hixie>
gwicke: and not mark up the names

[14:06:00.0000] <Hixie>
gwicke: but then why would you need more than one vocabulary?

[14:06:01.0000] <gwicke>
each template has a different set of named parameters

[14:06:02.0000] <Hixie>
gwicke: just put them all in the same vocabulary

[14:06:03.0000] <Hixie>
gwicke: same itemtype=""

[14:06:04.0000] <Hixie>
gwicke: since it doesn't seem you're getting any value out of the itemtype="" anyway

[14:07:00.0000] <gwicke>
that would not help to expose the semantics though

[14:07:01.0000] <Hixie>
gwicke: the semantics is the "attributes", no?

[14:08:00.0000] <gwicke>
the idea was that an infobox about an event for example could be mapped to the schema.org vocabulary for an event

[14:08:01.0000] <Hixie>
wait, why schema.org? you told me your consumer was a dbpedia tool

[14:09:00.0000] <gwicke>
the idea is to make it searchable to

[14:09:01.0000] <Hixie>
ok let's start over

[14:09:02.0000] <gwicke>
dbpedia is one project, but there are others

[14:09:03.0000] <Hixie>
what are all the use cases for what you're doing

[14:09:04.0000] <gwicke>
data mining and editing basically

[14:10:00.0000] <Hixie>
those aren't use cases, they're buzzwords :-)

[14:10:01.0000] <gwicke>
ok ;)

[14:10:02.0000] <Hixie>
i mean concretely, what is it you expect an actual user to do

[14:10:03.0000] <gwicke>
I think the editor portion is quite clear, and not critical for the microdata stuff

[14:11:00.0000] <gwicke>
but we'd like to expose the same information to search engines using a standard vocabulary where it makes sense

[14:11:01.0000] <gwicke>
which will likely be a subset of template parameters per itemtype

[14:11:02.0000] <Hixie>
sounds like "english" would be a suitable vocabulary for what you've described

[14:11:03.0000] <Hixie>
no need for microdata

[14:12:00.0000] <gwicke>
template arguments are things like years, number of inhabitants etc

[14:12:01.0000] <gwicke>
imo there is some benefit in getting at that information in an automated way

[14:13:00.0000] <Hixie>
i'm trying to work out what that benefit is... so far you've just said "search", but search engines seem to handle searching wikipedia fine

[14:13:01.0000] <Hixie>
so it's not clear to me what problem you're trying to solve

[14:14:00.0000] <gwicke>
most of the structured information is hard to use currently

[14:15:00.0000] <gwicke>
sure, search engines have heuristics, but you cannot directly extract structured data

[14:16:00.0000] <gwicke>
and we have to mark that stuff up for editing anyway- so why not expose it in a standard way

[14:16:01.0000] <Hixie>
english is a standard way :-)

[14:16:02.0000] <Hixie>
so your use case is e.g. to have Microsoft's Bing team extract data from Wikipedia pages and then... do what with it?

[14:17:00.0000] <gwicke>
whatever- build some ontology to improve search results,..

[14:17:01.0000] <gwicke>
right now you can already do that, but it requires a lot of effort

[14:18:00.0000] <Hixie>
this seems like a very poorly-defined problem

[14:18:01.0000] <Hixie>
i'm not sure what to suggest

[14:18:02.0000] <gwicke>
so do you think we should not use microdata at all for some reason?

[14:18:03.0000] <StoneCypher>
my interpretation of what hixie said is "you haven't defined this problem well enough yet"

[14:18:04.0000] <StoneCypher>
not "this tool is wrong because"

[14:19:00.0000] <gwicke>
ok

[14:19:01.0000] <Hixie>
gwicke: without knowing exactly what you're trying to do, i don't know what would be a good answer

[14:19:02.0000] <Hixie>
gwicke: put it another way

[14:19:03.0000] <gwicke>
well- I can't define the data extraction uses more concretely as I don't know what it will be used for

[14:19:04.0000] <Hixie>
gwicke: how could you tell if you have succeeded in doing what you're trying to do?

[14:19:05.0000] <StoneCypher>
that's a problem if you want a computer to do things for you

[14:19:06.0000] <Hixie>
gwicke: how do you plan to evaluate your project's success?

[14:20:00.0000] <gwicke>
for the editor, we can either mark it up as data- attributes, or as microdata

[14:20:01.0000] <gwicke>
both have about the same amount of overhead

[14:20:02.0000] <gwicke>
so we don't care

[14:21:00.0000] <gwicke>
but external users could use microdata a bit easier than some weird data- attributes, so any use would be a success in my book

[14:22:00.0000] <Hixie>
external users wouldn't be technically allowed to use your data-* attributes

[14:22:01.0000] <Hixie>
the whole point of data-* attributes is that they're for internal use only

[14:22:02.0000] <gwicke>
/me nods

[14:22:03.0000] <gwicke>
but we want this stuff to be easily available

[14:22:04.0000] <Hixie>
it _is_ easily available

[14:23:00.0000] <gwicke>
except not for automated tools

[14:23:01.0000] <Hixie>
google is an automated tool, and as a user i find it does pretty well at finding the wikipedia page i want when i ask it for one

[14:23:02.0000] <Hixie>
i'm not saying your goal is a bad goal, just that it's underdefined

[14:24:00.0000] <Hixie>
my earlier question is serious -- how do you plan to evaluate your project's success?

[14:25:00.0000] <gwicke>
I think we are in agreement that stuffing this information in data- attributes is not such a good idea

[14:26:00.0000] <gwicke>
so for me it would be a success if we can expose this information to the public without incurring much overhead in markup or processing time

[14:26:01.0000] <StoneCypher>
that isn't really measurable.

[14:26:02.0000] <Hixie>
ok. done. you have exposed the information already.

[14:26:03.0000] <Hixie>
100% success with zero additional effort!

[14:26:04.0000] <Hixie>
:-)

[14:27:00.0000] <gwicke>
well - we are constantly asked 'how do I get the arguments for this or that template?'

[14:27:01.0000] <Hixie>
aha

[14:27:02.0000] <gwicke>
there are some heuristics using css classes and so on, but that is all a hack

[14:27:03.0000] <gwicke>
others start to parse the source, see dbpedia

[14:28:00.0000] <Hixie>
ok well solving _that_ problem is easy

[14:28:01.0000] <Hixie>
just mint a new URL for each attribute

[14:28:02.0000] <Hixie>
and don't bother with itemtype="" at all

[14:29:00.0000] <Hixie>
you don't even need to use microdata for that

[14:29:01.0000] <Hixie>
just put the URLs you mint as class names on the elements you want to have machine-readable

[14:29:02.0000] <Hixie>
doesn't even have to be URLs, you can just document unique class names

[14:29:03.0000] <Hixie>
like org.wikipedia.countries.population

[14:30:00.0000] <gwicke>
we need the template name and the association of arguments with template transclusions for the editor

[14:30:01.0000] <gwicke>
so the item / microdata model fits that aspect quite well

[14:30:02.0000] <gwicke>
we also have a need for something like itemref

[14:31:00.0000] <gwicke>
as many templates don't expand to a single DOM subtree

[14:31:01.0000] <Hixie>
ok so then just have itemtype="http://wikipedia.org/template", and then mint a new URL for each attributne

[14:32:00.0000] <gwicke>
we were thinking about using http://wikipedia.org/Template:Foo as the itemtype

[14:32:01.0000] <Hixie>
no need for unique item types as far as i can tell from what you've said

[14:32:02.0000] <Hixie>
why?

[14:32:03.0000] <Hixie>
what problem does it solve?

[14:33:00.0000] <gwicke>
the template determines the semantics of its parameters

[14:33:01.0000] <gwicke>
there is normally an informal description at that location, which could also be formalized in the future

[14:33:02.0000] <gwicke>
we would also like to display special widgets for some templates

[14:34:00.0000] <Hixie>
if you use unique strings for each attribute, then you'll never have any clashes, so you can just have the unique strings determine the semantics of the parameters

[14:34:01.0000] <gwicke>
and we could use type information for generic editor widgets

[14:34:02.0000] <Hixie>
microdata doesn't do anything with widgets

[14:35:00.0000] <Hixie>
oh you mean in the editor

[14:35:01.0000] <StoneCypher>
Hixie: you're on css councils, right?

[14:35:02.0000] <Hixie>
StoneCypher: never heard of it

[14:35:03.0000] <StoneCypher>
no i just mean councils having to do with css

[14:35:04.0000] <StoneCypher>
i don't know the proper name of the css standards committee

[14:35:05.0000] <Hixie>
oh the css working group?

[14:35:06.0000] <gwicke>
Hixie: yes, we could use parameter semantics to help the editor

[14:35:07.0000] <StoneCypher>
i suppose, yes

[14:36:00.0000] <Hixie>
StoneCypher: i think technically i'm a member but i haven't actually participated in years

[14:36:01.0000] <StoneCypher>
how come css doesn't have what other languages call inheritance yet?  there have been like a dozen tools invented to deal with that, each more awful than the last.

[14:36:02.0000] <StoneCypher>
and yes, i know css uses taht word for something different

[14:37:00.0000] <Hixie>
gwicke: then yeah, i'd say use an absolute URL per template as the itemtype="" so that the editor knows what UI to use for that template, and use absolute URLs for each attribute, so you can reuse attributes across types and so that there's no need to rely on the type for them.

[14:37:01.0000] <annevk>
StoneCypher: http://dev.w3.org/csswg/css3-hierarchies/

[14:37:02.0000] <Hixie>
StoneCypher: css also doesn't have what other languages call classes, so there's nothing to inherit to and from

[14:38:00.0000] <Hixie>
StoneCypher: but what annevk said

[14:38:01.0000] <StoneCypher>
Hixie: well that's not exactly difficult to solve

[14:38:02.0000] <StoneCypher>
annevk: ... orly.

[14:38:03.0000] <StoneCypher>
oh

[14:38:04.0000] <StoneCypher>
no, this is just LESS reified

[14:38:05.0000] <StoneCypher>
and not even very well :(

[14:39:00.0000] <StoneCypher>
it loses most of what makes LESS almost-work

[14:39:01.0000] <StoneCypher>
namely concrete specifiers, variables and calculations

[14:39:02.0000] <StoneCypher>
this enforces a heirarchy for inheritance which is neither useful nor desirable

[14:39:03.0000] <StoneCypher>
this is just syntactic sugar

[14:40:00.0000] <zcorpan>
http://dev.w3.org/csswg/css-variables/

[14:40:01.0000] <zcorpan>
variables are also syntactic sugar though

[14:40:02.0000] <zcorpan>
calculations, is that like calc()?

[14:40:03.0000] <StoneCypher>
variables are useful

[14:40:04.0000] <StoneCypher>
it serves the same purpose as calc() but in a far less horrible way

[14:41:00.0000] <StoneCypher>
admittedly still horrible

[14:41:01.0000] <StoneCypher>
but less so

[14:41:02.0000] <annevk>
#read-text etc. does not mention anything about quirks mode

[14:41:03.0000] <zcorpan>
what's concrete specifiers?

[14:41:04.0000] <StoneCypher>
basically constants

[14:41:05.0000] <gwicke>
Hixie: if we go that route, then we can't add for example an additional schema.org itemtype to templates where most parameters correspond to a standard vocabulary

[14:41:06.0000] <StoneCypher>
i mean it's not exactly a constant because it's subject to selectors

[14:41:07.0000] <StoneCypher>
but

[14:41:08.0000] <annevk>
StoneCypher: you want http://lists.w3.org/Archives/Public/www-style/

[14:41:09.0000] <StoneCypher>
annevk: no, i don't

[14:42:00.0000] <StoneCypher>
if i did i'd be there, thanks though

[14:42:01.0000] <annevk>
almost nobody here works on CSS

[14:42:02.0000] <gwicke>
so we have to choose between an internal itemtype or an external one

[14:42:03.0000] <StoneCypher>
and yet there's a discussion at hand.

[14:42:04.0000] <StoneCypher>
no need to purposefully derail it.

[14:42:05.0000] <zcorpan>
annevk: doesn't the parser set the mode?

[14:42:06.0000] <Hixie>
gwicke: i don't understand what you mean

[14:42:07.0000] <StoneCypher>
zcorpan: reading

[14:42:08.0000] <Hixie>
gwicke: first, why would you add schema.org? what problem does that solve? and second, why couldn't you use both?

[14:42:09.0000] <annevk>
zcorpan: not sure I want it to be quirks mode is what I mean I guess

[14:43:00.0000] <StoneCypher>
zcorpan: yeah, this is pretty similar to concrete specifiers.  works differently but serves the same goal.

[14:43:01.0000] <zcorpan>
annevk: don't all browsers use quirks mode?

[14:43:02.0000] <gwicke>
Hixie: lets say a template displays an event and its parameters mostly map to some schema.org event vocabulary

[14:43:03.0000] <Ms2ger>
Gecko might not

[14:44:00.0000] <gwicke>
then it would be nice to make this information available using that schema.org itemtype

[14:44:01.0000] <Ms2ger>
/me is too tired to remember the details of the conversation he had about that

[14:44:02.0000] <gwicke>
afaik we can only specify a single itemtype in the current spec

[14:44:03.0000] <gwicke>
but can add absolute-url names for itemprops

[14:44:04.0000] <annevk>
zcorpan: yeah maybe

[14:44:05.0000] <StoneCypher>
zcorpan: is it too early to know whether this spec is likely to take hold?

[14:45:00.0000] <gwicke>
so we would have two names for most itemprops, and a single one where the property does not map to schema.org

[14:45:01.0000] <gwicke>
the 'secondary' itemtype would be the wikipedia one in that case

[14:45:02.0000] <Hixie>
gwicke: the spec says you can have multiple types in itemtype="" so long as they are all the same vocabulary

[14:46:00.0000] <Hixie>
gwicke: if you're using absolute URLs for all your itemprops, then it's easy to do that, since your vocabulary would technically be empty

[14:46:01.0000] <gwicke>
the names unfortunately differ

[14:46:02.0000] <Hixie>
gwicke: just say that the wikipedia itemtype=""s actually use the schema.org vocabulary

[14:46:03.0000] <Hixie>
gwicke: and then never use those values

[14:46:04.0000] <Hixie>
gwicke: but you didn't answer my main question, which is "what problem does that solve"

[14:47:00.0000] <zcorpan>
StoneCypher: i guess it could be not-implemented in browsers for another few years, but clearly it's something many authors want

[14:47:01.0000] <Hixie>
gwicke: if it's wikipedia we're talking about, you can just do your own vocabulary, i'm sure the browser vendors would support it

[14:47:02.0000] <Hixie>
gwicke: s/browser vendors/search engine vendors/

[14:47:03.0000] <Hixie>
gwicke: at which point having schema.org stuff in there as well would just be confusing

[14:48:00.0000] <StoneCypher>
zcorpan: also my head keeps pretending you're a 3d printer

[14:48:01.0000] <gwicke>
search engines can always put the resources in to get at the information

[14:48:02.0000] <zcorpan>
StoneCypher: i've heard about that one

[14:48:03.0000] <gwicke>
but ideally it would be so easy that some researcher could get at it just as easy as google or some other organization

[14:48:04.0000] <zcorpan>
StoneCypher: fortunately i predated it by years, iirc :-)

[14:49:00.0000] <StoneCypher>
but you were going to fab things for me and put AN at the end

[14:49:01.0000] <gwicke>
so that is the problem we are trying to solve

[14:50:00.0000] <Hixie>
gwicke: "some researcher" can use your vocabulary though right? so why use schema.org?

[14:50:01.0000] <zcorpan>
hmm, turns out i didn't predate zcorp. at least not my nick.

[14:51:00.0000] <StoneCypher>
ten dollars says you change your name to ShapeWaysan

[14:51:01.0000] <gwicke>
Hixie: mainly to tie into a more general schema, that does not change with each template

[14:51:02.0000] <gwicke>
there are multiple templates that might map to the same schema.org type

[14:52:00.0000] <Hixie>
gwicke: i don't understand why you are caring about schema.org if not for search engines

[14:52:01.0000] <Hixie>
gwicke: why schema.org and not any of the other six gazillion vocabularies out there?

[14:52:02.0000] <gwicke>
I use schema.org mostly as an illustration

[14:53:00.0000] <Hixie>
ok let's please stick to concrete problems because if we're going to start fixing sample problems as well we'll be here all day :-)

[14:53:01.0000] <gwicke>
aye ;)

[14:55:00.0000] <gwicke>
in general, we would like to add one or more additional itemtypes to an item, where each might only include a subset of the itemprops in the main itemtype

[14:55:01.0000] <Hixie>
ok but why???

[14:55:02.0000] <Hixie>
give me the concrete problem that this would solve that you are actually trying to solve that isn't an illustration

[14:56:00.0000] <gwicke>
if we define our own itemtype per template, then that makes sense for editing and complete parameter availability

[14:56:01.0000] <gwicke>
but it would not necessarily serve to identify the shared semantics between two otherwise similar templates

[14:56:02.0000] <Hixie>
i don't know what "complete parameter availability" means

[14:56:03.0000] <Hixie>
if you use the same absolute URL for each property that is in common between two itemtypes, then the shared semantic problem would be solved.

[14:59:00.0000] <gwicke>
that would certainly help to identify 'this is a date', so we could display the date widget in the editor

[14:59:01.0000] <zcorpan>
so what happened with htmlwg's heart beat? it stopped?

[15:00:00.0000] <zcorpan>
CPR anyone?

[15:01:00.0000] <gwicke>
at the same time there seems to be some value in being able to add a standard itemtype and have browsers or search engines use that information

[15:03:00.0000] <Hixie>
gwicke: "some value" isn't a concrete problem.

[15:04:00.0000] <Hixie>
gwicke: i see no value if there's no concrete problem being solved.

[15:04:01.0000] <Hixie>
gwicke: and as i said earlier, in any case, if wikipedia makes up a vocabulary, browser and search engine vendors will adapt to support it

[15:05:00.0000] <gwicke>
Hixie: each wiki has its own templates and vocabulary, so there would be no standard at all

[15:05:01.0000] <gwicke>
at least nothing that could be described in a few rules

[15:06:00.0000] <Hixie>
gwicke: wikipedia, or mediawiki? i thought we were talking about wikipedia.

[15:06:01.0000] <gwicke>
so we are looking for a way to identify the common things and relate them to more widely used vocabularies

[15:06:02.0000] <gwicke>
the software is mediawiki, so this system would be available in other wikis too

[15:07:00.0000] <gwicke>
and wikipedia is made up of a lot of different wikis as well

[15:07:01.0000] <gwicke>
each with a slightly different template system

[15:07:02.0000] <gwicke>
template names are often localized for example

[15:07:03.0000] <Hixie>
gwicke: i don't see how the problems you've described apply to other mediawiki instances (e.g. wiki.whatwg.org)

[15:08:00.0000] <Hixie>
gwicke: certainly you wouldn't want to localise attribte names per instance of _wikipedia_, that's where documentation comes into play.

[15:08:01.0000] <Hixie>
gwicke: for this purpose, i think it's reasonable to view all the localisations as one project

[15:08:02.0000] <gwicke>
the structure is different too

[15:09:00.0000] <Hixie>
structure of what?

[15:09:01.0000] <gwicke>
templates

[15:09:02.0000] <gwicke>
many only exist in some wikis

[15:09:03.0000] <gwicke>
some are copied around and adapted

[15:10:00.0000] <gwicke>
there are also presentational parameters, that are not semantically interesting at all

[15:11:00.0000] <Hixie>
those seem like non-issues from microdata's perspective

[15:12:00.0000] <gwicke>
except if you would like to expose a subset using a commonly used itemtype

[15:12:01.0000] <gwicke>
and all of them using an internal itemtype

[15:12:02.0000] <gwicke>
(and possibly a third, widely used itemtype for a different subset)

[15:13:00.0000] <Hixie>
good lord, no

[15:13:01.0000] <Hixie>
that sounds like massive complexity

[15:13:02.0000] <Hixie>
just have one itemtype for the editor to know what kind of UI to use

[15:13:03.0000] <Hixie>
and that's it

[15:13:04.0000] <Hixie>
and for the properties, always use absolute URLs

[15:13:05.0000] <Hixie>
picked from a common set defined for all localisations

[15:14:00.0000] <gwicke>
that works for the editor problem, yes

[15:15:00.0000] <Hixie>
works for all the concrete problems you have given so far

[15:15:01.0000] <Hixie>
the "researcher" thing, the "people keep asking us questions" thing

[15:15:02.0000] <Hixie>
and the dbpedia thing

[15:15:03.0000] <Hixie>
also the search engine and browser vendor things

[15:15:04.0000] <gwicke>
maybe not the 'browser pops up an offer to add the event to my calendar' use case

[15:16:00.0000] <Hixie>
why not?

[15:16:01.0000] <gwicke>
the schema would be specific to some wiki

[15:17:00.0000] <gwicke>
or would you use absolute urls from some commonly known vocabulary?

[15:17:01.0000] <zcorpan>
woah. "CfC: Publish ten heartbeat drafts as WDs"

[15:24:00.0000] <gwicke>
I wonder if itemprops named with an absolute url could be associated with an itemtype that matches its prefix

[15:24:01.0000] <gwicke>
(and if there are several matches, with the longest matching itemtype)

[15:27:00.0000] <Hixie>
gwicke: "wikipedia" is not "some wiki"

[15:27:01.0000] <gwicke>
it is many wikis

[15:27:02.0000] <Hixie>
gwicke: right, but they can all share a single set of itemprop urls

[15:28:00.0000] <gwicke>
they could, but there seems to be little value in recreating another vocabulary

[15:30:00.0000] <gwicke>
at least if external vocabularies already cover what is needed

[15:33:00.0000] <gwicke>
regarding the prefix idea: if all names for all itemprops used absolute urls, then that could enable mixing itemtypes without identical vocabularies in a single item

[15:33:01.0000] <Hixie>
you said earlier they didn't

[15:33:02.0000] <Hixie>
so...

[15:33:03.0000] <Hixie>
i have no idea what problem you're trying to solve with the prefix thing, so there's no way for me to evaluate it

[15:35:00.0000] <gwicke>
we have some per-template vocabulary, in which some names might be purely presentational; then we have a subset of those names which could be mapped to a widely used and known vocabulary

[15:35:01.0000] <gwicke>
absolute urls for itemprops seem to mainly solve the 'type' problem per property

[15:36:00.0000] <gwicke>
which is still valuable for an editor, but does not present the properties as a single event or the like that can be acted on

[15:37:00.0000] <gwicke>
in a browser for example

[15:38:00.0000] <gwicke>
'add this person to your address book' for example

[15:39:00.0000] <Hixie>
i don't understand what you mean by "purely presentational". surely nothing "purely presentational" would be in HTML at all, let alone in microdata.

[15:39:01.0000] <Hixie>
i don't understand what "the 'type' problem" is

[15:40:00.0000] <Hixie>
what browser wants to add "add this person to your address book"?

[15:40:01.0000] <gwicke>
Text labels that are not data would fall into that category, singular/plural etc

[15:40:02.0000] <Hixie>
ok so that seems like something that would just not be in the microdata

[15:41:00.0000] <gwicke>
or only in an internal itemtype that is mainly used by edit tools

[15:42:00.0000] <Hixie>
so far i've not seen any use case for itemtype other than the editor UI thing

[15:43:00.0000] <Hixie>
i need to go soon. as a general comment i have to go back to what i said earlier: before one can figure out a solution to a problem, one needs to figure out what the problem is.

[15:43:01.0000] <Hixie>
i strongly recommend against trying to solve hypothetical problems that aren't well-defined

[15:43:02.0000] <gwicke>
ok, thanks for your comments!

[15:43:03.0000] <Hixie>
it's essentially impossible to come up with good solutions for problems that one doesn't understand

[15:44:00.0000] <gwicke>
it is hard to define all possible uses as use cases though ;)

[15:44:01.0000] <gwicke>
but picking some will sure help

[15:44:02.0000] <Hixie>
when someone wants to solve a problem you haven't yet solved, you can always go back and fix the problem then

[15:45:00.0000] <Hixie>
you'll do a much better job that way and will avoid wasting time earlier on something nobody ever uses :-)

[15:45:01.0000] <AryehGregor>
/me waves to gwicke 

[15:46:00.0000] <gwicke>
Hixie: ok, will try to define those use cases more tightly

[15:46:01.0000] <gwicke>
;)

[15:46:02.0000] <Hixie>
gwicke: it's perfectly ok to solve one problem one day and another another day, rather than solving all the problems at once :-)

[15:47:00.0000] <gwicke>
we still have to define our DOM embedding of the wiki stuff, and we would like to make choices that make other uses easy if possible


2012-02-21
[16:07:00.0000] <AryehGregor>
Blah.  Should I test parsing and serialization at all?  CSSOM is such a mess . . .

[16:11:00.0000] <gsnedders>
It's so far from standardized there's no point.

[18:24:00.0000] <jarek>
Hi

[18:24:01.0000] <jarek>
what's the status of this proposal? http://lists.w3.org/Archives/Public/www-dom/2011OctDec/0020.html

[18:26:00.0000] <jarek>
I think it would be most elegant if could use CSS selectors for element creation

[18:27:00.0000] <jarek>
e.g. var buttonElement = createElement("a#edit-button.button[href='http://test.com']")

[18:28:00.0000] <jarek>
s/if could use/if we could

[18:32:00.0000] <jarek>
creates <a id="edit-button" class="button" href="http://test.com"></a>

[19:49:00.0000] <Hixie>
jarek: createElement(":not(:first-child)") ? :-)

[19:49:01.0000] <jarek>
Hixie: of course I meant a subset of CSS...

[19:51:00.0000] <jarek>
CSS selectors already made its way into DOM with querySelector() and querySelectorAll()

[19:51:01.0000] <Hixie>
jarek: :-P

[19:51:02.0000] <jarek>
from my reading of the mailing list it looks like there is no consensus on this

[19:59:00.0000] <Hixie>
you could say that

[20:00:00.0000] <Hixie>
i kinda like the idea of createElement("a#edit-button.button[href='http://test.com']"), but i think in practice it's not so great because what you'd usually be doing is createElement("a[href='" + url + '"]') and then you end up with all the usual XSS problems of unescaped content being injected

[20:00:01.0000] <Hixie>
not to mention it looks way uglier than the current proposals especially after you add three or four such attributes

[20:07:00.0000] <jarek>
Hixie: yup, it would  become messy when you use it for complex elements

[20:08:00.0000] <jarek>
Hixie: but from my experience, most of the time I create elements that have one class or id

[20:09:00.0000] <jarek>
the JSON approach discussed on the mailing list assumes the opposite

[20:10:00.0000] <jarek>
it would be best if we could have both JSON and CSS syntax

[20:10:01.0000] <jarek>
but considering the amount of bikeshedding this is probably never going to happen :P

[20:12:00.0000] <Hixie>
jarek: i'd be ok with simple syntax to add classes and ids (though when you're doing it via the DOM, you shouldn't really need an ID, just keep a reference to the element)

[20:13:00.0000] <Hixie>
jarek: but i don't think it should be one based on a special syntax that gets parsed, because that's asking for injection bugs

[20:14:00.0000] <jarek>
Hixie: but all browsers already ship with solid CSS parsers

[20:14:01.0000] <Hixie>
the injection bugs would be in the js, not in the browsers

[20:14:02.0000] <jarek>
I'm not sure how this could be abused

[20:15:00.0000] <Hixie>
all it takes is for a page to accept input from the user to determine the class name, and for the page not to remember to escape "." or "#" characters

[20:33:00.0000] <kennyluck>
Hixie, just curious, what kind of page would accept a class name from a user?

[20:34:00.0000] <Hixie>
kennyluck: no idea

[20:34:01.0000] <Hixie>
kennyluck: it's certainly more of a problem with arbitrary attributes

[21:44:00.0000] <Hixie>
wow, 'transform' is still only supported with prefixes?

[21:47:00.0000] <othermaciej>
yep

[21:48:00.0000] <othermaciej>
I can't even convince some of my fellow Apple employees that there is no net benefit to prefixing

[21:48:01.0000] <othermaciej>
a lot of people seem to have faith in the literal truth of <http://www.w3.org/TR/css-2010/#experimental>

[21:49:00.0000] <Hixie>
putting aside the issue of whether or not they should be prefixed in the first place, shouldn't they definitely be unprefixed by now?

[21:49:01.0000] <othermaciej>
in my opinion, certainly yes

[21:49:02.0000] <othermaciej>
but officially, they are not in CR

[21:49:03.0000] <Hixie>
what's taking so long?

[21:50:00.0000] <othermaciej>
I don't follow CSS WG enough to have a comment more informed than what anyone could guess

[21:50:01.0000] <Hixie>
k

[21:51:00.0000] <othermaciej>
I did read some of the recent www-style discussion on whether to unprefix transform or not

[21:51:01.0000] <Hixie>
yeah i saw it's been a topic of discussion

[21:52:00.0000] <Hixie>
prefixing seems fine to me for actual experiments, but experiments need to be short-lived by definition

[21:52:01.0000] <Hixie>
if we're just gonna ship them like this, there's no benefit and a whole bunch of harm, seems to me

[21:52:02.0000] <Hixie>
i guess it basically depends on the spec editor

[22:00:00.0000] <othermaciej>
I think there is often a challenge in standards work in general, or perhaps life in general, where a rule is made for a very sensible original reason, but people start believing in the rule instead of the reason

[22:02:00.0000] <[tm]>
othermaciej: indeed

[22:02:01.0000] <Hixie>
othermaciej: no kidding

[22:05:00.0000] <othermaciej>
as a person who's had to invent rules, I understand pretty well that they can end up not serving their original purpose or causing unintended consequences

[22:11:00.0000] <[tm]>
I think I'll file a by report against the decision policy asking that the quote "a foolish consistency is the hobgoblin of little minds" be printed at the rip on big bold letters

[22:11:01.0000] <[tm]>
s/rip/top

[22:12:00.0000] <[tm]>
*bug report

[00:40:00.0000] <annevk>
so should we have xhr.responseURL?

[01:07:00.0000] <hsivonen>
annevk: use case? redirect checking?

[01:09:00.0000] <hsivonen>
Hixie: seems odd to use CSS syntax for HTML elements instead of an HTML tag. (Yay, reinventing IE5 features.)

[01:09:01.0000] <jgraham>
The CSS syntax thing seems horrendous, tbh

[01:10:00.0000] <annevk>
resolving relative URLs in non-HTML/XML responses

[01:12:00.0000] <hsivonen>
Hixie: as I understand it, Apple dropped the editing ball somewhat after submitting the Transforms/Transitions/Animations specs

[01:12:01.0000] <hsivonen>
Hixie: combine that with the policy that stuff stays prefixed until CR

[01:12:02.0000] <hsivonen>
Hixie: and combine that with upholding the policy instead of overturning policies that demonstratably bear bad fruit

[01:13:00.0000] <hsivonen>
Prediction: 3 months from now, Transforms/Transitions/Animations are 3 months from CR again

[01:14:00.0000] <hsivonen>
CSS3--always 3 months from CR

[01:43:00.0000] <Ms2ger>
Hmm, I hadn't seen http://dbaron.org/css/intrinsic/ before

[02:04:00.0000] <annevk>
pretty old :)

[02:05:00.0000] <annevk>
oh it's been updated again

[02:14:00.0000] <Ms2ger>
MikeSmith, yt?

[02:15:00.0000] <MikeSmith>
yup

[02:15:01.0000] <Ms2ger>
Is http://w3c-test.org/framework/ supposed to get the results from testharness.js tests automatically?

[02:15:02.0000] <MikeSmith>
yeah

[02:15:03.0000] <MikeSmith>
it was broke today though

[02:15:04.0000] <MikeSmith>
I broke it

[02:16:00.0000] <MikeSmith>
I think I fixed what I broke

[02:16:01.0000] <MikeSmith>
I mean just now fixed it, like in the last 15 minutes

[02:16:02.0000] <Ms2ger>
Aha

[02:16:03.0000] <MikeSmith>
so if you were seeing a problem, maybe retry it now

[02:16:04.0000] <Ms2ger>
Is it updated automatically?

[02:17:00.0000] <MikeSmith>
PHP and apache just give me so much heartburn

[02:17:01.0000] <MikeSmith>
it's updated in that I just ssh'ed into the server and edited the code there directly

[02:17:02.0000] <MikeSmith>
and then committed to the dvcs.w3.org remote

[02:18:00.0000] <Ms2ger>
Oh, duh, the checkbox

[02:18:01.0000] <MikeSmith>
ah

[02:18:02.0000] <MikeSmith>
heh

[02:18:03.0000] <MikeSmith>
NOT MY FAULT AFTER ALL

[02:18:04.0000] <MikeSmith>
I feel slightly better

[02:19:00.0000] <Ms2ger>
Pff, there's enough I can blame you for ;)

[02:19:01.0000] <MikeSmith>
heh

[02:19:02.0000] <MikeSmith>
I had tried to walk away from the test-framework code weeks ago so that I don't cause any more damage

[02:19:03.0000] <MikeSmith>
but they keep pulling me back in

[02:20:00.0000] <MikeSmith>
having me write php code is an accident waiting to happen

[02:20:01.0000] <Ms2ger>
Bah, innerHTML

[02:20:02.0000] <hsivonen>
MikeSmith: s/me/anyone/

[02:20:03.0000] <zcorpan>
having anyone write php code is an accident waiting to happen

[02:20:04.0000] <MikeSmith>
hsivonen: heh

[02:20:05.0000] <zcorpan>
hsivonen beat me to it

[02:20:06.0000] <MikeSmith>
zcorpan: make a macro for "having anyone write php code is an accident waiting to happen"

[02:20:07.0000] <MikeSmith>
for next time

[02:21:00.0000] <zcorpan>
the s/// trick is fast enough

[02:23:00.0000] <MikeSmith>
/me finally steps away now for real for some R&R

[02:23:01.0000] <jgraham>
/me is going to blame all the bugs he is currently hunting on the legacy PHP system his code intereacts with (and not on his new code, obviously :)

[02:29:00.0000] <annevk>
did not forget eggs

[02:29:01.0000] <annevk>
yay

[02:30:00.0000] <jgraham>
What about yoghurt?

[02:30:01.0000] <annevk>
healthy supply of yoghurt too, cherry tomatoes, enough until I head to Norway for bacon cheeseburger / taco diet

[02:37:00.0000] <zcorpan>
what can you make from eggs, yoghurt and cherry tomatoes?

[02:37:01.0000] <Ms2ger>
A meal

[02:38:00.0000] <jgraham>
Art

[02:39:00.0000] <tomasf>
a tomato yoghurt omelette

[02:39:01.0000] <charlvn>
just throw it into a wok and be done with it

[02:40:00.0000] <zcorpan>
i think i'd boil the eggs, eat the yoghurt as it is, and put the tomatoes in the oven or so. good breakfast

[02:44:00.0000] <kennyluck>
Are there mailing lists for spec changes on dvcs.w3.org? Or you need to use RSS/ATOM?

[02:44:01.0000] <smaug____>
/me kicks some students who just copy-paste code and try to claim it is theirs code.

[02:45:00.0000] <Ms2ger>
kennyluck, the latter, I think

[02:45:01.0000] <kennyluck>
oh fine.

[02:47:00.0000] <hsivonen>
smaug____: in Bugzilla? or have you become a course assistant?

[02:48:00.0000] <smaug____>
hsivonen: I've been "mentoring" some students

[02:48:01.0000] <smaug____>
not in bugzilla

[02:48:02.0000] <hsivonen>
smaug____: I see

[02:50:00.0000] <jgraham>
zcorpan: Would be better if you poached the eggs, I think

[02:50:01.0000] <jgraham>
But otherwise I agree

[02:52:00.0000] <Ms2ger>
Scrambled, of course

[02:56:00.0000] <Ms2ger>
MikeSmith, seems like the automatic reporting went into an infinite loop: http://w3c-test.org/framework/details/dom4-Ms2ger-submissions/Document-getElementById.html/engine/gecko/

[02:59:00.0000] <zcorpan>
hmm i have never made poached eggs. gotta try that

[03:02:00.0000] <annevk>
/me had fried eggs

[03:45:00.0000] <[tm]>
Ms2ger: つうは

[03:46:00.0000] <[tm]>
Ms2ger:  thanks for the heads-up

[03:46:01.0000] <[tm]>
will take a look at it when i get back to my laptop

[03:59:00.0000] <Ms2ger>
Thanks

[04:00:00.0000] <Ms2ger>
"Communication is"?

[04:14:00.0000] <annevk>
hmm http://dvcs.w3.org/hg/domcore/raw-file/tip/Overview.html#concept-event-dispatch does not initialize to AT_TARGET for normal objects

[04:14:01.0000] <annevk>
that seems like a bug

[04:15:00.0000] <annevk>
maybe we should just flatten that structure and let the ancestor list become the empty list if there's no tree?

[04:26:00.0000] <annevk>
done

[04:50:00.0000] <Velmont>
Reading the IDB-spec, -- this seems like it should work: add: 1:"one", 2:"two", 3:"two",  add an index on the values. Make a cursor on the values. when at key 2, ("two"), it should be possible to run     cursor.continue("two")  and get to key 3.

[04:52:00.0000] <Velmont>
Currently mozilla throws for it, -- webkit doesn't seem to have updated their idb implementation, and ie is impossible to run without loads of stress. :P Ohwell, and they're also implementing an old spec.

[05:12:00.0000] <annevk>
A : B

[05:12:01.0000] <annevk>
A is derived from B

[05:12:02.0000] <annevk>
is that okay?

[05:23:00.0000] <Velmont>
annevk: That's how the specs looks now, -- what should be not okay with it?

[05:27:00.0000] <annevk>
Velmont: just wondering about using the word "derived"

[05:27:01.0000] <annevk>
I should maybe be a bit more verbose :)

[05:28:00.0000] <Velmont>
Oh. Dunno. :]

[06:13:00.0000] <annevk>
/me is writing an introduction to events

[06:31:00.0000] <zcorpan>
autofocus on links

[06:31:01.0000] <zcorpan>
$ grep -aPc "\.focus\(\)" web200904

[06:31:02.0000] <zcorpan>
124167

[06:31:03.0000] <zcorpan>
$ grep -aPc "document\.(forms|getElementsByTagName\s*\(\s*[\"']([iI][nN][pP][uU][tT]|[bB][uU][tT][tT][oO][nN]|[tT][eE][xX][tT][aA][rR][eE][aA]|[kK][eE][yY][gG][eE][nN]|[sS][eE][lL][eE][cC][tT])[\"']\s*\))\S*\.focus\(\)" web200904

[06:31:04.0000] <zcorpan>
2713

[06:31:05.0000] <zcorpan>
$ grep -aPc "document\.(links|getElementsByTagName\s*\(\s*[\"'][aA][\"']\s*\))\S*\.focus\(\)" web200904

[06:31:06.0000] <zcorpan>
7

[06:35:00.0000] <Philip`>
zcorpan: Easier to write ((?i)input|button|...) for case-insensitivity

[06:36:00.0000] <Philip`>
(assuming you want it scoped to part of the pattern, not global)

[06:38:00.0000] <zcorpan>
Philip`: ah, thanks

[06:38:01.0000] <zcorpan>
i tried the -i flag but for some reason that gave 0 results

[06:39:00.0000] <hsivonen>
Philip`: is ?i equivalent, though? that is, is it ASCII-case-insensitive or Unicode-case-insensitive?

[06:40:00.0000] <hsivonen>
someone could use İNPUT

[06:46:00.0000] <zcorpan>
$ grep -aPc "(İ|ı)((?i)nput)" web200904

[06:46:01.0000] <zcorpan>


[06:46:02.0000] <zcorpan>
searching for just "(İ|ı)" gives plenty of results though

[06:47:00.0000] <Philip`>
hsivonen: I presume grep is being run with locale settings like LANG=C so it'll treat the input and command-line arguments as 8-bit ASCIIish strings and won't do any encoding/decoding itself, so it can't be Unicode-case-insensitive

[06:48:00.0000] <Philip`>
/me doesn't like how grep seems to go about a hundred times slower when using the default UTF-8 locales on modern Linuxes

[07:06:00.0000] <AryehGregor>
I just found some transition tests that only IE and Opera pass.

[07:06:01.0000] <AryehGregor>
(transitions on elements with display: none -- both Gecko and WebKit don't transition)

[07:06:02.0000] <AryehGregor>
It happens sometimes.

[07:06:03.0000] <zcorpan>
does transition between 0 and auto work yet?

[07:07:00.0000] <zcorpan>
for height

[07:12:00.0000] <annevk>
http://dvcs.w3.org/hg/domcore/raw-file/tip/Overview.html#events

[07:13:00.0000] <zcorpan>
heh,   // great success

[07:15:00.0000] <zcorpan>
"but do not implement the EventTarget interface and can therefore not be dispatched on themselves." is this something that is necessary to say in an introduction? :-)

[07:16:00.0000] <zcorpan>
annevk: seems more useful to mention that the listener gets called with the event as its argument

[07:18:00.0000] <zcorpan>
annevk: "Apart from signaling events " add a comma before events

[07:19:00.0000] <annevk>
ah yeah, I should rename event listener's listener to event listener's callback

[07:20:00.0000] <annevk>
all your other comments sound good too

[07:21:00.0000] <AryehGregor>
zcorpan, there's a spec bug on that, I think.

[07:22:00.0000] <zcorpan>
AryehGregor: on what?

[07:22:01.0000] <AryehGregor>
zcorpan, transition to/from auto.

[07:22:02.0000] <zcorpan>
ah. ok

[07:23:00.0000] <zcorpan>
it's the first thing i wanted to do with transitions when i tried to use it a few years ago when webkit implemented it and opera had an internal impl

[07:23:01.0000] <zcorpan>
disappointing that it still doesn't work

[07:24:00.0000] <annevk>
it's the one thing my friends keep bugging me about

[07:24:01.0000] <AryehGregor>
I don't know if it works in implementations.

[07:24:02.0000] <annevk>
I raised it too at one point, didn't really go anywhere

[07:27:00.0000] <zcorpan>
AryehGregor: bratell wonders how you keep the selection right when manipulating the tree in the editing spec

[07:27:01.0000] <AryehGregor>
zcorpan, I just reset it sometimes.  The range mutation algorithm isn't good enough by itself.

[07:28:00.0000] <AryehGregor>
Like: http://dvcs.w3.org/hg/editing/raw-file/tip/editing.html#deleting-the-selection "If direction is "forward", call collapseToStart() on the context object's selection."

[07:28:01.0000] <AryehGregor>
Stuff like that.

[07:29:00.0000] <AryehGregor>
"Call collapse(start node, start offset) on the context object's selection.  Call extend(end node, end offset) on the context object's selection."

[07:30:00.0000] <zcorpan>
thanks

[07:38:00.0000] <matjas>
zcorpan: thanks for the link, i saw this behavior mentioned in a few old bug reports as well (ES3 era). i couldn’t find this in the es5 spec though… any pointers?

[07:39:00.0000] <annevk>
hsivonen: maybe warning in console too?

[07:39:01.0000] <annevk>
hsivonen: for sync xhr

[07:40:00.0000] <zcorpan>
matjas: it's not in the es5 spec afaik

[07:40:01.0000] <hsivonen>
annevk: I'd be OK with that.

[07:40:02.0000] <zcorpan>
matjas: that's why we have the wiki page

[07:40:03.0000] <matjas>
zcorpan: ok, i’ll just add a compatibility note then. thanks!

[07:41:00.0000] <matjas>
/me scrolls up on http://wiki.whatwg.org/wiki/Web_ECMAScript#Identifiers and reads the very first paragraph…

[07:41:01.0000] <matjas>
#facepalm

[07:42:00.0000] <zcorpan>
i hear ya

[07:48:00.0000] <zcorpan>
/me just learned about error.stack

[07:49:00.0000] <zcorpan>
since window.onerror got a column argument, should we add column info to exceptions too?

[07:50:00.0000] <zcorpan>
and add stack to window.onerror?

[07:54:00.0000] <zcorpan>
or use the 4th argument to onerror for the actual exception object

[07:57:00.0000] <AryehGregor>
function any_unit_to_num(str) { return Number(String(str).match(/^([\d.]+)/)[1]); }

[07:58:00.0000] <AryehGregor>
Is that supposed to be intentionally different from parseFloat(), I wonder?

[08:02:00.0000] <zcorpan>
where's that from?

[08:08:00.0000] <zcorpan>
/me finds "Octal literals" in http://kangax.github.com/es5-compat-table/non-standard/

[08:12:00.0000] <zcorpan>
/me wonders how to grep for octal literals in scripts

[08:12:01.0000] <tomasf>
ugh. octal literals in JS? the syntax is so stupid

[08:12:02.0000] <AryehGregor>
zcorpan, a Gecko mochitest.

[08:13:00.0000] <zcorpan>
AryehGregor: ?

[08:13:01.0000] <AryehGregor>
An internal JS-based test.

[08:13:02.0000] <AryehGregor>
test_transitions_per_property.html.

[08:13:03.0000] <AryehGregor>
Is where it's from.

[08:13:04.0000] <zcorpan>
ah

[08:13:05.0000] <AryehGregor>
/me is rewriting to be more readable and less Gecko-specific

[08:14:00.0000] <zcorpan>
my mind has always went on to something else when you answer me something. :-)

[08:14:01.0000] <AryehGregor>
That's what backscroll is for.  :)

[08:55:00.0000] <matjas>
zcorpan: http://mathiasbynens.be/notes/javascript-escapes#octal has this regex: \\(?:[1-7][0-7]{0,2}|[0-7]{2,3})

[08:56:00.0000] <matjas>
(note that \0 is not an octal escape)

[08:56:01.0000] <matjas>
ooh octal literals, not escapes; ignore me

[09:27:00.0000] <Philip`>
zcorpan: Might be worth using some code to parse the pages and extract the script content rather than trying to force everything through grep

[09:28:00.0000] <Philip`>
Also might be worth resolving references to external .js files and downloading some of those

[11:03:00.0000] <jhawkins>
Hixie: ping

[11:07:00.0000] <twisted`>
is it correct that a margin-right on the most right position of a website is covered by a scrollbar?

[12:05:00.0000] <Hixie>
jhawkins: pong

[12:05:01.0000] <annevk>
whoa, surprise return from Mark Baker

[12:06:00.0000] <Hixie>
twisted`: scrollbar should be between padding and border, iirc

[12:06:01.0000] <Hixie>
twisted`: unless it's one of the popup scrollbars, in which case it should just overlap the padding, inside the border

[12:21:00.0000] <jhawkins>
Hixie: no need to chat now, thanks

[12:22:00.0000] <Hixie>
k

[12:22:01.0000] <Hixie>
man, i go skiing for like one day and i just get deluged in e-mail

[12:23:00.0000] <TabAtkins_>
I know what you mean.  My inbox blew up yesterday.

[12:28:00.0000] <annevk>
I ended up with +60 emails over the weekend

[12:28:01.0000] <annevk>
and I worked some during the weekend

[12:28:02.0000] <annevk>
it's weird

[12:31:00.0000] <Hixie>
haha, a mime type vs media type discussion

[12:31:01.0000] <Hixie>
turns out the ietf calls them "ietf types" btw, at least based on the mailing list name ;-)

[12:32:00.0000] <TabAtkins_>
ietf ptyes

[12:33:00.0000] <TabAtkins_>
Or I suppose I could infer a "vowels then consontans, both reverse-sorted" rule, so "ietf eytsp".

[12:37:00.0000] <Hixie>
Ms2ger: on your union types patch, why do you give the optional argument for dom-select-add a default value?

[12:37:01.0000] <Ms2ger>
/me checks

[12:39:00.0000] <Ms2ger>
Oh, because I found it somewhat unclear if the algorithm at #dom-htmloptionscollection-add handled the omitted argument case

[12:40:00.0000] <Hixie>
ah k

[12:44:00.0000] <Hixie>
i don't really see why it's ambiguous, but defaulting to null seems harmless enough so i'll leave it

[12:44:01.0000] <Hixie>
was the change in capitalisation in the title="" earlier intentional also?

[12:46:00.0000] <Ms2ger>
I don't think so

[12:46:01.0000] <Hixie>
k

[12:46:02.0000] <Ms2ger>
No, wasn't

[12:46:03.0000] <Hixie>
thanks for the patch

[12:47:00.0000] <Hixie>
ooh, we went over r7000 and i didn't notice

[12:47:01.0000] <Hixie>
you also added a newline at the end of my file :-P

[12:49:00.0000] <Hixie>
      1 Line 16 of IDL #74: at '=': expected ')'

[12:49:01.0000] <Hixie>
      1 Line 4 of IDL #110: at 'callback': expected identifier

[12:49:02.0000] <Hixie>
      1 Line 6 of IDL #4: at '=': expected ')'

[12:49:03.0000] <Hixie>
      1 Line 6 of IDL #56: at 'callback': expected identifier

[12:49:04.0000] <Hixie>
i wish the webidl checker would tell me which one was IDL #110...

[12:49:05.0000] <annevk>
oh, 7000 commits

[12:49:06.0000] <annevk>
I was wondering what to put in the WHATWG Weekly besides the JavaScript Unicode stuff

[12:50:00.0000] <Hixie>
"hixie was skiing and then had a lazy weekend, so nothing happened on html this week" :-P

[12:51:00.0000] <Hixie>
aah, i see, the complaint is that "callback" is a reserved word now

[12:51:01.0000] <Hixie>
and i use it as my argument name

[12:51:02.0000] <Hixie>
fair enough

[12:51:03.0000] <annevk>
oh shit

[12:51:04.0000] <annevk>
that's not allowed?

[12:51:05.0000] <annevk>
Hixie: hehe

[12:52:00.0000] <Hixie>
you have to use _callback or something

[12:52:01.0000] <miketaylr>
use hollaback

[12:52:02.0000] <Hixie>
to escape the identifier

[12:52:03.0000] <annevk>
argument names should not be identifiers

[12:52:04.0000] <annevk>
I think heycam|away should fix that

[12:52:05.0000] <annevk>
argument names are nothing

[12:52:06.0000] <annevk>
should be easy enough to disambiguate, no?

[12:53:00.0000] <Hixie>
well without lookahead you need some way to disambiguate the argument name from more information about the argument

[12:53:01.0000] <annevk>
name always follows type afaik

[12:53:02.0000] <annevk>
and then there's a comma or )

[12:54:00.0000] <Hixie>
e.g. foo(optional long long bar) - is the type "long long" or is the type "long" and the argument called "long"?

[12:54:01.0000] <Hixie>
"long long" might be the only time this is a problem

[12:54:02.0000] <annevk>
and long long is predefined

[12:55:00.0000] <Hixie>
only because "long" is a reserved word

[12:55:01.0000] <annevk>
right

[12:55:02.0000] <annevk>
I'm gonna raise this, might be worth fixing

[13:01:00.0000] <annevk>
oh you just escape them in the IDL? hmm still ugly

[13:05:00.0000] <AryehGregor>
Who decided we should have both String.substr() and String.substring()?  Really?

[13:05:01.0000] <TabAtkins_>
Java.  And Eich.

[13:06:00.0000] <othermaciej>
are they distinct?

[13:06:01.0000] <TabAtkins_>
Yes.

[13:06:02.0000] <TabAtkins_>
One takes an end index, the other a length.

[13:06:03.0000] <TabAtkins_>
Guess which!

[13:07:00.0000] <othermaciej>
that's awesome

[13:08:00.0000] <AryehGregor>
That was actually deliberately copied from Java?

[13:08:01.0000] <AryehGregor>
I assumed it was some kind of fluke where two different browsers came up with them independently and we compromised by picking both.

[13:08:02.0000] <TabAtkins_>
Ah, I guess not.

[13:08:03.0000] <TabAtkins_>
Blame Eich anyway.  He's used to it.

[13:09:00.0000] <TabAtkins_>
Java has a proper start/end function named substring.

[13:14:00.0000] <Ms2ger>
We've got one java-style, one python-style and one perl-style, no?

[13:14:01.0000] <gsnedders>
othermaciej: One is deprecated and spec'd in Appendix B (substr), one isn't (and spec'd in the main body of the spec).

[13:15:00.0000] <annevk>
so

[13:15:01.0000] <annevk>
WTWTF, OMOMG

[13:15:02.0000] <gsnedders>
TabAtkins_: The only things from Java are java.util.Math and java.util.Date

[13:15:03.0000] <annevk>
BBBBQ?

[13:15:04.0000] <annevk>
dino ^^

[13:15:05.0000] <Ms2ger>
gsnedders, and the name? :)

[13:18:00.0000] <annevk>
last time I wrote JavaScript I had to replace all my ands with && and ors with ||

[13:18:01.0000] <annevk>
crazy

[13:19:00.0000] <annevk>
and all those parenthesis

[13:20:00.0000] <gsnedders>
Ms2ger: Well, that's not really taken from, it more just is it.

[13:21:00.0000] <gsnedders>
Ms2ger: And it's called ECMAScript!111!!!11111!!!!11!!!eleventy!!!

[13:21:01.0000] <Ms2ger>
:)

[13:22:00.0000] <annevk>
ECMAScript is just a posh name for JavaScript

[13:23:00.0000] <gsnedders>
A rose by any other name would smell as sweet?

[13:24:00.0000] <gsnedders>
But I guess plenty of people wouldn't claim JS/ES/whatever smells sweet.

[14:04:00.0000] <odinho>
23:01 -!- Topic set by annevk42 [] [Mon Oct 19 23:03:06 2009]

[14:04:01.0000] <odinho>
That is some old topic, sure! That's why the stats say: A topic was never set on this channel.

[14:06:00.0000] <smaug____>
gavin's stats aren't updating

[14:07:00.0000] <annevk>
annevk42 is awesome

[14:08:00.0000] <gavin>
smaug____: hmm? http://gavinsharp.com/irc/whatwg.html looks up to date

[14:09:00.0000] <TabAtkins_>
I'm pretty close to catching up to hsivonen!

[14:09:01.0000] <TabAtkins_>
Just gotta spam it up for a while, gain another 300 lines.

[14:09:02.0000] <gavin>
oh... 2012 might have broken the config

[14:10:00.0000] <annevk>
there was a reset of the logs right?

[14:11:00.0000] <annevk>
anne-mac is no longer there

[14:11:01.0000] <gavin>
that was a while ago

[14:11:02.0000] <gavin>
but yeah, I changed the machine hosting them, and so stats lost ~3years of historical logs

[14:11:03.0000] <gavin>
http://gavinsharp.com/irc/old/whatwg.html is the archived copy

[14:13:00.0000] <annevk>
oh cool

[14:14:00.0000] <gavin>
I still have all of the old logs, I just can't easily merge them all together

[14:14:01.0000] <annevk>
one person kicked in well over 1617 days now

[14:15:00.0000] <annevk>
in 1617 + 450 days

[14:15:01.0000] <annevk>
pretty awesome

[14:16:00.0000] <gavin>
ok, think I found a simple fix to the 2012 problem

[14:16:01.0000] <smaug____>
gavin: "today "bug 690225 is not a crasher"" is very old

[14:16:02.0000] <gavin>
I'll trigger a re-run with that fixed

[14:17:00.0000] <annevk>
smaug____: "today" and the quote are different fields

[14:17:01.0000] <annevk>
smaug____: "today" is just last seen

[14:17:02.0000] <annevk>
smaug____: the quote is completely random afaik

[14:17:03.0000] <gavin>
annevk: no, the quote is generally from the last day

[14:17:04.0000] <annevk>
oh

[14:17:05.0000] <gavin>
well, "last seen"

[14:17:06.0000] <annevk>
should not say "Random quote" then maybe

[14:17:07.0000] <gavin>
yeah I guess

[14:18:00.0000] <annevk>
I saw they updated the software btw

[14:18:01.0000] <annevk>
but no interesting new features

[14:18:02.0000] <annevk>
http://pisg.sourceforge.net/changelog

[14:18:03.0000] <gavin>
heh

[14:19:00.0000] <smaug____>
annevk: ah, right

[14:19:01.0000] <smaug____>
hmm

[14:32:00.0000] <gavin>
ok, http://gavinsharp.com/irc/whatwg.html is updated

[14:32:01.0000] <gavin>
smaug____: ^

[14:32:02.0000] <smaug____>
did I go up in the top 25 list

[14:32:03.0000] <smaug____>
that is surprising

[14:32:04.0000] <TabAtkins_>
Dammit, hsivonen.  He widened the gap.

[14:32:05.0000] <smaug____>
other people have been even more lazy with whatwg than I

[14:32:06.0000] <smaug____>
(or even busier with other stuff than I)

[14:33:00.0000] <gavin>
AryehGregor surpassed MikeSmith to take the #3 spot

[14:58:00.0000] <annevk>
am I closer to Hixie or further away?

[14:59:00.0000] <annevk>
better talk some more to myself about grocery shopping if I ever want to get that top spot for person talking the most in #whatwg

[15:03:00.0000] <annevk>
heycam: Web IDL does all the magic for exceptions to be constructable?

[15:03:01.0000] <annevk>
heycam: so I don't have to do anything?

[15:03:02.0000] <heycam>
annevk, yep

[15:04:00.0000] <annevk>
nice

[15:07:00.0000] <annevk>
whoa

[15:07:01.0000] <annevk>
www-style

[15:07:02.0000] <annevk>
>43 emails a day

[15:35:00.0000] <annevk>
spec for DRM http://dvcs.w3.org/hg/html-media/raw-file/tip/encrypted-media/encrypted-media.html :/

[15:36:00.0000] <wilhelm>
Boo, hiss.

[15:37:00.0000] <TabAtkins_>
Ditto.

[15:37:01.0000] <smaug____>
huh

[15:37:02.0000] <heycam>
sigh

[15:38:00.0000] <zewt>
doesn't matter if nobody's clueless enough to implement it

[15:39:00.0000] <smaug____>
zewt: well, there are editors from two browser vendors

[15:39:01.0000] <zewt>
i giggled at the big nonsensical diagram

[15:39:02.0000] <smaug____>
and that worries me

[15:39:03.0000] <astearns>
the diagram is awesome - really draws you in

[15:42:00.0000] <zewt>
and of course the idea of anything being secure against the user browser-side is joke

[15:42:01.0000] <annevk>
CDN and CDM look like the real problematic parts

[15:42:02.0000] <rniwa>
oh dear...

[15:42:03.0000] <zewt>
the problematic part is ... it

[15:42:04.0000] <zewt>
heh

[15:42:05.0000] <annevk>
well sure

[15:45:00.0000] <rniwa>
/me secretly wishes ...

[15:46:00.0000] <rniwa>
and that'll be good for the Web.

[15:53:00.0000] <TabAtkins_>
I like how the Abstract says in its last sentence "No 'DRM' is added to the HTML5 specification" when that's precisely what the entire spec is about.  These people have convinced themselves of a very narrow definition of "DRM" (or have convinced themselves that the rest of us have such a narrow definition).


2012-02-22
[16:08:00.0000] <astearns>
is it that there's 'no DRM' or that they're not 'adding to the HTML5 spec'? I think their claim is that they're only adding data to the element

[16:09:00.0000] <TabAtkins_>
They're adding mechanisms whose sole purpose is enabling DRM within the browser to operate.

[16:11:00.0000] <astearns>
yes, but I think they're trying to convince (us? themselves?) that they're isolating DRM from HTML and the user agent

[16:11:01.0000] <TabAtkins_>
I don't understand the distinction you're claiming they're trying to draw.

[16:11:02.0000] <annevk>
so far my plans for sleeping earlier

[16:14:00.0000] <smaug____>
/me is trying to get to bed before 4 am

[16:14:01.0000] <smaug____>
trying

[16:14:02.0000] <annevk>
mine is sleeping by 12AM

[16:14:03.0000] <Hixie>
you're somewhat behind :-)

[16:15:00.0000] <Hixie>
unless you're not in CET anymore

[16:15:01.0000] <annevk>
still am :(

[16:15:02.0000] <Hixie>
hehe

[16:15:03.0000] <annevk>
going now, read then sleep :) nn

[16:16:00.0000] <Hixie>
nn

[16:25:00.0000] <MikeSmith>
/me looks around for Ms2ger

[17:10:00.0000] <kennyluck>
huh, I love http://gavinsharp.com/irc/whatwg.html

[17:12:00.0000] <TabAtkins_>
kennyluck: Hey! I gotta lot of responses to CSS3 Images stuff you need to accept or reject!

[17:12:01.0000] <kennyluck>
TabAtkins_, I accept them all.

[17:13:00.0000] <TabAtkins_>
Cool, I'll add a minutes link to the issues list once it shows up.

[17:16:00.0000] <kennyluck>
(Honestly I have no idea what the process is. Perhaps I shouldn't have played Last Call games.)

[17:17:00.0000] <TabAtkins_>
It's easy.  I just need to get an explicit "accept" or "reject" to every response I make to an LC issue.

[17:17:01.0000] <TabAtkins_>
(Or note that I couldn't get one.)

[17:18:00.0000] <TabAtkins_>
Then TimBL reviews the ones where the commenter didn't agree with me, and either accepts my resolutions or sends it back.

[17:18:01.0000] <kennyluck>
TabAtkins, is there a process that allows me to flag automatic "accept"?

[17:19:00.0000] <kennyluck>
flag myself as accepting anything, I mean.

[17:19:01.0000] <TabAtkins_>
I suppose you could just say that you accept any resolution (you just wanted to make a comment) in the initial email.

[17:19:02.0000] <TabAtkins_>
But it's not a big deal.

[17:26:00.0000] <jamesr__>
annevk, plh fixed the domcore->dom4 refs in the requestAnimationFrame spec

[17:27:00.0000] <jamesr__>
annevk, he also 'fixed' all the html references to point to w3.org/TR/html5/

[17:33:00.0000] <MikeSmith>
so Ms2ger pinged me a few hours back to say "seems like the automatic reporting went into an infinite loop" about the following http://w3c-test.org/framework/details/dom4-Ms2ger-submissions/Document-getElementById.html/engine/gecko/

[17:33:01.0000] <MikeSmith>
but I must be missing something

[17:34:00.0000] <MikeSmith>
because I don't see anything there that indicates any infinite loop is occurring

[17:35:00.0000] <MikeSmith>
maybe it was some transient problem that happened while I was jacking around with the backend and he just noticed it then but it's gone now

[17:39:00.0000] <MikeSmith>
AryehGregor: you working on CSS some these days?

[17:40:00.0000] <MikeSmith>
ah, Transforms

[17:40:01.0000] <MikeSmith>
cool

[20:14:00.0000] <MikeSmith>
sweet

[20:14:01.0000] <MikeSmith>
just now got websockets support working on w3c-test.org

[21:11:00.0000] <Hixie>
i need a less charged name that "specially focusable"

[21:11:01.0000] <Hixie>
something that doesn't imply that the element is focusable

[21:12:00.0000] <Hixie>
but which makes sense to use in the definition of "focusable"

[21:12:01.0000] <Hixie>
a "focus candidate" maybe

[21:16:00.0000] <Hixie>
"has its tabindex focus flag set" it is.

[22:50:00.0000] <MikeSmith>
how do I completely unset a particular apache directive?

[22:51:00.0000] <MikeSmith>
or set it back to the default?

[23:04:00.0000] <Hixie>
MikeSmith: depends on the directive

[23:04:01.0000] <MikeSmith>
Hixie: OK

[23:04:02.0000] <MikeSmith>
I was hoping there was just an "Unset" or whatever

[23:04:03.0000] <MikeSmith>
but I can see there's not

[23:04:04.0000] <Hixie>
i'm not aware of one

[23:04:05.0000] <Hixie>
for some it wouldn't make sense

[23:04:06.0000] <MikeSmith>
OK

[23:04:07.0000] <Hixie>
think of apache configs as an imperative language

[23:04:08.0000] <MikeSmith>
ah

[23:04:09.0000] <MikeSmith>
OK

[23:05:00.0000] <MikeSmith>
well, the one in particular I want to change is RequestReadTimeout

[23:05:01.0000] <MikeSmith>
for WebSocket testing

[23:05:02.0000] <Hixie>
no idea

[23:05:03.0000] <MikeSmith>
because the Debian defaults for that at least are too low

[23:05:04.0000] <MikeSmith>
OK

[00:31:00.0000] <Ms2ger>
MikeSmith, pong

[00:32:00.0000] <MikeSmith>
Ms2ger: hey

[00:32:01.0000] <MikeSmith>
are you still seeing that problem you reported yesterday?

[00:33:00.0000] <Ms2ger>
Let's try

[01:10:00.0000] <asmodai>
Buddy of mine who works on web frameworks: What break is that Chrome tries to find the /favicon.ico for the debugger which in Flask's case will invalidate the preserved local context.

[01:38:00.0000] <annevk>
jamesr__: "fixed" indeed

[01:42:00.0000] <jgraham>
MikeSmith: Is pywebsocket considered safe to put on public-facing servers these days? Last time I heard, it wasn't

[01:45:00.0000] <zcorpan>
http://code.google.com/p/pywebsocket/source/browse/trunk/src/mod_pywebsocket/standalone.py#87

[01:45:01.0000] <annevk>
jamesr__: draft looks good though, didn't really spot any obvious mistakes, although more globals is too bad

[01:46:00.0000] <zcorpan>
not sure if that applies when using pywebsocket as an apache module rather than using standalone

[01:47:00.0000] <annevk>
jamesr__: any reason it doesn't just use partial Window btw?

[01:47:01.0000] <annevk>
jamesr__: in the IDL?

[01:47:02.0000] <annevk>
(this is about http://dvcs.w3.org/hg/webperf/raw-file/tip/specs/RequestAnimationFrame/Overview.html fwiw)

[01:53:00.0000] <annevk>
links to the June 2010 draft of HTML

[01:53:01.0000] <annevk>
oh yes, dated references are some much better

[01:53:02.0000] <annevk>
o_O

[01:56:00.0000] <jgraham>
Oh wow

[02:28:00.0000] <[tm]>
jgraham: I'm using out through the Apache module

[02:28:01.0000] <[tm]>
using it

[02:29:00.0000] <[tm]>
installed frm Debian package

[02:30:00.0000] <jgraham>
Does that make it impossible to inject code?

[02:30:01.0000] <[tm]>
i didn't see any security bugs against the Debian package but will check when i get back

[02:31:00.0000] <silentimp>
Hi all. Is there any way to monitor changes inside DOM node, or change of some elements property (height for example)? In ie7+ and normal browsers.

[02:33:00.0000] <[tm]>
jgraham: i am happy to install whatever better alternatives there might be

[02:35:00.0000] <jgraham>
[tm]: I am not aware of what alternatives exist that meet all the requirements

[02:39:00.0000] <zcorpan>
silentimp: "ie7+ and normal browsers"? i think the answer to that is "no". if you change that to a different set of browsers, the answer is "mutation listeners", but those are going away and are being replaced by "mutation observers" (which isn't implemented yet, i think)

[02:39:01.0000] <zcorpan>
that's just for dom changes, not style changes

[02:40:00.0000] <zcorpan>
i'm not aware of style mutation observers or anything like that

[02:41:00.0000] <zcorpan>
although some browsers might have events for when reflow or repaint happens

[02:41:01.0000] <[tm]>
jgraham: http://www.tavendo.de/autobahn/ maybe

[02:42:00.0000] <[tm]>
https://github.com/oberstet/Autobahn

[02:43:00.0000] <silentimp>
mutation listeners implemented in ff,chrome and opera as far as i know. Not sure about safari. Is there any way but timers to emulate this events in IE?

[02:45:00.0000] <silentimp>
reflow and repaint is happen much more often then changes in specific node. so timer is better, am i right?

[02:45:01.0000] <annevk>
mutation events are implemented, but are going away

[02:45:02.0000] <annevk>
mutation observers is only implemented in Chrome

[02:45:03.0000] <annevk>
and only in a dev/beta build

[02:46:00.0000] <[tm]>
http://en.m.wikipedia.org/wiki/Comparison_of_WebSocket_implementations

[02:47:00.0000] <Ms2ger>
MikeSmith, yeah, can't reproduce the infinite loop either

[02:47:01.0000] <silentimp>
oh. so I think timer is best decision for the moment any way

[02:47:02.0000] <jgraham>
[tm]: The hardest requirement is "allows arbitary bits on the wire"

[02:47:03.0000] <jgraham>
We have to be able to create invalid responses

[02:47:04.0000] <jgraham>
But there's no good reason a server should let you do that

[02:47:05.0000] <jgraham>
So it might be hard to find an existing project that meets our needs

[02:48:00.0000] <jgraham>
(pywebsocket does do that, but seems to be insecure-by-design and not just to people writing tests)

[02:48:01.0000] <jgraham>
I kind of assume we will need custom code

[02:49:00.0000] <Ms2ger>
I believe Mozilla uses pywebsocket as well

[02:51:00.0000] <jgraham>
I think everyone uses it internally

[02:52:00.0000] <jgraham>
Which means it would be really nice to use it directly

[02:52:01.0000] <jgraham>
But it would also be really nice if people can't run arbitary commands on w3c-test.org

[02:53:00.0000] <Ms2ger>
Require review, like with php files?

[02:55:00.0000] <jgraham>
Well given the comment it's not clear that's safe enough

[02:58:00.0000] <jgraham>
I can't find the rationale for the comment htough

[03:01:00.0000] <zcorpan>
MikeSmith, hsivonen: in v.nu, when the image report is shown, you could check for width="" and height="" constraints because you know the intrinsic dimensions

[03:02:00.0000] <zcorpan>
would only work with js, though

[03:02:01.0000] <zcorpan>
and would probably take focus away from alt=""

[03:03:00.0000] <zcorpan>
maybe would be better to check this in a conformance checker that's integrated with devtools in a browser

[03:31:00.0000] <asmodai>
Crap, where is this ff memleak coming from

[03:31:01.0000] <hsivonen>
zcorpan: I suppose that would be doable

[03:31:02.0000] <hsivonen>
asmodai: extensions are the usual suspects these days

[03:32:00.0000] <asmodai>
hsivonen: Ghostery maybe?

[03:32:01.0000] <asmodai>
it's the only one I added in recent days

[03:32:02.0000] <asmodai>
Got to be it, as I was quite stable before that, mmm

[03:35:00.0000] <hsivonen>
asmodai: sounds believable

[03:36:00.0000] <hsivonen>
asmodai: this maybe? https://bugzilla.mozilla.org/show_bug.cgi?id=718375

[03:36:01.0000] <asmodai>
oh hey

[03:40:00.0000] <asmodai>
~50% in memory because of JavaScript  XD

[03:40:01.0000] <asmodai>
on my ff instance

[03:42:00.0000] <asmodai>
hsivonen: could very well be that that is what I am running into.

[03:45:00.0000] <annevk>
I argued https://www.w3.org/Bugs/Public/show_bug.cgi?id=16074 for a while

[03:45:01.0000] <annevk>
did not really get anywhere

[03:51:00.0000] <hsivonen>
annevk: seen https://svn.tools.ietf.org/svn/wg/appsawg/draft-ietf-appsawg-mime-default-charset/latest/draft-ietf-appsawg-mime-default-charset.html ?

[03:53:00.0000] <annevk>
I heard something was going on

[03:53:01.0000] <annevk>
looks wrong

[03:53:02.0000] <annevk>
'pecify that the "charset" parameter is not used for the defined subtype, because the charset information is transported inside the payload (as in "text/xml")'

[03:53:03.0000] <annevk>
text/xml definitely uses the charset parameter

[03:55:00.0000] <annevk>
and it continues

[03:55:01.0000] <annevk>
' specifically including "text/html" and "text/xml", SHOULD NOT specify the use of a "charset" parameter, nor any default value, in order to avoid conflicting interpretations should the charset parameter value and the value specified in the payload disagree'

[03:55:02.0000] <hsivonen>
annevk: yeah, it sure looks wrong

[03:55:03.0000] <hsivonen>
also "The default charset parameter value for text/plain is unchanged from [RFC2046] and remains as "US-ASCII"."

[03:55:04.0000] <annevk>
mwaha ' The default charset parameter value for text/plain is unchanged from [RFC2046] and remains as "US-ASCII".'

[03:55:05.0000] <annevk>
yeah

[03:56:00.0000] <hsivonen>
now I need to figure out where to send feedback to

[03:56:01.0000] <hsivonen>
apps-discuss

[03:56:02.0000] <hsivonen>
another list to subscribe to

[03:57:00.0000] <annevk>
thanks, I don't want to subscribe to another list really

[04:10:00.0000] <annevk>
Ms2ger: you really prefer the interface callback stuff?

[04:10:01.0000] <Ms2ger>
I prefer interoperability, and we're not getting that with callbacks

[04:11:00.0000] <annevk>
sure we are

[04:11:01.0000] <annevk>
sometimes Microsoft does not play ball short term, but long term it works out

[04:11:02.0000] <annevk>
if some people at Mozilla do the same, it won't really work out any different

[04:12:00.0000] <Ms2ger>
Anyway, there is no good reason to make the platform less consistent here

[04:12:01.0000] <annevk>
the platform is already inconsistent

[04:13:00.0000] <annevk>
here

[04:13:01.0000] <annevk>
and there are good reasons

[04:13:02.0000] <annevk>
see the long public-script-coord thread

[04:20:00.0000] <hsivonen>
annevk: is there a summary that explains what problem is solved by changing JS strings to be indexed by UTF-32 code unit?

[04:22:00.0000] <annevk>
I think it's basically about better dealing with all the new code points

[04:22:01.0000] <annevk>
without libraries having to take special care

[04:22:02.0000] <hsivonen>
maybe I should read that thread and reply

[04:23:00.0000] <annevk>
a lot of the thread is terminology confusion

[04:23:01.0000] <hsivonen>
indexing by UTF-32 code unit is generally a false goal

[04:23:02.0000] <annevk>
and a few interesting questions about what to do with surrogate code points and such

[04:23:03.0000] <annevk>
I sure hope it's not going to get stored as utf-32

[04:23:04.0000] <hsivonen>
since you still have to consider runs of more than one code unit to split strings on grapheme cluster boundaries

[04:23:05.0000] <hsivonen>
and people care about grapheme clusters

[04:24:00.0000] <annevk>
ah yeah, combining code points...

[04:24:01.0000] <Philip`>
Does any programming language have a widely-agreed-to-be-good approach to strings yet?

[04:25:00.0000] <hsivonen>
Philip`: probably not. I think UTF-8 plus standards library that doesn't suck for manipulating UTF-8 would be good.

[04:26:00.0000] <Philip`>
/me remembers seeing a preference towards forbidding random access of Unicode strings, and only allowing iteration (which means you can easily store as UTF-8 and can provide iteration over grapheme clusters or whatever)

[04:26:01.0000] <jgraham>
I think people generally choose either speed of certain operations or correctness in all cases, and the people who need one always see the other as broken

[04:27:00.0000] <Philip`>
(and adding a separate type for byte/character arrays with random access)

[04:27:01.0000] <jgraham>
So it's hard to construct a system that has uoniversal agreement

[04:27:02.0000] <jgraham>
*universal

[04:27:03.0000] <hsivonen>
Philip`: yeah, it's generally a non-goal to be able to index into strings

[04:28:00.0000] <hsivonen>
jgraham: I think there's a tendency towards what superficially looks like correctness, but real correctness is always harder

[04:28:01.0000] <jgraham>
Harder and slower

[04:28:02.0000] <hsivonen>
jgraham: e.g. indexing by Unicode character superficially looks like correctness but doesn't buy you much of interest

[04:29:00.0000] <annevk>
you can handle emoji better

[04:29:01.0000] <jgraham>
Basically I think most languages strike a balance between speed and correctness that make them look broken to everyone

[04:30:00.0000] <Philip`>
Android seems to be trying to force C++ code to stop using wchar_t strings (presumably in favour of UTF-8 encoded char strings), by providing minimal broken support for wchar_t

[04:30:01.0000] <hsivonen>
all-ascii identifiers are easy in any UTF and prose is hard in any UTF

[04:30:02.0000] <Philip`>
(which is a bit annoying when you have lots of code that uses lots of wchar_t strings)

[04:30:03.0000] <annevk>
but yeah sometimes I do have the feeling TC39 is just trying to design the perfect language

[04:30:04.0000] <hsivonen>
wchar_t is full of FAIL

[04:31:00.0000] <Philip`>
wchar_t gives you the problems of UTF-32, and the problems of UTF-16, and the additional problem of not knowing whether you're using UTF-32 or UTF-16

[04:33:00.0000] <zcorpan>
sounds like html's definition of "unicode code point"

[04:34:00.0000] <crocket>
What should I use between <br> and <br/> for HTML documents?

[04:35:00.0000] <annevk>
either is fine

[04:35:01.0000] <Philip`>
crocket: Whichever you find most aesthetically pleasing

[04:36:00.0000] <hsivonen>
what's the term for MIME payload that I should use so that the IETF folk see I have the right shibboleth and don't laugh at me? "entity body"?

[04:37:00.0000] <annevk>
yeah

[04:37:01.0000] <crocket>
Do HTML parsers convert <br/> to <br>?

[04:37:02.0000] <annevk>
headers + entity body is what goes in a request/response

[04:37:03.0000] <annevk>
crocket: they just ignore the /

[04:37:04.0000] <hsivonen>
annevk: for HTTP. but RFC 2046 talks about message body.

[04:37:05.0000] <annevk>
crocket: so <br> is slightly better as there's less cruft

[04:38:00.0000] <annevk>
hsivonen: there's some conversion between the two, hmm

[04:38:01.0000] <hsivonen>
annevk: but I guess I prefer HTTP terminology over email terminology as a political statement

[04:38:02.0000] <zcorpan>
hsivonen: do the bjoern approach, use several terms and put them in square quotes

[04:38:03.0000] <gsnedders>
hsivonen: Yet the instant you want JS you need to index into code-units, and if you're moving stuff between JS and the DOM, then you don't want to convert all the time.

[04:38:04.0000] <hsivonen>
zcorpan: s/square/scare/ ?

[04:38:05.0000] <annevk>
hsivonen: http://tools.ietf.org/html/rfc2616#section-4.3

[04:39:00.0000] <zcorpan>
square? dunno how i managed to type that

[04:39:01.0000] <hsivonen>
annevk: ok. so I mean entity-body

[04:39:02.0000] <hsivonen>
annevk: thanks

[04:39:03.0000] <annevk>
hsivonen: entity body is raw octets, message body is raw bytes decoded per transfer-encoding

[04:39:04.0000] <annevk>
np

[04:44:00.0000] <wilhelm>
… Speaking of vendor prefixes: http://googlewebmastercentral.blogspot.com/2012/01/making-form-filling-faster-easier-and.html

[04:46:00.0000] <crocket>
Does HTML5 parsers remove / from <br/>, too?

[04:46:01.0000] <crocket>
Does -> Do

[04:47:00.0000] <Philip`>
crocket: Yes (effectively) - they act exactly the same with or without the "/"

[04:48:00.0000] <crocket>
I wish HTML was a subset of XML.

[04:48:01.0000] <hsivonen>
wilhelm: at least x- is less harmful that engine-specific prefixes

[04:49:00.0000] <Philip`>
crocket: Unfortunately that battle was lost before XML even existed

[04:49:01.0000] <crocket>
How do I use libxml with HTML documents, then?

[04:49:02.0000] <crocket>
or lxml

[04:51:00.0000] <Philip`>
In Python, if you want to correctly parse random web pages (not ones where you can carefully control them to be non-erroneous or XML-compatible), I think the only option is html5lib

[04:51:01.0000] <jgraham>
crocket: html5lib or lxml.html, depending on your preference for correctness vs speed

[04:51:02.0000] <Philip`>
(html5lib can give an lxml-compatible tree object)

[04:52:00.0000] <crocket>
html5lib.

[04:52:01.0000] <Philip`>
(...if I'm not getting confused)

[04:53:00.0000] <jgraham>
(you're not)

[04:53:01.0000] <jgraham>
(unless you are confused about something else)

[04:53:02.0000] <Philip`>
(I am confused about many other things)

[04:53:03.0000] <crocket>
What do C/C++ have instead of html5lib?

[04:54:00.0000] <jgraham>
Web browsers

[04:54:01.0000] <crocket>
I need a library.

[04:54:02.0000] <jgraham>
/me isn't sure there is a general purpose spec-complaint HTML parsing library written in C(++)

[04:54:03.0000] <Philip`>
What happened with Hubbub?

[04:54:04.0000] <jgraham>
That is not deeply tied to a browser

[04:55:00.0000] <crocket>
I don't need a browser.

[04:55:01.0000] <wilhelm>
hsivonen: True.

[04:55:02.0000] <jgraham>
I think hubbub is unmaintained, but I am not sure

[04:56:00.0000] <crocket>
The last commit was 13 months ago, so it's unmaintained.

[04:56:01.0000] <Philip`>
crocket: Could you use an external tool that parses as HTML5 and outputs in a more easily parseable format (like XML) that you can then read into C/C++?

[04:56:02.0000] <crocket>
Philip`: That's a weird way to do things.

[04:56:03.0000] <Philip`>
If so, the validator.nu parser (in Java) is probably best, since it's both correct and fast (unlike anything available to Python or easily available to C/C++)

[04:57:00.0000] <crocket>
validator.nu?

[04:57:01.0000] <jgraham>
crocket: Depending on how much you need it you could eiterh pick up maintainance of hubbub, make the validator.nu C++ convertor emit non-gecko-specific code, or rip the parser out of WebKit.

[04:58:00.0000] <crocket>
That's a shame.

[04:58:01.0000] <Philip`>
http://about.validator.nu/htmlparser/

[04:58:02.0000] <crocket>
C/C++ doesn't have a portable library.

[04:58:03.0000] <jgraham>
It is a shame

[04:59:00.0000] <crocket>
I think java has a built-in HTML library.

[04:59:01.0000] <Philip`>
If it does, it won't be correct

[05:01:00.0000] <crocket>
I think python is the best nowadays.

[05:01:01.0000] <crocket>
For processing documents, python is pretty good.

[05:01:02.0000] <crocket>
Is html5lib as good as validator.nu parser?

[05:02:00.0000] <Philip`>
html5lib is probably something like 100x slower than the validator.nu parser, but on the plus side it doesn't involve Java

[05:02:01.0000] <crocket>
I know how to code java programs.

[05:02:02.0000] <Philip`>
They're both almost entirely correct HTML5 parser implementations

[05:02:03.0000] <crocket>
Philip`: Did you test both?

[05:03:00.0000] <smaug____>
I think hsivonen or someone had ideas to have libxml2 like API for validator.nu's parser

[05:03:01.0000] <Philip`>
crocket: They both use the same fairly-extensive test suite

[05:03:02.0000] <crocket>
How come is validator.nu parser a lot faster?

[05:04:00.0000] <Philip`>
Because Python is a lot slower than Java

[05:04:01.0000] <crocket>
How about C?

[05:04:02.0000] <crocket>
Java is a lot slower than C.

[05:04:03.0000] <Philip`>
C should be about as fast as Java

[05:04:04.0000] <crocket>
Java programs are usually heavy.

[05:05:00.0000] <crocket>
Think of playing "mass effect 2" written in java.

[05:06:00.0000] <Philip`>
I don't think there's much difference for this kind of algorithm - Java JITs work well, and the bottlenecks are probably mostly in memory allocation (where Java could be faster) and string manipulation

[05:06:01.0000] <hsivonen>
where's the concept of an origin considered to be defined these days?

[05:07:00.0000] <hsivonen>
ah. http://tools.ietf.org/html/rfc6454

[05:09:00.0000] <zcorpan>
yep. it's the rfc that precedes the websocket protocol

[05:10:00.0000] <crocket>
Philip`: Why do you prefer python to java, then?

[05:12:00.0000] <Philip`>
crocket: Usually I don't care about execution speed that much (html5lib still only takes a few seconds per megabyte, if I remember correctly), and Python takes less effort to write and to run

[05:14:00.0000] <crocket>
Philip`: There are java 3D games for your information.

[05:15:00.0000] <crocket>
With java, you can make a true platform-independent games.

[05:18:00.0000] <Philip`>
I don't think I've ever disputed that :-)

[05:19:00.0000] <hsivonen>
Hixie: how come step 8 under http://www.whatwg.org/specs/web-apps/current-work/#determining-the-character-encoding says UTF-8 for some locales? did you verify that that makes sense or did you just copy whatever Mozilla localizers did?

[05:25:00.0000] <hsivonen>
ok. email to apps-discuss sent. not in their Web archive yet.

[05:27:00.0000] <hsivonen>
aargh. If my From and Sender don't match, apps-discuss wants Sender to be subscribed

[05:27:01.0000] <kennyluck>
At least interesting enough zh-TW FF uses UTF-8 as default but the spec matches IE.

[05:32:00.0000] <kennyluck>
hsivonen, an interesting example of the problem that changing to UTF-32 would solve is, for example, WebKit doesn't display a text run if it starts with a surrogate code point. This could happen if authors use a naive algorithm to do, say, ellipsis in the middle of a text run.

[05:32:01.0000] <kennyluck>
Having said that, this is a WebKit bug so I am not too convinced...

[05:33:00.0000] <hsivonen>
kennyluck: they they'd get an ellipsis in the middle of a base character and diacritics the next time

[05:33:01.0000] <hsivonen>
sigh. did ietf blackhole my email. still not in the archive after replying to the confirmation

[05:35:00.0000] <kennyluck>
hsivonen, that is at least better than the whole text run disappearing.

[05:35:01.0000] <kennyluck>
I think.

[05:40:00.0000] <kennyluck>
In any case the internal storage of a JS string probably wouldn't be affected much by this. For example, Python3.3 does provide a UTF-32 string API but whether the string is stored as 1, 2 or 4 bytes per code point depends on the maximum code value appearing in that string, which is quite clever.

[05:42:00.0000] <hsivonen>
kennyluck: Gecko does the 1 vs. 2 vs. 4 thing for DOM text nodes

[05:42:01.0000] <annevk>
hsivonen: nice email!

[05:42:02.0000] <kennyluck>
hsivonen, I thought it only does 1 vs. 2?

[05:42:03.0000] <annevk>
should really write a new RFC 2046

[05:43:00.0000] <hsivonen>
kennyluck: so when you've got a huge text node in a script element and the author puts his/her non-ASCII name in a comment, the memory footprint of the node doubles

[05:43:01.0000] <hsivonen>
kennyluck: well, a surrogate pair takes 4 bytes :-)

[05:43:02.0000] <hsivonen>
annevk: thanks. if it only reached the IETF folks

[05:43:03.0000] <kennyluck>
hsivonen, oh, but in Python3.3, that's a real 4 bytes for each code point.

[05:43:04.0000] <kennyluck>
if there's any non-BMP in that string.

[05:44:00.0000] <hsivonen>
s/non-ASCII/non-ISO-8859-1/ above

[05:48:00.0000] <zcorpan>
hsivonen: resend it to www-archive

[05:50:00.0000] <hsivonen>
zcorpan: now it's on apps-discuss! http://www.ietf.org/mail-archive/web/apps-discuss/current/msg04347.html

[06:34:00.0000] <hsivonen>
/me wonders why https://lists.w3.org/Archives/Member/w3c-css-wg/2012JanMar/0150.html isn't on www-style

[06:35:00.0000] <AryehGregor>
Does anyone know why WebIDL allows float/double to have values like NaN, Infinity, etc.?  That seems undesirable.

[06:36:00.0000] <AryehGregor>
/me will file a bug if no one answers in the time it takes him to file it

[06:36:01.0000] <jgraham>
Why not? ECMAScript allows those values

[06:37:00.0000] <AryehGregor>
The WebIDL uses of float/double I can think of don't want them.

[06:37:01.0000] <AryehGregor>
Like currentTime, or CSSMatrix.

[06:37:02.0000] <jgraham>
But that seems very interface-specific

[06:38:00.0000] <AryehGregor>
If existing users don't want them, they shouldn't be allowed, or should only be allowed if you opt in with an extended attribute.

[06:38:01.0000] <jgraham>
It seems bad to disallow those values in any interface just because they don't make sense in some

[06:38:02.0000] <AryehGregor>
If some interfaces want them and some don't, there should be different types, or extended attributes.

[06:38:03.0000] <annevk>
jgraham: i think it's the other way around though

[06:38:04.0000] <annevk>
jgraham: they only make sense in some

[06:38:05.0000] <jgraham>
Or it could just say in prose

[06:39:00.0000] <annevk>
and often it's just attributes that return a number and therefore never need them either

[06:39:01.0000] <jgraham>
It seems bizzare to me taht if you pass in a variable that happens to be NaN, it would change e.g. overload resolution

[06:40:00.0000] <zcorpan>
wasn't overload going to be dropped?

[06:41:00.0000] <annevk>
yes it was

[06:41:01.0000] <annevk>
or is

[06:43:00.0000] <jgraham>
Hmm, so how is that going to work? There are interfaces that depend on it, surely?

[06:43:01.0000] <annevk>
apparently not

[06:46:00.0000] <jgraham>
I am obviously behind. Stuff like CanvasRenderingContext2D::createPattern

[06:46:01.0000] <zewt>
it'd make sense for NaN/INF to be "converted" to 0 (in the same sense as a type conversion) unless some flag is present (akin to nullable) ... but that's not what actually happens in many places, at least in the HTML spec

[06:47:00.0000] <AryehGregor>
AFAICT, the HTML spec mostly just doesn't define what to do.

[06:47:01.0000] <hsivonen>
I wonder how Opera developers feel about Pepper

[06:47:02.0000] <zewt>
Except where otherwise specified, for the 2D context interface, any method call with a numeric argument whose value is infinite or a NaN value must be ignored.

[06:47:03.0000] <jgraham>
Oh, that uses "or"

[06:47:04.0000] <AryehGregor>
jgraham, they use union types now.

[06:47:05.0000] <hsivonen>
Opera even joined the Open Screen Project and this is what they get

[06:48:00.0000] <zewt>
converting to 0 seems more in line with how other functions work when you pass a "wrong" type; just convert it and keep going

[06:48:01.0000] <jgraham>
Hmm

[06:48:02.0000] <smaug____>
open screen project ? maybe internet knows what that is

[06:48:03.0000] <zewt>
anyway, off to work

[06:49:00.0000] <hsivonen>
smaug____: It's Adobe's Flash Player porting and bundling program

[06:49:01.0000] <smaug____>
uh

[06:49:02.0000] <smaug____>
"open"

[06:55:00.0000] <AryehGregor>
zewt, setting a float/double attribute to something will already throw in any case where ToNumber() throws, which includes at least the case where you pass an object and ToPrimitive() throws.  E.g., video.currentTime = {} already throws TypeError per spec.

[06:55:01.0000] <annevk>
AryehGregor: oh, long / long long / octet cannot be Infinity and such?

[06:55:02.0000] <AryehGregor>
annevk, no.

[06:55:03.0000] <AryehGregor>
/me looks what happens

[06:56:00.0000] <AryehGregor>
annevk, it seems like in that case it gets set to +0.

[06:58:00.0000] <tomasf>
2

[07:06:00.0000] <crocket>
How can I declare a valid XHTML5 document with a doctype tag?

[07:06:01.0000] <crocket>
Can an XHTML5 document conform to "XHTML 1.0 Strict DTD"?

[07:07:00.0000] <zcorpan>
crocket: why do you care about DTD at all?

[07:07:01.0000] <crocket>
DTD is important.

[07:07:02.0000] <Philip`>
DTD isn't important

[07:09:00.0000] <Philip`>
(HTML5's XML serialisation allows you to use any doctype, or none, as you wish)

[07:09:01.0000] <zcorpan>
crocket: http://about.validator.nu/#faq ("What’s wrong with DTDs?")

[07:09:02.0000] <zcorpan>
hsivonen: would be nice if all the headings had ids ^

[07:10:00.0000] <Philip`>
(though if you're transmitting it as text/html then it's not really the XML serialisation, and you need to use one of http://www.whatwg.org/specs/web-apps/current-work/multipage/syntax.html#obsolete-permitted-doctype-string )

[07:10:01.0000] <Philip`>
(which does allow 1.0 Strict)

[07:11:00.0000] <zcorpan>
hsivonen: or at least the dtd heading, since i wanted to link to it now :-)

[07:16:00.0000] <crocket>
Philip`: I guess <!DOCTYPE html> would do.

[07:16:01.0000] <StoneCypher>
/me is not a fan of using the html5 doctype before standardization

[07:17:00.0000] <AryehGregor>
REC != "standardization"

[07:20:00.0000] <StoneCypher>
well

[07:20:01.0000] <StoneCypher>
those recommendations are called standards

[07:20:02.0000] <StoneCypher>
eg the html4 standard

[07:20:03.0000] <StoneCypher>
no?

[07:20:04.0000] <Ms2ger>
No

[07:20:05.0000] <StoneCypher>
oh.

[07:20:06.0000] <Ms2ger>
The W3C doesn't publish standards

[07:20:07.0000] <StoneCypher>
is that just inappropriate common slang?

[07:22:00.0000] <AryehGregor>
It doesn't use the term "standard" officially, it uses "Recommendation".

[07:22:01.0000] <StoneCypher>
k

[07:23:00.0000] <Ms2ger>
Anyway, HTML5 is more mature than HTML4

[07:23:01.0000] <StoneCypher>
most of its modules are still being haggled about

[07:23:02.0000] <StoneCypher>
even sorta-straightforward stuff

[07:24:00.0000] <StoneCypher>
although, the recommendation piece that (i think annevk?) showed me yesterday, which is basically what other languages call inheritance for css (think LESS,) makes me *super* happy

[07:24:01.0000] <Philip`>
That's better than the situation with HTML4, where it was blatantly wrong and people were just resigned to it never being fixed

[07:25:00.0000] <StoneCypher>
that's a valid point

[07:25:01.0000] <StoneCypher>
i guess what i am reacting poorly to is the possibility - in a few cases, the likelihood - that the recommendation i'm writing towards will change

[07:26:00.0000] <Ms2ger>
Aww, I missed an XML conversation

[07:26:01.0000] <jgraham>
"09:22 < Ms2ger> The W3C doesn't publish standards" - in that case they probably shouldn't have a heading "standards" at the top of their homepage

[07:26:02.0000] <Ms2ger>
You go tell them that

[07:26:03.0000] <Ms2ger>
I am no longer surprised by hypocrisy at the W3C

[07:27:00.0000] <jgraham>
I thought the "we don't publish standards" thing was a vauge fear of being sued by ISO or someone

[07:27:01.0000] <Philip`>
StoneCypher: It doesn't really matter what stan... uh, recommendation you're writing towards - it just matters what web browsers are implementing, and whether they're backward-compatible with the content you've already published

[07:27:02.0000] <Philip`>
StoneCypher: (assuming your goal is for your sites to not break in future browsers)

[07:29:00.0000] <Ms2ger>
AryehGregor, HTML requires throwing for non-finite doubles somewhere up front

[07:29:01.0000] <Ms2ger>
Except for canvas2d, which silently ignores

[07:29:02.0000] <AryehGregor>
Ms2ger, really?

[07:29:03.0000] <AryehGregor>
/me looks

[07:29:04.0000] <Ms2ger>
jgraham, we can apparently disambiguate on argument count only

[07:30:00.0000] <Ms2ger>
AryehGregor, 2.2.2 Dependencies under WebIDL

[07:30:01.0000] <AryehGregor>
Oh.

[07:30:02.0000] <AryehGregor>
How confusing.

[07:33:00.0000] <Philip`>
These hidden sentences that have arbitrary influences on arbitrary parts of the rest of the spec are almost as intuitive as COME FROM

[07:33:01.0000] <zcorpan>
iirc the spec required throwing before for everything, but some browsers did ignore instead for canvas, and then some pages depended on not throwing for canvas, so the spec changed for canvas

[07:35:00.0000] <Ms2ger>
Gecko used to throw for most of canvas IIRC

[07:35:01.0000] <Ms2ger>
Blame Philip` for getting that changed :)

[07:35:02.0000] <Philip`>
I blame Hixie for accepting my suggestions

[07:35:03.0000] <smaug____>
(throwing was the sane behavior, but I didn't care enough to file spec bugs)

[07:36:00.0000] <AryehGregor>
Since when is the web platform supposed to be sane?

[07:36:01.0000] <smaug____>
there can be some corner cases when it is sane

[07:37:00.0000] <Philip`>
I think it was an attempt to handle edge cases (like scaling by 1/x for small x) relatively gracefully, where throwing an exception is considered non-graceful because it usually clobbers the entire script

[07:38:00.0000] <zcorpan>
Hixie: if you fasttrack https://www.w3.org/Bugs/Public/show_bug.cgi?id=14929 i'll give you a cookie. :-)

[07:38:01.0000] <AryehGregor>
Scaling by 1/x for small x will have discontinuous behavior near 0 no matter what you do.

[07:40:00.0000] <Ms2ger>
zcorpan, fwiw, I've found that attaching a patch + reminder by private email works quite well :)

[07:41:00.0000] <Ms2ger>
"If the unprefixed property is used widely enough that changing its syntax would be a problem, then ipso facto we should be very reluctant to change its syntax."

[07:41:01.0000] <Ms2ger>
Ha. Ha. Ha.

[07:56:00.0000] <hsivonen>
Ms2ger: seems like a reasonable statement. (the one you quoted)

[07:56:01.0000] <Ms2ger>
Yeah

[07:56:02.0000] <Ms2ger>
I'm a little cynical about the CSSWG

[08:13:00.0000] <StoneCypher>
Philip`: nah, i'm a c++ programmer.  I need standards compliance, even if it's moot.  It's who I am.

[08:23:00.0000] <Philip`>
/me doesn't see C++ as a great place for caring hugely about standards compliance, given how much is left undefined or implementation-defined or is defined wrongly or is too hard for any human to comprehend, and how most real programs rely on non-standard features

[08:26:00.0000] <StoneCypher>
Philip`: kay

[08:26:01.0000] <StoneCypher>
Philip`: very little is actually undefined, though

[08:27:00.0000] <StoneCypher>
Philip`: it's just that what's undefined is well defined, which is not usually the case in weaker languages

[08:28:00.0000] <Ms2ger>
Has casting to smaller-width integers been defined yet?

[08:28:01.0000] <Philip`>
Some fairly critical stuff is(/was until very recently) undefined, like the memory model when you have multiple threads

[08:29:00.0000] <Philip`>
Ms2ger: I think that's always been defined for unsigned ints, but not for signed if the result overflows

[08:30:00.0000] <Ms2ger>
Hmm, I thought the opposite

[08:30:01.0000] <Philip`>
They don't want to require something that's infeasible on ones' complement architectures

[08:33:00.0000] <Philip`>
s/ones'/one's/ (I got distracted by Wikipedia's needlessly pedantic linguistic choice)

[08:33:01.0000] <kennyluck>
it's defined for unsigned ints last I check.

[08:41:00.0000] <MikeSmith>
zcorpan, if you can raise a bugzilla.validator.nu bug for that, that'd be great

[08:41:01.0000] <MikeSmith>
(about the image report)

[08:51:00.0000] <AryehGregor>
At least with C++, differences between compilers are only relevant once, when you compile.  Once you compile in a given compiler and test it, it will work the same forevermore regardless of C++.

[08:52:00.0000] <AryehGregor>
With web stuff, you can test your web page in all major browsers at the time you write it, and it might work just fine, and then it still might not work in future browsers if behavior changes.

[08:52:01.0000] <AryehGregor>
Which is why undefined behavior is more acceptable for C++ than the web.

[08:52:02.0000] <StoneCypher>
Ms2ger: downcasting has been well defined since BCPL

[08:52:03.0000] <AryehGregor>
jgraham, are you planning on ever accepting my pull request?

[08:52:04.0000] <StoneCypher>
Ms2ger: any downcast which is correctly masked succeeds

[08:52:05.0000] <AryehGregor>
Okay, let me rephrase that more politely:

[08:52:06.0000] <AryehGregor>
jgraham, do you have a timeline in mind for accepting my pull request?

[08:53:00.0000] <AryehGregor>
/me always try to be more polite than he is

[08:53:01.0000] <Ms2ger>
Which pull request? If it's to testharness.js, just push to dvcs.w3.org/hg/resources/

[08:53:02.0000] <AryehGregor>
Ms2ger, he asked me to submit a pull request on github instead of just pushing it.

[08:53:03.0000] <Philip`>
AryehGregor: Except if you're dynamically linking with libstdc++, which might change in the future

[08:54:00.0000] <AryehGregor>
If he doesn't respond for long enough, I guess I'll just push the updates myself.

[08:54:01.0000] <jgraham>
AryehGregor: Please do what Ms2ger says

[08:54:02.0000] <AryehGregor>
jgraham, okay.  So should I not submit pull requests in the future, or what?

[08:54:03.0000] <AryehGregor>
(I added a second commit to the pull request, in case you didn't notice.)

[08:54:04.0000] <jgraham>
I haven't got the sync between git and hg worked out properly yet

[08:54:05.0000] <AryehGregor>
(Should I push that too?)

[08:56:00.0000] <jgraham>
AryehGregor: Yes, that change looks fine

[08:56:01.0000] <jgraham>
AryehGregor: Dunno why I didn't get mail about it

[08:57:00.0000] <jgraham>
If I set up the necessary bits to sync github and hg I think pull requests are still the best way to work, because a crappy code review system is better than no code review system

[08:58:00.0000] <AryehGregor>
github's code review doesn't seem too bad at first glance.

[08:58:01.0000] <AryehGregor>
Got to be better than Bugzilla.

[08:59:00.0000] <jgraham>
Well yeah, but so is amputating your own leg with a rusty spoon.

[08:59:01.0000] <AryehGregor>
Mozilla still uses it.  :(

[08:59:02.0000] <Ms2ger>
Splinter isn't too bad

[08:59:03.0000] <jgraham>
I seriously have no idea how Mozilla manage it

[09:00:00.0000] <jgraham>
But maybe everyone is using the tools that present a UI on top of the broken model

[09:00:01.0000] <jgraham>
That makes it suck less

[09:02:00.0000] <AryehGregor>
Pretty much.

[09:09:00.0000] <Ms2ger>
What broken model?

[09:10:00.0000] <jgraham>
Posting diff output to bug reports

[09:10:01.0000] <Ms2ger>
That makes a lot of sense

[09:10:02.0000] <jgraham>
Not to me

[09:11:00.0000] <Ms2ger>
Why not? You're writing patches to a repository, so that's your output

[09:13:00.0000] <jgraham>
No, commits in a repository are your output. Why not work with those, and all the advanced tools you have for managing them?

[09:26:00.0000] <Ms2ger>
AryehGregor, congratulations, I guess :)

[09:26:01.0000] <AryehGregor>
Ms2ger, . . . on what?

[09:27:00.0000] <Ms2ger>
The CSSWG likes you

[09:28:00.0000] <AryehGregor>
It does?  I didn't notice.

[09:28:01.0000] <Ms2ger>
http://krijnhoetmer.nl/irc-logs/css/20120222#l-375

[09:28:02.0000] <AryehGregor>
Hurrah.

[09:28:03.0000] <AryehGregor>
It only took, what, upwards of a month?

[09:29:00.0000] <StoneCypher>
oh neat

[09:29:01.0000] <astearns>
we're now talking about transform-origin and perspective-origin

[09:29:02.0000] <Ms2ger>
But the bureacrazy needs that time!

[09:30:00.0000] <AryehGregor>
Oh, you're going to talk about using hg for specs.

[09:30:01.0000] <AryehGregor>
Yay.

[09:30:02.0000] <Ms2ger>
One repo for all specs, apparently

[09:30:03.0000] <AryehGregor>
That's okay with me.

[09:31:00.0000] <AryehGregor>
I wish it were easier to merge and split repos.

[09:31:01.0000] <AryehGregor>
No VCS seems to have managed that yet.

[09:31:02.0000] <AryehGregor>
Seems like a natural extension of the concept of a DVCS.

[09:31:03.0000] <AryehGregor>
You should be able to merge two repositories, where the merge commit puts one of them in a subdirectory of the other.

[09:32:00.0000] <Ms2ger>
I think you can do that somehow in hg

[09:32:01.0000] <AryehGregor>
Splitting is naturally handled anyway, I guess, by just deleting the irrelevant files in two different copies.

[09:32:02.0000] <AryehGregor>
Although re-merging won't be nice in that case.

[09:32:03.0000] <Philip`>
Presumably moving them into a subdirectory that wouldn't preserve the commit IDs (because changing the paths will change the commit content)

[09:33:00.0000] <Ms2ger>
You would move all the files into a subdir in one of the repos before merging

[09:34:00.0000] <Philip`>
Oh, I suppose that might work

[09:35:00.0000] <Philip`>
Can you simply pull from an unrelated repository into a second one, and then do a merge of the heads?

[09:35:01.0000] <Ms2ger>
Yes

[09:35:02.0000] <Ms2ger>
Though you have to say so loudly

[09:35:03.0000] <Philip`>
"hg PULL"?

[09:35:04.0000] <Ms2ger>
hg pull -f, IIRC

[09:50:00.0000] <AryehGregor>
Interesting.

[10:51:00.0000] <MikeSmith>
smaug____: validator.nu/mozilla HTML parser code does expose an API

[10:51:01.0000] <MikeSmith>
a la libxml2 or whatever

[10:51:02.0000] <MikeSmith>
for java apps at least

[10:51:03.0000] <smaug____>
MikeSmith: I was thinking API for C/C++

[10:53:00.0000] <jamesr__>
annevk, partial didn't exist when i wrote the IDL

[10:53:01.0000] <jamesr__>
annevk, i'll update the references to the most recent thing i can find on w3, but i'll have to leave those as links to w3 and w3c staff might go in and make them more retarded later on

[10:53:02.0000] <MikeSmith>
smaug____: ah OK, yeah, that would be nice to have

[11:05:00.0000] <pablof>
I'm a bit confused with some wording, halp?

[11:05:01.0000] <Philip`>
/me sees http://blogs.adobe.com/flashplayer/2012/02/adobe-and-google-partnering-for-flash-player-on-linux.html and now understands hsivonen's earlier reference to Pepper

[11:05:02.0000] <pablof>
When content whose URL has the same origin as the iframe element's Document fails to load (e.g. […]), then the user agent must queue a task to fire a simple event named error at the element instead.

[11:05:03.0000] <pablof>
what exactly are the origins involved in the same origin check there?

[11:06:00.0000] <pablof>
Who is "content" referring to?

[11:06:01.0000] <Ms2ger>
iframe src=foo

[11:06:02.0000] <Ms2ger>
content refers to foo

[11:08:00.0000] <pablof>
Ms2ger: i see, thanks!

[11:17:00.0000] <jamesr__>
Philip`, gtk3 transition is another factor w.r.t. flash linux (gtk3's an ABI change, npapi flash depends on gtk2)

[11:29:00.0000] <roc>
wow, that is really antisocial

[11:31:00.0000] <MikeSmith>
roc: ?

[11:31:01.0000] <roc>
tying Linux Flash > 11.2 to a huge pile of Chrome-only APIs

[11:33:00.0000] <AryehGregor>
Fortunately, Flash is progressively less relevant anyway.

[11:33:01.0000] <AryehGregor>
Still, though . . .

[11:35:00.0000] <roc>
indeed, maybe support for Flash > 11.2 will never become important to users

[11:36:00.0000] <AryehGregor>
So the CSSWG has finally decided to move from CVS to hg, but it probably won't happen for months.  Oh well.

[11:36:01.0000] <AryehGregor>
I guess I have to learn how to use CVS after all.

[11:36:02.0000] <roc>
you have led a protected existence

[11:36:03.0000] <AryehGregor>
:(

[11:39:00.0000] <roc>
hmm, my first read through the Adobe announcement missed the just-as-important fact that Adobe won't offer a Flash download other than bundled with Chrome

[11:39:01.0000] <smaug____>
roc: oh, I must have missed that

[11:39:02.0000] <smaug____>
Google must be paying quite a bit to Adobe

[11:40:00.0000] <roc>
so presumably as well as Firefox and Opera getting shafted, so do all other open-source browsers, including Chromium!

[11:50:00.0000] <Hixie>
where do i point someone who wants to work on test suites for html?

[11:52:00.0000] <roc>
jamesr__: FWIW I don't see any issues with supporting GTK3-based plugins in NPAPI. There might be a little work around the edges but the API dependencies on GTK2 are minimal

[11:52:01.0000] <Ms2ger>
Hixie, dvcs.w3.org/hg/html

[11:53:00.0000] <jgraham>
Hixie: public-html-testsuite

[11:53:01.0000] <Ms2ger>
And

[11:53:02.0000] <Ms2ger>
http://www.w3.org/html/wg/wiki/Testing/Submission/

[11:53:03.0000] <jgraham>
Or here ofc :)

[11:53:04.0000] <Hixie>
k, thanks guys

[11:53:05.0000] <jgraham>
Depends what "wants to work" means, really :)

[11:54:00.0000] <Ms2ger>
"At this time we are creating tests based on HTML5 'Features'. "

[11:54:01.0000] <Ms2ger>
/me wonders what that means

[11:54:02.0000] <jgraham>
The scare quoutes?

[11:54:03.0000] <jgraham>
Probably if you s/'Features'/bugs/ it will all make sense

[11:58:00.0000] <jamesr__>
roc, npapi flash today has dependencies on the ABI of gtk2, so it won't do anything on gtk3 systems. i imagine this could be fixed by some amount of work on the plugin author's side

[11:58:01.0000] <jamesr__>
i don't know how much work it is

[12:01:00.0000] <roc>
porting from GTK2 to GTK3 isn't that hard, judging by the patches that port Firefox ... especially since Flash isn't even affected by theming-related changes ... but OK

[12:11:00.0000] <Hixie>
ok i did the bug zcorpan wanted

[12:24:00.0000] <charlvn>
Hixie: now make zcorpan buy you a cookie... and make sure it isn't a flash cookie :P

[13:09:00.0000] <jgraham>
I have to stop reading about pepper, it is just too unpleasant

[13:10:00.0000] <MikeSmith>
jgraham: heh

[13:11:00.0000] <MikeSmith>
among the many lessons we have learned over the last 15 years: plugins in whatever form are ultimately  a very bad idea

[13:11:01.0000] <Ms2ger>
Multipage dead?

[13:11:02.0000] <Ms2ger>
http://www.whatwg.org/specs/web-apps/current-work/multipage/the-canvas-element.html#the-canvas-element

[13:12:00.0000] <Philip`>
Not my fault

[13:13:00.0000] <MikeSmith>
Ms2ger: http://dev.w3.org/html5/spec/the-canvas-element.html#the-canvas-element  is working afaict

[13:13:01.0000] <Ms2ger>
Bah, w3

[13:14:00.0000] <smaug____>
MikeSmith: indeed, which is why it is surprising that one browser vendor is actively developing a plugin API.

[13:16:00.0000] <MikeSmith>
yeah

[13:17:00.0000] <MikeSmith>
dunno what to say about that

[13:26:00.0000] <annevk>
jamesr: cool

[13:28:00.0000] <annevk>
Ms2ger: it's only one API

[13:28:01.0000] <annevk>
Ms2ger: no big deal

[13:29:00.0000] <AryehGregor>
/me is very sad that even with 16G of RAM, Gecko source code doesn't stay in the OS page cache for long

[13:29:01.0000] <AryehGregor>
/me shakes fist at Linux kernel

[13:42:00.0000] <jgraham>
AryehGregor: Pretty sure there will be a setting you can tweak to change that behaviour. And if you do, in three years, you might have figured out how to boot your system again!

[13:42:01.0000] <AryehGregor>
/me has considered just running cat on it all every once in a while from a cron job, with ionice set to idle

[14:14:00.0000] <pablof>
my brain is having a slow day today, trying again, in [[ When content whose URL has the same origin as the iframe element's Document fails to load (e.g. […]), then the user agent must queue a task to fire a simple event named error at the element instead.]], i'm still not sure i understand which origins are involved.

[14:14:01.0000] <pablof>
is it the iframe.src and iframe.contentDocument.URL, so to speak? or is it the iframe and the parent document?

[14:16:00.0000] <annevk>
no

[14:16:01.0000] <annevk>
it's iframe and it's owner Document

[14:17:00.0000] <annevk>
that could be a little clearer

[14:17:01.0000] <annevk>
though that suggests that if content fails to load in cross-origin scenarios nothing is dispatched at all

[14:17:02.0000] <annevk>
not sure that's what it is intended

[14:21:00.0000] <pablof>
what follies is it trying to prevent?

[14:22:00.0000] <annevk>
presumably detecting intranets

[14:22:01.0000] <annevk>
but you could do the same with XHR so I'm not sure it's preventing anything

[14:29:00.0000] <pablof>
annevk: how so? xhr throws different errors if there's a problem loading vs. security?

[14:44:00.0000] <Hixie>
aaaaaaanneeeeeeeeeeeeeeeeeeee

[14:44:01.0000] <Hixie>
(annevk: ping)

[14:46:00.0000] <pablof>
might need to turn this one on, http://i.imgur.com/LGawg.jpg

[14:49:00.0000] <annevk>
Hixie: que?

[14:50:00.0000] <Hixie>
annevk: your server sent me an incomplete zip

[14:51:00.0000] <Hixie>
annevk: aside from the obvious thing, namely making it so that the zip is always complete, it would be good to either not notify my side if the zip somehow is incomplete, or at least, to give me a way to determine if it is complete

[14:51:01.0000] <Hixie>
annevk: so i can skip it if it's not

[14:53:00.0000] <annevk>
Hixie: oh

[14:53:01.0000] <annevk>
file too big?

[14:53:02.0000] <Hixie>
it's happened before

[14:53:03.0000] <Hixie>
doesn't always happen

[14:54:00.0000] <Hixie>
hmm

[14:55:00.0000] <annevk>
I run zip and then wget

[14:55:01.0000] <annevk>
if you some advice for other commands I can run inbetween

[14:55:02.0000] <Hixie>
i'm guessing the problem is before zip

[14:55:03.0000] <Hixie>
probably anolis being killed by the kernel or something

[14:55:04.0000] <annevk>
before zip there's the spec-splitter

[14:55:05.0000] <annevk>
which I currently run twice

[14:55:06.0000] <Hixie>
or spec splitter yeah

[14:56:00.0000] <Hixie>
maybe you could make the spec splitter output a checkpoint file at the end, and then verify that it's there

[14:56:01.0000] <annevk>
but maybe I can drop the first copy

[14:56:02.0000] <Hixie>
why twice?

[14:56:03.0000] <Hixie>
so it looks like the a11y people think we should somehow expose text drawn into canvas so that it can be selected and cursored-through

[14:57:00.0000] <Hixie>
i have absolutely no idea how we could do that

[14:57:01.0000] <Hixie>
(short of using svg)

[14:57:02.0000] <annevk>
by reimplementing everything!

[14:58:00.0000] <Hixie>
annevk: my guess is that however many copies you have, the one that is used for whatwg.org is sometimes getting killed early by the kernel

[14:58:01.0000] <Hixie>
annevk: i would recommend the checkpoint file idea so you could at least detect that case easily

[14:59:00.0000] <Hixie>
something else that might be going on is that i might be calling you again while you're running

[14:59:01.0000] <Hixie>
maybe detect that somehow and abort if tere's already a running instance?

[15:00:00.0000] <annevk>
I don't know nearly enough shell script to take care of that

[15:00:01.0000] <annevk>
btw

[15:00:02.0000] <annevk>
the fragment-links.js file is generated by the spec-splitter script

[15:01:00.0000] <annevk>
so I should probably start including it again...

[15:01:01.0000] <Hixie>
it's link-fixup.js that you're not including

[15:01:02.0000] <Hixie>
it uses fragment-links.js

[15:01:03.0000] <Hixie>
which i thought you _were_ including

[15:02:00.0000] <Hixie>
(does it output that file last? if it does, i can use that as the checkpoint file and you don't need to do anything)

[15:03:00.0000] <annevk>
I am including it

[15:03:01.0000] <annevk>
it outputs that file last

[15:03:02.0000] <Hixie>
k

[15:04:00.0000] <annevk>
I made spec-splitter generate a single copy now

[15:04:01.0000] <annevk>
not spec-splitter, the shell script

[15:04:02.0000] <annevk>
commented the other out

[15:04:03.0000] <Hixie>
k

[15:04:04.0000] <annevk>
we'll see how it goes

[15:04:05.0000] <Hixie>
i made my side check for that file and not replace the online copy if it's absent

[15:09:00.0000] <pablof>
i thought imagemaps might in fashion again for the canvas thing, no? :P

[15:09:01.0000] <pablof>
*might be

[15:11:00.0000] <annevk>
oh god

[15:12:00.0000] <annevk>
pablof: xhr will just give an error event

[15:12:01.0000] <annevk>
pablof: including for cross-origin requests

[15:23:00.0000] <Hixie>
so basically one of the a11y requests for canvas boils down to "make find in page work for text drawn to canvas"

[15:27:00.0000] <pablof>
annevk: back to the iframe.onerror thing, "it's iframe and it's owner Document", i'm still confused...

[15:29:00.0000] <annevk>
confused about what?

[15:29:01.0000] <annevk>
might be better to ask Hixie about it

[15:29:02.0000] <annevk>
i'm planning to sleep

[15:32:00.0000] <pablof>
about what origins are supposed to be the same

[15:32:01.0000] <Hixie>
pablof: what's the question?

[15:33:00.0000] <pablof>
Hixie: [[ When content whose URL has the same origin as the iframe element's Document fails to load (e.g. […]), then the user agent must queue a task to fire a simple event named error at the element instead.]]

[15:34:00.0000] <Hixie>
yes?

[15:34:01.0000] <annevk>
pablof: it's the origin of the URL of the iframe and the origin of its owner Document afaict

[15:35:00.0000] <Hixie>
i really can't see any sane way that we could make "find in page" work for text drawn to canvas...

[15:35:01.0000] <Hixie>
hmmmmmm

[15:36:00.0000] <Hixie>
one of the design concepts for canvas is the idea that it has no backing DOM, and that if you need a backing DOM you should be using SVG

[15:36:01.0000] <bga>
http://www.paulgraham.com/hundred.html

[15:49:00.0000] <Hixie>
we could have the fillText()/strokeText() methods somehow keep track of which pixels they drew to, and remember the text at those pixels, until such time as the canvas is blown away by a clearRect()...

[15:50:00.0000] <Hixie>
but that seems like it would be shockingly expensive and wouldn't even work if you were drawImage()ing stuff with text

[15:50:01.0000] <Hixie>
e.g. canvas to canvas

[15:50:02.0000] <Hixie>
unless you somehow propagated the information along...

[15:53:00.0000] <Philip`>
http://simonsarris.com/blog/322-canvas-drawtext-considered-harmful - "Instead of calling drawText() to redraw my text objects each frame, I would instead create a new canvas (one never added to the DOM) for every single text object, and call drawText() on each object only once, drawing the text to its personal canvas.  Then, every time I wanted to (re)draw that text object, I would call drawImage() on my real canvas, passing in the object’s ...

[15:53:01.0000] <Philip`>
... personal canvas, instead of using drawText()."

[15:53:02.0000] <Philip`>
Sounds like copying text between canvases won't be especially rare, so a solution that doesn't work in that case is not a very good solution

[15:54:00.0000] <Philip`>
(A solution that does work in that case is likely to be far worse for many other reasons, of course)

[15:59:00.0000] <Philip`>
I'd have thought a better way to approach a11y is to consider that the canvas is a presentation of some internal application-specific data structure (i.e. whatever data the JS uses to decide what to render), and so there should be a decent way to expose that application-specific data to external a11y tools without the significant complexity of converting it all into a DOM


2012-02-23
[16:00:00.0000] <Philip`>
(One of the main advantages of canvas over SVG is that it's much easier to write code to render data since you don't have to convert it all into a DOM)

[16:02:00.0000] <Hixie>
yeah

[16:02:01.0000] <Hixie>
the problem is that the AT wants a tree

[16:03:00.0000] <Hixie>
which suggests using the DOM

[16:05:00.0000] <Philip`>
Could it equally suggest something like a JSON object? (with some specially-designed vocabulary so it exposes the data needed for AT with minimal overhead)

[16:06:00.0000] <Philip`>
/me doesn't automatically equate "tree" with "DOM"

[16:07:00.0000] <gsnedders>
I do. Whenever I want a tree data structure, I map my data to the DOM.

[16:08:00.0000] <Hixie>
Philip`: specifically, the AT wants a tree with AT annotations and so on, which is why it suggests the DOM (which already has all those built in, though not positions for the canvas)

[16:08:01.0000] <Hixie>
Philip`: certainly it's no the only solution, or maybe even the best

[16:09:00.0000] <Hixie>
Philip`: the idea of describing it as a JS object and then sending the object to the AT each time the canvas changes is interesting...

[16:09:01.0000] <Hixie>
hmm... what would it looks like. you'd have a bunch of nested arrays, each of which was a level of the hierarchy

[16:10:00.0000] <Hixie>
each would have a path associated with it, presumably, and a role

[16:10:01.0000] <Hixie>
and either a list of descendants, or a string, and you'd have to somehow give the precise position of each glyph in that string

[16:10:02.0000] <annevk>
yeah and only <canvas> authored by superhumans will use it

[16:11:00.0000] <Hixie>
we could provide APIs to automatically generate much of the information so it wouldn't be hard to build...

[16:12:00.0000] <Philip`>
Nobody in reality is going to maintain a DOM equivalent of their canvas-based code as a fallback for non-canvas-supporting graphical users, so they're only ever going to bother with the extra work when they're being forced to add a11y support, so if a non-zero number of people are forced to support a11y then it seems beneficial to provide an efficient a11y-specific API for them

[16:15:00.0000] <Hixie>
has anyone ever written an accessible version of asteroids?

[16:16:00.0000] <Hixie>
http://www.kevs3d.co.uk/dev/asteroids/ is one of the samples that was listed on the wiki page as an inaccessible canvas

[16:16:01.0000] <Hixie>
and i'm curious to see what an accessible version would be like

[16:17:00.0000] <nimbu>
isnt canvas essentially just like video but animated pixels?

[16:17:01.0000] <nimbu>
or pixel hacking

[16:18:00.0000] <nimbu>
i dont understand why/how accessibility can be added

[16:18:01.0000] <nimbu>
i looked at http://game-accessibility.com/

[16:18:02.0000] <nimbu>
but didnt find anything useful

[16:18:03.0000] <nimbu>
given a lot of canvas seems to be used for retro games

[16:20:00.0000] <Yuhong>
FYI on the IE DOM: http://news.ycombinator.com/item?id=3233935

[16:25:00.0000] <TabAtkins_>
nimbu: Canvas can theoretically be used for anything, so some of them are possible/appropriate to make accessible.

[16:25:01.0000] <TabAtkins_>
(I think that most, or maybe all, of these are bad uses of canvas.)

[16:25:02.0000] <nimbu>
yeah precisely.

[16:25:03.0000] <nimbu>
why would you optimize for bad usecases? :/

[16:26:00.0000] <Hixie>
bbl

[16:26:01.0000] <TabAtkins_>
nimbu: I don't think we should.  That's why I've stopped paying attention to public-html.

[16:26:02.0000] <TabAtkins_>
Since it's almost entirely confused a11y arguments.

[16:26:03.0000] <Philip`>
nimbu: Because accessibility is a core principle of the web, and canvas is part of the web, so canvas must support accessibility

[16:27:00.0000] <nimbu>
Philip`: how are images and videos supporting accessibility?

[16:27:01.0000] <nimbu>
i would think canvas belongs there

[16:27:02.0000] <Philip`>
nimbu: With longdesc

[16:27:03.0000] <Philip`>
(and alt)

[16:27:04.0000] <nimbu>
yeah there is nothing about making animated gifs accessible

[16:27:05.0000] <Philip`>
and subtitles etc for videos

[16:27:06.0000] <Philip`>
You put a description of the animated GIF in its longdesc

[16:28:00.0000] <Philip`>
(though of course HTML5 doesn't support longdesc (unless the HTML WG changed that yet?))

[16:28:01.0000] <Yuhong>
By jbeda, which now works for Google too.

[16:29:00.0000] <nimbu>
in my view i dont see how anything more is required specifically for canvas.

[16:30:00.0000] <AryehGregor>
Hixie, you should never have included author conformance requirements in the spec.  Would have saved you practically all this grief.

[16:30:01.0000] <AryehGregor>
UA processing only, that's the way to go.

[16:30:02.0000] <Philip`>
Wouldn't that just be shifting the grief to someone else?

[16:31:00.0000] <Philip`>
and if those someones handle it more poorly, then it makes the web worse for authors

[16:31:01.0000] <nimbu>
it is like saying we should optimize for web devs who use tables for layouts

[16:31:02.0000] <AryehGregor>
Only if someone bothers to write authoring conformance requirements for markup.  Why does that have to be anything official anyway?  Let people write their own private lint programs that match their own preferences.

[16:32:00.0000] <AryehGregor>
nimbu, how many hours of implementer time do you think have been spent optimizing for that case?  :)

[16:32:01.0000] <AryehGregor>
I bet lots.

[16:32:02.0000] <nimbu>
:/

[16:36:00.0000] <Philip`>
If authoring conformance didn't exist, it would be necessary to invent it

[16:36:01.0000] <Philip`>
People don't like working without rules from authorities

[16:37:00.0000] <TabAtkins_>
There really is a distinction between what we are forced to support for compat and what we want to encourage people to write.

[16:40:00.0000] <zewt>
authoring conformance should be determined by the rules for implementations

[16:40:01.0000] <zewt>
the idea that something must be supported by implementations with a specific behavior, yet is non-conforming, has always felt a bit nonsensical to me

[16:42:00.0000] <TabAtkins_>
I don't understand that position. :/

[16:46:00.0000] <zewt>
i don't understand the position that something is fully defined, required to be supported, and not to be used

[16:46:01.0000] <TabAtkins_>
Mistakes were made, shrug your shoulders and move on?

[16:46:02.0000] <TabAtkins_>
Also: "required to be supported" is potentially time-variable.

[16:47:00.0000] <TabAtkins_>
If you want to attempt to drive it back to "not", you have to get people to stop using it in new things.

[16:47:01.0000] <zewt>
conformance isn't just "we didn't mean to allow this", though

[16:48:00.0000] <TabAtkins_>
I don't understand.

[16:50:00.0000] <zewt>
ugh. hard for me to do a google search right now, because the idiotic animated front page is lagging text entry on my laptop by several seconds

[16:51:00.0000] <zewt>
whoever is doing that crap needs to be shot out of a cannon

[17:01:00.0000] <zewt>
TabAtkins_: there's certainly no expectation that browsers will ever change to reject pages with no <title>, for example

[17:02:00.0000] <TabAtkins_>
Sure.  And yet, there's good reason to include a <title>.

[17:03:00.0000] <TabAtkins_>
In general, the author requirements arent' meaningless - there are good reasons to prefer one solution, even if other solutions are required to be supported.

[17:03:01.0000] <TabAtkins_>
Pushing people toward those better solutions is a positive.

[17:09:00.0000] <zewt>
i'm not against making good practice recommendations, it's just the normative "must" that feels a bit too strong

[17:09:01.0000] <TabAtkins_>
In practice it's a recommendation, since it only actually shows up when you run it through a validator.

[17:10:00.0000] <zewt>
so, "should" :)

[17:10:01.0000] <TabAtkins_>
Meh, no reason to split hairs on it.  Might as well pretend it's a requirement so you don't have people lawyering over it.

[17:13:00.0000] <gsnedders>
TabAtkins_: See public-html, it's typically been full of lawyering ove rit

[17:13:01.0000] <gsnedders>
*over it

[17:14:00.0000] <TabAtkins_>
gsnedders: I mean authors. ^_^

[17:35:00.0000] <Hixie>
AryehGregor: the grief doesn't come from having authoring conformance criteria, it comes from having a system that prefers people with time than people with good opinions.

[17:36:00.0000] <Hixie>
AryehGregor: (notice how the whatwg system doesn't waste my time in the same way even though the same issues are discussed)

[17:36:01.0000] <Taggnostr>
livedom.validator.nu just froze my firefox

[17:37:00.0000] <Taggnostr>
is the author of livedom in this channel?

[17:44:00.0000] <TabAtkins_>
I presume it's a clone of Hixie's live dom viewer, so yes.

[17:44:01.0000] <TabAtkins_>
Taggnostr: ^^^

[17:45:00.0000] <Taggnostr>
it freezes if I enter a single & after the doctype (the doctype is probably unrelated though)

[17:46:00.0000] <TabAtkins_>
Whoops, indeed it does freeze.

[17:46:01.0000] <TabAtkins_>
Freezes Chrome too.

[17:46:02.0000] <TabAtkins_>
hsivonen: Is this something you ahve control over?

[17:47:00.0000] <smaug____>
hsivonen will be asleep still few hours

[18:00:00.0000] <Taggnostr>
uhm, maybe I found a bug in the HTML5 standard too

[19:24:00.0000] <kennyluck>
I actually think all other specifications should start to have authoring conformance. For example, If browser vendors don't want authors to use localStorage and it is not likely to be maintained well, it should be made non-conforming.

[21:08:00.0000] <llrcombs>
kennyluck: it appears that browser vendors are using localStorage, though

[23:20:00.0000] <zcorpan>
/me gives Hixie a cookie :-)

[23:22:00.0000] <MikeSmith>
so I've been reminded that Jetty has built-in WebSocket support

[23:23:00.0000] <MikeSmith>
so I reckon I can install Jetty on w3c-test.org, for those who care to write the server parts in Java

[23:31:00.0000] <zcorpan>
MikeSmith: filed

[23:32:00.0000] <MikeSmith>
thanks

[23:51:00.0000] <hsivonen>
See the last paragraph of http://www.ietf.org/mail-archive/web/apps-discuss/current/msg04355.html

[23:53:00.0000] <hsivonen>
TabAtkins_: that livedom.validator.nu freeze is interesting. thanks

[23:53:01.0000] <annevk>
hsivonen: that email, wow

[23:54:00.0000] <MikeSmith>
hahaha

[23:54:01.0000] <MikeSmith>
who is this joker?

[23:55:00.0000] <MikeSmith>
hsivonen: he clearly has *real* implementors in mind

[23:55:01.0000] <MikeSmith>
not browser makers

[23:55:02.0000] <hsivonen>
MikeSmith: he is the Designated Expert

[23:55:03.0000] <MikeSmith>
oh geez

[23:56:00.0000] <Hixie>
did you explain to him you were describing reality?

[23:56:01.0000] <MikeSmith>
I guess I should shut up

[23:57:00.0000] <MikeSmith>
It's *a* reality

[23:57:01.0000] <MikeSmith>
there are many other possible realities

[23:57:02.0000] <hsivonen>
Hixie: no. I expected Alexey and Julian would know that I'm interested in reality

[23:57:03.0000] <Hixie>
um

[23:57:04.0000] <Hixie>
well that was silly

[23:57:05.0000] <Hixie>
:-P

[23:58:00.0000] <hsivonen>
in fairness, what I suggested was a synthesis of Gecko, IE and WebKit behavior

[23:58:01.0000] <hsivonen>
so what I expect to become reality in Gecko--not quite the current reality

[23:59:00.0000] <hsivonen>
as in, becomes reality once I get around to implementing the BOM precedence change annevk suggested

[00:02:00.0000] <MikeSmith>
btw, fitting that the IETF mail-archive server turns "This seems naïve" into "This seems naÃve."

[00:03:00.0000] <annevk>
no Unicode man

[00:03:01.0000] <annevk>
us-ascii!!!!

[00:03:02.0000] <zcorpan>
also funny that he thinks utf-8-only for new formats is ridicolous

[00:05:00.0000] <zcorpan>
s/o/u/

[00:05:01.0000] <annevk>
I think that comment might have only been about the bits before the text on new types

[00:06:00.0000] <annevk>
happy to see he thinks text/css, text/html, etc. ridiculous though

[00:07:00.0000] <zcorpan>
well i can agree text/html is ridiculous

[00:09:00.0000] <Hixie>
who wouldn't

[00:15:00.0000] <hsivonen>
MikeSmith: that "naÃve" thing is awesome.

[00:16:00.0000] <MikeSmith>
yeah man

[00:16:01.0000] <MikeSmith>
in a number of ways

[00:16:02.0000] <annevk>
we're still discussing StreamBuilder?

[00:16:03.0000] <annevk>
ugh

[00:16:04.0000] <annevk>
I wonder if I'll ever get a reply to my feedback then...

[01:18:00.0000] <annevk>
iso-2022-cn is quite the mess

[01:29:00.0000] <bga>
http://groups.google.com/group/jsmentors/browse_thread/thread/910bc55b2cc9be54

[01:29:01.0000] <bga>
i wonder too if there is valid way

[01:30:00.0000] <bga>
everyone hate same origin policy

[02:02:00.0000] <zcorpan>
/me tries switching default search engine to ddg

[02:19:00.0000] <annevk>
oh hey steve faulkner, having fun making shit up? cf https://twitter.com/#!/stevefaulkner/status/172624731651059713

[02:20:00.0000] <hsivonen>
how annoying. now my apps-discuss posts don't show up in the archive but I didn't get confirmation email, either

[02:20:01.0000] <annevk>
prolly just takes a while

[02:21:00.0000] <annevk>
IETF lists are a lot slower than W3C lists from what I remember

[02:21:01.0000] <annevk>
takes a while to degrade all that Unicode going around these days

[02:21:02.0000] <hsivonen>
yeah. in the archive now

[02:22:00.0000] <jgraham>
annevk: Happily he links to his source, so anyone who bothers to check will realise that he utterly missed the point

[02:22:01.0000] <annevk>
guess so

[02:25:00.0000] <hsivonen>
I like it how steve uses "self-selected" disparagingly of #whatwg regulars. as if the WAI isn't self-selected.

[02:27:00.0000] <annevk>
hsivonen: are you going to defined the 16-bit code units?

[02:28:00.0000] <annevk>
hsivonen: apparently there are some actual problems with ECMAScript: http://code.google.com/p/v8/issues/detail?id=761

[02:28:01.0000] <zcorpan>
didn't know steve is the new lastweekinhtml5

[02:28:02.0000] <zcorpan>
hi steve!

[02:31:00.0000] <hsivonen>
annevk: s/defined/defend/ ?

[02:31:01.0000] <annevk>
yeah oops

[02:31:02.0000] <hsivonen>
annevk: I guess I should in due course, but please go ahead and do so before I get to it

[02:31:03.0000] <annevk>
sunny in Oslo

[02:31:04.0000] <annevk>
yay

[02:32:00.0000] <annevk>
I'm not sure I know enough about grapheme clusters

[02:33:00.0000] <annevk>
I guess I can read http://unicode.org/reports/tr29/#Grapheme_Cluster_Boundaries

[02:33:01.0000] <hsivonen>
zcorpan: Mr. Last Week never commented on any accessibility topic

[02:33:02.0000] <annevk>
I didn't even know stuff like g̈ existed

[02:33:03.0000] <annevk>
pretty wild

[02:34:00.0000] <annevk>
a ̈ test

[02:34:01.0000] <jgraham>
hsivonen: Surely your're not saying the MLW hated a11y?!

[02:35:00.0000] <jgraham>
s/your/you/

[02:35:01.0000] <annevk>
better start packing

[02:39:00.0000] <zcorpan>
hsivonen: what a missed opportunity!

[03:50:00.0000] <kennyluck>
What happened to lastweekinhtml5 by the way? The blog, I mean.

[04:00:00.0000] <niloy>
anyone knows about html tag highlighting plugin for gedit?

[04:03:00.0000] <ruby_on_tails>
is there a way to make the speech regognition feature continuous ?

[04:03:01.0000] <ruby_on_tails>
i dont want it to work only when the user stops speaking

[04:05:00.0000] <beverloo>
Not right now. A new Speech JavaScript API is being developed (somewhere -- probably a new CG) to aid in that

[04:05:01.0000] <ruby_on_tails>
CG means ?

[04:05:02.0000] <beverloo>
community group

[04:05:03.0000] <beverloo>
it's a new concept within the w3c

[04:06:00.0000] <ruby_on_tails>
any way i could read more about it ?

[04:07:00.0000] <beverloo>
This is an early draft: http://lists.w3.org/Archives/Public/public-webapps/2011OctDec/att-1696/speechapi.html

[04:09:00.0000] <ruby_on_tails>
beverloo: hmm thanks

[04:26:00.0000] <annevk5>
so I wonder if the limit for freenode is reached at Schiphol

[04:26:01.0000] <annevk5>
cannot connect

[04:26:02.0000] <annevk5>
but can connect to other IRC servers

[04:26:03.0000] <annevk5>
maybe because W3C and Opera are not on the default ports?

[04:28:00.0000] <annevk5>
any opinions on instead of having "Participate:" have a dedicated "Feedback" section that is also part of the table of contents?

[04:28:01.0000] <annevk5>
so that it becomes more visible in drafts how you can give feedback

[04:29:00.0000] <annevk5>
apparently it's not really read currently

[04:29:01.0000] <annevk5>
or not all the time anyway

[04:39:00.0000] <kennyluck>
I like "Participate:" better

[04:39:01.0000] <kennyluck>
but well, you have a point.

[04:41:00.0000] <zcorpan>
have both!

[04:51:00.0000] <annevk5>
kennyluck: me too

[04:51:01.0000] <annevk5>
and if it's only Marcos' that messes up, it might be okay

[04:51:02.0000] <annevk5>
maybe rename "Participate:" to "Send feedback:" ?

[04:52:00.0000] <annevk5>
I updated specification-data with the mutation observer stuff

[04:52:01.0000] <annevk5>
also expanded the events introduction

[04:52:02.0000] <annevk5>
and emailed www-dom about it

[04:52:03.0000] <annevk5>
http://dvcs.w3.org/hg/domcore/raw-file/tip/Overview.html#events

[04:52:04.0000] <annevk5>
will be back in four hours from some hotel in Oslo :)

[04:55:00.0000] <zcorpan>
annevk5: change "www-dom⊙wo (archives)" to "Send feedback to www-dom⊙wo (archives)"

[05:00:00.0000] <annevk5>
zcorpan: that could work

[05:00:01.0000] <annevk5>
zcorpan: and then "or file a bug" or some such

[05:02:00.0000] <zcorpan>
yep

[05:38:00.0000] <zcorpan>
annevk5: "And finally, and only if event's bubbles attribute value is true" - bubbles should be <code>d

[06:34:00.0000] <zewt>
(isn't "and only if" always implied?)

[07:31:00.0000] <kennyluck>
just in case you hadn't noticed http://www.ipetitions.com/petition/html-version-of-ecmascript-5-now

[07:34:00.0000] <Philip`>
Do the unofficial HTML copies of ES5 not count?

[07:38:00.0000] <kennyluck>
I would hope they release ES5 errata and ES6 drafts in HTML too.

[07:50:00.0000] <Velmont>
Hmm. I don't like that errors like   this_requires_one_arg()  ->  throws so widely different things.

[07:54:00.0000] <jgraham>
Should throw TypeError

[07:56:00.0000] <Velmont>
jgraham: OK, that's what I made the test expect. But as I'm currently testing firefox nightly it throws it's own NS_LONG_TYPE_ERROR in many places, but not in that one, there it throws its own  NS_ERROR_XPC_NOT_ENOUGH_ARGS (what's with the long scary names? :P)

[07:56:01.0000] <Velmont>
(I made NS_LONG_TYPE_ERROR up, it's called something else like that)

[07:57:00.0000] <jgraham>
Yeah Firefox really likes throwing NS_WE_MADE_THIS_ERR_UP_ERROR

[07:57:01.0000] <jgraham>
Blame smaug____

[07:57:02.0000] <jgraham>
Or Ms2ger

[07:57:03.0000] <jgraham>
Or sicking

[07:57:04.0000] <jgraham>
Or someone

[07:57:05.0000] <zcorpan>
/me blames jgraham

[07:58:00.0000] <Velmont>
/me blames the world

[07:58:01.0000] <Velmont>
*cutting wrists and cries*

[07:58:02.0000] <jgraham>
Well specifically someone that isn't me. And does work on DOM in Mozilla

[07:58:03.0000] <jgraham>
Velmont: You should talk to gsnedders. You could listen to emo music together

[07:59:00.0000] <Velmont>
jgraham: That coincidented nicely with my mplayer -playlist shuffle  putting on some emo music, btw. It must be a sign.

[07:59:01.0000] <smaug____>
jgraham: no no

[07:59:02.0000] <smaug____>
jgraham: blame Netscape

[08:00:00.0000] <jgraham>
smaug____: Dude, you have had almost a decade and a half to purge Netscape from the codebase

[08:00:01.0000] <Velmont>
smaug____: IndexedDB and friends wasn't thought about even when Netscape existed. òÓ

[08:00:02.0000] <Velmont>
How can it come from the past and mess with your new code? :P

[08:00:03.0000] <smaug____>
/me just just looking at code from 1999

[08:00:04.0000] <jgraham>
It can't possibly be that hard to throw TypeError rather than NS_WE_DIED_YEARS_AGO_ERROR

[08:01:00.0000] <smaug____>
oh, if it is about indexeddb, blame sicking :)

[08:02:00.0000] <sicking>
the reason we don't throw TypeError in indexedDB impl in Firefox is because we can't throw that from C++

[08:02:01.0000] <sicking>
so blame mrbkap, bholley or jst

[08:04:00.0000] <Velmont>
Weird limitation.

[08:05:00.0000] <Velmont>
But it's possible to throw all-caps with namespace baked in errors?

[08:05:01.0000] <smaug____>
"can't" is too strong. It is just annoyingly hard

[08:05:02.0000] <smaug____>
comparing to some other exceptions

[08:06:00.0000] <Velmont>
Well, mozilla is getting undeservingly much red from my tests on stuff like that :P

[08:39:00.0000] <gsnedders>
jgraham: I am not emo.

[08:39:01.0000] <gsnedders>
…

[08:39:02.0000] <gsnedders>
/me should stop getting annoyed at jgraham's accusations

[08:59:00.0000] <AryehGregor>
sicking, it should be the WebIDL implementation throwing TypeError for not enough arguments, not IndexedDB.

[09:02:00.0000] <Ms2ger`>
jgraham, did you know we have a special exception when you pass 0 as a pointer argument?

[09:04:00.0000] <AryehGregor>
Ms2ger`, SIGSEGV?

[09:31:00.0000] <sicking>
AryehGregor: indeed. We just don't have a webidl layer implemented yet

[09:31:01.0000] <sicking>
AryehGregor: that's exactly my point

[09:32:00.0000] <rniwa>
AryehGregor: yt?

[09:33:00.0000] <AryehGregor>
rniwa, yes.

[09:33:01.0000] <AryehGregor>
Although things seem quiet on the editing front for the last couple of months, so mostly I'm doing CSS transforms/transitions stuff now.

[09:34:00.0000] <rniwa>
AryehGregor: yeah... I need to give you back some feedback :(

[09:34:01.0000] <AryehGregor>
rniwa, please do.

[09:34:02.0000] <rniwa>
AryehGregor: my plan was to add a hook to run your ref. impl. against our tests

[09:34:03.0000] <rniwa>
AryehGregor: but I haven't gotten around to it

[09:34:04.0000] <AryehGregor>
Okay.

[09:34:05.0000] <rniwa>
AryehGregor: btw, we should start talking about table editing / control selection as well

[09:35:00.0000] <AryehGregor>
Is anyone implementing the stuff I've already specced?

[09:35:01.0000] <rniwa>
AryehGregor: in particular, we've been getting a lot of complaints about webkit not supporting control selection :(

[09:35:02.0000] <rniwa>
AryehGregor: not that I'm aware of

[09:35:03.0000] <AryehGregor>
I admit that I'm not so enthusiastic about spending more time on the editing spec when I spent over six months on it and no one seems to be implementing it.

[09:37:00.0000] <rniwa>
AryehGregor: well, we're going to do it eventually

[09:38:00.0000] <AryehGregor>
Right.

[09:38:01.0000] <rniwa>
AryehGregor: it's just that I'm basically the one person working on editing

[09:38:02.0000] <rniwa>
AryehGregor: in webkit at the moment

[09:38:03.0000] <AryehGregor>
Right, I know.

[09:38:04.0000] <rniwa>
AryehGregor: so it's gonna take forever

[09:38:05.0000] <AryehGregor>
And ehsan in Mozilla, and nobody at any other engine.

[09:38:06.0000] <rniwa>
AryehGregor: just like removing Apple-style-span took 2 years

[09:38:07.0000] <rniwa>
AryehGregor: we'll be super lucky if we can implement your spec in the next 2-3 years :(

[09:38:08.0000] <AryehGregor>
If I get more into Gecko coding working for Mozilla, maybe I can try implementing some parts of the editing spec.

[09:39:00.0000] <rniwa>
AryehGregor: sorry to tell you this, but very few people are enthusiastic about editing.

[09:39:01.0000] <AryehGregor>
The HTML parser took what, like five or more years for everyone to implement?

[09:39:02.0000] <rniwa>
despite the fact almost everyone uses the feature daily

[09:39:03.0000] <AryehGregor>
And it's a lot more important, and probably a lot simpler.

[09:39:04.0000] <rniwa>
AryehGregor: yeah

[09:39:05.0000] <rniwa>
AryehGregor: we were lucky because our old parser code was really bad

[09:39:06.0000] <AryehGregor>
Everyone's was really bad, I think.  :)

[09:39:07.0000] <rniwa>
AryehGregor: so eseidel & abarth decided to rewrite from scratch

[09:40:00.0000] <AryehGregor>
I think everyone did that.

[09:40:01.0000] <rniwa>
AryehGregor: had we been spending more time on parser code, and tried to incrementally converge

[09:40:02.0000] <rniwa>
AryehGregor: we wouldn't have finished yet :(

[09:40:03.0000] <hober>
rniwa: it's not just you working on editing in webkit; we've got enrica too. so there's 2 of you! :)

[09:41:00.0000] <rniwa>
hober: right, but enrica does other stuff too

[09:42:00.0000] <rniwa>
hober: i've been getting a lot of pressure to work on non-editing stuff as well

[09:42:01.0000] <rniwa>
hober: but i've been sneakingly avoiding that :P

[09:42:02.0000] <hober>
heh

[09:42:03.0000] <rniwa>
hober: because from PR point of view, editing isn't the most shiny new feature

[09:42:04.0000] <rniwa>
hober: it sorta works.

[09:42:05.0000] <hober>
it might not be shiny, but it's super important

[09:42:06.0000] <rniwa>
hober: and only people who work on editors care. (i.e. developers of tinyMCE, CKEditor, etc...)

[09:43:00.0000] <AryehGregor>
IMO, there's a lot of low-hanging fruit.

[09:43:01.0000] <rniwa>
hober: right. people get super upset whenever I introduce a regression

[09:43:02.0000] <AryehGregor>
If I were working on editing, the first thing I'd do is try to match the spec (= roughly IE/Opera) on linebreaks.

[09:43:03.0000] <hober>
*nod*

[09:43:04.0000] <AryehGregor>
That's probably the most blatant incompatibility between browsers.

[09:43:05.0000] <rniwa>
AryehGregor: oh yeah...

[09:43:06.0000] <rniwa>
AryehGregor: what do we do with line breaks?

[09:43:07.0000] <AryehGregor>
<p> vs. <div> vs. <br>.

[09:43:08.0000] <rniwa>
AryehGregor: can we add new switch?

[09:43:09.0000] <AryehGregor>
I specced <p>, basically.

[09:43:10.0000] <AryehGregor>
I could, if people are going to implement it . . .

[09:44:00.0000] <rniwa>
AryehGregor: did you add new toggling switch per ojan's suggestion?

[09:44:01.0000] <rniwa>
AryehGregor: on the condition that each editing host gets execCommand method?

[09:44:02.0000] <AryehGregor>
It's on my list of things to do, but again, I've mostly put aside editing work for now.

[09:44:03.0000] <rniwa>
AryehGregor: okay.

[09:44:04.0000] <AryehGregor>
I'll probably return to it sometime.

[09:44:05.0000] <rniwa>
AryehGregor: ping me when you've done that.

[09:44:06.0000] <rniwa>
AryehGregor: I think that's the most logical thing to do

[09:44:07.0000] <AryehGregor>
You're probably CCd on the relevant bugs.

[09:45:00.0000] <rniwa>
AryehGregor: as far as I know, there are a lot of legacy content that relies on the fact webkit produces div on line break :(

[09:45:01.0000] <AryehGregor>
Web content or WebKit-only content?

[09:45:02.0000] <rniwa>
AryehGregor: both

[09:45:03.0000] <rniwa>
AryehGregor: the latter is more serious.

[09:45:04.0000] <AryehGregor>
You could always have a different default for web users and other users.

[09:45:05.0000] <rniwa>
AryehGregor: because Microsoft Outlook & Apple Mail both use WebKit

[09:46:00.0000] <AryehGregor>
Outlook uses WebKit?  o_O

[09:46:01.0000] <rniwa>
AryehGregor: and we can't regress them :(

[09:46:02.0000] <rniwa>
AryehGregor: yeah on Mac

[09:46:03.0000] <AryehGregor>
Oh, makes sense.

[09:46:04.0000] <AryehGregor>
They can't very well use Trident on Mac.

[09:46:05.0000] <rniwa>
AryehGregor: yeah ever since they discontinued IE for Mac

[09:46:06.0000] <rniwa>
AryehGregor: although I don't think they used Trident on Mac

[09:46:07.0000] <AryehGregor>
They used Tasman.

[09:46:08.0000] <rniwa>
AryehGregor: they wrote the engine from scratch for Mac

[09:47:00.0000] <hober>
yup

[09:47:01.0000] <AryehGregor>
ehsan, do you think we could default styleWithCSS to false without breaking too much stuff?  I think authors just set styleWithCSS to false unconditionally at the start of all their scripts, in practice . . .

[09:47:02.0000] <AryehGregor>
That would be a nice compat win.

[09:48:00.0000] <AryehGregor>
/me might ask to spend some time working on Gecko editing stuff after he's done with all this CSS stuff, if he feels like doing coding instead of spec work

[09:48:01.0000] <AryehGregor>
Fortunately, there's almost no such thing as Gecko-specific content, so Gecko is often free to change to match other browsers.

[09:48:02.0000] <AryehGregor>
Unlike IE and WebKit.

[09:48:03.0000] <rniwa>
AryehGregor: that'll be nice.

[09:49:00.0000] <rniwa>
AryehGregor: although leaving default to true seems okay as long as there's an API to toggle it.

[09:49:01.0000] <AryehGregor>
Two biggest changes I would make: output <p> instead of <br>, and default styleWithCSS to false.

[09:49:02.0000] <AryehGregor>
Yeah, that's not a big deal because authors just force it to false.

[09:49:03.0000] <AryehGregor>
But they shouldn't have to.

[09:49:04.0000] <rniwa>
AryehGregor: we might consider something like

[09:49:05.0000] <AryehGregor>
So it's an easy fix.

[09:49:06.0000] <rniwa>
AryehGregor: turning on standard compliant mode when we see HTML5 style DOCTYPE

[09:50:00.0000] <rniwa>
AryehGregor: and fallback to legacy behavior elsewhere

[09:50:01.0000] <AryehGregor>
More quirks, in other words?

[09:50:02.0000] <AryehGregor>
Quirks are bad.

[09:51:00.0000] <AryehGregor>
Doesn't WebKit editing code already have different codepaths in some places for Apple Mail?

[09:51:01.0000] <rniwa>
AryehGregor: well, we don't.

[09:51:02.0000] <rniwa>
AryehGregor: we just look for specific classes and elements :(

[09:51:03.0000] <rniwa>
sigh....

[09:51:04.0000] <AryehGregor>
:/

[09:52:00.0000] <rniwa>
AryehGregor: you can add <blockquote type="cite"> and webkit treats them differently than a regular blockquote :(

[09:52:01.0000] <AryehGregor>
Ouch.

[09:53:00.0000] <rniwa>
AryehGregor: but that's just a secret between you and me. don't tell anyone, and we should be okay :)

[09:53:01.0000] <rniwa>
or hopefully so.

[09:53:02.0000] <rniwa>
AryehGregor: anyways, https://bugs.webkit.org/show_bug.cgi?id=12250 is the control selection bug I was talking about

[09:54:00.0000] <rniwa>
AryehGregor: it seems like authors expect image, etc... to be re-sizable in contenteditable regions

[09:54:01.0000] <AryehGregor>
Yeah.

[09:54:02.0000] <AryehGregor>
That's more of a QoI issue than a spec issue, though.

[09:54:03.0000] <rniwa>
AryehGregor: maybe.

[09:54:04.0000] <AryehGregor>
I mean, I can add a line to the spec saying UAs have to let users resize them.

[09:54:05.0000] <rniwa>
AryehGregor: but they expect this to work

[09:54:06.0000] <AryehGregor>
I have a bug open about that.

[09:54:07.0000] <rniwa>
AryehGregor: so you should probably say something about it.

[09:54:08.0000] <rniwa>
AryehGregor: yeah

[09:54:09.0000] <rniwa>
AryehGregor: maybe also move it around by dragging it?

[09:55:00.0000] <AryehGregor>
But precise interop isn't necessary as long as UAs provide some way to resize, so there's not much for the spec to say.

[09:55:01.0000] <AryehGregor>
There's a spec bug for that too.

[09:55:02.0000] <rniwa>
AryehGregor: right.

[09:55:03.0000] <rniwa>
AryehGregor: but I'm thinking that there should probably be some event firing to let authors know of the resize, etc...

[09:55:04.0000] <AryehGregor>
It's not like a switch to change the default block type, where the spec needs to say how authors call it.

[09:55:05.0000] <AryehGregor>
Maybe . . . do existing UAs do that?

[09:55:06.0000] <rniwa>
AryehGregor: in the case of resizing tables, things are a lot of trickier

[09:56:00.0000] <rniwa>
AryehGregor: because width of a row can be specified by td, or tr

[09:56:01.0000] <AryehGregor>
You can do foo { resize: both } on existing stuff already.  http://dev.w3.org/csswg/css3-ui/#resize

[09:56:02.0000] <AryehGregor>
Table width is a nightmare.

[09:56:03.0000] <rniwa>
I mean height*

[09:56:04.0000] <rniwa>
AryehGregor: yeah.

[09:56:05.0000] <rniwa>
AryehGregor: but we need to support it at some point

[09:56:06.0000] <AryehGregor>
https://www.w3.org/Bugs/Public/show_bug.cgi?id=13795#c4

[09:57:00.0000] <rniwa>
AryehGregor: things get awfully tricky when we have rowspan and colspan :(

[09:57:01.0000] <AryehGregor>
Tables are a nightmare period.

[09:58:00.0000] <rniwa>
AryehGregor: I know.

[09:58:01.0000] <rniwa>
AryehGregor: but people DO use them :(

[09:58:02.0000] <AryehGregor>
rniwa, if there's something you want to implement in the near future and it's blocked on there not being a spec, tell me and I can spend some time working on that.  E.g., if you actually plan to implement a switch that lets authors have <p> instead of <div> for newlines but aren't doing it because there's no spec, I'll write the spec today.

[09:58:03.0000] <rniwa>
AryehGregor: and enterprise folks LOVE them

[09:58:04.0000] <rniwa>
AryehGregor: I'd like to implement that one soon

[09:59:00.0000] <rniwa>
AryehGregor: because that's probably the only sane way for us to switch

[09:59:01.0000] <rniwa>
AryehGregor: at least in the near future

[09:59:02.0000] <AryehGregor>
I can spend some time on it, then.

[09:59:03.0000] <rniwa>
AryehGregor: that'll be great!

[09:59:04.0000] <AryehGregor>
Most of the work will be writing tests.

[09:59:05.0000] <rniwa>
AryehGregor: also before/after edit command events

[09:59:06.0000] <rniwa>
AryehGregor: they appear to be useful even today.

[09:59:07.0000] <rniwa>
if we can let authors override the default behavior

[09:59:08.0000] <AryehGregor>
https://www.w3.org/Bugs/Public/show_bug.cgi?id=15527 https://www.w3.org/Bugs/Public/show_bug.cgi?id=13118

[10:00:00.0000] <rniwa>
AryehGregor: because then authors can selectively override the default behavior using my UndoManager API

[10:00:01.0000] <AryehGregor>
rniwa, here's my plan for edit events: https://www.w3.org/Bugs/Public/show_bug.cgi?id=13118#c23

[10:00:02.0000] <AryehGregor>
Does that look good to you?

[10:00:03.0000] <rniwa>
AryehGregor: that should give us a nice bridge between the current broken world and the new interop world :)

[10:00:04.0000] <AryehGregor>
No one ever gave feedback, so I got discouraged and forgot about it.

[10:01:00.0000] <rniwa>
AryehGregor: ah, oops. I wasn't aware of this bug :(

[10:01:01.0000] <rniwa>
despite of the fact i'm cc-ed :(

[10:04:00.0000] <AryehGregor>
Tell me if you like my scheme for implementing those events.

[10:05:00.0000] <rniwa>
AryehGregor: yeah, your proposal seems reasonable.

[10:05:01.0000] <AryehGregor>
Okay.

[10:10:00.0000] <rniwa>
/me comments on the bug enthusiatically

[10:12:00.0000] <AryehGregor>
:)

[10:14:00.0000] <rniwa>
AryehGregor: hm... wait so you don't think we should fire those events for script-initiated execCommands?

[10:14:01.0000] <rniwa>
AryehGregor: why not?

[10:14:02.0000] <rniwa>
AryehGregor: beforeInput/input events are fired synchronously at least in webkit

[10:15:00.0000] <AryehGregor>
/me refreshes his memory

[10:15:01.0000] <AryehGregor>
Ack, synchronous events are evil.

[10:15:02.0000] <AryehGregor>
What triggers them synchronously?

[10:15:03.0000] <AryehGregor>
We're trying to get rid of mutation events exactly because they're synchronous . . .

[10:16:00.0000] <AryehGregor>
If you want to synchronously hook into execCommand, you could always write a wrapper for it.

[10:16:01.0000] <rniwa>
AryehGregor: beforeInput/input

[10:16:02.0000] <rniwa>
AryehGregor: they're okay

[10:16:03.0000] <AryehGregor>
If you want to hook into other scripts' calls too, you can overwrite the method on the prototype . . .

[10:16:04.0000] <rniwa>
AryehGregor: because beforeInput/input won't fire as a side effect of something else :)

[10:17:00.0000] <rniwa>
AryehGregor: the only function that could fire these events is execCommand

[10:17:01.0000] <AryehGregor>
What if you call execCommand() from the handler?

[10:17:02.0000] <AryehGregor>
Everything has to be re-entrant?

[10:17:03.0000] <rniwa>
AryehGregor: but you can do that today.

[10:17:04.0000] <rniwa>
AryehGregor: blur, focusout, etc... all fire synchronously.

[10:17:05.0000] <AryehGregor>
/me tests blur

[10:18:00.0000] <roc>
they are synchronous, and it's a real nightmare

[10:19:00.0000] <AryehGregor>
Hmm, onfocus is sync in every browser but IE.

[10:19:01.0000] <AryehGregor>
http://software.hixie.ch/utilities/js/live-dom-viewer/?%3C!DOCTYPE%20html%3E%0A%3Cinput%20value%3D%22some%20text%22%20onfocus%3D%22w('b')%22%3E%0A%3Cscript%3E%0Aw(%22a%22)%3B%0Adocument.querySelector(%22input%22).focus()%3B%0Aw(%22c%22)%3B%0A%3C%2Fscript%3E

[10:19:02.0000] <rniwa>
AryehGregor: yeah, it's pretty annoying.

[10:19:03.0000] <rniwa>
AryehGregor: beforeunload as well if you have img, iframe, etc... :(

[10:20:00.0000] <rniwa>
AryehGregor: so we can't get away with these sync events.

[10:20:01.0000] <AryehGregor>
IE seems to make focus async, at least in that test.

[10:20:02.0000] <AryehGregor>
https://www.w3.org/Bugs/Public/show_bug.cgi?id=16091

[10:20:03.0000] <rniwa>
AryehGregor: on the other hand, we might be able to make execCommand not re-entrant, for example

[10:21:00.0000] <AryehGregor>
Do DOM or HTML even define such a thing as synchronous events?

[10:21:01.0000] <rniwa>
AryehGregor: so that if you try to call execCommand inside another execCommand or in some event handler trigged by another execCommand, we can throw

[10:21:02.0000] <AryehGregor>
DOM I'm pretty sure doesn't.

[10:21:03.0000] <rniwa>
AryehGregor: DOM

[10:21:04.0000] <AryehGregor>
/me looks

[10:21:05.0000] <rniwa>
AryehGregor: at least DOM 3

[10:21:06.0000] <AryehGregor>
Well, no one uses DOM 3.

[10:22:00.0000] <rniwa>
AryehGregor: the problem is that if we don't fire them synchronously, we'll never be able to propagate events to ancestors' event listeners

[10:22:01.0000] <rniwa>
AryehGregor: unless we store the vector of ancestors :(

[10:22:02.0000] <rniwa>
AryehGregor: which will be a huge memory bloat

[10:22:03.0000] <AryehGregor>
Why not?

[10:22:04.0000] <Ms2ger`>
You have to do that, no?

[10:22:05.0000] <rniwa>
AryehGregor: because once the node is removed

[10:22:06.0000] <rniwa>
AryehGregor: the node doesn't have a parent anymore

[10:22:07.0000] <rniwa>
AryehGregor: and we wouldn't know to which node the event should be propagated

[10:22:08.0000] <AryehGregor>
Why not just not fire at ancestors if the node is removed before the event runs?

[10:23:00.0000] <rniwa>
AryehGregor: but then you'll never receive that event

[10:23:01.0000] <rniwa>
AryehGregor: unless you've attached EL on the node you're removing

[10:23:02.0000] <AryehGregor>
How likely is it that the node will be removed from its parent between the event being fired and running?

[10:23:03.0000] <AryehGregor>
Also: it's an array of a few pointers for every event fired.  Why should it be such memory bloat?

[10:24:00.0000] <AryehGregor>
How many events get fired anyway?

[10:24:01.0000] <rniwa>
AryehGregor: we fire events very often

[10:25:00.0000] <rniwa>
AryehGregor: we have lots of optimizations to minimize the number of events to fire

[10:25:01.0000] <rniwa>
AryehGregor: and the cost per event dispatches

[10:25:02.0000] <AryehGregor>
Hmm.

[10:25:03.0000] <TabAtkins_>
Hm.  Can someone explain why attributes in WebIDL end up on the prototype of an object rather than the object itself?

[10:25:04.0000] <Ms2ger`>
I'm sure someone wan

[10:25:05.0000] <Ms2ger`>
can*

[10:25:06.0000] <AryehGregor>
TabAtkins_, "why" in what sense?

[10:25:07.0000] <AryehGregor>
"Why" as in "what part of the spec says that", or "why does the spec say that", or "why did browsers implement it that way originally", or . . . ?

[10:26:00.0000] <AryehGregor>
The spec says it because that's what browsers do, and browsers do it because whatever crazy person thought up JS apparently thought a prototype-based object model was cool.

[10:26:01.0000] <TabAtkins_>
Context is recent discussion about moving the CSSStyleDeclaration from explicitly listing attributes to using a getter, because the former puts the properties on the prototype while the latter puts them on the object.

[10:26:02.0000] <AryehGregor>
(which actually it kind of is)

[10:26:03.0000] <AryehGregor>
The latter doesn't put them on the object.  It just invokes the getter on the prototype.

[10:27:00.0000] <TabAtkins_>
Prototype-based OO is cool.  But I don't understand the reasoning behind object properties living on the prototype.

[10:27:01.0000] <AryehGregor>
If you want them on the object for some reason, you can use [Unforgeable].

[10:27:02.0000] <TabAtkins_>
Oh, then Boris is wrong.

[10:27:03.0000] <TabAtkins_>
kk

[10:27:04.0000] <AryehGregor>
/me is very hesitant to ever say Boris is wrong :)

[10:27:05.0000] <TabAtkins_>
(That's a very rare event.)

[10:27:06.0000] <AryehGregor>
/me looks at the thread

[10:27:07.0000] <Ms2ger`>
^

[10:27:08.0000] <rniwa>
AryehGregor, TabAtkins_: but we Do want them on prototype no?

[10:27:09.0000] <AryehGregor>
Probably Boris is right.

[10:27:10.0000] <rniwa>
otherwise, it'll be troublesome to do expandos on them

[10:28:00.0000] <TabAtkins_>
rniwa: I don't know!  Why would we?  I don't understand the reasoning.

[10:28:01.0000] <rniwa>
TabAtkins_: so if I wanted to create a new class that inherits from an object with those attributes

[10:28:02.0000] <rniwa>
TabAtkins_: then I'll have to manually copy all attributes

[10:28:03.0000] <rniwa>
TabAtkins_: if they were not in prototype, no?

[10:28:04.0000] <Ms2ger`>
Philip`, https://www.w3.org/Bugs/Public/show_bug.cgi?id=15925 is for you

[10:29:00.0000] <TabAtkins_>
Depends on how you're doing your inheritance. ^_^

[10:29:01.0000] <TabAtkins_>
Are you chaining from the prototype, or using an exemplar object?

[10:29:02.0000] <rniwa>
TabAtkins_: sure. but the most common approach is by using prototype chain.

[10:29:03.0000] <TabAtkins_>
I think I recall that WebIDL is defined to use prototype chaining, so okay.

[10:30:00.0000] <AryehGregor>
WebIDL for ES doesn't normally put any own properties on the objects themselves, only on the interface, IIRC.

[10:30:01.0000] <AryehGregor>
Except for [Unforgeable] and maybe some other cases.

[10:30:02.0000] <AryehGregor>
/me is looking at getters now

[10:30:03.0000] <rniwa>
AryehGregor: right.

[10:30:04.0000] <TabAtkins_>
Where "interface" means "prototype object", yeah.

[10:31:00.0000] <TabAtkins_>
<3 "latest editor's draft" links.

[10:31:01.0000] <rniwa>
AryehGregor, AryehGregor: I think some JS engines optimize attributes on prototype

[10:31:02.0000] <rniwa>
ugh.. I mean AryehGregor & TabAtkins_

[10:31:03.0000] <AryehGregor>
Er, right.

[10:31:04.0000] <TabAtkins_>
Urgh, what is squatting my ordinary name?

[10:31:05.0000] <rniwa>
TabAtkins_, AryehGregor: because all objects that share the same prototype can then share some data structure internally

[10:32:00.0000] <rniwa>
/me needs to learn more about JS engines

[10:32:01.0000] <rniwa>
we just need to summon some ES5 gurus here.

[10:32:02.0000] <rniwa>
arv: ?

[10:33:00.0000] <Ms2ger`>
gsnedders?

[10:33:01.0000] <TabAtkins>
Ah, that's better.

[10:33:02.0000] <AryehGregor>
http://dev.w3.org/2006/webapi/WebIDL/#indexed-and-named-properties

[10:34:00.0000] <AryehGregor>
http://dev.w3.org/2006/webapi/WebIDL/#getownproperty

[10:35:00.0000] <AryehGregor>
Okay, yeah

[10:35:01.0000] <AryehGregor>
.

[10:35:02.0000] <AryehGregor>
So if you have a getter, the properties all become own properties.

[10:35:03.0000] <AryehGregor>
/me isn't sure why

[10:35:04.0000] <AryehGregor>
Except if you have [NamedPropertiesObject].

[10:35:05.0000] <rniwa>
:(

[10:35:06.0000] <AryehGregor>
But that's cautioned against.

[10:36:00.0000] <rniwa>
AryehGregor: why do we have all those exotic things :(

[10:36:01.0000] <AryehGregor>
Also, that doesn't work if you have a setter.

[10:36:02.0000] <TabAtkins>
Okay, time to email public-script-coord and see what's up.

[10:36:03.0000] <AryehGregor>
rniwa, "Please leave your sense of logic at the door, thanks!"

[10:36:04.0000] <rniwa>
AryehGregor: we should rename that to DeprecatedNamedPropertiesObject

[10:36:05.0000] <rniwa>
AryehGregor: so that people won't use it

[10:37:00.0000] <rniwa>
AryehGregor: anyway, comment posted on https://www.w3.org/Bugs/Public/show_bug.cgi?id=13118

[10:37:01.0000] <AryehGregor>
Okay.

[10:37:02.0000] <rniwa>
AryehGregor: not firing events for script-initiated execCommand may not be as bad as I initially thought due to interop with mutation observer API

[10:37:03.0000] <rniwa>
but I think it's still nice to fire them.

[10:38:00.0000] <rniwa>
/me sends emails to TinyMCE CKEditor developers

[10:39:00.0000] <Ms2ger`>
I wonder if CK has already committed my patch to stop using element.all

[10:41:00.0000] <rniwa>
AryehGregor: one question

[10:41:01.0000] <AryehGregor>
Okay.

[10:41:02.0000] <rniwa>
AryehGregor: is the plan to add new property on the event object to expose execCommand name?

[10:41:03.0000] <hsivonen>
rniwa: WebKit's old HTML parser as nowhere near as bad as Gecko's old HTML parser

[10:41:04.0000] <rniwa>
hsivonen: LOL

[10:41:05.0000] <hsivonen>
There should be a band called The Designated Experts

[10:41:06.0000] <AryehGregor>
rniwa, sure, I guess.

[10:41:07.0000] <Ms2ger`>
^truth

[10:41:08.0000] <AryehGregor>
And value.

[10:42:00.0000] <rniwa>
AryehGregor: yeah

[10:42:01.0000] <hsivonen>
and The Unpaired Surrogates

[10:42:02.0000] <rniwa>
AryehGregor: so something like event.editingAction and event.editingActionValue?

[10:42:03.0000] <AryehGregor>
Yeah, I'll come up with names.

[10:42:04.0000] <Ms2ger`>
I'd let hsivonen come up with names :)

[10:42:05.0000] <hsivonen>
s/as nowhere/was nowhere/

[10:47:00.0000] <annevk>
The Grapheme Clusterfuck

[10:47:01.0000] <annevk>
The Adoption Agency

[10:48:00.0000] <rniwa>
AryehGregor: thanks.

[10:48:01.0000] <arv>
rniwa: back, reading backlog

[10:51:00.0000] <arv>
rniwa: What was the question?

[10:51:01.0000] <rniwa>
AryehGregor: CSS resize property is insufficient for https://bugs.webkit.org/show_bug.cgi?id=12250

[10:52:00.0000] <AryehGregor>
rniwa, why?

[10:52:01.0000] <rniwa>
AryehGregor: it only changes the apparent size

[10:52:02.0000] <rniwa>
AryehGregor: not width and height property/content attribute

[10:52:03.0000] <AryehGregor>
It adds style="width: x; height: x".

[10:52:04.0000] <AryehGregor>
In browsers I tested in.

[10:52:05.0000] <rniwa>
arv: the question is why WebIDL defines attributes on prototype instead on objects

[10:52:06.0000] <AryehGregor>
That's how browsers work, and how JS works . . .

[10:53:00.0000] <rniwa>
arv: my answer was that it's needed for inheritance

[10:53:01.0000] <rniwa>
arv: but thought you might a better answer for TabAtkins

[10:53:02.0000] <AryehGregor>
Not strictly.  It also defines [Unforgeable].

[10:53:03.0000] <rniwa>
AryehGregor: yeah...

[10:53:04.0000] <AryehGregor>
That still works with inheritance, I think.

[10:53:05.0000] <arv>
rniwa: The main reason to use getters and setters on the [[Prototype]] is to allow inheritance

[10:53:06.0000] <rniwa>
arv: okay. so I was telling a lie :P

[10:53:07.0000] <rniwa>
I wasn't*

[10:54:00.0000] <arv>
rniwa: also, if these were data properties they could not have side effects so for example innerHTML could not be asked for lazily

[10:54:01.0000] <rniwa>
AryehGregor: ah, you're right. I was not checking the right element :(

[10:54:02.0000] <rniwa>
sorry about the noise.

[10:54:03.0000] <AryehGregor>
arv, they could be accessor properties but still be on the object itself.

[10:54:04.0000] <rniwa>
AryehGregor: I guess the only thing is that it needs to be undoable.

[10:55:00.0000] <AryehGregor>
Sure.

[10:55:01.0000] <arv>
AryehGregor: Yes, that would still be valid when it comes to following the rules of js semantics

[10:55:02.0000] <AryehGregor>
I believe that's how [Unforgeable] properties work in practice.

[10:55:03.0000] <arv>
AryehGregor: but it would be ineffiecient and not as useful

[10:56:00.0000] <AryehGregor>
Unless you don't want authors to be able to mess with the prototype, which is occasionally the case.

[10:56:01.0000] <AryehGregor>
Like for certain Window properties.

[10:56:02.0000] <rniwa>
AryehGregor: do you know how I can make resize property work with img?

[10:56:03.0000] <arv>
AryehGregor: well, host object can break any logic reasoning so anything is doable. The goal of using getters and setters on the prototype for webidl attributes was to make webidl more sane

[10:56:04.0000] <rniwa>
AryehGregor: I've tried some but doesn't seem to wokr

[10:57:00.0000] <rniwa>
it's possible that we have a bug there

[10:57:01.0000] <AryehGregor>
rniwa, resize properties is not very well defined.

[10:57:02.0000] <AryehGregor>
This says it shouldn't apply to a regular img: http://dev.w3.org/csswg/css3-ui/#resize

[10:57:03.0000] <AryehGregor>
But I think the spec is wrong.

[10:57:04.0000] <AryehGregor>
I posted to www-style about it at some point, but it never changed.

[10:58:00.0000] <AryehGregor>
http://lists.w3.org/Archives/Public/www-style/2011Aug/0565.html

[10:58:01.0000] <TabAtkins>
arv: The interesting issue is that using the getter/setter/etc stuff in WebIDL establishes own properties, rather than prototype properties.

[10:58:02.0000] <TabAtkins>
And the flag that switches it to non-own properties is marked as being used only for legacy.

[10:58:03.0000] <arv>
TabAtkins: That can't be right

[10:58:04.0000] <TabAtkins>
I'm asking public-script-coord about it now.

[10:58:05.0000] <TabAtkins>
arv: We just looked it up.  ^_^

[10:59:00.0000] <arv>
TabAtkins: looking at webidl specs now

[10:59:01.0000] <TabAtkins>
http://dev.w3.org/2006/webapi/WebIDL/#indexed-and-named-properties\

[10:59:02.0000] <arv>
TabAtkins: ah, indexed and named properties are not the same

[10:59:03.0000] <AryehGregor>
getter/setter = indexed/named properties, more or less.

[10:59:04.0000] <arv>
TabAtkins: those require proxy like behavior

[11:00:00.0000] <Ms2ger`>
TabAtkins, the legacy thing is for the global scope polluter only

[11:00:01.0000] <arv>
AryehGregor: not at all

[11:00:02.0000] <AryehGregor>
No?

[11:00:03.0000] <arv>
AryehGregor: indexed/named properties == Proxy

[11:00:04.0000] <AryehGregor>
I mean WebIDL's getter/setter qualifiers, of course, not ES getter/setter.

[11:00:05.0000] <arv>
AryehGregor: sorry, different terminalogy

[11:00:06.0000] <TabAtkins>
arv: I thought the best way to fix CSSStyleDeclaration from being a set list of properties (which is obviously going to be forever incomplete) would be to use getter/setter to establish named properties.

[11:01:00.0000] <arv>
TabAtkins: What does IE do?

[11:01:01.0000] <AryehGregor>
TabAtkins, why not just add the properties individually to the prototype object, though?

[11:01:02.0000] <rniwa>
AryehGregor: hm... but <img src="blah.png" style="overflow:auto;resize:both;"> should still be resizable, no?

[11:02:00.0000] <TabAtkins>
arv: Everyone but us puts the properties on the prototype.  We mark them as own properties.

[11:02:01.0000] <TabAtkins>
AryehGregor: I don't understand.

[11:02:02.0000] <AryehGregor>
rniwa, I don't see why not.  overflow should make no difference for things that have intrinsic widths.

[11:02:03.0000] <AryehGregor>
TabAtkins, I mean, what's wrong with the status quo?

[11:02:04.0000] <rniwa>
AryehGregor: yeah, okay. so I think this is a webkit bu

[11:02:05.0000] <rniwa>
bug*

[11:02:06.0000] <TabAtkins>
It's clearly incomplete, and basically required to be, forever?

[11:02:07.0000] <rniwa>
AryehGregor: http://simple-rte.rniwa.com/?editor=%3Cimg%20src%3D%22https%3A//rniwa.com/wp-content/latex/5f7/5f70c79d395af9fe2eb98c8b362d0bed-ffffff-000000-0.png%22%20style%3D%22overflow%3Aauto%3Bresize%3Aboth%3B%22%3E&designmode=false&script=document.getElementById%28%27editor%27%29.focus%28%29%3B

[11:13:00.0000] <arv>
TabAtkins: IE has ES getters/setters for all known properties on CSSStyleDeclarationPrototype

[11:13:01.0000] <arv>
TabAtkins: this seems to be the only sane thing to me

[11:14:00.0000] <Ms2ger`>
arv, that's what the spec currently says, IIRC

[11:14:01.0000] <AryehGregor>
Which means in WebIDL terms, they're just regular attributes on the interface.

[11:14:02.0000] <AryehGregor>
Which is what the spec says, yeah.

[11:14:03.0000] <arv>
Ms2ger`: good

[11:14:04.0000] <TabAtkins>
Using ES getters and setters is definitely the correct behavior (so you can do lazy generation), and the spec currently requires them to be on the prototype.

[11:14:05.0000] <AryehGregor>
Attributes in WebIDL are always accessor properties, not data properties, AFAIK.

[11:14:06.0000] <Ms2ger`>
Yes

[11:14:07.0000] <TabAtkins>
But they're currently not spec-compliant if they support more than the 2.1 properties explicitly listed in CSSOM.

[11:14:08.0000] <TabAtkins>
Which I'd like to fix, for obvious reasons.

[11:15:00.0000] <AryehGregor>
TabAtkins, well, by that logic nobody is spec-compliant if they support any feature that's not in some particular spec.

[11:15:01.0000] <arv>
OK. It is unclear to me what the problem is then (except of course that the JSC and V8 bindings in WebKit are broken)

[11:15:02.0000] <TabAtkins>
The problem is that the IDL in the CSSOM is broken.

[11:15:03.0000] <TabAtkins>
And I'm trying to fix it.

[11:15:04.0000] <AryehGregor>
How so?

[11:15:05.0000] <TabAtkins>
AryehGregor: It has only a small list of properties on the interface, missing all the CSS3 properties.

[11:16:00.0000] <arv>
TabAtkins: Why is adding a webidl attribute for every css property not the right way to do this?

[11:16:01.0000] <TabAtkins>
I assumed that the best way to fix this was to use IDL getter/setter, and define the list of named properties to be the CSS properties that the impl supports (suitably converted from dashes to camel-case).

[11:16:02.0000] <TabAtkins>
arv: Because the list will change continuously, and it's silly to change CSSOM every time we publish a new CSS spec.

[11:16:03.0000] <TabAtkins>
When this is a mechanical addition.

[11:16:04.0000] <AryehGregor>
You could also say that any other supported CSS properties have to be regular IDL attributes too.

[11:16:05.0000] <Ms2ger`>
TabAtkins, indeed

[11:17:00.0000] <Ms2ger`>
TabAtkins, so use partial interfaces :)

[11:17:01.0000] <TabAtkins>
Ms2ger`: Requiring every spec to apply diffs to the interface for a mechanical addition is almost as silly.

[11:17:02.0000] <AryehGregor>
I.e., if a spec defines foo-bar, say that it implies "partial interface CSSStyleDeclarationValue { attribute DOMString fooBar; };" with behavior as defined by CSSOM.

[11:17:03.0000] <AryehGregor>
You don't have to require the other specs to actually spell out the partial interfaces.

[11:17:04.0000] <TabAtkins>
AryehGregor: Hm, I guess that would work.

[11:17:05.0000] <Ms2ger`>
That works too

[11:18:00.0000] <AryehGregor>
FWIW, many other specs will realistically have to spell out behavior anyway.

[11:18:01.0000] <Ms2ger`>
But every spec needs to define CSSOM stuff anyway

[11:18:02.0000] <AryehGregor>
Because lots of properties have non-obvious serialization.

[11:18:03.0000] <TabAtkins>
We'll have to start defining serialization, but I have hope that for most cases we can do that mechanically too.

[11:18:04.0000] <TabAtkins>
Anne already attempted that.

[11:18:05.0000] <arv>
TabAtkins: it will change all the time. That is fine. Just like Ms2ger` said, use partial or supplemental interfaces. If you defined a new CSS property you have to add some idl

[11:18:06.0000] <AryehGregor>
You have to define an order for computed values, at least.

[11:19:00.0000] <AryehGregor>
Like, browsers disagree on whether the computed style of textShadow gets serialized with the color first or last.

[11:19:01.0000] <TabAtkins>
AryehGregor: Yeah, that was already handled by Anne's attempt - the order is whatever order appears in the grammar.

[11:19:02.0000] <AryehGregor>
Which means the order in the grammar is now retroactively significant when it previously wasn't.

[11:19:03.0000] <TabAtkins>
That's not implemented yet, but it's an example of how it coudl be handled generally, without every spec needing to define it.

[11:19:04.0000] <AryehGregor>
http://dev.w3.org/csswg/css3-text/#text-shadow

[11:19:05.0000] <AryehGregor>
The "Value" puts the lengths first, and the "Computed value" puts the color first.

[11:19:06.0000] <TabAtkins>
AryehGregor: Not necessarily.  We can always legacy-define things if necessary for compat.

[11:19:07.0000] <AryehGregor>
Yay for consistency.

[11:20:00.0000] <AryehGregor>
That's probably why browsers disagree.

[11:20:01.0000] <TabAtkins>
Heh, yeah.

[11:20:02.0000] <AryehGregor>
Anyway, PLEASE PLEASE PLEASE someone define precise algorithmic serialization rules for everything in CSSOM.

[11:20:03.0000] <AryehGregor>
It's a trainwreck.

[11:20:04.0000] <TabAtkins>
Yes.  Absolutely.

[11:20:05.0000] <AryehGregor>
Browsers do ridiculously different things.

[11:20:06.0000] <AryehGregor>
Like every one serializes colors differently.

[11:20:07.0000] <TabAtkins>
I'm not sure if that's part of Glen's current effort, but it'll be a very-soon thing.

[11:21:00.0000] <AryehGregor>
IE mostly uses rgba(), everyone else uses rgb() if alpha is 1.

[11:21:01.0000] <AryehGregor>
Gecko serializes transparent as "transparent" instead of "rgba(0, 0, 0, 0)".

[11:21:02.0000] <Ms2ger`>
And if it isn't, let's have AryehGregor edit another spec ;)

[11:21:03.0000] <TabAtkins>
AryehGregor: IE uses named colors if you specified them as such. ;_;

[11:21:04.0000] <AryehGregor>
Except maybe only if you specify it as "transparent".

[11:21:05.0000] <AryehGregor>
Right.

[11:21:06.0000] <TabAtkins>
Ms2ger`: Nah, I can probably handle that.

[11:21:07.0000] <AryehGregor>
Will you write tests too?  :)

[11:21:08.0000] <TabAtkins>
I'll be "done" with Flexbox and Images in the near future.

[11:21:09.0000] <Ms2ger`>
TabAtkins, in upper case? Or was that something else...

[11:21:10.0000] <TabAtkins>
AryehGregor: Yes!

[11:21:11.0000] <AryehGregor>
Exhaustive tests?

[11:22:00.0000] <TabAtkins>
Ms2ger`: Don't know - I think I lowercased everything defensively last time I wrote code to handle it.

[11:22:01.0000] <TabAtkins>
AryehGregor: Why not?

[11:22:02.0000] <AryehGregor>
Please do.

[11:22:03.0000] <AryehGregor>
/me is looking forward.

[11:22:04.0000] <Ms2ger`>
Because those barely exist for CSS

[11:22:05.0000] <AryehGregor>
Tests barely exist for CSS period.  Except some reftests for 2.1.

[11:22:06.0000] <TabAtkins>
Ms2ger`: Tests barely exist for CSS outside of 2.1. :/

[11:22:07.0000] <AryehGregor>
Well, quite a few reftests for 2.1.

[11:22:08.0000] <AryehGregor>
To be fair.

[11:22:09.0000] <Ms2ger`>
s/outside of 2.1//

[11:22:10.0000] <AryehGregor>
How good is test coverage for 2.1?

[11:22:11.0000] <Ms2ger`>
Mostly manual tests for CSS2.1

[11:22:12.0000] <TabAtkins>
Hey, a 30k testsuite isn't nothing.

[11:22:13.0000] <Ms2ger`>
Bad

[11:23:00.0000] <TabAtkins>
They are mostly manual, but still.

[11:23:01.0000] <AryehGregor>
Ugh, manual.  Good grief.

[11:23:02.0000] <TabAtkins>
Yeah.

[11:23:03.0000] <TabAtkins>
It takes about 10 hours to run it.

[11:23:04.0000] <AryehGregor>
They're not being converted to reftests?

[11:23:05.0000] <TabAtkins>
/me has done it several times.

[11:23:06.0000] <Ms2ger`>
3 days, last I heard

[11:23:07.0000] <TabAtkins>
Ms2ger`: 10 hours spread over 3 days. You probably last heard that from me. ^_^

[11:23:08.0000] <TabAtkins>
/me can't run tests continuously for 10 hours.

[11:23:09.0000] <Ms2ger`>
From MS, actually :)

[11:24:00.0000] <TabAtkins>
I know that when I was compiling the Chrome implementation report, it was 10 hours over 3 days.

[11:24:01.0000] <TabAtkins>
And it was horrible.

[11:24:02.0000] <Ms2ger`>
I wrote references for some MS tests a while ago, but I guess I should get them into the official test suite somehow...

[11:24:03.0000] <TabAtkins>
AryehGregor: No one putting in much time currently.  dbaron has a partially-completed effort that does most of them.

[11:25:00.0000] <AryehGregor>
Yay.

[11:25:01.0000] <Velmont>
Aaagh, too much backlog.

[11:26:00.0000] <TabAtkins>
I think it basically reftests all the tests against each other, so he could generate refs for tests that all render the same.

[11:26:01.0000] <Ms2ger`>
https://bitbucket.org/ms2ger/css-tests/overview if anybody cares

[11:26:02.0000] <Ms2ger`>
TabAtkins, I thought that was Opera

[11:26:03.0000] <TabAtkins>
Ms2ger`: Could be, I dunno.  Been a while.

[11:29:00.0000] <AryehGregor>
If I do say so myself, there are some pretty decent tests now for CSS Transforms.

[11:29:01.0000] <AryehGregor>
Although probably lots more reftests could be added.

[11:29:02.0000] <Ms2ger`>
AryehGregor, you don't have family members interested in spec work, do you? :)

[11:30:00.0000] <AryehGregor>
Probably not.  Sorry.

[11:30:01.0000] <Philip`>
What about your evil twin, Roger G. Heyra?

[11:30:02.0000] <AryehGregor>
I mean, my brother works in web development-related stuff and might be interested in a job, so if you really want, you could contact him.  I don't think he's actually very interested in spec work, though.

[11:32:00.0000] <Ms2ger`>
Just saying it would be nice to have another competent editor/tester around :)

[11:34:00.0000] <AryehGregor>
Okay, so when DOM4 talks a

[11:34:01.0000] <AryehGregor>
Okay, so when DOM4 talks about dispatching an event, that's synchronous, right?

[11:34:02.0000] <Ms2ger`>
Yes

[11:34:03.0000] <AryehGregor>
So if specs want it to be async, they have to say to queue a task to fire the event?

[11:34:04.0000] <Ms2ger`>
Yes

[11:34:05.0000] <AryehGregor>
Okay.

[11:34:06.0000] <AryehGregor>
Then I was just confused.

[11:34:07.0000] <AryehGregor>
So lots of events are really synchronous, I guess?

[11:35:00.0000] <Ms2ger`>
I wouldn't guess so

[11:35:01.0000] <AryehGregor>
Hmm, this doesn't reference DOM4: http://www.whatwg.org/specs/web-apps/current-work/multipage/webappapis.html#fire-a-simple-event

[11:36:00.0000] <AryehGregor>
Or it does, but they're not linked.

[11:36:01.0000] <Ms2ger`>
Ueah

[11:36:02.0000] <jgraham>
I got bored and started skimming, but if you didn't figure it out yet, attributes are on prototypes because it allows feature detection

[11:37:00.0000] <jgraham>
Not because it makes logical sense

[11:37:01.0000] <AryehGregor>
jgraham, usually you can get an instance pretty easily.

[11:37:02.0000] <jgraham>
(e.g. you can feature detect XHR stuff without having to construct an XHR object)

[11:37:03.0000] <Ms2ger`>
"In the contexts of events, the terms fire and dispatch are used as defined in the DOM Core specification

[11:37:04.0000] <AryehGregor>
Also, this way you can fiddle with the value on the prototype.

[11:38:00.0000] <Ms2ger`>
(2.1.4 Scripting)

[11:38:01.0000] <jgraham>
AryehGregor: XHR is an example where it is a huge pain

[11:38:02.0000] <AryehGregor>
Makes sense.

[11:38:03.0000] <Ms2ger`>
Heh

[11:38:04.0000] <Ms2ger`>
[DOMCORE]

[11:38:05.0000] <Ms2ger`>
Web DOM Core, A. van Kesteren. W3C.

[11:38:06.0000] <jgraham>
If it helps, I argued several times that it didn't make logical sense, but the feature detection argument seems more compelling

[11:39:00.0000] <AryehGregor>
It also allows polyfills, right?

[11:39:01.0000] <AryehGregor>
Plus, it matches what non-WebKit browsers do.

[11:39:02.0000] <jgraham>
AryehGregor: In other backscroll related news, opera are absoutely interested in the editing spec

[11:39:03.0000] <AryehGregor>
That's good.

[11:39:04.0000] <AryehGregor>
Everyone seems to be interested.

[11:39:05.0000] <AryehGregor>
Just no one seems to be implementing it.  :)

[11:39:06.0000] <jgraham>
(It's not what Opera does, right?)

[11:39:07.0000] <AryehGregor>
What isn't?

[11:39:08.0000] <jgraham>
attributes on prototypes

[11:39:09.0000] <AryehGregor>
Is it?

[11:39:10.0000] <AryehGregor>
I don't remember.

[11:40:00.0000] <AryehGregor>
It's what IE and Gecko do, generally.

[11:40:01.0000] <jgraham>
I thought we put them on the objects

[11:40:02.0000] <jgraham>
because I suggested that we copy Gecko at some point before there was a spec, but we decided not to

[11:41:00.0000] <jgraham>
AryehGregor: well we aren't rewriting our DocumentEdit right now, but it's not exactly a secret that our implementation doesn't have wonderful site-compat, so I imagine we will make good sometime

[11:43:00.0000] <AryehGregor>
jgraham, hmm -- now I think I remember.  I think "style" in document.head is true, but Object.hasOwnProperty(document.head, "style") is false, and nothing in the prototype chain has an own property with that name either.

[11:43:01.0000] <AryehGregor>
So . . . :)

[11:44:00.0000] <Ms2ger`>
The new Object.* APIs generally don't work too well with host objects, iirc

[11:45:00.0000] <AryehGregor>
Yeah, actually, that seems to be everyone's behavior . . . ?

[11:45:01.0000] <AryehGregor>
/me is confused by that

[11:45:02.0000] <AryehGregor>
Oh, am I calling it wrong?

[11:45:03.0000] <AryehGregor>
Yeah, hasOwnProperty() is on the prototype, not Object itself.

[11:45:04.0000] <AryehGregor>
Oops.

[11:46:00.0000] <AryehGregor>
http://software.hixie.ch/utilities/js/live-dom-viewer/?%3C!DOCTYPE%20html%3E%0A%3Cscript%3E%0Aw(%22style%22%20in%20document.head)%0Avar%20obj%20%3D%20document.head%3B%0Ado%20%7B%0Aw(obj.hasOwnProperty(%22style%22))%3B%0Aobj%20%3D%20Object.getPrototypeOf(obj)%3B%0A%7D%20while%20(obj)%3B%0A%3C%2Fscript%3E

[11:46:01.0000] <AryehGregor>
IE looks to be right here.

[11:46:02.0000] <AryehGregor>
Opera and WebKit just put it straight on the object.

[11:46:03.0000] <AryehGregor>
Gecko puts it on two different prototype objects in the chain.

[11:46:04.0000] <Hixie>
anyone have access to an AT other than VO?

[11:46:05.0000] <Ms2ger`>
Gecko is weird

[11:46:06.0000] <Hixie>
i'm trying to find if you can actually select system text labels or move the cursor through them

[11:47:00.0000] <Ms2ger`>
But it will be all fancy in a couple of months

[11:47:01.0000] <Hixie>
or if you can only select the entire label and have the UA read it and magnify it

[11:48:00.0000] <AryehGregor>
So if I want special attributes like .editAction and .editActionValue on my input events, I have to make a new interface that inherits from Event, right?

[11:49:00.0000] <annevk>
yes

[11:49:01.0000] <annevk>
InputEvent or some such

[11:49:02.0000] <annevk>
or reuse one of the existing interfaces

[11:49:03.0000] <annevk>
if one is suitable

[11:49:04.0000] <AryehGregor>
It's UIEvent in Gecko, seemingly.

[11:50:00.0000] <AryehGregor>
So input events on input/textarea would be Event, but contenteditable input events would be EditingInputEvent or something?

[11:50:01.0000] <AryehGregor>
But they'd have the same name?

[11:50:02.0000] <annevk>
if you want

[11:50:03.0000] <AryehGregor>
I'm not sure if that's the best way to do it.

[11:51:00.0000] <annevk>
you can upgrade the input on input/textarea

[11:51:01.0000] <annevk>
events are flexible, any string can be used with any interface

[11:52:00.0000] <annevk>
only requirement is that the interface inherits from Event

[11:52:01.0000] <AryehGregor>
We probably don't want the extra fields on input/textarea events.

[11:52:02.0000] <AryehGregor>
Okay, I'll do it that way, I guess.

[11:53:00.0000] <AryehGregor>
/me looks at the editing spec for the first time in forever

[11:55:00.0000] <AryehGregor>
The last time I changed anything editing-related (excluding selections) seems to be November 9.

[11:57:00.0000] <Hixie>
jeez, voiceover makes no sense to me

[11:57:01.0000] <Ms2ger`>
Close your eyes ;)

[11:58:00.0000] <annevk>
btw

[11:58:01.0000] <annevk>
on Facebook

[11:58:02.0000] <annevk>
http://a8.sphotos.ak.fbcdn.net/hphotos-ak-ash4/425243_10150563377962688_607047687_9171920_420903654_n.jpg

[11:58:03.0000] <AryehGregor>
annevk, so people can do "new HashChangeEvent('input')" and that creates a HashChangeEvent with type "input"?  That seems very confusing.

[11:58:04.0000] <annevk>
yeah they can

[11:58:05.0000] <Hixie>
ok my conclusion is "voice over doesn't let you move your cursor through text labels"

[11:58:06.0000] <Hixie>
in the OS

[11:58:07.0000] <AryehGregor>
Okay, if that's what we want.

[12:02:00.0000] <arv>
annevk: Why do we have DOMStringList again?

[12:03:00.0000] <Ms2ger`>
Blame DOM3

[12:03:01.0000] <annevk>
source code says

[12:03:02.0000] <annevk>
 HTMLPropertiesCollection.names

[12:03:03.0000] <annevk>
 DataTranser.types

[12:03:04.0000] <annevk>
 Clipboard.types

[12:03:05.0000] <annevk>
 Document.styleSheetSets

[12:03:06.0000] <annevk>
 IndexedDB APIs

[12:03:07.0000] <annevk>
I think that's all

[12:03:08.0000] <annevk>
but it's been a while since I surveyed

[12:03:09.0000] <arv>
I saw that we (WebKit) changed from Array of Strings to DOMStringList and it made things a lot worse since now it is no longer a plain old array

[12:03:10.0000] <annevk>
oh never do that if it can be avoided

[12:03:11.0000] <arv>
For dataTransfer.types

[12:04:00.0000] <AryehGregor>
rniwa, do we want to fire beforeInput/input on unsupported commands too?

[12:04:01.0000] <AryehGregor>
I guess we should fire beforeInput but not input, probably . . .

[12:04:02.0000] <rniwa>
AryehGregor: I think so

[12:04:03.0000] <AryehGregor>
So you can cancel the beforeInput event to avoid throwing NotSupportedErr.

[12:04:04.0000] <rniwa>
AryehGregor: well but if you're talking about user-definied ones, i'm not so sure

[12:05:00.0000] <AryehGregor>
I mean, if the author does document.execCommand("sakfdsajda"), does that fire beforeInput before it throws NotSupportedErr?

[12:05:01.0000] <annevk>
arv: anyway above is the whole list, if that can somehow be changed we can drop it, though I can add a big fat warning in the spec to not use it maybe

[12:05:02.0000] <annevk>
arv: so that new specs adopt DOMString[] instead

[12:06:00.0000] <arv>
annevk: Can WebIDL be specced in such a way that it maps DOMStringList to a JS Array?

[12:06:01.0000] <arv>
annevk: I'm fine with DOMString[] too

[12:06:02.0000] <annevk>
arv: heycam might know that

[12:06:03.0000] <Ms2ger`>
typedef DOMString[] DOMStringList;

[12:07:00.0000] <annevk>
arv: but array does not have contains()

[12:07:01.0000] <arv>
We should really minimize DOMStringList and other list like interfaces that adds nothing over Array

[12:07:02.0000] <arv>
We can add contains to Array.

[12:07:03.0000] <arv>
I'll make sure it is in ES

[12:07:04.0000] <arv>
I'll make sure it is in ES6

[12:08:00.0000] <Ms2ger`>
indexOf != -1

[12:09:00.0000] <arv>
or !~indexOf(i) ;-)

[12:10:00.0000] <Ms2ger`>
r-

[12:12:00.0000] <Philip`>
1+indexOf

[12:14:00.0000] <AryehGregor>
rniwa, wait, does beforeInput actually exist for inputs/textareas?

[12:14:01.0000] <AryehGregor>
It seems like it doesn't . . .

[12:17:00.0000] <annevk>
seeking review for

[12:17:01.0000] <annevk>
<p class=warning>Although <code>DOMStringList</code> has been used

[12:17:02.0000] <annevk>
historically, new specifications ought to avoid it and use arrays instead.

[12:17:03.0000] <annevk>
Ms2ger`: arv: ^^

[12:17:04.0000] <arv>
annevk: LGTM

[12:17:05.0000] <Ms2ger`>
wfm

[12:19:00.0000] <AryehGregor>
rniwa, if the beforeinput event handler removes the editing host from its parent, should the input event still fire?

[12:19:01.0000] <TabAtkins>
annevk: q+ c+

[12:19:02.0000] <AryehGregor>
I'm thinking yes.

[12:20:00.0000] <annevk>
http://dvcs.w3.org/hg/domcore/rev/d9074e2139ee

[12:20:01.0000] <TabAtkins>
Damn, getCSSCanvasContext doesn't seem to work for "experimental-webgl". ;_;  It just fails silently and returns undefined instead of a context.

[12:21:00.0000] <AryehGregor>
rniwa, also, what if multiple beforeInput events are fired and only some are canceled?

[12:21:01.0000] <AryehGregor>
Should canceling any one of them cancel the action?

[12:21:02.0000] <AryehGregor>
Or should it cause that editing host to not be affected?

[12:21:03.0000] <AryehGregor>
Probably the latter.

[12:22:00.0000] <ojan>
AryehGregor: currently beforeInput doesn't exist in any browser or spec

[12:22:01.0000] <AryehGregor>
Hmm.

[12:22:02.0000] <AryehGregor>
I guess I'll add it for contenteditable before anyone's specced it for anything else.  :)

[12:22:03.0000] <Ms2ger`>
TabAtkins, CSS?

[12:24:00.0000] <TabAtkins>
Ms2ger`: Proprietary webkit function introduced in 2008 to achieve similar results to -moz-element().

[12:25:00.0000] <TabAtkins>
You use it with -webkit-canvas() so you can use a canvas as an image.

[12:25:01.0000] <Ms2ger`>
Ah

[12:30:00.0000] <AryehGregor>
rniwa, do we want to fire events for miscellaneous commands?  copy/cut/paste/undo/redo/selectAll should have their own events.  I'm not sure if it's useful to fire events for styleWithCSS/useCSS.

[12:30:01.0000] <AryehGregor>
/me decides not to fire events for now

[12:32:00.0000] <AryehGregor>
Seems WebKit doesn't fire events.

[12:54:00.0000] <AryehGregor>
Hixie, what tool do you use to check IDL validity?

[12:54:01.0000] <AryehGregor>
You mentioned one.

[12:55:00.0000] <rniwa>
AryehGregor: hm... what do you mean by multiple beforeInput events are fired?

[12:55:01.0000] <AryehGregor>
rniwa, it's a corner case, so I don't think it's worth worrying about right now.

[12:55:02.0000] <rniwa>
AryehGregor: are they all initiated by the same user action? or are they fired on different editing host?

[12:55:03.0000] <AryehGregor>
But if you have two editing hosts and the selection spans both of them and you do something like bold, it will fire beforeInput at both per the spec I just wrote.

[12:55:04.0000] <rniwa>
AryehGregor: not firing for selectAll, styleWithCSS, etc... make sense.

[12:55:05.0000] <AryehGregor>
(which is a WIP here: http://aryeh.name/tmp/editing/editing.html#methods-to-query-and-execute-commands )

[12:55:06.0000] <rniwa>
AryehGregor: yeah...

[12:56:00.0000] <rniwa>
AryehGregor: I think canceling any of that should cancel the entire action

[12:56:01.0000] <rniwa>
AryehGregor: makes the behavior simple

[12:56:02.0000] <AryehGregor>
I think it should cancel it only for that editing host, probably.  But it's a corner case, so it doesn't matter much for now.

[12:57:00.0000] <rniwa>
AryehGregor: maybe but that'll make the implementation more complicated

[12:58:00.0000] <AryehGregor>
For now I just say it works unless all the events are canceled.

[12:58:01.0000] <rniwa>
AryehGregor: e.g. what if you had an event handler on the common ancestor of those two editing hosts

[12:58:02.0000] <rniwa>
AryehGregor: then we'll get two events and you have to cancel both

[12:58:03.0000] <AryehGregor>
That's confusing no matter what, I think.

[12:58:04.0000] <AryehGregor>
Unless we always fire the events at the document and not the editing host.

[12:58:05.0000] <AryehGregor>
Would that be better?

[12:58:06.0000] <AryehGregor>
Then it's just one event.

[12:58:07.0000] <AryehGregor>
Makes things simpler.

[12:58:08.0000] <AryehGregor>
But that doesn't match WebKit.

[12:58:09.0000] <AryehGregor>
I think ojan preferred firing at the editing host.

[12:58:10.0000] <rniwa>
AryehGregor: i've started to think that maybe we shouldn't allow multiple editing hosts to be modifed at once

[12:59:00.0000] <AryehGregor>
It's a lot more intuitive to put the input handler on the editing host itself.

[12:59:01.0000] <AryehGregor>
Why not?

[12:59:02.0000] <rniwa>
AryehGregor: it seems odd

[12:59:03.0000] <rniwa>
AryehGregor: in most cases, only way you'd have non-editable content in an editing host is to have a non-editable widget, etc...

[12:59:04.0000] <AryehGregor>
Having multiple editing hosts seems odd.  :)

[12:59:05.0000] <rniwa>
AryehGregor: right.

[12:59:06.0000] <rniwa>
AryehGregor: so why don't we simplify the implementation in that case

[13:00:00.0000] <rniwa>
AryehGregor: and only modify the editing host of selection start, for example,

[13:00:01.0000] <AryehGregor>
I think some UAs do that.

[13:00:02.0000] <AryehGregor>
It wouldn't simplify my spec at all, though.

[13:00:03.0000] <rniwa>
AryehGregor: modifying multiple editing host at once is like having multi-range selection

[13:00:04.0000] <AryehGregor>
So I don't see the value in it personally.

[13:00:05.0000] <AryehGregor>
Not really.

[13:00:06.0000] <rniwa>
AryehGregor: hm...

[13:00:07.0000] <AryehGregor>
My spec currently only cares if a node is editable or not.

[13:00:08.0000] <rniwa>
AryehGregor: I'll think about it more but I think we should try to keep it simple as possible

[13:00:09.0000] <AryehGregor>
It doesn't care what editing host it's in.

[13:01:00.0000] <AryehGregor>
So it's more complicated to restrict effects to only one editing host.

[13:01:01.0000] <AryehGregor>
Not simpler.

[13:01:02.0000] <rniwa>
AryehGregor: possible.

[13:01:03.0000] <rniwa>
AryehGregor: I need to read code and think harder

[13:01:04.0000] <AryehGregor>
We might want to only fire the event at the first editing host, though.

[13:01:05.0000] <AryehGregor>
Or something like that.

[13:01:06.0000] <AryehGregor>
I'm not sure.

[13:01:07.0000] <rniwa>
AryehGregor: but you're right thta it probably doesn't matter in practice

[13:01:08.0000] <rniwa>
since virtually nobody does something like that

[13:02:00.0000] <rniwa>
especially because selection shouldn't be able to cross editing boundary by default

[13:02:01.0000] <AryehGregor>
Or fire it at the first editing host, then only fire at the second if the first wasn't handled.

[13:02:02.0000] <AryehGregor>
Or I dunno.

[13:02:03.0000] <AryehGregor>
But it's a corner case.

[13:02:04.0000] <rniwa>
AryehGregor: come to think of... why can we have multiple editing hosts at once?

[13:02:05.0000] <AryehGregor>
Because maybe there are two unrelated widgets on the page that both want to be editable.

[13:02:06.0000] <rniwa>
AryehGregor: I swear webkit doesn't allow you to put selection ends in different editing hosts

[13:03:00.0000] <rniwa>
AryehGregor: yeah but then you can't place selection ends at both of those ends

[13:03:01.0000] <AryehGregor>
The user maybe can't.

[13:03:02.0000] <AryehGregor>
/me tests

[13:03:03.0000] <rniwa>
AryehGregor: you can only put selection in either

[13:03:04.0000] <AryehGregor>
Scripts can.

[13:03:05.0000] <rniwa>
AryehGregor: don't think so

[13:03:06.0000] <rniwa>
AryehGregor: we'll normalize to avoid that

[13:04:00.0000] <rniwa>
AryehGregor: add range like that

[13:04:01.0000] <AryehGregor>
It doesn't seem possible for the user to create such a selection, no.

[13:04:02.0000] <rniwa>
AryehGregor: and you should get a normalized selection

[13:04:03.0000] <AryehGregor>
In WebKit.

[13:04:04.0000] <rniwa>
AryehGregor: right.

[13:04:05.0000] <rniwa>
AryehGregor: I'd argue that it's the desirable behavior

[13:04:06.0000] <rniwa>
AryehGregor: I don't think other browsers let create selection that crosses multiple editing boundaries either

[13:04:07.0000] <rniwa>
AryehGregor: users* create

[13:05:00.0000] <AryehGregor>
Yeah, WebKit seems to not allow such selections.

[13:05:01.0000] <rniwa>
AryehGregor: I suspect Gecko will let scripts do that

[13:05:02.0000] <AryehGregor>
I think in Gecko it's possible even for users.

[13:05:03.0000] <AryehGregor>
At least if they're inline.

[13:05:04.0000] <rniwa>
but that's because they don't normalize programmatically set selection

[13:05:05.0000] <AryehGregor>
Maybe not for blocks.

[13:05:06.0000] <rniwa>
AryehGregor: really? that's surprising

[13:05:07.0000] <AryehGregor>
It's probably a bug.

[13:05:08.0000] <rniwa>
AryehGregor: okay

[13:05:09.0000] <rniwa>
AryehGregor: maybe you should check with ehsan

[13:05:10.0000] <AryehGregor>
No, maybe not.

[13:05:11.0000] <AryehGregor>
Scripts can create such selections, but it seems users can't.

[13:06:00.0000] <AryehGregor>
Oh, wait.

[13:06:01.0000] <AryehGregor>
I can get a selection in both Gecko and WebKit that contains multiple editing hosts.

[13:06:02.0000] <AryehGregor>
Select some non-editable content before the first, drag to non-editable content after the second.

[13:07:00.0000] <AryehGregor>
In Gecko, if you start to drag in non-editable content, it looks like you can drag to the middle of an editing host too.

[13:07:01.0000] <AryehGregor>
But then hitting keys does nothing.

[13:07:02.0000] <AryehGregor>
Okay, so this is complicated.

[13:07:03.0000] <AryehGregor>
Feh.

[13:08:00.0000] <AryehGregor>
I'll spec it as firing an event at only the first editing host that intersects the selection.

[13:08:01.0000] <rniwa>
AryehGregor: that's probably a bug

[13:08:02.0000] <AryehGregor>
Hmm, what about nested editing hosts?

[13:08:03.0000] <AryehGregor>
Yeah, bugs in browser editing support.  Big surprise.  :)

[13:08:04.0000] <rniwa>
AryehGregor: wait

[13:08:05.0000] <rniwa>
AryehGregor: but if ends at at some non-editable locartions

[13:09:00.0000] <rniwa>
AryehGregor: I don't think we'll modify the contents

[13:09:01.0000] <AryehGregor>
Right.

[13:09:02.0000] <rniwa>
AryehGregor: so we shouldn't fire anything

[13:09:03.0000] <AryehGregor>
The spec doesn't currently work that way, I don't think.

[13:09:04.0000] <AryehGregor>
That could be changed.

[13:09:05.0000] <rniwa>
AryehGregor: oh, the spec should definitely change then.

[13:09:06.0000] <AryehGregor>
I mean, I know it doesn't work that way.

[13:09:07.0000] <AryehGregor>
Can do.

[13:09:08.0000] <rniwa>
AryehGregor: I don't think we want to modify contents when the selection is on non-editable region

[13:10:00.0000] <rniwa>
AryehGregor: even when it happens to include some editable region

[13:10:01.0000] <rniwa>
AryehGregor: if webkit ever exhibits such a behavior, then it's a bug

[13:10:02.0000] <rniwa>
not intentional

[13:10:03.0000] <AryehGregor>
That's reasonable.

[13:10:04.0000] <AryehGregor>
I think browsers vary somewhat, but at least some do behave that way.

[13:10:05.0000] <rniwa>
AryehGregor: yeah

[13:10:06.0000] <rniwa>
AryehGregor: I think most of us get some corner cases wrong

[13:10:07.0000] <rniwa>
just like any other thing we implement :(

[13:10:08.0000] <rniwa>
but I think none of us really intended to support editing multiple hosts at once

[13:11:00.0000] <AryehGregor>
I can't think of use-cases offhand.

[13:13:00.0000] <jgraham>
AryehGregor: I think if yousearch for IDL checker or something, that's the tool that Hixie uses

[13:14:00.0000] <jgraham>
http://www.w3.org/2009/07/webidl-check

[13:14:01.0000] <Ms2ger`>
Is that the one in Haskell?

[13:15:00.0000] <rniwa>
AryehGregor: neithe can I

[13:15:01.0000] <jgraham>
Hard to tell, the code doesn't seem to exist

[13:16:00.0000] <AryehGregor>
rniwa, what if non-editable content is nested inside editable content and the selection starts or ends in the nested non-editable content?

[13:18:00.0000] <jgraham>
Ah, dom to the rescue

[13:18:01.0000] <jgraham>
Seems to be witten in c

[13:18:02.0000] <rniwa>
AryehGregor: then we shouldn't do anything either.

[13:19:00.0000] <AryehGregor>
Hmm.

[13:19:01.0000] <AryehGregor>
Okay.

[13:19:02.0000] <rniwa>
AryehGregor: so no events should be fired

[13:19:03.0000] <AryehGregor>
I'll say the command isn't enabled in that case.

[13:19:04.0000] <jgraham>
http://hackage.haskell.org/package/webidl seems to be the haskell one

[13:19:05.0000] <AryehGregor>
And return false from execCommand() before firing events if the command isn't supported or enabled.

[13:19:06.0000] <AryehGregor>
For now.

[13:20:00.0000] <AryehGregor>
So a command that's expected to possibly change the selected content should be enabled if the active range is not null, and its start and end node are both editable or editing hosts, and there is some editing host that's an inclusive ancestor of the start and end nodes.

[13:25:00.0000] <ojan>
AryehGregor, rniwa: what was wrong with my proposal to fire it on the root editing host?

[13:25:01.0000] <rniwa>
ojan: that's okay

[13:25:02.0000] <rniwa>
ojan: we were talking about the edge case

[13:25:03.0000] <rniwa>
ojan: where we have multiple editing hosts to work with

[13:25:04.0000] <AryehGregor>
Do we want the root editing host, or the deepst?

[13:25:05.0000] <AryehGregor>
deepest?

[13:25:06.0000] <AryehGregor>
Either one works.

[13:25:07.0000] <rniwa>
ojan: but turned out that wasn't possible

[13:25:08.0000] <AryehGregor>
Should these events bubble?

[13:25:09.0000] <rniwa>
ojan: i.e. if you select multiple editing hosts programatically

[13:25:10.0000] <rniwa>
ojan: but we don't allow that

[13:26:00.0000] <rniwa>
ojan: root makes sense

[13:26:01.0000] <AryehGregor>
If they bubble, we want to fire it at the deepest, not the root.

[13:26:02.0000] <rniwa>
AryehGregor: ^

[13:26:03.0000] <AryehGregor>
That way it will bubble to the root anyway.

[13:26:04.0000] <rniwa>
AryehGregor: wait... whatever the editing host is defined to be I guess

[13:26:05.0000] <ojan>
AryehGregor: that makes sense to me...

[13:26:06.0000] <AryehGregor>
Like: <div contenteditable>foo<span contenteditable>[bar]</span>baz</div>

[13:26:07.0000] <AryehGregor>
Fire it at the span and let it bubble to the div.

[13:26:08.0000] <rniwa>
AryehGregor: don't think that makese sense

[13:27:00.0000] <AryehGregor>
Why not?

[13:27:01.0000] <rniwa>
AryehGregor: because span isn't an editing host in that case

[13:27:02.0000] <ojan>
AryehGregor: i think the way you should figure out the deepest editing host though is to find the deepest editing host that contains the entire selection

[13:27:03.0000] <rniwa>
AryehGregor: since the entire div is editable

[13:27:04.0000] <AryehGregor>
It is by my definition.

[13:27:05.0000] <AryehGregor>
ojan, right.

[13:27:06.0000] <AryehGregor>
That's what I'm doing.

[13:27:07.0000] <rniwa>
<div contenteditable>foo<span contenteditable="false"><span contenteditable>[bar]</span>baz</span></div>

[13:27:08.0000] <AryehGregor>
rniwa, well, you can add an extra <span contenteditable=false> if you want, but in my definitions the span is an editing host too.

[13:27:09.0000] <ojan>
AryehGregor: so there's no issue of dealing with selections that cross editing hosts

[13:27:10.0000] <rniwa>
AryehGregor: this is a better example

[13:27:11.0000] <rniwa>
AryehGregor: in this case, you're right that we should be firing the event at span

[13:27:12.0000] <rniwa>
AryehGregor: because that's the enclosing editing host of the selection

[13:28:00.0000] <AryehGregor>
In the other case I'd also say fire at the span, but it makes no big difference.

[13:28:01.0000] <AryehGregor>
Currently in my spec, <div contenteditable><span contenteditable>foo</span></div> isn't the same as <div contenteditable><span>foo</span></div>.

[13:28:02.0000] <AryehGregor>
Although it's mostly the same.

[13:28:03.0000] <ojan>
<div contentEditable><div id=this-is-the-right-editing-host contentEditable><span contentEditable>ba[r</span><span contentEditable>baz</span></div></div>

[13:29:00.0000] <AryehGregor>
Where's the end of the selection?

[13:29:01.0000] <AryehGregor>
In "baz"?

[13:29:02.0000] <AryehGregor>
If so, right, I agree.

[13:29:03.0000] <ojan>
woops...left it out :)

[13:29:04.0000] <ojan>
yeah

[13:29:05.0000] <ojan>
AryehGregor: ok...that makes sense to me then.

[13:29:06.0000] <AryehGregor>
"Let affected editing host be the editing host that is an inclusive ancestor of the active range's start node and end node, and is not the ancestor of any editing host that is an inclusive ancestor of the active range's start node and end node."

[13:30:00.0000] <ojan>
AryehGregor: yeah, i think that works

[13:30:01.0000] <ojan>
AryehGregor: a little hard to parse that english...but i think it's correct

[13:30:02.0000] <ojan>
and unambiguous

[13:30:03.0000] <AryehGregor>
/me considered "not the ancestor of any other such editing host", but decided to be more explicit

[13:31:00.0000] <AryehGregor>
Okay, here's my WIP now: http://aryeh.name/tmp/editing/editing.html#methods-to-query-and-execute-commands

[13:31:01.0000] <AryehGregor>
Subject to change without notice for now.

[13:32:00.0000] <AryehGregor>
The interesting part is the execCommand() definition and the stuff before it, you can stop reading when you get to queryCommandEnabled().

[13:34:00.0000] <ojan>
AryehGregor: that all looks good to me...except...

[13:34:01.0000] <ojan>
AryehGregor: I think the spec needs to handle the case of JS modifying the DOM during the beforeInput event

[13:35:00.0000] <ojan>
AryehGregor: e.g the affected editing host can change

[13:35:01.0000] <AryehGregor>
Hmm, right.

[13:36:00.0000] <AryehGregor>
Maybe we need to bail out in that case.

[13:36:01.0000] <AryehGregor>
Like if the beforeInput handler does getSelection().removeAllRanges(), that will break everything.

[13:36:02.0000] <ojan>
AryehGregor: right, it depends

[13:36:03.0000] <AryehGregor>
Perhaps just add another check for enabled after the beforeInput event.

[13:36:04.0000] <ojan>
AryehGregor: so...as long as step 6 doesn't make any assumptions

[13:36:05.0000] <ojan>
AryehGregor: and step 7 recomputed the affected editing host, i think we're fine

[13:37:00.0000] <AryehGregor>
If there's still an affected editing host but it changes due to the beforeInput handler, do we want to fire the input event at the old one or the new one?

[13:37:01.0000] <ojan>
AryehGregor: my intuition is the new one

[13:37:02.0000] <AryehGregor>
I'm worried about step 7 recomputing the affected editing host, because there might be a bug in the action that makes the selection disappear or something.

[13:37:03.0000] <AryehGregor>
I'd prefer to be robust against that.

[13:37:04.0000] <ojan>
i see

[13:38:00.0000] <ojan>
AryehGregor: you could recompute it as step 5b

[13:39:00.0000] <ojan>
AryehGregor: sorry...step 5.4

[13:39:01.0000] <ojan>
AryehGregor: i think that would address all the issues as long as each command action is robust against different DOM states, which is needs to be anyways

[13:46:00.0000] <AryehGregor>
ojan, I was thinking I'd repeat the the "If command is not enabled" check as 5.4, then recompute affected editing host as 5.5, then use that.

[13:46:01.0000] <AryehGregor>
So if beforeinput changes the affected editing host, that's fine, and the input event will be fired there.

[13:47:00.0000] <AryehGregor>
But if it makes the command no longer enabled, the command won't execute.

[13:47:01.0000] <AryehGregor>
/me edits

[13:47:02.0000] <AryehGregor>
/me has to go in a few minutes

[13:52:00.0000] <rniwa>
AryehGregor: I think your spec should change to treat <div contenteditable><span contenteditable>foo</span></div> identically to <div contenteditable><span>foo</span></div>

[13:52:01.0000] <AryehGregor>
Okay, refresh and tell me if you like it.

[13:52:02.0000] <rniwa>
AryehGregor: that's how browsers work as far as I know.

[13:53:00.0000] <AryehGregor>
rniwa, browsers behave completely randomly whenever you nest anything with contenteditable other than inherit.

[13:53:01.0000] <AryehGregor>
I had some use-case for treating it differently.

[13:53:02.0000] <rniwa>
AryehGregor: sure we have lots of bugs

[13:53:03.0000] <AryehGregor>
I mean, there's no use-case for treating it the same, because you could always just remove the contenteditable attribute.

[13:53:04.0000] <rniwa>
AryehGregor: but I don't think we want to re-define the editing host that way

[13:53:05.0000] <rniwa>
AryehGregor: but that's not how UAs behave today though

[13:54:00.0000] <AryehGregor>
Most of this isn't how they behave today.  :)

[13:54:01.0000] <rniwa>
AryehGregor: contenteditable attribute is ignored if it's already in the editable region

[13:54:02.0000] <rniwa>
AryehGregor: I mean... we can't implement this.

[13:54:03.0000] <AryehGregor>
Anything with contenteditable=true will not have its attributes changed or be removed from its parent.

[13:54:04.0000] <rniwa>
AryehGregor: there's no sane way for webkit to distinguish those two cases

[13:54:05.0000] <AryehGregor>
Because really you just use a CSS property, right?

[13:54:06.0000] <rniwa>
AryehGregor: right.

[13:54:07.0000] <AryehGregor>
And the computed value isn't going to be different.

[13:54:08.0000] <AryehGregor>
Fair enough.

[13:54:09.0000] <rniwa>
AryehGregor: so I don't think we can do this.

[13:54:10.0000] <AryehGregor>
Feel free to file a bug.

[13:55:00.0000] <AryehGregor>
Although, IIRC there are other problems that you using a CSS property causes, right?  Like you can't handle :read-write properly?

[13:55:01.0000] <rniwa>
AryehGregor: right. but we can't get rid of the CSS property at the moment.

[13:55:02.0000] <rniwa>
AryehGregor: we might be able to do eventually but not now

[13:55:03.0000] <AryehGregor>
The behavior you suggest is probably more logical anyway, though, because you'd expect contenteditable=inherit to work the same as specifying contenteditable=true or false depending on what the parent is.

[13:55:04.0000] <AryehGregor>
Well, you can't implement the spec right now in general, only eventually.  :)

[13:56:00.0000] <rniwa>
AryehGregor: right.

[13:56:01.0000] <AryehGregor>
If you file a bug, I'll look at it later.  It's a corner case anyway.

[13:56:02.0000] <rniwa>
AryehGregor: okay.

[13:56:03.0000] <rniwa>
AryehGregor: btw, you should rename "issue" to "bug"

[13:56:04.0000] <rniwa>
AryehGregor: or put both

[13:56:05.0000] <AryehGregor>
Yeah, maybe.

[13:57:00.0000] <AryehGregor>
File a bug on that too.  :)

[13:57:01.0000] <rniwa>
I was looking for "bug" for a while :(

[13:57:02.0000] <AryehGregor>
I have to go now.

[13:57:03.0000] <AryehGregor>
:(

[13:57:04.0000] <rniwa>
AryehGregor: k, ttyl

[14:00:00.0000] <rniwa>
AryehGregor: filed https://www.w3.org/Bugs/Public/show_bug.cgi?id=16095

[14:00:01.0000] <AryehGregor>
Thanks.

[14:03:00.0000] <AryehGregor>
https://www.w3.org/Bugs/Public/show_bug.cgi?id=13118#c26

[14:03:01.0000] <AryehGregor>
And I'm off.

[14:04:00.0000] <heycam>
arv, I don't think DOMStringList can really be a plain JS array due to the lack of methods that annevk mentions, and also because then the object that has the DOMStringList property cannot "watch" it for changes

[14:05:00.0000] <heycam>
arv, the spec that defines DOMStringList can use the [ArrayClass] extended attribute on the interface to make it inherit from Array.prototype, so that you can easily use Array methods though

[14:05:01.0000] <heycam>
TabAtkins, did you get all your Web IDL questions earlier answered? (saw a bunch of highlights in my scrollback)

[14:06:00.0000] <TabAtkins>
heycam: I ended with a question sent to public-script-coord.  Answer there, please?

[14:06:01.0000] <heycam>
TabAtkins, ok

[14:10:00.0000] <Hixie>
AryehGregor: what jgraham said

[14:25:00.0000] <annevk>
fyi: I gave glenn write access to https://bitbucket.org/ms2ger/specification-data

[15:30:00.0000] <rniwa>
annevk5: hi

[15:31:00.0000] <rniwa>
annevk5: what do you feel about disallowing mutation events inside the shadow DOM?

[15:31:01.0000] <rniwa>
annevk: ^

[15:32:00.0000] <smaug____>
sounds ok to me

[15:32:01.0000] <rniwa>
smaug____: great.

[15:32:02.0000] <smaug____>
(which ever shadow dom spec ends up being implemented)

[15:33:00.0000] <rniwa>
smaug____: well we're talking about thi on https://bugs.webkit.org/show_bug.cgi?id=79278

[15:33:01.0000] <rniwa>
smaug____: I think dglazkov likes the idea

[15:33:02.0000] <rniwa>
smaug____: so as long as people from other vendors want them to fire there, we should spec it so that only new mutation observer API can be used inside the shadow DOM

[15:34:00.0000] <smaug____>
sounds ok. Ofc "there" is still not defined :)

[15:34:01.0000] <TabAtkins>
rniwa: Mutation events carry too much unwipeable info about the shadow, so yeah, they shouldn't escape the shadow.

[15:34:02.0000] <TabAtkins>
And shutting down mutation listeners entirely inside of shadow sounds totally fine.

[15:35:00.0000] <rniwa>
TabAtkins: great.

[15:35:01.0000] <smaug____>
I guess the idea is to not have mutation events at all in shadow dom

[15:35:02.0000] <rniwa>
TabAtkins: we're going to do the both

[15:35:03.0000] <smaug____>
which is what I prefer

[15:35:04.0000] <TabAtkins>
(I don't think the outer page should ever want to know about mutations inside of shadows anyway.)

[15:35:05.0000] <rniwa>
TabAtkins: so there won't be any mutation event in the shadow DOM

[15:35:06.0000] <rniwa>
mutation events need to die anyway

[15:35:07.0000] <TabAtkins>
smaug____: Within a shadow, mutation observers can be useful I guess.

[15:36:00.0000] <smaug____>
mutationobservers sure, but they are limited to shadow tree

[15:36:01.0000] <TabAtkins>
Yes, okay, so we're agreeing.  ^_^

[15:36:02.0000] <smaug____>
yes :)

[15:36:03.0000] <TabAtkins>
Also: should I eat another whole box of Thin Mints? (yes)/(hell yes)

[15:36:04.0000] <smaug____>
whatever the shadow dom will be, mutation events shouldn't fire there

[15:37:00.0000] <rniwa>
smaug____: is your email address at welho.com?

[15:37:01.0000] <smaug____>
uh, no, please

[15:37:02.0000] <smaug____>
it is one of my email addresses

[15:37:03.0000] <rniwa>
smaug____: okay, which one should I use to cc you on public-webapps?

[15:37:04.0000] <smaug____>
I prefer Olli⊙pf

[15:37:05.0000] <rniwa>
smaug____: okay, will do.

[15:37:06.0000] <TabAtkins>
I keep forgetting that you're Olli, smaug____ .

[15:38:00.0000] <TabAtkins>
Damn lack of Real Names.

[15:38:01.0000] <smaug____>
TabAtkins: you've been here too few years :)

[15:38:02.0000] <TabAtkins>
It's taken me a while to remember that Zewt is Glen.

[15:38:03.0000] <rniwa>
smaug____: okay, I sent an email out to public-webapps

[15:38:04.0000] <rniwa>
smaug____: but it seems like we're already on an agreement here :D

[15:38:05.0000] <rniwa>
smaug____: disallowing mutation events in shadow DOM may even encourage people to start using new mutation observer API

[15:38:06.0000] <rniwa>
smaug____: which is a win-win for us

[15:39:00.0000] <smaug____>
/me should finalize his mutationobserver patch next week

[15:39:01.0000] <smaug____>
and sorry, I've been really busy with other stuff

[15:42:00.0000] <smaug____>
rniwa: do you happen to have fuzz tester for mutation observer?

[15:43:00.0000] <TabAtkins>
We're not fuzzing it yet (I think), but apparently it's quite easy to add.

[15:44:00.0000] <smaug____>
not fuzzing yet? expect some instability then :)

[15:44:01.0000] <TabAtkins>
Oh, definitely.

[15:44:02.0000] <TabAtkins>
We should be fuzzing, like, 5000% more.

[15:44:03.0000] <TabAtkins>
Fuzz ALL the things.

[15:44:04.0000] <smaug____>
yeah

[15:45:00.0000] <smaug____>
writing good fuzzers is not easy

[15:47:00.0000] <TabAtkins>
We apparently have a pretty nice fuzzing infrastructure that our security people put together.

[15:47:01.0000] <TabAtkins>
You feed it a bunch of wide-sprectrum representative tests, it mutates them into fuzz tests.

[15:55:00.0000] <rniwa>
smaug____: we have been.

[15:55:01.0000] <rniwa>
smaug____: aklein will probably know.

[15:56:00.0000] <smaug____>
ok, I'll send some email

[15:56:01.0000] <rniwa>
smaug____: we have an automated fuzz testing infrastructure that automatically mutates existing tests and generate crazy js tests

[15:56:02.0000] <rniwa>
smaug____: don't think we save results though

[15:56:03.0000] <rniwa>
so not sure if we can share those with you guys

[15:56:04.0000] <smaug____>
ah, ok

[15:57:00.0000] <rniwa>
smaug____: but it's probably worth shooting an email anyway

[15:57:01.0000] <rniwa>
smaug____: we might come up with some way to do it

[15:58:00.0000] <rniwa>
dglazkov: yt?


2012-02-24
[16:00:00.0000] <rniwa>
arv: as far as I read the spec, the spec doesn't provide anyway to get selection inside the shadow DOM ;(

[16:00:01.0000] <rniwa>
:'(

[16:00:02.0000] <rniwa>
arv: meaning that we can't implement any editing widgets inside the shadow DOM

[16:00:03.0000] <smaug____>
selection inside shadow dom is tricky

[16:01:00.0000] <smaug____>
what if user starts outside, then tries to continue selection to inside shadow dom

[16:01:01.0000] <rniwa>
smaug____: it shoudln't allow it

[16:01:02.0000] <smaug____>
gecko just doesn't allow that

[16:01:03.0000] <rniwa>
smaug____: I don't think selection that crosses shadow boundary makes much sense

[16:01:04.0000] <rniwa>
smaug____: it should act as if there's editing boundary

[16:02:00.0000] <smaug____>
well, it depends

[16:02:01.0000] <smaug____>
if UI looks like it should be selectable, it is quite strange for user to not be able to select it

[16:04:00.0000] <smaug____>
IIRC mozilla bugzilla hass bugs open because of this

[16:04:01.0000] <smaug____>
s/hass/has/

[16:04:02.0000] <smaug____>
(the bugs might become wontfix)

[16:59:00.0000] <gsnedders>
TabAtkins: The general reason to put stuff on the prototype is because then you only have a single function object, not n function objects for n objects

[17:00:00.0000] <gsnedders>
Esp. when JIT'd code is linked to function objects, that's important. A bit less so in the built-in function object case.

[17:02:00.0000] <gsnedders>
rniwa, if you read logs, too

[17:02:01.0000] <gsnedders>
and AryehGregor ^^

[17:06:00.0000] <TabAtkins>
gsnedders: Yeah, I agree that's the reason normally.

[17:08:00.0000] <gsnedders>
In this case it's mainly making it easier to override the behaviour, by replacing a single function, and not having needless function objects eating memroy

[17:09:00.0000] <TabAtkins>
In that case I'm back to wondering why the getters/setters establish own properties.

[17:09:01.0000] <gsnedders>
This is in WebIDL?

[17:09:02.0000] <gsnedders>
Or what?

[17:09:03.0000] <gsnedders>
Because there's no reason for that to be.

[17:10:00.0000] <TabAtkins>
Yes.

[17:10:01.0000] <TabAtkins>
The WebIDL getter/setter extended operations establish own properties.

[17:10:02.0000] <gsnedders>
(__proto__ will be an accessor property (i.e., a property with a getter and/or setter) on Object.prototype in ES6, probably)

[17:10:03.0000] <gsnedders>
(For example)

[17:56:00.0000] <erlehmann>
helo again

[22:24:00.0000] <rniwa>
AryehGregor: are you there?

[00:39:00.0000] <RobbertAtWork>
multiple selections can be used to programmatically deselect readonly parts of the users selection

[00:39:01.0000] <RobbertAtWork>
cc: AryehGregor

[00:47:00.0000] <hsivonen>
http://botornot.net/project/test correctly identifies @whatwg as a bot with human tendencies

[00:51:00.0000] <annevk>
should do some replies then!

[00:57:00.0000] <zcorpan>
annevk: automated replies?

[01:47:00.0000] <annevk>
well I do the retweets manually already

[01:48:00.0000] <annevk>
but I think the policy is to do replies from personal accounts

[01:52:00.0000] <annevk>
ok, so now in Gecko cloneNode defaults to true

[01:56:00.0000] <annevk>
I filed https://www.w3.org/Bugs/Public/show_bug.cgi?id=16102 on removing DOMStringList from Microdata

[01:57:00.0000] <bga>
http://blogs.msdn.com/b/ie/archive/2012/02/17/sub-pixel-rendering-and-the-css-object-model.aspx

[01:58:00.0000] <annevk>
is Clipboard.types no longer defined anywhere?

[01:58:01.0000] <annevk>
I guess that is now DataTransfer.types?

[01:58:02.0000] <annevk>
because if we also change Document.styleSheetSets and Indexed DB, DOMStringList can be removed from the platform

[02:05:00.0000] <annevk>
oh, I think glenn put cssom-view in public domain

[02:05:01.0000] <annevk>
sweet

[02:05:02.0000] <annevk>
http://dvcs.w3.org/hg/cssom-view/rev/d977913408be

[02:06:00.0000] <annevk>
anyone here still subscribed to www-style who can lobby for removing DOMStringList usage from CSSOM?

[02:06:01.0000] <annevk>
Document.styleSheetSets uses it

[02:06:02.0000] <annevk>
should just become an array

[02:07:00.0000] <zcorpan>
annevk: don't need to be subscribed to send email to www-style

[02:08:00.0000] <annevk>
it's easier for potential follow up though

[02:08:01.0000] <zcorpan>
just send from noreply⊙an and set reply-to: www-style⊙wo :-)

[02:39:00.0000] <annevk>
zcorpan: meh, ok done

[02:39:01.0000] <annevk>
zcorpan: though not like that

[02:41:00.0000] <Ms2ger>
Didn't we just get pywebsocket installed on w3c-test?

[02:42:00.0000] <jgraham>
Yes, but there are still open questions about that

[02:42:01.0000] <jgraham>
e.g. is it actully safe to run when it clearly says in the source that itsn't

[02:42:02.0000] <jgraham>
*it isn't

[02:44:00.0000] <Ms2ger>
Since you know about this, reply to Kris please? :)

[02:45:00.0000] <jgraham>
and say what?

[02:45:01.0000] <annevk>
is there some kind of holiday going on btw?

[02:45:02.0000] <annevk>
or are people just getting tired of twitter?

[02:45:03.0000] <jgraham>
/me hopes for that latter, expects the former

[03:27:00.0000] <Taggnostr>
if I want to report bugs about the HTML5 standard, should I select "HTML WG" as "product"?

[03:40:00.0000] <Ms2ger>
Sure

[03:41:00.0000] <Taggnostr>
I hope I got everything right: https://www.w3.org/Bugs/Public/show_bug.cgi?id=16106

[03:41:01.0000] <Taggnostr>
/me moves on with the next bug

[03:42:00.0000] <Ms2ger>
lgtm

[03:43:00.0000] <jgraham>
/me doesn't like lgtm because it it too close to lmgt

[03:43:01.0000] <jgraham>
As in "Let Me Google That for you"

[03:43:02.0000] <Ms2ger>
Lockeed Martin Global Telecommunications?

[03:44:00.0000] <Taggnostr>
there's also lgbt, but that's another thing

[03:52:00.0000] <Taggnostr>
is "Validator (Nu)" the right product for bugs about http://livedom.validator.nu/ ?

[03:53:00.0000] <Ms2ger>
I think so

[03:53:01.0000] <Taggnostr>
ok, thanks again

[04:00:00.0000] <Taggnostr>
I think I'll wait a reply to #16106 before opening the next one

[04:00:01.0000] <Ms2ger>
Heh

[04:00:02.0000] <Ms2ger>
Don't expect one before July or so

[04:01:00.0000] <Taggnostr>
is Hixie on holiday?

[04:03:00.0000] <Ms2ger>
Just lots of outstanding feedback that's before you in the queue: http://www.whatwg.org/issues/data.html

[04:10:00.0000] <Taggnostr>
I think most of the ranges I listed in #16106 should return U+FFFD instead of returning the corresponding character

[04:30:00.0000] <Ms2ger>
Woo, -moz-box-shadow and -moz-border-radius-* are dead

[04:32:00.0000] <Philip`>
Taggnostr: http://bugzilla.validator.nu/ is the right place for validator.nu bugs, I believe

[04:33:00.0000] <zcorpan>
Ms2ger: yay!

[04:33:01.0000] <Ms2ger>
(Apple, take notice)

[04:36:00.0000] <jgraham>
Ms2ger: ha ha ha

[04:46:00.0000] <annevk>
maybe I should subscribe to apps-discuss

[04:46:01.0000] <annevk>
it's rather amusing

[04:47:00.0000] <annevk>
Taggnostr: that's going to be wontfixed

[04:47:01.0000] <annevk>
Taggnostr: we cannot change what code point is going to be returned

[04:48:00.0000] <annevk>
Taggnostr: we could make it not be a parse error potentially

[04:48:01.0000] <Taggnostr>
not even if the unicode standard says that's wrong?

[04:48:02.0000] <Ms2ger>
Maybe search the spec for "willful violation"

[04:49:00.0000] <annevk>
Taggnostr: does it actually say that?

[04:49:01.0000] <annevk>
Taggnostr: Unicode is quite flexible

[04:49:02.0000] <Ms2ger>
Does WebKit support css3multicol unprefixed already?

[04:50:00.0000] <Taggnostr>
annevk, see the quotes at http://bugs.python.org/issue12729#msg143392 (the context is a bit different, but they are relevant here)

[04:51:00.0000] <Taggnostr>
most of those ranges are "noncharacters"

[04:52:00.0000] <Taggnostr>
but even there is not clear what it should be done

[04:53:00.0000] <kennyluck>
hmm… "If a noncharacter is received in open interchange, an application is not required to interpret it in any way. It is good practice, however, to recognize it as a noncharacter and to take appropriate action, such as replacing it with U+FFFD replacement character, to indicate the problem in the text."

[04:53:01.0000] <Taggnostr>
it's suggested in a few places that they should be replaced with FFFD, but in others basically says that the application can do other things

[04:53:02.0000] <kennyluck>
I have the feeling that nobody is going to implement this for the utf-8 decoder.

[04:53:03.0000] <Ms2ger>
Bah, vague specs

[04:54:00.0000] <annevk>
Taggnostr: this is not about encodings or interchange formats

[04:54:01.0000] <annevk>
Taggnostr: this is just about what ends up in your tree, it's perfectly acceptable that any code point can end up there, even if it's not a character

[04:55:00.0000] <Taggnostr>
but FFFD is used for other ranges, e.g. for surrogates ("Otherwise, if the number is in the range 0xD800 to 0xDFFF or is greater than 0x10FFFF, then this is a parse error. Return a U+FFFD REPLACEMENT CHARACTER.")

[04:56:00.0000] <Taggnostr>
I wonder if the decoder behaves in the same way as the character reference when a noncharacter is found

[04:57:00.0000] <annevk>
currently some reserved code points are being put out by some encodings

[04:57:01.0000] <annevk>
at least per http://dvcs.w3.org/hg/encoding/raw-file/tip/Overview.html

[04:57:02.0000] <annevk>
not everything is defined yet though

[05:01:00.0000] <annevk>
http://www.extremetech.com/computing/119571-mozilla-partners-up-with-lg-to-combat-apple-and-google-with-its-own-device

[05:02:00.0000] <Taggnostr>
I think that if a codepoint is forbidden during regular decoding, it should be forbidden for character references too

[05:03:00.0000] <annevk>
JavaScript nor the DOM work that way, not sure it makes sense for HTML to be any different

[05:05:00.0000] <Taggnostr>
maybe they should be fixed too (assuming that this is a real bug)

[05:08:00.0000] <annevk>
we cannot change that

[05:39:00.0000] <Velmont>
sicking: Mozilla doesn't support lowerBoundOpen, fact or false?

[05:41:00.0000] <woef>
Weird question, but can you have two <header>s within an <article> or <section>?

[05:43:00.0000] <Ms2ger>
What's lowerBoundOpen?

[05:43:01.0000] <Velmont>
Ms2ger: Woops, IndexedDB, sorry :-)

[05:44:00.0000] <Velmont>
http://dvcs.w3.org/hg/IndexedDB/raw-file/tip/Overview.html#widl-IDBKeyRange-lowerBound-static-IDBKeyRange-any-bound-boolean-open

[05:44:01.0000] <annevk>
woef: i don't think it's forbidden

[05:44:02.0000] <sicking>
Velmont: outright lie

[05:44:03.0000] <woef>
Cool.

[05:44:04.0000] <sicking>
Velmont: :)

[05:45:00.0000] <woef>
Need it for a bad use case, but wireframes are already validated -_-

[05:45:01.0000] <Velmont>
sicking: Heh. OK. -- You see, I'm trying to understand how it works. And the implementation doesn't agree with me.

[05:45:02.0000] <Velmont>
(it seems, barring any bugs in my testing).

[05:46:00.0000] <Velmont>
[1, 2, 3]  ->   openCursor(lowerBound(1), false)   would iterate 2 and 3.      openCursor(lowerBound(1), true)  would iterate  1, 2 and 3.

[05:46:01.0000] <AryehGregor>
RobbertAtWork, by "multiple selections" you mean "multi-range selections"?  They definitely have use-cases, but they're evil anyway and we don't want them.

[05:47:00.0000] <Velmont>
sicking: Am I right in that? -- If so, I'm a bit at loss, because Mozilla seems to return the same no matter what I set "open" to do.

[05:47:01.0000] <sicking>
Velmont: i guess we might have bugs somewhere. Do you have a testcase?

[05:47:02.0000] <RobbertAtWork>
yeah that's what I meant, and that's fine with me

[05:48:00.0000] <Velmont>
sicking: Yep, - it's kinda in the middle of everything though, I can either make a small one, or I can upload what I've got now. It's part of a test suite.

[05:48:01.0000] <Ms2ger>
Upload it :)

[05:49:00.0000] <sicking>
Velmont: please file a bug in our bugzilla and attach a testcase. Should be an easy fix

[05:49:01.0000] <sicking>
Velmont: though if you want i can have a looksee at the testcase first

[05:50:00.0000] <sicking>
Velmont: huh?

[05:51:00.0000] <sicking>
Velmont: you mean openCursor(IDBKeyRange.lowerBound(1, false)), right?

[05:51:01.0000] <sicking>
Velmont: i have no idea what syntax you're using above

[05:52:00.0000] <sicking>
Velmont: also, i think you're getting the meaning of 'open' switched around

[05:53:00.0000] <Velmont>
sicking: http://test.s0.no/idb/extra/idbcursor-advance.htm

[05:54:00.0000] <Velmont>
Right now it's at the default (which should be false), but I've also tried with "cupcake", false, and true, -- still the same error, expecting pancake but getting cupcake.

[05:55:00.0000] <sicking>
Velmont: the default is false, which means that the range is inclusive

[05:56:00.0000] <sicking>
Velmont: i.e. the current testcase you have looks wrong to me

[05:56:01.0000] <sicking>
Velmont: i would expect "cupcake" to be the first result

[05:56:02.0000] <Velmont>
OK, but having true still gives me pancake

[05:57:00.0000] <sicking>
Velmont: true should give pancake

[05:57:01.0000] <sicking>
Velmont: false should give cupcake

[05:58:00.0000] <sicking>
Velmont: using default should give cupcake

[05:59:00.0000] <sicking>
Velmont: so "OK, but having true still gives me pancake" doesn't sound like a bug to me

[06:00:00.0000] <Velmont>
sicking: I mean still gives me cupcake :-( I'm getting all confused what with all the cakes

[06:00:01.0000] <Velmont>
sicking: I changed it to true now, -- and still fails.

[06:01:00.0000] <Velmont>
Said like this: it always gives cupcake no matter what I write as open argument.

[06:01:01.0000] <sicking>
Velmont: your code is incorrect

[06:01:02.0000] <sicking>
.openCursor(IDBKeyRange.lowerBound("cupcake"), true);

[06:01:03.0000] <sicking>
should be

[06:01:04.0000] <sicking>
.openCursor(IDBKeyRange.lowerBound("cupcake", true));

[06:01:05.0000] <Velmont>
fsck

[06:02:00.0000] <Velmont>
OK. Good. Then I only have my understanding of the open-ness inverted. :-)

[06:03:00.0000] <sicking>
Velmont: you're welcome ;-)

[06:03:01.0000] <annevk>
wait in what way would the DRM proposal help with privacy?

[06:03:02.0000] <annevk>
I guess with laughable hsivonen meant bullshit?

[06:04:00.0000] <annevk>
hey sicking, kill DOMStringList! kill kill kill

[06:04:01.0000] <sicking>
i don't even remember what it is

[06:04:02.0000] <sicking>
oh, in indexeddb?

[06:04:03.0000] <sicking>
annevk: is DOMString[] equivalent?

[06:04:04.0000] <sicking>
annevk: i.e. does it return a live object?

[06:05:00.0000] <sicking>
/me doesn't particularly care about liveness, but needs something well defined

[06:05:01.0000] <annevk>
sicking: if you say it's live it's live

[06:06:00.0000] <sicking>
annevk: so it's not the same as a JS-array containing DOMStrings then?

[06:06:01.0000] <smaug____>
http://blogs.msdn.com/b/wer/archive/2011/08/03/why-you-should-use-xmlhttprequest-asynchronously.aspx is interesting

[06:06:02.0000] <smaug____>
8.4% is a lot

[06:06:03.0000] <annevk>
sicking: what is not the same?

[06:07:00.0000] <annevk>
sicking: DOMStringList is not necessarily live either, it all depends on what you say about it when you use it

[06:07:01.0000] <annevk>
DOMString[] can be both static and live afaik

[06:08:00.0000] <sicking>
annevk: a JS-Array can't be live

[06:08:01.0000] <sicking>
annevk: since we can't prevent mutations

[06:09:00.0000] <annevk>
Web IDL has readonly []

[06:09:01.0000] <annevk>
http://dev.w3.org/2006/webapi/WebIDL/#idl-array

[06:13:00.0000] <annevk>
yeah so you get arrays with limitations: http://dev.w3.org/2006/webapi/WebIDL/#es-array

[06:20:00.0000] <Velmont>
sicking: Hmmm. Reading the attribute lowerOpen I get the correct meaning. --- But the lowerBound() function says the opposite...

[06:21:00.0000] <Velmont>
So it's trying to confuse people. I'll open a bug. :)

[06:22:00.0000] <sicking>
Velmont: the text looks correct to me

[06:22:01.0000] <sicking>
Velmont: if you pass false we set lowerOpen to false, if you pass true we set lowerOpen to true

[06:23:00.0000] <annevk>
sicking: a response to http://lists.w3.org/Archives/Public/public-webapps/2012JanMar/0823.html would be nice too

[06:23:01.0000] <sicking>
Velmont: and lowerOpen says that false means the value is included

[06:23:02.0000] <sicking>
annevk: the change looks good to me, but I'd prefer to get smaugs input

[06:23:03.0000] <annevk>
k i'll ask him

[06:24:00.0000] <Velmont>
open - Is the lower-bound value included in the key range. Defaults to false.

[06:24:01.0000] <sicking>
Velmont: indeed

[06:24:02.0000] <sicking>
oh

[06:24:03.0000] <Velmont>
I'm parsing it differently :/

[06:25:00.0000] <sicking>
Velmont: i see, the text there is wrong yes

[06:25:01.0000] <Velmont>
yesssss

[06:25:02.0000] <sicking>
Velmont: i was looking at the definition for the lowerOpen attribute

[06:25:03.0000] <Velmont>
sicking: Yep, that one was correct.

[06:25:04.0000] <sicking>
Velmont: please file bug yes

[06:33:00.0000] <AryehGregor>
What are examples of integer-valued CSS properties other than z-index?

[06:34:00.0000] <AryehGregor>
I'm particularly interested in animatable ones.

[06:34:01.0000] <AryehGregor>
Hmm, column-count.

[06:37:00.0000] <StoneCypher>
counters in general

[06:37:01.0000] <StoneCypher>
like lists

[06:37:02.0000] <StoneCypher>
well i guess those aren't properties

[06:37:03.0000] <annevk>
counter-increment and such are

[06:37:04.0000] <annevk>
AryehGregor: line-height

[06:38:00.0000] <AryehGregor>
annevk, that's a <number> . . .

[06:38:01.0000] <annevk>
counter-increment isn't

[06:38:02.0000] <annevk>
counter-reset

[06:39:00.0000] <AryehGregor>
Right, but will we ever want to animate those?

[06:39:01.0000] <annevk>
orphans, widows...

[06:39:02.0000] <annevk>
doubt it

[06:39:03.0000] <AryehGregor>
With mq, how can I inspect a patch that's not applied, akin to hg log -r foo?

[06:39:04.0000] <AryehGregor>
Er, hg log -r foo -p?

[06:40:00.0000] <AryehGregor>
It's not applied, so it has no revision id and non-mq commands won't work.

[06:41:00.0000] <AryehGregor>
/me waits for "look in the .hg directory"

[06:42:00.0000] <AryehGregor>
/me does that

[06:57:00.0000] <annevk>
http://en.wikipedia.org/wiki/Sony_formats o_O

[06:57:01.0000] <StoneCypher>
yeah

[06:58:00.0000] <StoneCypher>
sony's made a long and profitable history of custom media

[06:58:01.0000] <StoneCypher>
notice that their ps3 media is basically just repackaged sdhc, but it's form-factor incompatible, so they can sell it at 5x market price

[06:58:02.0000] <StoneCypher>
basically the same thing as memory stick, which was reorganized mmc

[06:58:03.0000] <StoneCypher>
that list is incomplete

[06:59:00.0000] <StoneCypher>
it only lists things that are solely sony

[06:59:01.0000] <StoneCypher>
they also did a lot of shared format work

[06:59:02.0000] <StoneCypher>
like cd was sony and philips magnavox

[07:07:00.0000] <Ms2ger>
Lovely: http://www.ipetitions.com/petition/html-version-of-ecmascript-5-now/

[07:11:00.0000] <divya>
hsivonen: w.r.t tweets, my point of view was the primary goal of that interface was to tell outright if some type is definitely not playable, is that incorrect?

[07:11:01.0000] <hsivonen>
divya: it's mainly to give something to people who want to know what can't be known

[07:12:00.0000] <gsnedders>
Ms2ger: The previous issue mentioned was managing to meet the ECMA publishing guidelines while producing a good HTML copy from the same source.

[07:12:01.0000] <hsivonen>
divya: but your framing is correct in practice

[07:12:02.0000] <Ms2ger>
Prince?

[07:12:03.0000] <gsnedders>
And the general attitude was that changing the publishing guidelines was about as hard as W3C Process

[07:12:04.0000] <gsnedders>
Ms2ger: I don't know, I presume it could be done, but it might need a fair bit of preprocessing and the like to pull-off.

[07:12:05.0000] <hsivonen>
Prince++

[07:13:00.0000] <divya>
hsivonen: :)) in that case I think the api needs to be optimized for that practice, maybe/probably optimizes for the reverse case leading to even more confusion.

[07:14:00.0000] <divya>
hsivonen: my thought was it should be IsUnplayable() and return true or false. so we know true means it definitely cannot be played. false means needs more testing.

[07:14:01.0000] <annevk>
TC39 should just move into the W3C

[07:14:02.0000] <Ms2ger>
How about WHATWG? :)

[07:15:00.0000] <annevk>
there's no need for ECMA

[07:15:01.0000] <annevk>
Ms2ger: I reckon W3C is an easier sell, although it may have to be over Bert's dead body or something

[07:16:00.0000] <akamike>
WHATWGScript - sounds less like a skin condition

[07:18:00.0000] <jgraham>
/me can hear it now... "You want me to program in WHATScript?"

[07:19:00.0000] <annevk>
"WHATScript is crazy!" "WHATScript is crazy?" "WHATScript!" "Euh."

[07:19:01.0000] <wilhelm>
Too bad this isn't a task force. WTFScript would be a much more appropriate name.

[07:19:02.0000] <annevk>
you mean like http://whattf.org/ ?

[07:19:03.0000] <gsnedders>
annevk: The problem is ECMA own the spec

[07:20:00.0000] <wilhelm>
Yes.

[07:20:01.0000] <gsnedders>
And I doubt anybody wants to rewrite it.

[07:21:00.0000] <jgraham>
We will put AryehGregor on that just after he rewrites CSS from scratch

[07:21:01.0000] <gsnedders>
There's not much need to rewrite it, though

[07:22:00.0000] <AryehGregor>
ES5 is actually pretty good AFAICT.

[07:22:01.0000] <jgraham>
It's fine

[07:22:02.0000] <jgraham>
It's just in PDF format and owned by ECMA

[07:22:03.0000] <StoneCypher>
i like pdfs.

[07:22:04.0000] <annevk>
gsnedders: not sure that's what's holding everything back

[07:22:05.0000] <StoneCypher>
they're a reliable target for complex rendering.

[07:23:00.0000] <jgraham>
If only what we had was a need for complex rendering rather than a need for hyperlinks and non-sucky search

[07:23:01.0000] <StoneCypher>
/me has that need.

[07:23:02.0000] <StoneCypher>
so

[07:23:03.0000] <StoneCypher>
/me shrugs

[07:24:00.0000] <jgraham>
In the ECMAScript spec?

[07:24:01.0000] <StoneCypher>
oh.  no.

[07:24:02.0000] <StoneCypher>
sorry, i didn't mean "i think pdf is good for that case"

[07:24:03.0000] <StoneCypher>
i just like pdf.

[07:24:04.0000] <StoneCypher>
because it lets me print silly shit on amazon and cafepress that wouldn't be realistic otherwise.

[07:24:05.0000] <annevk>
gsnedders: at least I never heard that given as a reason before

[07:25:00.0000] <gsnedders>
annevk: It came up on es-discuss before. The reason is ECMA publishing policies. If someone wants to convert the current draft and make some stylesheet/processing that makes it follow ECMA publishing rules, then there's no objection.

[07:26:00.0000] <annevk>
I meant about leaving ECMA

[07:26:01.0000] <gsnedders>
annevk: Ah.

[07:26:02.0000] <gsnedders>
Well, it's a practical concern.

[07:26:03.0000] <Ms2ger>
gsnedders, are those policies public?

[07:26:04.0000] <gsnedders>
I don't know most of the real internal politics.

[07:26:05.0000] <gsnedders>
Ms2ger: I don't think so.

[07:26:06.0000] <gsnedders>
Ms2ger: Certainly I've never seen them.

[07:27:00.0000] <Velmont>
Always helpful standards bodies.

[07:28:00.0000] <RobbertAtWork>
http://es5.github.com/

[07:28:01.0000] <Velmont>
RobbertAtWork: Can't link to that from specs.

[07:28:02.0000] <RobbertAtWork>
Velmont: I see

[07:29:00.0000] <gsnedders>
RobbertAtWork: The concern is ECMA publications, not in general.

[07:29:01.0000] <hsivonen>
Velmont: I bet you could link to that from html5.org or whatwg.org specs

[07:30:00.0000] <AryehGregor>
Velmont, I link to it from specs.

[07:30:01.0000] <AryehGregor>
Specifically, my Editing CG spec.

[07:30:02.0000] <AryehGregor>
Which is W3C-hosted, although it's not a W3C spec, or somesuch.

[07:31:00.0000] <Velmont>
AryehGregor: Oh great. Think it's possible to sneak it into W3C hosted specs such as IndexedDB etc also?

[07:31:01.0000] <Ms2ger>
Unlikely

[07:32:00.0000] <AryehGregor>
Velmont, it's probably not going to get into a REC-track spec without someone objecting (if they notice).

[07:32:01.0000] <AryehGregor>
My editing spec isn't REC-track.

[07:32:02.0000] <AryehGregor>
It's a CG spec.

[07:32:03.0000] <AryehGregor>
So I can ignore all process.

[07:33:00.0000] <Velmont>
Yep. Thought so :] So it would be very helpful to get a canonical, official HTML version that can be linky-linked.

[07:33:01.0000] <AryehGregor>
You could give it as an informative reference.

[07:34:00.0000] <AryehGregor>
I assume.

[07:34:01.0000] <AryehGregor>
I don't think those have to be stable or "official".

[07:34:02.0000] <Ms2ger>
Oh?

[07:34:03.0000] <StoneCypher>
it's not clear to me how much chatty stuff is desired here.  i stumbled across a startlingly high quality non-germane tech talk video.  should i crosspaste it here?

[07:34:04.0000] <StoneCypher>
one of those "everybody should see this" things.

[07:34:05.0000] <Velmont>
What is non-germane?

[07:34:06.0000] <AryehGregor>
Do they?

[07:34:07.0000] <AryehGregor>
I don't know.

[07:34:08.0000] <Ms2ger>
We can't publish DOM4 with an informative reference to WHATWG HTML

[07:34:09.0000] <StoneCypher>
has nothing to do with whatwg

[07:35:00.0000] <StoneCypher>
at all

[07:35:01.0000] <gsnedders>
The official answer is this is a social channel, where we happen to end up talking about HTML5 a lot.

[07:35:02.0000] <AryehGregor>
Well, the W3C has a political ax to grind against WHATWG HTML.

[07:35:03.0000] <annevk>
StoneCypher: everything goes until someone asks you to stop

[07:35:04.0000] <annevk>
StoneCypher: I sometimes chat about grocery shopping for instance :)

[07:35:05.0000] <StoneCypher>
okay :)  i found this mind blowing.  the first five minutes are boring as hell and i almost gave up on it, but once he gets rolling, holy crap.  http://vimeo.com/36579366

[07:35:06.0000] <AryehGregor>
StoneCypher, I suspect people will get annoyed if any given person's ratio of useful to non-useful topics gets too low.

[07:36:00.0000] <StoneCypher>
basically he's talking about applying a concrete specific bifurcating principle globally

[07:36:01.0000] <AryehGregor>
Regulars will sometimes chat about random stuff, but it's predominantly work-related.

[07:36:02.0000] <StoneCypher>
which sounds dreary

[07:36:03.0000] <StoneCypher>
but when he shows how his choice of principle started driving him to make useful new tools

[07:36:04.0000] <Velmont>
StoneCypher: Oh yes. I saw that a week ago. Very nice. Sent it to some friends.

[07:36:05.0000] <StoneCypher>
the tools he actually made are stunning to me

[07:36:06.0000] <StoneCypher>
just stunning

[07:36:07.0000] <StoneCypher>
Velmont: i'm currently trying to figure out how to make his js live view thing for erlang

[07:37:00.0000] <StoneCypher>
Want So Badly (tm)

[07:38:00.0000] <gsnedders>
AryehGregor: I scarcely talk on topic, to be fair! :P

[07:38:01.0000] <StoneCypher>
huhu

[07:38:02.0000] <StoneCypher>
i'll try to keep it rare.

[07:40:00.0000] <AryehGregor>
StoneCypher, I admit that I personally always considered your off-topic posting to be too frequent in #mediawiki, but I have a lot less clout here than I used to there, so here it really depends more what other people think.

[07:40:01.0000] <Ms2ger>
gsnedders, well, you're the youngest around :)

[07:40:02.0000] <AryehGregor>
/me guesses he's middle-aged in this group

[07:41:00.0000] <gsnedders>
Ms2ger: And it's not as if there isn't plenty else discussed here, or as if I'm not a regular who has discussed plenty of on-topic stuff before.

[07:41:01.0000] <gsnedders>
And I seem to be the go-to JS guy :P

[07:41:02.0000] <StoneCypher>
AryehGregor: ... i barely spoke in #mediawiki; i think you might have me swapped with someone else.

[07:41:03.0000] <jgraham>
gsnedders: We are all just scared that if we don't leave you alone you will start playing loud emo music

[07:41:04.0000] <AryehGregor>
I know you barely spoke there, but I felt like it was mostly off-topic, so it annoyed me anyway.  Maybe I'm easily annoyed, though.

[07:42:00.0000] <StoneCypher>
AryehGregor: almost the only time i talked in that channel was when I was talking to someone I'd lost touch with elsewhere

[07:42:01.0000] <AryehGregor>
Anyway, doesn't matter.  Do as you will, don't mind me.

[07:42:02.0000] <gsnedders>
jgraham: Well, I think we're alone now…

[07:42:03.0000] <gsnedders>
Oh, wait, that's not emo.

[07:42:04.0000] <gsnedders>
Sorry, I'm not 14.

[07:42:05.0000] <Ms2ger>
gsnedders, where "we" is you and your other identity?

[07:42:06.0000] <annevk>
damn it gsnedders why do you grow up?

[07:43:00.0000] <StoneCypher>
/me can't remember what nick they used in that channel (one of those new-nick-every-thursday types.) Kate something.

[07:43:01.0000] <AryehGregor>
River Tarnell, a.k.a. Kate Turner?

[07:43:02.0000] <StoneCypher>
yes, kate turner

[07:44:00.0000] <StoneCypher>
sorry, i knew river under the previous name

[07:44:01.0000] <AryehGregor>
A.k.a. flyingparchment, and about nine other nicks that I forget?

[07:44:02.0000] <annevk>
I wonder if gsnedders is still the youngest (cf http://www.flickr.com/photos/gsnedders/2964101064/ )

[07:44:03.0000] <AryehGregor>
River Tarnell is his real name, Kate Turner was an adopted persona.

[07:44:04.0000] <StoneCypher>
ah, you know he's a he

[07:44:05.0000] <StoneCypher>
yes, i knew him under his birth name, from before any of that started, from efnet #c++

[07:44:06.0000] <gsnedders>
annevk: I dunno, I'm certainly still youngest at Opera…

[07:44:07.0000] <gsnedders>
Ms2ger: Maybe. No comment.

[07:45:00.0000] <StoneCypher>
it's sort of hard to know what i'm supposed to be open about with regards to him :)

[07:45:01.0000] <StoneCypher>
anyway

[07:45:02.0000] <StoneCypher>
he's brilliant if you get to know him, so finding him in #mediawiki was a blast

[07:46:00.0000] <wilhelm>
annevk: The note on that picture is excellent.

[07:49:00.0000] <annevk>
haha

[07:49:01.0000] <annevk>
missed that

[07:49:02.0000] <Ms2ger>
Finally!

[07:50:00.0000] <Velmont>
/me found an unused exercise ball and took it to his office. yay

[07:51:00.0000] <Ms2ger>
Be warned, Opera people

[08:04:00.0000] <annevk>
https://bitbucket.org/ms2ger/dom-core/changeset/193f1831efe0

[08:04:01.0000] <annevk>
Introduction to "The DOM"

[08:05:00.0000] <annevk>
http://dvcs.w3.org/hg/domcore/raw-file/tip/Overview.html#introduction-to-the-dom

[09:47:00.0000] <AryehGregor>
/me remembers that the editing spec gives him a headache

[09:47:01.0000] <AryehGregor>
Far too complicated.

[09:47:02.0000] <AryehGregor>
Spec work is hard.

[09:47:03.0000] <AryehGregor>
/me guesses he likes small, self-contained problems, but . . .

[09:48:00.0000] <AryehGregor>
Someone has to do it.

[10:01:00.0000] <AryehGregor>
There's no easy way for a script that's submitting a big POST to gzip it, is there?

[10:01:01.0000] <AryehGregor>
Or otherwise compress it?

[10:01:02.0000] <AryehGregor>
HTTP should be able to do that transparently in theory, right?

[10:13:00.0000] <ksweeney>
Not sure on the base HTTP side of things, but I remember seeing a JS library that would compress files locally before posting. Think that might rely on the File API though (not sure what your support needs are)

[10:16:00.0000] <ksweeney>
http://jszip.stuartk.co.uk/

[10:16:01.0000] <zewt_>
AryehGregor: transfer-encoding

[10:16:02.0000] <AryehGregor>
zewt, yes, but how can you get that from JS when posting a form?

[10:17:00.0000] <AryehGregor>
Or can you get it with XHR but not forms?  Or neither?

[10:17:01.0000] <AryehGregor>
ksweeney, I only need to support latest Chrome and Firefox.

[10:17:02.0000] <AryehGregor>
Meaning Chrome dev, and mozilla-central.

[10:17:03.0000] <AryehGregor>
(so different definitions of "latest" here)

[10:37:00.0000] <zewt>
AryehGregor: it should just always happen if supported

[10:37:01.0000] <AryehGregor>
zewt, does it actually, though?

[10:37:02.0000] <AryehGregor>
/me could test, of course

[10:44:00.0000] <AryehGregor>
Nope, doesn't seem to happen (at least in Chrome).

[12:46:00.0000] <AryehGregor>
Blech, my execCommand() test data is 4.8M.  :(

[12:47:00.0000] <AryehGregor>
/me should think about if it's possible to reduce that for the future . . .

[12:55:00.0000] <Philip`>
AryehGregor: "less .hg/patches/foo" is what I always use

[13:06:00.0000] <Ms2ger>
Any Opera people around who feel like poking at DSK-358181?

[13:11:00.0000] <rniwa>
AryehGregor: thanks for those spec cahnges!

[13:12:00.0000] <rniwa>
AryehGregor: I think we're gonna make those changes in near future :)

[13:16:00.0000] <TabAtkins>
heycam|away: I didn't understand a single part of your email about named properties.

[13:16:01.0000] <TabAtkins>
heycam|away: I'm not sure how I managed that.

[13:17:00.0000] <TabAtkins>
Wait, hm.

[13:53:00.0000] <Ms2ger>
TabAtkins, easy solution, document those areas :)

[13:59:00.0000] <TabAtkins>
Ms2ger: Indeed.

[13:59:01.0000] <Ms2ger>
And thank you

[13:59:02.0000] <TabAtkins>
Ms2ger: Now we have another hard problem: finding time to do so.

[13:59:03.0000] <TabAtkins>
You're welcome, but for what?

[14:00:00.0000] <Ms2ger>
Fixing everything

[14:00:01.0000] <TabAtkins>
I haven't fixed *everything* yet.  There's still world hunger.

[14:00:02.0000] <TabAtkins>
But I'm glad you believe in me.

[14:01:00.0000] <Ms2ger>
Hrm

[14:01:01.0000] <Ms2ger>
World hunger or the box model...

[14:01:02.0000] <Ms2ger>
Go for the box model, please :)

[14:02:00.0000] <TabAtkins>
I think there's about a billion hungry people that would disagree with you.

[14:02:01.0000] <TabAtkins>
But I'll probably do what you say instead.

[14:56:00.0000] <Hixie>
so to introduce path primitives, i think i need to split CanvasRenderingContext2D into two interfaces Path and CanvasRenderingContext2D, where CanvasRenderingContext2D inherits from Path

[14:57:00.0000] <Hixie>
that way you can do pretty much everything you want to a path that you can to a canvas, short of doing anything with colour or shadows

[14:58:00.0000] <TabAtkins>
OO - ruining everything since the 80s or whatever.

[14:58:01.0000] <Hixie>
heh

[14:58:02.0000] <TabAtkins>
Does WebIDL make mixins easy?

[14:59:00.0000] <Hixie>
whether we do it as a mixin or inheritance is a detail

[14:59:01.0000] <Hixie>
i don't really care either way

[14:59:02.0000] <TabAtkins>
Sure.  Until you want to abstract something else out of Canvas.

[14:59:03.0000] <Hixie>
sure

[14:59:04.0000] <Hixie>
i'm just talking high level here

[15:00:00.0000] <Hixie>
hmm.... maybe it should be a separate interface anyway, since path.fill(path) and context.fill(path) would do rather different things

[15:00:01.0000] <Hixie>
adding one path to another path, and drawing colour to the canvas, respectively

[15:00:02.0000] <Hixie>
hmm

[15:00:03.0000] <TabAtkins>
...that sounds like a weird behaviro for path.fill(path).

[15:00:04.0000] <Hixie>
it would be called something else if we did it that way

[15:01:00.0000] <TabAtkins>
I don't understand how you can fill a path with a path, unless it's in the layering way, like <pattern> in SVG.

[15:01:01.0000] <Hixie>
i don't want to define arcTo() etc twice... maybe the right structure is for Path and Context to both inherit/mixin something of an AbstractPath

[15:01:02.0000] <Hixie>
TabAtkins: path.add(path) if you prefer

[15:02:00.0000] <TabAtkins>
Yeah, that's definitely better. ^_^

[15:02:01.0000] <Hixie>
TabAtkins: as opposed to path.addStroke(path), which outlines the path with a particular line width and adds that

[15:02:02.0000] <TabAtkins>
Though, keeping path.fill(foo) is useful.  If we're going retained, you can use that to get better AA behavior.

[15:02:03.0000] <Philip`>
Maybe it'd be cleaner to have a totally independent Path object, and have a CanvasRenderingContext2D.globalPath property (which is a Path), and have CanRenCon2D.arcTo() etc be defined as delegating to globalPath.arcTo(...)

[15:03:00.0000] <Hixie>
Philip`: yeah, i was thinking of doing that too. and have .fill(), etc, default to the .globalPath object if there's not an explicit argument saying which to use.

[15:03:01.0000] <Hixie>
Philip`: seems weird to actually expose .globalPath though

[15:03:02.0000] <Hixie>
since it wouldn't add anything

[15:04:00.0000] <Philip`>
(Using some kind of explicit delegation (instead of inheritance etc) would also make it possible for Path to have a slightly different API to CRC2D, if there was any desire for that (to clean up things without compat concerns, or something), and CRC2D can define whatever mapping is needed)

[15:06:00.0000] <Hixie>
yeah, though having two different sets of path api is a bit ugly

[15:06:01.0000] <Hixie>
is there anything to clean up?

[15:06:02.0000] <Hixie>
if not i'd much rather keep them identical

[15:06:03.0000] <Philip`>
I don't remember

[15:06:04.0000] <Philip`>
/me has forgotten most of the API currently

[15:07:00.0000] <Hixie>
also it's kind of weird to have the transform be on context.globalPath yet affect the context's own methods (even those not delegating to the globalPath object)

[15:07:01.0000] <Hixie>
(we'd want transforms on path objects so you can do things like add text pointing in various directions to a single path)

[15:07:02.0000] <Hixie>
(same reason we'd want the font properties on the path object)

[15:25:00.0000] <Hixie>
hmmmmmm

[15:25:01.0000] <Hixie>
how to make isPointInPath() useful when applied to a path you use to stamp out a bunch of things in different places

[15:26:00.0000] <Hixie>
it doesn't work just to have a  path = context.transformPath(path)  feature, because you might want just to have the translate and rotation transforms applied but not the scale

[15:26:01.0000] <Hixie>
you really want "transformPathUsingOnlyTheTransformsImGoingToUndoBeforeCallingIsPointInPath(path)"

[15:26:02.0000] <Hixie>
hmmm

[15:37:00.0000] <Hixie>
how else can we make hit testing easier on canvas without making it retained-mode...

[15:37:01.0000] <TabAtkins>
Optional set of transforms you can pass to isPointInPath along with the path itself?

[15:38:00.0000] <TabAtkins>
Something like, I dunno, isPointInPath(path, {offset:[x,y], transform:<string>})

[15:38:01.0000] <Hixie>
it would be sad to have to have two ways to express transforms in one api

[15:38:02.0000] <TabAtkins>
Sure.

[15:38:03.0000] <Hixie>
we could have a way to register a callback for a path on the canvas, and have the UA be responsible for discarding callbacks that relate to paths that have been entirely overlapped

[15:39:00.0000] <TabAtkins>
Make a transform object?

[15:39:01.0000] <Hixie>
(and have clearRect() clear the callbacks from the given region)

[15:39:02.0000] <Hixie>
could have some kind of transform object

[15:40:00.0000] <Hixie>
though i don't really see how it would work

[15:40:01.0000] <TabAtkins>
I presume that other drawing libraries, particularly ones built on canvas, have run into this problem.

[15:40:02.0000] <Hixie>
(i mean, a transform object is essentially what "path = context.transformPath(path)" gives you, and that fails as described above)

[15:43:00.0000] <Hixie>
http://stackoverflow.com/questions/3146424/html5-canvas-hittesting suggests two things, one, be retained (scene graph) and two, basically what i suggest above, have a way to register a callback for a path and have the UA throw away the paths once overlapped

[15:43:01.0000] <Hixie>
(they give a particular implementation strategy for case two)

[15:44:00.0000] <TabAtkins>
Oh, I see what you were asking about.

[15:44:01.0000] <TabAtkins>
Yeah.

[15:45:00.0000] <TabAtkins>
Using those color hacks for picking is pretty awesome.

[15:45:01.0000] <Hixie>
http://simonsarris.com/blog/510-making-html5-canvas-useful basically says scene graph

[15:46:00.0000] <Hixie>
http://atomicrobotdesign.com/blog/htmlcss/build-a-vertical-scrolling-shooter-game-with-html5-canvas-part-3/ says scene graph

[15:47:00.0000] <Hixie>
if we do a ua-maintained stack of data, i wonder if we should use structured-cloned data that's made available in the mouse events on the canvas, or whether we should use callbacks

[15:47:01.0000] <Hixie>
i'm thinking the former is probably more useful

[15:48:00.0000] <Hixie>
since then you can do this for mouse down, move, up, wheel events, etc

[15:48:01.0000] <TabAtkins>
What do you mean by "structured-cloned data"?

[15:50:00.0000] <Hixie>
arbitrary JS object that has gone through http://www.whatwg.org/specs/web-apps/current-work/#structured-clone

[15:50:01.0000] <TabAtkins>
Yeah, I know that.  ^_^  I meant what data are you expecting to pass?

[15:50:02.0000] <Hixie>
oh

[15:51:00.0000] <Hixie>
index of the space ship, stuff like that

[15:51:01.0000] <Hixie>
whatever info you need to be able to process the click

[15:51:02.0000] <TabAtkins>
Hm.  For large scenes, doing picking directly from teh scene graph is slow. It becomes a linear search through the tree.

[15:52:00.0000] <Hixie>
well the advantage of having the UA do it is that the UA can do lots of optimisations that a JS author might not bother with

[15:52:01.0000] <TabAtkins>
Yeah, definitely.

[15:52:02.0000] <TabAtkins>
The UA should be the one in charge of picking.

[15:52:03.0000] <Hixie>
(there are plenty of ways to optimise a hit test like this)

[15:52:04.0000] <Hixie>
(even without using a backing coloured bitmap)

[15:53:00.0000] <TabAtkins>
(though from what I understand sitting next to some game devs, the backing colored bitmap is pretty much state-of-the-art)

[15:53:01.0000] <Hixie>
it's certainly going to be the fastest

[15:53:02.0000] <Hixie>
not the most memory efficient though

[15:53:03.0000] <TabAtkins>
True.

[15:53:04.0000] <Hixie>
maybe we don't bother with structured clone, and only do an index

[15:54:00.0000] <Hixie>
since you wouldn't want authors to clone parts of their scene graph accidentally

[15:54:01.0000] <TabAtkins>
So, if you're talking about the UA still doing this, what is this data for?  Who's getting it?

[15:54:02.0000] <TabAtkins>
/me is behind your thinking.

[15:54:03.0000] <Hixie>
addHitRegion(path, mySpaceShipObjectThatReferencesMyEntireGameState)

[15:54:04.0000] <Hixie>
i'd add it to the click event MouseEvent object

[15:55:00.0000] <Hixie>
so <canvas onclick="processClickOn(event.hitTargetID)">

[15:55:01.0000] <TabAtkins>
Ah, and paths have some accessible index that you can store on your own objects?

[15:56:00.0000] <Hixie>
i was imagining you'd do something like addHitRegion(path, spaceship.id);

[15:56:01.0000] <Hixie>
where spaceship is your internal state object for the thing you are drawing with path

[15:56:02.0000] <TabAtkins>
Ah, the opposite direction.  Sure, either way works.

[15:57:00.0000] <TabAtkins>
Unfortunately JS isn't quite ready yet for having the Path return a unique object for its id.

[15:57:01.0000] <Hixie>
that would also allow addHitRegion(path, 'text label', ariaRole); or addHitRegion(path, myButtonElement);

[15:58:00.0000] <Hixie>
which would enable haptic feedback AT features for devices with touch screens where the user brushes the screen to find what's on it, with audible descriptions

[15:58:01.0000] <Hixie>
which right now totally fail for canvas

[15:59:00.0000] <TabAtkins>
Okay, so the author has to have some way to produce unique ids for their objects that they want to attach paths to.

[15:59:01.0000] <TabAtkins>
Right?

[15:59:02.0000] <Hixie>
right


2012-02-25
[16:00:00.0000] <Hixie>
typically they have them already, since their objects will typically be in arrays they're walking over

[16:00:01.0000] <TabAtkins>
Yeah.

[16:00:02.0000] <Hixie>
but in any case generating IDs is trivial

[16:00:03.0000] <TabAtkins>
Note that there is a use-case for wanting to get the set of all objects with a given point inside them.

[16:00:04.0000] <Hixie>
yeah that's a harder problem

[16:01:00.0000] <TabAtkins>
That one is generally going to be slow unless you have custom solutions.

[16:01:01.0000] <TabAtkins>
Like doing searches on a k-tree or something.

[16:01:02.0000] <Hixie>
the a11y use case and the normal click hit testing use case don't need it, so i'm not too worried about it

[16:01:03.0000] <TabAtkins>
Yeah, can be added later.

[16:01:04.0000] <TabAtkins>
Without impacting the top-object use-case.

[16:05:00.0000] <Hixie>
if we add a way to addHitRegion() a path giving that region a label to read out when an AT brings the AT cursor to that part of the canvas

[16:05:01.0000] <Hixie>
should we just make fillText() and strokeText() always imply such a call?

[16:06:00.0000] <TabAtkins>
With a path equal to the bounding box of the text or something?

[16:06:01.0000] <Hixie>
yeah

[16:06:02.0000] <Hixie>
or something

[16:06:03.0000] <TabAtkins>
Off the top of my head, I don't see why not.  Seems nice.

[16:06:04.0000] <Hixie>
(not bounding box given fillText() along a path)

[16:06:05.0000] <TabAtkins>
Yeah, sure.

[16:06:06.0000] <TabAtkins>
Suitably mutated was-a-rectangle-before-following-the-path.

[16:06:07.0000] <Hixie>
it wouldn't survive a drawImage() from one canvas to another, probably, which would be unfortunate

[16:07:00.0000] <TabAtkins>
*none* of the hit-testing would.

[16:07:01.0000] <Hixie>
right

[16:07:02.0000] <TabAtkins>
You need retained-mode if you want that.

[16:07:03.0000] <Hixie>
also would probably not survive drawing text onto a path then drawing the path

[16:07:04.0000] <TabAtkins>
Hm.  That's not necessarily ture.

[16:07:05.0000] <TabAtkins>
UAs could retain the information alongside the path.

[16:08:00.0000] <Hixie>
and would be kinda annoying if you were to draw many layers of one piece of text, e.g. doing a motion blur effect

[16:08:01.0000] <TabAtkins>
True.

[16:08:02.0000] <Hixie>
actually that one is probably the most serious

[16:09:00.0000] <Hixie>
also it would make it annoying to use fillText() to draw pictograms and things from custom fonts

[16:09:01.0000] <Hixie>
hmm

[16:09:02.0000] <Hixie>
maybe best to leave it to explicit calls

[16:09:03.0000] <TabAtkins>
Hm. Yeah, might want something explicit.

[16:09:04.0000] <TabAtkins>
Though extending *Text to make it easier might be good too.

[16:09:05.0000] <TabAtkins>
Just not by default.

[16:10:00.0000] <Hixie>
add an optional ariaRole argument, maybe

[16:10:01.0000] <Hixie>
(what's the appropriate aria role for a graph label, anyone know?)

[16:10:02.0000] <TabAtkins>
Is there a good role for just 'text' or 'label' or something?

[16:10:03.0000] <TabAtkins>
Heh, lemme check.

[16:11:00.0000] <Hixie>
looks like there's neither

[16:11:01.0000] <Hixie>
<label> defaults to No Role

[16:11:02.0000] <Hixie>
that's unfortunate

[16:12:00.0000] <TabAtkins>
Yes, reading the list of them in /TR/wai-aria/roles, I see nothing appropriate.

[16:13:00.0000] <Hixie>
ok. i'm gonna go to tgif, and will pick up this canvas stuff again next week.

[16:14:00.0000] <TabAtkins>
Lemme know if anything cool happens - we're doing board games today.

[00:28:00.0000] <Onderhond>
Quick question: is it just me or was there some kind of proposition for a <template> element in html5?

[01:31:00.0000] <annevk>
Onderhond: there is

[01:35:00.0000] <annevk>
sigh Microsoft does not want to remove constants from Indexed DB?

[01:35:01.0000] <annevk>
consider it for v2?

[01:35:02.0000] <annevk>
euh

[01:42:00.0000] <annevk>
oh lol

[01:42:01.0000] <annevk>
drm, no drm, it's like https versus http

[01:43:00.0000] <annevk>
public-html turning into a comedy list does seem positive

[01:44:00.0000] <Ms2ger>
Better than a tragedy?

[01:45:00.0000] <annevk>
well, public-html is not good tragedy, so yes

[02:16:00.0000] <Onderhond>
annevk: where can I read up on the <template> element? Google isn't very helpful.

[02:17:00.0000] <Ms2ger>
XBL2 or Web Components.

[02:17:01.0000] <Ms2ger>
?

[02:25:00.0000] <hsivonen>
I wonder why Gmail thinks emails from Mark Watson (@netflix.com) would be spam if I didn't have a filter telling Gmail never to mark them as spam

[03:00:00.0000] <Dashiva>
hsivonen: I think you can hover over some part of it to see why it was marked

[03:00:01.0000] <Dashiva>
Or maybe that's priority inbox

[03:39:00.0000] <annevk>
fyi https://plus.google.com/107429617152575897589/posts/NZBJe6Jjt1f

[04:07:00.0000] <annevk>
there's a <!-- XXX WTF? --> in DOM4

[04:07:01.0000] <annevk>
about the traverse siblings algorithm it seems

[04:09:00.0000] <Velmont>
annevk: Bah. They did not :S -- Well, they can actually change the numeric constants and leave the constants as-is. I guess their developers don't rely on 1 and 2, but rather IDBTransaction.READ_WRITE etc.

[04:09:01.0000] <Ms2ger>
Hah

[04:09:02.0000] <Ms2ger>
I would not count on such a reasonable thing

[04:10:00.0000] <Velmont>
Ms2ger: Well, I don't think Microsoft would admit that they have such sloppy developers.

[04:10:01.0000] <annevk>
Velmont: but you know... you rewrote their tests

[04:11:00.0000] <Velmont>
annevk: Heh, -- they didn't use the numbers there, they used the constant names.

[04:11:01.0000] <annevk>
ah, at least they got something right :)

[04:12:00.0000] <Ms2ger>
Have you looked at the WebStorage tests?

[04:13:00.0000] <annevk>
"Interestingly enough, the IETF follows the snapshot model, deals with hundreds of highly critical standards and it works absolutely well."

[04:13:01.0000] <Velmont>
Not really, took a quick peek once.

[04:13:02.0000] <annevk>
hmm

[04:13:03.0000] <annevk>
HTTP - latest stable version, out of date, a mess

[04:13:04.0000] <annevk>
data URLs - a mess

[04:13:05.0000] <annevk>
URI/IRI - cannot be implemented as is

[04:14:00.0000] <annevk>
TLS - not updated with respect to what implementations actually need to do

[04:14:01.0000] <annevk>
HTTP authentication -- hahaha

[04:14:02.0000] <hsivonen>
I wonder how chuck@jumis manages to confuse server-side login with DRM and Trusted Computing for DRM and Trusted Computing against janitor attacks

[04:15:00.0000] <hsivonen>
did I get trolled?

[04:15:01.0000] <annevk>
MIME - maybe this one is too easy

[04:15:02.0000] <Ms2ger>
Man, I wish WebGL used testharness.js

[04:16:00.0000] <annevk>
hsivonen: I find his emails usually confusing

[04:42:00.0000] <gsnedders>
Ms2ger: Likewise. WebKit's test harness really doesn't work if you want actual regression tracking…

[04:43:00.0000] <Ms2ger>
Oh, is this all WebKit's fault?

[04:43:01.0000] <gsnedders>
Well, at least it looks exactly like WebKit's JS test framework, so I was assuming it was.

[04:46:00.0000] <gsnedders>
Also: I don't get how people don't bang heads against people claiming random crash bugs are security issues.

[04:49:00.0000] <gsnedders>
And, ah, how I've missed dealing with GWT output.

[04:55:00.0000] <Ms2ger>
So, what's the current thinking about http://dev.w3.org/2009/dap/file-system/file-writer.html ?

[04:59:00.0000] <asmodai>
hsivonen: Happen to know if FF fires events for the discarding of large images on a tab switch?

[05:02:00.0000] <Ms2ger>
To the page? No

[05:02:01.0000] <asmodai>
is there any other way to detect it?

[05:02:02.0000] <Ms2ger>
Shouldn't be

[05:02:03.0000] <Ms2ger>
You could try a timing attack

[05:09:00.0000] <hsivonen>
asmodai: no idea

[05:10:00.0000] <hsivonen>
annevk: regarding indexed db, clearly, there's no v1, either, as evidenced by whar Isreal said

[05:12:00.0000] <annevk>
well yeah, there's no v

[05:12:01.0000] <hsivonen>
asmodai: what's the use case?

[05:13:00.0000] <asmodai>
hsivonen: Was asking based on a tweet of a buddy of mine, I think he's working on his framework debugger again

[05:13:01.0000] <asmodai>
hsivonen: Trying to get his ass in here so he can just ask himself XD

[05:14:00.0000] <annevk>
maybe it's time for a new "red pill" post

[05:14:01.0000] <annevk>
on standards

[05:15:00.0000] <hsivonen>
annevk: go for it

[05:20:00.0000] <hsivonen>
XML ER is not on xml-dev yet

[05:52:00.0000] <pflock>
Does anyone know why the lines here all have the same color though I gave them different strokeStyle's? http://jsfiddle.net/u4Gpf/

[05:54:00.0000] <Philip`>
pflock: You need to call context.beginPath() before each new path

[05:54:01.0000] <pflock>
ah thanks ;)

[05:54:02.0000] <Philip`>
Otherwise you're drawing a path with 1 line, then extending the path to 2 lines and drawing all that again, etc

[05:55:00.0000] <pflock>
yes I noticed that he always colored them all in the last color I set, so that one overwrites the other colors, but I didn't know why

[05:55:01.0000] <pflock>
I thought context.stroke() already 'ends' the path

[06:04:00.0000] <annevk>
ok so far I've got

[06:04:01.0000] <annevk>
* living

[06:05:00.0000] <annevk>
* public domain

[06:05:01.0000] <annevk>
maybe developed in public is newish enough too

[06:06:00.0000] <Ms2ger>
* no telcons

[06:06:01.0000] <annevk>
ah yeah, asynchronous public decision making

[06:06:02.0000] <annevk>
nice one

[06:08:00.0000] <mhausenblas>
maybe add implementation-driven?

[06:09:00.0000] <Ms2ger>
Or in close cooperation with implementations, at least

[06:10:00.0000] <mhausenblas>
in this respect I'm rather radical, Ms2ger

[06:10:01.0000] <Ms2ger>
I'm not :)

[06:10:02.0000] <mhausenblas>
what's the point if it isn't implemented?

[06:10:03.0000] <mhausenblas>
why?

[06:10:04.0000] <Ms2ger>
Well, sure, it needs to be implemented

[06:10:05.0000] <mhausenblas>
implemented and implementable

[06:11:00.0000] <mhausenblas>
right

[06:11:01.0000] <mhausenblas>
I remember in horror the work in MPEG-7

[06:11:02.0000] <Ms2ger>
But it sounded like you were saying it had to be implemented before starting on a spec

[06:11:03.0000] <mhausenblas>
I was young and I needed the job

[06:11:04.0000] <mhausenblas>
mhm, sorta

[06:11:05.0000] <mhausenblas>
like impl - spec -impl - spec

[06:11:06.0000] <mhausenblas>
...

[06:12:00.0000] <mhausenblas>
of course you don't  know the entire space so it must be iterative

[06:12:01.0000] <mhausenblas>
dunno who said it but something along the line of 'any complex system evolved from a very simple on'

[06:13:00.0000] <Ms2ger>
Mm

[06:13:01.0000] <mhausenblas>
so: KISS(at least)  in the beginning and iterate

[06:13:02.0000] <mhausenblas>
s/simple on/simple one

[06:13:03.0000] <Ms2ger>
Agreed

[06:20:00.0000] <annevk>
I don't think implementor involvement is important to mention

[06:20:01.0000] <annevk>
if they're not involved

[06:20:02.0000] <annevk>
nothing happens

[06:22:00.0000] <annevk>
can anyone do a quick review? http://annevankesteren.nl/2012/02/standards-red-pill

[06:23:00.0000] <mhausenblas>
annevk I don't understand your logic

[06:24:00.0000] <mhausenblas>
in what you say it looks implementer involvment is an essential precondition, no?

[06:24:01.0000] <annevk>
what part?

[06:24:02.0000] <annevk>
yeah

[06:24:03.0000] <mhausenblas>
so how can it be *not* important to mention

[06:24:04.0000] <mhausenblas>
people often make the mistake to forget to externalise the most basic assumption

[06:25:00.0000] <annevk>
mkay

[06:25:01.0000] <mhausenblas>
because they seem to obvious

[06:25:02.0000] <mhausenblas>
right

[06:25:03.0000] <Philip`>
annevk: s/proof/prove/

[06:25:04.0000] <mhausenblas>
annevk, lemme know when you're done - happy to (re)tweet/G+ it

[06:26:00.0000] <annevk>
thanks to Philip` and your addition I guess it's done now

[06:26:01.0000] <mhausenblas>
cool

[07:24:00.0000] <kennyluck>
Language — US English is the standard

[09:51:00.0000] <jonnybarnes>
hey, has anyone got a good refrence list of XML references?

[09:51:01.0000] <StoneCypher>
google does

[09:52:00.0000] <jonnybarnes>
Looking at an RSS feed I've made with PHP and seeing a lot of &#13; entities and trying to find out what character thats meant to be

[09:52:01.0000] <Ms2ger>
CR

[09:52:02.0000] <StoneCypher>
so use an entity decoder

[09:52:03.0000] <jonnybarnes>
Cheers Ms2ger

[09:52:04.0000] <StoneCypher>
or give a man a fish

[09:53:00.0000] <jonnybarnes>
StoneCypher: any recomendations for entoty decoders?

[09:53:01.0000] <Ms2ger>
/me slaps StoneCypher around a bit with a fish

[09:53:02.0000] <jonnybarnes>
*entity

[09:53:03.0000] <StoneCypher>
jonnybarnes: google does

[10:08:00.0000] <Philip`>
jonnybarnes: http://www.fileformat.info/info/unicode/char/search.htm?q=%26%2313%3B&preview=entity should do it for numeric ones

[10:08:01.0000] <Philip`>
(&#13; means decimal 13, which is hex 000D, so it's Unicode character U+000D)

[10:11:00.0000] <jonnybarnes>
cheers Philip`

[12:03:00.0000] <hsivonen>
cute how DRM proponents don't like my use of the word adversary even though I used it because the proposal used that word

[12:19:00.0000] <StoneCypher>
they're adversaries of adversary?

[12:42:00.0000] <smaug____>
/me is glad he isn't following public-html

[12:42:01.0000] <smaug____>
Commenting "Encrypted Media proposal" would make me too angry

[12:42:02.0000] <Ms2ger>
I'm always glad I'm not following public-html

[13:35:00.0000] <Hixie>
wtf

[13:35:01.0000] <Hixie>
i have a sqlite table

[13:36:00.0000] <Hixie>
it has a column whose values are all TRUE

[13:36:01.0000] <Hixie>
i do a select on that table with a GROUP BY clause, and select the aforementioned column

[13:36:02.0000] <Hixie>
the result set has that column with the value NULL

[13:39:00.0000] <Velmont>
grrrrreat! Sure they're all TRUE?

[13:39:01.0000] <Hixie>
yes

[13:39:02.0000] <Hixie>
i've never set them, and i only just added the column with default true

[13:40:00.0000] <Velmont>
A+ stuff. I'd guess either a very strange behaviour or a good old bug. -- From what I've heard about SQLite it might actually be the first one...

[13:44:00.0000] <Hixie>
hm, i wonder what it's value actually is

[13:44:01.0000] <Hixie>
it returns TRUE

[13:44:02.0000] <Hixie>
but sqlite doesn't have a TRUE value...

[13:44:03.0000] <Hixie>
ok i replaced whatever values it had with 1 and now it works

[13:44:04.0000] <Hixie>
/me decides to move on in blissful ignorance

[15:50:00.0000] <gsnedders>
Object.defineProperty(String.prototype, "foo", {get: function(){"use strict"; print(typeof this);}}); "foo".foo; --- why is that object, and not string? 10.4.3 passes thisArg along directly, after 8.7.1 has invoked [[Call]] with the primitive value…

[15:50:01.0000] <gsnedders>
V8 claims string, SM/Carakan claim object.

[15:50:02.0000] <gsnedders>
I'm claiming SM/Carakan bug…


2012-02-26
[16:03:00.0000] <Dashiva>
gsnedders: You could look at the SM/Carakan source code and see if there's any explicit mention of thisArg

[16:36:00.0000] <gsnedders>
V8 never wraps primitive, SM/Carakan always do.

[16:36:01.0000] <gsnedders>
JSC follows SM/Carakan

[16:41:00.0000] <bga>
heh use strict :(

[21:17:00.0000] <kennyluck>
Does anyone have an idea what language this mail on www-archive is in? http://lists.w3.org/Archives/Public/www-archive/2012Feb/0016

[21:18:00.0000] <zewt>
rot13?

[21:30:00.0000] <kennyluck>
Interesting, haven't heard of that. (It turns out that this mail is about W3C process lol)

[00:46:00.0000] <hsivonen>
kennyluck: I wonder if a cleartext version of that one is going to appear on The Björn Höhrmann Project

[00:54:00.0000] <annevk>
you can use http://www.rot13.com/ or some such to decode

[00:54:01.0000] <annevk>
I should prolly update http://thebjoernhoehrmannproject.org/ with a pointer

[03:45:00.0000] <Velmont>
annevk: Wat is that site?

[03:51:00.0000] <annevk>
collection of epic emails written by Björn Höhrmann

[03:51:01.0000] <annevk>
well, pointers to them

[06:16:00.0000] <bga>
http://www.coverity.com/library/pdf/coverity-scan-2011-open-source-integrity-report.pdf

[06:47:00.0000] <kennyluck>
Does Björn Höhrmann write in rot13 often?

[06:48:00.0000] <Philip`>
Ab

[07:00:00.0000] <bga>
i wonder if anyone uses torrent client of Opera, remove it or make better

[07:01:00.0000] <Philip`>
/me doesn't see the intended value of using one that's built in to the browser

[07:05:00.0000] <zewt>
torrent client in a browser is onion-level bloat

[07:06:00.0000] <zewt>
"fuck everything, we're putting in a torrent client" http://www.theonion.com/articles/fuck-everything-were-doing-five-blades,11056/

[07:09:00.0000] <jgraham>
To be fair, I never notice the torrent client. Well I guess I noticed it the one time I downloaded a linux distro or something over torrent

[07:09:01.0000] <Ms2ger>
Philip++

[07:10:00.0000] <bga>
zewt i uses most of functional of Opera, rss/mail, irc, browser and may be even will use torrent if it will work :)

[07:10:01.0000] <Ms2ger>
Opera's torrent never worked for me either :(

[07:10:02.0000] <gsnedders>
/me has used it, because he almost never downloads torrents and can't be bothered getting another client

[07:11:00.0000] <jgraham>
Of course if it is broken it sucks, but calling it bloat when it has no UI is a bit absurd

[07:12:00.0000] <gsnedders>
It has UI. It has a whole two dialogs.

[07:12:01.0000] <gsnedders>
And a menu item.

[07:12:02.0000] <zewt>
so now feature bloat only applies to UI? heh

[07:12:03.0000] <Philip`>
Torrents are usually large files, so the time it takes to start up an external torrent client (or copy-and-paste a URL into an rtorrent command line or whatever) is generally relatively trivial, in contrast to e.g. normal HTTP downloads which benefit from the browser handling them, so I've never been lazy enough to use it

[07:13:00.0000] <jgraham>
Where's the menu item?

[07:13:01.0000] <gsnedders>
Oh, it appears it doesn't exist any more

[07:14:00.0000] <gsnedders>
There used to be one in the Tools menu.

[07:14:01.0000] <jgraham>
zewt: Well I hardly imagine it is consuming many resources when you're not using it

[07:14:02.0000] <jgraham>
So it's hard to know what metric your using

[07:14:03.0000] <jgraham>
*you're

[07:15:00.0000] <jgraham>
But I don't think it is bloat by any metric I can think of

[07:15:01.0000] <zewt>
"features that don't belong in a browser", i'd expect people here to know what "bloat" means ...

[07:15:02.0000] <jgraham>
How do you define "belong in a browser"?

[07:15:03.0000] <jgraham>
Is handling ftp bloat?

[07:15:04.0000] <zewt>
irc sure as hell is

[07:15:05.0000] <zewt>
heh

[07:16:00.0000] <gsnedders>
Gopher?

[07:16:01.0000] <zewt>
that's just a time portal

[07:16:02.0000] <divya>
hahaha

[07:16:03.0000] <jgraham>
Well I'm not going to defend all of Opera's UI, but torrents seem like a particularly strange choice to attack because they seem exactly analogous to ftp

[07:17:00.0000] <zewt>
torrents are (usually) used for large file downloads; browsers have never handled those worth anything

[07:19:00.0000] <zewt>
though the extent that's still true is surprising--Chrome, in 2012, won't resume interrupted downloads

[07:19:01.0000] <bga>
zewt but if browser has support of download resume?

[07:19:02.0000] <jgraham>
Right, they don't make great ftp clients either. But if you are a typical user you probably don't care so much about having a top notch client as about being able to get at content without having to have a collection of geeky tools

[07:20:00.0000] <jgraham>
(primarily because you don't understand the concept of protocols anyway and don't really see why some files would have to be downloaded in one program and some in another)

[07:21:00.0000] <zewt>
torrents are inherently hard for people who don't understand them, because the whole "let it keep running" thing is a bit hard to manage

[07:21:01.0000] <Velmont>
Yes. I like the torrent client, -- I've used it to download big files, -- a distro and a movie once before.

[07:22:00.0000] <Velmont>
And from what I've heard, features that isn't used isn't activated at all, so they don't really bind up computer resources.

[07:22:01.0000] <Velmont>
But the problem is ofc if they require attention and thus human resources at Opera in order to maintain.

[07:23:00.0000] <jgraham>
zewt: the people who are going to be running it in a browser are never going to want to do that anyway

[07:23:01.0000] <zewt>
Velmont: that's a very poor excuse against bloat

[07:23:02.0000] <zewt>
jgraham: then they shouldn't be using torrents, because if tons of people don't do that, the system breaks

[07:23:03.0000] <Velmont>
zewt: And Opera download is smaller than all other main browsers.

[07:23:04.0000] <zewt>
opera does allow files to seed ... right?

[07:23:05.0000] <bga>
Velmont including ed2k in Opera will be good too

[07:24:00.0000] <Velmont>
bga: I don't know what that is. It has to be somewhat useful.

[07:24:01.0000] <bga>
big p2p network

[07:24:02.0000] <Velmont>
zewt: Nope. It works very well without. When you're downloading, you are uploading at the same time.

[07:25:00.0000] <zewt>
uh

[07:25:01.0000] <zewt>
okay opera just lost a serious chunk of points

[07:25:02.0000] <jgraham>
zewt: The idea that a system that is primarilly used for copyright infringement is subject to a tradegy of the commons is hillarious to me

[07:26:00.0000] <zewt>
jgraham: that's a pretty poorly-disguised excuse for an implementation (seemingly) willfully breaking a system

[07:26:01.0000] <Velmont>
zewt: BitTorrent helps against spikes in people who want the resource. -- So you would always put up a seed-box just as you put up a web server, you have that seeding at all times, just as your web server. -- And when 1 person downloads, BT doesn't help. But if 2 people do, it helps.

[07:27:00.0000] <Velmont>
Also, if you're suddenly slashdotted or whatever, like nrkbeta was with their huge raw video files from bergensbanen, then bittorrent really really helps.

[07:27:01.0000] <zewt>
Velmont: i know how bittorrent works; and if you think it's okay for a client to, by default, not perform seeding, then you do not

[07:27:02.0000] <Velmont>
And for granda, it's very nice to be able to just click that link and have it be downloaded without extra noise.

[07:28:00.0000] <zewt>
yes, nice for them, and screw everyone else, right?

[07:28:01.0000] <Velmont>
zewt: ...? Why? Nothing wrong in that. - You're bascially helping with the load. Using less bandwidth. -- It's better than the alternative; having a normal HTTP connection, then you (that are hosting) have to provide *all* the bandwidth.

[07:29:00.0000] <zewt>
but many people serving files with bittorrent are using it specifically because they don't personally *have* the bandwidth it would take to use HTTP; if they had to use HTTP, they wouldn't serve the file at all

[07:29:01.0000] <zewt>
this is a fundamental purpose of bittorrent: allowing people to share files that they would otherwise be unable to

[07:30:00.0000] <Velmont>
zewt: Opera does in fact seed after it's finished downloading. -- I'm just saying that using bittorrent is better than http, even for when people don't seed.

[07:31:00.0000] <gsnedders>
Opera seeds until it is stopped.

[07:31:01.0000] <zewt>
Velmont: well, you just said that it didn't, and that was the entire conversation we just had

[07:31:02.0000] <divya>
fwiw etsy uses bittorrent to populate their search indexes across all their servers

[07:31:03.0000] <zewt>
troll? heh

[07:32:00.0000] <divya>
http://codeascraft.etsy.com/2012/01/23/solr-bittorrent-index-replication/

[07:34:00.0000] <zewt>
divya: not the most ideal protocol for general-purpose syncing, though

[07:35:00.0000] <zewt>
if you have one big file then it'll probably work (and that's probably what they're doing), but as soon as you add or remove a file I think it'd end up resending everything

[07:36:00.0000] <divya>
i dont think you were discussing that :)

[07:36:01.0000] <zewt>
what? heh

[07:37:00.0000] <Velmont>
zewt: Oh, shit, sorry, I wasn't answering what I thought I was.

[07:39:00.0000] <Velmont>
zewt: Ahh, I see, I was saying nope to this -> 16:23 < zewt> jgraham: then they shouldn't be using torrents, because if tons of people don't do that, the system breaks

[07:43:00.0000] <zewt>
(that was in response to the notion of "most people downloading in a browser don't want to seed anyway")

[07:45:00.0000] <zewt>
(most people transferring with HTTP don't want to perform TCP exponential backoff, either, but they should anyway :)

[07:47:00.0000] <bga>
gsnedders btw may be its time to replace your torrent implementation to libtorrent?

[07:50:00.0000] <Velmont>
bga: And GPL Opera in the process? :P

[07:51:00.0000] <bga>
ok. another modern torrent lib w/o copyleft

[07:52:00.0000] <bga>
but currently i try to download torrent from thepriratebay using Opera and fail

[07:53:00.0000] <Velmont>
bga: They only use Magnet.

[07:53:01.0000] <Velmont>
bga: Which Opera doesn't support. -- Opera's torrent support go quite a way back. Then DHT was not as much used as today.

[07:55:00.0000] <bga>
added random torrent from isohunt, waiting

[07:56:00.0000] <Velmont>
bga: If they have a functioning tracker, it should work. -- Although the best test would be to download a torrent of Ubuntu, Fedora or something from their own sites.

[07:57:00.0000] <Velmont>
Normally sites that use Torrent for other stuff than warez doesn't need DHT. -- Opera is definately not very good at downloading from such sites. :-)

[07:58:00.0000] <bga>
ubuntu torrent work

[07:59:00.0000] <bga>
Velmont that why i ask to replace Opera torrent to modern

[09:17:00.0000] <Ms2ger>
If people were still looking for reasons to dislike ECMA: you can't submit tests to the JS test suite if you're not employed by a member

[09:17:01.0000] <gsnedders>
(The testsuite is currently entirely the IE tests and Sputnik)

[09:35:00.0000] <jgraham>
Ms2ger: Pretty sure they're not

[09:36:00.0000] <zewt>
Ms2ger: because everyone knows the problem with standards is it's too easy to get tests, right?

[09:36:01.0000] <Ms2ger>
Indeed

[09:36:02.0000] <zewt>
better make it harder so they're not inundated with them

[09:37:00.0000] <jgraham>
Presumably the idea is that if anyone could submit tests there would be less reason to become a member since you would have less control over whether your implementation was [perceived|certified] as conforming

[09:38:00.0000] <Philip`>
Maybe it simplifies copyright/patent handling, and they didn't imagine any non-members would care enough to submit tests so it wasn't worth any effort supporting that situation?

[09:39:00.0000] <gsnedders>
jgraham: It's for patent reasons, similar IP policies to submitting stuff for W3C specs, just it also applies to all ECMA activities, inc. testsuites

[09:39:01.0000] <gsnedders>
Basically, it's pre-existing ECMA rules and changing the rules of an organization like ECMA is far harder than one like the W3C

[09:41:00.0000] <Philip`>
With OpenGL, I believe you can't even see or run the conformance tests unless you're a member *and* pay an extra ~$10K fee

[09:42:00.0000] <zewt>
"open"gl

[09:45:00.0000] <zewt>
been trying to at least get it in the minds of the webgl guys to stop versioning specs, not really expecting much success, though

[10:45:00.0000] <AryehGregor>
Ms2ger, so launder the tests through someone employed by Mozilla?

[10:46:00.0000] <Ms2ger>
Meh, I don't care that much

[10:46:01.0000] <AryehGregor>
Or get Mozilla to employ you for $1/year.

[10:46:02.0000] <Ms2ger>
Hah

[10:46:03.0000] <zewt>
if they don't want tests that badly...

[10:46:04.0000] <AryehGregor>
You could promise to give it back as a tax-deductible donation if they didn't want to spare the dollar.

[10:47:00.0000] <AryehGregor>
Actually, I wonder if you could arrange to have a charity pay you $X/year for something and then make a binding agreement to give it all back as a donation.

[10:47:01.0000] <AryehGregor>
Hmm, X can't be too large or else it will exceed the 20% limit for deductions or whatever.

[10:47:02.0000] <AryehGregor>
But if X is just the right size, it might allow you to itemize when you otherwise couldn't.

[10:48:00.0000] <AryehGregor>
/me should consult a tax attorney if he wants to pursue this scheme

[10:48:01.0000] <jgraham>
Ms2ger: Set up an alternative testsuite to route around the damage?

[10:48:02.0000] <Ms2ger>
See my bitbucket account

[10:49:00.0000] <AryehGregor>
Is the official test suite actually any good?

[10:49:01.0000] <jgraham>
AryehGregor: yeah, not bad

[10:49:02.0000] <AryehGregor>
We should really be testing ES stuff in web test suites anyway.  Every host object should be tested to make sure stuff like Object.getPrototypeOf() works.

[10:49:03.0000] <jgraham>
Better than the official HTML 5 testsuite at least

[10:49:04.0000] <AryehGregor>
idlharness.js does a bunch of that, in fact.

[10:49:05.0000] <Ms2ger>
jgraham, you're not setting a very high bar there

[10:50:00.0000] <jgraham>
Well, no :)

[10:50:01.0000] <AryehGregor>
. . . is there an official HTML5 test suite other than canvas, btoa()/atob(), reflection, and testing that "src" in document.createElement("video")?

[10:50:02.0000] <jgraham>
Last time I looked, which was several years ago, it was broad but shallow

[10:50:03.0000] <Ms2ger>
I'd say getElementsByClassName, but I stole those for DOM4

[10:51:00.0000] <jgraham>
In that it tried to cover all the cases from the spec but didn't have the kind of test that real implementations fail

[10:51:01.0000] <jgraham>
(which the Mozilla unofficial testsuite does have)

[10:51:02.0000] <Ms2ger>
Our regression tests, or?

[10:51:03.0000] <jgraham>
Or rather the kind of test they fail after they

[10:51:04.0000] <jgraham>
claim to implement a feature

[10:51:05.0000] <jgraham>
Ms2ger: yes

[10:52:00.0000] <Ms2ger>
I'd hope those are any good :)

[10:52:01.0000] <jgraham>
Ms2ger: well they are written in the most hideous way :)

[10:52:02.0000] <Ms2ger>
I won't deny that :)

[10:52:03.0000] <jgraham>
But they are not entirely unsuccessful at finding bugs

[10:52:04.0000] <Ms2ger>
AryehGregor, sure, dataset :)

[10:52:05.0000] <AryehGregor>
I found a lot of bugs in non-Gecko browsers so far with Gecko's transition tests.

[10:53:00.0000] <jgraham>
Probably less good than "does facebook chat work" though :)

[10:53:01.0000] <AryehGregor>
Only a couple in Gecko, unsurprisingly.

[10:53:02.0000] <Ms2ger>
Didn't someone review some of my tests?

[10:53:03.0000] <AryehGregor>
Usually I find more Gecko bugs than that when I write the tests from scratch.

[10:53:04.0000] <jgraham>
AryehGregor: It depends if you count reviewed tests or submitted tests

[10:53:05.0000] <AryehGregor>
And hey, Ms2ger, some tests actually failed with my RangeException removal.

[10:53:06.0000] <jgraham>
]If you count submitted tests we are getting there]

[10:53:07.0000] <gsnedders>
It still the case that Test262 is broad but not deep.

[10:53:08.0000] <AryehGregor>
26829 ERROR TEST-UNEXPECTED-FAIL | /tests/content/base/test/test_bug454326.html | Didn't get BAD_BOUNDARYPOINTS_ERR exception! - got 11, expected 1

[10:53:09.0000] <gsnedders>
Better now than it was before, but still not great.

[10:53:10.0000] <gsnedders>
*It is

[10:53:11.0000] <Ms2ger>
AryehGregor, indeed, one test :)

[10:54:00.0000] <Ms2ger>
And some more code you need to remove

[10:54:01.0000] <AryehGregor>
Right.

[10:55:00.0000] <AryehGregor>
Yay for patches that remove lines on net.

[10:56:00.0000] <Ms2ger>
40822 ERROR TEST-UNEXPECTED-FAIL | /tests/dom/tests/mochitest/w3c/webapps/DOMCore/tests/approved/test_Range-mutations.html | Finished test

[10:56:01.0000] <Ms2ger>
Hrm

[10:56:02.0000] <AryehGregor>
?

[10:56:03.0000] <Ms2ger>
I think I can make that error message more helpful :)

[10:57:00.0000] <Ms2ger>
Timeout, probably

[11:03:00.0000] <Ms2ger>
AryehGregor, so I've been getting errors like "JavaScript error: http://mochi.test:8888/tests/dom/tests/mochitest/w3c/webapps/DOMCore/tests/approved/test_Range-cloneRange.html, line 155: paras is undefined" :/

[11:03:01.0000] <AryehGregor>
Is common.js being properly included?

[11:03:02.0000] <AryehGregor>
That's where paras is defined.

[11:04:00.0000] <Ms2ger>
Yeah

[11:04:01.0000] <AryehGregor>
Hmm.

[11:04:02.0000] <AryehGregor>
And it's not being run in a different scope or something?  paras should be a global.

[11:05:00.0000] <Ms2ger>
Ah

[11:07:00.0000] <Ms2ger>
So, Tests.prototype.setup bails out because this.phase >= this.phases.HAVE_RESULTS

[11:08:00.0000] <AryehGregor>
It works when you run not as mochitests, though?

[11:08:01.0000] <AryehGregor>
Are things being deferred till onload by the mochitest framework or something like that?

[11:11:00.0000] <Ms2ger>
Shouldn't be...

[11:12:00.0000] <AryehGregor>
How does content/base/test/test_bug498240.html possibly pass with my patch?  It tests that e instanceof RangeException.

[11:14:00.0000] <Ms2ger>
/me adds some more logging

[11:14:01.0000] <AryehGregor>
No, it doesn't, it has a function that runs that test but the function is never called.

[11:15:00.0000] <Ms2ger>
Indeed

[11:20:00.0000] <zewt>
need some kind of automatic code coverage test for ... tests

[11:20:01.0000] <zewt>
just for "you probably meant this to do something" warnings

[11:21:00.0000] <Ms2ger>
zewt, nah, the calls are commented out

[11:21:01.0000] <zewt>
Ms2ger: right, a coverage test would flag that

[11:21:02.0000] <Ms2ger>
This was intentional :

[11:21:03.0000] <Ms2ger>
:)

[11:22:00.0000] <zewt>
right, the coverage would make you comment out the code that's never being called as well, so it's clear

[11:22:01.0000] <zewt>
(of course it's not exactly easy to make a magic coverage test--you're always going to have error paths that will never be called)

[11:26:00.0000] <AryehGregor>
You should test error paths too.

[11:26:01.0000] <AryehGregor>
Unless maybe they're asserts or something.

[11:27:00.0000] <zewt>
well, error paths in tests are a bit hard to test, since they'll usually be "this should never happen" things, i think

[11:30:00.0000] <Philip`>
Test the tests by running them against a mock implementation of the tested API which intentionally fails

[11:31:00.0000] <zewt>
let's see how complicated we can make writing tests :P

[11:31:01.0000] <Ms2ger>
Let's ask ECMA

[11:45:00.0000] <AryehGregor>
Ms2ger, who'd you say I should ask for review on this patch?

[11:45:01.0000] <Ms2ger>
RangeException? sicking

[11:49:00.0000] <AryehGregor>
Okay.

[12:03:00.0000] <Yuhong>
I am beginning to think HTML5 even as a buzzword is a misnomer.

[12:03:01.0000] <Yuhong>
https://plus.google.com/113127438179392830442/posts/Rh17MhQrnud

[12:04:00.0000] <Yuhong>
http://geekmontage.com/funny-picture-how-to-tell-html-from-html5/

[12:06:00.0000] <divya>
Yuhong: the project is almost going live http://h5bp.github.com/caniuse/

[12:08:00.0000] <Yuhong>
Not my point. Why do you think "users don't talk in features"?

[12:11:00.0000] <divya>
coz they dont care?

[12:12:00.0000] <divya>
for most 'users' a browser is a means to an end, facebook, twitter google.

[12:14:00.0000] <Yuhong>
I am thinking of people talking about HTML5 as a single thing.

[12:15:00.0000] <Yuhong>
When it is not, as shown in the above two links.

[12:16:00.0000] <divya>
html5 is merely a time portal to modern times.

[13:08:00.0000] <Velmont>
divya: Hmmmm. But is there any way to say which API? Like, OK Chrome supports IndexedDB, and Firefox as well, but only Firefox 10 supports the new API.

[13:10:00.0000] <divya>
Velmont: yeah basically thats what it returns info for http://api.html5please.com/indexeddb.json?readable

[13:10:01.0000] <divya>
Velmont: rather not quite as refined

[13:12:00.0000] <Velmont>
Yes. Because this one would OK you if you use Chrome, or if you use Firefox older than 10, then.

[13:13:00.0000] <divya>
yeah this is from http://caniuse.com/indexeddb

[13:13:01.0000] <divya>
there is no way currently to monitor old syntax and new one.

[13:14:00.0000] <divya>
the bane of prefixes? :/

[13:14:01.0000] <Ms2ger>
Not really

[13:14:02.0000] <Ms2ger>
The bane of unfinished technology

[13:14:03.0000] <divya>
yeah or that :)

[13:14:04.0000] <divya>
i would consider this a 'support exists' kind of thing

[13:14:05.0000] <divya>
and it is up to the dev to offer the kind of support that is required.

[13:15:00.0000] <Ms2ger>
I guess you could treat it as "current IDB" and only mark Fx>=10 as supporting...

[13:33:00.0000] <Velmont>
Yea.

[13:53:00.0000] <annevk>
MikeSmith: yo yo

[13:53:01.0000] <annevk>
MikeSmith: why does http://platform.html5.org/ link to a dated version of XML?

[13:53:02.0000] <MikeSmith>
hey

[13:54:00.0000] <MikeSmith>
dunno

[13:54:01.0000] <annevk>
because nobody implements the 5th?

[13:54:02.0000] <MikeSmith>
ah yeah

[13:54:03.0000] <MikeSmith>
probably

[13:54:04.0000] <MikeSmith>
yeah

[13:54:05.0000] <annevk>
I sort of think we should implement the 5th, but fair enough

[13:54:06.0000] <MikeSmith>
I'm happy to change it

[13:54:07.0000] <zewt>
heh, a cute and bizarre firefox bug: i now have a cursor, everywhere

[13:54:08.0000] <annevk>
I saw Liam mentioning it in the "living standard" thread on G+

[13:54:09.0000] <annevk>
there's not really a good argument either way here I think

[13:55:00.0000] <annevk>
until everyone implements the 5th or everyone decides not to

[13:55:01.0000] <annevk>
or everyone implements XML-ER and the argument is made obsolete :)

[13:55:02.0000] <annevk>
booyah

[14:13:00.0000] <smaug____>
who decides what goes to chromium/chrome?


2012-02-27
[17:43:00.0000] <MikeSmith>
http://www.google.com/patents/US8074083 and http://www.google.com/patents/US20090077379 are interesting

[20:48:00.0000] <Hixie>
http://labs.dinahmoe.com/plink/#whatwg is impressive

[21:07:00.0000] <mhausenblas>
he he, playing with MikeSmith plink - reminds me of Beverly Hills Cop, thanks Hixie :P

[21:07:01.0000] <MikeSmith>
heh

[21:07:02.0000] <MikeSmith>
fun stuff

[21:07:03.0000] <mhausenblas>
yey

[21:07:04.0000] <mhausenblas>
hard for me to play with track pad though

[21:07:05.0000] <mhausenblas>
tried Axel F but failed :D

[21:08:00.0000] <mhausenblas>
oh oh, now we're screwed :P

[21:13:00.0000] <MikeSmith>
man I could gonna get carpal tunnel playing this with trackpad on my laptop

[21:14:00.0000] <Hixie>
this is something that would really benefit from a touch screen interface

[21:14:01.0000] <mhausenblas>
indeed

[21:15:00.0000] <mhausenblas>
can one record the stuff?

[21:15:01.0000] <mhausenblas>
really awesome, btw

[21:15:02.0000] <Hixie>
you'd have to just use something that can record audio output, i think

[21:16:00.0000] <mhausenblas>
right

[21:16:01.0000] <mhausenblas>
but nothing built-in, I'd have overlooked, no?

[21:17:00.0000] <Hixie>
gotta go

[21:17:01.0000] <Hixie>
it was fun though

[21:17:02.0000] <mhausenblas>
/me grabbing some coffee - TTYL

[21:17:03.0000] <mhausenblas>
yep!

[22:25:00.0000] <mhausenblas>
anyone got a sorta complete list of HTML media types (need it for https://github.com/mhausenblas/Racoon)?

[22:25:01.0000] <mhausenblas>
/me knows that he supposed to use BeautifulSoup, yes, thank you - I have my reasons, for now :) 

[22:26:00.0000] <mhausenblas>
MikeSmith maybe?

[22:27:00.0000] <mhausenblas>
hmmm http://www.whatwg.org/specs/web-apps/current-work/multipage/iana.html doesn't look too bad?

[22:30:00.0000] <MikeSmith>
mhausenblas: yeah, I guess that's what you need

[22:30:01.0000] <mhausenblas>
ta, MikeSmith

[22:55:00.0000] <asmodai>
So I see a new Opera mobile release with "improve tab session restore". I hope one of my issues was responsible for that. :D

[23:10:00.0000] <annevk>
can anyone take a look at the latest blog unapproved comment and approve/mark it as spam?

[23:10:01.0000] <annevk>
/me has a hard time deciding

[23:14:00.0000] <niloy_>
which blog, can I read?

[23:16:00.0000] <annevk>
the blgo is http://blog.whatwg.org/

[23:16:01.0000] <annevk>
but you need admin access to read the comment

[23:23:00.0000] <hsivonen>
hmm. no WebGL for Symbian in Opera Mobile. Is this because of API unavailability on Symbian or because not investing in a burning platform fully anymore?

[23:24:00.0000] <hsivonen>
s//of/

[23:26:00.0000] <niloy_>
maybe coz Symbian run on low end nokia mobiles

[23:28:00.0000] <hsivonen>
niloy_: the flagship before the current flagship ran Symbian

[23:28:01.0000] <hsivonen>
niloy_: unless you are making fun of Nokia and implying their high end is really low end

[23:29:00.0000] <niloy_>
I think the flagship before the current was Maemo/Meego :)

[23:29:01.0000] <hsivonen>
niloy_: they didn't treat N900 as their flagship. Not treating N900 as their flagship (and then N9) pretty much sums up what went wrong at Nokia.

[23:30:00.0000] <niloy_>
yes as a N900 owner, I completely agree with you

[23:31:00.0000] <hsivonen>
I sold away my Nokia 770 and N800 and moved to Android in the post-Elopocalyptic world

[23:32:00.0000] <niloy_>
hehe, but Android is nothing like N900, Android is too Google-centric

[23:34:00.0000] <niloy_>
hsivonen, you should try N9, reviews are pretty good

[23:34:01.0000] <hsivonen>
cool. Opera Mobile has made the splash screen high-res on Galaxy Nexus

[23:35:00.0000] <hsivonen>
niloy_: I tried it and concluded it would have been an awesome product if its software ecosystem had had a future.

[23:35:01.0000] <hsivonen>
niloy_: I want a phone that gets a MoCo-supported Firefox build

[23:36:00.0000] <hsivonen>
niloy_: so I bought a Galaxy Nexus instead of N9

[23:36:01.0000] <niloy_>
ohkay

[23:40:00.0000] <hsivonen>
hmm. WebGL perf in Opera Mobile on Android is about as unimpressive as Fennec's perf. Maybe Opera does readbacks from the GPU, too?

[23:41:00.0000] <hsivonen>
btw, is this the first time Opera ships a given Presto release on mobile before desktop?

[23:45:00.0000] <zcorpan>
no

[23:46:00.0000] <hsivonen>
zcorpan: ok. recently, it has seemed that Mobile was consistently a release behind desktop

[23:50:00.0000] <hsivonen>
in the DRM threads, dbaron's questions are unanswered as well as most of my questions...

[23:51:00.0000] <zcorpan>
iirc 2.2 shipped in mobile 9.7 before desktop 10.

[23:51:01.0000] <annevk>
zcorpan: in your grep, are you not missing matching for [1] or does \S* do that?

[23:51:02.0000] <zcorpan>
\S* does that

[23:51:03.0000] <hsivonen>
zcorpan: was 9.7 only available to Windows Mobile bundling partners or something?

[23:51:04.0000] <zcorpan>
hsivonen: dunno

[23:52:00.0000] <hsivonen>
I don't remember such a thing as 9.7 ever shipping on Symbian as a user-installable product

[23:52:01.0000] <hsivonen>
actually: did any 9.x release ship as user-installable on Symbian

[23:52:02.0000] <zcorpan>
maybe it was renamed to 10 after desktop had shipped

[23:52:03.0000] <hsivonen>
or did it go from 8.5 to 10?

[23:52:04.0000] <zcorpan>
/me doesn't know much about mobile releases

[23:53:00.0000] <hsivonen>
8.5 was the latest Symbian release for a very, very long time after 9 had shipped on desktop

[23:54:00.0000] <hsivonen>
unfortunately, after all the waiting, it turned out that 10 required so much more RAM than 8.5 that it wasn't really usable for most stuff on my Symbian phone

[23:54:01.0000] <hsivonen>
so I ended up using it only for W3C archives and banking

[23:54:02.0000] <hsivonen>
by the time 10 shipped, I had migrated to Mini for all other browsing on Symbian

[01:20:00.0000] <woef>
Sorry bout this, but might've missed the previous answer.

[01:20:01.0000] <woef>
I remember reading about a <template> (or was it <component> tag)

[01:21:00.0000] <woef>
Can't find it on Google though.

[01:21:01.0000] <woef>
Can't seem to locate it on the whatwg page either.

[01:29:00.0000] <heycam>
woef, http://dvcs.w3.org/hg/webcomponents/raw-file/tip/explainer/index.html

[02:01:00.0000] <woef>
heycam: awesome! Thanks :)

[02:03:00.0000] <annevk>
leave my @opera.com address at hotel, get email at @gmail.com

[02:03:01.0000] <annevk>
I wonder what is going on there...

[02:34:00.0000] <zcorpan>
so i guess opera mobile is first to ship getUserMedia?

[02:42:00.0000] <zcorpan>
Native HTML5: http://www.openwebdevice.com/

[03:17:00.0000] <bga>
http://careers.stackoverflow.com/jobs/17396/front-end-javascript-engineer-qmetric?a=kyirGaA

[04:40:00.0000] <kennyluck>
Can someone remind me what "treat as" means in CSS? Is it a used-value stage effect?

[06:16:00.0000] <bga>
http://d24w6bsrhbeh9d.cloudfront.net/photo/2971603_460s.jpg

[06:26:00.0000] <karlcow>
http://rng.io/

[06:26:01.0000] <karlcow>
>Ringmark is a web-based test suite that measures how well a mobile browser supports the capabilities that modern mobile web apps require.

[06:29:00.0000] <hsivonen>
karlcow: it says Firefox fails "Data URL supported"...

[06:29:01.0000] <karlcow>
heh

[06:29:02.0000] <hsivonen>
karlcow: anyway, pretty cool that it counts prefixed features as failures

[06:30:00.0000] <karlcow>
it seems it comes from Facebook Team, if I understood correctly

[06:31:00.0000] <hsivonen>
karlcow: I take that back, it seems to pass -webkit prefixes but not -moz. boo

[06:31:01.0000] <hsivonen>
not really helpful to minify a test suite

[07:07:00.0000] <zcorpan>
document.msCSSOMElementFloatMetrics = true; eh?

[07:14:00.0000] <zcorpan>
should we change offsetLeft from long to float?

[07:15:00.0000] <zcorpan>
have MS done research that shows that it'd Break the Web or do they just want to adhere to the spec and only violate it after setting a proprietary property?

[07:41:00.0000] <smaug____>
hmm, do I dare to look at html-public archives today

[08:02:00.0000] <hsivonen>
smaug____: it's just me and zcorpan posting today. We aren't scary.

[08:04:00.0000] <smaug____>
hsivonen: yeah, looks like so.

[08:47:00.0000] <jgraham>
http://rng.io - someone should tell CSSWG that 3D transforms is now "base functionality" of the web platform (according to facebook)

[08:50:00.0000] <[tm]>
"Also note that however painful an API change may seem now, it will only get more painful the longer it is put off."

[08:51:00.0000] <[tm]>
indeed

[10:23:00.0000] <kennyluck>
What does RFE in "canvas RFE" stand for?

[10:24:00.0000] <Ms2ger>
Request for enhancement?

[10:27:00.0000] <kennyluck>
ah, that makes sense.

[12:22:00.0000] <jgraham>
Hmm, is querySelectorAll supposed to return a live collection?

[12:23:00.0000] <jgraham>
Oh no

[12:24:00.0000] <jgraham>
The selectors API overrides DOM Core

[12:24:01.0000] <jgraham>
This seems confusing and wrong

[12:25:00.0000] <jgraham>
I guess this is the web, suck on it, or something

[12:34:00.0000] <smaug____>
jgraham: it would be horrible if querySelectorAll would return live collection

[12:34:01.0000] <jgraham>
smaug____: Oh yeah, that doesn't sound very sane

[12:34:02.0000] <smaug____>
it would be slow

[12:35:00.0000] <jgraham>
smaug____: But neither is having the "same" interface that can be live or static depending on how it is used

[12:35:01.0000] <smaug____>
yeah, that is strange

[12:35:02.0000] <jwalden>
Please leave your sense of logic at the door, thanks!

[12:36:00.0000] <jgraham>
You woud have thought that I would have learnt after almost 8 years :)

[12:54:00.0000] <annevk>
what is wrong with using an interface two ways?

[12:54:01.0000] <annevk>
that is one of the things we fixed in the DOM

[12:54:02.0000] <annevk>
and it's not DOM Core, it's DOM or DOM4

[13:08:00.0000] <jgraham>
annevk: It weakens the invariants you can assume from having an object of a specific type

[13:09:00.0000] <jgraham>
Also, there are so many more interesting things to worry about than what specs are called this week :)

[13:11:00.0000] <annevk>
but do you? :p

[14:35:00.0000] <Hixie>
so if we add hit regions to canvas

[14:35:01.0000] <Hixie>
and make it possibel to annotate such regions with aria roles

[14:35:02.0000] <Hixie>
it would make sense to make it possible for such hit regions to be hierarchical somehow

[14:35:03.0000] <Hixie>
since ATs use the tree for various purposes

[14:35:04.0000] <Hixie>
e.g. if you have a game menu that contained menu items

[14:36:00.0000] <Hixie>
you'd want the outer box to be a menu region, and the items to be menuitem regions as children of the menu region

[14:36:01.0000] <Hixie>
we can kind of do that automatically by seeing what role the pixels have that you're drawing to when you draw the menuitem region

[14:37:00.0000] <Hixie>
but what if you draw something unrelated over the top of it, like a popup window of some kind?

[14:37:01.0000] <Hixie>
just because it overlaps the menu doesn't mean it should be part of it...

[14:37:02.0000] <Hixie>
hmm

[14:38:00.0000] <karlcow>
-----

[14:38:01.0000] <karlcow>
><meta name="pinterest" content="nopin" />

[14:38:02.0000] <karlcow>
>What if I don't want images from my site to be pinned?

[14:38:03.0000] <karlcow>
>We have a small piece of code you can add to the head of any page on your site:

[14:38:04.0000] <karlcow>
— http://pinterest.com/about/help/

[14:39:00.0000] <Hixie>
i guess i could get have the user give the ID of the parent region...

[14:40:00.0000] <Hixie>
s/user/author/

[14:40:01.0000] <Hixie>
but then what if that parent region is long gone...

[14:40:02.0000] <Hixie>
hmm

[14:41:00.0000] <karlcow>
-----

[14:41:01.0000] <karlcow>
>The Yahoo-owned photo-sharing site has just added Pinterest’s newly introduced do-not-pin code to Flickr pages with copyrighted or protected images.

[14:41:02.0000] <karlcow>
— http://venturebeat.com/2012/02/24/flickr-pinterest-pin/

[14:43:00.0000] <annevk>
Hixie: is that the way AT APIs for the OS work?

[14:43:01.0000] <annevk>
Hixie: with some kind of tree backing?

[14:44:00.0000] <Hixie>
i guess i dunno

[14:44:01.0000] <Hixie>
i presume so

[14:44:02.0000] <Hixie>
pretty much every UI framework in existence uses a tree at some level

[14:44:03.0000] <annevk>
Hixie: it seems so immensely complicated for day-to-day developers

[14:44:04.0000] <Hixie>
e.g. a window contains its widgets

[14:44:05.0000] <Hixie>
a listbox contains its scrollbar

[14:44:06.0000] <Hixie>
etc

[14:45:00.0000] <annevk>
Hixie: e.g. I reckon if you explain this to Bruce Lawson or Jeremy Keith they might look a bit perplexed, but who knows

[14:46:00.0000] <annevk>
it's also very far from the goal of just having accessibility by default, but I guess we won't really get that high-level for the foreseeable future

[14:49:00.0000] <Hixie>
well the hit region thing i'm thinking of (see friday's discussion) is meant to really be used for people doing hit testing for mice users

[14:49:01.0000] <Hixie>
and we just hook aria roles into it

[14:49:02.0000] <Hixie>
and text labels for haptic feedback ATs

[14:51:00.0000] <Hixie>
ok so voiceover definitely has a tree

[14:51:01.0000] <Hixie>
go into system preferences, turn VO on

[14:52:00.0000] <Hixie>
then VO+up/down cycles through the title bar, the toolbar, and the main content area

[14:52:01.0000] <Hixie>
and while you have the main content area or toolbar selected, you can press shift+VO+down to drill down to the widgets in those areas

[14:53:00.0000] <Hixie>
at which point VO+arrow only stays within that area

[14:53:01.0000] <Hixie>
and Shift+VO+Up goes out to the outer level again

[14:53:02.0000] <Hixie>
not that that UI would make sense in canvas

[14:53:03.0000] <Hixie>
you'd use HTML for that

[14:53:04.0000] <Hixie>
but still

[14:54:00.0000] <Hixie>
one could imagine a similar scenario in canvas where you had say a RTS game with a bunch of buttons at the bottom and a play area at the top

[14:54:01.0000] <Hixie>
in which you had the same hierarchy

[14:55:00.0000] <Hixie>
maybe you give the parent by ID and a region survives until both it is obliterated _and_ all its children are obliterated

[14:55:01.0000] <Hixie>
(obliterated = drawn over by another region or clearRect()ed over)

[14:56:00.0000] <annevk>
oh Hixie btw

[14:56:01.0000] <Hixie>
and if you set a region as having a parent that has already been obliterated, hmm...

[14:56:02.0000] <annevk>
Hixie: do you need a bug for integrating mutation observers in HTML?

[14:56:03.0000] <annevk>
Hixie: now Chrome is shipping something in alphas and Gecko is about to have it implemented, it would be nice to have the last missing piece written down

[14:56:04.0000] <Hixie>
if you want me to do something to the spec, i need a bug or email, yeah

[14:56:05.0000] <annevk>
there's an email on www-dom

[14:56:06.0000] <Hixie>
if it's urgent let me know and i'll get to it

[14:56:07.0000] <Hixie>
k

[14:56:08.0000] <Hixie>
subject line?

[14:57:00.0000] <Hixie>
looks like i already deleted it, i have no pending mail for that list

[14:57:01.0000] <annevk>
the thread "[dom] mutation observers and HTML"

[14:57:02.0000] <annevk>
in particular http://lists.w3.org/Archives/Public/www-dom/2012JanMar/0066.html

[14:57:03.0000] <annevk>
but I think HTML should define the whole thing, the task and when the callback is invoked

[14:58:00.0000] <annevk>
because we don't want to depend on HTML

[14:58:01.0000] <Hixie>
k

[14:58:02.0000] <Hixie>
can you file a bug on that with what you think needs to be said?

[14:58:03.0000] <Hixie>
i'm happy to add it

[14:58:04.0000] <annevk>
I wish I knew the exact details; guess I can take another look at figuring it out

[14:58:05.0000] <annevk>
oh, aklein is around

[14:59:00.0000] <annevk>
aklein: yt?

[14:59:01.0000] <aklein>
annevk: indeed!

[15:01:00.0000] <annevk>
aklein: I'm trying to find some email that explains the microtask thing in detail

[15:01:01.0000] <annevk>
aklein: so I can file a bug on HTML that details what it needs to say

[15:01:02.0000] <annevk>
aklein: alternatively, you could file that bug

[15:01:03.0000] <Hixie>
heh

[15:01:04.0000] <aklein>
annevk: it seems like it's reasonable to delegate that to me

[15:01:05.0000] <Hixie>
ok i can't add an optional parent id argument to this addHitRegion function

[15:02:00.0000] <annevk>
aklein: https://www.w3.org/Bugs/Public/enter_bug.cgi?product=HTML%20WG&component=HTML5%20spec%20(editor:%20Ian%20Hickson)

[15:02:01.0000] <Hixie>
it would increase the number of possible overloads for this function to 18

[15:02:02.0000] <Hixie>
and y'all would shoot me

[15:02:03.0000] <annevk>
aklein: much appreciated

[15:04:00.0000] <Hixie>
maybe it's time to use a dictionary for the arguments to this function

[15:04:01.0000] <Hixie>
then y'all would think i was hip rather than crazy

[15:06:00.0000] <Hixie>
ok, yeah, this is much better

[15:07:00.0000] <aklein>
annevk: above you said you "don't want to depend on HTML"

[15:07:01.0000] <aklein>
annevk: does that mean DOM4 isn't supposed to reference HTML for this? instead HTML would reference DOM4?

[15:07:02.0000] <annevk>
aklein: yeah, HTML already depends on DOM

[15:08:00.0000] <annevk>
aklein: so HTML would detail how to make use of the record queue and the callback

[15:08:01.0000] <Hixie>
i just need to know what the semantics should be, btw, i can work out what that means in terms of spec edits

[15:09:00.0000] <Hixie>
no need to tell me which algorithms to change, etc

[15:11:00.0000] <annevk>
http://lists.w3.org/Archives/Public/public-webapps/2011JulSep/1622.html

[15:12:00.0000] <annevk>
"listeners are called at the end of outermost script invocation. If there are no script invocations, listeners are called at the end of Task."

[15:12:01.0000] <annevk>
is that clear enough?

[15:12:02.0000] <Hixie>
i think so

[15:13:00.0000] <annevk>
aklein: should DOM maybe not have a list of MutationObserver objects somewhere?

[15:13:01.0000] <Hixie>
assuming "outermost script invocation" means "when the entry script is set to null in the 'jump to a code entry-point' algorithm"

[15:13:02.0000] <annevk>
aklein: to determine callback order?

[15:13:03.0000] <Hixie>
ok here's what i'm thinking for addHitRegion() - multiline paste ahead, sorry:

[15:13:04.0000] <Hixie>
addHitRegion({ path: path, // Path to use as region description, defaults to the context's default path element: element, // Element to send events to; limited at hit-test time to specific interactive elements label: label, // DOMString to use as a label when the user strokes a touch display or focuses the hit region with an AT

[15:13:05.0000] <Hixie>
 id: id, // DOMStrig to use as the ID in events fired on the canvas for tahis region (MouseEvent gets new attribute for this purpose) ariaRole: ariaRole, // DOMString limited to specific roles, AT uses this to decide how to expose the region parentID: parentID, // unsigned long or DOMString, AT uses this to decide which region to use as this region's parent (defaults to canvas as parent) // all arguments optional // no-op if none of element, label, id, or ariaRole 

[15:13:06.0000] <Hixie>
 // only one of element and id may be present; either id is ignored if element is present, or an exception is raised if both are present // ariaRole must be present if parentID is present // if parentID refers to a region that no longer exists, exception? no-op? ignore parentID?

[15:13:07.0000] <Hixie>
});

[15:14:00.0000] <Hixie>
yikes that failed

[15:14:01.0000] <Hixie>
let me put it up somewhere

[15:14:02.0000] <Hixie>
http://wiki.whatwg.org/wiki/Canvas#Proposals

[15:16:00.0000] <annevk>
I'm not familiar enough with entry script to say

[15:24:00.0000] <annevk>
from reading about entry script it sounds like yes

[15:27:00.0000] <annevk>
Hixie: I don't see the spec it ever setting to null though

[15:29:00.0000] <jamesr__>
Hixie: why doesn't ariaRole sit on the element?

[15:30:00.0000] <Hixie>
annevk: s/null/no value/

[15:30:01.0000] <Hixie>
jamesr__: it's for the case of there not being an element

[15:30:02.0000] <annevk>
so yeah

[15:30:03.0000] <annevk>
it's only no value just in the beginning it seems

[15:31:00.0000] <annevk>
"Initially, there is no entry script. It is changed by the jump to a code entry-point algorithm."

[15:31:01.0000] <aklein>
annevk: ah, yes, I think it should (poking at our impl now...)

[15:34:00.0000] <aklein>
annevk: turns out we don't do that right now in WebKit...but it was definitely the intention

[15:34:01.0000] <annevk>
aklein: maybe file a bug on that too

[15:34:02.0000] <annevk>
on the spec that is

[15:34:03.0000] <annevk>
i'm about to get some sleep

[15:34:04.0000] <annevk>
and tomorrow it'll be a mix of skiing and doing not much at all

[15:34:05.0000] <aklein>
annevk: yeah, will file one on the spec and one on us, thanks for pointing it out

[15:35:00.0000] <aklein>
(it was discussed in email, just dropped the ball on implementation)

[15:44:00.0000] <aklein>
Hixie: did you still want a bug? or was annevk's quote from smaug____ sufficient?

[15:45:00.0000] <Hixie>
bug please

[15:45:01.0000] <Hixie>
it's not so much to tell me what to do so much as to make sure i have it on my todo list

[15:45:02.0000] <Hixie>
(or e-mail ian⊙hc)

[15:45:03.0000] <Hixie>
(whatever is easier)

[15:45:04.0000] <Hixie>
(the bugs just generate bugmail which then ends up in my imap folder)

[15:47:00.0000] <annevk>
but the bugs can be tracked by everyone else

[15:47:01.0000] <annevk>
so they're nicer

[15:52:00.0000] <aklein>
filed https://www.w3.org/Bugs/Public/show_bug.cgi?id=16142

[15:54:00.0000] <Hixie>
thanks

[15:59:00.0000] <smaug____>
aklein: since you're here. what is the process in chromium; who decides what features go in?


2012-02-28
[16:00:00.0000] <smaug____>
(just wondering, since I don't how that works)

[16:00:01.0000] <aklein>
smaug____: there's no hard-and-fast rule, I'd say.

[16:01:00.0000] <Hixie>
hmmm

[16:01:01.0000] <smaug____>
aklein: I started to think about this when the DRM proposal was posted... I could imagine some developers are against it and some aren't

[16:02:00.0000] <Hixie>
drawing text _to_ a path isn't that useful if you can't fiddle with the path more than just adding stuff...

[16:02:01.0000] <smaug____>
though, perhaps DRM will go to Chrome only, if even there

[16:03:00.0000] <annevk>
smaug____: you okay with removing that readystatechange event?

[16:04:00.0000] <annevk>
smaug____: see public-webapps archive

[16:04:01.0000] <smaug____>
annevk: from where?

[16:04:02.0000] <annevk>
smaug____: the one that doesn't change state and is dispatched at the beginning of the send() method

[16:04:03.0000] <Velmont>
XHR baby

[16:04:04.0000] <annevk>
smaug____: doesn't signal change

[16:04:05.0000] <annevk>
hot

[16:05:00.0000] <smaug____>
annevk: I need to look at bugzilla

[16:06:00.0000] <zewt>
my condolences

[16:06:01.0000] <smaug____>
I think it has been used for something

[16:08:00.0000] <TabAtkins>
Hixie: The addHitRegion sketch looks okay.

[16:08:01.0000] <TabAtkins>
Hixie: Why distinguish between elements and ids?  Can't you just discriminate by type already, and fuse the two together?

[16:08:02.0000] <TabAtkins>
(I'm assuming that one would never use an Element as an id for their object.)

[16:09:00.0000] <annevk>
smaug____: please do

[16:12:00.0000] <smaug____>
annevk: can't find anything right now

[16:12:01.0000] <annevk>
k

[16:13:00.0000] <annevk>
if you find something let the list know

[16:13:01.0000] <annevk>
I think I'll make the change soonish

[16:14:00.0000] <smaug____>
annevk: ah, so the first event is dispatched in open()

[16:15:00.0000] <smaug____>
horrible API

[16:15:01.0000] <annevk>
yes

[16:15:02.0000] <annevk>
open changes from UNSENT to OPEN

[16:15:03.0000] <smaug____>
well, ok

[16:16:00.0000] <smaug____>
would be good to get feedback from MS

[16:37:00.0000] <Hixie>
TabAtkins: yeah, that's not a bad idea

[16:38:00.0000] <Hixie>
TabAtkins: hmm

[16:38:01.0000] <Hixie>
TabAtkins: what would you call the field?

[16:43:00.0000] <TabAtkins>
Hmm...

[16:43:01.0000] <TabAtkins>
refersTo

[16:46:00.0000] <Hixie>
actually, given the various weird ways these things interact, i think it's fine to have two fields

[16:47:00.0000] <Hixie>
it's not like merging those two would make it magically nicer

[16:47:01.0000] <Hixie>
it'd still be a mess of interdependencies

[16:48:00.0000] <TabAtkins>
I suppose, it just means you have to deal with the results when people specify both of them.

[16:49:00.0000] <TabAtkins>
Alternately, why can't someone specify both of them?

[16:49:01.0000] <TabAtkins>
Getting both a target and a hitid or whatever on the mouseevent?

[16:49:02.0000] <TabAtkins>
This might be useful if you've got an object backing some fancy behavior on your input.

[16:50:00.0000] <Hixie>
if you give an element, i'm thinking i should redirect the events to the element

[16:50:01.0000] <Hixie>
or at least duplicate events to the element

[16:50:02.0000] <Hixie>
if i duplicate i guess you can have an id also

[16:51:00.0000] <Hixie>
but there's plenty of other nonsensical combinations

[16:51:01.0000] <Hixie>
e.g. an element and a label, or an element and a role

[16:51:02.0000] <Hixie>
or a parentid that doens't exist, or a parentid and an element, or parentid and no role...

[16:53:00.0000] <TabAtkins>
Ooh, here's a use-case. You want to do a text input with a button in it for bringing up a unique input helper, sorta like how type=date is handled in some places.

[16:53:01.0000] <TabAtkins>
You want the button to have a parentid pointing to the input.

[16:53:02.0000] <TabAtkins>
So you need to give the input's hittesting zone an id.

[16:53:03.0000] <TabAtkins>
Or else pass an Element as a parentid.

[17:05:00.0000] <Hixie>
you lost me at "text input" :-)

[17:05:01.0000] <Hixie>
but yes

[17:05:02.0000] <Hixie>
you have a good point

[17:05:03.0000] <Hixie>
not sure how the ATs would handle that...

[17:21:00.0000] <Hixie>
http://wiki.whatwg.org/wiki/Canvas#Path_primitives

[17:29:00.0000] <Hixie>
i wonder how to modify fillText() and strokeText() to make it easier to find text on canvas

[17:30:00.0000] <Hixie>
at first glance adding an ARIA role argument seems obvious, but in practice there's never really an appropriate role for that kind of thing

[17:30:01.0000] <Hixie>
adding a boolean argument "yes make this text into a region implicitly" seems a bit non-intuitive

[17:30:02.0000] <Hixie>
but that's the behaviour one really wants

[17:30:03.0000] <TabAtkins>
Also: boolean args are the devil.

[17:30:04.0000] <Hixie>
that's what i mean by non-intuitive

[17:30:05.0000] <TabAtkins>
Just add an options object. YOU KNOW YOU WANT TO.

[17:30:06.0000] <Hixie>
(or do boolean args have other problems?)

[17:31:00.0000] <TabAtkins>
An anonymous bool floating around in your call signature is unreadable.

[17:31:01.0000] <TabAtkins>
That's the only problem.

[17:31:02.0000] <TabAtkins>
Also, optional args are usually the devil.

[17:31:03.0000] <Hixie>
fillText('April', 230, 55, { generateImplicitRegion: true })

[17:31:04.0000] <Hixie>
...seems like a non-starter to me

[17:31:05.0000] <TabAtkins>
Except for the name, sure.

[17:32:00.0000] <zewt>
nothin' wrong with boolean arguments :)

[17:32:01.0000] <zewt>
(was: re: we've had that discussion)

[17:32:02.0000] <TabAtkins>
That sentence was typed before your last sentence.  Treat it as the opposite if you want to read it in the provided context.

[17:32:03.0000] <Hixie>
zewt: tell that to the initMouseEvent() method

[17:32:04.0000] <Hixie>
TabAtkins: heh

[17:32:05.0000] <Hixie>
maybe the default should be to generate a region, and so you'd have to say:

[17:32:06.0000] <zewt>
Hixie: that has nothing to do with booleans; foo(0, 1, 0, 0, 1, 0, 1) is just as unreadable

[17:33:00.0000] <Hixie>
fillText('April', 230, 55, { generateImplicitRegion: false })

[17:33:01.0000] <Hixie>
zewt: yeah series of numeric arguments are equally bad

[17:33:02.0000] <zewt>
or nullables

[17:33:03.0000] <TabAtkins>
zewt: Yes. But virtually anyting else is at least *somewhat* more likely to imply a context than a bool.

[17:34:00.0000] <TabAtkins>
Hixie: That would meant that J. Clueless Coder generates a ton of regions for their manual text shadow.  That okay?

[17:34:01.0000] <Hixie>
...to continue my train of thought: then it doesn't matter if it's ugly

[17:34:02.0000] <Hixie>
TabAtkins: unclear

[17:34:03.0000] <Hixie>
TabAtkins: i'm guessing it's suboptimal, certainly

[17:34:04.0000] <Hixie>
TabAtkins: might be better than nothing

[17:34:05.0000] <TabAtkins>
Probably.  I suspect the vast majority of text is okay for this.

[17:34:06.0000] <Hixie>
TabAtkins: if they exactly overlap then the regions would get obliterated by each other

[17:35:00.0000] <TabAtkins>
They won't, in general - the point of a text-shadow is that you can see pixels of it around the text.

[17:35:01.0000] <Hixie>
one thing that would be weird with this is that it means AT users get more data than visual users in cases where lots of text is drawn almost overlapping

[17:35:02.0000] <Hixie>
since AT users could read even the overlapped text

[17:35:03.0000] <TabAtkins>
That seems like a good problem to have.

[17:35:04.0000] <Hixie>
yeah i'm certainly not crying about it

[17:36:00.0000] <Hixie>
just an interesting effect to consider

[17:36:01.0000] <TabAtkins>
Maybe 'decorative' for the argument name?

[17:36:02.0000] <Hixie>
probably about as clear as "generateImpliedRegion", and certainly cleaner...

[17:37:00.0000] <TabAtkins>
It's easy to explain it, and to use it religiously without knowing its intent.

[17:38:00.0000] <TabAtkins>
Which is a good property for this kind of thing, I think.

[17:40:00.0000] <Hixie>
how do you mean "use it religiously without knowing its intent"?

[17:40:01.0000] <Hixie>
i kinda expect that whatever we call it, 50% of usage will be wrong

[17:40:02.0000] <Hixie>
but that's better than 100% of usage being inaccessible

[17:40:03.0000] <TabAtkins>
You don't need to know a damned thing about AT and clickable regions to understand what someone means when they say "use it on text that's purely decorative, not meant to be read".

[17:41:00.0000] <TabAtkins>
As opposed to generateImplicitRegion, where you must first understand what a region is, why one may be generated implicitly, and in what case you want to suppress that.

[17:42:00.0000] <zewt>
("text that isn't meant to be read" is sort of a tricky concept, heh)

[17:42:01.0000] <zewt>
eula

[17:42:02.0000] <TabAtkins>
zewt: Heh, yeah.  But with a simple example like text-shadow, I think it's obvious what's meant.

[17:42:03.0000] <TabAtkins>
Or, like, drawing lots of text on a background just as a visual effect.

[17:47:00.0000] <Hixie>
TabAtkins: yeah that's fair enough

[17:48:00.0000] <Hixie>
ok bbl

[17:48:01.0000] <TabAtkins>
Also, I couldn't come up with an equally simple/short way to say the opposite in an option name.

[18:41:00.0000] <MikeSmith>
jgraham: dunno if you around, but about the security issue of pywebsocket being able to run arbitrary python code, that's only true of the standalone.py thing, as far as I can see

[18:42:00.0000] <MikeSmith>
because it uses CGIHTTPServer

[18:46:00.0000] <MikeSmith>
but what I have installed on w3c-test.org is run through Apache+mod_python

[19:13:00.0000] <nattokirai>
TabAtkins: just sent comments on your wording of the vars syntax issue

[19:30:00.0000] <w2xq>
New to the IRC, I understand from the Web site this is an alternative to W3C and a living version of HTML5. I'd like to ask a question on coding on a very simple Web site I use for bookmarks. How does one now "float:right" (from the old align) an image? Is ... style="width:88px;height:31px;float:right" src=... alt="..."> the correct syntax? TIA.

[19:31:00.0000] <StoneCypher>
did you try it

[19:31:01.0000] <w2xq>
yes, and it works, but I'm not sure if that is the correct format.

[19:32:00.0000] <w2xq>
Just trying to make my template complete.

[19:34:00.0000] <w2xq>
w2xq.com, StoneCypher.

[19:34:01.0000] <StoneCypher>
honestly

[19:34:02.0000] <StoneCypher>
if you can't even look up how a property is written

[19:34:03.0000] <StoneCypher>
prolly not the time to be making re-usable templates

[19:36:00.0000] <w2xq>
I have looked it up, numerous places, but I guess I haven't found the right site to answer the questions. I first started coding in 1993, but haven't kept up after closing my p/t biz in 1998.

[19:36:01.0000] <StoneCypher>
cool story.

[19:36:02.0000] <StoneCypher>
try the css documentation

[19:37:00.0000] <StoneCypher>
20 years should be enough to pick up on where to look, honestly

[19:37:01.0000] <karlcow>
w2xq: correct syntax.

[19:37:02.0000] <w2xq>
bought/been reading "CSS3" by Teague.

[19:37:03.0000] <w2xq>
Thank you karlcow.

[19:37:04.0000] <StoneCypher>
no you haven't.

[19:37:05.0000] <karlcow>
StoneCypher: no need to be arrogant, just ignore if you don't think you want to answer.

[19:38:00.0000] <StoneCypher>
/me sighs

[19:38:01.0000] <StoneCypher>
okay

[19:38:02.0000] <w2xq>
Stonecypher, sorry to insult you, just trying to get back up to reasonable speed.

[19:38:03.0000] <StoneCypher>
no you aren't

[19:38:04.0000] <StoneCypher>
but karlcow the enforcer is here to sling insults

[19:38:05.0000] <StoneCypher>
so have fun

[19:38:06.0000] <w2xq>
<sigh>

[19:39:00.0000] <StoneCypher>
"I've been reading this book on physics.  What's a particle again?  I need to work on my full matter simulation.  Don't be arrogant, just ignore me"

[19:41:00.0000] <w2xq>
Thanks again karlcow. gn

[19:42:00.0000] <karlcow>
nn

[22:42:00.0000] <hsivonen>
Is this used in a surprising way or is this just very incomplete? https://github.com/h5bp/html5please-api/blob/master/agents.json

[22:45:00.0000] <MikeSmith>
hsivonen: divya would be the one to ask I suppose

[22:47:00.0000] <zcorpan>
op_mini and op_mob seem to have their sniffers swapped

[23:11:00.0000] <zcorpan>
Hixie: call it ariaHidden:true

[23:11:01.0000] <Hixie>
interesting idea

[23:50:00.0000] <jgraham>
MikeSmith: In that case, it sounds excellent

[23:50:01.0000] <MikeSmith>
jgraham: hey

[23:51:00.0000] <MikeSmith>
one caveat is that it's not actually in Debian testing yet, so hasn't gone through Debian security review

[23:51:01.0000] <MikeSmith>
but there are no open Debian bugs around it

[23:52:00.0000] <jgraham>
I see. I could only find one documented exploit on the web, and that seemed to be fixed

[23:52:01.0000] <MikeSmith>
OK

[23:52:02.0000] <MikeSmith>
I think the Jetty version I have installed now is more likely to have security bugs than that python stuff

[23:52:03.0000] <MikeSmith>
the only version of Jetty packaged for Debian is version 6 something

[23:53:00.0000] <MikeSmith>
I think it's more than a year old

[23:53:01.0000] <MikeSmith>
maybe two years old

[23:53:02.0000] <MikeSmith>
and doesn't have WebSocket support at all, let alone any up to date with the current protocol spec

[23:55:00.0000] <MikeSmith>
so I had to install 7.6 from a .deb at http://repo2.maven.org/maven2/org/mortbay/jetty/dist/jetty-deb/

[23:55:01.0000] <zcorpan>
i hate it when this happens. https://github.com/h5bp/html5please-api/issues/53

[23:55:02.0000] <zcorpan>
how does github even manage to get *that*?

[23:56:00.0000] <MikeSmith>
zcorpan: ?

[23:56:01.0000] <zcorpan>
what i wrote was:

[23:56:02.0000] <MikeSmith>
what you did?

[23:56:03.0000] <zcorpan>
"html": "&shy;<style>....... <\/style><div class=\"caniuse\">...."

[23:56:04.0000] <zcorpan>
This is invalid HTML. Why the &shy;? Since the next thing is a block box, it doesn't do anything anyway.

[23:56:05.0000] <zcorpan>
It should be more like:

[23:56:06.0000] <zcorpan>
"html": "<div class=\"caniuse\"><style scoped>....... <\/style>...."

[23:57:00.0000] <jgraham>
In unrelated questions about github, how do they think that swallowing the / key for their own search is acceptable?

[23:57:01.0000] <MikeSmith>
zcorpan: weird

[23:57:02.0000] <zcorpan>
github--

[23:57:03.0000] <MikeSmith>
jgraham: ah they will get flamed for that

[23:58:00.0000] <jgraham>
MikeSmith: Thanks for doing all the hard work for the WebSockets stuff btw

[23:58:01.0000] <Philip`>
jgraham: Maybe they thought "Google Code's issue tracker already intercepts '/' and irritates Opera users hugely, why shouldn't we do the same"

[23:58:02.0000] <MikeSmith>
Alexis was doing that with the control-f key on caniuse.com but he finally changed it. which, glad he did because it was fucking annoying

[23:59:00.0000] <jgraham>
Philip`: It's not just opera, it's also Firefox

[23:59:01.0000] <Philip`>
/me has always used Ctrl+F when using Firefox, for some unknown reason

[00:00:00.0000] <jgraham>
In fact Opera is a little better because you can use . instead. Although it is annoying to have to remember to switch of course

[00:00:01.0000] <MikeSmith>
jgraham: didn't do much so far. though Jetty install was a PITA due to the fact that the init.d script is installs runs Jetty as root by default and the hooks it provides for making it it run as another user doesn't actually work

[00:02:00.0000] <MikeSmith>
so btw, I'm starting jetty on w3c-test.org like this: "sudo su -m -c /etc/init.d/jetty jetty"

[00:02:01.0000] <MikeSmith>
so I hope that's not as bad as running it as root

[00:02:02.0000] <zcorpan>
is there a trick to make github not scramble my comments in the future? like a [noparse] tag or [don'tfuckeverythingupsothisfuckerisn'tdiscouragedfromfilingfurtherbugs]

[00:04:00.0000] <zcorpan>
maybe i should just always use krijn as a proxy

[00:05:00.0000] <jgraham>
That miht not be very reliable if krijn stops hosting the logs in a few months

[00:05:01.0000] <zcorpan>
oh, i was hoping the domain would be moved to another machine

[00:06:00.0000] <jgraham>
In this specific case you could just hound Divya directly and mercilessly until she fixes the issue

[00:08:00.0000] <Philip`>
zcorpan: Seems to work better if you indent code by four spaces (at least when testing on http://github.github.com/github-flavored-markdown/preview.html)

[00:09:00.0000] <zcorpan>
Philip`: thanks. i guess i should write a userjs that indents all my lines on github

[00:09:01.0000] <Philip`>
Oh, just noticed that page is deprecated, so don't trust it

[00:26:00.0000] <krijn>
zcorpan: that is the case

[00:27:00.0000] <krijn>
jgraham: I'm not going to stop hosting them

[00:28:00.0000] <krijn>
Small chance I'll not be able to add new ones, but the old archives will be up for as long as I can. Also talking to annevk5 about backups and a new service. No worries!

[00:29:00.0000] <zcorpan>
krijn: cool!

[00:35:00.0000] <jgraham>
krijn: Good good :)

[00:51:00.0000] <MikeSmith>
hsivonen: has there been no change in status on the licensing of the IANA language-subtags and charset registries?

[00:51:01.0000] <MikeSmith>
hmm, or actually, maybe there doesn't need to be

[01:02:00.0000] <charlvn>
krijn: let me know if i can do something to help out, i have plenty free time on my hands at the moment

[01:02:01.0000] <krijn>
Hey charlvn!

[01:02:02.0000] <krijn>
You're also still around :)

[01:02:03.0000] <charlvn>
krijn: i'm a hard bastard to get rid of :P

[01:02:04.0000] <krijn>
:D

[01:03:00.0000] <krijn>
Didn't I take it over from you like 5 years ago?

[01:03:01.0000] <charlvn>
krijn: yes that's correct! i used to host the logs on a server that was running below my desk - we had public ips on every box at the office

[01:03:02.0000] <charlvn>
krijn: then i left the company and that's why you took it over if i remember correctly

[01:04:00.0000] <krijn>
Yeah

[01:04:01.0000] <krijn>
Now I'm having the same problem ;)

[01:04:02.0000] <charlvn>
heh!

[01:04:03.0000] <krijn>
Way too much of the internet is running on home servers!

[01:04:04.0000] <charlvn>
i'm finishing with my current job tomorrow and then starting with my new job at the UT on thursday

[01:05:00.0000] <charlvn>
there we also have a public ip on every machine

[01:05:01.0000] <charlvn>
but i have a linux box at hetzner as well (running irssi+screen to do this irc) so i can use that

[01:05:02.0000] <krijn>
So far it looks like our internet connection is moving with us, so I'll just move the server and go on with it

[01:06:00.0000] <Philip`>
We should stop letting random individuals run servers, and get someone trusted like Google to host the whole internet

[01:06:01.0000] <charlvn>
right Philip` :P

[01:07:00.0000] <krijn>
Heh

[01:07:01.0000] <hsivonen>
hmm. html5.validator.nu is down...

[01:17:00.0000] <hsivonen>
and it's back now

[01:18:00.0000] <jgraham>
/me is started to wonder if hsivonen has been replaced by a bot

[01:23:00.0000] <hsivonen>
jgraham: there's a bot that watches html5.validator.nu and sends me an SMS when it seems to have crashed

[02:33:00.0000] <hsivonen>
Hixie: can you make a forward-lookings statement about <iframe sandbox> to respond to bz's question in https://bugzilla.mozilla.org/show_bug.cgi?id=729030#c1

[02:34:00.0000] <hsivonen>
why does https://github.com/h5bp/html5please-api/blob/master/agents.json match on lower-cased UA strings?

[02:35:00.0000] <hsivonen>
if lower-casing makes you match more stuff, aren't you just adding false positives?

[02:42:00.0000] <zcorpan>
can one of the dom editors make the "This box is non-normative. Implementation requirements are given below this box." styling less obnoxious? (copy the styling from html spec)

[02:44:00.0000] <zcorpan>
it currently looks like XXX WE HAVE AN UNRESOLVED ISSUE RIGHT HERE WE HAVE NO IDEA WHAT TO DO IF YOU HAVE ANY IDEAS WE'RE ALL EARS KTHXBYE

[02:45:00.0000] <zcorpan>
they also seem to need some more top padding to not make the text overlap

[03:05:00.0000] <craigbarnes>
Hey, has anyone ever suggested standardising something similar to what apple-touch-icon does?

[03:06:00.0000] <hsivonen>
craigbarnes: yes. rel=icon sizes='...'. already in the spec!

[03:06:01.0000] <craigbarnes>
hsivonen: oh awesome, thanks

[03:07:00.0000] <craigbarnes>
I tried searching but I guess not well enough

[04:42:00.0000] <woef>
Is it okay to be overwhelmed when reading the Web Components document?

[04:44:00.0000] <zcorpan>
sure. you just need to read it a few times more. then in random order, following any xrefs. then backwards at least once.

[04:46:00.0000] <woef>
Hehe.

[04:47:00.0000] <kennyluck>
Is that specific to Web Components? It seems to apply to all specifications.

[04:47:01.0000] <woef>
The thing with Web Components though is that it's hard to image its full impact.

[04:48:00.0000] <woef>
You can practically do a lot of the back-end implementations using that.

[04:50:00.0000] <woef>
I can define all the product html in a custom element, stuff all the product info in an array and assemble both on client side.

[04:52:00.0000] <woef>
Or am I talking jibberish?

[05:13:00.0000] <hsivonen>
ouch. the async livemark stuff rotted my bookmark import patch

[05:41:00.0000] <scott_gonzalez>
If I'm using html5lib to validate HTML documents, does it matter which tree builder is used?

[05:45:00.0000] <jgraham>
If you are using html5lib to validate html documents you are doing something wrong

[05:46:00.0000] <jgraham>
I thought we removed all the validation bits apart from parse errors

[05:46:01.0000] <jgraham>
If you only care about parse errors, it doesn't matter much, no

[06:11:00.0000] <MikeSmith>
does anybody recall if there was ever a bug raised to propose the capture attribute on input@type=file?

[06:12:00.0000] <scott_gonzalez>
jgraham: Is there a better tool to use for a CLI validator?

[06:12:01.0000] <scott_gonzalez>
I looked into the code for validator.w3. but it looks like it's specifically for CGI.

[06:26:00.0000] <hsivonen>
scott_gonzalez: the first person to want a CLI validator hard enough writes a CLI wrapper for validator.nu

[06:26:01.0000] <hsivonen>
scott_gonzalez: there's already a CLI tool that sends the data to a Web service instance of validator.nu

[06:27:00.0000] <scott_gonzalez>
hsivonen: I looked at that too, but only briefly.

[06:27:01.0000] <hsivonen>
a local CLI wrapper for validator.nu being a mock servlet container that talks with local streams instead of HTTP

[06:35:00.0000] <scott_gonzalez>
hsivonen: Would I only need the validator repo in that case? https://bitbucket.org/validator/validator

[06:40:00.0000] <MikeSmith>
hsivonen: the mock-servlet approach is pretty much exactly what some members of the W3C systems team are looking at implementing

[06:46:00.0000] <scott_gonzalez>
MikeSmith: Do you have a timeline for that?

[06:46:01.0000] <MikeSmith>
scott_gonzalez: no, I don't

[06:46:02.0000] <MikeSmith>
it's pretty clear how to do it

[06:47:00.0000] <MikeSmith>
I mean, pretty clear from looking at the code

[06:47:01.0000] <MikeSmith>
if you want to work on it yourself I would be glad to help

[06:47:02.0000] <MikeSmith>
I don't think any of the systems team have started working on it

[06:48:00.0000] <scott_gonzalez>
Thanks, I'll let you know if we decide to do this.

[06:49:00.0000] <scott_gonzalez>
I'm trying to find a way to validate all of the demo and test files for jQuery UI.

[06:49:01.0000] <scott_gonzalez>
We don't generally have java developers though :-/

[06:51:00.0000] <scott_gonzalez>
This probably doesn't help: https://bitbucket.org/validator/validator/src/6315b45b4827/sample/html5check.py#cl-149

[06:52:00.0000] <scott_gonzalez>
I guess that's just a sample page though, and we wouldn't need to handle any of that redirect logic anyway.

[06:56:00.0000] <MikeSmith>
scott_gonzalez: I think that html5check.py script is just using the REST interface to the service

[06:57:00.0000] <MikeSmith>
so it still requires you to have the service up and listening on some por

[06:58:00.0000] <MikeSmith>
but it would still get you what you need

[06:58:01.0000] <MikeSmith>
actually, you don't really even need a script for this

[06:58:02.0000] <MikeSmith>
you can use curl or whatever

[06:59:00.0000] <scott_gonzalez>
I'd prefer if we could avoid HTTP.

[06:59:01.0000] <MikeSmith>
well

[06:59:02.0000] <MikeSmith>
why?

[06:59:03.0000] <MikeSmith>
the service is pretty easy to build and install and run

[07:00:00.0000] <MikeSmith>
if you prefer to not use HTTP, then it would help to have some Java developers :)

[07:00:01.0000] <scott_gonzalez>
Honestly, I'd prefer if there was no install process. I'm not sure if we'll get there though, after looking at the existing tools.

[07:01:00.0000] <MikeSmith>
you can use the service from the command line with zero-install on your client side

[07:01:01.0000] <MikeSmith>
you just use the REST interface to http://validator.nu remotly

[07:01:02.0000] <scott_gonzalez>
I'd prefer something that works offline.

[07:01:03.0000] <scott_gonzalez>
There will probably be a lot of overhead using REST too.

[07:03:00.0000] <MikeSmith>
curl -s -F laxtype=yes -F parser=html5 -F level=error -F out=gnu -F doc=@SOME_DOCUMENT.html http://validator.nu

[07:04:00.0000] <MikeSmith>
scott_gonzalez: it would not be a large amount of work for a competent Java programmer to write a wrapper along the lines hsivonen described

[07:04:01.0000] <MikeSmith>
I know I could do it myself and I'm not even a competent Java programmer

[07:06:00.0000] <MikeSmith>
the wrapper passes a request object to that code and gets a response object back

[07:06:01.0000] <MikeSmith>
which looks like an HTTP response

[07:07:00.0000] <MikeSmith>
and the wrapper code just examines that response object and takes out what it needs and spits out the appropriate stuff to standard out

[07:54:00.0000] <MikeSmith>
https://github.com/scrooloose/syntastic/blob/master/syntax_checkers/html.vim#L40

[08:40:00.0000] <dglazkov>
good morning, Whatwg!

[08:46:00.0000] <annevk>
good afternoon dglazkov

[08:48:00.0000] <bga>
http://omploader.org/vY3cydQ/ie.png http://omploader.org/vY3cydA/chrome.PNG

[08:51:00.0000] <ksweeney>
not loading

[09:33:00.0000] <annevk>
arv: MikeSmith is maintaining the URL spec now

[09:33:01.0000] <annevk>
arv: not sure if he's cc'd to that bug

[09:33:02.0000] <annevk>
arv: my network is to slow to load the bug

[09:33:03.0000] <annevk>
too*

[09:33:04.0000] <arv>
annevk: I'll add him

[10:15:00.0000] <kennyluck>
"I stumble across the RDF work in W3C. I was wondering if that make sense for WebKit."

[10:18:00.0000] <annevk>
trolling like it's '99

[10:19:00.0000] <annevk>
oh haha

[10:19:01.0000] <annevk>
someone actually posted that to webkit-dev

[10:19:02.0000] <annevk>
good times

[10:20:00.0000] <bga>
http://paul.kinlan.me/we-need-to-kill-off-the-localstorage-api

[10:21:00.0000] <annevk>
what is it with all the premature strikes?

[10:21:01.0000] <annevk>
cf. deprecate registerProtocolHandler() & friend

[10:21:02.0000] <annevk>
s

[10:23:00.0000] <annevk>
Indexed DB works in no browser without prefix yet... Saying to use caution with localStorage okay, but you cannot really avoid it at this point...

[10:29:00.0000] <miketaylr>
let's just kill the whole thing while we're at it

[10:29:01.0000] <miketaylr>
adios web, it's been fun

[10:37:00.0000] <kennyluck>
Yeah, HTML5 features are so useless. Let's work on speccing pixel rounding in CSS.

[10:46:00.0000] <TabAtkins>
Hixie: fantasai and I are discussing the CSSElementMap, and think that there's no good reason to make it specific to CSS.  Any objection to renaming it ElementMap and just making it a generic additional way for elements to match id selectors?

[10:50:00.0000] <annevk>
kennyluck: someone should

[10:51:00.0000] <smaug____>
/me switches on angryness filter and tries to read public-html

[11:24:00.0000] <Hixie>
TabAtkins: i don't have a strong opinion on it, but note that we _just_ decided to once and for all ensure Element nodes would only ever have one ID

[11:24:01.0000] <Hixie>
TabAtkins: so i recommend looping in some DOM Core people first and seeing how angry they get, and basing your decision on that :-)

[11:24:02.0000] <othermaciej>
TabAtkins: what's CSSElementMap?

[11:25:00.0000] <annevk>
that feature always seemed a bit ugly to me

[11:25:01.0000] <annevk>
othermaciej: http://www.whatwg.org/specs/web-apps/current-work/#dom-document-csselementmap

[11:26:00.0000] <annevk>
TabAtkins: making it generic, would that affect getElementById()?

[11:27:00.0000] <othermaciej>
is there an email or other reference that explains the use case for this?

[11:29:00.0000] <annevk>
I think there might be on the WHATWG list

[11:29:01.0000] <annevk>
I never really looked into it much, hoping it would go away

[11:29:02.0000] <TabAtkins>
annevk: No opinion.  If it affects querySelector, though, it should probably affect gEBID too.

[11:30:00.0000] <annevk>
that seems very silly

[11:30:01.0000] <Hixie>
annevk: https://www.w3.org/Bugs/Public/show_bug.cgi?id=16142

[11:30:02.0000] <annevk>
i mean, those are very much perf-sensitive

[11:30:03.0000] <Hixie>
annevk: (see my comment)

[11:30:04.0000] <annevk>
Hixie: will try to load...

[11:30:05.0000] <annevk>
network here is good times

[11:30:06.0000] <annevk>
skiing is way better :)

[11:30:07.0000] <Hixie>
ah ok let me paste it here

[11:31:00.0000] <Hixie>
oh right you're skiing

[11:31:01.0000] <Hixie>
dude

[11:31:02.0000] <Hixie>
get on the slope

[11:31:03.0000] <Hixie>
:-P

[11:31:04.0000] <TabAtkins>
heading to lunch, will be back to discuss shortly

[11:31:05.0000] <Hixie>
annevk: no rush, don't worry about it

[11:31:06.0000] <othermaciej>
ah, I see, otherwise element() can't reference elements that are not in the document

[11:32:00.0000] <annevk>
Hixie: no worries, it's dark now, we're about to get some food

[11:32:01.0000] <Hixie>
on another note, i think 'decorative:true' is probably better than 'ariaHidden:true'

[11:32:02.0000] <Hixie>
upon reflection

[11:34:00.0000] <annevk>
Hixie: ah, I'll look into making such an algorithm later this week

[11:34:01.0000] <annevk>
Hixie: just got the email, bug still loading :)

[11:38:00.0000] <annevk>
smaug____: not going to make DOM depend on HTML

[11:40:00.0000] <smaug____>
ah

[11:40:01.0000] <smaug____>
I don't want MutationObservers to html spec

[11:41:00.0000] <annevk>
HTML is just going to contain "invoke observers" or some such

[11:41:01.0000] <annevk>
and DOM will contain a non-normative pointer to that

[11:44:00.0000] <Hixie>
hey hey hey! with this addHitRegion() thing on canvas we can have the UA automatically set the cursor based on where over the image you are!

[11:44:01.0000] <Hixie>
sweet

[11:45:00.0000] <annevk>
because the cursor is not there?

[11:46:00.0000] <Hixie>
because we already have regions, and i can just add 'cursor' to the dictionary

[11:46:01.0000] <Hixie>
from the canvas feedback: "An advantage canvas has over SVG is that it shares the same DOM and keyboard navigation model as HTML."

[11:47:00.0000] <Hixie>
/me wonders if the commenter is confused or if i'm just misunderstanding

[11:54:00.0000] <Hixie>
TabAtkins: heh, just saw glazou's reply. i guess css specs had better stop refering to RFCs...

[11:55:00.0000] <annevk>
SVG might have defined some kind of keyboard navigation at some point

[12:03:00.0000] <hsivonen>
https://twitter.com/#!/robert_sinclair/status/174583309203013634

[12:04:00.0000] <hsivonen>
Hixie: thanks for responding on the frame disabling bug

[12:21:00.0000] <TabAtkins>
What's a term I can use to refer to the "standard" fragment syntax, where it refers to the id of an element in the document?

[12:21:01.0000] <TabAtkins>
I'm trying to generically define that if that syntax is used but there is no element with the given id in the document, it's an invalid image.

[12:21:02.0000] <TabAtkins>
(And thus triggers fallback for image().)

[12:23:00.0000] <annevk>
I don't think such a thing exists

[12:23:01.0000] <annevk>
you could maybe look at what HTML has for usemap="" and adapt that

[12:27:00.0000] <TabAtkins>
On further review, it looks like I don't need to handle this case explicitly, though I do need to file a bug on SVG.

[12:52:00.0000] <smaug____>
rniwa: just curious, if you move input element in DOM, do you think undo/redo should still contain the data it contained in the original place in DOM

[12:52:01.0000] <smaug____>
or can we reset undo/redo

[12:52:02.0000] <smaug____>
(I think not, but I don't know what webkit does)

[12:53:00.0000] <smaug____>
(haven't tested anything yet)

[13:22:00.0000] <rniwa>
smaug____: you mean undo/redo inside the input element?

[13:22:01.0000] <rniwa>
smaug____: or undo/redo of input.value?

[13:23:00.0000] <smaug____>
rniwa: yes

[13:23:01.0000] <rniwa>
smaug____: yes... which?

[13:23:02.0000] <smaug____>
inside input element

[13:23:03.0000] <rniwa>
smaug____: I think so

[13:23:04.0000] <rniwa>
smaug____: isn't what browsers do today?

[13:23:05.0000] <rniwa>
isn't that*

[13:24:00.0000] <smaug____>
looks like so

[13:25:00.0000] <smaug____>
I'm just debugging a gmail leak

[13:25:01.0000] <rniwa>
smaug____: I think that's also what the spec implices

[13:25:02.0000] <rniwa>
implies*

[13:25:03.0000] <smaug____>
where something keeps stuff alive, and since there is also input and textarea elements with huge transaction lists, plenty of stuff is kept in memory

[13:26:00.0000] <smaug____>
rniwa: btw does chrome have some tools to check what all objects are kept alive

[13:26:01.0000] <smaug____>
js objects and dom nodes etc

[13:27:00.0000] <rniwa>
smaug____: developer time -> memory profiler?

[13:28:00.0000] <rniwa>
I mean

[13:28:01.0000] <rniwa>
"

[13:28:02.0000] <rniwa>
"Profiles" and heap snapshot

[13:28:03.0000] <cboyle>
anyone using http://www.iwebinspector.com with xcode 4.3 & lion?

[13:28:04.0000] <cboyle>
or could point me in the direction of someone who does

[13:28:05.0000] <smaug____>
can't see anything like that

[13:29:00.0000] <smaug____>
I might have just checked whether the gmail leak shows up in chrome too...

[13:30:00.0000] <rniwa>
smaug____: so... you open the developer tools

[13:30:01.0000] <rniwa>
smaug____: and then go to Profiles tab

[13:30:02.0000] <rniwa>
click the eye-mark

[13:30:03.0000] <smaug____>
I may have old chrome

[13:30:04.0000] <smaug____>
indeed

[13:30:05.0000] <rniwa>
smaug____: and then it'll give you a snapshot

[13:30:06.0000] <smaug____>
latest chrome doesn't run on this machine

[13:30:07.0000] <rniwa>
smaug____: oh oops :(

[13:30:08.0000] <rniwa>
smaug____: which machine?

[13:31:00.0000] <smaug____>
64bit Fedora 15

[13:31:01.0000] <smaug____>
don't recall now what the problem is...

[13:32:00.0000] <rniwa>
smaug____: huh... odd.

[13:32:01.0000] <rniwa>
smaug____: I think we normally support Fedora

[13:32:02.0000] <rniwa>
smaug____: /highfives another fedora user

[13:32:03.0000] <rniwa>
/me highfives*

[13:33:00.0000] <rniwa>
although i use ubuntu on my work machine these days  :\

[13:33:01.0000] <smaug____>
:)

[13:33:02.0000] <smaug____>
I've been using Redhat since 5.0

[13:33:03.0000] <rniwa>
oh well, only once a month or less...

[13:33:04.0000] <rniwa>
smaug____: that's about the time I started using I think...

[13:33:05.0000] <rniwa>
maybe it was 6

[13:34:00.0000] <rniwa>
yeah I think it was 6

[13:43:00.0000] <TabAtkins>
othermaciej: As well, I believe CSSElementMap was introduced during a feature-freeze for HTML, so it's only in the WHATWG copy.  Do you see any problem with throwing it into the HTMLWG copy?

[13:44:00.0000] <othermaciej>
TabAtkins: probably not but I can't always predict what would be controversial

[13:44:01.0000] <TabAtkins>
Yeah, of course.  Was just checking for Process-related hangups.

[13:44:02.0000] <othermaciej>
TabAtkins: you can reduce risk of drama by filing a bug and sending mail to the group about it, to reduce risk of anyone bitching after the fact

[13:44:03.0000] <TabAtkins>
Pretty sure there's already a bug about it.

[13:45:00.0000] <TabAtkins>
From when Hixie first added it.

[13:51:00.0000] <TabAtkins>
Ah, no, I only requested it in an email to WHATWG.

[13:51:01.0000] <TabAtkins>
I'll file a bug I guess.

[13:52:00.0000] <TabAtkins>
/me is sad we don't get emails for all bugs anymore.

[13:53:00.0000] <TabAtkins>
Hixie: Should I file the bug in the "HTML5 spec" component or "LC1 HTML5 spec"?

[13:54:00.0000] <annevk>
HTML5 spec

[13:54:01.0000] <Hixie>
i ignore the component entirely

[13:55:00.0000] <annevk>
if you do HTML5 spec there'll be an email and satisfy what othermaciej mentioned above

[13:55:01.0000] <othermaciej>
I forgot about bugmail

[13:56:00.0000] <Hixie>
does anyone know if svg defines how you parse errorneous d="" attributes for paths?

[13:56:01.0000] <Hixie>
i can't find it defined anywhere

[13:56:02.0000] <annevk>
in SVG 1.1 you are not allowed to display the SVG

[13:57:00.0000] <annevk>
</trollmode>

[13:57:01.0000] <Hixie>
i wonder how to define this without having to respecify everything

[13:57:02.0000] <Hixie>
(this = a method on canvas that takes a d="" specification)

[13:58:00.0000] <annevk>
Hixie: by filing a bug on SVG and making sure it gets fixed

[13:58:01.0000] <annevk>
Hixie: sounds like something they need to fix anyway and they can probably give you an answer as to what the interface will be a little quicker

[13:59:00.0000] <Hixie>
i didn't mean the parsing, though that's another issue

[13:59:01.0000] <Hixie>
i meant just in general, how do i make the canvas path be manipulated

[13:59:02.0000] <annevk>
ooh

[13:59:03.0000] <annevk>
hmm yeah dunno

[13:59:04.0000] <Hixie>
shepazu: yt?

[14:00:00.0000] <shepazu>
Hixie: on phone… gimme a few, please

[14:00:01.0000] <Hixie>
shepazu: np

[14:00:02.0000] <Hixie>
wonder what to call it

[14:00:03.0000] <Hixie>
"path" is a big ambiguous

[14:00:04.0000] <Hixie>
"svg path" is wrong, since this would be making it a non-svg path as well

[14:00:05.0000] <Hixie>
"addPathByDescription" is a bit long

[14:01:00.0000] <Hixie>
addPathData() ?

[14:01:01.0000] <Hixie>
annevk: ah, it does define it actually. if the path doesn't match the bnf, then the path is treated as empty.

[14:02:00.0000] <karlcow>
tracePath?

[14:02:01.0000] <Hixie>
sounds like it would mean the same as stroke()

[14:02:02.0000] <karlcow>
indeed

[14:02:03.0000] <Hixie>
which does something quite differnet :-)

[14:03:00.0000] <annevk>
just addPath(string) ?

[14:03:01.0000] <karlcow>
maybe littleThumbling

[14:03:02.0000] <Hixie>
annevk: addPath() sounds like it describes what addFile() does

[14:03:03.0000] <Hixie>
er

[14:03:04.0000] <Hixie>
addFill

[14:04:00.0000] <Hixie>
which i only called addFill() rather than addPath() because i also needed to add addStroke()

[14:04:01.0000] <annevk>
so what is the context for this method?

[14:04:02.0000] <annevk>
could it be new Path(string) ?

[14:04:03.0000] <Hixie>
same as .rect() or .moveTo()

[14:04:04.0000] <Hixie>
except it does everything in the path description

[14:04:05.0000] <annevk>
k

[14:05:00.0000] <karlcow>
ah no no annevk. It is Path(addressbook) :p

[14:05:01.0000] <annevk>
.addToPath ?

[14:05:02.0000] <Hixie>
.addWhatToPath? :-)

[14:05:03.0000] <Hixie>
addPathData() is fine, i think

[14:05:04.0000] <Hixie>
the d="" values are called "path data" in scg

[14:05:05.0000] <Hixie>
svg

[14:06:00.0000] <annevk>
k

[14:13:00.0000] <Hixie>
heycam|away: yt?

[14:14:00.0000] <shepazu>
Hixie: ok, what's up?

[14:14:01.0000] <Hixie>
shepazu: i've gotten requests for adding a mechanism to add paths to canvas using the svg path data syntax

[14:15:00.0000] <Hixie>
shepazu: i was wondering if you had any advice on how best i could do that without duplicating lots of requirements

[14:16:00.0000] <shepazu>
Hixie: happy to help, but not sure what you mean by duplicating requirements

[14:16:01.0000] <aklein>
annevk: per Hixie's comment on the microtask bug, sounds like we need some description of delivery in DOM4; is that something you can handle or shall I write something up?

[14:17:00.0000] <Hixie>
shepazu: well the easiest way to do it is just to not refer to svg but "reimplement" the parsing and drawing rules in the html spec, but referring to arguments and canvas subpaths rather than attributes and svg paths

[14:17:01.0000] <Hixie>
shepazu: but clearly that's suboptimal, because they might get out of sync, etc

[14:18:00.0000] <shepazu>
Hixie: would it help if SVG2 included some specific mapping/algos?

[14:18:01.0000] <shepazu>
fwiw, I've done this in script pretty trivially

[14:18:02.0000] <Hixie>
shepazu: depends on the timeframe, but yeah, that might be good

[14:18:03.0000] <shepazu>
Hixie: we could put a priority on it

[14:18:04.0000] <annevk>
aklein: if you can scribble some thoughts in the bug on adding a list of MutationObservers I can do the rest I think

[14:19:00.0000] <Hixie>
shepazu: that woudl be cool. should i write something up and send it to www-svg when i have a better idea what would be needed from this end?

[14:19:01.0000] <annevk>
aklein: I can probably do it either way, but there's more chance of it being right in one go if you add some insight

[14:19:02.0000] <shepazu>
Hixie: I'm juggling 17 cats right now, but if you were to write a short but detailed summary email to www-svg, I can make sure we talk about it on Thursday and write it up ASAP

[14:19:03.0000] <shepazu>
lol

[14:19:04.0000] <shepazu>
yes

[14:20:00.0000] <shepazu>
thanks

[14:20:01.0000] <Hixie>
shepazu: awesome, will do

[14:20:02.0000] <Hixie>
shepazu: no, thank you!

[14:20:03.0000] <shepazu>
Hixie: I'm pretty sure there's a lot of interest in the SVG WG to do something like this

[14:20:04.0000] <Hixie>
cool

[14:22:00.0000] <aklein>
annevk: may have to wait till next week, I'm shepherding the webkit -> chromium merge this week, but I'd be happy to add more on the bug if I get some free cycles

[14:23:00.0000] <Hixie>
annevk: do you know what i'm supposed to do instead of having an attribute with type double[]?

[14:23:01.0000] <Hixie>
annevk: i want you to be able to set it via   path.lineDash = [0,1,2,3]

[14:23:02.0000] <annevk>
aklein: k, I might get to it first then at the end of this week

[14:24:00.0000] <annevk>
Hixie: what's wrong with using double[]?

[14:24:01.0000] <Hixie>
i thought we weren't supposed to have attributes that returned arrays

[14:25:00.0000] <annevk>
no such attributes are fine

[14:25:01.0000] <annevk>
afaik

[14:25:02.0000] <Hixie>
oh

[14:25:03.0000] <Hixie>
what was it i wasn't supposed to do with array then?

[14:25:04.0000] <annevk>
you can not return sequences I think

[14:26:00.0000] <annevk>
ooh wait, maybe that is wrong because arrays can be mutated

[14:26:01.0000] <annevk>
hmm

[14:26:02.0000] <annevk>
sorry

[14:28:00.0000] <Hixie>
maybe i should just use explicit methods for getting and setting

[14:28:01.0000] <annevk>
it does seem way nicer to just set it to an array

[14:28:02.0000] <annevk>
that's what we should have done for fillStyle instead of CSS colors in retrospect I think

[14:29:00.0000] <annevk>
heycam: ^^

[14:30:00.0000] <heycam>
Hixie, shepazu, +1 to avoiding duplicating (and probably ending up with slightly different) path objects etc.!

[14:30:01.0000] <Hixie>
heycam: if i have an attribute that takes an array (path.lineDash = [0,1,2,3]) what type should i give it, assuming double[] is not a good answer?

[14:31:00.0000] <heycam>
Hixie, yeah sequence<T> means JS array, and you can't have attributes of that type. T[] means a special object that behaves like an object with index getters/getters and has a .length property

[14:31:01.0000] <heycam>
Hixie, hmm

[14:31:02.0000] <Hixie>
(or is double[] a good answer?)

[14:32:00.0000] <heycam>
Hixie, double[] would work -- its behaviour would be that you can assign a JS array, and that would be converted to an IDL array type.

[14:32:01.0000] <heycam>
but

[14:32:02.0000] <heycam>
it would mean that when you get the attribute again, it returns that platform array object, and not the JS array object you passed in

[14:32:03.0000] <heycam>
presumably the path object will never modify the array that is assigned there?

[14:33:00.0000] <Hixie>
correct

[14:33:01.0000] <Hixie>
but i also don't want the js author to be able to modify a random other array he created and have it change the path dash pattern

[14:33:02.0000] <heycam>
ah, interesting

[14:33:03.0000] <Hixie>
so i think what you describe is the behaviour i want?

[14:34:00.0000] <Hixie>
of course i might be wrong to want that behaviour :-)

[14:34:01.0000] <Hixie>
maybe i should just use a setter/getter?

[14:34:02.0000] <heycam>
it would do. it might be surprising that a different object (and not a JS Array) would be returned from getting the property.

[14:34:03.0000] <heycam>
a getter/setter might be clearer...

[14:34:04.0000] <Hixie>
k

[14:34:05.0000] <annevk>
what kind of array would be returned then?

[14:35:00.0000] <heycam>
getter and setter could both take sequence<double>

[14:35:01.0000] <heycam>
then you get a JS Array object returned

[14:35:02.0000] <annevk>
getter/setter seems somewhat ugly for JavaScript

[14:35:03.0000] <heycam>
and not the same one you put in

[14:35:04.0000] <heycam>
annevk, yeah I kind of agree...

[14:35:05.0000] <annevk>
why can't we return a JS array?

[14:36:00.0000] <heycam>
annevk, you mean from a double[] attribute?

[14:36:01.0000] <Philip`>
/me gets surprised when things like path.lineDash[1]=2 don't work

[14:36:02.0000] <heycam>
Philip`, yeah that's the reason sequence<T> isn't allowed as the type of an attribute

[14:36:03.0000] <annevk>
yes

[14:37:00.0000] <heycam>
annevk, well because double[] means this platform array object. in most cases you want the DOM object to respond to changes to the array(-like) object, or to dynamically expose array elements

[14:37:01.0000] <heycam>
annevk, and you can't do that with a regular JS Array

[14:39:00.0000] <annevk>
oh you cannot observe changes to it or something? okay

[14:39:01.0000] <heycam>
returning a JS Array from a function I think makes it clearer that if you modified it it's not necessarily going to cause the DOM object to do anything

[14:39:02.0000] <heycam>
yeah

[14:39:03.0000] <annevk>
I still think the path.lineDash attribute idea makes sense

[14:39:04.0000] <heycam>
/me wonders if there should be a write-only lineDash property :)

[14:39:05.0000] <annevk>
you will just iterate over the values

[14:40:00.0000] <heycam>
annevk, yeah… it would look weird if you need to use a function to set that, but a property for everything else

[14:40:01.0000] <annevk>
and maybe assign an array to it

[14:40:02.0000] <annevk>
especially if it has some default value most use will just be lineDash[x] = y

[14:41:00.0000] <heycam>
yeah if you don't declare the platform array object that it returns read only or fixed length, then that should work too

[14:41:01.0000] <heycam>
and since it inherits from Array.prototype, even path.lineDash.push(10) will work

[14:42:00.0000] <Hixie>
yeah but then why would  lineDash = a; a[0] = 2;  not work

[14:42:01.0000] <heycam>
it's just that (path.lineDash = someArray) != someArray… :)

[14:42:02.0000] <Hixie>
unless someArray was previously a lineDash value

[14:42:03.0000] <heycam>
Hixie, because the "a" there is a JS Array, and the type of value lineDash returns is a platform array object

[14:42:04.0000] <Hixie>
it's very confusing

[14:43:00.0000] <heycam>
I agree it might be too confusing

[14:43:01.0000] <heycam>
but you said yourself you don't want the JS array to change and to affect the path

[14:43:02.0000] <Hixie>
if i changed my mind on that would there be a way to support it?

[14:44:00.0000] <heycam>
not as nicely as you might like. what you could do is define the attribute to be of type "object", and then explain in prose what to do when you have a JS Array object in tehre

[14:45:00.0000] <Hixie>
yikes

[14:46:00.0000] <Hixie>
i think setLineDash() and getLineDash() are sounding better by the minute

[14:46:01.0000] <Hixie>
getLineDash() can even return a mutable double[], and setLineDash() can just be defined to always clone its argument

[14:46:02.0000] <Hixie>
so you can do getLineDash()[1] = 2

[14:46:03.0000] <Hixie>
or whatnot

[14:47:00.0000] <heycam>
yeah -- that would be just like an attribute of type double[], but maybe more understandable in terms of what's happening with the objects

[14:48:00.0000] <annevk>
so new WebSocket takes DOMString[]

[14:49:00.0000] <annevk>
maybe that should be sequence instead?

[14:49:01.0000] <heycam>
annevk, yeah, I tend to use sequence<> in those cases because it's clearer a copy is going to be made

[14:49:02.0000] <heycam>
but if it's just use as an argument, the behaviour will be the same

[14:49:03.0000] <annevk>
oh

[14:49:04.0000] <heycam>
the only differences is

[14:49:05.0000] <heycam>
*difference

[14:50:00.0000] <heycam>
if you can possible get DOMString[] objects elsewhere

[14:50:01.0000] <heycam>
which I guess you might be able to here!

[14:50:02.0000] <heycam>
you might want to write your prose so you don't save a reference to that platform array object

[14:50:03.0000] <annevk>
there are some proposals

[14:50:04.0000] <heycam>
(if you happened to word it that way)

[14:50:05.0000] <heycam>
yeah I saw

[14:50:06.0000] <heycam>
+1 for that

[14:51:00.0000] <annevk>
I still like the lineDash attribute better for consistency

[14:51:01.0000] <annevk>
I sort of think we'll reuse that pattern at some point

[14:52:00.0000] <annevk>
consistency with fillStyle, miterLimit etc. that is

[14:52:01.0000] <heycam>
it might be worth thinking about a type -- maybe even call it Array! -- in IDL that means just a reference to a JS Array

[14:52:02.0000] <Hixie>
annevk: except it's not really consistent with those

[14:52:03.0000] <Hixie>
annevk: if it clones on setting

[14:52:04.0000] <heycam>
but that you're responsible for describing when the values get read out of it

[14:52:05.0000] <Hixie>
annevk: but returns a reference

[14:53:00.0000] <Hixie>
abarth: yt?

[14:55:00.0000] <annevk>
Hixie: it seems somewhat unlikely many people will make that observation though unless they look at the specifics

[14:55:01.0000] <annevk>
though if we really think that's a bad pattern we should add something to Web IDL...

[14:56:00.0000] <Hixie>
abarth: if i want to encrypt something over the wire (say, video), is the best option AES256? I'm looking for something cryptographically sound, with low CPU requirements to decode, low memory requirements to decode, that can be done in streaming mode; i don't need integrity checking or authentication

[14:59:00.0000] <Hixie>
also not worried about side-channel attacks over the wire (e.g. in particular discovering the file size is not an issue)

[15:43:00.0000] <Hixie>
Philip`: other than compatibility, can you think of any reason why we shouldn't treat zero-length subpaths as points that get a line cap on either end? (for lineCap of round and square; butt would still not show anything)

[15:45:00.0000] <Philip`>
Hixie: What would be the orientation of square caps?

[15:47:00.0000] <Hixie>
interesting question

[15:48:00.0000] <Hixie>
i guess we'd just define it as x-axis aligned, pre-transformation

[15:48:01.0000] <Philip`>
That sounds arbitrary

[15:48:02.0000] <Hixie>
completely so

[15:49:00.0000] <Hixie>
http://home.comcast.net/~urbanjost/canvas/vogle4.html is a page asking for this

[15:52:00.0000] <Hixie>
wow, svg has a _lot_ of prose for text along a path

[15:53:00.0000] <Hixie>
i'll have to study this closer to see how much of this i actually need

[15:53:01.0000] <Hixie>
my naive impression is that this is not as complicated a problem as the svg text suggests...

[15:56:00.0000] <astearns>
no idea how SVG compares, but the text-on-path implementations I've worked on were both crazily complicated


2012-02-29
[16:01:00.0000] <Hixie>
don't you "just" draw the text on a straight line, figure out all the advances and the total width, then figure out the width of the path, then figure out the alignment, then "just" start at one end and put all the glyphs down, tangential to the path at the point, advancing the point by the advance you calculated earlier for each glyph?

[16:03:00.0000] <zewt>
do you warp the individual glyph boxes along the path?

[16:04:00.0000] <Hixie>
no

[16:04:01.0000] <Hixie>
at least not in svg

[16:04:02.0000] <astearns>
tangential to the path is one method, but it tends to produce collisions for concave paths

[16:04:03.0000] <zewt>
sounds like it'd be sort of fugly if it doesn't

[16:05:00.0000] <astearns>
glyphs can be unmodified (in which case you probably need to flex the spacing depending on the path characteristics)

[16:05:01.0000] <astearns>
or the glyphs can be transformed to match path characteristics

[16:08:00.0000] <Hixie>
for transforming the glyphs, i think we should "just" provide a warping method that takes on path and warps it along another path

[16:09:00.0000] <Hixie>
so you would draw the text straight, then curve it along another path

[16:10:00.0000] <abarth>
Hixie: AES128 should fine

[16:10:01.0000] <zewt>
couldn't you almost do that by hand, if there were a few basic hooks into glyph metrics?

[16:10:02.0000] <abarth>
Hixie: more specifically, AES128-CTR

[16:11:00.0000] <Hixie>
abarth: if i take a key as input, any harm in accepting 128, 192, and 256?

[16:11:01.0000] <abarth>
no harm

[16:11:02.0000] <Hixie>
zewt: there's no hooks into the path data currently

[16:11:03.0000] <Hixie>
abarth: cool, thanks

[16:12:00.0000] <zewt>
i suppose warping actual glyph rendering might just be really hard to implement, if font engines simply don't support doing that

[16:14:00.0000] <Hixie>
abarth: hm, i suppose AES-CTR means i can't do arbitrary seeking

[16:15:00.0000] <zewt>
iirc, it does allow that

[16:15:01.0000] <abarth>
you can

[16:15:02.0000] <Hixie>
abarth: oh ok

[16:15:03.0000] <abarth>
you just set the counter to whatever block you want

[16:15:04.0000] <Hixie>
k

[16:15:05.0000] <zewt>
pick your block number, encrypt it with AES, use that as the mask

[16:15:06.0000] <abarth>
it's CBC that doesn't allow seeking

[16:17:00.0000] <zewt>
http://tavmjong.free.fr/blog/?p=249

[16:17:01.0000] <zewt>
sort of neat

[16:21:00.0000] <heycam>
Hixie, SVG currently does glyphs tangential to the path, and yes it is kind of fugly with anything but gentle slopes

[16:22:00.0000] <heycam>
zewt, yeah would be cool to have actual warping of text like that

[16:22:01.0000] <heycam>
hard though :(

[16:22:02.0000] <zewt>
heycam: if implementors are willing to implement it

[16:22:03.0000] <zewt>
no point if they're going to throw up their arms and give up

[16:22:04.0000] <heycam>
yep

[16:22:05.0000] <zewt>
i wonder how it would look if you rendered the text to a large backbuffer, warp the buffer and then downscale

[16:22:06.0000] <heycam>
I tried writing a simple JS thing to subdivide the paths for the glyphs and warp them, ended up being horribly slow

[16:23:00.0000] <heycam>
zewt, that's an option I guess

[16:23:01.0000] <heycam>
could work on the gpu too

[16:23:02.0000] <zewt>
it wouldn't antialias/grid align nicely, but that's probably not going to happen anyway

[16:23:03.0000] <divya>
hsivonen: w.r.t api.html5please.com it is definitely not complete

[16:23:04.0000] <divya>
hsivonen: only reason UA detection exists is to return a smaller set of recommended browsers.

[16:23:05.0000] <Hixie>
zewt: again, for that kind of thing i don't think it makes sense to special-case text

[16:23:06.0000] <Hixie>
zewt: we should just add path warping

[16:23:07.0000] <divya>
e.g. no point returning IE for Mac/Linux users.

[16:24:00.0000] <divya>
hsivonen: or returning mobile browsers for desktop users.

[16:24:01.0000] <heycam>
Hixie, "just"

[16:24:02.0000] <divya>
hsivonen: also the point is to get out of the way of users when feature is supported and api is still called.

[16:24:03.0000] <Hixie>
heycam: as opposed to adding path warping and text warping

[16:24:04.0000] <zewt>
but if you can do that, is there a point to having a weaker, "non-warping" text warp in the first place?

[16:24:05.0000] <heycam>
Hixie, ok, same level of difficulty though

[16:24:06.0000] <Hixie>
heycam: same code, even, yeah

[16:25:00.0000] <Hixie>
zewt: this isn't text warping, it's text placement along a line that just isn't straight

[16:25:01.0000] <zewt>
but when would you want to do that, if you have another API that can do full-blown warping

[16:26:00.0000] <zewt>
provided that implementation is good enough that it never looks worse; that, I don't know

[16:26:01.0000] <Hixie>
looking around me, i see a lot of text drawn on very slight curves, that doens't look warped

[16:26:02.0000] <zewt>
but would they be worse if the glyphs themselves did warp? (i don't know the answer)

[16:27:00.0000] <Hixie>
hard to say

[16:27:01.0000] <Hixie>
the api would presumably be rather more complicated

[16:27:02.0000] <Hixie>
and it's not clear to me implementations are up for it

[16:27:03.0000] <Hixie>
but i'm certainly open to api suggestions and implementor commitments :-)

[16:28:00.0000] <heycam>
Hixie, btw if you come across things you want to reference from SVG 1.1 (like say glyph-along-path placement) that you find are badly specced or difficult to reference, let me know and I'll track them to fix in SVG 2

[16:28:01.0000] <Hixie>
heycam: k

[16:28:02.0000] <Hixie>
heycam: i dunno if text along a path i badly specced, i haven't tried speccing it yet. it just seems rather long and i can't work out why :-)

[16:29:00.0000] <heycam>
at a high level the algorithm is simple… just move along the path the advance distance between each glyph, place the glyph tangential to the path half way through its advance

[16:29:01.0000] <heycam>
there's probably a bunch of edge cases for path discontinuities

[16:34:00.0000] <Hixie>
bbl

[17:44:00.0000] <zewt>
exhausted with circular vtt "roll-ups" thread

[20:51:00.0000] <atdt>
anyone alive?

[21:48:00.0000] <MikeSmith>
atdt: hey

[21:50:00.0000] <atdt>
hi mike

[21:50:01.0000] <MikeSmith>
hi

[21:50:02.0000] <atdt>
so i have this idea i'd like to propose, but before spamming the mailing list i thought i'd run it by some people here, to see if it has legs or not

[21:50:03.0000] <atdt>
could i run it by you quickly?

[21:54:00.0000] <atdt>
well, i'll just explain quickly rather than ask. the idea has to do with <a> elements. it's very common practice to have links that have the URL they point to as their text node.

[21:55:00.0000] <MikeSmith>
yeah

[21:55:01.0000] <atdt>
the way they're written now is like this: <a href="http://www.example.com/">http://www.example.com/</a>

[21:55:02.0000] <MikeSmith>
right

[21:55:03.0000] <atdt>
that's rather ugly, imo. it'd be nicer to do one of the following:

[21:55:04.0000] <atdt>
<a>http://www.example.com/</a>

[21:55:05.0000] <atdt>
or <a href>http://www.example.com/</a>

[21:56:00.0000] <atdt>
the first idea would break the currently specced interpretation of hrefless a tags as being placeholders, but i don't think that use caught on -- i haven't encoutnered it, anyway, and it seems a bit bogus to me

[21:56:01.0000] <MikeSmith>
so do it that way in your source and use JS to transform it in the DOM

[21:57:00.0000] <atdt>
well, you're right that it's easy to do with JS, but i think it's a point in favor, not against (makes it easy to write a polyfill, which i did -- http://jsfiddle.net/atdt/tbSv6/)

[21:58:00.0000] <atdt>
it seems much more expressive, which makes it an attractive candidate for standardization, since it makes code easier to read, IMHO.

[21:59:00.0000] <MikeSmith>
well

[21:59:01.0000] <atdt>
note that current draft of the spec has a huge block of these right at the top: http://dev.w3.org/html5/spec/Overview.html :)

[21:59:02.0000] <MikeSmith>
making code easier to read is generally not a high priority or standardization

[22:01:00.0000] <atdt>
that surprises me, since it has been one of the most attractive things about recent revisions to the specs

[22:02:00.0000] <MikeSmith>
really? like what for example?

[22:02:01.0000] <MikeSmith>
also, what would you expect the behavior to be for <a>foo.html</a>

[22:02:02.0000] <MikeSmith>
or <a>README</a>

[22:02:03.0000] <atdt>
optional quotes around attribute values, optional closing tags for certain elements

[22:02:04.0000] <MikeSmith>
those are not new

[22:03:00.0000] <MikeSmith>
that is just HTML

[22:03:01.0000] <MikeSmith>
as it always has been

[22:04:00.0000] <atdt>
ok, the leaner prologue. maybe that's not new, either.

[22:04:01.0000] <MikeSmith>
no, that's new

[22:04:02.0000] <atdt>
i simply think that the way the <a> tag was designed reflects an earlier relationship with URLs wherein they were presumed to be unfriendly or barely-friendly

[22:04:03.0000] <MikeSmith>
and <meta charset=utf-8> is new too

[22:05:00.0000] <atdt>
so it was implicitly presumed to be ugly to show them

[22:05:01.0000] <MikeSmith>
eh?

[22:05:02.0000] <atdt>
er, let me try that again

[22:07:00.0000] <atdt>
i can't presume to know what exactly tim berners-lee et al had in their head, but i suppose that they couldn't imagine that http URIs will become as common as they did on the surface of things (business cards, other printed matter, etc.) but it's common now for the url to be not just an low-level implementation detail but part of the "human" identity of certain sites or pages

[22:07:01.0000] <atdt>
earlier today i noticed that GNU links to themselves as "GNU.org" in lots of places

[22:08:00.0000] <atdt>
so i take the <a> element to reflect this prejudice: you never want to just show a url; you always want to describe it in plain prose

[22:09:00.0000] <atdt>
but i don't think that captures the particular use i'm describing, which is very (very) widespread

[22:09:01.0000] <atdt>
did that make sense?

[22:11:00.0000] <atdt>
regarding your earlier question (regarding <a>README</a> and the likes), i propose that the textContents of <a> elements with a null (absent) href attribute be interpreted as the href

[22:13:00.0000] <atdt>
i don't remember encountering bare <a> tags in the wild. they're currently allowed as "placeholders", but as i mentioned earlier, i think that's bogus. (should we have <img> for placeholder images, etc.?)

[22:14:00.0000] <MikeSmith>
I'm sure there you'd find plenty of href-less <a> elements in Web content if you went looking

[22:15:00.0000] <atdt>
i did in a casual way over the past couple of days and couldn't find any

[22:16:00.0000] <atdt>
but even so: they're not functional

[22:16:01.0000] <atdt>
so this wouldn't be breaking them

[22:16:02.0000] <MikeSmith>
yeah, your proposal would make them functional

[22:16:03.0000] <MikeSmith>
sure it would break them

[22:16:04.0000] <MikeSmith>
it would change their existing behavior to something the authors didn't intend them to have

[22:16:05.0000] <MikeSmith>
anyway, as far as taking this to a mailing list, I think that'd be fine if you're just interested in having a philosophical discussion about it

[22:17:00.0000] <smaug____>
isn't <a name="foo"> pretty common

[22:17:01.0000] <MikeSmith>
but you are going to find that browser implementors have zero interest

[22:18:00.0000] <atdt>
smaug____: yeah, you'd exempt them

[22:18:01.0000] <MikeSmith>
smaug____: yeah but I assume atdt would say that the presence of the name attribute would cause the text content to be not handled as a URL

[22:19:00.0000] <atdt>
right

[22:19:01.0000] <smaug____>
strange special cases

[22:19:02.0000] <smaug____>
well, not that strange

[22:19:03.0000] <smaug____>
but makes the "API" behave a bit strangely

[22:20:00.0000] <atdt>
not that strange. in ff and chrome unstyled <a>foo</a> aren't underlined, but both <a href=...> and <a name=...> are

[22:20:01.0000] <atdt>
so there is already some distinction between links that point at something and links that aren't really links

[22:21:00.0000] <MikeSmith>
smaug____: multi-column support broken in nightly

[22:22:00.0000] <smaug____>
MikeSmith: hmm, do you have nested multicolumn ?

[22:22:01.0000] <MikeSmith>
no

[22:22:02.0000] <MikeSmith>
http://platform.html5.org/

[22:22:03.0000] <MikeSmith>
updating now to see if that fixes it..

[22:23:00.0000] <smaug____>
atdt: we're changing web platform all the time so much, that I wish at least some things stay stable, like <a> handling :)

[22:23:01.0000] <smaug____>
MikeSmith: have you filed a bug?

[22:24:00.0000] <MikeSmith>
smaug____: no, will check first to see if anybody else has

[22:24:01.0000] <MikeSmith>
I would be very surprised if it hasn't been reported already

[22:24:02.0000] <smaug____>
multicolumn is used rarely

[22:24:03.0000] <MikeSmith>
atdt: btw, <a href> is the same as <a href="">

[22:24:04.0000] <MikeSmith>
smaug____: really? I thought all the designers loved it

[22:25:00.0000] <atdt>
i use it :)

[22:25:01.0000] <smaug____>
I could be wrong, but I think it isn't that common yet

[22:25:02.0000] <smaug____>
roc would know better, but he is on vacation

[22:26:00.0000] <atdt>
smaug____: well, i don't have an answer for implementors' headaches, obviously. but this would standardize something around which there are currently many ugly hacks

[22:26:01.0000] <MikeSmith>
oh yeah, I heard roc was in the UK

[22:27:00.0000] <smaug____>
MikeSmith: https://bugzilla.mozilla.org/show_bug.cgi?id=731516

[22:27:01.0000] <smaug____>
(sorry, didn't remember your bugzilla email)

[22:27:02.0000] <MikeSmith>
smaug____: thanks

[22:27:03.0000] <MikeSmith>
mike⊙wo

[22:27:04.0000] <MikeSmith>
will cc myself there

[22:29:00.0000] <smaug____>
atdt: it is even more web devs headache, if the basic building blocks keep changing

[22:30:00.0000] <atdt>
smaug____: 99.99999% of <a> tags won't be affected. the fraction of a percent that do would acquire a behavior where there wasn't one before, which isn't as bad as all that

[22:32:00.0000] <atdt>
and it's very easy to add support to <a>http://gnu.org/</a> via a js polyfill -- not sure if you saw my link earlier http://jsfiddle.net/atdt/tbSv6/

[22:32:01.0000] <smaug____>
MikeSmith: you could add "don't use these web technologies" to your list

[22:32:02.0000] <smaug____>
Sync XHR in window context

[22:33:00.0000] <smaug____>
or perhaps W3C or WhatWG could have such list

[22:33:01.0000] <MikeSmith>
yeah

[22:33:02.0000] <MikeSmith>
though there is smaug____: http://html5please.com/

[22:33:03.0000] <atdt>
and finally, if you don't use a polyfill and just have a <a>http://www.example.com/</a> in a browser that doesn't implement the spec i'm proposing you would be left with something quite usable still: a link you can copy and paste.

[22:33:04.0000] <smaug____>
Sync XHR, perhaps localStorage

[22:35:00.0000] <MikeSmith>
hmm, yeah, localStorage

[22:36:00.0000] <MikeSmith>
smaug____: I'm editing https://github.com/h5bp/html5please/blob/master/posts/localstorage.md now

[22:37:00.0000] <MikeSmith>
what should I add?

[22:37:01.0000] <MikeSmith>
I don't know if "race condition" is the right way to explain it in this context

[22:38:00.0000] <smaug____>
warning about using sync API

[22:38:01.0000] <smaug____>
the situation is not good though

[22:39:00.0000] <smaug____>
since IndexedDB isn't available everywhere yet

[22:39:01.0000] <smaug____>
but UI thread shouldn't have sync data fetching APIs

[22:40:00.0000] <paul_irish>
MikeSmith: thx for that, and good call on making a note along those lines.

[22:40:01.0000] <MikeSmith>
oh hey paul_irish

[22:41:00.0000] <atdt>
heyoo paul

[22:41:01.0000] <MikeSmith>
yeah, I will take a shot at the wording and send a pull request

[22:41:02.0000] <MikeSmith>
paul_irish: feel free to change it however you want of course

[22:41:03.0000] <paul_irish>
awesome.  atdt, hey ori

[22:41:04.0000] <paul_irish>
certainly.

[22:44:00.0000] <atdt>
MikeSmith: http://paul.kinlan.me/we-need-to-kill-off-the-localstorage-api "LocalStorage has poor querying capabilities, terrible performance, small storage in many browsers, crazily inconsistent eventing and a nasty habit of locking."

[22:44:01.0000] <atdt>
MikeSmith: i don't know the specifics, unfortunately

[22:44:02.0000] <MikeSmith>
yeah

[22:44:03.0000] <MikeSmith>
some of those are implementation shortcomings

[22:44:04.0000] <smaug____>
but the main problem is the API itself

[22:45:00.0000] <MikeSmith>
atdt: thanks for the link

[22:45:01.0000] <MikeSmith>
didn't know Paul had written this up

[22:45:02.0000] <smaug____>
MikeSmith: I assume you've seen this about sync XHR http://blogs.msdn.com/b/wer/archive/2011/08/03/why-you-should-use-xmlhttprequest-asynchronously.aspx

[22:45:03.0000] <smaug____>
8.4% is a huge number

[22:46:00.0000] <MikeSmith>
smaug____: had not seen that article

[22:46:01.0000] <paul_irish>
also http://updates.html5rocks.com/2012/01/Getting-Rid-of-Synchronous-XHRs

[22:47:00.0000] <paul_irish>
oh mike knows that one.

[22:47:01.0000] <MikeSmith>
paul_irish: yeah, the bugs there

[22:47:02.0000] <MikeSmith>
mandreel problem

[22:47:03.0000] <atdt>
imho there's something of a missed opportunity with web workers.. most people see them as a source of complexity, suitable for crazy performance hacks

[22:48:00.0000] <MikeSmith>
dunno if the mandreel devs have figured out how to deal with that yet

[22:48:01.0000] <MikeSmith>
Jarred's comment

[22:49:00.0000] <MikeSmith>
"sync XHR still works in Workers (where it belongs).  Can you utilize workers and run Mandreel's processing in a worker, and post message notifications on UI updates?"

[22:49:01.0000] <atdt>
but because workers can block without blocking the UI they can actually simplify code because they allow you to write synchronous code

[22:51:00.0000] <atdt>
smaug____, MikeSmith: regarding the <a> thing i brought up earlier, were you at all persuaded? and do you think this has a snowball's chance in hell if i bring it up on the mailing list? i'm not especially interested in philosophical discussions if they don't stand a chance of having an impact

[22:52:00.0000] <MikeSmith>
atdt: no chance, imho :(

[22:52:01.0000] <MikeSmith>
it's an interesting "what if" kind of idea

[22:52:02.0000] <smaug____>
yeah

[22:53:00.0000] <smaug____>
I don't see it important enough to change the behavior

[22:53:01.0000] <MikeSmith>
the platform has a lot of suboptimal stuff we're stuck with

[22:54:00.0000] <atdt>
do you think it'd have a better chance if i had some hard data about how common bare <a> tags are?

[22:55:00.0000] <MikeSmith>
atdt: I honestly don't think it would make any difference

[22:55:01.0000] <MikeSmith>
but I think you might be surprised by the data you find

[22:55:02.0000] <MikeSmith>
there probably is already some data out there

[22:56:00.0000] <atdt>
MikeSmith: i'll look, for sheer curiosity if nothing else.

[22:56:01.0000] <MikeSmith>
I mean in some reports

[22:56:02.0000] <smaug____>
atdt: in your case, couldn't you just have <a href="http://foo.fi"></a> and style that a:empty:before { attr(href); }

[22:57:00.0000] <MikeSmith>
http://dev.opera.com/articles/view/mama-hyperlinks/#a

[22:57:01.0000] <MikeSmith>
3,304,834 out of 3,307,397 a elements have href attributes

[22:58:00.0000] <MikeSmith>
atdt: so you're right and I'm wrong :)

[22:58:01.0000] <atdt>
2,563 don't -- but i would bet my liver that the vast majority of those have name attr

[22:59:00.0000] <MikeSmith>
yeah, I'm surprised the number is that small

[22:59:01.0000] <atdt>
well, keep in mind that the very fact that bare <a>s aren't really treated as links means that web devs have the habit of implementing dummy links as either <a href="#"> or <a href="javascript:void()">

[23:01:00.0000] <atdt>
MikeSmith: i wonder if their data set is available

[23:02:00.0000] <MikeSmith>
paul_irish: I was thinking about adding links on platform.html5.org to htmlplease, but it seems there are no IDs at htmlplease to link to :(

[23:02:01.0000] <paul_irish>
we have permalinks!

[23:02:02.0000] <MikeSmith>
atdt: I think their data was not publicly available

[23:02:03.0000] <paul_irish>
search for something

[23:02:04.0000] <paul_irish>
and there's a Link to This

[23:02:05.0000] <MikeSmith>
paul_irish: ah, OK

[23:02:06.0000] <paul_irish>
thing

[23:03:00.0000] <MikeSmith>
ah, OK

[23:03:01.0000] <MikeSmith>
cool

[23:03:02.0000] <MikeSmith>
I shall use that

[23:05:00.0000] <atdt>
anyhow, thanks very much for the useful input, all. i think i'll try to find some more hard data and reassess.

[23:06:00.0000] <atdt>
smaug____: just noticed your suggestion above. yeah, that might do the trick. i'll have to think about it

[23:07:00.0000] <smaug____>
atdt: seems to work in Gecko and Opera

[23:07:01.0000] <smaug____>
old Chrome has problems

[23:07:02.0000] <smaug____>
but that is just an implementation bug

[23:09:00.0000] <atdt>
smaug____: i don't think i love that idea, because part of my point is precisely that "eponymous" URLs are part of the text flow of the document

[23:11:00.0000] <atdt>
it looks a bit weird to say "check out our website at <a href="http://gnu.org/"></a>". the style would be necessary for that to make any sense at all.

[23:22:00.0000] <atdt>
ok, i'm off -- thanks again for the input.

[23:41:00.0000] <MikeSmith>
smaug____, paul_irish: "As part of keeing things simple, localStorage has a synchronous API that runs on the main UI thread in browsers; as a consequence of that, a race condition can occur if a user has the same site open in multiple windows or tabs running as separate processes. For many applications, that’s never really a problem in practice. But it can cause data corruption—so applications where it’s important to try to ensure 

[23:41:01.0000] <MikeSmith>
absolutely no data corruption can occur should instead use a more robust storage mechanism such as IndexedDB."

[23:41:02.0000] <MikeSmith>
man that's a lot of words

[23:41:03.0000] <MikeSmith>
but dunno how to say it with fewer

[23:50:00.0000] <paul_irish>
MikeSmith: lets go with it

[23:51:00.0000] <MikeSmith>
paul_irish: OK, thanks

[23:51:01.0000] <MikeSmith>
just sent the pull request

[23:51:02.0000] <paul_irish>
:) thank you!

[23:51:03.0000] <MikeSmith>
cheers

[23:51:04.0000] <smaug____>
MikeSmith: even worse problem is that since localStorage is stored in file system, using the API may cause the UI thread to hang if the data isn't in memory

[23:51:05.0000] <MikeSmith>
really?

[23:51:06.0000] <smaug____>
yes

[23:51:07.0000] <MikeSmith>
I didn't know about that one

[23:51:08.0000] <MikeSmith>
wow

[23:51:09.0000] <MikeSmith>
that sucks even worse

[23:52:00.0000] <smaug____>
of course browsers try cache the data in memory when possible

[23:52:01.0000] <smaug____>
try to

[23:52:02.0000] <zcorpan>
do cookies do that also?

[23:52:03.0000] <MikeSmith>
I guess with cookies it's far less data

[23:54:00.0000] <zcorpan>
does indexeddb have an equivalent to sessionStorage?

[00:02:00.0000] <MikeSmith>
paul_irish: I think http://html5please.com/#localstorage should take me down to the actual localstorage section/article

[00:02:01.0000] <MikeSmith>
rather than the top of the page

[00:02:02.0000] <paul_irish>
i agree with that

[00:02:03.0000] <MikeSmith>
will raise an issue

[00:02:04.0000] <MikeSmith>
especially that's harsh for mobile

[00:03:00.0000] <paul_irish>
yeah file it.

[00:33:00.0000] <hsivonen>
heh. Hixie and I thought about the untrusted CDN case in *very* similar ways

[00:35:00.0000] <annevk>
zewt: Encoding spec should define the encoder for UTF-8

[02:44:00.0000] <zcorpan>
/me adds status boxes to http://simon.html5.org/specs/quirks-mode

[02:44:01.0000] <zcorpan>
maybe i should move it to dvcs.w3.org

[03:25:00.0000] <izhak>
What encoding is used by mozilla's nsString internally? Or there's no encoding there, just a 4byte sequense?

[03:26:00.0000] <izhak>
And yet, what encoding is suggested to use by whatwg for internal needs? Say, when storing parsed tokens, for storing parsed tree and so on.

[03:27:00.0000] <hsivonen>
izhak: (potentially invalid) UTF-16

[03:28:00.0000] <hsivonen>
izhak: that is, it's UTF-16 potentially containing unpaired surrogates

[03:28:01.0000] <hsivonen>
izhak: the whatwg doesn't suggest an internal encoding

[03:29:00.0000] <hsivonen>
izhak: there's some confusing language in the whatwg HTML spec that tries to abstract over the reality of the DOM being UTF-16 potentially containing unpaired surrogates

[03:29:01.0000] <izhak>
And I started to thought that I misunderstood that wchar_t typedef...

[03:30:00.0000] <izhak>
*to think

[03:30:01.0000] <hsivonen>
wchar_t is full of FAIL

[03:30:02.0000] <izhak>
yeah

[03:30:03.0000] <hsivonen>
PRUnichar is wchar_t on Windows where wchar_t is 16 bits

[03:30:04.0000] <hsivonen>
PRUnichar is not wchar_t on Linux/GCC

[03:30:05.0000] <izhak>
I would be just happy to see utf-8 in there

[03:30:06.0000] <hsivonen>
PRUnichar is always 16 bits

[03:31:00.0000] <hsivonen>
wchar_t is whatever (16 bits on Windows, 32 in glibc)

[03:31:01.0000] <izhak>
I wouldn't say that PRUnichar does better than wchar_t :) in general

[03:31:02.0000] <hsivonen>
well, at least PRUnichar has a stable meaning in terms of number of bits

[03:32:00.0000] <hsivonen>
makes it superior to wchar_t in my book

[03:33:00.0000] <izhak>
But why utf-16, only to make character wise traversal more efficient and convinient?

[03:33:01.0000] <annevk>
zcorpan: using some kind of repo would be nice at least for history

[03:33:02.0000] <annevk>
zcorpan: and backups

[03:33:03.0000] <hsivonen>
izhak: because in the late nineties, people weren't enlightened about the virtues of UTF-8

[03:33:04.0000] <zcorpan>
annevk: yeah

[03:34:00.0000] <annevk>
man

[03:34:01.0000] <annevk>
I just realized last night that if UTF-16 was not there, surrogates would not have been there either

[03:34:02.0000] <annevk>
it was a nice dream

[03:35:00.0000] <zcorpan>
annevk: btw html-diffs needs updating again

[03:36:00.0000] <izhak>
hsivonen: clear, thanks.

[03:36:01.0000] <annevk>
zcorpan: isn't that your job now?

[03:36:02.0000] <zcorpan>
annevk: yeah, though i don't have anolis set up yet

[03:37:00.0000] <annevk>
if you update the source I can generate

[03:37:01.0000] <zcorpan>
ok, cool

[03:41:00.0000] <annevk>
agreed :)

[03:41:01.0000] <asmodai>
Anyone know which BNF form the w3.org typically uses (like in the XML spec)?

[03:41:02.0000] <annevk>
avoid-BNF

[03:41:03.0000] <hsivonen>
IIRC, XML has its own flavor

[03:41:04.0000] <zcorpan>
i can use xspec xref now, right?

[03:41:05.0000] <annevk>
yes

[03:41:06.0000] <hsivonen>
/me wants rectangular selections in Eclipse

[03:41:07.0000] <zcorpan>
k

[03:42:00.0000] <annevk>
XML has its own BNF, lots of specs avoid BNF, if you really want to use BNF, you should use ABNF I think as standardized in some RFC

[03:42:01.0000] <hsivonen>
ooh. alt+shift+a

[03:50:00.0000] <asmodai>
annevk / hsivonen: Thanks. Was just seeing if this was a defined BNF or not.

[04:05:00.0000] <zcorpan>
hsivonen: what's alt+shift+a?

[04:06:00.0000] <zcorpan>
oh, eclipse

[04:44:00.0000] <hsivonen>
unfortunately, http://dbaron.org/log/2006-08#e20060818a is still relevant today

[04:46:00.0000] <hsivonen>
it's still sad that companies whose devices "don't try to support browsing the web at large" get to buy attention of the W3C

[04:53:00.0000] <jgraham>
Well has the W3C process changed substantially in the past 5.5 years?

[05:10:00.0000] <annevk>
Community Groups were added to work around it

[06:16:00.0000] <bga>
strict typed js and s-expr instead html is pretty popular idea

[06:17:00.0000] <jgraham>
By "pretty popular" you mean "lots of people talk about it, no one does it"?

[06:17:01.0000] <jgraham>
(for small values of "lots")

[06:17:02.0000] <bga>
lots of ppl

[06:18:00.0000] <bga>
s-expr has native macroses

[06:18:01.0000] <bga>
good for temlpating

[06:18:02.0000] <bga>
*templating

[06:18:03.0000] <jgraham>
Well some people write templating languages in lisp, yes

[06:19:00.0000] <jgraham>
I'm not sure that's the same thing

[06:19:01.0000] <bga>
sorry. away

[06:55:00.0000] <zcorpan>
annevk: how do i fix https://www.w3.org/Bugs/Public/show_bug.cgi?id=14319 ?

[06:56:00.0000] <annevk>
wontfix?

[06:56:01.0000] <annevk>
doesn't seem overly important

[06:57:00.0000] <annevk>
or maybe change HTML5 to HTML in the abstract

[06:57:01.0000] <annevk>
that's prolly best

[06:58:00.0000] <annevk>
I guess everyone is just ignoring Charles Pritchard now otherwise the notion that WebKit can be bought would have generated some traffic I suppose

[06:59:00.0000] <annevk>
cf http://lists.w3.org/Archives/Public/public-html/2012Feb/0494.html

[07:00:00.0000] <nisci>
what does the 'wg' in whatwg stand for?

[07:00:01.0000] <annevk>
Working Group

[07:02:00.0000] <zcorpan>
i thought this document was about describing the w3c html5 spec, so the references should maybe go there

[07:02:01.0000] <annevk>
it's mostly about giving a rough overview over how HTML changed since HTML4

[07:03:00.0000] <annevk>
I'm sure someone will change the reference before publishing though

[07:03:01.0000] <annevk>
plh is good at that

[07:04:00.0000] <zcorpan>
if we want the spec to describe the whatwg spec, there are several things that should be changed, i think

[07:04:01.0000] <annevk>
do we have to be so granular?

[07:05:00.0000] <zcorpan>
well currently it aims to accurately describe the w3c spec, but the references go to whatwg, which is a bit weird

[07:06:00.0000] <jgraham>
zcorpan: see /topic :p

[07:06:01.0000] <annevk>
changing the references is a bit of a hassle

[07:06:02.0000] <annevk>
I think Ms2ger is planning on something to change that, but it might take a while

[07:07:00.0000] <annevk>
I wouldn't worry too much about it

[07:07:01.0000] <zcorpan>
maybe i should just cover both specs in cases where they disagree

[07:07:02.0000] <Ms2ger>
You could always add a [HTML5] to spec-data

[07:07:03.0000] <Ms2ger>
It might even exist already

[07:10:00.0000] <zcorpan>
where is spec-data?

[07:10:01.0000] <Ms2ger>
Bitbucket

[07:11:00.0000] <zcorpan>
seems it doesn't exist

[07:11:01.0000] <Ms2ger>
https://bitbucket.org/ms2ger/specification-data/

[07:13:00.0000] <annevk>
see also http://wiki.whatwg.org/wiki/Anolis

[07:15:00.0000] <zcorpan>
/me meant that [HTML5] doesn't exist

[07:30:00.0000] <Ms2ger>
Yeah

[07:31:00.0000] <jgraham>
HTML5 doesn't exist? Better keep that one a secret

[07:59:00.0000] <annevk>
can someone check the WHATWG blog for that comment?

[07:59:01.0000] <annevk>
nobody has done it yet...

[08:09:00.0000] <nisci>
wow, this is really great -- thanks for the suggestion!

[08:09:01.0000] <nisci>
oops, wrong chanel

[08:47:00.0000] <annevk>
hmm

[08:48:00.0000] <annevk>
so MutationObserver objects are scoped by browsing contexts that can reach each other

[08:48:01.0000] <annevk>
this dependency game is annoying

[08:54:00.0000] <annevk>
man

[09:01:00.0000] <annevk>
so you have a list

[09:01:01.0000] <annevk>
at some point the mutation observer thing happens

[09:01:02.0000] <annevk>
you go through the list

[09:01:03.0000] <annevk>
and for each item where the record queue is non-empty, you invoke the callback

[09:01:04.0000] <jgraham>
["eggs", "yoghurt", "milk"]

[09:02:00.0000] <annevk>
the problem is the scope of the list

[09:02:01.0000] <annevk>
the DOM has no notion of scripts or browsing contexts

[09:03:00.0000] <jgraham>
Wrong kind of list it seems :(

[09:03:01.0000] <annevk>
Each scripting-environment has an associated list of MutationObserver objects maybe?

[09:03:02.0000] <annevk>
and then a note that says the scripting-environment needs to carefully define the context and when to invoke "notify" or whatever we call it

[09:04:00.0000] <annevk>
I guess that can work

[09:06:00.0000] <annevk>
jgraham: I like your list better :)

[09:18:00.0000] <annevk>
hmm

[09:18:01.0000] <annevk>
still not dealing with transient observers

[09:18:02.0000] <annevk>
and aklein is away

[09:24:00.0000] <kennyluck>
"Thou shalt not refer to the WHATWG version of HTML."

[09:24:01.0000] <Ms2ger>
s/HATWG/3C/

[09:24:02.0000] <annevk>
I guess another problem might be garbage collection

[09:25:00.0000] <annevk>
I loathe garbage collection

[09:25:01.0000] <annevk>
also the non-virtual kind

[09:37:00.0000] <dglazkov>
good morning, Whatwg!

[09:43:00.0000] <ksweeney>
good morning!

[10:23:00.0000] <Ms2ger>
"Should "just work" assuming the methods on EventTarget.prototype are generic and flexible enough to work on any object."

[10:24:00.0000] <Ms2ger>
That sounds awful

[10:34:00.0000] <annevk>
aklein: so steps 1-4 could be substeps of step 1 of the new invoke algorithm, and step 2 would be to invoke them again if any of the mutationobserver objects has a non-empty record queue

[10:34:01.0000] <annevk>
aklein: that would address that problem, right?

[10:36:00.0000] <annevk>
aklein: still need to know what to do with transient observers

[10:36:01.0000] <aklein>
annevk: that sounds right (and also handles the case of new observers being added during invokation)

[10:36:02.0000] <aklein>
annevk: let me look at the code real quick...

[10:38:00.0000] <aklein>
annevk: as for transient:

[10:38:01.0000] <Velmont>
Mozilla announces HTML5-based phone - http://lwn.net/SubscriberLink/484288/989987e3efcc1fc7/ - The article will open up in 7 days, but thought it'd be interesting for you to read it now :]

[10:39:00.0000] <Ms2ger>
Oh, did we?

[10:39:01.0000] <aklein>
annevk: between steps 3 & 4, remove all transient registrations

[10:39:02.0000] <aklein>
annevk: for the observer you're about to call, that is

[10:40:00.0000] <Velmont>
Ms2ger: Only copied the title

[10:40:01.0000] <annevk>
aklein: that sounds surprisingly easy

[10:40:02.0000] <annevk>
ok I'll write up some next text as it seems this Junta game will delay our dinner plans a little longer :)

[10:40:03.0000] <annevk>
new text* doh

[10:40:04.0000] <Velmont>
lol

[10:41:00.0000] <aklein>
annevk: yeah, it's actually pretty simple. the idea is that since the observer is about to get a chance to run, it no longer needs those transient observers  (it can go add new observations wherever it cares to)

[10:49:00.0000] <annevk>
https://bitbucket.org/ms2ger/dom-core/changeset/c6ad9b7a9dff

[10:51:00.0000] <annevk>
Ms2ger: "just work" lalala

[10:52:00.0000] <annevk>
just add some electricity to the water and it'll just work

[10:52:01.0000] <annevk>
or something

[10:58:00.0000] <annevk>
aklein: fyi http://dvcs.w3.org/hg/domcore/raw-file/tip/Overview.html#concept-mo-invoke

[10:59:00.0000] <aklein>
annevk: looks good!

[11:00:00.0000] <annevk>
good good

[11:00:01.0000] <annevk>
now Hixie needs to make a change and then we should figure out setting innerHTML / textContent

[11:00:02.0000] <aklein>
the discussion of simplifying that stuff sort of died out

[11:01:00.0000] <annevk>
I can see how treating "remove all" and "insert DF" completely separate is somewhat easier, but combining them does not seem that much harder

[11:02:00.0000] <annevk>
especially as this will only be invoked when the DocumentFragment can be inserted without issue (so you don't need to run the complex insertion steps)

[11:04:00.0000] <Philip`>
/me wonders if there's a good explanation somewhere of why B2G is better than Android plus a web browser

[11:04:01.0000] <aklein>
the trouble is that "remove all" can trigger synchronous events, so more DOM mutation code can run before we get around to the "insert DF" part

[11:05:00.0000] <annevk>
well ideally we get rid of mutation events

[11:05:01.0000] <aklein>
even leaving aside mutation events, there's blur

[11:05:02.0000] <Ms2ger>
Wasn't the idea to batch such changes up into one listener?

[11:05:03.0000] <annevk>
oh blur, didn't we have something for that?

[11:06:00.0000] <annevk>
"The methods are not generic, as WebIDL clearly says." thank god

[11:06:01.0000] <aklein>
I guess that technically happens _before_ the removal

[11:06:02.0000] <aklein>
so maybe I shouldn't have to worry about blur...

[11:07:00.0000] <annevk>
i hope not

[11:08:00.0000] <annevk>
I think ryosuke had something else, but I forgot

[11:08:01.0000] <annevk>
<iframe> unload maybe?

[11:08:02.0000] <annevk>
hmm

[11:19:00.0000] <Hixie>
annevk, aklein: so calling a callback is itself a microtask...

[11:20:00.0000] <Hixie>
annevk, aklein: i suppose i don't fire any observers if i'm already busy firing the observers?

[11:21:00.0000] <aklein>
Hixie: exactly

[11:22:00.0000] <Hixie>
k

[11:23:00.0000] <Hixie>
so i invoke the observers after a script runs, unless it's an observer. Then after doing that, I do it again if there's new observers?

[11:23:01.0000] <Hixie>
or what?

[11:24:00.0000] <aklein>
Hixie: annevk changed that algorithm to re-invoke itself, so you should only have to call that algorithm once

[12:24:00.0000] <jwalden>
/me belatedly high-fives rniwa as another Fedora user

[12:24:01.0000] <rniwa>
jwalden: hehe, hi

[12:24:02.0000] <Ms2ger>
Ubuntu, anybody? :)

[12:24:03.0000] <TabAtkins>
Right here!

[12:24:04.0000] <jwalden>
/me is still on 14, keeps not finding the time to back up fully before updating to 15

[12:25:00.0000] <TabAtkins>
(Well, Gubuntu, but still.)

[12:25:01.0000] <jwalden>
at the rate I'm going I might just wait to 16, but I really probably shouldn't do that :-)

[12:25:02.0000] <TabAtkins>
(Or Goobuntu, I think.)

[12:25:03.0000] <Ms2ger>
I read that as "* jwalden is still 14"

[12:25:04.0000] <Ms2ger>
/me high-... fours TabAtkins 

[12:25:05.0000] <jwalden>
"I know you are but what am I"

[12:25:06.0000] <jwalden>
and I could even be right!  :-P

[12:29:00.0000] <Ms2ger>
"I'm filing the bug as I type against W3C's HTML5, so we can get the opinion of the DOM people as well."

[12:36:00.0000] <TabAtkins>
Heh.

[12:59:00.0000] <Hixie>
aklein: k

[13:07:00.0000] <kennyluck>
Heh. I wanted to quote that line too.

[13:08:00.0000] <TabAtkins>
/me wonders why random lines from my emails are quotable.

[13:13:00.0000] <Hixie>
annevk5: yt?

[13:14:00.0000] <Ms2ger>
TabAtkins, because the DOM people are in WebApps :)

[13:14:01.0000] <TabAtkins>
True, but the relevant ones follow the list sufficiently well.

[13:15:00.0000] <TabAtkins>
I'M TRYING TO BE CROSS-DISCIPLINARY.

[13:15:01.0000] <Hixie>
the relevant ones probably have public-html filtered to /dev/null...

[13:15:02.0000] <TabAtkins>
But then I talk about it in here, so it's all good again.

[13:40:00.0000] <annevk>
Hixie: am now

[13:40:01.0000] <annevk>
Hixie: we went to get some food finally

[13:40:02.0000] <annevk>
but back now

[13:41:00.0000] <jgraham>
Philip`: I assume that the value proposition of all-apps-as-webapps over a simple webbrowser is that instead of having to remember the url for every app you want to run you can visit a single page that will conveniently let you search for apps and, if you find one you like, store a link to it locally so it is convenient to find in the future

[13:42:00.0000] <Velmont>
I still haven't bothered to do the rain dance required to follow public-html.

[13:42:01.0000] <annevk>
you can email chaals, but the question is whether you really want to read the email

[13:42:02.0000] <Ms2ger>
You think you'll get away with a rain dance?

[13:43:00.0000] <Velmont>
annevk: Yes, I keep getting told I really don't want to subscribe anyway. So I'm stuck in the limbo.

[13:43:01.0000] <Velmont>
Lots of dance methaphors here.

[13:44:00.0000] <annevk>
Dance Dance Dance is an okay read

[13:46:00.0000] <jgraham>
Pretty good, but not his best work

[13:46:01.0000] <jgraham>
One of the early ones to be translated iirc?

[13:47:00.0000] <jgraham>
Velmont: You could read my public-html mail if you like

[13:47:01.0000] <annevk>
"I’d loved and been loved, but I had nothing to show. It was a singularly plain, featureless landscape. I felt like I was in a video game. A surrogate Pacman, crunching blindly through a labyrinth of dotted lines. The only certainty was my death."

[13:47:02.0000] <Velmont>
Don't say too much stuff that require googling, the internet here is pretty darn slow, and I'm sharing it with annevk.

[13:47:03.0000] <annevk>
jgraham: not sure, I reckon that would have been Norwegian Wood, but I'm not sure

[13:48:00.0000] <jgraham>
annevk is a walking mine of Murakami facts

[13:49:00.0000] <bga>
http://webcache.googleusercontent.com/search?q=cache:http://johnbender.us/2012/02/29/faster-javascript-through-category-theory/

[13:50:00.0000] <jgraham>
Wikipedia says that "Pinball, 1973" and "Hear the Wind Sing" were first to be translated, but I have never read them

[13:50:01.0000] <annevk>
those are his first two books

[13:50:02.0000] <jgraham>
Then "A Wild Sheep Chase" and "Hard Boiled Wonderland and the End of the World"

[13:50:03.0000] <annevk>
if I remember I'll bring them next time I go to Sweden, whenever that is

[13:51:00.0000] <jgraham>
Then "Dance Dance Dance"

[13:51:01.0000] <jgraham>
Norwegian Wood was written earlier but translated later

[13:51:02.0000] <jgraham>
annevk: That would be totally excellent

[13:51:03.0000] <annevk>
yeah I was about to say, interesting

[13:52:00.0000] <Velmont>
I should read one of his books.

[13:52:01.0000] <jgraham>
s/one/all/

[13:52:02.0000] <Velmont>
jgraham: Well, let's not get ahead of ourselves here.

[13:53:00.0000] <annevk>
Hixie: in https://www.w3.org/Bugs/Public/show_bug.cgi?id=16142 your comment regarding GC got trimmed

[13:53:01.0000] <jgraham>
Velmont: Well I probably wouldn't start with Dance Dance Dance.

[13:54:00.0000] <Velmont>
jgraham: Nope. Maybe Norwegian Wood, since that is so well known? Or is there a better one to start at?

[13:55:00.0000] <jgraham>
Norwegian Wood is a fine choice. I think I read The Wind Up Bird Chronicle first. Or perhaps Kafka on the Shore

[13:56:00.0000] <annevk>
I want to read Kafka on the Shore again, read it in Dutch initially

[13:58:00.0000] <jgraham>
Well if you ever make it to Lkpg you are welcome to borrow my copy

[13:59:00.0000] <Velmont>
I want to go to Lkpg too.

[14:00:00.0000] <Velmont>
Never been much in Sweden.

[14:00:01.0000] <Hixie>
annevk: actually it didn't, i never wrote anything and apparently forgot to delete it :-)

[14:00:02.0000] <Hixie>
annevk: never wrote anything after what you see, i mean

[14:01:00.0000] <jgraham>
Velmont: Well I'm sure you would be quite welcome if you could find a half decent excuse :)

[14:02:00.0000] <annevk>
heh

[14:04:00.0000] <Velmont>
jgraham: annevk suggested working on the XHR testsuite. :]  No real reason to do it there, but could classify as half-decent.

[14:06:00.0000] <annevk>
reason might be waste: http://annevankesteren.nl/2010/12/waste

[14:06:01.0000] <annevk>
cf Dance Dance Dance

[14:07:00.0000] <jgraham>
Velmont: Or come over and give an opera:talk on something

[14:11:00.0000] <Hixie>
css people might want to review my naive TextMetrics proposal at http://wiki.whatwg.org/wiki/Canvas#TextMetrics

[14:12:00.0000] <TabAtkins>
Hixie: Ping www-style?

[14:12:01.0000] <Hixie>
i never get any useful feedback when i do that

[14:12:02.0000] <TabAtkins>
Well, I can't give very useful feedback - text isn't my thing.

[14:13:00.0000] <Hixie>
(and if i get any feedback at all, it's usually along the lines of "oh, we should provide that, let us write a spec and reference that" and then i never heard back)

[14:13:01.0000] <Hixie>
s/heard/hear/

[14:14:00.0000] <gsnedders>
Velmont: I started with Kafka on the Shore (jgraham's copy thereof!), which I loved.

[14:15:00.0000] <othermaciej>
Hixie: I'm not a text expert, but you seem to have a copy-paste error on "// distance from textBaseline to hanging baseline"

[14:15:01.0000] <othermaciej>
seems copied a few times where it does not apply

[14:15:02.0000] <Hixie>
oops

[14:15:03.0000] <Hixie>
fixed, thanks

[14:16:00.0000] <othermaciej>
also you define many things as distances relative to textBaseline but the textBaseline property itself is not there

[14:17:00.0000] <othermaciej>
(maybe it's 0 by definition in your model?)

[14:17:01.0000] <Hixie>
textBaseline is a property on the context

[14:17:02.0000] <othermaciej>
our text expert says "the definitions of the metrics look sane to me, i’m assuming “the text” and a CSS font are in the context somehow"

[14:17:03.0000] <Hixie>
(that already exists)

[14:17:04.0000] <othermaciej>
the property on the context  is a string though

[14:17:05.0000] <Hixie>
yeah

[14:19:00.0000] <TabAtkins>
othermaciej: Any clue who I would talk to about killing the restriction on webkit bugzilla that your passwords must be <= 16 character?

[14:20:00.0000] <othermaciej>
TabAtkins: my guess is that this restriction exists only because we are using an old version of bugzilla, assuming it is fixed in newer bugzilla instances

[14:20:01.0000] <Hixie>
why does canvas only do affine transforms?

[14:20:02.0000] <othermaciej>
if so, the person to talk to is Lucas Forschler, but I am not sure how soon he'll be able to update us to a newer version

[14:20:03.0000] <TabAtkins>
Hixie: Becaue that's what CSS transforms are?

[14:20:04.0000] <TabAtkins>
And SVG?

[14:20:05.0000] <Hixie>
but why?

[14:20:06.0000] <othermaciej>
most 2D graphics systems only have affine transforms built in

[14:20:07.0000] <TabAtkins>
Shrug.  They're simple.

[14:20:08.0000] <othermaciej>
which non-affine transforms do you think it should do?

[14:21:00.0000] <TabAtkins>
You can efficiently transform most curves if you stick to affine.

[14:21:01.0000] <Hixie>
i dunno, there's a bug here saying we should allow non-affine transforms, and i was just wondering if it was just a matter of allowing it, or if there was some reason we were avoding it

[14:21:02.0000] <Hixie>
avoiding

[14:21:03.0000] <TabAtkins>
And can always represent the current transform with a 4x4 matrix.

[14:22:00.0000] <TabAtkins>
Bezier curves can only be efficiently transformed if you restrict yourself to a limited set of transforms.

[14:22:01.0000] <othermaciej>
affine transforms in 2D space can be represented with a 3x3 matrix

[14:22:02.0000] <othermaciej>
(or 3x2 if you want to make it more compact)

[14:22:03.0000] <othermaciej>
does the bug say what other kinds of transforms should be supported?

[14:23:00.0000] <Hixie>
https://www.w3.org/Bugs/Public/show_bug.cgi?id=9235 is the bug

[14:23:01.0000] <othermaciej>
"non-affine transform" doesn't define a specific thing

[14:23:02.0000] <Hixie>
"perspective" is the term the guy uses

[14:23:03.0000] <othermaciej>
ah

[14:23:04.0000] <othermaciej>
I don't think perspective projections make sense in an otherwise 2D API

[14:23:05.0000] <othermaciej>
you want 3D, use WebGL

[14:23:06.0000] <TabAtkins>
I don't really agree with that.  But lemme see...

[14:24:00.0000] <Hixie>
i commented on the bug that if they wanted it they should get a us to implement it first

[14:24:01.0000] <othermaciej>
3D perspective projections require more space to store, are slower to apply, and often aren't supported natively by the relevant 2D graphics APIs

[14:25:00.0000] <TabAtkins>
I think you need to convert your curves up into NURBS to get efficient perspective transforms.

[14:26:00.0000] <TabAtkins>
But yeah, getting a UA to implement them first seems like a good thing to require.

[14:28:00.0000] <gsnedders>
/me waits for nobody to implement it because it's non-standard

[14:28:01.0000] <TabAtkins>
gsnedders: Just pay someone to put it in webkit.

[14:28:02.0000] <othermaciej>
I don't really see the point of adding them to the 2D API

[14:28:03.0000] <annevk>
oh, list of new canvas features keeps growing

[14:28:04.0000] <othermaciej>
you don't really want to be doing perspective transforms in software

[14:29:00.0000] <TabAtkins>
othermaciej: Some types of 3d transforms are useful even within the limited canvas2d api.  It's kinda sucky to require someone to go learn webgl for simple effects like that when they're not actually needing the power of it.

[14:29:01.0000] <othermaciej>
even for "2.5D" type effects you need more than just 3d transforms as such

[14:30:00.0000] <othermaciej>
they make sense in CSS transforms because the UA can compute intersections and occlusions and such

[14:30:01.0000] <gsnedders>
TabAtkins: 20k USD? :P

[14:30:02.0000] <othermaciej>
(and can also hardware accelerate everything)

[14:31:00.0000] <TabAtkins>
gsnedders: Wired straight to my bank account, yes.

[14:42:00.0000] <jamesr__>
gsnedders, TabAtkins: don't forget you need to bribe a webkit reviewer too

[14:43:00.0000] <TabAtkins>
jamesr__: Shhh!

[14:43:01.0000] <TabAtkins>
You'll cost me 20k!

[15:04:00.0000] <Hixie>
anyone know if anyone is using mozFillRule?

[15:10:00.0000] <Hixie>
hmmmm

[15:10:01.0000] <Hixie>
instead of having pattern.offsetX and pattern.offsetY

[15:10:02.0000] <Hixie>
why not just put all the transformation logic into CanvasPattern

[15:10:03.0000] <Hixie>
so you can arbitrarily transform the pattern

[15:11:00.0000] <TabAtkins>
+1

[15:11:01.0000] <Hixie>
i guess we'd have to add an explicit .resetPattern() so that people don't have to keep calling .setTransform(...) with an identity matrix

[15:12:00.0000] <Hixie>
er

[15:12:01.0000] <Hixie>
resetTransform()

[15:17:00.0000] <Hixie>
heycam, shepazu: any idea whether i should be referring to svg 1.1 or 1.2 for SVGMatrix? they seem to be different.

[15:18:00.0000] <heycam>
Hixie, 1.1

[15:18:01.0000] <Hixie>
k

[15:18:02.0000] <Hixie>
so er

[15:18:03.0000] <Hixie>
where is it defined?

[15:18:04.0000] <heycam>
coords.html I think

[15:18:05.0000] <heycam>
or types.html

[15:19:00.0000] <Hixie>
i found the idl, and a bunch of non-normative text like the html spec's "domintro" blocks that introduces each member

[15:19:01.0000] <Hixie>
but i can't find the requirements

[15:19:02.0000] <heycam>
remember that the spec was written in a time when MUSTs weren't littered about everywhere

[15:19:03.0000] <heycam>
or without necessarily a lot of detail :)

[15:20:00.0000] <Hixie>
there's "without a lot of detail" and then there's no detail at all...

[15:20:01.0000] <heycam>
unfortunately the DOM parts of SVG 1.1 are often the areas that lack detail

[15:20:02.0000] <Hixie>
ok

[15:20:03.0000] <Hixie>
well

[15:20:04.0000] <heycam>
what specifically are you looking for?

[15:20:05.0000] <Hixie>
apparently i'm gonna be referring to this from the HTML spec

[15:21:00.0000] <Hixie>
so if you wanted something to focus on for SVG2, consider this a candidate :-)

[15:21:01.0000] <heycam>
ok! :)

[15:21:02.0000] <heycam>
are you looking for steps on what the SVGMatrix methods do? or...?

[15:21:03.0000] <othermaciej>
is canvas going to use SVGMatrix to represent transforms?

[15:21:04.0000] <Hixie>
heycam: i'm looking for something sufficiently detailed that we can make sure it's tested in the html test suite

[15:22:00.0000] <Hixie>
othermaciej: yeah, apparently it's what mozilla does

[15:22:01.0000] <Hixie>
othermaciej: so i'm looking at how feasible it is

[15:22:02.0000] <othermaciej>
makes sense

[15:22:03.0000] <othermaciej>
there is also SVGTransform, I can't remember how it is supposed to be different

[15:22:04.0000] <heycam>
there was discussion on the FX list recently about a unified Matrix interface -- that was more merging CSSMatrix/SVGMatrix

[15:22:05.0000] <Hixie>
so there is

[15:22:06.0000] <Hixie>
heycam: yeah

[15:22:07.0000] <heycam>
othermaciej, SVGTransform is the list of transform items like "scale(4)" etc.

[15:23:00.0000] <Hixie>
ah, yeah, SVGTransform is just to represent the lexical form

[15:23:01.0000] <Hixie>
not to represent an actual transform

[15:23:02.0000] <othermaciej>
there also appears to be an SVGTransformList

[15:23:03.0000] <heycam>
/me frowns at SVGMatrix.rotate() not even defining if the argument is radians or degrees or what

[15:23:04.0000] <heycam>
sorry

[15:23:05.0000] <heycam>
SVGTransform is one item

[15:23:06.0000] <heycam>
in an SVGTransformList

[15:23:07.0000] <Hixie>
SVGTransformList is the list of SVGTransforms

[15:23:08.0000] <Hixie>
that <svg:* transform=""> is represented by

[15:24:00.0000] <Hixie>
heycam: i got stuck at the definition of "a"

[15:24:01.0000] <heycam>
lol

[15:25:00.0000] <heycam>
above the IDL it shows what a, b, c, etc. correspond to in the matrix

[15:25:01.0000] <Hixie>
well i can guess what might make sense to happen, sure

[15:26:00.0000] <othermaciej>
CSSMatrix seems to be a 3d transform

[15:26:01.0000] <othermaciej>
it seems useful to be a 2d-transform-specific interface

[15:26:02.0000] <othermaciej>
though the name difference being "SVG" vs "CSS" for 2d vs 3d isn't the world's best naming convention

[15:26:03.0000] <heycam>
yeah, that sucks

[15:26:04.0000] <Hixie>
i find it amusing that neither SVGMatrix and CSSMatrix both to define a method to reset the matrix to the identity transform

[15:27:00.0000] <jamesr__>
just make a new one!

[15:27:01.0000] <Hixie>
i wonder whether i should not bother adding such a method to the context/path/pattern interfaces and instead assume that Matrix will spawn it, or if i should just continue the design of canvas and have a method parallel to the object

[15:28:00.0000] <Hixie>
christ, CSSMatrix is defined about as badly

[15:28:01.0000] <othermaciej>
SVGMatrix operations generally return a new matrix rather than mutating the existing one

[15:28:02.0000] <Hixie>
all these specs use the old DOM style of defining interface members

[15:28:03.0000] <heycam>
Hixie, will the canvas allow assignment of a different matrix object on to the context?

[15:28:04.0000] <Hixie>
single worst way to define an interface ever invented

[15:28:05.0000] <Hixie>
yet everyone thinks it's so cool and copies it everywhere

[15:28:06.0000] <Hixie>
gah

[15:29:00.0000] <heycam>
what is "old DOM style"?

[15:29:01.0000] <Hixie>
the three nested <dl>s you see in all the old DOM specs

[15:29:02.0000] <heycam>
ah right

[15:29:03.0000] <heycam>
yeah it does take a bit too much vertical space for my liking

[15:29:04.0000] <Hixie>
heycam: not planing on allowing assignment currently, but i suppose we could

[15:29:05.0000] <Hixie>
sure, why not

[15:30:00.0000] <othermaciej>
I think it's generally better to apply value semantics to transform matrices, so that to alter the transform in use for something you give it a new matrix rather than attempting to mutate the one returned by a getter

[15:30:01.0000] <othermaciej>
a method to reset a specific matrix to the identity matrix would not be useful in that model

[15:30:02.0000] <Hixie>
k, external method it is

[15:31:00.0000] <othermaciej>
all you need is an easy way to make a fresh identity matrix

[15:31:01.0000] <jamesr__>
matrices are a bit on the large side to copy all the time

[15:32:00.0000] <othermaciej>
yeah, but having to map mutation operations to operations on some arbitrary other object that owns the matrix is also crazy

[15:33:00.0000] <othermaciej>
(also, for the 3x2 representation of an affine transform matrix, it's barely more expensive to copy than a rect)

[15:47:00.0000] <Hixie>
heh, this e-mail's use case is making a google Wave extension

[15:47:01.0000] <Hixie>
problem solved!

[15:56:00.0000] <Hixie>
shepazu: won't be able to give feedback for d="" processing this week, will keep you posted

[15:56:01.0000] <shepazu>
Hixie: ok

