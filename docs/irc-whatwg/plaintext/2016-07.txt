2016-07-01
[17:16:23.0000] <smaug____>
Domenic: why CustomElements take reference  to the lifecycle callbacks? Couldn't it just call the relevant methods in the prototype?

[17:17:19.0000] <smaug____>
(in other words I think https://github.com/heycam/webidl/issues/101 needs to be fixed somehow. The current specs using ctor as a callback are hard to follow and error prone to maintain )

[17:19:28.0000] <smaug____>
(but still no idea how, since I don't know what has lead to the way ctors and classes are being used right now)

[22:27:02.0000] <MikeSmith>
botie, inform zcorpan I wonder if you could run a query for me and find out how widely used lang=zh-Hans* and lang=zh-Hant* are on the Web relative to lang=zh-cn* and lang=zh-tw*

[22:27:03.0000] <botie>
will do

[22:28:03.0000] <MikeSmith>
botie, inform zcorpan I suspect lang=zh-Hans* and lang=zh-Hant* are used almost not at all in practice yet (and maybe never really will be)

[22:28:03.0000] <botie>
will do

[22:29:37.0000] <MikeSmith>
botie, inform zcorpan this is related to implementation of https://github.com/validator/validator/issues/284 ‚ÄúCheck for missing lang and mislabeled lang‚Äù

[22:29:37.0000] <botie>
will do

[22:43:53.0000] <annevk>
TabAtkins: supported the cause

[23:02:04.0000] <MikeSmith>
annevk: I suspect the other commentors there did not realize a new camelcase element would require a parser change

[23:03:04.0000] <MikeSmith>
but now I wonder who will be the first purpose to comment to say, Well, if you‚Äôre already special-casing others, than it can‚Äôt really be much trouble to just add this one to the existing special-case list

[23:03:11.0000] <MikeSmith>
or something like that

[23:03:16.0000] <MikeSmith>
because consistency

[23:04:37.0000] <annevk>
Then my next question will be about how many HTML parser implementers vouched for this

[23:04:59.0000] <annevk>
But I think they generally want to do the right thing these days, they just might not know as you say

[23:10:23.0000] <MikeSmith>
yeah

[00:17:42.0000] <botie>
zcorpan, at 2016-07-01 05:27 UTC, MikeSmith said: I wonder if you could run a query for me and find out how widely used lang=zh-Hans* and lang=zh-Hant* are on the Web relative to lang=zh-cn* and lang=zh-tw* and at 2016-07-01 05:28 UTC, MikeSmith said: I suspect lang=zh-Hans* and lang=zh-Hant* are used almost

[00:17:42.0000] <botie>
not at all in practice yet (and maybe never really will be) and at 2016-07-01 05:29 UTC, MikeSmith said: this is related to implementation of https://github.com/validator/validator/issues/284 ‚ÄúCheck for missing lang and mislabeled lang‚Äù

[01:20:44.0000] <MikeSmith>
zcorpan: thanks!

[01:21:47.0000] <zcorpan>
welcome

[01:22:06.0000] <zcorpan>
y'all should sign up for a bigquery account

[01:29:42.0000] <MikeSmith>
think I did at one point

[01:30:00.0000] <MikeSmith>
guess I should actually use it :)

[01:32:08.0000] <MikeSmith>
zcorpan: so there is some non-insignificant performance impact from implementing language detection in the checker

[01:32:48.0000] <alwu>
zcorpan, hi, I'm alastor0325, I would like to ask a question about webvtt rendering. If we modify the value of attributes of cues (eg. line, position), should we update the rendering immediately? If so, did we mention that in the spec? Thanks!

[01:36:29.0000] <zcorpan>
alwu: good question :-)

[01:36:39.0000] <zcorpan>
"When a WebVTT cue whose active flag is set has its writing direction, snap-to-lines flag, line, position, size, text alignment, region, or text change value, then the user agent must empty the text track cue display state, and then immediately run the text track‚Äôs rules for updating the display of WebVTT text tracks."

[01:37:30.0000] <zcorpan>
i suppose that should be updated to also cover position alignment etc

[01:40:46.0000] <alwu>
got it, thanks :)

[01:42:42.0000] <zcorpan>
alwu: also see https://w3c.github.io/webvtt/#css-extensions

[01:45:29.0000] <alwu>
ok!

[01:55:49.0000] <Ms2ger>
Manishearth, complain at zcorpan? :)

[01:56:17.0000] <zcorpan>
woot?

[01:57:26.0000] <Ms2ger>
Btw, Servo has a technical demo out: https://blog.servo.org/2016/06/30/servo-nightlies/

[01:57:31.0000] <Ms2ger>
Don't use it for your bank

[01:58:03.0000] <Manishearth>
zcorpan: why should html/semantics/embedded-content/the-img-element/update-the-image-data/fail-to-resolve.html pass?

[01:58:43.0000] <Manishearth>
zcorpan: if the URL fails to parse, the spec says to abort the steps before the request (which updates the current source) is initiated

[01:59:20.0000] <Manishearth>
> ‚åõ Parse selected source, relative to the element's node document, and let urlString be the resulting URL string. If that is not successful, abort these steps.

[02:02:05.0000] <zcorpan>
Manishearth: that is the algorithm to run when the *environment changes*

[02:02:15.0000] <zcorpan>
Manishearth: that is not the case in this test

[02:02:28.0000] <zcorpan>
Manishearth: you want to look at https://html.spec.whatwg.org/multipage/embedded-content.html#update-the-image-data

[02:03:00.0000] <zcorpan>
step 11

[02:06:36.0000] <zcorpan>
MikeSmith: are you analyzing the entire doc? can it be limited?

[02:07:08.0000] <MikeSmith>
zcorpan: I limited it

[02:07:44.0000] <zcorpan>
ok

[02:08:09.0000] <MikeSmith>
but the size of the text that the language detection gets run on does not seem to be the biggest factor

[02:08:24.0000] <MikeSmith>
right now I am limiting it to the first 3OK characters

[02:08:56.0000] <MikeSmith>
which seems to take no more measurable time than if I limited it to only 2K

[02:09:27.0000] <MikeSmith>
but as far as the rest of the implementation goes, it is affected by the size of the doc

[02:09:38.0000] <zcorpan>
is the cost initializing the analyzer? (can it be done once and re-used?)

[02:10:39.0000] <annevk>
Does anyone know if "filesystem" is a scheme that's a thing in one or more browsers?

[02:10:58.0000] <annevk>
At some point I added it to a few places, but I think it's mostly gone nowhere

[02:12:23.0000] <MikeSmith>
zcorpan: well the way the checker is architected, I cannot do implement it using a singleton instance the way the microsyntax/datatype checkers are done

[02:12:43.0000] <MikeSmith>
but it doesn‚Äôt matter, because the cost is not bound by that

[02:13:36.0000] <MikeSmith>
it seems to bound by the document size (though the call to the 3rd-party language-detection library code itself is not)

[02:14:21.0000] <MikeSmith>
so when test it locally I ran into OOM errors from the Java GC when I tested with the HTML spec, which is now 8.2MB

[02:15:18.0000] <MikeSmith>
but that was running with the default Java heap size restricted to just 128MB, which I think nowadays is just way too low for the checker anyway

[02:15:42.0000] <MikeSmith>
so, I upped it to 256MB and no more OOM errors

[02:16:22.0000] <MikeSmith>
though it still ran slightly more slowly than it does without the language-detection enabled

[02:17:29.0000] <zcorpan>
annevk: https://cs.chromium.org/search/?q="filesystem:http"&sq=package:chromium&type=cs

[02:17:39.0000] <MikeSmith>
zcorpan: so I upped the Java heap size to 512MB and now it seems to run at much closer to the same speed

[02:18:40.0000] <zcorpan>
MikeSmith: does the language checker use a lot of memory?

[02:19:11.0000] <MikeSmith>
no, the language-detection library itself does not, as far as I can see

[02:19:23.0000] <MikeSmith>
but my code seems to

[02:19:28.0000] <zcorpan>
ah ok

[02:19:29.0000] <MikeSmith>
I am not sure why

[02:20:23.0000] <zcorpan>
can you upload a diff?

[02:20:24.0000] <MikeSmith>
the fact that the OOM message was about Java GC seems to indicate it is creating a lot of objects quickly but they are not getting freed quickly

[02:21:17.0000] <MikeSmith>
zcorpan: yeah I will, and I am going to push it to https://checker.html5.org/ shortly

[02:21:25.0000] <zcorpan>
cool

[02:23:13.0000] <Manishearth>
zcorpan: why do we queue a task to change the current url?

[02:23:21.0000] <annevk>
Ms2ger: does Servo have its updating story figured out already?

[02:23:23.0000] <Manishearth>
should the error event get the old URL?

[02:23:28.0000] <Ms2ger>
annevk, no

[02:23:32.0000] <annevk>
Ms2ger: also, is it better than FirefoxNightly?

[02:23:35.0000] <annevk>
Ms2ger: I see

[02:23:54.0000] <zcorpan>
Manishearth: the idea is to change the url and fire the event in the same task

[02:23:55.0000] <Ms2ger>
I would not recommend trying to use it as a browser

[02:24:12.0000] <Manishearth>
zcorpan: hm

[02:24:21.0000] <annevk>
Ms2ger: it's crap at my blog

[02:25:02.0000] <annevk>
I like how it presents the selection cursor, but then fails at selection

[02:26:16.0000] <annevk>
Ms2ger: UX is pretty good though

[02:26:22.0000] <Ms2ger>
\o/

[02:26:33.0000] <annevk>
Ms2ger: fails at security a bit, but probably fixable

[02:27:02.0000] <jgraham>
I think "fails at security a bit" is expected

[02:27:23.0000] <annevk>
jgraham: it's a little weird how they decided to not show the domain anywhere

[02:27:37.0000] <annevk>
jgraham: present a lock icon plus the title of the page is... I dunno

[02:28:29.0000] <jgraham>
Oh, in the UI?

[02:28:35.0000] <jgraham>
I didn't try that

[02:29:03.0000] <jgraham>
Speak to fabrice I guess

[02:29:17.0000] <annevk>
I should not have loaded the HTML Standard

[02:29:34.0000] <annevk>
I think I crashed it

[02:30:09.0000] <annevk>
Well that didn't last long üòä

[02:39:42.0000] <zcorpan>
it gets the mobile view for w3.org

[02:40:34.0000] <zcorpan>
I got a FOUC on duckduckgo :-)

[02:59:17.0000] <MikeSmith>
zcorpan: https://github.com/validator/validator/commit/d1ee5cdb941051625e29ce4ac6ca44b2f2a4b38a

[02:59:37.0000] <MikeSmith>
and pushed to https://checker.html5.org/

[03:13:24.0000] <zcorpan>
MikeSmith: is the garbage in elementContent, maybe? wild guess :-)

[03:15:21.0000] <alwu>
zcorpan : it seems that the spec didn't mention about how to parse the "cue identifier"? because I only found one place to set it to empty string, and didn't see other place to modify it. do I miss something?

[03:19:06.0000] <MikeSmith>
zcorpan: yeah though that would be the likely culprit, it does not seem to actually be. In debugging, I basically eliminated the text collection altogether and still ran in that GC OOM error. I think it could just be that since we are already running all these other filters of the parser for various other checks, it may not actually be anything particular in this new code itself, but instead it is just

[03:19:12.0000] <MikeSmith>
that the additional memory hit of adding any new filter at all just pushed it to the tipping point.

[03:19:30.0000] <MikeSmith>
*still ran into that GC OOM error

[03:26:33.0000] <zcorpan>
alwu: hmmmm. seems like i made a mistake in converting https://github.com/w3c/webvtt/issues/222#issuecomment-151361368 to spec text.

[03:32:11.0000] <zcorpan>
alwu: fix is to set cue identifier to buffer on cue creation, right?

[03:34:49.0000] <zcorpan>
MikeSmith: ok

[03:38:56.0000] <alwu>
zcorpan : seem yes :) ! but maybe we also need to check the content of the buffer? because the syntax rule mentions that the cue identifier can't contain the string "-->".

[03:40:15.0000] <zcorpan>
alwu: if the first line of a block has -->, buffer will be empty on cue creation, i believe

[03:40:24.0000] <zcorpan>
so no need to check

[03:40:52.0000] <alwu>
that means the cue identifier is empty?

[03:41:02.0000] <alwu>
like this file http://w3c-test.org/webvtt/webvtt-file-format-parsing/webvtt-file-parsing/support/arrows.vtt

[03:41:13.0000] <zcorpan>
yes

[03:41:41.0000] <zcorpan>
do you want to submit a PR for the spec?

[03:43:37.0000] <alwu>
zcorpan : ok, let me check how to modify it because I never send PR for the spec :)

[03:44:49.0000] <zcorpan>
i figured this could be a "good first bug" :-)

[03:46:30.0000] <smaug____>
annevk: sorry to ask about another thing here: https://html.spec.whatwg.org/multipage/forms.html#dom-input-valueasnumber

[03:46:44.0000] <smaug____>
I still can't parse that, how it returns number of months for type=month

[03:47:27.0000] <annevk>
smaug____: ooh, is that what Chrome does?

[03:47:44.0000] <smaug____>
annevk: based on the test jessica linked

[03:49:13.0000] <smaug____>
and yes, tested locally

[03:49:15.0000] <zcorpan>
MikeSmith: https://www.ingdirect.es/ - mislabeled only for legacy IE :-D

[03:52:08.0000] <annevk>
smaug____: I see, then Chrome is indeed wrong per spec :-/

[03:52:44.0000] <smaug____>
annevk: ok, need to then test other browsers

[03:52:51.0000] <smaug____>
sounds like we'll need a spec change

[03:53:55.0000] <annevk>
smaug____: should probably ask https://github.com/tkent-google about this

[03:54:04.0000] <annevk>
smaug____: / tkent@

[03:54:33.0000] <annevk>
sigh

[04:03:33.0000] <yoav>
Hey! I'm having trouble finding the definition Window's onload event and when and how it should fire

[04:03:47.0000] <yoav>
Looking at https://html.spec.whatwg.org/multipage/browsers.html#the-window-object I only see it defined for about:blank

[04:04:22.0000] <yoav>
(at least when CMD-Fing through the page)

[04:05:06.0000] <yoav>
any pointers would be appreciated! :) Specifically, I want to see if it should fire as part of a queued task or synchronously

[04:05:47.0000] <zcorpan>
yoav: https://html.spec.whatwg.org/multipage/syntax.html#stop-parsing

[04:06:01.0000] <zcorpan>
step 6 and 7

[04:07:08.0000] <yoav>
OK, so it should fire after a task

[04:07:12.0000] <yoav>
Thanks! :)

[04:08:07.0000] <yoav>
zcorpan: Do you know if there are any tests that verify that this is what happens? I suspect that's not the case in WebKit (from inspecting the code), but want to make sure

[04:08:25.0000] <zcorpan>
MikeSmith: look great! https://github.com/validator/validator/issues/284#issuecomment-229920015

[04:09:42.0000] <zcorpan>
MikeSmith: hope it has the impact we're looking for. can check httparchive somehow in a year or so and see if the amount of mislabeled pages has gone down

[04:11:40.0000] <zcorpan>
yoav: i see a simple test at http://w3c-test.org/html/syntax/parsing/the-end.html but it doesn't check if load is queued or sync

[04:12:40.0000] <yoav>
zcorpan: what I'm seeing in WebKit is that for <link rel=preload onload>, unless I sync them, they fire after Window.onload

[04:12:44.0000] <zcorpan>
how would you test it? setTimeout in DOMContentLoaded?

[04:13:10.0000] <yoav>
zcorpan: I don't know. That's why I'm asking :)

[04:13:48.0000] <zcorpan>
yoav: "The preload link element must not delay the load event of the element's node document."

[04:14:04.0000] <yoav>
unless it was discovered

[04:15:01.0000] <MikeSmith>
zcorpan: yeah seems certain it can help significantly over the long run. Will push it to https://validator.w3.org/nu/ maybe later today, and hopefully nothing blows up under load. The instances behind that are each processing at least 2.5 validation requests every second.

[04:17:26.0000] <MikeSmith>
zcorpan: Thanks for pushing for that feature„Éºif you hadn‚Äôt taken time to raise that request I think it‚Äôs not something I would embarked on on my own

[04:17:41.0000] <yoav>
zcorpan: so if I have preload link for a resource which is later also part of the HTML, the load of that resource blocks the document's load event

[04:17:55.0000] <MikeSmith>
yoav: will send out some kind of announcement once I have it pushed to https://validator.w3.org/nu/

[04:18:02.0000] <MikeSmith>
oofs

[04:18:32.0000] <MikeSmith>
meant that for zcorpan üòä :)

[04:18:49.0000] <yoav>
:)

[04:19:43.0000] <zcorpan>
yoav: i suppose so. but it doesn't say what the relative ordering should be for <link onload> vs window.onload in that case, does it?

[04:20:05.0000] <yoav>
not really, no

[04:20:15.0000] <zcorpan>
nor, for that matter, <link> vs <img> that are loading the same url

[04:20:43.0000] <yoav>
should that be defined as part of the preload spec?

[04:20:52.0000] <zcorpan>
MikeSmith: sounds good. something for the whatwg blog, maybe? :-)

[04:22:06.0000] <zcorpan>
yoav: yeah i think so

[04:22:33.0000] <yoav>
OK, I'll file an issue

[04:23:09.0000] <yoav>
zcorpan: do you agree that logically, the resource's onload should fire before the document's onload? (like it does today for other resources)

[04:24:20.0000] <zcorpan>
if something was found that reuses the same load, and it delays the load event, then yes

[04:24:53.0000] <zcorpan>
no opinion on <link> vs <img>, but maybe <link> should be queued first?

[04:25:10.0000] <zcorpan>
no strong opinion...

[04:26:16.0000] <yoav>
zcorpan: yeah, I don't have strong opinions on <link> vs <img> either (maybe discovery order, which would put <link> first in most normal cases)

[05:06:44.0000] <yoav>
filed https://github.com/w3c/preload/issues/69

[05:24:41.0000] <MikeSmith>
zcorpan: update on the language-detection: I pushed it to https://validator.w3.org/nu/ but it is only working as expected there maybe 50% of the time :(

[05:25:37.0000] <MikeSmith>
from teh logs I can see the reason is that the initialization of the language identifier is failing very often

[05:25:55.0000] <zcorpan>
MikeSmith: ok :-|

[05:28:08.0000] <MikeSmith>
a language-identifier object is getting created once for every document, and it reads some profile files each time it is created, so maybe not so surprising to have it failing a lot when that is happening 2.5 times a second

[05:29:26.0000] <MikeSmith>
I need to figure out how to create it just once and re-use it, but in the current structure of the rest of the checker code, it is not very clear how I can do that or if it is even possible with the current code

[05:30:37.0000] <gsnedders>
create a factory which has a LRU cache?

[05:30:45.0000] <gsnedders>
OH GOD I'M GOING FULL JAVA.

[05:34:53.0000] <MikeSmith>
zcorpan: actually I do have a specific idea and will try it

[05:35:38.0000] <zcorpan>
gsnedders: maybe need a factory factory?

[05:36:07.0000] <MikeSmith>
heh

[05:36:40.0000] <gsnedders>
zcorpan: html5lib has one of those *IN PYTHON*.

[05:36:58.0000] <gsnedders>
/me wishes he was joking, but it's seriously the most sensible approach

[05:37:31.0000] <MikeSmith>
actually for this case, I can write (another) wrapper around the SAX reader, which is how I implemented the outline feature

[05:37:57.0000] <MikeSmith>
just creates another filter off the SAX events from the parser

[05:38:52.0000] <MikeSmith>
similar to how I already implemented it except that if I do it this way I can pass objects to it

[05:39:31.0000] <MikeSmith>
gsnedders: you probably could not fail at Java worse than me :) and I been writing in Java relatively often for the last 5 years or so for the validator stuff

[05:40:49.0000] <gsnedders>
MikeSmith: I don't know, I've scarcely written much outside of uni, and I get the impression that there's actually much nicer ways to do many things now with some of the more recent changes

[05:42:40.0000] <MikeSmith>
yeah, though I don‚Äôt know most of the more recent features well until I see code that somebody else has written up that uses them (like the Salvation CSP library the validator uses now, which relies on some Java8 features)

[05:42:53.0000] <MikeSmith>
anyway in general I am basically just semi-randomly pulling levers and pushing buttons and banging on the side of it until something works

[05:52:31.0000] <JakeA>
Domenic: vague comment on streams API: I'm looking at making Handlebars work with streams. In their templates they have stuff like {{#if val}} - I want this conditional to be true if val is a stream that yields at least one value (since an empty array is false in Handlebars). This is tricky as the conditional is fed into a helper, but teeing will lock val. I

[05:52:31.0000] <JakeA>
want to read the first val but without consuming it.

[05:52:53.0000] <JakeA>
I guess I want .clone rather than .tee

[05:54:59.0000] <JakeA>
The helper is in the shape of function ifHelper(val), which should return true/false depending on val

[07:45:05.0000] <wanderview>
JakeA: isn't there an optional bool to clone chunks in the .tee?

[07:46:03.0000] <wanderview>
JakeA: also, isn't what you are trying to do a bit racy?  what if there will be a value in the stream, but it just hasn't arrived yet?  you want the to be a false?

[07:46:16.0000] <JakeA>
wanderview: I don't think so, but that's not the problem here.

[07:46:29.0000] <JakeA>
wanderview: I'm happy to wait, so there's no race

[07:47:10.0000] <wanderview>
JakeA: it waits until either a value appears or the stream is closed?

[07:47:18.0000] <JakeA>
wanderview: imagine streamEmitsAtLeastOneValue(stream).then(answer => ‚Ä¶)

[07:47:45.0000] <JakeA>
But then I want to get that value from stream.getReader().read()

[07:48:46.0000] <wanderview>
JakeA: I think I would do this with a wrapper stream... new ReadableStream() where the underlying source contains the ReadableStream you want to observe and buffers a single value... you can then provide a promise hanging off this wrapper underlying source

[07:48:58.0000] <wanderview>
and pas the wrapper ReadableStream on to the next person in the chain

[07:49:01.0000] <wanderview>
pass

[07:49:35.0000] <JakeA>
I could tee the stream, pass one part to streamEmitsAtLeastOneValue, then continue using the other half of the tee

[07:49:55.0000] <JakeA>
But in this case I don't control the outside, I just receive a stream into a function

[07:50:47.0000] <wanderview>
JakeA: ah, yea... in that case you do have tee

[07:51:55.0000] <wanderview>
JakeA: assuming you have to have this as a separate function that takes a REadableStream arg

[07:52:34.0000] <JakeA>
wanderview: but if I tee, the original stream is locked

[07:52:46.0000] <wanderview>
JakeA:  the person calling your function has to tee

[07:53:02.0000] <wanderview>
JakeA: your function is just a consuming function... so the caller has to deal with that

[07:53:44.0000] <JakeA>
wanderview: yeah, I guess I just have to put up with that. Means it doesn't work in a simple {{#if val}} template

[07:54:34.0000] <wanderview>
JakeA: can you make a HandleBarsReadableStream that gets created from the start that does the wrapping I talked about above?  It could then expose its own stuff like "ever got a value promise"

[07:54:58.0000] <wanderview>
I guess I don't know enough about Handlebars

[07:56:08.0000] <JakeA>
wanderview: I could probably do it if I pull apart the guts of Handlebars. Wouldn't need to if it was like response.clone() :D

[07:56:38.0000] <wanderview>
JakeA: but you can't response.clone if anything else has touched the stream yet... seems a similar problem

[07:57:07.0000] <JakeA>
wanderview: happy to make "untouched" stream a requirement in this case

[07:58:40.0000] <wanderview>
JakeA: what are you using in handlebars?  registerHelper()?

[07:58:48.0000] <JakeA>
wanderview: yeah

[07:59:30.0000] <annevk>
Ms2ger: did you look at https://github.com/whatwg/url/issues/53 already?

[07:59:42.0000] <annevk>
Ms2ger: seems like another issue with IDNA :/

[07:59:55.0000] <annevk>
Ms2ger: they really didn't do their homework and just went with what made sense it seems like

[08:00:22.0000] <annevk>
Ms2ger: this is similar to the crypto folks at Mozilla implementing their own domain name parser and not caring about compat or consistency

[08:00:33.0000] <wanderview>
JakeA: it seems the value is passed in to the helper on the `this`, right?  can you just overwrite it with the new stream out from the tee?

[08:00:44.0000] <Ms2ger>
annevk, no, I just wanted you to be aware of the servo change

[08:00:52.0000] <wanderview>
looking at the examples on handlebars.js.com

[08:01:07.0000] <JakeA>
wanderview: nah, `this` is the context. The conditional is passed in as the first arg

[08:01:12.0000] <annevk>
Ms2ger: I see, it makes me all rather sad

[08:01:32.0000] <Ms2ger>
annevk, that we can all agree ob

[08:01:33.0000] <Ms2ger>
on

[08:02:41.0000] <wanderview>
JakeA: probably worth a streams issue to capture the use case

[08:03:05.0000] <wanderview>
JakeA: its kind of a common problem, though, even in c++ land I had to make our "clone a stream" possibly give back a stream to replace the argument

[08:07:30.0000] <wanderview>
sometimes you just can't clone/tee a stream without draining the original

[08:08:34.0000] <JakeA>
yeah, I think that's the conclusion I'm coming to

[08:09:45.0000] <wanderview>
having an object the stream sits on (like Response) lets you hide this by replacing the original stream

[12:07:41.0000] <MikeSmith>
zcorpan: reimplemented the language-detection feature as a SAX reader wrapper and that appears to have solved the problem and it now should work again 100% as expected even at https://validator.w3.org/nu/

[12:09:21.0000] <MikeSmith>
and pushed it to https://checker.html5.org/ too

[12:10:01.0000] <bkardell>
so... for helping me understand more, can someone point me to discussions around inert?  I've searched both irc logs and mailing lists and I can't find more than a handful of references and most of those are initial comments by hixie saying 'I added this thing'.

[12:11:51.0000] <gsnedders>
bkardell: https://github.com/whatwg/html/issues/897 is possibly helpful

[12:12:28.0000] <bkardell>
gsnedders, yeah not really - I'm aware of that one too

[12:13:09.0000] <gsnedders>
/me isn't really aware of anywhere better that links to stuff, and expects others can summarise better than he

[12:13:57.0000] <wanderview>
JakeA: you around?

[12:14:10.0000] <JakeA>
wanderview: ish!

[12:14:49.0000] <bkardell>
not the attribute so much even - but there is a concept in the spec called 'inert' and, for example, it would seem that disabled elements are inert.  inert is part of the magic of the platform, yet I'm not entirely sure how it works even

[12:15:20.0000] <wanderview>
JakeA: what would you expect this to do?  let swc = frame.contentWindow.navigator.serviceWorker; frame.remove(); console.log(swc.controller);

[12:15:40.0000] <wanderview>
JakeA: throw or just return undefined for controller?

[12:17:23.0000] <JakeA>
wanderview: let's go for undefined

[12:17:56.0000] <wanderview>
sounds good

[12:17:56.0000] <wanderview>
thanks

[12:18:27.0000] <wanderview>
JakeA: I'm adding a WPT test for this corner case

[12:23:16.0000] <JakeA>
wanderview: Cheers!

[12:23:19.0000] <JakeA>
Good catch

[12:24:41.0000] <wanderview>
JakeA: or not... I'm not sure the case I'm trying to test is actually triggered by frame.remove()...

[12:26:50.0000] <wanderview>
oh, it is... just bugs :-\

[13:26:11.0000] <bkardell>
ugh, scratch my misread about disabled elements are inert above :(

[13:34:49.0000] <smaug____>
is there any tool to go through all the known specs to check whether they refer to some terminology defined in HTML (or other) spec?

[13:52:12.0000] <annevk>
bkardell: at the moment inert is just for dialog

[13:55:50.0000] <TabAtkins>
smaug____: No, there's no spiders yet that track cross-linking.

[13:59:22.0000] <TabAtkins>
I've been thinking of writing a spider anyway (and switching Bikeshed to it, rather than relying on Shepherd), and this might be a good intro.

[13:59:42.0000] <TabAtkins>
Oooooh, I was wanting a learner project for Rust smaller than "rewrite Bikeshed", and I bet this would work great.

[14:28:18.0000] <smaug____>
some kind of cross-linking tracker would be really nice for cases link in-document handling, where introducing shadow DOM changes lots of things

[14:29:17.0000] <smaug____>
and if we had cross-linking tracker, perhaps then HTML spec could be split to smaller, more manageable pieces. maybe. not sure it is a good idea. maybe it is.


2016-07-02
[17:00:01.0000] <Domenic>
There are very few pieces of HTML that are separable

[17:00:05.0000] <Domenic>
Microdata, perhaps :)

[17:05:38.0000] <tantek>
Domenic: challenge accepted :)

[05:27:23.0000] <Manishearth>
First give me cross-linking in multipage :)

[05:27:38.0000] <Manishearth>
I don't want to have 50 tabs of full HTML spec open just so I get cross-linking

[07:40:37.0000] <annevk>
Manishearth: just make Servo render it quickly

[07:40:59.0000] <annevk>
Manishearth: and fix the crashes üòä

[09:38:49.0000] <Manishearth>
annevk: haha


2016-07-03
[00:12:02.0000] <therue>
hi :)


2016-07-04
[20:59:06.0000] <MikeSmith>
mkwst: FYI https://stackoverflow.com/questions/38176441/block-all-mixed-content Wondering what the current browser support is for CSP block-all-mixed-content. I thought Firefox and Chrome both already supported it at least, but comment there is ‚ÄúUnfortunately block-all-mixed-content doesn't work in Firefox‚Äù

[21:00:25.0000] <MikeSmith>
mkwst: and please post an answer or comment to that SO question if you have other info as far as ‚ÄúIs there a cross-browser way‚Äù

[00:20:57.0000] <mkwst>
MikeSmith: I'm pretty sure Mozilla folks implemented it. /cc dveditz_.

[00:21:22.0000] <MikeSmith>
k

[00:23:44.0000] <dveditz_>
https://bugzilla.mozilla.org/show_bug.cgi?id=1122236 -- it's in Beta now (Firefox 48)

[00:24:31.0000] <dveditz_>
MikeSmith: ^^^^

[00:24:51.0000] <MikeSmith>
/me looks

[00:25:11.0000] <MikeSmith>
w00t

[00:25:14.0000] <MikeSmith>
dveditz_: thanks!

[00:25:49.0000] <dveditz_>
(and now off to bed for me)

[00:59:03.0000] <MikeSmith>
zcorpan: FYI https://lists.w3.org/Archives/Public/www-validator/2016Jul/0001.html somebody saw the new lnag warning and tried doing <!DOCTYPE html lang="en"> to fix it

[01:00:07.0000] <MikeSmith>
zcorpan: A tradeoff with the way I ended up implementing this to get around the other earlier problem is that now I unfortunately cannot report the line+column number of the html element in the warning message

[01:02:45.0000] <zcorpan>
MikeSmith: :-| i guess "the html element start tag" is too much jargon? Maybe add an example with doctype + html start tag in the message?

[01:03:04.0000] <MikeSmith>
yeah

[01:03:08.0000] <MikeSmith>
I suppose so

[01:03:13.0000] <MikeSmith>
will change it to that

[01:03:26.0000] <zcorpan>
do you have the html token available to build the message?

[01:04:02.0000] <MikeSmith>
yes

[01:04:24.0000] <MikeSmith>
with the attributes

[01:05:15.0000] <MikeSmith>
though not the lexical bits, like whether the attribute values are quoted or not

[01:05:34.0000] <MikeSmith>
or whitespace/newlines inside the start tag

[01:06:12.0000] <zcorpan>
sure, but would be cool to have the right attributes in the example :-)

[01:07:02.0000] <zcorpan>
another thing i noticed when looking at httparchive examples was that pages that use html5boilerplate with IE conditional comments around <html> tag sometimes neglect to change the langs for IE

[01:41:32.0000] <MikeSmith>
zcorpan: oh yeah the other day you pointed me at an example of that I think

[01:42:19.0000] <MikeSmith>
I hope I don‚Äôt need to end up implementing a comment parser to catch and report those...

[01:45:33.0000] <annevk>
MikeSmith: planning on updating https://github.com/whatwg/html/pull/1470?

[01:48:02.0000] <MikeSmith>
annevk: yes, will do right now. Thanks for finishing the review and sorry for not getting back it yet„Éºbeen working on this lang-detecting feature in the HTML checker.

[01:48:10.0000] <g4>
does anyone here know if there is a way to detect if a IME is open or not? e.g. on a keydown event?

[01:48:34.0000] <MikeSmith>
g4: kochi might know

[01:51:37.0000] <annevk>
MikeSmith: sounds like that would be more fun; no worries

[02:06:20.0000] <zcorpan>
MikeSmith: http://stackoverflow.com/questions/38178184/this-document-appears-to-be-written-in-french-w3-validator-warning

[02:08:23.0000] <zcorpan>
MikeSmith: https://forums.adobe.com/thread/2175784

[02:10:18.0000] <zcorpan>
i suppose with 99.something confidence it will get it wrong in 0.something of cases

[02:11:17.0000] <MikeSmith>
annevk: done I think, review fixes for https://github.com/whatwg/html/pull/1470

[02:11:29.0000] <MikeSmith>
/me looks at zcorpan links

[02:12:18.0000] <zcorpan>
on the good news side https://github.com/sumBTC/TheBitcoinEcosystem/commit/88e3adc5a6eedeeef467ced8795a523c6c830237 üôÇ

[02:16:41.0000] <MikeSmith>
zcorpan: about the false-positive possibility, yeah I was aware that could happen, especially with documents that aren‚Äôt sentences and paragraphs of text but instead just menus or links

[02:17:59.0000] <MikeSmith>
the library has an API for examining the probability data, so perhaps I will need to implement something a bit smarter using that

[02:20:44.0000] <zcorpan>
MikeSmith: if i specify <html lang=""> i get two warnings. empty string is an allowed value and means language is unknown, but... i suppose nobody deliberately uses it on purpose

[02:21:46.0000] <MikeSmith>
zcorpan: still I should try to fix that

[02:21:47.0000] <zcorpan>
MikeSmith: yeah that seems like a good idea; if I validate a doc with lots of numbers and one actual word, it triggers the warning but probability will be low

[02:22:00.0000] <MikeSmith>
right

[02:22:16.0000] <MikeSmith>
or even just with lots of spacs and newlines

[02:22:37.0000] <MikeSmith>
SAX API does not give a good way to discard whitespace

[02:23:34.0000] <MikeSmith>
I just collect characters regardless

[02:24:12.0000] <zcorpan>
hmm... you just collect the characters and don't particularly care about tags, right? so <p>foo<p>bar will be one word "foobar"?

[02:32:14.0000] <kochi>
g4: within what is available today, you need to handle 'compositionstart' and 'compositionend', and IME is active between the two events.

[02:33:29.0000] <kochi>
g4: depends on what you define as "IME is open", YMMV.

[02:33:43.0000] <MikeSmith>
zcorpan: yeah it would be

[02:34:38.0000] <kochi>
g4: for instance, if you turn on IME on windows, your IME is kind of open, but composition* events happen only after you start actual typing.

[02:34:44.0000] <MikeSmith>
annevk: I think I missed one ‚Äúcreating a potential-CORS request‚Äù that I need to add the destination param to

[02:34:59.0000] <annevk>
MikeSmith: ok

[02:35:19.0000] <annevk>
MikeSmith: do you agree that "_destination_ set to the empty string" should become "the empty string"

[02:35:38.0000] <MikeSmith>
annevk: yup, that is more clear, more simple

[02:35:46.0000] <MikeSmith>
already pushed that change just now

[02:36:19.0000] <zcorpan>
MikeSmith: i don't know how much it affects the results, but knee-jerk fix if it messes things up (e.g. for menus with no whitespace between tags because minimizers), is to append a space for a set of block-ish elements like p, li, h1...

[02:36:36.0000] <zcorpan>
for the end tag

[02:37:14.0000] <annevk>
ah I see, looks pretty good now MikeSmith, will wait for that final fix then

[02:37:32.0000] <MikeSmith>
annevk: OK, about that, can you please take a second to look at line 86229 on that branch? the algorithm <h5 id="fetching-scripts">Fetching scripts</h5>

[02:39:03.0000] <MikeSmith>
annevk: it seems like it needs to specify, <var>url</var>, *the empty string*, and <var>CORS setting</var>, right?

[02:39:28.0000] <annevk>
MikeSmith: no

[02:39:32.0000] <MikeSmith>
oh

[02:39:36.0000] <MikeSmith>
good thing I asked

[02:39:38.0000] <annevk>
MikeSmith: it needs to be "script" from a following step

[02:39:45.0000] <MikeSmith>
oh

[02:39:52.0000] <MikeSmith>
/me re-reads

[02:39:58.0000] <annevk>
MikeSmith: and you then need to remove that destination setting in the following step

[02:40:32.0000] <MikeSmith>
annevk: oh, maybe will create a separate PR for that then?

[02:40:50.0000] <MikeSmith>
because that is a different change than what we are doing in this PR

[02:41:13.0000] <MikeSmith>
and can just land this one first since it is otherwise OK

[02:41:14.0000] <annevk>
MikeSmith: I think it's better to do it as part of this PR since you change the signature of "create a potential CORS-request"

[02:41:20.0000] <MikeSmith>
ah OK

[02:41:24.0000] <MikeSmith>
fair enough

[02:41:38.0000] <annevk>
MikeSmith: since if you land this patch, the invocation there results in an error theoretically

[02:41:44.0000] <MikeSmith>
right

[02:41:50.0000] <MikeSmith>
yup

[02:42:12.0000] <MikeSmith>
ok then I will need to do that after a bit, since I gotta drop off soon to catch the bus+train back home

[02:43:02.0000] <annevk>
okido

[02:48:45.0000] <MikeSmith>
annevk: thanks for the careful review

[02:57:38.0000] <g4>
kochi: very useful! Did not know about those events. Thanks!

[05:17:46.0000] <annevk>
I missed an "Opera did it first" in https://github.com/whatwg/html/issues/1482

[08:01:33.0000] <zcorpan>
quiz time https://twitter.com/zcorpan/status/749976380247605248

[08:04:19.0000] <Ms2ger>
Dammit

[10:18:42.0000] <Domenic>
what why

[10:18:52.0000] <Domenic>
one day i will get a htmlquiz

[10:22:56.0000] <MikeSmith>
annevk: OK just pushed that one remaining ‚Äúcreating a potential-CORS request‚Äù change

[10:23:08.0000] <MikeSmith>
(the the PR branch)

[10:46:31.0000] <annevk>
MikeSmith: \o/

[10:47:30.0000] <MikeSmith>
w00t

[10:47:32.0000] <MikeSmith>
thanks

[13:48:48.0000] <zcorpan>
MikeSmith: https://github.com/validator/validator/issues/315


2016-07-05
[23:27:17.0000] <annevk>
It's a little unclear to me whether https://github.com/whatwg/html/pull/1492 needs further review

[23:27:29.0000] <annevk>
I guess/hope Domenic is asleep already

[23:51:13.0000] <MikeSmith>
annevk: seems like you probably want to wait til Domenic is around

[23:59:11.0000] <MikeSmith>
botie, inform zcorpan rather than adding space around text only from the elements listed in https://github.com/validator/validator/issues/315#user-content-space-before-after why don‚Äôt I instead just always put space around it from any element regardless (with the exceptions for script, style, math, svg, template

[23:59:11.0000] <botie>
will do

[00:16:36.0000] <botie>
zcorpan, at 2016-07-05 06:59 UTC, MikeSmith said: rather than adding space around text only from the elements listed in https://github.com/validator/validator/issues/315#user-content-space-before-after why don‚Äôt I instead just always put space around it from any element regardless (with the exceptions for

[00:16:36.0000] <botie>
script, style, math, svg, template

[00:20:38.0000] <zcorpan>
MikeSmith: i figured sometimes the inlines are used without intending to break up words (like <a>, <wbr>, <em>...)

[00:21:09.0000] <MikeSmith>
zcorpan: ah true

[00:44:09.0000] <zcorpan>
MikeSmith: looking at httparchive it seems to be a mixed bag of expectations; sometimes separate words appear across a tag boundary and sometimes a single word spans the tag boundary

[00:45:50.0000] <zcorpan>
probably more common with separate words

[00:51:07.0000] <MikeSmith>
OK

[03:07:45.0000] <hsivonen>
annevk: why does the "encode" spec concept start by asserting the _encoding_ isn't replacement, UTF-16BE or UTF-16LE instead of starting by setting _encoding_ to its _output encoding_?

[03:13:42.0000] <annevk>
hsivonen: probably because you need to do that ahead of time

[03:14:04.0000] <annevk>
hsivonen: otherwise metadata elsewhere would get faulty

[03:14:14.0000] <hsivonen>
annevk: good point. thanks.

[03:15:22.0000] <hsivonen>
encoding-rs now has "decode" and "decode_with_replacement" and similarly "encode" and "encode_with_replacement"

[03:15:51.0000] <hsivonen>
I wonder if I should have "decode_without_replacement" and "decode" and "encode_without_replacement" and "encode" instead...

[03:17:34.0000] <hsivonen>
BOM handling works the other way round

[03:17:55.0000] <hsivonen>
the short name gives you bom sniffirng and there are longer names to opt out

[03:22:15.0000] <hsivonen>
hmm. I suppose I should make the ones that can fail *_without_replacement and drop _with_replacement from the names

[03:22:19.0000] <hsivonen>
annoying

[03:22:29.0000] <hsivonen>
that'll affect a lot of code

[03:23:41.0000] <hsivonen>
But that's the logical conclusion if I want to make the short obvious names both obvious spec-wise and want to make the short names to steer the user to do what's most likely the right thing

[03:24:15.0000] <hsivonen>
*sigh*

[04:46:09.0000] <zcorpan>
alwu: did you want to take a stab at fixing cue identifier in the spec, or should i?

[05:11:38.0000] <zcorpan>
annevk: re https://github.com/whatwg/html/pull/1500 what kinds of navigations are being excluded with the new text?

[05:12:27.0000] <annevk>
zcorpan: setting <object>.data to "sameurl#test"

[05:27:04.0000] <zcorpan>
annevk: like this?  http://software.hixie.ch/utilities/js/live-dom-viewer/saved/4300

[05:28:01.0000] <wanderview>
JakeA: is there a header for <link rel="preload">?

[05:28:15.0000] <wanderview>
JakeA: or maybe thats just http2 push

[05:28:26.0000] <annevk>
zcorpan: yeah, though I'm not sure what's going on there

[05:28:40.0000] <zcorpan>
annevk: me either :-)

[05:29:07.0000] <annevk>
zcorpan: the main thing with <object>.data and also embed is that they first fetch, and then navigate to the response of that fetch

[05:29:14.0000] <annevk>
zcorpan: rather than navigating a request

[05:30:20.0000] <zcorpan>
wanderview: it might be implemented, but preload is a bit different from http2 push. see https://www.smashingmagazine.com/2016/02/preload-what-is-it-good-for/

[05:32:11.0000] <wanderview>
zcorpan: I was asking specifically in the context of https://github.com/slightlyoff/ServiceWorker/issues/920

[07:01:17.0000] <Alv-c>
hey there!

[07:04:40.0000] <Alv-c>
may I ask a little thing about URL standard design?

[07:05:23.0000] <annevk>
Alv-c: sure

[07:10:54.0000] <Alv-c>
I'm actually working on a C++ URL parser following the whatwg URL standards, and I noticed that url `query` is not `UTF-8 percent encode`d. But if I create a new URL instance in javascript it does. Is it related to `x-www-form-urlencoded`? Should I encode url `query` in my implementation

[07:11:41.0000] <Alv-c>
Sorry if it's inappropiate to ask questions here :P. This is my first time using irc

[07:13:07.0000] <annevk>
Alv-c: per https://url.spec.whatwg.org/#query-state the default is certainly UTF-8

[07:13:37.0000] <annevk>
Alv-c: but the encoding can also be coming from the document for certain APIs defined in HTML, such as <a>

[07:14:01.0000] <annevk>
Alv-c: since that's legacy it's a feature exposed through the URL API

[07:14:18.0000] <annevk>
Alv-c: it's *not* a feature exposed through the URL API, doh

[07:15:21.0000] <annevk>
(And IRC is a fine place to ask questions.)

[07:15:30.0000] <MikeSmith>
zcorpan: FYI https://github.com/validator/validator/commit/5ff6fe8331fff08bdb98301a360543e5149fdb43

[07:16:25.0000] <MikeSmith>
zcorpan: will only emit a warning if it ia 90% confident it found the right match

[07:19:08.0000] <Alv-c>
Oh! I see. Thank you annevk

[07:21:15.0000] <Alv-c>
I hope it's not too bad to only support UTF-8 d:

[07:21:58.0000] <annevk>
Alv-c: really depends on your goals, probably mostly fine

[07:25:11.0000] <Alv-c>
I'm ashamed now, btw, because the reason why my implementation wasn't percent-encoding query parameters was because I misunderstood "If byte is less than 0x21, greater than 0x7E, or (...)" with "if byte is less than 0x21 AND greater than 0x7E". Like saying "if is less than 2 and greater than 10". Thanks god I didn't push to github yet

[07:25:19.0000] <Alv-c>
Again, thank you annevk.

[07:35:49.0000] <zcorpan>
MikeSmith: nice

[07:41:22.0000] <zcorpan>
MikeSmith: it seems xml:lang in the code is xml:lang in no namespace. it should be lang in the XML namespace instead

[07:44:16.0000] <zcorpan>
MikeSmith: https://github.com/validator/validator/blob/5ff6fe8331fff08bdb98301a360543e5149fdb43/src/nu/validator/servlet/LanguageDetectingXMLReaderWrapper.java#L157 - similarly this should also check if namespace is ""

[07:48:35.0000] <MikeSmith>
zcorpan: actually there is another part of the validator code that seems to always put that lang into the http://www.w3.org/XML/1998/namespace namespace

[07:49:06.0000] <MikeSmith>
that caused me a lot of confusion when I was writing and testing that code

[07:49:08.0000] <zcorpan>
ah, yeah, i remember something about that

[07:50:50.0000] <MikeSmith>
yeah the current logic there matches what the rest of the validator backend actually exposes to that code at that point

[08:16:56.0000] <JakeA>
wanderview: yeah, see example 2 at http://w3c.github.io/preload/#h-introduction

[08:17:45.0000] <wanderview>
JakeA: ah, cool... seems PlzNavigate could boost the preload priority for things it sees during its own "preflight"

[08:18:14.0000] <zcorpan>
correct answer posted for https://twitter.com/zcorpan/status/749976380247605248

[08:19:23.0000] <JakeA>
wanderview: makes sense. Still trying to fit all the use-cases in my head

[08:19:36.0000] <JakeA>
But still not convinced on Alex's proposal. Seems to narrow and hacky.

[08:20:01.0000] <wanderview>
JakeA: but it seems like maybe some of this is doable as H2 push? although I guess this POST might not end up in http cache?

[08:20:25.0000] <wanderview>
JakeA: there is something to be said for a narrow API change now that allows us to do a general purpose API change later when we have more data

[08:21:39.0000] <JakeA>
wanderview: how H2 push interacts with the cache are grossly underspeced as far as I know

[10:40:15.0000] <annevk>
H2 push doesn't put SW in control of networking

[10:57:26.0000] <wanderview>
annevk: why not? if its in the http cache you can access it via fetch(sameOriginURL, { cache: 'only-in-cache' }), no?

[11:16:10.0000] <annevk>
wanderview: it means a connection was established somehow without SW being in control

[11:25:30.0000] <wanderview>
annevk: isn't that exactly what is being requested in this use case...

[11:31:02.0000] <annevk>
wanderview: yes, and without opt-in it's bad

[12:28:31.0000] <wanderview>
Domenic: how does GetV(O, P) ever return with an abrupt completion in PromiseInvokeOrNoop() step 3?

[12:32:10.0000] <annevk>
wanderview: FWIW, he might be away today, apparently a Google US holiday

[12:32:44.0000] <wanderview>
thanks... I'll write an issue

[12:35:12.0000] <wanderview>
I guess if the O is null or undefined

[12:35:44.0000] <Domenic>
wanderview: PromiseInvokeOrNoop({ get foo() { throw new Error("boo"); } }, "foo")?

[12:36:00.0000] <wanderview>
ah, a throwing getter

[12:36:01.0000] <wanderview>
ok

[12:39:28.0000] <wanderview>
Domenic: why does ValidateAndNormalizeHighWaterMark() throw a TypeError for NaN?  seems like elsewhere we use RangeError for this

[12:39:42.0000] <Domenic>
wanderview: for NaN in particular? hmm.

[12:39:54.0000] <wanderview>
Domenic: step 2 here https://streams.spec.whatwg.org/#validate-and-normalize-high-water-mark

[12:39:59.0000] <Domenic>
yeah

[12:40:26.0000] <Domenic>
It does seem like it would be cleaner to just use IsFiniteNonNegativeNumber everywhere and throw RangeErrors if not

[12:40:27.0000] <wanderview>
Domenic: seems like it should just use IsFiniteNonNegativeNumber() to me

[12:40:32.0000] <wanderview>
yea

[12:40:54.0000] <Domenic>
File an issue?

[12:41:39.0000] <wanderview>
Domenic: added a comment here: https://github.com/whatwg/streams/issues/475#issuecomment-230581097

[12:46:14.0000] <wanderview>
Domenic: finally made finished my first pass through the js for the refactored ReadableStream spec!

[12:46:17.0000] <wanderview>
now to make it actually work

[12:46:22.0000] <Domenic>
\o/!!

[12:49:34.0000] <wanderview>
Domenic: have you guys done any work to figure out how streams should work across compartments?  like `new frame.contentWindow.ReadableStream({ start: frame2.contentWindow.streamStart })

[12:50:00.0000] <wanderview>
added points for one or the other globals being privileged

[12:50:16.0000] <Domenic>
wanderview: nothing special. I think it just falls out of JS semantics? :-/

[12:50:55.0000] <wanderview>
Domenic: maybe its a spidermonkey issue... but I will probably have to write tests to exercise all these combinations

[12:51:20.0000] <wanderview>
since we might need special unwrapping to see object types

[13:58:57.0000] <zcorpan>
hmm, dead pixel :-(

[14:07:22.0000] <miketaylr>
rip


2016-07-06
[00:26:53.0000] <alwu>
zcorpan : hi!

[00:27:25.0000] <zcorpan>
alwu: hi

[00:27:25.0000] <botie>
privet, zcorpan

[00:27:37.0000] <zcorpan>
botie, go away

[00:27:37.0000] <botie>
zcorpan: sorry...

[00:28:31.0000] <alwu>
zcorpan, morning! could you help me to check this issue :) ? https://github.com/w3c/webvtt/issues/310

[00:29:24.0000] <zcorpan>
alwu: argh, i had written a detailed reply to that, apparently it didn't come through :'(

[00:29:48.0000] <zcorpan>
thx for heads-up

[00:32:50.0000] <alwu>
thanks you too! I think I need to figure how to parsing cue identifier more clearly before committing a PR :)

[00:38:36.0000] <zcorpan>
commented

[00:44:04.0000] <alwu>
since the position is pointing to the timestamp, the cue can be parsed correctly, but the cue identifier can't be parsed correctly.

[00:44:54.0000] <alwu>
that means all identifiers wouldn't be parsed correctly in that file because they contains "-->" ?

[00:45:07.0000] <alwu>
zcorpan ^

[00:45:37.0000] <zcorpan>
alwu: right, they would all have empty string as identifiers

[00:46:54.0000] <alwu>
zcorpan : cool! thanks for explanation! and I have another question

[00:46:54.0000] <zcorpan>
that's intentional :-)

[00:46:59.0000] <zcorpan>
ok

[00:48:14.0000] <alwu>
in "Cue creation", the buffer is still empty.

[00:48:33.0000] <zcorpan>
for this file, yes

[00:48:36.0000] <alwu>
that means even we set the cue identifier to buffer, the identifier is still wrong value

[00:49:08.0000] <alwu>
oh

[00:49:22.0000] <zcorpan>
not if there are blank lines between cues

[00:51:07.0000] <alwu>
so, for the valid identifier, there would have run the "Loop" twice. In first time, it sets the 'line' to 'buffer'. In second time, we create the cue, and then set the 'buffer' to identifer.

[00:51:10.0000] <alwu>
is that right?

[00:54:55.0000] <zcorpan>
...set the identifier to 'buffer' :-)

[00:55:33.0000] <zcorpan>
but yes

[00:57:40.0000] <alwu>
ok thanks :)

[02:26:44.0000] <annevk>
zcorpan: <caption> stuff LGTM

[02:26:51.0000] <annevk>
zcorpan: dunno if you want someone else to sign off too

[02:27:55.0000] <zcorpan>
annevk: thx. probably ok to merge it

[02:28:02.0000] <annevk>
zcorpan: actually...

[02:28:21.0000] <annevk>
zcorpan: should the caption thing be put together with the other stuff that is text-align: center?

[02:29:11.0000] <annevk>
zcorpan: thead[align=absmiddle i] et al

[02:29:35.0000] <zcorpan>
annevk: since there's no attribute to control it i think it shouldn't be a preshint

[02:29:52.0000] <zcorpan>
not that people care much about the distinction

[02:30:07.0000] <annevk>
I see

[02:30:20.0000] <annevk>
We should start testing the difference at some point maybe

[02:30:28.0000] <annevk>
Or just remove the concept

[02:30:33.0000] <annevk>
zcorpan: anyway, LGTM

[02:34:25.0000] <zcorpan>
i started writing tests for the rendering section a while back (ignoring UA style vs preshint), but it got too clumsy. need to go back and think of a better way to test

[04:52:56.0000] <annevk>
Whoa, issue 52 is almost fixed

[04:53:00.0000] <annevk>
Good times

[05:26:16.0000] <zcorpan>
heh yeah that one has taken a while :-) then i need to structure up that section with subsections etc

[05:26:50.0000] <zcorpan>
live dom viewer doesn't work in Servo :-|

[05:28:49.0000] <Ms2ger>
It uses doc.write, does it not?

[05:30:39.0000] <zcorpan>
yep

[05:32:35.0000] <Ms2ger>
Patches welcome ;)

[05:34:01.0000] <zcorpan>
can't be much harder than about:blank?

[05:34:49.0000] <nox>
document.write is hard.

[05:37:26.0000] <zcorpan>
nox: i know, i was trolling. :-) about:blank is also hard

[05:58:47.0000] <howdoi>
var p1 = Promise.resolve(); p1; //must be in fulfilled state, right?

[06:02:30.0000] <annevk>
howdoi: yeah, though you can't observe it until some microtask

[06:03:22.0000] <howdoi>
var p1 = Promise.resolve();

[06:03:22.0000] <howdoi>
var p2 = Promise.reject();

[06:03:22.0000] <howdoi>
var p3 = new Promise(() => {});

[06:03:41.0000] <howdoi>
annevk: P1; says Promise { undefined }

[06:04:35.0000] <howdoi>
why not Promise { <fulfilled> }?

[06:10:01.0000] <gsnedders>
zcorpan: what's so hard about the rendering section?

[06:10:04.0000] <annevk>
dunno, prolly depends on internals

[06:11:29.0000] <zcorpan>
gsnedders: the approach i tried was to include all relevant elements and then check everything in getComputedStyle for each element, but it quickly became messy and didn't work

[06:56:53.0000] <annevk>
Ms2ger: https://github.com/whatwg/html/issues/928 ping

[06:57:41.0000] <Ms2ger>
annevk, ?

[06:57:54.0000] <annevk>
Ms2ger: it's not clear to me there's an issue

[06:58:54.0000] <Ms2ger>
If you navigate a page, does the former document not still have a browsing context?

[07:03:29.0000] <annevk>
hmm

[07:04:02.0000] <annevk>
ta

[07:08:19.0000] <Ms2ger>
Np :)

[08:13:07.0000] <howdoi>
programmatically identifying the state of a promise is a pain!

[08:13:15.0000] <howdoi>
why not we have Promise.inspect?

[08:13:29.0000] <nox>
What would that do?

[08:14:28.0000] <howdoi>
Tell us the state of the promise

[08:14:28.0000] <botie>
will do

[08:14:43.0000] <howdoi>
may it be sync API, or may it return a promise

[08:14:58.0000] <howdoi>
pending, rejected, resolved, canceled ...

[08:15:21.0000] <howdoi>
makes sense?

[08:15:37.0000] <nox>
Why would I need to know in which state a promise, though?

[08:15:44.0000] <nox>
a promise is*

[08:16:00.0000] <annevk>
That's been proposed long ago, but I don't think anyone is trying to get it through TC39

[08:16:07.0000] <annevk>
You could give it a go

[08:20:44.0000] <Domenic>
It doesn't appear to have any use cases we can find

[08:21:50.0000] <nox>
howdoi: Why do you need this?

[09:28:11.0000] <TabAtkins>
howdoi: "Promise { undefined }" (I presume this is DevTools telling you about the promise?) is because it's fulfilled with the value `undefined`.

[12:26:07.0000] <rniwa>
annevk: yt?

[12:26:18.0000] <rniwa>
Domenic: yt?

[12:26:26.0000] <Domenic>
rniwa: yep

[12:26:48.0000] <rniwa>
Domenic: do you recall where assignedSlot is supposed to be defined?

[12:27:01.0000] <rniwa>
Domenic, annevk: I thought we had agreed to add it on Element & CharacterData?

[12:27:07.0000] <rniwa>
the spec says it's defined on Text & Element: https://dom.spec.whatwg.org/#mixin-slotable

[12:27:39.0000] <Domenic>
Hmm yeah I haven't been much involved in those discussions

[12:28:31.0000] <rniwa>
oh maybe it got updated as a result of https://github.com/w3c/webcomponents/issues/351

[12:28:55.0000] <Domenic>
https://github.com/w3c/webcomponents/issues/411

[12:29:42.0000] <rniwa>
Domenic: oh thanks

[12:31:20.0000] <annevk>
CharacterData would make more sense... but WebKit didn't like it

[12:31:44.0000] <rniwa>
annevk: well, in terms of assigning yes,

[12:31:53.0000] <rniwa>
annevk: but there's no harm in having a property there

[12:32:34.0000] <annevk>
Hmm, if it's always going to return null I'd rather add it when it might no longer return null

[12:33:07.0000] <rniwa>
annevk: yeah, that argument makes sense to me

[12:33:28.0000] <rniwa>
annevk: I just didn't realize that this change was made in conjunction with the types of nodes that could be assigned

[12:33:58.0000] <rniwa>
annevk: to be fair, we could support assigning CharacterData in general if we tried. It was just not trivial for us to support

[12:34:14.0000] <rniwa>
since they aren't rendered anyway

[13:47:28.0000] <Domenic>
TabAtkins: [CEReactions] doesn't seem to be auto-linking in DOM IDL blocks even when using bikeshed web service (i.e. latest updates) :(

[15:36:02.0000] <jrenner_>
Hey all, I had a quick question about CORS & CORS headers. I understand the need for Access-Control-Allow-Origin as it relates to sending/receiving cookies. But I don't understand why there isn't a client configurable option to just say "I don't want to access the cookie state the browser is maintaining for this site" and skip all the header validation. At that point it's the same as an HTTP request from any random client right?

[15:36:46.0000] <Domenic>
jrenner_: sadly no, because e.g. my computer can access Google's intranet

[15:37:16.0000] <Domenic>
jrenner_: I don't want any website I visit to be able to make requests to trigger actions (or even just discover the existence of certain pages on) Google's intranet

[15:37:47.0000] <Domenic>
Similarly your computer likely has access to an "intranet" which includes a router configuration page

[15:37:52.0000] <Domenic>
(If it's anything like my home computer)

[15:38:33.0000] <jrenner_>
ah right :/ yeah that makes sense. Has there been any looking into a permissions-based system like camera usage for making requests to other domains?

[15:38:50.0000] <Domenic>
The problem is coming up with a permission prompt that makes any sense to users

[15:39:25.0000] <jrenner_>
ah yeah, sounds nice to me but my mom would have no idea what to do

[15:39:39.0000] <Domenic>
I guess it doesn't sound impossible now that I think harder

[15:39:58.0000] <jrenner_>
Like it could just be "My newsreader app would like to be able to communicate with facebook.com"

[15:40:04.0000] <Domenic>
Yeah

[15:40:22.0000] <Domenic>
And I guess you just hope users don't get used to auto-granting those? And click "yes" even when it says "192.168.0.1"?

[15:40:58.0000] <Domenic>
Maybe annevk remembers these discussions more. (It's getting on to his bedtime though.)

[15:41:54.0000] <jrenner_>
hmmm I'm inclined to write it off and say people are already running random code on their phones and laptops, but that's not really a good excuse

[15:43:17.0000] <Domenic>
Right, they have implicitly granted trust to that code by installing them, and also app stores can revoke apps that misbehave

[15:43:31.0000] <Domenic>
https://annevankesteren.nl/2016/07/web-computing was just posted today and touches on that contrast

[15:48:38.0000] <jrenner_>
hmmm if only there was a semantically understandable way to "upgrade" a web app into being something more local.

[15:49:02.0000] <Domenic>
I mean we're seeing some experimentation there

[15:49:13.0000] <Domenic>
But that still doesn't help much with the review and revocation issues

[15:49:29.0000] <Domenic>
And there's XSRF and XSS

[15:54:57.0000] <jrenner_>
I mean, presumably XSRF and XSS wouldn't be affected by an extra set of trust semantics. I think... supposing you limit the permissions to scripts from the host that requested them

[15:56:00.0000] <Domenic>
sure but the point of XSRF and XSS is to get the host to execute code on your behalf :)

[15:59:03.0000] <jrenner_>
well XSRF can be covered by simply not re-using the cookie when these requests are made, and XSS is... I guess still a problem if someone managed to embed some JS as the host in a trusted environment...

[16:01:04.0000] <Domenic>
I don't think these problems are unsolvable

[16:01:25.0000] <Domenic>
I think you'd want some kind of mega isolation mode (with lots of CSP headers and stuff)

[16:01:56.0000] <Domenic>
and you'd want to build remote revocation infrastructure in, kind of like the safe browsing list

[16:02:22.0000] <Domenic>
with those in place, a permissions prompt asking for permission to access the third-party origin might work

[16:03:02.0000] <Domenic>
mega-isolation mode is where most the handwaving is

[16:04:10.0000] <jrenner_>
hehe yeah... and there's a lot of question of how much we would could/need to protect the user from the trusted host being vulnerable


2016-07-07
[00:43:34.0000] <Ms2ger>
Is the dom manipulation task source guaranteed to only be used in window scopes?

[00:54:40.0000] <annevk>
Ms2ger: I'm very skeptical that task sources are actually well organized and used

[03:58:15.0000] <hsivonen>
annevk: https://hsivonen.fi/rs/encoding_rs/ in case you have comments on the API

[04:02:59.0000] <annevk>
hsivonen: looks pretty good

[04:03:55.0000] <annevk>
hsivonen: I have a large backlog of standard issues so still need to solve layering between HTML and Encoding

[04:04:27.0000] <annevk>
hsivonen: but from your feedback that should not change much API-wise

[04:11:22.0000] <hsivonen>
annevk: yeah, that wouldn't change this API in practice

[04:12:50.0000] <annevk>
hsivonen: I like the introduction too

[04:15:29.0000] <annevk>
hsivonen: the one thing that is a little weird is that you stress UTF-16 is important for Gecko, but you also don't want to invest in perf there

[04:16:17.0000] <annevk>
hsivonen: it seems for integration with Gecko and the OS, UTF-16 perf is important, even though it's ASCII-incompatible and Web-wise uninteresting

[04:39:45.0000] <FND>
are there any articles on Custom Elements v1 that provide some guidance/interpretation/... on top of the spec? all I can find are v0 write-ups

[04:40:29.0000] <FND>
(e.g. I seem to recall there was a flag to activate v1 in Chrome, but can't seem to find it)

[04:47:29.0000] <annevk>
FND: http://hayato.io/2016/shadowdomv1/

[04:49:45.0000] <FND>
annevk: thanks - but that doesn't seem to cover Custom Elements?

[04:53:53.0000] <annevk>
Doh, not sure there's an equivalent

[04:56:01.0000] <FND>
bummer - it seems a bit tricky to get started if you're not privy to the face-to-face discussions

[05:03:25.0000] <annevk>
FND: HTML Standard has examples

[05:04:06.0000] <annevk>
FND: most discussion is on GitHub, but no summery yet

[05:04:28.0000] <annevk>
FND: also don't think anyone is shipping yet

[05:04:57.0000] <FND>
yeah, that's fair - I wasn't really complaining, just pointing out that it feels a bit weird at the moment

[05:05:14.0000] <FND>
so I'll probably stick with v0 for now and port when the v1 ecosystem is a bit more advanced

[05:07:32.0000] <nox>
The IndexedDB spec makes me sad.

[05:07:41.0000] <nox>
It seems quite hand-wavy on the task queuing front.

[07:57:57.0000] <hsivonen>
annevk: I mean I don't want to invest in the perf of UTF-16 as a network-facing encoding

[07:58:12.0000] <hsivonen>
annevk: I do want to invest in the perf of UTF-16 as the in-RAM encoding

[07:58:21.0000] <hsivonen>
annevk: I guess I will need to clarify that

[07:59:12.0000] <annevk>
hsivonen: that makes sense, just adding "unless it helps the browser case" is probably sufficient

[07:59:55.0000] <hsivonen>
UTF-16 as a sequence of u16 needs perf. UTF-16 as a sequence of u8 doesn't

[08:01:40.0000] <hsivonen>
annevk: in practice, I mean that I'm not going to write an SSE2 fast path for ASCII for UTF-16BE, UTF-16LE or ISO-2022-JP

[08:02:15.0000] <hsivonen>
I do intend to write SSE2 acceleration from ASCII to in-RAM UTF-16 Basic Latin

[08:02:57.0000] <hsivonen>
which will be reusable across the ASCII-compatible encodings

[08:02:58.0000] <annevk>
hsivonen: do we use SIMD today?

[08:03:18.0000] <hsivonen>
annevk: only to accelerate ASCII to Basic Latin when decoding UTF-8

[08:03:29.0000] <hsivonen>
but not for the other ASCII-compatible encodings

[08:04:18.0000] <hsivonen>
the old decoders aren't well-designed enough for the acceleration to generalize

[08:05:01.0000] <hsivonen>
which is one reason to do a full rewrite

[08:06:17.0000] <annevk>
hsivonen: SIMD doesn't make sense for variable-width?

[08:06:49.0000] <annevk>
I guess the simultaneous processing doesn't really work anymore at that point

[08:07:10.0000] <hsivonen>
it might, but let's start with parity with the old UTF-8 decoder, which accelerates ASCII only

[08:07:49.0000] <hsivonen>
there exist UTF-8 decoders that use SIMD for more, but they aren't suitably licensed, so I haven't looked at the details

[08:14:40.0000] <annevk>
hsivonen: https://woboq.com/blog/utf-8-processing-using-simd.html has some analysis on different strategies

[08:27:13.0000] <rektide>
Am I reading it right- https://notifications.spec.whatwg.org/#constructors step #2 means Notifications can not be launched from a ServiceWorker?

[08:28:07.0000] <rektide>
I was intending to make a small app to set a "look away from screen" reminder for myself, and was hoping I could implement the app chiefly as a service worker that pops up a notification

[08:58:45.0000] <annevk>
rektide: just use showNotification

[10:35:48.0000] <hsivonen>
annevk: IIRC that one is LGPL

[10:41:01.0000] <hsivonen>
annevk: also, it uses more than just SSE2 and Rust is currently bad at using intruction set extensions conditionally depending on the run-time-detected capabilities of the CPU

[10:43:39.0000] <annevk>
hsivonen: you can depend on 2 being available but not 4, or some such?

[10:50:55.0000] <annevk>
Anyway, the wins relative to iconv are pretty cool

[14:17:42.0000] <zcorpan>
jgraham: i'm pondering if it's possible to display passed assertions in testharness.js in the results table (maybe a new column), but i don't know if it's possible to associate an assertion with a test (other then when it throws)... other than when file_is_test is true

[14:41:23.0000] <zcorpan>
still could be useful for file_is_test tests

[15:08:58.0000] <gsnedders>
zcorpan: what's the use of that?

[15:09:33.0000] <gsnedders>
zcorpan: and assertions are always kinda linked to tests insofar as if they fail the test fails

[15:10:26.0000] <zcorpan>
gsnedders: give some confidence that the assertions have run at all (with async tests it's not obvious)

[15:11:40.0000] <zcorpan>
and see the order the assertions ran in, seems useful for debugging or when writing tests

[15:13:07.0000] <zcorpan>
also https://groups.google.com/a/chromium.org/d/msg/blink-dev/rDKsRjVYsZM/71w4_y6HBQAJ

[15:19:36.0000] <smaug____>
Does Edge support data: urls?

[15:21:06.0000] <Jayflux>
smaug____,  yep I think so

[15:21:20.0000] <smaug____>
anyone with Edge then :)

[15:21:27.0000] <smaug____>
want to test something simple

[15:21:32.0000] <smaug____>
data:text/html,<input type="range" multiple min=0 max=24 value=0,24 step=1.0>

[15:21:42.0000] <smaug____>
does that multiple do anything special

[15:27:15.0000] <Domenic>
lol can't paste data URLs in Edge

[15:27:30.0000] <Domenic>
It does not

[15:27:52.0000] <Domenic>
I think Hixie just added that one day without implementer commitment :-/

[15:43:28.0000] <Mek>
are "https://foobar.com" and "https://foobar.com:443" supposed to be same-origin or not? Blink thinks they are not same-origin, while chromium outside of blink thinks they are...

[15:44:14.0000] <Mek>
actually, never mind, they both think they are not same-origin, my bug was somewhere else

[15:46:18.0000] <Mek>
no, scratch that, it does have that inconsistency...

[15:51:53.0000] <Mek>
or maybe it doesn't matter because in practice you'll never get an explicit port in a url when the port is the default port for the scheme...

[15:53:46.0000] <Domenic>
I haven't checked against our URL spec reference implementation, but I believe per https://url.spec.whatwg.org/#default-port and its one reference, once parsed those two URLs are supposed to be indistinguishable, which would mean the origin check would call them equal

[15:57:20.0000] <Mek>
yeah, that indeed seems to be the case, thanks


2016-07-08
[22:49:03.0000] <annevk>
Domenic: was added per https://www.w3.org/Bugs/Public/show_bug.cgi?id=13154 which seems to have had at least some interest from Mozilla

[22:51:26.0000] <annevk>
Ah, looks like you found that too

[01:36:41.0000] <zcorpan>
botie: inform smaug____ <input type=range multiple> should give the widget two handles. as a data point, the audience really liked this feature when LeaVerou presented it at CSSDay.nl (she wrote a polyfill for it). https://leaverou.github.io/multirange/

[01:36:41.0000] <botie>
will do

[03:02:36.0000] <zcorpan>
maybe we should move the IDL stuff from the obsolete section into the main IDL block, with "// obsolete" instead?

[03:02:55.0000] <botie>
smaug____, at 2016-07-08 08:36 UTC, zcorpan said: <input type=range multiple> should give the widget two handles. as a data point, the audience really liked this feature when LeaVerou presented it at CSSDay.nl (she wrote a polyfill for it). https://leaverou.github.io/multirange/

[03:05:04.0000] <smaug____>
zcorpan: right. <input type=range multiple> has been in the spec for years and no one has implemented it

[03:05:59.0000] <zcorpan>
smaug____: yeah

[03:19:22.0000] <zcorpan>
/me goes offline until august 9th, reachable on twitter

[03:22:13.0000] <annevk>
ah yeah, I'm away next week, not sure if I'm reachable, will have to find out

[03:33:33.0000] <smaug____>
happy holidays

[04:28:50.0000] <smaug____>
hmm, have people started to use sync XHR more again

[04:29:18.0000] <smaug____>
at least I think I've seen more sync XHR usage related bugs

[04:44:12.0000] <hsivonen>
annevk: yeah, we are not *finally* allowed to depend on SSE2 being available, but unconditionally depending on SSE4 being available is not OK

[04:45:18.0000] <hsivonen>
annevk: well, more precisely, right now, we are allowed to depend on SSE2 on Mac and Windows, but Linux getting dragged closer to the present day is just a matter of time

[04:47:51.0000] <hsivonen>
I expect Mozilla-official builds for Linux to start requiring SSE2 when Rust becomes mandatory at the latest

[04:58:35.0000] <Ms2ger>
s/not/now/

[06:29:07.0000] <gsnedders>
(OS X never shipped on any Intel hardware without SSE2, did it?)

[06:29:36.0000] <gsnedders>
(Oh, SSE2 is even older than I remembered. Definitely didn't, then.)

[06:44:43.0000] <nox>
https://w3c.github.io/IndexedDB/#dom-idbfactory-open

[06:44:56.0000] <nox>
When in the spec is the IDBOpenDBRequest's done flag set to true...?

[07:22:20.0000] <annevk>
nox: I recommend filing bugs for all grievances

[07:22:27.0000] <nox>
Ok.

[07:22:28.0000] <annevk>
nox: jsbell should be able to fix them

[07:22:54.0000] <annevk>
nox: but his timezone is suboptimal

[07:23:06.0000] <nox>
Moon Time?

[07:23:33.0000] <annevk>
SF

[08:26:37.0000] <smaug____>
Domenic: FWIW, createDocument seems to return XMLDocument (in case you were thinking about removing that interface)

[08:44:50.0000] <annevk>
smaug____: see issue against DOM Standard

[10:05:58.0000] <annevk>
I'd like a topic that covers browsing context / document lifecycle

[10:06:07.0000] <annevk>
And maybe one for event loop?

[10:06:36.0000] <annevk>
There's still quite a bit of handwaving there

[10:56:24.0000] <__n0aaaaa>
Hello, could someone explain me what they mean by API base URL in https://www.w3.org/TR/XMLHttpRequest/#dom-xmlhttprequest-open

[10:56:31.0000] <__n0aaaaa>
is it location.href?

[10:56:38.0000] <__n0aaaaa>
or location.origin?

[10:56:56.0000] <__n0aaaaa>
the context being a browser

[10:57:14.0000] <__n0aaaaa>
http://w3c.github.io/html/webappapis.html#api-base-url

[10:57:20.0000] <__n0aaaaa>
doesn't help me much either

[11:00:44.0000] <__n0aaaaa>
no one knows?

[11:04:34.0000] <__n0aaaaa>
‚Ä¶I guess it's not the right place to ask for help regarding specification

[11:04:40.0000] <__n0aaaaa>
:/

[11:19:18.0000] <TabAtkins>
Domenic: I'll check it out (re: [CEReactions])

[11:20:18.0000] <TabAtkins>
Domenic: https://html.spec.whatwg.org/multipage/scripting.html#cereactions is a "dfn" type. It needs to be "extended-attribute".

[11:20:40.0000] <TabAtkins>
Oh shoot,nm.

[11:20:42.0000] <TabAtkins>
It is that.

[11:21:03.0000] <TabAtkins>
But I guess plinss doesn't yet have the "handle arbitrary new definition types" code. :/

[11:21:13.0000] <TabAtkins>
I'll bug him and get that added to the list explicitly, at least.


2016-07-10
[05:25:13.0000] <Guest_84847>
Allah is doing

[05:25:18.0000] <Guest_84847>
sun is not doing Allah is doing

[05:25:25.0000] <Guest_84847>
moon is not doing Allah is doing

[05:25:31.0000] <Guest_84847>
stars are not doing Allah is doing

[05:25:42.0000] <Guest_84847>
planets are not doing Allah is doing

[05:25:51.0000] <Guest_84847>
galaxies are not doing Allah is doing

[05:25:59.0000] <Guest_84847>
oceans are not doing Allah is doing

[05:26:09.0000] <Guest_84847>
mountains are not doing Allah is doing

[05:26:16.0000] <Guest_84847>
trees are not doing Allah is doing

[05:26:24.0000] <Guest_84847>
mom is not doing Allah is doing

[05:26:30.0000] <Guest_84847>
dad is not doing Allah is doing

[05:26:36.0000] <Guest_84847>
boss is not doing Allah is doing

[05:26:45.0000] <Guest_84847>
job is not doing Allah is doing

[05:26:51.0000] <Guest_84847>
dollar is not doing Allah is doing

[05:26:56.0000] <Guest_84847>
degree is not doing Allah is doing

[05:27:04.0000] <Guest_84847>
medicine is not doing Allah is doing

[05:27:13.0000] <Guest_84847>
customers are not doing Allah is doing

[05:27:26.0000] <Guest_84847>
you can not get a job without the permission of allah

[05:27:40.0000] <Guest_84847>
you can not get married without the permission of allah

[05:28:23.0000] <Guest_84847>
nobody can get angry at you without the permission of allah

[05:28:33.0000] <Guest_84847>
light is not doing Allah is doing

[05:28:38.0000] <Guest_84847>
fan is not doing Allah is doing

[05:28:46.0000] <Guest_84847>
businessess are not doing Allah is doing

[05:28:53.0000] <Guest_84847>
america is not doing Allah is doing

[05:29:17.0000] <Guest_84847>
fire can not burn without the permission of allah

[05:29:29.0000] <Guest_84847>
knife can not cut without the permission of allah

[05:29:39.0000] <Guest_84847>
rulers are not doing Allah is doing

[05:29:48.0000] <Guest_84847>
governments are not doing Allah is doing

[05:30:50.0000] <Guest_84847>
sleep is not doing Allah is doing

[05:30:59.0000] <Guest_84847>
hunger is not doing Allah is doing

[05:31:34.0000] <Guest_84847>
food does not take away the hunger Allah takes away the hunger

[05:31:54.0000] <Guest_84847>
water does not take away the thirst Allah takes away the thirst

[05:32:02.0000] <Guest_84847>
seeing is not doing Allah is doing

[05:32:12.0000] <Guest_84847>
hearing is not doing Allah is doing

[05:32:24.0000] <Guest_84847>
seasons are not doing Allah is doing

[05:32:32.0000] <Guest_84847>
weather is not doing Allah is doing

[05:32:48.0000] <Guest_84847>
humans are not doing Allah is doing

[05:32:55.0000] <Guest_84847>
animals are not doing Allah is doing

[05:34:22.0000] <Guest_84847>
the best amongst you are those who learn and teach quran

[05:34:52.0000] <Guest_84847>
one letter read from book of Allah amounts to one good deed and Allah multiplies one good deed ten times

[05:35:38.0000] <Guest_84847>
hearts get rusted as does iron with water to remove rust from heart recitation of Quran and rememberance of death

[05:35:53.0000] <Guest_84847>
heart is likened to a mirror

[05:36:11.0000] <Guest_84847>
when a person commits one sin a black dot sustains the heart

[05:38:03.0000] <Guest_84847>
to accept Islam say that i bear witness that there is no deity worthy of worship except Allah and Muhammad peace be upon him is his slave and messenger

[05:41:16.0000] <Guest_84847>
read book http://www.fazaileamaal.com

[05:41:45.0000] <Guest_84847>
read book http://www.muntakhabahadith.com

[05:42:53.0000] <nox>
wf

[05:42:55.0000] <nox>
wtf*

[05:43:09.0000] <Guest_84847>
need spiritual teacher visit http:/www.alhaadi.org.za

[05:43:16.0000] <nox>
annevk: ^

[05:43:23.0000] <Guest_84847>
allah created the sky without any pillars

[05:46:03.0000] <Guest_84847>
allah makes the sun rise from the east and Allah makes the sun set in the west

[05:46:31.0000] <Guest_84847>
allah makes the day into the night and Allah makes the night into the day

[05:46:42.0000] <Guest_84847>
allah gives life and Allah gives death

[05:47:09.0000] <Guest_84847>
all creation are useless,worthless,hopeless

[05:47:11.0000] <Guest_84847>
can not do

[05:47:16.0000] <Guest_84847>
can not benefit

[05:47:19.0000] <Guest_84847>
can not harm

[05:47:34.0000] <Guest_84847>
allah is the doer of each and everything

[05:47:48.0000] <Guest_84847>
when Allah wants us to stand we stand

[05:47:59.0000] <Guest_84847>
when Allah wants us to sit we sit

[05:48:06.0000] <Guest_84847>
i am not doing Allah is doing

[05:48:42.0000] <Guest_84847>
you are not doing Allah is doing

[05:48:57.0000] <Guest_84847>
atom bomb is not doing Allah is doing

[05:49:08.0000] <Guest_84847>
rice is not doing Allah is doing

[05:49:24.0000] <Guest_84847>
all creation get together can not create one grain of rice

[05:49:40.0000] <Guest_84847>
all humans get together can not stop rain

[05:50:19.0000] <Guest_84847>
all humans get together can not make anybody hungry

[05:50:42.0000] <Guest_84847>
all humans get together can not move sun one second up or down

[05:51:10.0000] <Guest_84847>
we can not count the hair on our head

[05:51:20.0000] <Guest_84847>
we can not count the rain drops

[05:51:34.0000] <Guest_84847>
we can not count the particles of sand

[05:51:45.0000] <Guest_84847>
medicine has no power to cure

[05:52:02.0000] <Guest_84847>
two people take same medicine one passes away and one does not

[05:53:07.0000] <Guest_84847>
degree has no power to give job

[05:53:23.0000] <Guest_84847>
many people have degrees but do not have jobs

[05:53:32.0000] <Guest_84847>
sustenance does not depend on effort

[05:53:52.0000] <Guest_84847>
one person is working very much but is earning very less

[05:54:07.0000] <Guest_84847>
other person is working very less but is earning very much


2016-07-11
[02:05:25.0000] <mkwst>
annevk: Good morning? You around for a question about Fetch's `redirect mode`?

[05:10:49.0000] <nox>
annevk: Is all the storage stuff supposed to share the same quota per origin?

[08:32:32.0000] <smaug____>
how does one enable shadow DOM in blink?

[08:32:38.0000] <smaug____>
for testing

[10:15:55.0000] <smaug____>
so, does anyone know how to enable shadow DOM API in blink?

[10:16:44.0000] <smaug____>
/me was planning to quickly test how fullscreen API and pointer lock API work there

[11:10:30.0000] <TabAtkins>
Domenic: [CEReactions] shoudl be autolinking now

[15:06:01.0000] <smaug____>
question, should object url revoking work even if the original url had got ?somequery or #somefragment

[15:06:36.0000] <smaug____>
(per spec it shouldn't but asking what someone might expect)


2016-07-12
[20:25:08.0000] <fujihiro>
DNS AAAA record of https://whatwg.org/ returns 2607:f298:4:148::a70:f5c3. But this address is unreachable. You can test with http://ipv6-test.com/validate.php

[21:18:07.0000] <MikeSmith>
fujihiro: you should get that info to Hixie when he is around

[21:18:54.0000] <MikeSmith>
fujihiro: I don‚Äôt think Hixie can do anything to fix it, because it‚Äôs a general Dreamhost issue

[21:20:39.0000] <MikeSmith>
fujihiro: Dreamhost has long had IPv6 issues and they claim to have fixed them but in my experience they continue to have some serious problems.

[21:22:13.0000] <MikeSmith>
fujihiro: so for my local machine, I change my /etc/hosts file to force it to only use IPv4 addresses for whatwg.org domains

[21:22:16.0000] <MikeSmith>
for example:

[21:22:18.0000] <MikeSmith>
75.119.197.251 help.whatwg.org

[21:22:19.0000] <MikeSmith>
75.119.197.251 wiki.whatwg.org

[21:22:19.0000] <MikeSmith>
fe80::1%lo0 help.whatwg.org

[21:22:19.0000] <MikeSmith>
fe80::1%lo0 wiki.whatwg.org

[21:32:05.0000] <fujihiro>
MikeSmith: Thanks for the info. But, is this really difficult problem? If the web server does not support IPv6, this can be solved just by removing AAAA record from DNS.

[21:33:19.0000] <MikeSmith>
fujihiro: true. I‚Äôll ping Hixie about it

[21:33:40.0000] <fujihiro>
MikeSmith:  Thanks.

[21:34:28.0000] <MikeSmith>
fujihiro: thanks for the heads-up about it

[21:40:38.0000] <MikeSmith>
fujihiro: so it seems Dreamhost have messed around with the DNS and the best way to get them to fix it is to tweet a message to @DreamHost on twitter https://twitter.com/dreamhost

[21:58:34.0000] <fujihiro>
MikeSmith: OK, I did. Thank you. I'll let you know if they reply to my message.

[21:58:49.0000] <MikeSmith>
fujihiro: super, thanks

[03:33:46.0000] <smaug____>
asking again, does anyone know how to enable shadow DOM in blink?

[03:33:56.0000] <smaug____>
or is that not yet possible?

[03:34:05.0000] <smaug____>
(talking about shadow DOM v1)

[03:39:58.0000] <MikeSmith>
hayato: ‚¨Ü

[06:41:57.0000] <nox>
Anyone familiar with https://w3c.github.io/IndexedDB/#steps-for-opening-a-database?

[06:42:05.0000] <nox>
I don't understand the note in step 3.

[06:44:31.0000] <nox>
Step 2 sorry.

[06:44:56.0000] <nox>
The upgrade transaction is started in step 8,

[06:45:13.0000] <nox>
so I don't understand how the note in step 2 can claim that the upgrade transaction will be started immediately.

[06:46:15.0000] <nox>
Oh misread something again, never mind me I'll study a bit more the spec.

[06:49:15.0000] <zcorpan>
Domenic: "The [CEReactions] extended attribute must take no arguments, and must not appear on anything other than an operation, attribute, setter, or deleter. Additionally, it must not appear on readonly attributes, unless the readonly attribute is also annotated with [PutForwards]."

[06:49:27.0000] <zcorpan>
Domenic: should things with PutForwards have it?

[06:49:34.0000] <zcorpan>
Domenic: in particular elm.style

[06:51:09.0000] <nox>
If there exists a database with version = 1 and that I try to open it with version = 2 from two different tabs at once at the same moment, can't there be a race condition where two upgrade transactions are started?

[07:19:25.0000] <Domenic>
zcorpan: yeah, pending a change in decision on https://github.com/w3c/webcomponents/issues/521, elm.style should have it. Did the quoted text confuse things in some way?

[08:38:46.0000] <moo-_->
Any DOM experts here?

[08:38:47.0000] <moo-_->
http://stackoverflow.com/questions/38333118/what-factors-drive-virtual-dom-to-outperform-browser-native-dom

[10:20:06.0000] <kochi>
smaug____: On M53 (canary/dev), Shadow DOM v1 is enabled by default.  On M52/51 (beta/stable), you need to turn on "chrome://flags/#enable-experimental-web-platform-features".

[10:20:33.0000] <kochi>
ah, maybe canary is already M54.

[10:54:21.0000] <smaug____>
kochi: aha, perhaps chrome hasn't updated itself on my fedora

[11:29:23.0000] <Domenic>
moo-_-: in general virtual DOM is slower than real DOM

[12:19:23.0000] <jgraham>
My rough understanding is that "it's faster" isn't quite true. It's a technique that will typically prevent you shooting yourself in the foot wrt performance, but it isn't faster than the most optimised DOM code you could write to solve a particular problem.

[16:13:26.0000] <Domenic>
Does anyone have opinions on whether <details>'s toggle event should bubble or not? https://github.com/whatwg/html/issues/1533


2016-07-13
[22:55:39.0000] <MikeSmith>
Domenic: I guess I wonder more why we would not want it to bubble, and also why the spec does not already explicitly says it does not bubble (if that is the intent)

[22:56:12.0000] <MikeSmith>
also wonder whether in implementations it actually does not bubble

[23:45:18.0000] <fujihiro>
MikeSmith: I got a reply from DreamHost: "You can change the DNS settings for a domain here: https://t.co/rrjkP65eof"

[23:45:23.0000] <fujihiro>
And, I found a document about how to remove IPv6 address: <https://help.dreamhost.com/hc/en-us/articles/216510458-IPv6>

[23:56:44.0000] <MikeSmith>
fujihiro: thanks will let Hixie know

[00:20:42.0000] <MikeSmith>
Domenic: d‚Äôoh nm, I actually took time to read that issue and see it says ‚ÄúFire a simple event‚Äù. So I will shut up now‚Ä¶

[00:22:01.0000] <MikeSmith>
fujihiro: from what Hixie told me previously I think the problem was that he had already made changes and then Dreamhost came along and overwrote them

[01:22:28.0000] <fujihiro>
MikeSmith: I want to clarify. Do you mean the following?

[01:22:28.0000] <fujihiro>
1) Hixie did set an IPv6 address

[01:22:28.0000] <fujihiro>
2) Hixie removed the address

[01:22:28.0000] <fujihiro>
3) DreamHost added an IPv6 address again

[01:29:22.0000] <MikeSmith>
fujihiro: yeah something like that I think

[01:30:31.0000] <fujihiro>
OK, I'll tell them.

[01:30:56.0000] <MikeSmith>
fujihiro: personally I think the best solution to this problem would be to move the whatwg.org hosting away from Dreamhost and over to some more modern provider like digitalocean or whatever, but it‚Äôs not up to me

[10:07:22.0000] <aklein>
Domenic: ping?

[10:07:31.0000] <Domenic>
aklein: pong

[10:07:50.0000] <aklein>
Domenic: looking at your <template> + custom elements thing...does importNode not work?

[10:08:08.0000] <Domenic>
aklein: no. importNode clones then adopts.

[10:09:30.0000] <aklein>
Domenic: really? that's not my reading of the spec

[10:10:16.0000] <aklein>
https://dom.spec.whatwg.org/#dom-document-importnode and https://dom.spec.whatwg.org/#concept-node-clone

[10:10:22.0000] <Domenic>
hmmm

[10:10:31.0000] <Domenic>
dominic may have confused me

[10:10:40.0000] <aklein>
the latter says "Let copy be the result of creating an element, given document..."

[10:11:04.0000] <Domenic>
right...

[10:11:16.0000] <aklein>
I know this pretty well because I helped come up with how instantiation from templates worked in v0

[10:16:20.0000] <aklein>
guess we'll have to wait for dominicc to wake up, but I'm pretty sure everything is fine

[10:16:34.0000] <aklein>
(as long as we continue to be okay telling people they have to use importNode instead of cloneNode)

[10:17:13.0000] <Domenic>
I mean I think that's kind of wacky but I guess it's always been wacky

[14:41:01.0000] <zcorpan>
Domenic: re elm.style, i had glossed over it when adding [CEReactions] to cssom and later stumbled over it and realized i hadn't annotated elm.style with it (thinking since it forwards to elm.style.cssText, only that should have the annotation)

[14:41:19.0000] <Domenic>
ah interesting

[14:42:04.0000] <Domenic>
I guess it depends on exactly how PutForward interacts with [CEReactions]...

[14:42:18.0000] <zcorpan>
yeah

[14:42:33.0000] <Domenic>
So far we've added it to all the other [PutForwards]

[14:42:43.0000] <Domenic>
But I could see it in theory not being necessary

[14:43:30.0000] <zcorpan>
i'll leave that for you to decide one way or the other; pls file an issue on cssom if it should have more [CEReactions]s :-)

[14:43:55.0000] <zcorpan>
time to sleep

[14:44:21.0000] <Domenic>
sounds good

[15:36:38.0000] <Domenic>
ping wanderview to review https://github.com/whatwg/html/pull/1527 (not urgent)

[15:36:38.0000] <botie>
will do

[15:37:05.0000] <Domenic>
dang now we have this ticking time bomb. what will botie do with that command. it could be anything.

[16:40:58.0000] <smaug____>
jsbell: ping

[16:41:10.0000] <jsbell>
smaug_____: what's up?

[16:41:23.0000] <smaug____>
jsbell: in https://wicg.github.io/entries-api/ why you changed some callback interfaces to callbacks?

[16:41:44.0000] <smaug____>
I mean, in blink they are callback interfaces at least in .idl files

[16:41:47.0000] <jsbell>
(Did I see four underscores, or did I see five? Well did I? Do I feel lucky, punk?)

[16:41:50.0000] <jsbell>
looking....

[16:42:40.0000] <smaug____>
(smaug has just a bit long tail here _____)

[16:43:59.0000] <jsbell>
smaug: tl;dr is probably that I don't understand the difference between "callback" and "callback interface", reading webidl now...

[16:44:18.0000] <smaug____>
jsbell: event listeners for example are callback interfaces

[16:44:36.0000] <smaug____>
so, function(event) {} or { handleEvent: function(event) {}}

[16:44:40.0000] <smaug____>
both work

[16:45:07.0000] <jsbell>
smaug: yeah, not sure why I left that out. I'll add it back. not intentional.

[16:45:17.0000] <smaug____>
thanks

[16:50:17.0000] <jsbell>
smaug: updated. Can you sanity check

[16:50:18.0000] <jsbell>
?

[16:50:35.0000] <smaug____>
jsbell: will to in a bit

[16:50:38.0000] <smaug____>
do


2016-07-14
[17:28:09.0000] <smaug____>
jsbell:  Entry webkitGetAsEntry(); that webidl doesn't allow returning null, but the prose says null can be returned

[17:28:19.0000] <smaug____>
so Entry -> Entry?

[18:23:24.0000] <Domenic>
callback interfaces are icky

[18:23:34.0000] <Domenic>
but if this is a legacy API then what can you do

[01:27:23.0000] <hsivonen>
annevk: earlier I was looking for CC0 test cases for the Encoding Standard. Now there are some: https://github.com/hsivonen/encoding_rs/commit/186ab87b68a6cd1eb3fa4895ce6dc87c66f11cf8

[05:53:43.0000] <aleray_>
hi, using html5lib, when I run `html5lib.parseFragment(myhtml, treebuilder="lxml")` I get a list of Element, rather than an ElementTree. Is it normal?

[06:08:49.0000] <MikeSmith>
gsnedders: ‚¨Ü

[06:41:34.0000] <nox>
aleray_: I think so.

[06:42:02.0000] <nox>
aleray_: https://html.spec.whatwg.org/multipage/syntax.html#parsing-html-fragments

[06:42:05.0000] <nox>
Cf. step 14.

[07:07:47.0000] <aleray_>
nox, thanks

[07:28:09.0000] <aleray_>
nox, lxml html5parser seems todo it "by hand": https://github.com/lxml/lxml/blob/master/src/lxml/html/html5parser.py#L95

[08:42:34.0000] <JakeA>
Domenic: https://html.spec.whatwg.org/multipage/webappapis.html#dom-createimagebitmap - the only step that's in parallel here is resolving the promise. Does this mean the promise is kinda pointless and the work will be on the main thread?

[08:43:18.0000] <JakeA>
Eg steps 10 & 11

[10:19:49.0000] <Domenic>
JakeA: hah, yes, looks like a bug.

[10:20:04.0000] <JakeA>
Domenic: cheers, will write it up

[10:20:26.0000] <Domenic>
I wonder where implementations actually go to be "in parallel"

[10:20:34.0000] <Domenic>
seems like there could be race conditions depending...

[10:20:45.0000] <Domenic>
or maybe there's a copy of the incoming data made at the top of the algorithm?

[10:20:52.0000] <gsnedders>
aleray_: yeah, there's no way to give a fragment as a tree, because you essentially have multiple top-level eleemnts

[10:22:25.0000] <JakeA>
Domenic: pretty early. I think the intention is for decoding & raster to happen in another thread if the input is blob

[10:23:21.0000] <Domenic>
I'll be curious what junov says...

[10:23:33.0000] <Domenic>
Is the idea that the promise-returning only matters for the blob input?

[10:24:12.0000] <Domenic>
so for img/video/etc. cases we should just collapse them into "Return a new promise resolved with ..."?

[10:26:12.0000] <JakeA>
Domenic: I'd love it if we could do SVG rasterizing in another thread. That means it should be done for <img> too, since the resize operation means the SVG needs to be re-rastered.

[11:18:20.0000] <Domenic>
Can someone check to see if Gecko uses the replace argument to window.open? smaug____?

[11:19:10.0000] <smaug____>
Domenic: you mean if that is implemented?

[11:19:15.0000] <Domenic>
smaug____: yeah

[11:19:29.0000] <smaug____>
(in a meeting but will check after that)

[11:19:34.0000] <Domenic>
thanks!

[11:32:22.0000] <Domenic>
smaug____: nevermind, I was able to test.

[11:50:59.0000] <smaug____>
Domenic: back

[11:51:04.0000] <smaug____>
the outcome was?

[11:51:45.0000] <smaug____>
aha, I see the github email

[11:53:21.0000] <smaug____>
Domenic: did you test document.open case

[11:53:25.0000] <jsbell>
smaug____: Entry? change made

[11:53:31.0000] <Domenic>
smaug____: ah right good point

[11:53:33.0000] <smaug____>
jsbell: thanks

[11:53:50.0000] <smaug____>
Domenic: since IIRC Gecko supports replace in document.open

[11:54:07.0000] <Domenic>
smaug____: Chrome's bindings for document.open() literally do dynamic dispatch to window.open() O_o

[11:54:13.0000] <jsbell>
almost missed that; did I miss anything else? (also, bugs welcome!)

[11:54:16.0000] <Domenic>
to be fair that does seem to be what the spec implies

[11:54:35.0000] <smaug____>
we do something similar... reading some code

[11:54:59.0000] <Domenic>
smaug____: yeah looks like document.open()-as-window.open() does not support replace either http://software.hixie.ch/utilities/js/live-dom-viewer/?saved=4321

[11:55:09.0000] <smaug____>
yes, http://searchfox.org/mozilla-central/source/dom/html/nsHTMLDocument.cpp#1396

[11:55:39.0000] <Domenic>
Hmm that XXXbz means maybe we should ping bz

[11:55:40.0000] <smaug____>
Domenic: and see bz' comment about ignoring replace there

[11:58:16.0000] <smaug____>
Domenic: well, bz just added the comment in somewhat unrelated patch: https://hg.mozilla.org/mozilla-central/rev/f870d9cd5af1#l1.519

[11:59:23.0000] <smaug____>
he split the Open() method to two, one dealing with non window-opening case and other for window opening

[11:59:34.0000] <Domenic>
oh i see

[12:02:53.0000] <smaug____>
Domenic: and the non-window opening case certainly does care about replace param, but that is about different replace param. http://searchfox.org/mozilla-central/rev/5a3efff7dee9d3233f532126afdbcb82ffcc1ff4/content/html/document/src/nsHTMLDocument.cpp#1672-1677 http://searchfox.org/mozilla-central/source/dom/webidl/HTMLDocument.webidl#36,38

[12:03:03.0000] <Domenic>
yeah exactly

[12:03:07.0000] <Domenic>
nice and confusing

[12:03:18.0000] <Domenic>
i mostly just don't want to remove this thing if someone was planning on implementing it soon

[12:04:22.0000] <smaug____>
/me doesn't even know what replace does in window.open

[12:05:21.0000] <Domenic>
we broke the spec without realizing it

[12:05:41.0000] <Domenic>
but it was meant to cause window.open() to navigate the named window with replacement instead of normally

[12:05:55.0000] <Domenic>
so instead of fixing the spec i figure we should just remove it

[12:56:04.0000] <aleray_>
gsnedders, Hi

[12:57:16.0000] <aleray_>
thanks, I though there war a createParent option (orsomething like this) to address that

[12:57:29.0000] <aleray_>
*was

[12:59:25.0000] <aleray_>
In https://html5lib.readthedocs.io/en/latest/html5lib.html?highlight=parsefragment#html5lib.__init__.HTMLParser.parseFragment

[12:59:40.0000] <aleray_>
the "container" option

[14:30:59.0000] <jsbell>
TabAtkins: updated bikeshed, getting "Unknown Status 'ED' used." Any guesses what's bogus in my metadata?

[14:31:40.0000] <jsbell>
https://github.com/w3c/FileAPI/blob/gh-pages/index.bs for reference

[14:32:53.0000] <TabAtkins>
jsbell: Nothing's bogus, it's a semi-breaking update that'll flush out some minor fixes in some places.  The W3C statuses are now limited to groups that I know are W3C groups.

[14:33:04.0000] <jsbell>
/me assumes https://github.com/tabatkins/bikeshed/commit/f02935307493078ab95b09236b27d2f471aebb44 ... ah

[14:33:19.0000] <jsbell>
TabAtkins: Group: webplatform in this case

[14:33:41.0000] <TabAtkins>
Yes, not known yet. Gimme a sec.

[14:34:14.0000] <jsbell>
Cool, found megaGroups = { ... }

[14:34:17.0000] <TabAtkins>
I need to make it friendlier, so if there's no name clash I go ahead and let you use it for an unknown group, but throw a warning asking you to let me know about it.

[14:35:17.0000] <TabAtkins>
Okay, update pushed.

[14:35:36.0000] <jsbell>
yay, works

[14:36:05.0000] <TabAtkins>
You'll also start getting priv-sec nagging. ^_^

[14:36:22.0000] <jsbell>
yep, ignoring it in FileAPI (not my spec...)


2016-07-15
[18:46:48.0000] <botie>
wanderview, at 2016-07-13 22:36 UTC, Domenic said: review https://github.com/whatwg/html/pull/1527 (not urgent)

[22:37:16.0000] <ondras>
so, is there any standardized way for browsers (i.e. no plugins) to receive multicast data (e.g. live streaming) ?

[02:09:10.0000] <krijn>
annevk: server completely taken apart, able to move all the static log files to a new one (yay!), but won't be adding any new logs. Probably best to remove my site from the topic and just keep it as an archive if it's ever needed.

[02:10:24.0000] <krijn>
Sad I didn't make it a full ten years though ;(

[02:11:40.0000] <krijn>
Only dynamic part still left now is the  tagline :)

[15:06:02.0000] <KiChjang>
what's the standard way of batching up multiple HTTP requests?

[15:06:14.0000] <KiChjang>
i've seen people doing a variety of stuff

[15:07:29.0000] <KiChjang>
there seems to be a multipart/mixed MIME type but nobody's using it AFAIK

[15:08:42.0000] <KiChjang>
and then some make a JSON array containing a JSON HTTP request object


2016-07-16
[17:36:10.0000] <deltab>
KiChjang: for what reason? is using multiple requests too slow, or is it for some other reason?


2016-07-17
[02:18:32.0000] <nox>
TabAtkins: Can we produce ebooks from bikeshed?


2016-07-18
[23:54:42.0000] <annevk>
GitHub changed fonts?

[00:01:03.0000] <ondras>
yes

[00:01:07.0000] <ondras>
about a week ago

[00:42:59.0000] <nox>
annevk: System fonts now.

[01:15:48.0000] <smaug____>
does anyone know why https://html.spec.whatwg.org/multipage/browsers.html#navigate javascript: part special cases document's address?

[01:15:54.0000] <smaug____>
very surprising

[01:20:05.0000] <annevk>
smaug____: I guess that's what browsers do?

[01:20:15.0000] <smaug____>
some do

[01:20:19.0000] <smaug____>
some don't

[01:21:39.0000] <smaug____>
how does one get sane text editing in github issues

[05:43:13.0000] <Guest79275>
annevk: not sure what you mean by the URL fetching pinning blob being defined

[05:43:17.0000] <Guest79275>
and that it clones the blob

[05:43:59.0000] <annevk>
Well, the URL parser clones the Blob object and stores it on the returned URL, right?

[06:00:32.0000] <annevk>
Is GitHub really slow?

[10:52:22.0000] <Domenic>
smaug____: to put in code or other things with special characters, surround it with backticks: `<script>`

[10:53:18.0000] <TabAtkins>
nox: Theoretically, sure.  At the moment it only supports generating single-page things, so you wouldn't be able to put together a full epub structure, but it wouldn't be too hard to enable that probably.

[10:54:39.0000] <TabAtkins>
(I have an echidna-publish option that puts together TAR files of the spec and all supporting files, so doing a multi-file thing that way is easy.)

[11:40:26.0000] <smaug____>
Domenic: ah, right. I tend to try always ¬¥ or ', because Finnish keyboard has those keys and ` is behind some modifier

[11:42:50.0000] <TabAtkins>
Markdown's special character set is clearly designed around American keyboards, yeah.

[13:53:09.0000] <smaug____>
aha, 'run synthetic click activation steps ' is buggy. I'm pretty sure it should use 'nearest activatable element'

[13:53:42.0000] <smaug____>
and 'nearest activatable element ' doesn't seem to quite work with <button>'s which aren't in any form

[14:09:22.0000] <smaug____>
filed https://github.com/whatwg/html/issues/1567


2016-07-19
[02:53:19.0000] <annevk>
wanderview_: ping https://github.com/whatwg/html/pull/1527

[02:55:03.0000] <smaug____>
Does anything define where cursor is put when input element is created

[02:55:05.0000] <smaug____>
data:text/html,<script>window.onload = function() { var i = document.createElement("input"); i.value="foo"; document.body.appendChild(i); i.focus();  }</script>

[02:55:43.0000] <smaug____>
I couldn't immediately see anything in HTML spec, but I could have missed it

[02:56:17.0000] <annevk>
smaug____: selection spec maybe?

[02:56:34.0000] <annevk>
smaug____: all that stuff is horribly bad, just like the impls

[02:58:50.0000] <smaug____>
Looks like https://github.com/w3c/web-platform-tests/blob/master/html/semantics/forms/textfieldselection/selection.html relies on certain behavior

[03:02:00.0000] <smaug____>
http://w3c.github.io/selection-api/ isn't the right one

[03:28:13.0000] <mounir>
annevk: regarding the PR I sent to the fullscreen spec, is this in your queue or are you waiting for foolip to comment?

[03:28:57.0000] <annevk>
mounir: queue, though I might want feedback from others too

[03:29:36.0000] <annevk>
mounir: will hopefully get to it today, had to run various errands plus backlog

[03:32:25.0000] <mounir>
annevk: I left a summary of browser feedback in the PR

[03:32:32.0000] <mounir>
annevk: feel free to ping me when it's on top of your queue

[04:02:45.0000] <annevk>
mounir: https://w3c.github.io/screen-orientation/#dfn-triggered-by-a-user-generated-orientation-change doesn't point anywhere?

[04:03:48.0000] <annevk>
mounir: should probably also add a reference to screen orientation

[04:04:04.0000] <mounir>
annevk: the dfn is in a PR

[04:04:21.0000] <annevk>
mounir: oh, screen orientation hasn't changed yet?

[04:04:32.0000] <mounir>
annevk: sorry, I should have pointed this -- you are CC'd there

[04:04:46.0000] <annevk>
found it I think

[04:04:51.0000] <mounir>
I just need to press merge for the other one to change but I wonted foolip and you to comment first

[04:05:09.0000] <mounir>
annevk: https://github.com/w3c/screen-orientation/pull/90 (to be sure)

[04:05:24.0000] <mounir>
annevk: how do I add the ref in this anolis thing?

[04:05:51.0000] <annevk>
mounir: you'd need to patch whatwg/xref if it's not there

[04:07:06.0000] <annevk>
mounir: both changes look reasonable to me, <code>screen.orientation</code> seems a little sketchy

[04:07:34.0000] <mounir>
annevk: Document's ScreenOrientation instance?

[04:07:43.0000] <mounir>
or s/instance/object/

[04:07:49.0000] <annevk>
mounir: yeah, the latter

[04:08:20.0000] <annevk>
although I guess you'd have to define how you get to that instance from the currently script

[04:08:47.0000] <annevk>
probably through the current global

[04:09:27.0000] <mounir>
annevk: have to leave for a meeting, can you put comments on the PR, will address them this afternoon

[04:09:36.0000] <annevk>
okay

[07:58:16.0000] <smaug____>
jgraham: in wpt, what is the right assertion for something which shouldn't happen? assert_true(false, "this shouldn't happen"); ?

[07:58:50.0000] <jgraham>
smaug____: assert_unreached()

[07:59:48.0000] <smaug____>
/me wishes http://testthewebforward.org/docs/#writing-tests worked

[07:59:53.0000] <smaug____>
er, http://testthewebforward.org/docs/

[08:00:19.0000] <smaug____>
click "writing tests" on the right doesn't do anything

[08:00:55.0000] <gsnedders>
smaug____: what browser? WFM here

[08:01:27.0000] <smaug____>
gsnedders: FF and Chrome

[08:01:50.0000] <smaug____>
gsnedders: I'm clicking the link in table of contents

[08:02:30.0000] <gsnedders>
smaug____: ooooh. that doesn't do anything. that's a totally useless TOC given all the sections are in view already‚Ä¶

[08:02:51.0000] <smaug____>
oh, Chrome flashes oddly if the the 'Writing tests' is open below

[08:03:03.0000] <smaug____>
FF doesn't flash but something is scrolled oddly

[08:03:38.0000] <gsnedders>
yeah, stuff is a bit weird

[08:07:11.0000] <gsnedders>
someone really needs to sort a fair bit of that stuff out

[08:07:18.0000] <gsnedders>
and that probably means me doing it at some point‚Ä¶

[08:21:02.0000] <Domenic>
annevk: does it make sense to you how there is no current global unless some JS function (including a built in) is being executed?

[08:21:11.0000] <wanderview_>
JakeA: are you making an agenda again for next week?  can we add #839 to the list?

[08:21:14.0000] <Domenic>
So for anything that happens async, there is no current global

[08:21:38.0000] <Domenic>
Maybe we should add that info to the globals/realms/settings objects section

[08:21:54.0000] <annevk>
Domenic: I guess, just wondering how mouse events work then

[08:22:14.0000] <Domenic>
Well they call JS callbacks mostly

[08:22:21.0000] <annevk>
Domenic: maybe they get to an object through hit testing

[08:22:31.0000] <Domenic>
Ah I see

[08:22:37.0000] <Domenic>
Yeah, that seems likely

[08:22:58.0000] <Domenic>
After all how do you know which window's button was clicked

[08:24:06.0000] <annevk>
For orientation it's a little trickier, but maybe that's the active browsing context or some such

[08:24:28.0000] <annevk>
Gotta go for a bit

[08:41:47.0000] <JakeA>
wanderview_: added to https://github.com/slightlyoff/ServiceWorker/issues/932

[08:42:08.0000] <wanderview_>
thanks!

[09:24:10.0000] <mounir>
annevk: is anolis using a pinned version of xref

[09:52:10.0000] <annevk>
mounir: no, just your checked out copy

[10:00:48.0000] <mounir>
annevk: figured it out

[10:00:57.0000] <mounir>
annevk: html.json and html-generated.json ... is confusing :)

[10:01:08.0000] <annevk>
üëç

[10:01:20.0000] <mounir>
annevk: sent a PR for you to make fun of me

[10:01:44.0000] <mounir>
:)

[10:41:53.0000] <annevk>
Domenic: a Window always has a browsing context?

[10:42:44.0000] <Domenic>
annevk: seems like. Lots of places assume that.

[10:44:20.0000] <annevk>
Domenic: so basically window.document starts returning null when you discard?

[10:44:44.0000] <annevk>
That doesn't happen, hmm

[10:45:07.0000] <Domenic>
annevk: is that implied by my PR? Hmm.

[10:46:06.0000] <annevk>
I guess the Window can still hold onto a document and a browsing context even though the document no longer keeps track of them

[10:46:19.0000] <annevk>
Domenic: I'm not sure, just trying to think it through

[10:47:33.0000] <annevk>
Domenic: well, concept-document-window which window.document uses does assume the document has a browsing context

[10:47:41.0000] <annevk>
Domenic: or did you change that?

[10:48:10.0000] <annevk>
Nope

[10:48:49.0000] <Domenic>
Seems possibly broken, hmm.

[10:49:10.0000] <annevk>
I left a comment

[10:49:23.0000] <Domenic>
The spec has never been good about distinguishing the document's window and the window's document :(

[10:49:43.0000] <annevk>
Yeah and this clearly shows why that's been a problem

[10:49:47.0000] <Domenic>
Unfortunate how this PR keeps growing but I don't see any good intermediate steps

[10:50:09.0000] <annevk>
I think this PR is amazing though in the amount of things it fixes around lifetime

[10:51:25.0000] <Domenic>
Still all feels a bit on shaky ground, but glad you like it :)

[11:08:14.0000] <annevk>
Fetch now has 26 unique contributors

[11:08:23.0000] <annevk>
This GitHub thing ain't so bad

[11:11:53.0000] <jsbell>
Speaking of fetch: anyone recall the process taken to determine that adding 'fetch' to the global namespace was safe? HTTPArchive search, "canary" (etc) builds, ... anything else?

[11:13:35.0000] <annevk>
jsbell: I think we just tried

[11:13:42.0000] <jsbell>
context: https://wicg.github.io/entries-api/#issue-e6c0a36d - I'd like to dropping [NoInterfaceObject] from some de facto standard types. At the moment, Gecko is implementing with [NoInterfaceObject] and Edge will prefix them (*sigh*).

[11:13:46.0000] <annevk>
jsbell: because everyone wanted it to work

[12:01:31.0000] <smaug____>
annevk: Domenic: do you think someone will object fixing https://github.com/whatwg/html/issues/1568 ?

[12:01:56.0000] <smaug____>
since I'm about to add some wpt tests for the behavior browsers have

[12:16:31.0000] <annevk>
smaug____: seems unlikely

[12:47:27.0000] <Domenic>
smaug____: if you want to suggest spec text (not in full PR form, we can do that, just the words you'd suggest) that'd be even better :)

[12:48:09.0000] <smaug____>
Domenic: sure. I need to fix this one gecko bug first, but I should look at the activation stuff some more

[12:48:16.0000] <Domenic>
\o/

[12:48:20.0000] <smaug____>
it seems to have quite some issues still in the spec

[12:48:27.0000] <Domenic>
I believe you :(

[12:48:36.0000] <Domenic>
Having to work around the giant hole that is hit testing doesn't help

[12:48:45.0000] <smaug____>
in other words, I think we may want to switch to the setup browsers have

[12:48:53.0000] <smaug____>
and not what has been in the spec for a long time

[12:49:05.0000] <Domenic>
oh dear, hmm ok

[12:49:15.0000] <Domenic>
the big mismatch i know of is the default actions for click events

[12:49:20.0000] <smaug____>
yes

[12:49:55.0000] <smaug____>
we need to create event path first and operate on that both before and after event dispatch

[12:50:06.0000] <smaug____>
spec has different model

[12:51:12.0000] <Domenic>
Well it has pre-click and post-click activation steps... but I imagine the particulars are not right?

[12:52:05.0000] <smaug____>
well, it stores just one element during pre-click, but it needs to actually have the whole event path during post-click

[12:52:42.0000] <Domenic>
I see, interesting

[12:52:53.0000] <smaug____>
and I think also the synthetic click stuff is wrong, since it should also operate on event path, not just the target

[12:53:06.0000] <smaug____>
(I think. That is something I haven't tested on various browsers yet)

[14:30:51.0000] <nobso>
Hi @all How is the CSS Grid Layout support in the modern browsers over all? Is there a polyfill that i can rely on ?

[14:32:17.0000] <nobso>
TabAtkins, do you have any comments on that?

[14:50:42.0000] <smaug____>
Domenic: FYI, forms can be nested and there is some black magic in event handling code (related to https://github.com/whatwg/html/issues/1533#issuecomment-233771168)

[14:51:01.0000] <smaug____>
(but that is actually an argument to not add similar black magic for toggle)

[14:51:13.0000] <smaug____>
I'd need to check what other browsers do there though

[14:51:16.0000] <smaug____>
with submit

[14:51:18.0000] <smaug____>
and reset

[14:52:09.0000] <Domenic>
Right, I meant conformant, such that we should worry about that case when designing bubbling

[14:52:21.0000] <Domenic>
*conformantly

[14:57:31.0000] <smaug____>
I don't recall spec saying anything about nested forms and submit event

[14:58:19.0000] <smaug____>
bad me that I didn't file a spec bug 8 years ago, https://bugzilla.mozilla.org/show_bug.cgi?id=428135

[14:58:44.0000] <smaug____>
(but apparently webkit had similar behavior then too)


2016-07-20
[22:25:44.0000] <MikeSmith>
mathiasbynens: thanks massively for making https://github.com/operasoftware/devopera-static-backup

[22:27:03.0000] <MikeSmith>
mathiasbynens: the MAMA data alone is still really valuable

[22:28:20.0000] <MikeSmith>
mathiasbynens: case in point https://cdn.rawgit.com/operasoftware/devopera-static-backup/master/http/devfiles.myopera.com/articles/572/langlist-url.htm (which I am looking at for trying to figure out what languages to prioritize in the language detector in the HTML checker)

[22:35:33.0000] <annevk>
Woohoo, :any-link is finally landing in Firefox (sans prefix)

[22:36:56.0000] <annevk>
No more :link:hover, :visited:hover and such

[23:21:39.0000] <mathiasbynens>
MikeSmith: thanks, and sorry for breaking those URLs

[01:09:49.0000] <annevk>
JakeA: I think https://github.com/slightlyoff/ServiceWorker/issues/920#issuecomment-233603440 misses a few things that slightlyoff mentioned

[01:10:18.0000] <annevk>
JakeA: in particular, the without SW scenario doesn't allow for creating the renderer and the fetch to happen in parallel, which is what's being suggested

[01:11:09.0000] <annevk>
JakeA: in particular, this is about a new tab scenario as I understand it, not navigation within an existing tab

[01:12:14.0000] <annevk>
JakeA: also, in part it is about the navigation fetch always returning new data, whereas all the subsequent fetches (and pushes) that follow from that are more likely to come from the cache

[01:13:47.0000] <annevk>
JakeA: furthermore, the with SW scenario doesn't acknowledge the implicit step 1.5, which is making the navigation fetch (and which cannot happen in parallel with creating the renderer since it needs the SW to be there)

[01:30:45.0000] <JakeA>
annevk: ah, my "With SW" was showing how things happen today, so showing the problem not the solution

[01:30:52.0000] <JakeA>
Let me make that more clear

[01:33:21.0000] <JakeA>
annevk: yeah, I'm looking at solutions that could improve this for general navigation, new tab, and maybe even homescreen launch when the browser isn't running

[01:34:52.0000] <annevk>
Well if the browser isn't running we don't even have a network thread

[01:35:30.0000] <annevk>
The interesting bit I think is that when navigation happens we might have a network thread/process ready to go, but no render+SW thread/process

[01:36:15.0000] <JakeA>
Right, and loading that part of the browser first can be optimised to get the request out early. Renderer & SW not so much.

[01:36:22.0000] <annevk>
This is really only the case for top-level browsing contexts and maybe isolated nested browsing contexts going forward

[01:36:56.0000] <annevk>
So to some extent having an API in service workers to handle the navigation case differently doesn't feel like scenario solving to me as much

[01:37:17.0000] <annevk>
But again, maybe there are architectures where the overhead can be much less or non-existent

[01:37:42.0000] <JakeA>
But my first render is still blocked on CSS, which is a subresource

[01:38:36.0000] <annevk>
Yeah, but if that's cached and the network roundtrip takes 200ms+, you're still waiting

[01:38:58.0000] <annevk>
We can assume subresources are in the cache since we also assume the SW is installed

[01:39:42.0000] <annevk>
But the navigation is what can retrieve the interesting cookie-bound data

[01:40:05.0000] <JakeA>
In Facebook's case it doesn't

[01:40:29.0000] <JakeA>
The navigation returns a shell, but it prompts the server to start preparing the user-sepcific stuff

[01:40:34.0000] <JakeA>
specific*

[01:40:50.0000] <JakeA>
Unless I'm mistaken

[01:42:20.0000] <annevk>
Yeah, it sounds like they mostly care about knowing as soon as possible on the server that the user is there

[01:42:40.0000] <JakeA>
I'm just worried about solving this only for Facebook

[01:43:04.0000] <JakeA>
The closest thing we have right now is <link rel="preload">, but we want that before the renderer

[01:43:37.0000] <annevk>
The <link rel=preload> analogy continues to confuse me

[01:43:59.0000] <annevk>
All we have to go on is a navigation request

[01:45:39.0000] <annevk>
I actually think slightlyoff's approach is not that bad, modulo naming and optin-optout

[01:46:33.0000] <JakeA>
Currently the page loads, then they fetch(url) the user data. They want that fetch(url) request to happen sooner, but still receive it via the same mechanism. That's very similar to <link rel="preload">

[01:46:43.0000] <annevk>
It should basically be an opt-in to the "user is going to see your app real soon now"

[01:47:34.0000] <annevk>
I guess it's similar, but rel=preload only makes sense if you already have a document, which we don't

[01:48:39.0000] <JakeA>
But we might have. And if the navigation request doesn't produce a document, the preloads can be dropped

[01:48:55.0000] <annevk>
We might have?

[01:49:07.0000] <JakeA>
A document

[01:49:12.0000] <annevk>
How?

[01:49:18.0000] <annevk>
The whole premise is that we don't

[01:49:31.0000] <JakeA>
Most navigation requests result in the creation of a document

[01:49:47.0000] <annevk>
Sure

[01:50:16.0000] <JakeA>
And if our preloads are associated with that potential document, they can be later associated or dropped if the document doesn't appear

[01:50:58.0000] <annevk>
I don't understand this

[01:52:04.0000] <JakeA>
Take https://wiki-offline.jakearchibald.com/wiki/Fictitious_entry - it serves a page shell then populates it via fetch(articleDataURL)

[01:52:21.0000] <JakeA>
That fetch is delayed by the renderer, SW, and executing the JS on the page

[01:52:41.0000] <annevk>
The scenario we're concerned with is where the user wants to go to example.com, example.com's SW is not booted yet, example.com's document is not created yet, example.com's browsing context process is not done yet, and yet example.com wants to know as soon as possible on its server that the user is coming to them

[01:53:44.0000] <JakeA>
<link rel="preload"> can make that sooner, just after parsing the page. But what I'm proposing is a way to declaratively say "When you start a navigation to this article, you need to preload articleDataURL"

[01:54:15.0000] <JakeA>
We're roughly talking about the same thing, but I'm worried that making this a simple ping is scenario solving

[01:55:16.0000] <annevk>
I don't think the user booting up an app and the OS letting the app's server know that is happening is scenario solving

[01:55:55.0000] <JakeA>
But a preload achieves the same, but in addition the response is useful

[01:56:20.0000] <annevk>
I don't think the response was thrown away necessarily

[01:57:07.0000] <JakeA>
It wasn't in slightlyoff's proposal, but it's a total hack. You end up having to rely on persistence in the global scope

[01:57:38.0000] <annevk>
That does sound problematic if true

[01:57:46.0000] <JakeA>
Sure, the SW will *probably* still be alive for the request that needs it, but surely that's a horrible hack

[01:58:35.0000] <JakeA>
fetchEvent.preflightResponsePromise would be on the fetchEvent for the navigation request

[01:58:44.0000] <JakeA>
But it's a completely different request that wants that response

[01:59:09.0000] <annevk>
Yeah, I think it would make more sense to have a startup event or some such

[01:59:30.0000] <JakeA>
But you'll end up with the same problem

[01:59:43.0000] <annevk>
That way we also only need to do it for the initial navigation to an origin (+ scope I guess)

[02:00:19.0000] <JakeA>
You do something in the startup event that you want to pass to a later fetch event‚Ä¶ you'll end up using the global

[02:00:53.0000] <annevk>
JakeA: wouldn't you you just update the relevant storage data

[02:00:53.0000] <JakeA>
This is what led me to <link rel="preload">, as it (should be) designed to handle these races

[02:01:37.0000] <JakeA>
Storage is async. Won't it race?

[02:02:36.0000] <annevk>
JakeA: it's not really clear how preloading assets helps with races if you need to do something more complicated than just returning blobs to the document

[02:03:56.0000] <JakeA>
annevk: My routes proposal lets you do network stuff and then get a fetch event for the more complex stuff

[02:04:11.0000] <JakeA>
If we want to go that far

[02:04:37.0000] <annevk>
But a simple startup ping that you can cache does too

[02:05:28.0000] <JakeA>
I don't see how you can do with without a high chance of missing it due to races, especially given the time gap between these two events

[02:05:44.0000] <JakeA>
Even with cache transations

[02:05:48.0000] <JakeA>
transactions*

[02:05:51.0000] <annevk>
But they're not for the same resource

[02:06:02.0000] <annevk>
So either way it's complicated

[02:06:45.0000] <annevk>
You're assuming a very simple setup that seems unlikely in practice

[02:07:43.0000] <JakeA>
Navigation starts, preflight ping happens, SW starts up, startup event fired & ping added to cache, fetch event for navigation - served from cache, fetch event from user data - try to get ping response from cache

[02:07:54.0000] <annevk>
(There might be perf benefits to routes in general though. I wonder if there's been measurements on that yet.)

[02:08:12.0000] <JakeA>
Given cache writing is async, that seems really racey

[02:08:22.0000] <annevk>
But is it really just a fetch event for user data?

[02:09:05.0000] <JakeA>
What else is it?

[02:09:47.0000] <annevk>
The startup ping could have some information, of which parts of the response are used for further fetches

[02:10:30.0000] <JakeA>
I don't see how that changes the issue above. You're still storing that response and pulling it out later

[02:10:34.0000] <annevk>
I wouldn't expect a 1:1 correspondence at all, that seems a lot more like scenario solving

[02:10:57.0000] <annevk>
I'm not saying the race isn't there

[02:11:09.0000] <annevk>
I don't see how your solution solves it unless you assume 1:1

[02:11:45.0000] <JakeA>
Can you describe the situation you're thinking of?

[02:12:03.0000] <annevk>
From the UDP scenario they described it seems very clear it's not just a normal resource they're looking for

[02:12:07.0000] <annevk>
It's just some data

[02:12:27.0000] <JakeA>
I don't understand the difference

[02:12:31.0000] <JakeA>
Isn't data a resource?

[02:13:03.0000] <JakeA>
If I request some JSON, I'm still requesting a resource

[02:13:07.0000] <annevk>
You're assuming the document needs to know the same stuff the service worker needs to know

[02:13:40.0000] <JakeA>
I'm pretty sure I have what you're thinking about covered, but I don't know until you describe it

[02:14:15.0000] <annevk>
Whereas you might well have a bunch of logic in the service worker on startup that updates various assets and such

[02:14:43.0000] <JakeA>
Do you mean: When a navigation happens I want another request to another url to happen and I want to handle the response in the service worker only, eg put the data in IDB

[02:15:16.0000] <annevk>
To put data in IDB, to make further requests, etc.

[02:15:39.0000] <annevk>
I don't necessarily think the request needs to go to a different URL btw

[02:17:27.0000] <JakeA>
In my proposal you'd saying "for this navigation, perform this preload", and for that preload you'd set up a route that goes to the network then defers to a fetch event

[02:18:00.0000] <JakeA>
But yes, that's more complicated if we just want to do the ping thing

[02:18:27.0000] <annevk>
And the document actually needs to make that fetch

[02:18:34.0000] <JakeA>
Nope

[02:18:50.0000] <annevk>
Oh, I think I see

[02:19:02.0000] <annevk>
Because it's a preload it still roundtrips through the SW?

[02:19:07.0000] <JakeA>
Yep

[02:19:15.0000] <annevk>
Fair

[02:19:29.0000] <JakeA>
That's how preload works already

[02:19:40.0000] <annevk>
So yeah, for routes I think it would be interesting to know the perf benefits beyond startup

[02:20:02.0000] <annevk>
Sure... But preload isn't normally triggered before there's a document

[02:20:14.0000] <JakeA>
Yeah, so that'd be the new bit

[02:20:22.0000] <annevk>
Also, preload is rather handwavy defined still

[02:20:27.0000] <JakeA>
very much so

[02:20:46.0000] <annevk>
There's a cache somewhere and I'd like igrigorik_ to define it

[02:20:48.0000] <JakeA>
Also, needing this + routes just for the Facebook case is pretty heavy

[02:21:14.0000] <JakeA>
Yeah, I want to know if it's the same cache H2 push uses too

[02:21:57.0000] <annevk>
Hmm, I guess it sits somewhere close to the HTTP cache if it goes through SW

[02:22:02.0000] <JakeA>
(I guess not because preload is document-associated and H2 push isn't)

[02:22:10.0000] <annevk>
Definitely would have to be defined in Fetch

[02:24:42.0000] <JakeA>
<link rel="preload" preempt skipserviceworker> where "preempt" means the UA can assume this preload exists next time the user navigates to this page, and skipserviceworker skips the SW, would solve the Facebook case

[02:25:36.0000] <annevk>
Now that is scenario solving

[02:26:39.0000] <JakeA>
preempt is useful in lots of other situations, but maybe skipserviceworker is yeah

[02:27:08.0000] <JakeA>
preempt means you could be warming up connections to other origins before the renderer

[02:27:47.0000] <JakeA>
spinning up their service workers for foreign fetch if needed

[02:28:45.0000] <JakeA>
But yeah, my only usecase for skipserviceworker is this Facebook one (or at least the only case that I can think of right now)

[02:29:14.0000] <JakeA>
But doesn't <link rel="preload" preempt skipserviceworker> fulfill all the same usecases you've presented here?

[02:29:58.0000] <annevk>
No, it doesn't actually give the serivce worker a handle on the response to do further things with

[02:30:09.0000] <JakeA>
No but the page can

[02:30:46.0000] <annevk>
That again assumes the page needs to have the app logic

[02:31:29.0000] <JakeA>
Sure. It could postMessage it to a service worker, or to many service workers. Seems ok

[02:32:06.0000] <JakeA>
What it doesn't allow is linking the preload to a range of urls

[02:32:26.0000] <JakeA>
The routing proposal could easily allow that. It's just much bigger.

[02:32:38.0000] <annevk>
Requiring postMessage() seems cumbersome

[02:33:06.0000] <annevk>
The server and SW having some kind of startup signal seems like a useful primitive to have

[02:33:08.0000] <JakeA>
*if* you want to do something with the response, and *if* you only want to do that within the service worker

[02:33:53.0000] <JakeA>
The SW already has a startup signal. A fetch event with mode navigation when there are no other clients.

[02:34:38.0000] <annevk>
True

[02:36:51.0000] <JakeA>
I'm not totally against the idea of a "get ready" server ping. But once you start wanting to do something with that response, it sounds more and more like another preload, especially as the code gets really ugly if you want to use that response in a fetch

[02:39:53.0000] <annevk>
Yeah

[02:41:42.0000] <JakeA>
Need to get a handle on what the minimum viable solution is here. Maybe server ping is ok

[02:44:10.0000] <annevk>
Yeah, but also, can other UAs do networking without a renderer, etc.

[02:44:20.0000] <kochi>
MikeSmith: is it okay for me to have power to put a label on GitHub issues on https://github.com/w3c/webcomponents/issues ?

[02:47:14.0000] <kochi>
MikeSmith: probably it's because I'm not a member of https://github.com/orgs/w3c/teams/webplatform, I guess.

[02:48:04.0000] <kochi>
aha, GitHub has "Request to Join" button on that page!

[02:48:32.0000] <annevk>
MikeSmith should definitely add you üòä

[02:49:32.0000] <kochi>
/me waits for it :)

[03:36:41.0000] <JakeA>
annevk: does this make sense? https://github.com/slightlyoff/ServiceWorker/issues/920#issuecomment-233603440 Trying to get clarification on what the MVP is

[03:52:54.0000] <annevk>
JakeA: makes sense

[03:53:27.0000] <annevk>
JakeA: also interesting is whether subsequent navigations need to do the same or not

[03:53:41.0000] <annevk>
JakeA: or just with cold start

[05:44:43.0000] <JakeA>
Good point, will add that

[06:13:51.0000] <MikeSmith>
kochi: I have as the team contact for the Web Platform WG to add you

[06:14:00.0000] <MikeSmith>
I think she is waiting on an OK by the chairs

[08:05:40.0000] <annevk>
Domenic: I'll try to get to the adoption stuff by tomorrow

[08:06:01.0000] <annevk>
Domenic: I think we've given those reluctant long enough to come up with an alternative now

[08:08:48.0000] <gsnedders>
things I'm not a fan of: seeming subroutines in the spec magically jumping totally elsewhere

[08:09:50.0000] <annevk>
gsnedders: we accept patches

[08:09:57.0000] <annevk>
(and I agree)

[08:10:23.0000] <annevk>
Also, parameters that are not named upfront

[08:11:06.0000] <annevk>
Directly using a JavaScript property or method

[08:13:04.0000] <Domenic>
annevk: sounds good!

[08:13:21.0000] <gsnedders>
annevk: should I file a bug?

[08:14:35.0000] <annevk>
gsnedders: if it's not URL

[08:39:08.0000] <gsnedders>
huh, no telemetry far as I can see for encoding usage?

[09:25:57.0000] <annevk>
Pretty sure we measured things in that area

[09:26:17.0000] <annevk>
Blink did for API at least

[15:57:29.0000] <Domenic>
MikeSmith: bugspam on the WHATWG component from Minhhoang1208 <hoangminh120814‚äôgc>, ban please?


2016-07-21
[17:59:21.0000] <MikeSmith>
Domenic: thanks for the heads-up, banned

[18:18:45.0000] <kochi>
MikeSmith: thanks, it seems my request was accepted.

[18:35:45.0000] <MikeSmith>
kochi: super

[02:07:57.0000] <jgraham>
Anyone know what the pref name is in Chrome to allow popups? (i.e. the one that gets written to the Preferences file)

[02:41:22.0000] <jgraham>
(found it)

[05:32:23.0000] <mnot1>
Sitting in the IETF Security Area meeting, where an NSA person is presenting about a WebSockets vulnerability

[05:32:24.0000] <mnot1>
https://www.ietf.org/proceedings/96/slides/slides-96-saag-1.pdf

[05:32:38.0000] <mnot1>
basically, timing attack against the handshake

[05:34:24.0000] <mnot1>
annevk: put the mitigation in fetch (if it pans out)?

[05:34:39.0000] <annevk>
mnot1: port blocking is part of Fetch

[05:35:17.0000] <mnot1>
he wants to delay the handshake so you can't tell between a listening and non-listening port

[05:35:25.0000] <annevk>
mnot1: oh I see

[05:35:43.0000] <mnot1>
looking for his draft...

[05:35:45.0000] <annevk>
mnot1: since WebSocket gets its own connection there's a little more room for nastyness?

[05:36:06.0000] <mnot1>
y

[05:36:31.0000] <annevk>
Because in principle you can do this with <img>

[05:37:37.0000] <mnot1>
webworkers + websockets makes it faster‚Ä¶ or could you do webworkers + <img>? hmm

[05:38:09.0000] <annevk>
can't, can do importScripts() or fetch()

[05:40:42.0000] <nox>
https://github.com/w3c/IndexedDB/issues/83 Does this make sense to anyone?

[05:41:26.0000] <annevk>
nox: does

[05:45:54.0000] <smaug____>
is registerElement still defined in some spec?

[05:45:58.0000] <smaug____>
or was that removed?

[05:46:33.0000] <annevk>
smaug____: renamed to customElements.define()

[05:46:40.0000] <annevk>
smaug____: HTML Standard

[05:46:53.0000] <smaug____>
HTML?

[05:46:54.0000] <botie>
HTML is, like, different, only browsers use HTML for the most part

[05:47:05.0000] <smaug____>
not CustomElements spec which has interface CustomElementsRegistry

[05:47:33.0000] <annevk>
smaug____: CustomElements spec is a copy that is typically out-of-date as I understand it

[05:47:39.0000] <smaug____>
uh

[05:47:48.0000] <smaug____>
ok, now I've been looking at wrong spec

[05:48:00.0000] <smaug____>
why CustomElements are in HTML spec?

[05:48:09.0000] <smaug____>
wouldn't DOM be more natural?

[05:48:24.0000] <smaug____>
though, doesn't matter much

[05:48:27.0000] <annevk>
smaug____: because it's custom HTML elements mostly and they integrate with the HTML parser and such

[05:48:38.0000] <annevk>
smaug____: there's a couple of hooks in DOM too to queue the callbacks

[05:48:49.0000] <annevk>
smaug____: and to define the new state for elements

[05:49:10.0000] <annevk>
smaug____: and DOM defines createElement() still of course

[05:49:26.0000] <annevk>
smaug____: I think we mostly went with HTML since you can only subclass HTMLElement

[05:49:36.0000] <annevk>
(and the HTML parser)

[05:49:49.0000] <smaug____>
I see

[05:50:03.0000] <smaug____>
hmm, I wonder why Element can't be subclassed

[06:00:02.0000] <annevk>
smaug____: I have forgotten, probably because you could never serialize it and therefore it would not be that useful

[06:11:00.0000] <annevk>
smaug____: so yeah, https://w3c.github.io/webcomponents/spec/custom/ is a month out-of-date

[06:11:09.0000] <smaug____>
ok, thanks

[06:11:11.0000] <annevk>
smaug____: I landed changes for custom elements three hours ago in HTML

[06:11:42.0000] <smaug____>
https://w3c.github.io/webcomponents/spec/custom/ could perhaps have a warning it being out-of-date most of the time

[06:11:55.0000] <smaug____>
(no one reads the Abstract ;) )

[06:13:07.0000] <annevk>
Domenic: ^^

[06:35:48.0000] <nox>
annevk: Thanks btw. :)

[06:36:09.0000] <nox>
annevk: I died inside when i found this problem.

[06:36:43.0000] <annevk>
nox: standards being ignorant about threads and having issues with parallelism is fairly common still

[06:37:00.0000] <annevk>
nox: we only really started thinking in terms of event loops after Hixie wrote one down

[06:37:02.0000] <nox>
annevk: I know, but it's the first time it happens in a spec I'm actually implementing. :P

[06:37:06.0000] <annevk>
hehe

[06:47:39.0000] <wanderview>
I wish spec's were written in markdown.  It would be a lot easier to review changes

[06:47:58.0000] <nox>
And a lot harder to edit IMO.

[06:48:57.0000] <wanderview>
or at least fricking wrap lines to a reasonable width

[06:51:26.0000] <annevk>
smaug____: does it seem reasonable to you to fix one part of <iframe>'s problems first https://github.com/w3c/webcomponents/issues/145#issuecomment-234258706?

[06:51:39.0000] <annevk>
wanderview: 100 columns is not reasonable?

[06:51:49.0000] <annevk>
wanderview: it might be time to get a bigger monitor

[06:51:51.0000] <wanderview>
annevk: https://github.com/slightlyoff/ServiceWorker/commit/5c0ecaeb423d04df7429bfaa2e5fbde9e42038e1

[06:52:26.0000] <annevk>
wanderview: ooh, but you left that comment on a change to HTML

[06:52:28.0000] <wanderview>
line 714 of that commit is a hell of lot bigger than 100 chars

[06:52:39.0000] <annevk>
HTML commits don't have that

[06:52:41.0000] <wanderview>
annevk: how can I interpret the change to html without reviewing that other commit it depends on?

[06:52:59.0000] <annevk>
Sure, your comment was just not very specific

[06:59:25.0000] <annevk>
wanderview: note that the client message queue bit landed in SW so you could read it in the spec

[07:29:15.0000] <mounir>
annevk: xref's html.py takes ages and ends up with exceptions, it is worth battling with it?

[07:36:37.0000] <annevk>
mounir: exceptions are basically terms that need to be removed, but you can leave a comment and I can take care of it I suppose

[08:10:09.0000] <mounir>
annevk: I've removed them

[08:10:20.0000] <mounir>
annevk: updated the 3 CLs -- whenever you have time ;)

[08:10:34.0000] <annevk>
mounir: ta, maybe tonight, but might be tomorrow morning

[10:50:04.0000] <annevk>
mounir: landed whatwg/fullscreen and whatwg/xref

[10:50:40.0000] <annevk>
mounir: thanks a lot for doing all of the work required, that's great

[10:52:22.0000] <annevk>
mounir: it seems I can even merge the screen orientation PR, but I'll leave that up to you

[11:27:02.0000] <smaug____>
does anyone happen to know when blink dispatches click

[11:27:09.0000] <smaug____>
after mousedown/up

[11:28:45.0000] <smaug____>
oh oh, it has some very specific hack for <button>s

[12:07:01.0000] <Domenic>
;_;

[12:07:30.0000] <Domenic>
Why all the sudden UI event infrastructure investigations, smaug____? I mean, it's good for improving the spec and such, but why would you do this to yourself.

[12:13:17.0000] <smaug____>
Domenic: just fixing a bug

[12:13:18.0000] <smaug____>
well, not a but

[12:13:18.0000] <smaug____>
<button> handling in Gecko is per HTML4

[12:13:18.0000] <smaug____>
s/but/bug/

[12:13:18.0000] <smaug____>
but since other browsers have other behavior, need to change the behavior

[12:13:33.0000] <Domenic>
I see

[12:13:47.0000] <Domenic>
I wonder what HTML4 said about buttons... /me goes to look

[12:14:19.0000] <Domenic>
So far it's not clear that they can be clicked https://www.w3.org/TR/html4/interact/forms.html#h-17.5

[12:14:28.0000] <smaug____>
<button> in HTML4 is just a way to have more complicated rendering for the button

[12:14:50.0000] <smaug____>
or that is at least one interpretation

[12:15:09.0000] <smaug____>
so in Gecko events inside <button> go always to the <button>

[12:15:39.0000] <smaug____>
but now, I'm trying to understand how click even works in blink

[12:15:42.0000] <Domenic>
We got a "when activated" in https://www.w3.org/TR/html4/interact/forms.html#submit-button which seems to acknowledge the existence of clicking

[12:16:05.0000] <smaug____>
I thought it click would be dispatched to common ancestor of mousedown and mouseup

[12:16:07.0000] <smaug____>
in blink

[12:16:13.0000] <smaug____>
but apparently it is very different

[12:16:21.0000] <smaug____>
in some cases common ancestor

[12:16:28.0000] <smaug____>
in other cases... it doesn't happen at all

[12:16:30.0000] <Domenic>
rbyers might be able to help

[12:19:03.0000] <smaug____>
yeah, I tried to ping him

[12:28:06.0000] <smaug____>
ok, found the code

[12:52:37.0000] <rbyers>
smaug____: Sorry for the delay, I'm on vacation.  I thought it was usually common ancestor - at least that's the code I know.

[12:53:00.0000] <smaug____>
rbyers: it is not that. there is also something about interactivecontent or such

[12:53:46.0000] <rbyers>
Dtapuska@ and Mustaq@ probably know more.  You could ask on input-dev‚äôco or file a bug for anything you see that's not to spec.

[12:55:25.0000] <rbyers>
Input team considers any spec / blink mismatch to be a chromium bug, even if the right fix ends up being to change the spec...

[12:55:49.0000] <smaug____>
rbyers: I found the relevant code in blink. I was just surprised since it has been discussed before the click should happen on common ancestor

[12:56:08.0000] <smaug____>
but there are cases when click doesn't happen at all in blink after mousedown/up

[12:56:18.0000] <smaug____>
this is per element basis

[12:56:25.0000] <smaug____>
form elements, <a> and some others

[12:56:37.0000] <smaug____>
they all affect to click dispatching in blink apparently

[12:57:59.0000] <rbyers>
Hmm.  If its not too breaking, we can probably get rid of any such special cases.  IIRC the click we fire for touch had no such special cases.

[12:58:37.0000] <rbyers>
So the inconsistency is weird, probably just another sign of mouse code being so crusty and unmaintained for so long.

[12:59:40.0000] <rbyers>
Then again, web compat in this area is super brittle - every time we try to clean something up we are surprised by unexpected breakage.  Still, we're not afraid to try..

[13:01:03.0000] <smaug____>
rbyers: there is some comment in the code about IEism, so it might be quite breaking change

[13:01:32.0000] <smaug____>
I should look at the blame to see when it was added

[13:01:41.0000] <smaug____>
rbyers: go back to your vacation!

[13:02:02.0000] <rbyers>
Best test is probably Edge.  If Edge doesn't do that, we can almost certainly change.

[13:02:09.0000] <rbyers>
Thanks, TTYL :-)


2016-07-22
[00:34:11.0000] <annevk>
hayato: if you're still awake, I updated https://github.com/whatwg/dom/pull/281 with a commit that address a couple more nits and fixes some bikeshed issues

[00:34:24.0000] <annevk>
hayato: I think it's ready to land now, if you agree

[00:36:20.0000] <hayato>
annevk: I am awake. :) Thank you for addressing nits! I appreciate if you land it.

[03:07:26.0000] <jgraham>
If I want to say that some value is the value of the getter for the Document interface's title attribute for some specific document instance (i.e. the value that would be returned by document.title before any user modifications), how do I say that?

[03:09:09.0000] <annevk>
jgraham: if it's in a spec you'd probably abstract document.title in HTML to invoke some kind of algorithm you can share

[03:10:31.0000] <annevk>
You can talk about initial value of various things too, but it gets icky

[03:12:30.0000] <jgraham>
annevk: It's in a spec. I didn't really intend to have to edit HTML to make this work :)

[03:15:27.0000] <jgraham>
annevk: Do you have an example of the hacky way?

[03:16:08.0000] <annevk>
jgraham: XMLHttpRequest has "Let JSON object be the result of invoking the initial value of the parse property of the JSON object, with JSON text as its only argument." but that's also a little questionable since it assumes you got the pure JSON object somehow

[03:17:08.0000] <annevk>
Fetch uses similar language

[03:18:56.0000] <jgraham>
Thanks

[03:19:47.0000] <jgraham>
I think that will be enough better than the wrongness it will replace for now

[06:34:17.0000] <nox>
jgraham: There is some similar wording for the MathML integration points.

[06:35:19.0000] <nox>
'A MathML annotation-xml element whose start tag token had an attribute with the name "encoding" whose value was an ASCII case-insensitive match for the string "text/html"'

[06:35:43.0000] <nox>
"whose start tag token had", because even if the encoding is changed afterwards it still counts as HTML for the parser.

[06:36:10.0000] <nox>
jgraham: "i.e. the value that would be returned by document.title before any user modifications" even DOM modifications?

[06:41:06.0000] <jgraham>
nox: No, I mean before someone overrides the getter

[06:41:18.0000] <nox>
Oh.

[06:41:19.0000] <jgraham>
Anyway I think what I write is OK

[06:47:35.0000] <annevk>
jochen__: around? Any idea about https://github.com/whatwg/fetch/issues/323?

[06:55:19.0000] <daleharvey>
is there any consensus on how cancelling fetch requests is going to work?

[06:56:07.0000] <daleharvey>
would really like to switch to https://github.com/github/fetch instead of using some home brew xhr lib, but we need to abort requests

[06:56:44.0000] <boogyman>
what's the use-case?

[06:57:20.0000] <daleharvey>
the use case for aborting requests?

[06:59:13.0000] <annevk>
daleharvey: not yet

[06:59:49.0000] <annevk>
daleharvey: https://github.com/domenic/cancelable-promise has the latest

[07:00:30.0000] <daleharvey>
cool thanks

[10:27:12.0000] <annevk>
Anyone else have opinions on how we format enums? https://github.com/whatwg/storage/pull/36#discussion_r71914761

[10:32:55.0000] <Domenic>
I've always preferred `"test"` but HTML uses "`test`" pervasively so I guess I prefer that...

[10:36:13.0000] <annevk>
Interesting, would you also prefer `\`test\`` for byte sequences?

[10:36:31.0000] <annevk>
(not sure if I got the escaping correct)

[10:44:19.0000] <Domenic>
hmm probably

[10:44:24.0000] <Domenic>
It's not a strong preference

[10:44:40.0000] <Domenic>
I think it's just based on programming where <code>5</code> is a value and so is <code>"string"</code>

[10:45:26.0000] <Domenic>
Like when you do var x = ...

[10:45:30.0000] <Domenic>
I think of whatever replaces the ... as the value

[10:45:32.0000] <annevk>
Isn't string the value and " the syntax to denote it?

[10:45:49.0000] <Domenic>
I can see that point of view too

[10:46:37.0000] <annevk>
I guess I'm okay with both too, bit invested in one variant, but oh well

[10:46:50.0000] <Domenic>
Yeah I mean I mainly don't want to change HTML...

[10:55:06.0000] <annevk>
jyasskin: I gotta go for a bit, might have some time to integrate it on Sunday during travel

[10:55:39.0000] <jyasskin>
annevk: 'k. I'll see if I can find a better way to concisely create a WebIDL value from spec text.

[10:55:56.0000] <annevk>
jyasskin: your attention to detail is much appreciated

[10:56:03.0000] <jyasskin>
:)

[13:40:23.0000] <smaug____>
does github have a way to mark a bug to be a duplicate of another one?

[13:40:29.0000] <smaug____>
s/bug/issue/

[13:49:16.0000] <jyasskin>
smaug____: As far as I can see, you just have to comment to that effect and close the duplicate.


2016-07-24
[01:06:37.0000] <annevk>
jyasskin: I was thinking you'd have addressed the outstanding comments, so I guess I'll leave it open a little longer

[01:07:00.0000] <annevk>
jyasskin: I'm also happy to do some of the rephrasing, let me know

[10:54:47.0000] <jyasskin>
annevk: Sorry about that; I ran into the weekend. I'll get the "Let foo be the result of requesting ..." change to Permissions on Monday.

[10:56:43.0000] <jyasskin>
annevk: Passing {foo: "bar"} to a WebIDL type should be the result of parsing the thing as Javascript and then converting it. I could say that everywhere or put a "conventions" section at the bottom, or try to get it into WebIDL. The easiest thing for the storage spec would be for me to define the PermissionName shorthand in Permissions, since Storage

[10:56:43.0000] <jyasskin>
doesn't actually need full descriptors.


2016-07-25
[18:19:47.0000] <MikeSmith>
hayato: http://stackoverflow.com/questions/38540025/web-components-why-content-was-replaced-with-slot

[18:20:12.0000] <MikeSmith>
(or anybody who has time to comment there)

[18:29:23.0000] <MikeSmith>
also http://stackoverflow.com/questions/38517721/running-a-selector-on-and-visiting-the-light-dom-tree

[19:01:45.0000] <hayato>
MikeSmith: Thanks. Let me comment there.

[22:27:07.0000] <MikeSmith>
hayato: thanks much, great comment

[10:35:16.0000] <smaug____>
blink and webkitdirectory and webkitEntries and and...

[10:35:54.0000] <smaug____>
that all is so "lets just ship something" -API

[10:37:10.0000] <smaug____>
totally crazy stuff

[11:43:36.0000] <mathiasbynens>
HTML 4.01 Transitional https://twitter.com/dreamweaver/status/757646365858029569

[11:56:22.0000] <miketaylr>
mathiasbynens: progress!


2016-07-26
[04:03:20.0000] <AutomatedTester>
annevk: hey, if I wanted to define something to not use relative URLs, is it sufficient to just saw "Absolute Urls with Fragment" or should it be 2 links for Absolute URLs and Absolute Urls with Fragments?

[04:07:00.0000] <annevk>
AutomatedTester: hmm I think those terms probably need to say that the fragment is optional

[04:07:41.0000] <annevk>
AutomatedTester: because currently it doesn't make much sense given the definition of URL

[04:08:02.0000] <annevk>
AutomatedTester: maybe file an issue and maybe copy MikeSmith since I think he was involved when we defined these

[04:08:43.0000] <AutomatedTester>
annevk: well, a fragment is define as 0 or more url units

[04:08:54.0000] <AutomatedTester>
which is why I was asking

[04:09:14.0000] <AutomatedTester>
I will raise a bug.

[04:09:35.0000] <AutomatedTester>
https://url.spec.whatwg.org/#syntax-url-fragment

[04:11:31.0000] <annevk>
AutomatedTester: the problem is that # is required

[04:11:44.0000] <AutomatedTester>
ok cool

[04:14:49.0000] <AutomatedTester>
bug raised and MikeSmith cc'ed

[04:53:29.0000] <annevk>
ta

[04:55:11.0000] <annevk>
yhirano_: Domenic: what is happening with upload streams? I feel like we stalled a bit

[04:55:25.0000] <annevk>
yhirano_: Domenic: is there some private discussion going on?

[07:24:41.0000] <Ms2ger>
No love for https://github.com/whatwg/html/issues/465 ?

[07:53:00.0000] <Domenic>
AutomatedTester: if you're specifying an algorithm you should parse the URL with no base and then if it fails, it's not an absolute URL.

[07:53:06.0000] <nox>
Ms2ger: Aren't these already specified in DOM-Parsing?

[07:53:16.0000] <Ms2ger>
nox, that's innerHTML

[07:53:25.0000] <nox>
Ms2ger: Damn I can't read.

[07:53:51.0000] <Domenic>
annevk: I'm hoping to restart the discussion next week when I go to Tokyo... I don't believe there are any real blockers.

[07:54:33.0000] <AutomatedTester>
Domenic: we arent specifying an algorithm, just want to say it needs to be an absolute url

[07:55:10.0000] <Ms2ger>
AutomatedTester, and what if it isn't? :)

[07:55:26.0000] <AutomatedTester>
Ms2ger: then we say we must return an error

[07:55:39.0000] <Ms2ger>
Sounds like an algorithm

[07:56:13.0000] <Domenic>
AutomatedTester: yeah that is definitely an algorithm.

[07:56:24.0000] <AutomatedTester>
ok

[08:07:31.0000] <Domenic>
Ms2ger: should we also do outerText? I didn't hear about Firefox being forced to implement that one. https://github.com/whatwg/html/issues/668

[08:07:54.0000] <Ms2ger>
Domenic, I'd default to no

[12:52:28.0000] <jsbell>
smaug____: entries-api & callback interfaces vs. callback functions; why again did you prefer the former, other than "that's what blink does" ?  (foolip@ has opinions)

[13:23:58.0000] <smaug____>
jsbell: just because of "that's what blink does"

[13:24:43.0000] <smaug____>
jsbell: in general Gecko isn't following the entries API if blink does something else.

[13:25:22.0000] <jsbell>
smaug____: Given that the point of entries-api is to document what's necessary for web compat, please let me know if you notice anything else!

[13:25:31.0000] <smaug____>
sure

[13:26:26.0000] <smaug____>
jsbell: it is hard to know what is needed for web compat

[13:26:43.0000] <smaug____>
which is why following what blink does is safer for now

[14:01:46.0000] <Domenic>
smaug____: the issue is that blink's callback interfaces are just callback functions

[14:01:56.0000] <Domenic>
smaug____: except handleEvent and nodeFilter

[14:53:15.0000] <smaug____>
Domenic:  oh

[14:53:23.0000] <smaug____>
surprising

[14:54:36.0000] <smaug____>
/me is trying to get webkitGetAsEntry() working in chrome, but it seems to return entries which can't be read, just give errors

[15:26:02.0000] <smaug____>
aha, https://bugs.chromium.org/p/chromium/issues/detail?id=463089 is still happening on linux, or some similar bug

[16:12:21.0000] <jsbell>
smaug_____: Did you get it working/

[16:12:22.0000] <jsbell>
?

[16:14:24.0000] <jsbell>
smaug_____: Also, re: what Domenic said above, any objection to me changing them back to callback functions?

[16:14:35.0000] <jsbell>
Or jump in on https://github.com/WICG/entries-api/issues/3


2016-07-27
[22:49:52.0000] <annevk>
Domenic: the new cancel approach is interesting in that scenarios where we currently reject can be compatibly upgraded to become cancelations

[22:50:00.0000] <annevk>
Domenic: that's rather nice

[22:50:12.0000] <Domenic>
annevk: hmm how so compatibly?

[22:50:40.0000] <annevk>
Domenic: well, unless they check the type of exception of course

[22:50:46.0000] <Domenic>
Ah OK :)

[04:28:18.0000] <MikeSmith>
does Edge have special support for <input name=isindex> thing?

[04:30:24.0000] <annevk>
MikeSmith: afaict they don't

[04:30:32.0000] <MikeSmith>
OK

[05:36:07.0000] <annevk>
Anyone know if anything but Fetch and XHR use the end-of-file tasks?

[05:36:26.0000] <annevk>
I need to rename them since I want to add a task post end-of-file and then that task no longer makes much sense

[05:36:29.0000] <annevk>
At least the name

[06:48:02.0000] <mkwst>
"end of end of file"? :)

[08:03:08.0000] <Guest_39743>
Allah is doing

[08:03:08.0000] <botie>
i already had it that way, Guest_39743.

[08:03:22.0000] <Guest_39743>
sun is not doing Allah is doing

[08:03:23.0000] <botie>
i already had it that way, Guest_39743.

[12:31:51.0000] <smaug____>
blink folks, do you happen to have usage data about EventSource in workers?

[13:15:40.0000] <mounir>
smaug____: let me check

[13:18:45.0000] <mounir>
smaug____: I'm afraid there is no EventSource data usage at all

[13:19:04.0000] <smaug____>
mounir: no usage data, or no usage?

[13:19:27.0000] <smaug____>
er, usage data

[13:19:36.0000] <smaug____>
ok, thanks

[13:21:51.0000] <mounir>
smaug____: if you think we should have this information, feel free to open a bug and CC me

[13:22:04.0000] <mounir>
it woludn't take much time to add some metrics if it can help

[13:22:13.0000] <smaug____>
requires me to log in to some google account. hard ;)

[13:23:10.0000] <mounir>
smaug____: do you think we should add the metrics in Chrome?

[13:23:32.0000] <smaug____>
mounir: it might be useful to know whether people use EventSource at all

[13:23:57.0000] <smaug____>
there was just a complain in webapps mailing list about Gecko not supporting it in workers

[13:24:07.0000] <smaug____>
but in general, there has been very very few bugs filed

[14:04:13.0000] <mounir>
smaug____: I filed a bug, will write the patch tomorrow if I have time

[14:07:23.0000] <smaug____>
thanks

[15:06:45.0000] <explodingcabbage>
Hi all. Curiosity question, motivated by recent very minor involvement with the HTML spec - how come the W3C and WhatWG ended up each having their own spec, and what obstacles are there to ending the silliness and reuniting them? (Links rather than full answers welcome.)

[15:09:36.0000] <gsnedders>
explodingcabbage: https://wiki.whatwg.org/wiki/FAQ#WHATWG_and_the_W3C_HTML_WG

[15:10:36.0000] <gsnedders>
https://html.spec.whatwg.org/multipage/introduction.html#history-2 briefly touches on it too

[15:11:19.0000] <explodingcabbage>
does that still represent reality? My limited interaction certainly didn't give them impression that W3C's HTML team were trying to write a conservative spec that only included features with multiple existing implementations

[15:11:22.0000] <tantek>
explodingcabbage there are ebbs and flows with convergence and divergence. Unfortunately we are once again in a period of divergence

[15:16:01.0000] <explodingcabbage>
Also, if it *were* just a matter of WhatWG wanting a cutting-edge spec and the W3C wanting a conservative one to meet W3C recommendation requirements, wouldn't it still be possible, and sensible, to have the repos as proper forks that allow cherry-picking of changes? How did the file structure end up divergent? Surely that just makes life harder for both

[15:16:01.0000] <explodingcabbage>
sides?

[15:16:40.0000] <tantek>
explodingcabbage: that was the intent and the charter of the current W3C Web Platform WG is supposed to do that. However that is not the case and W3C's HTML 5.1 has gone "off the rails" a bit, see for example: https://github.com/w3c/html/issues/507

[15:18:24.0000] <tantek>
explodingcabbage - the switch to using a different spec generation tool (bikeshed) caused I think a lot of the divergent file structure

[15:58:48.0000] <explodingcabbage>
wow, i got sucked down a rabbit hole there. never knew about longdesc or the great war around it

[16:06:45.0000] <explodingcabbage>
the current divergence is a great shame; the WhatWG spec seems to currently be better / more sanely maintained, but is largely ignored by ordinary web devs. Searching Stack Overflow, I find 1,366 results for www.w3.org/TR/html5, 39,119 for www.w3.org/TR/html, and only 122 for html.spec.whatwg.org. it seems that even devs who are diligent enough to check

[16:06:45.0000] <explodingcabbage>
things in the spec overwhelmingly go to the w3 spec and ignore the whatwg's. really, what the world needs is the WhatWG's spec with the W3C's brand name. I don't know what the path from here to there is, though.

[16:08:34.0000] <tantek>
explodingcabbage good questions. there are two approaches, ignore the W3C work completely (which as you site Stack Overflow, only has limited success) and instead stay focused on making progress with WHATWG HTML, or two, attempt to bring more sanity to the W3C's work.

[16:08:44.0000] <tantek>
I think it helps to have folks working on both approaches

[16:08:51.0000] <Domenic>
[Constructor(GamepadEventInit eventInitDict)] // is this correct, or is optional needed?

[16:11:47.0000] <explodingcabbage>
@tantek while I've got no skin in the game, from what little I've observed it looks like chaals is, individually, a source of a lot of that insanity and that getting him off the team somehow would be the highest impact thing anybody could do on point approach 2

[16:13:02.0000] <explodingcabbage>
it was him who stirred conflict with the acknowledgements removal, him who quietly removed longdesc in the issue you linked, and my one attempt to contribute to the w3c spec resulted in this complete absurdity: https://github.com/w3c/html/issues/516

[16:16:09.0000] <Domenic>
There's a couple problems: actively harmful behavior, and lack of understanding of the spec they copy and paste from us. The first may be solvable, but the latter seems likely to continue forever.

[16:16:46.0000] <Domenic>
I think the path forward is to just make people aware of the situation, fix links, etc. Those StackOverflow stats are depressing, indeed.

[16:16:59.0000] <Domenic>
I blame Google's search results for this, personally.

[16:17:12.0000] <Domenic>
Google is really bad at searching specs.

[16:17:22.0000] <Domenic>
It's not just HTML, it's every latest-vs.-old-snapshot spec.

[16:17:38.0000] <explodingcabbage>
oh, god, RFCs are the worst

[16:17:50.0000] <explodingcabbage>
Google likes to give you the txt versions rather than the HTML ones

[16:18:28.0000] <explodingcabbage>
which is a huge problem, because the HTML ones have a list at the top of later RFCs that obsolete or update the one you're reading

[16:18:31.0000] <explodingcabbage>
but the txt ones don't

[16:18:59.0000] <explodingcabbage>
but since the txt ones are far more widely cited, people keep on reading the obsolete specs as if they're current

[16:19:18.0000] <explodingcabbage>
i've seen literally decade-obsolete RFCs being cited on Stack Overflow

[16:19:46.0000] <explodingcabbage>
so yeah, i agree, there's a more general problem that needs solving somehow

[16:24:56.0000] <jyasskin>
explodingcabbage: A nit: try not to call obviously wrong suggestions "insane". It's both likely to rile up the suggester and unkind to actually mentally ill people. Otherwise, yes chaals is being absurd there. :)

[16:30:46.0000] <explodingcabbage>
@jyasskin I was aware it was non-diplomatic, and was happy with that in that case. I considered being tactful for a while but would that really achieve a better outcome? I suspect chaals's decision was already motivated by a desire for conflict / to deliberately do things differently to the WhatWG, because it was so ridiculous an approach to take... and I

[16:30:46.0000] <explodingcabbage>
think that's better dealt with by making the absurdity very very clear and letting his colleagues quietly address it than trying to reason with him myself. If we becomes 'riled up' and acts obnoxiously in response... all the better.

[16:31:31.0000] <explodingcabbage>
Maybe I'm misjudging either him or the right course of action - I've had no involvement in this space before

[16:32:31.0000] <explodingcabbage>
But his take on that issue seemed to me like it could only have stemmed from a desire for conflict, which his past conduct seems consistent with

[16:34:43.0000] <explodingcabbage>
But anyway, enough of me talking about politics I'm not a part of and have no way to influence. It's all very silly. I'm off to bed; goodnight to all. :)


2016-07-28
[17:03:29.0000] <estellevw>
explodingcabbage: being diplomatic/tactful is always the best way to go - we want to ensure we don't create a toxic environment. There are logs, so posts can get read by those not currently in the IRC chat room, today or well into the future.

[17:09:30.0000] <tantek>
estellevw: after a point, it's better to be direct and state the facts and insanity for what they are

[17:15:25.0000] <estellevw>
be direct tactfully.

[17:27:47.0000] <cwilso>
The point being that although one definition of "insane" is "extreme foolishness or irrationality", another definition is "the state of being seriously mentally ill," and that definition is not appropriate, and potentially offensive for unrelated reasons.

[17:44:15.0000] <tantek>
cwilso in this case it's the meaning per the quote "The definition of insanity is doing the same thing over and over and expecting different results."

[17:44:20.0000] <tantek>
https://en.wikiquote.org/wiki/Benjamin_Franklin

[17:44:24.0000] <tantek>
(possibly misattributed)

[20:02:14.0000] <MikeSmith>
botie, inform hsivonen multiple reports about validator.nu redirecting to hsivonen.fi https://github.com/validator/validator/issues/325

[20:02:14.0000] <botie>
will do

[02:27:04.0000] <MikeSmith>
http://stackoverflow.com/questions/38623096/enforce-cors-checks-in-node-js

[05:14:33.0000] <MikeSmith>
did github just go down

[05:34:03.0000] <Ms2ger>
MikeSmith, yeah, it's been up and down for a bit

[05:34:28.0000] <Ms2ger>
https://status.github.com/messages

[05:51:37.0000] <MikeSmith>
Ms2ger: thanks

[06:12:21.0000] <wanderview>
FYI, service worker f2f meeting is starting and IRC channel is #serviceworker here

[07:47:04.0000] <annevk>
Anyone interested in reviewing some math? https://github.com/whatwg/encoding/pull/65

[13:08:13.0000] <weinig>
annevk: hey, what is a BufferSource as used in Fetch? I can‚Äôt find a definition

[13:09:59.0000] <weinig>
annevk: nevermind, found it in the WebIDL draft


2016-07-29
[21:50:22.0000] <MikeSmith>
heh https://groups.google.com/a/chromium.org/d/msg/chromium-dev/0wWoRRhTA_E/-NxrcXoqBwAJ

[21:54:11.0000] <MikeSmith>
some should reply with a message asking him to estimate what the costs are of making a business decision to tie your entire business model to a single-vendor proprietary runtime instead of betting on the Web instead

[22:16:42.0000] <Uu>
Hi when will the next htm5 specifications public?

[22:17:52.0000] <tantek>
Uu, today: http://html.spec.whatwg.org/

[04:03:01.0000] <FND>
hi - using `fetch`, if a CORS request fails with `fetch`, that failure has to be handled via `catch`

[04:03:27.0000] <FND>
however, in there you don't have access to the server response - which means that you can't be certain what went wrong, exactly

[04:04:10.0000] <annevk>
FND: that is somewhat intentional, the developer console should give you more information though

[04:04:22.0000] <FND>
yeah, I know, but:

[04:04:38.0000] <FND>
my current scenario is accessing SharePoint with an expired access token - SharePoint does provide a `x-ms-diagnostics` header along with a 401 status code

[04:05:03.0000] <FND>
but I have no way to determine that programmatically, so I can't just say "oh, right, I'll just refresh my token before retrying"

[04:06:15.0000] <annevk>
Ideally SharePoint would have CORS on the 401

[04:06:23.0000] <annevk>
Then it would be exposed to you

[04:06:38.0000] <annevk>
So I think if SharePoint provides a CORS access point, this is a bug in their system

[04:06:43.0000] <FND>
good point, actually

[04:06:59.0000] <FND>
(I'm not surprised, their REST API is pretty terrible)

[11:32:41.0000] <annevk>
https://twitter.com/simevidas/status/759080906455969792 is pretty cool

[11:33:07.0000] <annevk>
The word diff tweet this is response to, that is

[12:00:31.0000] <TabAtkins>
annevk: The term "an unclosed node of a node" is extremely confusing to work with. :/

[12:02:09.0000] <TabAtkins>
I think it's because in the construction "ADJ node of a node", we expect ADJ to be a relationship between the two nodes (like "ancestor"), but "unclosed" reads as a personal property of the first node, not a relationship.

[12:09:48.0000] <TabAtkins>
annevk: Maybe "unclosed relative of a node"? It took me some thinking to decipher that it was capturing the notion "not trapped in a closed shadow root in a way that makes it invisible to B".

[12:31:44.0000] <TabAtkins>
annevk: Or a longer phrase "A is potentially reachable from B"

[13:05:49.0000] <jsbell>
smaug_____: It looks like your directory upload FileEntry/DirectoryEntry impl is including some of the useless bits: Entry.filesystem, DirectoryReader.removeRecursively(), FileEntry.createWriter(), FileSystemFlags dict and the DOMFileSystem interface. Have you determined that these are necessary for compat? Edge wasn't planning to implement those. I was hoping we could remove them.

[13:22:56.0000] <jsbell>
smaug____: https://github.com/WICG/entries-api/issues/4 for discussion. Looks like Edge will have Entry.filesystem

[13:57:00.0000] <annevk>
TabAtkins: file an issue? Seems fixable

[13:57:08.0000] <TabAtkins>
kk, will do

[13:57:23.0000] <annevk>
Ta

[14:02:57.0000] <smaug____>
jsbell: also Gecko

[14:04:12.0000] <smaug____>
jsbell: FWIW, we got a list from MS what they were going to implement. (but they then implemented some different set of properties and methods after all)

[14:04:50.0000] <smaug____>
jsbell: also, I'm planning to enable the API in Nightly today or tomorrow

[14:19:36.0000] <jsbell>
smaug____: thanks - as you saw in the bug, I've added the common subset between Blink/Edge/Gecko. Do let me know if anything else seems necessary and I'll happily add/fix.

[14:32:54.0000] <smaug____>
jsbell: FWIW, you can use my real name, Olli Pettay

[14:33:11.0000] <jsbell>
smaug____: Will do.


2016-07-30
[02:11:01.0000] <smaug____>
Does Chrome have some devtool to detect jank, missed animation frame ticks?

[02:11:19.0000] <smaug____>
rbyers you might know

[04:29:08.0000] <tobie>
TabAtkins: are there Bikeshed plans to make {{[TreatNonObjectAsNull]}} the same as <a extended-attribute>[TreatNonObjectAsNull]</a>?

[07:34:11.0000] <rbyers>
smaug____: yeah the timeline view shows the time of each frame, and highlights with a red triangle long frames: https://developers.google.com/web/tools/chrome-devtools/profile/evaluate-performance/timeline-tool?hl=en


2016-07-31
[05:08:43.0000] <tobie>
TabAtkins: I'm having an unexpected behavior in Bikeshed which is for oldids to take precedence (and hard link to the absolute URL of where the spec is hosted rather than internally). see: https://gist.github.com/tobie/3c7530d2953942a0e584877aad977d3c

[05:09:29.0000] <tobie>
TabAtkins: any explanation of what's going on (and ideally a workaround) would be really cool.

[08:20:38.0000] <tobie>
TabAtkins: OK, so I think figured out what's going on here. It seems that {{Foo}} gives precedence to whatever is defined in the WebIDL spec vs. what's locally defined. Is that possible?

[08:29:26.0000] <tobie>
TabAtkins: filed an issue here: https://github.com/tobie/webidl/issues/19

[08:35:54.0000] <caitp>
tobie: have you taken over webidl editing?

[08:36:17.0000] <caitp>
would be good to know, I asked this in #jslang on mozilla the other day

[08:37:52.0000] <tobie>
caitp: yes. I'm working on converting the spec to bikeshed right not.

[08:38:02.0000] <tobie>
s/not/now/

[08:38:39.0000] <caitp>
thanks for the info, it sounds like a lot of people aren't aware of this and might still be pinging cam for things

[08:38:54.0000] <tobie>
caitp: poor him. :)

[08:39:30.0000] <tobie>
Currently I'm just busy with the conversion, so not adding new features or anything.

[08:39:46.0000] <tobie>
Repo for the conversion is here: https://github.com/tobie/webidl

[08:41:03.0000] <tobie>
and here's what it currently looks like: https://rawgit.com/tobie/webidl/bikeshed/index.html

[08:51:48.0000] <nox>
tobie++

[16:48:18.0000] <zewt>
hooray having to disable mixed content blocking in xhr because i can't find a way to override it for xhr

