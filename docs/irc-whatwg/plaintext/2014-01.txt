2014-01-01
[16:24:27.0000] <Hixie_>
rektide: ping="" is a content attribute, i'm not sure what you meant with your comments earlier. can you elaborate?

[03:08:48.0000] <jgraham>
/me once went haiking near Nagano in a thunderstorm

[03:08:52.0000] <jgraham>
*hiking

[03:09:00.0000] <jgraham>
Not haikuing

[03:10:41.0000] <Ms2ger>
Why not both?

[03:18:06.0000] <jgraham>
Missed oppertunity indeed

[13:00:46.0000] <zcorpan>
Ms2ger`: thanks for the chocolate!

[13:01:27.0000] <Ms2ger`>
My pleasure :)


2014-01-02
[07:41:07.0000] <mpt>
Could someone kindly give me an example of something that was in the (WhatWG-era) HTML spec for a long time before implementors decided it wasn’t a good idea?

[07:43:26.0000] <werle>
mpt cc mathiasbynens

[07:44:34.0000] <SteveF>
mpt: command element was around for a while

[07:47:54.0000] <mpt>
That would do nicely, thanks SteveF

[07:57:47.0000] <Domenic_>
yeah the whole <menu> thing has been sad... I wish implementers would implement at least *something* like it.

[08:02:05.0000] <ondras>
I find XUL's <command> and <key> elements really useful

[08:10:01.0000] <SteveF>
Domenic_: firfox has context menus...

[08:10:17.0000] <Domenic_>
SteveF: right, that's true, I guess I meant "everyone" not "implementers"

[08:18:52.0000] <SteveF>
Domenic_:would like to see it widely implemented, but think that styling of menus needs to be very flexible for it to be useful

[08:19:29.0000] <Domenic_>
SteveF: yeah, that's probably true, as much as I would like our designers to suck it up and use platform conventions :P

[08:21:24.0000] <Domenic_>
We did get some start on discussing styling of <select> on, I think it was the whatwg list? Or webapps? But that trailed off... Someone just needs to do the work of writing something down for implementers to comment on, I think. Maybe now that promises is trailing off I can try to make that my next project alongside streams.

[08:21:59.0000] <SteveF>
Domenic_:right like that's gonna happen...

[08:22:12.0000] <Domenic_>
?

[08:22:17.0000] <Domenic_>
oh the designers

[08:22:27.0000] <Domenic_>
/me shakes fist

[08:27:45.0000] <wilhelm>
mpt: http://platform.html5.org/history/

[08:27:51.0000] <wilhelm>
Grep for 'dropped'.

[08:28:58.0000] <mpt>
wilhelm, I started doing exactly that when you provided the link. :) Thanks.

[08:43:01.0000] <MikeSmith>
mpt: datagrid is another examplse I guess

[08:43:45.0000] <MikeSmith>
hsivonen: annevk-cloud: fyi https://bugs.webkit.org/show_bug.cgi?id=126375 "Consider using top-level domain name for encoding sniffing"

[08:44:07.0000] <SteveF>
Domenic_:yeah have been following threads on various lists on the subject

[08:44:26.0000] <MikeSmith>
mpt: oh, or what wilhelm said, and what you said after that :-)

[08:46:15.0000] <SteveF>
Domenic_: be great if you could get some momentum happening

[08:46:50.0000] <MikeSmith>
hsivonen: (I see know that ap already had Cc'ed you on that bug)

[08:48:27.0000] <Domenic_>
SteveF: I'll certainly try!

[08:59:53.0000] <Hixie_>
mpt: <command> mostly became <menuitem>, <datagrid> was never really fully fleshed out. a better example might be the repeating model from web forms 2, though i don't recall if that was dropped due to implementation disinterest or if it was dropped due to my realising it sucked.

[09:00:39.0000] <Hixie_>
a lot of the ones labeled as "dropped" in the history page were either replaced by something else or dropped before implementors really looked at it in detail

[09:01:11.0000] <Ms2ger>
Oh, that

[09:01:21.0000] <Ms2ger>
I've written code that used it

[12:51:10.0000] <Hixie_>
jgraham: ping

[12:52:09.0000] <Ms2ger>
You haven't pushed the a.ping change yet?

[13:02:58.0000] <jgraham>
Hixie_: hej hej

[13:03:17.0000] <Hixie_>
jgraham: anolis is 504ing.

[13:03:26.0000] <Hixie_>
Ms2ger: ^

[13:04:55.0000] <Ms2ger>
I see

[13:08:10.0000] <jgraham>
Hixie_: Not sure what I can do about that

[13:08:28.0000] <Hixie_>
me either

[13:08:34.0000] <Hixie_>
do you see anything on your end?

[13:08:41.0000] <Hixie_>
like, in the logs?

[13:10:49.0000] <rektide>
querySelectors not being able to extract attribute values is a :( v.s. XPath

[13:12:07.0000] <rektide>
what is changing in a.ping? i'm writing some code that uses ping right now. i'm pretty sure it's not going to work either.

[13:12:10.0000] <Hixie_>
extract attribute values?

[13:12:16.0000] <rektide>
//a/@href

[13:12:42.0000] <Hixie_>
a[href]

[13:12:59.0000] <rektide>
won't that return a list of nodes with an href attr?

[13:13:12.0000] <Hixie_>
selectors return a boolean

[13:13:17.0000] <Hixie_>
"does this node match this selector"

[13:13:26.0000] <Hixie_>
same as xpath, as far as i'm aware?

[13:13:38.0000] <Hixie_>
but i'm no xpath expert

[13:14:05.0000] <rektide>
querySelector() returns a node list. document.evaluate does too.

[13:14:31.0000] <Hixie_>
querySelector() returns a node, but sure

[13:14:41.0000] <Hixie_>
querySelectorAll() returns a list

[13:14:51.0000] <Hixie_>
the node is the first on the list

[13:15:00.0000] <rektide>
yes, pardon. i'm new to this upstart new guy on the scene.

[13:15:03.0000] <Hixie_>
and the list is just the result of filtering the complete list of elements against the expression

[13:15:16.0000] <Hixie_>
and only including the ones that return true

[13:15:24.0000] <rektide>
xpath let me do more complex aaddressing of things that i wanted to pull out, to select

[13:15:45.0000] <Hixie_>
can you elaborate? what are you trying to do?

[13:16:13.0000] <rektide>
//a/@href. which is different from //a[@href] which is just a predicate

[13:16:20.0000] <jgraham>
Hixie_: Based on previous experience I am rather sure it is part of the server setup on that host and that I can't really configure it. Last time I think we managed to make the process faster

[13:16:36.0000] <Hixie_>
rektide: assume i know nothing about xpath, and tell me what your higher-level problem is

[13:16:53.0000] <Hixie_>
jgraham: :-(

[13:16:55.0000] <Hixie_>
jgraham: k

[13:17:03.0000] <rektide>
i would like to select attribute values

[13:17:03.0000] <Hixie_>
jgraham: i'll wait a bit and see if the load lightens, then :-)

[13:17:19.0000] <Hixie_>
i don't understand waht you mean by "select attribute values"

[13:17:32.0000] <rektide>
i want to write an expression taht queries a document finding things that i want

[13:17:32.0000] <Hixie_>
why do you want to do it? what's your higher-level problem?

[13:17:54.0000] <Hixie_>
e.g. are you looking for a list of URLs that are a document's links point to?

[13:18:03.0000] <rektide>
yes

[13:18:04.0000] <Hixie_>
s/are//

[13:18:11.0000] <Hixie_>
ok you can do that much easier than using selectors, then

[13:18:15.0000] <Hixie_>
just iterate through document.links

[13:18:33.0000] <rektide>
i may not have told you my real problem in the full detail

[13:18:57.0000] <rektide>
a.foo's hrefs

[13:19:30.0000] <Hixie_>
iterate through querySelectorAll('a.foo[href]')

[13:19:53.0000] <Hixie_>
(though what you probably really want is ':link.foo, :visited.foo')

[13:20:32.0000] <Hixie_>
(which xpath can't do :-) )

[13:21:31.0000] <Hixie_>
(':any-link.foo' if you're using newer Selectors)

[13:22:53.0000] <rektide>
i have a feature request

[13:23:08.0000] <rektide>
I'd like ping to be viable for onclick

[13:24:23.0000] <rektide>
so many webapps that i'd like to userscript some auditing into have onclick handlers instead of links, and it kills my ability to use ping there.

[13:25:03.0000] <rektide>
i'll probably build a 1/3 complete hackey barely-working polyfill that let's me ignore this gap in ping

[13:25:52.0000] <rektide>
"If a hyperlink created by an a or area element has a ping attribute, and the user follows the hyperlink, and the value of the element's href attribute can be resolved,..." is overspecific a use case, I'd say, for what kinds of things ought be auditable in the web environment

[13:26:36.0000] <Hixie_>
you could just use a real link with href="javascript:..."

[13:26:44.0000] <Hixie_>
instead of onclick=""

[13:26:56.0000] <rektide>
userscript. it's not my own website i'm adding auditing to.

[13:27:22.0000] <rektide>
and i don't see why there ought to be an audit gap between those two otherwise near-equivalent features

[13:27:36.0000] <rektide>
if they are so interchangable as that, then why is one in-auditable?

[13:27:48.0000] <Hixie_>
i don't understand the use case. can you elaborate? you want to be able to inject script into a page you're visiting to know what link you click on?

[13:27:53.0000] <rektide>
yes

[13:28:02.0000] <Hixie_>
why don't you just tell yourself what link you're clicking on...?

[13:28:40.0000] <rektide>
you are an artful dodger of real problems, lord of the web

[13:28:53.0000] <rektide>
:/

[13:29:15.0000] <rektide>
i thought ping would be a convenient means to audit my activity in an automated fashion

[13:29:21.0000] <rektide>
i thought ping was there for that purpose

[13:29:33.0000] <rektide>
it seems amazing, i love the idea that i can add a tag to report back

[13:29:40.0000] <rektide>
but the things that i can audit are very very very limited

[13:29:52.0000] <rektide>
and i do not understand why auditing wouldn't go further

[13:30:43.0000] <rektide>
i also do not really understand your proposition. here's one example i'd like to instrument with auditing: <div class="arrow down login-required" tabindex="0" aria-label="downvote" role="button" onclick="$(this).vote(r.config.vote_hash, null, event)">

[13:31:02.0000] <rektide>
what do you propose for "tell myself what link i'm clikcing on" for this case, where someone has authored this HTML?

[13:32:34.0000] <Hixie_>
ping="" is primarily there so that sites can work out what link you clicked when leaving the site, since normal auditing methods fail when you click a link to leave the site

[13:33:22.0000] <Hixie_>
rektide: i guess i'd open a spreadsheet where i'm recording this stuff, and write "i clicked on the down arrow" or something? :-)

[13:33:23.0000] <rektide>
that's one very narrow specific conception of a feature

[13:33:40.0000] <Hixie_>
rektide: i don't understand your high-level problem here, so there's very little for me to go on.

[13:33:42.0000] <rektide>
Hixie_: that gets boring after the first 200 mintues spent doing that

[13:34:01.0000] <rektide>
and i'd have to keep opening hte spread sheet where i record stuff, and that takes effort

[13:34:08.0000] <rektide>
are we not human? the tool making species?

[13:34:24.0000] <rektide>
you have my use case! your alternative suggestion is the exact idea of what i want to do!

[13:34:27.0000] <rektide>
i just don't want to have to do it

[13:34:35.0000] <rektide>
i want links to be auditable

[13:34:39.0000] <Hixie_>
why

[13:34:58.0000] <Hixie_>
your use case is at least three levels too specific for a use case :-)

[13:35:03.0000] <rektide>
because it's work and i am better than work and i am human and i can make better things

[13:35:31.0000] <Hixie_>
yikes, it's later than i realised. gotta go get lunch. bbiab.

[13:35:35.0000] <rektide>
what if it's a div.onclick that triggers a move offsite? is that for some reason not auditable?

[13:35:47.0000] <rektide>
why wouldn't ping be allowed to work there?

[13:36:22.0000] <rektide>
you're in the code by definition there, you could instrument your audit yourself in that codebase, but isn't HTML's nice declarative composable structure supposed to clean up so much of this DIY?

[13:36:26.0000] <rektide>
enjoy lunch

[13:36:27.0000] <rektide>
chao

[13:44:10.0000] <Hixie_>
rektide: if you have a <div onclick=""> that triggeres a move off-site, turn it into an <a href=""> :-P

[13:44:19.0000] <Hixie_>
it's true that we can't audit e.g. form submissions

[13:44:46.0000] <Hixie_>
but it's not clear why you'd want to really

[13:44:58.0000] <rektide>
i just think auditing is super valauble, i love the declarative clean ismple form, and i want more of the web to be able to report on itself [doing whatever verb it is doing].

[13:45:06.0000] <Hixie_>
we could develop an API that's just for sending one-off pings, certainly

[13:45:12.0000] <Hixie_>
should probably wait for ping="" to be more widely implemented first, though

[13:45:17.0000] <rektide>
i see absolutely zero reason for embracing a very narrow specific use for what ping is

[13:45:51.0000] <rektide>
i love love love "add your URL to the list, get notified" with a common packet

[13:45:52.0000] <Hixie_>
the general approach is to come up with high-level use cases, then address them. if the use cases are specific, the solution ends up specific.

[13:46:12.0000] <Hixie_>
nobody had a use case for notifying in the cases you're mentioning, so we didn't even consider them.

[13:46:43.0000] <rektide>
i'm probably 1/2 done with my crappy incredibly shitty polyfill

[13:47:02.0000] <rektide>
that i will never maintain or like or enjy, but which will serve this huge gaping need i have

[13:47:19.0000] <rektide>
and it will let me add auditing that seems really basic and sensible to reddit

[13:47:34.0000] <rektide>
without re-engineering the entire web site to support ping's requriements

[13:48:00.0000] <rektide>
i totally understand that i'm adding a new scope of concern, and i have enormous sympathy for being late to the show

[13:48:30.0000] <rektide>
but i also think the spec as it stands is cutting off it's own limbs unnecesarrily

[13:48:33.0000] <rektide>
thanks for talking with me ian

[13:56:12.0000] <rektide>
does anyone know if https://developer.mozilla.org/en-US/docs/Web/API/NodeList#Why_can%27t_I_use_forEach_or_map_on_a_NodeList.3F will ever get better? "Why can't I use forEach or map on a NodeList"?

[15:48:46.0000] <gsnedders>
/me wonders how fast Anolis would be on PyPy, even with more stuff having to be done in Python (than in C, in lxml).

[15:49:22.0000] <gsnedders>
(The reason why lxml does that stuff in C is essentially the fact you end up spending ~100% of computation time in dispatch overhead, so PyPy shouldn't suffer)


2014-01-03
[17:42:02.0000] <TabAtkins>
rektide: Somewhat.  Some new APIs will return an Elements object, which is an array subclass, instead of NodeList.

[22:05:45.0000] <hsivonen>
MikeSmith: It's nice that ap considers the idea worthwhile.

[22:06:28.0000] <MikeSmith>
hsivonen: yeah

[22:07:13.0000] <MikeSmith>
it's a good sign. he's pretty careful

[22:07:32.0000] <MikeSmith>
exacting

[22:08:49.0000] <MikeSmith>
fyi for anybody who's waske already (or still), it seems like there's some problem with the w3c network at the moment

[22:10:21.0000] <hsivonen>
annevk-cloud_: why doesn't the big5 encoder in the Encoding Standard have a special case for LATIN CAPITAL LETTER E WITH CIRCUMFLEX AND MACRON etc.? Are those from HKSCS?

[22:11:40.0000] <hsivonen>
I have to wonder what the motivating idea behind Gecko's multibyte decoder abstraction is

[22:12:12.0000] <hsivonen>
is it more performant to avoid the code point math at run time?

[22:15:33.0000] <hsivonen>
annevk-cloud_: why does big5 multiply by 157? that seems weirdly inefficient

[22:15:50.0000] <hsivonen>
annevk-cloud_: is that math representable as shifts but I'm just not seeing it?

[22:16:17.0000] <hsivonen>
(in general, it's a bit annoying that the Encoding Standard doesn't make it obvious, what parts of the math could be done on the ALU)

[22:17:07.0000] <MikeSmith>
hsivonen: btw https://groups.google.com/a/chromium.org/d/msg/blink-dev/zIg2KC7PyH0/Ym28fD2ZIAsJ -- the part where abarth says:

[22:17:10.0000] <MikeSmith>
[[

[22:17:12.0000] <MikeSmith>
My personal view is that XML on the client is going to evolve over the coming years.  I expect that browsers will move to a simplified version of XML that doesn't support namespaces or internal DTD subsets because those features introduce vastly more complexity than they're worth.  Instead, I expect we'll process XML content using the "foreign content" HTML parsing algorithm, which, for example, is how we parse SVG content in HTML.

[22:17:18.0000] <MikeSmith>
]]

[22:18:03.0000] <hsivonen>
MikeSmith: kinda scary to jus take the HTML parsing algorithm instead of taking XML5/XML-ER.

[22:18:08.0000] <hsivonen>
*just

[22:18:15.0000] <MikeSmith>
yeah

[22:18:26.0000] <hsivonen>
maybe I should subscribe to blink-dev

[22:19:19.0000] <MikeSmith>
hsivonen: subscribe and just read the threads that adam posts to :-) those are usually the ones most worth reading

[02:08:34.0000] <SimonSapin>
gsnedders: It’s not quite ready yet, but https://github.com/SimonSapin/cssselect2 does not depend on lxml anymore

[02:42:58.0000] <hsivonen>
does Python really not have a format code for printing numbers in base 2?

[02:44:16.0000] <hsivonen>
oh, there is bin()

[04:15:00.0000] <jgraham>
Ms2ger: r? https://critic.hoppipolla.co.uk/r/364

[04:17:11.0000] <Ms2ger>
jgraham, which warnings are those?

[04:25:47.0000] <jgraham>
Ms2ger: Some broken cross-references

[04:25:53.0000] <jgraham>
Some minor things

[04:26:42.0000] <jgraham>
See https://readthedocs.org/builds/wptserve/1058788/ if you can

[04:26:57.0000] <Ms2ger>
Hrm, is :ref:`handlers.Python` supposed to be a link?

[04:27:33.0000] <jgraham>
I think readthedocs hasn't updated

[04:28:07.0000] <Ms2ger>
Ah, now it has

[04:29:29.0000] <jgraham>
Yeah, apparently I can't enable the auto-update hook because I'm not special enough

[04:29:41.0000] <jgraham>
(at least according to the W3C)

[04:29:57.0000] <Ms2ger>
So https://critic.hoppipolla.co.uk/showcomment?chain=975

[04:30:20.0000] <Ms2ger>
Do we want to keep null?

[04:30:27.0000] <jgraham>
MikeSmith: I hear you are special

[04:30:52.0000] <MikeSmith>
um

[04:31:23.0000] <jgraham>
Ms2ger: Well. I'm not sure.

[04:31:48.0000] <Ms2ger>
MikeSmith is very special

[04:33:25.0000] <MikeSmith>
special missions subsection junior interim floor manager?

[04:33:32.0000] <jgraham>
MikeSmith: Possibly you can enable the ReadTheDocs webhook for https://github.com/w3c/wptserve. I assume you have to do it through the gh UI, although the rtd documentation isn't super-clear

[04:33:44.0000] <MikeSmith>
ah

[04:33:47.0000] <jgraham>
https://readthedocs.org/projects/wptserve/ since I assume you need it

[04:34:23.0000] <MikeSmith>
github ACLs are ass

[04:34:49.0000] <MikeSmith>
I hope those slackers fix that

[04:35:46.0000] <MikeSmith>
/me pusshes the button

[04:36:00.0000] <jgraham>
MikeSmith: Thanks

[04:36:11.0000] <MikeSmith>
jgraham: hmm it doesn't prompt me for a URL though

[04:36:13.0000] <MikeSmith>
*didn't

[04:36:17.0000] <MikeSmith>
/me re-checks

[04:36:45.0000] <MikeSmith>
yeah it doesn't let me specify a URL

[04:36:53.0000] <MikeSmith>
"Automatically build documentation hosted on readthedocs.org."

[04:36:57.0000] <MikeSmith>
is all that it says

[04:37:16.0000] <MikeSmith>
I pushed the "Test Hook" button nwo

[04:38:00.0000] <MikeSmith>
..which for most hooks doesn't seem to actually do anything -- it just succeeds or fails, silently

[04:38:31.0000] <MikeSmith>
anyway I've set all that it lets me set from the GH side, afaict

[04:38:55.0000] <jgraham>
MikeSmith: OK. Maybe rtd does magic to work out which docs to rebuild

[04:39:13.0000] <MikeSmith>
yeah it must

[04:39:58.0000] <Ms2ger>
jgraham, I guess keep null for now, then

[05:19:10.0000] <jgraham>
Ms2ger: Thanks

[05:19:28.0000] <Ms2ger>
No, thank you!

[05:27:56.0000] <odinho>
Ms2ger: Why do you want cuddled else? I find it less legible.

[05:32:08.0000] <jgraham>
odinho: Don't argue, I just fixed it :p

[05:33:44.0000] <odinho>
I also did :/

[05:33:51.0000] <odinho>
But you pushed already. But you have one error.

[05:34:16.0000] <jgraham>
(fwiw I think d(global legibility)/d(vertical lines) < 0 even though sometimes d(local legibility)/d(specific line-saving-constructs) > 0)

[05:34:50.0000] <odinho>
1 issue left.

[05:35:20.0000] <odinho>
And review my changes. They are good.

[05:35:27.0000] <odinho>
Only those missing now.

[05:52:28.0000] <jgraham>
odinho: Where does the spec say that * in A-C-A-O doesn't work with preflight?

[05:52:50.0000] <jgraham>
(your change is fine either way)

[05:56:41.0000] <jgraham>
odinho: (and if you can OK my final push I can start on the rebase :|)

[05:57:03.0000] <gsnedders>
hsivonen: %b should give base 2?

[05:59:20.0000] <odinho>
jgraham: It says that somewhere. I've read that spec thousand times. I'm going out now, so can't look up the ref :)  Did the ok-ing.

[05:59:29.0000] <hsivonen>
gsnedders: ValueError: unsupported format character 'b' (0x62) at index 1

[06:05:00.0000] <gsnedders>
hsivonen: Oh, so str.format supports b but the % operator doesn't

[06:06:29.0000] <jgraham>
You can do it the nice way but only if you don't also want nice things?

[06:23:28.0000] <jgraham>
So, that was surprisingly easy

[06:23:44.0000] <jgraham>
Oh, and critic did the rebase just like it's supposed to

[06:23:58.0000] <jgraham>
(probably means I missed something)

[06:34:55.0000] <jgraham>
Well the review is accepted

[06:35:01.0000] <jgraham>
I wonder what to do now :)

[06:37:08.0000] <jgraham>
(that is more or less a serious wonder, btw. I could squash and merge, but I don't really trust that everything is going to be working OK and it will break w3c-test.org)

[06:48:53.0000] <Ms2ger>
Post to p-t-infra?

[06:51:04.0000] <Ms2ger>
And land if nobody complains somewhere next week

[07:58:50.0000] <jgraham>
Ms2ger: One more for you

[07:59:08.0000] <Ms2ger>
Which review?

[08:00:42.0000] <jgraham>
r/440

[08:02:45.0000] <Ms2ger>
Ship it

[08:04:54.0000] <jgraham>
Two down, one to go :)

[08:43:47.0000] <SimonSapin>
does the html parser ever emits attributes in a namespace?

[08:44:44.0000] <jgraham>
Yes

[08:45:17.0000] <jgraham>
<svg><a xlink:href="foo">something

[08:45:42.0000] <SimonSapin>
thanks

[08:48:52.0000] <tantek>
because SVG couldn't just re-use <a href> from HTML.

[08:49:10.0000] <tantek>
is anyone working on fixing that so we can deprecate xlink completely?

[08:49:33.0000] <jgraham>
To be fair to SVG they were sold this vision of the glorious XML future

[08:49:36.0000] <Ms2ger>
You? :)

[08:49:50.0000] <jgraham>
Or, possibly, they helped propogate the vision

[08:50:32.0000] <tantek>
jgraham - they were definitely pushing it.

[08:51:03.0000] <tantek>
Ms2ger - I try not to touch svg related things. Usually there's a big undefined mess behind them.

[09:07:47.0000] <Ms2ger>
https://twitter.com/horse_js/status/419144086528868352 narrows down @horse_js's identity quite a bit

[09:10:17.0000] <MikeSmith>
Ms2ger: horse_js is running as a write-in candidate

[09:11:49.0000] <jgraham>
Ah, I assumed that was "running for" as in "running for my dog that died in the spring"

[09:13:31.0000] <Ms2ger>
That's not an expression I've heard before

[09:16:25.0000] <jgraham>
Imagine someone literally running in support or memory of a cause

[09:16:43.0000] <jgraham>
In other news, no innerHTML tests, really?

[09:16:57.0000] <Ms2ger>
A few, in the DOMPS repo

[09:17:23.0000] <jgraham>
Can we migrate them to wpt?

[09:17:40.0000] <Ms2ger>
We certainly can

[11:42:38.0000] <bholley>
Hixie_: see https://bugzilla.mozilla.org/show_bug.cgi?id=956382

[11:44:54.0000] <TabAtkins>
SVG2 is dropping *all* of the attribute namespaces.

[11:45:01.0000] <TabAtkins>
href/etc are just going to be in the null namespace like normal.

[12:02:52.0000] <Hixie_>
bholley: thanks

[12:05:16.0000] <Domenic_>
I'm vaguely curious what APIs use DOMTokenList and not DOMSettableTokenList

[12:06:16.0000] <Hixie_>
whatwg.org/C find-in-page "TokenList"

[12:15:46.0000] <Ms2ger>
Domenic_, relList and classList, for example

[12:15:54.0000] <Ms2ger>
Because rel and className already existed

[12:23:12.0000] <Domenic_>
Ms2ger ah that makes sense, thanks.

[13:49:48.0000] <Ms2ger>
Hrm, why didn't I get jgraham's email.

[13:49:49.0000] <Ms2ger>
?

[13:51:02.0000] <Ms2ger>
"Why is this message in Spam? You previously marked messages from james⊙hcu as spam."

[13:51:03.0000] <Ms2ger>
Oops

[13:56:56.0000] <Hixie_>
heh

[13:58:57.0000] <Ms2ger>
So now I'm reading a month's backlog of jgraham's email

[13:59:11.0000] <Ms2ger>
Gmail kindly deleted everything older than that, of course

[14:35:47.0000] <Hixie_>
Ms2ger: i live in fear of that happening to me

[14:35:59.0000] <Hixie_>
Ms2ger: every now and then i find an e-mail i'm missing, find it in spam, look for others...

[14:36:08.0000] <Hixie_>
Ms2ger: rarely do i find many, but i live in fear of those that i'm missing

[14:36:18.0000] <Hixie_>
Ms2ger: given how much spam i get there's not much i can do about it

[14:36:58.0000] <Ms2ger>
Yeah :/

[14:37:05.0000] <Ms2ger>
At least it was only jgraham here :)

[14:37:26.0000] <Hixie_>
anyone know who sof⊙oc is? (so i can add them to the acks)

[14:38:07.0000] <Ms2ger>
Sigbj�rn Finne, says google

[15:03:51.0000] <Hixie_>
so... where are Map and Set defined. ho dee hum.

[15:07:01.0000] <Hixie_>
what does " Subclass constructors that intend to inherit the specified Map behaviour must include a super call to Map." mean, in practice?

[15:07:11.0000] <Hixie_>
is that a real conformance criteria of some sort?

[15:07:19.0000] <Domenic_>
that if you do class X extends Map { constructor() { blah blah } }

[15:07:19.0000] <Hixie_>
(http://people.mozilla.org/~jorendorff/es6-draft.html#sec-map-constructor)

[15:07:23.0000] <Domenic_>
but blah blah doesn't include super()

[15:07:31.0000] <Domenic_>
then none of your methods will work right

[15:07:42.0000] <Hixie_>
so it's just a statement of fact, not a conformance criteria?

[15:08:04.0000] <Domenic_>
Yeah

[15:08:07.0000] <Hixie_>
i guess the JS spec doesn't mention RFC2119

[15:08:16.0000] <Domenic_>
Huh yeah

[15:08:21.0000] <Domenic_>
Never noticed that

[15:08:24.0000] <Hixie_>
that's... confusing. but ok.

[15:09:07.0000] <Hixie_>
ah, i see.

[15:09:11.0000] <Hixie_>
/me reads the conformance section

[15:09:23.0000] <Hixie_>
it's a CSS style spec. "conforming implementations do what the spec says"

[15:09:33.0000] <Hixie_>
ok

[15:09:42.0000] <jgraham>
Google is right about sof btw

[15:10:01.0000] <Hixie_>
thanks

[15:23:57.0000] <Hixie_>
lordy, the js spec's definition of Map is non-trivial to grok

[15:32:05.0000] <odinho>
sof is awesome

[15:32:50.0000] <TabAtkins>
Hixie_: Yeah, it is.  What are you trying to grok?

[15:36:43.0000] <Hixie_>
TabAtkins: how to write teh structured clone spec for them. i think i have it, though.

[15:49:27.0000] <Hixie_>
ok, here's a question

[15:49:36.0000] <Hixie_>
are the keys in a Map own properties of the Map?

[15:50:03.0000] <Domenic_>
no

[15:50:05.0000] <Domenic_>
because they can be objects

[15:50:16.0000] <Domenic_>
they are not properties at all

[15:50:21.0000] <Domenic_>
they are stored in the internal [[MapData]]

[15:50:42.0000] <Hixie_>
ah ok excellent

[15:50:48.0000] <Hixie_>
that means i can copy the own properties with impunity

[15:52:09.0000] <Hixie_>
i wonder what alex thinks of Map and Set, given how they are essentially black magic that can't be explained by the platform primitives

[15:52:51.0000] <Domenic_>
How so?

[15:53:24.0000] <Hixie_>
there's no way to use an object as a value other than in these features

[15:53:30.0000] <Hixie_>
since JS has no pointers

[15:53:42.0000] <Hixie_>
or pointer analogue

[15:53:46.0000] <Domenic_>
Um

[15:53:48.0000] <Hixie_>
no?

[15:53:59.0000] <TabAtkins>
???

[15:54:07.0000] <TabAtkins>
Really don't know what you're talking about, Hixie.

[15:54:13.0000] <Hixie_>
like, you couldn't write a polyfill that implements Map or Set without using Map or Set

[15:54:23.0000] <Domenic_>
There's a polyfill for Map on MDN I believe

[15:54:26.0000] <TabAtkins>
Yes you can.  It doesn't have the same performance characteristics, though.

[15:54:33.0000] <TabAtkins>
(Linear time gets rather than constant time.)

[15:54:43.0000] <Hixie_>
if it's not the same perf characteristics, it's not compliant :-)

[15:54:47.0000] <Domenic_>
You can do constant time gets using trickery

[15:54:54.0000] <TabAtkins>
Domenic_: Really?

[15:55:14.0000] <Domenic_>
TabAtkins: yeah, the old "put a hidden property on it" trick.

[15:55:39.0000] <Domenic_>
where you override Object.getOwnPropertyNames etc. to not show that property

[15:55:42.0000] <Domenic_>
Doesn't really count though

[15:55:52.0000] <TabAtkins>
I don't understand how it would work.

[15:55:56.0000] <TabAtkins>
With an arbitrary object key.

[15:56:03.0000] <Domenic_>
You put a property on that key

[15:56:05.0000] <Hixie_>
Domenic_: interesting idea

[15:56:20.0000] <TabAtkins>
Oh!

[15:56:29.0000] <TabAtkins>
Tag the object with a ref to the map.

[15:56:35.0000] <TabAtkins>
Or a ref to the value.

[15:56:44.0000] <Hixie_>
or just an ID

[15:56:55.0000] <Hixie_>
that you can then use as a key

[15:56:59.0000] <TabAtkins>
Hixie_: Yeah, you can gensym a key for it.

[15:57:31.0000] <TabAtkins>
Attaching the value to the key directly gives you the GC characteristics you want, I think.

[15:57:31.0000] <Hixie_>
anyway, seems weird that we'd be adding these somewhat elaborate features, rather than just features that would let you implement them simply enough

[15:58:17.0000] <Hixie_>
if we had some sort of reference type, a pointer analogue, that could stringify, etc, it seems like it would make all this less magic

[15:58:19.0000] <TabAtkins>
Note that Extensible Web is never about "rather than".  We want the primitives, but we *also* want the sugar.  Relying on libraries to do all the sugaring is a failure mode to the economics of the network.

[15:58:32.0000] <TabAtkins>
But yes, there's a hidden primitive in Map.


2014-01-04
[16:01:41.0000] <Hixie_>
...why does Set's spec mark an entry as "empty" rather than actually deleting it?

[16:02:46.0000] <TabAtkins>
Dunno.

[16:03:04.0000] <Domenic_>
I am not sure there is a concept of deleting things from spec-Lists...

[16:03:38.0000] <Domenic_>
Also maybe to emphasize how bad the algorithm is and how you really should go for observably-equivalent but smarter behavior

[16:04:12.0000] <Hixie_>
there isn't a concept of appending things from the JS's spec's Lists either, but we do that...

[16:04:55.0000] <Hixie_>
(speaking of which, the JS spec really should be less vague about its definition of the "array-like syntax" for Lists and the "object literal-like syntax" for Records, if it's going to use them normatively all over the place)

[16:06:58.0000] <Domenic_>
Oh weird I've never seen the array-like access for lists

[16:09:10.0000] <Hixie_>
http://html5.org/tools/web-apps-tracker?from=8373&to=8374

[16:09:14.0000] <Hixie_>
^ Map and Set cloning

[16:10:43.0000] <Domenic_>
niiiice

[16:42:17.0000] <TabAtkins>
zcorpan: Your email address in CSSOM has a typo.  The visible address is right, but the mailto link has an extra "p" in it.

[16:42:30.0000] <TabAtkins>
zcorpan: I'd fix, but it requires a local Anolis install, and I don't wanna do that.

[16:42:40.0000] <TabAtkins>
zcorpan: Also: get your spec on Bikeshed already. ^_^

[01:43:02.0000] <MikeSmit1>
what populer JS libraries were in use before Prototype came along? (And then script.aculo.us)?

[05:30:12.0000] <Ms2ger>
odinho, the launch party is when MikeSmith gets the server setup on w3c-test, I guess

[05:34:55.0000] <odinho>
Hmm. Post-merge party then? :D

[07:10:14.0000] <MikeSmith>
hmm I guess server setup's gonna require me to take time to create an init script and that kind of boring stuff

[07:11:12.0000] <MikeSmith>
rather than just running in a screen

[08:17:59.0000] <SimonSapin>
Is this saying it’s *not* like the header? http://whatwg.org/C#pragma-set-default-language "This pragma is almost, but not quite, entirely unlike the HTTP Content-Language header of the same name."

[08:21:52.0000] <Ms2ger>
It's almost entirely not like it, yes

[08:25:19.0000] <gsnedders>
Hmm, does the parser now define what order parse errors occur in?

[08:31:00.0000] <SimonSapin>
The "Submit Review Comment" button says I’ve been automatically CC’ed to the bug, but it’s lying

[11:03:53.0000] <Ms2ger>
Dammit python

[11:04:03.0000] <Ms2ger>
Now I'm doing "".join([]) in JS

[11:14:32.0000] <jgraham>
Ms2ger: You know it makes sense

[11:14:57.0000] <ondras>
String.prototype.join = function(arr) { return arr.join(this); } ?

[11:15:34.0000] <jgraham>
ondras: I don't think Ms2ger is *that* antisocial

[11:15:44.0000] <Ms2ger>
Ouch

[11:16:12.0000] <ondras>
:>

[11:22:51.0000] <smaug____>
Ms2ger: you clearly should avoid that horrible horrible language called python.

[11:23:02.0000] <Ms2ger>
Oh, I thought JS :)

[11:23:31.0000] <smaug____>
hmm, could I have a goal for this q. Don't write any python code.


2014-01-05
[17:17:57.0000] <SimonSapin>
gsnedders: for html5lib, should I rather comment on critic?

[03:25:57.0000] <gsnedders>
SimonSapin: I think jgraham would say yes. I typically don't care until I end up rebasing the branch and then losing all review comments from the PR.

[03:27:12.0000] <SimonSapin>
that’s for comment on diff lines, comments on the PR itself don’t get lost

[03:27:21.0000] <SimonSapin>
but still, fragmenting the discussion is not great

[03:28:49.0000] <gsnedders>
SimonSapin: Yes, I know. It's still sub-optimal, as it makes it hard to see whether the comments I made before have actually been addressed, in my experience.

[04:04:14.0000] <gsnedders>
Yay everything on Travis-CI fails because Genshi cannot be securely downloaded! :(

[04:24:47.0000] <gsnedders>
https://github.com/html5lib/html5lib-python/issues/138

[04:25:08.0000] <gsnedders>
Anyone who has opinions on sanitizing HTML, please do look. (Is tel: safe?)

[04:28:55.0000] <jgraham>
SimonSapin: Yes, please comment on critic. GitHub is just sadness for tracking comments that need to be addressed

[04:32:36.0000] <gsnedders>
jgraham: https://github.com/html5lib/html5lib-python/pull/139 will block everything once Travis CI updates to pip 1.5

[04:33:31.0000] <jgraham>
gsnedders: I'm on it

[04:34:51.0000] <jgraham>
Why do you need --allow-external Genshi?

[04:35:35.0000] <gsnedders>
jgraham: It's not hosted on PyPI. It has to scrape the download page to find it. And needs allow-unverified as it does this over HTTP, and has no hash to verify the download against.

[04:36:24.0000] <jgraham>
Sweet jesus

[04:36:34.0000] <jgraham>
Can we file a bug against Genshi on this?

[04:36:55.0000] <gsnedders>
http://genshi.edgewall.org/ticket/581 sort of does.

[04:37:16.0000] <gsnedders>
I nagged them about it before, to no avail, when it was first decided pip was going to change to do this.

[04:37:55.0000] <jgraham>
Ah, you already filed it

[04:38:59.0000] <jgraham>
r+, please rebase onto master

[04:42:44.0000] <jgraham>
SimonSapin: Can you review https://critic.hoppipolla.co.uk/1c27075e?review=521 please?

[04:43:54.0000] <jgraham>
Was iana_parse just unused code?

[04:44:48.0000] <gsnedders>
jgraham: It was in utils for a reason. Used to generate the encodings dict in constants.py.

[04:45:38.0000] <jgraham>
Oh

[04:46:07.0000] <jgraham>
Fair enough

[04:46:49.0000] <SimonSapin>
jgraham: I can, as soon as I figure out how to in critic

[04:47:47.0000] <gsnedders>
(Am about to push #123).

[04:48:06.0000] <gsnedders>
jgraham: Are you going through all the open PRs?

[04:48:15.0000] <jgraham>
SimonSapin: If you think the changes are OK, you just mark the file as reviewed without creating any issues

[04:48:29.0000] <jgraham>
SimonSapin: And then press "submit"

[04:48:46.0000] <jgraham>
In critic issues and review progress are orthogonal

[04:48:48.0000] <gsnedders>
jgraham: I think his first comment on GH is enough.

[04:49:02.0000] <jgraham>
gsnedders: I haven't seen the GH comment

[04:49:04.0000] <gsnedders>
jgraham: (to show that it isn't okay)

[04:49:12.0000] <gsnedders>
jgraham: On the PR, not on any commit.

[04:50:11.0000] <jgraham>
SimonSapin: To create an issue click on the line that has the issue and add a comment when prompted

[04:55:51.0000] <jgraham>
gsnedders: Nothing so organised

[04:56:20.0000] <gsnedders>
jgraham: Go through the ones I've submitted, at least? Most of them have some comment giving status.

[04:56:34.0000] <jgraham>
gsnedders: Numbers?

[04:56:46.0000] <jgraham>
(right now I am going to go and change the pedals on my bike…)

[04:57:44.0000] <gsnedders>
jgraham: #125, #108, #95, and possibly #110 and #93

[04:57:55.0000] <gsnedders>
jgraham: By #125 I mean #130

[05:08:43.0000] <gsnedders>
I hate all the input stream code :(

[06:17:30.0000] <jgraham>
And by 130 you mean 479?

[06:29:19.0000] <jgraham>
gsnedders: r/227 seems to be wiating for you

[08:36:45.0000] <jgraham>
"""These tests are written by Björn Höhrmann, and do not match the specification.

[08:36:48.0000] <jgraham>
They are licensed under GPLv3 and Artistic 2.0.

[08:36:51.0000] <jgraham>
"""

[08:36:56.0000] <jgraham>
rm -rf then


2014-01-06
[21:47:43.0000] <wirepair>
anyone know how close the parsing in http://about.validator.nu/htmlparser/ resemebles gecko's parser?

[22:35:46.0000] <MikeSmith>
wirepair: it should be exactly close

[22:35:58.0000] <MikeSmith>
any differences would not be intentional

[22:36:51.0000] <MikeSmith>
hmm, modulo how up to date the code behind http://about.validator.nu/htmlparser/

[22:37:38.0000] <MikeSmith>
I think the source has some resst changes that have not be pushed to there yet

[22:38:25.0000] <MikeSmith>
oops but that's the sure for the "about" page

[22:41:08.0000] <MikeSmith>
I'd though you meant http://html5.validator.nu/parsetree

[22:42:11.0000] <MikeSmith>
so now I think I don't understand your question..

[22:46:50.0000] <MikeSmith>
wirepair: the gecko C++ parser is not yet portable outside of gecko, if that's what you're thinking about

[22:50:47.0000] <wirepair>
MikeSmith: awesome thanks! i need to hijack the various parser transitions to do some testing

[22:51:04.0000] <wirepair>
i just want to make sure it's as close as possible to how firefox parses

[22:54:16.0000] <MikeSmith>
wirepair: yeah it is

[22:54:53.0000] <wirepair>
good deal, thanks for confirming

[22:55:00.0000] <MikeSmith>
np. hsivonen should be on soonish if you have specific questions

[22:55:51.0000] <wirepair>
cool, first order of business is trying to get the raw html source from a firefox extension without it being tainted by the parser fixing up various things

[06:11:47.0000] <annevk>
So I tried updating the topic to use — rather than -- but apparently you need to be op for that :/

[06:15:40.0000] <jgraham>
Changing the topic here? Heresy.

[06:16:13.0000] <annevk>
It's 2014, everyone better have utf-8 by now

[06:16:27.0000] <jgraham>
Well IRC isn't encoding-aware

[06:52:49.0000] <gsnedders>
If #linguistics can cope by just telling everyone to use UTF-8, then I expect #whatwg can. :P

[06:53:32.0000] <darobin>
people coming here with their clients set to anything other than UTF8 deserve not to read anything

[07:12:01.0000] <annevk>
Any opinions on Kindles here?

[07:12:28.0000] <annevk>
The normal one looks better than the Paperwhite edition, but maybe I'm missing something?

[07:12:41.0000] <Ms2ger>
I like dead trees

[07:13:05.0000] <darobin>
annevk: what kind of opinion?

[07:13:37.0000] <darobin>
Ms2ger: I guess that Kindles are largely derived from dead algae

[07:13:54.0000] <Ms2ger>
And dead dinosaurs?

[07:14:01.0000] <annevk>
darobin: any really, I'm considering getting one so I don't have to carry lots of dead trees around

[07:14:18.0000] <jory>
A Kindle is much nicer to carry around than any particular doorstopper.

[07:14:48.0000] <jory>
They're alright for technical books as well. Not great, but not terrible.

[07:15:02.0000] <darobin>
annevk: well, I've had a K2 and a K3, and I've been happy with both

[07:15:07.0000] <darobin>
I haven't tried the paperwhite

[07:15:36.0000] <darobin>
I routinely archive a de-DRMed stash of the books, just in case

[07:16:08.0000] <darobin>
the thing I like least is that when you upgrade an ebook you lose your annotations — but currently all ebook systems seem to suffer from that issue

[07:16:58.0000] <darobin>
if you're the kind to write on books be sure to get a version on which you find the keyboard easy to use, i.e. not the entry-level one where you have to move from key to key using the arrows

[07:17:50.0000] <jgraham>
annevk: I quite like them. Not as nice as a real book, but a good reading experience. Depends what your use case is really. I have only used it for reading fiction and have never bothered with the annotaion service / etc.

[07:17:54.0000] <SimonSapin>
annevk: because JSON sucks for being written by humans: https://github.com/mojombo/toml

[07:17:55.0000] <darobin>
annevk: I have a script that parses the file in which the Kindle stores annotations, bookmarks, etc. If you're interested I can clean it up and release it.

[07:18:17.0000] <jgraham>
Also, being able to select a word and get a definition is useful

[07:18:21.0000] <darobin>
yeah

[07:18:37.0000] <darobin>
they're often not very good for programming books as the examples tend to wrap suckingly

[07:19:00.0000] <jory>
Yeah, you basically have to read technical books in landscape with a small font.

[07:19:31.0000] <darobin>
also, I now get all maths-heavy books in paper format

[07:19:45.0000] <darobin>
otherwise you get equations as gifs — it's maddening

[07:20:23.0000] <jgraham>
Blame Google?

[07:21:38.0000] <jgraham>
(I assume it uses WebKit, which doesn't have MathML support)

[07:21:59.0000] <jgraham>
(but the idea of using it for technical books is mildly horrifying)

[07:22:37.0000] <jgraham>
As a format it only really works for things that are very layout-agnostic

[07:23:28.0000] <darobin>
yes

[07:23:45.0000] <Ms2ger>
Get a TeX'd PDF?

[07:23:46.0000] <darobin>
though it depends on what kind of tech book, those that are discussion based are fine

[07:24:00.0000] <annevk>
I was thinking of using it for reading

[07:24:08.0000] <Ms2ger>
/me gasps

[07:24:09.0000] <annevk>
Mostly fiction

[07:24:35.0000] <jory>
I actually read all of raganwald's stuff on my Paperwhite; but his largest code sample is still less than a dozen lines or so.

[07:24:48.0000] <darobin>
annevk: for fictions it's an obvious choice

[07:25:29.0000] <annevk>
darobin: is http://www.amazon.co.uk/gp/product/B007HCCOD0/ the one you have?

[07:25:36.0000] <annevk>
I'm not too worried about the annotation stuff

[07:25:54.0000] <darobin>
annevk: no, I have an earlier one

[07:25:57.0000] <darobin>
it's still running

[07:26:54.0000] <jgraham>
We have a pre-paperwhite touch version. I could bring it in tomorrow if you want to have a look

[07:27:04.0000] <darobin>
annevk: I think they've rebranded it, it's this one http://www.amazon.co.uk/Kindle-Wireless-Reader-Wifi-Graphite/dp/B002Y27P46/ref=sr_1_6?ie=UTF8&qid=1389021994&sr=8-6&keywords=kindle+keyboard

[07:27:16.0000] <darobin>
but if you don't care about annotations, get a paperwhite I'd reckon

[07:29:14.0000] <annevk>
I don't care, but it seems the one I pointed to is even simpler?

[07:29:36.0000] <annevk>
Or is the backlight really great?

[07:29:40.0000] <jory>
It is really great.

[07:30:06.0000] <jory>
You can read equally well in the dark through to full sunlight.

[07:30:47.0000] <jgraham>
Seems useful if you ever want to read on a plane with the lights dimmed, for example

[07:30:55.0000] <darobin>
yeah the backlight is good

[07:32:55.0000] <jory>
I've had multiple Kindles, as I'm quite good at breaking them, and aside from the lack of physical buttons page turning buttons, the Paperwhite is ideal.

[07:50:15.0000] <MikeSmith>
annevk: non-paperwhite one sucks for reading outside in sunlight

[07:50:42.0000] <MikeSmith>
or really any non-e-ink reader does

[07:54:29.0000] <gsnedders>
Yeah, you want e-ink for a eReader. Definitely.

[08:02:20.0000] <SimonSapin>
I’ve started reading on a LCD tablet and a phone, I wonder if e-ink is worth Yet Another Device

[08:02:48.0000] <jory>
Is your reading synced between those two devices?

[08:02:55.0000] <SimonSapin>
(I mean reading fiction books)

[08:04:08.0000] <SimonSapin>
no sync, but I read one fiction book at a time and with the TOC it’s not too hard to find where I was

[08:05:58.0000] <gsnedders>
SimonSapin: IMO it is worth it

[08:06:26.0000] <jgraham>
Not sure I would want to read fiction on non-e-ink

[08:06:35.0000] <jgraham>
Or any long text

[08:06:47.0000] <jgraham>
It's bad enough using such a display all day

[08:08:35.0000] <annevk>
I didn't get the impression from the site that Paperwhite is e-ink, but this all sounds good. Thanks guys!

[08:08:50.0000] <annevk>
I suppose I'll get that one.

[08:11:56.0000] <gsnedders>
annevk: I don't think it is? I dunno.

[08:12:27.0000] <jgraham>
I thought it was?

[08:13:05.0000] <jory>
It is e-ink, but also backlit.

[08:13:09.0000] <gsnedders>
Yeah, it is

[08:13:15.0000] <jgraham>
It has a "E Ink perl active matric display" it seems

[08:13:19.0000] <jory>
If you turn off the backlighting, it looks like a normal eink display.

[08:13:31.0000] <jgraham>
Oh, wait "pearl"

[08:13:51.0000] <gsnedders>
/me decided against getting a Kindle for the sake of being able to actually use standard ePubs and not only Amazon's proprietary format…

[08:13:54.0000] <jgraham>
(also matrix, but that was a less Freudian typo)

[08:13:56.0000] <jory>
E-Ink /$@#!##$%*^!/

[08:17:03.0000] <darobin>
annevk, gsnedders: getting some really good love from w3cmemes :)

[08:17:56.0000] <gsnedders>
darobin: I can't quite work out who is meant to be who. :)

[08:18:27.0000] <darobin>
I was thinking you were on the left

[08:18:43.0000] <darobin>
not sure who filed this meme though, they may have had a clearer notion

[08:18:46.0000] <Domenic_>
Nook is pretty good alternative that does ePub

[08:18:59.0000] <gsnedders>
darobin: I dunno. :)

[08:19:19.0000] <darobin>
gsnedders: I have to say I love the jacket

[08:19:26.0000] <annevk>
I wish I was that cool

[08:19:48.0000] <darobin>
awww

[08:20:21.0000] <darobin>
all this ebook talk makes me wonder: did that idea of making Zip first-class citizen ever get anywhere?

[08:21:54.0000] <annevk>
It got to the point where I no longer wanted to pursue it

[08:23:11.0000] <annevk>
I think wycats_ still thinks it has merit and when we discussed it within the TAG we came up with some new kind of format that would handle streaming better and was more compatible with custom file extensions and custom HTTP headers...

[08:24:17.0000] <darobin>
annevk: you have a pointer for that?

[08:25:22.0000] <annevk>
I think https://gist.github.com/wycats/220039304b053b3eedd0 might be our write up

[08:28:31.0000] <annevk>
I rely so much on my browser history it's kind of fucked up

[08:28:34.0000] <darobin>
annevk: great, thanks

[08:28:39.0000] <darobin>
I know how that feels

[08:29:18.0000] <darobin>
a long time ago I used to have a small HTTP proxy in Perl that did full text indexing over my browsing; I should probably reimplement that

[08:29:29.0000] <annevk>
http://www.flickr.com/photos/gsnedders/2964101064/ is the classic Mandelieu 2008 photo btw

[08:29:52.0000] <MikeSmith>
ah yeah that one was great

[08:30:32.0000] <gsnedders>
> That moment when timbl asks for a photo with you

[08:31:54.0000] <Ms2ger>
[citation needed]

[08:32:25.0000] <annevk>
/me can attest

[09:30:08.0000] <annevk>
So even Gravity was not shot in "4k"

[09:32:00.0000] <smola>
annevk: hi there

[09:32:09.0000] <annevk>
hey

[09:32:54.0000] <smola>
if WHAGWG URL is supposed to obsolete the RFCs, shouldn't it include a formal specification of a valid URL? Such as importing the RFC 3986 ABNF spec?

[09:33:58.0000] <annevk>
smola: there's a formal definition

[09:34:05.0000] <annevk>
smola: formal doesn't require ABNF

[09:35:39.0000] <smola>
annevk: yeah, sure, I meant any unambiguous formal definition

[09:35:46.0000] <smola>
not necessarily ABNF

[09:36:12.0000] <annevk>
http://url.spec.whatwg.org/#writing

[09:43:21.0000] <MikeSmith>
smola: the spec prose of that section is intended to be unambiguous. you don't necessarily need any kind of formalism to achieve unambiguity..

[09:43:54.0000] <Ms2ger>
MikeSmith, do you need a formalism for a formal definition, though?

[09:44:53.0000] <MikeSmith>
Ms2ger: not as far as I can see

[09:45:11.0000] <MikeSmith>
(and now I see that I just repeated what annevk already said anyway)

[09:46:07.0000] <MikeSmith>
Ms2ger: it's a formal definition that takes the form of prose

[09:46:11.0000] <smola>
MikeSmith: yes, I see. Somehow I didn't realise the intent of that section was to provide *the* formal definition ;)

[09:46:27.0000] <MikeSmith>
and it's formal in that it states requirements unambiguously

[09:46:52.0000] <smola>
it's harder to grasp for me than a ABNF or any kind of grammar, but that's a matter of personal preference I guess ;)

[09:46:54.0000] <MikeSmith>
smola: yeah, actually I didn't either when I first read it

[09:46:58.0000] <annevk>
smola: it might need a bit more examples and introductory text

[09:47:06.0000] <MikeSmith>
bingo

[09:47:11.0000] <annevk>
smola: I'm waiting for it to get some traction

[09:47:16.0000] <jgraham>
Well, you could say that it's not formal in that it relies on ambiguous language rather than a symbolism with a defined set of rules

[09:47:26.0000] <annevk>
Implemented by one browser as is would be good

[09:47:39.0000] <jgraham>
(that's not to say that a formalism is better)

[09:47:49.0000] <MikeSmith>
smola: annevk is allergic to writing introductions and other forms of non-normative text

[09:48:09.0000] <Ms2ger>
Not as allergic as I am, fortunately :)

[09:48:18.0000] <MikeSmith>
heh

[09:57:29.0000] <smola>
annevk: sounds good, thank you

[10:50:25.0000] <SimonSapin>
Is the :scope pseudo-class still a thing? It’s in the abandoned selectors-api2 but not in DOM, that replaces it

[10:51:31.0000] <Ms2ger>
I found another photo of MikeSmith with that monk: http://i.imgur.com/B36Srq3.jpg

[12:28:25.0000] <TabAtkins>
annevk-cloud: Regarding e-readers, I'm still very happy with my simple Nook.  It reads PDFs and epubs, which is all I need.  And the B&N drm is easy to strip off.

[14:12:07.0000] <Hixie_>
heycam|away: your input on bugs in this list would be most helpful: https://www.w3.org/Bugs/Public/buglist.cgi?list_id=30749&query_format=advanced&status_whiteboard=heycam&status_whiteboard_type=allwordssubstr

[14:14:47.0000] <Ms2ger>
heycam|away, so would your input on your own damn bugs! :)

[14:24:41.0000] <Hixie_>
anyone want to figure out when <embed> fires 'load' events, exactly? :-) https://www.w3.org/Bugs/Public/show_bug.cgi?id=23951

[14:25:57.0000] <Ms2ger>
Would a "no" surprise you a lot? :)

[14:26:30.0000] <Hixie_>
not in the slightest :-(

[14:27:38.0000] <TabAtkins>
Ooh, apparently our UseCounter on the SVG <use> instance tree reports absolutely no usage on the web.

[14:27:57.0000] <pdr>
++

[14:28:19.0000] <pdr>
Just search around, it's clear the instance tree is not used

[14:29:28.0000] <Hixie_>
wow, zero?

[14:29:33.0000] <Hixie_>
not even tests or something?

[14:29:45.0000] <Hixie_>
that's awesome

[14:31:23.0000] <heycam>
TabAtkins, that's good news. but not unexpected, given it's not implemented everywhere.

[14:31:44.0000] <heycam>
TabAtkins, did you or Dirk end up putting use counters in for everything SVG? or just certain things?

[14:31:59.0000] <pdr>
heycam, I did it just for instanceRoot in crbug.com/313438

[14:32:00.0000] <heycam>
Hixie_, will look

[14:32:02.0000] <TabAtkins>
No, but pdr put in some targetted ones.

[14:32:06.0000] <heycam>
pdr, ah ok

[14:52:15.0000] <Hixie_>
crap

[14:52:31.0000] <Hixie_>
in trying to determine what the spec should do for that embed bug, i found two more bugs

[14:53:43.0000] <Ms2ger>
Been there :)

[14:54:33.0000] <Hixie_>
/me files them and moves on

[14:56:56.0000] <Hixie_>
interesting that 'load' events fire on <embed>, then the outer doc, then the inner doc

[14:56:59.0000] <Hixie_>
oh wait

[14:57:04.0000] <Hixie_>
nevermind that last part

[14:57:10.0000] <Hixie_>
not sure what order the inner doc and outer doc fire


2014-01-07
[21:36:09.0000] <MikeSmith>
Domenic_: what do gulp and browserfy have to do with streams?

[00:36:48.0000] <zcorpan>
hsivonen: iirc https://code.google.com/p/chromium/issues/detail?id=329531 applies to gecko, too

[00:40:56.0000] <hsivonen>
zcorpan: thanks

[00:48:40.0000] <MikeSmith>
zcorpan: "I propose we don't address this" from sof.. why? because it will break things?

[00:49:24.0000] <zcorpan>
MikeSmith: s/will/is not proven not to/

[00:49:50.0000] <MikeSmith>
ok

[00:49:58.0000] <Ms2ger>
From ap?

[00:50:29.0000] <MikeSmith>
sigbjorn from oepra

[01:20:01.0000] <annevk>
SimonSapin: I thought :scope was still a thing

[01:20:09.0000] <annevk>
SimonSapin: I thought it moved to Selectors or some such, TabAtkins?

[01:25:18.0000] <Ms2ger>
http://dev.w3.org/csswg/selectors/#scope-pseudo

[01:34:08.0000] <annevk>
\o/ Chrome is going to remove obsolete DOM stuff. Sadly they still refer to it as DOM4

[01:39:15.0000] <MikeSmith>
annevk: I think that's just because Dominic didn't get the memo that it should be called something else

[01:39:48.0000] <annevk>
MikeSmith: he does refer to the WHATWG copy so there's that, indeed

[01:40:22.0000] <annevk>
I had to commute today and be in at 9AM. That shit is hard

[01:44:12.0000] <MikeSmith>
annevk: hard to find a parking space big enough for your cadillac

[01:44:58.0000] <annevk>
Can of sardines is nothing compared to the Circle line

[01:46:13.0000] <annevk>
Central line, that is, still getting used to the terminology

[01:46:41.0000] <MikeSmith>
could be worse: You could be living in Mountain View

[01:48:10.0000] <Ms2ger>
Or Tokyo? :)

[01:48:37.0000] <MikeSmith>
heh

[02:10:43.0000] <jgraham>
/me wonders where annevk is

[02:10:59.0000] <annevk>
jgraham: http://theodi.org/

[02:11:48.0000] <jgraham>
Why?

[02:15:50.0000] <hsivonen>
annevk: whoa. the Thunderbird compose encoding menu is worse than I expected

[02:16:06.0000] <hsivonen>
https://bugzilla.mozilla.org/show_bug.cgi?id=943252#c9

[02:18:07.0000] <annevk>
jgraham: the W3C TAG is meeting there

[02:19:12.0000] <jgraham>
annevk: Oh, sucks to be you

[02:20:20.0000] <annevk>
hsivonen: ugh

[02:27:04.0000] <annevk>
hsivonen: sorry I haven't been responsive lately, it's not going to get much better until mid-March or so

[02:27:30.0000] <annevk>
hsivonen: I plan to focus on Encoding stuff next week

[02:33:11.0000] <hsivonen>
annevk: OK.

[02:33:38.0000] <hsivonen>
FWIW, I'm inclined to think that Thunderbird shouldn't bother the user with composition encoding UI at all

[02:33:59.0000] <hsivonen>
but my first goal is getting cruft out of m-c. not redesigning TB

[02:40:05.0000] <annevk>
I think email inevitably ends up being a web thing, so I'm not too worried about Thunderbird

[02:45:54.0000] <hsivonen>
annevk: the reason why I end up writing essays for the TB bugs is that the mailnews dependencies make it hard to remove code that's dead code in Firefox

[02:46:30.0000] <annevk>
Understood, the dependencies are sad, especially so long after the Firefox fork

[02:46:47.0000] <annevk>
The RDF-in-Gecko apologists are also making me somewhat sad

[02:49:01.0000] <hsivonen>
annevk: that thread took an unexpected turn

[02:49:35.0000] <krijn>
MikeSmith: thanks voor the retweets! :)

[02:57:58.0000] <annevk>
hsivonen: the last guy also frequently comments on www-tag, not unexpected

[02:58:24.0000] <annevk>
hsivonen: felt similar to how suddenly a bunch of XSLT apologists found out blink-dev exists

[03:04:57.0000] <hsivonen>
and this RDF stuff doesn't even have anything to do with the Semantic Web while XSLT has something to do with using XSLT

[03:07:34.0000] <annevk>
I guess there's a point to be made that the dev.platform discussion is worse :-)

[03:07:43.0000] <annevk>
http://w3ctag.github.io/capability-urls/2014-01-03.html is pretty awesome by the way

[03:11:51.0000] <MikeSmith>
krijn: yup

[03:24:00.0000] <krijn>
MikeSmith: :|

[03:25:38.0000] <MikeSmith>
nice to use twitter for something useful

[03:31:17.0000] <MikeSmith>
"The nightmare scenario would be that the web platform ceases to be a platform at all, and simply becomes an amalgamation of JS bindings to various operating system APIs of varying capability"

[03:31:56.0000] <darobin>
hahaha

[03:31:59.0000] <darobin>
MikeSmith: where that from?

[03:32:14.0000] <MikeSmith>
darobin: https://groups.google.com/a/chromium.org/d/msg/blink-dev/4jBAnIVwrt0/v2qzjSNn_E8J

[03:32:53.0000] <darobin>
oh, I haven't read that thread yet — it seemed to hold promise :)

[03:34:57.0000] <MikeSmith>
darobin: maybe but I much prefer the "should we use auto?" thread on webkit-dev

[03:35:47.0000] <darobin>
haha, I started muting that one

[03:37:40.0000] <darobin>
MikeSmith: Jon Rimmer does have a very good point though

[03:38:19.0000] <darobin>
I mean, we've been talking about providing some sort of low level access to hardware, of the USB API kind, instead of creating dedicated APIs for all sorts of things

[03:38:51.0000] <darobin>
which makes a lot of sense in many ways — but what happens if the generic hardware API starts to become meaningless?

[03:40:02.0000] <annevk>
MikeSmith: has there been any recent interesting webkit-dev thread?

[03:40:56.0000] <annevk>
MikeSmith: given the way Apple works I expect most of it to be on secret-webkit-dev

[03:45:21.0000] <darobin>
annevk: it does feel that way reading the list

[03:46:14.0000] <MikeSmith>
darobin: bingo (about if generic hardware API starts to become meaningless)

[03:46:54.0000] <MikeSmith>
annevk: there have been some interesting ones yeah

[03:46:59.0000] <MikeSmith>
/me looks back

[03:47:33.0000] <annevk>
darobin: you need something more generic than USB or Bluetooth

[03:47:56.0000] <annevk>
darobin: it needs to be on the level of "implement a driver for a connected device"

[03:48:22.0000] <darobin>
annevk: yeah, but that still likely relies on OS-level assumptions. Also, I am always suspicious of that level of abstraction

[03:48:28.0000] <annevk>
darobin: which I guess comes down to having something similar to USB or Bluetooth for the web, and if your device wants to be compatible it needs to support that

[03:48:46.0000] <annevk>
darobin: you need to start from the assumption that the web is the OS

[03:48:51.0000] <darobin>
annevk: or there is a browser mapping of that to USB

[03:49:06.0000] <darobin>
annevk: yeah, I started from that assumption a long time ago :)

[03:49:15.0000] <MikeSmith>
annevk: anyway the src-N thread on webkit-dev was gold. looking forward to more like that

[03:49:18.0000] <darobin>
but still, it needs to be resilient to architectural changes

[03:49:24.0000] <annevk>
MikeSmith: fair

[03:49:43.0000] <annevk>
darobin: might just be called HTTP in the end

[03:49:53.0000] <MikeSmith>
QUIC

[03:49:57.0000] <darobin>
annevk: that's all very handwavy :)

[03:50:10.0000] <darobin>
hardware is, well, hard

[03:50:32.0000] <MikeSmith>
oops I mean SPDY

[03:50:36.0000] <annevk>
darobin: once you go down the route of two pieces that need to be connected over a network, you end up there pretty quickly

[03:51:03.0000] <annevk>
darobin: at first you think you need to have something low-level because nothing is capable, like WAP to HTML, and at some point you realize you were wrong

[03:51:19.0000] <darobin>
annevk: I know, and in fact there's very interesting work in that area. Though at this point they've made rather brutal optimisations

[03:52:13.0000] <darobin>
annevk: I will be amused when this all leads to EXI being supported in the browser (it's a common component in ZigBee's HTTP hardware stuff)

[03:52:37.0000] <darobin>
(it's one of the "brutal optimisations")

[03:54:54.0000] <MikeSmith>
darobin: somebody told me HTTP2 people were looking at EXI for imspiration for header compression

[03:55:19.0000] <darobin>
MikeSmith: I'm not sure if I'd want them to go that way, but it could in fact yield interesting results

[03:55:26.0000] <MikeSmith>
and today I see https://github.com/twitter/hpack but haven't looked at it the code

[03:55:27.0000] <darobin>
I suspect the complexity might be excessive though

[03:55:55.0000] <MikeSmith>
darobin: I dunno, Hiro told me that. Nakajima. and he's following it alll pretty closely

[03:56:06.0000] <darobin>
one of the advantages of using EXI is that people can compete on encoder quality while remaining interoperably decodable

[03:56:36.0000] <MikeSmith>
yeah that would be a good advantage

[03:56:38.0000] <darobin>
MikeSmith: I had mentioned it to the SPDY folks a long time ago when they had started working on this but they were dismissive

[03:56:52.0000] <zcorpan>
at least the "punch in the face" thread was a bit funny

[03:56:56.0000] <MikeSmith>
a lot has changed since then I guess

[03:57:23.0000] <darobin>
well, I guess that if someone involved in it has understood that the "X" in "EXI" is accidental, then advocacy can make headway from there

[03:58:23.0000] <darobin>
if EXI ever makes it into HTTP2 I think I'll retire

[03:58:29.0000] <MikeSmith>
zcorpan: "punch in the face" thread?

[03:58:35.0000] <MikeSmith>
https://twitter.com/pmarca/status/419257504913448960 btw

[03:58:35.0000] <darobin>
that's enough evil for a single lifetime

[03:59:05.0000] <zcorpan>
MikeSmith: http://www.w3.org/mid/01EDE259-9B0C-47BE-BA09-536877558EDD⊙gc

[04:00:20.0000] <MikeSmith>
zcorpan: ah yeah that guy was telling it like it is, really

[04:02:26.0000] <darobin>
yeah that was pretty funny :)

[04:02:39.0000] <darobin>
jgraham: I'm done reviewing https://critic.hoppipolla.co.uk/r/526, I'll leave the python bits to someone else

[04:03:08.0000] <jgraham>
darobin: Given the number of comments that's probably just as well :p

[04:03:16.0000] <darobin>
heh

[04:03:28.0000] <jgraham>
I might have to quibble over some style issues, but generally great work, thanks

[04:03:48.0000] <darobin>
well I did read the Python code, but I don't have much to say beyond the fact that I find it weird you find it easier to include a complete HTML serialiser rather than just use a template :)

[04:03:56.0000] <darobin>
jgraham: you're more than welcome :)

[04:04:46.0000] <darobin>
I can see where the style issues are coming from; I mean, it's JS written more or less as if it were Python

[04:58:31.0000] <Ms2ger>
jgraham, I agree with darobin for once (on ||) :)

[05:00:23.0000] <jgraham>
Sigh

[05:00:46.0000] <jgraham>
Well if everyone disagrees with me I will change it, but I don't think it's at all clearer

[05:00:46.0000] <MikeSmith>
uh oh things are heating up on that review. I feel a "punch in the face" message possibilty

[05:01:43.0000] <jgraham>
So I don't understand *why* people like it. Because it's slightly shorter? Because it feels clever?

[05:02:20.0000] <MikeSmith>
idiomatic

[05:02:27.0000] <jgraham>
("slightly shorter" is honestly the best legitimate reason I can come up with, so if there is a better one I would like to know)

[05:03:01.0000] <Ms2ger>
Doesn't evaluate the x in x ? x : y twice

[05:03:19.0000] <jgraham>
MikeSmith: But I don't understand why it's idiomatic

[05:03:53.0000] <Ms2ger>
And the comparison with python doesn't make sense, it isn't "condition and value_if_true or value_if_false" but "value_if_true and value_if_true or value_if_false"

[05:04:02.0000] <jgraham>
Ms2ger: That isn't an actual problem in any case here and could be solved with the use of a variable if it was

[05:04:22.0000] <MikeSmith>
jgraham: I don't either in this case, really.

[05:04:31.0000] <jgraham>
Ms2ger: In python people have written value_if_true or value_if_false

[05:04:41.0000] <jgraham>
It works in exactly the same way

[05:04:43.0000] <Ms2ger>
Well yes

[05:04:55.0000] <Ms2ger>
Let's do that, then :)

[05:04:58.0000] <jgraham>
But these days I would expect anyone to use the ternary operator in Python

[05:05:22.0000] <jgraham>
(in either case)

[05:05:44.0000] <jgraham>
Certianly I would always write value_if_true if value_if_true else value_if_false

[05:05:51.0000] <Ms2ger>
I know you would :)

[05:06:12.0000] <Ms2ger>
I'm not convinced about anyone, though

[05:13:52.0000] <darobin>
whoa, I hadn't realised Ms2ger agreed with me

[05:13:56.0000] <darobin>
I might have to change my mind

[05:14:22.0000] <Ms2ger>
:D

[05:14:43.0000] <jgraham>
Good, then maybe we can end up with code that isn't only accessible to seasoned js veterans :p

[05:15:00.0000] <darobin>
oh please, this is an entry-level idiom

[05:15:06.0000] <jgraham>
But seriously, I am bored of arguing about this

[05:15:27.0000] <jgraham>
If you are prepared to forego this change resolve the issues

[05:15:27.0000] <darobin>
jgraham: hey! you're the one who just reopened the argument :)

[05:15:33.0000] <jgraham>
Otherwise I will change it

[05:16:52.0000] <darobin>
jgraham: IIRC the only problem I care about strongly is the asynchrony one

[05:16:55.0000] <darobin>
because that's actually a bug

[05:17:04.0000] <darobin>
the rest is IIRC just good practice stuff

[05:17:57.0000] <jgraham>
So the only other thing in the review that I recall thinking is better as-is was some of the public-vs-private stuff

[05:18:17.0000] <darobin>
public-vs-private?

[05:18:30.0000] <darobin>
oh you mean putting all your variables as attributes?

[05:18:38.0000] <jgraham>
Weren't there some things that you complained were only used from within the class?

[05:18:44.0000] <darobin>
oh, yes

[05:19:07.0000] <darobin>
it's not so much that I mind, but in reviewing the code if I see a method exposed I expect it to be something that's used from outside somehow

[05:19:17.0000] <darobin>
so for instance I'd wonder why load() doesn't take a path

[05:19:52.0000] <darobin>
it looked like you split out the init code into methods rather systematically, but it's not clear that they could actually meaningfully be used on their own

[05:20:19.0000] <jgraham>
I don't think they can, but the system was nice

[05:20:20.0000] <darobin>
jgraham: I don't reckon this is code that will get used by other code as a library, so it likely doesn't really matter in the long run

[05:20:35.0000] <jgraham>
No, I don't think anyone else will be using this for anything

[05:20:58.0000] <darobin>
but you never know, so I reviewed as I'd review any piece of JS

[05:21:10.0000] <jgraham>
Yep, like I said it's much appreciated

[06:28:46.0000] <zcorpan>
yoav: your way to write attributes is backwards (to what i'm used to, anyway) :-)

[06:29:14.0000] <yoav>
zcorpan: that sounds very likely :)

[06:31:17.0000] <yoav>
I normally don't use the @ thing to write attributes, so when I do, I get it wrong

[06:33:38.0000] <yoav>
zcorpan: Regarding https://github.com/ResponsiveImagesCG/picture-element/issues/89 , it requires direct changes in the HTML spec, right? Or are there existing hooks that can allow that?

[06:34:48.0000] <zcorpan>
yoav: i don't think it requires changes to the HTML spec in particular

[06:37:03.0000] <zcorpan>
yoav: the bug is asking to change "When asked to update the list of source sets for a given picture element picture, user agents must do the following:" to "When asked to update the list of source sets for a given img element img, user agents must do the following:" and then write the algorithm in terms of that

[06:37:56.0000] <zcorpan>
yoav: the difference is subtle, i guess

[06:38:27.0000] <yoav>
zcorpan: Yeah, I missed that

[06:40:34.0000] <yoav>
If no external hooks are required, I agree with you on this issue

[07:08:51.0000] <Ms2ger>
"USPTO.GOV  still has URLs that return HTTP/0.9 responses."

[07:08:54.0000] <Ms2ger>
Yay, back-compat

[09:00:42.0000] <gsnedders>
Ms2ger: Compat with HTTP/0.9 is actually wonderful. Try and parse the response as HTTP/1.1; if you fail, treat it as HTTP/0.9.

[11:19:52.0000] <Hixie>
why does http://software.hixie.ch/utilities/js/live-dom-viewer/saved/2725 not work in firefox and safari?

[11:19:56.0000] <Hixie>
am i being dumb?

[11:25:28.0000] <jory>
Hixie: Seems like it's working in FF, AFAICT.

[11:25:50.0000] <Hixie>
what do you get?

[11:26:07.0000] <Hixie>
/me updates his nightly

[11:26:47.0000] <Hixie>
i get no message back even on the latest nightly

[11:39:03.0000] <jory>
Hixie: Actually, on reading what the code is actually supposed to do, it's not working in Chrome or FF... looks like setting <body.onmessage> doesn't actually set up your listener properly.

[11:39:41.0000] <jory>
/me remembers that consistency does not imply functioning, cause things can be consistently broken too

[11:41:30.0000] <zcorpan>
Hixie: i think offsetWidth is not useful to test since it has an explicit "am i rendered?" path and returns 0

[11:42:26.0000] <Ms2ger>
Hixie, zero with setting the IDL attribute in Fx

[11:49:31.0000] <Hixie>
jory: i get a message in chrome, at least

[11:49:44.0000] <Hixie>
zcorpan: yeah, possible. not sure what is right to test.

[11:49:49.0000] <Hixie>
zcorpan: see thread in whatwg

[11:49:53.0000] <Hixie>
Ms2ger: ?

[11:51:00.0000] <Ms2ger>
document.body.onmessage = ... works

[11:51:27.0000] <jory>
Hixie: Yeah, it works in Canary, just not the... normal... one.

[11:51:43.0000] <jory>
Public one? I don't know what the term for the standard issue is.

[11:53:35.0000] <Hixie>
Ms2ger: weird

[11:53:47.0000] <Hixie>
jory: ah yeah, i'm only testing dev here

[11:54:13.0000] <Hixie>
i believe they call their variants stable, beta, dev, and canary i think

[11:57:30.0000] <zcorpan>
Hixie: maybe window.matchMedia. it returns null in firefox when the frame is invisible. blink returns the right object with .matches == true for '(width:0px)' as the query

[11:57:50.0000] <Hixie>
ah, not familiar with that API

[11:58:14.0000] <Hixie>
like i said in the thread, though, i'm happy to spec stuff if nobody wants to own this on the CSS side.

[11:58:41.0000] <zcorpan>
yeah i'm just popping in here to be clever :-)

[12:00:55.0000] <Hixie>
:-)

[12:01:27.0000] <zcorpan>
svg <switch> might also work

[12:03:37.0000] <zcorpan>
or maybe that didn't do media queries

[12:19:10.0000] <zcorpan>
MikeSmith: http://krijnhoetmer.nl/irc-logs/whatwg/20140107#l-387 - something in particular in the thread being gold? (pointer?)

[14:37:51.0000] <Ms2ger>
Hixie, dom.spec.whatwg.org appears to be down

[14:37:53.0000] <Ms2ger>
annevk-cloud, ^

[14:38:02.0000] <krijn>
Haha, noobs!

[14:38:12.0000] <Ms2ger>
Also, how do you spec "in the DOM"?

[14:52:57.0000] <Hixie>
Ms2ger: wfm

[14:53:07.0000] <Hixie>
Ms2ger: how do you mean, "in the DOM"?

[14:53:16.0000] <Hixie>
Ms2ger: if you mean "in a document", HTML has some macros for that

[14:53:22.0000] <Ms2ger>
Furthest ancestor is the document

[14:53:48.0000] <Ms2ger>
And seems to be up now, yes

[14:54:08.0000] <Ms2ger>
And "in a document" was what I was looking for

[15:26:52.0000] <dbaron>
Hixie, so a number of years ago I remember thinking that the intent of the IDN (and maybe also IRI) specs was that different "slots" (places where a URI went) would have to specify individually whether they accepted the new features.  Looking back now, I can't seem to find any backing for this understanding in the specs.  Do you remember having a similar understanding, or was I just overinterpreting?

[15:28:06.0000] <Hixie>
i have the same understanding

[15:28:38.0000] <Hixie>
i don't really see how else it could work, i mean, you can't force places that only ever accepted ASCII to suddenly accept Unicode.

[15:29:33.0000] <dbaron>
looking at the specs now... it seems like IDN defines an "IDN-aware slot" concept... but that IRI then says IRIs can have unicode hostnames and essentially says they're IDN-aware

[15:29:57.0000] <Hixie>
IRIs are always IDN-aware. but not everywhere accepts IRIs.

[15:29:58.0000] <dbaron>
hmmm... pretty sure <a href="..."> deals with Unicode these days

[15:30:15.0000] <dbaron>
even though it didn't at one point

[15:30:17.0000] <Hixie>
well <a href=""> just references the URL standard, which bypasses all of the URI and IRI specs.

[15:30:38.0000] <dbaron>
right... I'm trying to finish a blog post about versioning that I started 7 years ago

[15:30:43.0000] <Hixie>
heh

[15:30:51.0000] <dbaron>
and one of the points I wanted to make about how some of those specs were doing it wrong

[15:31:02.0000] <dbaron>
but I'm having trouble finding evidence for that

[15:31:17.0000] <dbaron>
I think the thing we thought they were doing was wrong, but I'm no longer convinced it's what they say.

[15:31:41.0000] <Hixie>
with <a href=""> we added idn support by first updating all the software, basically. Also, we always accepted IRIs there, in a poorly-defined (until recently) way

[15:31:52.0000] <Hixie>
i dunno what doing it right would really look like for IDN. it's a tough space.

[15:31:59.0000] <Hixie>
there's better examples of "doing it wrong" for this kind of thing.

[15:32:06.0000] <Hixie>
XHTML2, e.g., but also XML 1.1

[15:32:11.0000] <dbaron>
I was going to use XML 1.1

[15:32:31.0000] <Hixie>
also people are always wanting to add versions to their protocols even though you can never really do anything with them

[15:32:39.0000] <dbaron>
though if I could use URI/IRI it would lead to much easier-to-read examples

[15:32:57.0000] <Hixie>
e.g. websocket ended up with some version nonsense

[15:33:03.0000] <Hixie>
despite my best efforts

[15:33:06.0000] <Hixie>
(sigh IETF)

[15:34:28.0000] <Hixie>
URI and IRI had lots of problems, but versioning isn't one of them, i think

[15:34:45.0000] <Hixie>
IDNA vs Unicode is a better example of versioning issues

[15:35:04.0000] <Hixie>
but anne is the one to ask about taht

[15:37:09.0000] <dbaron>
k, thanks for the help


2014-01-08
[16:25:51.0000] <gsnedders>
dbaron: XML 1.0 5th Ed seems an even better example than 1.1, though obvious enough I presume you've already mentioned it :)

[16:26:16.0000] <Hixie>
1.1 is an example of versioning done wrongly, 1.0 e5 is an example of it done right(ish)

[16:26:28.0000] <dbaron>
/me agrees with Hixie there

[16:26:47.0000] <Hixie>
(ish because e.g. it still has a version pseudo-attribute, and still uses the TR/ page model, and...)

[16:34:58.0000] <gsnedders>
But XML 1.0 is still de-facto 4e, with no evidence of that changing.

[16:35:09.0000] <gsnedders>
Given nobody wants to rely on 5e being supported.

[16:40:31.0000] <Hixie>
oh what's teh difference between 4e and 5e?

[17:09:56.0000] <TabAtkins>
annevk-cloud: The way the Encoding Standard uses the term "fallback encoding" and the way you call the algorithm is somewhat confusing.  It would be clearer if there was a hook for "needs a fallback encoding" which tests if the document has a BOM or not, and then the encoding algo calls its argument just "encoding".

[17:10:31.0000] <TabAtkins>
It seems to confuse people a lot if a spec goes through a lot of steps to determine an encoding, makes no mention of BOM, and then at the end BOM gets to override all the work the spec did anyway.

[17:12:02.0000] <TabAtkins>
Oh, hm, here's how I'd like to write it:

[17:13:23.0000] <TabAtkins>
"If the input stream /has a detectable encoding/, let /encoding/ be the result of /detecting the encoding/.  Otherwise, let /encoding/ be ....  /Decode the input stream/ with /encoding/."

[17:13:39.0000] <TabAtkins>
That reads well, but has the exact same effect.

[18:39:16.0000] <MikeSmith>
TabAtkins: what's ICB mean?

[18:50:55.0000] <MikeSmith>
initial containing block

[18:53:11.0000] <Hixie>
yeah

[18:55:51.0000] <MikeSmith>
Hixie: do you know what current CSS spec defines the equivalent of http://www.w3.org/TR/CSS2/visuren.html ?

[18:58:14.0000] <Hixie>
isn't that it?

[18:59:28.0000] <MikeSmith>
Is it? I was thinking their must be some CSS3 version. Or some Level N version, whatever numbering thing they using now

[18:59:39.0000] <Hixie>
dunno, i'm not up to date on css stuff :-(

[18:59:56.0000] <MikeSmith>
OK I'll keep looking

[19:03:13.0000] <MikeSmith>
TabAtkins: btw there's going to be a temporary outage of the http://dev.w3.org/csswg/ tree at some point soon, because that's being written to http://w3c-test.org/csswg/ and I'm going to be shutting down Apache on on port 80 there so we can run the w-p-t python server instead. I'm moving Apache to a different port and will update the rewrite after I do that.

[19:08:36.0000] <MikeSmith>
OK I see from http://dev.w3.org/csswg/cssom-view/ that "Viewport and initial containing block are defined by CSS 2.1."

[19:11:38.0000] <astearns>
MikeSmith: I believe http://dev.w3.org/csswg/css-box/ is the intended update, but it isn't near ready yet

[19:11:59.0000] <MikeSmith>
astearns: OK thanks

[19:32:32.0000] <MikeSmith>
/me files a bug against the CSS 2.1 Rec

[19:32:37.0000] <MikeSmith>
win 17

[19:32:41.0000] <MikeSmith>
oofs

[19:39:59.0000] <MikeSmith>
hah https://twitter.com/JeniT/status/420638634610798592 "Web components + JS undermine the essential important feature of the web, that browser is not the only client" retweeted by "SEO Market Place"

[19:40:05.0000] <MikeSmith>
I love the web

[19:40:45.0000] <MikeSmith>
oops not that one but ""The only people who build for a search engine rather than a browser are spammers."

[19:45:35.0000] <Hixie>
wait what

[19:45:41.0000] <Hixie>
aren't those two mutually exclusive

[19:46:03.0000] <Hixie>
(and both wrong...)

[19:48:57.0000] <MikeSmith>
yeah

[20:56:04.0000] <MikeSmith>
hmm http://html5.org/tools/web-apps-tracker?from=8383&to=8384 validator support

[21:05:43.0000] <MikeSmith>
hsivonen: http://bugzilla.validator.nu/ is still requiring me to log back in on every page load; I have the IP-address checkbox thing unchecked and not getting any kind of error

[21:08:33.0000] <MikeSmith>
hsivonen: hmm it seems it has two Bugzilla_logincookie cookies set and two Bugzilla_login cookies set

[21:08:59.0000] <MikeSmith>
with one of each being what seems to be a stale cookie from a month ago

[21:09:14.0000] <MikeSmith>
/me tries removing the cookies and re-logging-in

[21:12:44.0000] <MikeSmith>
hsivonen: removing the old cookies seems to have fixed it

[21:13:25.0000] <MikeSmith>
Hixie: there's no spec prohibition against a UA storing two cookies with exactly the same name?

[21:16:52.0000] <Hixie>
not my spec, but, i would imagine it's keyed by name?

[21:17:06.0000] <Hixie>
surely if you set a cookie with name X to a value, and it already has one, it just updates the name

[21:17:09.0000] <Hixie>
er

[21:17:09.0000] <Hixie>
updates the value

[21:31:07.0000] <MikeSmith>
Hixie: that's what I would have thought too but Firefox and Chrome are both storing cookies with duplicate names for bugzilla.validator.nu cookies

[21:31:10.0000] <MikeSmith>
https://gist.github.com/sideshowbarker/8284404/raw/93e7508cb1393fee66fb0ed098f8f97b626d6086/vnu-ff.png

[21:31:26.0000] <MikeSmith>
https://gist.github.com/sideshowbarker/8284404/raw/d37f460a2b63057307a1dcbe3c006c7c2bef7b86/vnu.png

[21:31:29.0000] <Hixie>
check the paths

[21:31:35.0000] <MikeSmith>
ah

[21:31:41.0000] <Hixie>
i bet they'll be different

[21:32:30.0000] <MikeSmith>
yeah

[21:32:48.0000] <MikeSmith>
though not the path actually but the domain

[21:32:50.0000] <MikeSmith>
weird

[21:32:58.0000] <Hixie>
huh

[21:33:13.0000] <MikeSmith>
domain is ".bugzilla.validator.nu"

[21:33:28.0000] <MikeSmith>
that is, with a leading dot, for some reason

[21:34:01.0000] <Hixie>
weird

[21:34:04.0000] <Hixie>
sounds like a bug in bugzilla

[21:34:21.0000] <MikeSmith>
yeah must  be

[22:42:12.0000] <hsivonen>
MikeSmith: good that there was a solution to the login problem

[22:42:30.0000] <hsivonen>
(I really should put bugzilla behind https, since it has login...)

[22:44:02.0000] <MikeSmith>
hsivonen: that'd be cool but not a big priority I guess

[01:05:54.0000] <annevk>
I just found out this exists: http://www.youtube.com/watch?v=DNCpBwJOadw

[01:31:55.0000] <annevk>
smola: the host lowercasing thing is interesting

[02:22:17.0000] <annevk>
TabAtkins: it's not really clear to me how your sentence would replace the current wording

[02:22:21.0000] <annevk>
TabAtkins: maybe file a bug?

[02:26:18.0000] <smola>
annevk: yep

[02:26:56.0000] <annevk>
smola: I outlined a strategy in the bug that I think is correct

[02:26:59.0000] <smola>
in my implementation I just added the lowercasing to domainToASCII, but it's quite different since that's private API for me and I'm not concerned with JavaScript API

[02:27:30.0000] <annevk>
smola: yeah, I think it should become a private API in the specification too

[02:27:41.0000] <annevk>
smola: and you only ever get there through the host parser

[02:27:54.0000] <smola>
right

[02:28:03.0000] <smola>
also, I'm not sure ToUnicode needs this

[02:28:33.0000] <annevk>
probably not, I think ToASCII always happens

[02:28:48.0000] <annevk>
because if ToASCII fails there's no host, and ToUnicode cannot fail

[02:29:16.0000] <smola>
that's definitely the case in my implementation

[02:29:34.0000] <annevk>
so yeah, maybe ToASCII is a better place

[02:33:09.0000] <smola>
I have yet to check if there're any strange behaviour with locale-dependent case mappings

[02:35:07.0000] <smola>
these things are well-known to break on conversion to upper case on the Turkish dotted/dotless i, I'll check if the same can happen in to lower case, and what are we supposed to do on IDN using these characters

[02:42:39.0000] <smola>
annevk: hm, an option is to perform the lowercasing *after* the ToASCII

[02:43:13.0000] <annevk>
My idea was to perform ASCII lowercase btw

[02:43:19.0000] <annevk>
which should be saf

[02:43:19.0000] <annevk>
e

[02:43:20.0000] <smola>
ToASCII seems to be lowercasing except when the original string is completely ASCII)

[02:43:59.0000] <annevk>
Yeah, another thing would be to completely inline the IDNA business

[02:44:06.0000] <annevk>
But I don't really like that

[02:44:33.0000] <annevk>
The other thing with space probably requires research as to what ASCII browsers reject there and what they accept

[02:44:52.0000] <annevk>
The host parser could just reject if there's a space, we don't want to reject for _ however

[02:45:45.0000] <smola>
right, _ is actually used; I've spent some time trying to look for a single real use case for a host with a space and I haven't found any so far

[02:47:23.0000] <smola>
btw, how do you these these things on each browser?

[02:48:01.0000] <smola>
do you enter the URL in the address bar? use any JS function?

[02:50:00.0000] <smola>
some kind of automation would allow to use a service like Sauce Labs and test on every browser/version quickly

[02:51:42.0000] <MikeSmith>
smola: about your parser I really like that you already have the mechanism in there for actually reporting the parse errors

[02:52:40.0000] <zcorpan>
smola: https://github.com/w3c/web-platform-tests/tree/master/url

[02:53:10.0000] <MikeSmith>
smola: I hope eventually we can replace the URL checker in the validator.nu backend with your code

[02:55:41.0000] <MikeSmith>
zcorpan: btw about the webkit-dev thread I meant the comments from Antti and a copule others who were critical, and TabAtkins responses

[02:58:04.0000] <zcorpan>
MikeSmith: k

[02:58:35.0000] <zcorpan>
i wonder what the critics think of new picture

[03:00:16.0000] <smola>
zcorpan: thank you :)

[03:00:24.0000] <annevk>
smola: I wrote tests, I also have http://dump.testsuite.org/url/inspect.html

[03:00:42.0000] <annevk>
smola: and I have access to IE, Safari, Chrome, and Firefox

[03:01:29.0000] <smola>
MikeSmith: I still have a lot of work to do on providing meaningful error messages, a lot of them are still just "PARSE ERROR"

[03:01:42.0000] <annevk>
smola: I end up mostly doing adhoc tests and adjusting as I go

[03:02:25.0000] <smola>
MikeSmith: it would be great to see it working on validator.nu, if you have any doubt/request just tell me here/GitHub/santi⊙mi ;)

[03:02:42.0000] <smola>
annevk: alright

[03:06:08.0000] <MikeSmith>
smola: as far as useful error messages for parse errors, looking through how hsivonen handled them for HTML parsing in http://hg.mozilla.org/projects/htmlparser/file/tip/src/nu/validator/htmlparser/impl might provide some inspiration

[03:11:37.0000] <MikeSmith>
smola: http://hg.mozilla.org/projects/htmlparser/file/tip/src/nu/validator/htmlparser/impl/ErrorReportingTokenizer.java mainly

[03:12:07.0000] <smola>
MikeSmith: great, I'll check that

[03:19:48.0000] <MikeSmith>
smola: once you're around to working on the error reporting more I'd be happy to contribute patches if/when you want them

[03:23:38.0000] <annevk>
MikeSmith: are you going to use his parser so Validator.nu validates URLs?

[03:26:16.0000] <smola>
MikeSmith: thanks!

[03:26:53.0000] <MikeSmith>
annevk: yeah that's the plan

[03:27:04.0000] <annevk>
Great!

[03:27:24.0000] <MikeSmith>
annevk: we're already validating URLs but we're using the Jena URI library

[03:28:41.0000] <MikeSmith>
which follows the legacy RFCs but not of course the current URL standard

[03:29:32.0000] <MikeSmith>
the Jena URI code is pretty old (and unmaintained now )

[03:30:34.0000] <MikeSmith>
and to be clear the plan for replacing it depends on hsivonen OKing it

[03:41:35.0000] <smola>
it seems most Java stuff is stuck at RFC 2396

[03:42:04.0000] <smola>
and lacks support for IDN

[03:49:29.0000] <MikeSmith>
yeah

[04:41:15.0000] <zcorpan>
annevk: any conclusion yet about utf-8 vs doc encoding for urls?

[04:43:38.0000] <annevk>
no

[05:35:31.0000] <annevk>
zcorpan: it's not entirely clear to me how to make a good decision here

[05:36:10.0000] <annevk>
zcorpan: I remember last time my final argument was that having to keep the document's encoding around in order how to know how to resolve a URL was bad news

[05:36:44.0000] <annevk>
zcorpan: so I think I would still prefer to use utf-8 whenever possible so having to keep that around is limited to a couple of things in HTML

[05:37:21.0000] <annevk>
zcorpan: e.g. requiring it for EventSource seems painful, as EventSource would otherwise not need it, same for XMLHttpRequest

[05:38:22.0000] <zcorpan>
annevk: but don't you need to keep it around anyway?

[05:38:57.0000] <annevk>
zcorpan: not in e.g. Workers

[05:39:55.0000] <zcorpan>
annevk: right, but outside workers

[05:40:29.0000] <annevk>
zcorpan: so you want to complicate the API implementation because of document environments it might be used in?

[05:40:47.0000] <annevk>
zcorpan: it seems better if the API implementation doesn't need that at all

[05:42:18.0000] <zcorpan>
er, no, i'm just saying that you need to store the document's encoding so it's not a big win that EventSource avoids using it

[05:43:17.0000] <zcorpan>
it's not clear to me that it complicates the impl since browsers seem to have used the document's encoding by accident in some places

[05:44:43.0000] <zcorpan>
as for CSS, it also needs to store its encoding because @import can use it as fallback encoding

[06:11:33.0000] <Ms2ger>
Here it's 2014 and we're still speccing <frame>

[06:11:44.0000] <darobin>
:)

[06:54:44.0000] <zcorpan>
Ms2ger: tests coming up?

[06:54:57.0000] <zcorpan>
for <frame>

[06:55:01.0000] <Ms2ger>
Not from me

[06:55:12.0000] <zcorpan>
aww

[06:55:17.0000] <zcorpan>
poor frame

[06:55:36.0000] <Ms2ger>
Maybe if you come and take my exam tomorrow? :)

[06:56:42.0000] <zcorpan>
i don't think you'd actually want me to

[06:57:19.0000] <Ms2ger>
I'm not sure I'd want myself to either :)

[06:57:22.0000] <Ms2ger>
Anyway

[06:57:25.0000] <Ms2ger>
/me revises

[06:58:26.0000] <ondras>
so, <embed> vs. <object> w.r.t. flash

[06:58:42.0000] <ondras>
what is the recommended way, forgetting IEs and so on?

[06:59:27.0000] <jgraham>
"don't use flash"

[07:02:05.0000] <ondras>
yeah, well, this option is a no-go apparently

[07:02:22.0000] <ondras>
judging from the percentage of my users that do not support a webgl-based solution

[07:12:07.0000] <annevk>
zcorpan: it complicates the impl of EventSource

[07:12:43.0000] <zcorpan>
ondras: do you need fallback content?

[07:12:56.0000] <annevk>
zcorpan: unless you're suggesting the URL parser should hook into some global state to figure out if there's an override encoding in scope...

[07:13:32.0000] <annevk>
which seems like poor design

[07:14:08.0000] <zcorpan>
annevk: yeah i agree that it complicates the impl of EventSource, at least in theory

[07:14:24.0000] <zcorpan>
annevk: but it seems marginal

[07:14:48.0000] <annevk>
it seems better if EventSource works the same across realms

[07:15:06.0000] <annevk>
hah, did you see that? I'm arguing for consistency!

[07:15:14.0000] <ondras>
zcorpan: no

[07:15:26.0000] <ondras>
zcorpan: I actually want to build that DOM via JS (createElement etc)

[07:16:13.0000] <zcorpan>
ondras: do you need it to be secure in case the linked content isn't actually flash?

[07:17:29.0000] <zcorpan>
annevk: yeah so it's either consistent with EventSource in different places or it's consistent with <a href> in the same doc

[07:19:40.0000] <ondras>
zcorpan: no, I host/author that content myself

[07:19:56.0000] <zcorpan>
ondras: then embed is probably simplest and most compatible

[07:20:37.0000] <annevk>
zcorpan: if you have a URL you're going to use for EventSource, it seems better if it's consistent across EventSource

[07:20:47.0000] <ondras>
zcorpan: and some differences beweetn embed and object, so I can see why to pick one and not the other?

[07:20:53.0000] <Ms2ger>
MikeSmith, so, did that monk actually work for MPAA?

[07:21:19.0000] <annevk>
zcorpan: the problem with <a> is that it's not even consistent with <a> in a nested browsing context

[07:23:39.0000] <zcorpan>
ondras: embed doesn't support fallback content, object does. object has an attribute called typemustmatch that protects against attacks where the linked content is of an unexpected type. embed is terser/easier to set params. embed has better interop i think

[07:24:21.0000] <ondras>
okay, thanks a lot!

[07:25:12.0000] <zcorpan>
np

[07:27:09.0000] <zcorpan>
annevk: i don't follow why that is a problem with <a>

[07:27:59.0000] <annevk>
zcorpan: I have a URL, I hand it to Google Maps or some such, and now it's a different URL

[07:28:09.0000] <annevk>
zcorpan: if I'm not careful anyway

[07:30:07.0000] <zcorpan>
annevk: ok, yeah

[07:31:48.0000] <zcorpan>
time for coffee. see you :-)

[07:39:22.0000] <gsnedders>
Is there any actually good list of problems with relying on reference implementations anywhere, or am I going to have to ad lib this?

[07:44:35.0000] <Ms2ger>
Write it, publish it

[07:50:55.0000] <gsnedders>
Is a reference implementation actually more likely to have bugs than a spec?

[07:52:03.0000] <jgraham>
Well usually people don't bother to finish it

[07:52:27.0000] <Ms2ger>
Do people usually finish specs? :)

[07:52:37.0000] <jgraham>
But I would imagine the need to run on a real machine makes bugs more likely

[07:52:39.0000] <Ms2ger>
I know I am bad at that, at least :)

[07:55:34.0000] <gsnedders>
https://gist.github.com/gsnedders/7e85c83e697e81c69432

[07:56:31.0000] <gsnedders>
Comments, suggested other reasons why they suck, all welcome.

[08:00:10.0000] <annevk>
So from my experience reverse engineering features and writing down their details it's awesome to have an implementation

[08:00:23.0000] <annevk>
So I disagree with point 3

[08:00:59.0000] <gsnedders>
Is it better than having a spec with multiple independent impls, though?

[08:01:18.0000] <gsnedders>
And why does that have to be a reference impl?

[08:01:27.0000] <jgraham>
Huh? Given that you have to create an implementation you would rather have an existing implementation than an existing spec (but no implementation)?

[08:02:04.0000] <gsnedders>
I can't even parse what jgraham just said.

[08:02:21.0000] <annevk>
gsnedders: I don't really care about what kind of implementation it is

[08:02:39.0000] <annevk>
gsnedders: html5lib was useful, some people labeled it reference, perhaps incorrectly

[08:02:52.0000] <annevk>
gsnedders: and the more the merrier, of course :-)

[08:02:54.0000] <gsnedders>
annevk: It's not normative in any sense.

[08:03:05.0000] <annevk>
gsnedders: a reference implementation is normative?

[08:03:08.0000] <annevk>
gsnedders: ew

[08:03:17.0000] <annevk>
gsnedders: are there even people arguing in favor of that?

[08:03:22.0000] <gsnedders>
Yes.

[08:03:27.0000] <Ms2ger>
...

[08:03:28.0000] <jgraham>
It was useful, but given we wanted to create it I would have preferred to have the spec than, say, hsivonen's implementation to work from

[08:03:42.0000] <gsnedders>
annevk: I'd consider a "reference implementation" normative by definition.

[08:04:13.0000] <annevk>
I'm just saying I like to have a spec and an impl

[08:04:18.0000] <annevk>
Not either alone

[08:05:23.0000] <gsnedders>
I'm arguing the W3C's requirement of having two independent impls is better than having a single reference impl.

[08:05:38.0000] <Ms2ger>
Yay, someone making arguments for <rtc> on www-style

[08:05:38.0000] <gsnedders>
Essentially.

[08:05:45.0000] <annevk>
The other person in that argument is insane

[08:06:01.0000] <annevk>
"insane" but still

[08:06:06.0000] <Ms2ger>
Eh, so am I, so that doesn't say much ;)

[08:06:22.0000] <annevk>
Ms2ger: why not? ;)

[08:06:22.0000] <gsnedders>
:)

[08:10:55.0000] <darobin>
Ms2ger: where? I'm seeing an argument for <rbc> for not for <rtc>

[08:11:12.0000] <darobin>
no one is adding <rbc> :)

[08:11:59.0000] <Ms2ger>
For double-sided ruby, I think not <rbc>, but <rtc> is necessary, as

[08:12:00.0000] <Ms2ger>
follows.

[08:12:00.0000] <Ms2ger>
<ruby>Base<rtc>text A</rtc><rtc>text B</rtc></ruby>

[08:24:02.0000] <gsnedders>
https://gist.github.com/gsnedders/7e85c83e697e81c69432 — anything else I ought add before publishing it?

[08:48:54.0000] <astearns>
gsnedders: "different implementations likely have to interoperate" is true with a reference implementation as well. What about "each implementation has to match the spec"

[08:54:14.0000] <MikeSmith>
Ms2ger: dunno who that monk worked for. All we did was talk about smoke. I showed him how to make a pipe out of a coke can, which he thought was pretty cool

[08:54:18.0000] <smola>
gsnedders: I would say your second point is equivalent to a ambiguous wording on a spec ;)

[08:54:35.0000] <smola>
(i.e. specs can contain bugs too)

[08:54:54.0000] <gsnedders>
astearns: There is definitely the point that a reference implementation can easily become the only implementation, so they don't necessarily have to interoperate.

[08:55:31.0000] <gsnedders>
smola: Yeah, I was trying to pick something where if it occured in a spec it would just have totally undefined behaviour. Which null pointer dereferences are, really.

[08:55:49.0000] <smola>
gsnedders: fair enough

[08:56:48.0000] <astearns>
gsnedders: even if there's only one implementation, you get better review of that one implementation by expecting it to conform to an external spec

[08:57:04.0000] <gsnedders>
astearns: Yeah, I'm not questioning that

[08:57:15.0000] <gsnedders>
astearns: Just trying to justify the point I was trying to make :)

[09:01:54.0000] <gsnedders>
astearns: Better put now?

[09:02:42.0000] <astearns>
gsnedders: yep

[09:03:27.0000] <gsnedders>
On the other hand, I still feel like the conclusion has the obvious come back of, "but a reference impleemntation defines formally all behaviours, and hence the spec cannot have ambiguity".

[09:07:35.0000] <TabAtkins>
"defines formally all bugs that I wrote because I am a fallible human"

[09:09:14.0000] <gsnedders>
TabAtkins: *rewrites as the generic "author" and steals that*

[09:13:21.0000] <gsnedders>
TabAtkins: Comments on the conclusion now written based on that welcome :)

[09:41:34.0000] <smola>
MikeSmith: there you go: https://github.com/smola/galimatias/commit/6266c09c2ffe2961b4947554f6c38b33dad015ae

[09:41:53.0000] <smola>
everything has an actual meaningful error now

[09:45:38.0000] <MikeSmith>
/me looks

[09:46:13.0000] <MikeSmith>
wow man

[09:46:24.0000] <MikeSmith>
you work fast :-)

[09:46:28.0000] <MikeSmith>
very nice

[09:48:10.0000] <MikeSmith>
smola: I will try to get this integrated in local validator workspace soon, as a replacement for the Jena URI checker we're using now

[09:48:25.0000] <MikeSmith>
*in my local validator workspace

[09:50:35.0000] <smola>
MikeSmith: thanks! please, let me know if I can help

[09:51:20.0000] <smola>
btw, you'll need that latest SNAPSHOT: https://oss.sonatype.org/content/repositories/snapshots/io/mola/galimatias/galimatias/0.0.2-SNAPSHOT/

[10:00:17.0000] <MikeSmith>
smola: OK will do

[10:02:35.0000] <TabAtkins>
gsnedders: I like the conclusion.

[11:15:25.0000] <Hixie>
/me ponders how best to make a list of all events mentioned in the HTML spec

[11:17:49.0000] <jory>
In a similar vein, does anyone have a good technique for registering a simple listener (just a logger) for all possible events?

[11:18:12.0000] <jory>
(i.e. just to get a better sense, while debugging, of the interactions between a series of events)

[11:18:45.0000] <Ms2ger>
No way to do that from a web page

[11:19:33.0000] <Ms2ger>
Fx has an API for chrome scripts iirc

[11:32:33.0000] <jory>
Does anyone know if Mobile Safari fires any particular event when it is changing the zoom level, or if there is a way to force a zoom to happen?

[12:03:18.0000] <TabAtkins>
Hixie: Mark them all up in a Bikeshed/Shepherd-compatible way, and we can auto-gen one for you.

[12:22:21.0000] <Hixie>
TabAtkins: it's the marking them up part that's the part i'm hoping to automagicate

[12:22:30.0000] <Hixie>
TabAtkins: once i have it in a computer-readable form, the rest is easy :-)

[12:22:42.0000] <TabAtkins>
Right, but if you do it *my* way, then it's easy for *me* as well.

[12:22:58.0000] <TabAtkins>
Because I can just say <a event>activate</a> or whatever and it works.

[12:23:13.0000] <Hixie>
i'm not sure we're trying to solve the same problem here

[12:23:24.0000] <Hixie>
the cross-referencing is already all done

[12:23:25.0000] <TabAtkins>
I'm trying to solve a problem vaguely related to yours that helps me more.

[12:23:29.0000] <Hixie>
hehe

[12:23:37.0000] <Hixie>
what's the problem you're trying to solve?

[12:24:00.0000] <Hixie>
/me briefly ponders whether there might be some value in having a single document that documents all the events of the web platform, but puts the bong down just in time

[12:24:18.0000] <TabAtkins>
MOAR LINK TARGETS IN A BIKESHEDDABLE FORM

[12:24:36.0000] <Hixie>
oh so you could cross-reference from CSS to HTML?

[12:24:41.0000] <TabAtkins>
(Which means, mainly, that Shepherd can parse them and know what the definition type is.)

[12:24:47.0000] <TabAtkins>
Bikeshed is for more than CSS!

[12:24:48.0000] <TabAtkins>
But yes.

[12:25:00.0000] <Hixie>
what's the format you need me to expose for that to be easy for you?

[12:25:19.0000] <Hixie>
maybe i can do that at the same time

[12:26:01.0000] <Hixie>
(is there documentation somewhere for bikeshed and shepherd?)

[12:26:04.0000] <Hixie>
(source code would do)

[12:26:36.0000] <Hixie>
/me is considering transitioning away from anolis, but mainly because anolis can't handle 5MB+ docs fast

[12:26:43.0000] <TabAtkins>
Yeah, docs are all at https://github.com/tabatkins/bikeshed

[12:26:54.0000] <TabAtkins>
I don't know if Bikeshed can handle 5MB fast either.  probably not.

[12:27:07.0000] <jory>
TabAtkins: I really like your Github avatar.

[12:27:08.0000] <TabAtkins>
But I'd be willing to try.

[12:27:17.0000] <TabAtkins>
jory: Thanks!  It's from Kate Beaton.

[12:27:18.0000] <Hixie>
(ideally i'd like a platform that's identical to anolis except not based on python or other slow ass interpreted languages...)

[12:27:32.0000] <TabAtkins>
Hixie: Welp, I've got you on the first, but not the second.

[12:27:55.0000] <Hixie>
yeah, wasn't suggesting bikeshed as  solution

[12:28:22.0000] <TabAtkins>
So, to make things Shepherd-friendly, there are a few ways, depending on how explicit/unambiguous you wanna be.

[12:28:30.0000] <Hixie>
really i just need to put my fingers where my mouth is and implement an HTML parser and DOM in some compiled language

[12:28:49.0000] <TabAtkins>
1. Add a data-dfn-type attribute to the <dfn> with one of the definition types: <https://github.com/tabatkins/bikeshed/blob/master/bikeshed/config.py> (the values in the dfnClassToType object).

[12:29:16.0000] <TabAtkins>
2. Make the id start with the dfn class and a dash, from the same link (the keys in the dfnClassToType object).

[12:29:22.0000] <TabAtkins>
3. Give them a class equal to the right dfn class.

[12:29:55.0000] <TabAtkins>
Or, if it's a CSS term, just write in the right way, and Shepherd'll infer things (docs explain the right way).

[12:31:52.0000] <Hixie>
so like <dfn data-dfn-type="event" id="event-load" class="event"><code>load</code></dfn> ?

[12:32:15.0000] <TabAtkins>
id=eventdef-load class=eventdef, but otherwise yes.

[12:32:19.0000] <TabAtkins>
But you only have to do one. ^_^

[12:32:57.0000] <Hixie>
oh those are various options, ok

[12:33:02.0000] <Hixie>
sorry, thought it was a list of steps

[12:33:03.0000] <Hixie>
my bad

[12:33:08.0000] <TabAtkins>
Oh jeez, that would be terrible.

[12:33:12.0000] <Hixie>
yeah :-)

[12:33:25.0000] <TabAtkins>
Nah, it's documentation of all the various ways existing specs we want to parse have done it. ^_^

[12:34:24.0000] <Hixie>
so i expect HTML will use <dfn data-x="event-load"><code>load</code></dfn> or <dfn data-x="event-media-load"><code>load</code></dfn>, where the "media-" part is for grouping related events (e.g. all the media element events), which might duplicate the names of some of the non-grouped events

[12:34:38.0000] <Hixie>
if you want to add support for that

[12:35:03.0000] <TabAtkins>
When you decide on something, tell me and I'll ping plinss.  He's the one running Shepherd.

[12:35:27.0000] <TabAtkins>
So the "media" term is arbitrary?

[12:35:30.0000] <Hixie>
assume i'm going with the above. it's what everything does now.

[12:35:34.0000] <Hixie>
yeah

[12:35:37.0000] <Hixie>
(everything in HTML i mean)

[12:36:55.0000] <Hixie>
looks like there's media, MediaController, input, appcache, socket, and worker

[12:36:56.0000] <Hixie>
currently

[12:37:33.0000] <Hixie>
not planning on adding any soon, but they are arbitrarily added as needed.

[12:37:45.0000] <Hixie>
basically it's just to prevent events in the worker section cross-referencing to events in the media section, etc.

[12:37:51.0000] <TabAtkins>
That's fine, just making sure they weren't a term that needs to be synced up against something else.

[12:38:14.0000] <TabAtkins>
Shepherd's data model supports definitions being "for" other definitions, to avoid collisions.

[12:38:34.0000] <Hixie>
generally i try to use the same term as in data-x="attr-foo-name" and data-x="dom-foo-name", which is the element name for elements, and the interface name (usually) for IDL stuff

[12:39:06.0000] <Hixie>
and concept-foo-name for non-concrete things like algorithms

[12:39:23.0000] <Hixie>
though when i can i just use longer names so i don't have to give a special cross-ref term at all

[12:39:24.0000] <TabAtkins>
Yeah, the shepherd way is <dfn data-dfn-type=attr data-dfn-for=foo>name</dfn>  (or in Bikeshed's shorthand, <dfn attr for=foo>name</dfn>)

[12:39:37.0000] <TabAtkins>
So the relationship is machine-inferrable.

[12:39:44.0000] <Hixie>
right

[12:40:16.0000] <TabAtkins>
The Anolis way of giving everything a globally unique xref name is bad. :/

[12:40:55.0000] <Hixie>
*shrug*

[12:40:58.0000] <Hixie>
it works ok

[12:41:27.0000] <TabAtkins>
Yeah, while you're the only one working on it, or are willing to pull up the document you want to reference regularly to remind yourself of the naming pattern that spec author used.

[12:41:27.0000] <Hixie>
it's acutally helped in a couple of places, by preventing me from naming something in a confusing ambiguous fashion

[12:41:53.0000] <Hixie>
yeah it's terrible for cross-doc stuff

[12:41:55.0000] <Hixie>
notice the lack of any cross-doc stuff in HTML :-(

[12:42:20.0000] <TabAtkins>
Yup, and xdoc was the primary reason I started Bikeshed.

[12:42:35.0000] <Hixie>
though i think the way i would want to do cross-doc references actually would be to just list the term as i use it and the term as the other spec uses it, in a single "dependencies" section

[12:42:44.0000] <Hixie>
the section actually exists in HTML now, just doesn't have the cross-refs

[12:43:03.0000] <Hixie>
but if i added them, it would allow for the preprocessor to automatically map from my terms to the other specs' terms

[12:43:10.0000] <Hixie>
without my having to keep looking up what the conventions were

[12:43:18.0000] <Hixie>
nor having to convert anyone else

[12:43:31.0000] <Ms2ger>
xref works fine in anolis

[12:43:33.0000] <TabAtkins>
Also doable in Bikeshed manually, but you haven't lived until you've written ''foo/auto'' and been auto-linked to the definition of the "auto" keyword for the "foo" property.

[12:43:33.0000] <Hixie>
and it would have the advantage of still being usable in print form

[12:43:45.0000] <TabAtkins>
Or even better, been informed that you typo'd something, because "foo" has no "auto" value.

[12:43:59.0000] <Hixie>
my HTML publishing pipeline catches broken xrefs

[12:44:05.0000] <Hixie>
(i don't always notice, but...)

[12:44:34.0000] <Hixie>
(that's why there's a lot of data-x="" (with no value) -- it's telling my system that this isn't supposed to cross-ref)

[12:45:00.0000] <TabAtkins>
Oh yeah, Anolis tries to cross-ref all inlines or something, right?

[12:45:25.0000] <Hixie>
not all of them, only the ones that make sense

[12:45:36.0000] <Hixie>
anyway. i think i need to pull out all occurences of the string (event-[^"]+), and somehow check if they're in <dfn> or not, and if they are... not sure what

[12:45:52.0000] <Hixie>
maybe just mark those that are, to start with

[12:45:52.0000] <Hixie>
little bit of perl should do nicely

[12:46:37.0000] <TabAtkins>
You crazy.

[13:44:35.0000] <jamesr__>
annevk-cloud: why do you want event timestamps defined in the web perf WG instead of in the dom events spec?

[13:44:37.0000] <jamesr__>
seems kind of crazy

[13:47:16.0000] <annevk>
jamesr__: I think it was some dependency thing

[13:47:31.0000] <jamesr__>
there's a typedef DOMHighResTimestamp, but that just means number in webidl

[13:47:45.0000] <jamesr__>
and the type is in a standalone spec that dom events could easily cite

[13:47:46.0000] <annevk>
doesn't it depend on navigate or fetch or some such?

[13:48:48.0000] <jamesr__>
the IDL is "typedef double DOMHighResTimeStamp;"

[13:49:23.0000] <jamesr__>
the window.performance.now() interface depends on navigation, but you wouldn't need to reference that normatively in dom events

[13:50:09.0000] <jamesr__>
dom events would need to expose an attribute of that type and then describe the timebase in a way that could be implemented to match up with window.performance.now() / webaudio / whatever else is using this clock

[13:51:12.0000] <jamesr__>
webaudio's language is probably too loose but it has the same idea

[14:04:50.0000] <jamesr__>
(i don't really see much value in typedeffing different things to double in WebIDL - the type itself doesn't have any interesting meaning. the value itself does, but the type doesn't help understand the value)

[14:15:47.0000] <Domenic_>
/me shakes fist at WebIDL's number-types clusterfuck

[14:34:40.0000] <annevk>
jamesr__: file a bug?

[14:34:46.0000] <annevk>
jamesr__: can take a look tomorrow

[14:39:05.0000] <jamesr__>
annevk: last thread was http://lists.w3.org/Archives/Public/www-dom/2012OctDec/0028.html

[14:39:41.0000] <smola>
annevk: https://github.com/w3c/web-platform-tests/blob/master/url/urltestdata.txt issues with this should be reported to GitHub Issues or...?

[14:39:58.0000] <annevk>
smola: not sure, ask zcorpan / jgraham

[14:40:12.0000] <smola>
zcorpan: just in time

[14:40:23.0000] <smola>
23:39 < smola> annevk:

[14:40:25.0000] <smola>
https://github.com/w3c/web-platform-tests/blob/master/url/urltestdata.txt issues with this should be reported to GitHub Issues or...?

[15:25:46.0000] <Hixie>
what spec is going to define 'scroll' and 'resize' events?

[15:55:04.0000] <Hixie>
behold: http://www.whatwg.org/specs/web-apps/current-work/#events-0


2014-01-09
[16:02:27.0000] <hober>
alphabetical except for DOMContentLoaded?

[16:02:48.0000] <annevk>
smola: sorry it's all a bit slow, I'm in the midst of meetings (and should really be asleep now)

[16:03:18.0000] <annevk>
Hixie: cssom-view should prolly define scroll, dunno about resize

[16:03:35.0000] <Hixie>
html now says "some spec one day will" or something

[16:03:47.0000] <annevk>
Hixie: CSS in general really ought to own the whole scrolling concept

[16:03:49.0000] <jwalden>
hmm; http://www.w3.org/ "Learn how to program Web applications with W3C&#8217;s Mobile Web 2 online course"

[16:04:47.0000] <Hixie>
annevk: i'd hope

[18:11:59.0000] <MikeSmith>
Hixie: yay for http://www.whatwg.org/specs/web-apps/current-work/#events-0

[18:15:46.0000] <MikeSmith>
Hixie: hmm how come it's not in the multipage version? just didn't regenerate it yet?

[23:24:45.0000] <zcorpan>
Hixie: http://dev.w3.org/csswg/cssom-view/#events

[23:25:22.0000] <zcorpan>
smola: ?

[23:26:04.0000] <smola>
zcorpan: morning; I just wondered where should I report problems with web-platforms-tests

[23:26:11.0000] <smola>
GitHub Issues or somewhere else

[23:26:25.0000] <Hixie>
zcorpan: excellent, cool

[23:26:27.0000] <Hixie>
MikeSmith: done

[23:26:32.0000] <Hixie>
MikeSmith: dunno why it didn't take before

[23:26:52.0000] <MikeSmith>
thanks

[23:27:00.0000] <zcorpan>
smola: github issues

[23:27:13.0000] <smola>
zcorpan: alright, thanks

[23:29:48.0000] <zcorpan>
Hixie: help http://lists.w3.org/Archives/Public/public-web-perf/2014Jan/0014.html

[23:31:26.0000] <Hixie>
i'm too tired to work out the answer. ask me again tomorrow? :-)

[23:31:42.0000] <Hixie>
or copy some place in HTML that does it already... :-)

[23:32:45.0000] <zcorpan>
ok

[23:42:21.0000] <zcorpan>
i think we want incumbent-settings-object although that's different from xhr

[00:30:58.0000] <annevk-cloud>
New APIs should not copy from XHR

[00:32:40.0000] <darobin>
it would be fun

[00:34:13.0000] <darobin>
element.onmousestatechange = function () { if (element.mouseState !== 17) return; ... }

[00:34:58.0000] <darobin>
actually, that'd make for a nice April Fool's spec

[01:57:49.0000] <zcorpan>
annevk-cloud: you may want to review the Beacon spec, i think it has copied much of its stuff from xhr

[03:04:15.0000] <jgraham>
Wow, even the innerHTML getter seems to be full of interop fail

[03:22:17.0000] <annevk>
Reliable way to find out about why a feature could not be implemented. Search for the feature and "Boris Zbarsky"

[03:22:58.0000] <annevk>
jamesr__: so that email is about Event.systemTime

[03:23:14.0000] <annevk>
jamesr__: if you are just talking about the typedef, I think that could be directly in IDL

[03:23:21.0000] <annevk>
jamesr__: DOMTimeStamp is defined there too

[03:35:13.0000] <jgraham>
annevk: heh

[03:55:29.0000] <SimonSapin>
darobin: careful of Poe's law…

[04:02:27.0000] <darobin>
SimonSapin: Poe's law is part of what makes it fun :)

[05:25:11.0000] <Ms2ger>
jgraham, fun

[05:25:56.0000] <Ms2ger>
darobin, you realize that the CSSWG decided to reference an April Fools RFC?

[05:26:31.0000] <darobin>
Ms2ger: I know, RFC 6919

[05:26:48.0000] <darobin>
honestly, I don't understand why referencing that isn't a requirement for all documents

[06:04:07.0000] <SimonSapin>
april fools or not, the definition of "may wish to" is perfect for this case

[08:06:48.0000] <Hixie>
SimonSapin: we shouldn't be publishing specs that contain "behaviour which is regarded as ridiculous", and we certainly shouldn't be making compromises to expedite going through W3C process. Though I understand that that is a liability of working with the w3c.

[08:09:47.0000] <SimonSapin>
Hixie: this was not about W3C process, it was about two working group members that could not agree after endless discussion on a topic that is so minor that is was judged not worth blocking the rest of the spec.

[08:10:16.0000] <SimonSapin>
IIRC it only affects a handful of code points, and only with broken fonts

[08:10:58.0000] <jgraham>
There are non-W3C processes where two members couldn't hold the group hostage like that

[08:11:16.0000] <jgraham>
e.g. anything that is not consensus based

[08:11:44.0000] <Hixie>
that couldn't happen in the whatwg. the editor gets final say on what the spec says.

[08:11:44.0000] <Hixie>
it's only because of the w3c's unhealthy obsession with "consensus" that it could happen

[08:11:44.0000] <Hixie>
what jgraham said.

[08:12:45.0000] <SimonSapin>
well, the two in this case are co-editors

[08:13:12.0000] <Hixie>
ah, well. there are whatwg specs with co-editors. but i think that's a mistake.

[09:25:09.0000] <tantek>
/me dials into HTMLWG telcon, hears discussion of longdesc. What year is it?

[09:25:53.0000] <Ms2ger>
You're dialing into an HTMLWG telcon

[09:25:54.0000] <Ms2ger>
2001?

[09:27:36.0000] <annevk-cloud>
Sounds like someone is looking for a support forum

[09:36:18.0000] <Domenic_>
where should i direct web developers asking for background on "what is this DRM hubbub with the w3c"

[09:36:41.0000] <Ms2ger>
/me sticks his head in the sand

[09:36:46.0000] <Domenic_>
all i can think of is a few brendan eich posts which IIRC kind of assume you know what's going on already

[09:38:02.0000] <tantek>
Domenic_ - you could direct them to W3C blog posts on the subject

[09:42:11.0000] <MikeSmith>
Domenic_: http://longtermlaziness.wordpress.com/2013/10/08/the-w3c-is-a-restaurant/

[09:47:18.0000] <tantek>
good post MikeSmith

[09:49:55.0000] <MikeSmith>
tantek: thanks I paid David Bruant to write it and then he still managed to only get 80% of it right

[09:50:04.0000] <MikeSmith>
but I think I got good value for my money

[09:50:15.0000] <tantek>
it's a decent analogy

[09:53:25.0000] <Hixie>
it's a decent analogy except many restaurants would correctly turn away someone who came in waving a confederate flag or wearing a KKK hat

[09:54:42.0000] <Ms2ger>
Which reminds me that I noticed this morning that my university buys boxes of white chalk with "K" all along the outside

[09:54:56.0000] <Ms2ger>
And they are just wide enough to put three K's side by side

[10:04:35.0000] <jgraham>
It's a terrible analogy

[10:04:37.0000] <MikeSmith>
Ms2ger: don't bring that box into the restaurant that Hixie mentions. They might misunderstand. Especially if you stand on the box and wave your confederate flag.

[10:04:44.0000] <jgraham>
Argument by naology generally is

[10:04:48.0000] <jgraham>
*analogy

[10:04:59.0000] <Ms2ger>
MikeSmith, or they might laugh at me. It's not a large box :)

[10:05:42.0000] <jgraham>
At a resturant the resturant is in full control over the food + etc. The W3C isn't like that at all

[10:07:07.0000] <MikeSmith>
jgraham: put your money where your mouth is and pay David to write your side of the story

[10:08:07.0000] <jgraham>
Personally I see the W3C as like a standards organisation. One that has hired a lot of people who want to keep their jobs and so is likely to take decisions that will maintain its sources of income.

[10:09:12.0000] <MikeSmith>
well that sounds pretty unique

[10:09:12.0000] <MikeSmith>
there aren't much organizations like that

[10:09:21.0000] <MikeSmith>
sounds pretty crazy

[10:09:57.0000] <Ms2ger>
Do you like your job? ;)

[10:10:38.0000] <MikeSmith>
you want me to answer that question honestly?

[10:10:46.0000] <MikeSmith>
wait

[10:10:58.0000] <MikeSmith>
remind me what's my job

[10:11:44.0000] <Ms2ger>
Talking to monks

[10:11:47.0000] <jgraham>
MikeSmith: Fortunately the preponderance of other organisations that work in similar ways — not all of them standards organisations, even! — makes it easy to understand the W3C by comparison to the behaviour of those other organisations with which we are more familiar in my model. No such thing can be said of the "resturant" model.

[10:13:23.0000] <MikeSmith>
but I like David's restaurant

[10:13:34.0000] <MikeSmith>
you're right that all analogies suck

[10:13:44.0000] <MikeSmith>
some just suck less than others

[10:14:41.0000] <astearns>
a restaurant is not a for-profit organization?

[10:15:18.0000] <astearns>
arguments by analogy devolve pretty quickly to arguments over the analogy

[10:15:55.0000] <MikeSmith>
astearns: that's a feature

[10:17:31.0000] <MikeSmith>
jgraham: it's sometimes hard to find anybody who's made a point reasonably well who's not resorted to using an analogy

[10:18:13.0000] <SteveF>
MikeSmith: "remind me what's my job" MPAA fluffer

[10:21:30.0000] <jgraham>
MikeSmith: I dunno, it's usually just a case of waiting for hsivonen

[10:24:56.0000] <MikeSmith>
jgraham: oh but as I recall hsivonen recently got accused of using a bad analogy

[10:25:40.0000] <MikeSmith>
"emotive" even

[10:26:02.0000] <smola>
I feel like some cases in URL parsing in browsers were implemented just as an amusement...

[10:26:21.0000] <jgraham>
MikeSmith: Hmm, point

[10:26:36.0000] <jgraham>
I had forgotten that. Too much ice cream I guess.

[10:26:56.0000] <smola>
%ef%bc%85%ef%bc%94%ef%bc%91.com -> \uff05\uff14\uff11.com (%41 in full-width characters) -> %41.com -> a.com

[10:26:59.0000] <Domenic_>
annevk-cloud: is Mozilla at least implementing the URL spec's parsing algorithm?

[10:32:15.0000] <MikeSmith>
SteveF: applied for that job but was told another prominent WG member had already taken it. so oh well

[10:33:17.0000] <MikeSmith>
Ms2ger: btw I think that guy wasn't really a monk. Look at his shoes.

[10:34:37.0000] <MikeSmith>
/me goes back to fiddling with the w3c-test.org server to make CSS WG drafts disappear

[10:36:26.0000] <Hixie>
oh, bummer

[10:36:34.0000] <Hixie>
SimonSapin's bug about charset="" is next on my list

[10:36:40.0000] <Hixie>
quick, someone give me an excuse to do something else

[10:38:19.0000] <SimonSapin>
smola: amazing. Does it work across browsers?

[10:38:41.0000] <Hixie>
i guess i should jsut do all the CSSOM bugs at once

[10:38:50.0000] <smola>
SimonSapin: yes it does

[10:38:59.0000] <smola>
SimonSapin: Chrome and Firefox at least

[10:39:13.0000] <SimonSapin>
annevk-cloud: I don’t know if that’s in the URL spec ^

[10:39:20.0000] <SimonSapin>
not sure it should, either

[10:39:38.0000] <smola>
it isn't, I'm reporting it

[10:41:08.0000] <smola>
%ef%bc%85%ef%bc%94%ef%bc%91.com is even weirder

[10:41:16.0000] <smola>
SimonSapin: well, I can hardly imagine how can you get \uff05\uff14\uff11.com (manually entering %41.com instead of a.com in a CJK system)... but the second case,

[10:41:25.0000] <smola>
(swap the order of these sentences :p)

[10:42:12.0000] <smola>
I wonder if browsers work on any number of iterations of this encoding

[10:43:02.0000] <smola>
nope, if you repeat the process they do not work

[10:54:38.0000] <smaug____>
annevk-cloud: ping

[10:56:26.0000] <annevk-cloud>
Not today, sorry

[11:05:32.0000] <Hixie>
SimonSapin: ping https://www.w3.org/Bugs/Public/show_bug.cgi?id=24205 -- are we talking at cross-purposes? I don't understand your last comment.

[11:07:36.0000] <SimonSapin>
Hixie: as I understand the algorithm in the current spec, <meta http-equiv="Content-Language" content="fr and some random stuff"> will set the language to "fr"

[11:07:43.0000] <Hixie>
right

[11:07:46.0000] <Hixie>
that is as intended

[11:07:50.0000] <Hixie>
why would we not want that?

[11:08:46.0000] <SimonSapin>
I’d rather have it not set the language, like when there is a comma

[11:08:53.0000] <SimonSapin>
and I think browsers do that

[11:09:37.0000] <Hixie>
browsers seem to set it to the whole string

[11:09:44.0000] <Hixie>
as in "fr and some random stuff"

[11:10:41.0000] <Hixie>
the reason for aborting when there's a comma is that if there's a comma, it indicates the pragma is being used in some way like the HTTP header, and not like the pragma, and therefore doing anything with it is going to be bogus.

[11:11:39.0000] <SimonSapin>
ok, I got my testing wrong

[11:11:48.0000] <SimonSapin>
Chrome uses the whole thing, but not firefox

[11:13:04.0000] <SimonSapin>
well if that’s intentional, ok

[11:13:55.0000] <Hixie>
i can't tell if firefox is using content-language at all

[11:14:13.0000] <SimonSapin>
yes data:text/html,<meta http-equiv="content-language" content="fr"><style>body:lang(fr){background:green

[11:15:40.0000] <SimonSapin>
Hixie: I’m happy with just adding a note "Ignore the rest of the string" to show that this is intentional

[11:16:07.0000] <Hixie>
ah, typo in my test

[11:16:07.0000] <Hixie>
looks like firefox is setting the language to _seomthing_ when you have a bogus content-language

[11:16:07.0000] <Hixie>
but i can't work out what

[11:16:08.0000] <Hixie>
it's not "und", it's not leaving it set to the previous value

[11:16:12.0000] <SimonSapin>
"Ignore the rest of <var>input</var>"

[11:16:20.0000] <Hixie>
maybe "" but :lang() can't match that?

[11:16:20.0000] <Hixie>
k

[11:16:36.0000] <SimonSapin>
no, :lang() only takes idents, not strings

[11:16:41.0000] <gsnedders>
SimonSapin: As I just wrote on GitHub, uh, yeah, firstChunk is going to be horrible.

[11:17:05.0000] <gsnedders>
SimonSapin: Maybe we should just go for special-casing every single thing that's broken :(

[11:17:37.0000] <Hixie>
SimonSapin: right, but i'm trying to figure out how we could determine what the language was otherwise

[11:17:46.0000] <gsnedders>
SimonSapin: Could try avoid reading at all by doing isinstance(source, io.TextIO)/etc.

[11:17:48.0000] <Hixie>
not that it really matters

[11:17:54.0000] <Hixie>
but i presume it's internally the empty string

[11:18:01.0000] <gsnedders>
SimonSapin: But that doesn't work in general. But at least avoids hitting 200007 in Python 3.

[11:18:30.0000] <SimonSapin>
gsnedders: hum, do we really care about unicode streams? :)

[11:19:12.0000] <gsnedders>
SimonSapin: Yes. Consider TEXT fields in a database, for example.

[11:21:05.0000] <gsnedders>
SimonSapin: (Avoids hitting 200007 with urllib.response.HTTPResponse in Python 3, that is.)

[11:23:43.0000] <Hixie>
"When a ProcessingInstruction node node is inserted to a document, removed from a document, becomes part of the prolog, is no longer part of the prolog, ..."

[11:23:52.0000] <Hixie>
don't the first two there subsume the last two entirely?

[11:28:36.0000] <Ms2ger>
Hixie, can it become part of the prolog by removing a node from before it?

[11:59:37.0000] <Hixie>
Ms2ger: i guess you could remove the root element?

[11:59:49.0000] <Hixie>
Ms2ger: but it'd still be part of the document...

[12:00:07.0000] <Ms2ger>
I dunno, what's the prolog? :)

[12:00:25.0000] <Ms2ger>
Except a sucky programming language

[12:02:25.0000] <jarek>
are there any plans to have standarized UI guidelines?

[12:02:44.0000] <jarek>
I mean something more advanced than CSS3 UI spec

[12:03:53.0000] <Ms2ger>
In general, browsers compete on UI

[12:04:06.0000] <jarek>
e.g. something akin to Human Interface Guidelines

[12:04:20.0000] <jarek>
by Apple

[12:05:21.0000] <jarek>
yeah, Mozilla works on pseudo-standard components in form of x-tags

[12:05:47.0000] <jarek>
and Google works on Polymer widgets

[12:06:14.0000] <jory>
Is there a spec re: viewport meta tag behaviour, or is it still just something that everyone kind of has implemented the same way?

[12:06:37.0000] <Ms2ger>
There's something in css

[12:07:16.0000] <Ms2ger>
http://dev.w3.org/csswg/css-device-adapt/

[12:09:51.0000] <jory>
Thanks Ms2ger

[12:12:29.0000] <jory>
One thing that I don't think is covered is the behaviour of the browser when the tag is added after the document has loaded.

[12:13:32.0000] <Ms2ger>
Quite possible

[12:13:58.0000] <jory>
Such edge cases. Many behaviours.

[12:14:59.0000] <Ms2ger>
Wow?

[12:15:16.0000] <jory>
Quite wow.

[12:15:22.0000] <jory>
heh

[13:37:56.0000] <zcorpan>
https://www.w3.org/Bugs/Public/show_bug.cgi?id=24257 is crazy

[13:52:31.0000] <zcorpan>
Hixie: being part of the document isn't enough to make xml-stylesheet "work". it needs to be in the prolog. hence the need to run the steps again if the root element is moved

[13:53:29.0000] <Hixie>
the steps run regardless of whether it's in the prolog

[13:54:36.0000] <Hixie>
and the steps don't mention the prolog

[13:54:36.0000] <Hixie>
(i filed a bug on this btw)

[13:55:23.0000] <zcorpan>
Hixie: it's mentioned in the xml-stylesheet spec

[13:56:19.0000] <Hixie>
xml-ss overrides cssom somehow?

[13:56:26.0000] <zcorpan>
no

[13:56:36.0000] <zcorpan>
cssom says "If node is not an xml-stylesheet processing instruction, terminate these steps."

[13:56:45.0000] <zcorpan>
-> http://www.w3.org/TR/xml-stylesheet/#dt-xml-stylesheet

[13:57:04.0000] <zcorpan>
-> http://www.w3.org/TR/xml-stylesheet/#dt-potential-xml-stylesheet

[13:57:34.0000] <zcorpan>
apologize for the infoset gibberish, but it's there

[13:58:03.0000] <zcorpan>
<root/><?xml-stylesheet?> isn't an "xml-stylesheet processing instruction"

[13:58:05.0000] <Ms2ger>
Sounds like we need an xmlss.spec.whatwg.org ;)

[13:59:33.0000] <zcorpan>
it would have been less painful than doing it in the xml core wg

[14:18:38.0000] <Hixie>
zcorpan: oh. then why the bit about the document?

[14:20:48.0000] <zcorpan>
Hixie: hmm. maybe it's not necessary

[14:22:53.0000] <Ms2ger>
/me wonders if jgraham feels like making a graph of the number of open w-p-t reviews

[14:26:19.0000] <zcorpan>
if i remove that, i can also remove the "part of the doctype" check (i guess it was no-op already since dom doesn't support that)

[14:34:36.0000] <zcorpan>
hmm. dvcs down :-(

[14:34:55.0000] <zcorpan>
/me tries again tomorrow

[14:40:52.0000] <Ms2ger>
MikeSmith, ^

[14:51:25.0000] <Hixie>
zcorpan: do we really want to refetch <link rel=stylesheet> if type="text/css" is added or removed?

[14:51:31.0000] <Hixie>
(given that the default is text/css?)

[14:51:52.0000] <Hixie>
also, are you handling _all_ rel=stylesheet links? including e.g. xslt?

[14:52:02.0000] <Hixie>
or should i only send you type=text/css ones?

[14:53:58.0000] <zcorpan>
Hixie: re first question, maybe not

[14:54:29.0000] <zcorpan>
Hixie: cssom only handles css. though xslt doesn't work with <link>

[14:54:48.0000] <Hixie>
i'm pretending that there might be some other style sheet language some day

[14:55:14.0000] <Ms2ger>
Why?

[14:55:19.0000] <Hixie>
i'll only send you the stuff if it's text/css. that means i'll keep the quirk, btw.

[14:55:25.0000] <Hixie>
why what?

[14:56:40.0000] <zcorpan>
why do you need to keep the quirk?

[14:57:31.0000] <Ms2ger>
<Hixie> i'm pretending that there might be some other style sheet language some day

[14:57:48.0000] <Hixie>
zcorpan: because i can't send it to you until i know it's css, and i don't know it's css until i've applied the quirk

[14:57:57.0000] <Hixie>
Ms2ger: seems like the responsible thing to do

[14:58:34.0000] <zcorpan>
Hixie: ok

[15:02:51.0000] <zcorpan>
Hixie: bedtime for me, but feel free to dump questions here, i'll check tomorrow

[15:03:32.0000] <Hixie>
zcorpan: roger

[15:03:35.0000] <Hixie>
zcorpan: nn

[15:03:45.0000] <zcorpan>
night

[15:16:21.0000] <Hixie>
is there a "destroy a css style sheet"? hmm...


2014-01-10
[16:59:01.0000] <wirepair>
hsivonen : you about?

[20:17:16.0000] <falken>
Hixie: if possible, could you see https://www.w3.org/Bugs/Public/show_bug.cgi?id=20418 (related to the objections about <dialog> being magical)

[22:07:18.0000] <Hixie>
falken: yeah, saw that one earlier. wasn't sure what the implications were.

[22:07:56.0000] <Hixie>
falken: treating modal and non-modal dialogs the same doesn't seem like an obviously right thing to do

[22:09:16.0000] <Hixie>
falken: (abs pos on the "top" layer should hopefully work via nesting? not sure exactly.)

[22:13:10.0000] <falken>
Hixie: not sure what you mean by working via nesting. if it's in the top layer, abs pos will just work because cb is ICB

[22:14:03.0000] <Hixie>
i mean abs posed boxes in the boxes that are themeselves in the top layer

[22:14:19.0000] <Hixie>
(isn't z-index independent of containing block?)

[22:14:39.0000] <Hixie>
(i though z-index only depended on stacking contexts)

[22:15:39.0000] <falken>
right i think in theory z-index only depends on stacking context, but in practice we contruct the layers by traversing the render tree, and the easiest way to make something's cb the icb is by moving its renderer to be a child of the root

[22:18:50.0000] <falken>
I'm not sure what you mean though. Abs pos box of a box in the top layer just works. But if the abs pos box itself is in the top layer, it will be positioned relative to ICB, regardless of whether it's a child of something in the top layer

[22:29:19.0000] <MikeSmith>
hey good afternoon falken

[22:29:31.0000] <falken>
hi MikeSmith

[22:31:49.0000] <MikeSmith>
falken: I know you are busy with <dialog> at the moment but I wanted to ask you if you been thinking about Streams, or following the discussions about it

[22:32:54.0000] <falken>
MikeSmith: not so much... what's up?

[22:35:32.0000] <tyoshino_>
MikeSmith: hi Mike

[22:35:40.0000] <MikeSmith>
hey hey tyoshino_

[22:35:50.0000] <MikeSmith>
didn't know you were on here

[22:36:17.0000] <tyoshino_>
sorry. i wasn't watching

[22:36:39.0000] <tyoshino_>
Streams API?

[22:37:13.0000] <MikeSmith>
falken: we have a bit of a split between tyoshino_ Streams API draft and one the Domenic_ is working on

[22:37:54.0000] <MikeSmith>
so tyoshino_ it would be nice if we can try to get agreement on a unified spec this month or next, say

[22:38:44.0000] <tyoshino_>
yes. we're also talking with Marcos of Mozilla about that

[22:38:55.0000] <MikeSmith>
cool

[22:39:13.0000] <MikeSmith>
woudl be great to chat with Domenic_ directly too

[22:39:30.0000] <MikeSmith>
here's on this channel most every day at US time

[22:39:55.0000] <MikeSmith>
tyoshino_: you planning a visit to US any time soon?

[22:40:23.0000] <tyoshino_>
yeah. i had some chat with him and smurg regarding Promise vs. event in December

[22:41:18.0000] <tyoshino_>
no for now. but i can be online in US day time if needed

[22:43:37.0000] <Hixie>
falken: i guess i just don't understand the problem you're trying to solve in the bug in sufficient detail.

[22:43:48.0000] <Hixie>
falken: gotta go to bed though, and i'm ~afk until monday.

[22:44:18.0000] <falken>
Hixie: OK thanks I'll try to add more detail in the meantime

[22:51:03.0000] <MikeSmith>
tyoshino_: maybe you could stay on some evening and ping Domenic_ to chat here real time

[22:51:35.0000] <MikeSmith>
tyoshino_: alternatively, start a discussion on the whatwg list or public-webapps

[22:51:45.0000] <MikeSmith>
discussion about resolving the spec difference

[22:51:50.0000] <MikeSmith>
*differences

[22:53:31.0000] <tyoshino_>
thanks for suggestions. we've already asked Marcos for arrangement of such a place. so, i'd like to wait for his response first.

[23:00:25.0000] <MikeSmith>
tyoshino_: sounds good

[00:27:30.0000] <hsivonen>
wirepair: pong

[00:29:27.0000] <hsivonen>
MikeSmith: what's my bad analogy? The software patents one? That TimBL countered with the ice cream truck analogy?

[00:30:08.0000] <wirepair>
hey hsivonen

[00:30:27.0000] <wirepair>
so i want to use your html5 parser to basically hook each tokenizer/location transition

[00:30:33.0000] <wirepair>
was wondering if there were any examples anywhere

[00:32:04.0000] <MikeSmith>
hsivonen: yeah, it was your software-patents analogy (which to be clear I didn't think was a bad analogy at all)

[00:32:22.0000] <hsivonen>
wirepair: there might be a Java example in NetBeans, but I haven't looked

[00:32:37.0000] <hsivonen>
wirepair: there's a C++ example in Gecko's View Source highlighting

[00:33:24.0000] <wirepair>
hmm, any hints as to which objects i should be looking at?

[00:34:35.0000] <wirepair>
or if you can point me to the C++ example i might be able to figure it out

[00:35:06.0000] <hsivonen>
wirepair: in Java, TransitionHandler and ErrorReportingTokenizer

[00:36:03.0000] <hsivonen>
wirepair: in C++, follow identifiers from https://mxr.mozilla.org/mozilla-central/source/parser/html/nsHtml5Highlighter.cpp to the tokenizer

[00:37:01.0000] <wirepair>
ok cool, i'll try to figure it out

[00:37:02.0000] <wirepair>
thanks!

[00:42:25.0000] <hsivonen>
hmm. http://krijnhoetmer.nl/irc-logs/whatwg/20140109 shows more context than /lastlog. I should read the full log instead of my /lastlog

[00:43:23.0000] <hsivonen>
Domenic_: is https://hsivonen.fi/eme/ at all like what you are looking for?

[00:46:35.0000] <hsivonen>
/me wonders if anyone has registered domain names with Hong Kong-only ideographs in them and how those domain names are working out in terms of users finding the sites

[01:00:12.0000] <MikeSmith>
hsivonen: hmm yeah people should read that writeup about EME

[01:06:33.0000] <hsivonen>
/me sees a TAG thread about a new HTTP response code without any of the reformers posting to the thread

[01:06:43.0000] <hsivonen>
I don't understand the use case for the new code

[01:13:38.0000] <zcorpan_>
who needs use cases

[01:17:50.0000] <zcorpan_>
hsivonen: sounds like it's a redirect but without another RTT

[01:24:58.0000] <hsivonen>
who is "dka" and who is "twirl" in TAG minutes?

[01:25:19.0000] <hsivonen>
Is dka Daniel K. Appelquist?

[01:25:47.0000] <hsivonen>
is twirl Sergey?

[01:35:53.0000] <MikeSmith>
dka ia Dan

[01:36:05.0000] <MikeSmith>
I don't know who twirl is

[01:49:45.0000] <hsivonen>
zcorpan_: it seems to me the motivating use case for the new response code has more to do with SemWeb than with avoiding one RTT

[01:50:36.0000] <hsivonen>
/me decides not to care about the new response code

[01:54:08.0000] <hsivonen>
/me sees SPARQL mentioned in the TAG Push API discussion. Uh oh.

[02:30:15.0000] <darobin>
annevk: so, got drunk all night to celebrate your liberation?

[02:30:43.0000] <annevk>
darobin: three more weeks no?

[02:30:55.0000] <annevk>
darobin: also, I kind of agreed to come one last time in April

[02:30:55.0000] <darobin>
oh, you're probably right

[02:31:03.0000] <darobin>
that's outrageous

[02:31:10.0000] <darobin>
/me starts a FREE ANNE campaign

[02:31:22.0000] <hsivonen>
darobin: how's your freedom at the HTML WG?

[02:31:43.0000] <darobin>
hsivonen: once a week MikeSmith brings me a nice sandwich down in the mines

[02:31:56.0000] <annevk>
But after that I'll have at least a month worth of extra time each year, which seems pretty good.

[02:32:28.0000] <annevk>
Haha, shit would fall apart if not for MikeSmith

[02:32:35.0000] <hsivonen>
how to get an extra month each year: run for the TAG, get elected, don't run again

[02:32:35.0000] <darobin>
I certainly would

[02:32:55.0000] <annevk>
hsivonen: are you trying to get quoted by @w3cmemes?

[02:33:14.0000] <darobin>
MikeSmith is the Care Bear from the Pit of Despair

[02:33:38.0000] <hsivonen>
annevk: not particularly

[02:36:06.0000] <hsivonen>
/me is still trying to form an opinion on whether to implement the Encoding Standard for GB18030 in Gecko or to get cold feet and suggest retaining gbk as a distinct encoding in order to submit NCRs as before

[02:55:24.0000] <annevk>
hsivonen: the question is what kind of gbk would you implement, would you have it be a different two-byte table from gb18030?

[02:55:52.0000] <annevk>
hsivonen: that would simplify the least

[03:04:34.0000] <Ms2ger>
hsivonen, hmm, clearly I should run for the TAG, then...

[03:22:00.0000] <darobin>
Ms2ger: I reckon you're more the AB type

[03:22:07.0000] <gsnedders>
SimonSapin: Seems I don't know how function comparison works :)

[03:22:23.0000] <darobin>
there's an election later this year, I'll start rallying around your candidacy

[03:22:56.0000] <SimonSapin>
gsnedders: it’s not about comparaison, it’s that instance.method is a wrapper (bound method) over class.method, in order to add the "self" parameter

[03:23:01.0000] <SimonSapin>
so it’s not the same object

[03:23:33.0000] <gsnedders>
SimonSapin: Oh, right

[03:25:57.0000] <SimonSapin>
(see "descriptors" for how this all works)

[03:46:04.0000] <smola>
annevk: sorry for the bug-noise

[03:46:09.0000] <annevk>
no worries

[03:47:05.0000] <annevk>
the review is great

[04:59:44.0000] <smaug____>
is DOMStringList deprecated

[05:00:42.0000] <smaug____>
DOM3 has it

[05:00:54.0000] <smaug____>
but DOM doesn't say anything about it

[05:03:08.0000] <annevk>
yes we killed it

[05:03:24.0000] <annevk>
I guess I should put it on the obsolete list indeed

[05:03:28.0000] <annevk>
forgot to do that I think

[05:04:13.0000] <smaug____>
annevk: IDB still refers to DOMStringList

[05:05:12.0000] <smaug____>
annevk: what should be used in APIs there days then?

[05:05:51.0000] <annevk>
smaug____: https://github.com/whatwg/dom/commit/8f73159d4a9e2e1a002f4eb1dfd4df3f645e9575

[05:06:09.0000] <annevk>
An Array

[05:06:14.0000] <smaug____>
/me tries to recall what was decided about [] and sequence

[05:06:28.0000] <smaug____>
annevk: DOMString[] ?

[05:07:33.0000] <annevk>
smaug____: well, as bz will tell you we're not quite clear [] is the right thing

[05:07:56.0000] <smaug____>
I thought that got resolved

[05:08:19.0000] <annevk>
I think there are some proposals, not sure if anything stuck yet

[05:08:40.0000] <smaug____>
https://bugzilla.mozilla.org/show_bug.cgi?id=942631

[05:12:25.0000] <annevk>
cool

[05:19:37.0000] <hsivonen>
annevk: is the Encoding Standard already compatible with the HK govt standard?

[05:20:16.0000] <hsivonen>
/me was too lazy to compare the Encoding Standard with the HK govt character list

[05:20:18.0000] <annevk>
hsivonen: I'd have to check; foolip did most of the work on big5

[05:20:45.0000] <annevk>
hsivonen: I can go through that bug in an hour or so

[05:20:58.0000] <hsivonen>
annevk: cool

[05:56:04.0000] <Ms2ger>
annevk, do you get critic email?

[05:56:10.0000] <annevk>
no

[05:59:27.0000] <jgraham>
annevk: Boo

[05:59:45.0000] <Ms2ger>
Then please look at https://critic.hoppipolla.co.uk/r/29 manually :)

[06:00:14.0000] <hsivonen>
Hixie: are you planning on adopting this change to the parsing algorithm: https://github.com/w3c/html/commit/e2ddb663fd04803d2be7f16026e2117ced167c01#diff-36cd38f49b9afa08222c0dc9ebfe35ebL98664 ?

[06:02:51.0000] <hsivonen>
darobin: I'm pretty worried abou the precedent of the W3C forking the parsing algorithm. The HTML WG is supposed to bikeshed stuff that doesn't affect implementations.

[06:04:24.0000] <darobin>
hsivonen: if implementers back out of it then it'll get yanked of course

[06:04:33.0000] <Ms2ger>
Of course?

[06:04:48.0000] <darobin>
Ms2ger: well, so long as I have commit rights :)

[06:05:48.0000] <darobin>
hsivonen: I'm all for sticking to unifying bikeshedding and all, but I have yet to find a user who doesn't agree that's the way to do this

[06:05:55.0000] <darobin>
also, it matches usage in content

[06:06:48.0000] <darobin>
(that I could get my hands on at least)

[06:07:07.0000] <Ms2ger>
Did you manage to convince Hixie you're right?

[06:09:31.0000] <darobin>
Ms2ger: no, as far as I know he just called it "overengineered"

[06:10:20.0000] <darobin>
but at this point it's Hixie on one side and pretty much everyone else who has an opinion on the other side

[06:10:22.0000] <jgraham>
Oh sweet jesus please don't fork the parser

[06:10:37.0000] <darobin>
jgraham: do not panic, there is plenty of time to fix this

[06:10:46.0000] <darobin>
it just takes everyone to chill :)

[06:16:07.0000] <Ms2ger>
/me assumes Hixie is right, then

[06:23:27.0000] <MikeSmith>
I'm chill already

[06:23:37.0000] <MikeSmith>
so basically everybody should just be more like me

[06:24:15.0000] <Ms2ger>
MikeSmith, it's true

[06:24:39.0000] <Ms2ger>
Every night before I go to bed, I reflect on how I can be more like MikeSmith

[06:26:54.0000] <Ms2ger>
zco... well dammit

[06:41:42.0000] <MikeSmith>
but anyway I agree that when somebody else actually takes time to work with others to understand a problem and use cases and then actually write a spec that addresses the problem and use cases he's learned about, it's right that we should all gang up together and beat that person down

[06:42:56.0000] <MikeSmith>
we must exercise zero tolerance for that kind of factionalist reactionary behavior in our party

[06:44:12.0000] <hsivonen>
(I'm not saying that the parsing algorithm change is a bad idea. I'm saying that the WHATWG and W3C parsing specs diverging is.)

[06:46:02.0000] <MikeSmith>
yeah understood

[06:49:17.0000] <MikeSmith>
hsivonen: and I'm not saying that the parsing algorithm change is a good idea. I'm not convinced myself that the ruby spec needs to change. But a lot of other people in Japan who've been considering this seems to believe different.

[06:52:26.0000] <gsnedders>
/me doesn't want the parser forked because it means we can get into arguments about whether html5lib supports HTML5 or HTML.

[07:07:36.0000] <odinho>
Ms2ger: Testing that FormData worked, -- you could just send it to some python echo script and read that back, no?

[07:13:04.0000] <hsivonen>
annevk: can you refresh my memory about what GB2312 means in IE?

[07:13:23.0000] <hsivonen>
annevk: is it a label of GBK? a distinct encoding that works identically to GBK? a different encoding?

[07:19:57.0000] <hsivonen>
decodes like GBK at least in IE

[07:21:54.0000] <annevk>
hsivonen: will test now

[07:23:16.0000] <hsivonen>
encodes as GBK, too

[07:23:19.0000] <annevk>
Ms2ger: ask again Monday

[07:23:26.0000] <hsivonen>
http://hsivonen.com/test/moz/gb2312.htm

[07:24:18.0000] <hsivonen>
now I'm less sure about aliasing all these to GB18030 again :-(

[07:24:38.0000] <annevk>
hsivonen: gbk becomes gb2312

[07:24:58.0000] <hsivonen>
annevk: as a label?

[07:25:07.0000] <annevk>
yeah

[07:25:14.0000] <annevk>
per http://dump.testsuite.org/encoding/label-test.html

[07:25:30.0000] <annevk>
I like how IE uppercases gb18030 but not gb2312

[07:25:38.0000] <annevk>
whereas other browsers lowercase the former

[07:39:11.0000] <Ms2ger>
odinho, I was asking easy :)

[07:44:30.0000] <annevk>
I wonder where foolip is

[08:03:05.0000] <odinho>
annevk: Vacation. Might be back tuesday, might not. :)

[08:14:39.0000] <jgraham>
odinho: Yes, I think logic agrees with you there

[08:20:23.0000] <annevk>
Ms2ger: answered critic questions

[08:21:43.0000] <jgraham>
Is anyone else not getting critic mail?

[08:22:44.0000] <annevk>
I configured it too, fwiw

[08:22:51.0000] <jgraham>
That's not really what I meant

[08:23:00.0000] <jgraham>
Mail delivery might be having problems

[08:24:12.0000] <Ms2ger>
jgraham, I just got an email for a review I did yesterday

[08:24:31.0000] <jgraham>
I just restarted the email service

[08:31:53.0000] <jgraham>
Oh, it didn't appreciate the 33Mb emails that removing 32MB.txt generated

[08:37:53.0000] <annevk>
hsivonen: is there anything more you need me to look into?

[08:38:10.0000] <annevk>
hsivonen: replied to the gbk / big5 bugs

[08:38:39.0000] <annevk>
Fixing some Fullscreen stuff today, URL & more Encoding next week I guess

[08:39:00.0000] <annevk>
And at some point I'll define xhr.responseURL

[08:39:14.0000] <Hixie>
hsivonen: given that there are zero use cases for that complexity (literally the only purpose for adding it is that it briefly aids doing some obscure ruby things while not all browsers support it), that it was developed without bothering to engage in the relevant bugs, and that it causes parser churn, no, i've no intention of doing anything with it.

[08:39:14.0000] <annevk>
As well as a URL member for response objects

[08:39:19.0000] <Hixie>
hsivonen: see https://bugzilla.mozilla.org/show_bug.cgi?id=33339

[08:39:34.0000] <annevk>
morning Hixie

[08:41:08.0000] <Hixie>
hsivonen: it's the perfect example of what happens when a hyper-focused group who thinks their feature is very important gets to make decisions without considering the overall picture.

[08:41:30.0000] <qrk>
like EME?

[08:41:45.0000] <Hixie>
not quite as bad as EME, but yeah

[08:42:04.0000] <qrk>
EME makes me cry.

[08:47:17.0000] <SteveF>
hsivonen: "The HTML WG is supposed to bikeshed stuff that doesn't affect implementations. " primarily but not solely :-)

[08:47:47.0000] <Ms2ger>
jgraham, ha

[09:45:57.0000] <smola>
annevk: "scheme:// does not trigger hierarchical URI parsing" - I've dropped that from my implementation, after testing thoroughly... a lot of things get broken

[09:46:50.0000] <annevk>
smola: relative to?

[09:47:39.0000] <annevk>
ah you updated the bug

[09:47:52.0000] <smola>
yep, but notably, ed2k links would generate parsing errors

[09:48:59.0000] <annevk>
Time and again, it the "generic syntax" is invented and fails in practice.

[09:49:28.0000] <annevk>
Not sure if anyone implemented the <html:template> element yet in XML, but that does it in for XML.

[09:50:08.0000] <annevk>
I remember there being more examples, but they are not coming to mind.

[09:52:05.0000] <smola>
yes, it seems generic syntax failed so much that there are even funny contradictions such as an RFC saying this: "MUST follow the Uniform Resource Identifiers (RFC 3986) syntax [RFC3986]

[09:52:20.0000] <smola>
and then goes on and defines them in a way incompatible with RFC 3986

[09:52:50.0000] <Hixie>
generic syntaxes are silly, i keep telling people but they keep saying "you should base it on json!" or whatnot

[09:54:23.0000] <annevk>
JSON is pretty great, but a) it doesn't have comments and b) it doesn't stream.

[10:23:14.0000] <jgraham>
JSON lacking comments is pretty terrible

[10:23:42.0000] <jgraham>
Not sure that AppCache helped the reputation of "just make up a custom syntax" though

[10:23:57.0000] <jgraham>
(I am not claiming that most of the problems were syntax related)

[10:35:49.0000] <annevk>
I don't really understand what would be wrong with using Chrome and being against DRM.

[10:36:13.0000] <annevk>
I'm against the UK Internet censoring. Do I now "puzzle" people and should I move countries?

[10:36:19.0000] <annevk>
Seems rather contrived.

[10:37:23.0000] <jgraham>
Well switching browsers away from one whose makers have actively promoted DRM is much easier than switching countries

[10:45:49.0000] <Jasper>
jgraham, I tend to just have a "comment" key or something in a dict.

[10:46:17.0000] <Jasper>
jgraham, though what bites me is that I can't leave a comma at the end of a dict, like I can with JS/Python.

[10:46:41.0000] <jgraham>
JSON has the right data model but terrible syntax

[10:47:06.0000] <Jasper>
jgraham, well, you do know why Crockford removed comments from JSON, right?

[10:49:31.0000] <jgraham>
I don't know what reason he gave. And my personal opinion of why isn't suitable for a family channel (or even this one)

[10:50:48.0000] <jgraham>
Comments should never be used to transmit anything meaningful. That is

[10:50:49.0000] <jgraham>
what JSON is for.

[10:50:53.0000] <jgraham>
That reason?

[12:05:42.0000] <Ms2ger>
jgraham, so how do I get your server running?

[14:51:07.0000] <jgraham>
Ms2ger: Check it out and python serve.py

[14:51:14.0000] <jgraham>
It's even in the README

[14:51:45.0000] <Ms2ger>
ImportError: No module named wptserve

[14:53:56.0000] <jgraham>
In other news, am I reading the spec right to think that the DOM <span><textarea>\x0A</textarea></span> will give \x0A for the innerHTML of the textarea but <textarea>\x0a\x0a</textarea> for the innerHTML of the span or the outerHTML of the textarea?

[14:54:13.0000] <jgraham>
Ms2ger: git submodule update --recursive

[14:54:27.0000] <Hixie>
i hope not

[14:54:39.0000] <Hixie>
oh wait, of the DOM...

[14:54:48.0000] <Ms2ger>
Nope, doesn't help

[14:54:52.0000] <Hixie>
sounds plausible

[14:55:40.0000] <jgraham>
Ms2ger: Do you have something in [wpt root]/tools/wptserve/ ?

[14:56:08.0000] <Ms2ger>
Nope

[14:56:42.0000] <jgraham>
Hixie: It sounds plausible but also seems mildly insane :) I'm not sure I'm going to argue to change the spec though since I would have to change my implementation ;)

[14:57:09.0000] <jgraham>
Ms2ger: Did you git submodule init?

[14:57:59.0000] <Ms2ger>
Okay, that seems to help

[14:58:44.0000] <jgraham>
Ms2ger: I really suggest the README ;) It also tells you how to configure /etc/hosts

[14:59:09.0000] <Ms2ger>
I guess I should :)

[14:59:18.0000] <gsnedders>
We have to configure /etc/hosts? Ewwwww.

[14:59:37.0000] <Hixie>
jgraham: yeah, looks like we don't check what the parent is for that particular weirdness

[15:00:29.0000] <Hixie>
jgraham: what do browsers do?

[15:01:01.0000] <jgraham>
Dunno, if only I had a testsuite

[15:01:05.0000] <jgraham>
Oh wait, I do!

[15:01:46.0000] <Ms2ger>
\o/

[15:02:06.0000] <Hixie>
 O

[15:02:12.0000] <Hixie>
\

[15:02:15.0000] <Hixie>
d'oh

[15:02:18.0000] <Hixie>
my / was eaten

[15:02:44.0000] <Ms2ger>
Now I need to remember why I wanted to run the server

[15:04:12.0000] <jgraham>
Looks like Presto follows the spec but Gecko and Chrome don't add the extra newline in the case that you would expect them to

[15:04:37.0000] <jgraham>
I have no idea about IE

[15:04:43.0000] <gsnedders>
Damn it, jgraham. Making Presto break the web by following specs.

[15:06:23.0000] <Hixie>
(is there any reason to still be testing presto? i thought it had joined MacIE and Netscape...)

[15:06:36.0000] <jgraham>
Well I have it

[15:06:43.0000] <jgraham>
Which isn't true of the others

[15:06:52.0000] <Hixie>
k, just checking if i was wrong to ignore it :-)

[15:06:52.0000] <jgraham>
and is still the latest Opera for Linux

[15:07:05.0000] <jgraham>
And various still-shipping devices

[15:07:10.0000] <jgraham>
But basically no

[15:07:56.0000] <jgraham>
(but it occasionally makes me feel good about my life when Opera passes tests)

[15:08:31.0000] <Ms2ger>
jgraham, so do I need to click "prepare rebase"?

[15:08:33.0000] <jgraham>
(I mean not great, you understand, but slightly better than normal)

[15:08:40.0000] <jgraham>
Ms2ger: No

[15:08:53.0000] <jgraham>
For a tracking review that button should be hidden :)

[15:09:17.0000] <jgraham>
You do the rebase, then click "Rebase Review"

[15:09:43.0000] <Ms2ger>
/me tries, crosses fingers

[15:09:54.0000] <jgraham>
Then, when you fetch the branch, if there are more commits than you expected, you specify the parent by hand rather than using the default

[15:12:08.0000] <Ms2ger>
jgraham, that seemed to work, but now it's no longer tracking

[15:12:26.0000] <jgraham>
Ms2ger: Yup, you need to click enable tracking

[15:12:40.0000] <jgraham>
And then force refresh your browser for reasons that I don't understand

[15:12:58.0000] <Ms2ger>
Fascinating

[15:13:16.0000] <Ms2ger>
Okay, that's enough for tonight

[15:13:19.0000] <Ms2ger>
Thanks

[15:13:31.0000] <jgraham>
Well the force-refresh is only to update the display

[15:13:44.0000] <jgraham>
It reenables the tracking either way

[15:13:58.0000] <gsnedders>
So, what, the devices SDK seems to have just at CES officially moved to Chromium. So I guess there are going to be projects already underway, yet to ship, based on Presto.

[15:14:25.0000] <Ms2ger>
Yeah, I suspected as much

[15:14:38.0000] <Ms2ger>
"1 minutes ago"

[15:14:48.0000] <jgraham>
Hixie: So, if Chrome and Fx aren't following the spec here is it worth changing the spec?

[15:15:03.0000] <jgraham>
To just never add the extra newline

[15:24:17.0000] <odinho>
gsnedders: this is true.

[15:24:28.0000] <odinho>
We are shipping new products based on presto still. :)

[15:24:41.0000] <odinho>
Or, devicessdk-ppl are, that is.

[15:25:03.0000] <Hixie>
jgraham: never adding the newline leads to data loss.

[15:25:10.0000] <Hixie>
jgraham: so that seems like a bad idea.

[15:25:16.0000] <Hixie>
jgraham: but if they won't change...

[15:25:28.0000] <jgraham>
Well they haven't in N years

[15:25:32.0000] <gsnedders>
odinho: Including stuff beyond what shipped in dsk 12.1x or not?

[15:26:11.0000] <jgraham>
gsnedders: It would be very surprising if the configuration of TVSDK was just like that of desktop

[15:26:18.0000] <jgraham>
at least it never has been in the past

[15:28:02.0000] <gsnedders>
jgraham: This is true. But they were always wary of being the first to ship anything… as everyone was, really. And in this case they would be — and the last.

[15:28:14.0000] <odinho>
gsnedders: I think so. Desktop was lagging faaar behind core, as I'm sure you remember. And I think they are at newer core integrations.

[15:28:45.0000] <gsnedders>
odinho: I'm well aware.

[15:29:05.0000] <odinho>
I know that the eternal bugs-branch is the main master now, and it seems to be getting patches still.

[15:29:24.0000] <odinho>
So I think it's just stabilizing like crazy. Probably the highest quality it has ever had :P No churn.


2014-01-11
[20:31:24.0000] <MikeSmith>
https://www.w3.org/Bugs/Public/show_bug.cgi?id=24271 seems less than ideal

[20:32:04.0000] <MikeSmith>
I mean the situation it describes, not the bug report itself

[20:32:34.0000] <MikeSmith>
"I do notbelieve that any two browsers support the same exact set of unicode charactersfor document.createElement."

[23:51:30.0000] <Ms2ger>
MikeSmith, it'll take a test case to convince me of that belief :)

[00:37:28.0000] <Ms2ger>
jgraham, the file still exists because I didn't feel like doing anything else after rebasing yesterday :)

[01:07:32.0000] <Ms2ger>
jgraham, looks like git submodule init && git submodule update --recursive doesn't checkout resources/webidl2

[02:04:47.0000] <jgraham>
Ms2ger: Hmm, that's annoying

[04:43:41.0000] <jgraham>
gsnedders: BTW if you know any way to serve on multiple subdomains without either a) configuriang /etc/hosts or b) installing an autoproxy, please let me know. Of these I consider a) less troublesome

[06:16:39.0000] <MikeSmith>
Ms2ger: was gonna say post a comment to that bug but I see now you already did

[10:07:20.0000] <Ms2ger>
annevk, can I have a reply on https://critic.hoppipolla.co.uk/showcomment?chain=54 ?

[10:09:20.0000] <annevk>
Ms2ger: refresh

[10:10:06.0000] <Ms2ger>
Ok, thanks

[10:13:38.0000] <Ms2ger>
jgraham, should I squash?

[10:25:44.0000] <annevk>
es-discuss discovers there's more notions of whitespace than String.prototype.trim

[10:28:37.0000] <Ms2ger>
The horror

[10:33:24.0000] <gsnedders>
Why is Bugzilla always down when I want to look at it?

[12:45:33.0000] <Ms2ger>
assert_equals(appCache.IDLE, 0, "window.applicationCache.IDLE == 1");

[13:34:21.0000] <Ms2ger>
That feeling when you think "this isn't a terribly good test�" and realize that, why, yes, you're looking at a Microsoft test


2014-01-12
[08:46:52.0000] <jarek>
Hi

[08:47:26.0000] <jarek>
why there is separate spec for touch events and pointer events?

[08:47:50.0000] <jarek>
is one of those specs going to be eventually merged / dropped?

[09:41:16.0000] <SimonSapin>
is it just me or is whatwg.org down?

[09:46:24.0000] <Hixie>
it's down

[09:46:36.0000] <Hixie>
the filesystem became readonly so i tried to reboot it, and it didn't come back.

[09:47:22.0000] <Ms2ger>
Woop

[09:47:52.0000] <gsnedders>
KILL ALL THE DATA.

[09:54:23.0000] <Hixie>
dreamhost contacted

[10:17:18.0000] <Hixie>
ping started working again, site should be up soon

[10:17:25.0000] <Hixie>
i hope

[12:44:58.0000] <Ms2ger>
/me procrastinates (cc gsnedders)

[12:51:07.0000] <gsnedders>
Ms2ger: :)

[12:51:19.0000] <gsnedders>
Ms2ger: Wait, you didn't expect me to be, you know, working? :P

[12:51:23.0000] <Ms2ger>
Nah

[12:51:28.0000] <Ms2ger>
I expected myself to, somewhat

[12:51:32.0000] <Ms2ger>
2 hours left...

[12:51:45.0000] <gsnedders>
I'm in the uni library! I'm surrounded by books! Some relevant to what I'm writing!

[12:52:01.0000] <gsnedders>
/me notices the time and thinks he ought have dinner soon

[15:44:25.0000] <smaug____>
if something is in "invalid value default", what value should the idl attribute return

[15:54:45.0000] <smaug____>
ah, nm


2014-01-13
[20:29:29.0000] <wirepair>
hsivonen: thank you for this html5 parser and the ability to set your own transition handler, it is exactly what i needed :>

[21:39:58.0000] <dekiss>
how will old browsers parse html5 shemantic elements - header footer section article?

[23:40:20.0000] <zcorpan>
dekiss2: depends on the browser

[23:45:04.0000] <zcorpan>
jgraham: Hixie: i don't think we should change the spec for the newline without first trying to get it implemented. we tried to get it implemented in presto and it worked :-)

[23:56:19.0000] <hsivonen>
wirepair: you're welcome. are you using it in Java?

[00:04:41.0000] <wirepair>
hsivonen: yeah

[00:08:31.0000] <MikeSmith>
/me wonders eh what is the BarProp interface 

[00:10:14.0000] <MikeSmith>
/me and finds http://www.whatwg.org/specs/web-apps/current-work/multipage/browsers.html#barprop

[00:25:22.0000] <zcorpan>
the definitions of status bar and toolbar seem a bit poor

[00:26:12.0000] <zcorpan>
since the toolbar is sometimes at the bottom and the status bar can be e.g. inside the address bar

[00:27:32.0000] <MikeSmith>
zcorpan: the definitions look word-for-word the same with each other

[00:27:50.0000] <MikeSmith>
oh

[00:27:59.0000] <zcorpan>
not quite

[00:28:07.0000] <MikeSmith>
"below or after" vs "above or before"

[00:29:00.0000] <zcorpan>
/me files

[00:31:34.0000] <MikeSmith>
zcorpan: seems like you could suggest some wording for what they are. Since I'd imagine the reason Hixie doesn't already describe what they are is that he wasn't t able to come up with wording that accurately describes what they are

[00:32:51.0000] <zcorpan>
Hixie usually says he just wants to know the problem, not the solution :-P

[00:41:36.0000] <MikeSmith>
yeah treu

[00:47:17.0000] <MikeSmith>
but your descriptions look good to me :-)

[01:27:22.0000] <jgraham>
zcorpan: I can live with that. On that subject, feel free to look at https://critic.hoppipolla.co.uk/r/523 if you have time ;)

[01:28:05.0000] <zcorpan>
jgraham: ok

[03:28:09.0000] <annevk>
So I looked at the createElement() bug... https://www.w3.org/Bugs/Public/show_bug.cgi?id=24271

[03:29:37.0000] <MikeSmith>
annevk: and..?

[03:29:58.0000] <annevk>
And apart from severe disinterest, it seems there are some issues there that do not relate to 4th vs 5th

[03:30:23.0000] <annevk>
Because initially I was going to reply that I don't care how 4th vs 5th plays out as nobody cares about XML

[03:30:57.0000] <annevk>
However, U+0083 and U+00B5 seem forbidden by both as far as I can tell

[03:35:58.0000] <MikeSmith>
annevk: so it should just throw for those instead?

[03:37:04.0000] <MikeSmith>
oh I guess I don't know what it does now for the No cases of those

[03:37:09.0000] <annevk>
Right. As far as I can tell Chrome is the only sane browser per XML, but it is insane for implementing the 5th edition. (The last two examples are testing 4th vs 5th.)

[03:37:23.0000] <MikeSmith>
throws

[03:37:36.0000] <MikeSmith>
annevk: OK

[04:33:50.0000] <annevk>
Okay, so Gecko has bugs in its XML parser as far as I can tell

[04:33:52.0000] <annevk>
data:text/xml,<%C2%B5/>

[04:34:49.0000] <ondras>
works for me. is that incorrect?

[04:35:06.0000] <annevk>
As far as I can tell U+00B5 is not a valid XML Name

[04:35:21.0000] <annevk>
So that should give a parse error

[04:38:06.0000] <ondras>
yeah, hmm, the valid range seems to start at 0xc0 apparently

[04:55:39.0000] <MikeSmith>
does Gecko still use expat?

[05:30:51.0000] <jgraham>
MikeSmith: Yes

[05:35:42.0000] <annevk>
So with SimonSapin I checked some other code points, wasting yet more time

[05:36:13.0000] <annevk>
Seems most other code points in the U+0080 to U+00C0 range do not work

[05:38:14.0000] <jgraham>
zcorpan: Am I missing something about https://critic.hoppipolla.co.uk/be224de9?review=487 ?

[05:38:20.0000] <jgraham>
The unreviewed parts

[05:38:53.0000] <jgraham>
(not claiming you have special insight into the tests, but you might know if there is some strangeness in the spec I have overlooked)

[05:39:21.0000] <zcorpan>
jgraham: i think i recall ms2ger saying he left those for you to review

[05:39:54.0000] <Ms2ger>
What'd I do?

[05:40:24.0000] <jgraham>
zcorpan: Yeah he did

[05:40:26.0000] <Ms2ger>
Yeah, the testharness.js-inside-a-frame thing

[05:40:36.0000] <jgraham>
So that doesn't work

[05:40:40.0000] <jgraham>
I can comment on that

[05:40:55.0000] <jgraham>
But I don't understand the pass condition on the test

[05:41:04.0000] <Ms2ger>
Did you notice the parentNode bits?

[05:41:20.0000] <jgraham>
Ahhhh

[05:41:22.0000] <jgraham>
No

[05:41:27.0000] <jgraham>
Why would you do that?

[05:41:32.0000] <Ms2ger>
Microsoft

[05:41:39.0000] <jgraham>
But why?

[05:41:40.0000] <Ms2ger>
I claim no understanding

[05:41:57.0000] <zcorpan>
seems bogus, just change it to expect the right element directly :-)

[05:43:21.0000] <jgraham>
OK, commented

[05:44:36.0000] <zcorpan>
i don't understand why it needs to run the script from a frame

[05:44:55.0000] <zcorpan>
why doesn't it just run it in the frameset document and use about:blank in the frames?

[05:45:46.0000] <zcorpan>
maybe set the log element manually to one of the frame's body or so

[05:47:03.0000] <jgraham>
zcorpan: I had some notion that running scripts there didn't work, but maybe I invented that

[05:47:38.0000] <zcorpan>
oh you set an output document, not an element

[05:52:04.0000] <blackhair>
shankha93 are you from IIT J?

[05:52:52.0000] <SimonSapin>
annevk: https://bugzilla.mozilla.org/show_bug.cgi?id=501837 / http://www.w3.org/XML/xml-V10-4e-errata#E09

[05:53:11.0000] <zcorpan>
i can't get it to work though. http://software.hixie.ch/utilities/js/live-dom-viewer/saved/2733

[05:53:17.0000] <zcorpan>
bbl

[05:53:20.0000] <Ms2ger>
sankha93 seems mostly on a bad connection

[05:54:11.0000] <sankha93>
oh, I don't know always my network has problems with freenode :(

[05:54:19.0000] <sankha93>
blackhair: how did you know my college name?

[05:55:58.0000] <annevk>
SimonSapin: yeah, B5 is not allowed in either 4th or 5th edition

[05:56:04.0000] <annevk>
SimonSapin: that's why it's special

[05:56:31.0000] <SimonSapin>
ah, I confused it with B7

[06:00:48.0000] <annevk>
Was B7 ever allowed at the start?

[06:01:26.0000] <annevk>
People keep derailing my overloading thread :/

[06:02:42.0000] <SimonSapin>
in 4th edition

[06:02:45.0000] <blackhair>
sankha93: scrollback.io - ring any bells ?

[06:03:36.0000] <annevk>
SimonSapin: not per http://www.w3.org/TR/2006/REC-xml-20060816/#NT-Name

[06:04:04.0000] <SimonSapin>
it’s in Extender which is in NameChar

[06:04:17.0000] <annevk>
SimonSapin: but NameChar is not allowed at the start

[06:04:25.0000] <SimonSapin>
ah, right

[06:04:47.0000] <SimonSapin>
anyway

[06:14:14.0000] <MikeSmith>
https://twitter.com/kuvos/status/422721878508056577 "Are there other elements besides <table> children that disappear when you document.write() them outside table? Not related to nesting <p>'s."

[06:14:52.0000] <MikeSmith>
(question from Peter van der Zee)

[06:16:26.0000] <Ms2ger>
So what happened to https://github.com/w3c/web-platform-tests/pull/509 ?

[06:20:21.0000] <annevk>
MikeSmith: given that the parser is context-dependent, and he doesn't define the context, the answer could be either almost all elements or none

[06:21:08.0000] <annevk>
Ms2ger: seems like you should reopen that

[07:21:59.0000] <jgraham>
Quick review anyone? https://critic.hoppipolla.co.uk/r/546

[07:22:08.0000] <jgraham>
Ms2ger: ^

[07:22:53.0000] <Ms2ger>
/me startes a browser

[07:22:57.0000] <Ms2ger>
startes?

[07:28:40.0000] <jgraham>
startles?

[07:30:52.0000] <Ms2ger>
if os.path.exists(override_path): with open(override_path) ...

[07:30:58.0000] <Ms2ger>
Do we care about race conditions there?

[07:32:05.0000] <jgraham>
Not really?

[07:32:13.0000] <jgraham>
I could use try/except ofc

[07:32:41.0000] <Ms2ger>
Yeah, I thought so

[07:33:22.0000] <Ms2ger>
Intentional that config.json can only override, not add keys?

[07:34:02.0000] <jgraham>
Yes

[07:34:34.0000] <Ms2ger>
r+

[07:35:31.0000] <jgraham>
Takk

[07:44:51.0000] <jgraham>
MikeSmith: You might be interested in that. You can now create a config.json that will override what's in config.default.json but will be ignored by git

[08:15:03.0000] <annevk>
Ffffffuuuuu

[08:15:08.0000] <annevk>
<a href="http://&#xff05;61.com">test</a> points to a.com

[08:15:32.0000] <annevk>
<a href="http://&#xff05;41.com">test</a> points to A.com, well that is weird

[08:15:34.0000] <annevk>
(Firefox)

[08:15:47.0000] <zcorpan>
jgraham: http://software.hixie.ch/utilities/js/live-dom-viewer/saved/2734 is supposed to work but doesn't, any idea?

[08:15:53.0000] <annevk>
In Chrome both are a.com

[08:16:24.0000] <zcorpan>
annevk: is that level of crazy necessary for web compat?

[08:16:53.0000] <annevk>
Chrome even supports %ef%bc%85%ef%bc%94%ef%bc%91.com

[08:17:12.0000] <jgraham>
zcorpan: Not sure

[08:17:14.0000] <annevk>
Which is more or less equal to what I just had, except another level of percent-encoding

[08:17:22.0000] <annevk>
See https://www.w3.org/Bugs/Public/show_bug.cgi?id=24257

[08:18:11.0000] <zcorpan>
annevk: yeah. seems to me like this is something that would only show up in test cases and attacks

[08:19:19.0000] <annevk>
The question is of course what we should do. We could say no to this, but what do we say yes to?

[08:19:40.0000] <zcorpan>
yes to \ :-)

[08:21:24.0000] <zcorpan>
maybe i can run a grep, but not sure what to look for

[08:24:44.0000] <jgraham>
zcorpan: setup() won't run there

[08:25:37.0000] <annevk>
Hmm actually, Firefox does not appear to do any percent-decoding

[08:25:45.0000] <annevk>
There is a bug in the UI that makes it look like it does

[08:29:21.0000] <zcorpan>
jgraham: ok. that makes it a bit hard to set output_document to a document that hasn't loaded yet. maybe output_window is better? i can use about:blank and append a div, but it seems a bit hacky

[08:30:15.0000] <jgraham>
zcorpan: Yeah, perhaps

[08:30:40.0000] <jgraham>
I don't remember exactly what the original case was. Possibly something with SVG that payman was doing

[08:44:49.0000] <zcorpan>
jgraham: http://software.hixie.ch/utilities/js/live-dom-viewer/saved/2735

[08:45:19.0000] <zcorpan>
jgraham: i get an exception in blink

[08:46:18.0000] <jgraham>
zcorpan: I think the right thing is to fix this on the testharness side

[08:46:46.0000] <zcorpan>
jgraham: yes

[08:47:04.0000] <jgraham>
zcorpan:

[08:47:06.0000] <jgraham>
Hmm

[08:47:48.0000] <jgraham>
try setting output_document = function() {return window[0].document}

[08:47:57.0000] <jgraham>
in setup called before onload

[08:50:16.0000] <zcorpan>
that doesn't help, functions and documents aren't allowed to be cloned in postMessage

[08:50:28.0000] <zcorpan>
 properties: this_obj.properties

[08:56:34.0000] <jgraham>
That seems very unnecessary

[08:56:50.0000] <jgraham>
(including the properties there)

[09:03:31.0000] <zcorpan>
yeah

[09:04:51.0000] <zcorpan>
i realise that changing output_document to output_window doesn't help without also making the evaluation late

[09:15:33.0000] <dglazkov>
good morning, Whatwg!

[09:15:37.0000] <MikeSmith>
jgraham: yeah saw that (config.json change) thanks, I think that will be better for the w3c-test.org case

[09:16:55.0000] <jgraham>
MikeSmith: Turns out it will be better for me too ;)

[09:17:06.0000] <MikeSmith>
yay

[09:19:47.0000] <Hixie>
zcorpan: if you could comment on https://www.w3.org/Bugs/Public/show_bug.cgi?id=14703 that would be fantastic

[09:20:43.0000] <zcorpan>
annevk: i see things like <link rel="alternate" media="handheld" href="http://m.snapdeal.com%2F"/> and <a href="http://www.charlotteolympia.com%20" target="_blank">

[09:24:21.0000] <annevk>
zcorpan: see https://www.w3.org/Bugs/Public/show_bug.cgi?id=24191#c4

[09:24:30.0000] <annevk>
zcorpan: both of those should probably always fail

[09:24:34.0000] <zcorpan>
Hixie: yeah, i'll look into it some more

[09:25:00.0000] <Hixie>
zcorpan: thanks. i'm going to the vet now, but i'll look in an hour or two and see if i can finish the edit.

[09:52:02.0000] <zcorpan>
annevk: http://pastebin.com/2Y5QwuDb

[09:52:54.0000] <annevk>
those URLs seem pretty broken

[09:53:04.0000] <zcorpan>
annevk: if you want with -H i can rerun (i.e. the url of the page containing the link)

[09:55:06.0000] <zcorpan>
annevk: yeah but some do actually work in some browsers, but it's pretty rare (the set is 102,000 pages)

[09:56:18.0000] <zcorpan>
i'll leave it for you to analyze the data further if you want :-) bbl

[09:57:01.0000] <annevk>
Hmm

[10:00:10.0000] <annevk>
smola: how do you want to be acknowledged?

[10:00:35.0000] <annevk>
smola: is "Santiago M. Mola" as in Bugzilla? Or without the M. or with it written out?

[10:00:51.0000] <annevk>
s/is//

[10:02:45.0000] <smola>
annevk: "Santiago M. Mola" is ok

[10:02:51.0000] <gsnedders>
Yay, SGML like syntax in linguistic corpora: "<shouting>Mum, can I have a drink?</>".

[10:03:24.0000] <gsnedders>
(This isn't all too surprising, in the 80s a fair number of linguistic tools used SGML)

[11:08:13.0000] <Hixie>
man i wish the links in cssom were more obviously links

[11:08:23.0000] <Hixie>
i can barely see them, especially when scrolling

[11:23:33.0000] <Hixie>
anyone know when a "CSS style sheet" has its "CSS rules" set to something?

[11:36:35.0000] <SimonSapin>
Hixie: http://dev.w3.org/csswg/css-syntax/#parse-a-stylesheet maybe?

[11:36:57.0000] <SimonSapin>
though it may not be in sync with CSSOM terminology

[11:37:08.0000] <Hixie>
when is that invoked?

[11:37:20.0000] <Hixie>
seems like the appropriate place for it to happen

[11:38:45.0000] <SimonSapin>
I don’t think we have clear spec text about this, but it should be invoked when processing the content of <style> or the response for <link rel=stylesheet>

[11:45:51.0000] <smola>
annevk: we still have to check for 0x0020 in domain after ToASCII

[11:46:20.0000] <annevk>
smola: stuff decomposes to that?

[11:46:22.0000] <smola>
you can get 0x0020 in the result through non-ASCII whitespace

[11:46:32.0000] <annevk>
of course you can :/

[11:46:39.0000] <smola>
GOO\u00a0\u3000goo.com <- this one from the WebKit tests

[11:47:17.0000] <smola>
brb

[11:47:43.0000] <annevk>
I guess we could just do it after

[11:47:50.0000] <Hixie>
SimonSapin: k, i'll assume that'll get fixed later :-)

[11:47:56.0000] <Hixie>
SimonSapin: so long as it's on the radar

[11:48:14.0000] <annevk>
It's somewhat annoying to iterate over the labels and then iterate over each code point of those labels, but still

[11:48:34.0000] <SimonSapin>
Hixie: I’m not sure it’s on the radar :/

[11:48:42.0000] <Hixie>
i can file a bug if you like

[11:49:06.0000] <SimonSapin>
www-style would be best, we have too many bug trackers that nobody reads

[11:49:21.0000] <SimonSapin>
(yes, it’s a mess)

[11:49:39.0000] <Hixie>
oh i assumed that the link to file a bug in the cssom spec was the preferred place for filing bugs on cssom

[11:49:47.0000] <Hixie>
should i be sending them to www-style instead?

[11:50:11.0000] <Hixie>
few people seem to keep close enough track of mailing lists to ensure that everything gets resolved

[11:50:21.0000] <Hixie>
so i kinda prefer filing them elsewhere

[11:50:23.0000] <Hixie>
but whatever works for you

[11:50:25.0000] <SimonSapin>
hum, maybe zcorpan follows bugzilla

[11:50:59.0000] <Ms2ger>
/me assumes www-style is as reliable an issue tracker as /dev/null

[11:51:02.0000] <Hixie>
(there's a reason i promise to respond to all html spec feedback sent to whatwg@ -- it's the only way i can guarantee that thinks don't fall through the cracks)

[11:51:04.0000] <SimonSapin>
I assume he put the Bugzilla link, so for CSSOM that’s probably fine

[11:51:08.0000] <Hixie>
k

[11:51:51.0000] <Hixie>
filed https://www.w3.org/Bugs/Public/show_bug.cgi?id=24283

[11:52:52.0000] <Hixie>
i wonder when i should create the style sheet for <style>

[11:54:51.0000] <annevk>
I suspect that's synchronous

[11:55:38.0000] <annevk>
You create the <style> element and its constructor will parse and create style sheet if there are contents and initialize the properties

[11:55:38.0000] <SimonSapin>
servo does it asynchronously (CSS parsing doesn’t block HTML parsing)

[11:55:52.0000] <annevk>
SimonSapin: how do you deal with scripts?

[11:56:13.0000] <SimonSapin>
there is no CSSOM yet

[11:56:38.0000] <SimonSapin>
maybe it’ll turn out we can’t do that without breaking the web, idk

[11:56:39.0000] <annevk>
SimonSapin: e.g. <style>body{background:lime}</style><script>alert(document.styleSheets[0].cssRules[0].cssText)</script>

[11:57:00.0000] <gsnedders>
Seems like a good fit for semaphores for style parsing/script execution

[11:57:11.0000] <annevk>
SimonSapin: you can, but at some point you need blocking

[11:57:23.0000] <gsnedders>
Which would avoid blocking until necessary.

[11:57:49.0000] <SimonSapin>
I guess accessing document.styleSheets will block script the same way waiting on layout results block scripts

[11:58:23.0000] <Hixie>
i'm more worried about things like  <style>body{background:lime} <script>alert(document.styleSheets[0].cssRules[0].cssText)</script> body{background:blue} </style>

[11:58:52.0000] <annevk>
Hixie: seems more likely indeed :p

[11:58:52.0000] <Hixie>
(in xml)

[11:59:09.0000] <gsnedders>
(seems less likely then) :P

[11:59:10.0000] <Hixie>
(obviously in html it's not an issue since you can't put elements there without script)

[11:59:27.0000] <annevk>
That is beautiful though

[12:00:24.0000] <annevk>
Hixie: document.styleSheets.length is 0 for me there

[12:00:25.0000] <jgraham>
Really if that's the only example that breaks, we are all good

[12:00:38.0000] <annevk>
Hixie: in both Firefox and Chrome

[12:01:01.0000] <annevk>
Hixie: which does indeed argue against what I argued, which was silly anyway from a parser point of view

[12:01:07.0000] <Hixie>
maybe a better test would be  <script>setInterval(function () { console.log(document.styleSheets[0].length) }, 100)</script><style> body{background:lime}  /* long pause */  body{background:blue} </style>

[12:01:07.0000] <gsnedders>
Yeah, seems pretty irrelevant. I mean, it's not like there's masses of XML in the first place…

[12:01:54.0000] <annevk>
It matters how the pieces fit together

[12:02:09.0000] <jgraham>
It is of course possible to construct test cases that aren't amenable to parallisation

[12:02:22.0000] <jgraham>
It is an open question which of them actually break the web

[12:03:01.0000] <jgraham>
Or which represent an example of something that's commonplace on the web and so leads to breakage if not handled in serial

[12:03:52.0000] <gerrrttt>
gp hello dudes

[12:03:57.0000] <jgraham>
It is possible that the web has locked itself into requiring minimal-parallelisation

[12:04:07.0000] <jgraham>
But let's hope now

[12:04:10.0000] <jgraham>
*not

[12:04:40.0000] <gsnedders>
That would be very sad. :(

[12:04:55.0000] <annevk>
data:text/xml,<html xmlns="http://www.w3.org/1999/xhtml"><style>body{background:lime} <script>alert(1)</script> body{background:blue} </style><body/></html>

[12:05:08.0000] <annevk>
Hixie: with that test I cannot get it to render green, no matter how long I wait

[12:05:50.0000] <Hixie>
man, you're quicker at making these tests than i am

[12:05:59.0000] <Hixie>
are you getting anything to render at all?

[12:06:05.0000] <annevk>
Hixie: granted, I guess you might be able to get a difference with your other test depending on how things fit together

[12:06:06.0000] <Hixie>
or is it just that it blocks?

[12:06:17.0000] <annevk>
Hixie: it blocks

[12:06:33.0000] <Hixie>
oh, for xml, not for html parsing

[12:06:36.0000] <Hixie>
i missed your data: url

[12:06:40.0000] <Hixie>
i'm writing an html version

[12:06:52.0000] <Hixie>
but good to know

[12:06:56.0000] <Hixie>
maybe we just parse on </style>

[12:07:03.0000] <Hixie>
that would certainly be nice an simple to deal with

[12:07:07.0000] <Hixie>
and

[12:07:07.0000] <annevk>
I also tried this

[12:07:10.0000] <annevk>
data:text/xml,<html xmlns="http://www.w3.org/1999/xhtml"><style>body{background:red}</style><style>body{background:lime} <script>alert(1)</script> body{background:blue} </style><body/></html>

[12:07:14.0000] <annevk>
Also blocks :/

[12:07:16.0000] <annevk>
No red

[12:07:33.0000] <Hixie>
yeah you probably need to try putting a <body> before the <style>, with some text in it

[12:07:57.0000] <annevk>
Good point

[12:07:58.0000] <annevk>
data:text/xml,<html xmlns="http://www.w3.org/1999/xhtml"><style>body{background:red}</style><body>test</body><style>body{background:lime} <script>alert(1)</script> body{background:blue} </style></html>

[12:08:02.0000] <annevk>
Is red, then blue

[12:08:18.0000] <Hixie>
makes sense if it's waiting for </style>

[12:08:28.0000] <Hixie>
what happens if you try to read offsetHeight ?

[12:08:32.0000] <Hixie>
in the alerting script?

[12:08:37.0000] <smola>
annevk: what version of Firefox are you testing with?

[12:08:39.0000] <Hixie>
or something else that forces layout recalc

[12:08:57.0000] <annevk>
smola: 29.0a1 (2014-01-06)

[12:09:28.0000] <annevk>
data:text/xml,<html xmlns="http://www.w3.org/1999/xhtml"><body/><style>body{background:red}</style><style>body{background:lime} <script>alert(document.documentElement.offsetHeight)</script> body{background:blue} </style></html>

[12:09:30.0000] <smola>
annevk: ok

[12:09:33.0000] <annevk>
Same colors, alerts 8

[12:09:45.0000] <gsnedders>
Things that annoy me: Firefox, once it has downloaded an upload, waits to be restarted. This means if you don't restart, it'll eventually be waiting to restart into an outdated build, instead of downloading yet another, but up-to-date one.

[12:09:48.0000] <annevk>
/me updates Nightly

[12:10:21.0000] <annevk>
gsnedders: yes yes yes!

[12:10:34.0000] <annevk>
/me is in that circus at the moment

[12:10:54.0000] <gsnedders>
I just updated to the 2014-01-02 build!

[12:11:04.0000] <gsnedders>
From 2014-01-01!

[12:13:05.0000] <annevk>
smola: 29.0a1 (2014-01-13) now :-)

[12:13:21.0000] <gsnedders>
So the university library just redid their website to use some shiny third party system. It's now horrendously hard to search by ISBN. :(

[12:27:59.0000] <Hixie>
man it's hard to get browsers to render incrementally

[12:28:12.0000] <Hixie>
http://www.hixie.ch/tests/evil/page-loading/incremental/003.cgi

[12:28:45.0000] <Hixie>
ok well i've never seen a "1"

[12:28:53.0000] <Hixie>
so i guess yep, it waits for </style>

[12:34:20.0000] <annevk>
and changes to the contents cause re-parsing as well

[12:34:32.0000] <annevk>
hmm

[12:34:41.0000] <annevk>
what if the inner <script> sets the contents?

[12:34:50.0000] <annevk>
and then alerts?

[12:38:38.0000] <annevk>
Hmm, so in data:text/xml,<html xmlns="http://www.w3.org/1999/xhtml"><body/><style>body{background:lime} <script>document.documentElement.childNodes[1].textContent="body{background:purple}"</script> body{background:blue} </style></html> you can effect the tree while parsing

[12:38:48.0000] <annevk>
What if you remove the parent element?

[12:39:59.0000] <annevk>
Wait what?

[12:40:00.0000] <annevk>
data:text/xml,<html xmlns="http://www.w3.org/1999/xhtml"><body/><style><script>document.removeChild(document.documentElement.childNodes[1])</script> body{background:blue} </style></html>

[12:40:07.0000] <annevk>
<style> remains in the tree...

[12:40:18.0000] <annevk>
Hixie: any clue how that works?

[12:41:05.0000] <Hixie>
you'd have to check the xml parser spec

[12:41:08.0000] <Hixie>
oh wait. there isn't one.

[12:41:11.0000] <annevk>
Good one

[12:41:17.0000] <Hixie>
http://www.hixie.ch/tests/evil/page-loading/incremental/004.cgi

[12:41:22.0000] <annevk>
I'm reminded of jgraham who told me I already wasted a morning on XML

[12:41:28.0000] <Hixie>
that changes the style while the parser is running in html

[12:41:47.0000] <Hixie>
looks like it doesn't parse if the style is parser-provided

[12:52:08.0000] <annevk>
"The JQuery syntax should integrate Blink. All functions $() should run natively" :-)

[12:52:56.0000] <jory>
document.querySelector is pretty verbose when you compare it to $

[12:53:23.0000] <TabAtkins_>
find() is pretty close to $(), though.

[12:53:33.0000] <annevk>
It would not be on Window

[12:53:43.0000] <dekiss>
where can I apply to help building HTML

[12:53:55.0000] <annevk>
You don't apply really, you just help out

[12:54:23.0000] <TabAtkins>
I thought we decided it would be okay to override the existing window.find()?

[12:55:13.0000] <annevk>
I'm not privy to that discussion. In fact, we're not going to name it find() as far as I know, but query(), as find() clashed.

[12:55:27.0000] <TabAtkins>
Hm, I didn't know that.

[12:56:09.0000] <Hixie>
find() clashes with the find in page API

[12:56:15.0000] <Hixie>
but i believe we're planning on dropping that API

[12:56:21.0000] <Hixie>
so it might not clash for long

[12:56:28.0000] <TabAtkins>
Yeah, that's what I was referring to.

[12:58:58.0000] <annevk>
At some point it might be some module-like thing, although I don't really see modules reducing the boilerplate much...

[13:00:02.0000] <annevk>
I think that's what I dislike most about modules, the increase in boilerplate for simple things. You'll just get people wrapping a bunch of modules in some other module and at some point it becomes hard to count all the turtles.

[13:00:21.0000] <TabAtkins>
...What are you responding to, Anne?

[13:01:11.0000] <annevk>
Just trying to imagine the way forward from TC39's perspective.

[13:01:47.0000] <TabAtkins>
Right, but what is "it" which might be some module-like thing?

[13:03:20.0000] <annevk>
Oh, find/query

[13:03:37.0000] <annevk>
And everything else...

[13:07:16.0000] <Ms2ger>
SimonSapin, not exaggerated much :)

[13:08:28.0000] <SimonSapin>
Ms2ger: You’re hurting my feelings :)

[13:13:50.0000] <dekiss>
annevk-cloud thanks, sorry for late reply :S

[13:45:51.0000] <dekiss>
annevk-cloud how to help more specifically, here in the channel? or mailing list or..?

[13:46:22.0000] <Ms2ger>
Write tests

[13:46:25.0000] <Ms2ger>
Review tests

[13:46:27.0000] <Ms2ger>
Write specs

[13:46:30.0000] <Ms2ger>
Review specs

[13:46:34.0000] <Ms2ger>
Write implementations

[13:46:36.0000] <Ms2ger>
Review implementations

[13:51:46.0000] <annevk-cloud>
What Ms2ger just said dekiss; you can find pointers on the WHATWG Wiki

[13:55:49.0000] <Domenic_>
http://wiki.whatwg.org/wiki/FAQ for the lazy

[14:08:38.0000] <annevk>
data:text/xml,<html xmlns="http://www.w3.org/1999/xhtml"><body/><style>body{background:blue}<script>document.removeChild(document.documentElement.childNodes[1])</script></style></html>

[14:08:51.0000] <annevk>
Both Gecko and Chrome throw "NotFoundError"

[14:09:19.0000] <annevk>
However, if you change document.removeChild into alert it will give you the element you expect

[14:09:35.0000] <Ms2ger>
Hmm? What else would it do?

[14:09:59.0000] <annevk>
Which suggests there is a bug in http://dom.spec.whatwg.org/#concept-node-pre-remove for XML I guess?

[14:10:17.0000] <Ms2ger>
document.documentElement.childNodes[1] is a grandchild of document

[14:10:33.0000] <annevk>
Combined with the XML parser not being defined.

[14:10:39.0000] <annevk>
Oh

[14:11:42.0000] <annevk>
Thanks Ms2ger!

[14:11:51.0000] <Ms2ger>
Np :)

[14:12:02.0000] <annevk>
data:text/xml,<html xmlns="http://www.w3.org/1999/xhtml"><body/><style>body{background:blue}<script>document.documentElement.removeChild(document.documentElement.childNodes[1])</script>body{background:red}</style></html>

[14:12:14.0000] <astearns>
I'd prepend "report implementation bugs" to Ms2ger's list above

[14:12:41.0000] <Ms2ger>
astearns, sure, if you put in "accurate" :)

[14:13:03.0000] <astearns>
that could be added to all of the list items :)

[14:13:13.0000] <annevk>
So the question is more what the parser does once such an element is removed.

[14:13:22.0000] <Ms2ger>
Review accurate specs? Nah, that's not useful

[14:13:24.0000] <annevk>
data:text/xml,<html xmlns="http://www.w3.org/1999/xhtml"><body/><style>body{background:blue}<script>alert(document.documentElement.childNodes.length)</script>body{background:red}</style><test/></html>

[14:13:35.0000] <annevk>
Points out the <script> executes while parsing

[14:14:10.0000] <annevk>
data:text/xml,<html xmlns="http://www.w3.org/1999/xhtml"><body/><style>body{background:blue}<script>alert(document.documentElement.childNodes[1].textContent)</script>body{background:red}</style><test/></html>

[14:14:30.0000] <annevk>
Points out you it executes at </script>

[14:14:53.0000] <annevk>
So if <style> is gone at that point, how does the parsing still go correctly?

[14:15:08.0000] <Hixie>
why would it not?

[14:15:11.0000] <annevk>
Man, this XML thing keeps being fascinating

[14:16:41.0000] <annevk>
data:text/xml,<html xmlns="http://www.w3.org/1999/xhtml"><body/><style>body{background:blue}<script>var s=document.documentElement.childNodes[1];document.documentElement.removeChild(s)</script>body{background:red}</style><script>alert(s.textContent)</script></html>

[14:17:04.0000] <annevk>
Ah okay, so it simply puts the content into the removed element and then once that closes goes back to the original tree

[14:21:01.0000] <Hixie>
same as the html parser

[15:03:58.0000] <TabAtkins>
...I have no idea how my code worked before.

[15:04:05.0000] <Hixie>
been there

[15:04:49.0000] <Hixie>
a schrödinbug

[15:06:59.0000] <TabAtkins>
It's not really, though.  I just did something unrelated which showed me that I had named one function's argument a certain thing, but I was using a completely different name for it inside the function.

[15:07:08.0000] <TabAtkins>
I still don't know how it's working.

[15:07:24.0000] <TabAtkins>
Unless I'm leaking an "editor" variable globally somewhere?

[15:10:36.0000] <Hixie>
oh it does still work?

[15:10:57.0000] <Hixie>
i meant the case where you find something shouldn't work, and mysteriously, it stops working, despite the fact that it used to work fine before you noticed it shouldn't work.

[15:11:08.0000] <Hixie>
SimonSapin: environment encoding thing: done

[15:11:44.0000] <TabAtkins>
Right, I know what a schrodinbug is.

[15:11:48.0000] <Hixie>
i now have a requirement that basically says "the A from spec B is the C from spec D, if any, or else the E from spec F"

[15:11:50.0000] <TabAtkins>
This is one where my code currently works, but I don't know how.

[15:11:54.0000] <SimonSapin>
Hixie: r8390 right? Thanks, will review tomorrow

[15:12:18.0000] <Hixie>
TabAtkins: that sounds even more frustrating, possibly

[15:12:28.0000] <Hixie>
SimonSapin: next one, i think

[15:13:30.0000] <SimonSapin>
right

[15:22:35.0000] <TabAtkins>
Following in Anne's proud tradition, my blog comments are unusable in FF for the next two months.


2014-01-14
[16:03:35.0000] <annevk>
smola: : failing is because of port parsing

[16:04:08.0000] <annevk>
smola: so it doesn't really count I think

[16:10:31.0000] <smola>
annevk: yes, and then if you do a.host = 'a:b' the behaviour also differs

[16:10:54.0000] <annevk>
smola: yeah I know, URLs are a mess

[16:11:20.0000] <annevk>
smola: I personally like what we have now, modulo the check needing to come after IDNA

[16:12:00.0000] <annevk>
smola: I'd really like to let someone else do the domain parsing entirely

[16:12:22.0000] <annevk>
smola: but the IETF / Unicode crowd isn't doing much at the moment

[16:13:47.0000] <smola>
as far as I see, the post-ToASCII checks (and deciding which characters to allow there) are the only thing left?

[16:16:45.0000] <smola>
well, there's other stuff such as length limits according to DNS

[16:16:53.0000] <smola>
not sure if that should be part of the spec though

[16:19:25.0000] <annevk>
if they are observable before we hit DNS, yes

[16:19:31.0000] <annevk>
IDNA does those checks

[16:19:34.0000] <smola>
yeah, that is, max 127 labels, 63 bytes per label, 253 bytes in the full textual representation

[16:19:39.0000] <smola>
or something like that

[16:19:41.0000] <annevk>
but maybe they are skipped if everything is ASCII?

[16:19:44.0000] <smola>
Firefox checks some of them

[16:21:19.0000] <smola>
I think they're done independently of it being ASCII or not

[16:21:24.0000] <smola>
but it's too late to check it :p

[16:21:28.0000] <annevk>
oh, 12:21, I'll have a look tomorrow I suppose

[16:23:30.0000] <smola>
yup, I'm leaving for today, good night

[16:28:05.0000] <annevk>
nn

[23:01:41.0000] <zcorpan_>
annevk-cloud: re http://krijnhoetmer.nl/irc-logs/whatwg/20140113#l-961 check the error console

[23:01:52.0000] <zcorpan_>
annevk-cloud: you probably want document.documentElement.removeChild

[23:04:49.0000] <zcorpan_>
oh that was pointed out already

[23:07:20.0000] <zcorpan_>
annevk-cloud: presto's xml parser (and old html parser) would go wacky when removing an element during parsing, iirc

[00:35:20.0000] <Ms2ger>
/me wonders what happened to initialTime

[00:41:14.0000] <Ms2ger>
http://html5.org/tools/web-apps-tracker?from=7045&to=7046 apparently

[02:37:17.0000] <annevk>
Lol at www-tag

[02:45:42.0000] <annevk>
If server configuration became easier CORS could be a setting at the DNS level. Where servers announce they know CORS exists, thereby avoiding the need for preflight requests.

[02:46:18.0000] <annevk>
Could also configure HSTS there...

[02:53:44.0000] <darobin>
and CSP

[02:55:05.0000] <annevk>
CSP is not quite global; CORS isn't quite either of course...

[03:18:06.0000] <smola>
zcorpan_: you mentioned a set of 102,000 pages containing weird URLs

[03:18:10.0000] <smola>
zcorpan_: is that public?

[03:19:00.0000] <zcorpan_>
smola: http://webdevdata.org

[03:20:15.0000] <annevk>
smola: https://www.w3.org/Bugs/Public/show_bug.cgi?id=23009

[03:23:19.0000] <smola>
annevk: yeah, I was checking now, thanks

[03:23:56.0000] <annevk>
smola: I guess I should also ban 0x09, 0x0A, and 0x0D

[03:24:26.0000] <smola>
zcorpan_: awesome, thank you

[03:24:55.0000] <annevk>
/me adds those

[03:25:19.0000] <smola>
annevk: if re-parsing must give the same result, yes

[03:25:54.0000] <annevk>
smola: we want idempotency as much as possible for security

[03:26:44.0000] <smola>
yes, I also want idempotency because I use this code for URL normalization in crawling

[03:26:53.0000] <smola>
non-idempoency: more duplicates

[03:29:21.0000] <annevk>
Still a bunch of open bugs around percent encoding :/

[03:29:22.0000] <annevk>
I hate that shit

[03:33:04.0000] <gjsrivastava>
Hi

[03:36:27.0000] <smola>
annevk: btw, has someone ever seen such weird hostnames in weird intranet configurations?

[03:36:51.0000] <smola>
/me thinks those intranets are just magic elves

[03:37:06.0000] <hsivonen>
annevk: lots of cool things could be done if 1) DNS was easy to configure (it actually can be pretty easy), 2) DNSSEC was deployed (can be bought as a service already) and 3) middle boxes allowed currently-unusual DNS responses to flow through

[03:37:17.0000] <hsivonen>
annevk: the situation with #3 is really sad

[03:37:26.0000] <hsivonen>
middle boxes are sad

[03:37:29.0000] <annevk>
middleware is sad

[03:38:15.0000] <annevk>
smola: hmm, I should have done some testing maybe, I cannot reproduce even the label limits

[03:39:50.0000] <annevk>
E.g. try

[03:39:54.0000] <annevk>
<a href="http://0123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789/">test</a>

[03:39:55.0000] <annevk>
<script>w(document.querySelector("a").host.length)</script>

[03:40:38.0000] <annevk>
IDNA interoperability is so sad

[03:41:50.0000] <smola>
annevk: true, it actually works in chrome

[03:42:00.0000] <smola>
of course it'll never resolve

[03:42:06.0000] <annevk>
smola: works in Firefox too

[03:42:41.0000] <smola>
hm, or it might resolve with /etc/hosts ?

[03:43:48.0000] <annevk>
I suppose it could, I don't really have any desire to go lower on the stack at the moment

[03:43:53.0000] <annevk>
This part is fucked up enough as is

[03:44:42.0000] <smola>
on Firefox+Linux it does not resolve it in any case

[04:05:33.0000] <hsivonen>
"A new body is required to take on the responsibility of providing standards for an open web." http://lists.w3.org/Archives/Public/public-restrictedmedia/2014Jan/0070.html

[04:06:17.0000] <Ms2ger>
WHATWG?

[04:09:54.0000] <jgraham>
Not the Web Hypermedia Including Concessions for Hollywood Working Group?

[04:14:08.0000] <Ms2ger>
Clever, sir, clever

[04:33:44.0000] <smola>
anti-DRM candidate emailing from @live.com, interesting :p

[04:43:47.0000] <darobin>
nice one jgraham, really nice one

[04:43:55.0000] <darobin>
and then we could go WHICH hunting

[04:46:37.0000] <gjsrivastava>
sankha93 are you around?

[04:47:25.0000] <blackhair>
gjsrivastava: I know sankha but he is not here right now

[06:41:55.0000] <jgraham>
Domenic_: Note that "will" in spec language is a statement of fact

[06:43:32.0000] <jgraham>
So if you were to say "these steps will be run asynchronously", there would have to be text elsewhere that actually caused those steps to run

[07:29:49.0000] <annevk>
Why do we not have utility functions for specifications?

[07:29:59.0000] <annevk>
E.g. hex bytes to number

[07:32:50.0000] <Domenic_>
jgraham: hmm thanks, good to note

[07:33:21.0000] <annevk>
In fact, that's not much more than a note

[07:33:39.0000] <annevk>
A statement of fact is more like "A has an associated B."

[07:34:19.0000] <annevk>
Facts describe the world, notes explain it, and requirements make it run.

[07:34:41.0000] <Domenic_>
It felt like a fact to me. It's a requirement to run those steps, but a fact about those steps is that they will happen asynchronously.

[07:34:54.0000] <Domenic_>
although, they don't have to be asynchronous

[07:34:59.0000] <Domenic_>
if e.g. that data is cached in memory

[07:35:18.0000] <annevk>
Well, notes should be factual, but they are usually duplicative.

[07:38:34.0000] <jgraham>
Domenic_: http://ln.hixie.ch/?start=1140242962&count=1 is the canonical source on this

[07:38:52.0000] <Domenic_>
jgraham: ah excellent.

[07:46:25.0000] <annevk>
Seems I use statement of fact more as a definition. I try to avoid the statements of facts Hixie talks about, as, as he points out, they are confusing

[07:47:35.0000] <jgraham>
Yeah. In this case I think it would be very confusing.

[07:47:53.0000] <annevk>
http://www.w3.org/TR/2014/NOTE-calendar-api-20140114/

[07:47:53.0000] <annevk>
http://www.w3.org/TR/2014/NOTE-messaging-api-20140114/

[07:47:53.0000] <annevk>
http://www.w3.org/TR/2014/NOTE-system-info-api-20140114/

[07:47:55.0000] <annevk>
http://www.w3.org/TR/2014/NOTE-contacts-api-20140114/

[07:47:57.0000] <annevk>
http://www.w3.org/TR/2014/NOTE-gallery-20140114/

[07:47:59.0000] <annevk>
http://www.w3.org/TR/2014/NOTE-webintents-local-services-20140114/

[07:48:05.0000] <annevk>
bye bye APIs?

[07:54:36.0000] <annevk>
Domenic_: in https://github.com/domenic/promises-unwrapping/issues/85 what does getWebApplicationsMetadata() do?

[07:55:03.0000] <annevk>
Domenic_: if that's about asking the user something, I don't really get how it can be synchronous

[07:56:27.0000] <Domenic_>
annevk: I think marcosc's intent was that it gets <title> and some <meta> tags, or some manifest stuff. The user-asking happens in userAgentSpecificChoooser

[07:56:53.0000] <annevk>
Domenic_: which also seems sync in your text

[07:57:15.0000] <annevk>
Domenic_: in particular https://github.com/domenic/promises-unwrapping/blob/master/docs/writing-specifications-with-promises.md#addbookmark-- seems very bad

[07:57:35.0000] <Domenic_>
annevk: userAgentSpecificChoooser is async

[07:57:51.0000] <annevk>
Domenic_: you cannot tell from that example text

[07:58:18.0000] <Domenic_>
annevk: yeah, we are discussing on www-tag how I seem to have implicitly assumed (as a JS programmer) that any algorithmic step that involves asking the user would automatically be async

[07:58:22.0000] <annevk>
Domenic_: from that example spec text you'd implement a sync chooser and resolve and then return

[07:58:54.0000] <Domenic_>
you can see similar confusion in my https://github.com/domenic/promises-unwrapping/blob/master/docs/writing-specifications-with-promises.md#delay-ms-, which as boris points out would naively block for ms milliseconds

[07:59:20.0000] <annevk>
Domenic_: yes

[07:59:52.0000] <annevk>
Domenic_: that's why the return early, but continue running steps in the background makes a lot of sense

[08:00:00.0000] <annevk>
Domenic_: I haven't seen anyone been confused with those

[08:00:05.0000] <Domenic_>
annevk: I maintain that it makes zero sense at all

[08:00:20.0000] <Domenic_>
to me it translates to return x; setImmediate(function () { /* do those extra steps */ })

[08:00:25.0000] <Domenic_>
(pretending that setImmediate is a thing)

[08:00:55.0000] <annevk>
no, it's much more like set up an internal event listener to wait for something and then return

[08:01:04.0000] <annevk>
the remainder of the steps explain what

[08:01:19.0000] <annevk>
you don't queue a task to wait for something, you wait for something to be queued

[08:02:53.0000] <Domenic_>
well, where does that internal event listener get set up

[08:02:58.0000] <Domenic_>
it certainly can't get set up after you return

[08:03:19.0000] <marcosc>
/me catches up... denies everything while doing so 

[08:03:31.0000] <annevk>
Domenic_: shrug

[08:04:06.0000] <annevk>
Whether you say "The remainder is run asynchronous. Return here." "Return here, but continue doing this" seems immaterial

[08:04:24.0000] <jgraham>
So the Hixie model isn't beautiful in that it doesn't map directly to programming language constructs

[08:04:32.0000] <annevk>
I'm interested in cleaning it up further, but it's much more clear than what you have, which leads everyone to assume we suddenly have sync constructs

[08:04:41.0000] <jgraham>
But it does do the right thing

[08:06:53.0000] <Domenic_>
yes, what i have right now is clearly wrong

[08:07:18.0000] <Domenic_>
and, after everyone explaining exactly how wrong, i'll agree it's more wrong than the current model

[08:07:25.0000] <Domenic_>
but i think it's important to clean up the current model

[08:09:11.0000] <marcosc>
oh, seems I missed the update to that bug

[08:09:31.0000] <marcosc>
I'll have to re-read the document

[08:09:54.0000] <marcosc>
Domenic_: thanks anyway for notifying me of the update - sorry I missed it. Should I review the doc now?

[08:10:51.0000] <Domenic_>
marcosc: sure! everyone else is doing it now :). http://lists.w3.org/Archives/Public/www-tag/2014Jan/0038.html http://lists.w3.org/Archives/Public/www-tag/2014Jan/0052.html

[08:12:01.0000] <marcosc>
Domenic_: ok, will try to do it later today

[08:12:34.0000] <marcosc>
Btw, I found it quite helpful last time around. It was the missing manual :)

[08:13:29.0000] <annevk>
Domenic_: so I think typically you want to listen for activity and then queue a task to do several things in response

[08:13:51.0000] <annevk>
Domenic_: e.g. XHR listens to network activity and then queues a single task to dispatch several events and update some properties

[08:14:14.0000] <annevk>
Domenic_: it's very common to group updating a property and dispatching the event directly after

[08:14:53.0000] <annevk>
Domenic_: I suspect most things can be implemented given those two concepts

[08:15:05.0000] <annevk>
Domenic_: prolly some legacy exceptions in HTML though

[08:15:58.0000] <Domenic_>
annevk: hmm ok, will study.

[08:16:35.0000] <Domenic_>
annevk: I find the task queues confusing though; e.g. it seems like it should be possible to call back from C++ to JS without using a task queue

[08:16:52.0000] <annevk>
Domenic_: if it's sync, sure

[08:17:11.0000] <annevk>
Domenic_: if it's async, not really, you'd get race issues

[08:17:19.0000] <jgraham>
Right. Task queues are just the event loop for the spec

[08:17:19.0000] <Domenic_>
even if it's async... e.g. in Node when I program C++ extensions, I can just call back into JS.

[08:17:32.0000] <annevk>
Domenic_: how do you know JS is not running?

[08:17:35.0000] <Domenic_>
it can be either sync or async; promises normalize it to async

[08:17:48.0000] <Domenic_>
annevk: fair point

[08:19:06.0000] <annevk>
I don't know what Node's model looks like unfortunately, but I do know that for the web platform we need a task queue.

[08:21:39.0000] <Domenic_>
nah, I think it has a task queue, I just didn't realize I was using it.

[08:21:54.0000] <Domenic_>
this helped click with me exactly what "queue a task" means...

[08:22:17.0000] <Domenic_>
I thought it was something like setImmediate(taskCode), albeit with a task queue name that the loop does complicated stuff with

[08:22:47.0000] <Domenic_>
but it's really more about proxying back to JS from C++ land, it sounds like...

[08:22:47.0000] <jgraham>
The name isn't complicated

[08:23:27.0000] <jgraham>
the event loop pulls a task off one of the task queues to run

[08:23:37.0000] <jgraham>
The name tells you which task queue

[08:23:38.0000] <Domenic_>
it's a lot more complicated that fifo

[08:23:44.0000] <jgraham>
a task goes on

[08:24:03.0000] <jgraham>
So things are fifo per queue

[08:24:11.0000] <jgraham>
But not fifo overall

[08:24:35.0000] <jgraham>
But of course UAs don't pick a queue at random

[08:24:58.0000] <annevk>
A simpler example of the listen, queue thing is setTimeout()

[08:25:01.0000] <jgraham>
They can have internal priority e.g. always process user events like click or whatever first

[08:25:17.0000] <annevk>
First you listen until some period of time has passed, then you queue a task to do some operation

[08:25:41.0000] <annevk>
You need to queue a task because mouse events, network events, parsing, etc. might all go on as well and they need to be ordered somehow

[08:29:45.0000] <Domenic_>
Yeah

[08:29:50.0000] <Domenic_>
I should blog all this learnings

[08:36:51.0000] <annevk>
Domenic_: as for the ES being complicated and more precise, that's kinda why we have IDL

[08:37:22.0000] <annevk>
Domenic_: now if the ES spec defined IDL and had some of its own stuff in terms of that, we might be able to make the whole thing more portable...

[08:40:15.0000] <Domenic_>
annevk: this is more about algorithmic steps though

[08:40:43.0000] <Domenic_>
annevk: I feel I often see web specs say things in one or two sentences that would take a page to express in ES-spec's precision

[08:42:02.0000] <jgraham>
So one of the main complaints that we get about web specs is that we aim for precision rather than the touchy-feely specs of yore

[08:45:20.0000] <annevk>
It's funny really

[08:45:37.0000] <annevk>
But I do admit to taking shortcuts now and then

[08:45:41.0000] <annevk>
There's too much to define

[08:46:22.0000] <annevk>
But I'm not sure if it then immediately lacks precision. It only lacks precision if you can implement it in two different ways...

[08:51:19.0000] <Domenic_>
Right... I'm not sure I'd know how to spot such instances. For the ES spec I can always see how you would, e.g. by inserting objects that trigger edge case behaviors, or testing esoteric properties of the objects you are given.

[08:52:02.0000] <annevk>
IDL cleans most of that up

[08:53:11.0000] <jgraham>
Indeed, IDL takes care of a lot of the sanitisation

[08:53:30.0000] <annevk>
Domenic_: as for the algorithmic steps, you could have shorthands for all the common operations

[08:54:35.0000] <annevk>
Domenic_: that do the magic, but it'd require a huge amount of effort to figure out all the primitives across the many many APIs

[08:55:40.0000] <jgraham>
You also run the risk of lasagne specs

[08:56:11.0000] <jgraham>
Which are neatly divided into layers, but impossible to understand overall by reading any one bit of text

[08:56:24.0000] <annevk>
But but but layering

[09:44:44.0000] <dglazkov>
good morning, Whatwg!

[09:45:35.0000] <jory>
Good morning to you, dglazkov.

[11:52:09.0000] <Ms2ger>
http://lists.w3.org/Archives/Public/www-dom/2014JanMar/0016.html

[15:11:09.0000] <Hixie>
how very sad, scrollable regions don't get 'focus' events

[15:13:15.0000] <Hixie>
hm, they do if you tab, in firefox

[15:28:31.0000] <Hixie>
hah, chrome gets <area> focusing wrong

[15:28:57.0000] <Hixie>
if two <img>s use the same <area>, and you click on the second <img>'s use of the <area>, the first one gets the focus ring

[15:29:25.0000] <Hixie>
firefox renders them right but sends a focus event again if you just tap from one to the other

[15:29:31.0000] <Hixie>
even though nothing changed focus at the element level


2014-01-15
[18:12:01.0000] <dekiss>
annevk-cloud

[18:12:05.0000] <dekiss>
here?

[18:12:12.0000] <dekiss>
hwo can I help making the html ? ^^

[18:12:19.0000] <dekiss>
hehe

[18:12:43.0000] <dekiss>
suggestions on mailing list are only considered to be implemented?

[20:36:17.0000] <JonathanNeal>
Is there ARIA role or similar attribute that identifies a link as being to the current page, like one would find in a navigation menu?

[20:47:57.0000] <Hixie>
JonathanNeal: the href="" pointing to the local page seems sufficient to indicate that, no?

[20:49:36.0000] <JonathanNeal>
Perhaps. Still, I was wondering if there was anything more blatantly assistive.

[20:50:15.0000] <Hixie>
i don't understand

[20:50:21.0000] <Hixie>
assistive how?

[20:50:28.0000] <Hixie>
the AT has access to the link...

[20:51:03.0000] <JonathanNeal>
Hixie: some ATs are not as A as others. Is rel="self" valid?

[20:52:01.0000] <Hixie>
in general i would strongly recommend against us making anything valid that is redundant with existing data

[20:52:06.0000] <Hixie>
since that's just asking for it to be inconsistent

[20:52:50.0000] <JonathanNeal>
Hixie: responding to "i don't understand", what I mean is: in theory, navigations with self pointing links have been around for ages so I would hope this has been resolved by ATs without the need for assistive roles or aria-*. Still, I'm asking because I do not know if there is, in fact, a way to be explicit.

[20:53:13.0000] <Hixie>
how is href="" not explicit?

[20:53:20.0000] <Hixie>
i don't understand what you mean by explicit

[20:55:48.0000] <JonathanNeal>
To be clear, you mean an href with an empty value?

[20:56:51.0000] <Hixie>
no i mean the href="" attribute

[20:58:37.0000] <JonathanNeal>
You mean an href pointing to the page itself should be explicit enough for any AT, and anything additional is harmfully redundant?

[20:58:52.0000] <dekiss>
Hixie can I be editor of HTML ? :)

[20:59:02.0000] <Hixie>
JonathanNeal: "harmfully redundant" is tautological, but yeah

[20:59:04.0000] <Hixie>
dekiss: sure

[20:59:11.0000] <dekiss>
^^ NICE :)

[20:59:27.0000] <dekiss>
is there some official application I should send?

[20:59:47.0000] <Hixie>
yeah

[20:59:54.0000] <JonathanNeal>
Hixie: not entirely so, as is the case for roles and html5 attributes.

[21:00:04.0000] <JonathanNeal>
err, html5 elements

[21:00:08.0000] <Hixie>
dekiss: attach a patch to bug https://www.w3.org/Bugs/Public/show_bug.cgi?id=23659

[21:00:24.0000] <Hixie>
JonathanNeal: it's just as redundant for those

[21:00:26.0000] <JonathanNeal>
<nav role="navigation"> redundant but not necessarily harmful.

[21:00:29.0000] <dekiss>
Hixie THANKS!

[21:00:34.0000] <Hixie>
JonathanNeal: it's both redundant and harmful

[21:00:49.0000] <Hixie>
dekiss: (the patch should actually fix the bug, obviously)

[21:00:54.0000] <Hixie>
dekiss: (not just any random patch)

[21:01:29.0000] <dekiss>
ok :)

[21:02:31.0000] <JonathanNeal>
well, I don't believe that redundancy for compatibility is as harmful as redundancy for, say, uniformity or verbosity.

[21:02:50.0000] <JonathanNeal>
If you don't sympathize with that statement, I'd love to read your thoughts on why.

[21:03:23.0000] <Hixie>
redundancy in HTML leads to copy-pasta which leads to ATs being given bogus data where they would instead work fine if there was no redundancy

[21:07:06.0000] <JonathanNeal>
Thanks.

[21:08:20.0000] <dekiss>
Hixie you think Webgl will be used much?

[21:12:44.0000] <JonathanNeal>
Hixie, speaking of redundancy, do you think the <head> element has any real value?

[21:13:03.0000] <Hixie>
dekiss: not my department

[21:13:09.0000] <Hixie>
JonathanNeal: never really thought about it, since we can't drop it

[21:13:12.0000] <dekiss>
ok

[21:16:23.0000] <JonathanNeal>
That's interesting and curious. So, if you did think about it, and found it to be the meta equivalent of <font>, why couldn't you drop it?

[21:19:10.0000] <Hixie>
JonathanNeal: we can't drop it just like we can't drop <font>

[21:19:18.0000] <Hixie>
JonathanNeal: browsers implement it, pages depend on it

[21:19:45.0000] <Hixie>
JonathanNeal: we couldn't even make it non-conforming (which is what HTML4 did with <font>) since the parser implies it

[21:19:47.0000] <JonathanNeal>
I just learned something. I thought <font> was deprecated in HTML4 and removed in HTML5.

[21:20:02.0000] <Hixie>
it's obsolete, but browsers still have to support it

[21:23:39.0000] <dekiss>
Chrome has some bug with antialising on Helvetica Neur

[21:23:58.0000] <dekiss>
also it had with css transitions on fixed elements

[21:24:12.0000] <dekiss>
where can I send those bugs?

[21:28:52.0000] <GPHemsley>
Hixie: Is the HTML UA stylesheet available in a single file or block of text?

[21:29:29.0000] <Hixie>
dekiss: crbug.com

[21:29:53.0000] <Hixie>
GPHemsley: it's available in a single file, but not separate from interleaving other text

[21:30:05.0000] <Hixie>
GPHemsley: in part because it's not entirely expressible in CSS

[21:30:08.0000] <GPHemsley>
Hixie: :P

[21:30:25.0000] <GPHemsley>
fair enough, I suppose

[21:31:33.0000] <GPHemsley>
/me uses CSS 2.1's default stylesheet for HTML 4 instead.

[21:32:15.0000] <Hixie>
GPHemsley: what's your purpose?

[21:32:28.0000] <GPHemsley>
just looking for a sample CSS file

[21:32:40.0000] <Hixie>
ah

[21:34:37.0000] <GPHemsley>
/me wonders how easy it is to find a sample ECMAScript file that's not contaminated by JavaScript extensions...

[21:36:32.0000] <JonathanNeal>
GPHemsley: last updated 2012 http://www.iecss.com/whatwg.css

[21:38:24.0000] <dekiss>
thanks

[21:39:35.0000] <GPHemsley>
JonathanNeal: Thanks; need an ECMAScript file now.

[21:41:37.0000] <JonathanNeal>
Are there (and what are the) standard ways to communicate the language of a document outside of using <html> with lang=""?

[21:44:58.0000] <GPHemsley>
JonathanNeal: The Content-Language HTTP header

[21:47:05.0000] <Hixie>
The Content-Language HTTP header actually sets the intended languages understood by the reader, not the language of the document.

[21:47:10.0000] <Hixie>
iirc

[21:48:47.0000] <GPHemsley>
Hixie: That's Accept-Language

[21:49:01.0000] <GPHemsley>
JonathanNeal: http://www.w3.org/International/questions/qa-http-and-lang

[21:49:52.0000] <GPHemsley>
JonathanNeal: http://www.w3.org/International/techniques/authoring-html#language

[21:50:12.0000] <GPHemsley>
JonathanNeal: http://www.w3.org/International/tutorials/language-decl/

[21:57:09.0000] <Hixie>
GPHemsley: no, i mean content-language

[21:57:14.0000] <Hixie>
GPHemsley: accept-language is what the client sends

[21:58:05.0000] <GPHemsley>
Hixie: Content-Language is the language of the document. Not sure what you expect the server to know about what languages the reader understands...

[21:58:43.0000] <Hixie>
"The Content-Language entity-header field describes the natural language(s) of the intended audience for the enclosed entity."

[22:00:16.0000] <GPHemsley>
== "the language of the document"

[22:01:55.0000] <Hixie>
not necessarily

[22:02:46.0000] <Hixie>
consider for example a document written in french but intended to teach english speakers french

[22:07:33.0000] <JonathanNeal>
i understand the arguments, but i didn't catch which header the server should send, Content-Language?

[22:08:50.0000] <Hixie>
lang="".

[22:09:03.0000] <Hixie>
if you want to set the language of the document, that's the best way to do it.

[22:10:37.0000] <GPHemsley>
Hixie: In that case, the server would probably send `Content-Language: fr, en`

[22:11:27.0000] <Hixie>
not much point a french language speaker looking at it :-)

[22:11:45.0000] <JonathanNeal>
Like I originally asked, the server solution was the one I was looking for. "Content-Language", got it.

[22:13:28.0000] <GPHemsley>
Hixie: Despite it being easy to get that interpretation in the letter of the spec, I'm not sure the spirit of the spec meant for that to be the case.

[22:13:50.0000] <GPHemsley>
JonathanNeal: Yeah, we're just quibbling about specs at this point. Content-Language is what you want. :)

[22:16:08.0000] <Hixie>
JonathanNeal: content-language is almost certainly not what you want unless you're writing some sort of intellectual exercise

[22:16:15.0000] <Hixie>
GPHemsley: specs mean what they say

[22:16:34.0000] <Hixie>
GPHemsley: you can't just say "well the spec says X, but it obviously means Y", and then interpret it as saying something else

[22:17:08.0000] <JonathanNeal>
Is there a header that defines the language of the document?

[22:17:27.0000] <Hixie>
no

[22:17:37.0000] <Hixie>
(but even if there was, you wouldn't want to use it)

[22:18:27.0000] <JonathanNeal>
Well, if I intend something for a French audience, can I use "Content-Language"?

[22:18:44.0000] <JonathanNeal>
I would surely be following the spec and not "obviously" interpretting.

[22:19:14.0000] <Hixie>
unless you're writing an intellectual exercise, you almost certainly don't want to bother with HTTP headers.

[22:19:18.0000] <Hixie>
almost nothing does anything useful with them.

[22:19:34.0000] <GPHemsley>
that's true

[22:20:40.0000] <GPHemsley>
Hixie: I do believe French is a "natural language of the intended audience" if the intended audience is trying to learn French.

[22:20:53.0000] <JonathanNeal>
Hixie: with all HTTP headers or just language ones?

[22:21:31.0000] <Hixie>
JonathanNeal: certainly all the metadata ones. things like caching headers have more implementations.

[22:21:43.0000] <JonathanNeal>
Cause I would disagree with all HTTP headers being useless in general. UTF-8 is super useful. So is X-UA.

[22:21:48.0000] <Hixie>
JonathanNeal: security-related headers tend to be useful, too

[22:21:54.0000] <Hixie>
UTF-8 isn't a header? :-)

[22:21:59.0000] <Hixie>
X-UA is way bogus.

[22:22:14.0000] <JonathanNeal>
UTF-8 comes with Content-Type

[22:22:37.0000] <Hixie>
content-type is mostly bogus too

[22:22:37.0000] <JonathanNeal>
And the HTTP spec is goofy and follows ISO.

[22:22:47.0000] <GPHemsley>
Hixie: Nearly by definition, the natural language(s) your intended audience must include whatever language the document is in.

[22:22:53.0000] <GPHemsley>
+of

[22:23:53.0000] <JonathanNeal>
But speaking of intellectual exercises, how many browsers require <!doctype html> to render the page in non quirks mode.

[22:23:54.0000] <JonathanNeal>
?

[22:23:55.0000] <GPHemsley>
Put another way, why would you send a document in a particular language to your intended audience if it was not one of their languages?

[22:24:17.0000] <GPHemsley>
42

[22:24:29.0000] <GPHemsley>
/me should go to bed...

[22:26:58.0000] <Hixie>
GPHemsley: to teach them the language, as above

[22:27:15.0000] <GPHemsley>
Hixie: But then it is one of their languages

[22:27:17.0000] <Hixie>
JonathanNeal: all of them, i think

[22:27:46.0000] <GPHemsley>
Hixie: It seems to all come down to what "of" means in this context.

[22:27:47.0000] <Hixie>
GPHemsley: i read zero hebrew, but one could make a page to teach me hebrew that was exclusive in hebrew (and lots of pictures, probably)

[22:28:40.0000] <GPHemsley>
Hixie: I still think Hebrew would be a "natural language of the intended audience" in that case.

[22:29:21.0000] <GPHemsley>
Also, "describe" and "specify" mean different things, IIUC.

[22:29:31.0000] <GPHemsley>
"Describe" is much more broad and hand-wavy

[22:29:38.0000] <Hixie>
hebrew isn't, by any definition i can see, a natural language of mine.

[22:30:05.0000] <JonathanNeal>
Hixie: actually, IE8+, Chrome, Safari.

[22:30:06.0000] <Hixie>
any definition that would put hebrew into the category of "hixie's natural languages" would put all natural languages into that category.

[22:30:29.0000] <Hixie>
JonathanNeal: and firefox, and opera

[22:30:48.0000] <GPHemsley>
Hixie: Yes, this use of "natural" is meant to distinguish from "artificial" or "constructed" or "programming"

[22:30:56.0000] <JonathanNeal>
Yea, I didn't realize that.

[22:31:12.0000] <GPHemsley>
Hixie: https://en.wikipedia.org/wiki/Natural_language

[22:31:33.0000] <Hixie>
GPHemsley: i'm not sure what you're arguing against

[22:31:35.0000] <GPHemsley>
Hixie: Don't confuse "natural" or "native"

[22:31:39.0000] <GPHemsley>
s/or/with/

[22:32:10.0000] <GPHemsley>
I don't either

[22:32:15.0000] <GPHemsley>
Which is why I should go to bed

[22:32:22.0000] <GPHemsley>
g'night everybody

[22:32:24.0000] <Hixie>
nn

[22:34:15.0000] <JonathanNeal>
That was fun. I learned a lot.

[23:05:49.0000] <gjsrivastava>
moo

[23:14:26.0000] <SteveF>
JonathanNeal: ATs recognise and expose in page links, there is no ARIA property to indicate them

[23:14:41.0000] <JonathanNeal>
Thanks, SteveF!

[23:19:02.0000] <SteveF>
JonathanNeal:  <nav role=navigation> is not yet redundant as <nav> is not exposed correctly via accessibility APIs in some browsers see https://rawgithub.com/stevefaulkner/HTML5accessibility/master/index.html, so suggest if you want AT users to recognise <nav> then addition of role=navigation is useful, but in general see note http://www.w3.org/html/wg/drafts/html/master/dom.html#aria-usage-note

[23:20:08.0000] <JonathanNeal>
Yes, there was some discussion about this. Ultimately, the redundancy will likely create some headaches later, once ATs have caught up.

[23:20:34.0000] <JonathanNeal>
So, my take is: for now, they're useful, but keep an eye on them.

[23:20:49.0000] <JonathanNeal>
You also wrote a blog about this that I consulted, SteveF.

[23:20:52.0000] <SteveF>
JonathanNeal: "Ultimately, the redundancy will likely create some headaches later, once ATs have caught up." how so?

[23:22:04.0000] <JonathanNeal>
SteveF: IMO, people will misunderstand the redundancy later and use the roles inappropriately during copy and pasting. That may or may not be similar to what Hixie was getting at when he mentioned copy-pasta. But that's my take.

[23:22:47.0000] <SteveF>
Jonathanneal: using <nav> for something other than a <nav> will always create a headache regardless of presence of role=navigation

[23:23:18.0000] <JonathanNeal>
I'm guilty of this too. Until today, I didn't know the difference between "menu(-item)" and "list(-item)", as I saw them used interchangeably in stackoverflow posts.

[23:24:14.0000] <JonathanNeal>
But someone is more likely to accidentally <nav><ul role="navigation"> if role is left in prominent examples on the web long enough.

[23:24:46.0000] <SteveF>
JonathanNeal: you may also find Using WAI-ARIA in HTML http://rawgithub.com/w3c/aria-in-html/master/index.html useful

[23:25:15.0000] <zcorpan>
i wonder why the AT situation with <nav> is still worse than role=navigation. the two were invented about at the same time

[23:25:29.0000] <SteveF>
JonathanNeal: <nav><ul role="navigation"> is a conformance error

[23:25:45.0000] <zcorpan>
and it was almost 10 years ago now

[23:26:41.0000] <SteveF>
zcorpan: because (some) browsers have not implemented the mappings

[23:27:56.0000] <SteveF>
zcorpan: bugs have been filed on implementers in most cases

[23:29:30.0000] <zcorpan>
yeah, so from that i conclude that accessibility is low priority

[23:32:39.0000] <SteveF>
zcorpan: depends on the browser

[23:33:12.0000] <zcorpan>
indeed

[00:28:25.0000] <zcorpan>
TabAtkins: did anything happen with <http://www.w3.org/mid/CAAWBYDCodt_vi7ajvnWLYMNLwN-8rjYqyMHW8jb40HXHOguVog⊙mgc> ?

[00:34:57.0000] <JonathanNeal>
SteveF: i'm having trouble finding something in the spec, is the first or root <header> implicitly role="banner" or *must* it be declared?

[00:37:14.0000] <Ms2ger>
Default: no role;

[00:37:15.0000] <Ms2ger>
If specified, role must be banner

[00:37:23.0000] <Ms2ger>
http://www.whatwg.org/specs/web-apps/current-work/multipage/elements.html#wai-aria

[00:39:48.0000] <JonathanNeal>
Thanks!

[01:17:47.0000] <SteveF>
JonathanNeal: am progressively adding such info into the 'head' section of each element definition , for example http://www.w3.org/html/wg/drafts/html/master/sections.html#the-header-element, the default role for <header>header element that is not a descendant of an article or section element.  is banner, otherwise no role

[01:18:27.0000] <SteveF>
(as implemented) in webkit/firefox

[01:23:46.0000] <JonathanNeal>
oh, that's different.

[01:25:13.0000] <SteveF>
JonathanNeal: suggest filing a bug against the whatwg spec as the w3c spec reflects implementations

[01:26:03.0000] <SteveF>
and implementer consensus

[02:03:21.0000] <xDevz>
If you need any help with development, full Website coding, Script modifications, small fixes and others.. msg me

[02:09:49.0000] <wilhelm>
No.

[02:13:28.0000] <odinho>
Agreed.

[02:13:46.0000] <annevk>
I'm somewhat against making private email public, but what the fuck: http://lists.w3.org/Archives/Public/public-restrictedmedia/2014Jan/0074.html

[02:17:54.0000] <Ms2ger>
wat

[02:47:13.0000] <annevk>
I don't like what Gecko and IE do for hostname

[02:47:17.0000] <annevk>
and Chrome does not do it

[02:47:43.0000] <annevk>
and Safari does not do it

[03:04:56.0000] <smaug____>
annevk: and what does Gecko do?

[03:05:10.0000] <annevk>
smaug____: https://www.w3.org/Bugs/Public/show_bug.cgi?id=11587

[03:05:15.0000] <smaug____>
/me doesn't see anything too interesting in the code

[03:05:23.0000] <annevk>
obj.hostname = "2001::1" works

[03:05:31.0000] <smaug____>
ah, that is low level stuff

[03:05:34.0000] <smaug____>
Necko stuff

[03:05:41.0000] <annevk>
even though 2001::1 needs to be [2001::1] in order to parse

[03:06:08.0000] <annevk>
so there is some check somewhere to see if there's a : in the input

[03:06:14.0000] <annevk>
same when serializing

[03:06:17.0000] <annevk>
it's somewhat ugly

[03:10:12.0000] <Ms2ger>
Dammit IPv6

[03:11:11.0000] <smaug____>
http://mxr.mozilla.org/mozilla-central/source/netwerk/base/src/nsStandardURL.h#352 https://bugzilla.mozilla.org/show_bug.cgi?id=134793

[03:11:54.0000] <smaug____>
er, even older

[03:12:15.0000] <smaug____>
https://bugzilla.mozilla.org/show_bug.cgi?id=124042

[03:12:29.0000] <smaug____>
ancient stuff

[03:13:35.0000] <smaug____>
hmm, or is there something when we parse the url

[03:19:19.0000] <annevk>
Ms2ger: reviewed https://critic.hoppipolla.co.uk/r/539 for you

[03:19:55.0000] <Ms2ger>
Thanks!

[03:21:21.0000] <annevk>
smaug____: so that StandardURL.h thing is for returning right?

[03:22:00.0000] <annevk>
well yeah must be

[03:23:53.0000] <annevk>
http://mxr.mozilla.org/mozilla-central/source/netwerk/base/src/nsStandardURL.cpp#1447 seems to be for setting

[03:25:44.0000] <annevk>
http://mxr.mozilla.org/mozilla-central/source/netwerk/base/src/nsStandardURL.cpp#387

[03:26:08.0000] <annevk>
it has the exact weird ass magic you'd expect

[03:26:18.0000] <smaug____>
yup

[03:26:35.0000] <annevk>
and it's been there since the CVS era

[03:27:14.0000] <smaug____>
https://bugzilla.mozilla.org/show_bug.cgi?id=103916

[03:28:16.0000] <annevk>
that bug doesn't mention IPv6

[03:28:25.0000] <smaug____>
but look at the patch

[03:29:02.0000] <annevk>
whoa, Alec Flett is also from back in the days

[03:30:07.0000] <annevk>
smaug____: but given how much code it adds I guess it's even older

[03:30:12.0000] <annevk>
smaug____: this seems more like a rewrite

[03:31:27.0000] <annevk>
hmm maybe not

[03:31:50.0000] <jgraham>
annevk: How many digits in the bug number do you need to make you happy? :p

[03:35:41.0000] <annevk>
So it's a nice legacy thing that Alec and Darin forgot to port to Chrome :-)

[03:36:05.0000] <annevk>
It seems pretty trivial to remove from Gecko, but compat... Of course the compat thing applies to other engines too.

[03:41:48.0000] <annevk>
/me filed https://bugzilla.mozilla.org/show_bug.cgi?id=960014

[03:46:59.0000] <smaug____>
annevk: I'd guess it was added because IE did it

[03:47:11.0000] <smaug____>
but don't have old IE to test

[05:44:37.0000] <zcorpan>
MikeSmith: heycam|away: please can http://dev.w3.org/2006/webapi/WebIDL/ be a proper redirect?

[05:45:06.0000] <MikeSmith>
zcorpan: to where?

[05:45:18.0000] <MikeSmith>
oh that's ugly now

[05:45:51.0000] <MikeSmith>
I dint make that

[05:46:02.0000] <MikeSmith>
so heycam|away must have

[05:46:22.0000] <zcorpan>
likely

[05:46:41.0000] <zcorpan>
i'm only bugging you because heycam|away is away and you might be able to fix it :-)

[05:47:23.0000] <darobin>
zcorpan: I'm sure you have a dev CVS account up your sleeve somewhere :)

[05:48:57.0000] <annevk>
Why is João asking that question on www-dom rather than WHATWG?

[05:49:32.0000] <zcorpan>
true. but i haven't used cvs on this laptop so i'd have to spend some time to set things up

[05:50:35.0000] <MikeSmith>
zcorpan: lame :)

[05:50:41.0000] <jgraham>
annevk: I'm not sure João believes in WHATWG

[05:51:05.0000] <zcorpan>
MikeSmith: guilty :-)

[05:51:14.0000] <MikeSmith>
anyway I'll do it before I forget because otherwise .. I'll forget. And I do really love CVS

[05:53:36.0000] <MikeSmith>
Ms2ger: re forgetting, is w3c-test.org w-p-t getting updated again after pushes?

[05:54:12.0000] <Ms2ger>
Doesn't seem to be

[05:54:52.0000] <MikeSmith>
ちぇ

[05:55:00.0000] <MikeSmith>
OK

[05:57:06.0000] <MikeSmith>
"fatal: unable to access 'https://github.com/w3c/testharness.js/': transfer closed with outstanding read data remaining"

[05:57:19.0000] <MikeSmith>
darobin: ↑

[05:57:45.0000] <MikeSmith>
nm

[05:57:52.0000] <darobin>
MikeSmith: is that the error you're getting from the sync script?

[05:58:40.0000] <MikeSmith>
cron job

[05:58:47.0000] <MikeSmith>
from teh sync script yeah I guess

[05:58:57.0000] <MikeSmith>
/me looks at the cron job

[05:59:10.0000] <darobin>
MikeSmith: that looks like a submodule is unhappy

[05:59:21.0000] <darobin>
perhaps trying to run the script by hand would work?

[05:59:29.0000] <MikeSmith>
yeah will try

[05:59:30.0000] <darobin>
most of the time when it breaks it's a permissions problem

[06:01:08.0000] <MikeSmith>
"fatal: remote error: Repository not found."

[06:01:16.0000] <MikeSmith>
that might be a clue possibly

[06:02:23.0000] <MikeSmith>
darobin: url = git://github.com/w3c/html-testsuite.git

[06:03:08.0000] <jgraham>
Does GH still support git:// urls?

[06:03:19.0000] <jgraham>
I don't think you can get them from the UI at least

[06:04:14.0000] <darobin>
I'm pretty sure it does

[06:04:21.0000] <MikeSmith>
ah that's for the old path on the filesystem anyway

[06:04:22.0000] <darobin>
oh

[06:04:23.0000] <darobin>
WTF

[06:04:33.0000] <darobin>
that repo has not existed in ages

[06:05:00.0000] <darobin>
MikeSmith: you want to make that github.com/w3c/web-platform-tests

[06:05:12.0000] <darobin>
well, with the gits at both ends

[06:05:23.0000] <darobin>
something went wrong with the restore?

[06:05:50.0000] <MikeSmith>
darobin: makes me wonder how it's been getting update recently if now from that cron job

[06:05:54.0000] <MikeSmith>
*not from

[06:06:32.0000] <darobin>
MikeSmith: yeah, that's... bizarre

[06:07:18.0000] <MikeSmith>
d'ogh

[06:07:41.0000] <MikeSmith>
I was checking the www-data user, not the github user

[06:07:47.0000] <darobin>
aha!

[06:07:54.0000] <MikeSmith>
so not bizarre, just pilot error

[06:10:17.0000] <MikeSmith>
ah figured out the cause of the problem. again my fault. I had made local changes to config.json and serve.py and it's refusing to clobber them

[06:14:43.0000] <annevk>
zcorpan: did you test https://www.w3.org/Bugs/Public/show_bug.cgi?id=14832 as well?

[06:15:19.0000] <zcorpan>
annevk: nope

[06:17:29.0000] <zcorpan>
maybe it's relatively easy to add though. not for all possible places but <a href> (and maybe <form action>) could be enough

[06:18:53.0000] <annevk>
if you have tests I'd be interested in hearing adhoc results

[06:22:27.0000] <zcorpan>
actually i wouldn't know how to test mailto: in an automated fashion, but i recall mailto: having to be utf-8 in presto to work correctly. but that's my memory so not so reliable :-)

[06:25:20.0000] <MikeSmith>
zcorpan heycam|away I set up the redirect for the WebIDL spec. Should be working now

[06:26:15.0000] <zcorpan>
annevk: data:text/html;charset=windows-1251,<!DOCTYPE html><a href="mailto:foo@bar?subject=&aring;">foo shows literal "å" in the status bar in (new) opera while same for http: form-escapes it

[06:26:42.0000] <annevk>
cool

[06:26:52.0000] <zcorpan>
annevk: and clicking the link makes the å round-trip successfully to opera mail in both opera and firefox

[06:27:28.0000] <zcorpan>
annevk: but firefox falls back to utf-8 for unencodeable characters so that's not telling much

[06:27:42.0000] <zcorpan>
don't have ie right now

[06:28:25.0000] <zcorpan>
i guess javascript: and data: can be automated

[06:29:36.0000] <zcorpan>
and mailto: for getting .href, too

[06:31:58.0000] <zcorpan>
data:text/html;charset=windows-1252,<!DOCTYPE html><a href="mailto:foo@bar?subject=&aring;">foo<script>alert(document.links[0].href)</script> gives mailto:foo@bar?subject=%C3%A5 in both opera and firefox. and now the character is encode-able so looks like firefox uses utf-8 for mailto:

[06:33:32.0000] <zcorpan>
data:text/html;charset=windows-1252,<!DOCTYPE html><a href="data:text/plain;charset=windows-1252,?&aring;">foo<script>alert(document.links[0].href)</script> -> utf-8 in opera/firefox

[06:34:39.0000] <zcorpan>
data:text/html;charset=windows-1252,<!DOCTYPE html><a href="javascript:'?&aring;'">foo<script>alert(document.links[0].href)</script> -> utf-8 in opera/firefox

[06:37:42.0000] <zcorpan>
ftp: %E5, ws: %E5 (boo!), bogus: utf-8

[06:41:43.0000] <zcorpan>
ftps: utf-8 (is it supported?)

[06:47:20.0000] <annevk>
no

[06:47:22.0000] <annevk>
ftp is

[08:02:23.0000] <annevk>
Anyone suggestions for how to define "domain label"?

[08:14:04.0000] <annevk>
Where are all the opinions? Maybe I should go back to arguing about <cite> or some such...

[08:14:15.0000] <Ms2ger>
Ships, dammit!

[08:14:17.0000] <Ms2ger>
And cats!

[08:17:07.0000] <jgraham>
annevk: Too busy working out whether I have already gone past the point of "if you touch it you own it", meaning that I may as well just rewrite all this code

[08:17:37.0000] <Ms2ger>
You own it

[08:17:59.0000] <Ms2ger>
Following the "you ask about it, you own it" rule

[08:18:02.0000] <jgraham>
Ms2ger: Sadly I think that is probably the truth

[08:18:19.0000] <annevk>
I feel like I fixed enough URL bugs for a while. Maybe I can now try to fix the major Encoding bug...

[08:18:23.0000] <Ms2ger>
/me does not ask about the context

[08:18:38.0000] <annevk>
Unless someone has any suggestions for how to define "domain label" that is...

[08:44:55.0000] <Ms2ger>
Hixie, ping

[09:15:28.0000] <JonathanNeal>
would anyone confirm that quirksmode behaviors are not winning @ http://sandbox.thewikies.com/notype.php ?

[09:18:50.0000] <jsbell>
JonathanNeal: FWIW, they look identical to me in Chrome 31

[09:36:11.0000] <GPHemsley>
They look identical to me in Aurora 28, too

[09:39:03.0000] <GPHemsley>
annevk-cloud: "A *domain label* is a string of characters identifying a level of a _domain_."

[09:39:06.0000] <GPHemsley>
annevk-cloud: How's that?

[09:41:44.0000] <GPHemsley>
/me wonders why 'host', 'domain', and 'domain label' are "defined" in section 4.0 when their actual definitions are in section 4.2...

[09:42:16.0000] <GPHemsley>
actually, s/'host',//

[09:43:11.0000] <GPHemsley>
actually, more usefully, s/'host'/'IPv6 address'/

[09:45:15.0000] <GPHemsley>
annevk-cloud: I also recommend s/Otherwise, $host is a domain, return its _labels_ separated from each other by U+002E./Otherwise, $host is a domain; return its _domain labels_ separated from each other by U+002E./

[09:45:32.0000] <GPHemsley>
(Step 3 of *host serializer*)

[09:46:07.0000] <GPHemsley>
Because presumably "it" refers to $host not _domain_

[09:46:25.0000] <GPHemsley>
(forgot the markup for _domain_ in my suggestion)

[09:48:22.0000] <MikeSmith>
annevk-cloud: A domain label is one or more URL code points other than the code points U+002E, U+3002, U+FF0E, and U+FF61.

[10:43:30.0000] <dglazkov>
good morning, Whatwg!

[11:59:23.0000] <Domenic_>
Anyone remember the title of marcosc_'s bookmarking spec?

[12:04:06.0000] <Domenic_>
found it http://w3c-webmob.github.io/installable-webapps/

[12:13:25.0000] <Domenic_>
are MS's GestureEvents specced anywhere?

[12:23:50.0000] <bterlson>
Domenic_: http://msdn.microsoft.com/en-us/library/ie/dn433243(v=vs.85).aspx might be helpful

[12:24:21.0000] <Domenic_>
bterlson: yeah, I kind of meant proposed for other browsers to implement, i guess.

[12:24:45.0000] <Domenic_>
was trying to counter a coworker's claim that you needed a phonegap-like shell to get a platform's native gesture events, by saying the open web has that covered

[12:24:53.0000] <Domenic_>
but i guess it doesn't yet

[12:33:58.0000] <Hixie>
Ms2ger: pong

[12:34:37.0000] <Ms2ger>
Hixie, can you fix https://www.w3.org/Bugs/Public/show_bug.cgi?id=24301 soon? Gecko wants to implement

[12:34:51.0000] <Hixie>
just started on it 5 minutes ago

[12:35:15.0000] <Ms2ger>
Great, thanks

[12:36:31.0000] <Hixie>
wonder why the w3c version has both width and height

[12:36:34.0000] <Hixie>
that doesn't make much sense

[12:39:17.0000] <Hixie>
wow, the w3c spec text for this really makes no sense

[12:39:32.0000] <Hixie>
/me closes that tab and disregards it

[12:40:20.0000] <marcosc_>
Domenic_: that's the use cases doc... the spec is manifest.sysapps.org

[12:40:38.0000] <Domenic_>
marcosc_: right, yeah, misspoke

[12:40:46.0000] <Domenic_>
the use cases doc is more fun to read :)

[12:40:53.0000] <Domenic_>
especially now that dont-share-cookies-and-stuff is gone :(

[12:41:29.0000] <marcosc_>
heh, need to rename more properties

[12:41:51.0000] <marcosc_>
"and-what-do-you-think-you-are-doing":

[12:41:57.0000] <Hixie>
btw i fixed a few things in html that were needed by that

[12:42:07.0000] <Hixie>
i think the only thing html doesn't handle itself now is the orientation thing

[12:42:17.0000] <marcosc_>
Hixie: yep

[12:42:24.0000] <marcosc_>
awesome, thanks for doing that

[12:42:43.0000] <marcosc_>
still trying to work out orientation with mounir

[12:43:33.0000] <Hixie>
yeah i looked at orientation but it wasn't clear that html was the right place for it really, nor that i had the requisite expertise

[12:43:37.0000] <Hixie>
so i punted on that

[12:43:50.0000] <Hixie>
let me know if anything else comes up

[12:44:11.0000] <marcosc_>
do you have any pointers on what you changed?

[12:44:46.0000] <marcosc_>
(been away last 6 weeks)

[12:44:52.0000] <Hixie>
not at hand

[12:45:16.0000] <marcosc_>
I'll check the change logs

[12:45:49.0000] <Hixie>
at least r8348 and r8349, looks like

[12:46:02.0000] <Ms2ger>
marcosc_, slacker :)

[12:48:46.0000] <TabAtkins>
zcorpan: No, unfortunately. In fact, I still have a tab open for that as a reminder.  I've never gotten around to getting a working Blink install again to add this myself.

[12:50:47.0000] <marcosc_>
Hixie: the i18n support for application-name there looks good. Icon stuff looks good too.

[12:51:16.0000] <marcosc_>
I've been testing icon support and it's fairly good in IE and Chrome, but fairly sad in Gecko

[13:04:10.0000] <Hixie>
hmmmm

[13:04:34.0000] <Hixie>
Ms2ger: if you create an ImageBitmap from an ImageData object, what density should the ImageBitmap have?

[13:04:50.0000] <Hixie>
if we're using constructors, there's no way to forward the density from the canvas

[13:04:53.0000] <Hixie>
since there's no canvas..

[13:04:55.0000] <Ms2ger>
E_DONTSUPPORTDENSITY

[13:05:21.0000] <Hixie>
?

[13:06:51.0000] <Hixie>
oh like make drawImage() always assume 1:1 source data to backing store pixel?

[13:06:53.0000] <Hixie>
hmm

[13:07:18.0000] <Hixie>
i guess that could work

[13:07:50.0000] <Hixie>
whatever replaces srcset="" will have to expose the actual density, too

[13:08:02.0000] <Hixie>
so that you can know what to do with it

[13:10:42.0000] <TabAtkins>
Yeah, I was wondering if I should add a property to <img> to expose the density of the chosen resource.

[13:15:52.0000] <Hixie>
oh man, i painted myself into a corner with these createImageData() methods

[13:15:53.0000] <jory>
TabAtkins: I'd find that really useful.

[13:16:10.0000] <Hixie>
i have a createImageData(imagedata) method that returns a new blank imagedata of the same dimensions

[13:16:27.0000] <Hixie>
but an ImageData(imagedata) constructor should obviously be a copy constructor

[13:16:43.0000] <Hixie>
and having both do different things would be highly confusing

[13:16:46.0000] <Hixie>
what a mess

[13:24:16.0000] <Hixie>
Ms2ger: should this constructor copy the data? or reference the underlying ArrayBuffer object?

[13:25:23.0000] <Ms2ger>
No opinion

[13:25:33.0000] <Ms2ger>
Maybe bz has one

[13:52:55.0000] <heycam>
MikeSmith, thanks

[14:10:51.0000] <Hixie>
jgraham: ping (you're the one maintaining hoppipolla.co.uk right?)

[14:11:11.0000] <Hixie>
jgraham: bugs update thing seems to be broken

[14:12:35.0000] <Ms2ger>
He is

[14:15:56.0000] <jgraham>
Hixie: What thing now?

[14:16:12.0000] <Hixie>
jgraham: looks like the bugs update thingy that you have hasn't updated in fa ew months

[14:16:15.0000] <Hixie>
in a few

[14:19:55.0000] <Hixie>
https://www.w3.org/Bugs/Public/show_bug.cgi?id=24298

[14:20:11.0000] <Hixie>
the whatwg vs w3c thing isn't even causing as much confusion as the w3c vs w3c thing

[14:20:16.0000] <Hixie>
sigh

[14:38:35.0000] <arunranga>
I think it's just confusion with workflow tools and bad labeling ^Hixie.

[14:44:15.0000] <JonathanNeal>
ah, whatwg versus whichw3c

[14:45:28.0000] <Hixie>
arunranga: it's the natural outcome of the w3c process, sadly.

[14:45:40.0000] <Hixie>
arunranga: even with labeling, people end up reading random old TR/ drafts

[14:47:22.0000] <arunranga>
Maybe.

[14:47:45.0000] <arunranga>
Hixie, do you have an opinion on  https://www.w3.org/Bugs/Public/show_bug.cgi?id=17765

[14:47:51.0000] <Hixie>
no maybe about it, people are confused about that all the time

[14:47:55.0000] <Hixie>
looking...

[14:48:48.0000] <Hixie>
arunranga: i have many opinions on it, but nothing really helpful, unfortunately

[14:48:50.0000] <arunranga>
Hixie: The problem is implementations shake out bugs with /TR specs VERY fast these days.

[14:49:07.0000] <Hixie>
no, the problem is that TR/ specs exist at all

[14:49:46.0000] <Hixie>
they serve no useful purpose except for patent lawyers and government contract lawyers

[14:49:51.0000] <Hixie>
and should be treated accordingly

[14:50:19.0000] <arunranga>
Hixie, re: bug 17765, MY opinion is we don't necessarily need a URL parse bit.  Fetch alone should solve this for mediastream, blob, etc.

[14:50:37.0000] <Hixie>
(e.g. having a snapshot directory that just automatically archives versions every 6 months with a boring style sheet and a clear heading like "January 2014 Snapshot of the Foo Bar Standard for the Purposes of Patent Lawyers and Government Officials")

[14:51:04.0000] <arunranga>
Hixie: unfortunately, /TR exists directly to serve the patent issues.  But even within /TR, it's now become commonplace to cross-refer to WHATWG specs.

[14:51:16.0000] <Hixie>
TR/ doesn't exist to serve the patent issues

[14:51:24.0000] <Hixie>
it exists because the w3c thinks their process is good

[14:51:27.0000] <arunranga>
So /TR specs have normative WHATWG refs.

[14:51:38.0000] <Hixie>
if it was just patent issues, the process would be very different

[14:51:51.0000] <arunranga>
Hixie: umm, process is an upshot of patent circumvention IHMO

[14:51:59.0000] <arunranga>
s/IHMO/IMHO

[14:53:03.0000] <Hixie>
arunranga: no, come on, that's not even close to true. the process existed in much the same as its current form long before the patent stuff was added.

[14:53:14.0000] <Hixie>
arunranga: the process predates the w3c, for one

[14:53:20.0000] <Hixie>
arunranga: it's basically the same as the IETF's

[14:53:53.0000] <Hixie>
arunranga: if all the process was for was patents, it would be much more light-weight and would just consist of automatic snapshots and a review period for those snapshots

[14:54:05.0000] <Hixie>
arunranga: it wouldn't have any of the WD/LC/CR/PR/REC crap

[14:54:06.0000] <Ms2ger>
Mmm, more process arguments

[14:55:31.0000] <arunranga>
Hixie, Ms2ger, I'm not actually *arguing.*

[14:55:41.0000] <Ms2ger>
Mmm, more process talk

[14:57:22.0000] <arunranga>
Hixie, File/FileSystem are cases in point about /TR being overridden, so no *real* arguments. However, till ALL browser vendors bail uniformly on process, we're in it.

[14:58:12.0000] <arunranga>
/me supposes he has to wait for annevk (annevk-cloud) in order to fix https://www.w3.org/Bugs/Public/show_bug.cgi?id=17765 properly

[14:58:23.0000] <Hixie>
i'm not sure what you mean by "till ALL browser vendors bail uniformly on process, we're in it"

[14:58:32.0000] <Hixie>
all the browsers _have_ bailed

[14:58:43.0000] <Hixie>
nobody references TR/ specs for what to implement except by accident

[14:59:09.0000] <Hixie>
i mean, do you see any browsers who have skipped out on the improvements to HTML since 1999?

[15:00:29.0000] <Domenic_>
I feel fortunate to have gotten the message "see TR in URL = outdated, click on latest ED link asap" early in my spec-reading career

[15:00:29.0000] <arunranga>
Hixie: *sigh NO, but some of the post-99 improvements were done under W3C's watch, at least as far as IE team's external claims

[15:01:48.0000] <Hixie>
arunranga: if it was only the IE team left, they'd quickly move on.

[15:02:25.0000] <arunranga>
Hixie, ANYway, I still have no real love for /TR (and less for LCWD --> RC).

[15:14:27.0000] <Hixie>
arunranga: feel free to not use /TR :-)

[15:14:37.0000] <Hixie>
nobody's forcing you :-)

[15:33:03.0000] <TabAtkins>
miketaylr: Yo, you have a corpus of JS to run regex on, right?

[15:35:54.0000] <miketaylr>
TabAtkins: yeah, just a folder on my HD right now, hopefully something more structured in the near future

[15:36:53.0000] <TabAtkins>
miketaylr: kk. I'm just wondering about checking for any usage of CSSCharsetRule, CHARSET_RULE, or ".encoding".

[15:37:26.0000] <miketaylr>
TabAtkins: sure thing, will grep for those later tonight and ping you (about to peace out for dinner)

[15:37:32.0000] <TabAtkins>
Thanks!


2014-01-16
[01:23:08.0000] <zcorpan>
annevk-cloud: "If url's relative flag is set, set encoding override to utf-8." http://url.spec.whatwg.org/#query-state

[01:23:24.0000] <zcorpan>
annevk-cloud: isn't that backwards? or am i misreading it?

[01:24:30.0000] <zcorpan>
annevk-cloud: i read that encoding override gets set to utf-8 for urls with relative schemes

[01:28:10.0000] <zcorpan>
annevk-cloud: also, should ws/wss not always use utf-8? not that they're useful in <a href> but still

[01:31:43.0000] <SteveF>
arunranga: FWIW moves afoot to have editors drafts at /TR http://lists.w3.org/Archives/Public/spec-prod/2014JanMar/thread.html

[02:49:31.0000] <annevk>
Is WHATWG down?

[02:50:37.0000] <annevk>
Hmm just slow

[03:04:23.0000] <annevk>
Was there no Gecko bug for https://www.w3.org/Bugs/Public/show_bug.cgi?id=24005 ?

[03:09:52.0000] <zcorpan_>
annevk: added tests https://critic.hoppipolla.co.uk/showcommit?first=c94f486e&last=70f343af&review=437

[03:10:16.0000] <wefo>
Hmm.

[03:10:51.0000] <wefo>
Can somebody please confirm with me that line 1 loads the font "whenever it feels like it", and line 2 loads the font "right now, before loading anything else"? http://pastebin.com/raw.php?i=7m8LnWeK

[03:10:53.0000] <annevk>
zcorpan_: I can do the utf-8 thing for ws/wss

[03:11:02.0000] <wefo>
That is, somebody who knows this stuff.

[03:11:04.0000] <annevk>
zcorpan_: your bug report seems accurate

[03:11:12.0000] <zcorpan_>
annevk: ok

[03:12:09.0000] <annevk>
wefo: the second line uses an invalid data URL; it won't get you anywhere

[03:12:20.0000] <wefo>
Yeah, I just noticed.

[03:12:25.0000] <wefo>
Because it breaks on my computer.

[03:12:36.0000] <wefo>
annevk: I was told to use the latter.

[03:12:42.0000] <annevk>
wefo: there's no guarantees on when a data URL is interpreted and applied to a page with respect to fonts at the moment

[03:12:46.0000] <wefo>
Because it supposedly works "block-mode".

[03:12:54.0000] <wefo>
So then that guy was lying.

[03:13:00.0000] <wefo>
I will have to do the insane hack after all.

[03:13:07.0000] <annevk>
wefo: well if you include the entire font inline it's reasonable to assume it'll apply faster

[03:13:18.0000] <wefo>
Include the entire font inline?

[03:13:23.0000] <annevk>
wefo: since the font will download together with the style sheet, but you need to know how to use data URLs

[03:13:47.0000] <wefo>
Oh... is that the direct data stuff in base64 or something?

[03:14:56.0000] <wefo>
I was going to use this insane hack to determine if the user indeed has the font loaded: http://www.kirupa.com/html5/detect_whether_font_is_installed.htm

[03:15:05.0000] <wefo>
Frankly, it's kind of ingenious.

[03:15:16.0000] <wefo>
I like it when things like that "work", even if they are not ideal.

[03:23:28.0000] <jgraham_>
annevk: I nominate you to do that code review btw

[03:24:38.0000] <annevk>
jgraham: zcorpan_: done

[03:25:06.0000] <annevk>
Oh I see there is a bunch more...

[03:25:10.0000] <jgraham>
Heh

[03:25:51.0000] <annevk>
jgraham: so this move: https://critic.hoppipolla.co.uk/57951ecc?review=437

[03:25:56.0000] <annevk>
jgraham: that should just be fine no?

[03:26:03.0000] <annevk>
jgraham: you already reviewed a bunch

[03:27:46.0000] <jgraham>
annevk: I reviewed all the trivial bits

[03:27:54.0000] <jgraham>
Basically all the hard stuff is the .js file

[03:28:56.0000] <annevk>
Can you give me a review link for that file?

[03:29:09.0000] <annevk>
I have the feeling I keep looking at individual commits

[03:30:30.0000] <jgraham>
https://critic.hoppipolla.co.uk/showcommit?review=437&filter=pending

[03:31:10.0000] <zcorpan_>
annevk: you can drag-and-drop in the commit list to get a squashed review

[03:31:24.0000] <jgraham>
Yeah, or use the filter links just above it

[03:34:15.0000] <annevk>
Ah great

[03:34:24.0000] <annevk>
So this looks okay to me... I take it you have run it all?

[03:35:34.0000] <annevk>
My only nit is using a string rather than array...

[03:36:08.0000] <annevk>
I guess you didn't want to type all the quotes or something?

[03:37:59.0000] <zcorpan_>
yeah

[03:39:01.0000] <zcorpan_>
i've run it, yes. but some browser bugs cause some tests to time out, so it's not awesome

[03:39:42.0000] <zcorpan_>
also search for XXX

[03:41:27.0000] <jgraham>
zcorpan_: If some tests time out that's probably OK as long as the other tests still run

[03:41:45.0000] <zcorpan_>
ok, yeah they do

[03:42:52.0000] <jgraham>
I can live with that. We can always improve it in followup commits if there's something that causes problems

[03:53:56.0000] <jgraham>
/me assumes annevk didn't *really* care about the array thing

[03:54:53.0000] <jgraham>
zcorpan_: Worth squashing before pushing or should I just merge?

[03:54:59.0000] <annevk>
I'd like to hear some reasoning

[03:55:05.0000] <annevk>
But I'm not going to block on it :-)

[03:55:15.0000] <zcorpan_>
i commented in critic

[03:55:43.0000] <zcorpan_>
jgraham: no opinion

[03:56:44.0000] <jgraham>
Let's just merge

[03:57:21.0000] <jgraham>
Done

[03:57:41.0000] <jgraham>
zcorpan_, annevk: Thanks

[03:57:50.0000] <zcorpan_>
thank you!

[04:18:30.0000] <MikeSmith>
annevk: http://krijnhoetmer.nl/irc-logs/whatwg/20140115#l-803

[04:22:25.0000] <hsivonen>
what make people post to Usenet using DOS encodings?

[04:27:21.0000] <hsivonen>
*makes

[04:29:22.0000] <MikeSmith>
fashion statement

[04:30:01.0000] <icaaq>
hi, here they use the label element http://filamentgroup.com/lab/bulletproof_icon_fonts/ to "label" som text. is that really semantically correct?

[04:34:01.0000] <hsivonen>
"Windows codepage 1252, the codepage commonly used for English and other Western European languages, was based on an American National Standards Institute (ANSI) draft. That draft eventually became ISO 8859-1, but Windows codepage 1252 was implemented before the standard became final, and is not exactly the same as ISO 8859-1."

[04:34:11.0000] <hsivonen>
http://msdn.microsoft.com/en-us/library/ee719641.aspx

[04:34:21.0000] <hsivonen>
so windows-1252 even existed first!

[04:34:40.0000] <Ms2ger>
Sounds like the box model in old-IE

[05:10:10.0000] <annevk>
hsivonen: man, the more I hear about ISO and encodings, ...

[05:11:39.0000] <annevk>
MikeSmith: interesting suggestion :-)

[05:29:59.0000] <annevk>
MikeSmith: that doesn't quite work for suggesting what it is

[05:31:20.0000] <MikeSmith>
annevk: maybe it's not necessary to suggest what it is. In the end it's just an opaque string, right?

[05:32:05.0000] <annevk>
It's an opaque string, most typically used as part of the DNS or as a local network address.

[05:32:18.0000] <annevk>
Maybe something like that could work, if I can find good references for both.

[05:45:27.0000] <zcorpan>
Hixie: http://www.w3.org/html/wg/drafts/html/master/embedded-content-0.html#text-tracks-exposing-in-band-metadata doesn't seem to exist in whatwg html

[05:47:06.0000] <zcorpan>
Hixie: what's the deal?

[05:48:46.0000] <MikeSmith>
annevk: A domain label is either an IN-ADDR.ARPA suffix or an opaque string that represents one octet of an Internet address.

[05:49:44.0000] <MikeSmith>
hmm what does that even mean

[05:49:48.0000] <Ms2ger`>
How about IPv6?

[05:50:41.0000] <annevk>
Ms2ger`: well we know that's not a domain label :-)

[05:51:02.0000] <zcorpan>
a domain label is an extremity of Jesus

[05:51:24.0000] <MikeSmith>
heh

[05:51:45.0000] <annevk>
"The text attribute, on getting, must return UTF-16 text converted from data of the text track cue that the TextTrackCue object represents." more like what's the deal with that text

[05:52:27.0000] <Ms2ger`>
No ip6.arpa?

[06:12:40.0000] <zcorpan>
w3c-test.org doesn't use wpt-serve yet?

[06:13:21.0000] <jgraham>
MikeSmith was working on it

[06:14:51.0000] <MikeSmith>
still "working" on it yeah

[06:15:04.0000] <MikeSmith>
meaning, procrastinating

[06:16:00.0000] <MikeSmith>
if only the CSS WG didn't exist, things would all be much simpler

[06:35:48.0000] <zcorpan>
not sure how i got here but it was a bit funny http://9gag.com/gag/agyOxmx

[06:39:18.0000] <wefo>
zcorpan: "These are Satan. Bears."

[06:41:26.0000] <annevk>
GitHub down?

[06:52:48.0000] <mathiasbynens>
annevk: WFM

[07:12:21.0000] <annevk>
mathiasbynens: ta

[08:01:33.0000] <annevk>
IBM emailed the WHATWG list. Can someone confirm hell froze over?

[08:02:43.0000] <jgraham>
Can't verify, too busy dodging flying pigs

[08:12:12.0000] <GPHemsley>
/me is in cold Georgia. Does that count?

[08:39:07.0000] <wefo>
Wait... there is a textAlign property to contexts? So all those hours of measuring the width and doing complex math calculations to get it centered were wasted?

[08:39:35.0000] <wefo>
Is this some kind of bleeding edge feature? I hate never being able to tell. There is no clear documentation whatsoever.

[08:57:01.0000] <dglazkov>
good morning, Whatwg!

[09:06:15.0000] <Hixie>
zcorpan: DataCue doesn't make sense. If you don't know the format, how can you expose it? If you do know the format, then use the interface that that format provides.

[09:32:14.0000] <MikeSmith>
CORS is Recommendation

[09:32:39.0000] <MikeSmith>
now all the confused deputy attacks can begin in earnest

[09:32:50.0000] <Ms2ger`>
/me confuses MikeSmith 

[09:33:32.0000] <MikeSmith>
...

[09:33:56.0000] <Hixie>
isn't CORS obsolete? i thought Fetch replaced it a while back.

[09:34:13.0000] <MikeSmith>
Hixie: well yeah

[09:35:23.0000] <MikeSmith>
it has joined the ranks of the undead

[09:35:49.0000] <Hixie>
wait is that the one anne was telling me about where they decided to just ignore all the open bugs?

[09:36:05.0000] <MikeSmith>
bingo

[09:36:17.0000] <MikeSmith>
they "resolved" them though

[09:36:47.0000] <MikeSmith>
which is technically different from ignoring them

[09:37:12.0000] <Hixie>
iirc they ignored them for 2 years then resolved them as not relevant since nobody had looked at them in two years

[09:37:36.0000] <MikeSmith>
that would be one way to describe it, yes

[09:37:41.0000] <MikeSmith>
the accurate way

[09:37:47.0000] <Hixie>
which is some bug system ninja juju that i have to say is pretty impressive

[09:38:12.0000] <MikeSmith>
hey this is what we WGs for man

[09:38:19.0000] <MikeSmith>
that kind of magic

[09:39:24.0000] <jgraham>
Wait what? MikeSmith is a deputy?

[09:39:35.0000] <Hixie>
i wish there were journalists who cared about this kind of crap enough to report on it

[09:39:40.0000] <jgraham>
So who's the sheriff in this town?

[09:40:12.0000] <jgraham>
Isn't that a trick they learnt from the chrome bugtracker?

[09:40:17.0000] <Hixie>
i mean, this is just as messed up as some political shenanigans, and has similar long-term effects (which is to say, mostly none)

[09:40:57.0000] <jgraham>
Well it's mildly more interesting than who the president of France is sleeping with, but I'm not sure why that's being reported either

[09:42:08.0000] <MikeSmith>
yeah it's like politics but robbed of all the debauchery

[09:42:28.0000] <MikeSmith>
which just makes it depressing instead of scandalous

[09:42:33.0000] <jgraham>
Anyway, if EME has taught you nothing else it should have been that getting press attention only leads to a bunch of people with extremely shallow understanding of the issues getting rilled up in an entirely impotent way

[09:42:59.0000] <MikeSmith>
jgraham: but, freedom!

[09:44:03.0000] <Hixie>
jgraham: at least it'd make me feel like i wasn't alone in thinking it was ridiculous :-)

[09:44:46.0000] <Domenic_>
"Congratulations Anne on today's publication of the CORS Recommendation!" hmmmm

[09:44:47.0000] <MikeSmith>
jgraham seems to not understand about the Wisdom of the Crowds

[09:46:02.0000] <jgraham>
I only think it's ridiculous if you are measuing against The Process. If you think a Process where things go to Rec. irrespective of bugs, and then are worked on further, is better then CORS is doing all the right things. Now W3C probably don't realise that, but perhaps they will cotton on one of these decades

[09:46:42.0000] <jgraham>
(actually closing the bugs is nonsense of course)

[09:48:42.0000] <arunranga>
I think we should add text that refers to CORS as a snapshot subset of Fetch.

[09:48:44.0000] <Hixie>
jgraham: what i find ridiculous is the hypocrisy of claiming to care about a process and then _blatently_ not caring about it

[09:50:59.0000] <MikeSmith>
well they are standing on the shoulders of some giants, as far as that pattern goes

[09:51:23.0000] <MikeSmith>
well maybe not giants

[09:52:23.0000] <Hixie>
i really don't understand why anyone would claim to believe in one set of principles, but act in a way contrary to them. i really don't see the point. why lie about your values? or if it's not a lie, why not do a good job of actually meeting them?

[09:52:28.0000] <Hixie>
i just don't get it

[09:52:50.0000] <jgraham>
Because they don't see it as a moral problem

[09:53:46.0000] <jgraham>
It's a simple path-finding exercise. "I need to achieve X. Constraints Y exist. How can I get to X as fast as possible given Y"

[09:54:10.0000] <Hixie>
ok but then why claim that one is trying to achieve Z?

[09:54:16.0000] <jgraham>
The only confusion is the fact that the *stated* Y and the reality of Y are quite different

[09:54:27.0000] <Hixie>
right, that's what i'm saying

[09:54:33.0000] <Hixie>
why not state the truth?

[09:54:52.0000] <jgraham>
Well see it from the point of view of the W3C

[09:55:14.0000] <Hixie>
i don't understand the point of view of the W3C, that's my problem

[09:56:04.0000] <Domenic_>
It seems like there are pretty obvious gains, in general, from stating a position of one thing and then doing another thing

[09:56:10.0000] <Domenic_>
That shouldn't be hard to understand

[09:56:22.0000] <jgraham>
If they rigrously enforced all the stated Y, it would take forever to get anything done and people would do work elsewhere. But part of Y is that changing the stated Y is very difficult, so instead they make up Y' which is Y with a whole load of concessions to the people actually trying to do X"

[09:56:59.0000] <Hixie>
Domenic_: what are the gains here?

[09:57:43.0000] <Hixie>
jgraham: nothing is "very difficult"

[10:07:40.0000] <jgraham>
I mean the W3C can only really cause limited damage. It can annoy you and cause the rest of us to have to point everyone we know to whatwg specs

[10:08:12.0000] <Hixie>
i'm not making any judgements as to absolute objective harm :-)

[10:09:00.0000] <jgraham>
OK, well I guess it's pretty normal that your personal sense of disappointment isn't correlated with objective harm

[10:10:55.0000] <Hixie>
btw, i would appreciate a review of https://www.w3.org/Bugs/Public/show_bug.cgi?id=23475#c16 from people here

[10:11:02.0000] <Hixie>
it's a proposal for revamping how focus works

[10:11:14.0000] <Hixie>
(new proposal from yesterday with more readable terms and more web compatability)

[10:12:04.0000] <Hixie>
it handles, amongst other things, scrollable regions (long ignored by specs) and <dialog>s (new)

[10:24:59.0000] <Hixie>
on a different note... i wonder where to spec that the 'select' event fires sometimes

[10:26:17.0000] <Hixie>
(in response to user interaction, i mean)

[10:28:49.0000] <annevk>
I have another REC...

[10:29:11.0000] <annevk>
css3-namespace and cors

[10:29:24.0000] <annevk>
And I'm not a big fan of either

[10:35:55.0000] <Hixie>
annevk: http://w3cmemes.tumblr.com/post/73529051245 :-P

[10:36:40.0000] <annevk>
Hixie: no wonder I act out like in http://w3cmemes.tumblr.com/post/73519371870/anne-van-kesteren-ladies-and-gentlemen-csswgs

[10:38:45.0000] <Hixie>
annevk: :-P

[10:42:21.0000] <aklein>
annevk: hi there, still about?

[10:42:37.0000] <annevk>
aklein: if it's quick

[10:42:57.0000] <annevk>
aklein: I'll be in SF starting Monday 4/5PM

[10:43:10.0000] <annevk>
aklein: until the 31st

[10:43:11.0000] <aklein>
annevk: another time, then, I was just curious if you think there's anything else to be done about ShadowRoot.baseURI without isolation

[10:43:28.0000] <aklein>
annevk: ah, cool, we should meet up at some point

[10:43:45.0000] <annevk>
aklein: after you brought up your point I wasn't so sure anymore what the point would be

[10:44:04.0000] <aklein>
annevk: yeah, that was my thought, just wondering if there were things I hadn't thought of

[10:44:32.0000] <annevk>
aklein: in the declarative scenario it might work better

[10:44:38.0000] <aklein>
the good news is that without <element> being specced, folks have to do something to set up their ShadowRoot anyway so they can fix their URLs by hand for now

[10:44:49.0000] <aklein>
sounds like we're on the same page

[10:44:49.0000] <annevk>
aklein: right

[10:45:13.0000] <annevk>
aklein: I'm still interested in defining baseURI though, potentially removing most of the cruft for now then

[10:46:31.0000] <aklein>
annevk: indeed, the current HTML definition of baseURLs is...not good

[10:47:00.0000] <aklein>
especially since Gecko actually fully supports xml:base

[10:47:11.0000] <aklein>
anyway, I'll let you go for now and catch up later

[10:48:23.0000] <Hixie>
wait what?

[10:48:28.0000] <Hixie>
what's wrong with the HTML definition?

[10:48:35.0000] <Hixie>
HTML supports xml:base

[10:48:54.0000] <annevk>
We don't want to support xml:base :-)

[10:49:09.0000] <aklein>
Hixie: neither Blink nor WebKit support xml:base in HTML documents

[10:49:33.0000] <Hixie>
i'm not following the problem here

[10:49:35.0000] <aklein>
or rather, they appear to support it (Node.baseURI is affected by it) but don't (URL completion/loading is unaffected)

[10:50:10.0000] <annevk>
Hixie: it's not really a problem, it's an opportunity to massively simplify base URL handling

[10:50:32.0000] <Hixie>
ah so by "the current HTML definition of baseURLs is...not good" you mean you want to change it, not that it's buggy

[10:50:32.0000] <aklein>
and avoid tree-walking to do URL handling

[10:50:35.0000] <Hixie>
ok

[10:50:41.0000] <Ms2ger`>
That would be nice

[10:50:55.0000] <Hixie>
i'm fine with dropping xml:base, though xml:base does make web components work better

[10:50:59.0000] <aklein>
Hixie: sorry, there are bugs, xml:base is not the bug

[10:51:00.0000] <Hixie>
we'll need something if we don't have xml:base

[10:51:06.0000] <Hixie>
oh

[10:51:08.0000] <Hixie>
what are the bugs?

[10:51:23.0000] <aklein>
Hixie: I've been meaning to file one about <img>

[10:51:30.0000] <Hixie>
Ms2ger`: ping https://www.w3.org/Bugs/Public/show_bug.cgi?id=24238

[10:51:36.0000] <aklein>
it reloads when affected by a base URL change

[10:51:43.0000] <Ms2ger`>
Oh dear

[10:51:49.0000] <Hixie>
aklein: it does? wow

[10:52:01.0000] <aklein>
Hixie: in Webkit/Blink/Gecko at least. really need to try some IEs.

[10:52:04.0000] <Hixie>
aklein: i intentionally made the spec not reload images in that case

[10:52:11.0000] <Hixie>
aklein: it would cause all kinds of hassle with pushState(), e.g.

[10:52:17.0000] <Ms2ger`>
Hixie, no strong opinion here

[10:52:31.0000] <Hixie>
Ms2ger`: should i wontfix then?

[10:52:35.0000] <Ms2ger`>
Hixie, if you prefer not-resolving, that's fine with me

[10:52:35.0000] <aklein>
Hixie: only sometimes

[10:52:45.0000] <aklein>
Hixie: when <img> switches documents it reloads

[10:52:46.0000] <Ms2ger`>
/me isn't sure ping will happen anyway

[10:52:48.0000] <aklein>
not necessarily on pushState

[10:52:59.0000] <Hixie>
aklein: oh when it switches documents, ok. that's easy to believe.

[10:53:07.0000] <Hixie>
aklein: that's not when changing base URL, that's when changing documents.

[10:53:36.0000] <aklein>
Hixie: speaking of web components, agreed that it would be nice to have something. that's what I was talking to annevk about above, see https://www.w3.org/Bugs/Public/show_bug.cgi?id=20976#c24

[10:53:50.0000] <aklein>
is there some changing documents hook in HTML I've missed?

[10:54:52.0000] <aklein>
Hixie: err, https://www.w3.org/Bugs/Public/show_bug.cgi?id=20976#c20 is probably a better starting point, that was esprehn's last suggestion

[10:55:10.0000] <Hixie>
aklein: the html spec doesn't currently reload images crossing documents, no. please do file that http://whatwg.org/newbug

[10:57:57.0000] <Hixie>
aklein: the scripts in these comments are expected to be running where? in the context of a component?

[10:58:18.0000] <Hixie>
aklein: i guess web components' documents aren't "live" documents, so they don't run script?

[10:58:25.0000] <Hixie>
aklein: what's the global scope of a script in a component?

[11:03:03.0000] <aklein>
Hixie: when you say "component" I think you may be combining two concepts, "imports" and "custom elements"

[11:03:13.0000] <aklein>
I realize that those were historically more intertwined :)

[11:03:17.0000] <Hixie>
i've no idea what either of those are, but ok

[11:03:33.0000] <Hixie>
i just mean whatever it is that you use to create proprietary widgets using DOM and JS

[11:03:40.0000] <aklein>
I'd say that in your terms, the script in a component runs in the global scope of the hosting page

[11:03:47.0000] <Hixie>
wow

[11:03:50.0000] <Hixie>
ok

[11:03:56.0000] <Hixie>
yeah, that'll give you all kinds of issues

[11:04:02.0000] <aklein>
indeed

[11:04:04.0000] <Hixie>
why not the xbl approach of running the scripts in the binding document?

[11:04:28.0000] <aklein>
I'd have to go look up xbl to answer that question well, dglazkov might have a better answer

[11:04:40.0000] <aklein>
the short answer is there is no other global at present

[11:04:54.0000] <aklein>
that is, none of the current web components specs involve additional global scopes

[11:04:59.0000] <Hixie>
right, but why not?

[11:05:01.0000] <aklein>
though they do involve additional documents

[11:05:15.0000] <Hixie>
seems like you'd want a global scope per resource defining widgets

[11:06:00.0000] <aklein>
Hixie: there's a public-webapps thread about this somewhere

[11:06:32.0000] <aklein>
http://lists.w3.org/Archives/Public/public-webapps/2013OctDec/0483.html

[11:06:38.0000] <aklein>
not sure there are actual answers there

[11:06:42.0000] <aklein>
but there's discussion

[11:07:24.0000] <Hixie>
well that e-mail pretty much summarises my concern, yes :-)

[11:08:39.0000] <Hixie>
looks like dglazkov's answer is that you can have a new scope using modules, or something

[11:08:46.0000] <Hixie>
so that it works even within just one doc

[11:08:48.0000] <Hixie>
which makes sense i guess

[11:08:54.0000] <Hixie>
but in that case, the problem you had earlier is easy

[11:09:06.0000] <Hixie>
you just make the modules be where you put the base URL scopes

[11:09:26.0000] <Hixie>
(presumably modules hook into the script settings object mechanism)

[11:20:13.0000] <Hixie>
man, i hate it when headless computers start acting up and need rebooting

[11:20:14.0000] <Hixie>
such a pain

[13:03:43.0000] <TabAtkins>
annevk-cloud: What are your thoughts on fetch()? Do you have sufficiently organized thoughts to write something down I can put into a spec?  Maybe talk about this next week when you're here for ServiceWorker stuff?

[13:42:30.0000] <Hixie>
so... why does inserting an audio element into another document do something to whether the audio is playing or not?

[13:45:04.0000] <jgraham>
A better question might be "why do we have a model where moving things between documents isn't just a deep clone?"

[13:45:16.0000] <jgraham>
To which the answer is probably "legacy"

[13:45:39.0000] <jgraham>
So I think my answer to your question is "see /topic"

[13:47:49.0000] <Hixie>
why would moving things between docs be anything interesting at all?

[13:47:53.0000] <Hixie>
i don't understand what's going on here

[13:48:02.0000] <Hixie>
however, firefox's inability to play my test audio isn't helping

[13:48:09.0000] <Hixie>
what formats does firefox support?

[13:49:06.0000] <Hixie>
i've tried ogg, wave, and mp3

[13:50:43.0000] <Hixie>
oh ffs, it's mime types

[13:51:04.0000] <Hixie>
i hate mime types so much

[13:51:05.0000] <jgraham>
Hixie: Moving elements between documents is quite problematic in general because of the prototype chain

[13:51:06.0000] <Hixie>
so pointless

[13:51:25.0000] <Hixie>
jgraham: yeah the problem there is that we have this crazy idea of mutable prototypes and per-page prototypes

[13:51:44.0000] <Hixie>
ok, with the mime type set, wave works. ok.

[13:53:29.0000] <aklein>
Hixie: thanks for doing the experimentation, apologies for my laziness

[13:53:51.0000] <aklein>
the other one I've been wrestling with (and which needs more testing) is urls in CSS

[13:54:40.0000] <Hixie>
that one is conveniently not my problem :-)

[13:54:49.0000] <Hixie>
but yeah

[13:55:01.0000] <Hixie>
audio was easy to test because i can hear it

[13:55:05.0000] <Hixie>
now to test <img>...

[13:55:19.0000] <Hixie>
maybe i need a counter cgi that returns a different number each time or something

[13:56:05.0000] <aklein>
I would have posted a live dom viewer example for that if it had been easy...I just did it locally

[13:58:13.0000] <Hixie>
hehe

[14:28:38.0000] <Hixie>
aklein: firefox isn't doing anything when the img is inserted into another doc either: http://software.hixie.ch/utilities/js/live-dom-viewer/?saved=2758

[14:30:22.0000] <Hixie>
but if the resolved url is different, then it does

[14:30:26.0000] <Hixie>
interesting

[14:34:50.0000] <Hixie>
anyone got IE around to test with the three tests in https://www.w3.org/Bugs/Public/show_bug.cgi?id=24312 ?

[14:39:59.0000] <JonathanNeal>
Hixie: still need someone to look?

[14:43:18.0000] <Hixie>
JonathanNeal: yup

[14:48:32.0000] <Hixie>
is it me, or is textContent wrong for elements? http://dom.spec.whatwg.org/#dom-node-textcontent

[14:48:43.0000] <Hixie>
it says to replace the nodes, but i thought if the only child was a text node, it was preserved

[14:52:20.0000] <TabAtkins>
We were just talking about this on blink-dev, and we think we want to change the spec to preserve the node in that case.

[14:53:07.0000] <Hixie>
k well i'll assume Top People are on it then

[14:53:35.0000] <JonathanNeal>
Hixie: unsure of how to follow the test, but I have IE up.

[14:53:52.0000] <Hixie>
JonathanNeal: ok, let me walk you through it

[14:54:03.0000] <Hixie>
JonathanNeal: http://software.hixie.ch/utilities/js/live-dom-viewer/saved/2755 - what audio plays?

[14:54:17.0000] <Hixie>
JonathanNeal: and what does it say in the log?

[14:54:29.0000] <JonathanNeal>
It actually says "Invalid Source" to me in IE11

[14:55:29.0000] <Hixie>
ugh

[14:55:40.0000] <Hixie>
ok, let's ignore that.

[14:55:43.0000] <Hixie>
ok, next test. uh

[14:55:50.0000] <Hixie>
http://software.hixie.ch/utilities/js/live-dom-viewer/saved/2758

[14:56:01.0000] <Hixie>
there should be two numbers in the log

[14:56:11.0000] <Hixie>
what are they?

[14:57:22.0000] <JonathanNeal>
checking

[14:57:38.0000] <JonathanNeal>
the two numbers are 27 and 0

[14:58:47.0000] <Hixie>
0!

[14:58:50.0000] <Hixie>
interesting

[14:58:56.0000] <Hixie>
and in http://software.hixie.ch/utilities/js/live-dom-viewer/saved/2759 ?

[14:59:01.0000] <Hixie>
(should be two numbers again)

[15:03:07.0000] <JonathanNeal>
just a moment

[15:03:12.0000] <Hixie>
no rush

[15:03:25.0000] <JonathanNeal>
17, 0

[15:05:50.0000] <Hixie>
JonathanNeal: fascinating. thanks.

[15:09:06.0000] <JonathanNeal>
what does it mean?

[15:24:32.0000] <Hixie>
JonathanNeal: means that IE is further away from the other browsers than is useful to include IE in our sample set :-)

[15:49:10.0000] <Hixie>
man

[15:49:33.0000] <Hixie>
i could really do with dreamhost giving me more visibility into what processes are taking up all the memory when it decides that my machine is out of RAM and should be rebooted


2014-01-17
[17:32:25.0000] <JonathanNeal>
Hixie: tried digital ocean?

[17:59:36.0000] <Hixie>
JonathanNeal: what's digital ocean?

[17:59:52.0000] <Hixie>
oh, another provider

[18:00:00.0000] <Hixie>
JonathanNeal: i'm happy with the value for money i get at dreamhost

[18:17:28.0000] <JonathanNeal>
Hixie: I'm at an impasse. I love dreamhost support, but I love the control and performance of digital ocean.

[18:33:56.0000] <JonathanNeal>
I didn't know that the whatwg spec allows for multiple main elements. Am I getting that right?

[18:51:13.0000] <Hixie>
JonathanNeal: yup, it's like class=main basically

[18:51:30.0000] <Hixie>
or role=main in aria

[18:51:41.0000] <Hixie>
it gives the main content of something

[18:51:46.0000] <Hixie>
as opposed to the header, footer, nav, etc

[20:28:40.0000] <JonathanNeal>
Hixie: what did <main> solve? Does the absence of <main>, in theory, imply that all content of a document or sectioning element is the main content?

[20:28:48.0000] <Hixie>
<main> doesn't solve anything.

[20:28:50.0000] <Hixie>
it's pointless.

[20:36:50.0000] <JonathanNeal>
Then why is it in the WHATWG spec?

[20:44:01.0000] <Hixie>
browsers implement it, so it has to be in the parser

[20:44:11.0000] <Hixie>
once it's in the parser, *shrug*, it's like <samp>

[20:44:18.0000] <Hixie>
not much point to it, but no point making it non-conforming.

[20:44:46.0000] <JonathanNeal>
Wow, that's all it takes to force the issue? Ouch.

[21:03:40.0000] <Hixie>
JonathanNeal: well it's all it takes to force the issue on the browser conformance criteria, certainly

[21:03:56.0000] <Hixie>
JonathanNeal: on authoring conformance criteria, i just try to make the spec be the most helpful given what browsers do

[21:04:08.0000] <Hixie>
JonathanNeal: so if you want to characterise that as "force", sure

[21:05:14.0000] <JonathanNeal>
Is there a version of the spec that only shows "the good parts" and hides the conformance stuff?

[21:06:01.0000] <Hixie>
developer.whatwg.org ?

[21:06:09.0000] <Hixie>
developers.whatwg.org sorry

[21:10:13.0000] <GPHemsley>
In case anyone's wondering, I just committed a change to anolis that sorts attributes alphabetically

[21:12:10.0000] <Hixie>
/me tries to work out what he did that broke his pipeline

[21:12:20.0000] <Hixie>
i'm getting an error in my index preprocessor that has zero to do with anything i changed. wtf.

[21:40:17.0000] <GPHemsley>
Hixie: That's not related to my anolis change, is it?

[21:40:28.0000] <GPHemsley>
The mimesniff spec is once again open for business, BTW.

[21:40:44.0000] <Hixie>
no, it works fine with the earlier version of the html spec

[21:40:50.0000] <Hixie>
excellent to hear about mimesniff

[21:41:07.0000] <GPHemsley>
(Now that I've fixed anolis, I can get back to committing without worrying that all my attributes are gonna rearrange themselves randomly)

[21:41:28.0000] <GPHemsley>
Yeah, it seems to have finally attracted some notice...

[21:43:12.0000] <GPHemsley>
Hixie: I'm tracking that <video> bug, but I haven't seen anything that warrants any changes on my end. If something comes up, make sure I realize it. (Calling me out by name in the bug would be enough.)

[21:44:00.0000] <Hixie>
well, the relevant algorithm isn't finished

[21:44:07.0000] <Hixie>
other than that, i'm not aware of any needed changes yet

[21:44:27.0000] <GPHemsley>
ok

[21:44:53.0000] <GPHemsley>
feel free to point out the parts that need finishing

[21:45:05.0000] <GPHemsley>
in the meantime, though, I think I'm gonna go to bed

[21:46:36.0000] <Hixie>
the parts are in red :-)

[22:30:37.0000] <zcorpan>
cors's a rec? woot

[22:31:29.0000] <zcorpan>
annevk-cloud: second rec, is it?

[22:34:53.0000] <wirepair>
hsivonen: quick question, why does nu.validator.htmlparser.test.TokenPrinter go totally bonkers when encountering scripts that contain < >?

[22:35:02.0000] <wirepair>
http://pastie.org/private/cloijixbsxsaxh5h3uxfza <-- example

[22:35:57.0000] <wirepair>
do i need to tell the driver to ignore script data?

[22:37:26.0000] <wirepair>
(and if so, how)?

[22:38:55.0000] <JonathanNeal>
Here's a blog I'm working on addressing the subject of subheadings in W3C's HTML spec, http://www.jonathantneal.com/blog/introducing-subhead/ password: review

[22:40:28.0000] <Hixie>
JonathanNeal: you give the w3c way too much credit :-)

[22:40:46.0000] <Hixie>
JonathanNeal: most of what you describe as "you" was done in the whatwg, much of it long before the w3c came along

[22:41:17.0000] <Hixie>
JonathanNeal: not to mention that <hgroup> doesn't force a grouping pattern, so it works fine :-)

[22:43:36.0000] <JonathanNeal>
It does, on <h1-6>, as does the entire outline algorithm.

[22:44:00.0000] <Hixie>
the html4 outline algorithm forces grouping? what?

[22:44:32.0000] <Hixie>
i don't understand the problems you're trying to solve

[22:44:39.0000] <Hixie>
what's a page hgroup doesn't work on?

[22:45:01.0000] <JonathanNeal>
The new outline algorithm; <section>, <aside>, etc. And I would argue that <hgroup> is most "convoluted" example of it.

[22:45:36.0000] <Hixie>
the outlining of the new sectioning elements, if you ignore the html4 stuff, is literally just nested elements.

[22:45:39.0000] <Hixie>
there's not much to it.

[22:45:54.0000] <Hixie>
what's convoluted about <hgroup>?

[22:45:59.0000] <Hixie>
/me is baffled by this conversation

[22:47:09.0000] <JonathanNeal>
<hgroup> does not allow child elements like <a> or <span>, which is too strict.

[22:47:30.0000] <Hixie>
do you have a sample page where i can look at what you're trying to do?

[22:48:25.0000] <JonathanNeal>
Outside of <hgroup>, things like <h3>Lord of the Rings</h3><h2>The Two Towers</h2> mean something very different.

[22:48:46.0000] <Hixie>
yes, that's why we have hgroup...

[22:49:48.0000] <JonathanNeal>
Hixie: when I was at Liferay, our CMS let users dynamically add a heading and slogan, and when we used <hgroup> it meant developers couldn't stick presentational elements inside it without adding them one of the inner headings themselves.

[22:50:21.0000] <Hixie>
so, regardless of what we do with hgroup, you know that all the presentational elements are no longer conforming, right...

[22:50:45.0000] <JonathanNeal>
<span>s?

[22:51:00.0000] <Hixie>
can you paste an example of what you want to do?

[22:54:42.0000] <JonathanNeal>
https://gist.github.com/jonathantneal/8469464

[22:56:11.0000] <Hixie>
that shouldn't be conforming even if you replace the <hgroup> with <div>s and the <hx>s with <p>s

[22:56:14.0000] <Hixie>
use CSS for that kind of thing

[23:06:57.0000] <JonathanNeal>
In the example I provided, I agree with you. To the more general point, <subhead> can be a child or sibling of a <h1-6>, which is more flexible. Sorry if I'm starting to repeat our last discussion.

[23:07:24.0000] <Hixie>
do you have an example that shows what you want to do with <hgroup> that you can't do that you agree you should be able to do?

[23:10:46.0000] <JonathanNeal>
Probably none that you haven't disputed already.

[23:11:04.0000] <Hixie>
i'm only looking for ones _you_ think are legit, not for ones _i_ think are legit

[23:15:58.0000] <JonathanNeal>
Any subheading that is best expressed as a child of the heading. <h1>Dr. Strangelove <subhead>or: ...</subhead></h1>

[23:16:40.0000] <Hixie>
in what sense is that "best expressed as a child"? seems entirely equivalent to <h1>Do Strangelove</h1> <h2>or: ...</h2>

[23:19:44.0000] <JonathanNeal>
That subheading is intrinsically inline.

[23:20:19.0000] <Hixie>
hm, actually, looks like it's not a subheading

[23:20:23.0000] <Hixie>
the title is just that long

[23:21:59.0000] <MikeSmith>
bingo

[23:22:08.0000] <MikeSmith>
in that case at least

[23:22:24.0000] <MikeSmith>
it's just a title with a colon in it

[23:22:51.0000] <JonathanNeal>
Hi Mike!

[23:22:58.0000] <MikeSmith>
hey man

[23:24:25.0000] <MikeSmith>
JonathanNeal: fwiw, to me subheadings have always seemed to be something that end users don't care much about or are not even aware of

[23:25:34.0000] <hsivonen>
wirepair: I don't know. I haven't look at TokenPrinter in years

[23:25:41.0000] <JonathanNeal>
MikeSmith: there's a dangerous, grey, probably swerving and overlapping line between clarity and verbosity.

[23:26:22.0000] <MikeSmith>
JonathanNeal: how so? To end users they're rendered the same regardless of how you mark them up

[23:27:32.0000] <MikeSmith>
I mean you can put a line break into the title wherever you choose

[23:28:52.0000] <JonathanNeal>
I could try to semantically distinguish bylines from headings (eg https://gist.github.com/jonathantneal/7818198#project-gutenberg ) but the visual styling will mean more to most users than the elements behind them. I might argue the world doesn't *need* <abbr> (it can be accomplished with a span and title="") or <h2-6> (could just have easily had <h id="">

[23:28:53.0000] <JonathanNeal>
and <h for="">).

[23:29:20.0000] <MikeSmith>
or you can just use a colon if you want, which in practice has the meaning "the part after this colon is the subheading|-title"

[23:29:51.0000] <MikeSmith>
JonathanNeal: sure

[23:29:52.0000] <wirepair>
hsivonen: hrm, ok

[23:30:24.0000] <wirepair>
i'll look at ff source to figure out why they don't consider it a start of a new tag

[23:30:26.0000] <JonathanNeal>
And with ever advancing CSS selectors, it could be all the easier to style. However, it can be nice to be clear at when you intend those breaks. "Mission: Impossible"

[23:30:47.0000] <MikeSmith>
JonathanNeal: like all such things, I guess it comes down to how you choose to spend your authoring time

[23:31:53.0000] <MikeSmith>
and yeah there are always exceptions but the exceptions are almost always common sense

[23:32:02.0000] <JonathanNeal>
Right. To my original point, if W3C thinks <hgroup> is too restrictive (which I sympathize with as seen in our above discussion) then I thought to write that "letter to a friend" blog post.

[23:32:19.0000] <MikeSmith>
I mean, nobody thinks "IMpossible" in that example is a subheading

[23:32:32.0000] <JonathanNeal>
WHATWG saw the need (first) and contributed their solution.

[23:32:52.0000] <MikeSmith>
JonathanNeal: yeah fair enough

[23:33:47.0000] <Hixie>
JonathanNeal: personally i still don't really see needs that aren't met by hgroup. You could easily do hgroup > { display: inline } if you really needed it.

[23:33:56.0000] <Hixie>
JonathanNeal: i'm more worried about your letter causing further forking.

[23:38:50.0000] <JonathanNeal>
That's a valid concern, to which my must assert an opinion: <hgroup> died long before W3C killed it. Bruce Lawson complained about it back in 2010. It wasn't the cowpath that won over developers. As a result, there is a void, and <subhead> is a solution that addresses the specific reasons <hgroup> was rejected. To that end, can you think of reasons <subhead>

[23:38:51.0000] <JonathanNeal>
is worse than using <hgroup>?

[23:39:16.0000] <JonathanNeal>
"my must assert" ... seriously, my apologies for such poor writing.

[23:40:17.0000] <Hixie>
hgroup is widely used, widely implemented, and mentioned in many tutorials. how is it dead?

[23:41:23.0000] <Hixie>
the only thing that's slowed use of hgroup is the FUD over it causing people being confused about whether they can use it or not

[23:41:59.0000] <JonathanNeal>
I've found ONE so far on Google, and the bottom paragraph is rather telling http://webdesign.about.com/od/html5tutorials/a/use-hgroup-element.htm

[23:43:00.0000] <Hixie>
the "controversy" one?

[23:43:05.0000] <JonathanNeal>
I'm looking for one from the last twelve months that recommends it.

[23:43:40.0000] <Hixie>
in the last 12 months people will have avoided recommending it because of the nonsense about it being deprecated

[23:44:32.0000] <zcorpan>
i recommend that JonathanNeal uses <hgroup>!

[23:44:37.0000] <zcorpan>
there, mere seconds ago

[23:45:05.0000] <Hixie>
https://developer.mozilla.org/en-US/docs/Web/HTML/Element/hgroup was last updated in 2013

[23:45:42.0000] <Hixie>
http://www.html5tutorial4u.com/hgroup-element.htm is (c) 2014, dunno when last updated

[23:46:17.0000] <JonathanNeal>
My requirements were probably loaded. Sorry. When I said "that recommends it" I think your example mentioning "refrain from using it" disqualifies it.

[23:46:58.0000] <JonathanNeal>
But who would write a tutorial and ignore the controversy, so I concede that it should be impossible to find a tutorial that recommends it since W3C removed it, if only because they removed it.

[23:47:18.0000] <Hixie>
well yeah, everyone who tries to be independent is going to say "but be wary kids, the w3c has dropped it!"

[23:48:28.0000] <Hixie>
http://developers.whatwg.org/ recommends it and was updated within the last month or so

[23:49:21.0000] <JonathanNeal>
My opinion™: Before it was officially removed, it was shrouded in controversy, and before that it was often complained about, loudly by (i'm guessing) Lawson and Falkner.

[23:49:42.0000] <Hixie>
i never heard of any controversy before it was dropped, other than from faulkner.

[23:49:59.0000] <Hixie>
at least, not any more than the same background complaining we get about everything

[23:50:09.0000] <JonathanNeal>
Tangent, "developers" is beautiful. I am so glad that was done. I love it, and just want to affirm it again.

[23:50:23.0000] <Hixie>
if you want to see controversy, you should see e.g. the complaints on appcache.

[23:50:27.0000] <Hixie>
now _that_ is controversy

[23:51:12.0000] <JonathanNeal>
what's appcache? you mean manifest? *runs*

[23:51:29.0000] <MikeSmith>
face punching

[23:51:58.0000] <Hixie>
appcache is the feature that includes manifest="", yes

[23:51:59.0000] <JonathanNeal>
If it wanted to be part of html5 so badly, why wasn't it written in XML? RSS knew better.

[23:52:53.0000] <JonathanNeal>
Sorry, I was running, but MikeSmith nailed me in the face.

[23:54:32.0000] <MikeSmith>
JonathanNeal: no I geuss the appcache hater guy did accidently

[23:54:55.0000] <MikeSmith>
or maybe he wants to punch subheadings in the face too

[23:55:45.0000] <MikeSmith>
I think he should really save his punches for the DOM

[23:55:58.0000] <zcorpan>
yeah careful with inventing new stuff, your face might become a target for punches

[23:56:41.0000] <zcorpan>
subpunch in the <subhead>

[23:57:02.0000] <MikeSmith>
I bet this guy probabably doesn't pay too much attention to CSS yet

[23:57:08.0000] <JonathanNeal>
oh...

[23:57:11.0000] <JonathanNeal>
/me puts aside the suggestion to drop <, >, and allow css selectors as elements.

[23:57:35.0000] <MikeSmith>
or maybe he tried to but then as soon as he started he keeled over and died right away from anger

[23:58:02.0000] <MikeSmith>
before he could unleash the punches

[23:59:29.0000] <MikeSmith>
anyway in other news I guess Domenic_ is afk by now

[23:59:59.0000] <MikeSmith>
would really like to chat with him some about Streams stuff

[00:00:12.0000] <MikeSmith>
and/or marcosc

[00:06:31.0000] <MikeSmith>
/me wonders if foolip's full-time job is now demolition

[00:10:35.0000] <MikeSmith>
Hixie if you're still awake didn't Philip`s multipage script used to correct fragment references so that they get rewritten to the right URL?

[00:10:50.0000] <MikeSmith>
redirected

[00:10:50.0000] <Hixie>
yeah is it not working?

[00:11:27.0000] <MikeSmith>
Hixie: unless I'm misunderstanding it doesn't seem to be working now

[00:11:33.0000] <MikeSmith>
e.g., http://www.whatwg.org/htm/#event-0

[00:11:36.0000] <Hixie>
damnit

[00:11:42.0000] <Ms2ger>
MikeSmith, html?

[00:11:46.0000] <MikeSmith>
yeah

[00:11:53.0000] <MikeSmith>
meant html

[00:11:57.0000] <Ms2ger>
That used to work for me...

[00:11:58.0000] <MikeSmith>
http://www.whatwg.org/html/#event-0

[00:12:05.0000] <MikeSmith>
http://www.whatwg.org/specs/web-apps/current-work/multipage/#event-0

[00:12:19.0000] <MikeSmith>
should go to http://www.whatwg.org/specs/web-apps/current-work/multipage/section-index.html#events-0

[00:12:29.0000] <MikeSmith>
but doesn't

[00:13:01.0000] <Hixie>
it seems the multipage script on anne's server occasionally returns incomplete data

[00:13:19.0000] <MikeSmith>
oh

[00:14:24.0000] <Ms2ger>
http://www.whatwg.org/html/#dom-blur wfm

[00:14:25.0000] <MikeSmith>
hmm yeah http://www.whatwg.org/html/#event for example works

[00:14:37.0000] <MikeSmith>
Ms2ger: yeah it's just some that don't

[00:14:39.0000] <Hixie>
i just regenned

[00:14:44.0000] <MikeSmith>
maybe newer ones

[00:16:22.0000] <MikeSmith>
Hixie: http://www.whatwg.org/specs/web-apps/current-work/multipage/#event-0 still not working afaikt

[00:16:52.0000] <Hixie>
is there an id="event-0" anywhere?

[00:17:10.0000] <MikeSmith>
yeah

[00:17:16.0000] <MikeSmith>
oh shit

[00:17:18.0000] <MikeSmith>
sorry

[00:17:44.0000] <MikeSmith>
events-0

[00:18:11.0000] <Ms2ger>
Well, that seems like a good reason for it not to work :)

[00:18:57.0000] <MikeSmith>
somebody should punch me in the face

[00:19:01.0000] <MikeSmith>
sorry Hixie

[00:19:11.0000] <MikeSmith>
for the noise

[00:19:15.0000] <Ms2ger>
/me gives MikeSmith a beer instead

[00:19:22.0000] <MikeSmith>
heh

[00:21:45.0000] <Hixie>
nn

[00:23:58.0000] <Ms2ger>
nn

[00:24:27.0000] <Ms2ger>
TabAtkins, have you filed a bug for the textContent special case? I think we discussed in in Gecko but decided against

[00:32:51.0000] <foolip>
MikeSmith: not really, but it's hard to stop!

[00:33:27.0000] <Ms2ger>
foolip!

[00:33:44.0000] <Ms2ger>
I had something for you to demolish

[00:33:51.0000] <Ms2ger>
It's an outstanding test review

[00:34:29.0000] <foolip>
Ms2ger: show it to me!

[00:34:32.0000] <Ms2ger>
But I don't remember which

[00:34:35.0000] <Ms2ger>
So do them all :)

[00:34:36.0000] <zcorpan>
Hixie: you might be able to recognize that something in-band is a text track without supporting it, and expose the raw data to JS, or some such

[00:34:53.0000] <sangwhan>
I'm assuming no - but has Window.close() / Window.open() ever been standardized?

[00:35:03.0000] <MikeSmith>
foolip: cool to see all that stuff getting cleaned up

[00:35:05.0000] <Ms2ger>
Yes?

[00:35:12.0000] <Ms2ger>
They're in HTML

[00:35:24.0000] <foolip>
Ms2ger: can I see which ones are assigned to me? I assume it had something to do with video or track?

[00:35:41.0000] <Ms2ger>
foolip, look if https://critic.hoppipolla.co.uk/dashboard has anything?

[00:36:04.0000] <Ms2ger>
But yes, probably along those lines

[00:36:06.0000] <foolip>
Ms2ger: sure, I don't often look there :)

[00:36:25.0000] <foolip>
Ms2ger: all I can find is https://critic.hoppipolla.co.uk/r/426

[00:36:40.0000] <foolip>
but that's my review, not something for me to review...

[00:36:56.0000] <Ms2ger>
Oh, right, that was it, actually

[00:37:01.0000] <Ms2ger>
/me blames his memory

[00:37:36.0000] <sangwhan>
Ms2ger: Sorry, think I got the wording wrong - "implementation wise standardized"

[00:37:50.0000] <Ms2ger>
Is the word you're looking for "interoperable"?

[00:38:01.0000] <foolip>
Ms2ger: so, I was waiting for zcorpan, but he doesn't remember really

[00:38:27.0000] <foolip>
I'm going to drop that review and revisit the next time I try to get it working in Blink I think

[00:38:51.0000] <sangwhan>
Ms2ger: Yes.

[00:39:29.0000] <Ms2ger>
foolip, wfm

[00:40:13.0000] <Ms2ger>
foolip, and feel free to look at https://critic.hoppipolla.co.uk/r/74 if you have time too :)

[00:40:45.0000] <Ms2ger>
And / or add a filter for the media dirs

[00:40:58.0000] <foolip>
Ms2ger: ah yes, the one I'm waiting for. what can I do to move it along?

[00:41:08.0000] <foolip>
looks like people are waiting for ... something?

[00:41:24.0000] <Ms2ger>
Someone to review it :)

[00:41:33.0000] <Ms2ger>
Unless you wrote those tests, I guess

[00:41:59.0000] <foolip>
only a few of them

[00:42:04.0000] <foolip>
I'll have a look then

[00:42:11.0000] <Ms2ger>
Great, thank you!

[00:43:33.0000] <davve>
Ms2ger: Do you have a reference to where you decided against the textContent special case?

[00:47:00.0000] <Ms2ger>
Probably https://bugzilla.mozilla.org/show_bug.cgi?id=725221 or https://bugzilla.mozilla.org/show_bug.cgi?id=404385

[00:52:36.0000] <foolip>
Ms2ger: do we really want to move and fix the tests at the same time? seems like that'll be suboptimal for history digging

[00:54:10.0000] <Ms2ger>
Mm

[00:54:31.0000] <Ms2ger>
The moving is the only real opportunity to fix them, though

[00:55:06.0000] <Ms2ger>
And I guess it won't be such a problem if we don't squash?

[00:55:49.0000] <sangwhan>
I'm a bit curious what the rationale for "or if it is a browsing context whose session history contains only one Document." in window.close() is

[00:56:28.0000] <sangwhan>
Now that everyone and his dog has a WebUI landing page, only contexts with the page that contains window.close() opened by the default protocol handler is closable due to this, in case the implementation is compliant

[00:56:36.0000] <marcosc>
MikeSmith: what do you want to know about streams?

[00:56:59.0000] <Ms2ger>
Hi marcosc

[00:57:05.0000] <sangwhan>
...and Gecko ships with dom.allow_scripts_to_close_windows as false

[00:57:07.0000] <marcosc>
Ms2ger: hallo!

[00:57:07.0000] <Ms2ger>
I bet there's test reviews you could do :)

[00:57:27.0000] <marcosc>
Ms2ger, maybe?

[00:57:36.0000] <sangwhan>
Safari ignores it, period. IE seems to return something when window.close() is called unlike everyone else?

[00:57:55.0000] <foolip>
Ms2ger: ah right, of course, just keep the fixes separate

[00:58:17.0000] <foolip>
Ms2ger: so what's the scope of fixing to be done? conversion to testharness.js I guess, what else?

[00:59:12.0000] <Ms2ger>
foolip, wait, do any not use testharness.js?

[00:59:59.0000] <foolip>
Ms2ger: I think lots of them don't, but I haven't checked just now

[01:00:12.0000] <foolip>
but if they don't, that needs fixing, yes?

[01:00:55.0000] <zcorpan>
foolip: that PR is basically just the <track> tests, not all of opera's media tests

[01:01:06.0000] <zcorpan>
so they're either testharness or reftests

[01:01:39.0000] <Ms2ger>
Yes, if they don't, they do need fixing, but it looks like zcorpan is correct

[01:02:02.0000] <zcorpan>
dumping all of the media tests hasn't happened yet i think

[01:03:03.0000] <Ms2ger>
/me heads off for a bit

[01:03:45.0000] <foolip>
zcorpan: oh

[01:04:28.0000] <foolip>
zcorpan: can you rebase the move so that it can be merged cleanly to master? I'd like to have it merged locally and try actually running the tests as I review them

[01:05:20.0000] <foolip>
zcorpan: did your submission/Opera/media-resource-selection branch ever get anywhere?

[01:05:21.0000] <zcorpan>
foolip: i see some .htaccess which needs to be converted to wpt-serve equivalent (seems like it just sets no-cache, dunno if that's necessary with wpt-serve)

[01:06:30.0000] <zcorpan>
foolip: is it a matter of clicking "prepare rebase" in critic?

[01:06:51.0000] <foolip>
zcorpan: no, you have to actually resolve the conflicts as well :)

[01:07:01.0000] <zcorpan>
bah :-P

[01:10:36.0000] <zcorpan>
is http://robots.thoughtbot.com/keeping-a-github-fork-updated a set of steps i should follow?

[01:14:00.0000] <Ms2ger>
zcorpan, no, the prepare rebase button doesn't work here

[01:14:26.0000] <Ms2ger>
You need to rebase to master without making other changes, push, and then a new button appears

[01:14:33.0000] <Ms2ger>
Or ask jgraham :)

[01:14:47.0000] <sangwhan>
Ms2ger: Or just manually create a new review if all fails

[01:15:20.0000] <Ms2ger>
I'd prefer not :)

[01:15:38.0000] <zcorpan>
jgraham: i need to do something in git, please help

[01:17:53.0000] <SteveF>
faulkner says: if you wanna smoke hixie's weed pop a <hgroup> in your pipe

[01:18:16.0000] <Ms2ger>
/me says: I'm bored of hgroup talk already

[01:18:38.0000] <SteveF>
Ms2ger: better if you smoke it

[01:18:56.0000] <Ms2ger>
Feel free to

[01:19:35.0000] <SteveF>
FUDlicious

[01:20:03.0000] <zcorpan>
it might be dangerous to smoke a pipe in case you get punched in the face

[01:21:00.0000] <SteveF>
might be dangerous to punch someone smoking a knife pipe

[01:23:58.0000] <zcorpan>
/me successfully followed these steps https://help.github.com/articles/syncing-a-fork

[01:24:15.0000] <zcorpan>
now rebase the branch...

[01:37:38.0000] <sangwhan>
Hixie: Is the rationale behind window.close() only working when there is one document in the session due to abuse concerns?

[01:38:23.0000] <MikeSmith>
marcosc: for starters it would nice to have a short description of what the fundamental difference is between Domenic_ current draft and the WebApps draft

[01:39:45.0000] <MikeSmith>
would be helpful to me personally for understanding and I would think helpful to others who are trying to follow along at home

[01:39:52.0000] <zcorpan>
someone(TM) should go through MDN and fix all "DOM Level 0. Not part of any standard."

[01:40:42.0000] <sangwhan>
/me mysqldump and sed on MDN time, what could possibly go wrong

[01:41:03.0000] <MikeSmith>
sangwhan: Hixie is afk

[01:41:29.0000] <sangwhan>
MikeSmith: Aha

[01:42:10.0000] <MikeSmith>
sangwhan: you should ping him later if you're up late, or just wait til morning your time

[01:42:43.0000] <sangwhan>
MikeSmith: I'll try either of those, depending on how long I end up throwing around IPC messages

[01:49:05.0000] <MikeSmith>
zcorpan: if you're rebasing a branch that critic is tracking, critic is not going to be happy

[01:49:15.0000] <MikeSmith>
nor jgraham

[01:49:32.0000] <MikeSmith>
since he'll have to un-fugg critic after

[01:49:50.0000] <MikeSmith>
as far as in my experience at least

[01:50:24.0000] <zcorpan>
but the PR can't be merged cleanly now anyway

[01:50:46.0000] <zcorpan>
because some files moved and wpt-serve changed some things

[01:51:22.0000] <zcorpan>
but i'll wait for jgraham's advice

[01:55:18.0000] <marcosc>
MikeSmith: Domenic_, Feras, Takeshi and I are having a call to converge the specs next week

[01:55:37.0000] <marcosc>
if all goes to plan, we should only have a single spec

[02:01:47.0000] <Ms2ger>
And then a fork, amirite

[02:02:16.0000] <marcosc>
youisrite

[02:02:17.0000] <jgraham>
I can unfugg critic

[02:02:41.0000] <jgraham>
And indeed you can too, although you need to be a little bit careful

[02:03:02.0000] <Ms2ger>
zcorpan, the git master has arrived :)

[02:03:38.0000] <zcorpan>
seems like foolip is doing the heavy lifting for me

[02:04:06.0000] <jgraham>
On critic?

[02:04:51.0000] <foolip>
jgraham: I'm rebasingand resolving the conflicts

[02:06:52.0000] <jgraham>
foolip: OK. Do you know how to tell critic about the rebase for a tracking branch?

[02:12:34.0000] <foolip>
jgraham: no, and I think you're going to have to tell zcorpan, I just prepared the rebased branch: https://github.com/foolip/web-platform-tests/tree/submission/Opera/media

[02:12:48.0000] <foolip>
jgraham: I guess only simon can add commits to his review, yes?

[02:14:54.0000] <jgraham>
Yeah, due to the "magic of github" this simple process is really difficult

[02:16:45.0000] <jgraham>
Anyway, it is not too hard

[02:16:59.0000] <jgraham>
After pushing you press "rebase branch

[02:17:02.0000] <jgraham>
"

[02:17:32.0000] <jgraham>
And then in "upstream" where it says "refs/heads/master" you put the commit that you actually rebased onto

[02:17:48.0000] <jgraham>
Then you press fetch branch

[02:17:54.0000] <jgraham>
and hopefully it's all OK

[02:17:55.0000] <foolip>
zcorpan: when reviewing, should I raise issues for failing tests, or can we add failing tests?

[02:18:17.0000] <zcorpan>
foolip: we can add failing tests

[02:18:24.0000] <jgraham>
foolip: From a general repo policy failing tests are OK

[02:18:31.0000] <jgraham>
We only demand correctness

[02:18:51.0000] <jgraham>
Working out how to deal with actually running the tests is an implementor problem

[02:19:00.0000] <foolip>
zcorpan: so as long as they run and the failures aren't mysterious to me I'll mark it as reviewed, and try to fix them when importing to Blink, sound good?

[02:19:31.0000] <zcorpan>
foolip: sounds good

[02:19:54.0000] <zcorpan>
jgraham: were those instructions for me? is that a button in critic or github?

[02:20:03.0000] <Ms2ger>
Critic

[02:20:54.0000] <zcorpan>
i don't see "rebase branch" in critic (i see "rebase review" and "prepare rebase")

[02:21:48.0000] <jgraham>
s/branch/review/ then

[02:21:48.0000] <Ms2ger>
jgraham, rebase branch, I guess?

[02:22:08.0000] <jgraham>
"prepare rebase" is the one that doesn't work here

[02:22:23.0000] <jgraham>
It really can't be hard to hide that button…

[02:24:12.0000] <zcorpan>
ok so what do i put in "upstream"?

[02:24:45.0000] <jgraham>
10:17 < jgraham> And then in "upstream" where it says "refs/heads/master" you put the commit that you actually rebased onto

[02:25:20.0000] <jgraham>
So whatever the first commit that isn't part of the branch is according to, say, git log

[02:27:33.0000] <zcorpan>
cfcfc6d5194040a9addb1c1004613db9af6d8075 ?

[02:28:36.0000] <jgraham>
foolip: ^

[02:29:02.0000] <foolip>
zcorpan: yes!

[02:30:33.0000] <zcorpan>
how does critic become aware of https://github.com/foolip/web-platform-tests/tree/submission/Opera/media ? is that the next step?

[02:31:13.0000] <foolip>
zcorpan: you need to update your own branch to match mine first I gather

[02:31:36.0000] <foolip>
it's time for weekend for me now, I hope zcorpan and jgraham prevail!

[02:31:55.0000] <zcorpan>
have a nice one, and thanks for the help :-)

[02:32:11.0000] <foolip>
no problem, I want these tests!

[02:32:31.0000] <zcorpan>
so first i cherry-pick his commit and push, and then "rebase review" in critic?

[02:33:08.0000] <foolip>
zcorpan: first check out your own branch

[02:33:13.0000] <jgraham>
Pull his whole branch and push that, I guess

[02:33:38.0000] <foolip>
then git fetch https://github.com/foolip/web-platform-tests.git submission/Opera/media

[02:33:45.0000] <foolip>
then git reset --hard FETCH_HEAD

[02:33:50.0000] <foolip>
and then push -f

[02:33:55.0000] <foolip>
is my best guess

[02:34:17.0000] <foolip>
put you can of course just push my branch directly, but then your local branch willl be out of sync

[02:34:39.0000] <foolip>
that's it, I'm really going

[02:34:41.0000] <foolip>
poof

[02:43:22.0000] <zcorpan>
i have no upstream set on this branch. git push -f --set-upstream origin submission/Opera/media ?

[02:43:47.0000] <Ms2ger>
jgraham?

[02:47:05.0000] <jgraham>
zcorpan: The upstream in this case is just whatever the base commit of the branch is i.e. the first commit in history that isn't part of the branch (assuming no merges) So if you have a history like -M1-M2-M3-B1-B2-B3 where the M commits are part of master and the B commits are on the branch, it would be M3

[02:49:58.0000] <zcorpan>
jgraham: are you talking about the "upstream" input box in critic or the error i got when trying `git push -f` (fatal: The current branch submission/Opera/media has no upstream branch. ) ?

[02:50:30.0000] <jgraham>
Oh, I was talking about the one on critic

[02:51:13.0000] <jgraham>
In this case you just want to git push -f --set-upstream} {name of your gh remote} HEAD:{name of the branch on github}

[02:52:22.0000] <jgraham>
{name of the branch on github} === submission/Opera/media

[02:53:49.0000] <zcorpan>
 {name of your gh remote} = ?

[02:54:26.0000] <Ms2ger>
Probably origin

[02:54:35.0000] <zcorpan>
ah

[02:55:03.0000] <jgraham>
git remote -vv and look for the one that points to your GH remote

[02:56:07.0000] <zcorpan>
origin	https://github.com/zcorpan/web-platform-tests.git (fetch)

[02:56:07.0000] <zcorpan>
origin	https://github.com/zcorpan/web-platform-tests.git (push)

[02:56:07.0000] <zcorpan>
upstream	https://github.com/w3c/web-platform-tests.git (fetch)

[02:56:08.0000] <zcorpan>
upstream	https://github.com/w3c/web-platform-tests.git (push)

[02:56:49.0000] <annevk>
GPHemsley: if you're around, is there anything still unclear with respect to the image/svg+xml thing?

[02:56:50.0000] <Ms2ger>
So indeed origin

[02:57:04.0000] <zcorpan>
git push -f --set-upstream origin HEAD:submission/Opera/media

[03:00:10.0000] <jgraham>
Yes

[03:00:26.0000] <zcorpan>
ok done

[03:01:10.0000] <jgraham>
Do you want me to poke critic?

[03:01:23.0000] <zcorpan>
now rebase review in critic with cfcfc6d5194040a9addb1c1004613db9af6d8075 as "upstream" right?

[03:03:23.0000] <jgraham>
Yes

[03:04:18.0000] <zcorpan>
ok done. now "enable tracking"?

[03:04:35.0000] <jgraham>
Yes

[03:05:26.0000] <zcorpan>
hmm. done but it didn't bite it seems

[03:05:53.0000] <jgraham>
It did, you need to force refresh

[03:05:57.0000] <jgraham>
I don't know why

[03:07:01.0000] <jgraham>
OK, going to be afk (or afi) for a bit

[03:07:17.0000] <zcorpan>
ah, how silly. don't even know how to force refresh in new opera

[03:07:25.0000] <zcorpan>
thanks for the hlep

[03:50:17.0000] <Ms2ger>
dglazkov, ping

[04:10:52.0000] <zcorpan>
annevk: Hixie: can't you just get along? :-P

[04:25:11.0000] <Ms2ger>
zcorpan, foolip, where's cors-tester.py?

[04:26:56.0000] <Ms2ger>
Oh, looks like it's in the repo

[04:28:33.0000] <jgraham>
Seriously hg, where is something like git reset --hard?

[04:29:25.0000] <Ms2ger>
What does that do?

[04:30:35.0000] <davve>
jgraham: Tried 'hg revert --all' ?

[04:32:03.0000] <jgraham>
davve: That only works on the working copy, not the actual repo

[04:32:40.0000] <jgraham>
I was trying to get rid of a whole bunch of commits that I managed to pull in by accident trying to transfer stuff from one repo to another

[04:33:02.0000] <Ms2ger>
hg strip first-rev-to-get-rid-of

[04:33:17.0000] <Ms2ger>
Note: destroys history, use with care

[04:34:08.0000] <jgraham>
Ms2ger: Yeah, so I ended up using hg strip, it it wasn't really clear what the first rev to get rid of was

[04:34:50.0000] <jgraham>
Possibly because I also don't know what the equivalent of merge-base is

[04:35:07.0000] <Ms2ger>
Maybe hg strip -r "outgoing(inbound)"?

[04:35:25.0000] <jgraham>
Perhaps?

[04:35:38.0000] <jgraham>
I did 'hg outgoing --template="{node}\n" -q | xargs hg strip'

[04:35:57.0000] <Ms2ger>
Sounds like it'd do the same

[04:36:54.0000] <jgraham>
Either way, git reset --hard origin/master would have been easier

[04:37:10.0000] <Ms2ger>
Because you know that one :)

[04:37:22.0000] <jgraham>
Well yes and the internet knows that one

[04:37:39.0000] <jgraham>
Google is not very helpful for hg

[04:38:00.0000] <jgraham>
It is usually people on stack overflow that know it about as well as I do and MDN

[04:38:01.0000] <Ms2ger>
http://stackoverflow.com/questions/2139165/mercurial-delete-all-local-changesets-revert-to-tree

[04:38:15.0000] <Ms2ger>
Is the first hit for "remove local changesets hg"

[04:38:49.0000] <Ms2ger>
Accepted answer gives hg strip 'roots(outgoing())', which is what I meant

[04:39:45.0000] <jgraham>
Well when I searched I found a question where the answer was roughly "uh, I dunno, reclone? Or use strip?"

[04:39:57.0000] <jgraham>
Which I had already worked out...

[04:40:31.0000] <Ms2ger>
/me kicks critic

[04:40:39.0000] <Ms2ger>
JavaScript error: https://critic.hoppipolla.co.uk/static-resource/changeset.js?mxynzt, line 822: files[file_id] is undefined

[04:43:41.0000] <Ms2ger>
STR: https://critic.hoppipolla.co.uk/6bf4020f?review=74 click on one of the -4's for the htaccess removal, click fetch deleted lines

[04:48:41.0000] <annevk>
zcorpan: Hixie and I don't get along?

[04:49:20.0000] <zcorpan>
annevk: you keep disagreeing about url query encoding

[04:50:49.0000] <Ms2ger>
Is there a way to have github tell you the PR of some commit?

[04:51:42.0000] <annevk>
zcorpan: ah yes we do

[04:52:09.0000] <annevk>
zcorpan: we both have to care for all the other people that most likely do not care at all

[04:54:05.0000] <zcorpan>
annevk: if you both care but don't come to a conclusion then we're not making progress

[04:58:07.0000] <annevk>
zcorpan: so it sounds like you care too

[04:58:16.0000] <annevk>
zcorpan: I added another comment

[05:01:19.0000] <zcorpan>
i care about coming to a conclusion, less which it is :-)

[05:41:50.0000] <annevk>
I always attributed 'The answer to "how do I mark up X" is "mu"' to Mark Pilgrim, but he quoted from http://www.propylon.com/news/ctoarticles/Zen_and_the_Art_of_Motorcycle_Manuals_20020822.html which might have quoted from another site I can't access

[05:46:13.0000] <jgraham>
Zen and the Art of Motorcycle Maintainance is a book, so presumbably this is a reference to that

[05:46:45.0000] <darobin_>
yeah, I doubt ZAMM would be quoting from a site :)

[06:09:44.0000] <zcorpan>
i tried the link in web.archive but it just said "ad expired" or some such

[06:10:25.0000] <annevk>
darobin_: that article has a [1] directly after the quote which is a dead link

[06:11:44.0000] <darobin_>
annevk: it's been a very long time since I read ZAMM, but it's probably referring to http://en.wikipedia.org/wiki/Mu_%28negative%29

[06:12:07.0000] <annevk>
darobin_: well that much is clear to me

[06:12:35.0000] <darobin_>
annevk: I would bet that the itw.etc site just had a definition of that, from before everything was on Wikipedia

[06:14:16.0000] <annevk>
darobin_: ait

[07:11:17.0000] <jgraham>
Where does the spec set document.contentType for parsed documents?

[07:13:43.0000] <GPHemsley>
annevk: I'm still not seeing the problem in the algorithm. image/svg+xml is always assumed to be the correct type. No sniffing (in the traditional sense) occurs.

[07:14:43.0000] <GPHemsley>
Ms2ger: I committed a change to anolis last night; I hope that's OK.

[07:33:18.0000] <annevk>
GPHemsley: oh you generalized from SVG to XML type? http://mimesniff.spec.whatwg.org/#sniffing-in-an-image-context

[07:33:57.0000] <annevk>
GPHemsley: basically in an image context only image/svg+xml should be recognized as a type, otherwise you must always sniff, iirc

[07:34:02.0000] <annevk>
GPHemsley: unless nosniff maybe

[09:23:11.0000] <Hixie>
sangwhan: iirc it's just what browsers do, not sure of motivation but annoyance blocking is likely

[09:26:35.0000] <jgraham>
Hixie: Do you know where document.contentType is set?

[09:26:40.0000] <jgraham>
(when parsing)

[09:27:00.0000] <Hixie>
i would assume it's not set during parsing, but interesting question

[09:27:28.0000] <jgraham>
Well I mean when constructing a document for the parser to work on

[09:27:57.0000] <Hixie>
found it

[09:28:02.0000] <Hixie>
it's set in the "Page load processing model for..." sections

[09:28:18.0000] <Hixie>
e.g. "When an HTML document is to be loaded in a browsing context, the user agent must queue a task to create a Document object, mark it as being an HTML document, set its content type to "text/html", create an HTML parser, and associate it with the document."

[09:28:24.0000] <dglazkov>
good morning, Whatwg!

[09:28:41.0000] <Hixie>
found by searching for the Dependencies section in HTML, DOM subsection, finding "content type", and clicking on that

[09:30:10.0000] <jgraham>
So that doesn't say what happens for XML files

[09:30:31.0000] <Hixie>
oh, so it doesn't

[09:30:32.0000] <Hixie>
how odd

[09:30:36.0000] <Hixie>
looks like that one section omits it

[09:31:03.0000] <jgraham>
I started here

[09:31:05.0000] <jgraham>
http://www.whatwg.org/specs/web-apps/current-work/multipage/the-xhtml-syntax.html#parsing-xhtml-documents

[09:31:11.0000] <jgraham>
Which didn't really help

[09:31:17.0000] <Hixie>
oh, i see why

[09:31:44.0000] <jgraham>
But it does make me wonder when the XML parser can implicitly create a Document and what happens in that case

[09:31:46.0000] <Hixie>
i don't actually create the document for XML documents, nor parse it

[09:31:52.0000] <Hixie>
because that's supposed to be defined in the XML specs

[09:31:54.0000] <Hixie>
"When faced with displaying an XML file inline, user agents must first create a Document object, following the requirements of the XML and Namespaces in XML recommendations, RFC 3023, DOM, and other relevant specifications. [XML] [XMLNS] [RFC3023] [DOM]"

[09:32:18.0000] <Hixie>
hence later statements like "If the root element, as parsed according to the XML specifications cited above..."

[09:32:39.0000] <Hixie>
i can add a big warning there about how this isn't actually defined yet

[09:32:47.0000] <Hixie>
if you like

[09:33:14.0000] <Hixie>
or we can just ignore it on the assumption that xml is going to die soon enough anyway (that's at least what abarth and crew keep threatening)

[09:34:02.0000] <jgraham>
Well given the current text in DOM, you would be fogiven for thinking that would create an application/xml contentType always

[09:34:08.0000] <jgraham>
*forgiven

[09:34:18.0000] <Hixie>
it's not just contentType that doesn't get initialised here

[09:34:32.0000] <Hixie>
there's literally no requirement to invoke the XML parser

[09:34:40.0000] <Hixie>
(also, no definition of what an XML parser is)

[09:34:50.0000] <Hixie>
(nor how the XML spec maps to DOM)

[09:36:03.0000] <jgraham>
Interestingly "create a Document Object" doesn't seem to actually create a document object

[09:36:09.0000] <Hixie>
right

[09:36:35.0000] <Hixie>
that's just saying what should happen when the XML spec creates the object

[09:36:46.0000] <Hixie>
like i said, that section is assuming the XML specs define all this

[09:37:35.0000] <jgraham>
Well what actually create a HTML document then?

[09:37:53.0000] <jgraham>
i.e. a text/html Document

[09:38:01.0000] <Hixie>
the mythical "XML parser and DOM" spec

[09:38:11.0000] <Hixie>
oh for HTML

[09:38:36.0000] <Hixie>
well for HTML it doesn't say "create it as defined elsewhere"

[09:38:38.0000] <Hixie>
it just says "create it"

[09:39:30.0000] <jgraham>
I see "the user agent must queue a task to _create a Document object_", but following the link we get to an algorithm that assumes that the document has already been created

[09:39:56.0000] <Hixie>
"creade a Document object" is just a literal statement

[09:40:02.0000] <Hixie>
i suppose i could make the cross-references less confusing

[09:41:05.0000] <jgraham>
Well, ideally there would be a step that says "let /document/ be a new Document object"

[09:41:24.0000] <Hixie>
that's what the four words "create a Document object" mean

[09:41:54.0000] <Hixie>
it's just confusing because it hyperlinks to the implications thereof

[09:41:54.0000] <jgraham>
As a hyperlink they mean "do whatever the algorithm at the other end of the link says"

[09:41:58.0000] <Hixie>
right

[09:42:24.0000] <jgraham>
Which doesn't include actually creating a document object :)

[09:46:16.0000] <Hixie>
jgraham: k, let me poke at this

[10:00:57.0000] <Hixie>
jgraham: alright, look now (singlepage only)

[10:01:05.0000] <Ms2ger>
GPHemsley, yes, of course, thank you, and sorry for dropping the ball there

[10:01:13.0000] <Hixie>
jgraham: (uh, one sec)

[10:01:21.0000] <Ms2ger>
It's always at the end of my todo list :/

[10:01:24.0000] <Ms2ger>
dglazkov, ping

[10:01:25.0000] <Hixie>
jgraham: (ok, ready)

[10:05:21.0000] <jgraham>
Hixie: lgtm

[10:05:26.0000] <jgraham>
Thanks

[10:05:48.0000] <Hixie>
thank _you_!

[10:21:01.0000] <Ms2ger>
"Add a couple of ImageData() constructors, and (in order to make that feasible) drop all the HD stuff on <canvas>."

[10:21:02.0000] <Ms2ger>
Woop

[10:26:57.0000] <Ms2ger>
Hixie, ping

[10:27:00.0000] <Hixie>
po

[10:27:01.0000] <Hixie>
er

[10:27:03.0000] <Hixie>
yo

[10:27:04.0000] <Hixie>
or pong

[10:27:05.0000] <Hixie>
whatever

[10:27:10.0000] <Ms2ger>
Heh

[10:27:37.0000] <Ms2ger>
https://www.w3.org/Bugs/Public/show_bug.cgi?id=24224

[10:28:03.0000] <Ms2ger>
Looks like that changed the behaviour of document.title = "" to not create a text node where it did before

[10:28:08.0000] <Ms2ger>
Was that intentional?

[10:30:46.0000] <Hixie>
Ms2ger: it was not

[10:31:25.0000] <Hixie>
Ms2ger: i was trying to make the mutation observer stuff work

[10:31:50.0000] <Hixie>
Ms2ger: if browsers do create an empty node, can you reopen the bug and try to explain how i should be doing this?

[10:31:56.0000] <Hixie>
Ms2ger: i don't fully follow the mutation observer stuff

[10:32:19.0000] <Ms2ger>
/me looks where his test is

[10:33:20.0000] <Ms2ger>
  var title = document.documentElement.firstChild.lastChild.firstChild;

[10:33:20.0000] <Ms2ger>
  assert_true(title, "Need a node.");

[10:33:24.0000] <Ms2ger>
>.<

[10:35:24.0000] <Ms2ger>
http://w3c-test.org/web-platform-tests/master/html/dom/documents/dom-tree-accessors/document.title-06.html

[10:35:37.0000] <Ms2ger>
Gecko returns null

[10:35:47.0000] <Ms2ger>
Chrome returns a text node

[10:36:09.0000] <Ms2ger>
/me pulls up IE

[10:38:42.0000] <dglazkov>
Ms2ger: yo

[10:38:45.0000] <Hixie>
Ms2ger: safari says "assert_true: Need a node. expected true got Text node ""(...)"

[10:39:01.0000] <Ms2ger>
Yeah, that's because I write buggy tests :)

[10:39:10.0000] <Ms2ger>
So that matches Chrome and the old spec

[10:39:39.0000] <Ms2ger>
dglazkov, hey, there's a bunch of outstanding PRs on web-platform-tests for componentsy things, do you know anybody who could review?

[10:39:54.0000] <Hixie>
Ms2ger: what does IE do?

[10:39:59.0000] <dglazkov>
Ms2ger: yes, just send them my way. I may have lost track.

[10:40:12.0000] <dglazkov>
"may have" -> "definitely"

[10:40:21.0000] <dglazkov>
long vacations are great

[10:41:08.0000] <Ms2ger>
Hixie, looking

[10:41:22.0000] <Ms2ger>
IE doesn't load my test

[10:42:23.0000] <Ms2ger>
(And clocked content due to certificate errors... On msn.com, the default homepage)

[10:44:24.0000] <Ms2ger>
And it can't load the live dom viewer either

[10:44:29.0000] <Hixie>
o_O

[10:44:37.0000] <Ms2ger>
Anyone got IE? :)

[10:44:38.0000] <Hixie>
i have the worst luck testing IE

[10:47:13.0000] <Ms2ger>
Getting browserstack results from bz

[10:48:05.0000] <jgraham>
Pretty sure luck has nothing to do with it

[10:48:32.0000] <Ms2ger>
IE matches the new spec

[10:48:40.0000] <jgraham>
If I was at Microsoft I would totally do if username() == "Hixie" {do_crazy_shit()}

[10:49:44.0000] <Ms2ger>
Hixie, so I guess I'm fine with the change

[10:49:49.0000] <Hixie>
Ms2ger: k

[11:07:04.0000] <Ms2ger>
abarth, ping

[11:13:37.0000] <Ms2ger>
dglazkov, you should add a filter on critic

[11:21:52.0000] <dglazkov>
Ms2ger: teach me?

[11:23:21.0000] <Ms2ger>
Go to https://critic.hoppipolla.co.uk/home

[11:23:36.0000] <jgraham>
Click "Add Filter"

[11:24:04.0000] <jgraham>
Select the web-platform-tests repo

[11:24:17.0000] <jgraham>
Enter the path to web-components

[11:24:49.0000] <jgraham>
After you are done, make sure that you have entered your email address so that you get mail

[11:26:36.0000] <Ms2ger>
And the shadow-dom path

[11:26:42.0000] <Ms2ger>
dglazkov, ^

[11:27:38.0000] <Ms2ger>
(Log in with github credentials)

[11:28:28.0000] <Ms2ger>
foolip, <3

[11:29:32.0000] <jgraham>
Woah

[11:29:39.0000] <jgraham>
I thought foolip was having a weekend

[11:29:58.0000] <dglazkov>
yay, thanks!

[11:31:28.0000] <Ms2ger>
dglazkov, does your dashboard have things now?

[11:31:34.0000] <jgraham>
https://critic.hoppipolla.co.uk/dashboard

[11:33:02.0000] <dglazkov>
yes, they say "active", but all of them have already been closed, I think? Still clicking...

[11:33:23.0000] <dglazkov>
I don't get critic I guess

[11:33:52.0000] <jgraham>
dglazkov: There might be some that are out of sync due to historical bugs

[11:35:00.0000] <Ms2ger>
Yeah

[11:35:14.0000] <Ms2ger>
There are still open ones, though...

[11:36:02.0000] <Ms2ger>
Like https://github.com/w3c/web-platform-tests/pull/173 which doesn't have a critic review

[11:36:03.0000] <Ms2ger>
jgraham, ^

[11:36:25.0000] <Ms2ger>
And https://github.com/w3c/web-platform-tests/pull/178

[11:39:06.0000] <jgraham>
dglazkov: I dropped all the ones that were closed

[11:42:48.0000] <jgraham>
Uh, 173 did have a review until I dropped it just now :)

[11:42:59.0000] <jgraham>
No comment from critic though

[11:43:10.0000] <jgraham>
https://critic.hoppipolla.co.uk/r/157

[11:43:25.0000] <Ms2ger>
Aha

[11:44:05.0000] <jgraham>
dglazkov: 5 reviews that would benefit from your attention unless I am miscounting

[11:44:37.0000] <Ms2ger>
/me sees 6 on gh

[11:45:19.0000] <Ms2ger>
Or 5

[11:45:28.0000] <Ms2ger>
/me isn't sure he can count

[11:45:42.0000] <jgraham>
I see 4 now

[11:46:26.0000] <jgraham>
PR #s 173, 221, 278, 29

[11:46:29.0000] <jgraham>
8

[11:46:39.0000] <Ms2ger>
173 178 184 194 221 278

[11:47:19.0000] <jgraham>
Uh, so that's not much overlap :)

[11:47:54.0000] <jgraham>
Ah, right 178 is the one I just fixed

[11:48:05.0000] <Ms2ger>
Looks like I counted imports (which should be html-imports) too

[11:49:34.0000] <jgraham>
OK, all those are in critic

[11:49:45.0000] <jgraham>
dglazkov: You also need a filter for imports/

[11:50:23.0000] <jgraham>
Or maybe not?

[11:50:51.0000] <jgraham>
Yeah, that doesn't exist

[11:50:58.0000] <Ms2ger>
Not in master

[11:51:06.0000] <jgraham>
Oh, I see

[11:51:14.0000] <jgraham>
Which PR adds it?

[11:51:30.0000] <Ms2ger>
178

[11:52:17.0000] <jgraham>
/me adds dglazkov to the list of reviewers for that review

[11:52:40.0000] <jgraham>
Ms2ger: Please comment on the incorrect directory name

[11:53:22.0000] <Ms2ger>
jgraham, tobie did: https://github.com/w3c/web-platform-tests/pull/178#issuecomment-21849903

[11:55:31.0000] <jgraham>
OK

[11:56:13.0000] <Ms2ger>
Does https://github.com/w3c/web-platform-tests/pull/188 have a review?

[12:04:13.0000] <Ms2ger>
gsnedders, want to write a test for https://www.w3.org/Bugs/Public/show_bug.cgi?id=24233?

[12:05:34.0000] <gsnedders>
Ms2ger: File a bug on html5lib-tests?

[12:06:02.0000] <Ms2ger>
gsnedders, want to file a bug on html5lib-tests?

[12:06:11.0000] <gsnedders>
Ms2ger: no

[12:06:16.0000] <Ms2ger>
:(

[12:12:56.0000] <Ms2ger>
gsnedders, do I just add it to the tests##.dat with the highest number?

[12:13:24.0000] <gsnedders>
Ms2ger: You look for any vaguely similar tests and add it there.

[12:14:50.0000] <Ms2ger>
gsnedders, do I need to get #errors right or will some fairy do that for me?

[12:15:39.0000] <gsnedders>
Ms2ger: I typically just throw in whatever html5lib gives. Which given that isn't up to date, and has never been perfect with the errors, probably isn't quite right.

[12:16:22.0000] <Ms2ger>
How do I get the errors out of html5lib?

[12:26:00.0000] <Ms2ger>
gsnedders, or r? https://critic.hoppipolla.co.uk/r/577

[12:29:07.0000] <Ms2ger>
function successCallback(position) {

[12:29:07.0000] <Ms2ger>
  test(function() {assert_true(true)},"Success Callback called");

[12:40:59.0000] <gsnedders>
Ms2ger: Nah, that means reading the spec. :)

[12:41:23.0000] <gsnedders>
(I really don't feel that well at the moment, so anything that involves more than possibly witty responses on IRC is overdoing it.)

[12:43:44.0000] <Ms2ger>
Alright

[12:45:47.0000] <Ms2ger>
"Ms2ger reopened the pull request in a few seconds"

[12:45:48.0000] <Ms2ger>
Whoa

[12:48:22.0000] <Ms2ger>
jgraham, https://github.com/w3c/web-platform-tests/pull/160 doesn't seem to get a review

[12:50:12.0000] <gsnedders>
Ms2ger: Someone badly needs to go through all the spec changes in god-knows-how-long as make sure html5lib has tests to assert the currently correct behaviour :(

[12:50:28.0000] <Ms2ger>
Not just for html5lib :)

[12:50:52.0000] <Ms2ger>
I'd like a way to attach tests to svn revisions

[12:55:36.0000] <gsnedders>
I love Chromium's new issue wizard.

[12:56:01.0000] <gsnedders>
I'm not sure what the steps to reproduce testsuite updates are.

[12:56:35.0000] <gsnedders>
1. Go to the Chromium repo, notice they're different from upstream; 2. Observe the upstream version is newer

[13:06:14.0000] <gsnedders>
https://code.google.com/p/chromium/issues/detail?id=335691 — you want steps? you get steps!

[13:27:39.0000] <jamesr__>
gsnedders: i cc'd some folks for you

[13:28:08.0000] <jamesr__>
not sure what you mean by the LGPL comment

[13:28:39.0000] <Ms2ger>
jamesr__, everything in the repo is lgpl by default?

[13:29:05.0000] <jamesr__>
it is? why?

[13:29:28.0000] <jamesr__>
there is some LGPL code in blink but it's the vast minority

[13:29:30.0000] <Ms2ger>
I would guess that was gsnedders's assumption

[13:30:01.0000] <gsnedders>
jamesr__: follow parent directories until you reach a license file.

[13:30:45.0000] <jamesr__>
gsnedders: what's the one you are hitting?

[13:31:25.0000] <gsnedders>
jamesr__: Oh, this has changed from last time I did this. It's now nothing until chromium/src/LICENSE, which is 3-clause BSD

[13:40:03.0000] <gsnedders>
jamesr__: But thanks for CC'ing people

[13:47:44.0000] <GPHemsley>
annevk: Any other XML-based image type would be treated just the same. You would never sniff an XML type.

[13:48:19.0000] <GPHemsley>
Ms2ger: That's alright, I dropped it too. But I needed it fixed in order to continue with mimesniff. And it turned out to be a lot easier than I thought.

[13:51:42.0000] <Hixie>
so https://www.w3.org/Bugs/Public/show_bug.cgi?id=20701#c119 makes every Window and Location have multiple instances

[13:51:52.0000] <Hixie>
so i can't refer to "the Window object" any more

[13:52:21.0000] <Hixie>
anyone got any bright ideas on how i do that without having to modify all 481 occurrences of Window in the spec?

[13:55:00.0000] <GPHemsley>
can you talk about "a non-native Window object" as distinct from "the Window object"?

[13:55:15.0000] <GPHemsley>
or a "Window-derived object"

[13:55:19.0000] <GPHemsley>
or what have you

[13:55:25.0000] <GPHemsley>
(I'm not clear on the full context)

[14:00:01.0000] <Hixie>
maybe...

[14:06:00.0000] <Hixie>
though i'm sure a lot of the spec talks about "the Window object of..." which will always have to be special-cased which would be a huge pain

[14:09:38.0000] <Hixie>
man the assumption that there's just one Window is really hard-baked into the spec

[14:19:13.0000] <jamesr__>
gsnedders: (i don't know the exact licensing details of these files, but i'd doubt it's LGPL. hopefully one of the cc'd folks can say for real)

[14:21:48.0000] <jamesr__>
gsnedders: also what is 3-clause BSD incompatible with?

[14:29:43.0000] <Ms2ger>
html5lib-tests is MIT, fwiw

[14:33:17.0000] <jamesr__>
right - are those incompatible with each other?

[14:34:53.0000] <Hixie>
mixing MIT and BSD is fine

[14:35:01.0000] <Hixie>
so long as you follow the respective licenses

[14:35:10.0000] <Hixie>
(i.e. include the copyright notice in redistributed stuff, mainly)

[14:53:17.0000] <jamesr__>
yeah need the notice

[15:38:27.0000] <jgraham>
If it is 3-clause BSD it would be nice to get it relicensed as MIT for html5lib

[15:38:43.0000] <jgraham>
Better than having multiple licenses in that repository


2014-01-18
[16:51:19.0000] <Hixie>
MikeSmith: Error: Can't connect to MySQL server on 'db.w3.org' (111)

[16:57:05.0000] <Hixie>
nm

[19:50:18.0000] <JonathanNeal>
hi

[20:52:36.0000] <MikeSmith>
Hixie: may have been due to being down temporarily for maintenance

[20:53:45.0000] <MikeSmith>
I vaguely recall hearing about some plans for maintenance

[01:25:49.0000] <wefo>
Is it faster to NOT have a context.globalAlpha call, or have it and make its value 1.0 (or whatever means 100% visible)?

[01:26:08.0000] <wefo>
I'm wondering if I should have an if () that checks if it should be used.

[03:28:55.0000] <annevk>
GPHemsley: so yeah, XML MIME types are definitely sniffed for <img> purposes

[03:29:16.0000] <annevk>
GPHemsley: did you test this?

[03:43:57.0000] <annevk>
A Nevil Brownlee has no sense of humor: http://www.rfc-editor.org/errata_search.php?rfc=2549&eid=3793

[03:46:40.0000] <gsnedders>
jamesr__: Waht jgraham said. Sure, we can include both 3-clause BSD and 2-clause BSD/MIT, but it's a lot nicer to just have everything consistently licensed. Esp. given they've been upstraemed before.

[04:49:05.0000] <Ms2ger>
zcorpan: r? https://critic.hoppipolla.co.uk/r/586

[04:56:48.0000] <Ms2ger>
"The W3C Updates Process for More Agile Standards Development"

[04:56:58.0000] <Ms2ger>
Which seems to mean: go CSSWG

[04:57:04.0000] <Ms2ger>
(http://blogs.adobe.com/standards/2014/01/18/the-w3c-updates-process-for-more-agile-standards-development/)

[05:36:43.0000] <MikeSmith>
annevk-cloud: heh

[05:52:40.0000] <gsnedders>
Ms2ger: GO GREASED LIGHTNING!

[07:11:38.0000] <wefo>
I've gots to have me a local API documentation/lookup of some sort. I can't keep going to MozDev and searching for stuff constantly. I use Notepad++ and I want to know what the arguments are for the variations of Canvas 2D drawImage(...) without spending ten minutes searching for it. Can you offer any good ideas to solve this problem?

[12:24:24.0000] <JonathanNeal>
Are there examples of the template element being used in a situation where part of the template is looped?

[12:25:42.0000] <JonathanNeal>
Like, in the scenario of <nav><ul>{begin loop over data}<li></li>{end looping}</ul></nav>?

[13:40:30.0000] <a-ja>
Hixie: ping

[13:43:37.0000] <a-ja>
Hixie: last checkin... <code data-x="attr-aria-role-directory">group</code> should be <code data-x="attr-aria-role-group">group</code> ?? (two occurrences)


2014-01-19
[16:29:45.0000] <Hixie>
a-ja: thanks

[17:58:36.0000] <GPHemsley>
TabAtkins: If a `display: list-item' element does not also have an explicit counter associated with it, should there be a default counter that increments?

[17:59:30.0000] <GPHemsley>
"Additionally, list items automatically increment the special list-item counter. Unless the counter-increment property manually specifies a different increment for the list-item counter, it must be incremented by 1 on every list item, at the same time that counters are normally incremented."

[17:59:36.0000] <GPHemsley>
/me takes this as a yes.

[19:35:34.0000] <Itprotj>
Hey guys, on verifying my HTML5 Website I'm getting a:

[19:35:34.0000] <Itprotj>
 Line 7, Column 111: Bad value google-translate-customization for attribute name on element meta: Keyword google-translate-customization is not registered.

[19:35:35.0000] <Itprotj>
…tomization" content="a940027e7f997750-6e3cf3faa4816ec1-g9f154a7bf834cf45-13" />

[19:35:35.0000] <Itprotj>
I've checked the WHATWG wiki and "google-translate-customization" is an allowed metadata name but still it does not verify.. can anyone help please?

[19:44:47.0000] <Hixie>
Itprotj: it can take some time for the validators to update

[19:46:55.0000] <Itprotj>
Thanks Hixie, I noticed there was at least one person that had a similar issue and reported it mid 2013 but he was told the problem was "fixed"

[19:47:13.0000] <Itprotj>
Alas I shall wait, fingers crossed it doesnt take long. I use the W3 validator too

[19:50:49.0000] <MikeSmith>
Itprotj: I will add that to the validator later today or tomorrow

[19:50:58.0000] <dekiss>
hm are custom meta tags part of the spec?

[19:52:23.0000] <MikeSmith>
Itprotj: ping me here again tomorrow or so to remind me, if I've not gotten to it yet

[20:01:59.0000] <Itprotj>
Thanks Mike, Will do!

[09:26:57.0000] <MikeSmith>
Itprotj: I don't actually find any documentation about meta name="google-translate-customization" at https://support.google.com/translate/?hl=en or anywhere else

[09:35:52.0000] <rektide>
now that HTML has opted to free itself from the shackles of XML, why can <script/> tags not be self-closing?

[09:35:57.0000] <rektide>
so much ugly

[09:36:05.0000] <rektide>
so little good reason

[09:36:43.0000] <tantek>
the usual, backward compat, presumably.

[09:37:45.0000] <rektide>
so, free from shackles of XML, something else entirely, and yet only with regards to namespaces

[09:37:48.0000] <rektide>
i want my money back

[09:37:58.0000] <rektide>
the cake was a lie

[09:38:29.0000] <rektide>
i'd love if someone could imagine a use case that would actually break

[09:38:44.0000] <rektide>
because i cannot think of a place where anyone wouldn't close script

[09:39:42.0000] <rektide>
fix <script> tag, make it not the tag that hit every ugly branch on the DTD on the way down

[09:50:57.0000] <gsnedders>
rektide: WebKit used to allow self-closed script elements, they had a fair bit break because of it.

[10:10:03.0000] <MikeSmith>
self-closing tags are XML-think

[10:37:43.0000] <wefo>
What exactly does clearRect do?

[10:37:48.0000] <wefo>
What does "clearing" a rectangle mean?

[10:37:56.0000] <wefo>
I always rectFill with #000.

[10:38:04.0000] <wefo>
Because I want to be sure it "clears" with black.

[10:38:12.0000] <wefo>
What does clearRect do?

[11:18:25.0000] <jgraham>
(foolip++)**N for N>>1

[11:26:44.0000] <jgraham>
MikeSmith: Can you do the last bit of https://critic.hoppipolla.co.uk/r/590, please?

[12:09:08.0000] <wefo>
What exactly does clearRect do? What does "clearing" a rectangle mean? I always rectFill with #000. Because I want to be sure it "clears" with black. What does clearRect do?

[15:59:29.0000] <gsnedders>
Ergh, do we have to change UTF-8 to utf-8? It's uppercase almost everywhere, and we do a case-insensitive match, so it's not like the normative form matters much — may as well pave-the-cowpath (and be consistent with earlier standards) and call it UTF-8.

[15:59:49.0000] <Hixie>
change where?

[15:59:52.0000] <Hixie>
i call it UTF-8


2014-01-20
[16:00:06.0000] <Hixie>
in prose, at least

[16:00:17.0000] <gsnedders>
Hixie: Web Encodings

[16:00:32.0000] <gsnedders>
Or rather Encoding as it seems to now be called.

[16:00:50.0000] <Hixie>
like, change it within the spec? isn't that up to anne?

[16:02:04.0000] <gsnedders>
/me wonders if <!doctype html><meta charset=UTF-8><title>t</title> is conforming

[16:02:15.0000] <gsnedders>
"Authors must use the utf-8 encoding and must use the "utf-8" label to identify it."

[16:02:47.0000] <gsnedders>
Hixie: From my reading of this, the normative name of the encoding is lowercase.

[16:03:28.0000] <gsnedders>
i.e., the encoding is called "utf-8" and not "UTF-8", so if you're calling it "UTF-8" you're doing it wrong

[16:03:53.0000] <Hixie>
gsnedders: i just define UTF-8 = utf-8 and move on with my life :-)

[16:04:27.0000] <gsnedders>
(As for that snippet, the label isn't per-se case-insensitive, so prima-facie <meta charset=UTF-8> is against that.)

[16:04:37.0000] <gsnedders>
(I also don't get what's wrong with <meta charset=utf8>)

[16:06:58.0000] <gsnedders>
Like, I'm perfectly fine with wanting to get rid of unicode-1-1-utf-8 as a label. But utf8 or utf-8 really doesn't make a damned bit of difference, and trying to force everyone to use one is likely just going to cause confusion.

[16:07:54.0000] <gsnedders>
annevk-cloud: ^^

[16:21:45.0000] <SimonSapin>
gsnedders: The "get an encoding" (from a label) algorithm lower-cases the input before looking up

[16:22:39.0000] <SimonSapin>
is there anything that says authors should use the canonical "name" rather than any "label" ?

[16:23:33.0000] <gsnedders>
SimonSapin: Yes, that's getting an encoding from a label.

[16:23:44.0000] <gsnedders>
SimonSapin: That's not authors-must-use-this-label.

[16:24:01.0000] <SimonSapin>
is the latter a requirement?

[16:24:11.0000] <gsnedders>
"Authors must use the utf-8 encoding and must use the "utf-8" label to identify it."

[16:25:15.0000] <gsnedders>
The label as defined is that literal string of characters. Nothing says you're allowed to use that ASCII case-insensitively. Nothing says you're allowed to use the "utf8" label.

[16:25:27.0000] <SimonSapin>
hum, ok

[16:25:55.0000] <gsnedders>
To me, at least, that's fucking stupid. It makes huge numbers of documents non-conforming for I'm-not-sure-what-good.

[16:26:02.0000] <gsnedders>
s/what-good/what good/

[16:26:07.0000] <SimonSapin>
agreed

[16:26:56.0000] <gsnedders>
Also the fact the encoding is now named "utf-8" when almost everywhere actually calls it "UTF-8" is a completely needless change.

[16:26:56.0000] <SimonSapin>
personally I just don’t care about being "conforming" to that kind of requirements, but meh

[16:30:19.0000] <SimonSapin>
data:text/html;charset=utf8,<script>document.write(document.characterSet)</script> is UTF-8 upper case in Gecko and Blink

[16:30:28.0000] <gsnedders>
Non-conforming!

[16:41:22.0000] <gsnedders>
/me starts writing JS and realizes how long it's been since he's written much JS to run in the browser

[16:41:28.0000] <gsnedders>
/me has spent too long in JS shells :)

[16:45:27.0000] <gsnedders>
Do data URIs in iframes load async?

[17:01:31.0000] <dekiss>
Hixie here?

[17:01:48.0000] <dekiss>
you gave me to work on one bug but I am confused :S

[17:01:58.0000] <dekiss>
I don't really understand what I need to do

[17:02:30.0000] <dekiss>
should I come up with a way for how can websites like caniuse.com be connected to the html spec?

[17:02:45.0000] <dekiss>
for checking browser's implementation of certain features

[17:19:58.0000] <gsnedders>
https://github.com/gsnedders/encoding-spec-names is a rough TC to check this

[17:48:35.0000] <dekiss>
is it ok to place <a> on the same level as div?

[17:51:17.0000] <dekiss>
google.com has 28 errors

[17:52:18.0000] <dekiss>
wikipedia 14

[17:53:09.0000] <dekiss>
guys, can you depend on sites caniuse.com to officialy check what is the browsers implementation of certain features?

[17:53:15.0000] <dekiss>
I am not sure how serious is that

[17:53:43.0000] <dekiss>
I think the web lacks official "tool" for tracking browsers impementation of certain features

[18:05:37.0000] <Hixie>
dekiss: yeah, the idea is to have some sort of mechanism whereby the html spec can have automatically updated annotations saying which parts are implemented and which aren't

[18:06:02.0000] <Hixie>
dekiss: i don't mind if we rely on caniuse.com, or something else

[18:06:07.0000] <Hixie>
or even merge many things together

[18:07:31.0000] <dekiss>
I think this will be very nice

[18:07:53.0000] <dekiss>
oh I really think html lacks this so much and will be of much use

[18:08:35.0000] <dekiss>
Hixie but honestly I am not sure if it is good ieda to rely on some websites, I don't know who is behind those websites, if it is trsutable person-organization that it is ok I think

[18:14:05.0000] <Hixie>
dekiss: it's what web devs rely on already

[18:14:12.0000] <Hixie>
dekiss: if it turns out to be unreliable, we change it

[18:14:22.0000] <Hixie>
dekiss: better something than nothing

[18:14:27.0000] <Hixie>
dekiss: and better anything than what we have now

[18:15:29.0000] <dekiss>
Hixie you are right on this

[18:18:22.0000] <Domenic_>
 <!--"SHALL", "SHALL NOT",--> hmm

[18:18:31.0000] <Domenic_>
do we not like those?

[18:38:20.0000] <SimonSapin>
Hixie: does HTML have a lot of ad-hoc syntaxes like this? http://www.whatwg.org/specs/web-apps/current-work/multipage/common-microsyntaxes.html#rules-for-parsing-dimension-values

[18:39:08.0000] <SimonSapin>
A Servo contributed was tempted to implement it with the CSS tokenizer… and I think it might be equivalent

[18:39:16.0000] <SimonSapin>
except for CSS comments

[18:40:01.0000] <SimonSapin>
So, would it be useful to you if CSS Syntax defined a "tokenize without comments" primitive, that other specs can use?

[18:40:05.0000] <SimonSapin>
TabAtkins: ^

[18:40:52.0000] <SimonSapin>
(TabAtkins: didn’t SVG want this as well?)

[18:52:23.0000] <Hixie>
Domenic_: it tends to make me use the passive voice, so i avoid it

[18:52:33.0000] <Hixie>
Domenic_: i had some difficulties with spec text i'd written that used shall

[18:52:38.0000] <Hixie>
Domenic_: so i stopped using it

[19:24:43.0000] <Itprotj>
MikeSmith: Sorry, you were saying there was no documentation for the "Google-translate-customization" tag?

[19:29:48.0000] <Itprotj>
MikeSmith: If it helps this is the full tag I use <meta name="google-translate-customization" content="a940027e7f997750-6e3cf3faa4816ec1-g9f154a7bf834cf45-13" /> It provides a Google Translate box to choose different languages for the website

[19:32:28.0000] <dekiss>
are those custom meta tags part of the specification?

[19:32:59.0000] <Itprotj>
According to "http://wiki.whatwg.org/wiki/MetaExtensions" the tag is in the status of Proposal

[19:33:12.0000] <dekiss>
hmm let me see

[19:33:15.0000] <Itprotj>
Which makes me think it should be validating correctly

[19:34:34.0000] <dekiss>
all are proposal

[19:35:52.0000] <dekiss>
I am not sure if it is good idea custom meta tags to be added to the specification

[19:36:19.0000] <dekiss>
because if Google for example decide to change the meta tag, or imagine 5000 companies decide to change the tags

[19:36:42.0000] <dekiss>
it willo involve a lot of work to change the specification and there might be constant work

[19:36:50.0000] <dekiss>
to track custom meta tags changes

[19:37:21.0000] <Itprotj>
What would my options be then?

[19:37:37.0000] <dekiss>
how you mean

[19:37:45.0000] <dekiss>
well browser implement then unnoficially

[19:37:49.0000] <dekiss>
they are like semi official

[19:38:08.0000] <dekiss>
I mean widely suported it is publicly known, but officially not in the HTML spec

[19:38:37.0000] <dekiss>
I think it is ok for you to use anything that is out of the html specification, but you should be aware that not all browsers might support it

[19:42:49.0000] <Itprotj>
Okay it is just a concern that I would like to stay HTML5 validated whilst also keeping a Translate box for overseas viewers

[19:50:36.0000] <dekiss>
I think that is good, I will try to make 100% valid website in the next few days

[19:51:17.0000] <dekiss>
however in the past I think I was inable to do so, because it was pretty much immposible for me to do some things which I wanted to make, without making the site not 100% valid

[19:52:21.0000] <dekiss>
I really think there should be massive campaign to influence developers to drop support for old browsers and bad browsers

[19:52:31.0000] <dekiss>
this came to ridicilous level now

[19:52:44.0000] <dekiss>
it is not a way to go, I think

[19:53:20.0000] <dekiss>
ideally browsers makers should make the browsers to autoupdate

[19:53:58.0000] <dekiss>
also Microsoft including Internet Explorer in the Windows, which had many BIG mistakes it was so sad

[19:54:16.0000] <dekiss>
finally Internet Explorer 11 is ok I think, at least I hear so and my pages look ok on it

[19:55:31.0000] <dekiss>
there should not be 1000 libraries to make this job easy to developers, this is not a way to go, it is slowing the internet progress. It should be done other way. Also I am against any libraries

[19:55:35.0000] <dekiss>
like jQuery

[19:56:00.0000] <dekiss>
recently I want a lot of developers who don't know Javascript or DOM but know jQuery

[19:56:03.0000] <dekiss>
heh

[19:56:20.0000] <dekiss>
not a way to go

[20:00:01.0000] <dekiss>
I don't want to be understood wrongly but I must say this, I think the guy who makes jQuery is really good programmer talented, but to dedicate life to something that is not the right way to do it I can't understand, I really think he should be involved in html, css, ecmascript development

[20:00:06.0000] <dekiss>
and other things that matter

[20:00:46.0000] <dekiss>
I can't work in something that I don't believe it is a good thing to do

[20:00:53.0000] <dekiss>
and will do world and people good - progress

[20:33:13.0000] <dekiss>
I make this statements after I see 9 from 10 job posts on freelance websites are - Company offers position for Wordpress plugin fix developper

[20:33:14.0000] <dekiss>
:D

[23:27:27.0000] <Ms2ger>
/me should get foolip some chocolate too :)

[23:28:10.0000] <Ms2ger>
 <!DOCTYPE HTML> <script>document.write('<meta charset="ISO-8859-' + '2">')</script>

[23:28:12.0000] <Ms2ger>
Ugh.

[23:29:43.0000] <annevk-cloud>
Where is that from?

[23:30:18.0000] <Ms2ger>
https://critic.hoppipolla.co.uk/r/592

[23:31:23.0000] <annevk-cloud>
I cannot access that if not signed into GitHub. Curious

[23:34:24.0000] <annevk-cloud>
Oh gsnedders, I recommend filing a bug rather than ranting on IRC. You might find it more relaxing ;)

[23:35:26.0000] <annevk-cloud>
/me wonders what foolip did

[23:56:26.0000] <foolip>
annevk-cloud: not me!

[00:00:48.0000] <Ms2ger>
annevk, reviews

[00:02:02.0000] <Ms2ger>
wefo, I'm sure the spec explains what clearRect does: whatwg.org/html

[00:14:40.0000] <wefo>
Not clearly.

[00:17:01.0000] <TabAtkins>
SimonSapin: SVG was going to see if they can just allow comments, and thus use the full CSS tokenizer.  (They probably can.)

[00:17:16.0000] <Ms2ger>
TabAtkins, this is HTML, though

[00:17:43.0000] <TabAtkins>
SimonSapin: HTML *might* also be able to accept comments, but I'd also be fine with defining a tokenizer mode that disallowed comments.

[00:18:02.0000] <TabAtkins>
(Or rather, that emitted the / and * as delims.)

[00:18:42.0000] <TabAtkins>
Ms2ger: Right, but I'm unsure if there'd actually be any compat requiring /**/ comments to invalidate the attribute or whatever.

[00:20:04.0000] <Ms2ger>
Otoh, it seems like a lot of spec/impl/test work that would use time that could be better spent elsewhere

[00:21:12.0000] <TabAtkins>
GPHemsley: Yes, they *should* increment the list-item counter.  That said, wk/b do *not* implement that counter.  We don't actually use CSS Counters at all for ul/ol, because they're too slow.

[00:22:16.0000] <TabAtkins>
Ms2ger: Right, that's certainly true, and it would be easy on my side to avoid it by defining a comment-free mode.  I suspect that with that change, switching to using the CSS tokenizer rather than specialized microsyntaxes would be very little change, if any. (But I'd have to actually look at the spec text, which I haven't done yet.)

[00:23:07.0000] <Ms2ger>
Well, implementing a comment-free mode is still Work(tm)

[00:23:56.0000] <Ms2ger>
That'd reduce testing time and possible web compat, but increase QA time to verify that nothing actually changed

[00:25:30.0000] <Ms2ger>
Anyway :)

[00:26:46.0000] <Ms2ger>
/me wonders if Operians will come to fosdem

[00:28:48.0000] <Ms2ger>
TabAtkins, "if i have 200x100 <img>; if i set size if img to 400; this case what is the height?; 200? 100?"

[00:29:01.0000] <Ms2ger>
Looks like it's 200, but do you have a spec pointer? :)

[00:38:12.0000] <MikeSmith>
jgraham: doing the last bit of that PR now

[00:41:09.0000] <Ms2ger>
TabAtkins, I think http://dev.w3.org/csswg/css-images/#default-sizing

[00:51:23.0000] <MikeSmith>
jgraham: done

[00:51:43.0000] <MikeSmith>
you want me to merge it?

[00:59:23.0000] <MikeSmith>
marcosc: curious about what's "background actor stuff"

[00:59:40.0000] <marcosc>
MikeSmith: more context?

[00:59:59.0000] <marcosc>
not sure what you mean

[01:05:42.0000] <jgraham>
MikeSmith: Sure and thanks

[01:08:27.0000] <marcosc>
MikeSmith: oh, you mean in the roadmap

[01:08:46.0000] <marcosc>
/me had to google "background actor stuff"

[01:08:48.0000] <marcosc>
:)

[01:09:57.0000] <marcosc>
MikeSmith: we are going to write a blog post to explain why we are doing what we are doing, I think. There is a Moz workweek happening next week, so I'm sure a lot that stuff will get clarified and updated.

[01:10:29.0000] <Ms2ger>
Ah, the jst work week

[01:10:46.0000] <marcosc>
yep

[01:12:06.0000] <annevk-cloud>
On my way to Heathrow for that and some informal service worker thingie this week

[01:12:36.0000] <Ms2ger>
Good flight

[01:12:48.0000] <annevk-cloud>
To prevent jet lag I am already tired

[01:13:16.0000] <annevk-cloud>
Thanks Ms2ger

[01:14:31.0000] <MikeSmith>
marcosc: ok

[01:29:08.0000] <zcorpan>
"Tip for admins: instead of sub1.example.com use sandbox.sub1.example.com, which will limit impact of the cookie bomb to .sub1.example.com zone." is incorrect, isn't it? http://homakov.blogspot.fi/2014/01/cookie-bomb-or-lets-break-internet.html

[01:40:34.0000] <annevk-cloud>
Yeah, we use public suffix for Effective TLD determination

[03:25:47.0000] <Lachy_>
ffffffn9#\M:gI

[03:27:13.0000] <marcosc>
looks like Lachy_ passed out on his keyboard ... again

[03:51:52.0000] <MikeSmith>
he typed the hex code for black there first

[03:55:12.0000] <MikeSmith>
or maybe he was writing a self description and he only got as far as the f in "foxy"

[03:55:24.0000] <Lachy>
WTF? How did that happen?

[03:57:41.0000] <MikeSmith>
wait it seems like he is actually typing an autobiography

[03:57:55.0000] <jgraham>
Lachy: Either you say on your keyboard (in which case we won't ask), or you are hurredly changing your bank password ;)

[03:59:15.0000] <jgraham>
*sat

[04:00:39.0000] <Lachy>
It's my login password for my computer. Not sure how it got entered into here. My computer seemed was frozen at the time I tried entering it.

[04:00:39.0000] <Ms2ger>
Or you blame the cat

[04:00:47.0000] <Lachy>
at least, part of it is

[04:04:02.0000] <MikeSmith>
I think most security experts recommend against using IRC to log in to your computer

[04:04:43.0000] <jgraham>
It turns out that most "security experts" are NSA shills, so you should probably do the opposite of what those guys say

[04:05:40.0000] <Ms2ger>
Oh, okay

[04:05:42.0000] <Ms2ger>
hunter2

[04:07:31.0000] <darobin_>
rofl

[04:18:43.0000] <gsnedders>
annevk-cloud: Nah, ranting on IRC is more relaxing. Less productive, but more relatxing.

[04:18:58.0000] <gsnedders>
annevk-cloud: I will file a bug, however :)

[04:20:02.0000] <wefo>
jgraham: It depends on what advice they give.

[04:20:18.0000] <wefo>
If they give the advice to use the "cloud" in any manner, they are NSA shills.

[04:20:29.0000] <wefo>
If they give the advice to smack every cellphone you see, they are not.

[04:21:25.0000] <wefo>
Just the thought that my computer might have shipped with custom hardware/firmware makes me angry.

[04:21:55.0000] <wefo>
It's so dishonest.

[04:22:05.0000] <wefo>
If at least it was snooping on plaintext communication over the network.

[04:22:21.0000] <wefo>
Then they would just be cunts.

[04:22:34.0000] <wefo>
Now they are below subhuman.

[04:24:04.0000] <jgraham>
wefo: You might accidentially have taken something I said seriously

[04:26:13.0000] <wefo>
Yeah, silly me for not laughing everything away.

[04:26:42.0000] <wefo>
I guess I meant to say: "ya lol dat b dope ur a tinfoil hat lulz u fink ur so importent lol r u high dawg"

[04:27:08.0000] <Ms2ger>
Good good

[04:42:04.0000] <MikeSmith>
somebody forgot to ring the bell for the 4001st w-p-t commit

[04:42:43.0000] <Ms2ger>
/me rings

[05:22:57.0000] <zcorpan>
heycam|away: pls fix https://www.w3.org/Bugs/Public/show_bug.cgi?id=22646 kthxbye

[05:24:53.0000] <zcorpan>
MikeSmith: how is ffffff black?

[05:25:20.0000] <MikeSmith>
because it is?

[05:25:30.0000] <MikeSmith>
either that or it's white

[05:25:49.0000] <zcorpan>
it's white in css at least

[05:26:06.0000] <MikeSmith>
clearly I meant white

[05:26:17.0000] <MikeSmith>
read between the lines, man

[05:26:34.0000] <MikeSmith>
that's what the NSA pays you for!!

[05:27:11.0000] <jgraham>
I can see that MikeSmith will get himself killed at the next Zebra crossing

[05:27:17.0000] <zcorpan>
yeah but i also get paid for acting like i don't

[05:32:29.0000] <xvoom>
hi everybody

[05:48:23.0000] <Ms2ger>
/me wonders why Google thinks the title of http://hoppipolla.co.uk/410/results.html is "Web Platform Tests Results - Mozilla XPath Documentation"

[05:54:46.0000] <zcorpan>
oops, looks like i missed to git add a helper file to resolve-url

[06:02:54.0000] <zcorpan>
https://critic.hoppipolla.co.uk/r/597

[06:04:49.0000] <jgraham>
Hmm, so Ubuntu decided I wanted to open http URLs in Thunderbird

[06:04:59.0000] <jgraham>
That didn't work so well

[06:19:04.0000] <jgraham>
zcorpan: What was the final word on snffing video?

[06:19:15.0000] <zcorpan>
jgraham: hah

[06:19:26.0000] <jgraham>
:(

[06:19:28.0000] <zcorpan>
there is no spoon

[06:20:13.0000] <jgraham>
So you have to get the Content-Type header right to ensure that a supporting browser will play the video at the moment?

[06:20:28.0000] <jgraham>
(also: I did your review)

[06:35:39.0000] <zcorpan>
right

[06:36:20.0000] <zcorpan>
yep, addressed it. now you have MORE lines to review. might be recursive

[06:43:57.0000] <jgraham>
zcorpan: Not recursive at all :) Merged

[06:44:13.0000] <zcorpan>
great, thanks!

[09:09:23.0000] <jgraham>
Dear spotify: When your "discover" feature shows that you have a good grasp of the kinds of music I like, why are you wasting prime screen estate advertising playlists featuring Milley Cirus and One Direction at me? Also, why are you advertising at all when I am paying you money not to show me adverts (other than via the aforementioned "Discover" feature, which is actually useful and so doesn't count).

[09:15:52.0000] <gsnedders>
jgraham: Because how can one not love One Direction and Milley Cirus? They are obviously the best thing ever.

[10:26:46.0000] <JonathanNeal>
SteveF, http://www.jonathantneal.com/blog/introducing-subhead/

[11:00:40.0000] <TabAtkins>
jgraham: Because spotify has learned the lessons of cable TV, which is that people forgot that they're paying you and accept advertising anyway?

[11:05:01.0000] <SteveF>
JonathanNeal: cool will read


2014-01-21
[18:50:08.0000] <GPHemsley>
annevk-cloud: Hmm, looks like the distinction got lost in translation: https://github.com/whatwg/mimesniff/commit/24098021f526233ad5ba7f69eaf387b696b7032a#diff-1feda49b40370635faef8b655f144f64L1601

[18:54:07.0000] <annevk>
And nobody noticed for over a year :/

[19:11:57.0000] <foolip>
jgraham: https://github.com/w3c/web-platform-tests/pull/531#issuecomment-32817873

[19:14:31.0000] <foolip>
jgraham: the final word on video mimesniff is TBD in https://www.w3.org/Bugs/Public/show_bug.cgi?id=11984

[19:16:45.0000] <GPHemsley>
annevk: You will find that to be the case in many problems with the mimesniff spec.

[19:16:55.0000] <GPHemsley>
Though it appears to be experiencing a renaissance.

[19:18:33.0000] <GPHemsley>
annevk: BTW, I commented more extensively on the relevant bug.

[19:19:35.0000] <annevk>
That's not really the relevant bug, but okay

[19:20:14.0000] <annevk>
I recommend going through the specification relative to the original specification again to make sure there are no other mistakes like this

[19:26:52.0000] <GPHemsley>
annevk: Is there a more relevant bug?

[19:27:38.0000] <GPHemsley>
annevk: Also, mimesniff is pretty far down on my list of priorities at the moment. If people raise specific issues, I'm happy to look into them, but I don't have time to re-audit the spec right now.

[21:18:47.0000] <foolip>
anyone know if Denis Ah-Kang (deniak) is on IRC?

[21:25:12.0000] <heycam>
foolip, he is denis on irc.w3.org:6667

[21:26:52.0000] <foolip>
heycam: thanks!

[22:22:31.0000] <MikeSmith>
foolip: Denis is around on the #testing channel when he's online

[22:22:45.0000] <MikeSmith>
on irc.w3.org as heycam mentioned

[22:23:41.0000] <MikeSmith>
Reunion Island time

[00:51:56.0000] <Ms2ger>
/me sees a webkit contribution to wptserve o/

[01:02:49.0000] <Ms2ger>
MikeSmith, you should give https://github.com/foolip access to w-p-t

[01:22:55.0000] <Ms2ger>
jgraham, what's up with https://critic.hoppipolla.co.uk/r/239?

[01:25:10.0000] <MikeSmith>
foolip: you got push access to w-p-t now

[01:25:50.0000] <Ms2ger>
Ta

[01:28:32.0000] <MikeSmith>
Ms2ger: thank you

[01:28:41.0000] <MikeSmith>
so is http-equiv="Content-Style-Type" in the spec now?

[01:28:55.0000] <MikeSmith>
https://www.w3.org/Bugs/Public/show_bug.cgi?id=24341

[01:29:49.0000] <MikeSmith>
eh is Content-Style-Type even an acutal header name

[01:30:15.0000] <Ms2ger>
Rings a vague bell

[01:30:41.0000] <MikeSmith>
yeah I see it around now

[01:30:59.0000] <Ms2ger>
'inline styles ignored using Content-Style-Type of "text/ccs"'

[01:33:02.0000] <MikeSmith>
yeah but why do people use this

[01:33:11.0000] <MikeSmith>
they think it has some effect?

[01:33:33.0000] <hsivonen>
MikeSmith: because in the future, CSS might go away and we might use XSLT in style attributes

[01:33:45.0000] <hsivonen>
MikeSmith: so better declare CSS

[01:33:52.0000] <hsivonen>
MikeSmith: as if the default could ever change

[01:34:12.0000] <hsivonen>
also, good luck introducing another styling language for the Web

[01:34:31.0000] <hsivonen>
/me waves at Dart and VBScript over in the <script> land

[01:34:39.0000] <MikeSmith>
heh

[01:36:20.0000] <MikeSmith>
maybe we should remove the HTML4 spec from the web and just make its URL redirect

[01:37:03.0000] <MikeSmith>
http://www.w3.org/TR/REC-html40/present/styles.html#default-style

[01:37:31.0000] <hsivonen>
MikeSmith: whoa. a normative requirement in HTML4.

[01:37:54.0000] <MikeSmith>
yeah, a rare normative requirement

[01:38:14.0000] <MikeSmith>
and unsurprisingly a bad misguided one

[01:38:27.0000] <hsivonen>
MikeSmith: and the User Agent side is only a "should" but the author side is "must"

[01:38:30.0000] <hsivonen>
totally backwards

[01:39:06.0000] <MikeSmith>
yeah. and there's not one sentence in that whole section that's right, as far as matching reality

[01:45:07.0000] <MikeSmith>
in other news I see there was a recent message from ArtB saying that there's no plan to implement Server-Sent Events support in IE

[01:45:36.0000] <MikeSmith>
I guess I had assumed they already supported it

[01:46:42.0000] <MikeSmith>
kinda sucks for anybody who might want to actually develop something using it

[01:47:18.0000] <MikeSmith>
I guess they probably would argue that developers should just use WebSocket instead

[01:48:56.0000] <foolip>
MikeSmith: thanks! what are the ground rules for merging PRs? is anything with an accepted review OK to merge, even if you are the author or reviewer?

[01:49:57.0000] <foolip>
hsivonen: I'm happy to see you're going ahead with Big5 in Gecko

[01:51:03.0000] <hsivonen>
foolip: well, I'm seeing if emk wants to go ahead. if not, I might get to it once I've dealt with goals for this quarter, first

[01:52:43.0000] <Ms2ger>
MikeSmith, but does dbaron's desk implement that requirement?

[01:52:59.0000] <foolip>
hsivonen: good luck in any event, now that the discussion part seems to be over

[01:58:37.0000] <odinho>
wtf, no sse? Well ok, it'll just never work in IE then. :)

[01:58:42.0000] <odinho>
I use SSE all over the place.

[01:59:17.0000] <Ms2ger>
foolip, a big thanks for the work you've been doing, btw

[01:59:22.0000] <Ms2ger>
Can I send you chocolate? :)

[02:00:19.0000] <odinho>
foolip: Yeah, you can merge as long as reviewed.

[02:01:43.0000] <MikeSmith>
foolip: the rules for w-p-t are to do what jgraham and Ms2ger say

[02:02:09.0000] <Ms2ger>
I say: feel free to merge anything that's accepted in critic

[02:02:15.0000] <MikeSmith>
foolip: but as far as I know it's OK for you to merge your own PR if it's been reviewed by others and accepte

[02:02:27.0000] <odinho>
And jgraham has already said that, so yea.

[02:02:50.0000] <Ms2ger>
jgraham / zcorpan: feel like reviewing https://critic.hoppipolla.co.uk/r/30 ? :)

[02:09:14.0000] <darobin>
oh wow

[02:09:30.0000] <darobin>
http-equiv="Content-Style-Type" is a must for authors but a should for authoring tools, and style@type is required anyway

[02:09:35.0000] <darobin>
that's just... wow

[02:16:52.0000] <zcorpan>
darobin: according to which spec?

[02:17:25.0000] <Ms2ger>
HTML4, I guess

[02:17:34.0000] <darobin>
zcorpan: I was reading the scrollback and looking at HTML4 http://www.w3.org/TR/REC-html40/present/styles.html

[02:18:20.0000] <Ms2ger>
darobin, you should write w3c html5 in that style... Clearly the easiest way to get to rec

[02:18:33.0000] <darobin>
Ms2ger: yeah, man, that would be awesome

[02:18:41.0000] <darobin>
I could be done by the end of the week

[02:18:59.0000] <Ms2ger>
And then do some test reviews :)

[02:19:07.0000] <darobin>
make sure that the assertions aren't testable — that makes the test writing process much simpler

[02:19:26.0000] <darobin>
who needs reviews? if you make the spec vague enough the tests are *obviously* right

[02:19:58.0000] <Ms2ger>
Well, you're done with the w3c tests immediately, so you can move on to the whatwg tests

[02:20:48.0000] <darobin>
now you're making it sound like work

[02:21:21.0000] <Ms2ger>
Yeah, but look at the amount of work I saved you. Surely you can do some in return :)

[02:22:14.0000] <darobin>
Ms2ger: I dunno, are you familiar with the free rider problem in game theory? :)

[02:22:33.0000] <Ms2ger>
I wouldn't dare to suggest you are one

[02:23:11.0000] <darobin>
sweet Ms2ger

[02:27:44.0000] <karlcow>
darobin: http://lists.w3.org/Archives/Public/www-archive/2014Jan/0007.html

[02:28:02.0000] <karlcow>
mail from the past

[02:28:52.0000] <darobin>
karlcow: oh man, that's priceless! thanks :)

[02:29:10.0000] <darobin>
"Conforming user agents must correctly map to ISO 10646 all characters in any character encodings that they recognize (or they must behave as if they did)."

[02:30:13.0000] <zcorpan>
i had forgotten how fun it is to decrypt RSA (the <video> RSA, not that other thing)

[02:45:33.0000] <foolip>
zcorpan: yeah I had some proper nostalgia looking at these tests again

[02:52:55.0000] <foolip>
Ms2ger: will plh magically see r=plh?

[02:53:28.0000] <Ms2ger>
How so?

[02:53:37.0000] <Ms2ger>
He mentioned those changes were okay on github

[02:54:42.0000] <MikeSmith>
in Critic you can assign people to review particular PRs right?

[02:54:50.0000] <Ms2ger>
Yeah

[02:54:55.0000] <MikeSmith>
or even parts of them

[02:55:03.0000] <foolip>
Ms2ger: oh, I thought it meant you wanted him to review the rest

[02:56:09.0000] <Ms2ger>
Well, that would be nice of him, but I don't expect it :)

[02:58:43.0000] <foolip>
Ms2ger: will you?

[02:58:56.0000] <Ms2ger>
Not right now

[03:09:46.0000] <MikeSmith>
Ms2ger: http://lists.w3.org/Archives/Public/public-web-perf/2014Jan/0027.html

[03:09:56.0000] <MikeSmith>
TR strikes again

[03:10:04.0000] <MikeSmith>
dunno if you added that to the wiki already

[03:10:07.0000] <MikeSmith>
if not I will

[03:14:04.0000] <MikeSmith>
oh but in this case the guy was reviewing a Rec

[03:14:58.0000] <Ms2ger>
At least he didn't punch anybody in the face

[03:19:34.0000] <jgraham>
Ms2ger: Not sure what's up with that review. I guess you mean the missing PR? I can fix that

[03:19:46.0000] <Ms2ger>
Yeah

[03:19:49.0000] <jgraham>
Although I don't know which one it is

[03:19:59.0000] <jgraham>
(I could look, but maybe you already did)

[03:21:56.0000] <Ms2ger>
jgraham, https://github.com/w3c/web-platform-tests/pull/238

[03:22:18.0000] <Ms2ger>
/me lunches

[03:26:37.0000] <jgraham>
Ms2ger: Fixed

[03:26:49.0000] <jgraham>
Looks like it got dropped and a new review was created

[03:29:57.0000] <Ms2ger>
jgraham, thanks

[05:02:52.0000] <sangwhan>
Silly question, if window.close() is implemented as a asynchronous function - what kind of side effects could that have? (Can't think of any, except for some strange scripts that run code after window.close() is called getting cut off - not sure if that's a really valid use case)

[05:15:42.0000] <jgraham>
Ms2ger: Shall I merge?

[05:16:12.0000] <Ms2ger>
/me looks

[05:16:27.0000] <Ms2ger>
I'll squash and merge

[05:17:04.0000] <jgraham>
OK

[05:17:07.0000] <jgraham>
Thanks

[05:17:14.0000] <Ms2ger>
And thank you!

[05:23:23.0000] <jgraham>
Ms2ger: Fancy looking at https://critic.hoppipolla.co.uk/r/268 while you are there? Looks like the submitter deleted their repo, but I don't know if there's anything we can salvage

[05:24:08.0000] <Ms2ger>
Possibly, yes

[05:24:23.0000] <Ms2ger>
I'll get to it eventually :)

[05:26:08.0000] <Ms2ger>
zcorpan, I assume I can ignore https://critic.hoppipolla.co.uk/r/307? :)

[05:27:02.0000] <jgraham>
Ms2ger: Sure, no particular rush

[05:27:17.0000] <jgraham>
I just get an email once an hour telling me it couldn't update the branch ;)

[05:27:36.0000] <Ms2ger>
Heh

[05:27:55.0000] <jgraham>
/me "solves" that by disabling tracking

[05:28:58.0000] <jgraham>
BTW if anyone has a review that they think I am the right person for, now is a good time

[05:30:42.0000] <Ms2ger>
There's actually something else I wanted to ask you... Is it possible to make an existing review track another repo, for the testtwf people who went missing in the months it took to get their PRs reviewed?

[05:31:34.0000] <jgraham>
Pretty sure it's possible, not sure there is UI for it

[05:31:52.0000] <zcorpan>
Ms2ger: yeah

[05:32:29.0000] <Ms2ger>
Alright, I'll look at pulling some of those into the w3c repo, then

[05:32:45.0000] <jgraham>
Ms2ger: You can click "they will review this" and stop getting email, if you like

[05:33:07.0000] <Ms2ger>
/me tries that

[05:33:21.0000] <jgraham>
Or maybe you still get email, but you are a watcher not a reviewer

[05:34:24.0000] <jgraham>
Ah, you probably have to click "Exclude me, please" to stop getting email

[05:35:09.0000] <zcorpan>
it should say "shut up!"

[05:35:17.0000] <Ms2ger>
/me tries that too

[05:38:43.0000] <jgraham>
zcorpan: Tell jl :p

[05:39:01.0000] <jgraham>
zcorpan: You will take https://critic.hoppipolla.co.uk/r/604 ?

[05:39:17.0000] <zcorpan>
jgraham: yes

[05:39:24.0000] <jgraham>
zcorpan: Great, thanks

[05:47:26.0000] <Ms2ger>
jgraham, if you're still looking, https://critic.hoppipolla.co.uk/r/608 :)

[05:49:52.0000] <jgraham>
Ms2ger: Did we decide anything about ArtB's readme files?

[05:50:13.0000] <jgraham>
https://critic.hoppipolla.co.uk/r/293 should be closed one way or another

[05:51:40.0000] <Ms2ger>
I think I asked for a link to the whatwg spec in another review

[05:51:51.0000] <Ms2ger>
Either that or I dreamed about ArtB

[05:54:55.0000] <jgraham>
Ms2ger: Hmm

[05:55:04.0000] <jgraham>
Anyway, other review done

[05:55:20.0000] <Ms2ger>
Thanks

[05:55:24.0000] <Ms2ger>
/me creates another

[05:57:18.0000] <jgraham>
Ms2ger: You are the ideal reviewer for https://critic.hoppipolla.co.uk/r/523 btw :)

[05:59:26.0000] <Ms2ger>
I even want to do it

[05:59:36.0000] <Ms2ger>
But not right now

[05:59:54.0000] <gsnedders>
You mean you have something better to do?

[06:00:41.0000] <Ms2ger>
Well, yes

[06:00:51.0000] <Ms2ger>
I'd kinda like to pass my next exam

[06:01:08.0000] <Ms2ger>
jgraham, https://critic.hoppipolla.co.uk/r/609

[06:02:55.0000] <Ms2ger>
With that done I'm pretty happy to start merging the other FileAPI PRs, I think

[06:07:00.0000] <gsnedders>
Ms2ger: People always told me exams weren't important!

[06:07:33.0000] <Ms2ger>
They're important in the sense that I'll have more time for useful work this summer if I pass it now :)

[06:07:36.0000] <darobin_>
gsnedders: maybe they're medical exams

[06:07:56.0000] <darobin_>
Ms2ger: you have a job, why the exams? :)

[06:08:20.0000] <Ms2ger>
Nah, I have a hobby

[06:09:08.0000] <Ms2ger>
/me moves back to the lovely world of the halting problem

[06:13:07.0000] <gsnedders>
Ms2ger: Have you solved it yet?

[06:15:24.0000] <jgraham>
darobin_: Don't set him down that road, lest he go all Swedish on us

[06:15:55.0000] <jgraham>
(half of Sweden seem to have a job and be 2 courses away from finishing their degree. And have been like that for a decade)

[06:16:19.0000] <darobin_>
jgraham: oh, I didn't know that — guess that makes me swedish :)

[06:17:16.0000] <MikeSmith>
q+ to say that OASIS WGs are all self-run

[06:17:42.0000] <jgraham>
MikeSmith: It's OK you can just say it :)

[06:17:43.0000] <MikeSmith>
q+ to say there is no process at OASIS, and no oversight -- they have nothing like team contacts

[06:17:54.0000] <MikeSmith>
oops

[06:17:57.0000] <gsnedders>
jgraham: Which arguably shows degrees are not considered important in Sweden

[06:20:36.0000] <jgraham>
gsnedders: I think s/Sweden/Opera/ in both our sentences to reflect sample bias.

[06:21:11.0000] <jgraham>
And I'm not sure it does show that

[06:46:33.0000] <Ms2ger>
jgraham, also Finland, from my sample of {smaug}

[06:48:58.0000] <Ms2ger>
/me grumbles

[06:49:17.0000] <Ms2ger>
With all those reviews being done, we're still at 126 open PRs

[06:49:42.0000] <jgraham>
Ms2ger: Can you put your script somewhere?

[06:49:49.0000] <jgraham>
Even just as a gist

[06:49:53.0000] <Ms2ger>
Yes

[06:49:56.0000] <jgraham>
or pastebin

[06:50:06.0000] <Ms2ger>
/me looks for the link he gave plh

[06:51:25.0000] <Ms2ger>
https://gist.github.com/Ms2ger/8440074

[06:51:47.0000] <jgraham>
Ms2ger: Thanks

[06:51:59.0000] <Ms2ger>
(You still need to fill in your own key)

[06:52:20.0000] <jgraham>
You don't want everyone to use yours?! ;)

[06:52:43.0000] <Ms2ger>
I don't think I'd like that :)

[07:02:25.0000] <Ms2ger>
125!

[07:02:52.0000] <Ms2ger>
(Same as 26 December and 17 January)

[07:05:02.0000] <Ms2ger>
A final useless statistic: merge one more PR and we're at the lowest level this year

[07:06:07.0000] <Ms2ger>
Really final: 7 more and we're at the lowest after the last testtwf

[07:10:18.0000] <MikeSmith>
I have one open that I'll try to finish

[07:10:50.0000] <MikeSmith>
Media Source Extensions interface tests

[07:11:25.0000] <MikeSmith>
which plh made review comments on already

[07:33:27.0000] <sangwhan>
MikeSmith: These are just sanity checks if the interface/members exist for MSE, right?

[08:15:05.0000] <DavidBruant>
darobin_ yo

[08:15:18.0000] <darobin_>
hi DavidBruant!

[08:15:19.0000] <DavidBruant>
so we were saying iframe@sandbox tests

[08:15:24.0000] <darobin_>
/me is in a meeting, but Ms2ger can reply :)

[08:15:26.0000] <annevk-cloud>
Whoa, a rare DavidBruant appears

[08:16:47.0000] <DavidBruant>
so I want to add tests about iframe@sandbox

[08:16:53.0000] <Ms2ger>
Ha

[08:16:56.0000] <Ms2ger>
I think I've seen some

[08:17:06.0000] <Ms2ger>
https://critic.hoppipolla.co.uk/r/160

[08:17:06.0000] <DavidBruant>
on Twitter, darobin_ suggested to put them in https://github.com/w3c/web-platform-tests/tree/master/html/semantics/embedded-content-0/the-iframe-element

[08:17:17.0000] <Ms2ger>
Want to review those?

[08:17:45.0000] <DavidBruant>
I've seen a bunch a submissions from Microsoft as well

[08:18:07.0000] <DavidBruant>
I have particular things in mind like code.google.com/p/chromium/issues/detail?id=277084

[08:18:14.0000] <DavidBruant>
oops

[08:18:14.0000] <Ms2ger>
I haven't, but feel free to review those too :)

[08:18:31.0000] <DavidBruant>
I meant https://bugzilla.mozilla.org/show_bug.cgi?id=907892

[08:19:17.0000] <DavidBruant>
I'm also looking at everything that could get in the way of https://bugzilla.mozilla.org/show_bug.cgi?id=961689

[08:19:30.0000] <DavidBruant>
I think named accessed will be such a thing

[08:20:59.0000] <Ms2ger>
Feel free to submit extra tests too, but I'd really like those reviewed :)

[08:21:04.0000] <DavidBruant>
I'm worried that sandboxing doesn't change anything to the result of http://people.mozilla.org/~bholley/testcases/cross-origin-named-window/test.html

[08:22:00.0000] <DavidBruant>
And I felt that given I'm spending the time looking into this issue, I'd rather make web-platform-tests from the get go

[08:23:48.0000] <jgraham>
DavidBruant: ++

[08:24:46.0000] <DavidBruant>
I'll look into reviewing the tests you're referring to ('cause sandboxed iframes are AWESOME), but later...

[08:24:58.0000] <Ms2ger>
DavidBruant++

[08:25:08.0000] <DavidBruant>
... I need to get the existing test running first *cough cough*

[08:25:35.0000] <DavidBruant>
(for whatever reason, I fail to generate the MANIFEST.json file)

[08:25:53.0000] <jgraham>
DavidBruant: How are you trying to generate it?

[08:26:03.0000] <DavidBruant>
Ms2ger should the review happen on the critic thing or github?

[08:26:17.0000] <DavidBruant>
jgraham python tools/scripts/manifest.py MANIFEST.json

[08:26:27.0000] <Ms2ger>
I prefer on critic

[08:26:35.0000] <jgraham>
DavidBruant: Preferably critic, but github if you really don't like learning better tools

[08:26:52.0000] <jgraham>
DavidBruant: That looks sensible. What is happening?

[08:26:56.0000] <DavidBruant>
I get this message "INFO:Web platform tests:Working directory not clean, adding local changes", but I'm not sure why or what to do

[08:27:17.0000] <DavidBruant>
"if you really don't like learning better tools" :-D

[08:27:24.0000] <DavidBruant>
ok, I'll do critic

[08:30:10.0000] <jgraham>
DavidBruant: Ah, right, yeah, the error message there isn't very clear

[08:30:32.0000] <jgraham>
If you have changes in your git it won't write the manifest file at the moment

[08:30:39.0000] <jgraham>
s/git/working tree/

[08:31:24.0000] <DavidBruant>
hmm... git status gives me "modified:   tools/pywebsocket (untracked content)"

[08:31:36.0000] <DavidBruant>
not sure I did that...

[08:31:40.0000] <jgraham>
Hmm

[08:31:59.0000] <MikeSmith>
sangwhan: yeah specifically they test whether the implementation of the interface/members conforms to the WebIDL definition for the interface in the spec

[08:32:20.0000] <jgraham>
try seeing what git status  in that directory gives

[08:33:20.0000] <DavidBruant>
jgraham a bunch of src/mod_pywebsocket untracked files

[08:33:46.0000] <DavidBruant>
was that all generated via python serve.py?

[08:34:38.0000] <DavidBruant>
/me knows nothing about python and feels helpless :-/

[08:34:56.0000] <MikeSmith>
sosangwhan: I wouldn't call them "sanity checks". they're conformance checks

[08:36:27.0000] <annevk>
DavidBruant: it's like JavaScript really, without all the braces

[08:36:40.0000] <DavidBruant>
:-)

[08:37:04.0000] <DavidBruant>
It all looks related to the pywebsocket submodule?

[08:38:23.0000] <jgraham>
DavidBruant: That seems very odd. No idea why there should be files there

[08:38:30.0000] <jgraham>
try reset --hard?

[08:43:03.0000] <Ms2ger>
jgraham, they're all .pyc's

[08:44:33.0000] <DavidBruant>
Obviously now python serve.py doesnt work cause "ImportError: No module named mod_pywebsocket"

[08:44:37.0000] <DavidBruant>
:-p

[08:46:37.0000] <jgraham>
Hmm, if pyc files aren't in the gitignore that seems problematic

[08:47:23.0000] <jgraham>
DavidBruant: It is hard to work out what state your repo is in, but maybe from the top level directory try git submodule update --recursive

[08:47:35.0000] <DavidBruant>
yep

[08:47:50.0000] <DavidBruant>
I have the tests running now :-) Thanks for the help

[08:47:52.0000] <Ms2ger>
jgraham, what's up with https://critic.hoppipolla.co.uk/r/15?

[08:47:56.0000] <dglazkov>
good morning, Whatwg!

[08:48:03.0000] <arunranga>
annevk, is the idea of taking a reference during the parsing URL steps the correct approach to https://www.w3.org/Bugs/Public/show_bug.cgi?id=17765 ?

[08:48:48.0000] <DavidBruant>
I'll file an issue to w3c/web-platform-tests with the relevant parts of our chat

[08:49:12.0000] <Ms2ger>
dglazkov, hey, had time to look at those tests already?

[08:49:42.0000] <dglazkov>
Ms2ger: no, I was holidaying.

[08:49:45.0000] <annevk>
The other idea I had was that after parse, you check the table, and then if the identifier is not in the table, you return the URL "blob:invalid" or some such. Of course, that means that if you parse the URL again things will fail, but I guess that's the same with your approach, no?

[08:49:51.0000] <annevk>
arunranga: what do you think of that?

[08:50:35.0000] <annevk>
arunranga: well, I guess the UA would be required to keep additional state around anyway.

[08:51:27.0000] <jgraham>
DavidBruant: Excellent

[08:51:28.0000] <arunranga>
annevk, by "after parse" do you mean, fetch? One of my concerns is that since fetch happens asynchronously, it may have an invalidated ref but the one held during parse might be valid.

[08:51:39.0000] <dglazkov>
also critic is scary. It sends me email and tells me to do stuff. I worry for my safety

[08:51:48.0000] <Ms2ger>
:D

[08:51:51.0000] <DavidBruant>
jgraham how can I easily run one test ?

[08:52:04.0000] <Ms2ger>
dglazkov, you don't want to know what happens if you don't do those reviews... :)

[08:52:39.0000] <dglazkov>
8-{

[08:52:40.0000] <jgraham>
DavidBruant: --include /url/of/test.html

[08:52:55.0000] <DavidBruant>
jgraham on serve.py?

[08:53:15.0000] <annevk>
arunranga: no I meant at the end of URL parsing, before the URL parser returns, sorry

[08:53:16.0000] <jgraham>
DavidBruant: Oh, sorry, no, I was thinking of my test runner

[08:53:27.0000] <jgraham>
DavidBruant: Which you presumably don't have :)

[08:53:34.0000] <annevk>
arunranga: I agree it needs to happen either during parsing or as a wrapper for parsing

[08:53:45.0000] <jgraham>
DavidBruant: How are you running > 1 test?

[08:53:47.0000] <DavidBruant>
jgraham, I thing the "Run tests under path" will be enough

[08:53:57.0000] <annevk>
arunranga: the main architecture problem I see is that people are used to pass URLs around as strings

[08:54:04.0000] <DavidBruant>
I'll pick the right directory and run the few tests there

[08:54:05.0000] <annevk>
arunranga: and this would require URLs to be passed around as objects

[08:54:23.0000] <arunranga>
annevk, in general, I'm wondering if there are cases where something is not in the Blob URL Store owing to a synchronous URL.revokeObjectURL or a global script cleanup steps (where the list is purged) but it is still something that parse holds.

[08:54:26.0000] <DavidBruant>
jgraham, I use http://web-platform.test:8000/tools/runner/index.html

[08:54:31.0000] <DavidBruant>
(locally of course)

[08:54:45.0000] <arunranga>
annevk, yes, that's the problem.

[08:54:55.0000] <DavidBruant>
As suggested at https://github.com/w3c/web-platform-tests#test-runner

[08:56:07.0000] <jgraham>
DavidBruant: Right, then enter the path in the little box

[08:56:19.0000] <DavidBruant>
yeah, I'll do that. Thanks :-)

[08:57:17.0000] <jgraham>
(or, if it is just one test, just load the URL)

[09:02:56.0000] <DavidBruant>
Filed https://github.com/w3c/web-platform-tests/issues/544

[09:08:43.0000] <jgraham>
Ms2ger: I don't know, what is up with that PR?

[09:11:40.0000] <Ms2ger>
jgraham, is anything going to happen with it?

[09:13:57.0000] <jgraham>
Ms2ger: I don't know

[09:15:13.0000] <jgraham>
I am still not happy about having random commented out code

[09:15:37.0000] <jgraham>
But I generally don't care too much about the default testharnessreport.js

[09:26:09.0000] <Ms2ger>
gsnedders, that's not a lot of tabs...

[09:26:13.0000] <Ms2ger>
/me is at 500

[09:39:14.0000] <gsnedders>
Ms2ger: Pretty certain bratell still has you beat.

[09:39:44.0000] <Ms2ger>
That's plausible

[09:44:17.0000] <Ms2ger>
arunranga, around?

[09:44:31.0000] <arunranga>
Hi ms2ger!

[09:44:42.0000] <Ms2ger>
I'm looking at the spec for Blob.close()

[09:44:58.0000] <Ms2ger>
It says "This must be [a] non-idempotent operation"

[09:45:03.0000] <arunranga>
I think we should define a "Closed State" on Blobs.

[09:45:05.0000] <Ms2ger>
Explain? :)

[09:45:31.0000] <arunranga>
This was taken from Transferable's close

[09:46:25.0000] <Ms2ger>
I see

[09:46:27.0000] <Ms2ger>
Hixie, explain

[09:47:05.0000] <arunranga>
A separate bug was filed on separating the transferable close from Blob's close.  Explanation: it shouldn't be there, and should be fixed in https://www.w3.org/Bugs/Public/show_bug.cgi?id=24339

[09:47:52.0000] <Ms2ger>
Yeah, that would probably be better

[09:56:47.0000] <Ms2ger>
arunranga, do you know if anybody implements close yet?

[09:59:26.0000] <Ms2ger>
arunranga, feel free to review https://github.com/w3c/web-platform-tests/pull/545 :)

[10:00:15.0000] <arunranga>
Ms2ger, nobody (yet) implements close

[10:00:22.0000] <arunranga>
Ms2ger, great :)

[10:05:34.0000] <gsnedders>
Man, I always forget how horrible implementing the tokenizer is.

[10:06:06.0000] <Ms2ger>
That's probably the first time that sentence has been uttered

[10:06:50.0000] <jgraham>
Yeah, seriously, how did you forget?

[10:06:58.0000] <jgraham>
But mostly it's just dull

[10:12:08.0000] <gsnedders>
jgraham: It's the dullness that makes it horrible. I forgot because I tried to block out the memory.

[10:12:30.0000] <gsnedders>
(I maintain my prior position of hating zcorpan for introducing all the script states)

[10:52:31.0000] <Hixie>
Ms2ger: here now (not sure what you wanted me to explain)

[10:52:41.0000] <Hixie>
gsnedders: yeah, i recommend mechanical translation of some sort :-)

[10:53:16.0000] <Ms2ger>
Oh no, you're actually right

[10:53:19.0000] <Ms2ger>
I think

[10:53:42.0000] <Ms2ger>
So it's only Arun who doesn't know what idempotent means

[10:55:38.0000] <jamesr__>
"middle endian" ?

[10:56:27.0000] <gsnedders>
Hixie: Sadly doesn't work that easily in this case (I can't have shared state!).

[10:56:30.0000] <jgraham>
What's a hobbit's favourite byte order?

[10:57:51.0000] <jensnockert_>
Little endian?

[10:58:09.0000] <jensnockert_>
Oh, wait… I failed.

[11:07:23.0000] <Hixie>
jamesr__: it does exist... sadly

[11:07:41.0000] <Hixie>
jamesr__: http://en.wikipedia.org/wiki/Endianness#Middle-endian

[11:07:58.0000] <Hixie>
jamesr__: apparently the PDP-11 was middle-endian for 32 bit values

[11:08:32.0000] <Hixie>
and "The ARM architecture can also produce this format when writing a 32-bit word to an address 2 bytes from a 32-bit word alignment", which sounds awful

[11:08:44.0000] <jensnockert_>
The Wii has a similar endian sometimes.

[11:09:01.0000] <jensnockert_>
(http://wiibrew.org/wiki/Reversed_Little_Endian)

[11:10:01.0000] <Hixie>
gsnedders: how do you mean?

[11:10:16.0000] <Hixie>
gsnedders: i meant mechanically convert teh HTML spec text to your implementation

[11:11:00.0000] <gsnedders>
Hixie: The spec text uses shared state (say, the temporary buffer). This complicates things with an implementation that cannot use shared state (because the language doesn't allow it).

[11:11:39.0000] <Hixie>
jensnockert_: man, that's messed up

[11:11:48.0000] <Hixie>
gsnedders: ah, right

[11:12:13.0000] <jensnockert_>
Nintendo is well-known for silly hardware stuff.

[11:12:27.0000] <gsnedders>
Hixie: So, basically there's no simple 1:1 mapping to do a mechanical convertion. So yay ALL THE SCRIPT STATES!

[11:12:34.0000] <gsnedders>
/me glares at zcorpan

[11:12:48.0000] <gsnedders>
/me notes this was more effective when they originally got added to the spec, sharing an office with zcorpan

[11:13:28.0000] <jgraham>
/me notes http://xkcd.com/1319/ which is relevant to "just automate it"

[11:14:17.0000] <Hixie>
gsnedders: well, at least you can convert the states and switch statements, even if the bodies aren't as easy

[11:15:08.0000] <Hixie>
jgraham: that diagram is misleading. it fails to take into account how much more fun writing the automation is than the original task. :-)

[11:17:37.0000] <jgraham>
Hixie: True, but I don't think the graph claims to represent happiness, only effort

[11:18:19.0000] <Hixie>
right, that's why it's misleading, not wrong :-)

[11:18:52.0000] <Hixie>
the "effort" spent on the task is implied to be uninteresting (otherwise why would you want to get rid of it), and the result is depicted as "worse" because there's more total effort spent and no free time left.

[11:19:11.0000] <Hixie>
but the efforts are qualitatively different

[11:19:46.0000] <jsbell>
Until you end up maintaining the automated tool for other users and it ceases to be shiny

[11:19:51.0000] <jgraham>
But both may be worse than free time that you could in theory use to do your highest-reward activity

[11:20:10.0000] <jgraham>
/me notes that real life is not really like economics in this way

[11:20:16.0000] <Hixie>
jsbell: i think the implication here is you never get to that state, since if you did, that would imply the tool worked enough to get rid of the original task :-)

[11:24:28.0000] <SimonSapin>
http://www.w3.org/TR/CSS21/syndata.html#charset talks about "2143 endianness" for UTF-32…

[11:25:21.0000] <Hixie>
UTF-32 on the web is dead, that should just be dropped.

[11:25:32.0000] <Hixie>
HTML and the Encoding spec just say MUST NOT support UTF-32, iirc

[11:26:20.0000] <Hixie>
actually HTML just discourages it

[11:26:42.0000] <Hixie>
i guess we reserve MUST NOT for the ones with truly bad results like CESU-8, UTF-7, BOCU-1 and SCSU.

[11:26:44.0000] <gsnedders>
The Encoding spec, as I read it, enumerates everything you MUST support, and everything else MUST NOT be supported, implicitly.

[11:27:01.0000] <SimonSapin>
yes, that chapter is made obsolete by http://dev.w3.org/csswg/css-syntax/ , but I’d still like to get rid of the encoding nonsense in CSS2

[11:28:29.0000] <Hixie>
SimonSapin++

[11:34:13.0000] <Ms2ger>
SimonSapin, probably not worth it

[11:44:52.0000] <Hixie>
does 'z-index' has an official maximum value these days?

[11:56:03.0000] <JonathanNeal>
Hixie: depends if the browser supports higher than 32-bit values?

[11:56:14.0000] <Hixie>
that's unfortunate

[11:56:21.0000] <Hixie>
but likely true

[11:56:41.0000] <JonathanNeal>
http://css-tricks.com/rational-z-index-values/ "I was seeing z-index: 1.62909e+07"

[11:57:33.0000] <JonathanNeal>
Also http://www.puidokas.com/max-z-index/

[11:59:38.0000] <bholley>
Hixie: yt?

[12:00:55.0000] <bholley>
Hixie: just wanted to check if bug 20701 was on your list

[12:01:03.0000] <bholley>
Hixie: seems like we should act while we have travis' attention ;-)

[12:01:43.0000] <arunranga>
Ms2ger, sorry, got disconnected before.

[12:01:58.0000] <arunranga>
Ms2ger may actually leave "non-idempotent" in because it's right.

[12:02:15.0000] <Ms2ger>
arunranga, is it? Explain :)

[12:02:26.0000] <Hixie>
bholley: yeah.

[12:03:19.0000] <arunranga>
You can't do the same operation again.  It's a one time only. You can't reactivate a closed (0 bytes) resource.

[12:03:27.0000] <Hixie>
bholley: to your first point in comment 124, consider prose like "As mentioned earlier, each browsing context has a WindowProxy object. This object is unusual in that all operations that would be performed on it must be performed on the Window object of the browsing context's active document instead."

[12:04:00.0000] <Hixie>
bholley: on the overall point of needing a summary, i vote you write it up this time :-)

[12:04:19.0000] <Hixie>
bholley: if implementations are on board, btw, doesn't matter how hard it is for me to spec it, i'll deal

[12:04:23.0000] <Ms2ger>
arunranga, okay, what do you think "idempotent" means?

[12:05:19.0000] <arunranga>
You get the same result upon the same operation.

[12:05:44.0000] <bholley>
Hixie: can you at least put it on some kind of wiki-ish thing where we can iterate on it?

[12:06:34.0000] <arunranga>
But https://www.w3.org/Bugs/Public/show_bug.cgi?id=24339 is still a bug.

[12:06:41.0000] <arunranga>
And much of it has to be redone.

[12:07:09.0000] <Ms2ger>
So blob.close(); blob.close()

[12:07:14.0000] <Ms2ger>
What happens on the second call?

[12:07:26.0000] <bholley>
/me lunches

[12:07:55.0000] <Hixie>
bholley: travis said he preferred the bug. i kinda do too (the history is more obvious that way)

[12:08:16.0000] <Hixie>
bholley: we can iterate on the bug fine. it's not like final spec text is being iterated here, it's just a description of what needs doing.

[12:08:54.0000] <bholley>
Hixie: I don't think he really said that, but the bug is fine by me

[12:09:34.0000] <Hixie>
if you want to put it on a wiki it's fine too, feel free to copy and paste my text :-)

[12:10:04.0000] <bholley>
Hixie: I'll take a crack at it after lunch

[12:10:18.0000] <bholley>
Hixie: is there a w3 or whatwg wiki somewhere?

[12:10:22.0000] <arunranga>
It should throw, just as reading on a closed blob throws. So it probably shouldn't say non-idempotent, which I think is your point?

[12:11:13.0000] <arunranga>
The intent is to not allow re-opening a closed blob.

[12:11:50.0000] <bholley>
eh, I'll just use an etherpad

[12:12:22.0000] <Hixie>
bholley: wiki.whatwg.org

[12:12:30.0000] <Hixie>
bholley: if you don't have an account there let me know i'll create one

[12:12:33.0000] <bholley>
Hixie: yeah, but looks like getting an account on that is a pain

[12:12:34.0000] <Hixie>
bholley: etherpad works too

[12:12:43.0000] <bholley>
/me really lunches

[12:12:43.0000] <Hixie>
it's not a pain, just give me your e-mail address

[12:12:58.0000] <bholley>
Hixie: bobbyholley⊙gc

[12:13:23.0000] <Hixie>
done

[12:13:28.0000] <Hixie>
oh hey, the wiki got better

[12:13:28.0000] <Hixie>
nice

[12:13:42.0000] <Hixie>
account creation page is nicer, anyway

[12:15:02.0000] <Hixie>
/me finds two e-mails in this inbox back to back: one from dreamhost saying his machine had to be rebooted due to memory usage issues, and one from the google webmaster tools saying his site was down.

[12:42:44.0000] <tbsaunde>
Hixie: is there a more recent discussion of the canvas draw focus ring stuff than http://lists.whatwg.org/pipermail/whatwg-whatwg.org/2013-October/040974.html ?

[13:29:56.0000] <Hixie>
tbsaunde: iirc there's a bug about it?

[13:30:34.0000] <Hixie>
tbsaunde: wait, october. yes, there's definitely more recent stuff on the whatwg list about ot

[13:30:35.0000] <Hixie>
it

[13:31:06.0000] <Hixie>
tbsaunde: e.g. http://lists.w3.org/Archives/Public/public-whatwg-archive/2014Jan/0033.html

[13:31:21.0000] <Hixie>
/me doesn't really understand what's going on with that API

[13:31:35.0000] <Hixie>
it seems to have been coopted for a different purpose than it was intended for

[13:32:37.0000] <Ms2ger>
/me never quite figured out what it was intended for

[13:34:44.0000] <Hixie>
drawing a focus ring, and optionally telling the AT that it should move its focus/magnifier to that part of the canvas

[13:37:10.0000] <Hixie>
Ms2ger: can you elaborate on https://www.w3.org/Bugs/Public/show_bug.cgi?id=24327 ?

[13:37:47.0000] <Ms2ger>
Hixie, follow the link and look for "img"

[13:39:27.0000] <Hixie>
yes?

[13:39:59.0000] <Hixie>
why would <img> be listed there?

[13:40:15.0000] <Ms2ger>
Because...

[13:40:55.0000] <Ms2ger>
http://www.whatwg.org/specs/web-apps/current-work/multipage/embedded-content-1.html#the-img-element links to http://www.whatwg.org/specs/web-apps/current-work/multipage/the-map-element.html#attr-dim-width

[13:40:56.0000] <Hixie>
oh you're complaining that #attr-dim-width links to #dimRendering in "User agent requirements: User agents are expected to use these attributes as hints for the rendering.

[13:40:59.0000] <Hixie>
" ?

[13:41:07.0000] <Ms2ger>
Yep

[13:41:36.0000] <Hixie>
hmm

[13:41:55.0000] <Ms2ger>
And that afaict, img width="" doesn't actually do anything per spec

[13:42:41.0000] <Hixie>
i wonder why it's not listed there

[13:42:42.0000] <Hixie>
huh

[13:43:29.0000] <Streusel>
has dc.title & dc.description been added yet?

[13:43:37.0000] <Hixie>
Ms2ger: it's there in r2757...

[13:43:52.0000] <Hixie>
Ms2ger: and that lasts til at least r7000

[13:44:07.0000] <Ms2ger>
Heh

[13:45:01.0000] <Hixie>
was removed in r7614...

[13:45:14.0000] <Hixie>
https://www.w3.org/Bugs/Public/show_bug.cgi?id=17630

[13:45:56.0000] <Hixie>
i guess it was a mistake

[13:46:53.0000] <Hixie>
very odd

[13:46:54.0000] <Ms2ger>
I suspected it would be

[13:47:48.0000] <Hixie>
k, fix should be in soon

[13:48:24.0000] <Ms2ger>
Thanks

[13:49:23.0000] <Ms2ger>
Hixie, btw, the diff that removed it might have been easier to read if you hadn't also changed the line length in the same commit :)

[13:49:39.0000] <Hixie>
yeah, i've stopped doing that

[13:49:56.0000] <Hixie>
now i mark the paragraph as CLEANUP when i make changes

[13:50:01.0000] <Hixie>
and later go back and reflow the paragraphs

[13:50:16.0000] <Ms2ger>
Good :)

[13:52:49.0000] <tbsaunde>
Hixie: k, thanks, that API seems to have some issues imho

[13:53:15.0000] <Hixie>
tbsaunde: what are the issues?

[13:54:54.0000] <tbsaunde>
Hixie: my biggest one is that the element and its related accessible object already have bounds so makingthe focus ring its bounds seems really wrong

[13:55:41.0000] <tbsaunde>
in layout terms it seems like laying out a page, and then picking up the one elmeent and putting it someplace possible different from where it was without adjusting any of the other elements

[13:55:58.0000] <tbsaunde>
but it looks like you already got that in the mail you linked (reading now)

[13:56:08.0000] <Hixie>
tbsaunde: you mean bounds from addHitRegion()? the drawFocusRing() API doesn't set any bounds, it just does a one-time move of the magnification.

[13:59:12.0000] <tbsaunde>
Hixie: from the spec it seems like the path on the canvas is used as the bounds of the accessible object for the element passed to it, or did I read the wrong spec?

[13:59:31.0000] <Hixie>
tbsaunde: what in the spec makes you interpret it that way? a lot of people have interpreted it that way, but that wasn't what i intended.

[14:01:32.0000] <tbsaunde>
Hixie: its certainly what cabanier  wants to do in gecko, looking up the spec again now

[14:01:54.0000] <Hixie>
yes, rik has all kinds of (imho crazy) ideas about what the API should do, that have little to do with what i specced.

[14:02:17.0000] <Hixie>
that's what i was referring to above when i said "it seems to have been coopted for a different purpose than it was intended for"

[14:05:16.0000] <tbsaunde>
Hixie: yeah, still haven't gotten through the mail :(

[14:05:39.0000] <tbsaunde>
I'd expect the language that would make you think that behavior is correct is Inform the user that the focus is at the location given by the intended path.

[14:05:45.0000] <cabanier>
tbsaunde: you should talk to roc

[14:05:57.0000] <cabanier>
tbsaunde: these are no my crazy ideas

[14:06:41.0000] <cabanier>
tbsaunde: this is how it already is implemented in chrome

[14:06:51.0000] <cabanier>
tbsaunde: and I had nothing to do with that

[14:07:26.0000] <tbsaunde>
I haven't rad chrome's code, but that sounds crazy

[14:07:42.0000] <cabanier>
what sounds crazy?

[14:07:56.0000] <Hixie>
tbsaunde: i don't see how "Inform the user that the focus is at the location given by the intended path" implies anything to do with setting anything persistent

[14:08:10.0000] <Hixie>
tbsaunde: in particular, it certainly doesn't seem to imply anything about the element

[14:10:10.0000] <tbsaunde>
Hixie: so, I guess I read the spec wrong or something, but fwiw I think the logic people are using is "the way you notify accessibility of where focus is is by focusing an accessible object, which they seem to think you should get from the element passed in and then since your saying the focus is at a point you make that accessible object be at that point

[14:10:54.0000] <Hixie>
tbsaunde: yeah... that's not a good way to read specs. :-) specs say what they mean, one shouldn't read between the lines.

[14:10:59.0000] <Hixie>
tbsaunde: at least, my specs do

[14:11:34.0000] <Hixie>
tbsaunde: there _is_ an API to actually set the bounds of specific elements, the addHitRegion() API

[14:11:38.0000] <Hixie>
tbsaunde: but that's an entirely different thing

[14:13:57.0000] <tbsaunde>
Hixie: yeah, this seems a lot more reasonable :-)

[14:15:35.0000] <Hixie>
tbsaunde: do you have any suggestion for how i can rewrite the "inform the user..." text to be less misleading?

[14:35:11.0000] <tbsaunde>
Hixie: I want to spend some time thinking about the hit region stuff, and actually understanding how this works then I'll try

[14:35:23.0000] <Hixie>
tbsaunde: cool, thanks

[14:35:24.0000] <tbsaunde>
sorry I was confused

[14:35:31.0000] <tbsaunde>
np

[14:44:45.0000] <Hixie>
tbsaunde: given the recent discussions about this, i'm equally confused, so no apology needed!

[14:45:04.0000] <Hixie>
tbsaunde: not that one ever needs to apologise for being confused after reading a spec, it's basically always the spec writer's fault :-)

[14:47:59.0000] <tbsaunde>
heh

[15:11:16.0000] <tbsaunde>
Hixie: oh, so I think another think that helped confuse me is this at the end of the scrollPathIntoView()  description "   "Inform the user", as used in this section, could mean calling a system accessibility API, which would notify assistive technologies such as magnification tools. To properly drive magnification based on a focus change,

[15:11:21.0000] <tbsaunde>
   a system accessibility API driving a screen magnifier needs the bounds for the newly focused object. The methods above are intended to enable this by allowing the user agent to report the bounding box of the path used

[15:11:25.0000] <tbsaunde>
   to render the focus ring as the bounds of the element element passed as an argument, if that element is focused, and the bounding box of the area to which the user agent is scrolling as the bounding box of the current

[15:11:54.0000] <tbsaunde>
   selection." which since the inform ... isn't explained for the draw*FocusRing() methods so I assumed it applied to both

[15:12:20.0000] <tbsaunde>
that said it seems wrong for the scrollIntoView method too

[15:12:39.0000] <Hixie>
that text is kinda confusing, yeah

[15:12:46.0000] <Hixie>
that'll teach me to have non-normative text...

[15:13:01.0000] <Hixie>
every time i try to explain things, people rely more on the non-normative text than the normative text. d'oh.

[15:13:57.0000] <tbsaunde>
especially since all the accessibility APIs are stateful here

[15:14:06.0000] <Hixie>
yeah

[15:14:42.0000] <Hixie>
it might be that the right solution is just to make these methods not tell the ATs anything

[15:14:48.0000] <tbsaunde>
what did you actually mean? I can't see what happens on screen but I'd assume the focus ring *is* the notification that that thing is focused

[15:14:53.0000] <Hixie>
and tell authors to use addHitRegion() only

[15:15:20.0000] <Hixie>
tbsaunde: what i originally meant was that you'd call drawSystemFocusRing() with a focused element, and the magnification would move, end of story

[15:16:53.0000] <cabanier>
Hixie: in our last exchange I stated this:

[15:16:58.0000] <cabanier>
> Informing the user is an imperative action, not an indirect action

[15:16:59.0000] <cabanier>
> involving caching state over multiple frames.

[15:16:59.0000] <cabanier>
If that is the case, we should drop focus ring support. There's no point to just draw rings.

[15:17:05.0000] <tbsaunde>
Hixie: yeah, still thinking, but it seemslike the right thing to do is have the fall back content / hit regions set up and then have draw focus ring not tell the AT anything

[15:17:27.0000] <tbsaunde>
(other than fire a focus event on the accessible that is getting focused of course

[15:17:37.0000] <Hixie>
cabanier: right (though of course we still want to draw focus rings in general, separate from ATs)

[15:17:47.0000] <cabanier>
Hixie: why?

[15:18:42.0000] <cabanier>
Hixie: the API as currently implemented by chrome is quite useful according to the a11y people

[15:18:53.0000] <Hixie>
tbsaunde: yeah. the problem there is that most authors aren't going to bother to use addHitRegion(), i'd guess... i wonder how many authors would use draw*FocusRing() but not addHitRegion(), maybe the number of people who want system focus rings is so low that actually all the people who'd do it half right with focus rings will just do it entirely right with hit regions, dunno.

[15:18:54.0000] <cabanier>
Hixie: It is a bit wonky

[15:18:58.0000] <Hixie>
cabanier: why what?

[15:19:21.0000] <cabanier>
why would you still want an API for focus rings if all it does is draw focus

[15:19:37.0000] <Hixie>
cabanier: i've not seen anyone say that the API is actually useful, do you have a pointer for where that's discussed?

[15:19:45.0000] <Hixie>
cabanier: so you can draw the focus ring?

[15:19:58.0000] <Hixie>
cabanier: how else would you draw one?

[15:20:14.0000] <cabanier>
Hixie: the author can draw it. There's nothing magical going on

[15:20:41.0000] <tbsaunde>
Hixie: yeah, that's a valid concern, but I'm not really sure how we make draw*FocusRing() work usefully

[15:21:12.0000] <Hixie>
cabanier: how do you draw a native-looking focus ring? i don't follow.

[15:21:18.0000] <Hixie>
tbsaunde: yeah

[15:21:19.0000] <cabanier>
Hixie: I agree that the there's a high barrier for addHitRegion so it won't see much adoption

[15:21:32.0000] <Hixie>
cabanier: why do you think the barrier is high?

[15:22:19.0000] <cabanier>
Hixie: because the author would have to make sure that the region DOM is in sync with what's on the page

[15:23:02.0000] <Hixie>
cabanier: do you think the barrier to using draw*FocusRing() is significantly lower? (notwithstanding the fact that that API doesn't actually work well for ATs)

[15:23:12.0000] <Hixie>
cabanier: it seems like it'd be nearly the same code

[15:24:36.0000] <cabanier>
Hixie: you'd have to keep track of the id and add/remove regions

[15:24:55.0000] <cabanier>
Hixie: with draw*Ring, that all happens behind the scenes

[15:26:10.0000] <Hixie>
cabanier: no, the regions get removed automatically with addHitRegion()

[15:27:22.0000] <tbsaunde>
Hixie: I wonder if we can make hit regions simpler? why can't we nuke the label / control / role stuff, and just always have them point at a element that is a child (or inderct child) of the <canvas> ?

[15:27:47.0000] <Hixie>
cabanier: you just have to call x.addHitRegion({ control: element }); whenever you draw the path for the control

[15:28:06.0000] <Hixie>
tbsaunde: simpler for whom? implementors or authors?

[15:28:48.0000] <Hixie>
cabanier: (if you remove a control entirely, but are calling clearRect() regularly, then you don't even have to worry about the control being removed, unlike the mess that would result from the focus ring stuff being repurposed in this way)

[15:28:54.0000] <tbsaunde>
I was thinking it would be simpler for authors since it would just be one consistant way of doing things

[15:29:23.0000] <Hixie>
tbsaunde: well, there's several kinds of authors. Some will have a backing DOM, but others won't (what would the backing DOM be for a game?)

[15:29:43.0000] <Hixie>
tbsaunde: as specced, it lets you put labels all over the canvas, without having to worry about having <span>s for each such label

[15:29:57.0000] <Hixie>
tbsaunde: think e.g. of a chart, how would you design a functional backing DOM for it?

[15:29:58.0000] <tbsaunde>
not really clear other than a bunch of divs, but what would be the a11y story there anyway?

[15:30:15.0000] <Hixie>
well it depends on the user

[15:30:38.0000] <Hixie>
but e.g. an entirely blind users on a tablet could use tactile feedback to feel their way around the canvas, with addHitRegion() roles and labels

[15:30:39.0000] <tbsaunde>
that seems reasonable

[15:31:05.0000] <Hixie>
a user with low sight but enough sight to see the image, who just need magnification, could jump from label to label and see that zoomed in

[15:31:28.0000] <Hixie>
a user who cannot read but can rely on speech synthesis could walk around the canvas using a mouse, and have the labels read out

[15:31:55.0000] <tbsaunde>
on the other hand since you only get a couple types of form control or (label, role) your kind of restricted

[15:32:44.0000] <Hixie>
what kind of stuff are you imagining that can't be done?

[15:33:27.0000] <Hixie>
tbsaunde: (btw, i changed that paragraph you quoted to hopefully be less confusing)

[15:33:34.0000] <tbsaunde>
well, you wouldn't get accessible states, so if you wanted to have editable text I'm not sure how you'd mark it as editable

[15:34:17.0000] <Hixie>
as far as editable text goes, i refer you to http://www.whatwg.org/html#best-practices

[15:34:28.0000] <Hixie>
uh http://www.whatwg.org/specs/web-apps/current-work/#best-practices

[15:35:44.0000] <Hixie>
ah, http://www.whatwg.org/html#best-practices does work

[15:36:01.0000] <tbsaunde>
Hixie: fair, I could probably think of other stuff but its kind of corner casey

[15:39:39.0000] <Hixie>
i mean, there's always things that can't be done, but that's true regardless of whether you're using canvas or not.

[15:39:54.0000] <Hixie>
if there's things that can't be done that could easily be supported, we can always improve the API.

[15:40:12.0000] <tbsaunde>
Hixie: so, as an implementor of this virtual dom tree how do I handle order of children? / is there a way to insert a child before another?

[15:40:26.0000] <Hixie>
you mean the addHitRegion() one?

[15:40:32.0000] <Hixie>
it's unordered. or rather, it's ordered by visual order.

[15:42:05.0000] <tbsaunde>
yeah, visual order makes sense


2014-01-22
[00:04:55.0000] <krijn>
Meh

[00:05:47.0000] <MikeSmith>
krijn: general comment?

[00:07:14.0000] <krijn>
Server down

[00:07:38.0000] <krijn>
That's what happens when you guys don't donate! :]

[00:07:47.0000] <krijn>
(Can only fix it tonight, sorry!)

[00:32:41.0000] <Ms2ger>
r? https://critic.hoppipolla.co.uk/r/611

[01:06:08.0000] <zcorpan>
jgraham: does trickle delay only the body or the headers also?

[01:10:03.0000] <jgraham>
zcorpan: Only the body. If you want to do creative stuff with the headers it is possible but there isn;t a script at the moment

[01:12:05.0000] <zcorpan>
jgraham: so i want a slowly-loading video that will fire error. right now i have an .ogv file with trickle but if the browser doesn't support video/ogg and is strict with content-type it will fail fast instead of slow

[01:13:07.0000] <zcorpan>
maybe i can use a .py file instead

[01:13:18.0000] <foolip>
zcorpan: bad luck :(

[01:17:55.0000] <jgraham>
zcorpan: Yeah, if nothing else you can make a .py file that writes the output directly and take full control

[01:24:27.0000] <foolip>
jgraham: is it also possible to emulate network errors, as in the connection disappearing or being closed mid-stream?

[01:32:12.0000] <jgraham>
foolip: You have the socket object if you go down through the layers enough, so anything you can do with that is supported

[02:16:15.0000] <hsivonen>
annevk-cloud: The command |locale -m| is scary on Linux

[02:16:37.0000] <hsivonen>
it lists many encoding names that I've never heard of before

[02:16:56.0000] <Ms2ger>
Mm, EBCDIC-AT-DE

[02:17:00.0000] <Ms2ger>
And VIDEOTEX-SUPPL

[02:19:52.0000] <foolip>
jgraham: ok, sounds hopeful

[02:23:00.0000] <foolip>
jgraham: I tried http://web-platform.test:8000/tools/runner/index.html and it has an error with MANIFEST.json, is that known?

[02:23:10.0000] <foolip>
error as in doesn't work at all

[02:24:09.0000] <Ms2ger>
foolip, did you generate the manifest first?

[02:27:56.0000] <foolip>
Ms2ger: no :)

[02:28:42.0000] <foolip>
I guess I should read the documentation, and/or catch that error to tell the user to RTFM

[02:33:26.0000] <foolip>
jgraham: rektide would you have any idea why I'm not allowed to review the top 2 commits in https://critic.hoppipolla.co.uk/r/604 ?

[02:34:20.0000] <foolip>
rektide: sorry, tab completion failure

[02:34:54.0000] <Ms2ger>
Did you make them?

[02:35:05.0000] <foolip>
Ms2ger: nope

[02:35:42.0000] <Ms2ger>
Did zcorpan click "I'll review this"?

[02:37:25.0000] <foolip>
Ms2ger: not that I can tell, but add ?user=zcorpan to see that he certainly *can* review

[02:38:03.0000] <foolip>
looks like maybe I can fix it with "Manage Assignments""

[02:38:31.0000] <Ms2ger>
Oh, that's an interesting trick

[02:38:51.0000] <Ms2ger>
Can you also review as him that way? :)

[02:39:27.0000] <foolip>
Ms2ger: yes, but *shhh*

[02:39:54.0000] <foolip>
or at least it used to be possible, who knows if this feature was removed or not :)

[02:40:51.0000] <Ms2ger>
Whoa

[02:41:01.0000] <Ms2ger>
/me reviews everything as foolip from now on

[02:41:34.0000] <hsivonen>
annevk-cloud: FWIW, telemetry so far indicates that we instatiate the IBM866 (DOS Cyrillic) way more often than we instantiate the KOI8-U decoder

[02:42:27.0000] <hsivonen>
though it could be a detector misfiring and detecting non-Cyrillic content as DOS Cyrillic

[02:43:03.0000] <hsivonen>
I guess eventually I have to write the telemetry code for figuring out what's actually happening with the Russian and Ukrainian decoders

[02:43:23.0000] <hsivonen>
marking the bug mentored hasn't had the results I hoped

[03:07:09.0000] <jgraham>
I didn't think you could actually perform actions as another user?

[03:08:31.0000] <jgraham>
foolip: Anyway, I think zcorpan had grabbed all the assignments. But I gave you back some (just using "Manage Assignments")

[03:45:46.0000] <jgraham>
foolip: So your UTF8 BOM removal PR basically traces all the files submitted by Microsoft. I seem to recall that Notepad generates BOMs but surely they aren't using that to write tests?

[03:48:39.0000] <jgraham>
MikeSmith: https://critic.hoppipolla.co.uk/showcommit?review=591&filter=files&file=35687,35973,35974,35977 is for you

[04:08:03.0000] <zcorpan>
jgraham: what happens if i use .asis and trickle?

[04:10:51.0000] <jgraham>
zcorpan: At the moment you get .asis behaviour but not trickle behaviour

[04:11:13.0000] <zcorpan>
jgraham: ok

[04:12:14.0000] <jgraham>
The pipe functions only work for serving normal files because they are at a higher level than the asis handler or (possibly, depending on what they do) the python handlers

[04:12:42.0000] <jgraham>
(the asis handler is basically implemented as socket.write(file.read())

[04:12:46.0000] <jgraham>
)

[04:13:26.0000] <jgraham>
(whereas at least some of the pipe functions depend on understanding the semantics of the response e.g. to set headers or the status code)

[04:14:44.0000] <zcorpan>
yeah i guess that makes sense

[04:41:41.0000] <zcorpan>
foolip: bringing in document.write makes panda sad

[04:44:05.0000] <zcorpan>
gsnedders: you didn't come up with a better proposal so your glaring has little effect

[04:46:07.0000] <zcorpan>
foolip: but that might well be a spec bug, not sure it was intentional to provide a stable state (or Perform a microtask checkpoint) for document.written scripts

[04:48:04.0000] <zcorpan>
filed https://www.w3.org/Bugs/Public/show_bug.cgi?id=24356

[05:08:10.0000] <gsnedders>
zcorpan: :)

[05:40:05.0000] <zcorpan>
gsnedders: also you need to put things into perspective, compare with about:blank or document.write :-)

[05:44:54.0000] <Ms2ger>
jgraham, didn't you have a PR at some point to rename all the manual tests to have -manual?

[06:03:04.0000] <jgraham>
Ms2ger: Didn't that alrady happen? I do remember something like that

[06:03:23.0000] <Ms2ger>
Well, I found http://w3c-test.org/web-platform-tests/master/2dcontext/shadows/canvas_shadows_001.htm

[06:04:07.0000] <gsnedders>
zcorpan: I just apply an SEP field to them. :)

[06:07:31.0000] <jgraham>
Ms2ger: Hmmmmm

[06:14:40.0000] <gsnedders>
"If an attribute is so removed from a token, it, along with the value that gets associated with it, if any, are never subsequently used by the parser, and are therefore effectively discarded. Removing the attribute in this way does not change its status as the "current attribute" for the purposes of the tokenizer, however." --- can anyone in here actually understand that without reading it about five times?

[06:15:33.0000] <gsnedders>
If I'm not mistaken, the first "are" is attempting to agree with the "it", which makes it grammatically bogus.

[06:16:17.0000] <Ms2ger>
Yeah, the first two ares should be ises

[06:16:48.0000] <jgraham>
No, it's fine

[06:17:23.0000] <gsnedders>
How so?

[06:17:43.0000] <jgraham>
It's talking about the pair (attribute, value)

[06:18:05.0000] <jgraham>
Which therefore needs "are" for plural agreement

[06:18:13.0000] <gsnedders>
You still can't use "it" with "are", though!

[06:18:15.0000] <Ms2ger>
The spec is en-US

[06:18:26.0000] <jgraham>
Of course you can

[06:18:44.0000] <jgraham>
This is an example of doing just that

[06:18:55.0000] <Ms2ger>
It, the rock band, are?

[06:20:10.0000] <jgraham>
"it" is just a backward reference to the subject. You can replace the word "it" with "the attribute"

[06:20:47.0000] <gsnedders>
It's still using a plural part of the verb with a singular subject!

[06:20:49.0000] <jgraham>
"The attribute, along with the value associated with it, if any, are [...]"

[06:21:22.0000] <jgraham>
I don't see how there's a problem there

[06:21:37.0000] <jgraham>
"The cow and the horse are [...]"

[06:21:43.0000] <jgraham>
There is only one cow

[06:22:04.0000] <gsnedders>
The subject there is the phrase "the cow and the horse", which is plural.

[06:22:16.0000] <Ms2ger>
The cow, along with the horse, is

[06:22:51.0000] <jgraham>
Here it's "the attribute [and] the value associated with it",

[06:23:01.0000] <jgraham>
which is isomorphic

[06:23:22.0000] <gsnedders>
Ms2ger: That's totally different, grammatically. That's an adverbial. You can move the "along with the horse" pretty much anywhere in the sentence.

[06:24:00.0000] <Ms2ger>
gsnedders, that's exactly the case you quoted, though

[06:24:48.0000] <gsnedders>
Ms2ger: Yes, indeed.

[06:25:53.0000] <jgraham>
Anyway, I am going to go all native speaker on you and claim it's fine

[06:26:09.0000] <gsnedders>
If I rewrite the sentence in the spec to, "If an attribute is so removed from a token, it are never subsequently used by the parser, and are therefore effectively discarded, along with the value that gets associated with it, if any", which is merely reordering the parts of the sentence (which is perfectly fine, because it's an adverbial cluase), it seems fairly obviously wrong.

[06:26:19.0000] <gsnedders>
Well, I'm going to go all native speaker on you and claim it's not.

[06:26:24.0000] <Ms2ger>
I'm going to go all generalist on you and claim that it's English, hence it's wrong

[06:26:38.0000] <jgraham>
gsnedders: You're Scottish and so don't count

[06:27:06.0000] <jgraham>
Also your reworded sentence is nonsense even with "is"

[06:27:51.0000] <Ms2ger>
No it isn't

[06:29:37.0000] <jgraham>
Oh yes it is

[06:31:36.0000] <Ms2ger>
This isn't an argument, it's just contradiction

[06:31:40.0000] <gsnedders>
COCA includes "it are" 1360 times; and "it is" 360896 times. "it are" is *really* rare in en-us, and the "it" in pretty much never a subject when followed by "are".

[06:32:04.0000] <gsnedders>
So I'm going all corpus-linguistics on you and claiming "it are" basically is never used as a subject-predicator pair.

[06:32:50.0000] <jgraham>
Right, because it's not a pair

[06:33:11.0000] <jgraham>
it's "(it, and other thing), are

[06:33:13.0000] <jgraham>
"

[06:33:16.0000] <Ms2ger>
One thing is clear

[06:33:21.0000] <Ms2ger>
The topic still applies

[06:33:29.0000] <gsnedders>
Ms2ger: :)

[06:33:50.0000] <gsnedders>
jgraham: Also, I will point out that neither of us are native speakers of en-us-x-hixie.

[06:34:05.0000] <gsnedders>
(or, for that matter, en-us)

[06:34:06.0000] <Ms2ger>
Nobody is

[06:34:49.0000] <jgraham>
Well if Hixie is then anything he writes in it and considers correct is correct by definition

[06:37:27.0000] <darobin_>
gsnedders: the sentence breaks if you move "along with the value that gets associated with it" elsewhere

[06:37:52.0000] <darobin_>
because there are two "are" clauses that apply to it; positioning it elsewhere would make only one of them apply

[06:37:53.0000] <gsnedders>
darobin_: Why? I don't see why that actually changes anything?

[06:38:20.0000] <gsnedders>
Oh, because of the comma before the "and"?

[06:38:33.0000] <darobin_>
"If an attribute is so removed from a token, it is never subsequently used by the parser, and are therefore effectively discarded, along with the value that gets associated with it, if any."

[06:38:54.0000] <darobin_>
sorry, "and is effectively"

[06:39:35.0000] <gsnedders>
I don't see how that changes anything?

[06:39:40.0000] <darobin>
logically you can still reconstruct the original, but it's clearer in the original formulation

[06:39:53.0000] <gsnedders>
I find the original /really/ hard to understand.

[06:40:18.0000] <darobin>
I'm not disputing that it could perhaps be rephrased

[06:40:25.0000] <darobin>
just that jgraham is right on grammar

[06:40:31.0000] <gsnedders>
(As an aside, am I the only one who cannot currently login to the spec annotation system?)

[06:40:50.0000] <gsnedders>
darobin: I still disagree here. :)

[06:40:54.0000] <GPHemsley>
Never fear, the linguist is here!

[06:41:00.0000] <GPHemsley>
/me reads the scrollback.

[06:41:06.0000] <Ms2ger>
Oh, I thought smaug____

[06:41:14.0000] <Ms2ger>
gsnedders, I'm logged in

[06:41:29.0000] <gsnedders>
GPHemsley: You aren't the only linguist here. ;)

[06:42:07.0000] <GPHemsley>
gsnedders: Oh? :(

[06:42:50.0000] <gsnedders>
GPHemsley: I do joint linguistics and CS.

[06:43:54.0000] <GPHemsley>
Shucks.

[06:44:28.0000] <GPHemsley>
Nevertheless, I agree with you and Ms2ger. Those two ares should be ises.

[06:44:52.0000] <gsnedders>
https://www.w3.org/Bugs/Public/show_bug.cgi?id=24360 is now filed.

[06:45:03.0000] <gsnedders>
Given I realized I had my username wrong for the spec annotation system :P

[06:45:57.0000] <gsnedders>
GPHemsley: On the other hand, you've probably a better idea about contemporary American views on en-us grammar. :)

[06:46:47.0000] <GPHemsley>
gsnedders: Indeed. Such as the fact that your use of "you've" in that context is ungrammatical in en-US. :P

[06:48:00.0000] <gsnedders>
GPHemsley: Just unacceptable as a contraction? Or you want the "have" after the probably?

[06:48:04.0000] <Ms2ger>
"you probably have"?

[06:48:34.0000] <GPHemsley>
In the case of the spec, the value associated with the attribute is incidental. It is the attribute itself that is not used and is therefor discarded.

[06:49:16.0000] <GPHemsley>
gsnedders: Auxiliary verbs that are the main verb of the clause cannot be contracted in en-US.

[06:49:19.0000] <gsnedders>
GPHemsley: Because COCA seems to show "you've probably" is used in similar contexts to the above.

[06:49:49.0000] <gsnedders>
GPHemsley: Though uncommon.

[06:49:59.0000] <Ms2ger>
"You have probably" still sounds weird

[06:50:14.0000] <Ms2ger>
(in that context)

[06:50:51.0000] <GPHemsley>
Ms2ger: Yeah, there are also adverbial placement differences.

[06:51:23.0000] <GPHemsley>
Well, actually, I think it's just the contraction over the adverbial.

[06:51:32.0000] <gsnedders>
GPHemsley: Seems not that different to "he's not" v. "he isn't", where the former is massively more common in en-us.

[06:51:49.0000] <gsnedders>
GPHemsley: (though the latter still occurs ~2% of the time)

[06:52:23.0000] <GPHemsley>
gsnedders: Could you give some examples of the fuller context of those occurrences?

[06:52:40.0000] <gsnedders>
GPHemsley: http://corpus.byu.edu/coca/ - go look yourself.

[06:52:46.0000] <GPHemsley>
meh :P

[06:53:56.0000] <GPHemsley>
gsnedders: Are you running Firefox ESR?

[06:55:25.0000] <gsnedders>
GPHemsley: Yes.

[06:55:35.0000] <gsnedders>
GPHemsley: I'm in uni. :)

[06:55:40.0000] <GPHemsley>
gsnedders: I should note also that "not" is not an adverbial.

[06:55:52.0000] <GPHemsley>
negation is a different grammatical category

[06:56:07.0000] <gsnedders>
GPHemsley: This is true. And gets especially interesting when you look at Scots.

[06:56:31.0000] <GPHemsley>
Oh yeah, negation gets interesting when you look at a whole lot of things. :P

[06:56:33.0000] <gsnedders>
GPHemsley: Have "no" as a negation, "-nae" as an negating prefix on verbs...

[06:56:50.0000] <GPHemsley>
Similar to French, I imagine?

[06:57:05.0000] <GPHemsley>
(Standard French, not necessarily colloquial French)

[06:57:16.0000] <gsnedders>
(Like, "he's no goin' to Glasgow" or "he isnae a good lad")

[06:57:31.0000] <gsnedders>
Not really that similar to French.

[06:57:37.0000] <GPHemsley>
ah

[06:58:09.0000] <GPHemsley>
hmm

[06:58:12.0000] <GPHemsley>
interesting

[06:58:19.0000] <GPHemsley>
is the -nae suffix only on auxiliaries?

[06:58:20.0000] <gsnedders>
"he isnae" is fine, "he'snae" sounds wrong to me, but there's a fair bit of dialectal variation.

[06:58:33.0000] <gsnedders>
Um... yes? Maybe?

[06:58:36.0000] <GPHemsley>
:)

[06:58:39.0000] <gsnedders>
[citation needed]

[06:58:56.0000] <GPHemsley>
have, be

[06:59:18.0000] <GPHemsley>
,do

[06:59:39.0000] <GPHemsley>
oh, here's a nice list: https://en.wikipedia.org/wiki/Auxiliary_verb#A_list_of_auxiliaries_in_English

[07:00:02.0000] <GPHemsley>
though it kinda conflates modals and auxiliaries; not sure if I'm OK with that

[07:00:04.0000] <gsnedders>
/me may have just caused the Scots corpus to stop responding

[07:00:11.0000] <GPHemsley>
(though that's not really relevant to this discussion)

[07:00:29.0000] <GPHemsley>
copula may also have different properties

[07:00:46.0000] <gsnedders>
GPHemsley: Well, in some grammars of English modals and auxiliaries are the same category

[07:01:10.0000] <GPHemsley>
yeah, but they have different properties, so I don't think I like that

[07:01:58.0000] <GPHemsley>
oh, there's a whole separate article on this: https://en.wikipedia.org/wiki/English_auxiliaries_and_contractions

[07:03:35.0000] <gsnedders>
cannae, couldnae, didnae, dinnae, disnae, doesnae, gaunae, gaunnae, gonae, gonnae, havenae, shouldnae, wasnae, willnae...

[07:03:40.0000] <gsnedders>
Modals and auxilaries, maybe?

[07:05:14.0000] <GPHemsley>
what about may and might?

[07:06:41.0000] <GPHemsley>
or must?

[07:07:30.0000] <gsnedders>
michtnae and maunnae are the only things in the corpus beginning with "m" (and ending in -nae).

[07:08:05.0000] <gsnedders>
"michtnae" is relatively obviously "might not" and "maunnae" I'm not sure what that is?

[07:08:14.0000] <gsnedders>
Anyhow, lab is being taken over by course. Away!

[07:08:47.0000] <GPHemsley>
:)

[07:21:24.0000] <TabAtkins>
gsnedders: At least in my dialect of en-US, the correct construction would be "You've probably got a better idea", or "You probably have a better idea".

[07:24:16.0000] <jgraham>
Pretty sure the correct construction is "this conversation has been going on for an hour now"

[07:26:16.0000] <TabAtkins>
45 minutes, come on.

[07:26:28.0000] <TabAtkins>
And I'm sorry linguistics bothers you. ^_^

[07:27:17.0000] <jgraham>
Linguistics doesn't bother me.

[07:36:13.0000] <gsnedders>
GPHemsley: So my intuition says that "must", "might", and "may" are scarcely used in Scots.

[07:36:26.0000] <krijnh>
(Back up!)

[07:41:29.0000] <gsnedders>
GPHemsley: Quick look through corpus shows "must" pretty much only being used in "Standard English" (however you wish to define that :)).

[07:41:43.0000] <Ms2ger>
Her Majesty's English

[07:42:28.0000] <gsnedders>
Ms2ger: Not clear that isn't something different again. :)

[07:43:19.0000] <Ms2ger>
Not if you define it that way :)

[07:43:49.0000] <gsnedders>
Ms2ger: Consider the royal "we" and similar

[07:44:10.0000] <Ms2ger>
Well, we disagree with you on that one

[08:12:54.0000] <Ms2ger>
Hmm, http://web-platform.test:8000//2dcontext/shadows/canvas_shadows_002.htm doesn't work

[08:15:43.0000] <jgraham>
Ms2ger: In which way?

[08:15:53.0000] <jgraham>
The //?

[08:15:55.0000] <Ms2ger>
Yep

[08:16:38.0000] <jgraham>
Well if that's supposed to work then patches welcome, I guess?

[08:17:02.0000] <Ms2ger>
Don't think I care enough :)

[08:38:33.0000] <Ms2ger>
jgraham, okay, this one is fun

[08:38:51.0000] <Ms2ger>
Clicking a link in http://web-platform.test:8000/foo gives a 404

[08:39:00.0000] <Ms2ger>
The same link in http://web-platform.test:8000/foo/ works

[08:43:40.0000] <jgraham>
Ms2ger: Yeah, that sounds quite plausible.

[09:21:48.0000] <dglazkov>
good morning, Whatwg!

[09:22:10.0000] <jwalden>
'afternoon, dglazkov

[09:22:57.0000] <Ms2ger>
Hi dglazkov!

[09:23:03.0000] <Ms2ger>
<insert daily question>

[09:23:46.0000] <dglazkov>
ah yes!

[09:34:35.0000] <foolip>
Hixie: it would be nice if you could decide or say what you need to decide on https://www.w3.org/Bugs/Public/show_bug.cgi?id=19619 since I intent to update Blink's implementation of the RSA to match spec soonish

[11:23:29.0000] <Hixie>
foolip: last paragraph of https://www.w3.org/Bugs/Public/show_bug.cgi?id=19619#c20 is still my position -- if browsers drop it, then i'll remove it from the spec, but at the moment everyone implements it, so keeping it is the logical action for me

[12:18:37.0000] <Hixie>
ok, so, what have we learnt from the rel wiki and the meta name wiki

[12:18:41.0000] <Hixie>
we have learnt that:

[12:19:03.0000] <Hixie>
1. the long tail of needs is very long

[12:19:12.0000] <Hixie>
2. there are many duplicate ideas

[12:19:36.0000] <Hixie>
3. many authors have no idea what these really are for, but they are very sure they want to have them and don't want validators to complain about it

[12:19:54.0000] <Hixie>
4. specifications rarely exist for these things

[12:20:37.0000] <Hixie>
5. if we make certain values non-conforming, we'd better have a damn convincing message to give the validators to help authors pick the right alternative

[12:21:17.0000] <Hixie>
6. even major vendors like microsoft do crazy things, as in <meta name="msapplication-square70x70logo" content="images/tinylogo.png">

[12:38:13.0000] <tantek>
Hixie you forgot:

[12:38:26.0000] <tantek>
7. Nearly anything is better than a registry maintained by IETF.

[12:38:45.0000] <Hixie>
yeah, the list wasn't suposed to be comprehensive

[12:38:58.0000] <Hixie>
contributions from everyone are very welcome!

[12:39:37.0000] <Hixie>
ideally i think we should find some solution that is more nuanced and less burdensome than a registry

[12:40:30.0000] <tantek>
Hixie, the previous solution was no registry at all - any user values were allowed for rel attrs and meta names

[12:40:35.0000] <Hixie>
i have a vision of a two-tier system, where anyone can freely add values or add notes to existing values, and after the value has been in the list for a while, someone examines it and decides whether it should go in the spec to be recommended, or go in a list of things validators should reject, or go in a list of things that are proprietary solutions

[12:40:39.0000] <tantek>
(conforming to the syntax of course)

[12:40:58.0000] <Hixie>
well, html4's conformance approach is suboptimal in general, i'm not sure what that tells us

[12:41:05.0000] <tantek>
btw - that's basically what happens with rel values in the microformats wiki

[12:41:30.0000] <tantek>
people add them, and once in a while someone more experienced goes through and cleans them up and/or does work to promote them (write a better spec etc.)

[12:41:45.0000] <Hixie>
it's similar, yeah

[12:42:01.0000] <tantek>
but for that to work you need some semblance of a community that cares about them, which #microformats does about rel values

[12:42:14.0000] <tantek>
however I don't know if there is any community that actually *cares* about meta name values

[12:42:25.0000] <tantek>
other than "don't reject me validator" type caring

[12:45:40.0000] <JonathanNeal>
"Nearly anything is better than a registry maintained by IETF" +1

[12:46:21.0000] <Hixie>
i envision a world where validators categorise values into five groups: non-conforming unknown (i.e. never registered), conforming interoperable good practice (i.e. in the HTML spec or wherever, with a full spec), provisionally conforming (i.e. registered but not examined), conforming proprietary (i.e. registered, deemed not useful for wide use, not implemented by widely used UAs, but used in private and not harmful), and non-conforming (registered, has bette

[12:46:44.0000] <Hixie>
alternatives, has a pre-canned message for validators to spit out)

[12:47:14.0000] <arunranga>
annevk, are you still around?

[12:47:35.0000] <Hixie>
validators would have an API that lets them take values from non-conforming unknown to provisionally conforming without requiring that people register in a wiki or whatever

[12:48:32.0000] <Ms2ger>
/me wonders how much value there is in making validators complain about any of them 

[12:49:49.0000] <JonathanNeal>
Hixie: what are you hoping to solve by organizing these meta properties?

[12:50:28.0000] <Hixie>
JonathanNeal: a valid question. my main purpose here is making validators useful for authors who use these features, to enable them to catch typos, bad practices, and the like (same as the usual purpose for validators)

[12:50:55.0000] <Hixie>
JonathanNeal: e.g. it would be good to help authors avoid wasting time putting in <meta name=keywords>

[12:57:16.0000] <JonathanNeal>
I have observed meta names change with the wind as they're "created" by things like open graph, Twitter cards, or browser feature detection. It would be difficult to have any proactive specification.

[12:58:24.0000] <JonathanNeal>
browser feature detection err I mean ... vendor specific configurations? viewport, touch icon, etc.

[12:58:25.0000] <Hixie>
JonathanNeal: right, hence the reactive specification in the proposal above

[13:00:35.0000] <JonathanNeal>
I wish I could better describe how this feels out of scope for HTML. It feels a bit like conforming data attributes or class names.

[13:01:29.0000] <JonathanNeal>
Because I have no data that suggests developers write better or faster when a validator returns the kind of information you're proposing.

[13:02:28.0000] <Hixie>
JonathanNeal: it seems intuitive, though i admit that it might be misleading intuition, that if an author spends time doing something that will have no effect (like giving meta name=keywords), it is a net negative compred to not doing that.

[13:02:36.0000] <JonathanNeal>
And in my own experience, I've only ever wanted a "don't reject me" validator.

[13:03:03.0000] <Hixie>
what's a "don't reject me" validator?

[13:03:11.0000] <tantek>
Hixie, what we have today.

[13:03:31.0000] <Hixie>
how is that different than what i'm proposing?

[13:03:32.0000] <tantek>
people registering things just so the validator doesn't complain ("reject me")

[13:04:00.0000] <Hixie>
do people want a validator that says <b></i> is valid?

[13:04:56.0000] <JonathanNeal>
Hixie: If I'm remembering correctly, I had issues with the validator whining after I first implemented twitter cards on my site.

[13:05:17.0000] <Hixie>
right. what i'm proposing is that validators have a button so you just say "yep, that's valid, don't complain again"

[13:05:18.0000] <JonathanNeal>
I added it to some wiki, but that didn't immediately resolve the validator - I want to say that someone was manually copying over the values from the wiki. Is that right?

[13:05:26.0000] <Hixie>
today? probably

[13:05:49.0000] <Hixie>
(or manual during the build process)

[13:06:09.0000] <Hixie>
s/manual/automatic/

[13:11:36.0000] <tantek>
JonathanNeal - typically a bug must be filed to get new meta or rel values added to the validator.

[13:12:06.0000] <tantek>
adding to the wiki page may eventually (years?) cause a change in the validator but certainly not immediately

[13:12:49.0000] <tantek>
note the paragraph before the ToC here: http://wiki.whatwg.org/wiki/MetaExtensions

[13:13:27.0000] <tantek>
Hixie, I will note that there seems to be a lot more proprietary and/or redundant meta name values than rel values.

[13:13:34.0000] <Hixie>
yeah

[13:14:34.0000] <tantek>
I feel like "synonyms" doesn't capture enough for the validator to say something actionable.

[13:15:07.0000] <tantek>
I.e. we need a way to indicate that a particular value is proprietary, and which (if any) "standard" value to use instead.

[13:15:46.0000] <tantek>
or even use some other method altogether

[13:16:02.0000] <tantek>
(rather than stuffing ever more into metacrap)

[13:16:38.0000] <Hixie>
right, that was the "validator message" in the proposal above

[13:16:48.0000] <tantek>
makes sense

[13:23:24.0000] <Hixie>
MikeSmith, hsivonen: you around?

[13:24:51.0000] <annevk>
arunranga: still around

[13:36:00.0000] <Hixie>
hsivonen, MikeSmith: if you're around... i'm curious to know your thoughts on the proposal above.

[13:36:52.0000] <Hixie>
hsivonen, MikeSmith: assuming you like the general direction, i'm also interested in more concretely whether you would prefer an HTTP-based request/response mechanism to register values and poll for updated registrations, or whether you'd prefer a long-lived TCP connection for that kind of thing.

[14:11:06.0000] <annevk>
I suspect HTTP-based

[14:11:11.0000] <annevk>
so it can be part of a build process

[14:13:16.0000] <annevk>
Hixie: if you're going to set up a registry, please allow for multiple registries

[14:50:04.0000] <Hixie>
annevk: sounds like an interesting idea. can you elaborate?

[14:50:23.0000] <annevk>
Hixie: e.g. rel / meta / URL schemes

[14:50:29.0000] <annevk>
might all benefit

[14:52:53.0000] <Hixie>
oh you mean multiple registries for different things, not multiple registries for the same thing

[14:53:08.0000] <Hixie>
yeah, if i write any code for this i'll definitely make it reusable, for sure

[14:57:19.0000] <annevk>
oh heh

[14:57:44.0000] <annevk>
yeah, didn't really want to propose competing registries maintained centrally :-)

[14:58:41.0000] <Hixie>
my main questions initially are whether the whole model seems sane; what API the validators would prefer; and what kind of interface we should expose for administration.

[14:58:48.0000] <Hixie>
that will then decide the implementation approach.

[15:03:56.0000] <annevk>
arv: cool, happy with you guys maintaining that code

[15:04:05.0000] <annevk>
arv: I'll mention that somewhere

[15:35:56.0000] <annevk>
marcosc: lol, way to stir some drama over semicolons

[15:47:05.0000] <Domenic_>
tangentially related, can we get some syntax highlighting in WHATWG spec examples?

[15:47:19.0000] <Hixie>
that sounds like a maintenance nightmare

[15:47:30.0000] <Hixie>
but patches welcome :-)

[15:47:30.0000] <Domenic_>
well, JS-applied, I'd assume

[15:47:38.0000] <Hixie>
oh

[15:47:44.0000] <Hixie>
sure

[15:47:47.0000] <Hixie>
patches welcome :-)

[15:47:58.0000] <Hixie>
(but please be ready to fix any mistakes the code makes)

[15:47:59.0000] <gsnedders>
Nah, make Hixie hand-write the syntax highlighting!


2014-01-23
[17:32:33.0000] <MikeSmith>
Hixie: yeah, HTTP I think, for the reason annevk gave (so the validator will deal with it at build/startup time)

[17:33:48.0000] <Hixie>
so the advantage of a persistent connection would be that you could be informed dynamically of any updates, so for example if someone adds a value at validator.nu, the validator.w3.org validator could be updated literally in real time, within milliseconds.

[17:38:01.0000] <MikeSmith>
right yeah I understand but that would introduce a cost of use needing to check it for each document, rather than just caching at startup and checking that

[17:38:16.0000] <Hixie>
why? you'd still just cache it

[17:38:29.0000] <Hixie>
you'd just get notifications for new things to add to the cache

[17:38:59.0000] <Hixie>
i would expect this to be a very low-bandwidth connection

[17:40:56.0000] <MikeSmith>
yeah we don't currently have anything similar where we're doing anything in response to notifications

[17:41:05.0000] <Hixie>
yup

[17:41:06.0000] <MikeSmith>
but maybe it would make more sense for this case

[17:47:36.0000] <Hixie>
MikeSmith: i think it would have a couple of advantages. one is that it would reduce confusion from people registering things and not seeing it update. the other is that it would be pretty magical to have the validators in sync even for things that were _just_ registered.

[17:48:41.0000] <MikeSmith>
yeah I'd be willing to try it that way if Henri thinks it's worth it

[17:49:15.0000] <Hixie>
i'm writing an e-mail to the list discussing these points, i'm not sure yet about the overall approach, let alone details. it's just an idea so far.

[17:49:29.0000] <MikeSmith>
ok

[17:52:07.0000] <Hixie>
do you have any opinions on the vocabularies? like, all the dcterms.* names?

[18:00:20.0000] <MikeSmith>
my opinion is that there are two many of them and it's not clear to me that there are many applications that actually consume the info

[18:10:00.0000] <MikeSmith>
Hixie: I think we should avoid encouraging authors to load up their documents with meta names that they don't actually understand nor have any specific consuming application in mind for

[18:11:22.0000] <MikeSmith>
which I suspect is the case for most of the meta names that authors use now

[18:13:17.0000] <MikeSmith>
among other problems it results in massive amounts of needless bytes going out over the network all over the place

[18:16:05.0000] <MikeSmith>
another thing is that in a lot of cases with the wiki currently, people add names that don't actually meet the spec requirements because there actually isn't any spec or documentation for them

[18:16:48.0000] <Hixie>
yeah

[18:16:52.0000] <Hixie>
not sure what to do about that

[18:17:07.0000] <Hixie>
some people clearly do want to use them and know how to use them

[18:17:18.0000] <Hixie>
e.g. i had several government archival types contact me and talk about this

[18:17:30.0000] <Hixie>
seems legit that they should be allowed to do it...

[18:17:57.0000] <Hixie>
not sure how to let them do it unimpeded while helping authors who are wasting their time and resources on it...

[18:18:35.0000] <MikeSmith>
right

[18:20:32.0000] <MikeSmith>
I'm nut sure it's such a huge impediment for anybody to, say, go to the WHATWG list and make a case for what they want added

[18:20:39.0000] <zewt>
pushing change notifications to external clients is pretty well-covered territory, don't need to maintain constant connections or anything wasteful like that

[18:24:18.0000] <MikeSmith>
Hixie: with the current situation what we have is a de facto review step, where either Henri or I manually review values before adding them to the validator

[18:25:08.0000] <MikeSmith>
in this case I'm not sure that's a bad thing

[18:27:12.0000] <Hixie>
MikeSmith: interesting

[18:27:18.0000] <Hixie>
MikeSmith: bbiab

[18:48:05.0000] <foolip>
Hixie: fair enough, I'll see if there's support for dropping it in Blink given the usage

[22:29:43.0000] <MikeSmith>
Hixie: btw Suzanne Bégin contacted me as well a couple days ago about getting access to the wiki to add name=review_date

[22:30:19.0000] <MikeSmith>
the thing is, we had previously supported name=review_date in the validator but I removed it

[22:30:36.0000] <MikeSmith>
and the reason I removed it was that there is no spec or documentation for it

[22:30:47.0000] <MikeSmith>
and there still isn't, as far as I can see

[22:33:11.0000] <MikeSmith>
she included the details in the message she sent, but she did not include a link to any public document online that provides those same details

[22:33:37.0000] <MikeSmith>
so it essentially still doesn't meet the spec requirements for registration

[22:34:02.0000] <MikeSmith>
which is what I have been meaining to write back to her to say

[22:35:32.0000] <MikeSmith>
I mean, it all looks legit and I understand why it's important to them

[22:36:03.0000] <MikeSmith>
but they need to, you know, follow all the instructions -- not just part of the instructions

[22:37:47.0000] <MikeSmith>
so anyway, providing a new registration mechanism and API is not going to fix that problem

[22:38:35.0000] <MikeSmith>
I mean the problem of people going ahead and registering things without meeting the "provide a link to a spec" problem

[22:43:01.0000] <MikeSmith>
they do almost always add a URL for the "Link to a specification" column in the wiki. But if you follow those links you find the documents at the other no not actually provide definitions of the name values or how to use them with the meta element in HTML documents. Sometimes that don't even mention anything close at all but are instead just general overview documents that are only marginally related.

[23:26:43.0000] <MikeSmith>
and even among the legit, documented values that do actually meet the registration requirements in the HTML spec, a lot of them are thing that have use only with some specific niche group

[23:29:01.0000] <MikeSmith>
I mean they're not values that many people have widespread use for but are instead just for consumption by one single system of some kind somewhere, and some very limited group of people who are using that particular system

[23:30:20.0000] <MikeSmith>
so I question how much value there is to anybody in having them publicly registered

[23:30:38.0000] <MikeSmith>
other than just making the validator shut up

[23:33:16.0000] <MikeSmith>
and other than the limited beenfit of making it possible for that special group of people to catch typos/mispellings in the values

[23:35:23.0000] <MikeSmith>
but even in that case a coutner-argument is that if there is actually some system/application out there consuming those values, then the authors and users are going to catch the errors when the documents are used with the system

[23:36:47.0000] <MikeSmith>
dynamically catch the errors during actual use/testing of the documents with the system, as opposed to catching them during static checking with the validator

[23:42:15.0000] <MikeSmith>
Hixie: another aspect of that is a case like https://github.com/HubSpot/signet/blob/master/README.md#use

[23:51:12.0000] <MikeSmith>
... where this guy or group has for some reason created a JavaScript library to "Display links in the console to your Twitter and GitHub sites with icons displayed next to them"

[23:52:38.0000] <MikeSmith>
and the mechanism that this JS library uses to figure out what to display is, it looks for <meta name="signet:links" content="http://github.com/example, http://twitter.com/example, http://example.com"> in the document

[23:54:00.0000] <MikeSmith>
and I guess what documentation they have there for it is technically conformant with the spec requirements

[23:54:58.0000] <MikeSmith>
but IMHO what they are doing is a bad, misguided use meta@name

[23:55:17.0000] <MikeSmith>
I mean, it's for use with a JS library

[23:56:35.0000] <MikeSmith>
so why not instead just specify that metadata within a script element instead, or using a data-* attribute

[00:21:58.0000] <Ms2ger>
/me passes MikeSmith a beer

[00:23:47.0000] <MikeSmith>
/me drinkss the beer with a chaser of straight whiskey to wash the beer taste down

[00:26:10.0000] <darobin>
MikeSmith: I like how you're making that realistic by actually slurring your sss

[00:26:44.0000] <MikeSmith>
hah

[00:27:34.0000] <MikeSmith>
yeah just like my life hero George Jones when he sang "White Lightning"

[00:31:30.0000] <zcorpan>
how should reftests in wpt be written? link together test and ref with a <link> like in csswg?

[00:32:52.0000] <zcorpan>
jgraham: Ms2ger: ^

[00:33:47.0000] <Ms2ger>
Either that, or by calling them foo.html and foo-ref.html or foo_ref.html

[00:51:10.0000] <zcorpan>
thx

[00:57:15.0000] <Ms2ger>
jgraham, in serve.py, is the routes variable used for anything?

[01:49:19.0000] <hsivonen>
annevk-cloud: seen https://wiki.mozilla.org/Gaia/Email/Features#Message_Encodings ?

[01:52:36.0000] <hsivonen>
also interesting: falling back to UTF-8 instead of windows-1252: https://github.com/mozilla-b2g/gaia-email-libs-and-more/blob/master/data/lib/js-shims/faux-encoding.js#L53

[01:53:40.0000] <hsivonen>
annevk-cloud: at least one case where not supporting non-UTF in TextEncoder has lead to more UTF-8 use: https://github.com/mozilla-b2g/gaia-email-libs-and-more/blob/master/data/lib/js-shims/faux-encoding.js#L37

[02:08:00.0000] <jgraham>
zcorpan: The <link> thing is preferred because sharing refs is preferred and that's easy to do with the <link>

[02:08:35.0000] <jgraham>
(it looks, maybe, like lots of the WebVTT tests have the same ref in different files? I didn't check by hand but my harness complains a lot)

[02:08:51.0000] <zcorpan>
jgraham: yeah ok

[02:08:54.0000] <zcorpan>
jgraham: possible

[02:09:43.0000] <Ms2ger>
jgraham, ah, you're here :)

[02:10:03.0000] <jgraham>
Ms2ger: More or less :)

[02:10:22.0000] <Ms2ger>
In serve.py, is the routes variable used for anything?

[02:10:38.0000] <jgraham>
So, uh, I don't see the routes variable being used either. Which makes me wonder how anything works

[02:12:02.0000] <Ms2ger>
This tends to be the point where you test and nothing works :)

[02:12:27.0000] <zcorpan>
added an issue to share refs

[02:12:42.0000] <jgraham>
No, it more or less works because the defaults are designed to be almost the same as the options in that file

[02:13:06.0000] <jgraham>
Although now the runner is under tools/ I can't really block tools/

[02:13:44.0000] <Ms2ger>
Wait, .asis is "as is"?

[02:14:34.0000] <zcorpan>
yes

[02:15:09.0000] <Ms2ger>
Sounds like I learned something new today

[02:15:45.0000] <jgraham>
Yeah it's not supposed to sound like "arses"

[02:16:47.0000] <jgraham>
Should the runner move, should I not block tools, or should the runner directory be special cased?

[02:17:45.0000] <Ms2ger>
/me looks what's in tools

[02:18:38.0000] <Ms2ger>
Except a lot of crap

[02:19:43.0000] <Ms2ger>
jgraham, if you can special case the runner in one line, do that, otherwise leave it open

[02:20:52.0000] <jgraham>
It's one line, I think

[02:24:58.0000] <darobin>
agreed

[03:14:00.0000] <Ms2ger>
jgraham, so were you fixing it?

[03:34:39.0000] <marcosc__>
annevk-cloud: heh, I always wanted to be in a semicolon discussion :)

[03:57:47.0000] <jgraham>
Ms2ger: Yeah, but I was doing so on the train

[03:58:09.0000] <Ms2ger>
Ah

[04:04:17.0000] <jgraham>
Ms2ger: Have a review

[04:05:25.0000] <jgraham>
I should hook up manifest.py to the runner frontend so that there is a (Re)generate manifest button.

[04:07:19.0000] <Ms2ger>
r+, thanks

[04:51:50.0000] <hsivonen>
awesome. gedit can't deal with emoji in GB18030.

[04:54:36.0000] <zcorpan>
jgraham: would it make sense to make the argument to step_func_done optional? sometimes i just want to know if i get an event

[04:57:34.0000] <jgraham>
zcorpan: Yeah, that doesn't sound crazy

[04:58:10.0000] <jgraham>
Although

[04:58:25.0000] <jgraham>
Couldn't you just use onevent = test.done?

[04:59:47.0000] <hsivonen>
having to remember to escape # in data: URLs sure is annoying

[05:01:37.0000] <zcorpan>
jgraham: that wouldn't have the right this

[05:01:40.0000] <Ms2ger>
jgraham, is that called with the right this?

[05:02:32.0000] <zcorpan>
test.done.bind(test) works i guess but seems harder to remember to do correctly compared to test_func_done()

[05:02:59.0000] <zcorpan>
er test.step_func_done()

[05:03:24.0000] <Ms2ger>
add_result_callback(function (test) {output.show_status(tests);});

[05:03:28.0000] <Ms2ger>
/me wonders how that works

[05:03:40.0000] <jgraham>
Oh right, silly js

[05:04:11.0000] <jgraham>
Seems kind of tempting just to forcibly bind some of these functions in testharness.js

[05:04:18.0000] <jgraham>
I wonder if anything would break

[05:04:49.0000] <jgraham>
But sure, I would accept a patch to make the argument to step_func_done optional

[05:06:13.0000] <jgraham>
Do we have a standard for the size of reftests?

[05:06:34.0000] <jgraham>
Alternatively, does anyone know what the blink/webkit standards are?

[05:11:58.0000] <jgraham>
800x600 perhaps

[05:12:26.0000] <Ms2ger>
jmaher would like 600�600

[05:13:14.0000] <jgraham>
Yeah

[05:17:17.0000] <zcorpan>
oh i thought the edit button would make a PR. oh well https://github.com/w3c/testharness.js/commit/58e0b853f4b7c446a66c6b6891709941f0390c41

[05:19:49.0000] <jgraham>
I thought it did too

[05:19:55.0000] <jgraham>
Or made a branch at least

[05:22:07.0000] <zcorpan>
maybe it commits directly if you're an owner

[05:22:16.0000] <zcorpan>
or whatever it's called

[05:25:55.0000] <Ms2ger>
zcorpan, how would you like it if workers tests looked like this? https://pastebin.mozilla.org/4080277

[05:28:19.0000] <zcorpan>
Ms2ger: sometimes i want to do some asserts in the worker context and then more asserts in the window context for a given test

[05:28:44.0000] <Ms2ger>
Pff, you can write those by hand :)

[05:29:59.0000] <zcorpan>
Ms2ger: i agree that the approach the existing worker tests use sucks, though

[05:30:12.0000] <Ms2ger>
A little :)

[05:34:01.0000] <zcorpan>
related is if you want to assert something in a cross-origin iframe

[05:36:52.0000] <zcorpan>
but maybe that doesn't need to block improving worker-context-only tests

[06:06:48.0000] <Ms2ger>
jgraham, f? https://github.com/Ms2ger/web-platform-tests/compare/auto-workers https://github.com/Ms2ger/testharness.js/compare/worker-support

[06:24:41.0000] <jgraham>
Ms2ger: add_start_callback needs to actually conform to the docs rather than the docs changing

[06:25:29.0000] <Ms2ger>
Output.prototype.init relies on getting the properties, fwiw

[06:28:21.0000] <jgraham>
Dammit

[06:28:41.0000] <jgraham>
The problem is that you can't pass them over the postMessage stuff when they involve callbacks

[06:29:08.0000] <jgraham>
Also, I am not super-happy about hardcoding the -worker suffix in testharness.js

[06:29:28.0000] <Ms2ger>
Yeah, agreed

[06:29:35.0000] <Ms2ger>
Just wanted to get something running at first

[06:30:18.0000] <Ms2ger>
Can any of the properties actually be callbacks?

[06:32:04.0000] <jgraham>
Yes

[06:32:38.0000] <jgraham>
The output_docuemnt can be (and it won't clone even if it is not a callback)

[06:33:09.0000] <Ms2ger>
Yeah, good point

[06:33:28.0000] <Ms2ger>
Not very likely someone would do that in workers, I guess

[06:35:33.0000] <jgraham>
Anyway, I think I am happy with the basic approach

[06:35:43.0000] <jgraham>
But not really with some of the details

[06:36:17.0000] <Ms2ger>
The details definitely aren't ready :)

[06:36:48.0000] <jgraham>
OK then it sounds like we are in agreement

[06:37:47.0000] <Ms2ger>
\o/

[08:09:12.0000] <zewt>
python 2.7's https stuff not validating server certificates is bewildering

[08:18:20.0000] <gsnedders>
zewt: OpenSSL doesn't by default.

[08:18:40.0000] <gsnedders>
zewt: Because sorting out CA certs is surprisingly hard on Windows. :(

[08:25:38.0000] <zewt>
i suspect the amount of even-more-insecure https code out there because of that is staggering

[08:37:51.0000] <gsnedders>
zewt: Browsers are pretty much the only things that check. Because so often verification fails and it's hard to have a nice interactive API to check with the user, if one is involved, what to do.

[08:38:40.0000] <zewt>
that's nonsense

[08:39:49.0000] <gsnedders>
On the other hand, it might push more people into actually having CA-signed certificates for things not intended for consumption by web browsers, which really is often the case.

[08:40:00.0000] <jgraham>
I think requests checks?

[08:40:15.0000] <gsnedders>
requests is pretty much the only major Python HTTP client to do so.

[08:40:22.0000] <zewt>
i've never seen an https-based web service that didn't have a signed certificate

[08:40:38.0000] <gsnedders>
(At least according to what Alex_Gaynor claimed on Twitter. :))

[08:40:46.0000] <zewt>
and not checking certificates would be nuts when communicating with a service about a user

[08:41:02.0000] <gsnedders>
zewt: See /topic

[09:11:18.0000] <Hixie>
zewt: how would you push prompt notifications to clients potentially behind a firewall without maintaining a TCP connection?

[09:43:14.0000] <JonathanNeal>
SteveF: did you end up reading http://www.jonathantneal.com/blog/introducing-subhead/ ?

[09:47:33.0000] <dglazkov>
good morning, Whatwg!

[14:39:20.0000] <Domenic_>
marcosc: Why don't you feel snapshots is working? It seems like a reasonable model from the outside.

[14:40:06.0000] <marcosc>
I've not seen anyone republish the specs... they also fall grossly out of date. I

[14:40:20.0000] <marcosc>
I'm worried people are going to go to the wrong spec

[14:40:59.0000] <Domenic_>
Hmm.

[14:41:22.0000] <marcosc>
Domenic_: to see what I mean, just google xmlhttprequest spec

[14:41:49.0000] <marcosc>
the w3c one comes up first ... and it's from... W3C Working Draft 6 December 2012

[14:41:54.0000] <marcosc>
2012

[14:41:56.0000] <marcosc>
!!!

[14:41:58.0000] <marcosc>
ffs

[14:41:59.0000] <marcosc>
:(

[14:42:12.0000] <Domenic_>
right, but that's just a general problem with /TR always sucking :-/

[14:42:30.0000] <marcosc>
no, that's the problem with the guys that are supposed to manage the snapshots not republishing

[14:42:33.0000] <Domenic_>
whether it's WHATWG LS vs. W3C Snapshot or W3C ED vs. W3C Snapshot

[14:43:14.0000] <marcosc>
TR doesn't have to suck that badly

[14:43:28.0000] <marcosc>
if the guys that have slapped their names on the spec would do their jobs

[14:44:05.0000] <Domenic_>
That's true

[14:44:17.0000] <marcosc>
if they are going to be copypastaing from the WHATWG, they should at least be publishing every 3 month

[14:44:26.0000] <marcosc>
it can't be that there is 3 people listed on that spec

[14:44:46.0000] <marcosc>
anyway... that's my concern :)

[14:45:11.0000] <Domenic_>
well, i'm curious to see where that thread goes :)

[14:47:28.0000] <marcosc>
Domenic_: I clarified my concern in a follow up

[14:48:40.0000] <TabAtkins>
What mailing list is this from?

[14:49:02.0000] <Domenic_>
public-webapps yo

[14:49:34.0000] <TabAtkins>
...huh.  I saw the very first email with the cfc for heartbeat, but haven't seen anything else.

[14:49:48.0000] <TabAtkins>
never mind, I'm dumb.

[14:49:54.0000] <TabAtkins>
I'm just auto-archiving too many things.


2014-01-24
[16:00:34.0000] <Hixie>
i did a google search for [deprecated metadata vocabularies]

[16:00:41.0000] <Hixie>
and one of the top hits was a link to http://metadataregistry.org/conceptprop/show/id/13721.html

[16:01:35.0000] <Hixie>
which as far as i can tell is the registration page for a property in a vocabulary that describes vocabularies, to label a part of a vocabulary as deprecated.

[16:01:51.0000] <Hixie>
what the fuck. are you doing.

[16:10:12.0000] <jgraham>
Hixie: Can you register the registration vocabulary as deprecated in the registration vocabulary?

[16:20:12.0000] <Hixie>
jgraham: i don't see why not...

[16:27:42.0000] <TabAtkins>
Hixie: It's only valid *before* you actually do it.  Once you write it, it becomes invalid (due to you using a deprecated vocab).

[16:32:19.0000] <annevk>
value objects <3

[16:37:37.0000] <annevk>
Domenic_: what's the value from a snapshot?

[16:37:55.0000] <annevk>
/me is not a fan of people copying his work and creating mass confusion

[16:38:39.0000] <Domenic_>
annevk: patent protection presumably

[16:39:16.0000] <annevk>
A snapshot doesn't give you that

[16:41:54.0000] <Domenic_>
If taken to rec it does right?

[16:43:01.0000] <gsnedders>
Only REC gives you that.

[16:43:53.0000] <gsnedders>
The timeline in which you must withhold any patent grants is based upon the first WD with anything the patent pertains to.

[17:22:43.0000] <TabAtkins>
annevk: Yus.

[17:22:56.0000] <TabAtkins>
annevk: (re: value objects)

[17:23:13.0000] <TabAtkins>
I *really* want to write "el.css.width = 5px;" and have it magically work.

[17:23:41.0000] <TabAtkins>
(120px).pt == 90pt !

[17:34:59.0000] <heycam>
TabAtkins, will value types get SVG out of the predicament of SVGAnimatedLengths etc. without having to boil the ocean like in my proposal?

[17:39:22.0000] <TabAtkins>
heycam: I don't think so.  Value types are immutable objects that you can overload operators for.

[17:39:44.0000] <TabAtkins>
And define suffixes for, so "let x = 5px;" is equivalent to "let x = CSS.px(5);".

[17:39:57.0000] <heycam>
ok

[17:40:24.0000] <heycam>
how much sense would it be, if we do boil the ocean, make SVGRectElement.x be a CSS length value type rather than a DOMString then?

[17:40:25.0000] <TabAtkins>
It'll make for a *really convenient* CSSOM API, as you can just do "el.css.width = 5px;"

[17:40:35.0000] <TabAtkins>
It would make a lot of sense.

[17:40:45.0000] <TabAtkins>
But I'm expecting value types to take 1-2 years.

[17:40:49.0000] <TabAtkins>
So, shrug.

[17:41:01.0000] <heycam>
hmm

[17:41:46.0000] <TabAtkins>
annevk: If you make a URLValue class, I can use that directly in CSS rather than inventing a CSSURLValue object.

[18:45:01.0000] <annevk>
TabAtkins: yeah I guess that would make sense

[18:45:25.0000] <annevk>
TabAtkins: although I also think that having it as a string is okay or is there some ambiguity with that?

[18:59:13.0000] <Hixie>
1-2 years! wow, that'd actually be pretty quick for something like that

[19:10:45.0000] <TabAtkins>
annevk-cloud: Nah, I need to distinguish them in the data model from actual strings.

[19:11:17.0000] <TabAtkins>
Hixie: Yeah, but the push for 64-bit ints has had years to mature, and this is riding on the back of that demand.

[19:13:19.0000] <Hixie>
cool

[00:41:03.0000] <Ms2ger>
I'm pretty sure the date on http://christianheilmann.com/2014/01/23/endangered-species-of-the-web-the-image/ is wrong

[00:41:12.0000] <Ms2ger>
It sounds more like a post from 1994

[01:01:53.0000] <macfreek>
Good day! I like an account for wiki.whatwg.org, and as noted on top of the pages, I have to ask here for an account.

[01:02:13.0000] <macfreek>
My preferred username would be macfreek

[01:03:22.0000] <macfreek>
I like to exploit my neurotic behaviour and fix the markup error on the page MetaExtensions (there is a missing row break before the entry on revisit-after)

[01:05:03.0000] <macfreek>
Hmm, no-one here?

[01:05:13.0000] <macfreek>
I'll drop a mail at admin⊙wwo

[01:14:39.0000] <jgraham>
dglazkov: Thanks!

[01:32:39.0000] <MikeSmith>
IRC protip you may want to try hanging out for longer than 5 minutes if you're asking for help and nobody responds

[03:18:34.0000] <hsivonen>
Hmm. Does @theFakeW3C write for @w3cmemes, too?

[05:43:48.0000] <jgraham>
mathiasbynens: Nice work!

[05:45:18.0000] <zcorpan>
indeed :-)

[10:33:22.0000] <gsnedders>
So, the tokenizer is provably live-lock free. Which is good to know. But probably could've been sufficently shown with a lot less work. :)

[10:49:20.0000] <TabAtkins>
Oh good lord, i18n issue spam on CSS Text.

[10:52:28.0000] <annevk>
Domenic_: what do you think about https://www.w3.org/Bugs/Public/show_bug.cgi?id=24367 ?

[10:52:48.0000] <annevk>
Domenic_: always copy or keep a list of objects

[10:54:06.0000] <Domenic_>
annevk: what does "with an existing "url object" association" mean? why would they need to be associated?

[10:54:30.0000] <Domenic_>
oh i see why

[10:54:35.0000] <Domenic_>
so that changing them changes the URL

[10:54:39.0000] <annevk>
Domenic_: yeah, syncing

[10:54:58.0000] <annevk>
sync syncing, even

[10:57:06.0000] <Domenic_>
annevk: blah, no great answers I feel

[10:57:32.0000] <Domenic_>
maybe most pure would be url.searchParams.resetFrom(otherSearchParams)

[10:57:45.0000] <Domenic_>
and not allowing url.searchParams = ...

[10:58:51.0000] <Domenic_>
creating a copy has the usual `url.searchParams = x; url.searchParams !== x` problem

[10:59:42.0000] <annevk>
well at least url.searchParams === url.searchParams

[10:59:48.0000] <annevk>
I thought that was the invariant

[11:00:05.0000] <annevk>
what's the downside with always assigning?

[11:00:11.0000] <annevk>
and keeping a list of URL objects?

[11:00:57.0000] <Domenic_>
hmm

[11:02:22.0000] <Domenic_>
That actually works

[11:02:27.0000] <Domenic_>
I see no downside

[11:02:30.0000] <Domenic_>
I like it better than copying

[11:03:22.0000] <Domenic_>
as for invariants, well, you try to get as many of them as you can :)

[11:03:31.0000] <Domenic_>
as if it were just a normal data property not a getter/setter

[11:03:50.0000] <Domenic_>
x.y === x.y is the most obvious though, agreed.

[11:14:52.0000] <annevk>
I'm getting a 503 on GMail

[11:15:07.0000] <annevk>
I don't think I ever had Gmail down

[11:15:35.0000] <annevk>
Now it's a 500

[11:21:16.0000] <annevk>
http://www.google.com/appsstatus#hl=en&v=issue&ts=1390636799000&sid=1&iid=8201b96db60ea3ccc26c53a4487c5492

[11:21:58.0000] <MikeSmith>
annevk: https://twitter.com/oscargodson/status/426795522083401728

[11:22:48.0000] <annevk>
Well, it does happen less than missile strikes

[11:23:03.0000] <annevk>
Not sure that makes it more newsworthy though

[13:05:48.0000] <Hixie>
MikeSmith: see e-mail to whatwg list from me just now

[13:19:33.0000] <annevk>
Domenic_: with streams, there's some kind of indication of new data being available right?

[13:19:46.0000] <annevk>
Domenic_: so you could implement progress events based on the content-length header plus listeners on the stream

[13:20:05.0000] <Domenic_>
annevk: yeah, you could definitely implement progress events on top of streams

[13:20:19.0000] <Domenic_>
as you read data, emit a progress event

[13:22:02.0000] <annevk>
Domenic_: so the idea is to push streams through TC39?

[13:22:49.0000] <Domenic_>
annevk: probably proceed the same way as with promises: proceed in web space, but try for TC39 space if there's interest and they are fast enough. Might be time for one of those supplemental spec things like i18n used

[13:23:40.0000] <Domenic_>
but, write the algorithms in TC39 spec style to smooth the process, and e.g. don't use DOMException

[13:24:55.0000] <annevk>
seems fair

[13:26:13.0000] <Hixie>
btw the e-mail i mentioned above to MikeSmith is actually something everyone might be interested in

[13:26:25.0000] <Hixie>
it's a discussion about what to do with registries, starting with <meta name>'s

[13:26:30.0000] <TabAtkins>
It was definitely an interesting email!

[13:26:37.0000] <Domenic_>
Hixie: it is a pretty interesting email. Sounds like a lot of work though!

[13:26:54.0000] <Hixie>
what would be a lot of work?

[13:27:15.0000] <Hixie>
actually writing the server side would be pretty easy, i imagine. the validator side would be more work.

[13:27:24.0000] <Hixie>
dunno how much work

[13:35:21.0000] <annevk>
It's on my todo list

[13:36:24.0000] <Domenic_>
I feel like the validator needs some advertisement on the main whatwg.org page

[13:37:02.0000] <Domenic_>
And maybe some rebranding. (X)HTML5 Living Validator is kind of weird

[13:38:56.0000] <annevk>
hsivonen: ^^

[13:39:21.0000] <Hixie>
Domenic_: i can update the http://www.whatwg.org/ page -- what should i remove to replace with the validator link?

[13:39:46.0000] <Hixie>
(there's several things on that page commented out, i rotate the boxes around every year or so)

[13:41:06.0000] <Domenic_>
Forums seems worth killing...

[13:41:40.0000] <Ms2ger>
Heh, forums

[13:47:13.0000] <Hixie>
ok reload, i moved stuff around for 2014

[13:48:08.0000] <Ms2ger>
/me only ever ends up there on accident

[13:48:18.0000] <Hixie>
yeah i dunno how many people load that page per se

[13:48:21.0000] <Hixie>
probably like 2 a month

[13:48:44.0000] <Hixie>
there's already a link to validators at the top of the HTML spec itself though

[13:49:28.0000] <annevk>
mailing list is close to 10 years http://lists.whatwg.org/htdig.cgi/whatwg-whatwg.org/2004-April/000000.html

[13:50:45.0000] <Domenic_>
Hixie: Nice new layout! FAQ gets the prominence it deserves...

[13:52:39.0000] <Hixie>
foolip: map, the usage of <source media> is stupendously low. i haven't seen numbers that low, like, ever.

[13:52:52.0000] <Hixie>
foolip: even features that don't _exist_ get more usage than that.!

[13:53:02.0000] <Hixie>
s/map/man/

[13:53:12.0000] <Hixie>
Domenic_: yeah, like i said, i rotate things around :-)

[14:24:50.0000] <annevk>
https://pbs.twimg.com/media/BexMPGSCUAAeJzi.png:large

[14:34:40.0000] <annevk>
Domenic_: https://www.w3.org/Bugs/Public/show_bug.cgi?id=24367 got some more noise

[14:35:03.0000] <annevk>
Domenic_: I guess keep references to multiple owners is still the best

[14:35:39.0000] <annevk>
I did not mean noise as opposed to signal btw, just that more comments were added

[14:48:19.0000] <Domenic_>
annevk: commented and thus now subscribed.

[14:51:31.0000] <Hixie>
/me remembers how he hates bash scripting

[14:52:42.0000] <TabAtkins>
Hixie: So... don't?

[14:52:48.0000] <Hixie>
yeah

[14:53:04.0000] <Hixie>
it always starts as a trivial script that just runs three programs or whatever

[14:53:13.0000] <Domenic_>
i'd suggest shelljs but IIRC Hixie isn't a huge JS person either :P

[14:53:45.0000] <Hixie>
and then i add some piping... and then months later i need an if statement... next thing i know i'm trying to work out obscure [ syntax errors deep inside nested ``s

[14:54:45.0000] <TabAtkins>
The moment you advance beyond piping, switch to Python.

[14:54:59.0000] <TabAtkins>
Or Perl, or whatever you like.

[14:58:05.0000] <Hixie>
in principle i agree, but when you have a long sequence of system calls and just want to add one conditional, it's not an obvious choice.

[14:58:32.0000] <TabAtkins>
Yeah, so you have to set a Schelling Fence.

[14:58:45.0000] <TabAtkins>
Any single addition to the bash script doesn't seem like it's bad enough to be worth recoding.

[14:58:55.0000] <TabAtkins>
And then before you know it you're in hell.

[14:59:07.0000] <TabAtkins>
So just set an arbitrary reasonable point beforehand, and stick to it.

[15:01:47.0000] <Hixie>
i think i'm past that point

[15:01:52.0000] <Hixie>
looooong past that point

[15:02:00.0000] <TabAtkins>
So rewrite. ^_^

[15:02:06.0000] <Hixie>
that point occured when i was a kid, learning that there were these tools that would do what i told them

[15:02:39.0000] <Hixie>
the bash vs not bash thing is just one point on the slope :-P

[15:05:02.0000] <Hixie>
anyway. i think a better way of approaching this particular problem isn't a schelling fence

[15:05:31.0000] <Hixie>
it's a deadline for how long i can afford to spend on fixing the problem in bash before i switch to another language

[15:06:00.0000] <Hixie>
so if i think i could rewrite it in, say, perl, in 1 hour, then maybe i would allow 30 minutes of bash debugging and then just switch over

[15:06:14.0000] <Hixie>
that way i don't waste an hour fixing something that took 1 minute

[15:12:09.0000] <TabAtkins>
*This* time.  And next time you have a problem that's horrible to debug in bash, you'll make the same estimate, and probably come to the same conclusion.

[15:12:38.0000] <TabAtkins>
With the end result that you keep spending too much time painfully debugging bash, rather than eating the cost of a rewrite into a better language once.

[15:12:43.0000] <TabAtkins>
Thus, the Schelling Fence.

[15:21:33.0000] <Hixie>
TabAtkins: nah. that's only true if the code changes from being mainly running other scripts, to being mainly logic.

[15:21:54.0000] <Hixie>
TabAtkins: while it's mainly running other scripts and piping stuff around, bash is better than other languages.

[15:29:28.0000] <jgraham>
Hixie: https://pypi.python.org/pypi/plumbum

[15:29:30.0000] <jgraham>
Perhaps

[15:29:51.0000] <Hixie>
relying on non-default-install runtimes is a non-starter for me

[15:30:19.0000] <jgraham>
…OK

[15:30:34.0000] <Hixie>
i end up spending way too much time reinstalling libraries and so on

[15:30:50.0000] <Hixie>
i've set up a schelling fence around it. :-)

[15:31:27.0000] <jgraham>
Generally package management isn't a huge issue

[15:31:29.0000] <jgraham>
I find

[15:32:00.0000] <jgraham>
I mean this isn't 1998 where you have to compile stuff from source all the time

[15:32:09.0000] <jgraham>
Unless you are on OSX I guess

[15:32:17.0000] <jgraham>
Which is just awful

[15:38:04.0000] <Hixie>
jgraham: it becomes way more of a pain when you're trying to not do anything as root (including installing packages)

[15:40:06.0000] <jgraham>
Hixie: I just virtualenv all python stuff

[15:40:25.0000] <Hixie>
yeah if i did more python stuff i should probably get that figured out

[15:40:41.0000] <Hixie>
/me isn't a huge python fan so hasn't bothered to learn it much

[15:41:06.0000] <Hixie>
sorry if it sounds like i'm full of stop energy today :-)

[15:41:11.0000] <jgraham>
If I had a bunch of bash-like stuff in python (I don't) I would just have a venv in my home directory that would be activated in my .bash_login

[15:41:27.0000] <Hixie>
a lot of this is automated stuff, but yeah

[15:41:36.0000] <Hixie>
(cron jobs, cgi scripts, etc)

[15:41:36.0000] <jgraham>
Then external packages would just be "pip install foo" and no need for root

[15:57:58.0000] <SimonSapin>
Hixie: is the multipage version generated asynchronously? I get the "This specification has been updated." message, even after reloading

[15:59:13.0000] <SimonSapin>
jgraham: you could add venv/bin to $PATH without "activating" it


2014-01-25
[16:00:32.0000] <Hixie>
SimonSapin: yes, very asynchronously. but it shouldn't give you that error, because it has a separate idea of what version is current, iirc...

[16:03:36.0000] <Hixie>
woah

[16:03:38.0000] <Hixie>
weird

[16:03:45.0000] <Hixie>
what's going on here

[16:05:58.0000] <Hixie>
oh aaaaanneeee

[16:07:01.0000] <Hixie>
annevk: so uh

[16:07:14.0000] <Hixie>
annevk: for some reason the multipage splitter is splitting an old version?

[16:23:46.0000] <annevk>
hmm

[16:23:53.0000] <annevk>
maybe stuff got bogus again

[16:25:56.0000] <annevk>
svn: Checksum mismatch while updating 'source'; expected: '7d276e7c114c0dff2072062753a37225', actual: '296d8957f3f9fce92805f2bd67155ca0'

[16:25:56.0000] <annevk>
svn: Delta source ended unexpectedly

[16:29:39.0000] <annevk>
Hixie: I also get

[16:29:41.0000] <Hixie>
annevk: it might be worth putting in some defensive code in case i call you twice in parallel? maybe that broke it?

[16:29:41.0000] <annevk>
warning: can't find target for #CSSGC

[16:29:42.0000] <annevk>
warning: can't find target for #CSSWM

[16:29:51.0000] <Hixie>
those are fixed on my side

[16:34:15.0000] <annevk>
Fixed using http://stackoverflow.com/questions/10352934/svn-checksum-mismatch-while-updating

[16:34:19.0000] <annevk>
I think it's all good now

[16:34:29.0000] <Hixie>
cool, thanks

[17:18:40.0000] <a-ja>
Hixie: ping

[18:15:51.0000] <Hixie>
a-ja: pong

[20:52:19.0000] <MikeSmith>
Hi Hixie

[20:52:35.0000] <MikeSmith>
will take a look at the e-mail about the registry stuff today

[21:57:20.0000] <MikeSmith>
Hixie: haven't read the message about the registry yet but as far as the complexity, from the valiator side at least we there's no complexity needed as far as the set of data

[21:57:49.0000] <MikeSmith>
because the only thing the validator needs to consume is the list of valid names, and that's it

[21:59:01.0000] <MikeSmith>
whatever other data that people people add as part of registering a name, the validator doesn't need to see or do anything with

[22:01:18.0000] <MikeSmith>
so as far as I can see all we need exposed to us for the validator side is a space-separated list of the names

[22:03:43.0000] <MikeSmith>
no point in even having them as a JSON document even, because it would just be overkill since all the validator code would need to do is take the character stream with the names and split it up on the spaces

[23:09:36.0000] <foolip>
Hixie: yeah, the usage is shockingly low, and the intent to remove seems to have its required LGTMs, so here I go...

[00:56:01.0000] <Ms2ger>
foolip, what are you removing?

[01:38:22.0000] <jgraham>
SimonSapin: The point would be to make libraries in the virtualenv importable in random scripts, not just to make things in the venv/bin directory run (which I don't think they would without the venv being active anyway)

[01:50:21.0000] <Ms2ger>
jgraham, feel like reviewing? :)

[03:19:30.0000] <Ms2ger>
jgraham, r? https://github.com/w3c/testtwf-website/pull/211

[03:46:39.0000] <MikeSmith>
protip the help manage critic e-mail filtering: go into https://critic.hoppipolla.co.uk/config and add a "[critic]" or something prefix to all the email.subjectLine.* params

[03:49:54.0000] <Ms2ger>
/me waves at zcorpan 

[03:50:02.0000] <zcorpan>
/me is not here

[03:50:27.0000] <Ms2ger>
Didn't mean to imply you were

[03:51:05.0000] <Ms2ger>
Will you be around for testtwf?

[03:55:03.0000] <zcorpan>
no

[04:47:03.0000] <Ms2ger>
/me really needs a victim for FileAPI reviews

[05:10:14.0000] <MikeSmith>
"As usual, I agree with everything Simon said."

[05:58:48.0000] <Ms2ger>
Which Simon?

[06:03:35.0000] <MikeSmith>
the best Simon

[06:04:37.0000] <annevk-cloud>
Hixie: registry proposal looks good to me

[06:04:58.0000] <MikeSmith>
https://groups.google.com/a/chromium.org/forum/#!msg/blink-dev/5sWUMC_d8Tg/gnxjyGTenvwJ

[06:05:20.0000] <annevk-cloud>
MikeSmith: would you not want JSON or some such for the data associated with meta names?

[06:05:47.0000] <MikeSmith>
annevk-cloud: because I will only use the names

[06:05:56.0000] <MikeSmith>
that's all we are using now

[06:06:37.0000] <MikeSmith>
and I have not plans to implement any of the other checking and reporting that Hixie is proposing

[06:06:45.0000] <annevk-cloud>
Hixie had some interesting suggestions as to how you could do more

[06:06:48.0000] <annevk-cloud>
I see

[06:06:50.0000] <MikeSmith>
right

[06:07:16.0000] <MikeSmith>
yeah I would be happy to add any of that if somebody else wants to provide a patch

[06:08:40.0000] <MikeSmith>
but I'm not convinced there's any problem that needs solving here, other than the very simple case of helping people catch unregistered/misspelled names

[06:09:16.0000] <MikeSmith>
and the problem of the latency between when people register new names and when Henri or me manage to get them added to the validator

[06:09:45.0000] <MikeSmith>
the only problem I've really had is I don't want to have to write code to scrape the wiki

[06:10:49.0000] <MikeSmith>
so I sure don't want to instead write even 10 times more code on the validator side to consume the rest of the registration data

[06:11:19.0000] <MikeSmith>
so all I want is a very simple API for retrieving just the list of registered names

[06:13:03.0000] <MikeSmith>
and as far as I can see the majority of the registered names are just junk that no (or almost no) existing applications actually consume

[06:14:09.0000] <MikeSmith>
so wI really have to wonder who are we really helping if we add yet more baroqueness around validator support for this feature

[07:17:13.0000] <Ms2ger>
If the element is mutable, the element's activation behavior is to do nothing.

[07:17:13.0000] <Ms2ger>
If the element is not mutable, it has no activation behavior.

[07:17:20.0000] <Ms2ger>
/me wonders what the difference is

[07:20:06.0000] <Ms2ger>
jgraham, want to sign off my changes in https://critic.hoppipolla.co.uk/r/642?

[08:55:21.0000] <MikeSmith>
Ms2ger: are the scripts that generate the canvas tests now working as expected again? can we close https://github.com/w3c/web-platform-tests/issues/215 ?

[08:55:38.0000] <MikeSmith>
Ms2ger: nm

[08:55:49.0000] <MikeSmith>
plh was asking me about the same thing

[08:56:00.0000] <MikeSmith>
I see you replied already

[08:56:28.0000] <Ms2ger>
He was?

[08:57:03.0000] <MikeSmith>
oh wait

[08:57:06.0000] <MikeSmith>
different issue

[08:57:32.0000] <MikeSmith>
I was thinking he asked you on #testing but I see now that was about #105

[08:57:53.0000] <MikeSmith>
ok so can we close https://github.com/w3c/web-platform-tests/issues/215 ?

[08:58:09.0000] <Ms2ger>
Yep

[08:58:11.0000] <Ms2ger>
/me does that

[09:02:53.0000] <MikeSmith>
thanks

[09:18:29.0000] <Ms2ger>
annevk-cloud, any reason not to put the TextEncoder/Decoder tests into w-p-t rather than https://code.google.com/p/stringencoding?

[09:40:43.0000] <Hixie>
MikeSmith: the proposal isn't gonna work if you only implement one tenth of it :-)

[09:59:43.0000] <MikeSmith>
Hixie: I'll reply to the message when I have more time but basically the only existing problem that I can so far agree is in need of solving is the part about having an actual API to expose the name values so that we can have the validator use that instead of us needing to hardcode the names in the validator sources

[10:00:38.0000] <MikeSmith>
I'm not opposed to the other parts of the proposal if somebody were to care enough to spend time implementing them

[10:06:30.0000] <SpiritDrift>
join #webgl

[10:11:34.0000] <a-ja>
MikeSmith: newly-allowed ARIA values being added to validator?

[10:12:24.0000] <a-ja>
(8409 and 8412 in tracker)

[10:12:52.0000] <MikeSmith>
a-ja: I think we already have them in the validator

[10:12:58.0000] <MikeSmith>
if not please files bugs

[10:13:06.0000] <a-ja>
oh cool

[10:16:10.0000] <Hixie>
MikeSmith: makes sense

[10:17:00.0000] <Hixie>
MikeSmith: if the only thing we do is have a formal way to update validators, though, without e.g. the registration system, or the advice paragraphs on obsolete but known values, then we can build a much simpler system

[10:18:44.0000] <a-ja>
Hixie: see my message 4 or 5 days ago re tracker 8409?....bad? data-x values for group

[10:19:48.0000] <zewt>
grr @ python and its silly unhashable dicts

[10:19:51.0000] <Hixie>
a-ja: message where?

[10:20:16.0000] <a-ja>
<code data-x="attr-aria-role-directory">group</code>,

[10:20:24.0000] <a-ja>
2 occurrences

[10:20:38.0000] <Hixie>
isn't that fixed already?

[10:20:49.0000] <Hixie>
i think i fixed it when you first mentioned it

[10:21:04.0000] <a-ja>
maybe locally?

[10:21:30.0000] <a-ja>
just hadn't seen another checkin changing it

[10:21:36.0000] <Hixie>
i find no occurrences of /role-directory">group/ in the spec

[10:21:40.0000] <Hixie>
i probably fixed it in some other checkin

[10:21:50.0000] <a-ja>
k...cool

[10:21:54.0000] <Hixie>
i don't bother with dedicated checkins for minor stuff like that, i usually fix it in passing while i'm doing a bigger thing

[10:22:03.0000] <Hixie>
(thanks for noticing, btw)

[10:22:07.0000] <Hixie>
ok, gotta go, bbiab

[10:22:18.0000] <Hixie>
(noticing the typo, i mean.)

[10:22:36.0000] <Ms2ger>
http://html5.org/tools/web-apps-tracker?from=8409&to=8410

[10:22:48.0000] <a-ja>
btw...just saw un-prefixed border-box land in moz inbound

[10:23:01.0000] <a-ja>
(10yo bug)

[10:23:54.0000] <a-ja>
Ms2ger: that'd be rework of your patch

[10:24:11.0000] <Ms2ger>
Yep

[10:24:19.0000] <Ms2ger>
It even landed with my name on it :)

[10:24:29.0000] <a-ja>
noticed that :)

[10:25:55.0000] <a-ja>
Ms2ger: now uplift that sucker!

[10:25:59.0000] <a-ja>
if possible

[10:26:27.0000] <Ms2ger>
It's taken ten years, it can wait 6 more weeks :)

[10:26:37.0000] <a-ja>
/me know it's likely too late in cycle

[10:27:40.0000] <a-ja>
i'm just tired of it polluting my stylesheets

[10:28:27.0000] <Ms2ger>
Yeah, uplift is Monday after next, and I wouldn't be surprised by some breakage

[10:40:04.0000] <Ms2ger>
foolip, how about Window.captureEvents?

[10:42:31.0000] <a-ja>
Ms2ger: fyi, just submitted feedback to caniuse.com

[10:42:43.0000] <Ms2ger>
Thanks :)

[11:05:11.0000] <satazor>
Hello guys, I'm a developer of the recently released demo of http://baboom.com which is a new music service. We are using the new WebAudio API to provide FLAC playback, though we are having a few issues with it, and hopefully some of you guys can enlighten me

[11:07:23.0000] <satazor>
we are decoding FLAC files and using createScriptProcessor to fill raw pcm audio data, but the fact that the refill callback is on the UI thread has a major issue, which is that when browser is doing some heavy stuff, the audio data does not called in time, and that causes audio glitches

[11:07:29.0000] <MikeSmith>
satazor: that API isn't discussed here so much. I'm not sure who here is very familiar with it

[11:07:38.0000] <MikeSmith>
maybe roc

[11:08:18.0000] <satazor>
roc isn't here, or is under other username?

[11:09:23.0000] <MikeSmith>
satazor: no he'd be using that nick

[11:10:24.0000] <satazor>
I see, anyone else that could give me an hand?

[11:12:27.0000] <MikeSmith>
satazor: not that I can think of

[11:12:38.0000] <MikeSmith>
other options are posting to http://lists.w3.org/Archives/Public/public-audio/

[11:12:47.0000] <MikeSmith>
or to https://github.com/WebAudio/web-audio-api/issues

[11:13:37.0000] <MikeSmith>
which I realize aren't real-time discussion but I don't think the audio people are around on IRC much

[11:17:20.0000] <MikeSmith>
satazor: you could try #audio on irc.w3.org

[11:17:33.0000] <satazor>
alright thanks for all these resources

[12:48:42.0000] <annevk-cloud>
Ms2ger: ask jsbell

[12:48:53.0000] <Ms2ger>
!summon jsbell


2014-01-26
[07:52:44.0000] <Ms2ger>
foolip, I was hoping you'd feel like testing the ones on Window too

[10:21:06.0000] <AlexNRoss>
What is the most compatible mime-type for an image icon (.ico)?

[10:23:01.0000] <AlexNRoss>
I know Google uses image/x-icon and the "formal" mimetype is image/vnd.microsoft.icon, there is also image/ico, image/icon, and application/ico.

[10:23:32.0000] <AlexNRoss>
Currently, I'm understanding that image/x-icon is the most compatible out of the bunch.

[11:46:22.0000] <Ms2ger>
Okay, a question for y'all

[11:46:28.0000] <Ms2ger>
2. If readyState = LOADING set readyState to DONE and result to null.

[11:46:32.0000] <Ms2ger>
...

[11:46:34.0000] <Ms2ger>
6. Unless readyState is LOADING fire a progress event called loadend. If readyState is LOADING do NOT fire loadend.

[11:47:00.0000] <Ms2ger>
If readyState was LOADING at the start, should loadend be fired?

[15:51:48.0000] <TabAtkins>
As written, no.


2014-01-27
[16:10:32.0000] <ytrezq>
Hello, How I may enable content-encoding compression from a CGI script? I mean how I can set the correct line in the http header?

[17:09:10.0000] <gsnedders>
So Test262 is on GitHub, and they're considering merging the PRs as enough for licensing, so yay easier submissions!

[17:09:18.0000] <gsnedders>
On the other hand, will they keep up with PRs?

[17:25:58.0000] <annevk-cloud>
Ms2ger: looks like you should file a bug

[19:34:56.0000] <foolip>
is it considered ugly to use float in WebIDL?

[19:35:37.0000] <foolip>
we're considering making some attributes float in WebVTT, but if we go with double we're going to waste memory, which I don't want

[19:36:09.0000] <foolip>
but with float you can have a strange case that the value you set is not the value you then get back (in JavaScript, that is)

[19:36:15.0000] <foolip>
nessy: ^

[19:54:16.0000] <nessy>
foolip: float is part of WebIDL http://www.w3.org/TR/WebIDL/#idl-float - but yeah, is there a preference?

[20:05:28.0000] <nessy>
foolip: I just checked and there are no "float" values in use in IDL in the HTML spec, if that's any indication (they are all double)

[20:07:48.0000] <nessy>
foolip: my guess is it's left to the browser as a quality of implementation issue (but Hixie can clarify)

[21:50:20.0000] <Hixie>
foolip: why would it waste memory, given that it's going to be a JS Number in any case?

[22:34:07.0000] <zcorpan>
foolip: http://heycam.github.io/webidl/#idl-float says double is preferred

[22:38:59.0000] <Domenic_>
One day, it will all be "number." With some validation annotations.

[22:40:55.0000] <Domenic_>
https://www.w3.org/Bugs/Public/show_bug.cgi?id=24241#c4

[22:56:17.0000] <foolip>
Hixie: if the IDL says double and you store it as float internally, it seems trivial to write a test case that would fail: cue.line=veryPreciseNumber;assert(cue.line==veryPrecisNumber)

[22:56:45.0000] <foolip>
zcorpan: have you looked through https://www.w3.org/Bugs/Public/show_bug.cgi?id=19836 ?

[23:00:13.0000] <zcorpan>
foolip: have now

[23:06:13.0000] <foolip>
zcorpan: WDYT?

[23:06:40.0000] <foolip>
I don't want the implementation to have to store these things as double internally, that's just wasteful

[23:08:23.0000] <zcorpan>
foolip: i'm not competent about memory stuff, but can't you just store as double when necessary and use a more compact type otherwise?

[23:09:13.0000] <zcorpan>
foolip: i'd just specify double and let the smart guys figure out how to do it efficiently :-)

[23:09:58.0000] <foolip>
zcorpan: not really, having two different representations massively complicates things, it'll end up worse than just using double everywhere

[23:10:19.0000] <foolip>
zcorpan: would you complain when your test case fails to get the same number out of the attribute as you put in?

[23:11:00.0000] <zcorpan>
foolip: that seems like the wrong question

[23:11:28.0000] <zcorpan>
foolip: more relevant is if authors would complain or worse, write buggy code but not realize it

[23:13:22.0000] <zcorpan>
foolip: but i fail to see how this attribute is different from all other doubles in html

[23:13:41.0000] <foolip>
I don't know, is it common for things that are double to not actually have double precision?

[23:14:16.0000] <zcorpan>
at some point html changed all floats to doubles

[23:15:27.0000] <foolip>
so WebIDL says "Unless there are specific reasons to use a 32 bit floating point type, specifications should use double rather than float"

[23:15:46.0000] <foolip>
is "we don't need double precision" a "specific reason"? :)

[23:16:25.0000] <zcorpan>
if it was it wouldn't say that :-P

[23:18:43.0000] <zcorpan>
video.volume is double

[23:19:09.0000] <foolip>
the thing with cues is that you will have lots of them, so small differences matter more

[23:20:14.0000] <foolip>
so, OK, I guess that using float in WebIDL isn't cool, now what

[23:21:30.0000] <foolip>
I suppose just use float internally and hope that nobody writes that test case

[23:23:06.0000] <zcorpan>
no :-)

[23:23:45.0000] <zcorpan>
ask on public-script-coord, the "there are lots of cues" reason might be valid

[23:24:53.0000] <zcorpan>
the same discussion was had about something in http://dev.w3.org/fxtf/geometry/ ... i don't remember what the reasoning was but it seems it now doesn't use float

[23:26:23.0000] <foolip>
zcorpan: ok, will allow double into the spec first and write that email second

[23:26:29.0000] <foolip>
nessy: ^

[00:16:59.0000] <Ms2ger>
Hrm

[00:17:33.0000] <Ms2ger>
If you call click() on a disabled button, should a click event be fired?

[00:19:06.0000] <foolip>
Ms2ger: "yes" seems like the simplest answer

[00:19:39.0000] <Ms2ger>
Is there anything wrong with my test at http://software.hixie.ch/utilities/js/live-dom-viewer/saved/2775?

[00:22:22.0000] <foolip>
Ms2ger: probably, but http://www.whatwg.org/specs/web-apps/current-work/multipage/elements.html#run-synthetic-click-activation-steps doesn't seem to cared about disabled, so that bit doesn't seem wrong

[06:31:20.0000] <macfreek>
Hi, I dropped a mail to admin⊙wwo for an account, but did not yet get a reply. If someone here is able to help, please reply. Thanks!

[06:31:36.0000] <macfreek>
(the mail was send last Friday)

[06:38:05.0000] <MikeSmith>
macfreek: will look now

[06:38:14.0000] <macfreek>
thanks.

[06:38:31.0000] <MikeSmith>
but please hang around here longer than 5 minutes this time :)

[06:38:57.0000] <macfreek>
NP :)

[06:43:15.0000] <gsnedders>
Is there any Java DOM impl that works with nu.validator.htmlparser.dom.HTMLDocumentBuilder with XMLViolationPolicy = ALLOW?

[06:44:08.0000] <MikeSmith>
gsnedders: not that I'm aware of

[06:44:21.0000] <gsnedders>
Okay.

[06:44:23.0000] <MikeSmith>
but I'm not so familiar with what's out there

[06:44:35.0000] <MikeSmith>
hsivonen would certainly know better

[06:44:40.0000] <MikeSmith>
and maybe smola

[06:45:02.0000] <gsnedders>
I'm probably best suited just creating a minimal TreeBuilder that just keeps the parser right, anyway.

[06:46:05.0000] <MikeSmith>
yeah that might not require so much effort really

[06:52:13.0000] <hsivonen>
gsnedders: I don't know, but it seemed sensible to keep open the option that someone might write one

[06:52:40.0000] <hsivonen>
gsnedders: You might want SaxTree

[06:57:25.0000] <MikeSmith>
macfreek: please either DM me your e-mail address and username you want, or just type in here

[07:02:13.0000] <gsnedders>
hsivonen, MikeSmith: if I come up with a whole load of questions, should I ask you here, by email personally, or some ML?

[07:08:15.0000] <MikeSmith>
gsnedders: I would be happier with questions here but hsivonen would be more help than me and I suspect he'd prefer direct e-mail so that's probably a better choice

[07:11:40.0000] <gsnedders>
The other important question before starting anything: is it up to date with the spec?

[07:27:15.0000] <MikeSmith>
gsnedders: the parser behavior is as up to date with the spec as the gecko parser is

[07:39:09.0000] <hsivonen>
gsnedders: You can ask here or in email. the latest .zip release is not up to date. (I should fix.) The repo is almost up to date except for a couple of minor things.

[07:39:40.0000] <gsnedders>
hsivonen: I was looking at the repo anyway :)

[10:07:54.0000] <Hixie>
well https://www.w3.org/Bugs/Public/show_bug.cgi?id=24408 is special

[10:08:07.0000] <Hixie>
foolip: depends if it's readonly or writable, i'm not clear on what you're doing exactly

[10:11:08.0000] <Hixie>
Ms2ger: https://www.w3.org/Bugs/Public/show_bug.cgi?id=24396 what am i supposed to do? is this different from the bug it was cloned from? i'm confused.

[10:11:20.0000] <Ms2ger>
Hixie, document != window

[10:12:11.0000] <Hixie>
there's two sets of these? jesus

[10:13:22.0000] <Domenic_>
So the usual way of extending navigator with a "namespace" seems to be... creating a non-constructable class, somehow magically constructing an instance of it, then putting that instance on `navigator`?

[10:13:40.0000] <Hixie>
what do you mean by "namespace"?

[10:14:27.0000] <Domenic_>
e.g. navigator.storageQuota.queryInfo("temporary"), navigator.storageQuota.requestPersistentQuota(0), both functions are under the "storageQuota" namespace

[10:15:03.0000] <Hixie>
ah

[10:15:10.0000] <Hixie>
you don't want to use the word "namespace" for that, that's just confusing

[10:15:29.0000] <Hixie>
if you mean, "how do i add members to an interface defined in another specification", there's two ways that are considered good practice

[10:15:35.0000] <Hixie>
1. ask the editor of said specification to add the member

[10:15:40.0000] <Hixie>
2. create a "partial interface".

[10:16:01.0000] <Domenic_>
Sure, that's not the part I'm confused on

[10:16:07.0000] <Domenic_>
The part I'm confused on is what you put in that partial interface

[10:16:20.0000] <Domenic_>
it seems the tradition is to create a non-constructible class, then put a magically-constructed instance of that class in the partial interface

[10:16:50.0000] <jgraham>
Yes

[10:17:37.0000] <Domenic_>
welp

[10:18:03.0000] <jgraham>
Well it's not like anyone actually finds it hard to use

[10:18:17.0000] <Hixie>
wait, what?

[10:18:32.0000] <Hixie>
how do you put a "magically-constructed instance" of a "non-constructible class" in an interface?

[10:18:37.0000] <jgraham>
and we couldn't have really waited until 20XY for ES to finally standardise modules

[10:18:48.0000] <Domenic_>
jgraham: could have just used normal objects and functions

[10:18:57.0000] <Domenic_>
Hixie: using magic WebIDL powers

[10:19:04.0000] <jgraham>
Hixie: I assume he means something like navigator in window.navigator

[10:19:18.0000] <Hixie>
if you want to add "requestPersistentQuota" to "storageQuota" you just say "partial interface StorageQuota { void requestPersistentQuota() }"

[10:19:19.0000] <Domenic_>
you can put [NoInterfaceObject] on something, but still somehow create instances of it by doing readonly attribute NonConstructibleClass thingy

[10:19:28.0000] <jgraham>
Domenic_: Not sure how that would have been better. Or necessarily worked at all

[10:19:53.0000] <Hixie>
oh you mean how do you put the storageQuota attribute itself onto Navigator?

[10:20:04.0000] <Domenic_>
jgraham: pretty simple. navigator.storageQuota = { queryInfo() { /* algorithm for query info */ }, requestPersistentQuota() { /* algorithm for requesting a quota */ } };

[10:20:13.0000] <Domenic_>
Hixie: yes, that's the issue.

[10:20:54.0000] <Hixie>
partial interface Navigator { readonly attribute StorageQuota storageQuota; }, "on getting, the storageQuota attribute must return an instance of the StorageQuota interface. The same instance must be returned each time."

[10:21:03.0000] <Hixie>
and  interface StorageQuota { }

[10:21:08.0000] <Hixie>
no need for any [attributes]

[10:21:18.0000] <jgraham>
Hixie: This isn't a practical question afaict

[10:21:24.0000] <Hixie>
oh

[10:21:25.0000] <jgraham>
This is a theoretical purity question

[10:21:27.0000] <Domenic_>
well, ok, if StorageQuota is constructible, then that makes sense

[10:21:31.0000] <Domenic_>
this isn't very theoretical

[10:21:39.0000] <Domenic_>
this is a "how would i implement this API in jsdom" question

[10:21:40.0000] <Hixie>
why would it be constructible?

[10:21:43.0000] <Hixie>
it has no constructor

[10:21:48.0000] <Domenic_>
how do you create instances of it then?

[10:21:52.0000] <Hixie>
you just do

[10:21:55.0000] <Hixie>
the browser can do whatever

[10:21:56.0000] <Domenic_>
... O_O

[10:22:32.0000] <jgraham>
Domenic_: In general the idea that you can write the DOM in pure JS with no external environment is brokwn

[10:22:36.0000] <jgraham>
*broken

[10:22:40.0000] <Hixie>
interfaces defined in IDL can't ever be constructed from JS, they're all "magical" in that they have browser code backing it

[10:23:24.0000] <Hixie>
i mean even if they have constructors, what you get back is a browser-implemented instance

[10:23:33.0000] <Domenic_>
jgraham: all i'm asking is for the DOM to expose objects to JavaScript that actually can be implemented in JavaScript. Not APIs that are impossible for a normal JS programmer to ever create and expose to another JS programmer.

[10:23:35.0000] <Hixie>
the prototypes are browser-created prototypes

[10:23:36.0000] <Hixie>
etc

[10:23:54.0000] <Hixie>
i don't understand

[10:24:00.0000] <Hixie>
why would you ever want to create one of these from JS?

[10:24:01.0000] <Domenic_>
this is basically a document.all issue

[10:24:09.0000] <Domenic_>
it's impossible for JS to create an object that has properties but is falsy

[10:24:25.0000] <Domenic_>
similarly it's impossible for JS to create a non-constructible class that somehow also has instances existing as a property of navigator

[10:24:29.0000] <Hixie>
it's like how you can't create a Win32 window without using the Win32 API

[10:24:33.0000] <Domenic_>
both are crazy

[10:27:35.0000] <Hixie>
what do you mean by "non-constructible class" exactly?

[10:27:43.0000] <Hixie>
in JS there are no classes and everything is constructible, no?

[10:28:02.0000] <Hixie>
i guess only Functions are constructible

[10:28:23.0000] <Hixie>
i don't really understand the question

[10:28:43.0000] <Domenic_>
"class" in JS is shorthand for constructor function with a well-defined prototype

[10:28:53.0000] <Domenic_>
(formalized in ES6 by the `class` keyword syntactic sugar)

[10:28:56.0000] <jgraham>
Hixie: There's no value of X such that new X() will give you back a storageQuota

[10:29:27.0000] <Domenic_>
jgraham: and, that wouldn't be a problem, except that Object.getPrototypeOf(navigator.storageQuota) gives you a well defined StorageQuota.prototype object

[10:29:28.0000] <Hixie>
jgraham: isn't that true for all objects in DOM?

[10:29:48.0000] <jgraham>
Hixie: Not really

[10:29:58.0000] <jgraham>
I mean you can do new Event() these days

[10:30:05.0000] <Hixie>
sure but it's not a generic JS-backed Event

[10:30:10.0000] <Hixie>
it's a browser-implemented Event

[10:30:16.0000] <jgraham>
Sure

[10:30:26.0000] <Hixie>
so it's not a "class"

[10:30:30.0000] <Domenic_>
sure it is

[10:30:37.0000] <Domenic_>
it's a function which vends instances of its prototype

[10:30:46.0000] <Domenic_>
(when called with `new`)

[10:30:54.0000] <jgraham>
Well it depends on whether you can actually implement an Event in js with equivalent semantics

[10:30:58.0000] <Hixie>
its prototype is kinda useless though, it's full of native code functions

[10:31:05.0000] <Domenic_>
that's a useful prototype

[10:31:11.0000] <Hixie>
i guess i don't understand what we're talking about then

[10:31:22.0000] <Domenic_>
the problem is not that sometimes methods can be [native code]

[10:31:23.0000] <Hixie>
what's the problem we're trying to solve?

[10:31:56.0000] <Domenic_>
the problem is that you can create frankenstein objects exposed to JS but not possible for a JS programmer to ever create himself, or to encounter outside of this weird browser world

[10:32:08.0000] <jgraham>
OK, then I am also confused. I also don't understand how far down you want to push this

[10:32:35.0000] <jgraham>
I don't understand why you care about being able to do new X() but not about the fact that you can't implement any of the properties of an X

[10:32:37.0000] <Domenic_>
such as, a `storageQuota` property which is an instance of `StorageQuota.prototype` where `StorageQuota` is not actually a constructor but instead a function that always throws.

[10:33:43.0000] <Hixie>
why is "you can create frankenstein objects exposed to JS but not possible for a JS programmer to ever create himself" a problem?

[10:34:03.0000] <Domenic_>
well, i think that's our fundamental point of contention :)

[10:34:03.0000] <jgraham>
(one could create an object in JS that would allow something to be constructed once, but not again, I think)

[10:34:44.0000] <Hixie>
Domenic_: is it a problem that the same is true in the Win32 API? That there are concepts that exist as singletons in the API and can't be created from user code?

[10:34:47.0000] <Domenic_>
jgraham: not a bad mental model. I might be pacified.

[10:35:03.0000] <Domenic_>
Hixie: there are no concepts in the Win32 API that can't be implemented in C

[10:35:07.0000] <Domenic_>
that's the analogy

[10:35:15.0000] <Hixie>
Domenic_: sure there are.

[10:35:21.0000] <Domenic_>
Oh?

[10:35:28.0000] <Hixie>
Domenic_: a Win32 Window can't be created by a C program without using the Win32 API.

[10:35:48.0000] <Hixie>
jgraham: in pure JS, you can always just create a new object that is identical to an existing object, as far as i can tell. just copy all its members.

[10:35:49.0000] <Domenic_>
sure. but Window itself is implementable in C

[10:36:00.0000] <Hixie>
Domenic_: well sure. You could implement an entire browser in JavaScript, too.

[10:36:22.0000] <Domenic_>
Window isn't some weird thing that follows different rules than all other objects exposed to C code

[10:36:29.0000] <Domenic_>
s/exposed to/created by/

[10:36:35.0000] <Hixie>
yes it is?

[10:36:41.0000] <Hixie>
i mean, not _all_ other objects

[10:36:46.0000] <Hixie>
there's tons of stuff vended by the Win32 API

[10:36:53.0000] <Hixie>
File handles, for example

[10:37:11.0000] <Domenic_>
sure. but they're structs, or pointers, or whatever

[10:37:15.0000] <Hixie>
so?

[10:37:19.0000] <Hixie>
you can't just make your own

[10:37:28.0000] <Hixie>
you have to use the one handed to you by the Win32 API, otherwise it won't work

[10:37:33.0000] <Domenic_>
not, e.g. pointers which can only be dereferenced once, or some similar strange thing that breaks language invariants

[10:38:17.0000] <Hixie>
just redefine your idea of what is a JS invariant to not include things that are done by the DOM API

[10:38:22.0000] <Hixie>
then your problem is solved

[10:38:30.0000] <Domenic_>
yes, that would certainly do the trick

[10:39:00.0000] <Hixie>
a better analogy would be a unix process

[10:39:09.0000] <Domenic_>
if I was programming in JS + magic C++ powers, I would have a different set of invariants. And I realize spec writers *are* programming in that language.

[10:39:13.0000] <Hixie>
there's no way that a C program can create a process, short of asking the unix kernel to do so

[10:39:39.0000] <Domenic_>
But the process will be represented by a normal C object that obeys C invariants

[10:39:57.0000] <Hixie>
no? at best it's represented as an integer.

[10:40:02.0000] <Hixie>
you can't actually get to the object itself.

[10:40:09.0000] <Hixie>
it's only visible to kernel code.

[10:40:11.0000] <Domenic_>
yes yes. an integer that obeys C invariants, is my point

[10:40:33.0000] <Domenic_>
the only thing visible to C is things that obey C invariants

[10:40:39.0000] <Domenic_>
that's exactly what I'm saying

[10:40:42.0000] <Hixie>
no, the integer you get back is a kernel process handle.

[10:40:45.0000] <Hixie>
no other integer is that.

[10:41:01.0000] <Domenic_>
whereas in the DOM there are many things available to JS that do not obey JS invariants

[10:41:03.0000] <Hixie>
C integers have invariants like "you can add 1 to it and it'll still be useful"

[10:41:16.0000] <Domenic_>
*language* invariants

[10:41:18.0000] <Hixie>
do that to a PID and you get nothing useful at all.

[10:41:24.0000] <Hixie>
what do you mean by "language"?

[10:41:25.0000] <Domenic_>
not human semantic "invariants"

[10:41:30.0000] <Domenic_>
I mean, in the C language spec

[10:41:50.0000] <Hixie>
so if we put the DOM spec inside the JS spec you'd suddenly be ok with it?

[10:42:03.0000] <Domenic_>
Yeah, I guess so.

[10:42:15.0000] <Hixie>
ok. then imagine there is one huge spec labeled "The Web" that contains all these specs.

[10:42:20.0000] <Hixie>
that's what i've been arguing we should do for years.

[10:42:25.0000] <Domenic_>
heh

[10:42:31.0000] <Hixie>
it's just that for practical purposes we're editing it in separate docs for now.

[10:42:46.0000] <Domenic_>
i think there's value in stratifying into e.g. language and libraries

[10:42:53.0000] <Domenic_>
and making sure libraries obey invariants of the language

[10:43:11.0000] <Hixie>
i think this requires defining "language" and that any such definition would be arbitrary

[10:43:52.0000] <Domenic_>
traditionally it's pretty clear how to define programming languages as separate from their runtimes or libraries. the success of JS in both node and browser environments seems like an obvious thing to bring up here.

[10:44:41.0000] <Hixie>
nah, the line is always very blurry.

[10:44:56.0000] <Hixie>
is CORE::* in Perl part of the language, or the library?

[10:45:18.0000] <Hixie>
is system.oas part of the Pascal language, or the library?

[10:45:22.0000] <Hixie>
system.pas even

[10:45:42.0000] <Hixie>
are RegExp and Date part of the JS language, or the library?

[10:46:19.0000] <Hixie>
is it bad that you can't create your own RegExp-like or String-like object with its own literals, in JS?

[10:46:29.0000] <Hixie>
or are they part of the language?

[10:46:49.0000] <Hixie>
why is a "realm" part of the language, but "Window" part of the library?

[10:47:49.0000] <Domenic_>
fair. i guess you can take an empirical "greatest common factor" approach.

[10:48:45.0000] <Hixie>
i'll agree to that, so long as you agree that the JS language used in Node and the JS language used in browsers are different JS languages.

[10:48:57.0000] <Hixie>
very similar, granted, but different nonetheless.

[10:49:56.0000] <Domenic_>
i don't see that; what's the argument?

[10:50:20.0000] <Hixie>
"this", in browsers, isn't the global object

[10:50:27.0000] <Hixie>
it's a WindowProxy object.

[10:50:32.0000] <Domenic_>
oh fuck :P

[10:50:36.0000] <Domenic_>
yeah you're right

[10:50:50.0000] <Domenic_>
also the JS in browsers has the ability to create falsy objects with properties

[10:51:29.0000] <Domenic_>
those are the two actual modifications to the language spec if i recall

[10:51:34.0000] <Hixie>
at which point, the "greatest common factor" of the browser version of JS includes most of the DOM, so... :-)

[10:51:45.0000] <Domenic_>
lol

[10:52:05.0000] <Domenic_>
i think i've been cornered by logic and must admit defeat

[10:52:12.0000] <Hixie>
À la fin de l'envoi, je touche.

[10:59:58.0000] <Hixie>
btw i think a greatest common factor approach works for multiple implementations, but i don't know how to apply it to, say, perl5. is everything that ships with the basic compiler part of the language? That's a hell of a lot of libraries. I think a better approach may be to look at what you have access to without any explicit imports, which would include Core::* but not e.g. IO::Socket.

[11:00:08.0000] <Hixie>
but if you do that, then on browsers the DOM still gets included as part of the core.

[11:00:34.0000] <Hixie>
that definition would exclude the STL from C++, though, which is intuitively nice.

[11:00:50.0000] <Hixie>
and it would include system.pas but exclude sysutils.pas in ObjectPascal, which also works neatly.

[11:02:04.0000] <Hixie>
in C++ it would mean you had thread-local variables as part of the language, but pthreads (needed to make use of them) as part of a library.

[11:02:20.0000] <Hixie>
it would mean that the kernel was not part of the language, too, which is interesting and in contrast to the JS/DOM pair.

[11:14:27.0000] <mrbkap>
dglazkov: ping?

[11:15:49.0000] <Ms2ger>
Speaking of which

[11:15:59.0000] <Ms2ger>
I haven't bothered dglazkov about tests today

[11:16:08.0000] <mrbkap>
Ms2ger: get in line!

[11:18:45.0000] <Ms2ger>
jsbell, ping!

[11:18:58.0000] <jsbell>
Ms2ger: ?

[11:19:17.0000] <Ms2ger>
jsbell, any reason the TextEncoder/Decoder tests aren't in web-platform-tests?

[11:20:27.0000] <jsbell>
just lack of time. (I think I got myself added to the right github groups but never did the work)

[11:20:59.0000] <dglazkov>
good almost noon, Whatwg!

[11:21:22.0000] <Ms2ger>
jsbell, you don't need any permissions to create a pull request :)

[11:21:52.0000] <dglazkov>
mrbkap: pong

[11:21:59.0000] <mrbkap>
dglazkov: hey, I was wondering if you'd seen https://www.w3.org/Bugs/Public/show_bug.cgi?id=24002 and https://www.w3.org/Bugs/Public/show_bug.cgi?id=24003

[11:23:24.0000] <dglazkov>
mrbkap: I had not. morrita is currently wearing the imports spec editor hat, though

[11:23:30.0000] <mrbkap>
dglazkov: oh, ok.

[11:23:58.0000] <dglazkov>
mrbkap: will comment, though

[11:25:35.0000] <mrbkap>
dglazkov: thanks.

[11:26:28.0000] <dglazkov>
Ms2ger: I will review moar things on critic too. Is critic-as-preferred-tool expressed/documented anywhere? Because I see peeps doing in-line github reviews, too.

[11:27:17.0000] <Ms2ger>
dglazkov, I find it a lot easier to follow a review on github, but if you don't want to use better tools, you're free to comment on github :)

[11:27:31.0000] <Ms2ger>
s/follow/follow *than*/

[11:35:01.0000] <Hixie>
heycam: why do you have this restriction?: If [Exposed] appears on an overloaded operation, then it must appear on all overloads, with the same identifier list.

[11:35:33.0000] <Hixie>
heycam: consider e.g. APIs that in workers take a string or an integer, but in Windows take a string, an integer, or a DOM node.

[11:35:58.0000] <Ms2ger>
[heycam is in a meeting discussing https://www.w3.org/Bugs/Public/show_bug.cgi?id=23682]

[11:36:54.0000] <Hixie>
ok that's probably a better use of this time, granted

[11:40:16.0000] <Domenic_>
Ms2ger: oh yay!

[12:25:26.0000] <heycam>
Hixie, so that would have complicated invoking the overload resolution stuff and the checking of valid IDL stuff (things being distinguishable) so I wanted to avoid it unless we really need it

[13:49:23.0000] <Hixie>
heycam: k

[13:49:28.0000] <Hixie>
heycam: i'll get back to you if i find a case

[13:49:41.0000] <heycam>
Hixie, cool; shouldn't be too hard to add, but more than I wanted to do at the time :)

[13:49:58.0000] <Hixie>
ok so here's one possible case

[13:50:01.0000] <Hixie>
from xhr:

[13:50:02.0000] <Hixie>
  void send(optional (ArrayBufferView or Blob or Document or [EnsureUTF16] DOMString or FormData or URLSearchParams)? data = null);

[13:50:21.0000] <Hixie>
(man, that's quite the type description)

[13:50:25.0000] <heycam>
isn't it

[13:50:34.0000] <Hixie>
i presume that the Document part of this will be Window-only

[13:50:45.0000] <heycam>
yeah

[13:50:51.0000] <heycam>
I wonder if we could do it automatically

[13:50:55.0000] <heycam>
knowing that Document is window only

[13:51:00.0000] <heycam>
or if that would be too subtle

[13:51:07.0000] <Hixie>
well so that's an interesting point

[13:51:14.0000] <Hixie>
does it matter what the _arguments_ to a method are?

[13:51:20.0000] <Hixie>
you can't actually get a Document from that

[13:51:30.0000] <heycam>
true

[13:51:31.0000] <Hixie>
and since you can't get a Document at all, it doesn't much matter what the overloads are...

[13:51:33.0000] <heycam>
you'll never have a Document

[13:51:53.0000] <heycam>
it might well be ok to just leave that there

[13:51:59.0000] <Hixie>
yeah...

[13:52:21.0000] <heycam>
I didn't add any IDL author conformance criteria preventing it

[13:52:41.0000] <Hixie>
let me try to convert HTML to this and see what happens

[13:52:54.0000] <heycam>
ok

[13:53:13.0000] <Hixie>
[PrimaryGlobal] implies [Global=Window] ?

[13:53:18.0000] <heycam>
yep

[13:53:22.0000] <Hixie>
k

[13:53:30.0000] <heycam>
well, it implies [Global=TheInterfaceIt'sOn]

[13:53:45.0000] <Hixie>
oh ok

[13:53:47.0000] <Hixie>
cool

[13:53:56.0000] <heycam>
still trying to keep Window the name not special :)

[13:55:48.0000] <Hixie>
let me know if anyone ever puts [PrimaryGlobal] on anything else

[13:55:50.0000] <Hixie>
i'd love to see that!

[13:56:10.0000] <Hixie>
do i have to expose things like enums or callbacks?

[13:57:02.0000] <Hixie>
wow it's surprising how many interfaces html defines that are just on Window

[13:57:24.0000] <Hixie>
how about typedefs?

[13:57:25.0000] <jory>
"Not sure where to put it? Why not try Window?"

[13:58:21.0000] <Hixie>
well mostly all the element interfaces

[13:58:23.0000] <Hixie>
descendants of Node

[13:58:58.0000] <Hixie>
i wonder if i should expose all the Event types

[13:59:02.0000] <Hixie>
just on general principle

[14:08:00.0000] <annevk>
SimonSapin: 1024 ftw

[14:12:31.0000] <Hixie>
should ApplicationWorker be exposed to Window,Worker, or just Window,SharedWorker? it'd be useless in a dedicated worker...

[14:15:40.0000] <dglazkov>
what's an ApplicationWorker?

[14:16:07.0000] <Hixie>
uh

[14:16:12.0000] <Hixie>
ApplicationCache, my bad

[14:16:15.0000] <Hixie>
i have workers on the mind

[14:16:27.0000] <dglazkov>
darn it. I got excited :-\

[14:16:56.0000] <dglazkov>
"it's a worker that fills out various applications for you"

[14:17:23.0000] <dglazkov>
new ApplicationWorker("mastercard");

[14:17:29.0000] <Hixie>
heh

[14:17:56.0000] <dglazkov>
returns a Promise, of course.

[14:18:26.0000] <Hixie>
one that never gets fulfilled? :-)

[14:18:52.0000] <dglazkov>
it's a asymptotic promise

[14:18:55.0000] <Hixie>
heycam|away: is there any point doing [Exposed] on a [NoInterfaceObject] interface?

[14:19:13.0000] <Hixie>
heycam|away: or should the [Exposed] maybe instead be on the "implements" statement?

[14:30:26.0000] <Hixie>
heycam|away: or alternatively, there should be a rule that says that a Global to which an interface isn't exposed can't reference the interface, either via "implements" or via reference

[14:30:39.0000] <Hixie>
heycam|away: and then that should continue down the chain, so we can check we haven't forgotten to expose something

[14:58:58.0000] <Hixie>
heycam|away: i guess the ancestor of the global doesn't need to be told to be exposed, right?

[15:01:34.0000] <GPHemsley>
Sorry for slacking on the wiki username requests everyone (Hixie).

[15:01:47.0000] <Hixie>
heh, i'm slacking too man

[15:02:01.0000] <Hixie>
though, see thread on whatwg@

[15:02:08.0000] <Hixie>
where i try to kill the main need :-)

[15:11:38.0000] <GPHemsley>
I generally approve that proposal

[15:17:40.0000] <Hixie>
GPHemsley: yeah, need to get mike and henri on board though

[15:18:08.0000] <GPHemsley>
mm

[15:26:27.0000] <Hixie>
man, there's a lot of "require"s in the HTML spec

[15:26:34.0000] <Hixie>
268 "required"

[15:26:42.0000] <Hixie>
auditing that is gonna be a pain

[15:36:46.0000] <annevk>
Domenic_: is there a list of use cases for subclassing promises?

[15:38:51.0000] <astearns>
/me la5t call

[15:39:14.0000] <astearns>
bah, wrong window


2014-01-28
[16:45:19.0000] <heycam>
Hixie, no there's no need to put [Exposed] on the ancestors of a global interface

[16:45:35.0000] <heycam>
Hixie, I should write something about "implements" and [Exposed], though, that's not handled currently

[16:45:42.0000] <heycam>
Hixie, though I do handle partial interfaces

[16:46:10.0000] <heycam>
Hixie, if [Exposed] is on a [NoInterfaceObject], then it should be just like if you used a partial interface with [Exposed] on it

[16:47:44.0000] <heycam>
or maybe it should be on the implements statement, as you say

[19:02:25.0000] <othermaciej>
annevk-cloud: is there a test suite anywhere for your url spec?

[19:07:25.0000] <Domenic_>
annevk-cloud: not written down. CancellablePromise is the most prominent.

[19:13:23.0000] <MikeSmith>
othermaciej: https://github.com/w3c/web-platform-tests/tree/master/url

[19:18:54.0000] <MikeSmith>
othermaciej: and served at http://w3c-test.org/web-platform-tests/master/url/a-element.html

[19:24:22.0000] <othermaciej>
MikeSmith: thanks!

[19:24:38.0000] <MikeSmith>
cheers

[19:25:20.0000] <othermaciej>
I'm about to implement the URL interface, maybe I can tweak the A element tests to apply to URL

[19:26:15.0000] <othermaciej>
I wonder if any of these tests check mutation of URL components?

[19:29:01.0000] <MikeSmith>
othermaciej: I think they do not

[19:38:43.0000] <Streusel>
LOGIN Streusel 1234

[19:38:47.0000] <Streusel>
whoops

[19:38:49.0000] <Streusel>
awh well

[20:17:02.0000] <Fernandos>
hi

[20:20:13.0000] <Fernandos>
Can <section>, <article> and <aside> be a parent of <main> and is that meaningful (semantic)? <main class="row"> <aside>my-sidebar</aside><section>my-widescreen-section</section><article>my-content</article></main>

[20:27:08.0000] <SimonSapin>
annevk-cloud: 1024, you bytes for encoding detection?

[21:21:58.0000] <Domenic_>
Fernandos: that shows them being a child of main, not a parent.

[23:39:46.0000] <SteveF>
Fernandos: see http://html5doctor.com/the-main-element/

[23:52:42.0000] <Ms2ger>
/me wonders why some people call hsivonen "Henry"

[23:57:34.0000] <MikeSmith>
/me wonders why some people call hsivonen "Onry"

[00:17:41.0000] <TabAtkins>
Ms2ger: Because "Henri" is a rare spelling in America?

[00:22:01.0000] <othermaciej>
"Onry" is how "Henri" is pronounced in French, with English speakers have probably heard more often than presumably the Finnish version

[00:25:18.0000] <zcorpan>
Ms2ger: how would https://critic.hoppipolla.co.uk/r/56 be done with testharness-in-workers support?

[00:25:48.0000] <zcorpan>
othermaciej: URL interface probably needs a different set of tests

[00:26:26.0000] <zcorpan>
othermaciej: that testsuite is primarily about parsing/resolving

[00:27:15.0000] <othermaciej>
yeah, I can see that

[00:27:20.0000] <othermaciej>
will try to make my own

[00:28:04.0000] <MikeSmith>
othermaciej: yeah I was just being sportive. Having some sport with the name. Like the first time plh told me about Hungry Mother in Cambridge and I was searching google maps for "Angry Mother" to find the location

[00:28:20.0000] <zcorpan>
you get 5 bounty points for making a web-platform-tests pull request :-)

[00:29:19.0000] <MikeSmith>
we need proper webidlharness.js-based tests for the URL interface I guess

[00:29:19.0000] <hsivonen>
I once almost missed a telecon that involved the organizer calling me and asking if I was [American approximation of French pronunciation of Henri]

[00:30:19.0000] <hsivonen>
OTOH, in Starbucks du Louvre, I said my name was Henri (pronounce the French way) and the American kid working at Starbucks in France wrote "Harry" on the cup

[00:30:22.0000] <hsivonen>
can't win

[00:30:31.0000] <zcorpan>
MikeSmith: yeah, but that's not enough

[00:30:47.0000] <Ms2ger>
zcorpan, 10 for reviewing one? :):

[00:30:56.0000] <MikeSmith>
hsivonen: hah

[00:31:11.0000] <zcorpan>
Ms2ger: sure

[00:32:26.0000] <Ms2ger>
/me looks how https://critic.hoppipolla.co.uk/r/56 works

[00:33:07.0000] <MikeSmith>
zcorpan: well we need that at least. though it wouldn't be very satisfying to run unless Gecko already supports the interface

[00:34:01.0000] <zcorpan>
/me gets his shield while Ms2ger discovers how horrible that code is

[00:34:06.0000] <Ms2ger>
Heh

[00:34:17.0000] <Ms2ger>
You've got your shield now? :)

[00:34:30.0000] <zcorpan>
hold on... yep ok

[00:35:58.0000] <Ms2ger>
You're testing postMessage, so I don't see how it would work with writing only one side

[00:36:25.0000] <zcorpan>
right

[00:36:35.0000] <Ms2ger>
So "like this"

[00:37:15.0000] <hsivonen>
Ms2ger: FWIW, in English, I introduce myself the way "Henry" is pronounced in English

[00:37:22.0000] <zcorpan>
Ms2ger: ok

[00:38:14.0000] <Ms2ger>
hsivonen, now I wonder if I've been mispronouncing Henry, Henri, or both :)

[00:42:53.0000] <zcorpan>
Ms2ger: i was thinking about introducing a way to do more assertions of a test in a worker. but maybe it'd be clearer to have two separate tests for the two contexts. dunno, but it would be nice to be able to use real assertions somehow

[00:44:47.0000] <Ms2ger>
So making steps on one test in both contexts? That sounds somewhat painful

[00:46:22.0000] <Ms2ger>
/me will think about it some more

[00:52:47.0000] <hsivonen>
Oh great. The SVG  WG has introduced a new camel-case element that's not in the HTML parsing spec: feDropShadow

[00:53:15.0000] <Ms2ger>
Hey, you could be dealing with the geolocation wg

[00:54:02.0000] <hsivonen>
Ms2ger: is geolocation still active?

[00:54:24.0000] <Ms2ger>
Apparently "no, fuck your comments"

[01:05:32.0000] <zcorpan>
are javascript RegExp .sticky and .unicode  implemented?

[01:06:18.0000] <zcorpan>
hsivonen: they promised they wouldn't do that iirc

[01:25:14.0000] <hsivonen>
SimonSapin: thanks for https://dvcs.w3.org/hg/csswg/rev/8dd698785f16

[01:47:56.0000] <hsivonen>
how long until this gets attributed to the WHATWG: http://wiki.whatwg.org/wiki/Internet_Encrypted_Media_Extensions ?

[02:12:12.0000] <zcorpan>
BREAKING NEWS: WHATWG PUTS ITS WEIGHT BEHIND DRM AND HIXIE EATS KITTENS

[02:13:50.0000] <hsivonen>
http://dev.w3.org/Graphics-FX/modules/filters/publish/SVGFilter.html says to look at https://dvcs.w3.org/hg/FXTF/raw-file/tip/filters/publish/Filters.html which gives an error

[02:15:12.0000] <hsivonen>
/me finds https://dvcs.w3.org/hg/FXTF/raw-file/e1ae5deb9fa8/filters/index.html

[02:29:14.0000] <darobin>
hsivonen: the answer is, not long, not long at all... https://twitter.com/johnfoliot/status/428039862097559552

[02:30:58.0000] <Ms2ger>
An unhelpful comment from John Foliot? Count me surprised.

[02:32:21.0000] <hsivonen>
At least JF is right about that the suggestion on the wiki page being misguided.

[02:35:29.0000] <zcorpan>
SimonSapin: hsivonen: wait, why is the @charset change good? won't the label fail to match if it contains whitespace anyway?

[02:37:22.0000] <hsivonen>
maybe the spec has changed in other ways, since I last read it

[02:37:26.0000] <hsivonen>
/me looks

[02:38:24.0000] <zcorpan>
hmm http://encoding.spec.whatwg.org/#concept-encoding-get does trim whitespace. wonder why

[02:39:07.0000] <hsivonen>
zcorpan: since when has the spec constrained the values of XX to between 0x23 and 0x7E?

[02:39:35.0000] <hsivonen>
and yeah, 19 bytes is much better than 1024

[02:39:41.0000] <zcorpan>
dunno

[02:39:44.0000] <hsivonen>
despite Gecko using 1024 now

[02:40:11.0000] <hsivonen>
or Gecko using 1024 last time I looked

[02:42:14.0000] <zcorpan>
annevk-cloud: see above

[02:44:15.0000] <jgraham>
FWIW annevk-cloud has taken to using a pseudonym when in situations that casually require a name (e.g. ordering food) in the UK

[02:45:52.0000] <Ms2ger>
/me wonders which

[02:46:31.0000] <zcorpan>
hsivonen: s/19/31/

[02:51:14.0000] <zcorpan>
http://www.behindthename.com/names/extra.php?terms=anne&extra=s&gender=both

[02:52:19.0000] <jgraham>
zcorpan: Not "Amy"

[02:55:54.0000] <zcorpan>
oh the url didn't update when i changed the filter. i meant to filter for male english names

[04:01:44.0000] <hsivonen>
zcorpan: do you have a reference to whatever the SVG WG agreed to regarding camelCasing?

[04:02:01.0000] <MikeSmith>
hsivonen: zcorpan: so about the validator  behavior for text/html documents with an HTML4 or XHTML1, I would like to flip the default behavior such that we no longer do doctype sniffing and validate them against the HTML4 or XHTML1 schema but instead just validate them as HTML5 (i.e., as html5.validator.nu does)

[04:02:44.0000] <hsivonen>
MikeSmith: WFM

[04:06:54.0000] <MikeSmith>
hsivonen: Ok so my next question would be, as far as the UI, I don't think we need an option for "Do doctype sniffing for text/html" (or however it might be worded). But if you think we need one I can add it.a

[04:12:28.0000] <hsivonen>
MikeSmith: you mean getting rid of Preset: None and making Preset: default to HTML5?

[04:19:29.0000] <zcorpan>
hsivonen: not at hand, so possibly i'm making it up, but i could try to dig a bit

[04:22:40.0000] <MikeSmith>
hsivonen: no I just mean not adding any new option in the UI to let users revert to the old (currently existing) doctype-sniffing behavior (after we remove it)

[04:23:48.0000] <MikeSmith>
hsivonen: so users would lose the option to even opt into the doctype sniffing if they wanted it

[04:27:39.0000] <MikeSmith>
darobin: the studios should put Foliot on retainer

[04:28:39.0000] <darobin>
MikeSmith: have you seen Promised Land (that flick about fracking with Matt Damon)?

[04:28:52.0000] <darobin>
because I reckon the studios might just have Fred Andrews on retainer

[04:31:15.0000] <MikeSmith>
I think it's the otehr way around, that the EFF is paying Foliot to make the pro-EME argument look as absurd as possible. Kind of like, Man, If this is guy is p

[04:31:40.0000] <MikeSmith>
*if this guys is for it, it must really be a bad idea

[04:34:11.0000] <MikeSmith>
and as far as http://wiki.whatwg.org/wiki/Internet_Encrypted_Media_Extensions, is it crazy or completely wrong?

[04:34:19.0000] <MikeSmith>
I'm asking

[04:34:56.0000] <MikeSmith>
I mean I looked through it and on the face of it at least nothing there seems whacko

[04:36:57.0000] <MikeSmith>
I assume it's in the spirit of being a proposal in response to the rhetoric about "We can't discuss alternatives to EME unless we have actual proposals"

[05:06:41.0000] <zcorpan>
hsivonen: i only find http://lists.w3.org/Archives/Public/public-html/2009Mar/0581.html (see the end of it)

[05:07:08.0000] <zcorpan>
hsivonen: it was brought to my attention that svg2 also has meshGradient

[06:52:16.0000] <hsivonen>
MikeSmith: seems fine not to be able to opt into doctype sniffing

[06:53:35.0000] <MikeSmith>
hsivonen: ok cool

[06:55:16.0000] <MikeSmith>
hsivonen: the one case I can think of it breaking is if somebody's using the Web service API

[06:56:25.0000] <hsivonen>
yeah, but we can't freeze everything for that

[06:56:35.0000] <MikeSmith>
agree eyah

[06:57:05.0000] <MikeSmith>
but I guess we could add a request parameter

[06:57:32.0000] <MikeSmith>
that they'd need to specify if they wanted the old behavior

[06:57:59.0000] <MikeSmith>
that seems pretty low-cost

[06:58:04.0000] <hsivonen>
yes

[06:58:08.0000] <MikeSmith>
OK

[06:58:15.0000] <MikeSmith>
that's what I'll do then

[06:59:32.0000] <MikeSmith>
/me wanted to ask zcorpan if he had any concerns about this plan but I guess he's away right now

[07:09:30.0000] <zcorpan>
MikeSmith: what was the plan?

[07:11:16.0000] <zcorpan>
MikeSmith: no sniffing except for opt-in in web service api?

[07:14:46.0000] <zcorpan>
MikeSmith: is the plan to remove the option to sniff in the web service api later? if yes why not do it now?

[07:39:19.0000] <SimonSapin>
hsivonen: I picked 1024 from the HTML spec and Gecko code, and to not be tied too much to a set of supported encodings. Do you think it helps to reduce that number? How much? I think I used 100 bytes in tinycss2 and rust-cssparser

[07:39:47.0000] <SimonSapin>
zcorpan: what do you think of moving http://dev.w3.org/csswg/css-syntax/#environment-encoding-xml into CSSOM?

[07:39:58.0000] <SimonSapin>
into http://dev.w3.org/csswg/cssom/#requirements-on-user-agents-implementing-the-xml-stylesheet-processing-instruction actually

[07:40:15.0000] <zcorpan>
SimonSapin: wfm

[07:40:47.0000] <SimonSapin>
zcorpan: I’d do it, but I failed to make Anolis work for CSSOM :)

[07:41:06.0000] <zcorpan>
SimonSapin: i'll get around to it

[07:41:38.0000] <Ms2ger>
Does cssom still use the... interesting preprocessor?

[07:41:58.0000] <TabAtkins>
Yes.

[07:42:01.0000] <TabAtkins>
So far.

[07:42:18.0000] <TabAtkins>
zcorpan has said he wants to switch to Bikeshed. I think I just need to offer more forcefully to migrate him myself.

[08:12:05.0000] <jgraham>
Is CSS Serialization for getComputedStyle actualy defined now?

[08:13:03.0000] <annevk-cloud>
zcorpan: it trims whitespace cause that is what is needed in a ton of contexts

[08:13:50.0000] <annevk-cloud>
I can see an argument for not doing it there though, had not really considered that

[08:42:35.0000] <astearns>
jgraham: AFAICT no, at least not for interesting cases like multi-component values with optional parts

[08:43:33.0000] <SimonSapin>
browsers apparently do trim whitespace in @charset

[08:50:48.0000] <jgraham>
I don't really care about interesting edge cases

[08:51:08.0000] <jgraham>
I care very specifically about whether https://critic.hoppipolla.co.uk/585e8a45?review=447 is valid

[08:51:20.0000] <jgraham>
(actually I *do* care about those edge cases)

[08:51:27.0000] <jgraham>
(but not so much right now)

[08:51:45.0000] <jgraham>
(the failure to standardise this stuff is tragi-comic)

[08:54:59.0000] <Ms2ger>
Relative lengths: the <number> component serialized as per <number> followed by the unit in its canonical form as defined in its respective specification.

[09:03:13.0000] <jgraham>
OK, so that test is good then?

[09:08:12.0000] <TabAtkins>
Yeah.

[09:15:28.0000] <Ms2ger>
I dunnop

[09:15:30.0000] <Ms2ger>
dunno*

[09:21:07.0000] <gsnedders>
Huh. Understanding all possible transitions in the tree constructor is bloody hard.

[09:23:30.0000] <gsnedders>
The tree construction dispatcher makes it very non-obvious what's possible

[09:23:42.0000] <gsnedders>
As does resetting the insertion mode.

[09:29:25.0000] <dglazkov>
good morning, Whatwg!

[09:31:07.0000] <Ms2ger>
Hi dglazkov!

[09:38:22.0000] <jgraham>
dglazkov: Look I can beat Ms2ger! Lots of new PRs just waiting for your review!

[09:38:48.0000] <dglazkov>
jgraham: yay?

[09:38:56.0000] <jgraham>
https://critic.hoppipolla.co.uk/r/670 and https://critic.hoppipolla.co.uk/r/668

[09:39:36.0000] <dglazkov>
today's chances looking slim. Gardening Blink.

[09:40:06.0000] <jgraham>
Did someone replae dglazkov with a magic eightball?

[09:42:19.0000] <Ms2ger>
Signs point to yes.

[09:46:34.0000] <dglazkov>
actually, I need to get hayato and morrita on to critic. They are the ones who should be looking at Shadow DOM and Imports tests, respectively.

[09:46:45.0000] <dglazkov>
and dominicc at Custom Elements

[09:46:51.0000] <dglazkov>
/me delegates

[09:48:53.0000] <jgraham>
dglazkov: Replacing yourself with three people sounds like a win

[09:49:10.0000] <jgraham>
Especially if they join IRC so we can nag them too ;)

[09:51:45.0000] <Ms2ger>
Nagging sounds good

[10:04:33.0000] <annevk>
heycam: you around?

[10:04:51.0000] <heycam>
annevk, yes

[10:04:51.0000] <annevk>
heycam: http://xhr.spec.whatwg.org/#interface-formdata

[10:04:56.0000] <annevk>
heycam: [Constructor(optional HTMLFormElement form)]

[10:05:08.0000] <annevk>
heycam: are you going to define what happens when HTMLFormElement is not part of the global?

[10:05:48.0000] <heycam>
annevk, for now, probably not; the conversion rules will just never consider any object passed in to be a value of the right type

[10:05:51.0000] <heycam>
since you can't get at one

[10:06:13.0000] <heycam>
look at all those [EnsureUTF16]s

[10:06:21.0000] <annevk>
heycam: except if you pass undefined since that'll mean missing?

[10:06:30.0000] <heycam>
annevk, sure

[10:06:39.0000] <annevk>
heycam: yeah you need to come up with a consistent story for EnsureUTF16 and ByteString :-)

[10:06:45.0000] <heycam>
I know

[10:06:55.0000] <annevk>
heycam: okay, sounds good

[10:11:57.0000] <MikeSmith>
grr zcorpan away again

[10:13:40.0000] <Ms2ger>
That damn zcorpan, being at home with his family

[10:21:24.0000] <bterlson>
j #temporaldeadzone

[10:34:27.0000] <annevk>
heycam: are callbacks and enmums automatically available everywhere?

[10:34:39.0000] <heycam>
annevk, yes

[10:34:52.0000] <heycam>
annevk, you mean in all globals? or all specs?

[10:34:54.0000] <heycam>
either way, yes

[10:34:59.0000] <annevk>
yes

[10:36:44.0000] <Hixie>
enums aren't detectable in a global, right?

[10:36:46.0000] <Hixie>
i mean, they're just strings

[10:36:56.0000] <heycam>
right

[11:11:04.0000] <annevk>
MikeSmith: https://twitter.com/sideshowbarker/status/428240986465005568 <3

[13:13:44.0000] <marcosc>
/me wonders how MikeSmith just gets better looking year after year .... 

[13:14:46.0000] <marcosc>
must be the drugs, booze, and party animal lifestyle.

[13:40:54.0000] <Hixie>
any IE-capable users around?

[13:40:58.0000] <Hixie>
http://software.hixie.ch/utilities/js/live-dom-viewer/?saved=2780

[14:04:26.0000] <annevk>
So I think I just learned custom elements invented nanotasks

[14:06:10.0000] <TabAtkins>
?!?

[14:06:15.0000] <annevk>
http://w3c.github.io/webcomponents/spec/custom/#enqueuing-and-invoking-callbacks

[14:06:45.0000] <annevk>
"When transitioning back from the user agent code to script, pop the element queue from the processing stack and invoke callbacks in that queue."

[14:07:02.0000] <annevk>
That should really be discussed in the context of TC39 I think

[14:07:28.0000] <Hixie>
what does that even mean, exactly?

[14:07:48.0000] <Hixie>
to do something similar in HTML we needed a bunch of WebIDL hooks

[14:07:53.0000] <annevk>
I think it means that x.do(); /* nanotask */ x.doElse();

[14:08:22.0000] <Hixie>
setTimeout(window.open, 0, ...); does this happen when the timeout fires at all?

[14:09:09.0000] <annevk>
Well that is a different problem I think

[14:13:55.0000] <Hixie>
ah

[14:14:30.0000] <Hixie>
how about dispatchEvent(), does it "transition back from user agent code to script"? or vice versa? or both?

[14:24:02.0000] <Domenic_>
Hmm those nanotasks look bad

[14:35:37.0000] <TabAtkins>
That's not what it means.  It's meant to be referring to microtask checkpoints.

[14:35:51.0000] <TabAtkins>
I'm almost certain; if I'm wrong, we shoudl complain harder.

[14:37:28.0000] <annevk>
I'm going to raise it on the list in a bit

[14:39:07.0000] <gsnedders>
/me wonders if we have interop on what <script>document.write("uD800uDC80");</script> does.

[14:39:20.0000] <gsnedders>
Because having that actually insert U+10080 would be so much nicer.

[14:44:09.0000] <Hixie>
so... why did we not make </caption> optional?

[15:03:33.0000] <dglazkov>
these are neither nanotasks, nor microtask checkpoints

[15:03:55.0000] <dglazkov>
they are simply an auto-release pool-like barrier between UA code and user code

[15:04:38.0000] <annevk>
dglazkov: given mutation events you'll have to define that a lot better

[15:04:53.0000] <Hixie>
so if you call an array's "sort" method with a user-code function that manipulates the DOM, do they run between each call to the sort function?

[15:04:57.0000] <Hixie>
sorter function, rather?

[15:05:58.0000] <dglazkov>
theoretically yes, but in practice no, because sort function itself is incapable of introducing the relevant DOM changes

[15:06:10.0000] <Hixie>
why not?

[15:06:26.0000] <dglazkov>
how? :)

[15:06:29.0000] <Hixie>
the sort function can do anything, even opening new browsing contexts and creating new documents

[15:06:33.0000] <Hixie>
it's just user code

[15:06:50.0000] <Hixie>
array.sort(function (a, b) { ...do whatever you want... });

[15:06:54.0000] <dglazkov>
by sort function I meant Array.sort

[15:07:00.0000] <annevk>
Hixie did too

[15:07:16.0000] <dglazkov>
Array.sort in itself does not do any dom changes.

[15:07:17.0000] <annevk>
oh I see

[15:07:39.0000] <Hixie>
even if you apply it to an Element? it's a generic function, no?

[15:07:42.0000] <annevk>
dglazkov: so what you're saying is that you are monkey patching methods and properties that do changes to the DOM

[15:07:54.0000] <annevk>
dglazkov: to process your nanotasks or whatever you want to call them

[15:07:59.0000] <annevk>
dglazkov: without defining that in detail

[15:08:17.0000] <dglazkov>
in practice, there are actually only a few methods need that. See CustomElementCallbacks tag on the Blink idls: https://code.google.com/p/chromium/codesearch#chromium/src/third_party/WebKit/Source/core/dom/Document.idl&q=Document.idl&sq=package:chromium&type=cs

[15:08:50.0000] <Hixie>
surely if you apply JS Array.sort() to a proxy object whose user-specified internal methods ([[Get]], etc) manipulate the DOM...

[15:09:38.0000] <gsnedders>
You don't even need proxies. ES5's getters/setters are enough even with the default comparator

[15:10:08.0000] <dglazkov>
Hixie: it's not at all about what the proxy object does. It's what the Array.sort itself does internally. If it's applied to another object, that object will have the barriers around the things that trigger changes.

[15:10:18.0000] <Hixie>
ah

[15:10:37.0000] <Hixie>
sounds like it'd be better to define it in terms of those barriers then

[15:10:51.0000] <Hixie>
rather than all user->ua code transitions

[15:10:52.0000] <dglazkov>
I was actually thinking of moving this barrier thing into a separate abstraction. It's very primitively defined in the custom elements spec

[15:11:00.0000] <dglazkov>
yup

[15:11:17.0000] <annevk>
Yeah, you want to just define this in the relevant methods I think

[15:11:22.0000] <dglazkov>
because all rendering engines actually have these types of things.

[15:11:39.0000] <annevk>
We do have it, but not exposed to web content

[15:11:59.0000] <annevk>
And the way it works in Gecko is similar to mutation events, which we just tried to remove

[15:12:01.0000] <dglazkov>
right. And I avoided it as an exposed API in custom elements

[15:12:16.0000] <annevk>
Well these callbacks are certainly exposed

[15:12:26.0000] <dglazkov>
annevk: it's different from mutation events, because the callbacks are actually only invoked at a safe point

[15:12:34.0000] <dglazkov>
that's the whole point of the barrier

[15:12:49.0000] <annevk>
Well, you're saying they are the same as what engines have, but you saying that means they are not

[15:13:13.0000] <annevk>
E.g. appendChild(node) will remove node from its parent first and then run adopt; we'd run code after the removal

[15:13:20.0000] <annevk>
That would be problematic

[15:13:22.0000] <dglazkov>
we

[15:13:31.0000] <annevk>
I meant Gecko there

[15:13:33.0000] <dglazkov>
will run the code just before appendChild method returns

[15:13:50.0000] <dglazkov>
no problems :)

[15:14:04.0000] <annevk>
Well the way this is defined is problems imo

[15:14:20.0000] <annevk>
We should just patch the methods this affects to make it way more transparent

[15:14:52.0000] <dglazkov>
annevk: that's not necessarily the best strategy. Every time you add a new DOM API, you'd have to patch up the spec.

[15:15:28.0000] <dglazkov>
annevk: the easiest thing to do is to say -- do this for all UA code and leave UA vendors opportunities to optimize when it's certain that the callbacks won't be queued.

[15:15:55.0000] <annevk>
Not if we move to a world where more is self-hosted

[15:15:59.0000] <annevk>
And the lines become blurry

[15:16:15.0000] <dglazkov>
sure. Then we will need this abstraction as a separate API

[15:16:24.0000] <dglazkov>
it's not like the current solution closes this path

[15:16:26.0000] <annevk>
Also having to know that a callback can run at the end of a method and not having it defined there is a pretty bad way to write a specification imo

[15:17:31.0000] <annevk>
You have effectively changed a large set of the default library methods, without telling the people who define those methods

[15:17:52.0000] <dglazkov>
how so?

[15:18:22.0000] <dglazkov>
what's a default library?

[15:20:29.0000] <dglazkov>
as I said before, the alternative is to create a strict dependency on all possible things that could cause DOM changes. I don't think that's much better either.

[15:20:46.0000] <Hixie>
why is that not better?

[15:20:59.0000] <Hixie>
i mean, ideally, this would just be in the DOM spec, no? presumably that's what we're going to do eventually

[15:21:00.0000] <dglazkov>
because that's not an easily bound set

[15:21:17.0000] <dglazkov>
what about CSSOM, Editing, Selection, etc?

[15:21:27.0000] <Hixie>
what about them?

[15:21:38.0000] <Hixie>
wouldn't they be defined in terms of the DOM algorithms?

[15:21:49.0000] <dglazkov>
why would that matter?

[15:22:12.0000] <Hixie>
well if the logic is in the DOM algorithms, that would just trigger them, i guess

[15:22:25.0000] <Hixie>
i don't really understand what we're trying to do here, so my advice may not be useful

[15:22:26.0000] <dglazkov>
what matters is that anytime anyone decides to invent a supplemental IDL, I'd have to be on the lookout for that spec and evaluate whether their methods need to be explicitly mentioned in the spec

[15:23:10.0000] <Hixie>
well, they have to be on the lookout for whether they need to worry about the DOM spec, rather, but yeah

[15:23:19.0000] <Hixie>
we all have to make sure we're aware of each other's work

[15:24:42.0000] <dglazkov>
Hixie: there maybe something to that. The spec has a well-defined set of DOM manipulations that causes callbacks to enqueue

[15:24:57.0000] <Hixie>
all DOM manipulations go through the DOM spec

[15:25:01.0000] <dglazkov>
yup

[15:25:14.0000] <dglazkov>
the only issue is when the callbacks are invoked.

[15:25:19.0000] <Hixie>
so if you monkeypatch the DOM spec, any other new spec that does DOM manipulations is supported for free, right?

[15:25:37.0000] <Hixie>
wait, you're calling user code here?

[15:25:38.0000] <dglazkov>
the queueing, right. I already did that

[15:25:48.0000] <Hixie>
in the middle of other user code?

[15:25:53.0000] <dglazkov>
no

[15:25:57.0000] <annevk>
dglazkov: you need to be on the lookout anyway, because you implemented this with an IDL extension

[15:26:06.0000] <Hixie>
i guess i don't understand the issue here

[15:26:11.0000] <dglazkov>
me neither :)

[15:26:12.0000] <annevk>
dglazkov: it's better if we centralize that lookout, than do it on a per engine level

[15:27:06.0000] <annevk>
Hixie: the idea is to call user code just before you return from certain method calls

[15:27:22.0000] <annevk>
dglazkov: bz pointed out that you pass the mutation events problem on to JS implemented libraries

[15:27:25.0000] <Hixie>
annevk: dglazkov just said that it wasn't that

[15:28:30.0000] <dglazkov>
annevk: I guess I want to understand what is the "mutation events problem", then. It doesn't fit my understanding of what I thought it was.

[15:28:35.0000] <annevk>
dglazkov: e.g. if you appendChild() a node and then its leftView callback calls remove child and then its enteredView callback will be confused

[15:28:50.0000] <dglazkov>
annevk: no, it's not

[15:28:52.0000] <dglazkov>
please read the spec

[15:29:09.0000] <annevk>
dglazkov: from the perspective of the JS library

[15:29:10.0000] <dglazkov>
the whole notion of the queues is to ensure the consistent sequence of callbacks

[15:29:13.0000] <annevk>
dglazkov: not the browser

[15:29:51.0000] <dglazkov>
annevk: yes, that's exactly what I am talking about, too

[15:29:54.0000] <Hixie>
why aren't we just using the mutation observers here?

[15:29:59.0000] <Hixie>
it sounds rather similar...

[15:30:08.0000] <dglazkov>
mutation observers are too late

[15:30:13.0000] <Hixie>
too late for what?

[15:30:47.0000] <dglazkov>
for developers: var foobar= document.createElement("foo-bar"); foobar.doStuff();

[15:31:09.0000] <dglazkov>
if you use mutation observers, doStuff will be operating on an uninitialized object.

[15:31:21.0000] <dglazkov>
because createdCallback will be called at a microtask checkpoint

[15:31:47.0000] <Hixie>
sure, when you _create_ an element that's bound you need to run its constructor

[15:32:05.0000] <dglazkov>
annevk: I am happy to explain the element/callback queues and how they help the JS developer keep a consistent view of the world.

[15:33:11.0000] <dglazkov>
annevk: the key here is that as long as JS developer listens to callbacks, their sequence is always correct. There is no inconsistent state.

[15:33:41.0000] <Hixie>
well an element is only created once, right?

[15:33:51.0000] <Hixie>
why is there a queue?

[15:33:58.0000] <Hixie>
surely it should just be synchronous with element creation

[15:34:57.0000] <annevk>
dglazkov: so I have a custom element X that has all the lifecycle callbacks

[15:35:01.0000] <dglazkov>
Hixie: expand this example to when I innerHTML "<foo-bar>" and then try to query for it with querySelector

[15:35:15.0000] <Hixie>
dglazkov: how is that different?

[15:35:19.0000] <annevk>
dglazkov: I have two globals each with a document (A, B), X is part of B

[15:35:39.0000] <annevk>
dglazkov: I then do appendChild(X) in A

[15:35:59.0000] <dglazkov>
what's two globals? can you explain a bit?

[15:36:34.0000] <annevk>
dglazkov: A is a document and B is <iframe>.contentDocument nested in A

[15:36:41.0000] <dglazkov>
okay

[15:37:35.0000] <annevk>
dglazkov: I was assuming the callbacks leftView and enteredView would invoke at that point

[15:38:05.0000] <dglazkov>
it depends on where A is registered

[15:38:23.0000] <dglazkov>
where X is registered, sorry :)

[15:38:43.0000] <annevk>
In B

[15:40:08.0000] <annevk>
If it's simpler we could first consider A and B being in the same global

[15:41:32.0000] <dglazkov>
sure, let's do it

[15:43:06.0000] <annevk>
Okay, I figured you would take it from here, but am I correct that leftView and enteredView would be called before appendChild(X) returns?

[15:43:13.0000] <annevk>
In that order?

[15:43:31.0000] <annevk>
/me has to go for a bit in 10 minutes unfortunately

[15:44:13.0000] <annevk>
And then the question is if the leftView callback removes X again, how will enteredView not be confused? Will it be removed from the callback queue?

[15:44:31.0000] <annevk>
dglazkov: ^

[15:46:52.0000] <dglazkov>
it won't be confused, because there is an element queue, which drains all callbacks per element at the time of invocation. This ensures a consistent sequence of callbacks.

[15:48:17.0000] <dglazkov>
so yes, just before appendChild(X) returns, X will see a sequence of callbacks. If a callback code itself enqueues another callback, that callback goes to the end of the callback queue for this element

[15:48:36.0000] <dglazkov>
if you'd like, we can VC/Skype/whatevs

[15:49:10.0000] <Hixie>
/me encourages the use of archived communication methods so that other people can learn from the discussion

[15:51:12.0000] <dglazkov>
we can do hangout on air and post a youtube video of me struggling with a felt marker

[15:52:05.0000] <gsnedders>
+1 for this if it involves making fun of dglazkov

[15:54:57.0000] <Hixie>
well a hangout on air isn't as convenient as an irc conversation, but it's a step up from a private vc :-)

[15:55:05.0000] <annevk>
dglazkov: I'll get back to you on this I guess

[15:55:12.0000] <annevk>
dglazkov: I have to do something now

[15:55:20.0000] <dglazkov>
annevk: no worries. I have to run, too


2014-01-29
[16:14:39.0000] <aklein>
TabAtkins: you about?

[16:14:57.0000] <aklein>
TabAtkins: I've got a CSS parsing question you might know the answer to (or know if there's no answer)

[16:15:04.0000] <TabAtkins>
In a bit.

[16:16:22.0000] <SimonSapin>
aklein: just ask, and wait around a bit as someone may answer later

[16:16:34.0000] <TabAtkins>
Also that, yes.

[16:19:03.0000] <gsnedders>
/me wonders if he can construct any reasonable way to get profile number of calls per JS function in his browser

[16:19:41.0000] <gsnedders>
Probably nothing short of hacking on the browser, probably without JIT for simplicity.

[16:24:53.0000] <aklein>
the question is about url-resolution for url() CSS values

[16:25:22.0000] <aklein>
and about when it occurs, in various cases (<style>, <link rel=stylesheet>, <div style="...">)

[16:25:38.0000] <aklein>
that is, when does it occur (and where is that written down in a spec?)

[16:27:30.0000] <aklein>
(Blink and WebKit seem to do very eager url resolution, while Gecko is lazier)

[16:28:09.0000] <Hixie>
gsnedders: you can just instrument those methods by replacing them in script, no?

[16:28:38.0000] <Hixie>
aklein: the HTML spec says for <style> that you should do it ASAP, so that if the base URL changes later, it doesn't affect the <style>'s URLs.

[16:28:42.0000] <gsnedders>
Hixie: All functions, including those defined in JS.

[16:28:58.0000] <Hixie>
gsnedders: well, those defined in JS you can find from any profiler, probably

[16:29:15.0000] <Hixie>
most browsers have those these days, i think

[16:29:35.0000] <gsnedders>
Not sure how well they cope with short-lived functions, though

[16:29:41.0000] <Hixie>
"short lived"?

[16:29:49.0000] <Hixie>
oh you mean you don't want a sample, you want a strict count?

[16:30:01.0000] <gsnedders>
Yeah.

[16:30:16.0000] <Hixie>
yeah short of instrumenting the code explicitly (which should be easy enough) i dunno how you'd do that

[16:30:23.0000] <Hixie>
(the js code, i mean)

[16:30:50.0000] <gsnedders>
Like, a set of values N_i = x where i is the number of calls the function has and x is the number of functions with that number of calls.

[16:32:17.0000] <gsnedders>
Also not clear if I want things to be like V8's FunctionCode class (i.e., a FunctionExpression/FunctionDeclaration in the script) or Function class (i.e., a Function object).

[16:32:47.0000] <Hixie>
what's your actual goal?

[16:35:25.0000] <gsnedders>
Hypothesis: most functions are called zero times, then a lot are called one time (exactly); the remainder is roughly linear, with N_i going down as i increases.

[16:36:49.0000] <Hixie>
most of which functions? any function on any site?

[16:36:57.0000] <Hixie>
in what situations? page load? deep interaction?

[16:37:11.0000] <gsnedders>
"In general". Per page load, obviously.

[16:37:50.0000] <Hixie>
well i mean the functions that are handlers for 'onclick' handlers presumbaly only get called when you click

[16:37:51.0000] <gsnedders>
All functions that the JS VM sees.

[16:38:08.0000] <Hixie>
so is the test protocol "click everything once"?

[16:38:18.0000] <Hixie>
"use the application like a noob for 5 minutes"?

[16:38:54.0000] <gsnedders>
I mean, really want everything from something like "load FB, notice nothing of interest, close immediately" to "load FB, spend the next four hours talking to people on FB chat".

[16:39:15.0000] <Hixie>
i would imagine they'd have rather different profiles

[16:39:56.0000] <gsnedders>
I dunno. It makes me wonder if it's going to be a bell curve or something.

[16:40:18.0000] <gsnedders>
But, yeah, kinda tempted to just instrument browser and use it for a few weeks. Probably get useful data.

[16:40:36.0000] <gsnedders>
Though "how gsnedders uses his browser" isn't necessarily representative. :)

[16:43:33.0000] <gsnedders>
Ultimately I'm interested in the probability of the function being called a certain number of times.

[16:46:33.0000] <aklein>
Hixie: can you give me a link for that behavior, I'm having trouble finding it; I wonder if some of it's in the parts delegated to the CSS OM spec

[16:46:47.0000] <aklein>
(e.g., to "create a css style sheet")

[16:46:56.0000] <Hixie>
aklein: it's in the <style> section, i think... let me check

[16:49:03.0000] <Hixie>
aklein: ah, looks like i commented it out, expecting it to be handled by SimonSapin's CSS parsing spec

[16:49:21.0000] <Hixie>
aklein: (search for "found by the styling language's processor" in the spec source)

[16:50:44.0000] <aklein>
Hixie: heh, yes, that's very clear

[16:52:39.0000] <SimonSapin>
aklein: http://dev.w3.org/csswg/css-values/#urls says " Relative URIs are resolved to full URIs using a base URI. For CSS style sheets, the base URI is that of the style sheet, not that of the source document."

[16:52:50.0000] <aklein>
Hixie: and it looks like style attributes defer to http://dev.w3.org/csswg/css-style-attr/, which also says that urls are resolved when the attribute is parsed

[16:52:54.0000] <SimonSapin>
but I’m not sure what your question is…

[16:52:57.0000] <Hixie>
SimonSapin: that doesn't help for <style> style sheets

[16:53:12.0000] <Hixie>
aklein: yeah, but when is it parsed?

[16:53:31.0000] <Hixie>
aklein: imho it should be parsed very eagerly, fwiw

[16:53:45.0000] <aklein>
Hixie: "In user agents that support CSS, the attribute's value must be parsed when the attribute is added or has its value changed"

[16:53:51.0000] <aklein>
so the spec says what you want already

[16:53:54.0000] <aklein>
which is good :)

[16:53:57.0000] <Hixie>
k, excellent

[16:54:02.0000] <SimonSapin>
Hixie: I though it obvious that the based URL was the same as for any <a href> in the document, but indeed it’s not specified

[16:54:23.0000] <Hixie>
SimonSapin: the problem is that the base url in html docs can change dynamically

[16:54:35.0000] <aklein>
Hixie: fwiw, Firefox seems to re-resolve URLs in style attributes when the hosting element switches documents

[16:54:43.0000] <aklein>
sounds like you think that's a Firefox bug?

[16:54:47.0000] <Hixie>
SimonSapin: so is it the base url when the <style> element is created? when it's parsed? later?

[16:55:11.0000] <Hixie>
aklein: there was some chatter in the bug you filed on this abotu imgs talking about whether we should do that on insertion or on adoption

[16:55:16.0000] <aklein>
SimonSapin: thanks for the link to that spec, I wasn't sure of the name

[16:55:18.0000] <SimonSapin>
good point. Looks like a spec bug

[16:55:24.0000] <Hixie>
aklein: i don't recall the conclusion, but obviously we should be consistent

[16:55:38.0000] <Hixie>
aklein: (assuming there's no compat constraints)

[16:55:46.0000] <aklein>
Hixie: I'll dig up the bug again, I didn't recall whether that had mentioned style

[16:55:59.0000] <Hixie>
i don't htink it mentioned style explicitly

[16:56:00.0000] <SimonSapin>
Hixie: what do you think it should be?

[16:56:07.0000] <Hixie>
aklein: i'm just saying that if possible, we should be consistent

[16:56:24.0000] <Hixie>
SimonSapin: what do browsers do?

[16:56:28.0000] <aklein>
Hixie: seems reasonable. would you say that <style> should also re-resolve if it switches documents?

[16:56:32.0000] <Hixie>
SimonSapin: i imagine they just use the current one at parse time

[16:56:50.0000] <aklein>
it's a little different in that case...

[16:56:54.0000] <aklein>
because it's non-local

[16:57:00.0000] <Hixie>
aklein: i think we should be consistent throughout. but for <style> i dunno if i'd say "reparse" or "reresolve"

[16:57:09.0000] <SimonSapin>
TabAtkins: ^

[16:57:11.0000] <aklein>
eww

[16:57:12.0000] <Hixie>
aklein: do we reparse if you insert/remove/insert in the same doc?

[16:57:37.0000] <SimonSapin>
no need to reparse even if we want to reresolve

[16:57:45.0000] <aklein>
Hixie: is parsing observable?

[16:57:55.0000] <Hixie>
aklein: it is if you changed the OM

[16:58:03.0000] <aklein>
Hixie: right, if you hold onto the OM...whee

[16:58:08.0000] <aklein>
hmm

[16:58:15.0000] <aklein>
requiring reparsing seems bad

[16:58:35.0000] <Hixie>
sure, but requirin that you hold on to the OM when the <style> is taken out of a doc might be bad too

[16:58:41.0000] <Hixie>
so i could argue this either way

[16:58:44.0000] <aklein>
the resolving difference between Firefox and Blink is visible via the OM, too, which is unfortunate

[16:59:28.0000] <aklein>
Firefox says the value is 'url("relative/url.png")' while Blink says it's 'url("http://foo.bar/relative/url.png")'

[16:59:54.0000] <aklein>
maybe that just means we have more webcompat leeway?

[17:01:47.0000] <aklein>
SimonSapin: looks like CSS Values and Units doesn't speak to the CSS OM?

[17:03:01.0000] <SimonSapin>
aklein: not directly, but it talks about computed value

[17:03:21.0000] <SimonSapin>
so with different API you may get specified or computed values which may differ

[17:04:03.0000] <SimonSapin>
"When a <url> appears in the computed value of a property, it is resolved to an absolute URL"

[17:10:03.0000] <TabAtkins>
OMG DONE MINUTING

[17:10:12.0000] <TabAtkins>
Okay, so anyway, I talked about this with Anne.

[17:10:22.0000] <TabAtkins>
URL canonicalization (turning to absolute) needs to happen during parsing.

[17:10:36.0000] <TabAtkins>
Absolutizing is, in fact, part of URL parsing itself.

[17:11:00.0000] <aklein>
TabAtkins: so is the relative URL dropped on the floor?

[17:11:07.0000] <TabAtkins>
Moving documents around to new base URLs need to be dealt with.

[17:11:19.0000] <aklein>
will let you finish :)

[17:11:26.0000] <TabAtkins>
aklein: Yes. You enter "url(/foo)", you immediately get back "url(http://example.com/foo)".

[17:11:41.0000] <TabAtkins>
There's no way to observe it being relative.

[17:11:56.0000] <TabAtkins>
Besides, maybe, .cssText, if we keep that as literal stylesheet bytes.

[17:12:03.0000] <TabAtkins>
That's pre-parsing then.

[17:12:43.0000] <aklein>
it sounds like you're in the "you have to re-parse if you want to re-resolve" camp

[17:13:14.0000] <TabAtkins>
Not... necessarily.  Parsing *the url itself* requires absolutizing; the two concepts are part and parcel.

[17:13:21.0000] <TabAtkins>
Parsing *the url() function* doesn't necessarily.

[17:13:31.0000] <SimonSapin>
TabAtkins: CSS parsing does not need to parse URLs immediately

[17:13:32.0000] <TabAtkins>
But we all do so.

[17:13:43.0000] <SimonSapin>
(maybe it should)

[17:13:48.0000] <TabAtkins>
But we can certainly keep around the unparsed url and absolutize it on demand.

[17:14:11.0000] <aklein>
TabAtkins: not sure who "we" is, note that I pointed out above that Firefox seems to only absolutize lazily

[17:14:25.0000] <TabAtkins>
But "on demand" should include "when you serialize a declared value", which is the lowest-level way to observe a CSS value short of grabbing network bytes.

[17:14:37.0000] <TabAtkins>
"we" there means the browser.

[17:14:57.0000] <aklein>
TabAtkins: in my testing they don't do that. div.style.backgroundImage returns 'urlI("relative/img.png")'

[17:15:04.0000] <aklein>
but with fewer l's

[17:16:40.0000] <TabAtkins>
We definitely absolutize early.

[17:17:08.0000] <aklein>
Blink and WebKit do, yes

[17:17:23.0000] <aklein>
but it's not true that "we all do so" (not at the moment, anyway)

[17:17:38.0000] <TabAtkins>
Okay, true.

[17:18:14.0000] <TabAtkins>
aklein: What's the context of your question?

[17:19:19.0000] <aklein>
TabAtkins: the specific case I'd like to fix is that <template><div style="background-image: url('foo/bar.png')"></div></template> is busted in Blink

[17:19:38.0000] <aklein>
it ends up as url()

[17:20:01.0000] <TabAtkins>
That's weird.  Because there's nothing to absolutize it against, so it just punts?

[17:20:08.0000] <aklein>
yeah

[17:20:24.0000] <aklein>
my reading of the CSS Values thingy suggests that perhaps the punting is the bug

[17:20:36.0000] <aklein>
and it should actually leave the relative URL there if it can't complete the URL

[17:20:36.0000] <TabAtkins>
The punting is definitely the bug.

[17:20:50.0000] <TabAtkins>
Are you talking about my blog post? Or the CSSOM Values spec?

[17:21:47.0000] <aklein>
TabAtkins: http://dev.w3.org/csswg/css-values/#urls

[17:22:16.0000] <aklein>
hmm, or maybe it was cssom, I don't see this now

[17:22:22.0000] <TabAtkins>
Don't read much into that. >_< I haven't written it well yet.

[17:22:24.0000] <TabAtkins>
Gonna fix.

[17:22:34.0000] <TabAtkins>
It's reffing an RFC, for example.

[17:22:39.0000] <TabAtkins>
Should be the URL spec.

[17:22:56.0000] <aklein>
hehe

[17:22:58.0000] <aklein>
ok

[17:23:13.0000] <SimonSapin>
TabAtkins: both provide "absolutize an URL", and it’s up to CSS when to call it

[17:23:37.0000] <aklein>
TabAtkins: but your considered opinion is that url() in a document with no base URL should do what?

[17:23:42.0000] <TabAtkins>
But hm, so far I'm planning that "declared value" http://dev.w3.org/csswg/css-cascade/#declared gives an absolute url.

[17:23:53.0000] <TabAtkins>
A document with no base URL is not something I've considered yet.

[17:24:04.0000] <TabAtkins>
Is the template document the only one so far?

[17:24:33.0000] <SimonSapin>
annevk-cloud says all documents have an URL, even if it’s one with a non-relative scheme that can not be used as a base

[17:25:04.0000] <TabAtkins>
I wonder what that means?

[17:25:15.0000] <TabAtkins>
What is the result of absolutizing something with a not-base URL?

[17:25:37.0000] <SimonSapin>
absolutizing can fail

[17:25:52.0000] <TabAtkins>
Hrm. Lemme go check his spec.

[17:26:05.0000] <aklein>
TabAtkins: document.implementation.createHTMLDocument('')

[17:26:08.0000] <SimonSapin>
data:text/html,<a href=foo>Test

[17:26:47.0000] <SimonSapin>
anyway, the result is the same as if you didn’t have a base

[17:28:57.0000] <TabAtkins>
Ah, and it looks like the result (at least in Chrome) is that the url is ""

[17:29:48.0000] <TabAtkins>
Problem is that the URL spec has no such concept as "relative URL".

[17:30:02.0000] <TabAtkins>
It's absolute, or it's nothing, or it's "a string that we haven't yet tried to parse".

[17:30:32.0000] <TabAtkins>
Problem with the concept of "just hang the relative url off of it", that is. Maybe not a problem with the URL spec.

[17:31:49.0000] <TabAtkins>
aklein: So it looks like Blink's current behavior of returning url() is correct.

[17:32:09.0000] <TabAtkins>
aklein: And there's no way for us to do anything else.

[17:32:25.0000] <TabAtkins>
aklein: Without inventing stuff.

[17:32:46.0000] <SimonSapin>
TabAtkins: possibly-relative URL == string from url() or href, etc

[17:32:51.0000] <SimonSapin>
absolute URL == parsed URL

[17:33:12.0000] <SimonSapin>
an object, which can be serialized back to a string

[17:33:33.0000] <TabAtkins>
Yeah.

[17:33:34.0000] <TabAtkins>
Hm.

[17:34:01.0000] <TabAtkins>
Maybe we can define serialization of URL as "serialization of the url, or else the unparsed string if it can't be parsed".

[17:34:14.0000] <TabAtkins>
That would also let us preserve nonsense urls that can't be parsed.

[17:34:56.0000] <SimonSapin>
I’d say specified values should be unparsed URL, as from the stylesheet

[17:35:22.0000] <SimonSapin>
for computed values serialize, but do we really need to preserve nonsense input?

[17:37:13.0000] <TabAtkins>
SimonSapin: I think we should return an absolute url if we can.

[17:37:18.0000] <TabAtkins>
No reason not to.

[17:37:34.0000] <TabAtkins>
But we shouldn't throw away info if we can't absolutize it yet.

[17:37:50.0000] <SimonSapin>
If absolutization (aka URL parsing) fails, we can’t

[17:38:04.0000] <SimonSapin>
the info is still available in the specified value

[17:38:12.0000] <TabAtkins>
Yes, that's what I'm saying.

[17:38:14.0000] <TabAtkins>
...I think.

[17:39:18.0000] <SimonSapin>
element.style is computed values, right?

[17:39:24.0000] <TabAtkins>
Nope, declared values.

[17:39:28.0000] <TabAtkins>
What you smokin', bro?

[17:39:38.0000] <TabAtkins>
.style is just access to the style='' stylesheet.

[17:41:09.0000] <TabAtkins>
I agree that a computed url() value should take a stand on non-absolutizable urls.

[17:41:21.0000] <TabAtkins>
Returning url(about:invalid).

[17:41:36.0000] <TabAtkins>
(As currently defined in V&U.)

[17:41:45.0000] <SimonSapin>
No interop :/ data:text/html,<body id=foo style="background:url(bar)"><script>document.write(document.getElementById('foo').style.backgroundImage)</script>

[17:43:36.0000] <TabAtkins>
Yeah, I know that BlinKit right now absolutizes right away. (And indicates an invalid url as "url()".)

[17:43:49.0000] <TabAtkins>
And FF does something different.

[17:46:22.0000] <TabAtkins>
aklein: So does something like what I said sound okay? I can restate it compactly, if you want.

[17:47:03.0000] <aklein>
TabAtkins: sorry, got pulled away, a compact suggestion would be great (reading scrollback now...)

[17:47:12.0000] <TabAtkins>
kk, coming:

[17:47:26.0000] <TabAtkins>
CSS parsing does not immediately absolutize a url.

[17:47:41.0000] <TabAtkins>
At declared-value time, we try to absolutize it.  If it can be absolutized, great.

[17:48:02.0000] <TabAtkins>
When serializing a declared value, if it's a URL, serialize that. Otherwise, serialize the string.

[17:48:12.0000] <SimonSapin>
declared, as in http://dev.w3.org/csswg/css-cascade/#declared ?

[17:48:25.0000] <TabAtkins>
At computed-value time, we *need* a valid url.  If it can't be absolutized, use the guaranteed-invalid url "about:invalid".

[17:48:30.0000] <TabAtkins>
SimonSapin: Yes.

[17:48:49.0000] <TabAtkins>
Right now we can only observe "declared", "computed", and "used" (in some cases).

[17:48:51.0000] <SimonSapin>
isn’t that as soon as parsing?

[17:49:21.0000] <TabAtkins>
Not... quite.  Or if you think it's simpler to consider it "as soon as parsing", then make the necessary edits to what I said.

[17:49:55.0000] <TabAtkins>
A <url> declared value contains either a URL or a string, depending on whether it can be absolutized or not.

[17:50:18.0000] <annevk_>
So what would the specified value be?

[17:50:55.0000] <annevk>
If the URL parser returns failure, using a URL that is about:invalid makes sense

[17:50:56.0000] <TabAtkins>
Not sure when we go from "string or URL" to "URL".  Sometime between declared and computed.  The exact time is currently unobservable.

[17:51:24.0000] <SimonSapin>
I don’t really want to have a thing that can be either

[17:51:29.0000] <SimonSapin>
(unless we have to for web compat)

[17:51:39.0000] <annevk>
When would you have a string?

[17:51:43.0000] <TabAtkins>
annevk: aklein gave an example where we don't want to lose information (in the form of returning "url(about:invalid)") when serialziing declared values.

[17:52:11.0000] <TabAtkins>
I still want to observe the given value even if the document doesn't have a base url.

[17:52:50.0000] <SimonSapin>
so, counter-proposal: declared/cascaded/specified value is a string as in the input, unparsed

[17:53:04.0000] <SimonSapin>
computed values is always a parsed URL, possibly about:invalid

[17:53:24.0000] <TabAtkins>
That's acceptable to me too, I guess.  Requires changing BlinKit.

[17:53:27.0000] <annevk>
You could preserve the specified value, but also have a parsed/declared value alongside that's a URL?

[17:53:45.0000] <TabAtkins>
annevk: You're mixing up terms. ^_^

[17:53:56.0000] <annevk>
The terms have changed :/

[17:53:58.0000] <TabAtkins>
declared -> cascaded -> specified -> computed

[17:54:28.0000] <TabAtkins>
annevk: We just moved what we call "the value that you pull directly from a stylesheet".  "specified" was overused for incompatible things.

[17:55:07.0000] <annevk>
Oh man. Specified in my head is "the value I wrote down"

[17:55:23.0000] <TabAtkins>
In the specs it's not. ^_^

[17:55:34.0000] <TabAtkins>
There's stuff mixed up with inherit/initial, and the cascade.

[17:56:05.0000] <TabAtkins>
I didn't want to throw away the term "specified", so I left it with one of the existing meanings.

[17:56:14.0000] <annevk>
So during parsing I think for URL values you want to preserve the value the author wrote down, but also run it through the URL parser.

[17:56:30.0000] <annevk>
So maybe declared needs to be a tuple

[17:56:40.0000] <TabAtkins>
Do we need that?

[17:57:12.0000] <TabAtkins>
Rather, why do we want a parsed URL during declared time?

[17:57:14.0000] <annevk>
You need to run it through the URL parser to not be tripped by changing base URLs in HTML documents

[17:57:26.0000] <annevk>
You want to keep the original value for <template>

[17:57:33.0000] <TabAtkins>
Elaborate on that first one?

[17:58:01.0000] <annevk>
<style> ... </style> <script> changeBaseURL() </script>

[17:58:40.0000] <annevk>
Hixie's example, basically

[17:59:40.0000] <TabAtkins>
Right, but what's the observable effect of resolving it in the declared value?

[18:00:03.0000] <TabAtkins>
I don't think the absolute url can be observed until computed-value time.

[18:00:08.0000] <TabAtkins>
Even through side-effects.

[18:02:02.0000] <annevk>
TabAtkins: do you want to require that we compute sync?

[18:02:04.0000] <aklein>
so after you guys figure that out, my next question is, does CSS provide some hook for DOM to call upon adoption to re-resolve URLs?

[18:02:27.0000] <annevk>
aklein: not at the moment

[18:02:37.0000] <aklein>
annevk: rather, should it?

[18:02:57.0000] <annevk>
aklein: we don't really have it on the HTML side either

[18:03:15.0000] <aklein>
annevk: no, though it seems we may end up with it (should go find that bug)

[18:03:27.0000] <aklein>
but I guess you don't necessarily need it to fix <template>

[18:03:31.0000] <TabAtkins>
annevk: What do you mean?  We can't observe the difference until we compute, and that happens at some undefined time based on style flushing.

[18:03:32.0000] <aklein>
as long as you clone or import

[18:03:54.0000] <annevk>
aklein: so for the baseURI bug we kind of came to the conclusion that unless things got declarative we don't need anything complicated for now

[18:04:35.0000] <annevk>
TabAtkins: if the script changes the base URL, isn't it observable at what point computation happens?

[18:05:54.0000] <TabAtkins>
Not really.  You can't observe except through computed values, and *that* triggers sync behavior.

[18:06:07.0000] <TabAtkins>
That is, calling getComputedStyle does sync work.

[18:06:10.0000] <annevk>
TabAtkins: yes

[18:06:44.0000] <annevk>
TabAtkins: <style> url("/x") </style> and then <script> getComputed(); changeBaseURL() </script> vs <script> changeBaseURL(); getComputed(); </script>

[18:06:47.0000] <annevk>
TabAtkins: they should do the same

[18:07:11.0000] <TabAtkins>
No, they're observably different.

[18:07:19.0000] <TabAtkins>
But now I need to go to dinner and will have to continue this later.

[18:07:22.0000] <annevk>
And that would be a bug

[18:07:31.0000] <annevk>
That's why URL parsing needs to happen during CSS parsing

[18:09:21.0000] <annevk>
I'm very happy the CSS WG is more deeply investigating lifecycle though of style sheets

[18:09:24.0000] <aklein>
annevk: the trouble in the current blink impl is that the original url is gone when instantiating the template, so it's not even possible to do the url resolution "by hand". so at the least it needs to be available somewhere

[18:09:42.0000] <annevk>
aklein: I argued for storing a tuple as the "declared value" above

[18:09:49.0000] <annevk>
aklein: the input and the parsed URL

[18:10:26.0000] <annevk>
aklein: .cssText could use the input, getComputed the latter

[18:11:10.0000] <aklein>
annevk: and style attribute serialization corresponds to .cssText? (my CSSOM knowledge is....developing)

[18:12:21.0000] <annevk>
aklein: serialization of a style attribute is .style.cssText

[18:12:34.0000] <annevk>
aklein: see http://dev.w3.org/csswg/cssom/#the-cssstyledeclaration-interface

[18:13:03.0000] <annevk>
aklein: and http://dev.w3.org/csswg/cssom/#elementcssinlinestyle

[18:13:33.0000] <aklein>
that's some fancy IDL

[18:13:40.0000] <aklein>
that sounds fine to me

[18:14:03.0000] <aklein>
(not least because it's a minimal change to Blink; I needn't hold a URL-resolver)

[18:14:29.0000] <aklein>
annevk: I'm completely with you on needing to resolve eagerly

[18:15:32.0000] <annevk>
A lot of legacy there in those APIs

[18:16:01.0000] <annevk>
And a lot of neglect in terms of maintenance

[18:16:16.0000] <annevk>
Better now because of zcorpan

[20:45:14.0000] <Domenic_>
where are we on nanotasks?

[20:48:11.0000] <MikeSmith>
oh we have nanotasks now?

[20:48:27.0000] <MikeSmith>
Domenic_: your mention is the first I've heard

[20:48:51.0000] <MikeSmith>
so I assume it must be something recently added

[20:48:58.0000] <Domenic_>
MikeSmith: scroll up :P. custom elements seems to have a nanotask queue used (a) inside microtask checkpoints; (b) when returnign control from C++ to script

[20:49:12.0000] <Domenic_>
(b) seems weird because i was pretty sure that was what the event loop was for

[20:49:24.0000] <MikeSmith>
oh custom elements..

[20:49:52.0000] <MikeSmith>
Domenic_: right

[20:50:34.0000] <Domenic_>
of course (a) is also weird because microtasks are already a queue so why have a queue inside a queue unless you really liked Inception and wanted to implement it in your specs I guess?

[20:50:55.0000] <MikeSmith>
well

[20:51:23.0000] <MikeSmith>
I reckon dglazkov is the only person here who knows

[20:51:58.0000] <MikeSmith>
/me wishes Hixie was reviewing the custom-elements spec more

[20:52:22.0000] <Domenic_>
yeah there was some explanation above but i couldn't understand it so thus my "where are we on nanotasks" query. annevk-cloud seemed to be following along pretty well, maybe he could translate.

[21:41:14.0000] <smaug____>
oh, nanotasks

[21:41:26.0000] <smaug____>
annevk-cloud, could you please explain to me tomorrow why we need such things

[21:47:37.0000] <zewt>
to pave the way towards picotasks, duh

[21:48:16.0000] <zewt>
no doubt followed by 2^(-n)tasks

[22:11:04.0000] <hsivonen>
SimonSapin: I think it makes sense to reduce the CSS @charset search buffer size, yes. How much depends mainly on whether the ban on whitespace inside the quotes sticks.

[22:45:09.0000] <SimonSapin>
hsivonen: browsers apparently do trim whitespace, and we fixed the spec

[22:45:20.0000] <SimonSapin>
banning whitespace was accidental

[22:53:28.0000] <zcorpan>
so when are mutation events going to be removed?

[23:01:39.0000] <zcorpan>
https://github.com/inverts/Data-Tamers/blob/4c8599fd293c84216f161608b08ae1c85532fc25/AppliedAnalytics/src/main/webapp/resources/cache/css/site.css#L1

[23:02:26.0000] <zcorpan>
https://github.com/blazedev/simbud/blob/34412f7ba14b4fb7f3d89ac0565b4a6cde37f00d/frontend/app/bower_components/angular/angular-csp.css

[23:05:31.0000] <zcorpan>
uppercase and comment first are the only mistakes in the first 10 pages of results for "charset" in css on github (sorting by recently indexed)

[23:06:44.0000] <zcorpan>
does someone have a dataset of external CSS files?

[00:16:55.0000] <hsivonen>
SimonSapin: if white space trimming stays, then I have no good way of suggesting a number other than 1024 (which is intuitively rather high but at least is what Gecko already does).

[00:21:05.0000] <Martin1982>
I was wondering if there are any community people here as well who'd want to submit to http://www.mobileconference.nl to speak at the DMC14?

[02:55:54.0000] <jgraham>
gsnedders: Pretty sure the MS paper from a few years ago looked at that kind of thing

[03:20:48.0000] <zcorpan>
Ms2ger: this status box looks misplaced? http://www.whatwg.org/specs/web-apps/current-work/multipage/syntax.html#text-0

[03:22:56.0000] <zcorpan>
looking at the syntax section, i wonder if it's time to lift the ban on -- in comments

[03:25:35.0000] <zcorpan>
/me files a bug

[03:33:57.0000] <Ms2ger>
Heh, that's a nice old link

[03:34:36.0000] <Ms2ger>
Surely it shouldn't be too hard to get the wpt tests into those boxes

[05:14:44.0000] <zcorpan>
/me brings http://html5.org/tools/web-apps-tracker?from=8432&to=8433 to MikeSmith and hsivonen's attention

[05:18:54.0000] <jgraham>
Anyone got a nice example of a bug in either blink or firefox that can be demoed in a few lines of code?

[05:22:05.0000] <zcorpan>
what kind of bug?

[05:22:50.0000] <jgraham>
Any kind

[05:23:06.0000] <jgraham>
Well something you could write a test for

[05:23:21.0000] <jgraham>
I can find something from the testsuite I guess

[05:26:33.0000] <Ms2ger>
In blink?

[05:26:40.0000] <Ms2ger>
Blob()

[05:26:49.0000] <Ms2ger>
(throws where it shouldn't)

[05:37:26.0000] <jgraham>
Oh, that's quite a reasonable example

[05:37:40.0000] <jgraham>
I would slightly prefer a bug in Firefox I think

[05:38:53.0000] <Ms2ger>
Blob()

[05:39:03.0000] <Ms2ger>
(constructs a Blob while annevk thinks it shouldn't)

[05:40:06.0000] <jgraham>
heh. I can't cite annevk as a spec

[05:40:27.0000] <darobin_>
jgraham: I'm sure there's precedent

[05:40:38.0000] <jgraham>
(not sure why we want WebIDL to be different to half of the javascript stdlib here)

[05:40:43.0000] <Ms2ger>
I had one in the FileReader stuff...

[05:42:33.0000] <Ms2ger>
(new FileReader()).abort();

[05:42:42.0000] <Ms2ger>
Throws in Gecko, but shouldn't

[05:43:00.0000] <Ms2ger>
jgraham, ^

[05:43:53.0000] <gsnedders>
jgraham: Yeah, it did. But that data is several years out of date. Usage of JS is changing pretty quickly.

[05:45:04.0000] <gsnedders>
jgraham: Sadly, I can't remember which MSR paper it was in :)

[05:48:26.0000] <jgraham>
gsnedders: Nor can I, but I think you should start with that paper anyway

[05:49:46.0000] <zcorpan>
jgraham: document.createElement('image') instanceof HTMLUnknownElement

[05:50:14.0000] <jgraham>
http://research.microsoft.com/en-us/um/people/livshits/papers%5Cpdf%5Cwebapps10b.pdf

[05:50:35.0000] <jgraham>
zcorpan: I think I will use the FileReader one

[05:50:54.0000] <Ms2ger>
zcorpan, blink bug

[05:51:48.0000] <gsnedders>
https://research.microsoft.com/pubs/115734/aitypes.pdf --- is it just me or is there nothing novel in that paper?

[05:51:59.0000] <zcorpan>
Ms2ger: blink gives true for me which matches the spec afaict

[05:52:00.0000] <gsnedders>
(I presume I'm just missing what makes it novel)

[05:52:26.0000] <Ms2ger>
Oh?

[05:52:39.0000] <Ms2ger>
Firefox should be true too...

[05:53:09.0000] <jgraham>
If only we had a testsuite to verify these things… ;)

[05:53:28.0000] <Ms2ger>
I think we do

[05:53:46.0000] <zcorpan>
i get HTMLElement in gecko (nightly from 2014-01-14)

[05:54:11.0000] <Ms2ger>
Hrm

[05:54:40.0000] <gsnedders>
jgraham: That paper only shows that 50-70% of functions are called zero times, makes no statement about functions called once.

[05:55:00.0000] <Ms2ger>
But yes, html/semantics/interfaces.html and html/editing/dnd/the-draggable-attribute/draggable_attribute.html test it

[05:55:46.0000] <Ms2ger>
Oh, the latter doesn't use it

[05:55:48.0000] <Ms2ger>
Anyway

[05:55:56.0000] <jgraham>
gsnedders: I thought there was a longer paper too. But anyway don't complain at me for helping you with your background reading :p

[05:56:34.0000] <gsnedders>
jgraham: But I have to complain at you! It's what I do!

[05:56:53.0000] <Ms2ger>
You could complain at zcorpan?

[05:57:13.0000] <gsnedders>
Ms2ger: Nah, I always complained at jgraham.

[05:57:26.0000] <Ms2ger>
So you only glared at zcorpan?

[05:57:48.0000] <zcorpan>
he still does

[05:58:34.0000] <Ms2ger>
Have we removed HTMLBaseFontElement from the spec yet?

[05:58:50.0000] <Ms2ger>
Apparently not

[05:58:54.0000] <gsnedders>
https://research.microsoft.com/pubs/115687/paper.pdf seems to be the longer thing that the paper jgraham linked me to summarizes.

[06:55:07.0000] <jgraham>
mathiasbynens: Are you planning to finish the review of https://critic.hoppipolla.co.uk/r/56 ?

[06:58:21.0000] <mathiasbynens>
jgraham: new to Critic, sorry – what do I need to do? review the new changes?

[06:59:10.0000] <jgraham>
mathiasbynens: Yes

[06:59:32.0000] <jgraham>
https://critic.hoppipolla.co.uk/showcommit?review=56&filter=pending

[06:59:54.0000] <Ms2ger>
"Your work here is done!"?

[07:00:15.0000] <jgraham>
"Ms2ger watches workers/"

[07:00:27.0000] <Ms2ger>
"mathiasbynens	watches	Workers/"

[07:00:31.0000] <jgraham>
Oh

[07:00:53.0000] <jgraham>
But also mathiasbynens reviews /

[07:01:43.0000] <Ms2ger>
/me unwatches

[07:03:00.0000] <jgraham>
Critic seems confused

[07:03:03.0000] <jgraham>
Let me kick it

[07:04:09.0000] <jgraham>
mathiasbynens: You should be able to review now :)

[07:04:38.0000] <mathiasbynens>
jgraham: moar work! thanks

[07:07:14.0000] <zcorpan>
/me was just about to ping mathiasbynens about that

[07:08:11.0000] <mathiasbynens>
is there a way to have Critic send an email whenever someone responds to a review i made?

[07:09:04.0000] <zcorpan>
doesn't it already?

[07:09:27.0000] <mathiasbynens>
nope. `email.activated` is enabled, though

[07:10:16.0000] <jgraham>
mathiasbynens: You didn't tell it your email address though :)

[07:10:25.0000] <jgraham>
See the "home" page

[07:11:41.0000] <mathiasbynens>
jgraham: thanks, i was looking through settings instead

[07:12:42.0000] <jgraham>
mathiasbynens: A reasonable approach

[07:12:50.0000] <jgraham>
But wrong ;)

[07:17:50.0000] <zcorpan>
not sure if the new File test made chrome crash

[07:18:36.0000] <jgraham>
But if it did you get a badge

[07:22:07.0000] <zcorpan>
mathiasbynens: refresh

[07:31:51.0000] <jgraham>
mathiasbynens++

[07:31:57.0000] <jgraham>
also zcorpan++ ofc

[07:33:56.0000] <zcorpan>
ok merged, now fix the browsers

[07:34:38.0000] <jgraham>
Hehe

[07:38:24.0000] <zcorpan>
sigh, the Workers directory had been renamed

[07:39:04.0000] <zcorpan>
oh well

[07:39:36.0000] <jgraham>
Why did it get renamed?

[07:39:45.0000] <jgraham>
Oh since r/56 seems quite likely I guess

[07:40:04.0000] <zcorpan>
to match TR names or some such i think

[07:40:18.0000] <zcorpan>
thanks mathiasbynens

[07:40:30.0000] <zcorpan>
now work time is up for today :-)

[07:40:37.0000] <jgraham>
Yeah, that's the general naming scheme

[07:51:05.0000] <annevk-cloud>
Blob() should throw without new

[07:51:23.0000] <annevk-cloud>
See ES6

[07:52:37.0000] <jgraham>
Does ES6 also make Array() throw without new?

[07:55:11.0000] <annevk-cloud>
Not sure

[07:56:12.0000] <annevk-cloud>
It's unclear how compatible subclassing is per Waldo, but if it is we ought to make it work on our side

[07:56:59.0000] <jgraham>
Well if it breaks Image() and Array() and Blob() and so on it is surely incompatible

[08:43:52.0000] <Domenic_>
ES6 legacy classes are not changed to throw

[08:43:56.0000] <Domenic_>
but new classes throw

[08:44:03.0000] <Domenic_>
Allen explained this on list a while back lemme find the link

[08:44:36.0000] <Ms2ger>
So why should legacy DOM classes change?

[08:44:56.0000] <Domenic_>
unclear

[08:45:13.0000] <Domenic_>
if users can compatibly not use `new` cross browser then they probably shouldn't

[08:45:26.0000] <Domenic_>
but if browsers disagree on this point it's an opportunity to move to the newer semantics

[08:46:17.0000] <Domenic_>
it's this message http://esdiscuss.org/topic/should-the-default-constructor-return-the-return-value-of-super#content-6 although the first half of it is relevant to the post it's replying to; the second half is the more general guidance

[08:46:20.0000] <jgraham>
(pun intended)?

[08:46:33.0000] <jgraham>
In any case this seems pretty dumb

[08:46:43.0000] <jgraham>
Since it bakes inconsistency into the language

[08:46:59.0000] <Domenic_>
i kind of agree

[08:47:33.0000] <Domenic_>
the alternative though is making subclassing very hard to get right for all classes ever

[08:47:47.0000] <Domenic_>
in order to preserve consistency with legacy Array, Date, RegExp

[08:48:31.0000] <jgraham>
And all of DOM

[08:49:11.0000] <Domenic_>
cross browser?

[08:50:17.0000] <Domenic_>
DOM has so few constructors anyway @_@

[08:50:48.0000] <jgraham>
I'm pretty sure that there are at least some that work cross browser

[08:52:11.0000] <annevk-cloud>
Chrome throws for most

[08:52:27.0000] <annevk-cloud>
I talked with bz the other day and we have a plan

[08:52:34.0000] <Ms2ger>
Plans are good

[08:52:37.0000] <Ms2ger>
I guess

[08:52:41.0000] <annevk-cloud>
Biggest problem is our testsuite

[08:52:55.0000] <jgraham>
That sounds unlikely

[08:53:13.0000] <jgraham>
I mean it makes bz's life suck because he has to fix the tests

[08:53:21.0000] <annevk-cloud>
In terms of executing the plan it is

[08:53:25.0000] <jgraham>
But it isn't an actual compat issue

[08:54:38.0000] <annevk-cloud>
Domenic_: more than ES though ;)

[08:58:25.0000] <TabAtkins>
annevk-cloud: Back to the convo from last night.  I don't see how/why you're saying that "getComputed(); changeBaseURL();" should be give the same results as "changeBaseURL(); getComputed();".  Calling gCS compatibly forces a sync style flush + layout, so resolving url()s will also happen syncly.

[08:59:05.0000] <TabAtkins>
So before/after changing the base url, you'll see different computed values for url()s.

[09:06:21.0000] <annevk>
TabAtkins: because that would be incompatible with what is happening today and would make fetching images racy

[09:06:39.0000] <annevk>
TabAtkins: once the style sheet is parsed the browser should be able to start fetching happens

[09:06:44.0000] <annevk>
TabAtkins: so that requires the URL to be parsed

[09:07:08.0000] <annevk>
s/happens//

[09:07:12.0000] <TabAtkins>
I don't understand what about this is "incompatibfle with what is happening today". To the best of my knowledge, I'm describing reality.

[09:07:44.0000] <TabAtkins>
Ah, but yeah, allowing preloading does require you to try and parse the url immediately.

[09:08:11.0000] <TabAtkins>
(But that doesn't have any effect on what I said.  And yes, it is racy.)

[09:10:09.0000] <annevk>
You can say things but you are wrong

[09:10:24.0000] <annevk>
http://software.hixie.ch/utilities/js/live-dom-viewer/saved/2782

[09:10:53.0000] <annevk>
(Sorry for that, got a bit annoyed I have to demonstrate how CSS works.)

[09:13:31.0000] <TabAtkins>
Jeezus, Chrome's behavior there is just idiotic.

[09:14:28.0000] <TabAtkins>
If you run that from a data: url, it'll try to parse it immediately, fail due to the lack of a base url, and set the url to "". Then it'll resolve again when the <base> gets added, and end up with "url(http://example.com)".

[09:14:49.0000] <TabAtkins>
But I think we've already established that Chrome is doing dumb things here.

[09:14:57.0000] <TabAtkins>
I need to go test in another browser.

[09:17:23.0000] <annevk>
TabAtkins: from the data URL I don't see Chrome loading any image

[09:17:27.0000] <annevk>
TabAtkins: which makes sense

[09:17:44.0000] <annevk>
TabAtkins: it ending up with http://example.com does not though

[09:17:48.0000] <TabAtkins>
Exactly, but if you look at the computed style, it's because it's trying to load "http://example.com"

[09:18:09.0000] <annevk>
TabAtkins: in any event, see how HTML handles this, it doesn't change the URLs of all the resources in a document when the base URL changes

[09:18:11.0000] <TabAtkins>
If "example.com" returned an image, Chrome would have shown that.

[09:18:14.0000] <annevk>
TabAtkins: neither should style sheets

[09:18:21.0000] <dglazkov>
good morning, Whatwg!

[09:18:42.0000] <annevk>
TabAtkins: oh good point

[09:19:14.0000] <TabAtkins>
annevk: Right, so I think you're saying that if the url is ever parsed, it's stuck with that parsing.  But if it fails to parse, then changing the base url will let it try again?

[09:19:15.0000] <annevk>
TabAtkins: actually, in the Chrome console I don't see a request for http://example.com/image

[09:19:37.0000] <annevk>
TabAtkins: no, if it fails you'd store "about:invalid" as the URL

[09:19:39.0000] <TabAtkins>
annevk: Exactly. Read what I said about Chrome being messed up. ^_^

[09:19:48.0000] <annevk>
TabAtkins: the new base URL only takes effect on reparsing

[09:20:09.0000] <TabAtkins>
Hm, that works badly for url()s in <template>. :/

[09:20:21.0000] <annevk>
aklein said it would be fine

[09:20:41.0000] <annevk>
You reparse those styles, no?

[09:20:51.0000] <annevk>
All you need is to store the input and the parsed URL

[09:20:52.0000] <TabAtkins>
I dunno.  I guess we can specify that it's reparsed.

[09:21:18.0000] <annevk>
And you serialize the input if you get cssText, and the parsed URL if you get the computed value

[09:21:32.0000] <annevk>
Can you explain the <template> scenario more clearly?

[09:21:58.0000] <TabAtkins>
<template><div style="background: url(/foo);"></div></template>, and then stamp that template out in the document.

[09:22:12.0000] <TabAtkins>
I think the <template> contents are shoved into a docfrag?

[09:22:16.0000] <TabAtkins>
So no base url.

[09:22:46.0000] <annevk>
What does <template> do with <img src=/test>?

[09:23:03.0000] <annevk>
Because CSS works like HTML in this regard

[09:23:12.0000] <TabAtkins>
I dunno.

[09:23:16.0000] <annevk>
HTML also keeps the input and the parsed URL

[09:23:34.0000] <annevk>
Any question that applies to CSS here would also apply to HTML

[09:23:37.0000] <TabAtkins>
/me will check - he's not sure he's using a version that'll make <template> work.

[09:24:35.0000] <annevk>
Also, I know you're off it now, but please try to avoid obvious racy things like that in standards!

[09:25:24.0000] <annevk>
We go out of our way to make GC not observable, define order of tasks, make things deterministic

[09:25:36.0000] <annevk>
For sure there will be some things, but if we can avoid them we should

[09:26:26.0000] <TabAtkins>
Haha, obviously I avoid raciness in new things. ^_^

[09:35:29.0000] <aklein>
annevk, TabAtkins: good morning

[09:35:33.0000] <aklein>
reading back up

[09:38:14.0000] <aklein>
<img src> is quite different from CSS

[09:38:33.0000] <aklein>
the "src" attribute is never mucked with

[09:38:37.0000] <aklein>
the content attribute, that is

[09:39:27.0000] <aklein>
HTML says to go fetch the image whenever src is set (by resolving the URL with the <img>'s baseURI)

[09:40:00.0000] <aklein>
but reading HTMLImageElement.src doesn't necessarily have any connection to whatever image is displayed by the <img>

[09:40:13.0000] <aklein>
it always re-resolves whenever it's read, again against the baseURI

[09:41:05.0000] <aklein>
(though the above will change a bit if we make the spec better match the adoption/insertion behavior in browsers)

[09:41:36.0000] <aklein>
see the "Otherwise" note in http://www.whatwg.org/specs/web-apps/current-work/multipage/urls.html#dynamic-changes-to-base-urls for discussion of img src not matching the fetched resource

[09:42:32.0000] <aklein>
annevk: as to what I said last night...conceptually what you suggested last night sounds fine, though it turns out it's trickier than I thought as we're over-eager to share resolved inline style when cloning elements

[09:42:54.0000] <aklein>
but that's entirely an implementation detail

[09:43:15.0000] <annevk>
aklein: if you set backgroundImage it will refetch too

[09:43:29.0000] <aklein>
annevk: sure, that part matches

[09:43:33.0000] <annevk>
aklein: and if you keep the original value as I suggested, backgroundImage would never be mucked with either

[09:43:38.0000] <aklein>
but I wanted to point out that HTML doesn't store the resolved URL anywhere

[09:43:44.0000] <annevk>
aklein: yes it does

[09:43:54.0000] <annevk>
aklein: if you get .src

[09:44:03.0000] <annevk>
aklein: after the base URL changed, it will be the original URL

[09:44:14.0000] <annevk>
iirc

[09:44:28.0000] <aklein>
annevk: nope

[09:44:35.0000] <annevk>
hmm

[09:44:50.0000] <aklein>
see the dynamic changes section I linked above

[09:45:23.0000] <aklein>
hmm

[09:45:34.0000] <annevk>
Oh my that is fucked

[09:45:51.0000] <annevk>
So .src returns a value that is not what is being fetched

[09:46:00.0000] <annevk>
Or has been fetched

[09:46:44.0000] <annevk>
Surely we have the original URL around somewhere. Would be much nicer to just expose that

[09:47:00.0000] <aklein>
strangely I can't find where src is specified to return an absolute url

[09:47:04.0000] <aklein>
it just says "reflect" in the spec

[09:47:32.0000] <annevk>
http://www.whatwg.org/specs/web-apps/current-work/multipage/common-dom-interfaces.html#reflecting-content-attributes-in-idl-attributes

[09:47:39.0000] <aklein>
ah

[09:47:45.0000] <annevk>
"then on getting, the IDL attribute must resolve the value of the content attribute relative to the element and return the resulting absolute URL if that was successful"

[09:47:46.0000] <annevk>
bah

[09:47:58.0000] <annevk>
ugly is ugly

[09:48:10.0000] <TabAtkins>
Platform is fucked, news at 11.

[09:48:48.0000] <Ms2ger>
What's <col span> for?

[09:49:56.0000] <TabAtkins>
For making a <col> span multiple columns.

[09:50:10.0000] <Ms2ger>
Why not colgroup?

[09:50:21.0000] <TabAtkins>
Because.

[09:50:39.0000] <Domenic_>
<col span> is from prehistory right?

[09:50:45.0000] <TabAtkins>
Yup.

[09:51:15.0000] <aklein>
annevk: what's awesome in Blink/WebKit is that src reflection is nearly the only place where xml:base is respected

[09:51:31.0000] <aklein>
so even without a baseURI change the resource and src can have a mismatch

[09:51:43.0000] <annevk>
aklein: oh, I thought you guys had no xml:base implementation at all

[09:51:55.0000] <aklein>
it basically only does anything in <svg:a>

[09:52:04.0000] <annevk>
http://dump.testsuite.org/xml:base/basic.xml

[09:52:10.0000] <annevk>
I see

[09:52:14.0000] <aklein>
but it also affects the baseURI getter

[09:52:17.0000] <annevk>
Please kill it

[09:52:37.0000] <annevk>
Intent to removes get LGTM pretty quickly :)

[09:53:10.0000] <aklein>
very true

[09:53:23.0000] <annevk>
Not having xml:base around will make it easier to design the new declarative thing

[09:53:40.0000] <aklein>
anyway, I guess it's not a very good argument to say "<img> is crazy, CSS should be just like that"

[09:54:10.0000] <aklein>
annevk: is there a mozilla bug for removing xml:base?

[09:54:23.0000] <annevk>
Yeah, it's waiting on someone to do it

[09:54:24.0000] <aklein>
(or a discussion somewhere?)

[09:54:44.0000] <aklein>
yeah, everytime it comes up I go test Firefox and am shocked that it fully works there

[09:54:52.0000] <annevk>
https://www.w3.org/Bugs/Public/show_bug.cgi?id=20976 has all the things on baseURI and xml:base

[09:56:04.0000] <aklein>
I keep forgetting that bug has all this stuff

[10:27:25.0000] <jgraham>
Hmm, query-encoding tests seem to be broken

[10:27:38.0000] <jgraham>
And zcorpan isn't even here to complain at

[10:28:08.0000] <reyre>
foolip: do you know of any webvtt demos that show the desired behaviour for the processing model step 11 ?

[10:28:55.0000] <reyre>
i.e. positioning the cues to be on the appropriate lines and making sure they don't overlap

[10:33:35.0000] <foolip>
reyre: can you quote that step for me?

[10:34:01.0000] <foolip>
"If reset is false, then, for each text track cue cue in cues..."?

[10:34:28.0000] <foolip>
(so many algorithms and steps)

[10:34:34.0000] <reyre>
foolip: yea heh

[10:34:59.0000] <jgraham>
oh look, "git qseries" isn't a command

[10:35:00.0000] <reyre>
foolip: i'm having a hard time getting my head around how the cues should be positioned when the snap-to-lines flag is set

[10:35:20.0000] <reyre>
so i was basically looking for a demo that showcases the behaviour of the end result of that algorithm

[10:35:38.0000] <reyre>
foolip: for example, if i have a cue with line: 1 and another cue with line: 2

[10:35:54.0000] <reyre>
will cue with line: 1 be directly on top of the cue with line: 2

[10:36:12.0000] <foolip>
reyre: oh, ok, you mean "Adjust the positions of boxes according to the appropriate steps from the following list"

[10:36:16.0000] <reyre>
yep

[10:36:43.0000] <foolip>
sure, examples for that shouldn't be hard to find

[10:37:32.0000] <foolip>
you could have a look at some of the reftests in http://w3c-test.org/web-platform-tests/master/old-tests/submission/Opera/media/track/webvtt/rendering/reftest/

[10:38:06.0000] <foolip>
the overlap avoidance algorithm for snap-to-lines is actually somewhat sane

[10:38:37.0000] <reyre>
foolip: great, thanks

[10:39:09.0000] <foolip>
essentially, it first finds the position the cue would like to be at, and if it overlaps it just moves it up until it finds a free space (then down, and other complications)

[10:39:59.0000] <foolip>
if you want an implementation to compare with, I know that Presto's (old Opera 12.16) followed these steps very closely, although for an older version of the spec

[10:40:47.0000] <foolip>
and with that I'm going to bed

[10:41:13.0000] <foolip>
reyre: happy hacking!

[10:41:30.0000] <reyre>
foolip: okay, thanks! this helps a lot

[10:41:33.0000] <reyre>
foolip: good night!

[11:28:06.0000] <Hixie>
hey if anyone is writing tests for type=range, <input type=range step=50 value=25> is an interesting case that chrome gets wrong

[11:28:11.0000] <Hixie>
(firefox gets it right)

[12:07:28.0000] <Ms2ger>
zcorpan, did you have a js corpus?

[12:07:54.0000] <zcorpan>
Ms2ger: miketaylr does

[12:08:21.0000] <Ms2ger>
miketaylr, want to grep for pkcs11 at some point?

[12:08:40.0000] <miketaylr>
Ms2ger: sure thing, just the string "pkcs11"?

[12:08:50.0000] <Ms2ger>
Yep

[12:09:13.0000] <miketaylr>
k

[12:15:02.0000] <zcorpan>
jgraham: what is broken?

[12:15:32.0000] <zcorpan>
/me disappears again

[12:31:31.0000] <miketaylr>
Ms2ger: https://gist.github.com/miketaylr/8696287

[12:31:55.0000] <Ms2ger>
Thanks!

[12:40:50.0000] <Hixie>
/me adds a new feature to HTML

[12:40:54.0000] <Hixie>
<input type=range multiple>

[12:40:57.0000] <Hixie>
enjoy.

[12:41:38.0000] <jory>
Random CSS query: should I group together @media blocks that share the same features?

[12:43:10.0000] <jory>
e.g. is there a noticeable difference between having two identical @media queries with different rules beneath them versus bundling all of the rules under a single instance of the @media?

[12:45:03.0000] <MikeSmith>
/me waves from Washington DC

[12:45:28.0000] <MikeSmith>
hmm multiple range

[12:45:39.0000] <annevk>
jory: the object model will be different

[12:45:48.0000] <annevk>
jory: performance might be different, but I suspect minor

[12:47:22.0000] <jory>
annevk: Yeah, I've found that when working with most of the popular preprocessors you can often end up with multiple instances of the same MQ being repeated with a very small number of rules in each instance.

[12:48:03.0000] <jory>
I'm sure there's some # where it becomes more expensive, but just wondering if it was a major no-no / easy fix to eek out some performance.

[12:49:26.0000] <annevk>
data:text/html,<input type=range step=50 value=25>

[12:49:28.0000] <annevk>
is weird

[12:50:42.0000] <Ms2ger>
Weird how?

[12:51:26.0000] <jory>
Hixie: Is that a range where you can select multiple values, or multiple disconnected ranges?

[12:52:00.0000] <jory>
i.e. 10-30...40-50

[12:52:10.0000] <Ms2ger>
input type=range doesn't let you select ranges

[12:52:20.0000] <Ms2ger>
Oh, nvm

[12:53:07.0000] <jory>
Meaning a range where you can select values between 10 and 30, or 40 and 50, but not between 30 and 40.

[13:00:00.0000] <Hixie>
jory: it's as in where you can select two values.

[13:00:14.0000] <jory>
Neat!

[13:18:47.0000] <annevk>
http://www.unicode.org/mail-arch/unicode-ml/y2014-m01/0049.html o_O

[13:18:50.0000] <annevk>
hsivonen: ^^

[13:19:07.0000] <annevk>
I have been replying to that thread, but it seems my email is not getting to the list

[13:20:05.0000] <annevk>
That email is particularly crazy though

[13:32:03.0000] <Hixie>
christ, if they really do feel like the need to mint new names, i hope they don't name things "whatwg-*"

[13:32:07.0000] <Hixie>
that'd be horrible

[13:32:30.0000] <Hixie>
but i think that somewhat misses the point

[13:32:40.0000] <Hixie>
since i have huge doubts that anyone, anne least of all, wants to invent a new encoding...

[13:37:40.0000] <annevk>
So DOM is forked now? http://lists.w3.org/Archives/Public/www-dom/2014JanMar/0054.html

[13:38:11.0000] <annevk>
https://github.com/whatwg/dom/pulls has no outstanding pull requests regarding this

[13:41:43.0000] <annevk>
Hixie: seems they want to support multiple incompatible implementations of windows-1252 in a single implementation

[13:42:01.0000] <Hixie>
there are multiple incompatible implementations of windows-1252?

[13:48:53.0000] <annevk>
Apparently

[13:49:37.0000] <annevk>
My opinion is that everyone should migrate towards the Encoding Standard, including default libraries of popular languages

[13:59:51.0000] <annevk>
Hah, NetworkError has worker in it

[14:31:09.0000] <Hixie>
annevk: what are these multiple implementations? are they interoperable with public content?

[15:08:37.0000] <annevk>
Hixie: I think these are libraries that are incompatible with browsers

[15:09:12.0000] <annevk>
Hixie: e.g. browsers have mappings for code points not officially assigned (return the byte as code point rather than U+FFFD iirc)

[15:09:39.0000] <Hixie>
annevk: well ok but what are the files that people are reading that are incompatible with returning that?

[15:12:22.0000] <annevk>
Hixie: I don't know

[15:12:35.0000] <annevk>
Hixie: I suspect they simply don't want to change existing behavior

[15:12:55.0000] <Hixie>
i mean, unless there's actual content depending on those other implementations, i would argue it's not a new encoding, it's just a buggy version of the existing encoding

[15:13:04.0000] <Hixie>
win1252 is by definition whatever microsoft implemented, after all

[15:14:22.0000] <annevk>
I'm not sure they would agree with that

[15:32:22.0000] <Hixie>
annevk: yeah. well. maybe they should check interop more then.

[15:32:41.0000] <annevk>
I don't disagree

[15:33:07.0000] <annevk>
The only complaints I see are about us not matching some other standards body definition


2014-01-30
[16:41:57.0000] <Hixie>
man, do we still not have an answer to people who want a set of push buttons that act like a radio button set?

[16:44:01.0000] <annevk>
Hixie: aren't forms your area?

[16:44:07.0000] <Hixie>
this is rendering

[16:44:10.0000] <annevk>
/me wonders what a push button is

[16:44:33.0000] <annevk>
Hixie: ah, your question is whether the CSS WG has finally acknowledged they need to address form control styling?

[16:44:49.0000] <Hixie>
well either CSS or web components, but yeah

[16:44:52.0000] <Hixie>
basically :-)

[16:45:13.0000] <Hixie>
i mean like a version of <select> that shows adjacent buttons instead of a drop-down

[16:45:27.0000] <Hixie>
like: [ Arr ] [ Dep ]

[16:45:36.0000] <Hixie>
instead of ( ) Arr (o) Dep

[16:45:57.0000] <Hixie>
or  [ Arr    |v]

[16:46:19.0000] <annevk>
I think components wants to at least explain form controls, but I'm not sure how far that is

[16:46:34.0000] <annevk>
But I don't think there's anyone trying to solve this issue

[16:46:59.0000] <Hixie>
this is probably the second most important thing to work on, imho

[16:47:04.0000] <Hixie>
in css

[16:47:11.0000] <Hixie>
the first being mobile-related UI stuff

[16:47:23.0000] <Hixie>
though there might not be much of that needed in the CSS world

[16:48:30.0000] <annevk>
So offline is my #1 thing this year and fixing various issues with all my specs. Forms and UI events were things I was thinking about tackling once I got tired with those

[16:48:49.0000] <annevk>
But I need to consider that more carefully since they are sinkholes

[16:48:56.0000] <Hixie>
yeah

[16:49:11.0000] <Hixie>
i've tried to fix it twice so far

[16:49:14.0000] <Hixie>
web controls, and xbl

[16:49:22.0000] <Hixie>
someone else's turn now :-)

[17:05:00.0000] <Domenic_>
I was also considering form styling

[17:05:45.0000] <Domenic_>
But it's pretty hard to find time given this is a hobby, so things like streams and even promsies seem likely to occupy my free time for quite a while.

[17:06:11.0000] <annevk>
Someone needs to hire you :/

[17:06:34.0000] <annevk>
Yeah, streams are important too

[17:07:00.0000] <annevk>
But I guess form styling is more overdue

[19:22:01.0000] <Domenic_>
What did we do before promises? So far i have IDBRequest and File API's successCallback, errorCallback. Were there more?

[19:23:06.0000] <Domenic_>
i guess fullscreen API having you listen to separate events to see if your method call succeeded is another example

[22:03:19.0000] <annevk-cloud>
Domenic_: fullscreen is different, events are fired in other documents too

[22:05:05.0000] <annevk-cloud>
Domenic_: also see WebRTC, toBlob on canvas, geolocation (also has more complicated API promises do not work for), etc.

[22:36:20.0000] <MikeSmith>
zcorpan_: thanks for the heads-up about http://html5.org/tools/web-apps-tracker?from=8432&to=8433 (making caption end tag optional)

[22:37:14.0000] <zcorpan_>
np

[22:45:01.0000] <MikeSmith>
zcorpan_: also about the validator doctype-sniffing option in the REST API yeah, the change is, no sniffing except for opt-in in web service api

[22:45:33.0000] <MikeSmith>
but I don't plan to remove the option to sniff later

[22:45:44.0000] <zcorpan_>
MikeSmith: ok, sounds good

[22:46:01.0000] <MikeSmith>
ok thanks

[22:46:06.0000] <bhanu>
hi, I have few queries on recent changes being made on range methods, could anybody help me understand?

[22:46:46.0000] <zcorpan_>
bhanu: don't ask to ask just ask :-)

[22:49:51.0000] <bhanu>
ok, here are the queries : first being in DOM2 for setStartBefore/setStartAfter/setEndBefore/setEndAfter the specification says InvalidNodeTypeError should be thrown when root container of refNode is not an Attr, Document, or DocumentFragment node

[22:50:51.0000] <bhanu>
in DOM4 which is a work in draft its mentioned if parent of refNode is null, then  throw InvalidNodeTypeError exception

[22:52:11.0000] <bhanu>
again there is no mention about what type of refNode would lead to the InvalidNodeTypeError exception

[22:54:42.0000] <zcorpan_>
bhanu: you're looking at http://dom.spec.whatwg.org/ yes?

[22:55:03.0000] <bhanu>
zcorpan : yes

[22:56:36.0000] <zcorpan_>
i find http://dom.spec.whatwg.org/#concept-range-bp-set

[22:58:57.0000] <zcorpan_>
so if parent is null or a doctype, you get InvalidNodeTypeError, but doctypes can't have children so it's just if parent is null for those methods

[22:59:47.0000] <bhanu>
parent specification is fine

[23:01:23.0000] <bhanu>
If I am not wrong the root node requirement is eradicated right which was there is in DOM2?

[23:01:52.0000] <zcorpan_>
oh so dom2 throws if the root is e.g. an element?

[23:02:01.0000] <bhanu>
yes

[23:02:40.0000] <bhanu>
I believe that is why this change is brought in

[23:02:52.0000] <zcorpan_>
yeah i don't see that in the dom spec. what do browsers do?

[23:03:31.0000] <bhanu>
I tried in chrome and mozilla, it doesn't throw any exception

[23:03:48.0000] <bhanu>
but its a old bug in webkit

[23:06:15.0000] <bhanu>
again there was restriction on the refNode in DOM2 i.e it shouldn't be any of Document, DocumentFragment, Attr, Entity, or Notation node

[23:06:26.0000] <bhanu>
which i don't see in DOM4

[23:09:32.0000] <zcorpan_>
i'd recommend ignoring what dom2 says and go by what the new spec says and what browsers do (in case all browsers disagree with the spec, maybe the spec should be changed)

[23:10:12.0000] <bhanu>
ok, thanks

[00:37:13.0000] <gsnedders>
Is there any way to make a table split into columns using CSS?

[01:21:34.0000] <zcorpan_>
gsnedders: doesn't the html spec do that for the entity table?

[01:22:39.0000] <zcorpan_>
Hixie: https://www.w3.org/Bugs/Public/show_bug.cgi?id=24411 seems like a bug for html, right?

[01:26:18.0000] <zcorpan_>
TabAtkins: do you plan to fix https://github.com/ResponsiveImagesCG/picture-element/issues/91 soon? it seems imperative to actually implementing the spec and writing tests

[02:24:51.0000] <gsnedders>
zcorpan_: I couldn't get CSS Multicol to work :(

[02:27:46.0000] <zcorpan_>
gsnedders: the spec's entity table multicols for me in presto and blink

[02:29:58.0000] <gsnedders>
zcorpan_: I dunno. I was trying really quickly just before printing stuff out.

[02:30:28.0000] <zcorpan_>
hsivonen: WDYT about https://www.w3.org/Bugs/Public/show_bug.cgi?id=24439 ?

[02:31:17.0000] <zcorpan_>
dom consistency was an argument in 2006 but maybe it's not so important today?

[03:15:14.0000] <jgraham>
zcorpan_: see https://tbpl.mozilla.org/php/getParsedLog.php?id=33794007&tree=Cedar the tests seem to time out in gecko? Could be expected I suppose

[03:19:13.0000] <zcorpan_>
jgraham: do you have https://github.com/w3c/web-platform-tests/pull/534 in?

[03:19:29.0000] <zcorpan_>
jgraham: the css tests don't time out in gecko for me

[03:20:17.0000] <hsivonen>
zcorpan_: commented on the bug

[03:20:30.0000] <zcorpan_>
jgraham: only 'loading webvtt <track>' which is expected (it's a gc bug i think)

[03:20:37.0000] <jgraham>
zcorpan_: Not sure, my sync is a bit out of date, but I can fix that easilly enough

[03:21:23.0000] <jgraham>
zcorpan_: OK. The weird thing is that those tests supposedly didn't time out on my machine. But that doesn't seem to be reproducable.

[03:22:07.0000] <zcorpan_>
hsivonen: thx

[03:35:30.0000] <zcorpan_>
jgraham: hmm. i'm confused. i want to move the structured clone tests from Workers to workers, but in my working copy git has them at both locations. :-S

[03:37:14.0000] <zcorpan_>
jgraham: could you try moving them?

[03:39:06.0000] <jgraham>
zcorpan_: I see files in Workers/semantics/structured-clone/ but nothing else under Workers. They don't seem to be under workers/

[03:40:10.0000] <zcorpan_>
yeah that matches what the web interface says on github, but in my checkout i have all the tests in both locations. dunno if something gets confused by the names differing only by case or something

[03:41:52.0000] <jgraham>
zcorpan_: OK, I moved the files that were in Workers

[03:42:00.0000] <zcorpan_>
thanks!

[03:42:02.0000] <jgraham>
So now that shouldn't exist at all

[04:17:42.0000] <hsivonen>
/me wonders if howcome has an opinion on Client Hints

[04:18:03.0000] <hsivonen>
/me is late to Regions Considered Harmful

[05:42:19.0000] <MikeSmith>
hsivonen: I can't recall what his views are on conneg

[05:43:37.0000] <MikeSmith>
but one thing that's disturbing about CH is its potential giving of new life to conneg

[05:50:21.0000] <yoav>
MikeSmith: Do you hold negative views RE conneg even if it's server-initiated opt-in conneg? Because that's what CH is

[05:56:40.0000] <MikeSmith>
yoav: I am keeping an open mind but I think it's pretty clear that conneg on the Web so far has not been a big success

[05:56:44.0000] <MikeSmith>
maybe CH will change that

[05:58:18.0000] <yoav>
On the one hand I agree (Content-Encoding being the best example). On the other hand, I believe 'key' and TLS may change that.

[05:58:37.0000] <yoav>
And opt-in conneg has very limited risk

[05:58:56.0000] <MikeSmith>
yeah relatively

[05:59:16.0000] <yoav>
If it doesn't work, we can remove it. No risk of polluting requests forever.

[05:59:43.0000] <MikeSmith>
that's definitely a nice aspect

[06:00:05.0000] <MikeSmith>
I'm curious why hsivonen thought Haakon might have a particular opinion on CH

[06:00:42.0000] <yoav>
Now I am too :)

[06:25:21.0000] <zcorpan_>
yoav: if we implement CH and sites start to rely on it being supported, it can't be removed

[06:28:00.0000] <jgraham>
/me thinks that CH is probably not Switzerland, but hasn't yet figured out what it is

[06:28:21.0000] <Ms2ger>
* hsivonen wonders if howcome has an opinion on Client Hints

[06:29:10.0000] <jgraham>
Yes, but what does CH stand for? ;)

[06:39:22.0000] <ondras>
Cyanide & Happiness ?

[07:11:31.0000] <whinzou>
hello

[07:42:09.0000] <GPHemsley>
/me wonders what a Client Hint is

[07:45:32.0000] <MikeSmith>
Internet Draft

[07:45:58.0000] <MikeSmith>
GPHemsley: ↑

[07:46:22.0000] <MikeSmith>
from Ilya at Google

[07:50:24.0000] <jory>
So in theory Client Hints would allow mobile devices to specify different DPRs depending on available bandwidth...

[09:19:38.0000] <dglazkov>
good morning, Whatwg!

[09:21:16.0000] <jcgregorio>
good morning dglazkov

[10:04:41.0000] <annevk>
Domenic_: new delay() looks better

[10:05:01.0000] <annevk>
Domenic_: seems about the same as saying to return and run the remaining steps async

[10:05:33.0000] <Domenic_>
yeah

[10:05:45.0000] <Domenic_>
as i said might abandon that attempt to make things make more sense to me

[11:10:15.0000] <annevk>
Hixie: http://www.unicode.org/mail-arch/unicode-ml/y2014-m01/0053.html explains the situation

[11:11:49.0000] <Hixie>
that e-mail... makes no sense

[11:12:13.0000] <annevk>
:-)

[11:12:29.0000] <Ms2ger>
Did you look at the mailing list it was sent to first?

[11:12:31.0000] <Hixie>
what's wrong with "windows1252" as the name?

[11:12:51.0000] <Hixie>
windows-1252, even

[11:12:56.0000] <Ms2ger>
Already taken

[11:12:59.0000] <annevk>
I think the context is a Python library, but I'm not completely sure

[11:15:10.0000] <Hixie>
Ms2ger: isn't it already taken to mean exactly what this guy means? "what browsers do"?

[11:15:20.0000] <Ms2ger>
I dunno

[11:27:16.0000] <annevk>
Hixie: I think we convinced TC39 to take on structured cloning; might take a while for it to be integrated and such though

[11:27:29.0000] <Hixie>
when you say "take on structured cloning"

[11:27:38.0000] <Hixie>
you mean "provide hooks for structured cloning", right?

[11:27:53.0000] <Hixie>
i mean, i don't want us to change to non-DOM exceptions and all that just because it moves to a new forum

[11:28:20.0000] <annevk>
Hixie: yeah, and define how it behaves for new objects themselves

[11:29:06.0000] <annevk>
Hixie: DOMException is going to be just another Error subclass

[11:29:34.0000] <annevk>
Hixie: the plan is to move it to IDL and have IDL provide the hooks for throwing

[11:29:43.0000] <annevk>
Hixie: rather than DOM

[11:30:24.0000] <Hixie>
so long as it's not churning on authors for no good reason

[11:31:37.0000] <annevk>
I think apart from going to getter/setter to data properties it would remain identical and would make it clear that no new exceptions are to be minted outside IDL

[11:41:56.0000] <jory>
Hey I wanted to update a broken link on the wiki.

[11:42:15.0000] <jory>
http://wiki.whatwg.org/wiki/MetaExtensions

[11:42:24.0000] <jory>
The viewport-meta link is broken.

[11:42:39.0000] <annevk>
jory: go ahead

[11:44:51.0000] <jory>
annevk: It says I need to get access from one of the IRC regulars

[11:45:08.0000] <annevk>
jory: PM me your desired username and password

[11:55:10.0000] <jcgregorio>
Hixie: Canvas "Path" vs "Path2D" http://lists.w3.org/Archives/Public/public-whatwg-archive/2013Nov/0138.html

[11:55:23.0000] <jcgregorio>
is there agreement to update the spec?

[11:56:00.0000] <annevk>
Isn't it weird if Path is the only thing with a suffix?

[11:57:08.0000] <Hixie>
jcgregorio: i thought safari had shipped with it as Path

[11:58:59.0000] <jcgregorio>
Hixie, I'll have to check that, I was under the impression no one had implemented it yet

[11:59:20.0000] <Hixie>
there's been discussion of it on the whatwg list, but i can't find my last e-mail on the topic

[12:00:26.0000] <jcgregorio>
annevk: true, also for the sake of symmetry it's not like there's a lot of *3D objects in  WebGL

[12:00:58.0000] <Hixie>
i guess http://lists.w3.org/Archives/Public/public-whatwg-archive/2013Nov/0125.html is the last thing from me on it

[12:01:49.0000] <Domenic_>
new goal in life: be the first to spec a 4D-suffixed class

[12:03:04.0000] <jcgregorio>
Hixie: sgtm, thanks

[12:03:23.0000] <Hixie>
jcgregorio: at the end of the day i'll spec whatever ships most widely, obviously

[12:05:44.0000] <annevk>
Safari has Path

[12:05:53.0000] <annevk>
We should not rename

[12:06:22.0000] <annevk>
Proof: http://software.hixie.ch/utilities/js/live-dom-viewer/saved/2788

[12:06:36.0000] <annevk>
jcgregorio: Hixie: ^^

[12:07:13.0000] <jcgregorio>
annevk: thanks!

[12:09:03.0000] <Hixie>
annevk: can you get it to do anything?

[12:10:08.0000] <Hixie>
annevk: e.g. http://goo.gl/iXggPJ

[12:10:13.0000] <Hixie>
annevk: doesn't do anything?

[12:13:32.0000] <annevk>
Hixie: hmm

[12:14:25.0000] <annevk>
hober: ^^

[12:14:41.0000] <annevk>
/me is fixing URLSearchParams

[12:16:57.0000] <MikeSmith>
annevk: did you see that othermaciej mentioned he's implementing the URL spec?

[12:18:01.0000] <annevk>
MikeSmith: yeah talked about it with him

[12:18:04.0000] <othermaciej>
I told annevk in person :-)

[12:18:13.0000] <othermaciej>
I will probably land the first patch today

[12:18:20.0000] <MikeSmith>
cool

[12:18:33.0000] <othermaciej>
but it is missing features and super buggy from the parsing and part replacement perspective

[12:18:42.0000] <othermaciej>
annevk: btw I hate 'URLUtils' as an interface name

[12:18:54.0000] <othermaciej>
annevk: it really should be something like 'URLParts' or 'URLDecomposition' or something

[12:18:57.0000] <annevk>
hah, I copied something from Hixie I think

[12:19:04.0000] <annevk>
that might be better

[12:19:12.0000] <annevk>
it's not exposed to script though

[12:19:17.0000] <othermaciej>
yeah I know

[12:19:26.0000] <othermaciej>
but I matched the interface name in our IDL anyway

[12:19:39.0000] <othermaciej>
(so people reading our code and the spec don't get confused)

[13:57:03.0000] <Hixie>
foolip: you around? you got any ideas for how to fix https://www.w3.org/Bugs/Public/show_bug.cgi?id=24350 ?

[15:59:35.0000] <annevk>
whoa

[15:59:38.0000] <annevk>
major shift in promises

[15:59:43.0000] <annevk>
for the better

[15:59:45.0000] <annevk>
it seems

[15:59:57.0000] <Domenic_>
:)


2014-01-31
[16:04:18.0000] <heycam>
annevk, Domenic_, anything I need to change in IDL?

[16:04:32.0000] <Domenic_>
heycam: It sounds like Promise.cast will get renamed to Promise.resolve

[16:04:45.0000] <heycam>
Domenic_, ok

[16:04:57.0000] <heycam>
Domenic_, in the next ES6 draft I guess?

[16:05:03.0000] <Domenic_>
heycam: yeah

[16:05:08.0000] <heycam>
Domenic_, ok cool

[17:30:36.0000] <dominiquenf>
good evening

[00:42:01.0000] <zcorpan>
is http://www.khronos.org/registry/typedarray/specs/latest/ the current spec for typed arrays or has it moved to ES land?

[00:43:08.0000] <zcorpan>
/me finds https://people.mozilla.org/~jorendorff/es6-draft.html#sec-typedarray-objects

[01:02:19.0000] <zcorpan>
yoav: yeah so long as the black-box observable behavior is equivalent it can be implemented in any way

[01:02:58.0000] <yoav>
zcorpan: I agree in 100%

[01:04:05.0000] <zcorpan>
yoav: what do you think this should do? <!doctype html><div id=x><script>x.remove();</script><img src=foo onload=alert(1)>

[01:04:32.0000] <zcorpan>
yoav: (the img will be inserted into the removed div by the parser)

[01:05:13.0000] <yoav>
I think that the src should be triggered as soon as the img is inserted (even if the div is removed)

[01:05:30.0000] <yoav>
The only reason we need to wait, is to see if the parent is picture

[01:05:56.0000] <yoav>
But I completely agree that this area should be well specified, and currently it isn't

[01:07:25.0000] <zcorpan>
ok, then it's different to "inserted to the document"

[01:07:54.0000] <zcorpan>
i'm pondering if i should take a stab at specifying this

[01:11:42.0000] <yoav>
zcorpan: If you're willing, it'd be highly appreciated

[01:13:37.0000] <zcorpan>
yoav: do i get any chocolate? :-)

[01:14:47.0000] <yoav>
zcorpan: I'll see what I can do :)

[01:15:15.0000] <zcorpan>
hehe

[01:16:07.0000] <Ms2ger>
Dammit

[01:48:21.0000] <yoav>
zcorpan: The plot thickens...

[01:54:30.0000] <zcorpan>
yoav: btw downloading immediately in the script case is wrong per spec already even without <picture>, since there's crossorigin and srcset. the spec requires to await a stable state

[01:56:00.0000] <yoav>
zcorpan: HTMLImageElement can tell if it *already* contains such attributes when 'src' is encountered

[01:56:07.0000] <yoav>
It cannot tell what it parent is

[01:56:33.0000] <yoav>
I don't know how "stable state" is defined

[01:57:10.0000] <zcorpan>
yoav: it basically means to let the script finish

[01:57:17.0000] <yoav>
OK

[01:57:32.0000] <zcorpan>
yoav: so that it doesn't matter in which order you set src and crossorigin in a script

[01:58:13.0000] <yoav>
I think that in practice it does...

[01:58:13.0000] <zcorpan>
http://www.whatwg.org/specs/web-apps/current-work/multipage/embedded-content-1.html#update-the-image-data step 8

[01:58:32.0000] <zcorpan>
if it does it's a bug

[01:58:41.0000] <yoav>
Interesting

[01:58:57.0000] <yoav>
Can you comment that on the blink-dev discussion?

[01:59:12.0000] <zcorpan>
sure

[01:59:55.0000] <yoav>
Practically, it means that an HTML parser script just has to add the image to its parent before terminating

[02:02:35.0000] <zcorpan>
the spec says to await a stable state for the html parser case too, which means to wait until the parser yeilds to the event loop, however that's not technically necessary i think since the html parser sets all attributes at the same time as creating the element (this might not match impl reality though)

[02:03:43.0000] <yoav>
zcorpan: Yeah, current parser (at least Blink/WebKit) sets all the attributes upon creation

[02:34:38.0000] <hsivonen>
annevk-cloud: FYI: https://groups.google.com/forum/#!topic/mozilla.dev.l10n/PH7tF9m8vUY (encouraging a UTF-8 default for outgoing email)

[02:43:26.0000] <MikeSmith>
hsivonen: about Client Hints, was wondering why you were asking earlier if howcome had an opinion on it. You think he'd not be favorable?

[02:43:48.0000] <Ms2ger>
CH CH

[02:44:14.0000] <Ms2ger>
Client Hints Considered Harmful

[02:51:32.0000] <hsivonen>
MikeSmith: When I read about CSS Regions Considered Harmful,  some of the arguments seemed applicable to Client Hints.

[02:53:07.0000] <MikeSmith>
ah ok

[02:57:15.0000] <zcorpan>
hsivonen: which arguments? problem #2 ?

[03:07:07.0000] <hsivonen>
zcorpan: yes

[03:09:37.0000] <zcorpan>
from what i understand, CH doesn't intend to solve art direction but leaves that to <picture>. however if the user zooms it seems reasonable that the browser should reload the image, dunno what the I-D says about that

[03:11:07.0000] <hsivonen>
zcorpan: and if you use CH on HTML resources, does it mean a reasonable browser becomes Netscape 4.x when resizing the window (includes rotation on mobile)?

[03:12:14.0000] <zcorpan>
does CH apply to any resource? i was under the impression it was only for <img> requests (though i haven't read the spec)

[03:12:48.0000] <hsivonen>
when I argued it was about images, karl said it's not just about images

[03:12:58.0000] <hsivonen>
I don't recall anything in the spec restricting it to images

[03:12:59.0000] <zcorpan>
hsivonen: the DPR doesn't change when you resize the window though

[03:13:07.0000] <hsivonen>
also, sicking argued for a non-image case

[03:13:17.0000] <hsivonen>
zcorpan: width does

[03:39:54.0000] <zcorpan>
hsivonen: how?

[03:43:24.0000] <hsivonen>
zcorpan: resizing the window changes the width of the view port

[03:43:57.0000] <zcorpan>
hsivonen: the width of the viewport doesn't affect DPR

[03:44:12.0000] <hsivonen>
zcorpan: DPR isn't the only kind of client hint

[03:44:24.0000] <hsivonen>
zcorpan: there's another one for width

[03:44:37.0000] <zcorpan>
ah, ok

[03:44:42.0000] <hsivonen>
zcorpan: though the spec isn't really clear on the width of what exactly

[03:45:37.0000] <hsivonen>
see https://bugzilla.mozilla.org/show_bug.cgi?id=935216#c20

[03:48:00.0000] <zcorpan>
the width hint seems like a bad idea to me

[03:49:12.0000] <hsivonen>
zcorpan: both client hints seem like bad ideas to me

[06:00:50.0000] <zcorpan>
jgraham: why doesn't test(function(t) { }) have the test object as the argument (t is undefined)?

[06:15:06.0000] <jgraham>
zcorpan: I don't think there's any particular reason.

[06:15:24.0000] <jgraham>
It's not really clear what the use case is, I guess

[06:15:39.0000] <zcorpan>
t.add_cleanup

[06:15:56.0000] <jgraham>
Oh, yeah so I guess with that there is a use case

[06:17:19.0000] <jgraham>
zcorpan: Want to make a patch? You just need to change the call to test_obj.step() in function test(){} to look like the one in function async_test(){}

[06:17:32.0000] <jgraham>
i.e. add tet_obj, test_obj as arrguments

[06:17:46.0000] <zcorpan>
yeah sure, but will have to wait until monday

[06:17:47.0000] <jgraham>
although I am slightly worried that will make the this object different

[06:18:18.0000] <jgraham>
Dunno if undefined, this_obj would be a better bet

[06:20:51.0000] <zcorpan>
is that a problem for async_test? what is this_obj here?

[06:21:50.0000] <zcorpan>
isn't test_obj the this object for both test and async_test now?

[06:22:09.0000] <jgraham>
I think in test() it's the global

[06:23:03.0000] <jgraham>
Oh, no

[06:23:08.0000] <jgraham>
the code is just strange

[06:23:15.0000] <jgraham>
OK, patch should be quite sae then

[06:23:18.0000] <jgraham>
*dafe

[06:23:20.0000] <jgraham>
*safe

[06:23:23.0000] <jgraham>
Christ

[06:24:52.0000] <zcorpan>
why does async_test run step with three arguments? the function only takes two arguments?

[06:25:23.0000] <zcorpan>
oh wait

[06:25:25.0000] <zcorpan>
nm

[06:26:15.0000] <zcorpan>
yeah so it's just adding ", test_obj, test_obj"

[06:26:40.0000] <jgraham>
Yeah, the first argument is the callback, the second is the this to use and any remaining arguments are the parameters to pass to the callback

[06:33:02.0000] <zcorpan>
/me *poof*

[07:17:05.0000] <mathiasbynens>
https://twitter.com/RobbertAtWork/status/429271270052872193 — “<svg> elements in <template> won't work: they're parsed in the HTML namespace. We're gonna need XML to do this template thing properly.”

[07:25:13.0000] <MikeSmith>
oh boy

[07:27:47.0000] <MikeSmith>
well that seems intead like a very good argument for us to change to parsing all SVG using the HTML parser instead of the XML parser

[07:27:58.0000] <stockwell>
I'd like to help by writing some test cases. What's the process for doing that?

[07:28:45.0000] <MikeSmith>
stockwell: https://github.com/w3c/web-platform-tests/blob/master/README.md#contributing

[07:29:14.0000] <stockwell>
<MikeSmith> thank you

[07:33:27.0000] <gsnedders>
Is there any ETA for ES6 being basically done?

[08:04:57.0000] <Domenic_>
gsnedders: http://esdiscuss.org/topic/es6-timetable-and-current-status

[08:07:34.0000] <gsnedders>
Domenic_: Braw.

[08:08:11.0000] <gsnedders>
/me remembers this is #whatwg and en-gb is probably better than sco.

[08:08:41.0000] <gsnedders>
so, uh, thanks.

[08:09:44.0000] <Domenic_>
np :P

[08:18:58.0000] <MikeSmith>
Domenic_: so what was the recent big change to Promises? the .cast -> .resolve change?

[08:19:15.0000] <Domenic_>
MikeSmith: yeah. "big" was overstating it from an API perspective

[08:19:31.0000] <MikeSmith>
ah OK

[08:19:35.0000] <Domenic_>
it is kind of big behind the scenes because some planned ES7 changes that some people wanted were decided against.

[08:19:44.0000] <MikeSmith>
oh

[08:19:49.0000] <Domenic_>
which allows simplification of the internal model

[08:19:54.0000] <Domenic_>
(fairly drastic simplication)

[08:19:59.0000] <MikeSmith>
aha

[08:20:09.0000] <Domenic_>
but from an actual consumer POV the only change is that .cast becomes .resolve and resolve dies

[08:20:50.0000] <MikeSmith>
well the behind-the-scenes change sounds like a very good thing

[08:21:07.0000] <MikeSmith>
because simpler usually being better

[08:21:27.0000] <MikeSmith>
and drastically simpler especially so

[08:28:07.0000] <Domenic_>
indeed, i am quite happy

[08:29:53.0000] <MikeSmith>
cool

[08:30:51.0000] <MikeSmith>
jgraham: somebody should come up with a way we can track data about test cases that have resulted in spec bugs being found

[08:32:02.0000] <MikeSmith>
(in context of https://critic.hoppipolla.co.uk/showcomment?chain=1646 -- see the last comment from Ms2ger)

[08:32:18.0000] <MikeSmith>
(and bug https://www.w3.org/Bugs/Public/show_bug.cgi?id=24404)

[08:33:52.0000] <jgraham>
MikeSmith: Yeah. We should track many things that we can't / don't

[08:34:03.0000] <MikeSmith>
yeah I know

[08:34:35.0000] <jgraham>
But I agree that makes the list

[08:34:36.0000] <MikeSmith>
that's why I was suggesting assigning it to the "somebody", who seems to have infinite time

[08:34:37.0000] <jgraham>
:)

[08:34:41.0000] <MikeSmith>
yay

[09:29:22.0000] <reyre>
foolip: ping

[09:43:10.0000] <annevk>
Man, for a moment I thought the microtask discussion was over

[09:52:53.0000] <annevk>
I wish I could answer the range question without doing a bunch of research

[09:53:47.0000] <Hixie>
hsivonen: you around?

[09:54:01.0000] <Hixie>
hsivonen: haven't heard your opinion of the UI proposals in my registry e-mail, would love to have your feedback

[10:05:41.0000] <dglazkov>
good morning, Whatwg!

[10:18:44.0000] <Hixie>
why do dictionaries have constructors?

[10:33:46.0000] <MikeSmith>
Hixie: I'd also like to hear what hsivonen is thinking on that

[10:34:10.0000] <MikeSmith>
in the mean time I will try to write up a reply myself this weekend

[10:35:03.0000] <annevk-cloud>
Hixie: they do? Sounds weird, although they can be returned they do not have exposed names

[10:35:20.0000] <Hixie>
if they have a constructor the name is exposed

[10:35:34.0000] <Domenic_>
are there examples of ones with constructors? seems bad

[10:37:06.0000] <Hixie>
well i assume there was some use case...

[10:37:12.0000] <Hixie>
i'm just curious what it was

[11:43:22.0000] <MikeSmith>
somebody recommended a good IRC client for OSX here the other day

[11:43:32.0000] <MikeSmith>
a newer one, not Colloquy

[11:43:49.0000] <MikeSmith>
I didn't pay attention at the time because I didn't care because I just irssi and screen

[11:44:54.0000] <MikeSmith>
but now I'm trying to help somebody get set up with IRC so now I care, so maybe can somebody remind me what the name was?

[11:45:09.0000] <MikeSmith>
Textual?

[12:04:32.0000] <Ms2ger>
Hixie, I thought the constructors for dictionaries was for points or something, but http://dev.w3.org/fxtf/geometry/ has those as interfaces

[12:55:32.0000] <sicking>
Hixie: shouldn't BroadcastChannel inherit EventTarget?

[13:24:58.0000] <Hixie>
sicking: sounds plausible

[13:25:24.0000] <sicking>
Hixie: event dispatch won't work otherwise

[13:25:39.0000] <Hixie>
sicking: fixed, reload in a minute or so

[13:25:44.0000] <sicking>
thanks

[13:25:52.0000] <Hixie>
np, thanks for catching it

[13:42:09.0000] <annevk>
MikeSmith: LimeChat is nice

[13:42:52.0000] <MikeSmith>
annevk: OK thanks

[13:43:06.0000] <MikeSmith>
I think Textual is based on LimeChat originally

[13:43:10.0000] <Domenic_>
still a big fan of irccloud

[13:44:16.0000] <jgraham>
/me doesn't understand why you would move off irssi

[13:44:57.0000] <jgraham>
Oh,for someone else

[13:45:01.0000] <jgraham>
Fair enough

[13:47:03.0000] <Hixie>
i'm likely to work on the web focus model refactoring soon so if people have comments on my proposal, now's the time https://www.w3.org/Bugs/Public/show_bug.cgi?id=23475

[15:27:21.0000] <Hixie>
jgraham: the bug thing still seems out of date?

[15:29:05.0000] <Hixie>
jgraham: yeah, i get a 500 when i do an update request

[15:46:31.0000] <annevk>
I might have comments on how focus works a couple of years from now

[15:46:40.0000] <Hixie>
heh

[15:46:41.0000] <annevk>
When I have time to learn about UI events :-P

[15:46:45.0000] <Hixie>
hopefully it'll be a solved issue by then.

[15:46:50.0000] <Hixie>
the focus part, that is

[15:46:54.0000] <Hixie>
UI events won't be

