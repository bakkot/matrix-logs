2011-05-01
[18:21:00.0000] <nog_lorp>
hello

[19:05:00.0000] <MikeSmith>
Hixie: OK, thanks

[19:05:01.0000] <MikeSmith>
I did already commit it that way yesterday

[19:06:00.0000] <MikeSmith>
the main reason I was asking was that the behavior's not totally consistent in that we don't currently do the same for some other cases where the spec provides some additional guidance

[19:07:00.0000] <MikeSmith>
for example, for Set-Cookie

[19:08:00.0000] <MikeSmith>
where  we could emit "To set cookies, use HTTP headers instead." or whatever

[19:11:00.0000] <MikeSmith>
but anyway, it's a bigger priority to implement checks for all the actual document-conformance requirements in the spec

[21:35:00.0000] <Hixie>
abarth: yt?

[21:47:00.0000] <Hixie>
anyone got a webkit build handy?

[21:48:00.0000] <Hixie>
does http://software.hixie.ch/utilities/js/live-dom-viewer/saved/970 fail in safari/webkit too, or is it a chrome bug?

[21:50:00.0000] <heycam>
Hixie, nothing changed colour for me in a semi-recent WebKit

[21:50:01.0000] <Hixie>
k thx

[23:05:00.0000] <othermaciej>
Hixie: nothing changes in a fresh WebKit build - what's the bug in Chrome?

[23:06:00.0000] <othermaciej>
/me is surprised that a Chrome-specific bug would even be possible here

[23:06:01.0000] <Hixie>
it focuses the <output>

[23:06:02.0000] <Hixie>
yeah, me too

[23:06:03.0000] <othermaciej>
hmm, let me try in full keyboard access mode in Safari

[23:06:04.0000] <Hixie>
(only happens if the output is display:block)

[23:07:00.0000] <othermaciej>
it happens in Safari in Full Keyboard Access mode

[23:07:01.0000] <othermaciej>
so it's just a bug in WebKit focusability rules

[23:08:00.0000] <othermaciej>
it's hell weird that display: block on the <output> matters

[08:04:00.0000] <AryehGregor>
<Hixie> AryehGregor: are you going to mention the things that were discussed in #whatwg earlier? <-- Which things that we discussed in #whatwg earlier?

[08:04:01.0000] <AryehGregor>
I plan to come up with as many specific examples of spec or spec organization forks that I can.

[08:05:00.0000] <AryehGregor>
The two that I know of offhand are the WHATWG splitting from the W3C, and the W3C being created because TBL had too many problems in the IETF, which are both excellent support for forking.

[08:05:01.0000] <AryehGregor>
Other people have mentioned an IETF fork of some version of HTML, what's the story on that?

[08:05:02.0000] <AryehGregor>
And does anyone know of other examples?

[08:05:03.0000] <Dashiva>
<othermaciej> One thing I wonder about is whether the W3C intends to take action against the ISO HTML, XHTML-MP, CHTML, XHTML Basic, XHTML 2, WML, WTVML, XHTML-Print, WHATWG HTML, or HDML forks of HTML

[08:06:00.0000] <AryehGregor>
Oh, it was ISO that forked it, not the IETF.

[08:06:01.0000] <AryehGregor>
Right.

[08:06:02.0000] <AryehGregor>
Surely XHTML 2 doesn't count, since that's a W3C-sponsored fork?

[08:08:00.0000] <Dashiva>
I guess that depends on what the purpose of the ban on forks is

[08:08:01.0000] <MikeSmith>
CE-HTML

[08:09:00.0000] <MikeSmith>
and Open IPTV Forum "Declarative Application Environment V2.0"

[08:09:01.0000] <MikeSmith>
http://www.openiptvforum.org/specifications.html

[08:09:02.0000] <MikeSmith>
take a look a that spec some time -

[08:09:03.0000] <MikeSmith>
http://www.openiptvforum.org/docs/Release2/OIPF-T1-R2-Specification-Volume-5-Declarative-Application-Environment-v2_0-2010-09-07.pdf

[08:10:00.0000] <Dashiva>
Heh, it references HTML5

[08:10:01.0000] <AryehGregor>
Is anyone interested in helping with a wiki page to outline all the arguments for why forking is either harmless or good?

[08:11:00.0000] <Dashiva>
That sounds like trying to prove a negative...

[08:11:01.0000] <AryehGregor>
No, you can cite all the existing forks and point out that they were all either harmless or good.

[08:11:02.0000] <AryehGregor>
That's evidence.

[08:12:00.0000] <Dashiva>
Anecdotal evidence

[08:12:01.0000] <wilhelm_>
*-MP was not good. :P

[08:12:02.0000] <AryehGregor>
As opposed to no evidence, which is what the forking-is-bad crowd has.

[08:12:03.0000] <AryehGregor>
You can't expect randomized controlled double-blind trials for questions like "Is allowing spec forks a good idea?"  You've got to work with what you have.

[08:13:00.0000] <AryehGregor>
I'll have only limited time to work on a real response to the survey unless Hixie decides it's part of my contract.

[08:13:01.0000] <AryehGregor>
(Why can't contracts just say stuff like "Do something useful and web standards-related"?)

[08:13:02.0000] <Dashiva>
It's a mystery

[08:13:03.0000] <AryehGregor>
That seems to be the job description of some full-time employees.

[08:14:00.0000] <Dashiva>
But really, several of the ones othermaciej listed are non-harmless in my opinion

[08:14:01.0000] <AryehGregor>
Interesting.  Which ones?

[08:14:02.0000] <Dashiva>
The ones building on XHTML, because they fragment the ecosystem and lead to a waste of time and effort when they fail

[08:14:03.0000] <AryehGregor>
They still probably don't strongly support the case of restrictive copyright licensing, given that a) they might not actually infringe copyright, and b) the W3C doesn't appear interested in suing even if they do.

[08:15:00.0000] <othermaciej>
some I'm not sure totally count as forks

[08:15:01.0000] <AryehGregor>
So, like, XHTML 2?

[08:15:02.0000] <othermaciej>
but XHTML-MP is pretty bad, as it sends content purporting to be XHTML but with different processing rules

[08:15:03.0000] <othermaciej>
(really weird stuff too)

[08:15:04.0000] <othermaciej>
CHTML is bad for similar reasons

[08:16:00.0000] <othermaciej>
these are bad not only for browsers that implement them but also, when such content is posted, it creates non-interoperable worlds and makes it hard to successfully display all content

[08:16:01.0000] <othermaciej>
WML is less bad in that regard since it has a distinct content type but I'm not totally sure if it is fair to call it a fork

[08:17:00.0000] <othermaciej>
it certainly copies many of the elements in HTML

[08:17:01.0000] <AryehGregor>
But these are all basically unsuccessful, aren't they?

[08:17:02.0000] <AryehGregor>
They're only really harmful if they cause real problems, not if they would have caused problems had they been successful.

[08:17:03.0000] <othermaciej>
there is a huge amount of XHTML-MP, CHTML and WML content out there

[08:17:04.0000] <AryehGregor>
Interesting.

[08:17:05.0000] <othermaciej>
in east asia, there is huge market pressure for any mobile browser that gets released to support one or more of them

[08:17:06.0000] <AryehGregor>
I've never heard of any of them, I don't think.

[08:17:07.0000] <AryehGregor>
Oh, they're mobile things.

[08:18:00.0000] <AryehGregor>
Well, I'll briefly look at some of them, I guess.

[08:18:01.0000] <othermaciej>
yes, mobile web stuff

[08:18:02.0000] <wilhelm_>
A lot of operators push for *-MP compliance, too.

[08:18:03.0000] <wilhelm_>
(Which sucks.)

[08:18:04.0000] <othermaciej>
many of the forks from my list are W3C-sponsored but are nonetheless incompatible fors

[08:18:05.0000] <othermaciej>
XHTML2 is much less damaging than the things I listed since no one uses it

[08:18:06.0000] <AryehGregor>
I don't think W3C forks are germane to the licensing question at hand.

[08:19:00.0000] <AryehGregor>
Since they'd be allowed under any license, presumably.

[08:19:01.0000] <othermaciej>
none of these are germane to the licensing issue at hand

[08:19:02.0000] <AryehGregor>
Why not?

[08:19:03.0000] <othermaciej>
none of them were prevented by the W3C Document License

[08:19:04.0000] <othermaciej>
which does not allow forking

[08:19:05.0000] <AryehGregor>
That's evidence that the restrictive license is ineffective, which is germane.

[08:20:00.0000] <othermaciej>
or to look at it another way, all of them are germane, since they show that anti-forking license provisions are not effective at preventing forking

[08:20:01.0000] <AryehGregor>
Right, exactly.

[08:20:02.0000] <AryehGregor>
/me has to go now, more later . . . if he can find the time

[08:20:03.0000] <othermaciej>
the fact that the W3C itself forks is even more germane, since no license you could imagine could prevent that

[08:21:00.0000] <AryehGregor>
I'm glad we got those extra two licensing options up.  I wonder how the results of the survey will be considered by the people whose business it is to consider them.

[10:54:00.0000] <abarth>
Hixie: pong

[10:54:01.0000] <MikeSmith>
hmm, Canonical XML 2.0

[10:54:02.0000] <MikeSmith>
dare I look

[11:18:00.0000] <Hixie>
AryehGregor: feel free to use a few of google's hours to work on a response that once and for all explains all the relevant issues here, but if you do then send me regular updates so i can give you more direct feedback

[11:21:00.0000] <Hixie>
abarth: if you are trying to hash passwords in a login db, then presumably you want to use MHAC with some algorithm like SHA-256 or whatever. but what key do you use? can you use the username as a key, or is that a Bad Idea?

[11:22:00.0000] <abarth>
i bet there's some canonical explanation for how to do this

[11:22:01.0000] <abarth>
but the general approach is to use a hash, not an HMAC

[11:23:00.0000] <abarth>
with a public and a private salt

[11:23:01.0000] <Hixie>
k

[11:23:02.0000] <Hixie>
so there's no good way to avoid a private salt?

[11:24:00.0000] <Hixie>
i was hoping to be able to do a "SELECT ... WHERE ... AND password=?" instead of selecting the row then comparing the password

[11:24:01.0000] <Hixie>
so that if the password is wrong, the code never even gets the userid

[11:24:02.0000] <Hixie>
it's not a huge deal if it's not possible

[11:24:03.0000] <abarth>
the private salt is just there to slow down the hash function

[11:25:00.0000] <abarth>
so you can avoid it if you pick a slow hash function

[11:25:01.0000] <abarth>
the public salt is technically supposed to be per-password though

[11:25:02.0000] <abarth>
to prevent the attack from attacking all the passwords at once

[11:25:03.0000] <abarth>
with a dictionary

[11:25:04.0000] <abarth>
s/attack/attacker/

[11:26:00.0000] <AryehGregor>
Hixie, if your DBMS supports the relevant functions, you can do something like "WHERE ... password = SHA256(salt + 'password')", if the user table has a salt column that contains the per-user salt.

[11:27:00.0000] <AryehGregor>
Of course, that's not indexable, so it won't scale to many users.

[11:28:00.0000] <AryehGregor>
Why would you want to look up users by their password anyway, though?

[11:28:01.0000] <AryehGregor>
Other than to detect weak passwords, maybe, in which case it's obviously going to be O(N) and indexing doesn't make much of a difference one way or the other.

[11:29:00.0000] <Philip`>
(It'd be indexable in Postgres, I think)

[11:29:01.0000] <AryehGregor>
Philip`, how?

[11:29:02.0000] <AryehGregor>
Postgres supports indexes on expressions, but what expression could you index here?

[11:29:03.0000] <Philip`>
(unless I'm missing understanding, which I probably am)

[11:29:04.0000] <AryehGregor>
In "WHERE ... password = SHA256(salt + 'password')", password and salt are both DB columns.

[11:30:00.0000] <AryehGregor>
And the string 'password' is provided literally by the application for the specific query.

[11:31:00.0000] <Philip`>
I think I was reading the literal and column the other way around

[11:31:01.0000] <Philip`>
(which would be silly)

[11:39:00.0000] <Hixie>
abarth: yeah, hence my question about using the username as the public salt

[11:41:00.0000] <Hixie>
AryehGregor: the actual query would be WHERE username=? AND password=?

[11:41:01.0000] <Hixie>
AryehGregor: so that it returns nothing when the password is wrong

[11:41:02.0000] <AryehGregor>
Hixie, oh, I see.

[11:41:03.0000] <abarth>
that seems fine

[11:41:04.0000] <Hixie>
AryehGregor: let me see if i can use a SHA256() function

[11:42:00.0000] <abarth>
but this isn't my area of expertise

[11:42:01.0000] <Hixie>
abarth: k

[11:42:02.0000] <AryehGregor>
Ideally your public salt should be long enough that you foil rainbow table attacks.

[11:42:03.0000] <AryehGregor>
For that purpose, it's probably best to make it a not-too-short randomish string.

[11:42:04.0000] <Hixie>
looks like sqlite3 doesn't have hash-related functions

[11:43:00.0000] <Hixie>
wonder if i can add custom functions from perl...

[11:43:01.0000] <AryehGregor>
Is this a WebSQL use-case?

[11:43:02.0000] <Hixie>
no it's just a toy i'm playing with at home

[11:44:00.0000] <AryehGregor>
I don't actually get the use-case at all, though.  If the attacker can query the DB, why don't they just do "SELECT * FROM user"?  Because they only have the right to execute prepared statements?

[11:44:01.0000] <Hixie>
ho ho ho, you _can_ add functions in perl

[11:44:02.0000] <Hixie>
that will make my life easier

[11:44:03.0000] <AryehGregor>
How does that even make sense with SQLite, though?  If you can query an SQLite database, surely you have read access to the database file?

[11:45:00.0000] <Hixie>
AryehGregor: the concern is highly theoretical and mare an issue of having clear boundaries in code, but to the extent that it is a concern, the theoretical attack is someone who can cause the perl code to leak data from its environment

[11:46:00.0000] <Hixie>
AryehGregor: if someone is running their own arbitrary code, then yeah, they can read the db, at which point it's why we're hashing it

[11:47:00.0000] <AryehGregor>
So like someone who can read the contents of your Perl program's memory, but can't control it, and you're worried about them reading the userid in the brief window before it's garbage-collected or something . . . ?

[11:47:01.0000] <AryehGregor>
If so, why don't you first retrieve the hash and check if it matches, and only then query the id?

[11:48:00.0000] <Philip`>
Given that SQLite doesn't run in a separate process, if they can read the Perl program's memory then they can read the raw database data, probably

[11:49:00.0000] <AryehGregor>
That too.

[11:49:01.0000] <Hixie>
AryehGregor: my desire does not a priori stem from a security concern

[11:50:00.0000] <Hixie>
AryehGregor: it's about keeping clear boundaries in the code about what code gets to see what

[11:50:01.0000] <Hixie>
for readability

[11:51:00.0000] <AryehGregor>
k.

[11:52:00.0000] <Hixie>
and it gives me an opportunity to play with this function creation thing :-)

[11:54:00.0000] <Philip`>
Injecting custom Perl functions into SQLite so they can run inside SQL queries is meant to *increase* readability? :-)

[11:55:00.0000] <Hixie>
hehe

[11:55:01.0000] <Hixie>
actually in this case i think it will

[11:55:02.0000] <Hixie>
though i agree with your skepticism :-)

[11:57:00.0000] <Philip`>
/me wonders if there's a Perl module equivalent to http://apidoc.apsw.googlecode.com/hg/vtable.html (where you can redefine the whole table storage mechanism in a scripting language)

[12:29:00.0000] <AryehGregor>
Hixie et al., I started a page on forking on the WHATWG wiki: http://wiki.whatwg.org/wiki/Forking

[12:29:01.0000] <AryehGregor>
If anyone wants to fill it out some more, please do.

[12:29:02.0000] <AryehGregor>
I don't know if I'll work on it further.

[12:30:00.0000] <AryehGregor>
(I'll probably work on improving my personal survey response later on my own time)

[13:07:00.0000] <zewt>
how long until someone forks the page on forking

[16:52:00.0000] <Hixie>
can someone explain why Lawrence Rosen keeps talking about patents when we're trying to discuss the copyright license?

[16:52:01.0000] <Hixie>
isn't he a lawyer? you'd think he'd know better that to try to confuse these unrelated matters.


2011-05-02
[17:11:00.0000] <Hixie>
AryehGregor: i updated the wiki page with some recent arguments

[17:11:01.0000] <Hixie>
http://wiki.whatwg.org/wiki/Forking

[18:30:00.0000] <llrcombs>
ohai

[18:30:01.0000] <llrcombs>
about the cache manifest spec

[18:32:00.0000] <llrcombs>
may I suggest that the manifest spec include another field for each vile, specifying the last-modified date of the file, so that the client can auto-update the file if it's been modified since the cache was stored?

[21:26:00.0000] <MikeSmith>
hmm

[21:27:00.0000] <MikeSmith>
the spec doesn't say anything about what the allowed value of the mediagroup attribute is

[21:29:00.0000] <MikeSmith>
clearly it's not meant to be a list of tokens

[21:29:01.0000] <MikeSmith>
so any string?

[21:41:00.0000] <MikeSmith>
hmm, I guess if no additional constraints are specified for any particular attribute, by default it's just text

[21:41:01.0000] <MikeSmith>
or text and character references

[01:37:00.0000] <zcorpan>
"Whether the W3C allows forking or not, and even if we grant that a license could stop this, this scenario could already happen because the entire HTML spec is already under a liberal license at the W3C." http://wiki.whatwg.org/wiki/Forking - s/W3C./WHATWG./ ?

[02:00:00.0000] <othermaciej>
I think Lawrence Rosen only likes the Option 1 and Option 3 licenses because he came up with them

[02:10:00.0000] <jgraham>
zcorpan: I think the right response is "it's a wiki". But I noticed the same mistake and didn't fix it so…

[02:12:00.0000] <zcorpan>
fixed

[02:18:00.0000] <othermaciej>
hmm

[02:19:00.0000] <othermaciej>
I'm not sure it's right to call either CHTML or HDML "WC-hosted forks"

[02:19:01.0000] <jgraham>
A reasonable response to "there is nothing special about W3C sanctioned forks" might be that non-W3C forks aren't covered by the same IP commitments as W3C forks; so W3C forks are equivalent from a brand-dilution, confusion, fragmentation point of view, but not from a "people injecting stuff and charging for it later" point of view

[02:19:02.0000] <othermaciej>
they were both originally developed outside the W3C, published as member submission notes, and then rejected and developed outside the W3C

[02:19:03.0000] <othermaciej>
(afaik)

[02:28:00.0000] <jgraham>
(I don't know if there is a good response to that other than "the risk is outweight by the positive effects that the ability to fork brings")

[02:29:00.0000] <othermaciej>
whaoh

[02:29:01.0000] <othermaciej>
never heard of this before, HTML 4.0 Mobile: http://www.w3.org/TR/1999/NOTE-html40-mobile-19990315/

[02:29:02.0000] <othermaciej>
(has its own DTD and everything)

[02:30:00.0000] <othermaciej>
also, XHTML+SMIL Profile: http://www.w3.org/TR/2002/NOTE-XHTMLplusSMIL-20020131/

[02:31:00.0000] <othermaciej>
(not entirely sure if that is an HTML/XHTML fork)

[02:31:01.0000] <jgraham>
Ah, another entry from the graveyard "mobile will never be able to browse the real web"

[02:31:02.0000] <jgraham>
+of

[02:32:00.0000] <othermaciej>
it seems like the W3C forks HTML more than the rest of the world put together

[02:32:01.0000] <jgraham>
othermaciej: Interesting. A design goal of XHTML and XHTML2 was modularity so that people could take parts of specs and recombine them into a different form. That seems a lot like forking

[02:32:02.0000] <othermaciej>
the whole XHTML Modularization thing?

[02:33:00.0000] <jgraham>
Yeah

[02:33:01.0000] <othermaciej>
I do not know what that is all about

[02:33:02.0000] <othermaciej>
I am not even sure whether XHTML 1.1 could reasonably be called an incompatible fork of 1.0

[02:34:00.0000] <jgraham>
"This modularization provides a means for subsetting and extending XHTML, a feature needed for extending XHTML's reach onto emerging platforms"

[02:34:01.0000] <jgraham>
http://www.w3.org/TR/xhtml-modularization/

[02:34:02.0000] <jgraham>
That sounds a lot like "forking" to me

[02:35:00.0000] <jgraham>
Albeit that you were probably not supposed to change the modules you reused. But you could add or subtract modules

[02:35:01.0000] <othermaciej>
I guess advocates of this approach would distinguish reusability and extensibility from forking

[02:35:02.0000] <othermaciej>
though forkability is really just reusability with arbitrarily fine granularity

[02:35:03.0000] <jgraham>
I don't see the practical difference

[02:36:00.0000] <jgraham>
In particular I don't see the difference from the point of view of IP

[02:36:01.0000] <othermaciej>
restricting the granularity of reuse may encourage greater pockets of interoperability (in theory)

[02:37:00.0000] <othermaciej>
it's funny to me that opinions on allowing forking per license, and on allowing free extension via "distributed extensibility" seem to be anticorrelated

[02:37:01.0000] <jgraham>
Yeah, that seems like a very theoretical outcome

[02:37:02.0000] <othermaciej>
with the exception of notable individuals like Sam Ruby, who favors allowing both, which strikes me as a laudably consistent set of views

[02:38:00.0000] <othermaciej>
(note: I mean that sincerely, not trying to be snarky in any way)

[02:38:01.0000] <hsivonen>
jgraham: wow. indeed the whole Modularization thing is interesting in the context of being scared of licenses that allow forking

[02:38:02.0000] <hsivonen>
jgraham: I had forgotten about Modularization

[02:38:03.0000] <jgraham>
hsivonen: Lucky you ;)

[02:38:04.0000] <hsivonen>
jgraham: :-)

[02:38:05.0000] <MikeSmith>
othermaciej: I'd never hear of HTML 4.0 Mobile either

[02:38:06.0000] <othermaciej>
I am amazed at how many different HTML forks have been published in some form by the W3C

[02:38:07.0000] <MikeSmith>
HTML 4.0 Mobile looks like a proto-"Mobile Web Best Practices"

[02:39:00.0000] <jgraham>
othermaciej: I don't think distributed extensibility and forking have much to do with each other really. At least the main arguments in favour of allowing forking aren't the same as the main arguments people use for DE

[02:39:01.0000] <othermaciej>
that's not even counting the mainline successor specs, even though you could argue that XHTML1 is an incompatible fork of HTML4, and perhaps likewise for XHTML 1.1

[02:39:02.0000] <MikeSmith>
hmm, the did actually publish a HTML 4.0 Mobile DTD - HTML 4.0 Mobile

[02:39:03.0000] <MikeSmith>
http://www.w3.org/TR/1999/NOTE-html40-mobile-19990315/DTD/html40-mobile.dtd

[02:39:04.0000] <othermaciej>
HTML5 plausibly is a successor to HTML4 and XHTML1 so I'll give the W3C a pass on that

[02:40:00.0000] <othermaciej>
MikeSmith: yeah, I thought it might be a "best practices" but it has its own DTD

[02:40:01.0000] <MikeSmith>
yeah

[02:40:02.0000] <MikeSmith>
othermaciej: btw, you are right about CHTML and HDML, afaik -- I don't think they ever had any organizational support from any standards body at all

[02:41:00.0000] <othermaciej>
I mean, I was not around at the time

[02:41:01.0000] <othermaciej>
but from what I can tell, they were published in a totally unofficial way

[02:42:00.0000] <othermaciej>
oh hey, another fork, the html4all "HTML 4.1" draft: http://html4all.org/HTMLDraft.html

[02:44:00.0000] <espadrine>
I think crockford has its own html5 fork

[02:44:01.0000] <Lachy>
FWIW, developers.whatwg.org is also technically a fork

[02:44:02.0000] <MikeSmith>
crockford's draft is vaporware

[02:44:03.0000] <MikeSmith>
or vapor-spec

[02:44:04.0000] <Lachy>
espadrine, where is crockford's draft?

[02:45:00.0000] <MikeSmith>
http://www.crockford.com/html/

[02:45:01.0000] <espadrine>
Lachy: no idea, but he said in a talk I saw that he did have it!

[02:45:02.0000] <othermaciej>
/me has CNN on in the background going on about Bin Laden

[02:46:00.0000] <espadrine>
MikeSmith: "That's it." Whaa, so soon?

[02:46:01.0000] <jgraham>
I think calling Crockford's effort a fork is insulting to all serious forkers everywhere

[02:46:02.0000] <abarth>
"No more framesets, frames, or iframes. The security properties of these were problematic. Instead we'll have modules."

[02:47:00.0000] <abarth>
"The only character encoding permitted in HTML 5 is UTF-8." <-- I like that part.

[02:48:00.0000] <othermaciej>
so I added a section for "W3C-published but disavowed forks"

[02:48:01.0000] <othermaciej>
I am not sure if XHTML2 should go in that section or in "W3C-hosted forks"

[02:49:00.0000] <othermaciej>
did the ex-XHTML2 folks ever follow through on their plan to continue development outside the W3C?

[02:50:00.0000] <jgraham>
(FWIW I think that wiki page would be better without all the nonsense about governments creating incompatible forks to restrict access to the web. There is only ~1 person who can possibly seriously believe that)

[02:50:01.0000] <MikeSmith>
othermaciej: not that I've heard

[02:51:00.0000] <Lachy>
That wiki page you're working on seems to be using a strange definition of forking. Many of those specs listed are not forks of previous specs, but rather newly created versions.

[02:52:00.0000] <othermaciej>
does JHTML count as an HTML fork: http://en.wikipedia.org/wiki/JHTML

[02:52:01.0000] <othermaciej>
Lachy: mostly they fork the language without textually forking a previous spec document

[02:52:02.0000] <Lachy>
but then, I guess that just proves that the W3C's fear of forks that could be prevented by stricter copyright are a very limited subset.

[02:53:00.0000] <othermaciej>
or how about FBML

[02:53:01.0000] <Lachy>
ok

[02:54:00.0000] <Lachy>
then I think it may be useful to more clearly distinguish between language forks and specification forks. The former would include ISO-HTML, EPUB, etc. The latter would include specs like developers.whatwg.org

[02:55:00.0000] <othermaciej>
by that standard, you could claim the HTML5 author view is a spec fork

[02:55:01.0000] <Lachy>
it is

[02:55:02.0000] <othermaciej>
but indeed, it is possible to fork the spec text without changing any normative requirements

[02:55:03.0000] <Lachy>
and it would be prevented by the W3C's strict licence

[02:55:04.0000] <jgraham>
Lachy: I think the point is that the supposed risks of forking are independent of whether one rewrites or one juct changes the existing text

[02:56:00.0000] <Lachy>
it's also an example of why the W3C should permit forking

[02:56:01.0000] <espadrine>
the dangerous part isn't about forking, it is the intent that the forker has

[02:56:02.0000] <espadrine>
if he just wants to confuse people, it will confuse people

[02:56:03.0000] <Lachy>
jgraham, yes, but it's also useful to show the examples of forking that are beneficial, in order to illustrate the risk of preventing forks

[02:57:00.0000] <othermaciej>
I can't find a spec for FBML that makes clear whether it is actually an HTML fork or not

[02:57:01.0000] <jgraham>
othermaciej: FBML was abandonded so I think it might be hard to find documentation

[02:57:02.0000] <othermaciej>
Wikipedia says it is a customized version of HTML with extra tags, but I can't verify that with facebook's docs

[02:58:00.0000] <jgraham>
They have now forked RDFa instead...

[02:58:01.0000] <jgraham>
(in the sense that their processing requirments are, by design, entirely different to those in the RDFa spec)

[02:58:02.0000] <abarth>
fbml is still used

[02:58:03.0000] <abarth>
e.g., for the like button

[02:59:00.0000] <jgraham>
Lachy: I agree

[02:59:01.0000] <abarth>
http://developers.facebook.com/docs/reference/plugins/like/

[02:59:02.0000] <abarth>
<fb:like ref="top_left"></fb:like>

[02:59:03.0000] <jgraham>
Does it count as forking if you use colons? :)

[03:00:00.0000] <abarth>
that i can't tell you

[03:00:01.0000] <abarth>
but fbml uses lots of colons

[03:00:02.0000] <Lachy>
that looks more like "distributed extensibility"

[03:00:03.0000] <hsivonen>
colons are definitely distributed

[03:00:04.0000] <othermaciej>
it adds a bunch of tags with colons in them

[03:00:05.0000] <jgraham>
Although, having said the arguments in favour of the two are totally different, the arguments against forking also work against DE

[03:00:06.0000] <othermaciej>
what I am not sure of is whether you mix those with HTML, or use only the funky fb: tags

[03:00:07.0000] <abarth>
it also changes the semantics of existing tags

[03:00:08.0000] <abarth>
like <script>

[03:01:00.0000] <othermaciej>
abarth: do you know of anything close to a spec for this?

[03:01:01.0000] <jgraham>
Unless you think that the before-colon part is enough to avoid confusion or whatever

[03:01:02.0000] <othermaciej>
I wonder why all the anchors on CNN seem to have australian accents

[03:02:00.0000] <othermaciej>
or it might be kiwi accents, I'm not totally sure I can hear the difference

[03:03:00.0000] <Lachy>
othermaciej, what's the anchor's name? I'll tell you if (s)he is Aussie

[03:03:01.0000] <abarth>
XFBML

[03:03:02.0000] <abarth>
omg

[03:03:03.0000] <abarth>
http://developers.facebook.com/docs/reference/javascript/

[03:03:04.0000] <abarth>
those script tags have really wonky semantics

[03:04:00.0000] <abarth>
but i'm not sure how much else they've changed about HTML semantics

[03:04:01.0000] <abarth>
i suspect they've changed things like autofocus

[03:04:02.0000] <abarth>
there isn't a spec so much as "try it on our site"

[03:04:03.0000] <othermaciej>
Lachy: they're not showing or mentioning their names

[03:06:00.0000] <jgraham>
/me wonders why Lachy has memorised all the Australian anchor's names on CNN

[03:09:00.0000] <hsivonen>
does anyone want to make predictions about the how Web pages will fail when the blink rate returned is -1?

[03:09:01.0000] <jgraham>
I predict that web pages won't fail because they won't use that API

[03:09:02.0000] <othermaciej>
that's assuming they try to use it to drive a timer?

[03:10:00.0000] <othermaciej>
what happens if you pass a negative number to setTimeout()?

[03:11:00.0000] <hsivonen>
othermaciej: assuming the most obvious failure wouldn't be Web-like. The Web can fail in more creative ways. :-)

[03:12:00.0000] <othermaciej>
I could certainly believe results like an infinite loop due to a poor termination condition

[03:14:00.0000] <hsivonen>
it would be rather tragic, though, if -1 lead to a seizure-inducing rate due to getting clamped to blinking avery 10 milliseconds.

[03:14:01.0000] <zcorpan>
hsivonen: i predict that it will fail in the following way: the page's background color will be hot pink instead of dark blue

[03:15:00.0000] <hsivonen>
zcorpan: let's file that away for the claim chowder

[03:15:01.0000] <jgraham>
I'm reasonably sure 10ms blinks wouldn't induce seziures in most photo-sensitive epileptics

[03:16:00.0000] <jgraham>
But I need a citation for that

[03:17:00.0000] <jgraham>
"Most people with photosensitive epilepsy are sensitive to 16-25 Hz, although some people may be sensitive to rates as low as 3 Hz and as high as 60 Hz."

[03:17:01.0000] <othermaciej>
Lachy: I think I'm watching Rosemary Church, who is indeed an ozzie

[03:17:02.0000] <jgraham>
http://www.epilepsy.org.uk/info/photosensitive-epilepsy

[03:18:00.0000] <othermaciej>
I wonder what the default frequencies are

[03:23:00.0000] <jgraham>
(I wonder how common it is to have caret-induced seziures in general. It seems that a person susceptible to such a stimulus would have a very high chance of having a seziure induce by many random things they would encounter in day to day life. Which is of course quite possible)

[03:23:01.0000] <Lachy>
jgraham, because a lot of the CNN anchors were formerly anchors on Australian News programs

[03:23:02.0000] <Lachy>
or are at least still used as foreign correspondants

[03:24:00.0000] <Lachy>
eg. Rosemary Church was on ABC News in Australia

[03:36:00.0000] <jgraham>
gprof is so slow :(

[03:40:00.0000] <MikeSmith>
hsivonen: fwiw, I implemented schematron checking for img alt exceptions

[03:40:01.0000] <MikeSmith>
it turned out less ugly than I thought it would be

[03:40:02.0000] <MikeSmith>
https://bitbucket.org/validator/syntax/changeset/cb28748fbe89

[03:41:00.0000] <hsivonen>
MikeSmith: cool. I'll try to get to the Java review today.

[03:42:00.0000] <MikeSmith>
great if you can, but no rush

[03:47:00.0000] <hsivonen>
so if a Web author is implementing a pseudo-caret as a span outline/border and not as pixels on a canvas, the author needs to use canvas APIs to discover the desired blink rate?

[03:48:00.0000] <othermaciej>
hsivonen: Hixie's proposal is to put this API on the navigator object instead

[03:49:00.0000] <hsivonen>
othermaciej: ok. I guess I've lost track of all the proposals. did the placement on navigator get an objection yet?

[03:49:01.0000] <othermaciej>
I don't recall anyone objecting to it

[03:50:00.0000] <hsivonen>
exceptional

[03:50:01.0000] <jgraham>
Well people objected to having this API at all

[03:50:02.0000] <othermaciej>
but that's just an off-the-cuff statement, I did not double-check the email record

[03:50:03.0000] <othermaciej>
indeed, Jonas provided potential information to reopen the issue on the basis of objecting to this API

[03:50:04.0000] <othermaciej>
I believe Mac OS X has no obvious user-visible UI to set the caret blink rate

[03:51:00.0000] <othermaciej>
you can only change it via a hidden command-line setting

[03:51:01.0000] <othermaciej>
another command-line setting lets you turn off blinking entirely

[03:51:02.0000] <othermaciej>
I have not heard of anyone complaining about this

[06:05:00.0000] <zcorpan>
hmm. how come firefox doesn't support contenteditable in text/xml?

[06:06:00.0000] <zcorpan>
or application/xml, but does support it in application/xhtml+xml

[06:07:00.0000] <hsivonen>
zcorpan: Firefox predates the HTML5 requirement of having all Documents implement all the HTMLDocument, SVGDocument, etc., interfaces

[06:08:00.0000] <hsivonen>
zcorpan: and for whatever historical reason, only HTMLDocuments can be editable

[06:08:01.0000] <hsivonen>
zcorpan: or something like that

[06:08:02.0000] <zcorpan>
ah

[07:23:00.0000] <wilhelm_>
WTF. Take a look at the DOM of the first paragraph here: https://www.uka.no/program/oktoberfest2011/

[07:23:01.0000] <wilhelm_>
Who comes up with that kind of madness?

[07:25:00.0000] <MikeSmith>
the <cufon> element is a clue

[07:26:00.0000] <MikeSmith>
Lord Cufon

[07:27:00.0000] <MikeSmith>
the Merciless

[07:27:01.0000] <hsivonen>
wilhelm_: I was rather surprised the first time I realized that Cufon works in Opera Mini

[07:27:02.0000] <wilhelm_>
MikeSmith: Looks like the guy is currently in Shinjuku. Could you please head over there with a baseball bat and say hello from me?

[07:28:00.0000] <MikeSmith>
I will look around the neighborhood for him

[07:28:01.0000] <wilhelm_>
Good, thanks.

[07:28:02.0000] <MikeSmith>
it's a small place so he should be easy to find

[07:28:03.0000] <wilhelm_>
Definitely.

[07:29:00.0000] <hsivonen>
I hope Cufon could be declared obsolete already, but Opera Mini is one browser where Cufon works but @font-face doesn't...

[07:29:01.0000] <MikeSmith>
hsivonen: Cufon is some real thing?

[07:29:02.0000] <hsivonen>
for some visual definition of "works"

[07:30:00.0000] <wilhelm_>
Yes, it's real: http://cufon.shoqolate.com/generate/

[07:30:01.0000] <hsivonen>
MikeSmith: it's a Web font thing that predates wide @font-face support

[07:30:02.0000] <MikeSmith>
ah

[07:30:03.0000] <hsivonen>
IIRC, there are font foundries that like Cufon more than @font-face

[07:30:04.0000] <hsivonen>
which is really sad

[07:47:00.0000] <zcorpan>
shelley says there's a pending comment to approve, and Wordpress needs updating in the blog

[07:48:00.0000] <hsivonen>
/me looks for a comment to approve

[07:49:00.0000] <hsivonen>
ok. I approved the comment

[07:49:01.0000] <zcorpan>
thanks

[07:49:02.0000] <zcorpan>
i don't even know where to log in to the admin interface

[07:50:00.0000] <hsivonen>
I'll defer to Lachy on updating WP

[07:50:01.0000] <hsivonen>
hmm. maybe I could try the update...

[07:50:02.0000] <jgraham>
There isn't a link afaict. One has to try random page names until one remembers the right one

[07:50:03.0000] <hsivonen>
hmm. I think I'll leave updating to Lachy after all

[07:50:04.0000] <zcorpan>
Lachy: ^

[07:51:00.0000] <Lachy>
hsivonen, WP should be able to update automatically if you just click the link in Dashboard

[07:51:01.0000] <hsivonen>
since I don't know how to make a backup of the data before updating

[07:51:02.0000] <hsivonen>
Lachy: yeah, but I don't know how to take any precautions

[07:52:00.0000] <Lachy>
I don't usually bother. I have DB backups emailed to me weekly, so we're protected there

[07:52:01.0000] <Lachy>
I updated it.

[07:52:02.0000] <hsivonen>
Lachy: thanks

[08:14:00.0000] <matjas_>
zcorpan: so efficient :’)

[08:25:00.0000] <zcorpan>
matjas_: heh

[08:28:00.0000] <MikeSmith>
jgraham: amen

[08:43:00.0000] <zcorpan>
is forums.whatwg.org slow for everyone or just me?

[08:51:00.0000] <zcorpan>
is http://dev.w3.org/html5/markup/ a fork?

[08:51:01.0000] <MikeSmith>
yeah, I suppose it is

[08:52:00.0000] <MikeSmith>
though it does not claim to be a technical specification

[08:52:01.0000] <MikeSmith>
it claims only to be a reference

[08:52:02.0000] <MikeSmith>
at this point

[08:52:03.0000] <MikeSmith>
one that does not normatively define anything

[08:52:04.0000] <zcorpan>
added to the wiki

[08:53:00.0000] <MikeSmith>
hmm, I think I should also make it more clear that http://dev.w3.org/html5/spec-author-view/ is non-normative

[08:54:00.0000] <Philip`>
Is http://w3c-test.org/html/tests/submission/PhilipTaylor/annotated-spec/canvas.html a fork?

[08:54:01.0000] <zcorpan>
yeah

[08:55:00.0000] <MikeSmith>
I have "Because this document does not provide implementation conformance criteria, UA implementors should not rely on it, but should instead refer to the full specification.", but I guess I should also have that part explicitly state, "This document is non-normative."

[08:55:01.0000] <zcorpan>
is that W3C-hosted or other?

[08:57:00.0000] <zcorpan>
/me goes for other

[09:56:00.0000] <MikeSmith>
zcorpan: fwiw, I don't think non-normative documents can really be considered forks

[09:56:01.0000] <MikeSmith>
though I guess they are in the context of the current license discussion

[09:58:00.0000] <jgraham>
"forks" is a misleading term

[09:58:01.0000] <jgraham>
What licenses care about is "derivative works"

[09:59:00.0000] <jgraham>
"forks" are what (some) people want to avoid

[09:59:01.0000] <jgraham>
attempting to prevent all "derivative works" seems to be their favoured method

[10:02:00.0000] <Lachy>
MikeSmith, a fork of a specification does not have to be a normative specification to be considered a fork, in the software development sense

[10:04:00.0000] <MikeSmith>
Lachy: says you

[10:04:01.0000] <Lachy>
MikeSmith, define fork?

[10:04:02.0000] <MikeSmith>
jgraham: yeah

[10:04:03.0000] <MikeSmith>
no

[10:04:04.0000] <MikeSmith>
can't be bothered

[10:05:00.0000] <jgraham>
Lachy: The sense in which github uses "fork" is not really the same as the older meaning

[10:05:01.0000] <Lachy>
MikeSmith, I just want to understand why you're excluding some derivative works that use the existing work as the basis as not being a fork

[10:06:00.0000] <jgraham>
The older meaning is a deliberate decison to create incompatible changes to a project without the intent to merge them back in

[10:06:01.0000] <jgraham>
or really with the intent not to merge them back in

[10:06:02.0000] <Lachy>
jgraham, that's basically the way I'm using it.

[10:07:00.0000] <Lachy>
but they don't necessarily have to be incompatible changes

[10:08:00.0000] <jgraham>
Lachy: Not really. A authoring guide that subsets the spec text isn't a fork; it doesn't compete with the original in any way. It is a derivative work however

[10:08:01.0000] <Lachy>
e.g. You could fork a piece of software, cut out some modules, and distribute it without any other modification to what was left it.  That would still be a fork.

[10:08:02.0000] <Lachy>
there's no requirement about competing with the original

[10:08:03.0000] <jgraham>
I disagree

[10:09:00.0000] <Lachy>
"In software engineering, a project fork happens when developers take a legal copy of source code from one software package and start independent development on it, creating a distinct piece of software." -- Wikipedia

[10:09:01.0000] <jgraham>
Right. So a subset of a spec isn't independent

[10:09:02.0000] <jgraham>
It is tied to the original

[10:09:03.0000] <jgraham>
It is still a derivative work, however

[10:10:00.0000] <jgraham>
A new spec like HTML-Mobile is a fork

[10:10:01.0000] <jgraham>
It has independent requirments that the original didn't have

[10:11:00.0000] <jgraham>
It makes sense to distinguish these things because often people who dislike *forks* will nevertheless like some classes of *derivative work*

[10:11:01.0000] <jgraham>
So licenses that stop any derivative work will be less acceptable to them

[10:12:00.0000] <jgraham>
(this is more or less why the W3C has tried to come up with licenses that allow some derivative works but prevent forks)

[10:13:00.0000] <jgraham>
(but haven't dealt with the fact that many useful derivative works are OSS and the fact that the ability to fork itself is can be a positive thing)

[10:13:01.0000] <Lachy>
jgraham, no, there is no difference. A fork is simply a derivative work. It's just that some people are confused and think that a fork is a special subset of derivative works.

[10:13:02.0000] <jgraham>
Well I agree that some people are confused

[10:13:03.0000] <zewt>
well, "fork" in software terms usually implies competition: you don't like how software is maintained or they won't accept your patches, so you make a copy and try to get people to use it instead; a fork of a program often has a lot of overlap with the original

[10:13:04.0000] <jgraham>
I disagree about which set of people :)

[10:14:00.0000] <zewt>
forking a spec *can* have that effect ... but the ratio may be different, anyway

[10:16:00.0000] <zewt>
Lachy: taking a small subsection from a spec to use in your own is a derivative work, but I don't think I'd call it a fork

[10:16:01.0000] <zewt>
(you might call it a fork of that subsection, but I don't think that's how most people think of the term)

[10:20:00.0000] <Lachy>
zewt, you're just applying arbitrary restrictions to your definition of fork, and discounting the modifications that have been made in deriviative works like developers.whatwg.org

[10:20:01.0000] <zewt>
eh, no, I'm saying what the word "fork" means to most people

[10:20:02.0000] <zewt>
how, exactly, did I discount anything?

[10:21:00.0000] <zewt>
it's not "forking" that needs to be allowed, it's "arbitrary derivative works", whether it's a fork or anything else

[10:22:00.0000] <jgraham>
Lachy: applying "arbitary restrictions" to the definitions of words so that they mean a specific thing rather than all meaning very general things is often considered a desirable property of language

[10:25:00.0000] <gsnedders>
Lachy: The concept referred to by a referent will be different between different people, because denotation and connotation are not definite things, and vary over time.

[10:25:01.0000] <gsnedders>
Lachy: So expecting everyone to have the same denotations/connotations for referents as you is unrealistic

[10:25:02.0000] <zewt>
... however, "derivative works" is a legal term, and while it likely varies by jurisdiction, it's far more clearly-defined than "fork" :)

[10:26:00.0000] <jgraham>
In other news gsnedders learnt some posh words in his langauge course :p

[10:26:01.0000] <gsnedders>
jgraham: Nothing I didn't know before (well, that's untrue, but I knew the above before :P)

[10:27:00.0000] <jgraham>
gsnedders: Well you're not really sayign anything particularly difficult

[10:27:01.0000] <jgraham>
Just dressing it up in a fancy way

[10:27:02.0000] <gsnedders>
jgraham: meh

[10:27:03.0000] <jgraham>
:)

[10:27:04.0000] <MikeSmith>
cours de linguistique générale

[10:31:00.0000] <Lachy>
jgraham, say for example, you take source of some free software, like VLC player. All you do is remove a few codecs you don't need/want to support and change the name/icon. Then you start distributing that. Is that a fork or not?

[10:31:01.0000] <zewt>
yes

[10:31:02.0000] <gsnedders>
I'd say no

[10:31:03.0000] <Lachy>
How is that different from taking the specification text, removing bits you don't need/want, changing the title, and then distributing that

[10:31:04.0000] <Lachy>
gsnedders, why?

[10:32:00.0000] <jgraham>
Lachy: If you're distributing the result *as a specification* I would call it a fork

[10:32:01.0000] <jgraham>
For the specification case

[10:33:00.0000] <jgraham>
Well it is a bit complex

[10:33:01.0000] <Lachy>
gsnedders, what about GNU IceCat vs. Firefox?  Pretty much all they did there was change the branding to work around some licence restritions, and otherwise keep up with Firefox's modifications. Is that a fork or not?

[10:33:02.0000] <jgraham>
Certainly if you removed <canvas> and <img> and <video> and distributed the result as "Accessible HTML5" I would call that a fork

[10:34:00.0000] <zewt>
"fork" is a very fuzzy term; for what it's worth I don't think it should matter--you should be able to make derivative works for any purpose (including whatever each person's intuitive understanding of "fork" means)

[10:34:01.0000] <jgraham>
Lachy: (I would call the specific example of IceCat "petulant whining", but that could just be me)

[10:34:02.0000] <zewt>
heh

[10:35:00.0000] <gsnedders>
Lachy: I would claim a fork implies a branch that won't really be resynced.

[10:36:00.0000] <Lachy>
gsnedders, what about Ubuntu and Debian? Ubuntu gets resynced with Debian all the time, but is still a fork

[10:36:01.0000] <zewt>
(I suppose some part of my intuitive understanding of "fork" is the implication that it goes in a different direction--that development forks off and does something else--but that's all fuzzy and intuitive and subjective and all those things that have no place around licensing)

[10:36:02.0000] <jgraham>
Lachy: Ubuntu has long-lived changes

[10:36:03.0000] <jgraham>
it is only a partial resync

[10:37:00.0000] <gsnedders>
Lachy: what jgraham said

[10:48:00.0000] <MikeSmith>
Dear Mike,

[10:48:01.0000] <MikeSmith>
As a developer for HTML5, I would like to know why native support for Flash was not built-in like video and audio. HTML5 only hurts web developers by not supporting the most popular animation software ever created.

[10:48:02.0000] <MikeSmith>
Developers must now resort to writing Javascripts to add website animation much like back in the 90s. HTML5 appears to be a big backwards step for web standards.

[10:49:00.0000] <zewt>
does he write javascripts to manipulate his HTMLs?

[10:51:00.0000] <MikeSmith>
Joyent should trademark the phrase "Back to the future"

[10:58:00.0000] <TabAtkins>
>

[10:58:01.0000] <TabAtkins>
>

[10:58:02.0000] <TabAtkins>
>

[10:58:03.0000] <TabAtkins>
>

[10:58:04.0000] <jgraham>
<

[11:03:00.0000] <karlcow>
⪥

[11:06:00.0000] <TabAtkins>
Um.

[11:06:01.0000] <TabAtkins>
I... don't know how that happened.

[11:06:02.0000] <TabAtkins>
I was reading backlog when I apparently did it.

[11:11:00.0000] <miketaylr>
MikeSmith: seen at jsconf party last night (re: node.js TM) http://dl.dropbox.com/u/5821876/IMAG0605.jpg

[11:13:00.0000] <JoePeck>
does ValidityState typeMismatch make sense if an input type has a value sanitization algorithm?

[11:15:00.0000] <MikeSmith>
miketaylr: heh

[11:16:00.0000] <MikeSmith>
lovely

[11:16:01.0000] <miketaylr>
from one of the 'nodejitsu' guys shirts :)

[11:16:02.0000] <MikeSmith>
ah

[11:16:03.0000] <MikeSmith>
yeah, that figures

[11:17:00.0000] <MikeSmith>
those dudes are sharp

[11:17:01.0000] <MikeSmith>
well, most of them

[11:17:02.0000] <MikeSmith>
the ones I've met personally seem so

[11:18:00.0000] <MikeSmith>
the ones I've seen only on youtube videos and abusing the #Node.js channel less so

[11:18:01.0000] <MikeSmith>
but I guess I should shut up

[11:18:02.0000] <miketaylr>
haha

[11:18:03.0000] <miketaylr>
'nuff said

[12:24:00.0000] <MikeSmith>
othermaciej: to be clear, that "requirement" that Larry mentions in his message is not one that there was ever any discussion or agreement about

[12:24:01.0000] <MikeSmith>
it made it into that Wiki page because he added it there

[12:24:02.0000] <AryehGregor>
Which requirement?

[12:25:00.0000] <othermaciej>
MikeSmith: I'm not going to get into it with Larry

[12:26:00.0000] <MikeSmith>
just like the stuff at http://trac.tools.ietf.org/area/app/trac/wiki/IriWorkGoals#HTML5EditorRequirements made it into that page because I added it there after he neglected to include it in the original version of the page when he created it

[12:26:01.0000] <MikeSmith>
othermaciej: yeah, understood

[12:46:00.0000] <MikeSmith>
AryehGregor: http://lists.w3.org/Archives/Public/public-iri/2011May/0000.html

[14:54:00.0000] <AryehGregor>
It's amazing how complicated something like "insertOrderedList" or "indent" can be.

[16:00:00.0000] <uf0>
.

[16:01:00.0000] <Hixie>
&

[16:02:00.0000] <tw2113>
~

[16:03:00.0000] <TabAtkins>
`

[16:19:00.0000] <jamesr>
heycam: around?

[16:20:00.0000] <heycam>
hi jamesr

[16:20:01.0000] <jamesr>
heycam: i'm pretty sure i have a w3 account and whatnot, so i'm going to try committing to their mercurial

[16:21:00.0000] <jamesr>
i'm thinking for an initial draft to put this up: http://webstuff.nfshost.com/anim-timing/Overview.html but without the element argument as i'm not that happy with the text i have for that right now

[16:22:00.0000] <heycam>
jamesr, yeah I just got a mail from plh saying I didn't need a special account, since I'm in the relevant WG

[16:22:01.0000] <jamesr>
so requestAnimationFrame(), cancelRAF(), the timestamp stuff, and the invoke algorithm (to deal with cancellations)

[16:22:02.0000] <heycam>
jamesr, that sounds like a good starting place

[16:22:03.0000] <jamesr>
and then we can try to hash out some good normative text for the element visibility stuff on the mailing list

[16:22:04.0000] <heycam>
so the timestamp stuff

[16:22:05.0000] <jamesr>
of course i don't remember my w3 password :/

[16:23:00.0000] <jamesr>
yeah! timestamps...

[16:23:01.0000] <heycam>
by that do you mean the argument to the callback? what about the attribute on the window object? (i can't remember if i removed that from my version, but boris was convincing me recently that it should stay.)

[16:23:02.0000] <jamesr>
the argument to the callback

[16:23:03.0000] <jamesr>
so another topic related to this is what the value should be

[16:24:00.0000] <jamesr>
i think it'd be really useful to provide a timestamp that was more reliable for intervals that javascript Date.now() is in the case where the system clock is adjusted, etc

[16:24:01.0000] <heycam>
aha

[16:24:02.0000] <jamesr>
i'm not entirely sure what Date.now() is supposed to do when the system clock is adjusted

[16:24:03.0000] <jamesr>
or where that is defined

[16:24:04.0000] <heycam>
yeah I only recently discovered that Date.now() isn't actually defined in the ES spec :)

[16:24:05.0000] <jamesr>
but for animation, it seems that most of the time you just want to know "how long was it since the start of the animation/since the last frame"

[16:24:06.0000] <zewt>
js is going to need a concept of a monotonic clock more and more

[16:24:07.0000] <heycam>
zewt, yeah

[16:25:00.0000] <heycam>
so they were talking abotu monotonic clocks on the list recently weren't they

[16:25:01.0000] <jamesr>
and if we have such a concept, then we definitely need a way to get at it globally

[16:25:02.0000] <jamesr>
yeah

[16:25:03.0000] <zewt>
don't recall

[16:25:04.0000] <jamesr>
they have some very very weak text in the navigation timing spec

[16:25:05.0000] <jamesr>
but it doesn't actually specify anything

[16:25:06.0000] <jamesr>
is there a normative definition of Date.now() anywhere?

[16:26:00.0000] <jamesr>
in chrome we have some fairly sophisticated logic behind that function to deal with the windows time APIs being complete dogshit

[16:26:01.0000] <zewt>
in the javascript/ecmascript specs, maybe?

[16:27:00.0000] <heycam>
oh it is in ES5

[16:27:01.0000] <heycam>
I must have been thinking of something else that wasn't

[16:27:02.0000] <heycam>
http://people.mozilla.org/~jorendorff/es5.html#sec-15.9.4.4

[16:27:03.0000] <jamesr>
well that's helpful :P

[16:28:00.0000] <jamesr>
so presumably if i do Date.now(), then move my system clock back by an hour, then call Date.now() again what do i get?

[16:28:01.0000] <heycam>
you get the earlier time, it seems from the spec

[16:28:02.0000] <jamesr>
does anyone implement that behavior?

[16:29:00.0000] <heycam>
without testing, I would've assumed that's what everyone implemented

[16:29:01.0000] <heycam>
since it's easier, and that's what it says to do

[16:29:02.0000] <zewt>
i'd be very surprised if I call "now" and I don't get now, according to the actual value of the clock

[16:29:03.0000] <heycam>
yeah :)

[16:30:00.0000] <zewt>
well, a clock--linux appears to have no less than 5

[16:31:00.0000] <heycam>
iirc for Event.timestamp, gecko returns a number of milliseconds since document load

[16:31:01.0000] <heycam>
or something like that

[16:31:02.0000] <heycam>
which is monotonic

[16:31:03.0000] <heycam>
(monotonically increasing :))

[16:32:00.0000] <heycam>
jamesr, so for getting the first revision of the spec up, I don't think we need to solve this, but we should discuss it on the list once it is up

[16:33:00.0000] <jamesr>
agree

[16:33:01.0000] <zewt>
would be nice to use a timestamp that can be filled in from a system clock, for example so input events can, if the system supports it, fill in the time of the actual hardware event rather than when it was received by the browser

[16:33:02.0000] <jamesr>
monotonic isn't quite enough

[16:33:03.0000] <jamesr>
has to be uniformly monotonically increasing

[16:33:04.0000] <heycam>
yes

[16:33:05.0000] <heycam>
you don't want your animation speeds to change

[16:33:06.0000] <zewt>
(eg. mapping directly to MONOTONIC or MONOTONIC_RAW in Linux)

[16:33:07.0000] <jamesr>
or freeze for a bit if the clock went backwards and you are just waiting for things to "catch up"

[16:34:00.0000] <heycam>
so maybe an offset from document load/start makes more sense than something that looks like it could be Date.now(), but could well get way out of sync with that

[16:34:01.0000] <zewt>
also using the system monotonic clock directly means timestamps between windows are comparable

[16:34:02.0000] <jamesr>
yeah, it's super confusing to have a number that will normally be very close to Date.now()

[16:34:03.0000] <jamesr>
starting at 0 in document load should help clear up a lot of confusion there

[16:35:00.0000] <heycam>
are you happy to do this initially fiddling to get the spec up?

[16:35:01.0000] <zewt>
could use 0 as the browser startup time (maybe +- a random value to avoid leaking info) to have consistent timestamps across windows

[16:36:00.0000] <zewt>
(they wouldn't be consistent across browser restarts, but that probably couldn't be guaranteed anyway)

[16:36:01.0000] <heycam>
consistent across windows... for keeping animations in iframes easily in sync with those in the parent document?

[16:36:02.0000] <jamesr>
i don't think http://webstuff.nfshost.com/anim-timing/Overview.html defines the timestamp value very well at all

[16:37:00.0000] <jamesr>
and i'm happy just leaving it that way until we figure out something better

[16:37:01.0000] <zewt>
well, i'm thinking in terms of a monotonic timer for general use across the platform

[16:37:02.0000] <jamesr>
zewt: what's the advantage of having it be in sync across documents?

[16:37:03.0000] <zewt>
being able to find out how much time passed between two events in general--it just seems like a natural property

[16:37:04.0000] <jamesr>
on multicore systems it's probably expensive to keep it in sync with too much precision

[16:38:00.0000] <zewt>
maybe on windows, not sure

[16:38:01.0000] <zewt>
on linux CLOCK_MONOTONIC(_RAW) does the work for you, iirc

[16:38:02.0000] <jamesr>
time is a very fluid concept on modern architectures at higher levels of precision

[16:43:00.0000] <jamesr>
i just have to figure out this workflow stuff

[16:43:01.0000] <heycam>
you're going with anolis?

[16:44:00.0000] <jamesr>
i dunno - i've never used any of these

[16:44:01.0000] <jamesr>
what do you recommend?

[16:45:00.0000] <heycam>
so, the xslt gunk I've got going there at the moment is reasonably simple to use, i.e. it doesn't do much magic processing to the input document

[16:45:01.0000] <heycam>
anolis plenty of people in here use, but I haven't used it myself personally

[16:45:02.0000] <heycam>
you could also go with ReSpec, berjon's client-side js spec formatter

[16:45:03.0000] <heycam>
I think they're the main feasible choices

[16:47:00.0000] <jamesr>
so to use your xslt thing what would files i need to check in?

[16:48:00.0000] <jamesr>
the Makefile, Overview.xml, Overview.html, and then which .css/.js files?

[16:48:01.0000] <heycam>
anim-timing.css, anim-timing.xsl, dfn.js, section-links.js

[16:49:00.0000] <heycam>
(and feel free to rename those first two to match the directory name if you wish)

[16:49:01.0000] <heycam>
the dfn.js/section-links.js are scripts from Hixie that pop up references when you click on a defining instance of a term

[16:49:02.0000] <jamesr>
and the workflow just "edit Overview.xml, make"

[16:50:00.0000] <heycam>
yeah

[16:50:01.0000] <heycam>
as long as you have xsltproc installed

[16:50:02.0000] <jamesr>
and i should be able to view both Overview.xml and Overview.html in an XSLT-supporting browser, right?

[16:50:03.0000] <heycam>
technically yes :)

[16:50:04.0000] <heycam>
there's a <?xml-stylesheet?> PI at the top of Overview.xml

[16:51:00.0000] <jamesr>
aight, sounds good

[16:51:01.0000] <heycam>
cool

[16:52:00.0000] <heycam>
thanks for doing the work here

[16:52:01.0000] <jamesr>
i guess the only downside is that the document you edit is XML instead of HTML, so i'll have to match my tags and all that other stuff

[16:52:02.0000] <heycam>
ah yeah

[16:52:03.0000] <heycam>
it probably isn't too much trouble to retrofit an html parser on the front of that toolchain if you really want :)

[16:56:00.0000] <jamesr>
parser error : Opening and ending tag mismatch

[16:56:01.0000] <jamesr>
gonna get used to that :P

[16:56:02.0000] <sephr>
I'm a little confused with classList/relList; iss element.classList/relList supposed to be a DOMTokenList or a DOMSettableTokenList?

[16:57:00.0000] <sephr>
or is it up to the implementor?

[16:57:01.0000] <sephr>
if so, why? It makes more sense to just make it always have to be DOMSettableTokenList

[16:58:00.0000] <jamesr>
are <p>s supposed to be self-closing in XML or encapsulate the paragraph?

[16:58:01.0000] <heycam>
jamesr, nothing is self closing in xml

[16:59:00.0000] <AryehGregor>
sephr, http://www.whatwg.org/specs/web-apps/current-work/multipage/elements.html#elements-in-the-dom

[16:59:01.0000] <jamesr>
<p/> i mean

[16:59:02.0000] <AryehGregor>
sephr, that says DOMTokenList.

[16:59:03.0000] <AryehGregor>
Also here: http://www.whatwg.org/specs/web-apps/current-work/multipage/semantics.html#the-link-element

[16:59:04.0000] <sephr>
thanks


2011-05-03
[17:00:00.0000] <heycam>
jamesr, oh, they should surround the text

[17:00:01.0000] <sephr>
why does DOMSettableTokenList exist then?

[17:00:02.0000] <sephr>
I don't see anything that uses it

[17:00:03.0000] <AryehGregor>
jamesr, on the flip side, it's kind of a pain sometimes to author specs in text/html, like when you forget </ol> and half your document gets silently indented and you don't notice for a week.

[17:00:04.0000] <TabAtkins>
jamesr: <p>I'm text in a paragraph</p>

[17:01:00.0000] <AryehGregor>
I kind of wish there were some middle ground.

[17:01:01.0000] <TabAtkins>
AryehGregor: It's called "use a validator occasionally".

[17:01:02.0000] <AryehGregor>
sephr, go here (warning, might freeze your browser for a while) <http://www.whatwg.org/specs/web-apps/current-work/#domsettabletokenlist>, then click on "DOMSettableTokenList" for a list of references in the spec.

[17:01:03.0000] <jamesr>
AryehGregor: yeah, if the source is html then hopefully the makefile runs a validator for you

[17:01:04.0000] <AryehGregor>
TabAtkins, peculiar idea.

[17:02:00.0000] <AryehGregor>
Is there an easily-accessible command-line HTML5 validator around?

[17:02:01.0000] <sephr>
AryehGregor: didn't help much

[17:02:02.0000] <sephr>
still se o use of DOMSettableTokenList

[17:03:00.0000] <sephr>
see no*

[17:03:01.0000] <AryehGregor>
sephr, I see a bunch.  itemRef, itemProp, dropzone, sizes, . . .

[17:03:02.0000] <sephr>
huh?

[17:03:03.0000] <sephr>
maybe I didn't click the right stuff

[17:03:04.0000] <alus>
I have a question about cookies, specifically the domain attribute. is this a reasonable place to ask?

[17:04:00.0000] <sephr>
oh thanks AryehGregor

[17:04:01.0000] <AryehGregor>
alus, sure.

[17:04:02.0000] <sephr>
doesn't make sense to have class and rel lists be non-string-settable though

[17:05:00.0000] <alus>
the browser already has a cookie I set without specifying "domain". the browser says it's for "foo.com". I tried to set a new cookie for "foo.com", but the browser stored it for ".foo.com". when I visit foo.com it send in the first cookie not the new one

[17:05:01.0000] <alus>
is this expected behavior? it happens in FF3 and Chrome11

[17:05:02.0000] <sephr>
AryehGregor: any insight as to why class and rel lists don't use settable?

[17:05:03.0000] <sephr>
it's not like you couldn't .add() stuff anyways

[17:06:00.0000] <alus>
is there any way to store a cookie for "foo.com" by specifying a domain attribute?

[17:06:01.0000] <aho>
w/o www it's wildcarded

[17:06:02.0000] <AryehGregor>
sephr, I don't know.  My first guess is it's just what existing browsers did before the spec was written, or the spec was written before DOMSettableTokenList, or some similarly prosaic reason.

[17:06:03.0000] <AryehGregor>
I don't know if they can easily be changed.

[17:06:04.0000] <sephr>
well it'd only be adding a property and not affecting anything else

[17:07:00.0000] <aho>
e.g. you can use www.example.com (with cookies for that domain) and put your static files on static.example.com

[17:07:01.0000] <AryehGregor>
Maybe sites are relying on the existing behavior.

[17:07:02.0000] <AryehGregor>
I.e., the site might break if assigning a string to the attribute actually worked.

[17:07:03.0000] <sephr>
it wouldn't change the existing behavior

[17:07:04.0000] <AryehGregor>
Oh.

[17:07:05.0000] <AryehGregor>
I see.

[17:07:06.0000] <aho>
if you don't use www, then cookies will be always sent - even if you request stuff from subdomains

[17:07:07.0000] <sephr>
nobody references .value in any of their code

[17:07:08.0000] <AryehGregor>
Yeah, that's a good point.

[17:07:09.0000] <alus>
aho: that doesn't seem to be true

[17:07:10.0000] <AryehGregor>
I don't know, then.

[17:07:11.0000] <AryehGregor>
For classList, you could just use className, right?

[17:07:12.0000] <AryehGregor>
And there's a similar attribute for rel?

[17:07:13.0000] <sephr>
yeah, but that's slow

[17:07:14.0000] <sephr>
.rel

[17:08:00.0000] <sephr>
would you mind raising this issue on whatever mailing list is appropriate?

[17:08:01.0000] <AryehGregor>
You can provide spec feedback in the little box.

[17:08:02.0000] <AryehGregor>
That will file a bug and CC public-html.

[17:08:03.0000] <AryehGregor>
Why is it slower than setting value?

[17:08:04.0000] <alus>
aho: if I don't set a domain, it seems to be set for "foo.com" which is *not* sent for subdomains. if I manually set a domain of "foo.com" it's stored for ".foo.com" which *is* sent for subdomains

[17:09:00.0000] <AryehGregor>
Surely .classList.value and .className are logically identical.

[17:09:01.0000] <sephr>
it's slower because it has to remove and apply all of the attributes every time you cahnge it

[17:09:02.0000] <sephr>
AryehGregor: yes they're the same

[17:09:03.0000] <jamesr>
hmm, somehow the auth failed and it made mercurial get into an infinite loop in urllib. impressive

[17:09:04.0000] <AryehGregor>
So does setting .value, no?

[17:09:05.0000] <sephr>
I was talking about the normal API using .add/etc.

[17:09:06.0000] <sephr>
I'm just wondering why .value doesn't even exist

[17:09:07.0000] <sephr>
it's just weird

[17:09:08.0000] <AryehGregor>
jamesr, yeah, Mercurial is fun like that.  It also sometimes dies with Python stack traces.

[17:10:00.0000] <jamesr>
they set the http error listener to retry the connection with no bounds check. new stack frame every time it 401s. very nice

[17:10:01.0000] <AryehGregor>
Oh, so you mean why doesn't DOMTokenList have a .value attribute to start with?

[17:10:02.0000] <sephr>
AryehGregor: say you want to pass a DOMSettableTokenList to a function and not an element itself

[17:10:03.0000] <sephr>
yeah

[17:10:04.0000] <AryehGregor>
That's a good question, I dunno.

[17:10:05.0000] <AryehGregor>
It's kind of weird.

[17:10:06.0000] <AryehGregor>
Definitely feel free to give feedback in the little box, I'd be interested in hearing the question.

[17:10:07.0000] <AryehGregor>
Or maybe Hixie can tell us right now.

[17:10:08.0000] <Hixie>
sup

[17:10:09.0000] <AryehGregor>
Hixie, why does DOMSettableTokenList even exist?  Why not just add the .value property to DOMTokenList?

[17:11:00.0000] <Hixie>
i didn't want there to be two attributes that exposed .className

[17:12:00.0000] <AryehGregor>
Surely it's less confusing to just use the same interface for everything, though, even if it's redundant?

[17:12:01.0000] <sephr>
Hixie: yeah, but what if I just want to pass DOMTokenLists?

[17:12:02.0000] <sephr>
I shouldn't have to pass elements just for those few special cases

[17:12:03.0000] <AryehGregor>
It's not like it would require extra spec or implementation work to support .value here.

[17:12:04.0000] <sephr>
where there's already a property

[17:12:05.0000] <AryehGregor>
It would make the spec shorter, actually.

[17:13:00.0000] <Hixie>
AryehGregor: i think people won't think of them as the "same interface", they'll think of them as "the way to change X" and "the way to change Y"

[17:13:01.0000] <Hixie>
sephr: why would you pass a DOMTokenList?

[17:13:02.0000] <AryehGregor>
I think the status quo is considerably more confusing.

[17:13:03.0000] <sephr>
hypothetical

[17:14:00.0000] <sephr>
possibly some fancy js lib

[17:14:01.0000] <Hixie>
sephr: i try not to fix hypothetical problems :-)

[17:14:02.0000] <sephr>
well still it's just so much uneeded abstraction

[17:14:03.0000] <Hixie>
AryehGregor: we need some way to determine which is more confusing, i guess

[17:14:04.0000] <Hixie>
the design was to avoid redundancy, which i try hard to avoid because it always seems to cause more confusion than it solves

[17:14:05.0000] <AryehGregor>
Hixie, alternatively, we can just go with the way that's simpler to spec and implement, which is having only one interface.

[17:14:06.0000] <AryehGregor>
I generally agree that redundancy is bad.

[17:15:00.0000] <Hixie>
the way that's simpler to spec is the way it's specced now

[17:15:01.0000] <Hixie>
since to have what we have now requires no change

[17:15:02.0000] <Hixie>
and to have anything else requires a change

[17:15:03.0000] <AryehGregor>
Well, okay, yes.

[17:15:04.0000] <Hixie>
simpler to implement is a different matter, but not as important as what is best far authors

[17:15:05.0000] <Hixie>
for

[17:16:00.0000] <Hixie>
without solid data, i don't know how to make the call one way or the other

[17:16:01.0000] <sephr>
Hixie: for example, say I want to change various DOMTokenList type properties of various elements given a string supplied by a lib user. I shouldn't have to make special exceptions for "classList", etc.

[17:16:02.0000] <AryehGregor>
sephr, you need to be more concrete.

[17:16:03.0000] <AryehGregor>
Also, you need to explain why add() and remove() don't work.

[17:16:04.0000] <sephr>
just did

[17:17:00.0000] <sephr>
an API being supplied with a string representation

[17:17:01.0000] <Hixie>
sephr: why would you ever want to do the same thing to classList as to itemProp?

[17:17:02.0000] <AryehGregor>
Why would such an API even exist?

[17:17:03.0000] <AryehGregor>
You need to give a realistic and specific use-case, not a hypothetical.

[17:17:04.0000] <AryehGregor>
Preferably it should be something that you or someone demonstrably wants to do.

[17:17:05.0000] <sephr>
for the same reason jquery has methods for setting attributes

[17:17:06.0000] <AryehGregor>
Otherwise, it's not worth the effort to think about.

[17:18:00.0000] <sephr>
just convenience

[17:18:01.0000] <AryehGregor>
Does jQuery treat tokenlists differently than everything else?

[17:18:02.0000] <sephr>
it might if it was easy to

[17:18:03.0000] <AryehGregor>
Hypothetical convenience is not worth the effort to spec and implement a change.

[17:18:04.0000] <sephr>
eh, ok

[17:18:05.0000] <sephr>
Hixie: you can close http://www.w3.org/Bugs/Public/show_bug.cgi?id=12585

[17:18:06.0000] <AryehGregor>
There are always going to be more important things to do.

[17:19:00.0000] <Hixie>
sephr: feel free to close it :-)

[17:20:00.0000] <sephr>
how?

[17:20:01.0000] <sephr>
are new users allowed to close any random bugs?

[17:20:02.0000] <Hixie>
should be able to

[17:20:03.0000] <AryehGregor>
Anyone with an account can.

[17:20:04.0000] <sephr>
ok sure

[17:23:00.0000] <sephr>
hmm

[17:23:01.0000] <sephr>
not getting the email

[17:23:02.0000] <sephr>
not even in any spam filters

[17:23:03.0000] <sephr>
oh nvm got it

[17:28:00.0000] <jamesr>
heycam: ok, got some stuff up

[17:28:01.0000] <jamesr>
hmm, i didn't mean to include the native animation stuff

[17:28:02.0000] <heycam>
yeah if the meat of the spec isn't referencing those definitions, let's leave them out for now

[17:29:00.0000] <jamesr>
i have definitions without references. oopsie

[17:44:00.0000] <heycam>
I guess w3c-test.org is an automatic checkout of some repos on dvcs.w3.org? (is w3c-test.org a W3C machine?)

[17:52:00.0000] <Philip`>
heycam: http://w3c-test.org/ says "W3C would like to thank Microsoft who donated the server that allows us to run this service."

[17:53:00.0000] <Philip`>
It's automatic except (if I remember correctly) for manual verification of added PHP scripts

[17:55:00.0000] <heycam>
Philip`, thanks.  the non-w3.org domain just looks a bit weird to me.

[17:57:00.0000] <heycam>
jamesr, also the "getting the next sample time" has lots its definition

[17:57:01.0000] <Philip`>
heycam: http://lists.w3.org/Archives/Public/public-html-testsuite/2010Nov/0046.html

[17:57:02.0000] <heycam>
but that probably only made sense when the native animation stuff was in there

[17:57:03.0000] <jamesr>
yeah it did

[17:57:04.0000] <heycam>
yes it does, sorry

[17:58:00.0000] <jamesr>
/me looks

[17:58:01.0000] <heycam>
it needs some definition though

[17:58:02.0000] <heycam>
Philip`, ah, makes sense

[17:58:03.0000] <jamesr>
i'm sort of hoping we can define a uniformly monotonic clock on document and define this in terms of that

[17:59:00.0000] <jamesr>
i think a DOMTimeStamp that's since the unix epoch but that is not directly comparable to Date.now() is going to be bug city

[17:59:01.0000] <heycam>
yes I agree

[17:59:02.0000] <jamesr>
there was also some text in your draft about the time between ticks being between 16 and 1000 ms

[18:00:00.0000] <heycam>
in WebKit you suspend callbacks altogether in background tabs, is that right?

[18:00:01.0000] <heycam>
("script-based animations" is also referenced with no definition)

[18:00:02.0000] <llrcombs>
heycam: I don't believe so

[18:00:03.0000] <jamesr>
the "MUST be in the future" text in your people.mozilla.org draft is also tricky to resolve with Date.now()

[18:00:04.0000] <jamesr>
heycam: we do

[18:00:05.0000] <jamesr>
llrcombs: no?

[18:01:00.0000] <llrcombs>
example: Chrome web notifications show up when the tab's in the bg

[18:01:01.0000] <llrcombs>
or did you mean Safari/WK Nightlies?

[18:01:02.0000] <jamesr>
we're talking about webkitRequestAnimationFrame

[18:01:03.0000] <jamesr>
currently those callbacks are completely suspended in background tabs

[18:01:04.0000] <Hixie>
hsivonen: yt?

[18:01:05.0000] <jamesr>
or minimized or whatnot

[18:01:06.0000] <llrcombs>
oh, I just saw "suspend callbacks"

[18:01:07.0000] <llrcombs>
d

[18:01:08.0000] <llrcombs>
'oh

[18:01:09.0000] <llrcombs>
ignore that

[18:01:10.0000] <jamesr>
and setTimeout/setInterval timers are clamped to 1s

[18:01:11.0000] <Hixie>
any xslt people here?

[18:01:12.0000] <llrcombs>
sorry about that

[18:02:00.0000] <jamesr>
no worries

[18:02:01.0000] <Hixie>
http://www.w3.org/Bugs/Public/show_bug.cgi?id=11090#c3 seems really surprising to me

[18:02:02.0000] <heycam>
whether callbacks are suspended entirely or just run very slowly might be something to discuss on the list

[18:03:00.0000] <heycam>
but I don't mind if the [16,1000] range is missing from the document at the moment

[18:06:00.0000] <jamesr>
i think the microsoft guys are keen to define the scheduling in terms of vblanks

[18:06:01.0000] <jamesr>
i don't know where they plan to find a normative reference for that

[18:07:00.0000] <heycam>
mm

[18:07:01.0000] <othermaciej>
what's a vblank?

[18:08:00.0000] <heycam>
the time when the electron gun is moving its focus from the bottom right of the screen to the top left? maybe not a relevant concept any more. :)

[18:09:00.0000] <heycam>
but the MS guys want callbacks to be run with their animation frame time set to the next 60Hz (or whatever) screen refresh

[18:09:01.0000] <jamesr>
LCDs still have to copy the pixels from somewhere to screen

[18:09:02.0000] <jamesr>
and if you manipulate the place it copies from while it's doing the copy you get tearing

[18:10:00.0000] <othermaciej>
on LCDs it is indeed desirable to update timed with the screen refresh

[18:11:00.0000] <heycam>
so as well as that, they would like the callback frequency to drop down to 30Hz if it can't keep up with 60Hz

[18:11:01.0000] <heycam>
rather than having a rate that hovers around, not aligned well with the actual screen refresh rate

[18:11:02.0000] <jamesr>
that's what many game engines do

[18:13:00.0000] <heycam>
I think it's a reasonable use case

[18:17:00.0000] <stevela>
problem occurs when you can definitely keep up with 30hz. When do you decide to go back to 60hz? Game engines will clamp at one or the other as moving back and forth is a worse artifact than just settling at 30hz.

[18:17:01.0000] <heycam>
yeah

[18:17:02.0000] <heycam>
you would want some sort of hysteresis so that you don't flip back and forth often

[18:18:00.0000] <stevela>
Probably want to have the app request a refresh based and the ability to find out what the current vsync interval is.

[18:19:00.0000] <stevela>
Which of course ratholes due to multiple monitors and moving between them (or spanning them).

[18:36:00.0000] <TabAtkins>
Hehe: "What's wrong with this declaration (assuming all classes and namespaces are correct)?

[18:36:01.0000] <TabAtkins>
scoped_ptr<::ppapi::shared_impl::FunctionGroupBase> function_proxies_[INTERFACE_ID_COUNT];"

[18:36:02.0000] <TabAtkins>
Answer: "<:: is the I Ching trigram for mountain. The angle bracket represents elevation and the two broken lines represent earth. I'd refuse to compile this too -- very inauspicious."

[18:37:00.0000] <Hixie>
mountain is more like |:: on its side, no?

[18:37:01.0000] <Hixie>
:-P

[18:37:02.0000] <Hixie>
(U+2636)

[18:38:00.0000] <TabAtkins>
Yeah, I noted that too, but hey, it was close enough to be funny.

[18:38:01.0000] <jamesr>
<:: is a really tall mountain

[18:39:00.0000] <jamesr>
imagine if html had trigraphs

[18:39:01.0000] <Hixie>
C's trigraphs are bad enough

[18:40:00.0000] <Hixie>
let's not go there

[18:40:01.0000] <heycam>
??! -- the incredulity operator

[18:40:02.0000] <jamesr>
trigraphs are what breaks "scoped_ptr<::namespace.."

[18:40:03.0000] <TabAtkins>
HTML has a quadgraph - <!--

[18:41:00.0000] <Hixie>
no, digraphs are what breaks the above

[18:41:01.0000] <jamesr>
that's a digraph?

[18:41:02.0000] <Hixie>
<:

[18:41:03.0000] <Hixie>
means [ in C

[18:41:04.0000] <jamesr>
>:{

[18:41:05.0000] <heycam>
huh, I never knew about those two character diagraphs

[18:47:00.0000] <jcranmer>
you can disable digraphs in most C compilers, IIRC

[19:23:00.0000] <jamesr>
do people use the [, arguments] part of window.setTimeout()/window.setInterval() often?

[19:28:00.0000] <ryanseddon>
it;s not supported in all browsers

[19:28:01.0000] <ryanseddon>
so pretty much use at own risk

[19:28:02.0000] <jamesr>
which browsers do not support it? http://www.whatwg.org/specs/web-apps/current-work/multipage/timers.html#timers specifies it

[19:29:00.0000] <ryanseddon>
IE

[19:29:01.0000] <ryanseddon>
not sure baout 9 or 10

[19:29:02.0000] <jamesr>
ok, that's useful to know

[19:29:03.0000] <ben_alman>
wat

[19:29:04.0000] <ben_alman>
using optional arguments in setInterval / setTimout would be super cool but it's fail-sauce in IE

[19:30:00.0000] <ben_alman>
so you kinda avoid it when having to write x-browser code

[19:30:01.0000] <jamesr>
so people would use it if they could, most likely

[19:30:02.0000] <ben_alman>
and have to use a closure or partial application

[19:30:03.0000] <ben_alman>
jamesr, +1

[19:30:04.0000] <ben_alman>
BUT

[19:30:05.0000] <ben_alman>
keep in mind that even if you use opt args

[19:30:06.0000] <ben_alman>
mozilla has there extra lateness arg

[19:30:07.0000] <ben_alman>
which totally messes everything up

[19:30:08.0000] <ben_alman>
http://benalman.com/news/2009/07/the-mysterious-firefox-settime/

[19:31:00.0000] <jamesr>
yeah they interfere with adding additional arguments later

[19:31:01.0000] <ben_alman>
afaict, setTimeout and setInterval are hopelessly fucked

[19:31:02.0000] <ryanseddon>
long live rAF

[19:31:03.0000] <ben_alman>
but you could totally use Function#bind

[19:31:04.0000] <paul_irish>
:)

[19:31:05.0000] <jamesr>
they are pretty bad but we're doing something sort of similar with requestAnimationFrame and i'm trying to figure out which parts to take

[19:31:06.0000] <ben_alman>
setTimeout(fn.bind(null, arg1, arg2), 1000)

[19:32:00.0000] <jamesr>
one guy is saying that he'd like the optional args part of settimeout

[19:32:01.0000] <ben_alman>
i dunno

[19:32:02.0000] <ben_alman>
i like passing the extra args from a sugar pov

[19:32:03.0000] <jamesr>
ben_alman: isn't that just setTimeout(function() {blahblah(arg1, arg2);}, 1000); ?

[19:32:04.0000] <ben_alman>
jamesr, pretty much, but isn't that pretty much the same thing as args @ the end?

[19:33:00.0000] <jamesr>
well it works in IE presumably

[19:33:01.0000] <ben_alman>
polyfill Fn#bind and it works everywhere regardless of Moz or IE, right?

[19:33:02.0000] <ryanseddon>
yep

[19:33:03.0000] <ben_alman>
because the lateness arg and the IE borked-ness would become a non-issue

[19:34:00.0000] <ben_alman>
i've created jQuery plugins (etc) that have optional args @ the end

[19:34:01.0000] <ben_alman>
which is nice

[19:34:02.0000] <ben_alman>
for sure

[19:34:03.0000] <ben_alman>
but because of setTimeout / setInterval it's tough to say "we're making it like these" since they have x-browser issues

[19:37:00.0000] <ben_alman>
ok, time to roll

[23:04:00.0000] <ben_h>
!

[23:37:00.0000] <Hixie>
a number of people replying to the survey on the licenses seem to lack understanding of how the w3c patent policy works, which is odd

[23:37:01.0000] <jamesr>
people on the internet do not understand things as well as they think they do? why does that seem odd to you?

[23:38:00.0000] <Hixie>
because the people who don't understand it seem to have strong views on the matter and should know better

[23:39:00.0000] <jamesr>
has the w3 ever sued anyone over copyright violation?

[23:39:01.0000] <Hixie>
not to me knolwedge

[23:39:02.0000] <Hixie>
but it has a chilling effect

[23:42:00.0000] <hsivonen>
When I got a copyright warning from the W3C, I sure felt chilled until the warning was retracted a few minutes later.

[23:42:01.0000] <Hixie>
right

[23:42:02.0000] <Hixie>
oh hey, hsivonen is here

[23:42:03.0000] <Hixie>
hsivonen: see the xslt bug

[23:43:00.0000] <Hixie>
hsivonen: let me know if it's ok

[23:43:01.0000] <jamesr>
yeah it's disappointing

[23:43:02.0000] <Hixie>
hsivonen: it's not normative, the task of defining it sufficiently to get the effect you want normatively seemed a bit daunting

[23:43:03.0000] <hsivonen>
Hixie: the diff looked OK. A bit worrying that it prescribed one thing I consider a bug in Firefox, but since we aren't planning to fix that bug, I'm OK with it.

[23:43:04.0000] <Hixie>
happy to change it, especially since it's just descriptive and not normative

[23:44:00.0000] <hsivonen>
Hixie: nah. let's leave it like that

[23:44:01.0000] <Hixie>
k

[23:44:02.0000] <hsivonen>
as descriptive it's now entirely accurate

[23:45:00.0000] <hsivonen>
Hixie: thanks

[23:45:01.0000] <hsivonen>
I hope the next implementor appreciates the note

[23:45:02.0000] <Hixie>
np

[23:45:03.0000] <Hixie>
yeah, hope so

[23:45:04.0000] <hsivonen>
I sure wish it had been in the spec when I implemented

[23:45:05.0000] <Hixie>
yeah, sorry about that. xslt isn't on my radar.

[23:52:00.0000] <tw2113>
about what you're looking for?

[23:52:01.0000] <tw2113>
wrong room, my bad

[02:44:00.0000] <smaug____>
when is anne coming back?

[02:44:01.0000] <smaug____>
/me hopes someone will specify caretRangeFromPoint properly

[02:45:00.0000] <jgraham>
smaug____: s/someone/anne/?

[02:45:01.0000] <jgraham>
End of the month, I think

[02:45:02.0000] <smaug____>
jgraham: ok, thanks

[02:46:00.0000] <smaug____>
jgraham: well, it is "anne's" spec, where it is currently specified

[02:47:00.0000] <smaug____>
er

[02:47:01.0000] <smaug____>
aha

[02:47:02.0000] <smaug____>
it has  been replaced in the latest editor's draft

[02:47:03.0000] <smaug____>
/me accidentally looked at WD

[02:48:00.0000] <jgraham>
smaug____: You lose 10 W3C points

[02:48:01.0000] <smaug____>
/me blames bug reported

[02:48:02.0000] <smaug____>
reporter

[02:49:00.0000] <jgraham>
Oh, anne is actually back a bit later than I thought

[02:49:01.0000] <jgraham>
But anyway

[06:29:00.0000] <sgentle>
hiya

[06:29:01.0000] <Philip`>
Hello

[06:33:00.0000] <sgentle>
would this be a good place to ask obscure questions about the different browser implementations of canvas global compositing? :D

[06:33:01.0000] <Philip`>
Yes :-)

[06:33:02.0000] <sgentle>
I was hoping you'd say that :D

[06:34:00.0000] <sgentle>
alright, so my use case is I have a canvas that I'd like to apply an 'eraser tool' style effect to

[06:34:01.0000] <sgentle>
there's stuff under the canvas, so I can't just draw white over it, I need to draw transparent

[06:34:02.0000] <sgentle>
aka the 'copy' composite operation

[06:35:00.0000] <sgentle>
in webkit browsers that works fine, because they restrict the scope of the operation to the area being drawn

[06:36:00.0000] <Philip`>
Yeah, WebKit doesn't match the spec

[06:37:00.0000] <sgentle>
*nod* and the spec seems to say the right thing to do is for the scope to be the clipping area

[06:37:01.0000] <Philip`>
Yep

[06:37:02.0000] <sgentle>
which is cool, except... is there a way to do what I want to do using the spec-compliant way?

[06:38:00.0000] <Philip`>
How are you drawing your tool?

[06:38:01.0000] <Philip`>
If it's an outline that you fill() then you could clip() to it first and then clear, I think

[06:39:00.0000] <sgentle>
yeah, I'm trying that at the moment

[06:39:01.0000] <sgentle>
but the spec says when you clip() it intersects with the old clipping area

[06:39:02.0000] <Philip`>
Why is that a problem?

[06:40:00.0000] <Philip`>
(You can save()/restore() to fix the clipping region afterwards)

[06:40:01.0000] <sgentle>
oh right

[06:41:00.0000] <sgentle>
...you keep anticpating what I'm typing, is that a special whatwg power? :)

[06:41:01.0000] <Philip`>
Telepathy is an experimental feature in HTML6

[06:43:00.0000] <Philip`>
I don't think there's any way to clear non-rectangular shapes other than via clipping, or manually with get/putImageData

[06:44:00.0000] <Philip`>
but hopefully clipping is powerful enough for most needs

[06:48:00.0000] <sgentle>
aww, look at that, works perfectly now

[06:49:00.0000] <sgentle>
thanks so much

[06:51:00.0000] <sgentle>
dunno why, I just skipped over "save" and "restore" thinking they were about image data... even though I already new about get/putImageData

[06:59:00.0000] <Philip`>
sgentle: They're about pretty much everything *except* image data

[11:42:00.0000] <hij1nx>
does anyone know of an html5 parser in c++?

[11:42:01.0000] <jcranmer>
gecko's HTML parser?

[11:42:02.0000] <AryehGregor>
hij1nx, Mozilla uses one.

[11:42:03.0000] <AryehGregor>
Grr, Chrome just lost all my open tabs on upgrade and restart.  >:(

[11:43:00.0000] <jcranmer>
(well, technicaly it's written in Java, converted to C++ automatically, and then hand-tweaked for better performance)

[11:43:01.0000] <jcranmer>
but I digress

[11:43:02.0000] <AryehGregor>
And I see no way to get them back.  Oh well.

[11:44:00.0000] <hij1nx>
AryehGregor: curious about dependencies

[11:44:01.0000] <AryehGregor>
hij1nx, no idea, sorry.

[11:44:02.0000] <hij1nx>
AryehGregor: =)

[11:45:00.0000] <hij1nx>
jcranmer: from what i understand, there are deps on jsc

[11:46:00.0000] <hij1nx>
jcranmer: sorry, i read gecko and thought webcore ;)

[11:49:00.0000] <Ms2ger>
hij1nx, hsivonen has at least thought about releasing a C++ HTML parser, IIRC

[11:49:01.0000] <hij1nx>
Ms2ger: i just found this in a google search... http://www.netsurf-browser.org/projects/hubbub/

[11:50:00.0000] <hsivonen>
indeed, it's planned and ok'ed by Mozilla. I just need to take a break from Gecko work to do it.

[11:51:00.0000] <hij1nx>
does anyone have any opinion on this? (http://www.netsurf-browser.org/projects/hubbub/)

[11:52:00.0000] <hsivonen>
jcranmer: it's not really "hand-tweaked for better performance" after the translation, FWIW

[11:52:01.0000] <jcranmer>
hsivonen: I thought there were a few patches applied only to the C++ end

[11:52:02.0000] <jcranmer>
I could be recalling wrong

[11:53:00.0000] <jcranmer>
gecko is not my main cup of tea

[11:53:01.0000] <hsivonen>
jcranmer: there are some minor differences between Java and C++ but they are baked into the translator, so there's no patching of the translator output

[11:53:02.0000] <jcranmer>
ah

[11:54:00.0000] <jcranmer>
same basic idea

[11:54:01.0000] <hsivonen>
the main differences are:

[11:54:02.0000] <hsivonen>
1) the named character data layout is generated separately so that tables aren't translated from the Java tables

[11:55:00.0000] <hsivonen>
2) in the near future, the C++ version will have two copies of the tokenizer loop: one with error reporting and one without

[11:55:01.0000] <hsivonen>
(the goto stuff turned out to be slower than the switchiness, so I threw it away)

[11:56:00.0000] <jcranmer>
I'm not surprised

[11:57:00.0000] <jcranmer>
switch statements are probably more aggressively optimized than gotos

[11:57:01.0000] <hsivonen>
I suppose so

[11:57:02.0000] <jcranmer>
on the basis that people actually use switch statements

[11:57:03.0000] <hsivonen>
:-)

[12:15:00.0000] <TabAtkins>
othermaciej: Doesn't the fact that Ian's diff is different from Rich's qualify as an objection from Ian?

[12:15:01.0000] <othermaciej>
TabAtkins: I prefer not to make assumptions

[12:16:00.0000] <Orbixx>
Just had an interesting idea.

[12:16:01.0000] <othermaciej>
of anyone (Ian, you, or anyone else) thinks Rich's diff is inconsistent with the decision or contains changes not actually required by the decision, they can say so

[12:16:02.0000] <Orbixx>
It's debatably redundant, due to TLS, but here it goes.

[12:17:00.0000] <AryehGregor>
TabAtkins, logically it shouldn't imply that.  Maybe he thinks that there are multiple legitimate ways to read the decision.

[12:17:01.0000] <Orbixx>
An option for <input> for password fields, where a hash type can be specified in the tag so that the browser hashes the password before sending it to the webserver.

[12:18:00.0000] <TabAtkins>
Orbixx: If the attacker can snoop, they can probably MITM you as well and just alter the page in-flight to the user to not have the hash, and then alter the response back to the server to have the hashed data.

[12:18:01.0000] <AryehGregor>
Orbixx, can be done pretty easily in JavaScript.  Is it really widely enough done that there's a need for a declarative feature?

[12:19:00.0000] <AryehGregor>
TabAtkins, it works against passive MITMs, which is a valid use-case.

[12:19:01.0000] <AryehGregor>
Passive MITM is often less risky or easier than active MITM.

[12:19:02.0000] <hij1nx>
is anyone familiar with libDOM?

[12:19:03.0000] <Orbixx>
TabAtkins: Assume the network is secure against active MITM.

[12:19:04.0000] <Orbixx>
Which established networks are.

[12:20:00.0000] <Orbixx>
You know, and other unlikely stuff.

[12:20:01.0000] <AryehGregor>
Orbixx, usually if you can do passive MITM, you can do active too.

[12:20:02.0000] <AryehGregor>
If you can read the packets, you're presumably intercepting them somehow and can change them.

[12:20:03.0000] <AryehGregor>
Maybe not in some Wi-Fi scenarios, not sure about that.

[12:21:00.0000] <Orbixx>
Mmm, that's true.

[12:21:01.0000] <TabAtkins>
In many open wifi scenarious, you can alternately just broadcast yourself as a hotspot and act as a MITM proxy.

[12:21:02.0000] <AryehGregor>
Right, but you're always much more likely to be detected if you tamper with anything, so passive-only MITM is still a valid use-case.

[12:21:03.0000] <AryehGregor>
I just don't think it's important enough to justify a declarative feature for something that's trivial to do from script.

[12:21:04.0000] <Orbixx>
Hmm.

[12:21:05.0000] <AryehGregor>
vBulletin does this from script, for example.

[12:22:00.0000] <Orbixx>
Okay, assume this isn't intended to combat MITM.

[12:22:01.0000] <Orbixx>
What about...

[12:22:02.0000] <AryehGregor>
Special markup is only a good idea if it would be very widely useful.

[12:22:03.0000] <Orbixx>
Assume HTTPS, but it's to protect against

[12:22:04.0000] <Orbixx>
Wait, nevermind.

[12:22:05.0000] <Orbixx>
That's also stupid.

[12:22:06.0000] <Orbixx>
:D

[12:22:07.0000] <Orbixx>
Oh well.

[12:22:08.0000] <AryehGregor>
Sounds like you're starting with a feature and then trying to think of uses.  That's not a good way to go about things.

[12:22:09.0000] <Orbixx>
Just a thought.

[12:22:10.0000] <AryehGregor>
Start with "I want to do X but the existing ways all have problems".

[12:22:11.0000] <AryehGregor>
A concrete use-case.

[12:22:12.0000] <Orbixx>
Yeah, fair comment.

[12:23:00.0000] <AryehGregor>
People are not usually interesting in writing specifications and code for features that aren't demonstrably useful in real life.

[12:23:01.0000] <Orbixx>
It's very rare I actually come up with an idea, so I'm not used to the critical thinking that comes with it :P

[12:23:02.0000] <AryehGregor>
No problem.

[12:23:03.0000] <AryehGregor>
I've thought of the same feature, I think.

[12:24:00.0000] <Orbixx>
Kind of why I came here, I expected exactly what I got.

[12:24:01.0000] <Orbixx>
Criticism that would tell me why it's a stupid idea :P

[12:24:02.0000] <AryehGregor>
Happy to oblige.  :)

[12:26:00.0000] <Orbixx>
Got a little bit excited about contributing to HTML specification for a brief moment.

[12:26:01.0000] <Orbixx>
I'll return with yet another brilliant yet flawed concept soon, no doubt.

[12:29:00.0000] <AryehGregor>
Looking forward to it!

[13:05:00.0000] <AryehGregor>
If you had the markup <ol><li>foo<br>bar<li>baz</ol>, and selected "foo" and ran an "indent" command, what would you expect to happen?

[13:06:00.0000] <AryehGregor>
I'm observing six different behaviors in six different programs.

[13:06:01.0000] <TabAtkins>
I expect another list to be created.

[13:06:02.0000] <TabAtkins>
Dunno whether I'd expect ol or ul.

[13:06:03.0000] <Ms2ger>
Wrap it in a blockquote? :)

[13:07:00.0000] <AryehGregor>
TabAtkins, like <ol><li><ol><li>foo</ol>bar<li>baz</ol> or something?

[13:07:01.0000] <Hixie>
set a class on it and have a style rule added that adds some padding? :-)

[13:07:02.0000] <AryehGregor>
Ms2ger, correct for Firefox with styleWithCSS true!

[13:07:03.0000] <TabAtkins>
AryehGregor: I guess.  Is there a more targetted "make a list" command than "indent"?

[13:07:04.0000] <AryehGregor>
TabAtkins, yes, there are also insertOrderedList and insertHorizontalList.

[13:07:05.0000] <AryehGregor>
Those tend to toggle the list, if there's one already.

[13:07:06.0000] <TabAtkins>
Oh, hmm then.

[13:08:00.0000] <AryehGregor>
(the six different behaviors in six different programs are actually because Gecko and OpenOffice.org both exhibit two different behaviors depending on which commands you use)

[13:08:01.0000] <Ms2ger>
AryehGregor, hey, that was best practice in '96 ;)

[13:08:02.0000] <AryehGregor>
Ms2ger, well, it's also what most browsers do for indent outside of lists.

[13:08:03.0000] <AryehGregor>
Since you haven't selected the whole <li>, Gecko seems to just ignore the fact that you're in a list.

[13:09:00.0000] <TabAtkins>
If indention is usually done by blockquote, I guess just keep with the blockquoting.

[13:09:01.0000] <AryehGregor>
But normally, indenting inside a list nests a list, like <ol><li>foo<li>bar<li>baz</ol> -> <ol><li>foo<ol><li>bar</ol><li>baz</ol> (if "bar" is selected).

[13:10:00.0000] <AryehGregor>
Anyway, I'm not really trying to collect data here, I was just amused by the wild discrepancies.

[13:10:01.0000] <TabAtkins>
Mapping GUI idioms to semantic code is hard.

[13:10:02.0000] <AryehGregor>
I don't care about the semantics, I'm only looking at the visible output.

[13:11:00.0000] <AryehGregor>
This is a WYSIWYG API, after all.

[13:11:01.0000] <AryehGregor>
There are six different behaviors just in the visible output.

[13:11:02.0000] <AryehGregor>
(I mean, I care about semantics somewhat, but the API really is entirely presentational by design, so producing semantic markup is not a possible design goal)

[13:12:00.0000] <AryehGregor>
(Of course I care about semantics in general, just not much in the case of execCommand())

[13:12:01.0000] <Hixie>
AryehGregor: 6 for 6 is pretty bad. i did once have 4 different behaviours for 3 browsers, though (iirc that was a quirks mode thing)

[13:12:02.0000] <erlehmann>
urgs

[13:12:03.0000] <AryehGregor>
Hixie, if I didn't test IE or Opera in this case, I'd have six behaviors for four programs.  :)

[13:13:00.0000] <Ms2ger>
Hixie, I thought it was a version thing

[13:13:01.0000] <TabAtkins>
At least you know that you can spec anything you want.  That's some nice freedom there.

[13:13:02.0000] <Hixie>
oh, yeah, i've definitely had it for multiple versions of the same browser, too

[13:13:03.0000] <Hixie>
TabAtkins: indeed

[13:13:04.0000] <AryehGregor>
(IE and Opera agree with Firefox's non-CSS mode, which is roughly <ol><ol><li>foo<br>bar</ol><li>baz</ol>)

[13:13:05.0000] <TabAtkins>
Hell, you can spec an entirely new behavior and only be inconsistent with 16% more implementations than otherwise.

[13:13:06.0000] <AryehGregor>
Yeah, I'm trying to work out a mental model for lists that makes sense for users.

[13:14:00.0000] <AryehGregor>
And apply it consistently.

[13:14:01.0000] <Ms2ger>
glwt

[13:14:02.0000] <TabAtkins>
Wait, what?  <ol> as a direct child of <ol>?

[13:14:03.0000] <AryehGregor>
Yes.

[13:14:04.0000] <TabAtkins>
Awesome.

[13:14:05.0000] <AryehGregor>
Every browser will do that in some case here, I think.

[13:15:00.0000] <Ms2ger>
TabAtkins, obviously, you don't want the bullet ;)

[13:15:01.0000] <AryehGregor>
It's the only logical way to get a visual effect like "\t\ta. foo\n\t1. bar".

[13:15:02.0000] <AryehGregor>
So it's the natural thing to do if the user does indent on something like <ol><li>foo</ol>.

[13:15:03.0000] <AryehGregor>
Just do <ol><ol><li>foo</ol></ol>.

[13:15:04.0000] <AryehGregor>
Of course, such a list makes no semantic sense, so is deservedly invalid.

[13:18:00.0000] <AryehGregor>
This testing is time-consuming.

[14:00:00.0000] <TabAtkins>
Wait, what? "you are challenging the purpose of ARIA itself, and related, WCAG

[14:00:01.0000] <TabAtkins>
standards. These are required by U.S. law, and their absence is an active

[14:00:02.0000] <TabAtkins>
attempt at stifling competition.

[14:01:00.0000] <AryehGregor>
Have I remarked before that Change Proposal-mediated arbitration is probably the only way to make progress in the HTMLWG on a11y issues?

[14:01:01.0000] <TabAtkins>
Not in my company.

[14:02:00.0000] <AryehGregor>
Ooh, ooh, I got something that has different behavior in every one of the programs.

[14:02:01.0000] <AryehGregor>
One behavior per program.

[14:03:00.0000] <AryehGregor>
In <ol><li>foo<li>bar<ol><li>baz</ol><li>quz</ol>, select "bar" and click the unordered list button (or do insertUnorderedList for browsers).

[14:06:00.0000] <Ms2ger>
"progress"

[14:07:00.0000] <AryehGregor>
/me thinks Opera is correct on that one, given the constraints browsers face

[14:07:01.0000] <AryehGregor>
Word and OO seem to not mind having one list with some items bulleted and some numbered.

[14:42:00.0000] <bckenny>
hihihihi

[14:42:01.0000] <bckenny>
whoops, sorry about that

[15:05:00.0000] <TabAtkins>
Hixie, I really wish you'd not just do whatever the trolls ask to the W3C spec.

[15:10:00.0000] <karlcow>
TabAtkins, everyone can be the troll of someone else. Welcome to the new Class struggle

[15:10:01.0000] <TabAtkins>
Don't try and pull that relativism line on me.  ^_^

[15:11:00.0000] <karlcow>
TabAtkins, I'm not trying. I'm asserting (for once)

[15:11:01.0000] <TabAtkins>
Okay, then don't assert that relativism line.

[15:12:00.0000] <karlcow>
fascism ;)

[15:12:01.0000] <TabAtkins>
I... don't understand the reference.  Also, did you just Godwin yourself?

[15:13:00.0000] <karlcow>
you mention godwin, not me and you asked me to "do not"

[15:13:01.0000] <TabAtkins>
I'm even more confused now.

[15:14:00.0000] <karlcow>
I can see that.

[15:14:01.0000] <TabAtkins>
Sigh.

[15:15:00.0000] <karlcow>
/me was just saying that many of the schisms in HTMLWG are due to conflicts driven by school of thoughts, ideas of society, and generations.  

[15:15:01.0000] <karlcow>
not trolls

[15:15:02.0000] <Ms2ger`>
karlcow, I wish I could believe you

[15:17:00.0000] <TabAtkins>
I don't care about the differences in thought - those are natural and fine.  I care about the trollish behavior, starting with the Decision Process that Shelley got instituted, which has now successfully made it too expensive to care what happens to the spec for most of the useful people.

[15:17:01.0000] <karlcow>
I have, for example, stopped participating mostly in discussions about html5, because people categorize others as trolls, or pickup your own $preferredexclusion mode.

[15:18:00.0000] <AryehGregor>
/me more or less agrees with karlcow 

[15:18:01.0000] <AryehGregor>
I don't think anyone is trolling in the HTMLWG, as a matter of course.

[15:18:02.0000] <AryehGregor>
Anyone who thinks otherwise is erroneously assuming bad faith.

[15:18:03.0000] <AryehGregor>
All the active participants are genuinely trying to improve the spec.

[15:18:04.0000] <AryehGregor>
Trolling would be if they just wanted to annoy people, and didn't care about the spec.

[15:19:00.0000] <Philip`>
What if they care about the spec *and* want to annoy people?

[15:19:01.0000] <TabAtkins>
I consider active use of the Decision Process to be trolling, basically. ^_^

[15:19:02.0000] <karlcow>
Philip`: I still have to meet this person then.

[15:19:03.0000] <AryehGregor>
TabAtkins, that amounts to using the term "troll" to refer to anyone you disagree with.

[15:19:04.0000] <AryehGregor>
Which is common usage, but not very productive.

[15:20:00.0000] <TabAtkins>
AryehGregor: Certainly not.  That implies that I disagree with every issue ever raised via the Decision Process.

[15:20:01.0000] <AryehGregor>
Or that you disagree with the idea of using the Decision Process regardless of the issue's merits.

[15:21:00.0000] <TabAtkins>
Bingo.

[15:23:00.0000] <TabAtkins>
(I happen to disagree with *most* of the issues that have been through the Decision Process, but certainly not all.  I still disapprove of the use of the DP on the issues I agree with.)

[15:32:00.0000] <zcorpan>
Hixie: do all elements now have ids of the form the-foo-element?

[15:32:01.0000] <Ms2ger`>
Should be that way

[15:32:02.0000] <zcorpan>
yay

[15:33:00.0000] <zcorpan>
/me fixes html-elements

[15:37:00.0000] <zcorpan>
ah, need to wait for ben to regen developers.whatwg.org

[15:42:00.0000] <zcorpan>
Hixie: fwiw and as someone who maintains links to elements in the spec, the id change is really good. not having to scrape the spec to know what the id is for an element is a huge win

[15:42:01.0000] <zcorpan>
although i also maintain links to attributes

[15:43:00.0000] <Hixie>
TabAtkins: object to it and the chairs will require me to revert it

[15:43:01.0000] <TabAtkins>
I did now.

[15:43:02.0000] <Hixie>
zcorpan: cool

[15:44:00.0000] <Hixie>
zcorpan: file a bug saying which attributes need updating like jirka did for the elements and i'll fix them too :-)

[15:48:00.0000] <zcorpan>
oops. i accidentally all the attribute links in html-elements

[15:48:01.0000] <Ms2ger`>
ALL of them?

[15:49:00.0000] <benschwarz>
zcorpan: Regenerated

[15:49:01.0000] <benschwarz>
Deployed.

[15:49:02.0000] <zcorpan>
Ms2ger`: yep

[15:49:03.0000] <zcorpan>
benschwarz: cool

[15:52:00.0000] <zcorpan>
hmm, the html element is still the-html-element-0

[15:52:01.0000] <zcorpan>
jirka's list was not complete

[15:53:00.0000] <zcorpan>
Hixie: can't you set an explicit id for all elements so they're guaranteed to be stable?

[15:54:00.0000] <Hixie>
i can, but it's a pain

[15:54:01.0000] <Hixie>
<html> has an explicit id now though

[15:54:02.0000] <Hixie>
it was in his list

[15:54:03.0000] <zcorpan>
oh

[15:56:00.0000] <zcorpan>
ah yep, maybe the redeployment of developers.whatwg.org hadn't reached me yet. or i had it cached. or something

[15:57:00.0000] <zcorpan>
but body is still broken

[15:58:00.0000] <Hixie>
you have to reload developers.whatwg.org

[15:58:01.0000] <Hixie>
because it has appcache

[15:59:00.0000] <Hixie>
fixing body

[16:00:00.0000] <benschwarz>
zcorpan, Hixie — https://github.com/benschwarz/developers.whatwg.org/commit/894f834a99628f82f7435639ba223a5e0b224858

[16:00:01.0000] <benschwarz>
(also deployed)

[16:01:00.0000] <zcorpan>
Hixie: video is also broken

[16:01:01.0000] <Hixie>
i fixed video, didn't i?

[16:02:00.0000] <Hixie>
/me loosk

[16:02:01.0000] <zcorpan>
uh

[16:02:02.0000] <zcorpan>
yep video is in the diff

[16:02:03.0000] <Hixie>
yup

[16:02:04.0000] <zcorpan>
developers.whatwg.org refusing to update for me again

[16:02:05.0000] <Hixie>
didn't it take?

[16:02:06.0000] <Hixie>
zcorpan: you have to wait for your browser to update the appcache

[16:02:07.0000] <Hixie>
zcorpan: then reload

[16:03:00.0000] <zcorpan>
or wait, i wasn't even looking at developers.whatwg.org

[16:06:00.0000] <zcorpan>
hmm. when reloading http://developers.whatwg.org/video.html a few times i get four "whatwg" logos and four "in this section" buttons

[16:07:00.0000] <Hixie>
o_O

[16:09:00.0000] <zcorpan>
http://validator.nu/?doc=http%3A%2F%2Fdevelopers.whatwg.org%2Fvideo.html

[16:11:00.0000] <aho>
so... what's the replacement for hgroup?

[16:11:01.0000] <Hixie>
aho: <hgroup> is still in html, just not in the w3c copy of html5.

[16:11:02.0000] <Hixie>
the w3c copy is missing many newer things.

[16:11:03.0000] <aho>
*scratches head*

[16:11:04.0000] <Hixie>
see http://www.whatwg.org/specs/web-apps/current-work/multipage/introduction.html#is-this-html5?

[16:13:00.0000] <zcorpan>
Hixie: ok seems like all links are working now

[16:13:01.0000] <aho>
so, it still exists and will continue to do so for the foreseeable future?

[16:13:02.0000] <Hixie>
zcorpan: cool

[16:13:03.0000] <Hixie>
aho: yeah, it's not going anywhere. even the spec uses it.

[16:13:04.0000] <aho>
heh

[16:13:05.0000] <aho>
ok

[16:13:06.0000] <aho>
:)

[16:14:00.0000] <Hixie>
(at least on the whatwg site... the w3c html spec uses html4, so it can't use hgroup or any of the new elements.)

[16:15:00.0000] <zcorpan>
how come http://www.w3.org/Bugs/Public/show_bug.cgi?id=11828 is NEEDSINFO?

[16:18:00.0000] <Hixie>
resolution was changed by nicolasgallagher⊙mc

[16:18:01.0000] <Hixie>
@gmail, even

[16:18:02.0000] <Hixie>
dunno why

[16:23:00.0000] <zcorpan>
also no comment about the spec checkin

[16:24:00.0000] <zcorpan>
oh sorry there was a comment

[16:24:01.0000] <Hixie>
my script is a bit bitchy when it comes to adding that comment

[16:25:00.0000] <Hixie>
something to do with encoding errors or something, i think

[16:25:01.0000] <Hixie>
it used to not commit at all if there was invalid utf-8, i think i fixed that but it's still not completely ok

[16:25:02.0000] <Hixie>
i haven't cared enough to investigate exactly what the problem is

[16:40:00.0000] <Hixie>
anyone know if the idea of doing textarea.selectionDirection="backward" ever got implemented anywhere?

[16:41:00.0000] <AryehGregor>
Not that I've heard of.

[16:41:01.0000] <Hixie>
should i just spec it or wait for impl experience?

[16:42:00.0000] <aho>
is specified what should happen if you click on the some input[type=text]'s label?

[16:43:00.0000] <Hixie>
more or less

[16:43:01.0000] <aho>
chrome and firefox select the text (if any), opera doesn't

[16:43:02.0000] <Hixie>
it should do the same as is normal on that platform

[16:43:03.0000] <aho>
hum

[16:44:00.0000] <aho>
firefox doesn't select the search text in the find bar, if i click on the "find:" label

[16:44:01.0000] <aho>
clicking on some textfield's label doesn't seem to do anything in windows programs

[16:45:00.0000] <Hixie>
(note when drawing conclusions here that it might differ for different types of controls)

[16:45:01.0000] <Hixie>
(e.g. windows checkbox labels are interactive)

[16:45:02.0000] <aho>
oh yea... what does work in all browsers is clicking a button by clicking it's associated label (which is kinda weird)

[16:46:00.0000] <aho>
*its

[16:47:00.0000] <aho>
i think opera does at least focus the text field

[16:48:00.0000] <aho>
http://kaioa.com/k/labelfocus.html

[16:49:00.0000] <aho>
well, that was my use case basically... i didn't want to add js just to select that text

[16:54:00.0000] <Hixie>
othermaciej: i'm adding textarea.selectionDirection; is this something i should exclude from the w3c copy? i'm confused as to what counts as a new feature and what doesn't.

[16:55:00.0000] <othermaciej>
Hixie: I don't know offhand what that is, but excluding it for now unless someone requests otherwise is a safe course

[16:56:00.0000] <Hixie>
it's an attribute added to <input> and <textarea> to control what direction the selection is in

[16:56:01.0000] <Hixie>
goes with selectionStart and selectionEnd

[16:58:00.0000] <Hixie>
othermaciej: i'm not really asking whether it's "safe", so much as what i should do

[16:59:00.0000] <Hixie>
othermaciej: if it helps, i request it :-)

[16:59:01.0000] <othermaciej>
if you leave it out, then probably no one will complain

[16:59:02.0000] <othermaciej>
if you think no one will complain about adding it (seems like they probably wouldn't), then it seems fine to add it

[16:59:03.0000] <Hixie>
k

[16:59:04.0000] <othermaciej>
if in doubt, you can always ask on public-html


2011-05-04
[17:00:00.0000] <Hixie>
that has too-high latency

[17:00:01.0000] <othermaciej>
didn't the i18n people request this a while ago?

[17:00:02.0000] <othermaciej>
or am I confusing it with something else?

[17:00:03.0000] <Hixie>
dunno

[17:00:04.0000] <Hixie>
i'm adding it based on feedback to the whatwg 0ist

[17:00:05.0000] <Hixie>
list

[17:01:00.0000] <AryehGregor>
othermaciej, I don't think it's relevant to i18n at all.

[17:01:01.0000] <AryehGregor>
It's about which direction the user selected the text in, nothing to do with the text direction.

[17:01:02.0000] <othermaciej>
oh

[17:02:00.0000] <othermaciej>
in that case I have no idea what it's about so I have no real opinion

[17:02:01.0000] <zcorpan>
/me thinks someone will complain on the basis that there's always someone who complains for just about anything

[17:03:00.0000] <AryehGregor>
It seems unlikely to be controversial.

[17:03:01.0000] <AryehGregor>
As much as anything is.

[17:03:02.0000] <Hixie>
othermaciej: it's the equivalent of m_baseIsFirst is webkit, as i understand it

[17:04:00.0000] <Hixie>
AryehGregor: so should setSelectionRange() reset the direction to forward or preserve the direction? (i'm adding an optional argument to set the direction, but i mean in the absence of that)

[17:04:01.0000] <AryehGregor>
Hixie, if it helps, Selection.removeAllRanges() resets the direction, but calling removeRange() on the last range doesn't.  :)

[17:05:00.0000] <Hixie>
if we make it preserve the direction then pages that try to preserve the selection today will magically work better

[17:05:01.0000] <Hixie>
but pages that try to reset the selection will have the direction the user last used, somewhat arbitrarily

[17:05:02.0000] <AryehGregor>
Selection.collapse() doesn't reset direction per spec, but I don't know if that's correct.

[17:06:00.0000] <AryehGregor>
I'd say reset it, offhand.

[17:06:01.0000] <Hixie>
k

[17:06:02.0000] <AryehGregor>
It's simpler, it only gives two behaviors.

[17:06:03.0000] <AryehGregor>
Also, it won't make anything work any worse than it currently does.

[17:06:04.0000] <AryehGregor>
Actually, how would it make anything work better, except by chance?

[17:07:00.0000] <AryehGregor>
I mean, the alternative.

[17:07:01.0000] <AryehGregor>
Of preserving the current direction.

[17:07:02.0000] <AryehGregor>
/me shrugs

[17:07:03.0000] <Hixie>
it would mean pages that today remember the start/end would magically also remember the direction

[17:08:00.0000] <AryehGregor>
How?

[17:08:01.0000] <Hixie>
nothing would reset the direction

[17:08:02.0000] <Hixie>
so... it would be preserved

[17:08:03.0000] <Hixie>
am i missing something?

[17:08:04.0000] <Hixie>
this seems simple :-)

[17:08:05.0000] <AryehGregor>
The user selecting something different would reset the direction.

[17:08:06.0000] <AryehGregor>
Or are you saying in the case where the user didn't select something different?

[17:08:07.0000] <AryehGregor>
I.e., the point is that setSelectionRange() with the current start and end is a no-op?

[17:08:08.0000] <Hixie>
sure, but if the user selects something, then the script manipulates the control and puts the selection back, it would presevre the direction

[17:09:00.0000] <AryehGregor>
Manipulates the control how?

[17:09:01.0000] <Hixie>
(sure was to your first of the three lines here)

[17:09:02.0000] <Hixie>
input.value = 'abc' + input.value + 'def'; or whatever

[17:09:03.0000] <Hixie>
the problem we're trying to solve here

[17:09:04.0000] <AryehGregor>
Oh, hmm.

[17:10:00.0000] <AryehGregor>
Have you defined what value changes do to the selection info?

[17:10:01.0000] <AryehGregor>
Are you suggesting that setting the value should clear the selection but preserve its direction, even when there's no selection?

[17:10:02.0000] <Hixie>
i don't think it's specced currently

[17:10:03.0000] <AryehGregor>
I dunno, I still think it's simpler to reset.

[17:10:04.0000] <AryehGregor>
More deterministic.

[17:11:00.0000] <AryehGregor>
Especially if we don't spec what causes selection to change.

[17:11:01.0000] <Hixie>
sounds good

[17:14:00.0000] <Hixie>
hm, Mac selections have three directions

[17:14:01.0000] <AryehGregor>
I think someone mentioned that.

[17:14:02.0000] <AryehGregor>
It sounds evil.

[17:15:00.0000] <Hixie>
i didn't see anything about mac in the thread

[17:16:00.0000] <AryehGregor>
In other threads, about Selection.

[17:16:01.0000] <Hixie>
ah

[17:17:00.0000] <Hixie>
well i'm gonna have three values, forward,backward,none

[17:17:01.0000] <AryehGregor>
That doesn't match Selection, FWIW.

[17:17:02.0000] <AryehGregor>
Probably best to keep them in sync.

[17:17:03.0000] <Hixie>
how do you model a mac neutral selection?

[17:17:04.0000] <Hixie>
i'll use whatever you do

[17:18:00.0000] <Hixie>
don't want conflicting terminology

[17:43:00.0000] <benschwarz>
Hixie: I was offline— what does zcorpan mean by

[17:44:00.0000] <benschwarz>
saying that its not updating for him?

[17:45:00.0000] <Hixie>
AryehGregor: i've gone with "none" for now, file a bug to let me know what you used instead and i'll update accordingly

[17:45:01.0000] <Hixie>
benschwarz: dunno

[17:45:02.0000] <Hixie>
benschwarz: he was saying there's some sort of corruption or something

[17:45:03.0000] <Hixie>
benschwarz: see the validator link he sent

[17:45:04.0000] <benschwarz>
Hixie: I'll have to ask him…

[17:45:05.0000] <benschwarz>
nope

[17:46:00.0000] <Hixie>
benschwarz: http://validator.nu/?doc=http%3A%2F%2Fdevelopers.whatwg.org%2Fvideo.html

[17:46:01.0000] <Hixie>
i gotta go, meeting

[17:46:02.0000] <Hixie>
bbiab

[17:47:00.0000] <benschwarz>
holy shit

[17:47:01.0000] <benschwarz>
ok

[18:54:00.0000] <jamesr>
are thingies defined on IDL functions or methods?

[18:54:01.0000] <jamesr>
thingies that you can call, that is

[19:04:00.0000] <heycam>
jamesr, "operations" :(

[19:04:01.0000] <heycam>
maybe I should change that, sounds sucky

[19:04:02.0000] <heycam>
/me lunches

[19:05:00.0000] <jamesr>
clearTimeout in the WHATWG spec uses 'method'

[19:37:00.0000] <jamesr>
anyone around familiar with mercurial?

[21:39:00.0000] <GPHemsley>
/me wonders where to report typos in the latest CSS 2.1 spec

[21:44:00.0000] <GPHemsley>
The mailing list, I guess?

[21:45:00.0000] <heycam>
yes I think that's fine

[21:48:00.0000] <tw2113>
is it a typo that makes things sort of work in IE6?

[21:56:00.0000] <GPHemsley>
tw2113: It's much less important than that. :)

[21:57:00.0000] <GPHemsley>
s/less important/smaller/, if you prefer

[21:57:01.0000] <GPHemsley>
(e-mail sent, FWIW)

[21:57:02.0000] <tw2113>
if it broke things in IE6, and you were trying to fix it, i was going to have to stop you

[02:55:00.0000] <jgraham>
"Holy crap, I though that I'm member of working group and not a member of

[02:55:01.0000] <jgraham>
absurd comedy company here."

[02:55:02.0000] <jgraham>
You must be new here?

[04:01:00.0000] <MikeSmith>
heh

[04:25:00.0000] <hsivonen>
is the first Ask Professor Markup box correct per spec on http://diveintohtml5.org/offline.html ?

[04:25:01.0000] <hsivonen>
the one that says "Every page of your web application needs a manifest attribute that points to the cache manifest for the entire application."

[04:29:00.0000] <hsivonen>
boohoo. the spec, dev.opera.com and Dive into HTML5 all make it hard to find out at a glance if the app cache events fire on window, document or window.applicationCache

[04:30:00.0000] <hsivonen>
ah. the specs answers the question in a non-normative section http://www.whatwg.org/specs/web-apps/current-work/#appcacheevents

[04:30:01.0000] <hsivonen>
I failed to work it out from the normative bits

[04:31:00.0000] <Lachy>
hsivonen, it's probably wise to confirm that in the normative bits, since I've come across non-normative parts in the spec that contradicted the normative parts

[04:36:00.0000] <hsivonen>
testing this stuff sure is hard

[04:41:00.0000] <hsivonen>
ok. there's something wrong with my test case, since I get the checking event but not the cached event

[04:43:00.0000] <hsivonen>
great. one of my cache manifest entries pointed to a non-existent file

[04:43:01.0000] <hsivonen>
Dive into HTML5 is right about debugging this stuff!

[05:43:00.0000] <hsivonen>
how do I ask an app cache error event object what went wrong?

[05:44:00.0000] <hsivonen>
ok. now I see what went wrong without asking the object...

[05:56:00.0000] <hsivonen>
soo. if I navigate a window.open()ed window via the outer window object, I'm supposed to get a load event visible to the outer window, right?

[07:19:00.0000] <MikeSmith>
hsivonen: hyphenation feature looks pretty cool

[07:19:01.0000] <hsivonen>
MikeSmith: yeah. too bad it seems the dictionaries total to too many bytes to be all bundled always

[07:19:02.0000] <mpilgrim>
lol </hgroup>

[07:20:00.0000] <MikeSmith>
hsivonen: yeah, well, that's to be expected I guess

[07:22:00.0000] <mpilgrim>
hsivonen: if Professor Markup is wrong, I'll happily make corrections

[07:22:01.0000] <hsivonen>
mpilgrim: seems to me that hgroup is one of those things were Hixie gets yelled at by the usual suspects no matter what

[07:23:00.0000] <hsivonen>
mpilgrim: I have a bug assigned to me where the premise of the bug disagrees with Professor Markup

[07:24:00.0000] <hsivonen>
mpilgrim: so at least Firefox 3.6 made it possible to load an HTML file that itself doesn't have a manifest attribute from a previously declared app cache

[07:24:01.0000] <mpilgrim>
what happens when you visit that HTML file?

[07:26:00.0000] <hsivonen>
mpilgrim: "if there is no such attribute, or its value is the empty string, or resolving its value fails, run the application cache selection algorithm with no manifest"

[07:26:01.0000] <hsivonen>
mpilgrim: which is what Firefox 3.6 does

[07:26:02.0000] <hsivonen>
and Firefox 4 doesn't

[07:26:03.0000] <hsivonen>
and hopefully Firefox 5 will do

[07:27:00.0000] <mpilgrim>
Slightly confused. what should Professor Markup say instead?

[07:27:01.0000] <mamund_>
/me is here

[07:28:00.0000] <hsivonen>
mpilgrim: that if the user has previously visited an HTML file that caused an application cache to be populated, it is then possible to navigate to other HTML pages that were declared in the manifest of the first page but that don't themselves need a manifest because they got cached already

[07:29:00.0000] <hsivonen>
mpilgrim: except that this doesn't work in Firefox 4 due to this bug

[07:29:01.0000] <mpilgrim>
what happens if the user navigates to those unlisted HTML pages first, before visiting a page with a manifest attribute?

[07:29:02.0000] <mpilgrim>
the page isn't listed in a manifest, and there's no manifest attribute, so it's just a regular online page

[07:29:03.0000] <hsivonen>
mpilgrim: then the browser hits the server

[07:30:00.0000] <mpilgrim>
that's an inconsistent experience

[07:30:01.0000] <hsivonen>
mpilgrim: maybe

[07:30:02.0000] <mpilgrim>
the page is allegedly part of an offline web app

[07:30:03.0000] <mpilgrim>
except it depends on which page you hit first

[07:30:04.0000] <mpilgrim>
try debugging THAT

[07:30:05.0000] <hsivonen>
mpilgrim: but it addresses the problem you, IIRC, had that you had to bother people with the caching authorization on all diveintohtml5 entry points

[07:31:00.0000] <hsivonen>
mpilgrim: as opposed to having one URL for bootstrapping an offline experience

[07:31:01.0000] <hsivonen>
mpilgrim: anyway, I don't try to defend the spec

[07:31:02.0000] <mpilgrim>
ah. that's interesting.

[07:31:03.0000] <mpilgrim>
a "go offline" page

[07:31:04.0000] <mpilgrim>
yes, now i see it

[07:31:05.0000] <hsivonen>
mpilgrim: I'm not even trying to understand the spec beyond fixing the bug and, worse, writing the test case for it

[07:32:00.0000] <hsivonen>
(which we evidently need to have, because if we had had it in time, we wouldn't have shipped Firefox 4 with this bug)

[07:33:00.0000] <mpilgrim>
more test cases is always the right answer

[07:33:01.0000] <mpilgrim>
now i'm trying to figure out how to phrase this in Professor Markup-speak

[07:37:00.0000] <jgraham>
Writing automated offline tests for the testsuite is going to be "fun"

[07:37:01.0000] <jgraham>
I wonder what tests we have for that…

[07:38:00.0000] <hsivonen>
jgraham: can't do it without a special powers API that allows you to grant offline caching authorization and to move the browser to the offline mode

[07:39:00.0000] <hsivonen>
jgraham: I also added a way to evict normal HTTP cache entries into our special powers API

[07:39:01.0000] <hsivonen>
in order to test this

[07:43:00.0000] <MikeSmith>
hsivonen: I think we are going to need similar special-powers APIs for some other things

[07:43:01.0000] <MikeSmith>
e.g., the Geolocation API

[07:43:02.0000] <MikeSmith>
and the Web Notifications API

[07:45:00.0000] <jgraham>
For geolocation and device orientation it's not really clear what you can do

[07:45:01.0000] <jgraham>
Or for notifications really

[07:45:02.0000] <jgraham>
Unless the plan is to have some magic environment that mocks out the real world

[07:45:03.0000] <jgraham>
But that seems… complex

[07:51:00.0000] <MikeSmith>
jgraham: what about the WATIR stuff?

[07:52:00.0000] <jgraham>
MikeSmith: I don't think that has the capacity to lie about system API calls

[07:52:01.0000] <MikeSmith>
ok

[07:52:02.0000] <jgraham>
which is probably what you would need to test e.g. geoloc

[07:53:00.0000] <jgraham>
Well apart from manual testing ofc

[07:54:00.0000] <wilhelm_>
You could fake it somewhere inside the browser. And expose an API for poking the system API-faking-API with Watir or JavaScript.

[07:55:00.0000] <MikeSmith>
seem like you could you make it automateable using a browser build that had the API-lying support compiled in

[07:55:01.0000] <MikeSmith>
that is, not a build that you would actually make available to end users

[07:55:02.0000] <MikeSmith>
or however

[07:56:00.0000] <MikeSmith>
my point being you can test with a browser build that had some dangerous stuff enabled just for the purposes of making the testing automateable

[07:58:00.0000] <jgraham>
Yes you could

[07:58:01.0000] <wilhelm_>
I doubt exposing that in public builds would be particularly harmful, though. Once a Watir script has control over your browser, it can mess up anything it wants to anyway. (c:

[07:58:02.0000] <jgraham>
There is of course the danger that the code is broken in the real environment

[07:59:00.0000] <wilhelm_>
Yes. And faking the location is useful if you're writing tests for a location-based web application too.

[08:00:00.0000] <Philip`>
Just add a precondition to the test case that says you have to move your computer to a particular location before running it

[08:00:01.0000] <Philip`>
Get Google to donate an office for it or something

[08:00:02.0000] <wilhelm_>
Woo! Free travels!

[08:00:03.0000] <Philip`>
preferably in an area without much seismic activity so it's not going to move frequently

[08:02:00.0000] <jgraham>
No California trip then. Much less Japan.

[08:11:00.0000] <MikeSmith>
heh

[08:12:00.0000] <MikeSmith>
somewhat ironically, I now use a browser extension that pops up a notification any time there's an earthquake here that's magnitude 4 or greater

[08:13:00.0000] <wilhelm_>
So every few hours, then?

[08:13:01.0000] <MikeSmith>
there is a similar feature enabled in most mobiles here too

[08:13:02.0000] <MikeSmith>
wilhelm_: yep, pretty much

[08:13:03.0000] <MikeSmith>
get the notification, then 15 seconds or so later, feel the earthquake

[08:14:00.0000] <MikeSmith>
since most of them currently are still coming from the same fault where the big one happeneed

[08:18:00.0000] <MikeSmith>
zcorpan: about the element-id changes

[08:18:01.0000] <MikeSmith>
you will probably need to update some links in the HTML5-HTML4 diffs doc

[08:19:00.0000] <MikeSmith>
actually, there are already some broken links in that doc, btw

[08:19:01.0000] <MikeSmith>
I have just been fixing them each time we publish a WD

[08:19:02.0000] <MikeSmith>
I mean, I have been fixing them in the WD

[08:19:03.0000] <MikeSmith>
not in the source ED

[08:20:00.0000] <zcorpan>
MikeSmith: ah. yeah, file a bug and i'll go through the links

[08:20:01.0000] <MikeSmith>
but they should probably be fixed in the ED before we publish the Last Call draft

[08:20:02.0000] <MikeSmith>
hai

[08:21:00.0000] <foolip>
Philip`, the spec splitter seems to have gone bonkers, <video> is now part of the iframe document: http://www.whatwg.org/specs/web-apps/current-work/multipage/the-iframe-element.html#the-video-element

[08:23:00.0000] <MikeSmith>
foolip: been that way for a while

[08:23:01.0000] <MikeSmith>
not bonkers

[08:23:02.0000] <MikeSmith>
it's expected behavior

[08:23:03.0000] <MikeSmith>
the file names are just generated from whatever ID is at the point where it does the split

[08:23:04.0000] <Philip`>
It's expected to be bonkers

[08:23:05.0000] <MikeSmith>
heh

[08:23:06.0000] <foolip>
ok, and it's intentional that iframe and video are in the same chunk?

[08:24:00.0000] <zcorpan>
before video+audio+source was on one page and media elements was on one page

[08:24:01.0000] <MikeSmith>
Philip`: doesn't it have some way to force splits at particular places?

[08:24:02.0000] <Philip`>
It tries to split on id="video" but it looks like that's been renamed to id="the-video-element"

[08:24:03.0000] <MikeSmith>
aha

[08:24:04.0000] <foolip>
so it is a bug then :)

[08:25:00.0000] <MikeSmith>
hmm, the W3C version was already doing that, I think

[08:25:01.0000] <Philip`>
It does give the impression of being a bug

[08:26:00.0000] <zcorpan>
i'd prefer if there was a split just before the video element so that all video-related stuff is on one page

[08:26:01.0000] <foolip>
looks like Hixie renamed a bunch of things: http://html5.org/tools/web-apps-tracker?from=6049&to=6050

[08:26:02.0000] <foolip>
might want to go through that and see if there was any other unintended breakage

[08:27:00.0000] <foolip>
there are a few more similar commits

[08:27:01.0000] <Philip`>
Might be better to start from scratch and redo all the split ids, since things have probably been added or grown or rearranged in the meantime so the splits won't be sensible anyway

[08:28:00.0000] <Philip`>
plus there's some bug you reported aeons ago that I never bothered doing anything about

[08:30:00.0000] <MikeSmith>
looking at split_exceptions in http://html5.googlecode.com/svn/trunk/spec-splitter/spec-splitter.py it doesn't look so much would have to change due the ID renaming at least

[08:51:00.0000] <MikeSmith>
hsivonen: I'm working on adding support for http://bugzilla.validator.nu/show_bug.cgi?id=828 and will have a patch to you by tomorrow

[08:52:00.0000] <MikeSmith>
after that I don't have any feature changes that I'm planning to add soon

[08:53:00.0000] <MikeSmith>
I would really like to add the Prohibit Duplicate Charset Declarations thing

[08:53:01.0000] <MikeSmith>
http://bugzilla.validator.nu/show_bug.cgi?id=589

[08:53:02.0000] <hsivonen>
MikeSmith: ok.

[08:54:00.0000] <hsivonen>
MikeSmith: did you decide to implement microformat wiki scraping?

[08:54:01.0000] <MikeSmith>
hsivonen: no, thought about it

[08:54:02.0000] <MikeSmith>
but what I would like to propose to you instead is that we just hardcode the values

[08:54:03.0000] <MikeSmith>
and then update them when the page gets updated

[08:55:00.0000] <hsivonen>
MikeSmith: radical

[08:55:01.0000] <hsivonen>
MikeSmith: I was thinking of actually implementing the scraping in the near future if you aren't doing it

[08:55:02.0000] <jgraham>
MikeSmith: On an entirely different topic did you come to any conclusion about annotated versions of the spec for test coverage?

[08:55:03.0000] <hsivonen>
MikeSmith: but your suggestion is a radically easy approximation

[08:55:04.0000] <jgraham>
(feel free to queue replying to that question indefinitely)

[08:55:05.0000] <MikeSmith>
yeah, I think it will make our lives easier

[08:56:00.0000] <MikeSmith>
hsivonen: same goes for meta name checking

[08:57:00.0000] <MikeSmith>
jgraham: I have not come to any conclusion

[08:58:00.0000] <MikeSmith>
but in the mean time, Peter Linss told me about something similar he has put together

[08:58:01.0000] <MikeSmith>
example at http://test.csswg.org/cascade.html

[08:58:02.0000] <Ms2ger>
Has HP already allowed him to release his code?

[08:58:03.0000] <MikeSmith>
scroll down, see the test-annotation boxes

[08:58:04.0000] <MikeSmith>
Ms2ger: dunno

[08:59:00.0000] <jgraham>
Interesting

[09:00:00.0000] <MikeSmith>
the beauty of that thing is that it to make it work, all you have to do is add a single script to a copy of whatever spec you want to do it for

[09:00:01.0000] <MikeSmith>
<script src='http://test.csswg.org/harness/annotate.js#CSS21_RC6' type='text/javascript' defer></script>

[09:00:02.0000] <MikeSmith>
frag ID tells it what test suite you want it to use

[09:01:00.0000] <MikeSmith>
of course it does require you have the spec set up in a certain way

[09:01:01.0000] <MikeSmith>
and it only lets you associate tests with existing IDs

[09:01:02.0000] <MikeSmith>
I think

[09:02:00.0000] <jgraham>
It would be neat to do per-section then per-regexp for better granularity

[09:04:00.0000] <foolip>
Philip`, would you like a bug in some kind of BTS, or will the link http://www.whatwg.org/specs/web-apps/current-work/multipage/the-video-element.html#getting-media-metadata magically start working when you decide to fix it?

[09:04:01.0000] <MikeSmith>
btw, I can't add the Prohibit Duplicate Charset Declarations because it's blocked on Hixie actually making it clear in the spec what the expected validator behavior should be. I guess I should ping him about it

[09:06:00.0000] <zcorpan>
MikeSmith: just implement what you think the spec should say, tell Hixie what you implemented and if he specs something different you whine about it until he makes the spec say what you implemented

[09:06:01.0000] <MikeSmith>
heh

[09:07:00.0000] <jgraham>
zcorpan: Ssh you are giving away the secrets of the vast browser-wing conspiracy

[09:07:01.0000] <MikeSmith>
zcorpan: because Hixie clearly always responds very positively to whining

[09:07:02.0000] <zcorpan>
oh this is #whatwg? wrong window

[09:08:00.0000] <Philip`>
foolip: That link ought to work already, since the 404 page is meant to redirect, but it looks like Hixie broke the 404 page there :-(

[09:09:00.0000] <zcorpan>
the 404 page was not found?

[09:09:01.0000] <Philip`>
/me has no idea when it last used to work

[09:10:00.0000] <MikeSmith>
it works still in the W3C version I think

[09:10:01.0000] <MikeSmith>
or did a couple days ago at least

[09:11:00.0000] <Philip`>
foolip: I seem to generally ignore BTSes and emails etc, so they're probably not a good way to get me to do things

[09:11:01.0000] <Philip`>
I could probably try doing it this afternoon if I have time before I forget, though

[09:11:02.0000] <foolip>
Philip`, ok, so I'll poke you here every time I get annoyed :)

[09:11:03.0000] <Philip`>
That's the most reliale approach :-)

[09:12:00.0000] <zcorpan>
foolip: set up a bot that pings Philip` on irc every hour

[09:12:01.0000] <zcorpan>
or with random intervals

[09:13:00.0000] <MikeSmith>
btw, i'm wondering again about the fact that given that we have validator conformance criteria defined in the spec, if we hold that to the "two interoperable implementations" requirement, we are going to end up blocking progress of the spec out of CR for quite a long while. unless somebody puts a couple thousand or so man hours into implementing another validator

[09:13:01.0000] <zcorpan>
MikeSmith: depends on what we decide the CR exit criteria should be

[09:13:02.0000] <MikeSmith>
yeah

[09:14:00.0000] <MikeSmith>
I can't recall, but maybe the last time we talked about this, the sentiment was that having one validator implementation for those assertions was enough

[09:14:01.0000] <zcorpan>
we aren't gonna get two implementations of all possible conformance classes

[09:14:02.0000] <MikeSmith>
true, I guess

[09:15:00.0000] <MikeSmith>
but it really would be good to have another validator implementation to compare things with

[09:15:01.0000] <MikeSmith>
and to compete against

[09:16:00.0000] <hsivonen>
I really need to get to pending non-Gecko work for real

[09:16:01.0000] <hsivonen>
(validator, standalone parser in C++)

[09:16:02.0000] <MikeSmith>
standalone parser in Javascript…

[09:17:00.0000] <Ms2ger>
In Haskell...

[09:17:01.0000] <hsivonen>
maybe I should allocate days in a round-robin fashion to these tasks

[09:17:02.0000] <hsivonen>
otherwise, the Gecko stuff will continue starving everything else

[09:18:00.0000] <hober>
MikeSmith: there already is one, though it's not hsivonen's

[09:19:00.0000] <MikeSmith>
hober: yeah, I know

[09:19:01.0000] <hsivonen>
actually, it's HTML5 parser in Gecko fallout that's starving everything else

[09:19:02.0000] <hsivonen>
including the Gecko XML codepath rewrite

[09:19:03.0000] <MikeSmith>
hober: and it's conformant now too, right?

[09:20:00.0000] <MikeSmith>
hober: the only downside of that I noticed is that it seems to be relatively slow

[09:20:01.0000] <MikeSmith>
hober: like, it takes about 1 minute and 30 seconds to parse the HTML5 spec

[09:21:00.0000] <MikeSmith>
whereas Henri's parser takes only a few seconds, maybe 5 seconds or less

[09:22:00.0000] <hsivonen>
MikeSmith: did you test both with a browser-provided DOM impl?

[09:22:01.0000] <hsivonen>
or does the other parser always use a pure-JS DOM?

[09:22:02.0000] <MikeSmith>
that

[09:22:03.0000] <MikeSmith>
I think

[09:22:04.0000] <hsivonen>
ok

[09:22:05.0000] <MikeSmith>
so I guess it's not surprising that it's slower

[09:25:00.0000] <hsivonen>
JITted JS shouldn't be *that* slow

[09:28:00.0000] <MikeSmith>
hsivonen: well, I tested it in node, actually

[09:28:01.0000] <MikeSmith>
but it's still JITted there too, I would think

[09:29:00.0000] <jgraham>
It's possible they hit a slow case in V8 string handling

[09:29:01.0000] <jgraham>
http://my.opera.com/emoller/blog/2011/05/01/javascript-performance

[09:31:00.0000] <MikeSmith>
I think the slowness in this case may be from jsdom, which this html5 JS parser depends on

[09:32:00.0000] <MikeSmith>
hmm, or it doesn't depend on it itself

[09:32:01.0000] <MikeSmith>
but the parsing test I tried does

[09:33:00.0000] <MikeSmith>
anyway, I'm sure hober knows far more about the details then me

[09:34:00.0000] <hober>
I'm pretty sure the longest document I've shoved into aria's parser is at least a couple of orders of magnitude smaller than the html5 spec

[09:34:01.0000] <hober>
so I can't say the performance has bothered me :)

[09:34:02.0000] <Philip`>
I presume a JS parser shouldn't be any slower than the Python html5lib one

[09:35:00.0000] <Philip`>
(although that's certainly a lot slower than a Java or C one)

[09:35:01.0000] <hober>
oh hey, MikeSmith, any chance you'll be in kyoto around the time of the css & svg f2fs?

[09:36:00.0000] <jgraham>
I would assume that a js parser should be faster

[09:36:01.0000] <jgraham>
If it was well optimised

[09:37:00.0000] <jgraham>
Although I would be interested in profiling html5lib in PyPy to see what's slow

[09:38:00.0000] <jgraham>
(it is supposedly about twice as fast as CPython)

[09:41:00.0000] <gsnedders>
http://speed.pypy.org/comparison/?exe=2%2B35%2C4%2B35%2C1%2BL%2C3%2BL&ben=6&env=1&hor=false&bas=2%2B35&chart=normal+bars

[09:42:00.0000] <gsnedders>
Interestingly that claims Pysco makes html5lib *slower*

[09:51:00.0000] <MikeSmith>
hober: I can certainly plan to head down there, especially if you're planning to be there

[09:52:00.0000] <MikeSmith>
I also encourage you to visit Tokyo if you can, before or after you go to Kyoto

[09:53:00.0000] <MikeSmith>
you're welcome to stay at my place if you do, though it's really small

[09:53:01.0000] <MikeSmith>
it's kind of like hanging out in a treehouse

[09:53:02.0000] <Ms2ger>
/me loves treehouses

[09:54:00.0000] <MikeSmith>
or a moonshiner shack

[10:09:00.0000] <Philip`>
gsnedders: Psyco make html5lib much faster when I tested it ages ago, I believe

[10:10:00.0000] <Philip`>
s/make/made/

[10:10:01.0000] <Philip`>
where "much" might be a factor of 2x or so

[10:11:00.0000] <MikeSmith>
what's Psyco?

[10:12:00.0000] <Philip`>
I tried writing a trivial tokeniser in Python that just understood element names (I think), with the input just being a string, and tried iterating over characters or using regexps etc, and couldn't find any way that was appreciably faster than running the whole of html5lib on the same string

[10:12:01.0000] <Philip`>
so I think that's the main bottleneck and I think it's probably impossible to overcome with pure Python :-(

[10:13:00.0000] <Philip`>
MikeSmith: It's kind of a JIT for Python

[10:13:01.0000] <MikeSmith>
ok, yeah

[10:13:02.0000] <MikeSmith>
I was just reading the Info page for it

[10:13:03.0000] <MikeSmith>
pretty impressive

[10:14:00.0000] <MikeSmith>
hober: what are the dates for the CVS f2f?

[10:15:00.0000] <MikeSmith>
(or anybody else who knows)

[10:16:00.0000] <MikeSmith>
2-4 June (Thu-Sat) it seems

[10:17:00.0000] <MikeSmith>
"1 Jun is a forum with designers, implementers, etc."

[10:17:01.0000] <MikeSmith>
and SVG f2f the beginning of the week after that

[10:21:00.0000] <MikeSmith>
hober: fwiw, I will be around during those dates

[10:22:00.0000] <MikeSmith>
from the 6th to the 10th, I have to go to Beijing

[10:23:00.0000] <MikeSmith>
so if you wanted to visit Tokyo during those days, you would be welcome to have my apartment to your own then

[10:30:00.0000] <jgraham>
/me likes the idea of a CVS f2f

[10:31:00.0000] <Ms2ger>
/me screams at the idea

[10:31:01.0000] <jgraham>
"So… guys… everyone hates us. Hell we even hate ourselves. Beer?"

[10:34:00.0000] <karlcow>
houla… dean waking up threads which are 4 years old

[10:35:00.0000] <hober>
MikeSmith: I think I'm flying through kansai, so the odds are sadly low that I'll make it that far north

[10:51:00.0000] <MikeSmith>
hober: OK. anyway, there is plenty to do and see in Kyoto/Osaka area

[10:52:00.0000] <MikeSmith>
and people in that area are usually a lot more fun to spend time with than people in Tokyo anyway :)

[11:54:00.0000] <Hixie>
wow, multipage/ has been broken since feb 8 and nobody noticed until now

[11:54:01.0000] <hsivonen>
https://twitter.com/#!/johnfoliot/status/65815344433991680

[11:54:02.0000] <Hixie>
i suck

[11:54:03.0000] <AryehGregor>
Hixie, broken how?

[11:54:04.0000] <AryehGregor>
I've been using it on almost a daily basis.

[11:54:05.0000] <Hixie>
the 404 page is missing, and the htaccess file is bogus in various ways

[11:54:06.0000] <hsivonen>
I only use multipage or the parser and the parser has been stable

[11:54:07.0000] <Hixie>
the content still works

[11:55:00.0000] <hsivonen>
I use single-page for everything else

[11:57:00.0000] <Hixie>
ok 404 page fixed

[11:57:01.0000] <Hixie>
what was the thing MikeSmith was blocked on?

[11:57:02.0000] <Hixie>
something about Prohibit Duplicate Charset Declarations?

[11:57:03.0000] <MikeSmith>
Hixie: yeah

[11:58:00.0000] <Hixie>
is there a bug# or e-mail?

[11:58:01.0000] <Hixie>
i'm not sure what the problem is

[11:58:02.0000] <MikeSmith>
yeah, hang on

[11:58:03.0000] <MikeSmith>
lemme find it

[11:58:04.0000] <Hixie>
or just tell me the problem :-)

[11:58:05.0000] <MikeSmith>
http://www.w3.org/Bugs/Public/show_bug.cgi?id=12054

[11:59:00.0000] <MikeSmith>
problem is, I can't tell from the spec what the document-conformance criteria are for the case of multiple character-encoding declarations in a document

[11:59:01.0000] <Hixie>
/me looks

[12:00:00.0000] <MikeSmith>
Hixie: basically, if you just add one sentence saying something like "There must be only one character encoding declaration in the document.", then I think that's all we need

[12:01:00.0000] <MikeSmith>
or however you want to state it

[12:02:00.0000] <Hixie>
apparently that's not quite accurate

[12:02:01.0000] <Hixie>
there's a comment in the spec:

[12:02:02.0000] <Hixie>
   <li>There can only be one character encoding declaration in the

[12:02:03.0000] <Hixie>
   document.</li> <!-- conformance criteria for this one are given in

[12:02:04.0000] <Hixie>
   the XML spec, the <meta> section just after defining charset="",

[12:02:05.0000] <Hixie>
   and the character encoding pragma section. And actually this

[12:02:06.0000] <Hixie>
   statement isn't quite true, since you can have an XML one and an

[12:02:07.0000] <Hixie>
   HTML one at the same time if they match. -->

[12:03:00.0000] <Hixie>
what prohibits there being two <meta http-equiv="Content-Type"> headers is "There must not be more than one meta element with any particular state in the document at a time."

[12:04:00.0000] <Hixie>
so you can't have multiple <meta charset>s, you can't have multiple "meta http-equiv="Content-Type">s, and you can't have one of each

[12:04:01.0000] <Hixie>
but you _can_ have both an XML one and an HTML one, so long as they match

[12:12:00.0000] <hsivonen>
Hixie: but in that case they must say utf-8, right

[12:12:01.0000] <Hixie>
right

[12:12:02.0000] <Hixie>
MikeSmith: i've clarified the statements a bit

[12:12:03.0000] <Hixie>
MikeSmith: hopefully it'll help

[12:12:04.0000] <MikeSmith>
OK

[12:12:05.0000] <Hixie>
regenning now

[12:12:06.0000] <MikeSmith>
thanks

[12:13:00.0000] <MikeSmith>
I appreciate it

[12:13:01.0000] <Hixie>
(note, if you have both the xml one and the html one, it must be an xml doc, it must be utf-8 as hsivonen says, and it must be <meta charset>, no <meta content-type text/html> in xml)

[12:14:00.0000] <Hixie>
ok, committed

[12:54:00.0000] <AryehGregor>
On what basis are WML or XHTML-MP actually harmful?  Assuming that there are devices out there that cannot realistically handle full HTML, isn't an alternative standard needed regardless?

[12:55:00.0000] <Hixie>
wml resulted in two webs

[12:55:01.0000] <Hixie>
yet was no lighter on UAs than HTML

[12:55:02.0000] <Hixie>
XHTML-MP didn't go anywhere useful so i don't know that it was harmful in practice

[12:59:00.0000] <AryehGregor>
So is WML an argument against forking?

[12:59:01.0000] <wilhelm_>
Hixie: It cost certain browser vendors a lot of time, frustration and some added compexity.

[13:00:00.0000] <wilhelm_>
Not quite as much as ES-MP (oh, please kill me now), but still harmful.

[13:01:00.0000] <AryehGregor>
I guess WML is a weaker argument against forking than HTML5 is in favor of forking, because WML eventually died.

[13:01:01.0000] <AryehGregor>
Since it was the worse standard.

[13:01:02.0000] <AryehGregor>
Which is the point.

[13:01:03.0000] <wilhelm_>
Oh, it's still around.

[13:01:04.0000] <Hixie>
AryehGregor: forking itself is terrible

[13:01:05.0000] <AryehGregor>
Oh, hmm.

[13:02:00.0000] <Hixie>
AryehGregor: allowing forking is indispensible

[13:02:01.0000] <AryehGregor>
Okay, I'll have to revise a lot of what I just wrote.

[13:02:02.0000] <Hixie>
AryehGregor: well, successful forking such that there are multiple active incompatible forks is terrible, anyway

[13:02:03.0000] <Hixie>
AryehGregor: but that's what most people mean when they refer to forks

[13:04:00.0000] <AryehGregor>
So really the argument is that competing standards are very bad, but a single bad standard is even worse -- because then it will just compete against nonstandard technologies.

[13:04:01.0000] <AryehGregor>
And lose, since it's bad.

[13:05:00.0000] <wilhelm_>
On the Web, I'd say HTML5 really is the odd one out. One beneficial fork among many harmful.

[13:05:01.0000] <AryehGregor>
Were the harmful forks, all added together, as harmful to the open web as Flash?

[13:05:02.0000] <AryehGregor>
Which got almost total market share because HTML stagnated and didn't add support for basic things like video?

[13:06:00.0000] <Hixie>
flash has done both good and bad to the web

[13:06:01.0000] <hober>
wilhelm_: how is the W3C fork of HTML5 not harmful?

[13:06:02.0000] <AryehGregor>
Man, you guys are really making it hard for me to write a persuasive argument.  :P

[13:06:03.0000] <Hixie>
hober: i assume he meant the fork in 2004

[13:06:04.0000] <hober>
oh, indeed. that was quite harmful.

[13:06:05.0000] <AryehGregor>
What good has Flash done, compared to the same standards being standardized in comparable timeframes?

[13:07:00.0000] <wilhelm_>
Yes, I was referring to 2004.

[13:07:01.0000] <AryehGregor>
Or are we assuming they wouldn't have been, even if forking were allowed?  Since in fact, forking was allowed . . .

[13:07:02.0000] <AryehGregor>
Effectively.

[13:07:03.0000] <Hixie>
AryehGregor: you need an R&D lab

[13:07:04.0000] <AryehGregor>
I mean, is this really mostly a moral argument and not an empirical one, here?

[13:07:05.0000] <AryehGregor>
I guess it has to be, since the result is irrelevant given that HTML5 is forkable anyway.

[13:08:00.0000] <Hixie>
AryehGregor: flash and gears both did significant research, effectively, into how to improve the web

[13:08:01.0000] <AryehGregor>
That could have been done with prototype standards too.

[13:08:02.0000] <wilhelm_>
Yes. A great way to establish cowpaths for us to pave later. (c:

[13:09:00.0000] <Hixie>
what's a "prototype standard"?

[13:10:00.0000] <AryehGregor>
Something where you devise it with the goal from the beginning of standardizing it, soliciting feedback early on and planning to retire it in favor an equivalent standard when one becomes available.

[13:10:01.0000] <Hixie>
othermaciej: any chair instructions at this time? (either on hgroup or on drawfocusring, or anything else for that matter)

[13:10:02.0000] <AryehGregor>
Like how a lot of new standards are developed.

[13:11:00.0000] <Hixie>
AryehGregor: proprietary extensions to UAs, you mean?

[13:11:01.0000] <AryehGregor>
Vendor-specific, let's say, yes.  Could be extensions too.

[13:11:02.0000] <Hixie>
AryehGregor: sure. that's what flash is. :-)

[13:11:03.0000] <Hixie>
at least, up to the bit about adobe's intent

[13:11:04.0000] <Hixie>
dunno what their intent is

[13:12:00.0000] <AryehGregor>
There's no way to integrate Flash into web standards.  It's a totally different platform.

[13:12:01.0000] <AryehGregor>
As opposed to adding features that are accessible from HTML/CSS/JS, and could be easily translated to standards.

[13:12:02.0000] <AryehGregor>
Plus, there's no attempt to get wider feedback or plan for multiple interoperable implementations from an early stage.  That makes a big difference.

[13:13:00.0000] <Hixie>
it's a spectrum

[13:13:01.0000] <jgraham>
AryehGregor: Forking seems to be bad when people want to use it to create a platform that isn't the web

[13:13:02.0000] <Hixie>
i agree flash isn't in the ideal place on the spectrum for use as R&D

[13:13:03.0000] <Hixie>
it's still there, though

[13:13:04.0000] <jgraham>
But they do that regardless of the license so it's not a very strong argument against forking

[13:14:00.0000] <jgraham>
The best way to counter that is to make the web platform better

[13:14:01.0000] <jgraham>
And forking can be essential to that end

[13:18:00.0000] <Hixie>
there are lots of reasons why allowing forking is beneficial. as far as i'm aware, none of the arguments in favour of disallowing forking would actually prevent the problems they portend.

[13:18:01.0000] <Hixie>
that's the crux of the argument, imho.

[13:18:02.0000] <AryehGregor>
Hmm.

[13:19:00.0000] <AryehGregor>
/me tries rewriting a second time

[13:19:01.0000] <Hixie>
heh

[13:20:00.0000] <wilhelm_>
Diverging specifications isn't really a problem in itself. It's when there are diverging implementations the trouble starts.

[13:24:00.0000] <jgraham>
wilhelm_: To a point. But XHTML2 was damaging even though no one implemented it because W3C decided that what the world needed was a backwards-incompatible clean-up of HTML4 with no substantial changes in the feature set and a less forgiving parsing model. To get there they blocked (or tried to block) work on what was actually good for the web

[13:26:00.0000] <wilhelm_>
jgraham: Sure. And that triggered the 2004 fork, which is the one beneficial HTML fork among a pile of harmful ones. (c:

[13:27:00.0000] <AryehGregor>
Hixie, see, if the W3C could actually license HTML5 restrictively (no WHATWG copy), it would prevent forks very effectively, at least forks that plan to be compatible with existing contents.

[13:27:01.0000] <AryehGregor>
content.

[13:27:02.0000] <wilhelm_>
AryehGregor: Nah. You could do a diff spec.

[13:27:03.0000] <jgraham>
So one impact of granting others the ability to fork is that it lessens the burden of decision making because it is much more likely that someone will pick up the pieces if it all goes wrong

[13:27:04.0000] <AryehGregor>
wilhelm_, only if you wanted to change limited parts.

[13:27:05.0000] <AryehGregor>
Also, diffs might be derivative works.

[13:28:00.0000] <Hixie>
AryehGregor: WF2 was a diff spec of HTML4 originally

[13:28:01.0000] <jgraham>
wilhelm_: Aren't most of those bad forks actually diff specs?

[13:28:02.0000] <wilhelm_>
jgraham: Yes.

[13:28:03.0000] <jgraham>
It is at least unclear if that counts

[13:28:04.0000] <Hixie>
AryehGregor: it would significantly raise the barrier to creating a fork, but it wouldn't prevent it altogether. someone could always just start from scratch like we did.

[13:28:05.0000] <wilhelm_>
I'm in favour of a permissive license, but I disagree with anyone saying forks are good. (c:

[13:28:06.0000] <jgraham>
Especially if they take advantage of Modularization which positively encourages forking

[13:28:07.0000] <AryehGregor>
Yeah, but the amount of work you'd have to waste to replicate HTML5 would be ridiculous.

[13:29:00.0000] <Hixie>
AryehGregor: clearly, that's why it should be allowed

[13:29:01.0000] <AryehGregor>
That doesn't answer the original question.

[13:29:02.0000] <Hixie>
jgraham: good point

[13:29:03.0000] <Hixie>
jgraham: what's with that!

[13:29:04.0000] <AryehGregor>
You just said that "none of the arguments in favour of disallowing forking would actually prevent the problems they portend", but they'd actually do a lot to make serious forks harder.

[13:29:05.0000] <jgraham>
Hixie: I don't know. The W3C policy seems to be very inconsistent

[13:30:00.0000] <AryehGregor>
Not ones that just subsetted or added a handful of features, but they'd kill rewrites.

[13:30:01.0000] <AryehGregor>
jgraham, didn't you get the memo?  Proprietary features count as standard if they have a colon in them.

[13:30:02.0000] <jgraham>
AryehGregor: I don't even know that you need a colon in this case

[13:30:03.0000] <jgraham>
Maybe you do

[13:31:00.0000] <jgraham>
But really it makes no difference to implementors

[13:31:01.0000] <AryehGregor>
I assume so.  After all, otherwise the XHTML people would have had to not taken an opportunity to use namespaces, and I find that implausible.

[13:31:02.0000] <jgraham>
Yes, that seems like a reasonable argument

[13:32:00.0000] <AryehGregor>
Anyway, I see no strong arguments in favor of allowing forking at this point other than "We don't trust the W3C to do the right thing", and/or "The only ones who would bother really forking HTML5 instead of just doing a diff spec are implementers, and implementers are right by definition."

[13:33:00.0000] <jgraham>
Who said that implementors are right by definition?

[13:34:00.0000] <jgraham>
One can be quite wrong

[13:34:01.0000] <jgraham>
and be an implementor

[13:34:02.0000] <AryehGregor>
Well, a standard that implementers don't implement is kind of useless.

[13:34:03.0000] <jgraham>
e.g. one could add an <xml> element for xml data islands

[13:34:04.0000] <AryehGregor>
So as far as standardization goes, implementers are collectively right by definition, if by "right" you mean "listening to them is the only sensible thing to do".

[13:35:00.0000] <jgraham>
Yes, because in some market-dynamic way they reflect the will of the people

[13:35:01.0000] <AryehGregor>
No, independent of that.

[13:35:02.0000] <AryehGregor>
Even if they're totally wrong, you can't force them to implement what's right.

[13:36:00.0000] <AryehGregor>
You can only spec what's wrong.

[13:36:01.0000] <AryehGregor>
It's also true that implementers are directly responsible to users, unlike anyone else in this whole picture, so they're the best ones to decide things.

[13:36:02.0000] <jgraham>
No, but if they are totally wrong people won't upgrade to browsers with the new features

[13:36:03.0000] <AryehGregor>
Well, yes, if they're really extraordinarily wrong.

[13:36:04.0000] <jgraham>
Right

[13:36:05.0000] <AryehGregor>
Or if they're not so extraordinarily wrong, but only some are wrong and others are right.

[13:37:00.0000] <jgraham>
There's only so far off the rails an implementor can go

[13:37:01.0000] <AryehGregor>
Well, the same is true for a standards body.

[13:37:02.0000] <AryehGregor>
If they get too impractical, no one will follow the standards.

[13:37:03.0000] <AryehGregor>
But that's an extremely weak safeguard.

[13:37:04.0000] <AryehGregor>
It only kicks in at ridiculous levels of fail.

[13:38:00.0000] <wilhelm_>
It's not much of a standard if noone follows it, is it? (c:

[13:38:01.0000] <jgraham>
Yeah, but if the standard is proprietary and a huge amount of work to replicate it is hard to route around a rouge standards body

[13:38:02.0000] <jgraham>
wilhelm_: Don't tell the IETF that </rimshot>

[13:39:00.0000] <AryehGregor>
Likewise, if you have enough of a browser monoculture it can be hard to route around the browser even if it's terrible.

[13:39:01.0000] <jgraham>
Indeed. Browser monoculture is bad

[13:39:02.0000] <AryehGregor>
Eventually you will, in either case.

[13:39:03.0000] <wilhelm_>
jgraham: :P

[13:40:00.0000] <jgraham>
Happily these days we don't have a browser monoculture

[13:40:01.0000] <jgraham>
To be fair we also don't have a HTML5 spec monoculture

[13:40:02.0000] <AryehGregor>
We have multiple independent interoperable specifications of HTML5?

[13:41:00.0000] <jgraham>
Huh?

[13:41:01.0000] <jgraham>
We have the spec under multiple licenses managed by multiple bodies

[13:41:02.0000] <AryehGregor>
We only have one HTML5 spec, basically.  It may come in several flavors, but it's basically one spec.

[13:41:03.0000] <jgraham>
If one goes insane we can use the other one

[13:42:00.0000] <jgraham>
I'm not saying that having differences is good

[13:42:01.0000] <jgraham>
It's not

[13:42:02.0000] <AryehGregor>
Well, so that's like saying we don't have a WebKit monoculture in mobile because the WebKit forks are under multiple licenses managed by multiple bodies.

[13:42:03.0000] <AryehGregor>
It's still WebKit.

[13:42:04.0000] <jgraham>
This is a critical difference between specs and implementations I think

[13:43:00.0000] <jgraham>
Although one can argue that a WebKit monoculture is better than an IE monoculture for this reason

[13:43:01.0000] <AryehGregor>
Or worse, because at least IE6 is a consistent target . . .

[13:43:02.0000] <AryehGregor>
(but maybe that makes it better, not worse)

[13:43:03.0000] <Hixie>
AryehGregor: arguments in favour of allowing forking: it motivates the w3c not to screw up again, it allows easier resolution of the situation if they do screw up again.

[13:43:04.0000] <AryehGregor>
(because it gives more room for competition)

[13:44:00.0000] <jgraham>
Flash is a consistent target

[13:44:01.0000] <jgraham>
I'm not sure it's also good

[13:44:02.0000] <AryehGregor>
Hixie, but at the same time also allows easier harmful forking, and it's non-obvious that that's a lesser problem.

[13:45:00.0000] <Hixie>
AryehGregor: can you describe a scenario where there is harmful forking?

[13:45:01.0000] <AryehGregor>
You'd have to argue either that harmful forks from a good spec are less of a problem than a single bad spec, or that license restrictions somehow disproportionately affect good forks.

[13:45:02.0000] <AryehGregor>
Hixie, WML was being discussed here a little while ago.

[13:46:00.0000] <jgraham>
I am personally of the opinion that the people who want to change the spec in a bad way and will be deterred by the license will also be open to reasonable arguments about why it is bad

[13:46:01.0000] <Hixie>
WML was written from scratch. No copyright can stop that.

[13:46:02.0000] <AryehGregor>
HTML5 was also written from scratch.

[13:46:03.0000] <Hixie>
indeed.

[13:46:04.0000] <wilhelm_>
It's still a fork of the Web, although not of the specification text.

[13:46:05.0000] <jgraham>
People who won't listen to reasonable arguments won't be deterred by the license

[13:46:06.0000] <AryehGregor>
But that's because HTML 4 and earlier were very short standards and easy to rewrite from scratch.

[13:47:00.0000] <Hixie>
so?

[13:47:01.0000] <Hixie>
forks of the HTML standard now are possible regardless of the W3C license

[13:47:02.0000] <AryehGregor>
Well, I guess WML would have been rewritten largely from scratch regardless, since the point was to be stripped-down.

[13:47:03.0000] <Hixie>
WML wasn't stripped down really, it was a new language altogether.

[13:47:04.0000] <jgraham>
wilhelm_: Since we can't stop people forking the web through any license text it seems relevant to note that a strict licence would have no effect vas a liberal one

[13:47:05.0000] <AryehGregor>
Its goal was to be stripped-down compared to HTML.

[13:48:00.0000] <AryehGregor>
jgraham, that's not an argument either way, though.

[13:48:01.0000] <Hixie>
AryehGregor: any other examples (even theoretical) of a bad fork?

[13:48:02.0000] <jgraham>
AryehGregor: It's an argument that WML isn't a valid reason to have a less permissive license

[13:48:03.0000] <Hixie>
AryehGregor: i'm having trouble understanding how a copyright could prevent it, that's why i'm asking for examples

[13:48:04.0000] <jgraham>
/me wonders if people consider ePub good or bad

[13:48:05.0000] <AryehGregor>
Hixie, I'm not familiar with the history here.

[13:49:00.0000] <wilhelm_>
jgraham: I agree. I'm in favour of a permissive license, with a big sticker that says “Forks are bad. Really. Don't go there.”.

[13:49:01.0000] <Hixie>
ePub, whether good or bad, happened again regardless of whether we allow forking or not

[13:49:02.0000] <wilhelm_>
That includes previously W3C-approved forks.

[13:49:03.0000] <AryehGregor>
jgraham, it's an argument that nothing is a valid reason to have a more or less permissive license, so we should stop wasting our time arguing about it.

[13:49:04.0000] <AryehGregor>
Which is a fair point of view, but doesn't favor either side.

[13:49:05.0000] <jgraham>
AryehGregor: Only if you ignore the arguments unrelated to extant forks

[13:50:00.0000] <AryehGregor>
jgraham, how does that follow?

[13:50:01.0000] <AryehGregor>
Hixie, so are you suggesting that bad forks would be disproportionately unlikely to actually want to use the existing specification text, or something like that?

[13:51:00.0000] <jgraham>
AryehGregor: I am saying that the ability to create WML is unaffected by the license. Nevertheless the knowledge that a specification can be forked if it diverges from what the community wants provides a useful measure of oversight

[13:51:01.0000] <Hixie>
AryehGregor: i am arguing that bad forks have happened and there's no reason to believe they'll happen more if we change the license

[13:51:02.0000] <Hixie>
AryehGregor: but that it is invaluable to have the _ability_ to fork in case the w3c screw up again.

[13:52:00.0000] <Hixie>
AryehGregor: the w3c should be the place people want to write specs not because they have a legal position of power, but because they are the best place to write specs.

[13:52:01.0000] <AryehGregor>
Hixie, but if you say changing the license would increase the ability to fork or threat of forking, surely it would also increase the incidence of forks?

[13:52:02.0000] <AryehGregor>
One has to go with the other, surely.

[13:53:00.0000] <Hixie>
AryehGregor: why?

[13:53:01.0000] <AryehGregor>
Hmm.

[13:53:02.0000] <Hixie>
AryehGregor: is there any evidence that people have avoided "harmful" forks because of the license?

[13:53:03.0000] <Hixie>
AryehGregor: or any evidence that since the whatwg has started, the number of "harmful" forks has increased?

[13:53:04.0000] <AryehGregor>
The license was much less relevant pre-HTML5 because it was relatively easy to rewrite from scratch, so that's not an argument either way.

[13:53:05.0000] <AryehGregor>
Now that's a good point.

[13:54:00.0000] <AryehGregor>
HTML5 has been permissively licensed since 2004, and we've seen no harmful forks that use much of its license text.

[13:54:01.0000] <Hixie>
it would be my contention that the people who make harmful forks don't care about the parts of the spec that make it hard to fork without a liberal license

[13:54:02.0000] <AryehGregor>
Right, that's what I was asking.

[13:54:03.0000] <Hixie>
the detailed content in teh spec is only useful for those who want interoperability

[13:54:04.0000] <wilhelm_>
AryehGregor: Depends on what other measures you take. The W3C can, say, stop endorsing forks. It can talk to those who have started forking elsewhere and ask them nicely to stop, and see if their problems can be solved within the existing specs.

[13:54:05.0000] <Hixie>
which by definition one does not need if one is forking harmfully

[13:54:06.0000] <AryehGregor>
Whether you thought good forks were disproportionately harmed by an anti-forking license.

[13:55:00.0000] <AryehGregor>
Okay, let me start on that rewrite again.

[13:55:01.0000] <Hixie>
i think forks that want to preserve compatibility with the work we're doing now are disproportionally affected by the license, yes.

[13:55:02.0000] <jgraham>
wilhelm_: FWIW I would very much like like W3C to do that

[13:55:03.0000] <Hixie>
or maybe another way to put it is that forks are affected by the license in proportion to how compatible they want to be with what they are forking from

[13:56:00.0000] <jgraham>
ePub 3 doesn't seem to have any normative UA conformance changes

[13:56:01.0000] <AryehGregor>
What does it do, then?

[13:57:00.0000] <wilhelm_>
jgraham: Yes, that could make a much greater impact than choosing one license over another.

[13:57:01.0000] <jgraham>
wilhelm_: I wonder why we are having this pointless series of votes than rather than doing stuff

[13:57:02.0000] <jgraham>
then

[13:58:00.0000] <wilhelm_>
Bikesheds are easy. Work is hard and expensive.

[13:59:00.0000] <AryehGregor>
ISO HTML doesn't allow client-side scripting?

[13:59:01.0000] <AryehGregor>
Did anyone actually ever use it.

[13:59:02.0000] <wilhelm_>
Telling people they are wrong on the Internet may even be entertaining.

[14:00:00.0000] <mpilgrim>
so when will we get RDFa5 that matches facebook's processing requirements?

[14:00:01.0000] <jgraham>
/me hasn't really found much to hate about ePub 3 yet

[14:00:02.0000] <jgraham>
mpilgrim: When hell freezes over?

[14:01:00.0000] <jgraham>
I suppose I should send the email suggesting to the RDFa people that they cut out 2/4 ways of writing values allowed in RDFa

[14:01:01.0000] <jgraham>
So that they can tell me "no"

[14:02:00.0000] <jgraham>
(but there do seem to be 4 mutually redundant ways of doing exactly the same thing)

[14:06:00.0000] <AryehGregor>
Okay, so what's HTML 4.1, exactly?

[14:06:01.0000] <AryehGregor>
I can't figure out.

[14:06:02.0000] <AryehGregor>
Oh, an a11y fork?

[14:07:00.0000] <AryehGregor>
Wait, do some of the HTML 4.1 supporters also oppose forking licenses?

[14:07:01.0000] <AryehGregor>
Steve Faulkner is listed as a supporter here: http://html4all.org/wiki/index.php/Mission_Statement

[14:08:00.0000] <AryehGregor>
As is John Foliot.  Both said that cannot live with CC0/MIT, and support anti-forking licenses.

[14:08:01.0000] <AryehGregor>
. . .

[14:08:02.0000] <AryehGregor>
Hey, Philip Taylor is an HTML 4.1 supporter.

[14:08:03.0000] <AryehGregor>
Philip`, so what's it about, exactly?

[14:13:00.0000] <Hixie>
different philip taylor

[14:13:01.0000] <AryehGregor>
Oh.

[14:13:02.0000] <AryehGregor>
That's horribly confusing.

[14:13:03.0000] <Hixie>
he's no longer in the wg

[14:13:04.0000] <Hixie>
it was far more confusing when he was

[14:13:05.0000] <AryehGregor>
So Philip` is Philip Taylor, and that one's Philip TAYLOR?

[14:13:06.0000] <Hixie>
yes

[14:13:07.0000] <AryehGregor>
Kind of like Mike(tm) Smith?

[14:15:00.0000] <Philip`>
Sometimes he's just called Philip Taylor

[14:15:01.0000] <Philip`>
Usually it should be obvious which is which by the context :-)

[14:16:00.0000] <AryehGregor>
Now that I know there's two of you, it's pretty obvious, yeah.  :)

[14:17:00.0000] <Philip`>
I don't understand the confusion - it's always been perfectly clear to me

[15:21:00.0000] <Hixie>
every browser except IE uses the last meta refresh. IE uses the first one.

[15:21:01.0000] <Hixie>
weird.

[15:32:00.0000] <jgraham>
Oh. ePub has badness hidden behind :s

[15:32:01.0000] <jgraham>
It seems to require XML Events support

[15:35:00.0000] <AryehGregor>
Okay, so now my response for the licensing survey is a bit short of 2000 words.  Review appreciated: http://pastebin.com/PA7dZ2d1

[15:39:00.0000] <AryehGregor>
/me is busy reviewing it right now himself, too

[15:39:01.0000] <karlcow>
hmmmm the lines 27 and 29 make me uncomfortable.

[15:40:00.0000] <AryehGregor>
Which parts, and why?

[15:41:00.0000] <karlcow>
difficult to explain, it might take a few lines :) let me try

[15:43:00.0000] <karlcow>
"W3C has failed very, very badly at its job" The W3C organization has followed the opinion of the W3C members who collectively, genuinely, decided to adopt XML as the future of the Web. The decision was not really made in 2004 but before that.

[15:43:01.0000] <AryehGregor>
Sure.  That doesn't contradict what I said.

[15:44:00.0000] <AryehGregor>
It just explains the nature of and reasons for the failure.

[15:45:00.0000] <karlcow>
the really important workshop is not the one in 2004

[15:46:00.0000] <karlcow>
the one in 2004 for me is the expression of the failures of communications and understandings, not a failure of a bad job.

[15:46:01.0000] <karlcow>
It's the abandon of negotiation from all parts participating

[15:46:02.0000] <karlcow>
no winners, only losers on every side

[15:47:00.0000] <AryehGregor>
The job of a standards body is to be a place where people want to develop standards.

[15:47:01.0000] <AryehGregor>
If, for any reason, groups that the standards body wants to attract decide to go someplace else, that's a failure of the standards body.

[15:48:00.0000] <karlcow>
It's a failure of the community as large

[15:48:01.0000] <karlcow>
the important workshop is here http://www.w3.org/MarkUp/future/

[15:48:02.0000] <AryehGregor>
The real failure was not when the W3C decided to pursue XML.  That turned out to be wrong, but there was reason to believe it was right at the time.

[15:49:00.0000] <karlcow>
http://www.w3.org/MarkUp/Group/HTML-Future-minutes.html (Members only)

[15:49:01.0000] <karlcow>
AryehGregor: exactly. that's the nuance which is missing.

[15:49:02.0000] <AryehGregor>
The real failure was when the browsers said "This isn't working for us and we need to support legacy content better", and the W3C refused to let them.

[15:49:03.0000] <AryehGregor>
That was in 2004.

[15:49:04.0000] <jgraham>
karlcow: I think the essential point is that whatever W3C was doing between it stopping work on HTML4 and starting work on HTML5, it wasn't "leading the web to its full potential" because the technology that it developed has been abandonded and the technology that is being used on the web was developed by an outside body

[15:49:05.0000] <karlcow>
It's why the license issue is a red herring

[15:49:06.0000] <karlcow>
because it is not a license issue

[15:50:00.0000] <jgraham>
Regardless of the reasons for the failure, the W3C failed by its own terms

[15:50:01.0000] <karlcow>
but a community issue on the way we accommodate a change of pace, way, direction and sometimes parallel works

[15:51:00.0000] <jgraham>
The license seems like a big part of how we accomodate parallel works

[15:51:01.0000] <karlcow>
nope

[15:51:02.0000] <jgraham>
and indeed changes of pace way and direction

[15:51:03.0000] <karlcow>
the license is how we dissolve a community creating a parallel work. It doesn't have the same constraints in terms of Contrat Social.

[15:52:00.0000] <jgraham>
Hmm?

[15:52:01.0000] <karlcow>
As in "Do we solve it together?" or "Go elsewhere do your own thing". I prefer the 1st option even if it's often more painful and longer.

[15:53:00.0000] <karlcow>
and because of the involvement of many people inside W3C, the work on html has finally been restarted.

[15:53:01.0000] <AryehGregor>
The work on HTML was restarted by Apple, Mozilla, and Opera in the WHATWG.  Not by anyone at the W3C.

[15:54:00.0000] <Hixie>
not for lack of trying to get the w3c to restart it

[15:54:01.0000] <karlcow>
Basically a fork is a too easy answer for a "social" issue.

[15:54:02.0000] <jgraham>
I prefer the first option too. But the possibility of doing the second is critical

[15:54:03.0000] <jgraham>
karlcow: That's not really how I see this in practice

[15:54:04.0000] <jgraham>
People don't just go "oh well I'm forking"

[15:54:05.0000] <jgraham>
Because maintaining a fork is hard

[15:55:00.0000] <jgraham>
It's almost always better to solve the problem

[15:55:01.0000] <jgraham>
together

[15:55:02.0000] <jgraham>
But sometimes there are irreconcilable differences

[15:55:03.0000] <karlcow>
well if the cost of forking is super easy and really light, the fork will happen more often, and then you come into the social issue. No big will to maintain the value of the community

[15:56:00.0000] <jgraham>
karlcow: So why don't people create lots of forks of the WHATWG copy of HTML5?

[15:56:01.0000] <AryehGregor>
Forking a standard the size of HTML5 will never be anything but very hard.

[15:56:02.0000] <karlcow>
AryehGregor: I was working at W3C during that time, I have a different view on the issue ;)

[15:56:03.0000] <jgraham>
Or indeed of the huge numbers of open source projects

[15:56:04.0000] <AryehGregor>
People do create lots of forks of some open-source projects.

[15:56:05.0000] <AryehGregor>
The Linux kernel has about seventy bajillion forks.

[15:57:00.0000] <AryehGregor>
Many of which don't actually obey the license terms.

[15:57:01.0000] <karlcow>
jgraham: because there is little conflicts between the main proponents right now

[15:57:02.0000] <jgraham>
When there is a fork in a big open source project it almost always results in one or the other forks dying, or them coexisting for a while and remerging

[15:57:03.0000] <wilhelm_>
If a license is all that prevents a viable fork, the process and the standards body in question has already failed.

[15:58:00.0000] <karlcow>
wilhelm_: It's exactly why I think the license is not the right issue

[15:58:01.0000] <wilhelm_>
karlcow: Then we are in agreement on that point. (c:

[15:58:02.0000] <AryehGregor>
jgraham, well, if the fork poses itself as a competitor, yes.  Not if it's meant for internal use or such.

[15:58:03.0000] <jgraham>
AryehGregor: The kernel is quite unusual I think. Things like emacs and XFree86 have had notable forks that followed the pattern I described

[15:58:04.0000] <karlcow>
I would prefer to modify the way the W3C works in terms of process and decisions to allow such a thing inside the organization.

[15:59:00.0000] <AryehGregor>
The kernel has never had any fork that actually intended to replace mainline, I don't think.

[15:59:01.0000] <jgraham>
AryehGregor: Right

[15:59:02.0000] <AryehGregor>
Just lots of forks that add specific features or whatnot, and maybe sync up with mainline occasionally.

[15:59:03.0000] <AryehGregor>
BSD has had forks that stayed permanently separate.

[15:59:04.0000] <AryehGregor>
But those are definitely the exception, not the rule.

[16:04:00.0000] <karlcow>
The HTML WG participants portrait was quite different more than 10 years ago. If you look at the 1998 workshop participants, there were a lot more content and authoring tools organization than now.

[16:06:00.0000] <karlcow>
For me the biggest issue is often are the implementers in the WG (any WGs), if not why, how do we detect that, how do we change that? This is the more interesting question which would really solve a lot of issues

[16:08:00.0000] <AryehGregor>
As long as the W3C can keep the implementers happy enough to stay their of their own free will, it doesn't have to worry about licensing.

[16:08:01.0000] <AryehGregor>
A license that allows forks is necessary in case implementers find the W3C to no longer be an acceptable place to develop HTML5, and are not able to resolve their issues by discussion.

[16:08:02.0000] <AryehGregor>
As happened in 2004, and could happen again.

[16:09:00.0000] <AryehGregor>
There are more than a few individual implementers who participate in the WHATWG and mostly ignore the HTMLWG as it stands, because they view the WHATWG as a better place to work.  Otherwise the WHATWG would have been shut down.

[16:10:00.0000] <karlcow>
AryehGregor: That's why a more permissive license doesn't solve anything with the risk of higher costs such as we had to already bear with for the last 7 years

[16:11:00.0000] <AryehGregor>
HTML 4.01 wasn't worth forking, so license didn't matter in 2004.  It matters with a spec as big as HTML5.

[16:11:01.0000] <Hixie>
it's a motivator for the w3c

[16:12:00.0000] <karlcow>
That's another issue ;) I do not think HTML5 is right in its current form ;)

[16:12:01.0000] <karlcow>
It should not be that big

[16:12:02.0000] <karlcow>
:) it should be separate documents

[16:12:03.0000] <karlcow>
but that's yet as I said a complete different issue

[16:12:04.0000] <zewt->
(your :) key appears stuck)

[16:13:00.0000] <jgraham>
karlcow: The number of documents is irrelevant

[16:13:01.0000] <jgraham>
The platform is as big as it is

[16:13:02.0000] <AryehGregor>
The form isn't nearly as important as the substance.

[16:13:03.0000] <Hixie>
it should be fewer documents, imho, it would be far easier to maintain

[16:13:04.0000] <jacobolus>
karlcow: a fork is just the BATNA

[16:13:05.0000] <karlcow>
zewt-: because it is exactly the translation of my face. I'm very rarely aggressive

[16:13:06.0000] <Hixie>
and to keep track of what was considered part of teh platform

[16:14:00.0000] <Hixie>
but that's just my opinion, i don't mind how many documents we generate :-)

[16:14:01.0000] <karlcow>
Hixie: I know your position on it :)

[16:14:02.0000] <jgraham>
The fact that I have to look for some bits in a spec called "HTML5" and some in a spec called "device Orientation" and some in a spec called "CSS Backgrounds and Borders" is almost irrelevant to me

[16:15:00.0000] <AryehGregor>
Okay, new version: http://pastebin.com/BU6ghf5K

[16:15:01.0000] <jgraham>
Except that it is a bit harder to know where to find stuff when you don't know where to look

[16:15:02.0000] <karlcow>
jgraham: it's why I have never read War and Peace ;)

[16:16:00.0000] <jacobolus>
you should. it's fantastic.

[16:16:01.0000] <jacobolus>
:)

[16:16:02.0000] <jgraham>
/me sighs as another Opera employee falls into the TR/ trap :(

[16:17:00.0000] <karlcow>
jacobolus: puts it into small orthogonal chapters <kidding/>

[16:17:01.0000] <jacobolus>
karlcow: it's kind of tolstoy's whole theory of history that you can't do that :)

[16:18:00.0000] <karlcow>
heh

[16:19:00.0000] <karlcow>
jgraham: TR/ has its own issues which are not solved by one big document either.

[16:19:01.0000] <jgraham>
I prefer to think of HTML 5 as "Rememberance of Things Past"

[16:19:02.0000] <jgraham>
Not that I have read that

[16:20:00.0000] <jgraham>
karlcow: I'm not saying that TR/ is affected by the big/small document thing. TR belies a broken model of how specs work

[16:20:01.0000] <jacobolus>
AryehGregor: I agree that the "w3c has failed very very badly" bit could be rephrased to clarify your intent

[16:20:02.0000] <karlcow>
À la recherche du temps perdu - Proust. Exactly ;)

[16:20:03.0000] <AryehGregor>
jgraham, like how?

[16:21:00.0000] <jacobolus>
AryehGregor: I would put "within recent memory" before "failed badly"

[16:21:01.0000] <jacobolus>
also, skip the "very, very"; those don't really add much

[16:21:02.0000] <AryehGregor>
/me confused jacobolus with jgraham 

[16:22:00.0000] <AryehGregor>
So "Unfortuately, such forks are not only theoretical, because in recent memory, the W3C has failed badly at its job."?

[16:22:01.0000] <jacobolus>
something like that

[16:22:02.0000] <AryehGregor>
Probably I could try to rewrite that part to be more convincing to W3C people, but I doubt my basic argument will ever be convincing to them, because they think the WHATWG fork was bad.

[16:24:00.0000] <jacobolus>
maybe something like "The need for such forks is more than a theoretical concern: within recent memory the W3C process broke down entirely...."

[16:25:00.0000] <AryehGregor>
What does that really change?

[16:25:01.0000] <karlcow>
"The HTML interested parties were not participating anymore in the old W3C HTML WG creating a structural fork on the technology."

[16:25:02.0000] <jacobolus>
AryehGregor: the current one makes it sound like the W3C is still failing

[16:25:03.0000] <AryehGregor>
Surely "has failed" is clearly past?

[16:26:00.0000] <jacobolus>
"X has failed" implies (at least possibly implies) an ongoing failure

[16:27:00.0000] <AryehGregor>
I guess so.

[16:27:01.0000] <AryehGregor>
Let me rephrase.

[16:27:02.0000] <jacobolus>
which is why I think if you put "within recent memory" before it's clearer

[16:27:03.0000] <AryehGregor>
karlcow, the W3C as an organization failed badly by being unwilling to accommodate the needs of its most key members.  If you're not willing to accept that, then you're never going to like what I write.

[16:27:04.0000] <AryehGregor>
Blaming the failure on the members or whatever misses the point.

[16:27:05.0000] <karlcow>
"The browser vendors not finding a place to continue working on HTML had unfortunately to restart the work outside of W3C"

[16:27:06.0000] <Hixie>
we did find a place

[16:27:07.0000] <AryehGregor>
"Unfortuately, such forks are not only theoretical, because the W3C did fail badly at its job in recent memory."

[16:27:08.0000] <Hixie>
unfortunately the place turned us away :-(

[16:27:09.0000] <karlcow>
AryehGregor: "the needs of its most key members"

[16:28:00.0000] <karlcow>
history rewriting and focussing on one part of the Web :)

[16:28:01.0000] <AryehGregor>
karlcow, standards are worthless unless they're implemented.  Implementers are the only essential members of a standards body.

[16:28:02.0000] <Hixie>
(actually we found two places, an incubator group and the htmlwg. both refused us.)

[16:28:03.0000] <jacobolus>
AryehGregor: that's better

[16:28:04.0000] <karlcow>
I know that browser vendors are important and have become more important in the last 10 years but tsss tsss

[16:28:05.0000] <AryehGregor>
If you lose non-implementers, the quality of your standards might suffer.  If you lose the implementers, your standards are worthless.

[16:28:06.0000] <AryehGregor>
The entire point of a standard is to be implemented.

[16:29:00.0000] <AryehGregor>
Okay, anyone have other comments?  Otherwise I'll submit it shortly.

[16:29:01.0000] <karlcow>
AryehGregor: agreed with losing implementers - this is the issue to solve

[16:30:00.0000] <AryehGregor>
And the W3C failed at it in 2004.  Right?

[16:30:01.0000] <jacobolus>
AryehGregor: the argument that governments couldn't create forks of HTML if it had a license that forbid forking seems almost too laughable to answer

[16:30:02.0000] <karlcow>
before that

[16:30:03.0000] <AryehGregor>
jacobolus, yeah, I know.

[16:30:04.0000] <AryehGregor>
karlcow, they didn't leave until 2004.

[16:30:05.0000] <karlcow>
yes they did

[16:30:06.0000] <AryehGregor>
jacobolus, the patent argument is also crazy.

[16:31:00.0000] <AryehGregor>
karlcow, when was this?

[16:31:01.0000] <jacobolus>
yes

[16:31:02.0000] <jacobolus>
I don't know if including those answers improves your essay

[16:31:03.0000] <AryehGregor>
Maybe not.

[16:31:04.0000] <karlcow>
they stop participating to the HTML WG before 2004. You could read the *valid* frustration of people on www-html mailing list

[16:32:00.0000] <AryehGregor>
I'll remove those two paragraphs.

[16:32:01.0000] <karlcow>
erratas not being fixed, issue trackers not clear, comments not taken into accounts

[16:32:02.0000] <AryehGregor>
Shorter is better.

[16:32:03.0000] <AryehGregor>
karlcow, okay, fine.  They didn't start working elsewhere until 2004, though.

[16:33:00.0000] <karlcow>
it's why I said structural fork before. They did work elsewhere individually by working in the bug trackers and slowly not participating to a deaf htmlwg

[16:33:01.0000] <jacobolus>
AryehGregor: in general, I think it's decently argued

[16:33:02.0000] <karlcow>
respective vendor bug trackers

[16:34:00.0000] <Hixie>
AryehGregor: 2003 actually

[16:34:01.0000] <AryehGregor>
Really?

[16:34:02.0000] <AryehGregor>
The spec seems to say 2004, in the history section.

[16:35:00.0000] <Hixie>
AryehGregor: what happened is that the browser vendors slowly dropped away until xforms came up for PR vote in 2003, at which point the frustration was enough that opera/mozilla/opera/and a few others asked for a rethink of the strategy

[16:35:01.0000] <Hixie>
some of us showed what could be done by writing "xforms basic", an early wf2 prototype spec

[16:36:00.0000] <Hixie>
the w3c responded by having a workshop in 2004 at which the various points of view were put forward

[16:36:01.0000] <Hixie>
then when that concluded with the creation of a doomed wg on compound documents and nothing for html, we announced the whatwg list and moved xforms basic to the whatwg site

[16:36:02.0000] <Hixie>
i was blogging a lot back then, you can see some of the history in my blog posts from 2003/2004

[16:37:00.0000] <Hixie>
last copy of xforms basic was http://www.hixie.ch/specs/html/forms/xforms-basic-1

[16:37:01.0000] <Hixie>
note how it was proposed as an xhtml m12n module :-)

[16:38:00.0000] <Hixie>
wow, some parts of that have lasted all the way to the current spec

[16:38:01.0000] <karlcow>
hmmm let's call this crash, the pink crash. That was surprising. Third crash today 2 with grayish screens and one with pink screen

[16:38:02.0000] <Hixie>
check out the table in appendix B

[16:38:03.0000] <Hixie>
that became the table in the <input> element section

[16:38:04.0000] <Hixie>
same styles and everything

[16:40:00.0000] <Hixie>
anyway, that's dated dec 2003

[16:40:01.0000] <Hixie>
ooh, apparently wa1 predates the whatwg too: http://www.hixie.ch/specs/html/apps/web-apps-1

[16:41:00.0000] <karlcow>
yup

[16:41:01.0000] <Hixie>
though almost everything there then became part of web controls 1.0 which then died

[16:41:02.0000] <Hixie>
/me leaves memory lane and gets back to work :-)

[16:43:00.0000] <karlcow>
I guess an archivist work could be done by going through the past HTML WG minutes and you could decipher who, when people participated. Mailing lists too.

[16:44:00.0000] <karlcow>
http://www.w3.org/MarkUp/Group/Archives (Member only)

[16:45:00.0000] <Hixie>
sadly that will all be lost to archeologists since it's all member-only

[16:45:01.0000] <Hixie>
hsivonen: yt?

[16:45:02.0000] <karlcow>
Hixie, tss tss

[16:46:00.0000] <karlcow>
Most of the libraries have old books not accessible. Archivists can still work :)

[16:46:01.0000] <Hixie>
tss tss?

[16:46:02.0000] <Hixie>
?

[16:46:03.0000] <jamesr>
maybe in the future everyone will be a w3 member and have access

[16:47:00.0000] <karlcow>
jamesr: that's one possibility. :)

[16:47:01.0000] <Hixie>
even members don't have access to the team lists :-)

[16:48:00.0000] <karlcow>
As I do not have access to your private emails :) or anyone has access to the internal mails of any organizations.

[16:52:00.0000] <Hixie>
there's a moral difference between an organisation that has paying members and decides things for those members that then affect the entire world, and most other kinds of organisations

[16:52:01.0000] <Hixie>
certainly there will always be a need for private lists

[16:53:00.0000] <Hixie>
but e.g. the sub total of private e-mails in the whatwg in the past two or so years is literally zero, and i'm sure one couldn't say the same for the w3c.

[16:53:01.0000] <AryehGregor>
The WHATWG is vastly smaller.

[16:53:02.0000] <karlcow>
Hixie: comparing orange and tomatoes

[16:53:03.0000] <AryehGregor>
I don't think it's a moral issue, just an issue of effectiveness.

[16:54:00.0000] <Hixie>
AryehGregor: not that smaller. it has 1700 subscribers and a dozen "staff"-equivalent.

[16:54:01.0000] <karlcow>
transparency != trust

[16:54:02.0000] <Hixie>
karlcow: not sure the relevance of oranges, tomatoes, transparency, or trust here. i was just talking about archeologists of the future.

[16:55:00.0000] <AryehGregor>
Hixie, W3C lists combined surely have vastly more than 1700 subscribers.  W3C staff and WHATWG steering committee are not at all comparable, W3C staff actually devote a significant fraction of their time to working at the W3C.

[16:56:00.0000] <karlcow>
archeologists of the future might have access to it. I don't know. I just know that the lists are archived.

[16:57:00.0000] <karlcow>
/me doesn't have a crystal ball

[16:59:00.0000] <karlcow>
/me found "voyager" again, the code name for the future of html4


2011-05-05
[17:00:00.0000] <karlcow>
http://www.w3.org/TR/1998/WD-html-in-xml-19981205/

[17:07:00.0000] <AryehGregor>
Okay, answer submitted.  http://www.w3.org/2002/09/wbs/40318/html5-license-poll-v3/results

[17:09:00.0000] <Hixie>
man, you have got to love the vote of confidence that is "[a non-free license] is necessary to maintain W3C as a trusted and reputable source of definitive technical specifications"

[17:52:00.0000] <Yuhong>
"then when that concluded with the creation of a doomed wg on compound documents and nothing for html, we announced the whatwg list and moved xforms basic to the whatwg site "

[17:53:00.0000] <Yuhong>
Personally what I would have asked is an XHTML2 spec that is tag level compatible with XHTML1 (and HTML4 via Appendix C)

[17:55:00.0000] <Yuhong>
Of course, it is too late anyway.

[18:54:00.0000] <erlehmann>
edbrowse is the standard edi^W browser

[19:09:00.0000] <erlehmann>
oh, i tried it

[19:09:01.0000] <erlehmann>
edbrowse *is* indeed interesting

[20:28:00.0000] <MikeSmith>
Hixie: I'm writing <select required> checking for the validator and I the spec seems quite clear but I want to doublecheck

[20:28:01.0000] <MikeSmith>
so, question:

[20:28:02.0000] <MikeSmith>
the following should be valid, right?

[20:28:03.0000] <MikeSmith>
<select required>

[20:28:04.0000] <MikeSmith>
<option></option>

[20:28:05.0000] <MikeSmith>
</select>

[20:29:00.0000] <MikeSmith>
and the following should not be?

[20:29:01.0000] <MikeSmith>
<select required>

[20:29:02.0000] <MikeSmith>
<option value=1>foo</option>

[20:29:03.0000] <MikeSmith>
</select>

[20:29:04.0000] <Hixie>
i assume we're ignoring the <option> here, right? attribute-wise?

[20:29:05.0000] <Hixie>
or should i check the option requirements too

[20:30:00.0000] <MikeSmith>
there are not requirements on the option in that case, as far as I can see

[20:30:01.0000] <MikeSmith>
so, no, anyway, you don't need to check the option requirements for that first case

[20:30:02.0000] <MikeSmith>
I just meant is is valid as far as the select goes

[20:30:03.0000] <Hixie>
in the first case, the option has to have a value="" if its contents aren't "".

[20:31:00.0000] <Hixie>
the second one is invalid, indeed

[20:31:01.0000] <Hixie>
so yes, valid and not valid

[20:32:00.0000] <Hixie>
the first might want to emit a warning that the author probably forgot to give the text of the placeholder label option

[20:32:01.0000] <Hixie>
dunno how much linting you're doing

[20:32:02.0000] <MikeSmith>
OK

[20:32:03.0000] <MikeSmith>
hmm

[20:33:00.0000] <MikeSmith>
but now I do think I'm misunderstanding something

[20:33:01.0000] <MikeSmith>
which ish, how do you give the text of the placeholder label option

[20:33:02.0000] <MikeSmith>
/me looks back at the spec

[20:33:03.0000] <Hixie>
in the label="" or textContent of the <option>

[20:34:00.0000] <MikeSmith>
ok

[20:35:00.0000] <MikeSmith>
but the spec says, "if the value of the first option element in the select element's list of options (if any) is the empty string, and that option element's parent node is the select element (and not an optgroup element), then that option is the select element's placeholder label option."

[20:35:01.0000] <MikeSmith>
should that be "is *not* the empty string"?

[20:36:00.0000] <Hixie>
sorry afk brb

[20:36:01.0000] <MikeSmith>
ok

[20:43:00.0000] <MikeSmith>
Hixie: (when you get back), so it seems like maybe it should say that the value attribute is empty (or not specified), but the option must have textContent

[20:47:00.0000] <MikeSmith>
because, unless I'm missing something, I don't see how the option element can serve as an actual placeholder label option if the "value of the option element" (= "the value of the value attribute, if there is one, or the textContent of the element, if there isn't") has to be the empty string

[20:51:00.0000] <MikeSmith>
in other words, the current spec text seems to require the following to be reported as invalid

[20:51:01.0000] <MikeSmith>
<select required>

[20:51:02.0000] <MikeSmith>
<option>Choose one of the following</option>

[20:51:03.0000] <MikeSmith>
<option value=1>foo</option>

[20:51:04.0000] <MikeSmith>
<option value=2>bar</option>

[20:51:05.0000] <MikeSmith>
</select>

[20:53:00.0000] <MikeSmith>
because it must have a placeholder label option, but the value of the first option element is not the empty string, so it does not have a placeholder label option

[21:04:00.0000] <Hixie>
MikeSmith: back

[21:04:01.0000] <MikeSmith>
hey

[21:05:00.0000] <Hixie>
MikeSmith: right, if you have required in that case you also have to have <option value="">label</option>

[21:05:01.0000] <Hixie>
required="", i mean

[21:05:02.0000] <MikeSmith>
ok

[21:05:03.0000] <Hixie>
because otherwise there's no point having required="" -- it'd be required anyway

[21:05:04.0000] <Hixie>
you can't _not_ give a value in that case

[21:05:05.0000] <Hixie>
so marking it required="" is worthless

[21:05:06.0000] <MikeSmith>
right, but that's not what the spec seems to say

[21:06:00.0000] <Hixie>
oh?

[21:06:01.0000] <Hixie>
/me looks

[21:06:02.0000] <Hixie>
in that case, it doesn't have a placeholder label option, and it must have a placeholder label option, right?

[21:07:00.0000] <Hixie>
it doesn't have one because the value of the first option is "1", so the first option is not a placeholder label option

[21:07:01.0000] <MikeSmith>
oh

[21:08:00.0000] <MikeSmith>
but the first option has no value attribute…

[21:08:01.0000] <MikeSmith>
the value of the second option is 1

[21:08:02.0000] <Hixie>
oh

[21:08:03.0000] <Hixie>
sorry

[21:08:04.0000] <Hixie>
i mean the value of the first option is "Choose one of the following"

[21:08:05.0000] <MikeSmith>
yeah

[21:09:00.0000] <MikeSmith>
OK

[21:09:01.0000] <MikeSmith>
I think I see what the purpose of this is now

[21:09:02.0000] <Hixie>
you probably want the validator to notice when the first one have a value="non-empty" and give a distinct error than the case where it is simply missing a value="" (but has textContent, as opposed to <option label="choose one of the following">, which would be fine)

[21:09:03.0000] <Hixie>
because the error message would be confusing otherwise

[21:10:00.0000] <MikeSmith>
OK

[21:11:00.0000] <MikeSmith>
so sorry if I'm being daft here, but if the following is not OK, what should it be changed to?

[21:11:01.0000] <MikeSmith>
<select required>

[21:11:02.0000] <MikeSmith>
<option></option>

[21:11:03.0000] <MikeSmith>
<option value=1>foo</option>

[21:11:04.0000] <MikeSmith>
<option value=2>bar</option>

[21:11:05.0000] <MikeSmith>
</select>

[21:14:00.0000] <Hixie>
it's fine, from a validation point of view

[21:14:01.0000] <MikeSmith>
OK, but what I'm getting at is, the spec currently says that for an option to be a placeholder label option, its "value" must be the empty string

[21:15:00.0000] <MikeSmith>
where "value" is defined as "the value of the value attribute, if there is one, or the textContent of the element, if there isn't"

[21:15:01.0000] <Hixie>
right

[21:15:02.0000] <Hixie>
(hm, we should probably strip spaces before and after the textContent, for sanity, so that omitting the </option> in the case above doesn't matter, but that's another story)

[21:16:00.0000] <Hixie>
(i'll file a bug)

[21:16:01.0000] <MikeSmith>
so that would seem to mean that <option value="">label</option> cannot be a placeholder label option

[21:16:02.0000] <Hixie>
sure it can

[21:16:03.0000] <Hixie>
value="" is good

[21:16:04.0000] <MikeSmith>
OK but the "value" of the option is non-empty

[21:16:05.0000] <MikeSmith>
because it has textContent

[21:16:06.0000] <Hixie>
the value is the value of the value attribute, if there is one

[21:17:00.0000] <MikeSmith>
ah

[21:17:01.0000] <MikeSmith>
yeah

[21:17:02.0000] <MikeSmith>
thanks for your patience :)

[21:17:03.0000] <Hixie>
no worries

[21:18:00.0000] <Hixie>
this stuff is inane, and i make enough mistakes that half the time your questions are just pointing out mistakes i made :-)

[21:18:01.0000] <MikeSmith>
heh

[21:18:02.0000] <MikeSmith>
not sure that's true, but thanks for saying it :)

[21:24:00.0000] <karlcow>
I wish there was a way to do

[21:24:01.0000] <karlcow>
X-viewport: content="width=device-width" in HTTP headers

[21:25:00.0000] <MikeSmith>
Hixie: so why not have the spec say that for <select required>, its first option child must have a value="" attribute specified?

[21:27:00.0000] <Hixie>
MikeSmith: we could do that, but in the case of <option label=".."/> it's a bit ugly to require an otherwise redundant value="" as well

[21:27:01.0000] <MikeSmith>
OK

[21:28:00.0000] <MikeSmith>
I will implement it as currently specced so that we have something concrete to test with in the validator

[21:28:01.0000] <Hixie>
cool

[21:29:00.0000] <Hixie>
i just filed a bug about the definition of /option label/ that you might want to look at

[21:29:01.0000] <MikeSmith>
but I should point out to you that as far as I can see, the spec currently doesn't say anything about the label attribute providing the text for the placeholder label option

[21:29:02.0000] <MikeSmith>
OK, I'll look at that bug

[21:32:00.0000] <Hixie>
/me looks

[21:35:00.0000] <Hixie>
it doesn't say anything special about the placeholder label option vs other options as far as rendering goes

[23:21:00.0000] <zcorpan>
heh, EventSource.OPEN and EventSource.CLOSED are both 0 in chrome

[23:21:01.0000] <zcorpan>
yay for constants

[23:40:00.0000] <erlehmann>
edbrowse -d0 >&2 |festival --tts

[23:40:01.0000] <erlehmann>
funny :)

[23:58:00.0000] <hsivonen>
Hixie: I'm back here now

[00:17:00.0000] <MikeSmith>
Hixie, hsivonen: fyi, I pushed my workspace implementation of <select required> checking to http://www.w3.org/html/check for testing

[00:17:01.0000] <MikeSmith>
hsivonen: will send you the patch now

[00:19:00.0000] <Hixie>
hsivonen: if i ping you without actually asking something it's usually because i'm working on some bug that i think you have an opinion on, and if you're not around i'll just post my question to the bug :-)

[00:21:00.0000] <Hixie>
hsivonen: in this particular case, i think it was http://www.w3.org/Bugs/Public/show_bug.cgi?id=12100

[00:26:00.0000] <hsivonen>
Hixie: commented on the bug

[00:26:01.0000] <Hixie>
awesome, thanks

[00:40:00.0000] <hsivonen>
MikeSmith: I replied

[00:41:00.0000] <MikeSmith>
thanks

[01:36:00.0000] <hsivonen>
I think http://html5.org/tools/web-apps-tracker?from=6078&to=6079 didn't actually "clarify" things.

[01:39:00.0000] <Hixie>
that's because you still think they mean "italics" and "bold"

[01:39:01.0000] <hsivonen>
Hixie: we've always been at war with Eastasia

[01:42:00.0000] <Hixie>
i do not claim that they did not once mean "italics" and "bold"

[01:42:01.0000] <Hixie>
so i think that's an inappropriate attempt at dismissing my position using a platitude

[01:47:00.0000] <hsivonen>
Hixie: granted, I should have come up another redefinition-related quote that doesn't imply retroactive redefinition.

[01:48:00.0000] <Hixie>
or you could use your own words :-)

[01:49:00.0000] <hsivonen>
:-)

[01:49:01.0000] <Hixie>
i'm updating the terms used in the stability boxes in the spec... any idea of a better term for "first draft", to mean the first attempt at specifying something?

[01:49:02.0000] <Hixie>
"first attempt" was my other idea

[01:49:03.0000] <Hixie>
but both kinda suck

[01:49:04.0000] <othermaciej>
in Newspeak, <b> is defined to serve the needs of the people

[01:50:00.0000] <zcorpan>
Hixie: "Don't use this yet LOL"

[01:51:00.0000] <zcorpan>
Hixie: or follow the W3C naming and call it "Last attempt"

[01:51:01.0000] <othermaciej>
"unstable"?

[01:51:02.0000] <othermaciej>
"experimental"?

[01:51:03.0000] <othermaciej>
(not sure if that matches the intent)

[01:52:00.0000] <Hixie>
i'll try "Experimental draft" for now maybe

[01:53:00.0000] <Hixie>
search for "== STATUS" in http://www.whatwg.org/specs/web-apps/current-work/status.js for the new list

[02:15:00.0000] <jgraham>
Aren't the real statuses "Unimplemeneted", "experimentally implemented", "Multiple interoperable implementations"

[02:17:00.0000] <Hixie>
"experimentally implemented" doesn't correspond to a state in the spec

[02:17:01.0000] <Hixie>
and there are definitely more states than just "no" and "yes"

[02:17:02.0000] <Hixie>
:-)

[02:17:03.0000] <jgraham>
Yes it does

[02:17:04.0000] <jgraham>
It corresponds to what W3C woudl call "Last Call"

[02:18:00.0000] <jgraham>
i.e. if you don't like this comment soon before more people implement it

[02:18:01.0000] <Hixie>
oh i thought you meant a feature implemented as an experiment before the spec is written

[02:18:02.0000] <Hixie>
sorry

[02:18:03.0000] <jgraham>
Ah

[02:18:04.0000] <Hixie>
yeah, those are a subset of the states

[02:18:05.0000] <Hixie>
see the script for the full list

[02:23:00.0000] <jgraham>
Hixie: The states there don't seem to be much like the ones I said at all

[02:25:00.0000] <Hixie>
jgraham: unimplemented = TBW, OCBE, FD, WD; implemented = LC, CR; multiple = REC

[02:25:01.0000] <jgraham>
Also I agree with hsivonen about the interesting use of the word "clarify" to mean "make more unlike reality" in the <b> and <i> definitions

[02:25:02.0000] <Hixie>
authoring conformance requirements aren't about past reality they're about future reality

[02:25:03.0000] <Hixie>
they're about best practices, and what we can most highly recommend to authors

[02:26:00.0000] <Hixie>
they're very much unlike implementation conformance criteria, in that respect

[02:26:01.0000] <hsivonen>
Hixie: not entirely true in a world where people have legacy sites to work with

[02:26:02.0000] <Hixie>
(which is why the decision to make <table> not entirely non-presentational in the w3c copy is just a bad decision)

[02:26:03.0000] <jgraham>
Hixie: My point about the statuses, such as it was, was that statuses could be explicitly about implementations rather than having abstract states and having to tell people who they map onto reality

[02:26:04.0000] <Hixie>
hsivonen: how not?

[02:27:00.0000] <Hixie>
jgraham: we already have explicit implementation status information, so that would be redundant

[02:27:01.0000] <Hixie>
the states are not abstract, they're descriptions of the quality of the text

[02:27:02.0000] <hsivonen>
Hixie: if a validator whines too much about legacy content on points that take effort to fix but that have dubious payoff, the validator isn't really helping the author and the author might opt not to validate

[02:28:00.0000] <jgraham>
Hixie: From the reader's point of view they're abstract

[02:28:01.0000] <hsivonen>
Hixie: which would be bad, because the author would then also miss out on useful error messages

[02:28:02.0000] <Hixie>
hsivonen: i'll be immediately convinced of that argument's relevance to this particular problem as soon as you are able to determine whether <b> is being used for bold or for keywords.

[02:28:03.0000] <Hixie>
programatically

[02:28:04.0000] <jgraham>
About <b> and <i>: the glorious future where people never use them to mean bold or italic will likely never happen. Even if it did it wouldn't be a big win for anyone

[02:29:00.0000] <Hixie>
hsivonen: when it comes to cases that _can_ be programmatically detected, i think we've done a good job of walking that line, though

[02:29:01.0000] <hsivonen>
Hixie: how's that a prerequisite for my point?

[02:29:02.0000] <Hixie>
hsivonen: either i misunderstood your point, or your point doesn't apply to a case where you wouldn't ever show an error message regardless of the definition we're talking about

[02:30:00.0000] <jgraham>
The main bad effect is that people won't take the rest of the spec seriously

[02:30:01.0000] <jgraham>
Not that they won't take validators seriously

[02:30:02.0000] <Hixie>
jgraham: re the states being abstract, i don't really see how "this is brand new first-draft experimental text" vs "i think we are ready for implementations" is "abstract", but if it is, then i guess i think we need abstraction here.

[02:31:00.0000] <Hixie>
if people are going to dismiss the entire spec just because <i> is defined in a media-independent way, then i think we have bigger problems.

[02:31:01.0000] <Hixie>
like, why on earth isn't the rest of the spec useful enough that it overcomes this minor issue.

[02:32:00.0000] <jgraham>
Hixie: The "How do I suggest a feature" FAQ suggests implementations may preceed spec text so the smooth transition implied by the current states doesn't man much

[02:32:01.0000] <jgraham>
Not the whole rest of the spec

[02:32:02.0000] <jgraham>
But the other semantic requirments

[02:32:03.0000] <jgraham>
Including the ones that actually matter a bit

[02:32:04.0000] <jgraham>
Like not using <table> for layout

[02:33:00.0000] <Hixie>
i don't see how anything smooth is implied. certainly no smoothness was intended to be implied.

[02:33:01.0000] <Hixie>
i think the w3c has done far more damage to the tables-for-layout issue than we could possibly do even if we defined <i> to mean "ice cream"

[02:33:02.0000] <jgraham>
That is true

[02:33:03.0000] <jgraham>
But it's only one example

[02:34:00.0000] <jgraham>
and doesn't excuse us anyway

[02:34:01.0000] <Hixie>
but i also think the people who are most likely to care about <table> being media-independent are the same people who are likely to appreciate <i> being media-independent

[02:34:02.0000] <Hixie>
so i don't really buy the premise of your argument

[02:35:00.0000] <jgraham>
Well I care about <table> but don't really care if people use <i> to mean "I want this text to be italic"

[02:35:01.0000] <jgraham>
Because non-visual UAs have to deal with that anyway

[02:35:02.0000] <jgraham>
and it seems to be way down the list of problems they have

[02:35:03.0000] <zcorpan>
jgraham: do you care if people use <em> to mean "I want this text to be italic"?

[02:36:00.0000] <jgraham>
zcorpan: I think that is a bigger problem

[02:36:01.0000] <jgraham>
(and one that is encouraged by demonising <i>)

[02:37:00.0000] <Hixie>
we don't demonise <i>, we give it what imho is a rather succint definition that maps surprisingly well to real good-practice usage (i.e. not pure styling where an entire section is italics, but more phrasing-like usage), in such a way that authors can continue to use it with no fear of media-dependence

[02:38:00.0000] <Hixie>
personally i am quite happy with where we are with <i>, <b>, <small>, and even <u> which i have come to terms with

[02:38:01.0000] <Hixie>
i don't really see what value we would have in introducing <font>-like definitions for any of them

[02:39:00.0000] <hsivonen>
Hixie: are there Web authors other than you and fantasai who use <i> correctly as specced as a result of reading and understanding the spec? (as opposed to by accident)

[02:39:01.0000] <Hixie>
no idea

[02:39:02.0000] <jgraham>
I don't see that any UA can treat <i> as currently defined different to <span style="font-style:italic">

[02:40:00.0000] <Hixie>
dunno how one would measure that

[02:40:01.0000] <jgraham>
So whatever media independence we have would be equally true if we defined that as a synonym

[02:41:00.0000] <Hixie>
same can be said of <em> and <cite>

[02:41:01.0000] <Hixie>
so i dunno that that is relevant

[02:41:02.0000] <Hixie>
anyway, i really should go to bed

[02:41:03.0000] <jgraham>
Not really. I would expect an AT to read <em> in a difference voice, for example

[02:41:04.0000] <jgraham>
I might be wrong in that expectation ofc

[02:41:05.0000] <hsivonen>
jgraham: <em> different voice from <i>?

[02:42:00.0000] <jgraham>
hsivonen: That depends how many people are using <i> to mean <em> I guess

[02:42:01.0000] <hsivonen>
I'd expect the best AT user experience to come from rendering <em> and <i> the same way by default regardless of medium, because they are rendered the same way on the medium that authors test the most

[02:43:00.0000] <hsivonen>
jgraham: of course, it should be possible to test and find out what implementations actually do!

[02:43:01.0000] <hsivonen>
as opposed to theorizing about it

[02:44:00.0000] <jgraham>
Indeed

[03:41:00.0000] <hsivonen>
I love how the HTML 4.01 spec italicizes "Standard Generalized Markup Language" not as <cite>, not as <i> but as <dfn>

[03:56:00.0000] <hsivonen>
Unicode srsly! Where's my RIGHTWARDS ARROW WITH CORNER UPWARDS?

[03:59:00.0000] <reggna>
Hehe, all i find is RIGHTWARDS ARROW WITH TIP UPDARDS. :P

[04:00:00.0000] <hsivonen>
jgraham: from Steve on Twitter: http://www.paciellogroup.com/blog/2008/02/screen-readers-lack-emphasis/

[04:00:01.0000] <hsivonen>
reggna: thanks!

[04:01:00.0000] <jgraham>
hsivonen: Interesting. It would be interesting to hear what changed in 3 years

[06:28:00.0000] <othermaciej>
VoiceOver doesn't report any bold or italic by default, and while it can be set to do so, Safari doesn't seem to respect that (I'll have to find out if this is a bug)

[06:31:00.0000] <jgraham>
"Any bold or italic" including <em> and <strong>?

[06:46:00.0000] <othermaciej>
well, since it doesn't work in Web content I can't test that

[06:46:01.0000] <othermaciej>
oh, I see what you are asking

[06:48:00.0000] <othermaciej>
it does not apply voice changes for em/strong

[06:49:00.0000] <othermaciej>
for bold and italic in apps that support it, it just announces "bold" or "italic", it doesn't use a different voice

[12:43:00.0000] <Hixie>
"Adobe does not wish the specification to fork, since we believe that this would fragment the Web."

[12:43:01.0000] <Hixie>
you really have to love the irony

[12:48:00.0000] <othermaciej>
I wonder if they have software that supports any of the existing HTML forks

[12:48:01.0000] <Hixie>
i also like the implication that anyone actually wishes the specifications to fork

[12:50:00.0000] <Hixie>
reminds me of the far more serious issue of abortion rights, where anti-reproductive-rights advocates argue that abortions should be illegal because "we don't want abortions", as if the pro-reproductive-rights advocates actually want to have abortions recreationally or something

[12:51:00.0000] <AryehGregor>
Well, in that case the anti-abortion people actually do tend to oppose abortions much more strongly than the pro-abortion rights people, in extreme cases considering abortion murder.  That's the official Catholic position, right?

[12:51:01.0000] <AryehGregor>
I don't think it's tenable to support any abortion rights at all if you think abortion is wrong *enough*, e.g., on the level of murder.

[12:52:00.0000] <Philip`>
What if you support murder?

[12:52:01.0000] <othermaciej>
I wonder if this will end up the most-responded-to HTML WG survey ever

[12:52:02.0000] <othermaciej>
I can't remember the previous record

[12:52:03.0000] <AryehGregor>
We can always rely on Philip` to throw monkey wrenches from left field into seemingly sound logic.

[12:52:04.0000] <reggna>
Pro murder but anti-abortion?

[12:52:05.0000] <AryehGregor>
othermaciej, well, the large majority of surveys explicitly say not to answer if you're just repeating others' objections, while in this one many people voted without saying anything.

[12:53:00.0000] <Hixie>
AryehGregor: yeah it's not a good analogy, it just reminded me of it

[12:53:01.0000] <AryehGregor>
reggna, maybe you only think murder is okay if the victim has the opportunity to fight back.

[12:53:02.0000] <reggna>
AryehGregor: Ah, that's true.

[12:53:03.0000] <reggna>
Got to love the fight!

[12:53:04.0000] <othermaciej>
there are older surveys that were not objection polls in the style of the issue surveys

[12:53:05.0000] <Philip`>
What about the "should we adopt the WHATWG's HTML5 spec or doom ourselves to irrelevance before even starting" survey from years ago?

[12:53:06.0000] <othermaciej>
this may be the record for most answered: http://www.w3.org/2002/09/wbs/40318/htmlbg/results

[12:53:07.0000] <AryehGregor>
Maybe I wasn't around for those.

[12:53:08.0000] <Philip`>
Yeah, that one

[12:56:00.0000] <othermaciej>
there were a bunch of others in that era that drew ~80-100 responses

[12:57:00.0000] <othermaciej>
for entertainment, check out these results too: http://www.w3.org/2002/09/wbs/40318/req-gapi-canvas/results

[12:58:00.0000] <Hixie>
AryehGregor: yt?

[12:58:01.0000] <AryehGregor>
Hixie, yes.

[12:58:02.0000] <Hixie>
AryehGregor: for http://www.w3.org/Bugs/Public/show_bug.cgi?id=12213 you suggest adding a note for fakepath

[12:58:03.0000] <AryehGregor>
Yes.

[12:58:04.0000] <Hixie>
AryehGregor: it turns out fakepath is mentioned in two places. one is where the bug reporter reported the bug from, which is in class=impl text

[12:58:05.0000] <Hixie>
AryehGregor: the other is in a place more relevant to authors, namely in the input type=file section

[12:59:00.0000] <Hixie>
AryehGregor: that section mentions fakepath as part of a big note on how to use it

[12:59:01.0000] <Hixie>
AryehGregor: does this affect your position?

[13:01:00.0000] <AryehGregor>
Hixie, not really.  I certainly wouldn't assume either that authors don't read implementer stuff, or that implementers won't want to have a one-line explanation of WTF things like this so that they know they're not hallucinating.

[13:01:01.0000] <Hixie>
should i just point to the other one, or have another similar explanation?

[13:01:02.0000] <AryehGregor>
It's like one line either way, so I don't think it makes a difference.

[13:02:00.0000] <Hixie>
the other one is far more than one line

[13:02:01.0000] <Hixie>
there's sample code and everything

[13:02:02.0000] <AryehGregor>
Well, so you can point to that, sure.

[13:02:03.0000] <Hixie>
k

[13:04:00.0000] <Philip`>
Maybe you need a sic element to mark sections where the reader might think they're hallucinating, to indicate that it really is that crazy

[13:39:00.0000] <zcorpan>
Philip`: we could add a warning, "If you have smoked something funny you may be hallucinating."

[13:42:00.0000] <Philip`>
"If you haven't, maybe you should before reading further"

[13:44:00.0000] <zcorpan>
but then we'd need another conformance class: the reader

[13:45:00.0000] <zcorpan>
and two interoperable readers that smoke something funny (unless they have understood the risks of not smoking and have a valid reason for not smoking)

[13:48:00.0000] <jgraham>
Hmm, no response from anyone at Apple yet

[13:57:00.0000] <zcorpan>
jgraham: you need to follow that up with a conspiracy theory

[14:01:00.0000] <jgraham>
Oh sorry

[14:01:01.0000] <jgraham>
Erm

[14:02:00.0000] <jgraham>
If you play Let It Be backwards it reveals that Paul McCartney had a secret plot to kill Steve Jobs in 2011 so they are all in mourning?

[14:02:01.0000] <jgraham>
And therefore unable to express an opinion

[14:02:02.0000] <zcorpan>
holy shit!

[14:05:00.0000] <zcorpan>
maybe he failed to kill him the first time and that's why he got ill

[14:05:01.0000] <jwalden>
steve jobs eats cheez whiz

[14:06:00.0000] <Philip`>
I've heard they're planning to replace Steve Jobs with bin Laden who they secretly employed with the cover story of having killed him, once they've given him a sufficiently convincing disguise to stand in with nobody noticing the switch

[15:14:00.0000] <Hixie>
anyone got IE9/10 available?

[15:14:01.0000] <Hixie>
http://software.hixie.ch/utilities/js/live-dom-viewer/ - what does the log say if you paste in <!DOCTYPE html>...<input type=number value=01><script>w(document.getElementsByTagName('input')[0].valueAsNumber)</script> ?

[15:15:00.0000] <zcorpan>
Hixie: hit upload

[15:15:01.0000] <Hixie>
done

[15:15:02.0000] <zcorpan>
log: undefined

[15:15:03.0000] <Hixie>
thanks

[15:16:00.0000] <zcorpan>
this was ie9 btw

[15:18:00.0000] <Hixie>
cool, thanks

[15:19:00.0000] <zcorpan>
np

[15:36:00.0000] <AryehGregor>
Hmm, Opera 11.10's HTML serializer seems to be broken.  When will it upgrade to an HTML5 serializer?

[15:37:00.0000] <AryehGregor>
(specifically, it looks like <ol><li></li><ol></ol><li></ol> serializes as <ol><li><ol></ol><li></ol>)

[15:37:01.0000] <AryehGregor>
(which puts the <ol> inside the <li> instead of as a sibling)

[15:37:02.0000] <zcorpan>
doesn't ie do that as well?

[15:37:03.0000] <jgraham>
AryehGregor: I expect that will work once Ragnarok lands for real

[15:39:00.0000] <AryehGregor>
zcorpan, it does omit end tags in some cases, but it seems to get this case right (didn't test carefully).

[15:39:01.0000] <AryehGregor>
jgraham, . . . which means what?

[15:40:00.0000] <gsnedders>
when it's ready, pretty much

[15:40:01.0000] <jgraham>
AryehGregor: I think this is the time that I pull the Apple line about not discussing future products or services

[15:41:00.0000] <AryehGregor>
Aw.

[15:41:01.0000] <AryehGregor>
Meanie.

[15:41:02.0000] <jgraham>
s/Apple/Google/ maybe

[15:41:03.0000] <zcorpan>
AryehGregor: we'll serialize html correctly no sooner than when we parse html correctly (and likely not later either)

[15:41:04.0000] <jgraham>
AryehGregor: Anyway, basically what gsnedders said

[15:41:05.0000] <AryehGregor>
I was figuring that much, yeah.

[15:43:00.0000] <Hixie>
abarth: yt?

[15:43:01.0000] <zcorpan>
(we couldn't do it sooner because it wouldn't work right with our current DOM tree lies about where elements end)

[15:43:02.0000] <wilhelm_>
The codename “Ragnarok” might give a clue about the time of its arrival. (c:

[15:51:00.0000] <AryehGregor>
Wow, we've gotten a huge number of eleventh-hour responses to the survey.

[15:56:00.0000] <jgraham>
Two different Microsoft employees responded

[15:56:01.0000] <jgraham>
(at least)

[15:56:02.0000] <jgraham>
which is unusual

[15:59:00.0000] <AryehGregor>
Oddly, it gives the e-mail addresses of non-respondents but not respondents.

[16:01:00.0000] <AryehGregor>
I'm counting Adrian Bateman, Eliot Graf, Kris Krueger, Frank Olivier, and Cynthia Shelly.

[16:01:01.0000] <AryehGregor>
Speculation: Adrian posted the official answer, and sent out a memo to other MS people to agree with the party line.

[16:02:00.0000] <AryehGregor>
(Did any of them disagree?)

[16:02:01.0000] <Dashiva>
Are you implying a Microsoft Cabal?

[16:02:02.0000] <AryehGregor>
Unsurprising, since this is an individual vote rather than organizational.

[16:02:03.0000] <AryehGregor>
I don't think it's fair to call a publicly-traded corporation a "cabal".

[16:03:00.0000] <AryehGregor>
That carries some implications of secrecy that are unlikely to apply.

[16:05:00.0000] <Dashiva>
But then there's no need to speculate about cabal-like activities

[16:05:01.0000] <AryehGregor>
Well, right, granted.

[16:06:00.0000] <bga_>
heh in old opera 9.64 win.onmessage does not works but win.addEventListener('message' is ok

[16:09:00.0000] <zcorpan>
MikeSmith: the copyright notice has a link to http://www.ercim.org/ which redirects to http://www.ercim.eu/

[16:09:01.0000] <zcorpan>
MikeSmith: should i change the link to http://www.ercim.eu/ ?

[16:11:00.0000] <jgraham>
AryehGregor: I guess the saving grace is that these "votes" are not actually votes

[16:11:01.0000] <AryehGregor>
There are tallies, though.

[16:15:00.0000] <jgraham>
In theory the analysis isn't "most votes wins" I think

[16:16:00.0000] <AryehGregor>
Not exactly, no, but if it has any impact at all, I expect the tallies to be a large part of it.

[16:17:00.0000] <AryehGregor>
I mean, almost no one *said* anything in their response other than "we like forking" or "we don't like forking".

[16:17:01.0000] <AryehGregor>
It's not like you can get much out of the survey other than the tallies.

[16:18:00.0000] <jgraham>
You could infer that there isn't consensus to adopt any of the PSIG licenses for any reasonable definition of consensus

[16:19:00.0000] <AryehGregor>
Well, you can get that out of the tallies.

[16:21:00.0000] <jgraham>
Yes, I'm not saying that the prose is very valuable

[16:21:01.0000] <Hixie>
http://www.w3.org/Bugs/Public/show_bug.cgi?id=11452#c9 is fun

[16:22:00.0000] <jgraham>
I doubt anyone said anything that will convince anyone else

[16:22:01.0000] <Hixie>
AryehGregor: did anyone say "we like forking"? Not "we like the ability to fork"? I doubt anyone actually likes forking per se...

[16:22:02.0000] <AryehGregor>
Hixie, I was using it as shorthand.

[16:22:03.0000] <Hixie>
oh ok

[16:24:00.0000] <jgraham>
is ★ a non-BMP character? I think we have problems with non-BMP characters in file names

[16:26:00.0000] <zcorpan>
U+2605 - BMP

[16:27:00.0000] <jcranmer>
9733

[16:27:01.0000] <jcranmer>
definitely BMP

[16:28:00.0000] <jcranmer>
☃ is still BMP ... o_O

[16:28:01.0000] <jgraham>
Oh well it must be a differnet bug then

[16:29:00.0000] <Hixie>
opera failed hard on that test

[16:29:01.0000] <Hixie>
it let me pick the file and then said "what file? there's no file here"

[16:32:00.0000] <zcorpan>
http://www.w3.org/Bugs/Public/show_bug.cgi?id=12611 - clearly html-differences needs a proper review

[16:33:00.0000] <zcorpan>
Hixie: there is no spoon

[16:38:00.0000] <zcorpan>
Philip`: let me know if you make changes to the splitter

[16:56:00.0000] <MikeSmith>
zcorpan: it's OK to change that ERCIM URL if you want, but you it's not a requirement

[16:57:00.0000] <MikeSmith>
zcorpan: as far as the content, there are a few other recent changes I can think of that you should list

[16:58:00.0000] <MikeSmith>
e.g., new mediagroup attribute

[16:58:01.0000] <zcorpan>
MikeSmith: pls file bugs :)

[16:58:02.0000] <MikeSmith>
OK

[16:58:03.0000] <MikeSmith>
I was just going to ask if you wanted me to do that :)

[16:59:00.0000] <zcorpan>
http://www.w3.org/Bugs/Public/show_bug.cgi?id=12223 - anyone care enough to get rel=help nuked?


2011-05-06
[17:05:00.0000] <MikeSmith>
zcorpan: well, it's on the microformats "existing rel values" page, so it remains valid anyway

[17:06:00.0000] <MikeSmith>
which is true also for pretty much all the other link-relation names that have been dropped

[17:06:01.0000] <MikeSmith>
so from a user/author POV, it makes little difference in practice if it's dropped from the spec or not

[17:06:02.0000] <zcorpan>
useless features should be moved to the invalid department imho

[17:07:00.0000] <zcorpan>
but i don't feel strongly about it

[17:07:01.0000] <MikeSmith>
it's a wiki

[17:07:02.0000] <zcorpan>
now time to sleep

[17:07:03.0000] <MikeSmith>
おやすみ

[17:07:04.0000] <zcorpan>
don't make me translate that; i'm going to bed

[17:22:00.0000] <jamesr>
someone is wondering why there isn't a delta on onscroll events

[17:25:00.0000] <jamesr>
anyone know why?

[17:28:00.0000] <heycam>
smaug____ may know

[17:28:01.0000] <smaug____>
jamesr: hmm. I'd say at least because of historical reasons

[17:29:00.0000] <smaug____>
jamesr: also, what kinds of values would you expect?

[17:29:01.0000] <smaug____>
and, scroll event happens after scrolling

[17:30:00.0000] <smaug____>
...so I'm not quite sure what the delta would mean

[17:30:01.0000] <smaug____>
especially if the size of viewport changes while scrolling

[17:30:02.0000] <jamesr>
the difference in scroll offsets relative to the previous scroll event, i suppose

[17:31:00.0000] <jamesr>
the top/left offsets shouldn't depend on the viewport size

[17:31:01.0000] <jamesr>
just the possible max values for them

[17:32:00.0000] <smaug____>
at which point would you calculate offset to top/left?

[17:33:00.0000] <smaug____>
when user scrolls, or when the scroll event is dispatched?

[17:33:01.0000] <jamesr>
when the event dispatches

[17:34:00.0000] <jamesr>
if i scroll down 53px then the next scroll event would have scrollDeltaY = 53 (or -53, i can never remember which way the coord system goes)

[17:36:00.0000] <smaug____>
jamesr: and if you after that scroll say 10px, scrollDeltaY would be 63?

[17:36:01.0000] <smaug____>
or 10?

[17:36:02.0000] <jamesr>
the next scroll event would say 10

[17:37:00.0000] <jamesr>
or i suppose each event could have the scrollTop/scrollLeft pair for the thing it was scrolling

[17:37:01.0000] <smaug____>
that would be tricky to implement, I think

[17:37:02.0000] <smaug____>
since layout may change during scrolling

[17:37:03.0000] <smaug____>
so how to decide that 10px was scrolled

[17:37:04.0000] <jamesr>
well, we have to do layout to scroll at all

[17:38:00.0000] <smaug____>
it would be easier to report offset to top/left

[17:39:00.0000] <smaug____>
but, we have that kinds of offset already elsewhere

[17:39:01.0000] <jamesr>
not sure i agree

[17:39:02.0000] <jamesr>
in webkit all the scrolls are internally done with deltas

[17:40:00.0000] <smaug____>
sure, in gecko, scrolling works with deltas too

[17:42:00.0000] <smaug____>
what would be the use case for adding offsets or deltas to scroll event?

[17:49:00.0000] <smaug____>
Seems like in gecko adding such delta would be quite easy. But since scroll event is async, I'm not quite sure how useful the delta would be. Perhaps there is some good use case ...

[17:50:00.0000] <jamesr>
some pages react to scroll events to lazy load parts of the DOM when they are close to scrolling into view, so currently they listen to scroll events and then in the handler have to figure out which way the scroll actually went

[17:50:01.0000] <jamesr>
there's buffering so it's ok if the event is later

[17:52:00.0000] <smaug____>
ah, that is a good use case

[17:55:00.0000] <jamesr>
i'm not totally sure why they want a delta instead of just querying scrollTop/scrollLeft in the handler - maybe that's just a PITA to keep track of

[17:56:00.0000] <smaug____>
is this some bug report where some web devs want a  new feature?

[17:58:00.0000] <smaug____>
If such additional properties were to added to scroll event, I think cssom-view would be the right place to define that all

[17:58:01.0000] <jamesr>
an email, but yes

[18:00:00.0000] <smaug____>
jamesr: but don't they still need to check if the view port has been scrolled long enough before loading some new data to page?

[18:00:01.0000] <jamesr>
oh? do they cover dom events?

[18:00:02.0000] <jamesr>
yes, they internally use it to calculate their view offset thingy

[18:00:03.0000] <smaug____>
in that case delta might not be useful

[18:01:00.0000] <jamesr>
why's that? they listen to resize to detect viewport size changes

[18:02:00.0000] <smaug____>
I mean, perhaps having just some flag to indicate the direction might be enough

[18:04:00.0000] <smaug____>
Though, deltaX/Y are that kinds of flags with a bit more information

[18:07:00.0000] <smaug____>
so, the delta needs to be calculated when scrolling happens, not when the event is dispatched

[18:16:00.0000] <jamesr>
does firefox aggregate multiple user scrolls into one scroll event?

[18:17:00.0000] <jamesr>
or are they 1:!?

[18:17:01.0000] <jamesr>
1:1*

[18:19:00.0000] <smaug____>
IIRC 1:1

[18:20:00.0000] <smaug____>
/me tries to remember if there is some special case when handling Win7 touch screen panning

[18:21:00.0000] <smaug____>
...there shouldn't be

[18:25:00.0000] <smaug____>
oh, smoothscrolling may change the default 1:1

[18:33:00.0000] <Hixie>
TabAtkins, ap: who should i cc on bugs that affect for webkit's form controls implementation?

[18:35:00.0000] <Hixie>
(the bug in this case being http://www.w3.org/Bugs/Public/show_bug.cgi?id=11212 )

[18:41:00.0000] <MikeSmith>
Kent Tamura

[18:41:01.0000] <MikeSmith>
maybe

[18:41:02.0000] <MikeSmith>
oh

[18:42:00.0000] <MikeSmith>
I meant if it's about HTML5 forms stuff

[18:42:01.0000] <MikeSmith>
/me looks at the bug

[18:44:00.0000] <Hixie>
it's about required="" on <input typeradio>

[19:02:00.0000] <ap>
Hixie: yes, tkent is the right person for that. And I'll see the bug anyway, and might CC someone else

[19:04:00.0000] <ap>
oh, if it's a w3.org bug, I won't see it anyway, I as thinking of webkit.org

[19:32:00.0000] <Yuhong>
On tables for layout: http://www.w3.org/Bugs/Public/show_bug.cgi?id=10963#c19

[00:38:00.0000] <hsivonen>
Hmm. is there some SEO scam that's based on translating Web pages into the mother tongue of the translator

[00:39:00.0000] <hsivonen>
something like the translations actually being machine translations but the links to them give Google juice to a scam?

[00:40:00.0000] <hsivonen>
so far, I've always permitted my pages to be translated and the translations seemed legitimate, but now I got a permission request that I don't know what to think of

[00:40:01.0000] <hsivonen>
kinda sad, though, that I even have to consider the possibility of a scam

[00:42:00.0000] <hsivonen>
hmm. googling around for the guy sure makes it look like the translations are all about building google juice for hosting-related domains

[00:52:00.0000] <MikeSmith>
hsivonen: there's some guy like that who has contributed translations of the CSS info hosted at W3C

[01:03:00.0000] <hsivonen>
MikeSmith: I made this the first time I declined a translation permission

[01:41:00.0000] <MikeSmith>
hsivonen: if you have not read http://greggkellogg.net/2011/05/05/cme-and-the-semantic-web yet, it's worth reading

[01:43:00.0000] <MikeSmith>
[[

[01:43:01.0000] <MikeSmith>
the fact is, though, that proprietary metadata formats are much simpler to implement and manage. According to a key opinion maker: “I bet the average developer can get a simple XML-based music metadata system up and running in less time than it would take to read the Music Ontology document. We can get most (all?) of the benefits of RDF through simpler means.

[01:43:02.0000] <MikeSmith>
]]

[01:44:00.0000] <hsivonen>
MikeSmith: thanks

[01:45:00.0000] <hsivonen>
"a key opinion maker" sounds like weasel language, though

[01:45:01.0000] <MikeSmith>
heh

[01:45:02.0000] <MikeSmith>
indeed

[01:45:03.0000] <MikeSmith>
kind of suspicious

[01:45:04.0000] <MikeSmith>
but the piece overall seems pretty well-considered

[01:48:00.0000] <MikeSmith>
zcorpan: do you know if Opera has an public plan to implement CSP?

[01:49:00.0000] <zcorpan>
i don't

[01:49:01.0000] <MikeSmith>
ok

[02:02:00.0000] <zcorpan>
bet browsers aren't going to call all keyboard events LegacyKeyboardEvent http://dev.w3.org/2006/webapi/DOM-Level-3-Events/html/DOM3-Events.html#legacy-key-attributes

[02:02:01.0000] <zcorpan>
/me will review more closely later

[02:06:00.0000] <hsivonen>
MikeSmith: I commented on the music/SemWeb post. Got stuck in moderation

[02:07:00.0000] <hsivonen>
MikeSmith: my comment was http://pastebin.mozilla.org/1219593

[02:07:01.0000] <MikeSmith>
/me reads

[02:09:00.0000] <MikeSmith>
yeah

[02:10:00.0000] <MikeSmith>
"astounding uptake" does not seem the most apt description

[13:43:00.0000] <Hixie>
jgraham: yt?

[13:43:01.0000] <Hixie>
jgraham: http://www.w3.org/Bugs/Public/show_bug.cgi?id=12299#c9

[14:16:00.0000] <Hixie>
Ms2ger: hah, i hadn't noticed it was you filing the bug in http://www.w3.org/Bugs/Public/show_bug.cgi?id=12187. I wouldn't have asked if it was a trick question if I had! :-P

[14:17:00.0000] <Ms2ger>
:)

[14:18:00.0000] <Ms2ger>
/me is happy to see bugs being fixed :)

[14:41:00.0000] <AryehGregor>
Has anyone thought about the fact that you can use the CSS cursor property to make it look like the cursor is anywhere you like on the page?  Like, security-wise?

[14:42:00.0000] <AryehGregor>
Maybe there are easier ways to make the cursor look like it's pointing at the wrong thing, though.


2011-05-07
[03:53:00.0000] <MikeSmith>
does document.hasFocus work in IE?

[03:54:00.0000] <MikeSmith>
nm

[11:09:00.0000] <Hixie>
hsivonen: yt?


2011-05-08
[18:44:00.0000] <GPHemsley>
/me mumbles something about standardizing a tab as 8 spaces...

[11:48:00.0000] <AryehGregor>
Hixie, you said the stuff I'm doing for Google should be public-domain, right?  I put a LICENSE file in my editcommands spec that says CC0, so tell me if that's not okay.

[12:49:00.0000] <Hixie>
AryehGregor: CC0 is fine. I just need to be able to reuse it in other specs.

[12:49:01.0000] <AryehGregor>
Hixie, k.


2011-05-09
[00:16:00.0000] <hsivonen>
Hixie: I'm back now

[00:17:00.0000] <Hixie>
i probably had a question about some bug or e-mail and replied there

[00:20:00.0000] <hsivonen>
ok

[00:32:00.0000] <Lachy>
Hixie, I started documenting examples of how authors mark up subtitles and taglines today. http://wiki.whatwg.org/wiki/Hgroup_element

[00:33:00.0000] <Lachy>
my initial assessment is that the most common techniques are h1 with h2 for subtitle or h1 with p for tag line.

[00:33:01.0000] <Hixie>
yeah that was my assessment too when i looked at this a few years ago

[00:34:00.0000] <Hixie>
wow, even more <div> wrappers around the h1/h2 or h1/p than i remember, too

[00:34:01.0000] <Lachy>
I'm really not getting the confusion surrounding hgroup though. It's quite easy to understand, although I would make a few minor adjustments to the spec to clarify it

[00:35:00.0000] <Hixie>
please file bugs for those, i'm happy to clear things up

[00:35:01.0000] <Hixie>
i don't really get the confusion either

[00:35:02.0000] <Lachy>
interestingly, the only example I found that matched Jame's suggestion using <h1>.. <subhead>...</subhead></h1> (or whatever it was), was the OED, that used h1/span

[00:35:03.0000] <Lachy>
*james'

[00:35:04.0000] <Hixie>
yeah but if you're right they also put some <p>s inside <h1> so...

[00:36:00.0000] <Lachy>
yes, that too

[00:36:01.0000] <hsivonen>
Lachy: wow. those examples really argue in favor of <hgroup>

[00:36:02.0000] <Lachy>
indeed.

[00:37:00.0000] <Lachy>
oh, the way this page uses hgroup doesn't http://www.apple.com/imac/features.html

[00:37:01.0000] <Lachy>
:-(

[00:37:02.0000] <Hixie>
i have been wondering about allowing <p> in <hgroup> instead of <h(n-1)>

[00:38:00.0000] <Hixie>
mostly my plan is to wait and see if we can get away with not doing that though

[00:38:01.0000] <Hixie>
(i think if we allowed it authors might get more willing to use it for purposes that don't really fit its definition)

[00:39:00.0000] <Hixie>
that is, requiring the use of just <hx> leads people to think more about whether what they're doing is really <hgroup> or more of just <header>

[00:39:01.0000] <Hixie>
anyway

[00:39:02.0000] <Hixie>
thanks for writing this up, data is always helpful

[00:41:00.0000] <Lachy>
Hixie, I found a lot of news papers were using h1/p, where others were using h1/h2, for their initial summary just after the article headline. I just didn't copy most of those into there yet

[00:41:01.0000] <Hixie>
yeah hx/p is pretty common in pre-html5 pages, because it's the only thing that html4 really allowed

[00:41:02.0000] <Hixie>
(notwithstanding that all w3c specs use h1/h2)

[00:42:00.0000] <Lachy>
but there seemed to be a fine line between what could be considered a subtitle and what was just an intoductory paragraph

[00:42:01.0000] <Hixie>
right

[00:45:00.0000] <Lachy>
Hixie, there doesn't seem to be too much point in allowing p inside hgroup, since authors can just do <header><h1/><p/></header>. They don't need hgroup at all in that case.

[00:46:00.0000] <Hixie>
indeed

[00:52:00.0000] <hsivonen>
which variant <hgroup><h1></h1><h2></h2></hgroup> or <hgroup><h1></h1><p></p></hgroup> works better with existing AT?

[00:53:00.0000] <Hixie>
depends what you're looking for really

[00:53:01.0000] <Hixie>
but to a first approximation, they're as good as each other

[02:25:00.0000] <jgraham>
Hixie: Re bug 12299 the confusion is that the non-normative text implies that both .item(index) and [index] return null for out of range index. However [index] returns undefined because WebIDL makes that case work like normal property lookup

[02:25:01.0000] <Hixie>
oh, i should fix such an implication if there is one

[02:25:02.0000] <Hixie>
reopen the bug if i closed it

[02:25:03.0000] <jgraham>
Rather than e.g. amking it work as a catchall that always forwards to item()

[02:25:04.0000] <jgraham>
No, you didn't

[02:25:05.0000] <Hixie>
k

[02:26:00.0000] <Hixie>
i hadn't realised the bug was about the domintro text

[02:26:01.0000] <Hixie>
that makes more sense

[02:26:02.0000] <Hixie>
i'll add a comment

[02:26:03.0000] <Hixie>
thanks for the clarification

[02:28:00.0000] <Hixie>
right. time for me to head to bed. nn.

[02:28:01.0000] <jgraham>
gn

[03:36:00.0000] <jgraham>
/me wonders if he dare read enough mail to work out why the WebApps group would consider doing something patently insane like making a case-insensitive virtual filesystem API

[03:37:00.0000] <gsnedders>
Presumably because that's what all widely used file systems are liked?

[03:37:01.0000] <gsnedders>
*like

[03:37:02.0000] <jgraham>
Pretty sure that's not true

[03:37:03.0000] <jgraham>
Also, experience with FAT shows what a bad idea it is

[03:39:00.0000] <gsnedders>
jgraham: NTFS and HFS+ both are. Certainly on OSes on which browsers are widely used, they cover pretty much 99% of the market.

[03:41:00.0000] <jgraham>
gsnedders: NTFS is case preserving although the API is case-insensitive. OSX has grown a case sensitive mode for HFS+ recently

[03:41:01.0000] <gsnedders>
jgraham: I am aware of that. But in the modes in which both are used…

[03:42:00.0000] <jgraham>
Anyway the point is that this is a virtual filesystem and being case insenitive has precisely nothing to recommend it on its own merits

[03:45:00.0000] <MikeSmith>
http://dev.w3.org/html5/status/issue-status.html has been updated

[03:45:01.0000] <MikeSmith>
only open pre-LC issue is 131 (caret location API)

[03:54:00.0000] <MikeSmith>
hsivonen: if/when you're around and have a few minutes, I wanted to chat briefly about ARIA schema stuff

[04:14:00.0000] <hendry>
is there a nice simple way can you think of for testing utf8 is supported by a browser inline? I.e. without checking page properties?

[04:15:00.0000] <hsivonen>
MikeSmith: ok

[04:16:00.0000] <gsnedders>
hendry: Data URIs?

[04:16:01.0000] <hsivonen>
hendry: why do you want to test that? browsers that don't support UTF-8 are so old that why would you care about those_

[04:18:00.0000] <MikeSmith>
I think there may be mobile browsers use in some parts of the world that don't support UTF-8

[04:18:01.0000] <MikeSmith>
hsivonen: so I've been looking the existing ARIA integration schema with an eye towards updating it to bring it into conformance with the current HTML spec

[04:19:00.0000] <MikeSmith>
hsivonen: is it OK if I take a shot at putting a patch together, or is it something you've already been planning to work on?

[04:20:00.0000] <gsnedders>
MikeSmith: I think most support UTF-8, just don't have non-ASCII fonts

[04:20:01.0000] <MikeSmith>
yeah, true about the fonts

[04:21:00.0000] <MikeSmith>
which is nuts

[04:21:01.0000] <hsivonen>
MikeSmith: putting together a patch is OK. I'm still entagled in driving small Firefox 4 regression fixes into the tree

[04:21:02.0000] <MikeSmith>
OK

[04:21:03.0000] <hsivonen>
MikeSmith: users of such browsers need some Opera Mini love ASAP

[04:22:00.0000] <hendry>
I need a simple test to check off WS-1600 & WS-1610 in http://specs.wacapps.net/2.0/feb2011/core/spec.html hsivonen

[04:22:01.0000] <MikeSmith>
hsivonen: true, and not just in Asia. I know a few people with Android handsets in North America who avoid user the default browser and pretty much always use Opera Mini instead

[04:23:00.0000] <hsivonen>
MikeSmith: well, at least the Android default browser supports UTF-8.

[04:23:01.0000] <MikeSmith>
yeah

[04:23:02.0000] <hsivonen>
MikeSmith: still, it's a good idea to replace it with a Mozilla (or Opera) offering

[04:23:03.0000] <hendry>
gsnedders: Data URIs look like a nice way of doing it

[04:24:00.0000] <MikeSmith>
hsivonen: I'd like to get a handset here that I could run Fennec on

[04:25:00.0000] <hendry>
MikeSmith: did you read http://natalian.org/archives/2011/03/20/State_of_the_browser_2011/ ? When I tried fennec? ;)

[04:25:01.0000] <MikeSmith>
or Mobile Firefox is the official name now I guess

[04:25:02.0000] <MikeSmith>
hendry: nope, will read it now, though

[04:26:00.0000] <MikeSmith>
hendry: not sure what build you tried but I think there have been some significant improvements since then

[04:28:00.0000] <MikeSmith>
hsivonen: so, I'll start in earnest on updating the ARIA integration, and try to avoid bugging you, but if I get to a point where I'm stumped, I might ping you for some guidance

[04:29:00.0000] <MikeSmith>
mostly I guess I don't understand the ARIA spec very well

[04:29:01.0000] <MikeSmith>
but Steve Faulkner has been helping me a bit with that

[04:29:02.0000] <hsivonen>
MikeSmith: I believe the name these days is Firefox for Android and Firefox for Maemo

[04:29:03.0000] <MikeSmith>
ok

[04:29:04.0000] <MikeSmith>
makes sense

[04:30:00.0000] <MikeSmith>
I hope they keep the fennec mascot, though

[04:30:01.0000] <hsivonen>
MikeSmith: ok. re: ARIA. I really wish I'd be able to get to my pending hacking projects instead of fixing fallout from the HTML5 parser shipping

[04:31:00.0000] <MikeSmith>
OK

[04:32:00.0000] <MikeSmith>
I've been thinking it'd be useful to have in place by around the start of the Last Call timeframe, so that people can test out the document-conformance criteria of that part of the HTML5 spec

[04:32:01.0000] <hsivonen>
yeah

[04:33:00.0000] <MikeSmith>
hsivonen: btw, as Steve pointed out on the public-html list, we have a case here were the criteria in the WHATWG spec are more restrictive than those in the W3C spec

[04:33:01.0000] <hsivonen>
MikeSmith: Yeah, I need to look into that.

[04:33:02.0000] <hsivonen>
MikeSmith: I'm not happy about normative parts of WHATWG and W3C specs diverging

[04:33:03.0000] <MikeSmith>
nope

[04:33:04.0000] <MikeSmith>
me neither

[04:34:00.0000] <MikeSmith>
we do also already have the case that ping is allowed in the WHATWG spec but not in the W3C one

[04:34:01.0000] <MikeSmith>
and Julian in fact raised a validator.nu bug for that

[04:35:00.0000] <MikeSmith>
hsivonen: if we end up having to address this, I think rather than providing an end-user option to choose what spec to validate against, it could instead by handled by a build-time option

[04:35:01.0000] <MikeSmith>
basically, just give an option to choose what driver file to use

[04:36:00.0000] <MikeSmith>
and add another toggle parameter to the schema

[04:37:00.0000] <hsivonen>
MikeSmith: ping is a somewhat milder case, because it can be seen as an additional feature instead of surprising tweaks to a feature that is in both specs

[04:37:01.0000] <MikeSmith>
true

[06:50:00.0000] <MikeSmith>
seems like volkmar is closing in on the progress implementation

[06:52:00.0000] <volkmar>
MikeSmith: it doesn't have a11y (but patches are coming) nor vertical feature (but patches are ready)

[06:52:01.0000] <MikeSmith>
cool

[06:53:00.0000] <MikeSmith>
I can see there's quite a lot more work to implement that than most people would realize

[06:54:00.0000] <volkmar>
MikeSmith: native UI wasn't really easy ;)

[06:54:01.0000] <MikeSmith>
yeah, I bet

[08:57:00.0000] <shichuan>
hi

[09:00:00.0000] <jgraham>
shichuan: Hi

[09:01:00.0000] <shichuan>
jgraham, do you undestand X{15} from http header?

[09:25:00.0000] <hsivonen>
https://twitter.com/#!/DanTonyBrown/status/67286248674426881

[09:26:00.0000] <jgraham>
hsivonen: Is the right answer to that not "keep a ref to any audio objects you might want to pause"?

[09:34:00.0000] <hsivonen>
jgraham: I don't know of a better answer

[09:37:00.0000] <jgraham>
Well having document.pauseAllAudio() would be a bit weird I think

[09:39:00.0000] <jgraham>
You would quickly want ways to pause all video and change volumes and, well pretty much everything

[09:43:00.0000] <zcorpan>
http://natalian.org/archives/2011/03/20/State_of_the_browser_2011/ has annoyingly low contrast for the links

[09:54:00.0000] <jgraham>
zcorpan: So the state of the browser in 2011 is that it can't work out when the text you are interested in is illegible?

[09:55:00.0000] <hsivonen>
hendry: any details about how Firefox for Android sucked?

[09:56:00.0000] <hendry>
hsivonen: it's a known evidently, patrick from Mozilla followed up. It basically didn't work at all on a Nexus S

[09:57:00.0000] <hsivonen>
hendry: oh. that

[09:57:01.0000] <hsivonen>
hendry: I thought Google pushed a system update that fixed it

[09:59:00.0000] <zcorpan>
it annoys me that dom3 events doesn't use webidl normatively

[09:59:01.0000] <hsivonen>
hendry: Fixed in Android 2.3.3 says the wiki

[10:01:00.0000] <jgraham>
zcorpan: Is that all?

[10:01:01.0000] <zcorpan>
no

[12:16:00.0000] <AryehGregor>
What's a good way to evade anti-right-click scripts?

[12:18:00.0000] <Philip`>
Disable scripting temporarily?

[12:18:01.0000] <TabAtkins>
Ctrl+Shift+J, and then do whatever I need directly in the Inspector instead.

[12:18:02.0000] <AryehGregor>
Ah, an Inspector shortcut.

[12:18:03.0000] <AryehGregor>
That works.

[12:18:04.0000] <AryehGregor>
Thanks.

[12:18:05.0000] <hober>
TabAtkins: Cmd+Opt+I, you mean :)

[12:18:06.0000] <TabAtkins>
Whatevs.

[12:18:07.0000] <TabAtkins>
You mac users and your crazy keyboard.

[12:19:00.0000] <TabAtkins>
Also, I think F12 is now a shortcut key in trunk?

[12:19:01.0000] <Philip`>
Is Opt the key with "alt" written on it?

[12:19:02.0000] <Philip`>
/me has never understood that

[12:19:03.0000] <TabAtkins>
It's the squiggly key.  Looks kind of like a #.

[12:20:00.0000] <Philip`>
I thought that was Cmd

[12:20:01.0000] <TabAtkins>
I think it maps to Alt on real keyboards.

[12:20:02.0000] <TabAtkins>
Oh, you're right.

[12:20:03.0000] <TabAtkins>
Yes, Option also has "alt" written on it on my mac keyboard.

[12:20:04.0000] <hober>
Philip`: ⌥⌘I

[12:22:00.0000] <Philip`>
Why can't they just pick a name for each key that is pronounceable and written on the key and used consistently in all documentation etc?

[12:22:01.0000] <TabAtkins>
I guess that Command is usually what you map Ctrl-based chords to, which is easy to remember, but Option needs another helper to make it obvious that you map Alt-based chords to it.

[12:23:00.0000] <hober>
I wish they had kept Open Apple and Closed Apple. :)

[12:24:00.0000] <jgraham>
So tht was anti-right-click scripts to Apple keyboard layouts in 6 lines

[12:24:01.0000] <jgraham>
Well played

[12:24:02.0000] <TabAtkins>
I blame hober

[12:24:03.0000] <hober>
heh

[13:39:00.0000] <zewt->
<AryehGregor> What's a good way to evade anti-right-click scripts? <- in Firefox, options -> content -> javascript advanced -> uncheck "disable or replace context menus"; not sure how to do it in Chrome

[13:40:00.0000] <AryehGregor>
That sounds like it would act weirdly if they actually had a replacement right-click menu.

[13:40:01.0000] <zewt->
all browsers really need to not allow that by default; the current situation is a mess

[13:40:02.0000] <zewt->
sites shouldn't do that; the context menu isn't theirs to override

[13:41:00.0000] <gsnedders>
zewt-: Google Maps uses it. No browser will break that.

[13:41:01.0000] <zewt->
google maps is the *only* site I've seen use it, and they need to stop doing that

[13:41:02.0000] <AryehGregor>
The default context menu is often not very useful in fancy web apps.  There should be some way for authors to override the default menu, but users need to be able to get the default one easily.

[13:41:03.0000] <TabAtkins>
zewt-: Once enough browsers implement the context menu api, I'm sure Maps will switch over.

[13:42:00.0000] <zewt->
that API to ... do what Tab just said--should help the situation

[13:42:01.0000] <AryehGregor>
YouTube uses it to suppress the context menu for HTML5 video.

[13:42:02.0000] <zewt->
yeah, that's the sort of abuse that shouldn't be possible

[13:42:03.0000] <zewt>
my browser features are not YouTube's to suppress

[13:45:00.0000] <AryehGregor>
I assume they've done something sneaky so that "Save As..." doesn't work right anyway.  Or have they not figured out such a way?

[13:45:01.0000] <zewt>
it's also just embarrassing that one of the single oldest, obnoxious JS abuses--alert("RIGHT CLICK NOT SUPPORTED")--still works

[13:48:00.0000] <zewt>
if you can get to the context menu, I'm not sure how you could prevent the browser from saving to disk

[13:48:01.0000] <AryehGregor>
I'm not sure either, but I wouldn't be surprised if there was some way to mess it up.

[14:05:00.0000] <jgraham>
We should probably have a makeSaveSlightlyNonTrivial boolean attribute

[14:06:00.0000] <jgraham>
Anyone who wanted to save the video would have to learn to remove that attribute

[14:06:01.0000] <jgraham>
Just like now they learn to disable the context menu script and remove the transparent covering divs

[14:29:00.0000] <AryehGregor>
/me is sad when he nests <ol>s five deep in a spec

[14:37:00.0000] <zcorpan>
AryehGregor: you should be glad that html doesn't have ol1 ol2 ol3 ol4

[14:37:01.0000] <AryehGregor>
Heh, true.

[14:38:00.0000] <jgraham>
Ooh someone removed all the yellow from the logs

[14:38:01.0000] <zcorpan>
what?

[14:39:00.0000] <zcorpan>
has krijnh b0rked it?

[14:40:00.0000] <jgraham>
Dunno

[14:42:00.0000] <zcorpan>
krijnh: ^

[15:09:00.0000] <AryehGregor>
Can anyone confirm in Firefox 4.0 that going to <http://aryeh.name/spec/editcommands/autoimplementation.html#insertorderedlist>, entering "<dl><dt>foo<dd>bar<dt>[baz]<dd>quz</dl>" (no quotes) in the "New test input:" box under insertorderedlist, and hitting "Add test" causes a reproducible crash?

[15:09:01.0000] <zcorpan>
Hixie: should we use the microformats wiki for <meta name> as well?

[15:09:02.0000] <AryehGregor>
Also, if anyone has a more recent, unstable Firefox version, it would be nice to know if it crashed there too.

[15:10:00.0000] <zcorpan>
/me tries in nightly

[15:11:00.0000] <zcorpan>
doesn't crash

[15:11:01.0000] <wilhelm_>
AryehGregor: WFM in 4.0.

[15:11:02.0000] <AryehGregor>
Hmm.

[15:11:03.0000] <AryehGregor>
wilhelm_, what platform?

[15:11:04.0000] <wilhelm_>
Leenoks.

[15:12:00.0000] <zcorpan>
/me mac

[15:12:01.0000] <wilhelm_>
Ubuntu, to be specific.

[15:12:02.0000] <AryehGregor>
I'm also Ubuntu.

[15:12:03.0000] <AryehGregor>
It seems like I don't have the latest point release, let me try that.

[15:12:04.0000] <wilhelm_>
“mv .mozilla .mozilla.old” and try again.

[15:13:00.0000] <AryehGregor>
Nope, still happens in 4.0.1.

[15:13:01.0000] <AryehGregor>
You mean try with a fresh profile.

[15:13:02.0000] <wilhelm_>
Yes.

[15:13:03.0000] <AryehGregor>
/me tries

[15:14:00.0000] <AryehGregor>
Still crashes.

[15:15:00.0000] <AryehGregor>
Hmm, now my old profile doesn't come back.  That's bad.

[15:15:01.0000] <AryehGregor>
/me pokes

[15:16:00.0000] <AryehGregor>
I blame wilhelm_.

[15:17:00.0000] <wilhelm_>
See, that wouldn't have happed if you had mved.

[15:18:00.0000] <AryehGregor>
I did mv.

[15:18:01.0000] <wilhelm_>
Oh.

[15:18:02.0000] <AryehGregor>
I don't have any idea where it got these files from.

[15:18:03.0000] <AryehGregor>
When I look at my last daily backup, the same folder is totally different.

[15:18:04.0000] <AryehGregor>
Like with some things that actually have 2011 timestamps before today.

[15:18:05.0000] <AryehGregor>
It seems to have magicked-up a Firefox profile from 2009 or something.

[15:19:00.0000] <AryehGregor>
All I did was mv .mozilla{,~}, then test, close Firefox, rm -rf .mozilla, mv .mozilla{~,}.

[15:19:01.0000] <AryehGregor>
Extremely weird.

[15:20:00.0000] <wilhelm_>
I work for a different browser vendor, so sabotaging your Firefox install would have required a rather elaborate scheme.

[15:20:01.0000] <AryehGregor>
/me knew he shouldn't have rm -rf'd so fast

[15:20:02.0000] <AryehGregor>
Ah, but you have a clear motive.

[15:21:00.0000] <gsnedders>
I mean, you don't hear him saying to run rm -rf ~/.opera do you?

[15:21:01.0000] <AryehGregor>
Oh.

[15:21:02.0000] <AryehGregor>
I see what happened.

[15:21:03.0000] <AryehGregor>
.mozilla~ already existed, so .mozilla is now a subdirectory.

[15:21:04.0000] <AryehGregor>
Nice.

[15:21:05.0000] <gsnedders>
heh

[15:21:06.0000] <AryehGregor>
I absentmindedly assumed I'd get an error if it already existed, but of course mv interprets its last argument in an unpredictable fashion for directories.

[15:23:00.0000] <Hixie>
zcorpan: dunno, up to them i guess

[15:24:00.0000] <Hixie>
zcorpan: i think medium-term we should move to a model where the registry (wherever it is) is for reserving names that are being worked on; have them expire after a few years without use; and omve the ones that do get used to the spec

[15:24:01.0000] <Hixie>
zcorpan: rather than having some in the spec and some not, with no clear distinction

[15:28:00.0000] <jdaggett>
joe: what's the conf #? 8606?

[15:32:00.0000] <zcorpan>
http://html5.org/tools/web-apps-tracker?from=6030&to=6031 is an annoying diff for html-differences

[15:34:00.0000] <zcorpan>
webvtt is still not in w3c html5 right?

[15:35:00.0000] <zcorpan>
Hixie: what was the <!--TT--> markers for?

[15:39:00.0000] <Hixie>
that diff should change nothing except move the TextTrack (TT) and MediaController (CONTROLLER) spec text into the w3c copy

[15:40:00.0000] <Hixie>
(look at the w3c equivalent diff)

[15:43:00.0000] <zcorpan>
Hixie: but TextTrack was already in the w3c spec for the last two publications afaict

[15:45:00.0000] <Hixie>
yeah,

[15:45:01.0000] <Hixie>
but i wasn't sure when i added it that it was staying in

[15:45:02.0000] <Hixie>
so i hadn't removed the markers

[15:46:00.0000] <Hixie>
i'd just changed <!--START ...--> to <!--KEEP-START ...--> which has no effect

[15:46:01.0000] <Hixie>
this diff removed all the KEEP-* markers

[15:46:02.0000] <zcorpan>
ok

[15:47:00.0000] <bga_>
is it standard? const select = document.createElement('select'); select.options[0] = new Option('a', 'a'); _log(select.options.length)?

[15:49:00.0000] <zcorpan>
bga_: yeah, see the html spec

[15:49:01.0000] <zcorpan>
bga_: except const isn't standard

[15:49:02.0000] <bga_>
fantastic

[15:51:00.0000] <zcorpan>
actually i dunno if options[0] = ... is supposed to work per spec

[15:52:00.0000] <zcorpan>
does it work?

[15:53:00.0000] <bga_>
yeah

[15:53:01.0000] <bga_>
const select = document.createElement('select'); select.options[10] = new Option('a', 'a'); _log(select.options.length) // 11

[15:54:00.0000] <bga_>
i hope we will can works with other dom collections so easy

[15:54:01.0000] <zcorpan>
wow

[15:54:02.0000] <bga_>
%)

[15:55:00.0000] <zcorpan>
i can't see in the spec that it should work

[15:55:01.0000] <zcorpan>
so file a spec bug

[15:55:02.0000] <zcorpan>
here http://www.whatwg.org/specs/web-apps/current-work/complete/common-dom-interfaces.html#htmloptionscollection

[15:56:00.0000] <zcorpan>
firefox throws an exception for select.options[100000] =

[15:57:00.0000] <zcorpan>
opera doesn't, and i daren't try another 0 :-)

[15:58:00.0000] <gsnedders>
I believe that works in Opera.

[15:58:01.0000] <gsnedders>
If you have enough memory.

[15:58:02.0000] <gsnedders>
:)

[15:58:03.0000] <bga_>
only webkit and opera

[15:59:00.0000] <bga_>
but nice

[16:00:00.0000] <gsnedders>
The fact that many things with select elements are O(n) in Opera may not help

[16:00:01.0000] <gsnedders>
IIRC there are some things with select that are O(n^2) in Opera, but I don't remember what.

[16:00:02.0000] <bga_>
way to make work with dom more easy w/o frameworks

[16:01:00.0000] <bga_>
wrong

[16:01:01.0000] <bga_>
ff and ie ok too

[16:06:00.0000] <bga_>
gsnedders btw when opera will support Object.seal? do you know? :)

[16:06:01.0000] <gsnedders>
bga_: In the future.

[16:07:00.0000] <bga_>
i hope opera will throw exception in both modes

[16:07:01.0000] <bga_>
as v8

[16:08:00.0000] <bga_>
because many ppl use {with} and other es3 stuff but want es5 api w/o silent errors

[16:11:00.0000] <bga_>
gsnedders also can you node yourself to add proprietary api to throw error if code [[Get]] not existing property of object

[16:11:01.0000] <bga_>
or Proxy api

[16:12:00.0000] <bga_>
something like {var a = Object.makeStatic({a: 1}); a.b // error }

[16:13:00.0000] <gsnedders>
bga_: Throw an exception in what case?

[16:13:01.0000] <bga_>
i wonder why TC39 hasnt added something like that

[16:14:00.0000] <bga_>
gsnedders to protect from typos

[16:14:01.0000] <gsnedders>
/me shrugs

[16:14:02.0000] <gsnedders>
bga_: I mean what you said originally, about V8 doing so?

[16:14:03.0000] <bga_>
ah

[16:15:00.0000] <zcorpan>
ok http://dev.w3.org/html5/html4-differences/ should be up-to-date now. please review (and file bugs)

[16:15:01.0000] <bga_>
var a = Object.seal({}); a.b = 1 // errer even in nonstrict mode

[16:16:00.0000] <gsnedders>
bga_: The spec should define that.

[16:16:01.0000] <bga_>
:(

[16:17:00.0000] <bga_>
many ppl uses es3 only features

[16:17:01.0000] <bga_>
and can not use strict mode

[16:18:00.0000] <gsnedders>
bga_: I don't know what the behaviour is off-hand, tbh

[16:19:00.0000] <gsnedders>
Though I didn't think any of the Object stuff changed the [[Get]] behaviour in either strict or non-strict

[16:20:00.0000] <bga_>
not [[Get]], [[Put]]

[16:20:01.0000] <gsnedders>
Oh, [[Put]]

[16:20:02.0000] <gsnedders>
/me can't read

[16:20:03.0000] <bga_>
in sctict mode - error, in non script - nothing

[16:20:04.0000] <bga_>
*strict

[16:21:00.0000] <bga_>
typos

[16:22:00.0000] <gsnedders>
bga_: Ah, right. It's the fact that whether [[Put]] can throw for any reason is controlled by strict mode

[16:38:00.0000] <zcorpan>
bga_: did you file a bug on options[0]= ?

[16:40:00.0000] <bga_>
sec

[16:40:01.0000] <bga_>
requires js heh

[16:49:00.0000] <bga_>
zcorpan http://www.whatwg.org/issues/ "E-mail is not valid or does not correspond to a user who has sent feedback that has not yet been dealt with."

[16:50:00.0000] <zcorpan>
Hixie: ^

[16:50:01.0000] <zcorpan>
nn

[16:50:02.0000] <Hixie>
nn

[16:51:00.0000] <Hixie>
bga_: what's your e-mail address?

[16:51:01.0000] <bga_>
bga.email⊙gc

[16:51:02.0000] <Hixie>
bga_: send me a mail at ian⊙hc

[16:52:00.0000] <Hixie>
bga_: my script will add your name to the list of accounts in the next hour or so

[16:52:01.0000] <Hixie>
bga_: you shoudn't need an account to file a bug though

[16:52:02.0000] <Hixie>
bga_: just use the box at the bottom right

[16:52:03.0000] <Hixie>
bga_: the account is only used for voting on issues and changing the status indicator thigies

[16:53:00.0000] <Hixie>
in other news, can we just drop aria altogether

[16:53:01.0000] <Hixie>
it's caused more problems in html than pretty much anything else so far

[16:54:00.0000] <boogyman>
lol

[16:54:01.0000] <bga_>
i dont see any boxes at the bottom right

[16:54:02.0000] <boogyman>
Hixie: you should drop the ability to put block level elements inside of an anchor tag

[16:55:00.0000] <bga_>
ah

[16:55:01.0000] <bga_>
in spec page

[16:55:02.0000] <bga_>
sorry

[16:55:03.0000] <Hixie>
boogyman: why?

[16:55:04.0000] <Hixie>
bga_: yeah


2011-05-10
[17:01:00.0000] <boogyman>
Hixie: I've yet to come across a valid use-case for a block level element inside of an anchor. I've been given a multitude of suggestions, but I disagree with all of them... eg I'd like to make an entire table row clickable <---- lolwut???

[17:02:00.0000] <boogyman>
makes me think of clientsfromhell.com every time someone says something as idiotic as that

[17:02:01.0000] <bga_>
ok http://www.w3.org/Bugs/Public/show_bug.cgi?id=12639

[17:20:00.0000] <erlehmann>
boogyman, “don't allow block level elements inside anchors” seems like a bad case of “stop liking what i don't like”

[17:21:00.0000] <boogyman>
erlehmann: That is very much the case, however, I am open to the thought of a use-case that makes sense

[17:24:00.0000] <erlehmann>
boogyman, browsers already handle links wrapped around block level elements. html5 is descriptive. deal. with. it.

[17:24:01.0000] <erlehmann>
/me puts on glasses.

[17:25:00.0000] <boogyman>
erlehmann: previously it wouldn't validate

[17:25:01.0000] <erlehmann>
boogyman, imagine a magazine style page with teasers …

[17:26:00.0000] <Hixie>
boogyman: look at whatwg.org. it has an example of block-like elements in links that i think is reasonable.

[17:28:00.0000] <boogyman>
Hixie: are you speaking about the <section> bit? If so, I disagree with that as well. The title can be the link, what semantic value comes from making the entire section an anchor?

[17:31:00.0000] <boogyman>
erlehmann: I'm not following? if there are multiple teasers, use an anchor tag per teaser, with the "teaser" being an image and/or text <a href=""><img src="" alt="contextual image"> Some description</a>, then use CSS to properly determine layout

[17:31:01.0000] <erlehmann>
boogyman, but my hypothetical teasers are <divs>, with complex inner workings!

[17:32:00.0000] <boogyman>
erlehmann: sounds like you have a non-semantic layout then

[17:33:00.0000] <boogyman>
the standards shouldn't be lenient or empathetic to un-semantic markup

[17:33:01.0000] <erlehmann>
boogyman, well, should they be considered <articles>, then?

[17:34:00.0000] <erlehmann>
the standards shouldn't be lenient! yellow screen of death and destruction for all!

[17:37:00.0000] <boogyman>
erlehmann: possibly an aside/section as exampled on whatwg.org, but again, I don't believe any semantic meaning value is gained by allowing the full "module" be a link

[17:38:00.0000] <erlehmann>
boogyman, „the teaser links to the full-blown article“ is somewhat more in line with reality than „the teaser contains multiple links to the full-blown article“

[17:38:01.0000] <Hixie>
boogyman: i mean the boxes, "HTML", "News", etc. look at the source.

[17:38:02.0000] <Hixie>
boogyman: the whole box each time is a link

[17:38:03.0000] <erlehmann>
i'd argue it is “more semantic” based upon that

[17:38:04.0000] <Hixie>
boogyman: it makes no sense to put the link _in_ the box

[17:39:00.0000] <erlehmann>
what the man said

[17:40:00.0000] <erlehmann>
also sorry for my quotes

[17:43:00.0000] <boogyman>
Hixie: I'm not seeing those examples in the source

[17:43:01.0000] <boogyman>
erlehmann: <a href="">This is some complex <span>advert</span></a>  a span {...}

[17:44:00.0000] <boogyman>
I just don't see the semantic value :-s

[17:45:00.0000] <erlehmann>
boogyman, then don't. others do and use it already. we like what you don't like. :)

[17:46:00.0000] <boogyman>
erlehmann: It's not a matter of emotional opinion; It's a matter of semantics

[17:48:00.0000] <Hixie>
boogyman: the second element child of the <body> on http://whatwg.org/

[17:48:01.0000] <erlehmann>
boogyman, describe a scenario where you opine that wrapping a block in a link lacks semantic value opposed to a inline alternative

[17:50:00.0000] <Hixie>
boogyman: (there's not much else to that document, i'm not sure how you're missing it!)

[18:58:00.0000] <boogyman>
erlehmann: the page that Hixie is referring to is another example... http://jsfiddle.net/NXZLc/ is how I would write it up semantically

[18:58:01.0000] <Hixie>
there's no list there

[18:59:00.0000] <Hixie>
why do you have a list?

[18:59:01.0000] <boogyman>
because your markup is more aptly described as a list of options/links

[18:59:02.0000] <Hixie>
ew no, that's not at all a list

[18:59:03.0000] <Hixie>
it's just a bunch of links

[19:00:00.0000] <boogyman>
most*, could possibly even encapsulate it all within a "nav" too

[19:00:01.0000] <Hixie>
how would you handle it if the boxes had two paragraphs in them instead of the current one-paragraph solution?

[19:01:00.0000] <boogyman>
can you describe a scenario where multiple paragraphs are semantically appropriate for a single anchor?

[19:07:00.0000] <boogyman>
erlehmann: http://whatwg.com vs http://jsfiddle.net/NXZLc/

[19:07:01.0000] <Hixie>
well the example on whatwg.org frankly i think the current markup (just one <p>) is a bit dubious. I was thinking of changing it to something and a <p>, just not sure what the first one should be

[19:07:02.0000] <Hixie>
matbe a <p><strong>

[19:07:03.0000] <Hixie>
maybe

[19:08:00.0000] <erlehmann>
boogyman,  PS1="\w > rm \w"

[19:08:01.0000] <boogyman>
eh?

[19:08:02.0000] <erlehmann>
:D

[19:08:03.0000] <erlehmann>
/me puts on his troll hat.

[19:09:00.0000] <erlehmann>
boogyman, you realize this *will* degrade less gracefully then just using block elements?

[19:10:00.0000] <erlehmann>
li a span {display:block} … and nothing of value was gained

[19:11:00.0000] <boogyman>
erlehmann: it's cosmetic, therefore, by definition its to be done via css

[19:12:00.0000] <erlehmann>
boogyman, tell that to the guy with spec edit rights, not me. %)

[19:12:01.0000] <Hixie>
it's not cosmetic

[19:12:02.0000] <Hixie>
the whole thing is a link, and the whole thing is a paragraph

[19:12:03.0000] <Hixie>
arguably two paragraphs

[19:13:00.0000] <erlehmann>
“the whole thing is a link”, there is the point. boogyman, do you think that the whole thing is not a link?

[19:13:01.0000] <boogyman>
I'd think of it more of a dl, or section with a heading and description

[19:14:00.0000] <Hixie>
it's clearly not a bunch of name-value pairs :-P

[19:14:01.0000] <Hixie>
you seem to have drunk some semantic koolade :-P

[19:15:00.0000] <boogyman>
koolade is for the birds, but erm, i think it's a very loose fit. But anyway, this is the first example I've seen that could potentially be semantically appropriate. I just disagree with the principle

[19:17:00.0000] <boogyman>
but, it's still a list of links

[19:17:01.0000] <Hixie>
it's not more a list of links than a book is a list of paragraphs

[19:21:00.0000] <boogyman>
correct, but a paragraph has semantic meaning in both a single and group setting. This is a group of links that navigate the user to specific pieces of the website

[19:23:00.0000] <erlehmann>
boogyman, a web site is a list of links.

[19:23:01.0000] <erlehmann>
:3

[19:23:02.0000] <erlehmann>
(thanks, I'll be here all week)

[19:23:03.0000] <boogyman>
badum, chee

[19:26:00.0000] <boogyman>
Hixie: please tell me you're not considering <a href=""><p><strong>Category</strong></p><p>foo description</p></a>

[19:29:00.0000] <erlehmann>
s/strong/h1/ge

[20:10:00.0000] <MikeSmith>
very cool to see that doublec is working on a media fragments implementation

[20:10:01.0000] <MikeSmith>
hopefully the questions and feedback will drive some changes to the spec

[20:14:00.0000] <doublec>
thanks MikeSmith!

[20:16:00.0000] <MikeSmith>
doublec; was also reading foolip comments in the bug, and your reply

[20:17:00.0000] <MikeSmith>
whatever subset you end up supporting, hopefully other implementors can implement that subset also

[20:17:01.0000] <doublec>
yes, I'm hoping we can agree. foolip and I seem to be in agreement from what I can tell.

[20:18:00.0000] <doublec>
At the Foundations of Open Media workshop in 2010 we (firefox media devs) gave similar feedback to those working on the fragment spec

[20:29:00.0000] <MikeSmith>
doublec: I guess the feedback sometimes doesn't get treated seriously enough until the implementation work starts in earnest

[20:30:00.0000] <MikeSmith>
hey jamesr - I think you mentioned something about needing mercurial help here a while back

[20:30:01.0000] <MikeSmith>
I just wanted to say if it was in the context of using the W3C mercurial repo, I am always glad to help with that

[20:44:00.0000] <jamesr>
MikeSmith: hi! i had some trouble using the wrong acct name, but sorted that

[20:44:01.0000] <jamesr>
MikeSmith: i don't understand how properly to handle merges

[20:44:02.0000] <jamesr>
but i have to run and eat dinner now. i might ask you about best practices for multiple editors/merges when using the w3c mercurial repo at some point in the future if you're willing to explain things

[20:45:00.0000] <jamesr>
i think i grok the git model, but i'm not sure if that is helpful or harmful to understanding the hg model

[20:45:01.0000] <MikeSmith>
ok

[20:45:02.0000] <MikeSmith>
feel free to ping me any time

[20:45:03.0000] <MikeSmith>
I'm always on this channel when I'm online

[21:01:00.0000] <eboyjr>
Hello, just curious as to why the TextMetrics object only contains a `width` property

[21:02:00.0000] <eboyjr>
why it's been decided that way

[21:30:00.0000] <Hixie>
eboyjr: we'll add more in due course

[21:33:00.0000] <eboyjr>
Hixie: okay, cool. what's due course?

[21:33:01.0000] <Hixie>
once the browsers have caught up with what the spec already says

[21:33:02.0000] <Hixie>
no point adding features when they still haven't implemented the last bunch :-)

[21:35:00.0000] <eboyjr>
hrm i'da figured it would be good to come up with a full set of features and let browsers implement it at its own will and discretion

[21:38:00.0000] <eboyjr>
bounding-box metrics would be more valuable, imo

[22:43:00.0000] <MikeSmith>
hmm, the dfn for term "space character" is marked up with class=impl

[22:43:01.0000] <MikeSmith>
so it only appears in the full version of the spec

[22:43:02.0000] <MikeSmith>
but not in the non-implementor view

[22:44:00.0000] <MikeSmith>
so non-implementors don't get to know what the space characters actually are

[01:04:00.0000] <Retrieving>
/me #whatwg modes...

[02:07:00.0000] <MikeSmith>
zcorpan: about the links in the developer versin

[02:07:01.0000] <MikeSmith>
*version

[02:07:02.0000] <MikeSmith>
I think there are some references that it's acceptable to have be links back to the full spec

[02:08:00.0000] <MikeSmith>
in the case of the W3C Web Author Edition, the build process I set up to create that takes any broken links it finds, and rewrites them to point to the full spec

[02:09:00.0000] <zcorpan>
MikeSmith: oh they're not just broken links?

[02:09:01.0000] <zcorpan>
aha

[02:09:02.0000] <MikeSmith>
yeah, would be broken if it weren't for the rewriting

[02:09:03.0000] <MikeSmith>
Ben uses a different build setup than the one I do

[02:10:00.0000] <MikeSmith>
so I'm not sure if he is doing the fixup thing or not

[02:11:00.0000] <MikeSmith>
anyway, for example, there are a lot of links in the IDLs that reference stuff which is only in the impl view

[02:11:01.0000] <zcorpan>
well then there are other ways to find which links are "broken"

[02:11:02.0000] <MikeSmith>
true

[02:11:03.0000] <zcorpan>
maybe a user style sheet and casual browsing is effective

[02:11:04.0000] <MikeSmith>
but my point is, a lot of them are human-judgement cases, I think

[02:11:05.0000] <MikeSmith>
yeah

[02:11:06.0000] <MikeSmith>
could help

[02:12:00.0000] <MikeSmith>
as far as finding the ones that need fixing

[02:12:01.0000] <zcorpan>
yes

[02:12:02.0000] <MikeSmith>
the way the stylesheet is for the author view now, those links to the full spec do show up differently on hover

[02:12:03.0000] <MikeSmith>
but not normally

[02:13:00.0000] <MikeSmith>
but of course it'd be possible to have them show up even not on hover

[02:13:01.0000] <MikeSmith>
I think for my build at least they may all have class=full_spec or something on them

[02:14:00.0000] <MikeSmith>
so wouldn't even have to use any fancy selector stuff to select them

[02:35:00.0000] <zcorpan>
it's impossible to draw eillipses with canvas? surely it isn't?

[02:39:00.0000] <Hixie>
describe it using beziers, or stretch an arc with a transform

[03:09:00.0000] <foolip>
Philip`, still waiting for http://www.whatwg.org/specs/web-apps/current-work/multipage/the-iframe-element.html#getting-media-metadata to become http://www.whatwg.org/specs/web-apps/current-work/multipage/the-video-element.html#getting-media-metadata ;)

[03:11:00.0000] <MikeSmith>
zcorpan: about the u change

[03:11:01.0000] <MikeSmith>
in the Changed Elements section

[03:11:02.0000] <MikeSmith>
minor formatting nit

[03:11:03.0000] <MikeSmith>
you put no <code> around the "u"

[03:12:00.0000] <MikeSmith>
so it's not rendered the same as the other element names in that section

[03:15:00.0000] <zcorpan>
oops

[03:16:00.0000] <zcorpan>
fixed

[03:16:01.0000] <MikeSmith>
/me checks

[03:16:02.0000] <MikeSmith>
cool

[03:16:03.0000] <MikeSmith>
thanks

[03:17:00.0000] <MikeSmith>
what we really need is a specific element for marking up Chinese proper names

[03:17:01.0000] <MikeSmith>
just as with the proposed element for markup up ship names

[07:49:00.0000] <alystair>
ugh - you'd think browsers would be able to implement alpha transparency based word-wrapping :)

[07:51:00.0000] <Lachy>
what?

[07:52:00.0000] <alystair>
well, we have nice block wrapping of text, but nothing more advanced, eg. having an image of a black circle with transparent background

[07:52:01.0000] <alystair>
then have browser detect parts that are 'empty' and allow text flow around it

[07:53:00.0000] <Lachy>
oh, right. I think there might be some CSS proposals for that somewhere, and I'm pretty sure it can be done in SVG by specifying the path. I'm not sure of the details though.

[07:54:00.0000] <alystair>
looks like I get to write a fun article if it's possible via svg

[07:54:01.0000] <Lachy>
alystair, is this what you're looking for? http://dev.w3.org/csswg/css3-exclusions/

[07:55:00.0000] <Philip`>
People will presumably complain about security implications, so it'd have to be restricted to word-wrapping around same-origin images

[07:55:01.0000] <alystair>
neat!

[07:56:00.0000] <alystair>
security implications?

[07:56:01.0000] <Lachy>
alystair, being able to detect the content of the image at all is a security risk for non-same-origin images

[07:57:00.0000] <hsivonen>
alystair: using the feature to probe the alpha channel of a confidential image

[07:57:01.0000] <alystair>
....

[07:57:02.0000] <alystair>
the program would be doing that, not a human being

[07:57:03.0000] <Lachy>
but that CSS proposal works by specifying an explicit path, rather than any image heuristics or edge detection

[07:57:04.0000] <alystair>
oh.

[07:58:00.0000] <hsivonen>
with clever SVG filters applied, it might be possible to move each of R, G and B to alpha channel, too

[07:58:01.0000] <alystair>
so what you're saying is that by using automatic edge detection one could externally somehow identify it's content by the edges? :P

[07:58:02.0000] <hsivonen>
alystair: yeah

[07:58:03.0000] <Lachy>
depending on what the image is, yes

[08:00:00.0000] <alystair>
it's a fun concept to think of using 2px fontsize, but realistically what sort of image with transparency would have some sort of secret information

[08:01:00.0000] <alystair>
an email address perhaps?

[08:01:01.0000] <Philip`>
http://top-secret-project-intranet-server/logo-containing-secret-project-name.gif

[08:01:02.0000] <alystair>
you'd then have to OCR the edges...

[08:01:03.0000] <alystair>
and not the entire shape

[08:01:04.0000] <jgraham>
Which you could maybe do

[08:02:00.0000] <alystair>
somehow I doubt OCR has advanced that much :P

[08:02:01.0000] <Philip`>
You don't need OCR, you just send the raw outline data back to the attacker's server

[08:02:02.0000] <Lachy>
as hsivonen said, you could use SVG filters, clipping regions or other effects to adjust which colours are rendered transparently, which means you can probe the image to find edges

[08:02:03.0000] <Philip`>
where they can read it manually

[08:02:04.0000] <jgraham>
Right, that's basically what I meant

[08:03:00.0000] <alystair>
talk about an edge case :P

[08:04:00.0000] <Lachy>
alystair, these are similar reasons to why canvases become tainted, and restrict the ability to obtain pixel data, when a non-same-origin image is added

[08:04:01.0000] <Philip`>
Security is all about edge cases, since it only takes one to break the security model

[08:05:00.0000] <alystair>
realistically can't the wrap script just have a certain limit on scan resolution of the image?

[08:05:01.0000] <alystair>
eg. 12px blocks as a minimum

[08:06:00.0000] <jgraham>
(the "edge case" thing scored 1 comedy drumroll btw)

[08:07:00.0000] <jgraham>
You could try making a limit like that but it seems hard to justify

[08:07:01.0000] <Philip`>
(But with images it seems pretty futile to try squashing all attacks, because there's various (hypothetical?) timing-related attacks and presumably the performance cost of protecting against them is unacceptable in a benchmark-driven browser marketing environment)

[08:07:02.0000] <Lachy>
alystair, that all depends on the target image and what level of detail is really necessary to obtain the information. Even a crude outline might be enough in some cases

[08:07:03.0000] <Philip`>
/me wonders if anyone has actually got such attacks working in practice

[08:08:00.0000] <alystair>
I find it silly that things like this even need to be discussed because we're trying to shelter even the dumbest programmer from an attack like that

[08:08:01.0000] <jgraham>
whereas disallowing this kind of functionality for cross domain images seems like a quite reasonable solution that has the normal properties of the web security model

[08:08:02.0000] <jgraham>
Uh

[08:08:03.0000] <alystair>
if someone is able to inject something that sends data back to a 3rd party server then they have much much larger issues

[08:08:04.0000] <Philip`>
It's not about injecting something

[08:08:05.0000] <jgraham>
There are no programmers involved

[08:09:00.0000] <Philip`>
It's about a user visiting http://attacker.com/ which runs scripts on the user's machine (i.e. behind their firewall)

[08:09:01.0000] <Lachy>
alystair, <img src="http://intranet/top-secret/image.png">

[08:10:00.0000] <jgraham>
Evil site A convinces a user to visit their page and loads a resource from secret IP-restricted server B into A. It then uses some technique to extract information from that resource

[08:10:01.0000] <jgraham>
Allowing them to discover secrets held on B

[08:13:00.0000] <alystair>
like a flash uploader since they happen to know the EXACT address of the secret image url :P

[08:42:00.0000] <alystair>
http://www.google.com/events/io/2011/index.html <- pretty :)

[08:45:00.0000] <jgraham>
/me notes that the person who designed that never tried it on a laptop screen

[08:46:00.0000] <Lachy>
jgraham, looks perfect on my laptop screen.

[08:48:00.0000] <alystair>
perhaps they are running the assumption that many of the people visiting the page would have high resolution screens

[08:48:01.0000] <jgraham>
Lachy: You have the world's biggest laptop screen

[08:48:02.0000] <jgraham>
Roughly

[08:48:03.0000] <jgraham>
On a 13" screen it doesn't work

[08:48:04.0000] <Lachy>
not quite. I only have 17". Dell makes a 19"

[08:49:00.0000] <Philip`>
It looks alright on mine, which is only 1280x800

[08:49:01.0000] <jgraham>
It might depend on how much other stuff you have

[08:49:02.0000] <Philip`>
(as long as I don't want to read the first two digits)

[08:49:03.0000] <jgraham>
On a pretty standard OSX setup the other day the QR code blocked the time

[08:49:04.0000] <karlcow>
The QR code is on top of the counter

[08:50:00.0000] <jgraham>
Ah, yes, quite broken

[08:50:01.0000] <alystair>
hehe I see that

[08:50:02.0000] <Philip`>
I thought that was intentional at first

[08:50:03.0000] <alystair>
if you drag it up enough it overlaps everything else :)

[08:50:04.0000] <karlcow>
houla and the CPU is screaming

[08:51:00.0000] <alystair>
do most of the people in the whatwg participate on the mailinglist or do many contribute/edit the spec without talking on it?

[08:53:00.0000] <karlcow>
COMMAND                                       %CPU

[08:53:01.0000] <karlcow>
Opera                                         88.6

[08:53:02.0000] <jgraham>
The WHATWG is basically the mailing list

[08:53:03.0000] <jgraham>
Plus this channel

[08:53:04.0000] <jgraham>
Plus an evil cabal

[08:53:05.0000] <jgraham>
Who evilly do nothing

[08:54:00.0000] <jgraham>
The only person who directly edits the spec is Hixie

[08:58:00.0000] <jgraham>
(the "evil cabal" is actually just a mailing list of some people who can, theoretically, do things like change the editor. Apparently they have hardly had any email on that list ever)

[08:59:00.0000] <jgraham>
(and they are likely unneeded anyway since one could change the editor by forking the spec. Of course it would only work if people wanted to follow the fork rather than the original. But that is basically an isomorphic problem to getting the people on that list to agree to change the editor)

[09:02:00.0000] <alystair>
haha alright

[09:02:01.0000] <alystair>
there's actually an easteregg on the google.io site

[09:02:02.0000] <alystair>
when you drag the logo it allows you to move the buttons and stuff around as well

[09:02:03.0000] <alystair>
which work as blockers for the balls :)

[09:32:00.0000] <jgraham>
Why doesn't input type=email allow one to set the IDL attribute to a unicode string and have it converted to punycode, or something?

[09:34:00.0000] <jgraham>
Or even better, have it stored as unicode and converted to punycode for submission

[10:08:00.0000] <alystair>
http://www.google.com/events/io/2011/index.html <- live streaming from event now

[10:16:00.0000] <Rik`>
alystair: can't get it to work from France

[10:16:01.0000] <alystair>
streaming movie rental

[10:16:02.0000] <alystair>
really? lame

[10:16:03.0000] <alystair>
neither live stream?

[10:18:00.0000] <alystair>
http://www.youtube.com/watch?v=RhmWg7Lp0i0 direct link :S

[10:19:00.0000] <Rik`>
yeah, it says the video is not available

[11:40:00.0000] <AryehGregor>
Reproducible crash for me in Opera 11.10 on Ubuntu 10.10: go to http://aryeh.name/spec/editcommands/autoimplementation.html#insertunorderedlist, click "Run tests" under "insertorderedlist".  Can anyone else reproduce?

[11:40:01.0000] <AryehGregor>
(It seems I have an amazing talent for finding crash bugs, especially in Opera)

[11:41:00.0000] <AryehGregor>
(it really makes me appreciate Chrome and IE, where you can just reload the tab)

[11:45:00.0000] <reggna>
AryehGregor: I was just about to say that the test worked for me, but then Opera crashed. :P

[11:45:01.0000] <reggna>
AryehGregor: So, reproduced.

[11:52:00.0000] <gsnedders>
AryehGregor, reggna: submit a crash log? what email?

[11:52:01.0000] <AryehGregor>
gsnedders, I didn't get prompted to submit a crash log.

[11:52:02.0000] <AryehGregor>
Can you reproduce?

[11:52:03.0000] <gsnedders>
AryehGregor: Not tried

[11:56:00.0000] <gsnedders>
AryehGregor: Yeah, repro with no crash dialog

[11:56:01.0000] <AryehGregor>
k.

[11:57:00.0000] <AryehGregor>
Please tell me if you figure out what the problem is so I can update the page.

[11:59:00.0000] <gsnedders>
/me is downloading more recent debug build…

[12:00:00.0000] <gsnedders>
/me wants quicker internets

[12:03:00.0000] <gsnedders>
AryehGregor: Trying to clear a selection is failing to remove an element not in the range.

[12:03:01.0000] <AryehGregor>
What do you mean?  Selection.removeAllRanges() is what's crashing?

[12:03:02.0000] <gsnedders>
Yeah.

[12:04:00.0000] <gsnedders>
Because there's something in the range that isn't in the range.

[12:04:01.0000] <AryehGregor>
Oh.

[12:05:00.0000] <gsnedders>
/me accidentally opens link in his main Opera install

[12:05:01.0000] <gsnedders>
woops.

[12:09:00.0000] <zewt>
heh, the only time I've ever really found browser themes to be useful is when debugging a browser side-by-side with my real browser--to make it easy to remember which is which

[12:10:00.0000] <gsnedders>
I just idlely right clicked -> open link

[12:10:01.0000] <AryehGregor>
It doesn't crash when you just open the link, though, right?

[12:10:02.0000] <gsnedders>
There's a reason why I know quite a lot of browser people who have a browser they don't work on as their main browser

[12:10:03.0000] <gsnedders>
AryehGregor: Right, but close enough to not be nice.

[12:10:04.0000] <AryehGregor>
Ah, okay.

[12:11:00.0000] <AryehGregor>
Of course, browsers usually do pretty well these days on restoring after a crash.

[12:11:01.0000] <zewt>
at least session restoration has made browser crashes marginally less annoying than they used to be :)

[12:11:02.0000] <zewt>
let's say the same thing; ready, go

[12:12:00.0000] <gsnedders>
AryehGregor: Yeah, it's pretty much fine, just means restarting browser, which when you have far too many tabs open can take a bit

[12:14:00.0000] <zewt>
i have something like 100 right now :|

[12:17:00.0000] <erlehmann>
zewt, gsnedders, on firefox i use bar tab, it only loads tabs that are accessed.

[12:18:00.0000] <erlehmann>
but still i once had a crash where the restart would crash again … the session restore tab would restore a session restore tab!

[12:18:01.0000] <erlehmann>
it was session restore tabs all the way down.

[12:19:00.0000] <zewt>
ff4 seems to try to preferentially restore tabs when they're accessed when loading a session, though i find the end result is just slower

[12:19:01.0000] <erlehmann>
bar tab then

[12:20:00.0000] <erlehmann>
like, built-in?

[12:20:01.0000] <zewt>
standard ff with a vertical tab addon (doesn't change behavior)

[12:20:02.0000] <Ms2ger>
Built-in, yes

[12:21:00.0000] <erlehmann>
fine :)

[12:32:00.0000] <gsnedders>
AryehGregor: http://pastebin.com/yjDymymq is a more minimal copy of the inline script

[12:33:00.0000] <AryehGregor>
gsnedders, okay, thanks.

[12:33:01.0000] <gsnedders>
/me doesn't have time to take it further

[12:35:00.0000] <AryehGregor>
Meaning you don't have time to reduce it further, but you'll still make sure that the crash bug is fixed, because this might be happening on real sites?

[12:36:00.0000] <AryehGregor>
/me isn't sure whether implementers prioritize crash bugs as all super-high priority or what

[12:39:00.0000] <jamesr>
AryehGregor: many crashes like this tend to have security implications and are prioritized pretty high because of that

[12:39:01.0000] <jamesr>
speaking of, if you find any more in webkit i'd appreciate if you'd file a security bug about it first and not post the repro in public IRC channels :). i think other vendors would appreciate the same

[12:40:00.0000] <AryehGregor>
jamesr, hmm, really?  Okay.  Didn't realize they were that likely to have security implications.  I don't think I've found any crashes in WebKit lately.

[12:40:01.0000] <jamesr>
not all will, but many will

[12:40:02.0000] <AryehGregor>
I found one in Firefox a day or two ago, but no one else could reproduce it, so I figured it wasn't worth reporting.

[12:41:00.0000] <AryehGregor>
I've found a few in Opera that I mentioned here, and no one from Opera said they'd prefer it privately.

[12:41:01.0000] <jamesr>
if it's something like a double free or use after free then the crash might not be reliable

[12:41:02.0000] <jamesr>
i'm not familiar with opera's policies

[12:44:00.0000] <erlehmann>
jamesr, isn't full disclosure standard?

[12:44:01.0000] <erlehmann>
except with webkit?

[12:44:02.0000] <jamesr>
what? no

[12:44:03.0000] <jamesr>
you don't just 0-day everyone

[12:44:04.0000] <AryehGregor>
I don't think anyone appreciates full disclosure without first at least informing the vendor.

[12:45:00.0000] <jamesr>
people argue about details but the IMO reasonable behavior is to disclose to vendor, give them a chance to patch users, then disclose publicly

[12:46:00.0000] <erlehmann>
I once published a short script crashing a chat client and it made people angry and they fixed the bug. But, it made people angry :>

[12:46:01.0000] <erlehmann>
Otherwise, I have no idea how bugs should be handled.

[12:51:00.0000] <AryehGregor>
The annoying thing is it's considerably more effort for me to actually file a bug report, and the response is likely to be considerably longer, compared to just saying it here.  But I guess I'll be more careful in the future.

[12:51:01.0000] <jamesr>
why is it considerably more effort?

[12:52:00.0000] <gsnedders>
jamesr: this almost certainly isn't exploitable, at least

[12:52:01.0000] <AryehGregor>
Because over here I can just type one line in a chat, and someone will probably answer in a few minutes.  To file a bug I have to make a permanent link, go through a bunch of forms, and then wait who knows how long for a response.

[12:53:00.0000] <gsnedders>
My normal approach is to file a bug and poke people on IRC

[12:54:00.0000] <gsnedders>
AryehGregor: Basically the policy for things that might be security issues is to treat them as security issues until proven otherwise.

[12:55:00.0000] <gsnedders>
Whether you treat all crash bugs like that or not is a good question

[12:55:01.0000] <AryehGregor>
I've been assuming they don't need to be treated like that.

[12:56:00.0000] <gsnedders>
I have no idea what our policy is :)

[12:59:00.0000] <gsnedders>
All the range crash bugs you've found have just been null-pointer dereferences, nothing interesting from a security POV

[13:01:00.0000] <AryehGregor>
Generally the bugs I find are in pages I'm rapidly changing anyway, and in a few hours it won't be reproducible from the instructions I gave in the chat.

[13:02:00.0000] <AryehGregor>
(since it's not very useful for me to have my tests crash)

[13:02:01.0000] <AryehGregor>
So I'm not going to worry too much.

[13:04:00.0000] <gsnedders>
AryehGregor: Uh, I think there may well be more than one crash bug there.

[13:04:01.0000] <AryehGregor>
Interesting.

[13:05:00.0000] <gsnedders>
AryehGregor: Like that reduced script gives an entirely different crash

[13:06:00.0000] <AryehGregor>
Kind of weird for me to hit two crashes at once.

[13:20:00.0000] <jgraham>
Not really if that code happens to be buggy

[13:30:00.0000] <gsnedders>
AryehGregor: Back to looking at it after all

[13:42:00.0000] <gsnedders>
AryehGregor: http://pastebin.com/Uxv2Nczw

[13:43:00.0000] <AryehGregor>
Interesting.

[13:55:00.0000] <Philip`>
"* Philip` wonders if anyone has actually got such attacks working in practice" - turns out they have - http://www.contextis.com/resources/blog/webgl/

[13:56:00.0000] <Philip`>
/me wonders if it's possible without using WebGL, based on the performance of 2D canvas operations

[13:58:00.0000] <jamesr>
Philip`: that'd be pretty tricky

[13:59:00.0000] <Philip`>
"pretty tricky" sounds different to "impossible" :-)

[13:59:01.0000] <jamesr>
well, side channel attacks are always crazy

[14:00:00.0000] <jamesr>
but to make this attack work you need the draw time to vary as much as possible based on the value of the pixels

[14:00:01.0000] <jamesr>
and that's hard to do with the canvas2d ops

[14:01:00.0000] <jamesr>
much easier if you can write your own shader

[14:01:01.0000] <jamesr>
this attack also depends a lot on how the graphics driver+card evaluate shaders

[14:07:00.0000] <AryehGregor>
Ugh.  br elements are a huge pain in the neck.

[14:07:01.0000] <erlehmann>
br { display: none; }

[14:07:02.0000] <erlehmann>
:3

[15:19:00.0000] <wilhelm_>
Will those who cannot live with the upvoted licenses now commit seppuku?

[15:21:00.0000] <TabAtkins>
If only they were so honorable.

[15:22:00.0000] <TabAtkins>
I love writing about character references in HTML.  &amp;amp; all over the place.

[15:37:00.0000] <AryehGregor>
wilhelm_, why should they?  Is the W3C going to adopt them?

[15:37:01.0000] <AryehGregor>
I mean, it was a non-binding survey, wasn't it?

[15:40:00.0000] <jgraham>
So you aren't bound by your statement that you couldn't live with it?

[15:40:01.0000] <wilhelm_>
Well, then a different subset of the surveyed should commit seppuku. Unless they were lying, and can live with it.

[15:41:00.0000] <AryehGregor>
No, I'm saying you should only expect anyone to commit seppuku once a particular license is actually adopted.

[15:41:01.0000] <wilhelm_>
True.

[15:43:00.0000] <Philip`>
Presumably people who can't live with any non-forking licences also can't live with the spec's current non-forking licence, in which case they wouldn't be alive to object to it even if it'll change later

[16:22:00.0000] <AryehGregor>
The per-organization breakdown of the license survey is interesting.

[16:23:00.0000] <AryehGregor>
Implementers and unaffiliated people are overwhelmingly in favor of some type of free license.

[16:24:00.0000] <AryehGregor>
But if you do a count by organization and ignore unaffiliated people, non-free licenses would win, because the non-implementer organizations lean strongly against free licenses.

[16:25:00.0000] <AryehGregor>
In fact, only one non-implementer organization (Intel) said that it couldn't live with option 3, while eight non-implementer organizations said they preferred or could live with it.

[16:25:01.0000] <AryehGregor>
This pattern is interesting, because the AC is made up almost entirely of non-implementer organizations, and unaffiliated people get no say.

[16:26:00.0000] <AryehGregor>
And, of course, it voted against free licenses.

[16:26:01.0000] <TabAtkins>
I always find it interseting that there is such a disconnect between the orgs that actually have a stake in the tech and those that don't.

[16:27:00.0000] <AryehGregor>
It suggests to me that perhaps implementers and individuals are involved in the W3C because they have a stake in the issue and don't care so much about the W3C itself, while non-implementer organizations are more likely to be interested in influencing the standards through the W3C, and so would be unhappy with the W3C losing power.

[16:27:01.0000] <AryehGregor>
Implementers will control the specs anyway, and unaffiliated individuals have no say anyway, so it doesn't make a big difference to them whether the specs are edited at the W3C or someplace else.

[16:28:00.0000] <AryehGregor>
Except Microsoft.  Who knows who made Microsoft's decision and why.

[16:28:01.0000] <AryehGregor>
Of course, the W3C is dependent on having lots of members that don't have a big stake in things, because that's the only way it can get enough membership dues to support its bureaucracy.

[16:29:00.0000] <AryehGregor>
So I don't think the W3C is likely to be fixable, in the end.

[16:29:01.0000] <AryehGregor>
To fix it, you'd have to give the power to the people who have an actual stake in things, and that would disenfranchise the other members.

[16:29:02.0000] <AryehGregor>
Who would either not permit it, or leave and take away the W3C's funding.

[16:30:00.0000] <AryehGregor>
I guess the implementers aren't going to actually leave the W3C anytime soon, though, since the job it does isn't sufficiently bad to warrant the trouble, so we're stuck with the status quo.

[16:45:00.0000] <Hixie>
jgraham: yt? (or any other opera peeps)

[16:47:00.0000] <wilhelm_>
\o


2011-05-11
[17:08:00.0000] <karlcow>
AryehGregor: I didn't understand the breakdown by organizations. Because basically it is not really the voice of the organization but the voice of people inside the organization which is slightly different.

[17:08:01.0000] <karlcow>
I guess the AC vote is the real breakdown by organizations

[18:29:00.0000] <erlehmann>
AryehGregor, any rationale why non-implementors do not like free licenses in general?

[18:30:00.0000] <erlehmann>
/me just doesn't get it

[18:34:00.0000] <TabAtkins>
erlehmann: Based on the responses that were given, it's mostly because they dont' understand copyright law or history.

[18:34:01.0000] <TabAtkins>
It's possible that some of the people who voted but didn't give a response have some reasonable objections, but nobody who actually gave a response did.

[18:35:00.0000] <erlehmann>
how unfortunate. but based on my experience regarding voting on technical issues, it seems plausible.

[18:37:00.0000] <TabAtkins>
For example, several people seem to believe that by restricting forking with copyright they can actually prevent forking, which is obviously incorrect (it just makes it more difficult, as we saw with HTML5).

[18:38:00.0000] <TabAtkins>
Others seem to believe that the mere presence of a fork is automatically harmful, despite the fact that forks are only as strong as the implementors who support them, as evidenced by the multitude of existing forks that are completely irrelevant.

[18:38:01.0000] <TabAtkins>
Finally, one crazy person believes that forking the HTML spec may allow dictators to oppress their populace more effectively.  I... I just don't know what that one's about.

[18:41:00.0000] <erlehmann>
Because, obviously, autocrats will respect copyright.

[18:41:01.0000] <TabAtkins>
Yes, that's certainly part of the reason why that objection is crazy.

[18:43:00.0000] <erlehmann>
There should be some “civilized” form to say that something is wrong in an entirely wrong way.

[18:43:01.0000] <TabAtkins>
"You're not even wrong."\

[18:43:02.0000] <erlehmann>
Oh, I may use that :3

[18:43:03.0000] <Hixie>
ah, pauli

[18:44:00.0000] <TabAtkins>
Yus.

[18:44:01.0000] <Hixie>
not entirely apropos here, but yeah

[18:44:02.0000] <Hixie>
i prefer "fractally wrong" for this kind of thing

[18:44:03.0000] <Hixie>
wrong at every level

[18:48:00.0000] <othermaciej>
those with Member access should look at the survey the Team actually posted to the AC

[18:50:00.0000] <TabAtkins>
Ooh, where?

[18:51:00.0000] <TabAtkins>
Unrelated: Yo, people in Japan, I've lost the super-convenient site for getting info/booking for the shinkansen.  Any help?

[18:59:00.0000] <stefan-_>
http://www.youtube.com/watch?v=TXtOv0QlYao

[19:01:00.0000] <TabAtkins>
Japanese people: found it, it was hyperdia.com

[01:34:00.0000] <hsivonen>
does anyone happen to have a demo with a a long WebM file for testing if seeking works over HTTP Range requests?

[01:34:01.0000] <hsivonen>
it's supposed to work, right?

[01:39:00.0000] <hsivonen>
testing with http://lachy.id.au/log/2010/05/webm seems to work if Firefox and Opera

[01:40:00.0000] <hsivonen>
also Chrome 12

[01:40:01.0000] <hsivonen>
not in Chromium 11

[01:56:00.0000] <hsivonen>
what's the deal with it appearing that Range request-based seeking is in Chrome 12 but not in Chromium 11. Were they really this late to add it, am I testing wrong or do Chrome and Chromium have very different video code paths?

[01:56:01.0000] <hsivonen>
I tested Google-provided Chrome and Canonical-provided Chromium

[01:58:00.0000] <nessy>
maybe ask over in #chrome channel?

[01:58:01.0000] <hsivonen>
nessy: does the result that Firefox and Opera support Range-based seeking seem correct to you?

[01:59:00.0000] <nessy>
I know they do

[01:59:01.0000] <hsivonen>
nessy: ok. thanks

[01:59:02.0000] <nessy>
and yes, from what you are describing it seems chromium doesn't

[01:59:03.0000] <nessy>
which I find strange

[01:59:04.0000] <nessy>
like you :-)

[02:00:00.0000] <hsivonen>
I just tried Chrome 11 on Mac

[02:01:00.0000] <hsivonen>
it seems to support range-based seeking

[02:05:00.0000] <nessy>
(ups, channel is #chromium)

[02:36:00.0000] <hsivonen>
nessy: thanks for offending people about what is "Web content". Now I'm not the only one. :-) See also http://hsivonen.iki.fi/web-stack/

[02:37:00.0000] <nessy>
hsivonen: I was hoping there were some people that support my view :-)

[02:37:01.0000] <nessy>
I was very amused at that discussion

[02:39:00.0000] <hsivonen>
folks at the W3C can be pretty sensitive about getting called on doing stuff that's not Webby in the sense of being part of the interoperable platform implemented in browsers

[02:43:00.0000] <doublec>
I'd be surprised if chromium didn't support range requests with video

[02:44:00.0000] <hsivonen>
nessy: seen this? http://schepers.cc/webmandering

[02:45:00.0000] <hsivonen>
doublec: I'm just guessing here, but it's plausible that getting the index data out of WebM into the browser requires some ffmpeg API that's not in the system ffmpeg

[02:45:01.0000] <doublec>
hsivonen: ah,right. possibly.

[02:45:02.0000] <hsivonen>
doublec: based on how the Chromium packaging in Ubuntu is structured, it seems that ffmpeg is still involved

[02:46:00.0000] <hsivonen>
I wonder if they'll drop ffmpeg and use the Xiph libs and libvpx directly when they drop H.264

[02:47:00.0000] <doublec>
I think ffmpeg's webm decoder is faster than libvpx

[02:47:01.0000] <doublec>
or at least, that was the claim at one point

[02:47:02.0000] <doublec>
http://x264dev.multimedia.cx/archives/499

[02:47:03.0000] <hsivonen>
doublec: is Chrome using the ffmpeg VP8 decoder or libvpx-wrapped-in-ffmpeg?

[02:49:00.0000] <hsivonen>
wow. Dark Shikari's blog has been really quiet for a year now

[02:49:01.0000] <doublec>
hsivonen: there's a post in april

[02:50:00.0000] <doublec>
hsivonen: or february - depending on what date format he's using

[02:50:01.0000] <hsivonen>
doublec: yeah, but that one doesn't say much

[02:50:02.0000] <doublec>
true

[02:50:03.0000] <doublec>
maybe he's working on some super secret project

[03:02:00.0000] <hsivonen>
doublec: I was wishing Dark Shikari was working on a VP8 encoder

[03:02:01.0000] <hsivonen>
doublec: but, curiously, he broke the news that another person was

[03:13:00.0000] <hsivonen>
I wonder why the git and release activity around the WebM QuickTime Component has ceased

[03:23:00.0000] <Lachy>
If Microsoft really does by Skype, then I wonder what will happen to the support for VP8 currently in Skype 5?

[03:26:00.0000] <jgraham>
It will go the same way as the Linux client?

[03:27:00.0000] <hsivonen>
jgraham: which way is that?

[03:27:01.0000] <jgraham>
Well, I can't imagine that Microsoft buying skype is going to *improve* the already third-rate linux support

[03:28:00.0000] <jgraham>
(the latest download for linux is a version of 2 labelled beta)

[03:29:00.0000] <jgraham>
(although cynical people might point out that 2-anything is a win over 5-anything)

[03:29:01.0000] <hsivonen>
jgraham: I thought the 2.x Mac version was first-rate, Linux was second-rate and Windows was third-rate

[03:29:02.0000] <Lachy>
the Mac Skype 5 sucks. 2.8 is still superior for usability.

[03:29:03.0000] <jgraham>
Well I haven't really used it on windows much

[03:30:00.0000] <hsivonen>
jgraham: at least the Mac and Linux versions don't stick junk into Firefox

[03:30:01.0000] <jgraham>
Well that kind of behaviour seems to be more tolerated on Windows in general

[03:30:02.0000] <hsivonen>
jgraham: unfortunately, yes

[03:41:00.0000] <hsivonen>
jgraham: if they bought Skype for the userbase, it would be silly to drop support for various platforms, since availability on pretty much all platforms is what drives the network effects

[03:41:01.0000] <jgraham>
hsivonen: They would be insane to drop Mac for that reason

[03:42:00.0000] <jgraham>
But Linux is already pretty much unsupported

[03:42:01.0000] <jgraham>
and likely has a negligible fration of the users

[03:44:00.0000] <hsivonen>
jgraham: hard to tell what effect dropping Linux support would have on userbase

[03:47:00.0000] <hsivonen>
jgraham: http://www.omgubuntu.co.uk/2011/05/microsoft-will-invest-and-support-skype-on-linux/

[03:48:00.0000] <hsivonen>
anyway, it's pretty clear that the world needs VOIP that's not tied to a particular app vendor

[03:48:01.0000] <hsivonen>
too bad SIP sucks

[03:48:02.0000] <hsivonen>
what happened to libjingle? why didn't it go anywhere?

[03:48:03.0000] <jgraham>
Hard to tell what "non-Microsoft platforms" menas

[03:49:00.0000] <jgraham>
I mean they won't drop OSX support

[03:49:01.0000] <jgraham>
That would be insanity

[03:51:00.0000] <hsivonen>
one of the big problems with getting cross-vendor VOIP is that if you leave e.g. the mobile part to traditional vendors in that space, they will want to use a proprietary codec and will let carriers impose ridiculous restrictions

[03:52:00.0000] <hsivonen>
the other big problem is addressing

[03:53:00.0000] <hsivonen>
do you require a phone number (what about desktops?), do you require an XMPP ID (how you make people get one)?

[04:30:00.0000] <nessy>
hsivonen: those graphics from before make for a fun read :-) not that I really care: for every purpose you can draw something else

[07:59:00.0000] <jgraham>
Why is HTMLPropertiesCollection.namedItem a caller and a getter?

[08:06:00.0000] <AryehGregor>
erlehmann, although you aren't here anymore: I'd hazard a guess that implementers like free licenses because it means the W3C has no control over the specs in the end, which means the implementers will have de facto control.  Non-implementers will have no control over the spec outside the W3C.  Also, one or two of the implementers are ideologically committed to open-source type stuff, which practically no companies are.

[08:07:00.0000] <AryehGregor>
What's this survey that the Team submitted to the AC that Maciej mentioned?

[08:08:00.0000] <AryehGregor>
Hmm, visited links on this W3C page are lighter than unvisited links.  How incredibly confusing.

[08:09:00.0000] <AryehGregor>
Oh, is this it?  http://www.w3.org/2002/09/wbs/33280/doclic201105/

[08:09:01.0000] <Lachy>
yes

[08:12:00.0000] <AryehGregor>
Oh, the Intel AC rep is Wayne Carr?  Like, the guy who said we shouldn't adopt free licenses because it will allow dictators to suppress their citizens' Internet access?  That's a shame.

[08:12:01.0000] <Lachy>
wtf?

[08:13:00.0000] <Lachy>
oh, are you referring to his comments about governements forking the spec and stuff?

[08:13:01.0000] <AryehGregor>
Yeah.

[08:14:00.0000] <Lachy>
oh, yeah. Perhaps he doesn't realise that governements can and do pass crazy laws all the time without forking specs

[08:15:00.0000] <jgraham>
That is one possibility

[08:15:01.0000] <AryehGregor>
Seriously, what stake does Intel have in HTML5 anyway?

[08:15:02.0000] <Philip`>
Pentiums make the web faster, if I remember the adverts

[08:17:00.0000] <AryehGregor>
Then they should have left the W3C when they stopped making Pentiums, surely?

[08:17:01.0000] <jgraham>
There are a large number of Members with no obvious stake in the web

[08:17:02.0000] <jgraham>
]I assume that is why W3C does so many non-Web things

[08:18:00.0000] <AryehGregor>
Which is why it's kind of a puzzle how they get to run the W3C.  Or really it's not, it's because they give the W3C money.

[08:18:01.0000] <AryehGregor>
/me keeps the AC survey results open in a tab to look at occasionally as they progress, although being unable to talk about them publicly is kind of annoying

[08:19:00.0000] <Lachy>
AryehGregor, it's useful to keep such members in the W3C even if they have no obvious stake in current specifications, since a) the W3C gets membership fees from them, and b) such companies with large patent portfolios continue to be bound by the patent policy

[08:19:01.0000] <AryehGregor>
They're only bound by the patent policy for WGs that they're members of.

[08:20:00.0000] <AryehGregor>
But even non-HTMLWG members are voting on the HTML5 license.

[08:20:01.0000] <AryehGregor>
So that part is weak.

[08:20:02.0000] <Lachy>
Intel is a WG member

[08:20:03.0000] <AryehGregor>
I know.

[08:20:04.0000] <AryehGregor>
That's how Wayne Carr answered the HTMLWG survey.

[08:20:05.0000] <AryehGregor>
As for (a), maybe if the W3C were less bureaucratic, it wouldn't need so much money.

[08:21:00.0000] <AryehGregor>
Or maybe implementers would be willing to pay more of the bill if they were the ones that controlled the organization.

[08:21:01.0000] <Lachy>
they need to cover operational costs somehow.

[08:22:00.0000] <AryehGregor>
What's the W3C's budget?  A few tens of millions of dollars, probably?  That would be a pretty small burden if split between Microsoft, Apple, and Google.

[08:22:01.0000] <AryehGregor>
Plus they could get rid of a lot of the operational costs if they didn't have to have decision-making structures independent of implementer consensus.

[08:24:00.0000] <Philip`>
All companies have a stake in the web to the extent that they are heavy users of it and benefit from improvements to the platform - I assume that's largely why Google started Chrome (they're not doing it to sell an OS, they're doing it to drive progress in the technology their business depends on) but other companies that haven't bothered doing their own browser development may have a similar desire for improvements

[08:24:01.0000] <jgraham>
To be fair giving even more control to those with the deepest pockets doesn't sound like a winning move

[08:26:00.0000] <AryehGregor>
It's not about deep pockets, it's about market share.  Mozilla has very shallow pockets compared to Apple or Google, but it has more clout in web standards.

[08:27:00.0000] <AryehGregor>
Look at WebSQL.  Apple+Google+Opera = more money than Microsoft+Mozilla, but nowhere close to enough market share to make it tenable to ignore them, so they lose.

[10:55:00.0000] <TabAtkins_>
lazyirc, what's the correct behavior when a <script> has both a @src and content?  Which is run?

[10:56:00.0000] <gsnedders>
TabAtkins_: @src

[11:00:00.0000] <TabAtkins_>
gsnedders: Cool, thanks.

[11:47:00.0000] <AryehGregor>
Ah, so the Chromebook announcement has finally come.

[11:48:00.0000] <AryehGregor>
Seems there's no firm pricing info.

[11:50:00.0000] <TabAtkins>
"Chromebook" is the most natural-sounding name my wife and I came up with.  Glad they went with it.

[11:59:00.0000] <reggna>
AryehGregor: I think they said $28 per user monthly subscription, for businesses.

[13:35:00.0000] <TabAtkins>
Ooh, we announced ChromeVox too, cool!

[13:35:01.0000] <smaug____>
TabAtkins: what is ChromeVox?

[13:35:02.0000] <TabAtkins>
browser-native screen reader.

[13:36:00.0000] <bga_>
nice

[13:43:00.0000] <jgraham>
Hmm, there seem to be posts about that from before today

[13:43:01.0000] <jgraham>
http://www.rightnow.com/accessibility/uncategorized/accessibility-and-google-chrome-os/

[13:45:00.0000] <jgraham>
Sounds cooler than a web-only device though

[13:46:00.0000] <jgraham>
(I mean I like the vision of a web-only device but I expect it is a few years early yet)

[13:52:00.0000] <TabAtkins>
It works pretty well for me, actually, especially now that I have a desktop to pick up the slack.

[13:53:00.0000] <TabAtkins>
The fact that it's light and has extra-long battery life makes it a good bathroom computer, personally. ^_^

[13:57:00.0000] <jgraham>
Three hundred dollars for a device that is best used on the toilet?

[14:00:00.0000] <TabAtkins>
We also use it in the kitchen, for non-toilet-related purposes.

[14:00:01.0000] <TabAtkins>
Come eat at our house!

[14:02:00.0000] <TabAtkins>
/me needs to learn to use colons better, instead of just overusing dashes.

[14:26:00.0000] <jamesr>
Hixie: i don't fully grok the difference between the os ring and the custom ring apis

[14:29:00.0000] <jamesr>
the difference is that drawCustomRing will not draw a "normal" focus ring if the u-a would normally render one, only a "special" ring?

[14:33:00.0000] <zcorpan>
jamesr: that's my understanding

[14:34:00.0000] <jamesr>
that's very weird

[14:34:01.0000] <zcorpan>
why?

[14:39:00.0000] <cgcardona>
TabAtkins: can I send you a pm?

[14:40:00.0000] <TabAtkins>
Yes, of course.

[15:49:00.0000] <jamesr>
Hixie: around?

[15:49:01.0000] <Hixie>
yo

[15:49:02.0000] <Hixie>
sup

[15:50:00.0000] <jamesr>
what about ctx.strokeStyle="focusRing"; ctx.beginPath(); // build path; ctx.somethingElement = e; ctx.stroke();

[15:51:00.0000] <jamesr>
not sure exactly what to call the element associated with the stroke

[15:52:00.0000] <Hixie>
how do you avoid drawing with the system style if you would rather use your own?

[15:52:01.0000] <jamesr>
that case is a little weirder, but maybe we could define a fallback system for the stroke style so you could say ctx.strokeStyle="systemFocusRing, mystyle"

[15:52:02.0000] <jamesr>
i haven't fully understood why you would want to do that

[15:53:00.0000] <Hixie>
say that what i want is to have the focused menu item be in a bigger font size, or some such

[15:54:00.0000] <Hixie>
actually that's a bad example

[15:54:01.0000] <Hixie>
since you would just draw nothing

[15:54:02.0000] <Hixie>
say that i want to indicate focus by drawing a big arrow

[15:54:03.0000] <jamesr>
but only if the OS wasn't indicating focus itself?

[15:55:00.0000] <Hixie>
how do i do that, while still using the high-constrast focus ring if necessary instead, and while still indicating to the accessibility API that the menu item is the one focused, even though it's next to, not inside, the arrow?

[15:55:01.0000] <Hixie>
(the latter part being needed to make sure the text gets magnified)

[15:56:00.0000] <jamesr>
i think it's the "using the high-contrast focus ring if necessary _instead_" part that i'm hung up on

[15:56:01.0000] <jamesr>
why is it not inaddition to?

[15:56:02.0000] <jamesr>
IOW why not just draw the arrow, then stroke the focus ring?

[15:56:03.0000] <jamesr>
if that gets you a high-contrast focus ring and tells the AX api to do something else, that's fine

[15:56:04.0000] <jamesr>
but i'm not sure why you would want to avoid drawing the arrow in that case

[15:56:05.0000] <Hixie>
fair enough

[15:57:00.0000] <Hixie>
the problem is authors aren't going to bother calling this api if it doesn't give them anything

[15:57:01.0000] <Hixie>
and they don't think of accessibility as anything

[15:57:02.0000] <Hixie>
the idea is to trick the author into using the api for reasons unrelated to accessibility and get accessibility as a side-effect

[15:57:03.0000] <jamesr>
what if they get native looking focus rings? that seems nice

[15:58:00.0000] <Hixie>
most games don't do anything native

[15:58:01.0000] <jamesr>
yeah, but do you expect games to  use this?

[15:58:02.0000] <Hixie>
one can hope

[15:58:03.0000] <Hixie>
the other problem is that if you do it as a style the author has to check the focus of each element

[15:58:04.0000] <Hixie>
instead of just calling the api

[15:59:00.0000] <Hixie>
plus, it means that the focus ring can only ever be a stroke, and not some other kind of indicator

[15:59:01.0000] <Hixie>
basically i don't really see the problem that using a strokeStyle solves

[15:59:02.0000] <jamesr>
what other sort of focus ring could you get using a path as input?

[15:59:03.0000] <jamesr>
other than a stroke + some metadata about the geometry?

[16:00:00.0000] <Hixie>
e.g. the effect used in mac os x preferences to indicate search results

[16:01:00.0000] <jamesr>
you mean the white fuzzy area around the matching element(s)?

[16:01:01.0000] <jamesr>
that effect doesn't change focus

[16:01:02.0000] <Hixie>
no, but you could use that for focus

[16:01:03.0000] <Hixie>
my point is just that we shouldn't close doors unncessarily

[16:01:04.0000] <Hixie>
what's the problem with the method?

[16:10:00.0000] <TabAtkins>
Hixie: I wonder if you should make it clear that a UA which allows you to apply styling directly to WebVTT content (rather than applying to via an HTML page that embeds a <video> with <track>) should just use the selectors directly, rather than doing something weird with ::cue(), as ::cue() is only used to jump from the HTML doc to the embedded WebVTT doc.

[16:11:00.0000] <Hixie>
given that there's no way to associate a style sheet with a webvtt resource directly currently, that seems rather theoretical :-)

[16:13:00.0000] <TabAtkins>
Eh, I think they'll arise.  Providing a user stylesheet for your video player seems reasonable.  Heading off future trouble at no real cost is nice. ^^;

[16:15:00.0000] <TabAtkins>
I'm just thinking about the organization of the section from a layering standpoint.  It should just involve you defining how to map a WebVTT document into an element-tree, and then defining ::cue() as a way to style into the embedded WebVTT doc that <video> has.

[16:16:00.0000] <TabAtkins>
Essentially an editorial change.  I could even suggest text.

[16:17:00.0000] <Hixie>
well if you provide a style sheet for a video, as opposed to a particular track, it seems better to use ::cue

[16:17:01.0000] <Hixie>
that way you can reuse styles from HTML

[16:18:00.0000] <TabAtkins>
It's several characters of unnecessary clutter if you're authoring the stylesheet directly for your player, though.

[16:19:00.0000] <Hixie>
who does that

[16:19:01.0000] <TabAtkins>
Nobody yet, because no players support styling your WebVTT tracks.

[16:20:00.0000] <Hixie>
ping me again when it's a real problem :-P

[16:20:01.0000] <TabAtkins>
Bah.

[16:21:00.0000] <TabAtkins>
You won't be able to straight re-use an HTML stylesheet anyway, if you style the tracks of different videos differently (as the selector will then by necessity involve more stuff before ::cue()).

[16:21:01.0000] <Hixie>
i don't expect anyone to ever write a style sheet for a player that they don't also want to use for the web (for some definition of nobody that is zero plus or minus epsilon)

[16:23:00.0000] <TabAtkins>
Eh, that's easy.  s/}\n/}\n::cue(/ and s/{/){/.

[16:23:01.0000] <Hixie>
exactly

[16:23:02.0000] <Hixie>
so why bother with having two different styles

[16:23:03.0000] <Hixie>
just use the one file for both

[16:24:00.0000] <TabAtkins>
Because it's theoretically impure! ^_^

[16:25:00.0000] <Hixie>
define text/webvtt-css which is text/css plus the transformation you just said applied

[16:25:01.0000] <Hixie>
then it's just a differnet syntax

[16:25:02.0000] <Hixie>
and is theoretically pure

[16:25:03.0000] <TabAtkins>
You're basically reaching into a shadow on the video.  With shadows currently, styling from within the shadow looks slightly different than styling from outside the shadow, in precisely the way I'm saying cue styling should.

[16:25:04.0000] <Hixie>
problem solved

[16:26:00.0000] <Hixie>
man, you and dimitri have been taken hostage by shadow trees and developed stockholm syndrome :-P

[16:26:01.0000] <TabAtkins>
Dude, the platform uses shadows everywhere, in some form or another.

[16:27:00.0000] <Hixie>
if only that were true in an author-visible sense

[16:27:01.0000] <Hixie>
anyway

[16:27:02.0000] <TabAtkins>
It will be once we're done!

[16:27:03.0000] <Hixie>
this is similar to xbl shadow trees, sure

[16:27:04.0000] <Hixie>
i don't think it's similar enough to be important

[16:27:05.0000] <Hixie>
and i think the differences are such that it doesn't require the unfortunate difference in styles that xbl does

[16:28:00.0000] <Hixie>
in particular, it's only ever one level deep

[16:29:00.0000] <Hixie>
also, spec writers trump implementation purity. :-P

[16:29:01.0000] <Hixie>
er

[16:29:02.0000] <Hixie>
theoretical purity

[16:29:03.0000] <erlehmann>
shadow elements!

[16:29:04.0000] <erlehmann>
next we have a shadow spec edited by a shadow working group.

[16:29:05.0000] <TabAtkins>
Aren't we the shadow working group?

[16:30:00.0000] <erlehmann>
oh wait, yes.j

[16:30:01.0000] <erlehmann>
:D

[16:30:02.0000] <Hixie>
no we're the LIGHT working group, silly

[16:30:03.0000] <Hixie>
the w3c group is the shadow group :-P

[16:30:04.0000] <TabAtkins>
And the shadow spec?  You know, the real spec that is used to render the web, but not what authors see unless they look for it.

[16:30:05.0000] <erlehmann>
hehehe

[16:31:00.0000] <erlehmann>
habari goes all the way and just calls the inner circle “cabal” directly.

[16:31:01.0000] <erlehmann>
am i not right, gsnedders? :>

[16:31:02.0000] <TabAtkins>
Well, so do we, though we're joking.

[16:55:00.0000] <gsnedders>
erlehmann: Jokingly. The official name is still the Project Management Committee.

[16:55:01.0000] <erlehmann>
pah. everyone knows committees don't get anything done.

[16:55:02.0000] <erlehmann>
%)

[16:56:00.0000] <gsnedders>
[Insert comment about speed of development drastically slowing down over the past couple of years.]

[16:56:01.0000] <erlehmann>
C is for Conspiracy!


2011-05-12
[21:43:00.0000] <sephr>
Hixie: what'd the reasoning behind using language-XXX class for programming languages? ( http://www.whatwg.org/specs/web-apps/current-work/multipage/text-level-semantics.html#the-code-element )

[21:43:01.0000] <sephr>
that's so ambiguous

[21:43:02.0000] <sephr>
why not use media types?

[21:43:03.0000] <sephr>
s/what'd/what's/

[21:45:00.0000] <sephr>
some programming languages don't have registered media types, but type="application/x-pascal" seems much more appropriate than piggybacking on class

[21:59:00.0000] <Hixie>
sephr: there's no type="" attribute, and the use case isn't important enough to add one just for this

[21:59:01.0000] <Hixie>
sephr: the idea of using class="language-*" is just a suggestion for people who need some mechanism anyway

[21:59:02.0000] <sephr>
sure yeah

[21:59:03.0000] <sephr>
what is the standards legality of x-programming-x-{language}?

[22:00:00.0000] <Hixie>
you mean as a mime type?

[22:00:01.0000] <sephr>
no, as a language code

[22:00:02.0000] <Hixie>
as in lang=""?

[22:00:03.0000] <sephr>
for example, <code lang="x-programming-x-python">

[22:00:04.0000] <sephr>
yeah

[22:00:05.0000] <sephr>
it's valid, but it seems a little wrong to do

[22:00:06.0000] <Hixie>
programming languages aren't the same as natural languages

[22:00:07.0000] <Hixie>
they're orthogonal concepts

[22:00:08.0000] <sephr>
yeah

[22:00:09.0000] <Hixie>
you can have java with french variables, for instance

[22:01:00.0000] <sephr>
then you'd do x-programming-x-java-fr heh

[22:01:01.0000] <sephr>
actually I think you'd start with the fr tag

[22:01:02.0000] <Hixie>
no better than class="language-java", except for being more verbose and being of dubious validity :-)

[22:02:00.0000] <sephr>
I wish you didn't have to put x- before every single subtag

[22:02:01.0000] <sephr>
if you start the first tag off with x-

[22:02:02.0000] <Hixie>
it's supposed to remind you that you're doing something bad :-)

[22:02:03.0000] <sephr>
heh

[22:02:04.0000] <sephr>
Hixie: oh btw, this is a little off-topic, but what are your thoughts on stripping x- internally?

[22:03:00.0000] <sephr>
for localization packages

[22:03:01.0000] <Hixie>
hm?

[22:03:02.0000] <sephr>
like en-US-x-Hixie and en-US-Hixie being the same

[22:03:03.0000] <Hixie>
wouldn't that violate the rules of the language tag processing model?

[22:04:00.0000] <sephr>
I know, but if x-Hixie is ever standardized, would it be reasonable to assume it'd be the same as x-Hixie or do you think it would change?

[22:04:01.0000] <Hixie>
it'd never be standardised

[22:04:02.0000] <sephr>
I strip the x-s in my l10n.js lib (https://github.com/eligrey/l10n.js)

[22:04:03.0000] <sephr>
if I put enough money behind it I'm sure you could get it standardized ;)

[22:05:00.0000] <sephr>
just formalize the spec more and be a little more verbose

[22:05:01.0000] <Hixie>
if a subtag is ever usefully standardised, the usage of the experimental subtag would be dwarfed by the usage of the official subtag, such that there'd be no reason to care about the experimental one

[22:05:02.0000] <Hixie>
anyway

[22:05:03.0000] <Hixie>
it seems clearly in violation of the rules and to be missing the point

[22:05:04.0000] <Hixie>
but you do what you like :-)

[22:05:05.0000] <sephr>
yeah I think I'll stop stipping the private use tags

[22:06:00.0000] <sephr>
if only we had a prog top tag

[22:07:00.0000] <sephr>
(was unrelated to the other message)

[22:55:00.0000] <heycam>
does CSS define whether text decorations are drawn under or over text?

[22:55:01.0000] <Hixie>
CSS 2.1 Appendix E would be where that would be defined

[22:55:02.0000] <Hixie>
if it's defined

[22:56:00.0000] <heycam>
/me takes a look

[22:56:01.0000] <heycam>
it does, thanks Hixie

[22:57:00.0000] <heycam>
and in an order consistent with SVG text, too. happy day. :)

[23:02:00.0000] <Hixie>
well that's lucky

[02:28:00.0000] <MikeSmith>
hsivonen: I'm reading http://hsivonen.iki.fi/aria-html5-bis/ while working on the ARIA schema updates, and I'm wondering if you ever got responses to the comments and questions you posted to the PFWG comments list

[02:28:01.0000] <MikeSmith>
e.g, http://lists.w3.org/Archives/Public/public-pfwg-comments/2008JanMar/0043.html

[02:28:02.0000] <MikeSmith>
about whitespace trimming

[02:29:00.0000] <MikeSmith>
jgraham: same question for you

[02:29:01.0000] <MikeSmith>
about aria-level

[02:39:00.0000] <jgraham>
MikeSmith: I can't find any evidence I got responses to those specific comments although I did to some other ones. But I may just be missing something

[02:46:00.0000] <AugustoF>
Sup

[02:49:00.0000] <hsivonen>
MikeSmith: there were some responses. I still suggest implementing the ARIA datatypes as HTML5 microsyntaxes rather than XSD datatypes

[02:49:01.0000] <MikeSmith>
jgraham: well, frankly, they should have responded to you directly in some way, with a public record of the response

[02:49:02.0000] <AugustoF>
I'm working in a project for a video social network in html5, someone aqui working with Video conferencing or peer-to-peer communication?

[02:49:03.0000] <MikeSmith>
hsivonen: OK

[02:49:04.0000] <hsivonen>
I still don't believe anyone really wants the XSD behaviors in a browser

[02:49:05.0000] <AugustoF>
here*

[02:49:06.0000] <MikeSmith>
yeah, I tend to agree with you there

[02:50:00.0000] <MikeSmith>
hsivonen: do you recall where you got the responses?

[02:50:01.0000] <MikeSmith>
e.g., was it private e-mail, or archived on a list

[02:50:02.0000] <MikeSmith>
and if so, which list?

[02:51:00.0000] <payman>
AugustoF: Ask your question and find out?

[02:51:01.0000] <MikeSmith>
jgraham: I am not sure but I believe it's a requirement that LC comments have to be publicly archived somewhere

[02:52:00.0000] <MikeSmith>
it is definitely a requirement that all LC comments must be responded to

[02:52:01.0000] <MikeSmith>
but even if your comments were not LC comments, the spirit of the process at least requires some formal response

[02:53:00.0000] <AugustoF>
payman I don't have just one question, btw I'm searching people to working in my project

[02:53:01.0000] <jgraham>
I think those were maybe not LC comments?

[02:53:02.0000] <jgraham>
I got some responses to some LC comments

[02:53:03.0000] <jgraham>
But nothing abour aria-level

[02:55:00.0000] <hsivonen>
MikeSmith: I think the responses were in their LC comment tracking app

[02:58:00.0000] <MikeSmith>
hsivonen: … which I think there is no public facet of…

[02:58:01.0000] <MikeSmith>
but I will check

[02:59:00.0000] <MikeSmith>
if they are using Dom's comment-tracker app, I am pretty sure it has a way to expose a public view while keeping some fields private to the WG

[02:59:01.0000] <MikeSmith>
jgraham: OK

[03:02:00.0000] <Facetalk>
Would anyone be interested in working on a project for make a social video network made ??partly in html5?

[03:02:01.0000] <MikeSmith>
hsivonen, jgraham : the specific problem with aria-level is that it's now mentioned in the HTML5 spec

[03:02:02.0000] <MikeSmith>
http://dev.w3.org/html5/spec/content-models.html#table-aria-strong

[03:02:03.0000] <MikeSmith>
for hgroup

[03:02:04.0000] <MikeSmith>
as is the "heading" role

[03:02:05.0000] <MikeSmith>
and, by design, neither aria-level nor the "heading" role are valid in the validator.nu ARIA schema

[03:03:00.0000] <MikeSmith>
hsivonen, jgraham: and so I would like to know what response if any PFWG gave to you about your comments and questions on those, and on any other ARIA features which are by design not supported in the validator.nu ARIA schema

[04:34:00.0000] <zcorpan>
MikeSmith: you're going full frontal willful violation against ARIA?

[04:35:00.0000] <zcorpan>
MikeSmith: think of the blind people!

[04:35:01.0000] <MikeSmith>
zcorpan: nothing like that

[04:37:00.0000] <zcorpan>
MikeSmith: only partial willful violation?

[04:38:00.0000] <MikeSmith_>
if, after reviewing the patch and seeing whether PFWG made changes to address his comments, he agrees that the schema needs to be changed, we can do it then

[04:38:01.0000] <MikeSmith_>
and/or we file HTML5 spec bugs to not require those attiributes

[04:38:02.0000] <MikeSmith_>
which actually, I think the spec may not at this point

[04:39:00.0000] <MikeSmith_>
in the case of aria-level and role=heading

[04:39:01.0000] <MikeSmith>
I thought it did when I first started putting the patch together but it seems now that the spec may not actually be requiring them

[04:45:00.0000] <jgraham>
/me doesn't entirely like the words "MikeSmith" and "full frontal" appearing in the same sentence

[04:46:00.0000] <MikeSmith>
heh


2011-05-16
[01:07:00.0000] <krijnh>
<--

[01:07:01.0000] <krijnh>
<-- back even

[01:38:00.0000] <zcorpan>
LC seems like even more bureaucracy

[02:23:00.0000] <roc>
U+2028/2029 are good for causing crashes in some platform text shapers too

[02:35:00.0000] <b4z81>
hi

[08:12:00.0000] <hsivonen>
does someone maintain a summary of Web Socket changes since -75?

[08:14:00.0000] <zcorpan>
-75?

[08:14:01.0000] <hsivonen>
zcorpan: what was the last one that was basically Hixie's creation?

[08:15:00.0000] <hsivonen>
was it -76?

[08:15:01.0000] <zcorpan>
yeah

[08:15:02.0000] <hsivonen>
I can't remember how much IETFness was in 76 vs. 75

[08:15:03.0000] <zcorpan>
actually hixie's latest is called "-latest" and didn't go into ietf

[08:15:04.0000] <hsivonen>
-latest sounds more Living than numbered snapshots :-)

[08:16:00.0000] <zcorpan>
which had changed framing and a few other fixes (subprotocol negotiation comes to mind)

[08:16:01.0000] <zcorpan>
but -76 was what got implemented, basically

[08:16:02.0000] <hsivonen>
ok, so is there a summary of the delta between -76 and whatever it is that's being implemented now?

[08:17:00.0000] <zcorpan>
(opera has a few things from -latest that we had whined about and implemented before hixie got around to fixing the spec)

[08:17:01.0000] <zcorpan>
not that i'm aware of

[08:17:02.0000] <zcorpan>
i would summarize it as follows: everything is changed

[08:18:00.0000] <hsivonen>
zcorpan: ok. thanks.

[08:18:01.0000] <jgraham>
That's what I was going to say :)

[08:18:02.0000] <jgraham>
It is basically unrecognisable

[08:18:03.0000] <hsivonen>
zcorpan: did the IETF add or remove features in addition to changing how the old features mapped to bits on the wire?

[08:19:00.0000] <zcorpan>
added "extensibility", binary support, compression support

[08:19:01.0000] <zcorpan>
actually i don't recall the state of compression

[08:19:02.0000] <zcorpan>
might be taken out currently

[08:20:00.0000] <zcorpan>
also made lots of details undefined

[08:21:00.0000] <zcorpan>
like error handling

[08:21:01.0000] <zcorpan>
see http://www.ietf.org/mail-archive/web/hybi/current/msg07063.html

[08:24:00.0000] <hsivonen>
zcorpan: leaving error handling details undefined is seriously uncool. Sad to learn that that happened. :-(

[08:24:01.0000] <hsivonen>
zcorpan: what does extensibility do?

[08:25:00.0000] <zcorpan>
hsivonen: the framing has reserved bits for anyone to claim special behavior for, aiui

[08:25:01.0000] <zcorpan>
hsivonen: and there's a header to enable the extension or something

[08:25:02.0000] <zcorpan>
although extensions do not need to use the reserved bits (e.g. compression doesn't)

[08:27:00.0000] <zcorpan>
hsivonen: please complain on hybi about undefined error handling

[08:27:01.0000] <zcorpan>
hsivonen: as far as i can tell everyone else on hybi seems to think it's cool

[08:27:02.0000] <zcorpan>
more or less

[08:32:00.0000] <zcorpan>
reminds me that i still need to review the newest spec changes

[08:36:00.0000] <zcorpan>
hsivonen: oh also close frames have status codes

[08:52:00.0000] <hsivonen>
/me tries not to get involved in hybi

[08:53:00.0000] <zcorpan>
hsivonen: i don't blame you :-)

[09:16:00.0000] <Workshiva>
zcorpan: But I hope someone is getting involved, so it doesn't just run wild

[09:22:00.0000] <jgraham>
Workshiva: That policy failed

[09:23:00.0000] <jgraham>
AFAICT the only browser people involve are Ian Fette from Google and Patrick McManus from Mozilla

[09:24:00.0000] <jgraham>
Notably these are not the people who have been involved with WHATWG / recent W3C work

[09:30:00.0000] <Workshiva>
So the plan is just to hope it doesn't run too wild? :)

[09:31:00.0000] <jgraham>
I don't think ther is a plan

[09:31:01.0000] <jgraham>
+i

[09:32:00.0000] <zcorpan>
yeah i don't know what to do really when it comes to updating our impl

[09:32:01.0000] <zcorpan>
i guess i will need to reverse engineer mozilla and chrome

[09:33:00.0000] <zcorpan>
yay for having a spec

[09:35:00.0000] <zcorpan>
i also hope somebody will push for simplifying the extension mechanism

[09:36:00.0000] <zcorpan>
or removing it

[12:08:00.0000] <karlcow>
"No matter how good the MSFT rumor/news, this presentation is pretty painful thus far. #OSBC" http://twitter.com/dr138/status/70189401380093952

[15:05:00.0000] <AryehGregor>
Wait, localStorage only stores strings?  That's confusing.

[15:06:00.0000] <AryehGregor>
/me just ran into that in the context of the fact that Boolean(String(false)) == true

[15:09:00.0000] <Philip`>
I thought it stored structured clones (at least in theory)?

[15:10:00.0000] <AryehGregor>
Does it?  It seems like when I put in a boolean, I get back a string.

[15:10:01.0000] <Philip`>
"Values can be any data type supported by the structured clone algorithm."

[15:11:00.0000] <AryehGregor>
http://software.hixie.ch/utilities/js/live-dom-viewer/saved/994

[15:11:01.0000] <AryehGregor>
log: string

[15:12:00.0000] <AryehGregor>
In all four engines.

[15:12:01.0000] <Philip`>
(and that algorithm should pass primitive values unchanged)

[15:12:02.0000] <Philip`>
Don't know if implementations do that, though

[15:12:03.0000] <bga_>
json everywhere

[15:14:00.0000] <bga_>
localStorage['a'] = '1\02' :(

[15:14:01.0000] <TabAtkins>
Theoretically, it does structured clones.  In reality, it's all strings for now.

[15:14:02.0000] <bga_>
we can not store \x00-\xFF => we can not store binary data

[15:15:00.0000] <bga_>
asciiz was bad invention

[15:16:00.0000] <bga_>
window.name also can not contains \0

[15:16:01.0000] <zewt>
localStorage is structured clone but I don't think it's widely implemented?

[15:17:00.0000] <zewt>
many apis seem to be in that state currently

[15:18:00.0000] <zewt>
from bugzilla spam it looks like they just fixed History doing that in FF

[15:18:01.0000] <zewt>
would be very nice to be able to store File references in history; don't know if that actually works yet

[15:19:00.0000] <TabAtkins>
bga_: Just store binares in base64 instead.

[15:19:01.0000] <bga_>
TabAtkins can you force implementation to store string as len(4 bytes) + content instead content + \0 ?

[15:19:02.0000] <bga_>
TabAtkins no

[15:19:03.0000] <zewt>
base64 utf-16, heh

[15:19:04.0000] <bga_>
i dont want overhead

[15:20:00.0000] <TabAtkins>
bga_: Then shrug.

[15:27:00.0000] <Hixie>
lordy, window.external interop is poor

[15:48:00.0000] <jamesr>
Hixie: yt?

[15:48:01.0000] <Hixie>
yeah

[15:48:02.0000] <Hixie>
sup

[15:48:03.0000] <jamesr>
so about the canvas AX stuff

[15:49:00.0000] <jamesr>
is this the use case in mind: http://webstuff.nfshost.com/examples/canvas_form.html ?

[15:49:01.0000] <Hixie>
no

[15:49:02.0000] <Hixie>
it's more about buttons and list boxes

[15:49:03.0000] <Hixie>
text editors in canvas don't make sense

[15:49:04.0000] <jamesr>
are they different?

[15:50:00.0000] <Hixie>
see http://www.whatwg.org/specs/web-apps/current-work/complete.html#best-practices

[15:50:01.0000] <erlehmann>
what

[15:50:02.0000] <erlehmann>
madness

[15:50:03.0000] <erlehmann>
jamesr, who created this stuff and whyyyyyyyyyyyy?

[15:50:04.0000] <jamesr>
lemme make a version with buttons and list boxes, then

[15:51:00.0000] <jamesr>
erlehmann: i made that page to try to figure out wtf people are talking about with this stuff

[15:51:01.0000] <jamesr>
because the text editing case is pretty dumb

[15:51:02.0000] <mpilgrim>
all roads lead to bespin

[15:51:03.0000] <jamesr>
not even bespin uses a canvas any more

[15:52:00.0000] <mpilgrim>
doesn't matter, that's what kicked off the frenzy a few years ago

[15:52:01.0000] <mpilgrim>
they've been going non-stop ever since

[15:52:02.0000] <mpilgrim>
srsly

[15:52:03.0000] <erlehmann>
i have never seen something like this before, srsly

[15:52:04.0000] <mpilgrim>
/me shrugs

[15:53:00.0000] <jamesr>
Hixie: what do you mean by list box? <select> ?

[15:54:00.0000] <jamesr>
select elements are fairly magical

[15:54:01.0000] <Hixie>
or radio buttons, yeah

[15:55:00.0000] <Hixie>
i just mean the general concept

[15:55:01.0000] <jamesr>
there's no way for a canvas to closely emulate a pop-out <select>

[15:55:02.0000] <Hixie>
sure

[15:55:03.0000] <Hixie>
i don't mean close emulation

[15:56:00.0000] <Hixie>
i just mean a selection mechanism

[15:56:01.0000] <jamesr>
gotcha

[15:57:00.0000] <Hixie>
basically the extent to which interactivity makes sense on a canvas, excluding cases that only make sense on a canvas e.g. gameplay or graphic manipulation, is limited to really simple stuff like buttons, menus, toggling ui, that kind of thing

[15:57:01.0000] <Hixie>
anything beyond that and really what's the point, one should just use the real underlying elements

[15:57:02.0000] <Hixie>
like <select> or <input>

[16:14:00.0000] <jamesr>
so this, then? http://webstuff.nfshost.com/examples/canvas_form.html

[16:15:00.0000] <jamesr>
i haven't made the thing really clickable so you have to edit the checked state via the keyboard

[16:15:01.0000] <mpilgrim>
why do you hate mouse users?!?

[16:15:02.0000] <jamesr>
paaaah hit testing

[16:17:00.0000] <mpilgrim>
be sure to also emulate clicking on the label as a proxy for clicking on the checkbox itself

[16:17:01.0000] <jamesr>
well that's the thing, there are a _lot_ of behaviors here

[16:17:02.0000] <mpilgrim>
and drawing a focus ring on tabbing

[16:17:03.0000] <jamesr>
like dragging in/out of the checkbox

[16:17:04.0000] <jamesr>
i do draw the focus ring on tabbing

[16:17:05.0000] <jamesr>
i made that work

[16:17:06.0000] <mpilgrim>
i forget what we're doing, exactly

[16:18:00.0000] <jamesr>
Hixie: so what i'm getting at is if i have a checkbox, shouldn't i just be using an <input type="checkbox"> instead?

[16:18:01.0000] <jamesr>
and if not what behaviors of a real checkbox are we trying to allow canvas authors to emulate and what behaviors are we just ignoring?

[16:20:00.0000] <jamesr>
i guess i don't understand why focus ring is so special

[16:29:00.0000] <Hixie>
jamesr: in general i agree with you

[16:31:00.0000] <jamesr>
ok, so given this sort of use case do you think there's a significant difference to hiding the <input type="checkbox"> within the <canvas> vs hiding it with CSS?

[16:31:01.0000] <jamesr>
i have it invisible via position:absolute; top:-50000px and make it focusable via tabindex and a click  listener

[16:32:00.0000] <Hixie>
CSS is merely decorative, if you're changing the semantics of the page with CSS then you're doing it wrong

[16:32:01.0000] <Hixie>
so i don't really see how CSS is relevant here

[16:33:00.0000] <Hixie>
jamesr: note that there are several "canvas AX" things, and they have rather different purposes

[16:33:01.0000] <jamesr>
i'm not changing the semantics, i'm changing the presentation of that checkbox

[16:33:02.0000] <jamesr>
Hixie: i'm trying to understand how they fit together

[16:34:00.0000] <Hixie>
i think it'd be a bit confusing for there to be two checkboxes, one on the canvas and one next to the canvas

[16:34:01.0000] <Hixie>
and i doubt any authors would do that

[16:34:02.0000] <jamesr>
in the visual presentation, yes

[16:34:03.0000] <jamesr>
that's what i am controlling with css

[16:34:04.0000] <Hixie>
css is optional

[16:34:05.0000] <Hixie>
the page should still work if i just turn off all css

[16:34:06.0000] <jamesr>
as far as the document model in the OO sense having them be sibling or child/parent does not seem particularly relevant

[16:35:00.0000] <Hixie>
it's relevant in that in the sibling case, you're saying they're both there, whereas in the child case, you're saying one replaces the other

[16:35:01.0000] <karlcow>
I have to remember that. I need more brain cycles on it "[18:37]  <jamesr> i'm not changing the semantics, i'm changing the presentation of that checkbox"

[16:36:00.0000] <jamesr>
well, i'm not sure the document has valid semantics in either case

[16:36:01.0000] <jamesr>
at least to what my mind

[16:36:02.0000] <Hixie>
"valid semantics"?

[16:36:03.0000] <karlcow>
aha another one.

[16:37:00.0000] <karlcow>
it's becoming meta :)

[16:37:01.0000] <karlcow>
EIOUkdj soiu34897KJIu fjf 34jhkhf ksljd <- invalid semantics?

[16:37:02.0000] <Hixie>
jamesr: one problem we're trying to solve is how to make pages accessible to users with limited visibility, who use screen readers to orient themselves, but still see the page

[16:37:03.0000] <Hixie>
jamesr: for that, you want just one checkbox

[16:38:00.0000] <Hixie>
jamesr: but you need a way to expose it and its state to the AX tools, while rendering it using canvas

[16:38:01.0000] <Hixie>
jamesr: so by putting it as a child, we're saying that the canvas is being used for the rendering, but the checkbox element (<input type=checkbox>) "represents" the checkbox for the purposes of the AX tool.

[16:39:00.0000] <Hixie>
jamesr: (and for the purposes of conveniently having somewhere to keep track of sub-canvas focus)

[16:39:01.0000] <Hixie>
jamesr: (for keyboard users)

[16:42:00.0000] <Hixie>
jamesr: if you're around tomorrow i can come over and try to see if i can explain it in person

[16:43:00.0000] <Hixie>
jamesr: as your input on this stuff would be very much welcome :-)


2011-05-17
[17:15:00.0000] <jamesr>
Hixie: free fo rlunch?

[17:15:01.0000] <Hixie>
sure

[17:15:02.0000] <jamesr>
(i'm at a talk currently)

[17:19:00.0000] <zewt>
that sounded like "free for lunch? well I'm not" :P

[18:03:00.0000] <jamesr>
Hixie: so just to be clear, we are trying to support users or user-agents who support canvas 2d context, support javascript, but do not support CSS?

[18:03:01.0000] <Hixie>
you should be able to turn CSS off, or have a user style sheet, or have a custom UA-provided style sheet, and still use the Web, yes.

[18:03:02.0000] <Hixie>
that's part of the premise of CSS

[18:05:00.0000] <jamesr>
AX agents use a lot of cues from CSS

[18:06:00.0000] <Hixie>
legacy AX agents more or less uniformly suck.

[18:06:01.0000] <jamesr>
but i guess it is on authors to make it work

[18:06:02.0000] <jamesr>
none will, of course

[21:30:00.0000] <heycam>
if I want to treat some latin text as if it were some rtl language text (for layout), is putting "direction:rtl; unicode-bidi:bidi-override" on it the right thing to do?

[23:39:00.0000] <Akilo>
hi

[02:00:00.0000] <hsivonen>
I'm aware that html5.validator.nu is down. I'm working on getting it back.

[02:01:00.0000] <jgraham>
/me wonders if people have started worrying about text editors created using WebGL yet

[02:03:00.0000] <tw2113>
hadn't seen anyone mention it hsivonen

[02:03:01.0000] <tw2113>
but good to know

[02:04:00.0000] <zcorpan>
hsivonen: OMG! i need html5.validator.nu RIGHT NOW!!1

[02:05:00.0000] <hsivonen>
zcorpan: thugbot is already worried

[02:07:00.0000] <MikeSmith>
hsivonen: my annoybot is going to report that every 10 minutes until it's back

[02:07:01.0000] <MikeSmith>
if it's too annoying, lemme know and I can turn it off

[02:07:02.0000] <hsivonen>
MikeSmith: not too annoying

[02:07:03.0000] <MikeSmith>
k

[02:08:00.0000] <hsivonen>
and it's back

[02:08:01.0000] <hsivonen>
with warnings for comments before doctype

[02:09:00.0000] <hsivonen>
also a bunch of stuff from MikeSmith and the stuff I did yesterday

[02:09:01.0000] <MikeSmith>
oh cool

[02:10:00.0000] <MikeSmith>
hsivonen: you redeployed validator.nu also?

[02:10:01.0000] <hsivonen>
MikeSmith: yes

[02:10:02.0000] <MikeSmith>
cool

[02:11:00.0000] <MikeSmith>
so I will redeploy the HTML5 backend on validator.w3.org as well

[02:15:00.0000] <MikeSmith>
hmm

[02:15:01.0000] <MikeSmith>
[[

[02:15:02.0000] <MikeSmith>
  File "build/build.py", line 648, in fetchUrlTo

[02:15:03.0000] <MikeSmith>
    f = urllib2.urlopen(url, timeout=httpTimeoutSeconds)

[02:15:04.0000] <MikeSmith>
TypeError: urlopen() got an unexpected keyword argument 'timeout'

[02:15:05.0000] <MikeSmith>
]]

[02:15:06.0000] <MikeSmith>
guess I need to update some urllib

[02:16:00.0000] <zcorpan>
Warning: Comments seen before doctype. Internet Explorer will go into the quirks mode.

[02:16:01.0000] <zcorpan>
From line 1, column 1; to line 1, column 21

[02:16:02.0000] <zcorpan>
<?xml version="1.0"?><!DOCT

[02:16:03.0000] <zcorpan>
i guess that's ok; it's true for ie6 anyway

[02:18:00.0000] <hsivonen>
zcorpan: good point. The tree builder doesn't know that the comment was a particular kind of bogus comment

[02:18:01.0000] <hsivonen>
zcorpan: but yeah, true for IE6

[02:20:00.0000] <MikeSmith>
"the timeout argument to urllib2.urlopen was introduced with Python 2.6"

[02:33:00.0000] <MikeSmith>
hsivonen: if you could please do a quick review

[02:33:01.0000] <MikeSmith>
build.py fix for the urllib timeout issue

[02:33:02.0000] <MikeSmith>
https://gist.github.com/976161

[02:37:00.0000] <MikeSmith>
I should have tested dude's patch with older python

[02:37:01.0000] <MikeSmith>
I'm sure there are a lot of people still using python 2.5

[02:37:02.0000] <MikeSmith>
I think Debian stable is still at python 2.5

[02:37:03.0000] <MikeSmith>
for one thing

[03:07:00.0000] <hsivonen>
MikeSmith: did you start the rel implementation?

[03:07:01.0000] <hsivonen>
MikeSmith: my plan is to do it today with hard-coded lists that can be updated manually

[03:10:00.0000] <hsivonen>
hmm. the page on the microformats wiki doesn't have any extensions registered in a format that conforms to the registration requirements

[03:11:00.0000] <hsivonen>
I guess I'll have to implement things strictly in order to draw proper attention to this

[03:32:00.0000] <hsivonen>
"Except where otherwise specified, a keyword must not be specified more than once per rel attribute."

[03:33:00.0000] <hsivonen>
are there any keywords that are "otherwise specified" to be allowed to appear more than once per rel attribute?

[03:34:00.0000] <jgraham>
At one point there was the up up up stuff or something wasn't there?

[03:34:01.0000] <jgraham>
Did that die?

[03:35:00.0000] <MikeSmith>
hsivonen: I did not start on rel yet

[03:35:01.0000] <MikeSmith>
so please go ahead

[03:36:00.0000] <MikeSmith>
hsivonen: what registration requirements?

[03:36:01.0000] <bga_>
http://bellard.org/jslinux/

[03:37:00.0000] <MikeSmith>
hsivonen: the microformats wiki itself has not registration requirements, as far as I can see

[03:37:01.0000] <MikeSmith>
if you mean the requirements in the spec, I already filed a spec bug about that

[03:37:02.0000] <MikeSmith>
http://www.w3.org/Bugs/Public/show_bug.cgi?id=12613

[03:38:00.0000] <MikeSmith>
"spec guidance on adding new link types to the microformats wiki page does not match the format of that wiki page"

[03:41:00.0000] <MikeSmith>
hsivonen: also please lemme know if it's OK with you if I commit https://gist.github.com/976161

[03:42:00.0000] <MikeSmith>
I tested it in a python 2.5 environment and it seems to work as expected

[03:45:00.0000] <hsivonen>
MikeSmith: I mean the observation that you filed a bug about

[03:46:00.0000] <MikeSmith>
hsivonen: OK

[03:46:01.0000] <MikeSmith>
I think that language matched the format of the WHATWG wiki rel-extensions page

[03:47:00.0000] <MikeSmith>
but has not been changed yet to match the format of the microformats wiki

[03:48:00.0000] <MikeSmith>
oh

[03:48:01.0000] <MikeSmith>
I realize filed two bugs on this

[03:49:00.0000] <MikeSmith>
the one I meant was http://www.w3.org/Bugs/Public/show_bug.cgi?id=12612

[03:49:01.0000] <MikeSmith>
anyway, as I mention in the bug description, I'd suggest not making the spec try to make the wiki closely but instead just have the spec say, "Any rel value listed on the

[03:49:02.0000] <MikeSmith>
Microformats wiki existing-rel-values page must be accepted unless that page explicitly states it must not be used."

[03:57:00.0000] <hsivonen>
MikeSmith: I'm not sure that's a good idea. The microformat wiki lists some stuff that appears to be brainstorming or repeating HTML4 instead of intending to be valid extensions

[03:59:00.0000] <MikeSmith>
yeah, they definitely need to do some work on that page to make more clear what is supposed to be considered "registered" and what's not

[04:00:00.0000] <hsivonen>
MikeSmith: I'd prefer everything that gets imported from microformats.org to be affirmatively marked by someone as "I intended this to be considered a valid extension for HTML5"

[04:00:01.0000] <hsivonen>
with an annotation that says if it is valid on <link> and/or <a>/<area>

[04:00:02.0000] <MikeSmith>
that would be nice, yeah

[04:01:00.0000] <hsivonen>
I think I'm not going to import anything from the wiki that doesn't have the <link> vs. <a>/<area> stuff in order

[04:01:01.0000] <MikeSmith>
sounds right to me

[04:01:02.0000] <MikeSmith>
maybe hober can help out with work on updates to that page

[04:05:00.0000] <hsivonen>
do I understand correctly that rel values with a colon in them have to be registered, too?

[04:05:01.0000] <hsivonen>
so a colon doesn't sprinkly magic "I'm distributed and don't need to register" pixie dust?

[04:05:02.0000] <hsivonen>
and just makes the comparison case-sensitive

[06:12:00.0000] <achshar>
why cant i play local audio files with audio tag?

[06:12:01.0000] <zcorpan>
which browser?

[06:12:02.0000] <achshar>
chrome

[06:12:03.0000] <achshar>
canary

[06:12:04.0000] <zcorpan>
same reason you can't do anythign else locally in chrome

[06:13:00.0000] <zcorpan>
i'd guess

[06:13:01.0000] <achshar>
hmm so its impossible?

[06:13:02.0000] <zcorpan>
although audio doesn't have same-origin restriction in general, so could be something else

[06:13:03.0000] <achshar>
:O

[06:13:04.0000] <achshar>
well never mind..

[06:14:00.0000] <achshar>
thanks :)

[06:14:01.0000] <zcorpan>
try to lift the file: same-origin restriction with some command-line flag

[06:14:02.0000] <zcorpan>
see if that helps

[06:14:03.0000] <achshar>
hmm how can i do that?

[06:14:04.0000] <zcorpan>
don't remember, google for it

[06:14:05.0000] <achshar>
ohkzz

[06:16:00.0000] <achshar>
zcorpan: oh and also, is it possible to get a file's path when selected from input type file?

[06:16:01.0000] <zcorpan>
no

[06:17:00.0000] <achshar>
damn.. i guess that would be because of some security problem :(

[06:17:01.0000] <zcorpan>
privacy

[06:17:02.0000] <achshar>
hmm

[06:18:00.0000] <achshar>
well thanks alot :D

[06:18:01.0000] <zcorpan>
np

[06:19:00.0000] <achshar>
ok last tid bid..  am trying to play a local audio file through html5 audio tag.. user either drags the mp3 file or selects from input type file..

[06:19:01.0000] <achshar>
can you give any idea as to how do i cange user's input to audio's source?

[06:20:00.0000] <zcorpan>
oh i thought you were doing <audio src="file:...">

[06:21:00.0000] <achshar>
i was doing that only but it dosent work..

[06:21:01.0000] <achshar>
it was a proof of concept

[06:21:02.0000] <zcorpan>
ok

[06:21:03.0000] <achshar>
that audio can play audio files but as it turns out chrome dosent

[06:22:00.0000] <achshar>
one way is to use dataurls but they become very very long and cannot be stored in websql :((((((

[06:22:01.0000] <zcorpan>
input.onchange = function(e) { var file = input.files[0]; var url = URL.createObjectURL(file); audio.src = url }

[06:22:02.0000] <zcorpan>
or something like that

[06:23:00.0000] <achshar>
ohkeexxx let me check that out.. :D :D

[06:27:00.0000] <achshar>
what is 'URL.'? where does URL come from?

[06:28:00.0000] <zcorpan>
it's defined in abarth's url spec iirc

[06:29:00.0000] <achshar>
oh okieee

[06:32:00.0000] <achshar>
http://pastebin.com/L6wqXdMK

[06:32:01.0000] <achshar>
it gives URL undefined

[06:37:00.0000] <zcorpan>
seems like it's prefixed

[06:37:01.0000] <zcorpan>
webkitURL

[06:38:00.0000] <zcorpan>
use revokeObjectURL() when you don't need the url anymore

[06:39:00.0000] <achshar>
HOLLY COW IT WORKS!

[06:39:01.0000] <achshar>
thanks a ton

[06:39:02.0000] <achshar>
but can i store this url to websql for later use?

[06:39:03.0000] <achshar>
like after a browser restart?

[06:41:00.0000] <zcorpan>
dunno

[06:41:01.0000] <achshar>
actualy i wanted to make playlists

[06:41:02.0000] <achshar>
but hey this far is far enough.. this is awsone.. thanks alot for you help :D

[06:41:03.0000] <zcorpan>
welcome

[06:42:00.0000] <achshar>
cya

[07:20:00.0000] <achshar>
i have an arrayBuffer which contains a mp3 file.. how do i play it with audio tag? any ideas?

[07:21:00.0000] <hsivonen>
achshar: you can't. in a cross-browser way

[07:21:01.0000] <hsivonen>
achshar: in Firefox, you can supply your own MP3 decoder in JavaScript and send the decompressed audio to the Audio API

[07:22:00.0000] <hsivonen>
achshar: in Safari, you can encode the bytes into a data: URL and use that as the source of an <audio> element

[07:22:01.0000] <achshar>
oh.. i am mamking an app for chrome.. so it will always be open in chrome

[07:22:02.0000] <hsivonen>
making browser-specific apps instead of Web apps sucks, though

[07:23:00.0000] <achshar>
anything for chrome? i guess it will be same as safari.. right?

[07:23:01.0000] <achshar>
no its kind of a local app

[07:23:02.0000] <achshar>
for chrome OS

[07:23:03.0000] <hsivonen>
achshar: Chrome can play MP3 from a data: URL at least for the time being

[07:23:04.0000] <achshar>
yup it can

[07:23:05.0000] <hsivonen>
it's unclear if the announcement to drop H.264 has any effect on encumbered audio codecs

[07:24:00.0000] <achshar>
but i want to store thme in websql for later use

[07:24:01.0000] <hsivonen>
also, Chrome has had some activity around an audio API, but I don't know what the status is

[07:24:02.0000] <achshar>
like after a browser restart

[07:25:00.0000] <achshar>
hmm audio api is beta and user would have to go to about:flags to activate it

[07:25:01.0000] <achshar>
data: urls are quiet heavy and websql qont save them

[07:28:00.0000] <achshar>
any solution to have mp3s between page loads..?

[07:30:00.0000] <MikeSmith>
achshar: fwiw, there are at least a couple of JS libraries that abstract away the differences between the audio API implemented in Chrome and the audio API implemented in Firefox

[07:31:00.0000] <achshar>
hmm can any of those libraries save mp3s bteween page loads?

[07:31:01.0000] <MikeSmith>
achshar: dunno, sorry

[07:31:02.0000] <achshar>
hmm np.. :)

[07:32:00.0000] <achshar>
oh do you happen to know why websql wont save large data urls?

[07:32:01.0000] <MikeSmith>
asking on the public-audio mailing list might be a good way to find out

[07:32:02.0000] <MikeSmith>
http://lists.w3.org/Archives/Public/public-audio/

[07:33:00.0000] <MikeSmith>
achshar, dunno about that either, but websql is also not a cross-browser technology

[07:33:01.0000] <MikeSmith>
it's not implemented in Firefox and never will be

[07:33:02.0000] <MikeSmith>
nor in IE

[07:33:03.0000] <achshar>
hmma as i said it only has to work in chrome :)

[07:33:04.0000] <achshar>
it is a packaged app

[07:35:00.0000] <MikeSmith>
achshar: then I guess you probably want to ask on a chrome-specific mailing list

[07:35:01.0000] <MikeSmith>
or some other chrome-specific forum

[07:35:02.0000] <MikeSmith>
maybe the #chromium-support channel

[07:36:00.0000] <achshar>
hmm they never reply

[07:36:01.0000] <achshar>
some ego problem with #chromium and #chromium-extension does nto have alot of memenrs

[07:36:02.0000] <MikeSmith>
ego problem?

[07:37:00.0000] <achshar>
yup.. #chromium's topic says 'this is *not* a support channel' so i guess they like to keep it for the devs only :(

[07:37:01.0000] <MikeSmith>
anyway, most often the reason you don't get an answer is that nobody on the channel actually knows the answer

[07:38:00.0000] <achshar>
:O

[07:38:01.0000] <achshar>
i doubt nobody of 100 ppl on chromium's channel wond know a chromium question :P

[07:39:00.0000] <achshar>
wel.. gtg.. cya and thanks again for your help :)

[07:40:00.0000] <erlehmann>
after just now reading a post on webGL and shaders, my layman's question … is webGL secure in any way?

[07:42:00.0000] <Philip`>
erlehmann: It's secure in lots of ways

[07:42:01.0000] <Philip`>
Probably the more important question is whether it's secure in every way

[07:44:00.0000] <erlehmann>
Philip`, http://translate.google.com/translate?hl=en&sl=de&tl=en&u=http%3A%2F%2Fblog.fefe.de%2F%3Fts%3Db32cb04e

[07:44:01.0000] <erlehmann>
this is the post i just read.

[07:44:02.0000] <erlehmann>
on one hand, felix von leitner apparently gets paid for security stuff™. OTOH, his web server cannot into range requests.

[07:45:00.0000] <erlehmann>
i don't remember enough from university courses to grok if his analysis is legit.

[07:48:00.0000] <Philip`>
Maybe I don't understand the poor translated text well enough, but it doesn't seem to make sense

[07:48:01.0000] <Philip`>
GPUs have access to lots of system resources, but so do CPUs, and you just have to avoid running arbitrary unrestricted code on them

[07:49:00.0000] <erlehmann>
Philip`, he says that GPU do not have MMU protection and reasons that therefore WebGL is dangerous.

[07:49:01.0000] <Philip`>
e.g. WebGL only allows you to write GLSL, which can't read system memory because the language has no functionality for that

[07:50:00.0000] <erlehmann>
and from a security standpoind, code without memory protection should be regarded as owning the system

[07:50:01.0000] <Philip`>
and implementations have shader validators to try to restrict you to a safe subset of GLSL

[07:50:02.0000] <Philip`>
to discourage infinite loops etc

[07:51:00.0000] <erlehmann>
i see a halting problem -_-*

[07:51:01.0000] <Philip`>
It's trivial to guarantee halting - just don't allow any loops except over finite constants

[07:53:00.0000] <erlehmann>
i am thinking maybe one should respond to von leitners post. he possibly the most-read tech blogger of germany, even without any CSS on his page.

[07:54:00.0000] <zcorpan>
foolip: how about always queueing events (at most one event per event type and element) until there's a listener registered?

[07:55:00.0000] <foolip>
zcorpan, what about scripts that try to do the right thing by looking at readyState/networkState and thus don't expect the event to be fired after attaching the event listener?

[07:56:00.0000] <erlehmann>
Philip`, are GLSL exploits feasible? i mean, if you can spray the heap in javascript …

[07:56:01.0000] <zcorpan>
foolip: good point

[07:56:02.0000] <MikeSmith>
hsivonen: sent you the build patch by e-mail for review

[07:57:00.0000] <zcorpan>
foolip: that's a conflicting requirement

[07:57:01.0000] <foolip>
zcorpan, I think it's going to be difficult to make it simultaneously work (and be sane) for those two cases, yes

[07:57:02.0000] <MikeSmith>
hsivonen: I'm going to go ahead and manually apply it now in the validator.w3.org backends

[07:58:00.0000] <foolip>
one could of course pile up more logic to avoid refiring events in certain cases, but it seems terribly messy

[07:58:01.0000] <MikeSmith>
hsivonen: and I can tweak it later if you see anything that seems to need changing

[07:58:02.0000] <zcorpan>
yeah, chances are that the api will be even worse if we try to be smart here

[07:58:03.0000] <foolip>
I think a solution that only fakes the state until the first time a script tries to look at it might work, but if native controls are implemented by scripts, then that's also messy

[07:59:00.0000] <Philip`>
erlehmann: GLSL has no memory allocation or pointers etc, so any exploits are more likely to be related to bugs in the browser's binding or in the graphics drivers

[07:59:01.0000] <foolip>
no brilliant ideas from me, yet

[07:59:02.0000] <erlehmann>
Philip`, oh. seems i have to look it up some time.

[08:02:00.0000] <hsivonen>
MikeSmith: rs=hsivonen on the patch

[08:02:01.0000] <MikeSmith>
sweet

[08:02:02.0000] <MikeSmith>
hsivonen: thanks

[08:03:00.0000] <Philip`>
erlehmann: http://mew.cx/glsl_quickref.pdf is most of the API exposed to GLSL programs

[08:08:00.0000] <erlehmann>
Philip`, thank you. last question: if a WebGL browser is exploited, is there any layer of security preventing upload of malicious shaders to the GPU? a shim or something?

[08:09:00.0000] <Philip`>
I have no idea what you mean

[08:13:00.0000] <erlehmann>
Philip`, My probably broken understanding is that any 3D program that can do arbitrary shaders can manipulate system memory, am I wrong?

[08:14:00.0000] <erlehmann>
And you told me that WebGL does not allow arbitrary shaders, which comforts me.

[08:14:01.0000] <erlehmann>
Oh wait.

[08:15:00.0000] <erlehmann>
Ignore what I just said.

[08:15:01.0000] <erlehmann>
I am asserting the opposite. :3

[08:15:02.0000] <Philip`>
GLSL shaders can't manipulate system memory (though they can sometimes hang the system)

[08:15:03.0000] <Philip`>
(Stuff like CUDA/OpenCL might be able to - I don't really know anything about that)

[08:17:00.0000] <erlehmann>
Philip`, I was thinking of “arbitrary shaders” in terms of “writing shaders in assembly or stuff”. Then it hit me that you mentioned GLSL.

[08:17:01.0000] <Philip`>
As far as I'm aware (which isn't far), browsers add an extra layer (typically via ANGLE) to avoid some of those hangs, and also to validate shaders more strictly than drivers tend to

[08:18:00.0000] <Philip`>
There is a shader assembly language but that's even less powerful than GLSL :-)

[08:18:01.0000] <erlehmann>
The more you know!

[08:19:00.0000] <Philip`>
I expect the low-level machine code executed on GPUs changes far too often for any applications to rely on, so drivers only expose higher-level languages (GLSL, ARB assembly, CUDA, etc)

[08:19:01.0000] <erlehmann>
Well, it makes it cross-platform, too.

[08:23:00.0000] <Philip`>
Yeah, and every generation of hardware by a single vendor is effectively a separate platform

[08:24:00.0000] <Philip`>
They don't want applications tied so tightly to GeForce 9 that they can't sell people a GeForce 10 with a totally different internal architecture

[08:25:00.0000] <Philip`>
and it's just a fortunate coincidence that that led them to support high-level languages (GLSL etc) that can also provide adequate security properties when running untrusted code from the web

[08:26:00.0000] <Philip`>
(Consoles provide more low-level GPU access since they're a fixed platform and portability is irrelevant)

[08:40:00.0000] <sephr>
Hixie: under 7.5.1.3 Security and privacy, is this intended?

[08:40:01.0000] <sephr>
Leaking secure URLs. User agents should not send HTTPS URLs to third-party sites registered as content handlers, in the same way that user agents do not send Referer (sic) HTTP headers from secure sites to third-party sites.

[08:40:02.0000] <sephr>
because I think that's wrong

[08:40:03.0000] <sephr>
as long as the content handler also uses https it shouldn't matter

[08:41:00.0000] <sephr>
and afaik the Referer header *is* sent from https domain a->https domain b

[08:49:00.0000] <MikeSmith>
validator.w3.org HTML5 backends now synched up to latest validator.nu sources

[09:19:00.0000] <MikeSmith>
zcorpan: should we make you the default assignee for bugs against the diffs doc?

[09:19:01.0000] <MikeSmith>
in bugzilla, I mean

[09:22:00.0000] <zcorpan>
MikeSmith: if you like, wfm either way

[09:24:00.0000] <MikeSmith>
all right

[09:24:01.0000] <MikeSmith>
no turning back now

[09:25:00.0000] <MikeSmith>
you are now the default assignee

[09:25:01.0000] <MikeSmith>
at least until the triumphant return of Anne

[09:25:02.0000] <MikeSmith>
at which time, I recommend you two have a knife fight to decide who gets to be the default assignee

[09:28:00.0000] <zcorpan>
MikeSmith: should the component name change too?

[09:28:01.0000] <MikeSmith>
dunno

[09:29:00.0000] <MikeSmith>
what do?

[09:29:01.0000] <MikeSmith>
what to?

[09:29:02.0000] <zcorpan>
... (editor: Simon Pieters)

[09:31:00.0000] <zcorpan>
(or list both, although i think anne might not be an active editor for it anymore)

[09:32:00.0000] <MikeSmith>
ah

[09:32:01.0000] <MikeSmith>
I think if I change that it'll break some stuff

[09:32:02.0000] <zcorpan>
ok

[09:32:03.0000] <zcorpan>
then leave it :)

[09:33:00.0000] <zcorpan>
come to think of it it'd at least break a link in the draft itself

[09:33:01.0000] <MikeSmith>
OK

[09:33:02.0000] <MikeSmith>
I can ask Hixie if it'll break his stuff

[11:54:00.0000] <TabAtkins>
The ease with which Google properties integrate translation is humbling.  We are mere years from translation tech being ubiquitous, to the point where I could visit a foreign country and get along without any language knowledge.

[12:25:00.0000] <zewt>
well, maybe a European country; Asia, not so much ...

[12:26:00.0000] <zewt>
CJK machine translations are still borderline useless

[12:26:01.0000] <zewt>
well, I know C/J are, not sure about K

[12:27:00.0000] <TabAtkins>
I get at least *some* use out of machine translations of Japanese.

[12:27:01.0000] <TabAtkins>
It's pretty bad, but I can usually get the gist of it.

[12:28:00.0000] <TabAtkins>
(I was trying to follow a discussion a few weeks ago on a japanese mailing list, so I have recent experience.)

[12:29:00.0000] <hober>
speaking of which, see you in a couple of weeks :)

[12:29:01.0000] <wilhelm>
Yes, Norwegian → English machine translations make sort of sense. Japanese → English, not at all.

[12:32:00.0000] <zewt>
google translations for french are pretty nuts: http://translate.google.com/translate?js=n&prev=_t&hl=en&ie=UTF-8&layout=2&eotf=1&sl=auto&tl=en&u=http%3A%2F%2Fwww.lemonde.fr%2Finternational%2Farticle%2F2010%2F12%2F01%2Fwikileaks-poutine-raille-la-democratie-americaine_1447695_3210.html

[12:34:00.0000] <TabAtkins>
That's a pretty decent translation, zewt.

[12:36:00.0000] <jamesr_>
Hixie, lunch?

[12:38:00.0000] <jamesr_>
Hixie, going to bigtable

[12:39:00.0000] <erlehmann>
TabAtkins, I actually once helped an italian guy to order food only using my android phone. Was a pretty interesting experience.

[12:40:00.0000] <erlehmann>
Whatever made him come into a German fast food place without the slightest knowledge of German or English was beyond my comprehension.

[12:41:00.0000] <TabAtkins>
Haha

[12:41:01.0000] <TabAtkins>
I once did tech-support for a spanish-speaker using only google translate.

[12:41:02.0000] <erlehmann>
Even Turkish may have worked. This is Berlin, after all.

[12:41:03.0000] <TabAtkins>
And a decent ear for transcription (a couple of spanish classes helped there).

[12:42:00.0000] <AryehGregor>
That translation from French is actually excellent.  It's completely intelligible.

[12:42:01.0000] <AryehGregor>
I think English-Spanish also works really well.

[12:43:00.0000] <AryehGregor>
Less major languages, not so much.

[12:43:01.0000] <AryehGregor>
Although most of them are still semi-usable.

[12:44:00.0000] <wilhelm>
I've tried using Google Translate in conversations. It kind of works if you type the equivalent of baby language into it, but I've mostly found I'm better off with a dictionary.

[12:44:01.0000] <AryehGregor>
/me tries Google Translate on haaretz.co.il

[12:45:00.0000] <AryehGregor>
It gets confused by proper nouns.  Like it translates ברק as "lightning" instead of "Barak" in some places.

[12:45:01.0000] <wilhelm>
We're decades away from having proper machine translations. That said, Google probably has the best tools to get us there.

[12:45:02.0000] <AryehGregor>
So "(we need) to investigate Barak" becomes "To explore the lightning".

[12:46:00.0000] <TabAtkins>
Random interesting experience: On Sunday, I and my brother (who is a Hebrew translator) were in line to enter the SoaD concert.  Directly behind us in line were two native Israelis who now lived in SF, and who were talking in Hebrew.

[12:47:00.0000] <TabAtkins>
I told my brother to start a conversation with them.  The first question they asked was "Are you Jewish?"  The second was "Are you a spy?".

[12:49:00.0000] <AryehGregor>
A Hebrew translator?  What sort of things does he translate?

[12:49:01.0000] <AryehGregor>
(it's kind of weird for non-Jews outside Israel to know Hebrew, yeah)

[12:50:00.0000] <TabAtkins>
He's a Navy translator.

[12:50:01.0000] <TabAtkins>
And given that he's part of the Office of Information Dominance, he's not really allowed to tell us what he translates. ^_^

[12:51:00.0000] <AryehGregor>
Ah, interesting.

[12:51:01.0000] <AryehGregor>
The military is one place where there's a lot of demand for people who are very fluent in languages, but aren't native speakers.

[12:51:02.0000] <gsnedders>
"Office of Information Dominance" — what a euphemism…

[12:51:03.0000] <AryehGregor>
Clearly most Jews would not be so trustworthy to translate some things from Hebrew.

[12:52:00.0000] <AryehGregor>
(similarly, and probably more important, Arabs and Arabic)

[12:52:01.0000] <Philip`>
Maybe it's next door to the Office of Missile Obliteration

[12:54:00.0000] <TabAtkins>
Another interesting observation: Ordinarily, if my brother were to hear someone on the street speaking Hebrew in the military town he's based in, he wouldn't be allowed to talk to them, and is required to report them as possible spies.

[12:55:00.0000] <gsnedders>
WTF?

[12:55:01.0000] <AryehGregor>
That's on the military base itself?

[12:55:02.0000] <TabAtkins>
The base, and the surrounding town.

[12:55:03.0000] <AryehGregor>
Interesting.

[12:55:04.0000] <TabAtkins>
Same for any of the languages they teach there.

[12:55:05.0000] <AryehGregor>
Militaries can be pretty serious about this stuff.

[12:56:00.0000] <TabAtkins>
Too much risk of seemingly innocent small-talk actually being info-probes.

[12:56:01.0000] <gsnedders>
But isn't English a risk too?

[12:56:02.0000] <AryehGregor>
When my sister was in the Israeli Air Force, she told my mother what bases she was on.  One time my mother looked up the base and found that it was believed to be one of the places where the Israelis kept their nuclear missiles.

[12:56:03.0000] <TabAtkins>
Everyone speaks English.  Hearing someone speak Farsi or Hebrew, though, is much rarer if they're not part of the military.

[12:57:00.0000] <AryehGregor>
So my mother was having a phone conversation with my father and sister, and my mother said something like "So, I read that the base you're on is one of the ones with the nuclear missiles!"

[12:57:01.0000] <AryehGregor>
There was a long silence, and my father said "She probably can't talk about that."  So my mother changed the topic of conversation and my sister pretended she had never said anything.

[12:58:00.0000] <AryehGregor>
Fun places, militaries.

[12:58:01.0000] <TabAtkins>
Yup.  Haven't run into much like that yet, but I expect it'll happen more often as my brother advances.

[12:58:02.0000] <TabAtkins>
My other brother, on the other hand, should be leaving the Marines this year and returning to civilian life, so yay!

[12:59:00.0000] <AryehGregor>
Also, my sister said all Israeli soldiers are under strict orders that if they leave the country, they have to leave their uniforms and military ID and everything behind, and aren't allowed to tell anyone that they're soldiers if asked.

[12:59:01.0000] <AryehGregor>
Although that's probably particular to Israel, for obvious reasons.

[12:59:02.0000] <AryehGregor>
My sister told lots of fun military stories.

[13:00:00.0000] <TabAtkins>
Yeah, my bros don't have any such requirement.

[13:00:01.0000] <AryehGregor>
Because an Israeli soldier traveling in Europe or someplace might theoretically get put on trial for war crimes or something.

[13:02:00.0000] <AryehGregor>
Whereas America has the Hague Invasion Act: http://en.wikipedia.org/wiki/Hague_Invasion_Act

[13:02:01.0000] <TabAtkins>
Heh, interesting.  Never hard of that.

[13:02:02.0000] <TabAtkins>
s/hard/heard/

[13:03:00.0000] <AryehGregor>
(spoiler: that's not its official name)

[14:30:00.0000] <zcorpan>
http://blogs.msdn.com/b/ieinternals/archive/2011/05/17/url-fragments-and-redirects-anchor-hash-missing.aspx - now we just need to figure out which behavior makes most sense and spec it

[14:31:00.0000] <AryehGregor>
I was gonna send an e-mail to whatwg about that, yeah.

[14:31:01.0000] <AryehGregor>
Also post a comment on the blog post asking him why he didn't file a bug.

[14:35:00.0000] <AryehGregor>
Last time I pointed him to something in the HTML5 spec, he seemed to take it well.

[14:37:00.0000] <zcorpan>
about http->https and cross-domain, are there security/privacy considerations with the fragment?

[14:37:01.0000] <zcorpan>
or https->http

[14:38:00.0000] <AryehGregor>
http->https should be fine, surely?

[14:38:01.0000] <zcorpan>
yeah

[14:39:00.0000] <zcorpan>
http://a/#foo -> https://a/ -> http://b/

[15:16:00.0000] <Hixie>
hsivonen: i don't think rel= with a colon is magic in any way currently in the html spec

[15:16:01.0000] <Hixie>
sephr: send mail

[15:16:02.0000] <Hixie>
zcorpan: so long as it's not affecting a component with "Hixie" it it I don't think component name changes will affect me

[15:17:00.0000] <jgraham>
Puting editor names in component names seems bad for this reason

[15:18:00.0000] <zcorpan>
yeah

[15:18:01.0000] <zcorpan>
not that i actually care

[15:19:00.0000] <zcorpan>
anyway, bedtime

[15:54:00.0000] <Hixie>
sicking: what do you think of having an attribute that enbles CORS use and then also controls whether or not the credentials are sent?

[15:54:01.0000] <Hixie>
<img src="http://images.example.com/" cross-origin="with-authentication" alt="...">

[15:55:00.0000] <Hixie>
vs <img src="http://images.example.com/" cross-origin="without-authentication" alt="...">

[15:55:01.0000] <Hixie>
the latter would be the default, so you could do:

[15:55:02.0000] <Hixie>
<img src="http://images.example.com/" cross-origin alt="...">

[15:55:03.0000] <Hixie>
maybe "with-credentials" and "without-credentials" rather than "authentication"

[15:55:04.0000] <Hixie>
or "use-credentials" and "anonymous"

[16:01:00.0000] <AryehGregor>
Maybe this is old news, but: http://bellard.org/jslinux/

[16:02:00.0000] <Dashiva>
Yeah, that's so a few hours ago :P

[16:02:01.0000] <Dashiva>
Worth repeating, though

[16:04:00.0000] <gsnedders>
AryehGregor: According to hsivonen, doesn't work if you have big endian typed arrays.

[16:04:01.0000] <gsnedders>
:(

[16:04:02.0000] <AryehGregor>
Unsurprising.

[16:04:03.0000] <AryehGregor>
Can we just define them to always be little-endian already?

[16:05:00.0000] <gsnedders>
I'd rather we defined it one way or the other. Defining it to be little-endian means it's mainly embedded devices that'll have the conversion cost, which is sub-optimal…

[16:07:00.0000] <AryehGregor>
Lots of embedded devices are little-endian too.

[16:07:01.0000] <AryehGregor>
ARM can go either way.

[16:07:02.0000] <gsnedders>
ARM is de-facto little-endian nowadays

[16:08:00.0000] <gsnedders>
MIPS is the only arch for which browsers really ship on in any quantity where they ship big-endian builds (MIPS is bi-endian too)

[16:08:01.0000] <zewt>
which will happen first: computers converge on a single set of endianness, word size and newlines; or the world converges on a single spoken language

[16:09:00.0000] <gsnedders>
zewt: Endianness and word-size may happen in the not unforseeable future, at least

[16:12:00.0000] <zewt>
maybe--still talking decades, though

[16:12:01.0000] <zewt>
unless 32-bit systems are shoved out earlier than natural by OS vendors, which could happen

[16:24:00.0000] <Philip`>
Is there any reason anyone would build a big-endian system nowadays, unless they really need compatibility with some particular old big-endian system?


2011-05-18
[18:29:00.0000] <Hixie>
am i right that XHR never uses CORS if the url to be fetched is same-origin, even if it redirects to a cross-origin resource?

[18:42:00.0000] <abarth>
Hixie: redirect handling in CORS implementations is somewhat nutty

[18:42:01.0000] <abarth>
and depends on whether the requests are synchronous

[18:42:02.0000] <abarth>
i suspect (hope!) the spec is less nutty

[18:43:00.0000] <Hixie>
i'm adding cors to <img> and <video>

[18:44:00.0000] <Hixie>
the way i've added it, if the url is same-origin, CORS doesn't kick in even if the url points to a redirect that is itself cross-origin

[18:47:00.0000] <zewt>
http://dev.w3.org/2006/webapi/XMLHttpRequest-2/#infrastructure-for-the-send-method looks like it switches to cross-origin on a cross-origin redirect?

[18:50:00.0000] <Hixie>
ah, indeed

[18:50:01.0000] <Hixie>
well that's a pain

[18:50:02.0000] <Hixie>
i wish CORS had a codepath for same-origin requsts

[18:50:03.0000] <Hixie>
that would take care of this

[18:50:04.0000] <Hixie>
maybe i'll just wait for anne to get back and he can fix me up some simpler way of hooking in

[18:51:00.0000] <zewt>
reminds me: anyone know if there's any reliable (implemented) way to force preflight in XHR2, without adding a header to the main request? looks like hooking to progress events will do it, not sure how implemented that is...

[18:52:00.0000] <zewt>
doesn't look like it

[19:44:00.0000] <erlehmann>
gsnedders, with <http://warumnicht.so/test.html>, is your outliner broken or am i doing something terribly wrong?

[19:47:00.0000] <erlehmann>
did not close title element. ignore it. -_-

[19:47:01.0000] <erlehmann>
IRC should put me less in reach with people so I think before annoying them.

[21:03:00.0000] <zewt>
ugh, i miss the days when you could reliably stop obnoxious animations by pressing escape; now everything's scripted and harder to get rid of

[21:04:00.0000] <wolfman2000>
How much scripting is involved with WhatWG anyway? I don't think I ever understood that part.

[22:26:00.0000] <wirepair>
why in the world do dom events decode entities from the attributes?

[22:27:00.0000] <wirepair>
https://blog.whitehatsec.com/its-a-dom-event/

[22:27:01.0000] <wirepair>
that just seems crazy

[23:34:00.0000] <hsivonen>
Hixie: "The link types that contain no U+003A COLON characters (:), including all those defined in this specification, are ASCII case-insensitive values, and must be compared as such."

[23:34:01.0000] <hsivonen>
Hixie: which seems to imply that link types that do have a colon are compared code point for code point

[23:55:00.0000] <Akilo>
hop

[00:07:00.0000] <ifette>
Hixie: Why can a client continue to send on a websocket after calling close()?

[00:08:00.0000] <ifette>
The API says that if the connection is established and the closing handshake has not yet started, then the uaser agent must send data....

[00:09:00.0000] <ifette>
why isn't it just defined in terms of "the closing handshake has started"

[00:09:01.0000] <ifette>
erm... sorry... i meant defiend in terms of the readyState

[00:10:00.0000] <ifette>
In an earlier email you said you wanted send() to bail if called after a server-initiated closing handshake, and that the current "start the websocket closing handshake" definition in the protocol is endpoint agnostic

[00:10:01.0000] <ifette>
I'm not sure why the initiating endpoint matters?

[01:08:00.0000] <hyungrok>
In the HTML5 parsing algorithm, when the parser sees </body> in the in-body insertion mode [§8.2.5.4.7] *without* <body> being in scope, does it still switch to the after-body insertion mode?

[01:16:00.0000] <Ms2ger>
hyungrok, I read "no"

[01:17:00.0000] <hyungrok>
And why would you read it that way?

[01:17:01.0000] <Ms2ger>
"Ignore this token"

[01:18:00.0000] <Ms2ger>
If you switch the mode, you haven't ignored it, no?

[01:18:01.0000] <hyungrok>
Yes. But then there's no "otherwise" around the "Switch the insertion  mode..." bit.

[01:19:00.0000] <hyungrok>
For instance, a couple paragraphs below ("a start tag that's one of ‘address’ &c.),

[01:19:01.0000] <hyungrok>
it says:  "If the stack of open elements has a p element in button scope, then act as if an end tag with the tag name "p" had been seen.

[01:19:02.0000] <hyungrok>
Insert an HTML element for the token."

[01:20:00.0000] <hyungrok>
Clearly it's meant that the parser should "insert an HTML element" regardless of the if above.

[01:22:00.0000] <Ms2ger>
(AFAICT, Gecko doesn't switch the mode)

[01:22:01.0000] <Dashiva>
hyungrok: The otherwise part is because it's another way to trigger a parse error (while not ignoring the token)

[01:25:00.0000] <Dashiva>
If you look at cases like 'A start tag whose tag name is "frameset"' having 'ignore the token' clearly implies stopping processing immediately

[01:25:01.0000] <hyungrok>
Okay. Thanks for the clarification.

[01:51:00.0000] <Hixie>
hsivonen: hm yeah, i should strip that. i'll file a bug.

[01:51:01.0000] <Hixie>
ifette: i don't have a strong opinion on that one way or the other, happy to spec it either way

[01:52:00.0000] <Hixie>
hyungrok: if the spec isn't clear on this, please don't hesitate to file a bug and i'll look at it more closely (use the widget in the bottom left of the spec to do that)

[01:53:00.0000] <ifette>
Hixie: I have added (in svn) a definition for "The WebSocket Closing Handshake is Started"

[01:53:01.0000] <hsivonen>
Hixie: good to know. Fortunately, I didn't get around to implementing that bit just yet

[01:53:02.0000] <ifette>
 Upon either sending or receiving a Close control frame, it is said

[01:53:03.0000] <ifette>
            that <spanx style='emph'>The WebSocket Closing Handshake is

[01:53:04.0000] <ifette>
              Started</spanx>.

[01:53:05.0000] <Hixie>
hsivonen: done, filed as bug http://www.w3.org/Bugs/Public/show_bug.cgi?id=12677

[01:53:06.0000] <hsivonen>
Hixie: btw, is it intentional to allow stuff like rel=stylesheet on <link> that appears in <body> as microdata?

[01:53:07.0000] <ifette>
i'm going through your email and trying to make sure i add all the hooks you need. if you want, I can also send you a patch for the api spec

[01:54:00.0000] <Hixie>
ifette: nah, i can do the api side. there's a bunch of other stuff i need to fix anyway.

[01:54:01.0000] <ifette>
Hixie: great

[01:54:02.0000] <Hixie>
ifette: awesome news on the protocol side update though, i look forward to it

[01:54:03.0000] <Hixie>
hsivonen: iirc that's not allowed, let me recheck

[01:55:00.0000] <ifette>
Hixie: I'm in Tokyo working with the WS guys. There's a ton of editorial stuff that has been brought up by editorial reviews, but I'm hoping to at least have your hooks done tonight. Will be able to send you a copy that includes that stuff in the next 24h. We're aiming to publish -08 early next week.

[01:55:01.0000] <Hixie>
ifette: i'm out til friday, so likely won't get to it til monday (i expect friday will be 100% dealing with e-mail... you know the drill)

[01:55:02.0000] <ifette>
Hixie: as for errors, I think there's very few errors left anymore, and most trigger a connection close -- let me talk with tyoshino et al, but i think it's probably safe to remove this.)

[01:56:00.0000] <Hixie>
hsivonen: wow, weird, i wonder why we allow both rel="" and itemprop=""

[01:57:00.0000] <hsivonen>
Hixie: anyway, as long as <link> and <a> have different allowed rels, this smells like a bug

[01:57:01.0000] <Hixie>
hsivonen: i think we should disallow rel="" outside <head> for <link>, and make itemprop and rel mutually exclusive -- what do you think?

[01:58:00.0000] <hsivonen>
Hixie: in principle, I think that makes sense

[01:58:01.0000] <hsivonen>
Hixie: however, I can see why someone might want to use both on <a> for backwards compat with tools that only scrape rel

[01:58:02.0000] <hsivonen>
if such tools are real anyway

[01:58:03.0000] <Hixie>
yeah i only mean for <link>

[01:58:04.0000] <Hixie>
agreed on <a>

[01:58:05.0000] <Hixie>
i filed http://www.w3.org/Bugs/Public/show_bug.cgi?id=12678 for <link>

[01:59:00.0000] <hsivonen>
Hixie: thanks

[02:00:00.0000] <Hixie>
ifette: just saw your mail; does our discussion above clarify the issue sufficiently?

[02:08:00.0000] <zcorpan>
hey ifette

[02:08:01.0000] <zcorpan>
/me goes to read backlog

[02:10:00.0000] <ifette>
hey

[02:12:00.0000] <zcorpan>
[10:03] <ifette> Hixie: as for errors, I think there's very few errors left anymore, and most trigger a connection close -- let me talk with tyoshino et al, but i think it's probably safe to remove this.)

[02:12:01.0000] <zcorpan>
ifette: what does that refer to?

[02:12:02.0000] <ifette>
websocket onError event

[02:12:03.0000] <zcorpan>
got a link to your latest draft?

[02:13:00.0000] <ifette>
http://trac.tools.ietf.org/wg/hybi/trac/browser/websocket - still being worked on, will have a new draft next week

[02:14:00.0000] <ifette>
http://trac.tools.ietf.org/wg/hybi/trac/browser/websocket/draft-ietf-hybi-thewebsocketprotocol.xml rather

[02:15:00.0000] <zcorpan>
thanks

[02:17:00.0000] <zcorpan>
ifette: where does it define when onerror is to be invoked?

[02:28:00.0000] <ifette>
it doesn't

[02:37:00.0000] <zcorpan>
Hixie: why the hyphen in cross-origin?

[02:37:01.0000] <Hixie>
why not?

[02:40:00.0000] <zcorpan>
because we generally try to avoid hyphens in element and attribute names

[02:41:00.0000] <Hixie>
we do?

[02:42:00.0000] <zcorpan>
c.f. event-source

[02:42:01.0000] <Hixie>
what was our reasoning on that one again?

[02:42:02.0000] <Hixie>
for attributes we have several precedents

[02:43:00.0000] <Hixie>
accept-charset, http-equiv

[02:43:01.0000] <jgraham>
Consistency, I thought

[02:43:02.0000] <Hixie>
i guess for elements it makes sense

[02:43:03.0000] <Hixie>
i don't really mind either way, i just thought crossorigin="" looked worse than cross-origin=""

[02:43:04.0000] <Hixie>
but it's a trivial matter really

[02:44:00.0000] <Hixie>
if you think it should be crossorigin="" then mail the list, i can change it

[02:44:01.0000] <Hixie>
right now though, i must go sleep

[02:44:02.0000] <Hixie>
nn

[02:51:00.0000] <zcorpan>
i can find http://lists.whatwg.org/pipermail/commit-watchers-whatwg.org/2008/001052.html but not the email where Hixie argues for the rename

[02:54:00.0000] <erlehmann>
zcorpan, i think “cross-origin” is better. easier to read.

[02:54:01.0000] <jgraham>
We tend to use - in author-supplied things

[02:55:00.0000] <jgraham>
Like -data-

[02:55:01.0000] <zcorpan>
/me also finds http://www.w3.org/Bugs/Public/show_bug.cgi?id=6153 which is the date of the rename i think

[02:56:00.0000] <zcorpan>
uh, no it wasn't

[02:59:00.0000] <zcorpan>
http://krijnhoetmer.nl/irc-logs/whatwg/20080707#l-26

[03:01:00.0000] <hsivonen>
Should the validator warn about <meta name> or <link rel> values that are in the "proposal" state?

[03:01:01.0000] <hsivonen>
or should proposals count as silently OK?

[03:02:00.0000] <hsivonen>
/me observes that http://wiki.whatwg.org/wiki/MetaExtensions lacks links to more details

[03:04:00.0000] <hsivonen>
Hixie: any plans to delegate meta extensions to microformats.org, too?

[03:05:00.0000] <hsivonen>
/me observes that the MetaExtensions page has some registrations that are invalid because they claim a space of tokens instead of enumerating tokens

[03:08:00.0000] <zcorpan>
Philip`: video is still on iframe.html

[03:10:00.0000] <zcorpan>
heh, click on cross-origin definition in http://www.whatwg.org/specs/web-apps/current-work/complete/the-iframe-element.html#attr-media-cross-origin

[03:10:01.0000] <hsivonen>
Do the meta name extensions that Nick Levinson added have any specs at a URL?

[03:10:02.0000] <hsivonen>
Should registry entries that fail to link to a spec be removed from the registry?

[03:18:00.0000] <zcorpan>
ok so video is now same-origin by default? is that gonna fly?

[03:19:00.0000] <zcorpan>
"Otherwise, fetch the current media resource, from the media element's Document's origin, with the force same-origin flag set." http://www.whatwg.org/specs/web-apps/current-work/complete/the-iframe-element.html#concept-media-load-resource

[03:19:01.0000] <zcorpan>
foolip: ^

[03:20:00.0000] <foolip>
zcorpan, no, I don't think it's a good idea at all, and intended to complain about it

[03:20:01.0000] <foolip>
but please do it for me

[03:20:02.0000] <zcorpan>
what were you going to say? :)

[03:20:03.0000] <foolip>
actually, the spec already said something along these lines before the recent cross-origin attribute change, but I've ignored the spec on that point

[03:21:00.0000] <zcorpan>
oh?

[03:21:01.0000] <foolip>
I haven't read the diff yet, so I'm not sure what it's trying to do

[03:21:02.0000] <foolip>
but I don't think that the cross-origin attribute should be needed to load <video> elements cross-origin

[03:22:00.0000] <foolip>
IIUC, the current spec suggests that a network error should be the result

[03:22:01.0000] <zcorpan>
ah yeah video had force same-origin before too

[03:23:00.0000] <foolip>
yes, which I ignored, and I think everyone else too

[03:23:01.0000] <foolip>
not sure what the overall philosophy here is

[03:25:00.0000] <zcorpan>
ok filed a bug

[03:25:01.0000] <foolip>
thanks

[06:18:00.0000] <hsivonen>
I curated http://wiki.whatwg.org/wiki/MetaExtensions . Please review.

[06:28:00.0000] <karlcow>
hsivonen: what is the list of requirements?

[06:28:01.0000] <karlcow>
" Proposals that don't meet the requirements for a registration"

[06:29:00.0000] <hsivonen>
karlcow: see the link in the first paragraph of the page

[06:30:00.0000] <hsivonen>
karlcow: now the word "requirements" is also a link in the heading

[06:30:01.0000] <karlcow>
hmm I see. Thanks. :) ah thanks for the modification too.

[06:37:00.0000] <jgraham>
hsivonen: Remind me what was decided about filtering of innerHTML input into the parser and whether it made it into the spec or not

[06:38:00.0000] <hsivonen>
jgraham: no filtering. Not sure if it made into the spec.

[06:39:00.0000] <jgraham>
For anything including CR and so on?

[06:39:01.0000] <hsivonen>
jgraham: oh, CR and CRLF normalization happens

[06:39:02.0000] <jgraham>
/me seems to remember that being the case

[06:40:00.0000] <jgraham>
OK. So no filtering but CR normalization happens

[06:40:01.0000] <jgraham>
I will see if the spec agrees :)

[06:40:02.0000] <hsivonen>
jgraham: let's change the spec if it doesn't :-)

[06:40:03.0000] <jgraham>
Indeed

[06:41:00.0000] <jgraham>
I'm all in favour of this approach

[06:44:00.0000] <hsivonen>
I wonder if I should bother to implement validation for the value of the content attribute when the value of the name attribute is viewport, robots or one of the robot-specific synonyms for robots...

[06:46:00.0000] <zcorpan>
hsivonen: do the robot-specific synonyms have the same syntax and no extensions?

[06:47:00.0000] <hsivonen>
zcorpan: at least when extensions are supported, documentations says they are supported for "robots", too

[06:47:01.0000] <hsivonen>
zcorpan: not sure if some bot-specific synonyms allow a narrower set of tokens only

[06:48:00.0000] <hsivonen>
probably

[06:48:01.0000] <hsivonen>
I'd expect <meta name=googlebot content=NOYDIR> not to be supported by Google

[06:50:00.0000] <hsivonen>
/me wonders how many people use Teoma as their search engine

[06:51:00.0000] <hsivonen>
wow. this is uncool: whenever a Teoma result should point to wikipedia, it points to wiki.ask.com instead

[06:51:01.0000] <hsivonen>
which is just a copy of the wikipedia article

[06:51:02.0000] <hsivonen>
allowed by the license of course.

[06:51:03.0000] <hsivonen>
but still not cool

[06:52:00.0000] <hsivonen>
at least Google didn't go there with Knol

[07:11:00.0000] <roc>
Google didn't go anywhere with Knol

[07:11:01.0000] <roc>
there are quite a few copies of wikipedia floating around trying to get traffic

[07:15:00.0000] <mpilgrim>
it turns out true experts aren't well-motivated by the prospect of earning a few pennies on ads writing on someone else's site

[07:16:00.0000] <mpilgrim>
but content spammers are

[07:16:01.0000] <mpilgrim>
go figure

[07:23:00.0000] <hsivonen>
ok. Validator.nu now checks the value of rel="" and <meta name="">.

[07:23:01.0000] <hsivonen>
enjoy the new strictness

[07:23:02.0000] <hsivonen>
or if you don't enjoy it, please get your unregistered tokens registered!

[07:32:00.0000] <mpilgrim>
/me furiously checks his own sites

[07:33:00.0000] <mpilgrim>
rel="shortcut icon" is invalid now?

[07:33:01.0000] <mpilgrim>
@hsivonen

[07:41:00.0000] <hsivonen>
mpilgrim: not registered according to the requirements set forth in the spec!

[07:42:00.0000] <hsivonen>
also, it appears that no one has registered google-site-verification so far for <meta name>

[07:42:01.0000] <mpilgrim>
does rel="icon" actually work without "shortcut"?

[07:43:00.0000] <hsivonen>
mpilgrim: I don't know. I sure hope Hixie knows and tested before leaving "shortcut" out of the spec!

[07:43:01.0000] <hsivonen>
clearly, having "shortcut" be invalid is not going to be practical

[07:47:00.0000] <jgraham>
Hmm, I assumed that the LC CfC was per-Member, but it seems to be set up as per-individual

[07:47:01.0000] <wilhelm>
/me slaps whoever came up with urn: schemes.

[07:47:02.0000] <hsivonen>
jgraham: it's per-individual

[07:47:03.0000] <jgraham>
hsivonen: Where did the chairs say that?

[07:47:04.0000] <jgraham>
(and why? That doesn't make much sense)

[07:48:00.0000] <matjas>
hsivonen: is validator.nu supposed to error for `rel=me` and `rel=nofollow`? aren’t those registered?

[07:49:00.0000] <hsivonen>
matjas: for rel=me, it's supposed to err until someone fixes the registry

[07:49:01.0000] <hsivonen>
matjas: for rel=nofollow, not supposed to err

[07:49:02.0000] <hsivonen>
/me checks

[07:50:00.0000] <hsivonen>
matjas: <a rel=nofollow> WFM

[07:50:01.0000] <hsivonen>
matjas: <link rel=nofollow> is an error per spec, though

[07:51:00.0000] <hsivonen>
matjas: http://lists.w3.org/Archives/Public/public-html/2011May/0213.html

[07:51:01.0000] <matjas>
my bad, I was testing `rel="me nofollow"` and it just threw an error for `nofollow`

[07:51:02.0000] <hsivonen>
matjas: on which element?

[07:52:00.0000] <matjas>
hsivonen: for `me`, sorry

[07:52:01.0000] <matjas>
/me needs more sleep

[07:52:02.0000] <matjas>
thanks for that link

[08:04:00.0000] <zcorpan>
hmm, i guess whining about rel="shortcut icon" is mostly a time waster

[08:04:01.0000] <zcorpan>
hsivonen: ^

[08:05:00.0000] <hsivonen>
zcorpan: yes, indeed

[08:08:00.0000] <hsivonen>
zcorpan: let's get it registered.

[08:08:01.0000] <hsivonen>
First, gotta find a spec for it.

[08:09:00.0000] <zcorpan>
/me finds http://msdn.microsoft.com/en-us/library/ms537656(v=vs.85).aspx#Associate_the_Icon_with_Your_Web_Page

[08:11:00.0000] <hsivonen>
zcorpan: thanks

[08:11:01.0000] <matjas>
“HTML5” standardizes /favicon.ico anyways

[08:12:00.0000] <hsivonen>
the microformats.org wiki is slow today

[08:12:01.0000] <matjas>
no need to register `shortcut` IMHO

[08:12:02.0000] <zcorpan>
matjas: still a time waster

[08:12:03.0000] <matjas>
most people don’t seem to know about /favicon.ico

[08:12:04.0000] <matjas>
so it may just be helpful

[08:13:00.0000] <zcorpan>
what if you want to use different icons for different pages, or want to locate the icon somewhere else?

[08:14:00.0000] <matjas>
sure

[08:14:01.0000] <matjas>
if oldIE support is a must then you would still use rel="shortcut icon"

[08:15:00.0000] <matjas>
although IMHO /favicon.ico could be considered as graceful degradation for that

[08:15:01.0000] <matjas>
so you could just use `icon`

[08:16:00.0000] <hsivonen>
registering "shortcut" would be easier if the wiki wasn't so slow

[08:16:01.0000] <matjas>
it’s a sign!

[08:17:00.0000] <matjas>
/me runs

[08:20:00.0000] <karlcow>
https://github.com/wireghoul/htshells

[08:23:00.0000] <hsivonen>
aargh. the microformats wiki is completely unusable right now

[08:25:00.0000] <hsivonen>
now there's an FO to advancing HTML5 to REC. that's more like an HTML WG poll.

[08:31:00.0000] <jgraham>
Only from someone who objected to everything

[08:32:00.0000] <mpilgrim>
in retrospect, migrating a 300 MB repository to new hosting while sitting in an internet cafe was not the brightest decision i've ever made

[08:32:01.0000] <mpilgrim>
though it is by no means the dumbest, either

[08:33:00.0000] <Jon47>
lol

[08:35:00.0000] <hsivonen>
jgraham: still, it wouldn't feel like an HTML WG poll without an FO

[08:37:00.0000] <hsivonen>
I sure hope the slowness of the microformats.org wiki is transient. otherwise, the experience for registering stuff is not going to be good.

[08:37:01.0000] <mpilgrim>
tantek can probably fix it once he wakes up

[08:38:00.0000] <mpilgrim>
ironically, the administration of the microformats site is not distributed

[08:39:00.0000] <hsivonen>
hooray, now we have one registration: http://microformats.org/wiki/existing-rel-values#HTML5_link_type_extensions

[08:39:01.0000] <hsivonen>
time to implement it in software

[08:39:02.0000] <jgraham>
This is not news, but occasionally I read emails from a11y taskforce people and get visions of a strange and distressing world. What on earth could a "Text Subteam" possibly be?

[08:41:00.0000] <hsivonen>
jgraham: is there an org chart for the a11y TF?

[08:43:00.0000] <jgraham>
hsivonen: Who knows

[08:43:01.0000] <mpilgrim>
hsivonen: they talked about making one, but it got bogged down in discussions of how to make it accessible

[08:43:02.0000] <jgraham>
I imagine reading it would be like staring into the void

[08:44:00.0000] <hsivonen>
bitbucket is also being slow today

[08:44:01.0000] <jgraham>
Worryingly I can't tell if mpilgrim is serious or not

[08:44:02.0000] <hsivonen>
I wonder if there's something wrong with my connection

[08:46:00.0000] <mpilgrim>
jgraham: what you're experiencing is the a11y version of Poe's Law

[08:46:01.0000] <jgraham>
hsivonen: Microformats wiki seems fine to me

[08:46:02.0000] <mpilgrim>
which states that it's impossible to distinguish between parodies of religious extremism and religious extremism itself

[08:46:03.0000] <mpilgrim>
(and i was kidding, btw)

[08:47:00.0000] <karlcow>
a FO for a wrong dated link…

[08:47:01.0000] <karlcow>
I don't understand

[08:48:00.0000] <karlcow>
I think there is a misunderstanding about what is FO

[08:49:00.0000] <hsivonen>
mpilgrim: rel="shortcut icon" is now valid

[08:50:00.0000] <mpilgrim>
that was quick. i haven't even finished migrating my repository yet (which i was doing so i could check in that fix)

[08:50:01.0000] <jgraham>
karlcow: Since the chairs have propogated the idea that a FO is the only kind of dissent that they will pay attention to, it is not surprising that people use it for trivia

[08:51:00.0000] <karlcow>
specifically when the dated URI is the URI of 24 May WHEN the spec will enter Last Call. Any pub request is always like that

[08:51:01.0000] <karlcow>
it is silly

[08:54:00.0000] <karlcow>
ah MikeSmith has answered. good good http://www.w3.org/mid/20110518134400.GB59744@sideshowbarker

[08:55:00.0000] <MikeSmith>
yeah, I think I've also resolved this problem with the drafts not being static

[08:55:01.0000] <MikeSmith>
by making copies of them and setting up some temporary redirects

[09:00:00.0000] <zcorpan>
hsivonen: rel="shortcut" without icon validates too

[09:00:01.0000] <karlcow>
hsivonen: suggestion for validator.nu (just thoughts), for the values which are not yet accepted but identified in a page would it be interesting to have a Warning text saying "this value is in the list but not formally accepted or rejected. You may [Help](link to the wiki) to fix it."

[09:00:02.0000] <jgraham>
hsivonen: Your msdn link is 404 for me

[09:02:00.0000] <karlcow>
/me thinks poor hsivonen… 3 opera persons bothering him in a row :p

[09:02:01.0000] <hsivonen>
karlcow: there's already a link to the wiki registry. do you mean I should rephrase it?

[09:02:02.0000] <karlcow>
let me check again.

[09:03:00.0000] <hsivonen>
zcorpan: sure, the spec doesn't support co-occurrence constraints for validitity

[09:03:01.0000] <hsivonen>
zcorpan: even though alternate and stylesheet are magic together

[09:03:02.0000] <hsivonen>
jgraham: the link was supposed to be http://msdn.microsoft.com/en-us/library/ms537656%28v=vs.85%29.aspx#Associate_the_Icon_with_Your_Web_Page

[09:04:00.0000] <hsivonen>
did the wiki mangle it?

[09:05:00.0000] <hsivonen>
if someone else has a faster connection to the wiki, feel free to paste in the correct link from IRC

[09:05:01.0000] <hsivonen>
I'm going to go deal with dishes in the kitchen while the wiki loads

[09:07:00.0000] <karlcow>
s/is not registered./is [proposed|rejected]./

[09:07:01.0000] <karlcow>
and when in the category proposed: "You may help get it rejected or accepted… and then the prose with links"

[09:08:00.0000] <hsivonen>
karlcow: for practical purposes, "Proposed" has to count as valid

[09:08:01.0000] <hsivonen>
karlcow: since most things will sit in the "Proposed" state for years

[09:09:00.0000] <zcorpan>
hsivonen: i thought about alternate stylesheet but they can be used alone while shortcut is meaningless alone

[09:09:01.0000] <karlcow>
so I just tried with name="creator" and it says Error

[09:09:02.0000] <hsivonen>
karlcow: otherwise, this would be just another IANA exercise with the designated expert denying validity

[09:09:03.0000] <hsivonen>
karlcow: creator is not registered according to the requirements for registration

[09:09:04.0000] <hsivonen>
(I'm starting to sound like a Designated Expert. Hmm.)

[09:09:05.0000] <karlcow>
ah sorry I might be using the wrong vocabulary

[09:10:00.0000] <karlcow>
I'm talking about this list in which creator is for example

[09:10:01.0000] <karlcow>
http://wiki.whatwg.org/wiki/MetaExtensions#Proposals_that_don.27t_meet_the_requirements_for_a_registration

[09:11:00.0000] <hsivonen>
karlcow: that's a list of stuff that doesn't meet the requirements, so the validator doesn't know about that list

[09:11:01.0000] <karlcow>
This I understood.

[09:12:00.0000] <hsivonen>
zcorpan: it seems a spec amendment would be required for making shortcut without icon invalid

[09:12:01.0000] <karlcow>
What I'm proposing is that the validator knows about it, to speed up rejection or adoption by inviting people to give information on the wiki.

[09:12:02.0000] <karlcow>
As I said just thoughts.

[10:02:00.0000] <hsivonen>
krijnh: it seems the yellow highlights don't get saved

[11:32:00.0000] <linclark>
is this a good channel for asking questions about microdata? or is there another channel for that

[11:35:00.0000] <TabAtkins>
Go ahead.

[11:47:00.0000] <linclark>
is there a list of known consumers of microdata yet? I see that there are notes that parts are ready for first implmentation, I'm not sure whether there have been any

[11:48:00.0000] <TabAtkins>
Google consumes at least some Microdata.

[11:48:01.0000] <TabAtkins>
Dunno if there's a comprehensive list.

[11:49:00.0000] <hsivonen>
TabAtkins: has Google's consumption been investigated for spec compliance?

[11:55:00.0000] <TabAtkins>
hsivonen: Not to my knowledge, but that doesn't mean it hasn't happened.

[12:02:00.0000] <hsivonen>
Hixie: data point: After I added rel and name checking to Validator.nu, 5 people gave me feedback almost immediately

[12:03:00.0000] <hsivonen>
Hixie: 4 of the 5 people were concerned about rel="shortcut icon"

[12:04:00.0000] <hsivonen>
Hixie: considering how popular "shortcut icon" is and considering that Microsoft was the first to mint it before other implemented just "icon", it would make sense to grandfather "shortcut icon"

[12:04:01.0000] <hsivonen>
Hixie: right now, to make the validator not suck, I have to register "shortcut"

[12:04:02.0000] <hsivonen>
Hixie: which means that rel="shortcut" becomes valid

[12:04:03.0000] <hsivonen>
Hixie: which is bogus

[12:04:04.0000] <hsivonen>
Hixie: but the closest approximation that the registration mechanism provides

[12:05:00.0000] <hsivonen>
Hixie: also, the 5th person was interested in the registration of "shortcut" afterwards

[12:11:00.0000] <hsivonen>
btw, bonus points to anyone who can dig up Microsoft documentation that says that Bing pays attention to <meta name=msnbot>

[16:22:00.0000] <AryehGregor>
Did anyone file a bug/make a whatwg post on <http://blogs.msdn.com/b/ieinternals/archive/2011/05/17/url-fragments-and-redirects-anchor-hash-missing.aspx>?

[16:22:01.0000] <AryehGregor>
Oh, it looks like HTTP is being updated to fix it or something?


2011-05-19
[17:34:00.0000] <jamesr>
heycam: what on earth does "UTC format with millisecond resolution" mean?

[17:35:00.0000] <jamesr>
i assume it's supposed to be a number

[17:35:01.0000] <heycam>
jamesr, where does that appear?

[17:35:02.0000] <jamesr>
from jatinder's telecon notes

[17:35:03.0000] <heycam>
/me looks

[17:37:00.0000] <heycam>
the UTC format I'm not sure about, I don't remember that being mentioned

[17:37:01.0000] <heycam>
but the millisecond resolution is probably because we were discussing the use a monotonic clock value as opposed to Date.now()

[17:37:02.0000] <heycam>
and apparently Date.now() precision varies across implementations

[17:37:03.0000] <jamesr>
Date.now() also goes backwards

[17:37:04.0000] <heycam>
right

[17:38:00.0000] <jamesr>
i personally think the right thing to do is to define an interface for intervals that's unrelated to "real world" datetimes, and unaffected by system clock changes

[17:38:01.0000] <heycam>
that it goes backwards, and that it sometimes has less than 1ms accuracy were there arguments for exposing the monotonic clock value as the animationStartTime attribute

[17:38:02.0000] <heycam>
yes I agree

[17:38:03.0000] <jamesr>
and use it for all this

[17:38:04.0000] <jamesr>
need to find time to write an email describing it precisely

[17:38:05.0000] <heycam>
so that reference to "UTC format" I think is bogus

[17:38:06.0000] <jamesr>
cos there are some tricky bits

[17:39:00.0000] <AryehGregor>
Is it just me, or has almost none of the WHATWG cabal voted in the LC poll?  http://www.w3.org/2002/09/wbs/40318/html5-last-call-poll/results

[17:40:00.0000] <AryehGregor>
. . . Was I really the first Google rep to respond?

[17:40:01.0000] <jamesr>
AryehGregor: i don't care about when w3c specs do or do not go to last call, so i haven't voted

[17:40:02.0000] <AryehGregor>
I don't care either as such, but the drama and hassle of the poll failing seems like it would be counterproductive, so I just voted yes across the board.

[17:41:00.0000] <jamesr>
what's the hassle of it failing?

[17:41:01.0000] <AryehGregor>
I expect it would waste some people's time needlessly.

[17:42:00.0000] <hober>
AryehGregor: I voted

[17:42:01.0000] <othermaciej>
people should vote

[17:43:00.0000] <othermaciej>
going to LC is good

[17:43:01.0000] <AryehGregor>
Why, exactly?

[17:43:02.0000] <othermaciej>
there are some people who may try to create drama over it

[17:43:03.0000] <othermaciej>
why is going to LC good?

[17:43:04.0000] <othermaciej>
I don't necessarily believe in the abstract values of W3C Process, but in material terms:

[17:44:00.0000] <othermaciej>
(1) Going to Last Call, especially on a large high-visibility spec, can result in a lot of really valuable review feedback

[17:44:01.0000] <othermaciej>
the SVG 1.2 Tiny Last Call stands out as one that generated a lot of comments

[17:44:02.0000] <AryehGregor>
"The HTML5 testing effort is making some progress thanks to Microsoft, Opera and others."  I wonder how "Microsoft, Opera and others" was arrived upon.

[17:44:03.0000] <othermaciej>
(2) Going to Last Call signals momentum, which is valuable from a marketing perspective

[17:46:00.0000] <AryehGregor>
A lot of comments like this one?  http://lists.w3.org/Archives/Public/www-svg/2004Oct/0088.html

[17:46:01.0000] <othermaciej>
heh :-)

[17:46:02.0000] <othermaciej>
well, in the end, SVG 1.2 Tiny is basically abandoned

[17:47:00.0000] <Philip`>
Since momentum is velocity times mass, and HTML5 is a massive spec, it doesn't need to be moving very fast

[17:47:01.0000] <othermaciej>
the WG is picking up from 1.1 instead afaict

[17:47:02.0000] <othermaciej>
so Hixie's comment was belatedly applied

[17:47:03.0000] <othermaciej>
in a way

[17:47:04.0000] <heycam>
othermaciej, there are some worthwhile improvements from 1.2T that will be brought over. but overall, yes, we're continuing evolution from 1.1

[17:47:05.0000] <AryehGregor>
/me tries to think of some way to nitpick about the relativistic definition of momentum, but can't think of any good ones

[17:48:00.0000] <heycam>
(although I don't see why <video>/<audio> were less approriate for standardisation within svg than within html!)

[18:15:00.0000] <AryehGregor>
othermaciej, when would you expect that the W3C would start publishing an HTML6 draft with the new features that were kicked out of HTML5?

[18:15:01.0000] <othermaciej>
AryehGregor: I do not know

[18:16:00.0000] <AryehGregor>
Presumably long before HTML5 makes it to CR, unless the W3C wants to not participate in HTML development anymore after all.

[18:16:01.0000] <othermaciej>
AryehGregor: I believe we would likely have to recharter to do that, and the chairs asked to hold recharter discussions til after we get to LC

[18:16:02.0000] <othermaciej>
oh yes, my hope is that it's rather soon, though of course, I am not the only one with input

[18:21:00.0000] <jamesr>
Graham Klyne | Formally Object

[18:21:01.0000] <jamesr>
i didn't know that was a poll option

[18:22:00.0000] <roc>
jamesr, heycam: I don't think we should define a new timeline

[18:22:01.0000] <roc>
I think we should just use the Date.now() timeline

[18:22:02.0000] <jamesr>
roc: and have everything break when the clock changes?

[18:23:00.0000] <roc>
yeah

[18:23:01.0000] <roc>
because that's going to break Web pages anyway

[18:23:02.0000] <jamesr>
why not try to do better?

[18:23:03.0000] <roc>
so, don't do that

[18:23:04.0000] <heycam>
ES5 says "The now function return a Number value that is the time value designating the UTC date and time of the occurrence of the call to now."

[18:23:05.0000] <jamesr>
who are you directing not to do that?

[18:23:06.0000] <jamesr>
users with computers that use ntp?

[18:24:00.0000] <roc>
yep

[18:24:01.0000] <jamesr>
there's not a computer in the world with a clock that never adjusts

[18:24:02.0000] <roc>
my understanding is that usually those adjustments can be made without going backwards

[18:24:03.0000] <roc>
and if that's not true, it should be!

[18:24:04.0000] <jamesr>
in practice they are not

[18:24:05.0000] <roc>
then fix that

[18:25:00.0000] <jamesr>
you're gonna fix leap seconds for us?

[18:25:01.0000] <jamesr>
that sounds awesome!

[18:25:02.0000] <roc>
fixing that is actually easier than fixing all the Web pages (and other stuff, I suspect) that depend on Date.now and equivalents not going backwards

[18:25:03.0000] <jamesr>
well, i don't want to define a Date.now() equivalent either

[18:26:00.0000] <jamesr>
in some systems there's a distinction between datetime values, which correspond to real-world dates and times, and intervals

[18:26:01.0000] <roc>
I would handle leap seconds by just holding the clock constant for one second

[18:27:00.0000] <jamesr>
for animations and performance monitoring you care about intervals only

[18:27:01.0000] <roc>
it would actually be pretty trivial in the browser to record the last reported time and never report anything less than that

[18:27:02.0000] <roc>
that would handle most of the issues

[18:27:03.0000] <jamesr>
and most animation libraries do that for Date.now()

[18:27:04.0000] <roc>
if someone's clock is just wrong, well, you lose

[18:27:05.0000] <jamesr>
it's not useful for the performance monitoring case

[18:27:06.0000] <jamesr>
because it biases measurements

[18:27:07.0000] <roc>
for animations and performance monitoring you don't care about a 1-second pause once a year

[18:28:00.0000] <jamesr>
yes, but in the real world NTP clock adjustments are much more frequent than that

[18:28:01.0000] <jamesr>
ntp and other clock adjusting processes

[18:28:02.0000] <roc>
how frequent? and how large?

[18:28:03.0000] <jamesr>
there were quite a few reports of inconsistent timestamps from early navigation timing implementations

[18:29:00.0000] <jamesr>
i think typically on the order of seconds

[18:29:01.0000] <roc>
links?

[18:32:00.0000] <jamesr>
roc: here's one thread on the issue http://lists.w3.org/Archives/Public/public-web-perf/2011Apr/0029.html

[18:35:00.0000] <roc>
thanks

[18:35:01.0000] <roc>
the conclusion in that thread seems satisfactory

[18:35:02.0000] <jamesr>
another issue is that the APIs available to say "please tell me the current time relative to the unix epoch" are more expensive and less precise than the APIs for "please tell me how long it was since some point in this process' past" as the latter is often just reading off a cpu counter

[18:36:00.0000] <roc>
jamesr: I thought Chrome used a hybrid approach?

[18:36:01.0000] <roc>
a hybrid approach is easy enough to do

[18:36:02.0000] <jamesr>
yeah, but since we have to slew there can be some error

[18:36:03.0000] <roc>
that's similar to what Boris suggested and the thread concluded, really

[18:36:04.0000] <jamesr>
on windows the slewing error can accumulate into the measurable range

[18:37:00.0000] <roc>
We could use the same "document time" for animation too

[18:37:01.0000] <jamesr>
yeah, if such a thing existed

[18:37:02.0000] <jamesr>
something like 'milliseconds since the document was created, ignoring any changes to the system clock'

[18:38:00.0000] <roc>
I mean what that thread ended up concluding

[19:49:00.0000] <JoePeck>
is there any particular reason the "placeholder" attribute is a "must not" for <input type="number">?

[19:49:01.0000] <JoePeck>
http://www.whatwg.org/specs/web-apps/current-work/multipage/number-state.html#number-state

[23:28:00.0000] <MikeSmith>
JoePeck: dunno, but I guess because it's not intended to be rendered as a text-input box

[23:28:01.0000] <MikeSmith>
but instead as a select-like control

[23:34:00.0000] <MikeSmith>
no Opera Next updates recently?

[23:35:00.0000] <Hixie>
othermaciej: (1) we're already getting about as much feedback as we can handle, so if announcing LC gives us more feedback, how do you propose we handle it?

[23:35:01.0000] <Hixie>
othermaciej: (2) HTML5 has no problem with marketing. It has too _much_ marketing, if anything.

[23:36:00.0000] <Hixie>
hsivonen: agreed on "shortcut"; file a bug and i'll make the spec say you can precede "icon" with "shortcut"

[23:49:00.0000] <othermaciej>
Hixie: if those are your sentiments then of course you are free to vote no, abstain, not vote, or whatever

[23:51:00.0000] <Hixie>
oh i wasn't presenting those as arguments to justify whatever i do with the poll, just responding to what you wrote

[23:51:01.0000] <Hixie>
i'm curious as to your answer to (1) though

[23:54:00.0000] <MikeSmith>
the main value of a last call round is that at the end of it we produce a formal record of the comments we received and how we responded to them

[23:55:00.0000] <MikeSmith>
so that we can prove to the W3C Director that we have done what we're supposed to, and so that we can get the director's approval to transition to CR

[00:40:00.0000] <hsivonen>
Hixie: ok

[00:46:00.0000] <hsivonen>
so far, polyglot and RDFa are the least consesus-enjoying deliverables on the poll

[01:08:00.0000] <othermaciej>
Hixie: so far I have yet to see an amount of feedback that you can't handle, but I suppose it is possible

[01:08:01.0000] <othermaciej>
Hixie: the drafts other than HTML5 itself have also not necessarily gotten the level of review and feedback that they should have

[01:09:00.0000] <zcorpan>
i know html4-differences needs proper review

[01:09:01.0000] <zcorpan>
i'm going through it myself to find omissions

[02:10:00.0000] <ifette>
Hixie: still up?

[02:11:00.0000] <ifette>
Hixie: The WebSocket protocol uses the term "CONNECTING" exactly once, to say that only one WebSocket connection may be in a CONNECTING state at any point in time

[02:11:01.0000] <ifette>
the definition is not given anywhere for what it means to be CONNECTING

[02:11:02.0000] <ifette>
As such, I'm either going to define the state of the WebSocket connection in the protocol, or just rip that out and leave that constraint for you to put in the API.

[02:12:00.0000] <ifette>
It's pretty trivial for me to define the state of the connection, so I'm happy to do that, but then it's potentially doubly defined (in both the protocol and the api).

[02:12:01.0000] <ifette>
E.g. I have now in the protocol text that says if the server's handshake is validated, the state of the WebSocket connection is OPEN

[02:12:02.0000] <ifette>
I don't think that conflicts with your text, but I'm not sure if it causes any problems...

[02:16:00.0000] <zcorpan>
ifette: i recall somebody pointing out that that DOS protection doesn't make sense for other applications of websocket

[02:17:00.0000] <zcorpan>
ifette: so maybe we should move it to the API spec

[02:28:00.0000] <zcorpan>
/me notes there are 6 issues on HTML5 that are OPEN

[02:28:01.0000] <zcorpan>
othermaciej: can we go to LC with OPEN issues?

[02:28:02.0000] <othermaciej>
zcorpan: yes

[02:28:03.0000] <zcorpan>
oh

[02:28:04.0000] <othermaciej>
zcorpan: er the timeline, they are all classified as LC issues rather than pre-LC issues

[02:29:00.0000] <othermaciej>
i.e. we are treating them as LC comments submitted early

[02:29:01.0000] <zcorpan>
ah, ok

[02:42:00.0000] <zcorpan>
Hixie, MikeSmith: which whatwg svn revision does http://dev.w3.org/html5/spec-LC/ correspond to?

[02:43:00.0000] <MikeSmith>
zcorpan: hang on, checking now

[02:44:00.0000] <MikeSmith>
r6139

[02:45:00.0000] <zcorpan>
thanks

[02:45:01.0000] <hsivonen>
no new feedback about rel="" checking overnight

[02:45:02.0000] <hsivonen>
I guess this means that people *really* care about rel="shortcut icon" but not at all that much about the long tail of rel stuff

[02:47:00.0000] <hsivonen>
does anyone happen to have test cases for rel="   shortcut   icon   " or rel="icon shortcut" to see how those behave in IE?

[02:49:00.0000] <zcorpan>
good thing Julian is paying attention

[02:50:00.0000] <zcorpan>
MikeSmith: i didn't know spec-LC existed yet

[02:50:01.0000] <MikeSmith>
yeah

[02:51:00.0000] <hsivonen>
it seems that Chrome's autoupdater manages to move users from the old version to the new version in about 10 days

[02:52:00.0000] <hsivonen>
I wonder how many days it takes for other browsers

[02:52:01.0000] <hsivonen>
Opera and Safari would be particularly interesting

[02:52:02.0000] <hsivonen>
so far, Firefox and IE seem to take > 365 days :-(

[02:54:00.0000] <hsivonen>
maybe that's not a totally fair comparison considering how the updates have been offered to users of old Firefox and IE versions

[02:54:01.0000] <hsivonen>
but the end result is that Firefox 3.5 and 3.0 as well as IE7 and IE6 are still in the top 12 browser versions

[02:54:02.0000] <jgraham>
It is presumably entirely a result of the fact that Chrome doesn't ask it just does

[02:55:00.0000] <hsivonen>
jgraham: yes

[02:55:01.0000] <hsivonen>
clearly, asking the user is bad for the Web

[02:55:02.0000] <jgraham>
And of the fact that the corporate penetration of Chrome is rather small

[02:56:00.0000] <jgraham>
It is a high risk strategy of course

[02:56:01.0000] <ifette>
jgraham: for corporations, they can deploy a group policy (in windows) to control chrome updates should they choose

[02:56:02.0000] <jgraham>
If you make an update that people don't like they will be very annoyed

[02:57:00.0000] <jgraham>
ifette: Right, but my point is that if there was a high level of chrome usage in those situations the average update time would go up as a result

[02:57:01.0000] <hsivonen>
jgraham: the alternative is that people run vulnerable versions (worse than annoyance) or that old versions need to get security patches forever

[02:57:02.0000] <jgraham>
hsivonen: Oh I agree from the user point of view

[02:57:03.0000] <hsivonen>
jgraham: does Opera have multiple concurrent security patch tracks for desktop?

[02:57:04.0000] <ifette>
or that you never get to use any of the cool new HTML5 features because old browsers stay around forever :)

[02:58:00.0000] <MikeSmith>
zcorpan: about finding omission in the diffs doc, http://goo.gl/EOq6H is a list of resolved validator.nu bugs and might be useful for compasion

[02:58:01.0000] <MikeSmith>
zcorpan: comparison purposes

[02:58:02.0000] <hsivonen>
jgraham: that is, if you are running Opera and want to run a security patched browser, what choices do you have except to always install latest Opera or to quit running Opera and to subscribe to another browser's patch stream?

[02:59:00.0000] <jgraham>
hsivonen: Well I'm not sure what the policy is or whether I could tell you if I was sure :)

[02:59:01.0000] <MikeSmith>
zcorpan: as far as changes made to the validator.nu backend in response to spec changes

[02:59:02.0000] <hsivonen>
I wonder what happens when Chrome changes the UI in a noticeable way for the first time

[03:00:00.0000] <ifette>
hsivonen: we've already changed it multiple times. I'm running Chrome 13, and it looks rather different than Chrome 0.2.

[03:00:01.0000] <ifette>
One could ask the same question of what happens when we change google.com or gmail.com

[03:01:00.0000] <hsivonen>
ifette: hmm. I haven't noticed any UI changes

[03:01:01.0000] <jgraham>
hsivonen: There have been some that I noticed but they are rather subtle

[03:01:02.0000] <hsivonen>
ifette: but I don't run Chrome as my main browser so I don't pay as much attention as a primary user might

[03:01:03.0000] <ifette>
look at wikipedia for screenshots :) new tab page, going from two menus (wrench + page) to one (wrench)

[03:01:04.0000] <ifette>
etc

[03:02:00.0000] <zcorpan>
MikeSmith: thanks

[03:02:01.0000] <ifette>
With Chrome we chose to be more like the web than desktop software. You don't get to choose to run an old version of gmail, you don't worry about updating, etc.

[03:02:02.0000] <jgraham>
It's pretty clear as a model that it allows you to quickly move to local maxima

[03:02:03.0000] <hsivonen>
ifette: with google.com I wish Google didn't offer old versions, so we wouldn't have the problem of Google sending an old google.com UI to a new version of Firefox :-)

[03:03:00.0000] <zcorpan>
MikeSmith: it's still ok for me to fix bugs in html5-differences right?

[03:03:01.0000] <ifette>
:) touche

[03:03:02.0000] <jgraham>
It's not really clear what happens if you try to do something like Skype or Winamp

[03:03:03.0000] <MikeSmith>
zcorpan: yeah, it's separate from the LC poll

[03:03:04.0000] <jgraham>
And change the UI in big ways that not everyone appreciates

[03:03:05.0000] <zcorpan>
MikeSmith: ok

[03:04:00.0000] <ifette>
jgraham: it happens one way or another. It's really no longer practical to run Office 2000 or Office 97, and yet I hate the new office UI with the giant button. At the end though, I don't really have a choice.

[03:04:01.0000] <ifette>
There's some differences in how long the old versions last

[03:04:02.0000] <ifette>
but eventually, the old versions go away.

[03:04:03.0000] <hsivonen>
ifette: you could run LibreOffice and hate the UI even more

[03:04:04.0000] <ifette>
lol

[03:04:05.0000] <jgraham>
ifette: I bet there are still people running old office for just that reason

[03:05:00.0000] <ifette>
May god have mercy on their computers' souls

[03:05:01.0000] <jgraham>
There are probably people still running Wordperfect for DOS

[03:05:02.0000] <ifette>
/me hides his terminal with vi open...

[03:05:03.0000] <jgraham>
Well quite :)

[03:07:00.0000] <jgraham>
Anyway, to be clear, I think that fast-upgrading users is good. But there are definite downsides

[03:08:00.0000] <ifette>
There's downsides to everything in life. I want to bring a Durian into the office and eat it because it's tasty, but everyone around me would probably barf and/or hate me for the year that the smell lingers...

[03:08:01.0000] <ifette>
:)

[03:13:00.0000] <hsivonen>
looks like 40% of Opera usage comes from non-latest version

[03:19:00.0000] <hsivonen>
doh. I can't do math. more like 30%

[03:20:00.0000] <hsivonen>
better than the situation with Firefox, it seems

[03:32:00.0000] <zcorpan>
what does xhr do if you do a same-origin request that redirects to a different origin?

[03:33:00.0000] <hsivonen>
is chaals asking about the LC vote on public-html? or about some other vote?

[03:34:00.0000] <hsivonen>
/me thought the chairs wanted every person to respond individually to the LC poll

[03:35:00.0000] <jgraham>
hsivonen: He is asking about the LC vote

[03:36:00.0000] <jgraham>
AIUI he is asking how the votes from individuals relate to the votes from Members in the case where individuals are representatives of those Members

[03:36:01.0000] <hsivonen>
oh. right. doh. I already responded and thought this was by person

[03:37:00.0000] <jgraham>
Which seems like a reasonable question because I don't think we have had a poll previously where Member opinions were sought and individuals were also allowed to vote

[03:37:01.0000] <hsivonen>
jgraham: indeed. this is very confusing

[03:38:00.0000] <jgraham>
(I infer that Member opinions are being sought since we need N Members to vote to reach quorum)

[03:38:01.0000] <jgraham>
(But the operation of this poll is quite opaque to me)

[03:43:00.0000] <othermaciej>
I believe our intent is to count the number of Members responding for purposes of quorum

[03:43:01.0000] <othermaciej>
so people who are affiliated with various Member orgs should feel free to respond individually and independently

[03:45:00.0000] <hsivonen>
othermaciej: you "believe"???

[03:45:01.0000] <jgraham>
othermaciej: Why? Why not one vote per Member if that's what you plan to count?

[03:46:00.0000] <matjas>
zcorpan: “con for <!--[if IE]><html class=ie><![endif]-->: conditional comments before X-UA-Compatible meta makes IE ignore the meta, IIRC.” → Thanks! Let’s see if I can find a link

[03:46:01.0000] <hsivonen>
othermaciej: FWIW, I thought the poll was per-person when I responded, because the polling system wasn't in the per-Member mode

[03:46:02.0000] <othermaciej>
hsivonen: I am qualifying my statement because I did not actually draft the poll

[03:46:03.0000] <hsivonen>
i.e. the system said "you are identified as Henri Sivonen"

[03:46:04.0000] <othermaciej>
so I don't want anyone to get mad at me if they disagree

[03:46:05.0000] <othermaciej>
but… it says:

[03:47:00.0000] <othermaciej>
"Since Last Call publication is necessary for progress of the group and this is a non-technical question, we will decide it by counting votes. A quorum for these votes is at least 50 working group participants, including at least half of the 54 participating W3C member organizations. Provided we have a quorum and at least 2/3rds of the non-blank votes are 'yes', the question carries."

[03:47:01.0000] <hsivonen>
as opposed to saying "you are identified as Henri Sivonen representing Mozilla Foundation"

[03:47:02.0000] <othermaciej>
the relevance of citing that this is a non-technical question is that this is the Process criterion for whether votes are by individual or by org

[03:47:03.0000] <hsivonen>
huh?

[03:48:00.0000] <hsivonen>
/me goes read the Process

[03:49:00.0000] <hsivonen>
othermaciej: can you point me to the relevant part of the Process?

[03:50:00.0000] <othermaciej>
more relevantly: Paul Cotton is the one who did draft it, and he encouraged multiple Microsoft employees to respond, so I think it is very likely that he would agree with my interpretation

[03:50:01.0000] <othermaciej>
http://www.w3.org/2005/10/Process-20051014/policies.html#Votes

[03:51:00.0000] <othermaciej>
"A group may also vote to make a process decision. For example, it is appropriate to decide by simple majority whether to hold a meeting in San Francisco or San Jose (there's not much difference geographically)."

[03:51:01.0000] <jgraham>
I don't think the real question is "can multiple individuals from the same Member respond", since clearly it is set up so they can

[03:51:02.0000] <othermaciej>
going to LC is a process decision

[03:51:03.0000] <jgraham>
I think the question is "what do the votes mean in this case"

[03:52:00.0000] <othermaciej>
"Given that there is a formal vote from a member organisation, is it OK for other employees of that organisation to give individual votes (as would be the case if they were just invited experts)?"

[03:52:01.0000] <othermaciej>
that was the question on public-html

[03:52:02.0000] <othermaciej>
the short answer is "yes"

[03:52:03.0000] <jgraham>
Right. I agree with that

[03:52:04.0000] <othermaciej>
the longer answer is "yes, it is not only ok, but encouraged"

[03:52:05.0000] <jgraham>
I still don't understand why it has been set up this way

[03:52:06.0000] <othermaciej>
the longer than that answer is that we will count the individual votes

[03:53:00.0000] <othermaciej>
the odd quorum requirements and 2/3 threshold were picked to match the survey for when HTML5 published its FPWD

[03:53:01.0000] <jgraham>
Right and that is confusing because individuals representing Members aren't really independent votes in most cases

[03:54:00.0000] <jgraham>
So on questions where there is explicit vote counting going on having a Member's influence weighted by its number of participants seems strange

[03:55:00.0000] <othermaciej>
http://www.w3.org/2002/09/wbs/40318/wd-html5-spec/

[03:56:00.0000] <othermaciej>
the intent was to match this

[03:56:01.0000] <othermaciej>
note, that survey was counted by individual, though organizational quorum was also checked

[03:57:00.0000] <othermaciej>
I suppose in one respect we failed, because that survey was set up to be by-org

[03:57:01.0000] <othermaciej>
I will have to get back to you

[03:57:02.0000] <jgraham>
Yes, that survey has the setup I would expect

[03:57:03.0000] <jgraham>
Or at least closer to it

[03:59:00.0000] <hsivonen>
othermaciej: FWIW, if the Chairs decide to run this in a per-Member mode, I think a new poll set up the right way and with a deadline further in the future would be appropriate

[04:00:00.0000] <othermaciej>
I will check with my co-chairs to make sure I am not confused about the intent

[04:00:01.0000] <hsivonen>
othermaciej: for example, I won't be around to revise my response to defer to dbaron before the deadline, since I'll be away from office Fri-Sun

[04:01:00.0000] <othermaciej>
I will certainly advocate that if we change the survey midstream, we also extend the deadline

[04:01:01.0000] <othermaciej>
your concern is understandable

[04:03:00.0000] <hsivonen>
fwiw, this is now the second poll in a row where the instructions have confused me

[04:04:00.0000] <hsivonen>
it could be that my reading comprehension  really sucks and that I should go into a more lawyerly mode when reading the poll instructions

[04:04:01.0000] <hsivonen>
or it could be that the Chairs post really confusing instructions

[04:04:02.0000] <othermaciej>
what was the last poll where the instructions confused you?

[04:05:00.0000] <hsivonen>
othermaciej: the wording about choosing "one option"

[04:05:01.0000] <hsivonen>
othermaciej: which turned out to mean that the response to each question was in a radio button mode

[04:05:02.0000] <hsivonen>
othermaciej: but I initially thought it had some bearing across questions

[04:06:00.0000] <othermaciej>
which poll was this?

[04:06:01.0000] <hsivonen>
maybe my reading comprehension indeed simply sucks

[04:06:02.0000] <othermaciej>
the license one?

[04:06:03.0000] <hsivonen>
othermaciej: the license poll

[04:06:04.0000] <othermaciej>
ok

[04:06:05.0000] <othermaciej>
for future polls, I will try to read the wording with my human interface designer hat on

[04:25:00.0000] <jgraham>
/me will respond to the poll as an individual for now

[04:43:00.0000] <zcorpan>
/me has voted

[05:12:00.0000] <jgraham>
If I have an interface with a caller that accepts DOMString and another that accepts a long and I call an object implementing the interface with an object that has both a valueOf and a toString method, what gets called?

[05:13:00.0000] <jgraham>
That is one interface, two methods on that interface implementing callers for different types

[05:13:01.0000] <jgraham>
heycam|away: ^

[05:14:00.0000] <zcorpan>
so why is <fieldset name> valid but <img name> is not?

[05:19:00.0000] <Lachy>
jgraham, WebIDL has a note about that ambiguity

[05:20:00.0000] <jgraham>
In related news, why are we adding callers for named properties to new APIs?

[05:20:01.0000] <jgraham>
No one should be using callers there anyway

[05:20:02.0000] <jgraham>
Lachy: Pointer?

[05:20:03.0000] <Lachy>
http://dev.w3.org/2006/webapi/WebIDL/#dfn-distinguishable

[05:20:04.0000] <Lachy>
See the note just below that

[05:22:00.0000] <jgraham>
The spec should just Do The right Thing in this specific case

[05:23:00.0000] <jgraham>
Which is to act like property lookup and prefer index properties

[05:23:01.0000] <jgraham>
But also, we shouldn't add any more of these caller s

[05:59:00.0000] <zcorpan>
anyone have input on http://www.w3.org/Bugs/Public/show_bug.cgi?id=12689 ?

[06:28:00.0000] <smaug____>
huh Google instant is just terrible

[06:35:00.0000] <hsivonen>
smaug____: how?

[06:36:00.0000] <smaug____>
hsivonen: when you move mouse over the result page, all sorts of popup-like things are shown

[06:36:01.0000] <smaug____>
(the preview of the pages)

[06:37:00.0000] <smaug____>
if I know which link I'm going to click, I don't want to see any those previews

[06:37:01.0000] <smaug____>
they just slow down user interaction

[06:38:00.0000] <hsivonen>
smaug____: I think that feature is called something other than "instant"

[06:39:00.0000] <hsivonen>
(I don't get it on my "instant")

[06:39:01.0000] <Philip`>
It's the Google Slower feature

[06:39:02.0000] <zcorpan>
Google Ininstant

[06:40:00.0000] <smaug____>
hsivonen: well, I managed to disable that feature by disabling google instant

[06:40:01.0000] <smaug____>
Philip`: indeed

[06:47:00.0000] <hsivonen>
looks like Graham Klyne accidentally Formally Objected again to the alt doc

[06:50:00.0000] <hsivonen>
I wonder which validator bug I should fix next...

[06:50:01.0000] <zcorpan>
new xml parser?

[06:51:00.0000] <zcorpan>
hmm i want anolis xdoc xref for http://www.w3.org/Bugs/Public/show_bug.cgi?id=12696

[06:51:01.0000] <jgraham>
"being told my document is invalid is demeaning and negatively affects my self-worth"?

[06:52:00.0000] <jgraham>
/me presumes hsivonen has at least one bug report like that

[06:52:01.0000] <Philip`>
/me wonders if a validator's error messages could have a "shut up, I know you don't like this but I'm doing it anyway due to compatibility or laziness or whatever" button next to them, which hides those messages for that user and also provides statistics that can inform updates to the spec's conformance requirements

[06:53:00.0000] <Philip`>
jgraham: Maybe the validator should always return either "valid" or "not valid yet", to sound more positive

[06:59:00.0000] <jgraham>
"Your document conforms to a unique syntax that you just invented! Aren't you clever!"

[07:00:00.0000] <mpilgrim>
jgraham: that's what XHTML2 Modularization was all about

[07:02:00.0000] <mpilgrim>
Philip`: "your document is a unique snowflake and it deserves to be loved just the way it is"

[07:02:01.0000] <hsivonen>
frankly, I expected to see more action at http://microformats.org/wiki/existing-rel-values#HTML5_link_type_extensions over the first 24 hours

[07:03:00.0000] <hsivonen>
I guess I'm misestimated the level of interest in this stuff

[07:03:01.0000] <zcorpan>
hsivonen: clearly your next validator task must have more bang for the buck

[07:04:00.0000] <hsivonen>
zcorpan: "whine about implied tags" might be it, then

[07:05:00.0000] <mpilgrim>
interest will pick up once people realize what crazy shit got cut from the spec

[07:05:01.0000] <zcorpan>
good candidate

[07:05:02.0000] <mpilgrim>
/me checks to see if feelgoodvalidator.org is available

[07:05:03.0000] <mpilgrim>
hixie always said he wanted competing validators

[07:05:04.0000] <mpilgrim>
not sure this is what he meant

[07:06:00.0000] <jgraham>
Did he ever say he wanted them to compete on accuracy?

[07:06:01.0000] <hsivonen>
/me tries to figure out if Content-Language is valid this week

[07:06:02.0000] <hsivonen>
it's not, it seems

[07:06:03.0000] <zcorpan>
mpilgrim: will it play "aow, i feel good, dadadadadadada" when it validates?

[07:07:00.0000] <mpilgrim>
no, because html5 audio is a clusterfuck and i refuse to use flash

[07:07:01.0000] <hsivonen>
oh cool. MikeSmith has already fixed that one

[07:07:02.0000] <zcorpan>
use <bgsound>

[07:07:03.0000] <MikeSmith>
hsivonen: which one?

[07:07:04.0000] <hsivonen>
MikeSmith: Content-Language

[07:08:00.0000] <hsivonen>
MikeSmith: making it invalid

[07:08:01.0000] <MikeSmith>
ah

[07:08:02.0000] <mpilgrim>
so, i honestly haven't been paying attention. has the w3c published their obsolete version of html yet?

[07:08:03.0000] <MikeSmith>
yeah

[07:08:04.0000] <zcorpan>
mpilgrim: no

[07:08:05.0000] <zcorpan>
mpilgrim: 24th

[07:08:06.0000] <mpilgrim>
really?

[07:08:07.0000] <mpilgrim>
wow

[07:08:08.0000] <zcorpan>
if the poll carries

[07:09:00.0000] <mpilgrim>
is that the final obsolete version, or just another interim obsolete version?

[07:09:01.0000] <MikeSmith>
hsivonen: I guess I forgot to close that bug

[07:09:02.0000] <MikeSmith>
hsivonen: oh, or I think I flied a duplicate bug for it myself

[07:09:03.0000] <zcorpan>
mpilgrim: i assume the latter

[07:10:00.0000] <mpilgrim>
ok, now that my books' repositories are working again, the #1 request in my inbox is to mention that non-Opera browsers finally support form validation of required fields

[07:14:00.0000] <mpilgrim>
damn, github is fast

[07:26:00.0000] <hsivonen>
for the sizes attribute, are these both valid: sizes="any any" and sizes="any 42x42"?

[07:27:00.0000] <hsivonen>
"The values must all be either an ASCII case-insensitive match for the string "any", or a value that consists of two valid non-negative integers that do not have a leading U+0030 DIGIT ZERO (0) character and that are separated by a single U+0078 LATIN SMALL LETTER X or U+0058 LATIN CAPITAL LETTER X character."

[07:27:01.0000] <hsivonen>
does that mean that all the values have to be "any" or all the values have to be of the form 42x42?

[07:27:02.0000] <hsivonen>
or does it mean that they all must be of either form?

[07:29:00.0000] <hsivonen>
also, is sizes only valid if rel contains the keyword icon?

[07:29:01.0000] <hsivonen>
what about apple-touch-icon if someone registers it?

[07:29:02.0000] <hsivonen>
Hixie: ^

[07:39:00.0000] <Philip`>
/me reads it as "The values must each be [either X or Y]", not "The values must either [all be X] or [all be Y]", and doesn't think he would have thought to interpret it the other way

[07:40:00.0000] <Philip`>
(not that I'd disagree with disambiguating it)

[07:41:00.0000] <hsivonen>
hmm. glazou voted to no advancing HTML5 to LC

[07:41:01.0000] <hsivonen>
citing longdesc as the first thing

[07:41:02.0000] <kost-bebix>
Hi everyone! When I do a simple test with html5lib with none tree builder set -- it returns me None (instead of simpletree). Why? http://paste.pocoo.org/show/391813/

[07:44:00.0000] <othermaciej>
I didn't know he was a longdesc fan

[07:47:00.0000] <othermaciej>
"This document does not meet the quality level of other LCWDs in the Consortium."

[07:47:01.0000] <zcorpan>
/me would like to extend mpilgrim's question with "why do we have a longdesc attribute?"

[07:48:00.0000] <MikeSmith>
kost-bebix: dunno, but maybe because if don't tell it what tree builder to use, it doesn't actually build a tree

[07:48:01.0000] <MikeSmith>
or do the docs say it defaults to using simpletree?

[07:49:00.0000] <kost-bebix>
MikeSmith: yeah, but it's first example from http://code.google.com/p/html5lib/wiki/UserDocumentation :-)

[07:49:01.0000] <MikeSmith>
ah

[07:49:02.0000] <kost-bebix>
I mean, html5lib.parseFragment(u'<a href="asd">dsa</a>')

[07:50:00.0000] <kost-bebix>
returns None

[07:50:01.0000] <zcorpan>
/me concludes that <html> does not belong in "changed elements"

[07:50:02.0000] <kost-bebix>
anyway, I think you always need a custom DOM builder

[07:50:03.0000] <kost-bebix>
so I'll just skip that

[07:51:00.0000] <zcorpan>
mpilgrim: why do we have a longdesc attribute?

[07:52:00.0000] <mpilgrim>
is that a serious question? like "why do we have an <img> element" kind of question?

[07:53:00.0000] <mpilgrim>
i don't know. i'd have to do some archaeology

[07:53:01.0000] <zcorpan>
it is :)

[07:53:02.0000] <othermaciej>
my vague understanding of the history is:

[07:53:03.0000] <mpilgrim>
at one point i tried to do some research into why we have a table summary attribute

[07:53:04.0000] <othermaciej>
alt was originally added as an attribute, because img was already a void element

[07:53:05.0000] <mpilgrim>
it was added between drafts and no one knows why

[07:53:06.0000] <othermaciej>
then people realized this didn't allow markup in the fallback

[07:53:07.0000] <othermaciej>
so longdesc was the patch

[07:54:00.0000] <mpilgrim>
people were already using d-links (literally, a link with the single character "d" as the link text) to point to a longer description

[07:54:01.0000] <othermaciej>
indeed

[07:54:02.0000] <mpilgrim>
so the use of a URL instead of inline text was probably informed by that as well

[07:55:00.0000] <mpilgrim>
but i don't know how much discussion there was of the exact semantics, or where that discussion took place

[07:55:01.0000] <hsivonen>
https://twitter.com/#!/manusporny/status/71212215612620800

[07:56:00.0000] <mpilgrim>
based on my table summary research, my educated guess would be "somebody thought of it and they spent 5 minutes discussing the name of the attribute and then they put it in and that was that"

[07:56:01.0000] <mpilgrim>
but i'm cynical that way

[07:56:02.0000] <hsivonen>
check out what the tweetworthy embedded data actually is

[07:56:03.0000] <mpilgrim>
bbiab, meeting

[07:58:00.0000] <zcorpan>
mpilgrim: it has caused considerably more time afterwards. with that in mind we should probably be careful when adding new stuff to the spec

[07:59:00.0000] <Philip`>
/me likes how most of the structured data is in an rdfs:comment with only whitespace between values and following keys so the only reasonable way to parse it is with regexps

[08:02:00.0000] <zcorpan>
i don't like having "The head element no longer allows the object element as child." in Changed Elements because i don't want to enumerate all content model changes in Changed Elements

[08:02:01.0000] <Philip`>
Am I misreading the markup, or is it using rel="gr:..." mostly in places outside of the element that declares xmlns:gr so it should be treated as an unbound prefix?

[08:16:00.0000] <hsivonen>
Philip`: you are not misreading

[08:17:00.0000] <Philip`>
What's the RDF.rb Distiller doing, then?

[08:18:00.0000] <Philip`>
Ignoring prefix bindings entirely?

[08:18:01.0000] <hsivonen>
Philip`: dunno

[08:22:00.0000] <linclark>
Philip`: sorry, I missed the link you are referring to, but I might be able to help... which page was it?

[08:25:00.0000] <hsivonen>
linclark: http://xn--fwg.ws/rdfafail

[08:26:00.0000] <Philip`>
hsivonen: Opera refuses to open that URL

[08:27:00.0000] <hsivonen>
Philip`: RFCs are fun

[08:27:01.0000] <hsivonen>
Philip`: either Opera is wrong or the .ws registry has issues domains that violate IDN

[08:28:00.0000] <linclark>
Philip`: I checked that with mark birbeck's RDFa parser and it looks like the prefix is actually bound for all the instances it catches. I'll look at the markup to see what is going on

[08:28:01.0000] <wilhelm>
Philip`: opera:config#Network|IDNAWhiteList

[08:29:00.0000] <hsivonen>
linclark: gr:typeOfGood is unbound

[08:29:01.0000] <wilhelm>
:no:jp:de:se:kr:tw:cn:at:dk:ch:li:museum:hu: are whitelisted. But failing to load the punycode URL sounds odd.

[08:30:00.0000] <Philip`>
wilhelm: Oh, okay, so it's not just Opera objecting to URLs that express negative feelings towards RDFa

[08:31:00.0000] <hsivonen>
Philip`: is a claim of RDFa FAIL a negative feeling if it is an objective observation?

[08:32:00.0000] <wilhelm>
Negative feelings backed by objective observation are the best.

[08:32:01.0000] <linclark>
one problem with the example itself I believe is that it has no mapping for the currency prefix

[08:33:00.0000] <linclark>
that is coming back as unmapped for me using Check RDFa

[08:34:00.0000] <hsivonen>
wilhelm: I admit to having negative feelings about RDFa but they are backed by objective observations

[08:35:00.0000] <hsivonen>
in other news, people on twitter see Chrome's and Opera's close relationship with Flash in an Apple context

[08:35:01.0000] <linclark>
ok, took me a while to find it in Check RDFa, but typeOfGood is coming back as bound in that. I'll check the markup

[08:37:00.0000] <hsivonen>
should I bother fixing <style scoped> bugs in the validator? when are we going to drop <style scoped> from the spec?

[08:46:00.0000] <Lachy>
is there a plan to drop style scoped from the spec?

[08:46:01.0000] <linclark>
Philip`: honestly, from the markup it seems like you should be right about them being unbound. I'm not sure why the Check RDFa parser returns them as bound. I've asked in swig, will ping here if I get a reply

[08:47:00.0000] <hsivonen>
Lachy: there probably should be unless there's a plan to implement it

[08:53:00.0000] <Lachy>
hsivonen, my assumption is that browsers will implement it along with support for the :scope pseudo-class, for which there does seem to be interest in implementing

[08:54:00.0000] <othermaciej>
Lachy: when we come up with our CR exit criteria, if style scoped still has no implementations then it should be listed as "at risk"

[08:54:01.0000] <othermaciej>
(in my opinion anyway)

[08:55:00.0000] <Peter`>
afaik there are plans to implement <style scoped> in WebKit as it's needed for XBL2

[09:02:00.0000] <Lachy>
othermaciej, yes, for CR, I agree. But I don't think it should be dropped yet

[09:02:01.0000] <othermaciej>
well listing as "at risk" doesn't even mean dropping it for CR

[09:03:00.0000] <Lachy>
I know

[09:11:00.0000] <linclark>
Philip`: you were right, the prefix should be unmapped

[09:11:01.0000] <linclark>
it seems RDF .rb and Check RDFa are lax. But those triples wouldn't be registered in any23 or rapper

[09:29:00.0000] <Philip`>
linclark: Ah, good to know RDFa consumers are no more reliable than RDFa producers :-)

[09:30:00.0000] <linclark>
Philip`: yeah, it's unfortunate because it makes it hard to tell if you really wrote compliant RDFa. btw, do you know if there are any implementations of microdata consumers yet?

[09:30:01.0000] <Lachy>
dglazkov, (or anyone else working on webkit) did you end up implementing pseudo-elements in WebKit for <details> and <summary> support?

[09:30:02.0000] <Philip`>
linclark: I have no idea

[09:31:00.0000] <dglazkov>
Lachy: yep

[09:31:01.0000] <Lachy>
what are they?

[09:32:00.0000] <Lachy>
I tried the ones mentioned in bug 56967, but they don't seem to work in the latest webkit nightly

[09:33:00.0000] <dglazkov>
Lachy: there's -webkit-details-marker

[09:34:00.0000] <karlcow>
doh. Lachy. Formal objection… sigh

[09:34:01.0000] <Lachy>
karlcow, ?

[09:34:02.0000] <dglazkov>
Lachy: and that's it at the moment

[09:34:03.0000] <Lachy>
ok

[09:35:00.0000] <dglazkov>
Lachy: look here for implementation details: http://codesearch.google.com/codesearch/p#OAMlx_jo-ck/src/third_party/WebKit/Source/WebCore/html/HTMLDetailsElement.cpp

[09:35:01.0000] <dglazkov>
http://codesearch.google.com/codesearch/p#OAMlx_jo-ck/src/third_party/WebKit/Source/WebCore/html/HTMLSummaryElement.cpp

[09:35:02.0000] <Lachy>
then at this stage, that won't be too incompatible with Opera's plans to reuse list-item and implement ::marker

[09:35:03.0000] <karlcow>
Formal Objection should be only reserved in very strong technical case. The way it is used in HTMLWG is mesmerizing

[09:35:04.0000] <dglazkov>
Lachy: probably

[09:35:05.0000] <dglazkov>
FTDRswaqjuKMOOOOGHFDGFFRTAAA 

[09:35:06.0000] <dglazkov>
oops

[09:35:07.0000] <dglazkov>
sorry was cleaning my keyboard

[09:36:00.0000] <Lachy>
dglazkov, though, I'd like still like to get some clearer feedback from you about why you think the shadow DOM approach is better than reusing list-item styles?

[09:39:00.0000] <dglazkov>
Lachy: because it fits pretty well conceptually.

[09:39:01.0000] <dglazkov>
Lachy: and honestly I don't really understand list-item approach. I tried chewing on the wall of text you sent earlier, but a tl;dr monkey distracted me

[09:40:00.0000] <Philip`>
karlcow: Presumably it's used because the only objections that anyone takes seriously are Formal Objections and "I can't live with this", and nobody wants to have to die after losing a decision so they go with an FO

[09:42:00.0000] <Lachy>
dglazkov, the aim of the list-item approach is simply to make implementation as simple as possible, reusing as much existing CSS implementation as we can, and avoid the various problems we encountered when experimenting with shadow-dom elements for this

[09:42:01.0000] <karlcow>
silly

[09:43:00.0000] <sydlawrence>
Repurposing the Hash Sign for the New Web http://www.w3.org/2001/tag/2011/01/HashInURI-20110115 Anyone have any thoughts on this?

[09:44:00.0000] <dglazkov>
Lachy: .. and I basically say that if there are problems with using shadow DOM, they are bugs we need to fix :)

[09:47:00.0000] <dglazkov>
Lachy: shadow DOM is my hammer, and by golly these nails are going in

[09:49:00.0000] <othermaciej>
the shadow knows

[09:49:01.0000] <dglazkov>
:)

[09:50:00.0000] <dglazkov>
Lachy: overall, the shadow DOM-based design fits the spirit of other controls in WebKit better

[09:50:01.0000] <dglazkov>
Lachy: so perhaps it's a tactical decision

[09:51:00.0000] <Lachy>
dglazkov, webkit still seems to be doing some magic to make the marker stick to the same line as the summary, even when the summary is styled with display: inline;

[09:52:00.0000] <Lachy>
It doesn't address the issue of <summary>Summary</summary> vs. <summary> Summary</summary> (note the space, which gets inserted into the rendering where it probably shouldn't)

[09:52:01.0000] <dglazkov>
Lachy: there shouldn't be any magic -- but there could be bugs

[09:53:00.0000] <dglazkov>
and if the bugs are advanced enough, they are indistinguishable from magic

[09:54:00.0000] <Lachy>
dglazkov, in fact, it's not possible to style: summary { display: inline; } since it's always seems to be treated as inline-block or something like that;

[09:56:00.0000] <Lachy>
dglazkov, see http://software.hixie.ch/utilities/js/live-dom-viewer/saved/999

[09:59:00.0000] <Lachy>
dglazkov, all those problems I can find with webkit's implementation are avoided using the approach I suggested, since it doesn't introduce any magic, nor rely on a partial/buggy XBL2 or other shadow dom implementation

[10:02:00.0000] <zcorpan>
hsivonen: i brought up tinyarrows.ws not working in opera with some of our developers and he said they were invalid according to IDNA2008 because they contained punctuation, or something

[10:07:00.0000] <dglazkov>
Lachy: the new shadow DOM in WebKit is pretty young. We'll fix those bugs. I still don't understand what you say by "magic"

[10:08:00.0000] <Lachy>
dglazkov, what I mean is that your rendering implementation is doing things that are not fully describable with CSS, and which apparently cannot be overridden with author styles.

[10:08:01.0000] <dglazkov>
Lachy: if it does, it's a bug

[10:08:02.0000] <dglazkov>
Lachy: and I am sure there are plenty

[10:09:00.0000] <dglazkov>
shadow DOM's whole point is that it does not do magic

[10:09:01.0000] <dglazkov>
from my point of view, the list-item-based impl is the one that has magic

[10:10:00.0000] <dglazkov>
though this magic is encapsulated into CSS

[10:11:00.0000] <Lachy>
given it's apparent immaturity though, the unnecessary complexity introduced, and that what you've done with details/summary right now looks like it's going to force us to end up with a mess like the fieldset/legend styling issues, it seems better to avoid the whole issue by taking a simpler approach

[10:12:00.0000] <dglazkov>
Lachy: how will we end up with fieldset/legend styling issues?

[10:12:01.0000] <othermaciej>
I would like it if <details> could be implemented with pure CSS

[10:12:02.0000] <othermaciej>
seems hard to do that if you want nice animations and everything

[10:13:00.0000] <hsivonen>
zcorpan: It will be interesting to see who caves in first: Opera or registries issuing non-compliant names

[10:13:01.0000] <Lachy>
dglazkov, because there are cases where it is currently impossible to restyle, and because even when those issues are fixed, there are still undesirable consequences that can all be avoided

[10:13:02.0000] <othermaciej>
I tried to do it once and the two blockers were inability to address text node children of an element with a selector, and inability to animate to/from auto values in CSS transitions

[10:13:03.0000] <dglazkov>
othermaciej: shadow DOM supports animations. I am not sure what the distinction here is between pure and impure CSS

[10:13:04.0000] <othermaciej>
dglazkov: I mean that the rendering of <details> could in theory with a few extensions be implemented solely as rules in the CSS stylesheet

[10:14:00.0000] <othermaciej>
with no need for a shadow DOM or any custom renderers

[10:14:01.0000] <othermaciej>
right now I think details/summary in webkit have custom renderers

[10:14:02.0000] <zcorpan>
hsivonen: yeah

[10:14:03.0000] <othermaciej>
"div" is an example of an element where the default rendering is defined purely in the stylesheet, mapping to generic CSS rendering

[10:15:00.0000] <dglazkov>
othermaciej: these just need to be yanked out

[10:15:01.0000] <othermaciej>
it is cool when more elements can do that

[10:15:02.0000] <zcorpan>
hsivonen: my guess is that we will continue to follow the spec and only adjust for compat based on how many bugs we get

[10:15:03.0000] <Lachy>
dglazkov, the only thing that is needed for the approach I'm suggesting is optional support for ::marker pseudo-element (not needed initially), and a shadow element around the content (excluding the summary) for hiding and showing

[10:15:04.0000] <othermaciej>
I am not sure I understand Lachy's list marker proposal though

[10:15:05.0000] <dglazkov>
othermaciej: we already whittled away RenderSummary to basically nothing http://codesearch.google.com/codesearch/p#OAMlx_jo-ck/src/third_party/WebKit/Source/WebCore/rendering/RenderSummary.h

[10:15:06.0000] <zcorpan>
hsivonen: i know i don't follow your links when it has a funny character in it :)

[10:16:00.0000] <othermaciej>
a bonus to implementing rendering of an element purely in CSS is that you can totally customize everything about it as an author

[10:16:01.0000] <Lachy>
othermaciej, it's easy. summary { display: list-item; list-style-type: -x-disclosure; } and ::marker as currently specced in CSS3

[10:16:02.0000] <othermaciej>
Lachy: it's not obvious to me how to make the disclosure triangle animate with that approach

[10:16:03.0000] <othermaciej>
in my half-assed attempt to implement details in CSS, I made the disclosure triangle an image in ::before content

[10:17:00.0000] <othermaciej>
so it could be rotated with a transition

[10:17:01.0000] <Lachy>
othermaciej, it needs to be rendered as a native control anyway by default, per previous discussions, and that native disclosure control would have to handle that itself. But authors can use CSS animations and transforms to animate ::marker themselves if they like

[10:18:00.0000] <othermaciej>
I don't know what you mean by "as a native control"

[10:18:01.0000] <Lachy>
I mean, a platform specific disclosure widget

[10:18:02.0000] <Lachy>
either a triangle like on Mac or plus icon or whatever the platform typically uses.

[10:18:03.0000] <othermaciej>
that is certainly not how I would implement it in WebKit

[10:19:00.0000] <othermaciej>
I would make it match the look and behavior on Mac

[10:19:01.0000] <othermaciej>
on Windows I would probably use a similar triangle UI because Windows doesn't really natively have this control

[10:19:02.0000] <othermaciej>
I wouldn't use any OS APIs for the drawing in any case

[10:19:03.0000] <Lachy>
"I would make it match the look and behavior on Mac" - how is that different from what I just said?

[10:20:00.0000] <othermaciej>
that can be done with the use of a bitmap and an animation curve

[10:20:01.0000] <othermaciej>
no need for "a native control"

[10:20:02.0000] <Lachy>
well, we got feedback from our dev rel guys and other discussions on whatwg saying that people want controls that match the platform.

[10:21:00.0000] <othermaciej>
AppKit does have a disclosure control it provides as some type of NSControl, but we certainly wouldn't use that as part of the implementation

[10:21:01.0000] <Lachy>
it doesn't matter that much if that's implemented with an actual native control, of simulated with platform specific bitmaps

[10:22:00.0000] <othermaciej>
I guess what I'm not clear on is why using a list marker is superior to using ::before

[10:22:01.0000] <Lachy>
but we don't really want a Mac specific disclosure triangle rendering on Linux, or vice versa

[10:22:02.0000] <othermaciej>
I concede that it totally might be

[10:22:03.0000] <othermaciej>
but I do not know the reason

[10:23:00.0000] <Lachy>
We considered using ::before. It was one of my early experiments, but there were problems with it. I can't remember exactly what they were

[10:23:01.0000] <TabAtkins>
othermaciej: The way to animate the disclosure triangle is to do a transform on ::marker, once ::marker is supported.

[10:23:02.0000] <othermaciej>
I made a reasonable simulation with ::before

[10:23:03.0000] <TabAtkins>
In general, I think the platform should stay out of ::before/::after.  Those are useful for a variety of things for authors.

[10:24:00.0000] <othermaciej>
my only problems were that I couldn't easily style just the children of <details> that are not the <summary>, and I couldn't animate to/from an auto value (for the expand/collapse animation)

[10:24:01.0000] <TabAtkins>
othermaciej: Lea Verou came up with a hack for that - animate max-height from a reasonable guess to 0. ^_^

[10:25:00.0000] <othermaciej>
that is not a great hack

[10:25:01.0000] <Lachy>
dglazkov, this is another problem with WebKit's current approach  http://software.hixie.ch/utilities/js/live-dom-viewer/saved/1000

[10:25:02.0000] <othermaciej>
animation will look quite wrong if your guess is off by more than a factor of 2 or so

[10:25:03.0000] <TabAtkins>
Lucky 1000, Lachy!

[10:26:00.0000] <Lachy>
the content of summary::before is rendered before the marker. list-item and ::marker solve that problem

[10:26:01.0000] <TabAtkins>
othermaciej: Indeed, it's not perfect.  But it's at least *doable* now, until we wise up and actually fix Transitions.

[10:27:00.0000] <othermaciej>
hmm my demo no longer works because it collides with WebKit's built-in implementation

[10:27:01.0000] <othermaciej>
but you can see it here file:///Volumes/SnowLeopard/Users/mjs/Work/src/Safari/OpenSource/Websites/webkit.org/demos/hover-summary/example1.html

[10:27:02.0000] <Lachy>
a web link would be useful :-)

[10:27:03.0000] <othermaciej>
TabAtkins: Apple has a thing for actually making the UI perfect, not just "close enough most of the time"

[10:27:04.0000] <othermaciej>
er sorry

[10:27:05.0000] <othermaciej>
http://www.webkit.org/demos/hover-summary/example1.html

[10:27:06.0000] <othermaciej>
look at the source

[10:27:07.0000] <dglazkov>
Lachy: we don't support :before/after with shadow DOM yet

[10:27:08.0000] <dglazkov>
still working on that

[10:28:00.0000] <othermaciej>
as an extra weird thing the summary appears on hover in this case

[10:28:01.0000] <othermaciej>
you get double triangles and clicking doesn't work

[10:28:02.0000] <othermaciej>
and for some reason it focuses

[10:30:00.0000] <Lachy>
dglazkov, how do you intend to fix that?

[10:30:01.0000] <othermaciej>
I think the current WebKit details implementation is worse in UI quality than my old CSS+JS demo

[10:30:02.0000] <Lachy>
do you intend to allow the shadow dom to define where ::before and ::after get rendered or something?

[10:31:00.0000] <othermaciej>
I shall have to fix it at some point

[10:31:01.0000] <Lachy>
othermaciej, your demo works in Opera

[10:31:02.0000] <Lachy>
but you could fix it to use <div class="details"> instead of <details>

[10:32:00.0000] <othermaciej>
yah probably

[10:32:01.0000] <Lachy>
othermaciej, my implementation is here. http://lachy.id.au/dev/2011/details.html

[10:34:00.0000] <Lachy>
dglazkov, what are you intending to do about keyboard focus? It doesn't look like it currently works at all, making it inaccessible

[10:35:00.0000] <dglazkov>
Lachy: make it work? :)

[10:35:01.0000] <dglazkov>
Lachy: looking at your implementation, I don't understand what the fuss is all about

[10:36:00.0000] <dglazkov>
the only difference that I see is that you use a list-item marker and can't handle the cases of mulitple-missing details elements

[10:36:01.0000] <Lachy>
dglazkov, what do you mean?

[10:37:00.0000] <dglazkov>
Lachy: :) that's a difficult question to answer. What do you mean what do I mean?

[10:37:01.0000] <Lachy>
"multiple-missing details elements" doesn't make sense to me

[10:38:00.0000] <dglazkov>
Lachy: ah

[10:38:01.0000] <dglazkov>
Lachy: multiple/missing summary element

[10:38:02.0000] <dglazkov>
got them confused

[10:39:00.0000] <Lachy>
the missing summary element needs to be handled by a shadow DOM. i.e. one gets inserted if there isn't an explicit one.

[10:39:01.0000] <TabAtkins>
Multiple <summary>s are easy - "details > summary:first-of-type".

[10:39:02.0000] <Lachy>
multiple summary is handled, as TabAtkins said

[10:39:03.0000] <TabAtkins>
Missing requires a different mechanism, yeah.

[10:39:04.0000] <dglazkov>
ok, so we still need shadow DOM

[10:39:05.0000] <dglazkov>
then your only problem is that we use a DIV to represent a marker?

[10:40:00.0000] <Lachy>
yes, and with the previously mentioned bugs

[10:40:01.0000] <Lachy>
the <span id="content"> in my demo is also representing a shadow DOM element.

[10:40:02.0000] <dglazkov>
Lachy: so sounds like the actionable way to proceed is to build some sort of conformance test suite

[10:41:00.0000] <dglazkov>
Lachy: and make us fix all the bugs

[10:41:01.0000] <dglazkov>
Lachy: I am not dead-set on the marker being a div

[10:41:02.0000] <Lachy>
dglazkov, yes. But from an authoring perspective, it would be nice if we could reach some agreement about how the styling is achieved, so that authors don't have to target multiple browsers differently

[10:41:03.0000] <dglazkov>
Lachy: that's just an implementation detail to me at the moment

[10:44:00.0000] <dglazkov>
Lachy: sounds like a good goal. What's in the way for WebKit to implement this your way?

[10:44:01.0000] <dglazkov>
Lachy: support for :marker sounds like one

[10:46:00.0000] <Lachy>
dglazkov, allowing details and summary to be restyled by authors however they like, including display: inline; which, as I said before, is currently broken.

[10:46:01.0000] <dglazkov>
Lachy: yeah -- that's where the conformance tests should help

[10:46:02.0000] <dglazkov>
Lachy: I don't see them as a big deal, they are just steps in the course we're currently on

[10:47:00.0000] <dglazkov>
Lachy: the marker is different, since it's something we weren't planning to jump on right awawy

[10:47:01.0000] <Lachy>
there are still some open issues regarding how exactly to hide and show the content, such that the shadow element used to do that doesn't interfere with the rendering in any other way.

[10:47:02.0000] <dglazkov>
I think display:transparent is the new future weapon of mass construction

[10:47:03.0000] <Lachy>
there was previous discussion of display: transparent; for that

[10:47:04.0000] <Lachy>
yes

[10:47:05.0000] <dglazkov>
with shadow DOM, it will be pretty necessary

[10:48:00.0000] <Lachy>
I just need to convince our layout team that that's the right approach

[10:48:01.0000] <Lachy>
just with display: transparent, that is. Our initial experiemental implementation did some oither internal magic to deal with it

[10:50:00.0000] <dglazkov>
ok. where is :marker described?

[10:51:00.0000] <TabAtkins>
The Lists spec.

[10:51:01.0000] <TabAtkins>
Which'll go to LC at the end of the month.

[10:51:02.0000] <dglazkov>
gimme url or say no more

[10:51:03.0000] <TabAtkins>
dev.w3.org/csswg/css3-lists

[10:52:00.0000] <dglazkov>
so the hard question is... who's implementing ::marker in WebKit? :)

[10:52:01.0000] <dglazkov>
not it

[10:54:00.0000] <TabAtkins>
dglazkov: Just copypasta the ::before implementation.

[10:55:00.0000] <Lachy>
dglazkov, are you still planning to implement a pseudo-element to select the details content area?

[10:56:00.0000] <dglazkov>
Lachy: probably not. That was just me freehanding the design

[10:56:01.0000] <dglazkov>
morrita-san didn't need it

[10:57:00.0000] <Lachy>
ok. Do you currently have a shadow DOM element around the content area though that you use to hide/show the content?

[10:59:00.0000] <dglazkov>
Lachy: nope.

[10:59:01.0000] <Lachy>
how does it work then?

[10:59:02.0000] <dglazkov>
Lachy: it's a hack at the moment: http://codesearch.google.com/codesearch/p#OAMlx_jo-ck/src/third_party/WebKit/Source/WebCore/html/HTMLDetailsElement.cpp&l=206

[10:59:03.0000] <Lachy>
I see in your code: ensureShadowRoot()->appendChild(DetailsContentElement::create(document()), ec, true);

[11:00:00.0000] <dglazkov>
basically don't create a renderer if closed

[11:00:01.0000] <dglazkov>
Lachy: yes, that's the actual <content> element

[11:00:02.0000] <dglazkov>
it's not renderered or matched in css

[11:00:03.0000] <dglazkov>
it's essentially an injection point

[11:01:00.0000] <Lachy>
Oh, right. You mean the <content> element in XBL2?

[11:01:01.0000] <dglazkov>
Lachy: yup

[11:01:02.0000] <Lachy>
ok

[11:02:00.0000] <dglazkov>
Lachy: we should replace that hack with something more natural to CSS, but not sure what yet

[11:02:01.0000] <dglazkov>
you want to be able to animate opening/closing

[11:03:00.0000] <dglazkov>
Lachy: but that's a problem we need to solve for shadow DOM in general, so I am not worried

[11:03:01.0000] <Lachy>
yeah, that would require either a pseudo-element that authors can animate, or authors to insert an explicit <div> or something

[11:03:02.0000] <dglazkov>
Lachy: right

[11:04:00.0000] <dglazkov>
Lachy: basically, I am here to move shadow DOM forward. The details/summary is just a byproduct :)

[11:04:01.0000] <dglazkov>
a yak shave

[11:05:00.0000] <Lachy>
I'm thinking if the shadow DOM were like this <details><summary/><::details-content>xxx</::details-content></details>, then that would allow authors to do the CSS transitions, but where the UA styles is [open]>::details-content { display: transparent; } [closed]>::details-content { display: none; }

[11:06:00.0000] <Lachy>
er, not [closed], but you know what I mean

[11:06:01.0000] <TabAtkins>
Well, skip the child combinator.

[11:06:02.0000] <TabAtkins>
[open]::details-content

[11:06:03.0000] <Lachy>
yeah, that too

[11:33:00.0000] <JoePeck>
is there any particular reason the "placeholder" attribute is a "must not" for <input type="number">?

[11:33:01.0000] <JoePeck>
http://www.whatwg.org/specs/web-apps/current-work/multipage/number-state.html#number-state

[11:52:00.0000] <AryehGregor>
JoePeck, mostly these attributes are prohibited unless Hixie saw some specific use-case for allowing them.

[11:53:00.0000] <AryehGregor>
The idea is that it makes the first version easier to implement, I guess.

[11:53:01.0000] <AryehGregor>
You only need to implement placeholders for text or similar inputs.

[11:53:02.0000] <AryehGregor>
The idea of type=number is you get something with little arrows that can increase or decrease it, usually, and it's not obvious how that should interact with placeholders' behavior of "it disappears as soon as you focus the input".

[11:54:00.0000] <cying>
is it possible to select the last line of a text block before the overflow?

[11:54:01.0000] <cying>
(i'm wondering how to do multi-line text wrapping with last line ellipsis text overflow)

[11:54:02.0000] <AryehGregor>
"Select" how?  With CSS?

[11:54:03.0000] <cying>
yes

[11:54:04.0000] <AryehGregor>
Like :first-line?  I don't think that's possible, no.

[11:54:05.0000] <AryehGregor>
Could be wrong.

[11:54:06.0000] <cying>
something like... :last-line { text-overflow: ellipsis; }

[11:55:00.0000] <cying>
i know that doesn't work, but was wondering if anyone was thinking about that for future CSS work

[11:55:01.0000] <AryehGregor>
TabAtkins might know.

[11:55:02.0000] <TabAtkins>
No, you can't.  However, pretty sure there are plans for a property to control the display of the last-line overflow somehow.

[11:56:00.0000] <JoePeck>
AryehGregor: thanks for the explanation.

[11:56:01.0000] <JoePeck>
AryehGregor: I don't think a placeholder is any more confusing with up/down than up/down is with a blank input

[11:56:02.0000] <AryehGregor>
/me shrugs

[11:56:03.0000] <AryehGregor>
File a bug if you have a use-case.

[11:57:00.0000] <JoePeck>
AryehGregor: kk, thanks

[12:02:00.0000] <hober>
AryehGregor: for the record, I play nethack full-screen. :)

[12:03:00.0000] <AryehGregor>
hober, how many times have you ascended?

[12:05:00.0000] <hober>
AryehGregor: sadly never

[12:05:01.0000] <AryehGregor>
Me: http://alt.org/nethack/plr.php?player=Simetrical

[12:05:02.0000] <cying>
thanks TabAtkins and AryehGregor

[12:05:03.0000] <cying>
good stuff

[13:20:00.0000] <AryehGregor>
jgraham, do you think assert_not_throws() would be useful?  Just so that if an exception is thrown, the assert failure message can give you an idea of where it failed, if the test function is relatively long.

[13:28:00.0000] <The_8472>
is there an IRC channel about the CSS specs too?

[13:28:01.0000] <AryehGregor>
On w3.org there is, but I don't think it's very busy.

[13:28:02.0000] <AryehGregor>
Here's probably a better place to ask.

[13:29:00.0000] <The_8472>
mhm. i've found something in the CSS3 columns module that seems to be under-specified

[13:30:00.0000] <The_8472>
namely what should happen if a float appears before a multi-column block. current browser implementations behave counter-intuitively

[13:30:01.0000] <gsnedders>
The_8472: sending mail to www-style is almost certainly the right thing to do

[13:30:02.0000] <The_8472>
ok, i'll do that

[14:10:00.0000] <The_8472>
... oh great. stupid mailing list. they don't obfuscate email addresses and won't send it unless i agree to publish -.-

[14:11:00.0000] <The_8472>
whoever had that idea needs to be shot

[14:16:00.0000] <TabAtkins>
Um, if you're relying on people obfuscating your email address in order to avoid spam in this day and age, you're doing it wrong.

[14:16:01.0000] <jcranmer>
I get spam in my inbox like twice a year

[14:17:00.0000] <jcranmer>
which is not the same number as the number of times I get spam in my email address

[14:17:01.0000] <TabAtkins>
Precisely.

[14:18:00.0000] <TabAtkins>
I get a bit more, since I receive a little over 50 spam a day, but still, it's only about one a week that makes it to my inbox.

[14:20:00.0000] <TabAtkins>
(Currently 30-day average is 55.5/day.)

[14:25:00.0000] <zewt>
the worst is mailing list archives that strip email addresses entirely; i've spent hours tracking people down because of that nonsense

[14:28:00.0000] <TabAtkins>
Definitely.

[14:33:00.0000] <The_8472>
<TabAtkins> Um, if you're relying on people obfuscating your email address in order to avoid spam in this day and age, you're doing it wrong. <- no, i don't rely on that. i don't use my normal addresses to post to such lists

[14:34:00.0000] <The_8472>
but it would be nice if they did, i'd have to juggle less temporary addresses that way

[14:34:01.0000] <TabAtkins>
My point is that you should assume that *all* lists aren't obfuscating your address.  Public lists like www-style are syndicated by many third parties, which can do whatever they want with your email as well.

[14:34:02.0000] <TabAtkins>
Just don't use temporary addresses.  Get a spam filter and live your life.

[14:35:00.0000] <Dashiva>
The spammers might even subscribe!

[14:35:01.0000] <AryehGregor>
Does anyone have any bright ideas on how I can do automated tests for how browsers behave in contenteditable when you hit Enter?

[14:35:02.0000] <AryehGregor>
WebKit appears to support an insertLineBreak command, but no one else does.

[14:35:03.0000] <Dashiva>
Would using selenium work?

[14:35:04.0000] <The_8472>
just... fire a keydown event?

[14:35:05.0000] <Ms2ger>
War

[14:35:06.0000] <AryehGregor>
I sort of would like to avoid manual tests here.

[14:35:07.0000] <Ms2ger>
Watir*?

[14:36:00.0000] <AryehGregor>
Or something as complicated and heavyweight as Selenium or Watir.

[14:36:01.0000] <AryehGregor>
Or something as Ruby-dependent as Watir.

[14:37:00.0000] <AryehGregor>
But I guess the answer then is "no", huh?

[14:37:01.0000] <AryehGregor>
Oh well.

[14:37:02.0000] <Ms2ger>
The synth event doesn't work, presumably?

[14:37:03.0000] <AryehGregor>
How would I do that?

[14:37:04.0000] <gsnedders>
The answer is no. Gecko/WebKit have elevated privilage modes that introduce JS APIs for it.

[14:37:05.0000] <gsnedders>
Ms2ger: No, it doesn't.

[14:38:00.0000] <AryehGregor>
I had hoped that maybe there was a special way to do it that would work for contenteditable.

[14:38:01.0000] <AryehGregor>
You never know.

[14:38:02.0000] <Ms2ger>
And we're removing that mode, fwiw

[14:38:03.0000] <AryehGregor>
/me searches mxr for an authoritative list of supported commands

[14:38:04.0000] <gsnedders>
Ms2ger: Replacing it with what?

[14:38:05.0000] <gsnedders>
Ms2ger: Because I assume you aren't moving to just having manual tests :P

[14:38:06.0000] <AryehGregor>
(Ugh, why is mxr always so slow?)

[14:39:00.0000] <Ms2ger>
No, we'll still provide APIs for tests

[14:39:01.0000] <Ms2ger>
But currently, any web page can request those privileges

[14:40:00.0000] <gsnedders>
Ms2ger: Ah.

[14:40:01.0000] <gsnedders>
Ms2ger: I didn't know normal web pages could. And request how?

[14:41:00.0000] <Ms2ger>
navigator.enablePrivilege are something like that?

[14:41:01.0000] <Ms2ger>
s/are/or/

[14:41:02.0000] <Ms2ger>
/me can't type

[14:41:03.0000] <AryehGregor>
That sounds scary?

[14:41:04.0000] <Ms2ger>
Yes

[14:41:05.0000] <AryehGregor>
I mean, a page that has these privileges can do a lot, no?

[14:42:00.0000] <Ms2ger>
Why do you think we want to remove it? :)

[14:43:00.0000] <AryehGregor>
Oh.

[14:43:01.0000] <AryehGregor>
So how will the tests work?

[14:43:02.0000] <Ms2ger>
<Ms2ger> No, we'll still provide APIs for tests

[14:43:03.0000] <Ms2ger>
Look for SpecialPowers

[14:43:04.0000] <AryehGregor>
Ms2ger, do you happen to know where in the Gecko source I might find an authoritative list of supported edit commands?

[14:44:00.0000] <Ms2ger>
I can look, what's the API entry point?

[14:44:01.0000] <AryehGregor>
document.execCommand()

[14:45:00.0000] <AryehGregor>
Random command to search for: insertHorizontalRule

[14:45:01.0000] <AryehGregor>
I could probably search for that, actually.

[14:45:02.0000] <AryehGregor>
/me is hg pulling on his ancient mozilla-central checkout

[14:45:03.0000] <AryehGregor>
/me estimated time of completion: forever

[14:46:00.0000] <Philip`>
/me is beginning to get the feeling that AryehGregor may not be a giant fan of Hg

[14:46:01.0000] <jcranmer>
yep

[14:46:02.0000] <AryehGregor>
Philip`, actually, in this case I was more thinking of the fact that I haven't updated the checkout for months.  I'm pretty sure git wouldn't be too fast here either.

[14:46:03.0000] <jcranmer>
Philip`: pulling mozilla-central is quite abnormally long

[14:46:04.0000] <AryehGregor>
Although it might be faster.

[14:47:00.0000] <jcranmer>
since it's on the order of '0000s of changesets

[14:47:01.0000] <AryehGregor>
A full kernel checkout from kernel.org takes maybe fifteen minutes on my cable connection, IIRC.

[14:48:00.0000] <Ms2ger>
(Hmm, insertBrOnReturn)

[14:48:01.0000] <AryehGregor>
nsHTMLDocument.cpp?

[14:48:02.0000] <AryehGregor>
(mxr search seems very fast, but viewing files is crazy slow . . .)

[14:50:00.0000] <AryehGregor>
Looks like the MDC docs are almost complete, nothing new here.

[14:51:00.0000] <Ms2ger>
http://mxr.mozilla.org/mozilla-central/source/content/html/document/src/nsHTMLDocument.cpp#3099

[14:51:01.0000] <AryehGregor>
Yeah, I just found that a couple minutes ago.  Thanks.

[14:51:02.0000] <AryehGregor>
Now, of course, my hg pull has completed.

[14:57:00.0000] <AryehGregor>
Ah, and the one command I didn't recognize (gethtml) seems to immediately fail if you try to execCommand() it.

[15:03:00.0000] <TabAtkins>
Too much Mass Effect - I can't make myself un-see GethTML.

[15:08:00.0000] <AryehGregor>
Oh, insertLineBreak in WebKit is useless to me.  It doesn't simulate Enter, it just inserts <br>.

[15:09:00.0000] <AryehGregor>
So I guess I'll put off speccing that.

[15:09:01.0000] <AryehGregor>
(we *really* need a way to simulate keyboard input for spec tests)

[15:22:00.0000] <heycam>
jgraham, as currently specced, the case you mentioned earlier should actually result in a TypeError -- overload resolution is reasonably strict. you've got two types the argument could be (DOMString and long), and the overload resolution algorithm says if you pass in an object for that argument, then you should only consider operations with object or interface types at that position

[15:23:00.0000] <heycam>
jgraham, that this behaviour is pretty different from the no-overloading case, where any type of argument is accepted and coerced, is one of the reasons I don't like how overloading is handled currently

[15:46:00.0000] <Yuhong>
I have been playing with the W3C CSS 2.1 test suite in IE using Developer Tools to switch modes.

[15:46:01.0000] <Yuhong>
It was fun.

[15:46:02.0000] <linclark>
in microdata, if you have a property that takes an <a> as it's object, can you override the value (which would be the src attribute) by using the content attribute?

[15:50:00.0000] <TabAtkins>
linclark: No.  If you put @itemprop on an <a>, it automatically refers to the @href of the <a>.  Either add a <span> to your markup that can take the @itemprop instead (so you can use the textContent), or put in a <meta> instead to supply arbitrary content.

[15:50:01.0000] <linclark>
TabAtkins: thanks!

[15:51:00.0000] <linclark>
TabAtkins: do you have any recommendations for microdata references?

[15:55:00.0000] <TabAtkins>
What level of reference do you want?

[15:56:00.0000] <TabAtkins>
The spec works reasonably well.  I have a blog post <http://www.xanthir.com/blog/b4570> about it.  Otherwise, try html5doctor, perhaps?

[15:56:01.0000] <linclark>
TabAtkins: I'm probably looking for more advanced, especially comparisons with RDFa

[15:56:02.0000] <TabAtkins>
Ah, dunno then.

[15:56:03.0000] <linclark>
TabAtkins: thanks for the link, will read

[15:57:00.0000] <TabAtkins>
There is only a tiny subset of things that rdfa can do that Microdata can't easily do, related to graphs with circular references.

[15:57:01.0000] <TabAtkins>
Since most data is tree-structured, the two are equivalent in power, and Microdata is easier to read and write.

[15:58:00.0000] <linclark>
yeah, I have a bit of experience with RDFa and know it has some real usability issues

[16:11:00.0000] <TabAtkins>
I don't understand how, sometimes, when I'm pasting from a view-source window into a text editor, a seemingly random smattering of linebreaks are doubled.  I think this applies to both chrome and FF.

[16:15:00.0000] <aho>
sometimes = with windows-style linebreaks (i guess)

[16:17:00.0000] <TabAtkins>
That's what I'd assume, if I didn't author this text myself in a single editor, so I know the linebreaks should all be the same.

[16:23:00.0000] <aho>
must be underpants gnomes then

[16:23:01.0000] <aho>
btw just saw that google io talk which mentioned mdv

[16:23:02.0000] <aho>
awesome stuff :o

[16:24:00.0000] <TabAtkins>
Yeah, the one with the two Alexes?

[16:24:01.0000] <aho>
http://www.youtube.com/watch?v=qzA60hHca9s

[16:24:02.0000] <aho>
alex russel, ian fette, and someone else

[16:24:03.0000] <aho>
:>

[16:24:04.0000] <aho>
http://code.google.com/p/mdv/

[16:24:05.0000] <aho>
http://code.google.com/p/experimental-css/ <- also nice :)

[16:25:00.0000] <aho>
i'm f-ing excited about both things

[16:25:01.0000] <aho>
heh

[16:25:02.0000] <TabAtkins>
Alex Komoroske was the other.

[16:26:00.0000] <TabAtkins>
And yus, it's all exciting!

[16:27:00.0000] <aho>
i think we might actually see this stuff somewhat soonish on smartphones

[16:27:01.0000] <aho>
(relatively speaking)

[16:27:02.0000] <aho>
e.g. once webkit got proxy support we could use that mdv "shim" thing

[16:37:00.0000] <cying>
TabAtkins: like your response to HTML5 last call poll

[16:44:00.0000] <TabAtkins>
Heh, thanks, I guess.

[16:48:00.0000] <aho>
aw man... there are so many talks :I

[16:50:00.0000] <TabAtkins>
OH: If I were ever to design a hashing function, I'd try to set things up so that hash(0) = 0. Even if that meant appending a final step to the algorithm:

[16:50:01.0000] <TabAtkins>
"XOR with da39a3ee5e6b4b0d3255bfef95601890afd80709".

[16:50:02.0000] <gsnedders>
We really need to implement all the ES5 stuff in Carakan…

[16:51:00.0000] <aho>
how much is missing?

[16:51:01.0000] <aho>
forEach, map, and friends do work for example

[16:51:02.0000] <gsnedders>
aho: Object stuff, Function.prototype.bind, and strict mode

[16:52:00.0000] <aho>
proxies :D

[16:56:00.0000] <Philip`>
TabAtkins: Why? (It sounds risky to mess with the usual cryptographic hash properties like that)

[16:57:00.0000] <TabAtkins>
Philip`: A static xor like that won't touch the crypto properties at all.


2011-05-20
[17:05:00.0000] <Philip`>
TabAtkins: It'll cause things like h(h(0)) = 0 which sounds dodgy since algorithms wouldn't expect that

[17:05:01.0000] <TabAtkins>
It'

[17:05:02.0000] <TabAtkins>
It's just a fixed point, which can happen anyway.

[17:06:00.0000] <Philip`>
Normally finding fixed points of a hash should be computationally infeasible

[17:08:00.0000] <The_8472>
<TabAtkins> OH: If I were ever to design a hashing function, I'd try to set things up so that hash(0) = 0. Even if that meant appending a final step to the algorithm: <- why would you do that?

[17:09:00.0000] <TabAtkins>
The_8472: So it's easier to recognize when you're hashing the empty string?

[17:09:01.0000] <The_8472>
empty string != 0x00

[17:33:00.0000] <TabAtkins>
The_8472: For hashing purposes, they *are* equal, aren't they?  An empty string should be equivalent to a string of nulls

[17:33:01.0000] <The_8472>
no

[17:33:02.0000] <The_8472>
an empty string has a length of 0. a null byte has the length of 1

[17:34:00.0000] <TabAtkins>
Yes, but hashes run over integers, not strings.  What's the difference in the input number?

[17:34:01.0000] <Philip`>
When hashing arbitrary strings, you usually append a 1 bit and then as many 0 bits as necessary to reach the block size

[17:34:02.0000] <TabAtkins>
Ah, that would do it.

[17:34:03.0000] <Philip`>
because otherwise "x" and "x\0" would hash to the same thing

[17:34:04.0000] <TabAtkins>
Yeah, that makes sense then.

[17:34:05.0000] <The_8472>
Philip`, the hash algorithms already do that

[17:34:06.0000] <The_8472>
you don#t have to do it manually

[17:35:00.0000] <Philip`>
Depends what part you consider the hash algorithm :-)

[17:35:01.0000] <TabAtkins>
The hash preprocessor does it. ^_^

[17:35:02.0000] <The_8472>
the whole merkle-demgard construction, not just the core function

[23:37:00.0000] <myakura>
zcorpan, re the form attribute example in html5-diff draft (section 3.2), I see form and id values don't match (form=foo vs. id=test). Do you mean you want to show the input isn't associated with the form? http://dev.w3.org/html5/html4-differences/#new-attributes

[23:45:00.0000] <Akilo>
saluton

[00:52:00.0000] <matjas>
hsivonen: Since 13 January 2011, the character encoding declaration is now allowed to be within the first 1024 bytes instead of the first 512 bytes.

[00:52:01.0000] <matjas>
hsivonen: Can haz validator.nu update?

[00:52:02.0000] <matjas>
http://www.w3.org/TR/html5-diff/

[00:58:00.0000] <matjas>
http://www.whatwg.org/specs/web-apps/current-work/multipage/semantics.html#charset

[02:14:00.0000] <myakura>
matjas, https://bitbucket.org/validator/htmlparser/src/tip/src/nu/validator/htmlparser/impl/Tokenizer.java#cl-1173 says 512 so it might not.

[02:14:01.0000] <matjas>
myakura: I know, that’s why I’m asking for an update :)

[02:19:00.0000] <myakura>
matjas: :) I didn't even know that's been implemented. http://bugzilla.validator.nu/show_bug.cgi?id=413 is still open :)

[02:25:00.0000] <matjas>
line 14662 of validator/spec/html5.html says ”<li id=charset1024><span id=charset512 title="">The element containing the character encoding declaration must be serialized completely within the first 1024 bytes of the document.</span></li>”

[02:26:00.0000] <matjas>
that’s weird

[03:31:00.0000] <matjas>
The `id=charset512`, I mean

[03:34:00.0000] <Philip`>
That's just for compatibility with people linking to old #charset512 URLs, I believe

[04:35:00.0000] <Spacechimp>
wow

[04:36:00.0000] <Spacechimp>
Lots of folks here

[04:36:01.0000] <Spacechimp>
I have a question about websocket handshakes

[04:36:02.0000] <Spacechimp>
specifically draft-ietf-hybi-thewebsocketprotocol-00

[04:37:00.0000] <Spacechimp>
and how to go about formulating the response

[04:37:01.0000] <Spacechimp>
this wikipedia article touches on it, http://en.wikipedia.org/wiki/WebSockets

[04:37:02.0000] <Spacechimp>
but its kinda murky

[04:38:00.0000] <Spacechimp>
anyone have a better resource?

[04:42:00.0000] <tomasf>
you've read the actual draft, right? :)

[04:42:01.0000] <Spacechimp>
no

[04:42:02.0000] <tomasf>
http://tools.ietf.org/html/draft-ietf-hybi-thewebsocketprotocol-00

[04:43:00.0000] <Spacechimp>
ah, thank you Tomasf

[04:43:01.0000] <tomasf>
np

[04:43:02.0000] <Spacechimp>
I did see it, but didn't realize I could scroll down  :P

[04:50:00.0000] <reschke>
actually, what you *want* to read is http://tools.ietf.org/html/draft-ietf-hybi-thewebsocketprotocol-07

[04:51:00.0000] <Spacechimp>
is this what chrome is currently using?

[04:52:00.0000] <reschke>
dunno

[04:53:00.0000] <Spacechimp>
The handshake data I am recieving match what is in 00

[04:54:00.0000] <reschke>
http://www.chromium.org/developers/web-platform-status

[04:54:01.0000] <reschke>
i see

[04:54:02.0000] <reschke>
but be prepared for it to change in future Chrome versions

[04:55:00.0000] <Spacechimp>
ah!    Left before I could say thank you.

[04:56:00.0000] <Philip`>
Spacechimp: You can say it anyway and he'll see it in the IRC logs :-)

[04:56:01.0000] <zcorpan>
Spacechimp: browsers are going to move away from -00

[04:56:02.0000] <Spacechimp>
Ok, I will write current and legacy support

[04:58:00.0000] <zcorpan>
Spacechimp: if you're writing a -00 server, you might find opera's error console helpful (enable websockets in opera:config first)

[04:59:00.0000] <Spacechimp>
ok, I will check it out.

[04:59:01.0000] <Spacechimp>
ty

[04:59:02.0000] <zcorpan>
and a tcp inspector like wireshark is probably helpful

[04:59:03.0000] <Spacechimp>
yeah, i have been using wireshark

[04:59:04.0000] <Spacechimp>
:P

[04:59:05.0000] <zcorpan>
good :)

[05:00:00.0000] <Spacechimp>
Was using sysinternals tcp endpoint viewer, but it doesn't log afaik

[05:04:00.0000] <Spacechimp>
ah,  This is exaclt what I was looking for.

[05:04:01.0000] <Spacechimp>
*exactly

[05:05:00.0000] <zcorpan>
what was?

[05:05:01.0000] <Spacechimp>
Thanks for the links guys!

[05:05:02.0000] <Spacechimp>
the docs you linked

[05:06:00.0000] <Spacechimp>
beats trying to figure out specs from wikipedia articles

[05:07:00.0000] <smaug____>
Spacechimp: Fx4 has websocket -00, but it is disabled by default

[05:07:01.0000] <smaug____>
Fx6, I hope, will have -07

[05:08:00.0000] <Spacechimp>
Do you think the security concerns are realistic?

[05:09:00.0000] <smaug____>
for -00?

[05:09:01.0000] <smaug____>
yes, that is a reason why WebSockets aren't enabled by default in Opera or Fx4

[05:09:02.0000] <Spacechimp>
firefox pulling websockets in general

[05:10:00.0000] <smaug____>
other reason was that the protocol specification was very unstable at the -00 time

[05:10:01.0000] <zcorpan>
doesn't seem particularly stable now either

[05:11:00.0000] <smaug____>
well, it is more stable :)

[05:11:01.0000] <zcorpan>
how is it more stable?

[05:11:02.0000] <smaug____>
do we expect handshaking to change?

[05:12:00.0000] <smaug____>
I wonder what is a stable spec nowadays...

[05:12:01.0000] <zcorpan>
i didn't expect handshaking to change at -00 time before the security thing was brought up

[05:12:02.0000] <zcorpan>
if i had known that websocket would be changed, we wouldn't have implemented it in opera yet

[05:13:00.0000] <smaug____>
that is probably true for gecko too

[05:13:01.0000] <smaug____>
since -07 implementation is quite different to -00

[05:14:00.0000] <smaug____>
at least the -07 spec has gone through more reviews than -00

[05:14:01.0000] <smaug____>
and that is usually good thing

[05:14:02.0000] <Spacechimp>
Yeah, I really love the idea of websockets.  I do feel like a testpilot atm though.  I have a feeling that I am going to be writing support for other (psudo)push tech for browsers that do not support it though.

[05:14:03.0000] <zcorpan>
smaug____: have you read my review of -06?

[05:15:00.0000] <smaug____>
nope

[05:15:01.0000] <smaug____>
apparently I should

[05:15:02.0000] <zcorpan>
smaug____: http://www.ietf.org/mail-archive/web/hybi/current/msg07063.html

[05:15:03.0000] <zcorpan>
smaug____: the security problem might have been fixed, but the spec is *bad* compared to -00

[05:17:00.0000] <zcorpan>
i don't really want opera's implementation work to start with the state the spec is in now

[05:17:01.0000] <smaug____>
interesting

[05:17:02.0000] <zcorpan>
but i have not got any indication that the spec is going to be good, so i guess we'll just have to make something up or reverse engineer gecko and chrome

[05:18:00.0000] <smaug____>
I need to ask Patrick what he thinks about the stability of the spec

[05:19:00.0000] <Philip`>
Isn't this exactly the kind of case where it's been argued that specs should be forked?

[05:20:00.0000] <Philip`>
(so browser implementers can override the standardisation groups, without ending up in an unspecified mess)

[05:20:01.0000] <Philip`>
(if they refuse to implement what the standardisation group proposes)

[05:20:02.0000] <zcorpan>
Philip`: yeah forking the spec is a possibility

[05:22:00.0000] <zcorpan>
Philip`: it's not that i refuse to implement the spec, it's just that it leaves a lot of things undefined, so i have no idea what to implement

[05:23:00.0000] <zcorpan>
(not that it's me who's going to implement it, i'm just QA, but nevertheless)

[06:20:00.0000] <zcorpan>
seems the canvas spec has most support in the poll

[06:47:00.0000] <smaug____>
does anyone know any public tests for server sent events?

[06:50:00.0000] <zcorpan>
http://tc.labs.opera.com/apis/EventSource/

[06:51:00.0000] <zcorpan>
has svn interface if you want to grab the php files

[07:24:00.0000] <smaug____>
zcorpan: where is the svn interface?

[07:25:00.0000] <zcorpan>
smaug____: same server i think

[07:26:00.0000] <smaug____>
zcorpan: btw, does 1 out of 1 PASSED mean that all the tests pass?

[07:27:00.0000] <smaug____>
since if there are failures the result is something X out of 46 PASSED

[07:27:01.0000] <zcorpan>
smaug____: i guess, dunno

[07:28:00.0000] <smaug____>
there are also strange cases when assert_throws doesn't seem to detect exceptions properly

[07:30:00.0000] <zcorpan>
smaug____: send email to annevk

[07:42:00.0000] <smaug____>
zcorpan: apparently it should report more that 1 PASSED

[07:42:01.0000] <smaug____>
the testrunner doesn't seem to work properly in Opera atm

[07:43:00.0000] <smaug____>
I need to click back to get it to run the tests

[07:49:00.0000] <zcorpan>
smaug____: ok

[12:50:00.0000] <AryehGregor>
/me keeps on confusing foolip with Philip` :(

[12:56:00.0000] <Philip`>
But we have totally different names :-p

[12:56:01.0000] <Philip`>
I have a "`", he doesn't

[13:49:00.0000] <Hixie>
ok i'm back

[13:49:01.0000] <Hixie>
is anyone editing CORS these days?

[14:11:00.0000] <AryehGregor>
Okay, so, what's a good company to look into getting a laptop from?  Would probably be my primary computer, and I'd ultimately want Linux on it, probably with Windows in a VM.  Is it reasonable to just look at someplace like Dell?  What should I be looking for?

[14:12:00.0000] <Hixie>
what's your budget?

[14:12:01.0000] <Hixie>
that's really the dominating factor

[14:12:02.0000] <AryehGregor>
Well, I expect I'll be using it an awful lot, and don't expect to have lots of expenses anytime soon, so if a higher price tag will buy me features that are really useful then I'd be willing to go pretty high.

[14:12:03.0000] <Hixie>
if your budget is above $1000, something from the macbook line is probably the best option

[14:12:04.0000] <AryehGregor>
But I don't know what features are worth it.

[14:13:00.0000] <Hixie>
if it's below that, dunno

[14:14:00.0000] <Philip`>
Do you care about e.g. 3D graphics acceleration?

[14:14:01.0000] <AryehGregor>
I'm not really interested in going for Apple unless it's really clearly worth it.  Also, Matthew Garrett always complains about how Linux doesn't work so well on Macs because of their nonstandard firmware.

[14:14:02.0000] <Hixie>
the apple hardware is definitely worth it

[14:14:03.0000] <Hixie>
i haven't seen anything comparable in quality

[14:14:04.0000] <Hixie>
and the tech support is by far the best

[14:14:05.0000] <AryehGregor>
Well, I've gone for a pretty long time with no 3D graphics acceleration on my primary computer, because of lack of open-source driver support, so I wouldn't say it's necessary.

[14:15:00.0000] <Hixie>
can't speak for the linux compatibility

[14:15:01.0000] <Philip`>
Graphics cards usually seem to be a distinguishing factor between decent-but-cheap business-oriented laptops and much more expensive home-user/gamer ones

[14:16:00.0000] <AryehGregor>
Decent-but-cheap sounds okay to me.

[14:16:01.0000] <Philip`>
/me uses a pretty cheap Lenovo laptop which was like a third of the price of a MacBook Pro, with similar CPU and RAM and disk

[14:17:00.0000] <Philip`>
(and a much less irritating keyboard)

[14:17:01.0000] <AryehGregor>
I'd mostly want battery life and lots of RAM, I imagine.

[14:17:02.0000] <Philip`>
(and a much worse screen)

[14:17:03.0000] <AryehGregor>
And known Linux compatibility, ideally.

[14:17:04.0000] <Hixie>
the lenovos were pretty good for linux back when they were thinkpads

[14:17:05.0000] <Hixie>
i used that for several years

[14:18:00.0000] <Philip`>
(and if it breaks then I can just buy a new one)

[14:18:01.0000] <Philip`>
(and in practice it's not broken more often than the MBP)

[14:19:00.0000] <Philip`>
This isn't a ThinkPad-equivalent one, it's some cheaper range

[14:19:01.0000] <The_8472>
<AryehGregor> Well, I expect I'll be using it an awful lot, and don't expect to have lots of expenses anytime soon, so if a higher price tag will buy me features that are really useful then I'd be willing to go pretty high. <- if you can afford it, get a SSD

[14:20:00.0000] <Hixie>
Philip`: ah

[14:20:01.0000] <The_8472>
laptop hard disks are practically the slowest part. getting a core 2 or even an i7 is affordable. a few gb of ram are cheap too... but the HDDs are the bottleneck. at least if you do developing work on it

[14:20:02.0000] <AryehGregor>
My workload is almost completely in-memory other than booting, so I'm not sure if I'd prefer the reduced disk space.  Unless it has a small ancillary SSD.

[14:20:03.0000] <AryehGregor>
What sort of developing work uses the disk all the time?  Compilation?  I don't do that.

[14:20:04.0000] <The_8472>
well, nobody needs DVD drives anymore. kick the drive, add something useful into the bay

[14:20:05.0000] <Hixie>
i can vouch for the perf benefits of SSD

[14:21:00.0000] <Hixie>
no spin-up time, faster seeks, it's just crazy what a difference it makes

[14:21:01.0000] <Philip`>
/me wonders if HDD+SSD uses significantly more battery than either by itself

[14:21:02.0000] <The_8472>
AryehGregor, yeah... live compiling, automatic redeployment and stuff like that

[14:21:03.0000] <AryehGregor>
I had an Intel SSD in my desktop for a while, barely noticed the difference.

[14:21:04.0000] <AryehGregor>
Because I have 4 GB of RAM and never reboot.

[14:21:05.0000] <AryehGregor>
And have the same applications always open.

[14:21:06.0000] <The_8472>
4GB of ram? that's full after booting for me

[14:22:00.0000] <The_8472>
i need 8+

[14:22:01.0000] <AryehGregor>
So for a laptop, it might make a difference to hibernate time.

[14:22:02.0000] <The_8472>
but yeah, it depends on your usage patterns

[14:22:03.0000] <AryehGregor>
The_8472, I generally only have a browser, IRC, and terminal running.

[14:22:04.0000] <The_8472>
mhhh...

[14:22:05.0000] <AryehGregor>
Well, currently three browsers, 21 IRC windows, three terminal windows, plus OO.org Writer and Gnumeric.

[14:22:06.0000] <AryehGregor>
But I'm still way under 2 GB memory usage.

[14:23:00.0000] <Philip`>
Why hibernate?

[14:23:01.0000] <Philip`>
/me always uses suspend-to-RAM which is instant

[14:23:02.0000] <The_8472>
/me has a 400+ tab browser session, 1 VM, 2 terminal windows, 2 java applications, irc, mail client, database workbench and a few other things open

[14:23:03.0000] <AryehGregor>
Doesn't it eventually hibernate to save more battery?  Or is the difference small enough that it doesn't matter?

[14:24:00.0000] <AryehGregor>
My parents' Toshiba laptop with Windows 7 always hibernates eventually.

[14:24:01.0000] <AryehGregor>
(Even when plugged in, annoyingly.)

[14:24:02.0000] <The_8472>
you can configure that

[14:24:03.0000] <AryehGregor>
I know.

[14:24:04.0000] <Philip`>
I think it could last >20 hours in suspend on a full battery

[14:24:05.0000] <AryehGregor>
But I tend to assume defaults are sane until proven otherwise.

[14:24:06.0000] <AryehGregor>
Plus, it's not my laptop.

[14:24:07.0000] <Philip`>
and I never have it unplugged for more than about an hour

[14:24:08.0000] <Hixie>
Philip`: do you encrypt the disk?

[14:24:09.0000] <The_8472>
that's a faulty assumption

[14:24:10.0000] <The_8472>
windows defaults are always wrong.

[14:25:00.0000] <Philip`>
Hixie: No, but I'd probably notice if someone tried stealing it while suspended since I'm always carrying it

[14:26:00.0000] <Hixie>
if you don't encrypt the disk, suspend vs hybernate doesn't matter

[14:26:01.0000] <Hixie>
so nevermind :-)

[14:27:00.0000] <Hixie>
/me really needs changes to CORS

[14:27:01.0000] <Hixie>
i need two new ways of invoking CORS

[14:29:00.0000] <Hixie>
one that doesn't send Origin headers but supports the CORS semantics including through redirects, and either returns the data origin-tainted if no CORS headers are in the final response, or blocks if they're present and disallow; or lets the data out untainted if they're present and alllowed

[14:29:01.0000] <Hixie>
and one that does regular simple CORS except with the tainted-but-allowed case if there's no header in the response

[14:29:02.0000] <Hixie>
and this all seems way more complicated than it should be

[14:30:00.0000] <Hixie>
which is bad for security

[14:36:00.0000] <zcorpan>
hsivonen: apparently some people use <!--[if IE]><![endif]--><!doctype html> as a way to make ie not ignore x-ua-compatible despite having CCs before it

[14:45:00.0000] <zcorpan>
myakura: woah, thanks, will fix

[14:47:00.0000] <othermaciej>
Hixie: why do you need two modes?

[14:48:00.0000] <Hixie>
i may in fact not need those two modes

[14:48:01.0000] <Hixie>
i'm testing to see if browsers send origin with <video> currently

[14:48:02.0000] <Hixie>
the spec said they should, which is why i'd need two modes (<img> doesn't)

[14:49:00.0000] <Hixie>
looks like they don't though

[14:49:01.0000] <Hixie>
so maybe i can treat <img> and <video> exactly the same

[14:49:02.0000] <Hixie>
that'd be convenient

[14:52:00.0000] <othermaciej>
Hixie: incidentally, do you have any opinion on whether new resource embedding interfaces should be same-origin-only by default?

[14:53:00.0000] <othermaciej>
(with CORS exception)

[14:53:01.0000] <Hixie>
i think it very much depends on the type of resource in question

[14:53:02.0000] <othermaciej>
the case where this is relevant currently is @font-face

[14:53:03.0000] <Hixie>
i don't really see how fonts can contain origin-sensitive data (though we do currently taint the canvas when cross-origin fonts are used)

[14:53:04.0000] <othermaciej>
when I say "embedding", I mean to imply an inactive resource, and no ability to read back the contents, just to use it

[14:54:00.0000] <Hixie>
you can read back the contents of a font

[14:54:01.0000] <Hixie>
character presence, width, and height, at a minimum

[14:54:02.0000] <Hixie>
if we didn't taint the canvas, you could further obtain character pixel data

[14:55:00.0000] <othermaciej>
Mozilla folks argue that all new resource types should be same-origin-only by default, because that protects against hot linking and is easier for authors

[14:55:01.0000] <othermaciej>
some others (me included) tend to argue that it's better to match existing resource types even if there is a new model that is arguably better but not backwards-compatible

[14:56:00.0000] <Hixie>
it's not clear to me that hot linking needs protecting against, and it's certainly not easier for authors to require CORS as far as i can tell

[14:56:01.0000] <Hixie>
but i think it depends entirely on the resource type

[14:56:02.0000] <Hixie>
it's not something for which i think it makes sense to have a default

[14:56:03.0000] <othermaciej>
Mozilla event wanted to make video same-origin-only until that turned out to be impractical

[14:56:04.0000] <Hixie>
video data can be quite sensitive

[14:56:05.0000] <Hixie>
i think that one _should_ have been same-origin by default

[14:57:00.0000] <Hixie>
indeed the spec still says it is, though i'm fixing that as we speak

[14:59:00.0000] <Hixie>
hsivonen, roc: in case this isn't known, <video> in Gecko seems to sprout a tabindex="0" attribute out of nowhere

[14:59:01.0000] <zcorpan>
/me noticed that years ago

[15:05:00.0000] <AryehGregor>
/me noticed that in his execCommand() tests too

[15:23:00.0000] <Hixie>
when anne gets back i think he and i need to speak about making a spec that merges all the fetch and cors stuff into one single algorithm

[15:23:01.0000] <Hixie>
this is just crazy

[15:59:00.0000] <karlcow>
There I was working before, we had a (unvoluntary) DDOS with a simple IMG. The IMG on a very high traffic Web site was calling another server home page (with weaknesses) instead of an IMG. Each request from random user was creating processes on the small server app with crashes. At least we had the control of the two servers.

[16:44:00.0000] <Yuhong>
The funny thing about IE6 and CSS was that it was praised as standard compliant back in 2001.

[16:44:01.0000] <jcranmer>
it was the most standards-compliant browser when it came out

[16:47:00.0000] <Yuhong>
There is a reason I sent an email to ask about the history of position is everything.

[16:48:00.0000] <aho>
+10 years ago

[16:48:01.0000] <aho>
;)


2011-05-21
[17:10:00.0000] <zewt>
talk of crypto API makes me ... nervous, heh

[17:10:01.0000] <zewt>
far too many people see a crypto API and think they should actually do their own crypto with it

[18:03:00.0000] <jacobolus>
pretty much every browser w/ XHR support can do PUTs and DELETEs, right?

[18:03:01.0000] <jacobolus>
that is, in an XHR

[18:46:00.0000] <The_8472>
jacobolus, yes. but then all your forms would rely on javascript

[18:46:01.0000] <jacobolus>
The_8472: that's okay for my use case :)

[18:46:02.0000] <The_8472>
because method in forms supports get and post

[18:47:00.0000] <jacobolus>
The_8472: this app is going to be entirely useless w/o javascript

[18:47:01.0000] <The_8472>
ah well

[18:52:00.0000] <zewt>
i've never really understood why PUT and DELETE exist at all, other than legacy

[21:34:00.0000] <sephr>
How does one use a language that uses angle brackets in its syntax and doesn't have comments in non-XHTML?

[21:35:00.0000] <sephr>
in XHTML you can just <![CDATA[]]> it, but I don't think there's a solution for HTML

[21:35:01.0000] <sephr>
also, even in XHTML I don't think it's possible to have a language that uses ]]> in its syntax

[21:37:00.0000] <sephr>
Hixie: how would I use this text/x-foo program in a <script type="text/x-foo"> element in non-XHML? string script = "test"; </script>

[21:38:00.0000] <sephr>
note that </variable here> in text/x-foo is equivalent to document.write(variable here)

[21:38:01.0000] <sephr>
and that the text/x-foo language does not have comments

[23:12:00.0000] <Yuhong>
On http://ln.hixie.ch/?start=1137799947&count=1

[23:12:01.0000] <Yuhong>
Arjun Ray has complained about it long before 1999.

[23:12:02.0000] <Yuhong>
Arjun Ray has complained about SGML comments long before 1999.

[23:14:00.0000] <Yuhong>
Since at least 1995, I think.

[23:17:00.0000] <Yuhong>
Here is an old test page: http://www.nyct.net/~aray/junk/hide.html

[23:17:01.0000] <Yuhong>
(Sadly it uses the HTML 2.0 DOCTYPE which has never triggered standard mode.

[10:04:00.0000] <Spacechimp>
Hey folks!

[10:05:00.0000] <Spacechimp>
Yall were so helpful with my websocket questions yeterday, I thought I would come back and ask more.

[10:05:01.0000] <Spacechimp>
http://herofort.blogspot.com/2011/05/websocket-server-blitz-max.html

[10:07:00.0000] <Spacechimp>
So, I think I am going to call it a day, but I will idle here.

[10:07:01.0000] <Spacechimp>
Thanks!

[15:07:00.0000] <Yuhong>
Remember when tesco.com used application/xhtml+xml?

[15:07:01.0000] <Yuhong>
Since they changed to text/html, it has developed an error:

[15:07:02.0000] <Yuhong>
http://validator.w3.org/check?uri=http%3A%2F%2Fwww.tesco.com%2F&charset=%28detect+automatically%29&doctype=Inline&group=0


2011-05-22
[21:16:00.0000] <Spacechimp>
back

[07:52:00.0000] <MikeSmith>
hmm, what happened to onformchange and onforminput ?

[07:52:01.0000] <MikeSmith>
Ms2ger: ↑

[07:53:00.0000] <MikeSmith>
ah

[07:53:01.0000] <MikeSmith>
http://html5.org/tools/web-apps-tracker?from=5927&to=5928

[07:53:02.0000] <Ms2ger>
Wasn't me :)

[07:54:00.0000] <MikeSmith>
:)

[07:54:01.0000] <MikeSmith>
just figured you might know

[07:54:02.0000] <MikeSmith>
anyway, it appears they are no more

[07:54:03.0000] <MikeSmith>
"Drop forminput and formchange events, and their associated machinery, since you can now put oninput and onchange everywhere which makes them far less compelling."

[11:11:00.0000] <AryehGregor>
How are you supposed to link to sections in anolis?  Figure out the generated anchor and make an <a href> by hand?

[11:12:00.0000] <Ms2ger>
You probably want to give the section an id yourself

[11:12:01.0000] <AryehGregor>
Hmm.

[11:45:00.0000] <Hixie>
yeah just give an id and then link to it

[11:45:01.0000] <Hixie>
anolis won't override your ids


2011-05-23
[01:22:00.0000] <hsivonen>
did the LC poll reach quorum?

[01:32:00.0000] <abarth>
hsivonen: i think i've lost my ability to vote

[01:32:01.0000] <zcorpan>
abarth: the poll closed yesterday

[01:33:00.0000] <abarth>
(i was more explaining why I didn't participate)

[01:39:00.0000] <zcorpan>
hsivonen: do you have a clue as to how a questionmark appeared as favicon for your feed in my feedreader?

[01:47:00.0000] <hsivonen>
zcorpan: is your browser your feed reader?

[01:55:00.0000] <zcorpan>
hsivonen: yep, opera

[02:09:00.0000] <hsivonen>
zcorpan: could it be that you looked at my rel="shortcut icon" test cases and Opera decided to use the favicon declared in those files for any other URLs from hsivonen.iki.fi that don't have an explicit favicon?

[02:10:00.0000] <zcorpan>
hsivonen: it's indeed that icon. but opera doesn't show that icon when browsing your site, just the feed. weird

[02:10:01.0000] <zcorpan>
/me files a bug

[02:42:00.0000] <MikeSmith>
hsivonen: the poll did reach quorum, yeah

[03:02:00.0000] <zcorpan>
MikeSmith: for all documents?

[03:04:00.0000] <zcorpan>
heycam|away: wait what happened with sequence<T> and MessagePortArray?

[03:47:00.0000] <MikeSmith>
zcorpan: yeah, for all documents

[03:47:01.0000] <MikeSmith>
as far as I can tell

[04:18:00.0000] <MikeSmith>
any opinions on whether it would be a good idea to set up a mailbot that would automatically create HTML5 spec bugs from new messages posted to the public-html-comments list?

[04:18:01.0000] <MikeSmith>
that is, non-reply messages

[04:18:02.0000] <Ms2ger>
Hmm

[04:19:00.0000] <MikeSmith>
I can't see that it would be much of a problem as far as risk of malicious spam

[04:19:01.0000] <MikeSmith>
certainly not more than the current comment form

[04:20:00.0000] <MikeSmith>
because to post to that list, users basically need to first do the archive-approval step

[04:21:00.0000] <MikeSmith>
which essentially also works as an authentication mechanism to verify that they aren't spoofing an e-mail address

[04:22:00.0000] <MikeSmith>
the main problem I'd see is that some messages posted to that list may not actually be intended as comments

[04:22:01.0000] <MikeSmith>
but for those, it'd be easy enough to just move them to resolved-invalid

[04:23:00.0000] <MikeSmith>
so I guess it's a question of how much of them would be of that type

[04:23:01.0000] <MikeSmith>
what the signal-to-noise ratio would be

[04:24:00.0000] <Ms2ger>
I think there's little enough traffic to try it

[04:24:01.0000] <MikeSmith>
OK

[04:25:00.0000] <MikeSmith>
I can mess around with setting something up

[04:26:00.0000] <MikeSmith>
hmm

[04:26:01.0000] <MikeSmith>
as long as I'm not misunderstanding you

[04:26:02.0000] <MikeSmith>
Ms2ger: did you mean you think it's worth trying, or not worth trying?

[04:27:00.0000] <Ms2ger>
Worth trying

[04:27:01.0000] <MikeSmith>
ok

[04:27:02.0000] <MikeSmith>
thanks

[04:29:00.0000] <MikeSmith>
http://vkontakte.ru/photo63802_263023722?all=1

[04:30:00.0000] <Ms2ger>
I do!

[04:32:00.0000] <MikeSmith>
heh

[04:33:00.0000] <MikeSmith>
I speak pidgin Javascript

[05:40:00.0000] <_bga>
gsnedders are you here?

[05:46:00.0000] <gsnedders>
_bga: yes

[05:47:00.0000] <_bga>
what proseccors  is supported by carakan

[05:47:01.0000] <_bga>
i mean jit

[05:47:02.0000] <_bga>
only x86?

[05:49:00.0000] <gsnedders>
x86, x86_64, and ARM.

[05:50:00.0000] <_bga>
what about jvm bytecode?

[05:50:01.0000] <_bga>
as rhino

[05:50:02.0000] <gsnedders>
(Well, x86 with x87 (though this has never been shipped), x86 with SSE2, x86_64, ARM with/without VFP)

[05:50:03.0000] <gsnedders>
_bga: Why would we?

[05:51:00.0000] <_bga>
opera mobile

[05:51:01.0000] <gsnedders>
_bga: Opera Mobile is C++

[05:53:00.0000] <_bga>
i thought its java

[05:53:01.0000] <_bga>
ok

[05:53:02.0000] <gsnedders>
_bga: We don't have two separate web browsers here.

[05:54:00.0000] <_bga>
only opera mini is java based?

[05:54:01.0000] <Philip`>
(So on x86 without SSE2 it'll disable the JIT entirely?)

[05:55:00.0000] <gsnedders>
Philip`: (Yeah)

[05:55:01.0000] <gsnedders>
_bga: Mini is just a thin-client, Presto runs on server.

[05:55:02.0000] <_bga>
understand

[05:56:00.0000] <Philip`>
(That seems unfortunate for some percents of users)

[05:57:00.0000] <gsnedders>
Philip`: (Everyone, except Chrome which just refuses to run, does that.)

[05:58:00.0000] <gsnedders>
Philip`: (And x86/x87 would effectively be yet another arch to support, maybe it'll be finished some day…)

[05:59:00.0000] <Philip`>
/me knows SpiderMonkey has x87 JIT but has no idea if/how it's exposed via the browser

[06:00:00.0000] <gsnedders>
Philip`: It does?

[06:00:01.0000] <Philip`>
/me knows because it had bugs that broke his SpiderMonkey-embedding game for non-SSE2 users :-(

[06:00:02.0000] <gsnedders>
Philip`: Are you sure it was doing that and not just using x87 for doubles in the interpreter?

[06:01:00.0000] <_bga>
i see superh is another popular processor

[06:01:01.0000] <_bga>
jscore and sm support it

[06:01:02.0000] <Philip`>
nanojit/Nativei386.cpp has paths for "if (!_config.i386_sse2)" etc

[06:02:00.0000] <gsnedders>
Philip`: Heh, I thought it didn't. JSC certainly doesn't.

[06:03:00.0000] <gsnedders>
_bga: SuperH seems to be being used less and less

[08:03:00.0000] <hsivonen>
TabAtkins: you wondered about double line breaks when copying from View Source

[08:03:01.0000] <hsivonen>
TabAtkins: double line breaks appear where a pre ends and a new one starts

[08:04:00.0000] <hsivonen>
TabAtkins: since pre serializes as a block, there's an extra line break

[08:05:00.0000] <hsivonen>
TabAtkins: there are multiple pre elements, because that way the bidi algorithm runs on smaller chunks

[08:05:01.0000] <hsivonen>
TabAtkins: https://bugzilla.mozilla.org/show_bug.cgi?id=649613

[09:22:00.0000] <TabAtkins>
hsivonen: Ah, that makes sense.  Cool.

[09:35:00.0000] <jgraham>
/me wonders who exactly the people demanding more ways to submit LC feedback expect to build the system they are demanding

[09:36:00.0000] <jgraham>
/me suggests that the WG would be rather happy to adopt a system they build that meets their requirements

[09:36:01.0000] <jgraham>
In fact it really wouldn't require anyone to adopt anything

[09:36:02.0000] <jgraham>
It would just exist

[09:37:00.0000] <jgraham>
It could be linked to from useful places of course

[10:24:00.0000] <beowulf>
anyone any ideas on how I could determine the zoom level (window.innerWidth/screen.width) of a webpage on a handheld device that wasn't reporting innerWidth correctly? the device is a samsung galaxy s

[10:29:00.0000] <bga_>
beowulf <span style="font-size: 1em">a</span> trick?

[10:30:00.0000] <beowulf>
bga_: will try that

[10:50:00.0000] <MikeSmith>
hsivonen: I'm trying to figure out what part of the validator.nu schema allows data-* attributes

[11:31:00.0000] <AryehGregor>
What's a good reference for using @font-face in practice, like all the gotchas you need to be aware of?  People are discussing it on wikitech-l.

[11:33:00.0000] <miketaylr>
paul_irish has a post or two

[11:33:01.0000] <AryehGregor>
Ooh, Firefox 4.0 has an XSS filter that relies on a modal prompt to determine whether you can continue.  :(

[11:34:00.0000] <AryehGregor>
"Load contents passed in the query part? The contents may contain malicious scripts.

[11:34:01.0000] <AryehGregor>
Continue only if you're aware that this may trigger a XSS attack and the author of this page does not take any responsibility for loading this contents"

[11:34:02.0000] <AryehGregor>
(I assume that's part of Firefox, dunno where else it could have come from)

[11:34:03.0000] <miketaylr>
http://paulirish.com/2010/font-face-gotchas/

[11:34:04.0000] <Rik`>
AryehGregor: I don't think that's part of Firefox 4

[11:35:00.0000] <Rik`>
AryehGregor: or maybe it's CSP in action ?

[11:35:01.0000] <AryehGregor>
Then where could it have come from?

[11:35:02.0000] <AryehGregor>
/me can't give the name of the site, since it seems like it's supposed to be private)

[11:35:03.0000] <AryehGregor>
s/\)$//

[11:35:04.0000] <Philip`>
An XSS protection script in the page itself?

[11:36:00.0000] <Philip`>
/me doubts Firefox would have UI with such bad grammar, or that expects users to understand what "XSS" means

[11:37:00.0000] <hsivonen>
MikeSmith: data-* is a pre-schema filter, IIRC

[11:37:01.0000] <MikeSmith>
hsivonen: ah

[11:37:02.0000] <AryehGregor>
It only triggered in Firefox.

[11:37:03.0000] <AryehGregor>
Maybe some kind of extension or something.

[11:37:04.0000] <Philip`>
A non-portable XSS protection script in the page itself?

[11:38:00.0000] <AryehGregor>
Maybe.  :P

[11:38:01.0000] <Philip`>
NoScript?

[11:40:00.0000] <ako>
In IE6-8, using createStyleSheet and then setting styleElem.styleSheet.cssText to a text value that includes a @font-face declaration going into will crash IE6-8.

[11:40:01.0000] <ako>
sweet

[11:40:02.0000] <AryehGregor>
The only extension I have active is Firebug 1.7.1.

[11:41:00.0000] <ako>
hope they un-break ctrl+shift+c soon

[11:41:01.0000] <MikeSmith>
/me finds util/classes/nu/validator/xml/dataattributes/DataAttributeDroppingContentHandlerWrapper.java

[11:43:00.0000] <MikeSmith>
hsivonen: wondered how you did that. :) nice

[11:44:00.0000] <MikeSmith>
good thing there are no special restrictions on the values of data-* attributes

[12:08:00.0000] <AryehGregor>
Does Opera not support <wbr>?  data:text/html,<!doctype html><div style="width:1em;border:1px solid black">a<wbr>b<wbr>c</div>

[13:29:00.0000] <TabAtkins>
What's a normal sort of resolution for a high-res image used in printing?

[13:29:01.0000] <TabAtkins>
(I want something reasonable for this example I'm writing.)

[13:34:00.0000] <zcorpan>
300dpi?

[13:34:01.0000] <TabAtkins>
That's pretty much what I was thinking.  kk.

[13:35:00.0000] <gsnedders>
300dpi is the low end, FWIW

[13:37:00.0000] <Philip`>
Seems to depend somewhat on how the printer works - if it's doing colours by dithering then it probably needs higher print resolution than the original image resolution

[13:38:00.0000] <TabAtkins>
300dpi works for the example, which is just to demonstrate how you can use 'image-resolution' to embed a high-res image into a page so it looks good both on-screen and in print.

[13:47:00.0000] <heycam>
zcorpan, it sounds like MessagePortArray should be a read only array (http://dev.w3.org/2006/webapi/WebIDL/#dfn-read-only-array) instead of a sequence, since you don't want a new object being created every time you access the property

[13:47:01.0000] <heycam>
zcorpan, but I'll reply on the list later this morning once I've woken up

[13:51:00.0000] <zcorpan>
heycam: ok

[13:52:00.0000] <Hixie>
didn't we already talk about that and didn't i already fix it?

[13:52:01.0000] <Hixie>
or was that something else that i fixed

[13:52:02.0000] <Hixie>
hm

[13:53:00.0000] <TabAtkins>
If only you had some sort of history of your revisions that you could search for this sort of thing.

[13:53:01.0000] <heycam>
it's quite possible MessagePortArray was the reason that bug was filed in the first place -- at least, there was something that was in html you suggested removing sequence attributes because of

[13:54:00.0000] <Hixie>
i think it was some microdata thing

[13:54:01.0000] <Hixie>
i guess i missed this one

[14:37:00.0000] <aho>
TabAtkins, wouldnt some CC licensed icons work?

[14:38:00.0000] <aho>
well, you can always just go with triangle, square, dot, circle :>

[14:38:01.0000] <TabAtkins>
aho: For my twitter post?  Sure.  But I'm just building my own right now.

[14:38:02.0000] <aho>
http://kaioa.com/k/test/svgsprites/index.html

[14:38:03.0000] <aho>
works for me ;>

[14:41:00.0000] <aho>
http://youtu.be/IPwCH8WQ8Qo <- webkit's input type=color thingy

[14:41:01.0000] <aho>
interesting that they added a color picker

[14:42:00.0000] <aho>
eh.. some pipette thingy

[14:45:00.0000] <Hixie>
ok i fixed that CORS thing from last week

[14:45:01.0000] <Hixie>
anything else urgent for me to work on?

[14:45:02.0000] <Hixie>
or should i go back to the regular pile of feedback

[14:46:00.0000] <Hixie>
dglazkov: yt?

[14:46:01.0000] <dglazkov>
Hixie: I certainly am

[14:46:02.0000] <Hixie>
dglazkov: re the scoped thing, keep in mind that there's more to scoping <style> than just scoping the selectors. For example, @font-face rules have to not leak to the outer scope.

[14:47:00.0000] <Hixie>
dglazkov: otherwise, someone who is syndicating content that gets scoped elsewhere could screw around with the font of the whole page

[14:47:01.0000] <dglazkov>
Hixie: oh. where do I read about this?

[14:47:02.0000] <Hixie>
dglazkov: "For scoped CSS resources, the effect of @-rules must be scoped to the scoped sheet and its subresources, even if the @-rule in question would ordinarily apply to all style sheets that affect the Document. Any '@page' rules in scoped CSS resources must be ignored."

[14:47:03.0000] <zcorpan>
Hixie: there were some bugs about cross-origin

[14:48:00.0000] <Hixie>
dglazkov: http://www.whatwg.org/specs/web-apps/current-work/complete.html#attr-style-scoped

[14:48:01.0000] <Hixie>
zcorpan: ah, let me check those out

[14:48:02.0000] <dglazkov>
Hixie: awesome

[14:48:03.0000] <dglazkov>
throw it on the bug

[14:48:04.0000] <Hixie>
dglazkov: i deleted the bugmail, do you recall the number?

[14:49:00.0000] <dglazkov>
Hixie: https://bugs.webkit.org/show_bug.cgi?id=49142

[14:50:00.0000] <Ms2ger>
Hixie, http://www.w3.org/Bugs/Public/show_bug.cgi?id=12724 maybe? :)

[14:56:00.0000] <Hixie>
Ms2ger: that is like the _definition_ of not urgent. :-P

[14:56:01.0000] <Ms2ger>
:)

[14:59:00.0000] <Hixie>
/me comments in the other bug to suggest it be changed to be the other way around

[15:02:00.0000] <zcorpan>
everyone, bring paint for the bikeshed http://www.w3.org/Bugs/Public/show_bug.cgi?id=12679

[15:03:00.0000] <Hixie>
:-)

[15:03:01.0000] <Hixie>
zcorpan: i only found three bugs including that one

[15:04:00.0000] <Hixie>
zcorpan: let me know if i missed any

[15:04:01.0000] <Philip`>
Surely it should be "xorigin"

[15:04:02.0000] <Hixie>
you're supposed to put the paint on the shed, not sniff it

[15:05:00.0000] <zcorpan>
Philip`: not xdomain?

[15:05:01.0000] <TabAtkins>
×origin

[15:05:02.0000] <TabAtkins>
We should embrace unicode!

[15:05:03.0000] <zewt>
nandigin

[15:05:04.0000] <Hixie>
maybe xoxoxo="" would make the spec more approachable to teen girls?

[15:05:05.0000] <TabAtkins>
✝origin

[15:06:00.0000] <Hixie>
has to be ascii

[15:06:01.0000] <TabAtkins>
Bah.

[15:06:02.0000] <Philip`>
"xs", as in XSS

[15:09:00.0000] <Philip`>
zcorpan: Consistency with XDomainRequest is a good argument in favour of that

[15:09:01.0000] <zcorpan>
Hixie: iirc jgraham made the case that http-equiv and accept-charset are legacy and data-* and aria-* use hyphen because they are different to "normal" attributes

[15:10:00.0000] <Hixie>
cross-origin: tomorrow's legacy, today!

[15:12:00.0000] <zcorpan>
Hixie: people will go "why did Hixie not use a hyphen in formnovalidate but used a hyphen in cross-origin?"

[15:12:01.0000] <Hixie>
dude, HTML's attributes have every manner of quirks and idiosyncracies

[15:13:00.0000] <zcorpan>
so?

[15:13:01.0000] <Hixie>
anyone looking for logic in the naming scheme there has already embarked on a fool's errand long before i come along

[15:14:00.0000] <Hixie>
(you're going to win this argument, i'm just stalling for time because i'm editing another e-mail at the moment)

[15:15:00.0000] <TabAtkins>
Well, I went ahead and pushed zcorpan's argument into the bug, so you can agree with it there.  ^_^

[15:15:01.0000] <zcorpan>
heh

[15:24:00.0000] <gsnedders>
Hixie: (you know how to win arguments and write emails quickly, I see)

[15:25:00.0000] <Hixie>
hm?

[15:35:00.0000] <zcorpan>
Hixie: the dfn bug is a result of id renaming and putting id on span/dfn in the heading

[15:35:01.0000] <zcorpan>
Hixie: which also makes the status box misaligned in http://www.whatwg.org/specs/web-apps/current-work/complete/the-iframe-element.html#the-video-element

[15:36:00.0000] <Hixie>
ah

[15:36:01.0000] <Hixie>
bummer

[15:36:02.0000] <Hixie>
any suggestions on how to fix it?

[15:36:03.0000] <Hixie>
i could tweak the database i guess

[15:36:04.0000] <zcorpan>
...that's what i was going to suggest :)

[15:36:05.0000] <Hixie>
that's a pain

[15:36:06.0000] <Hixie>
wanna do it? :-)

[15:37:00.0000] <zcorpan>
no :)

[15:37:01.0000] <Hixie>
anyone else want to poke at the mysql database behind the status boxes? :-)

[15:37:02.0000] <zcorpan>
you could implement UI to change the id for the boxes

[15:37:03.0000] <zcorpan>
if that's less painful

[15:37:04.0000] <Hixie>
yeah i'll get right on that as soon as i've finished dealing with this feedback

[15:38:00.0000] <Hixie>
only 1931 e-mails left

[15:38:01.0000] <zcorpan>
okie dokie

[15:38:02.0000] <Hixie>
(if anyone does want to fix this let me know and i'll send you the username/password to the mysql box)

[15:40:00.0000] <zcorpan>
/me adds crossorigin to html-elements

[15:41:00.0000] <Hixie>
ifette: is websockets ready for the api update?

[15:45:00.0000] <AryehGregor>
Oh, it looks like insertparagraph is meant to be basically the same as hitting Enter.  Interesting.

[15:45:01.0000] <AryehGregor>
So I can spec that easily now, at least for non-Gecko.

[15:47:00.0000] <zcorpan>
AryehGregor: makes sense (re formatblock)

[15:51:00.0000] <zcorpan>
AryehGregor: what if you start with <body contenteditable></body> and do insertparagraph? opera gives two <p>s, ie and firefox just one, iirc

[15:51:01.0000] <AryehGregor>
zcorpan, Firefox treats insertparagraph like formatBlock with argument "p", so it's not comparable.

[15:52:00.0000] <AryehGregor>
Interesting corner case.  I'd like to say it's the same as hitting Enter in all cases, which suggests two.

[15:53:00.0000] <TabAtkins>
Argh, Chrome's formatting of SVG-in-<img> is SO BROKEN.

[15:53:01.0000] <zcorpan>
AryehGregor: agree it would make sense

[15:53:02.0000] <AryehGregor>
TabAtkins, so standardize it!

[15:53:03.0000] <TabAtkins>
AryehGregor: It is.  We're just broken.

[15:53:04.0000] <AryehGregor>
Where is it standardized?

[15:54:00.0000] <TabAtkins>
The Image Values spec.

[15:55:00.0000] <zcorpan>
it's a DRAFT

[15:55:01.0000] <zcorpan>
it's NON-NORMATIVE

[15:55:02.0000] <TabAtkins>
omg

[15:55:03.0000] <TabAtkins>
YOU'RE RIGHT

[15:55:04.0000] <zcorpan>
it's NOT A STANDARD

[15:56:00.0000] <smaug____>
what is a standard nowadays ;)

[15:56:01.0000] <zcorpan>
html 4.01 and css 2.0

[15:56:02.0000] <AryehGregor>
Image Values as in CSS Image Values, or some other Image Values?

[15:56:03.0000] <TabAtkins>
The former.

[15:57:00.0000] <TabAtkins>
Theoretically, <img>s handle sizing concerns with the same mechanisms that background images use.

[15:57:01.0000] <zcorpan>
(some peeps at sitepoint forums actually argue along those lines)

[15:58:00.0000] <abarth>
TabAtkins: SVG-in-IMG is a disaster

[15:58:01.0000] <abarth>
TabAtkins: blame eseidel

[15:58:02.0000] <TabAtkins>
abarth: I WILL

[15:58:03.0000] <abarth>
it's a giant hack and should be deleted, IMHO

[15:58:04.0000] <TabAtkins>
I'm going to have to make a PNG of this SVG now just so I don't have retarded sizing issues.

[15:58:05.0000] <abarth>
why not just use SVG-in-HTML ?

[15:59:00.0000] <abarth>
it makes infinitely more sense

[15:59:01.0000] <TabAtkins>
Because that won't validate as HTML4, which CSS specs are required to be. >_<

[15:59:02.0000] <AryehGregor>
Oh, you're only worried about sizing?

[15:59:03.0000] <abarth>
sounds like a bug in the CSS specs

[15:59:04.0000] <TabAtkins>
Well, it's a bug in w3c process.

[15:59:05.0000] <AryehGregor>
I thought you were talking about more important stuff, like how dynamic content is treated.

[15:59:06.0000] <abarth>
TabAtkins: use XHTML :)

[15:59:07.0000] <TabAtkins>
AryehGregor: Yes.  SVG images without explicit viewport sizes are automatically treated as if their viewport was the size of the screen.

[16:00:00.0000] <zcorpan>
TabAtkins: if you would have just followed the STANDARDS then you wouldn't be having these issues

[16:00:01.0000] <TabAtkins>
Rather than the size of the <img>, as would make some kind of sense.

[16:00:02.0000] <AryehGregor>
TabAtkins, why don't you give an explicit viewport size?

[16:00:03.0000] <TabAtkins>
AryehGregor: Because I gave it a viewBox, which *should* be enough, and I'm angry at it.

[16:02:00.0000] <TabAtkins>
But anyway, I've now given it an explicit width and height instead, grr.

[16:44:00.0000] <kangax>
Can someone clarify canvas' "destination-atop" globalCompositeOperation? Chrome and FF disagree (based on spec, it seems like Chrome is right).

[16:45:00.0000] <kangax>
test: http://kangax.github.com/jstests/canvas_globalcompositeoperation_test/ — choosing destination-atop and oval.png "clips" destination content in Chrome, but not in FF. Which one is right?

[16:47:00.0000] <roc>
FF

[16:47:01.0000] <roc>
try it in IE9

[16:47:02.0000] <roc>
or opera

[16:47:03.0000] <kangax>
i did

[16:47:04.0000] <kangax>
all non-webkit's seem to agree

[16:48:00.0000] <roc>
yes, it's a Webkit bug

[16:49:00.0000] <roc>
they clip the effect of the operator to the shape of the source object, or something like that

[16:49:01.0000] <roc>
the spec says not to do that

[16:49:02.0000] <TabAtkins>
Yeah, that's basically it.  For some defintion of "the shape".

[16:49:03.0000] <kangax>
webkit's behavior looks more useful for my use case

[16:49:04.0000] <roc>
kangax: maybe so, but you can probably clip to the shape yourself easily enough

[16:49:05.0000] <Philip`>
Is your use case unable to use clip()?

[16:49:06.0000] <kangax>
i basically want to clip all the content to my (masking) image

[16:49:07.0000] <roc>
I don't think Webkit's behavior is bad, but no-one could ever figure out how to spec it right

[16:49:08.0000] <erlehmann>
kangax, does this help? https://developer.mozilla.org/en/Canvas_tutorial/Compositing

[16:50:00.0000] <kangax>
that's the thing — clip operates on current path, from what i understand, but I'd like to use an image (which doesn't affect it)

[16:50:01.0000] <roc>
just clip to the rectangle of the image

[16:51:00.0000] <kangax>
let's say i have an image of a flower — just a contour really — and i want to clip all the content to it. I don't have vector representation of an image. How to do it?

[16:52:00.0000] <roc>
the Webkit bug doesn't help you there does it? My understanding is that the "shape" it clips to would be the image rectangle in that case

[16:53:00.0000] <kangax>
ah yes, that's the thing

[16:53:01.0000] <kangax>
clipping to non-rectangular shape is what's useful

[16:53:02.0000] <TabAtkins>
The SVG compositing spec has a switch for the two behaviors.

[16:53:03.0000] <TabAtkins>
Of course, SVG has a good definition of the "shape" of an object. ^_^

[16:53:04.0000] <kangax>
in which case I'd be able to create an image with transparent bg

[16:54:00.0000] <kangax>
..and clip everything to that image

[16:55:00.0000] <kangax>
TabAtkins: perhaps introducing another compositing mode would make sense then? i would think my usecase is not that uncommon

[16:55:01.0000] <Philip`>
The spec composites the image as if it were infinitely large and surrounded by transparency, so if you want everything outside the image to be clipped out then you should make the image contain transparency for clipped-out regions

[16:56:00.0000] <Philip`>
and then probably render with destination-in so it shows the original canvas content where the image is solid, and shows transparency elsewhere

[16:56:01.0000] <Philip`>
if that's roughly what you want

[16:56:02.0000] <kangax>
Philip`: but my overlaying (source) image is exactly like this — has content in the middle and transparency surrounding it

[16:57:00.0000] <kangax>
i though this opaque content in the middle will serve as clipping mask

[16:57:01.0000] <kangax>
*thought

[16:57:02.0000] <Philip`>
Can't you just use destination-in (I think), then?

[16:58:00.0000] <kangax>
that doesn't work in either Chrome nor FF

[16:59:00.0000] <kangax>
..neither in Opera (just checked — all of them result in white nothingness)


2011-05-24
[17:01:00.0000] <jwalden>
anyone: what browsers implement the standardized gradient syntax?  gecko and ie alone?  or am I missing someone?

[17:02:00.0000] <gsnedders>
jwalden: The CSS3 stuff?

[17:02:01.0000] <gsnedders>
jwalden: I believe we do.

[17:02:02.0000] <TabAtkins>
gecko implements a slightly older version of the syntax.  webkit implements the new syntax, though with some bugs.  opera and ie now implement the new syntax.

[17:08:00.0000] <kangax>
so... "shape" of a compositing object (in this case — an image) is what's underspecified at the moment?

[17:08:01.0000] <TabAtkins>
Yeah.

[17:09:00.0000] <TabAtkins>
If shape were properly defined, the compositing behavior is trivial.

[17:09:01.0000] <kangax>
should i bring it to the mailing list?

[17:09:02.0000] <TabAtkins>
Go ahead, though I think it's been discussed before.

[17:09:03.0000] <kangax>
ok, i'll check out archives

[17:10:00.0000] <kangax>
although... if the definition was to be specified, how will whatwg decide which one to pick? :)

[17:10:01.0000] <kangax>
introducing new mode would help of course

[17:12:00.0000] <TabAtkins>
Just add a switch, and default to the majority (global, not shape-constrained).

[17:12:01.0000] <jamesr>
webkit is switching to the canvas specified model for canvas 2d shortly, btw

[17:12:02.0000] <kangax>
oh boy

[17:13:00.0000] <jamesr>
meaning destination-in will clear every pixel that is fully transparent in the thingy being drawn

[17:13:01.0000] <jamesr>
you can get the behavior you want most of the time by setting an explicit clip

[17:13:02.0000] <kangax>
jamesr: explicit clip as in `clip()`?

[17:13:03.0000] <jamesr>
yeah

[17:14:00.0000] <kangax>
jamesr: that means you're confined to a set of low-level commands for creating your clipping path :)

[17:14:01.0000] <kangax>
instead of just drawing an image

[17:14:02.0000] <jamesr>
well, images have rectangular clipping regions normally

[17:15:00.0000] <jamesr>
so it's pretty easy to construct a clip around the image or whatever portion you want the composite operation to apply in

[17:15:01.0000] <jamesr>
you can also expect that most values for globalCompositeOperation other than the default are buggy in current browsers

[17:15:02.0000] <kangax>
oh i know

[17:16:00.0000] <jamesr>
but if you want to draw an image then normally you want to construct a rectangle around the image and clip() before drawing, if you only want to apply the composite operation inside the bounds of the image

[17:16:01.0000] <kangax>
i won't be using this behavior in any case... due to such poor "support" of it, but wanted to get to the bottom of it

[17:17:00.0000] <kangax>
jamesr: i don't think that would help me, since clipping region would still be rectangular (just a bounding box of an image)

[17:18:00.0000] <kangax>
jamesr: if i'm understanding you correctly

[17:18:01.0000] <jamesr>
what clipping region do you want?

[17:18:02.0000] <kangax>
jamesr: non-rectangular of course

[17:18:03.0000] <jamesr>
oh you want to use the opacity in the image?

[17:18:04.0000] <kangax>
yep

[17:18:05.0000] <jamesr>
it don't do that :)

[17:19:00.0000] <kangax>
webkit does :)

[17:19:01.0000] <jamesr>
well, only by accident

[17:19:02.0000] <jamesr>
it's not consistent if you use, say, gradients or patterns

[17:19:03.0000] <kangax>
i undestand

[17:20:00.0000] <kangax>
well, TabAtkins says SVG has behavior similar to what I want and it seems like a pretty common use case — just clipping something to a non-rectangular, non-vector shape (image with transparent content being perfect candidate)

[17:21:00.0000] <TabAtkins>
Clipping to a shape and clipping to the non-transparent regions are a bit different.

[17:21:01.0000] <jamesr>
you can clip to a shape in canvas

[17:21:02.0000] <jamesr>
but there's no notion of clipping to opacity

[17:21:03.0000] <kangax>
jamesr: yeah, only vector one

[17:21:04.0000] <TabAtkins>
You can do a <circle fill="transparent" ... /> in SVG, which will apply the compositing op to the circle even though it's transparent.

[17:21:05.0000] <Philip`>
Use getImageData, create a path by tracing around every non-transparent pixel, call clip() - easy :-)

[17:22:00.0000] <kangax>
maybe i should just do this manually

[17:22:01.0000] <kangax>
Philip`: was just thinking that :)

[17:22:02.0000] <kangax>
can only imagine the resulting performance of something like this

[17:24:00.0000] <kangax>
i can also probably find all transparent pixels of masking image and then "transparentize" those same pixels on canvas

[17:26:00.0000] <Philip`>
/me would have thought there must be an easier way to do this by drawing the image onto a large temporary canvas and then drawing that back onto the main canvas with appropriate compositing mode, to stop it depending on the inconsistent behaviour of compositing outside the source shape

[17:34:00.0000] <kangax>
Philip`: it's not even that — FF considers image shape to be that of a box, not its opaque content

[17:37:00.0000] <Hixie>
/me mumbles something abouyt 100+ post threads that have 100+ proposals and no use case descriptions

[17:59:00.0000] <jamesr_>
Philip`, what happens in the canvas 2d spec if you set the transform to something non-invertible, set the globalCompositeOperation, then do a draw?

[18:04:00.0000] <jamesr_>
it seems like firefox ignores the draw made with a non-invertible transform

[18:04:01.0000] <jamesr_>
instead of clearing everything

[18:12:00.0000] <Philip`>
jamesr_: The transform matrix only applies to the shape, before it's drawn onto the infinite transparent bitmap

[18:12:01.0000] <jamesr_>
so the shape should map to nothing, and then the infinite transparent bitmap is composited?

[18:13:00.0000] <Philip`>
The compositing is independent of transforms, so I believe so

[18:13:01.0000] <jamesr_>
http://software.hixie.ch/utilities/js/canvas/?c.clearRect%280%2C%200%2C%20640%2C%20480%29%3B%0Ac.save%28%29%3B%0Atry%20{%0A%20%20c.globalCompositeOperation%20%3D%20%22source-over%22%3B%0A%20%20c.fillStyle%3D%22red%22%3B%0A%20%20c.fillRect%280%2C%200%2C%20640%2C%20480%29%3B%0A%20%20c.fillStyle%20%3D%20%22blue%22%3B%0A%20%20c.fillRect%2820.5%2C%2020.5%2C%2050%2C%2050%29%3B%0A%20%20c.globalCompositeOperation%20%3D%20%22destination-in%22%3B%0A%

[18:13:02.0000] <jamesr_>
20%20c.setTransform%280%2C%200%2C%200%2C%200.5%2C%200%2C%200%29%3B%0A%20%20c.fillStyle%20%3D%20%22red%22%3B%0A%20%20c.fillRect%2810.5%2C%2030.5%2C%2020%2C%2020%29%3B%0A}%20finally%20{%0A%20%20c.restore%28%29%3B%0A}%0A

[18:13:03.0000] <jamesr_>
firefox just ignores the draw

[18:13:04.0000] <Philip`>
and drawing the finite shape with e.g. scale(0,0) should presumably be about the same as drawing with scale(1e-300, 1e-300), i.e. vanishingly small

[18:14:00.0000] <jamesr_>
opera clears the whole world

[18:14:01.0000] <jamesr_>
k, seems like a firefox bug

[18:14:02.0000] <jamesr_>
webkit will soon clear everything

[18:15:00.0000] <Philip`>
My desk is still greatly cluttered, so unfortunately it doesn't clear the whole world :-(

[18:16:00.0000] <Philip`>
Sounds like clearing the canvas is the spec-compliant behaviour, though I think any consequences of degenerate transforms in the spec are pretty much accidental

[18:41:00.0000] <oojacoboo>
anyone have any input on the spec in regards to min/max widths?

[18:42:00.0000] <oojacoboo>
I'm finding that both firefox and chrome treat min with a higher priority than max

[18:42:01.0000] <oojacoboo>
actually, flat out negating the fact that max even exists

[18:43:00.0000] <oojacoboo>
the situation in a table is where I have min-width and max-width both applied to a <td>

[18:43:01.0000] <TabAtkins>
You talking about CSS min-width/max-width?

[18:43:02.0000] <oojacoboo>
in this case the min is the ONLY thing that even matters

[18:43:03.0000] <oojacoboo>
the max isn't even acknowledged

[18:44:00.0000] <TabAtkins>
The application of min/max to table-* elements is kinda weird.

[18:44:01.0000] <oojacoboo>
yes, CSS as you state

[18:44:02.0000] <oojacoboo>
kinda?

[18:44:03.0000] <oojacoboo>
bit of an understatement there

[18:44:04.0000] <oojacoboo>
but the fact that gecko and webkit both treat this the same is double disturbing

[18:45:00.0000] <oojacoboo>
I'm having an extremely hard time understanding how we can be working on things like css transitions when we can't even get something as simple as min-width/max-width finished and into the spec and implemented

[18:46:00.0000] <oojacoboo>
it's probably one of the more fundamental styles, especially in regards to table layouts

[18:46:01.0000] <TabAtkins>
Table layout is *completely* unspecified.

[18:46:02.0000] <TabAtkins>
The 2.1 spec offers a suggested layout algorithm, but it doesn't match any browser in the details.

[18:47:00.0000] <oojacoboo>
ugh!

[18:47:01.0000] <jamesr>
everybody thinks the thing they care about is obviously more important than everything else

[18:47:02.0000] <oojacoboo>
jamesr: very true

[18:48:00.0000] <oojacoboo>
but not being able to specify min and max widths for a table with lots of data causes unwanted wrapping results, making the data hard to read, etc

[18:49:00.0000] <oojacoboo>
but I hardly see how something like css transitions could take precedence over something as basic as width styling

[18:49:01.0000] <jamesr>
exactly

[18:49:02.0000] <TabAtkins>
Because table layout works well enough, and nobody wants to spend time figuring out how to specify it properly.

[18:49:03.0000] <jamesr>
even when this is pointed out people still insist the thing they care about is obviously more important than whatever else :)

[18:49:04.0000] <TabAtkins>
But transitions are sexy and cool.

[18:49:05.0000] <oojacoboo>
...

[18:49:06.0000] <oojacoboo>
that's the problem

[18:50:00.0000] <TabAtkins>
It's only a problem if you think table layout doesn't work properly.  Most people don't care.  ^_^

[18:51:00.0000] <oojacoboo>
I just want to say fuck tables and the horse they rode in on altogether at this point

[18:51:01.0000] <jamesr>
you also seem to think that the people who work on transitions would be working on table layout if they weren't working on transitions. that is definitely not true

[18:51:02.0000] <oojacoboo>
jamesr: another good point

[18:52:00.0000] <oojacoboo>
but seriously though, how hard is it to code up a min/max range...

[18:53:00.0000] <TabAtkins>
Obeying all the other implicit constraints that make up the big ball of pain that is table layout?

[18:54:00.0000] <oojacoboo>
TabAtkins: why would they come into play if these are specified?

[18:54:01.0000] <TabAtkins>
Everything comes into play when you layout tables.

[18:55:00.0000] <TabAtkins>
Imagine, for example, two cells that have "min-width: 100px", and a cell in another row that spans both columns and has "max-width: 150px".

[18:55:01.0000] <TabAtkins>
Now imagine that, rather than fully overlapping, it only partially overlaps, so you either have to ignore the constraint or find some way to fit the non-overlapping part of the cell into 50px.

[18:55:02.0000] <oojacoboo>
good point there, I'd fall back on the max in that case

[18:56:00.0000] <TabAtkins>
min-width is pretty easy, all in all.  Given that table cells are BFCs, they already have implicit min-width constraints of the width of the longest word in their contents.

[18:57:00.0000] <TabAtkins>
Max, though, just plain hurts.

[18:57:01.0000] <oojacoboo>
if min-width is specified, it's the king

[18:57:02.0000] <oojacoboo>
and then it just does whatever it wants

[18:57:03.0000] <TabAtkins>
But you just said you'd honor max-width, ignoring the min-width on the other cells!

[18:57:04.0000] <oojacoboo>
I have multiple cells min-width: 70px

[18:58:00.0000] <oojacoboo>
they are spanning to 95px on their own beyond the boundaries of the table width!

[18:58:01.0000] <oojacoboo>
wdith: 77px !important doesn't even fix it

[18:59:00.0000] <oojacoboo>
...

[18:59:01.0000] <oojacoboo>
width*

[19:00:00.0000] <oojacoboo>
I see the issues you present, but how to you explain that ^^ behavior?

[19:00:01.0000] <oojacoboo>
s/to/do

[19:00:02.0000] <TabAtkins>
I don't.  Like I said, table layout is unspecified. ^_^

[19:00:03.0000] <TabAtkins>
Also, I'm out for the day.

[19:00:04.0000] <oojacoboo>
later

[20:15:00.0000] <cgcardona>
thought I'd show this around in here in case anyone has any tips. https://audiofile.cc/

[20:37:00.0000] <erlehmann>
cgcardona, LOL INTERNET. have you read the lilypond paper on why music is not really something representable with XML?

[20:37:01.0000] <erlehmann>
also, can you show me a demo? i cannot seem to find one.

[20:39:00.0000] <cgcardona>
erlehmann: no please post the link. The code you see at the top as well as the canvas are a live example

[20:39:01.0000] <cgcardona>
it's a new idea so thats the only example I have worth showing. After I get chords as well as sharps implemented i want to get some examples that change the notes with clicks and such

[20:44:00.0000] <erlehmann>
cgcardona, it might be this http://lilypond.org/doc/v2.12/Documentation/user/lilypond-learning/Background.html

[20:44:01.0000] <erlehmann>
the lilypond people may have stuff you might wish to use :)

[20:45:00.0000] <cgcardona>
i'll check it out. thanks

[23:22:00.0000] <Akilo>
saluton amikoj

[01:13:00.0000] <zcorpan>
/me notes that only FOs were filed as bugs

[01:14:00.0000] <zcorpan>
if somebody had a different argument and voted No or Abstain, maybe repeat the argument in a bug?

[02:34:00.0000] <hsivonen>
mysterious. The ICU-based check for max week of a year always seems to return 52

[02:35:00.0000] <jgraham>
zcorpan: No surprise there then

[04:01:00.0000] <asmodai>
hahah, that ihatexml.py in html5lib  XD

[04:09:00.0000] <hsivonen>
still no editing action in the rel registry

[04:10:00.0000] <hsivonen>
I wonder if that's going to change once MikeSmith redeploys the back end of validator.w3.org

[04:17:00.0000] <gsnedders>
asmodai: jgraham is the wittiest of men.

[04:17:01.0000] <asmodai>
gsnedders: Given the contents of the file I think the name is aptly chosen.

[04:25:00.0000] <zcorpan>
based on google search suggestions for "is <char>", a lot of people are searching for "is <person> gay"

[04:27:00.0000] <jgraham>
zcorpan: Wow

[04:27:01.0000] <jgraham>
f is the first letter where I didn't get at leats one suggest matching that pattern

[04:28:00.0000] <jgraham>
Although I did get "is fish meat"

[04:28:01.0000] <jgraham>
So I am a little concerened with the general intelligience of people using Google

[04:28:02.0000] <zcorpan>
where as "are <char>" seems to mostly end with "real" and "good for you"

[04:28:03.0000] <zcorpan>
jgraham: try "is g" :)

[04:31:00.0000] <jgraham>
Honestly the pattern is so widespreaed I suspect people gaming the results for giggles

[04:32:00.0000] <zcorpan>
or people are really interested in whether other people are gay

[04:33:00.0000] <jgraham>
I suppose that is possible

[04:34:00.0000] <zcorpan>
time to donate blood plasma

[05:15:00.0000] <hsivonen>
hmm. Why does V.nu have unused floating point datatypes?

[05:17:00.0000] <Philip`>
Maybe because the spec used to have floats until they got changed to doubles?

[05:23:00.0000] <hsivonen>
has the spec changed back and forth as far as exponent allowability on input type=number goes?

[05:24:00.0000] <hsivonen>
I can't believe the validator has been wrong for 4 years with the correct code in the codebase as dead code

[05:24:01.0000] <hsivonen>
/me can't be bothered to do full version control archeology research

[05:29:00.0000] <hsivonen>
I'm rather shocked by the state of float handling in the validator

[05:30:00.0000] <hsivonen>
it looks like I almost fixed this stuff in 2007 and then forgot to take all the remaining steps

[05:30:01.0000] <hsivonen>
it's also possible that Hixie has had something too crazy in the spec at a critical moment

[05:46:00.0000] <hsivonen>
seriously, it's 2011 and we still get stuff like this in a spec: http://www.w3.org/WAI/PF/aria/complete#valuetype_number

[05:50:00.0000] <hsivonen>
why does the PFWG ask me to state if I'm commenting on behalf of an organization and if the org is a W3C group, Member org or other?

[05:51:00.0000] <Philip`>
Isn't http://www.w3.org/WAI/PF/aria/complete#typemapping the more relevant definition of "number"?

[05:51:01.0000] <gsnedders>
hsivonen: Because a comment from some W3C member could turn into a vote against the spec at PR at the AC level?

[05:52:00.0000] <gsnedders>
hsivonen: What would you rather the abstract model defined a number to be?

[05:54:00.0000] <Philip`>
http://www.w3.org/WAI/PF/aria/complete#valuetype_number seems plausible as a definition of what XML Schema calls the value space, although then the problem is the value space can't be represented by the lexical representations listed in http://www.w3.org/WAI/PF/aria/complete#typemapping

[05:54:01.0000] <Philip`>
(since they only do finite decimal numbers, not all real numbers)

[05:54:02.0000] <Philip`>
but that's being a bit picky

[05:56:00.0000] <hsivonen>
Filed http://www.w3.org/WAI/PF/comments/details?comment_id=357

[05:58:00.0000] <gsnedders>
hsivonen: I think that section just defines the abstract ARIA model, not specific to any syntax.

[05:58:01.0000] <hsivonen>
Philip`: OK. so the spec fails by not linking to that section

[05:58:02.0000] <hsivonen>
gsnedders: I see. I don't like this abstract stuff.

[05:58:03.0000] <Philip`>
hsivonen: That subsubsection says "These are generic types for states and properties, but do not define specific representation. See State and Property Attribute Processing for details on how these values are expressed and handled in host languages."

[05:59:00.0000] <Philip`>
which links to http://www.w3.org/WAI/PF/aria/complete#state_property_processing which links to http://www.w3.org/WAI/PF/aria/complete#typemapping

[05:59:01.0000] <hsivonen>
Philip`: ok.

[05:59:02.0000] <Philip`>
(though it says it's non-normative)

[05:59:03.0000] <hsivonen>
well, evidently, this is a readability failure

[06:02:00.0000] <gsnedders>
hsivonen: Well, really, it's no worse from an abstraction POV than HTML5, which only clearly defines the element definitions as abstract in one or two easy to miss places

[06:05:00.0000] <Philip`>
The undefinedness of how to lexically represent e.g. the aria-valuenow property with value 1/3 isn't great, but at least it's trying, whereas HTML5 only defines the mathematical concept of numbers as the consequence of a 140-word paragraph (and then defines a parsing algorithm that gives a different result)

[06:25:00.0000] <hsivonen>
huh. Hixie has allowed capital E as the exponent separator at some point...

[06:27:00.0000] <gsnedders>
hsivonen: Consistency with what ES5 allows in ToNumber

[08:51:00.0000] <zcorpan>
http://www.w3.org/Bugs/Public/show_bug.cgi?id=12739 oooh ipv6 address

[09:47:00.0000] <MikeSmith>
recommendations for a perl module for parsing e-mail messages?

[09:48:00.0000] <Ms2ger>
My recommendation would be not to use perl :)

[09:48:01.0000] <jgraham>
Or to parse email messages

[09:48:02.0000] <Rik`>
Peter`: hey, I remember you have tools to check mozilla and webkit repositories?

[09:48:03.0000] <Ms2ger>
jgraham, ssh, I want him to parse them :)

[09:49:00.0000] <MikeSmith>
if perl's good enough for Hixie, it's good enough for me

[09:50:00.0000] <MikeSmith>
if there's a decent bugzilla library for python, I'd rather write it in python instead

[09:51:00.0000] <MikeSmith>
but I couldn't find any python bugzilla library

[09:51:01.0000] <Philip`>
Surely the solution to any parsing problem is regexps

[09:52:00.0000] <Peter`>
Rik`: Just WebKit and Chromium

[09:52:01.0000] <Rik`>
Peter`: are they public tools ?

[09:53:00.0000] <Peter`>
http://peter.sh/data/last-week/webkit/2011-20-monday.html

[09:53:01.0000] <Peter`>
http://peter.sh/data/last-week/chromium/2011-20-monday.html

[09:53:02.0000] <Philip`>
MikeSmith: Are these emails from random users that might be malformed etc?

[09:53:03.0000] <Peter`>
They're hardly tools, just a more convenient list of changesets

[09:53:04.0000] <Ms2ger>
I think Mozilla has python tools for interacting with bugzilla, but I don't know if the W3C instance has BZAPI set up

[09:53:05.0000] <Ms2ger>
Philip`, emails to public-html-comments

[09:53:06.0000] <MikeSmith>
Philip`: yeah

[09:54:00.0000] <jgraham>
/me always wonders if bzapi is a intentional reference to bz-the-person

[09:54:01.0000] <Philip`>
(It looks like stuff like Email::Simple might be nice enough but it says "you cannot expect it to cope well as the only parser between you and the outside world" which presumably isn't ideal here)

[09:55:00.0000] <MikeSmith>
Philip`: OK

[09:55:01.0000] <Philip`>
/me has no personal experience of anything other than piping strings into sendmail, though

[09:55:02.0000] <MikeSmith>
Ms2ger: I don't think it does have BZAPI set up

[09:55:03.0000] <Ms2ger>
jgraham, not afaik

[09:56:00.0000] <Ms2ger>
MikeSmith, I'd argue that's your first step, then :)

[09:56:01.0000] <Rik`>
Peter`: that's exactly what I'm looking for, a more convenient way to list mozilla changesets

[09:56:02.0000] <jgraham>
Ms2ger: Surely I can't be the only person who thinks of that when I see it though :)

[09:56:03.0000] <MikeSmith>
Ms2ger: it just exposes a REST API anyway, right?

[09:56:04.0000] <MikeSmith>
not bound to python clients

[09:56:05.0000] <Ms2ger>
Yep

[09:57:00.0000] <jgraham>
Isn't the first step to upgrade to a newer bugzilla? Tht would solve lots of problems, right?

[09:57:01.0000] <MikeSmith>
sure

[09:57:02.0000] <MikeSmith>
and probably introduce a lot of others

[09:57:03.0000] <Peter`>
Rik`, I may have a look in setting this up for Mozilla as well, but won't have any bandwidth until next wek

[09:57:04.0000] <Peter`>
week*

[09:57:05.0000] <Ms2ger>
(https://github.com/toolness/pybugzilla, btw)

[09:58:00.0000] <jgraham>
MikeSmith: Maybe. But the W3C copy seems to be well behind

[09:58:01.0000] <MikeSmith>
jgraham: and anyway, I have to work with what I have

[09:59:00.0000] <Rik`>
Peter`: don't worry, I was just looking for an existing tool so I don't have to write it :)

[10:00:00.0000] <jgraham>
mike][inq: f you wanted an upgrade you would presiumably point out that newer versions have more aria. Tht works like a cheat code, right? :)

[10:00:01.0000] <jwalden>
TabAtkins: ping

[10:01:00.0000] <TabAtkins>
jwalden: pong

[10:01:01.0000] <MikeSmith>
jgraham: that's a good point, actually

[10:01:02.0000] <MikeSmith>
I didn't know they hard aria markup

[10:01:03.0000] <jgraham>
/me apologieses if he disturbed mike][inq 

[10:02:00.0000] <jwalden>
TabAtkins: are you aware that gradients in browsers don't actually have "no intrinsic dimensions"?  like, background-image: gradient; background-size: 5px; acts as though the gradient had an intrinsic aspect ratio equal to that of the background positioning area

[10:02:01.0000] <jgraham>
/me wonders how well dbolter gets on with bugzilla

[10:03:00.0000] <jwalden>
TabAtkins: which seems a bit bizarre to me, but I'm not sure if you're trying to codify reality or codify a sensible behavior

[10:03:01.0000] <TabAtkins>
jwalden: the gradient itself has no dimensions.  The gradient, when used, acquires dimensions equal to the element's background area.

[10:04:00.0000] <TabAtkins>
I'm not sure whether or not background-size:5px should affect things.  Maybe?

[10:04:01.0000] <jwalden>
TabAtkins: the way css3 says to negotiate background-size, something with no dimensions and no aspect ratio and only one dimension constrained is rendered as if for 'contain'

[10:05:00.0000] <jwalden>
TabAtkins: which in that case means as large as possible while holding that specified dimension fixed

[10:05:01.0000] <jwalden>
TabAtkins: so background-size: 5px should per current spec algorithms give you 5px by (other dimension of BPA)

[10:06:00.0000] <jwalden>
TabAtkins: in browsers now it gives you 5px by (whatever length gives a ratio equal to that of the BPA)

[10:08:00.0000] <TabAtkins>
jwalden: Okay, so I've looked at the spec again.  That behavior *should* be a bug, but it's not entirely clear from the spec, because it's not well-defined how the background-properties map into the inputs to the size resolution algorithm in the Image Values spec.

[10:09:00.0000] <TabAtkins>
The intent is that saying "background-size:5px" will make the "specified size" input be a 5px by 5px square, which immediately wins and sets the concrete object size to 5px by 5px.

[10:09:01.0000] <jwalden>
seems pretty clear to me how they map into the background-size algorithm in css3 b&b

[10:09:02.0000] <jwalden>
which takes as inputs only intrinsic width/height/aspect ratio

[10:13:00.0000] <jwalden>
fwiw I encountered this because I was implementing the css3 background-size algorithm for images partially or completely lacking intrinsic dimensions

[10:14:00.0000] <jwalden>
and the change to make gradients have no intrinsic ratio tripped a couple tests we have that expect the current behavior, rather than the one css3 b&b + images seems to specify

[10:15:00.0000] <TabAtkins>
I do need to resolve precisely where background-size sits in the size resolution order.

[10:24:00.0000] <TabAtkins>
jwalden: So, background-size actually repeats most of what's in the Image Values algorithm.

[10:24:01.0000] <jwalden>
that's possible

[10:24:02.0000] <jwalden>
that seems bad

[10:25:00.0000] <TabAtkins>
If you provide 0, 1, or 2 dimensions, the behavior is identical to the Image Values algorithm, with the dimensions being the "specified size".

[10:25:01.0000] <jwalden>
seems like images should delegate to css3 b&b for background-size, which *does* actually have a specified algorithm

[10:25:02.0000] <jwalden>
unlike <img> or <object>

[10:25:03.0000] <TabAtkins>
It should be the other way around, actually.  Image Values has the generic algorithm that everyone uses.

[10:25:04.0000] <TabAtkins>
But the B&B module was written before I wrote that algorithm, thus the current state of affairs.

[10:26:00.0000] <TabAtkins>
But anyway, the current behavior (where the gradient takes the ratio of the box as its intrinsic ratio) is a bug.

[10:26:01.0000] <TabAtkins>
It should size itself to the background-size box.

[10:26:02.0000] <jwalden>
wait

[10:26:03.0000] <jwalden>
so gradients *have* intrinsic dimensions then?

[10:27:00.0000] <TabAtkins>
no

[10:27:01.0000] <jwalden>
I guess I'm just confused how images would have anything more than a width (maybe), a height (maybe), and proportions (maybe)

[10:28:00.0000] <TabAtkins>
That is all they have, which means we're miscommunicating somehow.

[10:30:00.0000] <jwalden>
well, a gradient indicated by linear-gradient(...) has more than that somehow, because it has a different width/height/ratio depending on the context that uses it

[10:30:01.0000] <jwalden>
and the goal was, I thought, to make gradients a special case of images writ generally

[10:30:02.0000] <TabAtkins>
That's completely expected.  You use a gradient as a background on a 200x100 box, the gradient will be resolved into a 200x100 image.

[10:31:00.0000] <TabAtkins>
This is described by the sizing algorithm.

[10:31:01.0000] <TabAtkins>
Background-size *should* affect that computation, so writing "width:200px; height:100px; background-size:5px;" should resolve it into a 5x100 image.

[10:31:02.0000] <jwalden>
so "Gradients have no intrinsic dimensions." in 5. Gradients is just flat-out wrong?

[10:32:00.0000] <jwalden>
wait

[10:32:01.0000] <TabAtkins>
No, it's correct.  I'm not sure what we're confusing each other over. ^_^

[10:32:02.0000] <jwalden>
background-size: 5px is b-s: 5px auto, which means the height is chosen to preserve the proportions of the image

[10:32:03.0000] <jwalden>
which for a gradient that ostensibly is 200x100 means you'd have 5px 2.5px rendered

[10:33:00.0000] <TabAtkins>
Yes.  But gradients have no proportions before resolution, so it instead drops down to taking the height of the sizing area.

[10:33:01.0000] <TabAtkins>
You're confusing yourself by thinking about things in the wrong order.

[10:33:02.0000] <jwalden>
so, this idea of an image that doesn't have proportions, then does, is what's not represented by b&b

[10:33:03.0000] <TabAtkins>
You're imagining it goes "set size of element" -> "resolve gradient size" -> "apply background-size".

[10:35:00.0000] <TabAtkins>
jwalden: Well, it's unclear in B&B, because such a thing didn't exist at the time.

[10:35:01.0000] <jwalden>
I don't think I'm imagining anything -- I'm simply reading b&b which says that the size of the background is determined by consulting the specified background-size, then resolving any auto/contain/cover using the intrinsic dimensions width, height, and ratio of the image

[10:35:02.0000] <TabAtkins>
...yes?  That's correct, and consistent with what I've been saying.

[10:35:03.0000] <jwalden>
which exist independent of context, as part of the image itself

[10:35:04.0000] <TabAtkins>
Can you give me a situation that you believe is resolving incorrectly?

[10:38:00.0000] <jwalden>
200x100 box, with gradient, background-size: 20px auto; 1) width is 20px as specified; 2) "An ‘auto’ value for one dimension is resolved by using the image's intrinsic ratio and the size of the other dimension, or failing that, using the image's intrinsic size, or failing that, treating it as 100%." => no intrinsic ratio to consult, no intrinsic size, fail to treating as 100% 3) rendered...

[10:38:01.0000] <jwalden>
...size is 20px by 100px

[10:38:02.0000] <TabAtkins>
Yes, that's entirely correct.

[10:38:03.0000] <TabAtkins>
What part of that do you think is inconsisten with what I've said?

[10:38:04.0000] <jwalden>
I don't

[10:39:00.0000] <jwalden>
so I'm confused about how we're disagreeing, then, because I thought we were somehow

[10:39:01.0000] <TabAtkins>
We aren't.  ^_^

[10:39:02.0000] <jwalden>
well then!

[10:39:03.0000] <jwalden>
glad that's settled

[10:39:04.0000] <TabAtkins>
Violent agreement it is!

[10:40:00.0000] <TabAtkins>
And, important note, the gradient itself is rendered into a 20x100 box, so color-stop positions done as lengths are resolved against that.  They're not resolved against a 200px-wide box and then scaled down to 20px-wide.

[11:55:00.0000] <bga_>
omg chome has --allow-all-activex flag

[11:55:01.0000] <bga_>
%)

[12:32:00.0000] <hsivonen>
krijnh: it seems that the yellow highlights and the hiding of joins/parts is broken again

[13:03:00.0000] <Hixie>
ifette: yt?

[13:03:01.0000] <ifette>
hey

[13:03:02.0000] <ifette>
Hixie: yes

[13:03:03.0000] <Hixie>
hey

[13:03:04.0000] <Hixie>
are the protocol updates ready?

[13:04:00.0000] <Hixie>
our respective chairs are getting all antsy

[13:04:01.0000] <Hixie>
dunno why they get to be antsy, but it is what it is

[13:04:02.0000] <ifette>
Hixie: there's a few other changes that need to make it out in -08, e.g. reviews that came in from the TSV area director, some changes around ping/pong, etc

[13:04:03.0000] <ifette>
I have a draft that incorporates hooks for you already

[13:04:04.0000] <ifette>
but there's a bit more work before it can be called -08

[13:04:05.0000] <Hixie>
cool, that'll work

[13:04:06.0000] <ifette>
i will send it to you via email

[13:05:00.0000] <Hixie>
thanks

[13:05:01.0000] <Hixie>
/me doesn't really care about version numbers :-)

[13:07:00.0000] <ifette>
Hixie: it's sent. I need to run, have a lunch meeting.

[13:07:01.0000] <Hixie>
later

[13:07:02.0000] <Hixie>
thanks

[13:07:03.0000] <ifette>
I think I defined everything (including how to send and receive data, sigh)

[13:08:00.0000] <ifette>
afk

[13:08:01.0000] <Hixie>
ok let's see if i can find the things i was supposed to update!

[13:10:00.0000] <Hixie>
aha, i have a folder for websocket issues

[13:10:01.0000] <Hixie>
perfect

[13:14:00.0000] <Ms2ger>
Hixie, our implementers are getting antsy too ;)

[13:15:00.0000] <Hixie>
they have a valid reason to be antsy

[13:16:00.0000] <smaug____>
Ms2ger: if you saw my bug comment, I was truly just wondering where the discussion about API changes is happening. Since I don't recall such emails in WebApps

[13:17:00.0000] <Ms2ger>
Didn't mean to suggest anything else

[13:18:00.0000] <smaug____>
well, Hixie might know where the discussion about changes to WebSocket API is happening :9

[13:18:01.0000] <smaug____>
:)

[13:18:02.0000] <Ms2ger>
In his IMAP folders? :)

[13:19:00.0000] <Hixie>
whatwg, webapps, and w3c bugzilla

[13:21:00.0000] <smaug____>
Hixie: sicking mentioned something about adding open()

[13:21:01.0000] <smaug____>
I can't really find any email about that

[13:21:02.0000] <sicking>
smaug____: have you looked at the bug?

[13:21:03.0000] <Hixie>
i have no plans to add open(), but there have been some mails about it

[13:21:04.0000] <Hixie>
i haven't yet read all the feedback though

[13:21:05.0000] <smaug____>
sicking: ah, you're awake!

[13:22:00.0000] <Hixie>
so maybe there is some reason to add it that i am not yet aware of

[13:22:01.0000] <sicking>
/me is in meeting

[13:22:02.0000] <smaug____>
oh, right, I'm not in EET, atm

[13:22:03.0000] <sicking>
Hixie: last i looked, binary data and redirects were easier if we had .open

[13:22:04.0000] <Hixie>
(so far the only argument i've seen is "you can't hook the event listeners before the events fire if you don't have open()", which is false)

[13:22:05.0000] <Hixie>
sicking: i look forward to coming across the relevant feedback :-)

[13:23:00.0000] <Hixie>
i can't see how it would affect either of those, but i'm certainly happy to find out

[13:23:01.0000] <sicking>
Hixie: for binary data, you want to choose which format you want the result (blob or arraybuffer)

[13:23:02.0000] <sicking>
Hixie: which you can do after opening, but you risk the UA wasting time converting

[13:24:00.0000] <Ms2ger>
Hixie, if you had time to look at http://www.w3.org/Bugs/Public/show_bug.cgi?id=12742 , that would be nice

[13:24:01.0000] <Ms2ger>
(Turns out someone is implementing meter)

[13:24:02.0000] <Hixie>
Ms2ger: on it

[13:24:03.0000] <smaug____>
sicking: couldn't you just give all that information as parameters to ctor?

[13:24:04.0000] <Hixie>
sicking: why would the UA spend any time converting? surely the behind-the-scenes storage is identical

[13:24:05.0000] <Hixie>
sicking: my plan was to just expose both

[13:25:00.0000] <sicking>
smaug____: sure, but that means there's two APIs for choosing format. You need the ability to change format after receiving messages

[13:25:01.0000] <smaug____>
aha

[13:25:02.0000] <smaug____>
ok, I thought there would be one socket for each type

[13:25:03.0000] <sicking>
Hixie: if we first store to a blob, and then the page says "i want array buffers", we wasted time streaming to disk and then reading back into memory

[13:25:04.0000] <Hixie>
(for each message, just do .getDataAsBlob() or .getDataAsArrayBuffer() or whatnot and once you've done it the shop is closed and that's it)

[13:25:05.0000] <Hixie>
sicking: why would you stream to disk?

[13:25:06.0000] <Hixie>
sicking: just have the blob be memory-backed

[13:26:00.0000] <sicking>
Hixie: if you're receiving a huge thing

[13:26:01.0000] <Hixie>
why would the size matter

[13:26:02.0000] <Hixie>
you just memory map something that can be paged out

[13:26:03.0000] <sicking>
the whole reason you'd ever want to use blobs at all, is that the data is so large that you would rather not keep it in memory

[13:26:04.0000] <sicking>
that's the only reason you'd ever use a blob with websocket

[13:26:05.0000] <sicking>
or XHR

[13:27:00.0000] <Hixie>
whether it's in the ram chips or the disk cache or the disk or any number of other places seems like something the OS should take care of

[13:27:01.0000] <Hixie>
you just give the OS the pile of data, ask for some address space for it, and let it figure it out

[13:27:02.0000] <sicking>
Hixie: no, you don't want to have the same API for managing 4 bytes as for 4MB

[13:27:03.0000] <Hixie>
Ms2ger: in what sense is it ambiguous? i don't follow the bug.

[13:28:00.0000] <sicking>
Hixie: that's the same reason we have different APIs for <video> and <img.

[13:28:01.0000] <sicking>
<img>

[13:28:02.0000] <sicking>
you need to think differently when you handle large amounts of data

[13:28:03.0000] <Hixie>
we have different apis for <video> and <img> because <video> can be stopped and started and <img> can't

[13:28:04.0000] <Hixie>
not because they are different sizes

[13:28:05.0000] <sicking>
i disagree

[13:28:06.0000] <Hixie>
as the person who wrote the api, i am pretty sure i'm confident of the reasoning that led to the api :-)

[13:29:00.0000] <sicking>
Hixie: the buffering APIs on <video> has nothing to do with start/stop

[13:29:01.0000] <Hixie>
well sure, there's nothing to buffer for <img>, you always have to show all of it

[13:29:02.0000] <sicking>
right

[13:29:03.0000] <Hixie>
what's that got to do with 4 bytes vs 4 MB?

[13:29:04.0000] <Hixie>
if the 4MB is a PNG, you need all of it

[13:30:00.0000] <Hixie>
if the 400 bytes is a WebM video, you can use buffering APIs

[13:30:01.0000] <sicking>
so my point is that if you want to be able to manage large amounts of data, you need separate APIs for doing so efficently

[13:30:02.0000] <Hixie>
i don't think the size is the important factor here

[13:30:03.0000] <sicking>
if we had the same APIs for managing Blobs as for say Strings, people will write more inefficient code

[13:31:00.0000] <Hixie>
Strings vs Blob is a red herring, since the difference there is one of encodings

[13:31:01.0000] <Hixie>
Blob vs ArrayBuffer is the better comparison

[13:31:02.0000] <Hixie>
and the difference there is just what you're goign to do with it, not the size

[13:31:03.0000] <sicking>
that doesn't make it a red herring

[13:32:00.0000] <sicking>
there are multiple differences I agree

[13:32:01.0000] <Hixie>
you can have a 10 bytes Blob and a 10MB ArrayBuffer and not be doing anything wrong

[13:32:02.0000] <Ms2ger>
Hixie, so, what would document.createElement("meter").max return?

[13:32:03.0000] <Hixie>
and vice versa

[13:32:04.0000] <sicking>
Hixie: except that you'll likely end up with inefficent code

[13:33:00.0000] <sicking>
Hixie: you want APIs where expensive operations feel expensive, and cheap operations feel cheap

[13:33:01.0000] <hsivonen>
so now after protocol delays we are going to have API delays before Web Sockets become an unprefixed interoperable part of the Web platform?

[13:33:02.0000] <Hixie>
Ms2ger: 0.0

[13:33:03.0000] <Hixie>
hsivonen: if by "delays" you mean "a couple of days"

[13:33:04.0000] <smaug____>
hsivonen: and Chrome continues to ship the non-prefixed old API/protocol

[13:33:05.0000] <Hixie>
sicking: sure

[13:34:00.0000] <Hixie>
sicking: but that's not the difference here

[13:34:01.0000] <sicking>
Hixie: and copying 4 bytes and 4MB takes different time

[13:34:02.0000] <Hixie>
sicking: Blob is about handling an opaque set of bytes, ArrayBuffer is about reading the bytes.

[13:34:03.0000] <Hixie>
sicking: how they are backed is an implementation concern not exposed in the API.

[13:34:04.0000] <sicking>
Hixie: nope

[13:34:05.0000] <hsivonen>
Hixie: well, let's hope it's a just a couple of days plus one six-week development cycle

[13:34:06.0000] <sicking>
Hixie: ArrayBuffer is opaque

[13:34:07.0000] <Ms2ger>
That's what I thought, but the patch returns 1.0

[13:34:08.0000] <Hixie>
Ms2ger: better fix it then :-)

[13:34:09.0000] <sicking>
Hixie: both ArrayBuffer and Blob represent a bag of bytes

[13:35:00.0000] <Hixie>
sicking: a

[13:35:01.0000] <Hixie>
er

[13:35:02.0000] <sicking>
Hixie: which you can use other APIs to read from

[13:35:03.0000] <The_8472>
sicking, a bag does not impose ordering. an array does

[13:35:04.0000] <Hixie>
sicking: true, i forgot about FileReader

[13:36:00.0000] <sicking>
Hixie: ArrayBuffer represents a size small enough that it makes sense to keep in memory

[13:37:00.0000] <Ms2ger>
So, want to add, say, "(For the purposes of reflection, these attributes don't have default values.)"? :)

[13:37:01.0000] <Hixie>
sicking: i disagree that there is a size implication to Blob or ArrayBuffer.

[13:37:02.0000] <Hixie>
Ms2ger: there's like a 100 attributes in the spec to which that would apply. It would just make the spec bigger without improving its quality.

[13:37:03.0000] <sicking>
Hixie: may i steal your editor argument? ;-)

[13:38:00.0000] <Hixie>
sicking: you can certainly argue that the specs intended for there to be a difference

[13:38:01.0000] <Ms2ger>
K

[13:38:02.0000] <Hixie>
sicking: but they don't have one in the finished product

[13:38:03.0000] <sicking>
Hixie: they are certainly optimized for the usecase of being different size

[13:38:04.0000] <sicking>
Hixie: people can always abuse any API if that's what you mean?

[13:39:00.0000] <sicking>
Hixie: this is why ArrayBuffer allows synchronous access, but Blob does not

[13:39:01.0000] <Hixie>
sicking: I would agree that ArrayBuffer is more optimal for in-memory data and Blob is more optimal for data that is stored on something with high latency

[13:39:02.0000] <Hixie>
sicking: but that's also independent of size

[13:40:00.0000] <Hixie>
sicking: if i have a gig of data in RAM, and one byte of data on a tape in an automated tape cassette deck system, it's gonna be quicker to read the entire gig than the one byte

[13:40:01.0000] <Hixie>
sicking: and ArrayBuffer would be appropriate for the former while Blob is appropriate for the latter

[13:40:02.0000] <Hixie>
sicking: and not vice versa

[13:40:03.0000] <sicking>
Hixie: right, so erm, i'm not gonna optimize the API for that computer

[13:41:00.0000] <Hixie>
"that computer" is also called "the cloud"

[13:41:01.0000] <sicking>
your cloud is backed by a one byte tape cassette?

[13:42:00.0000] <Hixie>
i didn't say the cassette only had one byte

[13:42:01.0000] <Hixie>
i just meant that you had one byte of interest on the tape

[13:42:02.0000] <Hixie>
and yes, the cloud is backed by tape backup

[13:42:03.0000] <Hixie>
(q.v. http://gmailblog.blogspot.com/2011/02/gmail-back-soon-for-everyone.html)

[13:43:00.0000] <sicking>
so if you want a performant app, you should not use a ArrayBuffer that swaps to that disk

[13:43:01.0000] <sicking>
it'll work if you do, it'll just be slow

[13:44:00.0000] <Hixie>
and you shouldn't use a blob for the 1GB in-memory file, since you would have to convert the Blob to an ArrayBuffer to read it

[13:44:01.0000] <Hixie>
anyway i think the original argument is better expressed as "we don't want to have to keep the whole thing in memory if we don't have to"

[13:44:02.0000] <Hixie>
so if the author can give a hint that the data won't be immediately read, that would be a good hint to give

[13:45:00.0000] <sicking>
yes

[13:45:01.0000] <sicking>
well

[13:45:02.0000] <sicking>
as long as i can choose if i want the next message as an arraybuffer or a blob i'm happy

[13:45:03.0000] <sicking>
and we can disagree what the use cases are :)

[13:45:04.0000] <Hixie>
controlling the next message is probably not ideal either

[13:46:00.0000] <Hixie>
if the server tells you "i'm about to send a 1GB attachment" and then sends it, it might be too late by the time you process the event for the warning message to help the UA with the next message

[13:46:01.0000] <sicking>
so what do you propose?

[13:46:02.0000] <Hixie>
what you really want is a way for the script to tell the UA ahead of time which messages should be stored as Blobs and which shouldn't, or something like that...

[13:47:00.0000] <Hixie>
hmm

[13:47:01.0000] <Hixie>
do binary messages have any metadata?

[13:47:02.0000] <Hixie>
or as they straight binary data?

[13:47:03.0000] <sicking>
don't know

[13:47:04.0000] <Hixie>
s/as/are/

[13:47:05.0000] <Hixie>
/me looks

[13:48:00.0000] <sicking>
i think it also depends on what the client side is going to use the data for

[13:48:01.0000] <Hixie>
man, this protocol got way more complicated

[13:48:02.0000] <sicking>
if i know that all i'm gonna do with the data is to stick it in IndexedDB, then it's nice if i can just tell the socket to give me a blob

[13:48:03.0000] <sicking>
this is sort of similar to the responseType property on XHR

[13:49:00.0000] <Hixie>
no metadata, it seems

[13:50:00.0000] <Hixie>
with XHR, you ask for the data ahead of time, though

[13:50:01.0000] <sicking>
ok, i gotta take off

[13:50:02.0000] <Hixie>
later

[13:50:03.0000] <sicking>
you are with websocket too, no? by connecting

[13:50:04.0000] <Hixie>
websocket is full-duplex, not request-response

[13:51:00.0000] <Hixie>
you don't know that the next packet you get is going to be what you last asked for

[13:51:01.0000] <Hixie>
it could be a random update

[13:51:02.0000] <sicking>
sure, i'm not sure I see the difference thoguh

[13:52:00.0000] <Hixie>
say you ask for a big image you want to store somewhere

[13:52:01.0000] <Hixie>
so you set the websocket object to give you a blob

[13:53:00.0000] <Hixie>
but the next message you get from the server is a binary status message

[13:53:01.0000] <Hixie>
and only then do you get the big image

[13:53:02.0000] <sicking>
well, that can easily be solved on a app level

[13:53:03.0000] <sicking>
just send one message saying what's about to come next

[13:53:04.0000] <Hixie>
by the time you are processing that message, it's too late

[13:54:00.0000] <Hixie>
that message and the binary data will probably all be read from the same IP packet and processed by the UA before any events are fired

[13:54:01.0000] <sicking>
if it's that small amount of data then it doesn't really matter though

[13:54:02.0000] <sicking>
the implementation can just create a memory backed blob

[13:55:00.0000] <sicking>
effectively the same thing happens with XHR

[13:55:01.0000] <Hixie>
you're going to be getting a lot of data very quickly

[13:55:02.0000] <sicking>
by the time you fire the HEADERS_RECEIVED event, the body will be full on streaming

[13:55:03.0000] <Hixie>
if the main UI thread is busy doing something like whosing an alert(), you're going to get the whole 4MB before you have had a chance to tell the script about the warning message

[13:56:00.0000] <sicking>
sure

[13:56:01.0000] <sicking>
same thing with XHR

[13:56:02.0000] <Hixie>
well i can't speak for XHR's design

[13:56:03.0000] <sicking>
the page can just choose not to put up an alert

[13:56:04.0000] <sicking>
this is all about giving the page the tools to manage its resources

[13:57:00.0000] <sicking>
it can do so well, or it can do so crappily

[13:57:01.0000] <Hixie>
are we talking about an API that forces teh response to be just one type, like XHR, or an API that gives a hint but doesn't preclude getting the other type?

[13:58:00.0000] <Hixie>
i don't think it's realistic to expect a whole event loop spin to occur fast enough after the first message is processed to be useful for the next message

[13:58:01.0000] <sicking>
well, if the app strings two messages together, it's got basically the same capabilities as XHR, right?

[13:59:00.0000] <Hixie>
i can't speak for XHR's design. As far as I can tell, allowing responseType to be set in the headers stage nullifies any implementation benefit for that API.

[13:59:01.0000] <sicking>
out of curiosity, what bandwidth are you envisioning?

[14:01:00.0000] <Hixie>
well i dunno. in some parts of the world we're still talking 24kbps, but in other parts of the world we're seeing deployment of residential terabit broadband

[14:01:01.0000] <Hixie>
but since the cpu is probably somewhat proportional to the bandwidth, i doubt that matters much

[14:02:00.0000] <sicking>
my experience is that downloading 4MB takes a lot longer than spinning the event loop a couple of times

[14:02:01.0000] <sicking>
but i haven't run any numbers

[14:03:00.0000] <sicking>
ok, taking off for real

[14:05:00.0000] <Hixie>
seems like the better solution is to just have the UA stream to memory at first, then past a dynamic threshold switch to streaming to disk

[14:06:00.0000] <Hixie>
the threshold being derived by inspection, based on the frequency with which getAsBlob() is called vs getAsBuffer() for each particular size

[14:06:01.0000] <Hixie>
maybe on a per-origin basis

[14:07:00.0000] <Hixie>
although i have to wonder, won't many protocols consist of a binary prefix saying what kind of data it is followed by something to be read as a blob?

[14:07:01.0000] <Hixie>
instead of a text frame followed by a binary frame?

[14:08:00.0000] <Hixie>
i guess the latter is easier with this api

[14:08:01.0000] <bfrohs>
http://bit.ly/iUaRu8 - Is it just me, or are the controls coming out red? (in chrome, fine in firefox)

[14:09:00.0000] <bfrohs>
And just to make sure I'm not crazy, "input" should *not* work in css for "audio" controls, correct?

[14:10:00.0000] <TabAtkins>
They shouldn't.  But they do, because our implementation is bad right now.

[14:10:01.0000] <TabAtkins>
Near future, controls will be properly hidden under a shadow dom, and won't match selectors in the outer page.

[14:14:00.0000] <bfrohs>
TabAtkins: kaykay, thanks!

[14:29:00.0000] <TabAtkins>
Hixie: Just published Lists WD, a full 8.5 years after your last WD.  I know that's a record in CSS; I wonder how it compares across the W3C?

[14:31:00.0000] <Hixie>
TabAtkins: meh, publishing WDs is so last decade

[14:32:00.0000] <TabAtkins>
Whatevs.

[14:34:00.0000] <zewt>
last decade, or, well, 8.5 years ago at any rate

[14:34:01.0000] <bfrohs>
TabAtkins: Section 7 Using Content as Markers: The 'marker' value for 'display'... Did you mean to have 'same as CSS2.1' listed for each property?

[14:35:00.0000] <TabAtkins>
bfrohs: Yes.  The preprocessor that generates the property table at the end gets angry without all the values.


2011-05-25
[17:01:00.0000] <Hixie>
/me casts around for abarth

[17:20:00.0000] <Philip`>
/me finds that it's pretty trivial to circumvent cross-origin font canvas tainting via timing attacks

[17:25:00.0000] <Hixie>
Philip`: for the "find which characters are in the font" attack?

[17:29:00.0000] <Philip`>
Finding the shapes of the glyphs

[17:30:00.0000] <Hixie>
in that case you should be able to get data from any cross-origin image too, no?

[17:33:00.0000] <Philip`>
When filling text, if the glyph is outside the clipping area then it doesn't even attempt drawing any pixels

[17:33:01.0000] <Philip`>
which affects the timing significantly

[17:33:02.0000] <TabAtkins>
Oh, interesting.

[17:33:03.0000] <TabAtkins>
So, apply 1px clipping area, and profit.

[17:34:00.0000] <Philip`>
With images it'll draw every pixel regardless of the value, so any differences would be far more subtle

[17:34:01.0000] <Hixie>
is there an expensive composite mode or shadow or something that can make it different enough?

[17:35:00.0000] <TabAtkins>
Given the current canvas operations, I doubt it.

[17:35:01.0000] <TabAtkins>
None of the mechanics should operate significantly differently based on the color of the canvas.

[17:39:00.0000] <Philip`>
http://philip.html5.org/demos/canvas/font-timing.html - very rough prototype

[17:39:01.0000] <Philip`>
In Chromium 9.0 I get a very clear "A" shape after the first iteration

[17:40:00.0000] <Philip`>
(on Linux)

[17:40:01.0000] <Philip`>
Opera 11.10 gives a sort of triangle shape that improves over time

[17:41:00.0000] <roc>
doesn't seem to work on Firefox

[17:41:01.0000] <Hixie>
i don't really understand what we're protecting against here, personally

[17:41:02.0000] <Hixie>
wfm on firefox on mac

[17:41:03.0000] <Philip`>
Firefox just seems to hang my windowing system for tens of seconds until I get impatient and click X and then it closes a minute later

[17:43:00.0000] <roc>
on windows I mean

[17:43:01.0000] <roc>
it depends on the font backend I guess

[17:43:02.0000] <Philip`>
/me means on Linux and hasn't tested elsewhere

[17:43:03.0000] <Hixie>
chrome and firefox on mac seem to very quickly give an A

[17:44:00.0000] <roc>
on Mac we fall back to explicit path filling for large font sizes and I'm not surprised that that triggers optimizations when the path doesn't intersect the clip

[17:44:01.0000] <roc>
on Windows we don't do that ourselves, who knows what GDI and D2D do

[17:45:00.0000] <roc>
anyway, neat demo!

[17:45:01.0000] <Hixie>
indeed

[17:45:02.0000] <TabAtkins>
<3 timing channel attacks

[17:45:03.0000] <roc>
you can't

[17:46:00.0000] <Philip`>
TabAtkins: I'm sure there's more than 3

[17:46:01.0000] <Hixie>
aw man, now you've surely gotten him going through the unicode pages

[17:47:00.0000] <Philip`>
In Chromium on Linux it seems mostly fill-rate dependent, rather than being dependent on clipping - the difference is much smaller with non-'lighter' compositing

[17:47:01.0000] <jamesr>
roc: the font size is 10px, there's just a large scale applied

[17:47:02.0000] <Hixie>
TabAtkins: U+2665, U+2764, or the U+1F491-U+1F49F range

[17:47:03.0000] <jamesr>
Philip`: try with a large font size

[17:47:04.0000] <jamesr>
i dunno if we consider the scale when deciding whether to use GDI to raster or grab a path and fill the path

[17:47:05.0000] <roc>
jamesr: I mean the post-resize scale factor

[17:48:00.0000] <jamesr>
we probably _should_ be using the post-resize scale factor

[17:48:01.0000] <Philip`>
jamesr: Browsers seem to care about fontsize * scalefactor, e.g. in Chromium it stops drawing the text if that's more than 12K or something

[17:48:02.0000] <Philip`>
and in Firefox it seems to clamp the post-scale font size

[17:48:03.0000] <Philip`>
(in 4.0, on Linux)

[17:49:00.0000] <Philip`>
(That "12K" isn't a precise figure, I just think it broke after about 12px with scale 1024)

[17:50:00.0000] <jamesr>
Philip`: try applying a very slight skew

[17:51:00.0000] <jamesr>
might force you down the path case in more cases

[18:11:00.0000] <Philip`>
http://philip.html5.org/demos/canvas/img-timing-1.html - works for me in Chromium

[18:11:01.0000] <Philip`>
http://philip.html5.org/demos/canvas/img-timing-2.html - works for me in Opera

[18:12:00.0000] <Philip`>
(Warning: artwork may be disturbing)

[18:14:00.0000] <jamesr>
i'm just getting noise

[18:14:01.0000] <roc>
interesting

[18:14:02.0000] <jamesr_>
hm, works better on linux

[18:14:03.0000] <jamesr_>
so it's testing blend time?

[18:15:00.0000] <Philip`>
((This is just drawImageing one pixel of an image at a time, and transparent vs solid makes a difference))

[18:15:01.0000] <roc>
their compositing code has special cases for zero alpha?

[18:15:02.0000] <roc>
I'm surprised that wins

[18:15:03.0000] <jamesr_>
i wonder what layer is doing that

[18:16:00.0000] <jamesr_>
we have some special case code for 1x1 transparent images in various bits of the codebase (mostly for spacer.gif)

[18:16:01.0000] <Philip`>
My Chromium is faster for alpha=255 than for alpha=0

[18:16:02.0000] <Philip`>
(in default source-over compositing)

[18:16:03.0000] <jamesr_>
but is alpha=254 different from alpha=255?

[18:16:04.0000] <jamesr_>
and what platform are you on? chrome/mac=coregraphics, chrome/win or linux=skia

[18:17:00.0000] <roc>
Firefox/Linux would be XRender, that would be interesting to test

[18:17:01.0000] <erlehmann>
i have firefox on linux, what should i test?

[18:17:02.0000] <jamesr_>
getting noise in Mozilla/5.0 (X11; Linux i686 on x86_64; rv:6.0a1) Gecko/20110523 Firefox/6.0a1

[18:17:03.0000] <erlehmann>
Philip`, am i right with the interpretation that you attempt to read cross origin resources via timing attacks?

[18:17:04.0000] <Philip`>
Chromium seems to be slow for alpha=0, alpha=1ish, alpha=254ish, fast for alpha=255

[18:17:05.0000] <jamesr_>
the values are pretty low - 1/2

[18:18:00.0000] <jamesr_>
Philip`, yeah then it's probably a check for full transparent that skips blending

[18:18:01.0000] <Philip`>
(I'm using Chromium 9.0 on Linux)

[18:18:02.0000] <jamesr_>
9.0? wtf

[18:18:03.0000] <jamesr_>
what museum did you steal chromium 9.0 from?

[18:19:00.0000] <AryehGregor>
It's probably the default version on Debian or something.

[18:19:01.0000] <AryehGregor>
They like years-old software.

[18:19:02.0000] <Philip`>
I installed chromium-bin on Gentoo some time ago, and they stopped updating it

[18:19:03.0000] <jamesr_>
debian is 6.0

[18:19:04.0000] <AryehGregor>
Nice.

[18:19:05.0000] <Philip`>
and I haven't cared enough to find a new version

[18:20:00.0000] <roc>
I'll p0wn your system and update you to something reasonable

[18:20:01.0000] <erlehmann>
I use Chromium 6.0

[18:20:02.0000] <erlehmann>
In before owned.

[18:20:03.0000] <AryehGregor>
Of course, I could easily get some ancient version of Chrome too, on Linux, if the package repository got uninstalled or something.

[18:20:04.0000] <AryehGregor>
Not just Chromium.

[18:20:05.0000] <Philip`>
Opera with 'lighter' compositing seems to be fast for alpha=0, slow for everything else

[18:21:00.0000] <jamesr_>
hah

[18:22:00.0000] <Philip`>
/me hasn't tried other modes

[18:22:01.0000] <jamesr_>
http://code.google.com/p/skia/source/browse/trunk/src/core/SkDraw.cpp#1113

[18:22:02.0000] <Philip`>
erlehmann: Yes, it's trying to extract image data without using getImageData/toDataURL (thus avoiding the cross-origin-information-leakage checks)

[18:22:03.0000] <jamesr_>
i think that's the early out in question here

[18:23:00.0000] <Philip`>
erlehmann: and you should get a rough smiley face in the table if it's working (possibly after waiting a while for it to do multiple iterations)

[18:23:01.0000] <jamesr_>
only useful for fully transparent vs not, though, which is way less useful than the webgl case

[18:23:02.0000] <jamesr_>
where you can get arbitrary bits from arbitrary color channels

[18:23:03.0000] <erlehmann>
Philip`, *very* rough. but i see it. hopefully we can all use your timing attacks instead of JSONP now ;P

[18:24:00.0000] <jamesr_>
hm, if you could somehow apply a color mask before doing this attack then you could get more info out

[18:25:00.0000] <jamesr_>
roc is probably chuckling evilly about http://weblogs.mozillazine.org/roc/archives/2011/02/distinguishing.html :)

[18:25:01.0000] <roc>
well

[18:25:02.0000] <Philip`>
jamesr_: I think you can get arbitrary bits from the alpha channel - draw the image to a temporary canvas with globalAlpha=0.5, then if a pixel was previously non-transparent and is now transparent then you know it must have alpha=1, etc

[18:26:00.0000] <Philip`>
(I'm assuming drawImage of canvas is the same as drawImage of img, which is false, but anyway)

[18:27:00.0000] <roc>
jamesr_: I would be chuckling if I wasn't one of the people who are going to be on the hook for solving the problem...

[18:27:01.0000] <roc>
so I feel more like a deep sigh

[18:28:00.0000] <roc>
jamesr: is that really your early-exit path here?

[18:29:00.0000] <roc>
I sort of doubt t

[18:29:01.0000] <Philip`>
Do any browsers have high-resolution timers yet?

[18:29:02.0000] <Philip`>
(That'd probably make this much easier than with Date.now())

[18:30:00.0000] <jamesr_>
roc, i dunno, i'm just completely guessing

[18:33:00.0000] <roc>
async rendering, like pretty much any GPU-accelerated canvas, should make these timing attacks much more difficult

[18:33:01.0000] <roc>
so it'd be interesting to try on FF4/Windows, or IE9, or Chrome with acceleration enabled

[18:33:02.0000] <jamesr_>
the webgl demos work fine with readback

[18:34:00.0000] <jamesr_>
or glFinish()

[18:34:01.0000] <jamesr_>
async is no help

[18:34:02.0000] <jamesr_>
you can force readback with canvas by doing getImageData

[18:34:03.0000] <Philip`>
You can't do getImageData if you've drawn cross-origin images

[18:34:04.0000] <jamesr_>
true, it's tainted

[18:34:05.0000] <jamesr_>
but you can just repeat the draw a bunch of times and observe throughput

[18:34:06.0000] <Philip`>
Would doing a drawImage of one canvas onto another cause a readback?

[18:34:07.0000] <jamesr_>
might add noise but it doesn't stop the fundamental issue

[18:35:00.0000] <jamesr_>
Philip`, it shouldn't

[18:35:01.0000] <jamesr_>
in our gpu impl it doesn't, modulo some weird bugs

[18:35:02.0000] <Philip`>
Is there anything you can do to a canvas to make it impossible to hardware-accelerate so it falls back to software?

[18:35:03.0000] <jamesr_>
like we have a lower size limit for gpu-backed canvas than for software-backed canvas

[18:35:04.0000] <jamesr_>
yeah

[18:35:05.0000] <jamesr_>
make it big but not too big

[18:35:06.0000] <jamesr_>
we'll probably also have to add some guards so if you make 20,000 canvas contexts some of them go software or something

[18:36:00.0000] <jamesr_>
i'm pretty sure you can get arbitrary color channels out through svg images somehow

[18:36:01.0000] <Philip`>
/me will add "var c = []; for (var i = 0; i < 20000; ++i) c.push(document.createElement('canvas').getContext('2d'))" to his script, then :-)

[18:37:00.0000] <jamesr_>
Philip`, in chromium today that is more likely to just crash or something

[18:37:01.0000] <jamesr_>
we haven't implemented ctx limiting like that

[18:37:02.0000] <Philip`>
Hmm, so use SVG in <img> which applies filters to an external image, then drawImage that into the canvas?

[18:38:00.0000] <Philip`>
/me guesses that shouldn't be too hard

[18:38:01.0000] <jamesr_>
assuming that svg allows you to map color channels to transparency somehow

[18:38:02.0000] <jamesr_>
which i'm sure it must, given that svg specifies everything under the sun

[18:39:00.0000] <tantek>
greetings. has anyone proposed <input type="identity-url"> in addition to <input type="url"> for use in login forms (possibly with <input type="password"> )

[18:39:01.0000] <tantek>
use cases: all the sites out there that have login forms

[18:39:02.0000] <cgcardona>
TabAtkins: hello. regarding your tweet last night. Like this? http://pastebin.com/index/3gMc8EPY

[18:39:03.0000] <jamesr_>
heycam might know a way to magick this up in svg

[18:39:04.0000] <Philip`>
http://www.w3.org/TR/SVG/filters.html#feColorMatrixElement looks slightly powerful

[18:40:00.0000] <jamesr_>
oh good god

[18:40:01.0000] <jamesr_>
yup, gg

[18:40:02.0000] <tantek>
and enabling browsers to autodetect such forms for more reliable identity/password/URL remembering and auto-fill

[18:40:03.0000] <jamesr_>
Philip`, now i dunno if anyone implements that correctly such that it works (svg <img> in WebKit is super super buggy in general)

[18:40:04.0000] <jamesr_>
but it seems possible

[18:40:05.0000] <heycam>
yeah, feColorMatrix probably can do what you want there

[18:40:06.0000] <tantek>
I'm thinking of writing up a proposal for adding <input type="identity-url"> and wanted to first see if anything similar has already been proposed / rejected, and or if there is any earlier work I should look at and possibly cite.

[18:41:00.0000] <Philip`>
I suppose there's the possibility of timing attacks on SVG rendering directly, too

[18:42:00.0000] <roc>
in Gecko we disallow external resource loading in SVG <img> for exactly this reason

[18:42:01.0000] <roc>
well, for other reasons too

[18:42:02.0000] <smaug____>
tantek: just curious, what is an identity-url (and shouldn't it be uri?)? and where does user get it?

[18:42:03.0000] <roc>
but this is one of them

[18:43:00.0000] <Philip`>
Presumably that wouldn't help if you can time non-canvas non-img SVG rendering sufficiently, though

[18:43:01.0000] <tantek>
smaug____: in short, identity-url could be an OpenID, could be a RelMeAuth URL, or could be a mailto URL that is paired with a password for email/password login

[18:44:00.0000] <roc>
Philip`: well, yeah

[18:44:01.0000] <Philip`>
...and if any part of SVG rendering is sufficiently sensitive to pixel values

[18:44:02.0000] <Philip`>
/me doesn't really care enough about SVG to see if that's feasible in practice, though

[18:44:03.0000] <tantek>
and in answer to "shouldn't it be uri?" - the short/easy answer is no, because <input type="url"> already exists in HTML5 (i.e. that bikeshed fight has already been fought - so let's just re-use the existing pattern/decision.

[18:44:04.0000] <smaug____>
/me has never heard of RelMeAuth :)

[18:44:05.0000] <tantek>
)

[18:44:06.0000] <tantek>
LMGTFY

[18:45:00.0000] <smaug____>
but apparently someone called tantek has written about it :)

[18:45:01.0000] <tantek>
http://microformats.org/wiki/RelMeAuth

[18:45:02.0000] <Hixie>
what's the downside of making canvas drawing always async, anyway? seems like it'd be a perf win in general.

[18:46:00.0000] <Hixie>
(i mean, other than implementation complexity, obviously)

[18:50:00.0000] <roc>
in some cases, overhead

[18:52:00.0000] <roc>
james suggests that it doesn't really help because you can observe throughput

[18:52:01.0000] <roc>
which I sort of buy, although it increases the cost of the attack considerably

[19:16:00.0000] <jamesr_>
Hixie, roc: yeah. it is async in our accelerated canvas 2d implementation

[19:16:01.0000] <jamesr_>
might cut down on the bandwidth of the attack

[19:17:00.0000] <jamesr_>
any gpu-backed canvas drawing implementation will be async to one degree or another

[19:17:01.0000] <Hixie>
observe throughput?

[19:17:02.0000] <jamesr_>
do a bunch of draws instead of just one, see how long it takes

[19:17:03.0000] <jamesr_>
no matter how much buffering the system does at some point it'll have to actually evaluate the draws

[19:17:04.0000] <Hixie>
how can you tell?

[19:17:05.0000] <Hixie>
if it's async, you can't read it back, right?

[19:18:00.0000] <jamesr_>
lots of ways. force the draw to complete through some indirect method, or just wait until your call is blocked because all the buffers are full

[19:18:01.0000] <jamesr_>
or let it go to screen (which will force it to evaluate) and observe the screen repaint time

[19:18:02.0000] <jamesr_>
which you can get indirectly in a number of ways

[19:19:00.0000] <Hixie>
huh. will have to think about that. bbiab

[19:19:01.0000] <jamesr_>
you can't defer the draw forever

[19:19:02.0000] <jamesr_>
later

[23:02:00.0000] <hsivonen>
So it seems that ICU4J has a bug when it comes to determining if a year has 53 ISO weeks

[23:03:00.0000] <hsivonen>
I wonder where I could find the math to independently verify/generate the list of 53-week years that is available on Wikipedia: http://en.wikipedia.org/wiki/ISO_week_date#Weeks_per_year

[00:02:00.0000] <hsivonen>
does the JS Date object implement the proleptic Gregorian calendar all the way back to Year 1 CE?

[01:17:00.0000] <zcorpan>
so we still haven't published

[03:40:00.0000] <hsivonen>
the date and time-related input types are still implemented in only Opera, right?

[03:40:01.0000] <hsivonen>
properly, that is

[03:41:00.0000] <hsivonen>
Bogus WebKit impls don't count as implemented

[03:43:00.0000] <Ms2ger>
Sounds right

[03:48:00.0000] <hsivonen>
Ms2ger: ok

[03:48:01.0000] <hsivonen>
I'm a bit unhappy about caniuse.com overstating support in Chrome

[03:48:02.0000] <hsivonen>
so I have to actually check stuff myself instead of trusting caniuse

[04:02:00.0000] <zcorpan>
hsivonen: ping him about it on twitter

[04:15:00.0000] <jgraham>
I really wish the spec would drop callers on HTMLCollection

[04:15:01.0000] <jgraham>
AIUI Gecko doesn't implement them

[04:16:00.0000] <jgraham>
and the behaviour is undefined in edge cases

[04:16:01.0000] <jgraham>
and there is no good reason to use them

[04:34:00.0000] <Ms2ger>
jgraham, implement DOM Core instead? :)

[04:38:00.0000] <Lachy>
jgraham, it seems that Opera, IE and WebKit all implement callers

[04:41:00.0000] <jgraham>
Lachy: Yes. They still suck though

[04:42:00.0000] <jgraham>
And they're not interoperable in edge cases

[04:42:01.0000] <jgraham>
e.g. my_html_collection(-1)

[04:43:00.0000] <Lachy>
interop on edge cases can be fixed. The issue is whether the behaviour is needed at all for the common cases.

[04:43:01.0000] <jgraham>
Well since gecko doesn't implement it it seems like it might well not be needed

[04:44:00.0000] <jgraham>
We certainly shouldn't add new interfaces with this legacy gunk on

[04:44:01.0000] <jgraham>
Even if it is more consustent

[04:44:02.0000] <jgraham>
*consistent

[04:44:03.0000] <Lachy>
also, it seems the spec definition of HTMLCollection.item() is wrong. Implementations accept either an unsigned long index or DOMString name

[04:44:04.0000] <jgraham>
Allowing people to be consistently stupid isn't a win

[04:45:00.0000] <jgraham>
Isn't the DOMString a differnt method?

[04:45:01.0000] <Lachy>
yes, .namedItem(DOMString) works, but so does .item(DOMString)

[04:46:00.0000] <jgraham>
Oh ffs

[04:46:01.0000] <Lachy>
/me goes to file a bug

[04:50:00.0000] <Lachy>
oh, wait. No, my test was incorrect. .item("test") was simply returning the first control, like .item(0).

[04:51:00.0000] <jgraham>
same as .item() I guess

[04:51:01.0000] <jgraham>
?

[04:51:02.0000] <Lachy>
hmm, no. IE does what I originally thought.

[04:52:00.0000] <Lachy>
other browsers don't. I guess we don't need that behaviour after all. I'll resolve my bug invalid

[04:53:00.0000] <hsivonen>
zcorpan: I pinged Fyrc on Twitter

[04:58:00.0000] <hsivonen>
zcorpan: regarding http://bugzilla.validator.nu/show_bug.cgi?id=817 , should I warn about more stuff than <style scoped>, date and time-related input, <input type=color>, <bdi>, <track>, <details>, <command> and <menu>?

[04:58:01.0000] <hsivonen>
should I warn about <mark> and <time>?

[05:04:00.0000] <Ms2ger>
meter?

[05:08:00.0000] <hsivonen>
Ms2ger: thanks

[05:16:00.0000] <MikeSmith>
hsivonen: if you are interested in working on http://bugzilla.validator.nu/show_bug.cgi?id=589 feel free to reassign it

[05:17:00.0000] <MikeSmith>
I had assigned it to myself when I was working a patch but I'm not going to be able to get back it to it til next week at the earliest

[05:19:00.0000] <hsivonen>
MikeSmith: I'm not in so much hurry that I couldn't wait for your patch :-)

[05:19:01.0000] <MikeSmith>
heh

[05:19:02.0000] <MikeSmith>
OK

[06:23:00.0000] <zcorpan>
hsivonen: type=color is supported by opera too

[06:25:00.0000] <hsivonen>
zcorpan: whoa. Thanks. (I should always test everything *again* instead of relying on my previous testing.)

[06:25:01.0000] <zcorpan>
hsivonen: i think <link sizes> is not supported anywhere

[06:25:02.0000] <hsivonen>
zcorpan: Apple's documentation suggests rel="apple-touch-icon" sizes="..." is supported

[06:26:00.0000] <hsivonen>
zcorpan: though apple-touch-icon is currently unregistered

[06:26:01.0000] <zcorpan>
oh, didn't know that

[06:27:00.0000] <zcorpan>
<blockquote cite>? ;)

[06:27:01.0000] <hsivonen>
zcorpan: hah. that's a good one.

[06:27:02.0000] <zcorpan>
<ol reversed>

[06:28:00.0000] <zcorpan>
<a ping>? what's the status on that?

[06:28:01.0000] <Ms2ger>
Mozilla has a broken, preffed off implementation since Fx3, I think that's it

[06:28:02.0000] <hsivonen>
IIRC, <a ping> is disabled in Firefox

[06:28:03.0000] <hsivonen>
does Chrome support <a ping>?

[06:29:00.0000] <hsivonen>
Ms2ger: what's broken about the Firefox impl (apart from being preffed off)?

[06:29:01.0000] <zcorpan>
hsivonen: fwiw <meter> is supported in opera

[06:29:02.0000] <Ms2ger>
The spec changed under us

[06:29:03.0000] <hsivonen>
zcorpan: thanks

[06:30:00.0000] <zcorpan>
crossorigin on img, video, audio

[06:30:01.0000] <zcorpan>
what's the status on <iframe srcdoc sandbox seamless>?

[06:31:00.0000] <zcorpan>
<video mediagroup>

[06:31:01.0000] <zcorpan>
(also on audio)

[06:31:02.0000] <zcorpan>
(ping is also on area)

[06:32:00.0000] <zcorpan>
<input dirname> <textarea dirname>

[06:33:00.0000] <hsivonen>
what's dirname?

[06:33:01.0000] <smaug____>
/me should start reviewing the patch for <meter>

[06:33:02.0000] <hsivonen>
I have a vague recollection of Chrome having one or two of the new iframe attributes

[06:33:03.0000] <smaug____>
not that really understand the reason for progress *and* meter

[06:33:04.0000] <zcorpan>
contextmenu=""

[06:34:00.0000] <zcorpan>
dropzone=""?

[06:34:01.0000] <zcorpan>
itemid

[06:34:02.0000] <zcorpan>
itemprop

[06:34:03.0000] <zcorpan>
itemref

[06:34:04.0000] <zcorpan>
itemscope

[06:34:05.0000] <zcorpan>
itemtype

[06:35:00.0000] <zcorpan>
hsivonen: it's a new bidi thing

[06:35:01.0000] <hsivonen>
zcorpan: I think I'm not going to warn on microdata, since it's not particularly dangerous to use it ahead of browser impls

[06:36:00.0000] <zcorpan>
that's fair enough

[06:36:01.0000] <hsivonen>
I didn't add warning for stuff like <footer> for that reason

[06:36:02.0000] <zcorpan>
<footer> is also implemented these days

[06:36:03.0000] <hsivonen>
though using <section><h1> might be a bit dangerous, but that ship has sailed so it's not worthwhile to warn about it

[06:37:00.0000] <hsivonen>
I'm not familiar with the threat scenarios with premature use of dropzone

[06:39:00.0000] <zcorpan>
dunno

[06:41:00.0000] <zcorpan>
maybe it's not so much of a treat, but would still be helpful to know why it doesn't work

[06:41:01.0000] <zcorpan>
s//h/

[06:57:00.0000] <hsivonen>
smaug____: progress is for progress bars. meter is for things like disk space usage indicators

[06:57:01.0000] <hsivonen>
smaug____: different widgets e.g. on Mac

[06:57:02.0000] <smaug____>
oh, there is a different widget on some system

[06:58:00.0000] <smaug____>
/me has given up with mac

[07:00:00.0000] <hsivonen>
it seems that Chrome doesn't support <iframe srcdoc> or <iframe seamless>

[07:00:01.0000] <hsivonen>
<iframe sandbox> can't be verified visually

[07:01:00.0000] <hsivonen>
oh. I guess I should add validation of the text/html-sandboxed MIME type, too

[07:02:00.0000] <hsivonen>
http://blog.chromium.org/2010/05/security-in-depth-html5s-sandbox.html

[07:02:01.0000] <hsivonen>
looks like they have support

[07:10:00.0000] <hsivonen>
oh. nice. Opera Mini has a hidden pref for turning off phone number linkification

[07:10:01.0000] <hsivonen>
(that almost always ends up linkifying something that isn't a phone number)

[07:13:00.0000] <smaug____>
chrome/linux seems to have different rendering for meter and progress, Opera/linux has the same

[07:27:00.0000] <hsivonen>
it's sad that CSP uses an X- header

[07:28:00.0000] <hsivonen>
did Chrome implement CSP with the X- syntax?

[07:28:01.0000] <hsivonen>
that is, is CSP now more than a product-specific thing_

[07:28:02.0000] <hsivonen>
?

[07:44:00.0000] <hsivonen>
hmm. bitbucket is down :-(

[07:46:00.0000] <Philip`>
Their web site looks okay to me

[07:50:00.0000] <hsivonen>
Philip`: https://bitbucket.org/validator/syntax/changesets fails for me

[07:50:01.0000] <hsivonen>
"Oops! An error occurred"

[07:51:00.0000] <hsivonen>
"Someone kicked over the bucket, sadface"

[07:51:01.0000] <hsivonen>
oh. now it loaded

[08:16:00.0000] <hsivonen>
wow. provisionally-registered HTTP headers that start with X- http://www.iana.org/assignments/message-headers/prov-headers.html

[08:16:01.0000] <hsivonen>
my sympathies to whoever fought the fight with the Designated Experts on those ones

[08:20:00.0000] <hsivonen>
/me discovers http://tools.ietf.org/html/draft-mutz-http-attributes-01

[08:47:00.0000] <hsivonen>
Hixie: do you have any plans to import X-Content-Security-Policy and X-Frame-Options to HTML without invoking the "applicable specs" clause?

[08:53:00.0000] <hsivonen>
FWIW, I investigated doing HTTP header validation today

[08:54:00.0000] <hsivonen>
but decided against it, because real Web content uses unregistered headers too often to make it practical to whine about all unregistered headers

[08:54:01.0000] <hsivonen>
I did, however, add a warning about X-UA-Compatible as an HTTP header

[08:55:00.0000] <zcorpan>
hsivonen: what about validating headers without whining about unregistered ones?

[08:55:01.0000] <hsivonen>
zcorpan: I guess validating their contents would be a possibility

[08:56:00.0000] <zcorpan>
hsivonen: do you show the headers in Show Source?

[08:57:00.0000] <hsivonen>
zcorpan: I don't, but showing them would make sense

[09:00:00.0000] <hsivonen>
Apache has made API-breaking changes to HttpClient

[09:00:01.0000] <hsivonen>
I wonder if I should continue to use the old version and write more code with that API or migrate existing code to the new API and then add more code...

[10:04:00.0000] <TabAtkins>
Jeezus, we have to deal with @longdesc *again*?

[10:05:00.0000] <Ms2ger>
Of course

[10:08:00.0000] <jgraham>
TabAtkins: longdesc is like the apocalypse. Every time it fails to get in the spec the believers will announce that there was a mistake and it will be delayed a few months

[10:10:00.0000] <jgraham>
Anyway this time it will probably get in. The politics of the situation make it increasingly unlikely that it will be rejected

[10:11:00.0000] <TabAtkins>
The politics being "they won't shut up about it"?

[10:11:01.0000] <jgraham>
Microsoft have supported it all along and are generally pro anything that gets specs along the Rec. track so I doubt Paul will object

[10:11:02.0000] <jgraham>
I expect Sam to be swayed by the work Laura did

[10:12:00.0000] <AryehGregor>
Did they actually produce any good reasoning for why it should go in?

[10:13:00.0000] <AryehGregor>
By the standards the chairs gave in their last decision?

[10:13:01.0000] <jgraham>
They found a handful of sites that used it

[10:13:02.0000] <AryehGregor>
Used it usefully?

[10:14:00.0000] <jgraham>
Dunno

[10:14:01.0000] <jgraham>
They also made a list of things that supposedly require longdesc

[10:15:00.0000] <jgraham>
Which were basically "describing" plus any type of image they could think of

[10:16:00.0000] <jgraham>
This didn't seem like "new" information in any meaningful sense of the word "new", but the WG operates in mysterious ways

[10:20:00.0000] <jgraham>
My personal plan is to ignore it and hope that if I ever go blind the people working in a11y have become more interested in solutions that work in the real world and less interested in dogmatically clinging to every failed idea

[10:30:00.0000] <Ms2ger>
jgraham, in that case, I'd try to avoid going blind ;)

[10:31:00.0000] <TabAtkins>
myakura: There's not.

[10:34:00.0000] <Philip`>
Ms2ger: I'd have thought you'd try to avoid that in any case

[10:41:00.0000] <myakura>
hmm. even if html5 gets longdesc but no other vendor's willing to support it, it needs to be dropped otherwise the spec won't proceed.

[10:43:00.0000] <twisted`>
hmm is it correct that if an input field is set to disabled it's value doesn't get posted?

[10:44:00.0000] <TabAtkins>
Yes.

[10:47:00.0000] <twisted`>
cool then I just use readonly

[10:47:01.0000] <twisted`>
:)

[11:14:00.0000] <AryehGregor>
Is foo.innerHTML = foo.innerHTML; foo.innerHTML = foo.innerHTML guaranteed to be the same as foo.innerHTML = foo.innerHTML?

[11:14:01.0000] <AryehGregor>
/me doesn't have any real reason to know, is just curious

[11:14:02.0000] <AryehGregor>
Or rather than "guaranteed to be", I should say "supposed to always be".

[11:18:00.0000] <Philip`>
As in, should fragmentparse(fragmentserialize(x)) be idempotent?

[11:19:00.0000] <AryehGregor>
Basically, yeah.

[11:27:00.0000] <jgraham>
There is some complexity around line breaks in <pre> I think. I seem to recall that the algorithm is such that the above holds though

[12:25:00.0000] <bga_>
heh is it possible to prevent {if(window !== top )top.location = '' + location}?

[12:26:00.0000] <bga_>
tried overwrite location setter

[12:26:01.0000] <bga_>
top getter

[12:26:02.0000] <jgraham>
Disable scripting? :)

[12:26:03.0000] <AryehGregor>
You mean, can you stop sites you put in frames from breaking out?  Not really, no.

[12:26:04.0000] <AryehGregor>
Nor should you be able to.

[12:27:00.0000] <AryehGregor>
Since some sites don't want to be framed for security reasons.

[12:27:01.0000] <jgraham>
location is magic for security reasons

[12:27:02.0000] <jgraham>
Even before this it had to be because flash used it or something

[12:27:03.0000] <bga_>
heh

[12:30:00.0000] <bga_>
=> only iframe's sandbox  attribute

[12:38:00.0000] <JonathanNeal>
I had a javascript-related question about selections, and someone suggested I pop in here and ask about it.

[12:39:00.0000] <JonathanNeal>
I'm trying to get the raw HTML of the selected content on a page. For the sake of simplicity, I'm sticking with browsers supporting window.getSelection.

[12:39:01.0000] <JonathanNeal>
AryehGregor: are you speccing this stuff?

[12:39:02.0000] <AryehGregor>
JonathanNeal, yes.

[12:40:00.0000] <AryehGregor>
getSelection().getRangeAt(0).cloneContents() should get you something like what you want.

[12:40:01.0000] <AryehGregor>
If the Selection has only a single Range, it will return a DocumentFragment that clones that range's contents.

[12:40:02.0000] <JonathanNeal>
I've been looking over the MDC docs for days.  I know how to get the normalized HTML, but the raw HTML seems to be much more difficult.

[12:41:00.0000] <AryehGregor>
What does "raw" mean here?

[12:41:01.0000] <JonathanNeal>
In your example, the contents would collapse any trailing elements.  Say, for example, I had `<p>The <em>quick brown f|ox</em> jumps over the lazy <strong>d|og</strong>.</p> and the area between both | was my selection.  I'd be looking to return `ox</em> jumps over the lazy <strong>d`.

[12:41:02.0000] <AryehGregor>
Not possible, all this stuff is DOM-based.

[12:41:03.0000] <AryehGregor>
Why do you want it?

[12:42:00.0000] <AryehGregor>
In general, keep in mind that the input HTML might bear little resemblance to the DOM.

[12:42:01.0000] <AryehGregor>
For instance, scripts might have changed the DOM, or various HTML parser quirks might have rearranged things.

[12:42:02.0000] <AryehGregor>
So conceptually, browsers convert the HTML input into a DOM and then throw it away.

[12:42:03.0000] <JonathanNeal>
Well, I guess you answered my question with "not possible".

[12:43:00.0000] <Ms2ger>
He had a capital "N", but yes :)

[12:43:01.0000] <AryehGregor>
E.g., if the raw HTML input is <table><td>foo</td>bar<td>baz</td><table>, the resulting DOM is the same as for bar<table><td>foo</td><td>baz</td></table>.  If the user selects "foobar", what would you expect to get back?

[12:43:02.0000] <AryehGregor>
Anyway, as I said, why do you want it?

[12:44:00.0000] <JonathanNeal>
I've considered cloning the range into a start and end point, adding an anchor, then reading the common ancestor's HTML and string parsing for the anchors.

[12:44:01.0000] <JonathanNeal>
AryehGregor, oh you know, the usual, it's a Wednesday, I think I could write a better WYSIWYG.

[12:44:02.0000] <AryehGregor>
JonathanNeal, how do you read the common ancestor's HTML?

[12:44:03.0000] <JonathanNeal>
I had this going for a while http://sandbox.thewikies.com/content-editable/

[12:44:04.0000] <AryehGregor>
innerHTML?  That doesn't return the original HTML either.

[12:44:05.0000] <AryehGregor>
It returns a serialization of the DOM.

[12:44:06.0000] <JonathanNeal>
AryehGregor: I read the common ancestor's HTML with innerHTML

[12:45:00.0000] <AryehGregor>
Okay, so you don't actually want the original HTML that was given to the browser.

[12:45:01.0000] <AryehGregor>
(because innerHTML is not that)

[12:45:02.0000] <AryehGregor>
There's no API to create partial fragments of HTML like that, with mismatched tags and all.

[12:45:03.0000] <JonathanNeal>
I see.

[12:46:00.0000] <AryehGregor>
cloneContents() will get you "<em>ox</em> jumps over the lazy <strong>d</strong>", in your example.

[12:46:01.0000] <AryehGregor>
JonathanNeal, is that good enough for your purposes?

[12:47:00.0000] <JonathanNeal>
No, I'm looking for the partial fragment.  It's okay, you're made it clear that there is nothing in the API to get this.

[12:48:00.0000] <JonathanNeal>
When I use the approach I mentioned earlier with the injected anchors, I notice that it messes with the appearance of the selection until I press a key or refocus the window.  Lemme see if I can post an example --- I'm not sure if it's a browser bug or a "feature" that is supposed to be happening.

[12:48:01.0000] <AryehGregor>
Hmm.  Is there a way to serialize the HTML of a DocumentFragment?

[12:49:00.0000] <JonathanNeal>
That would be awesome, though I've been assuming that the fragment was already normalized.

[12:49:01.0000] <AryehGregor>
/me dumps it into a div

[12:50:00.0000] <AryehGregor>
If by "normalized" you mean "opening and closing tags are paired up", yes, the DOM is always "normalized".

[12:50:01.0000] <AryehGregor>
JonathanNeal, see the log at the bottom here: http://software.hixie.ch/utilities/js/live-dom-viewer/saved/1005

[12:50:02.0000] <AryehGregor>
It has the extra opening/closing tags.

[12:51:00.0000] <AryehGregor>
But you might be able to strip them off more easily than whatever you're doing now.

[12:51:01.0000] <AryehGregor>
Anyway, feel free to tell me about the injected anchors thing you're talking about.

[12:54:00.0000] <JonathanNeal>
I'm looking at what you mentioned.

[12:55:00.0000] <JonathanNeal>
I don't get what I was supposed to learn from the log, I guess.

[12:56:00.0000] <Hixie>
hsivonen: no current plans to spec those two headers, but if everyone implements them then i guess someone's gonna have to spec them

[12:56:01.0000] <AryehGregor>
JonathanNeal, the code I gave does what you asked for, just with extra opening tags at the start and closing tags at the end.

[12:56:02.0000] <AryehGregor>
You should be able to use that code and strip the leading/trailing tags you don't want much more easily than trying to parse innerHTML or whatnot.

[12:57:00.0000] <AryehGregor>
(I'm still not sure why you want such fragments; I suspect you don't)

[12:58:00.0000] <JonathanNeal>
Well, I want to write a WYSIWYG editor that inspects the HTML more like selectionStart for a textarea.

[12:59:00.0000] <AryehGregor>
As opposed to using the DOM?  Why?

[12:59:01.0000] <AryehGregor>
It might look simpler, but it will cause all sorts of headaches if you try fiddling with innerHTML instead of the DOM.

[12:59:02.0000] <JonathanNeal>
Well, look at the example @ http://sandbox.thewikies.com/content-editable/ and use some of the buttons.  It's just an idea.

[13:01:00.0000] <AryehGregor>
So when you do "bold source selection" it just sticks <b> at the start point and </b> at the endpoint in the HTML source.

[13:01:01.0000] <AryehGregor>
That's going to have unpredictable results.

[13:01:02.0000] <JonathanNeal>
AryehGregor: yea, and I understand how big of a problem that might be.

[13:01:03.0000] <AryehGregor>
Well, as long as you realize.

[13:02:00.0000] <JonathanNeal>
I do realize, and I was thinking of creating fake ranges and taking advantage of that "normalizing" to generate the proper HTML.

[13:02:01.0000] <Hixie>
what's that law about how the more groups you have working on technologies the more the techs are going to have friction points?

[13:03:00.0000] <Ms2ger>
Hixie's Law?

[13:03:01.0000] <Hixie>
no someone else came up with it

[13:03:02.0000] <Hixie>
hsivonen quotes it often

[13:04:00.0000] <hober>
Conway's Law?

[13:04:01.0000] <JonathanNeal>
AryehGregor: here's the weird selection "bug" I've been seeing @ http://sandbox.thewikies.com/selection/

[13:04:02.0000] <Hixie>
conway! thanks

[13:05:00.0000] <AryehGregor>
JonathanNeal, I'm not seeing anything.  Do I need to do something special?  What browser are you using?

[13:05:01.0000] <JonathanNeal>
Select "ick brown fox jumps over the la" and it will suddenly change the selection to look like you selected something different, like " jumps over the la"

[13:05:02.0000] <JonathanNeal>
Firefox 4.

[13:05:03.0000] <hsivonen>
Hixie: the good thing is the X-Content-Security-Policy already has a spec

[13:05:04.0000] <JonathanNeal>
Yea, it must be a Firefox bug.]

[13:05:05.0000] <hsivonen>
Hixie: X-Frame-Options might have some near-spec-worthy docs

[13:05:06.0000] <AryehGregor>
I suspect I know what's happening.  Just a sec.

[13:06:00.0000] <AryehGregor>
JonathanNeal, you're doing splitText() implicitly here somewhere, probably by calling insertNode().

[13:06:01.0000] <AryehGregor>
DOM 2 Range mandates the behavior you're seeing.

[13:06:02.0000] <Hixie>
hsivonen: cool

[13:07:00.0000] <AryehGregor>
The definition I gave for range mutation follows WebKit, which is smarter about it.

[13:07:01.0000] <JonathanNeal>
:D Well thanks for using the smart one.

[13:07:02.0000] <JonathanNeal>
Is there a way to patch Firefox back into happiness and unsplit?

[13:10:00.0000] <JonathanNeal>
AryehGregor: is there a way I can clone the range to a cloned element?

[13:10:01.0000] <AryehGregor>
JonathanNeal, what do you mean, clone the range to a cloned element?

[13:10:02.0000] <AryehGregor>
Here's a more minimal test-case of the effect you're seeing, BTW: http://software.hixie.ch/utilities/js/live-dom-viewer/?%3C!DOCTYPE%20html%3E%20%0A%3Cp%3EAbc%3C%2Fp%3E%0A%3Cscript%3E%0AgetSelection().collapse(document.querySelector(%22p%22).firstChild%2C%201)%3B%0AgetSelection().extend(document.querySelector(%22p%22).firstChild%2C%203)%3B%0Adocument.querySelector(%22p%22).firstChild.splitText(2)%3B%0A%3C%2Fscript%3E

[13:11:00.0000] <JonathanNeal>
`<p>The <em>quick brown f|ox</em> jumps over the lazy <strong>d|og</strong>.</p>` and I clone the common ancestor, and then re-create the range on that clone.

[13:12:00.0000] <AryehGregor>
No, no simple way to do that.

[13:12:01.0000] <AryehGregor>
The clone has no relationship to the original nodes.

[13:12:02.0000] <JonathanNeal>
Yea.

[13:12:03.0000] <AryehGregor>
You'd have to do it manually, by figuring out the correct start and end points and setting the range to those.

[13:12:04.0000] <jgraham>
Hixie: Does it sound at all plausible to kill the getters on new HTML*Collections?

[13:13:00.0000] <Hixie>
i assume you mean the callers

[13:13:01.0000] <JonathanNeal>
In the content-editable example you saw earlier, I map the way to the selection from the common ancestor and then reverse the mapping to recreate the selection.  It's way complicated.  I'd rather just inject nodes.

[13:13:02.0000] <Hixie>
not the fetters

[13:13:03.0000] <Hixie>
getters

[13:13:04.0000] <jgraham>
Yeah, callers

[13:13:05.0000] <jgraham>
Sorry

[13:13:06.0000] <Hixie>
because killing the getters doesn't sound even remotely plausible :-P

[13:13:07.0000] <Hixie>
i dunno, don't pages depend on this? IE does it right?

[13:13:08.0000] <jgraham>
No, that would be stupid and insane :)

[13:13:09.0000] <jgraham>
IE does it for the ones it implements yeah

[13:14:00.0000] <jgraham>
I was hoping that at least for the new ones we could do better

[13:14:01.0000] <Hixie>
well it seems pretty harmless to me, so consistency seems worth it

[13:14:02.0000] <jgraham>
It would be inconsistent but the best thing would be to never use them anywhere

[13:14:03.0000] <JonathanNeal>
but injecting nodes makes Firefox hate the selection.

[13:14:04.0000] <Hixie>
but you know the drill, i'll follow the browsers, basically

[13:14:05.0000] <Hixie>
so if browsers don't do it, i'll remove it

[13:14:06.0000] <jgraham>
It's not really harmless, there's a ton of undefined edge cases

[13:14:07.0000] <Hixie>
oh?

[13:15:00.0000] <Hixie>
like what?

[13:15:01.0000] <Hixie>
it's in the spec purely for back compat, it's not an intentional api design, so really the only consideration for me is how it affects implementations

[13:15:02.0000] <jgraham>
Like if you have callers for multiple types and pass in an object that can be coerced to more than one type

[13:16:00.0000] <jgraham>
e.g. {valueOf:2, toString:"foo"}

[13:16:01.0000] <jgraham>
It's not clear which order you should try the callers in

[13:16:02.0000] <Hixie>
doesn't webidl define that?

[13:17:00.0000] <jgraham>
No, it leaves it explicitly undefined afaict

[13:17:01.0000] <Hixie>
surely we need to define that for overloading in general

[13:17:02.0000] <jgraham>
In this case it is totally differnet underlying functions that get called

[13:18:00.0000] <jgraham>
so it's not like normal overloading where it is one function with multipleargument types

[13:18:01.0000] <Hixie>
even if it's one function with multiple argument types, the order has to be defines

[13:18:02.0000] <Hixie>
since |2| and "foo" aren't the same thing

[13:18:03.0000] <jgraham>
I think it is in that case

[13:18:04.0000] <Hixie>
oh well why is this different?

[13:18:05.0000] <jgraham>
But not for the case where it is multiple functions

[13:18:06.0000] <Hixie>
we should use the same overloading algorithm

[13:19:00.0000] <jgraham>
It *could* be defined by WebIDL

[13:19:01.0000] <jgraham>
But in any case it seems sad to keep propogating the bad pattern into new APIs

[13:20:00.0000] <jgraham>
Where indexing and calling are synonyms

[13:20:01.0000] <jgraham>
s/indexing/getting properties/

[13:21:00.0000] <jgraham>
(it also makes QAs sad because they end up having to test everything three times, once for the function one for the index and once for the call)

[13:21:01.0000] <JonathanNeal>
AryehGregor: thanks so much for your input and help so far.

[13:21:02.0000] <jgraham>
(which is not such a great argument)

[13:21:03.0000] <jgraham>
(but still)

[13:21:04.0000] <Hixie>
well like i said

[13:22:00.0000] <Hixie>
back compat is the motivation

[13:22:01.0000] <AryehGregor>
JonathanNeal, no problem.

[13:22:02.0000] <jgraham>
OK. I doubt I will get any buy-in for not doing this for old APIs (though Gecko doesn't). But for new ones maybe

[13:23:00.0000] <Ms2ger>
How about you drop support :)

[13:24:00.0000] <jgraham>
Ms2ger: That's the buy-in I won't get for old APIs :)

[13:24:01.0000] <Hixie>
jgraham: do file a bug on webidl or html if there are undefined bits though. we shouldn't have undefined stuff.

[13:24:02.0000] <Ms2ger>
Pff, I've removed enough stuff without waiting or buy-in

[13:25:00.0000] <Hixie>
jgraham: this one sounds pretty straightforward though

[13:25:01.0000] <jgraham>
Ms2ger: Well I could probably change the code, but I wouldn't get it through review :)

[13:25:02.0000] <Ms2ger>
How about you hire sicking? :)

[13:25:03.0000] <JonathanNeal>
AryehGregor: does getSelection support a reverse selection?

[13:26:00.0000] <AryehGregor>
JonathanNeal, what do you mean by reverse?

[13:26:01.0000] <Hixie>
what WebIDL type is an interface object?

[13:26:02.0000] <Hixie>
Object?

[13:26:03.0000] <jgraham>
Ms2ger: Seems like quite the roundabout solution :)

[13:26:04.0000] <JonathanNeal>
AryehGregor: where the carest finished at the earlier point.

[13:26:05.0000] <JonathanNeal>
*caret

[13:26:06.0000] <jgraham>
Either Object or Function I guess

[13:26:07.0000] <jgraham>
I don't remember which way that went

[13:26:08.0000] <AryehGregor>
JonathanNeal, in Firefox and WebKit, yes.  In IE9, no.

[13:27:00.0000] <AryehGregor>
Check whether the focusNode/focusOffset matches the start or end of the first range.

[13:27:01.0000] <JonathanNeal>
`ipsu|2|m dolar si|1|t` where |1| was the starting point and |2| was the ending point.

[13:28:00.0000] <JonathanNeal>
Ah, that's good to know that I can check.  I tried just saving and restoring a selection, and noticed that it forgot which way it was going.

[13:31:00.0000] <JonathanNeal>
Oi, I hope it's not a lot of code just to check which way my selection is going.

[13:39:00.0000] <JonathanNeal>
I guess it is as easy as `ltr = selection.anchorNode == selectionRange.startContainer && selection.anchorOffset == selectionRange.startOffset;`

[13:54:00.0000] <kling>
Ms2ger: ping, did you take over the canvas test suite?

[13:54:01.0000] <Ms2ger>
Still Philip`

[13:54:02.0000] <kling>
righto :)

[13:55:00.0000] <Ms2ger>
Anything in particular?

[13:56:00.0000] <kling>
Ms2ger: was wondering about createPattern tests wrt TYPE_MISMATCH_ERR, IIUC there's a conflict between WebIDL and HTML5, in that no overload should match, leading to TypeError

[13:57:00.0000] <kling>
Ms2ger: when passing a string or null as the first argument to createPattern()

[13:57:01.0000] <Ms2ger>
Which test?

[13:58:00.0000] <kling>
Ms2ger: 2d.pattern.image.null.html

[14:00:00.0000] <kling>
Ms2ger: nevermind the string part, i see philip already fixed that in 56:465ada6e6262, so just null :)

[14:01:00.0000] <Ms2ger>
Actually, WebIDL just changed, and we do want a TypeError there

[14:01:01.0000] <Ms2ger>
Care to file a bug?

[14:01:02.0000] <kling>
Ms2ger: sure. for html5, you mean?

[14:02:00.0000] <Ms2ger>
On the test suite

[14:02:01.0000] <kling>
Ms2ger: TYPE_MISMATCH_ERR is explicitly specified in html5, though. that's the confusing part

[14:02:02.0000] <Hixie>
i can change the html spec if it's wrong

[14:03:00.0000] <Ms2ger>
Hixie, that's the bug you called the definition of not urgent :)

[14:03:01.0000] <kling>
:D

[14:03:02.0000] <Hixie>
yeah i was about to say, looks like the only problem is that you want null to throw TypeError instead of TYPE_MISMATCH_ERR

[14:03:03.0000] <Hixie>
right now the spec that's wrong is webidl :-P

[14:03:04.0000] <Hixie>
because it changed the meaning of all the idl in the html spec :-P

[14:04:00.0000] <Hixie>
you should assume every single object type in idls in HTML has a "?" after it until webidl is fixed

[14:04:01.0000] <Ms2ger>
That's what you get for normatively referencing unstable drafts :)

[14:05:00.0000] <Hixie>
ain't no such thing as a "stable" draft

[14:05:01.0000] <Hixie>
q.v. SVG referencing CSS2 REC

[14:05:02.0000] <kling>
where is the webidl version control? :$

[14:05:03.0000] <Ms2ger>
dev.w3.org

[14:06:00.0000] <kling>
righto. i'll file a bug for the test suite, then. thank you gentlemen

[14:09:00.0000] <Hixie>
does IE support ArrayBuffer?

[14:10:00.0000] <Hixie>
http://software.hixie.ch/utilities/js/live-dom-viewer/saved/1007 - Chrome/Mac gives me 0:0:192:255, Firefox/Mac gives me 0:0:192:127

[14:10:01.0000] <hsivonen>
Hixie: btw, if ArrayBuffers are de facto becoming little-endian, wy annoy people by making Web Socket ArrayBuffers big endian?

[14:10:02.0000] <Hixie>
can anyone find any other results?

[14:11:00.0000] <Hixie>
hsivonen: websocket data comes from the network, which is big endian

[14:11:01.0000] <Hixie>
hsivonen: also, arraybuffers aren't defacto little endian, they're whatever the platform gpu uses

[14:11:02.0000] <hsivonen>
Hixie: not if the other end sends little-endian

[14:11:03.0000] <Hixie>
hsivonen: so big endian on arm, little endian on intel

[14:11:04.0000] <Hixie>
as i understand it

[14:11:05.0000] <hsivonen>
Hixie: I thought ARM was little-endian as well

[14:12:00.0000] <Hixie>
it's configurable

[14:12:01.0000] <Hixie>
but as i understand it it is usually big-endian

[14:12:02.0000] <Hixie>
i could be wrong

[14:12:03.0000] <AryehGregor>
ARM is usually little-endian, AFAIK.

[14:12:04.0000] <Hixie>
in any case, the webgl api only works if it matches the gpu

[14:12:05.0000] <AryehGregor>
I remember looking it up once and finding out that the iPhone is little-endian.

[14:12:06.0000] <AryehGregor>
Also, a while back someone here said that ARM is de facto little-endian these days.

[14:13:00.0000] <Hixie>
(the test above has nothing to do with endianness, btw)

[14:14:00.0000] <hsivonen>
Hixie: I believe Maemo on ARM is little-endian

[14:14:01.0000] <hsivonen>
Hixie: I'd be very surprised if Android was big-endian

[14:14:02.0000] <zewt>
... websocket data is big-endian? why? heh

[14:14:03.0000] <Hixie>
i would assume android is endianness-neutral

[14:14:04.0000] <zewt>
tcp headers, yeah, but payloads?

[14:15:00.0000] <zewt>
(sorry, not familiar with the websocket protocol)

[14:15:01.0000] <Hixie>
zewt: everything over the network is big-endian by convention. in practice it's up to the author, obviously

[14:15:02.0000] <zewt>
low-level network stack headers are big-endian by convention; i've never seen any such convention for anything higher up the stack

[14:16:00.0000] <AryehGregor>
Hixie, is that still the case if we restrict ourselves to things visible to web authors?

[14:16:01.0000] <AryehGregor>
As opposed to implementers?

[14:16:02.0000] <zewt>
granted, most higher-level, standard protocols aren't binary protocols, so the sample set is smaller

[14:16:03.0000] <Hixie>
AryehGregor: not sure what you mean

[14:17:00.0000] <AryehGregor>
Hixie, I mean, for our purposes it doesn't matter if TCP headers are big- or little-endian, say.  Because we're talking about something visible to web authors, and web authors don't get direct access to TCP headers, so those don't affect their expectations.

[14:17:01.0000] <Hixie>
oh this is all moot anyway, it seems. The typed array spec lets the author pick the endianess when using DataView.

[14:17:02.0000] <zewt>
i think people have android running on MIPS, so i imagine android the platform can go either way

[14:17:03.0000] <Hixie>
AryehGregor: i don't think i've mentioned tcp headers

[14:18:00.0000] <AryehGregor>
What do you mean by "everything over the network"?

[14:18:01.0000] <Philip`>
/me wonders how many CPU cycles the world has wasted by having every x86 CPU do loads of ntohl calls for every network packet

[14:19:00.0000] <zewt>
heh i was just thinking the same thing (and concluded: probably not much, at least in recent times)

[14:20:00.0000] <Hixie>
AryehGregor: it seems pretty self-explanatory?

[14:20:01.0000] <AryehGregor>
Not really?

[14:21:00.0000] <Hixie>
which part is confusing? everything, or network?

[14:22:00.0000] <AryehGregor>
I mean, people can send whatever they want over the network.  If I send a file over HTTP whose format specifies that it's little-endian, it doesn't get transformed to big-endian and then back when I send it.

[14:22:01.0000] <Hixie>
sure

[14:22:02.0000] <AryehGregor>
So I guess I want to know what "everything" is supposed to mean, yeah.

[14:22:03.0000] <AryehGregor>
Since it apparently doesn't actually mean "everything".

[14:22:04.0000] <hsivonen>
Hixie: you could avoid endianness altogether in the API by giving people ArrayBuffers of bytes

[14:22:05.0000] <Hixie>
i mean that the convention is that binary network protocols use big-endianness regardless of the endianness of the platforms involved.

[14:22:06.0000] <hsivonen>
and making it the app programmer's problem to convert the bytes to wider types

[14:22:07.0000] <Hixie>
hsivonen: that's not how ArrayBuffer works

[14:23:00.0000] <hsivonen>
Hixie: how do they work? why would a buffer of bytes have endianness?

[14:23:01.0000] <Hixie>
hsivonen: ArrayBuffer is opaque

[14:23:02.0000] <Hixie>
hsivonen: you then create readers of different widths from the ArrayBuffer

[14:24:00.0000] <AryehGregor>
Hixie, okay, but web authors aren't exposed to that convention, right?  So shouldn't we be going for whatever will make the most sense for authors, even if that violates some convention?

[14:24:01.0000] <AryehGregor>
And if there are some things that we already expose to authors that are the same endianness as the CPU, that means de facto little-endian, so we should stick to little-endian.

[14:25:00.0000] <jgraham>
Before gsnedders points it out I will point out that ARM is almost always LE but can theoretially be either and MIPS os almost always BE but can theoretically be either

[14:25:01.0000] <AryehGregor>
Or is this endianness not directly exposed to authors?

[14:25:02.0000] <AryehGregor>
/me isn't quite sure what's being discussed . . .

[14:26:00.0000] <Hixie>
AryehGregor: right now, the typed array spec, when used to read a wide integer from an ArrayBuffer, uses the platform convention for endianness. This obviously is a non-starter on a platform-neutral metaplatform like the web, since it would mean that if you happened to be on a system that didn't match the author's test system, your data would be corrupted.

[14:27:00.0000] <AryehGregor>
Right.

[14:28:00.0000] <jgraham>
Hixie: I personally expect that problem to be solved by everyone converging on LE hardware

[14:28:01.0000] <Philip`>
Looks like internet traffic is roughly 30EB/month, and if each of those is a 1500 byte packet and it takes (wild guess) a hundred x86 CPU cycles to do all the byte flipping on send/receive for all the layers of protocols, that's like 400 CPU-months per month

[14:28:02.0000] <Philip`>
which I suppose isn't that bad

[14:28:03.0000] <zewt>
i'd say it's closer to zero CPU cycles--when you take into account modern CPU pipelining and so on

[14:29:00.0000] <Hixie>
lunch, bbl

[14:30:00.0000] <jgraham>
(and people that don't use LE hardware will have to be careful to fake it to look like they are which will be slow so there will be a good incentive for convergence)

[14:31:00.0000] <zewt>
personally I'm happy if big-endian people get to waste lots of time, because right now we're all wasting our time bending over backwards making things work for them, the needlessly incompatible rare variant

[14:31:01.0000] <zewt>
if they won't get along with the rest of the civilized world, let them figure out how to deal with it. heh

[14:32:00.0000] <gsnedders>
jgraham: MIPS is mostly LE nowadays, apart from products from one major vendor, AFAIK

[14:34:00.0000] <Philip`>
/me wonders what happened to Blefuscu in the end, and whether it provides useful insight into resolving these problems

[14:35:00.0000] <gsnedders>
Itanium is almost all LE, PPC (and hence also POWER nowadays) is almost all BE

[14:36:00.0000] <gsnedders>
SuperH I have no idea about in actual usage — it is almost bi-endian

[15:42:00.0000] <abarth>
Hixie: quick question: are you sure HTMLImageElement::crossOrigin should have a capitalized "O" ?

[15:43:00.0000] <abarth>
http://www.whatwg.org/specs/web-apps/current-work/#the-img-element

[15:43:01.0000] <TabAtkins>
I suspect that's a legacy of when it was called cross-origin.

[15:43:02.0000] <abarth>
its consistent iwth useMap and isMap

[15:43:03.0000] <abarth>
but seems slightly odd

[15:43:04.0000] <abarth>
https://bugs.webkit.org/show_bug.cgi?id=61015

[15:43:05.0000] <abarth>
now's the time to fix it if he wants it changed :)

[15:48:00.0000] <zcorpan>
/me notes it's also consistent with formNoValidate

[15:49:00.0000] <abarth>
ok

[15:49:01.0000] <abarth>
then it's probably right

[15:49:02.0000] <abarth>
sorry for the noise

[16:35:00.0000] <jamesr>
heycam: yo

[16:35:01.0000] <jamesr>
heycam: what's ISSUE-6?

[16:42:00.0000] <Hixie>
abarth: it's intentional

[16:45:00.0000] <heycam>
jamesr, that's asking to define what happens when you call requestAnimationFrame twice with the same callback before the next animation tick

[16:46:00.0000] <jamesr>
should be just like settimeout

[16:46:01.0000] <jamesr>
the callback is invoked twice

[16:46:02.0000] <jamesr>
why's that ambiguous?

[16:46:03.0000] <jamesr>
well i guess since we haven't defined a processing model, it's unclear from the spec

[16:46:04.0000] <jamesr>
but seems pretty obvious

[16:46:05.0000] <heycam>
right, I think Jatinder just wants it to be clear whether it's invoked once or twice

[16:47:00.0000] <jamesr>
sure

[16:47:01.0000] <jamesr>
processing model is on my todo list for this week

[16:47:02.0000] <heycam>
great!

[16:47:03.0000] <heycam>
we talked in the call today about publication

[16:47:04.0000] <heycam>
plh and jatinder would like to publish the FPWD on thursday next week. they (and I) don't mind if not all of the issues have been resolved before publication.

[16:48:00.0000] <heycam>
but it would be good to get as many of them knocked down as possible

[16:49:00.0000] <jamesr>
i think the microsoft folks care a lot more about publication, etc than i do

[16:49:01.0000] <heycam>
:)

[16:49:02.0000] <jamesr>
so if they feel strongly that something should or shouldn't be published then i'm generally not gonna want to fight about it

[16:49:03.0000] <heycam>
ok

[16:50:00.0000] <jamesr>
well currently it isn't really a specification of anything

[16:50:01.0000] <heycam>
I think it's good to get something published so that the spec gets more attention

[16:50:02.0000] <jamesr>
because it doesn't say how anything works

[16:50:03.0000] <heycam>
well, sure

[16:50:04.0000] <jamesr>
but i'm not opposed to publishing at any time

[16:50:05.0000] <heycam>
right, neither am I

[16:50:06.0000] <jamesr>
i think ost of the feedback will probably be "hey, you didn't specify anything!"

[16:50:07.0000] <jamesr>
which we can then fix :)

[16:52:00.0000] <heycam>
yep. I think it's reasonably common in W3C land for first public working drafts not to be terribly complete, anyway.

[16:53:00.0000] <heycam>
so I'll take a look early next week after you've worked on the processing model and see if I can resolve any of the other open issues


2011-05-26
[17:00:00.0000] <abarth>
Hixie: thx

[17:06:00.0000] <jamesr>
heycam: there's another question about the timestamps

[17:06:01.0000] <jamesr>
a lot of animation systems provide two timestamps

[17:06:02.0000] <jamesr>
a "when is this callback being invoked" time and a "when is this frame expected to hit the screen" time

[17:07:00.0000] <heycam>
is the former related to the currently displayed frame time?

[17:07:01.0000] <jamesr>
i don't fully grok the requirements around that

[17:07:02.0000] <jamesr>
no, i don't think so

[17:08:00.0000] <heycam>
would it be a different time per callback?

[17:08:01.0000] <heycam>
that doesn't seem that useful, if so

[17:09:00.0000] <jamesr>
like i said i don't fully understand what it's all about

[17:09:01.0000] <heycam>
ok

[17:09:02.0000] <jamesr>
but if CoreAnimation does it, seems worth at least figuring out why

[17:35:00.0000] <JonathanNeal>
Hey all.

[17:38:00.0000] <danheberden>
g'day JonathanNeal

[17:42:00.0000] <JonathanNeal>
:) thanks danheberden

[17:54:00.0000] <erlehmann>
I see what you did there. <http://www.whatwg.org/specs/web-apps/current-work/multipage/common-input-element-attributes.html#attr-input-maxlength>

[18:10:00.0000] <jamesr>
AryehGregor: what's the conceptual difference between parsing a script and executing it?

[18:11:00.0000] <AryehGregor>
jamesr, the same as the difference between compiling a C program and executing it.  It might not actually be relevant to all existing implementations, of course.

[18:11:01.0000] <jamesr>
no such distinction exists for javascript, really

[18:11:02.0000] <AryehGregor>
But I assume everyone does something like compile the whole file to bytecode first thing, at least.

[18:11:03.0000] <jamesr>
no

[18:11:04.0000] <AryehGregor>
No?

[18:11:05.0000] <jamesr>
no

[18:11:06.0000] <AryehGregor>
Then what do you do with it?

[18:11:07.0000] <jamesr>
there's a few things

[18:12:00.0000] <jamesr>
but one really important distinction is that code can be lazily compiled and constantly recompiled during execution

[18:13:00.0000] <jamesr>
the only thing we do on a chunk of script in v8 currently before starting to execute code is to essentially brace match

[18:13:01.0000] <jamesr>
also keep in mind that evaluating the source "function foo() { }" is _executing_ code

[18:13:02.0000] <AryehGregor>
The assertion in that thread is that compilation of large amounts of causes visible lag if it has to be done synchronously, even if the code doesn't actually do anything beyond define some functions.  Is that the case in V8?

[18:13:03.0000] <jamesr>
that's setting a variable called 'foo' on the global object

[18:13:04.0000] <AryehGregor>
I realize that.

[18:14:00.0000] <jamesr>
i think that assertion is based on the time spent executing the code

[18:14:01.0000] <jamesr>
i.e. assigning the global variable to 'foo' and dealing with all the side effects of that

[18:14:02.0000] <jamesr>
which you can't meaningfully pass to another thread

[18:14:03.0000] <AryehGregor>
Hmm.

[18:14:04.0000] <jamesr>
you can brace match on another thread, but that's not going to buy you much

[18:15:00.0000] <jamesr>
i haven't jumped in on that thread because everyone is using slightly different terminology and it's just kind of a mess :/

[18:15:01.0000] <AryehGregor>
So you're saying that executing a couple hundred KB of JavaScript is always going to require a large synchronous lag, and you can't just separate off some of the expensive parts to a background thread?

[18:15:02.0000] <jamesr>
no, not really

[18:15:03.0000] <AryehGregor>
That's not really what you're saying, or you can't really separate it off?

[18:15:04.0000] <jamesr>
JS engine developers work really hard to cut down on the time it takes to execute a few hundred KB of javascript

[18:16:00.0000] <jamesr>
i think what authors want is a way to download script but not execute it

[18:16:01.0000] <jamesr>
and they are just being lazy about what they mean by 'parse'

[18:16:02.0000] <AryehGregor>
I'd assume people like Steve Souders can figure out the difference between download and execution.

[18:16:03.0000] <jamesr>
hah!

[18:16:04.0000] <AryehGregor>
Or execution/parsing/whatever.

[18:16:05.0000] <AryehGregor>
You can just look at the right tab in Web Inspector, right?  It tells you how much time it's spending on what.

[18:17:00.0000] <jamesr>
even very educated and web-saavy people on the internet can have pretty broken mental models about how javascript engines work

[18:17:01.0000] <AryehGregor>
When I go to the "Timeline" tab in Web Inspector, I see separate steps called "Parse" and "Evaulate Script".

[18:18:00.0000] <AryehGregor>
It doesn't say what it's parsing, though.

[18:18:01.0000] <jamesr>
that's just confusing UI

[18:18:02.0000] <AryehGregor>
Not totally sure if it's JS or HTML.

[18:18:03.0000] <jamesr>
it's parsing HTML

[18:18:04.0000] <jamesr>
which might include time spent executing script

[18:18:05.0000] <jamesr>
if it parses a <script> tag, f'instance

[18:18:06.0000] <AryehGregor>
That is pretty confusing.

[18:19:00.0000] <jamesr>
there isn't a useful "parse' time for JS to expose, tho

[18:21:00.0000] <jamesr>
some website we saw tries to 'preload' script by setting it as the src of an <object> tag

[18:22:00.0000] <jamesr>
caused a gigantic pause in webkit once the thing loaded since we tried to linebreak it all nicely

[18:22:01.0000] <AryehGregor>
Hahaha.

[18:22:02.0000] <AryehGregor>
Is there any good way to separate download from parse/execute time right now?

[18:22:03.0000] <jamesr>
does disabled work on <script> tags?

[18:23:00.0000] <AryehGregor>
There's no disabled attribute on <script>, no.

[18:23:01.0000] <AryehGregor>
With <img>, apparently new Image().src = 'foo' works.

[18:23:02.0000] <jamesr>
yeah

[18:23:03.0000] <jamesr>
that creates a new image element and starts a load

[18:24:00.0000] <JonathanNeal>
AryehGregor, free to answer another selection related question?

[18:24:01.0000] <jamesr>
was there a use case B on that thread or just use case A?

[18:24:02.0000] <AryehGregor>
JonathanNeal, not now.  Ask tomorrow.

[18:24:03.0000] <AryehGregor>
jamesr, seems it was just A.

[18:24:04.0000] <AryehGregor>
According to you, though, use case A was incoherent.

[18:25:00.0000] <jamesr>
incoherent in modern JS engines where there's not much of a distinction between parse and execution, yes

[18:25:01.0000] <JonathanNeal>
Will do, thanks :D

[18:25:02.0000] <jamesr>
and i think the original author requests were about execution

[18:25:03.0000] <jamesr>
even if they thought it was about parsing

[18:30:00.0000] <jamesr>
AryehGregor: seems like what hixie is really saying is that the author could wrap everything in a big closure and not execute it

[18:30:01.0000] <smaug____>
what is the origin of term "browser chrome" or just "chrome"? Was that used already before Mozilla?

[18:30:02.0000] <jamesr>
so it's entirely up to the author how much time it takes to execute

[18:31:00.0000] <AryehGregor>
jamesr, so if they wrap it in a big closure and don't execute it, that does take negligible time?

[18:31:01.0000] <jamesr>
depends on what the JS engine is doing

[18:31:02.0000] <jamesr>
but it could take negligible time, yes

[18:33:00.0000] <jamesr>
afaict nobody's actually measured that and reported it to the thread

[18:34:00.0000] <jamesr>
i think the biggest thing hixie is ignoring is that the author isn't necessarily in control of the contents of the script

[18:34:01.0000] <jamesr>
if i want to load up jquery or something else that has a lot of expensive top-level statements, then i can't just wrap it in a closure

[18:35:00.0000] <jamesr>
i gotta add it to a <script> and let all of those top-level statements execute whenever it finishes loading

[18:39:00.0000] <AryehGregor>
Well, if you're actually using jQuery right away on page load, that's not avoidable, except by modularizing jQuery and only loading the modules you need (which they already do AFAIK).

[18:39:01.0000] <jamesr>
sure, but if you aren't using it right away but still want to start the download ASAP then you are AWOL

[18:40:00.0000] <AryehGregor>
Didn't people say Gmail puts the script contents in a big comment and uncomments it when needed?

[18:41:00.0000] <AryehGregor>
Anything wrong with that?

[18:41:01.0000] <jamesr>
nope

[18:41:02.0000] <jamesr>
still doesn't help with the jquery case

[18:41:03.0000] <jamesr>
where you want to use a well-known URL to hit cache if possible

[18:41:04.0000] <AryehGregor>
Ah, that's a different case, yeah.

[18:41:05.0000] <AryehGregor>
I'm not sure that's what was being asked, though.

[18:41:06.0000] <jamesr>
not exactly

[18:41:07.0000] <jamesr>
but it seems related

[18:43:00.0000] <AryehGregor>
Okay, now it's time for me to head off to bed.

[18:43:01.0000] <jamesr>
oh yay you responded so now i don't have to say anything on the thread

[18:43:02.0000] <jamesr>
wheeee

[18:55:00.0000] <zewt>
jamesr: isn't that the example I showed?

[18:56:00.0000] <jamesr>
zewt: ah, seems it is

[18:56:01.0000] <jamesr>
(i skipped most of the thread)

[18:56:02.0000] <jamesr>
did you try it on mobile?

[18:56:03.0000] <zewt>
nope

[18:56:04.0000] <zewt>
i generally just assume mobile browsers are bad at everything

[18:56:05.0000] <jamesr>
there is some work that happens before executing the line 'var yourAPI = '...

[18:56:06.0000] <zewt>
but i think there's no reason they couldn't do it as efficiently

[18:56:07.0000] <jamesr>
but i don't think it is terribly significant

[18:56:08.0000] <jamesr>
you can observe that by timing in a different <script> block

[18:57:00.0000] <jamesr>
yeah grab a start time in a script block above the one defining go() and grab and end time in a block after

[18:57:01.0000] <zewt>
not sure how to get anything after parsing and before top-level execution to do timings there

[18:57:02.0000] <jamesr>
the first line of execution is roughly the end of parsing

[18:57:03.0000] <jamesr>
for this very loose definition of 'parsing'

[18:57:04.0000] <zewt>
that's the point--parsing can be async, so we don't (in theory) care about it

[18:58:00.0000] <jamesr>
observable side effects or it didn't happen

[18:58:01.0000] <zewt>
if there's anything after parsing but before execution that can't be async (eg. depends on the window somehow), that's the only thing that would be a problem, I think

[18:58:02.0000] <zewt>
(that's the part that I mentioned I don't know about)

[19:19:00.0000] <zewt>
curse you chrome to phone for not working for apps accounts and making me type out my own annoying long URL on a touchscreen

[19:20:00.0000] <zewt>
top-level context time is also 0ms on android 2.3.4 (stock) browser, FYI

[19:20:01.0000] <zewt>
curiously, the "initializing API" part took 1884ms the first time and 89ms after a refresh

[19:21:00.0000] <zewt>
don't know if that's some kind of caching or just a timing hiccup

[19:22:00.0000] <jamesr>
does it repeat if you clear cache + try again?

[19:25:00.0000] <zewt>
yeah

[19:25:01.0000] <zewt>
I/browser (10698): Console: Initializing API took: 1944ms https://zewt.org/~glenn/test-top-level-context-execution/:10

[19:26:00.0000] <zewt>
that's the inner call, though, not the part that people want to be cheap

[19:26:01.0000] <zewt>
still curious

[19:56:00.0000] <MikeSmith>
Hixie: I want to let you know I have set up some semi-automation for generating new bugs from comments posted the public-html-comments list

[19:57:00.0000] <MikeSmith>
if it ends up causing too much confusion/redundancy/extra-work, I can try to figure out something else

[19:58:00.0000] <MikeSmith>
but one of the reasons I set it up was to help address the problems that have been raised with accessibility of the bugzilla  UI

[19:58:01.0000] <MikeSmith>
I am told that those problems are not insignificant

[19:59:00.0000] <MikeSmith>
so I'm also going to be working on trying to get improvements made to our bugzilla UI

[19:59:01.0000] <MikeSmith>
e.g., by upgrading to v4, or by setting up alternative templates, or whatever else helps

[20:01:00.0000] <MikeSmith>
but in the mean time at least, I hope it'll help that we can let people know we're providing the comments list as an alternative, and have some way of taking those and raising bugs for them that we can track (for the purposes of being able to include them in the LC disposition of comments, etc.)

[22:38:00.0000] <Hixie>
MikeSmith: k

[22:38:01.0000] <Hixie>
jamesr_: you'd better do more than just brace matching, otherwise you're non-compliant

[22:38:02.0000] <Hixie>
e.g. you have to be able to catch syntax errors deep inside a script before you do anything with visible sideeffects

[22:41:00.0000] <MikeSmith>
Hixie: the volume on the comments list has been really low anyway, so if it stays on the same order it has in the past, there additional mail/notifications shouldn't be too excessive. But if it does get to be too annoying, definitely let me know

[22:41:01.0000] <MikeSmith>
Hixie: and thanks, btw

[22:41:02.0000] <MikeSmith>
and congratulations

[22:41:03.0000] <MikeSmith>
on the spec having reached LC at the W3C

[22:42:00.0000] <MikeSmith>
I know you don't see it as quite the milestone that others do

[22:42:01.0000] <MikeSmith>
but it's a milestone nonetheless

[22:42:02.0000] <Hixie>
we reached last call in october 2009

[22:43:00.0000] <MikeSmith>
for some definition of "we", yeah

[22:43:01.0000] <Hixie>
and that actually meant something -- we got to zero outstanding feedback

[22:43:02.0000] <Hixie>
the latest milestone was completely arbitrary and date driven

[22:43:03.0000] <Hixie>
and happened with over 2000 open e-mails and bugs

[22:43:04.0000] <Hixie>
forgive me for feeling a bit cynical about it

[22:44:00.0000] <othermaciej>
it has marketing value, at the very least; and if we are lucky, may lead to useful feedback from folks who would not give it otherwise

[22:44:01.0000] <MikeSmith>
Hixie: forgive me for feeling a bit positive about it :)

[22:45:00.0000] <Hixie>
it's rather too late for high-level feedback on most existing features

[22:45:01.0000] <Hixie>
but i certainly don't have a problem getting more feedback

[22:50:00.0000] <MikeSmith>
Hixie: my point in mentioning it here was just that it gives me a reason to express some personal gratitude to you, fwiw

[22:50:01.0000] <MikeSmith>
as the architect of the spec

[22:50:02.0000] <Hixie>
thanks :-)

[22:50:03.0000] <Hixie>
it is very much a group effort

[22:51:00.0000] <Hixie>
couldn't do it without all of you and the hundreds of other contributors :-)

[22:52:00.0000] <othermaciej>
Hixie: I think we owe you, not just for the semi-arbitrary LC milestone, but for the fact that if you hadn't stepped up and put in so much energy, innovation in the Web platform would probably be far behind where it is today

[22:52:01.0000] <othermaciej>
or possibly driven by competing proprietary extensions

[22:52:02.0000] <MikeSmith>
amen to that

[22:53:00.0000] <othermaciej>
I know a whole host of people have contributed in incredibly ways, and I am grateful to them as well

[22:53:01.0000] <MikeSmith>
yeah, the collective time that has gone into this work is phenomenal

[22:53:02.0000] <othermaciej>
also I am a bit tipsy right now

[22:54:00.0000] <MikeSmith>
heh

[22:54:01.0000] <MikeSmith>
I wish I was

[22:54:02.0000] <MikeSmith>
I missed my breakfast beer this morning

[22:54:03.0000] <MikeSmith>
so I'll need to double-up for lunch

[22:56:00.0000] <Hixie>
othermaciej: my pleasure :-)

[22:56:01.0000] <Hixie>
othermaciej: the technical aspects of this stuff are a lot of fun

[22:56:02.0000] <MikeSmith>
yeah

[22:57:00.0000] <MikeSmith>
would that the rest of it was as fun

[22:57:01.0000] <MikeSmith>
and had a big a return of investment

[22:57:02.0000] <Hixie>
luckily the rest of it is mostly opt-in

[23:00:00.0000] <MikeSmith>
Hixie: imma shut up about this for now, but I do want to say that anyway, in particular, I think it remains important to get the spec through the process at the W3C, and there have been some significant costs to getting it this far, including for you, and I personally appreciate that you have stuck with it

[23:00:01.0000] <MikeSmith>
(end of speech)

[23:00:02.0000] <Hixie>
hehe

[23:03:00.0000] <Hixie>
i think the patent policy is valuable. i think the rest of the process is somewhat harmful at this stage.

[23:04:00.0000] <Hixie>
it encourages people to view standards development as something with an end

[23:04:01.0000] <Hixie>
which imho is how we got into this mess in the first place

[23:05:00.0000] <Hixie>
the web should continuously evolve, it doesn't make sense to freeze it for years at a time

[23:06:00.0000] <MikeSmith>
I think there is large room for improvement in the standards-development and standards-publication process at the W3C

[23:07:00.0000] <MikeSmith>
and I think there is real possibility of significant concrete changes to improve

[23:07:01.0000] <MikeSmith>
*improve it

[23:07:02.0000] <MikeSmith>
but as you well know, it can seem like trying to move a mountain

[23:08:00.0000] <MikeSmith>
or even sometimes like actually moving a mountain a bit, or thinking you had, and then watching the mountain move right back where it was to begin with

[23:09:00.0000] <zewt>
shape-memory mountains

[23:09:01.0000] <MikeSmith>
myth of sisyphus

[23:17:00.0000] <othermaciej>
I think a stable branch / unstable branch development model an make sense for specs

[23:17:01.0000] <othermaciej>
but, I haven't really seen a good version of it done, so who can say

[23:19:00.0000] <Hixie>
i don't think stable/unstable is the right split, because nothing is truly stable

[23:19:01.0000] <Hixie>
i mean, the navigation algorithm has been "stable" for 15 years, long before we started speccing it, but we still change it every other week

[23:20:00.0000] <Hixie>
i think it would make sense to have a "full" spec and an "only widely implemented features" spec

[23:20:01.0000] <Hixie>
the only reason i haven't done it already is that we have way too many specs as it is

[23:36:00.0000] <MikeSmith>
very much agreed about the idea of having an "only widely implemented features" spec

[23:39:00.0000] <MikeSmith>
if we were to systematically keep the spec annotations up to date, we could at least generate a view with the sections and subsections for the not-widely-implemented features omitted

[23:41:00.0000] <MikeSmith>
which reminds me, I think I still have the following being automatically regenerated each time the spec is pushed to W3C cvs:

[23:41:01.0000] <MikeSmith>
http://dev.w3.org/html5/spec/status.html

[23:41:02.0000] <MikeSmith>
hmm, or maybe not

[23:42:00.0000] <MikeSmith>
I see Undo History is still there

[23:45:00.0000] <MikeSmith>
oh, actually, that's expected because it's generated from the annotations for the full upstream spec

[01:24:00.0000] <Hixie>
MikeSmith: the problem with the section annotations (as far as using them to make a spec is concerned) is that they're too coarse

[01:24:01.0000] <MikeSmith>
right

[01:24:02.0000] <MikeSmith>
I know

[01:24:03.0000] <Hixie>
(e.g. think about what adding or removing appcache should do to the navigate algorithm)

[01:24:04.0000] <MikeSmith>
yeah

[02:26:00.0000] <jgraham>
"W3C also reconfirmed today that, as announced, these specifications are on track to become stable standards in 2014."

[02:27:00.0000] <jgraham>
Well as long as "stable standards" doesn't imply "has a testsuite", maybe

[04:12:00.0000] <zcorpan>
ie doesn't support conditional comments in application/xhtml+xml, right? right?

[04:13:00.0000] <zcorpan>
or x-ua-compatible?

[04:17:00.0000] <zcorpan>
what are the use cases for crossorigin="" again? should it be a content attribute at all?

[04:23:00.0000] <MikeSmith>
zcorpan: didn't it mostly come out of WebGL use cases?

[04:26:00.0000] <MikeSmith>
zcorpan: https://bugs.webkit.org/show_bug.cgi?id=61015#c6

[04:26:01.0000] <MikeSmith>
and https://bugs.webkit.org/show_bug.cgi?id=61015#c7

[04:27:00.0000] <MikeSmith>
"I forgot the mention that the point of the attribute is to let you draw images onto 2D and 3D canvases and read back the results.  In the case of 3D canvas, my understanding is that a thumbs up for CORS is going to be required for drawing the image at all."

[04:31:00.0000] <zcorpan>
if it's just for drawing on canvas, you probably don't want the image in the document at all, much less declaratively

[04:32:00.0000] <MikeSmith>
yeah, I can't say I really understand the use cases

[04:32:01.0000] <MikeSmith>
maybe there was some discussion on the webgl list that will provide some clues

[07:11:00.0000] <MikeSmith>
heh

[07:11:01.0000] <MikeSmith>
http://gijsvanzon.posterous.com/peter-paul-koch-about-the-future-of-mobile-we

[07:11:02.0000] <MikeSmith>
great PPK photo

[07:12:00.0000] <Peter`>
haha

[07:15:00.0000] <jgraham>
/me wonders if he should make it his mission in life to get a picture of Hixie that doesn't make him look like a drug-addled-monkey on wikipedia

[07:26:00.0000] <erlehmann>
jgraham, he looks more like out of a british TV series from the 80ies.

[07:28:00.0000] <jgraham>
erlehmann: I see you had a bad experience with british TV from the 80s

[07:36:00.0000] <asmodai>
hsivonen: that highlighting in the source on validator.nu is nicely done btw

[07:49:00.0000] <hsivonen>
asmodai: thanks

[07:53:00.0000] <asmodai>
mmm, normal lxml.html.tostring(pretty_print=True) is not quite fully pretty printing this HTML 5 stuff.

[07:54:00.0000] <asmodai>
wonder if I need html5lib to get that done

[09:56:00.0000] <TabAtkins>
Ok, I'm clearly missing something.  In Hixie's email about separating script download/parsing/execution, why wouldn't it alert "fail"?

[09:56:01.0000] <Ms2ger>
Because you have to throw a SyntaxError before you can execute it, if you mean the email I think you mean?

[09:58:00.0000] <AryehGregor>
This is hilarious.  It actually works for everything I've tried so far: http://ryanelmquist.com/cgi-bin/xkcdwiki

[10:04:00.0000] <TabAtkins>
Ms2ger: Ah, duh.

[10:06:00.0000] <TabAtkins>
AryehGregor: Heh, cool.  I guess it's related to the fact that articles usually start with a summary that might link to more general concepts, and a lot of "baseline" general concepts link to philosophy.

[10:06:01.0000] <AryehGregor>
Seems so.

[10:10:00.0000] <Workshiva>
heh

[10:10:01.0000] <Workshiva>
The sequence quickly reached 'Language' and then spent 11 steps reaching Philosophy

[10:10:02.0000] <Workshiva>
... but with a detour into geology, wtf

[10:11:00.0000] <TabAtkins>
Workshiva: Your task is to edit the language article to point directly to philosophy first.

[10:11:01.0000] <Ms2ger>
TabAtkins, I wonder how many such changes have happened recently

[10:11:02.0000] <Workshiva>
The penultimate article was Modern Philosophy

[10:11:03.0000] <Workshiva>
That's cheating!

[10:13:00.0000] <Workshiva>
Challenge: Find a 10+ chain that doesn't terminate with Property (philosophy) -> Modern philosophy -> Philosophy

[10:20:00.0000] <Philip`>
Workshiva: Ryan Giggs

[10:27:00.0000] <MikeSmith>
hsivonen: http://lists.w3.org/Archives/Public/www-validator/2011May/0031.html

[10:28:00.0000] <MikeSmith>
"Is Unicode Normalization Form C actually required by HTML5 or is this a validator bug?"

[10:31:00.0000] <MikeSmith>
hsivonen: I realize the spec doesn't cite Form C directly, but I'm wondering what part of the conformance requirements that are directly stated in the spec have the effect of also make Form C a requirement

[10:32:00.0000] <AryehGregor>
Ugh.

[10:33:00.0000] <AryehGregor>
Can we get rid of contenteditable=false?  It's a pain in the neck to worry about it all the time.

[10:33:01.0000] <AryehGregor>
(that was rhetorical, I'm pretty sure the answer is "no")

[10:34:00.0000] <TabAtkins>
Does that let you embed non-editable regions inside a contenteditable?

[10:34:01.0000] <AryehGregor>
Yes.

[10:34:02.0000] <AryehGregor>
Which I guess is handy, but it's a huge PITA to make sure all the algorithms leave them alone.

[10:35:00.0000] <AryehGregor>
Corner case, likely to have lots of bugs.

[10:35:01.0000] <AryehGregor>
Just ensuring that you don't climb out of contenteditable regions is comparatively easy.

[10:35:02.0000] <AryehGregor>
Although the original idea of only allowing designMode on whole documents would be even easier to spec and implement.  :)

[10:36:00.0000] <AryehGregor>
But I guess those horrible author people will want these silly features, so spec it we must.

[10:37:00.0000] <TabAtkins>
Those jerks.

[10:38:00.0000] <jgraham>
I hate authors almost as much as I hate generated content

[10:39:00.0000] <jgraham>
/me imagines he won't like shadow DOMs any more than generated content

[10:39:01.0000] <TabAtkins>
At least you've dealt with shadow DOM for years and years, you just didn't know it.

[10:40:00.0000] <jgraham>
Because of generated content? Well yeah that's one way to look at it

[10:40:01.0000] <TabAtkins>
No, because of <input>.

[10:40:02.0000] <TabAtkins>
And friends.

[10:41:00.0000] <jgraham>
Oh well that's just magic as far as I'm concerened

[10:41:01.0000] <TabAtkins>
s/magic/shadow DOM/

[10:42:00.0000] <Ms2ger>
s//magic/

[10:42:01.0000] <jgraham>
If that's how we implement it than I don't know about it. So it's magic to me :)

[10:42:02.0000] <TabAtkins>
magicmagicmagic

[10:42:03.0000] <nimbu>
s/magic/typing nightmare/

[10:42:04.0000] <TabAtkins>
I know that we, at least, implement it with some combination of pseudo-shadow-DOM and custom C++ renderers.

[10:43:00.0000] <TabAtkins>
But we're now switching over to pure shadow DOM.

[10:43:01.0000] <TabAtkins>
And it's apparently a big win.

[10:43:02.0000] <jgraham>
I remember Mozilla tried to do that like 10 years ago

[10:43:03.0000] <jgraham>
I dunno what happened

[10:43:04.0000] <jgraham>
But I certainly recally pure-XBL-forms builds

[10:43:05.0000] <jgraham>
*recall

[10:44:00.0000] <TabAtkins>
XBL was just a bad version of shadow DOM, so there you go.

[10:44:01.0000] <Ms2ger>
/me removed some traces of that earlier this year

[10:44:02.0000] <jgraham>
Well I know that XBL and shadow dom are the same or I wouldn't have mentioned it :)

[10:45:00.0000] <asmodai>
ye gods, people just don't grasp how ditching HTML versions in favour of feature detection is So Much Nicer(tm).

[10:45:01.0000] <jgraham>
Who wants versions now?

[10:45:02.0000] <Ms2ger>
MS?

[10:49:00.0000] <AryehGregor>
Still?

[10:51:00.0000] <AryehGregor>
Are they reopening the issue?

[10:55:00.0000] <Ms2ger>
/me knows nothing, but they seemed a possible suspect

[10:55:01.0000] <asmodai>
Nah, was some topic on a website about last call for HTML 5

[10:56:00.0000] <asmodai>
A relatively high-tech oriented site and there's people seriously wondering wth you would want feature detection over HTML versions.

[10:57:00.0000] <AryehGregor>
Maybe they've never written actual websites.

[10:58:00.0000] <asmodai>
That's my best explanation.

[10:58:01.0000] <Philip`>
Got to teach them that web standards aren't like actual standards that software actually implements, where you can meaningfully ask software what standards it implements

[10:59:00.0000] <asmodai>
I mean, I don't mess with website coding on a daily basis, but the entirety of using feature detection just makes so much more sense for a developing and moving platform like the web.

[10:59:01.0000] <asmodai>
Philip`: Yeah, pointed them to explanations of graceful degradation and feature detection.

[11:00:00.0000] <AryehGregor>
In bytes, http://aryeh.name/spec/editcommands/editcommands.html is now about 6% the size of http://whatwg.org/c.

[11:00:01.0000] <AryehGregor>
And growing.

[11:01:00.0000] <AryehGregor>
/me isn't sure if that's scary or not

[11:02:00.0000] <Philip`>
/me imagines the complexity of a spec increases non-linearly with its size

[11:02:01.0000] <Philip`>
so the next 6% will be much harder

[11:02:02.0000] <AryehGregor>
In some ways I've found it's gotten easier, because I have a much better understanding of how everything works.

[11:03:00.0000] <Philip`>
but fortunately /c will find growth even harder so it won't be too fast a moving target

[11:03:01.0000] <jgraham>
/me imagines this document will be merged into /c eventually

[11:03:02.0000] <jgraham>
So you can't win

[11:04:00.0000] <Philip`>
Hmm, yeah, I suppose agglutinating specs is quicker way to seemingly grow

[11:21:00.0000] <asmodai>
Anyone happen to know if lxml.html's pretty_print needs html5lib to function properly for pretty printing HTML 5 markup?

[11:21:01.0000] <asmodai>
Because currently, without any html5lib serialisation, it doesn't seem to properly pretty print.

[11:25:00.0000] <jgraham>
asmodai: No idea. I didn't think lxml ever depended on html5lib though, so I don't see why it would

[11:27:00.0000] <asmodai>
Well, it doesn't depend on it for its parsing, but you can use it in conjunction.

[11:27:01.0000] <asmodai>
I'm just not understanding why it's not pretty printing how I expect it.

[11:28:00.0000] <asmodai>
Even non-HTML5 elements are not pretty printing.

[11:28:01.0000] <asmodai>
I doubt that lxml would have a bug, so I must be doing something wrong.

[11:41:00.0000] <hsivonen>
MikeSmith: Normalization checking is based on my 2006 expectation that HTML5 would normatively reference C300 in Charmod-Norm

[11:42:00.0000] <MikeSmith>
hsivonen: oh

[11:42:01.0000] <MikeSmith>
but doesn't it sorta do that indirectly now?

[11:43:00.0000] <hsivonen>
MikeSmith: how? AFAICT, my expectation has so far been wrong

[11:44:00.0000] <hsivonen>
I also received other feedback about this today

[11:44:01.0000] <hsivonen>
now I'm really curious to find out what the W3C i18n folks think about charmod-norm today and why

[11:45:00.0000] <MikeSmith>
hsivonen: I can probably get a quick answer to that by pinging r12a

[11:45:01.0000] <hsivonen>
I suppose the errors should be downgraded to warnings if there's not going to be a normative trail to a normalization spec

[11:45:02.0000] <hsivonen>
MikeSmith: already did

[11:45:03.0000] <othermaciej>
good morning, folks

[11:45:04.0000] <MikeSmith>
hsivonen: OK

[11:46:00.0000] <Ms2ger>
I hear i18n has been asking the CSSWG to require NFC-normalizing selectors in css3-namespaces

[11:46:01.0000] <MikeSmith>
as far as how, I guess I assumed this was something that the upstream Unicode spec would mandate by now

[11:46:02.0000] <hsivonen>
Ms2ger: I thought they wanted processors to do late normalization

[11:46:03.0000] <MikeSmith>
hsivonen: so that the rest of us don't have to N number of times

[11:46:04.0000] <hsivonen>
Ms2ger: instead of requiring authors to do early normalization

[11:46:05.0000] <hsivonen>
Ms2ger: in the CSS case

[11:47:00.0000] <Ms2ger>
I think you're right

[11:47:01.0000] <Ms2ger>
I'm still surprised that they want that specced in namespaces

[11:47:02.0000] <hsivonen>
(FWIW, I'm very, very much against late normalization for identifier matching)

[11:48:00.0000] <Ms2ger>
Make sure to convince your CSSWG representative, then :)

[11:48:01.0000] <hsivonen>
Ms2ger: there are multiple reps to convince :-/

[11:49:00.0000] <MikeSmith>
multiple points of failure?

[11:49:01.0000] <MikeSmith>
othermaciej: おはよう

[11:50:00.0000] <AryehGregor>
There's no way to make a position: fixed box adjust height (for instance) to fit its contents, right?

[11:50:01.0000] <hsivonen>
frankly, I get the feeling that the selector normalization debate is an indication that i18n on the Web has been solved

[11:50:02.0000] <Ms2ger>
By that logic, a11y has been solved as well

[11:51:00.0000] <hsivonen>
Ms2ger: good point

[11:53:00.0000] <MikeSmith>
hsivonen: fwiw, I just (re)pinged r12a (but fact is, dude's pretty busy. used to be he had another full-time i18n person on W3C team to help, but now it's just him, and other i18n people outside of the W3C team have been significantly less active lately)

[12:50:00.0000] <AryehGregor>
/me has come to the realization that he needs a higher chair and a higher desk

[12:51:00.0000] <AryehGregor>
When I sit up straight, my eye level is slightly above the top of my monitor, and my legs have to be uncomfortably squished under me.

[12:51:01.0000] <AryehGregor>
It can't be good for me.

[12:51:02.0000] <aho>
i miss my huuuuge desk

[12:51:03.0000] <aho>
2.5m x 1.2m x 0.8m

[12:52:00.0000] <aho>
it was so lovely

[12:52:01.0000] <aho>
interestingly... it was stolen

[12:52:02.0000] <aho>
which is... pretty weird

[12:53:00.0000] <aho>
mmm

[12:53:01.0000] <aho>
/me checks ikea

[12:57:00.0000] <jgraham>
aho: Noooo. IKEA is the source of all evil

[12:58:00.0000] <aho>
they dont have ridiculously large desks anyways :f

[13:42:00.0000] <AryehGregor>
So is there any way at all to center something vertically in CSS, say in a position:fixed div that takes up the whole screen?

[13:42:01.0000] <AryehGregor>
(don't ask why I'm using a position: fixed div that takes up the whole screen)

[13:45:00.0000] <AryehGregor>
(or if you want to know: http://aryeh.name/spec/editcommands/linebreaktest.html)

[13:49:00.0000] <Jon47>
aryehgregor - there's definitely a way

[13:49:01.0000] <AryehGregor>
Namely?

[13:50:00.0000] <Jon47>
somethign like this perhaps: http://www.emblematiq.com/blog/vertical_align_with_css/assets/03.html

[13:59:00.0000] <The_8472>
AryehGregor, that is not easy to achieve because it goes against the concept of CSS flows. at least of vertical ones. and the ability to create horizontal flows is... well... not widely supported yet.

[14:00:00.0000] <zcorpan>
http://www.w3.org/Bugs/Public/show_bug.cgi?id=12101 - do we need to clone getters at all?

[14:00:01.0000] <AryehGregor>
Jon47, oh, display: table-cell.  Big surprise.

[14:01:00.0000] <Jon47>
lol, sorry :(

[14:01:01.0000] <zcorpan>
seems annoying if a getter does sync xhr or alert or so

[14:01:02.0000] <The_8472>
another way would be creating an inline-block and making the line-height as big as the container, then vertical-align the inline block

[14:02:00.0000] <The_8472>
since lines are a poor man's horizontal flow

[14:02:01.0000] <Jon47>
whenever I've had to do this in the past I just invoke a jquery method to center the element

[14:03:00.0000] <zcorpan>
just do <br><br><br><br><br> until it looks about right

[14:04:00.0000] <The_8472>
table layout!

[14:07:00.0000] <Philip`>
AryehGregor: You don't need a higher chair and desk, you just need a lower floor

[14:07:01.0000] <AryehGregor>
Philip`, I'll take that into consideration.

[14:07:02.0000] <Philip`>
Cutting/digging a hole can't be that hard, surely

[14:09:00.0000] <AryehGregor>
I suspect I'd need a permit.

[14:12:00.0000] <Philip`>
It's easier to ask for forgiveness than permission

[14:13:00.0000] <AryehGregor>
Easier, but probably not quite as wise when you're talking about the city buildings commission.

[14:13:01.0000] <Philip`>
Besides, you could cover the hole up with some kind of camouflage when you're not using it to rest your legs in, so nobody would even know

[14:20:00.0000] <nimbu>
dbaron: i cant seem to find mochitest in mozilla's latest source code :s the test_animations.html in layout/style/ wont run :/

[14:21:00.0000] <dbaron>
nimbu, the stuff in layout/style/test/ and the stuff in testing/mochitest/tests/ gets installed into a separate directory structure

[14:21:01.0000] <nimbu>
ohh

[14:21:02.0000] <nimbu>
oops

[14:21:03.0000] <dbaron>
nimbu, but just combining them so that layout/style/test/ -> .../layout/style/test/ and testing/mochitest/tests/SimpleTest/ -> .../SimpleTest/ should work

[14:22:00.0000] <dbaron>
nimbu, though there may be some cases where it has / rather than ../../../, which means you'd need to fix that at the top of the *.html in layout/style/test/

[14:22:01.0000] <dbaron>
nimbu, since they get served with a local web server

[14:22:02.0000] <nimbu>
i thought I could get away without building mozilla >_>

[14:22:03.0000] <dbaron>
nimbu, you can, for many of the tests

[14:22:04.0000] <nimbu>
ah but your API needs mochitest :)

[14:23:00.0000] <nimbu>
SpeciaPowers™

[14:23:01.0000] <nimbu>
+l

[14:23:02.0000] <dbaron>
nimbu, yeah, the animations test needs SpecialPowers and that API, but the transitions tests don't

[14:23:03.0000] <nimbu>
oh neet

[14:23:04.0000] <nimbu>
let me look at that first then.

[14:25:00.0000] <dbaron>
nimbu, and it looks like I got the path mapping a little wrong (testing/mochitest/tests/ -> .../tests)

[14:25:01.0000] <dbaron>
nimbu, and also the MochiKit copy in testing/mochitest/ is needed

[14:25:02.0000] <dbaron>
nimbu, though it's really just 3 files total

[14:27:00.0000] <nimbu>
thanks dbaron! ah, i will try building this (my first time!) if I fail I will trouble you again.

[14:27:01.0000] <dbaron>
nimbu, ah, well, you'd only need to build for the animations test, but yeah...

[14:51:00.0000] <TabAtkins_>
AryehGregor: Do you know the height of the object?  If so, you can center it using "top:50%;margin-top:-<half-the-height>;".

[14:52:00.0000] <AryehGregor>
TabAtkins_, you mean of the thing I want to center?  It's some text, so I suppose I could guess how many lines it will wrap to.

[14:58:00.0000] <hsivonen>
http://ryanelmquist.com/cgi-bin/xkcdwiki

[14:58:01.0000] <hsivonen>
15 steps from HTML5

[15:31:00.0000] <jgraham>
Like the Radiohead song

[15:33:00.0000] <jgraham>
Clearly we should adopt that as the official theme song of HTML5. "How come I end up where I started/ How come I end up where I went wrong / won't take my eye off the ball again" - clearly a reference to W3C abandoning HTML development

[15:41:00.0000] <yuhong>
FYI, on ISSUE-129 table-border, look up "HTML 3.0 vs Netscape table border" on Google Groups and particularly read the threads from 1995.

[15:41:01.0000] <yuhong>
ISSUE-155 table-border, sorry.

[15:42:00.0000] <yuhong>
For some important history.

[16:12:00.0000] <Yuhong>
http://groups.google.com/group/comp.infosystems.www.browsers.mac/browse_thread/thread/44db96d108412b66/84961a8fa90a26ff?hl=en&ie=UTF-8&oe=utf-8&q=netscape+vs+%22html+3.0%22+tables+border+attribute#84961a8fa90a26ff

[16:13:00.0000] <Yuhong>
(about the history behind issue-155 table-border)

[16:25:00.0000] <AryehGregor>
"3D video games are in wide use today."  http://www.0xdeadbeef.com/weblog/2011/05/bringing-the-first-3d-html5-video-to-the-web-with-firefox-nvidia-and-youtube/

[16:26:00.0000] <AryehGregor>
Um, like which ones?

[16:26:01.0000] <Hixie>
do they mean in general?

[16:33:00.0000] <AryehGregor>
I used to do a lot of gaming and read PC Gamer every month, and I don't know of any 3D video games.

[16:39:00.0000] <Hixie>
there have been 3D video games since the early nineties at least

[16:39:01.0000] <Hixie>
"Time Traveler" being the first one I know of

[16:39:02.0000] <Hixie>
dunno about "wide use" though, i'll grant you that

[16:40:00.0000] <Hixie>
most modern ones tend to be rather elaborate affairs in labs or theme parks

[16:40:01.0000] <jamesr>
3ds games?

[16:40:02.0000] <jamesr>
those are fairly widely used

[16:41:00.0000] <jamesr>
dunno how well the 3ds is selling

[16:41:01.0000] <Hixie>
oh yeah, forgot about the 3ds

[16:41:02.0000] <AryehGregor>
Is that some console?  I never followed console gaming.

[16:41:03.0000] <Hixie>
handheld

[16:41:04.0000] <jamesr>
nintendo 3ds handheld

[16:41:05.0000] <AryehGregor>
I know there have been 3D games since the 1990s, but at least on the PC, there have never been any of importance that I know of.

[16:43:00.0000] <jamesr>
as of late april nintendo claims to have shipped over 9million games for the 3Ds, presumably all of those 3d

[16:44:00.0000] <jamesr>
3.6m devices

[16:45:00.0000] <Lachy>
There are some console games that can be played in 3D if you've got a 3D TV.

[16:46:00.0000] <Lachy>
The PS3 supports for some games


2011-05-27
[17:02:00.0000] <jamesr>
AryehGregor: i keep replying to that thread without reading the whole thin

[17:02:01.0000] <jamesr>
i might just be making a fool of myself

[17:02:02.0000] <jamesr>
ah well

[17:08:00.0000] <zewt>
jamesr: i already said that it's sort of silly to think about adding a complex feature to the platform so mirrors don't have to mirror a version of a file with a few lines of code wrapped around it :)

[17:09:00.0000] <zewt>
not sure whether that works trivially with complex script sets like jquery (eg. to just boilerplate it automatically) or if it needs more work than that

[17:09:01.0000] <jamesr>
i think it's brave to assume that script authors will step up to the plate here

[17:09:02.0000] <jamesr>
it's also extra bytes that not all users of the script will want to care about

[17:09:03.0000] <zewt>
given that the only scripts we're really talking about here are big ones, adding a dozen or two lines of code around them doesn't seem worth worrying about

[17:10:00.0000] <jamesr>
not necessarily big ones, ones that have expensive top-level statements

[17:10:01.0000] <jamesr>
it could be a tiny-ass script that does a full DOM walk in some top-level statement

[17:12:00.0000] <jamesr>
and even small scripts can be expensive to download if the RTT is high

[17:12:01.0000] <jamesr>
like it is on mobile

[17:12:02.0000] <jamesr>
so you might want to start the download asap because it takes a few seconds to set up a new HTTP connection

[17:12:03.0000] <zewt>
you'd also want a little more framework for this sort of thing in any case; for example, to do things like say "load this script, and run this callback when it's available or immediately if it's already loaded"

[17:13:00.0000] <zewt>
but again it doesn't seem like we need browser-level help there

[17:14:00.0000] <zewt>
hmm, is it possible for an external script to get its own URL? can't say I've ever tried

[17:15:00.0000] <zewt>
just thinking of APIs like load_script(url, callback), with the script looking like registerScript(my_url, top_level_function)

[17:15:01.0000] <zewt>
(without hardcoding the URL in the file)

[17:18:00.0000] <zewt>
(user-library APIs, that is, not suggesting a browser API like that)

[17:28:00.0000] <heycam>
Hixie, ping

[17:31:00.0000] <Hixie>
yo

[17:31:01.0000] <Hixie>
sup

[17:33:00.0000] <heycam>
hey, I'm trying to work out what to do with Date

[17:33:01.0000] <heycam>
as used in HTMLInputElement and HTMLTimeElement

[17:33:02.0000] <heycam>
Dates in JS are mutable

[17:33:03.0000] <Hixie>
yeah, the attributes in question say to return a new object each time iirc

[17:34:00.0000] <heycam>
that sounds like the same kind of undesirable behaviour that led to the "don't allow sequences to be the type of attributes" decision recently

[17:34:01.0000] <Yuhong>
Hixie: BTW, I hate that the DOM viewer breaks the back button. Can that be fixed?

[17:35:00.0000] <heycam>
do we have implementations of those Date attributes yet?

[17:35:01.0000] <Hixie>
heycam: it's bad for sequences because they almost always get used in loops

[17:35:02.0000] <Hixie>
heycam: for dates, it doesn't seem like a big deal

[17:35:03.0000] <heycam>
Hixie, true, it's probably not as bad

[17:35:04.0000] <Hixie>
heycam: especially since dates can be implemented in js engines as a native very fast type

[17:35:05.0000] <Hixie>
heycam: so creating a new one need not be expensive

[17:35:06.0000] <heycam>
so what I'm wondering about really is what's the semantics of the IDL type "Date"

[17:36:00.0000] <heycam>
is it a mutable or immutable value?

[17:36:01.0000] <Hixie>
it's just an object type, no?

[17:36:02.0000] <Hixie>
like RegExp or HTMLElement or Object

[17:36:03.0000] <Hixie>
a reference type, i should say

[17:36:04.0000] <heycam>
mm

[17:37:00.0000] <heycam>
so you would be able to modify it

[17:37:01.0000] <heycam>
but the current uses of the type happen to have "always return a new one" behaviour

[17:37:02.0000] <heycam>
so would never see the modifications

[17:37:03.0000] <heycam>
but future APIs could

[17:37:04.0000] <Hixie>
yeah, you could imagine an attribute that kept a reference to the object so that you could modify it

[17:38:00.0000] <heycam>
there's something that doesn't feel quite right about native JS object mutation causing something to happen in the DOM

[17:38:01.0000] <Hixie>
wow, the webidl and html validators got huge numbers of new warnings since i last regenned the spec a few hours ago

[17:38:02.0000] <Hixie>
heycam: yeah i don't think we'd ever do that in practice

[17:39:00.0000] <heycam>
but you would be ok with having a DOM object / future API look at the "current value" of a Date object

[17:39:01.0000] <Hixie>
"Interface CanvasRenderingContext2D.drawImage() has a non-optional argument after an optional one" that's not a bug is it?

[17:39:02.0000] <heycam>
yes it is

[17:40:00.0000] <Hixie>
it's hard to comment on future APIs without a concrete example

[17:40:01.0000] <heycam>
sure

[17:40:02.0000] <Hixie>
why is that not valid now?

[17:40:03.0000] <heycam>
what do you want it to mean?

[17:40:04.0000] <heycam>
/me pulls up the spec

[17:40:05.0000] <Yuhong>
Hixie: BTW, I hate that the DOM viewer breaks the back button. Can that be fixed?

[17:40:06.0000] <Hixie>
i thought it used to mean "you can truncate here"

[17:40:07.0000] <heycam>
ah right

[17:40:08.0000] <Hixie>
Yuhong: oops, sorry, forgot to reply to you before

[17:40:09.0000] <Hixie>
Yuhong: how does it break it?

[17:40:10.0000] <heycam>
you are right, that used to be valid, and I took it out

[17:41:00.0000] <heycam>
I think it looks quite confusing in the IDL

[17:41:01.0000] <Hixie>
k

[17:41:02.0000] <heycam>
as if you can omit just that middle parameter

[17:41:03.0000] <Hixie>
i can just list all the variants i guess

[17:41:04.0000] <heycam>
yeah

[17:41:05.0000] <heycam>
12 of them then? :)

[17:41:06.0000] <Yuhong>
Hixie: Try typing in the textbox, and then click back several times.

[17:41:07.0000] <Hixie>
Yuhong: it seems to work... it goes back through the various states of the iframe, per spec, no?

[17:42:00.0000] <Hixie>
heycam: some large number :-)

[17:42:01.0000] <Yuhong>
Hixie: Yea, but the textbox doesn't update making it useless for undo

[17:43:00.0000] <Hixie>
Yuhong: true. don't hit back :-)

[17:43:01.0000] <Yuhong>
Hixie: and if you do a lot of typing it is easy to lose track.

[17:43:02.0000] <Hixie>
heycam: btw i just checked in an update for websockets that introduces an attribute whose value is a type, which might be controversial

[17:43:03.0000] <heycam>
um

[17:43:04.0000] <heycam>
what now? :)

[17:43:05.0000] <Yuhong>
Hixie: I try to open it in a separate tab.

[17:44:00.0000] <heycam>
Hixie, link?

[17:44:01.0000] <Hixie>
heycam: lets you pick whether you want binary data to be Blob or ArrayBuffer, so the attribute's allowed values are literally the Blob and ArrayBuffer interface objects

[17:44:02.0000] <Yuhong>
Hixie: and if you do a lot of typing it is easy to lose track of where you were before.

[17:44:03.0000] <Hixie>
heycam: http://www.whatwg.org/specs/web-apps/current-work/complete.html#dom-websocket-binarytype

[17:46:00.0000] <Hixie>
hsivonen: is there some way to mute the "not yet implemented" warnings? i use unimplemented stuff on purpose :-)

[17:47:00.0000] <heycam>
Hixie, yeah I'm not sure I like that :)

[17:47:01.0000] <heycam>
as a general mechanism for mentioning types, it wouldn't handle anything that doesn't have an interface object

[17:47:02.0000] <heycam>
or primitive types

[17:47:03.0000] <heycam>
well, I guess you could use Number, Boolean, ...

[17:47:04.0000] <Hixie>
yeah what i really want is a native type type in js

[17:47:05.0000] <Yuhong>
BTW, in IE8/9 the browser and document mode if you set them using developer tools override everything else, which is why I do that in a separate tab too.

[17:48:00.0000] <Philip`>
AryehGregor: I remember Descent had various 3D modes, like a red-green one and a uncrossed-eye one, I think, and that was a fairly important game

[17:51:00.0000] <Hixie>
heycam: only 9 drawImage()s it seems, so not so bad

[17:52:00.0000] <Hixie>
heycam: what's the practical difference between Foo[] and sequence<Foo> when used as a host object argument type?

[17:54:00.0000] <heycam>
Hixie, none if there is no way to pass in an actual, existing array host object

[17:54:01.0000] <heycam>
if you pass in a JS native array both will "do the right thing"

[17:54:02.0000] <Hixie>
k

[17:54:03.0000] <heycam>
sequence probably capture the semantics better if there is no way to pass in an array host object

[17:54:04.0000] <Hixie>
in that case i'm just changing MessagePortArray from a sequence to an array and not making any other changes and it should just be better now

[17:55:00.0000] <Hixie>
since it's used for attributes and arguments

[17:55:01.0000] <heycam>
so you can take an existing array host object (got from an attribute) and pass it in as an argument

[17:55:02.0000] <heycam>
when you pass it in to that argument will the object keep a hold of that object reference?

[17:55:03.0000] <heycam>
and possibly react to it changing from user script?

[17:56:00.0000] <Hixie>
no

[17:56:01.0000] <heycam>
so the function will just grab out all the array element values when you call it and do something with them?

[17:57:00.0000] <Hixie>
yeah

[17:57:01.0000] <heycam>
ok

[17:57:02.0000] <Hixie>
except for MessageEvent.initMessageEvent(), where it's undefined, i guess

[17:57:03.0000] <heycam>
so there are no practical differences between using array and sequence

[17:57:04.0000] <Hixie>
a Foo[] attribute always returns a new object right?

[17:57:05.0000] <heycam>
sequence captures this "passing in a copy, a refererence to it can never be kept"

[17:57:06.0000] <heycam>
captures it better

[17:58:00.0000] <heycam>
no, a Foo[] attribute returns what you want it to

[17:58:01.0000] <Hixie>
ah

[17:58:02.0000] <Hixie>
so wait, what's the difference between sequence<> and [] for attributes? i thought we were changing this because sequence<>s returned the same object and []s returned a new one

[17:59:00.0000] <heycam>
no, it's sequences that would always return a new object

[17:59:01.0000] <heycam>
hence being disallowed

[17:59:02.0000] <heycam>
a T[] could return a new object or the same one, it's up to you

[17:59:03.0000] <Hixie>
ah

[17:59:04.0000] <Hixie>
hm

[17:59:05.0000] <heycam>
but I would say that returning a new one wouldn't be good, for the reasons we disallow sequences there

[17:59:06.0000] <heycam>
*a new one always

[18:00:00.0000] <Hixie>
oh wait, []s can be made readonly right?

[18:00:01.0000] <Hixie>
that's how we get around this

[18:00:02.0000] <heycam>
the array object itself, yes

[18:00:03.0000] <heycam>
its contents can be made read only

[18:00:04.0000] <Hixie>
k

[18:00:05.0000] <heycam>
#dfn-read-only-array or something in Web IDL

[18:00:06.0000] <Hixie>
ok so i just need to make initMessageEvent copy the array and then .ports return a readonly one

[18:01:00.0000] <heycam>
make it return a read only one, and make it return the same one always, yeah?

[18:01:01.0000] <Hixie>
and then the only messages dom's idl checker will be giving me are 50 messages about [Supplemental] and one about some other attribute

[18:01:02.0000] <Hixie>
yeah

[18:01:03.0000] <heycam>
having the initMessageEvent argument be a sequence<MessagePort> captures the copying semantics

[18:01:04.0000] <heycam>
so you wouldn't have to state that explicitly

[18:01:05.0000] <Hixie>
yeah but then i have to have two types

[18:02:00.0000] <heycam>
you don't need to typedef these btw

[18:02:01.0000] <Hixie>
oh, good

[18:02:02.0000] <Hixie>
then i'll just do that then

[18:02:03.0000] <heycam>
there was a requirement to typedef them ages ago, but that got removed

[18:02:04.0000] <Hixie>
sweet

[18:02:05.0000] <Hixie>
that makes this much neater

[18:02:06.0000] <heycam>
cool

[18:05:00.0000] <TabAtkins>
AryehGregor: Minecraft has a 3d mode.

[18:14:00.0000] <Hixie>
heycam: fyi, i get 50+ of the first one of these and one of the second:

[18:14:01.0000] <Hixie>
Line 0 of IDL #0:Extended attribute of Supplemental is unknown in WebIDL.

[18:14:02.0000] <Hixie>
Line 0 of IDL #0:Extended attribute of ReplaceableNamedProperties is unknown in WebIDL.

[18:14:03.0000] <Hixie>
[ReplaceableNamedProperties] is apparently http://www.w3.org/Bugs/Public/show_bug.cgi?id=8241

[18:15:00.0000] <Hixie>
oh hey you aslked me a question there

[18:16:00.0000] <Hixie>
hm

[18:16:01.0000] <Hixie>
heycam: didn't we recently discuss doing this by having Window inherit from something or the other way around or something?

[18:18:00.0000] <heycam>
Hixie, what's the context there?

[18:18:01.0000] <Hixie>
the bug

[18:19:00.0000] <Hixie>
making <script> foo = 1; status = 2; var bar = 3; </script> do the right thing

[18:20:00.0000] <heycam>
I do remember discussing something about having an extra object in the proto chain or Window

[18:20:01.0000] <heycam>
it unfortunately doesn't seem to be paged in to my head at the moment :)

[18:20:02.0000] <Hixie>
yeah me either

[18:21:00.0000] <heycam>
I'll read up on it again next week and work out what's going on there

[18:21:01.0000] <Hixie>
oh well k

[18:22:00.0000] <Hixie>
er

[18:22:01.0000] <Hixie>
"k"

[18:30:00.0000] <heycam>
Hixie, s/methos/method/ in that recent commit

[18:30:01.0000] <Hixie>
thanks

[19:09:00.0000] <TabAtkins>
I forget - is <link itemprop href> allowed in <body>?

[19:09:01.0000] <TabAtkins>
Or do you need to use <meta> to embed a link?

[19:09:02.0000] <TabAtkins>
Never mind, answered my own question.

[19:09:03.0000] <TabAtkins>
(Yes.)

[20:37:00.0000] <Hixie>
TabAtkins: i think what guha was suggesting is slightly different

[20:38:00.0000] <Hixie>
TabAtkins: he wants the value to be an item with an id, not a url

[20:38:01.0000] <Hixie>
TabAtkins: as far as i can tell, he just wants to be able to omit the itemscope="" attribute for brevity

[22:13:00.0000] <heycam>
Hixie, I added a date type, but I called it "date" rather than "Date" (for consistency with "object" (but inconsistency with "DOMString"!))

[22:15:00.0000] <Hixie>
why not Date? that's what it is in JS

[22:16:00.0000] <heycam>
I was going for "built in types are lowercase" (except for DOMString because people complained about that)

[22:17:00.0000] <Hixie>
i'd go with all primitive types are lowercase

[22:17:01.0000] <Hixie>
and reference types are capitalised

[22:18:00.0000] <Hixie>
and then change 'object' to 'Object', mostly because that's how I always spell it anyway

[22:18:01.0000] <heycam>
hmm

[22:18:02.0000] <Hixie>
to the point that I've seriously considered a typedef

[22:18:03.0000] <Hixie>
:-)

[22:18:04.0000] <heycam>
I didn't particularly want to rename object again!

[22:18:05.0000] <Hixie>
well i was mostly kidding with that last bit

[22:18:06.0000] <heycam>
:)

[22:18:07.0000] <Hixie>
though i do really always type it Object

[22:19:00.0000] <Hixie>
at the end of the day I don't really mind either way, but Date would be mildly less inconvenient because it's what I've used already and it's what JS has

[22:19:01.0000] <Hixie>
so I don't have to have inside-baseball notes about how a "date" is a "Date" and so on

[22:19:02.0000] <heycam>
all right

[22:20:00.0000] <Hixie>
from a blackbox perspective, Date isn't really any more native than HTMLElement

[22:20:01.0000] <Hixie>
if that helps

[22:20:02.0000] <Hixie>
i mean, it's in a different spec, but that's a conway's law detail

[22:20:03.0000] <Hixie>
not "real"

[22:21:00.0000] <heycam>
suppose so

[22:21:01.0000] <heycam>
I also made it more "value like" for now

[22:21:02.0000] <heycam>
i.e. returns new objects each time you get the attribute

[22:21:03.0000] <heycam>
references don't get held by dom objects

[22:22:00.0000] <Hixie>
k

[22:24:00.0000] <heycam>
ok, renamed to "Date"

[23:33:00.0000] <JonathanNeal>
ahoy

[01:31:00.0000] <zcorpan>
what's the procedure to check why webgl doesn't work in latest safari?

[01:43:00.0000] <zcorpan>
Hixie: why is binaryType not a string?

[01:46:00.0000] <zcorpan>
Hixie: xhr's responseType uses strings "arraybuffer" and "blob"

[02:01:00.0000] <MikeSmith>
hsivonen: so, OK if I flip the Unicode Normalization checker to emitting a warning instead of an error?

[02:03:00.0000] <MikeSmith>
hsivonen: also, I chatted with r12a about it and from that I got the impression he kind of hit a brick wall with it in previous discussions with Hixie and/or others in the group

[02:03:01.0000] <hsivonen>
MikeSmith: ok

[02:03:02.0000] <MikeSmith>
thanks

[02:04:00.0000] <MikeSmith>
anyway, I'm not sure what concrete plans Richard or others from the i18n wg have for re-pursusing it

[02:04:01.0000] <MikeSmith>
but, I think his and their position remains that it should be a requirement in specs

[02:05:00.0000] <MikeSmith>
actually, he said specifically that they now recommend late normalization but only for id and class names and selectors

[02:05:01.0000] <MikeSmith>
and not for content

[02:07:00.0000] <MikeSmith>
hsivonen: he pointed me at the following as an example of the kind of reporting he thinks is useful (and that he's implemented himself)

[02:07:01.0000] <MikeSmith>
http://validator.w3.org/i18n-checker/index?docAddr=http%3A%2F%2Frishida.net%2Ftools%2Fi18nchecker%2Ftest.php&async=true

[02:08:00.0000] <MikeSmith>
in particular, see errors and warnings in the "Detailed report"  section

[02:09:00.0000] <hsivonen>
so the key here is that normalization is a warning rather than an error?

[02:13:00.0000] <MikeSmith>
hsivonen: well, along with the fact that it doesn't do checking of content

[02:13:01.0000] <hsivonen>
MikeSmith: what's the reason not to check content?

[02:14:00.0000] <MikeSmith>
because they now do not recommend late normalization for content, but only for id and class names and selectors

[02:14:01.0000] <MikeSmith>
if I understand correctly

[02:15:00.0000] <MikeSmith>
dunno, maybe they do for early normalization?

[02:16:00.0000] <MikeSmith>
I have to admit that I'm not clear on what the distinction is between early normalization and late normalization

[02:16:01.0000] <MikeSmith>
or if that distinction might have relevance to whether to check for it in content rather than just in attribute values

[02:17:00.0000] <MikeSmith>
but I can ask him again

[02:21:00.0000] <MikeSmith>
hsivonen: ok, r12a says, thet do generally recommend that people save content as NFC

[02:21:01.0000] <MikeSmith>
so a validator can warn if they don't, to be helpful

[02:22:00.0000] <MikeSmith>
but he says there may be occasions where someone who knows what they are doing actually *wants* to write something in NFD

[02:23:00.0000] <MikeSmith>
and gives as an example, if, say, you write some javascript to do normalization, you have to be able to write some of the data in NFD for the algorithm to work

[02:29:00.0000] <MikeSmith>
so, summary from discussion with him is that, yeah, it's appropriate for it to be a warning (as opposed to an error)

[02:29:01.0000] <MikeSmith>
and that it's appropriate for that warning to be emitted for content as well as attribute values

[02:47:00.0000] <MikeSmith>
hsivonen: r12a points me to this:

[02:47:01.0000] <MikeSmith>
http://lists.w3.org/Archives/Public/public-i18n-core/2011AprJun/0085.html

[05:30:00.0000] <Shiningnorance>
hello

[05:30:01.0000] <Shiningnorance>
did you guys actually write html5?

[05:32:00.0000] <Workshiva>
If you mean the actual spec text, Hixie did that, yes

[05:33:00.0000] <Shiningnorance>
oh man, hixie is actually here!

[05:34:00.0000] <Shiningnorance>
according to Introducing HTML5, Hixie moved to Google!

[05:34:01.0000] <Ms2ger>
Well, he did

[05:35:00.0000] <Shiningnorance>
He's awesome!

[05:40:00.0000] <Shiningnorance>
It's funny, most of you guys have Pokemon-like names :>

[05:43:00.0000] <Philip`>
Hixie is everywhere

[05:44:00.0000] <hsivonen>
/me thought Dashimon was the only pokemon name around here

[05:45:00.0000] <Shiningnorance>
Oh that may explain why I felt something weird in my pants

[05:47:00.0000] <Workshiva>
hsivonen: Pokemon names don't actually end in mon

[05:47:01.0000] <Workshiva>
A better guess would be Digimon

[05:48:00.0000] <hsivonen>
Workshiva: shows how little I know about *mon

[05:53:00.0000] <Workshiva>
hsivonen: Then you should be careful about labeling names as pokemon, people might think you're an expert ;)

[05:54:00.0000] <Shiningnorance>
/me thought hsivonen was a pokemon expert.

[05:58:00.0000] <hsivonen>
Workshiva: sorry

[06:11:00.0000] <MikeSmith>
I know all about pokeman

[06:11:01.0000] <MikeSmith>
I have a 7th-degree experts status in pokeman

[06:41:00.0000] <Workshiva>
MikeSmith: I guess that's required to get residence in Japan?

[06:52:00.0000] <asmodai>
/me buries MikeSmith in Yu-Gi-Oh! cards

[08:10:00.0000] <Shiningnorance>
exit

[11:24:00.0000] <Philip`>
/me wonders if someone has mentioned that if there's some way to improve script loading by modifying scripts and you want to load jQuery with it, it'd be much easier to get jQuery modified than to add features into every browser engine to work around hypothetical unmodifiability

[11:26:00.0000] <Ms2ger>
I'm afraid you're wrong, jquery has been set in stone

[11:27:00.0000] <Philip`>
Oh, in that case browsers could just bundle jQuery and maybe even port it all to C++ so they don't have to do run-time compilation at all

[11:27:01.0000] <Philip`>
So the problem's solved either way

[11:28:00.0000] <gsnedders>
Philip`: Port it to C++ when browser vendors are moving stuff to JS? :P

[11:28:01.0000] <tomasf>
implement jQuery in hardware and sell it as a dongle

[11:30:00.0000] <Philip`>
gsnedders: JS is overrated

[11:30:01.0000] <Philip`>
C++ is the language of the future

[11:31:00.0000] <jcranmer>
Philip`: pssh, everyone knows that basic is where its at

[11:32:00.0000] <Philip`>
Someone needs to write a BASIC-to-LLVM compiler, and then attach it to that LLVM-to-JS compiler

[11:34:00.0000] <Philip`>
http://stevehanov.ca/blog/index.php?id=92 - ooh

[11:37:00.0000] <zewt>
Philip`: i did point that out, yes :)

[11:38:00.0000] <Philip`>
zewt: Ah, good, then I don't need to have said anything :-)

[11:40:00.0000] <zewt>
http://lists.whatwg.org/htdig.cgi/whatwg-whatwg.org/2011-May/031799.html

[11:41:00.0000] <AryehGregor>
gsnedders, browser vendors are only moving non-performance-sensitive stuff to JS, right?  Parts of jQuery are probably performance-sensitive.

[11:42:00.0000] <paul_irish>
10min of playing Snake later... thanks Philip` ;)

[11:46:00.0000] <jgraham>
AryehGregor: You like poking sleeping bears I see :)

[11:46:01.0000] <AryehGregor>
Occasionally.

[12:06:00.0000] <gsnedders>
AryehGregor: Depends what you mean by perf-sensitive. Moz playing around with NodeList in JS, that seems fairly perf vital.

[12:08:00.0000] <gsnedders>
AryehGregor: The vital point is the gain from being able to inline stuff (and potentially optimize based upon that), the removal of the cost of calling into host code, versus the less good general optimization it'll get from the compiler

[12:08:01.0000] <AryehGregor>
Interesting point.

[12:09:00.0000] <Ms2ger>
gsnedders, that's still written in C++, though

[12:09:01.0000] <gsnedders>
Ms2ger: I saw something from someone (bz?) about experimenting with it.

[12:09:02.0000] <Ms2ger>
With proxies, but not in JS

[12:10:00.0000] <gsnedders>
Ms2ger: Ah.

[12:12:00.0000] <gsnedders>
AryehGregor: An obvious simple optimization made possible by moving, say, Node.prototype.cloneNode(boolean deep) to JS is you can inline it and then possibly remove the irrelevant deep branch if it is called with a constant argument

[12:12:01.0000] <AryehGregor>
That's one jump.  Surely that can't be a significant perf improvement.

[12:13:00.0000] <AryehGregor>
Conditional jump, I should say.

[12:13:01.0000] <AryehGregor>
But still, one instruction.

[12:14:00.0000] <Ms2ger>
Jumps are hard, let's go shopping

[12:14:01.0000] <gsnedders>
AryehGregor: That depends if you do it as foreach (children as child) if (deep) or the other way around

[12:14:02.0000] <AryehGregor>
Well, so just do it the other way around.

[12:15:00.0000] <gsnedders>
AryehGregor: Also branch prediction isn't perfect, removing jumps can give you gains.

[12:21:00.0000] <gsnedders>
Does anyone know what happened in the end wrt all the discussions about having two interoperable implementations before finalizing ES3.1?

[12:23:00.0000] <gsnedders>
(Because, well, obviously we don't. There are known compatibility issues with actually implementing the spec.)

[12:34:00.0000] <bga_>
gsnedders es3 and es5/6?

[12:47:00.0000] <gsnedders>
bga_: ES3.1 == ES5

[12:48:00.0000] <bga_>
es5 nonstrict

[12:49:00.0000] <gsnedders>
bga_: It's the progressive update before Harmony, so it's all of ES5.

[12:49:01.0000] <bga_>
ok

[12:53:00.0000] <bga_>
i hope - vendors will continue to support es3 (i mean, improve jit, optimizations, etc)

[12:53:01.0000] <AryehGregor>
Vendors use the exact same engine for all JS versions, I hope.

[12:55:00.0000] <bga_>
one asi -> bytecode engine and many parsers

[14:09:00.0000] <Hixie>
jgraham: getting 500s again

[14:10:00.0000] <Ms2ger>
You could set anolis up locally ;)

[14:10:01.0000] <Hixie>
woah, getting 500s even for the non-w3c one this time

[14:10:02.0000] <Hixie>
Ms2ger: no, i hit CPU limits if i do that

[14:11:00.0000] <Ms2ger>
Hmmm

[14:11:01.0000] <Ms2ger>
You could write smaller specs? :)

[14:11:02.0000] <Hixie>
our specs are already too small and spread out

[14:11:03.0000] <AryehGregor>
/me is glad he doesn't have to deal with these crazy VPS things, dedicated hosting FTW

[14:12:00.0000] <AryehGregor>
Alternatively, VPS would be okay if it were pay-by-usage instead of flat fees.  Then you could use some extra CPU or memory occasionally and not have to pay much extra for it.

[14:13:00.0000] <AryehGregor>
nearlyfreespeech.net is pay-by-usage, but it's shared hosting only, alas.  They observe that they can absorb Slashdottings at a one-time cost to you of a few dollars, as compared to a fixed-resources model where you'd have to pay a fortune to be able to withstand a Slashdotting.

[14:15:00.0000] <Ms2ger>
Sounds like that would be somewhat harder to set up with non-shared hosting

[14:16:00.0000] <AryehGregor>
Well, I really meant that the problem is they only allow you to run websites off the servers, not run random processes on them.

[14:16:01.0000] <AryehGregor>
Shared servers where you can run random processes along with other users would work okay.

[14:16:02.0000] <AryehGregor>
Like a job-server setup.

[14:17:00.0000] <AryehGregor>
/me estimates that running a low-traffic site on nearlyfreespeech.net that consists solely of a modest amount of static content would cost <$0.10/month, which is nice, because that's in line with how much they actually pay to provide it

[14:19:00.0000] <AryehGregor>
I'd totally look into it if I didn't have unlimited root access to two dedicated 16-core servers with 16 GB of RAM each, paid bandwidth of 10Mbps at 95th percentile, and a total of ~2.1TB of raw 10k RPM storage.

[14:20:00.0000] <AryehGregor>
For free.

[14:20:01.0000] <TabAtkins>
AryehGregor: Yes, that's about what I paid at first.  At this point my montly hosting runs around 50c/month.

[14:20:02.0000] <AryehGregor>
TabAtkins, ah, you use them?  So does my brother (ephraimgregor.com), and the site he runs for my mother (writingaboutart.org).

[14:21:00.0000] <Hixie>
i'd consider moving too if i didn't have unlimited disk, bandwidth, users, domains, etc at dreamhost basically for free

[14:21:01.0000] <TabAtkins>
Yeah, I've used nfsn for several years.

[14:21:02.0000] <Hixie>
lunch, bbl

[14:22:00.0000] <Philip`>
AryehGregor: Pay-by-RAM-usage VPS doesn't seem particularly technically easy, since OSes and applications are generally all designed to eat as much RAM as possible

[14:22:01.0000] <Philip`>
so it'd be no different to simply paying up-front for a fixed amount

[14:23:00.0000] <AryehGregor>
Philip`, Linux can change the amount of RAM it uses at runtime, for instance if it's a VM and the hypervisor gives it more RAM.

[14:23:01.0000] <AryehGregor>
(maybe also if you physically install new RAM, but I dunno if the hardware supports that, never tried)

[14:23:02.0000] <AryehGregor>
There are also "balloon drivers", recently, which try to free up RAM so it can be given back to the host if not enough is free.

[14:23:03.0000] <AryehGregor>
s/host/hypervisor/

[14:24:00.0000] <AryehGregor>
So in theory, you could have it configured to automatically request more RAM as needed and forfeit it when not needed.

[14:24:01.0000] <Philip`>
That seems a bit more indirect than measuring actual usage, but there are certainly VPSes that let you buy more RAM and pay per hour and it's immediately available to the machine

[14:25:00.0000] <Philip`>
and you can probably tie it into some load monitoring system so it changes automatically, if you like living dangerously

[14:25:01.0000] <AryehGregor>
I dunno if virtualization is awesome enough yet to be able to do this kind of thing seamlessly.

[14:26:00.0000] <Philip`>
I've used gandi.net and added more RAM/CPU/bandwidth dynamically and it's worked seamlessly

[14:26:01.0000] <AryehGregor>
Well, unless your host is running clustering or is massively overprovisioned, it's unlikely your RAM is going to be able to upgrade itself by more than a few gigabytes.

[14:27:00.0000] <AryehGregor>
Unless they can shift the VM between machines transparently, which I'm under the impression can't be easily done yet, although maybe I'm wrong.

[14:28:00.0000] <Philip`>
The cloudy way to do it is to split your application across multiple machines so you don't have to worry too much about running out of physical resources on one, I guess

[14:28:01.0000] <AryehGregor>
I'd argue that VMWare Cluster should count as cloudy too.

[14:28:02.0000] <Philip`>
/me 's demands are modest enough to not need anything that fancy

[15:08:00.0000] <jamesr>
nfsn ftw

[15:10:00.0000] <AryehGregor>
nfsn?

[15:10:01.0000] <jamesr>
NearlyFreeSpeech.Net

[15:30:00.0000] <Hixie>
AryehGregor: dreamhost's vps lets you change the ram and cpu you're paying for any time you want, and prorates you

[15:30:01.0000] <Hixie>
AryehGregor: it even has an API, so if i cared i could make anolis switch to 4GB of RAM, run the sync, and then drop down to 400MB again

[15:30:02.0000] <AryehGregor>
I was about to suggest that.

[15:30:03.0000] <Hixie>
but it's easier for me to let jgraham maintain anolis :-)

[15:35:00.0000] <Philip`>
(Anolis needs 4GB of RAM?)

[15:38:00.0000] <Hixie>
that was just an example

[15:38:01.0000] <Hixie>
i think it's CPU it actually needs


2011-05-28
[19:10:00.0000] <sicking>
Hixie: ping

[19:11:00.0000] <sicking>
Hixie: just so that i answer the right question. In the email about how to use the boolean property I am proposing for websockets, are you asking how you use this in general (i.e. does the question also apply to .binaryType), or how you use my proposed property specifically?

[19:34:00.0000] <gsnedders>
Philip`: (No, it's just CPU-time iterating over the tree and mutating it mostly. Well, that and parsing/serializing.)

[23:32:00.0000] <MikeSmith>
interesting to see Guha posting to the whatwg list

[23:53:00.0000] <othermaciej>
hey MikeSmith

[23:53:01.0000] <MikeSmith>
hey man

[23:56:00.0000] <othermaciej>
how are things?

[00:09:00.0000] <JonathanNeal>
word

[00:22:00.0000] <MikeSmith>
othermaciej: things is OK. working on my inbox. e-mail is a curse

[00:23:00.0000] <othermaciej>
MikeSmith: I feel a lot better now that I had a valium and half a bottle of wine

[00:24:00.0000] <MikeSmith>
heh

[00:24:01.0000] <Hixie>
sicking: i am asking how you expect the script code to look if not all text messages are guaranteed to be just strings

[00:25:00.0000] <MikeSmith>
othermaciej: if I lived in CA I would medicate with more than valium

[00:25:01.0000] <othermaciej>
damn, I should get a prescription

[00:26:00.0000] <sicking>
Hixie: once you know that the next message is going to contain something which you want to store as a blob, set the .getAsBlob to true, wait for onmessage, set it back to false

[00:26:01.0000] <sicking>
Hixie: I don't see any difference between binary and textual data

[00:26:02.0000] <Hixie>
sicking: that seems very brittle.

[00:26:03.0000] <sicking>
Hixie: after all, text data is just a special case of binary data

[00:26:04.0000] <sicking>
Hixie: how so?

[00:27:00.0000] <Hixie>
sicking: the difference is that with doing this only for binary, you can just always use text frames as the frame that warns you what you're expecting next

[00:27:01.0000] <sicking>
Hixie: that only works if the other side is listening for that

[00:27:02.0000] <Hixie>
sicking: ?

[00:28:00.0000] <sicking>
Hixie: that only works if the other side listens for messages containing whatever it is that you're putting in your text message that tells it to put the .binaryType back

[00:28:01.0000] <sicking>
Hixie: i don't see why that is less brittle

[00:28:02.0000] <MikeSmith>
othermaciej: can get a prescription in ten minutes from the doctor office right next to the dispensary. you got enough stress to merit one

[00:29:00.0000] <sicking>
Hixie: i'm still not sure what code you're worried about people are going to write that will break

[00:29:01.0000] <MikeSmith>
JonathanNeal: hi ho

[00:29:02.0000] <sicking>
Hixie: so i'm not sure why you think it's brittle

[00:29:03.0000] <Hixie>
sicking: if your protocol is normally text frames, except with a few binary frames like "here's the user's profile pic" (want as blob) or "here's the game map" (want as arraybuffer) then you just wait for the message that warns you the next message is a profile pic or game map, and set binaryType accordingly

[00:30:00.0000] <Hixie>
sicking: and if the server burps and says "here's a profile pic" and never sends it, or "here's a game map" and sends two, it's not a big deal, because you'll "resync" with the next text message

[00:30:01.0000] <sicking>
Hixie: what's to say that people will want to use text frames for the "normal" messages?

[00:30:02.0000] <Hixie>
sicking: if they're using only binary frames then binaryType is doomed just like what you're proposing

[00:31:00.0000] <sicking>
Hixie: if that happens it seems like you have pretty bad problems. Whatever state machine is used on the client is bound to break

[00:31:01.0000] <sicking>
Hixie: how do you mean?

[00:31:02.0000] <sicking>
"doomed just like what you're proposing"?

[00:32:00.0000] <Hixie>
sicking: you can make it quite resistent if the protocol uses text frames for state messages and that doesn't interact with binaryType, since you always get the text frames, they are never hidden in blobs or whatnot

[00:32:01.0000] <Hixie>
sicking: i mean brittle

[00:32:02.0000] <Hixie>
sicking: easy to get out of sync if you have the slightest bug

[00:32:03.0000] <sicking>
Hixie: one option is to make the flag "i want the next frame to be a blob, and only the next frame", rather than "I want all following frames to be blobs". I don't know if that addresses your concern though as I still don't understand it

[00:33:00.0000] <Hixie>
sicking: send two profile pics in a row instead of warning frame, profile pic frame, warning frame, profile pic frame, and now you're off by one on the receiving side and you'll treat every profile pic as a control message and every control message as a profile pic (or whatever) and get royally confused

[00:33:01.0000] <othermaciej>
MikeSmith: you seem to know a lot about this topic

[00:33:02.0000] <sicking>
Hixie: that seems to be the case even if you aren't using blobs at all

[00:33:03.0000] <Hixie>
sicking: yes, that would address my concern, but it wouldn't make the api simpler

[00:33:04.0000] <MikeSmith>
othermaciej: I read about it on Wikipedia

[00:34:00.0000] <Hixie>
sicking: if you're using text frames for control then you can't get out of sync: you'll always get the control frames, even if the binary frames are messed up

[00:34:01.0000] <Hixie>
sicking: btw, converting a string to blob doesn't seem hugely useful. you'd have to specify an encoding, or assume utf-8; it wouldn't give you anything that you couldn't get just by having the server send you the text in a binary blob

[00:35:00.0000] <sicking>
Hixie: why wouldn't you end up putting the control-string as profile picture and then try to read control data out of the binary profile picture?

[00:35:01.0000] <Hixie>
sicking: what?

[00:36:00.0000] <sicking>
Hixie: if the state machine on the server and on the client get out of sync, why wouldn't it be a jumble no matter what?

[00:36:01.0000] <Hixie>
sicking: you don't need a state machine if the text frames are control

[00:36:02.0000] <Hixie>
sicking: every text frame always is a control frame

[00:36:03.0000] <sicking>
Hixie: that seems to be entirely up to the page

[00:37:00.0000] <Hixie>
sicking: sure

[00:37:01.0000] <Hixie>
sicking: it's impossible if you do it your way though

[00:37:02.0000] <sicking>
Hixie: what is impossible?

[00:37:03.0000] <Hixie>
having a system that always resets with a text frame

[00:38:00.0000] <sicking>
Hixie: no, you just always reset on the next frame

[00:38:01.0000] <sicking>
that seems even simpler

[00:39:00.0000] <Hixie>
doesn't that mean that we completely lose the entire point of the feature from the browser's perspective? i mean, if it keeps getting reset there's no way for the browser to know ahead of time what to do with incoming data

[00:39:01.0000] <JonathanNeal>
MikeSmith: hi ho back :D

[00:40:00.0000] <sicking>
well, you don't reset if you know that the next frame is something you want as a blob

[00:41:00.0000] <sicking>
Hixie: i think i still need to see some sort of code to fully understand the type of bugs you are concerned about. I'm a little bit guessing in the dark here it feels like

[00:45:00.0000] <zewt>
telling the browser what to do with a message before you have it seems like it would be hard to pipeline; seems like it'd make more sense for each message to have a text (or json, or whatever; an HTTP-header-analog) part at the beginning; the browser calls a callback when it receives it, asking what to do with the "body" of the message

[00:47:00.0000] <yuhong>
"It would be much easier to do if you guys would simply say when you couldn't implement the spec as written."

[00:48:00.0000] <yuhong>
Well, you see, most of the differences between the modes are related to *CSS*, not HTML>

[00:48:01.0000] <yuhong>
Well, you see, most of the differences between the modes are related to *CSS*, not HTML.

[00:48:02.0000] <yuhong>
If you hasn't guessed, this is from :http://lists.w3.org/Archives/Public/public-html/2007Apr/0637.html

[00:52:00.0000] <Hixie>
zewt: by the time you've received the message it's too late. even doing it on the previous message is probably too late, really.

[00:54:00.0000] <sicking>
Hixie: the more I think about it, the more I like the idea of having an automatically resetting property. As you pointed out, blobs are mostly useful if you aren't going to touch all of the data right away anyway which is likely the exception

[00:55:00.0000] <Hixie>
http://damowmow.com/playground/demos/websocket/ideas/001.txt

[00:55:01.0000] <Hixie>
with some protocols, everything will need to be treated as blob

[00:55:02.0000] <sicking>
Hixie: that goes even if we go for supporting blobs for textual data or not

[00:55:03.0000] <Hixie>
e.g. if you're using WebSocket to populate an image cache in IndexDB

[00:55:04.0000] <Hixie>
or to download samples for sound effects

[00:56:00.0000] <Hixie>
or whatnot

[00:56:01.0000] <Hixie>
there's all kinds of cases where you only want binary data as blobs

[00:56:02.0000] <Hixie>
it would be a perf disaster if the UA always treated those as array buffer until the last minute

[00:56:03.0000] <sicking>
Hixie: so do you expect that to be the common case, or a rare case? It's still supported to get all as blobs, you just set the property in every onmessage.

[00:56:04.0000] <Hixie>
i have no data on which is likely to be more common, but i expect that all array buffer, all blob, and highly mixed are going to all be common

[00:56:05.0000] <sicking>
Hixie: from an implementation point of view, switching from in-memory to blob is the nice way of switching anyway

[00:57:00.0000] <zewt>
Hixie: you don't need the whole message, just a header; while the browser is passing the header to a script and waiting for a response, the rest of the message is just buffering in the TCP stack

[00:57:01.0000] <sicking>
Hixie: most likely that's what you'll end up doing anyway since the socket layer will keep the data in memory until it can be sent to the main thread

[00:57:02.0000] <Hixie>
if you can switch from in-memory to blob, we should just expose both as getters (and you get whichever you call first)

[00:57:03.0000] <zewt>
of course, that requires the protocol to have separate header/body data, like HTTP, which this protocol may not have

[00:57:04.0000] <yuhong>
Hixie: Why wasn't full SGML DOCTYPE parsing (one that do not consider > as the end of the declaration regardless of whether it is inside []) made it into HTML5?

[00:57:05.0000] <Hixie>
if you receive a GB frame, you almost certainly want the network layer to send it straight to disk

[00:57:06.0000] <sicking>
Hixie: it's not a matter of what can be implemented. It's what can be implemented efficently

[00:57:07.0000] <yuhong>
Hixie: Old Mozilla supported it.

[00:58:00.0000] <Hixie>
yuhong: what's the use case?

[00:58:01.0000] <Hixie>
sicking: i need to head to bed, but happy to continue this on the thread.

[00:58:02.0000] <yuhong>
Hixie: Of course, since HTML5 is not based on SGML, it would be silly for it to have any meaning.

[00:58:03.0000] <sicking>
Hixie: sounds good

[00:58:04.0000] <Hixie>
ttyl

[00:59:00.0000] <yuhong>
Hixie: BTW, on SGML comments, Arjun Ray complained about the "incorrect" parsing long before 1999.

[01:00:00.0000] <yuhong>
Arjun has an old test page with the HTML 2.0 DOCTYPE.

[02:28:00.0000] <MikeSmith>
Hixie: I think in the source for the the W3C version of the spec, you're missing closing brace for the checkFeedbackForm(form) function

[02:28:01.0000] <MikeSmith>
unless it's caused by some edit I made to the WD

[02:29:00.0000] <MikeSmith>
anyway, I'm fixing it in the TR LCWD copy of the spec

[03:08:00.0000] <Ms2ger>
/me blames MikeSmith 


2011-05-29
[20:39:00.0000] <mrbean>
Hi, I have two floated divs with border, when I unfloat one, the border dissapears. What's going on?  I'm using 4.01 strict.

[20:45:00.0000] <erlehmann>
mrbean, which browser?

[20:45:01.0000] <erlehmann>
show source

[20:45:02.0000] <mrbean>
firefox 4.0.1

[20:46:00.0000] <mrbean>
Source: http://pastebin.com/VjCUm4wz

[20:47:00.0000] <mrbean>
the second div has no border.

[20:48:00.0000] <mrbean>
Can't see it either in IE9.

[20:52:00.0000] <tomasf>
mrbean: the borders of those divs end up on top of eachother, so you only see one

[20:55:00.0000] <mrbean>
I see the second div under the first, they don't overlap.

[20:58:00.0000] <tomasf>
try changing the size of one of them, and you'll see what I mean

[21:00:00.0000] <mrbean>
ok

[21:00:01.0000] <mrbean>
wow, you're right. i can see both.

[21:01:00.0000] <mrbean>
so htey overlapped but the content appeared below the border.

[21:01:01.0000] <mrbean>
weird.

[21:03:00.0000] <mrbean>
thank you

[07:38:00.0000] <espadrine>
Hixie: the EcmaScript committee is currently discussing the possible addition of a new script-related tag to handle backward-compatible breaks in the language.

[07:40:00.0000] <espadrine>
Hixie: something like <script-if type="application/ecmascript;version=6">

[07:40:01.0000] <espadrine>
// new.js inline-exanded here

[07:40:02.0000] <espadrine>
</script-if else>

[07:40:03.0000] <espadrine>
<script ...>

[07:40:04.0000] <espadrine>
</script>

[07:40:05.0000] <espadrine>
</script-if end>

[07:41:00.0000] <espadrine>
I believe it needs discussing with them.

[07:45:00.0000] <Philip`>
Is that a serious proposal?

[07:46:00.0000] <Dashiva>
I thought everyone was trying to move _away_ from inline script

[07:47:00.0000] <shichuan>
looks ugly

[07:47:01.0000] <erlehmann>
also, they already have stuff like use strict

[07:48:00.0000] <Dashiva>
Could simply add another "use if-less-than 6" to old.js

[07:49:00.0000] <Philip`>
If people have to write both new.js and old.js, why don't they just write old.js and always use that and be done with it?

[07:51:00.0000] <Dashiva>
Maybe new.js is faster

[07:53:00.0000] <Philip`>
/me wonders if the plan is to break compatibility in order to replicate the massive success of Python 3.0

[07:54:00.0000] <espadrine>
https://mail.mozilla.org/pipermail/es-discuss/2011-May/014810.html

[07:56:00.0000] <Philip`>
I think I kind of prefer syntax that is possible to represent with the DOM

[07:57:00.0000] <Dashiva>
"We discussed generating script tags via document.write conditioned by object detection and the like"

[07:57:01.0000] <Dashiva>
In the follow-up email

[07:58:00.0000] <Philip`>
Oh, that'd surely be a much better solution

[07:58:01.0000] <erlehmann>
this is weird shit

[07:59:00.0000] <Ms2ger>
Presumably, you would need <script-if type="application/ecmascript;version=6"><!-- code -->...

[07:59:01.0000] <Ms2ger>
That's what I missed most from the nineties

[07:59:02.0000] <Dashiva>
Are we going to need CDATA guards as well then?

[08:00:00.0000] <Philip`>
I suggest putting it all inside a <style> element, because that'll hide the text content from obsolete browsers and it'll indicate that you're selecting different styles of scripting language

[08:01:00.0000] <Philip`>
Dashiva: No, we're just going to drop XHTML support entirely, either via document.write or non-DOM structures

[08:01:01.0000] <espadrine>
Mostly, ES.next includes new ways to monkey-patch with "proxies", and new keywords like "let" and "const"

[08:01:02.0000] <espadrine>
http://wiki.ecmascript.org/doku.php?id=harmony:proposals

[08:02:00.0000] <Dashiva>
Philip`: Nothing that can't be solved with sufficient nesting

[08:03:00.0000] <Dashiva>
<script-cond><script-if v6>...</script-if><script-elif v5>...</script-elif><script-else>...</script-else></script-cond>

[08:03:01.0000] <Dashiva>
(Quiz: What happens if script-elif is before script-if in DOM order)

[08:04:00.0000] <Ms2ger>
Dashiva, easy, implementation-defined

[08:05:00.0000] <Ms2ger>
I would suggest <!--[if es 6]><script></script><![endif]-->

[08:05:01.0000] <AryehGregor>
/me sees <http://wiki.ecmascript.org/doku.php?id=harmony:typeof_null>, yay for back-compat?

[08:06:00.0000] <Dashiva>
<IE> Vindication at last!

[08:06:01.0000] <Ms2ger>
AryehGregor, no, this is like XHTML2, we don't need back-compat anymore

[08:07:00.0000] <AryehGregor>
Ms2ger, ah, good to know.

[08:08:00.0000] <AryehGregor>
The person who wrote that page seems to be Brendan Eich, though.  Wasn't XHTML2 the product of non-browser-affiliated people?

[08:09:00.0000] <Dashiva>
I was hoping the non-compat efforts could be redirected to Dash

[08:09:01.0000] <Dashiva>
AryehGregor: Brandan isn't necessarily what you would consider a "browser guy"

[08:09:02.0000] <Ms2ger>
Well, that's the bigger problem, this might actually get implemented

[08:10:00.0000] <AryehGregor>
With a mode switch?

[08:10:01.0000] <AryehGregor>
Sigh.

[08:10:02.0000] <espadrine>
Brendan Eich already did implement some of ES.next in Firefox

[11:12:00.0000] <mitnavn>
What's the consensus on wrapping a page's content in a section, separate from page header, nav and footer?

[11:17:00.0000] <Ms2ger>
A section very rarely makes sense if there's only one

[12:07:00.0000] <yuhong>
I'd just use the type attribute.

[12:07:01.0000] <yuhong>
As for else-if, how about adding a new attribute which old browsers will ignore?

[12:08:00.0000] <yuhong>
Most browsers already support the type attribute and will ignore scripts with unknown values.

[12:09:00.0000] <Ms2ger>
I believe you miss the point

[12:37:00.0000] <The_8472>
<espadrine> Mostly, ES.next includes new ways to monkey-patch with "proxies", and new keywords like "let" and "const" <- huh? replacing/intercepting methods at runtime is quite easy already

[12:38:00.0000] <The_8472>
or do you mean something being called when a property/method is not present?

[12:42:00.0000] <Philip`>
The_8472: You can intercept unknown ones, and also enumeration and 'in' and 'delete' and stuff, I think

[12:43:00.0000] <The_8472>
with which ecmascript version?

[12:46:00.0000] <Philip`>
In http://wiki.ecmascript.org/doku.php?id=harmony:proxies or wherever they're documenting the new stuff

[12:50:00.0000] <The_8472>
the proxy-api is a quite verbose. ruby's missing_method and handle_method or similar would seem to be easier to use in most cases

[12:51:00.0000] <The_8472>
ah

[12:51:01.0000] <The_8472>
most of them are optional

[12:51:02.0000] <The_8472>
nvm then

[13:14:00.0000] <AryehGregor>
This netbook is stunningly slow.

[13:14:01.0000] <AryehGregor>
Like it's taking a couple of minutes to log in a user.

[14:29:00.0000] <Hixie>
espadrine: version-driven conditionals are an antipattern on the web, because implementations don't implement versions atomically

[14:29:01.0000] <Hixie>
espadrine: better to design things to be backwards compatible with graceful fallback

[16:29:00.0000] <yuhong>
<Hixie> espadrine: version-driven conditionals are an antipattern on the web, because implementations don't implement versions atomically

[16:30:00.0000] <yuhong>
Yea, anyone remember IE6 vs IE7 vs IE8 vs IE9 "standards" mode and X-UA-Compatible?

[16:30:01.0000] <AryehGregor>
That's a separate issue.

[16:30:02.0000] <AryehGregor>
There you're talking about versions of the browser, not the standard.

[16:31:00.0000] <AryehGregor>
IE's X-UA-Compatible does make sense and can be useful, although whether it's ultimately a good idea is debatable.

[16:31:01.0000] <AryehGregor>
In contrast, asking whether a browser implements a particular version of a spec is almost always useless, because browsers don't implement specs completely all at once.

[16:32:00.0000] <AryehGregor>
They implement pieces over time, plus the spec changes over time.

[16:32:01.0000] <yuhong>
I wonder what if IE9 defaulted to IE8 standards mode for the HTML 4.01/XHTML 1.0 DOCTYPEs.

[16:32:02.0000] <_bga>
its like dll version

[16:32:03.0000] <AryehGregor>
So you want to know whether it supports the piece you're trying to use, not whether it supports the whole standard.

[16:33:00.0000] <AryehGregor>
yuhong, why would they want to do that?  The whole point of IE9 standards mode is that pages written for other browsers should work in IE9 without much modification, ideally without any modification.

[16:33:01.0000] <AryehGregor>
IE8's JavaScript support is such that no nontrivial JS written for other browsers will work in IE8.

[16:34:00.0000] <AryehGregor>
Which is not the case for IE9.  I don't know how compatible it is exactly, but I know I've had to make basically no IE9-specific changes to the large complicated JS tests and so on I've been writing lately.

[16:34:01.0000] <AryehGregor>
And where I have, it's mostly in cases where the feature wasn't specified to start with (i.e., execCommand() or Selection.extend()).

[16:35:00.0000] <AryehGregor>
Although there are some exceptions.  Like nodes that have a null parent but non-null nextSibling . . .

[16:41:00.0000] <yuhong>
Good point, this reminds me that most of the differences between IE7 and IE8 standards mode has to do with CSS.

[16:42:00.0000] <yuhong>
Which also reminds me that IE7 standard mode was mostly hacks on top of IE6 standards mode, while IE8 standards mode seems like a rewrite.

[16:45:00.0000] <aho>
IE7 = IE6 + png, background-attachment:fixed, + and > combinators (buggy), attribute selectors (buggy), and uhm... that's about it

[16:45:01.0000] <aho>
they also fixed some bugs and added a few new ones

[16:46:00.0000] <aho>
IE8 on the other hand is almost usable (if you aren't asking for too much)

[16:48:00.0000] <aho>
IE6+7 are almost extinct in germany :)

[16:48:01.0000] <aho>
they got about 3% combined

[16:48:02.0000] <jcranmer>
my old workplace still uses IE 6

[16:49:00.0000] <yuhong>
<aho> they also fixed some bugs and added a few new ones

[16:49:01.0000] <yuhong>
What really caught me was the similarities of the bugs.

[16:49:02.0000] <aho>
yea, IE6+/ are very similar

[16:50:00.0000] <aho>
*7

[16:51:00.0000] <aho>
they really only patched some things and they did a pretty bad job at it

[16:52:00.0000] <yuhong>
While IE8

[16:52:01.0000] <yuhong>
While IE8's CSS has a few bugs, most of them are not even close to similar to IE7's CSS bugs.

[16:54:00.0000] <aho>
CSS 1.0 does indeed work pretty well with IE8

[16:54:01.0000] <aho>
about damn time, i'd say :>

[16:54:02.0000] <gsnedders>
AryehGregor: IE9 still has issues with browser-sniffing assuming IE is broken.

[16:54:03.0000] <yuhong>
But that is the website

[16:54:04.0000] <yuhong>
But that is the website's fault, of course.

[16:54:05.0000] <zewt>
i'm not sure that's IE9 having issues :P

[16:55:00.0000] <gsnedders>
No, but people blame the browser if a site doesn't work. Same issue with Opera going down IE codepath which happens on a number of sites…

[16:56:00.0000] <zewt>
still doesn't mean it's the browser having issues

[16:56:01.0000] <yuhong>
Fortunately IE8 and later has compatiblity mode.

[16:56:02.0000] <yuhong>
Which emulates IE7.

[16:57:00.0000] <gsnedders>
zewt: Ultimately in some cases if it is a major site then you have a hard choice as a browser vendor, whether to monkey-patch it in the browser.

[16:57:01.0000] <zewt>
and ... risk breaking things when they fix their site, heh

[16:59:00.0000] <gsnedders>
zewt: Indeed. But when jQuery/Dojo/etc. all have browser sniffing in them, you often have a hard choice to make when fixing spec bugs that break those libraries. Breaking one of those library will break thousands of sites and the amount of evangelism work needed is massive…


2011-05-30
[17:01:00.0000] <yuhong>
gsnedders: That is why tying your site to a specific version of these libraries is bad idea.

[17:02:00.0000] <gsnedders>
yuhong: But when there are backwards incompatible changes often in those libraries…

[17:03:00.0000] <yuhong>
For example, to view this in IE9, I had to manually hack the markup to use the latest jQuery:

[17:03:01.0000] <yuhong>
http://berjon.com/blog/2010/09/bouncy.xhtml

[17:11:00.0000] <yuhong>
AFAIK I think IE6 had OK support for CSS1, and it was released in a time when CSS 2.1 did not exist at all.

[17:11:01.0000] <yuhong>
They introduced DOCTYPE switching in IE6.

[17:12:00.0000] <aho>
background-attachment:fixed from CSS 1.0 was missing

[17:12:01.0000] <aho>
if it weren't for all those bugs, it would have been kinda neat

[17:12:02.0000] <yuhong>
Then IE stagnated for five years, and guess what people did with IE6 in "standards" mode in these five years.

[17:12:03.0000] <aho>
well, to be honest, IE6 was pretty damn good back then

[17:12:04.0000] <aho>
in 2001

[17:12:05.0000] <aho>
:>

[17:13:00.0000] <yuhong>
Leading to X-UA-Compatible.

[17:14:00.0000] <yuhong>
aho: That is why I said *OK* CSS1 support.

[17:17:00.0000] <yuhong>
No browser actually fully complied with CSS 2.0 even today, and CSS 2.1 did not exist back in 2001.

[17:23:00.0000] <gsnedders>
IIRC IE5/Mac introduced DOCTYPE sniffing, not IE6/Win.

[17:24:00.0000] <Yuhong>
<gsnedders> IIRC IE5/Mac introduced DOCTYPE sniffing, not IE6/Win.

[17:24:01.0000] <Yuhong>
Yea, I always wondered why they did not port Tasman to Windows.

[17:24:02.0000] <Yuhong>
BTW.

[17:25:00.0000] <gsnedders>
Yuhong: I believe there was a Windows port.

[17:25:01.0000] <Yuhong>
Where?

[17:26:00.0000] <gsnedders>
Yuhong: There were some unreleased previews of various technologies using it, IIRC

[17:27:00.0000] <Yuhong>
Anyway: http://cwilso.com/2010/04/30/the-ie-plateau-a-history-lesson/#comment-1424

[17:32:00.0000] <Yuhong>
AFAIK it is like the IE7 team used the examples at positioniseverything.net to determine if the bugs has been "fixed".

[17:35:00.0000] <Yuhong>
And CSS is not the only example BTW.  Guess why in IE7 the contents of an object element do not show up in the DOM unless fallback is needed??

[17:35:01.0000] <Yuhong>
Clue

[17:35:02.0000] <Yuhong>
Clue: IE7 introduced proper support for nested object elements?

[17:35:03.0000] <Yuhong>
Clue: IE7 introduced proper support for nested object elements.

[22:09:00.0000] <MikeSmith>
Is there a bugzilla for bugzilla?

[22:10:00.0000] <MikeSmith>
nm

[22:20:00.0000] <othermaciej>
hi MikeSmith

[22:20:01.0000] <othermaciej>
I think there is a bugzillza^2, yeah

[22:20:02.0000] <MikeSmith>
hey hey

[22:22:00.0000] <MikeSmith>
from what I've seen, it seems they are tracked under the "Bugzilla" product in bugzilla.mozilla.org

[22:24:00.0000] <MikeSmith>
I tried searching there for product=Bugzilla bugs there with the word ARIA in the them, but didn't find any

[22:26:00.0000] <MikeSmith>
but in general I'm trying to figure out what changes we'd need to make to the W3C bugzilla UI still to address the specific problems that Gregory has reported

[22:26:01.0000] <MikeSmith>
a few of them have been fixed already by our systems team, but still need to be

[22:46:00.0000] <othermaciej>
MikeSmith: that's a good thing to be looking at

[22:48:00.0000] <MikeSmith>
it may be that the best thing to do would be to port over the templates from http://trace.wisc.edu/bugzilla_wcag/

[22:49:00.0000] <MikeSmith>
which has a UI that's been customized for improved accessibility

[22:50:00.0000] <MikeSmith>
unfortunately, they've disabled account creation on it

[22:50:01.0000] <MikeSmith>
http://trace.wisc.edu/bugzilla_wcag/createaccount.cgi

[22:51:00.0000] <MikeSmith>
so there's no way to go in and look at things like the UI for creating new bugs

[22:54:00.0000] <othermaciej>
hmmm

[22:54:01.0000] <othermaciej>
I think it's important to figure out the key workflows

[22:54:02.0000] <othermaciej>
I figure that includes:

[22:54:03.0000] <othermaciej>
- filing new bug (probably the most important!)

[22:55:00.0000] <othermaciej>
- given a link, read the state of a bug and its comments

[22:55:01.0000] <othermaciej>
- comment on a bug

[22:55:02.0000] <othermaciej>
- register for and be able to read email updates about the bug

[22:55:03.0000] <othermaciej>
and I suppose creating an account it also key

[22:55:04.0000] <othermaciej>
being able to do fancy searches, or to make state changes to bugs, probably not as critical

[22:56:00.0000] <MikeSmith>
yeah

[22:56:01.0000] <MikeSmith>
Steve Faulkner has already sent a message to the maintainer of http://trace.wisc.edu/bugzilla_wcag/ to ask if we could get copies of their templates

[22:57:00.0000] <MikeSmith>
but not heard back yet afaik

[22:57:01.0000] <MikeSmith>
so I guess in the mean time I can ask Gregory if that UI in that instance does in fact have fixes for the problems he's cited

[23:21:00.0000] <othermaciej>
MikeSmith: if I had the time for this, I'd try testing the bugzilla UI with VoiceOver but I don't think I should take on more commitments

[23:21:01.0000] <MikeSmith>
well, I can try that too

[23:22:00.0000] <MikeSmith>
I think Steve Faulkner already has a pretty clear understanding of what the specific problems are

[23:23:00.0000] <othermaciej>
I wonder if I could convince any Apple folks to help

[23:23:01.0000] <othermaciej>
James Craig and Chris Fleizach for instance are super skilled VoiceOver users while I am a newbie

[23:24:00.0000] <MikeSmith>
yeah, it would help if they could make time to try it and then comment at http://www.w3.org/Bugs/Public/show_bug.cgi?id=10525

[23:25:00.0000] <MikeSmith>
and also try looking at a bug page at http://trace.wisc.edu/bugzilla_wcag/ and comparing

[23:25:01.0000] <MikeSmith>
e.g., http://www.w3.org/Bugs/Public/show_bug.cgi?id=10525

[23:25:02.0000] <MikeSmith>
oops

[23:25:03.0000] <MikeSmith>
make that http://trace.wisc.edu/bugzilla_wcag/show_bug.cgi?id=2649

[23:26:00.0000] <MikeSmith>
I don't think we necessarily need to do anything with the bug-entry UI first

[23:26:01.0000] <MikeSmith>
because we have the comments list as an alternative

[23:27:00.0000] <MikeSmith>
but there is no such alternative in place for viewing bugs and commenting on them

[23:27:01.0000] <MikeSmith>
so we should get that part fixed first

[23:28:00.0000] <MikeSmith>
webben also volunteered to help out with making template changes

[23:29:00.0000] <othermaciej>
sounds like a reasonable approach

[23:34:00.0000] <MikeSmith>
I think enabling the e-mail interaction mechanism in the W3C bugzilla would also help

[23:34:01.0000] <MikeSmith>
it's actually not clear to me why we don't have it enabled already

[23:45:00.0000] <othermaciej>
I don't know how the email interaction works

[00:37:00.0000] <zcorpan>
Hixie: why is onerror commented out?

[01:40:00.0000] <hsivonen>
I don't see HTML5 requiring window.open to delay the load event of the opener

[01:40:01.0000] <hsivonen>
it seems to me that in Gecko, window.open delays the load event of the opener

[01:40:02.0000] <hsivonen>
I didn't expect that

[03:59:00.0000] <MikeSmith>
wow, look at the UA string

[03:59:01.0000] <MikeSmith>
http://www.w3.org/Bugs/Public/show_bug.cgi?id=12817

[03:59:02.0000] <MikeSmith>
what the hell is that

[04:00:00.0000] <MikeSmith>
Mozilla/4.0 (compatible; MSIE 8.0; Windows NT 6.0; Trident/4.0;

[04:00:01.0000] <MikeSmith>
SLCC1; .NET CLR 2.0.50727; Media Center PC 5.0; InfoPath.2; .NET CLR 3.5.21022;

[04:00:02.0000] <MikeSmith>
.NET CLR 3.5.30729; OfficeLiveConnector.1.3; OfficeLivePatch.0.0; .NET CLR

[04:00:03.0000] <MikeSmith>
3.0.30729; .NET4.0C; .NET4.0E; MS-RTC LM 8)

[04:00:04.0000] <Ms2ger>
Pretty common on windows

[04:00:05.0000] <MikeSmith>
really?

[04:00:06.0000] <hsivonen>
MikeSmith: yeah

[04:00:07.0000] <hsivonen>
MikeSmith: fortunately, IE9 no longer exposes the junk to HTTP

[04:00:08.0000] <MikeSmith>
what's the point of all of it?

[04:01:00.0000] <MikeSmith>
OK

[04:01:01.0000] <hsivonen>
I believe all that is still in navigator.userAgent even in IE9, though my memory may be failing me

[04:01:02.0000] <hsivonen>
MikeSmith: everyone wants to have a piece of the UA string to proclaim their existence

[04:01:03.0000] <MikeSmith>
heh

[04:02:00.0000] <hsivonen>
I'm in the UA string, therefore, I am. -- Descartes

[04:02:01.0000] <MikeSmith>
:)

[04:02:02.0000] <MikeSmith>
well, in aggregate, it's certainly proclaiming something

[04:02:03.0000] <Ms2ger>
Yes, "HELP"

[04:02:04.0000] <MikeSmith>
yeah, something like that

[04:03:00.0000] <Ms2ger>
(-- John Lennon)

[04:03:01.0000] <MikeSmith>
certainly not proclaiming what they intended

[04:04:00.0000] <MikeSmith>
anyway, I do like bug reports that have phrases such as "threatens to undermine the future"

[04:05:00.0000] <MikeSmith>
though personally I would go with something more like "threatens to destroy the entire fabric of all we hold dear"

[04:05:01.0000] <Ms2ger>
(i.e., XML)

[04:10:00.0000] <MikeSmith>
I wonder what they worshipped before well-formedness became God

[04:11:00.0000] <hsivonen>
MikeSmith: Architectural Forms

[04:11:01.0000] <MikeSmith>
heh

[04:12:00.0000] <MikeSmith>
I think that was always a pretty small cult

[04:12:01.0000] <MikeSmith>
because the initiation rituals were so complicated

[04:12:02.0000] <hsivonen>
Did HyTime use Architectural Forms?

[04:13:00.0000] <MikeSmith>
I think so

[04:13:01.0000] <MikeSmith>
regardless, they were cut out of the same cloth

[04:13:02.0000] <hsivonen>
Architectural Forms is an awesome name, BTW

[04:13:03.0000] <MikeSmith>
should be repurposed for something good

[04:18:00.0000] <Ms2ger>
Using an SGML architecture, documents would instead be required to begin with something like the following processing instruction:

[04:18:01.0000] <Ms2ger>
<?IS10744:arch

[04:18:02.0000] <Ms2ger>
  name="HTML 5.0"

[04:18:03.0000] <Ms2ger>
  public-id="-//W3C//NOTATION HTML 5.0 ARCHITECTURE//EN"

[04:18:04.0000] <Ms2ger>
  dtd-public-id="-//W3C//DTD HTML 5.0//EN"

[04:18:05.0000] <Ms2ger>
  doc-elem-form="HTML"

[04:18:06.0000] <Ms2ger>
>

[04:18:07.0000] <Ms2ger>
Yes, because the doctype wasn't hard enough to remember

[04:58:00.0000] <jgraham>
It should be a CSS property e.g. architectural-form: gothic would add flying buttresses to your <div>, pointed arches to the cop of your columns and put gargoyles around your borders

[04:58:01.0000] <jgraham>
*top

[05:22:00.0000] <MikeSmith>
so given that you use any element to define a command, just by putting an accesskey attribute on it, the stuff near the end of the table at http://www.whatwg.org/specs/web-apps/current-work/multipage/content-models.html#wai-aria would seem to suggest that role= menuitemcheckbox and =menuitem and =menuitemradio should be allowed on any element

[05:22:01.0000] <MikeSmith>
*given that you can use any element

[05:23:00.0000] <MikeSmith>
hsivonen: ↑ true? or no?

[05:25:00.0000] <hsivonen>
/me looks

[05:26:00.0000] <hsivonen>
MikeSmith: not quite

[05:27:00.0000] <MikeSmith>
well, I mean just as far as the schema goes

[05:27:01.0000] <hsivonen>
MikeSmith: first, menuitemcheckbox and menuitemradio aren't allowed, because accesskey on any other element defines a command with the facet "command"

[05:27:02.0000] <MikeSmith>
OK

[05:28:00.0000] <hsivonen>
so role=menuitem is allowed if accesskey is present and if an ancestor is a menu element whose type attribute is in the list state

[05:29:00.0000] <hsivonen>
oh, wait

[05:29:01.0000] <hsivonen>
where does it say that it's OK to make default strong ARIA semantics explicit?

[05:29:02.0000] <karlcow>
http://en.wikipedia.org/wiki/List_of_displays_by_pixel_density

[05:29:03.0000] <hsivonen>
ok in the first paragraph of that section

[05:29:04.0000] <karlcow>
useful page for developers

[05:30:00.0000] <hsivonen>
karlcow: looks like a useful page that probably violates Wikipedia's policies :-(

[05:30:01.0000] <hsivonen>
karlcow: I hope the deletionists don't find it

[05:30:02.0000] <karlcow>
in which ways?

[05:31:00.0000] <hsivonen>
karlcow: Original Research

[05:31:01.0000] <MikeSmith>
hsivonen: yeah, that's how I have been interpreting that first paragraph, at least. Though I do wish it stated that more clearly

[05:34:00.0000] <MikeSmith>
hsivonen: so, to be clear, in the schema it seems I need to allow role=menuitem on every element, then have the assertions code check that any element with role=menuitem has a menu ancestor in the list state?

[05:36:00.0000] <hsivonen>
MikeSmith: yeah, that's probably better than trying to make it a RELAX NG co-occurrence constraint with accesskey

[05:37:00.0000] <MikeSmith>
OK

[05:37:01.0000] <MikeSmith>
yeah, the way I described seems less painful to implement

[05:37:02.0000] <MikeSmith>
slightly

[05:37:03.0000] <MikeSmith>
though still far from being fun

[06:48:00.0000] <zcorpan>
Subject: =?utf-8?Q?=5BBug_12818=5D__New=3A_=C3=90=C2=BE=C3=90?=

[06:48:01.0000] <zcorpan>
 =?utf-8?Q?=C2=B0=C3=90=C2=B2=C3=91=C2=80=C3=90=C2=BF=C3=90?=

[06:48:02.0000] <zcorpan>
 =?utf-8?Q?=C2=BB=C3=91=C2=80_=C3=90=C2=B2=C3=90=C2=B0=C3=90?=

[06:48:03.0000] <zcorpan>
 =?utf-8?Q?=C2=BB=C3=91=C2=80=C3=90=C2=BB=C3=91=C2=80=C3=90?=

[06:48:04.0000] <zcorpan>
 =?utf-8?Q?=C2=B0=C3=90=C2=BF_=C3=90=C2=BE=C3=90=C2=B2=C3=90?=

[06:48:05.0000] <zcorpan>
 =?utf-8?Q?=C2=BB=C3=90=C2=B0=C3=91=C2=80=C3=90=C2=BF=C3=90?=

[06:48:06.0000] <zcorpan>
 =?utf-8?Q?=C2=BB=C3=90=C2=B2=C3=90=C2=BA=C3=91=C2=80_=C3=90?=

[06:48:07.0000] <zcorpan>
 =?utf-8?Q?=C2=BB=C3=90=C2=BA=C3=91=C2=80=C3=90=C2=BF=C3=90?=

[06:48:08.0000] <zcorpan>
 =?utf-8?Q?=C2=BB=C3=90=C2=BE=C3=91=C2=83=C3=90=C2=BA?=

[06:48:09.0000] <zcorpan>
gotta love encodings

[06:50:00.0000] <Philip`>
According to Google, it translates into English as "oavrplr valrlrap ovlarplvkr lkrplouk"

[06:51:00.0000] <zcorpan>
which in turn is detected as Danish

[06:57:00.0000] <Workshiva>
Wait what

[07:04:00.0000] <gsnedders>
It's only Document that HTML5 says you should just have a single impl of for HTML, SVG, etc.? Not Element?

[07:06:00.0000] <Ms2ger>
gsnedders, right

[07:20:00.0000] <aho>
about 2 months or so someone wrote a nice article about css terminology (property, value, rule block, selector, etc). anyone knows which one i mean?

[07:39:00.0000] <zcorpan>
aren't there lots of old nice css terminology micro articles?

[07:41:00.0000] <miketaylr>
aho: divya wrote one: http://nimbupani.com/css-vocabulary.html

[07:41:01.0000] <aho>
ah

[07:41:02.0000] <aho>
yea

[07:41:03.0000] <aho>
that's the one :D

[07:42:00.0000] <aho>
oh... nov 2010

[07:42:01.0000] <aho>
heh

[07:42:02.0000] <miketaylr>
wow, time flies

[07:42:03.0000] <aho>
well, y'know... waves and ripples... the internet *handwaving*

[07:51:00.0000] <hsivonen>
if last week's report was Shelley's last, does it mean annevk has returned?

[07:54:00.0000] <jgraham>
I… don't think so

[07:55:00.0000] <zcorpan>
who'll step in and write the weekly?

[07:55:01.0000] <jgraham>
twitter suggests Bolivia

[08:10:00.0000] <AryehGregor>
gsnedders, IE9 has massive compatibility lists to solve the browser-sniffing problem, and it seems to work pretty well.  Doubtless it fails on the long tail of sites, but it seems to be enough that compatibility isn't a major liability in practice.

[08:11:00.0000] <AryehGregor>
Or at least, I haven't heard anyone say compatibility is a major liability of IE9 in practice.

[08:11:01.0000] <AryehGregor>
I haven't used it that much myself.

[08:11:02.0000] <gsnedders>
AryehGregor: Yeah, but just switching to another rendering mode isn't a solution that works well for other browsers, really.

[08:12:00.0000] <AryehGregor>
Other browsers don't need such a drastic solution, since they worked pretty similarly to the standards to start with.

[08:13:00.0000] <AryehGregor>
They can mostly get by with minor case-by-case hacks plus some evangelism.

[08:13:01.0000] <gsnedders>
AryehGregor: There are plenty of sites with sniffing like // is IE or Opera, go down IE code-path

[08:13:02.0000] <gsnedders>
AryehGregor: Esp. those forking on stuff like window.attachEvent

[08:13:03.0000] <AryehGregor>
Yeah, that's because Opera made the mistake of working like IE in a lot of cases instead of Firefox.

[08:13:04.0000] <gsnedders>
AryehGregor: Where Opera breaks if you drop window.attachEvent

[08:13:05.0000] <gsnedders>
AryehGregor: It's hard to work like Firefox when Firefox didn't yet exist. :P

[08:13:06.0000] <AryehGregor>
Well, okay.

[08:13:07.0000] <gsnedders>
(And Gecko in general pretty much didn't exist at the time)

[08:14:00.0000] <AryehGregor>
I was thinking more recently.

[08:14:01.0000] <AryehGregor>
Like, last ten years.

[08:14:02.0000] <gsnedders>
We haven't implemented IE stuff like that in a *long* time.

[08:14:03.0000] <jgraham>
I tend to agree, but it wasn't clearly the wrong choice at the time

[08:14:04.0000] <gsnedders>
Ten years ago was when IE was at its peak, and when we implemented a lot of that stuff.

[08:15:00.0000] <AryehGregor>
Yeah, at the time it was probably smart to follow IE.

[08:16:00.0000] <AryehGregor>
Gecko did too, for that matter, in lots of ways.

[08:30:00.0000] <hsivonen>
AryehGregor: FWIW, I'm very glad we don't have compat lists in Gecko. If we had, I'm pretty sure I would have been required to implement HTML5-compliant script loading in addition to the old code path with a compat list switch

[08:31:00.0000] <hsivonen>
AryehGregor: but since we don't have that capability to begin with, we just require sites to get their sniffing act together if they want to continue working

[08:31:01.0000] <hsivonen>
though some sites have more trouble than other getting their act together: https://bugzilla.mozilla.org/show_bug.cgi?id=660282#c6

[08:32:00.0000] <hsivonen>
*others

[08:34:00.0000] <smaug____>
gsnedders: just curious, has Opera started to drop support for various IEisms ?

[08:34:01.0000] <Ms2ger>
I remember attempts, at least

[08:34:02.0000] <gsnedders>
hsivonen: How do you deal with major regional sites in countries where you want market-share but where you don't have the marketshare to make them actually fix their behaviour?

[08:35:00.0000] <gsnedders>
smaug____: Some stuff. Other stuff has been tried and then broken more than it fixed.

[08:35:01.0000] <hsivonen>
gsnedders: we don't deal as far as I know

[08:35:02.0000] <gsnedders>
(e.g., the window.attachEvent example above)

[08:35:03.0000] <Ms2ger>
gsnedders, by having market share ;)

[08:35:04.0000] <hsivonen>
gsnedders: except for stuff like keeping heuristic detectors working for Japanese

[08:36:00.0000] <gsnedders>
There have certainly been cases where we've had to make a choice between aligning with other browsers or keeping major sites working that are likely to not change.

[08:36:01.0000] <gsnedders>
At least not change quickly.

[08:37:00.0000] <hsivonen>
gsnedders: Firefox 4 fail big time (crashes) with a Hungarian ad provider, but even that wasn't handled in a special way (i.e. no out-of-cycle release or anything like that)

[08:38:00.0000] <hsivonen>
*fails

[08:38:01.0000] <hsivonen>
/me wonders if there's something wrong with my s key

[08:39:00.0000] <gsnedders>
hsivonen: Was that found after release, or simply just considered low enough priority of not block release?

[08:40:00.0000] <hsivonen>
gsnedders: found before release. importance seen and cause understood only after release

[08:54:00.0000] <gsnedders>
Oh yay! CORE-840 fixed, which fixes ~150 CSS 2.1 test suite failures.

[08:54:01.0000] <gsnedders>
(Outline on empty element is not drawn around content)

[08:55:00.0000] <gsnedders>
Yay interop!

[08:57:00.0000] <zcorpan>
https://hacks.mozilla.org/2011/05/aurora-6-is-here/ - i hope they didn't actually implement <event-source>

[08:57:01.0000] <jgraham>
Isn't that the 150 tests Microsoft submitted that were like outline:blue; outline:red; outline:pretty-much-ever-colour;?

[08:58:00.0000] <gsnedders>
jgraham: Well, yes. But that sounds like a lot of the CSS 2.1 test-suite. :P

[08:59:00.0000] <miketaylr>
zcorpan: O_o

[08:59:01.0000] <jgraham>
gsnedders: So when you said "Yay interop!" what you meant is "Yay pointless tests!"

[08:59:02.0000] <jgraham>
zcorpan: Where does it say <event-source>?

[09:00:00.0000] <miketaylr>
https://gist.github.com/995177

[09:00:01.0000] <miketaylr>
(which is embedded)

[09:00:02.0000] <zcorpan>
jgraham: in the example

[09:04:00.0000] <jgraham>
Oooh so it does

[09:04:01.0000] <Ms2ger>
We didn't

[09:08:00.0000] <hsivonen>
Ms2ger: I don't see anything about <event-source> in the code that landed. What's the Hacks article talking about?

[09:09:00.0000] <Ms2ger>
No idea

[09:10:00.0000] <zcorpan>
prolly ripped an example from wikipedia or something without checking whether it was up to date

[09:12:00.0000] <zcorpan>
anyone know what happened to websocket.onerror?

[09:13:00.0000] <jgraham>
I thought the IETF had eliminated all error from the websocket spec

[09:13:01.0000] <zcorpan>
well yes

[09:14:00.0000] <Ms2ger>
It's being fixed

[09:15:00.0000] <zcorpan>
what is?

[09:15:01.0000] <Ms2ger>
The example

[09:15:02.0000] <zcorpan>
oh

[09:15:03.0000] <Ms2ger>
I don't put any hope in the IETF fixing something

[09:17:00.0000] <hsivonen>
the example is gone now

[10:51:00.0000] <AryehGregor>
hsivonen, Firefox probably has more freedom here than IE, though, since IE is subject to vastly more browser-sniffing than Firefox.  Also, the difference between IE9 standards and IE8 standards, for instance, or IE7 standards and IE8 standards, is drastically greater than the difference between any two consecutive Firefox versions.

[10:52:00.0000] <AryehGregor>
Now that IE9 is pretty standards-compliant, IE10 might not need to preserve an IE9 compatibility mode.

[10:52:01.0000] <AryehGregor>
Because it will only be relatively small changes.

[10:54:00.0000] <AryehGregor>
I know of one case where WebKit worked around bad MediaWiki browser-sniffing (added for KHTML in like 2002 or something) with something like "if file is named KHTMLFixes.css, and has exactly the following content, ignore it".  The alternative in that case was to have all MediaWiki sites have dramatically broken appearance on every page, and good luck evangelizing that away.

[10:54:01.0000] <AryehGregor>
Would Firefox really refuse to have some kind of site-specific quirk even in such a case?  Does it really not have any such workarounds?

[10:54:02.0000] <AryehGregor>
(I got the impression WebKit has very, very few like that)

[10:55:00.0000] <Ms2ger>
We don't have any

[10:55:01.0000] <AryehGregor>
Interesting.

[10:55:02.0000] <Ms2ger>
We had one for hotmail briefly, right before we released Fx4, but they asked us to take it out

[10:56:00.0000] <AryehGregor>
Reminds me of how Wine has no app-specific compatibility hacks (or at least didn't used to), while Windows is full of them, but somehow Wine manages to work for lots of programs anyway.  Sometimes when Windows doesn't.

[10:56:01.0000] <jgraham>
To be fair windows works for many more programs than wine

[10:56:02.0000] <Ms2ger>
And Firefox works for many more sites than IE :)

[10:57:00.0000] <Philip`>
Wine users have a much more relaxed definition of "works", too

[10:57:01.0000] <AryehGregor>
Granted.

[10:57:02.0000] <jgraham>
Philip`: "shows the splash screen"?

[10:57:03.0000] <AryehGregor>
Although I think Windows only has shims where it would really mess up the program, not just where it would make it behave a bit weirdly.

[10:57:04.0000] <AryehGregor>
Unless it's really high-profile, maybe, I dunno.

[10:59:00.0000] <AryehGregor>
jgraham, slightly higher than that.  More like: "can use all the basic functionality, possibly with occasional crashes or lots of glitches, and possibly requiring you to go through voodoo magic to install/start it, and possibly requiring you to install some downloaded closed-source DLLs, and possibly requiring you to fiddle with the Wine registry a bunch, and in some cases maybe compile your own Wine with a patch or two applied."

[10:59:01.0000] <AryehGregor>
I'd say Vampire: The Masquerade - Redemption worked in Wine, and even once I got it installed, it was an intricate five-minute procedure to actually start it.

[11:00:00.0000] <AryehGregor>
I had to try several times, because often it would hang.  Then once it started I had to start a new game and then load my save from there, because if I loaded my save directly it didn't work.  And some other steps I've forgotten.

[11:00:01.0000] <jgraham>
AryehGregor: So wine doesn't have any hacks because it expects users to recompile with them included on a case-by-case basis?

[11:00:02.0000] <Ms2ger>
Exactly

[11:00:03.0000] <AryehGregor>
Oh, right, I had to adjust my resolution and run it in windowed mode, instead of running it in fullscreen mode.

[11:00:04.0000] <gsnedders>
AryehGregor: I think all our hacks are done in browser.js

[11:01:00.0000] <AryehGregor>
I got most of the procedure automated using a shell script, though, so it was okay.

[11:01:01.0000] <jgraham>
Stockholm syndrome?

[11:01:02.0000] <AryehGregor>
jgraham, that was an extreme case, usually you don't have to do that.  The one time I saw that was a temporary case where some game was reading some weird info about the video driver and deciding it didn't support it or something, so the hack was just to supply some bogus data to shut it up until Wine was fixed to report it correctly.

[11:03:00.0000] <AryehGregor>
jgraham, no, Stockholm syndrome is the opposite: when people get so used to Windows that they prefer it to Linux and aren't willing to put up with minor inconveniences like this.  :)

[11:03:01.0000] <gsnedders>
To be fair, we did actually make a change that broke old versions of jQuery, and then just having to evanglize every case of that breaking a site.

[11:03:02.0000] <AryehGregor>
Presumably quite old.

[11:04:00.0000] <AryehGregor>
jQuery mostly makes an effort to sniff properly, right?  (Sometimes it's not realistically possible, though, or not worth the effort . . .)

[11:04:01.0000] <AryehGregor>
(I committed at least one feature to MediaWiki which says if (firefox) { do_something_different(); }, and in that specific case I have no apologies.  It was the best solution available.)

[11:05:00.0000] <jgraham>
/me just uses a Mac for things that won't run in Linux, at the expense of occasionally having to put up with its inferior window manager when programming

[11:05:01.0000] <gsnedders>
AryehGregor: In many places it doesn't sniff at all properly, AFAIK

[11:05:02.0000] <jgraham>
And doesn't try to play games that aren't written by Nintendo.

[11:05:03.0000] <Ms2ger>
AryehGregor, which was that?

[11:05:04.0000] <jgraham>
On the intended hardware

[11:06:00.0000] <gsnedders>
Note that we in browser.js have stuff to work-around browser sniffing on major sites like blogger.com where evanglism has proved ineffective.

[11:06:01.0000] <AryehGregor>
Ms2ger, https://bugzilla.mozilla.org/show_bug.cgi?id=516293

[11:07:00.0000] <jgraham>
gsnedders: Yes, Opera has a *ton* of site-specific quirks in the browser.js file

[11:07:01.0000] <AryehGregor>
Ms2ger, http://svn.wikimedia.org/viewvc/mediawiki/trunk/phase3/skins/common/wikibits.js?view=markup#l504

[11:07:02.0000] <AryehGregor>
Slightly better link: http://svn.wikimedia.org/viewvc/mediawiki/trunk/phase3/skins/common/wikibits.js?view=markup#l491

[11:07:03.0000] <jgraham>
So we are not exactly a shining example of purity here

[11:07:04.0000] <Ms2ger>
/me was about to test whether that bug was still present by loading the test in Chrome

[11:08:00.0000] <AryehGregor>
Opera has a lot less clout to get sites to fix themselves than Firefox.

[11:08:01.0000] <gsnedders>
jgraham: My point is we have quite a few cases where all we do is just make ourselves appear (via the navigator object) to be some other browser.

[11:08:02.0000] <jgraham>
gsnedders: Oh. I didn't realise that was your point.

[11:08:03.0000] <jgraham>
Well yeah that is lame

[11:09:00.0000] <Ms2ger>
/me neither

[11:09:01.0000] <jgraham>
There are also a few cases where we work around our own bugs, which is also kinda lame :)

[11:09:02.0000] <Ms2ger>
And we have people saying we should implement a window.opera equivalent

[11:09:03.0000] <jgraham>
(but I expect those fixes tend to be way more shortlived)

[11:10:00.0000] <Ms2ger>
jgraham, seems like your core doesn't get sufficient QA ;)

[11:10:01.0000] <gsnedders>
jgraham: I think there are far more workarounds for workarounds of long-since fixed bugs.

[11:11:00.0000] <jgraham>
Ms2ger: How do you think we know what the bugs are to work around? :)

[11:12:00.0000] <jgraham>
gsnedders: Yes, I imagine there are far more cases where we have to work around a site working around bugs that were fixed in opera 7 :)

[11:13:00.0000] <Ms2ger>
Did you eventually end up removing element.all?

[11:13:01.0000] <gsnedders>
Ms2ger: Removing that broke loads of sites, IIRC.

[11:15:00.0000] <gsnedders>
Ms2ger: Apparently CKEditor relies upon it

[11:16:00.0000] <Ms2ger>
Fun

[11:16:01.0000] <gsnedders>
http://dev.ckeditor.com/browser/CKEditor/trunk/_source/core/dom/element.js#L1238

[11:17:00.0000] <gsnedders>
if ( CKEDITOR.env.ie || CKEDITOR.env.opera )

[11:17:01.0000] <gsnedders>
There are far too many sites and libraries that for some reason throw us down the IE codepath

[11:18:00.0000] <hsivonen>
Ms2ger: the window.opera equivalent in Firefox is called window.netscape for historical reasons

[11:19:00.0000] <hsivonen>
gsnedders: it's quite sad how sites are willfully ignorant about stuff like that in face of well-informed evangelism

[11:20:00.0000] <hsivonen>
gsnedders: for example, when evangelizing a site about their Firefox sniffing, I also mentioned to them that they should proactively get rid of their Opera sniffing so that their code works when Opera implements the spec

[11:20:01.0000] <hsivonen>
and they kept their Opera sniffing anyway

[11:21:00.0000] <gsnedders>
http://dev.ckeditor.com/ticket/6666 is a case of they've known we intend on breaking our behaviour soon for seven months.

[11:25:00.0000] <gsnedders>
AryehGregor: The only browser sniffing (for Opera) in jQuery master now is for jQuery.browser, it's never used to fork internally.

[11:26:00.0000] <AryehGregor>
Cool.

[11:26:01.0000] <AryehGregor>
I remember when I looked at jQuery a while ago I saw a little bit of bad browser-sniffing, but nothing that looked gratuitous.

[11:27:00.0000] <hsivonen>
gsnedders: why does jQuery expose jQuery.browser at all? compat with old versions that used it internally and got used externally?

[11:27:01.0000] <gsnedders>
hsivonen: No idea.

[11:27:02.0000] <AryehGregor>
hsivonen, because authors want to do their own sniffing, and browsers don't make it easy for them?

[11:28:00.0000] <AryehGregor>
I mean, would you prefer they sniff based on stuff like document.all?

[11:29:00.0000] <hsivonen>
AryehGregor: depends on what code they run as the result of sniffing on a case-by-case basis :-)

[11:29:01.0000] <AryehGregor>
Or stuff like: var is_khtml = navigator.vendor == 'KDE' ||

[11:29:02.0000] <AryehGregor>
       ( document.childNodes && !document.all && !navigator.taintEnabled );

[11:29:03.0000] <AryehGregor>
Which is what got MediaWiki's ancient KHTML hack hitting WebKit.

[11:29:04.0000] <AryehGregor>
/me doesn't know what navigator.taintEnabled is, some Gecko-ism?

[11:30:00.0000] <hsivonen>
I was about to ask what taintEnabled is

[11:30:01.0000] <AryehGregor>
hsivonen, I'm not talking about sniffing document.all before using document.all, I'm talking about sniffing document.all and then deciding the browser is IE and supports a bazillion unrelated features that only IE supports.

[11:30:02.0000] <AryehGregor>
If you're going to do that, at least check the UA string properly.

[11:30:03.0000] <AryehGregor>
Using the UA string also means browsers can cloak themselves easily.

[11:30:04.0000] <AryehGregor>
In case the code isn't really browser-specific after all.

[11:31:00.0000] <AryehGregor>
Of course, the UA string has loads of pitfalls too, so your random author is really better off letting jQuery do the UA string parsing for them.

[11:31:01.0000] <gsnedders>
AryehGregor: Try replacing document.all with document.attachEvent and then you have what Opera has fun. Especially when the other code-path relies upon some nonstandard Gecko/WebKit thing…

[11:31:02.0000] <AryehGregor>
Don't be silly, anything in Gecko+WebKit is standard.  It just might not have a spec written yet.

[11:31:03.0000] <AryehGregor>
On the other hand, anything in only IE or IE+Opera is proprietary and evil.

[11:31:04.0000] <AryehGregor>
It stands to reason.

[11:32:00.0000] <AryehGregor>
Until Gecko or WebKit implements it, then it becomes okay.  Like innerHTML, or execCommand().

[11:32:01.0000] <AryehGregor>
Or, um, like 20% of other important web features.

[11:33:00.0000] <Ms2ger>
XHR

[11:34:00.0000] <AryehGregor>
If everyone but WebKit implements something, it's clearly WebKit's fault and WebKit is being stupid for not changing.  If everyone but Gecko implements something that was originally an IE feature (like .innerText), Gecko is nobly resisting the encroachment of Micro$oft's proprietary "features", but might be justified in conceding the fight on this score.

[11:34:01.0000] <AryehGregor>
If everyone but IE implements something, then it goes without saying it's because Microsoft is evil and doesn't want to follow standards.

[11:34:02.0000] <AryehGregor>
This stuff is all obvious, right?

[11:35:00.0000] <Workshiva>
Well, if it's CSS-related I think webkit is always right, even in the case you mentioned

[11:35:01.0000] <gsnedders>
And if Opera doesn't implement something?

[11:35:02.0000] <AryehGregor>
Nobody cares.  Use a normal browser.

[11:35:03.0000] <AryehGregor>
:P

[11:35:04.0000] <Workshiva>
>real browser

[11:35:05.0000] <AryehGregor>
/me accepts Workshiva's correction

[11:35:06.0000] <hsivonen>
AryehGregor: and Chrome-only stuff is axiomatically HTML5

[11:36:00.0000] <AryehGregor>
Mostly, yeah.

[11:36:01.0000] <AryehGregor>
Especially if they intend to probably write a spec for it at some point in the unspecified future.

[11:36:02.0000] <Workshiva>
Axiomatically awesome

[11:36:03.0000] <AryehGregor>
However, any claim by Microsoft to implement HTML5 is a complete joke.  Everyone knows IE doesn't implement HTML5.

[11:37:00.0000] <Workshiva>
Except when it's native HTML5

[11:37:01.0000] <AryehGregor>
Especially for features like drag-and-drop.

[11:37:02.0000] <hsivonen>
Workshiva: "awesome" is reserved for Firefox

[11:39:00.0000] <gsnedders>
AryehGregor: Also, if Firefox implements something new, it's irrelevant because IE won't support it for years.

[11:39:01.0000] <AryehGregor>
gsnedders, no, you're getting confused.  Only losers care about IE.  Everyone worth caring about puts a prominent banner at the top of their page telling all IE users to switch to other browsers.

[11:40:00.0000] <AryehGregor>
Only ignorant, selfish webmasters are fixated on what IE supports.

[11:40:01.0000] <AryehGregor>
Responsible people write code for standards-compliant browsers and write crippled and barely-tested code for IE.

[11:40:02.0000] <AryehGregor>
This is sometimes known as "graceful degradation".

[11:41:00.0000] <hsivonen>
worked for me. Validator.nu's UI had a JS error in IE <= 8 for years

[11:41:01.0000] <hsivonen>
then IE9 came along and fixed it

[11:41:02.0000] <hsivonen>
I had no browser sniffing

[11:41:03.0000] <AryehGregor>
I don't even try to run any of my browser tests in IE8.

[11:41:04.0000] <AryehGregor>
They all fail immediately with cryptic errors.

[11:41:05.0000] <hsivonen>
the main reason why I didn't fix it myself in IE <= 8 was that IE's diagnostics were too terrible to figure out what caused the error

[11:42:00.0000] <AryehGregor>
IE seems to have more cryptic errors than Gecko or WebKit.  I've seen "Unspecified error" too many times.

[11:42:01.0000] <AryehGregor>
Even in IE9.

[11:42:02.0000] <AryehGregor>
IE9 has okay diagnostics.  I prefer WebKit's Web Inspector, but IE9's F12 tools are perfectly serviceable.

[11:42:03.0000] <hsivonen>
AryehGregor: maybe it means that Hixie hasn't written a spec for that stuff yet

[11:42:04.0000] <AryehGregor>
Doesn't help much when a built-in function like Selection.addRange() throws an "Unspecified error." exception under some circumstances.

[11:43:00.0000] <AryehGregor>
But it helps me figure out other bugs, like when nodes have a nextSibling but no parentNode.

[12:31:00.0000] <AryehGregor>
Does Firebug work in Aurora 6?

[12:34:00.0000] <AryehGregor>
Firefox doesn't seem to think Firebug 1.8.0a3 is compatible with Aurora 6.0a2.

[12:34:01.0000] <AryehGregor>
So I guess I don't upgrade it.  :/

[12:37:00.0000] <erlehmann>
what is aurora

[12:37:01.0000] <abarth|gardener>
erlehmann: firefox dev channel

[12:37:02.0000] <AryehGregor>
Firefox dev channel?

[12:38:00.0000] <erlehmann>
ah

[12:38:01.0000] <erlehmann>
thx

[12:39:00.0000] <hsivonen>
regarding zcorpan's adaptive image suggestion, which formats besides interlaced PNG have the property that if you download the first quarter of the file, you can decode the image with halved dimensions?

[12:39:01.0000] <hsivonen>
(JPEG 2000 does *not* have that property, BTW)

[12:40:00.0000] <hsivonen>
(to decode JPEG 2000 with halved dimensions, you have to download half of the data--not a quarter of the data)

[12:41:00.0000] <hsivonen>
(that is, you want halved dimensions with acceptable image quality)

[12:45:00.0000] <Philip`>
Assuming JPEG 2000 is generally sane, doesn't that suggest that half the perceptual information content is necessary for acceptable quality at half the dimensions, and so any similarly efficient lossy format will have the same behaviour?

[13:44:00.0000] <Thomas9000>
can I ask html questions here?

[13:45:00.0000] <Ms2ger>
Sure thing

[13:46:00.0000] <Thomas9000>
I've got a question about the new offline caching in html5. Is there a way to prevent the browser from automatically downloading the resources if cache.manifest has changed and instead do it manually using javascript? So the user can decide if they want to update now or later?

[13:47:00.0000] <Thomas9000>
Got any idea? :)

[15:14:00.0000] <AryehGregor>
/me discovers Google Closure uses execCommand() extensively, nice

[15:17:00.0000] <AryehGregor>
. . . I think?

[15:19:00.0000] <AryehGregor>
No, it seems like it's another one that wrote their own execCommand() implementation.  Oh well.


2011-05-31
[17:35:00.0000] <gsnedders>
Is there any public date for the start of Apple's work on JSC (and what would become WebKit in general)?

[17:37:00.0000] <gsnedders>
Because what sources I can find put it as 2001. Just wondering when the decade anniversery is. :)

[17:38:00.0000] <gsnedders>
08/24/2001 07:24:40 (10 years ago) would appear to be it from SVN

[18:11:00.0000] <bga_>
gsnedders while(foo){ const с = expr }

[18:12:00.0000] <bga_>
logically expr should be assigned to с each time

[18:12:01.0000] <bga_>
but not

[18:12:02.0000] <bga_>
*assigned*, not alloced

[18:13:00.0000] <bga_>
but direct assign c = 1 w/o const keyword - forbided

[18:16:00.0000] <bga_>
hm

[18:17:00.0000] <bga_>
heh fix a = 1; a = 2; _log(a)

[18:17:01.0000] <bga_>
in opera - 2

[18:17:02.0000] <bga_>
in chrome - 1

[18:17:03.0000] <bga_>
s/fix/const/

[18:18:00.0000] <bga_>
in ff - 1

[18:18:01.0000] <bga_>
:(

[20:00:00.0000] <gsnedders>
bga_: Lars Thomas Hansen (of ES4 fame) apparently originally didn't want to implement const as it was non-standard, then site compat started requiring it, so made const a synonym for var, and that seems to have stuck around through the whole engine being rewritten since.

[23:58:00.0000] <hsivonen>
this has nothing to do with HTTP headers, right: http://bugzilla.validator.nu/show_bug.cgi?id=839 ?

[23:59:00.0000] <MikeSmith>
hsivonen: indeed

[00:14:00.0000] <MikeSmith>
hsivonen: fyi, I pulled all your latest changes into the backend for the HTML5 facet of the W3C validator

[00:16:00.0000] <hsivonen>
MikeSmith: cool. any user complaints yet?

[00:16:01.0000] <MikeSmith>
nope

[00:16:02.0000] <MikeSmith>
but I just did it only 15 minutes ago

[01:15:00.0000] <hsivonen>
MikeSmith: I updated the validator code with new meta name registrations. I also replied to the bug report by the pagerank-seo guy.

[01:15:01.0000] <MikeSmith>
OK, saw the checkin

[01:15:02.0000] <MikeSmith>
/me takes a look at bugmail

[01:17:00.0000] <asmodai>
/me is still unsure why nightly (7.0) and aurora (6.0) can't run next to each other even with -no-remote 

[01:18:00.0000] <hsivonen>
asmodai: you need -P with different profiles in addition to -no-remote

[01:18:01.0000] <hsivonen>
e.g. -P aurora -no-remote and -P nightly -no-remote

[01:18:02.0000] <hsivonen>
asmodai: see also https://bugzilla.mozilla.org/show_bug.cgi?id=655667

[01:20:00.0000] <hsivonen>
asmodai: no version of Firefox can deal with two app instances accessing one profile concurrently

[01:20:01.0000] <asmodai>
Well, I have 3 profiles set up when the profile manager pops up

[01:20:02.0000] <asmodai>
every ff I have, 4, aurora, nightly, has -no-remote -P to the command line shortcut

[01:21:00.0000] <asmodai>
and I have 3 different profiles

[01:21:01.0000] <hsivonen>
asmodai: oh. If it doesn't work with different profiles for the two, it's worth filing a bug

[01:24:00.0000] <asmodai>
Double checking everything now, just to make sure I am not mistaken.

[01:25:00.0000] <MikeSmith>
what's cedar?

[01:25:01.0000] <asmodai>
A tree?

[01:26:00.0000] <hsivonen>
MikeSmith: do you mean in the Mozilla context?

[01:26:01.0000] <MikeSmith>
hsivonen: yeah

[01:27:00.0000] <MikeSmith>
just a branch name?

[01:27:01.0000] <hsivonen>
MikeSmith: it's technically a project branch, but it doesn't belong to any particular project

[01:27:02.0000] <MikeSmith>
ah, OK

[01:27:03.0000] <hsivonen>
MikeSmith: it's a place where people can land with less tree watching than in the mozilla-central case

[01:28:00.0000] <MikeSmith>
I see

[01:28:01.0000] <hsivonen>
MikeSmith: and then volkmar or ehsan merges it over from time to time (daily?)

[01:28:02.0000] <MikeSmith>
yeah, I saw some of those checkins and wondered

[01:34:00.0000] <MikeSmith>
hsivonen: btw, if you have a minute, could you please look at http://www.w3.org/Bugs/Public/show_bug.cgi?id=12400

[01:34:01.0000] <MikeSmith>
it's a bug filed against the HTML5 facet of the W3C validator

[01:36:00.0000] <asmodai>
hsivonen: *sigh* Turns out that it had never created a subdir in my profiles directory for the profiles, but used the profiles dir itself. *sigh* Works as intended, pilot error, etc.

[01:40:00.0000] <hsivonen>
MikeSmith: surrounding a combining character in an element results in the page not being fully normalized, so the validator is working as designed

[01:41:00.0000] <hsivonen>
MikeSmith: if the goal is to have the base character and the combining mark render separately, making the combining mark combine with a U+0020 is the right thing to do

[01:41:01.0000] <MikeSmith>
OK

[01:41:02.0000] <hsivonen>
MikeSmith: if the goal is to have the combining mark combine with the base character but style the two parts differently, that's probably something that browsers shouldn't be required to support

[01:41:03.0000] <asmodai>
Interesting how the score on html5test.com is anti-aliased on ff and not on opera

[01:41:04.0000] <hsivonen>
asmodai: on Windows?

[01:41:05.0000] <asmodai>
aye

[01:42:00.0000] <hsivonen>
asmodai: different glyph renderer probably

[01:42:01.0000] <asmodai>
*nods*

[01:42:02.0000] <hsivonen>
Windows has many to choose from

[01:42:03.0000] <asmodai>
All the occurences of that specific font are AA on ff, and jagged on opera

[01:43:00.0000] <asmodai>
Just wonder why our dear friends at Opera would not enable/make use of it.

[04:25:00.0000] <karlcow>
http://www.w3.org/Conferences/WWW4/Papers/190/

[04:25:01.0000] <karlcow>
Using versioning to support collaboration on the WWW

[05:32:00.0000] <zcorpan>
hsivonen: good catch about DOMContentLoaded

[05:33:00.0000] <zcorpan>
hsivonen: i don't see any reason not to

[05:34:00.0000] <hsivonen>
zcorpan: historically, defer scripts run between readyState becoming interactive and DOMContentLoaded firing

[05:34:01.0000] <hsivonen>
zcorpan: dunno if that matters for compat

[05:37:00.0000] <zcorpan>
aha. then it could be a compat problem i guess. although opera doesn't support defer scripts at all yet

[06:09:00.0000] <Workshiva>
karlcow: Based on the bibliography I'm going to guess it's from 1995

[06:10:00.0000] <karlcow>
Worshiva, it is from 1995 indeed WWW4 http://en.wikipedia.org/wiki/World_Wide_Web_Conference

[06:11:00.0000] <karlcow>
document archeology :)

[06:11:01.0000] <karlcow>
danbri has made me curious about http://www.w3.org/History/1992/timbl-floppies/TimBerners-Lee_CERN/hype.tar.Z

[06:12:00.0000] <karlcow>
which contains "gems" too.

[06:14:00.0000] <karlcow>
there is a 1991 paper in ./hype/hypertext/Conferences/HT91/Paper/Paper.html with the title "An Alternative Architecture for Distributed Hypertext"

[06:17:00.0000] <danbri>
lots of fascinating stuff in there

[06:37:00.0000] <MikeSmith>
hsivonen: in the assertions code, when I encounter a tbody element, there's no way I can tell whether that tbody was inserted by the parser, right?

[06:38:00.0000] <Ms2ger>
They all were ;)

[07:16:00.0000] <MikeSmith>
Ms2ger: point taken

[07:18:00.0000] <MikeSmith>
so what I meant was, is that tbody one for which the parser did the 'act as if a start tag token with the tag name "tbody" had been seen' thing

[07:23:00.0000] <hsivonen>
MikeSmith: no way to find out

[07:23:01.0000] <hsivonen>
MikeSmith: why do you want to find out?

[07:23:02.0000] <MikeSmith>
hsivonen: OK, I figured

[07:23:03.0000] <MikeSmith>
hsivonen: for this case:

[07:29:00.0000] <hsivonen>
Ms2ger: the text about the expectation of http://software.hixie.ch/utilities/js/live-dom-viewer/saved/1008 is the wrong way round, right?

[07:29:01.0000] <hsivonen>
Ms2ger: Chrome shows nothing in the frame fwiw

[07:30:00.0000] <Ms2ger>
hsivonen, yes, the tags should be shown

[07:30:01.0000] <Ms2ger>
Sorry for the confusion

[07:30:02.0000] <Ms2ger>
Chrome seems to just use its HTML path

[07:30:03.0000] <Ms2ger>
Try

[07:30:04.0000] <Ms2ger>
  var vismap = "<b>test</b>";

[07:31:00.0000] <hsivonen>
Ms2ger: cool. at least Firefox is in good company with the regression :-)

[07:31:01.0000] <Ms2ger>
Good? ;)

[07:44:00.0000] <MikeSmith>
hsivonen: sorry, meant to paste this:

[07:44:01.0000] <MikeSmith>
<table role="menu"><tr role="presentation"><td role="menuitem"></td></tr></table>

[07:45:00.0000] <MikeSmith>
in the context of whether the validator should report an error for that

[07:45:01.0000] <karlcow>
http://windowsteamblog.com/windows/b/windowssecurity/archive/2011/05/28/combating-social-engineering-tactics-like-cookiejacking-to-stay-safer-online.aspx

[07:46:00.0000] <MikeSmith>
hsivonen: but anyway, it seems to me it should be an error

[07:46:01.0000] <jgraham>
MikeSmith: ARIA conformance depends on whether implied elements were explicitly included or not?

[07:46:02.0000] <jgraham>
/me is not really following

[07:47:00.0000] <MikeSmith>
jgraham: i think it rightly depends on the DOM

[07:48:00.0000] <MikeSmith>
and because there's an implied tbody in that markup instance, and that tbody lacks an appropriate role, it's an error

[07:48:01.0000] <hsivonen>
MikeSmith: whether it should or not shouldn't depend on whether tbody was implied

[07:49:00.0000] <hsivonen>
MikeSmith: I guess that's an error then

[07:49:01.0000] <MikeSmith>
OK, I can see that

[07:51:00.0000] <jgraham>
MikeSmith: OK, as long as it depends on what gets into the final DOM, it all seems sane.

[08:01:00.0000] <AryehGregor>
Could we get rid of implementers⊙lwo?  It only seems to be useful to people who are confused and think anyone actually uses it.

[08:01:01.0000] <hsivonen>
AryehGregor: it's good for confused people to get email responses

[08:02:00.0000] <AryehGregor>
As opposed to whatwg, where more than half a dozen people will actually read it?  (Unless there are hordes of people who subscribed to implementers at some point and just don't post there?)

[08:04:00.0000] <hsivonen>
AryehGregor: well, in this case, I already replied to him in bugzilla and on Twitter

[08:05:00.0000] <AryehGregor>
/me should have read the bug he mentioned before responding

[10:21:00.0000] <gsnedders>
From Dojo: <iframe id="blah" name="blah" src="javascript:'&lt;html&gt&lt;body&gt;&lt;div id=subDiv&gt;&lt;/div&gt;&lt;/body&gt;&lt;/html&gt;'"></iframe>

[10:27:00.0000] <jcranmer>
,,,hello

[10:29:00.0000] <Ms2ger>
jcranmer, hi

[10:30:00.0000] <jcranmer>
sorry

[10:30:01.0000] <jcranmer>
that was lag in my IRC client

[10:30:02.0000] <jcranmer>
I thought I was in a different channel

[12:14:00.0000] <gavin__>
where can I see the "blame" for http://www.whatwg.org/specs/web-apps/current-work/multipage/timers.html#dom-external-addsearchprovider ?

[12:17:00.0000] <gavin>
hmm found http://lists.whatwg.org/pipermail/commit-watchers-whatwg.org/2011/005298.html

[12:21:00.0000] <gavin>
Hixie: what's the reasoning behind the same-origin check for window.external.AddSearchProvider?

[13:01:00.0000] <Hixie>
gavin: it's what browsers do, iirc

[13:01:01.0000] <Hixie>
(from memory, could be wrong)

[13:02:00.0000] <gavin>
Hixie: firefox doesn't

[13:02:01.0000] <gavin>
(that's why I'm asking - wondering if there's reason for me to implement that)

[13:03:00.0000] <gavin>
maybe I can find a chromium bug about it

[13:04:00.0000] <gavin>
http://www.chromium.org/developers/design-documents/chromium-search-provider-js-support mentions the restriction but doesn't mention reasoning

[13:15:00.0000] <MikeSmith>
lord help us

[13:15:01.0000] <Ms2ger>
... the CSSWG is approaching

[13:16:00.0000] <MikeSmith>
a sign of the End Times

[13:40:00.0000] <Hixie>
gavin: firefox didn't seem to implement the api very thoroughly so iirc i paid more attention to the other uas (IE, mainly)

[13:40:01.0000] <Hixie>
gavin: but it may also just have been something that seemed like a good idea at the time

[13:40:02.0000] <Hixie>
gavin: let me look closer

[13:40:03.0000] <gavin>
we implement if fully, though IsSearchProviderInstaller is just a stub

[13:40:04.0000] <Hixie>
gavin: pretty sure the origin check in step 4 there is an IE thing

[13:41:00.0000] <Hixie>
stub != fully :-P

[13:41:01.0000] <gavin>
ok ok :)

[13:42:00.0000] <Hixie>
i can't think of a security reason for not adding search engines from other sites off hand

[13:42:01.0000] <gavin>
is "scriptURL" in http://www.whatwg.org/specs/web-apps/current-work/multipage/timers.html#dom-external-addsearchprovider point 2 a typo?

[13:42:02.0000] <gavin>
seems like it should be either "url" or "engineURL"

[13:42:03.0000] <Hixie>
especially since the opensearch file contains the "real" search URL and opensearch lets you specify any random url

[13:43:00.0000] <gavin>
(to match non-normative box above, or interface definition)

[13:43:01.0000] <Hixie>
yeah step 2 is bogus

[13:43:02.0000] <Hixie>
let me fix this

[13:43:03.0000] <Hixie>
i'll fix step 2 and remove the check in step 4

[13:43:04.0000] <gavin>
ok

[13:43:05.0000] <gavin>
that was easy!

[13:43:06.0000] <Hixie>
:-)

[13:44:00.0000] <Hixie>
i happened to not be editing anything else at the time :-)

[13:44:01.0000] <Hixie>
usually when i'm like "file a bug" it's because i'm in the middle of some other edit

[13:45:00.0000] <Hixie>
ok checked in

[13:46:00.0000] <gavin>
thanks!

[13:46:01.0000] <Hixie>
np

[13:46:02.0000] <Hixie>
ok let's see if i can finish off the websocket feedback

[13:59:00.0000] <AryehGregor>
I just found a case where execCommand() produces a non-serializable DOM in every browser in exactly the same way: formatBlock with argument <p> on <xmp>foo</xmp>.  Produces <xmp><p>foo</p></xmp> in every browser.

[13:59:01.0000] <AryehGregor>
And in my algorithm, except I'm about to fix my algorithm.  :)

[13:59:02.0000] <AryehGregor>
Oh, wait.

[13:59:03.0000] <AryehGregor>
Firefox fails differently: <p><xmp>foo</xmp></p>.

[13:59:04.0000] <AryehGregor>
Oh well.

[14:01:00.0000] <AryehGregor>
/me discovers a bug in Firefox's innerHTML serialization algorithm too: <xmp><</xmp> serializes to <xmp>&lt;</xmp>, so if you repeatedly serialize and unserialize you add arbitrarily many &amp;'s

[14:02:00.0000] <The_8472>
< is not valid between tags

[14:02:01.0000] <The_8472>
it always has to be escaped

[14:03:00.0000] <AryehGregor>
The_8472, well, it's not *valid*, but in <xmp> it works.

[14:03:01.0000] <AryehGregor>
It's valid inside <script> or <style>.

[14:03:02.0000] <The_8472>
that's CDATA

[14:03:03.0000] <AryehGregor>
<xmp> behaves the same way as those.

[14:03:04.0000] <AryehGregor>
"CDATA" is not a term used by the HTML5 standard.

[14:03:05.0000] <AryehGregor>
But <xmp> parses the same as <script> or whatnot, its contents are made into one big text node until you hit a </xmp>.

[14:03:06.0000] <The_8472>
xmp is html5?

[14:03:07.0000] <The_8472>
i don't think so

[14:04:00.0000] <AryehGregor>
It's not valid, no, but the parsing behavior for it is defined.

[14:04:01.0000] <AryehGregor>
It's a legacy HTML feature that all browsers support.

[14:04:02.0000] <AryehGregor>
<plaintext> too, although that's more useless.

[14:04:03.0000] <The_8472>
my point is that argueing with the HTML5-parser for non-html5 data doesn't make sense

[14:05:00.0000] <AryehGregor>
Just because it's not conforming doesn't mean it doesn't have to be supported.

[14:05:01.0000] <The_8472>
since the parser specifically states *where* to switch its parsing mode, e.g. for script tags

[14:05:02.0000] <AryehGregor>
Also for xmp tags.

[14:05:03.0000] <AryehGregor>
Anyway, this is beside the point, it's a browser bug no matter what.

[14:06:00.0000] <The_8472>
can't find a single mention of "xmp" in the html5 spec

[14:07:00.0000] <The_8472>
oh, there

[14:07:01.0000] <AryehGregor>
http://www.whatwg.org/specs/web-apps/current-work/multipage/tokenization.html#parsing-main-inbody

[14:07:02.0000] <AryehGregor>
Try it yourself, it works in all browsers.

[14:08:00.0000] <The_8472>
"Follow the generic raw text element parsing algorithm." mhh, i see

[14:31:00.0000] <jgraham>
BTW I would particually like feedback from webkit people on http://lists.w3.org/Archives/Public/public-html-testsuite/2011May/0007.html

[14:32:00.0000] <jgraham>
(well I want feedback from everyone, but Mozilla people already looked and asking Microsoft people on #whatwg seems like the definition of pointless)

[15:23:00.0000] <Hixie>
hsivonen: what criteria are you using to decide what rel="" values to allow?

[15:48:00.0000] <AryehGregor>
Interesting.  Opera and WebKit support <pre align=right>, IE and Gecko don't.

[15:49:00.0000] <AryehGregor>
That seems bizarre.

[15:49:01.0000] <AryehGregor>
Maybe older IE supports it, and IE9 dropped support?

[15:49:02.0000] <AryehGregor>
(spec doesn't seem to mention it)

[15:51:00.0000] <AryehGregor>
Ugh, justify* are another case where there's no way to emulate the legacy HTML attributes' effect in CSS.

[15:51:01.0000] <AryehGregor>
<div align=right> is very different from <div style="text-align: right">.

[15:51:02.0000] <AryehGregor>
Also, in this case the CSS effect is much less useful . . .

[15:58:00.0000] <zewt>
ie guy on w3-webapps asking if he should be throwing UNKNOWN_ERR is so very ... IE

[16:51:00.0000] <The_8472>
<AryehGregor> Ugh, justify* are another case where there's no way to emulate the legacy HTML attributes' effect in CSS. <- margin-left:auto;margin-right:0px?

[16:52:00.0000] <The_8472>
although css needs width: shrink-to-fit; ...

