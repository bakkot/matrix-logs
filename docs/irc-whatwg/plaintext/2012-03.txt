2012-03-01
[16:08:00.0000] <astearns>
hixie: on TextMetrics what about s/ding/t/ ? ascent and descent are the terms I'm used to, and they're shorter

[16:09:00.0000] <Hixie>
"ascent font bounding box" isn't gramatically correct

[16:09:01.0000] <Hixie>
(ascent is a noun, not an adjective)

[16:10:00.0000] <Hixie>
if it was just .ascent, or .fontBoundingBoxAscent, i guess that could work?

[16:11:00.0000] <astearns>
I like fontBoundingBoxAscent - also fixes the problem of *Box returning a length

[16:11:01.0000] <TabAtkins>
Good point.

[16:11:02.0000] <Hixie>
seems reasonable

[16:11:03.0000] <Hixie>
can you update the wiki accordingly? there's six attributes to change

[16:13:00.0000] <astearns>
hmm - don't see where to create an account

[16:14:00.0000] <Hixie>
e-mail address?

[16:14:01.0000] <Hixie>
(i have to create it for you)

[16:14:02.0000] <astearns>
stearns⊙ac

[16:15:00.0000] <Hixie>
check e-mail

[16:15:01.0000] <Hixie>
k, i think i have gone through all the pending canvas bugs and the pending canvas e-mail

[16:15:02.0000] <Hixie>
i'll start going through http://wiki.whatwg.org/wiki/Canvas#Proposals and putting all that in the spec friday

[16:20:00.0000] <astearns>
done

[16:33:00.0000] <smaug____>
MikeSmith: https://bugzilla.mozilla.org/show_bug.cgi?id=731516#c4

[17:46:00.0000] <MikeSmith>
smaug____: thanks

[20:59:00.0000] <Hixie>
astearns: thanks

[21:22:00.0000] <Hixie>
what's the best way in JS to get the number out of a string in the format "123 ..." as in, numeric digits, a space character, and then anything else?

[21:22:01.0000] <Hixie>
split(' ', 1)?

[21:22:02.0000] <Hixie>
(followed by parseInt()?)

[21:30:00.0000] <miketaylr>
parseInt("123 blah") should work, no?

[21:47:00.0000] <Hixie>
yeah i guess that might technically work too

[21:55:00.0000] <mhausenblas>
morning

[21:55:01.0000] <mhausenblas>
Hixie, in which time zone are you in, actually?

[21:55:02.0000] <Hixie>
technically PST

[21:55:03.0000] <mhausenblas>
technically? :)

[21:56:00.0000] <Hixie>
i'm much better about it now, but there was a time where my timezone really had no correlation to my online hours

[21:56:01.0000] <mhausenblas>
he he ... so, you're based in Mountain View?

[21:57:00.0000] <Hixie>
yes

[21:57:01.0000] <mhausenblas>
just wondering cause I don't recall a pattern when I see you here (it's 6am here in Galway)

[21:58:00.0000] <Hixie>
a pattern of what?

[21:58:01.0000] <mhausenblas>
anyways. back to fiddling with some JS - have fun

[21:58:02.0000] <mhausenblas>
when you're around

[21:58:03.0000] <mhausenblas>
online, here, etc. ;)

[21:58:04.0000] <Hixie>
i'm often around and not actively talking

[21:58:05.0000] <mhausenblas>
right

[21:58:06.0000] <Hixie>
and my irc client is always online (it's in norway)

[21:58:07.0000] <mhausenblas>
but always watching I guess :)

[21:58:08.0000] <mhausenblas>
ah

[21:59:00.0000] <mhausenblas>
one last one: where does the .ch in your domain come from

[21:59:01.0000] <Hixie>
.ch is switzerland

[21:59:02.0000] <Hixie>
i'm swiss

[21:59:03.0000] <Hixie>
(half swiss)

[21:59:04.0000] <mhausenblas>
oh

[21:59:05.0000] <jamesr>
Hixie: are you swi or iss ?

[22:00:00.0000] <mhausenblas>
I mean, I knew that .ch is Switzerland, but didn't know you've actually some physical connection into it

[22:00:01.0000] <Hixie>
jamesr: i cut it horizontally, top half

[22:00:02.0000] <mhausenblas>
PMSL

[22:00:03.0000] <Hixie>
mhausenblas: yup born there. not far from cern, actually. left around the time tim was coming up with the idea for the web though. :-)

[22:01:00.0000] <mhausenblas>
he he - a sign!

[22:01:01.0000] <mhausenblas>
so you speak French?

[22:01:02.0000] <Hixie>
about as well as a ten year old, but yeah

[22:01:03.0000] <mhausenblas>
cool

[22:02:00.0000] <mhausenblas>
reason being we have three children (youngest 4) and their German is getting worse and worse (we moved over to Ireland in 2009)

[22:02:01.0000] <mhausenblas>
so I'm always wondering what other people have experienced in that respect as I don't have any other references

[22:04:00.0000] <mhausenblas>
(well, besides my sister who lives in Norway, she has two children but their language mix is even worse - German, Dutch, English and now Norwegian ;)

[22:05:00.0000] <Hixie>
dunno what to tell you

[22:05:01.0000] <Hixie>
it's all about practicing

[22:05:02.0000] <mhausenblas>
sure

[22:05:03.0000] <Hixie>
my written french is atrocious

[22:06:00.0000] <Hixie>
and my vocab completely lacks any computer terminology

[22:06:01.0000] <Hixie>
but i think if i went to live in a french speaking area i'd get back up to speed relatively quickly

[22:06:02.0000] <mhausenblas>
fair enough, guess English is appropriate there to fill in the blanks

[22:06:03.0000] <mhausenblas>
yeah

[22:06:04.0000] <mhausenblas>
if there is a basis, the missing vocabs come over time

[22:06:05.0000] <Hixie>
not that that's gonna happen unless the bay area falls into the ocean

[22:07:00.0000] <mhausenblas>
:)

[22:07:01.0000] <mhausenblas>
well, maybe you wanna move to CND?

[22:07:02.0000] <izhak>
Wow, I have just realized, that tokenizer calls parser, not vice versa!

[22:08:00.0000] <Hixie>
mhausenblas: i'm not leaving the bay area unless i'm driven out by some sort of apocalypse

[22:08:01.0000] <mhausenblas>
he he, fair enough. actually I envy you a bit - not because of the GOOG position, that is well deserved, but the weather ...

[22:08:02.0000] <mhausenblas>
it's so friggin damp and windy here

[22:09:00.0000] <Hixie>
the weather and the people/culture are the main factors for me

[22:09:01.0000] <mhausenblas>
so, when I'm a grown-up, in some 20y, I also want to work in the SF area ;)

[22:09:02.0000] <mhausenblas>
right

[22:09:03.0000] <Hixie>
plus this is where it's at as far as the industry goes

[22:09:04.0000] <mhausenblas>
yeah

[22:12:00.0000] <mhausenblas>
OMFG, luv it...  http://wulffmorgenthaler.com/2012/03/01/

[22:31:00.0000] <kennyluck>
sigh… I hate how centralized the industry is.

[22:36:00.0000] <zcorpan>
it's nice that the chairs seem to not only not read the content of the draft they're commenting on, but also not read the content of the email they are replying to

[22:37:00.0000] <zcorpan>
and sam was quick to ask for a different editor, that's nice

[23:31:00.0000] <zcorpan>
Hixie: did you not finish your sentence here? https://www.w3.org/Bugs/Public/show_bug.cgi?id=16142#c6

[23:31:01.0000] <Hixie>
i did not. i thought i had deleted what i had written.

[01:17:00.0000] <izhak>
As I know data comes in chunks from network. Does html5 speculative parser glues all the chunks to form a whole sequence of PRUnichar*, in mozilla's firefox?

[01:17:01.0000] <izhak>
I just can't find an entry point to mozilla's html 5 parser, to track the whole story.

[02:18:00.0000] <hsivonen>
izhak: the parser has the capability to parse up to any PRUnichar boundary and suspend

[02:19:00.0000] <hsivonen>
izhak: first http://mxr.mozilla.org/mozilla-central/source/parser/html/nsHtml5Parser.cpp#222 is called

[02:20:00.0000] <hsivonen>
izhak: the caller also obtains a pointer to nsHtml5StreamParser from http://mxr.mozilla.org/mozilla-central/source/parser/html/nsHtml5Parser.cpp#178

[02:20:01.0000] <hsivonen>
(created when http://mxr.mozilla.org/mozilla-central/source/parser/html/nsHtml5Parser.cpp#614 got called)

[02:21:00.0000] <hsivonen>
izhak: then, the networking code calls nsHtml5StreamParser's OnStartRequest, OnDataAvailable (potentially many times) and OnStopRequest

[02:23:00.0000] <izhak>
hsivonen: Thanks a lot! Your answer is exactly what I needed.

[02:27:00.0000] <hsivonen>
izhak: what are you trying to do?

[02:28:00.0000] <izhak>
hsivonen: I'm learning :).

[02:28:01.0000] <hsivonen>
ok

[02:32:00.0000] <hsivonen>
izhak: have you seen https://developer.mozilla.org/en/Gecko/HTML_parser_threading ?

[02:34:00.0000] <izhak>
hsivonen: No. Seems very helpful too.

[02:50:00.0000] <bga>
small idea. make analog of innerHTML for document fragment. Many frameworks has something like div.innerHTML = html; while(v = div.firstChild) df.appendChild(v). Imho its too common task but this loop do nothing. IE already has applyElement(v, 'inside') and some impemenations support it so its will be good to just standardize this method http://msdn.microsoft.com/en-us/library/ms536341(v=vs.85).aspx

[03:23:00.0000] <zcorpan>
has ie always had applyElement? never heard of it

[03:24:00.0000] <zcorpan>
although it sounds nice as a convenience feature

[03:24:01.0000] <zcorpan>
but it's not like innerHTML at all

[06:47:00.0000] <hsivonen>
how come Opera is shipping WebGL without either requestAnimationFrame or oRequestAnimationFrame? Am I testing wrong?

[08:02:00.0000] <zcorpan>
http://dev.w3.org/html5/html4-differences/Overview.src.html#changes-2011-05-25 - review appreciated (non-HTML5 changes are in a comment currently)

[08:03:00.0000] <zcorpan>
(i haven't updated everything in the rest of the document to take teh changes into account yet)

[08:07:00.0000] <miketaylr>
window.onerror now supports a forth argument for column position.  s/forth/fourth/

[08:11:00.0000] <miketaylr>
"Things that use EventTarget now inherits from it instead of using "implements"."  s/inherits/inherit/

[08:12:00.0000] <miketaylr>
"The crossorigin attribute has been added to img, video and audio to use CORS. CORS" (extra CORS)

[08:16:00.0000] <zcorpan>
the extra CORS is a reference

[08:16:01.0000] <zcorpan>
thanks!

[08:17:00.0000] <miketaylr>
np

[09:25:00.0000] <MikeSmith>
Ms2ger: should Anne be added to the DOM Parsing and Serialization spec as a co-editor?

[09:25:01.0000] <MikeSmith>
per https://bitbucket.org/ms2ger/dom-parsing-and-serialization/changesets

[10:04:00.0000] <bga>
http://www.google.com/patents/US6732330?dq=6,405,366

[10:08:00.0000] <AryehGregor>
What's the right way in CSS-ese to say "if <length> is zero or negative, treat it as a parse error"?

[10:08:01.0000] <AryehGregor>
Oh, I see.

[10:08:02.0000] <AryehGregor>
"Properties may restrict the number value to some range. If the value is outside the allowed range, the declaration is invalid and must be ignored. For unrestricted values, UAs must support at least up to ±230; unsupported values must be clamped to the closest supported value."

[10:11:00.0000] <Ms2ger>
2^30, I hope?

[10:12:00.0000] <AryehGregor>
No, it's 230.  Values and Units is being very conservative about hardware limitations.  Everything has to fit in nine bits with breathing room.

[10:12:01.0000] <AryehGregor>
(also, isn't it annoying how superscript/subscript doesn't copy-paste properly from HTML to plaintext?)

[10:13:00.0000] <dglazkov>
good morning, Whatwg!

[10:14:00.0000] <Ms2ger>
Good, dglazkov

[10:14:01.0000] <dglazkov>
:)

[10:14:02.0000] <bga>
i wonder if somebody already patented css vars :/

[10:14:03.0000] <TabAtkins_>
Good question.  The spec counts as prior art, at least.

[10:15:00.0000] <TabAtkins_>
I should probably submit a patent request to our legal team, though, just so we can be in the clear (and obviously offer it under the standard free w3c license).

[10:17:00.0000] <dglazkov>
how do you call an untrue statement in an invention disclosure?

[10:17:01.0000] <dglazkov>
...

[10:17:02.0000] <dglazkov>
a patent lie!

[10:18:00.0000] <TabAtkins_>
...

[10:18:01.0000] <Ms2ger>
...

[10:19:00.0000] <dglazkov>
Also: battle-scarred HTML badger: <p>.</p>

[10:42:00.0000] <AryehGregor>
What's the policy for adding new content attributes for new event types?

[10:43:00.0000] <AryehGregor>
There are attributes like onvolumechange in HTML.

[10:43:01.0000] <AryehGregor>
So if adding new content attributes fell out of favor, it must have been relatively recent.

[10:43:02.0000] <Ms2ger>
It fell out of favour?

[10:43:03.0000] <TabAtkins>
I think we just add all of them.

[10:43:04.0000] <AryehGregor>
Did it?

[10:44:00.0000] <AryehGregor>
There are no content attributes currently specced for transition and animation events.

[10:44:01.0000] <AryehGregor>
So the question is, should there be?

[10:44:02.0000] <TabAtkins>
I think so, yes.

[10:44:03.0000] <AryehGregor>
/me also thinks so, but wants more opinions before he posts to www-style

[10:44:04.0000] <TabAtkins>
Any event which can have an element as a target should have a corresponding content attribute.

[10:45:00.0000] <AryehGregor>
There's an onaddtrack IDL attribute on TextTrackList, so it must still be in vogue to add them.

[10:46:00.0000] <TabAtkins>
I presume it was just a consequence of this being a CSS spec and so the editors forgot.

[10:46:01.0000] <TabAtkins>
As opposed to all the things that get dumped into HTML or DOM.

[12:03:00.0000] <Hixie>
AryehGregor: what's the use case for animation event handler content attributes?

[12:04:00.0000] <Ms2ger>
What's the use case for onvolumechange? :)

[12:04:01.0000] <AryehGregor>
Hixie, the only argument I see would be consistency.

[12:04:02.0000] <Hixie>
Ms2ger: updating the volume ui

[12:04:03.0000] <Hixie>
AryehGregor: k

[12:04:04.0000] <AryehGregor>
I don't see a specific use-case.

[12:04:05.0000] <Hixie>
there's plenty of events that don't have them

[12:05:00.0000] <AryehGregor>
I mean, I don't know offhand what a use-case is for animation events at all.

[12:05:01.0000] <Hixie>
and the implementation cost in some implementations is non-zero (depends on whether they implement them all individually or have some sort of hash for the ones that are set)

[12:06:00.0000] <Ms2ger>
It's non-zero for Gecko, but smaller than epsilon, I'd say

[12:12:00.0000] <TabAtkins>
Ms2ger: Are you computing with the hyperreals or the surreals?

[12:12:01.0000] <Ms2ger>
Gecko, so must be surreal

[12:13:00.0000] <TabAtkins>
Excellent, the surreals are much more interesting anyway.

[12:13:01.0000] <gsnedders>
Reals are so moring.

[12:13:02.0000] <gsnedders>
morning? boring.

[12:13:03.0000] <gsnedders>
Been listening to dglazkov too much.

[12:14:00.0000] <Ms2ger>
Not even algebraically closed

[12:14:01.0000] <TabAtkins>
The surreals aren't algebraicly closed either.

[12:14:02.0000] <Ms2ger>
Bah

[12:32:00.0000] <AryehGregor>
The surcomplexes are, though, right?

[12:33:00.0000] <TabAtkins>
Are the surcomplexes defined?

[12:33:01.0000] <Ms2ger>
ow

[12:34:00.0000] <Ms2ger>
They are now, that is

[12:34:01.0000] <TabAtkins>
Ah, indeed.

[12:35:00.0000] <AryehGregor>
Of course, the fact that the reals aren't algebraically closed is most of what makes them *interesting*.

[12:35:01.0000] <AryehGregor>
The complex numbers are far simpler.

[12:35:02.0000] <AryehGregor>
. . . it's kind of a misnomer.

[12:35:03.0000] <TabAtkins>
Hm? The fact that there is no solution to sqrt(-1) in the reals is what makes them interesting?

[12:35:04.0000] <Ms2ger>
You say interesting, I say annoying

[12:35:05.0000] <AryehGregor>
Real analysis is crazy more complicated than complex analysis, yeah.

[12:35:06.0000] <Ms2ger>
tomato, tomato

[12:35:07.0000] <TabAtkins>
They're called complex because they are *a* complex (of two numbers).

[12:36:00.0000] <AryehGregor>
Granted, I don't think the complication makes them more interesting.

[12:36:01.0000] <AryehGregor>
I also think reals are much more annoying.

[12:36:02.0000] <AryehGregor>
Things are so much easier in complex-land.

[12:37:00.0000] <AryehGregor>
All nonconstant polynomials have a zero.  All differentiable functions are analytic.  All analytic functions have a ludicrously large set of very powerful properties.

[12:37:01.0000] <AryehGregor>
Witness: Picard's great theorem.  W.  T.  F.

[12:38:00.0000] <AryehGregor>
Or even his little theorem.

[12:38:01.0000] <AryehGregor>
"All entire functions are onto except possibly for one point."

[12:38:02.0000] <Ms2ger>
Also: well-order of the reals, wut

[12:38:03.0000] <AryehGregor>
You can well-order the complex numbers if and only if you can well-order the reals, no?

[12:39:00.0000] <TabAtkins>
I thought the reals were trivially well-orderable?

[12:39:01.0000] <TabAtkins>
Just on the standard < relation?

[12:39:02.0000] <AryehGregor>
Only if you assume full choice.

[12:39:03.0000] <AryehGregor>
That's not a well-ordering.

[12:39:04.0000] <Ms2ger>
Not trivially

[12:39:05.0000] <AryehGregor>
Well-ordering means every set has a least element.

[12:40:00.0000] <AryehGregor>
Every nonempty subset, to be pedantic.

[12:40:01.0000] <TabAtkins>
Gah, duh.

[12:40:02.0000] <TabAtkins>
Sorry.

[12:40:03.0000] <AryehGregor>
Like the natural numbers.

[12:40:04.0000] <Ms2ger>
You apparently can't even give a constructive definition of the well-order of the reals

[12:40:05.0000] <AryehGregor>
Countable choice isn't enough to well-order the reals.

[12:40:06.0000] <AryehGregor>
Well, since it requires full choice, yeah, constructive definitions are probably not going to happen.

[12:41:00.0000] <AryehGregor>
Nor an additive nonlinear continuous function, or the Banach-Tarski paradox, or any of that good stuff.

[12:41:01.0000] <AryehGregor>
s/good/evil but necessary if you want any algebra to work/

[12:41:02.0000] <AryehGregor>
Analysis could get by just fine with countable choice, but algebra would kind of be dead.

[12:42:00.0000] <AryehGregor>
I mean, countable choice means that uncountable vector spaces need not have a basis.  Bad.

[12:42:01.0000] <Philip`>
I'm sure most people in the world could get on just fine if algebra was dead

[12:42:02.0000] <AryehGregor>
(more precisely, vector spaces would only need have a basis if they have a countable spanning set, I guess)

[12:42:03.0000] <AryehGregor>
. . . well, yes, although I've heard some lame people use it for physics and cryptography and stuff instead of recreation.

[12:43:00.0000] <AryehGregor>
/me would like to mentally rehearse the proof of the equivalence of the axiom of choice, Zorn's lemma, the well-ordering principle, and the fact that every vector space has a basis, but decides that returning to billable work is a better idea

[12:44:00.0000] <TabAtkins>
/me agrees that rehearsing proofs is a fun way to spend one's time.

[12:44:01.0000] <TabAtkins>
I used to put myself to sleep by rehearsing the reasoning behind efficient prime searches.

[12:46:00.0000] <AryehGregor>
Which efficient prime searches, in particular?

[12:46:01.0000] <TabAtkins>
Just the basic techniques to speed up a linear search.

[12:46:02.0000] <TabAtkins>
This was back in middle school.

[12:46:03.0000] <AryehGregor>
Like the sieve of Eratosthenes?

[12:46:04.0000] <AryehGregor>
That's the best I know, but I have some vague idea it's not considered efficient by fancy modern standards.

[12:47:00.0000] <TabAtkins>
Yeah, like that.

[12:47:01.0000] <gsnedders>
Heh — that came up in my maths lecture today.

[12:47:02.0000] <TabAtkins>
I didn't know fancy modern techniques back in the day.

[12:47:03.0000] <gsnedders>
(Both the Sieve of Eratosthenes, and other techniques)

[12:47:04.0000] <AryehGregor>
Does anyone have any clever ideas of how to deal with this?  https://www.w3.org/Bugs/Public/show_bug.cgi?id=15709

[12:47:05.0000] <AryehGregor>
No CSS specs specify anything about rounding right now, but it's kind of hard to test programmatic APIs in that case.

[12:48:00.0000] <AryehGregor>
Also, reftests implicitly test rounding in some cases anyway.

[12:48:01.0000] <TabAtkins>
But I knew why checking only things that were 1 or 5 mod 6 was efficient and hwo to improve it, or why searching for factors only up to the sqrt of your target was okay.

[12:49:00.0000] <gsnedders>
/me was given an unconvincing proof of that earlier today…

[12:50:00.0000] <TabAtkins>
Unconvincing proof of which?

[12:50:01.0000] <gsnedders>
I should probably look at it again, and probably realize I'm just being silly

[12:50:02.0000] <gsnedders>
1 or 5 mod 6

[12:50:03.0000] <TabAtkins>
0, 2, 3, and 4 all imply the number is divisible by 2 or 3.

[12:51:00.0000] <gsnedders>
Yes, but the existance of divisors greater than 6?

[12:51:01.0000] <TabAtkins>
Huh?

[12:51:02.0000] <TabAtkins>
It *only* gives a guarantee that the number is/isn't divisible by 2 or 3.

[12:51:03.0000] <TabAtkins>
It says nothing about any other divisors.

[12:52:00.0000] <TabAtkins>
25, for example, is 1mod6.

[12:52:01.0000] <gsnedders>
"Every prime p >= 5 is of the form 6k±1"

[12:52:02.0000] <Philip`>
Sounds like an advancement on simply counting sheep - you collect six sheep at once, fan them out in six different directions, drop two thirds of them into cunningly-placed bottomless pits, and then merge the remaining streams of sheep together before applying a more complex filter and only counting the ones that remain alive at the end, and then you fall asleep

[12:52:03.0000] <gsnedders>
Somehow in my head I turned that around.

[12:52:04.0000] <gsnedders>
(i.e., Every pos. int. k has some prime 6k±1)

[12:52:05.0000] <TabAtkins>
Oh yeah, that's clearly false.

[12:53:00.0000] <gsnedders>
Exactly.

[12:53:01.0000] <gsnedders>
I had just read a statement later in the proof that almost implies that, but it's just poor phrasing

[12:55:00.0000] <gsnedders>
Also: I'm vaguely wondering why I'm not doing joint CS and maths.

[12:56:00.0000] <gsnedders>
Though the real analysis my gf had for test today just scared me.

[12:57:00.0000] <TabAtkins>
I'm definitely not a math person.  I could do math well enough to minor in it (you got a math minor for free if you did a BS in CompSci at my school), but no more.

[12:58:00.0000] <AryehGregor>
No one has input on <https://www.w3.org/Bugs/Public/show_bug.cgi?id=15709>?

[12:58:01.0000] <AryehGregor>
gsnedders, I'm curious.  What was it?

[12:59:00.0000] <gsnedders>
I could likely manage, but I didn't do the majority of maths courses this year, so that chance has passed. Linguistics and CS it is.

[12:59:01.0000] <gsnedders>
AryehGregor: Nothing that complex in real analysis terms, but I've never really done any real analysis.

[12:59:02.0000] <Ms2ger>
Really?

[12:59:03.0000] <Ms2ger>
(Excuse the pun)

[12:59:04.0000] <gsnedders>
Well, okay, I've done the basic sort of things.

[13:00:00.0000] <gsnedders>
But some of the finding limits in test my gf had to do were well beyond me.

[13:01:00.0000] <gsnedders>
/me logs on to uni website to file abscene report and will look up the learning outcomes of that course…

[13:01:01.0000] <AryehGregor>
/me wants an example!

[13:01:02.0000] <Ms2ger>
^

[13:02:00.0000] <gsnedders>
In particular, students should be able to: deal with implications and equivalences; interpret the negation of a statement involving quantifiers; recognise various methods of proof (direct, contrapositive, counterexample, contradiction, induction); show that a function is bounded/unbounded; show, directly from the definition, that a given number is the limit of a given sequence; evaluate sequence limits using arithmetic and order properties; show th

[13:03:00.0000] <gsnedders>
(where did that get cut off?)

[13:03:01.0000] <Ms2ger>
order properties; show t

[13:03:02.0000] <TabAtkins>
"order properties; show th"

[13:03:03.0000] <gsnedders>
show that a given sequence is monotonic; investigate sequences defined recursively; use subsequences to establish non-convergence; test series for convergence/divergence; test series for absolute/conditional convergence; determine, directly from the definition, whether a function is continuous; use the sequential characterisation to establish discontinuity;solve problems using the intermediate value and extreme value theorems.

[13:03:04.0000] <Ms2ger>
Hey, you got an h too?

[13:03:05.0000] <TabAtkins>
My client is better!

[13:03:06.0000] <Hixie>
i got an h

[13:03:07.0000] <Ms2ger>
xchat--

[13:03:08.0000] <TabAtkins>
irssi++

[13:04:00.0000] <Ms2ger>
That doesn't sound too bad

[13:04:01.0000] <AryehGregor>
That sounds like a standard advanced calculus course.

[13:05:00.0000] <gsnedders>
It probably wouldn't seem to bad if I'd done it and been to lectures and stuff :)

[13:05:01.0000] <Ms2ger>
My first university calculus course was basically building up real calculus from scratch, while proving everything along the way

[13:05:02.0000] <Ms2ger>
/me didn't like it either

[13:06:00.0000] <gsnedders>
(My gf is a chem. student, FWIW)

[13:07:00.0000] <gsnedders>
(Originally a CS student, but struggled having done far less programming than most people in the course)

[13:11:00.0000] <gsnedders>
I'd claim she's better than me at maths, and she'd claim the opposite. Nevertheless, both perfectly capable of it.

[13:11:01.0000] <Ms2ger>
Heh

[13:12:00.0000] <gsnedders>
Ms2ger: First year maths courses here are quite easy — and huge numbers take them, because they're required for practically all subjects in the faculty of sciene.

[13:12:01.0000] <Ms2ger>
Mm

[13:12:02.0000] <gsnedders>
(Actually, for most subjects they're not compulsary, just "strongly recommended", and not doing them massively limits course choice in later years)

[13:13:00.0000] <Ms2ger>
Everyone here gets their own math courses

[13:13:01.0000] <gsnedders>
Though the perception of how easy they are is likely down to the fact that traditionally in Scotland you go to uni after five years at secondary school — one fewer than in England, but with one more year of the degree.

[13:14:00.0000] <gsnedders>
Most people nowadays do six years of secondary school in Scotland, to the standard needed for English universities, and have done a lot of the first year courses for science subjects.

[13:14:01.0000] <gsnedders>
(Arts subjects tend to be a far higher level than even sixth year of school courses, so it makes little difference there.)

[13:15:00.0000] <gsnedders>
I did an unusually high number of subjects of the highest level at school — trying to get into Cambridge — which probably is a lot of the reason why I found first year quite so easy.

[13:15:01.0000] <gsnedders>
My gf only did five years of secondary school (which admittedly I too almost did), so actually learnt quite a bit in first year.

[13:19:00.0000] <gsnedders>
(I turned up to a single maths lecture a week — to hand in compulsary homework, and learnt almost nothing through it. She went to all five lectures a week and learnt a lot.)

[13:20:00.0000] <gsnedders>
(I would've gone straight into second year had it not for doing joint linguistics and CS — the linguistics side dictated I had to do first year)

[13:20:01.0000] <Ms2ger>
Yay, linguistics

[13:26:00.0000] <kennyluck>
Speaking of math, I really hope some classic textbooks that are full of definitions such as Hartshone's algebraic geometry can be turned into something as readable as the HTML LS.

[13:27:00.0000] <gsnedders>
HTML LS?

[13:27:01.0000] <gsnedders>
Living Standard?

[13:27:02.0000] <kennyluck>
yeah

[13:28:00.0000] <kennyluck>
xrefs are really helpful.

[13:28:01.0000] <Philip`>
It's a shame nobody has figured out a decent way to do maths in HTML yet

[13:29:00.0000] <Philip`>
which is presumably limiting for maths textbooks

[13:29:01.0000] <jgraham>
Is MathML decent?

[13:29:02.0000] <jgraham>
Not hand authoring it obviously

[13:29:03.0000] <jgraham>
That's like slow suicide

[13:30:00.0000] <Philip`>
Hand authoring seems like an important consideration to me

[13:30:01.0000] <Philip`>
but maybe people in real life write maths textbooks in Word instead of LaTeX?

[13:31:00.0000] <Ms2ger>
Heresy!

[13:31:01.0000] <jgraham>
It might depend what you consider "real life"

[13:31:02.0000] <Ms2ger>
Outside of academia?

[13:31:03.0000] <Ms2ger>
Probably so

[13:31:04.0000] <jgraham>
Probably people who are university professors writing undergrad level textbooks use LaTex

[13:32:00.0000] <jgraham>
But doing some-TeX-like-dialect-to-MathML is a problem that has been solved many times

[13:32:01.0000] <jgraham>
So probably anyone writing that kind of book would start by solving it again, differently

[13:33:00.0000] <Ms2ger>
It's somewhat annoying, I now cringe when I have to study from non-LaTeXed texts

[13:35:00.0000] <Philip`>
jgraham: "real life" is what people other than me experience

[13:38:00.0000] <jgraham>
In real life one learns the way to the supermarket in < 4 years, perhaps. I'm not sure how that affects their choice of typesetting software, but does make it easier to get milk.

[13:38:01.0000] <jgraham>
s/their/one's/

[13:40:00.0000] <Ms2ger>
Relevant: http://xkcd.com/1015/

[14:45:00.0000] <hober>
abarth (and whoever else cares about registerProtocolHandler): any thoughts on http://www.w3.org/html/wg/wiki/User:Eoconnor/ISSUE-189 before I send it to public-html?

[14:46:00.0000] <abarth>
reading

[14:47:00.0000] <abarth>
looks reasonable

[14:47:01.0000] <hober>
ok, thanks

[14:50:00.0000] <Velmont>
Ah nice. -- Although I hoped it was a reply to the "deprecate register*handler in favour of webintents"

[14:51:00.0000] <Velmont>
I'd really like that to read, "deprecate webintents in favour of extending registerprotocolĥandler" instead. Which IMHO makes more sense.

[14:52:00.0000] <hober>
heh

[14:57:00.0000] <othermaciej>
how do registerProtocolHandler and Web Intents differ in their purpose?

[15:00:00.0000] <othermaciej>
hober: you could add an example of a specific hypothetical future use case for a web+ URI, that would be a stronger rationale than just citing the general desire to be upward compatible

[15:06:00.0000] <Velmont>
othermaciej: WebIntents lets you do a "share" intent, -- so that you don't hardcode Facebook. Nice for me since I don't use Facebook but rather identi.ca. So it's doing verbs and stuff. Lets the browser have some UI to delegate your wanted action to your service.

[15:07:00.0000] <hober>
othermaciej: ok, will do

[15:07:01.0000] <Velmont>
othermaciej: So registerprotocolhandler could do the same with e.g. a special   intent+share://  protocol or something like that.

[15:07:02.0000] <Velmont>
Instead of NIH-ing a totally new system.

[15:07:03.0000] <othermaciej>
Velmont: it seems like one could imagine registering a web+share: protocol instead

[15:07:04.0000] <Velmont>
othermaciej: Ah, but the problem is ofc that noone will really use that.

[15:07:05.0000] <othermaciej>
I guess web intents can be (as currently proposed) registered declaratively

[15:08:00.0000] <Velmont>
othermaciej: And browsers will not implement it.

[15:08:01.0000] <Velmont>
If I like blog about it and put it on my home page.

[15:08:02.0000] <Velmont>
It kinda needs to have some weight.

[15:13:00.0000] <Hixie>
we should make web intents and the handler methods just be one feature

[15:13:01.0000] <Hixie>
that does declarative and imperative and so on all together

[15:13:02.0000] <Hixie>
no need for two features

[15:15:00.0000] <Velmont>
Yep.

[15:16:00.0000] <zewt>
heh, even after a restart, firefox is still in this weird "everything gets a text cursor" mode

[15:16:01.0000] <zewt>
as if all text on every page is an uneditable text box

[15:18:00.0000] <Hixie>
zewt: press f7

[15:18:01.0000] <zewt>
... f7?

[15:18:02.0000] <Velmont>
caret mode browsing?

[15:18:03.0000] <TabAtkins>
You're in the caret-navigation mode.

[15:19:00.0000] <TabAtkins>
It's very confusing when it happens.

[15:19:01.0000] <zewt>
what a braindamaged feature

[15:19:02.0000] <TabAtkins>
Took my wife a week to figure out how to back out of it last time it happened.

[15:19:03.0000] <Hixie>
it's quite an important feature, for certain users

[15:19:04.0000] <Hixie>
it does give you a prompt the first time you invoke it

[15:19:05.0000] <zewt>
sometimes I seriously wonder if anyone's at the wheel with FF UX

[15:19:06.0000] <Velmont>
I was also baffeled once it happened. Took me a long time as well.

[15:19:07.0000] <TabAtkins>
Hixie: That doesn't help when it was triggered by your cat while you weren't looking at the computer.

[15:20:00.0000] <zewt>
i definitely havn't seen that prompt before, but I see the default is "yes", so it's probably not improbable to fat-finger enter and never realize there was a dialog (or see it flash and go "well, I wonder what that was")

[15:21:00.0000] <zewt>
my favorite is when programs steal focus with a dialog that accepts space to select "yes" to something, which invariably happens while I'm typing

[15:21:01.0000] <Philip`>
Maybe it should pop up a "Did you know you're in caret navigation mode?" message every 2^n minutes, to give you chances to get out of it

[15:22:00.0000] <Velmont>
Philip`: Along with a "never show this again" checkbox so that the people who use it don't go crazy?

[15:23:00.0000] <zewt>
well, for starters the default action on the initial confirmation should be no

[15:23:01.0000] <TabAtkins>
Hm.  I wonder where I can find a font that doesn't have the necessary metrics to extract an x-height from?

[15:23:02.0000] <Philip`>
Velmont: No, because your cat might select that option

[15:23:03.0000] <Philip`>
Velmont: The exponential decrease in frequency means that long-term users won't get too annoyed

[15:24:00.0000] <zewt>
heh, well, no, the word would be "infuriated"

[15:24:01.0000] <Velmont>
Philip`: I get very annoyed about some Opera defaults every time I install it, - like tab focus mode. -- It's very easy to change, -- but it's very very frustrating to always have to change it to be sane.

[15:25:00.0000] <Velmont>
Sane as in "what a power user would expect".

[15:25:01.0000] <jamesr__>
Velmont, does Opera have a settings sync feature?

[15:26:00.0000] <Velmont>
jamesr__: hmmm. working on it at least, I think. Although I could actually figure out how the settings are stored and just put it in my unison configuration file, then it'd be synced to all my computers.

[15:27:00.0000] <Velmont>
Anyway, -- if I'm irritated by stuff like that, I always think that there's someone else who is as well.


2012-03-02
[20:56:00.0000] <MikeSmith>
TabAtkins: I'm wondering since when did emscripten break the order-of-magnitude barrier

[20:57:00.0000] <MikeSmith>
last I saw from Joel Webber's figures it still was pretty much an order of magnitude at least

[21:12:00.0000] <othermaciej>
I didn't think code hand-translated into JS had even broken the order of magnitude barrier

[22:25:00.0000] <kennyluck>
Why isn't @scoped allowed on <link>. I kind of expect that there was previous discussions about this but I can't find any.

[22:37:00.0000] <kennyluck>
/me found it http://lists.whatwg.org/htdig.cgi/whatwg-whatwg.org/2011-March/031049.html

[22:42:00.0000] <kennyluck>
Hmm… that didn't say why it is bad to allow @scoped on <link>, besides potentially a lack-of-use-case argument (aka. you can you <style>@import</style>).

[22:45:00.0000] <Hixie>
the lack-of-use-case argument is sufficient to keep anything out of the spec :-)

[22:53:00.0000] <kennyluck>
Hixie, well, if implementation cost of adding @scoped to <link> isn't much, not allowing it on <link> confuses authors. (just got a feedback like this)

[22:54:00.0000] <Hixie>
i don't really understand the use case for using <link> for scoped stylesheets

[22:54:01.0000] <Hixie>
the whole point is that the style sheet will be embedded in syndication

[22:57:00.0000] <kennyluck>
Hixie, how would an author know he/she is supposed to use <style>@import</style> instead of <link style> in this use case when the former is not so apparent?

[22:57:01.0000] <kennyluck>
Or, do you think <style>@import</style> shouldn't be used here too?

[22:57:02.0000] <Hixie>
i don't think @import makes much sense either

[22:57:03.0000] <kennyluck>
hmm… ok

[22:58:00.0000] <kennyluck>
I don't know the details of the use case here but it makes more sense now.

[23:02:00.0000] <hsivonen>
when people propose something potentially very dangerous, they go "don't be judgemental in *technical* WG"

[23:08:00.0000] <hsivonen>
DRM systems' Web sites--with smiling stock photo people

[23:09:00.0000] <hsivonen>
Absent from supported platforms of the Google DRM: desktop Linux

[23:10:00.0000] <othermaciej>
does Google have a DRM platform of their own?

[23:10:01.0000] <hsivonen>
othermaciej: http://www.widevine.com/

[23:12:00.0000] <hsivonen>
It's interesting that it's considered OK to ask browsers to support unspecified and open-ended DRM but it's not OK to ask Netflix to arrange their CDN to have the capability to set particular HTTP headers

[23:14:00.0000] <Hixie>
hsivonen: yeah, that's such BS. I called Mark on it, I notice he ignored my e-mail completely. (http://lists.w3.org/Archives/Public/public-html/2012Feb/0497.html)

[23:15:00.0000] <Hixie>
hsivonen: (the "don't judge, be technical" thing)

[23:15:01.0000] <Hixie>
hsivonen: i notice nobody ever says we shouldn't be judgemental when the accessibility problem being discussed is for people with disabilities

[23:16:00.0000] <hsivonen>
Hixie: the most curious thing is people who have branded themselves a11y folks rooting for DRM

[23:16:01.0000] <Hixie>
yeah that is so completely baffling

[23:17:00.0000] <hsivonen>
Hixie: one would expect them to resist vigorously and with extreme judgementalness

[23:25:00.0000] <hsivonen>
Google's demo of their multiplatform DRM tells me: "Your operating system is not supported."

[23:31:00.0000] <othermaciej>
I wonder what the Director would think of an effortt to standardize a DRM API

[23:31:01.0000] <hsivonen>
interesting that Google uses Sintel for a DRM demo even though Sintel is CC-licensed and all the CC licenses have an anti-TPM clause

[23:32:00.0000] <hsivonen>
also interesting that Google's DRM player works in a virtual machine

[23:32:01.0000] <hsivonen>
lol FAIL?

[23:33:00.0000] <hsivonen>
they make a big deal about detecting screen recording software and then the thing runs under a VM

[23:33:01.0000] <othermaciej>
Widevine looks to be a recent-ish acquisition, I would guess Google would add desktop Linux support before putting this in Chrome

[23:34:00.0000] <othermaciej>
DRM in web video is a thorny issue

[23:35:00.0000] <othermaciej>
it seems that if it is not offered, providers of Hollywood video content use plugins or platform-specific native apps for delivery, instead of DRM-free Web video

[23:35:01.0000] <hsivonen>
othermaciej: I think platform-specific native apps are better for the health of the Web in this case

[23:36:00.0000] <hsivonen>
othermaciej: since they don't poison browser competition even though they retain the status quo as far as OS lock-in goes

[23:36:01.0000] <othermaciej>
I can understand that point of view but I can also see how reasonable people may differ

[23:36:02.0000] <hsivonen>
othermaciej: also, if 10 years from now Hollywood follows the path of the music industry, the legacy won't be in the browser platform

[23:37:00.0000] <othermaciej>
Hollywood content coming in native apps is aligned with my corporate financial incentives but notheless I am not sure it is the best thing for the Web

[23:38:00.0000] <othermaciej>
Hollywood content coming in plugin runtime environments has no real upside for me though

[23:38:01.0000] <zcorpan>
Hixie: why is download="" not in w3c html5?

[23:38:02.0000] <Hixie>
same reason ping="" isn't, iirc

[23:38:03.0000] <Hixie>
but i could be wrong

[23:39:00.0000] <Hixie>
/me barely follows the htmlwg these days

[23:46:00.0000] <zcorpan>
what was the reason for ping="" again?

[23:48:00.0000] <annevk>
make link tracking a little easier, not pollute links while doing that, and put users in control

[23:48:01.0000] <annevk>
it sort of lost to redirects (and thereby polluting links) for now :(

[23:48:02.0000] <zcorpan>
annevk: no the reason it's not in html5

[23:48:03.0000] <annevk>
oh

[23:49:00.0000] <annevk>
some lobby that hit the right chair keywords?

[23:49:01.0000] <annevk>
/me forgot

[23:51:00.0000] <annevk>
hsivonen: haha, your twitter reply is golden

[23:51:01.0000] <annevk>
hsivonen: the one to fantasai

[00:39:00.0000] <zcorpan>
when did <ol type> become allowed?

[00:45:00.0000] <zcorpan>
http://www.w3.org/TR/2010/WD-html5-20101019/grouping-content.html#the-ol-element is the earliest WD with ol type

[00:50:00.0000] <zcorpan>
/me doesn't find it in http://html5.org/tools/web-apps-tracker?from=5643&to=5779

[01:11:00.0000] <annevk>
https://plus.google.com/109925364564856140495/posts

[01:11:01.0000] <annevk>
win

[01:12:00.0000] <kennyluck>
the fact that use cases of @ping can be solved by server redirects reminds me of the fact that the use cases of URI template for <form> can be solved by server redirects. Or is this not a good analogy?

[01:12:01.0000] <kennyluck>
I like both of them though.

[01:22:00.0000] <asmodai>
Found a lovely Opera Mobile bug

[01:23:00.0000] <asmodai>
Just have no clue how to properly describe it in the issue tracker

[01:30:00.0000] <Velmont>
Hmm. I just saw that microsoft updated their idb tests.

[01:30:01.0000] <zcorpan>
just go "OMG YOU SUCK ok here's a tc"

[01:30:02.0000] <Velmont>
So they resemble mine quite much now, -- but they actually redid them.

[01:31:00.0000] <Velmont>
So we're doubleworking all the way to the bank :P

[01:31:01.0000] <Ms2ger>
Sounds like something Microsoft would do

[01:31:02.0000] <zcorpan>
did they make them non-automated in the process?

[01:31:03.0000] <Velmont>
I'll try to find out any good improvements they've done, and tests added that I don't have written myself. But it's quite the diff.

[01:32:00.0000] <asmodai>
zcorpan: Not sure if I can fully find a howto reproduce it, I did encounter it a few times, but not sure if logic bug in the application or due to a site's markup in some weird way.

[01:32:01.0000] <Velmont>
zcorpan: No, they did improve them in all they ways I suggested in my review.

[01:32:02.0000] <asmodai>
Trying my best in the ticket though XD

[01:34:00.0000] <annevk>
new home page http://isittacosunday.com/

[01:36:00.0000] <gsnedders>
annevk: nice background for the yay :P

[01:39:00.0000] <Velmont>
Hmm. Maybe I should align with MS on the tests, now that they have fixed the actual problems. -- Although I hate all the boilerplate in the tests.

[01:39:01.0000] <Velmont>
But it makes it easier to understand an individual test.

[01:40:00.0000] <asmodai>
There we go ANDMEX-6845⊙boc

[01:41:00.0000] <Velmont>
I've got   db = createdb(t);             instead of the multiline big open() onupgradeneeded, setting up failing functions on the other event handler, etc.

[01:43:00.0000] <annevk>
david_carlisle: no worries man :)

[01:43:01.0000] <annevk>
david_carlisle: I was unable to spot that two files changed in a ten line diff yesterday

[01:44:00.0000] <david_carlisle>
still you'd think if I got as far as reading the makefile and seeing i needed a source of that name I might have spotted the file in the same directory.

[02:13:00.0000] <hsivonen>
does Canonical use DRM in their Ubuntu for TVs that they've demoed with Hollywood movies in the movie rental lens?

[02:13:01.0000] <hsivonen>
if they use DRM, which DRM?

[02:14:00.0000] <hsivonen>
and have they already struck deals to carry the movies whose titles/posters appear in their demos?

[02:26:00.0000] <asmodai>
hsivonen: I haven't heard anything about it so far.

[02:57:00.0000] <annevk>
hmm

[02:57:01.0000] <annevk>
exposing SVGMatrix on <canvas> might be problematic

[02:58:00.0000] <annevk>
wasn't there an idea to reconcile that with CSS somehow?

[03:10:00.0000] <zcorpan>
http://dev.w3.org/cvsweb/html5/html4-differences/Overview.src.html.diff?r1=1.143;r2=1.144 - http://dev.w3.org/html5/html4-differences/Overview.src.html

[03:12:00.0000] <annevk>
zcorpan: casing of doctype was consistent with HTML until you changed it...

[03:14:00.0000] <zcorpan>
i like lowercase better :-)

[03:16:00.0000] <Ms2ger>
Look out, you'll get an ISSUE on that

[03:16:01.0000] <zcorpan>
heh

[05:03:00.0000] <annevk>
hmm

[05:03:01.0000] <annevk>
iso-2022-cn is the worst of -kr and -jp combined it seems

[05:03:02.0000] <annevk>
and then it doesn't even need to be supported if not for XSS

[05:03:03.0000] <annevk>
to which IE is vulnerable

[05:38:00.0000] <annevk>
"Wait — I'm confused. Isn't the primary purpose of media type RFCs to be wilfully violated? What are we doing wrong?" Robin on public-xml-er

[05:38:01.0000] <annevk>
:)

[07:02:00.0000] <annevk>
defining UTF-8 is harder than I thought

[07:08:00.0000] <gsnedders>
annevk: How is it hard?

[07:09:00.0000] <Ms2ger>
It's an encoding

[07:09:01.0000] <annevk>
gsnedders: lots of conditions mostly

[07:10:00.0000] <gsnedders>
annevk: I guess that just makes it awkward in prose more than anything else.

[07:10:01.0000] <gsnedders>
Just define it in C89 and reference the C spec :P

[07:11:00.0000] <annevk>
gsnedders: compared with the table-based encodings it's just a little less straightforward

[07:12:00.0000] <gsnedders>
Well, yeah, all the algorithmic ones are less simple.

[07:12:01.0000] <gsnedders>
You defining things like GB108030 (or whatever the number is) as a table-based encoding and hence supporting ranges in the tables?

[07:13:00.0000] <annevk>
yeah that one is hard too

[07:13:01.0000] <gsnedders>
It is pretty much the most horrible encoding out there.

[07:21:00.0000] <Ms2ger>
That's a pretty strong statement

[07:22:00.0000] <Ms2ger>
"CSS Selectors as Fragment Identifiers Community Group"

[07:23:00.0000] <jgraham>
Wow that's quite soemthing to form a community around

[07:23:01.0000] <beverloo>
there's a CG to put forward a proposal for <picture> too

[07:24:00.0000] <jgraham>
Presumably they will hold their meetings in the annex of the parish hall alongside the "insects in local history" society

[07:25:00.0000] <Ms2ger>
Is that next to the astrophysicists?

[07:27:00.0000] <jgraham>
Pretty sure astrophysics would draw more of a crowd mathematics

[07:27:01.0000] <jgraham>
+than

[07:29:00.0000] <Velmont>
Hmm. Presumably Microsoft will ship with CORS enabled for sync XHR. And then it'll be quite impossible to change that given MS's backwards compat never-break-anything policy.

[07:30:00.0000] <Velmont>
Has anyone reached out?

[07:30:01.0000] <divya>
astearns: sup sup

[07:30:02.0000] <Velmont>
Mozilla wanted to remove it, if that is still happening.

[07:38:00.0000] <annevk>
Velmont: haven't seen much recently on that front

[07:51:00.0000] <Velmont>
annevk: Probably needs to happen now, -- before Microsoft releases IE10.

[07:52:00.0000] <Velmont>
Microsoft was also hatin' on sync XHR in their blog post, -- so maybe they'd be up for removing CORS from sync XHR.

[07:55:00.0000] <annevk>
hmm yeah

[07:55:01.0000] <annevk>
maybe email them?

[07:55:02.0000] <annevk>
hmm

[08:26:00.0000] <jgraham>
MikeSmith: https://github.com/jgraham <-- any chance we can arrange for these to be moved to the W3C account and a cron job set up to auto sync them with the hg copy (should be OK if we don't ever push directly to master on git)

[08:26:01.0000] <jgraham>
That is, all pushes much go first to hg master and then to git master

[08:26:02.0000] <Ms2ger>
AryehGregor, so I've got an issue with Range-intersectsNode.html...

[08:26:03.0000] <Ms2ger>
It's timing out after 540769ms

[08:26:04.0000] <jgraham>
But they can ofc live on a branch in git first if the author is sane^W^Wprefers

[08:27:00.0000] <Ms2ger>
s//in/

[08:40:00.0000] <Velmont>
https://github.com/jgraham/testharness.js/pull/1 << ohwell, others might want to review as well:    Pull Request #1: Add new DOMExceptions, from DOM4 and from IndexedDB

[08:50:00.0000] <Ms2ger>
Velmont, that doesn't seem to make sense

[08:51:00.0000] <Ms2ger>
I doubt we want assert_throws("SYNTAX_ERR", fn) and assert_throws("SyntaxError", fn) to test different things

[09:01:00.0000] <arv>
annevk: Why are WebIDL platform arrays not quite JS arrays?

[09:03:00.0000] <Ms2ger>
Because they can be live?

[09:05:00.0000] <dglazkov>
good morning, Whatwg!

[09:05:01.0000] <Ms2ger>
Good day to you too

[09:28:00.0000] <kennyluck>
shit… is http://krijnhoetmer.nl/irc-logs/whatwg/ dead already?

[09:29:00.0000] <Philip`>
kennyluck: Works for me

[09:30:00.0000] <kennyluck>
Philip`, OK, good to know. Let me see if I can make it work for me.

[09:49:00.0000] <TabAtkins>
What's the incantation to summon david_carlisle? Do I just have to mutter "MathML" under my breath?

[09:50:00.0000] <Ms2ger>
You could try "LaTeX", and hope he comes in to express his distress

[09:52:00.0000] <TabAtkins>
I can't parse the way that different services often use different communication means even

[09:52:01.0000] <TabAtkins>
Let's try that again.

[09:53:00.0000] <TabAtkins>
I can't parse "the way that different services often use different communication means even

[09:53:01.0000] <TabAtkins>
when sharing the same underlying protection technology.

[09:53:02.0000] <TabAtkins>
"

[09:53:03.0000] <TabAtkins>
Dammit, replaying linebreaks.

[09:54:00.0000] <Ms2ger>
DRM?

[09:54:01.0000] <TabAtkins>
Yes, latest email from Adrian Bateman.

[09:54:02.0000] <TabAtkins>
I just don't understand his sentence structure.

[09:54:03.0000] <gsnedders>
Yeah, I can't parse it at all.

[09:54:04.0000] <Ms2ger>
That's because you're not on a supported platform

[09:56:00.0000] <gsnedders>
[[(the way (that different sevices)) (often) (use) (different communication)] (means) (even when) (sharing) (the same (underlying) (protection) technology)]] maybe?

[09:56:01.0000] <gsnedders>
s/]]/]/

[09:56:02.0000] <TabAtkins>
Your diagramming is not enlightening.

[09:56:03.0000] <Ms2ger>
(different communication means)?

[09:57:00.0000] <annevk>
arv: ask heycam|away

[09:57:01.0000] <gsnedders>
Ms2ger: No, noun phrase followed by another noun phrase

[09:57:02.0000] <Ms2ger>
Why?

[09:57:03.0000] <gsnedders>
Ms2ger: Maybe a noun phrase pre-modifying another noun phrase, actually…

[09:57:04.0000] <gsnedders>
i.e., ((different communication) means)

[09:58:00.0000] <Ms2ger>
/me should not argue with linguists

[09:58:01.0000] <gsnedders>
Ms2ger: I can't tell you exactly for the very reason NLP is hard

[09:58:02.0000] <Ms2ger>
Is it NP-hard?

[09:59:00.0000] <Ms2ger>
TabAtkins, fwiw, hg rebase is known to delete random files occasionally

[09:59:01.0000] <gsnedders>
Depends on the language, but typically far harder, if it can indeed be solved by a Turing machine

[09:59:02.0000] <TabAtkins>
Ms2ger: Interesting.

[09:59:03.0000] <gsnedders>
(which is a questionable subject)

[09:59:04.0000] <TabAtkins>
I only know git rebase, so I assumed it was similar.

[10:00:00.0000] <Ms2ger>
I dunno, I presume git is at least as buggy :)

[10:00:01.0000] <TabAtkins>
Also, OMG only four more days: http://www.youtube.com/watch?v=bG2mdZ23eP8

[10:00:02.0000] <TabAtkins>
A lot of us in webkit use rebase workflows, and I havent' heard complaints, so shrug.

[10:00:03.0000] <gsnedders>
(English for example *likely* only parsable unambiguously by a machine more powerful than a Turing machine — probably an Oracle machine, or at least that's my opinion)

[10:01:00.0000] <TabAtkins>
So you're implying that humans can't parse english unambiguously?

[10:01:01.0000] <gsnedders>
TabAtkins: Yes.

[10:01:02.0000] <gsnedders>
TabAtkins: The fact humans often misunderstand each other suggests that.

[10:01:03.0000] <TabAtkins>
I would put out the alternative hypothesis that English is fundamentally ambiguous is some circumstances.

[10:02:00.0000] <Ms2ger>
http://24.media.tumblr.com/tumblr_m06xeh4nf21rqvy12o1_500.jpg < how did webkit memes get a picture of bz's brain?

[10:02:01.0000] <gsnedders>
TabAtkins: English is fundementally ambiguous in some circumstances, so you need an Oracle machine to unambiguously parse it.

[10:02:02.0000] <gsnedders>
(Which obviously is impossible)

[10:02:03.0000] <TabAtkins>
"Fundamentally ambiguous" does not jive with "unambiguous to a sufficiently powerful machine".

[10:03:00.0000] <gsnedders>
TabAtkins: An Oracle machine can solve the halting problem.

[10:03:01.0000] <TabAtkins>
Yes?

[10:03:02.0000] <TabAtkins>
The halting problem is perfectly solveable if you have infinite time.

[10:03:03.0000] <TabAtkins>
It's not ambiguous.

[10:03:04.0000] <gsnedders>
TabAtkins: An Oracle could determine intent, no?

[10:04:00.0000] <TabAtkins>
A TM could determine intent, no?

[10:04:01.0000] <gsnedders>
Only in a subset of cases.

[10:05:00.0000] <gsnedders>
(Adrian's sentence is likely a fragment, as far as I can tell, with only what should be an embedded clause present)

[10:05:01.0000] <TabAtkins>
You're asserting that intent determination is sometimes equivalent to the halting problem, rather than simply being ambiguous at times.

[10:05:02.0000] <TabAtkins>
I don't find that obvious.

[10:06:00.0000] <gsnedders>
TabAtkins: On the whole, intent can likely be solved using a TM, but in practically infeasible time, but such knowledge of psychology needed for it is likely beyond us.

[10:06:01.0000] <gsnedders>
But this is all massively theoretical.

[10:07:00.0000] <TabAtkins>
If we're talking about arbitrary brains, I'll agree with you.  But human brains probably require at most exponential simulations for a good reading of intent.

[10:07:01.0000] <TabAtkins>
And since human brains are limited in size, we're okay.

[10:07:02.0000] <TabAtkins>
exponential-in-the-size-of-the-mind

[10:07:03.0000] <gsnedders>
Ms2ger: Also, trying to parse stuff like that off the top of my head without paper to scribble on is hard :)

[10:07:04.0000] <gsnedders>
TabAtkins: Also likely related to time.

[10:08:00.0000] <gsnedders>
The older someone is the more knowledge they have to complicate it.

[10:08:01.0000] <gsnedders>
So it's not just the size of the mind, but what it can recall.

[10:08:02.0000] <TabAtkins>
Not if you're bruteforcing.  A hard-drive with more data isn't any heavier.

[10:09:00.0000] <gsnedders>
Right.

[10:10:00.0000] <TabAtkins>
I expect the whole-mind-simulation problem to break down in the next century at most.

[10:10:01.0000] <TabAtkins>
And from there it's an engineering problem to, for practical purposes, solve human psychology.

[10:10:02.0000] <gsnedders>
(A trivial and typical example of NLP being hard is a discourse of two people A and B, as follows: A: "Do you want to go for lunch?"; B: "Sorry, haven't got paid yet this week.")

[10:11:00.0000] <gsnedders>
How the two sentences relate is hard to computational determine

[10:11:01.0000] <gsnedders>
s/sentences/utterences/

[10:11:02.0000] <gsnedders>
TabAtkins: Leads to interesting questions of free-will, though.

[10:11:03.0000] <TabAtkins>
Free-will is an incoherent concept, so we're in the clear.

[10:12:00.0000] <gsnedders>
TabAtkins: How so? If the mind can be simulated, is it not inherently predicable? Yes, the system is that of the whole universe pretty much given inter-personal communication and subjects such as astronomy.

[10:13:00.0000] <gsnedders>
If it is entirely predicable, that implies there is no free-will, as every event within the mind in the future is predicable.

[10:13:01.0000] <TabAtkins>
The universe is a combination of deterministic and random processes. Nowhere in there is there space for free-will.  So, it doesn't exist.

[10:14:00.0000] <gsnedders>
Another hard problem with NLP is the effect of culture on a language.

[10:15:00.0000] <gsnedders>
An Indian English speaker will rarely say, "No", preferring "Yes, but [some reason for saying no

[10:15:01.0000] <gsnedders>
]"

[10:15:02.0000] <gsnedders>
If an English person said the same thing, it would imply they would do the action but without agreeing with it.

[10:16:00.0000] <gsnedders>
If an Indian person said it, it would imply they wouldn't do it.

[10:16:01.0000] <gsnedders>
That's a fairly radical difference.

[10:20:00.0000] <astearns>
the English version of "yes, but…" meaning "no" is "that's a good idea"

[10:21:00.0000] <TabAtkins>
"imma let you finish, but"

[10:21:01.0000] <gsnedders>
astearns: Nah, that depends on tone-of-voice.

[10:23:00.0000] <GPHemsley>
/me grumbles something about the W3C validator considering "HTML5 Validator Error" a single type...

[10:25:00.0000] <gsnedders>
(FWIW, I'm probably actually less interested in NLP than one might expect given my degree)

[10:26:00.0000] <TabAtkins>
Man, if it weren't for all the crazy stuff, SVG fonts would be pretty awesome.

[10:26:01.0000] <shepazu>
which specific crazy stuff?

[10:27:00.0000] <TabAtkins>
The fact that you can use all of SVG in a <glyph>.

[10:27:01.0000] <StoneCypher>
gsnedders: what's your degree?

[10:27:02.0000] <shepazu>
everyone has their own list of "crazy stuff"

[10:27:03.0000] <TabAtkins>
If it was just the basic geometry stuff and transforms, it'd be simple and great.

[10:27:04.0000] <Ms2ger>
StoneCypher, linguistics + CS

[10:28:00.0000] <StoneCypher>
ah.  neat.

[10:28:01.0000] <StoneCypher>
/me often wonders why that cluster of people doesn't generate more programming languages

[10:28:02.0000] <gsnedders>
StoneCypher: Technically English Language (i.e., linguistic study of English) & Computing Science, but for the former I'm mostly doing generic linguistics options.

[10:28:03.0000] <TabAtkins>
StoneCypher: They get too caught up in ambiguities.

[10:28:04.0000] <StoneCypher>
gsnedders: neat

[10:28:05.0000] <StoneCypher>
TabAtkins: makes sense

[10:29:00.0000] <miketaylr>
somehow i got put on an unremovable NLP mailing list from NYU...

[10:29:01.0000] <StoneCypher>
gsnedders: does that mean you have a special place in your heart for infocom games?

[10:29:02.0000] <TabAtkins>
shepazu: Thoughts about hosting SVG2 on XML-ER?

[10:29:03.0000] <gsnedders>
StoneCypher: Heh, not really.

[10:30:00.0000] <gsnedders>
StoneCypher: My main interest in them is actually more in the implementation.

[10:31:00.0000] <StoneCypher>
well

[10:31:01.0000] <StoneCypher>
there's an old language called AGT, or a more modern one called Inform 7, which may each be of interest

[10:31:02.0000] <StoneCypher>
inform has a fascinatingly deep debugger

[10:40:00.0000] <zewt>
miketaylr: the shorthand for "unremovable mailing list" is "spam", btw

[10:41:00.0000] <miketaylr>
heh

[10:41:01.0000] <Philip`>
Perl was explicitly influenced by linguistics, but that seems rarer in other languages

[10:42:00.0000] <zewt>
perl and one of the most absurd structures in programming: "x if y"

[10:42:01.0000] <zewt>
python, for some reason, decided to one-up it with "y if x else z"

[10:42:02.0000] <zewt>
it's like someone took yoda and stuck him in a blender

[10:43:00.0000] <Philip`>
Perl's version sounds perfectly natural if you want to emphasize the action over the condition

[10:44:00.0000] <zewt>
flow control should be written in order of evaluation

[10:44:01.0000] <Philip`>
If you want to emphasize the condition over the action, then you can do it that way too

[10:46:00.0000] <Philip`>
(Python's version seems much more rarely natural to me)

[10:46:01.0000] <zewt>
c's ternary expressions are much saner; python's are unnatural, hard to read and hard to write

[10:46:02.0000] <zewt>
the possible results are on the outside, sandwiching the condition in between--wtf?

[10:47:00.0000] <zewt>
"x()? 5: 2" is much easier to read (especially at a glance) than "5 if x() else 2"

[10:47:01.0000] <zewt>
every language has at least one wart; python has a couple, and that's one of them :)

[10:49:00.0000] <Philip`>
/me agrees about preferring ?:, though it might not hurt to have nicer syntax

[10:52:00.0000] <Philip`>
I think I use "x if y" most commonly in situations like 'print "foo: $foo\n" if $verbose;', where the condition would get in the way and disrupt the flow when reading the code if it was the most prominent thing on the line (or even worse if it was forced onto multiple lines)

[10:55:00.0000] <zewt>
that annoys me, because it means as I'm reading the code I'm thinking "it does A, B, C, then prints $foo, then"--then all stop because suddenly there's flow control retroactively injected into something earlier

[11:12:00.0000] <kennyluck>
Is test262 public to public submission?

[11:12:01.0000] <Ms2ger>
No

[11:12:02.0000] <Ms2ger>
ECMA members only

[11:12:03.0000] <Ms2ger>
My repo on bitbucket, otoh, is open to everyone ;)

[11:19:00.0000] <kennyluck>
Ms2ger, huh that sucks. Thanks for your redirection by the way.

[11:22:00.0000] <kennyluck>
Ms2ger, I couldn't find your js tests though. Do they fall under web-tests?

[11:22:01.0000] <Ms2ger>
Yeah

[11:23:00.0000] <Ms2ger>
There's only one of them, though :)

[11:36:00.0000] <bga>
http://www.w3.org/TR/css3-transforms/

[11:37:00.0000] <bga>
examples w/ errors

[11:37:01.0000] <bga>
.container > :last-child

[11:37:02.0000] <bga>
should be .container > ::last-child or .container :last-child

[11:38:00.0000] <kennyluck>
bga, I you can file the bug here → https://www.w3.org/Bugs/Public/enter_bug.cgi?product=CSS

[11:38:01.0000] <kennyluck>
s/I//

[11:38:02.0000] <TabAtkins_>
bga: ::last-child isn't a thing.

[11:38:03.0000] <bga>
ah

[11:39:00.0000] <TabAtkins_>
That example is completely correct.

[11:39:01.0000] <bga>
isnt pseudo element

[11:39:02.0000] <kennyluck>
ah, I missed that.

[11:43:00.0000] <TabAtkins_>
Sigh at Glenn trying (badly) to misdirect the conversation.

[11:43:01.0000] <TabAtkins_>
Bringing up a no-op DRM module as it was relevant to the concerns Henri's outlining? Really?

[11:45:00.0000] <TabAtkins_>
s/as/as if/

[11:46:00.0000] <Ms2ger>
DRM? Really?

[11:46:01.0000] <TabAtkins_>
Is that sarcasm?

[11:46:02.0000] <Ms2ger>
I hope the DRM proposal is sarcasm, if that's what you mean

[11:47:00.0000] <Ms2ger>
hsivonen, btw, did you review http://dvcs.w3.org/hg/webcomponents/raw-file/tip/spec/templates/index.html#parsing ?

[12:02:00.0000] <AryehGregor>
Ms2ger, the actual original Range-intersectsNode.html running in testharness.js times out, or some version adapted to mochitest does?

[12:03:00.0000] <Ms2ger>
Mochitest

[12:03:01.0000] <Ms2ger>
This might just be because I'm on a debug build

[12:04:00.0000] <AryehGregor>
Running the actual file takes like two or three seconds for me.

[12:04:01.0000] <AryehGregor>
50-whatever seconds seems amazingly excessive.

[12:05:00.0000] <AryehGregor>
I'm not sure I'm any better situated to debug the fact that it's taking a long time than you are.

[12:07:00.0000] <TabAtkins_>
Scumbag linux. >_<

[12:08:00.0000] <TabAtkins_>
nvidia

[12:08:01.0000] <TabAtkins_>
 /nvidia

[12:10:00.0000] <Ms2ger>
Blame nvidia

[12:10:01.0000] <Ms2ger>
Linux is FOSS, it can't be buggy

[12:14:00.0000] <gsnedders>
No, that's seL4.

[12:15:00.0000] <gsnedders>
(not that that is open-source)

[12:16:00.0000] <jamesr__>
Ms2ger, try some open source graphics drivers on linux for a laugh

[12:19:00.0000] <gsnedders>
How? My browser blacklists them.

[12:19:01.0000] <gsnedders>
:P

[12:37:00.0000] <jwalden>
kennyluck: test262 isn't even open to some ECMA members due to the legal-policy idiocy that's complicating submitting our existing tests to them :-\

[12:37:01.0000] <kennyluck>
how sad

[12:39:00.0000] <Ms2ger>
jwalden, btw, SM's score on my ES test suite is horrible ;)

[12:44:00.0000] <gsnedders>
Ms2ger: Your testsuite?

[12:45:00.0000] <Ms2ger>
Yeah, one test I wrote this week

[12:45:01.0000] <gsnedders>
I was more looking for URLs :P

[12:45:02.0000] <Ms2ger>
bitbucket.org/ms2ger/web-tests off the top of my head

[12:47:00.0000] <gsnedders>
Anyway to run it without clioning the repo?

[12:48:00.0000] <gsnedders>
/me is lazy

[12:48:01.0000] <gsnedders>
Or just tell me how we do :P

[12:49:00.0000] <kennyluck>
Ms2ger, let me guess…. SM scores 0 right? :p

[12:49:01.0000] <Ms2ger>
gsnedders, you pass everything, actually

[12:49:02.0000] <gsnedders>
Ms2ger: That's what I suspected, on the whole

[12:49:03.0000] <Ms2ger>
Heh

[12:50:00.0000] <gsnedders>
We tend to be good at following the spec in general.

[12:50:01.0000] <gsnedders>
The fact we were basically written against ES3.1 drafts probably helps compared with decade old engines. :)

[12:51:00.0000] <gsnedders>
/me wonders if Chakra development only started after ES5's publication.

[12:51:01.0000] <Ms2ger>
ms2ger.freehostia.com/tests/various/js/Array.prototype.join-order.html

[12:52:00.0000] <Ms2ger>
http://ms2ger.freehostia.com/tests/various/js/Array.prototype.join-order.html when Firefox is helpful

[12:52:01.0000] <Hixie>
anyone want to edit an http+aes:// url scheme spec?

[12:52:02.0000] <Ms2ger>
No

[12:52:03.0000] <Hixie>
i suppose i could just stick it in the HTML spec

[12:54:00.0000] <Hixie>
it's basically "do exactly what http says except decode the message body (after decoding any transfer-encoding applied to the entity body) using AES-CTR with the key given in the url"

[12:55:00.0000] <gsnedders>
Hixie: Isn't that practically another transfer-encoding?

[12:55:01.0000] <Hixie>
more or less

[12:55:02.0000] <Hixie>
but the key comes from the url

[12:55:03.0000] <Hixie>
so we can't use another t-e

[12:56:00.0000] <gsnedders>
Does RFC2616bis require a specific handling for userinfo, or could you use that?

[12:56:01.0000] <Hixie>
zewt: what's the spec out of sync with the whatwg spec that doesn't mention 'missed cues'?

[12:56:02.0000] <Hixie>
gsnedders: 2616 doesn't mention userinfo. haven't checked 2616bis.

[12:57:00.0000] <gsnedders>
Hixie: Well, yeah, when 2616 was written the URI spec didn't have such a concept.

[12:57:01.0000] <Hixie>
what's hte url for the latest http spec?

[12:58:00.0000] <gsnedders>
http://tools.ietf.org/wg/httpbis/

[12:59:00.0000] <Hixie>
christ

[12:59:01.0000] <Hixie>
what a mess

[12:59:02.0000] <gsnedders>
End of 2.7.1, in messaging

[13:00:00.0000] <Ms2ger>
Hixie, you must be new here

[13:00:01.0000] <zewt>
http://dev.w3.org/html5/spec/video.html vs http://www.whatwg.org/specs/web-apps/current-work/multipage/the-video-element.html

[13:01:00.0000] <gsnedders>
Hixie: Using userinfo and t-e seems cleaner than using a new scheme, IMO

[13:01:01.0000] <Hixie>
gsnedders: oh, interesting approach

[13:02:00.0000] <gsnedders>
(I could be speaking of something infeasible here, I've been in JS-land for a while.)

[13:02:01.0000] <Hixie>
zewt: dunno how you got that dev.w3.org url, but that's an ancient file

[13:02:02.0000] <Hixie>
zewt: you want http://dev.w3.org/html5/spec/media-elements.html

[13:03:00.0000] <zewt>
Hixie: then it should be removed, since that's where I've ended up every time I've viewed that spec in a long time

[13:03:01.0000] <Ms2ger>
Hixie, http://dev.w3.org/html5/spec/, click "the video element"

[13:03:02.0000] <Hixie>
zewt: ask mike?

[13:03:03.0000] <zewt>
i just type "video" in firefox to get there

[13:03:04.0000] <Ms2ger>
Oh

[13:03:05.0000] <Ms2ger>
Nvm me

[13:03:06.0000] <Ms2ger>
The bug is assigned to Mike, IIRC

[13:04:00.0000] <Hixie>
anyway, use the single-page whatwg copy, you'll avoid these problems :-)

[13:04:01.0000] <zewt>
Hixie: that hardly addresses the problem

[13:04:02.0000] <Ms2ger>
Then you've just got other problems :)

[13:04:03.0000] <Hixie>
gsnedders: finally got there...

[13:04:04.0000] <Hixie>
but lunch now

[13:04:05.0000] <zewt>
as much as people say "use the editor's drafts", TR's are still a problem

[13:04:06.0000] <Hixie>
bbl

[13:27:00.0000] <Velmont>
Ms2ger: SYNTAX_ERR is legacy, SyntaxError is new. -- And I think the old code didn't test for name, -- and new should test for type=SyntaxError.

[13:52:00.0000] <TabAtkins_>
Oh jeez, my computer's broken now.

[13:52:01.0000] <TabAtkins_>
Wedged in some inconsistent state after attempting to update graphics drivers.

[13:53:00.0000] <zewt>
fyture

[13:53:01.0000] <zewt>
f

[13:53:02.0000] <zewt>
future

[14:12:00.0000] <bga>
http://www.fxitech.com/products/

[14:32:00.0000] <Hixie>
gsnedders: i think requiring CDNs to send transfer encoding headers may be too high a bar

[14:39:00.0000] <TabAtkins_>
Okay.  All done.  Back to where I was before, I think.  And now Chrome has its accelerated compositing disabled, so my browsing won't be interrupted by a transforms-heavy page crashing metacity.

[14:54:00.0000] <Hixie>
how do you even refernece this httpbis beast

[14:54:01.0000] <TabAtkins_>
in verse

[15:10:00.0000] <jamesr__>
TabAtkins_, how do i make a new CSSRule to stick in this list?

[15:11:00.0000] <TabAtkins_>
That's an excellent question.

[15:11:01.0000] <jamesr__>
lawl "To parse a CSS rule ..."

[15:11:02.0000] <jamesr__>
http://dvcs.w3.org/hg/cssom/raw-file/tip/Overview.html/#parse-a-css-rule

[15:12:00.0000] <jamesr__>
ok i'm pretty sure i inserted a rule but nothing happened

[15:13:00.0000] <TabAtkins_>
Just insert a <style> and set its textContent.

[15:13:01.0000] <TabAtkins_>
Fuck all the rest.

[15:14:00.0000] <TabAtkins_>
Every part of the CSSOM is horrible.

[15:28:00.0000] <Hixie>
zewt: why https://www.w3.org/Bugs/Public/show_bug.cgi?id=16157 ?

[15:34:00.0000] <Hixie>
"I'm not talking about any kind of lock-in" coming from someone pushing a DRM scheme is rather hard to swallow

[15:39:00.0000] <zewt>
Hixie: because the failure cases is too exceptional, and will lead to too much buggy code

[15:39:01.0000] <zewt>
also, are

[15:40:00.0000] <zewt>
also, most of the time there's nothing sane you can do in response to that exception anyway, except to manually remove the unpaired surrogates and try again

[15:42:00.0000] <Hixie>
you should never hit that exception unless you have a pretty fundamental design bug

[15:42:01.0000] <Hixie>
in the latter case you'll hit it relatively early in the design

[15:42:02.0000] <Hixie>
(if you're not unlucky)

[15:42:03.0000] <zewt>
it'll happen if the user pastes in an unpaired surrogate, or if you try to chop off the first 100 letters of user-entered text naively, etc

[15:42:04.0000] <Hixie>
the user can't paste in unpaired surrogates

[15:43:00.0000] <Hixie>
your latter point is an interesting one though

[15:43:01.0000] <zewt>
sure he can, at least in firefox last i tried it (maybe around 6 or 7)

[15:43:02.0000] <Hixie>
file a bug on firefox, that's a bug

[15:43:03.0000] <zewt>
but granted that's a rare case

[15:49:00.0000] <Hixie>
hmmm

[15:49:01.0000] <Hixie>
Path and 2DRContext

[15:50:00.0000] <Hixie>
i don't want to duplicate all this material in both interface blocks

[15:50:01.0000] <Hixie>
[NoInterfaceObject] and foo implements bar; results in the same as just copying the idl in both places right?

[15:51:00.0000] <Hixie>
i wonder if i should do an idl block for each related block of content, or if i should just have one big one imported twice

[15:51:01.0000] <Hixie>
i'm gonna reuse the transformation stuff for patterns, so probably at least some smaller-sized blocks would make sense...

[15:52:00.0000] <Hixie>
this is gonna be a pain to spec


2012-03-03
[16:16:00.0000] <Hixie>
ok i failed to do canvas today. will try again monday. :-)

[16:38:00.0000] <Yuhong>
annevk: When Opera has to reparse XML as text/html, I suggest the reparse be done with *scripting disabled*.

[16:52:00.0000] <Velmont>
Yuhong: Why?

[17:26:00.0000] <Yuhong>
XSS attacks.

[17:33:00.0000] <danielfilho>
I can only receive the emails from whatwg mail list if I work for a w3c member organization? :(

[17:33:01.0000] <danielfilho>
oh, sorry. just found the other way :D

[22:15:00.0000] <[tm]>
jgraham: will get it set up but please remind me later if I forget

[22:17:00.0000] <MikeSmith>
jgraham: I think I can probably set up a commit hook that will cause a push to github too every time somebody pushes to dvcs.w3.org

[23:32:00.0000] <MikeSmith>
zewt: http://dev.w3.org/html5/spec/video.html redirects to http://dev.w3.org/html5/spec/the-video-element.html now

[00:03:00.0000] <GPHemsley>
What's the story with WebVTT? Is it being actively maintained?

[00:04:00.0000] <GPHemsley>
And how is the language content tagged? I don't seen any @lang equivalents.

[00:07:00.0000] <GPHemsley>
For example, I wonder how the video in this post might be subtitled/tagged: http://hacks.mozilla.org/2012/02/mozillas-boot-to-gecko-the-web-is-the-platform/

[00:08:00.0000] <GPHemsley>
(The first video. It has interviews with many people in many different languages, and it is not graphically subtitled or translated.)

[03:07:00.0000] <annevk>
http://dvcs.w3.org/hg/encoding/raw-file/tip/Overview.html#utf-8-decoder

[03:07:01.0000] <annevk>
as a replacement for

[03:07:02.0000] <annevk>
http://www.whatwg.org/specs/web-apps/current-work/multipage/infrastructure.html#utf-8

[04:06:00.0000] <gsnedders>
Hixie: Still, specifying something like http+aes is probably done better somewhere where server people are as well as (a small number of) client people are.

[05:14:00.0000] <Ms2ger>
http://www.w3.org/TR/css-style-attr/ "this specification will not exit CR before 14 November 2010."

[05:14:01.0000] <Ms2ger>
That seems to have turned out to be correct

[05:31:00.0000] <annevk>
haha

[05:33:00.0000] <annevk>
"I want to do the simplest thing possible" "How about adding this other redundant thing too?" "..."

[05:54:00.0000] <Ms2ger>
Is const in any ES spec already?

[06:20:00.0000] <Ms2ger>
"This test ensures WebGL implementations correctly implement compressedTexImage2D and compressedTexSubImage2D."

[06:20:01.0000] <Ms2ger>
That's the only mention of "compressedTexSubImage2D" in the file

[06:42:00.0000] <MikeSmith>
jgraham: as far as getting automatic mirroring set up, hg-git is giving me nothing but grief right now

[06:42:01.0000] <MikeSmith>
so I'm giving up for now and will try again later

[06:43:00.0000] <MikeSmith>
# hg push git+ssh://git⊙gc:w3c/html-testsuite.git

[06:43:01.0000] <MikeSmith>
pushing to git+ssh://git⊙gc:w3c/html-testsuite.git

[06:43:02.0000] <MikeSmith>
importing Hg objects into Git

[06:43:03.0000] <MikeSmith>
creating and sending data

[06:43:04.0000] <MikeSmith>
error: index-pack died of signal 11

[06:47:00.0000] <annevk>
I wish browsers would implement :any-link or some such already

[06:47:01.0000] <annevk>
typing :link:hover, :visited:hover is anoying

[06:47:02.0000] <zewt>
annevk: the :before for "note" is really annoying in Firefox, since you can't select the entire note, btw

[06:48:00.0000] <zewt>
(in encoding, at least)

[06:48:01.0000] <Ms2ger>
Well, you can't select the generated content

[06:48:02.0000] <zewt>
right; firefox bug but annoying to be triggering it

[06:49:00.0000] <annevk>
.note is a pretty universal thing though

[06:49:01.0000] <annevk>
so if you want that changed we'd have to change it across all specs

[06:49:02.0000] <zewt>
annevk: "Pre-processing is required ..." might be nice to mention webidl's domstring->unicode conversion there as an example (since it'll probably be the most common preprocessor)

[06:49:03.0000] <annevk>
the most common is form submission I think

[06:49:04.0000] <zewt>
havn't noticed it before; maybe I really havn't tried to copy a note before

[06:50:00.0000] <annevk>
wherey ou use entities

[06:50:01.0000] <zewt>
annevk: i mean the most common case where other specs need to do that

[06:50:02.0000] <annevk>
ah mkay

[06:50:03.0000] <zewt>
(not the most commonly-triggered by users)

[06:50:04.0000] <annevk>
hacking on an IRC logging service now

[06:50:05.0000] <annevk>
maybe email or file a bug?

[06:50:06.0000] <zewt>
hack a one-click bug filing thing into the IRC log :P

[06:53:00.0000] <zewt>
heh what's this weird muddy blob on https://www.w3.org/Bugs/Public/

[06:53:01.0000] <zewt>
it literally made me change tabs because my eyes went "there's something smeared on the monitor"

[07:02:00.0000] <annevk>
zewt: we have a plan to allow people to plug web services into the bot

[07:02:01.0000] <annevk>
or to expose some kind of API for it you can talk to over HTTP

[07:47:00.0000] <annevk>
zewt: actually, where pre-processing is mentioned it's something that most specs won't use

[07:48:00.0000] <annevk>
well I guess it doesn't really matter, but the intent was mostly about encodings that cannot represent the code points

[07:48:01.0000] <zewt>
don't follow

[07:49:00.0000] <zewt>
if you have a DOMString and you want to convert to UTF-8, WebIDL defines how to get Unicode out of it (including dealing with unpaired surrogates), and I assume the output of that is the input to the UTF-8 encoder

[07:49:01.0000] <annevk>
e.g. form submission to iso-8859-1 would require escaping characters not in the windows-1252 range

[07:50:00.0000] <zewt>
(plus recombining valid surrogates, of course, which people will want to do anyway)

[07:50:01.0000] <annevk>
yeah, that's noteworthy too, just something distinct from what I initially meant

[07:52:00.0000] <zewt>
that aside, it might be good to have a definition like "convert a DOMString to UTF-8" that just combines the two

[07:53:00.0000] <zewt>
(assuming that's the behavior that APIs standardize on; not sure if hixie's made a decision there yet)

[07:55:00.0000] <annevk>
ah yeah

[07:55:01.0000] <annevk>
Web IDL has to do that then

[07:55:02.0000] <annevk>
not gonna make Encoding depend on much

[07:58:00.0000] <Ms2ger>
"convert a DOMString to a sequence of Unicode characters" is just a forgiving utf-16 decoder, no?

[07:58:01.0000] <zewt>
yep

[08:04:00.0000] <jgraham>
MikeSmith: I ignored all the hg push git+ssh stuff

[08:04:01.0000] <jgraham>
And just used hg gexport

[08:04:02.0000] <jgraham>
and git push

[08:05:00.0000] <jgraham>
hg bookmark -fr default master

[08:05:01.0000] <jgraham>
hg gexport

[08:05:02.0000] <jgraham>
git push [repo name]

[08:05:03.0000] <[tm]>
jgraham: I know nothing about that but will try out later

[08:06:00.0000] <jgraham>
Ms2ger: Did you just typo the word "typo" in a bug about a typo?

[08:06:01.0000] <[tm]>
hg-git is a fail man

[08:06:02.0000] <jgraham>
[tm]: http://www.bluishcoder.co.nz/2011/02/10/git-conversion-of-mozilla-central.html is what I followed

[08:07:00.0000] <jgraham>
More or less

[08:07:01.0000] <[tm]>
jgraham: thanks

[08:08:00.0000] <[tm]>
and thanks doublec i assume

[08:08:01.0000] <Ms2ger>
jgraham, obviously intentionnaly

[08:08:02.0000] <jgraham>
(see also the followup post on the workflow to commit patches; I guess this makes using pull requests a bit difficult

[08:08:03.0000] <jgraham>
)

[08:09:00.0000] <Ms2ger>
/me grumbles about WebGL

[08:10:00.0000] <jgraham>
http://blog.mozilla.com/halfire/2012/03/02/dvcs-survey-summary/ is also mildly interesting in that it suggests that the Mozilla folks might have to work on a solution for this

[08:48:00.0000] <[tm]>
http://www.marriedtothesea.com/011210/record-wishes.gif

[09:39:00.0000] <Hixie>
"Our business wouldn't be viable at all without regional restrictions" o_O

[09:40:00.0000] <Ms2ger>
That sounds like DRM

[09:41:00.0000] <Ms2ger>
(Yet another reason to send public-html straight to /dev/null)

[09:44:00.0000] <wilhelm>
I've done some work recently for a Scandiavian music streaming company. They have separate deals with the record companies for each country they have customers in. And they launch to one country at the time.

[09:45:00.0000] <Ms2ger>
Are you even allowed to tell us that? ;)

[09:45:01.0000] <Ms2ger>
Hi sicking

[09:46:00.0000] <wilhelm>
Most of the above should be public knowledge. (c:

[09:46:01.0000] <wilhelm>
It's puzzling to see how the entire entertainment industry seems to work like that.

[09:48:00.0000] <Hixie>
from talking with Mark about this it sounds to me like NetFlix actually _wants_ the movie/tv industry to do licenses like this

[09:48:01.0000] <jgraham>
Well presumably it is mostly, but not entirely, a historical artifact

[09:49:00.0000] <jgraham>
But it might be a good thing for the industry because it means that you can vary the prices somewhat

[09:49:01.0000] <jgraham>
rather than having to have a uniform global price

[09:50:00.0000] <wilhelm>
There seems to be a ~20% difference between Swedish and Norwegian subscription fees in this particular case.

[09:54:00.0000] <zewt>
well, because markets will bear higher prices in different regions, so they want tech to help them do that

[09:55:00.0000] <zewt>
(i've been there, and while I "get" it, I sure as hell don't expect the open Web to assist it)

[09:56:00.0000] <zewt>
http://www.amazon.com/dp/B005HWAOOI http://www.amazon.co.jp/dp/B00329NVYS US: $51 JP: $545 o_O

[09:57:00.0000] <zewt>
(to take the most extreme example I'm aware of)

[09:57:01.0000] <wilhelm>
Indeed.

[09:58:00.0000] <jgraham>
wilhelm: Well there also ahppens to be a ~20% difference between 1NOK and 1SEK, so that example isn't entirely helpful

[09:59:00.0000] <zewt>
(note--the extreme example is that entire genre; that particular example is not even slightly an isolated case)

[10:00:00.0000] <wilhelm>
jgraham: The Danish price is 50% lower, for some reason. (c:

[10:00:01.0000] <zewt>
it's sort of funny how Canadian prices still tend to be higher than USD prices, even though the CAD is above the USD now

[10:01:00.0000] <wilhelm>
I fully agree with Hixie's response to the proposal. But I am worried what those companies will do if the proposal is shot down.

[10:02:00.0000] <jgraham>
wilhelm: Well I don't know which scandinvian music service you are working for, but spotify at least seems to be 99 DNK|NOK|SEK or 9.99 GBP|USD

[10:03:00.0000] <jgraham>
Which is a huge variation in price (almost 100% between USD and NOK), but clearly set by marketing

[10:03:01.0000] <zewt>
gbp and usd aren't even close to 1:1, either

[10:04:00.0000] <jgraham>
Nope

[10:04:01.0000] <zewt>
that's enough of a difference to encourage people in britain to proxy through the US (or it would if it wasn't a fairly small amount of money to begin with)

[10:06:00.0000] <jgraham>
I guess that proxying isn't going to improve the quality of service, or likely work with mobile devices

[10:06:01.0000] <jgraham>
Although maybe the same people who will break the ToS by using a proxy have all rooted their phones

[10:06:02.0000] <zewt>
it encourages people to find a way

[10:07:00.0000] <jgraham>
Maybe

[10:07:01.0000] <zewt>
just as people in japan are (much more strongly) encouraged to re-import anime from the US, since it's ridiculously cheaper

[10:07:02.0000] <zewt>
(which is why DVD/BD region locks exist)

[10:08:00.0000] <jgraham>
I am not the best person to talk here since I don't even do the view-iPlayer-via-a-UK-proxy thing even though it is rather common (and I would happily pay the BBC substantial money every year to be allowed to do so, but apparently they only want my money if I also bought an iPad)

[10:09:00.0000] <zewt>
i don't think anyone in here is disagreeing about anything, anyway :)

[10:09:01.0000] <jgraham>
s/to do so/to watch their content/

[10:10:00.0000] <jgraham>
Probably not, I just want to rant about the stupid "you can watch some iPlayer content from Sweden, but only on the iPad" policy

[10:14:00.0000] <zewt>
i expect every single "you can only watch this in *random weird configuration*" spawns from some publisher/distributor contract somewhere

[11:48:00.0000] <Philip`>
"I am worried what those companies will do if the proposal is shot down" - clearly the best approach to achieve the desired result is to pretend to be enthusiastic about the proposal, and then sabotage it by making it as complex and unwieldy as possible and slowing down the development as much as possible

[11:48:01.0000] <Philip`>
The first step is to ensure progress can only be made during fortnightly telecons

[11:50:00.0000] <zewt>
... and really, what worse could they do than closing the web platform, which is implied by any kind of DRM, heh

[11:52:00.0000] <Ms2ger>
Philip`, pff, they're way better at accomplishing that than we would ever be

[11:53:00.0000] <yuhong>
Funny Picture: How to tell HTML(4) from HTML5:

[11:53:01.0000] <yuhong>
http://geekmontage.com/funny-picture-how-to-tell-html-from-html5/

[11:53:02.0000] <yuhong>
Now, think about how would you tell HTML6 from HTML5.

[11:55:00.0000] <yuhong>
Not to mention what if the client thinks a browser support "HTML5" but don't support for example <BDI> even though the browser claims to support "HTML5".

[11:57:00.0000] <yuhong>
Not to mention what if the client thinks a browser support "HTML5" but don't support for example <BDI> even though it is part of "HTML5'.

[12:00:00.0000] <yuhong>
Eventually IE8 will become obsolete and all browsers will support "HTML5".

[13:53:00.0000] <kennyluck>
heh. When the TR/ spec is newer than the dev.w3.org one, which do you link to?

[13:53:01.0000] <Ms2ger>
dev

[13:53:02.0000] <kennyluck>
I am taking about the DeviceOrientation Event spec → http://www.w3.org/TR/orientation-event/

[13:54:00.0000] <kennyluck>
I don't understand how could this happen.

[13:55:00.0000] <Ms2ger>
You make the last edit to dev on Friday

[13:55:01.0000] <Ms2ger>
Publication happens next Tuesday

[13:55:02.0000] <Ms2ger>
TR/ has the publication data

[13:55:03.0000] <Ms2ger>
date, even

[13:55:04.0000] <kennyluck>
ah, makes sense.

[13:57:00.0000] <kennyluck>
(though it doesn't quite explain why the TR orientation-event is 1 December 2011 and the dev is http://dev.w3.org/geo/api/spec-source-orientation.html)

[13:58:00.0000] <kennyluck>
12 July 2011

[13:58:01.0000] <Ms2ger>
Heh

[13:58:02.0000] <Ms2ger>
Incompetence?

[14:01:00.0000] <kennyluck>
I guess I can no longer trust the pub date on a TR document. Perhaps that wasn't put on by the editor...

[14:01:01.0000] <Ms2ger>
s/the pub date on//

[14:02:00.0000] <annevk>
kennyluck: sometimes the PR team forgets

[14:02:01.0000] <annevk>
kennyluck: also sometimes the webmaster is delayed and they go with the original date anyway, sometime the webmaster forgets but updates the date

[14:02:02.0000] <annevk>
kennyluck: there's not much consistency in publishing

[14:02:03.0000] <annevk>
kennyluck: apart from it taking a long time

[14:03:00.0000] <Ms2ger>
But it not being as bad as the IETF

[14:04:00.0000] <kennyluck>
annevk, I don't think the webmaster should change the the date. That seems wrong. But anyway.

[14:04:01.0000] <annevk>
or the Chair will do it

[14:05:00.0000] <annevk>
e.g. for http://www.w3.org/TR/XMLHttpRequest/ I think the date I put on was January 10

[14:06:00.0000] <kennyluck>
7 days huh? It's 5 months different for orientation-event → http://www.w3.org/TR/orientation-event/

[14:08:00.0000] <annevk>
http://dev.w3.org/cvsweb/geo/api/spec-source-orientation.html shows that's more a problem of the editor's not doing their job

[14:09:00.0000] <Ms2ger>
<a href="#ref-domevents" shape=rect>

[14:10:00.0000] <fr00d>
Hello

[14:11:00.0000] <fr00d>
I'd like to setup my own validator of validator.w3.org. I'd like to know if I really need libxml 2.7.7 like I thin it's mentioned in "check" perl script?

[14:12:00.0000] <annevk>
this is the right channel for questions about http://about.validator.nu/

[14:12:01.0000] <annevk>
well, I guess MikeSmith might be able to help with validator.w3.org

[14:12:02.0000] <sicking>
Ms2ger: hey there, you pinged

[14:12:03.0000] <annevk>
but I think he's still asleep

[14:12:04.0000] <Ms2ger>
sicking, so about RangeException :)

[14:13:00.0000] <sicking>
Ms2ger: i already reviewed that patch

[14:13:01.0000] <Ms2ger>
And the new patch?

[14:13:02.0000] <sicking>
arg

[14:13:03.0000] <Ms2ger>
How dare these people, writing patches!

[14:15:00.0000] <sicking>
Ms2ger: well.. it's really annoying to spend time reviewing a cleanup patch and then have to redo it

[14:15:01.0000] <sicking>
Ms2ger: i have no idea what has changed since the last patch

[14:17:00.0000] <Ms2ger>
sicking, fixed tabs and split out the raises stuff, apparently

[14:18:00.0000] <Ms2ger>
No rereview necessary, indeed

[14:53:00.0000] <annevk>
http://blog.mozilla.com/theden/2012/02/24/making-android-awesome-with-the-awesome-screen/ doesn't actually explain the feature...

[14:54:00.0000] <annevk>
not knowing what "Awesome Screen" is that page doesn't actually make a compelling argument for it

[15:04:00.0000] <jgraham>
annevk: Sounds like it is just a "speed dial" that is prepopulated with your most visited sites

[15:05:00.0000] <jgraham>
it might not be ofc, but if not the page is even worse than you suggest


2012-03-04
[19:11:00.0000] <[tm]>
fr00d: I don't really know what all is involved in setting up a local install of validator.w3.org but I recommend you set up a local validator.nu instead

[00:33:00.0000] <fr00d>
[tm]: But validator.nu is only a html validator, am I right? What I'd like to have is an xhtml validator.

[00:43:00.0000] <[tm]>
fr00d:  validator.nu can do xhtml too

[02:47:00.0000] <MikeSmith>
jgraham: OK, I appear to have automatic pushing from of the html testsuite repo from dvcs.w3.org to github working now

[03:09:00.0000] <Ms2ger>
MikeSmith, instead of all the whitespace changes, you could have written tests ;)

[04:08:00.0000] <jgraham>
MikeSmith: Awesomeness!

[04:09:00.0000] <jgraham>
beers_owed_to_MikeSmith++

[04:13:00.0000] <Ms2ger>
/me tries to figure out what MikeSmith broke

[04:16:00.0000] <[tm]>
Ms2ger:  did I break something?

[04:16:01.0000] <Ms2ger>
I've got two heads here

[04:17:00.0000] <[tm]>
ah shit

[04:17:01.0000] <Ms2ger>
http://dvcs.w3.org/hg/html/shortlog/8255270800fe

[04:18:00.0000] <Ms2ger>
You somehow managed to duplicate everything up to plh's last commit

[04:19:00.0000] <[tm]>
wonderful

[04:20:00.0000] <Ms2ger>
Need to strip 38ec852cc21d, I think

[04:34:00.0000] <MikeSmith>
Ms2ger: OK

[04:41:00.0000] <MikeSmith>
Ms2ger: OK, stripped

[04:41:01.0000] <MikeSmith>
try again now

[04:42:00.0000] <MikeSmith>
(no idea how I did that)

[04:43:00.0000] <Ms2ger>
Blame hg-git :)

[04:43:01.0000] <MikeSmith>
ah

[04:43:02.0000] <MikeSmith>
yeah

[04:44:00.0000] <Ms2ger>
Looks better

[04:44:01.0000] <MikeSmith>
OK

[05:39:00.0000] <smaug____>
/me is having hard time to understand how CDM plugin's scope would be much smaller than NPAPI

[06:12:00.0000] <MikeSmith>
Ms2ger: when you do your next commit to the HTML testsuite repo, if you get any error messages, lemme now

[06:12:01.0000] <MikeSmith>
*know

[06:13:00.0000] <Ms2ger>
Will do, thanks

[08:35:00.0000] <Ms2ger>
Hmm, François has an interesting definition of "reality"

[08:54:00.0000] <gsnedders>
http://dojotoolkit.org/features/mobile — Mobile = "modern webkit-enabled mobile devices"

[08:54:01.0000] <gsnedders>
le sigh.

[08:55:00.0000] <[tm]>
Ms2ger: url?

[08:56:00.0000] <Ms2ger>
http://lists.w3.org/Archives/Public/www-style/2012Mar/0059.html

[09:12:00.0000] <Philip`>
Reality is purely subjective

[09:14:00.0000] <Philip`>
so you can't really complain that other people's realities are wrong, except that you can because you just define their wrongness as part of your reality, so that's okay

[09:17:00.0000] <kennyluck>
Quoting interesting sentences is my reality

[09:34:00.0000] <smaug____>
/me fully agrees with TabAtkins_. "A plugin system for CDMs offers no improvement over the current state of affairs, where plugins (Flash or Silverlight, generally) are commonly used to play video."

[09:40:00.0000] <gsnedders>
smaug____: Further, the openness of those vendors to third-party ports is known.

[12:01:00.0000] <Ms2ger>
Ah, look, D3E is moving again

[15:09:00.0000] <smaug____>
Sounds like some MS developer may think about some other web "the needs of an open web"

[15:17:00.0000] <annevk>
lets all use the same words but mean something else by then

[15:17:01.0000] <annevk>
m*


2012-03-05
[23:04:00.0000] <hsivonen>
TabAtkins_: I think it's insulting that they keep saying that anyone can implement clearkey as if Boris and I were dumb enough to accept that as addressing our concerns.

[23:19:00.0000] <Hixie>
clearkey is a red herring. the spec has a better solution to the problem clearkey solves.

[23:45:00.0000] <charlvn>
does anyone have a url for clearkey? googled but found a bunch of other stuff that doesn't seem to be related to tech or standards

[00:38:00.0000] <hsivonen>
charlvn: http://dvcs.w3.org/hg/html-media/raw-file/tip/encrypted-media/encrypted-media.html#simple-decryption-clear-key

[00:40:00.0000] <hsivonen>
great. ISO/IEC 23001-7:2012 is not available for HTTP GET without 74 CHF

[00:41:00.0000] <hsivonen>
does an mkv equivalent of ISO Common Encryption exist?

[00:41:01.0000] <hsivonen>
it seems Matroska does have encryption hooks for DRM

[00:44:00.0000] <MikeSmith>
hsivonen: found http://www.3gpp.org/ftp/Inbox/LSs_from_external_bodies/ISO_IEC_JTC1_SG29_WG11/29n12316.zip

[00:46:00.0000] <hsivonen>
MikeSmith: thanks

[00:46:01.0000] <hsivonen>
I wonder if that's an RF spec

[00:47:00.0000] <hsivonen>
what's the main benefit of putting AES-CTR inside the container as opposed to encrypting the whole file using AES-CTR?

[01:25:00.0000] <hsivonen>
I'm rather annoyed that it took this long in the thread for the requirement of integrating with ISO Common Encryption to show up

[02:07:00.0000] <charlvn>
hsivonen: thanks!

[02:45:00.0000] <annevk>
reading is hard

[02:45:01.0000] <annevk>
this time it's not me, but some guy on ietf-http-wg though

[04:28:00.0000] <matjas>
was `document.scripts` specced before “HTML5”? http://www.whatwg.org/specs/web-apps/current-work/multipage/dom.html#dom-document-scripts

[04:30:00.0000] <hsivonen>
matjas: if it had been, it would probably have a more complicated name than "scripts"

[04:30:01.0000] <matjas>
hah

[04:50:00.0000] <hsivonen>
hmm. no new champions in http://www.ie6countdown.com/champions.aspx in January and February

[05:03:00.0000] <annevk>
https://twitter.com/molily/status/176652243901222912

[05:04:00.0000] <annevk>
What else is somewhat bad?

[05:30:00.0000] <zcorpan>
http://www.whatwg.org/specs/web-apps/current-work/multipage/semantics.html#attr-link-href - why is this non-empty URL? <a> allows empty

[05:36:00.0000] <hsivonen>
Do I interpret this right: https://twitter.com/#!/johnfoliot/status/176323582195023872 JF doesn't want users to have the right to run a speech recognizer on Netflix audio, because supporting such right would acknowledge that Netflix might not always provide human-written captions

[05:37:00.0000] <hsivonen>
and JF wants to insist that Netflix must provide human-written captions

[05:46:00.0000] <jgraham>
hsivonen: Do you feel you get value out of arguing with JF?

[06:46:00.0000] <woef>
Does anyone know why Safari has a non-conform UA string?

[06:47:00.0000] <woef>
Other browsers have "Browser/versionnr"

[06:47:01.0000] <woef>
While Safari has "Version/versionnr Safari/webkitversion"

[06:51:00.0000] <hsivonen>
woef: probably because they first put a non-marketing version after Safari/ and by the time they wanted to put a marketing version in the UA string, too, sites already depended on the non-marketing version after Safari/

[06:53:00.0000] <woef>
Annoying though, makes it hard to get decent stats from GA.

[06:53:01.0000] <woef>
Guess they won't change it anytime soon then.

[06:53:02.0000] <Philip`>
Why can't GA just parse the UA string in an appropriate way?

[06:53:03.0000] <woef>
Make an exception for Safari?

[06:54:00.0000] <woef>
You'll have to ask Google I guess :)

[06:54:01.0000] <woef>
Other browsers all work in the same way.

[06:54:02.0000] <woef>
Browser/version nr

[06:55:00.0000] <Philip`>
Opera doesn't

[06:56:00.0000] <Philip`>
Any attempt to treat UA strings as anything other than opaque string templates with occasional optional/version-dependent tokens seems doomed to failure

[07:48:00.0000] <zcorpan>
http://dev.w3.org/html5/html4-differences/Overview.src.html has lots of new text, review much appreciated :-)

[07:49:00.0000] <zcorpan>
commit log http://dev.w3.org/cvsweb/html5/html4-differences/Overview.src.html

[07:49:01.0000] <annevk>
oh shall I generate a copy for you?

[07:50:00.0000] <zcorpan>
sure

[07:50:01.0000] <zcorpan>
i might take a stab at https://www.w3.org/Bugs/Public/show_bug.cgi?id=13463 tonight also

[07:50:02.0000] <annevk>
hmm

[07:50:03.0000] <annevk>
isindex not defined

[07:51:00.0000] <zcorpan>
http://www.whatwg.org/specs/web-apps/current-work/multipage/tree-construction.html#isindex ?

[07:52:00.0000] <zcorpan>
oh

[07:52:01.0000] <zcorpan>
it should point to http://www.whatwg.org/specs/web-apps/current-work/multipage/obsolete.html#isindex-0 no?

[07:53:00.0000] <annevk>
the term database is missing lots of terms

[07:54:00.0000] <annevk>
this might be a nice distraction from studying gb18030 though

[07:59:00.0000] <annevk>
ms2ger: feature request, find out all the undefined terms in a document rather than just the first

[08:01:00.0000] <bga>
annevk is opera userjs events available in nonuserjs?

[08:02:00.0000] <bga>
im interesting about onBeforeScropt/onAfterScript

[08:02:01.0000] <jgraham>
No. Unless there is a bug.

[08:03:00.0000] <rahaman>
Hi all...i need one clarification reg how to specify the border attributes for <td> element, some time back I had sent an email on the same..

[08:03:01.0000] <rahaman>
can any one please help me out ?

[08:06:00.0000] <annevk>
bga: what do you want them for?

[08:06:01.0000] <annevk>
bga: we were thinking of adding the events in HTML, but the use cases seem somewhat unclear

[08:07:00.0000] <bga>
i see

[08:17:00.0000] <annevk>
where did zcorpan go?

[08:35:00.0000] <Hixie>
annevk: just do a cg for the encoding thing

[08:36:00.0000] <annevk>
my employer prefers WGs

[08:53:00.0000] <Hixie>
hsivonen: i don't see a requirement anywhere to encrypt the frames rather than the entire stream

[08:54:00.0000] <Hixie>
hsivonen: the only requirement that was raised similar to that was that some formats use a manifest that itself points to the streams on the CDN that _are_ encrypted, but that's handled by this proposal -- you just put the http+aes urls in the manifest instead of http: urls

[09:19:00.0000] <AryehGregor>
Yay, the CSSWG switched to hg just in time.

[09:19:01.0000] <AryehGregor>
Looks like I won't have to learn CVS after all.

[09:44:00.0000] <Ms2ger>
MikeSmith:

[09:44:01.0000] <Ms2ger>
remote: importing Hg objects into Git

[09:44:02.0000] <Ms2ger>
remote: abort: Permission denied: /var/hg/repos/html/.git/objects/9a/cdb4fbb68fecbb5b9d7bd45c4f98e65f905f75.lock

[09:44:03.0000] <Ms2ger>
remote: fatal: Unable to create '/var/hg/repos/html/.git/refs/remotes/github/master.lock': Permission denied

[09:45:00.0000] <Ms2ger>
remote: warning: changegroup.github hook exited with status 128

[09:56:00.0000] <dglazkov>
good morning, Whatwg!

[10:20:00.0000] <abarth>
Hixie: looking at http://dev.w3.org/html5/spec/Overview.html#http-aes-scheme .  I'm wondering why there isn't a use case for integrity as well

[10:21:00.0000] <abarth>
Hixie: e.g., hosting a script on an untrusted CDN

[10:21:01.0000] <Hixie>
because if the CDN were to screw around and change things, they'd be sued and lose the business

[10:22:00.0000] <Hixie>
whereas just stealing information can be done without leaving a trace

[10:22:01.0000] <abarth>
as an example, we could not show a mixed content indicator if you loaded an integrity-checked script from http+aes on an HTTPS page

[10:22:02.0000] <abarth>
s/could not/would not have to/

[10:23:00.0000] <Hixie>
the headers would still be mitm'able

[10:23:01.0000] <Hixie>
so i don't think that's true

[10:23:02.0000] <abarth>
today we show a mixed content warning because we're worried about an active network attacker corrupting the contents of the script and XSSing the page

[10:23:03.0000] <abarth>
i guess there's some trickiness with redirects

[10:24:00.0000] <abarth>
we'd need to make sure the final resource passed the integrity check

[10:24:01.0000] <Hixie>
as well as all those in between

[10:25:00.0000] <Hixie>
since an integrity check is easy to fake if you're in charge of the resource being served

[10:25:01.0000] <abarth>
do you mean the URL of the resource or the resource itself?

[10:25:02.0000] <Hixie>
both or either, i guess

[10:25:03.0000] <Hixie>
i think if integrity matters, you should use https+aes

[10:26:00.0000] <Hixie>
why reinvent the wheel

[10:26:01.0000] <abarth>
yeah, the only reason is performance

[10:26:02.0000] <abarth>
but HTTPS probably has fine performance now-a-days

[10:26:03.0000] <Hixie>
given that google.com is served on https now, i think the performance thing can be put to bed now

[10:30:00.0000] <abarth>
ekr: the question is mainly what the use case is for integrity checking

[10:31:00.0000] <abarth>
ekr: we've been talking about the mixed content use case, but that seems better addressed by HTTPS

[10:32:00.0000] <ekr>
Let me ask the question differently. What's the argument *against* integrity checking.

[10:32:01.0000] <Ms2ger>
Hehe

[10:33:00.0000] <Ms2ger>
The burden of proof lies with the person arguing for *more* features

[10:33:01.0000] <abarth>
ekr: i would think there are two reasons:

[10:33:02.0000] <abarth>
1) it's more complexity

[10:33:03.0000] <ekr>
While that may be generally true, there's ample experience that lack of integrity checking has led to serious security problems in a number of protocols

[10:33:04.0000] <abarth>
2) redirects and headers can already screw with integrity, so we shouldn't try to promising properties we can't deliver

[10:34:00.0000] <ekr>
Most recently, for instance, look at the security problems with XML encryption.

[10:35:00.0000] <ekr>
So since integrity is the common security idiom, I think some argument is required for why it should not be used.

[10:36:00.0000] <zcorpan>
annevk: i went to fix food

[10:36:01.0000] <ekr>
WRT to the points you raise, Adam, I'm not sure I understand the setting here. I.e., if I have an http+aes URI, and I get redirected, does that mean that I expect the new target not to be encrypted?

[10:39:00.0000] <abarth>
ekr: correct

[10:40:00.0000] <abarth>
(or at least that's what I've gathered from reading what in the spec today)

[10:41:00.0000] <ekr>
Without taking a position on whether that is a good design, integrity is about more than total message forgery. So, without integrity protection an attacker could (for instance) modify specific portions of a message while leaving some values intact. This is particularly easy with CTR, where it's possible to flip any bit.

[10:42:00.0000] <ekr>
I'm not saying that I have a concrete attack, but since any data can be carried over this channel, it's easy to see that an active attacker might be able to make significant semantic changes.

[10:42:01.0000] <ekr>
Just because you don't know the entire content of the message doesn't mean you don't know parts of it.

[10:43:00.0000] <ekr>
But I think more importantly, as the XMLENC case shows, lack of integrity can be a threat to confidentiality

[10:45:00.0000] <Ms2ger>
annevk, fixed

[10:48:00.0000] <AryehGregor>
Is hixie.ch down?

[10:54:00.0000] <zcorpan>
whatwg.org seems down for me

[10:55:00.0000] <charlvn>
http://www.downforeveryoneorjustme.com/whatwg.org

[10:55:01.0000] <charlvn>
seems to be up for me

[10:56:00.0000] <divya>
everything is down because dreamhost is down

[10:57:00.0000] <AryehGregor>
Back up for me.

[10:58:00.0000] <divya>
yep all back up seems like.

[11:08:00.0000] <charlvn>
down again

[11:29:00.0000] <annevk>
Ms2ger: oooh you fixed that bug? I might actually complete html5-diff for zcorpan then

[11:29:01.0000] <annevk>
html5.org is up

[11:30:00.0000] <annevk>
Hixie: processing model of http+aes should probably be somewhat more clearly defined; people get confused about it

[11:50:00.0000] <annevk>
arv: big fan of the non-existing method(...magic) huh? :)

[11:50:01.0000] <arv>
annevk: Yup

[11:50:02.0000] <annevk>
arv: I guess we can make it vararg, but the += argument doesn't work for remove() and would not quite do the same thing (duplication)

[11:51:00.0000] <annevk>
arv: and without ...magic we'd be kind of lost, but maybe that makes the case for postponing work on this feature some more :)

[11:51:01.0000] <arv>
annevk: Duplication does not really matter

[11:52:00.0000] <arv>
annevk: it is one more reason why js libs are faster

[11:52:01.0000] <annevk>
are they really faster?

[11:52:02.0000] <annevk>
it sounds kind of silly

[11:52:03.0000] <arv>
yes

[11:52:04.0000] <arv>
but like I said in the bug, the js libs do not validate the input

[11:52:05.0000] <annevk>
are the implementations not optimized or something or just optimized for string manipulation?

[11:53:00.0000] <zcorpan>
annevk: yo

[11:53:01.0000] <arv>
the webkit one is faster for remove and has because we keep a vector of AtomicStrings (pointer comparison)

[11:55:00.0000] <miketaylr>
i think http://jsperf.com/classlist-vs-addclass shows that classList stuff can be faster, depending on the browser

[11:56:00.0000] <miketaylr>
i guess faster in safari and opera, slower in ff and chrome

[11:57:00.0000] <arv>
miketaylr: Yeah, Chrome DOM bindings are slow so doing a single className assignment is much faster than multiple adds

[11:59:00.0000] <annevk>
yay Opera

[12:01:00.0000] <annevk>
zcorpan: are you still updating?

[12:02:00.0000] <zcorpan>
annevk: working on https://www.w3.org/Bugs/Public/show_bug.cgi?id=13463

[12:02:01.0000] <zcorpan>
haven't committed yet

[12:06:00.0000] <annevk>
Ms2ger: I get "SyntaxError: Specification not found: ." on html5-diff now

[12:06:01.0000] <annevk>
Ms2ger: after pulling, updating and running setup.py install

[12:07:00.0000] <annevk>
and afaict nothing is wrong with the data-anolis-ref links

[12:13:00.0000] <annevk>
ooh

[12:13:01.0000] <annevk>
wait

[12:13:02.0000] <annevk>
that is about data-anolis-spec being wrong

[12:16:00.0000] <annevk>
not a bug in Anolis

[12:16:01.0000] <annevk>
but now I fixed that in Overview.src.html and there's a huge list of undefined terms :(

[12:19:00.0000] <Hixie>
my plan to not read e-mail today and _just_ work on canvas is going to be apparently significantly helped today by dreamhost

[12:19:01.0000] <annevk>
email is down?

[12:20:00.0000] <Hixie>
apparently my mail server isn't responding, yeah

[12:20:01.0000] <Hixie>
dunno why

[12:20:02.0000] <Hixie>
it was working earlier

[12:20:03.0000] <Hixie>
doesn't matter though, i really _was_ planning to ignore my e-mail :-)

[12:20:04.0000] <AryehGregor>
Does anyone have any ideas on how to automatically test performance of transitions/animations cross-browser?  My suspicion is it's not possible.

[12:20:05.0000] <AryehGregor>
At least, not usefully.

[12:20:06.0000] <zcorpan>
annevk: what needs changing in src.html?

[12:20:07.0000] <AryehGregor>
/me looks at requestAnimationFrame

[12:21:00.0000] <annevk>
zcorpan: search for data-anolis-spec>

[12:21:01.0000] <Hixie>
AryehGregor: what are the requirements you are trying to test?

[12:21:02.0000] <annevk>
zcorpan: change it into data-anolis-spec=html>

[12:21:03.0000] <zcorpan>
annevk: thanks, fixed

[12:21:04.0000] <zcorpan>
(locally)

[12:21:05.0000] <Hixie>
AryehGregor: and do you mean in a self-contained automated fashion, manually, or with external automation help?

[12:21:06.0000] <AryehGregor>
Hixie, I don't think there are any spec requirements here, it's more like a QoI test.  Like how Acid3 said it had to animate smoothly, but more automatically/objectively than that.

[12:22:00.0000] <AryehGregor>
TBH I'm not sure what the requirements are, exactly.

[12:22:01.0000] <AryehGregor>
Maybe I should figure them out.

[12:22:02.0000] <Hixie>
AryehGregor: it's usually a good start to writing a test :-)

[12:22:03.0000] <jgraham>
AryehGregor: If you do, let me know :) It seems like an intersting thing to test even in a browser-specific fashion

[12:22:04.0000] <zcorpan>
seems opera still supporst HTMLIsIndexElement

[12:23:00.0000] <jgraham>
But I don't think we have (m)any QoI tests like that for Opera

[12:23:01.0000] <AryehGregor>
The browser probably knows how often it's doing repaints or such, and should be able to secretly figure out if it's more or less than some threshold.

[12:23:02.0000] <jgraham>
I would like us to of cousre

[12:23:03.0000] <AryehGregor>
But not in a browser-independent fashion.  I don't think there's ever going to be any reliable way to test FPS other than just looking.

[12:23:04.0000] <AryehGregor>
Possibly the looking could be automated by taking screenshots automatically or such, of course.

[12:23:05.0000] <Hixie>
AryehGregor: if you can use external tools, it seems you might be able to automate it by having the test set up to flash specific patterns at specific intervals, and then record it using an external video recorder (physical or screen grab tool) and having a script analyse the video to make sure the patterns appear at the right time

[12:23:06.0000] <Hixie>
AryehGregor: but that may be a bit over the top in complexity

[12:24:00.0000] <jgraham>
Relying on a physical camera seems like a non-starter

[12:24:01.0000] <AryehGregor>
Or just estimate FPS by taking a screenshot every 10ms or something and checking when two consecutive screenshots match.

[12:24:02.0000] <jgraham>
Well maybe not if you are Google

[12:24:03.0000] <jgraham>
But taking a screenshot consumes resources itself

[12:24:04.0000] <Hixie>
AryehGregor: someone's working on a set of testing apis, that might be a place to start to add some sort of way to report the frame rate or something

[12:24:05.0000] <AryehGregor>
Of course, that assumes browsers aren't doing weird small things that make screenshots not match.

[12:25:00.0000] <AryehGregor>
What incentive do browsers have to ever claim less than 60fps?

[12:25:01.0000] <AryehGregor>
Or whatever is considered "high".

[12:25:02.0000] <jgraham>
Hixie: You mean the WebDriver stuff?

[12:25:03.0000] <Hixie>
AryehGregor: if it's a testing api, that only ships in test builds or is only enabled in test mode, it seems useful for them to be honest

[12:25:04.0000] <Hixie>
jgraham: yeah

[12:25:05.0000] <jgraham>
I don't think that helps here except that it provides an API for taking screenshots

[12:25:06.0000] <AryehGregor>
Not if it makes them look bad relative to other browsers.

[12:25:07.0000] <AryehGregor>
Oh, it does?  Privileged, I guess?

[12:25:08.0000] <Hixie>
AryehGregor: (with my idea the patterns could be qr codes that are quite resilient to rendering errors, if you just wanted to test timing)

[12:26:00.0000] <jgraham>
Tah's not really how it works

[12:26:01.0000] <jgraham>
WebDriver, I mean

[12:26:02.0000] <jgraham>
It is mostly a browser-control API

[12:26:03.0000] <Hixie>
jgraham: i meant that he could add new features to webdriver if necessary

[12:26:04.0000] <jgraham>
Sure, but it seems quite different to the existing feature set

[12:26:05.0000] <jgraham>
and the existing feature set generally works in nonmal builds

[12:26:06.0000] <jgraham>
*normal

[12:27:00.0000] <jgraham>
At least in opera

[12:27:01.0000] <gsnedders>
There's no guarantee as to how quickly a screenshot will be taken normally.

[12:27:02.0000] <Philip`>
AryehGregor: Artifical microbenchmarks sound generally bad because you'll encourage developers to optimise for cases that won't matter to real users, so it'd be better to construct a small number of full real-world demos that can be run manually to see if there's user-perceivable performance problems

[12:27:03.0000] <gsnedders>
So using it for timing dependant stuff is questionable.

[12:27:04.0000] <Philip`>
and then you wouldn't need an automatic mechanism for it

[12:27:05.0000] <Hixie>
yeah if you want to do it manually it's a lot easier

[12:27:06.0000] <Hixie>
(that's what acid3 did, basically)

[12:28:00.0000] <Hixie>
(not an especially good part of acid3, but that's another story)

[12:28:01.0000] <jgraham>
Right, I am a bit skeptical of a screenshot-based approach

[12:28:02.0000] <AryehGregor>
Philip`, kind of like IE Test Drive except not subtly biased to perform as badly as possible in all other browsers?

[12:28:03.0000] <Philip`>
AryehGregor: Yes

[12:29:00.0000] <AryehGregor>
/me generously assumes that they wrote the tests without deliberate bias and then just optimized IE as much as possible for them before publicizing them, rather than deliberately sabotaging other browsers' performance

[12:29:01.0000] <jgraham>
AryehGregor: I thought they all tested the same thing (bliting perf.)

[12:29:02.0000] <AryehGregor>
Also possible.

[12:29:03.0000] <AryehGregor>
I didn't look at the details.

[12:29:04.0000] <jgraham>
Which just so happened to be the one thing that IE was good at compared to the others

[12:29:05.0000] <jgraham>
I thought one of our gfx guys said that, but I might be misremembering

[12:30:00.0000] <Philip`>
/me remembers hearing the same comment from somewhere

[12:30:01.0000] <gsnedders>
jgraham: That is true

[12:31:00.0000] <Philip`>
If blitting performance is what real web pages will care about, then that's a useful thing to test, but I presume it's not the bottleneck in every likely case

[12:32:00.0000] <annevk>
zcorpan: also it's attr-hyperlink-usemap

[12:33:00.0000] <jgraham>
Anyway, it seems like you could do something like take a screenshot regulsr, but quite large, intervals and measure expected_position - actual_position in each screenshot, then subtract off some constant component (to allow for the time taken to create the screenshot)

[12:33:01.0000] <annevk>
zcorpan: and dom-document-onreadystatechange should be handler-onreadystatechange

[12:34:00.0000] <jgraham>
Seems pretty hard, but not impossible to do. I don't know if it would give good results though

[12:36:00.0000] <jgraham>
I guess one issue is that to make it work, you would need to make the animation very simple, which would probably also make it performant

[12:36:01.0000] <annevk>
zcorpan: commandtype is dom-command-ro-commandtype

[12:38:00.0000] <annevk>
zcorpan: likewise for the other commands

[12:45:00.0000] <annevk>
zcorpan: also not attr-form-enctype but attr-fs-enctype

[12:46:00.0000] <annevk>
zcorpan: is async supposed to be attr-script-async?

[12:47:00.0000] <annevk>
zcorpan: ilnk -> link

[12:48:00.0000] <annevk>
zcorpan: attr-body-background -> attr-background

[12:48:01.0000] <zcorpan>
annevk: thanks! keep em coming, i'll read the logs. bbiab

[12:49:00.0000] <annevk>
zcorpan: form-method -> fs-method

[12:50:00.0000] <annevk>
zcorpan: what is concept-categories?

[12:50:01.0000] <annevk>
form-action -> fs-action

[12:51:00.0000] <annevk>
zcorpan: you have used both 'dir' and 'attr-dir'

[12:52:00.0000] <annevk>
attr is correct

[12:52:01.0000] <annevk>
attr-hyperlink-name -> attr-a-name

[12:56:00.0000] <annevk>
zcorpan: I updated specification-data now; once you fix the mistakes I can probably finish this

[13:05:00.0000] <MikeSmith>
Ms2ger: thanks, will fix that now

[13:08:00.0000] <MikeSmith>
Ms2ger: fixed

[13:11:00.0000] <jgraham>
MikeSmith: Thanks

[13:11:01.0000] <jgraham>
Even though I am not Ms2ger

[13:11:02.0000] <MikeSmith>
heh

[13:12:00.0000] <MikeSmith>
I think it should all work again now

[13:29:00.0000] <annevk>
@WHATWG has 6000 followers

[13:41:00.0000] <Ms2ger>
MikeSmith, thanks, though I don't care about git ;)

[13:42:00.0000] <Ms2ger>
annevk, no bugs on my side for Anolis?

[13:42:01.0000] <annevk>
nope

[13:45:00.0000] <zcorpan>
annevk: thanks

[13:49:00.0000] <jgraham>
Ms2ger: You might care about the exisance of code-review on github

[13:49:01.0000] <jgraham>
*existence

[13:50:00.0000] <Ms2ger>
That's a nice typo

[14:00:00.0000] <zcorpan>
/me realizes there's no idl attribute that reflects form=""

[14:00:01.0000] <TabAtkins_>
From @mattur: "In a dramatic move, W3C CEO Jeff Jaffe has set fire to the W3C. Understandable; I've often wanted to do the same."

[14:01:00.0000] <Ms2ger>
zcorpan, http://www.whatwg.org/specs/web-apps/current-work/multipage/association-of-controls-and-forms.html#dom-fae-form is reflecting enough?

[14:02:00.0000] <zcorpan>
Ms2ger: that's not reflecting the content attribute

[14:05:00.0000] <annevk>
TabAtkins_: haha

[14:06:00.0000] <annevk>
mattur is on a role

[14:29:00.0000] <annevk>
"TheOtherAB" stuff keeps getting better

[14:51:00.0000] <Hixie>
so... interface A { void x(); void y(); };  is black-box identical to  interface A { void x(); } [NoInterfaceObject] interface B { void y(); } A implements B;  right?

[14:51:01.0000] <Hixie>
i think i ask this like every other day but for some reason i am never confident of the answer

[14:53:00.0000] <annevk>
you should use partial interface A { };

[14:53:01.0000] <Hixie>
i am going to have multiple interfaces implement B

[14:53:02.0000] <Hixie>
so i can't do that

[14:54:00.0000] <annevk>
I think the answer is yes, but I'm also not sure :)

[14:54:01.0000] <annevk>
heycam: ^^

[14:54:02.0000] <heycam>
Hixie, annevk, yep that's equivalent

[14:55:00.0000] <Hixie>
ok thanks

[14:57:00.0000] <Hixie>
heycam: can i have an 'implements' statement before the interface is declared?

[14:57:01.0000] <heycam>
Hixie, yes there's not really any ordering of definitions

[14:58:00.0000] <Hixie>
awesome

[15:02:00.0000] <Hixie>
ok, step one. extract the transformation methods and ensure everything still makes sense.

[15:02:01.0000] <Hixie>
done.

[15:04:00.0000] <annevk>
is someone on ietf-http-wg actually proposing to replace the single request model of http-aes with two requests?

[15:04:01.0000] <annevk>
I should probably stop reading that thread

[15:07:00.0000] <Hixie>
looks like i was dropped off the cc list

[15:08:00.0000] <annevk>
http://lists.w3.org/Archives/Public/ietf-http-wg/2012JanMar/0815.html is that one

[15:09:00.0000] <annevk>
http://lists.w3.org/Archives/Public/ietf-http-wg/2012JanMar/0816.html is one that seems to forget about not complicating the APIs

[15:11:00.0000] <Hixie>
oh i saw those e-mails

[15:11:01.0000] <Hixie>
didn't even realise they were talking about the same thing

[15:14:00.0000] <Hixie>
definitely didn't receive all the e-mails on that thread though

[15:16:00.0000] <Hixie>
in particular, looks like i didn't receive phk's e-mail...

[15:16:01.0000] <Hixie>
ah, it was marked spam

[15:17:00.0000] <Hixie>
looks like he doesn't understand the situation i described though

[15:17:01.0000] <Hixie>
oh well

[15:44:00.0000] <Hixie>
when we talk about converting text + a font specification to a specific set of drawing instructions, what's the term for that?

[15:44:01.0000] <Hixie>
rasterisation?

[15:45:00.0000] <Hixie>
i don't mean rendering, since it might not actually be shown, just turned into a path for further manipulation

[15:46:00.0000] <Philip`>
Rasterization would be converting to pixels

[15:46:01.0000] <gsnedders>
Vectorization?

[15:47:00.0000] <gsnedders>
But fonts are already vectors.

[15:47:01.0000] <gsnedders>
Well, except when they're bitmapped fonts.

[15:48:00.0000] <Hixie>
assume for the sake of this conversation that we can ignore bitmap fonts

[15:54:00.0000] <TabAtkins_>
Hm, I know the word, but it's not coming to mind right now.

[15:54:01.0000] <TabAtkins_>
Layout?

[15:55:00.0000] <heycam>
outlining

[15:55:01.0000] <heycam>
I think that's the term used in tools like Illustrator that take a text object and converts it to paths

[15:56:00.0000] <Hixie>
outlining might work, though that tends to imply "not filled in", which it could be

[15:57:00.0000] <Dashiva>
"Font rasterization is the process of converting text from a vector description (as found in scalable fonts such as TrueType fonts) to a raster or bitmap description."

[15:57:01.0000] <TabAtkins_>
Dashiva: Right, but that's not what Hixie wants.

[15:58:00.0000] <TabAtkins_>
He means doing the shaping, spacing, etc. necessary to get the final glyph vectors for the text, so you can then manipulate the vectors.

[15:58:01.0000] <Hixie>
(also, any ideas what Element should be used to determine the available fonts when you do some sort of font whateverthewordis on a Path object?)

[15:58:02.0000] <heycam>
the process of taking an input string, font selection, and coming up with a list of glyphs and their positions is probably just "layout"

[15:58:03.0000] <Hixie>
(should Path objects just be created with a Canvas owner for this purpose?)

[15:58:04.0000] <dbaron>
you shouldn't assume that that's the path implementations go through

[15:59:00.0000] <dbaron>
for example, they might rasterize each glyph of the font for the correct size and then blit the rasters

[15:59:01.0000] <Hixie>
heycam: dbaron we're talking about Path objects, where there's no rendering

[15:59:02.0000] <Hixie>
er

[15:59:03.0000] <Hixie>
dbaron ^

[15:59:04.0000] <Hixie>
(my original question was "when we talk about converting text + a font specification to a specific set of drawing instructions, what's the term for that?")


2012-03-06
[16:00:00.0000] <Hixie>
(in the context of drawing text to a Path object)

[16:00:01.0000] <Philip`>
Pathification

[16:00:02.0000] <dbaron>
oops, I see I was disconnected for 7 minutes in the middle of the conversation

[16:00:03.0000] <zewt>
that's just pathological

[16:00:04.0000] <Hixie>
(or of rasterising to a canvas)

[16:00:05.0000] <heycam>
text-to-path might be more understandable than "outlining"

[16:00:06.0000] <dbaron>
stroking?

[16:00:07.0000] <Hixie>
right now i have "laid out (rasterized or outlined)"

[16:01:00.0000] <Hixie>
dbaron: sadly "stroking" in a canvas context is used for other meanings already

[16:02:00.0000] <Hixie>
hm, crap, i also need an Element to handle 'em' units, 'larger', 'smaller', 'ex' units, and 'rem', 'vh', and 'vw' units, and the other v unit, in the context of Paths

[16:02:01.0000] <Hixie>
i think i definitely have to make Path objects come from a specific canvas

[16:03:00.0000] <Hixie>
but that means using canvas.getContext('2d').createPath() rather than new Path(), which sucks

[16:03:01.0000] <TabAtkins_>
new Path({context: foo})

[16:03:02.0000] <zewt>
too bad rendering fonts as paths will lose grid alignment, so will look bad at font sizes used for normal text :|

[16:04:00.0000] <zewt>
font hinting is Really Important(tm)

[16:04:01.0000] <Hixie>
TabAtkins_: then people will ask why they need to give one, at least the other way they just curse me but don't ask why :-)

[16:04:02.0000] <TabAtkins_>
If they dont' give one, measure off the root element.

[16:04:03.0000] <Hixie>
zewt: this will likely mostly be used for text-on-a-path, so it's not a big deal

[16:05:00.0000] <Hixie>
TabAtkins_: that would mean you don't get your @font-face fonts if you're a scoped canvas

[16:05:01.0000] <Hixie>
TabAtkins_: but maybe that's ok

[16:05:02.0000] <TabAtkins_>
Hixie: Yeah, it's a simple answer, and as long as you provide a way to grab a Path with a <canvas> reference, it's easy to fix when it's important.

[16:06:00.0000] <Hixie>
yeah that might be the way to go

[16:06:01.0000] <TabAtkins_>
(Btw, an Element isn't necessary to handle the v* units, is it?  Those are common to every element in the page.)

[16:07:00.0000] <Hixie>
yeah for those you need a Document, not an Element

[16:08:00.0000] <Hixie>
i can imply a Document more easily than an Element

[16:08:01.0000] <Hixie>
hm, i wonder if zewt's point above means that I should provide measureText() explicitly on paths

[16:08:02.0000] <Hixie>
i guess not really, since we don't give a coordinate for measureText() anyway

[16:09:00.0000] <Hixie>
so it can't be taking hinting into account

[16:10:00.0000] <zewt>
one other detail--if you're *animating* a text-in-a-path, you probably explicitly *don't* want hinting

[16:10:01.0000] <zewt>
since it'll probably make it jiggle around weirdly

[17:26:00.0000] <Hixie>
man, i've been writing specs for over a decade now, i wish people would stop suggesting i don't know how to do my job :-P

[17:26:01.0000] <zewt>
noob

[17:26:02.0000] <TabAtkins_>
Maybe you should do your job better?

[17:26:03.0000] <TabAtkins_>
^_^

[17:28:00.0000] <Hixie>
i guess so

[19:17:00.0000] <zewt>
pritchard's message sure suggests to me that the people designing "web intents" don't understand structured clone transfer at all (but I'll leave it to someone who knows and/or cares about web intents to explain that, in case there really is some weird special property of web intents that makes what he describes not completely wrong)

[19:59:00.0000] <Hixie>
zewt: is he one of the ones designing it?

[19:59:01.0000] <Hixie>
looking at intents is next on my list after i finish all this canvas work

[20:00:00.0000] <zewt>
don't think so (iirc editor list is all @google, though dvcs.w3.org is timing out for me at the moment)

[20:02:00.0000] <Hixie>
k

[20:38:00.0000] <MikeSmith>
zewt: dvcs.w3.org still timing out for you?

[21:03:00.0000] <zewt>
works now

[21:03:01.0000] <MikeSmith>
OK

[00:07:00.0000] <MikeSmith>
hsivonen: https://bitbucket.org/pfalcon/validator/changeset/72665dd71762

[00:08:00.0000] <MikeSmith>
"Implements mock versions of servlet classes to feed data from command line to validating servlet."

[00:08:01.0000] <MikeSmith>
looks like that was written more than a year ago

[00:08:02.0000] <MikeSmith>
/me now tries to remember who was asking for something like this a couple weeks back

[00:13:00.0000] <annevk>
Hixie: tracing?

[00:13:01.0000] <MikeSmith>
scott_gonzalez: https://bitbucket.org/pfalcon/validator/changeset/72665dd71762

[00:14:00.0000] <annevk>
I think Adobe uses e.g. trace bitmap; so you could have traceFont or some such

[00:15:00.0000] <MikeSmith>
scott_gonzalez: related to http://krijnhoetmer.nl/irc-logs/whatwg/20120228#l-597

[00:37:00.0000] <Ms2ger>
!summon zcorpan

[00:37:01.0000] <annevk>
!summon heycam|away

[01:40:00.0000] <annevk>
/me gives another attempt at destroying [TreatNonCallableAsNull]

[02:39:00.0000] <zcorpan>
<input list> also has no reflecting idl attr

[02:41:00.0000] <heycam>
annevk, pong, though just about to go to bed

[02:41:01.0000] <heycam>
if it's just the list, I'll reply in the morning

[02:42:00.0000] <annevk>
yeah it was about the event handlerstuff

[02:42:01.0000] <annevk>
I have the feeling we're talking past each other

[02:42:02.0000] <annevk>
hopefully my latest list reply helps a bit

[02:42:03.0000] <annevk>
g'night

[02:44:00.0000] <heycam>
maybe, will take a fresh look in the sunlight :)

[03:48:00.0000] <zcorpan>
Zarro Boogs!

[03:49:00.0000] <zcorpan>
annevk: please regen :-)

[05:42:00.0000] <annevk>
a revert request against html5-diff?

[05:42:01.0000] <annevk>
you got to be fucking kidding me

[05:43:00.0000] <jgraham>
hahahahaha

[05:43:01.0000] <zcorpan>
what?

[05:43:02.0000] <jgraham>
What was the objection? "Not enough DRM?"

[05:43:03.0000] <jgraham>
s/?"/"?/

[05:44:00.0000] <jgraham>
Oh no, it's our old friend longdesc

[05:47:00.0000] <zcorpan>
shouldn't that be an objection on the *HTML5* spec to not say that longdesc is obsolete?

[05:48:00.0000] <MikeSmith>
good times

[05:49:00.0000] <zcorpan>
annevk: have you got around to regen it btw?

[05:50:00.0000] <zcorpan>
i'm done fiddling with it now

[05:52:00.0000] <MikeSmith>
zcorpan, annevk: in HTML4 the value of the dir attribute was case-insensitive, but the HTML spec currently makes it case-sensitive

[05:52:01.0000] <MikeSmith>
I think that was probably not intentional

[05:52:02.0000] <MikeSmith>
and validator.nu currently treats it case insensitively

[05:53:00.0000] <zcorpan>
MikeSmith: http://www.whatwg.org/specs/web-apps/current-work/multipage/common-microsyntaxes.html#enumerated-attribute

[05:53:01.0000] <MikeSmith>
should I file a spec bug?

[05:53:02.0000] <zcorpan>
it's still case insensitive

[05:53:03.0000] <MikeSmith>
oh

[05:53:04.0000] <MikeSmith>
hah

[05:53:05.0000] <MikeSmith>
ok

[05:53:06.0000] <annevk>
zcorpan: I can do that now then; took a while to get all the terms in specification-data

[05:54:00.0000] <zcorpan>
annevk: k, cheers

[05:54:01.0000] <MikeSmith>
zcorpan: I actually read that but when I read it, I read it as "ASCII case-sensitive" instead of "ASCII case-insensitive"

[05:54:02.0000] <MikeSmith>
which of course makes not sense

[05:54:03.0000] <MikeSmith>
I blame in on the Negra Modelo

[05:55:00.0000] <zcorpan>
btw, anyone know how "working group process [was] bypassed and circumvented"?

[06:00:00.0000] <annevk>
it seems Hixie made some kind of typo

[06:00:01.0000] <annevk>
http://www.whatwg.org/specs/web-apps/current-work/#dom-cva-checkvalidatity

[06:00:02.0000] <annevk>
not sure how to resolve that

[06:00:03.0000] <annevk>
I guess I will make the hyperlink match HTML for now

[06:00:04.0000] <annevk>
can you file a bug on HTML zcorpan so Hixie fixes that?

[06:01:00.0000] <annevk>
in particular "atity" should be replaced with "ity"

[06:01:01.0000] <zcorpan>
after fika

[06:01:02.0000] <annevk>
priorities :p

[06:04:00.0000] <annevk>
beautiful: http://dev.w3.org/html5/html4-differences/

[06:06:00.0000] <MikeSmith>
goed work brothermans

[06:07:00.0000] <MikeSmith>
zcorpan: ^

[06:07:01.0000] <MikeSmith>
seriously

[06:07:02.0000] <MikeSmith>
(despite the revert request)

[06:07:03.0000] <annevk>
yeah with API changes and everything

[06:10:00.0000] <MikeSmith>
beautiful document

[06:10:01.0000] <MikeSmith>
despite the "the faultfinder will find fault even in paradise" sour note mentioned earlier

[06:13:00.0000] <matjas>
annevk, zcorpan: shouldn’t http://dev.w3.org/html5/html4-differences/ mention `document.scripts` as well? (since `document.head` is mentioned)

[06:14:00.0000] <matjas>
or was that specced before?

[06:16:00.0000] <matjas>
also, the `input` event doesn’t seem to be mentioned

[06:23:00.0000] <annevk>
matjas: file a bug :)

[06:25:00.0000] <scott_gonzalez>
Thanks MikeSmith, I've got someone trying it out now.

[06:26:00.0000] <MikeSmith>
scott_gonzalez: super

[06:26:01.0000] <scott_gonzalez>
His first comments were:

[06:26:02.0000] <scott_gonzalez>
No Maven config or anything, but it depends on some other library in the same nu.validator package, not part of the project

[06:26:03.0000] <scott_gonzalez>
Readme says nothing about compiling the project...

[06:26:04.0000] <scott_gonzalez>
Of course that's not related to your specific commit.

[06:27:00.0000] <MikeSmith>
that's not my commit, actually

[06:27:01.0000] <MikeSmith>
I just stumbled across that

[06:27:02.0000] <scott_gonzalez>
Oh, heh, I didn't even look at who the committer was :-)

[06:28:00.0000] <MikeSmith>
anyway, somebody with minimal Java chops should be able to figure out things from there

[06:29:00.0000] <MikeSmith>
and lack of anything related to Maven is a feature :)

[06:36:00.0000] <matjas>
annevk: https://www.w3.org/Bugs/Public/show_bug.cgi?id=16244

[06:37:00.0000] <annevk>
thanks!

[06:40:00.0000] <zcorpan>
matjas: scripts is documented in http://dev.w3.org/html5/html4-differences/Overview.src.html

[06:41:00.0000] <zcorpan>
matjas: events aren't well covered, might need their own section. could you file a bug?

[06:41:01.0000] <zcorpan>
oh you did

[06:43:00.0000] <zcorpan>
thanks

[06:43:01.0000] <matjas>
thank you

[06:43:02.0000] <matjas>
nice work btw you guys!

[06:43:03.0000] <matjas>
also, should something like document.innerHTML (which got added, then moved to a separate spec, then removed from that spec) be mentioned?

[06:44:00.0000] <annevk>
don't think so, never got implemented

[06:44:01.0000] <matjas>
k

[06:44:02.0000] <zcorpan>
that's something for http://platform.html5.org/history/

[06:48:00.0000] <zcorpan>
MikeSmith: thanks

[06:50:00.0000] <zcorpan>
annevk: thanks for the help with anolis

[06:51:00.0000] <annevk>
you should try it some day

[06:51:01.0000] <annevk>
;)

[06:52:00.0000] <zcorpan>
yeah i'll try to get it running for the next publication

[07:02:00.0000] <annevk>
hmm

[07:03:00.0000] <annevk>
WebKit is adding Number.toLocaleString() and such

[07:03:01.0000] <annevk>
not really sure if that is great or not

[07:16:00.0000] <zcorpan>
annevk: shouldn't the boilerplate be WD?

[07:17:00.0000] <annevk>
dunno are we done?

[07:17:01.0000] <annevk>
is there a pubdate?

[07:17:02.0000] <annevk>
s/we/you/

[07:17:03.0000] <zcorpan>
i'm done if i get to decide

[07:18:00.0000] <zcorpan>
"We are planning to prepare and publish the drafts during the week of March 5 and probably on Tue March 6."

[07:18:01.0000] <zcorpan>
CfC: Publish ten heartbeat drafts as WDs

[07:20:00.0000] <annevk>
okay

[07:20:01.0000] <annevk>
made ready for publishing today

[07:21:00.0000] <zcorpan>
thanks

[07:23:00.0000] <zcorpan>
do we need to notify someone that it's ready, or something?

[07:24:00.0000] <zcorpan>
dang, forgot to update previous version links

[07:26:00.0000] <zcorpan>
added

[07:27:00.0000] <annevk>
you can reply to the chairs

[07:27:01.0000] <annevk>
maybe that'll remind them about the publication date :p

[07:27:02.0000] <zcorpan>
heh, ok

[07:28:00.0000] <zcorpan>
can you regen again?

[07:28:01.0000] <annevk>
done

[07:28:02.0000] <zcorpan>
excellent

[07:28:03.0000] <moo-_->
is there a list of all html5 attributes of all elements?

[07:36:00.0000] <zcorpan>
the spec has an index

[07:36:01.0000] <zcorpan>
http://www.whatwg.org/specs/web-apps/current-work/multipage/section-index.html#attributes-1

[07:36:02.0000] <zcorpan>
does not include obsolete attributes

[07:37:00.0000] <moo-_->
zcorpan: thx

[08:22:00.0000] <zcorpan>
annevk: fyi, i won't be online for the rest of the day today (in case html5-diff needs a change or anything)

[08:22:01.0000] <annevk>
k

[08:22:02.0000] <annevk>
i might be tonight; we'll see

[08:22:03.0000] <zcorpan>
k, see ya

[08:40:00.0000] <annevk>
gb18030 error handling

[08:40:01.0000] <annevk>
aaaaargh

[08:41:00.0000] <[tm]>
eh? sabu arrested?

[08:41:01.0000] <annevk>
?

[08:47:00.0000] <[tm]>
man

[08:47:01.0000] <[tm]>
this is grim

[08:48:00.0000] <[tm]>
news reports saying he's been collaborating with the FBI since June

[08:48:01.0000] <[tm]>
to incriminate everybody else

[08:49:00.0000] <[tm]>
dude apparently had kids

[08:49:01.0000] <[tm]>
and FBI used threat of taking his kiss away

[08:50:00.0000] <[tm]>
I hope none of this its true

[08:52:00.0000] <[tm]>
regardless, for every one sabu there are 100 more

[08:55:00.0000] <annevk>
not sure if opening the CDM floodgates so we can experiment to see if an RF implementation is possible is really the right strategy here...

[08:56:00.0000] <[tm]>
will just inspire

[08:56:01.0000] <[tm]>
oofs

[08:56:02.0000] <[tm]>
annevk:  maybe those floodgates been already opened

[08:57:00.0000] <[tm]>
house on its way out the barn

[08:57:01.0000] <[tm]>
horse

[08:58:00.0000] <Philip`>
[tm]: I interpreted the "?" as meaning "I haven't got a clue who 'sabu' is, what on earth are you talking about?"

[08:59:00.0000] <annevk>
[tm]: there's plugins I guess

[09:00:00.0000] <jgraham>
I still haven't entirely grasped why it is not OK if a video requires a binary component called "Flash" that implements NPAPI, but is OK if it requires a binary component that isn't called "Flash" that implements some CDM API. But I haven't followed the discussion closely so maybe I shouldn't say anything at all

[09:01:00.0000] <annevk>
TabAtkins_: actually, browsers are more or less required to follow the HTML rendering section

[09:02:00.0000] <annevk>
TabAtkins_: not sure what it says about <table> and bordercolor though

[09:03:00.0000] <annevk>
jgraham: presumably plugins not being part of some platforms or disabled by default

[09:03:01.0000] <annevk>
jgraham: so you need plugins'

[09:03:02.0000] <annevk>
and plugins prime is <video> plugins I guess

[09:04:00.0000] <jgraham>
annevk: I still haven't grasped why it is not OK… well I just said that. But I don't see how requiring a binary API that is implemented some places is a win over requiring a binary API that is implemented nowhere

[09:06:00.0000] <Philip`>
Because it means the companies involved don't have to pay licensing fees to Adobe, while also saving the engineering effort of reimplementing the entire video API themselves?

[09:07:00.0000] <annevk>
and they can be on platforms that don't have Flash, but do have this

[09:07:01.0000] <jgraham>
Philip`: So it is an attempt to move the costs from the people profiting on video distribution to browser vendors?

[09:07:02.0000] <jgraham>
annevk: Do any such platforms exist?

[09:08:00.0000] <Philip`>
jgraham: That seems a possible hypothesis

[09:08:01.0000] <annevk>
jgraham: well Windows 8 seems to be sort of like that

[09:08:02.0000] <annevk>
jgraham: with plugins disabled by default

[09:09:00.0000] <annevk>
jgraham: Apple seemed interested as well, so you can add iOS to that

[09:11:00.0000] <Philip`>
Also everyone complains about Flash being crashy, which is presumably caused largely by it being very large and requiring lots of low-level platform integration, so it'd be a more technically robust design if you put a minimal amount of code behind a minimal binary API (providing just the encryption support and nothing else)

[09:11:01.0000] <[tm]>
sabu is sabu

[09:14:00.0000] <Philip`>
Also you might want a site that provides both DRMed and unrestricted videos (e.g. Youtube with a subset of videos having special restrictions), and not want to support two totally independent video APIs, so you'd either use <video> plus an optional DRM component (so non-DRM-supporting browsers could still play most of the videos) or you'd use a totally custom plugin-based video API (so those browsers would be locked out entirely)

[09:19:00.0000] <dglazkov>
good morning, hatwg!

[09:19:01.0000] <dglazkov>
man, hat wg

[09:19:02.0000] <dglazkov>
that does sound much more fan

[09:20:00.0000] <dglazkov>
fan->fun

[09:20:01.0000] <dglazkov>
I type sad.

[09:27:00.0000] <[tm]>
we're clearly months away from getting any resolution i

[09:27:01.0000] <[tm]>
on this

[10:24:00.0000] <hsivonen>
Philip`: If the CDM wants to do its own decoding, own painting, virtualization detection, screen recorder detection, etc., it won't be less low-level than Flash or easier to intergrate than an NPAPI plug-in

[11:58:00.0000] <AryehGregor>
What's the use-case for http(s)+aes?

[11:59:00.0000] <AryehGregor>
/me is actually surprised by how intelligent and amicable most of this DRM thread is

[12:00:00.0000] <othermaciej>
I think it only addresses the use case that people sort of claim to care about but which is not the primary motivation

[12:00:01.0000] <othermaciej>
yes, it seems pretty thoughtful and polite for such a controversial topic

[12:00:02.0000] <AryehGregor>
Someone from Google said YouTube is interested in it.

[12:01:00.0000] <AryehGregor>
Or at least in ClearKey, which is apparently more or less equivalent.

[12:01:01.0000] <Yuhong>
http://news.ycombinator.com/item?id=3606623

[12:01:02.0000] <AryehGregor>
http(s)+aes seems like it only serves the DRM use-case if the key part of the URL isn't exposed to the user, or something like that.

[12:01:03.0000] <AryehGregor>
But authors can't rely on the browser to do that.

[12:02:00.0000] <AryehGregor>
Specifically, if the restriction is implemented in open-source code, even if all browsers ship with it (unlikely), it will only be a matter of time before someone writes a patched version.

[12:03:00.0000] <othermaciej>
ClearKey is not sufficiently specified for me to understand exactly what it does

[12:03:01.0000] <othermaciej>
but if it's meant to support key rotation, then http(a)+aes is not equivalent

[12:03:02.0000] <AryehGregor>
If the goal is to stop the user from getting a copy of the video, the best solution that's implementable in open-source seems like site-specific obfuscation of the underlying HTML and transport, like using transparent divs to block "Save As" and using one-time URLs so that grabbing the URL from the source won't help.

[12:03:03.0000] <othermaciej>
likewise if it's required for encryption to be inside the container instead of outside

[12:03:04.0000] <AryehGregor>
YouTube already does this, I think.

[12:04:00.0000] <AryehGregor>
Anything further seems unlikely to be implementable in open-source software.  On the other hand, if you make it moderately inconvenient to extract the video from the site, it should be no problem, as long as a) it's at least as inconvenient as using BitTorrent, and b) the content is already available on BitTorrent.

[12:05:00.0000] <AryehGregor>
Then again, that's being rational, and the content owners are not necessarily being rational here.

[12:29:00.0000] <jgraham>
Oh, look at that. Someone ported SQLite to javascript (via Emscripten)

[12:30:00.0000] <AryehGregor>
Someone already ported Linux to JavaScript, and since then I've ceased to be amazed at any such feat.

[12:30:01.0000] <AryehGregor>
Once you have a full OS and compiler running on an x86 emulator, the rest is all details.

[12:30:02.0000] <AryehGregor>
(although I realize that this SQLite port is probably not running in a VM, the point holds)

[12:31:00.0000] <AryehGregor>
s/VM/emulator/

[12:31:01.0000] <AryehGregor>
s!VM/emulator!a VM/an emulator!

[12:32:00.0000] <jgraham>
AryehGregor: Right, the linux port was clever but useless

[12:32:01.0000] <jgraham>
But people might actaully run webapps backed with SQLite

[12:32:02.0000] <AryehGregor>
Assuming there's a suitable storage layer.

[12:32:03.0000] <jgraham>
Yeah, fair point

[12:32:04.0000] <AryehGregor>
Which is a bit dicey right know AFAICT.

[12:32:05.0000] <jgraham>
I guess that will be IndexedDb

[12:33:00.0000] <jgraham>
Which will be sort of ironic

[12:33:01.0000] <AryehGregor>
Which requires user prompting currently to do anything, and (unlike SQLite) is asynchronous.  Unless you want your SQLite library to only be accessible from workers.

[12:33:02.0000] <AryehGregor>
(maybe SQLite can be used asynchronously too, I dunno)

[12:33:03.0000] <AryehGregor>
(I guess you could always make the JS wrapper layer for SQLite asynchronous even if SQLite itself normally isn't)

[12:34:00.0000] <jgraham>
Right. You could have something like the WebSQL API but backed by javascript backed by IndexedDb

[12:34:01.0000] <AryehGregor>
Right.  With another abstraction layer implementing IndexedDB on top of local storage for browsers that don't support it.

[12:35:00.0000] <jgraham>
Heh

[12:35:01.0000] <AryehGregor>
And then another one that falls back to Flash cookies or something.

[12:35:02.0000] <Philip`>
Would you end up using any of SQLite beyond its SQL parser/optimiser?

[12:35:03.0000] <AryehGregor>
Philip`, of course.  You'd use IndexedDB by storing the entire SQLite database as one big database entry.  Or alternatively, by storing each page as a separate database entry in a flat table.

[12:35:04.0000] <AryehGregor>
Probably per-page makes more sense.

[12:36:00.0000] <jgraham>
Maybe you could also make the backend one of these virtual-filesystem APIs that people have started developing

[12:36:01.0000] <AryehGregor>
I mean, abstraction layers are no fun if you don't reimplement the same abstractions at multiple levels so that you get all the inefficiency but none of the convenience.

[12:36:02.0000] <jgraham>
Although I guess they will take longer before they are universially avaliable

[12:37:00.0000] <AryehGregor>
That's why you have a polyfill that falls back to IndexedDB, then localStorage, then Flash cookies, then synchronous XHR to a server back-end that stores user-specific data based on an id.

[12:38:00.0000] <AryehGregor>
I mean, if you could rely on the availability of basic functionality, it would hardly be proper web development.

[12:40:00.0000] <jgraham>
Blame Microsoft/Google for not making it possible/easy to upgrade the default browsers on their respective OSes?

[12:42:00.0000] <jgraham>
(it wouldn't be the whole story ofc but it would get you some of the way there)

[12:42:01.0000] <Yuhong>
"This section discusses this issue, providing various elements of comparison and what it would take to allow authors to actually use OBJECT instead of IFRAME. "

[12:42:02.0000] <Yuhong>
http://www.w3.org/TR/WD-frames-970331.html

[12:56:00.0000] <Hixie>
AryehGregor: the point of http+aes is to enable someone to store private content on a CDN that is trusted not to vandalise data but isn't trusted not to passively copy data

[13:58:00.0000] <rniwa>
annevk: yt?

[14:45:00.0000] <Hixie>
what's a good term for the path that the canvas 2d context has?

[14:45:01.0000] <Hixie>
ideas so far:

[14:45:02.0000] <Hixie>
implicit path

[14:45:03.0000] <Hixie>
global path

[14:45:04.0000] <Hixie>
default path

[14:46:00.0000] <Hixie>
context path

[14:46:01.0000] <Hixie>
default context path

[14:46:02.0000] <Hixie>
legacy path

[14:47:00.0000] <Hixie>
i'll go with "Default path" i think

[14:49:00.0000] <Hixie>
heycam: fwiw, i just narrowly avoided an interesting webidl problem

[14:50:00.0000] <heycam>
Hixie, yeah?

[14:50:01.0000] <Hixie>
heycam: some code relies on the order of arc() and arcTo() on the canvas API

[14:50:02.0000] <heycam>
Hixie, the order when enumerating properties on the canvas context object?

[14:50:03.0000] <Hixie>
heycam: and i was safe only because in splitting the api, those two methods ended up in the same interface

[14:50:04.0000] <Hixie>
heycam: yeah

[14:50:05.0000] <Hixie>
heycam: it's possible that one day the relative order of methods in two different interfaces both imported into another interface will matter

[14:51:00.0000] <zewt>
"shoot the programmer in the head"

[14:51:01.0000] <heycam>
Hixie, well currently the order is not significant at all according to the spec

[14:51:02.0000] <Hixie>
heycam: ah. well then. i have news for you :-)

[14:51:03.0000] <heycam>
Hixie, i.e. order of interface importing or declarations does not impact property enumeration order

[14:51:04.0000] <Hixie>
heycam: see https://bugzilla.mozilla.org/show_bug.cgi?id=623437 and its dupes

[14:52:00.0000] <Hixie>
heycam: right now in the spec i'm intentionally maintaining the relative order of arc() and arcTo()

[14:53:00.0000] <heycam>
Hixie, that shouldn't matter -- the spec doesn't do anything with the order operations appear

[14:53:01.0000] <Hixie>
heycam: (though i'm not explicit about that, it's just a comment in the source to remind me not to switch them)

[14:53:02.0000] <heycam>
Hixie, if some implementations choose to interpret the order they appear on IDL in some way, then that's their choice :)

[14:53:03.0000] <heycam>
(this of course is beacuse Web IDL doesn't prescribe property enumeration order)

[14:53:04.0000] <Hixie>
heycam: well, if pages depend on an order, it's going to be our problem :-)

[14:53:05.0000] <heycam>
yeah

[14:54:00.0000] <Hixie>
heycam: anyway, i'm fine with not having an order if we can get away with it. just thought you should know about it.

[14:54:01.0000] <Hixie>
heycam: for now i'll continue to maintain the order as is in case you make it significant

[14:54:02.0000] <heycam>
Hixie, thanks for the pointer

[14:54:03.0000] <Hixie>
np

[14:54:04.0000] <heycam>
Hixie, I suspect we will have to define it at some point

[15:09:00.0000] <rniwa>
AryehGregor: so resize css property won't work for control selection because resize property isn't applicable to replaced elements :(

[15:29:00.0000] <roc_>
really?

[15:29:01.0000] <Hixie>
i don't understand how the resize property is supposed to work at all

[15:30:00.0000] <gsnedders>
Hixie: As long WebIDL is based on ES5, I'm not sure it can ever define an order.

[15:31:00.0000] <gsnedders>
/me would need to check what ES5 says about host object enumeration order tohugh

[15:31:01.0000] <gsnedders>
*though

[15:31:02.0000] <Hixie>
why ever not?

[15:31:03.0000] <gsnedders>
Hixie: Well, it would be contradicting something below it in the stack

[15:31:04.0000] <Hixie>
HTML depends on ES5 and it defines that the global scope object and 'this' aren't the same object...

[15:32:00.0000] <Hixie>
contradicting something below it in the stack isn't hard to do, it's just something to avoid to do if possible

[15:33:00.0000] <gsnedders>
Ah, no, host objects can define enumeration orders.

[15:33:01.0000] <Hixie>
when it's not possible, e.g. because the spec you depend on refuses to fix itself, you just override it

[15:33:02.0000] <gsnedders>
Hixie: Nothing was specified in ES5 because there was no consensus

[15:33:03.0000] <gsnedders>
Whatever it spec'd likely wouldn't have been implemented by half of the major ES engines

[15:34:00.0000] <Hixie>
if it ain't implemented by half the engines, then it's not required

[15:35:00.0000] <gsnedders>
Hixie: Ah, no. Everyone who had deviated from the historical norm (i.e., Opera 10.50+, IE9+, Chrome) knew it caused compat breakage, but deemed it a worthwhile change.

[15:36:00.0000] <Hixie>
if they are able to make the change, it's not required

[15:36:01.0000] <Hixie>
by definition

[15:36:02.0000] <gsnedders>
Some people would say that having yahoo.jp work was required.

[15:36:03.0000] <gsnedders>
(I believe the site has since changed)

[15:37:00.0000] <Hixie>
if multiple browsers shipped without it working, then by definition those people are wrong

[15:37:01.0000] <gsnedders>
Still, given that it *did* break things, others don't want.

[15:38:00.0000] <Hixie>
i'm not sure what you're arguing :-)

[15:38:01.0000] <gsnedders>
It's hard to convince people to break legacy content, even when some already have.

[15:39:00.0000] <gsnedders>
And hence hard to reach consensus, when the side that has gone for the behaviour better from a perf/memory POV doesn't want to regress, and the other side doesn't want to break sites that the others already have.

[15:39:01.0000] <Hixie>
my only arguments here are that there are two states: either a feature is required and eveyone wants to implement that thing, in which case either the relevant spec needs to be fixed or a spec above it on the stack needs to fix it by contradicting it intentionally, or, there's not a requirement to implement the feature, in which case neither spec needs to do anything. consensus is a red herring here, unless by it you mean "agreement amongst a majority of relevant i

[15:40:00.0000] <Hixie>
(which is not what people usually mean by "consensus")

[15:41:00.0000] <gsnedders>
Hixie: By consensus I mean amongst browser vendors

[15:42:00.0000] <gsnedders>
(who don't have consensus on which of the two states you gave above)

[15:43:00.0000] <Hixie>
by definition, if people don't agree something is required, then we're in the second state

[15:44:00.0000] <Hixie>
especially in this case where the second state's allowed implementations is a superset of the first state's


2012-03-07
[16:04:00.0000] <bga>
> SQL.js: SQLite Compiled to JavaScript via Emscripten

[16:04:01.0000] <bga>
facepalm

[16:33:00.0000] <AryehGregor>
rniwa, I filed spec feedback months ago asking that that be changed.  IIRC, tantek responded favorably but never did it.

[16:36:00.0000] <rniwa>
AryehGregor: okay.

[16:39:00.0000] <rniwa>
aklein: https://bugs.webkit.org/show_bug.cgi?id=80452

[17:17:00.0000] <austincheney>
can somebody help explain the necessity to HTTP+AES to me?

[17:17:01.0000] <austincheney>
i have been reading the emails and I am not clear on the use condition

[17:17:02.0000] <austincheney>
HTTP is pretty simple in that there is only a request and a response and then the connection is abandoned and forgotten

[17:18:00.0000] <austincheney>
and the response is already encrypted if you use https

[17:18:01.0000] <austincheney>
this leaves the need to protect the request from interception, is that right?

[17:18:02.0000] <austincheney>
as in a man in the middle attack?

[17:21:00.0000] <othermaciej>
my understanding is that it's supposed to protect content stored on a CDN that should be kept confidential from the CDN provider

[17:21:01.0000] <austincheney>
then you would need to encrypt the content opposed to encrypting the transmission

[17:21:02.0000] <zewt>
seems like a rather shortsighted thing to bake a particular encryption algorithm right into the name

[17:22:00.0000] <austincheney>
i am unclear why you would want to hide the transmission of content from a CDN?

[17:23:00.0000] <zewt>
austincheney: i'm not familiar with that in particular, but http does support data transforms (Transfer-Encoding) which can be precalculated

[17:23:01.0000] <Philip`>
Would it be any harder to move to a new http+rot13:// when the algorithm changes, than to support multiple algorithms under the same protocol name?

[17:23:02.0000] <zewt>
well, that part seems obvious ...

[17:23:03.0000] <zewt>
(if you want to be able to serve private data)

[17:24:00.0000] <austincheney>
a CDN is a service though, and by connecting into said service you are likely obligated to let the service know about your role in resource consumption

[17:25:00.0000] <zewt>
i'm certainly not obligated to give amazon access to the data i store in s3

[17:25:01.0000] <austincheney>
right, that is why you encrypt the data

[17:25:02.0000] <zewt>
which is the point, I believe :)

[17:25:03.0000] <austincheney>
but Amazon has every right to be aware of the transmission though

[17:25:04.0000] <zewt>
the provider I use to send bits has no right to know the contents of those bits

[17:26:00.0000] <austincheney>
right, and they won't if the content is encrypted

[17:26:01.0000] <zewt>
(and if some low-rent providers claim that right in seedy TOS's, then that's between the user and the provider; it's not relevant to protocol development)

[17:27:00.0000] <zewt>
sorry, I really have no idea what you're saying; the entire point of http+aes is an encryption mechanism, right?

[17:27:01.0000] <austincheney>
no

[17:28:00.0000] <austincheney>
its encrypting transmission opposed to encrypting content

[17:28:01.0000] <Philip`>
Is this meant to be for really confidential data that would cause irreparable harm if released, or for cases where an easier solution is just to sue Amazon for violating their TOS if they publicly release the private data?

[17:28:02.0000] <zewt>
ssl encrypts transmission

[17:28:03.0000] <zewt>
(url to http+aes? generic name is ungooglable)

[17:28:04.0000] <Philip`>
/me hasn't read the relevant thread at all and has no idea what the context of the discussion is

[17:28:05.0000] <austincheney>
SSL encrypts a HTTP response

[17:29:00.0000] <zewt>
but the name sounds like "aes block encryption + hashes + client-side decryption key"

[17:29:01.0000] <zewt>
no, ssl encrypts the entire exchange

[17:29:02.0000] <zewt>
request and response

[17:31:00.0000] <zewt>
(oh, it's something already in the spec? odd, never even heard of it before)

[17:34:00.0000] <zewt>
Hixie: no block hashes in http+aes?

[17:34:01.0000] <zewt>
austincheney: and yes, it appears to be what I said

[17:38:00.0000] <zewt>
defining encryption without hashes to prevent corruption/tampering is odd--the two normally go together, the cost is very small, and it prevents weaknesses that typical users may not be aware of

[17:44:00.0000] <zewt>
holy hell what just happened

[17:45:00.0000] <zewt>
i deleted a big block of quoted text in gmail, and it flipped two lines of quoted text upside down

[17:45:01.0000] <zewt>
which happened to be two lines of javascript code--confusing as hell

[18:27:00.0000] <AryehGregor>
Hixie, what's the reason for using only AES for http+aes instead of doing full authenticated encryption for the response contents?  Just throw in an HMAC using the same key, and then it's tamperproof as well as copy-proof.

[18:28:00.0000] <Hixie>
what's the use case for that?

[18:28:01.0000] <AryehGregor>
At basically no additional cost.

[18:28:02.0000] <MikeSmith>
great to finally get Apple feedback on the Notifications API

[18:30:00.0000] <zewt>
AryehGregor: same as what I said: <zewt> defining encryption without hashes to prevent corruption/tampering is odd--the two normally go together, the cost is very small, and it prevents weaknesses that typical users may not be aware of

[18:30:01.0000] <AryehGregor>
zewt, yes.

[18:30:02.0000] <zewt>
for example, people--not generally being encryption experts--may assume that data which is encrypted can't be modified, which isn't true if there's no validation

[18:30:03.0000] <AryehGregor>
Hixie, maybe you don't trust the CDN not to modify the data either.

[18:31:00.0000] <AryehGregor>
You need to split it into blocks somehow and HMAC each block, though, to allow streaming.

[18:31:01.0000] <AryehGregor>
This can probably be offloaded on some existing well-understood authenticated encryption implementation.

[18:31:02.0000] <zewt>
as a nice side benefit, you get verification against innocent HTTP transmission errors (not a primary use case, just a nice extra)

[18:32:00.0000] <Hixie>
AryehGregor: dude if you don't trust the cdn not to modify the data you have much bigger problems imho

[18:32:01.0000] <zewt>
Hixie: why should I trust them more than I have to?

[18:32:02.0000] <zewt>
(plus intermediaries, for the non-https version)

[18:33:00.0000] <Hixie>
realistically speaking, i've never heard of anyone who doesn't trust the cdn not to modify data

[18:33:01.0000] <Hixie>
i have heard of people not trusting their cdn to snoop the data

[18:34:00.0000] <zewt>
if the data is validated, then I don't have to trust the internet, either

[18:36:00.0000] <Hixie>
https already solves the internet part

[18:36:01.0000] <zewt>
if https could always be used, then you wouldn't have defined http+aes :)

[18:37:00.0000] <Hixie>
they solve unrelated problems

[18:37:01.0000] <Hixie>
so i don't really understand what you mean?

[18:37:02.0000] <zewt>
hmm?

[18:37:03.0000] <zewt>
why would you define http+aes, if you could always use https+aes?

[18:38:00.0000] <Hixie>
AryehGregor: (btw i'm not against the idea in principle. send e-mail or file a bug with concrete details and i'll take a look.)

[18:38:01.0000] <zewt>
it just seems like this is violating a fundamental principle of encryption: always verify the results

[18:38:02.0000] <Hixie>
zewt: completenes

[18:39:00.0000] <Hixie>
s

[18:40:00.0000] <zewt>
also, having a verification mechanism means you can tell if you've got a wrong password, instead of just getting random data

[18:45:00.0000] <Hixie>
zewt: getting noise is a pretty good indicator that you got the wrong key...

[18:46:00.0000] <zewt>
not an indicator that you can report programmatically

[18:47:00.0000] <zewt>
wrong password should be reported as "wrong password", not "mysteriously corrupt file"

[18:48:00.0000] <zewt>
(eg. XHR should report an error, not happily hand you a buffer filled with random-looking bytes)

[19:21:00.0000] <Hixie>
it's telling that for most proposals for html and other web specs, we get proposals from either browser vendor engineers or authors / web devs

[19:22:00.0000] <Hixie>
whereas this drm thing comes from a very different segment

[19:22:01.0000] <zewt>
(what's confusing is why anyone's even pretending to listen)

[19:40:00.0000] <ukai>
anyone who maintain Chromium Mac Release bot? svn failure: http://build.webkit.org/builders/Chromium%20Mac%20Release/builds/32798/steps/svn/logs/stdio

[19:40:01.0000] <ukai>
oops

[19:40:02.0000] <ukai>
wrong channel

[20:05:00.0000] <StoneCypher>
Hixie: in your experience, what parts of CSS do people tend to misunderstand the most?

[20:19:00.0000] <MikeSmith>
related to the Encrypted Media Extensions  proposal, among the requirements that should be listed out somewhere specifically is "decrypted data must not be available to Javascript"

[20:19:01.0000] <MikeSmith>
if that is indeed one of the requirements behind the proposal (which it seems to be)

[20:39:00.0000] <zewt>
... isn't it rather "must not be available to anything open source or not end-to-end encrypted"? heh

[20:56:00.0000] <Hixie>
StoneCypher: i'm not in the loop enough to say these days. used to be th inline box model, back around 2000.

[20:56:01.0000] <Hixie>
StoneCypher: i once had to explain it to bert and hakon (who invented it!) ;-)

[21:00:00.0000] <Hixie>
anyone know of a version of hexdump that displays things in binary instead of hex?

[21:00:01.0000] <Hixie>
ooh, xxd -b maybe

[21:00:02.0000] <Hixie>
sweet

[21:01:00.0000] <StoneCypher>
i got to talk to hakon once through michael day

[21:01:01.0000] <StoneCypher>
was fun.

[21:02:00.0000] <MikeSmith>
zewt: yeah, true

[21:24:00.0000] <MikeSmith>
hsivonen: https://www.w3.org/WAI/PF/Group/track/actions/413

[21:24:01.0000] <MikeSmith>
"Create RelaxNG schema for ARIA"

[21:25:00.0000] <MikeSmith>
wow I guess that one's been open since 2009

[22:23:00.0000] <hsivonen>
MikeSmith: fortunately, we already have an RNG schema for ARIA

[22:24:00.0000] <MikeSmith>
yeah

[22:24:01.0000] <MikeSmith>
I don't know why they've been keeping that action-item open

[22:26:00.0000] <hsivonen>
MikeSmith: https://bitbucket.org/pfalcon/validator/changeset/72665dd71762#chg-src/nu/validator/servlet/VerifierCommandLine.java looks like something that I should pull into mainline

[22:26:01.0000] <hsivonen>
the license header is a bit odd, though

[22:26:02.0000] <MikeSmith>
/me takes a look

[22:26:03.0000] <hsivonen>
maybe the author doesn't want a copyright line in the template

[22:26:04.0000] <MikeSmith>
ah, perhaps so

[22:27:00.0000] <MikeSmith>
it would be great to have it in mainline

[22:27:01.0000] <hsivonen>
also, the class should use some additional patching for generating a fake Content-Type header

[22:27:02.0000] <hsivonen>
after pulling it into mainline that is

[22:28:00.0000] <hsivonen>
/me decides to get breakfast first

[22:28:01.0000] <MikeSmith>
enjoy

[22:29:00.0000] <MikeSmith>
/me goes back to trying to write up a summary of the requirements implicit in the Encrypted Media Extensions proposal

[22:34:00.0000] <hsivonen>
MikeSmith: expect at least 38 replies to your summary

[22:34:01.0000] <MikeSmith>
heh

[22:35:00.0000] <MikeSmith>
maybe somebody has asked this already, but what's the point of having both http+aes and https+aes schemes if in practice anybody using this would be encrypting it with TLS?

[22:36:00.0000] <MikeSmith>
I do realize that you can do with Upgrade header thing with http resources to change to TLS encryption

[22:36:01.0000] <hsivonen>
MikeSmith: it would not be encrypted using TLS necessarily

[22:37:00.0000] <MikeSmith>
hsivonen: oh?

[22:37:01.0000] <hsivonen>
MikeSmith: Mark Watson said TLS CDNs are more expensive

[22:37:02.0000] <MikeSmith>
ah yeah

[22:38:00.0000] <hsivonen>
MikeSmith: https+aes implies you don't trust the CDN but the CDN applies TLS anyway

[22:38:01.0000] <MikeSmith>
I see

[22:38:02.0000] <hsivonen>
MikeSmith: to me, https+aes looks like it's there for completeness

[22:41:00.0000] <MikeSmith>
hsivonen: so are you saying there's no real use case for TLS-encrypting the connection for these resources?

[23:21:00.0000] <Hixie>
hsivonen: https+aes makes sense if you want to protect users from telling network snoopers what urls they're looking at

[23:22:00.0000] <Hixie>
in js, is there an efficient way of storing a set of objects such that they can be added and removed in O(1) ?

[23:23:00.0000] <Hixie>
or should i just quietly add an __id__ field to all the objects and use that as an index into an object in which i keep them?

[23:23:01.0000] <StoneCypher>
the last time i looked ecma didn't specify its representations well enough to make complexity guarantees

[23:24:00.0000] <StoneCypher>
but that was in the long ago, in the before time

[23:24:01.0000] <Hixie>
sure, i just mean in practice with browsers today

[23:24:02.0000] <StoneCypher>
in practice they're trees, not sets

[23:24:03.0000] <StoneCypher>
"sets are trees" sets are usually unordered hashmaps

[23:24:04.0000] <StoneCypher>
even though they shouldn't be

[23:24:05.0000] <Hixie>
i think you're missing the crux of my question

[23:25:00.0000] <heycam>
Hixie, the solution going forward would be to use a WeakMap

[23:25:01.0000] <heycam>
Hixie, but before that's widely available sticking id properties on your object is the way to do it, unfortunately

[23:25:02.0000] <Hixie>
heycam: weakmap lets me use an object as a key?

[23:25:03.0000] <heycam>
Hixie, yeah

[23:25:04.0000] <heycam>
https://developer.mozilla.org/en/JavaScript/Reference/Global_Objects/WeakMap

[23:26:00.0000] <Hixie>
yeah, was just reading that

[23:26:01.0000] <Hixie>
i need to be able to enumerate my list, so it wouldn't be useful for this

[23:27:00.0000] <StoneCypher>
notably, the ecmascript proposal they're talking about in that page is exactly to solve the issue i was discussing

[23:27:01.0000] <StoneCypher>
namely that javascript's fundamental datatypes for this are inadequate

[23:27:02.0000] <Hixie>
ok so the short answer is that today i need to add an id to all the objects

[23:27:03.0000] <Hixie>
ok

[00:24:00.0000] <zcorpan>
why is html5-diff blessed from "may object" in the cfc?

[00:33:00.0000] <annevk>
non-normative?

[00:38:00.0000] <zcorpan>
ah

[00:39:00.0000] <zcorpan>
http://software.hixie.ch/utilities/js/live-dom-viewer/saved/1363 seems opera runs it as well

[00:39:01.0000] <zcorpan>
/me calls it a spec bug

[00:39:02.0000] <zcorpan>
unless there's a subtle security problem with running it

[00:42:00.0000] <annevk>
you should run that by foolip maybe

[00:43:00.0000] <annevk>
he did this thing with disabling javascript URLs in a bunch of places if I remember correctly

[00:44:00.0000] <zcorpan>
Hixie: why not make http(s)+aes never be same-origin?

[00:45:00.0000] <charlvn>
been toying with the java jsoup library - https://gist.github.com/1991945

[00:46:00.0000] <Hixie>
zcorpan: we could do that.

[00:46:01.0000] <Hixie>
zcorpan: send mail/bug

[00:48:00.0000] <zcorpan>
filed

[00:49:00.0000] <Hixie>
thanks

[00:52:00.0000] <zcorpan>
Hixie: have you committed any new features to canvas yet or is it just shuffling things around so far?

[00:52:01.0000] <Hixie>
hopefully just shuffling around

[00:52:02.0000] <Hixie>
getting there though

[00:52:03.0000] <zcorpan>
k, then i don't need to read the diffs :-)

[00:52:04.0000] <Hixie>
(hopefully because any normative changes are bugs)

[00:54:00.0000] <zcorpan>
hsivonen: he also excluded HTTP, URL (from the web platform in the drm thread)

[00:57:00.0000] <annevk>
Hixie: so what exactly is hidden in the https+aes case? your one-liner was not entirely clear to me

[00:58:00.0000] <Hixie>
annevk: the url, assuming you mean "what's hidden from the network snooper"

[00:58:01.0000] <Hixie>
gotta go, bed time

[00:59:00.0000] <annevk>
so how is that hidden? oh well, later I guess

[00:59:01.0000] <Hixie>
it's hidden cos the stream is encrypted? same as https normally...

[00:59:02.0000] <annevk>
oh never mind

[00:59:03.0000] <Hixie>
anyway, ttyl :-)

[00:59:04.0000] <annevk>
g'night!

[01:39:00.0000] <hsivonen>
looks like chuck@jumis replied to me with something totally unrelated to what I said

[01:39:01.0000] <annevk>
film at 11?

[01:39:02.0000] <hsivonen>
reminds me of http://xkcd.com/1018/

[01:40:00.0000] <jgraham>
/me thinks that re-ignote is an excellent typo combining as it does the words "re-ignite" and "ignore"

[01:40:01.0000] <Velmont>
Hmz. :-)

[01:41:00.0000] <annevk>
less time on IRC, more time editing jgraham :p

[01:41:01.0000] <jgraham>
Why do you want to edit me?

[01:41:02.0000] <crocket>
Why does firefox fail to open http://httpd.apache.org/docs/2.2/en/mod/mod_autoindex.html with ISO-8859-1 encoding.

[01:41:03.0000] <crocket>
firefox opens it with UTF-8.

[01:42:00.0000] <annevk>
punctuation...

[01:42:01.0000] <crocket>
annevk: ???

[01:42:02.0000] <annevk>
crocket: you're not the only one having a conversation here ;)

[01:42:03.0000] <annevk>
crocket: see the logs

[01:43:00.0000] <annevk>
crocket: also, works fine here in Minefield

[01:43:01.0000] <hsivonen>
crocket: <?xml version="1.0" encoding="ISO-8859-1"?> is not an encoding declaration in text/html

[01:44:00.0000] <annevk>
confusingly called Minefield.app, but really is the latest Nightly

[01:44:01.0000] <jgraham>
hsivonen: I totally want to try the Dadaist approach to spec discussions

[01:44:02.0000] <annevk>
ooh yeah

[01:44:03.0000] <annevk>
so it depends on your locale

[01:44:04.0000] <hsivonen>
cobbler's children go barefoot also at the Apache Foundation, it seems

[01:44:05.0000] <annevk>
you'd think those HTTP guys know how to set something like this up

[01:45:00.0000] <hsivonen>
as in without real encoding declarations

[01:45:01.0000] <annevk>
and some fake XML

[01:46:00.0000] <jgraham>
Fake XML is the only way to keep it real

[01:47:00.0000] <annevk>
haha

[01:52:00.0000] <zcorpan>
annevk: time for a whatwg weekly? :-)

[01:54:00.0000] <Velmont>
^^

[01:54:01.0000] <annevk>
I guess I can write that real quick before I have to run to catch my flight

[01:55:00.0000] <zcorpan>
just don't miss your flight!

[01:56:00.0000] <annevk>
yeah I'll go the airport first

[01:56:01.0000] <annevk>
topics?

[01:56:02.0000] <annevk>
html5-diff

[01:57:00.0000] <annevk>
notifications += apple?

[01:57:01.0000] <annevk>
http+aes

[01:58:00.0000] <Velmont>
Meta referrer? Maybe? Not too much happening there though :P

[01:58:01.0000] <zcorpan>
mutation observers added to html

[01:58:02.0000] <Velmont>
crossorigin script tags, - lots of scoped talk

[01:58:03.0000] <zcorpan>
progress on canvas

[01:59:00.0000] <zcorpan>
throw in a plug with webgl on opera mobile :-P

[01:59:01.0000] <Velmont>
Grr. Now I see that deprecate registerProtocolHandler email again. Still, noone really wants to enter that discussion.

[02:06:00.0000] <annevk>
thanks guys

[02:06:01.0000] <crocket>
hsivonen: What is an encoding declaration in text/html?

[02:06:02.0000] <hsivonen>
/me wonders what's holding Opera 12 desktop considering that Mobile shipped already

[02:06:03.0000] <zcorpan>
crocket: <meta charset=utf-8>

[02:06:04.0000] <crocket>
hmm

[02:07:00.0000] <hsivonen>
crocket: HTTP-level Content-Type:, <meta charset> or BOM

[02:07:01.0000] <crocket>
Why did httpd devs forget to do it?

[02:07:02.0000] <hsivonen>
crocket: you need to ask them

[02:07:03.0000] <annevk>
it's prolly their docs team that forgot

[02:07:04.0000] <Velmont>
One of the universes mysteries.

[02:07:05.0000] <annevk>
and they prolly don't realize they're not using XML

[02:08:00.0000] <annevk>
anyway, running

[02:08:01.0000] <hsivonen>
crocket: experience suggests that fixing it will be prioritized once the bug causes Roy Fielding to lose an argument with Hixie on a standardization list because of the bug

[02:09:00.0000] <crocket>
hsivonen: I don't get it.

[02:09:01.0000] <crocket>
I don't understand the situation.

[02:10:00.0000] <hsivonen>
crocket: well, maybe they'll fix it without such a situation if you file a bug about the documentation site

[02:24:00.0000] <smaug____>
Did anyone ever give a good  reply to http://lists.w3.org/Archives/Public/public-html/2012Mar/0128.html

[02:25:00.0000] <smaug____>
(about CDM and NPAPI)

[02:26:00.0000] <smaug____>
there are so many messages, that perhaps I've skipped some

[02:31:00.0000] <hsivonen>
smaug____: no, AFAICT

[02:54:00.0000] <zcorpan>
/me would like mentions to show up in the main twitter timeline

[02:55:00.0000] <annevk>
zcorpan: good link for the webgl stuff?

[02:57:00.0000] <zcorpan>
dunno, http://my.opera.com/chooseopera/blog/2012/02/27/opera-mini-7-next-and-opera-mobile-12 maybe?

[02:58:00.0000] <annevk>
that's the one I found too

[02:59:00.0000] <annevk>
is the correct English "This is March' first ..."

[03:00:00.0000] <annevk>
or March's

[03:00:01.0000] <zcorpan>
/me also finds http://www.youtube.com/watch?v=qpmYAqO2QSU

[03:19:00.0000] <hsivonen>
The revert request for http+aes took longer than expected

[03:39:00.0000] <annevk>
hsivonen: quite

[03:41:00.0000] <hsivonen>
"Cox, your friend in the digital age®" "We are the people"

[03:41:01.0000] <hsivonen>
/me tries to find out what services Cox provides that might be related to HTML5 video

[03:42:00.0000] <annevk>
http://blog.whatwg.org/httpaes-url-scheme

[03:44:00.0000] <david_carlisle>
annevk: I think it should be 's (but don't trust an Englishman to know English grammar) but better to avoid it and say .... of March

[03:44:01.0000] <annevk>
google agrees with you

[03:44:02.0000] <annevk>
well not google, but its results

[03:45:00.0000] <annevk>
thanks

[03:45:01.0000] <annevk>
time to go to the gate now

[03:45:02.0000] <zcorpan>
annevk: missing link to html5-diff?

[03:45:03.0000] <zcorpan>
missing link text, it seems

[03:46:00.0000] <annevk>
also fixed

[03:47:00.0000] <annevk>
oops, gate closing

[04:57:00.0000] <charlvn>
how can people think we are able to create an AI that can understand human languages if even humans have trouble in that regard :P

[04:59:00.0000] <Philip`>
Computers can be better than humans at lots of activities that humans invented (like arithmetic, or chess), so why not at language too?

[05:02:00.0000] <charlvn>
Philip`: good point!

[05:03:00.0000] <Philip`>
They could process vast amounts of data about the speaker (e.g. everything they've ever said before in their life) to construct a model of that person's mind and thought patterns at the present moment, and use that to statistically determine the most likely meaning that they intended to express given the utterance that they did express

[05:04:00.0000] <Philip`>
Humans can't do anything like that, so we have to apply lots of unreliable heuristics and are more likely to take the wrong meaning

[05:08:00.0000] <wilhelm>
I believe this is one of the difficult problems that will remain unsolved 20 years from now.

[05:08:01.0000] <Philip`>
(That's actually why this IRC channel's logs are public - it's part of a secret Google project to data-mine and learn the behaviour of WHATWG members in order to construct accurate electronic simulations of everyone's thoughts, eventually obsoleting the actual humans and allowing Google's algorithms to become entirely self-sufficient)

[05:10:00.0000] <jgraham>
If you read the HTML5 spec backwards, it reveals the Hixie actually died in 2006 and has been replaced with a prototype AI for spec-writing

[05:13:00.0000] <Philip`>
The "How to read this specification" section is not just a jocular reminder that reading specs is inherently difficult - it's actually a hidden cry for help from Hixie as his neurons were being absorbed by the machines

[05:13:01.0000] <charlvn>
when they remove the telencephalic inhibitor chip, mankind will become obsolete

[05:24:00.0000] <zcorpan>
has anyone written a script that renders the spec backwards yet?

[05:25:00.0000] <charlvn>
it is not the default rendering?!

[05:26:00.0000] <zcorpan>
inorite

[05:48:00.0000] <austincheney>
is the primary use case of http+aes about privacy or security?

[05:57:00.0000] <hsivonen>
austincheney: privacy against untrusted CDNs

[05:59:00.0000] <austincheney>
in that case it is likely doomed

[05:59:01.0000] <austincheney>
for two reasons

[06:00:00.0000] <austincheney>
1) HTTP is inherently public, which is why there is no universal or consistent application of privacy laws for the web

[06:00:01.0000] <austincheney>
2) privacy cannot be added with security mechanisms

[06:01:00.0000] <austincheney>
privacy is not security

[06:01:01.0000] <hsivonen>
the whole point is that it doesn't matter how public HTTP is when the payload has been encrypted and the key transfered out of band

[06:01:02.0000] <austincheney>
a grave fear in attempting to attach privacy to a public medium is that it potentially opens private vectors of attack

[06:02:00.0000] <hsivonen>
your point #2 doesn't make sense

[06:02:01.0000] <austincheney>
it does make sense

[06:02:02.0000] <austincheney>
privacy is not a security condition

[06:02:03.0000] <hsivonen>
it's a privacy mechanism--not a security mechanism

[06:04:00.0000] <austincheney>
in the US privacy is a legal classification and not an action or practice upon a work

[06:04:01.0000] <austincheney>
as a result, at least in the US, privacy cannot be added

[06:04:02.0000] <austincheney>
it can only be taken away

[06:04:03.0000] <hsivonen>
austincheney: it's not privacy in a legal sense

[06:05:00.0000] <hsivonen>
austincheney: it's privacy in a technical sense that you want to hide information from someone

[06:05:01.0000] <hsivonen>
austincheney: in this case, from a CDN

[06:05:02.0000] <austincheney>
in US law, privacy only exists in a legal sense

[06:06:00.0000] <charlvn>
austincheney: how is US law in any way relevant to global internet standards?

[06:06:01.0000] <austincheney>
its not relevant to global concerns, but it is entirely relevant to the internet as it resides in the US

[06:07:00.0000] <hsivonen>
austincheney: you seem to be *very* confused about the purpose of http+aes

[06:07:01.0000] <austincheney>
I probably am

[06:08:00.0000] <austincheney>
the best way to make a transmission private is to not use HTTP

[06:09:00.0000] <charlvn>
if HTTP has limitations that prevent its use, those limitations need to be addressed

[06:10:00.0000] <charlvn>
i thought that is what this whole initiative is about

[06:12:00.0000] <austincheney>
sometimes limitations exist for a good reason, otherwise limitations exist because of violations against a technology's intent

[06:13:00.0000] <austincheney>
we have been violating the intent of http for about 20 years now

[06:13:01.0000] <austincheney>
http was intended to be simple and sessionless, but webapps are neither

[06:14:00.0000] <charlvn>
technology evolves and adapts to user needs. it is not a constant. it never was a constant and will never be a constant.

[06:14:01.0000] <austincheney>
violating the intention of HTTP is a key factor in the rapid growth of the web's security concerns

[06:15:00.0000] <austincheney>
evolving the technology beyond its intention carries unexpected costs

[06:15:01.0000] <charlvn>
that might be true but it does not need to stagnate technological development

[06:16:00.0000] <charlvn>
we just need to address the issues that arrise

[06:27:00.0000] <zewt>
no, http is just a protocol; it doesn't care what data payloads are sent over it

[06:27:01.0000] <zewt>
uh okay then

[06:43:00.0000] <karlcow>
exactly HTTP is an application protocol, sorry for the pedantry

[08:03:00.0000] <annevk>
zcorpan: if you make a bitbucket account we can just add you to the repo

[08:03:01.0000] <annevk>
zcorpan: seems simpler

[08:04:00.0000] <annevk>
oh you do it seems

[08:04:01.0000] <annevk>
zcorpan: done

[08:13:00.0000] <zcorpan>
for specification-data?

[08:17:00.0000] <annevk>
yes

[08:17:01.0000] <zcorpan>
ok

[08:24:00.0000] <aklein>
annevk: finally got around to implementing ordering of mutation record delivery, and I'm wondering if we can do a few more tweaks to http://dvcs.w3.org/hg/domcore/raw-file/tip/Overview.html#concept-mo-invoke

[08:25:00.0000] <annevk>
sure

[08:26:00.0000] <annevk>
I can probably do them now

[08:28:00.0000] <aklein>
annevk: the convenient thing would be to make a copy of the scripting environment's observer list, containing only those observers with non-empty queues

[08:28:01.0000] <aklein>
so if you do further mutations that trigger other observers during a callback, they don't get notified until the next time around the loop

[08:29:00.0000] <aklein>
or if a new observer is created in a callback, and observers changes during a loop, it also won't get notified until the next time around

[08:29:01.0000] <aklein>
s/observers chnages/observes changes/

[08:29:02.0000] <aklein>
I'd also be willing to implement the algorithm as-is, but it seems a little trickier

[08:29:03.0000] <aklein>
(too bad smaug's not around)

[08:30:00.0000] <AryehGregor>
zewt, people usually use CDNs for performance, and the extra round-trips of HTTPS would tend to work against that.  http+aes provides secrecy without extra latency, assuming the client isn't going to be troubled by AES decryption.  (Which is very likely if it has the computing power to display video.)

[08:30:01.0000] <annevk>
might be best to email the list about that aklein

[08:30:02.0000] <aklein>
annevk: ok

[08:30:03.0000] <aklein>
looking forward to a firefox implementation so I can just explain these things with test cases :)

[08:31:00.0000] <annevk>
wow http://www.theregister.co.uk/2012/03/07/deutsche_telekom_data_record/

[08:31:01.0000] <annevk>
give me!

[08:31:02.0000] <Ms2ger>
aklein, it's coming around... Only it's always a week or so away :)

[08:32:00.0000] <AryehGregor>
Anyway, http+aes seems like it solves a use-case that nobody is going to be very interested in.  For DRM, you probably care about consumers pirating the content, not CDNs.  CDNs can be retained under NDAs that it's not worth their while to break.

[08:32:01.0000] <annevk>
/me hopes Opera gets around to it soonish too

[08:33:00.0000] <AryehGregor>
Also, based on how CDNs generally work, you could only rarely rotate the key in this use-case, because you'd have to upload new versions to the CDN whenever you do, and that considerably mitigates the usefulness of the encryption.

[08:36:00.0000] <AryehGregor>
Does YouTube even use CDNs?  Maybe it stores some files within ISPs' networks, but the ISP can snoop the AES key out of the page if it wants, since YouTube isn't HTTPS by default.

[08:36:01.0000] <AryehGregor>
Netflix seems to use a CDN (Limelight Networks), but realistically I find it hard to imagine them worrying about piracy.  If the content owners are worried about Limelight pirating their media, why aren't they worried about Netflix itself?

[08:37:00.0000] <AryehGregor>
/me suspects this is all a smokescreen.

[08:37:01.0000] <Ms2ger>
Hear hear, Knol is dying

[08:43:00.0000] <dglazkov>
good morning, Whatwg!

[08:43:01.0000] <hatwg>
Good morning, dglazkov!

[08:44:00.0000] <dglazkov>
my favorite hatwg!!!

[08:44:01.0000] <dglazkov>
it's a working group where we discuss hats.

[08:44:02.0000] <annevk>
moar hats

[08:46:00.0000] <dglazkov>
also, debate serious topics, like whether helmets are hats

[08:47:00.0000] <annevk>
oh yes, lets redefine hat

[08:47:01.0000] <dglazkov>
and of course, the hot topics of Hat Rights Management

[08:47:02.0000] <annevk>
it will be splendid

[08:47:03.0000] <dglazkov>
very controversial

[08:47:04.0000] <annevk>
hats don't have a lot of rights

[08:47:05.0000] <annevk>
so shouldn't be too hard

[08:48:00.0000] <dglazkov>
well, unless you wear a person as a hat

[08:49:00.0000] <annevk>
nice try atlassian

[08:49:01.0000] <annevk>
sends you spam

[08:49:02.0000] <annevk>
puts the unsubscribe forever site in maintenance

[08:53:00.0000] <annevk>
heh http://i.imgur.com/HRU3z.png

[09:13:00.0000] <dglazkov>
sicking!!!

[09:14:00.0000] <AryehGregor>
annevk, well, it's sent to ayg+bitbucket, so I know where it's from.

[09:20:00.0000] <Ms2ger>
zcorpan, "http://dvcs.w3.org/hg/domcore/raw-file/tip/Overview.html redirected to https://dvcs.w3.org/hg/domcore/raw-file/tip/Overview.html"

[09:20:01.0000] <Ms2ger>
That doesn't seem to happen here

[09:24:00.0000] <zcorpan>
Ms2ger: it's the output of the w3c link checker

[09:24:01.0000] <Ms2ger>
html5-diff?

[09:24:02.0000] <Ms2ger>
/me checks

[09:24:03.0000] <zcorpan>
http://simon.html5.org/dump/refs.html

[09:33:00.0000] <Ms2ger>
Indeed so

[09:33:01.0000] <Ms2ger>
[18:34:18.346] GET http://dvcs.w3.org/hg/domcore/raw-file/tip/Overview.html [HTTP/1.1 200 Script output follows 840ms]

[09:33:02.0000] <Ms2ger>
MikeSmith?

[09:38:00.0000] <annevk>
NFC API

[09:38:01.0000] <annevk>
first thought Unicode or near-field?

[09:38:02.0000] <annevk>
<- Unicode

[09:38:03.0000] <Ms2ger>
r-

[09:39:00.0000] <bga>
where to read about -webkit-texture ?

[09:41:00.0000] <jgraham>
Webkit source code?

[09:43:00.0000] <StoneCypher>
bga: http://lmgtfy.com/?q=%22-webkit-texture%22

[09:49:00.0000] <AryehGregor>
Cool.

[09:49:01.0000] <AryehGregor>
Reproducible null pointer dereference in the kernel, triggered by 3D transforms in Chrome.

[09:49:02.0000] <Ms2ger>
Chrome++

[09:49:03.0000] <AryehGregor>
I guess it serves me right for using the experimental Gallium3D support.

[09:49:04.0000] <AryehGregor>
No, (nouveau+experimental Gallium3D support)++.

[09:50:00.0000] <Ms2ger>
I'm going to blame Google anyway :)

[09:50:01.0000] <AryehGregor>
Chrome isn't even using hardware acceleration, according to about:gpu.

[09:57:00.0000] <zcorpan>
Ms2ger: i'm ok with calling it a bug in either the link checker or the dvcs.w3.org server and not changing the url if it doesn't redirect for normal users

[09:58:00.0000] <Ms2ger>
I'm happy to use https, fwiw, but I'd like to hear what's actually happening

[10:12:00.0000] <Hixie>
what's the easiest way, in js, of taking a string and splitting it on the first two spaces so that you get the first word, the second word, and the remainder in "first second the remainder"?

[10:12:01.0000] <Hixie>
.split's limit argument doesn't seem to do anything useful here

[10:12:02.0000] <AryehGregor>
The second parameter of String.split() doesn't behave very usefully here.

[10:13:00.0000] <AryehGregor>
I think Python's does what you want.  :)

[10:13:01.0000] <Hixie>
perl too

[10:13:02.0000] <AryehGregor>
Lame.

[10:13:03.0000] <AryehGregor>
Oh well.

[10:13:04.0000] <Hixie>
sadly i'm in js :-)

[10:13:05.0000] <Hixie>
i guess a regexp would work

[10:13:06.0000] <jgraham>
Reimplement a python interpreter in js and use that?

[10:13:07.0000] <Hixie>
seems like overkill though

[10:13:08.0000] <Hixie>
you can take my last statement as referring either to regexps or your idea :-)

[10:13:09.0000] <AryehGregor>
I guess: var arr = s.split(" "); if (arr.length > 3) arr[2] = arr.slice(2).join(" ");

[10:14:00.0000] <annevk>
split,pop,pop,join

[10:14:01.0000] <Hixie>
yeah i guess join would work

[10:14:02.0000] <jgraham>
Yeah, I think I wouyld do what AryehGregor suggested

[10:14:03.0000] <Hixie>
awright

[10:14:04.0000] <Hixie>
thanks

[10:14:05.0000] <jgraham>
It is probably hideously inefficient though. Hopefully that doesn't matter

[10:14:06.0000] <Philip`>
That seems much uglier and less efficient than regexps

[10:15:00.0000] <Hixie>
the advantage over regexp is that i actually have to do this for varying values of 2

[10:16:00.0000] <Hixie>
and it'll just work generically for any number of leading words that i want to strip off

[10:16:01.0000] <Hixie>
whereas regexps would have to be fine-turned for each case

[10:16:02.0000] <Ms2ger>
I guess you could generate the regexps

[10:16:03.0000] <zcorpan>
Hixie: http://software.hixie.ch/utilities/js/live-dom-viewer/saved/1365

[10:17:00.0000] <Hixie>
zcorpan: thanks

[10:19:00.0000] <Philip`>
var x="a b c d"; var re = new RegExp("(.*?) ", "g"); var words = []; for (var i=0; i<2; ++i) words.push(re.exec(x)[1]); words.push(x.substr(re.lastIndex));

[10:20:00.0000] <Hixie>
not sure that's less ugly :-)

[10:20:01.0000] <Philip`>
That's because you added the requirement that 2 is variable :-p

[10:20:02.0000] <Hixie>
there's probably less string copying though

[10:21:00.0000] <Hixie>
though with js engines, who knows

[10:21:01.0000] <zcorpan>
run it through jsperf

[10:22:00.0000] <Philip`>
/me isn't sufficiently corrupted to like generating variable-length regexp patterns with string manipulation

[10:22:01.0000] <Hixie>
i'll worry about perf if this turns out to be too slow. :-)

[10:24:00.0000] <zcorpan>
http://software.hixie.ch/utilities/js/live-dom-viewer/saved/1366 alternative that doesn't construct a new string

[10:24:01.0000] <zcorpan>
but measures the length of two :-)

[10:26:00.0000] <zcorpan>
maybe some jsperf regular will read the logs and be curious enough to run a benchmark

[10:26:01.0000] <matjas>
/me whistles

[10:27:00.0000] <zcorpan>
:-)

[10:27:01.0000] <Hixie>
i went with just splitting the whole thing on spaces at the top and then rejoining the trailing bits when i know which i need

[10:28:00.0000] <zcorpan>
what's this for, btw?

[10:29:00.0000] <Hixie>
parsing some stuff from a server script

[10:32:00.0000] <Hixie>
on another note

[10:32:01.0000] <Hixie>
the sooner we can get the terser Element.create() syntax done and shipped the happier i'll be

[10:33:00.0000] <Ms2ger>
Write the spec for it? :)

[10:33:01.0000] <Hixie>
i've been tempted

[10:34:00.0000] <Hixie>
anyone got some code already written to take a string and escape it for use as a CSS identifier?

[10:35:00.0000] <Ms2ger>
glazou might

[10:35:01.0000] <Ms2ger>
Oh, you weren't asking what I thought you were

[10:35:02.0000] <zcorpan>
matjas probably does

[10:36:00.0000] <zcorpan>
http://mothereff.in/css-escapes

[10:36:01.0000] <matjas>
Hixie: see http://mothereff.in/css-escapes source: https://github.com/mathiasbynens/mothereff.in/blob/master/css-escapes/eff.js

[10:36:02.0000] <Hixie>
sweet, thanks

[10:37:00.0000] <matjas>
note that standard CSS character escape sequences for supplementary Unicode characters aren’t currently supported in WebKit, though: http://mothereff.in/css-escapes#1%F0%9D%8C%86

[10:37:01.0000] <matjas>
so you may not want to escape those

[10:37:02.0000] <Hixie>
i'm targetting browsers of the future here, so that's not an issue

[10:40:00.0000] <Hixie>
oh this isn'ta s bad as it first looked

[10:40:01.0000] <Hixie>
since i don't need to escape non-ascii

[10:40:02.0000] <Hixie>
duh

[10:43:00.0000] <annevk>
is the input a DOMString?

[10:43:01.0000] <annevk>
might want to look out for surrogates if so

[10:43:02.0000] <Hixie>
why?

[10:43:03.0000] <Hixie>
i'm just gonna stick it in style.textContent

[10:43:04.0000] <annevk>
is CSS also code unit based?

[10:44:00.0000] <annevk>
lone surrogates might end up as U+FFFD

[10:44:01.0000] <Hixie>
oh i don't have lone surrogates, i'm good on that front

[10:44:02.0000] <Hixie>
(or rather, if i do, i don't really care)

[10:44:03.0000] <Hixie>
(those can fail, whatever)

[10:44:04.0000] <annevk>
k

[10:45:00.0000] <Hixie>
matjas: what's the difference between s.charAt(i) and s[i] ?

[10:45:01.0000] <Hixie>
(just looking at your code)

[10:45:02.0000] <zcorpan>
Hixie: the former works in old IE

[10:45:03.0000] <Hixie>
ah ok

[10:46:00.0000] <matjas>
what zcorpan said

[10:46:01.0000] <Hixie>
definitely don't care about old IE since this is parsing websocket stuff :-D

[10:46:02.0000] <matjas>
IE < 8 doesn’t support string indexing, and IE8 only supports it for string literals, not for string objects

[10:46:03.0000] <zcorpan>
/me is a bit disturbed that he still hasn't forgotten about old IE limitations

[10:47:00.0000] <zcorpan>
/me hasn't cared about or even used old IE for *years*

[10:48:00.0000] <Ms2ger>
Nice one, github

[10:48:01.0000] <matjas>
zcorpan: sounds like your garbage collector broke

[10:48:02.0000] <matjas>
free up that memory!

[10:48:03.0000] <zcorpan>
i guess that stuff kinda gets in to your spine when you have to work with the limitations when you first learn stuff

[10:49:00.0000] <zcorpan>
http://theoatmeal.com/comics/brain

[10:51:00.0000] <Hixie>
matjas: i derived http://junkyard.damowmow.com/503 from your code, do you mind if i assume copyright of this variant? (and immediately declare it public domain, since it's like 10 lines of code)

[10:52:00.0000] <matjas>
Hixie: sure, that’s cool

[10:52:01.0000] <Hixie>
ta

[11:45:00.0000] <sicking>
dglazkov: hey

[11:50:00.0000] <jwalden>
/me wonders if sicking is still sicking or not today

[11:51:00.0000] <sicking>
huh

[11:51:01.0000] <sicking>
i'm still wft with a cold if that's what you're asking

[11:52:00.0000] <jwalden>
:-(

[11:52:01.0000] <jwalden>
and that is what I was musing about

[11:52:02.0000] <jwalden>
never let an opportunity for a bad pun go to waste

[11:53:00.0000] <Ms2ger>
Where's Waldo when you need a bad pun...

[13:33:00.0000] <dglazkov>
sicking y u no answer my emails

[13:37:00.0000] <gsnedders>
Anyone got any opinion as to the behaviour of {get __proto__() {}} or {__proto__: 1} should do?

[13:37:01.0000] <AryehGregor>
So the makefile for CSS3 Transforms seems to require that either I type my username and password every time when making, or I put them in a .curlrc that will be used for *all* curl requests?

[13:38:00.0000] <AryehGregor>
Meaning if some random other script uses curl to access some page that happens to be authenticated, it will send my W3C username and password?

[14:16:00.0000] <sicking>
dglazkov: ugh, sorry, so hard to keep up with mail these days

[14:16:01.0000] <sicking>
dglazkov: We currently don't have anyone working on shadow DOM. Just a resource problem :(

[14:16:02.0000] <dglazkov>
sicking: no stress :)

[14:17:00.0000] <dglazkov>
sicking: ok

[14:17:01.0000] <sicking>
dglazkov: does that answer the questoin?

[14:17:02.0000] <dglazkov>
sicking: it totally does!

[14:19:00.0000] <annevk>
http://lists.w3.org/Archives/Public/public-html-a11y/2012Mar/0021.html (via @mattur) :/

[14:21:00.0000] <dglazkov>
sicking: I briefly considered hacking on mozilla myself, but then realized I need _different_ people to implement :)

[14:21:01.0000] <Hixie>
annevk: doesn't look like anything new?

[14:29:00.0000] <Hixie>
anyone know of the perf group ever ended up using the hook i added for them?

[14:29:01.0000] <Hixie>
i never heard back on it after adding it

[14:30:00.0000] <benschwarz>
Wow. Way to be a dick Janina Sajka

[14:31:00.0000] <Hixie>
i'm sure she's not trying to be rude

[14:31:01.0000] <Hixie>
she's just passionate

[14:32:00.0000] <Hixie>
(and for some reason thinks we don't think accessibility matters)

[14:32:01.0000] <smaug____>
sicking: have we even agreed to implement shadow dom

[14:33:00.0000] <smaug____>
I kind of understood differently when discussing with someone...

[14:33:01.0000] <smaug____>
(the draft is still unreviewed )

[14:33:02.0000] <smaug____>
dglazkov: and sorry, I'm a bit negative person :)

[14:33:03.0000] <benschwarz>
"Perhaps, Silvia, you won't be surprised to hear that we are engaged in use case development and requirements gathering. Sound familiar?"

[14:34:00.0000] <smaug____>
dglazkov: does the shadow dom already support default handling for events

[14:34:01.0000] <dglazkov>
smaug____: hey, I am still waiting for those bugs to be filed :)

[14:34:02.0000] <smaug____>
yes!

[14:35:00.0000] <benschwarz>
its condescending at the very least, and "not okay"

[14:35:01.0000] <smaug____>
/me kicks himself

[14:36:00.0000] <Hixie>
benschwarz: she's just frustrated. the problem in that e-mail isn't that, it's the part where she doesn't seem to understand why longdesc="" is bad and how we've already addressed the accessibility needs in question.

[14:36:01.0000] <Hixie>
benschwarz: it's quite sad

[14:37:00.0000] <benschwarz>
yeah I think so too

[14:37:01.0000] <Hixie>
benschwarz: (but as i indicated to annevk, it's hardly new)

[14:56:00.0000] <jgraham>
Things that are confusing: opening the wrong email and wondering how the DRM thread turned into a discussion typed arrays

[14:58:00.0000] <gavin>
I propose adding a new AESArray type

[15:29:00.0000] <Hixie>
what should i call this path interface

[15:29:01.0000] <Hixie>
Path?

[15:39:00.0000] <othermaciej>
if you are worried about collisions with other sense of Path, you could say CanvasPath, GraphicsPath, BezierPath...

[15:40:00.0000] <othermaciej>
SVG apparently has SVGPathSegList for this purpose

[15:40:01.0000] <othermaciej>
though it is a rather awful interface

[15:41:00.0000] <heycam>
Hixie, I'd love it if SVG and Canvas could use the same path objects. othermaciej is right that the existing SVG DOM interfaces suck.

[15:42:00.0000] <Hixie>
SVG's is for the d="" attribute DOM, so it's not really anything relevant here

[15:42:01.0000] <Hixie>
and i don't think it would make much sense to reuse this for SVG

[15:42:02.0000] <heycam>
I might wait until you write up your proposal and then see how it can be integrated into SVG DOM improvements

[15:42:03.0000] <Hixie>
but yeah, maybe

[15:42:04.0000] <heycam>
Hixie, they're both representing paths though

[15:43:00.0000] <Hixie>
i'll call it Path for now, and then you can see what you think, and if it's not generic enough we can rename it

[15:43:01.0000] <Hixie>
i do intend to integrate a bit with svg with the d="" syntax and the matrix objects

[15:43:02.0000] <Hixie>
though that might be a bit painful for implementations

[15:43:03.0000] <heycam>
ok cool

[15:43:04.0000] <othermaciej>
SVGPathSegList seems more oriented towards inspecting something created from the d="" syntax than towards creating a path programmatically in a convenient way

[15:44:00.0000] <Hixie>
othermaciej: that's entirely it's purpose, yes

[15:44:01.0000] <Hixie>
its

[15:44:02.0000] <heycam>
yeah that's fair

[15:47:00.0000] <othermaciej>
it would be kind of nice to be able to programatically build a path and set it as an SVG "d" value

[15:47:01.0000] <othermaciej>
and I was going to say "in other places that SVG uses a path" but it seems those are done by linking to a path element

[15:48:00.0000] <othermaciej>
no, I guess it is inconsistent

[15:48:01.0000] <othermaciej>
<glyph> has its own d attribute, but <textPath> links to a <path>

[15:50:00.0000] <heycam>
yeah, although I wonder if that choice was made because SVG Font attributes are not animatable, but if you link to a <path> element that's going to be animatable

[15:50:01.0000] <heycam>
anyway

[15:51:00.0000] <Hixie>
right now i'm not planning on making it possible to inspect a path

[15:51:01.0000] <Hixie>
but that's on the cards for next time

[15:51:02.0000] <Hixie>
once you can inspect a path, makes sense to have a way to export as d="" or even as a <path> element


2012-03-08
[17:31:00.0000] <Seta00>
/me wonders what would be a good way for <input> to support multiple files

[17:32:00.0000] <Hixie>
it already does, assuming you mean <input type=file> and assuming you mean in the spec

[17:32:01.0000] <Hixie>
<input type=file multiple>

[17:34:00.0000] <Seta00>
Hixie, oh, nice. I was helping my mom, Flash was being silly when she was trying to upload some photos to Facebook, and the "classic" uploader uses multiple <input type=file> elems, which is awful

[17:34:01.0000] <Seta00>
/me checks the impl status on |file multiple|

[18:42:00.0000] <Hixie>
ok i give up

[18:42:01.0000] <Hixie>
how do i make an <input type=text> exactly fill a table-cell ?

[18:42:02.0000] <Hixie>
horizontally

[18:42:03.0000] <Hixie>
(vertically it should use whatever height it needs)

[18:44:00.0000] <othermaciej>
width: 100% doesn't work?

[18:45:00.0000] <Hixie>
width:100% seems to give it the width of the browsing context (?)

[18:45:01.0000] <Hixie>
(on an unrelated note, firefox's 3d dom view is ludicrously gratuitous and i love it)

[18:46:00.0000] <Hixie>
/me tries stuffing more nodes into the dom so there's a block between the table-cell and the input

[18:49:00.0000] <Hixie>
nope, still no luck

[18:49:01.0000] <Hixie>
wtf

[18:49:02.0000] <othermaciej>
what are you using to size the table cell?

[18:49:03.0000] <othermaciej>
(I assume something explicit since otherwise it would shrink to fit the input and give you what you want anyway)

[18:50:00.0000] <Hixie>
the table cell is in a table that has a fixed width. the table has two columns, the other cells in the table have text, and i'm hoping for the two columns to magically size based on the content in the other cells

[18:50:01.0000] <Hixie>
maybe i need to make the input width:auto and make it the cell itself

[18:51:00.0000] <Hixie>
nope

[18:51:01.0000] <othermaciej>
this seems to do what I expect:

[18:51:02.0000] <othermaciej>
<table width="100%" style="border: 1px solid black;">

[18:51:03.0000] <othermaciej>
<tr><td>boo</td><td style="border: 1px solid black;"><input style="width: 100%;"></td></tr>

[18:52:00.0000] <Hixie>
does it work if an earlier row has so much text in its second cell that it wraps to multiple lines?

[18:53:00.0000] <Hixie>
(table has a fixed width of some number of ems)

[18:56:00.0000] <Hixie>
hmmm... i think i know what's going on

[18:56:01.0000] <Hixie>
my table is inside a div with overflow:auto so i didn't notice that my table actually is much wider than i want

[18:56:02.0000] <Hixie>
because of an earlier cell having unbreakable wide text

[18:57:00.0000] <Hixie>
is there a white-space value that forcibly cuts extra-wide text?

[19:09:00.0000] <othermaciej>
word-break: emergency I think

[19:09:01.0000] <othermaciej>
but I don't believe that works in all browsers

[19:15:00.0000] <zewt>
AryehGregor: re: CDNs: and if you don't want to use https for latency reasons, that's more reason to want verification with http+aes

[19:18:00.0000] <zewt>
very bizarre that someone's actually claiming that Blob.close() isn't the same as neuter; that seems self-evident

[19:23:00.0000] <Hixie>
othermaciej: didn't see to help in webkit

[19:26:00.0000] <Hixie>
word-break: break-word did it

[23:34:00.0000] <zcorpan>
"This bug has over 130 bugs duplicated against it. What a number !!" https://bugzilla.mozilla.org/show_bug.cgi?id=22274#c220 (almost standards mode quirk)

[23:38:00.0000] <zcorpan>
"somewhat quirky mode" https://bugzilla.mozilla.org/show_bug.cgi?id=153032#c7

[23:51:00.0000] <annevk>
so if you call Blob.close() it would invoke XMLHttpRequest.abort() if passed to send()

[23:52:00.0000] <annevk>
that seems somewhat insane

[23:56:00.0000] <annevk>
why is http://www.w3.org/TR/2010/CR-geolocation-API-20100907/#position_options_interface not a dictionary?

[23:56:01.0000] <annevk>
is nobody reviewing those drafts?

[23:57:00.0000] <rniwa>
annevk: sadly, very few people understand how WebIDL works

[23:58:00.0000] <annevk>
actually, it has NoInterfaceObject so it's not so bad, I guess they might not have updated their draft yet

[23:58:01.0000] <annevk>
rniwa: seems like it

[23:58:02.0000] <MikeSmith>
scott_gonzalez: please ping me when you're back -- wanted to ask if you'd been able to get validation working with nu.validator.servlet.VerifierCommandLine class (and if not I can help you get it working)

[23:58:03.0000] <rniwa>
annevk: I think what they meant was Dictionary

[23:58:04.0000] <rniwa>
but didn't know how to use it properly :)

[23:58:05.0000] <rniwa>
annevk: happens

[23:58:06.0000] <zcorpan>
or maybe it didn't exist when they wrote that

[23:58:07.0000] <rniwa>
even I didn't know WebIDL had dictionary 'til recently because nobody had used it

[00:00:00.0000] <zcorpan>
btw, you're reading an outdated TR/ draft :-P

[00:03:00.0000] <zcorpan>
ok i have no idea how to spec the almost standards quirk

[00:06:00.0000] <annevk>
rniwa: yeah, the problem is that other people copy such patterns without knowing what is going on o_O

[00:06:01.0000] <annevk>
rniwa: witness public-web-notification

[00:06:02.0000] <annevk>
anyway, no damage done yet and feedback to geolocation sent

[00:06:03.0000] <annevk>
zcorpan: who said I was reading that draft? :)

[00:07:00.0000] <zcorpan>
annevk: well you complained that it didn't use a dictionary, so you must have read some of it :-P

[00:08:00.0000] <annevk>
I read the editor's draft, then found a permanent pointer to the error

[00:09:00.0000] <annevk>
not sure why I thought that was useful...

[00:35:00.0000] <zcorpan>
http://simon.html5.org/specs/quirks-mode#the-line-height-calculation-quirk

[00:37:00.0000] <zcorpan>
hmm that's not correct, i should probably say "non-collapsed whitespace" or some such

[00:39:00.0000] <zcorpan>
there

[01:08:00.0000] <zcorpan>
so at one extreme, we have moz, where any border, padding or margin of an inline breaks out of the line height quirk. at the other end, we have opera and ie9, where none of border, padding or margin break out of the quirk. webkit makes border-left, border-right, padding-left and padding-right break out

[01:09:00.0000] <zcorpan>
i've specced webkit for now

[01:43:00.0000] <zcorpan>
"What we do is act as if there was an empty inline element at

[01:43:01.0000] <zcorpan>
the start of every line box, which has a line-height the same as the block's.

[01:43:02.0000] <zcorpan>
This causes the line-height of the box to be the minimum height of each line

[01:43:03.0000] <zcorpan>
box in the block, as required by CSS2. In Quirks mode only, we need to avoid

[01:43:04.0000] <zcorpan>
generating that anonymous inline." (https://bugzilla.mozilla.org/show_bug.cgi?id=24186 )

[01:43:05.0000] <zcorpan>
where does css require that?

[01:55:00.0000] <zcorpan>
"If the inline box contains no glyphs at all, it is considered to contain a strut (an invisible glyph of zero width) with the A and D of the element's first available font." http://www.w3.org/TR/CSS21/visudet.html#leading ?

[01:57:00.0000] <zcorpan>
though that doesn't say that an anonymous inline should be present at the start of blocks

[01:59:00.0000] <zcorpan>
oh, not blocks, line boxes

[02:21:00.0000] <zcorpan>
"Any text that is directly contained inside a block container element (not inside an inline element) must be treated as an anonymous inline element." http://www.w3.org/TR/CSS21/visuren.html#anonymous but that doesn't say to generate an anonymous inline element when there's no text and then an inline element

[02:41:00.0000] <zcorpan>
aaaah. "On a block container element whose content is composed of inline-level elements, 'line-height' specifies the minimal height of line boxes within the element. "

[02:49:00.0000] <zcorpan>
ok, another quirk specced. http://simon.html5.org/specs/quirks-mode#the-blocks-ignore-line-height-quirk

[03:04:00.0000] <zcorpan>
hmm. wonder why i was redirected to the japanese version of mdn when trying to log in

[04:53:00.0000] <bga>
http://ondras.zarovi.cz/demos/rubik/

[05:32:00.0000] <zcorpan>
http://simon.html5.org/specs/quirks-mode#the-percentage-height-quirk probably has something wrong (moz aborts on body if i read the source correctly but http://software.hixie.ch/utilities/js/live-dom-viewer/saved/1369 doesn't seem to match that)

[05:40:00.0000] <annevk>
zcorpan: shouldn't http://simon.html5.org/specs/quirks-mode#html be in HTML?

[05:41:00.0000] <zcorpan>
yeah

[05:42:00.0000] <zcorpan>
i've filed a spec bug for <font>

[05:42:01.0000] <zcorpan>
the other quirk maybe we can drop

[05:42:02.0000] <annevk>
zcorpan: the steps in 3.1 seem to suggest that valid values such as "currentcolor" are ignored

[05:43:00.0000] <zcorpan>
annevk: it's not ignored, it just gets the normal css treatment

[05:44:00.0000] <annevk>
"then a token in the property's value token must be interpreted using the following algorithm"

[05:44:01.0000] <annevk>
the algorithm does not state anything like that

[05:46:00.0000] <annevk>
zcorpan: maybe you want to point out somewhere that ideally quirks are defined as part of where the features are defined, but that this specification is filling the gaps for now? and maybe point from there to e.g. the HTML parser quirk, document.compatMode, ...

[05:51:00.0000] <zcorpan>
annevk: fixed 3.1 and 3.2

[05:51:01.0000] <zcorpan>
annevk: i could point that out in an email to www-style

[05:52:00.0000] <annevk>
yeah maybe that's better

[05:52:01.0000] <annevk>
I wish :any-link was implemented everywhere

[06:06:00.0000] <scott_gonzalez>
MikeSmith: Jörn Zaefferer started working on it, but he said it had a lot of dependencies and the build was taking a really long time so he stopped.

[06:06:01.0000] <scott_gonzalez>
MikeSmith: We're looking for somethings mall that we can include in the jQuery UI repo and run as part of our build.

[06:06:02.0000] <scott_gonzalez>
*something small

[06:07:00.0000] <MikeSmith>
I see

[06:07:01.0000] <MikeSmith>
scott_gonzalez: I can probably put together a standalone Relax NG schema

[06:08:00.0000] <MikeSmith>
which in case you don't know what that is, it's like a DTD

[06:08:01.0000] <MikeSmith>
you'd probably still need to use Java to do checking with that

[06:08:02.0000] <MikeSmith>
but it would be just one dependency

[06:09:00.0000] <scott_gonzalez>
Java as a dependency should be fine. We used YUI Compressor for a long time.

[06:09:01.0000] <MikeSmith>
OK

[06:10:00.0000] <MikeSmith>
the tradeoff is, it would not be able to do checking that's as complete as what validator.nu does

[06:10:01.0000] <scott_gonzalez>
What kinds of validations would be missing?

[06:10:02.0000] <MikeSmith>
an example is, validator.nu checks charset values against the IANA registry, to make sure they are registered values

[06:10:03.0000] <MikeSmith>
and it does the same thing for encoding names

[06:10:04.0000] <scott_gonzalez>
Ok, well we only use utf-8 :-)

[06:11:00.0000] <MikeSmith>
ok

[06:12:00.0000] <scott_gonzalez>
That type of stuff should be fine. I mostly just want to make sure we don't have any misspelled tags/attributes, unclosed tags, etc.

[06:12:01.0000] <MikeSmith>
OK

[06:12:02.0000] <annevk>
should stop checking against the IANA registry

[06:12:03.0000] <annevk>
and instead UTF-8, warn for anything else in http://dvcs.w3.org/hg/encoding/raw-file/tip/Overview.html and otherwise scream

[06:13:00.0000] <annevk>
instead only accept utf-8*

[06:13:01.0000] <MikeSmith>
yeah we could do that eventually

[06:13:02.0000] <MikeSmith>
we didn't have anything like the Encoding spec before

[06:13:03.0000] <MikeSmith>
but right now we are just following what the HTML5 spec requires

[06:14:00.0000] <MikeSmith>
if the HTML spec is changed to reference the Encoding spec, then we change the validator

[06:14:01.0000] <MikeSmith>
scott_gonzalez: so I think I can have something for you by next week

[06:15:00.0000] <scott_gonzalez>
MikeSmith: That'd be fantastic.

[06:16:00.0000] <annevk>
MikeSmith: yeah, still have to finish some boring/difficult algorithms :/

[06:17:00.0000] <MikeSmith>
yeah

[06:17:01.0000] <MikeSmith>
I talked to Richard about the Encoding spec btw

[06:18:00.0000] <MikeSmith>
I think he's worried it's too restrictive

[06:18:01.0000] <annevk>
well, that was the goal

[06:23:00.0000] <annevk>
oh that is disappointing

[06:23:01.0000] <annevk>
the math in deviceorientation is external

[06:26:00.0000] <jgraham>
External in what sense?

[06:27:00.0000] <annevk>
<object>

[06:31:00.0000] <annevk>
grrr

[06:31:01.0000] <annevk>
W3C and their silly tons of groups each reinventing WebApps

[06:31:02.0000] <annevk>
and a couple of us who're not quite, but near to "oh well" cleaning up the mess

[06:35:00.0000] <zewt>
that's why I cringed when I heard about these "community groups"; seems like nothing but more fragmentation

[06:41:00.0000] <annevk>
pretty much the only thing I can still get upset over; people not doing the right thing because "oh my god; charter expires; cannot get to PR; cannot get to CR"

[06:52:00.0000] <hsivonen>
"Thanks for clarifying that it is not browser innovation and competition that this is enabling.

[06:52:01.0000] <hsivonen>
"

[06:52:02.0000] <hsivonen>
foolip++

[06:55:00.0000] <zcorpan>
ok i made something up, it's probably wrong. http://simon.html5.org/specs/quirks-mode#the-percentage-height-quirk

[06:55:01.0000] <zcorpan>
that's it for today folks

[08:28:00.0000] <dglazkov>
good morning, Whatwg!

[08:28:01.0000] <dglazkov>
and hatwig!

[08:57:00.0000] <bga_>
hm. let we build ui for japan. text from up to down

[08:57:01.0000] <bga_>
i can not imagine how it will look. vertical button, vertical tab items ...

[08:58:00.0000] <bga_>
any related images?

[09:11:00.0000] <Ms2ger>
zcorpan++

[09:11:01.0000] <Ms2ger>
/me is all for making things up in specs

[09:14:00.0000] <bga_>
http://i.msdn.microsoft.com/dynimg/IC93452.png

[09:15:00.0000] <bga_>
seem nobody want to support tradition writing system of japanise

[09:16:00.0000] <bga_>
but support arabic right to left is ok

[09:23:00.0000] <bga_>
http://ompldr.org/vY3oyYg/japaniseWindow.png

[09:23:01.0000] <bga_>
some concept

[09:33:00.0000] <michel_v>
is it widely requested?

[09:35:00.0000] <michel_v>
somehow related: I wonder if boustrophedon is doable with some JS

[09:35:01.0000] <michel_v>
something that would dynamically make lines be ltr then rtl then ltr etc

[09:43:00.0000] <michel_v>
bga_: actually, are there fonts for up to down writing?

[09:43:01.0000] <michel_v>
nevermind, there's those that are used in books

[09:48:00.0000] <bga_>
michel_v i dont know how it required by real world. But its possible

[09:48:01.0000] <bga_>
http://ompldr.org/vY3oycA/japaniseSimpleDialog.png http://ompldr.org/vY3oybg/japaniseMessageBox.png

[09:49:00.0000] <bga_>
seems its enough to understand concept

[09:50:00.0000] <karlcow>
michel_v: http://la-grange.net/2007/07/23-japanese-typography

[09:55:00.0000] <karlcow>
hmm interesting I had not noticed that Lion had vertical layout now in textEdit http://photos.appleinsider.com/LionTE2.png

[09:56:00.0000] <bga_>
im not alone :)

[09:58:00.0000] <michel_v>
oh, interesting

[09:58:01.0000] <michel_v>
karlcow: yeah, saw that in books before. not sure how well that translates in terms of readability on screen

[09:58:02.0000] <niloy>
transform: rotate(-90deg)

[09:58:03.0000] <michel_v>
which is a medium that you usually can not rotate (except for mobile devices)

[09:59:00.0000] <michel_v>
niloy: more to it than that. you'd have to also rotate the japanese characters back 90 degrees

[09:59:01.0000] <niloy>
ooh ya

[10:02:00.0000] <Hixie>
foolip: oops, missed some e-mails.

[10:02:01.0000] <Hixie>
foolip: (re my latest e-mail to you)

[10:10:00.0000] <Ms2ger>
MikeSmith, yt?

[10:16:00.0000] <Hixie>
foolip: ok, now i've replied.

[10:18:00.0000] <Hixie>
i'm amused by the http+aes-criticising people saying that they think it should be in a different spec, but not volunteering to edit one, given that when i first wrote it one of teh first things i said was that i was hoping someone would put it in another spec for me...

[10:19:00.0000] <Ms2ger>
That still amuses you? :)

[10:20:00.0000] <Hixie>
well it's like they think it's a big revelation that it should be in a different spec

[10:20:01.0000] <Hixie>
as if someone has ever argued otherwise

[10:21:00.0000] <Ms2ger>
But surely you want all the stuff in your spec! ;)

[10:21:01.0000] <Ms2ger>
Hmm, I haven't heard anybody call it "Ian's spec" lately

[10:25:00.0000] <aklein>
smaug____: yt? curious if you have any thoughts on http://lists.w3.org/Archives/Public/www-dom/2012JanMar/0145.html

[10:27:00.0000] <Ms2ger>
He's on a call

[10:49:00.0000] <smaug____>
aklein: meeting...

[11:11:00.0000] <smaug____>
aklein: I'll reply to that later this week

[11:11:01.0000] <aklein>
smaug____: ok, thanks

[11:11:02.0000] <smaug____>
(once I've decided what I want the behavior to be :) )

[11:11:03.0000] <aklein>
:)

[11:11:04.0000] <smaug____>
/me will do now only mutationobservers for few days

[11:11:05.0000] <smaug____>
+reviews, and some more reviews

[11:12:00.0000] <Ms2ger>
\o/

[11:12:01.0000] <aklein>
smaug____: if it helps at all, the test cases I referred to are up on https://bugs.webkit.org/show_bug.cgi?id=80549

[11:17:00.0000] <smaug____>
Ms2ger: I also need to not read public-html to maintain the remainings of my mental health.

[11:18:00.0000] <Ms2ger>
I never read public-html, and I'm still insane :)

[11:19:00.0000] <smaug____>
indeed. What would you become after reading public-html... scary

[11:21:00.0000] <Ms2ger>
:)

[11:46:00.0000] <Philip`>
Should http://software.hixie.ch/utilities/js/live-dom-viewer/?%3C!DOCTYPE%20html%3E%0D%0A%3Cstyle%3Ediv%20%7B%20content%3A%20%22A%22%20%7D%3C%2Fstyle%3E%0D%0A%3Cdiv%3EB%3C%2Fdiv%3E result in "A" or "B"?

[11:47:00.0000] <Philip`>
(Recentish Opera says A, recentish Firefox says B)

[11:49:00.0000] <Ms2ger>
Depends

[11:50:00.0000] <Ms2ger>
css3-content (use to) say A

[11:50:01.0000] <Ms2ger>
(That spec still has "Ian Hickson, Opera Software")

[11:50:02.0000] <Ms2ger>
And still follows Opera

[11:53:00.0000] <Philip`>
Does something else say something else?

[11:53:01.0000] <Ms2ger>
Ah, it does have "This specification is not being actively maintained, and should not be used as a guide for implementations. It may be revived in the future, but for now should be considered obsolete."

[11:54:00.0000] <Ms2ger>
CSS21 only defined content for pseudos

[12:00:00.0000] <jgraham>
Yeah, so apparently that feature causes us a few site compat issues

[12:00:01.0000] <Ms2ger>
Really? :(

[12:00:02.0000] <jgraham>
Well it seems like it's a small enough number that we could sitepatch or something

[12:02:00.0000] <Philip`>
/me was curious since he found a site that it breaks

[12:02:01.0000] <jgraham>
But it's not really clear if the smart thing is to drop it and assume it will go away, or wait for someone to start maintaining the spec

[12:02:02.0000] <jgraham>
(and then for others to implement)

[12:09:00.0000] <jgraham>
Philip`: Pointer?

[12:16:00.0000] <annevk>
if we drop content:url() too, annevankesteren.nl breaks

[12:16:01.0000] <annevk>
not really sure that's acceptable

[12:16:02.0000] <Ms2ger>
Pff

[12:17:00.0000] <Ms2ger>
Who uses that

[12:17:01.0000] <smaug____>
add sitepatch for annevankesteren.nl

[12:17:02.0000] <annevk>
/me raises hand

[12:21:00.0000] <Philip`>
jgraham: http://www.malideveloper.com/ (right sidebar)

[12:29:00.0000] <jgraham>
Philip`: Oh, that site is annoying

[12:29:01.0000] <jgraham>
But thanks

[12:36:00.0000] <Philip`>
Annoying for more reasons than the autoplaying video?

[12:37:00.0000] <jgraham>
No, mainly for the autoplaying, autolooping, noisy video

[14:03:00.0000] <rniwa>
jgraham, annevk: yt?

[14:04:00.0000] <rniwa>
AryehGregor: yt?

[14:24:00.0000] <Hixie>
new otherWindow.Path() -- should it be associated with window.document or otherWindow.document?

[14:24:01.0000] <Hixie>
what do we have in the way of precedent on this front?

[14:24:02.0000] <jgraham>
rniwa: kind of here

[14:25:00.0000] <Hixie>
new otherWindow.Image().ownerDocument.window == otherWindow

[14:25:01.0000] <rniwa>
jgraham: hi, can we all agree that we shouldn't do: http://dev.w3.org/csswg/css3-regions/#dom-namedflow ?

[14:25:02.0000] <Hixie>
i guess i'll follow that pattern

[14:25:03.0000] <rniwa>
jgraham: css3 region spec is introducing a new dynamic node list that contains the list of all elements that belong to the same named flow

[14:25:04.0000] <rniwa>
which means that accessing elements in this node list would require style resolution :(

[14:26:00.0000] <hober>
there's a lot wrong with the regions om stuff

[14:26:01.0000] <rniwa>
hober: hi hober

[14:26:02.0000] <rniwa>
hober: can we ask www-style folks to fix that?

[14:27:00.0000] <jgraham>
rniwa: yeah, that sounds daft

[14:27:01.0000] <hober>
rniwa: you could post a followup to http://lists.w3.org/Archives/Public/www-style/2012Feb/1337.html

[14:30:00.0000] <jgraham>
I'm not really clear why the draft is so obsessed with making everything live. I think that's just confusing

[14:31:00.0000] <jgraham>
(as well as being bad for other reasons, particularly in the nodelist case)

[14:31:01.0000] <astearns>
jgraham: what do you mean by 'live'?

[14:32:00.0000] <rniwa>
hober: yeah... my email address has been kicked out of www-style for some mail deamon errors :(

[14:32:01.0000] <rniwa>
apparently my mail deamon was spamming theirs

[14:33:00.0000] <rniwa>
jgraham: I agree.

[14:34:00.0000] <rniwa>
jgraham: but then some people prefer it be live :)

[14:35:00.0000] <Hixie>
a = new Path(); a.moveTo(100,100); a.lineTo(100,200); var b = new Path(); b.moveTo(200,100); b.lineTo(200,200); a.addFill(b); a.lineTo(300,100); a.lineTo(300,200); context.fill(a);

[14:36:00.0000] <Hixie>
er, make that last fill(a) be stroke(a);

[14:36:01.0000] <Hixie>
what should get painted?

[14:37:00.0000] <Hixie>
i think the answer is a vertical line next to a backwards N

[14:37:01.0000] <Hixie>
anyone disagree?

[15:10:00.0000] <Hixie>
how does http://www.whatwg.org/specs/web-apps/current-work/#path-objects (incomplete) look to people so far?

[15:10:01.0000] <Hixie>
Philip`: your opinion in particular would be most welcome

[15:56:00.0000] <Hixie>
ok i give up

[15:56:01.0000] <Hixie>
wtf should the directionality of a Path object be?

[15:56:02.0000] <Hixie>
ltr or rtl?

[15:56:03.0000] <Hixie>
or based on something, and if so, what?

[15:57:00.0000] <Hixie>
the "obvious" answer is to base it on the element passed to the Path constructor, if any, or else the root element of the Document of the Window on which the constructor was called, if any, or else ltr

[15:57:01.0000] <Hixie>
but that seems like a quite complicated answer

[15:59:00.0000] <heycam>
how does directionality matter?

[15:59:01.0000] <heycam>
oh for the text layout

[15:59:02.0000] <heycam>
methods

[15:59:03.0000] <heycam>
I would say take the direction property of the element passed in

[15:59:04.0000] <heycam>
and ltr otherwise


2012-03-09
[16:00:00.0000] <heycam>
but maybe looking at root element, or the canvas element, makes sense as a fallback...

[16:00:01.0000] <Hixie>
there's no "canvas element" unless one was passed in

[16:01:00.0000] <heycam>
ah right

[16:01:01.0000] <Hixie>
(otherwise i'd always use it, which is what hte old methods do)

[16:04:00.0000] <Hixie>
ok now about half of the text layout algorithm is just working out the default direction to use.

[16:05:00.0000] <Hixie>
that's just silly.

[16:06:00.0000] <Hixie>
i wonder if i shouldn't instead use direction:auto...

[16:54:00.0000] <Hixie>
hm no you wouldn't want direction:auto

[16:54:01.0000] <Hixie>
cos then you wouldn't know where you text would end up

[16:54:02.0000] <StoneCypher>
in a pile

[16:55:00.0000] <StoneCypher>
on the floor

[17:19:00.0000] <kennyluck_>
Hixie, I think in general bidi people want an extra argument to override it's directionality and the default behavior should be the result of applying the first-strong algorithm to the string like how window.alert works.

[17:19:01.0000] <Hixie>
no, that makes no sense as a default behaviour

[17:20:00.0000] <StoneCypher>
why

[17:20:01.0000] <Hixie>
at least not combined with textAlign=start or end

[17:20:02.0000] <Hixie>
because you wouldn't be able to predict where the text would end up

[17:20:03.0000] <StoneCypher>
oh. see, i dont' know what textAlign does.

[17:20:04.0000] <StoneCypher>
which is sad because i'm in the middle of writing internationalization software.

[17:22:00.0000] <kennyluck_>
Hixie, in any case I am not a bidi expert and you might want to send a mail to public-i18n-bidi. Aharon would probably give you more useful information.

[17:22:01.0000] <Hixie>
i'm pretty sure what the spec says now is the right thing for it to say, modulo maybe adding a direction override at some point

[17:22:02.0000] <Hixie>
but that can wait

[18:51:00.0000] <MikeSmith>
interesting case of ruby

[18:52:00.0000] <MikeSmith>
http://www.yomiuri.co.jp/national/culture/news/20120308-OYT1T01125.htm

[18:53:00.0000] <MikeSmith>
uses <rb>

[18:53:01.0000] <MikeSmith>
though it doesn't really need to

[18:54:00.0000] <MikeSmith>
anyway, I don't think anybody is ever going to be able to know how that's supposed to be pronounced

[18:54:01.0000] <MikeSmith>
without the ruby I mean

[18:54:02.0000] <MikeSmith>
even native speakers

[18:55:00.0000] <MikeSmith>
鬼 means demon

[18:56:00.0000] <MikeSmith>
which is almost always pronounced "oni" as far as I know

[18:57:00.0000] <MikeSmith>
but he's using it as "keen" (キーン)

[19:05:00.0000] <MikeSmith>
oh, it's "ki" in some words I guess

[22:00:00.0000] <glob>
.

[22:00:42.0000] <glob>
.

[22:23:00.0000] <rahaman>
Hi all, I need some clarification on border attributes for a <td> element, this is the relevant email I sent to the mailing list http://lists.whatwg.org/htdig.cgi/whatwg-whatwg.org/2012-March/034993.html..

[22:24:00.0000] <rahaman>
can some one please spend 5 mins to help me with this ?

[22:24:14.0000] <rahaman>
Hi all, I need some clarification on border attributes for a <td> element, this is the relevant email I sent to the mailing list http://lists.whatwg.org/htdig.cgi/whatwg-whatwg.org/2012-March/034993.html..

[22:24:32.0000] <rahaman>
can some one please spend 5 mins to help me with this ?

[22:25:00.0000] <Hixie>
sounds like a bug in webkit

[22:25:01.0000] <Hixie>
the spec in question would be the CSS spec, though, not the HTML spec

[22:25:20.0000] <Hixie>
sounds like a bug in webkit

[22:25:40.0000] <Hixie>
the spec in question would be the CSS spec, though, not the HTML spec

[22:26:00.0000] <Hixie>
(also, so that my comments aren't completely useless to you :-), know that you can simplify your DOCTYPE to just <!DOCTYPE HTML>)

[22:26:01.0000] <zcorpan>
Hixie: surely the rendering section is relevant

[22:26:21.0000] <Hixie>
(also, so that my comments aren't completely useless to you :-), know that you can simplify your DOCTYPE to just <!DOCTYPE HTML>)

[22:27:00.0000] <Hixie>
not in this case, as far as i can tell

[22:27:01.0000] <zcorpan>
oh

[22:27:02.0000] <Hixie>
oh... wait...

[22:27:03.0000] <Hixie>
maybe it is...

[22:27:11.0000] <zcorpan>
Hixie: surely the rendering section is relevant

[22:27:35.0000] <Hixie>
not in this case, as far as i can tell

[22:27:41.0000] <zcorpan>
oh

[22:28:00.0000] <Hixie>
the border-width is ending up zero in webkit

[22:28:01.0000] <Hixie>
interesting

[22:28:02.0000] <Hixie>
wonder what the rendering section says about that...

[22:28:13.0000] <Hixie>
oh... wait...

[22:28:15.0000] <Hixie>
maybe it is...

[22:28:22.0000] <Hixie>
the border-width is ending up zero in webkit

[22:28:24.0000] <Hixie>
interesting

[22:28:29.0000] <Hixie>
wonder what the rendering section says about that...

[22:29:00.0000] <rahaman>
hixie: yeah i have debugged the relevant code in WebKit..

[22:30:00.0000] <Hixie>
this does seem like a webkit bug, but zcorpan is right, it's a default rendering rules bug

[22:30:01.0000] <rahaman>
if i dont mention border-width explicitly, the border-width is coming as zero for <td> because of some code we have written in webkit...

[22:30:02.0000] <rahaman>
n when I discussed about whay those part of the code is thr in #webkit, we could not find out the reason as this is old code..

[22:30:09.0000] <rahaman>
hixie: yeah i have debugged the relevant code in WebKit..

[22:30:40.0000] <Hixie>
this does seem like a webkit bug, but zcorpan is right, it's a default rendering rules bug

[22:30:40.0000] <rahaman>
if i dont mention border-width explicitly, the border-width is coming as zero for <td> because of some code we have written in webkit...

[22:31:09.0000] <rahaman>
n when I discussed about whay those part of the code is thr in #webkit, we could not find out the reason as this is old code..

[22:32:00.0000] <rahaman>
so me & Kling decided to discuss this here to get a clear idea of the expected behavior in such cases...

[22:32:22.0000] <rahaman>
so me & Kling decided to discuss this here to get a clear idea of the expected behavior in such cases...

[22:33:00.0000] <rahaman>
hixie: I did not understand this "but zcorpan is right, it's a default rendering rules bug " :( can u pls elaborate a bit?

[22:33:01.0000] <zcorpan>
see http://www.whatwg.org/specs/web-apps/current-work/multipage/rendering.html#tables

[22:33:02.0000] <zcorpan>
that specifies the expected behavior

[22:33:03.0000] <zcorpan>
webkit does something different

[22:33:17.0000] <rahaman>
hixie: I did not understand this "but zcorpan is right, it's a default rendering rules bug " :( can u pls elaborate a bit?

[22:33:34.0000] <zcorpan>
see http://www.whatwg.org/specs/web-apps/current-work/multipage/rendering.html#tables

[22:33:46.0000] <zcorpan>
that specifies the expected behavior

[22:33:53.0000] <zcorpan>
webkit does something different

[22:34:00.0000] <zcorpan>
i'd recommend writing tests against that, see that it passes other browsers (it it doesn't, maybe the spec is still wrong), and then implement it :-)

[22:34:01.0000] <zcorpan>
and share the tests :-)

[22:34:35.0000] <zcorpan>
i'd recommend writing tests against that, see that it passes other browsers (it it doesn't, maybe the spec is still wrong), and then implement it :-)

[22:35:00.0000] <zcorpan>
(this can be checked with javascript so you could use http://w3c-test.org/resources/testharness.js )

[22:35:00.0000] <zcorpan>
and share the tests :-)

[22:35:01.0000] <Hixie>
webkit seems to have some default rule for border-width even when there's no border attribute

[22:35:02.0000] <Hixie>
which contradicts the section zcorpan cited

[22:35:49.0000] <zcorpan>
(this can be checked with javascript so you could use http://w3c-test.org/resources/testharness.js )

[22:36:00.0000] <Hixie>
(sorry, would have explained earlier but ran into a bug with the status annotation script!)

[22:36:00.0000] <Hixie>
webkit seems to have some default rule for border-width even when there's no border attribute

[22:36:01.0000] <rahaman>
ok sure thanks zcorpan & Hixie for your time...

[22:36:02.0000] <Hixie>
(in case anyone got 500s changing annotations recently, that should be fixed now...)

[22:36:03.0000] <zcorpan>
np

[22:36:08.0000] <Hixie>
which contradicts the section zcorpan cited

[22:36:22.0000] <Hixie>
(sorry, would have explained earlier but ran into a bug with the status annotation script!)

[22:36:27.0000] <rahaman>
ok sure thanks zcorpan & Hixie for your time...

[22:36:39.0000] <Hixie>
(in case anyone got 500s changing annotations recently, that should be fixed now...)

[22:37:08.0000] <zcorpan>
np

[23:06:00.0000] <zcorpan>
hah, making <source> void ended up in "positive effects" of http://www.w3.org/html/wg/wiki/ChangeProposals/issue-179_no_change

[23:07:08.0000] <zcorpan>
hah, making <source> void ended up in "positive effects" of http://www.w3.org/html/wg/wiki/ChangeProposals/issue-179_no_change

[23:21:00.0000] <hsivonen>
has Chrome removed UI for character encoding?

[23:22:00.0000] <hsivonen>
I don't find the UI in Chrome 19 dev on Linux

[23:22:01.0000] <hsivonen>
has Chrome removed UI for character encoding?

[23:22:21.0000] <hsivonen>
I don't find the UI in Chrome 19 dev on Linux

[23:24:00.0000] <hsivonen>
annevk: is Chrome supposed to support iso-2022-jp?

[23:24:34.0000] <hsivonen>
annevk: is Chrome supposed to support iso-2022-jp?

[23:25:00.0000] <hsivonen>
nevermind

[23:25:51.0000] <hsivonen>
nevermind

[23:26:00.0000] <hsivonen>
what should I read to learn key differences and similarities of iso-2022-jp and shift_jis?

[23:27:00.0000] <hsivonen>
on the level of how they handle incoming bytes

[23:27:16.0000] <hsivonen>
what should I read to learn key differences and similarities of iso-2022-jp and shift_jis?

[23:27:38.0000] <hsivonen>
on the level of how they handle incoming bytes

[23:28:00.0000] <hsivonen>
/me studies http://dvcs.w3.org/hg/encoding/raw-file/tip/Overview.html#legacy-multi-octet-japanese-encodings

[23:29:00.0000] <hsivonen>
is there a trick that's equivalent with multiplying by 188 that can be performed in the ALU?

[23:29:10.0000] <hsivonen>
/me studies http://dvcs.w3.org/hg/encoding/raw-file/tip/Overview.html#legacy-multi-octet-japanese-encodings

[23:30:10.0000] <hsivonen>
is there a trick that's equivalent with multiplying by 188 that can be performed in the ALU?

[23:48:00.0000] <annevk>
hsivonen: what do you mean with ALU?

[23:48:23.0000] <annevk>
hsivonen: what do you mean with ALU?

[23:51:00.0000] <hsivonen>
annevk: arithmetic-logic unit

[23:51:43.0000] <hsivonen>
annevk: arithmetic-logic unit

[23:52:00.0000] <hsivonen>
annevk: the part of the CPU that evaluates +, -, ==, <=, &, |, etc. but not *, / or %

[23:52:22.0000] <hsivonen>
annevk: the part of the CPU that evaluates +, -, ==, <=, &, |, etc. but not *, / or %

[23:53:00.0000] <annevk>
decoding on the CPU? sounds like fun

[23:53:01.0000] <hsivonen>
annevk: all the "multiplications" in UTF-8 are powers of two, so they can be implemented as shifts instead of multiplications

[23:53:24.0000] <annevk>
decoding on the CPU? sounds like fun

[23:54:00.0000] <hsivonen>
annevk: so you can do UTF-8 within the ALU without using multiplications

[23:54:02.0000] <hsivonen>
annevk: all the "multiplications" in UTF-8 are powers of two, so they can be implemented as shifts instead of multiplications

[23:54:20.0000] <hsivonen>
annevk: so you can do UTF-8 within the ALU without using multiplications

[00:03:00.0000] <annevk>
hsivonen: yeah I know, I wasn't sure whether I should use shifts in a specification

[00:03:59.0000] <annevk>
hsivonen: yeah I know, I wasn't sure whether I should use shifts in a specification

[00:05:00.0000] <hsivonen>
annevk: Using shifts makes it more obvious what the reasonable implementation would be

[00:05:44.0000] <hsivonen>
annevk: Using shifts makes it more obvious what the reasonable implementation would be

[00:06:00.0000] <zcorpan>
hsivonen: see if there's an obvious pattern here http://software.hixie.ch/utilities/js/live-dom-viewer/saved/1370

[00:06:31.0000] <zcorpan>
hsivonen: see if there's an obvious pattern here http://software.hixie.ch/utilities/js/live-dom-viewer/saved/1370

[00:07:00.0000] <zcorpan>
the last two bits are always 0

[00:07:01.0000] <annevk>
hsivonen: that's certainly true

[00:07:47.0000] <zcorpan>
the last two bits are always 0

[00:08:12.0000] <annevk>
hsivonen: that's certainly true

[00:25:00.0000] <annevk>
hsivonen: I guess I can change that later again

[00:25:35.0000] <annevk>
hsivonen: I guess I can change that later again

[00:41:00.0000] <annevk>
hmm FocusEvent?!

[00:42:00.0000] <annevk>
guess I have to properly review DOM 3 Events again at one point...

[00:42:05.0000] <annevk>
hmm FocusEvent?!

[00:42:29.0000] <annevk>
guess I have to properly review DOM 3 Events again at one point...

[00:44:00.0000] <annevk>
didn't know Iceweasel was still a thing

[00:44:18.0000] <annevk>
didn't know Iceweasel was still a thing

[00:46:00.0000] <hsivonen>
annevk: AFAIK, the copyright licensing of the Firefox icon has changed since the disagreement with Debian, but Mozilla still hasn't given Debian a trademark license

[00:46:49.0000] <hsivonen>
annevk: AFAIK, the copyright licensing of the Firefox icon has changed since the disagreement with Debian, but Mozilla still hasn't given Debian a trademark license

[00:47:00.0000] <hsivonen>
(I might be wrong about the part after "but" and I realize that Debian folks will recognize the way I formulated the after-"but" part as being part of the problem)

[00:47:47.0000] <hsivonen>
(I might be wrong about the part after "but" and I realize that Debian folks will recognize the way I formulated the after-"but" part as being part of the problem)

[00:48:00.0000] <hsivonen>
annevk: Mark Pilgrim always remembered to point this out before he went 410

[00:48:37.0000] <hsivonen>
annevk: Mark Pilgrim always remembered to point this out before he went 410

[01:00:00.0000] <charlvn>
i wasn't aware that anything changed with the debian ice* situation, afaik that is still all that debian ships with

[01:00:24.0000] <charlvn>
i wasn't aware that anything changed with the debian ice* situation, afaik that is still all that debian ships with

[01:02:00.0000] <annevk>
hsivonen: yes, made me think of him too again when I saw it

[01:02:01.0000] <annevk>
hsivonen: colleague of mine apparently uses that version of Gecko

[01:02:31.0000] <annevk>
hsivonen: yes, made me think of him too again when I saw it

[01:02:41.0000] <annevk>
hsivonen: colleague of mine apparently uses that version of Gecko

[01:07:00.0000] <hsivonen>
annevk: it's worth noting that Iceweasel in Debian Stable has an ancient Gecko

[01:07:56.0000] <hsivonen>
annevk: it's worth noting that Iceweasel in Debian Stable has an ancient Gecko

[01:08:00.0000] <hsivonen>
charlvn: from the POV of what Debian ships, nothing has changed

[01:08:01.0000] <hsivonen>
charlvn: but the icon *copyright* licensing objection is now moot

[01:08:54.0000] <hsivonen>
charlvn: from the POV of what Debian ships, nothing has changed

[01:09:00.0000] <hsivonen>
charlvn: of course, the copyright licensing of the icon doesn't matter unless you are trademark licensed, too

[01:09:12.0000] <hsivonen>
charlvn: but the icon *copyright* licensing objection is now moot

[01:09:39.0000] <hsivonen>
charlvn: of course, the copyright licensing of the icon doesn't matter unless you are trademark licensed, too

[01:34:00.0000] <MikeSmith>
hsivonen: I updated to validator datatype code today to support having a space in place of the T for the time microsyntax.

[01:35:00.0000] <MikeSmith>
I made some other changes that I now realize you might not have wanted made, so I'd like to ask you about those

[01:35:01.0000] <hsivonen>
MikeSmith: what other changes?

[01:35:02.0000] <MikeSmith>
Ms2ger: you pinged me the other day

[01:35:09.0000] <MikeSmith>
hsivonen: I updated to validator datatype code today to support having a space in place of the T for the time microsyntax.

[01:36:00.0000] <MikeSmith>
hsivonen: I changed the milliseconds checking so that it requires 1, 2, or 3 digits instead of just one or more

[01:36:00.0000] <MikeSmith>
I made some other changes that I now realize you might not have wanted made, so I'd like to ask you about those

[01:36:01.0000] <MikeSmith>
but then I remembered you might have outstanding feedback on that

[01:36:02.0000] <MikeSmith>
waiting to hear back from Hixie

[01:36:14.0000] <hsivonen>
MikeSmith: what other changes?

[01:36:16.0000] <MikeSmith>
Ms2ger: you pinged me the other day

[01:36:54.0000] <MikeSmith>
hsivonen: I changed the milliseconds checking so that it requires 1, 2, or 3 digits instead of just one or more

[01:37:00.0000] <MikeSmith>
if that's the case I'll back the code out

[01:37:12.0000] <MikeSmith>
but then I remembered you might have outstanding feedback on that

[01:37:17.0000] <MikeSmith>
waiting to hear back from Hixie

[01:37:31.0000] <MikeSmith>
if that's the case I'll back the code out

[01:38:00.0000] <Ms2ger>
MikeSmith, http://validator.w3.org/checklink?uri=http%3A%2F%2Fsimon.html5.org%2Fdump%2Frefs.html&hide_type=all&recursive=on&depth=&check=Check claims that http://dvcs.w3 urls redirect to https://dvcs.w3 ones, but that doesn't seem to happen in my browser

[01:38:01.0000] <Ms2ger>
Do you happen to know anything about that? :)

[01:38:02.0000] <zcorpan>
MikeSmith: i first read "validator doctype code ..."

[01:38:03.0000] <hsivonen>
MikeSmith: if your code matches the current spec on milliseconds, it's ok

[01:38:56.0000] <Ms2ger>
MikeSmith, http://validator.w3.org/checklink?uri=http%3A%2F%2Fsimon.html5.org%2Fdump%2Frefs.html&hide_type=all&recursive=on&depth=&check=Check claims that http://dvcs.w3 urls redirect to https://dvcs.w3 ones, but that doesn't seem to happen in my browser

[01:39:00.0000] <MikeSmith>
hsivonen: OK

[01:39:07.0000] <Ms2ger>
Do you happen to know anything about that? :)

[01:39:08.0000] <zcorpan>
MikeSmith: i first read "validator doctype code ..."

[01:39:08.0000] <hsivonen>
MikeSmith: if your code matches the current spec on milliseconds, it's ok

[01:39:53.0000] <MikeSmith>
hsivonen: OK

[01:40:00.0000] <MikeSmith>
hsivonen: so one other change I made had the effect of not reporting 1996-01-01T12:05Z as an error

[01:40:01.0000] <MikeSmith>
that is, second-less times in global-date-and-time strings

[01:40:32.0000] <MikeSmith>
hsivonen: so one other change I made had the effect of not reporting 1996-01-01T12:05Z as an error

[01:40:49.0000] <MikeSmith>
that is, second-less times in global-date-and-time strings

[01:41:00.0000] <MikeSmith>
but that one I now remember that you were still waiting on feedback from Hixie on

[01:41:01.0000] <MikeSmith>
iirc

[01:41:21.0000] <MikeSmith>
but that one I now remember that you were still waiting on feedback from Hixie on

[01:41:22.0000] <MikeSmith>
iirc

[01:42:00.0000] <MikeSmith>
Ms2ger: does not happen in my browser either

[01:42:01.0000] <MikeSmith>
so I have no idea why checklink is reporting that it does

[01:42:17.0000] <MikeSmith>
Ms2ger: does not happen in my browser either

[01:42:29.0000] <MikeSmith>
so I have no idea why checklink is reporting that it does

[01:43:00.0000] <MikeSmith>
it would be nice if it actually did, because if you try to push to http://dvcs.w3/.org it will fail

[01:43:20.0000] <MikeSmith>
it would be nice if it actually did, because if you try to push to http://dvcs.w3/.org it will fail

[01:55:00.0000] <annevk>
MikeSmith: https://www.w3.org/Bugs/Public/show_bug.cgi?id=16203#c2

[01:55:01.0000] <MikeSmith>
/me looks

[01:55:25.0000] <annevk>
MikeSmith: https://www.w3.org/Bugs/Public/show_bug.cgi?id=16203#c2

[01:55:36.0000] <MikeSmith>
/me looks

[01:56:00.0000] <MikeSmith>
Ms2ger: btw, I noticed you did a pusj to the testsuite on dvcs.w3.org but it didn't get pushed to github. Did you get any error message when you pushed?

[01:56:01.0000] <MikeSmith>
annevk: under WebAppSec product, right?

[01:56:34.0000] <MikeSmith>
Ms2ger: btw, I noticed you did a pusj to the testsuite on dvcs.w3.org but it didn't get pushed to github. Did you get any error message when you pushed?

[01:57:00.0000] <annevk>
MikeSmith: yeah, just name it CSP I guess

[01:57:01.0000] <MikeSmith>
hai

[01:57:02.0000] <Ms2ger>
MikeSmith, I told you about it, no? :)

[01:57:03.0000] <MikeSmith>
oh

[01:57:03.0000] <MikeSmith>
annevk: under WebAppSec product, right?

[01:57:04.0000] <MikeSmith>
yeah

[01:57:05.0000] <MikeSmith>
so I fixed it after that

[01:57:25.0000] <annevk>
MikeSmith: yeah, just name it CSP I guess

[01:57:31.0000] <MikeSmith>
hai

[01:57:54.0000] <Ms2ger>
MikeSmith, I told you about it, no? :)

[01:58:00.0000] <MikeSmith>
sorry ..

[01:58:01.0000] <annevk>
so HTML / WebApps was 1-4 correct?

[01:58:02.0000] <Ms2ger>
:)

[01:58:03.0000] <annevk>
of May that is

[01:58:07.0000] <MikeSmith>
oh

[01:58:09.0000] <MikeSmith>
yeah

[01:58:15.0000] <MikeSmith>
so I fixed it after that

[01:58:21.0000] <MikeSmith>
sorry ..

[01:58:42.0000] <annevk>
so HTML / WebApps was 1-4 correct?

[01:58:59.0000] <Ms2ger>
:)

[01:59:00.0000] <annevk>
splendid, looks like I'll miss Queen's Day again

[01:59:08.0000] <annevk>
of May that is

[01:59:36.0000] <annevk>
splendid, looks like I'll miss Queen's Day again

[02:00:00.0000] <jgraham>
You have a whole holiday dedictaed to singing Bohemian Rhapsody?

[02:01:00.0000] <annevk>
what lame shit is this

[02:01:01.0000] <annevk>
Jiro Dreams of Sushi is not out in NL until May 31

[02:01:02.0000] <MikeSmith>
annevk: added

[02:01:08.0000] <jgraham>
You have a whole holiday dedictaed to singing Bohemian Rhapsody?

[02:01:24.0000] <annevk>
what lame shit is this

[02:01:30.0000] <annevk>
Jiro Dreams of Sushi is not out in NL until May 31

[02:01:57.0000] <MikeSmith>
annevk: added

[02:09:00.0000] <foolip>
Hixie, thanks

[02:10:12.0000] <foolip>
Hixie, thanks

[02:16:00.0000] <annevk>
what is the simplest way to test encoders?

[02:16:57.0000] <annevk>
what is the simplest way to test encoders?

[02:17:00.0000] <annevk>
using URL query strings might be an easy way...

[02:17:57.0000] <annevk>
using URL query strings might be an easy way...

[02:18:00.0000] <jgraham>
Yeah, that's a technique I used for shipping raw bytes around

[02:18:01.0000] <annevk>
?{code points} -> ?{octets}

[02:18:24.0000] <jgraham>
Yeah, that's a technique I used for shipping raw bytes around

[02:18:28.0000] <annevk>
?{code points} -> ?{octets}

[02:19:00.0000] <jgraham>
Either that or encode all the input data as specially constructed PNGs that you can read off a canvas

[02:19:01.0000] <jgraham>
(not a serious suggestion)

[02:19:02.0000] <annevk>
not sure how that helps with seeing how the euro character gets encoded in octets using the gbk encoding

[02:19:26.0000] <jgraham>
Either that or encode all the input data as specially constructed PNGs that you can read off a canvas

[02:19:32.0000] <jgraham>
(not a serious suggestion)

[02:20:14.0000] <annevk>
not sure how that helps with seeing how the euro character gets encoded in octets using the gbk encoding

[02:22:00.0000] <jgraham>
Ah, I was thinking about a different part of the problem. But sure, query strings. Form submission. There aren't that many places where encoder behaviour is exposed, right?

[02:22:51.0000] <jgraham>
Ah, I was thinking about a different part of the problem. But sure, query strings. Form submission. There aren't that many places where encoder behaviour is exposed, right?

[02:23:00.0000] <annevk>
forms require submission, or is there some way to get the data from script?

[02:23:01.0000] <annevk>
there's not that many places and the less the better, but for testing...

[02:23:26.0000] <annevk>
forms require submission, or is there some way to get the data from script?

[02:23:48.0000] <annevk>
there's not that many places and the less the better, but for testing...

[02:24:00.0000] <jgraham>
Well requiring submission isn't obviously a problem

[02:24:39.0000] <jgraham>
Well requiring submission isn't obviously a problem

[02:32:00.0000] <annevk>
whoa

[02:32:01.0000] <annevk>
in Gecko the character is stripped, in Opera it's encoded as two octets, and in Chrome/Safari it's one

[02:32:38.0000] <annevk>
whoa

[02:33:00.0000] <annevk>
and IE just gives the code point back...?!

[02:33:01.0000] <annevk>
not sure what that means

[02:33:04.0000] <annevk>
in Gecko the character is stripped, in Opera it's encoded as two octets, and in Chrome/Safari it's one

[02:33:37.0000] <annevk>
and IE just gives the code point back...?!

[02:34:01.0000] <annevk>
not sure what that means

[02:35:00.0000] <zcorpan>
it means content doesn't rely on either behavior and you can choose what's least insane

[02:35:37.0000] <zcorpan>
it means content doesn't rely on either behavior and you can choose what's least insane

[02:42:00.0000] <jgraham>
Alternative theory: it means that some content relies on each behaviour and you are screwed whatever you do

[02:42:33.0000] <jgraham>
Alternative theory: it means that some content relies on each behaviour and you are screwed whatever you do

[02:43:00.0000] <annevk>
I also like that it's different between gbk and gb18030

[02:43:01.0000] <annevk>
well except in Opera, which uses what I think is the gb18030 mapping for gbk

[02:43:26.0000] <annevk>
I also like that it's different between gbk and gb18030

[02:44:15.0000] <annevk>
well except in Opera, which uses what I think is the gb18030 mapping for gbk

[03:05:00.0000] <hsivonen>
MikeSmith: Was your summary of the DRM threads for some other forum than public-html itself?

[03:06:00.0000] <MikeSmith>
hsivonen: didn't finish it

[03:06:16.0000] <hsivonen>
MikeSmith: Was your summary of the DRM threads for some other forum than public-html itself?

[03:06:50.0000] <MikeSmith>
hsivonen: didn't finish it

[03:08:00.0000] <MikeSmith>
also I'm not caught up on the thread so there's probably been more requirements popping up in the mean time

[03:08:51.0000] <MikeSmith>
also I'm not caught up on the thread so there's probably been more requirements popping up in the mean time

[03:09:00.0000] <MikeSmith>
hsivonen: btw you saw my other question? about second-less times?

[03:09:01.0000] <MikeSmith>
http://krijnhoetmer.nl/irc-logs/whatwg/20120309#l-336

[03:09:48.0000] <MikeSmith>
hsivonen: btw you saw my other question? about second-less times?

[03:09:49.0000] <MikeSmith>
http://krijnhoetmer.nl/irc-logs/whatwg/20120309#l-336

[03:10:00.0000] <zcorpan>
MikeSmith: can you share your unfinished summary?

[03:11:00.0000] <MikeSmith>
I guess I could

[03:11:11.0000] <zcorpan>
MikeSmith: can you share your unfinished summary?

[03:11:39.0000] <MikeSmith>
I guess I could

[03:13:00.0000] <hsivonen>
MikeSmith: the spec makes seconds optional, right?

[03:14:00.0000] <hsivonen>
MikeSmith: and your code made them optional, too?

[03:14:01.0000] <hsivonen>
seems alright if so

[03:14:07.0000] <hsivonen>
MikeSmith: the spec makes seconds optional, right?

[03:14:46.0000] <hsivonen>
MikeSmith: and your code made them optional, too?

[03:14:54.0000] <hsivonen>
seems alright if so

[03:15:00.0000] <MikeSmith>
hsivonen: OK

[03:15:01.0000] <zcorpan>
what happened to the pdf version of the spec?

[03:15:27.0000] <MikeSmith>
hsivonen: OK

[03:15:28.0000] <zcorpan>
what happened to the pdf version of the spec?

[03:16:00.0000] <MikeSmith>
hsivonen: I asked because I had thought you had asked a long time back for Hixie to make them required and were waiting on a response

[03:16:01.0000] <MikeSmith>
I had note in the microsyntaxes description about it

[03:16:02.0000] <MikeSmith>
http://wiki.whatwg.org/wiki/MicrosyntaxDescriptions#date-or-time

[03:16:03.0000] <MikeSmith>
"Note: The validator currently allows some values that the HTML specification prohibits; for example, it allows 1996-01-01T12:05:25 (a date and time with no time-zone information) and 12:05:25Z (a time with no date but with time-zone information)"

[03:16:24.0000] <MikeSmith>
hsivonen: I asked because I had thought you had asked a long time back for Hixie to make them required and were waiting on a response

[03:16:38.0000] <MikeSmith>
I had note in the microsyntaxes description about it

[03:16:44.0000] <MikeSmith>
http://wiki.whatwg.org/wiki/MicrosyntaxDescriptions#date-or-time

[03:17:00.0000] <hsivonen>
MikeSmith: seems unlikely that I would have had asked for seconds to be mandatory

[03:17:01.0000] <MikeSmith>
dunno why I would have noted it then instead of just changing the code to match the spec

[03:17:02.0000] <MikeSmith>
hsivonen: OK

[03:17:03.0000] <MikeSmith>
oh

[03:17:04.0000] <MikeSmith>
hmm

[03:17:05.0000] <MikeSmith>
sorry, I misread my own note!

[03:17:07.0000] <MikeSmith>
"Note: The validator currently allows some values that the HTML specification prohibits; for example, it allows 1996-01-01T12:05:25 (a date and time with no time-zone information) and 12:05:25Z (a time with no date but with time-zone information)"

[03:17:46.0000] <hsivonen>
MikeSmith: seems unlikely that I would have had asked for seconds to be mandatory

[03:17:48.0000] <MikeSmith>
dunno why I would have noted it then instead of just changing the code to match the spec

[03:17:53.0000] <MikeSmith>
hsivonen: OK

[03:18:00.0000] <MikeSmith>
sigh

[03:18:01.0000] <hsivonen>
:-)

[03:18:08.0000] <MikeSmith>
oh

[03:18:10.0000] <MikeSmith>
hmm

[03:18:17.0000] <MikeSmith>
sorry, I misread my own note!

[03:18:25.0000] <MikeSmith>
sigh

[03:18:29.0000] <hsivonen>
:-)

[03:24:00.0000] <zcorpan>
"Font Awesome icons work great in buttons.

[03:24:01.0000] <zcorpan>
<a class="btn" href="#">

[03:24:02.0000] <zcorpan>
  <i class="icon-refresh"></i> Refresh</a>" http://fortawesome.github.com/Font-Awesome/

[03:24:50.0000] <zcorpan>
"Font Awesome icons work great in buttons.

[03:24:51.0000] <zcorpan>
<a class="btn" href="#">

[03:24:51.0000] <zcorpan>
  <i class="icon-refresh"></i> Refresh</a>" http://fortawesome.github.com/Font-Awesome/

[03:26:00.0000] <hsivonen>
is "fo*r*t" vs. "fo*n*t" some kind of kerning-related joke?

[03:26:52.0000] <hsivonen>
is "fo*r*t" vs. "fo*n*t" some kind of kerning-related joke?

[03:27:00.0000] <zcorpan>
hah, didn't even see that

[03:27:37.0000] <zcorpan>
hah, didn't even see that

[03:30:00.0000] <hsivonen>
I'm too lazy to download the package. Does the font use the PUA for stuff that's not in Unicode? what about for stuff that is in Unicode?

[03:30:58.0000] <hsivonen>
I'm too lazy to download the package. Does the font use the PUA for stuff that's not in Unicode? what about for stuff that is in Unicode?

[03:35:00.0000] <annevk>
it uses code points such as 0xF083

[03:35:01.0000] <hsivonen>
does anyone want to guess when ICON FACEBOOK SIGN is going to appear in Emoji?

[03:35:32.0000] <annevk>
it uses code points such as 0xF083

[03:35:48.0000] <hsivonen>
does anyone want to guess when ICON FACEBOOK SIGN is going to appear in Emoji?

[03:36:00.0000] <annevk>
which is PUA

[03:36:19.0000] <annevk>
which is PUA

[03:38:00.0000] <jgraham>
Do we already have ICON APPLE WITH SINGLE LEAF AND BITE REMOVED?

[03:38:55.0000] <jgraham>
Do we already have ICON APPLE WITH SINGLE LEAF AND BITE REMOVED?

[03:40:00.0000] <annevk>
hsivonen: I think it uses PUA for everything

[03:40:01.0000] <annevk>
which is not very awesome if you ask me

[03:40:35.0000] <annevk>
hsivonen: I think it uses PUA for everything

[03:41:04.0000] <annevk>
which is not very awesome if you ask me

[03:53:00.0000] <zcorpan>
annevk: wow i expected it to just use the ascii range or something

[03:53:01.0000] <zcorpan>
jgraham: there's a de facto PUA code point for that :-P

[03:53:19.0000] <zcorpan>
annevk: wow i expected it to just use the ascii range or something

[03:54:00.0000] <jgraham>
zcorpan: I am somewhat ashamed to admit I know :)

[03:54:01.0000] <matjas>


[03:54:01.0000] <zcorpan>
jgraham: there's a de facto PUA code point for that :-P

[03:54:50.0000] <jgraham>
zcorpan: I am somewhat ashamed to admit I know :)

[03:55:13.0000] <matjas>


[03:56:00.0000] <matjas>
woah, i didn’t know U+F8FF can also represent the Windows logo: http://en.wikipedia.org/wiki/Private_Use_(Unicode)#Example_code_point_U.2BF8FF

[03:56:45.0000] <matjas>
woah, i didn’t know U+F8FF can also represent the Windows logo: http://en.wikipedia.org/wiki/Private_Use_(Unicode)#Example_code_point_U.2BF8FF

[03:57:00.0000] <matjas>
also, “The ConScript Unicode Registry suggests it be used for the Klingon glyph "KLINGON MUMMIFICATION GLYPH." This is followed by e.g. Code2000.”

[03:57:19.0000] <matjas>
also, “The ConScript Unicode Registry suggests it be used for the Klingon glyph "KLINGON MUMMIFICATION GLYPH." This is followed by e.g. Code2000.”

[04:10:00.0000] <hsivonen>
I wonder what the glyph that Ubuntu's Gnome Terminal uses for that code point represents

[04:10:01.0000] <hsivonen>
it's like a short minus sign with an acute accent and a mirrored other tilted line below

[04:10:53.0000] <hsivonen>
I wonder what the glyph that Ubuntu's Gnome Terminal uses for that code point represents

[04:11:16.0000] <hsivonen>
it's like a short minus sign with an acute accent and a mirrored other tilted line below

[04:12:00.0000] <hsivonen>
/me can imagine an epic debate about whether Ubuntu should ship Tengwar or Klingon support in that range

[04:12:45.0000] <hsivonen>
/me can imagine an epic debate about whether Ubuntu should ship Tengwar or Klingon support in that range

[04:14:00.0000] <zcorpan>
woah, i didn't know margins of the root element don't collapse

[04:14:47.0000] <zcorpan>
woah, i didn't know margins of the root element don't collapse

[04:29:00.0000] <annevk>
via Marcos: http://omfgdogs.com/

[04:30:15.0000] <annevk>
via Marcos: http://omfgdogs.com/

[04:46:00.0000] <zcorpan>
/me also learns http://software.hixie.ch/utilities/js/live-dom-viewer/saved/1374

[04:46:52.0000] <zcorpan>
/me also learns http://software.hixie.ch/utilities/js/live-dom-viewer/saved/1374

[04:48:00.0000] <annevk>
seems every browser but Gecko agrees

[04:48:01.0000] <annevk>
on the same height

[04:48:02.0000] <Ms2ger>
Then everyone is wrong, obviously :)

[04:48:20.0000] <annevk>
seems every browser but Gecko agrees

[04:48:28.0000] <annevk>
on the same height

[04:49:12.0000] <Ms2ger>
Then everyone is wrong, obviously :)

[05:04:00.0000] <zcorpan>
hmm. http://software.hixie.ch/utilities/js/live-dom-viewer/saved/1375 isn't covered properly

[05:04:35.0000] <zcorpan>
hmm. http://software.hixie.ch/utilities/js/live-dom-viewer/saved/1375 isn't covered properly

[05:08:00.0000] <Ms2ger>
Need body too?

[05:09:00.0000] <zcorpan>
no; the quirks spec would currently render it as http://software.hixie.ch/utilities/js/live-dom-viewer/saved/1376

[05:09:11.0000] <Ms2ger>
Need body too?

[05:10:00.0000] <zcorpan>
so i need to substract the margin/padding/border of the body when the root element is the containing block

[05:10:01.0000] <zcorpan>
another day

[05:10:08.0000] <zcorpan>
no; the quirks spec would currently render it as http://software.hixie.ch/utilities/js/live-dom-viewer/saved/1376

[05:10:41.0000] <zcorpan>
so i need to substract the margin/padding/border of the body when the root element is the containing block

[05:10:54.0000] <zcorpan>
another day

[05:35:00.0000] <StoneCypher>
uh

[05:36:00.0000] <StoneCypher>
someone just told me html5 discarded all control over what tags may go inside what others

[05:36:01.0000] <StoneCypher>
so <h1> would now be legal inside <span> and so on

[05:36:02.0000] <StoneCypher>
i went to find the html5 doctype as a counter, but apparently there isn't one

[05:36:03.0000] <StoneCypher>
is he correct?

[05:36:04.0000] <Ms2ger>
That's nonsense

[05:36:05.0000] <StoneCypher>
okay so

[05:36:06.0000] <StoneCypher>
where do i find a standard to defend that

[05:36:07.0000] <StoneCypher>
because he's the ban-happiest troll op in history

[05:36:12.0000] <StoneCypher>
uh

[05:36:24.0000] <StoneCypher>
someone just told me html5 discarded all control over what tags may go inside what others

[05:36:33.0000] <StoneCypher>
so <h1> would now be legal inside <span> and so on

[05:36:44.0000] <StoneCypher>
i went to find the html5 doctype as a counter, but apparently there isn't one

[05:36:46.0000] <StoneCypher>
is he correct?

[05:36:51.0000] <Ms2ger>
That's nonsense

[05:37:00.0000] <Ms2ger>
See http://www.whatwg.org/specs/web-apps/current-work/multipage/elements.html#element-definitions

[05:37:01.0000] <annevk>
http://lists.w3.org/Archives/Public/www-archive/2012Mar/att-0007/AB_List_of_Concerns-20120306.htm

[05:37:01.0000] <StoneCypher>
okay so

[05:37:02.0000] <annevk>
might be worthy of a review

[05:37:03.0000] <hsivonen>
StoneCypher: maybe it's not worth debating with ban-happy trolls

[05:37:04.0000] <StoneCypher>
unfortunately he also bans if you disengage

[05:37:05.0000] <annevk>
(the contents, not the Word-generated source code)

[05:37:06.0000] <StoneCypher>
and since freenode doesn't give a damn about abuse, there's sort of no option

[05:37:07.0000] <Ms2ger>
Concerns about?

[05:37:08.0000] <StoneCypher>
where do i find a standard to defend that

[05:37:14.0000] <StoneCypher>
because he's the ban-happiest troll op in history

[05:37:22.0000] <Ms2ger>
See http://www.whatwg.org/specs/web-apps/current-work/multipage/elements.html#element-definitions

[05:37:34.0000] <annevk>
http://lists.w3.org/Archives/Public/www-archive/2012Mar/att-0007/AB_List_of_Concerns-20120306.htm

[05:37:39.0000] <annevk>
might be worthy of a review

[05:37:42.0000] <hsivonen>
StoneCypher: maybe it's not worth debating with ban-happy trolls

[05:37:55.0000] <StoneCypher>
unfortunately he also bans if you disengage

[05:37:58.0000] <annevk>
(the contents, not the Word-generated source code)

[05:38:00.0000] <StoneCypher>
Ms2ger: is <h1> now valid inside <span>

[05:38:01.0000] <Ms2ger>
No

[05:38:02.0000] <annevk>
it's not?

[05:38:03.0000] <annevk>
oh maybe just inside <a>

[05:38:04.0000] <Ms2ger>
http://www.whatwg.org/specs/web-apps/current-work/multipage/text-level-semantics.html#the-span-element

[05:38:04.0000] <StoneCypher>
and since freenode doesn't give a damn about abuse, there's sort of no option

[05:38:05.0000] <Ms2ger>
Content model:

[05:38:06.0000] <Ms2ger>
    Phrasing content.

[05:38:08.0000] <Ms2ger>
Concerns about?

[05:38:18.0000] <StoneCypher>
Ms2ger: is <h1> now valid inside <span>

[05:38:33.0000] <Ms2ger>
No

[05:38:42.0000] <annevk>
it's not?

[05:39:00.0000] <Ms2ger>
Phrasing content is the text of the document, as well as elements that mark up that text at the intra-paragraph level. Runs of phrasing content form paragraphs.

[05:39:00.0000] <annevk>
oh maybe just inside <a>

[05:39:01.0000] <Ms2ger>
    a (if it contains only phrasing content)

[05:39:02.0000] <Ms2ger>
    abbr

[05:39:03.0000] <Ms2ger>
    area (if it is a descendant of a map element)

[05:39:04.0000] <Ms2ger>
    audio

[05:39:05.0000] <Ms2ger>
    b

[05:39:06.0000] <Ms2ger>
    bdi

[05:39:07.0000] <Ms2ger>
    bdo

[05:39:07.0000] <Ms2ger>
http://www.whatwg.org/specs/web-apps/current-work/multipage/text-level-semantics.html#the-span-element

[05:39:08.0000] <Ms2ger>
    br

[05:39:09.0000] <Ms2ger>
    button

[05:39:10.0000] <Ms2ger>
    canvas

[05:39:11.0000] <Ms2ger>
    cite

[05:39:12.0000] <Ms2ger>
    code

[05:39:13.0000] <Ms2ger>
    command

[05:39:14.0000] <Ms2ger>
    data

[05:39:14.0000] <Ms2ger>
Content model:

[05:39:15.0000] <Ms2ger>
    datalist

[05:39:15.0000] <Ms2ger>
    Phrasing content.

[05:39:16.0000] <Ms2ger>
    del (if it contains only phrasing content)

[05:39:17.0000] <Ms2ger>
    dfn

[05:39:18.0000] <Ms2ger>
    em

[05:39:19.0000] <Ms2ger>
    embed

[05:39:20.0000] <Ms2ger>
    i

[05:39:21.0000] <Ms2ger>
    iframe

[05:39:22.0000] <Ms2ger>
    img

[05:39:23.0000] <annevk>
dude

[05:39:24.0000] <Ms2ger>
    input

[05:39:25.0000] <Ms2ger>
    ins (if it contains only phrasing content)

[05:39:26.0000] <Ms2ger>
    kbd

[05:39:27.0000] <Ms2ger>
    keygen

[05:39:29.0000] <Ms2ger>
Phrasing content is the text of the document, as well as elements that mark up that text at the intra-paragraph level. Runs of phrasing content form paragraphs.

[05:39:30.0000] <Ms2ger>
    a (if it contains only phrasing content)

[05:39:30.0000] <Ms2ger>
    abbr

[05:39:30.0000] <Ms2ger>
    area (if it is a descendant of a map element)

[05:39:30.0000] <Ms2ger>
    audio

[05:39:31.0000] <Ms2ger>
    b

[05:39:33.0000] <Ms2ger>
    bdi

[05:39:35.0000] <Ms2ger>
    bdo

[05:39:37.0000] <Ms2ger>
    br

[05:39:41.0000] <Ms2ger>
    button

[05:39:43.0000] <Ms2ger>
    canvas

[05:39:45.0000] <Ms2ger>
    cite

[05:39:47.0000] <Ms2ger>
    code

[05:39:49.0000] <Ms2ger>
    command

[05:39:51.0000] <Ms2ger>
    data

[05:39:53.0000] <Ms2ger>
    datalist

[05:39:55.0000] <Ms2ger>
    del (if it contains only phrasing content)

[05:39:57.0000] <Ms2ger>
    dfn

[05:39:59.0000] <Ms2ger>
    em

[05:40:00.0000] <Ms2ger>
    label

[05:40:01.0000] <Ms2ger>
    link (if the itemprop attribute is present)

[05:40:01.0000] <Ms2ger>
    embed

[05:40:02.0000] <Ms2ger>
    map (if it contains only phrasing content)

[05:40:03.0000] <Ms2ger>
    mark

[05:40:03.0000] <Ms2ger>
    i

[05:40:04.0000] <Ms2ger>
    math

[05:40:05.0000] <Ms2ger>
    meta (if the itemprop attribute is present)

[05:40:05.0000] <Ms2ger>
    iframe

[05:40:06.0000] <Ms2ger>
    meter

[05:40:07.0000] <Ms2ger>
    noscript

[05:40:07.0000] <Ms2ger>
    img

[05:40:08.0000] <Ms2ger>
    object

[05:40:09.0000] <Ms2ger>
    output

[05:40:09.0000] <annevk>
dude

[05:40:10.0000] <tomasf>
haha

[05:40:11.0000] <Ms2ger>
    progress

[05:40:11.0000] <Ms2ger>
    input

[05:40:12.0000] <Ms2ger>
    q

[05:40:13.0000] <Ms2ger>
    ruby

[05:40:13.0000] <Ms2ger>
    ins (if it contains only phrasing content)

[05:40:14.0000] <Ms2ger>
    s

[05:40:15.0000] <Ms2ger>
    samp

[05:40:15.0000] <Ms2ger>
    kbd

[05:40:16.0000] <Ms2ger>
    script

[05:40:17.0000] <Ms2ger>
    select

[05:40:17.0000] <Ms2ger>
    keygen

[05:40:18.0000] <Ms2ger>
    small

[05:40:19.0000] <Ms2ger>
    span

[05:40:19.0000] <Ms2ger>
    label

[05:40:20.0000] <Ms2ger>
    strong

[05:40:21.0000] <Ms2ger>
    sub

[05:40:21.0000] <Ms2ger>
    link (if the itemprop attribute is present)

[05:40:22.0000] <Ms2ger>
    sup

[05:40:23.0000] <beverloo>
:-)

[05:40:23.0000] <Ms2ger>
    map (if it contains only phrasing content)

[05:40:24.0000] <Ms2ger>
    svg

[05:40:25.0000] <Ms2ger>
    textarea

[05:40:25.0000] <Ms2ger>
    mark

[05:40:26.0000] <Ms2ger>
    time

[05:40:27.0000] <Ms2ger>
    math

[05:40:29.0000] <Ms2ger>
    meta (if the itemprop attribute is present)

[05:40:31.0000] <Ms2ger>
    meter

[05:40:33.0000] <Ms2ger>
    noscript

[05:40:35.0000] <Ms2ger>
    object

[05:40:37.0000] <Ms2ger>
    output

[05:40:40.0000] <tomasf>
haha

[05:40:41.0000] <Ms2ger>
    progress

[05:40:43.0000] <Ms2ger>
    q

[05:40:45.0000] <Ms2ger>
    ruby

[05:40:47.0000] <Ms2ger>
    s

[05:40:49.0000] <Ms2ger>
    samp

[05:40:51.0000] <Ms2ger>
    script

[05:40:55.0000] <Ms2ger>
    select

[05:40:59.0000] <Ms2ger>
    small

[05:41:00.0000] <Ms2ger>
    u

[05:41:01.0000] <Ms2ger>
    var

[05:41:01.0000] <Ms2ger>
    span

[05:41:02.0000] <Ms2ger>
    video

[05:41:03.0000] <Ms2ger>
    wbr

[05:41:03.0000] <Ms2ger>
    strong

[05:41:04.0000] <Ms2ger>
    Text

[05:41:05.0000] <Ms2ger>
Woops

[05:41:05.0000] <Ms2ger>
    sub

[05:41:06.0000] <Ms2ger>
/me blames Hixie 

[05:41:07.0000] <Ms2ger>
That totally doesn't look like it will be newline-separated when you paste it

[05:41:07.0000] <Ms2ger>
    sup

[05:41:12.0000] <beverloo>
:-)

[05:41:13.0000] <Ms2ger>
    svg

[05:41:15.0000] <Ms2ger>
    textarea

[05:41:17.0000] <Ms2ger>
    time

[05:41:19.0000] <Ms2ger>
    u

[05:41:21.0000] <Ms2ger>
    var

[05:41:23.0000] <Ms2ger>
    video

[05:41:25.0000] <Ms2ger>
    wbr

[05:41:27.0000] <Ms2ger>
    Text

[05:41:29.0000] <Ms2ger>
Woops

[05:41:31.0000] <Ms2ger>
/me blames Hixie 

[05:41:34.0000] <Ms2ger>
That totally doesn't look like it will be newline-separated when you paste it

[05:42:00.0000] <StoneCypher>
Ms2ger: thank you for the assist

[05:42:01.0000] <jgraham>
Oh, just admit that you are trying to catch up with Hixie in the stats

[05:42:02.0000] <Ms2ger>
jgraham, ssh

[05:42:03.0000] <annevk>
has to catch up with you first

[05:42:04.0000] <annevk>
I think Hixie is writing more than me

[05:42:21.0000] <StoneCypher>
Ms2ger: thank you for the assist

[05:42:24.0000] <jgraham>
Oh, just admit that you are trying to catch up with Hixie in the stats

[05:42:32.0000] <Ms2ger>
jgraham, ssh

[05:42:49.0000] <annevk>
has to catch up with you first

[05:43:00.0000] <Ms2ger>
/me goes for zewt first

[05:43:13.0000] <annevk>
I think Hixie is writing more than me

[05:44:00.0000] <Ms2ger>
"Hixie's faithful follower, AryehGregor, ..."

[05:44:00.0000] <Ms2ger>
/me goes for zewt first

[05:45:00.0000] <annevk>
are you going to copy & paste a bunch of nonsense again? might have to get paul_irish for a ban :p

[05:45:06.0000] <Ms2ger>
"Hixie's faithful follower, AryehGregor, ..."

[05:46:00.0000] <Ms2ger>
Who needs paul_irish for that? :)

[05:46:01.0000] <annevk>
mwaha

[05:46:01.0000] <annevk>
are you going to copy & paste a bunch of nonsense again? might have to get paul_irish for a ban :p

[05:46:02.0000] <annevk>
fear

[05:46:43.0000] <Ms2ger>
Who needs paul_irish for that? :)

[05:46:51.0000] <annevk>
mwaha

[05:46:56.0000] <annevk>
fear

[05:47:00.0000] <Philip`>
hsivonen: x = x + x + {...188 times}

[05:47:29.0000] <Philip`>
hsivonen: x = x + x + {...188 times}

[05:48:00.0000] <Ms2ger>
Make that {...47 times} and add << 2?

[05:49:00.0000] <Philip`>
Or I suppose 256*x - 64*x - 4*x

[05:49:01.0000] <Ms2ger>
Make that {...47 times} and add << 2?

[05:49:52.0000] <Philip`>
Or I suppose 256*x - 64*x - 4*x

[05:51:00.0000] <Philip`>
but an integer multiply in Core i7 apparently has latency of about 3 cycles (and can do one per cycle), so x*188 is probably faster than any longer expression

[05:51:21.0000] <Philip`>
but an integer multiply in Core i7 apparently has latency of about 3 cycles (and can do one per cycle), so x*188 is probably faster than any longer expression

[05:55:00.0000] <Dashiva>
Better write a test to find out

[05:56:01.0000] <Dashiva>
Better write a test to find out

[06:02:00.0000] <hsivonen>
the standard box model is the first item on http://www.impressivewebs.com/css-the-bad-parts/ ...

[06:02:01.0000] <StoneCypher>
/me doesn't actually think the box model is a bad thing

[06:02:52.0000] <hsivonen>
the standard box model is the first item on http://www.impressivewebs.com/css-the-bad-parts/ ...

[06:03:00.0000] <StoneCypher>
/me thinks most of people's horror towards the box model is vestigal memory of broken browsers

[06:03:08.0000] <StoneCypher>
/me doesn't actually think the box model is a bad thing

[06:03:25.0000] <StoneCypher>
/me thinks most of people's horror towards the box model is vestigal memory of broken browsers

[06:05:00.0000] <woef>
I think it's because people over-use width declarations in their css.

[06:05:57.0000] <woef>
I think it's because people over-use width declarations in their css.

[06:06:00.0000] <Philip`>
(Looks like GCC actually generates effectively "((x + x << 1) << 4 - x) << 2" on i586, and an imul instruction on i686+)

[06:06:30.0000] <Philip`>
(Looks like GCC actually generates effectively "((x + x << 1) << 4 - x) << 2" on i586, and an imul instruction on i686+)

[06:47:00.0000] <Dashiva>
Philip`: Cool

[06:47:49.0000] <Dashiva>
Philip`: Cool

[06:54:00.0000] <MikeSmith>
annevk: don't see zcorpan around but we're publishing next Thursday so need the date on the diffs doc switched to the 15th

[06:55:10.0000] <MikeSmith>
annevk: don't see zcorpan around but we're publishing next Thursday so need the date on the diffs doc switched to the 15th

[06:59:00.0000] <annevk>
can do

[07:00:05.0000] <annevk>
can do

[07:01:00.0000] <annevk>
MikeSmith: done

[07:01:01.0000] <MikeSmith>
tak

[07:01:41.0000] <annevk>
MikeSmith: done

[07:01:49.0000] <MikeSmith>
tak

[07:06:00.0000] <hsivonen>
sucks for roc's vacation for all this DRM and video "context" stuff to come up right now. :-(

[07:06:01.0000] <roc>
hmm?

[07:06:02.0000] <roc>
what video "context" stuff?

[07:06:23.0000] <hsivonen>
sucks for roc's vacation for all this DRM and video "context" stuff to come up right now. :-(

[07:06:31.0000] <roc>
hmm?

[07:06:43.0000] <roc>
what video "context" stuff?

[07:07:00.0000] <hsivonen>
roc: http://lists.w3.org/Archives/Public/public-html/2012Mar/0315.html

[07:07:24.0000] <hsivonen>
roc: http://lists.w3.org/Archives/Public/public-html/2012Mar/0315.html

[07:08:00.0000] <roc>
sigh

[07:08:01.0000] <jgraham>
hsivonen: Well now you told him about it, it sucks

[07:08:02.0000] <jgraham>
:)

[07:08:03.0000] <hsivonen>
roc: sorry, from your posts to public-html, it looked like you were reading it already

[07:08:22.0000] <roc>
sigh

[07:08:44.0000] <jgraham>
hsivonen: Well now you told him about it, it sucks

[07:09:00.0000] <roc>
I'm working today actually

[07:09:01.0000] <jgraham>
Europe turned out to be more boring than you expected?

[07:09:03.0000] <jgraham>
:)

[07:09:07.0000] <hsivonen>
roc: sorry, from your posts to public-html, it looked like you were reading it already

[07:09:34.0000] <roc>
I'm working today actually

[07:10:00.0000] <roc>
yeah, I need a holiday from my holiday

[07:10:01.0000] <roc>
actually I just wanted to check out the Paris office.

[07:10:02.0000] <volkmar>
roc: our best office ;)

[07:10:03.0000] <roc>
you wish :-)

[07:10:06.0000] <jgraham>
Europe turned out to be more boring than you expected?

[07:10:23.0000] <roc>
yeah, I need a holiday from my holiday

[07:10:39.0000] <roc>
actually I just wanted to check out the Paris office.

[07:10:55.0000] <volkmar>
roc: our best office ;)

[07:11:00.0000] <Ms2ger>
You've got glazou nearby ;)

[07:11:06.0000] <roc>
you wish :-)

[07:11:34.0000] <Ms2ger>
You've got glazou nearby ;)

[07:13:00.0000] <roc>
yeah, he came in and we had a good chat

[07:13:01.0000] <roc>
you should come in too so we can talk

[07:13:02.0000] <Ms2ger>
No thanks, bz has got me lot of review comments I need to fix

[07:13:39.0000] <roc>
yeah, he came in and we had a good chat

[07:13:55.0000] <roc>
you should come in too so we can talk

[07:14:00.0000] <roc>
foiled again!

[07:14:01.0000] <jgraham>
Surely meeting Ms2ger isn't actually possible?

[07:14:02.0000] <volkmar>
feels like it

[07:14:03.0000] <volkmar>
I tried a few times

[07:14:14.0000] <Ms2ger>
No thanks, bz has got me lot of review comments I need to fix

[07:14:36.0000] <roc>
foiled again!

[07:15:00.0000] <jgraham>
Dude is either an AI or lives under a volcano. In belgium.

[07:15:01.0000] <StoneCypher>
the two are not mutually exclusive

[07:15:01.0000] <jgraham>
Surely meeting Ms2ger isn't actually possible?

[07:15:02.0000] <StoneCypher>
an ai like that might want to be near geothermal power

[07:15:13.0000] <volkmar>
feels like it

[07:15:16.0000] <volkmar>
I tried a few times

[07:15:36.0000] <jgraham>
Dude is either an AI or lives under a volcano. In belgium.

[07:15:47.0000] <StoneCypher>
the two are not mutually exclusive

[07:15:56.0000] <StoneCypher>
an ai like that might want to be near geothermal power

[07:16:00.0000] <roc>
jgraham: yeah, so far. But I live in hope.

[07:16:01.0000] <Ms2ger>
I hear NZ has nice volcanoes...

[07:16:38.0000] <roc>
jgraham: yeah, so far. But I live in hope.

[07:17:01.0000] <Ms2ger>
I hear NZ has nice volcanoes...

[07:18:00.0000] <roc>
yeah

[07:18:01.0000] <roc>
that's why I live there.

[07:18:02.0000] <Ms2ger>
As good a reason as any

[07:18:03.0000] <roc>
it's been weeks since I've seen a volcano, and it's starting to get to me

[07:18:33.0000] <roc>
yeah

[07:18:37.0000] <roc>
that's why I live there.

[07:19:00.0000] <jgraham>
You know, there are other types of mountain that are less likely to kill you?

[07:19:00.0000] <Ms2ger>
As good a reason as any

[07:19:01.0000] <jgraham>
s/,//

[07:19:02.0000] <roc>
yeah, but what a way to go

[07:19:05.0000] <roc>
it's been weeks since I've seen a volcano, and it's starting to get to me

[07:19:30.0000] <jgraham>
You know, there are other types of mountain that are less likely to kill you?

[07:19:37.0000] <jgraham>
s/,//

[07:20:00.0000] <roc>
anyway, the Auckland volcanic field is dormant. Sadly.

[07:20:01.0000] <charlvn>
or just buy a lava lamp instead

[07:20:02.0000] <roc>
chances of a deadly eruption in my lifetime are insignificant.

[07:20:02.0000] <roc>
yeah, but what a way to go

[07:20:03.0000] <charlvn>
much safer

[07:20:04.0000] <Ms2ger>
Wouldn't really be in your lifetime, I guess

[07:20:05.0000] <Ms2ger>
Maybe at the end of your lifetime

[07:20:28.0000] <roc>
anyway, the Auckland volcanic field is dormant. Sadly.

[07:20:44.0000] <charlvn>
or just buy a lava lamp instead

[07:20:50.0000] <roc>
chances of a deadly eruption in my lifetime are insignificant.

[07:21:02.0000] <charlvn>
much safer

[07:21:06.0000] <Ms2ger>
Wouldn't really be in your lifetime, I guess

[07:21:15.0000] <Ms2ger>
Maybe at the end of your lifetime

[07:24:00.0000] <roc>
The geologists claim they'd detect it in time to evacuate, although the behavior of the Auckland field is not completely understood, since the most recent eruption (Rangitoto) was quite anomalous

[07:24:58.0000] <roc>
The geologists claim they'd detect it in time to evacuate, although the behavior of the Auckland field is not completely understood, since the most recent eruption (Rangitoto) was quite anomalous

[07:25:00.0000] <roc>
you don't want to get me started talking about volcanoes, honestly

[07:25:28.0000] <roc>
you don't want to get me started talking about volcanoes, honestly

[07:26:00.0000] <Ms2ger>
Not even if it distracts you from public-html? :)

[07:26:22.0000] <Ms2ger>
Not even if it distracts you from public-html? :)

[07:34:00.0000] <roc>
I say that for your sake, not for mine

[07:34:52.0000] <roc>
I say that for your sake, not for mine

[07:37:00.0000] <roc>
hsivonen: thanks for fighting the good fight on public-html

[07:37:01.0000] <jgraham>
Well talk enough about Volcanos and you will make me slightly less unhappy I don't live in NZ

[07:38:06.0000] <roc>
hsivonen: thanks for fighting the good fight on public-html

[07:38:07.0000] <jgraham>
Well talk enough about Volcanos and you will make me slightly less unhappy I don't live in NZ

[07:39:00.0000] <hsivonen>
roc: I hope the effort results in a less bad outcome

[07:40:00.0000] <jgraham>
/me would also like to express his appreciation for all the people who have the enery to engage with the DRM thread

[07:40:03.0000] <hsivonen>
roc: I hope the effort results in a less bad outcome

[07:41:00.0000] <Ms2ger>
Same, with s/the DRM thread/the HTMLWG/

[07:41:01.0000] <jgraham>
and s/enery/energy/

[07:41:08.0000] <jgraham>
/me would also like to express his appreciation for all the people who have the enery to engage with the DRM thread

[07:41:44.0000] <Ms2ger>
Same, with s/the DRM thread/the HTMLWG/

[07:42:04.0000] <jgraham>
and s/enery/energy/

[07:59:00.0000] <smaug____>
Ms2ger: well, HTMLWG in general isn't that depressing, but the DRM discussion is

[08:00:00.0000] <Lachy>
doesn't seem like we'll be able to get any sort of outcome, so long as they continue to withold the requirements for a usable CDM, and refuse to discuss essential implementation details.

[08:00:01.0000] <smaug____>
yeah

[08:00:16.0000] <smaug____>
Ms2ger: well, HTMLWG in general isn't that depressing, but the DRM discussion is

[08:00:42.0000] <Lachy>
doesn't seem like we'll be able to get any sort of outcome, so long as they continue to withold the requirements for a usable CDM, and refuse to discuss essential implementation details.

[08:01:01.0000] <smaug____>
yeah

[08:02:00.0000] <Lachy>
nor while we're forced to discuss only with service providers, rather than the rights holders demanding DRM for their content.

[08:02:42.0000] <Lachy>
nor while we're forced to discuss only with service providers, rather than the rights holders demanding DRM for their content.

[08:03:00.0000] <Lachy>
since, no matter what alternative technical solution (other than 3rd party CDMs) we could come up with for offering protection, we'll have no idea if it'll be acceptable to the rights holders.

[08:03:39.0000] <Lachy>
since, no matter what alternative technical solution (other than 3rd party CDMs) we could come up with for offering protection, we'll have no idea if it'll be acceptable to the rights holders.

[08:04:00.0000] <Lachy>
No idea what minimum level of obfuscation and disabling of certain features (e.g. Save As, etc.) would be acceptable

[08:04:37.0000] <Lachy>
No idea what minimum level of obfuscation and disabling of certain features (e.g. Save As, etc.) would be acceptable

[08:09:00.0000] <AryehGregor>
Lachy, are you assuming the criteria are actually being set by technical people, rather than the DRM systems being concocted to make management or shareholders happy without any particular technical requirements at all?

[08:09:54.0000] <AryehGregor>
Lachy, are you assuming the criteria are actually being set by technical people, rather than the DRM systems being concocted to make management or shareholders happy without any particular technical requirements at all?

[08:10:00.0000] <AryehGregor>
Maybe you're right, but I'm not so confident.

[08:10:18.0000] <AryehGregor>
Maybe you're right, but I'm not so confident.

[09:00:00.0000] <kennyluck_>
In CSS, in what situation would some contents be clipped to the content edge, besides 'background-clip: content-box'?

[09:01:18.0000] <kennyluck_>
In CSS, in what situation would some contents be clipped to the content edge, besides 'background-clip: content-box'?

[09:02:00.0000] <Ms2ger>
In IE9?

[09:02:38.0000] <Ms2ger>
In IE9?

[09:04:00.0000] <kennyluck_>
Ms2ger, in the theory of the standards.

[09:04:43.0000] <kennyluck_>
Ms2ger, in the theory of the standards.

[09:05:00.0000] <kennyluck_>
I am reading CSS3 B&B and I don't quite understand why it defines the radii of the content edges.

[09:05:01.0000] <kennyluck_>
besides, well, for replaced elements.

[09:05:19.0000] <kennyluck_>
I am reading CSS3 B&B and I don't quite understand why it defines the radii of the content edges.

[09:06:00.0000] <roc>
yeah, those :-)

[09:06:01.0000] <Ms2ger>
I'd suggest TabAtkins_, if he isn't at sxsw

[09:06:06.0000] <kennyluck_>
besides, well, for replaced elements.

[09:06:55.0000] <roc>
yeah, those :-)

[09:07:06.0000] <Ms2ger>
I'd suggest TabAtkins_, if he isn't at sxsw

[09:23:00.0000] <dglazkov>
good morning, Whatwg!

[09:23:01.0000] <Ms2ger>
Morning Glazkov

[09:23:38.0000] <dglazkov>
good morning, Whatwg!

[09:24:08.0000] <Ms2ger>
Morning Glazkov

[09:27:00.0000] <dglazkov>
Hey, Ms2ger

[09:27:19.0000] <dglazkov>
Hey, Ms2ger

[09:32:00.0000] <dglazkov>
annevk: got a sec?

[09:32:42.0000] <dglazkov>
annevk: got a sec?

[09:33:00.0000] <annevk>
yeah

[09:33:01.0000] <annevk>
many secs

[09:33:24.0000] <annevk>
yeah

[09:33:32.0000] <annevk>
many secs

[09:34:00.0000] <dglazkov>
annevk: have you heard suggestions of adding selector methods to DocumentFragment before?

[09:34:01.0000] <dglazkov>
as in documentFragment.querySelector()?

[09:34:02.0000] <annevk>
I think that's already done

[09:34:03.0000] <dglazkov>
oh?

[09:34:04.0000] <dglazkov>
cool

[09:34:05.0000] <dglazkov>
where?

[09:34:06.0000] <annevk>
http://dev.w3.org/2006/webapi/selectors-api/#nodeselector

[09:34:33.0000] <dglazkov>
annevk: have you heard suggestions of adding selector methods to DocumentFragment before?

[09:34:47.0000] <dglazkov>
as in documentFragment.querySelector()?

[09:34:54.0000] <annevk>
I think that's already done

[09:34:58.0000] <dglazkov>
oh?

[09:34:59.0000] <dglazkov>
cool

[09:35:00.0000] <annevk>
or http://dev.w3.org/2006/webapi/selectors-api2/#interface-definitions for v2

[09:35:01.0000] <dglazkov>
weee

[09:35:01.0000] <dglazkov>
where?

[09:35:02.0000] <dglazkov>
that's great

[09:35:12.0000] <annevk>
http://dev.w3.org/2006/webapi/selectors-api/#nodeselector

[09:35:38.0000] <annevk>
or http://dev.w3.org/2006/webapi/selectors-api2/#interface-definitions for v2

[09:35:42.0000] <dglazkov>
weee

[09:35:45.0000] <dglazkov>
that's great

[09:38:00.0000] <dglazkov>
btw, this back-referencing is impossible to follow. Unless you know this spec exists, it's unknowable. I wonder if Selectors API should be a dependency in DOM4, and then the "implements" should be in DOM4 spec.

[09:38:01.0000] <annevk>
you knew about querySelector...

[09:38:27.0000] <dglazkov>
btw, this back-referencing is impossible to follow. Unless you know this spec exists, it's unknowable. I wonder if Selectors API should be a dependency in DOM4, and then the "implements" should be in DOM4 spec.

[09:39:00.0000] <annevk>
maybe querySelector should be defined in the DOM itself, but I dunno

[09:39:08.0000] <annevk>
you knew about querySelector...

[09:39:30.0000] <annevk>
maybe querySelector should be defined in the DOM itself, but I dunno

[09:40:00.0000] <annevk>
is "Decode and encode" a reasonable section name for a section defining the "decode" and "encode" algorithms specification must use?

[09:40:01.0000] <annevk>
maybe not must, but would typically use

[09:40:43.0000] <annevk>
is "Decode and encode" a reasonable section name for a section defining the "decode" and "encode" algorithms specification must use?

[09:40:55.0000] <annevk>
maybe not must, but would typically use

[09:41:00.0000] <dglazkov>
what else could it be called? :) sounds good to me.

[09:41:01.0000] <annevk>
k thanks, was wondering whether it lacked a word or something

[09:41:34.0000] <dglazkov>
what else could it be called? :) sounds good to me.

[09:42:00.0000] <dglazkov>
add a word "Awesome". that word always makes everything sounds better.

[09:42:01.0000] <Ms2ger>
WebDecode

[09:42:02.0000] <Ms2ger>
XEncode

[09:42:09.0000] <annevk>
k thanks, was wondering whether it lacked a word or something

[09:42:34.0000] <dglazkov>
add a word "Awesome". that word always makes everything sounds better.

[09:43:09.0000] <Ms2ger>
WebDecode

[09:43:16.0000] <Ms2ger>
XEncode

[09:44:00.0000] <smaug____>
yeah, you need "Web" somewhere there

[09:44:01.0000] <dglazkov>
WebAwesome

[09:45:00.0000] <annevk>
but this spec is the opposite of awesome :)

[09:45:01.0000] <annevk>
encodings are a big legacy mess

[09:45:02.0000] <dglazkov>
:)

[09:45:12.0000] <smaug____>
yeah, you need "Web" somewhere there

[09:45:17.0000] <dglazkov>
WebAwesome

[09:45:28.0000] <annevk>
but this spec is the opposite of awesome :)

[09:45:40.0000] <annevk>
encodings are a big legacy mess

[09:45:47.0000] <dglazkov>
:)

[09:46:00.0000] <rniwa>
annevk: can we push back on region's spec not to use node list?

[09:46:01.0000] <Ms2ger>
Sure

[09:46:02.0000] <Ms2ger>
Regions' OM stuff should be ignored at this point, aiui

[09:46:22.0000] <rniwa>
annevk: can we push back on region's spec not to use node list?

[09:46:28.0000] <Ms2ger>
Sure

[09:47:00.0000] <annevk>
rniwa: so we want Node[] instead?

[09:47:01.0000] <rniwa>
annevk: yeah

[09:47:02.0000] <annevk>
is that used somewhere already?

[09:47:03.0000] <rniwa>
annevk: the problem is that as it's currently spec'ed

[09:47:04.0000] <rniwa>
annevk: we'll have to do the layout whenever the list is accessed :(

[09:47:05.0000] <rniwa>
annevk: because the list of elements that belong to the same named flow can change due to style resolution

[09:47:06.0000] <annevk>
good times

[09:47:15.0000] <Ms2ger>
Regions' OM stuff should be ignored at this point, aiui

[09:47:19.0000] <annevk>
rniwa: so we want Node[] instead?

[09:47:25.0000] <rniwa>
annevk: yeah

[09:47:32.0000] <annevk>
is that used somewhere already?

[09:47:34.0000] <rniwa>
annevk: the problem is that as it's currently spec'ed

[09:47:47.0000] <rniwa>
annevk: we'll have to do the layout whenever the list is accessed :(

[09:48:00.0000] <annevk>
you can make it a static NodeList though

[09:48:01.0000] <rniwa>
annevk: it makes very little sense for it to be dynamic node list

[09:48:02.0000] <rniwa>
annevk: right.

[09:48:02.0000] <rniwa>
annevk: because the list of elements that belong to the same named flow can change due to style resolution

[09:48:03.0000] <rniwa>
annevk: that'll be fine with me

[09:48:04.0000] <annevk>
that's what selectors-api has

[09:48:05.0000] <rniwa>
annevk: but dynamic node list makes very little sense and will hurt performance

[09:48:06.0000] <rniwa>
annevk: you mean static nodelist?

[09:48:07.0000] <annevk>
yeah

[09:48:10.0000] <annevk>
good times

[09:48:20.0000] <annevk>
you can make it a static NodeList though

[09:48:20.0000] <rniwa>
annevk: it makes very little sense for it to be dynamic node list

[09:48:23.0000] <rniwa>
annevk: right.

[09:48:26.0000] <rniwa>
annevk: that'll be fine with me

[09:48:38.0000] <annevk>
that's what selectors-api has

[09:48:39.0000] <rniwa>
annevk: but dynamic node list makes very little sense and will hurt performance

[09:48:51.0000] <rniwa>
annevk: you mean static nodelist?

[09:49:00.0000] <annevk>
you just say in the spec return a static list of elements as determined at x (i suppose)

[09:49:01.0000] <rniwa>
annevk: apparently i've been kicked out of www-style for some mail deamon issue

[09:49:02.0000] <rniwa>
don't know why :(

[09:49:13.0000] <annevk>
yeah

[09:49:39.0000] <annevk>
you just say in the spec return a static list of elements as determined at x (i suppose)

[09:50:00.0000] <Ms2ger>
File a bug

[09:50:01.0000] <annevk>
i left voluntarily, can't help you there

[09:50:02.0000] <rniwa>
annevk: also, nobody knows me in www-style

[09:50:03.0000] <rniwa>
annevk: ok

[09:50:04.0000] <Ms2ger>
That's where Regions issues live

[09:50:05.0000] <rniwa>
Ms2ger: yeah, I guess I should.

[09:50:06.0000] <annevk>
rniwa: could ask hober to help you out maybe or TabAtkins_

[09:50:07.0000] <rniwa>
annevk: okay

[09:50:07.0000] <rniwa>
annevk: apparently i've been kicked out of www-style for some mail deamon issue

[09:50:08.0000] <rniwa>
TabAtkins_, hober: yt?

[09:50:09.0000] <hober>
yo

[09:50:09.0000] <rniwa>
don't know why :(

[09:50:24.0000] <Ms2ger>
File a bug

[09:50:25.0000] <annevk>
i left voluntarily, can't help you there

[09:50:33.0000] <rniwa>
annevk: also, nobody knows me in www-style

[09:50:33.0000] <rniwa>
annevk: ok

[09:50:35.0000] <Ms2ger>
That's where Regions issues live

[09:50:41.0000] <rniwa>
Ms2ger: yeah, I guess I should.

[09:50:54.0000] <annevk>
rniwa: could ask hober to help you out maybe or TabAtkins_

[09:50:58.0000] <rniwa>
annevk: okay

[09:51:00.0000] <hober>
we've already pushed back on the regions om stuff, but if you'd like i can do more of that

[09:51:05.0000] <rniwa>
TabAtkins_, hober: yt?

[09:51:09.0000] <hober>
yo

[09:51:41.0000] <hober>
we've already pushed back on the regions om stuff, but if you'd like i can do more of that

[09:52:00.0000] <rniwa>
hober: can we not add another live node list?

[09:52:01.0000] <rniwa>
hober: it makes very little sense there

[09:52:02.0000] <hober>
especially when you consider that regions won't (always) be made up of elements

[09:52:25.0000] <rniwa>
hober: can we not add another live node list?

[09:52:29.0000] <rniwa>
hober: it makes very little sense there

[09:53:00.0000] <hober>
there won't be nodes to make up your node list

[09:53:06.0000] <hober>
especially when you consider that regions won't (always) be made up of elements

[09:53:20.0000] <hober>
there won't be nodes to make up your node list

[09:54:00.0000] <rniwa>
hober: yeah...

[09:54:01.0000] <rniwa>
hober: i'm fine with static node list

[09:54:52.0000] <rniwa>
hober: yeah...

[09:55:00.0000] <rniwa>
hober: but live node list is really bad because it needs to be updated/invalidated possibly on every style recalc :(

[09:55:00.0000] <rniwa>
hober: i'm fine with static node list

[09:55:26.0000] <rniwa>
hober: but live node list is really bad because it needs to be updated/invalidated possibly on every style recalc :(

[09:59:00.0000] <rniwa>
Ms2ger, annevk, hober: filed https://www.w3.org/Bugs/Public/show_bug.cgi?id=16286

[09:59:01.0000] <Ms2ger>
Ta

[09:59:18.0000] <rniwa>
Ms2ger, annevk, hober: filed https://www.w3.org/Bugs/Public/show_bug.cgi?id=16286

[09:59:24.0000] <Ms2ger>
Ta

[10:22:00.0000] <annevk>
okay you guys

[10:22:01.0000] <annevk>
win

[10:23:00.0000] <annevk>
i will rename octet to byte

[10:23:01.0000] <annevk>
meh

[10:23:02.0000] <Ms2ger>
Why?

[10:23:03.0000] <annevk>
(reason: byte order mark)

[10:23:04.0000] <Ms2ger>
Could call it OOM :)

[10:23:12.0000] <annevk>
okay you guys

[10:23:14.0000] <annevk>
win

[10:23:19.0000] <annevk>
i will rename octet to byte

[10:23:21.0000] <annevk>
meh

[10:23:28.0000] <Ms2ger>
Why?

[10:23:32.0000] <annevk>
(reason: byte order mark)

[10:23:57.0000] <Ms2ger>
Could call it OOM :)

[10:24:00.0000] <bga>
interesting

[10:24:01.0000] <bga>
http://pastehtml.com/view/bqsiaej5b.html

[10:24:02.0000] <annevk>
I thought we were against neologisms?

[10:24:03.0000] <bga>
i can observe real css values diring animation

[10:24:04.0000] <bga>
is it standard?

[10:24:05.0000] <annevk>
Ms2ger: but you like octet?

[10:24:06.0000] <Ms2ger>
I don't mind it

[10:24:20.0000] <bga>
interesting

[10:24:25.0000] <bga>
http://pastehtml.com/view/bqsiaej5b.html

[10:24:36.0000] <annevk>
I thought we were against neologisms?

[10:25:00.0000] <annevk>
bga: what do you mean observe?

[10:25:02.0000] <bga>
i can observe real css values diring animation

[10:25:08.0000] <bga>
is it standard?

[10:25:10.0000] <annevk>
Ms2ger: but you like octet?

[10:25:15.0000] <Ms2ger>
I don't mind it

[10:25:57.0000] <annevk>
bga: what do you mean observe?

[10:26:00.0000] <bga>
hover <a>

[10:26:01.0000] <bga>
opacity changes lively

[10:26:02.0000] <annevk>
oh hmm

[10:26:03.0000] <Ms2ger>
I don't mind byte much either

[10:26:23.0000] <bga>
hover <a>

[10:26:38.0000] <bga>
opacity changes lively

[10:26:55.0000] <annevk>
oh hmm

[10:26:59.0000] <Ms2ger>
I don't mind byte much either

[10:27:00.0000] <annevk>
Ms2ger: octet sounds nicer to me, but it's kind of an uphill battle I reckon

[10:27:35.0000] <annevk>
Ms2ger: octet sounds nicer to me, but it's kind of an uphill battle I reckon

[10:34:00.0000] <annevk>
the only problem is some legacy files...

[10:35:07.0000] <annevk>
the only problem is some legacy files...

[10:36:00.0000] <Ms2ger>
Sounds like the web

[10:37:08.0000] <Ms2ger>
Sounds like the web

[10:38:00.0000] <annevk>
done

[10:38:01.0000] <annevk>
also renamed the files

[10:38:02.0000] <annevk>
please report any links that link to the old stuff

[10:38:38.0000] <annevk>
done

[10:38:44.0000] <annevk>
also renamed the files

[10:38:51.0000] <annevk>
please report any links that link to the old stuff

[10:39:00.0000] <annevk>
violating Cool URIs don't change like it's '99

[10:39:20.0000] <annevk>
violating Cool URIs don't change like it's '99

[10:41:00.0000] <Philip`>
/me dislikes octet, since he's never heard anybody use it in the real world, so it just makes the standards world seem more foreign to the developers who have to interact with it

[10:41:27.0000] <Philip`>
/me dislikes octet, since he's never heard anybody use it in the real world, so it just makes the standards world seem more foreign to the developers who have to interact with it

[10:43:00.0000] <Philip`>
(and everybody understands that a byte is 8 bits, and anybody on a bizarre architecture where it's not 8 bits will know that they're on a bizarre architecture and will know to be careful when anyone else talks about bytes)

[10:43:29.0000] <Philip`>
(and everybody understands that a byte is 8 bits, and anybody on a bizarre architecture where it's not 8 bits will know that they're on a bizarre architecture and will know to be careful when anyone else talks about bytes)

[10:44:00.0000] <annevk>
I nevertheless just added a sentence for those with bizarre architectures

[10:44:58.0000] <annevk>
I nevertheless just added a sentence for those with bizarre architectures

[11:38:00.0000] <annevk>
teehee, someone reviewing XHR

[11:38:01.0000] <annevk>
been a while

[11:39:05.0000] <annevk>
teehee, someone reviewing XHR

[11:39:08.0000] <annevk>
been a while

[11:40:00.0000] <smaug____>
annevk: kyle?

[11:40:01.0000] <smaug____>
oh, no

[11:40:34.0000] <smaug____>
annevk: kyle?

[11:40:55.0000] <smaug____>
oh, no

[11:41:00.0000] <Ms2ger>
Heh, it's weird Glenn

[11:42:02.0000] <Ms2ger>
Heh, it's weird Glenn

[11:51:00.0000] <annevk>
whoa

[11:51:01.0000] <annevk>
Nøgne Ø has sake too

[11:51:58.0000] <annevk>
whoa

[11:52:00.0000] <annevk>
Nøgne Ø has sake too

[11:57:00.0000] <Ms2ger>
http://html5.clearboth.org/spec.html < wut

[11:57:42.0000] <Ms2ger>
http://html5.clearboth.org/spec.html < wut

[11:58:00.0000] <annevk>
partial translation to Korean?

[11:58:51.0000] <annevk>
partial translation to Korean?

[12:39:00.0000] <Ms2ger>
Hmm, should Attr be an EventTarget?

[12:39:45.0000] <Ms2ger>
Hmm, should Attr be an EventTarget?

[12:42:00.0000] <annevk>
ew no

[12:43:08.0000] <annevk>
ew no

[12:47:00.0000] <smaug____>
please no

[12:47:01.0000] <annevk>
someone willing to raise that to "over my dead body"?

[12:47:20.0000] <smaug____>
please no

[12:48:00.0000] <Ms2ger>
Apparently not

[12:48:14.0000] <annevk>
someone willing to raise that to "over my dead body"?

[12:49:15.0000] <Ms2ger>
Apparently not

[12:50:00.0000] <smaug____>
Ms2ger: I think only gecko has event listeners on Attr

[12:51:00.0000] <Ms2ger>
Even better

[12:51:01.0000] <smaug____>
and that is just because attrnodes happen to be nodes, and all nodes are eventtargets in gecko

[12:51:02.0000] <smaug____>
though, have tested this for ages

[12:51:03.0000] <smaug____>
Ms2ger: I think only gecko has event listeners on Attr

[12:51:21.0000] <Ms2ger>
Even better

[12:51:23.0000] <smaug____>
and that is just because attrnodes happen to be nodes, and all nodes are eventtargets in gecko

[12:52:00.0000] <Ms2ger>
How's the MutationObserver work going?

[12:52:01.0000] <smaug____>
coming :)

[12:52:08.0000] <smaug____>
though, have tested this for ages

[12:52:25.0000] <Ms2ger>
How's the MutationObserver work going?

[12:52:33.0000] <smaug____>
coming :)

[12:53:00.0000] <smaug____>
annevk: btw, do you know if someone is implementing MutationObservers Presto

[12:53:01.0000] <annevk>
not yet

[12:53:02.0000] <annevk>
but it's being planned for

[12:53:03.0000] <annevk>
Ms2ger: how is removing Attr nodes going?

[12:53:29.0000] <smaug____>
annevk: btw, do you know if someone is implementing MutationObservers Presto

[12:53:47.0000] <annevk>
not yet

[12:54:00.0000] <Ms2ger>
Nothing much happening

[12:54:01.0000] <smaug____>
Ms2ger: are you waiting for something ?

[12:54:02.0000] <annevk>
but it's being planned for

[12:54:18.0000] <annevk>
Ms2ger: how is removing Attr nodes going?

[12:54:34.0000] <Ms2ger>
Nothing much happening

[12:55:00.0000] <Ms2ger>
Time

[12:55:01.0000] <smaug____>
the thing  that no one has

[12:55:02.0000] <Ms2ger>
Get me a minion? :)

[12:55:10.0000] <smaug____>
Ms2ger: are you waiting for something ?

[12:55:24.0000] <Ms2ger>
Time

[12:55:36.0000] <smaug____>
the thing  that no one has

[12:56:02.0000] <Ms2ger>
Get me a minion? :)

[13:00:00.0000] <jamesr_>
Ms2ger, does "weird Glenn" = the Glenn that isn't zewt?

[13:00:01.0000] <Ms2ger>
Yes

[13:01:01.0000] <jamesr_>
Ms2ger, does "weird Glenn" = the Glenn that isn't zewt?

[13:01:12.0000] <Ms2ger>
Yes

[13:03:00.0000] <zewt>
(hi)

[13:04:02.0000] <zewt>
(hi)

[13:06:00.0000] <Ms2ger>
Hi, smart Glenn

[13:06:50.0000] <Ms2ger>
Hi, smart Glenn

[13:07:00.0000] <jamesr_>
zewt, tbh sometimes you're weird too, but you definitely aren't "weird Glenn"

[13:07:01.0000] <zewt>
well, i *am* on a spec irc channel

[13:07:53.0000] <jamesr_>
zewt, tbh sometimes you're weird too, but you definitely aren't "weird Glenn"

[13:08:00.0000] <smaug____>
"CDM APIs are not that complex" eh. CDM API needs to be pretty close to NPAPI to have the functionality netflix&co want

[13:08:16.0000] <zewt>
well, i *am* on a spec irc channel

[13:09:03.0000] <smaug____>
"CDM APIs are not that complex" eh. CDM API needs to be pretty close to NPAPI to have the functionality netflix&co want

[13:40:00.0000] <annevk>
zewt: other glenn is too

[13:40:01.0000] <annevk>
zewt: just different channel

[13:40:33.0000] <annevk>
zewt: other glenn is too

[13:40:38.0000] <annevk>
zewt: just different channel

[13:58:00.0000] <annevk>
new WebApps charter: http://www.w3.org/2012/03/webapps-proposed-charter.html

[13:59:17.0000] <annevk>
new WebApps charter: http://www.w3.org/2012/03/webapps-proposed-charter.html

[14:03:00.0000] <oal>
Compression is not in the websocket spec yet, right?

[14:03:36.0000] <oal>
Compression is not in the websocket spec yet, right?

[14:13:00.0000] <Hixie>
oal: not yet

[14:13:52.0000] <Hixie>
oal: not yet

[14:16:00.0000] <oal>
Hixie: too bad. I found something from 2010 that said it was targeted for Websockets 2, when can we expect to see that?

[14:16:01.0000] <oal>
I just hope the websockets spec moves faster than ... ehm, some of the other web specs

[14:16:28.0000] <oal>
Hixie: too bad. I found something from 2010 that said it was targeted for Websockets 2, when can we expect to see that?

[14:17:00.0000] <astearns>
jgraham: how often does testharness.js change?

[14:17:01.0000] <Hixie>
oal: the ietf took over the spec after that plan was made

[14:17:17.0000] <oal>
I just hope the websockets spec moves faster than ... ehm, some of the other web specs

[14:17:37.0000] <astearns>
jgraham: how often does testharness.js change?

[14:18:02.0000] <Hixie>
oal: the ietf took over the spec after that plan was made

[14:19:00.0000] <oal>
So they no longer have any concrete plans for it?

[14:19:01.0000] <Hixie>
dunno, i stopped following that work a while back

[14:19:42.0000] <oal>
So they no longer have any concrete plans for it?

[14:19:59.0000] <Hixie>
dunno, i stopped following that work a while back

[14:21:00.0000] <jgraham>
astearns: define "change"?

[14:22:00.0000] <astearns>
when I add the file to the WebKit repository, how often am I going to have to update it?

[14:22:08.0000] <jgraham>
astearns: define "change"?

[14:22:55.0000] <astearns>
when I add the file to the WebKit repository, how often am I going to have to update it?

[14:23:00.0000] <astearns>
and should I expect changes that will require me to modify tests that were based on an older version?

[14:23:01.0000] <jgraham>
There are probably custers of changes ever week or two

[14:23:02.0000] <jgraham>
But it should remain backwards-compatible

[14:23:03.0000] <jgraham>
At least, the API won't change

[14:23:24.0000] <astearns>
and should I expect changes that will require me to modify tests that were based on an older version?

[14:23:32.0000] <jgraham>
There are probably custers of changes ever week or two

[14:23:50.0000] <jgraham>
But it should remain backwards-compatible

[14:24:00.0000] <jgraham>
If a test method is wrong it might be updated

[14:24:01.0000] <astearns>
where's the best place to discuss/monitor changes?

[14:24:02.0000] <jgraham>
e.g. there is a plan to update assert_throws to more closely match DOM4

[14:24:02.0000] <jgraham>
At least, the API won't change

[14:24:19.0000] <jgraham>
If a test method is wrong it might be updated

[14:25:00.0000] <jgraham>
http://dvcs.w3.org/hg/resources has a feed or https://github.com/w3c/testharness.js

[14:25:02.0000] <astearns>
where's the best place to discuss/monitor changes?

[14:25:10.0000] <jgraham>
e.g. there is a plan to update assert_throws to more closely match DOM4

[14:26:00.0000] <astearns>
ok - thanks!

[14:26:01.0000] <jgraham>
Discussion on public-test-infra mailing list or the html/webapps testing lists

[14:26:14.0000] <jgraham>
http://dvcs.w3.org/hg/resources has a feed or https://github.com/w3c/testharness.js

[14:26:33.0000] <astearns>
ok - thanks!

[14:26:47.0000] <jgraham>
Discussion on public-test-infra mailing list or the html/webapps testing lists

[14:33:00.0000] <annevk>
what is http://lists.w3.org/Archives/Public/spec-prod/2012JanMar/0019.html about?

[14:33:01.0000] <annevk>
/me is confused

[14:34:06.0000] <annevk>
what is http://lists.w3.org/Archives/Public/spec-prod/2012JanMar/0019.html about?

[14:34:09.0000] <annevk>
/me is confused

[14:35:00.0000] <astearns>
fantasia is taking on additional personas?

[14:35:01.0000] <astearns>
*fantasai

[14:35:48.0000] <astearns>
fantasia is taking on additional personas?

[14:36:00.0000] <smaug____>
strange

[14:36:05.0000] <astearns>
*fantasai

[14:37:13.0000] <smaug____>
strange

[14:38:00.0000] <pablof>
annevk, jgraham: fyi https://lists.webkit.org/pipermail/webkit-dev/2012-March/019879.html

[14:39:00.0000] <astearns>
(that's why I was asking about testharness.js)

[14:39:11.0000] <pablof>
annevk, jgraham: fyi https://lists.webkit.org/pipermail/webkit-dev/2012-March/019879.html

[14:39:59.0000] <astearns>
(that's why I was asking about testharness.js)

[14:40:00.0000] <pablof>
/me doesn't believe in reading the backlog

[14:40:01.0000] <pablof>
:P

[14:41:00.0000] <jgraham>
/me thinks that looks excellent :)

[14:41:01.0000] <jgraham>
Also that it is sleep time CET

[14:41:11.0000] <pablof>
/me doesn't believe in reading the backlog

[14:41:13.0000] <pablof>
:P

[14:41:28.0000] <jgraham>
/me thinks that looks excellent :)

[14:41:53.0000] <jgraham>
Also that it is sleep time CET

[14:42:00.0000] <smaug____>
can't be. EET is still awake

[14:42:40.0000] <smaug____>
can't be. EET is still awake

[14:45:00.0000] <annevk>
pablof: looks nice

[14:50:00.0000] <annevk>
so the email above is some kind of spam?

[14:51:00.0000] <annevk>
anyone from the W3C awake?

[14:51:01.0000] <annevk>
also appeared here now: http://lists.w3.org/Archives/Public/www-dom/2012JanMar/0152.html

[14:51:02.0000] <annevk>
MikeSmith: kennyluck_ ^^

[14:51:03.0000] <annevk>
[tm]: ^^

[14:51:17.0000] <annevk>
so the email above is some kind of spam?

[14:51:23.0000] <annevk>
anyone from the W3C awake?

[14:51:43.0000] <annevk>
also appeared here now: http://lists.w3.org/Archives/Public/www-dom/2012JanMar/0152.html

[14:51:48.0000] <annevk>
MikeSmith: kennyluck_ ^^

[14:51:55.0000] <annevk>
[tm]: ^^

[15:28:00.0000] <zewt>
http://lists.w3.org/Archives/Public/www-dom/2012JanMar/0152.html heh ... what?

[15:28:01.0000] <zewt>
some odd combination of multiple personalities and time travelling

[15:28:42.0000] <zewt>
http://lists.w3.org/Archives/Public/www-dom/2012JanMar/0152.html heh ... what?

[15:28:57.0000] <zewt>
some odd combination of multiple personalities and time travelling

[15:31:00.0000] <annevk>
someone is spamming

[15:31:24.0000] <annevk>
someone is spamming

[15:34:00.0000] <kennyluck_>
yeah I am surprised by that fantasai mail too.

[15:34:30.0000] <kennyluck_>
yeah I am surprised by that fantasai mail too.

[15:46:00.0000] <Hixie>
ok, i think i'm done with the Path object checkin (first of many to add new features)

[15:47:00.0000] <Hixie>
of course, it doesn't yet let you paint the paths...

[15:47:00.0000] <Hixie>
ok, i think i'm done with the Path object checkin (first of many to add new features)

[15:47:01.0000] <Hixie>
so it's not very useful

[15:47:25.0000] <Hixie>
of course, it doesn't yet let you paint the paths...

[15:47:28.0000] <Hixie>
so it's not very useful


2012-03-10
[16:34:00.0000] <MikeSmith>
annevk: no clue about that spam

[16:34:01.0000] <MikeSmith>
the headers show it coming from 66.53.221.33

[16:34:33.0000] <MikeSmith>
annevk: no clue about that spam

[16:35:02.0000] <MikeSmith>
the headers show it coming from 66.53.221.33

[16:36:00.0000] <Hixie>
ok path primtives are in and now paintable

[16:36:01.0000] <Hixie>
i'm gonna leave it like that over the weekend to see how many revert requests it gets before moving on to the next feature (ellipses)

[16:36:48.0000] <Hixie>
ok path primtives are in and now paintable

[16:37:00.0000] <Hixie>
not really happy with the way i'm planning on doing ellipses, btw; if anyone has a better api idea please put it on the wiki http://wiki.whatwg.org/wiki/Canvas#Ellipses

[16:37:07.0000] <Hixie>
i'm gonna leave it like that over the weekend to see how many revert requests it gets before moving on to the next feature (ellipses)

[16:37:28.0000] <Hixie>
not really happy with the way i'm planning on doing ellipses, btw; if anyone has a better api idea please put it on the wiki http://wiki.whatwg.org/wiki/Canvas#Ellipses

[16:39:00.0000] <MikeSmith>
annevk: hmm but the fantasai one was sent from 66.194.95.2 through a different smtp server

[16:39:55.0000] <MikeSmith>
annevk: hmm but the fantasai one was sent from 66.194.95.2 through a different smtp server

[16:40:00.0000] <MikeSmith>
eh?

[16:41:00.0000] <MikeSmith>
https://www.google.com/#hl=en&safe=off&output=search&sclient=psy-ab&q=66.194.95.2&oq=66.194.95.2&aq=f&aqi=&aql=&gs_sm=3&gs_upl=1648l1648l0l2154l1l1l0l0l0l0l384l384l3-1l1l0&gs_l=hp.3...1648l1648l0l2154l1l1l0l0l0l0l384l384l3-1l1l0&pbx=1&bav=on.2,or.r_gc.r_pw.r_cp.r_qf.,cf.osb&fp=25cdb3d2f0978fa0&biw=1275&bih=658

[16:41:01.0000] <Hixie>
those e-mails are spamming a url to get w3 page rank

[16:41:02.0000] <Hixie>
look at their sig

[16:41:03.0000] <MikeSmith>
tabatkins⊙6192

[16:41:04.0000] <Hixie>
(it's a phone sex page)

[16:41:05.0000] <MikeSmith>
ah

[16:41:16.0000] <MikeSmith>
eh?

[16:41:30.0000] <MikeSmith>
https://www.google.com/#hl=en&safe=off&output=search&sclient=psy-ab&q=66.194.95.2&oq=66.194.95.2&aq=f&aqi=&aql=&gs_sm=3&gs_upl=1648l1648l0l2154l1l1l0l0l0l0l384l384l3-1l1l0&gs_l=hp.3...1648l1648l0l2154l1l1l0l0l0l0l384l384l3-1l1l0&pbx=1&bav=on.2,or.r_gc.r_pw.r_cp.r_qf.,cf.osb&fp=25cdb3d2f0978fa0&biw=1275&bih=658

[16:41:34.0000] <Hixie>
those e-mails are spamming a url to get w3 page rank

[16:41:38.0000] <Hixie>
look at their sig

[16:41:44.0000] <MikeSmith>
tabatkins⊙6192

[16:41:48.0000] <Hixie>
(it's a phone sex page)

[16:41:52.0000] <MikeSmith>
ah

[16:42:00.0000] <Hixie>
some day w3c will start using rel=nofollow and it'll stop happening :-)

[16:42:01.0000] <Hixie>
bbiab

[16:42:41.0000] <Hixie>
some day w3c will start using rel=nofollow and it'll stop happening :-)

[16:42:51.0000] <Hixie>
bbiab

[16:45:00.0000] <MikeSmith>
ok, I marked both the www-dom one and spec-prod one was spam in the archives

[16:45:01.0000] <MikeSmith>
if anybody notices others, lemme know

[16:45:39.0000] <MikeSmith>
ok, I marked both the www-dom one and spec-prod one was spam in the archives

[16:45:53.0000] <MikeSmith>
if anybody notices others, lemme know

[16:47:00.0000] <MikeSmith>
ah oops

[16:47:01.0000] <MikeSmith>
spec-prod one was from 66.53.221.33 also

[16:47:02.0000] <MikeSmith>
not 66.194.95.2

[16:47:27.0000] <MikeSmith>
ah oops

[16:47:48.0000] <MikeSmith>
spec-prod one was from 66.53.221.33 also

[16:47:55.0000] <MikeSmith>
not 66.194.95.2

[17:13:00.0000] <zewt>
except rel=nofollow wouldn't really make sense for mail archives

[17:14:10.0000] <zewt>
except rel=nofollow wouldn't really make sense for mail archives

[18:30:00.0000] <Hixie>
zewt: why not? they're not trusted

[18:30:58.0000] <Hixie>
zewt: why not? they're not trusted

[18:36:00.0000] <zewt>
too big a hammer; people linking to pages in mailing list conversations definitely should affect things like page ranking

[18:37:00.0000] <zewt>
i wonder if rel=nofollow affects link: searches on google; http://support.google.com/webmasters/bin/answer.py?hl=en&answer=96569 isn't really clear about that, but suggests they won't work, either

[18:37:13.0000] <zewt>
too big a hammer; people linking to pages in mailing list conversations definitely should affect things like page ranking

[18:38:00.0000] <Hixie>
i don't see how it's any different to a forum

[18:38:08.0000] <zewt>
i wonder if rel=nofollow affects link: searches on google; http://support.google.com/webmasters/bin/answer.py?hl=en&answer=96569 isn't really clear about that, but suggests they won't work, either

[18:39:00.0000] <zewt>
forums shouldn't use it, either

[18:39:01.0000] <zewt>
would be pretty bad if people linking to a webpage in discussions didn't "count"

[18:39:17.0000] <Hixie>
i don't see how it's any different to a forum

[18:39:25.0000] <zewt>
forums shouldn't use it, either

[18:40:04.0000] <zewt>
would be pretty bad if people linking to a webpage in discussions didn't "count"

[23:07:00.0000] <MikeSmith>
hsivonen: time for a new HTML parser release?

[23:07:01.0000] <MikeSmith>
it's been a year since the last release

[23:07:50.0000] <MikeSmith>
hsivonen: time for a new HTML parser release?

[23:08:13.0000] <MikeSmith>
it's been a year since the last release

[00:49:00.0000] <annevk>
you got to love how Microsoft first boasts on their blog how they are not shipping things prematurely and now are all like "we cannot change the Indexed DB... IMPOSSIBRU!!!!" which has shipped exactly nowhere unprefixed yet

[00:50:00.0000] <annevk>
such hypocrites

[00:50:15.0000] <annevk>
you got to love how Microsoft first boasts on their blog how they are not shipping things prematurely and now are all like "we cannot change the Indexed DB... IMPOSSIBRU!!!!" which has shipped exactly nowhere unprefixed yet

[00:50:29.0000] <annevk>
such hypocrites

[01:30:00.0000] <annevk>
maybe TC39 should read http://unicode.org/faq/utf_bom.html#utf32-4

[01:30:01.0000] <annevk>
"Given that any industrial-strength text and internationalization support API has to be able to handle sequences of characters, it makes little difference whether the string is internally represented by a sequence of UTF-16 code units, or by a sequence of code-points ( = UTF-32 code units)."

[01:30:38.0000] <annevk>
maybe TC39 should read http://unicode.org/faq/utf_bom.html#utf32-4

[01:30:49.0000] <annevk>
"Given that any industrial-strength text and internationalization support API has to be able to handle sequences of characters, it makes little difference whether the string is internally represented by a sequence of UTF-16 code units, or by a sequence of code-points ( = UTF-32 code units)."

[02:11:00.0000] <annevk>
I think http://www.reddit.com/r/circlejerk/ might be new favorite subreddit

[02:11:47.0000] <annevk>
I think http://www.reddit.com/r/circlejerk/ might be new favorite subreddit

[04:50:00.0000] <bga>
http://webintents.org/

[04:50:39.0000] <bga>
http://webintents.org/

[05:03:00.0000] <Velmont>
So... They mean the shim doesn't work in Opera?

[05:03:21.0000] <Velmont>
So... They mean the shim doesn't work in Opera?

[05:04:00.0000] <Velmont>
And I still don't like their angle. Making something entirely new instead of extending registerprotocolhandler. Can even use it as a backend, but still have a higher level API on top.

[05:04:37.0000] <Velmont>
And I still don't like their angle. Making something entirely new instead of extending registerprotocolhandler. Can even use it as a backend, but still have a higher level API on top.

[05:14:00.0000] <Ms2ger>
Velmont, "Googl"

[05:14:01.0000] <Ms2ger>
With an e, even

[05:14:28.0000] <Ms2ger>
Velmont, "Googl"

[05:14:33.0000] <Ms2ger>
With an e, even

[05:20:00.0000] <Velmont>
Hmmm. I keep pressing "specification" but it doesn't go anywhere.

[05:21:00.0000] <Velmont>
Thought I'd take a look at how hard it would be to change the underlying technology in it.

[05:21:15.0000] <Velmont>
Hmmm. I keep pressing "specification" but it doesn't go anywhere.

[05:21:31.0000] <Velmont>
Thought I'd take a look at how hard it would be to change the underlying technology in it.

[05:27:00.0000] <Velmont>
Meh, the examples work even worse in Firefox than Opera. Half baked, non-working stuff.

[05:27:20.0000] <Velmont>
Meh, the examples work even worse in Firefox than Opera. Half baked, non-working stuff.

[07:04:00.0000] <MikeSmith>
scott_gonzalez: so I now have something that I think will work for you guys

[07:04:01.0000] <MikeSmith>
still trying to figure out what would be the least kludgey way to do it

[07:04:40.0000] <MikeSmith>
scott_gonzalez: so I now have something that I think will work for you guys

[07:05:00.0000] <MikeSmith>
but it's doing as expected in my workspace at least

[07:05:18.0000] <MikeSmith>
still trying to figure out what would be the least kludgey way to do it

[07:05:54.0000] <MikeSmith>
but it's doing as expected in my workspace at least

[07:08:00.0000] <MikeSmith>
scott_gonzalez: anyway, should require not build but you'll need to have 4-5 particular jar files around

[07:08:43.0000] <MikeSmith>
scott_gonzalez: anyway, should require not build but you'll need to have 4-5 particular jar files around

[13:37:00.0000] <Ms2ger>
http://www.slashdot.org/article.pl?sid=12/03/10/2134253

[13:37:32.0000] <Ms2ger>
http://www.slashdot.org/article.pl?sid=12/03/10/2134253

[14:09:00.0000] <yuhong>
http://ln.hixie.ch/?start=1137740632&count=1

[14:09:01.0000] <yuhong>
"I'm not even going to try to specify quirks mode parsing. Hopefully, by making the DOCTYPE short and memorable, it will encourage authors to use it more."

[14:09:25.0000] <yuhong>
http://ln.hixie.ch/?start=1137740632&count=1

[14:09:42.0000] <yuhong>
"I'm not even going to try to specify quirks mode parsing. Hopefully, by making the DOCTYPE short and memorable, it will encourage authors to use it more."

[14:12:00.0000] <yuhong>
Two years before X-UA-Compatible was created.

[14:12:33.0000] <yuhong>
Two years before X-UA-Compatible was created.


2012-03-11
[23:09:00.0000] <zcorpan>
"In this case the "proposed changes" will very likely be the null set if the CfC passes."

[23:09:01.0000] <zcorpan>
very likely?

[23:10:04.0000] <zcorpan>
"In this case the "proposed changes" will very likely be the null set if the CfC passes."

[23:10:10.0000] <zcorpan>
very likely?

[23:11:00.0000] <zcorpan>
it sounds a bit as if the chairs haven't reviewed the cp properly yet to be absolutely sure whether it would result in no changes or not

[23:11:25.0000] <zcorpan>
it sounds a bit as if the chairs haven't reviewed the cp properly yet to be absolutely sure whether it would result in no changes or not

[23:14:00.0000] <zcorpan>
http://software.hixie.ch/utilities/js/live-dom-viewer/saved/1377 seems kinda fragile in opera

[23:14:41.0000] <zcorpan>
http://software.hixie.ch/utilities/js/live-dom-viewer/saved/1377 seems kinda fragile in opera

[23:15:00.0000] <zcorpan>
sometimes it disappears, sometimes it gets a random color, sometimes a table border is rendered but no cells, and sometimes it renders as it should...

[23:15:38.0000] <zcorpan>
sometimes it disappears, sometimes it gets a random color, sometimes a table border is rendered but no cells, and sometimes it renders as it should...

[23:27:00.0000] <zcorpan>
hmm seems it just gets a random color and sometimes is fully transparent

[23:27:28.0000] <zcorpan>
hmm seems it just gets a random color and sometimes is fully transparent

[23:38:00.0000] <othermaciej>
zcorpan: it's very clear that it will result in no changes (as least to me)

[23:39:08.0000] <othermaciej>
zcorpan: it's very clear that it will result in no changes (as least to me)

[23:40:00.0000] <zcorpan>
othermaciej: ok

[23:41:18.0000] <zcorpan>
othermaciej: ok

[05:35:23.0000] <bga>
youtube discriminante Opera

[05:35:57.0000] <bga>
for Opera docuemt.write(<embed>

[05:36:00.0000] <bga>
youtube discriminante Opera

[05:36:01.0000] <bga>
for Opera docuemt.write(<embed>

[05:36:02.0000] <bga>
=> dont work w/o js

[05:36:08.0000] <bga>
=> dont work w/o js

[05:36:41.0000] <bga>
for ff - just <embed>

[05:36:57.0000] <bga>
for IE - <object>

[05:37:00.0000] <bga>
for ff - just <embed>

[05:37:01.0000] <bga>
for IE - <object>

[05:37:02.0000] <gsnedders>
bga: That's all to do with the click-to-activate plugin nonsense.

[05:37:19.0000] <gsnedders>
bga: That's all to do with the click-to-activate plugin nonsense.

[05:42:56.0000] <Dashiva>
gsnedders: Speaking of that

[05:43:00.0000] <Dashiva>
gsnedders: Speaking of that

[05:43:01.0000] <Dashiva>
How do you click to activate when there's no window?

[05:43:10.0000] <Dashiva>
How do you click to activate when there's no window?

[05:43:22.0000] <Dashiva>
E.g. the chat sounds in gmail

[05:44:00.0000] <Dashiva>
E.g. the chat sounds in gmail

[05:46:00.0000] <gsnedders>
Dashiva: the plugin can still run, and produce sounds, while not active

[05:46:07.0000] <gsnedders>
Dashiva: the plugin can still run, and produce sounds, while not active

[05:48:36.0000] <bga>
gsnedders speaking about sound. What "Enable Sound in Web pages" in f12 disable? Only <bgsound>? or <audio> too?

[05:49:00.0000] <bga>
gsnedders speaking about sound. What "Enable Sound in Web pages" in f12 disable? Only <bgsound>? or <audio> too?

[05:50:29.0000] <gsnedders>
bgsound, I believe.

[05:51:00.0000] <gsnedders>
bgsound, I believe.

[05:51:25.0000] <bga>
:(

[05:51:40.0000] <bga>
it should disable <audio> too

[05:52:00.0000] <bga>
:(

[05:52:01.0000] <bga>
it should disable <audio> too

[05:52:02.0000] <bga>
and <embed midi/wav>

[05:52:10.0000] <bga>
and <embed midi/wav>

[05:52:32.0000] <bga>
embed/iframe

[05:53:00.0000] <bga>
embed/iframe

[06:01:00.0000] <Dashiva>
gsnedders: Experience suggests it doesn't

[06:01:10.0000] <Dashiva>
gsnedders: Experience suggests it doesn't

[06:01:29.0000] <Dashiva>
There's no chat sounds in gmail in Opera

[06:02:00.0000] <Dashiva>
There's no chat sounds in gmail in Opera

[07:02:45.0000] <zcorpan>
/me fiddled a bit more with http://simon.html5.org/specs/quirks-mode#the-percentage-height-quirk

[07:03:00.0000] <zcorpan>
/me fiddled a bit more with http://simon.html5.org/specs/quirks-mode#the-percentage-height-quirk

[08:01:33.0000] <wilhelm>
Which browsers support object-fit these days?

[08:02:00.0000] <wilhelm>
Which browsers support object-fit these days?

[08:12:25.0000] <zewt>
if you have two WebIDL overloads, void foo(interface1 a) and void foo(interface2 b), and you call with an object Z that implements neither interface, exactly what happens?

[08:13:00.0000] <zewt>
if you have two WebIDL overloads, void foo(interface1 a) and void foo(interface2 b), and you call with an object Z that implements neither interface, exactly what happens?

[08:13:34.0000] <zewt>
it seems like TypeError is supposed to be thrown from http://dev.w3.org/2006/webapi/WebIDL/#es-interface, but it's not clear how it gets *there* in the first place

[08:14:00.0000] <zewt>
it seems like TypeError is supposed to be thrown from http://dev.w3.org/2006/webapi/WebIDL/#es-interface, but it's not clear how it gets *there* in the first place

[08:16:00.0000] <zewt>
(not sure where overload selection is actually defined; 3.2.6 doesn't seem to do it)

[08:16:05.0000] <zewt>
(not sure where overload selection is actually defined; 3.2.6 doesn't seem to do it)

[08:19:00.0000] <zewt>
oh, hidden away in 4.4.1.1; the word "overload" needs to show up in the TOC for it somewhere

[08:19:10.0000] <zewt>
oh, hidden away in 4.4.1.1; the word "overload" needs to show up in the TOC for it somewhere

[09:13:00.0000] <Ms2ger>
zewt, ah, now I see why you were asking :)

[09:13:05.0000] <Ms2ger>
zewt, ah, now I see why you were asking :)

[10:22:48.0000] <kennyluck_>
I don't understand how would text/html in DOMParser take 10 years to finish → https://bugzilla.mozilla.org/show_bug.cgi?id=102699

[10:23:00.0000] <kennyluck_>
I don't understand how would text/html in DOMParser take 10 years to finish → https://bugzilla.mozilla.org/show_bug.cgi?id=102699

[10:23:01.0000] <kennyluck_>
I thought there was some technical debate about this feature, though I don't see any.

[10:23:02.0000] <kennyluck_>
in the bug, at least.

[10:23:12.0000] <kennyluck_>
I thought there was some technical debate about this feature, though I don't see any.

[10:23:21.0000] <kennyluck_>
in the bug, at least.

[10:23:31.0000] <annevk>
nobody interested in doing it is usually the reason

[10:24:00.0000] <annevk>
nobody interested in doing it is usually the reason

[10:42:00.0000] <Ms2ger>
Also, the fact that our old HTML parser has been unmaintained for a decade or so

[10:42:01.0000] <Ms2ger>
Also, the fact that our old HTML parser has been unmaintained for a decade or so

[10:42:56.0000] <annevk>
kennyluck_: btw, have you heard back yet on lists.w3.org hosting a copy of whatwg⊙wo?

[10:43:00.0000] <annevk>
kennyluck_: btw, have you heard back yet on lists.w3.org hosting a copy of whatwg⊙wo?

[10:44:44.0000] <kennyluck_>
annevk, no. You could ask MikeSmith.

[10:45:00.0000] <kennyluck_>
annevk, no. You could ask MikeSmith.

[10:50:54.0000] <bga>
i wonder why ppl dont accept pt and cm units in css

[10:51:00.0000] <bga>
i wonder why ppl dont accept pt and cm units in css

[10:51:01.0000] <bga>
font-size: 0.5cm

[10:51:05.0000] <bga>
font-size: 0.5cm

[10:51:26.0000] <bga>
look identical in all UAs

[10:51:45.0000] <bga>
not related your device dpi

[10:51:56.0000] <gsnedders>
bga: IE6.

[10:52:00.0000] <bga>
look identical in all UAs

[10:52:01.0000] <bga>
not related your device dpi

[10:52:02.0000] <gsnedders>
bga: IE6.

[10:52:03.0000] <bga>
ie6 what?

[10:52:16.0000] <bga>
ie6 what?

[10:52:25.0000] <bga>
dont support it?

[10:53:00.0000] <bga>
dont support it?

[10:55:33.0000] <gsnedders>
bga: Scaling didn't work with absolute units in IE6, for a11y reasons was discouraged

[10:56:00.0000] <gsnedders>
bga: Scaling didn't work with absolute units in IE6, for a11y reasons was discouraged

[10:56:44.0000] <bga>
ok. so when IE6 will die we now can use cm?

[10:57:00.0000] <bga>
ok. so when IE6 will die we now can use cm?

[10:57:01.0000] <bga>
many projects doesnt support IE6 today

[10:57:02.0000] <gsnedders>
bga: I guess so.

[10:57:08.0000] <bga>
many projects doesnt support IE6 today

[10:57:11.0000] <gsnedders>
bga: I guess so.

[11:05:00.0000] <kennyluck_>
I never try hard to understand the debates about physical units in CSS. There are so many long long threads about them on www-style...

[11:05:19.0000] <kennyluck_>
I never try hard to understand the debates about physical units in CSS. There are so many long long threads about them on www-style...

[11:29:25.0000] <zewt>
cm units would be very strange on large monitors if they actually worked

[11:30:00.0000] <zewt>
cm units would be very strange on large monitors if they actually worked

[11:31:00.0000] <zewt>
annevk: re utf32--i wouldn't quote that; it reads like nothing but unicode people trying to pretend utf-16 wasn't a gross mistake

[11:31:16.0000] <zewt>
annevk: re utf32--i wouldn't quote that; it reads like nothing but unicode people trying to pretend utf-16 wasn't a gross mistake

[11:31:53.0000] <zewt>
(it talks about "industrial-strength text", which ignores the fact that 98% of code isn't that)

[11:32:00.0000] <zewt>
(it talks about "industrial-strength text", which ignores the fact that 98% of code isn't that)

[11:41:00.0000] <bga>
zewt check it http://dl.dropbox.com/u/5332813/test/screenDiagonal/index.xhtml

[11:41:04.0000] <bga>
zewt check it http://dl.dropbox.com/u/5332813/test/screenDiagonal/index.xhtml

[12:03:00.0000] <annevk>
zewt: if utf-16 was a mistake, why wouldn't utf-32 be?

[12:03:06.0000] <annevk>
zewt: if utf-16 was a mistake, why wouldn't utf-32 be?

[12:06:39.0000] <StoneCypher>
because 16's got varying width codepoints and 32 doesn't

[12:06:53.0000] <StoneCypher>
the issue is about whether you have constant time random access to string contents

[12:07:00.0000] <StoneCypher>
because 16's got varying width codepoints and 32 doesn't

[12:07:00.0000] <StoneCypher>
which is a lot more important than most people realize

[12:07:01.0000] <StoneCypher>
the issue is about whether you have constant time random access to string contents

[12:07:02.0000] <StoneCypher>
which is a lot more important than most people realize

[12:10:00.0000] <annevk>
doesn't help with grapheme clusters

[12:10:15.0000] <annevk>
doesn't help with grapheme clusters

[12:10:32.0000] <StoneCypher>
yeah, it does

[12:10:44.0000] <annevk>
euh no

[12:10:53.0000] <StoneCypher>
those are distinct codepoints, iirc (they aren't distinct characters)

[12:11:00.0000] <StoneCypher>
yeah, it does

[12:11:01.0000] <annevk>
euh no

[12:11:02.0000] <StoneCypher>
those are distinct codepoints, iirc (they aren't distinct characters)

[12:11:03.0000] <StoneCypher>
the germane issue is, it lets you find whatever the label is of the granular lookup in constant time, without a string scan

[12:11:14.0000] <StoneCypher>
the germane issue is, it lets you find whatever the label is of the granular lookup in constant time, without a string scan

[12:11:46.0000] <gsnedders>
annevk: It helps because you can then check general category of each codepoint in constant time in the string

[12:12:00.0000] <gsnedders>
annevk: It helps because you can then check general category of each codepoint in constant time in the string

[12:12:01.0000] <StoneCypher>
it's much more general than that

[12:12:02.0000] <StoneCypher>
you can act in constant time

[12:12:08.0000] <StoneCypher>
it's much more general than that

[12:12:11.0000] <StoneCypher>
you can act in constant time

[12:12:24.0000] <StoneCypher>
you can take substrings, you can replace characters, you can do searches, etc

[12:12:48.0000] <StoneCypher>
without fixed-width granular units you are forced to behave in a fashion equivalent to a linked list

[12:12:48.0000] <annevk>
well you can't do a lot of that because of grapheme clusters

[12:12:54.0000] <StoneCypher>
again

[12:13:00.0000] <StoneCypher>
you can take substrings, you can replace characters, you can do searches, etc

[12:13:01.0000] <StoneCypher>
without fixed-width granular units you are forced to behave in a fashion equivalent to a linked list

[12:13:01.0000] <StoneCypher>
you're speaking at a higher level of organization than is appropriate

[12:13:02.0000] <annevk>
well you can't do a lot of that because of grapheme clusters

[12:13:03.0000] <StoneCypher>
again

[12:13:04.0000] <StoneCypher>
you're speaking at a higher level of organization than is appropriate

[12:13:04.0000] <StoneCypher>
there are layers in unicode

[12:13:05.0000] <StoneCypher>
there are layers in unicode

[12:13:06.0000] <StoneCypher>
this is about finding positions in the codepoint stream, not interpreting them

[12:13:15.0000] <StoneCypher>
this is about finding positions in the codepoint stream, not interpreting them

[12:13:32.0000] <StoneCypher>
if you want to discuss interpretation, you *still* get a significant complexity increase from locating the things you later interpret

[12:13:35.0000] <annevk>
if you want to do text manipulation, you should look at the text, not code points

[12:13:48.0000] <StoneCypher>
and what do you believe the text is made of

[12:14:00.0000] <StoneCypher>
if you want to discuss interpretation, you *still* get a significant complexity increase from locating the things you later interpret

[12:14:01.0000] <annevk>
if you want to do text manipulation, you should look at the text, not code points

[12:14:02.0000] <StoneCypher>
and what do you believe the text is made of

[12:14:03.0000] <StoneCypher>
this is an issue of datastructure access time

[12:14:03.0000] <StoneCypher>
this is an issue of datastructure access time

[12:14:04.0000] <StoneCypher>
addressing what's in the datastructure is missing the point

[12:14:13.0000] <StoneCypher>
addressing what's in the datastructure is missing the point

[12:16:38.0000] <annevk>
not sure what you're saying

[12:17:00.0000] <annevk>
not sure what you're saying

[12:17:01.0000] <gsnedders>
annevk: If you want to do text manipulation, you have to look at the text, and to look at the text, you have to look at its underlying representation, so you have to look at its codepoints.

[12:17:20.0000] <gsnedders>
annevk: If you want to do text manipulation, you have to look at the text, and to look at the text, you have to look at its underlying representation, so you have to look at its codepoints.

[12:17:39.0000] <gsnedders>
annevk: So performance of looking at the codepoints is relevant for text manipulaton

[12:18:00.0000] <gsnedders>
annevk: So performance of looking at the codepoints is relevant for text manipulaton

[12:18:38.0000] <annevk>
are you saying perf would be drastically impacted because of utf-16?

[12:18:53.0000] <annevk>
surrogates are really easy to calculate and find too

[12:19:00.0000] <annevk>
are you saying perf would be drastically impacted because of utf-16?

[12:19:01.0000] <annevk>
surrogates are really easy to calculate and find too

[12:19:27.0000] <StoneCypher>
yes, performance is radically impacted by imposing non-constant time access on strings.

[12:20:00.0000] <StoneCypher>
yes, performance is radically impacted by imposing non-constant time access on strings.

[12:21:43.0000] <zewt>
annevk: utf-32 is a reasonable internal format for strings; utf-16 is just garbage

[12:22:00.0000] <zewt>
annevk: utf-32 is a reasonable internal format for strings; utf-16 is just garbage

[12:22:30.0000] <gsnedders>
And UTF-8 is even worse.

[12:22:40.0000] <annevk>
given that memory has been an argument in the past, I'd argue utf-32 is prolly worse, and utf-8 would be better

[12:22:44.0000] <zewt>
utf-16 combines the cons of both utf-8 (variable length) and utf-32 (not ASCII-compatible)

[12:23:00.0000] <gsnedders>
And UTF-8 is even worse.

[12:23:01.0000] <annevk>
given that memory has been an argument in the past, I'd argue utf-32 is prolly worse, and utf-8 would be better

[12:23:02.0000] <zewt>
utf-16 combines the cons of both utf-8 (variable length) and utf-32 (not ASCII-compatible)

[12:23:02.0000] <annevk>
see e.g. some posts from roc on what browsers from scratch would use

[12:23:03.0000] <annevk>
see e.g. some posts from roc on what browsers from scratch would use

[12:23:44.0000] <gsnedders>
annevk: Yes, perf and memory usage are directly opposite here

[12:24:00.0000] <gsnedders>
annevk: Yes, perf and memory usage are directly opposite here

[12:24:01.0000] <zewt>
i'd expect new implementations to use transparent optimization (eg. UCS-2 for strings that fit in it, expanding strings to UTF-32 when necessary, without application-level code having to know the difference)

[12:24:03.0000] <zewt>
i'd expect new implementations to use transparent optimization (eg. UCS-2 for strings that fit in it, expanding strings to UTF-32 when necessary, without application-level code having to know the difference)

[12:24:23.0000] <gsnedders>
annevk: UTF-8 undeniably has the lowest memory usage and the worst performance; UTF-32 has the highest memory usage and best performance.

[12:24:29.0000] <gsnedders>
zewt: Probably ASCII too.

[12:24:38.0000] <zewt>
"performance" is a bit more complex than that

[12:24:47.0000] <annevk>
yeah, best performance for what?

[12:24:55.0000] <zewt>
eg. if you're just copying and comparing strings (very common), lowest memory usage equals highest performance

[12:25:00.0000] <gsnedders>
annevk: UTF-8 undeniably has the lowest memory usage and the worst performance; UTF-32 has the highest memory usage and best performance.

[12:25:00.0000] <annevk>
certainly not for 16-bit code unit indexing :p

[12:25:01.0000] <gsnedders>
zewt: Probably ASCII too.

[12:25:02.0000] <zewt>
"performance" is a bit more complex than that

[12:25:03.0000] <annevk>
yeah, best performance for what?

[12:25:04.0000] <zewt>
eg. if you're just copying and comparing strings (very common), lowest memory usage equals highest performance

[12:25:05.0000] <annevk>
certainly not for 16-bit code unit indexing :p

[12:26:24.0000] <zewt>
another problem with utf-16 is that it leads to lots of subtle bugs when surrogates appear, since they're so rare people never test it

[12:27:00.0000] <zewt>
another problem with utf-16 is that it leads to lots of subtle bugs when surrogates appear, since they're so rare people never test it

[12:42:42.0000] <annevk>
so if you give

[12:42:43.0000] <annevk>
FE FF 00 7A D8 AA 00 7A 00 7A

[12:42:49.0000] <annevk>
to WebKit

[12:42:53.0000] <annevk>
it only displays a single "z"

[12:43:00.0000] <annevk>
so if you give

[12:43:01.0000] <annevk>
FE FF 00 7A D8 AA 00 7A 00 7A

[12:43:02.0000] <annevk>
to WebKit

[12:43:03.0000] <annevk>
it only displays a single "z"

[12:43:24.0000] <annevk>
but if you go through the code points, there's actually 4, and the second is D8AA, not FFFD

[12:43:31.0000] <annevk>
(it's FFFD in Gecko)

[12:44:00.0000] <annevk>
but if you go through the code points, there's actually 4, and the second is D8AA, not FFFD

[12:44:01.0000] <annevk>
(it's FFFD in Gecko)

[12:44:02.0000] <kennyluck_>
That's a silly bug in WebKit. It doesn't display any text run after an isolated surrogate.

[12:44:03.0000] <annevk>
Opera mimics Opera

[12:44:05.0000] <kennyluck_>
That's a silly bug in WebKit. It doesn't display any text run after an isolated surrogate.

[12:44:17.0000] <annevk>
Opera mimics Opera

[12:44:30.0000] <annevk>
euh Opera mimics Gekco

[12:44:32.0000] <annevk>
Gecko

[12:44:33.0000] <annevk>
geez

[12:44:53.0000] <Velmont>
Would be nice to mimic Opera though.

[12:44:56.0000] <Velmont>
Nice and recursive.

[12:44:59.0000] <Ms2ger>
Opera did it first

[12:45:00.0000] <annevk>
euh Opera mimics Gekco

[12:45:01.0000] <annevk>
Gecko

[12:45:02.0000] <annevk>
geez

[12:45:03.0000] <Velmont>
Would be nice to mimic Opera though.

[12:45:04.0000] <Velmont>
Nice and recursive.

[12:45:05.0000] <Ms2ger>
Opera did it first

[12:45:06.0000] <Velmont>
So it is recursive then. Just with one indirection :P

[12:45:17.0000] <Velmont>
So it is recursive then. Just with one indirection :P

[12:45:46.0000] <annevk>
Ms2ger: it's not like Gecko could up with something innovative like that

[12:46:00.0000] <annevk>
Ms2ger: it's not like Gecko could up with something innovative like that

[12:47:25.0000] <annevk>
and of course, IE is the same as Webkit, minus the silly bug

[12:47:27.0000] <Ms2ger>
Gecko is perfectly capable of coming up with innovative things

[12:47:38.0000] <Ms2ger>
Did I say innovative? I meant ridiculous

[12:48:00.0000] <annevk>
and of course, IE is the same as Webkit, minus the silly bug

[12:48:01.0000] <Ms2ger>
Gecko is perfectly capable of coming up with innovative things

[12:48:02.0000] <Ms2ger>
Did I say innovative? I meant ridiculous

[12:48:03.0000] <annevk>
man not even UTF-16 decoding is interoperable

[12:48:04.0000] <annevk>
what is wrong with this world

[12:48:04.0000] <annevk>
man not even UTF-16 decoding is interoperable

[12:48:05.0000] <Ms2ger>
Surprise!

[12:48:08.0000] <annevk>
what is wrong with this world

[12:48:15.0000] <Ms2ger>
Surprise!

[12:51:31.0000] <annevk>
oh, @bz_moz made a public appearance at SXSW

[12:51:38.0000] <annevk>
I wonder if there's a video of that

[12:52:00.0000] <annevk>
oh, @bz_moz made a public appearance at SXSW

[12:52:01.0000] <annevk>
I wonder if there's a video of that

[12:52:02.0000] <Ms2ger>
I hope so

[12:53:00.0000] <Ms2ger>
dbaron had an interesting talk too

[12:53:13.0000] <Ms2ger>
dbaron had an interesting talk too

[12:55:04.0000] <scott_gonzalez>
MikeSmith: 4 or 5 files should be fine, assuming they're not massive.

[12:55:26.0000] <scott_gonzalez>
I'll ping you tomorrow about it. Thanks.

[12:56:00.0000] <scott_gonzalez>
MikeSmith: 4 or 5 files should be fine, assuming they're not massive.

[12:56:01.0000] <scott_gonzalez>
I'll ping you tomorrow about it. Thanks.


2012-03-12
[18:14:00.0000] <rniwa>
AryehGregor: yt?

[18:14:15.0000] <rniwa>
AryehGregor: yt?

[22:30:54.0000] <rniwa>
AryehGregor: yt?

[22:31:00.0000] <rniwa>
AryehGregor: yt?

[22:31:01.0000] <rniwa>
or is there anyone else familiar with Callback in Web IDL?

[22:31:02.0000] <heycam>
rniwa, hey

[22:31:11.0000] <rniwa>
or is there anyone else familiar with Callback in Web IDL?

[22:31:20.0000] <heycam>
rniwa, hey

[22:31:24.0000] <rniwa>
heycam: hi

[22:31:29.0000] <rniwa>
heycam: do you know Callback?

[22:31:42.0000] <heycam>
rniwa, yeah

[22:32:00.0000] <rniwa>
heycam: hi

[22:32:01.0000] <rniwa>
heycam: do you know Callback?

[22:32:02.0000] <heycam>
rniwa, yeah

[22:32:49.0000] <rniwa>
heycam: so I thought I can turn http://rniwa.com/editing/undomanager.html#dom-domtransaction into a dictionary

[22:32:59.0000] <rniwa>
heycam: but it isn't so simple

[22:33:00.0000] <rniwa>
heycam: so I thought I can turn http://rniwa.com/editing/undomanager.html#dom-domtransaction into a dictionary

[22:33:01.0000] <rniwa>
heycam: but it isn't so simple

[22:33:02.0000] <rniwa>
heycam: because they're callback functions, they can't be GC'ed like other objects :(

[22:33:03.0000] <heycam>
rniwa, oh I see, since it's got Functions

[22:33:04.0000] <rniwa>
heycam: yeah...

[22:33:15.0000] <rniwa>
heycam: because they're callback functions, they can't be GC'ed like other objects :(

[22:33:17.0000] <heycam>
rniwa, oh I see, since it's got Functions

[22:33:20.0000] <rniwa>
heycam: yeah...

[22:33:36.0000] <heycam>
rniwa, so what I did when removing [Callback] from the spec was to replace it with two things

[22:33:49.0000] <heycam>
rniwa, one was the "callback Foo = returntype (args);" syntax

[22:33:52.0000] <heycam>
that's just for single functions

[22:33:56.0000] <rniwa>
heycam: kind of embarrassing story but I didn't realize that it won't work 'til I started to implement it

[22:34:00.0000] <heycam>
rniwa, so what I did when removing [Callback] from the spec was to replace it with two things

[22:34:01.0000] <heycam>
rniwa, one was the "callback Foo = returntype (args);" syntax

[22:34:02.0000] <heycam>
that's just for single functions

[22:34:03.0000] <rniwa>
heycam: kind of embarrassing story but I didn't realize that it won't work 'til I started to implement it

[22:34:04.0000] <heycam>
and the other is "callback interface Something { attribute whatever; void somefunction(); }"

[22:34:17.0000] <heycam>
and the other is "callback interface Something { attribute whatever; void somefunction(); }"

[22:34:26.0000] <heycam>
so I think you want the latter

[22:34:27.0000] <rniwa>
heycam: right.

[22:34:37.0000] <rniwa>
heycam: yeah, so I do want the latter

[22:34:43.0000] <rniwa>
heycam: but then I can't really get rid of the interface

[22:34:53.0000] <rniwa>
heycam: i.e. can't just do document.undoManager.transact({ executeAutomatic: function () {

[22:34:53.0000] <rniwa>
    this.executeAutomatic = function () { alert('foo'); }

[22:34:54.0000] <rniwa>
    alert('bar');

[22:34:55.0000] <rniwa>
}, undo: function () { alert('baz'); } }); // alerts 'bar'

[22:35:00.0000] <heycam>
so I think you want the latter

[22:35:01.0000] <rniwa>
heycam: right.

[22:35:02.0000] <rniwa>
heycam: yeah, so I do want the latter

[22:35:03.0000] <rniwa>
heycam: but then I can't really get rid of the interface

[22:35:04.0000] <rniwa>
heycam: i.e. can't just do document.undoManager.transact({ executeAutomatic: function () {

[22:35:05.0000] <rniwa>
    this.executeAutomatic = function () { alert('foo'); }

[22:35:06.0000] <rniwa>
    alert('bar');

[22:35:07.0000] <rniwa>
}, undo: function () { alert('baz'); } }); // alerts 'bar'

[22:35:08.0000] <heycam>
rniwa, no you can do that

[22:35:08.0000] <heycam>
rniwa, no you can do that

[22:35:09.0000] <rniwa>
heycam: really/

[22:35:10.0000] <rniwa>
heycam: does it support implicit instantiation?

[22:35:12.0000] <rniwa>
heycam: really/

[22:35:22.0000] <rniwa>
heycam: does it support implicit instantiation?

[22:35:41.0000] <heycam>
rniwa, yeah, for callback interfaces when it comes to convert the JS value into the "callback interface" value, it'll just inspect the properties on the JS Object for the attributes/methods

[22:35:53.0000] <rniwa>
heycam: okay.

[22:35:57.0000] <heycam>
rniwa, it should keep a reference to the JS Object ltself, not make a copy or anything, too

[22:36:00.0000] <heycam>
rniwa, yeah, for callback interfaces when it comes to convert the JS value into the "callback interface" value, it'll just inspect the properties on the JS Object for the attributes/methods

[22:36:01.0000] <rniwa>
heycam: okay.

[22:36:02.0000] <heycam>
rniwa, it should keep a reference to the JS Object ltself, not make a copy or anything, too

[22:36:03.0000] <rniwa>
heycam: maybe it's just that webkit's binding code doesn't support it then :\

[22:36:08.0000] <rniwa>
heycam: maybe it's just that webkit's binding code doesn't support it then :\

[22:36:27.0000] <rniwa>
heycam: right, that'll defeat the point of using callback interface

[22:36:31.0000] <heycam>
rniwa, there are rules in the spec about how attributes are read/written and operations are invoked on "user objects", which are JS objects that implement callback interfaces

[22:36:46.0000] <rniwa>
heycam: yeah, I was just reading that section

[22:36:56.0000] <heycam>
rniwa, hmm, so you *want* to make a copy of the properties on the object passed in?

[22:37:00.0000] <rniwa>
heycam: right, that'll defeat the point of using callback interface

[22:37:01.0000] <heycam>
rniwa, there are rules in the spec about how attributes are read/written and operations are invoked on "user objects", which are JS objects that implement callback interfaces

[22:37:02.0000] <rniwa>
heycam: yeah, I was just reading that section

[22:37:03.0000] <heycam>
rniwa, hmm, so you *want* to make a copy of the properties on the object passed in?

[22:37:04.0000] <rniwa>
heycam: no

[22:37:05.0000] <rniwa>
heycam: I do want to keep the original object

[22:37:07.0000] <rniwa>
heycam: no

[22:37:12.0000] <rniwa>
heycam: I do want to keep the original object

[22:37:27.0000] <rniwa>
heycam: but... not all functions need to be present on the object

[22:37:35.0000] <rniwa>
heycam: that's what makes it much more complicated

[22:37:57.0000] <rniwa>
heycam: DOMTransaction has 5 properties but any one of them can be omitted :(

[22:38:00.0000] <rniwa>
heycam: but... not all functions need to be present on the object

[22:38:01.0000] <rniwa>
heycam: that's what makes it much more complicated

[22:38:02.0000] <rniwa>
heycam: DOMTransaction has 5 properties but any one of them can be omitted :(

[22:38:03.0000] <heycam>
rniwa, ok -- at least the rules should convert the undefined you get from getting the properties into the null

[22:38:08.0000] <heycam>
rniwa, ok -- at least the rules should convert the undefined you get from getting the properties into the null

[22:38:26.0000] <rniwa>
heycam: ah, ok

[22:38:39.0000] <heycam>
rniwa, I guess you're concerned about the fact that dictionaries let you specify default values for their members

[22:38:46.0000] <heycam>
or know whether they are omitted or not

[22:39:00.0000] <rniwa>
heycam: ah, ok

[22:39:01.0000] <heycam>
rniwa, I guess you're concerned about the fact that dictionaries let you specify default values for their members

[22:39:02.0000] <heycam>
or know whether they are omitted or not

[22:39:03.0000] <heycam>
oh hang on

[22:39:08.0000] <heycam>
oh hang on

[22:39:23.0000] <heycam>
so currently you have them written as "attribute Function? …"

[22:39:24.0000] <rniwa>
heycam: well, my problem is more of the fact this is very unusual interface obejct

[22:39:35.0000] <rniwa>
heycam: yeah, i think that's incorrect

[22:39:44.0000] <heycam>
actually that might be more correct :)

[22:39:45.0000] <rniwa>
heycam: but I couldn't find a way to right optional interface methods :(

[22:39:52.0000] <heycam>
if you want to allow the author to omit them

[22:39:53.0000] <rniwa>
s/right/write

[22:40:00.0000] <heycam>
so currently you have them written as "attribute Function? …"

[22:40:01.0000] <rniwa>
heycam: well, my problem is more of the fact this is very unusual interface obejct

[22:40:01.0000] <rniwa>
heycam: oh

[22:40:02.0000] <rniwa>
heycam: yeah, i think that's incorrect

[22:40:03.0000] <heycam>
actually that might be more correct :)

[22:40:04.0000] <rniwa>
heycam: but I couldn't find a way to right optional interface methods :(

[22:40:05.0000] <heycam>
if you want to allow the author to omit them

[22:40:06.0000] <rniwa>
s/right/write

[22:40:07.0000] <rniwa>
heycam: oh

[22:41:00.0000] <heycam>
but that's interesting I hadn't thought of that difference before

[22:41:10.0000] <heycam>
but that's interesting I hadn't thought of that difference before

[22:41:32.0000] <rniwa>
heycam: anyway, my concern is that there are no other web standards that use objects like this

[22:41:53.0000] <rniwa>
heycam: and i was wondering if there were a better way.

[22:42:00.0000] <rniwa>
heycam: anyway, my concern is that there are no other web standards that use objects like this

[22:42:01.0000] <rniwa>
heycam: and i was wondering if there were a better way.

[22:42:02.0000] <heycam>
yeah I am not sure if I have seen someone use "callback interface" yet

[22:42:11.0000] <heycam>
yeah I am not sure if I have seen someone use "callback interface" yet

[22:42:24.0000] <rniwa>
e.g. because they're callback functions that then get called much later when user-initiated undo/redo are involved

[22:42:25.0000] <heycam>
NodeFilter if rewritten with Web IDL would use it, iirc

[22:42:40.0000] <rniwa>
they have to be kept alive during normal GC cycles

[22:43:00.0000] <rniwa>
e.g. because they're callback functions that then get called much later when user-initiated undo/redo are involved

[22:43:01.0000] <heycam>
NodeFilter if rewritten with Web IDL would use it, iirc

[22:43:02.0000] <rniwa>
they have to be kept alive during normal GC cycles

[22:43:33.0000] <heycam>
still, if you had a dictionary with say some Node members, then they could have references kept to them by the DOM method, so I think it's the same thing here even though they're Functions

[22:43:56.0000] <heycam>
actually I'm not sure if any APIs *do* keep references to Node dictionary members like that

[22:44:00.0000] <heycam>
still, if you had a dictionary with say some Node members, then they could have references kept to them by the DOM method, so I think it's the same thing here even though they're Functions

[22:44:01.0000] <heycam>
actually I'm not sure if any APIs *do* keep references to Node dictionary members like that

[22:46:28.0000] <heycam>
rniwa, anyway I think the strong reference to the Functions that get passed in here would just be part of the semantics of whatever function accepts the DOMTransaction objects

[22:46:41.0000] <heycam>
rniwa, so probably the bindings code itself doesn't need to worry about it

[22:47:00.0000] <heycam>
rniwa, anyway I think the strong reference to the Functions that get passed in here would just be part of the semantics of whatever function accepts the DOMTransaction objects

[22:47:01.0000] <heycam>
rniwa, so probably the bindings code itself doesn't need to worry about it

[22:48:59.0000] <rniwa>
heycam: hm... possible.

[22:49:00.0000] <rniwa>
heycam: hm... possible.

[22:49:01.0000] <rniwa>
heycam: at least in webkit, we don't support Function type yet

[22:49:02.0000] <heycam>
s/strong reference/keeping of the strong reference/

[22:49:03.0000] <heycam>
ok

[22:49:13.0000] <rniwa>
heycam: at least in webkit, we don't support Function type yet

[22:49:15.0000] <heycam>
s/strong reference/keeping of the strong reference/

[22:49:16.0000] <heycam>
ok

[22:49:25.0000] <rniwa>
heycam: so that'll be an interesting journey :(

[22:49:36.0000] <heycam>
s/:(/:)/   :)

[22:50:00.0000] <rniwa>
heycam: so that'll be an interesting journey :(

[22:50:01.0000] <heycam>
s/:(/:)/   :)

[22:56:00.0000] <rniwa>
heycam: thanks for the clarification

[22:56:01.0000] <rniwa>
/me goes back on hacking

[22:56:02.0000] <heycam>
rniwa, no problem

[22:56:09.0000] <rniwa>
heycam: thanks for the clarification

[22:56:13.0000] <rniwa>
/me goes back on hacking

[22:56:16.0000] <heycam>
rniwa, no problem

[23:02:24.0000] <rniwa>
heycam: I guess I'll have to add Callback keyword?

[23:02:34.0000] <ruby_on_tails>
can anyone tell me why the canvas renders and then vanishes here http://thecodeplayer.com/walkthrough/ps3 (hit view code). but if i take the first 2 lines of the draw() out of it, it works fine

[23:03:00.0000] <rniwa>
heycam: I guess I'll have to add Callback keyword?

[23:03:01.0000] <ruby_on_tails>
can anyone tell me why the canvas renders and then vanishes here http://thecodeplayer.com/walkthrough/ps3 (hit view code). but if i take the first 2 lines of the draw() out of it, it works fine

[23:03:01.0000] <heycam>
rniwa, yes I think you should write it as "callback interface DOMTransaction { … }"

[23:03:02.0000] <heycam>
rniwa, yes I think you should write it as "callback interface DOMTransaction { … }"

[23:03:03.0000] <heycam>
rniwa, without the [NoInterfaceObject], since callback interfaces imply that

[23:03:04.0000] <rniwa>
heycam: right.

[23:03:10.0000] <heycam>
rniwa, without the [NoInterfaceObject], since callback interfaces imply that

[23:03:17.0000] <rniwa>
heycam: right.

[23:03:47.0000] <rniwa>
heycam: I think it was me reading some very old version of WebIDL spec

[23:04:00.0000] <rniwa>
heycam: I think it was me reading some very old version of WebIDL spec

[23:04:01.0000] <heycam>
rniwa, yeah the callback stuff changed in the last couple of months

[23:04:14.0000] <heycam>
rniwa, yeah the callback stuff changed in the last couple of months

[23:51:00.0000] <espadrine>
]

[23:51:15.0000] <espadrine>
]

[00:48:00.0000] <Hixie>
does overflow affect descendants that are position:fixed?

[00:48:01.0000] <Hixie>
per spec?

[00:48:08.0000] <Hixie>
does overflow affect descendants that are position:fixed?

[00:48:19.0000] <Hixie>
per spec?

[00:59:00.0000] <zcorpan>
is a position:fixed element a 'block container box'?

[00:59:01.0000] <Hixie>
probably

[00:59:06.0000] <zcorpan>
is a position:fixed element a 'block container box'?

[00:59:18.0000] <Hixie>
probably

[00:59:54.0000] <zcorpan>
then afaict the spec says "yes" (can't find anything that calls it out explicitly), but all my browsers disagree

[01:00:00.0000] <zcorpan>
then afaict the spec says "yes" (can't find anything that calls it out explicitly), but all my browsers disagree

[01:00:01.0000] <Hixie>
chrome 19 clips 'em

[01:00:13.0000] <Hixie>
chrome 19 clips 'em

[01:00:28.0000] <Hixie>
and it regresses a thing i'm doing :-)

[01:00:41.0000] <Hixie>
TabAtkins_: ^ maybe css should change if all the browsers agree on this

[01:01:00.0000] <Hixie>
and it regresses a thing i'm doing :-)

[01:01:01.0000] <Hixie>
TabAtkins_: ^ maybe css should change if all the browsers agree on this

[01:13:32.0000] <annevk>
oh, interface can be used as argument name again too now

[01:14:00.0000] <annevk>
oh, interface can be used as argument name again too now

[01:17:00.0000] <annevk>
heycam|away: event handler stuff looks okay now I guess

[01:17:07.0000] <annevk>
heycam|away: event handler stuff looks okay now I guess

[01:35:43.0000] <annevk>
heycam|away: I thought callback interface meant the interface is exposed?

[01:35:54.0000] <annevk>
heycam|away: oh wait, only if there's constants I guess

[01:36:00.0000] <annevk>
heycam|away: I thought callback interface meant the interface is exposed?

[01:36:01.0000] <annevk>
heycam|away: oh wait, only if there's constants I guess

[02:51:39.0000] <niloy>
If I put an event handler on 'scroll' event, how can I determine if the scroll was 'horizontal' or 'vertical'?

[02:52:00.0000] <niloy>
If I put an event handler on 'scroll' event, how can I determine if the scroll was 'horizontal' or 'vertical'?

[03:07:52.0000] <annevk>
is there a bug on upgrading HTML to the new callback syntax?

[03:08:00.0000] <annevk>
is there a bug on upgrading HTML to the new callback syntax?

[03:58:00.0000] <annevk>
http://dvcs.w3.org/hg/encoding/raw-file/tip/Overview.html#utf-16

[03:58:19.0000] <annevk>
http://dvcs.w3.org/hg/encoding/raw-file/tip/Overview.html#utf-16

[03:58:43.0000] <annevk>
guess I could have done some more arithmetic shifting instead of * 0x400 ...

[03:59:00.0000] <annevk>
guess I could have done some more arithmetic shifting instead of * 0x400 ...

[05:28:52.0000] <Philip`>
ruby_on_tails: I don't see any problem in that demo

[05:29:00.0000] <Philip`>
ruby_on_tails: I don't see any problem in that demo

[05:29:23.0000] <ruby_on_tails>
Philip`: did you hit the play button ?

[05:30:00.0000] <ruby_on_tails>
Philip`: did you hit the play button ?

[05:30:48.0000] <annevk>
how would you say bitwise or in prose?

[05:31:00.0000] <annevk>
how would you say bitwise or in prose?

[05:31:37.0000] <Philip`>
ruby_on_tails: No, but if I do then I don't any problem with the moving orange circle at the end of it

[05:31:53.0000] <annevk>
is 'Let <var title>byte2</var> be <var>code point</var> bitwise or 0x00FF' understandable?

[05:32:00.0000] <Philip`>
ruby_on_tails: No, but if I do then I don't any problem with the moving orange circle at the end of it

[05:32:01.0000] <annevk>
is 'Let <var title>byte2</var> be <var>code point</var> bitwise or 0x00FF' understandable?

[05:32:02.0000] <ruby_on_tails>
Philip`: doesnt the typing become very slow after setinterval is defined ?

[05:32:03.0000] <ruby_on_tails>
and the output starts to flicker

[05:32:04.0000] <ruby_on_tails>
Philip`: doesnt the typing become very slow after setinterval is defined ?

[05:32:10.0000] <ruby_on_tails>
and the output starts to flicker

[05:34:46.0000] <Philip`>
ruby_on_tails: I'd guess that problem is because setInterval won't call draw until 33ms after reloading the code, and the code-replaying thing is probably updating and reloading the code after not much more than 33ms, so it doesn't get much of a chance to render before resetting

[05:35:00.0000] <Philip`>
ruby_on_tails: I'd guess that problem is because setInterval won't call draw until 33ms after reloading the code, and the code-replaying thing is probably updating and reloading the code after not much more than 33ms, so it doesn't get much of a chance to render before resetting

[05:35:38.0000] <ruby_on_tails>
Philip`: the actual problem that i am facing is not with the render but with the stacking of the set intervals, the iframe is given a new js code which has a set interval every 33ms, all those setintervals stack up and slow down the entire thing

[05:35:38.0000] <Philip`>
annevk: Maybe write it as "OR" to distinguish it more clearly from normal prose?

[05:36:00.0000] <ruby_on_tails>
Philip`: the actual problem that i am facing is not with the render but with the stacking of the set intervals, the iframe is given a new js code which has a set interval every 33ms, all those setintervals stack up and slow down the entire thing

[05:36:01.0000] <Philip`>
annevk: Maybe write it as "OR" to distinguish it more clearly from normal prose?

[05:36:55.0000] <Philip`>
ruby_on_tails: Oh, I suppose that sounds possible, since you're never clearing the intervals

[05:37:00.0000] <Philip`>
ruby_on_tails: Oh, I suppose that sounds possible, since you're never clearing the intervals

[05:37:01.0000] <ruby_on_tails>
Philip`: the code that you see is supposed to come from users of the site who may not use clearintervals all the time

[05:37:16.0000] <ruby_on_tails>
Philip`: the code that you see is supposed to come from users of the site who may not use clearintervals all the time

[05:37:41.0000] <ruby_on_tails>
so currently i am thinking of going from 1-99999 and clear everything between 2 iframe injections ? thats the only solution i have got

[05:38:00.0000] <ruby_on_tails>
so currently i am thinking of going from 1-99999 and clear everything between 2 iframe injections ? thats the only solution i have got

[05:40:00.0000] <Philip`>
Could you run the code inside an iframe, and make it restart with a fresh document after each code change?

[05:40:01.0000] <Philip`>
like what http://software.hixie.ch/utilities/js/live-dom-viewer/ does

[05:40:14.0000] <Philip`>
Could you run the code inside an iframe, and make it restart with a fresh document after each code change?

[05:40:22.0000] <Philip`>
like what http://software.hixie.ch/utilities/js/live-dom-viewer/ does

[05:40:52.0000] <Philip`>
(iframe.contentWindow.document.open(); iframe.contentWindow.document.write(...); iframe.contentWindow.document.close(); etc)

[05:41:00.0000] <Philip`>
(iframe.contentWindow.document.open(); iframe.contentWindow.document.write(...); iframe.contentWindow.document.close(); etc)

[05:43:00.0000] <annevk>
Philip`: thanks

[05:43:19.0000] <annevk>
Philip`: thanks

[05:43:35.0000] <Philip`>
Alternatively, add a setInterval wrapper (var oldSI = window.setInterval; var intervals = []; window.setInterval = function(...) { var i = oldSI(...); intervals.push(i); return i; } etc) so you can tell what to explicitly clear

[05:44:00.0000] <Philip`>
Alternatively, add a setInterval wrapper (var oldSI = window.setInterval; var intervals = []; window.setInterval = function(...) { var i = oldSI(...); intervals.push(i); return i; } etc) so you can tell what to explicitly clear

[05:44:36.0000] <annevk>
http://dvcs.w3.org/hg/encoding/raw-file/tip/Overview.html#utf-16-encoder

[05:45:00.0000] <annevk>
http://dvcs.w3.org/hg/encoding/raw-file/tip/Overview.html#utf-16-encoder

[05:45:01.0000] <ruby_on_tails>
Philip`: its curretly refreshing the iframe on the right

[05:45:15.0000] <ruby_on_tails>
Philip`: its curretly refreshing the iframe on the right

[05:46:00.0000] <annevk>
I guess I should also define "decode utf-8" for the utf-8 only formats

[05:46:14.0000] <annevk>
I guess I should also define "decode utf-8" for the utf-8 only formats

[05:46:44.0000] <annevk>
(besides decoding as utf-8 it also skips a BOM if there is one)

[05:47:00.0000] <annevk>
(besides decoding as utf-8 it also skips a BOM if there is one)

[05:47:01.0000] <ruby_on_tails>
Philip`: the setinterval keeps running even after the iframe refreshes

[05:47:22.0000] <ruby_on_tails>
Philip`: the setinterval keeps running even after the iframe refreshes

[05:47:41.0000] <ruby_on_tails>
Philip`: what is that setinterval wrapper ? could explain a bit ?

[05:47:52.0000] <annevk>
"utf-8 decode" works better

[05:48:00.0000] <ruby_on_tails>
Philip`: what is that setinterval wrapper ? could explain a bit ?

[05:48:01.0000] <annevk>
"utf-8 decode" works better

[05:52:00.0000] <annevk>
is it code point-based formats

[05:52:01.0000] <annevk>
or code-point-based

[05:52:02.0000] <annevk>
or code point based

[05:52:13.0000] <annevk>
is it code point-based formats

[05:52:16.0000] <annevk>
or code-point-based

[05:52:21.0000] <annevk>
or code point based

[05:52:50.0000] <Philip`>
ruby_on_tails: The timers seem to stop in e.g. http://software.hixie.ch/utilities/js/live-dom-viewer/?%3C!DOCTYPE%20html%3E%0A%3Cscript%3EsetInterval%28function%28%29{alert%281%29}%2C%204000%29%3C%2Fscript%3E whenever I change the code (e.g. change "1" to "2", and it no longer alerts 1)

[05:53:00.0000] <Philip`>
ruby_on_tails: The timers seem to stop in e.g. http://software.hixie.ch/utilities/js/live-dom-viewer/?%3C!DOCTYPE%20html%3E%0A%3Cscript%3EsetInterval%28function%28%29{alert%281%29}%2C%204000%29%3C%2Fscript%3E whenever I change the code (e.g. change "1" to "2", and it no longer alerts 1)

[05:53:01.0000] <annevk>
nm for now

[05:53:02.0000] <Philip`>
annevk: code[hypen]point[en dash]based, I think

[05:53:04.0000] <annevk>
nm for now

[05:53:10.0000] <Philip`>
annevk: code[hypen]point[en dash]based, I think

[05:54:00.0000] <ruby_on_tails>
Philip`: am not sure if i get it

[05:54:18.0000] <ruby_on_tails>
Philip`: am not sure if i get it

[05:54:36.0000] <Philip`>
s/hypen/hyphen/

[05:55:00.0000] <Philip`>
s/hypen/hyphen/

[05:55:01.0000] <Philip`>
(Also I don't know if that's a real convention or if I'm just imagining it)

[05:55:11.0000] <Philip`>
(Also I don't know if that's a real convention or if I'm just imagining it)

[05:56:00.0000] <annevk>
http://dvcs.w3.org/hg/encoding/raw-file/tip/Overview.html#utf-8-decode

[05:56:13.0000] <annevk>
http://dvcs.w3.org/hg/encoding/raw-file/tip/Overview.html#utf-8-decode

[06:01:00.0000] <Philip`>
annevk: What if the stream is shorter than three bytes?

[06:01:02.0000] <Philip`>
annevk: What if the stream is shorter than three bytes?

[06:01:49.0000] <annevk>
then there's no match?

[06:02:00.0000] <annevk>
then there's no match?

[06:02:01.0000] <annevk>
you think that should be more explicit?

[06:02:20.0000] <annevk>
you think that should be more explicit?

[06:02:38.0000] <annevk>
is it also unclear in http://dvcs.w3.org/hg/encoding/raw-file/tip/Overview.html#decode ?

[06:02:47.0000] <annevk>
because I've been wondering about whether or not it was

[06:02:48.0000] <Philip`>
"the first three bytes" seems like an undefined concept in that case

[06:03:00.0000] <annevk>
is it also unclear in http://dvcs.w3.org/hg/encoding/raw-file/tip/Overview.html#decode ?

[06:03:01.0000] <annevk>
because I've been wondering about whether or not it was

[06:03:02.0000] <Philip`>
"the first three bytes" seems like an undefined concept in that case

[06:03:03.0000] <Philip`>
The expected behaviour is obvious, so I guess it depends on how pedantically correct you want to be

[06:03:05.0000] <Philip`>
The expected behaviour is obvious, so I guess it depends on how pedantically correct you want to be

[06:03:56.0000] <ruby_on_tails>
Philip`: sorry you are watching the wrong link, this is the one which gets very slow http://thecodeplayer.com/walkthrough/ps6

[06:04:00.0000] <ruby_on_tails>
Philip`: sorry you are watching the wrong link, this is the one which gets very slow http://thecodeplayer.com/walkthrough/ps6

[06:05:00.0000] <Philip`>
In #decode: "the offset given the in the cell in the" - too many "the"s

[06:05:07.0000] <Philip`>
In #decode: "the offset given the in the cell in the" - too many "the"s

[06:06:24.0000] <Philip`>
"if the first bytes of stream match all the bytes given" sounds alright to me, since the meaning is clear and it's not being invalidly specific about how many bytes to examine from stream

[06:07:00.0000] <Philip`>
"if the first bytes of stream match all the bytes given" sounds alright to me, since the meaning is clear and it's not being invalidly specific about how many bytes to examine from stream

[06:08:00.0000] <annevk>
made some clarification, thanks

[06:08:16.0000] <annevk>
made some clarification, thanks

[06:10:00.0000] <Philip`>
"Let byte2 be code point bitwise OR 0x00FF." - shouldn't that be AND?

[06:10:02.0000] <Philip`>
"Let byte2 be code point bitwise OR 0x00FF." - shouldn't that be AND?

[06:10:53.0000] <MikeSmith>
zcorpan, annevk - fyi http://www.w3.org/TR/2012/WD-html5-diff-20120315/ is alive

[06:11:00.0000] <MikeSmith>
zcorpan, annevk - fyi http://www.w3.org/TR/2012/WD-html5-diff-20120315/ is alive

[06:11:01.0000] <MikeSmith>
symlink won't be updated til Thursday

[06:11:02.0000] <MikeSmith>
http://www.w3.org/TR/html5-diff/ I mean

[06:11:04.0000] <MikeSmith>
symlink won't be updated til Thursday

[06:11:14.0000] <MikeSmith>
http://www.w3.org/TR/html5-diff/ I mean

[06:12:58.0000] <annevk>
Philip`: yes

[06:13:00.0000] <annevk>
Philip`: yes

[06:18:00.0000] <annevk>
also fixed btw

[06:18:19.0000] <annevk>
also fixed btw

[06:19:53.0000] <annevk>
MikeSmith: cool

[06:20:00.0000] <annevk>
MikeSmith: cool

[06:20:01.0000] <annevk>
MikeSmith: any chance we can finally claim http://www.w3.org/TR/html/ this update?

[06:20:20.0000] <annevk>
MikeSmith: any chance we can finally claim http://www.w3.org/TR/html/ this update?

[06:20:31.0000] <MikeSmith>
ah

[06:20:45.0000] <MikeSmith>
I'll talk with plh about it

[06:20:52.0000] <MikeSmith>
certainly would make sense

[06:21:00.0000] <MikeSmith>
ah

[06:21:01.0000] <MikeSmith>
I'll talk with plh about it

[06:21:02.0000] <MikeSmith>
certainly would make sense

[06:21:03.0000] <annevk>
thanks

[06:21:05.0000] <annevk>
thanks

[06:23:58.0000] <annevk>
HTML callback bug is https://www.w3.org/Bugs/Public/show_bug.cgi?id=15358 btw

[06:24:00.0000] <annevk>
filed it myself

[06:25:00.0000] <annevk>
HTML callback bug is https://www.w3.org/Bugs/Public/show_bug.cgi?id=15358 btw

[06:25:01.0000] <annevk>
filed it myself

[06:46:25.0000] <annevk>
I cleaned up some HTML bugs

[06:47:00.0000] <annevk>
I cleaned up some HTML bugs

[06:49:00.0000] <annevk>
why does http://dvcs.w3.org/hg/webperf/raw-file/tip/specs/RequestAnimationFrame/Overview.html not use partial Window?

[06:49:07.0000] <annevk>
why does http://dvcs.w3.org/hg/webperf/raw-file/tip/specs/RequestAnimationFrame/Overview.html not use partial Window?

[06:54:58.0000] <zcorpan>
MikeSmith: nice

[06:55:00.0000] <zcorpan>
MikeSmith: nice

[06:57:00.0000] <zcorpan>
MikeSmith: what about changes to html that happen between that and whatever ends up on w3.org/TR/html5 (like Path, and if stuff get reverted)

[06:57:10.0000] <zcorpan>
MikeSmith: what about changes to html that happen between that and whatever ends up on w3.org/TR/html5 (like Path, and if stuff get reverted)

[06:58:00.0000] <MikeSmith>
zcorpan: that?

[06:58:15.0000] <MikeSmith>
zcorpan: that?

[06:58:28.0000] <MikeSmith>
you mean http://www.w3.org/TR/html/ ?

[06:59:00.0000] <MikeSmith>
you mean http://www.w3.org/TR/html/ ?

[07:00:10.0000] <zcorpan>
that being http://www.w3.org/TR/2012/WD-html5-diff-20120315/

[07:00:53.0000] <zcorpan>
MikeSmith: e.g. if http+aes gets reverted, it should be moved in the changelog in html5-diff

[07:01:00.0000] <zcorpan>
that being http://www.w3.org/TR/2012/WD-html5-diff-20120315/

[07:01:01.0000] <zcorpan>
MikeSmith: e.g. if http+aes gets reverted, it should be moved in the changelog in html5-diff

[07:01:02.0000] <MikeSmith>
hmm

[07:01:03.0000] <MikeSmith>
yeah

[07:01:10.0000] <MikeSmith>
hmm

[07:01:11.0000] <MikeSmith>
yeah

[07:01:54.0000] <MikeSmith>
I guess will quietly push any updates to the TR version if needed

[07:02:00.0000] <MikeSmith>
I guess will quietly push any updates to the TR version if needed

[07:02:48.0000] <zcorpan>
currently the Path addition is missing

[07:03:00.0000] <zcorpan>
currently the Path addition is missing

[07:03:01.0000] <MikeSmith>
if you make the change I will push it to TR

[07:03:10.0000] <MikeSmith>
if you make the change I will push it to TR

[07:10:31.0000] <MikeSmith>
zcorpan: hmm I see that pubrules apparently requires a link to a mailing list

[07:11:00.0000] <MikeSmith>
zcorpan: hmm I see that pubrules apparently requires a link to a mailing list

[07:11:00.0000] <MikeSmith>
it doesn't matter what it says

[07:11:41.0000] <zcorpan>
http://dev.w3.org/cvsweb/html5/html4-differences/Overview.src.html.diff?r1=1.181;r2=1.182 (need to rebuild Overview.html or monkeypatch)

[07:12:00.0000] <zcorpan>
http://dev.w3.org/cvsweb/html5/html4-differences/Overview.src.html.diff?r1=1.181;r2=1.182 (need to rebuild Overview.html or monkeypatch)

[07:12:01.0000] <zcorpan>
MikeSmith: ok, i'll make it say to *not* use the mailing list :-)

[07:12:01.0000] <zcorpan>
MikeSmith: ok, i'll make it say to *not* use the mailing list :-)

[07:12:02.0000] <MikeSmith>
e.g., it could say, "There's a _public-html-comments mailing list_ but the appropriate forum for comments is s W3C Bugzilla

[07:12:03.0000] <annevk>
I can do make at some point

[07:12:04.0000] <annevk>
just tell me when you're done editing and I'll generate a new WD

[07:12:09.0000] <MikeSmith>
e.g., it could say, "There's a _public-html-comments mailing list_ but the appropriate forum for comments is s W3C Bugzilla

[07:12:11.0000] <annevk>
I can do make at some point

[07:12:21.0000] <annevk>
just tell me when you're done editing and I'll generate a new WD

[07:12:31.0000] <annevk>
takes less than a minute

[07:13:00.0000] <annevk>
takes less than a minute

[07:13:24.0000] <MikeSmith>
zcorpan: it wants both a mailto: link for the list address as well as a link to the archives

[07:13:56.0000] <zcorpan>
 (<a href="mailto:public-html-comments⊙wo">public-html-comments⊙wo</a>,

[07:13:56.0000] <zcorpan>
    a mailing list with a

[07:13:56.0000] <zcorpan>
    <a href="http://lists.w3.org/Archives/Public/public-html-comments/" title="Archive for HTML comments mailing-list">public

[07:13:56.0000] <zcorpan>
    archive</a>, is no longer used for tracking comments.)

[07:14:00.0000] <MikeSmith>
zcorpan: it wants both a mailto: link for the list address as well as a link to the archives

[07:14:01.0000] <zcorpan>
 (<a href="mailto:public-html-comments⊙wo">public-html-comments⊙wo</a>,

[07:14:02.0000] <zcorpan>
    a mailing list with a

[07:14:03.0000] <zcorpan>
    <a href="http://lists.w3.org/Archives/Public/public-html-comments/" title="Archive for HTML comments mailing-list">public

[07:14:04.0000] <zcorpan>
    archive</a>, is no longer used for tracking comments.)

[07:14:05.0000] <zcorpan>
sounds good?

[07:14:06.0000] <MikeSmith>
yah

[07:14:07.0000] <zcorpan>
sounds good?

[07:14:10.0000] <MikeSmith>
yah

[07:14:55.0000] <zcorpan>
http://dev.w3.org/cvsweb/html5/html4-differences/Overview.src.html.diff?r1=1.182;r2=1.183

[07:15:00.0000] <zcorpan>
http://dev.w3.org/cvsweb/html5/html4-differences/Overview.src.html.diff?r1=1.182;r2=1.183

[07:27:49.0000] <zcorpan>
http://software.hixie.ch/utilities/js/live-dom-viewer/saved/1382 i don't understand what opera and gecko are doing here

[07:28:00.0000] <zcorpan>
http://software.hixie.ch/utilities/js/live-dom-viewer/saved/1382 i don't understand what opera and gecko are doing here

[07:28:01.0000] <zcorpan>
chrome makes more sense

[07:28:17.0000] <zcorpan>
chrome makes more sense

[07:46:00.0000] <wirepair>
what... exactly is the point of the http+aes scheme? http://dev.w3.org/html5/spec-author-view/iana.html#http-aes-scheme

[07:46:07.0000] <wirepair>
what... exactly is the point of the http+aes scheme? http://dev.w3.org/html5/spec-author-view/iana.html#http-aes-scheme

[07:47:00.0000] <wirepair>
i've read it a few times and i just can't seem to wrap my head around *why* you'd want to put encryption keys in a url.

[07:47:01.0000] <MikeSmith>
annevk: please go ahead and re-make the diffs doc

[07:47:16.0000] <wirepair>
i've read it a few times and i just can't seem to wrap my head around *why* you'd want to put encryption keys in a url.

[07:47:17.0000] <MikeSmith>
annevk: please go ahead and re-make the diffs doc

[07:47:41.0000] <MikeSmith>
and check in the updated Overview.html

[07:47:55.0000] <MikeSmith>
if we have more changes later we can just do it again as needed

[07:48:00.0000] <MikeSmith>
and check in the updated Overview.html

[07:48:01.0000] <MikeSmith>
if we have more changes later we can just do it again as needed

[07:49:00.0000] <annevk>
done

[07:49:03.0000] <annevk>
done

[07:50:32.0000] <zcorpan>
oh, so opera and gecko just apply the "can't break around images" for the purpose of calculating the minimum width, but after that they are fine with breaking around images

[07:51:00.0000] <zcorpan>
oh, so opera and gecko just apply the "can't break around images" for the purpose of calculating the minimum width, but after that they are fine with breaking around images

[07:52:38.0000] <zcorpan>
and ie in compat view matches opera/gecko

[07:52:52.0000] <zcorpan>
ie non-compat quirks doesn't have this quirk

[07:53:00.0000] <zcorpan>
and ie in compat view matches opera/gecko

[07:53:01.0000] <zcorpan>
ie non-compat quirks doesn't have this quirk

[07:57:00.0000] <MikeSmith>
annevk: thanks

[07:57:10.0000] <MikeSmith>
annevk: thanks

[08:04:40.0000] <zcorpan>
ah, excellent, the Automatic table layout algo in css21 is non-normative

[08:05:00.0000] <zcorpan>
ah, excellent, the Automatic table layout algo in css21 is non-normative

[08:05:01.0000] <zcorpan>
i recall someone from mozilla having written a spec for table layout, but can't find it right now

[08:05:21.0000] <zcorpan>
i recall someone from mozilla having written a spec for table layout, but can't find it right now

[08:05:24.0000] <jgraham>
zcorpan: Go speak to dbaron

[08:05:40.0000] <jgraham>
He will explain table layout to you from memory

[08:06:00.0000] <jgraham>
zcorpan: Go speak to dbaron

[08:06:01.0000] <jgraham>
He will explain table layout to you from memory

[08:06:59.0000] <zcorpan>
/me finds http://dbaron.org/css/intrinsic/

[08:08:48.0000] <zcorpan>
http://dbaron.org/css/intrinsic/#inline-intrinsic-min

[08:08:55.0000] <zcorpan>
excellent, what i want is a TODO :-)

[08:09:00.0000] <zcorpan>
http://dbaron.org/css/intrinsic/#inline-intrinsic-min

[08:09:01.0000] <zcorpan>
excellent, what i want is a TODO :-)

[08:10:58.0000] <smaug____>
so, the spec should refer to dbaron's brains?

[08:11:00.0000] <smaug____>
so, the spec should refer to dbaron's brains?

[08:11:52.0000] <jgraham>
Well ideally dbaron should serialize the content of his brain to some more durable format

[08:12:00.0000] <jgraham>
Well ideally dbaron should serialize the content of his brain to some more durable format

[08:12:48.0000] <smaug____>
but hey, it would be just a living standard

[08:13:00.0000] <smaug____>
but hey, it would be just a living standard

[08:14:43.0000] <jgraham>
The problem with living standards is that it's hard to clone their host body and init the clone's brain with the original data. We need the serialization for that.

[08:15:00.0000] <jgraham>
The problem with living standards is that it's hard to clone their host body and init the clone's brain with the original data. We need the serialization for that.

[08:29:31.0000] <annevk>
haha

[08:29:37.0000] <annevk>
taking living standard to a whole new level

[08:30:00.0000] <annevk>
haha

[08:30:01.0000] <annevk>
taking living standard to a whole new level

[10:12:41.0000] <Hixie>
Philip`, or anyone else: any opinions on ellipse apis before i spec this proposal? http://wiki.whatwg.org/wiki/Canvas#Ellipses

[10:13:00.0000] <Hixie>
Philip`, or anyone else: any opinions on ellipse apis before i spec this proposal? http://wiki.whatwg.org/wiki/Canvas#Ellipses

[10:13:00.0000] <Hixie>
i'm not 100% happy with making it take x and y radii arguments because that means you have to do a rotation to get a rotated ellipse

[10:13:01.0000] <Hixie>
i'm not 100% happy with making it take x and y radii arguments because that means you have to do a rotation to get a rotated ellipse

[10:14:38.0000] <AryehGregor>
You could have it take two foci instead of a center and radius.

[10:14:46.0000] <AryehGregor>
That's still just one extra argument over a circle.

[10:15:00.0000] <AryehGregor>
You could have it take two foci instead of a center and radius.

[10:15:01.0000] <AryehGregor>
That's still just one extra argument over a circle.

[10:15:02.0000] <Hixie>
so basically have ellipseArc and ellipseArcTo rather than arc and arcTo?

[10:15:22.0000] <Hixie>
so basically have ellipseArc and ellipseArcTo rather than arc and arcTo?

[10:15:28.0000] <Hixie>
rather than just overloading them i mean

[10:15:41.0000] <AryehGregor>
/me isn't familiar enough with canvas to say what API makes the most sense

[10:16:00.0000] <Hixie>
rather than just overloading them i mean

[10:16:01.0000] <AryehGregor>
/me isn't familiar enough with canvas to say what API makes the most sense

[10:16:02.0000] <AryehGregor>
Overloading on the number of arguments of a method that already takes five or six numeric arguments seems kind of confusing, though.

[10:16:10.0000] <AryehGregor>
Overloading on the number of arguments of a method that already takes five or six numeric arguments seems kind of confusing, though.

[10:18:55.0000] <Hixie>
(if i take foci don't i still need a semi-major axis distance?)

[10:19:00.0000] <Hixie>
(if i take foci don't i still need a semi-major axis distance?)

[10:20:00.0000] <AryehGregor>
Hmm.

[10:20:10.0000] <AryehGregor>
Hmm.

[10:20:45.0000] <AryehGregor>
Yeah, I think you need one more parameter in that case, you're right.  You can have two different ellipses with the same foci.

[10:21:00.0000] <AryehGregor>
Yeah, I think you need one more parameter in that case, you're right.  You can have two different ellipses with the same foci.

[10:21:01.0000] <Hixie>
only two?

[10:21:05.0000] <Hixie>
only two?

[10:21:23.0000] <Hixie>
surely i can have an infinite number

[10:21:34.0000] <AryehGregor>
Well, yes, of course.

[10:21:35.0000] <Hixie>
since two foci doesn't give you any data on the semi-minor axis

[10:21:50.0000] <AryehGregor>
I just meant that given two foci, there exist two distinct ellipses with those foci.

[10:22:00.0000] <Hixie>
surely i can have an infinite number

[10:22:01.0000] <AryehGregor>
Well, yes, of course.

[10:22:02.0000] <Hixie>
since two foci doesn't give you any data on the semi-minor axis

[10:22:03.0000] <AryehGregor>
I just meant that given two foci, there exist two distinct ellipses with those foci.

[10:22:04.0000] <AryehGregor>
There are actually more than two, but two is enough to make my suggestion bad.

[10:22:07.0000] <AryehGregor>
There are actually more than two, but two is enough to make my suggestion bad.

[10:24:00.0000] <Hixie>
i tried looking at the CG reference to see how they do it

[10:24:01.0000] <Hixie>
but of course that's the api that canvas was copied from

[10:24:14.0000] <Hixie>
i tried looking at the CG reference to see how they do it

[10:24:22.0000] <Hixie>
but of course that's the api that canvas was copied from

[10:24:24.0000] <Hixie>
so they don't

[10:24:32.0000] <Hixie>
same as us -_-

[10:25:00.0000] <Hixie>
so they don't

[10:25:01.0000] <Hixie>
same as us -_-

[10:26:38.0000] <Ms2ger>
"I'm at capacity (arguably over capacity) already."

[10:26:41.0000] <Ms2ger>
Arguably?

[10:27:00.0000] <Ms2ger>
"I'm at capacity (arguably over capacity) already."

[10:27:01.0000] <Ms2ger>
Arguably?

[10:32:26.0000] <MikeSmith>
Ms2ger: who said that?

[10:32:33.0000] <Ms2ger>
Hixie

[10:33:00.0000] <MikeSmith>
Ms2ger: who said that?

[10:33:01.0000] <Ms2ger>
Hixie

[10:57:00.0000] <Ms2ger>
/me wonders how to get dragonfly to open

[10:57:02.0000] <Ms2ger>
/me wonders how to get dragonfly to open

[11:06:40.0000] <jgraham>
Ms2ger: At what stage are you having a problem?

[11:07:00.0000] <jgraham>
Ms2ger: At what stage are you having a problem?

[11:07:01.0000] <Ms2ger>
Figured it out, the menu item was hidden three levels deep

[11:07:06.0000] <Ms2ger>
Figured it out, the menu item was hidden three levels deep

[11:07:36.0000] <jgraham>
That's the problem I have too

[11:07:37.0000] <Ms2ger>
AryehGregor, are you using the live dom viewer, and do you mind if I overwrite the test? :)

[11:07:56.0000] <AryehGregor>
Ms2ger, you can always overwrite the stuff I upload to Live DOM Viewer.

[11:08:00.0000] <jgraham>
That's the problem I have too

[11:08:01.0000] <Ms2ger>
AryehGregor, are you using the live dom viewer, and do you mind if I overwrite the test? :)

[11:08:02.0000] <AryehGregor>
Ms2ger, you can always overwrite the stuff I upload to Live DOM Viewer.

[11:08:03.0000] <AryehGregor>
Of course, I might overwrite what you upload too.  :)

[11:08:07.0000] <AryehGregor>
Of course, I might overwrite what you upload too.  :)

[11:08:52.0000] <Ms2ger>
If only I managed to :)

[11:09:00.0000] <Ms2ger>
If only I managed to :)

[11:10:20.0000] <Ms2ger>
/me curses IE's XSS protection

[11:10:50.0000] <Ms2ger>
They're wrong anyway, so *shrug*

[11:10:51.0000] <AryehGregor>
That's part of why upload/download is so much more useful.

[11:10:57.0000] <Ms2ger>
All to yourself again :)

[11:11:00.0000] <Ms2ger>
/me curses IE's XSS protection

[11:11:01.0000] <Ms2ger>
They're wrong anyway, so *shrug*

[11:11:02.0000] <AryehGregor>
That's part of why upload/download is so much more useful.

[11:11:03.0000] <Ms2ger>
All to yourself again :)

[11:11:04.0000] <Hixie>
looks like a lot of other apis do only x/y-aligned ellipses too

[11:11:08.0000] <Hixie>
looks like a lot of other apis do only x/y-aligned ellipses too

[11:12:00.0000] <Ms2ger>
Am I alone in finding Win8 hard to shut down?

[11:12:07.0000] <Ms2ger>
Am I alone in finding Win8 hard to shut down?

[11:12:24.0000] <AryehGregor>
/me just powers off the VM instead of sending a shutdown signal

[11:12:48.0000] <Philip`>
Shutting down is an obsolete concept

[11:13:00.0000] <AryehGregor>
/me just powers off the VM instead of sending a shutdown signal

[11:13:01.0000] <Philip`>
Shutting down is an obsolete concept

[11:18:37.0000] <jgraham>
Ms2ger: According to the interweb, everyone finds it hard to shut down

[11:19:00.0000] <jgraham>
Ms2ger: According to the interweb, everyone finds it hard to shut down

[11:19:00.0000] <Ms2ger>
Good

[11:19:01.0000] <Ms2ger>
Good

[11:19:02.0000] <jgraham>
Or at least enough people that there are supposedly youtube video tutorials on it

[11:19:03.0000] <Ms2ger>
/me is in favour of Microsoft shipping crap

[11:19:12.0000] <jgraham>
Or at least enough people that there are supposedly youtube video tutorials on it

[11:19:19.0000] <Ms2ger>
/me is in favour of Microsoft shipping crap

[11:52:49.0000] <AryehGregor>
Ms2ger, what's the rationale for this?  It causes any quotes in test names or results to be backslash-escaped.  http://dvcs.w3.org/hg/resources/rev/b2e673a7d8c7

[11:53:00.0000] <AryehGregor>
Ms2ger, what's the rationale for this?  It causes any quotes in test names or results to be backslash-escaped.  http://dvcs.w3.org/hg/resources/rev/b2e673a7d8c7

[11:53:01.0000] <Ms2ger>
XML :/

[11:53:02.0000] <Ms2ger>
And the fact that it uses innerHTML

[11:53:08.0000] <Ms2ger>
XML :/

[11:53:19.0000] <Ms2ger>
And the fact that it uses innerHTML

[11:53:23.0000] <AryehGregor>
More specifically?

[11:53:51.0000] <Ms2ger>
/me tries to remember the test

[11:54:00.0000] <AryehGregor>
More specifically?

[11:54:01.0000] <Ms2ger>
/me tries to remember the test

[11:54:02.0000] <AryehGregor>
If the problem is bad characters sneaking into test names, escape_html could entity-escape them.

[11:54:06.0000] <AryehGregor>
If the problem is bad characters sneaking into test names, escape_html could entity-escape them.

[11:54:40.0000] <AryehGregor>
format_value (and the part you copied into format_string) escapes in JS fashion, with backslashes, and in particular escapes innocuous stuff like quotes.

[11:54:56.0000] <AryehGregor>
I now have stuff like: Fail	getComputedStyle(div).transformOrigin with \"transform: rotate(43deg); transform-origin: left 10px bottom -10px\", set via setAttribute()	assert_approx_equals: Value of X part (actual: \"40px 15px\", expected: \"50px 25px\") expected 50 +/- 0.05 but got 40

[11:55:00.0000] <AryehGregor>
format_value (and the part you copied into format_string) escapes in JS fashion, with backslashes, and in particular escapes innocuous stuff like quotes.

[11:55:01.0000] <AryehGregor>
I now have stuff like: Fail getComputedStyle(div).transformOrigin with \"transform: rotate(43deg); transform-origin: left 10px bottom -10px\", set via setAttribute() assert_approx_equals: Value of X part (actual: \"40px 15px\", expected: \"50px 25px\") expected 50 +/- 0.05 but got 40

[11:55:02.0000] <Ms2ger>
Yeah :/

[11:55:03.0000] <Ms2ger>
http://w3c-test.org/webapps/DOMCore/tests/submissions/Ms2ger/Document-createProcessingInstruction.xhtml was the one, I think

[11:55:03.0000] <Ms2ger>
Yeah :/

[11:55:10.0000] <Ms2ger>
http://w3c-test.org/webapps/DOMCore/tests/submissions/Ms2ger/Document-createProcessingInstruction.xhtml was the one, I think

[11:55:52.0000] <AryehGregor>
That test should call format_value() itself on valid[i][0], valid[i][1], etc.

[11:56:00.0000] <AryehGregor>
That test should call format_value() itself on valid[i][0], valid[i][1], etc.

[11:56:01.0000] <AryehGregor>
That will add quotes and nice things like that too.

[11:56:02.0000] <AryehGregor>
You don't want to call it on the whole test name.

[11:56:02.0000] <AryehGregor>
That will add quotes and nice things like that too.

[11:56:03.0000] <Ms2ger>
OK

[11:56:14.0000] <AryehGregor>
You don't want to call it on the whole test name.

[11:56:23.0000] <Ms2ger>
OK

[11:56:29.0000] <AryehGregor>
Can I revert your testharness changes?

[11:56:33.0000] <Ms2ger>
Sure thing

[11:56:36.0000] <AryehGregor>
Okay, thanks.

[11:56:37.0000] <Ms2ger>
Well

[11:56:52.0000] <Ms2ger>
Hmm, I guess

[11:57:00.0000] <AryehGregor>
Can I revert your testharness changes?

[11:57:01.0000] <Ms2ger>
Sure thing

[11:57:02.0000] <AryehGregor>
Okay, thanks.

[11:57:03.0000] <Ms2ger>
Well

[11:57:04.0000] <Ms2ger>
Hmm, I guess

[11:57:05.0000] <Ms2ger>
Yes, go ahead

[11:57:06.0000] <AryehGregor>
Okay.

[11:57:06.0000] <Ms2ger>
Yes, go ahead

[11:57:15.0000] <AryehGregor>
Okay.

[11:59:00.0000] <AryehGregor>
Is there a convenient hg equivalent to git revert -n?

[11:59:20.0000] <AryehGregor>
Is there a convenient hg equivalent to git revert -n?

[12:04:46.0000] <Ms2ger>
hg backout?

[12:05:00.0000] <Ms2ger>
hg backout?

[12:05:01.0000] <AryehGregor>
That creates a commit.

[12:05:12.0000] <AryehGregor>
That creates a commit.

[12:05:25.0000] <Ms2ger>
Well, yes

[12:05:38.0000] <AryehGregor>
git revert -n doesn't create a commit.

[12:05:45.0000] <Ms2ger>
What does it do then?

[12:05:57.0000] <AryehGregor>
It just applies the diff.

[12:06:00.0000] <Ms2ger>
Well, yes

[12:06:01.0000] <AryehGregor>
git revert -n doesn't create a commit.

[12:06:02.0000] <Ms2ger>
What does it do then?

[12:06:03.0000] <AryehGregor>
It just applies the diff.

[12:06:04.0000] <AryehGregor>
I wound up doing hg diff -r 6 -r 4 | patch.

[12:06:09.0000] <AryehGregor>
I wound up doing hg diff -r 6 -r 4 | patch.

[12:06:23.0000] <AryehGregor>
Which conflicted because some context didn't match, but close enough.

[12:07:00.0000] <AryehGregor>
Which conflicted because some context didn't match, but close enough.

[12:11:30.0000] <rniwa>
AryehGregor: hi AryehGregor

[12:11:33.0000] <AryehGregor>
rniwa, hi!

[12:11:38.0000] <rniwa>
AryehGregor: did you see my email about nested transactions in undo manger?

[12:11:43.0000] <AryehGregor>
rniwa, yes.

[12:11:59.0000] <AryehGregor>
execCommand() should never be called recursively anyway now, because that will fire extra events.

[12:12:00.0000] <rniwa>
AryehGregor: hi AryehGregor

[12:12:01.0000] <AryehGregor>
rniwa, hi!

[12:12:02.0000] <rniwa>
AryehGregor: did you see my email about nested transactions in undo manger?

[12:12:03.0000] <AryehGregor>
rniwa, yes.

[12:12:04.0000] <AryehGregor>
execCommand() should never be called recursively anyway now, because that will fire extra events.

[12:12:05.0000] <AryehGregor>
There were a few places where my spec said to do that, and I'm in the middle of fixing them.

[12:12:08.0000] <AryehGregor>
There were a few places where my spec said to do that, and I'm in the middle of fixing them.

[12:33:41.0000] <StoneCypher>
is it possible to control <td> border miters?

[12:34:00.0000] <StoneCypher>
is it possible to control <td> border miters?

[12:53:43.0000] <Hixie>
heycam|away: can webidl distingush (five doubles and a boolean) from (six doubles), when it comes to overloading method ?

[12:53:47.0000] <Hixie>
methods, even

[12:54:00.0000] <Hixie>
heycam|away: can webidl distingush (five doubles and a boolean) from (six doubles), when it comes to overloading method ?

[12:54:01.0000] <Hixie>
methods, even

[12:54:32.0000] <Ms2ger>
Doesn't look like it

[12:55:00.0000] <Ms2ger>
Doesn't look like it

[12:55:36.0000] <Hixie>
crap

[12:55:46.0000] <AryehGregor>
Why not?

[12:55:48.0000] <Hixie>
that's unfortunate

[12:55:55.0000] <AryehGregor>
Also: why in heaven's name would you want such a confusing overload?

[12:56:00.0000] <Hixie>
crap

[12:56:01.0000] <AryehGregor>
Why not?

[12:56:02.0000] <Hixie>
that's unfortunate

[12:56:03.0000] <AryehGregor>
Also: why in heaven's name would you want such a confusing overload?

[12:56:04.0000] <AryehGregor>
Wouldn't a separate method be a lot clearer?

[12:56:09.0000] <AryehGregor>
Wouldn't a separate method be a lot clearer?

[12:56:49.0000] <Ms2ger>
Because we can!

[12:56:51.0000] <Ms2ger>
Well, we can't

[12:57:00.0000] <Ms2ger>
Because we can!

[12:57:01.0000] <Ms2ger>
Well, we can't

[12:57:02.0000] <Hixie>
it'd be pretty clear, in this case, in practice

[12:57:03.0000] <Hixie>
but anyway. lunch.

[12:57:07.0000] <Hixie>
it'd be pretty clear, in this case, in practice

[12:57:10.0000] <Hixie>
but anyway. lunch.

[13:18:59.0000] <rniwa>
AryehGregor: ah, ok. great.

[13:19:00.0000] <rniwa>
AryehGregor: ah, ok. great.

[13:19:01.0000] <rniwa>
AryehGregor: so just prohibit the nested transaction as wel?

[13:19:09.0000] <rniwa>
AryehGregor: so just prohibit the nested transaction as wel?

[13:21:28.0000] <AryehGregor>
rniwa, I guess.

[13:21:37.0000] <AryehGregor>
I'm not familiar enough with UndoManager to understand the implications, TBH.

[13:22:00.0000] <AryehGregor>
rniwa, I guess.

[13:22:01.0000] <AryehGregor>
I'm not familiar enough with UndoManager to understand the implications, TBH.

[13:26:31.0000] <rniwa>
sicking: ping

[13:26:41.0000] <rniwa>
AryehGregor: so the implication is simple

[13:26:53.0000] <rniwa>
AryehGregor: nobody is allowed to add new transaction while someone else's running a transaction

[13:27:00.0000] <rniwa>
sicking: ping

[13:27:01.0000] <rniwa>
AryehGregor: so the implication is simple

[13:27:02.0000] <rniwa>
AryehGregor: nobody is allowed to add new transaction while someone else's running a transaction

[13:27:03.0000] <rniwa>
AryehGregor: it might get a little tricky when there are cross-origin iframes

[13:27:15.0000] <rniwa>
AryehGregor: it might get a little tricky when there are cross-origin iframes

[13:27:27.0000] <rniwa>
AryehGregor: because the you sort of leak the information that a transaction is in progress

[13:27:32.0000] <AryehGregor>
Right, but I don't remember the use-cases etc. well enough to know what effect that would have in practice.

[13:27:33.0000] <rniwa>
but I don't think that's a big of deal

[13:27:48.0000] <rniwa>
ehsan: yt?

[13:27:49.0000] <AryehGregor>
Do cross-origin iframes share the same undo manager as their host page?  That seems a little surprising.

[13:27:57.0000] <AryehGregor>
There's already information leak there, then, right?

[13:27:58.0000] <rniwa>
AryehGregor: no

[13:28:00.0000] <rniwa>
AryehGregor: because the you sort of leak the information that a transaction is in progress

[13:28:01.0000] <AryehGregor>
Right, but I don't remember the use-cases etc. well enough to know what effect that would have in practice.

[13:28:02.0000] <rniwa>
but I don't think that's a big of deal

[13:28:02.0000] <ehsan>
rniwa: yeah

[13:28:03.0000] <rniwa>
ehsan: yt?

[13:28:04.0000] <AryehGregor>
Do cross-origin iframes share the same undo manager as their host page?  That seems a little surprising.

[13:28:05.0000] <AryehGregor>
There's already information leak there, then, right?

[13:28:06.0000] <rniwa>
AryehGregor: no

[13:28:06.0000] <rniwa>
AryehGregor: there should be undo manager per document

[13:28:07.0000] <ehsan>
rniwa: yeah

[13:28:08.0000] <rniwa>
AryehGregor: there should be undo manager per document

[13:28:09.0000] <rniwa>
AryehGregor: but that's also tricky for webkit & ie

[13:28:18.0000] <rniwa>
AryehGregor: but that's also tricky for webkit & ie

[13:28:34.0000] <rniwa>
AryehGregor: because undo stack shared across the entire page at the moment

[13:29:00.0000] <rniwa>
AryehGregor: because undo stack shared across the entire page at the moment

[13:29:01.0000] <AryehGregor>
Then you're already leaking information.  E.g., you can take some action in the outer page, wait a while, and see if execCommand("undo") reverses it.  If it doesn't, the user must have taken some action in the iframe that got reversed.

[13:29:13.0000] <AryehGregor>
Then you're already leaking information.  E.g., you can take some action in the outer page, wait a while, and see if execCommand("undo") reverses it.  If it doesn't, the user must have taken some action in the iframe that got reversed.

[13:29:25.0000] <rniwa>
AryehGregor: right.

[13:29:35.0000] <AryehGregor>
Actually, that means the outer page can use undo/redo to modify the DOM of the inner page.  That seems like it might be "interesting" from a security perspective.

[13:29:58.0000] <rniwa>
AryehGregor: while i'm not going to talk about specifics, there's a bug about it.

[13:30:00.0000] <rniwa>
AryehGregor: right.

[13:30:01.0000] <AryehGregor>
Actually, that means the outer page can use undo/redo to modify the DOM of the inner page.  That seems like it might be "interesting" from a security perspective.

[13:30:02.0000] <rniwa>
AryehGregor: while i'm not going to talk about specifics, there's a bug about it.

[13:30:02.0000] <rniwa>
AryehGregor: it's extremely tricky

[13:30:02.0000] <Ms2ger>
What's this "unrestricted float" thing in WebIDL?

[13:30:03.0000] <rniwa>
AryehGregor: it's extremely tricky

[13:30:04.0000] <Ms2ger>
What's this "unrestricted float" thing in WebIDL?

[13:30:05.0000] <rniwa>
to say the least

[13:30:08.0000] <rniwa>
to say the least

[13:30:30.0000] <rniwa>
ehsan: do you think prohibiting nested transaction is the way to go?

[13:30:45.0000] <AryehGregor>
Ms2ger, https://www.w3.org/Bugs/Public/show_bug.cgi?id=16075

[13:30:47.0000] <ehsan>
rniwa: I still have not caught up with the thread

[13:30:53.0000] <rniwa>
ehsan: ok

[13:31:00.0000] <rniwa>
ehsan: do you think prohibiting nested transaction is the way to go?

[13:31:01.0000] <AryehGregor>
Ms2ger, https://www.w3.org/Bugs/Public/show_bug.cgi?id=16075

[13:31:02.0000] <ehsan>
rniwa: I still have not caught up with the thread

[13:31:03.0000] <rniwa>
ehsan: ok

[13:31:29.0000] <rniwa>
ehsan, AryehGregor: I just want to make sure the API behaves sane

[13:31:44.0000] <ehsan>
rniwa: I'll look at the thread later today

[13:31:55.0000] <rniwa>
ehsan, AryehGregor: on somewhat related note, DOMTransaction interface needs to be a callback interface

[13:32:00.0000] <rniwa>
ehsan, AryehGregor: I just want to make sure the API behaves sane

[13:32:01.0000] <ehsan>
rniwa: I'll look at the thread later today

[13:32:02.0000] <rniwa>
ehsan, AryehGregor: on somewhat related note, DOMTransaction interface needs to be a callback interface

[13:32:03.0000] <rniwa>
and there are a quite few interesting stuff going on with respect to GC

[13:32:04.0000] <rniwa>
because they need to be kept alive until undo/redo are done

[13:32:06.0000] <rniwa>
and there are a quite few interesting stuff going on with respect to GC

[13:32:21.0000] <rniwa>
because they need to be kept alive until undo/redo are done

[13:32:26.0000] <Ms2ger>
AryehGregor, is there a bug on HTML to use it?

[13:32:47.0000] <AryehGregor>
Ms2ger, not AFAIK.

[13:32:58.0000] <rniwa>
ehsan, AryehGregor: however, they might be pruned earlier if undoManager gets destroyed...

[13:33:00.0000] <Ms2ger>
AryehGregor, is there a bug on HTML to use it?

[13:33:01.0000] <AryehGregor>
Ms2ger, not AFAIK.

[13:33:02.0000] <rniwa>
ehsan, AryehGregor: however, they might be pruned earlier if undoManager gets destroyed...

[13:56:00.0000] <smaug____>
rniwa: just curious, does the undomanager thingie define how much needs to be kept in undo/redo stacks ?

[13:56:01.0000] <rniwa>
smaug____: it does not.

[13:56:01.0000] <smaug____>
rniwa: just curious, does the undomanager thingie define how much needs to be kept in undo/redo stacks ?

[13:56:13.0000] <rniwa>
smaug____: it does not.

[13:56:23.0000] <smaug____>
undo can use quite some memory

[13:56:28.0000] <rniwa>
smaug____: right.

[13:56:35.0000] <rniwa>
smaug____: so we should probably add some limit to it

[13:56:43.0000] <smaug____>
yeah

[13:56:45.0000] <rniwa>
smaug____: but then... should we modify the page of undo stack pruning?

[13:56:48.0000] <rniwa>
notify*

[13:56:56.0000] <smaug____>
I think gecko has some limit

[13:57:00.0000] <smaug____>
undo can use quite some memory

[13:57:01.0000] <rniwa>
smaug____: right.

[13:57:02.0000] <rniwa>
smaug____: so we should probably add some limit to it

[13:57:03.0000] <smaug____>
yeah

[13:57:04.0000] <rniwa>
smaug____: but then... should we modify the page of undo stack pruning?

[13:57:05.0000] <rniwa>
notify*

[13:57:06.0000] <smaug____>
I think gecko has some limit

[13:57:07.0000] <smaug____>
ehsan might remember what that is

[13:57:12.0000] <smaug____>
ehsan might remember what that is

[13:58:36.0000] <ehsan>
smaug____: I don't think we impose a limit in fact

[13:58:56.0000] <smaug____>
there is max transaction count

[13:59:00.0000] <ehsan>
smaug____: I don't think we impose a limit in fact

[13:59:01.0000] <smaug____>
there is max transaction count

[13:59:53.0000] <ehsan>
smaug____: well we set it to -1, which means don't care

[13:59:58.0000] <smaug____>
bah :)

[14:00:00.0000] <ehsan>
smaug____: well we set it to -1, which means don't care

[14:00:01.0000] <smaug____>
bah :)

[14:00:02.0000] <ehsan>
smaug____: I don't see the point in imposing a limit...

[14:00:23.0000] <ehsan>
smaug____: I don't see the point in imposing a limit...

[14:00:34.0000] <ehsan>
web pages can already do stupid stuff if they wanna burn memory

[14:00:40.0000] <smaug____>
and do

[14:00:42.0000] <rniwa>
ehsan: I think chromium has a limit

[14:00:43.0000] <smaug____>
like irccloud

[14:00:53.0000] <ehsan>
and we don't need operations which are in an order of the length of the stack

[14:01:00.0000] <ehsan>
web pages can already do stupid stuff if they wanna burn memory

[14:01:01.0000] <smaug____>
and do

[14:01:02.0000] <rniwa>
ehsan: I think chromium has a limit

[14:01:03.0000] <smaug____>
like irccloud

[14:01:04.0000] <ehsan>
and we don't need operations which are in an order of the length of the stack

[14:01:05.0000] <ehsan>
rniwa: then I would suggest that they should lift it ;)

[14:01:06.0000] <ehsan>
smaug____: or, (sigh), gmail

[14:01:07.0000] <Yuhong>
http://ln.hixie.ch/?start=1137740632&count=1

[14:01:07.0000] <ehsan>
rniwa: then I would suggest that they should lift it ;)

[14:01:19.0000] <ehsan>
smaug____: or, (sigh), gmail

[14:01:23.0000] <Yuhong>
http://ln.hixie.ch/?start=1137740632&count=1

[14:01:30.0000] <smaug____>
ehsan: oh, even that

[14:01:37.0000] <Yuhong>
"The HTML5 spec says that if you use another DOCTYPE, UAs can switch to quirks mode, in which case all bets are off. I'm not even going to try to specify quirks mode parsing. Hopefully, by making the DOCTYPE short and memorable, it will encourage authors to use it more."

[14:01:41.0000] <smaug____>
and sure, google reader too

[14:01:46.0000] <Yuhong>
From Hixie.

[14:02:00.0000] <smaug____>
ehsan: oh, even that

[14:02:01.0000] <Yuhong>
"The HTML5 spec says that if you use another DOCTYPE, UAs can switch to quirks mode, in which case all bets are off. I'm not even going to try to specify quirks mode parsing. Hopefully, by making the DOCTYPE short and memorable, it will encourage authors to use it more."

[14:02:02.0000] <smaug____>
and sure, google reader too

[14:02:03.0000] <Yuhong>
From Hixie.

[14:02:03.0000] <ehsan>
jee, those like buttons?

[14:02:04.0000] <ehsan>
jee, those like buttons?

[14:02:05.0000] <smaug____>
google web devs clearly don't have the right tools the find leaks

[14:02:05.0000] <smaug____>
google web devs clearly don't have the right tools the find leaks

[14:02:06.0000] <ehsan>
don't get me started ;)

[14:02:07.0000] <smaug____>
"leaks"

[14:02:08.0000] <ehsan>
don't get me started ;)

[14:02:14.0000] <smaug____>
"leaks"

[14:02:48.0000] <Ms2ger>
Oh hey, karl heard about me

[14:02:53.0000] <Yuhong>
Two years before X-UA-Compatible was created.

[14:02:54.0000] <smaug____>
s/the/to/

[14:02:58.0000] <rniwa>
smaug____, ehsan: i think webkit currently keeps undo stack for a page as long as the page is there

[14:03:00.0000] <Ms2ger>
Oh hey, karl heard about me

[14:03:01.0000] <Yuhong>
Two years before X-UA-Compatible was created.

[14:03:02.0000] <smaug____>
s/the/to/

[14:03:03.0000] <rniwa>
smaug____, ehsan: i think webkit currently keeps undo stack for a page as long as the page is there

[14:03:04.0000] <rniwa>
so we need to change that before lifting the limit

[14:03:06.0000] <rniwa>
so we need to change that before lifting the limit

[14:03:25.0000] <rniwa>
e.g. prune entries in the undo stack for a frame when the frame is destroyed, etc...

[14:04:00.0000] <rniwa>
e.g. prune entries in the undo stack for a frame when the frame is destroyed, etc...

[14:04:01.0000] <ehsan>
rniwa: when you say frame, what do you mean? iframes? or rendering objects?

[14:04:02.0000] <rniwa>
ehsan: i mean DOM frames

[14:04:06.0000] <ehsan>
rniwa: when you say frame, what do you mean? iframes? or rendering objects?

[14:04:15.0000] <rniwa>
ehsan: i mean DOM frames

[14:04:27.0000] <smaug____>
undo should be per document

[14:04:40.0000] <rniwa>
smaug____: it is not for webkit and msie

[14:04:47.0000] <smaug____>
but it should be :)

[14:05:00.0000] <smaug____>
undo should be per document

[14:05:01.0000] <rniwa>
smaug____: it is not for webkit and msie

[14:05:02.0000] <smaug____>
but it should be :)

[14:05:03.0000] <rniwa>
smaug____: well, maybe.

[14:05:04.0000] <ehsan>
rniwa: I think smaug____ is right here, I don't know why they should have anything to do with frames

[14:05:17.0000] <ehsan>
rniwa: I think smaug____ is right here, I don't know why they should have anything to do with frames

[14:05:26.0000] <rniwa>
smaug____: but gecko/opera also uses different undo stack for each text form controls

[14:05:29.0000] <smaug____>
undomanager is something new anyway, so better to make a good API

[14:05:30.0000] <rniwa>
whereas webkit and msie don't

[14:05:53.0000] <ehsan>
rniwa: that's sort of a by-product of gecko's editor

[14:05:58.0000] <ehsan>
no good reason ;)

[14:05:58.0000] <rniwa>
smaug____: well but it change the user-initiated undo behavior

[14:06:00.0000] <rniwa>
smaug____: but gecko/opera also uses different undo stack for each text form controls

[14:06:01.0000] <smaug____>
undomanager is something new anyway, so better to make a good API

[14:06:01.0000] <smaug____>
rniwa: sure. I actually think there should be several undomanagers

[14:06:02.0000] <rniwa>
whereas webkit and msie don't

[14:06:03.0000] <ehsan>
rniwa: that's sort of a by-product of gecko's editor

[14:06:04.0000] <ehsan>
no good reason ;)

[14:06:05.0000] <rniwa>
smaug____: well but it change the user-initiated undo behavior

[14:06:06.0000] <smaug____>
rniwa: sure. I actually think there should be several undomanagers

[14:06:07.0000] <ehsan>
although that seems intuitive to me as a user...

[14:06:19.0000] <ehsan>
although that seems intuitive to me as a user...

[14:06:35.0000] <ehsan>
(that = treating each text control as a separate undo host)

[14:06:42.0000] <smaug____>
yeah

[14:07:00.0000] <ehsan>
(that = treating each text control as a separate undo host)

[14:07:01.0000] <smaug____>
yeah

[14:07:02.0000] <rniwa>
don't think we want to change the behavior here though

[14:07:04.0000] <rniwa>
don't think we want to change the behavior here though

[14:07:24.0000] <smaug____>
/me doesn't know what behavior chrome has

[14:07:26.0000] <ehsan>
which behavior?

[14:07:38.0000] <rniwa>
that text form controls share the same undo manager

[14:07:46.0000] <rniwa>
smaug____: chrome=webkit here

[14:08:00.0000] <smaug____>
/me doesn't know what behavior chrome has

[14:08:01.0000] <ehsan>
which behavior?

[14:08:01.0000] <rniwa>
ehsan: also, we don't provide any mechanisms to merge undo managers

[14:08:02.0000] <rniwa>
that text form controls share the same undo manager

[14:08:03.0000] <rniwa>
smaug____: chrome=webkit here

[14:08:04.0000] <rniwa>
ehsan: also, we don't provide any mechanisms to merge undo managers

[14:08:25.0000] <rniwa>
so this would mean that websites can never have a page that shares the same undo managers amongst text from controls

[14:08:41.0000] <rniwa>
which might be desirable in spreadsheet apps

[14:08:42.0000] <ehsan>
rniwa: so in webkit, if you have two text fields, type foo in one of them and go to the other and do cmd+z, foo gets deleted from the first box?

[14:08:48.0000] <rniwa>
ehsan: right.

[14:08:54.0000] <ehsan>
rniwa: wow

[14:08:55.0000] <smaug____>
ugh

[14:08:58.0000] <smaug____>
sounds bizarre

[14:09:00.0000] <rniwa>
so this would mean that websites can never have a page that shares the same undo managers amongst text from controls

[14:09:01.0000] <rniwa>
which might be desirable in spreadsheet apps

[14:09:02.0000] <ehsan>
rniwa: so in webkit, if you have two text fields, type foo in one of them and go to the other and do cmd+z, foo gets deleted from the first box?

[14:09:03.0000] <rniwa>
ehsan: right.

[14:09:04.0000] <ehsan>
rniwa: wow

[14:09:04.0000] <ehsan>
that sounds broken

[14:09:05.0000] <smaug____>
ugh

[14:09:06.0000] <smaug____>
sounds bizarre

[14:09:07.0000] <ehsan>
that sounds broken

[14:09:08.0000] <ehsan>
/me tries it to see for himself

[14:09:09.0000] <rniwa>
ehsan: but it's useful when you're filling up forms

[14:09:10.0000] <rniwa>
ehsan: and want to do undo a bunch

[14:09:11.0000] <ehsan>
/me tries it to see for himself

[14:09:14.0000] <rniwa>
ehsan: but it's useful when you're filling up forms

[14:09:21.0000] <rniwa>
ehsan: and want to do undo a bunch

[14:09:31.0000] <Ms2ger>
MikeSmith, yt?

[14:09:57.0000] <smaug____>
rniwa: so you need to remember which field you have filled in which order...

[14:10:00.0000] <Ms2ger>
MikeSmith, yt?

[14:10:00.0000] <smaug____>
before undoing

[14:10:01.0000] <smaug____>
rniwa: so you need to remember which field you have filled in which order...

[14:10:02.0000] <smaug____>
before undoing

[14:10:02.0000] <smaug____>
strange

[14:10:03.0000] <smaug____>
strange

[14:10:25.0000] <rniwa>
smaug____: i mean, people normally fills in forms from top-down

[14:10:40.0000] <rniwa>
smaug____: anyway i'm not about to argue about why we do this

[14:10:42.0000] <smaug____>
web apps could just move focus to previous field or something like that if field is emptied using undo

[14:10:58.0000] <smaug____>
rniwa: is that some ancient behavior in webkit?

[14:11:00.0000] <rniwa>
smaug____: i mean, people normally fills in forms from top-down

[14:11:00.0000] <rniwa>
smaug____: right.

[14:11:01.0000] <rniwa>
smaug____: anyway i'm not about to argue about why we do this

[14:11:02.0000] <smaug____>
web apps could just move focus to previous field or something like that if field is emptied using undo

[14:11:03.0000] <smaug____>
rniwa: is that some ancient behavior in webkit?

[14:11:04.0000] <rniwa>
smaug____: right.

[14:11:05.0000] <rniwa>
smaug____: yeah

[14:11:06.0000] <ehsan>
this seems very bizzare to me...

[14:11:07.0000] <rniwa>
smaug____: yeah

[14:11:13.0000] <ehsan>
this seems very bizzare to me...

[14:11:26.0000] <rniwa>
smaug____, ehsan: anyway, i don't think we can change this behavior

[14:11:26.0000] <ehsan>
although, it is a UX question

[14:11:34.0000] <rniwa>
because of legacy apps that depend on this particular behavior

[14:11:40.0000] <smaug____>
( yeah,  sounds like breaking all sorts of basic UX rules )

[14:11:42.0000] <rniwa>
right, it's a UX issue

[14:11:51.0000] <ehsan>
it might be sane in the case of forms, but we can't assume that all two text fields in the same page belong to the same form!

[14:11:58.0000] <rniwa>
we try to follow the platform convention whenever possible

[14:12:00.0000] <rniwa>
smaug____, ehsan: anyway, i don't think we can change this behavior

[14:12:01.0000] <ehsan>
although, it is a UX question

[14:12:02.0000] <rniwa>
because of legacy apps that depend on this particular behavior

[14:12:03.0000] <smaug____>
( yeah,  sounds like breaking all sorts of basic UX rules )

[14:12:04.0000] <rniwa>
right, it's a UX issue

[14:12:05.0000] <ehsan>
it might be sane in the case of forms, but we can't assume that all two text fields in the same page belong to the same form!

[14:12:06.0000] <rniwa>
we try to follow the platform convention whenever possible

[14:12:07.0000] <rniwa>
ehsan: right, that's why we want undoScope :)

[14:12:08.0000] <ehsan>
rniwa: well, here, platform convention is basically webkit's behavior :(

[14:12:09.0000] <ehsan>
so that's a logical loop ;)

[14:12:11.0000] <rniwa>
ehsan: right, that's why we want undoScope :)

[14:12:17.0000] <ehsan>
rniwa: well, here, platform convention is basically webkit's behavior :(

[14:12:21.0000] <ehsan>
so that's a logical loop ;)

[14:15:31.0000] <rniwa>
ehsan: as i said, IE does this too

[14:16:00.0000] <rniwa>
ehsan: as i said, IE does this too

[14:16:00.0000] <ehsan>
well yeah

[14:16:01.0000] <ehsan>
well yeah

[14:16:02.0000] <ehsan>
but we should see if this happens with the windows text control for example

[14:16:20.0000] <ehsan>
but we should see if this happens with the windows text control for example

[14:16:29.0000] <ehsan>
since that would be the real platform convention

[14:17:00.0000] <ehsan>
since that would be the real platform convention

[14:17:50.0000] <rniwa>
ehsan: yeah, but i can't find an app that have multiple form controls in a document

[14:17:57.0000] <rniwa>
most of examples i can find are modal dialogs

[14:18:00.0000] <rniwa>
ehsan: yeah, but i can't find an app that have multiple form controls in a document

[14:18:01.0000] <rniwa>
most of examples i can find are modal dialogs

[14:18:02.0000] <rniwa>
and they, of course, behave differently

[14:18:03.0000] <rniwa>
and they, of course, behave differently

[14:18:50.0000] <ehsan>
rniwa: I have one here in fact, gimme a sec

[14:19:00.0000] <ehsan>
rniwa: I have one here in fact, gimme a sec

[14:19:01.0000] <ehsan>
/me waits for his windows box to boot up

[14:19:17.0000] <ehsan>
/me waits for his windows box to boot up

[14:21:39.0000] <ehsan>
rniwa: ok, on native windows, each text field has its own undo stack

[14:22:00.0000] <ehsan>
rniwa: ok, on native windows, each text field has its own undo stack

[14:22:00.0000] <rniwa>
ehsan: yeah, because they're separate windows

[14:22:01.0000] <rniwa>
ehsan: yeah, because they're separate windows

[14:22:02.0000] <ehsan>
correct

[14:22:03.0000] <ehsan>
(several OS level windows, that is)_

[14:22:04.0000] <rniwa>
ehsan: right.

[14:22:07.0000] <ehsan>
correct

[14:22:15.0000] <ehsan>
(several OS level windows, that is)_

[14:22:22.0000] <rniwa>
ehsan: right.

[14:22:35.0000] <rniwa>
but i can't think of any windows app that has forms in the same page/document

[14:22:46.0000] <rniwa>
i can't think of such an ui

[14:22:47.0000] <rniwa>
anywhere

[14:22:49.0000] <ehsan>
so webkit doesn't adhere to platform conventions on windows ;)

[14:23:00.0000] <rniwa>
but i can't think of any windows app that has forms in the same page/document

[14:23:01.0000] <rniwa>
i can't think of such an ui

[14:23:02.0000] <rniwa>
anywhere

[14:23:03.0000] <ehsan>
so webkit doesn't adhere to platform conventions on windows ;)

[14:23:04.0000] <rniwa>
ehsan: it adheres to the platform in the sense that msie is the only windows app that have such an UI

[14:23:05.0000] <rniwa>
ehsan: and we match msie

[14:23:06.0000] <ehsan>
rniwa: thing like office automation apps have lots of such forms

[14:23:10.0000] <rniwa>
ehsan: it adheres to the platform in the sense that msie is the only windows app that have such an UI

[14:23:13.0000] <rniwa>
ehsan: and we match msie

[14:23:14.0000] <ehsan>
rniwa: thing like office automation apps have lots of such forms

[14:23:28.0000] <rniwa>
ehsan: that's an interesting point

[14:23:31.0000] <rniwa>
ehsan: what do they do?

[14:23:37.0000] <ehsan>
separate undo stacks

[14:23:43.0000] <rniwa>
ok

[14:23:48.0000] <ehsan>
honestly, I've never noticed an app do something differently

[14:23:50.0000] <rniwa>
odd

[14:23:56.0000] <ehsan>
I don't use IE and webkit that much personally

[14:24:00.0000] <rniwa>
ehsan: that's an interesting point

[14:24:01.0000] <rniwa>
ehsan: what do they do?

[14:24:02.0000] <ehsan>
separate undo stacks

[14:24:03.0000] <rniwa>
ok

[14:24:04.0000] <ehsan>
honestly, I've never noticed an app do something differently

[14:24:05.0000] <rniwa>
odd

[14:24:06.0000] <ehsan>
I don't use IE and webkit that much personally

[14:24:07.0000] <rniwa>
ehsan: we'll have to ask microsoft why do they do that way on msie

[14:24:07.0000] <rniwa>
ehsan: we'll have to ask microsoft why do they do that way on msie

[14:24:08.0000] <ehsan>
but my eyeballs nearly popped out when I saw this today ;)

[14:24:10.0000] <ehsan>
but my eyeballs nearly popped out when I saw this today ;)

[14:24:26.0000] <smaug____>
rniwa: I could imagine the IE behavior could be some ancient thingie

[14:24:32.0000] <smaug____>
from IE3 or such

[14:24:47.0000] <rniwa>
smaug____: posible.

[14:25:00.0000] <smaug____>
rniwa: I could imagine the IE behavior could be some ancient thingie

[14:25:01.0000] <smaug____>
from IE3 or such

[14:25:02.0000] <rniwa>
smaug____: posible.

[14:25:24.0000] <smaug____>
and behavior in web browsers at that time didn't need to have any reasoning :)

[14:26:00.0000] <smaug____>
and behavior in web browsers at that time didn't need to have any reasoning :)

[14:26:01.0000] <ehsan>
rniwa: take this as an example: http://www.bing.com/search?q=test&go=&qs=n&form=QBLH&filt=all&pq=test&sc=8-4&sp=-1&sk=

[14:26:02.0000] <ehsan>
rniwa: edit something in the first text box

[14:26:03.0000] <ehsan>
then scroll down

[14:26:08.0000] <ehsan>
rniwa: take this as an example: http://www.bing.com/search?q=test&go=&qs=n&form=QBLH&filt=all&pq=test&sc=8-4&sp=-1&sk=

[14:26:15.0000] <ehsan>
rniwa: edit something in the first text box

[14:26:18.0000] <ehsan>
then scroll down

[14:26:26.0000] <ehsan>
focus the other text box at the end of the page

[14:26:29.0000] <ehsan>
and do Cmd+X

[14:26:30.0000] <ehsan>
*Z

[14:26:37.0000] <ehsan>
no observable behavior

[14:26:48.0000] <ehsan>
and the edit in the first box suddenly gets unddone

[14:26:55.0000] <ehsan>
how can that be the desired UX? ;)

[14:27:00.0000] <ehsan>
focus the other text box at the end of the page

[14:27:01.0000] <ehsan>
and do Cmd+X

[14:27:02.0000] <ehsan>
*Z

[14:27:03.0000] <ehsan>
no observable behavior

[14:27:04.0000] <ehsan>
and the edit in the first box suddenly gets unddone

[14:27:05.0000] <ehsan>
how can that be the desired UX? ;)

[14:27:06.0000] <rniwa>
ehsan: as I said, I'm not going to make a UX argument here

[14:27:07.0000] <ehsan>
:)

[14:27:10.0000] <rniwa>
ehsan: as I said, I'm not going to make a UX argument here

[14:27:20.0000] <ehsan>
:)

[14:27:32.0000] <rniwa>
ehsan: all I know is that that's the behavior we chose to implement

[14:27:41.0000] <ehsan>
yeah ok fair enough

[14:27:46.0000] <rniwa>
and there might be some backward compatibility issues if we were to change it

[14:28:00.0000] <rniwa>
ehsan: all I know is that that's the behavior we chose to implement

[14:28:01.0000] <ehsan>
yeah ok fair enough

[14:28:02.0000] <rniwa>
and there might be some backward compatibility issues if we were to change it

[14:28:03.0000] <ehsan>
well implementations already have different behaviors here

[14:28:04.0000] <ehsan>
so I would decide that we should determine what the *correct* thing to do is

[14:28:04.0000] <ehsan>
well implementations already have different behaviors here

[14:28:21.0000] <ehsan>
so I would decide that we should determine what the *correct* thing to do is

[14:28:24.0000] <ehsan>
and then adopt that

[14:28:31.0000] <ehsan>
and it _is_ a UX question

[14:28:49.0000] <ehsan>
so don't take my argument as a UX decision :)

[14:29:00.0000] <ehsan>
and then adopt that

[14:29:01.0000] <ehsan>
and it _is_ a UX question

[14:29:02.0000] <ehsan>
so don't take my argument as a UX decision :)

[14:29:38.0000] <rniwa>
ehsan: yeah.

[14:29:49.0000] <rniwa>
ehsan: we'll need to ask MS & Apple first though

[14:29:56.0000] <rniwa>
i don't even know if they can change the behavior

[14:30:00.0000] <rniwa>
ehsan: yeah.

[14:30:01.0000] <rniwa>
ehsan: we'll need to ask MS & Apple first though

[14:30:02.0000] <rniwa>
i don't even know if they can change the behavior

[14:30:03.0000] <ehsan>
sadface

[14:30:04.0000] <rniwa>
if they have compat. issues, etc... then we can't converge it anyway

[14:30:05.0000] <ehsan>
yeah

[14:30:10.0000] <ehsan>
sadface

[14:30:10.0000] <rniwa>
if they have compat. issues, etc... then we can't converge it anyway

[14:30:23.0000] <ehsan>
yeah

[14:30:30.0000] <rniwa>
we should probably bring it up on public-webapps or so

[14:30:44.0000] <rniwa>
or directly email our friendly ms/apple folks :)

[14:30:46.0000] <ehsan>
fwiw, I would be fine with changing gecko if someone has a compelling argument for the alternate behavior

[14:31:00.0000] <rniwa>
we should probably bring it up on public-webapps or so

[14:31:01.0000] <rniwa>
or directly email our friendly ms/apple folks :)

[14:31:02.0000] <ehsan>
fwiw, I would be fine with changing gecko if someone has a compelling argument for the alternate behavior

[14:31:03.0000] <ehsan>
yep

[14:31:04.0000] <rniwa>
ehsan: you guys are lucky in that gecko isn't a part of some OS framework :)

[14:31:05.0000] <ehsan>
yep

[14:31:14.0000] <rniwa>
ehsan: you guys are lucky in that gecko isn't a part of some OS framework :)

[14:31:37.0000] <rniwa>
trident & webkit suffer a lot from their being part of OS frameworks :(

[14:31:38.0000] <ehsan>
rniwa: it will be soon! ;)

[14:31:39.0000] <smaug____>
walled garden behavior doesn't apply here ;)

[14:31:53.0000] <ehsan>
rniwa: but I don't see why that is a concern

[14:31:54.0000] <jdaggett>
jprmc, joe: mtg?

[14:31:55.0000] <smaug____>
this is about web API

[14:32:00.0000] <rniwa>
trident & webkit suffer a lot from their being part of OS frameworks :(

[14:32:01.0000] <ehsan>
rniwa: it will be soon! ;)

[14:32:02.0000] <smaug____>
walled garden behavior doesn't apply here ;)

[14:32:03.0000] <ehsan>
rniwa: but I don't see why that is a concern

[14:32:04.0000] <jdaggett>
jprmc, joe: mtg?

[14:32:05.0000] <smaug____>
this is about web API

[14:32:06.0000] <ehsan>
webkit can detect whether it's embedded in some apple OS thingy or not

[14:32:07.0000] <ehsan>
and can have different behaviors

[14:32:07.0000] <ehsan>
webkit can detect whether it's embedded in some apple OS thingy or not

[14:32:14.0000] <ehsan>
and can have different behaviors

[14:32:31.0000] <rniwa>
ehsan: i don't wanna do that.... there are a lot of dependencies internally in our codebase

[14:32:37.0000] <ehsan>
for example, gecko already does some things different for mail editing and regular web editing

[14:32:39.0000] <rniwa>
ehsan: and supporting two behaviors is just a nightmare

[14:32:47.0000] <smaug____>
that is implementation issue

[14:32:55.0000] <smaug____>
web api should be good

[14:33:00.0000] <rniwa>
ehsan: i don't wanna do that.... there are a lot of dependencies internally in our codebase

[14:33:01.0000] <ehsan>
for example, gecko already does some things different for mail editing and regular web editing

[14:33:01.0000] <smaug____>
and behavior in the web

[14:33:02.0000] <rniwa>
ehsan: and supporting two behaviors is just a nightmare

[14:33:03.0000] <smaug____>
that is implementation issue

[14:33:04.0000] <smaug____>
web api should be good

[14:33:05.0000] <smaug____>
and behavior in the web

[14:33:29.0000] <rniwa>
i tend to agree but there are practicality issue

[14:33:32.0000] <ehsan>
rniwa: I sympathize, but what I'm trying to say is that OS backwards compat is not a good argument

[14:33:33.0000] <rniwa>
s

[14:33:38.0000] <ehsan>
rniwa: web compat is, however

[14:33:53.0000] <rniwa>
well sure. but if nobody has a time to implement it, then our behavior won't change

[14:33:55.0000] <ehsan>
but I don't think this can affect web compat in any serious way

[14:34:00.0000] <rniwa>
i tend to agree but there are practicality issue

[14:34:00.0000] <rniwa>
i mean we can say that we can change the behavior

[14:34:01.0000] <ehsan>
rniwa: I sympathize, but what I'm trying to say is that OS backwards compat is not a good argument

[14:34:01.0000] <ehsan>
yeah

[14:34:02.0000] <rniwa>
s

[14:34:03.0000] <ehsan>
rniwa: web compat is, however

[14:34:04.0000] <rniwa>
well sure. but if nobody has a time to implement it, then our behavior won't change

[14:34:05.0000] <ehsan>
but I don't think this can affect web compat in any serious way

[14:34:06.0000] <rniwa>
i mean we can say that we can change the behavior

[14:34:07.0000] <ehsan>
yeah

[14:34:07.0000] <rniwa>
but if nobody will work on it, then it won't happen :(

[14:34:07.0000] <ehsan>
but that's a different issue :)

[14:34:08.0000] <rniwa>
but if nobody will work on it, then it won't happen :(

[14:34:09.0000] <ehsan>
but that's a different issue :)

[14:34:10.0000] <ehsan>
I think we should spec the right thing

[14:34:22.0000] <ehsan>
I think we should spec the right thing

[14:34:31.0000] <ehsan>
and don't let arcane OS level requirements hold us down

[14:34:47.0000] <ehsan>
whether an engine implements a spec completely and when is a different issue

[14:34:50.0000] <rniwa>
anyway, this whole argument won't move forward unless we can get apple/msft people to be involved

[14:35:00.0000] <ehsan>
and don't let arcane OS level requirements hold us down

[14:35:01.0000] <ehsan>
whether an engine implements a spec completely and when is a different issue

[14:35:02.0000] <rniwa>
anyway, this whole argument won't move forward unless we can get apple/msft people to be involved

[14:35:02.0000] <ehsan>
yeah, that we agree on :)

[14:35:03.0000] <ehsan>
yeah, that we agree on :)

[14:35:03.0000] <smaug____>
yeah, we should always spec the "right" thing, unless it breaks the web badly

[14:35:04.0000] <smaug____>
yeah, we should always spec the "right" thing, unless it breaks the web badly

[14:35:26.0000] <rniwa>
ehsan, smaug____: quite frankly, i'm not even sure if we need to spec this

[14:35:37.0000] <rniwa>
it's an UI issue so it could be left to implementors

[14:35:56.0000] <rniwa>
we tend not to spec UI issues in web standards as far as I know

[14:36:00.0000] <rniwa>
ehsan, smaug____: quite frankly, i'm not even sure if we need to spec this

[14:36:01.0000] <rniwa>
it's an UI issue so it could be left to implementors

[14:36:02.0000] <rniwa>
we tend not to spec UI issues in web standards as far as I know

[14:36:03.0000] <ehsan>
rniwa: wouldn't it affect the default undoScope though?

[14:36:04.0000] <rniwa>
ehsan: not really.

[14:36:06.0000] <ehsan>
rniwa: wouldn't it affect the default undoScope though?

[14:36:14.0000] <rniwa>
ehsan: not really.

[14:36:35.0000] <rniwa>
ehsan: it sort of does if user editing stuff inside input/textarea

[14:36:44.0000] <rniwa>
ehsan: but in that sense, gecko/opera's behavior is more problmatic

[14:37:00.0000] <rniwa>
ehsan: it sort of does if user editing stuff inside input/textarea

[14:37:01.0000] <rniwa>
ehsan: but in that sense, gecko/opera's behavior is more problmatic

[14:37:02.0000] <ehsan>
how so?

[14:37:03.0000] <rniwa>
ehsan: because setting values to input/textarea would being to the undo manager of the document

[14:37:03.0000] <rniwa>
ehsan: because setting values to input/textarea would being to the undo manager of the document

[14:37:25.0000] <rniwa>
whereas editing text inside input/textarea belong to the magic undo manager gecko/opera have for text form contorls

[14:37:38.0000] <ehsan>
well that depends on how it is specced

[14:37:50.0000] <rniwa>
so unless we somehow bound input/textarea's value to that magic undo manager

[14:37:51.0000] <ehsan>
setting the value can also change the undo manager for the text box

[14:37:55.0000] <ehsan>
if there is one

[14:38:00.0000] <rniwa>
whereas editing text inside input/textarea belong to the magic undo manager gecko/opera have for text form contorls

[14:38:01.0000] <ehsan>
well that depends on how it is specced

[14:38:02.0000] <rniwa>
so unless we somehow bound input/textarea's value to that magic undo manager

[14:38:03.0000] <ehsan>
setting the value can also change the undo manager for the text box

[14:38:04.0000] <ehsan>
if there is one

[14:38:04.0000] <rniwa>
possible.

[14:38:05.0000] <rniwa>
possible.

[14:38:06.0000] <rniwa>
but then you'll be exposing the internal undo manager...

[14:38:07.0000] <ehsan>
rniwa: please note that gecko doesn't really have a magic undo manager, it just creates one per input/textarea

[14:38:12.0000] <rniwa>
but then you'll be exposing the internal undo manager...

[14:38:22.0000] <ehsan>
rniwa: please note that gecko doesn't really have a magic undo manager, it just creates one per input/textarea

[14:38:39.0000] <ehsan>
and one for the whole page if it has a contenteditable element

[14:38:41.0000] <rniwa>
ehsan: right. i'm just calling it "magic" because it's invisible to scirpts

[14:38:47.0000] <ehsan>
ok yeah

[14:38:48.0000] <rniwa>
but maybe "invisible" is a better term

[14:38:52.0000] <ehsan>
yep

[14:38:52.0000] <smaug____>
rniwa: I assume input/textarea will have a separate undomanager in the spec

[14:38:58.0000] <rniwa>
smaug____: it doesn't

[14:39:00.0000] <ehsan>
and one for the whole page if it has a contenteditable element

[14:39:01.0000] <rniwa>
ehsan: right. i'm just calling it "magic" because it's invisible to scirpts

[14:39:02.0000] <ehsan>
ok yeah

[14:39:02.0000] <ehsan>
oh

[14:39:03.0000] <rniwa>
but maybe "invisible" is a better term

[14:39:03.0000] <ehsan>
well

[14:39:03.0000] <rniwa>
smaug____: nowhere in my spec does it say that

[14:39:04.0000] <ehsan>
yep

[14:39:05.0000] <smaug____>
rniwa: I assume input/textarea will have a separate undomanager in the spec

[14:39:06.0000] <rniwa>
smaug____: it doesn't

[14:39:07.0000] <ehsan>
oh

[14:39:08.0000] <ehsan>
well

[14:39:09.0000] <rniwa>
smaug____: nowhere in my spec does it say that

[14:39:10.0000] <ehsan>
so this _is_ a spec issue, and not merely a UI issue

[14:39:11.0000] <smaug____>
rniwa: or that the spec describes what an undomanager is, and HTML spec defines that input/textarea has such

[14:39:14.0000] <ehsan>
so this _is_ a spec issue, and not merely a UI issue

[14:39:20.0000] <smaug____>
rniwa: or that the spec describes what an undomanager is, and HTML spec defines that input/textarea has such

[14:39:32.0000] <rniwa>
smaug____: maybe.

[14:39:50.0000] <rniwa>
ehsan: sort of.

[14:39:58.0000] <ehsan>
yeah that makes sense to me

[14:40:00.0000] <rniwa>
smaug____: maybe.

[14:40:01.0000] <rniwa>
ehsan: sort of.

[14:40:02.0000] <ehsan>
yeah that makes sense to me

[14:40:03.0000] <smaug____>
also, should each contenteditable areas have own undomanager

[14:40:04.0000] <smaug____>
I think so

[14:40:05.0000] <rniwa>
ehsan: as it stands, value is tied to document's undo manager

[14:40:06.0000] <rniwa>
ehsan, smaug____: a bigger problem is with execCommand('undo')

[14:40:08.0000] <smaug____>
also, should each contenteditable areas have own undomanager

[14:40:09.0000] <smaug____>
I think so

[14:40:12.0000] <rniwa>
ehsan: as it stands, value is tied to document's undo manager

[14:40:23.0000] <rniwa>
ehsan, smaug____: a bigger problem is with execCommand('undo')

[14:40:36.0000] <smaug____>
so, that is designMode document then

[14:40:44.0000] <rniwa>
ehsan, smaug____: that currently undoes actions inside textarea/input at least on webkit

[14:40:49.0000] <rniwa>
don't know what gecko/msie do

[14:40:59.0000] <rniwa>
smaug____: no

[14:41:00.0000] <smaug____>
so, that is designMode document then

[14:41:01.0000] <rniwa>
ehsan, smaug____: that currently undoes actions inside textarea/input at least on webkit

[14:41:02.0000] <rniwa>
don't know what gecko/msie do

[14:41:03.0000] <rniwa>
smaug____: no

[14:41:04.0000] <rniwa>
smaug____: contenteditable and undo scope are separate

[14:41:09.0000] <rniwa>
smaug____: contenteditable and undo scope are separate

[14:41:24.0000] <rniwa>
smaug____: otherwise, you can't have multiple content editable regions that share the same undo manager

[14:41:35.0000] <rniwa>
smaug____: which is desirable for spreadsheet apps and others

[14:41:45.0000] <ehsan>
rniwa: I think gecko applies that command to the contenteditable stuff on the page and not the text box

[14:41:47.0000] <ehsan>
(not tested)

[14:42:00.0000] <rniwa>
smaug____: otherwise, you can't have multiple content editable regions that share the same undo manager

[14:42:01.0000] <rniwa>
smaug____: which is desirable for spreadsheet apps and others

[14:42:02.0000] <ehsan>
rniwa: I think gecko applies that command to the contenteditable stuff on the page and not the text box

[14:42:03.0000] <ehsan>
(not tested)

[14:42:04.0000] <smaug____>
ah, that is possible

[14:42:18.0000] <smaug____>
ah, that is possible

[14:43:48.0000] <rniwa>
ehsan: yeah gecko doesn't undo stuff inside text fields

[14:44:00.0000] <rniwa>
ehsan: yeah gecko doesn't undo stuff inside text fields

[14:44:01.0000] <ehsan>
at least that is what the code intends to happen ;)

[14:44:02.0000] <rniwa>
/me tests msier

[14:44:04.0000] <ehsan>
at least that is what the code intends to happen ;)

[14:44:21.0000] <rniwa>
/me tests msier

[14:44:23.0000] <rniwa>
msie*

[14:45:00.0000] <rniwa>
msie*

[14:45:01.0000] <smaug____>
(and connection to dns server died ( )

[14:45:12.0000] <smaug____>
(and connection to dns server died ( )

[14:45:28.0000] <rniwa>
ehsan: msie does undo in text fields

[14:46:00.0000] <rniwa>
ehsan: msie does undo in text fields

[14:46:01.0000] <ehsan>
:/

[14:46:20.0000] <ehsan>
:/

[14:46:29.0000] <ehsan>
this stuff is a mess in general

[14:47:00.0000] <ehsan>
this stuff is a mess in general

[14:47:01.0000] <rniwa>
ehsan: yup

[14:47:14.0000] <rniwa>
ehsan: yup

[14:47:24.0000] <rniwa>
ehsan: maybe we should standardize it :(

[14:47:29.0000] <rniwa>
AryehGregor: what do you think, Aryeh?

[14:47:38.0000] <AryehGregor>
About which?

[14:47:43.0000] <ehsan>
/me dies a little bit inside

[14:47:46.0000] <rniwa>
AryehGregor: standariziging undo behavior

[14:47:53.0000] <AryehGregor>
I'm in favor, of course!

[14:48:00.0000] <rniwa>
ehsan: maybe we should standardize it :(

[14:48:01.0000] <rniwa>
AryehGregor: what do you think, Aryeh?

[14:48:01.0000] <AryehGregor>
Easy to say.  :)

[14:48:02.0000] <AryehGregor>
About which?

[14:48:03.0000] <ehsan>
/me dies a little bit inside

[14:48:04.0000] <rniwa>
AryehGregor: standariziging undo behavior

[14:48:05.0000] <AryehGregor>
I'm in favor, of course!

[14:48:06.0000] <AryehGregor>
Easy to say.  :)

[14:48:07.0000] <rniwa>
AryehGregor: right now, msie/webkit undo things inside text fields by execCommand('undo')

[14:48:13.0000] <rniwa>
AryehGregor: right now, msie/webkit undo things inside text fields by execCommand('undo')

[14:48:23.0000] <rniwa>
AryehGregor: but gecko (and presumably) and opera don't

[14:48:40.0000] <rniwa>
AryehGregor, ehsan: but this behavior might be dependent by some legacy contents though

[14:48:47.0000] <AryehGregor>
execCommand("undo") should behave exactly the same as hitting Ctrl-Z, IMO.

[14:48:51.0000] <rniwa>
i mean being able to undo things in text fields seems like a useful API

[14:48:52.0000] <AryehGregor>
To the extent feasible.

[14:49:00.0000] <rniwa>
AryehGregor: but gecko (and presumably) and opera don't

[14:49:01.0000] <rniwa>
AryehGregor, ehsan: but this behavior might be dependent by some legacy contents though

[14:49:02.0000] <AryehGregor>
execCommand("undo") should behave exactly the same as hitting Ctrl-Z, IMO.

[14:49:03.0000] <rniwa>
i mean being able to undo things in text fields seems like a useful API

[14:49:04.0000] <AryehGregor>
To the extent feasible.

[14:49:04.0000] <rniwa>
AryehGregor: that's what all browsers do

[14:49:05.0000] <rniwa>
AryehGregor: that's what all browsers do

[14:49:06.0000] <AryehGregor>
Well, Gecko likes to throw if there's no editable content on the page.

[14:49:07.0000] <rniwa>
AryehGregor: and the behavior is different between msie/webkit and gecko/opera

[14:49:21.0000] <AryehGregor>
Well, Gecko likes to throw if there's no editable content on the page.

[14:49:23.0000] <rniwa>
AryehGregor: and the behavior is different between msie/webkit and gecko/opera

[14:49:58.0000] <rniwa>
AryehGregor: because msie/webkit share the same undo manager across the entire page whereas gecko/opera have separate undo managers for each form text control

[14:50:00.0000] <rniwa>
AryehGregor: because msie/webkit share the same undo manager across the entire page whereas gecko/opera have separate undo managers for each form text control

[14:50:01.0000] <AryehGregor>
Oh.

[14:50:22.0000] <AryehGregor>
Oh.

[14:50:23.0000] <AryehGregor>
Fun.

[14:50:46.0000] <smaug____>
 execCommand('undo') could use the most recently used undomanager in the page

[14:51:00.0000] <AryehGregor>
Fun.

[14:51:00.0000] <smaug____>
/me lost some context...looking at logs

[14:51:01.0000] <smaug____>
 execCommand('undo') could use the most recently used undomanager in the page

[14:51:02.0000] <smaug____>
/me lost some context...looking at logs

[14:52:00.0000] <rniwa>
smaug____: but the problem is that "the most recently used undomanager" is different depending on the browser :)

[14:52:20.0000] <rniwa>
smaug____: but the problem is that "the most recently used undomanager" is different depending on the browser :)

[14:52:28.0000] <rniwa>
AryehGregor: yeah....

[14:52:57.0000] <AryehGregor>
What does Ctrl-Z do?  Probably it picks the undo manager based on what's focused, right?

[14:53:00.0000] <rniwa>
AryehGregor: yeah....

[14:53:01.0000] <AryehGregor>
What does Ctrl-Z do?  Probably it picks the undo manager based on what's focused, right?

[14:53:01.0000] <AryehGregor>
Why can't execCommand() do that?

[14:53:02.0000] <AryehGregor>
Why can't execCommand() do that?

[14:53:03.0000] <smaug____>
rniwa: well, you need to just fix IE and webkit ;)

[14:53:04.0000] <rniwa>
AryehGregor: no

[14:53:04.0000] <rniwa>
AryehGregor: no

[14:53:05.0000] <AryehGregor>
:/

[14:53:06.0000] <rniwa>
AryehGregor: it undoes the last editing action on the page

[14:53:10.0000] <AryehGregor>
:/

[14:53:19.0000] <rniwa>
AryehGregor: it undoes the last editing action on the page

[14:53:35.0000] <rniwa>
smaug____: the question is whether we can change our behavior or not.

[14:54:00.0000] <rniwa>
smaug____: the question is whether we can change our behavior or not.

[14:54:00.0000] <rniwa>
smaug____: also there might be a good reason MSIE/WebKit do it this way

[14:54:01.0000] <rniwa>
smaug____: also there might be a good reason MSIE/WebKit do it this way

[14:54:02.0000] <rniwa>
i just don't know the history enough to give you any meaningful answer

[14:54:19.0000] <rniwa>
i just don't know the history enough to give you any meaningful answer

[14:54:32.0000] <smaug____>
rniwa: I haven't seen any gecko bug reports  about its behavior

[14:54:52.0000] <rniwa>
smaug____: intuitively, either behavior is fine.

[14:54:59.0000] <rniwa>
user would just get used to it :)

[14:55:00.0000] <smaug____>
rniwa: I haven't seen any gecko bug reports  about its behavior

[14:55:01.0000] <rniwa>
smaug____: intuitively, either behavior is fine.

[14:55:02.0000] <rniwa>
user would just get used to it :)

[14:55:03.0000] <smaug____>
and also, IE/webkit behavior just feels odd. But sure, if there is plenty of web content which relies on it ...

[14:55:03.0000] <smaug____>
and also, IE/webkit behavior just feels odd. But sure, if there is plenty of web content which relies on it ...

[14:55:33.0000] <rniwa>
smaug____, AryehGregor: my gut tells me there are quite few IE-specific contents that rely on this behavior

[14:56:00.0000] <rniwa>
smaug____, AryehGregor: my gut tells me there are quite few IE-specific contents that rely on this behavior

[14:56:01.0000] <rniwa>
anyway, it seems like the right strategy is to bring it up on public-webapps

[14:56:02.0000] <smaug____>
yeah

[14:56:03.0000] <rniwa>
anyway, it seems like the right strategy is to bring it up on public-webapps

[14:56:17.0000] <smaug____>
yeah

[14:59:59.0000] <rniwa>
smaug____, AryehGregor, ehsan: anyway, i've got to tell you that implementing undo manager spec turned out to be much harder than I had imagined :(

[15:00:01.0000] <rniwa>
as i said there are very interesting GC implications

[15:00:09.0000] <rniwa>
as i said there are very interesting GC implications

[15:00:38.0000] <smaug____>
rniwa: what kinds of GC implications ?

[15:00:48.0000] <rniwa>
and there are lots of edge cases, including the nested transactions, that we hadn't thought through well

[15:00:57.0000] <rniwa>
smaug____: basically, it needs to be treated like event handlers

[15:01:00.0000] <smaug____>
rniwa: what kinds of GC implications ?

[15:01:01.0000] <rniwa>
and there are lots of edge cases, including the nested transactions, that we hadn't thought through well

[15:01:02.0000] <rniwa>
smaug____: basically, it needs to be treated like event handlers

[15:01:03.0000] <rniwa>
smaug____: because dom transaction objects can outlive script context :(

[15:01:07.0000] <rniwa>
smaug____: because dom transaction objects can outlive script context :(

[15:01:24.0000] <smaug____>
(I guess I should review the draft, and r- if it has only one undomanager per document. )

[15:01:49.0000] <rniwa>
smaug____: it'll add undo manager on all elements that have undoScope content attribute :)

[15:02:00.0000] <smaug____>
(I guess I should review the draft, and r- if it has only one undomanager per document. )

[15:02:00.0000] <rniwa>
smaug____: or when undoScope DOM attribute is set true

[15:02:01.0000] <rniwa>
smaug____: it'll add undo manager on all elements that have undoScope content attribute :)

[15:02:02.0000] <rniwa>
smaug____: or when undoScope DOM attribute is set true

[15:02:03.0000] <smaug____>
rniwa: I'm not sure event listener behavior is spec'ed that clearly

[15:02:19.0000] <smaug____>
rniwa: I'm not sure event listener behavior is spec'ed that clearly

[15:02:24.0000] <smaug____>
in case the script context dies

[15:03:00.0000] <smaug____>
in case the script context dies

[15:03:01.0000] <smaug____>
in any case, I don't actually know how webkit does all the GCing

[15:03:11.0000] <smaug____>
in any case, I don't actually know how webkit does all the GCing

[15:03:25.0000] <rniwa>
smaug____: that's why "interesting" :(

[15:03:53.0000] <smaug____>
in Gecko undomanager would be just cycle collectable object, holding possibly some JS objects

[15:04:00.0000] <rniwa>
smaug____: that's why "interesting" :(

[15:04:01.0000] <smaug____>
in Gecko undomanager would be just cycle collectable object, holding possibly some JS objects

[15:04:34.0000] <smaug____>
a GC isn't enough for Gecko, it needs also a CC :)

[15:05:00.0000] <smaug____>
a GC isn't enough for Gecko, it needs also a CC :)

[15:05:41.0000] <rniwa>
smaug____: what's CC?

[15:05:47.0000] <smaug____>
cycle collector

[15:05:50.0000] <rniwa>
huh

[15:05:55.0000] <rniwa>
smaug____: what's cycle collector?

[15:06:00.0000] <rniwa>
smaug____: what's CC?

[15:06:01.0000] <smaug____>
cycle collector

[15:06:02.0000] <rniwa>
huh

[15:06:03.0000] <rniwa>
smaug____: what's cycle collector?

[15:06:04.0000] <rniwa>
smaug____: does it collect objects with cycles in them?

[15:06:18.0000] <rniwa>
smaug____: does it collect objects with cycles in them?

[15:06:29.0000] <smaug____>
it is for reference counted objects

[15:06:36.0000] <rniwa>
i see

[15:07:00.0000] <smaug____>
it is for reference counted objects

[15:07:01.0000] <rniwa>
i see

[15:07:02.0000] <smaug____>
CC and GC do in principle the same thing

[15:07:07.0000] <smaug____>
CC and GC do in principle the same thing

[15:07:45.0000] <smaug____>
GC handles live objects, CC tries to find to-be-deleted objects

[15:07:55.0000] <smaug____>
kind of

[15:08:00.0000] <smaug____>
GC handles live objects, CC tries to find to-be-deleted objects

[15:08:01.0000] <smaug____>
kind of

[15:09:37.0000] <rniwa>
i see.

[15:09:42.0000] <rniwa>
/me isn't familiar with gecko's GC

[15:10:00.0000] <rniwa>
i see.

[15:10:01.0000] <rniwa>
/me isn't familiar with gecko's GC

[15:10:43.0000] <smaug____>
Spidermonkey has GC, Gecko has CC

[15:11:00.0000] <smaug____>
Spidermonkey has GC, Gecko has CC

[15:11:46.0000] <gavin>
CC is a solution to the problem caused by refcounted objects interacting with GCed objects and creating cycles

[15:12:00.0000] <gavin>
CC is a solution to the problem caused by refcounted objects interacting with GCed objects and creating cycles

[15:12:42.0000] <smaug____>
CC is also a solution for cycles which don't involve GCed objects at all.

[15:13:00.0000] <smaug____>
CC is also a solution for cycles which don't involve GCed objects at all.

[15:13:01.0000] <gavin>
true

[15:13:06.0000] <gavin>
true

[15:16:00.0000] <rniwa>
smaug____, gavin: interesting

[15:16:01.0000] <rniwa>
i don't think webkit has tht

[15:16:02.0000] <rniwa>
that*

[15:16:03.0000] <rniwa>
so we have to use clever tricks to avoid cycles :(

[15:16:06.0000] <rniwa>
smaug____, gavin: interesting

[15:16:10.0000] <rniwa>
i don't think webkit has tht

[15:16:11.0000] <rniwa>
that*

[15:16:18.0000] <rniwa>
so we have to use clever tricks to avoid cycles :(

[15:19:53.0000] <ehsan>
rniwa: how well do they work in practice?

[15:20:00.0000] <ehsan>
rniwa: how well do they work in practice?

[15:23:52.0000] <rniwa>
ehsan: i don't know

[15:23:57.0000] <rniwa>
i'm not an expert in that area

[15:24:00.0000] <rniwa>
ehsan: i don't know

[15:24:01.0000] <rniwa>
i'm not an expert in that area

[15:28:43.0000] <rniwa>
ehsan: you should ask othermaciej :)

[15:29:00.0000] <rniwa>
ehsan: you should ask othermaciej :)

[15:29:01.0000] <rniwa>
ehsan: we were just talking about callback interface yesterday

[15:29:02.0000] <rniwa>
ehsan: he seemed knowledgable in this rea

[15:29:03.0000] <rniwa>
area*

[15:29:03.0000] <rniwa>
ehsan: we were just talking about callback interface yesterday

[15:29:12.0000] <rniwa>
ehsan: he seemed knowledgable in this rea

[15:29:14.0000] <rniwa>
area*

[15:33:00.0000] <othermaciej>
rniwa: I actually don't understand how it historically works, but I think the general approach is to teach GC how to find relevant GC roots from the document so that there is no need to GC protect GC objects references from refcounted objects

[15:33:07.0000] <othermaciej>
rniwa: I actually don't understand how it historically works, but I think the general approach is to teach GC how to find relevant GC roots from the document so that there is no need to GC protect GC objects references from refcounted objects

[15:33:24.0000] <othermaciej>
s/historically/currently/

[15:34:00.0000] <othermaciej>
s/historically/currently/

[15:37:53.0000] <rniwa>
othermaciej: you mean reachable* functions?

[15:38:00.0000] <rniwa>
othermaciej: you mean reachable* functions?

[15:38:32.0000] <othermaciej>
I don't know enough to relate it to code

[15:39:00.0000] <othermaciej>
I don't know enough to relate it to code

[16:52:59.0000] <smaug____>
rniwa: ping

[16:53:01.0000] <rniwa>
smaug____: pong

[16:53:06.0000] <rniwa>
smaug____: pong

[16:53:34.0000] <smaug____>
rniwa: (haven't read your draft yet..) so when is transact callback called, and why

[16:53:42.0000] <smaug____>
er

[16:53:50.0000] <smaug____>
/me is reading this wrong

[16:53:55.0000] <rniwa>
smaug____: one of them is called immediately (execute/executeAutomatic)

[16:54:00.0000] <smaug____>
rniwa: (haven't read your draft yet..) so when is transact callback called, and why

[16:54:01.0000] <smaug____>
er

[16:54:02.0000] <smaug____>
/me is reading this wrong

[16:54:03.0000] <rniwa>
smaug____: one of them is called immediately (execute/executeAutomatic)

[16:54:04.0000] <rniwa>
smaug____: undo/redo are called when undo/redo are involked

[16:54:04.0000] <rniwa>
smaug____: undo/redo are called when undo/redo are involked

[16:56:32.0000] <smaug____>
rniwa: so transact() adds something to the stack?

[16:57:00.0000] <smaug____>
rniwa: so transact() adds something to the stack?

[16:57:01.0000] <smaug____>
and then at some point the executeAutomatic of that object is called=

[16:57:02.0000] <rniwa>
smaug____: right.

[16:57:07.0000] <smaug____>
and then at some point the executeAutomatic of that object is called=

[16:57:12.0000] <rniwa>
smaug____: right.

[16:57:25.0000] <smaug____>
s/=/?/

[16:57:28.0000] <rniwa>
smaug____: well executeAutomatic is called immediately

[16:57:38.0000] <rniwa>
smaug____: but UA records what happened happened and fixes it later

[16:57:44.0000] <rniwa>
smaug____: so executeAutomatic case is quite simple

[16:57:52.0000] <rniwa>
smaug____: tricky one is when things are manual

[16:58:00.0000] <smaug____>
s/=/?/

[16:58:01.0000] <rniwa>
smaug____: well executeAutomatic is called immediately

[16:58:02.0000] <rniwa>
smaug____: but UA records what happened happened and fixes it later

[16:58:03.0000] <rniwa>
smaug____: so executeAutomatic case is quite simple

[16:58:04.0000] <rniwa>
smaug____: tricky one is when things are manual

[16:58:05.0000] <rniwa>
smaug____: we then have to call undo/redo much later when undo/redo are actually done

[16:58:08.0000] <rniwa>
smaug____: we then have to call undo/redo much later when undo/redo are actually done

[16:58:37.0000] <smaug____>
but ok, I should read the draft...

[16:58:52.0000] <smaug____>
I just started to think if there was any use for microtasks here.

[16:58:59.0000] <smaug____>
but probably not

[16:59:00.0000] <smaug____>
but ok, I should read the draft...

[16:59:01.0000] <smaug____>
I just started to think if there was any use for microtasks here.

[16:59:02.0000] <smaug____>
but probably not

[16:59:03.0000] <smaug____>
(I saw the email about nested transactions)

[16:59:11.0000] <smaug____>
(I saw the email about nested transactions)


2012-03-13
[17:05:30.0000] <rniwa>
smaug____: interesting

[17:05:35.0000] <rniwa>
smaug____: yeah

[17:05:46.0000] <rniwa>
smaug____: currently, there's a bit of timing issue with respect to mutation obserers

[17:06:00.0000] <rniwa>
smaug____: interesting

[17:06:01.0000] <rniwa>
smaug____: yeah

[17:06:02.0000] <rniwa>
smaug____: currently, there's a bit of timing issue with respect to mutation obserers

[17:06:03.0000] <rniwa>
smaug____: some editor developers have explictily told me that they want to see what changed in a given DOM transation

[17:06:04.0000] <rniwa>
smaug____: and we told them that they can use mutation observers

[17:06:10.0000] <rniwa>
smaug____: some editor developers have explictily told me that they want to see what changed in a given DOM transation

[17:06:18.0000] <rniwa>
smaug____: and we told them that they can use mutation observers

[17:06:34.0000] <rniwa>
smaug____: however, mutation observer only notifies at the end of a micro task

[17:06:51.0000] <rniwa>
smaug____: whereas multiple transactions can be added at once within a single micro task

[17:07:00.0000] <rniwa>
smaug____: however, mutation observer only notifies at the end of a micro task

[17:07:01.0000] <rniwa>
smaug____: whereas multiple transactions can be added at once within a single micro task

[17:07:02.0000] <rniwa>
I think AryehGregor and ehsan didn't want to add a duplicate API

[17:07:03.0000] <smaug____>
right

[17:07:13.0000] <rniwa>
I think AryehGregor and ehsan didn't want to add a duplicate API

[17:07:22.0000] <smaug____>
right

[17:07:39.0000] <rniwa>
also, the only case where catching the list of DOM mutations is important is when UA does something per user actions

[17:07:48.0000] <rniwa>
not then they themselves modify DOM

[17:07:55.0000] <rniwa>
because then they'll know what had happened

[17:08:00.0000] <rniwa>
also, the only case where catching the list of DOM mutations is important is when UA does something per user actions

[17:08:01.0000] <rniwa>
not then they themselves modify DOM

[17:08:02.0000] <rniwa>
because then they'll know what had happened

[17:08:03.0000] <rniwa>
but then the API is kind of inconsistent in that way :(

[17:08:04.0000] <rniwa>
haven't figured out a way to \ this yet

[17:08:06.0000] <rniwa>
but then the API is kind of inconsistent in that way :(

[17:08:18.0000] <rniwa>
haven't figured out a way to \ this yet

[17:08:32.0000] <rniwa>
smaug____: i'm all ears if you have some suggestion to resolve this issue

[17:09:00.0000] <rniwa>
smaug____: i'm all ears if you have some suggestion to resolve this issue

[17:09:24.0000] <smaug____>
need to think about, after reading the API

[17:09:43.0000] <smaug____>
/me adds undomanager to the list of things to read and review

[17:10:00.0000] <smaug____>
need to think about, after reading the API

[17:10:01.0000] <smaug____>
/me adds undomanager to the list of things to read and review

[17:10:27.0000] <rniwa>
smaug____: :)

[17:10:50.0000] <rniwa>
smaug____: i'm a bit bised here but undo manager api is one of exciting new APIs for those people who make productivity apps on the web

[17:11:00.0000] <rniwa>
smaug____: :)

[17:11:01.0000] <rniwa>
smaug____: i'm a bit bised here but undo manager api is one of exciting new APIs for those people who make productivity apps on the web

[17:11:02.0000] <smaug____>
what is "productivity apps" ?

[17:11:20.0000] <smaug____>
what is "productivity apps" ?

[17:11:48.0000] <rniwa>
smaug____: productivity apps as in word processors, spreadsheet app, presentation app, etc...

[17:11:56.0000] <rniwa>
smaug____: things that microsoft office do

[17:12:00.0000] <rniwa>
smaug____: productivity apps as in word processors, spreadsheet app, presentation app, etc...

[17:12:01.0000] <rniwa>
smaug____: things that microsoft office do

[17:12:02.0000] <rniwa>
smaug____: or any other business-related apps that create things

[17:12:14.0000] <rniwa>
smaug____: or any other business-related apps that create things

[17:12:25.0000] <smaug____>
ah, those things I don't use :)

[17:12:27.0000] <rniwa>
smaug____: as supposed to games, etc...

[17:12:40.0000] <smaug____>
not that I play games either :)

[17:13:00.0000] <smaug____>
ah, those things I don't use :)

[17:13:01.0000] <rniwa>
smaug____: as supposed to games, etc...

[17:13:01.0000] <rniwa>
i don't play games on my computer ever

[17:13:02.0000] <smaug____>
not that I play games either :)

[17:13:03.0000] <rniwa>
i don't play games on my computer ever

[17:13:04.0000] <rniwa>
so i'm less appreciative of lots of media/device related apis that have been introdued...

[17:13:05.0000] <rniwa>
introduced*

[17:13:18.0000] <rniwa>
so i'm less appreciative of lots of media/device related apis that have been introdued...

[17:13:20.0000] <rniwa>
introduced*

[17:16:00.0000] <smaug____>
I could still like to see good audio APIs, for music

[17:16:12.0000] <smaug____>
I could still like to see good audio APIs, for music

[17:17:00.0000] <rniwa>
smaug____: yeah, that's true

[17:17:13.0000] <rniwa>
smaug____: yeah, that's true

[17:26:00.0000] <zewt>
audio apis for music are trivial, compared to ones for games

[17:26:15.0000] <zewt>
audio apis for music are trivial, compared to ones for games

[17:35:00.0000] <smaug____>
zewt: really? requirements are higher, especially if you need to handle input and output

[17:35:02.0000] <smaug____>
zewt: really? requirements are higher, especially if you need to handle input and output

[17:44:00.0000] <zewt>
there's not a whole lot to "play song from URL"; there's a huge amount involved in games

[17:44:12.0000] <zewt>
there's not a whole lot to "play song from URL"; there's a huge amount involved in games

[17:46:23.0000] <smaug____>
zewt: I mean producing music

[17:47:00.0000] <smaug____>
zewt: I mean producing music

[17:47:52.0000] <smaug____>
games are easier, since for example with effects you don't have to be so exact. reverb can be just some reverb

[17:48:00.0000] <smaug____>
games are easier, since for example with effects you don't have to be so exact. reverb can be just some reverb

[17:48:01.0000] <smaug____>
with music you need to know the results exactly

[17:48:05.0000] <smaug____>
with music you need to know the results exactly

[17:51:00.0000] <zewt>
games are hard; you need low latency, and it wants lots of features (3d directionality, occlusions, time shifting, other filters, all of it changing in realtime)

[17:51:02.0000] <zewt>
games are hard; you need low latency, and it wants lots of features (3d directionality, occlusions, time shifting, other filters, all of it changing in realtime)

[17:51:30.0000] <smaug____>
you need very low latency with music

[17:51:51.0000] <smaug____>
and you want all features in music production

[17:51:56.0000] <zewt>
low latency playing back music is fairly straightforward; harder to do with complex effects

[17:52:00.0000] <smaug____>
you need very low latency with music

[17:52:01.0000] <smaug____>
and you want all features in music production

[17:52:02.0000] <zewt>
low latency playing back music is fairly straightforward; harder to do with complex effects

[17:52:33.0000] <smaug____>
I talking about a DAW implemented in HTML+JS :)

[17:53:00.0000] <smaug____>
I talking about a DAW implemented in HTML+JS :)

[18:01:30.0000] <Hixie>
i added some examples for arcTo() in http://www.whatwg.org/specs/web-apps/current-work/#building-paths

[18:02:00.0000] <Hixie>
i added some examples for arcTo() in http://www.whatwg.org/specs/web-apps/current-work/#building-paths

[18:03:27.0000] <Hixie>
and made arcTo() support ellipses, though i haven't added examples for that yet

[18:03:35.0000] <Hixie>
i'll make arc() support ellipses tomorrow

[18:03:43.0000] <Hixie>
(spent way too much time today drawing those danged diagrams)

[18:04:00.0000] <Hixie>
and made arcTo() support ellipses, though i haven't added examples for that yet

[18:04:01.0000] <Hixie>
i'll make arc() support ellipses tomorrow

[18:04:02.0000] <Hixie>
(spent way too much time today drawing those danged diagrams)

[18:51:00.0000] <MikeSmith>
scott_gonzalez: I have something ready for you guys to try out

[18:51:16.0000] <MikeSmith>
scott_gonzalez: I have something ready for you guys to try out

[18:51:49.0000] <scott_gonzalez>
MikeSmith: Awesome. Where can I download it?

[18:52:00.0000] <scott_gonzalez>
MikeSmith: Awesome. Where can I download it?

[18:52:58.0000] <MikeSmith>
scott_gonzalez: I've not written up the how-to on it yet, so lemme tell you here

[18:53:00.0000] <MikeSmith>
scott_gonzalez: I've not written up the how-to on it yet, so lemme tell you here

[18:53:01.0000] <MikeSmith>
first thing you need this:

[18:53:02.0000] <MikeSmith>
http://validator.github.com/jars/

[18:53:03.0000] <MikeSmith>
http://validator.github.com/jars/jing-html.jar

[18:53:07.0000] <MikeSmith>
first thing you need this:

[18:53:11.0000] <MikeSmith>
http://validator.github.com/jars/

[18:53:20.0000] <MikeSmith>
http://validator.github.com/jars/jing-html.jar

[18:54:00.0000] <scott_gonzalez>
got it

[18:54:19.0000] <scott_gonzalez>
got it

[18:55:00.0000] <MikeSmith>
then this:

[18:55:01.0000] <MikeSmith>
http://about.validator.nu/htmlparser/htmlparser-1.3.1.zip

[18:55:04.0000] <MikeSmith>
then this:

[18:55:06.0000] <MikeSmith>
http://about.validator.nu/htmlparser/htmlparser-1.3.1.zip

[18:56:00.0000] <MikeSmith>
you just need the jar file from that

[18:56:01.0000] <MikeSmith>
not the sources

[18:56:12.0000] <MikeSmith>
you just need the jar file from that

[18:56:15.0000] <MikeSmith>
not the sources

[18:56:28.0000] <MikeSmith>
htmlparser-1.3.1.jar

[18:56:31.0000] <scott_gonzalez>
ok

[18:57:00.0000] <MikeSmith>
htmlparser-1.3.1.jar

[18:57:01.0000] <scott_gonzalez>
ok

[18:57:40.0000] <MikeSmith>
then the last thing is this:

[18:57:41.0000] <MikeSmith>
http://kent.dl.sourceforge.net/sourceforge/saxon/saxonb9-1-0-2j.zip

[18:57:47.0000] <MikeSmith>
last jar needed

[18:58:00.0000] <MikeSmith>
then the last thing is this:

[18:58:01.0000] <MikeSmith>
http://kent.dl.sourceforge.net/sourceforge/saxon/saxonb9-1-0-2j.zip

[18:58:02.0000] <MikeSmith>
last jar needed

[18:59:00.0000] <scott_gonzalez>
The "saxonb9-1-0-2j.zip" file could not be found or is not available. Please select another file.

[18:59:21.0000] <scott_gonzalez>
The "saxonb9-1-0-2j.zip" file could not be found or is not available. Please select another file.

[18:59:47.0000] <MikeSmith>
oh

[18:59:53.0000] <scott_gonzalez>
http://sourceforge.net/projects/saxon/files/Saxon-B/9.1.0.8/saxonb9-1-0-8j.zip/download ?

[19:00:00.0000] <MikeSmith>
oh

[19:00:01.0000] <scott_gonzalez>
http://sourceforge.net/projects/saxon/files/Saxon-B/9.1.0.8/saxonb9-1-0-8j.zip/download ?

[19:00:01.0000] <MikeSmith>
yeah

[19:00:03.0000] <MikeSmith>
whatever the latest one is will be fine

[19:00:12.0000] <MikeSmith>
whatever the latest one is will be fine

[19:02:00.0000] <scott_gonzalez>
Do I need all of the saxon jars or just specific ones?

[19:02:08.0000] <scott_gonzalez>
Do I need all of the saxon jars or just specific ones?

[19:03:44.0000] <MikeSmith>
just the one

[19:04:00.0000] <MikeSmith>
just the one

[19:04:01.0000] <MikeSmith>
saxon9he.jar I think

[19:04:09.0000] <MikeSmith>
saxon9he.jar I think

[19:05:00.0000] <MikeSmith>
oh

[19:05:01.0000] <MikeSmith>
just saxon9.jar I guess

[19:05:02.0000] <scott_gonzalez>
ok

[19:05:03.0000] <MikeSmith>
yeah

[19:05:03.0000] <MikeSmith>
oh

[19:05:14.0000] <MikeSmith>
just saxon9.jar I guess

[19:05:21.0000] <scott_gonzalez>
ok

[19:05:22.0000] <MikeSmith>
yeah

[19:05:53.0000] <MikeSmith>
are all your docs HTML? I mean served as text/html?

[19:06:00.0000] <MikeSmith>
are all your docs HTML? I mean served as text/html?

[19:06:00.0000] <scott_gonzalez>
yeah

[19:06:01.0000] <scott_gonzalez>
yeah

[19:06:02.0000] <MikeSmith>
OK, so you need this:

[19:06:03.0000] <MikeSmith>
http://validator.github.com/schemas/html5.rnc

[19:06:17.0000] <MikeSmith>
OK, so you need this:

[19:06:19.0000] <MikeSmith>
http://validator.github.com/schemas/html5.rnc

[19:06:37.0000] <MikeSmith>
and this:

[19:06:38.0000] <MikeSmith>
http://validator.github.com/schemas/assertions.sch

[19:07:00.0000] <MikeSmith>
and this:

[19:07:01.0000] <MikeSmith>
http://validator.github.com/schemas/assertions.sch

[19:08:46.0000] <scott_gonzalez>
ok

[19:09:00.0000] <scott_gonzalez>
ok

[19:17:39.0000] <scott_gonzalez>
MikeSmith: I assume there's more (like how to run the validation)?

[19:17:54.0000] <MikeSmith>
yeah, sorry, got distracted

[19:18:00.0000] <scott_gonzalez>
MikeSmith: I assume there's more (like how to run the validation)?

[19:18:00.0000] <MikeSmith>
https://raw.github.com/validator/schemas/gh-pages/tools/validate-html.sh

[19:18:01.0000] <MikeSmith>
yeah, sorry, got distracted

[19:18:02.0000] <MikeSmith>
https://raw.github.com/validator/schemas/gh-pages/tools/validate-html.sh

[19:24:00.0000] <scott_gonzalez>
MikeSmith: https://gist.github.com/2026207

[19:24:01.0000] <MikeSmith>
/me looks

[19:24:02.0000] <scott_gonzalez>
MikeSmith: https://gist.github.com/2026207

[19:24:17.0000] <MikeSmith>
/me looks

[19:25:25.0000] <MikeSmith>
scott_gonzalez: seems like it's not finding the htmlparser in your java classpath

[19:25:40.0000] <MikeSmith>
maybe because of the filename

[19:26:00.0000] <MikeSmith>
scott_gonzalez: seems like it's not finding the htmlparser in your java classpath

[19:26:01.0000] <MikeSmith>
maybe because of the filename

[19:26:02.0000] <scott_gonzalez>
Oh, right, the saxon file is differnet.

[19:26:03.0000] <MikeSmith>
need to use htmlparser-1.3.1.jar instead

[19:26:08.0000] <scott_gonzalez>
Oh, right, the saxon file is differnet.

[19:26:09.0000] <MikeSmith>
need to use htmlparser-1.3.1.jar instead

[19:27:27.0000] <scott_gonzalez>
Yeah, that and saxon9.jar instead of saxon9he.jar

[19:27:34.0000] <scott_gonzalez>
It ran without errors that time.

[19:27:37.0000] <scott_gonzalez>
Let me try an invalid doc.

[19:28:00.0000] <scott_gonzalez>
Yeah, that and saxon9.jar instead of saxon9he.jar

[19:28:01.0000] <scott_gonzalez>
It ran without errors that time.

[19:28:02.0000] <scott_gonzalez>
Let me try an invalid doc.

[19:29:38.0000] <scott_gonzalez>
Seems to be working :-)

[19:29:40.0000] <scott_gonzalez>
Thanks.

[19:29:48.0000] <MikeSmith>
OK

[19:30:00.0000] <scott_gonzalez>
Seems to be working :-)

[19:30:01.0000] <scott_gonzalez>
Thanks.

[19:30:02.0000] <MikeSmith>
OK

[19:30:03.0000] <MikeSmith>
there are almost certainly some bugs in that schema that will cause it to report some attribute values as invalid when in fact they are valid

[19:30:22.0000] <MikeSmith>
there are almost certainly some bugs in that schema that will cause it to report some attribute values as invalid when in fact they are valid

[19:30:27.0000] <MikeSmith>
I don't know which ones

[19:30:34.0000] <MikeSmith>
but if you find any cases of that, let me know

[19:31:00.0000] <MikeSmith>
I don't know which ones

[19:31:01.0000] <MikeSmith>
but if you find any cases of that, let me know

[19:31:02.0000] <MikeSmith>
also, one big limitation of this is that it does not understand about data-* attributes

[19:31:03.0000] <scott_gonzalez>
I'll try to get this into our build system this week and I'll let you know how it goes.

[19:31:04.0000] <MikeSmith>
great

[19:31:05.0000] <scott_gonzalez>
Will it complain about them being invalid?

[19:31:05.0000] <MikeSmith>
also, one big limitation of this is that it does not understand about data-* attributes

[19:31:06.0000] <scott_gonzalez>
I'll try to get this into our build system this week and I'll let you know how it goes.

[19:31:10.0000] <MikeSmith>
great

[19:31:22.0000] <scott_gonzalez>
Will it complain about them being invalid?

[19:31:28.0000] <MikeSmith>
yes

[19:31:39.0000] <scott_gonzalez>
:-/

[19:31:46.0000] <scott_gonzalez>
We can just filter that out on our end for now.

[19:32:00.0000] <MikeSmith>
yes

[19:32:01.0000] <scott_gonzalez>
:-/

[19:32:02.0000] <scott_gonzalez>
We can just filter that out on our end for now.

[19:32:03.0000] <MikeSmith>
yeah, you'll need to do that

[19:32:04.0000] <MikeSmith>
yeah, you'll need to do that

[19:32:38.0000] <MikeSmith>
there is no way I can tell this jing tool about data-* attributes -- not without hacking it further

[19:33:00.0000] <MikeSmith>
there is no way I can tell this jing tool about data-* attributes -- not without hacking it further

[19:33:01.0000] <MikeSmith>
validator.nu uses a special pre-processing filter to deal with data-*

[19:33:19.0000] <MikeSmith>
validator.nu uses a special pre-processing filter to deal with data-*

[19:33:51.0000] <MikeSmith>
scott_gonzalez: anyway, one more thing: If you want it to run faster, you can cut out the second java call

[19:34:00.0000] <MikeSmith>
scott_gonzalez: anyway, one more thing: If you want it to run faster, you can cut out the second java call

[19:34:01.0000] <MikeSmith>
the one that uses the assertions.sch file

[19:34:02.0000] <MikeSmith>
of course you may miss some errors if you do that

[19:34:02.0000] <MikeSmith>
the one that uses the assertions.sch file

[19:34:03.0000] <scott_gonzalez>
What's that one doing?

[19:34:16.0000] <MikeSmith>
of course you may miss some errors if you do that

[19:34:17.0000] <scott_gonzalez>
What's that one doing?

[19:34:34.0000] <MikeSmith>
it's checking stuff that can't be checked with just the html5.rnc schema

[19:34:56.0000] <MikeSmith>
e.g., stuff that depends on checking the whole tree

[19:35:00.0000] <MikeSmith>
it's checking stuff that can't be checked with just the html5.rnc schema

[19:35:01.0000] <MikeSmith>
e.g., stuff that depends on checking the whole tree

[19:35:02.0000] <MikeSmith>
but it is relatively slow

[19:35:12.0000] <MikeSmith>
but it is relatively slow

[19:35:52.0000] <MikeSmith>
because I think it basically constructs a DOM and uses XSLT on the backend

[19:36:00.0000] <MikeSmith>
because I think it basically constructs a DOM and uses XSLT on the backend

[19:36:43.0000] <scott_gonzalez>
Ok, in that case we may just have three build targets for this. One for each of these and one that runs both of those targets.

[19:37:00.0000] <scott_gonzalez>
Ok, in that case we may just have three build targets for this. One for each of these and one that runs both of those targets.

[19:37:01.0000] <MikeSmith>
sounds good

[19:37:22.0000] <MikeSmith>
sounds good

[19:37:37.0000] <MikeSmith>
once you get it set up, I'd be curious to know about the times

[19:38:00.0000] <MikeSmith>
once you get it set up, I'd be curious to know about the times

[19:38:01.0000] <MikeSmith>
I think without that assertions check it will probably check most documents in 1 second or less

[19:38:02.0000] <MikeSmith>
probably 2 seconds at the very most

[19:38:05.0000] <MikeSmith>
I think without that assertions check it will probably check most documents in 1 second or less

[19:38:19.0000] <MikeSmith>
probably 2 seconds at the very most

[19:38:45.0000] <scott_gonzalez>
I'll let you know what we're seeing once it's all set up.

[19:38:48.0000] <MikeSmith>
thanks

[19:39:00.0000] <scott_gonzalez>
I'll let you know what we're seeing once it's all set up.

[19:39:01.0000] <MikeSmith>
thanks

[19:39:40.0000] <scott_gonzalez>
Thanks for getting this together.

[19:40:00.0000] <scott_gonzalez>
Thanks for getting this together.

[19:40:49.0000] <scott_gonzalez>
Now that I've got that working, I'm heading to bed.

[19:40:52.0000] <scott_gonzalez>
Have a good night.

[19:40:55.0000] <MikeSmith>
cheers

[19:41:00.0000] <scott_gonzalez>
Now that I've got that working, I'm heading to bed.

[19:41:01.0000] <scott_gonzalez>
Have a good night.

[19:41:02.0000] <MikeSmith>
cheers

[20:07:00.0000] <kennyluck>
I can't believe that CSS2.1 has been having an example that doesn't work in browsers for 5+ years.  → http://www.w3.org/TR/CSS2/visuren.html#comp-float ('clear' doesn't apply to <span>)

[20:07:12.0000] <kennyluck>
I can't believe that CSS2.1 has been having an example that doesn't work in browsers for 5+ years.  → http://www.w3.org/TR/CSS2/visuren.html#comp-float ('clear' doesn't apply to <span>)

[20:07:24.0000] <kennyluck>
more than 5+ years I would guess… anyway

[20:08:00.0000] <kennyluck>
more than 5+ years I would guess… anyway

[20:19:00.0000] <heycam>
Hixie, Ms2ger was right you can't distinguish (five doubles and a boolean) from (six doubles) -- all primitive types and DOMString are considered "undistinguishable" when it comes to overloading

[20:19:17.0000] <heycam>
Hixie, Ms2ger was right you can't distinguish (five doubles and a boolean) from (six doubles) -- all primitive types and DOMString are considered "undistinguishable" when it comes to overloading

[20:19:38.0000] <Hixie>
/me sad

[20:19:40.0000] <heycam>
Hixie, however you could always have a single operation and use "any" for the final arg type, if you must

[20:19:57.0000] <heycam>
Hixie, though I would agree with AryehGregor it sounds like it's verging on a confusing overload

[20:20:00.0000] <Hixie>
/me sad

[20:20:01.0000] <heycam>
Hixie, however you could always have a single operation and use "any" for the final arg type, if you must

[20:20:02.0000] <heycam>
Hixie, though I would agree with AryehGregor it sounds like it's verging on a confusing overload

[20:20:24.0000] <Hixie>
the specific example is arc() here: http://www.whatwg.org/specs/web-apps/current-work/#building-paths

[20:20:31.0000] <Hixie>
look at the domintro description to see what i'm going for

[20:20:34.0000] <heycam>
/me looks

[20:20:50.0000] <Hixie>
(and bask in my pretty drawings just before it, which i spent all afternoon working on)

[20:21:00.0000] <Hixie>
the specific example is arc() here: http://www.whatwg.org/specs/web-apps/current-work/#building-paths

[20:21:01.0000] <Hixie>
look at the domintro description to see what i'm going for

[20:21:02.0000] <heycam>
/me looks

[20:21:03.0000] <Hixie>
(and bask in my pretty drawings just before it, which i spent all afternoon working on)

[20:22:29.0000] <heycam>
Hixie, so this is arcTo()?

[20:22:37.0000] <Hixie>
no, arc()

[20:22:40.0000] <Hixie>
arcTo() is fine

[20:22:43.0000] <Hixie>
no ambiguity

[20:22:48.0000] <heycam>
oh below, I see

[20:23:00.0000] <heycam>
Hixie, so this is arcTo()?

[20:23:01.0000] <Hixie>
no, arc()

[20:23:02.0000] <Hixie>
arcTo() is fine

[20:23:03.0000] <Hixie>
no ambiguity

[20:23:04.0000] <heycam>
oh below, I see

[20:23:05.0000] <heycam>
optional arguments in the middle of the argument list?

[20:23:06.0000] <heycam>
please no

[20:23:06.0000] <heycam>
optional arguments in the middle of the argument list?

[20:23:07.0000] <heycam>
:)(

[20:23:07.0000] <heycam>
please no

[20:23:12.0000] <heycam>
:)(

[20:23:27.0000] <Hixie>
well it'd be silly to have the radii split apart with a boolean in the middle

[20:23:49.0000] <heycam>
put angles before radii?

[20:24:00.0000] <Hixie>
well it'd be silly to have the radii split apart with a boolean in the middle

[20:24:01.0000] <heycam>
put angles before radii?

[20:24:02.0000] <Hixie>
i can't change the existing signature

[20:24:03.0000] <Hixie>
the method today exists, just with one radius

[20:24:13.0000] <Hixie>
i can't change the existing signature

[20:24:20.0000] <Hixie>
the method today exists, just with one radius

[20:24:29.0000] <heycam>
oh

[20:25:00.0000] <heycam>
oh

[20:25:01.0000] <heycam>
I like the pictures though! ;)

[20:25:02.0000] <Hixie>
:-D

[20:25:14.0000] <heycam>
I like the pictures though! ;)

[20:25:20.0000] <Hixie>
:-D

[20:25:57.0000] <heycam>
hmm I don't have any good suggestion at the moment, except to say that I'm really not found of optional arguments in the middle of the arg list

[20:26:00.0000] <heycam>
hmm I don't have any good suggestion at the moment, except to say that I'm really not found of optional arguments in the middle of the arg list

[20:26:39.0000] <Hixie>
well i'm no fan either but i don't really see a better solution here

[20:27:00.0000] <Hixie>
well i'm no fan either but i don't really see a better solution here

[20:27:01.0000] <heycam>
separately named functions?

[20:27:13.0000] <heycam>
separately named functions?

[20:27:28.0000] <heycam>
passing [radiusX, radiusY] as the third argument?

[20:27:37.0000] <heycam>
(second suggestion slightly in jest)

[20:28:00.0000] <heycam>
passing [radiusX, radiusY] as the third argument?

[20:28:01.0000] <heycam>
(second suggestion slightly in jest)

[20:28:38.0000] <Hixie>
arc() and arcEllipse() would be kinda weird in this api, given the rest of it

[20:29:00.0000] <Hixie>
arc() and arcEllipse() would be kinda weird in this api, given the rest of it

[20:29:01.0000] <Hixie>
the array idea wouldn't be so bad if we were already doing it for all the coordinates, but doing it just for two radii, yeah

[20:29:01.0000] <Hixie>
the array idea wouldn't be so bad if we were already doing it for all the coordinates, but doing it just for two radii, yeah

[20:29:02.0000] <Hixie>
seems a bit silly

[20:29:06.0000] <Hixie>
seems a bit silly

[20:46:00.0000] <sicking>
Hixie: hey, do you have an eta for looking at the .readyState bugs that I filed? I have a feeling that if we're going to get MS to change their WebSocket implementation we need to act fast

[20:46:22.0000] <sicking>
Hixie: hey, do you have an eta for looking at the .readyState bugs that I filed? I have a feeling that if we're going to get MS to change their WebSocket implementation we need to act fast

[20:46:43.0000] <sicking>
/me isn't sure if IE10 previews has had EventSource support

[20:47:00.0000] <sicking>
/me isn't sure if IE10 previews has had EventSource support

[20:48:23.0000] <Hixie>
let me look now

[20:48:48.0000] <Hixie>
is this 16223 and 16224?

[20:49:00.0000] <Hixie>
let me look now

[20:49:01.0000] <Hixie>
is this 16223 and 16224?

[20:49:02.0000] <Hixie>
if you hadn't brought them to my attention, eta would have been several months :-)

[20:49:14.0000] <Hixie>
if you hadn't brought them to my attention, eta would have been several months :-)

[20:49:24.0000] <Hixie>
but eta can be a few minutes now

[20:49:50.0000] <Hixie>
sicking: what's wrong with "if (ws.readyState == 0) { ... }" ?

[20:50:00.0000] <Hixie>
but eta can be a few minutes now

[20:50:01.0000] <Hixie>
sicking: what's wrong with "if (ws.readyState == 0) { ... }" ?

[20:50:24.0000] <sicking>
Hixie: it's unreadable to humans

[20:50:37.0000] <Hixie>
it's readable fine

[20:50:45.0000] <sicking>
really?

[20:50:53.0000] <Hixie>
i can't say i've ever had a problem with xmlhttprequest.readyState == 4

[20:51:00.0000] <sicking>
Hixie: it's unreadable to humans

[20:51:01.0000] <Hixie>
it's readable fine

[20:51:02.0000] <sicking>
really?

[20:51:03.0000] <Hixie>
i can't say i've ever had a problem with xmlhttprequest.readyState == 4

[20:51:04.0000] <sicking>
you're the first person i hear say that

[20:51:22.0000] <sicking>
you're the first person i hear say that

[20:51:24.0000] <sicking>
well..

[20:51:26.0000] <sicking>
ok

[20:51:33.0000] <sicking>
so constants are in general bad because they are hard to remember

[20:51:41.0000] <Hixie>
there's only like 3 states for eventsource and 4 states for websocket

[20:51:48.0000] <Hixie>
it's not like this is going to be a huge deal

[20:52:00.0000] <sicking>
well..

[20:52:01.0000] <sicking>
ok

[20:52:02.0000] <sicking>
so constants are in general bad because they are hard to remember

[20:52:02.0000] <Hixie>
i agree in principle with using strings, and have moved to that style for new things

[20:52:03.0000] <Hixie>
there's only like 3 states for eventsource and 4 states for websocket

[20:52:04.0000] <Hixie>
it's not like this is going to be a huge deal

[20:52:05.0000] <Hixie>
i agree in principle with using strings, and have moved to that style for new things

[20:52:06.0000] <sicking>
which makes it even worse, since you'll likely have to listen for state 3 for ES and state 4 for WS

[20:52:07.0000] <Hixie>
but i'm not sure it's worth breaking shipping implementations here

[20:52:08.0000] <Hixie>
you don't in practice have to listen to any of the states

[20:52:08.0000] <Hixie>
but i'm not sure it's worth breaking shipping implementations here

[20:52:09.0000] <Hixie>
you just use the events

[20:52:18.0000] <Hixie>
you don't in practice have to listen to any of the states

[20:52:20.0000] <Hixie>
you just use the events

[20:52:34.0000] <sicking>
Hixie: i think we at mozilla would be happy to change both ES and WS, but I can't speak for other implementations of course

[20:52:50.0000] <Hixie>
honestly we could probably remove readyState and it wouldn't remove any use cases

[20:53:00.0000] <sicking>
Hixie: i think we at mozilla would be happy to change both ES and WS, but I can't speak for other implementations of course

[20:53:01.0000] <Hixie>
honestly we could probably remove readyState and it wouldn't remove any use cases

[20:53:02.0000] <sicking>
Hixie: sure, you'd just make developer ergonomics worse

[20:53:03.0000] <sicking>
but all apps would still be implementable

[20:53:15.0000] <sicking>
Hixie: sure, you'd just make developer ergonomics worse

[20:53:23.0000] <sicking>
but all apps would still be implementable

[20:53:47.0000] <Hixie>
how would you even use readyState in an app, other than for debugging?

[20:53:51.0000] <sicking>
if you want to push for removing readystate instead i'm ok with that. As long as we go for string values if we decide not to

[20:54:00.0000] <Hixie>
how would you even use readyState in an app, other than for debugging?

[20:54:00.0000] <Hixie>
i don't want to push for changing anything

[20:54:01.0000] <sicking>
if you want to push for removing readystate instead i'm ok with that. As long as we go for string values if we decide not to

[20:54:01.0000] <Hixie>
churn is bad

[20:54:02.0000] <Hixie>
i don't want to push for changing anything

[20:54:03.0000] <Hixie>
churn is bad

[20:54:04.0000] <Hixie>
we should just leave it as is and learn for the future

[20:54:07.0000] <Hixie>
we should just leave it as is and learn for the future

[20:54:25.0000] <sicking>
Hixie: ok, please state so in the bug so I can disagree with you there :)

[20:54:29.0000] <Hixie>
k :-)

[20:55:00.0000] <sicking>
Hixie: ok, please state so in the bug so I can disagree with you there :)

[20:55:01.0000] <Hixie>
k :-)

[20:55:30.0000] <sicking>
won't get to in until tomorrow, but i'll comment then

[20:56:00.0000] <sicking>
won't get to in until tomorrow, but i'll comment then

[20:57:56.0000] <Hixie>
sicking: fwiw in case there's anything else you want me to look at in the near future, my plan is to work on canvas for a while, and then work on this Web Intents stuff

[20:58:00.0000] <Hixie>
sicking: fwiw in case there's anything else you want me to look at in the near future, my plan is to work on canvas for a while, and then work on this Web Intents stuff

[20:58:01.0000] <Hixie>
sicking: and after that, go back to dealing with feedback in a first-come-first-served manner (at which i'm about 6 months behind)

[20:58:12.0000] <Hixie>
sicking: and after that, go back to dealing with feedback in a first-come-first-served manner (at which i'm about 6 months behind)

[20:58:31.0000] <Hixie>
sicking: for canvas i'm working down this list http://wiki.whatwg.org/wiki/Canvas#Proposals

[20:58:42.0000] <sicking>
Hixie: cool, thanks

[20:59:00.0000] <Hixie>
sicking: for canvas i'm working down this list http://wiki.whatwg.org/wiki/Canvas#Proposals

[20:59:00.0000] <Hixie>
sicking: but as usual i'm happy to prioritise stuff if there's anything urgent

[20:59:01.0000] <sicking>
Hixie: cool, thanks

[20:59:02.0000] <Hixie>
sicking: but as usual i'm happy to prioritise stuff if there's anything urgent

[20:59:27.0000] <sicking>
sounds good

[21:00:00.0000] <sicking>
sounds good

[21:02:46.0000] <zewt>
"consistency with XHR" seems more often an argument for bad things than good things, heh

[21:03:00.0000] <zewt>
"consistency with XHR" seems more often an argument for bad things than good things, heh

[21:16:41.0000] <rstuppi>
Does anyone know of an IRC channel for HTML5 Boilerplate questions?

[21:17:00.0000] <rstuppi>
Does anyone know of an IRC channel for HTML5 Boilerplate questions?

[21:28:30.0000] <kennyluck>
rstuppi, #html5 maybe?

[21:29:00.0000] <kennyluck>
rstuppi, #html5 maybe?

[22:24:51.0000] <MikeSmith>
should <meta name="description" itemprop="description" content="Some Description"> be valid?

[22:24:57.0000] <MikeSmith>
https://www.w3.org/Bugs/Public/show_bug.cgi?id=16342

[22:25:00.0000] <MikeSmith>
should <meta name="description" itemprop="description" content="Some Description"> be valid?

[22:25:01.0000] <MikeSmith>
https://www.w3.org/Bugs/Public/show_bug.cgi?id=16342

[22:33:00.0000] <MikeSmith>
nm

[22:33:01.0000] <MikeSmith>
found "If a meta element has an itemprop attribute, the name, http-equiv, and charset attributes must be omitted, and the content attribute must be present."

[22:33:12.0000] <MikeSmith>
nm

[22:33:18.0000] <MikeSmith>
found "If a meta element has an itemprop attribute, the name, http-equiv, and charset attributes must be omitted, and the content attribute must be present."

[22:34:00.0000] <MikeSmith>
such a great idea it was to split out microdata from the spec

[22:34:01.0000] <MikeSmith>
makes things much easier and clearer for users

[22:34:08.0000] <MikeSmith>
such a great idea it was to split out microdata from the spec

[22:34:19.0000] <MikeSmith>
makes things much easier and clearer for users

[22:47:52.0000] <Hixie>
MikeSmith: use the whatwg spec :-)

[22:48:00.0000] <Hixie>
MikeSmith: use the whatwg spec :-)

[22:49:40.0000] <MikeSmith>
Hixie: I like things "modularized"

[22:49:47.0000] <MikeSmith>
with extensibility

[22:50:00.0000] <MikeSmith>
Hixie: I like things "modularized"

[22:50:01.0000] <MikeSmith>
with extensibility

[22:50:50.0000] <MikeSmith>
plus a lot of ABNF

[22:51:00.0000] <MikeSmith>
plus a lot of ABNF

[22:51:00.0000] <MikeSmith>
then I know I'm reading a real spec

[22:51:01.0000] <MikeSmith>
then I know I'm reading a real spec

[22:52:35.0000] <Hixie>
mmm

[22:52:38.0000] <Hixie>
modularisation

[22:53:00.0000] <Hixie>
mmm

[22:53:01.0000] <Hixie>
modularisation

[23:01:28.0000] <MikeSmith>
Hixie: could you kindly update the spec to fix errors #5 and #6 here: http://validator.nu/?doc=http%3A%2F%2Fwww.whatwg.org%2Fspecs%2Fweb-apps%2Fcurrent-work%2F

[23:02:00.0000] <MikeSmith>
Hixie: could you kindly update the spec to fix errors #5 and #6 here: http://validator.nu/?doc=http%3A%2F%2Fwww.whatwg.org%2Fspecs%2Fweb-apps%2Fcurrent-work%2F

[23:02:01.0000] <MikeSmith>
stray </dt> end tags

[23:02:23.0000] <MikeSmith>
stray </dt> end tags

[23:03:51.0000] <MikeSmith>
about the other errors for itemprop, I dunno why it's reporting those but I will fix that in the validator

[23:04:00.0000] <MikeSmith>
about the other errors for itemprop, I dunno why it's reporting those but I will fix that in the validator

[23:04:32.0000] <MikeSmith>
hmm, weird

[23:04:42.0000] <MikeSmith>
http://validator.w3.org/nu/?doc=http%3A%2F%2Fwww.whatwg.org%2Fspecs%2Fweb-apps%2Fcurrent-work%2F does not report those as errors

[23:05:00.0000] <MikeSmith>
hmm, weird

[23:05:01.0000] <MikeSmith>
http://validator.w3.org/nu/?doc=http%3A%2F%2Fwww.whatwg.org%2Fspecs%2Fweb-apps%2Fcurrent-work%2F does not report those as errors

[23:05:02.0000] <MikeSmith>
must be I made a fix earlier that hsivonen hasn't pushed to validator.nu yet

[23:05:18.0000] <MikeSmith>
must be I made a fix earlier that hsivonen hasn't pushed to validator.nu yet

[23:06:00.0000] <Hixie>
when i run my script i only get:

[23:06:01.0000] <Hixie>
Possible conformance errors:

[23:06:01.0000] <Hixie>
when i run my script i only get:

[23:06:02.0000] <Hixie>
14480.3-14480.77: info warning: The "cite" attribute on the "blockquote" element is not supported by browsers yet.

[23:06:03.0000] <Hixie>
14501.3-14501.76: info warning: The "cite" attribute on the "blockquote" element is not supported by browsers yet.

[23:06:03.0000] <Hixie>
Possible conformance errors:

[23:06:03.0000] <Hixie>
14480.3-14480.77: info warning: The "cite" attribute on the "blockquote" element is not supported by browsers yet.

[23:06:04.0000] <Hixie>
67062.36-67063.88: info warning: The "cite" attribute on the "q" element is not supported by browsers yet.

[23:06:05.0000] <Hixie>
120626.49-120626.126: error: Attribute "itemprop" not allowed on element "a" at this point.

[23:06:06.0000] <Hixie>
120627.7-120627.113: error: Attribute "itemprop" not allowed on element "a" at this point.

[23:06:06.0000] <Hixie>
14501.3-14501.76: info warning: The "cite" attribute on the "blockquote" element is not supported by browsers yet.

[23:06:07.0000] <Hixie>
120628.5-120628.77: error: Attribute "itemprop" not allowed on element "a" at this point.

[23:06:10.0000] <Hixie>
67062.36-67063.88: info warning: The "cite" attribute on the "q" element is not supported by browsers yet.

[23:06:13.0000] <Hixie>
120626.49-120626.126: error: Attribute "itemprop" not allowed on element "a" at this point.

[23:06:17.0000] <Hixie>
120627.7-120627.113: error: Attribute "itemprop" not allowed on element "a" at this point.

[23:06:20.0000] <Hixie>
120628.5-120628.77: error: Attribute "itemprop" not allowed on element "a" at this point.

[23:06:34.0000] <MikeSmith>
hmm

[23:06:36.0000] <MikeSmith>
odd

[23:06:59.0000] <Hixie>
oh hm

[23:07:00.0000] <MikeSmith>
hmm

[23:07:01.0000] <MikeSmith>
odd

[23:07:02.0000] <Hixie>
oh hm

[23:07:03.0000] <Hixie>
the error does exist in the .../index file

[23:07:04.0000] <Hixie>
wonder why it's not in my source-validator version

[23:07:05.0000] <MikeSmith>
oh

[23:07:05.0000] <Hixie>
the error does exist in the .../index file

[23:07:18.0000] <Hixie>
wonder why it's not in my source-validator version

[23:07:23.0000] <MikeSmith>
oh

[23:08:00.0000] <Hixie>
oh i know why

[23:08:01.0000] <Hixie>
it's a bug in anolis or something

[23:08:02.0000] <Hixie>
i have a bunch of omitted </dt>s in the source

[23:08:10.0000] <Hixie>
oh i know why

[23:08:14.0000] <Hixie>
it's a bug in anolis or something

[23:08:22.0000] <Hixie>
i have a bunch of omitted </dt>s in the source

[23:08:33.0000] <Hixie>
and something in the pipeline is "helpfully" putting them back

[23:08:38.0000] <MikeSmith>
aha

[23:08:38.0000] <Hixie>
probably libxml2 misparsing again

[23:08:43.0000] <MikeSmith>
yep

[23:08:45.0000] <Hixie>
is html5lib fast yet?

[23:08:49.0000] <MikeSmith>
heh

[23:08:57.0000] <MikeSmith>
no, it's not, unfortunately

[23:09:00.0000] <Hixie>
and something in the pipeline is "helpfully" putting them back

[23:09:01.0000] <MikeSmith>
aha

[23:09:02.0000] <Hixie>
probably libxml2 misparsing again

[23:09:03.0000] <MikeSmith>
yep

[23:09:04.0000] <Hixie>
is html5lib fast yet?

[23:09:05.0000] <MikeSmith>
heh

[23:09:06.0000] <MikeSmith>
no, it's not, unfortunately

[23:14:39.0000] <MikeSmith>
Hixie: maybe it would be if you ran it under PyPy

[23:15:00.0000] <MikeSmith>
Hixie: maybe it would be if you ran it under PyPy

[00:24:00.0000] <ruby_on_tails>
hello

[00:24:32.0000] <zcorpan>
hello

[00:25:00.0000] <zcorpan>
hello

[00:25:01.0000] <ruby_on_tails>
i made a new tutorial, anyone wants to check it out ?

[00:25:13.0000] <ruby_on_tails>
i made a new tutorial, anyone wants to check it out ?

[00:26:00.0000] <ruby_on_tails>
Philip`: the issues i was facing yesterday is solved now :D

[00:26:03.0000] <ruby_on_tails>
Philip`: the issues i was facing yesterday is solved now :D

[00:31:29.0000] <zcorpan>
drop a link

[00:32:00.0000] <zcorpan>
drop a link

[00:34:26.0000] <annevk>
http://example.org/

[00:35:00.0000] <annevk>
http://example.org/

[00:36:00.0000] <zcorpan>
annoying that that redirects to another domain

[00:36:08.0000] <zcorpan>
annoying that that redirects to another domain

[00:40:57.0000] <annevk>
well since IANA handles it... it's not surprising

[00:41:00.0000] <annevk>
well since IANA handles it... it's not surprising

[00:54:00.0000] <hsivonen>
what can I do to learn to express myself in a way that chuck@jumis won't mischaracterize?

[00:54:00.0000] <hsivonen>
what can I do to learn to express myself in a way that chuck@jumis won't mischaracterize?

[00:55:38.0000] <annevk>
sing a song to the moon

[00:56:00.0000] <annevk>
sing a song to the moon

[00:57:00.0000] <annevk>
oh, even Mozilla is doing H264 now

[00:57:01.0000] <annevk>
also on desktop?

[00:57:08.0000] <annevk>
oh, even Mozilla is doing H264 now

[00:57:24.0000] <annevk>
also on desktop?

[00:59:00.0000] <hsivonen>
annevk: well, there's a discussion on whether Mozilla will be doing H.264

[00:59:01.0000] <hsivonen>
annevk: Mozilla isn't doing it now

[00:59:06.0000] <hsivonen>
annevk: well, there's a discussion on whether Mozilla will be doing H.264

[00:59:15.0000] <hsivonen>
annevk: Mozilla isn't doing it now

[00:59:43.0000] <annevk>
oh ok, sorry

[01:00:00.0000] <annevk>
oh ok, sorry

[01:00:01.0000] <hsivonen>
annevk: opinions vary. The spectrum is: nowhere, on mobile only, where systems codecs are available, everywhere

[01:00:01.0000] <hsivonen>
annevk: opinions vary. The spectrum is: nowhere, on mobile only, where systems codecs are available, everywhere

[01:01:00.0000] <hsivonen>
personally, I think the middle ground is worse than either end of the spectrum

[01:01:01.0000] <hsivonen>
personally, I think the middle ground is worse than either end of the spectrum

[01:13:00.0000] <MikeSmith>
hsivonen: has there been specific requests to support it on mobile?

[01:13:13.0000] <MikeSmith>
hsivonen: has there been specific requests to support it on mobile?

[01:13:27.0000] <MikeSmith>
I mean, people wanting to use particular sites

[01:14:00.0000] <MikeSmith>
I mean, people wanting to use particular sites

[01:16:37.0000] <hsivonen>
MikeSmith: I don't know

[01:17:00.0000] <hsivonen>
MikeSmith: I don't know

[01:17:27.0000] <hsivonen>
MikeSmith: there have been *lots* of specific requests for Flash support, though

[01:17:43.0000] <hsivonen>
MikeSmith: which for many sites amounts to roughly the same thing

[01:17:58.0000] <hsivonen>
e.g. Vimeo does H.264 <video> or Flash

[01:18:00.0000] <hsivonen>
MikeSmith: there have been *lots* of specific requests for Flash support, though

[01:18:01.0000] <hsivonen>
MikeSmith: which for many sites amounts to roughly the same thing

[01:18:02.0000] <hsivonen>
e.g. Vimeo does H.264 <video> or Flash

[01:18:03.0000] <MikeSmith>
OK

[01:18:11.0000] <MikeSmith>
OK

[01:18:26.0000] <MikeSmith>
yeah, I knew about the Flash demand

[01:18:59.0000] <MikeSmith>
that is an odd situation giving that Adobe is end-of-lifing mobile Flash

[01:19:00.0000] <MikeSmith>
yeah, I knew about the Flash demand

[01:19:01.0000] <MikeSmith>
that is an odd situation giving that Adobe is end-of-lifing mobile Flash

[01:19:02.0000] <hsivonen>
In the light of Adobe's recent announcements, I think it's safe to expect Adobe not to supply Flash Player for B2G

[01:19:03.0000] <MikeSmith>
yep

[01:19:12.0000] <hsivonen>
In the light of Adobe's recent announcements, I think it's safe to expect Adobe not to supply Flash Player for B2G

[01:19:20.0000] <MikeSmith>
yep

[01:19:54.0000] <hsivonen>
shumway won't be able to play H.264 wrapped in .swf without an H.264 decoder somewhere

[01:20:00.0000] <hsivonen>
shumway won't be able to play H.264 wrapped in .swf without an H.264 decoder somewhere

[01:20:32.0000] <MikeSmith>
I wonder what happened to all the plans for getting native WebM support on device hardware

[01:21:00.0000] <MikeSmith>
I wonder what happened to all the plans for getting native WebM support on device hardware

[01:21:00.0000] <MikeSmith>
there were lots of announcements about partnership with chipset vendors to support WebM

[01:21:01.0000] <MikeSmith>
there were lots of announcements about partnership with chipset vendors to support WebM

[01:21:26.0000] <MikeSmith>
but I don't recall seeing much news about any of it actually having shipped yet

[01:21:46.0000] <annevk>
hsivonen: I think we have non-desktop only at the moment

[01:21:54.0000] <hsivonen>
MikeSmith: I haven't seen news of anyone shipping device drivers that actually work

[01:22:00.0000] <MikeSmith>
but I don't recall seeing much news about any of it actually having shipped yet

[01:22:01.0000] <annevk>
hsivonen: I think we have non-desktop only at the moment

[01:22:02.0000] <hsivonen>
MikeSmith: I haven't seen news of anyone shipping device drivers that actually work

[01:22:03.0000] <hsivonen>
MikeSmith: it does look like hardware has shipped

[01:22:04.0000] <MikeSmith>
oh, ok

[01:22:06.0000] <hsivonen>
MikeSmith: it does look like hardware has shipped

[01:22:15.0000] <MikeSmith>
oh, ok

[01:22:31.0000] <hsivonen>
MikeSmith: WebM on Android seems to be full of FAIL on Google's part AFAICT

[01:22:50.0000] <MikeSmith>
that's disappointing

[01:22:53.0000] <hsivonen>
annevk: yeah, I think that's worse than supporting H.264 everywhere or supporting it nowhere

[01:23:00.0000] <hsivonen>
MikeSmith: WebM on Android seems to be full of FAIL on Google's part AFAICT

[01:23:01.0000] <MikeSmith>
that's disappointing

[01:23:02.0000] <hsivonen>
annevk: yeah, I think that's worse than supporting H.264 everywhere or supporting it nowhere

[01:23:30.0000] <hsivonen>
MikeSmith: promising to drop H.264 and then not dropping it in over a year is disappointing, too

[01:23:54.0000] <hsivonen>
MikeSmith: not getting the encoder competitive with x264 is disappointing

[01:23:57.0000] <hsivonen>
MikeSmith: etc.

[01:24:00.0000] <hsivonen>
MikeSmith: promising to drop H.264 and then not dropping it in over a year is disappointing, too

[01:24:01.0000] <hsivonen>
MikeSmith: not getting the encoder competitive with x264 is disappointing

[01:24:02.0000] <hsivonen>
MikeSmith: etc.

[01:24:24.0000] <zcorpan>
adobe promised webm support in flash, but that never happened either, did it?

[01:24:34.0000] <hsivonen>
zcorpan: that didn't happen, either

[01:25:00.0000] <zcorpan>
adobe promised webm support in flash, but that never happened either, did it?

[01:25:01.0000] <hsivonen>
zcorpan: that didn't happen, either

[01:26:00.0000] <zcorpan>
at least opera and mozilla kept their promise and shipped webm in a timely fashion :-)

[01:26:00.0000] <zcorpan>
at least opera and mozilla kept their promise and shipped webm in a timely fashion :-)

[01:26:01.0000] <hsivonen>
The way Google is handling WebM reminds me of how AOL handled Gecko

[01:26:02.0000] <hsivonen>
zcorpan: for some value of timely in the case of Mozilla

[01:26:02.0000] <hsivonen>
The way Google is handling WebM reminds me of how AOL handled Gecko

[01:26:18.0000] <hsivonen>
zcorpan: for some value of timely in the case of Mozilla

[01:26:32.0000] <hsivonen>
zcorpan: (not the video team's fault that Firefox 4 was so late)

[01:26:42.0000] <zcorpan>
yeah

[01:27:00.0000] <hsivonen>
zcorpan: (not the video team's fault that Firefox 4 was so late)

[01:27:01.0000] <zcorpan>
yeah

[01:27:02.0000] <hsivonen>
zcorpan: also, Mozilla could have done a better job at getting 3.6 out of circulation more quickly

[01:27:15.0000] <hsivonen>
zcorpan: also, Mozilla could have done a better job at getting 3.6 out of circulation more quickly

[01:27:41.0000] <zcorpan>
i.e. made extensions work in 4+ ?

[01:28:00.0000] <zcorpan>
i.e. made extensions work in 4+ ?

[01:28:01.0000] <hsivonen>
zcorpan: I was thinking of pushing updates more aggressively

[01:28:02.0000] <hsivonen>
zcorpan: there were *months* without prompted updates away from 3.6

[01:28:17.0000] <hsivonen>
zcorpan: there were *months* without prompted updates away from 3.6

[01:28:36.0000] <zcorpan>
i saw several people who intentionally didn't upgrade because their extensions weren't compatible

[01:28:42.0000] <hsivonen>
(let alone non-prompted updates)

[01:28:57.0000] <zcorpan>
(but i guess that's not the reason for the biggest chunk of 3.6 users since most users don't use extensions at all)

[01:29:00.0000] <zcorpan>
i saw several people who intentionally didn't upgrade because their extensions weren't compatible

[01:29:01.0000] <hsivonen>
(let alone non-prompted updates)

[01:29:02.0000] <zcorpan>
(but i guess that's not the reason for the biggest chunk of 3.6 users since most users don't use extensions at all)

[01:29:36.0000] <hsivonen>
"make extensions compatible" seems reasonable on surface, but it's technically not reasonable given how extensions work

[01:29:40.0000] <zcorpan>
and this was around the time of firefox *6*

[01:30:00.0000] <hsivonen>
"make extensions compatible" seems reasonable on surface, but it's technically not reasonable given how extensions work

[01:30:01.0000] <zcorpan>
and this was around the time of firefox *6*

[01:30:02.0000] <hsivonen>
the thing is that prior to JetPack, there wasn't an extension API in Firefox

[01:30:23.0000] <hsivonen>
the thing is that prior to JetPack, there wasn't an extension API in Firefox

[01:30:42.0000] <hsivonen>
there were extensions poking deep into implementation details

[01:31:00.0000] <hsivonen>
there were extensions poking deep into implementation details

[01:31:49.0000] <hsivonen>
the Firefox extension model is awesomely powerful if you only ever ship one version of Firefox

[01:32:00.0000] <hsivonen>
the Firefox extension model is awesomely powerful if you only ever ship one version of Firefox

[01:32:01.0000] <MikeSmith>
heh

[01:32:06.0000] <MikeSmith>
heh

[01:41:00.0000] <MikeSmith>
hsivonen: btw, I think you need to redeploy validator.nu

[01:41:20.0000] <MikeSmith>
hsivonen: btw, I think you need to redeploy validator.nu

[01:41:33.0000] <MikeSmith>
oh wait

[01:41:41.0000] <MikeSmith>
maybe you did already

[01:42:00.0000] <MikeSmith>
oh wait

[01:42:01.0000] <MikeSmith>
maybe you did already

[01:42:02.0000] <MikeSmith>
ah maybe not

[01:42:03.0000] <MikeSmith>
http://validator.nu/?doc=http%3A%2F%2Fwww.whatwg.org%2Fspecs%2Fweb-apps%2Fcurrent-work%2F

[01:42:22.0000] <MikeSmith>
ah maybe not

[01:42:23.0000] <MikeSmith>
http://validator.nu/?doc=http%3A%2F%2Fwww.whatwg.org%2Fspecs%2Fweb-apps%2Fcurrent-work%2F

[01:46:00.0000] <hsivonen>
MikeSmith: ok. rebuilding it now

[01:46:18.0000] <hsivonen>
MikeSmith: ok. rebuilding it now

[01:47:00.0000] <MikeSmith>
ok

[01:47:14.0000] <MikeSmith>
ok

[03:06:00.0000] <annevk>
pretty cool that all the DOM3 Events issues are being looked at again

[03:06:01.0000] <annevk>
hadn't expected that

[03:06:13.0000] <annevk>
pretty cool that all the DOM3 Events issues are being looked at again

[03:06:19.0000] <annevk>
hadn't expected that

[03:33:00.0000] <hsivonen>
MikeSmith: validator.nu build fails for me

[03:33:17.0000] <hsivonen>
MikeSmith: validator.nu build fails for me

[03:33:48.0000] <hsivonen>
MikeSmith: looks like embed.rnc forgets to remove itemref from the set of attributes it adds to <embed>

[03:34:00.0000] <hsivonen>
MikeSmith: looks like embed.rnc forgets to remove itemref from the set of attributes it adds to <embed>

[05:11:39.0000] <MikeSmith>
hsivonen: validator.nu is down

[05:12:00.0000] <MikeSmith>
hsivonen: validator.nu is down

[05:12:01.0000] <MikeSmith>
and prior to going down it was responding much more slowly than usual

[05:12:02.0000] <MikeSmith>
and prior to going down it was responding much more slowly than usual

[05:16:55.0000] <hsivonen>
MikeSmith: yeah, I had to kill it to relieve the server under too much use

[05:17:00.0000] <hsivonen>
MikeSmith: yeah, I had to kill it to relieve the server under too much use

[05:18:00.0000] <MikeSmith>
ok

[05:18:01.0000] <hsivonen>
the server is currently in a pretty bad shape

[05:18:03.0000] <MikeSmith>
ok

[05:18:20.0000] <hsivonen>
the server is currently in a pretty bad shape

[05:18:26.0000] <MikeSmith>
oh

[05:18:32.0000] <hsivonen>
an ls command has now taken almost a minute to run

[05:18:43.0000] <MikeSmith>
wow

[05:19:00.0000] <MikeSmith>
oh

[05:19:01.0000] <hsivonen>
an ls command has now taken almost a minute to run

[05:19:02.0000] <MikeSmith>
wow

[05:21:00.0000] <hsivonen>
LOL FAIL. someone in the logs is using an anymizer that announces it's an anonymizer in the UA string

[05:21:23.0000] <hsivonen>
LOL FAIL. someone in the logs is using an anymizer that announces it's an anonymizer in the UA string

[05:22:44.0000] <hsivonen>
I wonder if someone has made a Firefox extension that does site validation by POSTing to V.nu excessively

[05:23:00.0000] <hsivonen>
I wonder if someone has made a Firefox extension that does site validation by POSTing to V.nu excessively

[05:23:56.0000] <hsivonen>
most of the activity is POST with JSON output with Firefox Nightly UA strings

[05:24:00.0000] <hsivonen>
most of the activity is POST with JSON output with Firefox Nightly UA strings

[05:30:00.0000] <hsivonen>
ok. whoever is producing a Firefox extension that uploads stuff to V.nu needs to make the extension stop when it gets a non-200 response

[05:30:14.0000] <hsivonen>
ok. whoever is producing a Firefox extension that uploads stuff to V.nu needs to make the extension stop when it gets a non-200 response

[05:31:33.0000] <hsivonen>
MikeSmith: does V.nu start up for your locally given the current state of repos?

[05:32:00.0000] <hsivonen>
MikeSmith: does V.nu start up for your locally given the current state of repos?

[05:33:00.0000] <hsivonen>
one of these days I need to build some thingy that limits concurrent validation requests from one IP address

[05:33:22.0000] <hsivonen>
one of these days I need to build some thingy that limits concurrent validation requests from one IP address

[05:34:48.0000] <hsivonen>
MikeSmith: ok. validator.nu is back up

[05:35:00.0000] <hsivonen>
MikeSmith: ok. validator.nu is back up

[05:35:01.0000] <hsivonen>
MikeSmith: with old code, because the current repo state crashes at startup for me

[05:35:02.0000] <hsivonen>
I banned some IP numbers manually. this doesn't scale

[05:35:03.0000] <hsivonen>
MikeSmith: with old code, because the current repo state crashes at startup for me

[05:35:20.0000] <hsivonen>
I banned some IP numbers manually. this doesn't scale

[05:39:00.0000] <zcorpan>
hsivonen: ask @paulrouget to ask who the extension maker is on twitter

[05:39:08.0000] <zcorpan>
hsivonen: ask @paulrouget to ask who the extension maker is on twitter

[05:44:26.0000] <zcorpan>
or maybe someone took https://github.com/rogerjohansson/html5validator and didn't bother installing v.nu locally but instead just changed extensions.html5validator.validatorURL

[05:45:00.0000] <zcorpan>
or maybe someone took https://github.com/rogerjohansson/html5validator and didn't bother installing v.nu locally but instead just changed extensions.html5validator.validatorURL

[05:47:44.0000] <zcorpan>
hsivonen: http://superuser.com/questions/107228/is-there-a-html5-validator-plugin-for-firefox/259550#259550

[05:48:00.0000] <zcorpan>
hsivonen: http://superuser.com/questions/107228/is-there-a-html5-validator-plugin-for-firefox/259550#259550

[05:48:01.0000] <MikeSmith>
hsivonen: I will check out and build from a clean install

[05:56:59.0000] <MikeSmith>
hsivonen:

[05:57:01.0000] <MikeSmith>
Error:

[05:57:01.0000] <MikeSmith>
Error:

[05:57:02.0000] <MikeSmith>
Duplicate attribute “itemref”.

[05:57:03.0000] <MikeSmith>
File: file:/opt/archive/checker/syntax/relaxng/embed.rnc

[05:57:04.0000] <MikeSmith>
Line: 518 Col: 17

[05:57:05.0000] <MikeSmith>
sorry, will fix that

[05:57:06.0000] <MikeSmith>
sorry, will fix that

[06:00:00.0000] <hsivonen>
I wonder how much this is an HTML5 validation perf issues and how much this is an HTML 4 validation (Schematron) perf issue

[06:00:15.0000] <hsivonen>
I wonder how much this is an HTML5 validation perf issues and how much this is an HTML 4 validation (Schematron) perf issue

[06:01:39.0000] <MikeSmith>
hsivonen: oh if you have people hitting it for HTML4 validation I would bet that could chew up a lot of resources

[06:02:00.0000] <MikeSmith>
hsivonen: oh if you have people hitting it for HTML4 validation I would bet that could chew up a lot of resources

[06:02:45.0000] <MikeSmith>
jing schematron is a hog even running it locally

[06:03:00.0000] <MikeSmith>
jing schematron is a hog even running it locally

[06:05:33.0000] <zcorpan>
hsivonen: i've filed an issue on the extension and edited the answer (though the edit needs to be reviewed until it shows up)

[06:06:00.0000] <zcorpan>
hsivonen: i've filed an issue on the extension and edited the answer (though the edit needs to be reviewed until it shows up)

[06:07:29.0000] <hsivonen>
zcorpan: thanks. roger johansson's extension may be what I'm seeing

[06:07:58.0000] <hsivonen>
maybe I should just move validator.nu and irssi to different servers, so slowness wouldn't bother me

[06:08:00.0000] <hsivonen>
zcorpan: thanks. roger johansson's extension may be what I'm seeing

[06:08:01.0000] <hsivonen>
maybe I should just move validator.nu and irssi to different servers, so slowness wouldn't bother me

[06:08:02.0000] <hsivonen>
html5.validator.nu is already separate

[06:08:06.0000] <hsivonen>
html5.validator.nu is already separate

[06:09:28.0000] <hsivonen>
zcorpan: that particular Stackoverflow answer doesn't explain this, because it points to html5.validator.nu instead of validator.nu

[06:10:00.0000] <hsivonen>
zcorpan: that particular Stackoverflow answer doesn't explain this, because it points to html5.validator.nu instead of validator.nu

[06:11:00.0000] <hsivonen>
whoa. does that extension post all pages you visit in whitelisted domains to the validator?

[06:11:15.0000] <hsivonen>
whoa. does that extension post all pages you visit in whitelisted domains to the validator?

[06:11:44.0000] <zcorpan>
it can be configured to do that, i think

[06:11:53.0000] <zcorpan>
hsivonen: it says validator.nu afaict

[06:12:00.0000] <zcorpan>
it can be configured to do that, i think

[06:12:01.0000] <zcorpan>
hsivonen: it says validator.nu afaict

[06:12:26.0000] <zcorpan>
hsivonen: btw it seems my answer has been reviewed and accepted now (at least it shows up for me in a private tab with turbo enabled)

[06:13:00.0000] <zcorpan>
hsivonen: btw it seems my answer has been reviewed and accepted now (at least it shows up for me in a private tab with turbo enabled)

[06:15:00.0000] <hsivonen>
of course it's my fault for not having defenses for this

[06:15:01.0000] <hsivonen>
/me is trying to figure out what the right defense would be

[06:15:08.0000] <hsivonen>
of course it's my fault for not having defenses for this

[06:15:18.0000] <hsivonen>
/me is trying to figure out what the right defense would be

[06:16:26.0000] <hsivonen>
stuff that I can think of:

[06:16:48.0000] <hsivonen>
1) Move validator.nu to a new dedicated VM

[06:17:00.0000] <hsivonen>
stuff that I can think of:

[06:17:01.0000] <hsivonen>
1) Move validator.nu to a new dedicated VM

[06:17:02.0000] <hsivonen>
2) Stop offering HTML 4 validation in validator.nu; let the W3C deal with that

[06:17:13.0000] <hsivonen>
2) Stop offering HTML 4 validation in validator.nu; let the W3C deal with that

[06:17:48.0000] <hsivonen>
3) some kind of scoreboard for N most recent IP numbers and denying some requests depending on the scoreboard

[06:18:00.0000] <hsivonen>
3) some kind of scoreboard for N most recent IP numbers and denying some requests depending on the scoreboard

[06:18:01.0000] <zcorpan>
(2) seems uncool i think

[06:18:15.0000] <zcorpan>
(2) seems uncool i think

[06:18:41.0000] <hsivonen>
the problem is I'm not sure what exactly the scoreboard should track in order to not to limit reasonable use

[06:19:00.0000] <hsivonen>
the problem is I'm not sure what exactly the scoreboard should track in order to not to limit reasonable use

[06:19:01.0000] <hsivonen>
4) Rewrite HTML 4 validation Schematron in Java

[06:19:02.0000] <StoneCypher>
lol yeah

[06:19:03.0000] <StoneCypher>
let's do it in *java*

[06:19:03.0000] <hsivonen>
4) Rewrite HTML 4 validation Schematron in Java

[06:19:04.0000] <StoneCypher>
/me facepalm

[06:19:11.0000] <StoneCypher>
lol yeah

[06:19:15.0000] <StoneCypher>
let's do it in *java*

[06:19:18.0000] <StoneCypher>
/me facepalm

[06:19:44.0000] <zcorpan>
StoneCypher: you know v.nu is written in java, right?

[06:19:50.0000] <StoneCypher>
why would i know that

[06:20:00.0000] <zcorpan>
StoneCypher: you know v.nu is written in java, right?

[06:20:00.0000] <StoneCypher>
all i know is java isn't a particularly good choice for that kind of tool

[06:20:01.0000] <StoneCypher>
why would i know that

[06:20:02.0000] <StoneCypher>
all i know is java isn't a particularly good choice for that kind of tool

[06:20:03.0000] <zcorpan>
dunno, it says so in http://about.validator.nu/

[06:20:04.0000] <StoneCypher>
and?

[06:20:07.0000] <zcorpan>
dunno, it says so in http://about.validator.nu/

[06:20:10.0000] <StoneCypher>
and?

[06:20:29.0000] <StoneCypher>
"you know this random characteristic of this site you've never bothered to open, right?  well it says so right in the corner"

[06:20:55.0000] <zcorpan>
...

[06:21:00.0000] <StoneCypher>
"you know this random characteristic of this site you've never bothered to open, right?  well it says so right in the corner"

[06:21:01.0000] <zcorpan>
...

[06:21:02.0000] <StoneCypher>
yes, that's an ellipsis.

[06:21:03.0000] <StoneCypher>
it generally indicates text that has been removed for brevity's sake, not a pause.

[06:21:04.0000] <StoneCypher>
yes, that's an ellipsis.

[06:21:15.0000] <StoneCypher>
it generally indicates text that has been removed for brevity's sake, not a pause.

[06:21:56.0000] <StoneCypher>
technically it's a greek tricolon, but insert standard rabble here about getting it something someone will recognize instead of being correct

[06:22:00.0000] <StoneCypher>
technically it's a greek tricolon, but insert standard rabble here about getting it something someone will recognize instead of being correct

[06:24:19.0000] <MikeSmith>
hsivonen: I vote for 4

[06:24:41.0000] <Philip`>
5) Get MikeSmith to rewrite HTML 4 validation Schematron in Java

[06:24:48.0000] <MikeSmith>
heh

[06:25:00.0000] <MikeSmith>
hsivonen: I vote for 4

[06:25:01.0000] <Philip`>
5) Get MikeSmith to rewrite HTML 4 validation Schematron in Java

[06:25:02.0000] <MikeSmith>
heh

[06:25:03.0000] <hsivonen>
this same IP keeps hitting validator.nu over and over again oblivious to the 403

[06:25:22.0000] <hsivonen>
this same IP keeps hitting validator.nu over and over again oblivious to the 403

[06:26:00.0000] <StoneCypher>
so block it

[06:26:01.0000] <MikeSmith>
hsivonen: I can write up the HTML4 assertions checker if you can make time to review it

[06:26:02.0000] <hsivonen>
MikeSmith: deal

[06:26:02.0000] <StoneCypher>
so block it

[06:26:13.0000] <MikeSmith>
hsivonen: I can write up the HTML4 assertions checker if you can make time to review it

[06:26:22.0000] <hsivonen>
MikeSmith: deal

[06:26:50.0000] <zcorpan>
(6) hunt down the user(s) of the extension and beat them up with a cricket bat

[06:26:56.0000] <MikeSmith>
I reckon I can get it done by next week or next next

[06:27:00.0000] <zcorpan>
(6) hunt down the user(s) of the extension and beat them up with a cricket bat

[06:27:01.0000] <MikeSmith>
I reckon I can get it done by next week or next next

[06:27:02.0000] <hsivonen>
6) Make even validator.nu default to HTML5 instead of defaulting to 4 or 5 depending on doctype

[06:27:08.0000] <hsivonen>
6) Make even validator.nu default to HTML5 instead of defaulting to 4 or 5 depending on doctype

[06:27:51.0000] <MikeSmith>
hsivonen: I think it makes sense to re-implement it to not just real schematron, regardless of this current load issue

[06:28:00.0000] <MikeSmith>
hsivonen: I think it makes sense to re-implement it to not just real schematron, regardless of this current load issue

[06:28:01.0000] <MikeSmith>
*to not use real schematron

[06:28:02.0000] <hsivonen>
MikeSmith: ok

[06:28:05.0000] <MikeSmith>
*to not use real schematron

[06:28:10.0000] <hsivonen>
MikeSmith: ok

[06:29:00.0000] <zcorpan>
though of course, letting html4 validation take resources away from making html5 validation better is also uncool

[06:29:11.0000] <zcorpan>
though of course, letting html4 validation take resources away from making html5 validation better is also uncool

[06:29:38.0000] <hsivonen>
StoneCypher: http://about.validator.nu/#faq

[06:30:00.0000] <hsivonen>
StoneCypher: http://about.validator.nu/#faq

[06:30:01.0000] <MikeSmith>
hsivonen: fwiw, I think the W3C systems team could give you some concrete suggestions on how to automatically deal with the bad-behaving IPs

[06:30:02.0000] <StoneCypher>
hsivonen: what about it

[06:30:03.0000] <MikeSmith>
the have a lot of experience at it :)

[06:30:04.0000] <MikeSmith>
hsivonen: fwiw, I think the W3C systems team could give you some concrete suggestions on how to automatically deal with the bad-behaving IPs

[06:30:17.0000] <StoneCypher>
hsivonen: what about it

[06:30:18.0000] <MikeSmith>
the have a lot of experience at it :)

[06:31:00.0000] <hsivonen>
StoneCypher: the answer to "Java? Eww. Why didn’t you write it in Python or Ruby?"

[06:31:12.0000] <hsivonen>
StoneCypher: the answer to "Java? Eww. Why didn’t you write it in Python or Ruby?"

[06:32:00.0000] <StoneCypher>
i didn't say that

[06:32:01.0000] <StoneCypher>
those two languages would be even worse choices.

[06:32:02.0000] <hsivonen>
StoneCypher: and your choice would be?

[06:32:03.0000] <StoneCypher>
i didn't say that

[06:32:08.0000] <StoneCypher>
those two languages would be even worse choices.

[06:32:20.0000] <hsivonen>
StoneCypher: and your choice would be?

[06:32:40.0000] <StoneCypher>
/me sighs

[06:32:48.0000] <StoneCypher>
do we really need to get into a clueless java zealot argument

[06:33:00.0000] <StoneCypher>
/me sighs

[06:33:01.0000] <StoneCypher>
do we really need to get into a clueless java zealot argument

[06:33:02.0000] <StoneCypher>
that was 15 minutes ago

[06:33:03.0000] <StoneCypher>
c, c++, ocaml, haskell, factor, fortress, basically anything with real direct access to strings and no boxing overhead

[06:33:08.0000] <StoneCypher>
that was 15 minutes ago

[06:33:17.0000] <StoneCypher>
c, c++, ocaml, haskell, factor, fortress, basically anything with real direct access to strings and no boxing overhead

[06:33:28.0000] <StoneCypher>
no, not haskell, it's got immutable strings

[06:33:44.0000] <StoneCypher>
but yeah, next bring up the alioth shootout

[06:33:58.0000] <StoneCypher>
then insist there's nothing wrong with java, that hotspot is magic and takes out all the overhead

[06:34:00.0000] <StoneCypher>
no, not haskell, it's got immutable strings

[06:34:01.0000] <StoneCypher>
but yeah, next bring up the alioth shootout

[06:34:02.0000] <StoneCypher>
then insist there's nothing wrong with java, that hotspot is magic and takes out all the overhead

[06:34:03.0000] <StoneCypher>
/me starts writing out the flowchart to save time

[06:34:04.0000] <Philip`>
/me wonders why StoneCypher anticipates that any discussion will turn into an argument, and preemptively starts the argument himself

[06:34:07.0000] <StoneCypher>
/me starts writing out the flowchart to save time

[06:34:19.0000] <Philip`>
/me wonders why StoneCypher anticipates that any discussion will turn into an argument, and preemptively starts the argument himself

[06:34:28.0000] <StoneCypher>
Philip`: i don't assume that.

[06:34:42.0000] <StoneCypher>
Philip`: i do assume that discussions that start with someone inventing false quotes for someone else will, however, becuse they already have.

[06:34:46.0000] <StoneCypher>
because*

[06:35:00.0000] <StoneCypher>
Philip`: i don't assume that.

[06:35:01.0000] <StoneCypher>
Philip`: i do assume that discussions that start with someone inventing false quotes for someone else will, however, becuse they already have.

[06:35:02.0000] <StoneCypher>
because*

[06:37:00.0000] <annevk>
it's not a false quote

[06:37:01.0000] <annevk>
it's a quote from the FAQ

[06:37:12.0000] <annevk>
it's not a false quote

[06:37:15.0000] <annevk>
it's a quote from the FAQ

[06:38:47.0000] <StoneCypher>
uh.

[06:38:49.0000] <StoneCypher>
try again, anne.

[06:39:00.0000] <StoneCypher>
uh.

[06:39:01.0000] <StoneCypher>
try again, anne.

[06:39:02.0000] <StoneCypher>
/me sighs and just doesn't bother

[06:39:14.0000] <StoneCypher>
/me sighs and just doesn't bother

[06:42:40.0000] <MikeSmith>
hsivonen: fix for the breakage pushed

[06:42:51.0000] <MikeSmith>
just backed out my previous change

[06:42:55.0000] <MikeSmith>
sorry again

[06:43:00.0000] <MikeSmith>
hsivonen: fix for the breakage pushed

[06:43:01.0000] <MikeSmith>
just backed out my previous change

[06:43:02.0000] <MikeSmith>
sorry again

[06:46:34.0000] <hsivonen>
MikeSmith: verified. thanks. I'll redeploy

[06:47:00.0000] <hsivonen>
MikeSmith: verified. thanks. I'll redeploy

[06:47:01.0000] <MikeSmith>
I will attempt to be more careful in the future

[06:47:06.0000] <MikeSmith>
I will attempt to be more careful in the future

[06:49:31.0000] <MikeSmith>
hsivonen: btw, after trying out a few different ways of doing command-line validation (using that VerifierCommandLine class, using Jing directly), it's even more clear to me now that the HTTP interface is just way better than the alternatives

[06:49:37.0000] <MikeSmith>
certainly much faster

[06:50:00.0000] <MikeSmith>
hsivonen: btw, after trying out a few different ways of doing command-line validation (using that VerifierCommandLine class, using Jing directly), it's even more clear to me now that the HTTP interface is just way better than the alternatives

[06:50:01.0000] <MikeSmith>
certainly much faster

[06:56:00.0000] <zcorpan>
nice, "cssom !" with ddg gives me the editor's draft of cssom

[06:56:07.0000] <zcorpan>
nice, "cssom !" with ddg gives me the editor's draft of cssom

[06:57:30.0000] <hsivonen>
Ask.com: How do I get rid of the toolbar? DuckDuckGo: How do I make it the default?

[06:58:00.0000] <hsivonen>
Ask.com: How do I get rid of the toolbar? DuckDuckGo: How do I make it the default?

[06:58:55.0000] <MikeSmith>
hsivonen: I wonder how many people who set out download and build the validator code never get past the downloading-dependencies + downloading-local-entities stage

[06:59:00.0000] <MikeSmith>
hsivonen: I wonder how many people who set out download and build the validator code never get past the downloading-dependencies + downloading-local-entities stage

[06:59:31.0000] <MikeSmith>
if we could make that step less time-consuming and painful, that would be good

[06:59:37.0000] <hsivonen>
MikeSmith: probably many

[06:59:38.0000] <hsivonen>
yeah

[07:00:00.0000] <MikeSmith>
if we could make that step less time-consuming and painful, that would be good

[07:00:01.0000] <hsivonen>
MikeSmith: probably many

[07:00:02.0000] <hsivonen>
yeah

[07:00:03.0000] <hsivonen>
dunno how to do that without a weekly test to see if the download locations still work

[07:00:04.0000] <MikeSmith>
yeah

[07:00:05.0000] <hsivonen>
/me mumbles about cool URIs not changing

[07:00:10.0000] <hsivonen>
dunno how to do that without a weekly test to see if the download locations still work

[07:00:19.0000] <MikeSmith>
yeah

[07:00:19.0000] <hsivonen>
/me mumbles about cool URIs not changing

[07:00:41.0000] <MikeSmith>
oh, that reminds me, I still did not actually land the patch that downloads the w3c stuff from the zip file I made

[07:00:42.0000] <StoneCypher>
hateoas is still the best acronym alive

[07:01:00.0000] <MikeSmith>
oh, that reminds me, I still did not actually land the patch that downloads the w3c stuff from the zip file I made

[07:01:01.0000] <StoneCypher>
hateoas is still the best acronym alive

[07:01:02.0000] <hsivonen>
Do I have to host all the libs somewhere and go through all the license compliance issues *again* from a slightly different perspective?

[07:01:18.0000] <hsivonen>
Do I have to host all the libs somewhere and go through all the license compliance issues *again* from a slightly different perspective?

[07:02:00.0000] <MikeSmith>
even hosting all the libs, user still has to download them all

[07:02:01.0000] <MikeSmith>
don't know how to get around that

[07:02:01.0000] <MikeSmith>
even hosting all the libs, user still has to download them all

[07:02:07.0000] <MikeSmith>
don't know how to get around that

[07:02:53.0000] <zcorpan>
hmm. maybe i should file bugs instead of sending emails to www-style

[07:03:00.0000] <zcorpan>
hmm. maybe i should file bugs instead of sending emails to www-style

[07:03:49.0000] <hsivonen>
MikeSmith: https://twitter.com/#!/tbroyer/status/175603090978897921

[07:04:00.0000] <hsivonen>
MikeSmith: https://twitter.com/#!/tbroyer/status/175603090978897921

[07:04:01.0000] <MikeSmith>
heh

[07:04:02.0000] <MikeSmith>
ain't that the truth

[07:04:17.0000] <MikeSmith>
heh

[07:04:23.0000] <MikeSmith>
ain't that the truth

[07:09:38.0000] <MikeSmith>
hsivonen: I just sent you that zip patch for review

[07:09:48.0000] <MikeSmith>
if you have time to take a quick look at it I'd appreciate it

[07:10:00.0000] <MikeSmith>
hsivonen: I just sent you that zip patch for review

[07:10:01.0000] <MikeSmith>
if you have time to take a quick look at it I'd appreciate it

[07:10:02.0000] <MikeSmith>
I think it's sane but always possible there's something I didn't consider

[07:10:03.0000] <MikeSmith>
anyway, it's only 10 lines or so

[07:10:08.0000] <MikeSmith>
I think it's sane but always possible there's something I didn't consider

[07:10:19.0000] <MikeSmith>
anyway, it's only 10 lines or so

[07:11:46.0000] <hsivonen>
MikeSmith: looking

[07:12:00.0000] <hsivonen>
MikeSmith: looking

[07:25:57.0000] <annevk>
http://www.w3.org/TR/2012/WD-webmessaging-20120313/#messageeventinit should maybe use sequence<MessagePort>? ?

[07:26:00.0000] <annevk>
http://www.w3.org/TR/2012/WD-webmessaging-20120313/#messageeventinit should maybe use sequence<MessagePort>? ?

[07:35:35.0000] <zcorpan>
ok so for the collapsing table quirk, which browser behavior should i spec? i'm a bit tempted to follow ie compat quirks since i guess that's what everyone else is trying to emulate

[07:36:00.0000] <zcorpan>
ok so for the collapsing table quirk, which browser behavior should i spec? i'm a bit tempted to follow ie compat quirks since i guess that's what everyone else is trying to emulate

[07:37:00.0000] <smaug____>
zcorpan: I suggest asking dbaron and bz

[07:37:01.0000] <zcorpan>
but maybe mozilla's behavior is better since it can look at just the child boxes

[07:37:14.0000] <smaug____>
zcorpan: I suggest asking dbaron and bz

[07:37:18.0000] <zcorpan>
but maybe mozilla's behavior is better since it can look at just the child boxes

[07:37:41.0000] <zcorpan>
smaug____: they'll just say i should spec mozilla's behavior :-P

[07:38:00.0000] <zcorpan>
smaug____: they'll just say i should spec mozilla's behavior :-P

[07:38:01.0000] <smaug____>
so they'll give you the right answer :)

[07:38:03.0000] <smaug____>
so they'll give you the right answer :)

[07:39:00.0000] <zcorpan>
ie doesn't collapse the table when there's a caption, but the other browsers do that

[07:39:01.0000] <smaug____>
zcorpan: but really, dbaron and bz have years of experience on that stuff.

[07:39:02.0000] <annevk>
the Mozilla "do whatever is best for the web mantra" seems to be about over these days :p

[07:39:07.0000] <zcorpan>
ie doesn't collapse the table when there's a caption, but the other browsers do that

[07:39:07.0000] <smaug____>
zcorpan: but really, dbaron and bz have years of experience on that stuff.

[07:39:07.0000] <annevk>
the Mozilla "do whatever is best for the web mantra" seems to be about over these days :p

[07:39:29.0000] <zcorpan>
smaug____: oh sure

[07:39:34.0000] <annevk>
or maybe it's just highly aligned with whatever is best for Gecko

[07:39:41.0000] <smaug____>
annevk: bah

[07:40:00.0000] <zcorpan>
smaug____: oh sure

[07:40:01.0000] <annevk>
or maybe it's just highly aligned with whatever is best for Gecko

[07:40:02.0000] <smaug____>
annevk: bah

[07:41:46.0000] <zcorpan>
i think i'll go with making the quirk have affect for the minimal set needed, which i think is a combination of ie and mozilla: if there's a table-caption, table-row-group, table-header-group or table-footer-group box child of a table, don't apply the quirk

[07:42:00.0000] <zcorpan>
i think i'll go with making the quirk have affect for the minimal set needed, which i think is a combination of ie and mozilla: if there's a table-caption, table-row-group, table-header-group or table-footer-group box child of a table, don't apply the quirk

[07:42:30.0000] <zcorpan>
(moz also applies the quirk for inline-table and when there's a table-caption)

[07:43:00.0000] <zcorpan>
(moz also applies the quirk for inline-table and when there's a table-caption)

[07:45:38.0000] <zcorpan>
hmm, ie also doesn't apply the quirk when there's a table-column (but does apply it if there's just a table-column-group)

[07:46:00.0000] <zcorpan>
hmm, ie also doesn't apply the quirk when there's a table-column (but does apply it if there's just a table-column-group)

[07:46:01.0000] <annevk>
oh yes, W3C starts publishing drafts documenting a single method: http://www.w3.org/TR/hr-time/

[07:46:07.0000] <annevk>
oh yes, W3C starts publishing drafts documenting a single method: http://www.w3.org/TR/hr-time/

[07:47:45.0000] <zcorpan>
let's split html5 into lots of drafts where each idl member gets its own spec

[07:47:56.0000] <MikeSmith>
modularization

[07:48:00.0000] <zcorpan>
let's split html5 into lots of drafts where each idl member gets its own spec

[07:48:01.0000] <MikeSmith>
modularization

[07:48:01.0000] <MikeSmith>
it's clearly catching on

[07:48:02.0000] <MikeSmith>
it's clearly catching on

[07:48:27.0000] <MikeSmith>
XHTML 1.1 Modularization for HTML5

[07:48:48.0000] <annevk>
and constants: http://www.w3.org/TR/2012/CR-navigation-timing-20120313/#performancenavigation ?

[07:49:00.0000] <MikeSmith>
XHTML 1.1 Modularization for HTML5

[07:49:01.0000] <annevk>
and constants: http://www.w3.org/TR/2012/CR-navigation-timing-20120313/#performancenavigation ?

[08:10:00.0000] <zcorpan>
ok http://simon.html5.org/specs/quirks-mode#the-collapsing-table-quirk specced

[08:10:20.0000] <zcorpan>
ok http://simon.html5.org/specs/quirks-mode#the-collapsing-table-quirk specced

[08:11:00.0000] <zcorpan>
that leaves the table cell nowrap quirk

[08:11:06.0000] <zcorpan>
that leaves the table cell nowrap quirk

[08:42:00.0000] <MikeSmith>
zcorpan, annevk - fyi the CSS validator now has CSS3 support

[08:42:09.0000] <MikeSmith>
zcorpan, annevk - fyi the CSS validator now has CSS3 support

[08:42:29.0000] <MikeSmith>
so please actually check the pubrules CSS reports

[08:42:49.0000] <MikeSmith>
and if it is reporting false positives, file bugs

[08:43:00.0000] <MikeSmith>
so please actually check the pubrules CSS reports

[08:43:01.0000] <MikeSmith>
and if it is reporting false positives, file bugs

[08:46:00.0000] <MikeSmith>
is there no :marker pseudo-element?

[08:46:23.0000] <MikeSmith>
is there no :marker pseudo-element?

[08:46:42.0000] <MikeSmith>
wait I know there isn't

[08:46:55.0000] <MikeSmith>
just what can I use instead of :marker

[08:47:00.0000] <MikeSmith>
wait I know there isn't

[08:47:01.0000] <MikeSmith>
just what can I use instead of :marker

[08:47:31.0000] <MikeSmith>
ah wait

[08:48:00.0000] <MikeSmith>
ah wait

[08:48:00.0000] <MikeSmith>
it's just not in either of the selectors specs

[08:48:02.0000] <MikeSmith>
but instead only in the lists and counters module

[08:48:16.0000] <MikeSmith>
but instead only in the lists and counters module

[08:48:36.0000] <MikeSmith>
modularization ftw

[08:49:00.0000] <MikeSmith>
modularization ftw

[08:55:57.0000] <zcorpan>
[nowrap] turned out to be two quirks

[08:56:00.0000] <zcorpan>
[nowrap] turned out to be two quirks

[09:01:34.0000] <dglazkov>
good morning, Whatwg!

[09:02:00.0000] <dglazkov>
good morning, Whatwg!

[09:02:50.0000] <zcorpan>
two quirks specced today (and one dropped)

[09:03:00.0000] <zcorpan>
two quirks specced today (and one dropped)

[09:06:00.0000] <MikeSmith>
zcorpan, annevk - https://www.w3.org/Bugs/Public/enter_bug.cgi?product=CSSValidator

[09:06:12.0000] <MikeSmith>
zcorpan, annevk - https://www.w3.org/Bugs/Public/enter_bug.cgi?product=CSSValidator

[09:06:50.0000] <zcorpan>
MikeSmith: ok

[09:07:00.0000] <zcorpan>
MikeSmith: ok

[09:07:01.0000] <MikeSmith>
Yves did a lot of work to get it updated, so would be great if we can help get it improved

[09:07:02.0000] <MikeSmith>
Yves did a lot of work to get it updated, so would be great if we can help get it improved

[09:07:31.0000] <MikeSmith>
really doesn't help much that the rules are spread out across 30+ different specs

[09:07:47.0000] <MikeSmith>
I mean as far as trying to implement a validator for it

[09:08:00.0000] <MikeSmith>
really doesn't help much that the rules are spread out across 30+ different specs

[09:08:01.0000] <MikeSmith>
I mean as far as trying to implement a validator for it

[09:56:00.0000] <bga>
IE correctly parse unknown css properties and put it in CSSRuleStyleDeclaration

[09:56:09.0000] <bga>
IE correctly parse unknown css properties and put it in CSSRuleStyleDeclaration

[10:13:00.0000] <bga>
background: url("linear-gradient: red white");

[10:13:19.0000] <bga>
background: url("linear-gradient: red white");

[10:13:53.0000] <bga>
custom handler that return svg w/ gradient

[10:14:00.0000] <bga>
custom handler that return svg w/ gradient

[10:22:00.0000] <MikeSmith>
hsivonen: so with the zip-file thing added, even over my really slow connection, it takes only 10 mins to completely download and build and run the validator code

[10:22:23.0000] <MikeSmith>
hsivonen: so with the zip-file thing added, even over my really slow connection, it takes only 10 mins to completely download and build and run the validator code

[10:22:32.0000] <MikeSmith>
which isn't very harsh

[10:23:00.0000] <MikeSmith>
which isn't very harsh

[10:34:59.0000] <AryehGregor>
Gmail's important-conversation-marking works really well.

[10:35:01.0000] <AryehGregor>
Now it's correctly marking transforms-related discussions as important because of the people involved.

[10:35:15.0000] <AryehGregor>
Now it's correctly marking transforms-related discussions as important because of the people involved.

[10:39:24.0000] <MikeSmith>
AryehGregor: point is also about what it recognizes as not important I guess

[10:39:29.0000] <Hixie>
i think my arcTo() relying on transforms to get rotations makes no sense

[10:39:37.0000] <Hixie>
so i'm adding a 'rotation' argument to arcTo()

[10:39:49.0000] <Hixie>
also, i think instead of overloading arc() i'm just going to make a method ellipse()

[10:39:56.0000] <Hixie>
that is basically the same but not for circular arcs

[10:40:00.0000] <MikeSmith>
AryehGregor: point is also about what it recognizes as not important I guess

[10:40:01.0000] <Hixie>
i think my arcTo() relying on transforms to get rotations makes no sense

[10:40:02.0000] <Hixie>
so i'm adding a 'rotation' argument to arcTo()

[10:40:03.0000] <Hixie>
also, i think instead of overloading arc() i'm just going to make a method ellipse()

[10:40:04.0000] <Hixie>
that is basically the same but not for circular arcs

[10:40:46.0000] <AryehGregor>
/me is all in favor of a separate method instead of overloading

[10:41:00.0000] <AryehGregor>
/me is all in favor of a separate method instead of overloading

[10:41:27.0000] <MikeSmith>
Hixie: what AryehGregor said

[10:41:32.0000] <MikeSmith>
in general

[10:42:00.0000] <MikeSmith>
Hixie: what AryehGregor said

[10:42:01.0000] <MikeSmith>
in general

[10:42:02.0000] <AryehGregor>
Overloading is only a good idea when you have two different calls that mean basically the same thing, like with different argument types or optional arguments or things conceptually similar to that.

[10:42:03.0000] <AryehGregor>
The canvas API seems very over-overloaded already.

[10:42:11.0000] <AryehGregor>
Overloading is only a good idea when you have two different calls that mean basically the same thing, like with different argument types or optional arguments or things conceptually similar to that.

[10:42:24.0000] <AryehGregor>
The canvas API seems very over-overloaded already.

[10:43:00.0000] <TabAtkins_>
+1 to ellipse().

[10:43:06.0000] <TabAtkins_>
+1 to ellipse().

[10:43:26.0000] <MikeSmith>
the canvas API seems like not a model to be followed

[10:43:33.0000] <AryehGregor>
I haven't tried using it, but I saw operations along the lines of "if you provide six floats it behaves one way, but if you provide eight floats then the fifth and sixth arguments mean something different and the seventh and eighth mean the same as the old fifth and sixth".

[10:43:42.0000] <AryehGregor>
Which I guess is just optional arguments in the middle.

[10:43:48.0000] <AryehGregor>
But it seems quite horrible.

[10:43:54.0000] <TabAtkins_>
Yeah, the drawImage function.

[10:44:00.0000] <MikeSmith>
the canvas API seems like not a model to be followed

[10:44:01.0000] <AryehGregor>
I haven't tried using it, but I saw operations along the lines of "if you provide six floats it behaves one way, but if you provide eight floats then the fifth and sixth arguments mean something different and the seventh and eighth mean the same as the old fifth and sixth".

[10:44:02.0000] <AryehGregor>
Which I guess is just optional arguments in the middle.

[10:44:03.0000] <AryehGregor>
But it seems quite horrible.

[10:44:04.0000] <TabAtkins_>
Yeah, the drawImage function.

[10:44:05.0000] <TabAtkins_>
Which, as usual, should have just taken some objects instead.

[10:44:12.0000] <TabAtkins_>
Which, as usual, should have just taken some objects instead.

[10:44:43.0000] <AryehGregor>
:(

[10:45:00.0000] <AryehGregor>
:(

[10:45:01.0000] <TabAtkins_>
drawImage(img,{x,y,w,h}, {w,y,w,h})

[10:45:18.0000] <TabAtkins_>
drawImage(img,{x,y,w,h}, {w,y,w,h})

[10:46:00.0000] <AryehGregor>
Do you mean arrays there?

[10:46:09.0000] <AryehGregor>
Do you mean arrays there?

[10:46:45.0000] <TabAtkins_>
No, but arrays might work too, since it's always the w,h that are omittable.

[10:47:00.0000] <TabAtkins_>
No, but arrays might work too, since it's always the w,h that are omittable.

[10:47:38.0000] <AryehGregor>
Oh, you mean an object like {x: 7, y: 5} or something.

[10:47:42.0000] <TabAtkins_>
yeah

[10:47:47.0000] <AryehGregor>
I think an array is shorter and clearer here.

[10:47:51.0000] <TabAtkins_>
probably, yeah.

[10:48:00.0000] <AryehGregor>
Oh, you mean an object like {x: 7, y: 5} or something.

[10:48:01.0000] <TabAtkins_>
yeah

[10:48:02.0000] <AryehGregor>
I think an array is shorter and clearer here.

[10:48:03.0000] <TabAtkins_>
probably, yeah.

[10:48:04.0000] <TabAtkins_>
ctx.drawImage(src, [0,0], [0,0,50,100])

[10:48:05.0000] <TabAtkins_>
Makes sense to me.

[10:48:08.0000] <TabAtkins_>
ctx.drawImage(src, [0,0], [0,0,50,100])

[10:48:12.0000] <TabAtkins_>
Makes sense to me.

[10:49:34.0000] <AryehGregor>
The trick is whether the third and fourth parameters are width/height, or the x/y coords of a second corner.

[10:49:40.0000] <AryehGregor>
You just have to rely on platform consistency for that.

[10:50:00.0000] <AryehGregor>
The trick is whether the third and fourth parameters are width/height, or the x/y coords of a second corner.

[10:50:01.0000] <AryehGregor>
You just have to rely on platform consistency for that.

[10:50:02.0000] <MikeSmith>
hey TabAtkins_

[10:50:03.0000] <TabAtkins_>
Oh, true.  That's a potential advantage of objects.  Naming is always useful.

[10:50:04.0000] <TabAtkins_>
MikeSmith: Yo!

[10:50:19.0000] <MikeSmith>
hey TabAtkins_

[10:50:21.0000] <TabAtkins_>
Oh, true.  That's a potential advantage of objects.  Naming is always useful.

[10:50:23.0000] <TabAtkins_>
MikeSmith: Yo!

[10:50:32.0000] <MikeSmith>
where you been man?

[10:50:35.0000] <TabAtkins_>
AryehGregor: Luckily the xywh pattern is pretty well established.

[10:50:39.0000] <TabAtkins_>
MikeSmith: At sxsw

[10:50:42.0000] <MikeSmith>
ah

[10:50:43.0000] <MikeSmith>
yeah

[10:50:52.0000] <MikeSmith>
Gingerman?

[10:50:58.0000] <MikeSmith>
B-side?

[10:51:00.0000] <MikeSmith>
where you been man?

[10:51:01.0000] <TabAtkins_>
AryehGregor: Luckily the xywh pattern is pretty well established.

[10:51:02.0000] <TabAtkins_>
MikeSmith: At sxsw

[10:51:03.0000] <MikeSmith>
ah

[10:51:04.0000] <MikeSmith>
yeah

[10:51:05.0000] <MikeSmith>
Gingerman?

[10:51:06.0000] <MikeSmith>
B-side?

[10:51:07.0000] <TabAtkins_>
Spent every night at ginger man, yeah.

[10:52:32.0000] <TabAtkins_>
Met *tons* of people that I'd only known through Twitter.  Lots of fun all around.

[10:52:37.0000] <TabAtkins_>
And our panel went even better than last year.

[10:52:46.0000] <MikeSmith>
great

[10:53:00.0000] <TabAtkins_>
Met *tons* of people that I'd only known through Twitter.  Lots of fun all around.

[10:53:01.0000] <TabAtkins_>
And our panel went even better than last year.

[10:53:02.0000] <MikeSmith>
great

[10:53:03.0000] <MikeSmith>
someday I will get back to Austin

[10:53:15.0000] <MikeSmith>
someday I will get back to Austin

[10:54:33.0000] <MikeSmith>
TabAtkins_: btw I'm still wondering about your claim that emscripten had overcome the "order of magnitude" gap

[10:54:50.0000] <TabAtkins_>
MikeSmith: Heard it on Twitter, with a link to a github issue that I skimmed.

[10:54:56.0000] <MikeSmith>
hmm

[10:55:00.0000] <MikeSmith>
TabAtkins_: btw I'm still wondering about your claim that emscripten had overcome the "order of magnitude" gap

[10:55:01.0000] <TabAtkins_>
MikeSmith: Heard it on Twitter, with a link to a github issue that I skimmed.

[10:55:02.0000] <MikeSmith>
hmm

[10:55:03.0000] <TabAtkins_>
It would be from about two weeks ago, and I think it was a RT, so it would be hard for me to find.

[10:55:09.0000] <TabAtkins_>
It would be from about two weeks ago, and I think it was a RT, so it would be hard for me to find.

[10:55:28.0000] <gsnedders>
TabAtkins_: It depends on the code, though.

[10:55:34.0000] <TabAtkins_>
gsnedders: Yeah, definitely.

[10:55:36.0000] <MikeSmith>
afaict from Joel Webber postings that gap is still there

[10:55:40.0000] <MikeSmith>
gsnedders: of course

[10:55:58.0000] <MikeSmith>
also like recent JSC refactoring

[10:56:00.0000] <gsnedders>
TabAtkins_: It depends on the code, though.

[10:56:01.0000] <TabAtkins_>
gsnedders: Yeah, definitely.

[10:56:02.0000] <MikeSmith>
afaict from Joel Webber postings that gap is still there

[10:56:03.0000] <MikeSmith>
gsnedders: of course

[10:56:04.0000] <MikeSmith>
also like recent JSC refactoring

[10:56:04.0000] <MikeSmith>
rewriting

[10:56:05.0000] <MikeSmith>
rewriting

[10:56:06.0000] <MikeSmith>
from dude

[10:56:07.0000] <gsnedders>
https://github.com/kripken/emscripten/issues/22#issuecomment-4201138 is the origin

[10:56:08.0000] <MikeSmith>
forgot his name

[10:56:08.0000] <MikeSmith>
from dude

[10:56:09.0000] <MikeSmith>
guy from Purdue

[10:56:10.0000] <gsnedders>
https://github.com/kripken/emscripten/issues/22#issuecomment-4201138 is the origin

[10:56:14.0000] <MikeSmith>
forgot his name

[10:56:21.0000] <MikeSmith>
guy from Purdue

[10:56:35.0000] <TabAtkins_>
gsnedders: That's it!  Thanks.

[10:57:00.0000] <TabAtkins_>
gsnedders: That's it!  Thanks.

[10:58:37.0000] <MikeSmith>
holy fuck

[10:58:41.0000] <MikeSmith>
" I can now definitively state that emscripten+ff has broken the order-of-magnitude barrier w.r.t. C++."

[10:58:46.0000] <MikeSmith>
from the man himself

[10:59:00.0000] <MikeSmith>
holy fuck

[10:59:01.0000] <MikeSmith>
" I can now definitively state that emscripten+ff has broken the order-of-magnitude barrier w.r.t. C++."

[10:59:02.0000] <MikeSmith>
from the man himself

[10:59:02.0000] <MikeSmith>
that's pretty impressive

[10:59:41.0000] <jgraham>
(using objects in places where you might have a tight loop seems like it could impose some performance cost)

[11:00:00.0000] <jgraham>
(using objects in places where you might have a tight loop seems like it could impose some performance cost)

[11:03:00.0000] <Philip`>
MikeSmith: Where "from the man himself" means "from an inherently biased person"?

[11:03:15.0000] <Philip`>
MikeSmith: Where "from the man himself" means "from an inherently biased person"?

[11:03:38.0000] <MikeSmith>
heh

[11:04:00.0000] <MikeSmith>
heh

[11:04:01.0000] <MikeSmith>
he is the foremost EXPERT in his field man

[11:04:08.0000] <MikeSmith>
he is the foremost EXPERT in his field man

[11:04:31.0000] <TabAtkins_>
Don't get all wikipedian on us, jgraham .

[11:04:43.0000] <MikeSmith>
as am I in the field of smokable varieties of THC

[11:05:00.0000] <TabAtkins_>
Don't get all wikipedian on us, jgraham .

[11:05:01.0000] <MikeSmith>
as am I in the field of smokable varieties of THC

[11:05:41.0000] <TabAtkins_>
Who invented data urls? I want to buy that person a beer.

[11:06:00.0000] <TabAtkins_>
Who invented data urls? I want to buy that person a beer.

[11:07:00.0000] <TabAtkins_>
Ooh, and now I get to set up hg on my work box.

[11:07:01.0000] <TabAtkins_>
Yay?

[11:07:08.0000] <TabAtkins_>
Ooh, and now I get to set up hg on my work box.

[11:07:12.0000] <TabAtkins_>
Yay?

[11:08:00.0000] <WeirdAl>
TabAtkins_: hope you like Xerox

[11:08:01.0000] <WeirdAl>
http://tools.ietf.org/html/rfc2397

[11:08:04.0000] <WeirdAl>
TabAtkins_: hope you like Xerox

[11:08:06.0000] <WeirdAl>
http://tools.ietf.org/html/rfc2397

[11:08:31.0000] <TabAtkins_>
Dammit, Larry Masinter!

[11:08:40.0000] <MikeSmith>
LOL

[11:08:42.0000] <TabAtkins_>
Okay, I'll still buy him a beer.  And then run away.

[11:08:43.0000] <MikeSmith>
dude

[11:09:00.0000] <TabAtkins_>
Dammit, Larry Masinter!

[11:09:01.0000] <MikeSmith>
LOL

[11:09:02.0000] <TabAtkins_>
Okay, I'll still buy him a beer.  And then run away.

[11:09:02.0000] <WeirdAl>
I have no idea who the guy is, actually - a name in our industry I've never heard.

[11:09:03.0000] <MikeSmith>
dude

[11:09:04.0000] <WeirdAl>
I have no idea who the guy is, actually - a name in our industry I've never heard.

[11:09:04.0000] <MikeSmith>
you owe Larry some serious ove

[11:09:26.0000] <MikeSmith>
WeirdAl: Larry is god

[11:09:30.0000] <MikeSmith>
like Loki

[11:09:36.0000] <MikeSmith>
or the demiurge

[11:10:00.0000] <MikeSmith>
WeirdAl: Larry is god

[11:10:00.0000] <MikeSmith>
he is deep into the matrix

[11:10:01.0000] <MikeSmith>
like Loki

[11:10:02.0000] <MikeSmith>
or the demiurge

[11:10:03.0000] <MikeSmith>
he is deep into the matrix

[11:10:03.0000] <TabAtkins_>
I know he's done good things.  He's still crazy now.

[11:10:04.0000] <TabAtkins_>
I know he's done good things.  He's still crazy now.

[11:14:46.0000] <MikeSmith>
TabAtkins_: I'm crazier

[11:14:52.0000] <MikeSmith>
I guarantee

[11:15:00.0000] <MikeSmith>
TabAtkins_: I'm crazier

[11:15:01.0000] <MikeSmith>
I guarantee

[11:16:36.0000] <TabAtkins_>
In a good way, though.

[11:17:00.0000] <TabAtkins_>
In a good way, though.

[11:34:42.0000] <MikeSmith>
Hixie: help me out man

[11:35:00.0000] <MikeSmith>
Hixie: help me out man

[11:35:01.0000] <MikeSmith>
the chairs are telling me they want stuff actually done before we can publish updated WDs

[11:35:17.0000] <MikeSmith>
the chairs are telling me they want stuff actually done before we can publish updated WDs

[11:35:28.0000] <MikeSmith>
specifically,

[11:35:30.0000] <MikeSmith>
http://intertwingly.net/tmp/wgstatus.html#editor

[11:36:00.0000] <MikeSmith>
specifically,

[11:36:01.0000] <MikeSmith>
http://intertwingly.net/tmp/wgstatus.html#editor

[11:36:02.0000] <MikeSmith>
the "Editor Queue" stufff

[11:36:05.0000] <MikeSmith>
the "Editor Queue" stufff

[11:36:46.0000] <MikeSmith>
so if you can actually make those changes in the W3 version you will be my hero for this week

[11:36:52.0000] <MikeSmith>
 beyond TabAtkins_

[11:37:00.0000] <MikeSmith>
so if you can actually make those changes in the W3 version you will be my hero for this week

[11:37:01.0000] <MikeSmith>
 beyond TabAtkins_

[11:41:00.0000] <Hixie>
MikeSmith: my timetable for the next few weeks is canvas, web intents, the start time thread on the whatwg list, sicking's readyState bugs, and then <dialog> and sandbox/CSP

[11:41:21.0000] <Hixie>
MikeSmith: my timetable for the next few weeks is canvas, web intents, the start time thread on the whatwg list, sicking's readyState bugs, and then <dialog> and sandbox/CSP

[11:45:00.0000] <MikeSmith>
Hixie: all I need for now is those WG decisions applied to the W3C versinos

[11:45:05.0000] <MikeSmith>
Hixie: all I need for now is those WG decisions applied to the W3C versinos

[11:45:24.0000] <MikeSmith>
so that we can publish on Thursay

[11:45:40.0000] <MikeSmith>
if you don't have time to apply them, I will, I gues

[11:46:00.0000] <MikeSmith>
so that we can publish on Thursay

[11:46:01.0000] <MikeSmith>
if you don't have time to apply them, I will, I gues

[11:46:02.0000] <MikeSmith>
but  I would appreciate it if you tried

[11:46:06.0000] <MikeSmith>
but  I would appreciate it if you tried

[11:46:45.0000] <MikeSmith>
so that i can reduce a bit the mountain of BS PITA that I have to deal with

[11:47:00.0000] <MikeSmith>
so that i can reduce a bit the mountain of BS PITA that I have to deal with

[11:47:01.0000] <Hixie>
MikeSmith: i'm adding your script to the pipeline as we speak, but the other two don't have simple diffs that need applying, they're both week-long efforts to try to work out exactly what should happen

[11:47:02.0000] <MikeSmith>
OK

[11:47:03.0000] <Hixie>
MikeSmith: e.g. the sandbox one needs basically a refactoring of the entire sandbox feature for CSP

[11:47:05.0000] <Hixie>
MikeSmith: i'm adding your script to the pipeline as we speak, but the other two don't have simple diffs that need applying, they're both week-long efforts to try to work out exactly what should happen

[11:47:17.0000] <MikeSmith>
OK

[11:47:24.0000] <Hixie>
MikeSmith: e.g. the sandbox one needs basically a refactoring of the entire sandbox feature for CSP

[11:47:31.0000] <MikeSmith>
I see

[11:47:42.0000] <Hixie>
MikeSmith: and the dialog one needs coordination with the fullscreen spec to work out how it'll work

[11:47:42.0000] <MikeSmith>
who submitted that CP?

[11:47:48.0000] <MikeSmith>
OK

[11:48:00.0000] <MikeSmith>
I see

[11:48:01.0000] <Hixie>
MikeSmith: and the dialog one needs coordination with the fullscreen spec to work out how it'll work

[11:48:02.0000] <MikeSmith>
who submitted that CP?

[11:48:03.0000] <MikeSmith>
OK

[11:48:04.0000] <Hixie>
MikeSmith: in both cases one could naively apply the exact diff the CP says to do, but that would just be a waste of everyone's time

[11:48:05.0000] <Hixie>
MikeSmith: in both cases one could naively apply the exact diff the CP says to do, but that would just be a waste of everyone's time

[11:48:45.0000] <Hixie>
MikeSmith: if anyone suggests you do that, i highly recommend explaining to them that they clearly care less about the web than about the appearance of progres and should maybe reconsider their life choices

[11:49:00.0000] <Hixie>
MikeSmith: if anyone suggests you do that, i highly recommend explaining to them that they clearly care less about the web than about the appearance of progres and should maybe reconsider their life choices

[11:49:54.0000] <MikeSmith>
yeah

[11:50:00.0000] <MikeSmith>
yeah

[11:50:59.0000] <Hixie>
(if the chairs actually wanted <dialog> in the spec quicker, they would have just let it happen without the escalation process, in which case hober and i would have put it in the spec sometime last year, when we had nothing more pressing to work on)

[11:51:00.0000] <Hixie>
(if the chairs actually wanted <dialog> in the spec quicker, they would have just let it happen without the escalation process, in which case hober and i would have put it in the spec sometime last year, when we had nothing more pressing to work on)

[11:56:37.0000] <MikeSmith>
Hixie: indee

[11:56:40.0000] <MikeSmith>
d

[11:57:00.0000] <MikeSmith>
Hixie: indee

[11:57:01.0000] <MikeSmith>
d

[11:57:02.0000] <MikeSmith>
the whole premature escalation thing I never did understand either

[11:57:05.0000] <MikeSmith>
the whole premature escalation thing I never did understand either

[11:57:26.0000] <MikeSmith>
anyway, we find ourselves at this poing

[11:57:49.0000] <MikeSmith>
as we have found ourselves before

[11:58:00.0000] <MikeSmith>
anyway, we find ourselves at this poing

[11:58:01.0000] <MikeSmith>
as we have found ourselves before

[11:58:02.0000] <Hixie>
i don't really see what is stopping them from just publishing

[11:58:18.0000] <Hixie>
i don't really see what is stopping them from just publishing

[11:58:32.0000] <Hixie>
i mean, there's nothing particularly special about these new features than the other new features i'm working on

[11:58:37.0000] <MikeSmith>
 those 3 decisions, afaict

[11:58:58.0000] <Hixie>
i mean, why have they decided that they need those decisions applied but not, say, the canvas changes applied?

[11:59:00.0000] <Hixie>
i mean, there's nothing particularly special about these new features than the other new features i'm working on

[11:59:01.0000] <MikeSmith>
 those 3 decisions, afaict

[11:59:02.0000] <Hixie>
i mean, why have they decided that they need those decisions applied but not, say, the canvas changes applied?

[11:59:03.0000] <Hixie>
i'd have thought the canvasregion hit testing  changes were way more important/controversial in the wg

[11:59:15.0000] <Hixie>
i'd have thought the canvasregion hit testing  changes were way more important/controversial in the wg

[12:01:00.0000] <MikeSmith>
Hixie: see the topic, ese

[12:01:01.0000] <MikeSmith>
Hixie: see the topic, ese

[12:01:25.0000] <Hixie>
it's one thing for the language to be irrational

[12:01:33.0000] <Hixie>
another for the people the w3c is putting forward as leaders to be irrational

[12:02:00.0000] <Hixie>
it's one thing for the language to be irrational

[12:02:01.0000] <Hixie>
another for the people the w3c is putting forward as leaders to be irrational

[12:02:50.0000] <MikeSmith>
leaders fail us

[12:02:56.0000] <MikeSmith>
everywhere

[12:03:00.0000] <MikeSmith>
leaders fail us

[12:03:01.0000] <MikeSmith>
everywhere

[12:03:02.0000] <MikeSmith>
we need to work around the "leaders"

[12:03:16.0000] <MikeSmith>
we need to work around the "leaders"

[12:04:00.0000] <Hixie>
i don't intend to work around anyone

[12:04:24.0000] <Hixie>
i don't intend to work around anyone

[12:04:36.0000] <MikeSmith>
yeah well I do I gues

[12:05:00.0000] <MikeSmith>
yeah well I do I gues

[12:05:01.0000] <MikeSmith>
I guess that's a difference between you and me

[12:05:02.0000] <MikeSmith>
I guess that's a difference between you and me

[12:05:41.0000] <annevk>
hober: I wasn't necessarily disagreeing, though it does seem somewhat weird to have event handler attributes

[12:05:51.0000] <annevk>
in the dictionary

[12:06:00.0000] <annevk>
hober: I wasn't necessarily disagreeing, though it does seem somewhat weird to have event handler attributes

[12:06:01.0000] <annevk>
in the dictionary

[12:06:48.0000] <MikeSmith>
Hixie: arguing with asshats on principle is fun for about 30 seconds

[12:06:59.0000] <MikeSmith>
te

[12:07:00.0000] <MikeSmith>
Hixie: arguing with asshats on principle is fun for about 30 seconds

[12:07:01.0000] <MikeSmith>
te

[12:07:02.0000] <MikeSmith>
then it gets boring an pointless

[12:07:20.0000] <MikeSmith>
then it gets boring an pointless

[12:08:00.0000] <Hixie>
you don't have to argue if someone asks you to do something dumb

[12:08:01.0000] <MikeSmith>
right

[12:08:02.0000] <Hixie>
that's what spam filters are for

[12:08:06.0000] <Hixie>
you don't have to argue if someone asks you to do something dumb

[12:08:17.0000] <MikeSmith>
right

[12:08:19.0000] <Hixie>
that's what spam filters are for

[12:09:00.0000] <MikeSmith>
in the mean time we actually want to get some  WD published if we can

[12:09:21.0000] <MikeSmith>
in the mean time we actually want to get some  WD published if we can

[12:10:00.0000] <Hixie>
so just publish what we have

[12:10:01.0000] <Hixie>
i really don't see the problem here

[12:10:01.0000] <Hixie>
so just publish what we have

[12:10:02.0000] <annevk>
MikeSmith: so html5-diff has validation errors?

[12:10:09.0000] <Hixie>
i really don't see the problem here

[12:10:18.0000] <annevk>
MikeSmith: so html5-diff has validation errors?

[12:10:42.0000] <MikeSmith>
annevk: dunno, maybe CSS non-erros

[12:10:53.0000] <Hixie>
MikeSmith: the whatwg manages to "publish a rec" every time i make a diff, why can't the w3c "publish a wd"?

[12:11:00.0000] <MikeSmith>
annevk: dunno, maybe CSS non-erros

[12:11:01.0000] <Hixie>
MikeSmith: the whatwg manages to "publish a rec" every time i make a diff, why can't the w3c "publish a wd"?

[12:11:02.0000] <MikeSmith>
fuck

[12:11:03.0000] <MikeSmith>
please

[12:11:04.0000] <MikeSmith>
fuck

[12:11:10.0000] <MikeSmith>
please

[12:11:32.0000] <MikeSmith>
Hixie: I can idiot that you ask me that?

[12:11:35.0000] <MikeSmith>
christ

[12:11:46.0000] <zewt>
parse error, redo from start

[12:12:00.0000] <MikeSmith>
Hixie: I can idiot that you ask me that?

[12:12:01.0000] <MikeSmith>
christ

[12:12:02.0000] <zewt>
parse error, redo from start

[12:12:03.0000] <MikeSmith>
* Am I can idiot that you ask me that

[12:12:23.0000] <MikeSmith>
* Am I can idiot that you ask me that

[12:12:53.0000] <annevk>
"You should add a 'type' attribute with a value of 'text/css' to the 'style' element"

[12:12:55.0000] <zewt>
not better :)

[12:12:58.0000] <annevk>
that sounds wrong

[12:13:00.0000] <annevk>
"You should add a 'type' attribute with a value of 'text/css' to the 'style' element"

[12:13:01.0000] <zewt>
not better :)

[12:13:02.0000] <annevk>
that sounds wrong

[12:13:03.0000] <MikeSmith>
zewt: god

[12:13:04.0000] <zewt>
uh?

[12:13:13.0000] <MikeSmith>
zewt: god

[12:13:24.0000] <zewt>
uh?

[12:13:25.0000] <MikeSmith>
* Am I an idiot that you ask me that

[12:13:42.0000] <MikeSmith>
fucking typewriters

[12:13:46.0000] <Hixie>
well i'm not really asking you, i'm asking whoever is telling you that you can't somehow

[12:14:00.0000] <MikeSmith>
* Am I an idiot that you ask me that

[12:14:01.0000] <MikeSmith>
fucking typewriters

[12:14:02.0000] <Hixie>
well i'm not really asking you, i'm asking whoever is telling you that you can't somehow

[12:14:03.0000] <MikeSmith>
Hixie: me

[12:14:04.0000] <MikeSmith>
I am asking you

[12:14:05.0000] <zewt>
if you're using a typewriter it may be time for an upgrade

[12:14:07.0000] <MikeSmith>
Hixie: me

[12:14:11.0000] <MikeSmith>
I am asking you

[12:14:15.0000] <zewt>
if you're using a typewriter it may be time for an upgrade

[12:14:25.0000] <MikeSmith>
so that we can publish on Thursday

[12:15:00.0000] <MikeSmith>
so that we can publish on Thursday

[12:15:01.0000] <MikeSmith>
if you can't make those changes by Thursday, then I guess we are up shit creek

[12:15:02.0000] <Hixie>
MikeSmith: oh you just want me to rerun the pipeline with the flags set for publication? i can do that, sure. i thought you were saying we were somehow gated on some random CPs.

[12:15:10.0000] <MikeSmith>
if you can't make those changes by Thursday, then I guess we are up shit creek

[12:15:21.0000] <Hixie>
MikeSmith: oh you just want me to rerun the pipeline with the flags set for publication? i can do that, sure. i thought you were saying we were somehow gated on some random CPs.

[12:15:36.0000] <MikeSmith>
yeah, re-run it

[12:15:48.0000] <MikeSmith>
I changed the boilerplate already

[12:16:00.0000] <MikeSmith>
yeah, re-run it

[12:16:01.0000] <MikeSmith>
I changed the boilerplate already

[12:16:02.0000] <Hixie>
k

[12:16:03.0000] <MikeSmith>
I leave it up to the chairs to deal with the aftermath

[12:16:03.0000] <Hixie>
k

[12:16:04.0000] <MikeSmith>
I leave it up to the chairs to deal with the aftermath

[12:16:25.0000] <Hixie>
what date should i use?

[12:16:27.0000] <MikeSmith>
which amounts to, they leave it up to me]

[12:16:29.0000] <MikeSmith>
15

[12:16:31.0000] <Hixie>
and which drafts

[12:16:42.0000] <MikeSmith>
html, md, canvas

[12:17:00.0000] <Hixie>
what date should i use?

[12:17:01.0000] <MikeSmith>
which amounts to, they leave it up to me]

[12:17:02.0000] <MikeSmith>
15

[12:17:03.0000] <Hixie>
and which drafts

[12:17:04.0000] <MikeSmith>
html, md, canvas

[12:17:05.0000] <MikeSmith>
I'm about ready to stab myself in the heart with a broken bottle here

[12:17:15.0000] <MikeSmith>
I'm about ready to stab myself in the heart with a broken bottle here

[12:17:30.0000] <gsnedders>
MikeSmith: emo.

[12:17:41.0000] <Hixie>
oh wait, i don't need to update the date, that's in the boilerplate now

[12:17:42.0000] <Hixie>
sweet

[12:18:00.0000] <gsnedders>
MikeSmith: emo.

[12:18:01.0000] <Hixie>
oh wait, i don't need to update the date, that's in the boilerplate now

[12:18:02.0000] <Hixie>
sweet

[12:18:03.0000] <MikeSmith>
gsnedders: dude I was em before there was a word for it

[12:18:19.0000] <MikeSmith>
gsnedders: dude I was em before there was a word for it

[12:18:57.0000] <MikeSmith>
and I will punk jackass that claims to have re-invented emo in my wake

[12:19:00.0000] <MikeSmith>
and I will punk jackass that claims to have re-invented emo in my wake

[12:20:28.0000] <TabAtkins_>
Yay, I can finally publish in HTML5!

[12:21:00.0000] <TabAtkins_>
Yay, I can finally publish in HTML5!

[12:21:43.0000] <annevk>
hmm

[12:21:51.0000] <annevk>
I wonder what dbaron just posted on twitter

[12:22:00.0000] <annevk>
hmm

[12:22:01.0000] <annevk>
I wonder what dbaron just posted on twitter

[12:22:02.0000] <TabAtkins_>
Hm.

[12:22:07.0000] <TabAtkins_>
Hm.

[12:22:25.0000] <TabAtkins_>
Don't want to try and decode it, given the possibility of wasted effort if twitter mangled it.

[12:22:57.0000] <annevk>
it's something about having 140 code units I reckon

[12:23:00.0000] <TabAtkins_>
Don't want to try and decode it, given the possibility of wasted effort if twitter mangled it.

[12:23:01.0000] <annevk>
it's something about having 140 code units I reckon

[12:23:02.0000] <gsnedders>
MikeSmith: Your kisses kill me a little inside.

[12:23:17.0000] <gsnedders>
MikeSmith: Your kisses kill me a little inside.

[12:23:25.0000] <TabAtkins_>
Likely.  I'll bet it's using one of the alternate roman alphabets in the multibyte sections.

[12:23:50.0000] <MikeSmith>
gsnedders: wonderful phrase

[12:24:00.0000] <TabAtkins_>
Likely.  I'll bet it's using one of the alternate roman alphabets in the multibyte sections.

[12:24:01.0000] <MikeSmith>
gsnedders: wonderful phrase

[12:25:00.0000] <MikeSmith>
TabAtkins_: please work with closely with Elika to create another 30 CSSSS specs

[12:25:01.0000] <TabAtkins_>
MikeSmith: Already on it.

[12:25:01.0000] <MikeSmith>
TabAtkins_: please work with closely with Elika to create another 30 CSSSS specs

[12:25:24.0000] <TabAtkins_>
MikeSmith: Already on it.

[12:25:30.0000] <MikeSmith>
heh

[12:25:31.0000] <annevk>
MikeSmith: filed https://www.w3.org/Bugs/Public/show_bug.cgi?id=16347

[12:26:00.0000] <MikeSmith>
heh

[12:26:01.0000] <annevk>
MikeSmith: filed https://www.w3.org/Bugs/Public/show_bug.cgi?id=16347

[12:27:00.0000] <MikeSmith>
annevk: ありがとうございます

[12:27:09.0000] <MikeSmith>
annevk: ありがとうございます

[12:27:34.0000] <annevk>
問題ない

[12:27:49.0000] <TabAtkins_>
What the hell is that "XSL or XQuery WG" checkbox doing floating over there?

[12:27:54.0000] <MikeSmith>
heh

[12:28:00.0000] <annevk>
問題ない

[12:28:01.0000] <TabAtkins_>
What the hell is that "XSL or XQuery WG" checkbox doing floating over there?

[12:28:01.0000] <aklein>
Hixie: hi there. random question about the "form" attribute: if a form-associated element is not in the document tree, should it still be associated with a form if it has a "form" attribute matching the ID of a <form> that _is_ in the document?

[12:28:02.0000] <MikeSmith>
heh

[12:28:03.0000] <aklein>
Hixie: hi there. random question about the "form" attribute: if a form-associated element is not in the document tree, should it still be associated with a form if it has a "form" attribute matching the ID of a <form> that _is_ in the document?

[12:28:04.0000] <aklein>
(poking around at WebKit's incomplete implementation)

[12:28:23.0000] <aklein>
(poking around at WebKit's incomplete implementation)

[12:28:56.0000] <MikeSmith>
TabAtkins_: that is to remind you about how important X-*shite is

[12:28:57.0000] <aklein>
from my reading it seems the form attribute basically overrides the tree-based form-association rules

[12:29:00.0000] <MikeSmith>
TabAtkins_: that is to remind you about how important X-*shite is

[12:29:01.0000] <aklein>
from my reading it seems the form attribute basically overrides the tree-based form-association rules

[12:29:02.0000] <TabAtkins_>
MikeSmith: Should I just check it on every bug?  I've already started doing so.

[12:29:22.0000] <TabAtkins_>
MikeSmith: Should I just check it on every bug?  I've already started doing so.

[12:29:32.0000] <MikeSmith>
heh

[12:29:36.0000] <annevk>
the stuff from dbaron is in the Shavian Alphabet apparently?

[12:29:40.0000] <annevk>
http://www.unicode.org/standard/translations/shavian.html

[12:30:00.0000] <MikeSmith>
heh

[12:30:01.0000] <annevk>
the stuff from dbaron is in the Shavian Alphabet apparently?

[12:30:02.0000] <annevk>
http://www.unicode.org/standard/translations/shavian.html

[12:30:03.0000] <Hixie>
aklein: looking...

[12:30:24.0000] <Hixie>
aklein: looking...

[12:30:48.0000] <MikeSmith>
TabAtkins_: maybe I can change the config. I dunno. configuring bugzillla dpresses me

[12:30:57.0000] <AryehGregor>
. . . wow, backface-visibility interop is much worse than I thought.

[12:31:00.0000] <MikeSmith>
TabAtkins_: maybe I can change the config. I dunno. configuring bugzillla dpresses me

[12:31:01.0000] <AryehGregor>
. . . wow, backface-visibility interop is much worse than I thought.

[12:31:01.0000] <AryehGregor>
I need lots more tests for this.

[12:31:02.0000] <AryehGregor>
I need lots more tests for this.

[12:31:59.0000] <TabAtkins_>
MikeSmith: I'm just wondering why those WGs have the ability to mark bugs as WG-private anyway.  It's bizarre.

[12:32:00.0000] <TabAtkins_>
MikeSmith: I'm just wondering why those WGs have the ability to mark bugs as WG-private anyway.  It's bizarre.

[12:32:01.0000] <Hixie>
aklein: yeah, looks like the spec says that it should be associated even if the control isn't in the same subtree as the form element

[12:32:02.0000] <Hixie>
aklein: the form element has to be in the document, though

[12:32:07.0000] <Hixie>
aklein: yeah, looks like the spec says that it should be associated even if the control isn't in the same subtree as the form element

[12:32:15.0000] <Hixie>
aklein: the form element has to be in the document, though

[12:33:00.0000] <annevk>
so you can submit controls not part of the DOM

[12:33:01.0000] <Hixie>
ok canvas now supports ellipses

[12:33:02.0000] <annevk>
that's kind of weird

[12:33:21.0000] <annevk>
so you can submit controls not part of the DOM

[12:33:22.0000] <Hixie>
ok canvas now supports ellipses

[12:33:23.0000] <annevk>
that's kind of weird

[12:33:35.0000] <Hixie>
MikeSmith: i am checking in the wds with WD livery

[12:33:46.0000] <Hixie>
s/wds/docs/

[12:33:47.0000] <MikeSmith>
ok

[12:34:00.0000] <Hixie>
MikeSmith: i am checking in the wds with WD livery

[12:34:01.0000] <Hixie>
s/wds/docs/

[12:34:02.0000] <MikeSmith>
ok

[12:34:03.0000] <MikeSmith>
TabAtkins_: eh? which groups?

[12:34:13.0000] <MikeSmith>
TabAtkins_: eh? which groups?

[12:35:54.0000] <MikeSmith>
TabAtkins_: if you mean the "XSL or XQuery WG" bugzilla thing I have zero insight

[12:36:00.0000] <MikeSmith>
TabAtkins_: if you mean the "XSL or XQuery WG" bugzilla thing I have zero insight

[12:36:01.0000] <aklein>
Hixie: thanks, that's what I got from my reading. WebKit sometimes lets such associations take place, Firefox doesn't seem to.

[12:36:02.0000] <rniwa>
what's a good irc channel for regions discussion?

[12:36:03.0000] <TabAtkins_>
MikeSmith: Yeah, that.  It's a new thing, so it's weird.

[12:36:04.0000] <TabAtkins_>
rniwa: Here, or w3.org/#css

[12:36:06.0000] <rniwa>
what's a good irc channel for regions discussion?

[12:36:12.0000] <TabAtkins_>
MikeSmith: Yeah, that.  It's a new thing, so it's weird.

[12:36:21.0000] <TabAtkins_>
rniwa: Here, or w3.org/#css

[12:36:27.0000] <aklein>
(it's not clear the WebKit impl meant to let this take place)

[12:36:30.0000] <MikeSmith>
OK

[12:36:42.0000] <rniwa>
TabAtkins_: okay. i guess i'll start here since i'm already here

[12:36:53.0000] <TabAtkins_>
MikeSmith: I'm pretty sure that checkbox wasn't in place a week ago.

[12:36:55.0000] <rniwa>
TabAtkins_, annevk: so we've had some more discussions about regions node list

[12:37:00.0000] <aklein>
(it's not clear the WebKit impl meant to let this take place)

[12:37:01.0000] <MikeSmith>
OK

[12:37:02.0000] <rniwa>
TabAtkins_: okay. i guess i'll start here since i'm already here

[12:37:03.0000] <TabAtkins_>
MikeSmith: I'm pretty sure that checkbox wasn't in place a week ago.

[12:37:04.0000] <rniwa>
TabAtkins_, annevk: so we've had some more discussions about regions node list

[12:37:05.0000] <rniwa>
and we're rolling out webkit's implementation for now since it's not implemented correctly

[12:37:06.0000] <MikeSmith>
TabAtkins_: hai

[12:37:09.0000] <rniwa>
and we're rolling out webkit's implementation for now since it's not implemented correctly

[12:37:14.0000] <MikeSmith>
TabAtkins_: hai

[12:37:31.0000] <rniwa>
but dhyatt pointed out a point that in the future, regions node list can have css generated nodes as well

[12:37:38.0000] <TabAtkins_>
rniwa: You mean that api that lets you get the boxes that a region spans?

[12:37:44.0000] <rniwa>
TabAtkins_: yeah

[12:37:50.0000] <rniwa>
TabAtkins_: or rather "nodes"

[12:37:51.0000] <TabAtkins_>
Yeah, Hyatt's right.

[12:38:00.0000] <rniwa>
but dhyatt pointed out a point that in the future, regions node list can have css generated nodes as well

[12:38:01.0000] <TabAtkins_>
rniwa: You mean that api that lets you get the boxes that a region spans?

[12:38:02.0000] <rniwa>
TabAtkins_: yeah

[12:38:03.0000] <rniwa>
TabAtkins_: or rather "nodes"

[12:38:04.0000] <TabAtkins_>
Yeah, Hyatt's right.

[12:38:05.0000] <rniwa>
TabAtkins_: so we need some mechanism to represent css generated nodes

[12:38:06.0000] <annevk>
in general, adding new CSSOM stuff without having fixed the underlying model is scary imo

[12:38:07.0000] <TabAtkins_>
Heh, pinging alex russell.

[12:38:11.0000] <rniwa>
TabAtkins_: so we need some mechanism to represent css generated nodes

[12:38:22.0000] <annevk>
in general, adding new CSSOM stuff without having fixed the underlying model is scary imo

[12:38:23.0000] <TabAtkins_>
Heh, pinging alex russell.

[12:38:27.0000] <rniwa>
TabAtkins_: it can be of type Node since it's not a real node

[12:38:38.0000] <rniwa>
annevk: I agree.

[12:38:39.0000] <TabAtkins_>
annevk: Probably agree.

[12:39:00.0000] <rniwa>
TabAtkins_: it can be of type Node since it's not a real node

[12:39:01.0000] <rniwa>
annevk: I agree.

[12:39:01.0000] <rniwa>
TabAtkins_, annevk: what would this pseudo-node look like?

[12:39:02.0000] <TabAtkins_>
annevk: Probably agree.

[12:39:03.0000] <rniwa>
TabAtkins_, annevk: what would this pseudo-node look like?

[12:39:04.0000] <annevk>
we have not figured out how CSSOM should look, yet CSSMatrix is being added somewhat brokenly, now regions, there's stuff for variables...

[12:39:05.0000] <TabAtkins_>
rniwa: Dunno!

[12:39:11.0000] <annevk>
we have not figured out how CSSOM should look, yet CSSMatrix is being added somewhat brokenly, now regions, there's stuff for variables...

[12:39:16.0000] <TabAtkins_>
rniwa: Dunno!

[12:39:29.0000] <rniwa>
annevk: :(

[12:39:31.0000] <TabAtkins_>
annevk: At least for vars, it's just some stuff on the CSSStyleDeclaration.

[12:39:34.0000] <annevk>
rniwa: wouldn't CSS just generate boxes?

[12:39:39.0000] <rniwa>
annevk: yeah

[12:39:57.0000] <rniwa>
annevk: but how do you prefer to span:before { flow-from: "my-flow"; }

[12:40:00.0000] <rniwa>
annevk: :(

[12:40:01.0000] <TabAtkins_>
annevk: At least for vars, it's just some stuff on the CSSStyleDeclaration.

[12:40:02.0000] <annevk>
rniwa: wouldn't CSS just generate boxes?

[12:40:03.0000] <rniwa>
annevk: yeah

[12:40:04.0000] <rniwa>
annevk: but how do you prefer to span:before { flow-from: "my-flow"; }

[12:40:04.0000] <rniwa>
annevk: it's not a real node

[12:40:06.0000] <rniwa>
annevk: it's a pseudo-node but it's part of the flow nonetheless

[12:40:17.0000] <rniwa>
annevk: it's a pseudo-node but it's part of the flow nonetheless

[12:40:36.0000] <rniwa>
annevk: so if you're getting the list of nodes that belong to the same flow

[12:40:40.0000] <rniwa>
then it's got to be there

[12:40:56.0000] <annevk>
maybe introduce CSSNode?

[12:40:58.0000] <TabAtkins_>
rniwa: You'll have to reify CSS pseudo-elements to do this correctly.

[12:41:00.0000] <rniwa>
annevk: so if you're getting the list of nodes that belong to the same flow

[12:41:01.0000] <rniwa>
then it's got to be there

[12:41:02.0000] <annevk>
maybe introduce CSSNode?

[12:41:03.0000] <TabAtkins_>
rniwa: You'll have to reify CSS pseudo-elements to do this correctly.

[12:41:04.0000] <annevk>
making it inherit from Node though seems wrong

[12:41:04.0000] <annevk>
making it inherit from Node though seems wrong

[12:41:05.0000] <rniwa>
TabAtkins_: right.

[12:41:06.0000] <TabAtkins_>
(Which I'm totally cool with.)

[12:41:07.0000] <annevk>
so maybe it should just be CSSBox and you mix it in the list

[12:41:07.0000] <rniwa>
TabAtkins_: right.

[12:41:08.0000] <rniwa>
annevk: definitely not > inherit from Node

[12:41:08.0000] <TabAtkins_>
(Which I'm totally cool with.)

[12:41:09.0000] <TabAtkins_>
(If we can do it in a performant way.)

[12:41:17.0000] <annevk>
so maybe it should just be CSSBox and you mix it in the list

[12:41:18.0000] <rniwa>
annevk: definitely not > inherit from Node

[12:41:22.0000] <TabAtkins_>
(If we can do it in a performant way.)

[12:41:25.0000] <rniwa>
annevk: yeah...

[12:41:35.0000] <annevk>
you can have (CSSBox or Node)[]

[12:41:36.0000] <rniwa>
annevk: "Box" is kind of confusing though

[12:41:47.0000] <rniwa>
annevk: because it's an inline / block objects

[12:41:53.0000] <TabAtkins_>
rniwa: I think you were in the room months ago when we were discussing reifying pseudoelements in some way related to the shadow dom.

[12:41:55.0000] <rniwa>
annevk: not really line boxes

[12:42:00.0000] <rniwa>
annevk: yeah...

[12:42:01.0000] <annevk>
you can have (CSSBox or Node)[]

[12:42:02.0000] <rniwa>
annevk: "Box" is kind of confusing though

[12:42:03.0000] <rniwa>
annevk: because it's an inline / block objects

[12:42:03.0000] <rniwa>
TabAtkins_: was I?

[12:42:04.0000] <TabAtkins_>
rniwa: I think you were in the room months ago when we were discussing reifying pseudoelements in some way related to the shadow dom.

[12:42:05.0000] <rniwa>
annevk: not really line boxes

[12:42:05.0000] <rniwa>
TabAtkins_: oh yeah

[12:42:06.0000] <rniwa>
TabAtkins_: was I?

[12:42:07.0000] <rniwa>
TabAtkins_: oh yeah

[12:42:07.0000] <rniwa>
TabAtkins_: decorator stuff

[12:42:08.0000] <annevk>
from a spec perspective they're all boxes

[12:42:09.0000] <annevk>
from a spec perspective they're all boxes

[12:42:10.0000] <rniwa>
TabAtkins_: but I think decorator approach is an overkill for this

[12:42:11.0000] <annevk>
block-level, inline-level, line-level boxes

[12:42:12.0000] <rniwa>
TabAtkins_: because that'll make them real nodes

[12:42:18.0000] <rniwa>
TabAtkins_: but I think decorator approach is an overkill for this

[12:42:19.0000] <annevk>
block-level, inline-level, line-level boxes

[12:42:24.0000] <rniwa>
TabAtkins_: because that'll make them real nodes

[12:42:25.0000] <TabAtkins_>
rniwa, annevk: "box" isn't the right term, anyway.  That's a level too far down.  You want the notion that CSS has of "elements" after it's doctored the tree.

[12:42:38.0000] <rniwa>
TabAtkins_: yeah

[12:42:44.0000] <TabAtkins_>
But before converting the element-tree to the box-tree.

[12:42:49.0000] <rniwa>
TabAtkins_: for that, I like CSSElement or CSSNode

[12:42:54.0000] <rniwa>
TabAtkins_: or PseudoNode

[12:43:00.0000] <TabAtkins_>
rniwa, annevk: "box" isn't the right term, anyway.  That's a level too far down.  You want the notion that CSS has of "elements" after it's doctored the tree.

[12:43:01.0000] <rniwa>
TabAtkins_: yeah

[12:43:02.0000] <TabAtkins_>
But before converting the element-tree to the box-tree.

[12:43:03.0000] <rniwa>
TabAtkins_: for that, I like CSSElement or CSSNode

[12:43:04.0000] <rniwa>
TabAtkins_: or PseudoNode

[12:43:05.0000] <rniwa>
i like the third one least since nobody can spell pseudo correctly :P

[12:43:06.0000] <annevk>
PseudoElement then

[12:43:11.0000] <rniwa>
i like the third one least since nobody can spell pseudo correctly :P

[12:43:16.0000] <annevk>
PseudoElement then

[12:43:29.0000] <rniwa>
annevk: LOL

[12:43:30.0000] <TabAtkins_>
I'd want to spend some time hashing this out publicly, but something like that sounds interesting.

[12:43:39.0000] <rniwa>
TabAtkins_: yeah

[12:43:41.0000] <TabAtkins_>
::element, obviously.

[12:43:47.0000] <rniwa>
TabAtkins_: was there cssom mailing list?

[12:43:49.0000] <TabAtkins_>
window['::element'](foo)

[12:43:53.0000] <TabAtkins_>
rniwa: www-style

[12:43:58.0000] <rniwa>
TabAtkins_: oh man... :(

[12:44:00.0000] <rniwa>
annevk: LOL

[12:44:01.0000] <TabAtkins_>
I'd want to spend some time hashing this out publicly, but something like that sounds interesting.

[12:44:02.0000] <rniwa>
TabAtkins_: yeah

[12:44:03.0000] <TabAtkins_>
::element, obviously.

[12:44:04.0000] <rniwa>
TabAtkins_: was there cssom mailing list?

[12:44:05.0000] <TabAtkins_>
window['::element'](foo)

[12:44:05.0000] <annevk>
rniwa: uhuh

[12:44:06.0000] <TabAtkins_>
rniwa: www-style

[12:44:07.0000] <rniwa>
TabAtkins_: oh man... :(

[12:44:07.0000] <rniwa>
TabAtkins_: i don't wanna subscribe to www-style

[12:44:08.0000] <annevk>
rniwa: uhuh

[12:44:09.0000] <rniwa>
TabAtkins_: i don't wanna subscribe to www-style

[12:44:10.0000] <Hixie>
aklein: file bugs :-) we can also change the spec if the browser vendors think this is bad, it wasn't exactly intentional, it just fell out of how i specced it

[12:44:11.0000] <TabAtkins_>
rniwa: Sorry.

[12:44:11.0000] <Hixie>
aklein: file bugs :-) we can also change the spec if the browser vendors think this is bad, it wasn't exactly intentional, it just fell out of how i specced it

[12:44:11.0000] <TabAtkins_>
rniwa: Sorry.

[12:45:00.0000] <rniwa>
TabAtkins_, annevk: CSSElement would do.

[12:45:00.0000] <rniwa>
TabAtkins_, annevk: CSSElement would do.

[12:45:01.0000] <TabAtkins_>
Yeah, that works for me.

[12:45:23.0000] <TabAtkins_>
Yeah, that works for me.

[12:46:00.0000] <Hixie>
anyone know what the url is for the absolute latest svg spec content? (draft/ed content is fine)

[12:46:32.0000] <TabAtkins_>
Hixie: Generally, you want SVG Tiny 1.2 for definitions or stuff.

[12:46:55.0000] <annevk>
TabAtkins_: I didn't know CSS had something between "tree" and "box tree"

[12:47:00.0000] <TabAtkins_>
Hixie: Generally, you want SVG Tiny 1.2 for definitions or stuff.

[12:47:01.0000] <annevk>
TabAtkins_: I didn't know CSS had something between "tree" and "box tree"

[12:47:02.0000] <annevk>
TabAtkins_: where is that defined?

[12:47:03.0000] <Hixie>
TabAtkins_: but 1.1 for dom stuff?

[12:47:03.0000] <annevk>
TabAtkins_: where is that defined?

[12:47:04.0000] <TabAtkins_>
annevk: It's not well-defined, because no one's written Box 3.

[12:47:05.0000] <Hixie>
TabAtkins_: svg 1.1 has a more elaborate d="" syntax than 1.2 T

[12:47:06.0000] <TabAtkins_>
Hixie: Yes.

[12:47:08.0000] <Hixie>
TabAtkins_: but 1.1 for dom stuff?

[12:47:21.0000] <TabAtkins_>
annevk: It's not well-defined, because no one's written Box 3.

[12:47:21.0000] <Hixie>
TabAtkins_: svg 1.1 has a more elaborate d="" syntax than 1.2 T

[12:47:23.0000] <TabAtkins_>
Hixie: Yes.

[12:47:30.0000] <annevk>
hmm

[12:47:34.0000] <Hixie>
TabAtkins_: any idea which is the "right" one?

[12:47:44.0000] <TabAtkins_>
Hixie: Ask shepazu or heycam.

[12:48:00.0000] <annevk>
hmm

[12:48:01.0000] <Hixie>
TabAtkins_: any idea which is the "right" one?

[12:48:02.0000] <TabAtkins_>
Hixie: Ask shepazu or heycam.

[12:48:03.0000] <Hixie>
(what i was really hoping for was an svg 2 ED or something)

[12:48:04.0000] <TabAtkins_>
annevk: You've got what the host-language reports, which is used for Selectors.  CSS decorates it with pseudos to form the element-tree.

[12:48:11.0000] <Hixie>
(what i was really hoping for was an svg 2 ED or something)

[12:48:22.0000] <TabAtkins_>
annevk: You've got what the host-language reports, which is used for Selectors.  CSS decorates it with pseudos to form the element-tree.

[12:48:41.0000] <TabAtkins_>
Hixie: There's an SVG2 in the hg repo, but it's not usable yet for good stuff, I think.

[12:49:00.0000] <TabAtkins_>
Hixie: There's an SVG2 in the hg repo, but it's not usable yet for good stuff, I think.

[12:49:01.0000] <annevk>
isn't pseudo + anonymous box stuff all happening at the same time?

[12:49:02.0000] <TabAtkins_>
Nope.

[12:49:17.0000] <annevk>
isn't pseudo + anonymous box stuff all happening at the same time?

[12:49:22.0000] <TabAtkins_>
Nope.

[12:49:36.0000] <TabAtkins_>
For example, pseudos can affects the table-fixup stuff.

[12:50:00.0000] <TabAtkins_>
For example, pseudos can affects the table-fixup stuff.

[12:50:01.0000] <TabAtkins_>
There's no reasonable way to define it simultaneously, I think.  But everything works great if you define it happening before box-tree construction.

[12:50:02.0000] <annevk>
I guess they are input to the box generation

[12:50:03.0000] <TabAtkins_>
Yeah, exactly.

[12:50:10.0000] <TabAtkins_>
There's no reasonable way to define it simultaneously, I think.  But everything works great if you define it happening before box-tree construction.

[12:50:16.0000] <annevk>
I guess they are input to the box generation

[12:50:23.0000] <TabAtkins_>
Yeah, exactly.

[12:50:31.0000] <annevk>
but so is display:block

[12:50:51.0000] <TabAtkins_>
Yes, display:block controls how an element generates a box.

[12:50:52.0000] <annevk>
and I'm not sure there's much of a difference there

[12:51:00.0000] <annevk>
but so is display:block

[12:51:01.0000] <TabAtkins_>
Yes, display:block controls how an element generates a box.

[12:51:02.0000] <annevk>
and I'm not sure there's much of a difference there

[12:51:03.0000] <TabAtkins_>
While a pseudo needs to be an element so it can *have* display:block on it.

[12:51:04.0000] <annevk>
I mean sure tr might have ::before

[12:51:05.0000] <TabAtkins_>
And then generate a box appropriately.

[12:51:06.0000] <annevk>
if it also has display:inline; thinks are going to be different too

[12:51:06.0000] <TabAtkins_>
While a pseudo needs to be an element so it can *have* display:block on it.

[12:51:11.0000] <annevk>
I mean sure tr might have ::before

[12:51:12.0000] <TabAtkins_>
And then generate a box appropriately.

[12:51:21.0000] <annevk>
if it also has display:inline; thinks are going to be different too

[12:51:51.0000] <TabAtkins_>
annevk: I can just assure you that assuming that pseudos are part of the element-tree makes literally everything related to box generation easier.

[12:52:00.0000] <TabAtkins_>
annevk: I can just assure you that assuming that pseudos are part of the element-tree makes literally everything related to box generation easier.

[12:52:01.0000] <Hixie>
TabAtkins_: k...

[12:52:17.0000] <Hixie>
TabAtkins_: k...

[12:53:00.0000] <TabAtkins_>
annevk: Otherwise you have to insert tons of special-cases everywhere and use horrible guarded language everywhere and will still, inevitably, fuck up corner-cases.

[12:53:04.0000] <TabAtkins_>
annevk: Otherwise you have to insert tons of special-cases everywhere and use horrible guarded language everywhere and will still, inevitably, fuck up corner-cases.

[12:53:37.0000] <annevk>
that sounds like how the CSS specs work

[12:53:44.0000] <TabAtkins_>
Boo

[12:54:00.0000] <annevk>
that sounds like how the CSS specs work

[12:54:01.0000] <TabAtkins_>
Boo

[12:54:02.0000] <annevk>
look no further than chapter 10 of CSS 2.1

[12:54:11.0000] <annevk>
look no further than chapter 10 of CSS 2.1

[12:58:47.0000] <annevk>
so the dbaron thing again...

[12:58:54.0000] <annevk>
it's more than a 140 16-bit code units

[12:59:00.0000] <annevk>
so the dbaron thing again...

[12:59:01.0000] <annevk>
it's more than a 140 16-bit code units

[12:59:28.0000] <annevk>
it's 193, which means Twitter counts Unicode characters?

[13:00:00.0000] <annevk>
it's 193, which means Twitter counts Unicode characters?

[13:00:31.0000] <gsnedders>
annevk: Correct.

[13:00:38.0000] <gsnedders>
annevk: They changed about a year ago.

[13:01:00.0000] <gsnedders>
annevk: Correct.

[13:01:01.0000] <gsnedders>
annevk: They changed about a year ago.

[13:01:02.0000] <gsnedders>
annevk: IIRC, it's graphemes they count provided the code points are defined.

[13:01:03.0000] <zewt>
now if only they'd change to, say, not limit messages to so small a length that it inhibits communication

[13:01:05.0000] <gsnedders>
annevk: IIRC, it's graphemes they count provided the code points are defined.

[13:01:10.0000] <zewt>
now if only they'd change to, say, not limit messages to so small a length that it inhibits communication

[13:02:00.0000] <zewt>
it's entirely silly that you can fit like twice the content on twitter in japanese than english, heh

[13:02:06.0000] <zewt>
it's entirely silly that you can fit like twice the content on twitter in japanese than english, heh

[13:05:00.0000] <annevk>
gsnedders: they count code points after normalizing the text to NFC according to https://dev.twitter.com/docs/counting-characters

[13:05:00.0000] <annevk>
gsnedders: they count code points after normalizing the text to NFC according to https://dev.twitter.com/docs/counting-characters

[13:56:43.0000] <matjas>
http://whatwg.org/html/infrastructure.html#conformance-checkers → any examples of “criteria that cannot be expressed by a DTD, but can still be checked by a machine”, and/or “criteria that can only be checked by a human”?

[13:57:00.0000] <matjas>
http://whatwg.org/html/infrastructure.html#conformance-checkers → any examples of “criteria that cannot be expressed by a DTD, but can still be checked by a machine”, and/or “criteria that can only be checked by a human”?

[13:58:00.0000] <TabAtkins_>
There are several examples of the former in the validator.

[13:58:21.0000] <TabAtkins_>
There are several examples of the former in the validator.

[13:58:27.0000] <TabAtkins_>
The latter is things like @alt conformance.

[13:59:00.0000] <TabAtkins_>
The latter is things like @alt conformance.

[13:59:01.0000] <matjas>
TabAtkins_: are those listed somewhere?

[13:59:02.0000] <TabAtkins_>
I doubt it.  Nobody really cares.  ^_^

[13:59:09.0000] <matjas>
TabAtkins_: are those listed somewhere?

[13:59:19.0000] <TabAtkins_>
I doubt it.  Nobody really cares.  ^_^

[13:59:57.0000] <matjas>
“There are several examples of the former in the validator.” → could you please name one then? I can’t think of any :)

[14:00:00.0000] <matjas>
“There are several examples of the former in the validator.” → could you please name one then? I can’t think of any :)

[14:00:01.0000] <TabAtkins_>
I dunno.  Ask the validator folks like hsivonen or MikeSmith

[14:00:16.0000] <TabAtkins_>
I dunno.  Ask the validator folks like hsivonen or MikeSmith

[14:00:34.0000] <matjas>
consider yourselves pinged, fellas.

[14:01:00.0000] <matjas>
consider yourselves pinged, fellas.

[14:09:00.0000] <TabAtkins_>
Lolwut.  A few months of Process (that was largely built for the a11y people) is harming longdesc?

[14:09:01.0000] <TabAtkins_>
What about the 10+ years of authors ignoring or misusing it?

[14:09:01.0000] <TabAtkins_>
Lolwut.  A few months of Process (that was largely built for the a11y people) is harming longdesc?

[14:09:19.0000] <TabAtkins_>
What about the 10+ years of authors ignoring or misusing it?

[14:14:59.0000] <Philip`>
matjas: Table constraints are one major machine-checkable area, if I remember correctly

[14:15:00.0000] <Philip`>
matjas: Table constraints are one major machine-checkable area, if I remember correctly

[14:15:28.0000] <Philip`>
matjas: e.g. verifying that there are no overlapping cells (in the presence of colspan and rowspan)

[14:16:00.0000] <Philip`>
matjas: e.g. verifying that there are no overlapping cells (in the presence of colspan and rowspan)

[14:21:55.0000] <AryehGregor>
What does CSS specify for how an image is supposed to be transformed when it has  an explicit height/width?

[14:22:00.0000] <AryehGregor>
What does CSS specify for how an image is supposed to be transformed when it has  an explicit height/width?

[14:22:25.0000] <AryehGregor>
It seems like a PNG is stretched or squished without regard to aspect ratio, if both are specified, but an SVG always preserves its aspect ratio and gets letterboxed.

[14:22:28.0000] <AryehGregor>
In an <img>.

[14:22:31.0000] <AryehGregor>
That seems very confusing.

[14:22:39.0000] <TabAtkins_>
It doesn't, very specifically.  How an image draws itself into the rectangle that CSS tells it to is up tot he iamge format.

[14:22:53.0000] <AryehGregor>
That doesn't seem desirable.

[14:23:00.0000] <AryehGregor>
It seems like a PNG is stretched or squished without regard to aspect ratio, if both are specified, but an SVG always preserves its aspect ratio and gets letterboxed.

[14:23:00.0000] <TabAtkins_>
Rasters are stretched, SVG (in the absence of bugs) depends on the values fo the viewport stuff on the root.

[14:23:01.0000] <AryehGregor>
In an <img>.

[14:23:02.0000] <AryehGregor>
That seems very confusing.

[14:23:03.0000] <TabAtkins_>
It doesn't, very specifically.  How an image draws itself into the rectangle that CSS tells it to is up tot he iamge format.

[14:23:04.0000] <AryehGregor>
That doesn't seem desirable.

[14:23:05.0000] <TabAtkins_>
Rasters are stretched, SVG (in the absence of bugs) depends on the values fo the viewport stuff on the root.

[14:23:06.0000] <AryehGregor>
Hmm.

[14:23:07.0000] <AryehGregor>
Interesting.

[14:23:07.0000] <AryehGregor>
Hmm.

[14:23:08.0000] <TabAtkins_>
It's quite desirable, given things like SVG that want to specify their scaling behavior.

[14:23:09.0000] <AryehGregor>
Interesting.

[14:23:13.0000] <TabAtkins_>
It's quite desirable, given things like SVG that want to specify their scaling behavior.

[14:24:00.0000] <AryehGregor>
http://www.w3.org/TR/SVG/coords.html#PreserveAspectRatioAttribute

[14:24:20.0000] <AryehGregor>
http://www.w3.org/TR/SVG/coords.html#PreserveAspectRatioAttribute

[14:24:52.0000] <TabAtkins_>
Yup.

[14:25:00.0000] <TabAtkins_>
Yup.

[14:25:01.0000] <AryehGregor>
/me doesn't see what the default is

[14:25:16.0000] <AryehGregor>
/me doesn't see what the default is

[14:26:00.0000] <TabAtkins_>
Check the definition for <svg>.

[14:26:01.0000] <TabAtkins_>
It's "xMidYMid meet".

[14:26:12.0000] <TabAtkins_>
Check the definition for <svg>.

[14:26:22.0000] <TabAtkins_>
It's "xMidYMid meet".

[14:26:31.0000] <TabAtkins_>
Also: omigod worst attribute value names ever.

[14:26:33.0000] <TabAtkins_>
EVER

[14:26:44.0000] <TabAtkins_>
Differing capitalization for x and y asldfkja;sdlkf

[14:27:00.0000] <TabAtkins_>
Also: omigod worst attribute value names ever.

[14:27:01.0000] <TabAtkins_>
EVER

[14:27:02.0000] <TabAtkins_>
Differing capitalization for x and y asldfkja;sdlkf

[14:27:48.0000] <TabAtkins_>
This is one of those things that should *really* change in SVG2 to match the CSS convention (which was established *after* SVG did its stuff, so its understandable why it doesn't currently match).

[14:28:00.0000] <TabAtkins_>
This is one of those things that should *really* change in SVG2 to match the CSS convention (which was established *after* SVG did its stuff, so its understandable why it doesn't currently match).

[14:28:01.0000] <AryehGregor>
Browsers seem to not implement this right.  Sigh.

[14:28:02.0000] <TabAtkins_>
Unsurprising.

[14:28:18.0000] <AryehGregor>
Browsers seem to not implement this right.  Sigh.

[14:28:24.0000] <TabAtkins_>
Unsurprising.

[14:28:33.0000] <TabAtkins_>
I know that Chrome does pretty badly.

[14:29:00.0000] <TabAtkins_>
I know that Chrome does pretty badly.

[14:45:59.0000] <Hixie>
should path.addPathData(svgPathData) continue the current subpath if any, or always start a new one?

[14:46:00.0000] <Hixie>
should path.addPathData(svgPathData) continue the current subpath if any, or always start a new one?

[14:47:00.0000] <TabAtkins_>
Hm.

[14:47:02.0000] <TabAtkins_>
Hm.

[14:48:00.0000] <TabAtkins_>
It would be useful to be able to interrupt the subpath construction and continue it, so you can insert a conditional without repeating the prelude or having to store it in a var for later concat.

[14:48:09.0000] <TabAtkins_>
It would be useful to be able to interrupt the subpath construction and continue it, so you can insert a conditional without repeating the prelude or having to store it in a var for later concat.

[14:48:48.0000] <TabAtkins_>
But SVG always starts with a fresh subpath (because it doesn't have the concept of extending one).

[14:49:00.0000] <TabAtkins_>
But SVG always starts with a fresh subpath (because it doesn't have the concept of extending one).

[14:49:01.0000] <TabAtkins_>
I think it should always start a new one.

[14:49:08.0000] <TabAtkins_>
I think it should always start a new one.

[14:49:32.0000] <Hixie>
hm, good point about stringing things together with if statements

[14:50:00.0000] <Hixie>
hm, good point about stringing things together with if statements

[14:50:01.0000] <TabAtkins_>
You can always just repeat the last point yourself, though.

[14:50:16.0000] <TabAtkins_>
You can always just repeat the last point yourself, though.

[14:51:54.0000] <Hixie>
but that would create a new subpath

[14:52:00.0000] <Hixie>
but that would create a new subpath

[14:52:01.0000] <Hixie>
so it would be quite different

[14:52:02.0000] <TabAtkins_>
Another possibility is extending the path syntax with a command (vaguely similar to z) that forces continuation from the previous subpath.

[14:52:03.0000] <TabAtkins_>
Oh yeah, stroking has different behavior.

[14:52:04.0000] <Hixie>
fill, too

[14:52:04.0000] <Hixie>
so it would be quite different

[14:52:05.0000] <TabAtkins_>
Hm.

[14:52:11.0000] <TabAtkins_>
Another possibility is extending the path syntax with a command (vaguely similar to z) that forces continuation from the previous subpath.

[14:52:17.0000] <TabAtkins_>
Oh yeah, stroking has different behavior.

[14:52:22.0000] <Hixie>
fill, too

[14:52:24.0000] <TabAtkins_>
Hm.

[14:52:27.0000] <Hixie>
and clip

[14:52:31.0000] <Hixie>
the three things you can do :-)

[14:52:34.0000] <TabAtkins_>
Heh.

[14:52:47.0000] <TabAtkins_>
Okay, then perhaps it should continue things.

[14:52:53.0000] <Hixie>
i think you're convincing me to continue rather than start afresh, yeah

[14:52:57.0000] <Hixie>
ok

[14:53:00.0000] <Hixie>
and clip

[14:53:01.0000] <Hixie>
the three things you can do :-)

[14:53:02.0000] <TabAtkins_>
Heh.

[14:53:03.0000] <TabAtkins_>
Okay, then perhaps it should continue things.

[14:53:04.0000] <Hixie>
i think you're convincing me to continue rather than start afresh, yeah

[14:53:05.0000] <Hixie>
ok

[14:53:06.0000] <TabAtkins_>
Forcing a new subpath is also trivial - just prepend an "M" with the same point that your first real command starts with.

[14:53:07.0000] <Hixie>
yeah

[14:53:18.0000] <TabAtkins_>
Forcing a new subpath is also trivial - just prepend an "M" with the same point that your first real command starts with.

[14:53:23.0000] <Hixie>
yeah

[14:53:38.0000] <TabAtkins_>
Also, you can do that *after* the conditional, which allows differing behavior from different branches.

[14:54:00.0000] <TabAtkins_>
Also, you can do that *after* the conditional, which allows differing behavior from different branches.

[14:55:43.0000] <Hixie>
um

[14:55:45.0000] <Hixie>
am i missing something

[14:55:51.0000] <Hixie>
or does SVG not say what the initial current point is

[14:56:00.0000] <Hixie>
um

[14:56:01.0000] <Hixie>
am i missing something

[14:56:02.0000] <Hixie>
or does SVG not say what the initial current point is

[14:56:03.0000] <TabAtkins_>
If you didn't start with an M, all the commands need a starting point.

[14:56:07.0000] <TabAtkins_>
If you didn't start with an M, all the commands need a starting point.

[14:56:31.0000] <Hixie>
oh i see, if you don't start with an M then the path is invalid

[14:56:38.0000] <Hixie>
well then

[14:56:43.0000] <Hixie>
that makes my earlier point a bit moot

[14:56:49.0000] <Hixie>
nevermind

[14:56:55.0000] <TabAtkins_>
Oh, indeed.  Why did I remember that wrong?

[14:57:00.0000] <Hixie>
oh i see, if you don't start with an M then the path is invalid

[14:57:01.0000] <Hixie>
well then

[14:57:02.0000] <Hixie>
that makes my earlier point a bit moot

[14:57:03.0000] <Hixie>
nevermind

[14:57:04.0000] <TabAtkins_>
Oh, indeed.  Why did I remember that wrong?

[14:57:05.0000] <Hixie>
dunno, i did too

[14:57:06.0000] <Hixie>
maybe i was confusing it with the canvas path api

[14:57:14.0000] <Hixie>
dunno, i did too

[14:57:20.0000] <Hixie>
maybe i was confusing it with the canvas path api

[15:02:34.0000] <TabAtkins_>
matjas: Since the CSSWG switched to the Hg repo, my service isn't necessary anymore.  You can redirect your @csscommits parser to the RSS feed at

[15:02:38.0000] <TabAtkins_>
 

[15:02:40.0000] <TabAtkins_>
 

[15:02:41.0000] <TabAtkins_>
http://dvcs.w3.org/hg/csswg/rss-log

[15:02:50.0000] <TabAtkins_>
matjas: http://dvcs.w3.org/hg/csswg/rss-log

[15:03:00.0000] <TabAtkins_>
matjas: Since the CSSWG switched to the Hg repo, my service isn't necessary anymore.  You can redirect your @csscommits parser to the RSS feed at

[15:03:00.0000] <TabAtkins_>
goddam middleclick.

[15:03:01.0000] <TabAtkins_>
http://dvcs.w3.org/hg/csswg/rss-log

[15:03:02.0000] <TabAtkins_>
matjas: http://dvcs.w3.org/hg/csswg/rss-log

[15:03:03.0000] <TabAtkins_>
goddam middleclick.

[15:04:00.0000] <heycam>
Hixie, you want the 1.1 path syntax -- 1.2T doesn't have arc commands

[15:04:03.0000] <heycam>
Hixie, you want the 1.1 path syntax -- 1.2T doesn't have arc commands

[15:15:00.0000] <Hixie>
heycam: is there anything for which i want 2.1T?

[15:15:13.0000] <Hixie>
heycam: is there anything for which i want 2.1T?

[15:15:58.0000] <heycam>
Hixie, there are a few definitions that are clearer/better, but off the top of my head I can't remember what things specifically

[15:16:00.0000] <heycam>
Hixie, there are a few definitions that are clearer/better, but off the top of my head I can't remember what things specifically

[15:16:32.0000] <heycam>
Hixie, for anything about the language or DOM itself I think you should definitely reference 1.1

[15:16:52.0000] <TabAtkins_>
I was told by shepazu to reference 1.2T for language stuff.

[15:17:00.0000] <heycam>
Hixie, for anything about the language or DOM itself I think you should definitely reference 1.1

[15:17:01.0000] <TabAtkins_>
I was told by shepazu to reference 1.2T for language stuff.

[15:17:02.0000] <heycam>
by language here I mean like markup, content

[15:17:03.0000] <TabAtkins_>
(Image Values is doing so now, for the definition of "decorated bounding box".)

[15:17:05.0000] <heycam>
by language here I mean like markup, content

[15:17:16.0000] <TabAtkins_>
(Image Values is doing so now, for the definition of "decorated bounding box".)

[15:17:34.0000] <heycam>
right for definitions and wordy stuff some 1.2T text is better

[15:17:38.0000] <TabAtkins_>
kk

[15:18:00.0000] <heycam>
right for definitions and wordy stuff some 1.2T text is better

[15:18:01.0000] <TabAtkins_>
kk

[15:18:02.0000] <heycam>
also shepazu wrote the improved bounding box text so of course he'd say that ;)

[15:18:03.0000] <TabAtkins_>
heh, kk

[15:18:16.0000] <heycam>
also shepazu wrote the improved bounding box text so of course he'd say that ;)

[15:18:22.0000] <TabAtkins_>
heh, kk

[15:22:00.0000] <Hixie>
heycam: k

[15:22:07.0000] <Hixie>
heycam: k

[15:22:42.0000] <Hixie>
heycam: any idea how long it'll be before there's an ED worth referencing that brings things back to reality?

[15:23:00.0000] <Hixie>
heycam: any idea how long it'll be before there's an ED worth referencing that brings things back to reality?

[15:23:01.0000] <Hixie>
or rather, that unifies svg-related stuff into one document?

[15:23:42.0000] <heycam>
Hixie, um, we had hoped to have something ready by next month

[15:24:00.0000] <heycam>
Hixie, um, we had hoped to have something ready by next month

[15:24:01.0000] <heycam>
Hixie, which would be at a minimum the current 1.1 spec with stub sections on features we've agreed to include in 2.0

[15:24:13.0000] <heycam>
Hixie, which would be at a minimum the current 1.1 spec with stub sections on features we've agreed to include in 2.0

[15:34:33.0000] <Hixie>
heycam: k

[15:34:52.0000] <Hixie>
heycam: btw either you are doug asked about paths and what i would need from the spec

[15:35:01.0000] <Hixie>
heycam: 1.1 and 1.2T are vague enough that i can just refer to them

[15:35:13.0000] <Hixie>
heycam: and handwave the interface between specs

[15:35:17.0000] <heycam>
Hixie, ok, though probably the first time I've heard you say something is vague enough ;)

[15:35:33.0000] <Hixie>
heycam: well i mean that it's completley underdefined and doesn't actually require that any paths draw at all in svg

[15:35:51.0000] <Hixie>
heycam: but that means i can just pretend that's good enough and if it's good enough to be interpreted for svg it's good enough to be interpreted for canvas :-)

[15:36:00.0000] <Hixie>
heycam: k

[15:36:01.0000] <Hixie>
heycam: btw either you are doug asked about paths and what i would need from the spec

[15:36:02.0000] <Hixie>
heycam: 1.1 and 1.2T are vague enough that i can just refer to them

[15:36:03.0000] <Hixie>
heycam: and handwave the interface between specs

[15:36:04.0000] <heycam>
Hixie, ok, though probably the first time I've heard you say something is vague enough ;)

[15:36:05.0000] <Hixie>
heycam: well i mean that it's completley underdefined and doesn't actually require that any paths draw at all in svg

[15:36:06.0000] <Hixie>
heycam: but that means i can just pretend that's good enough and if it's good enough to be interpreted for svg it's good enough to be interpreted for canvas :-)

[15:36:41.0000] <heycam>
Hixie, ok :) it should get improved as we work in SVG2 anyway, so when doing that I'll try to keep in mind how HTML is referencing it to not break things

[15:36:48.0000] <heycam>
s/work in/work on/

[15:36:49.0000] <Hixie>
heycam: going forward though it would be nice if it was (a) actually defined in terms of testable requirements, and (b) had an interface where given a string, it would return a path (a list of subpaths each consisting of coordinates and lines between them, each subpath optionally marked as closed)

[15:36:53.0000] <Hixie>
heycam: k

[15:37:00.0000] <heycam>
Hixie, ok :) it should get improved as we work in SVG2 anyway, so when doing that I'll try to keep in mind how HTML is referencing it to not break things

[15:37:01.0000] <heycam>
s/work in/work on/

[15:37:02.0000] <Hixie>
heycam: going forward though it would be nice if it was (a) actually defined in terms of testable requirements, and (b) had an interface where given a string, it would return a path (a list of subpaths each consisting of coordinates and lines between them, each subpath optionally marked as closed)

[15:37:03.0000] <Hixie>
heycam: k

[15:37:04.0000] <heycam>
an interface as in a spec interface definition? or an IDL interface?

[15:37:05.0000] <Hixie>
heycam: feel free to ask me to change things to help you out if you want me to refernece it a different way

[15:37:05.0000] <heycam>
an interface as in a spec interface definition? or an IDL interface?

[15:37:06.0000] <TabAtkins_>
heycam: Also note that CSS would like to use SVG paths *without* drawing.

[15:37:07.0000] <Hixie>
heycam: spec interface

[15:37:08.0000] <Hixie>
TabAtkins_: i use them without drawing too. so does svg actually.

[15:37:08.0000] <Hixie>
heycam: feel free to ask me to change things to help you out if you want me to refernece it a different way

[15:37:11.0000] <TabAtkins_>
heycam: Also note that CSS would like to use SVG paths *without* drawing.

[15:37:11.0000] <Hixie>
heycam: spec interface

[15:37:21.0000] <Hixie>
TabAtkins_: i use them without drawing too. so does svg actually.

[15:37:34.0000] <Hixie>
heycam: as in, a <dfn> of an algorithm i can just reference

[15:38:00.0000] <Hixie>
heycam: as in, a <dfn> of an algorithm i can just reference

[15:38:01.0000] <heycam>
yup ok

[15:38:03.0000] <heycam>
yup ok

[15:44:40.0000] <Hixie>
http://www.whatwg.org/specs/web-apps/current-work/#dom-path-addpathdata is what i have now

[15:45:00.0000] <Hixie>
http://www.whatwg.org/specs/web-apps/current-work/#dom-path-addpathdata is what i have now

[15:45:37.0000] <Hixie>
heycam: also, would be nice to have some way to do fragments of paths, as TabAtkins_ and i were discussing earlier

[15:46:00.0000] <Hixie>
heycam: also, would be nice to have some way to do fragments of paths, as TabAtkins_ and i were discussing earlier

[15:46:01.0000] <heycam>
Hixie, as part of the <dfn> that does path parsing? so you can parse say just "L100,100"?

[15:46:09.0000] <heycam>
Hixie, as part of the <dfn> that does path parsing? so you can parse say just "L100,100"?

[15:46:26.0000] <TabAtkins_>
heycam: Yeah, given an existing subpath as context.

[15:46:46.0000] <Hixie>
heycam: yeah

[15:46:48.0000] <heycam>
ok sure

[15:47:00.0000] <TabAtkins_>
heycam: Yeah, given an existing subpath as context.

[15:47:01.0000] <Hixie>
heycam: yeah

[15:47:02.0000] <heycam>
ok sure

[15:47:02.0000] <TabAtkins_>
(Or I suppose, without such a context, assuming an "M0 0" beforehand.)

[15:47:28.0000] <Hixie>
ideally given not a subpath as context, but a point

[15:47:39.0000] <Hixie>
and then i can just graft the first subpath i get back to the existing subpath

[15:47:49.0000] <Hixie>
or something

[15:47:52.0000] <Hixie>
i dunno

[15:47:53.0000] <heycam>
ok so presumably this matters just for the relative commands

[15:47:55.0000] <Hixie>
might not really be needed

[15:48:00.0000] <Hixie>
ideally given not a subpath as context, but a point

[15:48:01.0000] <Hixie>
and then i can just graft the first subpath i get back to the existing subpath

[15:48:01.0000] <Hixie>
well the idea is that you could do:

[15:48:02.0000] <Hixie>
or something

[15:48:03.0000] <Hixie>
i dunno

[15:48:04.0000] <heycam>
ok so presumably this matters just for the relative commands

[15:48:05.0000] <Hixie>
might not really be needed

[15:48:06.0000] <Hixie>
well the idea is that you could do:

[15:48:07.0000] <Hixie>
path.addPathData('M 100 100');

[15:48:08.0000] <heycam>
if the output of this algorithm is a list of absolute abstract path segments

[15:48:09.0000] <Hixie>
if (foo) path.addPathData('L 300 100');

[15:48:10.0000] <Hixie>
path.addPathData('M 100 100');

[15:48:16.0000] <heycam>
if the output of this algorithm is a list of absolute abstract path segments

[15:48:19.0000] <Hixie>
if (foo) path.addPathData('L 300 100');

[15:48:28.0000] <Hixie>
path.addPathData('v 100');

[15:48:42.0000] <Hixie>
and it would either return a capital gamma or a vertical line depending on foo's value

[15:48:48.0000] <Hixie>
s/return/cause the path to contain/

[15:49:00.0000] <Hixie>
path.addPathData('v 100');

[15:49:01.0000] <Hixie>
and it would either return a capital gamma or a vertical line depending on foo's value

[15:49:02.0000] <Hixie>
s/return/cause the path to contain/

[15:49:02.0000] <heycam>
sure, sounds reasonable

[15:49:23.0000] <heycam>
and a path interface that might actually be usable!

[15:50:00.0000] <heycam>
and a path interface that might actually be usable!

[15:51:29.0000] <TabAtkins_>
Yus.

[15:51:40.0000] <TabAtkins_>
SVG path syntax >>> canvas path API.

[15:51:50.0000] <TabAtkins_>
s/canvas path/current canvas path/

[15:52:00.0000] <TabAtkins_>
Yus.

[15:52:01.0000] <TabAtkins_>
SVG path syntax >>> canvas path API.

[15:52:02.0000] <TabAtkins_>
s/canvas path/current canvas path/

[16:35:00.0000] <Hixie>
hm

[16:35:01.0000] <Hixie>
dashed lines are a pain to define

[16:35:07.0000] <Hixie>
hm

[16:35:12.0000] <Hixie>
dashed lines are a pain to define

[16:36:29.0000] <TabAtkins_>
And SVG doesn't help you out. :/

[16:37:00.0000] <TabAtkins_>
And SVG doesn't help you out. :/

[16:37:46.0000] <TabAtkins_>
What's the issue you're having?

[16:38:00.0000] <TabAtkins_>
What's the issue you're having?

[16:40:50.0000] <Hixie>
TabAtkins_: so i'm defining it by saying you cut out bits of the path that aren't in the dash

[16:41:00.0000] <Hixie>
TabAtkins_: so i'm defining it by saying you cut out bits of the path that aren't in the dash

[16:41:01.0000] <Hixie>
TabAtkins_: but there's nothing to cut in the line between the last point and the first point of a closed path

[16:41:02.0000] <Hixie>
TabAtkins_: so i have to add it

[16:41:06.0000] <Hixie>
TabAtkins_: but there's nothing to cut in the line between the last point and the first point of a closed path

[16:41:09.0000] <Hixie>
TabAtkins_: so i have to add it

[16:41:32.0000] <Hixie>
TabAtkins_: but what if the whole subpath is in an "on" segment? then i don't want to add it, because i have to leave it to get the right join

[16:41:36.0000] <Hixie>
TabAtkins_: etc

[16:41:54.0000] <Hixie>
also, 0-width segments

[16:42:00.0000] <Hixie>
TabAtkins_: but what if the whole subpath is in an "on" segment? then i don't want to add it, because i have to leave it to get the right join

[16:42:01.0000] <Hixie>
TabAtkins_: etc

[16:42:02.0000] <Hixie>
also, 0-width segments

[16:42:03.0000] <TabAtkins_>
I don't understand what you mean by "nothing to cut" in closed paths.

[16:42:21.0000] <TabAtkins_>
I don't understand what you mean by "nothing to cut" in closed paths.

[16:49:46.0000] <TabAtkins_>
(Specifically, a closed path still draws dashes (and thus has stuff to cut out) on the line you mention.)

[16:50:00.0000] <TabAtkins_>
(Specifically, a closed path still draws dashes (and thus has stuff to cut out) on the line you mention.)

[16:52:00.0000] <Hixie>
i mean there's no line between the last point and the first point in the path

[16:52:01.0000] <Hixie>
it's implied

[16:52:01.0000] <Hixie>
i mean there's no line between the last point and the first point in the path

[16:52:02.0000] <Hixie>
so there's nothing for me to remove

[16:52:02.0000] <Hixie>
it's implied

[16:52:03.0000] <Hixie>
i actually have to _add_ the line before i can remove it

[16:52:10.0000] <Hixie>
so there's nothing for me to remove

[16:52:18.0000] <Hixie>
i actually have to _add_ the line before i can remove it

[16:52:28.0000] <TabAtkins_>
The .close() command doesnt' add it?

[16:52:34.0000] <Hixie>
it just sets a flag

[16:52:42.0000] <Hixie>
you can't add the line because otherwise the join is wrong

[16:53:00.0000] <TabAtkins_>
The .close() command doesnt' add it?

[16:53:01.0000] <Hixie>
it just sets a flag

[16:53:02.0000] <Hixie>
you can't add the line because otherwise the join is wrong

[16:56:50.0000] <TabAtkins_>
Oh wow, arcTo is *confusing*.

[16:57:00.0000] <TabAtkins_>
Oh wow, arcTo is *confusing*.

[16:57:01.0000] <Hixie>
that's why i added the diagrams yesterday

[16:57:19.0000] <Hixie>
that's why i added the diagrams yesterday

[16:57:35.0000] <Hixie>
with the diagrams it's not so bad

[16:57:44.0000] <Hixie>
(and actually is really useful for rounded corners)

[16:57:58.0000] <TabAtkins_>
...would you mind if I wrote a visualizer for this that let you drag around the points/radius/etc?

[16:58:00.0000] <Hixie>
with the diagrams it's not so bad

[16:58:01.0000] <Hixie>
(and actually is really useful for rounded corners)

[16:58:02.0000] <TabAtkins_>
...would you mind if I wrote a visualizer for this that let you drag around the points/radius/etc?

[16:58:03.0000] <Hixie>
i would love it. You'll find the code for the current diagrams in the spec in a comment, which will likely be a good starting point

[16:58:17.0000] <Hixie>
i would love it. You'll find the code for the current diagrams in the spec in a comment, which will likely be a good starting point

[16:59:00.0000] <TabAtkins_>
I guess to do a roundrect you just issue four arcTo commands in succession?

[16:59:01.0000] <Hixie>
(search the source for "update the label positions")

[16:59:01.0000] <TabAtkins_>
I guess to do a roundrect you just issue four arcTo commands in succession?

[16:59:02.0000] <Hixie>
you'd have some lineTos and moveTos, but yeah

[16:59:03.0000] <Hixie>
oh actually yeah

[16:59:04.0000] <Hixie>
i guess you don't even need lineTos

[16:59:05.0000] <TabAtkins_>
You either need to figure out where the first edge starts after the curve, or start in the middle of an edge and finish with a lineTo back to that point.

[16:59:05.0000] <Hixie>
(search the source for "update the label positions")

[16:59:14.0000] <Hixie>
you'd have some lineTos and moveTos, but yeah

[16:59:20.0000] <Hixie>
oh actually yeah

[16:59:23.0000] <Hixie>
i guess you don't even need lineTos

[16:59:25.0000] <TabAtkins_>
You either need to figure out where the first edge starts after the curve, or start in the middle of an edge and finish with a lineTo back to that point.

[16:59:36.0000] <Hixie>
yeah you start in the middle and end with a closePath

[16:59:40.0000] <TabAtkins_>
Yeah.


2012-03-14
[17:00:00.0000] <Hixie>
yeah you start in the middle and end with a closePath

[17:00:01.0000] <TabAtkins_>
Yeah.

[17:01:00.0000] <TabAtkins_>
Ah, now I kinda understand the dash issue you're talking about.

[17:01:05.0000] <TabAtkins_>
Ah, now I kinda understand the dash issue you're talking about.

[17:03:48.0000] <Hixie>
maybe i should just handwave this rather than being overly specific about the algorithm to do this

[17:04:00.0000] <Hixie>
maybe i should just handwave this rather than being overly specific about the algorithm to do this

[17:04:01.0000] <TabAtkins_>
I suspect the problem comes from you defining the join-drawing in the wrong place.

[17:04:16.0000] <TabAtkins_>
I suspect the problem comes from you defining the join-drawing in the wrong place.

[17:04:28.0000] <TabAtkins_>
I'm trying to verify this suspicion.

[17:04:39.0000] <Hixie>
well, not so much the wrong place as in the wrong way

[17:05:00.0000] <TabAtkins_>
I'm trying to verify this suspicion.

[17:05:01.0000] <Hixie>
well, not so much the wrong place as in the wrong way

[17:05:02.0000] <Hixie>
what i should do is define something that says how you stroke a path, going from a path to another path, the latter of which, if filled, gives you what stroking the first one would give you today

[17:05:12.0000] <Hixie>
what i should do is define something that says how you stroke a path, going from a path to another path, the latter of which, if filled, gives you what stroking the first one would give you today

[17:05:27.0000] <Hixie>
then i can put all the line stuff into that algorithm

[17:05:40.0000] <Hixie>
instead of implying that that algorithm exists, and having multiple things in the spec imply additional steps to it

[17:06:00.0000] <Hixie>
then i can put all the line stuff into that algorithm

[17:06:01.0000] <Hixie>
instead of implying that that algorithm exists, and having multiple things in the spec imply additional steps to it

[17:06:01.0000] <Hixie>
but since i've no idea how to write that algorithm, i'm gonna stick to this current approach :-)

[17:06:02.0000] <Hixie>
but since i've no idea how to write that algorithm, i'm gonna stick to this current approach :-)

[17:06:03.0000] <TabAtkins_>
Oh, you mean converting 'stroke' to 'fill this path by inflating the original path somewhow'?

[17:06:08.0000] <TabAtkins_>
Oh, you mean converting 'stroke' to 'fill this path by inflating the original path somewhow'?

[17:06:42.0000] <Hixie>
yeah

[17:07:00.0000] <Hixie>
yeah

[17:07:01.0000] <Hixie>
yeah i really need to just bite the bullet and do that

[17:07:17.0000] <Hixie>
yeah i really need to just bite the bullet and do that

[17:07:27.0000] <Hixie>
this is just going to become spaghetti spec otherwise

[17:07:34.0000] <TabAtkins_>
SVG Vector Effects *may* have that.

[17:07:36.0000] <TabAtkins_>
But I'm not sure.

[17:07:39.0000] <TabAtkins_>
It may just handwave.

[17:08:00.0000] <Hixie>
this is just going to become spaghetti spec otherwise

[17:08:00.0000] <TabAtkins_>
(There's an effect for converting a path into the outline of stroking it.)

[17:08:01.0000] <TabAtkins_>
SVG Vector Effects *may* have that.

[17:08:02.0000] <TabAtkins_>
But I'm not sure.

[17:08:02.0000] <heycam>
vector effects never got to a detailed level of spec

[17:08:03.0000] <TabAtkins_>
It may just handwave.

[17:08:04.0000] <TabAtkins_>
(There's an effect for converting a path into the outline of stroking it.)

[17:08:05.0000] <heycam>
vector effects never got to a detailed level of spec

[17:08:06.0000] <TabAtkins_>
That's what I feared.

[17:08:07.0000] <heycam>
stroking/outsetting/whatever a path is quite complicated

[17:08:08.0000] <TabAtkins_>
That's what I feared.

[17:08:23.0000] <heycam>
stroking/outsetting/whatever a path is quite complicated

[17:08:31.0000] <TabAtkins_>
Yup.

[17:08:46.0000] <Hixie>
canvas already has a method that takes a path and strokes it and gives you back another path representing the stroke

[17:08:50.0000] <Hixie>
(as of, like, 24 hours ago)

[17:08:57.0000] <heycam>
how do you define it? :)

[17:09:00.0000] <TabAtkins_>
Yup.

[17:09:01.0000] <Hixie>
canvas already has a method that takes a path and strokes it and gives you back another path representing the stroke

[17:09:02.0000] <Hixie>
(as of, like, 24 hours ago)

[17:09:03.0000] <heycam>
how do you define it? :)

[17:09:04.0000] <Hixie>
"Create a new list of subpaths d, consisting of the subpaths necessary to describe the result of tracing the subpaths in c, in the same order, while applying the line styles of a (the lineWidth, lineCap, lineJoin, and (if appropriate) miterLimit attributes). Subpaths in d must wind clockwise, regardless of the direction of paths in c."

[17:09:05.0000] <Hixie>
/me waves his hand meaningfully

[17:09:14.0000] <Hixie>
"Create a new list of subpaths d, consisting of the subpaths necessary to describe the result of tracing the subpaths in c, in the same order, while applying the line styles of a (the lineWidth, lineCap, lineJoin, and (if appropriate) miterLimit attributes). Subpaths in d must wind clockwise, regardless of the direction of paths in c."

[17:09:24.0000] <Hixie>
/me waves his hand meaningfully

[17:09:39.0000] <heycam>
i mean i think it's fine to handwave the actual stroking part

[17:09:48.0000] <heycam>
since it's a well understood graphical primitive

[17:10:00.0000] <heycam>
i mean i think it's fine to handwave the actual stroking part

[17:10:01.0000] <heycam>
since it's a well understood graphical primitive

[17:10:02.0000] <Hixie>
yeah well it is until you end up having to define how line joins, line caps, and dashing all interact

[17:10:02.0000] <Hixie>
yeah well it is until you end up having to define how line joins, line caps, and dashing all interact

[17:10:03.0000] <TabAtkins_>
/me needs to file some spec bugs on SVG2...

[17:10:04.0000] <heycam>
mind you, while all 2d graphics libraries will be able to immediately paint a stroked path, not all can return you a path that presents that stroke shape

[17:10:13.0000] <TabAtkins_>
/me needs to file some spec bugs on SVG2...

[17:10:14.0000] <heycam>
mind you, while all 2d graphics libraries will be able to immediately paint a stroked path, not all can return you a path that presents that stroke shape

[17:10:30.0000] <Hixie>
then it starts getting less and less like handwaving and more and more like trying to pin a tail on a donkey without ever drawing the donkey

[17:10:32.0000] <heycam>
*represents

[17:10:43.0000] <heycam>
stroke the tail on the donkey :)

[17:11:00.0000] <Hixie>
then it starts getting less and less like handwaving and more and more like trying to pin a tail on a donkey without ever drawing the donkey

[17:11:01.0000] <heycam>
*represents

[17:11:02.0000] <heycam>
stroke the tail on the donkey :)

[17:11:03.0000] <Hixie>
heycam: i expect a lot of these graphical libraries are suddenly gonna find a bunch of patches going their way to implement a series of new features...

[17:11:04.0000] <heycam>
yeah

[17:11:04.0000] <Hixie>
heycam: i expect a lot of these graphical libraries are suddenly gonna find a bunch of patches going their way to implement a series of new features...

[17:11:13.0000] <heycam>
yeah

[17:11:30.0000] <Hixie>
either that or i'll be removing some of these new canvas features soon when implementors' eyes bug out :-)

[17:12:00.0000] <Hixie>
either that or i'll be removing some of these new canvas features soon when implementors' eyes bug out :-)

[17:14:00.0000] <Hixie>
bbl

[17:14:12.0000] <Hixie>
bbl

[17:24:00.0000] <TabAtkins_>
Hixie: Dirk Schulze points out that SVG's path parser won't ever throw errors; each individual construction greedily consumes as much as possible, and if there is any left over when the root construction can no longer consume anything while staying valid, it's thrown away.

[17:24:01.0000] <TabAtkins_>
Hixie: Dirk Schulze points out that SVG's path parser won't ever throw errors; each individual construction greedily consumes as much as possible, and if there is any left over when the root construction can no longer consume anything while staying valid, it's thrown away.

[17:25:48.0000] <TabAtkins_>
And so, step 2 of the list introduced with "The addPathData(d) method..." is unnecessary, as no errors can ever be thrown.

[17:25:59.0000] <TabAtkins_>
Or rather, as step 1 can never fail.

[17:26:00.0000] <TabAtkins_>
And so, step 2 of the list introduced with "The addPathData(d) method..." is unnecessary, as no errors can ever be thrown.

[17:26:01.0000] <TabAtkins_>
Or rather, as step 1 can never fail.

[17:26:02.0000] <TabAtkins_>
(Outside of the standard hardware-limitations clause.)

[17:26:15.0000] <TabAtkins_>
(Outside of the standard hardware-limitations clause.)

[18:01:00.0000] <Hixie>
TabAtkins_: where does it say that?

[18:01:19.0000] <Hixie>
TabAtkins_: where does it say that?

[18:02:28.0000] <TabAtkins_>
Just below the BNF grammar.

[18:03:00.0000] <TabAtkins_>
Just below the BNF grammar.

[19:21:31.0000] <llrcombs>
would it be a reasonable request to allow messages between Web Workers to include typed arrays?

[19:22:00.0000] <llrcombs>
would it be a reasonable request to allow messages between Web Workers to include typed arrays?

[19:22:01.0000] <llrcombs>
I'd like to have one worker manage several worker threads, sending Int8Arrays and similar between them, to calculate pruning tables more quickly than with just one worker

[19:22:17.0000] <llrcombs>
I'd like to have one worker manage several worker threads, sending Int8Arrays and similar between them, to calculate pruning tables more quickly than with just one worker

[19:24:30.0000] <llrcombs>
oh, it looks like transferable objects do that

[19:24:41.0000] <llrcombs>
is that in spec, or just a WebKit extension?

[19:24:49.0000] <MikeSmith>
llrcombs: in the spec

[19:25:00.0000] <llrcombs>
oh, it looks like transferable objects do that

[19:25:01.0000] <llrcombs>
is that in spec, or just a WebKit extension?

[19:25:02.0000] <MikeSmith>
llrcombs: in the spec

[19:25:03.0000] <llrcombs>
cool!

[19:25:09.0000] <llrcombs>
cool!

[19:28:00.0000] <MikeSmith>
video peoples, how does seeking and adjustment of playback rate work with encrypted video?

[19:28:08.0000] <MikeSmith>
video peoples, how does seeking and adjustment of playback rate work with encrypted video?

[19:28:42.0000] <MikeSmith>
would it just work the same?

[19:29:00.0000] <MikeSmith>
would it just work the same?

[19:29:01.0000] <MikeSmith>
it seems like the encryption could muff with the ability to do those operations from JS

[19:29:13.0000] <MikeSmith>
it seems like the encryption could muff with the ability to do those operations from JS

[19:30:38.0000] <MikeSmith>
Hixie: thanks for pushing to the W3C versions

[19:30:45.0000] <Hixie>
np

[19:30:53.0000] <Hixie>
TabAtkins_: ah, will look

[19:31:00.0000] <MikeSmith>
Hixie: thanks for pushing to the W3C versions

[19:31:01.0000] <Hixie>
np

[19:31:02.0000] <Hixie>
TabAtkins_: ah, will look

[19:32:52.0000] <MikeSmith>
Hixie: ah this doesn't include the replacement of the code-point names?

[19:33:00.0000] <MikeSmith>
Hixie: ah this doesn't include the replacement of the code-point names?

[19:33:25.0000] <MikeSmith>
not yet integrated that script?

[19:34:00.0000] <MikeSmith>
not yet integrated that script?

[19:40:54.0000] <MikeSmith>
hsivonen: I know you are not around right now but as far as what I was talking about earlier, regarding how to make the local validator build and install easier for end users, I wonder if it would help to have the build emit a message saying, "If you have problem with building or installing the validator and need help in real time, you can join the #whatwg channel on irc.freenode.net and ask there."

[19:41:00.0000] <MikeSmith>
hsivonen: I know you are not around right now but as far as what I was talking about earlier, regarding how to make the local validator build and install easier for end users, I wonder if it would help to have the build emit a message saying, "If you have problem with building or installing the validator and need help in real time, you can join the #whatwg channel on irc.freenode.net and ask there."

[19:41:48.0000] <MikeSmith>
scott_gonzalez: fwiw, I pushed a change to the validator sources a few hours ago that streamlines the initial install

[19:42:00.0000] <MikeSmith>
scott_gonzalez: fwiw, I pushed a change to the validator sources a few hours ago that streamlines the initial install

[19:42:01.0000] <MikeSmith>
it should cut down the install time considerably

[19:42:13.0000] <MikeSmith>
it should cut down the install time considerably

[19:43:38.0000] <MikeSmith>
scott_gonzalez: I hope ultimately you guys could switch to using a local instance of the validator to run your validation tests

[19:43:55.0000] <MikeSmith>
it's just way better in many ways

[19:44:00.0000] <MikeSmith>
scott_gonzalez: I hope ultimately you guys could switch to using a local instance of the validator to run your validation tests

[19:44:01.0000] <MikeSmith>
it's just way better in many ways

[19:44:02.0000] <MikeSmith>
e.g., it handles data-* attributes just fine without you needing to filter out the errors

[19:44:22.0000] <MikeSmith>
e.g., it handles data-* attributes just fine without you needing to filter out the errors

[19:45:38.0000] <MikeSmith>
and it is at least an order of magnitude faster than any doing it with the jing-html thing I pointed you to

[19:46:00.0000] <MikeSmith>
and it is at least an order of magnitude faster than any doing it with the jing-html thing I pointed you to

[19:46:43.0000] <MikeSmith>
for a normal file it takes like 100ms or 200ms to validate

[19:47:00.0000] <MikeSmith>
for a normal file it takes like 100ms or 200ms to validate

[19:47:01.0000] <MikeSmith>
for really small files it takes only 50ms

[19:47:02.0000] <MikeSmith>
or less

[19:47:17.0000] <MikeSmith>
for really small files it takes only 50ms

[19:47:22.0000] <MikeSmith>
or less

[19:50:00.0000] <MikeSmith>
Hixie: sorry man, I see that you actually did apply it

[19:50:00.0000] <MikeSmith>
Hixie: sorry man, I see that you actually did apply it

[19:50:01.0000] <MikeSmith>
/me kicks his browser cache in the teeth

[19:50:16.0000] <MikeSmith>
/me kicks his browser cache in the teeth

[19:52:40.0000] <MikeSmith>
matjas: about "criteria that cannot be expressed by a DTD, but can still be checked by a machine”, there are many

[19:52:57.0000] <MikeSmith>
so please (re)ping me about that when you are back

[19:53:00.0000] <MikeSmith>
matjas: about "criteria that cannot be expressed by a DTD, but can still be checked by a machine”, there are many

[19:53:01.0000] <MikeSmith>
so please (re)ping me about that when you are back

[19:54:00.0000] <MikeSmith>
one example is that schema languages can't check the text content of elements

[19:54:14.0000] <MikeSmith>
one example is that schema languages can't check the text content of elements

[19:54:49.0000] <MikeSmith>
like for <time> and <script> and <style> the spec has some specific document-conformance requirements for their text content

[19:55:00.0000] <MikeSmith>
like for <time> and <script> and <style> the spec has some specific document-conformance requirements for their text content

[19:55:36.0000] <MikeSmith>
theoretically that could be checked using a regexp

[19:56:00.0000] <MikeSmith>
theoretically that could be checked using a regexp

[19:56:01.0000] <MikeSmith>
but it's not practical and it's also the suckiest possible way to do it from a user-experience POV

[19:56:08.0000] <MikeSmith>
but it's not practical and it's also the suckiest possible way to do it from a user-experience POV

[19:56:33.0000] <MikeSmith>
because the only possible error you get back is "fail"

[19:56:43.0000] <MikeSmith>
with no details about why it's failed

[19:56:50.0000] <MikeSmith>
that is, which part is invalid

[19:57:00.0000] <MikeSmith>
because the only possible error you get back is "fail"

[19:57:01.0000] <MikeSmith>
with no details about why it's failed

[19:57:02.0000] <MikeSmith>
that is, which part is invalid

[19:57:47.0000] <MikeSmith>
in contrast the way those text-content checks are implemented in validator.nu, it attempts to actually report the actual specific error

[19:58:00.0000] <MikeSmith>
in contrast the way those text-content checks are implemented in validator.nu, it attempts to actually report the actual specific error

[19:58:01.0000] <MikeSmith>
but the location

[19:58:02.0000] <MikeSmith>
*both the location

[19:58:03.0000] <MikeSmith>
line  number and column number

[19:58:04.0000] <MikeSmith>
*both the location

[19:58:11.0000] <MikeSmith>
line  number and column number

[19:58:29.0000] <MikeSmith>
and also what part of the string is wrong

[19:59:00.0000] <MikeSmith>
and also what part of the string is wrong

[19:59:00.0000] <MikeSmith>
e.g., it says "Expected a foo character here but found bar"

[20:02:31.0000] <MikeSmith>
https://bitbucket.org/validator/syntax/src/tip/relaxng/datatype/java/src/org/whattf/datatype/ScriptDocumentation.java

[20:03:00.0000] <MikeSmith>
https://bitbucket.org/validator/syntax/src/tip/relaxng/datatype/java/src/org/whattf/datatype/ScriptDocumentation.java

[20:04:00.0000] <MikeSmith>
and https://bitbucket.org/validator/syntax/src/tip/relaxng/datatype/java/src/org/whattf/datatype/FunctionBody.java

[20:04:08.0000] <MikeSmith>
and https://bitbucket.org/validator/syntax/src/tip/relaxng/datatype/java/src/org/whattf/datatype/FunctionBody.java

[20:04:36.0000] <MikeSmith>
which validates JS by passing it off to Rhino to check

[20:05:00.0000] <MikeSmith>
which validates JS by passing it off to Rhino to check

[20:10:00.0000] <Hixie>
MikeSmith: yeah, script is in

[20:10:11.0000] <Hixie>
MikeSmith: yeah, script is in

[20:10:27.0000] <MikeSmith>
yep I see now

[20:10:29.0000] <MikeSmith>
thanks man

[20:11:00.0000] <MikeSmith>
yep I see now

[20:11:01.0000] <MikeSmith>
thanks man

[20:12:00.0000] <Hixie>
MikeSmith: i no longer make any promises that the w3c spec says what it should

[20:12:13.0000] <Hixie>
MikeSmith: i no longer make any promises that the w3c spec says what it should

[20:12:29.0000] <MikeSmith>
yeah I know

[20:12:49.0000] <MikeSmith>
I am hoping we can reverse that change actually

[20:12:56.0000] <MikeSmith>
it was misguided from the get-go

[20:13:00.0000] <MikeSmith>
yeah I know

[20:13:00.0000] <Hixie>
no kidding

[20:13:01.0000] <MikeSmith>
I am hoping we can reverse that change actually

[20:13:02.0000] <MikeSmith>
it was misguided from the get-go

[20:13:03.0000] <Hixie>
no kidding

[20:13:34.0000] <MikeSmith>
need to put the brakes on this stuff

[20:14:00.0000] <MikeSmith>
need to put the brakes on this stuff

[20:14:27.0000] <MikeSmith>
draw the line between plain nuisances and at-least-marginally-substantial

[20:15:00.0000] <MikeSmith>
draw the line between plain nuisances and at-least-marginally-substantial

[20:15:01.0000] <MikeSmith>
that "issue" comes nowhere near the normal "I can live with it" criteria

[20:15:07.0000] <MikeSmith>
that "issue" comes nowhere near the normal "I can live with it" criteria

[20:16:00.0000] <MikeSmith>
I wish the issue proliferators would exercise better judgment

[20:16:08.0000] <MikeSmith>
I wish the issue proliferators would exercise better judgment

[20:18:47.0000] <Hixie>
the system is explictly designed to enable them to raise issues and waste a lot of time

[20:18:55.0000] <Hixie>
that's literally the entire purpose of the system

[20:19:00.0000] <Hixie>
the system is explictly designed to enable them to raise issues and waste a lot of time

[20:19:01.0000] <Hixie>
that's literally the entire purpose of the system

[20:19:02.0000] <Hixie>
(though by its designers it is phrased as "discourage people by making such issues take a lot of time")

[20:19:03.0000] <Hixie>
(but that clearly shows a lack of understanding of the social dynamics)

[20:19:12.0000] <Hixie>
(though by its designers it is phrased as "discourage people by making such issues take a lot of time")

[20:19:24.0000] <Hixie>
(but that clearly shows a lack of understanding of the social dynamics)

[20:24:00.0000] <MikeSmith>
Hixie: that was not the purpose the designer of the system intended

[20:24:01.0000] <Hixie>
what was the purpose?

[20:24:06.0000] <MikeSmith>
Hixie: that was not the purpose the designer of the system intended

[20:24:16.0000] <Hixie>
what was the purpose?

[20:24:40.0000] <Hixie>
i've heard chairs explicitly tell me that was the goal -- to make raising issues time consuming so that only important issues would get raised

[20:25:00.0000] <Hixie>
i've heard chairs explicitly tell me that was the goal -- to make raising issues time consuming so that only important issues would get raised

[20:25:01.0000] <MikeSmith>
I don't know which chairs said that but I would imagine othermaciej doesn't see that as a goal

[20:25:20.0000] <MikeSmith>
I don't know which chairs said that but I would imagine othermaciej doesn't see that as a goal

[20:25:28.0000] <MikeSmith>
anyway I don't want to speak for him

[20:26:00.0000] <MikeSmith>
anyway I don't want to speak for him

[20:26:01.0000] <MikeSmith>
I think the decision policy was designed in good faith to enable resolution on bugs where we otherwise couldn't get agreement

[20:26:15.0000] <MikeSmith>
I think the decision policy was designed in good faith to enable resolution on bugs where we otherwise couldn't get agreement

[20:26:53.0000] <Hixie>
if that was the goal, then it's way overengineered, and doesn't work.

[20:27:00.0000] <Hixie>
if that was the goal, then it's way overengineered, and doesn't work.

[20:27:01.0000] <MikeSmith>
it's just the way it's been applied, it's ended up being used as a blunt instrument

[20:27:03.0000] <MikeSmith>
it's just the way it's been applied, it's ended up being used as a blunt instrument

[20:27:47.0000] <MikeSmith>
and massively abused by a very small number of WG participants

[20:28:00.0000] <MikeSmith>
and massively abused by a very small number of WG participants

[20:28:41.0000] <MikeSmith>
Hixie: yeah I think it's worth looking at re-engineering it

[20:29:00.0000] <MikeSmith>
Hixie: yeah I think it's worth looking at re-engineering it

[20:29:01.0000] <MikeSmith>
but pausing to do that at this point seems like something that's unlikely to happen

[20:29:17.0000] <MikeSmith>
but pausing to do that at this point seems like something that's unlikely to happen

[20:29:43.0000] <Hixie>
i think the best part of the process right now is the way that it only kicks in if the editor disagrees with someone, but when that someone proposes an alternative, the editor has to do extra work to repeat the objection for it to be considered

[20:29:47.0000] <MikeSmith>
and filing bugs piecemeal against the decision policy is not really workable either

[20:30:00.0000] <Hixie>
i think the best part of the process right now is the way that it only kicks in if the editor disagrees with someone, but when that someone proposes an alternative, the editor has to do extra work to repeat the objection for it to be considered

[20:30:01.0000] <MikeSmith>
and filing bugs piecemeal against the decision policy is not really workable either

[20:30:02.0000] <Hixie>
and has to do so for _every single issue_ raised, since for few issues do people actually care enough even if they agree with the editor

[20:30:03.0000] <MikeSmith>
I hear you

[20:30:05.0000] <Hixie>
and has to do so for _every single issue_ raised, since for few issues do people actually care enough even if they agree with the editor

[20:30:20.0000] <MikeSmith>
I hear you

[20:30:29.0000] <othermaciej_>
Hixie: Path having a CTM is weird

[20:30:32.0000] <Hixie>
(the net result being i don't bother anymore and the w3c copy of the spec is getting more and more crazy)

[20:31:00.0000] <othermaciej_>
Hixie: Path having a CTM is weird

[20:31:01.0000] <Hixie>
(the net result being i don't bother anymore and the w3c copy of the spec is getting more and more crazy)

[20:31:02.0000] <Hixie>
othermaciej_: agreed. not sure how else to make it possible to do things like have another path stamped onto a path in four different positions, rotations, and skews.

[20:31:15.0000] <Hixie>
othermaciej_: agreed. not sure how else to make it possible to do things like have another path stamped onto a path in four different positions, rotations, and skews.

[20:31:41.0000] <MikeSmith>
Hixie: yeah I realize that too and maybe that is an inevitable consequence of this arrangement and maybe that's where we would have ended up regardless of the particulars of the decision polity

[20:32:00.0000] <MikeSmith>
Hixie: yeah I realize that too and maybe that is an inevitable consequence of this arrangement and maybe that's where we would have ended up regardless of the particulars of the decision polity

[20:32:01.0000] <othermaciej_>
Hixie: CGPath supports transforming a (whole) path and concatenating paths

[20:32:15.0000] <othermaciej_>
Hixie: CGPath supports transforming a (whole) path and concatenating paths

[20:32:32.0000] <othermaciej_>
Hixie: that is much more logical from my POV

[20:33:00.0000] <othermaciej_>
Hixie: that is much more logical from my POV

[20:33:01.0000] <othermaciej_>
CG also has a Transform object, which makes that approach more convenient; but plausibly one could use SVGMatrix to represent an affine transform

[20:33:18.0000] <othermaciej_>
CG also has a Transform object, which makes that approach more convenient; but plausibly one could use SVGMatrix to represent an affine transform

[20:33:44.0000] <Hixie>
othermaciej_: yeah, one of the changes i'm doing soon is adding a transform object to the three objects that have a transformation matrix

[20:34:00.0000] <Hixie>
othermaciej_: yeah, one of the changes i'm doing soon is adding a transform object to the three objects that have a transformation matrix

[20:34:49.0000] <othermaciej_>
I guess you already have a way to concatenate paths, so a way to one-shot transform a path could replace the weird concept of path having a CTM and being able to invoke transform operators on it

[20:35:00.0000] <othermaciej_>
I guess you already have a way to concatenate paths, so a way to one-shot transform a path could replace the weird concept of path having a CTM and being able to invoke transform operators on it

[20:35:01.0000] <jacobolus>
paul_irish: okay, it went through a few edits, but I have a suggestion on your requestAnimationFrame polyfill gist: https://gist.github.com/1579671#comments

[20:35:20.0000] <jacobolus>
paul_irish: okay, it went through a few edits, but I have a suggestion on your requestAnimationFrame polyfill gist: https://gist.github.com/1579671#comments

[20:35:59.0000] <othermaciej_>
also addFill vs. addStroke is weird

[20:36:01.0000] <Hixie>
othermaciej_: that would make it a two-step process to add text to a path in a transformed manner (first add text to another path, then transform that path, then add that path to the one you want the text on)

[20:36:08.0000] <Hixie>
othermaciej_: that would make it a two-step process to add text to a path in a transformed manner (first add text to another path, then transform that path, then add that path to the one you want the text on)

[20:36:30.0000] <othermaciej_>
I see what you are getting at, but it is a confusing API, because (if I understand correctly), if you addFill a path to another path, then stroke the resulting path object to a canvas, you get all stroke and no fill

[20:36:56.0000] <jacobolus>
bb10

[20:37:00.0000] <othermaciej_>
I see what you are getting at, but it is a confusing API, because (if I understand correctly), if you addFill a path to another path, then stroke the resulting path object to a canvas, you get all stroke and no fill

[20:37:01.0000] <jacobolus>
bb10

[20:37:02.0000] <Hixie>
yeah i wanted to call "addFill" something like just "addPath" but it seemed better to keep the consistency with the rest of the API, which always has pairs of fill/stroke methods

[20:37:23.0000] <Hixie>
yeah i wanted to call "addFill" something like just "addPath" but it seemed better to keep the consistency with the rest of the API, which always has pairs of fill/stroke methods

[20:37:34.0000] <Hixie>
since i knew we'd also have addStroke

[20:38:00.0000] <Hixie>
since i knew we'd also have addStroke

[20:38:01.0000] <othermaciej_>
the way CG does this is with CGPathAddPath and CGPathCreateCopyByStrokingPath

[20:38:02.0000] <Hixie>
CG's approach seems to involve a lot more temporaries

[20:38:03.0000] <othermaciej_>
what you call addFill to me makes more sense as addPath and is the common case

[20:38:05.0000] <othermaciej_>
the way CG does this is with CGPathAddPath and CGPathCreateCopyByStrokingPath

[20:38:22.0000] <Hixie>
CG's approach seems to involve a lot more temporaries

[20:38:25.0000] <othermaciej_>
what you call addFill to me makes more sense as addPath and is the common case

[20:38:54.0000] <othermaciej_>
whereas your naming would lead authors to believe that addStroke does the normal thing, when what it does is weird and not usually needed

[20:39:00.0000] <othermaciej_>
whereas your naming would lead authors to believe that addStroke does the normal thing, when what it does is weird and not usually needed

[20:39:55.0000] <othermaciej_>
your approach requires a temporary to create a path outlining the strokes of a path in any case

[20:40:00.0000] <othermaciej_>
your approach requires a temporary to create a path outlining the strokes of a path in any case

[20:40:01.0000] <othermaciej_>
it just lets you save a temporary in the (unusual) case that you want to add that to another path

[20:40:07.0000] <othermaciej_>
it just lets you save a temporary in the (unusual) case that you want to add that to another path

[20:41:43.0000] <Hixie>
and when you add text, and a whole bunch of other cases

[20:42:00.0000] <Hixie>
and when you add text, and a whole bunch of other cases

[20:43:12.0000] <othermaciej_>
yeah, I think the result of that saving of temporaries in what are relatively rare use cases makes the API as a whole needlessly confusing

[20:44:00.0000] <othermaciej_>
yeah, I think the result of that saving of temporaries in what are relatively rare use cases makes the API as a whole needlessly confusing

[20:44:34.0000] <othermaciej_>
it would also make creating a simple Path more expensive to some extent, since it would have to contain more than just a single platform-native path object for most graphics APIs of interest

[20:45:00.0000] <othermaciej_>
it would also make creating a simple Path more expensive to some extent, since it would have to contain more than just a single platform-native path object for most graphics APIs of interest

[20:45:00.0000] <Hixie>
i don't really see what's confusing

[20:45:01.0000] <Hixie>
i don't really see what's confusing

[20:45:02.0000] <Hixie>
it's exactly like using the canvas api today

[20:45:03.0000] <Hixie>
just one step removed

[20:45:07.0000] <Hixie>
it's exactly like using the canvas api today

[20:45:10.0000] <Hixie>
just one step removed

[20:46:00.0000] <othermaciej_>
I doubt most people would understand what Path.addFill() does just by analogy to Canvas.fill()

[20:46:04.0000] <othermaciej_>
I doubt most people would understand what Path.addFill() does just by analogy to Canvas.fill()

[20:46:31.0000] <othermaciej_>
and like I said, I think you optimized for performance of the rare case at expense of the common case

[20:46:56.0000] <othermaciej_>
it's also non-obvious that Path.rotate() would not in fact rotate the path

[20:47:00.0000] <othermaciej_>
and like I said, I think you optimized for performance of the rare case at expense of the common case

[20:47:01.0000] <othermaciej_>
it's also non-obvious that Path.rotate() would not in fact rotate the path

[20:47:02.0000] <othermaciej_>
where it might be less surprising in the canvas case that it won't rotate what has already been drawn

[20:47:25.0000] <othermaciej_>
where it might be less surprising in the canvas case that it won't rotate what has already been drawn

[20:47:54.0000] <othermaciej_>
anyway I'll think about it more, check with our graphics-y folks, and provide feedback

[20:48:00.0000] <othermaciej_>
anyway I'll think about it more, check with our graphics-y folks, and provide feedback

[20:48:01.0000] <Hixie>
k

[20:48:02.0000] <Hixie>
please do also see the canvas wiki page

[20:48:17.0000] <Hixie>
k

[20:48:21.0000] <Hixie>
please do also see the canvas wiki page

[20:48:37.0000] <Hixie>
as the general pattern of support transforms is used for transforming patterns too

[20:48:44.0000] <Hixie>
supporting

[20:49:00.0000] <Hixie>
as the general pattern of support transforms is used for transforming patterns too

[20:49:01.0000] <Hixie>
supporting

[20:52:00.0000] <othermaciej_>
(I'm not sure how practical it is to implement adding glyph shapes for text to a path but it's certainly a neat feature)

[20:52:25.0000] <othermaciej_>
(I'm not sure how practical it is to implement adding glyph shapes for text to a path but it's certainly a neat feature)

[20:57:40.0000] <jacobolus>
TabAtkins_, Hixie: while you’re talking about stroking paths, &c., is there anything specific you’re looking for feedback about?

[20:58:00.0000] <jacobolus>
TabAtkins_, Hixie: while you’re talking about stroking paths, &c., is there anything specific you’re looking for feedback about?

[21:00:46.0000] <Hixie>
jacobolus: http://wiki.whatwg.org/wiki/Canvas#Proposals and the corresponding new stuff in http://www.whatwg.org/specs/web-apps/current-work/#2dcontext

[21:01:00.0000] <Hixie>
jacobolus: http://wiki.whatwg.org/wiki/Canvas#Proposals and the corresponding new stuff in http://www.whatwg.org/specs/web-apps/current-work/#2dcontext

[21:02:00.0000] <othermaciej_>
adding text to a path does seem plausibly implementable at least on mac (though non-trivial)

[21:02:13.0000] <othermaciej_>
adding text to a path does seem plausibly implementable at least on mac (though non-trivial)

[21:08:57.0000] <jacobolus>
Hixie: I gotta say, having browsers just optimize & fix the bugs in their SVG implementations would handle a lot of this :)

[21:09:00.0000] <jacobolus>
Hixie: I gotta say, having browsers just optimize & fix the bugs in their SVG implementations would handle a lot of this :)

[21:10:00.0000] <jacobolus>
but improving canvas is nice too

[21:10:13.0000] <jacobolus>
but improving canvas is nice too

[21:12:00.0000] <jacobolus>
In particular, use cases where UI elements are being drawn using canvas, and developers want to have user selection/manipulation w/ keyboard navigation, focus rings, etc. doesn’t seem like the right use for canvas vs. some actual vector/object based API

[21:12:20.0000] <jacobolus>
In particular, use cases where UI elements are being drawn using canvas, and developers want to have user selection/manipulation w/ keyboard navigation, focus rings, etc. doesn’t seem like the right use for canvas vs. some actual vector/object based API

[21:15:00.0000] <Hixie>
jacobolus: ain't much you can do to svg to address the use case of "immediate mode graphics", it's a retained-mode api :-)

[21:15:14.0000] <Hixie>
jacobolus: ain't much you can do to svg to address the use case of "immediate mode graphics", it's a retained-mode api :-)

[21:15:27.0000] <jacobolus>
what's immediate-mode gfx?

[21:15:41.0000] <Hixie>
the opposite of retained-mode

[21:16:00.0000] <jacobolus>
what's immediate-mode gfx?

[21:16:01.0000] <Hixie>
the opposite of retained-mode

[21:16:02.0000] <jacobolus>
as in, you make them and only the result stays around but not the process?

[21:16:07.0000] <jacobolus>
as in, you make them and only the result stays around but not the process?

[21:17:37.0000] <jacobolus>
but the use cases being asked for are ones where you care about accessing the objects/shapes well after they are initially drawn. If that’s what you want, it seems like a bad time to use an "immediate mode graphics" API in general

[21:18:00.0000] <jacobolus>
but the use cases being asked for are ones where you care about accessing the objects/shapes well after they are initially drawn. If that’s what you want, it seems like a bad time to use an "immediate mode graphics" API in general

[21:18:29.0000] <jacobolus>
I think part of the problem may be that 99% of people using the canvas API aren’t actually playing to the strengths of the API, and are ignoring transformations and the context stack

[21:19:00.0000] <jacobolus>
I think part of the problem may be that 99% of people using the canvas API aren’t actually playing to the strengths of the API, and are ignoring transformations and the context stack

[21:19:01.0000] <jacobolus>
which are very powerful tools for building up your own abstractions, especially when using functional or concatenative programming style

[21:19:08.0000] <jacobolus>
which are very powerful tools for building up your own abstractions, especially when using functional or concatenative programming style

[21:19:33.0000] <jacobolus>
for example, it's completely trivial to define a function which draws an ellipse

[21:19:52.0000] <Hixie>
jacobolus: as in, no DOM

[21:20:00.0000] <jacobolus>
for example, it's completely trivial to define a function which draws an ellipse

[21:20:01.0000] <Hixie>
jacobolus: as in, no DOM

[21:20:02.0000] <jacobolus>
right. but many of the suggested use cases are ones where people are basically asking for DOM-like features

[21:20:16.0000] <jacobolus>
right. but many of the suggested use cases are ones where people are basically asking for DOM-like features

[21:20:28.0000] <Hixie>
given the number of requests we've had for ellipses, i don't know that i'd use the word "trivial"

[21:20:40.0000] <Hixie>
they're asking for DOM-like features but don't want to have a scene graph

[21:20:42.0000] <jacobolus>
to draw an ellipse, just save the context, do a transformation, draw a circle, and restore the context

[21:20:59.0000] <Hixie>
that skews the stroke

[21:21:00.0000] <Hixie>
given the number of requests we've had for ellipses, i don't know that i'd use the word "trivial"

[21:21:01.0000] <Hixie>
they're asking for DOM-like features but don't want to have a scene graph

[21:21:02.0000] <jacobolus>
to draw an ellipse, just save the context, do a transformation, draw a circle, and restore the context

[21:21:03.0000] <Hixie>
that skews the stroke

[21:21:04.0000] <jacobolus>
not if you restore the context before stroking

[21:21:07.0000] <jacobolus>
not if you restore the context before stroking

[21:21:33.0000] <jamesr>
how do you get the stroke to be an ellipse then?

[21:21:35.0000] <jacobolus>
the stroke shape is based on the current transformation, not the transformation when part of the path was created

[21:22:00.0000] <jamesr>
how do you get the stroke to be an ellipse then?

[21:22:01.0000] <jacobolus>
the stroke shape is based on the current transformation, not the transformation when part of the path was created

[21:22:02.0000] <Hixie>
i don't see how that gives you ellipsoid rounded corners without some complicated maths

[21:22:03.0000] <Hixie>
anyway, supporting ellipses is easy, so why not do it since people want it

[21:22:13.0000] <Hixie>
i don't see how that gives you ellipsoid rounded corners without some complicated maths

[21:22:24.0000] <Hixie>
anyway, supporting ellipses is easy, so why not do it since people want it

[21:22:25.0000] <jacobolus>
Hixie: try it!

[21:23:00.0000] <jacobolus>
Hixie: try it!

[21:25:00.0000] <jacobolus>
drawEllipse = function (ctx, a, b) { ctx.save(); ctx.scale(a, b); ctx.arc(0, 0, 1, 0, 2*Math.PI); ctx.restore(); }

[21:25:12.0000] <jacobolus>
drawEllipse = function (ctx, a, b) { ctx.save(); ctx.scale(a, b); ctx.arc(0, 0, 1, 0, 2*Math.PI); ctx.restore(); }

[21:25:59.0000] <Hixie>
that's not an ellipsoid rounded corner

[21:26:00.0000] <Hixie>
that's not an ellipsoid rounded corner

[21:26:01.0000] <jacobolus>
what do you mean?

[21:26:02.0000] <jacobolus>
oh

[21:26:09.0000] <jacobolus>
what do you mean?

[21:26:10.0000] <jacobolus>
oh

[21:26:26.0000] <jacobolus>
okay, that one takes 3 more lines of code

[21:26:31.0000] <jacobolus>
but is really not a "basic" shape

[21:26:44.0000] <Hixie>
say i want a rectangle from 0,0 to 100,100 and each corner is to have a twice-as-wide-as-high ellipsoid corner

[21:26:49.0000] <jacobolus>
the reason not to add every shape anyone has ever heard of is that bloating APIs is really annoying

[21:26:50.0000] <Hixie>
with the proposal in the spec, that's like four lines of code

[21:27:00.0000] <jacobolus>
okay, that one takes 3 more lines of code

[21:27:01.0000] <jacobolus>
but is really not a "basic" shape

[21:27:02.0000] <Hixie>
say i want a rectangle from 0,0 to 100,100 and each corner is to have a twice-as-wide-as-high ellipsoid corner

[21:27:02.0000] <Hixie>
adding one method for ellipses is hardly "bloat"

[21:27:03.0000] <jacobolus>
the reason not to add every shape anyone has ever heard of is that bloating APIs is really annoying

[21:27:04.0000] <Hixie>
with the proposal in the spec, that's like four lines of code

[21:27:05.0000] <Hixie>
adding one method for ellipses is hardly "bloat"

[21:27:06.0000] <jacobolus>
Hixie: how often in practice have you wanted such a shape?

[21:27:15.0000] <jacobolus>
Hixie: how often in practice have you wanted such a shape?

[21:27:31.0000] <jacobolus>
this ellipsoid chorner shape

[21:27:34.0000] <jacobolus>
*corner

[21:27:40.0000] <Hixie>
me, never. but then i've hardly ever needed the path stuff at all. in practice we've received multiple requests for ellipses over the last year or so

[21:27:50.0000] <Hixie>
it's one of the most-requested features.

[21:28:00.0000] <jacobolus>
this ellipsoid chorner shape

[21:28:01.0000] <jacobolus>
*corner

[21:28:02.0000] <Hixie>
me, never. but then i've hardly ever needed the path stuff at all. in practice we've received multiple requests for ellipses over the last year or so

[21:28:02.0000] <jacobolus>
yes, but I would suggest these are from people who don't know how to draw an ellipse using the existing API

[21:28:03.0000] <Hixie>
it's one of the most-requested features.

[21:28:04.0000] <jacobolus>
yes, but I would suggest these are from people who don't know how to draw an ellipse using the existing API

[21:28:05.0000] <jacobolus>
which is an education problem more than anything

[21:28:06.0000] <Hixie>
*shrug*

[21:28:07.0000] <Hixie>
it's easy to add

[21:28:11.0000] <jacobolus>
which is an education problem more than anything

[21:28:14.0000] <Hixie>
*shrug*

[21:28:16.0000] <Hixie>
it's easy to add

[21:28:51.0000] <jacobolus>
you can also add star shapes, regular polygons, parallelograms with specified skew, heart shapes with various parameters, ad infinitum

[21:29:00.0000] <jacobolus>
you can also add star shapes, regular polygons, parallelograms with specified skew, heart shapes with various parameters, ad infinitum

[21:29:01.0000] <jacobolus>
I dunno, anyway, that's not such a big deal

[21:29:06.0000] <jacobolus>
I dunno, anyway, that's not such a big deal

[21:29:46.0000] <Hixie>
if we had as many requests for those as for ellipses, you may have a proposal on your hands

[21:29:52.0000] <Hixie>
but we've never had any requests for those

[21:30:00.0000] <Hixie>
if we had as many requests for those as for ellipses, you may have a proposal on your hands

[21:30:01.0000] <Hixie>
but we've never had any requests for those

[21:30:41.0000] <jacobolus>
I guess what I mean is, a lot of those requests go away if you give people a 5-line code snippet that handles their request

[21:31:00.0000] <jacobolus>
I guess what I mean is, a lot of those requests go away if you give people a 5-line code snippet that handles their request

[21:31:01.0000] <jacobolus>
then they can make whatever ellipse API they want

[21:31:02.0000] <Hixie>
*shrug*

[21:31:05.0000] <jacobolus>
then they can make whatever ellipse API they want

[21:31:15.0000] <Hixie>
*shrug*

[21:31:30.0000] <jacobolus>
addHitRegion proposal seems excessively complex

[21:32:00.0000] <jacobolus>
addHitRegion proposal seems excessively complex

[21:32:01.0000] <Hixie>
it solves like a zillion problems with a single function, all things considered i think it's one of the simplest possible solutions one could come up with

[21:32:23.0000] <Hixie>
it solves like a zillion problems with a single function, all things considered i think it's one of the simplest possible solutions one could come up with

[21:32:32.0000] <Hixie>
but i'm certainly open to alternative proposals

[21:32:37.0000] <Hixie>
the wiki page has been up for months waiting for them

[21:32:47.0000] <jacobolus>
explaining element, id, label, ariaRole, parentID is going to be hard

[21:33:00.0000] <Hixie>
but i'm certainly open to alternative proposals

[21:33:01.0000] <Hixie>
the wiki page has been up for months waiting for them

[21:33:02.0000] <jacobolus>
explaining element, id, label, ariaRole, parentID is going to be hard

[21:33:03.0000] <jacobolus>
what's the "context's default path"?

[21:33:17.0000] <jacobolus>
what's the "context's default path"?

[21:33:45.0000] <Hixie>
see the spec, it's now known as the "current default path"

[21:34:00.0000] <Hixie>
see the spec, it's now known as the "current default path"

[21:35:00.0000] <jacobolus>
so if you start drawing a path, that changes the "default path"?

[21:35:20.0000] <jacobolus>
so if you start drawing a path, that changes the "default path"?

[21:35:39.0000] <jacobolus>
if you keep on adding to it, does that change the path for the region?

[21:35:41.0000] <Hixie>
the "current default path" is the only path that exists in the api as implemented today

[21:35:47.0000] <Hixie>
it's the one that is usud when you call stroke()

[21:35:50.0000] <jacobolus>
gotcha

[21:36:00.0000] <jacobolus>
if you keep on adding to it, does that change the path for the region?

[21:36:01.0000] <Hixie>
the "current default path" is the only path that exists in the api as implemented today

[21:36:02.0000] <Hixie>
it's the one that is usud when you call stroke()

[21:36:03.0000] <jacobolus>
gotcha

[21:36:04.0000] <jacobolus>
so does the region create a copy of that when it's defined?

[21:36:05.0000] <jacobolus>
or does drawing continually change the region?

[21:36:08.0000] <jacobolus>
so does the region create a copy of that when it's defined?

[21:36:22.0000] <jacobolus>
or does drawing continually change the region?

[21:36:29.0000] <Hixie>
copy, same as stroke()

[21:36:57.0000] <othermaciej_>
Hixie: is there a way to copy a Path?

[21:36:57.0000] <jacobolus>
stroke doesn't make a copy of the path. it blits pixels to the screen

[21:37:00.0000] <Hixie>
copy, same as stroke()

[21:37:01.0000] <othermaciej_>
Hixie: is there a way to copy a Path?

[21:37:02.0000] <jacobolus>
stroke doesn't make a copy of the path. it blits pixels to the screen

[21:37:03.0000] <jacobolus>
after you call stroke, the stroke is no longer a vector object

[21:37:04.0000] <Hixie>
othermaciej_: create a new one and addFill the old one to the new one

[21:37:19.0000] <jacobolus>
after you call stroke, the stroke is no longer a vector object

[21:37:20.0000] <Hixie>
othermaciej_: create a new one and addFill the old one to the new one

[21:37:34.0000] <Hixie>
othermaciej_: (i was thinking of providing a copy constructor if it's a common operation)

[21:37:52.0000] <othermaciej_>
well, since Path is mutable, it seems like copying one would be a very common operation

[21:38:00.0000] <Hixie>
othermaciej_: (i was thinking of providing a copy constructor if it's a common operation)

[21:38:01.0000] <othermaciej_>
well, since Path is mutable, it seems like copying one would be a very common operation

[21:38:02.0000] <Hixie>
othermaciej_: makes sense

[21:38:03.0000] <othermaciej_>
for example, if you pass a Path to a function that may or may not mutate it, and you need the original, then you have to pass a copy

[21:38:03.0000] <Hixie>
othermaciej_: makes sense

[21:38:14.0000] <othermaciej_>
for example, if you pass a Path to a function that may or may not mutate it, and you need the original, then you have to pass a copy

[21:38:37.0000] <Hixie>
jacobolus: same as with hitRegion(), in some implementations. (There's several ways of implementing it, but one is to have a "shadow" canvas with each pixel representing the last hitRegion call on it. This is a technique sometimes used in 3D environments for hit testing.)

[21:38:51.0000] <Hixie>
othermaciej_: makes sense

[21:39:00.0000] <Hixie>
jacobolus: same as with hitRegion(), in some implementations. (There's several ways of implementing it, but one is to have a "shadow" canvas with each pixel representing the last hitRegion call on it. This is a technique sometimes used in 3D environments for hit testing.)

[21:39:01.0000] <Hixie>
othermaciej_: makes sense

[21:39:34.0000] <Hixie>
othermaciej_: i added new Path(path) copy constructor to the list of things to add in the misc section on the wiki

[21:39:40.0000] <othermaciej_>
Hixie: I think renaming addFill to addPath and addStroke to addPathByStrokingPath would improve clarity btw, without changing semantics

[21:39:57.0000] <othermaciej_>
the second name is more verbose, but it is also a much less common operation

[21:40:00.0000] <Hixie>
othermaciej_: i added new Path(path) copy constructor to the list of things to add in the misc section on the wiki

[21:40:01.0000] <othermaciej_>
Hixie: I think renaming addFill to addPath and addStroke to addPathByStrokingPath would improve clarity btw, without changing semantics

[21:40:02.0000] <othermaciej_>
the second name is more verbose, but it is also a much less common operation

[21:40:03.0000] <Hixie>
othermaciej_: what about the equivalent *Text methods on Path?

[21:40:13.0000] <Hixie>
othermaciej_: what about the equivalent *Text methods on Path?

[21:40:26.0000] <Hixie>
othermaciej_: addText and addTextByStrokingPath ?

[21:41:00.0000] <Hixie>
othermaciej_: addText and addTextByStrokingPath ?

[21:41:28.0000] <jacobolus>
Hixie: I think transforming the path by the current transformation matrix whenever you call addPath/addStroke leads to some potentially extremely confusing situations

[21:42:00.0000] <jacobolus>
Hixie: I think transforming the path by the current transformation matrix whenever you call addPath/addStroke leads to some potentially extremely confusing situations

[21:42:01.0000] <othermaciej_>
adding the outline of the glyph outlines of text is such an unusual operation that it seems odd to me to even have it, but I think it would logically be addPathByStrokingText

[21:42:02.0000] <jacobolus>
Hixie: given that currently, the shapes of paths end up existing relative to teh whole canvas

[21:42:03.0000] <jacobolus>
not relative to the transformation

[21:42:04.0000] <jamesr>
are Paths independent of their canvas or not?

[21:42:05.0000] <othermaciej_>
adding the outline of the glyph outlines of text is such an unusual operation that it seems odd to me to even have it, but I think it would logically be addPathByStrokingText

[21:42:07.0000] <jacobolus>
Hixie: given that currently, the shapes of paths end up existing relative to teh whole canvas

[21:42:13.0000] <jacobolus>
not relative to the transformation

[21:42:13.0000] <jamesr>
are Paths independent of their canvas or not?

[21:42:39.0000] <Hixie>
jamesr: yes

[21:43:00.0000] <Hixie>
jamesr: yes

[21:43:01.0000] <jacobolus>
so addStroke finds the path you'd get by tracing around the edges of the stroke, not just the original path itself?

[21:43:11.0000] <jacobolus>
so addStroke finds the path you'd get by tracing around the edges of the stroke, not just the original path itself?

[21:43:35.0000] <jacobolus>
I agree w/ othermaciej_ re: names

[21:43:36.0000] <Hixie>
othermaciej_: addPath, addPathByStrokingPath, addText, and addPathByStrokingText? i guess that works

[21:43:57.0000] <Hixie>
jacobolus: not sure what you mean re the transformation stuff

[21:44:00.0000] <jacobolus>
I agree w/ othermaciej_ re: names

[21:44:01.0000] <Hixie>
othermaciej_: addPath, addPathByStrokingPath, addText, and addPathByStrokingText? i guess that works

[21:44:02.0000] <Hixie>
jacobolus: not sure what you mean re the transformation stuff

[21:44:03.0000] <jacobolus>
in the current canvas, changing the current transformation does nothing to the current path

[21:44:04.0000] <Hixie>
if y'all like addPath, addPathByStrokingPath, addText, and addPathByStrokingText i'll use those names

[21:44:11.0000] <jacobolus>
in the current canvas, changing the current transformation does nothing to the current path

[21:44:16.0000] <Hixie>
if y'all like addPath, addPathByStrokingPath, addText, and addPathByStrokingText i'll use those names

[21:44:34.0000] <othermaciej_>
yes, addStroke as currently specified strokes the path, then creates a path such that filling it would be equivalent to stroking the original (i.e. outline of the strokes)

[21:44:38.0000] <jacobolus>
the transformation and teh path are orthogonal concepts

[21:44:48.0000] <Hixie>
jacobolus: the transformation is used when creating teh path

[21:45:00.0000] <othermaciej_>
yes, addStroke as currently specified strokes the path, then creates a path such that filling it would be equivalent to stroking the original (i.e. outline of the strokes)

[21:45:01.0000] <jacobolus>
the transformation and teh path are orthogonal concepts

[21:45:01.0000] <Hixie>
jacobolus: same as the transformation on a Path is used when creating the shapes of the Path

[21:45:02.0000] <Hixie>
jacobolus: the transformation is used when creating teh path

[21:45:03.0000] <Hixie>
jacobolus: same as the transformation on a Path is used when creating the shapes of the Path

[21:45:04.0000] <othermaciej_>
btw to do that you need all the details of the line style

[21:45:05.0000] <jacobolus>
correct. but if you change the transformation before you stroke/fil the path, the path doesn't change

[21:45:06.0000] <Hixie>
othermaciej_: yeah, that's what i'm working on tomorrow (and earlier today)

[21:45:06.0000] <jacobolus>
correct. but if you change the transformation before you stroke/fil the path, the path doesn't change

[21:45:20.0000] <Hixie>
othermaciej_: yeah, that's what i'm working on tomorrow (and earlier today)

[21:45:38.0000] <Hixie>
jacobolus: right, which makes it impossible to stamp out a bunch of them without redrawing the path.

[21:45:53.0000] <Hixie>
jacobolus: which is what we're trying to fix by introducing Path objects

[21:46:00.0000] <Hixie>
jacobolus: right, which makes it impossible to stamp out a bunch of them without redrawing the path.

[21:46:01.0000] <Hixie>
jacobolus: which is what we're trying to fix by introducing Path objects

[21:46:01.0000] <jamesr>
Hixie: if you have a Path, you can fill() or stroke() it into any other Path (or context)?

[21:46:03.0000] <jacobolus>
Hixie: but that's not actually a problem in practice

[21:46:04.0000] <othermaciej_>
it actually doesn't make sense for Path to have a line style

[21:46:05.0000] <othermaciej_>
you should pass it in

[21:46:06.0000] <jacobolus>
Hixie: you just define a function that draws the path

[21:46:06.0000] <jacobolus>
Hixie: but that's not actually a problem in practice

[21:46:12.0000] <othermaciej_>
it actually doesn't make sense for Path to have a line style

[21:46:14.0000] <othermaciej_>
you should pass it in

[21:46:16.0000] <jacobolus>
Hixie: you just define a function that draws the path

[21:46:26.0000] <othermaciej_>
because stroking a path will use the context's line style, not the path's (or at least it should)

[21:46:36.0000] <jacobolus>
Hixie: and then you apply some transformation, call your function, stroke, apply a different transformation, call the function again, stroke

[21:46:40.0000] <othermaciej_>
so it's misleading for the path to even have a line style, which is used only for the obscure case of adding a path outline to it

[21:46:41.0000] <Hixie>
othermaciej_: just like stroking a path onto another path will use the target path's line style, sure

[21:46:58.0000] <jacobolus>
Hixie: this is precisely the idea behind the canvas API, whose abstractions come straight down from PostScript if not earlier

[21:46:59.0000] <Hixie>
jamesr: yes

[21:47:00.0000] <othermaciej_>
because stroking a path will use the context's line style, not the path's (or at least it should)

[21:47:01.0000] <jacobolus>
Hixie: and then you apply some transformation, call your function, stroke, apply a different transformation, call the function again, stroke

[21:47:02.0000] <othermaciej_>
so it's misleading for the path to even have a line style, which is used only for the obscure case of adding a path outline to it

[21:47:03.0000] <Hixie>
othermaciej_: just like stroking a path onto another path will use the target path's line style, sure

[21:47:04.0000] <jacobolus>
Hixie: this is precisely the idea behind the canvas API, whose abstractions come straight down from PostScript if not earlier

[21:47:05.0000] <Hixie>
jamesr: yes

[21:47:06.0000] <othermaciej_>
people will think that if you set lineWidth on a Path, then stroking it will use that line width

[21:47:07.0000] <othermaciej_>
but it won't

[21:47:08.0000] <othermaciej_>
it's a misleading API

[21:47:09.0000] <othermaciej_>
people will think that if you set lineWidth on a Path, then stroking it will use that line width

[21:47:13.0000] <othermaciej_>
but it won't

[21:47:18.0000] <othermaciej_>
it's a misleading API

[21:47:42.0000] <jacobolus>
I think adding a line style to a path, instead of having the one on the context, really changes the whole flavor of the canvas API

[21:47:46.0000] <Hixie>
othermaciej_: happy to entertain alternatives, but this seemed the most consistent with what we have now

[21:48:00.0000] <jacobolus>
I think adding a line style to a path, instead of having the one on the context, really changes the whole flavor of the canvas API

[21:48:01.0000] <Hixie>
othermaciej_: happy to entertain alternatives, but this seemed the most consistent with what we have now

[21:48:02.0000] <othermaciej_>
I think taking the assumption that the Path object should work more or less like the 2DContext itself is not the best design center

[21:48:03.0000] <jacobolus>
basically, I feel like these changes are being made from an entirely different API aesthetic than the current API, which means that the combination of the two feels very clashy

[21:48:14.0000] <othermaciej_>
I think taking the assumption that the Path object should work more or less like the 2DContext itself is not the best design center

[21:48:23.0000] <jacobolus>
basically, I feel like these changes are being made from an entirely different API aesthetic than the current API, which means that the combination of the two feels very clashy

[21:48:54.0000] <othermaciej_>
that's not how you usually use paths in most graphics APIs that have an object for them

[21:48:55.0000] <jacobolus>
there's nothing wrong with the new style, but it's confusing to someone who knows the existing canvas API

[21:49:00.0000] <othermaciej_>
that's not how you usually use paths in most graphics APIs that have an object for them

[21:49:01.0000] <jacobolus>
there's nothing wrong with the new style, but it's confusing to someone who knows the existing canvas API

[21:49:02.0000] <othermaciej_>
the 2DContext is the thing that is weird, by copying the odd CG feature of having a context-implicit current path

[21:49:03.0000] <jacobolus>
and confusing for anyone trying to learn both

[21:49:04.0000] <jamesr>
well the 'current API aesthetic' is a partial subset of CoreGraphics from ~5 years ago

[21:49:11.0000] <othermaciej_>
the 2DContext is the thing that is weird, by copying the odd CG feature of having a context-implicit current path

[21:49:11.0000] <jacobolus>
and confusing for anyone trying to learn both

[21:49:13.0000] <jamesr>
well the 'current API aesthetic' is a partial subset of CoreGraphics from ~5 years ago

[21:49:29.0000] <othermaciej_>
but that ends up mixing path operations with context operations

[21:49:31.0000] <jamesr>
CoreGraphics had the pseudo-OpenGL style state on the context

[21:49:34.0000] <jacobolus>
jamesr: sure. and comes down from PostScript 25 or whatever years ago

[21:49:35.0000] <Hixie>
jacobolus: the entire point of the additions is to make it pretty much exactly like the existing api, so i don't really see how you figure that :-)

[21:49:41.0000] <othermaciej_>
adding context operations to the Path object exacerbates that mistake

[21:50:00.0000] <othermaciej_>
but that ends up mixing path operations with context operations

[21:50:01.0000] <jamesr>
CoreGraphics had the pseudo-OpenGL style state on the context

[21:50:02.0000] <jacobolus>
jamesr: sure. and comes down from PostScript 25 or whatever years ago

[21:50:03.0000] <Hixie>
jacobolus: the entire point of the additions is to make it pretty much exactly like the existing api, so i don't really see how you figure that :-)

[21:50:04.0000] <othermaciej_>
adding context operations to the Path object exacerbates that mistake

[21:50:04.0000] <jacobolus>
jamesr: the current API is really nice to use if you use a functional programming style

[21:50:06.0000] <jacobolus>
or especially if you use a stack-based language like postscript

[21:50:22.0000] <jacobolus>
or especially if you use a stack-based language like postscript

[21:50:26.0000] <Hixie>
othermaciej_: so if we change addFill() to addPath(), that becomes confusingly similar to addPathData(svgPathData), what should we call the latter?

[21:50:48.0000] <othermaciej_>
svgPathData is the SVG string path syntax?

[21:50:58.0000] <jacobolus>
Hixie: addPathFromString or similar

[21:51:00.0000] <Hixie>
othermaciej_: so if we change addFill() to addPath(), that becomes confusingly similar to addPathData(svgPathData), what should we call the latter?

[21:51:01.0000] <othermaciej_>
svgPathData is the SVG string path syntax?

[21:51:02.0000] <jacobolus>
Hixie: addPathFromString or similar

[21:51:26.0000] <Hixie>
othermaciej_: yes

[21:51:42.0000] <Hixie>
othermaciej_: (though of course that it's svg is an inside baseball factoid)

[21:51:54.0000] <Hixie>
jacobolus: needs to be something short or it rather defeats the point...

[21:52:00.0000] <Hixie>
othermaciej_: yes

[21:52:01.0000] <Hixie>
othermaciej_: (though of course that it's svg is an inside baseball factoid)

[21:52:02.0000] <Hixie>
jacobolus: needs to be something short or it rather defeats the point...

[21:52:03.0000] <othermaciej_>
I would have just made that an optional constructor argument

[21:52:08.0000] <othermaciej_>
I would have just made that an optional constructor argument

[21:52:25.0000] <othermaciej_>
I think addPathString or addPathSpec or something would be ok

[21:52:43.0000] <jacobolus>
Hixie: I wouldn’t make it a function on the Path object, but instead make it a function drawing on the context’s path

[21:53:00.0000] <othermaciej_>
I think addPathString or addPathSpec or something would be ok

[21:53:01.0000] <jacobolus>
Hixie: I wouldn’t make it a function on the Path object, but instead make it a function drawing on the context’s path

[21:53:55.0000] <Hixie>
jacobolus: that rather defeats the point of making it possible to use svg strings to build up path objects...

[21:54:00.0000] <Hixie>
jacobolus: that rather defeats the point of making it possible to use svg strings to build up path objects...

[21:54:01.0000] <Hixie>
othermaciej_: it's intended that you can chain these to make a single path from different strings

[21:54:02.0000] <othermaciej_>
I think the constructor approach is best, because the most common use for an SVG path string is to take one string and make one path

[21:54:12.0000] <Hixie>
othermaciej_: it's intended that you can chain these to make a single path from different strings

[21:54:23.0000] <othermaciej_>
I think the constructor approach is best, because the most common use for an SVG path string is to take one string and make one path

[21:54:32.0000] <Hixie>
othermaciej_: addPathString() seems confusing next to addPath()

[21:54:35.0000] <othermaciej_>
I think combining multiple path specs into a single Path is unlikely

[21:54:43.0000] <jacobolus>
Hixie: so okay, when you create a Path object from the current default path, I take it whatever the current transformation is gets inverted?

[21:54:55.0000] <othermaciej_>
sure it should be possible, but you hardly need to optimize for it

[21:54:56.0000] <jacobolus>
before the Path’s shape is extracted?

[21:55:00.0000] <Hixie>
othermaciej_: addPathString() seems confusing next to addPath()

[21:55:01.0000] <othermaciej_>
I think combining multiple path specs into a single Path is unlikely

[21:55:02.0000] <jacobolus>
Hixie: so okay, when you create a Path object from the current default path, I take it whatever the current transformation is gets inverted?

[21:55:03.0000] <othermaciej_>
sure it should be possible, but you hardly need to optimize for it

[21:55:04.0000] <jacobolus>
before the Path’s shape is extracted?

[21:55:05.0000] <othermaciej_>
var triangle = new Path("M 100 100 L 300 100 L 200 300 z");

[21:55:06.0000] <Hixie>
jacobolus: what do you mean "inverted?

[21:55:07.0000] <Hixie>
er

[21:55:08.0000] <othermaciej_>
that seems more clear to me than

[21:55:20.0000] <othermaciej_>
var triangle = new Path("M 100 100 L 300 100 L 200 300 z");

[21:55:21.0000] <Hixie>
jacobolus: what do you mean "inverted?

[21:55:24.0000] <Hixie>
er

[21:55:24.0000] <othermaciej_>
that seems more clear to me than

[21:55:30.0000] <Hixie>
jacobolus: what do you mean "create a Path object from the current default path"?

[21:55:34.0000] <othermaciej_>
var triangle = new Path(); path.addPathData("M 100 100 L 300 100 L 200 300 z");

[21:55:46.0000] <othermaciej_>
dang, I got that wrong, but you get the idea

[21:55:52.0000] <Hixie>
othermaciej_: i guess you can always jsut concatenate the strings together

[21:56:00.0000] <Hixie>
jacobolus: what do you mean "create a Path object from the current default path"?

[21:56:01.0000] <othermaciej_>
var triangle = new Path(); path.addPathData("M 100 100 L 300 100 L 200 300 z");

[21:56:02.0000] <othermaciej_>
dang, I got that wrong, but you get the idea

[21:56:03.0000] <Hixie>
othermaciej_: i guess you can always jsut concatenate the strings together

[21:56:39.0000] <othermaciej_>
Hixie: indeed

[21:56:41.0000] <Hixie>
alright, i'll move that to a constructor

[21:57:00.0000] <othermaciej_>
Hixie: indeed

[21:57:01.0000] <Hixie>
alright, i'll move that to a constructor

[21:57:02.0000] <jacobolus>
Hixie: oh wait, can you turn the "current default path" into a Path object?

[21:57:21.0000] <jacobolus>
Hixie: oh wait, can you turn the "current default path" into a Path object?

[21:57:29.0000] <Hixie>
no

[21:57:48.0000] <jacobolus>
I see, so this is a one-way deal

[21:57:51.0000] <jacobolus>
gotcha!

[21:58:00.0000] <Hixie>
no

[21:58:01.0000] <jacobolus>
I see, so this is a one-way deal

[21:58:02.0000] <jacobolus>
gotcha!

[21:58:03.0000] <jacobolus>
so basically, none of the current canvas APIs for drawing shapes can be used to create Paths

[21:58:07.0000] <jacobolus>
so basically, none of the current canvas APIs for drawing shapes can be used to create Paths

[21:59:00.0000] <Hixie>
well it's the exact same api (same interface), so, sure...

[21:59:01.0000] <jacobolus>
it is?

[21:59:02.0000] <Hixie>
are you reading the spec? or?

[21:59:05.0000] <Hixie>
well it's the exact same api (same interface), so, sure...

[21:59:16.0000] <jacobolus>
it is?

[21:59:25.0000] <Hixie>
are you reading the spec? or?

[21:59:28.0000] <jacobolus>
yes

[21:59:29.0000] <othermaciej_>
Path has a similar interface to Canvas2DContext

[21:59:38.0000] <Hixie>
has literally has the same interface

[21:59:39.0000] <othermaciej_>
it inherits from common interfaces for many of the methods

[21:59:44.0000] <Hixie>
they both implement CanvasPathMethods or something

[21:59:59.0000] <jacobolus>
oh, I see, http://www.whatwg.org/specs/web-apps/current-work/#canvaspathmethods

[22:00:00.0000] <jacobolus>
yes

[22:00:01.0000] <othermaciej_>
Path has a similar interface to Canvas2DContext

[22:00:02.0000] <Hixie>
has literally has the same interface

[22:00:02.0000] <othermaciej_>
although I posit that this is actually kind of weird in some cases

[22:00:03.0000] <othermaciej_>
it inherits from common interfaces for many of the methods

[22:00:04.0000] <Hixie>
they both implement CanvasPathMethods or something

[22:00:05.0000] <jacobolus>
oh, I see, http://www.whatwg.org/specs/web-apps/current-work/#canvaspathmethods

[22:00:06.0000] <othermaciej_>
although I posit that this is actually kind of weird in some cases

[22:00:07.0000] <jacobolus>
that's really confusing

[22:00:08.0000] <jacobolus>
that's really confusing

[22:01:57.0000] <othermaciej_>
well, var path = new Path(); path.moveTo(0, 0); path.lineTo(20, 20); path.lineTo(20, 0); path.closePath(); seems logical enough to me

[22:02:00.0000] <othermaciej_>
well, var path = new Path(); path.moveTo(0, 0); path.lineTo(20, 20); path.lineTo(20, 0); path.closePath(); seems logical enough to me

[22:02:01.0000] <jacobolus>
Hixie: but it has no equivalent of context.save() or context.restore() for transformations?

[22:02:11.0000] <jacobolus>
Hixie: but it has no equivalent of context.save() or context.restore() for transformations?

[22:03:00.0000] <othermaciej_>
it's the transformation, line style, and text style methods on Path that strike me as weird

[22:03:04.0000] <othermaciej_>
it's the transformation, line style, and text style methods on Path that strike me as weird

[22:04:30.0000] <Hixie>
jacobolus: it has a method so you an reset the transform to whatever you want

[22:04:52.0000] <jacobolus>
Hixie: yes, but there's no stack of them. which makes it dramatically less powerful than the context version

[22:05:00.0000] <Hixie>
jacobolus: it has a method so you an reset the transform to whatever you want

[22:05:01.0000] <jacobolus>
Hixie: yes, but there's no stack of them. which makes it dramatically less powerful than the context version

[22:05:02.0000] <jacobolus>
unless you keep track of the transform manually

[22:05:03.0000] <Hixie>
well yeah, it's not like you're going to be doing much with them

[22:05:08.0000] <jacobolus>
unless you keep track of the transform manually

[22:05:08.0000] <Hixie>
well yeah, it's not like you're going to be doing much with them

[22:05:32.0000] <jamesr>
i think it'd make more sense if they weren't there and the only time a xform applied was when you were plopping them into a context's default path

[22:05:41.0000] <jamesr>
or if we had a separate notion of a transform stack, perhaps

[22:05:45.0000] <othermaciej_>
that is certainly what seems natural to me

[22:06:00.0000] <jamesr>
i think it'd make more sense if they weren't there and the only time a xform applied was when you were plopping them into a context's default path

[22:06:01.0000] <jamesr>
or if we had a separate notion of a transform stack, perhaps

[22:06:02.0000] <othermaciej_>
that is certainly what seems natural to me

[22:06:03.0000] <Hixie>
jamesr: how would you create a path that had another path stamped in four locations?

[22:06:04.0000] <othermaciej_>
that plus an ability to one-shot apply a transform (either to a whole path, or it would return a new transformed path)

[22:06:05.0000] <jacobolus>
the only things here that are really adding new capability beyond what's currently possible are dashed lines and extracting the current path as a saved "region"

[22:06:06.0000] <Hixie>
jamesr: how would you create a path that had another path stamped in four locations?

[22:06:07.0000] <othermaciej_>
that plus an ability to one-shot apply a transform (either to a whole path, or it would return a new transformed path)

[22:06:12.0000] <jacobolus>
the only things here that are really adding new capability beyond what's currently possible are dashed lines and extracting the current path as a saved "region"

[22:06:52.0000] <jacobolus>
the Path objects add a lot of complexity, and maybe provide something that's more intuitive, but don't really add power beyond what's there now

[22:06:55.0000] <Hixie>
othermaciej_: i guess we could have a method that takes an SVGMatrix and transforms the path to it

[22:07:00.0000] <jacobolus>
the Path objects add a lot of complexity, and maybe provide something that's more intuitive, but don't really add power beyond what's there now

[22:07:01.0000] <Hixie>
othermaciej_: i guess we could have a method that takes an SVGMatrix and transforms the path to it

[22:07:02.0000] <othermaciej_>
you can store a path and draw it repeatedly

[22:07:03.0000] <othermaciej_>
that's the main power that is added

[22:07:04.0000] <jamesr>
Hixie: subPath = new Path(); parent = new Path(); parent.fillPath(subPath, transformA); parent.fillPath(subPath, transformB);  parent.fillPath(subPath, transformC);  parent.fillPath(subPath, transformD);

[22:07:05.0000] <Hixie>
othermaciej_: not sure what we'd do for the line styles though

[22:07:06.0000] <othermaciej_>
this is pretty useful

[22:07:07.0000] <othermaciej_>
you can store a path and draw it repeatedly

[22:07:16.0000] <othermaciej_>
that's the main power that is added

[22:07:18.0000] <jamesr>
Hixie: subPath = new Path(); parent = new Path(); parent.fillPath(subPath, transformA); parent.fillPath(subPath, transformB);  parent.fillPath(subPath, transformC);  parent.fillPath(subPath, transformD);

[22:07:20.0000] <Hixie>
othermaciej_: not sure what we'd do for the line styles though

[22:07:24.0000] <othermaciej_>
this is pretty useful

[22:07:26.0000] <jacobolus>
you can currently define a function that draws a path, and then call it repeatedly

[22:07:27.0000] <jamesr>
or more likely manipulate a single transform between each fill..()

[22:07:32.0000] <jacobolus>
which is just as useful

[22:07:49.0000] <Hixie>
jamesr: yeah, that makes sense

[22:07:58.0000] <jacobolus>
and just about as fast, since the slow part is typically the fill/stroke, rather than creating the lines themselves

[22:08:00.0000] <jacobolus>
you can currently define a function that draws a path, and then call it repeatedly

[22:08:01.0000] <jamesr>
or more likely manipulate a single transform between each fill..()

[22:08:02.0000] <jacobolus>
which is just as useful

[22:08:03.0000] <Hixie>
jamesr: yeah, that makes sense

[22:08:04.0000] <jacobolus>
and just about as fast, since the slow part is typically the fill/stroke, rather than creating the lines themselves

[22:08:05.0000] <othermaciej_>
Hixie: CG passes the line style parameters individually, but one could imagine having a LineStyle object which is passed only when doing the "stroke the stroke outline" thing

[22:08:06.0000] <Hixie>
i guess

[22:08:07.0000] <Hixie>
ok

[22:08:07.0000] <othermaciej_>
Hixie: CG passes the line style parameters individually, but one could imagine having a LineStyle object which is passed only when doing the "stroke the stroke outline" thing

[22:08:17.0000] <Hixie>
i guess

[22:08:19.0000] <Hixie>
ok

[22:08:30.0000] <Hixie>
i shall investigate this further tomorrow

[22:08:45.0000] <jamesr>
Hixie: sent you some dated canvas 2d feedback via gchat

[22:08:51.0000] <jamesr>
will try to get the author of that to send to WHATWG

[22:08:59.0000] <Hixie>
jamesr: k

[22:09:00.0000] <Hixie>
i shall investigate this further tomorrow

[22:09:00.0000] <jacobolus>
dashed lines are a really nice addition though!

[22:09:01.0000] <jamesr>
Hixie: sent you some dated canvas 2d feedback via gchat

[22:09:02.0000] <jamesr>
will try to get the author of that to send to WHATWG

[22:09:03.0000] <Hixie>
jamesr: k

[22:09:04.0000] <jacobolus>
dashed lines are a really nice addition though!

[22:09:04.0000] <jacobolus>
doing those manually is a huge pain

[22:09:06.0000] <othermaciej_>
interestingly, the CG AddPath operation lets you pass a transform

[22:09:07.0000] <othermaciej_>
along the lines of what jamesr suggests

[22:09:13.0000] <othermaciej_>
interestingly, the CG AddPath operation lets you pass a transform

[22:09:24.0000] <othermaciej_>
along the lines of what jamesr suggests

[22:09:56.0000] <jacobolus>
and regions are nice too, though the API seems complex

[22:10:00.0000] <jacobolus>
and regions are nice too, though the API seems complex

[22:10:50.0000] <jamesr>
it might also be nice to be able to map the points on a Path through some transform in-place

[22:11:00.0000] <jamesr>
it might also be nice to be able to map the points on a Path through some transform in-place

[22:11:01.0000] <jamesr>
although i guess that's just a matter of making a new path and fillPath()ing it

[22:11:05.0000] <jamesr>
although i guess that's just a matter of making a new path and fillPath()ing it

[22:11:37.0000] <jamesr>
oh, that'd just be path.addFill(path, transform)

[22:11:43.0000] <jacobolus>
I guess one nice thing about not making much that's strictly impossible now is that it'll be possible to create a polyfill to do everything but tracing strokes and dashed strokes, and it'll work in all the current canvas implementations

[22:12:00.0000] <jamesr>
oh, that'd just be path.addFill(path, transform)

[22:12:01.0000] <jacobolus>
I guess one nice thing about not making much that's strictly impossible now is that it'll be possible to create a polyfill to do everything but tracing strokes and dashed strokes, and it'll work in all the current canvas implementations

[22:12:02.0000] <jamesr>
wait nope, misread the algo. anyway, that's probably less

[22:12:07.0000] <jamesr>
wait nope, misread the algo. anyway, that's probably less

[22:12:33.0000] <othermaciej_>
NSBezierPath has a transformUsingAffineTransform: method

[22:12:37.0000] <othermaciej_>
but no CTM

[22:13:00.0000] <othermaciej_>
NSBezierPath has a transformUsingAffineTransform: method

[22:13:01.0000] <othermaciej_>
but no CTM

[22:13:33.0000] <jacobolus>
Hixie: while we’re adding stuff, can we add a 4-by-4 transformation matrix, compatible with 3d css animations?

[22:13:54.0000] <Hixie>
i'm just gonna use SVGMatrix, so, speak to them

[22:13:55.0000] <jacobolus>
that one would be actually really neat

[22:13:59.0000] <jamesr>
SVGMatrix is 2x3

[22:14:00.0000] <jacobolus>
Hixie: while we’re adding stuff, can we add a 4-by-4 transformation matrix, compatible with 3d css animations?

[22:14:01.0000] <Hixie>
i'm just gonna use SVGMatrix, so, speak to them

[22:14:02.0000] <jacobolus>
that one would be actually really neat

[22:14:03.0000] <jamesr>
SVGMatrix is 2x3

[22:14:04.0000] <jacobolus>
2 by 3 is really annoying, because it’s impossible to do any perspective

[22:14:22.0000] <jacobolus>
2 by 3 is really annoying, because it’s impossible to do any perspective

[22:14:41.0000] <jacobolus>
even 3 by 3 is way more useful

[22:14:47.0000] <jamesr>
that might be old

[22:14:52.0000] <othermaciej_>
perspective transforms with a 2D API do not make sense to me

[22:14:55.0000] <jamesr>
i don't think perspective is a good idea for canvas 2d

[22:14:57.0000] <jamesr>
jinx

[22:15:00.0000] <jacobolus>
even 3 by 3 is way more useful

[22:15:01.0000] <jamesr>
that might be old

[22:15:02.0000] <othermaciej_>
perspective transforms with a 2D API do not make sense to me

[22:15:02.0000] <jacobolus>
why?

[22:15:03.0000] <jamesr>
i don't think perspective is a good idea for canvas 2d

[22:15:04.0000] <jamesr>
jinx

[22:15:05.0000] <jacobolus>
why?

[22:15:06.0000] <jamesr>
but we need some 4x4 for CSSOM for 3d transforms

[22:15:07.0000] <jacobolus>
for someone who doesn't want it, it's invisible

[22:15:08.0000] <jamesr>
but we need some 4x4 for CSSOM for 3d transforms

[22:15:11.0000] <jacobolus>
for someone who doesn't want it, it's invisible

[22:15:34.0000] <jacobolus>
for someone who does, there's lots of cool fake-3d stuff that can be done w/ perspective transforms

[22:15:49.0000] <jacobolus>
or things like stitching photos together in panoramas

[22:15:53.0000] <othermaciej_>
when you stroke a path with a perspective transform in effect, does the line thickness change along the path?

[22:16:00.0000] <jacobolus>
for someone who does, there's lots of cool fake-3d stuff that can be done w/ perspective transforms

[22:16:01.0000] <jacobolus>
or things like stitching photos together in panoramas

[22:16:02.0000] <othermaciej_>
when you stroke a path with a perspective transform in effect, does the line thickness change along the path?

[22:16:03.0000] <jacobolus>
ah, that's fair I guess

[22:16:12.0000] <jacobolus>
ah, that's fair I guess

[22:17:00.0000] <jacobolus>
would have to be relative to some origin point, which I suppose would be fairly arbitrary

[22:17:01.0000] <othermaciej_>
if you follow that question to its logical conclusion, you will likely find that either answer will result in some part of the API not making sense

[22:17:08.0000] <jacobolus>
would have to be relative to some origin point, which I suppose would be fairly arbitrary

[22:17:12.0000] <othermaciej_>
if you follow that question to its logical conclusion, you will likely find that either answer will result in some part of the API not making sense

[22:17:31.0000] <jamesr>
mr doob has some nifty demos using existing APIs, but it's all done in JS-land. i think in general people doing 3d stuff should either stick to 3d APIs or do all the math themselves

[22:17:52.0000] <jamesr>
it's hard to go halfway in an API and have it still make sense, and i don't think anyone wants to go all the way for canvas 2d

[22:18:00.0000] <jamesr>
mr doob has some nifty demos using existing APIs, but it's all done in JS-land. i think in general people doing 3d stuff should either stick to 3d APIs or do all the math themselves

[22:18:01.0000] <jamesr>
it's hard to go halfway in an API and have it still make sense, and i don't think anyone wants to go all the way for canvas 2d

[22:19:00.0000] <jacobolus>
othermaciej_, jamesr: at the same time, you can't actually get a stroke that changes width along its edge w/ the current APIs, meaning that it's impossible to do many types of nifty demos w/ the current APIs unless you manually implement all the strokes as fills in JS-land

[22:19:24.0000] <jacobolus>
othermaciej_, jamesr: at the same time, you can't actually get a stroke that changes width along its edge w/ the current APIs, meaning that it's impossible to do many types of nifty demos w/ the current APIs unless you manually implement all the strokes as fills in JS-land

[22:19:39.0000] <jacobolus>
[along a straight edge that is]

[22:19:44.0000] <othermaciej_>
you would have to calculate the outline of the stroke and fill it

[22:20:00.0000] <jacobolus>
[along a straight edge that is]

[22:20:00.0000] <othermaciej_>
to do fake 3D with 2D APIs

[22:20:01.0000] <othermaciej_>
you would have to calculate the outline of the stroke and fill it

[22:20:02.0000] <othermaciej_>
to do fake 3D with 2D APIs

[22:20:03.0000] <jacobolus>
right. "manually implement all the strokes as fills"

[22:20:03.0000] <jacobolus>
right. "manually implement all the strokes as fills"

[22:20:04.0000] <othermaciej_>
btw, supporting perspective transforms is not invisible to those who do not use it

[22:20:05.0000] <othermaciej_>
it imposes memory/perf cost

[22:20:13.0000] <othermaciej_>
btw, supporting perspective transforms is not invisible to those who do not use it

[22:20:17.0000] <othermaciej_>
it imposes memory/perf cost

[22:20:30.0000] <othermaciej_>
because your representation of a transform has to be 4x4 instead of 2x3

[22:20:36.0000] <jacobolus>
really? I thought graphics hardware was designed for multiplying square matrices!

[22:20:41.0000] <jacobolus>
othermaciej_: no, 3 by 3

[22:21:00.0000] <othermaciej_>
because your representation of a transform has to be 4x4 instead of 2x3

[22:21:01.0000] <jacobolus>
really? I thought graphics hardware was designed for multiplying square matrices!

[22:21:02.0000] <jacobolus>
othermaciej_: no, 3 by 3

[22:21:03.0000] <othermaciej_>
an affine transform can be stored as a 2x3 matrix

[22:21:04.0000] <othermaciej_>
and often is

[22:21:05.0000] <jacobolus>
yes, and a perspective transform can be stored as a 3x3 matrix

[22:21:07.0000] <othermaciej_>
an affine transform can be stored as a 2x3 matrix

[22:21:13.0000] <othermaciej_>
and often is

[22:21:20.0000] <jacobolus>
yes, and a perspective transform can be stored as a 3x3 matrix

[22:21:32.0000] <jacobolus>
I'm pretty sure whatever low-level API is being used is multiplying 3x3 matrices anyway

[22:21:41.0000] <jamesr>
i doubt that

[22:21:46.0000] <othermaciej_>
you can ignore the [0, 0, 1] row

[22:22:00.0000] <jacobolus>
I'm pretty sure whatever low-level API is being used is multiplying 3x3 matrices anyway

[22:22:01.0000] <jamesr>
i doubt that

[22:22:01.0000] <othermaciej_>
I do not believe 3x3 is sufficient even for 3D affine transforms, let alone perspective

[22:22:02.0000] <othermaciej_>
you can ignore the [0, 0, 1] row

[22:22:03.0000] <othermaciej_>
I do not believe 3x3 is sufficient even for 3D affine transforms, let alone perspective

[22:22:04.0000] <jacobolus>
othermaciej_: if you replace the 0's w/ something else, then you get a perspective transform

[22:22:04.0000] <jacobolus>
othermaciej_: if you replace the 0's w/ something else, then you get a perspective transform

[22:22:05.0000] <jamesr>
jacobolus: i'd want to see some evidence of that (and i work on these low-level APIs and the interfaces to them)

[22:22:06.0000] <jacobolus>
this is called "homogeneous coordinates"

[22:22:11.0000] <jamesr>
jacobolus: i'd want to see some evidence of that (and i work on these low-level APIs and the interfaces to them)

[22:22:15.0000] <jacobolus>
this is called "homogeneous coordinates"

[22:22:34.0000] <jacobolus>
jamesr: well I don't really know. I should go look at the implementations sometime

[22:22:52.0000] <jacobolus>
jamesr: but the whole point of using a matrix is so that you can just use matrix multiplications

[22:23:00.0000] <jacobolus>
jamesr: well I don't really know. I should go look at the implementations sometime

[22:23:01.0000] <jacobolus>
jamesr: but the whole point of using a matrix is so that you can just use matrix multiplications

[22:23:02.0000] <jamesr>
and a matrix multiplication is a bunch of component multiplications. if you don't have some of those components, you can ignore 'em

[22:23:13.0000] <jamesr>
and a matrix multiplication is a bunch of component multiplications. if you don't have some of those components, you can ignore 'em

[22:23:30.0000] <jacobolus>
yeah, but they aren't ignored at the openGL layer I don't think

[22:24:00.0000] <jacobolus>
yeah, but they aren't ignored at the openGL layer I don't think

[22:24:28.0000] <jamesr>
if i was working on an OpenGL canvas 2d backend, i'd pass a 2x3 matrix in as a uniform or buffer of 6 floats

[22:24:44.0000] <jamesr>
and if i had to pass them in as 9 floats i'd be sad about the extra transfer space and multiplications in whichever shader it ran in

[22:25:00.0000] <jamesr>
if i was working on an OpenGL canvas 2d backend, i'd pass a 2x3 matrix in as a uniform or buffer of 6 floats

[22:25:01.0000] <jamesr>
and if i had to pass them in as 9 floats i'd be sad about the extra transfer space and multiplications in whichever shader it ran in

[22:25:31.0000] <jacobolus>
I thought modern graphics hardware could do some ungodly number of matrix multiplications per second

[22:25:48.0000] <jamesr>
true, but it's still not infinity

[22:26:00.0000] <jacobolus>
I thought modern graphics hardware could do some ungodly number of matrix multiplications per second

[22:26:00.0000] <jamesr>
and you have to store those numbers and transfer them

[22:26:01.0000] <jamesr>
true, but it's still not infinity

[22:26:02.0000] <jamesr>
and you have to store those numbers and transfer them

[22:26:03.0000] <jacobolus>
far outstripping the actual speed of drawing stuff to the screen

[22:26:04.0000] <othermaciej_>
lemme put it this way; in WebKit, a 2D affine transform is 6 doubles, and a 3d  perspective transform is 16 doubles

[22:26:05.0000] <jamesr>
depends on the scene

[22:26:06.0000] <jacobolus>
the number of transformation matrices you use in a canvas is tiny

[22:26:06.0000] <jacobolus>
far outstripping the actual speed of drawing stuff to the screen

[22:26:07.0000] <jamesr>
depends on the scene

[22:26:11.0000] <othermaciej_>
lemme put it this way; in WebKit, a 2D affine transform is 6 doubles, and a 3d  perspective transform is 16 doubles

[22:26:13.0000] <jamesr>
depends on the scene

[22:26:18.0000] <jacobolus>
the number of transformation matrices you use in a canvas is tiny

[22:26:22.0000] <jamesr>
depends on the scene

[22:26:28.0000] <jamesr>
you can definitely be vertex-shader bound

[22:26:42.0000] <jacobolus>
othermaciej_: sure, but it could be 9 doubles if you wanted

[22:26:52.0000] <othermaciej_>
while it is remotely possible that all the graphics experts who work on WebKit overlooked a huge way to save storage, that seems unlikely to me

[22:26:54.0000] <jamesr>
or memory bandwidth bound if you have a lot of geometry and lots of matrices

[22:27:00.0000] <jamesr>
you can definitely be vertex-shader bound

[22:27:01.0000] <jacobolus>
othermaciej_: sure, but it could be 9 doubles if you wanted

[22:27:02.0000] <othermaciej_>
while it is remotely possible that all the graphics experts who work on WebKit overlooked a huge way to save storage, that seems unlikely to me

[22:27:03.0000] <jamesr>
or memory bandwidth bound if you have a lot of geometry and lots of matrices

[22:27:04.0000] <jamesr>
3x3 is a big cost compared to the payoff

[22:27:05.0000] <othermaciej_>
but if it is true, I should file a bug

[22:27:07.0000] <jamesr>
3x3 is a big cost compared to the payoff

[22:27:10.0000] <othermaciej_>
but if it is true, I should file a bug

[22:28:00.0000] <jacobolus>
othermaciej_: with strictly equivalent power in terms of 2d, but somewhat less obvious math to do to move things around in 3d space, and no ability to do 3-d perspective transforms (which I haven’t ever actually seen used but would be cool)

[22:28:08.0000] <jacobolus>
othermaciej_: with strictly equivalent power in terms of 2d, but somewhat less obvious math to do to move things around in 3d space, and no ability to do 3-d perspective transforms (which I haven’t ever actually seen used but would be cool)

[22:29:00.0000] <jacobolus>
othermaciej_: it's definitely not worth it to use 3x3 matrix if you're actually dealing w/ 3d space, if only because figuring out what the numbers mean in terms of the 3d space is much less clear, and because there aren't obvious answers w/r/t questions like what is in front of what

[22:29:17.0000] <jacobolus>
othermaciej_: it's definitely not worth it to use 3x3 matrix if you're actually dealing w/ 3d space, if only because figuring out what the numbers mean in terms of the 3d space is much less clear, and because there aren't obvious answers w/r/t questions like what is in front of what

[22:29:51.0000] <jacobolus>
if you use a 3x4 matrix, you can specify affine transform in 3d + translation

[22:30:00.0000] <jacobolus>
if you use a 3x4 matrix, you can specify affine transform in 3d + translation

[22:30:01.0000] <jacobolus>
and you just pass 4x4 matrix, because you might as well at that point, but that last row is typically not used

[22:30:19.0000] <jacobolus>
and you just pass 4x4 matrix, because you might as well at that point, but that last row is typically not used

[22:30:44.0000] <jacobolus>
[but you could use the last row to do some really weird fun stuff!]

[22:30:51.0000] <jamesr>
for 3d css we have to handle real perspective

[22:31:00.0000] <jacobolus>
[but you could use the last row to do some really weird fun stuff!]

[22:31:00.0000] <jamesr>
so 4x4 is pretty much required

[22:31:01.0000] <jamesr>
for 3d css we have to handle real perspective

[22:31:02.0000] <jamesr>
so 4x4 is pretty much required

[22:31:57.0000] <jacobolus>
jamesr: you can do precisely the same perspective transformations with a 3x3 matrix. it's just harder to relate to some concrete 3-d scene

[22:32:00.0000] <jacobolus>
jamesr: you can do precisely the same perspective transformations with a 3x3 matrix. it's just harder to relate to some concrete 3-d scene

[22:32:40.0000] <jacobolus>
and so if you want to rotate by some amount in your existing 3d scene, say, figuring out the right matrix to use is more expensive arithmetic than if you use the 4x4 matrix

[22:32:48.0000] <jacobolus>
where it's completely obvious

[22:33:00.0000] <jacobolus>
and so if you want to rotate by some amount in your existing 3d scene, say, figuring out the right matrix to use is more expensive arithmetic than if you use the 4x4 matrix

[22:33:01.0000] <jacobolus>
where it's completely obvious

[22:34:00.0000] <jacobolus>
anyhow, it would be kind of neat to get faux-3-d in canvas, but it's not strictly necessary

[22:34:16.0000] <jacobolus>
anyhow, it would be kind of neat to get faux-3-d in canvas, but it's not strictly necessary

[22:35:00.0000] <jacobolus>
it would also be really nice to have some fast functions for doing various matrix math implemented in all the browsers

[22:35:00.0000] <jacobolus>
it would also be really nice to have some fast functions for doing various matrix math implemented in all the browsers

[22:35:56.0000] <jacobolus>
[anyhow, sorry to have somewhat derailed the conversation. wasn't trying to do that :)]

[22:36:00.0000] <jacobolus>
[anyhow, sorry to have somewhat derailed the conversation. wasn't trying to do that :)]

[22:39:36.0000] <jamesr>
i think having efficient implementations of common matrix ops falls under the various matrix API proposals floating 'around

[22:40:00.0000] <jamesr>
i think having efficient implementations of common matrix ops falls under the various matrix API proposals floating 'around

[22:40:01.0000] <jacobolus>
othermaciej_, jamesr: here's an example of using a functional-code-style approach to the canvas http://jsfiddle.net/x9rUN/2/

[22:40:09.0000] <jacobolus>
othermaciej_, jamesr: here's an example of using a functional-code-style approach to the canvas http://jsfiddle.net/x9rUN/2/

[22:40:36.0000] <jacobolus>
[albeit a fairly trivial one]

[22:41:00.0000] <jacobolus>
[albeit a fairly trivial one]

[23:28:59.0000] <othermaciej_>
jacobolus: neat, though not really what I think of as "functional"

[23:29:00.0000] <othermaciej_>
jacobolus: neat, though not really what I think of as "functional"

[23:29:47.0000] <othermaciej_>
I would expect a functional approach to be stateless and side-effect free

[23:30:00.0000] <othermaciej_>
I would expect a functional approach to be stateless and side-effect free

[23:37:57.0000] <jacobolus>
othermaciej_: well, "functional"

[23:38:00.0000] <jacobolus>
othermaciej_: well, "functional"

[23:38:01.0000] <jacobolus>
othermaciej_: really more like "how do you approximate the kind of abstraction you'd build in postscript in javascript"

[23:38:22.0000] <jacobolus>
othermaciej_: really more like "how do you approximate the kind of abstraction you'd build in postscript in javascript"

[23:38:28.0000] <jacobolus>
not sure what a right name is for that

[23:39:00.0000] <jacobolus>
not sure what a right name is for that

[23:53:00.0000] <jacobolus>
the key point though is that by using higher-order functions, passing around functions as first-class objects, and saving state in the context stack rather than explicitly in our own objects, we can make some very nice clean abstractions

[23:53:25.0000] <jacobolus>
the key point though is that by using higher-order functions, passing around functions as first-class objects, and saving state in the context stack rather than explicitly in our own objects, we can make some very nice clean abstractions

[23:53:43.0000] <jacobolus>
maybe "functional" doesn't quite work as a word for that, but hey

[23:54:00.0000] <jacobolus>
maybe "functional" doesn't quite work as a word for that, but hey

[00:24:44.0000] <zcorpan>
/me updated html5-diff

[00:25:00.0000] <zcorpan>
/me updated html5-diff

[00:57:45.0000] <annevk>
"which is the number I should phone" Dutch people on the lounge and speaking loudly :/

[00:58:00.0000] <annevk>
"which is the number I should phone" Dutch people on the lounge and speaking loudly :/

[00:58:01.0000] <annevk>
(they're trying to talk in English)

[00:58:13.0000] <annevk>
(they're trying to talk in English)

[00:59:00.0000] <annevk>
momentarily forgot I could listen to some music instead

[00:59:01.0000] <annevk>
problem solved

[00:59:09.0000] <annevk>
momentarily forgot I could listen to some music instead

[00:59:11.0000] <annevk>
problem solved

[01:06:00.0000] <hsivonen>
MikeSmith: emitting such a message would make a lot of sense

[01:06:01.0000] <MikeSmith>
OK

[01:06:02.0000] <hsivonen>
(the build script pointing people to #whatwg that is)

[01:06:05.0000] <hsivonen>
MikeSmith: emitting such a message would make a lot of sense

[01:06:16.0000] <MikeSmith>
OK

[01:06:23.0000] <hsivonen>
(the build script pointing people to #whatwg that is)

[01:06:29.0000] <MikeSmith>
yeah

[01:07:00.0000] <MikeSmith>
yeah

[01:07:01.0000] <MikeSmith>
hsivonen: btw I wrote a patch for jing that adds HTML support

[01:07:19.0000] <MikeSmith>
hsivonen: btw I wrote a patch for jing that adds HTML support

[01:07:34.0000] <MikeSmith>
I wonder if you think it's a good idea or not

[01:07:43.0000] <MikeSmith>
using the validator.nu parser of course

[01:08:00.0000] <MikeSmith>
I wonder if you think it's a good idea or not

[01:08:01.0000] <MikeSmith>
using the validator.nu parser of course

[01:08:46.0000] <MikeSmith>
enabled through a new -h switch for the cli, and through a settable property flag in the code

[01:09:00.0000] <MikeSmith>
enabled through a new -h switch for the cli, and through a settable property flag in the code

[01:11:00.0000] <annevk>
WHATWG Weekly: path objects, ellipse support, SVG paths

[01:11:01.0000] <annevk>
anything else?

[01:11:03.0000] <annevk>
WHATWG Weekly: path objects, ellipse support, SVG paths

[01:11:07.0000] <annevk>
anything else?

[01:13:29.0000] <hsivonen>
MikeSmith: cool. did it get accepted to upstream?

[01:13:47.0000] <MikeSmith>
hsivonen: have not proposed it to James yet

[01:13:54.0000] <MikeSmith>
wanted to get your opinion first

[01:14:00.0000] <hsivonen>
MikeSmith: cool. did it get accepted to upstream?

[01:14:01.0000] <MikeSmith>
hsivonen: have not proposed it to James yet

[01:14:02.0000] <MikeSmith>
wanted to get your opinion first

[01:14:03.0000] <MikeSmith>
about whether you think's helpful and worth pursuing

[01:14:24.0000] <MikeSmith>
about whether you think's helpful and worth pursuing

[01:14:31.0000] <MikeSmith>
*think it's

[01:15:00.0000] <MikeSmith>
*think it's

[01:15:01.0000] <MikeSmith>
we obviously don't need it for the validator.nu branch

[01:15:01.0000] <MikeSmith>
we obviously don't need it for the validator.nu branch

[01:15:02.0000] <MikeSmith>
so yeah the plan would be to get it landed upstream

[01:15:03.0000] <annevk>
seems I'm not going to post this before takeoff

[01:15:15.0000] <MikeSmith>
so yeah the plan would be to get it landed upstream

[01:15:18.0000] <annevk>
seems I'm not going to post this before takeoff

[01:16:00.0000] <MikeSmith>
annevk: you work on it when you land? how many hours from now?

[01:16:13.0000] <MikeSmith>
annevk: you work on it when you land? how many hours from now?

[01:17:00.0000] <annevk>
two hours more or less

[01:17:01.0000] <MikeSmith>
ok

[01:17:02.0000] <annevk>
should be home in less than four, ideally so it's not a big deal

[01:17:08.0000] <annevk>
two hours more or less

[01:17:19.0000] <MikeSmith>
ok

[01:17:25.0000] <annevk>
should be home in less than four, ideally so it's not a big deal

[01:17:31.0000] <hsivonen>
MikeSmith: I think it could be useful for the command-line Jing tool

[01:17:52.0000] <MikeSmith>
annevk: in the mean time will try to catch up with mail and see if there's anything I can suggest adding

[01:17:53.0000] <hsivonen>
MikeSmith: I'm not a user of the command-line Jing tool, though, so I might be wrong

[01:18:00.0000] <hsivonen>
MikeSmith: I think it could be useful for the command-line Jing tool

[01:18:01.0000] <MikeSmith>
annevk: in the mean time will try to catch up with mail and see if there's anything I can suggest adding

[01:18:02.0000] <hsivonen>
MikeSmith: I'm not a user of the command-line Jing tool, though, so I might be wrong

[01:18:03.0000] <hsivonen>
annevk: were you at SXSW?

[01:18:24.0000] <hsivonen>
annevk: were you at SXSW?

[01:19:00.0000] <MikeSmith>
hsivonen: could it be useful for other users of the API? e.g., the epubcheck tool uses the API, I think

[01:19:22.0000] <MikeSmith>
hsivonen: could it be useful for other users of the API? e.g., the epubcheck tool uses the API, I think

[01:21:46.0000] <annevk>
hsivonen: no in Oslo

[01:21:59.0000] <annevk>
added the encoding/decoding stuff btw

[01:22:00.0000] <annevk>
hsivonen: no in Oslo

[01:22:01.0000] <annevk>
added the encoding/decoding stuff btw

[01:28:42.0000] <hsivonen>
MikeSmith: what's "the API"?

[01:29:00.0000] <hsivonen>
MikeSmith: what's "the API"?

[01:29:01.0000] <MikeSmith>
the Jing validation API

[01:29:02.0000] <MikeSmith>
mode/rngvalidate or whatever it is

[01:29:04.0000] <MikeSmith>
the Jing validation API

[01:29:18.0000] <MikeSmith>
mode/rngvalidate or whatever it is

[01:29:50.0000] <MikeSmith>
ValidationDriver

[01:30:00.0000] <MikeSmith>
ValidationDriver

[01:30:29.0000] <MikeSmith>
class

[01:31:00.0000] <MikeSmith>
class

[01:40:00.0000] <zcorpan>
MikeSmith: i tried validating the whatwg stylesheet and filed a few bugs on the css validator

[01:40:01.0000] <MikeSmith>
zcorpan: excellent, thanks

[01:40:05.0000] <zcorpan>
MikeSmith: i tried validating the whatwg stylesheet and filed a few bugs on the css validator

[01:40:21.0000] <MikeSmith>
zcorpan: excellent, thanks

[01:40:27.0000] <zcorpan>
MikeSmith: and whined about the spec language around unquoted font family names *again*

[01:40:40.0000] <MikeSmith>
heh

[01:41:00.0000] <zcorpan>
MikeSmith: and whined about the spec language around unquoted font family names *again*

[01:41:01.0000] <MikeSmith>
heh

[01:42:00.0000] <zcorpan>
the css wg have taught web authors the mantra "if there's whitespace in the font family name, i must quote it", so they would quote "times new roman" but not quote "456bereast"

[01:42:01.0000] <zcorpan>
even though the former works unquoted and the latter doesn't

[01:42:12.0000] <zcorpan>
the css wg have taught web authors the mantra "if there's whitespace in the font family name, i must quote it", so they would quote "times new roman" but not quote "456bereast"

[01:42:21.0000] <zcorpan>
even though the former works unquoted and the latter doesn't

[01:46:00.0000] <zcorpan>
i guess this is a topic matjas could write about

[01:46:22.0000] <zcorpan>
i guess this is a topic matjas could write about

[01:46:50.0000] <matjas>
I’m intrigued (also: mind = blown)

[01:47:00.0000] <matjas>
I’m intrigued (also: mind = blown)

[01:51:43.0000] <zcorpan>
matjas: i think mothereffin css escapes applies to unquoted font family names, except unquoted font family names can have several identifiers that are turned into a string by joining them (after unescaping) with a space

[01:52:00.0000] <zcorpan>
matjas: i think mothereffin css escapes applies to unquoted font family names, except unquoted font family names can have several identifiers that are turned into a string by joining them (after unescaping) with a space

[01:52:01.0000] <zcorpan>
matjas: since id and class also are identifiers

[01:52:04.0000] <zcorpan>
matjas: since id and class also are identifiers

[01:54:00.0000] <zcorpan>
that and keywords aren't allowed as unquoted font family names

[01:55:49.0000] <matjas>
hah, thanks for doing all the research for me :)

[01:56:00.0000] <matjas>
hah, thanks for doing all the research for me :)

[01:56:46.0000] <zcorpan>
that was off the top of my head, i might be lying :-P

[01:57:00.0000] <zcorpan>
that was off the top of my head, i might be lying :-P

[01:57:01.0000] <jgraham>
Experience suggests that the top of zcorpan's head is quite a reliable source of information

[01:57:20.0000] <jgraham>
Experience suggests that the top of zcorpan's head is quite a reliable source of information

[01:57:41.0000] <zcorpan>
heh

[01:58:00.0000] <zcorpan>
heh

[01:58:01.0000] <matjas>
data:text/html,<style>:root { font-family: \63 omic\ sans\ ms, sans-serif; }%E2%80%8B</style>lolwat

[01:58:02.0000] <matjas>
nice

[01:58:09.0000] <matjas>
data:text/html,<style>:root { font-family: \63 omic\ sans\ ms, sans-serif; }%E2%80%8B</style>lolwat

[01:58:12.0000] <matjas>
nice

[01:59:00.0000] <matjas>
but… data:text/html,<style>:root { font-family: \63 omic\    sans\ ms, sans-serif; }%E2%80%8B</style>lolwat is rendered in sans-serif

[01:59:20.0000] <matjas>
but… data:text/html,<style>:root { font-family: \63 omic\    sans\ ms, sans-serif; }%E2%80%8B</style>lolwat is rendered in sans-serif

[02:01:00.0000] <zcorpan>
pasted the wrong thing? or what's the difference?

[02:01:24.0000] <zcorpan>
pasted the wrong thing? or what's the difference?

[02:01:46.0000] <zcorpan>
also, you don't need to escape the spaces :-)

[02:02:00.0000] <zcorpan>
also, you don't need to escape the spaces :-)

[02:06:43.0000] <zcorpan>
matjas: also see http://lists.w3.org/Archives/Public/www-style/2010Mar/0395.html

[02:07:00.0000] <zcorpan>
matjas: also see http://lists.w3.org/Archives/Public/www-style/2010Mar/0395.html

[02:07:01.0000] <matjas>
zcorpan: the difference is that the first one uses comic sans ms, but the second one doesn’t

[02:07:04.0000] <matjas>
zcorpan: the difference is that the first one uses comic sans ms, but the second one doesn’t

[02:08:00.0000] <zcorpan>
http://software.hixie.ch/utilities/js/live-dom-viewer/saved/1389

[02:08:20.0000] <zcorpan>
http://software.hixie.ch/utilities/js/live-dom-viewer/saved/1389

[02:08:32.0000] <zcorpan>
they are the same string and they both use the same font for me :-)

[02:09:00.0000] <zcorpan>
they are the same string and they both use the same font for me :-)

[02:09:01.0000] <matjas>
zcorpan: your IRC client merges multiple spaces together

[02:09:14.0000] <matjas>
zcorpan: your IRC client merges multiple spaces together

[02:09:29.0000] <zcorpan>
aha

[02:09:50.0000] <matjas>
http://software.hixie.ch/utilities/js/live-dom-viewer/saved/1390

[02:10:00.0000] <zcorpan>
aha

[02:10:01.0000] <matjas>
http://software.hixie.ch/utilities/js/live-dom-viewer/saved/1390

[02:10:31.0000] <zcorpan>
ok so you have the identifiers "\63 omic\ " and "sans\ ms"

[02:10:33.0000] <matjas>
the escapes spaces + the \63 was just to test identifier escapes

[02:10:44.0000] <zcorpan>
which after unescaping become "comic " and "sans ms"

[02:10:57.0000] <MikeSmith>
M7 earthquake just now off the coast of Hokkaido

[02:11:00.0000] <zcorpan>
ok so you have the identifiers "\63 omic\ " and "sans\ ms"

[02:11:01.0000] <matjas>
the escapes spaces + the \63 was just to test identifier escapes

[02:11:01.0000] <zcorpan>
then join with a space, you get "comic  sans ms" (with two spaces between comic and sans)

[02:11:02.0000] <zcorpan>
which after unescaping become "comic " and "sans ms"

[02:11:03.0000] <MikeSmith>
M7 earthquake just now off the coast of Hokkaido

[02:11:04.0000] <zcorpan>
then join with a space, you get "comic  sans ms" (with two spaces between comic and sans)

[02:11:05.0000] <zcorpan>
which doesn't match a font family name

[02:11:06.0000] <MikeSmith>
it is shaking things in Tokyo even

[02:11:06.0000] <zcorpan>
which doesn't match a font family name

[02:11:16.0000] <MikeSmith>
it is shaking things in Tokyo even

[02:11:38.0000] <matjas>
zcorpan: ok, so i shouldn’t have explicitly escaped that one space

[02:11:42.0000] <matjas>
got it

[02:11:47.0000] <MikeSmith>
I think a Tsunami is going to hit eastern Hokaido and nothern Honshu

[02:11:58.0000] <MikeSmith>
http://quake.twiple.jp/quake/view/20120314180905

[02:12:00.0000] <matjas>
zcorpan: ok, so i shouldn’t have explicitly escaped that one space

[02:12:01.0000] <matjas>
got it

[02:12:02.0000] <MikeSmith>
I think a Tsunami is going to hit eastern Hokaido and nothern Honshu

[02:12:03.0000] <MikeSmith>
http://quake.twiple.jp/quake/view/20120314180905

[02:14:28.0000] <MikeSmith>
http://nmz.mogken.com/20120314180905

[02:15:00.0000] <MikeSmith>
http://nmz.mogken.com/20120314180905

[02:17:46.0000] <zcorpan>
are there any nuclear power plants there?

[02:18:00.0000] <zcorpan>
are there any nuclear power plants there?

[02:18:28.0000] <MikeSmith>
probably

[02:18:32.0000] <MikeSmith>
but none running

[02:18:51.0000] <MikeSmith>
52 of the 54 plants in Japan are shut down right now

[02:19:00.0000] <MikeSmith>
probably

[02:19:01.0000] <MikeSmith>
but none running

[02:19:02.0000] <MikeSmith>
52 of the 54 plants in Japan are shut down right now

[02:19:03.0000] <MikeSmith>
anyway, news is saying the tsunami will only be .5m

[02:19:04.0000] <MikeSmith>
http://weather.excite.co.jp/tsunami/t-2012-03-14+18%3A12%3A56/

[02:19:04.0000] <MikeSmith>
anyway, news is saying the tsunami will only be .5m

[02:19:06.0000] <MikeSmith>
http://weather.excite.co.jp/tsunami/t-2012-03-14+18%3A12%3A56/

[02:20:00.0000] <zcorpan>
what does that mean in terms of damage?

[02:20:10.0000] <zcorpan>
what does that mean in terms of damage?

[02:20:44.0000] <MikeSmith>
probably not much I guess

[02:21:00.0000] <MikeSmith>
probably not much I guess

[02:21:35.0000] <MikeSmith>
and it's not going to his the coast for until another 20 minutes from now

[02:21:41.0000] <zcorpan>
"is ok to let your children play at the beach until you see the tsunami coming, at which point you should walk up the beach about 50m" or "will wipe out houses that are 150m to the beach or closer" or something in between? :-)

[02:22:00.0000] <MikeSmith>
and it's not going to his the coast for until another 20 minutes from now

[02:22:01.0000] <zcorpan>
"is ok to let your children play at the beach until you see the tsunami coming, at which point you should walk up the beach about 50m" or "will wipe out houses that are 150m to the beach or closer" or something in between? :-)

[02:22:02.0000] <MikeSmith>
dunno

[02:22:12.0000] <MikeSmith>
dunno

[03:06:00.0000] <hsivonen>
must. not. read. Slashdot or Ars comment threads about Mozilla & H.264. Too much 386.

[03:06:08.0000] <hsivonen>
must. not. read. Slashdot or Ars comment threads about Mozilla & H.264. Too much 386.

[03:07:00.0000] <hsivonen>
speaking people being wrong on the Internet: http://ask.slashdot.org/story/12/03/04/047248/ask-slashdot-life-after-firefox-36x?sdsrc=popbytid

[03:07:01.0000] <zcorpan>
/me learns that width:0 and width:0% on table cells is ignored

[03:07:02.0000] <hsivonen>
"3.6.x has been known for generally being more stable and using less RAM than the modern Firefox 10 and even Chrome."

[03:07:06.0000] <hsivonen>
speaking people being wrong on the Internet: http://ask.slashdot.org/story/12/03/04/047248/ask-slashdot-life-after-firefox-36x?sdsrc=popbytid

[03:07:07.0000] <zcorpan>
/me learns that width:0 and width:0% on table cells is ignored

[03:07:20.0000] <hsivonen>
"3.6.x has been known for generally being more stable and using less RAM than the modern Firefox 10 and even Chrome."

[03:09:00.0000] <zcorpan>
"Netscape 4 has been known for generally being more stable and using less RAM than the modern Internet Explorer 5.5 and even Opera."

[03:09:18.0000] <zcorpan>
"Netscape 4 has been known for generally being more stable and using less RAM than the modern Internet Explorer 5.5 and even Opera."

[03:11:47.0000] <jgraham>
People who want to talk about browser memeory consumption on the internet should be forced to either a) work for a browser vendor or b) read all of Nicolas Nethercote's blog before they get to say anything

[03:12:00.0000] <jgraham>
People who want to talk about browser memeory consumption on the internet should be forced to either a) work for a browser vendor or b) read all of Nicolas Nethercote's blog before they get to say anything

[03:12:01.0000] <jgraham>
The % of misinformation on that topic is unusually high even for the internet

[03:12:12.0000] <jgraham>
The % of misinformation on that topic is unusually high even for the internet

[03:15:57.0000] <jgraham>
(if there is anyone else providing such a useful public resource on why browsers use memory I would also happily suggest that)

[03:16:00.0000] <jgraham>
(if there is anyone else providing such a useful public resource on why browsers use memory I would also happily suggest that)

[03:16:35.0000] <Ms2ger>
jgraham, you could do something for Opera? :)

[03:17:00.0000] <Ms2ger>
jgraham, you could do something for Opera? :)

[03:17:01.0000] <jgraham>
I'm not sureI would be the right person to write that, sadly

[03:17:12.0000] <jgraham>
I'm not sureI would be the right person to write that, sadly

[03:31:32.0000] <Ms2ger>
Hixie, with those diagrams, I might finally understand what arc() does :)

[03:32:00.0000] <Ms2ger>
Hixie, with those diagrams, I might finally understand what arc() does :)

[03:36:00.0000] <zcorpan>
Ms2ger: now pretend you're on the phone and need to explain the diagrams to someone else, or the bunny gets it. what'd ya say?

[03:36:12.0000] <zcorpan>
Ms2ger: now pretend you're on the phone and need to explain the diagrams to someone else, or the bunny gets it. what'd ya say?

[03:37:32.0000] <jgraham>
Bye bye bunny?

[03:38:00.0000] <jgraham>
Bye bye bunny?

[03:40:00.0000] <zcorpan>
(bonus point for knowing the bunny reference)

[03:40:10.0000] <zcorpan>
(bonus point for knowing the bunny reference)

[03:52:28.0000] <MikeSmith>
matjas: about "criteria that cannot be expressed by a DTD, but can still be checked by a machine” see my comments in the logs

[03:52:53.0000] <MikeSmith>
and https://bitbucket.org/validator/syntax/src/tip/relaxng/datatype/java/src/org/whattf/datatype/ScriptDocumentation.java and https://bitbucket.org/validator/syntax/src/tip/relaxng/datatype/java/src/org/whattf/datatype/FunctionBody.java

[03:53:00.0000] <MikeSmith>
matjas: about "criteria that cannot be expressed by a DTD, but can still be checked by a machine” see my comments in the logs

[03:53:01.0000] <MikeSmith>
and https://bitbucket.org/validator/syntax/src/tip/relaxng/datatype/java/src/org/whattf/datatype/ScriptDocumentation.java and https://bitbucket.org/validator/syntax/src/tip/relaxng/datatype/java/src/org/whattf/datatype/FunctionBody.java

[03:53:02.0000] <MikeSmith>
those check the text content of script elements

[03:53:08.0000] <MikeSmith>
those check the text content of script elements

[03:54:00.0000] <matjas>
MikeSmith: http://krijnhoetmer.nl/irc-logs/whatwg/20120314#l-218, I missed those before, thanks!

[03:54:22.0000] <matjas>
MikeSmith: http://krijnhoetmer.nl/irc-logs/whatwg/20120314#l-218, I missed those before, thanks!

[03:54:31.0000] <MikeSmith>
cheers

[03:55:00.0000] <MikeSmith>
cheers

[04:09:00.0000] <Philip`>
jacobolus: "I thought graphics hardware was designed for multiplying square matrices!" - as I understand it, modern GPUs expand shader code into single-float instructions (e.g. "color.rgb *= 2.0" is 3 instructions, and matrix multiplications are lots)

[04:09:24.0000] <Philip`>
jacobolus: "I thought graphics hardware was designed for multiplying square matrices!" - as I understand it, modern GPUs expand shader code into single-float instructions (e.g. "color.rgb *= 2.0" is 3 instructions, and matrix multiplications are lots)

[04:09:38.0000] <Philip`>
so they're not designed for doing anything with matrices or even with vectors

[04:10:00.0000] <Philip`>
so they're not designed for doing anything with matrices or even with vectors

[04:10:01.0000] <jacobolus>
Philip`: what about when you say "here's a transformation matrix and here are points a, b, c, d in space", etc.?

[04:10:15.0000] <jacobolus>
Philip`: what about when you say "here's a transformation matrix and here are points a, b, c, d in space", etc.?

[04:11:00.0000] <Philip`>
(though they run the same shader code over ~16 streams of data in parallel, and run ~32 of those in parallel, so you get huge bandwidth even if each individual shader is many more instructions)

[04:11:12.0000] <Philip`>
(though they run the same shader code over ~16 streams of data in parallel, and run ~32 of those in parallel, so you get huge bandwidth even if each individual shader is many more instructions)

[04:12:26.0000] <Philip`>
jacobolus: That's just part of the application-facing API (or in the case of OpenGL ES it's not even there, it's entirely in the application), and gets turned into vertex shader code that multiplies the per-vertex data with the uniform transform data

[04:12:48.0000] <Philip`>
*ES 2.0

[04:13:00.0000] <Philip`>
jacobolus: That's just part of the application-facing API (or in the case of OpenGL ES it's not even there, it's entirely in the application), and gets turned into vertex shader code that multiplies the per-vertex data with the uniform transform data

[04:13:01.0000] <Philip`>
*ES 2.0

[04:13:02.0000] <jacobolus>
ah. I guess I should really learn openGL seriously sometime

[04:13:24.0000] <jacobolus>
ah. I guess I should really learn openGL seriously sometime

[04:15:35.0000] <Philip`>
(Old GL has e.g. VertexPointer to give it vertex positions, which originated with the fixed-function pipeline (when I guess GPUs did have dedicated hardware for vertex transforms), but GLES2 (and the non-compatibility profile of GL3.2) removes that and just has a generic semanticless vertex attribute system)

[04:16:00.0000] <Philip`>
(Old GL has e.g. VertexPointer to give it vertex positions, which originated with the fixed-function pipeline (when I guess GPUs did have dedicated hardware for vertex transforms), but GLES2 (and the non-compatibility profile of GL3.2) removes that and just has a generic semanticless vertex attribute system)

[04:16:47.0000] <Philip`>
((and modern implementations of old GL will translate everything into the new shaderier system))

[04:17:00.0000] <Philip`>
((and modern implementations of old GL will translate everything into the new shaderier system))

[04:17:01.0000] <MikeSmith>
hmm shouldn't the polyglot spec disallow CDATA sections?

[04:17:10.0000] <MikeSmith>
hmm shouldn't the polyglot spec disallow CDATA sections?

[04:17:28.0000] <jacobolus>
Philip`: can you recommend any resources for learning whatever OpenGL thing will be compatible with WebGL?

[04:17:51.0000] <Ms2ger>
MikeSmith, but that's the nicest part of polyglot!

[04:18:00.0000] <jacobolus>
Philip`: can you recommend any resources for learning whatever OpenGL thing will be compatible with WebGL?

[04:18:01.0000] <Ms2ger>
MikeSmith, but that's the nicest part of polyglot!

[04:18:02.0000] <Philip`>
jacobolus: I can't :-(

[04:18:03.0000] <jacobolus>
Philip`: and also, to what extent can I use WebGL just to do computation, without necessarily displaying anything on screen?

[04:18:03.0000] <Philip`>
jacobolus: I can't :-(

[04:18:04.0000] <jacobolus>
ah, darn

[04:18:05.0000] <jacobolus>
Philip`: and also, to what extent can I use WebGL just to do computation, without necessarily displaying anything on screen?

[04:18:11.0000] <jacobolus>
ah, darn

[04:18:29.0000] <Philip`>
(other than the obvious things like the OpenGL ES 2.0 spec and delta spec)

[04:19:00.0000] <Philip`>
(other than the obvious things like the OpenGL ES 2.0 spec and delta spec)

[04:19:01.0000] <jacobolus>
how much of that transfers to webgl?

[04:19:02.0000] <jacobolus>
I haven't taken much serious look at webgl

[04:19:03.0000] <Philip`>
I've never really learned OpenGL from anywhere specific - I've just aggregated whatever rubbish I happen to encounter on the web and assume it to be true

[04:19:03.0000] <jacobolus>
how much of that transfers to webgl?

[04:19:10.0000] <jacobolus>
I haven't taken much serious look at webgl

[04:19:12.0000] <Philip`>
I've never really learned OpenGL from anywhere specific - I've just aggregated whatever rubbish I happen to encounter on the web and assume it to be true

[04:19:32.0000] <Philip`>
so I don't know what's a good place to look

[04:20:00.0000] <Philip`>
so I don't know what's a good place to look

[04:20:26.0000] <Philip`>
(though I did recently see http://fgiesen.wordpress.com/2011/07/09/a-trip-through-the-graphics-pipeline-2011-index/ which seems like a nice overview of the lower-level implementation details if you already understand the basic concepts)

[04:21:00.0000] <Philip`>
(though I did recently see http://fgiesen.wordpress.com/2011/07/09/a-trip-through-the-graphics-pipeline-2011-index/ which seems like a nice overview of the lower-level implementation details if you already understand the basic concepts)

[04:21:01.0000] <jacobolus>
do you know if it's possible to use WebGL just for fast computation on the GPU, and not for showing anything?

[04:21:02.0000] <Philip`>
I've never really used WebGL, so I could be mistaken, but I believe it's very close to GLES2

[04:21:10.0000] <jacobolus>
do you know if it's possible to use WebGL just for fast computation on the GPU, and not for showing anything?

[04:21:12.0000] <Philip`>
I've never really used WebGL, so I could be mistaken, but I believe it's very close to GLES2

[04:22:00.0000] <Philip`>
You can use it to render onto an off-screen buffer, and then use that as input for further GPU processing or (very slowly) copy it back to the CPU

[04:22:13.0000] <Philip`>
You can use it to render onto an off-screen buffer, and then use that as input for further GPU processing or (very slowly) copy it back to the CPU

[04:22:55.0000] <Philip`>
but I think GLES2 (and WebGL) is pretty limited in buffer formats etc, so it's likely to be awkward to fit non-graphical problems into it

[04:23:00.0000] <Philip`>
but I think GLES2 (and WebGL) is pretty limited in buffer formats etc, so it's likely to be awkward to fit non-graphical problems into it

[04:24:00.0000] <Philip`>
(http://www.khronos.org/webcl/ is more designed for GPU computing)

[04:24:06.0000] <Philip`>
(http://www.khronos.org/webcl/ is more designed for GPU computing)

[04:25:00.0000] <zcorpan>
MikeSmith: why?

[04:25:12.0000] <zcorpan>
MikeSmith: why?

[04:25:26.0000] <Philip`>
(http://webcl.nokiaresearch.com/tutorials/tutorial4.html has an example)

[04:26:00.0000] <Philip`>
(http://webcl.nokiaresearch.com/tutorials/tutorial4.html has an example)

[04:26:01.0000] <MikeSmith>
zcorpan: because the HTML spec says it's not allowed

[04:26:14.0000] <MikeSmith>
zcorpan: because the HTML spec says it's not allowed

[04:26:45.0000] <zcorpan>
MikeSmith: it's allowed in foreign lands

[04:26:53.0000] <MikeSmith>
yeah I know that

[04:27:00.0000] <zcorpan>
MikeSmith: it's allowed in foreign lands

[04:27:01.0000] <MikeSmith>
yeah I know that

[04:27:02.0000] <MikeSmith>
but the polyglot spec should explicitly say that it's not allowed anywhere else

[04:27:17.0000] <MikeSmith>
but the polyglot spec should explicitly say that it's not allowed anywhere else

[04:27:29.0000] <zcorpan>
oh you mean like in <script>?

[04:28:00.0000] <zcorpan>
oh you mean like in <script>?

[04:28:01.0000] <jacobolus>
Philip`: well, I want to deal w/ graphical problems

[04:28:21.0000] <jacobolus>
Philip`: well, I want to deal w/ graphical problems

[04:28:49.0000] <jacobolus>
e.g. how much of this can be applied to webgl I wonder http://http.developer.nvidia.com/GPUGems2/gpugems2_chapter24.html

[04:29:00.0000] <jacobolus>
e.g. how much of this can be applied to webgl I wonder http://http.developer.nvidia.com/GPUGems2/gpugems2_chapter24.html

[04:30:00.0000] <zcorpan>
MikeSmith: yeah it should, although <script> and <style> might be special exceptions

[04:30:08.0000] <zcorpan>
MikeSmith: yeah it should, although <script> and <style> might be special exceptions

[04:31:00.0000] <zcorpan>
although it currently says to always use external scripts and styles, so that might not be needed then

[04:31:15.0000] <zcorpan>
although it currently says to always use external scripts and styles, so that might not be needed then

[04:31:27.0000] <Philip`>
jacobolus: GLES2 (and WebGL) doesn't support 3D textures (nor 1D textures)

[04:31:39.0000] <jacobolus>
ah

[04:31:53.0000] <jacobolus>
Philip`: can it be coaxed into doing the same kind of math?

[04:32:00.0000] <Philip`>
jacobolus: GLES2 (and WebGL) doesn't support 3D textures (nor 1D textures)

[04:32:01.0000] <jacobolus>
ah

[04:32:02.0000] <jacobolus>
Philip`: can it be coaxed into doing the same kind of math?

[04:32:03.0000] <jacobolus>
or does that require going ⇔ the CPU

[04:32:24.0000] <jacobolus>
or does that require going ⇔ the CPU

[04:32:38.0000] <zcorpan>
hmm, it's confused. "Polyglot markup includes script and style commands by linking to external files rather than including them in-line." and then "Polyglot markup uses external scripts if that document's script or style sheet uses < or & or ]]> or --."

[04:33:00.0000] <zcorpan>
hmm, it's confused. "Polyglot markup includes script and style commands by linking to external files rather than including them in-line." and then "Polyglot markup uses external scripts if that document's script or style sheet uses < or & or ]]> or --."

[04:33:32.0000] <MikeSmith>
hmm

[04:33:40.0000] <zcorpan>
(and the next paragraph is copied from the old xhtml 1.0 appendix c which totally misses the point)

[04:34:00.0000] <MikeSmith>
hmm

[04:34:01.0000] <zcorpan>
(and the next paragraph is copied from the old xhtml 1.0 appendix c which totally misses the point)

[04:35:42.0000] <Philip`>
jacobolus: I guess you might have to do it by e.g. encoding the NxNxN 3D texture as a (N*N)xN 2D texture, and writing a shader to manually sample the relevant points in the texture and to do the trilinear filtering

[04:36:00.0000] <Philip`>
jacobolus: I guess you might have to do it by e.g. encoding the NxNxN 3D texture as a (N*N)xN 2D texture, and writing a shader to manually sample the relevant points in the texture and to do the trilinear filtering

[04:36:01.0000] <jacobolus>
ah, hm

[04:36:02.0000] <jacobolus>
I'll have to actually read the spec sometime

[04:36:10.0000] <jacobolus>
ah, hm

[04:36:19.0000] <jacobolus>
I'll have to actually read the spec sometime

[04:36:35.0000] <jacobolus>
anyway, thanks for the advice, generally

[04:37:00.0000] <jacobolus>
anyway, thanks for the advice, generally

[04:37:01.0000] <Philip`>
(which I expect would be significantly slower than using the dedicated texture sampling hardware)

[04:37:02.0000] <Philip`>
(and maybe it'd be cheaper just to do the maths in the shader, instead of using a lookup texture)

[04:37:20.0000] <Philip`>
(and maybe it'd be cheaper just to do the maths in the shader, instead of using a lookup texture)

[04:37:55.0000] <jacobolus>
not for teh kind of math I want to do :)

[04:38:00.0000] <jacobolus>
not for teh kind of math I want to do :)

[04:40:00.0000] <jacobolus>
huh. do any implementations of apis like canvas, svg, etc. use OpenVG?

[04:40:01.0000] <jacobolus>
looks kind of interesting

[04:40:11.0000] <jacobolus>
huh. do any implementations of apis like canvas, svg, etc. use OpenVG?

[04:40:18.0000] <jacobolus>
looks kind of interesting

[04:42:48.0000] <Philip`>
I know even less about that than about anything else I've been pretending to know about, but I've never heard of anybody actually using it, so I assume it's just part of the weird mobile world

[04:43:00.0000] <Philip`>
I know even less about that than about anything else I've been pretending to know about, but I've never heard of anybody actually using it, so I assume it's just part of the weird mobile world

[04:57:00.0000] <zcorpan>
matjas: in addition to stuff that v.nu checks with java code, there's stuff that v.nu checks with relax ng that cannot be expressed in a DTD, like making checked="" invalid on <input> when type="text"

[04:57:01.0000] <annevk>
MikeSmith: found anything?

[04:57:02.0000] <MikeSmith>
no

[04:57:06.0000] <zcorpan>
matjas: in addition to stuff that v.nu checks with java code, there's stuff that v.nu checks with relax ng that cannot be expressed in a DTD, like making checked="" invalid on <input> when type="text"

[04:57:18.0000] <annevk>
MikeSmith: found anything?

[04:57:24.0000] <MikeSmith>
no

[04:58:00.0000] <MikeSmith>
matjas: yeah there is lots of stuff like what zcorpan mentions

[04:58:01.0000] <matjas>
zcorpan: thanks, got it. a DTD roughly lists the allowed elements/attributes and where in the document they are allowed, but that’s it

[04:58:05.0000] <MikeSmith>
matjas: yeah there is lots of stuff like what zcorpan mentions

[04:58:12.0000] <matjas>
zcorpan: thanks, got it. a DTD roughly lists the allowed elements/attributes and where in the document they are allowed, but that’s it

[04:58:28.0000] <MikeSmith>
DTDs have some simple dataypes too

[04:58:38.0000] <MikeSmith>
for constraining the values of attributes

[04:58:40.0000] <zcorpan>
short version is that DTDs suck and you shouldn't care about them

[04:58:45.0000] <MikeSmith>
yup

[04:58:58.0000] <matjas>
:)

[04:59:00.0000] <MikeSmith>
DTDs have some simple dataypes too

[04:59:01.0000] <MikeSmith>
for constraining the values of attributes

[04:59:02.0000] <zcorpan>
short version is that DTDs suck and you shouldn't care about them

[04:59:02.0000] <annevk>
schema languages in general

[04:59:03.0000] <MikeSmith>
yup

[04:59:04.0000] <matjas>
:)

[04:59:05.0000] <annevk>
schema languages in general

[04:59:26.0000] <zcorpan>
schema languages have limitations but don't have to suck :-)

[05:00:00.0000] <zcorpan>
schema languages have limitations but don't have to suck :-)

[05:00:01.0000] <annevk>
dunno, because they're never specific I don't think they'll ever be ideal for a particular problem

[05:00:06.0000] <annevk>
dunno, because they're never specific I don't think they'll ever be ideal for a particular problem

[05:04:56.0000] <MikeSmith>
damn

[05:05:00.0000] <MikeSmith>
damn

[05:05:01.0000] <MikeSmith>
another big earthquake

[05:05:03.0000] <MikeSmith>
another big earthquake

[05:05:27.0000] <MikeSmith>
fucking hell

[05:06:00.0000] <MikeSmith>
fucking hell

[05:06:01.0000] <MikeSmith>
I hope that one wasn't up north

[05:06:02.0000] <MikeSmith>
because if it was it must have been huge

[05:06:08.0000] <MikeSmith>
I hope that one wasn't up north

[05:06:15.0000] <MikeSmith>
because if it was it must have been huge

[05:09:00.0000] <karlcow>
http://www.jma.go.jp/en/quake/00000000089.html

[05:09:01.0000] <karlcow>
chiba?

[05:09:15.0000] <karlcow>
http://www.jma.go.jp/en/quake/00000000089.html

[05:09:18.0000] <karlcow>
chiba?

[05:09:30.0000] <annevk>
http://blog.whatwg.org/weekly-canvas-path

[05:09:45.0000] <MikeSmith>
karlcow: yah

[05:10:00.0000] <annevk>
http://blog.whatwg.org/weekly-canvas-path

[05:10:01.0000] <MikeSmith>
karlcow: yah

[05:10:46.0000] <zcorpan>
annevk: btw please regen html5-diff

[05:11:00.0000] <zcorpan>
annevk: btw please regen html5-diff

[05:11:51.0000] <annevk>
done

[05:12:00.0000] <annevk>
done

[05:12:01.0000] <annevk>
shouldn't http+aes be still mentioned for WHATWG?

[05:12:02.0000] <zcorpan>
it is

[05:12:05.0000] <annevk>
shouldn't http+aes be still mentioned for WHATWG?

[05:12:14.0000] <zcorpan>
it is

[05:12:27.0000] <annevk>
oh okay

[05:12:45.0000] <zcorpan>
thanks

[05:12:49.0000] <zcorpan>
MikeSmith: ^

[05:13:00.0000] <annevk>
oh okay

[05:13:01.0000] <zcorpan>
thanks

[05:13:02.0000] <zcorpan>
MikeSmith: ^

[05:29:00.0000] <scott_gonzalez>
MikeSmith: If the install is simple that'll help, but total size is probably going to be a factor as well.

[05:29:14.0000] <scott_gonzalez>
MikeSmith: If the install is simple that'll help, but total size is probably going to be a factor as well.

[05:29:39.0000] <scott_gonzalez>
If we need to triple the size of our repo just to validate HTML files, it doesn't seem worth it.

[05:30:00.0000] <scott_gonzalez>
If we need to triple the size of our repo just to validate HTML files, it doesn't seem worth it.

[05:30:01.0000] <scott_gonzalez>
I haven't actually looked at the size of everything needed for validator.nu, but it didn't sound small.

[05:30:08.0000] <scott_gonzalez>
I haven't actually looked at the size of everything needed for validator.nu, but it didn't sound small.

[05:55:00.0000] <zcorpan>
last quirk specced (while having lunch) http://simon.html5.org/specs/quirks-mode#the-table-cell-nowrap-minimum-width-calculation-quirk

[05:55:23.0000] <zcorpan>
last quirk specced (while having lunch) http://simon.html5.org/specs/quirks-mode#the-table-cell-nowrap-minimum-width-calculation-quirk

[06:11:00.0000] <annevk>
oh lunch

[06:11:19.0000] <annevk>
oh lunch

[06:13:00.0000] <annevk>
zcorpan: can the text-decoration quirk be described using http://dev.w3.org/csswg/css3-text/#text-decoration-color ?

[06:13:11.0000] <annevk>
zcorpan: can the text-decoration quirk be described using http://dev.w3.org/csswg/css3-text/#text-decoration-color ?

[06:15:33.0000] <zcorpan>
dunno

[06:15:40.0000] <zcorpan>
is that implemented?

[06:16:00.0000] <zcorpan>
dunno

[06:16:01.0000] <zcorpan>
is that implemented?

[06:16:38.0000] <annevk>
prefixed in Gecko purportedly

[06:17:00.0000] <annevk>
prefixed in Gecko purportedly

[06:17:01.0000] <zcorpan>
seems that property doesn't do what the quirk does

[06:17:21.0000] <zcorpan>
seems that property doesn't do what the quirk does

[06:53:00.0000] <annevk>
zcorpan: gonna tweet about being done?

[06:53:04.0000] <annevk>
zcorpan: gonna tweet about being done?

[06:53:32.0000] <zcorpan>
i'm far from done :-)

[06:53:41.0000] <annevk>
80% done

[06:54:00.0000] <zcorpan>
i'm far from done :-)

[06:54:01.0000] <annevk>
80% done

[06:54:30.0000] <zcorpan>
tweeted

[06:55:00.0000] <zcorpan>
tweeted

[06:55:01.0000] <annevk>
ta

[06:55:16.0000] <annevk>
ta

[07:27:00.0000] <StoneCypher>
is there a field intended for universal per-language text replacement (i18n string tables)

[07:27:00.0000] <StoneCypher>
is there a field intended for universal per-language text replacement (i18n string tables)

[07:27:01.0000] <StoneCypher>
or should i be making a data-foo attribute

[07:27:08.0000] <StoneCypher>
or should i be making a data-foo attribute

[07:33:27.0000] <zcorpan>
i guess now is a good time to get quirks mode in a VCS

[07:34:00.0000] <zcorpan>
i guess now is a good time to get quirks mode in a VCS

[07:36:53.0000] <zcorpan>
MikeSmith: did you update the TR?

[07:37:00.0000] <zcorpan>
MikeSmith: did you update the TR?

[07:37:00.0000] <MikeSmith>
not yet

[07:37:01.0000] <MikeSmith>
not yet

[07:37:02.0000] <zcorpan>
k, just checking

[07:37:03.0000] <zcorpan>
i'm not in a hurry :-)

[07:37:07.0000] <zcorpan>
k, just checking

[07:37:20.0000] <zcorpan>
i'm not in a hurry :-)

[07:37:49.0000] <zcorpan>
/me -> offline

[07:38:00.0000] <zcorpan>
/me -> offline

[08:20:00.0000] <hsivonen>
what MIME type does IE9 want to see for AAC audio files?

[08:20:05.0000] <hsivonen>
what MIME type does IE9 want to see for AAC audio files?

[08:20:48.0000] <hsivonen>
audio/mp4?

[08:21:00.0000] <hsivonen>
audio/mp4?

[08:36:50.0000] <Ms2ger>
"XForms Users Community Group"

[08:37:00.0000] <Ms2ger>
"XForms Users Community Group"

[08:37:01.0000] <hober>
shouldn't that be "User's" :)

[08:37:02.0000] <hober>
oh, that guy

[08:37:12.0000] <hober>
shouldn't that be "User's" :)

[08:37:17.0000] <hober>
oh, that guy

[08:38:00.0000] <jgraham>
aka the "John Boyer Community Group"

[08:38:01.0000] <Ms2ger>
"John Boyer, Trucker, Killed 3 Prostitutes Across South"

[08:38:01.0000] <jgraham>
aka the "John Boyer Community Group"

[08:38:25.0000] <Ms2ger>
"John Boyer, Trucker, Killed 3 Prostitutes Across South"

[08:38:33.0000] <Ms2ger>
/me assumes another John Boyer

[08:39:00.0000] <Ms2ger>
/me assumes another John Boyer

[08:40:00.0000] <jgraham>
Yeah, this is John M. Boyer, the Sci-Fi one

[08:40:01.0000] <jgraham>
https://www.ibm.com/developerworks/mydeveloperworks/blogs/JohnBoyer/?lang=en

[08:40:11.0000] <jgraham>
Yeah, this is John M. Boyer, the Sci-Fi one

[08:40:14.0000] <jgraham>
https://www.ibm.com/developerworks/mydeveloperworks/blogs/JohnBoyer/?lang=en

[08:42:30.0000] <annevk>
did not take long: http://www.w3.org/community/xformsusers/

[08:42:49.0000] <Ms2ger>
"It is really easy to use XPath..."

[08:42:52.0000] <Ms2ger>
/me stops reading

[08:43:00.0000] <annevk>
did not take long: http://www.w3.org/community/xformsusers/

[08:43:01.0000] <Ms2ger>
"It is really easy to use XPath..."

[08:43:02.0000] <Ms2ger>
/me stops reading

[08:45:50.0000] <Philip`>
"View all 1 Participants" - someone else needs to join the group to save the world from terrible grammar

[08:46:00.0000] <Philip`>
"View all 1 Participants" - someone else needs to join the group to save the world from terrible grammar

[08:47:30.0000] <jgraham>
Because "View all 2 Participants" will just sound like irony?

[08:48:00.0000] <jgraham>
Because "View all 2 Participants" will just sound like irony?

[08:48:51.0000] <smaug____>
Ms2ger: XPath isn't bad

[08:49:00.0000] <smaug____>
Ms2ger: XPath isn't bad

[08:49:01.0000] <Ms2ger>
It's better than XForms, I guess :)

[08:49:02.0000] <smaug____>
yes :)

[08:49:11.0000] <Ms2ger>
It's better than XForms, I guess :)

[08:49:18.0000] <smaug____>
yes :)

[08:56:00.0000] <kennyluck>
"View both Participants" is better maybe? :p

[08:56:18.0000] <kennyluck>
"View both Participants" is better maybe? :p

[09:15:00.0000] <smaug____>
annevk: where does DOM4 say when node is removed from the old parent when inserting to be a child of a new parent

[09:15:01.0000] <Ms2ger>
Btw, MikeSmith, weird Glenn wanted a bugzilla component for http://dvcs.w3.org/hg/csswg/raw-file/tip/cssom-values/Overview.html

[09:15:22.0000] <smaug____>
annevk: where does DOM4 say when node is removed from the old parent when inserting to be a child of a new parent

[09:15:24.0000] <Ms2ger>
Btw, MikeSmith, weird Glenn wanted a bugzilla component for http://dvcs.w3.org/hg/csswg/raw-file/tip/cssom-values/Overview.html

[09:15:40.0000] <Ms2ger>
smaug____, it might not say that :)

[09:15:52.0000] <MikeSmith>
Ms2ger: thanks

[09:16:00.0000] <Ms2ger>
smaug____, it might not say that :)

[09:16:01.0000] <MikeSmith>
Ms2ger: thanks

[09:16:02.0000] <annevk>
smaug____: as part of adopting it?

[09:16:21.0000] <annevk>
smaug____: as part of adopting it?

[09:16:40.0000] <smaug____>
huh

[09:16:43.0000] <Ms2ger>
No, just removing it from childNodes

[09:17:00.0000] <smaug____>
huh

[09:17:00.0000] <Ms2ger>
Ah, yes

[09:17:01.0000] <Ms2ger>
No, just removing it from childNodes

[09:17:02.0000] <Ms2ger>
Ah, yes

[09:17:03.0000] <smaug____>
but ok

[09:17:04.0000] <Ms2ger>
That's weird, but sure

[09:17:07.0000] <smaug____>
but ok

[09:17:19.0000] <Ms2ger>
That's weird, but sure

[09:17:33.0000] <annevk>
how is it weird?

[09:17:53.0000] <annevk>
pre-insert step 6

[09:18:00.0000] <annevk>
how is it weird?

[09:18:01.0000] <annevk>
pre-insert step 6

[09:18:29.0000] <smaug____>
just hard to read

[09:18:42.0000] <Ms2ger>
I'd have expected the adopt algorithm to be a no-op if the node already had the right node document

[09:19:00.0000] <smaug____>
just hard to read

[09:19:01.0000] <Ms2ger>
I'd have expected the adopt algorithm to be a no-op if the node already had the right node document

[09:19:02.0000] <smaug____>
looks like nodes aren't ever removed from documentfragment

[09:19:07.0000] <smaug____>
looks like nodes aren't ever removed from documentfragment

[09:19:40.0000] <smaug____>
when inserting a documentfragment

[09:19:44.0000] <annevk>
ah yeah, DocumentFragment has issues :(

[09:19:54.0000] <annevk>
patches appreciated

[09:20:00.0000] <smaug____>
when inserting a documentfragment

[09:20:01.0000] <annevk>
ah yeah, DocumentFragment has issues :(

[09:20:02.0000] <annevk>
patches appreciated

[09:21:00.0000] <smaug____>
and replace's mutation observer handling is probably wrong

[09:21:00.0000] <smaug____>
and replace's mutation observer handling is probably wrong

[09:21:41.0000] <annevk>
is that even specced yet?

[09:22:00.0000] <annevk>
is that even specced yet?

[09:22:01.0000] <smaug____>
replace removes and inserts

[09:22:02.0000] <smaug____>
so it will create two mutationrecords

[09:22:06.0000] <smaug____>
replace removes and inserts

[09:22:17.0000] <smaug____>
so it will create two mutationrecords

[09:22:33.0000] <annevk>
yeah that's wrong

[09:22:39.0000] <annevk>
replace all is even more wrong

[09:23:00.0000] <annevk>
yeah that's wrong

[09:23:01.0000] <annevk>
replace all is even more wrong

[09:23:26.0000] <annevk>
I guess I should look into fixing that, but it requires a lot of staring and a clear head

[09:24:00.0000] <annevk>
I guess I should look into fixing that, but it requires a lot of staring and a clear head

[09:32:32.0000] <smaug____>
annevk: I'll file some bug

[09:32:33.0000] <smaug____>
s

[09:33:00.0000] <smaug____>
annevk: I'll file some bug

[09:33:01.0000] <smaug____>
s

[09:35:34.0000] <annevk>
write some patches pretty please :)

[09:36:00.0000] <annevk>
write some patches pretty please :)

[09:36:01.0000] <annevk>
also, please go through https://www.w3.org/Bugs/Public/buglist.cgi?product=WebAppsWG&component=DOM&resolution=--- first

[09:36:02.0000] <annevk>
e.g. DocumentFragment is known

[09:36:04.0000] <annevk>
also, please go through https://www.w3.org/Bugs/Public/buglist.cgi?product=WebAppsWG&component=DOM&resolution=--- first

[09:36:08.0000] <annevk>
e.g. DocumentFragment is known

[09:37:55.0000] <Ms2ger>
MikeSmith, oh, and we should probably have a bugzilla component for random stuff, like https://www.w3.org/Bugs/Public/show_bug.cgi?id=14600

[09:38:00.0000] <Ms2ger>
MikeSmith, oh, and we should probably have a bugzilla component for random stuff, like https://www.w3.org/Bugs/Public/show_bug.cgi?id=14600

[09:42:00.0000] <dglazkov>
good morning, Whatwg!

[09:42:01.0000] <annevk>
morning hat

[09:42:02.0000] <annevk>
euh dglazkov

[09:42:16.0000] <dglazkov>
good morning, Whatwg!

[09:42:23.0000] <annevk>
morning hat

[09:42:25.0000] <annevk>
euh dglazkov

[09:42:40.0000] <dglazkov>
:)

[09:43:00.0000] <dglazkov>
:)

[10:00:27.0000] <aklein>
Hixie: regarding form controls outside the document, it seems that this causes problems with the definition of the "elements" collection: https://www.w3.org/Bugs/Public/show_bug.cgi?id=15704

[10:01:00.0000] <aklein>
Hixie: regarding form controls outside the document, it seems that this causes problems with the definition of the "elements" collection: https://www.w3.org/Bugs/Public/show_bug.cgi?id=15704

[10:01:34.0000] <Hixie>
hm yeah

[10:02:00.0000] <Hixie>
hm yeah

[11:19:00.0000] <StoneCypher>
/me tries again

[11:19:01.0000] <StoneCypher>
is there a field intended for universal per-language text replacement (i18n string tables), or should i be making a data-foo attribute

[11:19:20.0000] <StoneCypher>
/me tries again

[11:19:25.0000] <StoneCypher>
is there a field intended for universal per-language text replacement (i18n string tables), or should i be making a data-foo attribute

[11:22:00.0000] <Philip`>
I think the spec expects that you will do the text replacement on the server, and then you can use whatever custom design you want since it doesn't need to be conforming HTML

[11:22:12.0000] <Philip`>
I think the spec expects that you will do the text replacement on the server, and then you can use whatever custom design you want since it doesn't need to be conforming HTML

[11:22:29.0000] <Philip`>
so it doesn't provide any specific support for that

[11:23:00.0000] <Philip`>
so it doesn't provide any specific support for that

[11:27:00.0000] <StoneCypher>
kay.

[11:27:20.0000] <StoneCypher>
kay.

[11:27:29.0000] <StoneCypher>
would you think data-i18n a logical field name?

[11:28:00.0000] <StoneCypher>
would you think data-i18n a logical field name?

[11:30:51.0000] <Philip`>
Sounds a bit non-specific - something like data-i18n-stringid (or whatever the field is meant to actually be) might be less confusing, particularly if you add other i18n-related fields later

[11:31:00.0000] <Philip`>
Sounds a bit non-specific - something like data-i18n-stringid (or whatever the field is meant to actually be) might be less confusing, particularly if you add other i18n-related fields later

[11:31:01.0000] <StoneCypher>
good point

[11:31:02.0000] <StoneCypher>
the industry nominal would be data-i18n-key

[11:31:03.0000] <StoneCypher>
i think i'll use that, other points notwithstanding

[11:31:08.0000] <StoneCypher>
good point

[11:31:15.0000] <StoneCypher>
the industry nominal would be data-i18n-key

[11:31:23.0000] <StoneCypher>
i think i'll use that, other points notwithstanding

[11:59:32.0000] <scott_gonzalez>
StoneCypher: How do you plan on using that?

[12:00:00.0000] <scott_gonzalez>
StoneCypher: How do you plan on using that?

[12:10:48.0000] <kennyluck>
I love you and my wife!

[12:11:00.0000] <kennyluck>
I love you and my wife!

[12:11:01.0000] <Ms2ger>
Love you too, kennyluck

[12:11:16.0000] <Ms2ger>
Love you too, kennyluck

[12:11:38.0000] <kennyluck>
lol

[12:12:00.0000] <kennyluck>
lol

[12:23:28.0000] <othermaciej_>
Hixie: looks like https://www.w3.org/Bugs/Public/show_bug.cgi?id=11124 is resolved now? (from skimming the w3c copy of the spec)

[12:23:33.0000] <othermaciej_>
Hixie: time to close the bug?

[12:24:00.0000] <othermaciej_>
Hixie: looks like https://www.w3.org/Bugs/Public/show_bug.cgi?id=11124 is resolved now? (from skimming the w3c copy of the spec)

[12:24:01.0000] <othermaciej_>
Hixie: time to close the bug?

[12:44:00.0000] <StoneCypher>
scott_gonzalez: text content overwriting by key name

[12:44:17.0000] <StoneCypher>
scott_gonzalez: text content overwriting by key name

[12:44:37.0000] <StoneCypher>
scott_gonzalez: roughly what moustache does, without all the functional silliness

[12:44:54.0000] <scott_gonzalez>
But you're not using templates for it?

[12:45:00.0000] <StoneCypher>
scott_gonzalez: roughly what moustache does, without all the functional silliness

[12:45:01.0000] <scott_gonzalez>
But you're not using templates for it?

[12:45:02.0000] <StoneCypher>
they aren't needed for what i'm up to

[12:45:11.0000] <StoneCypher>
they aren't needed for what i'm up to

[12:45:29.0000] <StoneCypher>
if someone wants templates, more power to them

[12:45:38.0000] <scott_gonzalez>
You're doing dynamic translations of specific elements?

[12:45:56.0000] <StoneCypher>
it's just string table substitution.

[12:46:00.0000] <StoneCypher>
if someone wants templates, more power to them

[12:46:01.0000] <scott_gonzalez>
You're doing dynamic translations of specific elements?

[12:46:02.0000] <StoneCypher>
it's just string table substitution.

[12:46:03.0000] <scott_gonzalez>
But it's after page load?

[12:46:04.0000] <StoneCypher>
yes

[12:46:07.0000] <scott_gonzalez>
But it's after page load?

[12:46:11.0000] <StoneCypher>
yes

[12:46:58.0000] <scott_gonzalez>
And you're storing the lookup key in the data attribute, right? Not a specific translation.

[12:47:00.0000] <scott_gonzalez>
And you're storing the lookup key in the data attribute, right? Not a specific translation.

[12:47:01.0000] <StoneCypher>
correct

[12:47:07.0000] <StoneCypher>
correct

[13:00:32.0000] <hober>
Hixie: in http://www.whatwg.org/specs/web-apps/current-work/multipage/elements.html#phrasing-content shouldn't <object> be like <a>, <ins>, and others? i.e. shouldn't it have a "(if it contains only phrasing content)" parenthetical?

[13:01:00.0000] <hober>
Hixie: in http://www.whatwg.org/specs/web-apps/current-work/multipage/elements.html#phrasing-content shouldn't <object> be like <a>, <ins>, and others? i.e. shouldn't it have a "(if it contains only phrasing content)" parenthetical?

[13:29:38.0000] <annevk>
hober: yes

[13:29:47.0000] <annevk>
hober: you should file a bug I guess

[13:30:00.0000] <annevk>
hober: yes

[13:30:01.0000] <annevk>
hober: you should file a bug I guess

[13:32:30.0000] <Ms2ger>
http://lists.w3.org/Archives/Public/spec-prod/2012JanMar/0023.html \o/

[13:32:38.0000] <Hixie>
hober: possibly, can't look right now

[13:32:51.0000] <Hixie>
othermaciej: if that's the julian thing, sure

[13:33:00.0000] <Ms2ger>
http://lists.w3.org/Archives/Public/spec-prod/2012JanMar/0023.html \o/

[13:33:01.0000] <Hixie>
hober: possibly, can't look right now

[13:33:02.0000] <Hixie>
othermaciej: if that's the julian thing, sure

[13:38:46.0000] <AryehGregor>
/me cannot seem to get scroll() to work right in his reftest viewer thing -- something to do with calling it inside an iframe?

[13:39:00.0000] <AryehGregor>
/me cannot seem to get scroll() to work right in his reftest viewer thing -- something to do with calling it inside an iframe?

[13:43:40.0000] <AryehGregor>
/me wonders how the CSS 2.1 test suite tests scrolling

[13:43:49.0000] <AryehGregor>
(manually?)

[13:43:55.0000] <Ms2ger>
It does?

[13:44:00.0000] <AryehGregor>
/me wonders how the CSS 2.1 test suite tests scrolling

[13:44:01.0000] <AryehGregor>
(manually?)

[13:44:02.0000] <Ms2ger>
It does?

[13:44:02.0000] <AryehGregor>
Or maybe it just doesn't?

[13:44:03.0000] <AryehGregor>
Or maybe it just doesn't?

[13:44:04.0000] <annevk>
prolly doesn't

[13:44:05.0000] <annevk>
I know Hixie has a few manual tests related to scrolling

[13:44:06.0000] <Ms2ger>
It tests that padding-left: 3.2ex works

[13:44:12.0000] <annevk>
prolly doesn't

[13:44:23.0000] <annevk>
I know Hixie has a few manual tests related to scrolling

[13:44:26.0000] <Ms2ger>
It tests that padding-left: 3.2ex works

[13:44:30.0000] <AryehGregor>
http://test.csswg.org/suites/css2.1/20110323/html4/background-attachment-005.htm

[13:44:32.0000] <Ms2ger>
But little more involved

[13:45:00.0000] <AryehGregor>
http://test.csswg.org/suites/css2.1/20110323/html4/background-attachment-005.htm

[13:45:01.0000] <Ms2ger>
But little more involved

[13:45:02.0000] <annevk>
AryehGregor: invoking scroll() should work... are you invoking it on the right window? :)

[13:45:17.0000] <annevk>
AryehGregor: invoking scroll() should work... are you invoking it on the right window? :)

[13:45:41.0000] <AryehGregor>
annevk, I'm doing scroll() in a <script>.  But when I do it from an iframe viewer thing, it doesn't work in all browsers.

[13:46:00.0000] <AryehGregor>
annevk, I'm doing scroll() in a <script>.  But when I do it from an iframe viewer thing, it doesn't work in all browsers.

[13:46:01.0000] <gsnedders>
AryehGregor: Manually.

[13:46:02.0000] <gsnedders>
AryehGregor: It tests everything manually, pretty much :P

[13:46:03.0000] <Ms2ger>
Heh: http://jigsaw.w3.org/css-validator/validator?uri=http%3A%2F%2Fwww.w3.org%2FStyleSheets%2FTR%2FW3C-ED&profile=css21&usermedium=all&warning=1&vextwarning=&lang=en#warnings

[13:46:04.0000] <AryehGregor>
annevk, look at this: http://aryeh.name/tmp/css-test/contributors/aryehgregor/incoming/ref-2d/fixed-background-1b.html

[13:46:10.0000] <gsnedders>
AryehGregor: Manually.

[13:46:19.0000] <gsnedders>
AryehGregor: It tests everything manually, pretty much :P

[13:46:21.0000] <Ms2ger>
Heh: http://jigsaw.w3.org/css-validator/validator?uri=http%3A%2F%2Fwww.w3.org%2FStyleSheets%2FTR%2FW3C-ED&profile=css21&usermedium=all&warning=1&vextwarning=&lang=en#warnings

[13:46:23.0000] <AryehGregor>
annevk, look at this: http://aryeh.name/tmp/css-test/contributors/aryehgregor/incoming/ref-2d/fixed-background-1b.html

[13:46:30.0000] <AryehGregor>
And then at this: http://aryeh.name/tmp/css-test/contributors/aryehgregor/incoming/viewer.html

[13:46:36.0000] <AryehGregor>
But quickly, before I change them.  :)

[13:46:45.0000] <AryehGregor>
The second just loads the first in an iframe.

[13:46:57.0000] <AryehGregor>
But in the iframe, scroll() doesn't work.

[13:47:00.0000] <AryehGregor>
And then at this: http://aryeh.name/tmp/css-test/contributors/aryehgregor/incoming/viewer.html

[13:47:01.0000] <AryehGregor>
But quickly, before I change them.  :)

[13:47:02.0000] <AryehGregor>
The second just loads the first in an iframe.

[13:47:02.0000] <AryehGregor>
In some browsers.

[13:47:03.0000] <AryehGregor>
But in the iframe, scroll() doesn't work.

[13:47:04.0000] <AryehGregor>
In some browsers.

[13:47:05.0000] <AryehGregor>
It does in Chrome.

[13:47:06.0000] <AryehGregor>
But not IE or Firefox.

[13:47:14.0000] <AryehGregor>
It does in Chrome.

[13:47:24.0000] <AryehGregor>
But not IE or Firefox.

[13:47:42.0000] <AryehGregor>
Also works in Opera.

[13:48:00.0000] <AryehGregor>
Also works in Opera.

[13:48:01.0000] <annevk>
is it supposed to go up and down?

[13:48:02.0000] <annevk>
works in my Firefox

[13:48:03.0000] <AryehGregor>
It's flipping back and forth between two things.

[13:48:04.0000] <AryehGregor>
Just a sec.

[13:48:04.0000] <annevk>
works in my Firefox

[13:48:15.0000] <AryehGregor>
It's flipping back and forth between two things.

[13:48:22.0000] <AryehGregor>
Just a sec.

[13:48:33.0000] <annevk>
also works in IE

[13:48:55.0000] <AryehGregor>
Try now.

[13:49:00.0000] <annevk>
also works in IE

[13:49:01.0000] <AryehGregor>
Try now.

[13:49:02.0000] <AryehGregor>
The iframe is scrolled in viewer.html?

[13:49:03.0000] <AryehGregor>
What versions are you using?

[13:49:03.0000] <AryehGregor>
The iframe is scrolled in viewer.html?

[13:49:06.0000] <AryehGregor>
What versions are you using?

[13:49:28.0000] <AryehGregor>
In Firefox I see no scrollbars at all in the iframe.  In IE I see scrollbars, but it's not scrolled.

[13:50:00.0000] <AryehGregor>
In Firefox I see no scrollbars at all in the iframe.  In IE I see scrollbars, but it's not scrolled.

[13:51:00.0000] <annevk>
hmm now it's not

[13:51:20.0000] <annevk>
hmm now it's not

[13:51:41.0000] <annevk>
weird

[13:52:00.0000] <annevk>
weird

[13:52:01.0000] <AryehGregor>
Oh, wait.

[13:52:20.0000] <AryehGregor>
Oh, wait.

[13:52:29.0000] <AryehGregor>
When the iframe is first loaded, it's display: none, I think.

[13:52:31.0000] <AryehGregor>
Maybe that's it?

[13:52:33.0000] <AryehGregor>
/me tests

[13:52:58.0000] <AryehGregor>
That seems to be it.

[13:53:00.0000] <AryehGregor>
When the iframe is first loaded, it's display: none, I think.

[13:53:01.0000] <AryehGregor>
Maybe that's it?

[13:53:02.0000] <AryehGregor>
/me tests

[13:53:03.0000] <AryehGregor>
That seems to be it.

[13:53:04.0000] <AryehGregor>
<!DOCTYPE html>

[13:53:05.0000] <AryehGregor>
<iframe style=display:none src=http://aryeh.name/tmp/css-test/contributors/aryehgregor/incoming/ref-2d/fixed-background-1b.html onload="this.style.display='block'"></iframe>

[13:53:06.0000] <AryehGregor>
Seems like a bug in Firefox/IE.

[13:53:07.0000] <TabAtkins_>
Sigh.  I love how a11y people always write completely unreadable emails, using color and indentation (which doesn't carry over well when crossing formats) to indicate different speakers or quotations.

[13:53:12.0000] <AryehGregor>
<!DOCTYPE html>

[13:53:12.0000] <AryehGregor>
<iframe style=display:none src=http://aryeh.name/tmp/css-test/contributors/aryehgregor/incoming/ref-2d/fixed-background-1b.html onload="this.style.display='block'"></iframe>

[13:53:16.0000] <AryehGregor>
Seems like a bug in Firefox/IE.

[13:53:17.0000] <TabAtkins_>
Sigh.  I love how a11y people always write completely unreadable emails, using color and indentation (which doesn't carry over well when crossing formats) to indicate different speakers or quotations.

[13:54:00.0000] <AryehGregor>
In a display: none iframe, is the viewport defined?

[13:54:11.0000] <AryehGregor>
In a display: none iframe, is the viewport defined?

[13:54:39.0000] <AryehGregor>
CSS 2.1 (of course) doesn't say that I see.

[13:54:48.0000] <TabAtkins_>
Iframes are out-of-scope.

[13:54:59.0000] <AryehGregor>
They're not out-of-scope of the web platform.  *Something* should say.

[13:55:00.0000] <AryehGregor>
CSS 2.1 (of course) doesn't say that I see.

[13:55:01.0000] <TabAtkins_>
Iframes are out-of-scope.

[13:55:02.0000] <AryehGregor>
They're not out-of-scope of the web platform.  *Something* should say.

[13:55:02.0000] <TabAtkins_>
But since no box is created in the inner document, I doubt there's a viewport.

[13:55:04.0000] <AryehGregor>
So what do all the CSSOM methods do that talk about viewports?

[13:55:16.0000] <AryehGregor>
So what do all the CSSOM methods do that talk about viewports?

[13:55:27.0000] <TabAtkins_>
I dunno.

[13:55:31.0000] <TabAtkins_>
Presumably undefined things.

[13:55:35.0000] <TabAtkins_>
Likely involving 0.

[13:55:44.0000] <TabAtkins_>
The CSSOM sucks.  File bugs?

[13:56:00.0000] <TabAtkins_>
I dunno.

[13:56:01.0000] <TabAtkins_>
Presumably undefined things.

[13:56:02.0000] <TabAtkins_>
Likely involving 0.

[13:56:03.0000] <TabAtkins_>
The CSSOM sucks.  File bugs?

[13:56:04.0000] <AryehGregor>
Sigh.

[13:56:08.0000] <AryehGregor>
Sigh.

[13:56:26.0000] <TabAtkins_>
This shit hasn't been touched in *years*.

[13:56:30.0000] <Ms2ger>
We've got 3 CSSOMs now, even

[13:56:44.0000] <AryehGregor>
/me works around it for now by not setting display: none until after load

[13:57:00.0000] <TabAtkins_>
This shit hasn't been touched in *years*.

[13:57:01.0000] <Ms2ger>
We've got 3 CSSOMs now, even

[13:57:02.0000] <AryehGregor>
/me works around it for now by not setting display: none until after load

[13:58:00.0000] <annevk>
AryehGregor: never really considered display:none iframes :/

[13:58:02.0000] <annevk>
AryehGregor: never really considered display:none iframes :/

[13:58:30.0000] <annevk>
AryehGregor: it makes some sense to me that scrolling would not work there

[13:58:56.0000] <AryehGregor>
It's probably more convenient for authors if it does, and more convenient for implementers if it doesn't.

[13:59:00.0000] <annevk>
AryehGregor: it makes some sense to me that scrolling would not work there

[13:59:01.0000] <AryehGregor>
It's probably more convenient for authors if it does, and more convenient for implementers if it doesn't.

[13:59:30.0000] <StoneCypher>
should contenteditable=false inside a contenteditable=true region work?

[13:59:47.0000] <StoneCypher>
/me can't decide if he's doing something braindead or if the browsers aren't behaving as one would like

[14:00:00.0000] <StoneCypher>
should contenteditable=false inside a contenteditable=true region work?

[14:00:01.0000] <StoneCypher>
/me can't decide if he's doing something braindead or if the browsers aren't behaving as one would like

[14:00:02.0000] <AryehGregor>
StoneCypher, yes.  Browsers are known to have major bugs in this area, though.

[14:00:03.0000] <AryehGregor>
Also, exactly what it should do is somewhat questionable.

[14:00:04.0000] <AryehGregor>
My spec says one thing, browsers do all sorts of things.

[14:00:05.0000] <AryehGregor>
StoneCypher, yes.  Browsers are known to have major bugs in this area, though.

[14:00:16.0000] <AryehGregor>
Also, exactly what it should do is somewhat questionable.

[14:00:22.0000] <AryehGregor>
My spec says one thing, browsers do all sorts of things.

[14:00:30.0000] <annevk>
AryehGregor: it would be consistent with display:none on overflow:scroll frames if it didn't

[14:00:54.0000] <StoneCypher>
is there a less hackish way to get small non-editable but removable pieces of text in a contenteditable region than to put little canvasses in and draw text on them?  (amusingly, <svg><text>foo</text></svg> remains editable in firefox)

[14:01:00.0000] <annevk>
AryehGregor: it would be consistent with display:none on overflow:scroll frames if it didn't

[14:01:01.0000] <StoneCypher>
is there a less hackish way to get small non-editable but removable pieces of text in a contenteditable region than to put little canvasses in and draw text on them?  (amusingly, <svg><text>foo</text></svg> remains editable in firefox)

[14:01:02.0000] <Ms2ger>
contenteditable=no?

[14:01:25.0000] <Ms2ger>
contenteditable=no?

[14:01:36.0000] <StoneCypher>
does what one wants in two of the seven places.

[14:01:40.0000] <StoneCypher>
major*

[14:02:00.0000] <StoneCypher>
does what one wants in two of the seven places.

[14:02:01.0000] <StoneCypher>
major*

[14:02:49.0000] <AryehGregor>
Ms2ger, false, not no.

[14:02:57.0000] <Ms2ger>
Sure

[14:03:00.0000] <AryehGregor>
Ms2ger, false, not no.

[14:03:01.0000] <Ms2ger>
Sure

[14:03:01.0000] <AryehGregor>
StoneCypher, in theory, <span contenteditable=false> should do that.  In practice, yeah, hacks.

[14:03:02.0000] <AryehGregor>
StoneCypher, in theory, <span contenteditable=false> should do that.  In practice, yeah, hacks.

[14:03:03.0000] <StoneCypher>
yeah :(

[14:03:04.0000] <StoneCypher>
well, At Least It's Possible-Ish (tm)

[14:03:06.0000] <StoneCypher>
yeah :(

[14:03:15.0000] <StoneCypher>
well, At Least It's Possible-Ish (tm)

[14:03:48.0000] <StoneCypher>
getting text height right is going to be a blast

[14:04:00.0000] <StoneCypher>
getting text height right is going to be a blast

[14:04:00.0000] <AryehGregor>
TabAtkins_, annevk: https://www.w3.org/Bugs/Public/show_bug.cgi?id=16380

[14:04:01.0000] <AryehGregor>
TabAtkins_, annevk: https://www.w3.org/Bugs/Public/show_bug.cgi?id=16380

[14:05:34.0000] <TabAtkins_>
I had no idea scroll() was a function.

[14:06:00.0000] <TabAtkins_>
I had no idea scroll() was a function.

[14:06:01.0000] <zewt>
scrollTo has one of the worst abominations ever on android's browser: unlike the rest of the web universe, it smooth scrolls

[14:06:02.0000] <AryehGregor>
Then you learned something new today!

[14:06:22.0000] <zewt>
scrollTo has one of the worst abominations ever on android's browser: unlike the rest of the web universe, it smooth scrolls

[14:06:25.0000] <AryehGregor>
Then you learned something new today!

[14:06:35.0000] <zewt>
caused me no end of migraines

[14:06:43.0000] <annevk>
CSS should probably define the basics here though

[14:06:50.0000] <Ms2ger>
He. He. He.

[14:06:54.0000] <annevk>
because this affects getComputedStyle etc. too

[14:07:00.0000] <zewt>
caused me no end of migraines

[14:07:01.0000] <annevk>
CSS should probably define the basics here though

[14:07:02.0000] <Ms2ger>
He. He. He.

[14:07:03.0000] <annevk>
because this affects getComputedStyle etc. too

[14:07:04.0000] <TabAtkins_>
Yes.  Even if it's something like "no document exists yet", it needs defined behavior.

[14:07:22.0000] <TabAtkins_>
Yes.  Even if it's something like "no document exists yet", it needs defined behavior.

[14:07:44.0000] <TabAtkins_>
Though I suspect if we just define it as equivalent to display:none on the root, the rest would fall out.

[14:08:00.0000] <TabAtkins_>
Though I suspect if we just define it as equivalent to display:none on the root, the rest would fall out.

[14:08:01.0000] <TabAtkins_>
We already know what getComputedStyle does when querying an element that didn't generate a box.

[14:08:02.0000] <annevk>
display:none on root computed to block I think

[14:08:05.0000] <TabAtkins_>
We already know what getComputedStyle does when querying an element that didn't generate a box.

[14:08:07.0000] <annevk>
display:none on root computed to block I think

[14:08:33.0000] <annevk>
oh maybe it doesn't

[14:08:41.0000] <TabAtkins_>
dunno

[14:08:46.0000] <annevk>
data:text/html,<style>:root{display:none}</style>x

[14:08:49.0000] <annevk>
suggests it doesn't

[14:08:51.0000] <annevk>
but who knows

[14:09:00.0000] <annevk>
oh maybe it doesn't

[14:09:01.0000] <TabAtkins_>
dunno

[14:09:02.0000] <annevk>
data:text/html,<style>:root{display:none}</style>x

[14:09:03.0000] <annevk>
suggests it doesn't

[14:09:04.0000] <annevk>
but who knows

[14:09:54.0000] <annevk>
per http://www.w3.org/TR/CSS21/visuren.html#dis-pos-flo it ought to work

[14:10:00.0000] <annevk>
per http://www.w3.org/TR/CSS21/visuren.html#dis-pos-flo it ought to work

[14:10:01.0000] <annevk>
but if you don't display the root you still have a viewport...

[14:10:19.0000] <annevk>
but if you don't display the root you still have a viewport...

[14:10:26.0000] <TabAtkins_>
True.

[14:10:32.0000] <annevk>
I wonder if it's defined in CSS 2.1 if you have a background on root and display:none

[14:10:35.0000] <TabAtkins_>
But it has zero height, and default width.

[14:10:39.0000] <annevk>
I guess technically that should draw the background

[14:10:51.0000] <annevk>
because it's not the background of the root, but of the initial containing block

[14:11:00.0000] <TabAtkins_>
True.

[14:11:01.0000] <annevk>
I wonder if it's defined in CSS 2.1 if you have a background on root and display:none

[14:11:02.0000] <TabAtkins_>
But it has zero height, and default width.

[14:11:03.0000] <annevk>
I guess technically that should draw the background

[14:11:04.0000] <annevk>
because it's not the background of the root, but of the initial containing block

[14:11:05.0000] <annevk>
lets test :)

[14:11:10.0000] <annevk>
lets test :)

[14:11:33.0000] <TabAtkins_>
Chrome doesn't draw.

[14:11:40.0000] <TabAtkins_>
But I think you're right, technically.

[14:11:49.0000] <TabAtkins_>
We lift the bg to the canvas.

[14:12:00.0000] <TabAtkins_>
Chrome doesn't draw.

[14:12:01.0000] <TabAtkins_>
But I think you're right, technically.

[14:12:02.0000] <TabAtkins_>
We lift the bg to the canvas.

[14:12:03.0000] <annevk>
http://software.hixie.ch/utilities/js/live-dom-viewer/?%3C!DOCTYPE%20html%3E%3Cstyle%3E%3Aroot%7Bbackground%3Aurl(image)%3Bdisplay%3Anone%7D%3C%2Fstyle%3ETEST

[14:12:04.0000] <annevk>
Opera draws

[14:12:05.0000] <annevk>
victory

[14:12:07.0000] <annevk>
http://software.hixie.ch/utilities/js/live-dom-viewer/?%3C!DOCTYPE%20html%3E%3Cstyle%3E%3Aroot%7Bbackground%3Aurl(image)%3Bdisplay%3Anone%7D%3C%2Fstyle%3ETEST

[14:12:09.0000] <annevk>
Opera draws

[14:12:11.0000] <annevk>
victory

[14:13:00.0000] <annevk>
IE has a weird rendering issue, but seems to get the right idea

[14:13:09.0000] <annevk>
IE has a weird rendering issue, but seems to get the right idea

[14:13:35.0000] <annevk>
that is by far the most useless piece of CSS trickery I've done

[14:13:45.0000] <annevk>
apart from maybe playing around with form controls as root elements

[14:14:00.0000] <annevk>
that is by far the most useless piece of CSS trickery I've done

[14:14:01.0000] <annevk>
apart from maybe playing around with form controls as root elements

[14:14:02.0000] <annevk>
but it does show that you actually need to define what happens to the initial containing block as well :)

[14:14:08.0000] <annevk>
but it does show that you actually need to define what happens to the initial containing block as well :)

[14:48:00.0000] <othermaciej>
Hixie: it is

[14:48:06.0000] <othermaciej>
Hixie: it is

[14:53:51.0000] <annevk>
othermaciej: when was that changed then?

[14:53:59.0000] <annevk>
othermaciej: ooh, is Mike applying it himself?

[14:54:00.0000] <annevk>
othermaciej: when was that changed then?

[14:54:01.0000] <annevk>
othermaciej: ooh, is Mike applying it himself?

[14:54:47.0000] <othermaciej>
annevk: Mike made a script which Ian put in his publication pipeline

[14:55:00.0000] <othermaciej>
annevk: Mike made a script which Ian put in his publication pipeline

[14:55:01.0000] <Hixie>
in other news, i no longer vouch for the accuracy of anything in the w3c html spec

[14:55:20.0000] <Hixie>
in other news, i no longer vouch for the accuracy of anything in the w3c html spec

[14:55:38.0000] <Hixie>
as i strongly suspect that this has introduced all kinds of subtle bugs, e.g. in the parser

[14:55:39.0000] <jamesr_>
you did before?

[14:56:00.0000] <Hixie>
as i strongly suspect that this has introduced all kinds of subtle bugs, e.g. in the parser

[14:56:01.0000] <jamesr_>
you did before?

[14:56:02.0000] <Hixie>
before i knew it was the same text as the whatwg copy and so yes, i knew it was accurate modulo the differences documented in the introduction of the whatwg spec

[14:56:06.0000] <Hixie>
before i knew it was the same text as the whatwg copy and so yes, i knew it was accurate modulo the differences documented in the introduction of the whatwg spec

[14:56:46.0000] <annevk>
the parser looks rather inconsistent

[14:56:47.0000] <annevk>
http://dev.w3.org/html5/spec/tokenization.html#script-data-escaped-dash-state

[14:56:52.0000] <annevk>
"-" (U+002D)

[14:56:55.0000] <annevk>
U+003C LESS-THAN SIGN (<)

[14:57:00.0000] <annevk>
the parser looks rather inconsistent

[14:57:00.0000] <annevk>
U+0000 NULL

[14:57:01.0000] <annevk>
http://dev.w3.org/html5/spec/tokenization.html#script-data-escaped-dash-state

[14:57:02.0000] <annevk>
"-" (U+002D)

[14:57:03.0000] <annevk>
U+003C LESS-THAN SIGN (<)

[14:57:04.0000] <annevk>
U+0000 NULL

[14:57:05.0000] <annevk>
good times

[14:57:16.0000] <annevk>
good times

[14:57:41.0000] <Hixie>
but don't worry, i'm sure the chairs know what they're doing

[14:57:42.0000] <annevk>
oh and the text does still say U+002D HYPHEN-MINUS

[14:58:00.0000] <Hixie>
but don't worry, i'm sure the chairs know what they're doing

[14:58:01.0000] <annevk>
oh and the text does still say U+002D HYPHEN-MINUS

[14:58:02.0000] <annevk>
"tab" (U+0009)

[14:58:03.0000] <annevk>
"LF" (U+000A)

[14:58:04.0000] <annevk>
"FF" (U+000C)

[14:58:05.0000] <annevk>
lol

[14:58:13.0000] <annevk>
"tab" (U+0009)

[14:58:13.0000] <annevk>
"LF" (U+000A)

[14:58:13.0000] <annevk>
"FF" (U+000C)

[14:58:14.0000] <annevk>
lol

[14:58:30.0000] <zewt>
if "the chairs" are so bored that they're fucking with stuff like that, they're pretty much declaring their uselessness

[14:58:33.0000] <annevk>
those are not really subtle bugs

[14:58:38.0000] <annevk>
those are just bugs

[14:59:00.0000] <zewt>
if "the chairs" are so bored that they're fucking with stuff like that, they're pretty much declaring their uselessness

[14:59:01.0000] <annevk>
those are not really subtle bugs

[14:59:02.0000] <annevk>
those are just bugs

[14:59:56.0000] <hober>
Any comments / suggestions on http://www.w3.org/html/wg/wiki/User:Eoconnor/ISSUE-158 before I submit it? (It's due by the end of the day.)

[15:00:00.0000] <hober>
Any comments / suggestions on http://www.w3.org/html/wg/wiki/User:Eoconnor/ISSUE-158 before I submit it? (It's due by the end of the day.)

[15:00:46.0000] <zewt>
i havn't heard that phrase since highschool

[15:01:00.0000] <zewt>
i havn't heard that phrase since highschool

[15:01:01.0000] <Hixie>
hober: details section looks fine to me

[15:01:13.0000] <Hixie>
hober: details section looks fine to me

[15:01:42.0000] <annevk>
zing

[15:01:46.0000] <zewt>
splittin' like it's 1998

[15:02:00.0000] <annevk>
zing

[15:02:01.0000] <zewt>
splittin' like it's 1998

[15:02:02.0000] <annevk>
hober: you have my sympathy for trying to make this thing work

[15:02:17.0000] <annevk>
hober: you have my sympathy for trying to make this thing work

[15:02:45.0000] <annevk>
hober: also, a few places spell "&object>"

[15:03:00.0000] <annevk>
hober: also, a few places spell "&object>"

[15:03:53.0000] <hober>
annevk: ooh, thanks. /me fixes

[15:04:00.0000] <hober>
annevk: ooh, thanks. /me fixes

[15:05:00.0000] <hober>
Hixie: heh, i thought you'd like that

[15:05:08.0000] <hober>
Hixie: heh, i thought you'd like that

[15:57:00.0000] <_bga>
http://blog.chipx86.com/2012/03/13/wsx-virtual-machines-in-your-browser/

[15:57:17.0000] <_bga>
http://blog.chipx86.com/2012/03/13/wsx-virtual-machines-in-your-browser/

[16:01:56.0000] <Hixie>
ok lineDashOffset is just frustratingly hard to specify

[16:02:00.0000] <Hixie>
ok lineDashOffset is just frustratingly hard to specify

[16:02:01.0000] <TabAtkins_>
Really?  I'd think that once you have specified dashed lines without an offset, the offset is easy.

[16:02:02.0000] <TabAtkins_>
Just move the start point.

[16:02:20.0000] <TabAtkins_>
Really?  I'd think that once you have specified dashed lines without an offset, the offset is easy.

[16:02:25.0000] <TabAtkins_>
Just move the start point.

[16:02:29.0000] <Hixie>
you'd think

[16:02:39.0000] <TabAtkins_>
Do you define dashed lines from a start point?

[16:03:00.0000] <Hixie>
you'd think

[16:03:01.0000] <TabAtkins_>
Do you define dashed lines from a start point?

[16:03:29.0000] <Hixie>
i define dashed lines as an algorithm you apply to a set of subpaths

[16:04:00.0000] <Hixie>
i define dashed lines as an algorithm you apply to a set of subpaths

[16:05:00.0000] <Hixie>
TabAtkins_: http://www.whatwg.org/specs/web-apps/current-work/#trace-a-path

[16:05:01.0000] <Hixie>
TabAtkins_: http://www.whatwg.org/specs/web-apps/current-work/#trace-a-path

[16:05:47.0000] <Hixie>
steps 6 to 22

[16:06:00.0000] <Hixie>
steps 6 to 22

[16:06:01.0000] <Hixie>
my initial idea was to just offset L in step 7, but that breaks because then i have to define how you wrap around L later

[16:06:02.0000] <Hixie>
which is all kinds of special cases

[16:06:03.0000] <Hixie>
now i'm thinking of just generating a new dash list that is suitably offset

[16:06:09.0000] <Hixie>
my initial idea was to just offset L in step 7, but that breaks because then i have to define how you wrap around L later

[16:06:15.0000] <Hixie>
which is all kinds of special cases

[16:06:26.0000] <Hixie>
now i'm thinking of just generating a new dash list that is suitably offset

[16:06:28.0000] <TabAtkins_>
7: "line for of all lines"

[16:06:48.0000] <Hixie>
oops

[16:06:50.0000] <Hixie>
thanks

[16:07:00.0000] <TabAtkins_>
7: "line for of all lines"

[16:07:01.0000] <Hixie>
oops

[16:07:02.0000] <Hixie>
thanks

[16:07:03.0000] <TabAtkins_>
Define the dash list to be infinite (with proper wrap-around behavior), and apply an offset.

[16:07:04.0000] <TabAtkins_>
I do this for repeating gradients.

[16:07:10.0000] <TabAtkins_>
Define the dash list to be infinite (with proper wrap-around behavior), and apply an offset.

[16:07:25.0000] <TabAtkins_>
I do this for repeating gradients.

[16:08:00.0000] <Hixie>
the problem with that is that the offset can be into half-way through one of the dashes

[16:08:01.0000] <TabAtkins_>
And?

[16:08:01.0000] <Hixie>
the problem with that is that the offset can be into half-way through one of the dashes

[16:08:02.0000] <Hixie>
and so you have to deal with that

[16:08:12.0000] <TabAtkins_>
And?

[16:08:19.0000] <Hixie>
and so you have to deal with that

[16:08:55.0000] <Hixie>
since otherwise the subsequent steps don't work

[16:09:00.0000] <Hixie>
since otherwise the subsequent steps don't work

[16:09:01.0000] <Hixie>
since they use the length of each subpart of the dash list

[16:09:02.0000] <TabAtkins_>
Ah, indeed, because you're defining this as explicitly iterating through the list.

[16:09:14.0000] <Hixie>
since they use the length of each subpart of the dash list

[16:09:15.0000] <TabAtkins_>
Ah, indeed, because you're defining this as explicitly iterating through the list.

[16:09:33.0000] <TabAtkins_>
Rather than "coloring" the stroke line with on/off state.

[16:09:54.0000] <Hixie>
i need to be explicit so that it's clear where line caps end up going

[16:10:00.0000] <TabAtkins_>
Rather than "coloring" the stroke line with on/off state.

[16:10:01.0000] <Hixie>
i need to be explicit so that it's clear where line caps end up going

[16:10:02.0000] <Hixie>
(haven't yet specced that, it goes in step 22)

[16:10:20.0000] <Hixie>
(haven't yet specced that, it goes in step 22)

[16:11:45.0000] <_bga>
are you contribute to Amaya reference web browser?

[16:11:56.0000] <Hixie>
"reference"?

[16:11:59.0000] <TabAtkins_>
_bga: ....bwuh?

[16:12:00.0000] <_bga>
are you contribute to Amaya reference web browser?

[16:12:01.0000] <Hixie>
"reference"?

[16:12:02.0000] <TabAtkins_>
_bga: ....bwuh?

[16:13:47.0000] <_bga>
iirc it was browser that idealy support web standards

[16:13:55.0000] <_bga>
developed by you

[16:13:55.0000] <TabAtkins_>
Um, what?

[16:14:00.0000] <_bga>
iirc it was browser that idealy support web standards

[16:14:01.0000] <_bga>
developed by you

[16:14:02.0000] <TabAtkins_>
Um, what?

[16:14:03.0000] <TabAtkins_>
Amaya is an old browser made by the W3C, and is largely unmaintained.

[16:14:04.0000] <Hixie>
amaya was a testbed browser, it never had good standards support and i don't think anyone in this channel ever worked on it

[16:14:21.0000] <TabAtkins_>
Amaya is an old browser made by the W3C, and is largely unmaintained.

[16:14:26.0000] <Hixie>
amaya was a testbed browser, it never had good standards support and i don't think anyone in this channel ever worked on it

[16:14:41.0000] <_bga>
ah

[16:15:00.0000] <_bga>
ah

[16:15:49.0000] <_bga>
so now we dont have ideal browser

[16:15:59.0000] <TabAtkins_>
We never had an "ideal" browser.

[16:16:00.0000] <_bga>
so now we dont have ideal browser

[16:16:01.0000] <TabAtkins_>
We never had an "ideal" browser.

[16:16:02.0000] <TabAtkins_>
I have no idea what you heard about Amaya or where you heard it, but it was never a good browser.

[16:16:22.0000] <TabAtkins_>
I have no idea what you heard about Amaya or where you heard it, but it was never a good browser.


2012-03-15
[17:59:45.0000] <_bga>
http://js1k.com/2012-love/demo/1243

[18:00:00.0000] <_bga>
http://js1k.com/2012-love/demo/1243

[18:19:42.0000] <scott_gonzalez>
Hixie: .innerHTML in IE clears the innerHTML of all descendants. Do you agree that this is a bug?

[18:19:43.0000] <scott_gonzalez>
http://jsfiddle.net/Hej6h/6/

[18:20:00.0000] <scott_gonzalez>
Hixie: .innerHTML in IE clears the innerHTML of all descendants. Do you agree that this is a bug?

[18:20:01.0000] <scott_gonzalez>
http://jsfiddle.net/Hej6h/6/

[18:26:00.0000] <smaug____>
it does what?

[18:26:18.0000] <smaug____>
it does what?

[18:27:00.0000] <Hixie>
scott_gonzalez: sounds like a bug, yes

[18:27:06.0000] <Hixie>
scott_gonzalez: sounds like a bug, yes

[18:27:37.0000] <scott_gonzalez>
smaug____: If you have <p><a>x</a></p>

[18:27:43.0000] <scott_gonzalez>
And you have a reference to the anchor element.

[18:27:47.0000] <scott_gonzalez>
Then you do p.innerHTML = "";

[18:27:56.0000] <scott_gonzalez>
a.innerHTML will get cleared as well.

[18:28:00.0000] <scott_gonzalez>
smaug____: If you have <p><a>x</a></p>

[18:28:01.0000] <scott_gonzalez>
And you have a reference to the anchor element.

[18:28:02.0000] <scott_gonzalez>
Then you do p.innerHTML = "";

[18:28:03.0000] <scott_gonzalez>
a.innerHTML will get cleared as well.

[18:28:04.0000] <scott_gonzalez>
So your reference is pretty much useless at that point.

[18:28:05.0000] <Hixie>
what happens to the text node's data if you still have the text node around?

[18:28:06.0000] <scott_gonzalez>
I haven't tried that. Let me check.

[18:28:11.0000] <Hixie>
what happens to the text node's data if you still have the text node around?

[18:28:26.0000] <scott_gonzalez>
I haven't tried that. Let me check.

[18:28:29.0000] <Hixie>
and what if the <a> element contains another element?

[18:29:00.0000] <Hixie>
and what if the <a> element contains another element?

[18:30:49.0000] <scott_gonzalez>
That seems to get cleared out too.

[18:31:00.0000] <scott_gonzalez>
That seems to get cleared out too.

[18:32:00.0000] <scott_gonzalez>
Same results when a contains another element.

[18:32:01.0000] <Hixie>
so it empties every text node and every element's child list?

[18:32:02.0000] <Hixie>
how weird

[18:32:03.0000] <scott_gonzalez>
Same results when a contains another element.

[18:32:23.0000] <Hixie>
so it empties every text node and every element's child list?

[18:32:26.0000] <Hixie>
how weird

[18:33:33.0000] <smaug____>
not very weird

[18:34:00.0000] <smaug____>
not very weird

[18:34:27.0000] <smaug____>
I could imagine it can help releasing memory in certain cases

[18:35:00.0000] <smaug____>
I could imagine it can help releasing memory in certain cases

[18:35:51.0000] <Hixie>
seems like it would waste a lot of cycles

[18:36:00.0000] <Hixie>
seems like it would waste a lot of cycles

[18:36:01.0000] <Hixie>
given that the memory will likely be released anyway at GC

[18:36:02.0000] <Hixie>
given that the memory will likely be released anyway at GC

[18:36:50.0000] <scott_gonzalez>
Right, it would only help if there are references to the nodes. And GC can't kick in for those until the references are removed anyway.

[18:37:00.0000] <scott_gonzalez>
Right, it would only help if there are references to the nodes. And GC can't kick in for those until the references are removed anyway.

[18:37:01.0000] <scott_gonzalez>
Although right now GC is kicking in too early if there are references.

[18:37:02.0000] <scott_gonzalez>
Since the nodes are staying, but they're losing all of their content.

[18:37:04.0000] <scott_gonzalez>
Although right now GC is kicking in too early if there are references.

[18:37:12.0000] <scott_gonzalez>
Since the nodes are staying, but they're losing all of their content.

[18:43:00.0000] <scott_gonzalez>
I'll report this to Microsoft and see what they say.

[18:43:05.0000] <scott_gonzalez>
I'll report this to Microsoft and see what they say.

[01:01:44.0000] <zcorpan>
/me discovers http://www.w3.org/TR/CSS21/aural.html#Emacspeak

[01:02:00.0000] <zcorpan>
/me discovers http://www.w3.org/TR/CSS21/aural.html#Emacspeak

[01:18:00.0000] <hsivonen>
zcorpan: are there other impls besides Emacspeak?

[01:18:18.0000] <hsivonen>
zcorpan: are there other impls besides Emacspeak?

[01:19:00.0000] <zcorpan>
hsivonen: dunno

[01:19:21.0000] <zcorpan>
hsivonen: dunno

[01:19:49.0000] <zcorpan>
but i hadn't expected that kind of section in css 2.1

[01:20:00.0000] <zcorpan>
but i hadn't expected that kind of section in css 2.1

[01:33:49.0000] <asmodai>
That's interesting, latest nvidia drivers seem to change something with font look in Firefox.

[01:34:00.0000] <asmodai>
That's interesting, latest nvidia drivers seem to change something with font look in Firefox.

[01:47:00.0000] <asmodai>
Mm, restart of firefox cleared that up. Guess it doesn't like having the driver ripped out from underneath it and updated by the recent nvidia installers.

[01:47:09.0000] <asmodai>
Mm, restart of firefox cleared that up. Guess it doesn't like having the driver ripped out from underneath it and updated by the recent nvidia installers.

[01:59:00.0000] <loostro>
Hi, is this correct? <a><li>some item</li></a> or I must do <li><a><div>some item</div></a></li> to make sure the anchor covers the whole box?

[01:59:10.0000] <loostro>
Hi, is this correct? <a><li>some item</li></a> or I must do <li><a><div>some item</div></a></li> to make sure the anchor covers the whole box?

[02:07:00.0000] <zcorpan>
loostro: neither. you should do <li><a>some item</a></li> and then apply display:block to the link

[02:07:27.0000] <zcorpan>
loostro: neither. you should do <li><a>some item</a></li> and then apply display:block to the link

[02:07:51.0000] <loostro>
thx

[02:08:00.0000] <loostro>
thx

[03:24:59.0000] <zcorpan>
/me finds http://mxr.mozilla.org/mozilla-central/source/layout/generic/nsBRFrame.cpp#137

[03:25:00.0000] <zcorpan>
/me finds http://mxr.mozilla.org/mozilla-central/source/layout/generic/nsBRFrame.cpp#137

[03:36:00.0000] <Velmont>
Should be more idb people here. Anyone feel called to discuss? :P

[03:36:05.0000] <Velmont>
Should be more idb people here. Anyone feel called to discuss? :P

[03:40:00.0000] <smaug____>
Velmont: you need to wait for sicking

[03:40:26.0000] <smaug____>
Velmont: you need to wait for sicking

[03:40:30.0000] <jgraham>
Velmont: I thought "idb people" were sicking

[03:41:00.0000] <jgraham>
Velmont: I thought "idb people" were sicking

[03:41:01.0000] <jgraham>
And maybe some people at Microsoft, but they're not allowed to hang around here

[03:41:01.0000] <jgraham>
And maybe some people at Microsoft, but they're not allowed to hang around here

[03:44:50.0000] <Velmont>
jgraham: Yep, -- but also Jonas from google would be swell to have here.

[03:45:00.0000] <Velmont>
jgraham: Yep, -- but also Jonas from google would be swell to have here.

[03:45:01.0000] <Velmont>
smaug____: Yeah yeah, -- I know, but he's not really in my timezone, -- so often not here when I want to talk about stuff :]

[03:45:02.0000] <Velmont>
smaug____: Hence the "more".

[03:45:13.0000] <Velmont>
smaug____: Yeah yeah, -- I know, but he's not really in my timezone, -- so often not here when I want to talk about stuff :]

[03:45:25.0000] <Velmont>
smaug____: Hence the "more".

[03:46:00.0000] <Velmont>
Don't have to be editor or anything, -- just knowing the spec very well. ;]

[03:46:00.0000] <Velmont>
Don't have to be editor or anything, -- just knowing the spec very well. ;]

[03:46:01.0000] <smaug____>
Jonas from google ?

[03:46:02.0000] <Velmont>
Joshua Bell I meant.

[03:46:04.0000] <smaug____>
Jonas from google ?

[03:46:19.0000] <Velmont>
Joshua Bell I meant.

[03:46:34.0000] <Velmont>
sry :P Talking about Sicking made me write the wrong name. :P

[03:47:00.0000] <Velmont>
sry :P Talking about Sicking made me write the wrong name. :P

[05:16:00.0000] <zcorpan>
turns out there were more quirks in the source that weren't documented in mdn http://simon.html5.org/specs/quirks-mode#the-???-quirks

[05:16:26.0000] <zcorpan>
turns out there were more quirks in the source that weren't documented in mdn http://simon.html5.org/specs/quirks-mode#the-???-quirks

[05:20:00.0000] <StoneCypher>
why is quirksmode being documented?

[05:20:10.0000] <StoneCypher>
why is quirksmode being documented?

[05:20:34.0000] <zcorpan>
http://simon.html5.org/specs/quirks-mode#goals

[05:20:35.0000] <StoneCypher>
i don't understand the purpose; i thought quirksmode was a grab-bag of browsers trying to DWIM and universally failing

[05:20:47.0000] <StoneCypher>
well no

[05:20:51.0000] <StoneCypher>
all that does is say what you're doing

[05:20:57.0000] <StoneCypher>
not why

[05:21:00.0000] <zcorpan>
http://simon.html5.org/specs/quirks-mode#goals

[05:21:01.0000] <StoneCypher>
i don't understand the purpose; i thought quirksmode was a grab-bag of browsers trying to DWIM and universally failing

[05:21:02.0000] <StoneCypher>
well no

[05:21:03.0000] <StoneCypher>
all that does is say what you're doing

[05:21:04.0000] <StoneCypher>
not why

[05:21:05.0000] <StoneCypher>
i mean yes, i can see that you're documenting quirksmode; the question is why that's desirable.

[05:21:25.0000] <StoneCypher>
i mean yes, i can see that you're documenting quirksmode; the question is why that's desirable.

[05:21:33.0000] <zcorpan>
ah. much for the same reason we specified e.g. html parsing

[05:21:37.0000] <jgraham>
> i thought quirksmode was a grab-bag of browsers trying to DWIM  and universally failing

[05:21:44.0000] <jgraham>
That's where you went wrong

[05:22:00.0000] <zcorpan>
ah. much for the same reason we specified e.g. html parsing

[05:22:01.0000] <jgraham>
> i thought quirksmode was a grab-bag of browsers trying to DWIM  and universally failing

[05:22:02.0000] <jgraham>
That's where you went wrong

[05:22:03.0000] <StoneCypher>
jgraham: okay, so what is it?

[05:22:04.0000] <annevk>
StoneCypher: "Get interoperability on quirks that are needed for Web compat." seems like a pretty clear "why"

[05:22:11.0000] <StoneCypher>
jgraham: okay, so what is it?

[05:22:26.0000] <annevk>
StoneCypher: "Get interoperability on quirks that are needed for Web compat." seems like a pretty clear "why"

[05:22:32.0000] <StoneCypher>
that's a "what"

[05:22:33.0000] <StoneCypher>
not a "why"

[05:22:40.0000] <annevk>
"Limit quirks to a fixed set of legacy features so they don't propagate into new features." too actually

[05:22:48.0000] <StoneCypher>
those are goals, not purposes.

[05:23:00.0000] <StoneCypher>
that's a "what"

[05:23:01.0000] <StoneCypher>
not a "why"

[05:23:02.0000] <annevk>
"Limit quirks to a fixed set of legacy features so they don't propagate into new features." too actually

[05:23:03.0000] <StoneCypher>
those are goals, not purposes.

[05:23:41.0000] <zcorpan>
we want to get interop because it makes sites render the same across browsers, which is good for browser developers not needing to tweak quirks all the time and reverse engineer others, and it's good for users because sites that are written against quirks mode for browser A works the same in browser B

[05:24:00.0000] <zcorpan>
we want to get interop because it makes sites render the same across browsers, which is good for browser developers not needing to tweak quirks all the time and reverse engineer others, and it's good for users because sites that are written against quirks mode for browser A works the same in browser B

[05:24:01.0000] <jgraham>
If you don't think that interoperability between browsers is a good enough reason to have a spec, I'm not sure what anyone could say to convince you that standards are a good idea

[05:24:02.0000] <StoneCypher>
i think we're sort of missing the point of the question

[05:24:03.0000] <jgraham>
If you don't think that interoperability between browsers is a good enough reason to have a spec, I'm not sure what anyone could say to convince you that standards are a good idea

[05:24:23.0000] <StoneCypher>
i think we're sort of missing the point of the question

[05:24:41.0000] <StoneCypher>
it was my understanding that the purpose of quirksmode was to allow browsers to silently fall back to prior, standards violating behavior

[05:25:00.0000] <StoneCypher>
it was my understanding that the purpose of quirksmode was to allow browsers to silently fall back to prior, standards violating behavior

[05:25:01.0000] <jgraham>
No

[05:25:02.0000] <StoneCypher>
so either i misundersatnd what quirksmode is

[05:25:03.0000] <StoneCypher>
okay, so what is it, i ask again

[05:25:04.0000] <jgraham>
Many browsers don't have "prior" behaviour

[05:25:04.0000] <jgraham>
No

[05:25:07.0000] <StoneCypher>
so either i misundersatnd what quirksmode is

[05:25:12.0000] <StoneCypher>
okay, so what is it, i ask again

[05:25:22.0000] <jgraham>
Many browsers don't have "prior" behaviour

[05:25:31.0000] <jgraham>
They were written after the standard

[05:26:00.0000] <jgraham>
They were written after the standard

[05:26:01.0000] <zcorpan>
quirks mode was introduced because the css spec was incompatible with behavior ("quirks") that existing content relied on

[05:26:15.0000] <zcorpan>
quirks mode was introduced because the css spec was incompatible with behavior ("quirks") that existing content relied on

[05:26:29.0000] <zcorpan>
instead of fixing css to be compatible

[05:26:31.0000] <StoneCypher>
zcorpan: i am unable to distinguish between that and what i said

[05:26:37.0000] <StoneCypher>
zcorpan: what am i missing

[05:26:38.0000] <jgraham>
The point of quirks mode is to bridge the disconnect that emerged (mostly) in the early days of CSS between what was actually needed to render documents on the web and what the CSS people wrote down

[05:26:52.0000] <jgraham>
This led to two populations of documents

[05:27:00.0000] <zcorpan>
instead of fixing css to be compatible

[05:27:01.0000] <StoneCypher>
zcorpan: i am unable to distinguish between that and what i said

[05:27:02.0000] <StoneCypher>
zcorpan: what am i missing

[05:27:03.0000] <jgraham>
The point of quirks mode is to bridge the disconnect that emerged (mostly) in the early days of CSS between what was actually needed to render documents on the web and what the CSS people wrote down

[05:27:04.0000] <jgraham>
This led to two populations of documents

[05:27:05.0000] <StoneCypher>
this pretty much sounds like "let the browser violate the standard"

[05:27:06.0000] <jgraham>
Ones that depended on the new behaiour and ones that depended on the old behaviour

[05:27:08.0000] <StoneCypher>
this pretty much sounds like "let the browser violate the standard"

[05:27:14.0000] <jgraham>
Ones that depended on the new behaiour and ones that depended on the old behaviour

[05:28:00.0000] <jgraham>
Any web browser needs to support both

[05:28:03.0000] <jgraham>
Any web browser needs to support both

[05:28:29.0000] <jgraham>
So far only one population has had good implementation instructions

[05:28:29.0000] <StoneCypher>
so, i respect that there is an art form to talking around the intent of a question

[05:28:30.0000] <StoneCypher>
but

[05:28:34.0000] <StoneCypher>
my question stands

[05:28:44.0000] <StoneCypher>
in what way is that not "let the browsers ignore the standards for old documents"

[05:29:00.0000] <jgraham>
So far only one population has had good implementation instructions

[05:29:01.0000] <StoneCypher>
so, i respect that there is an art form to talking around the intent of a question

[05:29:02.0000] <StoneCypher>
but

[05:29:03.0000] <StoneCypher>
my question stands

[05:29:04.0000] <StoneCypher>
in what way is that not "let the browsers ignore the standards for old documents"

[05:29:31.0000] <jgraham>
I think you are making the erroneous assumption that calling something a "standard" makes it magical

[05:29:55.0000] <StoneCypher>
i didn't say anything about magic

[05:30:00.0000] <jgraham>
I think you are making the erroneous assumption that calling something a "standard" makes it magical

[05:30:01.0000] <StoneCypher>
i didn't say anything about magic

[05:30:02.0000] <annevk>
o_O

[05:30:05.0000] <annevk>
o_O

[05:30:30.0000] <jgraham>
OK then, let me rephrase

[05:30:42.0000] <jgraham>
The point of the document is the exact opposite of what you say

[05:31:00.0000] <jgraham>
OK then, let me rephrase

[05:31:01.0000] <jgraham>
The point of the document is the exact opposite of what you say

[05:31:02.0000] <jgraham>
It is "create a standard for rendering old (or indeed new, if they happen to have a particular pragma) documents"

[05:31:03.0000] <StoneCypher>
oh.

[05:31:19.0000] <jgraham>
It is "create a standard for rendering old (or indeed new, if they happen to have a particular pragma) documents"

[05:31:27.0000] <StoneCypher>
oh.

[05:31:33.0000] <StoneCypher>
well that was straightforward.

[05:31:37.0000] <StoneCypher>
thakn you.

[05:32:00.0000] <StoneCypher>
well that was straightforward.

[05:32:01.0000] <StoneCypher>
thakn you.

[05:32:02.0000] <StoneCypher>
are you open to small suggestions?

[05:32:03.0000] <zcorpan>
is there something i should add to the spec, like a section "Motivation" that discusses this?

[05:32:04.0000] <zcorpan>
sure

[05:32:12.0000] <StoneCypher>
are you open to small suggestions?

[05:32:21.0000] <zcorpan>
is there something i should add to the spec, like a section "Motivation" that discusses this?

[05:32:26.0000] <zcorpan>
sure

[05:32:29.0000] <StoneCypher>
that's what i was about to suggest, actually :)

[05:32:43.0000] <StoneCypher>
people from standards-focussed languages (in my case, c++) will read those goals in the way that i did, i believe

[05:32:53.0000] <StoneCypher>
adding a statement of purpose will clarify what one wants here

[05:33:00.0000] <StoneCypher>
that's what i was about to suggest, actually :)

[05:33:01.0000] <StoneCypher>
people from standards-focussed languages (in my case, c++) will read those goals in the way that i did, i believe

[05:33:02.0000] <StoneCypher>
adding a statement of purpose will clarify what one wants here

[05:33:03.0000] <StoneCypher>
a bullet added to those goals, basically a cut and paste of jgraham's last sentence, will reach dim people like me quite quickly

[05:33:04.0000] <zcorpan>
is what jgraham wrote good enough for the spec or should it be phrased in some different way?

[05:33:16.0000] <StoneCypher>
a bullet added to those goals, basically a cut and paste of jgraham's last sentence, will reach dim people like me quite quickly

[05:33:25.0000] <zcorpan>
is what jgraham wrote good enough for the spec or should it be phrased in some different way?

[05:33:32.0000] <zcorpan>
k

[05:33:38.0000] <StoneCypher>
other than rephrasing to fit the style of the doc, it's near-ideal

[05:33:52.0000] <StoneCypher>
jgraham: apologies if i was being dense.  i really didn't get it until then.

[05:34:00.0000] <zcorpan>
k

[05:34:01.0000] <StoneCypher>
other than rephrasing to fit the style of the doc, it's near-ideal

[05:34:02.0000] <StoneCypher>
jgraham: apologies if i was being dense.  i really didn't get it until then.

[05:35:33.0000] <kennyluck>
(re. So far only one population has had good implementation instructions) Because no one bother care the other population which doesn't grow.

[05:36:00.0000] <kennyluck>
(re. So far only one population has had good implementation instructions) Because no one bother care the other population which doesn't grow.

[05:36:29.0000] <StoneCypher>
is the idea to solidify the handling of legacy documents, or are people (not counting people who just don't know any better, say code cut and pasters) actually still using quirksmode on purpose?

[05:36:34.0000] <kennyluck>
It's fair to say the quirks mode documentation a worthwhile document (so other people don't need to reverse engineer, indeed), though I doubt we will actually reach interop for this population.

[05:37:00.0000] <StoneCypher>
is the idea to solidify the handling of legacy documents, or are people (not counting people who just don't know any better, say code cut and pasters) actually still using quirksmode on purpose?

[05:37:01.0000] <kennyluck>
It's fair to say the quirks mode documentation a worthwhile document (so other people don't need to reverse engineer, indeed), though I doubt we will actually reach interop for this population.

[05:37:02.0000] <StoneCypher>
i agree, now that i know what it's for

[05:37:07.0000] <StoneCypher>
i agree, now that i know what it's for

[05:37:31.0000] <kennyluck>
And I don't think it makes to the Web better if reaching interop for this population actually makes the browsers slower.

[05:37:50.0000] <StoneCypher>
well, if browsers are well authored, it shouldn't

[05:38:00.0000] <kennyluck>
And I don't think it makes to the Web better if reaching interop for this population actually makes the browsers slower.

[05:38:01.0000] <StoneCypher>
well, if browsers are well authored, it shouldn't

[05:38:02.0000] <StoneCypher>
things that kick in in quirksmode have no need to be in the mainline path of control

[05:38:07.0000] <StoneCypher>
things that kick in in quirksmode have no need to be in the mainline path of control

[05:42:37.0000] <jgraham>
kennyluck: I don't think it's either true that it doesn't grow or that people don't care. I thoroughly expect that Opera has site-compat bugs related to slight differences in quirks mode

[05:43:00.0000] <jgraham>
kennyluck: I don't think it's either true that it doesn't grow or that people don't care. I thoroughly expect that Opera has site-compat bugs related to slight differences in quirks mode

[05:43:01.0000] <jgraham>
and users don't exactly check the doctype and decide "oh the site depends on undefined behaviour. I should stop using the site rather than switch browser"

[05:43:22.0000] <jgraham>
and users don't exactly check the doctype and decide "oh the site depends on undefined behaviour. I should stop using the site rather than switch browser"

[05:43:35.0000] <jgraham>
Especially if it e.g. their bank

[05:43:56.0000] <kennyluck>
That's true.

[05:43:58.0000] <zcorpan>
ok i added what jgraham said verbatim to Goals. thanks

[05:44:00.0000] <jgraham>
Especially if it e.g. their bank

[05:44:01.0000] <kennyluck>
That's true.

[05:44:02.0000] <zcorpan>
ok i added what jgraham said verbatim to Goals. thanks

[05:47:00.0000] <ard_>
hi. what should I do if I'd like to see something added to http://wiki.whatwg.org/wiki/Canvas (new api proposals) ?

[05:47:26.0000] <ard_>
hi. what should I do if I'd like to see something added to http://wiki.whatwg.org/wiki/Canvas (new api proposals) ?

[05:50:00.0000] <kennyluck>
Anyway, I would probably not call this document "Quirks Mode Standards" but something like "Quirks Mode Interoperability Living Document" or "CSS LS — Appendix X. Quirks Mode (This section in non-normative)".

[05:50:21.0000] <kennyluck>
Anyway, I would probably not call this document "Quirks Mode Standards" but something like "Quirks Mode Interoperability Living Document" or "CSS LS — Appendix X. Quirks Mode (This section in non-normative)".

[05:51:00.0000] <StoneCypher>
zcorpan: word

[05:51:21.0000] <StoneCypher>
zcorpan: word

[05:51:30.0000] <StoneCypher>
zcorpan, jgraham, annevk: thank you for the discussion

[05:51:38.0000] <StoneCypher>
i feel like i forgot someone

[05:52:00.0000] <StoneCypher>
zcorpan, jgraham, annevk: thank you for the discussion

[05:52:01.0000] <StoneCypher>
i feel like i forgot someone

[05:53:45.0000] <annevk>
ard_: at this point it's prolly best to email

[05:54:00.0000] <annevk>
ard_: at this point it's prolly best to email

[05:54:01.0000] <ard_>
annevk: hixie?

[05:54:02.0000] <annevk>
ard_: and it's best to email about use cases, not solutions

[05:54:03.0000] <annevk>
ard_: whatwg⊙wo

[05:54:04.0000] <annevk>
ard_: you need to be subscribed first

[05:54:05.0000] <ard_>
annevk: hixie?

[05:54:13.0000] <annevk>
ard_: and it's best to email about use cases, not solutions

[05:54:17.0000] <annevk>
ard_: whatwg⊙wo

[05:54:26.0000] <annevk>
ard_: you need to be subscribed first

[05:56:45.0000] <ard_>
annevk: I'll try. thanks :)

[05:57:00.0000] <ard_>
annevk: I'll try. thanks :)

[06:05:00.0000] <matjas>
“'background' on the root element is rendered on the canvas. @SelenIT2 and less surprisingly @davidbaron and @zcorpan had this. #csspubquiz” — http://twitter.com/annevk/status/180277920072351745 mind explaining?

[06:05:01.0000] <matjas>
i have a feeling this is not just about <style>:root { background: lime; }</style>

[06:05:04.0000] <matjas>
“'background' on the root element is rendered on the canvas. @SelenIT2 and less surprisingly @davidbaron and @zcorpan had this. #csspubquiz” — http://twitter.com/annevk/status/180277920072351745 mind explaining?

[06:05:25.0000] <matjas>
i have a feeling this is not just about <style>:root { background: lime; }</style>

[06:07:54.0000] <kennyluck>
"I didn't expect spec comment handling to turn into Validator.nu feature bargaining."

[06:08:00.0000] <kennyluck>
"I didn't expect spec comment handling to turn into Validator.nu feature bargaining."

[06:08:01.0000] <StoneCypher>
lal

[06:08:02.0000] <MikeSmith>
kennyluck: what you quoting from?

[06:08:04.0000] <StoneCypher>
lal

[06:08:26.0000] <MikeSmith>
kennyluck: what you quoting from?

[06:08:49.0000] <kennyluck>
MikeSmith, https://www.w3.org/Bugs/Public/show_bug.cgi?id=15936#c4

[06:09:00.0000] <kennyluck>
MikeSmith, https://www.w3.org/Bugs/Public/show_bug.cgi?id=15936#c4

[06:16:36.0000] <matjas>
re: root background (http://www.w3.org/TR/CSS21/colors.html#background), what exactly fails in all browsers except IE/Opera?

[06:17:00.0000] <matjas>
re: root background (http://www.w3.org/TR/CSS21/colors.html#background), what exactly fails in all browsers except IE/Opera?

[06:20:56.0000] <annevk>
matjas: you forgot display:none

[06:21:00.0000] <annevk>
matjas: you forgot display:none

[06:21:01.0000] <annevk>
matjas: http://software.hixie.ch/utilities/js/live-dom-viewer/?%3C!DOCTYPE%20html%3E%3Cstyle%3E%3Aroot%7Bdisplay%3Anone%3Bbackground%3Alime%7D%3C%2Fstyle%3E

[06:21:20.0000] <annevk>
matjas: http://software.hixie.ch/utilities/js/live-dom-viewer/?%3C!DOCTYPE%20html%3E%3Cstyle%3E%3Aroot%7Bdisplay%3Anone%3Bbackground%3Alime%7D%3C%2Fstyle%3E

[06:21:37.0000] <matjas>
annevk: oh wow! thanks

[06:22:00.0000] <matjas>
annevk: oh wow! thanks

[06:22:46.0000] <annevk>
tweet is a little ambiguous because of length

[06:22:51.0000] <annevk>
everyone renders it on canvas

[06:22:59.0000] <annevk>
but gecko/webkit don't when display:none

[06:23:00.0000] <annevk>
tweet is a little ambiguous because of length

[06:23:01.0000] <annevk>
everyone renders it on canvas

[06:23:02.0000] <annevk>
but gecko/webkit don't when display:none

[06:23:03.0000] <annevk>
they prolly simple don't look at background

[06:23:09.0000] <annevk>
they prolly simple don't look at background

[06:23:38.0000] <annevk>
yeah

[06:23:43.0000] <annevk>
Gecko has the same bug for body{display:none;background:lime}

[06:24:00.0000] <annevk>
yeah

[06:24:01.0000] <annevk>
Gecko has the same bug for body{display:none;background:lime}

[06:24:02.0000] <annevk>
WebKit too

[06:24:31.0000] <annevk>
(body elements in the HTML namespace get their background property propagated too)

[06:25:00.0000] <annevk>
(body elements in the HTML namespace get their background property propagated too)

[06:29:53.0000] <matjas>
annevk: where does it say that about `body`? is that defined by CSS or HTML?

[06:30:00.0000] <matjas>
annevk: where does it say that about `body`? is that defined by CSS or HTML?

[06:30:01.0000] <matjas>
/me geeks out on these obscure fun facts

[06:30:02.0000] <annevk>
CSS

[06:30:15.0000] <matjas>
/me geeks out on these obscure fun facts

[06:30:19.0000] <annevk>
CSS

[06:30:37.0000] <annevk>
http://www.w3.org/TR/CSS21/colors.html#background

[06:30:59.0000] <matjas>
“ For documents whose root element is an HTML "HTML" element or an XHTML "html" element that has computed values of 'transparent' for 'background-color' and 'none' for 'background-image', user agents must instead use the computed value of the background properties from that element's first HTML "BODY" element or XHTML "body" element child when painting backgrounds for the canvas, and must not pa

[06:31:00.0000] <annevk>
http://www.w3.org/TR/CSS21/colors.html#background

[06:31:00.0000] <matjas>
int a background for that child element.”

[06:31:00.0000] <annevk>
fourth paragraph

[06:31:01.0000] <matjas>
“ For documents whose root element is an HTML "HTML" element or an XHTML "html" element that has computed values of 'transparent' for 'background-color' and 'none' for 'background-image', user agents must instead use the computed value of the background properties from that element's first HTML "BODY" element or XHTML "body" element child when painting backgrounds for the canvas, and must not pa

[06:31:02.0000] <matjas>
int a background for that child element.”

[06:31:03.0000] <annevk>
fourth paragraph

[06:31:04.0000] <matjas>
right

[06:31:05.0000] <matjas>
mind = blown

[06:31:05.0000] <matjas>
right

[06:31:06.0000] <annevk>
http://www.w3.org/TR/CSS21/visufx.html#overflow has the same

[06:31:08.0000] <matjas>
mind = blown

[06:31:22.0000] <annevk>
http://www.w3.org/TR/CSS21/visufx.html#overflow has the same

[06:36:00.0000] <matjas>
ah, i remember being confused by that a couple of years ago, in a design that required `body { overflow: auto }`

[06:36:23.0000] <matjas>
ah, i remember being confused by that a couple of years ago, in a design that required `body { overflow: auto }`

[06:37:00.0000] <zcorpan>
annevk: alert() didn't count as a correct answer? :-)

[06:37:02.0000] <zcorpan>
annevk: alert() didn't count as a correct answer? :-)

[06:37:29.0000] <kennyluck>
annevk, should that actually include <frameset> to match document.body ?

[06:37:38.0000] <kennyluck>
/me was thinking about this today.

[06:37:56.0000] <zcorpan>
no

[06:38:00.0000] <kennyluck>
annevk, should that actually include <frameset> to match document.body ?

[06:38:01.0000] <kennyluck>
/me was thinking about this today.

[06:38:02.0000] <zcorpan>
no

[06:38:50.0000] <kennyluck>
I haven't tested it, but that's a bit surprising. Anyway.

[06:39:00.0000] <kennyluck>
I haven't tested it, but that's a bit surprising. Anyway.

[06:39:01.0000] <jgraham>
That is like the fourth time matjas has said "mind = blown" in here recently. Does someone keep scraping the bits off the wall and reassembling them?

[06:39:08.0000] <jgraham>
That is like the fourth time matjas has said "mind = blown" in here recently. Does someone keep scraping the bits off the wall and reassembling them?

[06:39:34.0000] <matjas>
jgraham: probably not worth it

[06:40:00.0000] <matjas>
jgraham: probably not worth it

[07:09:39.0000] <Philip`>
Hmph, it looks like people have started doing animated ads with HTML instead of Flash now, so I can't trivially block them :-(

[07:10:00.0000] <Philip`>
Hmph, it looks like people have started doing animated ads with HTML instead of Flash now, so I can't trivially block them :-(

[07:11:00.0000] <StoneCypher>
yeah, when you try to starve sites of the revenue that makes them run, they fight you.

[07:12:32.0000] <bga>
Philip` * { animation: none !important } ?

[07:13:00.0000] <bga>
Philip` * { animation: none !important } ?

[07:13:01.0000] <StoneCypher>
:/

[07:13:11.0000] <StoneCypher>
:/

[07:13:28.0000] <webben>
Philip`: Really? Got an example?

[07:14:00.0000] <webben>
Philip`: Really? Got an example?

[07:14:30.0000] <Philip`>
bga: It's not CSS animation, it's just JS moving things around

[07:15:00.0000] <Philip`>
bga: It's not CSS animation, it's just JS moving things around

[07:15:35.0000] <bga>
ah. i disabled js in browser so never see it

[07:16:00.0000] <bga>
ah. i disabled js in browser so never see it

[07:16:01.0000] <Philip`>
webben: http://www.eurogamer.net/ (especially the "This weeks [sic] top games" on the right of the page, which is very distracting when trying to read any nearby text) (don't know if the ads are location-dependent)

[07:16:09.0000] <Philip`>
webben: http://www.eurogamer.net/ (especially the "This weeks [sic] top games" on the right of the page, which is very distracting when trying to read any nearby text) (don't know if the ads are location-dependent)

[07:19:45.0000] <annevk>
argh

[07:19:51.0000] <annevk>
why does IE not support overrideMimeType

[07:20:00.0000] <annevk>
argh

[07:20:01.0000] <annevk>
why does IE not support overrideMimeType

[07:20:02.0000] <Workshiva>
That would require supporting mime types to begin with :P

[07:20:23.0000] <Workshiva>
That would require supporting mime types to begin with :P

[07:20:36.0000] <bga>
annevk for what?

[07:20:45.0000] <bga>
binary data hack?

[07:20:50.0000] <annevk>
Workshiva: haha just dropping in at the appropriate times huh?

[07:21:00.0000] <bga>
annevk for what?

[07:21:01.0000] <bga>
binary data hack?

[07:21:02.0000] <annevk>
Workshiva: haha just dropping in at the appropriate times huh?

[07:21:03.0000] <annevk>
bga: testing euc-jp without much of a server

[07:21:07.0000] <annevk>
bga: testing euc-jp without much of a server

[07:22:00.0000] <zcorpan>
http://software.hixie.ch/utilities/js/live-dom-viewer/saved/1400 intredasting

[07:22:01.0000] <Workshiva>
I'm always here, just not saying anything

[07:22:08.0000] <zcorpan>
http://software.hixie.ch/utilities/js/live-dom-viewer/saved/1400 intredasting

[07:22:14.0000] <Workshiva>
I'm always here, just not saying anything

[07:25:00.0000] <Velmont>
Bah, -- firefox doesn't fire success event after upgradeneeded after a second opening of a datababase. It seems very wrong, -- but I'm not sure if I did something wrong in the test.

[07:25:05.0000] <Velmont>
Bah, -- firefox doesn't fire success event after upgradeneeded after a second opening of a datababase. It seems very wrong, -- but I'm not sure if I did something wrong in the test.

[07:37:50.0000] <annevk>
well well

[07:37:54.0000] <annevk>
maybe I don't need to test IE

[07:38:00.0000] <annevk>
well well

[07:38:01.0000] <annevk>
maybe I don't need to test IE

[07:38:02.0000] <annevk>
for valid multi-octet sequences in euc-jp there's agreement between Chrome, Opera, and Firefox

[07:38:15.0000] <annevk>
for valid multi-octet sequences in euc-jp there's agreement between Chrome, Opera, and Firefox

[07:43:30.0000] <MikeSmith>
annevk: btw we need tests for sandbox allow-popups behavior

[07:43:38.0000] <MikeSmith>
just sayin

[07:43:50.0000] <MikeSmith>
webkit and IE have both implemented it

[07:43:58.0000] <MikeSmith>
without a spec

[07:44:00.0000] <MikeSmith>
annevk: btw we need tests for sandbox allow-popups behavior

[07:44:01.0000] <MikeSmith>
just sayin

[07:44:02.0000] <MikeSmith>
webkit and IE have both implemented it

[07:44:03.0000] <MikeSmith>
without a spec

[07:44:37.0000] <MikeSmith>
so in order to make a proper spec we need to test it and see what we find

[07:45:00.0000] <MikeSmith>
so in order to make a proper spec we need to test it and see what we find

[07:45:01.0000] <MikeSmith>
jgraham: ↑

[07:45:02.0000] <annevk>
i'm not doing much with sandbox

[07:45:12.0000] <MikeSmith>
jgraham: ↑

[07:45:21.0000] <annevk>
i'm not doing much with sandbox

[07:45:28.0000] <annevk>
ideally webkit/ie contribute some tests

[07:45:34.0000] <MikeSmith>
yeah

[07:45:52.0000] <MikeSmith>
but to be clear the spec work is blocked on that

[07:46:00.0000] <annevk>
ideally webkit/ie contribute some tests

[07:46:01.0000] <MikeSmith>
yeah

[07:46:02.0000] <MikeSmith>
but to be clear the spec work is blocked on that

[07:46:32.0000] <MikeSmith>
Hixie needs data in order to actually spec it out

[07:47:00.0000] <MikeSmith>
Hixie needs data in order to actually spec it out

[07:47:01.0000] <MikeSmith>
and I can write the tests myself if I need to I guess

[07:47:02.0000] <MikeSmith>
but really

[07:47:08.0000] <MikeSmith>
and I can write the tests myself if I need to I guess

[07:47:12.0000] <MikeSmith>
but really

[07:47:41.0000] <annevk>
oh did I make a comment about allow-popups somewhere?

[07:47:54.0000] <MikeSmith>
no, not you personally

[07:48:00.0000] <annevk>
oh did I make a comment about allow-popups somewhere?

[07:48:01.0000] <MikeSmith>
no, not you personally

[07:48:02.0000] <annevk>
my email to WHATWG was about script-opened links, unrelated to sandboxing

[07:48:13.0000] <annevk>
my email to WHATWG was about script-opened links, unrelated to sandboxing

[07:49:00.0000] <MikeSmith>
my point is, when vendors unilaterally choose to implement something that's not in the spec, the least they can do is to provide cross-browser test cases for that feature

[07:49:10.0000] <MikeSmith>
my point is, when vendors unilaterally choose to implement something that's not in the spec, the least they can do is to provide cross-browser test cases for that feature

[07:50:00.0000] <MikeSmith>
because at this point it's yet another case of, We implemented this, now Hixie has to reverse-engineer what we implemented and make a spec for it

[07:50:13.0000] <MikeSmith>
because at this point it's yet another case of, We implemented this, now Hixie has to reverse-engineer what we implemented and make a spec for it

[07:50:28.0000] <MikeSmith>
which is fucktarded

[07:50:50.0000] <annevk>
no disagreement there :)

[07:51:00.0000] <MikeSmith>
which is fucktarded

[07:51:01.0000] <annevk>
no disagreement there :)

[07:51:02.0000] <jgraham>
MikeSmith: fucktarded it may be, but it is the traditional mode of operation :(

[07:51:16.0000] <jgraham>
MikeSmith: fucktarded it may be, but it is the traditional mode of operation :(

[07:51:32.0000] <MikeSmith>
yeah well

[07:51:44.0000] <MikeSmith>
it obviously doesn't scale

[07:52:00.0000] <MikeSmith>
yeah well

[07:52:01.0000] <MikeSmith>
it obviously doesn't scale

[07:52:02.0000] <MikeSmith>
one dude cannot be expected to single-handedly do that work

[07:52:18.0000] <MikeSmith>
one dude cannot be expected to single-handedly do that work

[07:52:28.0000] <jgraham>
In related news, the facebook mobile test thing that everyone got excited about links to a "feature" that has a Safari blog post for the "spec"

[07:53:00.0000] <jgraham>
In related news, the facebook mobile test thing that everyone got excited about links to a "feature" that has a Safari blog post for the "spec"

[07:54:35.0000] <MikeSmith>
jgraham: eh?

[07:54:41.0000] <MikeSmith>
which one?

[07:55:00.0000] <MikeSmith>
jgraham: eh?

[07:55:01.0000] <MikeSmith>
which one?

[07:55:02.0000] <MikeSmith>
if that is the case, talk to Rick Waldron and have it fixed

[07:55:45.0000] <jgraham>
http://www.webkit.org/blog/176/css-canvas-drawing/

[07:56:00.0000] <jgraham>
http://www.webkit.org/blog/176/css-canvas-drawing/

[07:56:37.0000] <MikeSmith>
jgraham: and_

[07:56:44.0000] <MikeSmith>
jgraham: and?

[07:57:00.0000] <MikeSmith>
jgraham: and_

[07:57:01.0000] <MikeSmith>
jgraham: and?

[07:58:28.0000] <jgraham>
MikeSmith: You asked which one. That one.

[07:58:46.0000] <jgraham>
Is there an actual spec for that?

[07:58:53.0000] <jgraham>
If so the test should link to it

[07:59:00.0000] <jgraham>
MikeSmith: You asked which one. That one.

[07:59:01.0000] <jgraham>
Is there an actual spec for that?

[07:59:02.0000] <jgraham>
If so the test should link to it

[07:59:03.0000] <jgraham>
Anyway it's hardly the only problem with that test

[07:59:06.0000] <jgraham>
Anyway it's hardly the only problem with that test

[07:59:45.0000] <jgraham>
I thought maybe the Mobile Web Community Group were supposed to talk about this sort of thing but so far we had an argument about whether ipads are the only tablets

[08:00:00.0000] <jgraham>
I thought maybe the Mobile Web Community Group were supposed to talk about this sort of thing but so far we had an argument about whether ipads are the only tablets

[08:00:01.0000] <jgraham>
Sorry "Core Mobile Web Platform"

[08:00:19.0000] <jgraham>
Sorry "Core Mobile Web Platform"

[08:00:31.0000] <jgraham>
And afaik the code is still unreleased

[08:00:52.0000] <beverloo>
MikeSmith, already talked to him previously

[08:00:54.0000] <jgraham>
Although thegh do seem to have helpfully minimised the test code so its even harder to read than it was before

[08:00:54.0000] <beverloo>
it's intentional

[08:01:00.0000] <jgraham>
And afaik the code is still unreleased

[08:01:01.0000] <beverloo>
MikeSmith, already talked to him previously

[08:01:01.0000] <beverloo>
the test should "demonstrate what is relevant for authors"

[08:01:02.0000] <jgraham>
Although thegh do seem to have helpfully minimised the test code so its even harder to read than it was before

[08:01:03.0000] <beverloo>
it's intentional

[08:01:04.0000] <beverloo>
the test should "demonstrate what is relevant for authors"

[08:01:53.0000] <jgraham>
I would like to find out who these authors are, exactly

[08:02:00.0000] <jgraham>
I would like to find out who these authors are, exactly

[08:02:41.0000] <MikeSmith>
beverloo: OK

[08:02:57.0000] <jgraham>
Although you would hope that something authors were actually clammering for would have gone from blogpost to draft spec in < 4 years

[08:03:00.0000] <MikeSmith>
beverloo: OK

[08:03:01.0000] <jgraham>
Although you would hope that something authors were actually clammering for would have gone from blogpost to draft spec in < 4 years

[08:06:00.0000] <jgraham>
(In case anyone is listening and so that I can refer to the list later, rng.io also seems to be very confused about the perspective property, really really like Blobs and BlobBuilder - which will die, encourage implementation of old or prefixed forms, and have a really stupid scoring system)

[08:06:01.0000] <jgraham>
(there is probably more)

[08:06:01.0000] <jgraham>
(In case anyone is listening and so that I can refer to the list later, rng.io also seems to be very confused about the perspective property, really really like Blobs and BlobBuilder - which will die, encourage implementation of old or prefixed forms, and have a really stupid scoring system)

[08:06:06.0000] <jgraham>
(there is probably more)

[08:08:00.0000] <jgraham>
(oh and it suggests implementing the details element, which I think should be gated on the WebComponents work, which isn't featured)

[08:08:19.0000] <jgraham>
(oh and it suggests implementing the details element, which I think should be gated on the WebComponents work, which isn't featured)

[08:26:49.0000] <annevk>
preferences on how to display what is essentially a sparse array? (extended jis208)

[08:27:00.0000] <annevk>
preferences on how to display what is essentially a sparse array? (extended jis208)

[08:27:38.0000] <annevk>
I'm thinking something like

[08:27:57.0000] <annevk>
0210 0xFF17 #textual representation of code point

[08:28:00.0000] <annevk>
I'm thinking something like

[08:28:01.0000] <annevk>
0210 0xFF17 #textual representation of code point

[08:28:02.0000] <annevk>
so 4-digit index, tab, code point, tab, comment

[08:28:03.0000] <annevk>
index in decimal

[08:28:11.0000] <annevk>
so 4-digit index, tab, code point, tab, comment

[08:28:20.0000] <annevk>
index in decimal

[08:28:36.0000] <annevk>
index skips FFFD segments

[08:29:00.0000] <annevk>
index skips FFFD segments

[08:30:00.0000] <annevk>
per usual nobody cares?

[08:30:01.0000] <annevk>
in a kingdom of one...

[08:30:09.0000] <annevk>
per usual nobody cares?

[08:30:21.0000] <annevk>
in a kingdom of one...

[08:39:45.0000] <Hixie>
MikeSmith: to be fair, two implementors implemented it (so it wasn't unilateral) and they did so after asking me to spec it (so it's not their fault there was no spec; i probably told them to give us an experimental implementation)

[08:40:00.0000] <Hixie>
MikeSmith: to be fair, two implementors implemented it (so it wasn't unilateral) and they did so after asking me to spec it (so it's not their fault there was no spec; i probably told them to give us an experimental implementation)

[08:40:53.0000] <StoneCypher>
Hixie: i just found out you also like The One True Tool

[08:41:00.0000] <StoneCypher>
Hixie: i just found out you also like The One True Tool

[08:41:01.0000] <StoneCypher>
Hixie: so a beer for you if we're ever in the same city

[08:41:01.0000] <StoneCypher>
Hixie: so a beer for you if we're ever in the same city

[08:41:02.0000] <StoneCypher>
/me <3 princexml

[08:41:19.0000] <StoneCypher>
/me <3 princexml

[08:41:38.0000] <Hixie>
i don't drink :-P

[08:41:49.0000] <StoneCypher>
a coffee?

[08:41:55.0000] <StoneCypher>
ok.

[08:41:58.0000] <Hixie>
i don't do any drugs :-P

[08:42:00.0000] <Hixie>
i don't drink :-P

[08:42:00.0000] <jgraham>
StoneCypher: You should move rapidly to water

[08:42:01.0000] <StoneCypher>
a coffee?

[08:42:02.0000] <StoneCypher>
ok.

[08:42:03.0000] <Hixie>
i don't do any drugs :-P

[08:42:04.0000] <jgraham>
StoneCypher: You should move rapidly to water

[08:42:05.0000] <jgraham>
Hixie is a cheap date

[08:42:06.0000] <jgraham>
;)

[08:42:07.0000] <Hixie>
good fruit juices are more expensive than beer

[08:42:07.0000] <jgraham>
Hixie is a cheap date

[08:42:08.0000] <StoneCypher>
Hixie: An undefined desirable social beverage outing for you

[08:42:15.0000] <jgraham>
;)

[08:42:16.0000] <Hixie>
good fruit juices are more expensive than beer

[08:42:17.0000] <StoneCypher>
Hixie: An undefined desirable social beverage outing for you

[08:42:39.0000] <StoneCypher>
<hixie> I don't consume liquids

[08:43:00.0000] <StoneCypher>
<hixie> I don't consume liquids

[08:43:01.0000] <StoneCypher>
point is, i just wanted to hurrah princexml fans

[08:43:02.0000] <jgraham>
Hixie: Not sure what constitues good, but that is mildly surprising (and almost certainly not true in scandinavia)

[08:43:11.0000] <StoneCypher>
point is, i just wanted to hurrah princexml fans

[08:43:23.0000] <jgraham>
Hixie: Not sure what constitues good, but that is mildly surprising (and almost certainly not true in scandinavia)

[08:43:55.0000] <jgraham>
(I'm mildly surprised it is true in california given the climate)

[08:43:56.0000] <StoneCypher>
jgraham: it is in areas where shipping is the dominant cost, because coffee beans weigh little

[08:44:00.0000] <jgraham>
(I'm mildly surprised it is true in california given the climate)

[08:44:01.0000] <StoneCypher>
jgraham: it is in areas where shipping is the dominant cost, because coffee beans weigh little

[08:44:02.0000] <StoneCypher>
also shelf space costs, etc

[08:44:08.0000] <StoneCypher>
also shelf space costs, etc

[08:44:50.0000] <jgraham>
I sort of imagine that in california you buy the fruit juice from organic farmer's markets

[08:45:00.0000] <jgraham>
I sort of imagine that in california you buy the fruit juice from organic farmer's markets

[08:45:01.0000] <StoneCypher>
i go to a good farmer's market and they never have juices other than cider there

[08:45:02.0000] <jgraham>
But maybe we are comparing the price of good fruit juice in a pub/resturant to bad beer in the same establishment

[08:45:14.0000] <StoneCypher>
i go to a good farmer's market and they never have juices other than cider there

[08:45:23.0000] <jgraham>
But maybe we are comparing the price of good fruit juice in a pub/resturant to bad beer in the same establishment

[08:45:35.0000] <StoneCypher>
i think he meant at a juice bar like odwalla or jamba juice

[08:46:00.0000] <StoneCypher>
i think he meant at a juice bar like odwalla or jamba juice

[08:47:00.0000] <Hixie>
jgraham: how much would freshly pressed kiwi juice cost at your local bar, and how much would the same volume of your favourite beer cost?

[08:47:11.0000] <Hixie>
jgraham: how much would freshly pressed kiwi juice cost at your local bar, and how much would the same volume of your favourite beer cost?

[08:48:43.0000] <jgraham>
Since I don't drink beer… (or alcohol in general)

[08:49:00.0000] <jgraham>
Since I don't drink beer… (or alcohol in general)

[08:49:01.0000] <jgraham>
I'm not sure one can get fresh pressed kizi juice easilly here

[08:49:02.0000] <annevk>
my favorite beer in Sweden prolly costs more

[08:49:03.0000] <jgraham>
*kiwi

[08:49:04.0000] <annevk>
at least last time it was about EUR 20

[08:49:16.0000] <jgraham>
I'm not sure one can get fresh pressed kizi juice easilly here

[08:49:20.0000] <annevk>
my favorite beer in Sweden prolly costs more

[08:49:23.0000] <jgraham>
*kiwi

[08:49:26.0000] <annevk>
at least last time it was about EUR 20

[08:49:41.0000] <annevk>
you should be able to get kiwi juice for less :)

[08:50:00.0000] <annevk>
you should be able to get kiwi juice for less :)

[08:50:00.0000] <Hixie>
jgraham: the cost would involve paying someone to go buy some kiwis, skin them, and press them, and it takes a _lot_ of kiwis for a pint. and kiwis aren't cheap.

[08:50:02.0000] <annevk>
hmm yeah

[08:50:03.0000] <Hixie>
but anyway

[08:50:04.0000] <annevk>
:)

[08:50:24.0000] <annevk>
hmm yeah

[08:50:26.0000] <Hixie>
but anyway

[08:50:27.0000] <annevk>
:)

[08:51:00.0000] <jgraham>
I might accept that per ml kiwi juice is more expensive than many beers.

[08:51:01.0000] <Hixie>
my point is just that fruit juices, when treated the same way as other beverages, no longer seem like the "cheap" option

[08:51:01.0000] <jgraham>
I might accept that per ml kiwi juice is more expensive than many beers.

[08:51:02.0000] <jgraham>
(you probably want to drink less fruit juice though)

[08:51:02.0000] <Hixie>
my point is just that fruit juices, when treated the same way as other beverages, no longer seem like the "cheap" option

[08:51:25.0000] <jgraham>
(you probably want to drink less fruit juice though)

[08:52:00.0000] <matjas>
annevk: “strangely Firefox does it using "visibility: hidden", Opera accepts both ways, Safari/Chrome accepts none” — http://twitter.com/diegoperini/status/180320317238034432 interesting

[08:52:04.0000] <matjas>
annevk: “strangely Firefox does it using "visibility: hidden", Opera accepts both ways, Safari/Chrome accepts none” — http://twitter.com/diegoperini/status/180320317238034432 interesting

[08:57:00.0000] <annevk>
matjas: presumably because when you use visibility, layout still happens

[08:57:07.0000] <annevk>
matjas: presumably because when you use visibility, layout still happens

[08:57:31.0000] <annevk>
matjas: whereas with display:none you don't generate a box and as optimization you can skip stuff (and they prolly skip applying background incorrectly)

[08:58:00.0000] <annevk>
matjas: whereas with display:none you don't generate a box and as optimization you can skip stuff (and they prolly skip applying background incorrectly)

[08:58:01.0000] <annevk>
but you know, that's guessing about implementation details

[08:58:21.0000] <annevk>
but you know, that's guessing about implementation details

[09:01:37.0000] <annevk>
ooh

[09:01:43.0000] <annevk>
jis212 is not entirely interoperable

[09:02:00.0000] <annevk>
ooh

[09:02:01.0000] <annevk>
jis212 is not entirely interoperable

[09:02:02.0000] <annevk>
one minor difference between Opera and Gecko, and a dozen or so between Opera/Gecko and Chrome

[09:02:25.0000] <annevk>
one minor difference between Opera and Gecko, and a dozen or so between Opera/Gecko and Chrome

[09:02:44.0000] <annevk>
well 20

[09:03:00.0000] <annevk>
well 20

[09:03:40.0000] <annevk>
aah

[09:04:00.0000] <annevk>
aah

[09:04:01.0000] <annevk>
difference between Opera and Gecko/Chrome is that Opera emits a normal tilde whereas Gecko/Chrome emit a fullwidth tilde

[09:04:06.0000] <annevk>
difference between Opera and Gecko/Chrome is that Opera emits a normal tilde whereas Gecko/Chrome emit a fullwidth tilde

[09:08:00.0000] <Velmont>
Nice discussion on drinks and stuff. -- I find it hard to find good, interesting stuff in bars etc since I don't really drink alcohol.

[09:08:08.0000] <Velmont>
Nice discussion on drinks and stuff. -- I find it hard to find good, interesting stuff in bars etc since I don't really drink alcohol.

[09:08:57.0000] <Velmont>
Some places has exotic non-alcoholic beer, so I take that, -- but there's very little fruit juice going on. Normally only some sour non-fresh orange juice which I most decidedly don't want.

[09:09:00.0000] <Velmont>
Some places has exotic non-alcoholic beer, so I take that, -- but there's very little fruit juice going on. Normally only some sour non-fresh orange juice which I most decidedly don't want.

[09:09:01.0000] <Velmont>
But having real fresh stuff would be A+. I'd take that.

[09:09:02.0000] <jgraham>
I imagine that one advantage of living in California is that they actually have fruit

[09:09:03.0000] <annevk>
I never get much further than bitter lemon / tonic / cola in a bar

[09:09:13.0000] <Velmont>
But having real fresh stuff would be A+. I'd take that.

[09:09:18.0000] <jgraham>
I imagine that one advantage of living in California is that they actually have fruit

[09:09:21.0000] <annevk>
I never get much further than bitter lemon / tonic / cola in a bar

[09:09:49.0000] <annevk>
but then I like beer too

[09:10:00.0000] <annevk>
but then I like beer too

[09:10:01.0000] <jgraham>
Well, we have fruit too; Apples in the autum, strawberries for 2 weeks, raspberries for two weeks and blueberries for a while

[09:10:02.0000] <Velmont>
Yes, California > Norway there I guess ;-)

[09:10:03.0000] <jgraham>
It doesn't seem to be enough to have a fruit-based drinking culture

[09:10:03.0000] <jgraham>
Well, we have fruit too; Apples in the autum, strawberries for 2 weeks, raspberries for two weeks and blueberries for a while

[09:10:03.0000] <Velmont>
Yes, California > Norway there I guess ;-)

[09:10:27.0000] <jgraham>
It doesn't seem to be enough to have a fruit-based drinking culture

[09:10:34.0000] <Velmont>
Yes. Strawberries are very good though. -- Much better than the cheapo non-tasting stuff we get from spain, turkey etc.

[09:10:47.0000] <jgraham>
Indeed, soft fruits like cold climates

[09:11:00.0000] <Velmont>
Yes. Strawberries are very good though. -- Much better than the cheapo non-tasting stuff we get from spain, turkey etc.

[09:11:01.0000] <jgraham>
Indeed, soft fruits like cold climates

[09:11:02.0000] <jgraham>
Also, the varieties that last long enough to be transported are not the ones that taste good

[09:11:14.0000] <jgraham>
Also, the varieties that last long enough to be transported are not the ones that taste good

[09:11:49.0000] <Velmont>
:-) -- I'm SO looking forward to summer. Has been so hot in Oslo last days, - early spring I hope.

[09:12:00.0000] <Velmont>
:-) -- I'm SO looking forward to summer. Has been so hot in Oslo last days, - early spring I hope.

[09:12:01.0000] <jgraham>
You mean as much as +10?

[09:12:02.0000] <jgraham>
:)

[09:12:10.0000] <jgraham>
You mean as much as +10?

[09:12:13.0000] <jgraham>
:)

[09:12:47.0000] <jgraham>
(I think it reached +12 here which is crazy-warm for March)

[09:13:00.0000] <jgraham>
(I think it reached +12 here which is crazy-warm for March)

[09:13:01.0000] <Velmont>
jgraham: +17 in shadows on monday, used 1h lunch just sitting out in the sun. Niiice. -- Has been really sunny every day. --- BTW, that's actually the highest ever recorded in Oslo so early.

[09:13:11.0000] <Velmont>
jgraham: +17 in shadows on monday, used 1h lunch just sitting out in the sun. Niiice. -- Has been really sunny every day. --- BTW, that's actually the highest ever recorded in Oslo so early.

[09:25:00.0000] <jgraham>
+17? Crazy times

[09:25:26.0000] <jgraham>
+17? Crazy times

[09:31:32.0000] <bga>
http://pastebin.com/NKbnh8q8

[09:32:00.0000] <bga>
http://pastebin.com/NKbnh8q8

[09:42:59.0000] <Velmont>
Wat. Seems silly.

[09:51:57.0000] <Philip`>
/me wonders if they're aware that the IP addresses don't each correspond to a single server, they're pools of many servers spread around the world

[09:52:00.0000] <Philip`>
/me wonders if they're aware that the IP addresses don't each correspond to a single server, they're pools of many servers spread around the world

[09:53:00.0000] <Velmont>
Would think so, as it is very common knowlegde.

[09:53:01.0000] <StoneCypher>
assuming sophistication of an ill organized mob of script kiddies?

[09:53:01.0000] <Velmont>
Would think so, as it is very common knowlegde.

[09:53:02.0000] <StoneCypher>
i wouldn't.

[09:53:23.0000] <StoneCypher>
assuming sophistication of an ill organized mob of script kiddies?

[09:53:26.0000] <StoneCypher>
i wouldn't.

[10:39:50.0000] <annevk>
ugh

[10:40:00.0000] <annevk>
ugh

[10:40:01.0000] <annevk>
shift_jis to euc-jp is one ugly algorithm

[10:40:02.0000] <annevk>
and not even properly explained

[10:40:03.0000] <annevk>
it works

[10:40:08.0000] <annevk>
and not even properly explained

[10:40:11.0000] <annevk>
it works

[10:40:35.0000] <annevk>
the CJKV book just explains the C code

[10:40:37.0000] <annevk>
not the logic

[10:40:47.0000] <annevk>
lame

[10:41:00.0000] <annevk>
the CJKV book just explains the C code

[10:41:01.0000] <annevk>
not the logic

[10:41:02.0000] <annevk>
lame

[10:41:03.0000] <annevk>
i guess i'll just copy and paste to English

[10:41:05.0000] <annevk>
i guess i'll just copy and paste to English

[11:09:41.0000] <TabAtkins_>
annevk: re: the bug, presumably you're talking just about Selectors-in-JS, not the existing element() feature?

[11:10:00.0000] <TabAtkins_>
annevk: re: the bug, presumably you're talking just about Selectors-in-JS, not the existing element() feature?

[11:12:49.0000] <annevk>
if select() takes an arbitrary Selector that seems kind of weird too

[11:13:00.0000] <annevk>
if select() takes an arbitrary Selector that seems kind of weird too

[11:13:01.0000] <annevk>
I think it's better if you keep in-tree and out-of-tree as separate concepts

[11:13:02.0000] <TabAtkins_>
When that happens, the alternate behavior will only trigger for a single id selector.

[11:13:04.0000] <annevk>
I think it's better if you keep in-tree and out-of-tree as separate concepts

[11:13:16.0000] <TabAtkins_>
When that happens, the alternate behavior will only trigger for a single id selector.

[11:13:32.0000] <annevk>
and especially keep Selectors only matching in-tree

[11:14:00.0000] <annevk>
and especially keep Selectors only matching in-tree

[11:15:00.0000] <TabAtkins_>
I disagree, and would like to keep the feature as it's currently written.  (It's awkward to do so, since bare idents look like tagname selectors...)

[11:15:01.0000] <TabAtkins_>
But I'm fine if the answer is "no, it shouldn't have any relevance to DOM".

[11:15:10.0000] <TabAtkins_>
I disagree, and would like to keep the feature as it's currently written.  (It's awkward to do so, since bare idents look like tagname selectors...)

[11:15:23.0000] <TabAtkins_>
But I'm fine if the answer is "no, it shouldn't have any relevance to DOM".

[11:20:00.0000] <annevk>
modifying Selectors to match out-of-tree elements sounds very much like the wrong approach

[11:20:17.0000] <annevk>
modifying Selectors to match out-of-tree elements sounds very much like the wrong approach

[11:20:49.0000] <TabAtkins_>
Shrug.  It seems useful here, and it's what Mozilla is already doing.

[11:20:50.0000] <annevk>
I'm not sure if that is what's going on here though as I haven't really read the element() proposal

[11:21:00.0000] <TabAtkins_>
Shrug.  It seems useful here, and it's what Mozilla is already doing.

[11:21:01.0000] <annevk>
I'm not sure if that is what's going on here though as I haven't really read the element() proposal

[11:21:02.0000] <annevk>
that's not a very compelling argument to break a Selector invariant

[11:21:03.0000] <TabAtkins_>
So, short summary:

[11:21:12.0000] <annevk>
that's not a very compelling argument to break a Selector invariant

[11:21:12.0000] <TabAtkins_>
So, short summary:

[11:21:28.0000] <TabAtkins_>
element() takes an id selector, and represents an image that looks like the referenced element.

[11:21:29.0000] <annevk>
next you're going to suggest we should let them match Text nodes :)

[11:21:58.0000] <jwalden>
/me wants support for selectors that match comment nodes

[11:22:00.0000] <TabAtkins_>
element() takes an id selector, and represents an image that looks like the referenced element.

[11:22:01.0000] <annevk>
next you're going to suggest we should let them match Text nodes :)

[11:22:02.0000] <jwalden>
/me wants support for selectors that match comment nodes

[11:22:03.0000] <TabAtkins_>
Right now we phrase the out-of-doc thing as something that host languages can define.

[11:22:04.0000] <TabAtkins_>
But we may just make it explicit and put it into CSSOM or something.

[11:22:07.0000] <TabAtkins_>
Right now we phrase the out-of-doc thing as something that host languages can define.

[11:22:16.0000] <TabAtkins_>
But we may just make it explicit and put it into CSSOM or something.

[11:24:00.0000] <annevk>
it's very weird to have IDs matched outside the tree

[11:24:23.0000] <annevk>
it's very weird to have IDs matched outside the tree

[11:24:28.0000] <annevk>
there's no such feature currently

[11:24:47.0000] <Ms2ger>
element.getElementById?

[11:24:58.0000] <annevk>
Ms2ger: I thought that only matched in the tree

[11:25:00.0000] <annevk>
there's no such feature currently

[11:25:01.0000] <Ms2ger>
element.getElementById?

[11:25:02.0000] <annevk>
Ms2ger: I thought that only matched in the tree

[11:25:03.0000] <annevk>
it does

[11:25:22.0000] <annevk>
it does

[11:25:28.0000] <Ms2ger>
Oh

[11:25:47.0000] <Ms2ger>
In the subtree rooted at the element, you mean

[11:26:00.0000] <Ms2ger>
Oh

[11:26:01.0000] <Ms2ger>
In the subtree rooted at the element, you mean

[11:26:31.0000] <annevk>
I mean it doesn't match e=document.createElement("test");e.id='x'

[11:26:43.0000] <Ms2ger>
Yeah

[11:27:00.0000] <annevk>
I mean it doesn't match e=document.createElement("test");e.id='x'

[11:27:01.0000] <Ms2ger>
Yeah

[11:27:02.0000] <TabAtkins_>
Strictly, element() *doesn't* match ids outside the tree.

[11:27:03.0000] <Ms2ger>
I meant that it does match elements that aren't in a document

[11:27:04.0000] <Ms2ger>
(On which the spec was wrong previously)

[11:27:08.0000] <TabAtkins_>
Strictly, element() *doesn't* match ids outside the tree.

[11:27:12.0000] <Ms2ger>
I meant that it does match elements that aren't in a document

[11:27:25.0000] <Ms2ger>
(On which the spec was wrong previously)

[11:27:47.0000] <TabAtkins_>
However, it an id selector didn't match an element, it instead consults the map.

[11:27:54.0000] <TabAtkins_>
Which can contain in-document or out-of-document elements.

[11:28:00.0000] <TabAtkins_>
However, it an id selector didn't match an element, it instead consults the map.

[11:28:01.0000] <TabAtkins_>
Which can contain in-document or out-of-document elements.

[11:38:00.0000] <annevk>
Ms2ger: oh

[11:38:08.0000] <annevk>
Ms2ger: oh

[11:38:29.0000] <annevk>
TabAtkins_: I think it would be better to have a special look-in-map thing than this fallback magic

[11:38:57.0000] <annevk>
TabAtkins_: e.g. have element() for in-document and element-map() for this

[11:39:00.0000] <annevk>
TabAtkins_: I think it would be better to have a special look-in-map thing than this fallback magic

[11:39:01.0000] <annevk>
TabAtkins_: e.g. have element() for in-document and element-map() for this

[11:59:00.0000] <TabAtkins_>
annevk: That seems silly to me.

[11:59:21.0000] <TabAtkins_>
annevk: That seems silly to me.

[12:08:00.0000] <annevk>
why?

[12:08:21.0000] <annevk>
why?

[12:09:49.0000] <Hixie>
i have to say i do find it weird to have the #id mechanism match things by something other than the element's one true ID

[12:10:00.0000] <Hixie>
i have to say i do find it weird to have the #id mechanism match things by something other than the element's one true ID

[12:10:01.0000] <Hixie>
especially so soon after we've gone to the effort of erradicating all possible ways of having more than one ID

[12:10:14.0000] <Hixie>
especially so soon after we've gone to the effort of erradicating all possible ways of having more than one ID

[12:10:49.0000] <annevk>
oh yeah, if there's a custom identifier it seems even more wrong to use Selectors

[12:11:00.0000] <annevk>
oh yeah, if there's a custom identifier it seems even more wrong to use Selectors

[12:11:01.0000] <TabAtkins_>
Shrug.

[12:11:22.0000] <TabAtkins_>
Shrug.

[12:12:36.0000] <rniwa>
annevk, Ms2ger: regions spec apparently have flow change event or whatever

[12:12:41.0000] <rniwa>
that fires after flow changes :(

[12:13:00.0000] <rniwa>
annevk, Ms2ger: regions spec apparently have flow change event or whatever

[12:13:01.0000] <rniwa>
that fires after flow changes :(

[12:13:02.0000] <Ms2ger>
I sure hope nobody implements the regions cssom

[12:13:03.0000] <Hixie>
events from layout? lordy

[12:13:04.0000] <rniwa>
Ms2ger: webkit is doing that :(

[12:13:15.0000] <Ms2ger>
I sure hope nobody implements the regions cssom

[12:13:24.0000] <Hixie>
events from layout? lordy

[12:13:25.0000] <rniwa>
Ms2ger: webkit is doing that :(

[12:13:34.0000] <rniwa>
i'm trying to convince folks not to do it

[12:13:34.0000] <TabAtkins_>
We need some way to be able to refer to elements outside the DOM, it seems silly to add a second function with identical functionality just to do that type of referring, and leaning on the #id syntax appears to be the easiest way to merge the two functionalities together.

[12:13:56.0000] <TabAtkins_>
rniwa: Complain about it on www-style?

[12:14:00.0000] <rniwa>
i'm trying to convince folks not to do it

[12:14:01.0000] <TabAtkins_>
We need some way to be able to refer to elements outside the DOM, it seems silly to add a second function with identical functionality just to do that type of referring, and leaning on the #id syntax appears to be the easiest way to merge the two functionalities together.

[12:14:02.0000] <TabAtkins_>
rniwa: Complain about it on www-style?

[12:14:03.0000] <rniwa>
TabAtkins_: i'm kicked out of www-style for some random mail deamon issue

[12:14:24.0000] <rniwa>
TabAtkins_: i'm kicked out of www-style for some random mail deamon issue

[12:14:32.0000] <TabAtkins_>
rniwa: Ah, that sucks.

[12:14:37.0000] <Ms2ger>
It seems like there's more things wrong than right about that part of the spec...

[12:14:39.0000] <TabAtkins_>
Send the email to me and I'll forward it?

[12:15:00.0000] <TabAtkins_>
rniwa: Ah, that sucks.

[12:15:00.0000] <rniwa>
TabAtkins_: maybe.

[12:15:01.0000] <Ms2ger>
It seems like there's more things wrong than right about that part of the spec...

[12:15:02.0000] <TabAtkins_>
Send the email to me and I'll forward it?

[12:15:03.0000] <rniwa>
TabAtkins_: maybe.

[12:15:04.0000] <rniwa>
TabAtkins_: i'm hoping that people who are more familiar with the matter can comment on it

[12:15:05.0000] <annevk>
it's not identical functionality if you need a CSSElementMap etc.

[12:15:12.0000] <rniwa>
TabAtkins_: i'm hoping that people who are more familiar with the matter can comment on it

[12:15:19.0000] <annevk>
it's not identical functionality if you need a CSSElementMap etc.

[12:15:32.0000] <annevk>
it's very much a completely separate thing

[12:16:00.0000] <annevk>
it's very much a completely separate thing

[12:16:00.0000] <Hixie>
yeah if we're adding a whole bunch of api surface anyway, what's a new selector

[12:16:02.0000] <TabAtkins_>
rniwa: I'm not familiar with the matter, so shrug.

[12:16:10.0000] <TabAtkins_>
rniwa: I'm not familiar with the matter, so shrug.

[12:16:58.0000] <TabAtkins_>
Ms2ger: Details?  I've been fixing odd corners as they come up, but there isn't much.

[12:17:00.0000] <TabAtkins_>
Ms2ger: Details?  I've been fixing odd corners as they come up, but there isn't much.

[12:23:00.0000] <TabAtkins_>
Argh, I can't get my fingers to stop typing "cvs commit" when I mean "hg commit".

[12:23:22.0000] <TabAtkins_>
Argh, I can't get my fingers to stop typing "cvs commit" when I mean "hg commit".

[12:23:47.0000] <Ms2ger>
alias cvs hg

[12:23:54.0000] <TabAtkins_>
I was thinking about that.

[12:24:00.0000] <Ms2ger>
alias cvs hg

[12:24:01.0000] <TabAtkins_>
I was thinking about that.

[12:24:30.0000] <annevk>
Ms2ger: afaict http://mxr.mozilla.org/mozilla-central/source/intl/uconv/ucvja/nsJapaneseToUnicode.cpp#205 is dead code

[12:25:00.0000] <annevk>
Ms2ger: afaict http://mxr.mozilla.org/mozilla-central/source/intl/uconv/ucvja/nsJapaneseToUnicode.cpp#205 is dead code

[12:25:01.0000] <annevk>
Ms2ger: same goes for some stuff in japanese.map; also, http://mxr.mozilla.org/mozilla-central/source/intl/uconv/ucvja/japanese.map#80 0x80 is not handled there

[12:25:24.0000] <annevk>
Ms2ger: same goes for some stuff in japanese.map; also, http://mxr.mozilla.org/mozilla-central/source/intl/uconv/ucvja/japanese.map#80 0x80 is not handled there

[12:26:00.0000] <Ms2ger>
Looks like it's called from the old HTML parser

[12:26:01.0000] <Ms2ger>
Not sure if it's dead yet

[12:26:13.0000] <Ms2ger>
Looks like it's called from the old HTML parser

[12:26:25.0000] <Ms2ger>
Not sure if it's dead yet

[12:28:00.0000] <annevk>
o_O

[12:28:01.0000] <annevk>
that's some weird stuff

[12:28:02.0000] <Ms2ger>
The old HTML parser?

[12:28:03.0000] <Ms2ger>
Yes

[12:28:04.0000] <annevk>
o_O

[12:28:11.0000] <annevk>
that's some weird stuff

[12:28:19.0000] <Ms2ger>
The old HTML parser?

[12:28:20.0000] <Ms2ger>
Yes

[12:32:00.0000] <annevk>
TabAtkins_: if you're not interested in feedback you should not edit specs

[12:32:01.0000] <annevk>
shrug away

[12:32:17.0000] <annevk>
TabAtkins_: if you're not interested in feedback you should not edit specs

[12:32:27.0000] <annevk>
shrug away

[12:32:32.0000] <Ms2ger>
Uh?

[12:32:37.0000] <TabAtkins_>
annevk: Uh, what.

[12:32:42.0000] <annevk>
https://www.w3.org/Bugs/Public/show_bug.cgi?id=16169#c5

[12:32:43.0000] <TabAtkins_>
Or let me put that more appropriately:

[12:32:44.0000] <TabAtkins_>
lolwut

[12:32:59.0000] <TabAtkins_>
I rejected your feedback because I disagree.

[12:33:00.0000] <Ms2ger>
Uh?

[12:33:01.0000] <TabAtkins_>
annevk: Uh, what.

[12:33:02.0000] <annevk>
https://www.w3.org/Bugs/Public/show_bug.cgi?id=16169#c5

[12:33:03.0000] <TabAtkins_>
Or let me put that more appropriately:

[12:33:04.0000] <TabAtkins_>
lolwut

[12:33:05.0000] <TabAtkins_>
I rejected your feedback because I disagree.

[12:33:06.0000] <TabAtkins_>
That's a perfectly normal thing to do.

[12:33:17.0000] <TabAtkins_>
That's a perfectly normal thing to do.

[12:33:33.0000] <TabAtkins_>
As is attempting to focus a bug on the question at hand rather than a related tangent.

[12:33:36.0000] <annevk>
not if there's no argument

[12:34:00.0000] <TabAtkins_>
As is attempting to focus a bug on the question at hand rather than a related tangent.

[12:34:01.0000] <annevk>
not if there's no argument

[12:34:02.0000] <TabAtkins_>
The argument was "I think it's fine, and it matches an existing implementation."  Since your argument was "I think it's better this way", that seems about right.

[12:34:19.0000] <TabAtkins_>
The argument was "I think it's fine, and it matches an existing implementation."  Since your argument was "I think it's better this way", that seems about right.

[12:35:51.0000] <TabAtkins_>
There's nothing technically wrong with the feature as specced; you disagree with it from an aesthetic perspective.  That's not unimportant, but it does mean that it's hard to be "right".

[12:36:00.0000] <TabAtkins_>
There's nothing technically wrong with the feature as specced; you disagree with it from an aesthetic perspective.  That's not unimportant, but it does mean that it's hard to be "right".

[12:37:00.0000] <annevk>
it breaks an invariant of selectors

[12:37:01.0000] <annevk>
that's not aesthetics

[12:37:14.0000] <annevk>
it breaks an invariant of selectors

[12:37:19.0000] <annevk>
that's not aesthetics

[12:38:00.0000] <TabAtkins_>
But it doesn't.

[12:38:16.0000] <TabAtkins_>
But it doesn't.

[12:38:28.0000] <hober>
/me agrees with annevk

[12:38:34.0000] <TabAtkins_>
Because there isn't any such invariant.

[12:39:00.0000] <hober>
/me agrees with annevk

[12:39:01.0000] <TabAtkins_>
Because there isn't any such invariant.

[12:41:00.0000] <AryehGregor>
If we're talking about #foo meaning anything other than "an element in the document with id="foo"", I also agree with annevk.

[12:41:14.0000] <AryehGregor>
If we're talking about #foo meaning anything other than "an element in the document with id="foo"", I also agree with annevk.

[13:25:57.0000] <jgraham>
+1 on #id matching out of document being all kinds of wrong

[13:26:00.0000] <jgraham>
+1 on #id matching out of document being all kinds of wrong

[13:28:00.0000] <smaug____>
ID matching out of document sounds broken

[13:28:11.0000] <smaug____>
ID matching out of document sounds broken

[13:31:48.0000] <TabAtkins_>
Sigh.  I strongly suspect the context is lost here.

[13:32:00.0000] <TabAtkins_>
Sigh.  I strongly suspect the context is lost here.

[13:32:43.0000] <TabAtkins_>
In particular, I could just define that, for the purpose of selector matching, elements in the CSSElementMap are "in document" but are root elements following the normal document root.

[13:33:00.0000] <TabAtkins_>
In particular, I could just define that, for the purpose of selector matching, elements in the CSSElementMap are "in document" but are root elements following the normal document root.

[13:33:37.0000] <TabAtkins_>
This is *not* about, say, creating an element with an id from script, not inserting it into the document, and then expecting document.getElementById('foo') to return it.

[13:33:46.0000] <rniwa>
AryehGregor, annevk: https://bugs.webkit.org/show_bug.cgi?id=81141

[13:34:00.0000] <TabAtkins_>
This is *not* about, say, creating an element with an id from script, not inserting it into the document, and then expecting document.getElementById('foo') to return it.

[13:34:01.0000] <rniwa>
AryehGregor, annevk: https://bugs.webkit.org/show_bug.cgi?id=81141

[13:34:01.0000] <TabAtkins_>
(I wouldn't go to that trouble, because there's no need to, but whatever.)

[13:34:03.0000] <rniwa>
fixing a mutation event bug resulted in a regression :(

[13:34:04.0000] <rniwa>
i.e. we can't implement mutation events as spec'ed. if we did, we break the web

[13:34:06.0000] <rniwa>
fixing a mutation event bug resulted in a regression :(

[13:34:21.0000] <rniwa>
i.e. we can't implement mutation events as spec'ed. if we did, we break the web

[13:34:33.0000] <rniwa>
epic fail...

[13:34:57.0000] <Hixie>
TabAtkins_: fwiw my problem isn't with it matching things out of document, i think that selectors matching things out of document is fine, that the scope should be up to whoever is defining the selector context

[13:35:00.0000] <rniwa>
epic fail...

[13:35:01.0000] <Hixie>
TabAtkins_: fwiw my problem isn't with it matching things out of document, i think that selectors matching things out of document is fine, that the scope should be up to whoever is defining the selector context

[13:35:02.0000] <Hixie>
TabAtkins_: my problem is with ID selectors matching things that aren't IDs :-)

[13:35:03.0000] <jgraham>
TabAtkins_: You could define that, but I still think it is weird and wrong

[13:35:04.0000] <AryehGregor>
/me agrees with Hixie 

[13:35:07.0000] <Hixie>
TabAtkins_: my problem is with ID selectors matching things that aren't IDs :-)

[13:35:19.0000] <jgraham>
TabAtkins_: You could define that, but I still think it is weird and wrong

[13:35:24.0000] <AryehGregor>
/me agrees with Hixie 

[13:36:00.0000] <TabAtkins_>
Hixie: What's wrong with defining more than just the @id attribute to provide an ID for an element?

[13:36:14.0000] <TabAtkins_>
Hixie: What's wrong with defining more than just the @id attribute to provide an ID for an element?

[13:36:35.0000] <Ms2ger>
We just killed that

[13:36:43.0000] <Hixie>
TabAtkins_: we just spent a bunch of effort erradicating every last thing that allowed multiple IDs per element (ask anne and Ms2ger for why)

[13:36:51.0000] <Ms2ger>
Ask anne :)

[13:36:53.0000] <TabAtkins_>
I'd like some context, yeah.

[13:37:00.0000] <Ms2ger>
We just killed that

[13:37:01.0000] <Hixie>
TabAtkins_: we just spent a bunch of effort erradicating every last thing that allowed multiple IDs per element (ask anne and Ms2ger for why)

[13:37:02.0000] <Ms2ger>
Ask anne :)

[13:37:03.0000] <TabAtkins_>
I'd like some context, yeah.

[13:39:00.0000] <jgraham>
/me also doesn't like the fact that the "same" selector matches different things according to context

[13:39:21.0000] <jgraham>
/me also doesn't like the fact that the "same" selector matches different things according to context

[13:43:00.0000] <othermaciej>
TabAtkins_: I think it would be super confusing for the id selector to match by something that's not visible to getElementById()

[13:43:20.0000] <othermaciej>
TabAtkins_: I think it would be super confusing for the id selector to match by something that's not visible to getElementById()

[13:43:37.0000] <gsnedders>
/me agrees with othermaciej 

[13:43:57.0000] <annevk>
TabAtkins_: e.g. there was xml:id, DTD IDs, id="", etc.

[13:44:00.0000] <gsnedders>
/me agrees with othermaciej 

[13:44:01.0000] <annevk>
TabAtkins_: e.g. there was xml:id, DTD IDs, id="", etc.

[13:44:02.0000] <annevk>
TabAtkins_: now there's just id=""

[13:44:03.0000] <TabAtkins_>
annevk: Those all affected the DOM (or at least, were supposed to), right?

[13:44:16.0000] <TabAtkins_>
annevk: Those all affected the DOM (or at least, were supposed to), right?

[13:44:39.0000] <annevk>
they were all ways to give an element multiple IDs

[13:45:00.0000] <annevk>
they were all ways to give an element multiple IDs

[13:45:40.0000] <TabAtkins_>
othermaciej, jgraham : I welcome suggestions on how to fit it into the syntax otherwise.

[13:46:00.0000] <TabAtkins_>
othermaciej, jgraham : I welcome suggestions on how to fit it into the syntax otherwise.

[13:46:01.0000] <TabAtkins_>
Note our current constraints: We expect element() to be extended in the future to accept arbitrary selectors (not just id selectors, as it does currently). We also expect it to be extended to accept urls as <string>s.

[13:46:18.0000] <TabAtkins_>
Note our current constraints: We expect element() to be extended in the future to accept arbitrary selectors (not just id selectors, as it does currently). We also expect it to be extended to accept urls as <string>s.

[13:46:58.0000] <annevk>
rniwa: breaking mutation events works for me

[13:47:00.0000] <annevk>
rniwa: breaking mutation events works for me

[13:47:01.0000] <othermaciej>
TabAtkins_: one possibility is to have a list, rather than a map, of out-of-document elements whose actual id attribute will be visible to id selectors, getElemetById(), and all other id lookup mechanisms

[13:47:02.0000] <annevk>
rniwa: the plan is to nuke them completely

[13:47:03.0000] <rniwa>
annevk: ok, thanks

[13:47:09.0000] <othermaciej>
TabAtkins_: one possibility is to have a list, rather than a map, of out-of-document elements whose actual id attribute will be visible to id selectors, getElemetById(), and all other id lookup mechanisms

[13:47:11.0000] <annevk>
rniwa: the plan is to nuke them completely

[13:47:12.0000] <rniwa>
annevk: ok, thanks

[13:47:43.0000] <annevk>
rniwa: the more they become broken, the easier it is to convince people to use mutation observers...

[13:47:44.0000] <othermaciej>
TabAtkins_: I'm not sure offhand if that is a good idea, but at least it avoids multiple ids and selector vs. DOM divergence on what is an id

[13:48:00.0000] <annevk>
rniwa: the more they become broken, the easier it is to convince people to use mutation observers...

[13:48:01.0000] <othermaciej>
TabAtkins_: I'm not sure offhand if that is a good idea, but at least it avoids multiple ids and selector vs. DOM divergence on what is an id

[13:49:55.0000] <TabAtkins_>
othermaciej: Interesting.

[13:50:00.0000] <TabAtkins_>
othermaciej: Interesting.

[13:53:39.0000] <Hixie>
that would also let us kill the csselementmap

[13:53:50.0000] <Hixie>
i'm always in favour of removing features without hurting use cases :-)

[13:54:00.0000] <Hixie>
that would also let us kill the csselementmap

[13:54:01.0000] <Hixie>
i'm always in favour of removing features without hurting use cases :-)

[13:54:47.0000] <TabAtkins_>
Well, it would kill it by replacing it with something else.

[13:54:57.0000] <Hixie>
can i just say that it is mildly confusing that what WebIDL calls sequences (sequence<foo>) is an Array and what it calls arrays (foo[]) is not?

[13:55:00.0000] <TabAtkins_>
Well, it would kill it by replacing it with something else.

[13:55:01.0000] <Hixie>
can i just say that it is mildly confusing that what WebIDL calls sequences (sequence<foo>) is an Array and what it calls arrays (foo[]) is not?

[13:55:01.0000] <TabAtkins_>
With the "something else" being roughly equally complicated.

[13:55:02.0000] <TabAtkins_>
With the "something else" being roughly equally complicated.

[13:55:03.0000] <Hixie>
TabAtkins_: i guess

[13:55:08.0000] <Hixie>
TabAtkins_: i guess

[13:55:30.0000] <TabAtkins_>
The use-case I'm trying to hit is really important and needs *something* along these lines, no matter the syntax.

[13:55:35.0000] <Hixie>
TabAtkins_: makes your life easier though, since it would be css-independent

[13:55:50.0000] <Hixie>
makes my life easier too

[13:55:53.0000] <Hixie>
it would be anne's problem :-D

[13:56:00.0000] <TabAtkins_>
The use-case I'm trying to hit is really important and needs *something* along these lines, no matter the syntax.

[13:56:01.0000] <Hixie>
TabAtkins_: makes your life easier though, since it would be css-independent

[13:56:02.0000] <Hixie>
makes my life easier too

[13:56:03.0000] <Hixie>
it would be anne's problem :-D

[13:56:04.0000] <annevk>
Hixie: I think sequence is not necessarily an array

[13:56:23.0000] <annevk>
Hixie: I think sequence is not necessarily an array

[13:56:39.0000] <Hixie>
annevk: "IDL sequence<T> values are represented by ECMAScript Array values"

[13:56:43.0000] <TabAtkins_>
annevk doesn't think there's a use-case for it in JS (and I agree). The only benefit of making this visible to the rest of DOM is to make sure that element() selectors match the same elements that JS selectors do.

[13:57:00.0000] <Hixie>
annevk: "IDL sequence<T> values are represented by ECMAScript Array values"

[13:57:01.0000] <TabAtkins_>
annevk doesn't think there's a use-case for it in JS (and I agree). The only benefit of making this visible to the rest of DOM is to make sure that element() selectors match the same elements that JS selectors do.

[13:57:02.0000] <annevk>
Hixie: oh I thought sequence stuff was for passing in arguments and could be anything array-like

[13:57:03.0000] <annevk>
hmm

[13:57:17.0000] <annevk>
Hixie: oh I thought sequence stuff was for passing in arguments and could be anything array-like

[13:57:18.0000] <annevk>
hmm

[13:57:28.0000] <annevk>
I keep getting confused by Web IDL

[13:57:31.0000] <Hixie>
annevk: i'm talking about return values, might be different for receiving values

[13:57:32.0000] <annevk>
not good :/

[13:58:00.0000] <annevk>
I keep getting confused by Web IDL

[13:58:01.0000] <Hixie>
annevk: i'm talking about return values, might be different for receiving values

[13:58:01.0000] <annevk>
I didn't know it could be a return value

[13:58:02.0000] <annevk>
not good :/

[13:58:03.0000] <annevk>
I didn't know it could be a return value

[13:59:00.0000] <annevk>
so sequences can only be returned from methods per http://dev.w3.org/2006/webapi/WebIDL/#idl-sequence

[13:59:16.0000] <annevk>
so sequences can only be returned from methods per http://dev.w3.org/2006/webapi/WebIDL/#idl-sequence

[13:59:32.0000] <Hixie>
right

[14:00:00.0000] <Hixie>
right

[14:07:34.0000] <othermaciej>
Hixie: I think the [] stuff should possibly be just made a synonym for sequence<>, if there's nothing actively using it

[14:07:45.0000] <othermaciej>
I don't think the [] fake arrays are very useful

[14:07:57.0000] <Ms2ger>
But live stuff

[14:08:00.0000] <othermaciej>
Hixie: I think the [] stuff should possibly be just made a synonym for sequence<>, if there's nothing actively using it

[14:08:01.0000] <othermaciej>
I don't think the [] fake arrays are very useful

[14:08:02.0000] <Ms2ger>
But live stuff

[14:08:03.0000] <annevk>
othermaciej: actual JS Arrays can be mutated

[14:08:25.0000] <annevk>
othermaciej: actual JS Arrays can be mutated

[14:08:37.0000] <Hixie>
yeah i use the [] thing

[14:08:41.0000] <annevk>
othermaciej: which is problematic

[14:09:00.0000] <Hixie>
yeah i use the [] thing

[14:09:01.0000] <annevk>
othermaciej: which is problematic

[14:09:32.0000] <annevk>
othermaciej: I do agree it would be nice if it was all somewhat simpler though, but I don't know enough about all the constraints

[14:10:00.0000] <annevk>
othermaciej: I do agree it would be nice if it was all somewhat simpler though, but I don't know enough about all the constraints

[14:12:29.0000] <jgraham>
Seems like the nice solution would be to invent a time machine and add immutable arrays to js about 15 years ago

[14:13:00.0000] <jgraham>
Seems like the nice solution would be to invent a time machine and add immutable arrays to js about 15 years ago

[14:13:01.0000] <jgraham>
Dunno how much it would help to do it now (except that immutable data structures are pretty nice in some situations ofc)

[14:13:11.0000] <jgraham>
Dunno how much it would help to do it now (except that immutable data structures are pretty nice in some situations ofc)

[14:13:44.0000] <Ms2ger>
Well, just immutable by script

[14:14:00.0000] <Ms2ger>
Well, just immutable by script

[14:14:01.0000] <Hixie>
if you invent a time machine, i have some higher priorities for you

[14:14:15.0000] <Hixie>
if you invent a time machine, i have some higher priorities for you

[14:14:39.0000] <Hixie>
even just within the scope of js!

[14:14:41.0000] <Ms2ger>
longdesc?

[14:14:45.0000] <Philip`>
If you invent a time machine you don't need to bother with priorities, you can just do everything simultaneously

[14:14:56.0000] <Hixie>
Philip`: depends how it works!

[14:15:00.0000] <Hixie>
even just within the scope of js!

[14:15:01.0000] <Ms2ger>
longdesc?

[14:15:02.0000] <Philip`>
If you invent a time machine you don't need to bother with priorities, you can just do everything simultaneously

[14:15:03.0000] <Hixie>
Philip`: depends how it works!

[14:15:29.0000] <Ms2ger>
But as it's unlikely we'll invent any kind, please go ahead and fix HTML bugs :)

[14:16:00.0000] <Ms2ger>
But as it's unlikely we'll invent any kind, please go ahead and fix HTML bugs :)

[14:19:39.0000] <annevk>
if we do, make everything utf-8 only kthxbai

[14:20:00.0000] <annevk>
if we do, make everything utf-8 only kthxbai

[14:38:31.0000] <annevk>
http://www.ted.com/talks/rob_reid_the_8_billion_ipod.html

[14:39:00.0000] <annevk>
http://www.ted.com/talks/rob_reid_the_8_billion_ipod.html

[14:40:43.0000] <bga>
http://www.opencalais.com/about

[14:41:00.0000] <bga>
http://www.opencalais.com/about

[14:41:31.0000] <Ms2ger>
http://www.catsguru.com/wp-content/uploads/2010/09/new-kitten.jpg

[14:42:00.0000] <Ms2ger>
http://www.catsguru.com/wp-content/uploads/2010/09/new-kitten.jpg

[14:43:00.0000] <gsnedders>
/me definitely prefers Ms2ger's link

[14:43:03.0000] <gsnedders>
/me definitely prefers Ms2ger's link

[14:46:30.0000] <bga>
photoshop

[14:47:00.0000] <bga>
photoshop

[14:54:00.0000] <jgraham>
Open Calais? Presumably that's when there isn't a strike on in France

[14:54:14.0000] <jgraham>
Open Calais? Presumably that's when there isn't a strike on in France

[14:54:28.0000] <Ms2ger>
One day a year?

[14:54:55.0000] <jgraham>
Oh, do they have a special holiday?

[14:55:00.0000] <Ms2ger>
One day a year?

[14:55:01.0000] <jgraham>
Oh, do they have a special holiday?

[15:00:00.0000] <Hixie>
ok. let's talk dash styles.

[15:00:01.0000] <Hixie>
it's an array of lengths.

[15:00:02.0000] <Ms2ger>
Let's not :)

[15:00:08.0000] <Hixie>
ok. let's talk dash styles.

[15:00:14.0000] <Hixie>
it's an array of lengths.

[15:00:15.0000] <Ms2ger>
Let's not :)

[15:00:31.0000] <Hixie>
odd lengths give the distance "on" and even ones the distance "off"

[15:00:46.0000] <Hixie>
odd-length arrays are doubles so you get the effect then the mirror

[15:00:57.0000] <Hixie>
e.g. 1,2,3 becomes -__---_--___

[15:01:00.0000] <Hixie>
odd lengths give the distance "on" and even ones the distance "off"

[15:01:01.0000] <Hixie>
odd-length arrays are doubles so you get the effect then the mirror

[15:01:02.0000] <Hixie>
e.g. 1,2,3 becomes -__---_--___

[15:01:03.0000] <Hixie>
so. zeroes.

[15:01:04.0000] <Hixie>
we strip zero-length segments, so it's a bit like they weren't there

[15:01:11.0000] <Hixie>
so. zeroes.

[15:01:26.0000] <Hixie>
we strip zero-length segments, so it's a bit like they weren't there

[15:01:34.0000] <Hixie>
1,0,1,2 is like 2,2

[15:01:56.0000] <Ms2ger>
Is it?

[15:02:00.0000] <Hixie>
1,0,1,2 is like 2,2

[15:02:01.0000] <Ms2ger>
Is it?

[15:02:02.0000] <Ms2ger>
Not like 1,1,2?

[15:02:04.0000] <Ms2ger>
Not like 1,1,2?

[15:02:38.0000] <Hixie>
1,0,1,2 becomes "- (zero-length off) - __" i.e. "--__" i.e. 2,2

[15:03:00.0000] <Hixie>
1,0,1,2 becomes "- (zero-length off) - __" i.e. "--__" i.e. 2,2

[15:03:01.0000] <Ms2ger>
Doesn't look like stripping them, then :)

[15:03:18.0000] <Ms2ger>
Doesn't look like stripping them, then :)

[15:03:37.0000] <Hixie>
zero-length line segments, not zero entries in the array, sorry

[15:03:38.0000] <zewt>
collapsed/coalesced/whatever

[15:03:54.0000] <Hixie>
i don't think we should throw an exception for zeros, since you could end up with them when you're just making a gap smaller and smaller

[15:03:57.0000] <Ms2ger>
Go on :)

[15:04:00.0000] <Hixie>
zero-length line segments, not zero entries in the array, sorry

[15:04:00.0000] <Hixie>
so what happens to trailing zeroes?

[15:04:01.0000] <zewt>
collapsed/coalesced/whatever

[15:04:02.0000] <Hixie>
i don't think we should throw an exception for zeros, since you could end up with them when you're just making a gap smaller and smaller

[15:04:03.0000] <Ms2ger>
Go on :)

[15:04:04.0000] <Hixie>
so what happens to trailing zeroes?

[15:04:05.0000] <Hixie>
1,0 => solid? or same as 1,1?

[15:04:10.0000] <Hixie>
1,0 => solid? or same as 1,1?

[15:04:32.0000] <Hixie>
i'd say solid

[15:04:40.0000] <zewt>
1,1 doesn't make sense

[15:04:44.0000] <zewt>
(from 1,0)

[15:04:45.0000] <Hixie>
ok

[15:04:54.0000] <Hixie>
so what does 0,1,0 become?

[15:05:00.0000] <Hixie>
i'd say solid

[15:05:01.0000] <zewt>
1,1 doesn't make sense

[15:05:02.0000] <zewt>
(from 1,0)

[15:05:03.0000] <Hixie>
ok

[15:05:04.0000] <Hixie>
so what does 0,1,0 become?

[15:05:04.0000] <TabAtkins_>
Hixie: Yes, 1,0,1,2 shoudl basically look like 2,2.

[15:05:05.0000] <TabAtkins_>
Hixie: Yes, 1,0,1,2 shoudl basically look like 2,2.

[15:05:06.0000] <TabAtkins_>
0,1,0 looks like no stroke at all.

[15:05:07.0000] <zewt>
what do odd-length sequences mean?

[15:05:08.0000] <TabAtkins_>
zewt: Repeat the sequence once.

[15:05:09.0000] <TabAtkins_>
zewt: So you get an even-length one.

[15:05:10.0000] <TabAtkins_>
0,1,0 looks like no stroke at all.

[15:05:12.0000] <zewt>
what do odd-length sequences mean?

[15:05:18.0000] <TabAtkins_>
zewt: Repeat the sequence once.

[15:05:26.0000] <TabAtkins_>
zewt: So you get an even-length one.

[15:05:33.0000] <Ms2ger>
1,1?

[15:05:35.0000] <zewt>
so repeat it before eliminating zeroes

[15:05:48.0000] <jgraham>
You don't eliminate zeros afaict

[15:05:51.0000] <TabAtkins_>
zewt: Yeah.  You don't *actually* eliminate zeros.

[15:06:00.0000] <Ms2ger>
1,1?

[15:06:01.0000] <zewt>
so repeat it before eliminating zeroes

[15:06:02.0000] <jgraham>
You don't eliminate zeros afaict

[15:06:03.0000] <TabAtkins_>
zewt: Yeah.  You don't *actually* eliminate zeros.

[15:06:04.0000] <Hixie>
/me is planning on eliminating zeroes

[15:06:05.0000] <TabAtkins_>
But zero-length segments are treated like they're not there, and Hixie defines dashes by cutting up a segment into lots of little segments.

[15:06:06.0000] <zewt>
0,1,0 -> 0,1,0,1,0,1 -> 0,2,0,1 -> 0,3

[15:06:07.0000] <TabAtkins_>
Hixie: I suggest not doing something different from SVG.

[15:06:07.0000] <Hixie>
/me is planning on eliminating zeroes

[15:06:08.0000] <TabAtkins_>
But zero-length segments are treated like they're not there, and Hixie defines dashes by cutting up a segment into lots of little segments.

[15:06:11.0000] <zewt>
0,1,0 -> 0,1,0,1,0,1 -> 0,2,0,1 -> 0,3

[15:06:21.0000] <TabAtkins_>
Hixie: I suggest not doing something different from SVG.

[15:06:36.0000] <jgraham>
Hixie: Zeros seem to be entirely non magical?

[15:06:46.0000] <jgraham>
I mean they are just a segment of length 0

[15:07:00.0000] <jgraham>
Hixie: Zeros seem to be entirely non magical?

[15:07:00.0000] <Hixie>
TabAtkins_: do they draw line caps between the segments in 1,0?

[15:07:01.0000] <jgraham>
I mean they are just a segment of length 0

[15:07:02.0000] <Hixie>
TabAtkins_: do they draw line caps between the segments in 1,0?

[15:07:03.0000] <TabAtkins_>
Hixie: Let me check!

[15:07:10.0000] <TabAtkins_>
Hixie: Let me check!

[15:07:50.0000] <Hixie>
TabAtkins_: (are we sure svg drops zero-length path segments? so they can't do the "dash dot" effect with round dots?)

[15:07:53.0000] <TabAtkins_>
How do I trigger linecaps here?  You mean like having a path with an M instruction happening in the middle of a segment?

[15:08:00.0000] <Hixie>
TabAtkins_: (are we sure svg drops zero-length path segments? so they can't do the "dash dot" effect with round dots?)

[15:08:01.0000] <TabAtkins_>
How do I trigger linecaps here?  You mean like having a path with an M instruction happening in the middle of a segment?

[15:08:02.0000] <Hixie>
i dunno how svg does it

[15:08:03.0000] <Hixie>
in canvas, you get a line cap at the ends of each subpath

[15:08:04.0000] <Hixie>
depends on context.lineCap

[15:08:05.0000] <TabAtkins_>
Okay.

[15:08:06.0000] <Hixie>
or lineCaps

[15:08:07.0000] <Hixie>
i dunno how svg does it

[15:08:19.0000] <Hixie>
in canvas, you get a line cap at the ends of each subpath

[15:08:24.0000] <Hixie>
depends on context.lineCap

[15:08:27.0000] <TabAtkins_>
Okay.

[15:08:28.0000] <Hixie>
or lineCaps

[15:08:29.0000] <Hixie>
or something

[15:08:34.0000] <TabAtkins_>
Same deal, then.  an M starts a new subpath.

[15:08:38.0000] <TabAtkins_>
Triggering linecaps.

[15:09:00.0000] <Hixie>
or something

[15:09:01.0000] <TabAtkins_>
Same deal, then.  an M starts a new subpath.

[15:09:02.0000] <TabAtkins_>
Triggering linecaps.

[15:11:50.0000] <bga>
<picture> is just kind a old <img> w/ lowsrc ?

[15:12:00.0000] <bga>
<picture> is just kind a old <img> w/ lowsrc ?

[15:12:01.0000] <Hixie>
TabAtkins_: but do they ahve them between zero-width gaps in dashed lines?

[15:12:02.0000] <TabAtkins_>
Hixie: SVG drops 0s entirely:

[15:12:03.0000] <TabAtkins_>
So "1 0" doesn't trigger any linecaps.

[15:12:05.0000] <Hixie>
TabAtkins_: but do they ahve them between zero-width gaps in dashed lines?

[15:12:07.0000] <TabAtkins_>
Hixie: SVG drops 0s entirely:

[15:12:23.0000] <TabAtkins_>
So "1 0" doesn't trigger any linecaps.

[15:12:36.0000] <Hixie>
what does 0 1 do?

[15:12:47.0000] <TabAtkins_>
No path displayed at all.

[15:12:57.0000] <Hixie>
interesting

[15:13:00.0000] <Hixie>
what does 0 1 do?

[15:13:01.0000] <TabAtkins_>
No path displayed at all.

[15:13:02.0000] <Hixie>
interesting

[15:13:03.0000] <Hixie>
where is this defined?

[15:13:04.0000] <heycam|away>
TabAtkins_, what's the example again?

[15:13:05.0000] <TabAtkins_>
I'm running off of Chrome's SVG impl right now.  ^_^&

[15:13:10.0000] <Hixie>
where is this defined?

[15:13:13.0000] <heycam|away>
TabAtkins_, what's the example again?

[15:13:21.0000] <TabAtkins_>
I'm running off of Chrome's SVG impl right now.  ^_^&

[15:13:33.0000] <heycam>
"dropping 0s" doesn't sound right to me but I missed the exact context

[15:13:42.0000] <TabAtkins_>
heycam: <path d="M 10 10 h 100 M 10 20 h 100" stroke-dasharray="10 0" stroke="black" stroke-width="5" stroke-linecap="round" />

[15:13:57.0000] <Hixie>
TabAtkins_: oh i thought you were checking the spec :-)

[15:14:00.0000] <heycam>
"dropping 0s" doesn't sound right to me but I missed the exact context

[15:14:00.0000] <TabAtkins_>
Let's see what the SVg spec actually says...

[15:14:01.0000] <TabAtkins_>
heycam: <path d="M 10 10 h 100 M 10 20 h 100" stroke-dasharray="10 0" stroke="black" stroke-width="5" stroke-linecap="round" />

[15:14:02.0000] <Hixie>
TabAtkins_: oh i thought you were checking the spec :-)

[15:14:03.0000] <TabAtkins_>
Let's see what the SVg spec actually says...

[15:14:04.0000] <Hixie>
TabAtkins_: don't trust implementations on edge cases like this :-)

[15:14:05.0000] <heycam>
that should mean round dashes of length 10 which overlap each other, I think

[15:14:05.0000] <Hixie>
TabAtkins_: don't trust implementations on edge cases like this :-)

[15:14:26.0000] <heycam>
that should mean round dashes of length 10 which overlap each other, I think

[15:14:32.0000] <heycam>
overlap on the round bits

[15:14:40.0000] <TabAtkins_>
Hm, wait.

[15:14:47.0000] <TabAtkins_>
I may not be able to detect it with this case.

[15:14:51.0000] <TabAtkins_>
Need some opacity.

[15:14:58.0000] <Hixie>
or a corner

[15:14:59.0000] <Hixie>
corner is better

[15:15:00.0000] <heycam>
overlap on the round bits

[15:15:01.0000] <TabAtkins_>
Hm, wait.

[15:15:02.0000] <TabAtkins_>
I may not be able to detect it with this case.

[15:15:03.0000] <TabAtkins_>
Need some opacity.

[15:15:04.0000] <Hixie>
or a corner

[15:15:05.0000] <Hixie>
corner is better

[15:15:06.0000] <Hixie>
opacity doesn't necessarily work, depends how the stroke is defined

[15:15:07.0000] <Hixie>
and i don't know if svg is detailed enough about that

[15:15:08.0000] <TabAtkins_>
Ah, true.

[15:15:10.0000] <Hixie>
opacity doesn't necessarily work, depends how the stroke is defined

[15:15:18.0000] <Hixie>
and i don't know if svg is detailed enough about that

[15:15:19.0000] <TabAtkins_>
Ah, true.

[15:16:00.0000] <heycam>
if you make it stroke-dasharray="10 2" you can see the overlap

[15:16:01.0000] <heycam>
i.e. you can see where the round bits are nearly completely overlapping

[15:16:02.0000] <TabAtkins_>
Yeah, but that's easy.

[15:16:09.0000] <heycam>
if you make it stroke-dasharray="10 2" you can see the overlap

[15:16:17.0000] <heycam>
i.e. you can see where the round bits are nearly completely overlapping

[15:16:19.0000] <TabAtkins_>
Yeah, but that's easy.

[15:16:31.0000] <heycam>
what's the problem with the 0?

[15:16:37.0000] <TabAtkins_>
We need a way to detect the difference between "fully overlapping" and "no linecap at all".

[15:16:49.0000] <TabAtkins_>
I think Hixie's right that a corner would work.

[15:16:59.0000] <Hixie>
heycam: does svg say to cut the line at a zero-length dash, or does it let the line be solid?

[15:17:00.0000] <heycam>
what's the problem with the 0?

[15:17:01.0000] <TabAtkins_>
We need a way to detect the difference between "fully overlapping" and "no linecap at all".

[15:17:02.0000] <TabAtkins_>
I think Hixie's right that a corner would work.

[15:17:03.0000] <Hixie>
heycam: does svg say to cut the line at a zero-length dash, or does it let the line be solid?

[15:17:04.0000] <Hixie>
no line cap with a corner is another way of testing it

[15:17:05.0000] <Hixie>
since you'll have or not have a join

[15:17:05.0000] <Hixie>
no line cap with a corner is another way of testing it

[15:17:06.0000] <heycam>
it doesn't say to cut the dash if the cap overlaps it

[15:17:07.0000] <Hixie>
if the gap occurs right at the corner

[15:17:20.0000] <Hixie>
since you'll have or not have a join

[15:17:25.0000] <heycam>
it doesn't say to cut the dash if the cap overlaps it

[15:17:26.0000] <Hixie>
if the gap occurs right at the corner

[15:17:41.0000] <Hixie>
heycam: forget the cap

[15:17:42.0000] <heycam>
but I doubt it says anything that detailed

[15:17:43.0000] <heycam>
ok

[15:17:51.0000] <Hixie>
heycam: i the line dash pattern is 10 on, 0 off

[15:17:59.0000] <Hixie>
heycam: and you stroke a line of length 20

[15:18:00.0000] <Hixie>
heycam: forget the cap

[15:18:01.0000] <heycam>
but I doubt it says anything that detailed

[15:18:02.0000] <heycam>
ok

[15:18:02.0000] <TabAtkins_>
Ok, Chrome at least *does* draw linecaps between segments separated by a 0 off segment.

[15:18:03.0000] <Hixie>
heycam: i the line dash pattern is 10 on, 0 off

[15:18:04.0000] <Hixie>
heycam: and you stroke a line of length 20

[15:18:05.0000] <TabAtkins_>
Ok, Chrome at least *does* draw linecaps between segments separated by a 0 off segment.

[15:18:06.0000] <heycam>
Hixie, yes...

[15:18:07.0000] <Hixie>
heycam: and your line has a corner at distance 10

[15:18:18.0000] <heycam>
Hixie, yes...

[15:18:27.0000] <Hixie>
heycam: and your line has a corner at distance 10

[15:18:36.0000] <Hixie>
heycam: does svg say if you lose the join or not?

[15:18:38.0000] <TabAtkins_>
<path d="M 10 10 h 40 v 40" stroke-dasharray="40 0" stroke="rgba(0,0,0,.5)" stroke-width="5" stroke-linecap="round" fill='transparent'/>

[15:19:00.0000] <Hixie>
heycam: does svg say if you lose the join or not?

[15:19:01.0000] <TabAtkins_>
<path d="M 10 10 h 40 v 40" stroke-dasharray="40 0" stroke="rgba(0,0,0,.5)" stroke-width="5" stroke-linecap="round" fill='transparent'/>

[15:19:33.0000] <TabAtkins_>
The corner is rounded, indicating the linecap is respected.  (linejoin is miter by default, and so would produce a sharp corner if the segments were merged.)

[15:19:48.0000] <heycam>
sorry I'm confused :)

[15:20:00.0000] <TabAtkins_>
The corner is rounded, indicating the linecap is respected.  (linejoin is miter by default, and so would produce a sharp corner if the segments were merged.)

[15:20:01.0000] <heycam>
sorry I'm confused :)

[15:20:02.0000] <TabAtkins_>
SVG doesn't mention anything about coalescing segments, so it looks like we cal call Chrome's behavior compliant.

[15:20:03.0000] <heycam>
ah the join

[15:20:15.0000] <TabAtkins_>
SVG doesn't mention anything about coalescing segments, so it looks like we cal call Chrome's behavior compliant.

[15:20:16.0000] <heycam>
ah the join

[15:20:45.0000] <TabAtkins_>
heycam: Yeah, we're trying to tell whether a 0-length "off" segment causes the two surrounding "on" segments to coalesce or not.

[15:20:50.0000] <heycam>
TabAtkins_, that corner is square in Firefox :)

[15:21:00.0000] <TabAtkins_>
heycam: Yeah, we're trying to tell whether a 0-length "off" segment causes the two surrounding "on" segments to coalesce or not.

[15:21:01.0000] <heycam>
TabAtkins_, that corner is square in Firefox :)

[15:21:02.0000] <TabAtkins_>
heycam: But the ends are round?

[15:21:03.0000] <heycam>
yeah

[15:21:04.0000] <TabAtkins_>
Then Firefox coalesces segments.

[15:21:08.0000] <TabAtkins_>
heycam: But the ends are round?

[15:21:12.0000] <heycam>
yeah

[15:21:18.0000] <TabAtkins_>
Then Firefox coalesces segments.

[15:21:42.0000] <heycam>
interesting

[15:22:00.0000] <heycam>
interesting

[15:22:01.0000] <TabAtkins_>
Which sounds like *more* work than just leaving it alone.

[15:22:01.0000] <TabAtkins_>
Which sounds like *more* work than just leaving it alone.

[15:22:02.0000] <heycam>
this is likely to be differences in the underlying graphics libraries

[15:22:22.0000] <heycam>
this is likely to be differences in the underlying graphics libraries

[15:22:29.0000] <TabAtkins_>
Could be, yeah.

[15:22:31.0000] <heycam>
which are doing the stroking

[15:22:51.0000] <Hixie>
( http://software.hixie.ch/utilities/js/live-dom-viewer/saved/1402 is a clearer test case)

[15:23:00.0000] <TabAtkins_>
Could be, yeah.

[15:23:01.0000] <heycam>
which are doing the stroking

[15:23:02.0000] <Hixie>
( http://software.hixie.ch/utilities/js/live-dom-viewer/saved/1402 is a clearer test case)

[15:23:03.0000] <Hixie>
hm, no opera on this machine, since i reset it the other day

[15:23:23.0000] <Hixie>
hm, no opera on this machine, since i reset it the other day

[15:23:30.0000] <Hixie>
what's the url to the opera nightly builds?

[15:23:38.0000] <heycam>
no dot on my opera

[15:23:46.0000] <Hixie>
i get no dot in safari either

[15:23:55.0000] <Hixie>
or firefox

[15:24:00.0000] <Hixie>
what's the url to the opera nightly builds?

[15:24:01.0000] <heycam>
no dot on my opera

[15:24:02.0000] <Hixie>
i get no dot in safari either

[15:24:03.0000] <Hixie>
or firefox

[15:24:53.0000] <Hixie>
incidentally, svg does say "Any zero length subpath shall not be stroked if the ‘stroke-linecap’ property has a value of butt but shall be stroked if the ‘stroke-linecap’ property has a value of round or square, producing respectively a circle or a square centered at the given point."

[15:25:00.0000] <Hixie>
incidentally, svg does say "Any zero length subpath shall not be stroked if the ‘stroke-linecap’ property has a value of butt but shall be stroked if the ‘stroke-linecap’ property has a value of round or square, producing respectively a circle or a square centered at the given point."

[15:25:01.0000] <Hixie>
not clear how you decide what direction the linecap should go

[15:25:02.0000] <Ms2ger>
Heh, "shall"

[15:25:03.0000] <heycam>
yes that's for subpaths though, not dashes

[15:25:03.0000] <Hixie>
not clear how you decide what direction the linecap should go

[15:25:04.0000] <Hixie>
yeah, but it's an example of how svg and canvas differ

[15:25:06.0000] <Ms2ger>
Heh, "shall"

[15:25:11.0000] <heycam>
yes that's for subpaths though, not dashes

[15:25:22.0000] <Hixie>
yeah, but it's an example of how svg and canvas differ

[15:25:30.0000] <Hixie>
on an almost identical issue

[15:25:58.0000] <heycam>
ok

[15:26:00.0000] <Hixie>
on an almost identical issue

[15:26:01.0000] <heycam>
ok

[15:26:02.0000] <Hixie>
oh there is an algorithm to determeine directionality

[15:26:03.0000] <Hixie>
it's deep in another chapter

[15:26:04.0000] <Hixie>
section F.5

[15:26:10.0000] <Hixie>
oh there is an algorithm to determeine directionality

[15:26:14.0000] <Hixie>
it's deep in another chapter

[15:26:19.0000] <Hixie>
section F.5

[15:26:34.0000] <heycam>
yeah that stuff really should be with the rest of the path stuff

[15:26:44.0000] <heycam>
it's like a little afterthought added for tricky cases :)

[15:26:59.0000] <heycam>
/me must go out for a bit

[15:27:00.0000] <heycam>
yeah that stuff really should be with the rest of the path stuff

[15:27:01.0000] <heycam>
it's like a little afterthought added for tricky cases :)

[15:27:02.0000] <heycam>
/me must go out for a bit

[15:28:00.0000] <Hixie>
"If a dash has zero length, linecaps are still added if the stroke-linecap values round and square are used."

[15:28:01.0000] <Hixie>
in 1.2T

[15:28:02.0000] <Hixie>
well implementations seem to disagree

[15:28:15.0000] <Hixie>
"If a dash has zero length, linecaps are still added if the stroke-linecap values round and square are used."

[15:28:18.0000] <Hixie>
in 1.2T

[15:28:27.0000] <Hixie>
well implementations seem to disagree

[15:28:39.0000] <TabAtkins_>
Yeah, I was just testing that.

[15:29:00.0000] <TabAtkins_>
Yeah, I was just testing that.

[15:29:01.0000] <Hixie>
oh actually my test checks something else

[15:29:02.0000] <TabAtkins_>
A dasharray of "0 10" should, by that line, draw a circle/square every 10px.

[15:29:04.0000] <Hixie>
oh actually my test checks something else

[15:29:14.0000] <TabAtkins_>
A dasharray of "0 10" should, by that line, draw a circle/square every 10px.

[15:29:43.0000] <Hixie>
yeah

[15:30:00.0000] <Hixie>
yeah

[15:30:29.0000] <TabAtkins_>
Heh, ".01 10" works in Chrome, but ".001 10" doesn't.  Yay precision!

[15:31:00.0000] <TabAtkins_>
Heh, ".01 10" works in Chrome, but ".001 10" doesn't.  Yay precision!

[15:32:00.0000] <TabAtkins_>
So I think that zero-length "off" segmetns should still split up a path into two segments, for consistency with SVG.

[15:32:27.0000] <TabAtkins_>
So I think that zero-length "off" segmetns should still split up a path into two segments, for consistency with SVG.

[15:32:45.0000] <TabAtkins_>
However, a zero-length "on" segment should act as normal for canvas (and have no drawing effect).

[15:33:00.0000] <TabAtkins_>
However, a zero-length "on" segment should act as normal for canvas (and have no drawing effect).

[15:33:49.0000] <Hixie>
consistency with the svg spec, or svg implementations?

[15:34:00.0000] <Hixie>
consistency with the svg spec, or svg implementations?

[15:34:01.0000] <Hixie>
i get different results in chrome, safari, and firefox for http://software.hixie.ch/utilities/js/live-dom-viewer/saved/1403

[15:34:14.0000] <Hixie>
i get different results in chrome, safari, and firefox for http://software.hixie.ch/utilities/js/live-dom-viewer/saved/1403

[15:34:52.0000] <zewt>
is the assumption that there's no hope of having the question answered by the svg spec and implementations reaching agreement? heh

[15:34:57.0000] <Hixie>
make that http://software.hixie.ch/utilities/js/live-dom-viewer/saved/1404

[15:34:59.0000] <Hixie>
1403 is bogus

[15:35:00.0000] <zewt>
is the assumption that there's no hope of having the question answered by the svg spec and implementations reaching agreement? heh

[15:35:01.0000] <Hixie>
make that http://software.hixie.ch/utilities/js/live-dom-viewer/saved/1404

[15:35:02.0000] <Hixie>
1403 is bogus

[15:35:03.0000] <TabAtkins_>
zewt: It'll be answered in SVG2 if we file a bug now.

[15:35:04.0000] <Hixie>
it's basically answered by svg now

[15:35:05.0000] <Hixie>
implementations just don't do it

[15:35:06.0000] <Hixie>
so the question is which should change

[15:35:07.0000] <TabAtkins_>
zewt: It'll be answered in SVG2 if we file a bug now.

[15:35:15.0000] <Hixie>
it's basically answered by svg now

[15:35:19.0000] <Hixie>
implementations just don't do it

[15:35:24.0000] <Hixie>
so the question is which should change

[15:35:35.0000] <zewt>
i mean, the question of whether to match the spec or implementations

[15:36:00.0000] <zewt>
i mean, the question of whether to match the spec or implementations

[15:38:00.0000] <Hixie>
ooh, opera nad firefox agree

[15:38:23.0000] <Hixie>
ooh, opera nad firefox agree

[15:43:51.0000] <Hixie>
i guess supporting zero-length "off" dashes isn't hard

[15:44:00.0000] <Hixie>
i guess supporting zero-length "off" dashes isn't hard

[15:53:00.0000] <Hixie>
i'm thinking people are going to want zero-length on dashes too though, for dotted lines...

[15:53:10.0000] <Hixie>
i'm thinking people are going to want zero-length on dashes too though, for dotted lines...

[15:53:36.0000] <TabAtkins_>
I do think that zero-length on dashes are useful (it's hacky to have to do a .01 length on dash).

[15:54:00.0000] <TabAtkins_>
I do think that zero-length on dashes are useful (it's hacky to have to do a .01 length on dash).

[15:54:01.0000] <Hixie>
what should happen if the dash is 1 0 0 0 0 0 0 0 0 0 ?

[15:54:02.0000] <Hixie>
i wonder if there's even any way to tell...

[15:54:12.0000] <Hixie>
what should happen if the dash is 1 0 0 0 0 0 0 0 0 0 ?

[15:54:22.0000] <Hixie>
i wonder if there's even any way to tell...

[15:54:28.0000] <TabAtkins_>
Depends on the drawing library.

[15:54:43.0000] <TabAtkins_>
If they draw each segment individually, you can tell with semi-transparent colors.

[15:54:55.0000] <TabAtkins_>
If they draw them all at the same time, you can't.

[15:55:00.0000] <TabAtkins_>
Depends on the drawing library.

[15:55:01.0000] <TabAtkins_>
If they draw each segment individually, you can tell with semi-transparent colors.

[15:55:02.0000] <TabAtkins_>
If they draw them all at the same time, you can't.

[15:55:03.0000] <Hixie>
canvas draws it at the same time

[15:55:05.0000] <Hixie>
canvas draws it at the same time

[15:57:38.0000] <TabAtkins_>
Then you can't tell.  The multiple 0-length dash segments overwrite each other, and are then overwritten by the 1-length dash when it comes around again.

[15:58:00.0000] <TabAtkins_>
Then you can't tell.  The multiple 0-length dash segments overwrite each other, and are then overwritten by the 1-length dash when it comes around again.

[15:59:00.0000] <Hixie>
ok 1 40 0 0 0 0 0 40

[15:59:15.0000] <Hixie>
ok 1 40 0 0 0 0 0 40

[15:59:47.0000] <Hixie>
i guess i should remove pairs of zeros that follow pairs of zeros

[16:00:00.0000] <Hixie>
i guess i should remove pairs of zeros that follow pairs of zeros

[16:01:00.0000] <TabAtkins_>
Yes, in that example you'll see a 1-dash, 40 space, 0-dash, 40 space.

[16:01:13.0000] <TabAtkins_>
Yes, in that example you'll see a 1-dash, 40 space, 0-dash, 40 space.

[16:01:30.0000] <TabAtkins_>
So removing pairs following the first pair should work, as you say.

[16:02:00.0000] <TabAtkins_>
So removing pairs following the first pair should work, as you say.

[16:03:00.0000] <Hixie>
actually i think what i should remove is any sequence of a zero off segment followed by a zero on segment

[16:03:18.0000] <Hixie>
actually i think what i should remove is any sequence of a zero off segment followed by a zero on segment

[16:03:52.0000] <TabAtkins_>
Yeah, that should work.

[16:03:55.0000] <Hixie>
including removing a leading zero / trailing zero pair

[16:04:00.0000] <TabAtkins_>
Yeah, that should work.

[16:04:01.0000] <Hixie>
including removing a leading zero / trailing zero pair

[16:04:02.0000] <Hixie>
(after doubling for for lengths)

[16:04:03.0000] <Hixie>
for odd

[16:04:04.0000] <Hixie>
(after doubling for for lengths)

[16:04:07.0000] <Hixie>
for odd

[16:06:00.0000] <TabAtkins_>
Removing a leading zero pair works if the third segment is non-zero.

[16:06:01.0000] <TabAtkins_>
Or rather, if there is *a* non-zero "on" segment.

[16:06:05.0000] <TabAtkins_>
Removing a leading zero pair works if the third segment is non-zero.

[16:06:18.0000] <TabAtkins_>
Or rather, if there is *a* non-zero "on" segment.

[16:07:00.0000] <TabAtkins_>
0 0 0 10 should collapse to 0 10.

[16:07:01.0000] <Hixie>
if there's no non-zero on segments then the whole thing doesn't much matter

[16:07:09.0000] <TabAtkins_>
0 0 0 10 should collapse to 0 10.

[16:07:10.0000] <Hixie>
if there's no non-zero on segments then the whole thing doesn't much matter

[16:07:30.0000] <Hixie>
oh wait right

[16:07:32.0000] <TabAtkins_>
Not true!  All 0s still draws a single dot.

[16:07:38.0000] <Hixie>
i meant if there's no non-zero segments at all

[16:07:50.0000] <TabAtkins_>
The algorithm goes degenerate in that case, I guess.

[16:08:00.0000] <Hixie>
oh wait right

[16:08:01.0000] <TabAtkins_>
Not true!  All 0s still draws a single dot.

[16:08:02.0000] <Hixie>
i meant if there's no non-zero segments at all

[16:08:03.0000] <TabAtkins_>
The algorithm goes degenerate in that case, I guess.

[16:08:04.0000] <TabAtkins_>
SVG chooses to just treat that as no dashing at all, and draws it solid.

[16:08:05.0000] <Hixie>
it treats it as 'none'

[16:08:12.0000] <TabAtkins_>
SVG chooses to just treat that as no dashing at all, and draws it solid.

[16:08:24.0000] <Hixie>
it treats it as 'none'

[16:08:29.0000] <Hixie>
whatever that means (solid?)

[16:08:33.0000] <Hixie>
(that's... unintuitive)

[16:08:40.0000] <TabAtkins_>
no dashes!

[16:08:46.0000] <Hixie>
mmmm

[16:09:00.0000] <Hixie>
whatever that means (solid?)

[16:09:01.0000] <Hixie>
(that's... unintuitive)

[16:09:02.0000] <TabAtkins_>
no dashes!

[16:09:03.0000] <Hixie>
mmmm

[16:10:46.0000] <Hixie>
what do you call the values in an array

[16:10:49.0000] <Hixie>
members of the array?

[16:11:00.0000] <Hixie>
what do you call the values in an array

[16:11:01.0000] <Hixie>
members of the array?

[16:11:33.0000] <TabAtkins_>
values works.

[16:11:45.0000] <Hixie>
values is the actual numbers

[16:11:49.0000] <Hixie>
i mean the buckets for the numbers

[16:12:00.0000] <TabAtkins_>
values works.

[16:12:01.0000] <Hixie>
values is the actual numbers

[16:12:02.0000] <Hixie>
i mean the buckets for the numbers

[16:12:03.0000] <Hixie>
i guess values still works

[16:12:04.0000] <Hixie>
nevermind

[16:12:09.0000] <Hixie>
i guess values still works

[16:12:11.0000] <Hixie>
nevermind

[16:12:49.0000] <TabAtkins_>
Hey, are you planning on adding markers a-la-SVG at some point?

[16:12:58.0000] <Hixie>
not currently

[16:13:00.0000] <TabAtkins_>
Hey, are you planning on adding markers a-la-SVG at some point?

[16:13:01.0000] <Hixie>
not currently

[16:13:02.0000] <Hixie>
(haven't had any requests for them)

[16:13:03.0000] <TabAtkins_>
Ok.  Just asking, because markers depend on the subpaths, and if your dashing chops up the subpaths it'll make it harder for you.

[16:13:13.0000] <Hixie>
(haven't had any requests for them)

[16:13:24.0000] <TabAtkins_>
Ok.  Just asking, because markers depend on the subpaths, and if your dashing chops up the subpaths it'll make it harder for you.

[16:14:57.0000] <Hixie>
i'd just do the markers before the chopping

[16:15:00.0000] <Hixie>
i'd just do the markers before the chopping

[16:15:01.0000] <Hixie>
that's not a big deal :-)

[16:15:13.0000] <Hixie>
that's not a big deal :-)

[16:16:00.0000] <TabAtkins_>
I think markers are still drawn on chopped-out segments, but if you meant just *placing* them before the chopping, then sure.

[16:16:11.0000] <TabAtkins_>
I think markers are still drawn on chopped-out segments, but if you meant just *placing* them before the chopping, then sure.

[16:16:39.0000] <Hixie>
markers are just filled shapes that are overlapped over the line when it is stroked right?

[16:16:47.0000] <TabAtkins_>
Yeah.

[16:17:00.0000] <Hixie>
markers are just filled shapes that are overlapped over the line when it is stroked right?

[16:17:01.0000] <TabAtkins_>
Yeah.

[16:17:02.0000] <Hixie>
so i would just take note of the direction and position that all the markers would have to be, then chop the line, then merge the two pieces of information into one path, then return that.

[16:17:03.0000] <TabAtkins_>
kk

[16:17:03.0000] <Hixie>
so i would just take note of the direction and position that all the markers would have to be, then chop the line, then merge the two pieces of information into one path, then return that.

[16:17:10.0000] <TabAtkins_>
kk

[16:19:00.0000] <Hixie>
when removing the last value if it's zero and the first value if it's zero, i need to make sure to then move the new last value to the front

[16:19:01.0000] <Hixie>
or move the new front value to the back

[16:19:02.0000] <Hixie>
any preference?

[16:19:02.0000] <Hixie>
when removing the last value if it's zero and the first value if it's zero, i need to make sure to then move the new last value to the front

[16:19:03.0000] <TabAtkins_>
front to the back!

[16:19:11.0000] <Hixie>
or move the new front value to the back

[16:19:14.0000] <Hixie>
any preference?

[16:19:22.0000] <TabAtkins_>
front to the back!

[16:19:51.0000] <Hixie>
actually...

[16:19:59.0000] <Hixie>
0 40 40 0 drawn to a short line

[16:20:00.0000] <Hixie>
actually...

[16:20:01.0000] <Hixie>
0 40 40 0 drawn to a short line

[16:20:02.0000] <Hixie>
short = 50

[16:20:03.0000] <Hixie>
would be a dot then a 40 gap then a 10 line

[16:20:04.0000] <Hixie>
so we're wrong, we can't do that removal

[16:20:08.0000] <Hixie>
short = 50

[16:20:17.0000] <Hixie>
would be a dot then a 40 gap then a 10 line

[16:20:25.0000] <Hixie>
so we're wrong, we can't do that removal

[16:20:38.0000] <Hixie>
so i have to deal with this case anyway in the stroking code

[16:20:39.0000] <Hixie>
so nevermind

[16:20:44.0000] <TabAtkins_>
You said you'd only remove 0 pairs in the beginning.

[16:20:51.0000] <TabAtkins_>
Not all zeros.

[16:21:00.0000] <Hixie>
so i have to deal with this case anyway in the stroking code

[16:21:01.0000] <Hixie>
so nevermind

[16:21:02.0000] <TabAtkins_>
You said you'd only remove 0 pairs in the beginning.

[16:21:03.0000] <TabAtkins_>
Not all zeros.

[16:28:00.0000] <Hixie>
?

[16:28:12.0000] <Hixie>
?

[16:28:37.0000] <Hixie>
"actually i think what i should remove is any sequence of a zero off segment followed by a zero on segment" is what i was referring to

[16:28:43.0000] <Hixie>
followed by the idea of extending that to wrap around

[16:28:58.0000] <TabAtkins_>
Oh, I didn't realize you were referring to a wraparound pair.

[16:29:00.0000] <Hixie>
"actually i think what i should remove is any sequence of a zero off segment followed by a zero on segment" is what i was referring to

[16:29:01.0000] <Hixie>
followed by the idea of extending that to wrap around

[16:29:02.0000] <TabAtkins_>
Oh, I didn't realize you were referring to a wraparound pair.

[16:29:02.0000] <Hixie>
but i can't do the extended case for wrap around, since it matters at the start of the stroke

[16:29:03.0000] <Hixie>
but i can't do the extended case for wrap around, since it matters at the start of the stroke

[16:29:04.0000] <TabAtkins_>
Yeah, don't do the wraparound.

[16:29:05.0000] <Hixie>
but if i don't do that, i need to deal with that case in the stroking code

[16:29:05.0000] <TabAtkins_>
Yeah, don't do the wraparound.

[16:29:06.0000] <Hixie>
at which point, i don't need to remove any

[16:29:07.0000] <Hixie>
since it doesn't gain me anything

[16:29:18.0000] <Hixie>
but if i don't do that, i need to deal with that case in the stroking code

[16:29:24.0000] <Hixie>
at which point, i don't need to remove any

[16:29:28.0000] <Hixie>
since it doesn't gain me anything

[16:29:33.0000] <TabAtkins_>
Note - it *doesn't* matter when you offset the dashes.

[16:29:47.0000] <Hixie>
right

[16:29:52.0000] <Hixie>
well

[16:29:58.0000] <Hixie>
right

[16:30:00.0000] <TabAtkins_>
Note - it *doesn't* matter when you offset the dashes.

[16:30:01.0000] <Hixie>
right

[16:30:02.0000] <Hixie>
well

[16:30:03.0000] <Hixie>
right

[16:30:04.0000] <TabAtkins_>
Modulo some specific cases, sure.

[16:30:07.0000] <TabAtkins_>
Modulo some specific cases, sure.

[16:31:37.0000] <TabAtkins_>
The problem is that the stroke isn't treated as an infinite line.  If it were, you could safely remove wraparound pairs and just let the natural wrapping-around behavior work.

[16:31:55.0000] <TabAtkins_>
You'd get the cap of the off-screen segment that just touches the dash origin.

[16:32:00.0000] <TabAtkins_>
The problem is that the stroke isn't treated as an infinite line.  If it were, you could safely remove wraparound pairs and just let the natural wrapping-around behavior work.

[16:32:01.0000] <TabAtkins_>
You'd get the cap of the off-screen segment that just touches the dash origin.

[16:34:00.0000] <Hixie>
yeah

[16:34:01.0000] <Hixie>
ok

[16:34:02.0000] <Hixie>
that's fine

[16:34:03.0000] <Hixie>
makes setting the dash list easy

[16:34:04.0000] <Hixie>
but now i have to deal with some szeros

[16:34:09.0000] <Hixie>
ok

[16:34:10.0000] <Hixie>
that's fine

[16:34:15.0000] <Hixie>
makes setting the dash list easy

[16:34:24.0000] <Hixie>
but now i have to deal with some szeros

[16:55:52.0000] <Hixie>
hmmm

[16:56:00.0000] <Hixie>
hmmm


2012-03-16
[17:08:00.0000] <TabAtkins_>
Phew, that was a pretty difficult set of edits.

[17:08:01.0000] <TabAtkins_>
Still got a few more until I'm caught up with Images issues. :/

[17:08:08.0000] <TabAtkins_>
Phew, that was a pretty difficult set of edits.

[17:08:24.0000] <TabAtkins_>
Still got a few more until I'm caught up with Images issues. :/

[20:57:00.0000] <austincheney>
what is the difference between the w3c "shadow dom" and the whatwg "scoped stylesheets" ?

[20:57:25.0000] <austincheney>
what is the difference between the w3c "shadow dom" and the whatwg "scoped stylesheets" ?

[20:57:31.0000] <austincheney>
and why is one confined to one group and the other to a different group but neither appear to be in work together?

[20:58:00.0000] <austincheney>
and why is one confined to one group and the other to a different group but neither appear to be in work together?

[20:59:00.0000] <austincheney>
further more, why is it that both of these technologies appear to be coming primarily from Google employees and simulatenously entering into separate unrelated specs and separate groups without any collusion?

[20:59:24.0000] <austincheney>
further more, why is it that both of these technologies appear to be coming primarily from Google employees and simulatenously entering into separate unrelated specs and separate groups without any collusion?

[21:01:55.0000] <austincheney>
what is the primary motivation is that driving the need to slice up a dom into islands for presentation only, but doing so at parse time?

[21:02:00.0000] <austincheney>
what is the primary motivation is that driving the need to slice up a dom into islands for presentation only, but doing so at parse time?

[21:02:01.0000] <austincheney>
are these two technologies attempt to meet different objectives?

[21:02:10.0000] <austincheney>
are these two technologies attempt to meet different objectives?

[00:42:00.0000] <zcorpan>
still haven't published?

[00:42:12.0000] <zcorpan>
still haven't published?

[00:44:41.0000] <annevk>
postponed until somewhere next week now I believe

[00:44:47.0000] <annevk>
there was an email

[00:45:00.0000] <annevk>
postponed until somewhere next week now I believe

[00:45:01.0000] <annevk>
there was an email

[00:45:02.0000] <zcorpan>
sigh

[00:45:03.0000] <zcorpan>
what's taking so long

[00:45:14.0000] <zcorpan>
sigh

[00:45:28.0000] <zcorpan>
what's taking so long

[00:46:53.0000] <annevk>
http://www.smosh.com/sites/default/files/bloguploads/ancient-aliens-th_0.jpg

[00:47:00.0000] <annevk>
http://www.smosh.com/sites/default/files/bloguploads/ancient-aliens-th_0.jpg

[00:47:01.0000] <annevk>
not sure why it was so hard to find a good picture of that

[00:47:14.0000] <annevk>
not sure why it was so hard to find a good picture of that

[00:48:30.0000] <zcorpan>
CfC: "As a Working Draft publication, the document does not need not be complete, to meet all technical requirements, or to have consensus on the contents."

[00:49:00.0000] <zcorpan>
CfC: "As a Working Draft publication, the document does not need not be complete, to meet all technical requirements, or to have consensus on the contents."

[00:49:00.0000] <zcorpan>
frank's latest email: "The goal of heartbeat publications is to show progress and increasing consensus."

[00:50:37.0000] <zcorpan>
the chairs could just decide to publish a revision of the canvas spec that was before the path addition if they don't want it

[00:50:45.0000] <zcorpan>
oh well

[00:51:00.0000] <zcorpan>
the chairs could just decide to publish a revision of the canvas spec that was before the path addition if they don't want it

[00:51:01.0000] <zcorpan>
oh well

[00:54:47.0000] <annevk>
do you have a pointer to the CfC email?

[00:55:00.0000] <annevk>
do you have a pointer to the CfC email?

[00:56:00.0000] <zcorpan>
http://lists.w3.org/Archives/Public/public-html/2012Feb/0247.html

[00:56:28.0000] <zcorpan>
http://lists.w3.org/Archives/Public/public-html/2012Feb/0247.html

[00:59:49.0000] <zcorpan>
maybe i should reply to frank

[01:00:00.0000] <zcorpan>
maybe i should reply to frank

[01:01:39.0000] <annevk>
oh I just replied

[01:01:44.0000] <annevk>
but feel free

[01:01:47.0000] <zcorpan>
ah

[01:02:00.0000] <annevk>
oh I just replied

[01:02:01.0000] <annevk>
but feel free

[01:02:02.0000] <zcorpan>
ah

[01:51:00.0000] <annevk>
http://krijnhoetmer.nl/irc-logs/developers/20120316#l-1328 :)

[01:51:23.0000] <annevk>
http://krijnhoetmer.nl/irc-logs/developers/20120316#l-1328 :)

[02:10:46.0000] <zcorpan>
"But, in CSS 2.1, it is undefined whether the decoration propagates into block-level tables."

[02:10:48.0000] <zcorpan>
looooool

[02:11:00.0000] <zcorpan>
"But, in CSS 2.1, it is undefined whether the decoration propagates into block-level tables."

[02:11:01.0000] <zcorpan>
looooool

[02:11:02.0000] <zcorpan>
not only do i need to define how quirks mode differs from the spec, i need to patch the spec as well

[02:11:13.0000] <zcorpan>
not only do i need to define how quirks mode differs from the spec, i need to patch the spec as well

[02:16:51.0000] <zcorpan>
"Note that text decorations are not propagated to floating and absolutely positioned descendants, nor to the contents of atomic inline-level descendants such as inline blocks and inline tables."

[02:17:00.0000] <zcorpan>
"Note that text decorations are not propagated to floating and absolutely positioned descendants, nor to the contents of atomic inline-level descendants such as inline blocks and inline tables."

[02:17:01.0000] <zcorpan>
it propagates into inline blocks and inline tables in opera/firefox/chrome

[02:17:08.0000] <zcorpan>
it propagates into inline blocks and inline tables in opera/firefox/chrome

[02:23:00.0000] <zcorpan>
/me checks css3-text

[02:23:28.0000] <zcorpan>
/me checks css3-text

[02:29:38.0000] <zcorpan>
oh wait, i must have done something wrong in my testing. spec is right about inline-block and inline-table

[02:30:00.0000] <zcorpan>
oh wait, i must have done something wrong in my testing. spec is right about inline-block and inline-table

[03:39:00.0000] <charlvn>
gah sorry, irssi is acting up

[03:39:14.0000] <charlvn>
gah sorry, irssi is acting up

[03:43:58.0000] <Ms2ger>
annevk, reading #developers logs now? :)

[03:44:00.0000] <Ms2ger>
annevk, reading #developers logs now? :)

[03:44:56.0000] <Ms2ger>
"publish new revisions of the following documents in accordance with the Working Group Heartbeat requirements."

[03:45:00.0000] <Ms2ger>
"publish new revisions of the following documents in accordance with the Working Group Heartbeat requirements."

[03:45:01.0000] <Ms2ger>
If it's been a year, it's not in accordance with heartbeat requirements, sorry

[03:45:16.0000] <Ms2ger>
If it's been a year, it's not in accordance with heartbeat requirements, sorry

[03:55:31.0000] <jgraham>
You and your "process"

[03:56:00.0000] <jgraham>
You and your "process"

[06:59:37.0000] <annevk>
MikeSmith: should I update the html5-diff date again?

[06:59:54.0000] <annevk>
MikeSmith: or are we not changing the URL and such?

[07:00:00.0000] <annevk>
MikeSmith: should I update the html5-diff date again?

[07:00:01.0000] <annevk>
MikeSmith: or are we not changing the URL and such?

[07:30:32.0000] <[tm]>
annevk:  please do change the date

[07:31:00.0000] <[tm]>
annevk:  please do change the date

[07:31:50.0000] <annevk>
done

[07:31:59.0000] <annevk>
also has new URLs

[07:32:00.0000] <annevk>
done

[07:32:01.0000] <annevk>
also has new URLs

[07:35:48.0000] <[tm]>
tak

[07:36:00.0000] <[tm]>
tak

[07:41:00.0000] <annevk>
so I guess I should move away from the fatal flag and instead have a "decoder error handler" and an "encoder error handler"

[07:41:12.0000] <annevk>
so I guess I should move away from the fatal flag and instead have a "decoder error handler" and an "encoder error handler"

[07:42:00.0000] <annevk>
for the decoder it's mostly to pick between fatal and U+FFFD

[07:42:01.0000] <annevk>
for the encoder it's to allow inserting character references or some such instead

[07:42:02.0000] <annevk>
for the decoder it's mostly to pick between fatal and U+FFFD

[07:42:17.0000] <annevk>
for the encoder it's to allow inserting character references or some such instead

[07:45:00.0000] <scott_gonzalez>
Hixie: Do you know if there has been any more discussion of autocapitilize="off" and related ideas?

[07:45:01.0000] <scott_gonzalez>
https://www.w3.org/Bugs/Public/show_bug.cgi?id=12409

[07:45:02.0000] <scott_gonzalez>
This wiki page is still pretty empty, so I'm assuming there hasn't been: http://wiki.whatwg.org/wiki/Text_input_keyboard_mode_control

[07:45:05.0000] <scott_gonzalez>
Hixie: Do you know if there has been any more discussion of autocapitilize="off" and related ideas?

[07:45:06.0000] <scott_gonzalez>
https://www.w3.org/Bugs/Public/show_bug.cgi?id=12409

[07:45:26.0000] <scott_gonzalez>
This wiki page is still pretty empty, so I'm assuming there hasn't been: http://wiki.whatwg.org/wiki/Text_input_keyboard_mode_control

[07:45:41.0000] <annevk>
correct

[07:45:58.0000] <annevk>
also, Hixie's asleep; I hope!

[07:46:00.0000] <annevk>
correct

[07:46:01.0000] <annevk>
also, Hixie's asleep; I hope!

[07:46:30.0000] <annevk>
scott_gonzalez: it's going to happen sooner or later; sooner if someone other than Hixie does the research probably ;)

[07:47:00.0000] <annevk>
scott_gonzalez: it's going to happen sooner or later; sooner if someone other than Hixie does the research probably ;)

[07:47:01.0000] <scott_gonzalez>
That's what I figured. Thanks.

[07:47:03.0000] <scott_gonzalez>
That's what I figured. Thanks.

[08:05:00.0000] <zcorpan>
annevk: i made a style tweak to html5-diff (removed font-size-adjust since i hadn't checked properly in browsers that support it, it seems)

[08:05:27.0000] <zcorpan>
annevk: i made a style tweak to html5-diff (removed font-size-adjust since i hadn't checked properly in browsers that support it, it seems)

[08:12:47.0000] <annevk>
http://dvcs.w3.org/hg/encoding/raw-file/tip/Overview.html#legacy-multi-byte-japanese-encodings now has indexes

[08:12:51.0000] <annevk>
/me goes to fix typo

[08:13:00.0000] <annevk>
http://dvcs.w3.org/hg/encoding/raw-file/tip/Overview.html#legacy-multi-byte-japanese-encodings now has indexes

[08:13:01.0000] <annevk>
/me goes to fix typo

[08:14:00.0000] <annevk>
zcorpan: fixored

[08:14:06.0000] <annevk>
zcorpan: fixored

[08:19:00.0000] <zcorpan>
thx. hmm. still tiny fonts in chrome and firefox...

[08:19:05.0000] <zcorpan>
thx. hmm. still tiny fonts in chrome and firefox...

[08:21:00.0000] <zcorpan>
annevk: can you regen again?

[08:21:01.0000] <annevk>
hmm

[08:21:02.0000] <annevk>
I don't like all those separate files in the encoding spec

[08:21:04.0000] <zcorpan>
annevk: can you regen again?

[08:21:14.0000] <annevk>
hmm

[08:21:28.0000] <annevk>
I don't like all those separate files in the encoding spec

[08:21:33.0000] <annevk>
but I don't really see a better way

[08:22:00.0000] <annevk>
but I don't really see a better way

[08:22:01.0000] <annevk>
done

[08:22:09.0000] <annevk>
done

[08:22:57.0000] <zcorpan>
thanks

[08:23:00.0000] <zcorpan>
thanks

[08:23:38.0000] <zcorpan>
now the "Extensions to Document" heading looks weird but i guess that's fine

[08:24:00.0000] <zcorpan>
now the "Extensions to Document" heading looks weird but i guess that's fine

[08:24:45.0000] <hsivonen>
/me wonders if Opera has a contingency plan for enabling H.264/AAC on desktop including XP

[08:25:00.0000] <hsivonen>
/me wonders if Opera has a contingency plan for enabling H.264/AAC on desktop including XP

[08:28:00.0000] <charlvn>
windows xp reaches end of support on 8 april 2014...

[08:28:15.0000] <charlvn>
windows xp reaches end of support on 8 april 2014...

[08:28:58.0000] <Ms2ger>
It's reached eol already a few years back, no?

[08:29:00.0000] <Ms2ger>
It's reached eol already a few years back, no?

[08:29:01.0000] <charlvn>
nope, still has another two years to go

[08:29:02.0000] <Ms2ger>
If you've got some number of users, it doesn't matter, though

[08:29:15.0000] <charlvn>
nope, still has another two years to go

[08:29:22.0000] <Ms2ger>
If you've got some number of users, it doesn't matter, though

[08:29:52.0000] <charlvn>
well when they stop critical bugfixes/security fixes (hard to think there could be any left to be discovered), it does bring strong discouragement

[08:30:00.0000] <charlvn>
well when they stop critical bugfixes/security fixes (hard to think there could be any left to be discovered), it does bring strong discouragement

[08:30:01.0000] <charlvn>
also for third-party software companies to continue to support a platform that microsoft itself don't even want to support

[08:30:02.0000] <charlvn>
s/platform/operating system version/

[08:30:11.0000] <charlvn>
also for third-party software companies to continue to support a platform that microsoft itself don't even want to support

[08:30:19.0000] <charlvn>
s/platform/operating system version/

[08:42:34.0000] <hsivonen>
charlvn: Opera and Firefox run on Windows 2000 still, even though it has been EOLed

[08:42:42.0000] <hsivonen>
Firefox is about to stop running on Windows 2000 though

[08:43:00.0000] <hsivonen>
charlvn: Opera and Firefox run on Windows 2000 still, even though it has been EOLed

[08:43:01.0000] <hsivonen>
Firefox is about to stop running on Windows 2000 though

[08:44:08.0000] <charlvn>
i'm sure that

[08:44:24.0000] <charlvn>
\ that's the case for a lot of software

[08:45:00.0000] <charlvn>
i'm sure that

[08:45:01.0000] <charlvn>
\ that's the case for a lot of software

[08:51:47.0000] <hsivonen>
charlvn: not for IE, Chrome and Safari

[08:52:00.0000] <hsivonen>
charlvn: not for IE, Chrome and Safari

[09:29:42.0000] <jgraham>
Hmm, I feel like this string decoding API is getting too low-level

[09:30:00.0000] <jgraham>
Hmm, I feel like this string decoding API is getting too low-level

[09:30:01.0000] <Ms2ger>
Getting?

[09:30:28.0000] <Ms2ger>
Getting?

[09:30:41.0000] <zewt>
it's an inherently low-level operation

[09:30:44.0000] <jgraham>
Well, "failing to stop be"

[09:31:00.0000] <zewt>
it's an inherently low-level operation

[09:31:00.0000] <jgraham>
s/stop/not/?

[09:31:01.0000] <jgraham>
Well, "failing to stop be"

[09:31:02.0000] <jgraham>
s/stop/not/?

[09:31:03.0000] <zewt>
also it's heading in a direction that makes it simpler for common cases

[09:31:05.0000] <zewt>
also it's heading in a direction that makes it simpler for common cases

[09:31:45.0000] <jgraham>
zewt: It's not that low level. Or at least in Python it doesn't require all this complexity afaict

[09:32:00.0000] <jgraham>
zewt: It's not that low level. Or at least in Python it doesn't require all this complexity afaict

[09:33:00.0000] <zewt>
i guess i don't see it as complex

[09:33:26.0000] <zewt>
i guess i don't see it as complex

[09:33:55.0000] <zewt>
also, python doesn't let you encode into existing buffers

[09:33:58.0000] <jgraham>
I mean use cases like "split an array buffer into multiple null-terminated strings" don't seem like they should be part of the decode API, but the combination of an API for selecting a view from an offset to some byte and a string decoding API

[09:34:00.0000] <zewt>
also, python doesn't let you encode into existing buffers

[09:34:01.0000] <jgraham>
I mean use cases like "split an array buffer into multiple null-terminated strings" don't seem like they should be part of the decode API, but the combination of an API for selecting a view from an offset to some byte and a string decoding API

[09:34:36.0000] <zewt>
the "find null terminators" is a separate function because of that

[09:34:51.0000] <zewt>
it used to be a length sentinel on decode() before i pushed them away from that

[09:35:00.0000] <zewt>
the "find null terminators" is a separate function because of that

[09:35:01.0000] <zewt>
it used to be a length sentinel on decode() before i pushed them away from that

[09:35:36.0000] <jgraham>
What's the use case for encoding into an existing buffer?

[09:35:55.0000] <Ms2ger>
Emscripten?

[09:36:00.0000] <jgraham>
What's the use case for encoding into an existing buffer?

[09:36:01.0000] <Ms2ger>
Emscripten?

[09:36:02.0000] <zewt>
not quite following what you're saying, though--that's exactly how you do it (call stringLength to find the terminator, create a sub-view, and pass that to decode)

[09:36:04.0000] <zewt>
not quite following what you're saying, though--that's exactly how you do it (call stringLength to find the terminator, create a sub-view, and pass that to decode)

[09:36:49.0000] <jgraham>
I'm saying that stringLenght shouldn't be considered part of the string API

[09:36:51.0000] <zewt>
well, the alternative if you're eg. creating a ZIP directory would be to encode into a new buffer then copy it

[09:37:00.0000] <jgraham>
I'm saying that stringLenght shouldn't be considered part of the string API

[09:37:01.0000] <zewt>
well, the alternative if you're eg. creating a ZIP directory would be to encode into a new buffer then copy it

[09:37:02.0000] <zewt>
well, i don't care where stringLength lives, as long as it's there

[09:37:05.0000] <zewt>
well, i don't care where stringLength lives, as long as it's there

[09:37:47.0000] <jgraham>
It should be a use case that could motivate a general function to find the next byte of some specific value(s) in an array buffer

[09:38:00.0000] <jgraham>
It should be a use case that could motivate a general function to find the next byte of some specific value(s) in an array buffer

[09:38:01.0000] <zewt>
maybe the cost of creating a new buffer and copying it to the destination is minor enough that it's not worth having the output buffer parameter; dunno

[09:38:14.0000] <zewt>
maybe the cost of creating a new buffer and copying it to the destination is minor enough that it's not worth having the output buffer parameter; dunno

[09:39:00.0000] <jgraham>
I have difficulty imagining these operations being the critical bottlenecks in (m)any web apps

[09:39:01.0000] <jgraham>
I could be wrong of course

[09:39:18.0000] <jgraham>
I have difficulty imagining these operations being the critical bottlenecks in (m)any web apps

[09:39:28.0000] <jgraham>
I could be wrong of course

[09:40:00.0000] <zewt>
with the approach I'm nudging it towards, the output buffer option could easily be removed and then added later if there's demand

[09:40:01.0000] <jgraham>
Sure. I endorse doing that

[09:40:02.0000] <zewt>
(without making the API weird if we do do that)

[09:40:02.0000] <zewt>
with the approach I'm nudging it towards, the output buffer option could easily be removed and then added later if there's demand

[09:40:16.0000] <jgraham>
Sure. I endorse doing that

[09:40:24.0000] <zewt>
(without making the API weird if we do do that)

[09:40:53.0000] <jgraham>
Better to start small than wish we didn't have almost-unused (but not quite) complexity in a few years

[09:41:00.0000] <jgraham>
Better to start small than wish we didn't have almost-unused (but not quite) complexity in a few years

[09:41:33.0000] <dglazkov>
good morning, Whatwg!

[09:42:00.0000] <dglazkov>
good morning, Whatwg!

[09:42:31.0000] <zewt>
though it would mean that decode() would only have one meaningful return value

[09:42:54.0000] <zewt>
because the "input consumed" and "output bytes written" return values wouldn't be useful

[09:43:00.0000] <zewt>
though it would mean that decode() would only have one meaningful return value

[09:43:01.0000] <zewt>
because the "input consumed" and "output bytes written" return values wouldn't be useful

[09:43:02.0000] <zewt>
having it return an object that only has one field (so we have somewhere to put those other two later if needed) would be weird

[09:43:26.0000] <zewt>
having it return an object that only has one field (so we have somewhere to put those other two later if needed) would be weird

[09:44:33.0000] <zewt>
not sure what to recommend there

[09:44:52.0000] <jgraham>
Well it could return a different type if you pass a buffer to decode into

[09:45:00.0000] <zewt>
not sure what to recommend there

[09:45:01.0000] <jgraham>
Well it could return a different type if you pass a buffer to decode into

[09:45:02.0000] <jgraham>
Or it could be a different method name

[09:45:03.0000] <zewt>
that's the "eventual API weirdness" i was talking about before, though

[09:45:04.0000] <jgraham>
decodeInto()

[09:45:05.0000] <jgraham>
Or it could be a different method name

[09:45:11.0000] <zewt>
that's the "eventual API weirdness" i was talking about before, though

[09:45:14.0000] <jgraham>
decodeInto()

[09:45:59.0000] <jgraham>
Returning an object to support what is likely to be by far the uncommon case is also pretty weird

[09:46:00.0000] <jgraham>
Returning an object to support what is likely to be by far the uncommon case is also pretty weird

[09:46:01.0000] <zewt>
sometimes i sort of wish there was a clean way of having output parameters in JS

[09:46:23.0000] <zewt>
sometimes i sort of wish there was a clean way of having output parameters in JS

[09:46:45.0000] <zewt>
you can do it by passing in an object, but that's not really a common paradigm in this language

[09:47:00.0000] <zewt>
you can do it by passing in an object, but that's not really a common paradigm in this language

[10:16:00.0000] <AryehGregor>
Is there a way to set up a handler to catch all resource load failures in the page?

[10:16:25.0000] <AryehGregor>
Is there a way to set up a handler to catch all resource load failures in the page?

[10:20:00.0000] <annevk>
window.addEventListener("error", ..., false) might get you somewhere, but error is also used for other stuff...

[10:20:26.0000] <annevk>
window.addEventListener("error", ..., false) might get you somewhere, but error is also used for other stuff...

[10:20:38.0000] <annevk>
and that wouldn't catch CSS resources

[10:20:43.0000] <annevk>
or even @import loads

[10:20:56.0000] <zewt>
i'd use a capturing listener for that

[10:21:00.0000] <annevk>
and that wouldn't catch CSS resources

[10:21:01.0000] <annevk>
or even @import loads

[10:21:02.0000] <zewt>
i'd use a capturing listener for that

[10:21:55.0000] <annevk>
ooh, I meant to do that

[10:22:00.0000] <annevk>
ooh, I meant to do that

[10:22:01.0000] <annevk>
boolean arguments...

[10:22:03.0000] <annevk>
boolean arguments...

[10:33:40.0000] <AryehGregor>
How would the caputuring listener work?  Put a capturing onerror handler on the window/document?

[10:33:54.0000] <AryehGregor>
This is actually for Mozilla's mochitests; there's already a window.onerror handler to catch unexpected exceptions.

[10:34:00.0000] <AryehGregor>
How would the caputuring listener work?  Put a capturing onerror handler on the window/document?

[10:34:01.0000] <AryehGregor>
This is actually for Mozilla's mochitests; there's already a window.onerror handler to catch unexpected exceptions.

[10:38:33.0000] <annevk>
AryehGregor: you can register a listener for events too

[10:38:40.0000] <annevk>
AryehGregor: window.onerror is special

[10:39:00.0000] <annevk>
AryehGregor: you can register a listener for events too

[10:39:01.0000] <annevk>
AryehGregor: window.onerror is special

[10:41:24.0000] <annevk>
hmm

[10:41:39.0000] <annevk>
compared to the Japanese stuff, big5 is a giant mess

[10:42:00.0000] <annevk>
hmm

[10:42:01.0000] <annevk>
compared to the Japanese stuff, big5 is a giant mess

[10:42:53.0000] <smaug____>
aklein: great MutationObserver tests

[10:42:59.0000] <smaug____>
aklein: say thanks to rafael

[10:43:00.0000] <smaug____>
aklein: great MutationObserver tests

[10:43:01.0000] <smaug____>
aklein: say thanks to rafael

[10:43:35.0000] <smaug____>
(hard to understand those tests though, since they use all sorts of strange Google closure stuff)

[10:44:00.0000] <smaug____>
(hard to understand those tests though, since they use all sorts of strange Google closure stuff)

[10:44:01.0000] <aklein>
smaug____: will do, it's pretty awesome that those tests, originally written for a prototype JS implementation of this API, now pass on two actual browser impls

[10:44:18.0000] <aklein>
smaug____: will do, it's pretty awesome that those tests, originally written for a prototype JS implementation of this API, now pass on two actual browser impls

[10:44:49.0000] <smaug____>
yup

[10:45:00.0000] <smaug____>
yup

[10:45:01.0000] <smaug____>
I need to do still some minor tweaks, and then ask sicking to review it all

[10:45:02.0000] <smaug____>
I need to do still some minor tweaks, and then ask sicking to review it all

[10:45:35.0000] <smaug____>
I haven't yet tested performance much, but for example attribute change notifications are 7x faster than DOMAttrModified

[10:45:53.0000] <smaug____>
(looks like webkit doesn't support DOMAttrModified so couldn't compare there)

[10:46:00.0000] <smaug____>
I haven't yet tested performance much, but for example attribute change notifications are 7x faster than DOMAttrModified

[10:46:01.0000] <smaug____>
(looks like webkit doesn't support DOMAttrModified so couldn't compare there)

[10:47:00.0000] <smaug____>
(ask sicking to review it... do I live in utopia :p )

[10:47:08.0000] <smaug____>
(ask sicking to review it... do I live in utopia :p )

[10:51:00.0000] <annevk>
fwiw, cleaning up the spec will prolly have to wait a little bit; maybe end of next week, otherwise week after

[10:51:19.0000] <annevk>
fwiw, cleaning up the spec will prolly have to wait a little bit; maybe end of next week, otherwise week after

[10:51:47.0000] <smaug____>
annevk: DOM4 ?

[10:51:56.0000] <annevk>
yeah

[10:52:00.0000] <smaug____>
annevk: DOM4 ?

[10:52:01.0000] <annevk>
yeah

[10:52:02.0000] <annevk>
at least if I'm to edit it

[10:52:03.0000] <smaug____>
FYI, I'm mainly interested in DocumentFragment behavior

[10:52:07.0000] <annevk>
at least if I'm to edit it

[10:52:11.0000] <smaug____>
FYI, I'm mainly interested in DocumentFragment behavior

[10:52:35.0000] <smaug____>
and textContent

[10:52:40.0000] <annevk>
doesn't really change my estimate :)

[10:52:49.0000] <smaug____>
yup, doesn't matter

[10:53:00.0000] <smaug____>
and textContent

[10:53:01.0000] <annevk>
doesn't really change my estimate :)

[10:53:02.0000] <smaug____>
yup, doesn't matter

[12:00:00.0000] <TabAtkins>
Welp, I've confirmed that talking to Foliot about the DRM stuff is useless.

[12:00:16.0000] <TabAtkins>
Welp, I've confirmed that talking to Foliot about the DRM stuff is useless.

[12:01:00.0000] <TabAtkins>
He still thinks that if we just ratchet up enforcement more the problem will go away (because the previous 15 times we've done so in the last three decades were just for practice, I guess).

[12:01:06.0000] <TabAtkins>
He still thinks that if we just ratchet up enforcement more the problem will go away (because the previous 15 times we've done so in the last three decades were just for practice, I guess).

[12:17:00.0000] <Ms2ger>
s/about the DRM stuff//

[12:17:06.0000] <Ms2ger>
s/about the DRM stuff//

[12:17:30.0000] <Ms2ger>
sicking, oh, and you want to schedule some time to review Mutation Observers ;)

[12:18:00.0000] <Ms2ger>
sicking, oh, and you want to schedule some time to review Mutation Observers ;)

[12:31:59.0000] <jsbell>
zewt: You're glenn@ ?

[12:32:00.0000] <jsbell>
zewt: You're glenn@ ?

[12:33:00.0000] <sicking>
Ms2ger: in what sense? The spec or the implementation?

[12:33:01.0000] <sicking>
Ms2ger: in what sense? The spec or the implementation?

[12:37:00.0000] <zewt>
i'm one of them

[12:37:01.0000] <smaug____>
sicking: implementation

[12:37:08.0000] <zewt>
i'm one of them

[12:37:12.0000] <smaug____>
sicking: implementation

[12:37:45.0000] <smaug____>
jsbell: zewt is one of the nicer Glenns

[12:37:52.0000] <zewt>
TabAtkins: well, a lot of the time DRM isn't there to keep people out; it's to trigger things like the DMCA

[12:38:00.0000] <smaug____>
jsbell: zewt is one of the nicer Glenns

[12:38:01.0000] <zewt>
TabAtkins: well, a lot of the time DRM isn't there to keep people out; it's to trigger things like the DMCA

[12:59:00.0000] <TabAtkins>
zewt: Yeah, I know. But that's *definitely* unethical. ^_^

[12:59:09.0000] <TabAtkins>
zewt: Yeah, I know. But that's *definitely* unethical. ^_^

[12:59:52.0000] <StoneCypher>
in what way is it unethical to choose to encrypt your own content for sale

[12:59:59.0000] <StoneCypher>
that seems like a knee-jerk reaction

[13:00:00.0000] <StoneCypher>
in what way is it unethical to choose to encrypt your own content for sale

[13:00:01.0000] <StoneCypher>
that seems like a knee-jerk reaction

[13:00:02.0000] <TabAtkins>
That's not what I said.

[13:00:03.0000] <StoneCypher>
okay, so, in what way is it unethical to use digital rights management, and back it up with the law

[13:00:04.0000] <StoneCypher>
specifically

[13:00:04.0000] <TabAtkins>
That's not what I said.

[13:00:05.0000] <TabAtkins>
You trigger the DMCA, specifically the digital locks clause that prevents circumvention entirely, so that you can prevent people from exercising their fair use rights.

[13:00:19.0000] <StoneCypher>
okay, so, in what way is it unethical to use digital rights management, and back it up with the law

[13:00:23.0000] <StoneCypher>
specifically

[13:00:29.0000] <TabAtkins>
You trigger the DMCA, specifically the digital locks clause that prevents circumvention entirely, so that you can prevent people from exercising their fair use rights.

[13:00:47.0000] <StoneCypher>
i'm a little confused.

[13:00:51.0000] <StoneCypher>
the law says that isn't a right.

[13:00:54.0000] <StoneCypher>
otherwise it wouldn't apply here.

[13:00:55.0000] <StoneCypher>
so

[13:00:56.0000] <TabAtkins>
That's the entire point of that clause, and why it didn't specifically make it legal to circumvent for legal reasons.

[13:01:00.0000] <StoneCypher>
i'm a little confused.

[13:01:01.0000] <StoneCypher>
the law says that isn't a right.

[13:01:02.0000] <StoneCypher>
otherwise it wouldn't apply here.

[13:01:03.0000] <StoneCypher>
so

[13:01:04.0000] <TabAtkins>
That's the entire point of that clause, and why it didn't specifically make it legal to circumvent for legal reasons.

[13:01:05.0000] <StoneCypher>
uh huh?

[13:01:28.0000] <StoneCypher>
uh huh?

[13:01:34.0000] <StoneCypher>
so why are you saying you haev the right otherwise?

[13:01:38.0000] <StoneCypher>
the law seems to disagree

[13:01:41.0000] <StoneCypher>
am i missing something?

[13:01:54.0000] <StoneCypher>
what fair use right, specifically, is being violated here in any way which is inconsistent with the law?

[13:02:00.0000] <StoneCypher>
so why are you saying you haev the right otherwise?

[13:02:00.0000] <TabAtkins>
Um, what? I have the right to violate copyright for purposes of education, criticism, parody, and a few other little bits.

[13:02:01.0000] <StoneCypher>
the law seems to disagree

[13:02:02.0000] <StoneCypher>
am i missing something?

[13:02:03.0000] <StoneCypher>
what fair use right, specifically, is being violated here in any way which is inconsistent with the law?

[13:02:04.0000] <TabAtkins>
Um, what? I have the right to violate copyright for purposes of education, criticism, parody, and a few other little bits.

[13:02:05.0000] <Hixie>
moral rights aren't necessarily legal rights

[13:02:06.0000] <StoneCypher>
yes, and if you show one of those circumstances, you get that exception

[13:02:07.0000] <TabAtkins>
DRM prevents me from doing that, but I can circumvent.  However, the DMCA makes it *illegal* to circumvent, even if it was for a legal purpose.

[13:02:08.0000] <Hixie>
sometimes the law is immoral

[13:02:21.0000] <Hixie>
moral rights aren't necessarily legal rights

[13:02:22.0000] <StoneCypher>
yes, and if you show one of those circumstances, you get that exception

[13:02:23.0000] <TabAtkins>
DRM prevents me from doing that, but I can circumvent.  However, the DMCA makes it *illegal* to circumvent, even if it was for a legal purpose.

[13:02:24.0000] <Hixie>
sometimes the law is immoral

[13:02:32.0000] <StoneCypher>
it's not a blanket exception because you imagine it might be wrong at some given point

[13:02:49.0000] <TabAtkins>
StoneCypher: You seem somewhat confused.  If I circumvent DRM, it's illegal *even if* I was using the copyrighted content in legal ways.

[13:02:49.0000] <StoneCypher>
Hixie: moral rights don't exist merely because someone asserts them

[13:03:00.0000] <StoneCypher>
it's not a blanket exception because you imagine it might be wrong at some given point

[13:03:01.0000] <TabAtkins>
StoneCypher: You seem somewhat confused.  If I circumvent DRM, it's illegal *even if* I was using the copyrighted content in legal ways.

[13:03:02.0000] <StoneCypher>
Hixie: moral rights don't exist merely because someone asserts them

[13:03:03.0000] <StoneCypher>
TabAtkins: case law disagrees.  can you show any evidence of that belief?

[13:03:04.0000] <Hixie>
what moral rights one has is a matter of opinion

[13:03:04.0000] <StoneCypher>
TabAtkins: case law disagrees.  can you show any evidence of that belief?

[13:03:15.0000] <Hixie>
what moral rights one has is a matter of opinion

[13:03:34.0000] <StoneCypher>
Hixie: opinion is not a valid basis for defying the law, even when someone pretties it up with a phrase like "moral rights"

[13:03:43.0000] <TabAtkins>
StoneCypher: I have to go look it up.

[13:03:47.0000] <StoneCypher>
Hixie: which is why nobody pays attention when NAMBLA talks about their moral rights

[13:04:00.0000] <StoneCypher>
Hixie: opinion is not a valid basis for defying the law, even when someone pretties it up with a phrase like "moral rights"

[13:04:01.0000] <TabAtkins>
StoneCypher: I have to go look it up.

[13:04:01.0000] <StoneCypher>
Hixie: nor the pirate bay

[13:04:02.0000] <StoneCypher>
Hixie: which is why nobody pays attention when NAMBLA talks about their moral rights

[13:04:03.0000] <StoneCypher>
Hixie: nor the pirate bay

[13:04:04.0000] <Hixie>
StoneCypher: not sure what you're arguing. i didn't suggest you should defy law. i suggested the law is wrong.

[13:04:04.0000] <Hixie>
StoneCypher: not sure what you're arguing. i didn't suggest you should defy law. i suggested the law is wrong.

[13:04:05.0000] <TabAtkins>
StoneCypher: Do you have a pointer to case-law that makes it legal to circumvent DRM for fair-use reason?

[13:04:10.0000] <TabAtkins>
StoneCypher: Do you have a pointer to case-law that makes it legal to circumvent DRM for fair-use reason?

[13:04:32.0000] <StoneCypher>
are you really asking me to prove your undefended claim wrong

[13:04:34.0000] <TabAtkins>
Rather, that shows a court making that decision.

[13:04:44.0000] <TabAtkins>
At this point, both our claims are undefended.

[13:04:47.0000] <StoneCypher>
uh, no

[13:04:54.0000] <TabAtkins>
Uh, yes.

[13:04:56.0000] <StoneCypher>
you're making a bunch of claims about ethics supported by claims about the law

[13:04:59.0000] <StoneCypher>
i'm asking you to explain them

[13:05:00.0000] <StoneCypher>
are you really asking me to prove your undefended claim wrong

[13:05:01.0000] <TabAtkins>
Rather, that shows a court making that decision.

[13:05:01.0000] <StoneCypher>
i have nothing to defend

[13:05:02.0000] <TabAtkins>
At this point, both our claims are undefended.

[13:05:03.0000] <StoneCypher>
uh, no

[13:05:04.0000] <TabAtkins>
Uh, yes.

[13:05:05.0000] <StoneCypher>
you're making a bunch of claims about ethics supported by claims about the law

[13:05:06.0000] <StoneCypher>
i'm asking you to explain them

[13:05:06.0000] <TabAtkins>
Wait wait wait. Go back and read what I said.

[13:05:07.0000] <StoneCypher>
i have nothing to defend

[13:05:08.0000] <TabAtkins>
Wait wait wait. Go back and read what I said.

[13:05:08.0000] <StoneCypher>
i did.

[13:05:10.0000] <StoneCypher>
and i asked for further explanation and did not get it.

[13:05:11.0000] <StoneCypher>
and i asked for reference and i did not get it.

[13:05:12.0000] <StoneCypher>
now you're claiming that i have something to prove.

[13:05:14.0000] <StoneCypher>
and i asked for further explanation and did not get it.

[13:05:19.0000] <StoneCypher>
and i asked for reference and i did not get it.

[13:05:24.0000] <StoneCypher>
now you're claiming that i have something to prove.

[13:05:30.0000] <TabAtkins>
My statement was that the DMCA's digital lock provision makes it illegal to circumvent DRM even if you were doing so for legal reasons (fair use).

[13:05:35.0000] <TabAtkins>
You said this was untrue.

[13:05:40.0000] <StoneCypher>
oy.

[13:05:54.0000] <TabAtkins>
If you're arguing about a *different* statement of mine, I didn't realize that.

[13:05:56.0000] <StoneCypher>
so here we go in the standard "oh, you want me to prove my claim?  it's on you to prove otherwise!" loop

[13:05:58.0000] <zewt>
TabAtkins: sure, but it's common

[13:06:00.0000] <TabAtkins>
My statement was that the DMCA's digital lock provision makes it illegal to circumvent DRM even if you were doing so for legal reasons (fair use).

[13:06:01.0000] <TabAtkins>
You said this was untrue.

[13:06:02.0000] <StoneCypher>
oy.

[13:06:03.0000] <TabAtkins>
If you're arguing about a *different* statement of mine, I didn't realize that.

[13:06:04.0000] <StoneCypher>
so here we go in the standard "oh, you want me to prove my claim?  it's on you to prove otherwise!" loop

[13:06:05.0000] <zewt>
TabAtkins: sure, but it's common

[13:06:06.0000] <zewt>
TabAtkins: iirc it's been macrovision's strategy, at least at points

[13:06:14.0000] <zewt>
TabAtkins: iirc it's been macrovision's strategy, at least at points

[13:06:30.0000] <TabAtkins>
StoneCypher: You're asserting that I'm wrong, and it's legal to circumvent DRM for fair-use purposes.

[13:06:37.0000] <StoneCypher>
that's not what an assertion is.

[13:06:43.0000] <StoneCypher>
an assertion is a statement of fact, not a counter-claim.

[13:06:47.0000] <TabAtkins>
I don't think either of us are making extraordinary claims.

[13:06:52.0000] <StoneCypher>
i'm not making *any* claims.

[13:06:57.0000] <TabAtkins>
That's nice.

[13:06:59.0000] <StoneCypher>
saying "i don't see any reason to believe you" is not a claim.

[13:07:00.0000] <TabAtkins>
StoneCypher: You're asserting that I'm wrong, and it's legal to circumvent DRM for fair-use purposes.

[13:07:01.0000] <StoneCypher>
that's not what an assertion is.

[13:07:02.0000] <StoneCypher>
an assertion is a statement of fact, not a counter-claim.

[13:07:03.0000] <TabAtkins>
I don't think either of us are making extraordinary claims.

[13:07:04.0000] <StoneCypher>
i'm not making *any* claims.

[13:07:05.0000] <TabAtkins>
That's nice.

[13:07:06.0000] <StoneCypher>
saying "i don't see any reason to believe you" is not a claim.

[13:07:07.0000] <StoneCypher>
and i mean yes

[13:07:08.0000] <StoneCypher>
there's ample decision from the court about this

[13:07:09.0000] <StoneCypher>
but i want you to focus more on how this actually works

[13:07:14.0000] <StoneCypher>
and i mean yes

[13:07:21.0000] <StoneCypher>
there's ample decision from the court about this

[13:07:26.0000] <StoneCypher>
but i want you to focus more on how this actually works

[13:07:35.0000] <StoneCypher>
you made the claim; you should be substantiating it, not challenging others to do otherwise

[13:07:36.0000] <StoneCypher>
for example

[13:07:42.0000] <StoneCypher>
apple tried to stop jailbreaking with dmca

[13:07:44.0000] <StoneCypher>
they failed

[13:07:46.0000] <StoneCypher>
on fair use.

[13:07:47.0000] <StoneCypher>
look it up

[13:07:49.0000] <StoneCypher>
but again

[13:07:57.0000] <StoneCypher>
the burden of proof is on /you/, because /you/ made the claim.

[13:08:00.0000] <StoneCypher>
you made the claim; you should be substantiating it, not challenging others to do otherwise

[13:08:01.0000] <StoneCypher>
for example

[13:08:02.0000] <StoneCypher>
apple tried to stop jailbreaking with dmca

[13:08:03.0000] <StoneCypher>
they failed

[13:08:04.0000] <StoneCypher>
on fair use.

[13:08:05.0000] <StoneCypher>
look it up

[13:08:06.0000] <StoneCypher>
but again

[13:08:07.0000] <StoneCypher>
the burden of proof is on /you/, because /you/ made the claim.

[13:08:08.0000] <StoneCypher>
the library of congress is another standing exception to all drm, and the learning company sued them three times to put a stop to that

[13:08:09.0000] <StoneCypher>
failed every time

[13:08:10.0000] <TabAtkins>
Chilling Effects supports my assertion: http://chillingeffects.org/anticircumvention/faq.cgi

[13:08:17.0000] <StoneCypher>
the library of congress is another standing exception to all drm, and the learning company sued them three times to put a stop to that

[13:08:20.0000] <StoneCypher>
failed every time

[13:08:26.0000] <TabAtkins>
Chilling Effects supports my assertion: http://chillingeffects.org/anticircumvention/faq.cgi

[13:08:44.0000] <StoneCypher>
where specifically

[13:08:47.0000] <StoneCypher>
that's a complete faq

[13:08:55.0000] <TabAtkins>
I'm aware that there is a specific, enumerated list of exceptions to the digital locks clause.

[13:08:59.0000] <StoneCypher>
pointing vaguely to a gigantic document and saying "this agrees" is not purposeful

[13:09:00.0000] <StoneCypher>
where specifically

[13:09:01.0000] <StoneCypher>
that's a complete faq

[13:09:02.0000] <TabAtkins>
I'm aware that there is a specific, enumerated list of exceptions to the digital locks clause.

[13:09:03.0000] <StoneCypher>
pointing vaguely to a gigantic document and saying "this agrees" is not purposeful

[13:09:03.0000] <StoneCypher>
where

[13:09:04.0000] <StoneCypher>
where

[13:09:05.0000] <StoneCypher>
your certainty is not valid defense of a claim

[13:09:06.0000] <TabAtkins>
The third and fourth question.

[13:09:08.0000] <StoneCypher>
your certainty is not valid defense of a claim

[13:09:11.0000] <TabAtkins>
The third and fourth question.

[13:09:46.0000] <StoneCypher>
i don't see the third or fourth questions supporting you.  all they do is define terms and discuss "the controversy."

[13:09:51.0000] <zewt>
uh.

[13:10:00.0000] <StoneCypher>
i don't see the third or fourth questions supporting you.  all they do is define terms and discuss "the controversy."

[13:10:01.0000] <zewt>
uh.

[13:10:02.0000] <Ms2ger>
/me yawns

[13:10:03.0000] <TabAtkins>
Yeah, sure, I'm done.

[13:10:15.0000] <Ms2ger>
/me yawns

[13:10:20.0000] <TabAtkins>
Yeah, sure, I'm done.

[13:10:31.0000] <StoneCypher>
of course.  why support your claim when you can just say "i'm done?"

[13:10:50.0000] <StoneCypher>
clearly this is the level of discussion that should support decisions for recommendations

[13:10:54.0000] <StoneCypher>
vague unsubstantiable claims

[13:11:00.0000] <StoneCypher>
of course.  why support your claim when you can just say "i'm done?"

[13:11:01.0000] <StoneCypher>
clearly this is the level of discussion that should support decisions for recommendations

[13:11:02.0000] <StoneCypher>
vague unsubstantiable claims

[13:11:03.0000] <zewt>
you're sort of annoying. fyi

[13:11:04.0000] <TabAtkins>
All right, so how about them specs?

[13:11:04.0000] <zewt>
you're sort of annoying. fyi

[13:11:04.0000] <TabAtkins>
All right, so how about them specs?

[13:11:05.0000] <StoneCypher>
zewt: awesome, thanks for contributing

[13:11:06.0000] <zewt>
np

[13:11:07.0000] <Hixie>
StoneCypher: do you agree that it is illegal to decrypt the contents of a DVD for the purpose of watching it on my linux box?

[13:11:16.0000] <StoneCypher>
zewt: awesome, thanks for contributing

[13:11:19.0000] <zewt>
np

[13:11:27.0000] <Hixie>
StoneCypher: do you agree that it is illegal to decrypt the contents of a DVD for the purpose of watching it on my linux box?

[13:12:47.0000] <StoneCypher>
Hixie: with respect that I am not a lawyer, what you would have to do is spend the five dollars to purchase a legal player, or have an actual legitimate exception, such as commentary.  I agree that it's a stupid business model, I agree that it's throttling innovation, and I agree that it's a violation of basic ownership ethics and smart business.  Unfortunately, yes, it is currently illegal,

[13:12:47.0000] <StoneCypher>
as it is essentially a piracy of the decoder.

[13:13:00.0000] <StoneCypher>
Hixie: with respect that I am not a lawyer, what you would have to do is spend the five dollars to purchase a legal player, or have an actual legitimate exception, such as commentary.  I agree that it's a stupid business model, I agree that it's throttling innovation, and I agree that it's a violation of basic ownership ethics and smart business.  Unfortunately, yes, it is currently illegal,

[13:13:01.0000] <StoneCypher>
as it is essentially a piracy of the decoder.

[13:13:02.0000] <TabAtkins>
So is that a "yes"?

[13:13:03.0000] <StoneCypher>
Hixie: One example of that being done the way the law wants it to be done is TiVo, which is a linux box with a legal decoder.

[13:13:03.0000] <TabAtkins>
So is that a "yes"?

[13:13:04.0000] <Hixie>
StoneCypher: do you agree that "watching content legally purchased" is something that, in the absence of drm, i am legally allowed to do?

[13:13:06.0000] <StoneCypher>
Hixie: One example of that being done the way the law wants it to be done is TiVo, which is a linux box with a legal decoder.

[13:13:25.0000] <Hixie>
StoneCypher: do you agree that "watching content legally purchased" is something that, in the absence of drm, i am legally allowed to do?

[13:14:00.0000] <StoneCypher>
Hixie: I do not believe that is a valid question.  That is entirely defined by the context which is avoided in that question.  Examples that have nothing to do with technology include snuff, child pornography, and illegally taken videotapes in other people's homes.

[13:14:02.0000] <StoneCypher>
Hixie: I do not believe that is a valid question.  That is entirely defined by the context which is avoided in that question.  Examples that have nothing to do with technology include snuff, child pornography, and illegally taken videotapes in other people's homes.

[13:14:32.0000] <TabAtkins>
Let's pretend the content is legal as well.

[13:14:41.0000] <TabAtkins>
Now can you answer the question?

[13:14:46.0000] <Hixie>
StoneCypher: do you agree that "just me watching a star trek episode legally purchased on my own" is something that, in the absence of drm, i am legally allowed to do?

[13:14:48.0000] <StoneCypher>
Hixie: I do believe that the context is important here.  However, what I believe is that in order for us to move forward legitimately, we *must* allow content owners to choose what they do with their content.  We do not have the privilege of determining other people's business models for them, and this is a function of business model.

[13:15:00.0000] <TabAtkins>
Let's pretend the content is legal as well.

[13:15:01.0000] <TabAtkins>
Now can you answer the question?

[13:15:02.0000] <Hixie>
StoneCypher: do you agree that "just me watching a star trek episode legally purchased on my own" is something that, in the absence of drm, i am legally allowed to do?

[13:15:03.0000] <StoneCypher>
Hixie: I do believe that the context is important here.  However, what I believe is that in order for us to move forward legitimately, we *must* allow content owners to choose what they do with their content.  We do not have the privilege of determining other people's business models for them, and this is a function of business model.

[13:15:04.0000] <StoneCypher>
Hixie: If the publisher allows that model, yes.  I don't actually know what Paramount allows, and historically, they've been one of the dumber dinosaurs in the market.

[13:15:05.0000] <TabAtkins>
StoneCypher: Do you believe that IKEA has a legitimate right to control what I do with my shelf?

[13:15:06.0000] <zewt>
content authors don't have the privilege of telling everyone else that they must implement proprietary copy protection.

[13:15:11.0000] <StoneCypher>
Hixie: If the publisher allows that model, yes.  I don't actually know what Paramount allows, and historically, they've been one of the dumber dinosaurs in the market.

[13:15:18.0000] <TabAtkins>
StoneCypher: Do you believe that IKEA has a legitimate right to control what I do with my shelf?

[13:15:27.0000] <zewt>
content authors don't have the privilege of telling everyone else that they must implement proprietary copy protection.

[13:15:57.0000] <Hixie>
StoneCypher: you assert that it is the publisher that legally controls whether or not i am allowed to watch content i legally purchase (not license) from them, in the absence of drm?

[13:16:00.0000] <Hixie>
StoneCypher: you assert that it is the publisher that legally controls whether or not i am allowed to watch content i legally purchase (not license) from them, in the absence of drm?

[13:16:01.0000] <StoneCypher>
In most cases you haven't purchased it.  You've licensed it.

[13:16:23.0000] <StoneCypher>
In most cases you haven't purchased it.  You've licensed it.

[13:16:33.0000] <StoneCypher>
Look, I don't want to be asked to defend your indignance towards bad businesspeople

[13:16:35.0000] <Hixie>
StoneCypher: i am only asking about hte case of purchasing it.

[13:16:40.0000] <StoneCypher>
I don't like their choices any more than you do

[13:16:44.0000] <StoneCypher>
but that is not the way I look at this at all

[13:17:00.0000] <StoneCypher>
Look, I don't want to be asked to defend your indignance towards bad businesspeople

[13:17:01.0000] <Hixie>
StoneCypher: i am only asking about hte case of purchasing it.

[13:17:02.0000] <StoneCypher>
I don't like their choices any more than you do

[13:17:03.0000] <StoneCypher>
but that is not the way I look at this at all

[13:17:04.0000] <StoneCypher>
Asking me these heavily loaded questions while ignoring that my viewpoint comes from a fundamentally different approach just structures this so that you aren't able to see the way I look at it

[13:17:05.0000] <StoneCypher>
Why is it that the people who generated the work don't have rights?

[13:17:06.0000] <StoneCypher>
You say "do I have the right to watch this"

[13:17:08.0000] <StoneCypher>
Asking me these heavily loaded questions while ignoring that my viewpoint comes from a fundamentally different approach just structures this so that you aren't able to see the way I look at it

[13:17:20.0000] <StoneCypher>
Why is it that the people who generated the work don't have rights?

[13:17:26.0000] <StoneCypher>
You say "do I have the right to watch this"

[13:17:36.0000] <StoneCypher>
caveat emptor, dude.  just pay attention.  most vendors have woken up.

[13:17:47.0000] <TabAtkins>
StoneCypher: Why is it that the IKEA store that generated my shelf don't have rights?

[13:17:50.0000] <zewt>
tip: learning to state your viewpoint in less than three pages increases the odds of people understanding it

[13:17:52.0000] <StoneCypher>
there's a really, really different business landscape out there for DRM protected things and unprotected things

[13:18:00.0000] <StoneCypher>
caveat emptor, dude.  just pay attention.  most vendors have woken up.

[13:18:01.0000] <TabAtkins>
StoneCypher: Why is it that the IKEA store that generated my shelf don't have rights?

[13:18:02.0000] <zewt>
tip: learning to state your viewpoint in less than three pages increases the odds of people understanding it

[13:18:03.0000] <StoneCypher>
there's a really, really different business landscape out there for DRM protected things and unprotected things

[13:18:04.0000] <StoneCypher>
holding vendors will let you try things in DRM that they won't let you try open, or which they want radically different prices for, often which make the endeavor uncompletable

[13:18:05.0000] <zewt>
read: "we've lost the DRM war, give it up, you've lost your rights and they're not coming back"

[13:18:19.0000] <StoneCypher>
holding vendors will let you try things in DRM that they won't let you try open, or which they want radically different prices for, often which make the endeavor uncompletable

[13:18:27.0000] <zewt>
read: "we've lost the DRM war, give it up, you've lost your rights and they're not coming back"

[13:18:31.0000] <Hixie>
StoneCypher: i'm still just asking a simple question, whether or not i have the right to watch content that i purchased, not licensed, and that has no drm. A book, on paper, for example. Or a star trek episode, on a laser disc.

[13:18:32.0000] <TabAtkins>
Personally, I just love the mental disconnect where people insist that copyright infringment is "just like stealing!" but then claim that IP is magical in all sorts of ways that physical stuff isn't.

[13:18:59.0000] <Hixie>
StoneCypher: (legal right)

[13:19:00.0000] <Hixie>
StoneCypher: i'm still just asking a simple question, whether or not i have the right to watch content that i purchased, not licensed, and that has no drm. A book, on paper, for example. Or a star trek episode, on a laser disc.

[13:19:01.0000] <TabAtkins>
Personally, I just love the mental disconnect where people insist that copyright infringment is "just like stealing!" but then claim that IP is magical in all sorts of ways that physical stuff isn't.

[13:19:01.0000] <StoneCypher>
Hixie: yes, and I've answered you several times.  "I don't believe that question can be answered in the general.  I believe that that's a contextual issue which has to do with the choices the publisher made at the time of sale."

[13:19:02.0000] <Hixie>
StoneCypher: (legal right)

[13:19:03.0000] <StoneCypher>
Hixie: yes, and I've answered you several times.  "I don't believe that question can be answered in the general.  I believe that that's a contextual issue which has to do with the choices the publisher made at the time of sale."

[13:19:04.0000] <StoneCypher>
it's like asking if you have the right to knock out a wall

[13:19:05.0000] <TabAtkins>
StoneCypher: Why is that question answereable in general for shelves?

[13:19:06.0000] <TabAtkins>
But not for movies?

[13:19:07.0000] <StoneCypher>
depends: do you rent or own?  is it a landmark?  is it safe?  et cetera.

[13:19:11.0000] <StoneCypher>
it's like asking if you have the right to knock out a wall

[13:19:16.0000] <TabAtkins>
StoneCypher: Why is that question answereable in general for shelves?

[13:19:20.0000] <TabAtkins>
But not for movies?

[13:19:22.0000] <StoneCypher>
depends: do you rent or own?  is it a landmark?  is it safe?  et cetera.

[13:19:36.0000] <StoneCypher>
not all questions have simple answerws.

[13:19:47.0000] <Hixie>
StoneCypher: ok let's ask a non-general question. If I were to buy (not license) a laserdisc of a star trek episode, would i legally be allowed to watch it?

[13:19:49.0000] <TabAtkins>
I buy a shelf from Ikea.  If my shelf was a movie, IKEA apparently has the right to control what I put on it.

[13:20:00.0000] <StoneCypher>
not all questions have simple answerws.

[13:20:01.0000] <Hixie>
StoneCypher: ok let's ask a non-general question. If I were to buy (not license) a laserdisc of a star trek episode, would i legally be allowed to watch it?

[13:20:02.0000] <TabAtkins>
I buy a shelf from Ikea.  If my shelf was a movie, IKEA apparently has the right to control what I put on it.

[13:20:03.0000] <StoneCypher>
Hixie: i already answered that.  "I don't know what Paramount's policies are.  Probably."

[13:20:04.0000] <StoneCypher>
Most movies these days, yes

[13:20:04.0000] <StoneCypher>
Hixie: i already answered that.  "I don't know what Paramount's policies are.  Probably."

[13:20:05.0000] <StoneCypher>
it says on the box

[13:20:06.0000] <StoneCypher>
it says on the amazon page.

[13:20:18.0000] <StoneCypher>
Most movies these days, yes

[13:20:20.0000] <StoneCypher>
it says on the box

[13:20:24.0000] <StoneCypher>
it says on the amazon page.

[13:20:37.0000] <StoneCypher>
some of them even brag about it on the commercials these days.

[13:20:42.0000] <TabAtkins>
StoneCypher: Do you realize how insane your position is?  I buy things, but I have to be intimiately familiar with Paramount's policies before I know whether I can *legally watch them*?

[13:20:56.0000] <Hixie>
StoneCypher: so to clarify, you assert that paramount have a legal right to decide whether i can legally watch a laserdisc of a star trek episode that i purchased?

[13:21:00.0000] <StoneCypher>
some of them even brag about it on the commercials these days.

[13:21:01.0000] <TabAtkins>
StoneCypher: Do you realize how insane your position is?  I buy things, but I have to be intimiately familiar with Paramount's policies before I know whether I can *legally watch them*?

[13:21:02.0000] <Hixie>
StoneCypher: so to clarify, you assert that paramount have a legal right to decide whether i can legally watch a laserdisc of a star trek episode that i purchased?

[13:21:03.0000] <zewt>
(you also don't convince people of your position by hedging on simple questions like this; if you buy a movie, you have the right to watch it. period)

[13:21:04.0000] <StoneCypher>
Hixie: I assert 1) that that is a license, not a purchase; 2) that what rights you have are clearly written on the box, and 3) if you don't like it, vote with your dollars, not by crippling the web

[13:21:09.0000] <zewt>
(you also don't convince people of your position by hedging on simple questions like this; if you buy a movie, you have the right to watch it. period)

[13:21:22.0000] <StoneCypher>
Hixie: I assert 1) that that is a license, not a purchase; 2) that what rights you have are clearly written on the box, and 3) if you don't like it, vote with your dollars, not by crippling the web

[13:21:34.0000] <StoneCypher>
you know what the rights are before the purchase

[13:21:36.0000] <StoneCypher>
that's good enough

[13:21:40.0000] <Hixie>
StoneCypher: ok. since you are now making an assertion, please prove it.

[13:21:44.0000] <StoneCypher>
oy.

[13:21:52.0000] <StoneCypher>
no, answering your question is not an assertion

[13:21:59.0000] <StoneCypher>
and when TabAtkins gets held to that standard, so may i be

[13:22:00.0000] <StoneCypher>
you know what the rights are before the purchase

[13:22:01.0000] <StoneCypher>
that's good enough

[13:22:02.0000] <Hixie>
StoneCypher: ok. since you are now making an assertion, please prove it.

[13:22:03.0000] <StoneCypher>
oy.

[13:22:04.0000] <StoneCypher>
no, answering your question is not an assertion

[13:22:05.0000] <StoneCypher>
and when TabAtkins gets held to that standard, so may i be

[13:22:06.0000] <TabAtkins>
Haha, sure.

[13:22:07.0000] <StoneCypher>
i don't understand why you lot are so hostile

[13:22:08.0000] <StoneCypher>
i just asked you to explain your position

[13:22:09.0000] <StoneCypher>
i didn't say your position was wrong

[13:22:17.0000] <TabAtkins>
Haha, sure.

[13:22:18.0000] <StoneCypher>
i don't understand why you lot are so hostile

[13:22:23.0000] <StoneCypher>
i just asked you to explain your position

[13:22:29.0000] <StoneCypher>
i didn't say your position was wrong

[13:22:35.0000] <Hixie>
StoneCypher: you said "I assert..."

[13:22:42.0000] <Hixie>
StoneCypher: that is not an assertion?

[13:22:43.0000] <TabAtkins>
Because you're holding an insane position, spamming the room with *tons* of text unnecessarily, and being extraordinarily cagey with simple questions.

[13:22:43.0000] <StoneCypher>
oh for christ's sake

[13:22:47.0000] <StoneCypher>
i was parroting you for emphasis.

[13:22:53.0000] <StoneCypher>
you're being obstinant

[13:23:00.0000] <Hixie>
StoneCypher: you said "I assert..."

[13:23:01.0000] <Hixie>
StoneCypher: that is not an assertion?

[13:23:02.0000] <TabAtkins>
Because you're holding an insane position, spamming the room with *tons* of text unnecessarily, and being extraordinarily cagey with simple questions.

[13:23:03.0000] <StoneCypher>
oh for christ's sake

[13:23:04.0000] <StoneCypher>
i was parroting you for emphasis.

[13:23:05.0000] <StoneCypher>
you're being obstinant

[13:23:05.0000] <Hixie>
so you don't assert it?

[13:23:06.0000] <Hixie>
so you don't assert it?

[13:23:07.0000] <StoneCypher>
TabAtkins: hush

[13:23:08.0000] <StoneCypher>
Hixie: stop micro-focussing on non-issues, please.  it doesn't matter.  nobody gets held to proving their claims here.

[13:23:26.0000] <StoneCypher>
Hixie: stop micro-focussing on non-issues, please.  it doesn't matter.  nobody gets held to proving their claims here.

[13:23:37.0000] <StoneCypher>
Hixie: you're responding to "explain your position" with "no you explain yours"

[13:23:42.0000] <StoneCypher>
you know perfectly well what that means.

[13:23:46.0000] <zewt>
zzz

[13:24:00.0000] <StoneCypher>
Hixie: you're responding to "explain your position" with "no you explain yours"

[13:24:01.0000] <StoneCypher>
you know perfectly well what that means.

[13:24:02.0000] <zewt>
zzz

[13:24:03.0000] <StoneCypher>
Hixie: the fact of the matter is simple: you lot are debating whether a tool should be available to people who want to build things using it

[13:24:24.0000] <StoneCypher>
Hixie: the fact of the matter is simple: you lot are debating whether a tool should be available to people who want to build things using it

[13:24:30.0000] <Hixie>
StoneCypher: when i ask you concrete questions, you say "stop micro-focussing on non-issues". When I ask you general question, you say "I don't believe that question can be answered in the general".

[13:24:41.0000] <Hixie>
i'm not debating anything currently

[13:24:41.0000] <StoneCypher>
Hixie: and to shoot it down there are these claims being made about rights, morals and ethics which do not hold up to even basic request for explanation

[13:24:51.0000] <StoneCypher>
that is frankly dishonest

[13:24:54.0000] <Hixie>
i'm just trying to ask you questions to see what you believe the law is

[13:24:55.0000] <StoneCypher>
you're cutting away 80% of the answer

[13:25:00.0000] <Hixie>
StoneCypher: when i ask you concrete questions, you say "stop micro-focussing on non-issues". When I ask you general question, you say "I don't believe that question can be answered in the general".

[13:25:00.0000] <StoneCypher>
to make it look like the answer wasn't there

[13:25:01.0000] <Hixie>
i'm not debating anything currently

[13:25:02.0000] <StoneCypher>
Hixie: and to shoot it down there are these claims being made about rights, morals and ethics which do not hold up to even basic request for explanation

[13:25:03.0000] <StoneCypher>
that is frankly dishonest

[13:25:04.0000] <Hixie>
i'm just trying to ask you questions to see what you believe the law is

[13:25:05.0000] <StoneCypher>
you're cutting away 80% of the answer

[13:25:06.0000] <StoneCypher>
to make it look like the answer wasn't there

[13:25:06.0000] <StoneCypher>
i am disappointed in you.

[13:25:07.0000] <StoneCypher>
i am disappointed in you.

[13:25:08.0000] <Ms2ger>
Oh no!

[13:25:09.0000] <jgraham>
I'm going to have to use /ignore, sorry

[13:25:10.0000] <Hixie>
let me know when you're willing to answer my questions :-)

[13:25:15.0000] <Ms2ger>
Oh no!

[13:25:16.0000] <jgraham>
I'm going to have to use /ignore, sorry

[13:25:19.0000] <Hixie>
let me know when you're willing to answer my questions :-)

[13:25:33.0000] <StoneCypher>
i did.  repeatedly.

[13:25:47.0000] <TabAtkins>
Me too, jgraham .

[13:25:51.0000] <StoneCypher>
here's what i actually said

[13:25:51.0000] <StoneCypher>
[16:19] <StoneCypher> Hixie: yes, and I've answered you several times.  "I don't believe that question can be answered in the general.  I believe that that's a contextual issue which has to do with the choices the publisher made at the time of sale."

[13:25:56.0000] <StoneCypher>
that isn't what you claim i said at all.

[13:26:00.0000] <StoneCypher>
i did.  repeatedly.

[13:26:01.0000] <TabAtkins>
Me too, jgraham .

[13:26:02.0000] <StoneCypher>
here's what i actually said

[13:26:03.0000] <StoneCypher>
[16:19] <StoneCypher> Hixie: yes, and I've answered you several times.  "I don't believe that question can be answered in the general.  I believe that that's a contextual issue which has to do with the choices the publisher made at the time of sale."

[13:26:04.0000] <StoneCypher>
that isn't what you claim i said at all.

[13:26:05.0000] <StoneCypher>
i was repeatedly very clear.  "the answer to that question hinges on the specific sale."

[13:26:06.0000] <Hixie>
"I don't believe that question can be answered" isn't an answer, it's specifically a non-answer.

[13:26:07.0000] <Hixie>
when i asked abotu a specific sale, you told me it wasn't a sale. also not an answer.

[13:26:08.0000] <StoneCypher>
i was repeatedly very clear.  "the answer to that question hinges on the specific sale."

[13:26:12.0000] <Hixie>
"I don't believe that question can be answered" isn't an answer, it's specifically a non-answer.

[13:26:21.0000] <Hixie>
when i asked abotu a specific sale, you told me it wasn't a sale. also not an answer.

[13:26:32.0000] <StoneCypher>
actually, it's one sentence from the middle of a valid answer that you're cherry picking in the fashion of a bad politically active newscaster.

[13:26:35.0000] <StoneCypher>
this is what i really said: [16:19] <StoneCypher> Hixie: yes, and I've answered you several times.  "I don't believe that question can be answered in the general.  I believe that that's a contextual issue which has to do with the choices the publisher made at the time of sale."

[13:26:40.0000] <StoneCypher>
that is not what you're currently claiming.

[13:26:44.0000] <StoneCypher>
this is flat out dishonesty.

[13:26:50.0000] <WeirdAl>
/me snores

[13:27:00.0000] <StoneCypher>
actually, it's one sentence from the middle of a valid answer that you're cherry picking in the fashion of a bad politically active newscaster.

[13:27:01.0000] <StoneCypher>
this is what i really said: [16:19] <StoneCypher> Hixie: yes, and I've answered you several times.  "I don't believe that question can be answered in the general.  I believe that that's a contextual issue which has to do with the choices the publisher made at the time of sale."

[13:27:02.0000] <StoneCypher>
that is not what you're currently claiming.

[13:27:03.0000] <StoneCypher>
this is flat out dishonesty.

[13:27:04.0000] <WeirdAl>
/me snores

[13:27:05.0000] <Hixie>
StoneCypher: you said it was too general and wanted a specific, i gave you a specific and you said my specific was wrong.

[13:27:06.0000] <StoneCypher>
that is not correct.

[13:27:07.0000] <Hixie>
<StoneCypher> Hixie: I assert 1) that that is a license, not a purchase

[13:27:11.0000] <Hixie>
StoneCypher: you said it was too general and wanted a specific, i gave you a specific and you said my specific was wrong.

[13:27:16.0000] <StoneCypher>
that is not correct.

[13:27:29.0000] <Hixie>
<StoneCypher> Hixie: I assert 1) that that is a license, not a purchase

[13:27:34.0000] <Hixie>
<StoneCypher> no, answering your question is not an assertion

[13:27:39.0000] <StoneCypher>
/me sighs

[13:27:50.0000] <StoneCypher>
keep editing it down to bare twigs to hide the pieces you want to pretend aren't there

[13:27:52.0000] <Hixie>
i'm happy to start over if you like

[13:27:58.0000] <StoneCypher>
why bother, you'll just do the same thing

[13:28:00.0000] <Hixie>
<StoneCypher> no, answering your question is not an assertion

[13:28:01.0000] <StoneCypher>
/me sighs

[13:28:02.0000] <StoneCypher>
keep editing it down to bare twigs to hide the pieces you want to pretend aren't there

[13:28:03.0000] <Hixie>
i'm happy to start over if you like

[13:28:04.0000] <StoneCypher>
why bother, you'll just do the same thing

[13:28:05.0000] <WeirdAl>
starting over might be best for both

[13:28:06.0000] <zewt>
StoneCypher: don't /msg me; not interested

[13:28:07.0000] <StoneCypher>
WeirdAl: meta isn't helpful.

[13:28:08.0000] <WeirdAl>
neither is stubbornness :)

[13:28:09.0000] <WeirdAl>
starting over might be best for both

[13:28:12.0000] <zewt>
StoneCypher: don't /msg me; not interested

[13:28:16.0000] <StoneCypher>
WeirdAl: meta isn't helpful.

[13:28:28.0000] <WeirdAl>
neither is stubbornness :)

[13:28:44.0000] <WeirdAl>
take a break, try again

[13:28:56.0000] <StoneCypher>
Hixie: i gave you answers in four different fashions.  you're pretending none are there.  i responded to your open cases; i responded to your specific cases.  i gave you an answer by metaphor with buildings, and i answered flat out.

[13:29:00.0000] <WeirdAl>
take a break, try again

[13:29:01.0000] <StoneCypher>
Hixie: i gave you answers in four different fashions.  you're pretending none are there.  i responded to your open cases; i responded to your specific cases.  i gave you an answer by metaphor with buildings, and i answered flat out.

[13:29:02.0000] <Hixie>
StoneCypher: if i buy a laserdisc of a star trek episode, can i legally watch it?

[13:29:28.0000] <Hixie>
StoneCypher: if i buy a laserdisc of a star trek episode, can i legally watch it?

[13:29:31.0000] <Hixie>
StoneCypher: not a license, a purchase

[13:29:35.0000] <StoneCypher>
for example, when you asked me about paramount on laserdisc, i responded "i don't know paramount's policies; probably."  that's a clear indication that i find that to be a sensible specific case of the question.

[13:29:39.0000] <StoneCypher>
dude

[13:29:41.0000] <StoneCypher>
why do you keep asking that

[13:29:44.0000] <StoneCypher>
i've already answered three times

[13:29:50.0000] <StoneCypher>
"i don't know paramount's policies; probably"

[13:29:55.0000] <StoneCypher>
what part of that isn't an answer, to you

[13:30:00.0000] <Hixie>
StoneCypher: not a license, a purchase

[13:30:01.0000] <StoneCypher>
for example, when you asked me about paramount on laserdisc, i responded "i don't know paramount's policies; probably."  that's a clear indication that i find that to be a sensible specific case of the question.

[13:30:02.0000] <StoneCypher>
dude

[13:30:03.0000] <StoneCypher>
why do you keep asking that

[13:30:04.0000] <StoneCypher>
i've already answered three times

[13:30:05.0000] <StoneCypher>
"i don't know paramount's policies; probably"

[13:30:06.0000] <StoneCypher>
what part of that isn't an answer, to you

[13:30:07.0000] <Hixie>
you said that their policies only applied to licensing the content, not purchasing

[13:30:08.0000] <StoneCypher>
that's close to what i said

[13:30:09.0000] <Hixie>
you think it applies to puchasing also?

[13:30:09.0000] <Hixie>
you said that their policies only applied to licensing the content, not purchasing

[13:30:10.0000] <StoneCypher>
what i actually said was i believe that paramount doesn't offer star trek for purchase

[13:30:11.0000] <StoneCypher>
purchase means you can re-sell

[13:30:17.0000] <StoneCypher>
that's close to what i said

[13:30:24.0000] <Hixie>
you think it applies to puchasing also?

[13:30:25.0000] <StoneCypher>
what i actually said was i believe that paramount doesn't offer star trek for purchase

[13:30:29.0000] <StoneCypher>
purchase means you can re-sell

[13:30:43.0000] <TabAtkins>
I... I *am* allowed to resell a star trek dvd.

[13:30:44.0000] <StoneCypher>
it's what you do when you're getting stock footage

[13:30:50.0000] <StoneCypher>
TabAtkins: no, not the object, the license

[13:30:59.0000] <StoneCypher>
TabAtkins: like you could make your own star trek dvd series and put them in best buy

[13:31:00.0000] <TabAtkins>
I... I *am* allowed to resell a star trek dvd.

[13:31:01.0000] <StoneCypher>
it's what you do when you're getting stock footage

[13:31:02.0000] <StoneCypher>
TabAtkins: no, not the object, the license

[13:31:03.0000] <StoneCypher>
TabAtkins: like you could make your own star trek dvd series and put them in best buy

[13:31:04.0000] <StoneCypher>
and as far as i know paramount doesn't offer that for star trek

[13:31:05.0000] <TabAtkins>
Bwuh?  what are you talking about now?

[13:31:06.0000] <StoneCypher>
it seems very unlikely

[13:31:07.0000] <StoneCypher>
ugh

[13:31:08.0000] <TabAtkins>
I don't want the rights to the star trek franchise.

[13:31:08.0000] <StoneCypher>
and as far as i know paramount doesn't offer that for star trek

[13:31:12.0000] <TabAtkins>
Bwuh?  what are you talking about now?

[13:31:13.0000] <StoneCypher>
it seems very unlikely

[13:31:16.0000] <StoneCypher>
ugh

[13:31:18.0000] <TabAtkins>
I don't want the rights to the star trek franchise.

[13:31:31.0000] <TabAtkins>
Hixie's talkinga bout buying a *DVD*. How does movie production enter into things?

[13:31:37.0000] <StoneCypher>
TabAtkins: nobody said you did.  stop getting confused about who's saying what.  i was talking to hixie and you asked a question.

[13:31:40.0000] <StoneCypher>
/me facepalm

[13:31:41.0000] <WeirdAl>
OK, hold up. What is the ORIGINAL question?

[13:31:43.0000] <Hixie>
actually i'm talking about buying a laserdisc

[13:31:53.0000] <TabAtkins>
Hixie: We'll pretend you're not stuck in the 80s.

[13:31:55.0000] <Hixie>
(dvds are more complicated because they have drm)

[13:32:00.0000] <TabAtkins>
Hixie's talkinga bout buying a *DVD*. How does movie production enter into things?

[13:32:01.0000] <StoneCypher>
TabAtkins: nobody said you did.  stop getting confused about who's saying what.  i was talking to hixie and you asked a question.

[13:32:02.0000] <StoneCypher>
/me facepalm

[13:32:03.0000] <WeirdAl>
OK, hold up. What is the ORIGINAL question?

[13:32:03.0000] <TabAtkins>
Oh, heh, kk.

[13:32:04.0000] <Hixie>
actually i'm talking about buying a laserdisc

[13:32:05.0000] <TabAtkins>
Hixie: We'll pretend you're not stuck in the 80s.

[13:32:06.0000] <Hixie>
(dvds are more complicated because they have drm)

[13:32:07.0000] <TabAtkins>
Oh, heh, kk.

[13:32:08.0000] <TabAtkins>
/me didn't realize laserdiscs were DRM-less.

[13:32:09.0000] <StoneCypher>
WeirdAl: why TabAtkins thinks using the DMCA to back up DRM is "*definitely* unethical"

[13:32:13.0000] <TabAtkins>
/me didn't realize laserdiscs were DRM-less.

[13:32:17.0000] <StoneCypher>
WeirdAl: why TabAtkins thinks using the DMCA to back up DRM is "*definitely* unethical"

[13:32:35.0000] <WeirdAl>
that's the original question?

[13:32:37.0000] <TabAtkins>
The answer to which is, apparently, "You weren't buying the rights to the franchise!"

[13:32:38.0000] <StoneCypher>
yep

[13:32:42.0000] <jgraham>
Laserdiscs have natural DRM; no one has the hardware to read them

[13:32:43.0000] <WeirdAl>
bikeshedding!

[13:32:55.0000] <WeirdAl>
this is pointless for the WhatWG discussions

[13:32:58.0000] <TabAtkins>
So back to laserdiscs.

[13:33:00.0000] <WeirdAl>
that's the original question?

[13:33:01.0000] <StoneCypher>
yep

[13:33:01.0000] <Hixie>
WeirdAl: the original question is StoneCypher argued that the dmca doesn't reduce one's fair use rights, and i believe that statement is incorrect, because fair use says i'm legally allowed to watch something without drm, but not break drm to watch it, even if i have legally acquired it.

[13:33:02.0000] <TabAtkins>
The answer to which is, apparently, "You weren't buying the rights to the franchise!"

[13:33:03.0000] <jgraham>
Laserdiscs have natural DRM; no one has the hardware to read them

[13:33:04.0000] <WeirdAl>
bikeshedding!

[13:33:05.0000] <WeirdAl>
this is pointless for the WhatWG discussions

[13:33:06.0000] <TabAtkins>
So back to laserdiscs.

[13:33:07.0000] <Hixie>
WeirdAl: the original question is StoneCypher argued that the dmca doesn't reduce one's fair use rights, and i believe that statement is incorrect, because fair use says i'm legally allowed to watch something without drm, but not break drm to watch it, even if i have legally acquired it.

[13:33:07.0000] <StoneCypher>
what?

[13:33:08.0000] <StoneCypher>
what?

[13:33:08.0000] <StoneCypher>
i never said that

[13:33:35.0000] <WeirdAl>
we're getting amped up over something not remotely relevant to WHATWG's work :)

[13:33:46.0000] <StoneCypher>
i said the dmca doesn't take away specific fair use exemptions.  that's a *very* different statement.

[13:33:50.0000] <TabAtkins>
Apologies; I still have no idea why you brought up the franchise rights in the first place, so I can't really interpret what you actually meant by the statement.

[13:34:00.0000] <WeirdAl>
we're getting amped up over something not remotely relevant to WHATWG's work :)

[13:34:01.0000] <StoneCypher>
i said the dmca doesn't take away specific fair use exemptions.  that's a *very* different statement.

[13:34:02.0000] <TabAtkins>
Apologies; I still have no idea why you brought up the franchise rights in the first place, so I can't really interpret what you actually meant by the statement.

[13:34:40.0000] <Hixie>
StoneCypher: the specific fair use exemption i was talking about is "copying the data into my computer's ram to watch it"

[13:34:51.0000] <Hixie>
StoneCypher: which the dmca takes away

[13:34:52.0000] <StoneCypher>
that's fair use, not a fair use exception.  quite different.

[13:35:00.0000] <Hixie>
StoneCypher: the specific fair use exemption i was talking about is "copying the data into my computer's ram to watch it"

[13:35:01.0000] <Hixie>
StoneCypher: which the dmca takes away

[13:35:02.0000] <StoneCypher>
that's fair use, not a fair use exception.  quite different.

[13:35:03.0000] <Hixie>
_O

[13:35:04.0000] <StoneCypher>
a fair use exception is when fair use overrides other usage restrictions, like the criticism, newscasting or satire exceptions.

[13:35:05.0000] <Hixie>
come again?

[13:35:06.0000] <zewt>
Hixie: the original thing he argued was a confused response to a statement he didn't understand

[13:35:07.0000] <StoneCypher>
fair use is when you just leverage your fair use

[13:35:08.0000] <TabAtkins>
If this whole thing turns out to be "I meant something subtly different that makes me technically correct!" I'm going to be pissed.

[13:35:09.0000] <jgraham>
/me once read a book where a plot point was the ability to pause a laserdisc on an exact frame in a way that isn't possible with VHS. IIRC this was important to one of the characters when consuming pornography. It was a satire of corporatism

[13:35:09.0000] <Hixie>
_O

[13:35:13.0000] <StoneCypher>
a fair use exception is when fair use overrides other usage restrictions, like the criticism, newscasting or satire exceptions.

[13:35:13.0000] <Hixie>
come again?

[13:35:15.0000] <zewt>
Hixie: the original thing he argued was a confused response to a statement he didn't understand

[13:35:20.0000] <StoneCypher>
fair use is when you just leverage your fair use

[13:35:24.0000] <TabAtkins>
If this whole thing turns out to be "I meant something subtly different that makes me technically correct!" I'm going to be pissed.

[13:35:24.0000] <jgraham>
/me once read a book where a plot point was the ability to pause a laserdisc on an exact frame in a way that isn't possible with VHS. IIRC this was important to one of the characters when consuming pornography. It was a satire of corporatism

[13:36:00.0000] <Hixie>
oh crap, it's late. i gotta get lunch. bbiab.

[13:36:00.0000] <Hixie>
oh crap, it's late. i gotta get lunch. bbiab.

[13:36:01.0000] <zewt>
which is that "copy protection" often makes no serious attempt at being technically effective, and only exists for DMCA purposes

[13:36:05.0000] <zewt>
which is that "copy protection" often makes no serious attempt at being technically effective, and only exists for DMCA purposes

[13:36:41.0000] <zewt>
(and tab's statement that that's unethical)

[13:36:41.0000] <TabAtkins>
Sigh. Back to ignoring.  Not worth even trying.

[13:37:00.0000] <zewt>
(and tab's statement that that's unethical)

[13:37:01.0000] <TabAtkins>
Sigh. Back to ignoring.  Not worth even trying.

[13:37:02.0000] <StoneCypher>
hooray

[13:37:23.0000] <StoneCypher>
hooray

[13:38:58.0000] <TabAtkins>
I'm going to assume it was the "I'm correct on a technicality!" defense and be happy.

[13:39:00.0000] <TabAtkins>
I'm going to assume it was the "I'm correct on a technicality!" defense and be happy.

[13:39:01.0000] <StoneCypher>
of course you will

[13:39:02.0000] <StoneCypher>
that makes you feel correct without having actually explained yourself in any way

[13:39:11.0000] <StoneCypher>
of course you will

[13:39:19.0000] <StoneCypher>
that makes you feel correct without having actually explained yourself in any way

[13:39:44.0000] <Ms2ger>
Kids, let's stop it here

[13:39:53.0000] <WeirdAl>
amen, Ms2

[13:40:00.0000] <Ms2ger>
Kids, let's stop it here

[13:40:00.0000] <StoneCypher>
Ms2ger: these are the people who make the recommendations, are they not?

[13:40:01.0000] <WeirdAl>
amen, Ms2

[13:40:02.0000] <StoneCypher>
Ms2ger: these are the people who make the recommendations, are they not?

[13:40:42.0000] <WeirdAl>
Ms2ger: on another note... DOM4

[13:41:00.0000] <WeirdAl>
Ms2ger: on another note... DOM4

[13:41:01.0000] <WeirdAl>
Andreas gal's domjs project has an interesting idea, leaf nodes.

[13:41:02.0000] <WeirdAl>
bah, "Gal"

[13:41:08.0000] <WeirdAl>
Andreas gal's domjs project has an interesting idea, leaf nodes.

[13:41:13.0000] <WeirdAl>
bah, "Gal"

[13:41:41.0000] <WeirdAl>
if we split up the Node interface into nodes that could have kids and nodes that couldn't...

[13:42:00.0000] <WeirdAl>
if we split up the Node interface into nodes that could have kids and nodes that couldn't...

[13:42:01.0000] <WeirdAl>
it might mean cleaner code

[13:42:21.0000] <WeirdAl>
it might mean cleaner code

[13:42:38.0000] <Ms2ger>
How about splitting it up in nodes that can have a parent node, and nodes that can't? :)

[13:42:43.0000] <WeirdAl>
Node would inherit from LeafNode and have all those child-related methods, properties

[13:42:44.0000] <TabAtkins>
WeirdAl: But all nodes can have children, no?  Or do you mean like text/comment vs element?

[13:42:58.0000] <WeirdAl>
TabAtkins: exactly on the latter

[13:43:00.0000] <Ms2ger>
How about splitting it up in nodes that can have a parent node, and nodes that can't? :)

[13:43:01.0000] <WeirdAl>
Node would inherit from LeafNode and have all those child-related methods, properties

[13:43:01.0000] <TabAtkins>
kk

[13:43:02.0000] <TabAtkins>
WeirdAl: But all nodes can have children, no?  Or do you mean like text/comment vs element?

[13:43:03.0000] <WeirdAl>
TabAtkins: exactly on the latter

[13:43:04.0000] <TabAtkins>
kk

[13:43:05.0000] <Ms2ger>
LeafNode from Node, I hope

[13:43:12.0000] <Ms2ger>
LeafNode from Node, I hope

[13:43:33.0000] <WeirdAl>
Ms2ger: almost every node can have a parent (Document and DocumentFragment being I believe the exceptions)

[13:43:55.0000] <TabAtkins>
Ms2ger: Inheritance is dumb.

[13:44:00.0000] <WeirdAl>
Ms2ger: almost every node can have a parent (Document and DocumentFragment being I believe the exceptions)

[13:44:01.0000] <TabAtkins>
Ms2ger: Inheritance is dumb.

[13:44:02.0000] <Ms2ger>
(That's the distinction Gecko makes, accidentally)

[13:44:03.0000] <WeirdAl>
Ms2ger: I recommend the other way because LeafNode wouldn't need .childNodes, .firstChild, etc.

[13:44:09.0000] <Ms2ger>
(That's the distinction Gecko makes, accidentally)

[13:44:11.0000] <WeirdAl>
Ms2ger: I recommend the other way because LeafNode wouldn't need .childNodes, .firstChild, etc.

[13:44:49.0000] <Ms2ger>
I dunno if it's worthwhile

[13:44:56.0000] <jsbell>
zewt: re: string encoding - when you wrote "If UTF-16 or UTF-32 are supported, decoding to them should return Uint16Array and Uint32Array, respectively" did you mean in addition to e.g. "utf-16le" / "utf-16be" (and, since "utf-16" is an alias for "utf-16le", implicitly some other way of naming it) ?

[13:45:00.0000] <Ms2ger>
I dunno if it's worthwhile

[13:45:01.0000] <jsbell>
zewt: re: string encoding - when you wrote "If UTF-16 or UTF-32 are supported, decoding to them should return Uint16Array and Uint32Array, respectively" did you mean in addition to e.g. "utf-16le" / "utf-16be" (and, since "utf-16" is an alias for "utf-16le", implicitly some other way of naming it) ?

[13:45:02.0000] <WeirdAl>
Ms2ger: it's just a suggestion.  I'm asking for the idea to be considered among the WG, that's all.

[13:45:24.0000] <WeirdAl>
Ms2ger: it's just a suggestion.  I'm asking for the idea to be considered among the WG, that's all.

[13:45:39.0000] <Ms2ger>
File a bug, please :)

[13:46:00.0000] <Ms2ger>
File a bug, please :)

[13:46:00.0000] <WeirdAl>
hm, where?

[13:46:01.0000] <WeirdAl>
hm, where?

[13:46:02.0000] <TabAtkins>
w3c bugzilla

[13:46:03.0000] <Ms2ger>
jsbell, Make that "If UTF-32 is supported, you're wrong."

[13:46:04.0000] <Ms2ger>
WeirdAl, link at the top of the spec, under "participate"

[13:46:07.0000] <TabAtkins>
w3c bugzilla

[13:46:15.0000] <Ms2ger>
jsbell, Make that "If UTF-32 is supported, you're wrong."

[13:46:27.0000] <Ms2ger>
WeirdAl, link at the top of the spec, under "participate"

[13:46:33.0000] <WeirdAl>
ok

[13:46:54.0000] <zewt>
jsbell: no, I mean that if you encode("foo", "utf-16-whatever"), it should return a Uint16Array, not a Uint8Array

[13:47:00.0000] <WeirdAl>
ok

[13:47:01.0000] <zewt>
jsbell: no, I mean that if you encode("foo", "utf-16-whatever"), it should return a Uint16Array, not a Uint8Array

[13:47:02.0000] <zewt>
rather than always returning a Uint8Array

[13:47:27.0000] <zewt>
rather than always returning a Uint8Array

[13:48:00.0000] <aklein>
anyone familiar enough with HTML parsing to know if there's a case where the parser could associate a form control with a <form> that comes _after_ it in tree order?

[13:48:01.0000] <jsbell>
zewt: hrm. My initial reaction is that would either that would expose the platform's endianness and make the -whatever redundant, or be somewhat useless.

[13:48:02.0000] <zewt>
hmm

[13:48:06.0000] <aklein>
anyone familiar enough with HTML parsing to know if there's a case where the parser could associate a form control with a <form> that comes _after_ it in tree order?

[13:48:09.0000] <jsbell>
zewt: hrm. My initial reaction is that would either that would expose the platform's endianness and make the -whatever redundant, or be somewhat useless.

[13:48:19.0000] <zewt>
hmm

[13:48:43.0000] <Ms2ger>
aklein, how about if you run script and that moves the form around?

[13:49:00.0000] <Ms2ger>
aklein, how about if you run script and that moves the form around?

[13:49:01.0000] <jsbell>
e.g. if encode("\uFFFD", "UTF-16").view[1] == 0xFFFD

[13:49:02.0000] <zewt>
yuck, are there only native-endian views for 16-bit/32-bit values?

[13:49:03.0000] <jsbell>
if true, then the underlying buffer is platform-endian

[13:49:04.0000] <zewt>
there should be LE and BE views and no "native" type at all

[13:49:05.0000] <jsbell>
if platform dependent, that statement is weird

[13:49:06.0000] <aklein>
Ms2ger: hmm, that probably depends on the bugs of the particular browser :). I think Gecko resets the form owner in that case, but I don't believe WebKit does.

[13:49:06.0000] <zewt>
yuck, are there only native-endian views for 16-bit/32-bit values?

[13:49:13.0000] <jsbell>
if true, then the underlying buffer is platform-endian

[13:49:19.0000] <zewt>
there should be LE and BE views and no "native" type at all

[13:49:22.0000] <jsbell>
if platform dependent, that statement is weird

[13:49:28.0000] <aklein>
Ms2ger: hmm, that probably depends on the bugs of the particular browser :). I think Gecko resets the form owner in that case, but I don't believe WebKit does.

[13:49:40.0000] <Ms2ger>
There will be a "native" type that's actually LE

[13:49:41.0000] <jsbell>
DataView lets you specify endianness in the getXXX() functions

[13:49:49.0000] <zewt>
encode("foo", "UTF-16LE") should return a LittleEndianUint16Array, but on a quick look, such a thing doesn't exist

[13:49:54.0000] <Ms2ger>
aklein, what does the spec say? :)

[13:50:00.0000] <Ms2ger>
There will be a "native" type that's actually LE

[13:50:01.0000] <jsbell>
DataView lets you specify endianness in the getXXX() functions

[13:50:02.0000] <zewt>
encode("foo", "UTF-16LE") should return a LittleEndianUint16Array, but on a quick look, such a thing doesn't exist

[13:50:03.0000] <Ms2ger>
aklein, what does the spec say? :)

[13:50:03.0000] <Ms2ger>
And can you submit a test?

[13:50:05.0000] <zewt>
(on a quick search, the only place I see mentions of endianness in the typed array spec is inside DataView)

[13:50:19.0000] <zewt>
(on a quick search, the only place I see mentions of endianness in the typed array spec is inside DataView)

[13:50:40.0000] <jsbell>
right; the rest of the spec is intentionally endianness agnostic

[13:50:55.0000] <zewt>
what does that mean? heh

[13:51:00.0000] <jsbell>
right; the rest of the spec is intentionally endianness agnostic

[13:51:01.0000] <zewt>
what does that mean? heh

[13:51:02.0000] <jsbell>
it means on a BE machine you can shove the typed array into your GPU without byte twiddling so your WebGL game is fast

[13:51:03.0000] <zewt>
you must specify whether Uint16Array treats the underlying data as big or little endian (or massive compatibility problems in the future)

[13:51:21.0000] <jsbell>
it means on a BE machine you can shove the typed array into your GPU without byte twiddling so your WebGL game is fast

[13:51:26.0000] <zewt>
you must specify whether Uint16Array treats the underlying data as big or little endian (or massive compatibility problems in the future)

[13:51:48.0000] <aklein>
Ms2ger: I actually filed a bug about _that_ case (removing a form) yesterday: https://www.w3.org/Bugs/Public/show_bug.cgi?id=16394

[13:52:00.0000] <aklein>
Ms2ger: I actually filed a bug about _that_ case (removing a form) yesterday: https://www.w3.org/Bugs/Public/show_bug.cgi?id=16394

[13:52:01.0000] <zewt>
and that aside, surely there needs to be BE and LE versions of each of the 16, 32 and 64-bit integer view types

[13:52:02.0000] <zewt>
(for obvious reasons, like reading an array of little endian 32-bit numbers from a data file)

[13:52:07.0000] <zewt>
and that aside, surely there needs to be BE and LE versions of each of the 16, 32 and 64-bit integer view types

[13:52:26.0000] <zewt>
(for obvious reasons, like reading an array of little endian 32-bit numbers from a data file)

[13:52:30.0000] <Ms2ger>
aklein, and how about if you move the form control?

[13:52:44.0000] <jsbell>
for parsing data files, you use DataView and specify endianness

[13:53:00.0000] <Ms2ger>
aklein, and how about if you move the form control?

[13:53:01.0000] <jsbell>
for parsing data files, you use DataView and specify endianness

[13:53:02.0000] <aklein>
Ms2ger: that's already mostly specced: moving the form control or its ancestor change always causes a reset.

[13:53:02.0000] <aklein>
Ms2ger: that's already mostly specced: moving the form control or its ancestor change always causes a reset.

[13:53:03.0000] <zewt>
what? no

[13:53:04.0000] <jsbell>
(and a read is either a no-op or it does byte swapping)

[13:53:05.0000] <gsnedders>
zewt: There were huge long arguments about this before on the webgl mailing list.

[13:53:05.0000] <zewt>
what? no

[13:53:14.0000] <jsbell>
(and a read is either a no-op or it does byte swapping)

[13:53:27.0000] <gsnedders>
zewt: There were huge long arguments about this before on the webgl mailing list.

[13:53:30.0000] <zewt>
you *can* use it, but if you have a big array of input data you want to deal with, that's what views are for

[13:53:39.0000] <gsnedders>
There again, almost all browsers are on little-endian hardware nowadays.

[13:53:53.0000] <zewt>
gsnedders: i don't have much trust in results on that list from before I was there, so let's have it again :)

[13:54:00.0000] <zewt>
you *can* use it, but if you have a big array of input data you want to deal with, that's what views are for

[13:54:01.0000] <gsnedders>
There again, almost all browsers are on little-endian hardware nowadays.

[13:54:02.0000] <zewt>
gsnedders: i don't have much trust in results on that list from before I was there, so let's have it again :)

[13:54:03.0000] <jgraham>
gsnedders: Not all though

[13:54:04.0000] <jsbell>
the discussion (trying to dig up a link) ended up with e.g. people making their XHR calls to fetch data specifying the machine endianness so the right version could be served

[13:54:05.0000] <jgraham>
Or, at least if the MIPS variants are BE

[13:54:12.0000] <jgraham>
gsnedders: Not all though

[13:54:13.0000] <jsbell>
the discussion (trying to dig up a link) ended up with e.g. people making their XHR calls to fetch data specifying the machine endianness so the right version could be served

[13:54:25.0000] <jgraham>
Or, at least if the MIPS variants are BE

[13:54:37.0000] <jsbell>
no point in having this discussion without kbr...

[13:54:47.0000] <zewt>
there's a lot of stuff in webgl that violates web api principles; those need to be aligned when those APIs start leaking out of webgl and turn into infrastructure (as typed arrays have)

[13:55:00.0000] <jsbell>
no point in having this discussion without kbr...

[13:55:01.0000] <zewt>
there's a lot of stuff in webgl that violates web api principles; those need to be aligned when those APIs start leaking out of webgl and turn into infrastructure (as typed arrays have)

[13:55:34.0000] <Ms2ger>
WeirdAl, thx

[13:55:42.0000] <WeirdAl>
yw

[13:55:44.0000] <Ms2ger>
zewt, you mean, "webgl"

[13:56:00.0000] <Ms2ger>
WeirdAl, thx

[13:56:01.0000] <WeirdAl>
yw

[13:56:02.0000] <Ms2ger>
zewt, you mean, "webgl"

[13:56:02.0000] <zewt>
er?

[13:56:04.0000] <Ms2ger>
"a lot of stuff in webgl that violates web api principles"

[13:56:20.0000] <Ms2ger>
"a lot of stuff in webgl that violates web api principles"

[13:56:41.0000] <zewt>
jsbell: the ugly endianness thing aside, adding endian-specific view types should really be completely noncontroversial

[13:56:42.0000] <gsnedders>
jgraham: Not all, no. MIPS is mostly LE nowadays.

[13:56:52.0000] <zewt>
the ugly unspecified-endianness thing, I mean

[13:57:00.0000] <zewt>
jsbell: the ugly endianness thing aside, adding endian-specific view types should really be completely noncontroversial

[13:57:01.0000] <gsnedders>
jgraham: Not all, no. MIPS is mostly LE nowadays.

[13:57:02.0000] <zewt>
the ugly unspecified-endianness thing, I mean

[13:57:03.0000] <gsnedders>
Probably what makes sense is to spec typed arrays to be LE, even though it'll hurt perf on devices where perf matters most

[13:57:04.0000] <jsbell>
FWIW, relevant reference post on the mailing (which apparently is mostly quotes me for some reason): http://www.khronos.org/webgl/public-mailing-list/archives/1009/msg00251.html

[13:57:21.0000] <gsnedders>
Probably what makes sense is to spec typed arrays to be LE, even though it'll hurt perf on devices where perf matters most

[13:57:23.0000] <jsbell>
FWIW, relevant reference post on the mailing (which apparently is mostly quotes me for some reason): http://www.khronos.org/webgl/public-mailing-list/archives/1009/msg00251.html

[13:57:32.0000] <zewt>
gsnedders: that's what'll end up happening anyway

[13:57:46.0000] <gsnedders>
zewt: Indeed.

[13:57:54.0000] <zewt>
the "make them machine-endian-specific as an optimization" will never work in practice

[13:58:00.0000] <zewt>
gsnedders: that's what'll end up happening anyway

[13:58:01.0000] <gsnedders>
zewt: Indeed.

[13:58:02.0000] <zewt>
the "make them machine-endian-specific as an optimization" will never work in practice

[13:58:03.0000] <gsnedders>
/me should try some WebGL demos on BE hardware…

[13:58:07.0000] <gsnedders>
/me should try some WebGL demos on BE hardware…

[13:59:00.0000] <jsbell>
at any rate, this clears my question re: the encoding thread. The underlying array buffer's byte order should be le/be depending on the selected encoding. The view type is TBD.

[13:59:01.0000] <zewt>
right

[13:59:18.0000] <jsbell>
at any rate, this clears my question re: the encoding thread. The underlying array buffer's byte order should be le/be depending on the selected encoding. The view type is TBD.

[13:59:27.0000] <zewt>
right

[14:00:00.0000] <zewt>
agree with that?

[14:00:27.0000] <zewt>
agree with that?

[14:00:43.0000] <jsbell>
yes

[14:00:47.0000] <jgraham>
Yeah it only makes sense as an optimisation if you know that you are specifically targetting BE hardware. Which you hopefully never know on the web

[14:01:00.0000] <jsbell>
yes

[14:01:01.0000] <jgraham>
Yeah it only makes sense as an optimisation if you know that you are specifically targetting BE hardware. Which you hopefully never know on the web

[14:01:02.0000] <gsnedders>
Also I'm sure annevk would argue it's more fingerprinting surface

[14:01:16.0000] <gsnedders>
Also I'm sure annevk would argue it's more fingerprinting surface

[14:01:31.0000] <zewt>
jgraham: it would make sense as an optimization if you're creating data in JS to send to WebGL, both your CPU and your GPU are big-endian, and no other data fiddling has to be done by the drivers anyway

[14:01:44.0000] <zewt>
those are fairly unlikely in combination, though

[14:01:56.0000] <jgraham>
Yeah I guess

[14:01:58.0000] <jsbell>
Even if we had Uint16LE/BE views I'm not sure those should be the view type returned, though. Seems a bit surprising. But I can be swayed.

[14:02:00.0000] <zewt>
jgraham: it would make sense as an optimization if you're creating data in JS to send to WebGL, both your CPU and your GPU are big-endian, and no other data fiddling has to be done by the drivers anyway

[14:02:01.0000] <zewt>
those are fairly unlikely in combination, though

[14:02:02.0000] <jgraham>
Yeah I guess

[14:02:03.0000] <jsbell>
Even if we had Uint16LE/BE views I'm not sure those should be the view type returned, though. Seems a bit surprising. But I can be swayed.

[14:02:04.0000] <zewt>
thought you said you agreed :)

[14:02:23.0000] <zewt>
thought you said you agreed :)

[14:02:47.0000] <jsbell>
agreed the view type was TBD. That includes Uint8Array as a possibility :)

[14:02:49.0000] <jgraham>
gsnedders: Well you if you are one of the 3 people running a BE device it is quite a useful piece of fingerprinting data :)

[14:03:00.0000] <jsbell>
agreed the view type was TBD. That includes Uint8Array as a possibility :)

[14:03:01.0000] <jgraham>
gsnedders: Well you if you are one of the 3 people running a BE device it is quite a useful piece of fingerprinting data :)

[14:03:02.0000] <zewt>
seems the obvious thing to do when you're converting to a wide encoding

[14:03:03.0000] <jgraham>
Well useful to someone

[14:03:04.0000] <Ms2ger>
jgraham, we're waiting for operamemes.tumblr.com

[14:03:04.0000] <zewt>
seems the obvious thing to do when you're converting to a wide encoding

[14:03:05.0000] <jgraham>
Well useful to someone

[14:03:17.0000] <Ms2ger>
jgraham, we're waiting for operamemes.tumblr.com

[14:04:00.0000] <Hixie>
anyone want to answer some questions about HTML for a podcast on TheServerSide.com?

[14:04:09.0000] <Hixie>
anyone want to answer some questions about HTML for a podcast on TheServerSide.com?

[14:05:00.0000] <jgraham>
Ms2ger: And you think I am the right person to start that why?

[14:05:16.0000] <jgraham>
Ms2ger: And you think I am the right person to start that why?

[14:05:34.0000] <Ms2ger>
You were the Opera person who last said something in this room

[14:05:57.0000] <Ms2ger>
Also, people are wondering if Opera had it first

[14:06:00.0000] <Ms2ger>
You were the Opera person who last said something in this room

[14:06:01.0000] <Ms2ger>
Also, people are wondering if Opera had it first

[14:06:02.0000] <jgraham>
Heh

[14:06:03.0000] <jgraham>
/me fails to find an Opera devrel person in the room

[14:06:11.0000] <jgraham>
Heh

[14:06:29.0000] <jgraham>
/me fails to find an Opera devrel person in the room

[14:07:35.0000] <jgraham>
So I will point you at gsnedders. He is a student and therefore the core audience of internet memes

[14:08:00.0000] <jgraham>
So I will point you at gsnedders. He is a student and therefore the core audience of internet memes

[14:11:00.0000] <Ms2ger>
aklein, no new memes on webkitmemes today, that's unacceptable!

[14:11:19.0000] <Ms2ger>
aklein, no new memes on webkitmemes today, that's unacceptable!

[14:16:00.0000] <gsnedders>
jgraham: I may follow Glasgow University Memes, but not that much else

[14:16:11.0000] <gsnedders>
jgraham: I may follow Glasgow University Memes, but not that much else

[14:17:37.0000] <Ms2ger>
https://fbcdn-sphotos-a.akamaihd.net/hphotos-ak-snc7/s320x320/417831_2857781077365_1044755363_32776894_133982226_n.jpg

[14:18:00.0000] <Ms2ger>
https://fbcdn-sphotos-a.akamaihd.net/hphotos-ak-snc7/s320x320/417831_2857781077365_1044755363_32776894_133982226_n.jpg

[14:27:00.0000] <Ms2ger>
If anyone in browser QA wants to feel like it's 2001, http://www.crownhill.com/

[14:27:02.0000] <Ms2ger>
If anyone in browser QA wants to feel like it's 2001, http://www.crownhill.com/

[14:28:40.0000] <TabAtkins>
yaaaay

[14:28:56.0000] <TabAtkins>
My favorite bar has a site that's roughly as bad.

[14:29:00.0000] <TabAtkins>
yaaaay

[14:29:01.0000] <TabAtkins>
My favorite bar has a site that's roughly as bad.

[14:29:02.0000] <TabAtkins>
I've begged them to let me redesign it for free, but no dice. ;_;

[14:29:05.0000] <TabAtkins>
I've begged them to let me redesign it for free, but no dice. ;_;

[14:34:00.0000] <annevk>
gsnedders: I guess WebGL already made that possible

[14:34:03.0000] <annevk>
gsnedders: I guess WebGL already made that possible

[14:34:58.0000] <annevk>
Ms2ger: that's a great site :)

[14:35:00.0000] <annevk>
Ms2ger: that's a great site :)

[14:35:01.0000] <annevk>
http://www.crownhill.com/logomedbut.jpg prolly doesn't apply to the site

[14:35:02.0000] <Ms2ger>
I broke it :)

[14:35:17.0000] <annevk>
http://www.crownhill.com/logomedbut.jpg prolly doesn't apply to the site

[14:35:18.0000] <Ms2ger>
I broke it :)

[14:35:36.0000] <annevk>
what does it rely on?

[14:35:54.0000] <Ms2ger>
img.x/y

[14:36:00.0000] <annevk>
what does it rely on?

[14:36:01.0000] <Ms2ger>
img.x/y

[14:36:02.0000] <Ms2ger>
But only in NS6

[14:36:23.0000] <Ms2ger>
But only in NS6

[14:37:00.0000] <Ms2ger>
(Where NS6 is any browser where !document.all&&document.getElementById is truthy)

[14:37:11.0000] <Ms2ger>
(Where NS6 is any browser where !document.all&&document.getElementById is truthy)

[14:39:00.0000] <jgraham>
annevk: It's very impressive web design for 1968

[14:39:28.0000] <jgraham>
annevk: It's very impressive web design for 1968

[14:39:54.0000] <TabAtkins>
lol

[14:40:00.0000] <TabAtkins>
lol

[14:40:01.0000] <Ms2ger>
Does the topmost menu work in Opera?

[14:40:02.0000] <annevk>
jgraham: point

[14:40:03.0000] <annevk>
Ms2ger: looks like it

[14:40:09.0000] <Ms2ger>
Does the topmost menu work in Opera?

[14:40:10.0000] <annevk>
jgraham: point

[14:40:25.0000] <annevk>
Ms2ger: looks like it

[14:56:37.0000] <annevk>
similar to the endianness thing; have people ever adjusted their canvas code to work with the high resolution screens of the iPhone and now the iPad?

[14:57:00.0000] <annevk>
similar to the endianness thing; have people ever adjusted their canvas code to work with the high resolution screens of the iPhone and now the iPad?

[14:57:49.0000] <annevk>
the ImageData object that is

[14:58:00.0000] <annevk>
the ImageData object that is

[14:59:00.0000] <TabAtkins>
Do those devices use high-res stores yet?

[14:59:13.0000] <TabAtkins>
Do those devices use high-res stores yet?

[14:59:32.0000] <TabAtkins>
/me always uses ImageData.width/height, but that's because he's very aware of the issue.

[15:00:00.0000] <TabAtkins>
/me always uses ImageData.width/height, but that's because he's very aware of the issue.

[15:00:31.0000] <annevk>
dunno; I only remember olliej being very concerned about ImageData staying the way it was before all those gadgets were released

[15:01:00.0000] <annevk>
dunno; I only remember olliej being very concerned about ImageData staying the way it was before all those gadgets were released

[15:01:01.0000] <annevk>
I guess that came out wrong; he wanted the highres backing store to remain an option

[15:01:02.0000] <TabAtkins>
Yeah, definitely.

[15:01:07.0000] <annevk>
I guess that came out wrong; he wanted the highres backing store to remain an option

[15:01:21.0000] <TabAtkins>
Yeah, definitely.

[15:02:00.0000] <Hixie>
i expect we'll introduce a new api for high-res imagedata, sadly

[15:02:06.0000] <Hixie>
i expect we'll introduce a new api for high-res imagedata, sadly

[15:08:00.0000] <TabAtkins>
iphone 4 was retina, right?

[15:08:24.0000] <TabAtkins>
iphone 4 was retina, right?

[15:11:00.0000] <TabAtkins>
If so, it uses a normal-res backing store for canvas.

[15:11:04.0000] <TabAtkins>
If so, it uses a normal-res backing store for canvas.

[15:19:40.0000] <hober>
Hixie: i'll be emailing whatwg@ about such a new api soon :)

[15:20:00.0000] <hober>
Hixie: i'll be emailing whatwg@ about such a new api soon :)

[15:20:36.0000] <annevk>
ah guess it did indeed fail then

[15:20:51.0000] <TabAtkins>
Sigh, yeah.

[15:20:54.0000] <TabAtkins>
;_;

[15:21:00.0000] <annevk>
ah guess it did indeed fail then

[15:21:01.0000] <TabAtkins>
Sigh, yeah.

[15:21:02.0000] <TabAtkins>
;_;

[15:21:03.0000] <annevk>
I guess the upside is that I was right many years ago this would fail

[15:21:04.0000] <annevk>
that*

[15:21:12.0000] <annevk>
I guess the upside is that I was right many years ago this would fail

[15:21:17.0000] <annevk>
that*

[15:22:00.0000] <TabAtkins>
What's a simple visual demo that would be clearly different if I extracted a low-res backing store and painted it into another canvas?

[15:22:01.0000] <TabAtkins>
I guess it's anti-aliasing and such that look better on high-res devices.

[15:22:02.0000] <hober>
right

[15:22:02.0000] <TabAtkins>
What's a simple visual demo that would be clearly different if I extracted a low-res backing store and painted it into another canvas?

[15:22:15.0000] <TabAtkins>
I guess it's anti-aliasing and such that look better on high-res devices.

[15:22:24.0000] <hober>
right

[15:22:43.0000] <annevk>
filters

[15:22:47.0000] <TabAtkins>
I don't have a high-res device, so I can't make a demo and be sure of its correctness.

[15:23:00.0000] <annevk>
filters

[15:23:01.0000] <TabAtkins>
I don't have a high-res device, so I can't make a demo and be sure of its correctness.

[15:23:39.0000] <zewt>
the whole "backing store at a different resolution" thing just seems to create incompatibilities that nobody tests for

[15:24:00.0000] <zewt>
the whole "backing store at a different resolution" thing just seems to create incompatibilities that nobody tests for

[15:30:52.0000] <roc>
ahaha: http://27.media.tumblr.com/tumblr_m0zzf8Gx1N1rrf1eeo1_400.jpg

[15:31:00.0000] <roc>
ahaha: http://27.media.tumblr.com/tumblr_m0zzf8Gx1N1rrf1eeo1_400.jpg

[15:31:01.0000] <TabAtkins>
roc: Hehehe

[15:31:18.0000] <TabAtkins>
roc: Hehehe

[15:31:37.0000] <roc>
I'm crying inside

[15:32:00.0000] <roc>
I'm crying inside

[15:33:00.0000] <TabAtkins>
;_;

[15:33:26.0000] <TabAtkins>
;_;

[15:33:52.0000] <TabAtkins>
A lot of Chrome engineers on Wednesday didn't believe me when I said we were still planning to drop it. T_T

[15:34:00.0000] <TabAtkins>
A lot of Chrome engineers on Wednesday didn't believe me when I said we were still planning to drop it. T_T

[15:34:51.0000] <annevk>
at Opera we plan to be bug free at some point

[15:35:00.0000] <annevk>
at Opera we plan to be bug free at some point

[15:45:00.0000] <Hixie>
so if i move lineWidth to a separate object that you pass to strokePath()

[15:45:01.0000] <Hixie>
er

[15:45:02.0000] <Hixie>
so if i move lineWidth to a separate object that you pass to addPathByStrokingPath()

[15:45:03.0000] <Hixie>
so if i move lineWidth to a separate object that you pass to strokePath()

[15:45:21.0000] <Hixie>
er

[15:45:29.0000] <Hixie>
so if i move lineWidth to a separate object that you pass to addPathByStrokingPath()

[15:45:35.0000] <Hixie>
does that mean i should also move .font to a separate object that you pass to addText() ?

[15:46:00.0000] <Hixie>
does that mean i should also move .font to a separate object that you pass to addText() ?

[15:46:01.0000] <Hixie>
and then you have to pass both a FontStyles and a LineStyles object to addTextByStrokingPath() ?

[15:46:07.0000] <Hixie>
and then you have to pass both a FontStyles and a LineStyles object to addTextByStrokingPath() ?

[16:01:47.0000] <Hixie>
othermaciej: yt?

[16:02:00.0000] <Hixie>
othermaciej: yt?

[16:02:01.0000] <TabAtkins>
I guess so, yeah.

[16:02:02.0000] <Hixie>
TabAtkins: or just a joint CanvasStyles object that does both?

[16:02:03.0000] <TabAtkins>
I guess so, yeah.

[16:02:17.0000] <Hixie>
TabAtkins: or just a joint CanvasStyles object that does both?

[16:02:42.0000] <othermaciej>
Hixie: I'm here

[16:02:45.0000] <Hixie>
TabAtkins: also, should the methods accept a <canvas> as argument? <canvas> implements the same interface, after all

[16:02:47.0000] <TabAtkins>
Ooh, joint.

[16:02:51.0000] <TabAtkins>
No reason to split them up.

[16:02:55.0000] <Hixie>
othermaciej: we were just pondering:

[16:03:00.0000] <othermaciej>
Hixie: I'm here

[16:03:01.0000] <Hixie>
TabAtkins: also, should the methods accept a <canvas> as argument? <canvas> implements the same interface, after all

[16:03:02.0000] <TabAtkins>
Ooh, joint.

[16:03:02.0000] <Hixie>
if i move lineWidth to a separate object that you pass to addPathByStrokingPath()

[16:03:03.0000] <TabAtkins>
No reason to split them up.

[16:03:04.0000] <Hixie>
othermaciej: we were just pondering:

[16:03:05.0000] <Hixie>
if i move lineWidth to a separate object that you pass to addPathByStrokingPath()

[16:03:06.0000] <TabAtkins>
And yes, that sounds like a good idea.

[16:03:07.0000] <Hixie>
does that mean i should also move .font to a separate object that you pass to addText() ?

[16:03:08.0000] <TabAtkins>
"Just do whatever this canvas does"

[16:03:09.0000] <Hixie>
or more likely, a joint object that does both

[16:03:12.0000] <Hixie>
does that mean i should also move .font to a separate object that you pass to addText() ?

[16:03:15.0000] <TabAtkins>
"Just do whatever this canvas does"

[16:03:24.0000] <Hixie>
or more likely, a joint object that does both

[16:03:31.0000] <Hixie>
which is what we were discussing when you joined

[16:03:49.0000] <TabAtkins>
Like a PathOptions interface that canvas implements as well.

[16:03:51.0000] <othermaciej>
Hixie: in my opinion, yes, LineStyle and TextStyle should both be separate objects from Path; I could see a plausible argument for combining them (into a DrawingStyle?)

[16:04:00.0000] <Hixie>
which is what we were discussing when you joined

[16:04:01.0000] <TabAtkins>
Like a PathOptions interface that canvas implements as well.

[16:04:02.0000] <othermaciej>
Hixie: in my opinion, yes, LineStyle and TextStyle should both be separate objects from Path; I could see a plausible argument for combining them (into a DrawingStyle?)

[16:04:03.0000] <Hixie>
TabAtkins: actually i guess context, not canvas

[16:04:19.0000] <Hixie>
TabAtkins: actually i guess context, not canvas

[16:04:34.0000] <Hixie>
othermaciej: k

[16:04:45.0000] <Hixie>
othermaciej: CanvasStyles was my current name but i don't really mind what we call it

[16:04:54.0000] <Hixie>
DrawingStyle works for me if people prefer that

[16:05:00.0000] <Hixie>
othermaciej: k

[16:05:01.0000] <Hixie>
othermaciej: CanvasStyles was my current name but i don't really mind what we call it

[16:05:02.0000] <Hixie>
DrawingStyle works for me if people prefer that

[16:05:03.0000] <othermaciej>
Hixie: in theory it's not necessarily canvas-specific

[16:05:04.0000] <TabAtkins>
Hixie: Bluh, yeah.

[16:05:05.0000] <othermaciej>
Hixie: you could presumably use it in other contexts where a contextual drawing style is relevant

[16:05:12.0000] <TabAtkins>
Hixie: Bluh, yeah.

[16:05:16.0000] <othermaciej>
Hixie: you could presumably use it in other contexts where a contextual drawing style is relevant

[16:05:39.0000] <Hixie>
othermaciej: DrawingStyle it is

[16:06:00.0000] <Hixie>
othermaciej: DrawingStyle it is

[16:06:34.0000] <othermaciej>
personally I'd split LineStyle and TextStyle but it doesn't hugely matter, since you can always set only the fields you care about

[16:07:00.0000] <othermaciej>
personally I'd split LineStyle and TextStyle but it doesn't hugely matter, since you can always set only the fields you care about

[16:07:34.0000] <Hixie>
the problem with splitting them is it makes the call to addTextByStrokingPath() have an even more ridiculous number of arguments

[16:08:00.0000] <Hixie>
the problem with splitting them is it makes the call to addTextByStrokingPath() have an even more ridiculous number of arguments

[16:08:01.0000] <Hixie>
or rather

[16:08:02.0000] <Hixie>
addPathByStrokingText

[16:08:02.0000] <Hixie>
or rather

[16:08:03.0000] <Hixie>
text, line style, text style, transform, path, max width

[16:08:04.0000] <Hixie>
i think

[16:08:06.0000] <Hixie>
addPathByStrokingText

[16:08:13.0000] <Hixie>
text, line style, text style, transform, path, max width

[16:08:19.0000] <Hixie>
i think

[16:08:37.0000] <Hixie>
it's almost dictionary-arguments territory

[16:09:00.0000] <Hixie>
it's almost dictionary-arguments territory

[16:09:01.0000] <TabAtkins>
addPathByPathingPath(path)

[16:09:02.0000] <TabAtkins>
For the path-along-a-path goodness.

[16:09:08.0000] <TabAtkins>
addPathByPathingPath(path)

[16:09:21.0000] <TabAtkins>
For the path-along-a-path goodness.

[16:09:43.0000] <Hixie>
i don't like it when you parody my apis and i am briefly unsure if you're being funny or serious

[16:09:47.0000] <Hixie>
:-P

[16:09:52.0000] <TabAtkins>
Hahaha

[16:10:00.0000] <Hixie>
i don't like it when you parody my apis and i am briefly unsure if you're being funny or serious

[16:10:01.0000] <Hixie>
:-P

[16:10:02.0000] <TabAtkins>
Hahaha

[16:16:56.0000] <zewt>
does somebody else feel like replying to charles because I don't have the energy to teach elementary web api design right now

[16:17:00.0000] <zewt>
does somebody else feel like replying to charles because I don't have the energy to teach elementary web api design right now

[16:17:01.0000] <TabAtkins>
I was hoping you'd do it.

[16:17:03.0000] <TabAtkins>
I was hoping you'd do it.

[16:18:48.0000] <zewt>
(did anything he wrote actually have anything to do with anything I said? anything anything)

[16:19:00.0000] <zewt>
(did anything he wrote actually have anything to do with anything I said? anything anything)

[16:19:01.0000] <TabAtkins>
Well, the part where he said you're wrong and devs should just follow the spec.

[16:19:15.0000] <TabAtkins>
Well, the part where he said you're wrong and devs should just follow the spec.

[16:20:48.0000] <zewt>
which is essentially impossible anyway; there's no sane coding pattern with the api in the spec, for many cases

[16:21:00.0000] <zewt>
which is essentially impossible anyway; there's no sane coding pattern with the api in the spec, for many cases

[16:21:35.0000] <TabAtkins>
Yeah, besides just duplicating all your code paths.

[16:21:48.0000] <TabAtkins>
Which I guess doesn't qualify as "sane", and so is in line with what you said. ^_^

[16:22:00.0000] <TabAtkins>
Yeah, besides just duplicating all your code paths.

[16:22:01.0000] <TabAtkins>
Which I guess doesn't qualify as "sane", and so is in line with what you said. ^_^

[16:22:34.0000] <zewt>
i mean, if you have a binary data file that's little endian, and you want to access it as an array, the only way to make that "work" under the current spec is to add a test for big endian (by testing it) and manually byte swap the data

[16:23:00.0000] <zewt>
i mean, if you have a binary data file that's little endian, and you want to access it as an array, the only way to make that "work" under the current spec is to add a test for big endian (by testing it) and manually byte swap the data

[16:23:01.0000] <zewt>
which i wouldn't call sane either

[16:23:03.0000] <zewt>
which i wouldn't call sane either

[16:31:00.0000] <TabAtkins>
Yeah, and if you're going to do that, why not just make it automatic?

[16:31:01.0000] <TabAtkins>
You're basically *required* to do it.

[16:31:20.0000] <TabAtkins>
Yeah, and if you're going to do that, why not just make it automatic?

[16:31:26.0000] <TabAtkins>
You're basically *required* to do it.

[16:31:47.0000] <TabAtkins>
Unless you're doing extremely basic data pass-through, you need to have a known endianness.

[16:31:52.0000] <zewt>
i think the theory is people creating model/vertex/whatever data in javascript, with the output going to a native-endian buffer, then the native-endian buffer going to the GPU without conversion

[16:32:00.0000] <TabAtkins>
Unless you're doing extremely basic data pass-through, you need to have a known endianness.

[16:32:01.0000] <zewt>
i think the theory is people creating model/vertex/whatever data in javascript, with the output going to a native-endian buffer, then the native-endian buffer going to the GPU without conversion

[16:32:47.0000] <zewt>
but the idea that every web developer should need to test two incompatible webs, for a premature optimization for an architecture combination that doesn't exist ......

[16:33:00.0000] <zewt>
but the idea that every web developer should need to test two incompatible webs, for a premature optimization for an architecture combination that doesn't exist ......


2012-03-17
[18:00:47.0000] <zewt>
https://www.w3.org/Bugs/Public/show_bug.cgi?id=16285 if only someone had already written a clean spec documenting how dom events wo--oh, right

[18:01:00.0000] <zewt>
https://www.w3.org/Bugs/Public/show_bug.cgi?id=16285 if only someone had already written a clean spec documenting how dom events wo--oh, right

[06:49:00.0000] <smaug____>
um, nested event loops are so much fun :/

[06:49:25.0000] <smaug____>
um, nested event loops are so much fun :/

[06:50:00.0000] <smaug____>
/me wants to kill all the sync and nested event loop things from the web platform (window context)

[06:50:25.0000] <smaug____>
/me wants to kill all the sync and nested event loop things from the web platform (window context)

[07:29:00.0000] <smaug____>
alert, confirm, prompt. are there other sync/blocking dialogs

[07:29:09.0000] <smaug____>
alert, confirm, prompt. are there other sync/blocking dialogs

[07:29:40.0000] <zewt>
file pickers, usually

[07:29:52.0000] <smaug____>
ah

[07:29:59.0000] <smaug____>
I have those :)

[07:30:00.0000] <zewt>
file pickers, usually

[07:30:01.0000] <smaug____>
ah

[07:30:01.0000] <smaug____>
er

[07:30:02.0000] <smaug____>
I have those :)

[07:30:03.0000] <smaug____>
er

[07:30:04.0000] <smaug____>
hate even

[07:30:45.0000] <zewt>
i wonder how many sites would break if that was made non-modal; might confuse some stuff that calls input.click() or whatever it is

[07:31:00.0000] <zewt>
i wonder how many sites would break if that was made non-modal; might confuse some stuff that calls input.click() or whatever it is

[07:31:01.0000] <zewt>
i've wished those would at least be made tab-modal, like the other dialogs, but since they're OS-provided things that's hard to do, I think

[07:31:13.0000] <zewt>
i've wished those would at least be made tab-modal, like the other dialogs, but since they're OS-provided things that's hard to do, I think

[07:32:00.0000] <smaug____>
file picker doesn't have to be OS-provided  though

[07:32:01.0000] <zewt>
it'd be annoying to users if it was nonstandard

[07:32:02.0000] <smaug____>
sure

[07:32:07.0000] <smaug____>
file picker doesn't have to be OS-provided  though

[07:32:17.0000] <zewt>
it'd be annoying to users if it was nonstandard

[07:32:24.0000] <smaug____>
sure

[07:32:39.0000] <smaug____>
(expect in OSX anything is better than the default filepicker)

[07:32:42.0000] <smaug____>
except

[07:32:43.0000] <zewt>
oh yeah, onbeforeunload, technically

[07:32:48.0000] <smaug____>
I can't type today

[07:32:50.0000] <zewt>
not as bad as the others since it doesn't happen in the middle of scripts

[07:33:00.0000] <smaug____>
(expect in OSX anything is better than the default filepicker)

[07:33:01.0000] <smaug____>
except

[07:33:02.0000] <zewt>
oh yeah, onbeforeunload, technically

[07:33:03.0000] <smaug____>
I can't type today

[07:33:04.0000] <zewt>
not as bad as the others since it doesn't happen in the middle of scripts

[07:33:40.0000] <zewt>
so maybe it doesn't count

[07:34:00.0000] <zewt>
so maybe it doesn't count

[07:34:57.0000] <smaug____>
it does

[07:35:00.0000] <smaug____>
it does

[07:35:01.0000] <zewt>
depends on what you're asking for

[07:35:20.0000] <zewt>
depends on what you're asking for

[07:35:52.0000] <smaug____>
just doing something for mutationobservers...

[07:36:00.0000] <smaug____>
just doing something for mutationobservers...

[07:36:01.0000] <smaug____>
and this is very mozilla specific things..

[07:36:02.0000] <smaug____>
since all the alert() etc are also just DOM documents

[07:36:02.0000] <smaug____>
and this is very mozilla specific things..

[07:36:03.0000] <smaug____>
need to do so microtask hackery

[07:36:13.0000] <smaug____>
since all the alert() etc are also just DOM documents

[07:36:29.0000] <smaug____>
need to do so microtask hackery

[07:36:38.0000] <smaug____>
s/so/some/

[07:37:00.0000] <smaug____>
s/so/some/

[07:37:51.0000] <zewt>
maybe SSL nags in some cases?

[07:38:00.0000] <zewt>
maybe SSL nags in some cases?

[07:38:01.0000] <smaug____>
bah, I don't care about SSL :)

[07:38:01.0000] <smaug____>
bah, I don't care about SSL :)

[07:39:33.0000] <smaug____>
zewt: thanks. I had forgotten filepicker and beforeunload.

[07:40:00.0000] <smaug____>
zewt: thanks. I had forgotten filepicker and beforeunload.

[09:21:31.0000] <jwheare>
TabAtkins: hey, just read your http://www.xanthir.com/blog/b48H0 after having a chat with alex russel a few weeks ago re: constraint position layouts. do you know of any javascript implementations of your ideas or anything like them?

[09:22:00.0000] <jwheare>
TabAtkins: hey, just read your http://www.xanthir.com/blog/b48H0 after having a chat with alex russel a few weeks ago re: constraint position layouts. do you know of any javascript implementations of your ideas or anything like them?

[09:40:00.0000] <Ms2ger>
/me writes some JS tests

[09:40:01.0000] <Ms2ger>
Opera passes everything, foiled again

[09:40:01.0000] <Ms2ger>
/me writes some JS tests

[09:40:08.0000] <Ms2ger>
Opera passes everything, foiled again

[09:42:33.0000] <gsnedders>
Heheheh.

[09:42:39.0000] <gsnedders>
Go me/jgraham!

[09:43:00.0000] <gsnedders>
Heheheh.

[09:43:01.0000] <gsnedders>
Go me/jgraham!

[09:43:02.0000] <gsnedders>
Ms2ger: Are you testing hot-code behaviour or just cold-code?

[09:43:03.0000] <Ms2ger>
Cold

[09:43:09.0000] <gsnedders>
Ms2ger: Are you testing hot-code behaviour or just cold-code?

[09:43:27.0000] <Ms2ger>
Cold

[09:44:00.0000] <gsnedders>
Ms2ger: Ah, then you're unlikely to find anything *that* interesting.

[09:44:01.0000] <Ms2ger>
Mm

[09:44:05.0000] <Ms2ger>
Mm

[09:44:48.0000] <Ms2ger>
Relatedly

[09:45:00.0000] <Ms2ger>
Relatedly

[09:45:32.0000] <Ms2ger>
Does the spec define what Math.max({ valueOf: function() { print('a') } }, { valueOf: function() { print('b') } }) should print?

[09:45:36.0000] <gsnedders>
Yes.

[09:46:00.0000] <Ms2ger>
Does the spec define what Math.max({ valueOf: function() { print('a') } }, { valueOf: function() { print('b') } }) should print?

[09:46:01.0000] <gsnedders>
Yes.

[09:46:02.0000] <Ms2ger>
Do continue :)

[09:46:29.0000] <Ms2ger>
Do continue :)

[09:47:00.0000] <gsnedders>
Or at least I remember a discussion about this on es-discuss and I think the conclusion was yes. :)

[09:47:08.0000] <gsnedders>
Or at least I remember a discussion about this on es-discuss and I think the conclusion was yes. :)

[09:49:32.0000] <gsnedders>
Can't find anything, can't justify anything from spec.

[09:50:00.0000] <gsnedders>
Can't find anything, can't justify anything from spec.

[09:50:40.0000] <Ms2ger>
Me neither

[09:51:00.0000] <Ms2ger>
Me neither

[09:51:01.0000] <Ms2ger>
/me asserts 'ab'

[09:51:05.0000] <Ms2ger>
/me asserts 'ab'

[09:52:00.0000] <gsnedders>
Ms2ger: I believe everything does that

[09:52:16.0000] <gsnedders>
Ms2ger: I believe everything does that

[09:52:34.0000] <gsnedders>
Ms2ger: I'd quite like some tests for typed arrays testing JIT behaviour

[09:52:51.0000] <Ms2ger>
I'd like tests for all of HTML

[09:52:54.0000] <Ms2ger>
And a pony

[09:53:00.0000] <gsnedders>
Ms2ger: I'd quite like some tests for typed arrays testing JIT behaviour

[09:53:01.0000] <Ms2ger>
I'd like tests for all of HTML

[09:53:02.0000] <Ms2ger>
And a pony

[09:53:03.0000] <gsnedders>
left-to-right.

[09:53:04.0000] <gsnedders>
"Each of the following Math object functions applies the ToNumber abstract operator to each of its arguments (in left-to-right order if there is more than one)"

[09:53:13.0000] <gsnedders>
left-to-right.

[09:53:27.0000] <gsnedders>
"Each of the following Math object functions applies the ToNumber abstract operator to each of its arguments (in left-to-right order if there is more than one)"

[09:53:38.0000] <gsnedders>
15.8.2

[09:54:00.0000] <gsnedders>
15.8.2

[09:54:01.0000] <Ms2ger>
Excellent

[09:54:17.0000] <Ms2ger>
Excellent

[09:54:32.0000] <gsnedders>
I thought it was specified. :P

[09:55:00.0000] <gsnedders>
I thought it was specified. :P

[09:55:01.0000] <gsnedders>
Ms2ger: Also, if you want to find bugs in Opera, you better be testing ARM JIT. :P

[09:55:15.0000] <gsnedders>
Ms2ger: Also, if you want to find bugs in Opera, you better be testing ARM JIT. :P

[09:55:56.0000] <Ms2ger>
I don't care about ARM

[09:56:00.0000] <Ms2ger>
I don't care about ARM

[09:57:00.0000] <gsnedders>
Ms2ger: If you're testing ES, don't expect identical behaviour cross-platform. There are, unsurprisingly for compilers, backend specific bugs

[09:57:02.0000] <gsnedders>
Ms2ger: If you're testing ES, don't expect identical behaviour cross-platform. There are, unsurprisingly for compilers, backend specific bugs

[09:58:00.0000] <gsnedders>
Ms2ger: Also x86 v. x86_64

[09:58:24.0000] <gsnedders>
Ms2ger: Also x86 v. x86_64

[09:58:49.0000] <Philip`>
Are there e.g. SSE2 vs non-SSE2 paths in the backend?

[09:58:59.0000] <Philip`>
(or NEON vs non-NEON or whatever)

[09:59:00.0000] <Philip`>
Are there e.g. SSE2 vs non-SSE2 paths in the backend?

[09:59:01.0000] <Philip`>
(or NEON vs non-NEON or whatever)

[10:00:52.0000] <gsnedders>
Philip`: SSE2 v. non-SSE2 on x86 (not on x86-64, as SSE2 exists on x86-64 by definition)

[10:01:00.0000] <gsnedders>
Philip`: SSE2 v. non-SSE2 on x86 (not on x86-64, as SSE2 exists on x86-64 by definition)

[10:01:01.0000] <gsnedders>
Philip`: There's also other SSE stuff used, more recently

[10:01:02.0000] <gsnedders>
Philip`: Dunno about NEON

[10:01:16.0000] <gsnedders>
Philip`: There's also other SSE stuff used, more recently

[10:01:19.0000] <gsnedders>
Philip`: Dunno about NEON

[10:05:00.0000] <gsnedders>
Philip`: (though we ship with the non-SSE2 JIT disabled, because it's buggy and nobody has ever bothered to fix it)

[10:05:14.0000] <gsnedders>
Philip`: (though we ship with the non-SSE2 JIT disabled, because it's buggy and nobody has ever bothered to fix it)

[10:13:55.0000] <Ms2ger>
gsnedders, I've got failures in all my tests in at least two of {Fx, IE, Chrome}, I'm not going to bother with Opera-on-ARM :)

[10:14:00.0000] <Ms2ger>
gsnedders, I've got failures in all my tests in at least two of {Fx, IE, Chrome}, I'm not going to bother with Opera-on-ARM :)

[10:15:57.0000] <gsnedders>
Ms2ger: Heh. Testing IE10 along-side latest versions of the others?

[10:16:00.0000] <gsnedders>
Ms2ger: Heh. Testing IE10 along-side latest versions of the others?

[10:16:01.0000] <Ms2ger>
Yeah

[10:16:02.0000] <Ms2ger>
I should check if Chrome is the latest, actually

[10:16:13.0000] <Ms2ger>
Yeah

[10:16:28.0000] <Ms2ger>
I should check if Chrome is the latest, actually

[10:16:49.0000] <Ms2ger>
18.0.1025.100 beta, I guess that's pretty out of date

[10:17:00.0000] <Ms2ger>
18.0.1025.100 beta, I guess that's pretty out of date

[10:17:32.0000] <gsnedders>
19 is Dev now

[10:18:00.0000] <gsnedders>
19 is Dev now

[10:21:00.0000] <Ms2ger>
Opera 11.60 beta, how old is that?

[10:21:30.0000] <Ms2ger>
Opera 11.60 beta, how old is that?

[10:22:00.0000] <gsnedders>
Six months?

[10:22:05.0000] <gsnedders>
Six months?

[10:23:35.0000] <gsnedders>
Nah, only four.

[10:23:55.0000] <Ms2ger>
/me tries to upgrade

[10:24:00.0000] <gsnedders>
Nah, only four.

[10:24:01.0000] <Ms2ger>
/me tries to upgrade

[10:25:00.0000] <gsnedders>
/me wonders if the beta doesn't autoupdate

[10:25:06.0000] <gsnedders>
/me wonders if the beta doesn't autoupdate

[10:25:39.0000] <Ms2ger>
11.61?

[10:25:53.0000] <Ms2ger>
Hmm, that's not beta, I gues

[10:25:54.0000] <Ms2ger>
s

[10:26:00.0000] <Ms2ger>
11.61?

[10:26:01.0000] <Ms2ger>
Hmm, that's not beta, I gues

[10:26:02.0000] <Ms2ger>
s

[10:27:40.0000] <gsnedders>
Ms2ger: Indeed.

[10:27:56.0000] <gsnedders>
Ms2ger: But we should autoupdate from beta to stable (and ideally back to beta, if there becomes another)

[10:28:00.0000] <gsnedders>
Ms2ger: Indeed.

[10:28:01.0000] <gsnedders>
Ms2ger: But we should autoupdate from beta to stable (and ideally back to beta, if there becomes another)

[10:28:47.0000] <gsnedders>
Opera Next should stick with Next, which is typically latest snapshot with a slight delay.

[10:29:00.0000] <gsnedders>
Opera Next should stick with Next, which is typically latest snapshot with a slight delay.

[10:30:47.0000] <Ms2ger>
Oh, so 11.61 is what I want to be on?

[10:31:00.0000] <Ms2ger>
Oh, so 11.61 is what I want to be on?

[10:31:01.0000] <gsnedders>
Either get Opera Next which is 12 Alpha, or 11.61 if you want stable.

[10:31:10.0000] <gsnedders>
Either get Opera Next which is 12 Alpha, or 11.61 if you want stable.


2012-03-18
[22:27:54.0000] <Hixie>
can anyone think of a way to have a 2em gap between inline blocks on a line but _not_ at the start or end of lines if they wrap to multiple lines?

[22:28:00.0000] <Hixie>
can anyone think of a way to have a 2em gap between inline blocks on a line but _not_ at the start or end of lines if they wrap to multiple lines?

[22:28:01.0000] <Hixie>
the best i've come up with so far is to have 2em right padding and -2em right margin on the container

[22:28:28.0000] <Hixie>
the best i've come up with so far is to have 2em right padding and -2em right margin on the container

[22:28:35.0000] <Hixie>
which isn't really very neat

[22:29:00.0000] <Hixie>
which isn't really very neat

[22:42:41.0000] <Hixie>
(since it makes the container overflow)

[22:43:00.0000] <Hixie>
(since it makes the container overflow)

[03:54:50.0000] <dremy>
hi

[03:55:00.0000] <dremy>
hi

[04:43:41.0000] <david_carlisle>
Hixie: I thought you could set word-spacing:2em; on the parent and word-spacing:normal in the inline blocks, but it works in FF but Chrome doesn't seem to think the inline blocks are words...

[04:44:00.0000] <david_carlisle>
Hixie: I thought you could set word-spacing:2em; on the parent and word-spacing:normal in the inline blocks, but it works in FF but Chrome doesn't seem to think the inline blocks are words...

[04:47:52.0000] <david_carlisle>
Opera and IE agree with firefox and space the inline blocks

[04:48:00.0000] <david_carlisle>
Opera and IE agree with firefox and space the inline blocks

[07:19:00.0000] <zewt>
yuck, is firefox using different rescaling modes for images and canvas now or something

[07:19:13.0000] <zewt>
yuck, is firefox using different rescaling modes for images and canvas now or something

[07:21:00.0000] <zewt>
or... for images and images drawn and rescaled into canvas, or something like that

[07:21:15.0000] <zewt>
or... for images and images drawn and rescaled into canvas, or something like that

[08:01:00.0000] <annevk>
would be kind of interesting if we could drop floats

[08:01:01.0000] <annevk>
/me likes dropping features

[08:01:16.0000] <annevk>
would be kind of interesting if we could drop floats

[08:01:31.0000] <annevk>
/me likes dropping features

[08:02:36.0000] <zewt>
i wonder if anything supports them, given that they don't really exist in JS as far as I know

[08:03:00.0000] <zewt>
i wonder if anything supports them, given that they don't really exist in JS as far as I know

[08:03:01.0000] <zewt>
i mean, you have casting rules to make 1.0 == 1.0f in C, but I don't see how you can make that work in JS

[08:03:18.0000] <zewt>
i mean, you have casting rules to make 1.0 == 1.0f in C, but I don't see how you can make that work in JS

[09:15:00.0000] <annevk>
:(

[09:15:01.0000] <annevk>
mapping tables for euc-kr / big5 are all messy

[09:15:11.0000] <annevk>
:(

[09:15:26.0000] <annevk>
mapping tables for euc-kr / big5 are all messy

[10:33:52.0000] <hino>
 ��

[10:33:57.0000] <hino>
 ������ ����

[10:34:00.0000] <hino>
 ¿Í

[10:34:01.0000] <hino>
 »ç¶÷ÀÌ ¸¹³×

[10:35:00.0000] <zewt>
NO CARRIER

[10:35:17.0000] <zewt>
NO CARRIER

[10:36:00.0000] <annevk>
the thing that is worst is when you generate all the valid lead and trail bytes, then decode the bunch

[10:36:01.0000] <annevk>
and browsers offer different numbers of code points

[10:36:02.0000] <annevk>
Opera and Chrome: 17724

[10:36:11.0000] <annevk>
the thing that is worst is when you generate all the valid lead and trail bytes, then decode the bunch

[10:36:19.0000] <annevk>
and browsers offer different numbers of code points

[10:36:30.0000] <annevk>
Opera and Chrome: 17724

[10:36:57.0000] <hino>
 ok

[10:37:00.0000] <hino>
 ok

[10:38:39.0000] <hino>
 Is the original so quiet here?

[10:38:42.0000] <annevk>
Gecko: 17758

[10:39:00.0000] <hino>
 Is the original so quiet here?

[10:39:01.0000] <annevk>
Gecko: 17758

[10:39:01.0000] <annevk>
(for euc-kr)

[11:51:59.0000] <Ms2ger>
othermaciej, lovely: http://webkitmemes.tumblr.com/post/19508068848/maciej-on-git

[11:52:00.0000] <Ms2ger>
othermaciej, lovely: http://webkitmemes.tumblr.com/post/19508068848/maciej-on-git

[13:21:00.0000] <othermaciej>
hehe

[13:21:04.0000] <othermaciej>
hehe

[15:10:00.0000] <annevk>
so at least Opera and Chrome are interoperable as far as euc-kr goes

[15:10:01.0000] <annevk>
except...

[15:10:02.0000] <annevk>
Chrome uses PUA for undefined areas and Opera uses FFFD

[15:10:07.0000] <annevk>
so at least Opera and Chrome are interoperable as far as euc-kr goes

[15:10:10.0000] <annevk>
except...

[15:10:30.0000] <annevk>
Chrome uses PUA for undefined areas and Opera uses FFFD

[15:15:00.0000] <annevk>
oh, turns out Chrome does that for only some areas, not all

[15:19:35.0000] <annevk>
so weird

[15:20:00.0000] <annevk>
so weird

[15:20:01.0000] <annevk>
Gecko gets 34 more code points out of the same byte stream

[15:20:02.0000] <annevk>
but it seems unrelated to the undefined stuff

[15:20:11.0000] <annevk>
Gecko gets 34 more code points out of the same byte stream

[15:20:18.0000] <annevk>
but it seems unrelated to the undefined stuff

[15:44:00.0000] <annevk>
no surrogates

[15:44:24.0000] <annevk>
no surrogates

[16:22:00.0000] <annevk>
yay found the problem

[16:22:28.0000] <annevk>
yay found the problem

[16:22:58.0000] <annevk>
for lead byte 0xC6 Gecko does not eat some trailing bytes if the resulting code point is undefined, even though the bytes are in the valid range

[16:23:00.0000] <annevk>
for lead byte 0xC6 Gecko does not eat some trailing bytes if the resulting code point is undefined, even though the bytes are in the valid range

[16:23:52.0000] <annevk>
with that change, Firefox and Opera are identical

[16:23:55.0000] <annevk>
booyah

[16:24:00.0000] <annevk>
with that change, Firefox and Opera are identical

[16:24:01.0000] <annevk>
booyah

[16:29:43.0000] <annevk>
now I need to spec it...

[16:30:00.0000] <annevk>
now I need to spec it...


2012-03-19
[20:12:44.0000] <ferret__>
hello

[20:13:00.0000] <ferret__>
hello

[21:55:59.0000] <MikeSmith>
Hixie: I updated the dates in the boilerplate files

[21:56:01.0000] <MikeSmith>
so if you could please push to W3C so those get rebuilt I'd appreciate it

[21:56:21.0000] <MikeSmith>
so if you could please push to W3C so those get rebuilt I'd appreciate it

[22:25:34.0000] <zcorpan>
Hixie: maybe try to fiddle with word-spacing

[22:26:00.0000] <zcorpan>
Hixie: maybe try to fiddle with word-spacing

[22:26:01.0000] <Hixie>
MikeSmith: i'm mid-way through a ridiculously involved edit right now but should be able to do that monday - is that ok?

[22:26:02.0000] <Hixie>
MikeSmith: (if not i can do it sooner but it's a pain to back things out then push them back in again)

[22:26:06.0000] <Hixie>
MikeSmith: i'm mid-way through a ridiculously involved edit right now but should be able to do that monday - is that ok?

[22:26:22.0000] <Hixie>
MikeSmith: (if not i can do it sooner but it's a pain to back things out then push them back in again)

[22:27:00.0000] <Hixie>
zcorpan: yeah, i should try that

[22:27:10.0000] <Hixie>
zcorpan: yeah, i should try that

[22:27:49.0000] <MikeSmith>
Hixie: Monday is fine

[22:28:00.0000] <MikeSmith>
Hixie: Monday is fine

[22:28:01.0000] <MikeSmith>
we publish on Tuesday

[22:28:02.0000] <Hixie>
k

[22:28:02.0000] <MikeSmith>
we publish on Tuesday

[22:28:13.0000] <Hixie>
k

[07:06:38.0000] <annevk>
hsivonen: we can just follow http://dvcs.w3.org/hg/encoding/raw-file/tip/Overview.html no?

[07:06:58.0000] <annevk>
hsivonen: if we are going to support other encodings, might as well support the same set we support through other APIs

[07:07:00.0000] <annevk>
hsivonen: we can just follow http://dvcs.w3.org/hg/encoding/raw-file/tip/Overview.html no?

[07:07:01.0000] <annevk>
hsivonen: if we are going to support other encodings, might as well support the same set we support through other APIs

[07:07:02.0000] <annevk>
hsivonen: my plan is for them all to converge anyway

[07:07:18.0000] <annevk>
hsivonen: my plan is for them all to converge anyway

[07:10:00.0000] <hsivonen>
annevk: ok

[07:10:24.0000] <hsivonen>
annevk: ok

[07:44:38.0000] <smaug____>
hmm, where is this handling for callbacks defined...

[07:45:00.0000] <smaug____>
hmm, where is this handling for callbacks defined...

[09:46:00.0000] <Stalker[lv]>
Hello, all! I've got a problem validating my webpage with one meta tag. Does w3c validator looks in whatwg's wiki when validating html5 page?

[09:46:25.0000] <Stalker[lv]>
Hello, all! I've got a problem validating my webpage with one meta tag. Does w3c validator looks in whatwg's wiki when validating html5 page?

[09:47:00.0000] <MikeSmith>
Stalker[lv]: no the meta checking is hard-coded

[09:47:01.0000] <MikeSmith>
for now at least

[09:47:01.0000] <MikeSmith>
Stalker[lv]: no the meta checking is hard-coded

[09:47:05.0000] <MikeSmith>
for now at least

[09:47:39.0000] <MikeSmith>
when something new gets registered and there's clearly agreement about it, somebody adds it to the validator

[09:48:00.0000] <MikeSmith>
when something new gets registered and there's clearly agreement about it, somebody adds it to the validator

[09:48:01.0000] <MikeSmith>
is there are specific value you're using that it's flagging as an error?

[09:48:25.0000] <MikeSmith>
is there are specific value you're using that it's flagging as an error?

[09:50:00.0000] <Stalker[lv]>
it's metatag, which tells to skype toolbar not to add ugly "call via skype" links

[09:50:12.0000] <Stalker[lv]>
it's metatag, which tells to skype toolbar not to add ugly "call via skype" links

[09:50:44.0000] <Stalker[lv]>
<meta name="SKYPE_TOOLBAR" CONTENT="SKYPE_TOOLBAR_PARSER_COMPATIBLE">

[09:51:00.0000] <Stalker[lv]>
<meta name="SKYPE_TOOLBAR" CONTENT="SKYPE_TOOLBAR_PARSER_COMPATIBLE">

[09:52:00.0000] <Stalker[lv]>
tried to use JS+jQuery skype remover, but it doesn't work with all skype toolbar versions, so I have to use this tag. Also, there's place for "valid html" badge :)

[09:52:16.0000] <Stalker[lv]>
tried to use JS+jQuery skype remover, but it doesn't work with all skype toolbar versions, so I have to use this tag. Also, there's place for "valid html" badge :)

[09:52:52.0000] <MikeSmith>
Stalker[lv]: so if there is a spec somewhere for that this "SKYPE_TOOLBAR" thing is, then you have  a start on it possibly being register-able

[09:53:00.0000] <MikeSmith>
Stalker[lv]: so if there is a spec somewhere for that this "SKYPE_TOOLBAR" thing is, then you have  a start on it possibly being register-able

[09:53:42.0000] <MikeSmith>
but if there is no spec anywhere, then there's no good way for people to be able to know how to use interoperably

[09:54:00.0000] <MikeSmith>
but if there is no spec anywhere, then there's no good way for people to be able to know how to use interoperably

[09:57:38.0000] <AryehGregor>
Hmm, so a failed script load fires an error event, and it bubbles in Gecko but not WebKit/Presto.

[09:57:41.0000] <AryehGregor>
Spec says it shouldn't bubble.

[09:57:44.0000] <AryehGregor>
/me tests IE

[09:58:00.0000] <AryehGregor>
Hmm, so a failed script load fires an error event, and it bubbles in Gecko but not WebKit/Presto.

[09:58:01.0000] <AryehGregor>
Spec says it shouldn't bubble.

[09:58:02.0000] <AryehGregor>
/me tests IE

[09:58:03.0000] <AryehGregor>
Nope, doesn't bubble in IE either.

[09:58:12.0000] <AryehGregor>
Nope, doesn't bubble in IE either.

[09:58:50.0000] <AryehGregor>
Why doesn't it bubble?  Bubbling seems useful here.  Exceptions hit window.onerror, so a failed script load logically may as well too, no?

[09:59:00.0000] <AryehGregor>
Why doesn't it bubble?  Bubbling seems useful here.  Exceptions hit window.onerror, so a failed script load logically may as well too, no?

[10:00:44.0000] <AryehGregor>
Nobody seems to fire error events for failed stylesheet loads.  :(

[10:01:00.0000] <AryehGregor>
Nobody seems to fire error events for failed stylesheet loads.  :(

[10:10:53.0000] <Stalker[lv]>
MikeSmith, https://jira.skype.com/browse/SCW-65 - there's mention of this tag. also in wiki is link to atricle about it..

[10:11:00.0000] <Stalker[lv]>
MikeSmith, https://jira.skype.com/browse/SCW-65 - there's mention of this tag. also in wiki is link to atricle about it..

[10:11:01.0000] <MikeSmith>
/me looks

[10:11:34.0000] <MikeSmith>
/me looks

[10:12:00.0000] <MikeSmith>
Stalker[lv]: in what wiki?

[10:12:22.0000] <MikeSmith>
Stalker[lv]: in what wiki?

[10:12:59.0000] <MikeSmith>
Stalker[lv]: anyway if you wanted to take the time you could write up an actual spec for it yourself

[10:13:01.0000] <MikeSmith>
that's what others have done for some similar cases

[10:13:02.0000] <MikeSmith>
you could add it to the whatwg wiki

[10:13:17.0000] <MikeSmith>
that's what others have done for some similar cases

[10:13:28.0000] <MikeSmith>
you could add it to the whatwg wiki

[10:14:00.0000] <MikeSmith>
like this: http://wiki.whatwg.org/wiki/Meta_referrer

[10:14:20.0000] <MikeSmith>
like this: http://wiki.whatwg.org/wiki/Meta_referrer

[10:20:00.0000] <TabAtkins>
jwheare: The spec was actually inspired by a relatively similar JS implementation, where we just built a layout in using position:absolute hooked up to a constraint solver.

[10:20:01.0000] <TabAtkins>
jwheare: I can ask if it's releasable code.

[10:20:05.0000] <TabAtkins>
jwheare: The spec was actually inspired by a relatively similar JS implementation, where we just built a layout in using position:absolute hooked up to a constraint solver.

[10:20:20.0000] <TabAtkins>
jwheare: I can ask if it's releasable code.

[10:20:58.0000] <jwheare>
TabAtkins: yeah, alex showed me it i think. he mentioned it was internal

[10:21:00.0000] <jwheare>
TabAtkins: yeah, alex showed me it i think. he mentioned it was internal

[10:21:01.0000] <TabAtkins>
Yup.

[10:21:02.0000] <TabAtkins>
That doesn't mean it's secret, just that I think we have to file something with the open-source people if we want to release it.

[10:21:05.0000] <TabAtkins>
Yup.

[10:21:20.0000] <TabAtkins>
That doesn't mean it's secret, just that I think we have to file something with the open-source people if we want to release it.

[10:22:00.0000] <jwheare>
would be good to play around with it. i'm basically gonna need to implement something like it for irccloud

[10:22:31.0000] <jwheare>
would be good to play around with it. i'm basically gonna need to implement something like it for irccloud

[10:25:00.0000] <TabAtkins>
I'll ask about it and get back to you.

[10:25:09.0000] <TabAtkins>
I'll ask about it and get back to you.

[10:31:00.0000] <AryehGregor>
Oh, wait, people do fire error events for failed stylesheet loads, good.

[10:31:24.0000] <AryehGregor>
Oh, wait, people do fire error events for failed stylesheet loads, good.

[11:31:00.0000] <aklein>
smaug____: yt?

[11:31:25.0000] <aklein>
smaug____: yt?

[11:34:00.0000] <smaug____>
aklein: yes

[11:34:01.0000] <smaug____>
though, just going out

[11:34:13.0000] <smaug____>
aklein: yes

[11:34:20.0000] <smaug____>
though, just going out

[11:34:39.0000] <smaug____>
(in 5 mins)

[11:34:48.0000] <aklein>
smaug____: k, I was just going to try one more time :)

[11:35:00.0000] <smaug____>
(in 5 mins)

[11:35:01.0000] <aklein>
smaug____: k, I was just going to try one more time :)

[11:35:02.0000] <smaug____>
to convince case-insensitive filtering?

[11:35:33.0000] <smaug____>
to convince case-insensitive filtering?

[11:35:48.0000] <smaug____>
IMO it is simpler without it

[11:35:50.0000] <aklein>
smaug____: yeah...consider a hypothetical future webdev who observes HREF and then calls setAttribute('HREF', someURL). I claim they'll be surprised.

[11:35:55.0000] <aklein>
the implementation is certainly simpler

[11:36:00.0000] <smaug____>
IMO it is simpler without it

[11:36:01.0000] <aklein>
smaug____: yeah...consider a hypothetical future webdev who observes HREF and then calls setAttribute('HREF', someURL). I claim they'll be surprised.

[11:36:02.0000] <aklein>
the implementation is certainly simpler

[11:36:03.0000] <aklein>
but the HTML dom world very much behaves as if it were case insensitive.

[11:36:34.0000] <aklein>
but the HTML dom world very much behaves as if it were case insensitive.

[11:36:49.0000] <smaug____>
aklein: well, they they are surprised even with the current APIs

[11:36:55.0000] <smaug____>
Attr.name is lowercase

[11:36:55.0000] <aklein>
heh

[11:37:00.0000] <smaug____>
aklein: well, they they are surprised even with the current APIs

[11:37:01.0000] <smaug____>
Attr.name is lowercase

[11:37:02.0000] <aklein>
heh

[11:38:00.0000] <aklein>
yet Element.tagName is uppercase

[11:38:32.0000] <aklein>
yet Element.tagName is uppercase

[11:38:45.0000] <aklein>
yet getElementsByTagName('div') works just fine

[11:38:55.0000] <smaug____>
this is a new API and we don't need to complicate it with special cases

[11:39:00.0000] <aklein>
yet getElementsByTagName('div') works just fine

[11:39:01.0000] <smaug____>
this is a new API and we don't need to complicate it with special cases

[11:39:02.0000] <smaug____>
getElementsByTagName is ancient, so that can't be changed

[11:39:30.0000] <smaug____>
getElementsByTagName is ancient, so that can't be changed

[11:40:00.0000] <smaug____>
.tagName is lowercase

[11:40:01.0000] <smaug____>
er

[11:40:02.0000] <smaug____>
it is whatever what used when creating the element

[11:40:07.0000] <smaug____>
.tagName is lowercase

[11:40:17.0000] <smaug____>
er

[11:40:27.0000] <smaug____>
it is whatever what used when creating the element

[11:40:40.0000] <smaug____>
s/what/was/

[11:40:49.0000] <smaug____>
so, .tagName is case-sensitive

[11:40:53.0000] <aklein>
smaug____: nope: http://dvcs.w3.org/hg/domcore/raw-file/tip/Overview.html#dom-element-tagname

[11:41:00.0000] <smaug____>
s/what/was/

[11:41:01.0000] <smaug____>
so, .tagName is case-sensitive

[11:41:02.0000] <aklein>
smaug____: nope: http://dvcs.w3.org/hg/domcore/raw-file/tip/Overview.html#dom-element-tagname

[11:41:03.0000] <smaug____>
ah, is the spec wrong :)

[11:41:04.0000] <smaug____>
anyway, that is all legacy

[11:41:04.0000] <smaug____>
ah, is the spec wrong :)

[11:41:34.0000] <smaug____>
anyway, that is all legacy

[11:41:50.0000] <smaug____>
we don't have to ruin the API with legacy stugg

[11:41:51.0000] <smaug____>
stuff

[11:42:00.0000] <smaug____>
we don't have to ruin the API with legacy stugg

[11:42:01.0000] <smaug____>
stuff

[11:42:02.0000] <aklein>
but MutationObservers have to live in the same world as all the legacy stuff, so it seems weird to make them behave differently

[11:42:29.0000] <aklein>
but MutationObservers have to live in the same world as all the legacy stuff, so it seems weird to make them behave differently

[11:42:44.0000] <aklein>
ah well, I'll let you go for now

[11:42:55.0000] <smaug____>
I want MutationObservers to behave the way rest of the world

[11:43:00.0000] <aklein>
ah well, I'll let you go for now

[11:43:01.0000] <smaug____>
I want MutationObservers to behave the way rest of the world

[11:43:02.0000] <smaug____>
Attr.name is lowercase in HTML docs

[11:43:03.0000] <smaug____>
/me runs

[11:43:08.0000] <smaug____>
Attr.name is lowercase in HTML docs

[11:43:19.0000] <smaug____>
/me runs

[11:45:00.0000] <smaug____>
aklein: oh, indeed .tagName is uppercase. I was accidentally testing xhtml doc :/

[11:45:01.0000] <smaug____>
now I really run

[11:45:22.0000] <smaug____>
aklein: oh, indeed .tagName is uppercase. I was accidentally testing xhtml doc :/

[11:45:23.0000] <smaug____>
now I really run

[11:45:52.0000] <smaug____>
back later

[11:46:00.0000] <smaug____>
back later

[11:53:46.0000] <AryehGregor>
Is the fact that browsers fire a bubbling error event at scripts with uncaught exceptions documented?  I don't see it glancing at HTML.

[11:54:00.0000] <AryehGregor>
Is the fact that browsers fire a bubbling error event at scripts with uncaught exceptions documented?  I don't see it glancing at HTML.

[12:07:00.0000] <smaugN900>
aklein: case-sensitive is also compatible with current DOMAttrModified with which one needs to filter using attr nodes

[12:07:32.0000] <smaugN900>
aklein: case-sensitive is also compatible with current DOMAttrModified with which one needs to filter using attr nodes

[13:02:00.0000] <AryehGregor>
Given a <script>, there's no way to tell whether it's run successfully yet or not, right?

[13:02:01.0000] <AryehGregor>
Meaning, if I do document.querySelectorAll("script") or something, I can't figure out which (if any) haven't run yet.

[13:02:02.0000] <AryehGregor>
Or never ran at all, e.g., had errors.

[13:02:03.0000] <AryehGregor>
Given a <script>, there's no way to tell whether it's run successfully yet or not, right?

[13:02:29.0000] <AryehGregor>
Meaning, if I do document.querySelectorAll("script") or something, I can't figure out which (if any) haven't run yet.

[13:02:33.0000] <AryehGregor>
Or never ran at all, e.g., had errors.

[13:02:59.0000] <TabAtkins>
Besides having the script alter itself at the end of running, right?

[13:03:00.0000] <TabAtkins>
Besides having the script alter itself at the end of running, right?

[13:03:01.0000] <AryehGregor>
Right, I don't want to modify the scripts themselves.

[13:03:02.0000] <AryehGregor>
(since there are zillions)

[13:03:24.0000] <AryehGregor>
Right, I don't want to modify the scripts themselves.

[13:03:27.0000] <AryehGregor>
(since there are zillions)

[13:03:43.0000] <TabAtkins>
Then no clue.

[13:04:00.0000] <TabAtkins>
Then no clue.

[13:04:01.0000] <AryehGregor>
Hmm, afterscriptexecute bubbles.

[13:04:02.0000] <AryehGregor>
Maybe I could use that.

[13:04:21.0000] <AryehGregor>
Hmm, afterscriptexecute bubbles.

[13:04:24.0000] <AryehGregor>
Maybe I could use that.

[13:04:45.0000] <AryehGregor>
With a capturing event listener.

[13:05:00.0000] <AryehGregor>
With a capturing event listener.

[13:05:36.0000] <AryehGregor>
Won't help for scripts that have already run, of course.

[13:06:00.0000] <AryehGregor>
Won't help for scripts that have already run, of course.

[13:06:58.0000] <Hixie>
AryehGregor: change their contents and reinsert them into the dom; if they do anything then they weren't run. :-)

[13:07:00.0000] <Hixie>
AryehGregor: change their contents and reinsert them into the dom; if they do anything then they weren't run. :-)

[13:07:01.0000] <Hixie>
AryehGregor: (the key being a <script> can only run once)

[13:07:11.0000] <Hixie>
AryehGregor: (the key being a <script> can only run once)

[13:07:55.0000] <AryehGregor>
Hixie, so something like: script.textContent = "alert('bad')"; var nextSibling = script.nextSibling; script.parentNode.removeChild(script); script.insertBefore(script, nextSibling); ?

[13:08:00.0000] <AryehGregor>
Hixie, so something like: script.textContent = "alert('bad')"; var nextSibling = script.nextSibling; script.parentNode.removeChild(script); script.insertBefore(script, nextSibling); ?

[13:08:01.0000] <AryehGregor>
And unset the src.

[13:08:02.0000] <AryehGregor>
That's kind of evil genius.

[13:08:03.0000] <AryehGregor>
/me tries

[13:08:06.0000] <AryehGregor>
And unset the src.

[13:08:14.0000] <AryehGregor>
That's kind of evil genius.

[13:08:18.0000] <AryehGregor>
/me tries

[13:09:48.0000] <Hixie>
AryehGregor: something like that. or maybe even better, if you want to not screw up the original element, clone it, remove .src, set the contents to something harmless like ';', and then insert that

[13:09:55.0000] <Hixie>
AryehGregor: since the "has executed" state propagates to clones

[13:10:00.0000] <Hixie>
AryehGregor: something like that. or maybe even better, if you want to not screw up the original element, clone it, remove .src, set the contents to something harmless like ';', and then insert that

[13:10:01.0000] <Hixie>
AryehGregor: since the "has executed" state propagates to clones

[13:10:02.0000] <Hixie>
(remove async and defer as well)

[13:10:28.0000] <Hixie>
(remove async and defer as well)

[13:18:36.0000] <Hixie>
are any of the people who wanted path objects not to have transforms but instead for the methods to get matrix arguments around?

[13:19:00.0000] <Hixie>
are any of the people who wanted path objects not to have transforms but instead for the methods to get matrix arguments around?

[13:20:00.0000] <TabAtkins>
Matrix-based transforms are the devil.

[13:20:03.0000] <TabAtkins>
Matrix-based transforms are the devil.

[13:21:43.0000] <Philip`>
As in requiring users of the API to do the matrix maths themselves and pass the result into the API?

[13:22:00.0000] <Philip`>
As in requiring users of the API to do the matrix maths themselves and pass the result into the API?

[13:22:01.0000] <Hixie>
the matrix object has the regular transformation stuff on it, that's not hte issue

[13:22:02.0000] <Hixie>
(it's just SVGMatrix)

[13:22:03.0000] <Philip`>
Ah

[13:22:13.0000] <Hixie>
the matrix object has the regular transformation stuff on it, that's not hte issue

[13:22:17.0000] <Hixie>
(it's just SVGMatrix)

[13:22:19.0000] <Philip`>
Ah

[13:22:43.0000] <Philip`>
/me hasn't had time/energy/nonlaziness to try looking at any of this yet :-(

[13:23:00.0000] <Philip`>
/me hasn't had time/energy/nonlaziness to try looking at any of this yet :-(

[13:23:01.0000] <Hixie>
my question is whether those people think it's ok for Pattern to implement the transform stuff directly or whether there should be some method that takes a matrix there, too

[13:23:02.0000] <Hixie>
and if the latter, which method

[13:23:02.0000] <Hixie>
my question is whether those people think it's ok for Pattern to implement the transform stuff directly or whether there should be some method that takes a matrix there, too

[13:23:03.0000] <Hixie>
createPattern()?

[13:23:04.0000] <Hixie>
fill()?

[13:23:05.0000] <Hixie>
pattern.setPatternTransform()?

[13:23:05.0000] <Hixie>
and if the latter, which method

[13:23:06.0000] <WeirdAl>
Hey, folks, DOM4 question:  when I call Node.addEventListener("foo", function listener(evt) { /* ... */ }, true), what is the |this| object inside the listener function?

[13:23:09.0000] <Hixie>
createPattern()?

[13:23:13.0000] <Hixie>
fill()?

[13:23:24.0000] <Hixie>
pattern.setPatternTransform()?

[13:23:30.0000] <WeirdAl>
Hey, folks, DOM4 question:  when I call Node.addEventListener("foo", function listener(evt) { /* ... */ }, true), what is the |this| object inside the listener function?

[13:23:38.0000] <Hixie>
WeirdAl: Window

[13:24:00.0000] <Hixie>
WeirdAl: Window

[13:24:51.0000] <WeirdAl>
Hixie - reading the spec, I couldn't find a clear reference to that, even though it's the usual behavior in DOM3... worth doc'ing?

[13:25:00.0000] <WeirdAl>
Hixie - reading the spec, I couldn't find a clear reference to that, even though it's the usual behavior in DOM3... worth doc'ing?

[13:25:01.0000] <Hixie>
it's specified somewhere, though i forget where

[13:25:02.0000] <Hixie>
webidl maybe?

[13:25:03.0000] <Hixie>
maybe the js spc?

[13:25:06.0000] <Hixie>
it's specified somewhere, though i forget where

[13:25:08.0000] <Hixie>
webidl maybe?

[13:25:17.0000] <Hixie>
maybe the js spc?

[13:25:42.0000] <WeirdAl>
js spec, as in ECMAScript 5th Ed?

[13:25:53.0000] <Hixie>
or whatever the latest version is

[13:25:58.0000] <Hixie>
probably webidl

[13:26:00.0000] <WeirdAl>
js spec, as in ECMAScript 5th Ed?

[13:26:01.0000] <Hixie>
or whatever the latest version is

[13:26:02.0000] <Hixie>
probably webidl

[13:26:58.0000] <Hixie>
oh actually i was wrong

[13:27:00.0000] <Hixie>
oh actually i was wrong

[13:27:01.0000] <Hixie>
seems the |this| value should be the Function itself

[13:27:02.0000] <WeirdAl>
ugh

[13:27:03.0000] <WeirdAl>
that's almost certainly a change from DOM3

[13:27:04.0000] <Hixie>
http://dev.w3.org/2006/webapi/WebIDL/#dfn-callback-this-value

[13:27:05.0000] <Hixie>
seems the |this| value should be the Function itself

[13:27:15.0000] <WeirdAl>
ugh

[13:27:23.0000] <WeirdAl>
that's almost certainly a change from DOM3

[13:27:25.0000] <Hixie>
http://dev.w3.org/2006/webapi/WebIDL/#dfn-callback-this-value

[13:27:51.0000] <Hixie>
heycam|away: "By default, the object itself is used as the callback this value" is lacking conformance criteria (it's a description, it neither defines something nor requires something)

[13:28:00.0000] <Hixie>
heycam|away: "By default, the object itself is used as the callback this value" is lacking conformance criteria (it's a description, it neither defines something nor requires something)

[13:28:01.0000] <Hixie>
oh no i'm wrong!

[13:28:24.0000] <Hixie>
oh no i'm wrong!

[13:28:37.0000] <Hixie>
the default callback this value for Functions is 'null'

[13:28:59.0000] <WeirdAl>
:)

[13:29:00.0000] <Hixie>
the default callback this value for Functions is 'null'

[13:29:01.0000] <WeirdAl>
:)

[13:29:02.0000] <WeirdAl>
imho, that's as it should be - not a function, not window, not the global

[13:29:03.0000] <Hixie>
heycam|away: specifically, "By default, the callback this value when invoking a callback function is null" seems to try to override the above, but in practice it just contradicts it and doesn't leave it well defined

[13:29:14.0000] <WeirdAl>
imho, that's as it should be - not a function, not window, not the global

[13:29:29.0000] <Hixie>
heycam|away: specifically, "By default, the callback this value when invoking a callback function is null" seems to try to override the above, but in practice it just contradicts it and doesn't leave it well defined

[13:29:53.0000] <Hixie>
heycam|away: and "callback this value" in the algorithm below that links to the description i quoted earlier, which is why i was confused

[13:30:00.0000] <Hixie>
heycam|away: and "callback this value" in the algorithm below that links to the description i quoted earlier, which is why i was confused

[13:30:01.0000] <Hixie>
WeirdAl: yeah but i expect ES says to use the global of it's null

[13:30:08.0000] <Hixie>
WeirdAl: yeah but i expect ES says to use the global of it's null

[13:31:52.0000] <Hixie>
WeirdAl: yeah, JS spec 10.4.3 ("Entering Function Code") step 2 says "Else if thisArg is null or undefined, set the ThisBinding to the global object"

[13:32:00.0000] <Hixie>
WeirdAl: yeah, JS spec 10.4.3 ("Entering Function Code") step 2 says "Else if thisArg is null or undefined, set the ThisBinding to the global object"

[13:33:00.0000] <Hixie>
WeirdAl: and HTML says for <script> objects: "The global object is the Window object of document" http://www.whatwg.org/specs/web-apps/current-work/#the-script-settings-determined-from-the-node

[13:33:01.0000] <Hixie>
WeirdAl: so to answer your question, it's defined. WebIDL says it's null, ES says null means global object, and HTML says global object means Window.

[13:33:03.0000] <Hixie>
WeirdAl: and HTML says for <script> objects: "The global object is the Window object of document" http://www.whatwg.org/specs/web-apps/current-work/#the-script-settings-determined-from-the-node

[13:33:20.0000] <Hixie>
WeirdAl: so to answer your question, it's defined. WebIDL says it's null, ES says null means global object, and HTML says global object means Window.

[13:43:00.0000] <zcorpan>
why is it "level 1"? CSS Variables Module Level 1

[13:43:09.0000] <zcorpan>
why is it "level 1"? CSS Variables Module Level 1

[13:43:56.0000] <TabAtkins>
zcorpan: Because it's not based on anything from level 2, so it resets.

[13:44:00.0000] <TabAtkins>
zcorpan: Because it's not based on anything from level 2, so it resets.

[13:45:00.0000] <zcorpan>
animations etc is also level 1?

[13:45:21.0000] <zcorpan>
animations etc is also level 1?

[13:45:52.0000] <astearns>
all of the level 3 specs are based on 2.1 - what causes the increment?

[13:46:00.0000] <astearns>
all of the level 3 specs are based on 2.1 - what causes the increment?

[13:46:01.0000] <TabAtkins>
No, Animations is level 3 because nobody was watching too hard when it was named.

[13:46:02.0000] <TabAtkins>
it should have been level 1

[13:46:11.0000] <TabAtkins>
No, Animations is level 3 because nobody was watching too hard when it was named.

[13:46:33.0000] <TabAtkins>
it should have been level 1

[13:47:00.0000] <zcorpan>
i think calling it "css1 variables" (which is short for css variables level 1) is confusing because it implies it was present in css1

[13:47:01.0000] <Hixie>
is (x,y) a coordinate, or are (x,y) coordinates?

[13:47:02.0000] <zcorpan>
Hixie: former

[13:47:03.0000] <Hixie>
/me waves his "just drop all versioning" flag

[13:47:04.0000] <Hixie>
zcorpan: thanks

[13:47:07.0000] <zcorpan>
i think calling it "css1 variables" (which is short for css variables level 1) is confusing because it implies it was present in css1

[13:47:09.0000] <Hixie>
is (x,y) a coordinate, or are (x,y) coordinates?

[13:47:27.0000] <zcorpan>
Hixie: former

[13:47:30.0000] <Hixie>
/me waves his "just drop all versioning" flag

[13:47:32.0000] <Hixie>
zcorpan: thanks

[13:47:50.0000] <astearns>
'level living'

[13:48:00.0000] <astearns>
'level living'

[13:48:01.0000] <zcorpan>
levelless css wfm

[13:48:26.0000] <zcorpan>
levelless css wfm

[13:48:40.0000] <TabAtkins>
For all practical purposes CSS is levelless.

[13:49:00.0000] <TabAtkins>
For all practical purposes CSS is levelless.

[13:49:57.0000] <zcorpan>
TabAtkins: so on a different note, do you think the css wg would be willing to put quirks mode requirements in their specs?

[13:50:00.0000] <zcorpan>
TabAtkins: so on a different note, do you think the css wg would be willing to put quirks mode requirements in their specs?

[13:50:01.0000] <Hixie>
ok the spec live on whatwg.org (single page only) now has the path stuff updated to use DrawingStyle objects instead of on-path line styles and font styles

[13:50:02.0000] <Hixie>
now doing the transform changes

[13:50:03.0000] <TabAtkins>
zcorpan: In all the specs, or just a "Quirks Mode spec" kind of thing?

[13:50:12.0000] <Hixie>
ok the spec live on whatwg.org (single page only) now has the path stuff updated to use DrawingStyle objects instead of on-path line styles and font styles

[13:50:16.0000] <Hixie>
now doing the transform changes

[13:50:24.0000] <TabAtkins>
zcorpan: In all the specs, or just a "Quirks Mode spec" kind of thing?

[13:50:50.0000] <Hixie>
othermaciej: any opinion on whether patterns should implement the transform stuff or whether we should use SVGMatrix objects somewhere to transform patterns in fill too?

[13:51:00.0000] <Hixie>
othermaciej: any opinion on whether patterns should implement the transform stuff or whether we should use SVGMatrix objects somewhere to transform patterns in fill too?

[13:51:01.0000] <Hixie>
othermaciej: and if the latter, where should the matrix go? createPattern()? A method on the pattern object? fill()?

[13:51:02.0000] <zcorpan>
TabAtkins: well i think it would be best if it was defined as part of the proper spec because a quirk spec needs to override the proper spec and that can be a bit messy

[13:51:06.0000] <Hixie>
othermaciej: and if the latter, where should the matrix go? createPattern()? A method on the pattern object? fill()?

[13:51:23.0000] <zcorpan>
TabAtkins: well i think it would be best if it was defined as part of the proper spec because a quirk spec needs to override the proper spec and that can be a bit messy

[13:52:53.0000] <TabAtkins>
zcorpan: I suspect that requiring a "Quirks Mode" section in every spec wouldn't be well-received.

[13:53:00.0000] <TabAtkins>
zcorpan: I suspect that requiring a "Quirks Mode" section in every spec wouldn't be well-received.

[13:53:01.0000] <Hixie>
shouldn't be a section

[13:53:02.0000] <Hixie>
should just be the way html does it

[13:53:02.0000] <Hixie>
shouldn't be a section

[13:53:03.0000] <zcorpan>
what Hixie said

[13:53:07.0000] <Hixie>
should just be the way html does it

[13:53:23.0000] <zcorpan>
what Hixie said

[13:54:00.0000] <othermaciej>
Hixie: I am not up to speed on what is planned for patterns

[13:54:01.0000] <TabAtkins>
What's the way HTML does it? I haven't really noticed quirks stuff anywhere.

[13:54:27.0000] <TabAtkins>
What's the way HTML does it? I haven't really noticed quirks stuff anywhere.

[13:54:47.0000] <Hixie>
othermaciej: the old plan before you pointed out it was silly to put all the transform apis on Path objects, was to make CanvasPattern objects have a built-in transform in the same way, so as to allow the pattern itself to be transformed (rotated, translated, skewed, etc) when used for fills and strokes

[13:54:52.0000] <Hixie>
TabAtkins: exactly

[13:55:00.0000] <Hixie>
othermaciej: the old plan before you pointed out it was silly to put all the transform apis on Path objects, was to make CanvasPattern objects have a built-in transform in the same way, so as to allow the pattern itself to be transformed (rotated, translated, skewed, etc) when used for fills and strokes

[13:55:01.0000] <Hixie>
TabAtkins: exactly

[13:55:02.0000] <Hixie>
TabAtkins: it just says "and now do x. if in quirks mode, do y, otherwise do z. then do q...."

[13:55:03.0000] <zcorpan>
TabAtkins: e.g. http://simon.html5.org/specs/quirks-mode#the-blocks-ignore-line-height-quirk should be specified as part of http://www.w3.org/TR/CSS21/visudet.html#propdef-line-height

[13:55:13.0000] <Hixie>
TabAtkins: it just says "and now do x. if in quirks mode, do y, otherwise do z. then do q...."

[13:55:21.0000] <zcorpan>
TabAtkins: e.g. http://simon.html5.org/specs/quirks-mode#the-blocks-ignore-line-height-quirk should be specified as part of http://www.w3.org/TR/CSS21/visudet.html#propdef-line-height

[13:56:43.0000] <TabAtkins>
I personally prefer it in a big list somewhere.

[13:56:54.0000] <Hixie>
really? why?

[13:57:00.0000] <TabAtkins>
I personally prefer it in a big list somewhere.

[13:57:01.0000] <Hixie>
really? why?

[13:57:01.0000] <TabAtkins>
The only effect of quirks on new content is parsing-level stuff.

[13:57:02.0000] <TabAtkins>
The only effect of quirks on new content is parsing-level stuff.

[13:57:03.0000] <TabAtkins>
Which shouldn't be in individual specs anyway.

[13:57:07.0000] <TabAtkins>
Which shouldn't be in individual specs anyway.

[13:57:42.0000] <zcorpan>
new content shouldn't use quirks mode at all

[13:57:46.0000] <Hixie>
yeah

[13:57:52.0000] <Hixie>
what's new content got to do with what the specs say?

[13:58:00.0000] <zcorpan>
new content shouldn't use quirks mode at all

[13:58:01.0000] <Hixie>
yeah

[13:58:02.0000] <Hixie>
what's new content got to do with what the specs say?

[13:58:02.0000] <TabAtkins>
I meant new specs.

[13:58:03.0000] <TabAtkins>
I meant new specs.

[13:58:04.0000] <Hixie>
/me decides to put transforms in createPattern()

[13:58:05.0000] <zcorpan>
having it in a bit list makes it harder for implementors to figure out how it integrates with the spec proper

[13:58:11.0000] <Hixie>
/me decides to put transforms in createPattern()

[13:58:11.0000] <zcorpan>
having it in a bit list makes it harder for implementors to figure out how it integrates with the spec proper

[13:58:35.0000] <zcorpan>
TabAtkins: it wouldn't need to be in new specs if the new spec doesn't have any quirks

[13:58:44.0000] <othermaciej>
Hixie: I'd have to do some research on what other pattern APIs do for this, if anything

[13:59:00.0000] <zcorpan>
TabAtkins: it wouldn't need to be in new specs if the new spec doesn't have any quirks

[13:59:01.0000] <othermaciej>
Hixie: I'd have to do some research on what other pattern APIs do for this, if anything

[13:59:02.0000] <TabAtkins>
If it's limited to CSS2.1 and Selectors, then I'm less opposed.

[13:59:09.0000] <TabAtkins>
If it's limited to CSS2.1 and Selectors, then I'm less opposed.

[13:59:56.0000] <zcorpan>
TabAtkins: some quirks are about fine details about table layout, and css 2.1 doesn't define table layout

[14:00:00.0000] <zcorpan>
TabAtkins: some quirks are about fine details about table layout, and css 2.1 doesn't define table layout

[14:00:01.0000] <WeirdAl>
Hixie - my monitor's acting up - I'll try to reread through channel logs

[14:00:02.0000] <Hixie>
othermaciej: k

[14:00:26.0000] <WeirdAl>
Hixie - my monitor's acting up - I'll try to reread through channel logs

[14:00:33.0000] <Hixie>
othermaciej: k

[14:01:00.0000] <othermaciej>
Hixie: how exactly do patterns work, are they ultimately a bitmap?

[14:01:01.0000] <Hixie>
TabAtkins: values and units, box model, table -- that's probably it as far as affected css specs go, right zcorpan?

[14:01:02.0000] <TabAtkins>
zcorpan: There's no CSS3 Table spec, so that's all right. ^_^

[14:01:03.0000] <WeirdAl>
Hixie - ah, your answer does make sense.

[14:01:04.0000] <Hixie>
othermaciej: sure

[14:01:08.0000] <othermaciej>
Hixie: how exactly do patterns work, are they ultimately a bitmap?

[14:01:18.0000] <Hixie>
TabAtkins: values and units, box model, table -- that's probably it as far as affected css specs go, right zcorpan?

[14:01:28.0000] <TabAtkins>
zcorpan: There's no CSS3 Table spec, so that's all right. ^_^

[14:01:29.0000] <WeirdAl>
Hixie - ah, your answer does make sense.

[14:01:32.0000] <Hixie>
othermaciej: sure

[14:01:49.0000] <zcorpan>
TabAtkins: and some level 3 specs that redefine 2.1 better would be better suited to cover quirks than 2.1 (like e.g. text-decoration)

[14:01:51.0000] <WeirdAl>
but it'd sure be nice to not have to read fifteen different specs to get the answer ;)

[14:02:00.0000] <zcorpan>
TabAtkins: and some level 3 specs that redefine 2.1 better would be better suited to cover quirks than 2.1 (like e.g. text-decoration)

[14:02:01.0000] <WeirdAl>
but it'd sure be nice to not have to read fifteen different specs to get the answer ;)

[14:02:02.0000] <zcorpan>
TabAtkins: i hope there will be :-P

[14:02:09.0000] <zcorpan>
TabAtkins: i hope there will be :-P

[14:03:00.0000] <Hixie>
WeirdAl: well, i'm all in favour of reducing the numebr of specs. personally i think it'd be great to merge webidl and js, maybe even webidl and dom core, but i doubt anyone's gonna go for that. and people are already arguing that html does too much, so i doubt they'd be up for merging any of those with html...

[14:03:01.0000] <TabAtkins>
zcorpan: When someone sufficiently masochistic volunteers, there will be.

[14:03:05.0000] <Hixie>
WeirdAl: well, i'm all in favour of reducing the numebr of specs. personally i think it'd be great to merge webidl and js, maybe even webidl and dom core, but i doubt anyone's gonna go for that. and people are already arguing that html does too much, so i doubt they'd be up for merging any of those with html...

[14:03:06.0000] <TabAtkins>
zcorpan: When someone sufficiently masochistic volunteers, there will be.

[14:03:47.0000] <WeirdAl>
Hixie - I'm of mixed opinion on that...

[14:04:00.0000] <WeirdAl>
Hixie - I'm of mixed opinion on that...

[14:04:01.0000] <WeirdAl>
but I do think the undo manager spec rniwa is working on should be folded in as a chapter of HTML5

[14:04:02.0000] <zcorpan>
Hixie: and selectors, and maybe some others -- i don't have a good overview of the various css modules

[14:04:27.0000] <WeirdAl>
but I do think the undo manager spec rniwa is working on should be folded in as a chapter of HTML5

[14:04:30.0000] <zcorpan>
Hixie: and selectors, and maybe some others -- i don't have a good overview of the various css modules

[14:05:00.0000] <Hixie>
WeirdAl: it will eventually, i expect. it used to be part of html, it's just easier for him to work on it separately for now

[14:05:01.0000] <Hixie>
zcorpan: fair enough

[14:05:01.0000] <Hixie>
WeirdAl: it will eventually, i expect. it used to be part of html, it's just easier for him to work on it separately for now

[14:05:02.0000] <rniwa>
WeirdAl: it might make more sense to merge it into AryehGregor's editing spec

[14:05:03.0000] <Hixie>
/me thinks most of the css modules should be folded into one anyway :-P

[14:05:04.0000] <Hixie>
rniwa: yeah but that will eventually make it back to html too, probably

[14:05:08.0000] <Hixie>
zcorpan: fair enough

[14:05:08.0000] <rniwa>
WeirdAl: it might make more sense to merge it into AryehGregor's editing spec

[14:05:24.0000] <Hixie>
/me thinks most of the css modules should be folded into one anyway :-P

[14:05:34.0000] <Hixie>
rniwa: yeah but that will eventually make it back to html too, probably

[14:05:44.0000] <WeirdAl>
/me thinks we need a metaspec: a spec saying "Here's where you find the spec for this" :p

[14:05:53.0000] <rniwa>
Hixie: yeah, that makes sense in the long ru

[14:06:00.0000] <WeirdAl>
/me thinks we need a metaspec: a spec saying "Here's where you find the spec for this" :p

[14:06:01.0000] <rniwa>
Hixie: yeah, that makes sense in the long ru

[14:06:02.0000] <Hixie>
WeirdAl: platform.html5.org

[14:06:03.0000] <rniwa>
Hixie: but will probably take a decade or two before that happens :(

[14:06:03.0000] <Hixie>
WeirdAl: platform.html5.org

[14:06:04.0000] <Hixie>
rniwa: prolly :-)

[14:06:05.0000] <WeirdAl>
yikes!

[14:06:06.0000] <rniwa>
Hixie: but will probably take a decade or two before that happens :(

[14:06:13.0000] <Hixie>
rniwa: prolly :-)

[14:06:26.0000] <WeirdAl>
yikes!

[14:07:00.0000] <zcorpan>
Hixie: are there quirks i've listed under "CSS" that you think belong in html instead?

[14:07:01.0000] <Hixie>
WeirdAl: (to be fair, big chunks of that are just "html")

[14:07:02.0000] <Hixie>
zcorpan: url?

[14:07:03.0000] <zcorpan>
http://simon.html5.org/specs/quirks-mode#css

[14:07:13.0000] <zcorpan>
Hixie: are there quirks i've listed under "CSS" that you think belong in html instead?

[14:07:16.0000] <Hixie>
WeirdAl: (to be fair, big chunks of that are just "html")

[14:07:19.0000] <Hixie>
zcorpan: url?

[14:07:29.0000] <zcorpan>
http://simon.html5.org/specs/quirks-mode#css

[14:07:52.0000] <Hixie>
WeirdAl: (though of course, "css" is a bit vague in that list and should be split out into its component specs since there's not just one css spec)

[14:08:00.0000] <Hixie>
WeirdAl: (though of course, "css" is a bit vague in that list and should be split out into its component specs since there's not just one css spec)

[14:08:01.0000] <Hixie>
WeirdAl: (so it might be a bit of a wash in the end)

[14:08:02.0000] <WeirdAl>
/me shakes his head ruefully

[14:08:03.0000] <Hixie>
WeirdAl: (so it might be a bit of a wash in the end)

[14:08:16.0000] <WeirdAl>
/me shakes his head ruefully

[14:09:00.0000] <Hixie>
zcorpan: "The table cell nowrap minimum width calculation quirk" might need to have something in HTML, but it would have to refer to something in CSS, so might not be worth it

[14:09:27.0000] <Hixie>
zcorpan: "The table cell nowrap minimum width calculation quirk" might need to have something in HTML, but it would have to refer to something in CSS, so might not be worth it

[14:09:46.0000] <Hixie>
zcorpan: can "The text decoration doesn't propagate into tables quirk" be defined as a CSS rule? if so, ->html

[14:10:00.0000] <Hixie>
zcorpan: can "The text decoration doesn't propagate into tables quirk" be defined as a CSS rule? if so, ->html

[14:10:01.0000] <zcorpan>
Hixie: it can't

[14:10:02.0000] <Hixie>
k

[14:10:03.0000] <Hixie>
zcorpan: looks like i can take "The table cell width resets nowrap quirk", file a bug

[14:10:12.0000] <zcorpan>
Hixie: it can't

[14:10:16.0000] <Hixie>
k

[14:10:27.0000] <Hixie>
zcorpan: looks like i can take "The table cell width resets nowrap quirk", file a bug

[14:10:47.0000] <Hixie>
zcorpan: other than that, i think you're right and it should go into the css spec

[14:10:58.0000] <Hixie>
zcorpan: i'm surprised there aren't more html quirks that i've missed

[14:11:00.0000] <Hixie>
zcorpan: other than that, i think you're right and it should go into the css spec

[14:11:01.0000] <Hixie>
zcorpan: i'm surprised there aren't more html quirks that i've missed

[14:11:01.0000] <zcorpan>
that's already filed

[14:11:02.0000] <zcorpan>
that's already filed

[14:11:03.0000] <Hixie>
cool

[14:11:04.0000] <zcorpan>
there was one more that i just filed

[14:11:05.0000] <Hixie>
cool

[14:11:24.0000] <zcorpan>
there was one more that i just filed

[14:11:44.0000] <zcorpan>
"just" as in "didn't spec", not "right now"

[14:12:00.0000] <zcorpan>
"just" as in "didn't spec", not "right now"

[14:12:01.0000] <Hixie>
k

[14:12:27.0000] <Hixie>
k

[14:12:42.0000] <Hixie>
still, that's pretty good :-)

[14:12:49.0000] <zcorpan>
yeah

[14:13:00.0000] <Hixie>
still, that's pretty good :-)

[14:13:01.0000] <zcorpan>
yeah

[14:16:35.0000] <zcorpan>
Hixie: The font element text decoration color quirk can't be specified as a css rule, either. should it be under "css" instead?

[14:17:00.0000] <zcorpan>
Hixie: The font element text decoration color quirk can't be specified as a css rule, either. should it be under "css" instead?

[14:18:00.0000] <Hixie>
/me shrugs

[14:18:29.0000] <Hixie>
/me shrugs

[14:18:39.0000] <Hixie>
that's a mere intraspec organisation issue

[14:18:45.0000] <Hixie>
up to you entirely :-)

[14:19:00.0000] <Hixie>
that's a mere intraspec organisation issue

[14:19:01.0000] <Hixie>
up to you entirely :-)

[14:23:48.0000] <zcorpan>
i moved it

[14:24:00.0000] <zcorpan>
i moved it

[14:24:01.0000] <zcorpan>
Hixie: there's one more quirk that i hope we can drop but might not be successful, style="{ ... }"

[14:24:19.0000] <zcorpan>
Hixie: there's one more quirk that i hope we can drop but might not be successful, style="{ ... }"

[14:28:00.0000] <Hixie>
zcorpan: k

[14:28:00.0000] <Hixie>
zcorpan: k

[14:39:00.0000] <Ms2ger>
<Hixie> is (x,y) a coordinate, or are (x,y) coordinates?

[14:39:01.0000] <Ms2ger>
Latter

[14:39:11.0000] <Ms2ger>
<Hixie> is (x,y) a coordinate, or are (x,y) coordinates?

[14:39:12.0000] <Ms2ger>
Latter

[14:40:00.0000] <smaug____>
WeirdAl: you asked something about 'this'

[14:40:01.0000] <smaug____>
with event listeners

[14:40:28.0000] <smaug____>
WeirdAl: you asked something about 'this'

[14:40:33.0000] <smaug____>
with event listeners

[14:40:54.0000] <WeirdAl>
yeah, I just wanted to know what the specs say it should be when the listener is a function and not an object

[14:41:00.0000] <WeirdAl>
yeah, I just wanted to know what the specs say it should be when the listener is a function and not an object

[14:41:01.0000] <smaug____>
it is event.currentTarget

[14:41:02.0000] <smaug____>
DOM4

[14:41:02.0000] <smaug____>
it is event.currentTarget

[14:41:31.0000] <smaug____>
DOM4

[14:41:43.0000] <WeirdAl>
ok

[14:42:00.0000] <WeirdAl>
ok

[14:43:00.0000] <Hixie>
Ms2ger: zcorpan disagreed and he was first

[14:43:34.0000] <Hixie>
Ms2ger: zcorpan disagreed and he was first

[14:43:41.0000] <zcorpan>
Ms2ger: x is a coordinate for a line, y is a coordinate for a line, (x, y) is a coordinate for a point. no?

[14:43:58.0000] <Ms2ger>
Say what?

[14:44:00.0000] <zcorpan>
Ms2ger: x is a coordinate for a line, y is a coordinate for a line, (x, y) is a coordinate for a point. no?

[14:44:01.0000] <Ms2ger>
Say what?

[14:44:02.0000] <Hixie>
smaug____: it is?

[14:44:12.0000] <Hixie>
smaug____: it is?

[14:44:42.0000] <Hixie>
smaug____: oh yeah, look at that

[14:44:52.0000] <Hixie>
WeirdAl: smaug____ is right, dom4 overrides webidl here

[14:45:00.0000] <Hixie>
smaug____: oh yeah, look at that

[14:45:01.0000] <Hixie>
WeirdAl: smaug____ is right, dom4 overrides webidl here

[14:45:02.0000] <smaug____>
Hixie: yes

[14:45:03.0000] <WeirdAl>
ok.  It wasn't clear from my cursory reading :)

[14:45:25.0000] <WeirdAl>
ok.  It wasn't clear from my cursory reading :)

[14:45:42.0000] <Hixie>
search for "this value"

[14:46:00.0000] <Hixie>
search for "this value"

[14:46:01.0000] <WeirdAl>
ah, right there, ok

[14:46:25.0000] <WeirdAl>
ah, right there, ok

[14:46:40.0000] <WeirdAl>
/me is chagrined

[14:47:00.0000] <WeirdAl>
/me is chagrined

[14:57:00.0000] <zcorpan>
smaug____: i think the spec isn't wrong for tagName

[14:57:28.0000] <zcorpan>
smaug____: i think the spec isn't wrong for tagName

[14:57:44.0000] <smaug____>
zcorpan: no no, that was my mistake

[14:57:45.0000] <Ms2ger>
He was accidentally using XML

[14:57:52.0000] <Ms2ger>
How you do that, no idea

[14:57:54.0000] <smaug____>
I was testing accidentally xhtml

[14:58:00.0000] <smaug____>
zcorpan: no no, that was my mistake

[14:58:01.0000] <Ms2ger>
He was accidentally using XML

[14:58:02.0000] <Ms2ger>
How you do that, no idea

[14:58:03.0000] <smaug____>
I was testing accidentally xhtml

[14:58:04.0000] <smaug____>
Ms2ger: I guess I opened new tab

[14:58:05.0000] <zcorpan>
smaug____: ah. ok

[14:58:06.0000] <smaug____>
and about:newTab is xhtml or something

[14:58:06.0000] <smaug____>
Ms2ger: I guess I opened new tab

[14:58:07.0000] <Ms2ger>
Ah, right

[14:58:08.0000] <smaug____>
silly me

[14:58:08.0000] <zcorpan>
smaug____: ah. ok

[14:58:15.0000] <smaug____>
and about:newTab is xhtml or something

[14:58:17.0000] <Ms2ger>
Ah, right

[14:58:24.0000] <smaug____>
silly me

[14:59:59.0000] <zcorpan>
AryehGregor: uncaught exceptions in scripts don't fire a bubbling error event

[15:00:01.0000] <zcorpan>
AryehGregor: they invoke window.onerror() with three arguments, not involving any event

[15:00:02.0000] <AryehGregor>
Oh, they just fire straight at window?

[15:00:03.0000] <AryehGregor>
Oh, sneaky.

[15:00:04.0000] <zcorpan>
nope

[15:00:05.0000] <AryehGregor>
What defines that?

[15:00:06.0000] <zcorpan>
html

[15:00:13.0000] <zcorpan>
AryehGregor: they invoke window.onerror() with three arguments, not involving any event

[15:00:13.0000] <AryehGregor>
Oh, they just fire straight at window?

[15:00:24.0000] <AryehGregor>
Oh, sneaky.

[15:00:26.0000] <zcorpan>
nope

[15:00:28.0000] <AryehGregor>
What defines that?

[15:00:32.0000] <zcorpan>
html

[15:03:00.0000] <Ms2ger>
There are tests, even

[15:03:07.0000] <Ms2ger>
There are tests, even

[15:04:00.0000] <AryehGregor>
So window.onerror really is used for two totally different things.

[15:04:01.0000] <zcorpan>
the spec has two entry points

[15:04:02.0000] <zcorpan>
http://dev.w3.org/html5/spec/webappapis.html#create-a-script

[15:04:03.0000] <zcorpan>
"Otherwise, report the error ..."

[15:04:04.0000] <AryehGregor>
(W3C version?  Really?)

[15:04:07.0000] <AryehGregor>
So window.onerror really is used for two totally different things.

[15:04:07.0000] <zcorpan>
the spec has two entry points

[15:04:07.0000] <zcorpan>
http://dev.w3.org/html5/spec/webappapis.html#create-a-script

[15:04:21.0000] <zcorpan>
"Otherwise, report the error ..."

[15:04:34.0000] <AryehGregor>
(W3C version?  Really?)

[15:04:37.0000] <zcorpan>
and http://dev.w3.org/html5/spec/webappapis.html#runtime-script-errors-in-documents

[15:04:47.0000] <zcorpan>
whatwg didn't want to load for me :(

[15:05:00.0000] <zcorpan>
and http://dev.w3.org/html5/spec/webappapis.html#runtime-script-errors-in-documents

[15:05:01.0000] <zcorpan>
whatwg didn't want to load for me :(

[15:06:00.0000] <zcorpan>
and workers have onerror stuff as well

[15:06:11.0000] <zcorpan>
and workers have onerror stuff as well

[15:39:48.0000] <Hixie>
MikeSmith: ok, should be published

[15:40:00.0000] <Hixie>
MikeSmith: ok, should be published

[15:45:56.0000] <smaug____>
aklein: looks like webkit handles documentfragments inconsistently

[15:46:00.0000] <smaug____>
aklein: looks like webkit handles documentfragments inconsistently

[15:46:01.0000] <smaug____>
when inserting documentfragment to some other node, each removal from documentfragment get separate record

[15:46:32.0000] <smaug____>
when inserting documentfragment to some other node, each removal from documentfragment get separate record

[15:46:52.0000] <smaug____>
aklein: but they are all added in one record to the new parent

[15:47:00.0000] <smaug____>
aklein: but they are all added in one record to the new parent

[15:47:01.0000] <smaug____>
gecko will create only 2 records. One for removals, one for additions

[15:47:02.0000] <smaug____>
spec bug has been filed

[15:47:03.0000] <smaug____>
(it doesn't define this case)

[15:47:13.0000] <smaug____>
gecko will create only 2 records. One for removals, one for additions

[15:47:27.0000] <smaug____>
spec bug has been filed

[15:47:33.0000] <smaug____>
(it doesn't define this case)

[15:59:00.0000] <Hixie>
heycam: why are dictionary types not distinguishable?

[15:59:29.0000] <Hixie>
heycam: why are dictionary types not distinguishable?

[16:00:00.0000] <Hixie>
heycam: is there no type checking beyond "is an Object" for dictionary arguments? i.e. no checking that fields are present?

[16:00:27.0000] <Hixie>
heycam: is there no type checking beyond "is an Object" for dictionary arguments? i.e. no checking that fields are present?

[16:08:57.0000] <aklein>
smaug____: not surprising...WebKit doesn't treat document fragments nearly atomically enough, I'm hacking on that this week

[16:09:00.0000] <aklein>
smaug____: not surprising...WebKit doesn't treat document fragments nearly atomically enough, I'm hacking on that this week

[16:09:37.0000] <heycam>
Hixie, that's right

[16:10:00.0000] <heycam>
Hixie, that's right

[16:10:01.0000] <Hixie>
:-(

[16:10:02.0000] <aklein>
smaug____: I suspect that replaceChild may also be handled differently

[16:10:16.0000] <Hixie>
:-(

[16:10:27.0000] <aklein>
smaug____: I suspect that replaceChild may also be handled differently

[16:10:54.0000] <smaug____>
ok

[16:11:00.0000] <smaug____>
ok

[16:42:55.0000] <zewt>
reading the indexeddb spec makes me :|

[16:43:00.0000] <zewt>
reading the indexeddb spec makes me :|

[16:43:35.0000] <zewt>
If these steps are running asynchronously, return the created transaction and queue up the remaining steps.

[16:44:00.0000] <zewt>
If these steps are running asynchronously, return the created transaction and queue up the remaining steps.


2012-03-20
[17:46:00.0000] <zewt>
do browsers ever actually encode *to* legacy encodings? (eg. does the encoding spec actually need to spec all that)

[17:46:23.0000] <zewt>
do browsers ever actually encode *to* legacy encodings? (eg. does the encoding spec actually need to spec all that)

[17:56:00.0000] <TabAtkins>
No.  No they don't.

[17:56:07.0000] <TabAtkins>
No.  No they don't.

[17:58:45.0000] <smaug____>
/me had forgotten how horrible insertAdjacentHTML is

[17:59:00.0000] <smaug____>
/me had forgotten how horrible insertAdjacentHTML is

[18:19:00.0000] <sicking>
smaug____: horrible in what way?

[18:19:01.0000] <sicking>
smaug____: horrible in what way?

[18:20:00.0000] <sicking>
hmm.. shouldn't it throw HIERARCHY_ERROR rather than NO_MODIFICATION_ALLOWED?

[18:20:22.0000] <sicking>
hmm.. shouldn't it throw HIERARCHY_ERROR rather than NO_MODIFICATION_ALLOWED?

[18:23:00.0000] <sicking>
oh, and it's case insensitive :(

[18:23:12.0000] <sicking>
oh, and it's case insensitive :(

[19:23:50.0000] <Hixie>
TabAtkins, zewt: form submission?

[19:24:00.0000] <Hixie>
TabAtkins, zewt: form submission?

[19:55:00.0000] <zewt>
Hixie: tested that, but broken HTTP caching decided to break the test

[19:55:13.0000] <zewt>
Hixie: tested that, but broken HTTP caching decided to break the test

[19:56:00.0000] <zewt>
(apparently it's 2012 and apache still doesn't include the content-type as part of etag generation, or at least that seems like the likely culprit)

[19:56:07.0000] <zewt>
(apparently it's 2012 and apache still doesn't include the content-type as part of etag generation, or at least that seems like the likely culprit)

[20:00:49.0000] <zewt>
jesus. amazon spamming tons of requests in background tabs I havn't touched in days

[20:01:00.0000] <zewt>
jesus. amazon spamming tons of requests in background tabs I havn't touched in days

[20:02:00.0000] <zewt>
always nice when high-profile sites set nice, low standards for everyone else to meet

[20:02:07.0000] <zewt>
always nice when high-profile sites set nice, low standards for everyone else to meet

[20:55:00.0000] <MikeSmith>
Hixie: thanks

[20:55:05.0000] <MikeSmith>
Hixie: thanks

[22:46:52.0000] <MikeSmith>
amazing. http://my.opera.com/hallvors/blog/2012/03/20/debugging-maps-google-maps

[22:47:00.0000] <MikeSmith>
amazing. http://my.opera.com/hallvors/blog/2012/03/20/debugging-maps-google-maps

[22:54:00.0000] <heycam>
who knows how Selection and Ranges work?

[22:54:05.0000] <heycam>
who knows how Selection and Ranges work?

[22:54:39.0000] <heycam>
wondering if my usage of range.setStart/setEnd is correct: http://pastebin.mozilla.org/1527442

[22:55:00.0000] <heycam>
wondering if my usage of range.setStart/setEnd is correct: http://pastebin.mozilla.org/1527442

[22:55:01.0000] <heycam>
I thought that would select the "e" from "hello ", but when I try in Firefox and Chrome I get the "there" selected

[22:55:08.0000] <heycam>
I thought that would select the "e" from "hello ", but when I try in Firefox and Chrome I get the "there" selected

[22:56:00.0000] <heycam>
same thing if I translate it to html instead of svg, so I guess I am not understanding how ranges/selection work

[22:56:27.0000] <heycam>
same thing if I translate it to html instead of svg, so I guess I am not understanding how ranges/selection work

[22:57:42.0000] <heycam>
oh, since I've selected the <text> element, my indexes are child node indexes, not character offsets

[22:57:53.0000] <heycam>
what a straightforward API ;)

[22:58:00.0000] <heycam>
oh, since I've selected the <text> element, my indexes are child node indexes, not character offsets

[22:58:01.0000] <heycam>
what a straightforward API ;)

[22:59:00.0000] <heycam>
today's instalment of rubber duck / teddy bear debugging brought to you by heycam

[22:59:04.0000] <heycam>
today's instalment of rubber duck / teddy bear debugging brought to you by heycam

[23:06:00.0000] <MikeSmith>
heh

[23:06:35.0000] <MikeSmith>
heh

[23:07:00.0000] <MikeSmith>
heycam: I think AryehGregor

[23:07:25.0000] <MikeSmith>
heycam: I think AryehGregor

[23:07:41.0000] <MikeSmith>
and rniwa some

[23:07:51.0000] <heycam>
yeah

[23:07:52.0000] <MikeSmith>
and maybe also Ms2ger

[23:07:54.0000] <heycam>
oh well, problem solved

[23:08:00.0000] <MikeSmith>
and rniwa some

[23:08:01.0000] <heycam>
yeah

[23:08:02.0000] <MikeSmith>
and maybe also Ms2ger

[23:08:03.0000] <heycam>
oh well, problem solved

[23:08:04.0000] <MikeSmith>
that's a nice phrase to hear

[23:08:05.0000] <heycam>
ga

[23:08:06.0000] <heycam>
*ha

[23:08:07.0000] <MikeSmith>
that's a nice phrase to hear

[23:08:11.0000] <heycam>
ga

[23:08:12.0000] <heycam>
*ha

[01:00:41.0000] <MikeSmith>
Hixie: can you point me at the JS code that does the "Loading slowly?" popup

[01:01:00.0000] <MikeSmith>
Hixie: can you point me at the JS code that does the "Loading slowly?" popup

[01:01:01.0000] <MikeSmith>
hmm

[01:01:02.0000] <MikeSmith>
I can't add it myself to the Overview.html pages

[01:01:03.0000] <MikeSmith>
*page

[01:01:03.0000] <MikeSmith>
hmm

[01:01:18.0000] <MikeSmith>
I can't add it myself to the Overview.html pages

[01:01:20.0000] <MikeSmith>
*page

[01:01:43.0000] <MikeSmith>
ah wait

[01:01:47.0000] <MikeSmith>
yeah I can now

[01:02:00.0000] <MikeSmith>
ah wait

[01:02:01.0000] <MikeSmith>
yeah I can now

[01:02:02.0000] <MikeSmith>
Hixie: this is in the context of https://www.w3.org/Bugs/Public/show_bug.cgi?id=16442

[01:02:07.0000] <MikeSmith>
Hixie: this is in the context of https://www.w3.org/Bugs/Public/show_bug.cgi?id=16442

[01:03:00.0000] <Ms2ger>
Morning Mike

[01:03:01.0000] <MikeSmith>
Ms2ger: hej

[01:03:08.0000] <MikeSmith>
Ms2ger: hej

[01:05:00.0000] <Ms2ger>
I was looking for a component to dump https://www.w3.org/Bugs/Public/show_bug.cgi?id=14600 into earlier

[01:05:01.0000] <Ms2ger>
I was looking for a component to dump https://www.w3.org/Bugs/Public/show_bug.cgi?id=14600 into earlier

[01:05:43.0000] <MikeSmith>
hmm

[01:05:57.0000] <MikeSmith>
no brilliant ideas from me

[01:06:00.0000] <MikeSmith>
hmm

[01:06:01.0000] <MikeSmith>
no brilliant ideas from me

[01:06:02.0000] <MikeSmith>
I can create a new component if we need one

[01:06:03.0000] <MikeSmith>
"Orphaned"

[01:06:10.0000] <MikeSmith>
I can create a new component if we need one

[01:06:31.0000] <MikeSmith>
"Orphaned"

[01:07:00.0000] <MikeSmith>
"Friendless"

[01:07:01.0000] <MikeSmith>
"Unwelcome"

[01:07:02.0000] <MikeSmith>
"Unappreciated"

[01:07:03.0000] <Ms2ger>
Oh, I like "unwelcome"

[01:07:05.0000] <MikeSmith>
"Friendless"

[01:07:16.0000] <MikeSmith>
"Unwelcome"

[01:07:27.0000] <MikeSmith>
"Unappreciated"

[01:07:32.0000] <Ms2ger>
Oh, I like "unwelcome"

[01:09:42.0000] <MikeSmith>
OK, now we need to decide on which WG

[01:09:45.0000] <MikeSmith>
WebApps?

[01:10:00.0000] <MikeSmith>
OK, now we need to decide on which WG

[01:10:01.0000] <MikeSmith>
WebApps?

[01:13:56.0000] <Ms2ger>
Web Platform (other)?

[01:14:00.0000] <Ms2ger>
Web Platform (other)?

[01:15:00.0000] <MikeSmith>
OK

[01:15:13.0000] <MikeSmith>
OK

[01:18:00.0000] <MikeSmith>
Ms2ger: OK, added

[01:18:01.0000] <Ms2ger>
Thanks

[01:18:02.0000] <MikeSmith>
with Description, "Features for which we have no specs whose editors are willing to give them a home."

[01:18:20.0000] <MikeSmith>
Ms2ger: OK, added

[01:18:25.0000] <Ms2ger>
Thanks

[01:18:29.0000] <MikeSmith>
with Description, "Features for which we have no specs whose editors are willing to give them a home."

[01:20:00.0000] <Ms2ger>
:)

[01:20:06.0000] <Ms2ger>
:)

[01:22:50.0000] <MikeSmith>
/me steps away for a bit

[01:23:00.0000] <MikeSmith>
/me steps away for a bit

[01:23:01.0000] <Ms2ger>
See you

[01:23:35.0000] <Ms2ger>
See you

[01:26:52.0000] <Ms2ger>
Also, I've only owned the spec for Range/Selection, that doesn't mean I know anything about it

[01:27:00.0000] <Ms2ger>
Also, I've only owned the spec for Range/Selection, that doesn't mean I know anything about it

[01:58:00.0000] <annevk>
zewt: both URLs and form submission need encode

[01:58:31.0000] <annevk>
zewt: both URLs and form submission need encode

[01:59:00.0000] <annevk>
zewt: e.g. create a page containing <meta charset=gbk><a href=?&euro;>test</a> and see what it points to

[01:59:01.0000] <annevk>
might not be the most interoperable example, but you get the idea

[01:59:05.0000] <annevk>
zewt: e.g. create a page containing <meta charset=gbk><a href=?&euro;>test</a> and see what it points to

[01:59:16.0000] <annevk>
might not be the most interoperable example, but you get the idea

[02:08:00.0000] <kennyluck>
Why not just "Proprietary" :p

[02:08:28.0000] <kennyluck>
Why not just "Proprietary" :p

[02:17:44.0000] <jgraham>
MikeSmith: Yeah Hallvord is a bit scary

[02:17:53.0000] <jgraham>
Not to mention Google Maps

[02:18:00.0000] <jgraham>
MikeSmith: Yeah Hallvord is a bit scary

[02:18:01.0000] <jgraham>
Not to mention Google Maps

[02:25:00.0000] <zcorpan>
MikeSmith: you could add a noindex meta to the single-page version

[02:25:15.0000] <zcorpan>
MikeSmith: you could add a noindex meta to the single-page version

[02:26:00.0000] <zcorpan>
MikeSmith: maybe the april date will be accurate after all...

[02:26:22.0000] <zcorpan>
MikeSmith: maybe the april date will be accurate after all...

[02:32:00.0000] <jgraham>
We should rewrite the charter so we can only publish on April 1st

[02:32:13.0000] <jgraham>
We should rewrite the charter so we can only publish on April 1st

[03:06:57.0000] <MikeSmith>
zcorpan: hadn't consider noindex yet

[03:07:00.0000] <MikeSmith>
zcorpan: hadn't consider noindex yet

[03:07:01.0000] <MikeSmith>
will try to set up the JS thing now

[03:07:05.0000] <MikeSmith>
will try to set up the JS thing now

[03:10:00.0000] <MikeSmith>
jgraham, zcorpan : btw, I'm sure who "a colleague who has often enough beaten me to the goal post in analysis if we happened to look at the same issue" is

[03:10:09.0000] <MikeSmith>
jgraham, zcorpan : btw, I'm sure who "a colleague who has often enough beaten me to the goal post in analysis if we happened to look at the same issue" is

[03:12:00.0000] <jgraham>
You are?

[03:12:07.0000] <jgraham>
You are?

[03:14:39.0000] <MikeSmith>
s/sure/curious/

[03:14:41.0000] <MikeSmith>
I meant

[03:14:58.0000] <MikeSmith>
no idea why that came out "sure"

[03:15:00.0000] <MikeSmith>
s/sure/curious/

[03:15:01.0000] <MikeSmith>
I meant

[03:15:02.0000] <MikeSmith>
no idea why that came out "sure"

[03:18:00.0000] <hasather>
MikeSmith: Kåre Byberg

[03:18:20.0000] <hasather>
MikeSmith: Kåre Byberg

[03:19:00.0000] <jgraham>
Yeah, not that surprising if you are familiar with the people involved

[03:19:10.0000] <jgraham>
Yeah, not that surprising if you are familiar with the people involved

[03:21:41.0000] <MikeSmith>
hasather: thanks

[03:21:56.0000] <MikeSmith>
I don't think I ever met Kåre

[03:22:00.0000] <MikeSmith>
hasather: thanks

[03:22:01.0000] <MikeSmith>
I don't think I ever met Kåre

[03:23:00.0000] <hasather>
MikeSmith: started working after you left I think (and he works from home)

[03:23:25.0000] <hasather>
MikeSmith: started working after you left I think (and he works from home)

[03:24:00.0000] <MikeSmith>
ah

[03:24:24.0000] <MikeSmith>
ah

[03:26:00.0000] <annevk>
lol pub is deferred again

[03:26:01.0000] <annevk>
circus is in town

[03:26:07.0000] <annevk>
lol pub is deferred again

[03:26:16.0000] <annevk>
circus is in town

[04:37:00.0000] <MikeSmith>
OK fwiw I added the fugly "Too slow? Try reading the multipage copy of the spec instead" thing to the W3C version of the single-page spec

[04:37:01.0000] <MikeSmith>
http://dev.w3.org/html5/spec/single-page.html

[04:37:27.0000] <MikeSmith>
OK fwiw I added the fugly "Too slow? Try reading the multipage copy of the spec instead" thing to the W3C version of the single-page spec

[04:37:31.0000] <MikeSmith>
http://dev.w3.org/html5/spec/single-page.html

[05:15:00.0000] <smaug____>
hmm, perhaps I wasn't connected

[05:15:01.0000] <smaug____>
krijn: you said at some point that you may not be able to log this channel for long

[05:15:32.0000] <smaug____>
hmm, perhaps I wasn't connected

[05:15:34.0000] <smaug____>
krijn: you said at some point that you may not be able to log this channel for long

[05:15:36.0000] <smaug____>
krijn: there is now a backup http://logbot.glob.com.au/

[05:16:00.0000] <smaug____>
krijn: there is now a backup http://logbot.glob.com.au/

[05:18:00.0000] <kennyluck>
yay!

[05:18:08.0000] <kennyluck>
yay!

[05:20:56.0000] <charlvn>
smaug____: cool, is that a custom implementation?

[05:21:00.0000] <charlvn>
smaug____: cool, is that a custom implementation?

[05:22:00.0000] <smaug____>
charlvn: of what? I don't know

[05:22:01.0000] <smaug____>
I don't maintain it

[05:22:30.0000] <smaug____>
charlvn: of what? I don't know

[05:22:35.0000] <smaug____>
I don't maintain it

[05:23:00.0000] <annevk>
smaug____: so when you insert a DocumentFragment that fragment always gets a single record too right?

[05:23:01.0000] <krijn>
smaug____: nice!

[05:23:15.0000] <annevk>
smaug____: so when you insert a DocumentFragment that fragment always gets a single record too right?

[05:23:28.0000] <krijn>
smaug____: nice!

[05:23:42.0000] <smaug____>
I just knew that glob had logs for some moznet channels and when krijn mentioned that he may not be able keep the logs working here, I asked glob  ..

[05:24:00.0000] <smaug____>
I just knew that glob had logs for some moznet channels and when krijn mentioned that he may not be able keep the logs working here, I asked glob  ..

[05:24:01.0000] <smaug____>
annevk: yes

[05:24:02.0000] <smaug____>
annevk: nodes are removed from it

[05:24:17.0000] <smaug____>
annevk: nodes are removed from it

[05:25:00.0000] <annevk>
I guess DocumentFragment needs a whole special path

[05:25:01.0000] <smaug____>
probably yes

[05:25:02.0000] <smaug____>
that is what I have in implementation

[05:25:03.0000] <smaug____>
like there is special thingie for innerHTML

[05:25:11.0000] <smaug____>
probably yes

[05:25:15.0000] <smaug____>
that is what I have in implementation

[05:25:25.0000] <smaug____>
like there is special thingie for innerHTML

[05:25:46.0000] <smaug____>
and textContent

[05:26:00.0000] <smaug____>
and textContent

[05:30:00.0000] <annevk>
hmm

[05:30:22.0000] <annevk>
hmm

[05:30:40.0000] <annevk>
so concept-node-insert needs to queue that if node is a DocumentFragment

[05:30:56.0000] <annevk>
and it should probably use word different from append to move nodes around

[05:31:00.0000] <annevk>
so concept-node-insert needs to queue that if node is a DocumentFragment

[05:31:01.0000] <annevk>
and it should probably use word different from append to move nodes around

[05:31:41.0000] <annevk>
then pre-insert/insert/remove need a flag to suppress record queuing

[05:32:00.0000] <annevk>
then pre-insert/insert/remove need a flag to suppress record queuing

[05:32:01.0000] <annevk>
and then replace/replace all need to use that

[05:32:27.0000] <annevk>
and then replace/replace all need to use that

[05:32:46.0000] <annevk>
and queue their own stuff

[05:32:50.0000] <smaug____>
in the implementation I have "MutationBatch" stack object around the document fragment insertion

[05:33:00.0000] <annevk>
and queue their own stuff

[05:33:01.0000] <smaug____>
in the implementation I have "MutationBatch" stack object around the document fragment insertion

[05:33:02.0000] <smaug____>
the batch ends up creating just one record per observer

[05:33:10.0000] <smaug____>
the batch ends up creating just one record per observer

[05:33:50.0000] <annevk>
and replace/replace all also need to take special care again of DocumentFragment

[05:33:51.0000] <smaug____>
er, there is one batch for removal, and one for adding nodes to the new parent

[05:34:00.0000] <annevk>
and replace/replace all also need to take special care again of DocumentFragment

[05:34:01.0000] <smaug____>
er, there is one batch for removal, and one for adding nodes to the new parent

[05:34:02.0000] <annevk>
I thought you wanted them combined for replace?

[05:34:03.0000] <annevk>
https://www.w3.org/Bugs/Public/show_bug.cgi?id=16373

[05:34:04.0000] <smaug____>
ah, that can't be done in general cas

[05:34:05.0000] <smaug____>
e

[05:34:06.0000] <smaug____>
invalid but

[05:34:09.0000] <annevk>
I thought you wanted them combined for replace?

[05:34:25.0000] <annevk>
https://www.w3.org/Bugs/Public/show_bug.cgi?id=16373

[05:34:28.0000] <smaug____>
ah, that can't be done in general cas

[05:34:30.0000] <smaug____>
e

[05:34:35.0000] <smaug____>
invalid but

[05:34:37.0000] <smaug____>
bug even

[05:34:53.0000] <annevk>
hmm

[05:35:00.0000] <smaug____>
bug even

[05:35:01.0000] <annevk>
hmm

[05:35:02.0000] <annevk>
why can it not be done?

[05:35:03.0000] <smaug____>
because previousSibling/nextSibling could be wrong

[05:35:04.0000] <smaug____>
er, hmm

[05:35:05.0000] <smaug____>
am I wrong here.

[05:35:06.0000] <annevk>
why can it not be done?

[05:35:17.0000] <smaug____>
because previousSibling/nextSibling could be wrong

[05:35:26.0000] <smaug____>
er, hmm

[05:35:30.0000] <smaug____>
am I wrong here.

[05:36:00.0000] <annevk>
not sure why they would be wrong

[05:36:28.0000] <annevk>
not sure why they would be wrong

[05:37:00.0000] <smaug____>
nm, I was thinking different case, when one is inserting a node which has already parent

[05:37:01.0000] <smaug____>
that needs to create two records

[05:37:02.0000] <annevk>
yes

[05:37:04.0000] <smaug____>
nm, I was thinking different case, when one is inserting a node which has already parent

[05:37:15.0000] <smaug____>
that needs to create two records

[05:37:25.0000] <annevk>
yes

[05:39:00.0000] <annevk>
okay, lets try to make these edits one by one

[05:39:24.0000] <annevk>
okay, lets try to make these edits one by one

[05:39:38.0000] <annevk>
already feeling pain

[05:40:00.0000] <annevk>
already feeling pain

[05:41:00.0000] <smaug____>
annevk: sorry

[05:41:23.0000] <smaug____>
annevk: sorry

[05:42:45.0000] <smaug____>
after writing some tests for MutationObserver, if feels pretty neat API (if I dare to say that :) ) , and fast.

[05:43:00.0000] <smaug____>
after writing some tests for MutationObserver, if feels pretty neat API (if I dare to say that :) ) , and fast.

[05:43:01.0000] <annevk>
smaug____: so if you remove everything from a DF, what are previous and nextsibling?

[05:43:02.0000] <annevk>
null?

[05:43:19.0000] <annevk>
smaug____: so if you remove everything from a DF, what are previous and nextsibling?

[05:43:26.0000] <annevk>
null?

[05:44:00.0000] <smaug____>
yes

[05:44:25.0000] <smaug____>
yes

[05:47:52.0000] <Workmon>
Hey annevk, you worked on CSSOM before. Do you know if element.style.foo is supposed to support !important as part of a value?

[05:48:00.0000] <Workmon>
Hey annevk, you worked on CSSOM before. Do you know if element.style.foo is supposed to support !important as part of a value?

[05:49:00.0000] <annevk>
that was not entirely clear I remember

[05:49:01.0000] <annevk>
we were not sure whether setting it should map to style.setProperty or not

[05:49:02.0000] <annevk>
and how

[05:49:05.0000] <annevk>
that was not entirely clear I remember

[05:49:24.0000] <annevk>
we were not sure whether setting it should map to style.setProperty or not

[05:49:28.0000] <annevk>
and how

[05:51:00.0000] <Workmon>
I was surprised to find that .style is overriden by author !important rules

[05:51:04.0000] <Workmon>
I was surprised to find that .style is overriden by author !important rules

[06:03:00.0000] <zcorpan>
.style is also author-level, just higher specificity

[06:03:32.0000] <zcorpan>
.style is also author-level, just higher specificity

[06:06:00.0000] <annevk>
so nobody missed thus far that the spec does not describe MutationRecord queing of attributeNamespace?

[06:06:03.0000] <annevk>
so nobody missed thus far that the spec does not describe MutationRecord queing of attributeNamespace?

[06:06:45.0000] <smaug____>
annevk: :)

[06:06:54.0000] <smaug____>
hey, spec reviewing is hard

[06:07:00.0000] <smaug____>
annevk: :)

[06:07:01.0000] <smaug____>
hey, spec reviewing is hard

[06:07:02.0000] <annevk>
turns out

[06:07:03.0000] <zcorpan>
so you wouldn't get notified about namespaced attributes?

[06:07:04.0000] <smaug____>
per spec

[06:07:06.0000] <annevk>
turns out

[06:07:14.0000] <zcorpan>
so you wouldn't get notified about namespaced attributes?

[06:07:34.0000] <smaug____>
per spec

[06:07:40.0000] <zcorpan>
that's a feature! :-P

[06:07:48.0000] <smaug____>
implementations do support it

[06:08:00.0000] <zcorpan>
that's a feature! :-P

[06:08:01.0000] <smaug____>
implementations do support it

[06:11:00.0000] <annevk>
ah nice, it's not too hard

[06:11:01.0000] <annevk>
there's no namespace-based filtering

[06:11:27.0000] <annevk>
ah nice, it's not too hard

[06:11:36.0000] <annevk>
there's no namespace-based filtering

[06:11:46.0000] <annevk>
it just needs to be set on the object

[06:11:49.0000] <annevk>
piece of cake

[06:12:00.0000] <annevk>
it just needs to be set on the object

[06:12:01.0000] <annevk>
piece of cake

[06:12:02.0000] <smaug____>
I was thinking to add support for prefix:localName filters

[06:12:03.0000] <smaug____>
but not sure if that is important enough

[06:12:17.0000] <smaug____>
I was thinking to add support for prefix:localName filters

[06:12:27.0000] <smaug____>
but not sure if that is important enough

[06:18:00.0000] <annevk>
given that people want to deprecate everything but name/value attributes, lets not

[06:18:01.0000] <annevk>
given that people want to deprecate everything but name/value attributes, lets not

[06:18:54.0000] <zcorpan>
can you currently filter for localName or qualifiedName?

[06:19:00.0000] <zcorpan>
can you currently filter for localName or qualifiedName?

[06:19:01.0000] <annevk>
qualified

[06:19:02.0000] <zcorpan>
ok

[06:19:03.0000] <annevk>
qualified

[06:19:08.0000] <zcorpan>
ok

[06:20:00.0000] <annevk>
attribute's name is the new qualified name

[06:20:02.0000] <annevk>
attribute's name is the new qualified name

[06:30:00.0000] <annevk>
ugh

[06:30:32.0000] <annevk>
ugh

[06:30:48.0000] <annevk>
maybe I should unsubscribe from the w3c process thingie

[06:31:00.0000] <annevk>
maybe I should unsubscribe from the w3c process thingie

[06:32:34.0000] <annevk>
anyway

[06:32:41.0000] <annevk>
can pre-insert and insert be merged?

[06:32:45.0000] <annevk>
and pre-remove / remove

[06:33:55.0000] <annevk>
i guess it's kind of nice for replace

[06:34:00.0000] <annevk>
anyway

[06:34:01.0000] <annevk>
can pre-insert and insert be merged?

[06:34:02.0000] <annevk>
and pre-remove / remove

[06:34:03.0000] <annevk>
i guess it's kind of nice for replace

[06:47:42.0000] <annevk>
pre-insert does not need suppress

[06:47:47.0000] <annevk>
not sure why I thought it did

[06:48:00.0000] <annevk>
pre-insert does not need suppress

[06:48:01.0000] <annevk>
not sure why I thought it did

[06:50:50.0000] <charlvn>
smaug____: ah ok, sorry was in a meeting just now

[06:51:00.0000] <charlvn>
smaug____: ah ok, sorry was in a meeting just now

[07:07:47.0000] <smaug____>
does webkit have anything similar to gecko's window.dump() ?

[07:08:00.0000] <smaug____>
does webkit have anything similar to gecko's window.dump() ?

[07:08:56.0000] <hsivonen>
smaug____: console.log() maybe?

[07:09:00.0000] <hsivonen>
smaug____: console.log() maybe?

[07:09:01.0000] <smaug____>
nope, that is annoying

[07:09:06.0000] <smaug____>
nope, that is annoying

[07:10:00.0000] <charlvn>
never used window.dump but why is that less annoying than console.log ?

[07:10:04.0000] <charlvn>
never used window.dump but why is that less annoying than console.log ?

[07:11:00.0000] <smaug____>
charlvn: because it prints out to the terminal (if a pref is enabled)

[07:11:01.0000] <smaug____>
it is easier to process that data

[07:11:02.0000] <charlvn>
ah i see, ok

[07:11:05.0000] <smaug____>
charlvn: because it prints out to the terminal (if a pref is enabled)

[07:11:14.0000] <smaug____>
it is easier to process that data

[07:11:29.0000] <charlvn>
ah i see, ok

[07:12:00.0000] <charlvn>
i like firebug's handling of that (it allows you to neatly expand objects, etc) but that is only handy for certain types of debugging

[07:12:01.0000] <annevk>
man complex mutations to mutation algorithms are complex

[07:12:04.0000] <charlvn>
i like firebug's handling of that (it allows you to neatly expand objects, etc) but that is only handy for certain types of debugging

[07:12:15.0000] <annevk>
man complex mutations to mutation algorithms are complex

[07:12:48.0000] <smaug____>
aren't they

[07:13:00.0000] <smaug____>
aren't they

[07:13:00.0000] <smaug____>
implementing that all isn't quite trivial either

[07:21:43.0000] <annevk>
ok I checked something in

[07:21:45.0000] <annevk>
see e.g. http://dvcs.w3.org/hg/domcore/raw-file/tip/Overview.html#concept-node-replace-all

[07:22:00.0000] <annevk>
ok I checked something in

[07:22:01.0000] <annevk>
see e.g. http://dvcs.w3.org/hg/domcore/raw-file/tip/Overview.html#concept-node-replace-all

[07:22:38.0000] <annevk>
the only thing that might be wrong is transient observers because I still have no clue

[07:22:49.0000] <annevk>
(did not bother getting a clue either)

[07:23:00.0000] <annevk>
the only thing that might be wrong is transient observers because I still have no clue

[07:23:01.0000] <annevk>
(did not bother getting a clue either)

[07:23:59.0000] <smaug____>
I'll review after lunc

[07:24:01.0000] <smaug____>
h

[07:26:00.0000] <annevk>
hmm food

[07:28:00.0000] <annevk>
is innerHTML defined in terms of http://dvcs.w3.org/hg/domcore/raw-file/tip/Overview.html#concept-node-replace-all yet?

[07:28:36.0000] <annevk>
is innerHTML defined in terms of http://dvcs.w3.org/hg/domcore/raw-file/tip/Overview.html#concept-node-replace-all yet?

[07:59:36.0000] <Ms2ger>
annevk, yes

[08:00:00.0000] <Ms2ger>
annevk, yes

[08:10:59.0000] <hsivonen>
too bad mpilgrim doesn't blog anymore. it would have been interesting to see his comments on Mozilla's latest codec direction

[08:11:00.0000] <hsivonen>
too bad mpilgrim doesn't blog anymore. it would have been interesting to see his comments on Mozilla's latest codec direction

[08:19:42.0000] <annevk>
sweet, so everything should be good

[08:19:58.0000] <annevk>
although I guess I should go through the spec again checking everything that invokes mutations

[08:20:00.0000] <annevk>
sweet, so everything should be good

[08:20:01.0000] <annevk>
although I guess I should go through the spec again checking everything that invokes mutations

[08:43:00.0000] <zcorpan>
annevk: why is it "node document" rather than "owner document"?

[08:43:25.0000] <zcorpan>
annevk: why is it "node document" rather than "owner document"?

[08:48:00.0000] <smaug____>
is jarred ever here?

[08:48:01.0000] <smaug____>
jarred nicholls

[08:48:03.0000] <smaug____>
is jarred ever here?

[08:48:17.0000] <smaug____>
jarred nicholls

[09:44:00.0000] <zcorpan>
should we add onfullscreen* event handlers?

[09:44:20.0000] <zcorpan>
should we add onfullscreen* event handlers?

[09:49:00.0000] <smaug____>
dglazkov: I don't understand why templates need to be hacked in via components stuff?

[09:49:24.0000] <smaug____>
dglazkov: I don't understand why templates need to be hacked in via components stuff?

[10:12:53.0000] <annevk>
zcorpan: it's also XMLHttpRequest document

[10:13:00.0000] <annevk>
zcorpan: it's also XMLHttpRequest document

[10:16:00.0000] <zcorpan>
annevk: i don't follow

[10:16:22.0000] <zcorpan>
annevk: i don't follow

[10:17:44.0000] <annevk>
aklein: did you pay attention to transient observers when reviewing?

[10:18:00.0000] <annevk>
aklein: did you pay attention to transient observers when reviewing?

[10:19:38.0000] <annevk>
zcorpan: that's mostly the reason

[10:20:00.0000] <annevk>
zcorpan: that's mostly the reason

[10:20:01.0000] <zcorpan>
annevk: node document and XMLHttpRequest document seem to have different definitions

[10:20:02.0000] <zcorpan>
annevk: i don't see why that makes node document be called node document instead of owner document

[10:20:21.0000] <zcorpan>
annevk: node document and XMLHttpRequest document seem to have different definitions

[10:20:35.0000] <zcorpan>
annevk: i don't see why that makes node document be called node document instead of owner document

[10:21:00.0000] <zcorpan>
but maybe i'm missing something

[10:21:01.0000] <zcorpan>
but maybe i'm missing something

[10:21:50.0000] <annevk>
they do?

[10:22:00.0000] <annevk>
they do?

[10:22:01.0000] <annevk>
both are x document where a given document is associated with x in some way

[10:22:02.0000] <annevk>
I don't really feel strongly about this, but that's the reason they are named similarly

[10:22:11.0000] <annevk>
both are x document where a given document is associated with x in some way

[10:22:29.0000] <annevk>
I don't really feel strongly about this, but that's the reason they are named similarly

[10:23:00.0000] <zcorpan>
ah, ok, i see what you mean

[10:23:16.0000] <zcorpan>
ah, ok, i see what you mean

[10:24:59.0000] <zcorpan>
i think that "node document" is still a weird name, and it's used in various specs (e.g. fullscreen)

[10:25:00.0000] <zcorpan>
i think that "node document" is still a weird name, and it's used in various specs (e.g. fullscreen)

[10:25:01.0000] <zcorpan>
maybe "XMLHttpRequest document" is also a weird name, but i don't have a better suggestion for that one

[10:25:33.0000] <zcorpan>
maybe "XMLHttpRequest document" is also a weird name, but i don't have a better suggestion for that one

[10:27:00.0000] <zcorpan>
should i file a bug to rename node document?

[10:27:01.0000] <annevk>
I kind of like it personally and renaming it is going to be pain, but I suppose we could do it at some point

[10:27:02.0000] <zcorpan>
should i file a bug to rename node document?

[10:27:22.0000] <annevk>
I kind of like it personally and renaming it is going to be pain, but I suppose we could do it at some point

[10:27:41.0000] <annevk>
pain being make work, it's probably not that much effort overall

[10:28:00.0000] <annevk>
pain being make work, it's probably not that much effort overall

[10:28:01.0000] <dglazkov>
good morning, Whatwg!

[10:28:35.0000] <dglazkov>
good morning, Whatwg!

[10:28:51.0000] <dglazkov>
smaug____: does http://dvcs.w3.org/hg/webcomponents/raw-file/tip/explainer/index.html help a little bit?

[10:29:00.0000] <dglazkov>
smaug____: does http://dvcs.w3.org/hg/webcomponents/raw-file/tip/explainer/index.html help a little bit?

[10:29:00.0000] <smaug____>
looking

[10:30:00.0000] <smaug____>
dglazkov: well, why not get one thing done first

[10:30:01.0000] <smaug____>
like shadow dom

[10:30:11.0000] <smaug____>
dglazkov: well, why not get one thing done first

[10:30:16.0000] <smaug____>
like shadow dom

[10:31:00.0000] <dglazkov>
smaug____: what's the harm in having multiple tracks?

[10:31:00.0000] <dglazkov>
smaug____: what's the harm in having multiple tracks?

[10:31:01.0000] <smaug____>
dglazkov: well, makes reviewing harder

[10:31:26.0000] <smaug____>
dglazkov: well, makes reviewing harder

[10:31:46.0000] <smaug____>
no idea what parts of web components are in which stability level

[10:31:48.0000] <dglazkov>
smaug____: how? you can review sequentially :)

[10:32:00.0000] <smaug____>
no idea what parts of web components are in which stability level

[10:32:01.0000] <dglazkov>
smaug____: how? you can review sequentially :)

[10:32:01.0000] <smaug____>
and why they are all under web components

[10:32:03.0000] <dglazkov>
smaug____: well, that's why in my update, I mention that shadow DOM is in the bug fix long tail mode. And that templates is just a first draft.

[10:32:30.0000] <dglazkov>
smaug____: well, that's why in my update, I mention that shadow DOM is in the bug fix long tail mode. And that templates is just a first draft.

[10:32:45.0000] <dglazkov>
smaug____: that's what the explainer doc explains, hopefully

[10:32:53.0000] <TabAtkins>
Workmon: There was a discussion about !important in @style.  I don't think we came to a firm conclusion (I can't find the discussion now) but I believe the consensus was not to allow it.  (Or, perhaps, to allow it syntactically but have it do nothing.)

[10:32:58.0000] <smaug____>
but why aren't they just very much separate drafts?

[10:33:00.0000] <dglazkov>
smaug____: that's what the explainer doc explains, hopefully

[10:33:01.0000] <TabAtkins>
Workmon: There was a discussion about !important in @style.  I don't think we came to a firm conclusion (I can't find the discussion now) but I believe the consensus was not to allow it.  (Or, perhaps, to allow it syntactically but have it do nothing.)

[10:33:02.0000] <smaug____>
but why aren't they just very much separate drafts?

[10:33:43.0000] <annevk>
http://lists.w3.org/Archives/Public/public-w3process/2012Mar/0076.html hmm

[10:33:57.0000] <dglazkov>
smaug____: that's why they are. I am not sure how much more separate they should be?

[10:34:00.0000] <annevk>
http://lists.w3.org/Archives/Public/public-w3process/2012Mar/0076.html hmm

[10:34:00.0000] <annevk>
I wonder how to explain that CSS is not working that great...

[10:34:01.0000] <dglazkov>
smaug____: that's why they are. I am not sure how much more separate they should be?

[10:34:02.0000] <annevk>
I wonder how to explain that CSS is not working that great...

[10:34:03.0000] <annevk>
maybe just not bother is better

[10:34:04.0000] <smaug____>
dglazkov: just remove the whole concept of "web components" :)

[10:34:11.0000] <annevk>
maybe just not bother is better

[10:34:33.0000] <smaug____>
dglazkov: just remove the whole concept of "web components" :)

[10:34:44.0000] <dglazkov>
smaug____: no :)

[10:34:49.0000] <smaug____>
there are just separate proposals, which have little to do with each other

[10:35:00.0000] <dglazkov>
smaug____: no :)

[10:35:01.0000] <smaug____>
there are just separate proposals, which have little to do with each other

[10:35:38.0000] <annevk>
smaug____: that's the opposite argument others made a while back...

[10:35:42.0000] <dglazkov>
smaug____: sure. why is that bothering you?

[10:35:46.0000] <annevk>
smaug____: then people were complaining the whole picture was not clear

[10:36:00.0000] <annevk>
smaug____: that's the opposite argument others made a while back...

[10:36:01.0000] <dglazkov>
smaug____: sure. why is that bothering you?

[10:36:02.0000] <annevk>
smaug____: then people were complaining the whole picture was not clear

[10:36:03.0000] <annevk>
circles!

[10:36:04.0000] <smaug____>
annevk: the whole picture is still not at all clear

[10:36:04.0000] <annevk>
circles!

[10:36:05.0000] <smaug____>
I don't understand how templates are related to shadow dom

[10:36:09.0000] <smaug____>
annevk: the whole picture is still not at all clear

[10:36:32.0000] <smaug____>
I don't understand how templates are related to shadow dom

[10:37:00.0000] <dglazkov>
smaug____: they aren't related directly. If you'd read the explainer, you'd know that both templates and shadow DOM are used by custom elements

[10:37:01.0000] <dglazkov>
smaug____: they are building blocks

[10:37:03.0000] <dglazkov>
smaug____: they aren't related directly. If you'd read the explainer, you'd know that both templates and shadow DOM are used by custom elements

[10:37:08.0000] <dglazkov>
smaug____: they are building blocks

[10:38:00.0000] <dglazkov>
smaug____: spec-wise, it will start coming together nicely when the custom elements spec is in place

[10:38:01.0000] <dglazkov>
smaug____: I am ramping up to do that

[10:38:11.0000] <dglazkov>
smaug____: spec-wise, it will start coming together nicely when the custom elements spec is in place

[10:38:23.0000] <dglazkov>
smaug____: I am ramping up to do that

[10:38:39.0000] <smaug____>
ok

[10:38:57.0000] <dglazkov>
smaug____: but first, I wrote a polyfill to try and play with what's already there: https://github.com/dglazkov/Web-Components-Polyfill

[10:39:00.0000] <smaug____>
ok

[10:39:01.0000] <dglazkov>
smaug____: but first, I wrote a polyfill to try and play with what's already there: https://github.com/dglazkov/Web-Components-Polyfill

[10:39:02.0000] <aklein>
annevk: just got in, catching up on the scrollback now...

[10:39:03.0000] <dglazkov>
smaug____: it's essentially using the shadow DOM impl in WebKit and some minor js hackery to emulate templates

[10:39:12.0000] <aklein>
annevk: just got in, catching up on the scrollback now...

[10:39:30.0000] <dglazkov>
smaug____: it's essentially using the shadow DOM impl in WebKit and some minor js hackery to emulate templates

[10:39:41.0000] <annevk>
aklein: kk, there's no rush, I'll look at this again tomorrow if there's any need to follow up

[10:40:00.0000] <annevk>
aklein: kk, there's no rush, I'll look at this again tomorrow if there's any need to follow up

[10:40:00.0000] <dglazkov>
smaug____: still working on that, but once it's solid, I'll try to write the whole thing as a spec draft

[10:40:02.0000] <rniwa>
AryehGregor: yt?

[10:40:03.0000] <AryehGregor>
rniwa, yes.

[10:40:28.0000] <rniwa>
AryehGregor: yt?

[10:40:34.0000] <AryehGregor>
rniwa, yes.

[10:40:37.0000] <TabAtkins>
smaug____: Dimitri's example shows off how annoying building the HTML for components is in pure JS. ^_^

[10:40:39.0000] <rniwa>
AryehGregor: https://bugs.webkit.org/show_bug.cgi?id=81661

[10:40:48.0000] <rniwa>
AryehGregor: for this bug, what's the correct behavior per spec?

[10:40:55.0000] <rniwa>
AryehGregor: or rather, where is this behavior spec'ed?

[10:40:58.0000] <dglazkov>
TabAtkins: the tab manager one? yep. That's crazy stuff

[10:41:00.0000] <TabAtkins>
smaug____: Dimitri's example shows off how annoying building the HTML for components is in pure JS. ^_^

[10:41:01.0000] <rniwa>
AryehGregor: https://bugs.webkit.org/show_bug.cgi?id=81661

[10:41:02.0000] <rniwa>
AryehGregor: for this bug, what's the correct behavior per spec?

[10:41:03.0000] <rniwa>
AryehGregor: or rather, where is this behavior spec'ed?

[10:41:04.0000] <dglazkov>
TabAtkins: the tab manager one? yep. That's crazy stuff

[10:41:05.0000] <TabAtkins>
Yup.  Btw, thanks for reformatting it to look like HTML.  I had to do that myself earlier just to see what it was doing.  ^_^

[10:41:06.0000] <dglazkov>
TabAtkins: that's this code by the way: https://github.com/dglazkov/Tabs

[10:41:31.0000] <TabAtkins>
Yup.  Btw, thanks for reformatting it to look like HTML.  I had to do that myself earlier just to see what it was doing.  ^_^

[10:41:35.0000] <dglazkov>
TabAtkins: that's this code by the way: https://github.com/dglazkov/Tabs

[10:42:44.0000] <AryehGregor>
rniwa, AFAIK, keypress isn't specced anywhere in reasonable detail.  I guess here is technically where it's specced: http://dev.w3.org/2006/webapi/DOM-Level-3-Events/html/DOM3-Events.html#event-type-keypress

[10:42:47.0000] <dglazkov>
before scoped styles, it was even more awful: https://github.com/dglazkov/Tabs/blob/c14c3e58a2cf0d0cce5aaa7d11ae48be1b25fbc3/tabs-control.js

[10:43:06.0000] <rniwa>
AryehGregor: yeah but that doesn't tell us anything :(

[10:43:13.0000] <AryehGregor>
Yeah, that's the problem.  :)

[10:43:27.0000] <AryehGregor>
There's no good spec for key or mouse events AFAIK, where "good" means "actually tells you exactly what to do".

[10:43:29.0000] <rniwa>
AryehGregor: alright, I'm gonna start a thread on public-webapps then

[10:43:34.0000] <rniwa>
AryehGregor: yeah

[10:43:36.0000] <rniwa>
AryehGregor: we need that.

[10:43:58.0000] <rniwa>
AryehGregor: UA behaviors don't agree at all in this area

[10:44:00.0000] <AryehGregor>
rniwa, AFAIK, keypress isn't specced anywhere in reasonable detail.  I guess here is technically where it's specced: http://dev.w3.org/2006/webapi/DOM-Level-3-Events/html/DOM3-Events.html#event-type-keypress

[10:44:01.0000] <dglazkov>
before scoped styles, it was even more awful: https://github.com/dglazkov/Tabs/blob/c14c3e58a2cf0d0cce5aaa7d11ae48be1b25fbc3/tabs-control.js

[10:44:02.0000] <rniwa>
AryehGregor: yeah but that doesn't tell us anything :(

[10:44:03.0000] <AryehGregor>
Yeah, that's the problem.  :)

[10:44:04.0000] <AryehGregor>
There's no good spec for key or mouse events AFAIK, where "good" means "actually tells you exactly what to do".

[10:44:05.0000] <rniwa>
AryehGregor: alright, I'm gonna start a thread on public-webapps then

[10:44:06.0000] <rniwa>
AryehGregor: yeah

[10:44:07.0000] <rniwa>
AryehGregor: we need that.

[10:44:08.0000] <rniwa>
AryehGregor: UA behaviors don't agree at all in this area

[11:13:00.0000] <dglazkov>
smaug____: reminder -- review shadow DOM spec! :P

[11:13:19.0000] <dglazkov>
smaug____: reminder -- review shadow DOM spec! :P

[11:14:00.0000] <smaug____>
I should I should!

[11:14:01.0000] <smaug____>
please give me some more hours per day

[11:14:02.0000] <zcorpan>
just neglect sleep

[11:14:09.0000] <smaug____>
please give me some more hours per day

[11:14:25.0000] <zcorpan>
just neglect sleep

[11:14:58.0000] <smaug____>
aklein: ping

[11:15:00.0000] <smaug____>
aklein: ping

[11:17:00.0000] <aklein>
smaug____: pong

[11:17:01.0000] <dglazkov>
aklein: can you give smaug____ more hours per day?

[11:17:13.0000] <aklein>
smaug____: pong

[11:17:23.0000] <dglazkov>
aklein: can you give smaug____ more hours per day?

[11:17:36.0000] <smaug____>
aklein: about delivery order

[11:18:00.0000] <smaug____>
aklein: about delivery order

[11:18:01.0000] <rniwa>
TabAtkins: what do you feel if I proposed to add "auto" value to direction property?

[11:18:02.0000] <smaug____>
aklein: I kind of like what you proposed

[11:18:15.0000] <rniwa>
TabAtkins: what do you feel if I proposed to add "auto" value to direction property?

[11:18:25.0000] <smaug____>
aklein: I kind of like what you proposed

[11:18:50.0000] <smaug____>
but the problem is that it adds a special case for microtask handling

[11:18:58.0000] <smaug____>
kind of

[11:19:00.0000] <smaug____>
but the problem is that it adds a special case for microtask handling

[11:19:01.0000] <smaug____>
kind of

[11:19:02.0000] <smaug____>
handling a callback should be a microtask

[11:19:23.0000] <smaug____>
handling a callback should be a microtask

[11:20:57.0000] <aklein>
smaug____: and you say "should be" because it avoids special-casing?

[11:21:00.0000] <aklein>
smaug____: and you say "should be" because it avoids special-casing?

[11:21:01.0000] <smaug____>
well, I don't like special cases. I prefer consistency

[11:21:30.0000] <smaug____>
well, I don't like special cases. I prefer consistency

[11:23:26.0000] <smaug____>
aklein: is there some case where the original behavior is really bad ?

[11:23:36.0000] <aklein>
I'm trying to recall exactly where the special-casing of mutation callbacks came from

[11:24:00.0000] <smaug____>
aklein: is there some case where the original behavior is really bad ?

[11:24:01.0000] <aklein>
I'm trying to recall exactly where the special-casing of mutation callbacks came from

[11:24:02.0000] <aklein>
the first thing that comes to mind is a sense of "fairness", sort of round-robin scheduling of callbacks

[11:24:03.0000] <smaug____>
aklein: native calling JS is a microtask

[11:24:27.0000] <aklein>
the first thing that comes to mind is a sense of "fairness", sort of round-robin scheduling of callbacks

[11:24:29.0000] <smaug____>
aklein: native calling JS is a microtask

[11:25:00.0000] <smaug____>
so if there are observers A and B, and A's callback is called, end of microtask is when the callback has just been handled

[11:25:01.0000] <smaug____>
the new behavior kind of make end of microtask to be after B's callback

[11:25:06.0000] <smaug____>
so if there are observers A and B, and A's callback is called, end of microtask is when the callback has just been handled

[11:25:29.0000] <smaug____>
the new behavior kind of make end of microtask to be after B's callback

[11:27:00.0000] <aklein>
I think the issue is that you're thinking about the mutation observer invocation as the only thing that might happen at end of microtask

[11:27:01.0000] <TabAtkins>
rniwa: What would it do?

[11:27:02.0000] <aklein>
but really the whole algorithm is just one thing that runs at the end of microtask

[11:27:03.0000] <aklein>
I think the issue is that you're thinking about the mutation observer invocation as the only thing that might happen at end of microtask

[11:27:11.0000] <TabAtkins>
rniwa: What would it do?

[11:27:23.0000] <aklein>
but really the whole algorithm is just one thing that runs at the end of microtask

[11:27:51.0000] <aklein>
and should be thought of handling the case when it is called from within a callback invoked by itself

[11:28:00.0000] <aklein>
and should be thought of handling the case when it is called from within a callback invoked by itself

[11:29:00.0000] <smaug____>
that is one way to think about it. But it isn't consistent how microtask works elsewhere

[11:29:14.0000] <smaug____>
that is one way to think about it. But it isn't consistent how microtask works elsewhere

[11:30:00.0000] <smaug____>
ok, html spec has that inconsistent behavior

[11:30:01.0000] <smaug____>
aklein: I don't care too much about this though

[11:30:11.0000] <smaug____>
ok, html spec has that inconsistent behavior

[11:30:22.0000] <smaug____>
aklein: I don't care too much about this though

[11:30:49.0000] <smaug____>
I care a tiny bit more about case-sensitiveness of filter values ;)

[11:31:00.0000] <smaug____>
I care a tiny bit more about case-sensitiveness of filter values ;)

[11:32:00.0000] <smaug____>
ah, HTML spec is buggy here

[11:32:17.0000] <smaug____>
ah, HTML spec is buggy here

[11:33:00.0000] <smaug____>
or do I need to read DOM4...

[11:33:06.0000] <smaug____>
or do I need to read DOM4...

[11:39:57.0000] <rniwa>
TabAtkins: it would behave like dir="auto"

[11:40:00.0000] <rniwa>
TabAtkins: it would behave like dir="auto"

[11:41:00.0000] <rniwa>
TabAtkins: right now, dir=auto is a weird beast that doesn't have a css equivalent

[11:41:13.0000] <rniwa>
TabAtkins: right now, dir=auto is a weird beast that doesn't have a css equivalent

[11:44:00.0000] <TabAtkins>
rniwa: Ah, kk.

[11:44:30.0000] <TabAtkins>
rniwa: Ah, kk.

[11:44:39.0000] <TabAtkins>
We don't really like 'direction', though.

[11:44:49.0000] <TabAtkins>
I'm not opposed to it, but 'direction' was a mistake.

[11:45:00.0000] <TabAtkins>
We don't really like 'direction', though.

[11:45:01.0000] <TabAtkins>
I'm not opposed to it, but 'direction' was a mistake.

[11:45:01.0000] <TabAtkins>
And it's possible that the CSSWG will object to further extending it.

[11:45:03.0000] <TabAtkins>
But perhaps not.

[11:45:04.0000] <TabAtkins>
I dunno.

[11:45:04.0000] <TabAtkins>
But perhaps not.

[11:45:05.0000] <TabAtkins>
I dunno.

[11:47:00.0000] <zcorpan>
i suspect that browsers that implement dir="" by mapping it to 'direction' today would want to use a css value when implementing dir=auto

[11:47:04.0000] <zcorpan>
i suspect that browsers that implement dir="" by mapping it to 'direction' today would want to use a css value when implementing dir=auto

[11:57:00.0000] <rniwa>
zcorpan: right.

[11:57:01.0000] <rniwa>
zcorpan: right now, we have lots of code that deals with dir=auto :(

[11:57:02.0000] <rniwa>
zcorpan: because the computed value still needs to be left/right

[11:57:08.0000] <rniwa>
zcorpan: right.

[11:57:17.0000] <rniwa>
zcorpan: right now, we have lots of code that deals with dir=auto :(

[11:57:27.0000] <rniwa>
zcorpan: because the computed value still needs to be left/right

[11:57:47.0000] <zcorpan>
ugh

[11:57:59.0000] <rniwa>
and we need to sort of re-implement style resolution mechanism just for dir=auto

[11:58:00.0000] <zcorpan>
ugh

[11:58:01.0000] <rniwa>
and we need to sort of re-implement style resolution mechanism just for dir=auto

[11:58:02.0000] <rniwa>
direction supports inherit, etc...

[11:58:03.0000] <rniwa>
it's really annoying from implementor's point of view

[11:58:10.0000] <rniwa>
direction supports inherit, etc...

[11:58:20.0000] <rniwa>
it's really annoying from implementor's point of view

[11:59:00.0000] <zcorpan>
in that case i think we should add auto as a css value and drop the complexity

[11:59:13.0000] <zcorpan>
in that case i think we should add auto as a css value and drop the complexity

[12:00:00.0000] <zcorpan>
even if the css wg doesn't want to spec it :-P

[12:00:01.0000] <zcorpan>
but that's just imho

[12:00:13.0000] <zcorpan>
but that's just imho

[12:01:00.0000] <TabAtkins>
Sure, that's all a good argument.

[12:01:15.0000] <TabAtkins>
Sure, that's all a good argument.

[12:03:48.0000] <rniwa>
zcorpan, TabAtkins: okay.

[12:03:58.0000] <rniwa>
i guess we can prefix and add -webkit-auto for now

[12:04:00.0000] <rniwa>
zcorpan, TabAtkins: okay.

[12:04:01.0000] <rniwa>
i guess we can prefix and add -webkit-auto for now

[12:04:02.0000] <zcorpan>
nooooooo :-)

[12:04:03.0000] <zcorpan>
call it auto :-)

[12:04:04.0000] <Ms2ger>
Call it -o-auto

[12:04:05.0000] <rniwa>
Ms2ger: LOL

[12:04:10.0000] <zcorpan>
nooooooo :-)

[12:04:15.0000] <zcorpan>
call it auto :-)

[12:04:23.0000] <Ms2ger>
Call it -o-auto

[12:04:29.0000] <rniwa>
Ms2ger: LOL

[12:05:00.0000] <Ms2ger>
Or -proprietary-do-not-ever-use-this-in-production-code-auto

[12:05:01.0000] <gsnedders>
Nah, implement -webkit-webkit-auto. All the cool kids use -webkit- prefixes.

[12:05:25.0000] <Ms2ger>
Or -proprietary-do-not-ever-use-this-in-production-code-auto

[12:05:33.0000] <gsnedders>
Nah, implement -webkit-webkit-auto. All the cool kids use -webkit- prefixes.

[12:05:56.0000] <rniwa>
Ms2ger: I think direciton: auto will be useful.

[12:06:00.0000] <rniwa>
Ms2ger: I think direciton: auto will be useful.

[12:06:01.0000] <rniwa>
Ms2ger: since browsers already support dir=auto pretty well (so not much according to bidi experts but reasonably well)

[12:06:02.0000] <rniwa>
Ms2ger: it's probably fine to just add auto

[12:06:21.0000] <rniwa>
Ms2ger: since browsers already support dir=auto pretty well (so not much according to bidi experts but reasonably well)

[12:06:32.0000] <rniwa>
Ms2ger: it's probably fine to just add auto

[12:06:47.0000] <rniwa>
zcorpan: can someone add that to CSS3 writing mode spec?

[12:07:00.0000] <rniwa>
zcorpan: can someone add that to CSS3 writing mode spec?

[12:07:01.0000] <rniwa>
i'm more than happy to file a bug but..

[12:07:02.0000] <Ms2ger>
Yeah, suggest it on the list, the Cabal^WWG will get to it in 2035

[12:07:03.0000] <rniwa>
i'm more than happy to file a bug but..

[12:07:10.0000] <Ms2ger>
Yeah, suggest it on the list, the Cabal^WWG will get to it in 2035

[12:07:40.0000] <rniwa>
Ms2ger: unfortunately i've been kicked out of www-style due to some mail deamon issue

[12:07:51.0000] <Ms2ger>
I heard

[12:07:54.0000] <rniwa>
and i'm reluctant to go through all the troubles to get back on it :(

[12:08:00.0000] <rniwa>
Ms2ger: unfortunately i've been kicked out of www-style due to some mail deamon issue

[12:08:01.0000] <Ms2ger>
I heard

[12:08:02.0000] <rniwa>
and i'm reluctant to go through all the troubles to get back on it :(

[12:08:03.0000] <Ms2ger>
MikeSmith, can't you fix that?

[12:08:07.0000] <Ms2ger>
MikeSmith, can't you fix that?

[12:10:00.0000] <rniwa>
filed https://www.w3.org/Bugs/Public/show_bug.cgi?id=16456

[12:10:18.0000] <rniwa>
filed https://www.w3.org/Bugs/Public/show_bug.cgi?id=16456

[12:13:00.0000] <zcorpan>
rniwa: thanks. i don't know who the someone is, though :-)

[12:13:21.0000] <zcorpan>
rniwa: thanks. i don't know who the someone is, though :-)

[12:16:52.0000] <rniwa>
zcorpan: seems like it's fantasai

[12:17:00.0000] <rniwa>
zcorpan: seems like it's fantasai

[12:18:00.0000] <TabAtkins>
Yes, fantasai is the one to bug about Writing Modes.

[12:18:11.0000] <TabAtkins>
Yes, fantasai is the one to bug about Writing Modes.

[13:05:00.0000] <smaug____>
aklein: finally I found the bug which caused failures in your or rafaels testTreeMirror.html

[13:05:01.0000] <smaug____>
aklein: now both test.html and testTreeMirror.html pass

[13:05:02.0000] <smaug____>
(except I have the change to make filtering case-sensitive)

[13:05:03.0000] <smaug____>
aklein: finally I found the bug which caused failures in your or rafaels testTreeMirror.html

[13:05:13.0000] <smaug____>
aklein: now both test.html and testTreeMirror.html pass

[13:05:29.0000] <smaug____>
(except I have the change to make filtering case-sensitive)

[13:10:00.0000] <annevk>
does the spec say attribute filtering is case-insensitive, because I would definitely consider that a bug?

[13:10:18.0000] <annevk>
does the spec say attribute filtering is case-insensitive, because I would definitely consider that a bug?

[13:14:38.0000] <smaug____>
annevk: no

[13:14:44.0000] <smaug____>
annevk: that is a bug in webkit

[13:15:00.0000] <smaug____>
annevk: no

[13:15:01.0000] <smaug____>
annevk: that is a bug in webkit

[13:15:02.0000] <smaug____>
well, I say it is a bug, aklein disagrees :)

[13:15:15.0000] <smaug____>
well, I say it is a bug, aklein disagrees :)

[13:18:00.0000] <annevk>
interesting

[13:18:01.0000] <annevk>
well as long as nobody files a bug on the spec, it's a bug in WebKit

[13:18:02.0000] <annevk>
but DOM APIs are generally case-sensitive, with a couple of exceptions

[13:18:09.0000] <annevk>
well as long as nobody files a bug on the spec, it's a bug in WebKit

[13:18:30.0000] <annevk>
but DOM APIs are generally case-sensitive, with a couple of exceptions

[13:18:37.0000] <smaug____>
exactly

[13:18:39.0000] <annevk>
so it seems better to stick to that here

[13:19:00.0000] <smaug____>
exactly

[13:19:01.0000] <annevk>
so it seems better to stick to that here

[13:19:02.0000] <smaug____>
and old DOMAttrModified requires case sensitive filtering (in the listener)

[13:19:02.0000] <smaug____>
and old DOMAttrModified requires case sensitive filtering (in the listener)

[13:20:00.0000] <annevk>
does the case-insensitiveness depend on the node's namespace?

[13:20:01.0000] <annevk>
though even it seems wrong

[13:20:23.0000] <annevk>
does the case-insensitiveness depend on the node's namespace?

[13:20:32.0000] <annevk>
though even it seems wrong

[13:21:00.0000] <smaug____>
annevk: it depends on ownerdocument, I believe

[13:21:01.0000] <annevk>
e.g. if you have <html:p TEST="" test=""/> you would not be able to distinguish between the two attributes

[13:21:02.0000] <smaug____>
in HTML doc, case-insensitive

[13:21:02.0000] <smaug____>
annevk: it depends on ownerdocument, I believe

[13:21:03.0000] <smaug____>
it  doesn't really make sense to me

[13:21:04.0000] <annevk>
is there an open bug in WebKit on that?

[13:21:05.0000] <annevk>
e.g. if you have <html:p TEST="" test=""/> you would not be able to distinguish between the two attributes

[13:21:10.0000] <smaug____>
in HTML doc, case-insensitive

[13:21:16.0000] <smaug____>
it  doesn't really make sense to me

[13:21:28.0000] <annevk>
is there an open bug in WebKit on that?

[13:21:43.0000] <smaug____>
haven't filed

[13:22:00.0000] <smaug____>
haven't filed

[13:22:01.0000] <annevk>
if you do, let me know, I'll add my +1

[13:22:23.0000] <annevk>
if you do, let me know, I'll add my +1

[13:56:00.0000] <aklein>
back from lunch, I see that the case sensitivity issue has been mostly settled :)

[13:56:22.0000] <aklein>
back from lunch, I see that the case sensitivity issue has been mostly settled :)

[13:56:58.0000] <aklein>
annevk: but I wanted to clarify how WebKit's impl works, because I think there's a misunderstanding

[13:57:00.0000] <aklein>
annevk: but I wanted to clarify how WebKit's impl works, because I think there's a misunderstanding

[13:57:01.0000] <aklein>
it's only case-insensitive if the element with the attribute is an HTML element in an HTML document

[13:57:02.0000] <aklein>
if it's an XML document, then the filter is case-sensitive

[13:57:20.0000] <aklein>
it's only case-insensitive if the element with the attribute is an HTML element in an HTML document

[13:57:35.0000] <aklein>
if it's an XML document, then the filter is case-sensitive

[13:58:00.0000] <aklein>
anyway, just wanted to throw that out there, I don't think I care enough to argue much further (and it's easy to "fix" in webkit, the implementation is clearly easier if it's always case-sensitive)

[13:58:23.0000] <aklein>
anyway, just wanted to throw that out there, I don't think I care enough to argue much further (and it's easy to "fix" in webkit, the implementation is clearly easier if it's always case-sensitive)

[14:00:00.0000] <annevk>
I would personally prefer if we do not introduce more of it given that HTML actually generates a case-sensitive DOM

[14:00:32.0000] <annevk>
I would personally prefer if we do not introduce more of it given that HTML actually generates a case-sensitive DOM

[14:00:48.0000] <annevk>
the parser actively lowercases names when creating nodes and attributes

[14:01:00.0000] <annevk>
the parser actively lowercases names when creating nodes and attributes

[14:01:01.0000] <annevk>
that setAttribute() and such behave similarly is a legacy aspect of our predecessors not really knowing what they were doing :pdf

[14:01:34.0000] <annevk>
that setAttribute() and such behave similarly is a legacy aspect of our predecessors not really knowing what they were doing :pdf

[14:01:41.0000] <annevk>
oops, meant :p there

[14:02:00.0000] <annevk>
oops, meant :p there

[14:02:00.0000] <aklein>
ok, that's was smaug____'s argument as well, so I'll defer to y'all.

[14:03:44.0000] <rniwa>
aklein, annevk: I support making it case sensitive

[14:03:52.0000] <rniwa>
it's cheaper to compare that way :)

[14:04:00.0000] <rniwa>
aklein, annevk: I support making it case sensitive

[14:04:01.0000] <rniwa>
it's cheaper to compare that way :)

[14:04:58.0000] <annevk>
making rniwa's day by nanosecond perf improvements; yay

[14:05:00.0000] <annevk>
making rniwa's day by nanosecond perf improvements; yay

[14:05:01.0000] <rniwa>
annevk: yeah, I don't like case insensitive comparison period.

[14:05:02.0000] <rniwa>
it's confusing and has surprising effects

[14:05:21.0000] <rniwa>
annevk: yeah, I don't like case insensitive comparison period.

[14:05:29.0000] <rniwa>
it's confusing and has surprising effects

[14:07:40.0000] <rafaelw_>
annevk: so my concern is that webdevs will do observe(node, { attributeFilter: 'HREF' ])

[14:07:47.0000] <rafaelw_>
and never get any indication why that does nothing.

[14:08:00.0000] <rafaelw_>
annevk: so my concern is that webdevs will do observe(node, { attributeFilter: 'HREF' ])

[14:08:01.0000] <rafaelw_>
and never get any indication why that does nothing.

[14:08:02.0000] <Ms2ger>
We can always warn about that :)

[14:08:03.0000] <rafaelw_>
which is especially confusion because they would have markup that has <A HREF='FOO'>

[14:08:14.0000] <Ms2ger>
We can always warn about that :)

[14:08:25.0000] <rafaelw_>
which is especially confusion because they would have markup that has <A HREF='FOO'>

[14:08:40.0000] <rafaelw_>
or do anchor.setAttribute('FOO', 'bar');

[14:08:53.0000] <rafaelw_>
and anchor.getAttribute('FOO') // returns 'bar'

[14:09:00.0000] <rafaelw_>
or do anchor.setAttribute('FOO', 'bar');

[14:09:00.0000] <annevk>
rafaelw_: I thought you argued earlier those kind of developers would use a library

[14:09:01.0000] <rafaelw_>
and anchor.getAttribute('FOO') // returns 'bar'

[14:09:02.0000] <annevk>
rafaelw_: I thought you argued earlier those kind of developers would use a library

[14:09:03.0000] <annevk>
rafaelw_: we cannot both have this be a low-level and high-level API at the same time

[14:09:04.0000] <rafaelw_>
and node.matchesSelector('[HREF]')

[14:09:05.0000] <rafaelw_>
and that will work.

[14:09:06.0000] <rafaelw_>
meaning, everything else they do seems to work, but this doesn.t

[14:09:12.0000] <annevk>
rafaelw_: we cannot both have this be a low-level and high-level API at the same time

[14:09:19.0000] <rafaelw_>
and node.matchesSelector('[HREF]')

[14:09:22.0000] <rafaelw_>
and that will work.

[14:09:33.0000] <rafaelw_>
meaning, everything else they do seems to work, but this doesn.t

[14:09:55.0000] <rafaelw_>
ms2ger, i don't see how we'll warn.

[14:10:00.0000] <rafaelw_>
ms2ger, i don't see how we'll warn.

[14:10:01.0000] <rafaelw_>
annevk: i don't think the library can do anything.

[14:10:02.0000] <Ms2ger>
In the console when you call observe?

[14:10:02.0000] <rafaelw_>
annevk: i don't think the library can do anything.

[14:10:03.0000] <annevk>
a library can lowercase

[14:10:19.0000] <Ms2ger>
In the console when you call observe?

[14:10:25.0000] <annevk>
a library can lowercase

[14:10:41.0000] <rniwa>
rafaelw_: but attributeFilter isn't a selector list, right?

[14:11:00.0000] <rniwa>
rafaelw_: but attributeFilter isn't a selector list, right?

[14:11:01.0000] <rafaelw_>
ok, then by that logic, why not just either lowercase all attributes in attributeFilter or throw an error if there are upper case?

[14:11:02.0000] <annevk>
I think it's unfortunate we made querySelector case-insensitive

[14:11:02.0000] <rafaelw_>
ok, then by that logic, why not just either lowercase all attributes in attributeFilter or throw an error if there are upper case?

[14:11:03.0000] <rniwa>
annevk: yeah

[14:11:04.0000] <annevk>
I think that was mostly because we had not figured out the new world HTML DOM

[14:11:11.0000] <annevk>
I think it's unfortunate we made querySelector case-insensitive

[14:11:22.0000] <rniwa>
annevk: yeah

[14:11:28.0000] <annevk>
I think that was mostly because we had not figured out the new world HTML DOM

[14:11:45.0000] <annevk>
(which is the same as the "XML DOM" plus some quirks)

[14:12:00.0000] <annevk>
(which is the same as the "XML DOM" plus some quirks)

[14:12:01.0000] <zcorpan>
rafaelw_: what if you want to observe 'viewBox' on <svg> in an html doc?

[14:12:11.0000] <zcorpan>
rafaelw_: what if you want to observe 'viewBox' on <svg> in an html doc?

[14:12:48.0000] <annevk>
zcorpan: if we do it we'd do isHTMLDocument && ele.namespaceURI == HTMLNS

[14:13:00.0000] <annevk>
zcorpan: if we do it we'd do isHTMLDocument && ele.namespaceURI == HTMLNS

[14:13:00.0000] <zcorpan>
annevk: ah yeah

[14:13:01.0000] <zcorpan>
annevk: ah yeah

[14:13:02.0000] <rniwa>
annevk, zcorpan, rafaelw_: we could do case-insensitive comparison for html attributes inside a html document

[14:13:36.0000] <rniwa>
annevk, zcorpan, rafaelw_: we could do case-insensitive comparison for html attributes inside a html document

[14:13:38.0000] <rniwa>
but i'd rather not

[14:13:43.0000] <rniwa>
it complicates the api

[14:14:00.0000] <rniwa>
but i'd rather not

[14:14:01.0000] <rniwa>
it complicates the api

[14:14:02.0000] <rniwa>
given that all attribute names and element names are converted into lower-case equivalent, i don't see why case-insensitive comparison is useful today.

[14:14:16.0000] <rniwa>
given that all attribute names and element names are converted into lower-case equivalent, i don't see why case-insensitive comparison is useful today.

[14:14:51.0000] <zcorpan>
case-sensitive sounds good to me, everyone uses lowercase anyway

[14:15:00.0000] <zcorpan>
case-sensitive sounds good to me, everyone uses lowercase anyway

[14:15:01.0000] <annevk>
and there's actually problems with some of the case-insensitive stuff today

[14:15:02.0000] <annevk>
while the HTML parser only does ASCII

[14:15:23.0000] <annevk>
and there's actually problems with some of the case-insensitive stuff today

[14:15:30.0000] <annevk>
while the HTML parser only does ASCII

[14:15:41.0000] <annevk>
setAttribute also lowercases characters outside ASCII

[14:15:56.0000] <annevk>
similarly Selectors are not doing ASCII case-insensitive

[14:16:00.0000] <annevk>
setAttribute also lowercases characters outside ASCII

[14:16:01.0000] <annevk>
similarly Selectors are not doing ASCII case-insensitive

[14:16:02.0000] <zcorpan>
maybe if somebody uses data-fooBar=baz and then observes 'data-fooBar', that won't work and might be confusing

[14:16:03.0000] <annevk>
I think we can still fix that however

[14:16:04.0000] <rafaelw_>
annevk: so i'd likely handle this exactly as you suggest in the library: lower-case the attributes.

[14:16:07.0000] <zcorpan>
maybe if somebody uses data-fooBar=baz and then observes 'data-fooBar', that won't work and might be confusing

[14:16:10.0000] <annevk>
I think we can still fix that however

[14:16:29.0000] <rafaelw_>
annevk: so i'd likely handle this exactly as you suggest in the library: lower-case the attributes.

[14:16:40.0000] <rafaelw_>
this will have the effect of simply not supporting SVG documents or elements.

[14:16:49.0000] <zcorpan>
annevk: that seems like bugs in setAttribute and selectors

[14:17:00.0000] <rafaelw_>
this will have the effect of simply not supporting SVG documents or elements.

[14:17:01.0000] <zcorpan>
annevk: that seems like bugs in setAttribute and selectors

[14:17:53.0000] <rafaelw_>
ms2ger: warning at observe() doesn't work.

[14:18:00.0000] <rafaelw_>
ms2ger: warning at observe() doesn't work.

[14:18:01.0000] <rafaelw_>
at that point, you don't know what elements will ultimatley have mutations.

[14:18:02.0000] <annevk>
zcorpan: yeah I haven't had time to research that and file the appropriate bugs yet

[14:18:03.0000] <annevk>
maybe tomorrow

[14:18:04.0000] <rafaelw_>
a document can be mixed with XML and html elements.

[14:18:05.0000] <annevk>
because it really stinks

[14:18:05.0000] <rafaelw_>
at that point, you don't know what elements will ultimatley have mutations.

[14:18:14.0000] <annevk>
zcorpan: yeah I haven't had time to research that and file the appropriate bugs yet

[14:18:17.0000] <annevk>
maybe tomorrow

[14:18:21.0000] <rafaelw_>
a document can be mixed with XML and html elements.

[14:18:22.0000] <annevk>
because it really stinks

[14:18:43.0000] <zcorpan>
rafaelw_: we can easily support svg by checking the namespace of the element

[14:19:00.0000] <zcorpan>
rafaelw_: we can easily support svg by checking the namespace of the element

[14:19:01.0000] <rafaelw_>
support *in what*?

[14:19:02.0000] <annevk>
if this turns out to be a common source of problems, I think we can still make it insensitive then

[14:19:03.0000] <annevk>
and otherwise libraries can just lowercase, because all attributes will be lowercase anyway

[14:19:12.0000] <rafaelw_>
support *in what*?

[14:19:16.0000] <annevk>
if this turns out to be a common source of problems, I think we can still make it insensitive then

[14:19:37.0000] <annevk>
and otherwise libraries can just lowercase, because all attributes will be lowercase anyway

[14:19:44.0000] <zcorpan>
rafaelw_: observe(node, { attributeFilter: 'HREF' ])

[14:20:00.0000] <zcorpan>
rafaelw_: observe(node, { attributeFilter: 'HREF' ])

[14:20:01.0000] <zcorpan>
rafaelw_: if we decide to go for case-insensitive there

[14:20:06.0000] <zcorpan>
rafaelw_: if we decide to go for case-insensitive there

[14:20:52.0000] <rafaelw_>
annevk: expect XML elements, right?

[14:20:58.0000] <rafaelw_>
s/expect/except/

[14:21:00.0000] <rafaelw_>
annevk: expect XML elements, right?

[14:21:01.0000] <rafaelw_>
s/expect/except/

[14:21:02.0000] <rafaelw_>
zcorpan: I don't understand what you are proposing.

[14:21:15.0000] <rafaelw_>
zcorpan: I don't understand what you are proposing.

[14:21:58.0000] <zcorpan>
hold on lemme read the spec

[14:22:00.0000] <zcorpan>
hold on lemme read the spec

[14:22:49.0000] <rniwa>
odd. i thought qualified attribute names preserve the case but apparently not :(

[14:22:54.0000] <rniwa>
at least on webkit & firefox

[14:22:54.0000] <Hixie>
if someone calls addHitRegion() with arguments that make no sense, what exception should we throw?

[14:22:57.0000] <Hixie>
a new one?

[14:22:58.0000] <annevk>
rafaelw_: yeah, I guess it would not work for SVG or some such, so you probably need to use a map

[14:23:00.0000] <rniwa>
odd. i thought qualified attribute names preserve the case but apparently not :(

[14:23:01.0000] <rniwa>
at least on webkit & firefox

[14:23:02.0000] <Hixie>
if someone calls addHitRegion() with arguments that make no sense, what exception should we throw?

[14:23:03.0000] <Hixie>
a new one?

[14:23:03.0000] <Hixie>
i don't see one for "your arguments are illogical"

[14:23:04.0000] <annevk>
rafaelw_: yeah, I guess it would not work for SVG or some such, so you probably need to use a map

[14:23:05.0000] <Hixie>
i don't see one for "your arguments are illogical"

[14:23:06.0000] <rniwa>
all attributes on html elements are turned into lower-case equivalents

[14:23:07.0000] <Hixie>
/me considers creating a new SpockUnhappyException

[14:23:08.0000] <rafaelw_>
"use a map"?

[14:23:09.0000] <annevk>
viewbox->viewBox

[14:23:17.0000] <Hixie>
/me considers creating a new SpockUnhappyException

[14:23:21.0000] <rafaelw_>
"use a map"?

[14:23:36.0000] <annevk>
viewbox->viewBox

[14:23:41.0000] <Hixie>
or rather, SpockUnimpressedError

[14:23:49.0000] <annevk>
:)

[14:24:00.0000] <Hixie>
or rather, SpockUnimpressedError

[14:24:01.0000] <annevk>
:)

[14:24:02.0000] <Hixie>
annevk: any suggestions?

[14:24:03.0000] <Hixie>
NotSupportedError?

[14:24:03.0000] <Hixie>
annevk: any suggestions?

[14:24:04.0000] <annevk>
I think minting a cool new one is fine

[14:24:05.0000] <annevk>
but yeah, NotSupportedError works

[14:24:06.0000] <Ms2ger>
Could use SyntaxError

[14:24:09.0000] <Hixie>
NotSupportedError?

[14:24:19.0000] <annevk>
I think minting a cool new one is fine

[14:24:30.0000] <annevk>
but yeah, NotSupportedError works

[14:24:31.0000] <Ms2ger>
Could use SyntaxError

[14:24:52.0000] <Hixie>
SyntaxError seems wrong since there's no syntax here really

[14:24:56.0000] <Hixie>
it's the semantics that are wrong

[14:25:00.0000] <Hixie>
SyntaxError seems wrong since there's no syntax here really

[14:25:01.0000] <Hixie>
it's the semantics that are wrong

[14:25:55.0000] <Hixie>
i'll use NotSupportedError unless you mint me a better one

[14:26:00.0000] <Hixie>
i'll use NotSupportedError unless you mint me a better one

[14:28:00.0000] <zcorpan>
rafaelw_: in http://dvcs.w3.org/hg/domcore/raw-file/tip/Overview.html#dom-mutationobserver-observe if target is in the html namespace and target's node document is an html document, ascii-lowercase the attributeFilter names

[14:28:34.0000] <zcorpan>
rafaelw_: in http://dvcs.w3.org/hg/domcore/raw-file/tip/Overview.html#dom-mutationobserver-observe if target is in the html namespace and target's node document is an html document, ascii-lowercase the attributeFilter names

[14:29:59.0000] <Hixie>
heycam: why does the algorithm for converting a JS value to an IDL dictionary not take into account default values?

[14:30:38.0000] <rafaelw_>
zcorpan: and what do you do if the observation is configured with subtree: true?

[14:31:00.0000] <rafaelw_>
zcorpan: and what do you do if the observation is configured with subtree: true?

[14:31:55.0000] <rafaelw_>
i.e. you directly observe the root of an HTML document that contains some SVG elements?

[14:32:00.0000] <rafaelw_>
i.e. you directly observe the root of an HTML document that contains some SVG elements?

[14:32:01.0000] <rafaelw_>
(and use subtree observation)

[14:32:02.0000] <zcorpan>
rafaelw_: ah, that wouldn't work, would it. it'd need to lowercase in http://dvcs.w3.org/hg/domcore/raw-file/tip/Overview.html#concept-mo-queue-attributes instead

[14:32:10.0000] <rafaelw_>
(and use subtree observation)

[14:32:13.0000] <zcorpan>
rafaelw_: ah, that wouldn't work, would it. it'd need to lowercase in http://dvcs.w3.org/hg/domcore/raw-file/tip/Overview.html#concept-mo-queue-attributes instead

[14:32:54.0000] <zcorpan>
rafaelw_: but then i think it is better to always be case-sensitive

[14:32:55.0000] <rafaelw_>
correct. that's more or less the behavior currrently in webkit.

[14:33:00.0000] <zcorpan>
rafaelw_: but then i think it is better to always be case-sensitive

[14:33:01.0000] <rafaelw_>
correct. that's more or less the behavior currrently in webkit.

[14:40:00.0000] <rafaelw_>
i don't really understand this idea that HTML is generally case-sensitive. what developer-visible behavior would suggest that?

[14:40:05.0000] <rafaelw_>
i don't really understand this idea that HTML is generally case-sensitive. what developer-visible behavior would suggest that?

[14:42:00.0000] <Hixie>
XML, the DOM, and CSS are generally case-sensitive, HTML isn't

[14:42:01.0000] <Hixie>
URLs, too

[14:42:02.0000] <Hixie>
(are case-sensitive)

[14:42:04.0000] <Hixie>
XML, the DOM, and CSS are generally case-sensitive, HTML isn't

[14:42:14.0000] <Hixie>
URLs, too

[14:42:21.0000] <Hixie>
(are case-sensitive)

[14:42:53.0000] <Hixie>
(HTML is a mess though)

[14:43:00.0000] <Hixie>
(HTML is a mess though)

[14:43:01.0000] <rafaelw_>
Hixie, right. Not sure if you're following the Mutation Observers discussion. The question is whether attributeFilter should match case-insensitively against HTML elements in HTML documents.

[14:43:02.0000] <Hixie>
oh, the element names are case-sensitive, sure

[14:43:03.0000] <Hixie>
they're always lowercase, specifically

[14:43:04.0000] <Hixie>
but that's not HTML

[14:43:05.0000] <Hixie>
that's the DOM

[14:43:06.0000] <rafaelw_>
Hixie, right. Not sure if you're following the Mutation Observers discussion. The question is whether attributeFilter should match case-insensitively against HTML elements in HTML documents.

[14:43:22.0000] <Hixie>
oh, the element names are case-sensitive, sure

[14:43:28.0000] <Hixie>
they're always lowercase, specifically

[14:43:30.0000] <Hixie>
but that's not HTML

[14:43:32.0000] <Hixie>
that's the DOM

[14:43:39.0000] <rafaelw_>
the issue is attribute names

[14:43:46.0000] <Hixie>
same with attribute names

[14:43:55.0000] <Hixie>
HTML attribute names are always lowercase, SVG's are mixed

[14:44:00.0000] <rafaelw_>
the issue is attribute names

[14:44:01.0000] <Hixie>
same with attribute names

[14:44:02.0000] <Hixie>
HTML attribute names are always lowercase, SVG's are mixed

[14:44:02.0000] <Hixie>
they're all case-sensitive though in the DOM

[14:44:03.0000] <Hixie>
they're all case-sensitive though in the DOM

[14:44:41.0000] <Hixie>
i don't see why you'd be case-insensitive there, that's not HTML

[14:45:00.0000] <Hixie>
i don't see why you'd be case-insensitive there, that's not HTML

[14:49:00.0000] <zcorpan>
Hixie: getAttribute, setAttribute, removeAttribute, hasAttribute all case-fold to lowercase for html elements in html docs

[14:49:01.0000] <rafaelw_>
I understand that's how the DOM is spec'd. It seems to me that the behavior of HTML appears to case-insensitive.

[14:49:03.0000] <zcorpan>
Hixie: getAttribute, setAttribute, removeAttribute, hasAttribute all case-fold to lowercase for html elements in html docs

[14:49:26.0000] <rafaelw_>
I understand that's how the DOM is spec'd. It seems to me that the behavior of HTML appears to case-insensitive.

[14:49:37.0000] <Hixie>
zcorpan: yeah but they're wacked

[14:49:51.0000] <zcorpan>
Hixie: that's a different argument :-)

[14:49:55.0000] <rafaelw_>
hixie: what's not wacked?

[14:49:57.0000] <Hixie>
rafaelw_: there are apis that are historically case-insensitive, i'll grant you

[14:50:00.0000] <Hixie>
zcorpan: yeah but they're wacked

[14:50:01.0000] <zcorpan>
Hixie: that's a different argument :-)

[14:50:02.0000] <rafaelw_>
hixie: what's not wacked?

[14:50:03.0000] <Hixie>
rafaelw_: there are apis that are historically case-insensitive, i'll grant you

[14:50:04.0000] <rafaelw_>
i.e. if i'm a web-developer, what API would suggest to me that HTML APIS are case-sensitive

[14:50:05.0000] <Hixie>
the main reason i wouldn't go there as a spec author is that it is a huge pain to maintain apis that are sometimes case-sensitive

[14:50:06.0000] <Hixie>
people like zcorpan find bugs in those apis for months

[14:50:18.0000] <rafaelw_>
i.e. if i'm a web-developer, what API would suggest to me that HTML APIS are case-sensitive

[14:50:28.0000] <Hixie>
the main reason i wouldn't go there as a spec author is that it is a huge pain to maintain apis that are sometimes case-sensitive

[14:50:36.0000] <Hixie>
people like zcorpan find bugs in those apis for months

[14:50:54.0000] <zcorpan>
why does http://dvcs.w3.org/hg/domcore/raw-file/tip/Overview.html#dom-element-getelementsbytagname seems confused about localName and qualifiedName

[14:51:00.0000] <zcorpan>
why does http://dvcs.w3.org/hg/domcore/raw-file/tip/Overview.html#dom-element-getelementsbytagname seems confused about localName and qualifiedName

[14:51:01.0000] <zcorpan>
er

[14:51:02.0000] <Hixie>
case in point ^

[14:51:03.0000] <zcorpan>
s/why does//

[14:51:03.0000] <zcorpan>
er

[14:51:05.0000] <Hixie>
case in point ^

[14:51:05.0000] <zcorpan>
s/why does//

[14:56:44.0000] <rafaelw_>
Hixie: getElementsByTagName is your example to my question above?

[14:57:00.0000] <rafaelw_>
Hixie: getElementsByTagName is your example to my question above?

[14:57:41.0000] <Hixie>
no, it's my example of zcorpan finding bugs for months in apis that try to be clever

[14:58:00.0000] <Hixie>
no, it's my example of zcorpan finding bugs for months in apis that try to be clever

[15:00:51.0000] <rafaelw_>
sorry if i'm being difficult. i'm trying to understand the objection to being case-insensitive in the common case (HTML elements in HTML document).

[15:01:00.0000] <rafaelw_>
sorry if i'm being difficult. i'm trying to understand the objection to being case-insensitive in the common case (HTML elements in HTML document).

[15:01:01.0000] <rafaelw_>
I'm not clear if the argument is that it's bad behavior, if it's prone to produce bugs?

[15:01:16.0000] <rafaelw_>
I'm not clear if the argument is that it's bad behavior, if it's prone to produce bugs?

[15:01:42.0000] <Hixie>
i don't really object, as spec writer you do what you think is best :-)

[15:01:58.0000] <Hixie>
i'm just saying that from one spec writer to another, your life will be easier if you make it case-sensitive

[15:02:00.0000] <Hixie>
i don't really object, as spec writer you do what you think is best :-)

[15:02:01.0000] <Hixie>
i'm just saying that from one spec writer to another, your life will be easier if you make it case-sensitive

[15:02:02.0000] <rafaelw_>
Ok. I get that. I'm fine having my life be more difficult if it results in a better API. that seems like my job.

[15:02:03.0000] <Hixie>
the underlying infrastructure is case-sensitive, so any case-insensitive logic has to be layered on top of that

[15:02:22.0000] <rafaelw_>
Ok. I get that. I'm fine having my life be more difficult if it results in a better API. that seems like my job.

[15:02:24.0000] <Hixie>
the underlying infrastructure is case-sensitive, so any case-insensitive logic has to be layered on top of that

[15:03:00.0000] <rafaelw_>
it's already implemented in webkit. it's possible there are bugs, but the implementation seems simple enough (and doesn't have a perf cost in the common case).

[15:03:04.0000] <rafaelw_>
it's already implemented in webkit. it's possible there are bugs, but the implementation seems simple enough (and doesn't have a perf cost in the common case).

[15:03:42.0000] <zcorpan>
this should be pretty simple to get right i think

[15:03:50.0000] <smaug____>
I don't see any reason for case-insensitive filters

[15:04:00.0000] <zcorpan>
this should be pretty simple to get right i think

[15:04:01.0000] <smaug____>
I don't see any reason for case-insensitive filters

[15:04:02.0000] <smaug____>
this is new API

[15:04:03.0000] <smaug____>
and even with the old mutation events one needs to use case-sensitive comparisons

[15:04:03.0000] <smaug____>
this is new API

[15:04:35.0000] <smaug____>
and even with the old mutation events one needs to use case-sensitive comparisons

[15:04:53.0000] <rafaelw_>
the reason is that it'll be surprising that it's *not* case sensitive. it will silently fail.

[15:04:57.0000] <smaug____>
(when filtering attributes in DOMAttrModified listener)

[15:05:00.0000] <rafaelw_>
the reason is that it'll be surprising that it's *not* case sensitive. it will silently fail.

[15:05:01.0000] <smaug____>
(when filtering attributes in DOMAttrModified listener)

[15:05:02.0000] <smaug____>
why would anyone use uppercase attr names as filters when dealing with HTML doc?

[15:05:35.0000] <smaug____>
why would anyone use uppercase attr names as filters when dealing with HTML doc?

[15:05:51.0000] <smaug____>
it the API clearly says that it is not case sensitive

[15:06:00.0000] <smaug____>
it the API clearly says that it is not case sensitive

[15:06:01.0000] <zcorpan>
smaug____: they might use an attribute data-fooBar="" in the markup and observe for "data-fooBar"

[15:06:02.0000] <smaug____>
DOMAttrModified isn't case-insensitive

[15:06:09.0000] <zcorpan>
smaug____: they might use an attribute data-fooBar="" in the markup and observe for "data-fooBar"

[15:06:14.0000] <smaug____>
DOMAttrModified isn't case-insensitive

[15:06:47.0000] <smaug____>
zcorpan: that is just a bug

[15:07:00.0000] <smaug____>
zcorpan: that is just a bug

[15:07:01.0000] <Hixie>
is anyone arguing that the api should be case-insensitive for svg?

[15:07:02.0000] <Hixie>
or mathml?

[15:07:03.0000] <rafaelw_>
nope.

[15:07:04.0000] <Hixie>
if not, why not? it seems like most arguments for html would apply to those too

[15:07:18.0000] <Hixie>
is anyone arguing that the api should be case-insensitive for svg?

[15:07:20.0000] <Hixie>
or mathml?

[15:07:27.0000] <rafaelw_>
nope.

[15:07:33.0000] <Hixie>
if not, why not? it seems like most arguments for html would apply to those too

[15:07:50.0000] <Hixie>
(other than consistency with the wacked api entry points)

[15:07:51.0000] <zcorpan>
smaug____: still, it's probably a surprise to an author who does it and doesn't know the details of html/dom case sensitivity

[15:07:56.0000] <Hixie>
(but they're already inconsistent with others)

[15:08:00.0000] <Hixie>
(other than consistency with the wacked api entry points)

[15:08:01.0000] <zcorpan>
smaug____: still, it's probably a surprise to an author who does it and doesn't know the details of html/dom case sensitivity

[15:08:01.0000] <rafaelw_>
can we just stop for a second.

[15:08:02.0000] <Hixie>
(but they're already inconsistent with others)

[15:08:03.0000] <rafaelw_>
can we just stop for a second.

[15:08:04.0000] <rafaelw_>
every keeps saying "wacked" API.

[15:08:05.0000] <rniwa>
rafaelw_, smaug____, zcorpan: my expectation is that anyone who's good enough to use new mutation observer api would know that all html attributes are converted into lowercase names

[15:08:06.0000] <rafaelw_>
can someone give me an example of NON-wacked api?

[15:08:07.0000] <Hixie>
on the web? is that a trick question? :-)

[15:08:08.0000] <rniwa>
and if they don't, then they're good enough to write tests to figure it out themselves

[15:08:08.0000] <rafaelw_>
every keeps saying "wacked" API.

[15:08:15.0000] <rniwa>
rafaelw_, smaug____, zcorpan: my expectation is that anyone who's good enough to use new mutation observer api would know that all html attributes are converted into lowercase names

[15:08:16.0000] <rafaelw_>
can someone give me an example of NON-wacked api?

[15:08:26.0000] <Hixie>
on the web? is that a trick question? :-)

[15:08:28.0000] <rniwa>
and if they don't, then they're good enough to write tests to figure it out themselves

[15:08:37.0000] <smaug____>
rniwa: indeed

[15:08:48.0000] <rafaelw_>
i'm trying to make the point that webdevs expectation is that HTML DOM apis are case-insensitive.

[15:09:00.0000] <smaug____>
rniwa: indeed

[15:09:00.0000] <smaug____>
rafaelw_: they are not

[15:09:01.0000] <rafaelw_>
i'm trying to make the point that webdevs expectation is that HTML DOM apis are case-insensitive.

[15:09:02.0000] <smaug____>
rafaelw_: they are not

[15:09:03.0000] <rafaelw_>
querySelector behaves to be

[15:09:04.0000] <rafaelw_>
setAttribute

[15:09:05.0000] <smaug____>
some APIs convert parameter to lowercase or uppercase

[15:09:06.0000] <rafaelw_>
hasAttribute

[15:09:07.0000] <rniwa>
i guess i've lived in pure XML world too long

[15:09:08.0000] <Hixie>
Element.namespaceURI, .prefix, .localName all return the internal case

[15:09:17.0000] <rafaelw_>
querySelector behaves to be

[15:09:19.0000] <rafaelw_>
setAttribute

[15:09:21.0000] <smaug____>
some APIs convert parameter to lowercase or uppercase

[15:09:23.0000] <rafaelw_>
hasAttribute

[15:09:27.0000] <rniwa>
i guess i've lived in pure XML world too long

[15:09:34.0000] <Hixie>
Element.namespaceURI, .prefix, .localName all return the internal case

[15:09:40.0000] <smaug____>
MutationObserver is a new API

[15:09:48.0000] <Hixie>
.className and getElementsByClassName() are case-sensitive

[15:09:49.0000] <zcorpan>
Hixie: nobody uses those

[15:09:59.0000] <Hixie>
speak for yourself

[15:10:00.0000] <smaug____>
MutationObserver is a new API

[15:10:01.0000] <Hixie>
.className and getElementsByClassName() are case-sensitive

[15:10:02.0000] <zcorpan>
Hixie: nobody uses those

[15:10:03.0000] <Hixie>
speak for yourself

[15:10:04.0000] <rniwa>
smaug____, Hixie, zcorpan: i think it makes sense for it be case insensitive if we're going to support simple selectors in the future

[15:10:05.0000] <rafaelw_>
yes. but for all of those, the DOM has forced as case for the storage of the names

[15:10:06.0000] <Hixie>
setAttributeNS() seems to be case-sensitive too

[15:10:07.0000] <zcorpan>
no, i speak for web developers at large, not for myself or for you :-)

[15:10:08.0000] <rafaelw_>
so the effect appears to be that they are case-insensitive.

[15:10:09.0000] <Hixie>
rafaelw_: ?

[15:10:21.0000] <rniwa>
smaug____, Hixie, zcorpan: i think it makes sense for it be case insensitive if we're going to support simple selectors in the future

[15:10:21.0000] <rafaelw_>
yes. but for all of those, the DOM has forced as case for the storage of the names

[15:10:29.0000] <Hixie>
setAttributeNS() seems to be case-sensitive too

[15:10:33.0000] <zcorpan>
no, i speak for web developers at large, not for myself or for you :-)

[15:10:34.0000] <rafaelw_>
so the effect appears to be that they are case-insensitive.

[15:10:36.0000] <Hixie>
rafaelw_: ?

[15:11:00.0000] <rafaelw_>
div = document.createElement('div');

[15:11:01.0000] <zcorpan>
className and getElementsByClassName are case-sensitive in selectors as well, so authors are used to that

[15:11:02.0000] <Hixie>
rafaelw_: createElementNS() doesn't lowercase anything

[15:11:03.0000] <rafaelw_>
div.tagName; // 'DIV"

[15:11:23.0000] <rafaelw_>
div = document.createElement('div');

[15:11:23.0000] <zcorpan>
className and getElementsByClassName are case-sensitive in selectors as well, so authors are used to that

[15:11:25.0000] <Hixie>
rafaelw_: createElementNS() doesn't lowercase anything

[15:11:27.0000] <rafaelw_>
div.tagName; // 'DIV"

[15:11:38.0000] <rafaelw_>
no one uses createElementNS

[15:11:43.0000] <Hixie>
rafaelw_: div.localName; // 'div'

[15:11:46.0000] <rniwa>
Hixie: btw, i've just realized that all attributes on an html element (even ones with namespace) will be have lowercase names.

[15:11:52.0000] <Hixie>
rafaelw_: no one uses mutation observers either

[15:11:54.0000] <rniwa>
Hixie: and i think that's rather unintuitive...

[15:12:00.0000] <rafaelw_>
no one uses createElementNS

[15:12:01.0000] <Hixie>
rafaelw_: div.localName; // 'div'

[15:12:02.0000] <rniwa>
Hixie: btw, i've just realized that all attributes on an html element (even ones with namespace) will be have lowercase names.

[15:12:03.0000] <Hixie>
rafaelw_: no one uses mutation observers either

[15:12:04.0000] <rniwa>
Hixie: and i think that's rather unintuitive...

[15:12:05.0000] <Hixie>
rniwa: text/html HTML elements don't have namespaces

[15:12:06.0000] <rafaelw_>
I never knew there was a 'localName'

[15:12:10.0000] <Hixie>
rniwa: text/html HTML elements don't have namespaces

[15:12:13.0000] <rafaelw_>
I never knew there was a 'localName'

[15:12:43.0000] <Hixie>
rafaelw_: you asked for apis that aren't wacked. i'm letting you know that dom core has plenty of apis that are case-sensitive. whether you know about them or not doesn't change the api...

[15:12:43.0000] <smaug____>
/me uses localName all the time

[15:12:50.0000] <zcorpan>
Hixie: we could make localName preserve case precisely because nobody used it

[15:13:00.0000] <Hixie>
rafaelw_: you asked for apis that aren't wacked. i'm letting you know that dom core has plenty of apis that are case-sensitive. whether you know about them or not doesn't change the api...

[15:13:01.0000] <smaug____>
/me uses localName all the time

[15:13:02.0000] <zcorpan>
Hixie: we could make localName preserve case precisely because nobody used it

[15:13:02.0000] <zcorpan>
Hixie: if people had used it, we would be forced to make it return uppercase

[15:13:03.0000] <zcorpan>
Hixie: if people had used it, we would be forced to make it return uppercase

[15:13:04.0000] <Hixie>
zcorpan: and we did it because it's a better thing to do, right?

[15:13:05.0000] <zcorpan>
Hixie: yeah

[15:13:06.0000] <Hixie>
zcorpan: i rest my case :-)

[15:13:07.0000] <zcorpan>
since otherwise it's not possible to get the real case of an element

[15:13:07.0000] <Hixie>
zcorpan: and we did it because it's a better thing to do, right?

[15:13:12.0000] <zcorpan>
Hixie: yeah

[15:13:18.0000] <Hixie>
zcorpan: i rest my case :-)

[15:13:37.0000] <zcorpan>
since otherwise it's not possible to get the real case of an element

[15:14:00.0000] <Hixie>
if we make mutation observers canonicalise case for filters of HTML elements, there'd be no way to catch changes to attributes that aren't lowercase

[15:14:20.0000] <Hixie>
if we make mutation observers canonicalise case for filters of HTML elements, there'd be no way to catch changes to attributes that aren't lowercase

[15:14:57.0000] <zcorpan>
right

[15:15:00.0000] <zcorpan>
right

[15:15:01.0000] <Hixie>
anyway i think this is up to rafaelw_ to decide. there are arguments on both sides.

[15:15:02.0000] <Hixie>
personally i think clever apis tend to cost more than they're worth on the long run

[15:15:15.0000] <Hixie>
anyway i think this is up to rafaelw_ to decide. there are arguments on both sides.

[15:15:30.0000] <Hixie>
personally i think clever apis tend to cost more than they're worth on the long run

[15:15:44.0000] <Hixie>
but despite that i'm always making "clever" apis

[15:15:48.0000] <smaug____>
(why is it up to rafaelw_ to decide ? )

[15:15:57.0000] <Hixie>
smaug____: isn't he writing the spec?

[15:16:00.0000] <Hixie>
but despite that i'm always making "clever" apis

[15:16:01.0000] <smaug____>
(why is it up to rafaelw_ to decide ? )

[15:16:02.0000] <Hixie>
smaug____: isn't he writing the spec?

[15:16:03.0000] <Hixie>
so i can certainly understand the attraction here

[15:16:04.0000] <smaug____>
no

[15:16:05.0000] <Hixie>
smaug____: oh. who is?

[15:16:08.0000] <Hixie>
so i can certainly understand the attraction here

[15:16:14.0000] <smaug____>
no

[15:16:21.0000] <Hixie>
smaug____: oh. who is?

[15:16:37.0000] <zcorpan>
it's part of dom4

[15:16:53.0000] <rniwa>
Hixie: i think aklein wrote some draft and then annevk merged it into dom 4

[15:16:55.0000] <Hixie>
well imho it's up to whoever is writing the spec, whoever that is :-)

[15:17:00.0000] <zcorpan>
it's part of dom4

[15:17:01.0000] <rniwa>
Hixie: i think aklein wrote some draft and then annevk merged it into dom 4

[15:17:02.0000] <Hixie>
well imho it's up to whoever is writing the spec, whoever that is :-)

[15:17:03.0000] <rniwa>
Hixie: AryehGregor and annevk's call then :)

[15:17:04.0000] <Hixie>
(and then up to the implementors to decide if that makes sense, of course)

[15:17:05.0000] <rniwa>
also Ms2ger's

[15:17:14.0000] <rniwa>
Hixie: AryehGregor and annevk's call then :)

[15:17:34.0000] <Hixie>
(and then up to the implementors to decide if that makes sense, of course)

[15:17:36.0000] <rniwa>
also Ms2ger's

[15:17:48.0000] <Hixie>
should be one person's call as far as the spec goes

[15:18:00.0000] <Hixie>
should be one person's call as far as the spec goes

[15:18:01.0000] <Hixie>
having co-editors means blame gets split, which reduces accountability

[15:18:03.0000] <Hixie>
having co-editors means blame gets split, which reduces accountability

[15:21:00.0000] <smaug_____>
nice, this laptop suddenly decided to ask PUK

[15:21:12.0000] <smaug_____>
nice, this laptop suddenly decided to ask PUK

[15:21:42.0000] <smaug_____>
Hixie: anne has been updating the spec, and aklein wrote some of it, and I designed large part of it with rafaelw_ and aklein

[15:22:00.0000] <smaug_____>
Hixie: anne has been updating the spec, and aklein wrote some of it, and I designed large part of it with rafaelw_ and aklein

[15:24:00.0000] <rafaelw_>
i don't really care to die on this hill. it just seems like it's convenient for us and makes life harder for webdevs.

[15:24:01.0000] <rafaelw_>
i'm fine letting anne make the call.

[15:24:09.0000] <rafaelw_>
i don't really care to die on this hill. it just seems like it's convenient for us and makes life harder for webdevs.

[15:24:25.0000] <rafaelw_>
i'm fine letting anne make the call.

[15:25:42.0000] <rafaelw_>
FWIW, for libraries (like mutation observers), if the behavior is always case-sensitive, then the sane thing to do is to simply lower-case the attributeFilter if the doc is HTML

[15:26:00.0000] <rafaelw_>
FWIW, for libraries (like mutation observers), if the behavior is always case-sensitive, then the sane thing to do is to simply lower-case the attributeFilter if the doc is HTML

[15:26:00.0000] <rafaelw_>
which will fail to handle the case of SVG or MATHML elements in an HTML document.

[15:27:00.0000] <zcorpan>
rafaelw_: yeah that's a good argument to let browsers do the case folding

[15:27:29.0000] <zcorpan>
rafaelw_: yeah that's a good argument to let browsers do the case folding

[15:28:00.0000] <Hixie>
rafaelw_: honestly i don't understand why any authors would ever pass in uppercase attribute names here

[15:28:01.0000] <Hixie>
rafaelw_: (why would a library wrap this api? is the api not usable directly?)

[15:28:02.0000] <Hixie>
rafaelw_: honestly i don't understand why any authors would ever pass in uppercase attribute names here

[15:28:23.0000] <Hixie>
rafaelw_: (why would a library wrap this api? is the api not usable directly?)

[15:28:45.0000] <smaug_____>
if one really needs to handle attrs case-insentively, it is always possible to filter records in the callback

[15:28:46.0000] <rafaelw_>
my experience of webdevs is that they think that all of HTML is case-insensitive.

[15:28:53.0000] <smaug_____>
insensitively

[15:28:55.0000] <TabAtkins>
That is my experience as a webdev.

[15:29:00.0000] <smaug_____>
if one really needs to handle attrs case-insentively, it is always possible to filter records in the callback

[15:29:01.0000] <rafaelw_>
my experience of webdevs is that they think that all of HTML is case-insensitive.

[15:29:02.0000] <smaug_____>
insensitively

[15:29:03.0000] <TabAtkins>
That is my experience as a webdev.

[15:29:04.0000] <Hixie>
we should transition them away from that viewpoint, since that viewpoint doesn't match reality and will just cause them bugs

[15:29:23.0000] <Hixie>
we should transition them away from that viewpoint, since that viewpoint doesn't match reality and will just cause them bugs

[15:29:50.0000] <rafaelw_>
hixie: http://code.google.com/p/mutation-summary/

[15:30:00.0000] <rafaelw_>
hixie: http://code.google.com/p/mutation-summary/

[15:31:40.0000] <Hixie>
rafaelw_: do you lowercase the inputs in that api?

[15:31:57.0000] <rafaelw_>
smaug: to do that, you'd have to take the input attributeFilter, wrap it, and output an attributeFilter that had every permutation of lower-vs-upper-case.

[15:32:00.0000] <Hixie>
rafaelw_: do you lowercase the inputs in that api?

[15:32:01.0000] <rafaelw_>
smaug: to do that, you'd have to take the input attributeFilter, wrap it, and output an attributeFilter that had every permutation of lower-vs-upper-case.

[15:32:02.0000] <rafaelw_>
not yet. i'm saying, i'll probably make that change if we make this one.

[15:32:11.0000] <rafaelw_>
not yet. i'm saying, i'll probably make that change if we make this one.

[15:32:45.0000] <Hixie>
lame

[15:32:46.0000] <Hixie>
:-P

[15:33:00.0000] <Hixie>
lame

[15:33:01.0000] <Hixie>
:-P

[15:33:02.0000] <rafaelw_>
i think our leverage to "push" webdevs to do anything next to nothing.

[15:33:24.0000] <rafaelw_>
i think our leverage to "push" webdevs to do anything next to nothing.

[15:33:54.0000] <smaug_____>
rafaelw_: why. JS filter could work just like your C++ filter

[15:34:00.0000] <smaug_____>
rafaelw_: why. JS filter could work just like your C++ filter

[15:34:01.0000] <smaug_____>
keep too lists, case-sensitive and lowercase

[15:34:02.0000] <smaug_____>
attributes in HTML are lowercase

[15:34:10.0000] <smaug_____>
keep too lists, case-sensitive and lowercase

[15:34:24.0000] <smaug_____>
attributes in HTML are lowercase

[15:34:39.0000] <smaug_____>
so filtering would be fast

[15:34:50.0000] <rniwa>
+1 to Hixie's idea of transitioning them to the new view point

[15:35:00.0000] <smaug_____>
so filtering would be fast

[15:35:01.0000] <rniwa>
+1 to Hixie's idea of transitioning them to the new view point

[15:36:00.0000] <rafaelw_>
smaug: that's true, actually.

[15:36:01.0000] <rafaelw_>
that would probably work.

[15:36:19.0000] <rafaelw_>
smaug: that's true, actually.

[15:36:31.0000] <rafaelw_>
that would probably work.

[15:37:00.0000] <rniwa>
btw, i think changing the spec later to support insensitive comparison is a fairly safe change to make

[15:37:00.0000] <rniwa>
btw, i think changing the spec later to support insensitive comparison is a fairly safe change to make

[15:37:01.0000] <rniwa>
so if enough people complain when this api becomes more widely known

[15:37:02.0000] <rniwa>
then we should be able to change

[15:37:21.0000] <rniwa>
so if enough people complain when this api becomes more widely known

[15:37:28.0000] <rniwa>
then we should be able to change

[15:39:00.0000] <smaug____>
rafaelw_: btw, do you remember if the spec for innerHTML has been updated to support MutationObserver

[15:39:14.0000] <smaug____>
rafaelw_: btw, do you remember if the spec for innerHTML has been updated to support MutationObserver

[15:39:44.0000] <rniwa>
smaug____: it doesn't support now?

[15:40:00.0000] <rniwa>
smaug____: it doesn't support now?

[15:40:01.0000] <smaug____>
rniwa: the batching part might need some tweaking

[15:40:21.0000] <smaug____>
rniwa: the batching part might need some tweaking

[15:40:42.0000] <smaug____>
I mean that all the removed nodes end up to .removedNodes, and new nodes to .addedNodes

[15:41:00.0000] <smaug____>
I mean that all the removed nodes end up to .removedNodes, and new nodes to .addedNodes

[15:41:01.0000] <aklein>
smaug____: looks like it uses "replace all"

[15:41:02.0000] <aklein>
http://html5.org/specs/dom-parsing.html#innerhtml

[15:41:03.0000] <rniwa>
smaug____: that sounds reasonable to me.

[15:41:14.0000] <aklein>
smaug____: looks like it uses "replace all"

[15:41:15.0000] <aklein>
http://html5.org/specs/dom-parsing.html#innerhtml

[15:41:30.0000] <rniwa>
smaug____: that sounds reasonable to me.

[15:41:39.0000] <aklein>
smaug____: so it should work

[15:41:40.0000] <rniwa>
smaug____: why do we want a  different behavior here?

[15:42:00.0000] <aklein>
smaug____: so it should work

[15:42:01.0000] <rniwa>
smaug____: why do we want a  different behavior here?

[15:42:02.0000] <smaug____>
aklein: ah, good. (replace all was broken in DOM4 still yesterday :) )

[15:42:18.0000] <smaug____>
aklein: ah, good. (replace all was broken in DOM4 still yesterday :) )

[15:42:39.0000] <smaug____>
rniwa: what different behavior

[15:43:00.0000] <smaug____>
rniwa: what different behavior

[15:45:40.0000] <rniwa>
smaug____: so i just got confused by your question.

[15:45:40.0000] <rniwa>
	

[15:45:51.0000] <rniwa>
smaug____: i thought you were proposing to do something special for innerHTML

[15:45:58.0000] <rniwa>
smaug____: as it's not the case, we're on the same page here

[15:46:00.0000] <rniwa>
smaug____: so i just got confused by your question.

[15:46:01.0000] <rniwa>
smaug____: i thought you were proposing to do something special for innerHTML

[15:46:02.0000] <rniwa>
smaug____: as it's not the case, we're on the same page here

[15:46:03.0000] <smaug____>
good :)

[15:46:05.0000] <smaug____>
good :)

[15:49:00.0000] <rafaelw_>
smaug:

[15:49:31.0000] <rafaelw_>
smaug:

[15:50:00.0000] <rniwa>
smaug____, Hixie: odd, i thought there was a way to obtain a fully qualified name of a html element but i can't find any api for that :\

[15:50:01.0000] <rafaelw_>
hixie: annevk: ok. i yield. smaug_'s suggestion is a good one. i'll just support this at the library level.

[15:50:09.0000] <rniwa>
smaug____, Hixie: odd, i thought there was a way to obtain a fully qualified name of a html element but i can't find any api for that :\

[15:50:22.0000] <rafaelw_>
hixie: annevk: ok. i yield. smaug_'s suggestion is a good one. i'll just support this at the library level.

[15:53:00.0000] <Hixie>
rafaelw_: i'm not arguing specifically for either side, i think both sides have good arguments, fwiw

[15:53:29.0000] <Hixie>
rafaelw_: i'm not arguing specifically for either side, i think both sides have good arguments, fwiw

[15:53:42.0000] <Hixie>
rafaelw_: i'm just being devil's advocate

[15:53:59.0000] <Hixie>
rafaelw_: so that we can fully explore the issue :-)

[15:54:00.0000] <Hixie>
rafaelw_: i'm just being devil's advocate

[15:54:01.0000] <Hixie>
rafaelw_: so that we can fully explore the issue :-)

[15:54:02.0000] <Hixie>
rafaelw_: as i said earlier, i think this is the kind of thing we should just leave to the editor (then to be sanity-checked by implementors, of course)

[15:54:23.0000] <Hixie>
rafaelw_: as i said earlier, i think this is the kind of thing we should just leave to the editor (then to be sanity-checked by implementors, of course)

[15:54:49.0000] <rafaelw_>
hixie: that's the discussion we've been having.

[15:55:00.0000] <rafaelw_>
hixie: that's the discussion we've been having.

[15:55:01.0000] <rafaelw_>
annevk is the editor. adamk, myself & smaug are the implementors.

[15:55:02.0000] <Hixie>
right, but i'm not :-)

[15:55:03.0000] <rafaelw_>
ah. i see.

[15:55:04.0000] <rafaelw_>
annevk is the editor. adamk, myself & smaug are the implementors.

[15:55:13.0000] <Hixie>
right, but i'm not :-)

[15:55:18.0000] <rafaelw_>
ah. i see.

[15:55:49.0000] <rafaelw_>
anyhow. i prefer having consistent behavior in this case, to having my preferred behavior.

[15:56:00.0000] <rafaelw_>
anyhow. i prefer having consistent behavior in this case, to having my preferred behavior.

[15:56:01.0000] <Hixie>
there's so many different behaviours here already that anything we do will be consistent with _something_. :-)

[15:56:17.0000] <Hixie>
there's so many different behaviours here already that anything we do will be consistent with _something_. :-)


2012-03-21
[21:16:59.0000] <zewt>
we need a comprehensive list of all the times people have been confused by TR

[21:17:00.0000] <zewt>
we need a comprehensive list of all the times people have been confused by TR

[21:17:01.0000] <Hixie>
be easier to make a list of times they weren't

[21:17:02.0000] <Hixie>
:-P

[21:17:34.0000] <Hixie>
be easier to make a list of times they weren't

[21:17:34.0000] <Hixie>
:-P

[02:45:00.0000] <annevk>
oh that's quite a silly bug with respect to qualified name

[02:45:25.0000] <annevk>
oh that's quite a silly bug with respect to qualified name

[02:47:00.0000] <Ms2ger>
zewt, http://wiki.whatwg.org/wiki/TR_strikes_again :)

[02:47:12.0000] <Ms2ger>
zewt, http://wiki.whatwg.org/wiki/TR_strikes_again :)

[02:48:00.0000] <annevk>
I knew we had a page

[02:48:01.0000] <annevk>
couldn't find it on Google

[02:48:32.0000] <annevk>
I knew we had a page

[02:48:36.0000] <annevk>
couldn't find it on Google

[02:49:48.0000] <webben>
when w3c publishes a spec without any versioned permalink like http://www.w3.org/WAI/PF/aria-implementation/

[02:49:58.0000] <webben>
is there some way to link to that particular revision?

[02:50:00.0000] <webben>
when w3c publishes a spec without any versioned permalink like http://www.w3.org/WAI/PF/aria-implementation/

[02:50:01.0000] <webben>
is there some way to link to that particular revision?

[02:50:55.0000] <annevk>
the W3C webmaster is not involved in that

[02:51:00.0000] <annevk>
the W3C webmaster is not involved in that

[02:51:01.0000] <annevk>
that's up to the individual maintaining those pages

[02:51:02.0000] <webben>
oh well i suspected as much

[02:51:03.0000] <annevk>
it should be in CVS though

[02:51:04.0000] <annevk>
that's up to the individual maintaining those pages

[02:51:14.0000] <webben>
oh well i suspected as much

[02:51:18.0000] <annevk>
it should be in CVS though

[02:52:00.0000] <webben>
that would do ... that's where i looked first ... maybe i looked in the wrong place

[02:52:25.0000] <webben>
that would do ... that's where i looked first ... maybe i looked in the wrong place

[02:53:00.0000] <webben>
why are there folders for years in w3c cvs?

[02:53:20.0000] <webben>
why are there folders for years in w3c cvs?

[02:54:46.0000] <annevk>
because that's how the W3C used to organize things

[02:54:53.0000] <annevk>
e.g. http://www.w3.org/1999/xhtml

[02:55:00.0000] <annevk>
because that's how the W3C used to organize things

[02:55:01.0000] <annevk>
e.g. http://www.w3.org/1999/xhtml

[02:55:02.0000] <annevk>
(which redirects, hey ho for copy & paste)

[02:55:09.0000] <annevk>
(which redirects, hey ho for copy & paste)

[03:00:00.0000] <annevk>
my whole twitter feed talks about some sqoot (whatever that is) screw up but no details...

[03:00:01.0000] <annevk>
anyone?

[03:00:19.0000] <annevk>
my whole twitter feed talks about some sqoot (whatever that is) screw up but no details...

[03:00:23.0000] <annevk>
anyone?

[03:00:56.0000] <izhak>
Hi, guys. The "emit the current input character" claim often can be meet in tokenizer specification, but I just cannot find what to do in case when no characters were consumed yet?

[03:01:00.0000] <izhak>
Hi, guys. The "emit the current input character" claim often can be meet in tokenizer specification, but I just cannot find what to do in case when no characters were consumed yet?

[03:01:01.0000] <mattwest>
They made a sexist joke in one of there event ads and people got angry with them for it.

[03:01:18.0000] <mattwest>
They made a sexist joke in one of there event ads and people got angry with them for it.

[03:01:38.0000] <annevk>
ta

[03:01:54.0000] <mattwest>
Wasn't as bad as everyone made it out to be but some of their big sponsors pulled out.

[03:02:00.0000] <annevk>
ta

[03:02:01.0000] <mattwest>
Wasn't as bad as everyone made it out to be but some of their big sponsors pulled out.

[03:02:02.0000] <annevk>
izhak: there's always a current input character...

[03:02:23.0000] <annevk>
izhak: there's always a current input character...

[03:03:42.0000] <izhak>
annevk: can you point me an item that defines that

[03:04:00.0000] <izhak>
annevk: can you point me an item that defines that

[03:04:01.0000] <izhak>
annevk: ah.! yes.

[03:04:02.0000] <izhak>
As it always I'm stupid:)

[03:04:13.0000] <izhak>
annevk: ah.! yes.

[03:04:24.0000] <izhak>
As it always I'm stupid:)

[03:05:48.0000] <izhak>
annevk: Just was considering a case when 0x0000 was consumed. (And unconciously thought it's not a character :) )

[03:06:00.0000] <izhak>
annevk: Just was considering a case when 0x0000 was consumed. (And unconciously thought it's not a character :) )

[03:07:00.0000] <annevk>
ah, the only special thing is EOF

[03:07:04.0000] <annevk>
ah, the only special thing is EOF

[03:14:00.0000] <annevk>
zcorpan: go go Quirks Mode

[03:14:29.0000] <annevk>
zcorpan: go go Quirks Mode

[03:15:00.0000] <annevk>
so I wonder if we rename limited quirks mode and no-quirks mode as suggested, how will HTML be changed?

[03:15:01.0000] <annevk>
did Hixie veto the renaming?

[03:15:13.0000] <annevk>
so I wonder if we rename limited quirks mode and no-quirks mode as suggested, how will HTML be changed?

[03:15:24.0000] <annevk>
did Hixie veto the renaming?

[03:16:44.0000] <Ms2ger>
/me is no fan of renaming stuff

[03:17:00.0000] <Ms2ger>
/me is no fan of renaming stuff

[03:18:00.0000] <annevk>
ok lets wontfix that bug then

[03:18:13.0000] <annevk>
ok lets wontfix that bug then

[03:25:00.0000] <annevk>
does anyone know if there are bugs on browsers for non-ASCII case-insensitive matching of attribute and element names in Selectors and DOM?

[03:25:01.0000] <annevk>
Gecko does the correct thing btw

[03:25:05.0000] <annevk>
does anyone know if there are bugs on browsers for non-ASCII case-insensitive matching of attribute and element names in Selectors and DOM?

[03:25:27.0000] <annevk>
Gecko does the correct thing btw

[03:25:44.0000] <annevk>
since Firefox 4 reportedly

[03:26:00.0000] <annevk>
since Firefox 4 reportedly

[03:26:01.0000] <zcorpan>
i might have filed bugs on opera for this

[03:26:04.0000] <zcorpan>
i might have filed bugs on opera for this

[03:32:00.0000] <annevk>
http://software.hixie.ch/utilities/js/live-dom-viewer/saved/1307 testcase by Leif Halvard Silli

[03:32:28.0000] <annevk>
http://software.hixie.ch/utilities/js/live-dom-viewer/saved/1307 testcase by Leif Halvard Silli

[03:35:39.0000] <annevk>
I filed https://bugs.webkit.org/show_bug.cgi?id=81752 on WebKit

[03:36:00.0000] <annevk>
I filed https://bugs.webkit.org/show_bug.cgi?id=81752 on WebKit

[03:36:01.0000] <annevk>
and added TabAtkins to the cc list for good measure

[03:36:02.0000] <annevk>
guess I'll file an equivalent bug for DOM

[03:36:24.0000] <annevk>
and added TabAtkins to the cc list for good measure

[03:36:36.0000] <annevk>
guess I'll file an equivalent bug for DOM

[03:38:00.0000] <annevk>
DOM bug is https://bugs.webkit.org/show_bug.cgi?id=81753

[03:38:33.0000] <annevk>
DOM bug is https://bugs.webkit.org/show_bug.cgi?id=81753

[03:42:00.0000] <Ms2ger>
Bah, looks like we're stuck with the global scope polluter :(

[03:42:36.0000] <Ms2ger>
Bah, looks like we're stuck with the global scope polluter :(

[03:46:51.0000] <annevk>
which one?

[03:47:00.0000] <annevk>
which one?

[03:52:00.0000] <Workmon>
TabAtkins: Assuming the decision to disallow/ignore !important in @style holds, it seems there would be no way to override an !important author style

[03:52:31.0000] <Workmon>
TabAtkins: Assuming the decision to disallow/ignore !important in @style holds, it seems there would be no way to override an !important author style

[03:52:54.0000] <Ms2ger>
That's the way it should be

[03:53:00.0000] <Ms2ger>
That's the way it should be

[03:53:40.0000] <Workmon>
author, not user

[03:53:58.0000] <annevk>
you can use !important in style

[03:54:00.0000] <Workmon>
author, not user

[03:54:01.0000] <annevk>
you can use !important in style

[03:54:02.0000] <annevk>
e.g. ele.style.setProperty("background", "blue", "!important")

[03:54:18.0000] <annevk>
e.g. ele.style.setProperty("background", "blue", "!important")

[03:54:43.0000] <annevk>
it's just not clear whether it should also work from .style.background = "blue !important" because arguably that string only sets the second argument

[03:55:00.0000] <annevk>
it's just not clear whether it should also work from .style.background = "blue !important" because arguably that string only sets the second argument

[03:55:01.0000] <Workmon>
I don't see why .style.background = x should be different from style="background: x"

[03:55:17.0000] <Workmon>
I don't see why .style.background = x should be different from style="background: x"

[03:56:49.0000] <annevk>
because it maps to setProperty and that API does not map straight

[03:57:00.0000] <annevk>
because it maps to setProperty and that API does not map straight

[03:58:50.0000] <Workmon>
Is that an already implemented mapping, or just the proposed way to specify it?

[03:59:00.0000] <Workmon>
Is that an already implemented mapping, or just the proposed way to specify it?

[04:00:00.0000] <annevk>
that's been the API since before my time

[04:00:11.0000] <annevk>
that's been the API since before my time

[04:08:49.0000] <annevk>
ooh

[04:08:52.0000] <annevk>
geo v2 is stopped

[04:09:00.0000] <annevk>
ooh

[04:09:01.0000] <annevk>
geo v2 is stopped

[04:09:02.0000] <annevk>
reverse geocoding as browser utility was kind of weird I guess

[04:09:21.0000] <annevk>
reverse geocoding as browser utility was kind of weird I guess

[04:10:00.0000] <mattwest>
yer I guess but would of come in handy sometimes

[04:10:30.0000] <mattwest>
yer I guess but would of come in handy sometimes

[04:10:56.0000] <annevk>
there's web services that do it

[04:11:00.0000] <annevk>
there's web services that do it

[04:11:47.0000] <mattwest>
yerp you're right

[04:12:00.0000] <mattwest>
yerp you're right

[04:13:50.0000] <mattwest>
annevk: who would have been responsible for mainatining the db?

[04:14:00.0000] <mattwest>
annevk: who would have been responsible for mainatining the db?

[04:14:41.0000] <annevk>
presumably a third-party or the vendor itself

[04:15:00.0000] <annevk>
presumably a third-party or the vendor itself

[04:16:00.0000] <annevk>
that's already the case for geolocation; most browsers use a web service to transmit e.g. SSIDs towards to get the location

[04:16:01.0000] <mattwest>
ah I see

[04:16:36.0000] <mattwest>
ah I see

[04:17:00.0000] <mattwest>
thanks

[04:17:07.0000] <mattwest>
thanks

[04:19:59.0000] <annevk>
zewt: wouldn't it be nicer to have some kind of decoder/encoder object that you pass strings/bytes as you get them in over the network and it gives the decoded stuff thus far

[04:20:00.0000] <annevk>
zewt: wouldn't it be nicer to have some kind of decoder/encoder object that you pass strings/bytes as you get them in over the network and it gives the decoded stuff thus far

[04:20:01.0000] <annevk>
and you don't have to worry about state at all

[04:20:08.0000] <annevk>
and you don't have to worry about state at all

[04:21:00.0000] <annevk>
e.g. enc = new Decoder("utf-8"); string = enc.feed(bytes)

[04:21:01.0000] <annevk>
and you just invoke .feed() each time you get some more stuff from the network and the object keeps track of state etc.

[04:21:12.0000] <annevk>
e.g. enc = new Decoder("utf-8"); string = enc.feed(bytes)

[04:21:32.0000] <annevk>
and you just invoke .feed() each time you get some more stuff from the network and the object keeps track of state etc.

[04:48:49.0000] <hsivonen>
what's the deal with canvas path objects having an a11y impact now?

[04:49:00.0000] <hsivonen>
what's the deal with canvas path objects having an a11y impact now?

[04:51:00.0000] <annevk>
they're tauted as a better way of doing the hit testing stuff Microsoft proposed, except the relevant bit (I think Hixie calls it hit regions) is not in the spec yet

[04:51:30.0000] <annevk>
they're tauted as a better way of doing the hit testing stuff Microsoft proposed, except the relevant bit (I think Hixie calls it hit regions) is not in the spec yet

[04:53:49.0000] <hsivonen>
annevk: so one would keep path objects around for later hit testing?

[04:54:00.0000] <hsivonen>
annevk: so one would keep path objects around for later hit testing?

[04:55:00.0000] <annevk>
http://wiki.whatwg.org/wiki/Canvas#Regions

[04:55:36.0000] <annevk>
http://wiki.whatwg.org/wiki/Canvas#Regions

[05:10:00.0000] <annevk>
do people still want new Range(); new NodeIterator() and such?

[05:10:16.0000] <annevk>
do people still want new Range(); new NodeIterator() and such?

[05:11:00.0000] <annevk>
they're quite easy to add, but I wonder if there's no demand or if people simply gave up trying to get those kind of improvements

[05:11:05.0000] <annevk>
they're quite easy to add, but I wonder if there's no demand or if people simply gave up trying to get those kind of improvements

[06:19:00.0000] <jkl444>
sup

[06:19:01.0000] <jkl444>
I need your help guys

[06:19:02.0000] <jkl444>
looking for the html5 developers guide on a single html file

[06:19:03.0000] <jkl444>
to import to my kindle

[06:19:06.0000] <jkl444>
sup

[06:19:13.0000] <jkl444>
I need your help guys

[06:19:29.0000] <jkl444>
looking for the html5 developers guide on a single html file

[06:19:34.0000] <jkl444>
to import to my kindle

[06:21:52.0000] <jkl444>
Hi Evanescence, espadrine

[06:21:59.0000] <jkl444>
Can you perhaps help me?

[06:22:00.0000] <jkl444>
Hi Evanescence, espadrine

[06:22:01.0000] <jkl444>
Can you perhaps help me?

[06:25:51.0000] <zcorpan>
what's the html5 developers guide?

[06:25:58.0000] <espadrine>
jkl444: what's your issue?

[06:26:00.0000] <zcorpan>
what's the html5 developers guide?

[06:26:01.0000] <espadrine>
jkl444: what's your issue?

[06:27:00.0000] <jkl444>
I want to convert the guide to my Kindle as one continous document

[06:27:37.0000] <jkl444>
I want to convert the guide to my Kindle as one continous document

[06:27:51.0000] <jkl444>
At the moment I'll have to convert each section

[06:28:00.0000] <jkl444>
At the moment I'll have to convert each section

[06:28:01.0000] <jkl444>
Is there a single unified HTML of the developers guide?

[06:28:02.0000] <zewt>
annevk: i thought about that; if your input buffer is much larger than your output buffer, that means the decoder object wants to make a copy of most of the data, though

[06:28:06.0000] <jkl444>
Is there a single unified HTML of the developers guide?

[06:28:29.0000] <zewt>
annevk: i thought about that; if your input buffer is much larger than your output buffer, that means the decoder object wants to make a copy of most of the data, though

[06:28:47.0000] <jkl444>
zcorpan: http://developers.whatwg.org/

[06:29:00.0000] <jkl444>
zcorpan: http://developers.whatwg.org/

[06:30:00.0000] <hsivonen>
jkl444: I suggest downloading the chapters of http://diveintohtml5.info/ and copying and pasting them together if you need everything in one file

[06:30:00.0000] <hsivonen>
jkl444: I suggest downloading the chapters of http://diveintohtml5.info/ and copying and pasting them together if you need everything in one file

[06:30:01.0000] <annevk>
zewt: hmm yeah, if you have fixed-size buffers the API will need to be different

[06:30:02.0000] <espadrine>
jkl444: I know the tools used to generate that website are at https://github.com/benschwarz/developers.whatwg.org

[06:30:04.0000] <annevk>
zewt: hmm yeah, if you have fixed-size buffers the API will need to be different

[06:30:20.0000] <espadrine>
jkl444: I know the tools used to generate that website are at https://github.com/benschwarz/developers.whatwg.org

[06:30:50.0000] <jkl444>
hsivonen: alright I'll try that. espadrine: I'll need to learn how to use python for that :) rather merge some HTML's

[06:31:00.0000] <jkl444>
hsivonen: alright I'll try that. espadrine: I'll need to learn how to use python for that :) rather merge some HTML's

[06:32:00.0000] <zewt>
annevk: fixed-size buffers are probably the main use case for streaming

[06:32:01.0000] <zewt>
eg. a 10MB input string and 16k output packets

[06:32:21.0000] <zewt>
annevk: fixed-size buffers are probably the main use case for streaming

[06:32:29.0000] <zewt>
eg. a 10MB input string and 16k output packets

[06:32:52.0000] <zewt>
though most of the time strings aren't gigantic, so it's okay to convert the 10MB input string to a 10MB-or-so output ArrayBuffer, then just split the result

[06:33:00.0000] <zewt>
though most of the time strings aren't gigantic, so it's okay to convert the 10MB input string to a 10MB-or-so output ArrayBuffer, then just split the result

[06:41:00.0000] <annevk>
zewt: for streaming I was mostly thinking bytes as input and strings as output and fixed-size input does not really matter

[06:41:07.0000] <annevk>
zewt: for streaming I was mostly thinking bytes as input and strings as output and fixed-size input does not really matter

[06:43:00.0000] <zewt>
the idea of supporting all legacy encodings here is insane and I can't believe anyone is even suggesting it

[06:43:27.0000] <zewt>
the idea of supporting all legacy encodings here is insane and I can't believe anyone is even suggesting it

[06:44:00.0000] <zewt>
"let's get rid of legacy encodings! and let's add new support for them while we're at it, just to make that even harder"

[06:44:18.0000] <zewt>
"let's get rid of legacy encodings! and let's add new support for them while we're at it, just to make that even harder"

[06:45:45.0000] <annevk>
we're not going to get rid of legacy encodings

[06:46:00.0000] <annevk>
we're not going to get rid of legacy encodings

[06:46:01.0000] <zewt>
doesn't mean we should make it easier to use them

[06:46:02.0000] <zewt>
especially for the uglier encodings that actively restrict API options (ISO-2022)

[06:46:02.0000] <zewt>
doesn't mean we should make it easier to use them

[06:46:26.0000] <zewt>
especially for the uglier encodings that actively restrict API options (ISO-2022)

[06:46:44.0000] <annevk>
if we want encodings to work consistently it seems better to expose them consistently too

[06:47:00.0000] <annevk>
if we want encodings to work consistently it seems better to expose them consistently too

[06:47:01.0000] <zewt>
blocking the nastier encodings from new features is pretty much the same as blocking new features from sync XHR

[06:47:02.0000] <jgraham>
If there are some legacy encodings that won't work with the API we want that might be a good reason not to have them

[06:47:18.0000] <zewt>
blocking the nastier encodings from new features is pretty much the same as blocking new features from sync XHR

[06:47:36.0000] <jgraham>
If there are some legacy encodings that won't work with the API we want that might be a good reason not to have them

[06:47:48.0000] <annevk>
yeah sure

[06:48:00.0000] <annevk>
yeah sure

[06:48:01.0000] <jgraham>
But in general it seems like there should just be a fixed list of encodings for the platform

[06:48:07.0000] <jgraham>
But in general it seems like there should just be a fixed list of encodings for the platform

[06:50:00.0000] <annevk>
letting authors deal with leftover bytes seems wrong though, that should be the decoders job

[06:50:01.0000] <zewt>
let it be a fixed list without things like ISO-2022 (and other gross ones, like that ibm-whatever encoding that remaps something in the ASCII range), and let those be exceptional addititions where they're needed

[06:50:02.0000] <annevk>
and once it handles leftover bytes

[06:50:03.0000] <annevk>
it can handle the other stuff too

[06:50:04.0000] <annevk>
there's nothing in the encoding standard that remaps ASCII afaik

[06:50:04.0000] <annevk>
letting authors deal with leftover bytes seems wrong though, that should be the decoders job

[06:50:09.0000] <zewt>
let it be a fixed list without things like ISO-2022 (and other gross ones, like that ibm-whatever encoding that remaps something in the ASCII range), and let those be exceptional addititions where they're needed

[06:50:10.0000] <annevk>
and once it handles leftover bytes

[06:50:15.0000] <annevk>
it can handle the other stuff too

[06:50:33.0000] <annevk>
there's nothing in the encoding standard that remaps ASCII afaik

[06:50:39.0000] <zewt>
there was at some point

[06:51:00.0000] <zewt>
there was at some point

[06:51:01.0000] <annevk>
well, ESC I guess is still special in some encodings

[06:51:24.0000] <annevk>
well, ESC I guess is still special in some encodings

[06:52:00.0000] <annevk>
btw, iso-2022-jp only needs a  single additional flag, iso-2022-kr has no additional state

[06:52:01.0000] <annevk>
per spec

[06:52:02.0000] <annevk>
well it has a state of course doh

[06:52:04.0000] <annevk>
btw, iso-2022-jp only needs a  single additional flag, iso-2022-kr has no additional state

[06:52:07.0000] <annevk>
per spec

[06:52:34.0000] <annevk>
well it has a state of course doh

[06:52:43.0000] <annevk>
but not an encoding switch

[06:53:00.0000] <annevk>
but not an encoding switch

[06:54:46.0000] <zewt>
ibm864 had weirdness, at least in some browser, i think

[06:54:49.0000] <zewt>
anyway need to go to work

[06:55:00.0000] <zewt>
ibm864 had weirdness, at least in some browser, i think

[06:55:01.0000] <zewt>
anyway need to go to work

[06:55:02.0000] <annevk>
ah yeah Gecko has something weird there

[06:55:12.0000] <annevk>
ah yeah Gecko has something weird there

[08:45:52.0000] <aklein>
annevk: good morning. re your question yesterday about transient observers, they do need to be added everywhere you remove the children of the DocumentFragment (to each child of the fragment if the fragment has subtree observers)

[08:49:34.0000] <smaug____>
aklein: IIRC DOM4 has also a bit wrong definition for transient observers

[08:49:55.0000] <smaug____>
the subtree part is missing...

[08:50:46.0000] <smaug____>
could be also that I just haven't found that in the spec

[08:51:01.0000] <aklein>
smaug____: not sure what you mean,  http://dvcs.w3.org/hg/domcore/raw-file/tip/Overview.html#concept-node-remove step 7 only adds a transient observer if the original one is a subtree observer

[08:51:21.0000] <smaug____>
ah, ok it is there

[08:51:24.0000] <smaug____>
I had missed that

[08:52:02.0000] <aklein>
it would be nice if those DocumentFragment special cases could be condensed somehow

[08:52:28.0000] <aklein>
but I suppose that can be left for later, once we've got the correct semantics in place

[08:56:22.0000] <nesta_>
:)

[08:58:57.0000] <smaug____>
aklein: we should create a testsuite for mutationobservers

[08:59:38.0000] <smaug____>
take rafaelw_'s awesome tests, and de-googlefy them, add also my tests (and de-mochitestify them) and  write some more

[09:00:02.0000] <aklein>
smaug____: and there's also WebKit tests that can be de-webkitified

[09:00:11.0000] <smaug____>
testsuite should probably live somewhere under w3.org

[09:00:28.0000] <Ms2ger>
Go ahead and put them on dvcs.w3.org/hg/webapps/DOMCore

[09:00:32.0000] <zcorpan>
w3c-test.org ?

[09:02:33.0000] <aklein>
smaug____: are you thinking of being systematic about it, or just throwing everything we have up there?

[09:02:58.0000] <Ms2ger>
Let's start with throwing up what you have :)

[09:03:14.0000] <smaug____>
yeah, that would be good start :)

[09:03:44.0000] <aklein>
heh, ok. I only ask because I was fighting with some hilariously broken W3C dom/xhtml tests yesterday.

[09:03:49.0000] <aklein>
(unrelatedly)

[09:04:33.0000] <smaug____>
oh, yes, tests are often broken, like everything else in the web :p

[09:05:10.0000] <Ms2ger>
Which?

[09:05:54.0000] <smaug____>
Ms2ger: tests may test specs, which are wrong :)

[09:06:13.0000] <Ms2ger>
Definitely

[09:06:58.0000] <aklein>
Ms2ger: can't figure out where the originals are now, but the one's I was fighting with are now stored here: http://trac.webkit.org/browser/trunk/LayoutTests/dom/xhtml/level3/core/

[09:07:33.0000] <Ms2ger>
Oh, I think I remember those

[09:07:52.0000] <aklein>
most of them actually work

[09:08:13.0000] <Ms2ger>
Now, it would be nice if you could get them into the DOM4 suite :)

[09:08:17.0000] <aklein>
but at least 20 of them fail to run the JS containing their test code!

[09:08:22.0000] <aklein>
hehe

[09:09:31.0000] <Ms2ger>
If you ever can't sleep and want to do something boring, yet useful... ;)

[09:10:16.0000] <smaug____>
writing tests for DOM4 can be quite effective sleeping pill

[09:11:33.0000] <smaug____>
hmm, who can change the topic of this channel

[09:12:11.0000] <Ms2ger>
You

[09:12:42.0000] <smaug____>
Ms2ger: um, how did you do that

[09:12:56.0000] <smaug____>
anyway, does anyone object if I add http://logbot.glob.com.au/?c=freenode%23whatwg to the topic

[09:13:01.0000] <Ms2ger>
Asked chanserv nicely

[09:13:10.0000] <smaug____>
as an alternative log

[09:13:14.0000] <Ms2ger>
Go for it

[09:13:30.0000] <jgraham>
I don't object, but why?

[09:14:11.0000] <jgraham>
Also, dammit we had had that /topic for like 2 years or something

[09:14:35.0000] <Ms2ger>
Mon Oct 19 23:03:06 2009

[09:14:36.0000] <smaug____>
jgraham: krijn mentioned at some point that he may not be able to keep up logging

[09:15:30.0000] <jgraham>
smaug____: I think that was sorted out

[09:15:46.0000] <smaug____>
oh, that information never reached me

[09:18:24.0000] <Velmont>
I just write the tests testharness.js from the start, -- so there should be no need to deoperatize it.

[09:19:11.0000] <Ms2ger>
I should look at my review comments for making that possible here

[09:19:56.0000] <Velmont>
Meh, too little honey in this hot milk. -- Had too much last time, so guess I overcompensated.

[09:21:08.0000] <Ms2ger>
Got a cold?

[09:21:44.0000] <Velmont>
Yup. Or something similar. Don't feel too well at least :-)

[09:22:11.0000] <Velmont>
Good that there's lots of free milk and honey in the cantina. Don't have that at home, so better at work :]

[09:22:39.0000] <jgraham>
Hmm, I wonder if we have honey here... that would be a really good idea

[09:22:57.0000] <Velmont>
jgraham: You should move office to Oslo, just sayin'. :]

[09:23:06.0000] <jgraham>
BTW I have a feature request for allowing "manual" testing from testharness.js. Would basically be for tests that have a few interaction steps but can still decide if they pass or not

[09:23:11.0000] <jgraham>
automatically

[09:23:36.0000] <Ms2ger>
I've got that supported with an annotation in the manifest :)

[09:23:44.0000] <jgraham>
I was thinking of something like setup({"requires_interaction":true}) that would disable the timeout

[09:23:59.0000] <jgraham>
Dunno if that's a good idea

[09:24:34.0000] <Velmont>
jgraham: I've also done interactive testharness.js test. -- I needed to upload a picture for it to work. Was maybe not the best fit, but ohwell. If all you know is a hammmer and all :P

[09:25:04.0000] <jgraham>
Velmont: Umm, no. Apart from the possible lack of honey, the linköping office is nicer. Also Oslo makes Sweden look cheap. And I think it's even colder there!

[09:25:37.0000] <Velmont>
jgraham: Actually, as I said before, I would not be against spending some time in swedish Opera offices.

[09:25:53.0000] <Velmont>
http://w3c-test.org/webappsec/tests/cors/submitted/opera/interactive/file-preflight.htm << there, interactive.

[09:26:05.0000] <Velmont>
Doesn't actually work because the PHP files is not put out on w3c-test.org though.

[09:27:50.0000] <jgraham>
(don't get me wrong the Oslo office is nice, it's just that this one is nicer :)

[09:27:54.0000] <jgraham>
+,

[10:03:54.0000] <Ms2ger>
"editing: with great responsibility comes no power"

[10:15:36.0000] <Velmont>
Ms2ger: Any idea how to detect that browser is doing new style DOMExceptions?

[10:15:47.0000] <Velmont>
*best detect

[10:17:00.0000] <Ms2ger>
try { document.body.removeChild(document) } catch (e) { // e.name }?

[10:18:13.0000] <Velmont>
Ms2ger: Okay, -- was thinking about doing something that throws for it, -- but found it a bit heavy handed. But I guess it's the safest way to do it :-)

[10:18:25.0000] <Ms2ger>
Yeah

[10:19:36.0000] <Velmont>
hrfm, -- there's that opera bug yeah, -- name = DOMException, message = NOT_FOUND_ERR

[10:21:05.0000] <jgraham>
(ugh)

[10:21:23.0000] <jgraham>
I sort of object to making the test harness have that in

[10:22:03.0000] <annevk>
whoa topic change?

[10:22:10.0000] <annevk>
radical

[10:22:36.0000] <Velmont>
jgraham: OK. -- I have problems actually writing that at all, in a consice and nice name.

[10:24:00.0000] <annevk>
aklein: yeah, the DocumentFragment stuff could be factored out

[10:24:04.0000] <Velmont>
annevk: I'm trying to have testharness.js get the DOM4 DOMExceptions.

[10:24:14.0000] <Velmont>
annevk: https://github.com/jgraham/testharness.js/pull/1 < you might have seen that.

[10:24:15.0000] <annevk>
Velmont: yay you

[10:24:31.0000] <Velmont>
jgraham: I could need a tips for how you'd like to see it done, if you know. :-)

[10:24:40.0000] <jgraham>
I don't really

[10:25:26.0000] <jgraham>
But I would prefer that we avoid having the correct behaviour of one function depend on correctness in an unrelated part of DOM

[10:26:02.0000] <jgraham>
i.e. assert_throws shouldn't suddenly have funky behaviour if you break document.body.removeChild(document) somehow

[10:26:12.0000] <annevk>
aklein: as for the other thing, I guess I'll order some food and then study transient observers for a bit

[10:26:22.0000] <Velmont>
jgraham: Hm. Maybe test for new-style first. Then ALSO do a test for the old one if first one fails?

[10:26:57.0000] <Velmont>
And I need a mapping (NETWORK_ERR, NetworkError, 17) tuple for that I guess.

[10:27:15.0000] <jgraham>
You mean on the actual exception that is thrown by the code under test?

[10:27:20.0000] <jgraham>
That sounds more reasonable

[10:27:56.0000] <Velmont>
Okay.

[10:28:01.0000] <Ms2ger>
That would allow throwing both old-style and new-style in the same implementation?

[10:28:06.0000] <jgraham>
Another feature testharness.js doesn't have is boolean logic for exceptions. That makes me sad

[10:28:25.0000] <jgraham>
Ms2ger: yeah, but I doubt anyone will actually do that

[10:28:40.0000] <Ms2ger>
I guess

[10:28:58.0000] <jgraham>
and it's not really clear why it's worse than some implementations doing one thing and some doing another

[10:29:51.0000] <Velmont>
Well, -- it's possible for us to do it, -- and depending on a few things that might happen a short while. -- Haven't really talked/thinked much about it yet.

[10:30:05.0000] <jgraham>
For who to do what?

[10:30:12.0000] <Velmont>
jgraham: Opera

[10:30:21.0000] <jgraham>
To do DOM4 style exceptions?

[10:30:21.0000] <annevk>
I think the API should just be assert_throws("SyntaxError", ...)

[10:30:28.0000] <Velmont>
jgraham: Throw newstyle exceptions for e.g. idb, and oldstyle for e.g. xhr.

[10:30:33.0000] <annevk>
and then testharness.js knows the .code for SyntaxError

[10:30:55.0000] <Ms2ger>
/me doesn't want to change all the tests

[10:31:13.0000] <Velmont>
annevk: So Fix all the tests(!!11)? :|

[10:31:18.0000] <annevk>
we can keep the old API around too, and support the reverse mapping for those

[10:31:19.0000] <jgraham>
Velmont: When I looked at the code it seemed easier to do it all at once. I could be wtong. I Am Not A C++ Expert, This Is Not Coding Advice

[10:31:45.0000] <gsnedders>
Velmont: Really you want to be in the Göteborg office: as nice as the Linköping office, but a less dull city.

[10:31:59.0000] <Ms2ger>
I'd look at the code for a second opinion, but you won't let me :(

[10:32:08.0000] <Velmont>
gsnedders: Hehe, okay :] Might do both though. It's all in the same country anyways.

[10:33:19.0000] <gsnedders>
(That said, I'm in Oslo for the first half of next week)

[10:33:44.0000] <jgraham>
(me too :()

[10:34:01.0000] <jgraham>
(not because of Oslo, but because of the train journey)

[10:34:22.0000] <gsnedders>
/me is flying via LHR, which will be fun

[10:34:33.0000] <jgraham>
Nothing wrong with that

[10:34:51.0000] <jgraham>
I am going via Katrineholm, which I claim is worse

[10:34:55.0000] <gsnedders>
Eh, I have too many experiences of losing luggage doing transfers at LHR.

[10:35:09.0000] <gsnedders>
At least changing at Katrineholm you shouldn't lose a suitcase.

[10:35:10.0000] <Velmont>
Oh, nice. -- What's the occasion? Some meeting I can crash? :P

[10:35:16.0000] <jgraham>
Well that could happen

[10:35:30.0000] <jgraham>
But at least you aren't likely to die of boredom

[10:35:45.0000] <gsnedders>
(Literally the only place I have ever lost a suitcase is going through LHR… and it's happened twice.)

[10:35:49.0000] <gsnedders>
(So I'm kinda bitter.)

[10:36:02.0000] <gsnedders>
Velmont: Easter holidays from uni is my excuse :P

[10:36:21.0000] <Ms2ger>
A good time to prepare for your exams?

[10:36:22.0000] <annevk>
jgraham: what's next week?

[10:36:26.0000] <annevk>
jgraham: did I miss something?

[10:36:46.0000] <gsnedders>
Ms2ger: Indeed.

[10:36:53.0000] <Ms2ger>
That, or ES QA

[10:37:27.0000] <gsnedders>
Ms2ger: Got another three weeks before exams start, though, even if the two hardest ones are first.

[10:37:29.0000] <jgraham>
annevk: No, nothing special, just talking about our test system

[10:37:54.0000] <gsnedders>
(The fact that myself and jgraham coincide in Oslo is purely coincidence)

[10:38:10.0000] <annevk>
ah kk

[10:42:51.0000] <Velmont>
jgraham, Ms2ger: So... assert_throws, -- it does now (with the newstyle domexceptions) more or less check the incoming code against   ex.type.  That actually resembles normal exceptions quite well.

[10:43:29.0000] <Velmont>
jgraham: But is it just stupid widening it to other exceptions as well?   Instead of requiring     assert_throws({ type: "TypeError" })

[10:43:39.0000] <Velmont>
Or I guess that'd be mixing stuff, so not good.

[10:44:43.0000] <jgraham>
Can't you do something like assert_throws(TypeError()m func)?

[10:44:48.0000] <jgraham>
s/m,/

[10:44:54.0000] <jgraham>
oh, something

[11:00:15.0000] <annevk>
aklein: sorry got distracted by "improving the W3C process" email

[11:00:34.0000] <annevk>
aklein: might defer it to tomorrow

[11:26:40.0000] <Velmont>
OK, jgraham, Ms2ger, second try: https://github.com/jgraham/testharness.js/pull/1

[11:33:51.0000] <rafaelw_>
smaug____: you mentioned you found the bug in the fuzzer yesterday?

[11:34:19.0000] <smaug____>
rafaelw_: oh, not in the fuffer

[11:34:21.0000] <smaug____>
er

[11:34:22.0000] <smaug____>
fuzzer

[11:34:26.0000] <smaug____>
in my implementation

[11:34:41.0000] <rafaelw_>
ah. that's cool. what was the bug?

[11:35:38.0000] <smaug____>
I wasn't using the "listenens all attribute changes" flag  always in transient observers

[11:36:38.0000] <smaug____>
rafaelw_: now my implementation passes both test.html (when change to handle attributes case-sensitively) and testTreeMirror.html

[11:36:51.0000] <rafaelw_>
excellent!

[11:37:01.0000] <rafaelw_>
i'm excited to get two compatible implementations out there.

[11:37:13.0000] <rafaelw_>
i'm going to tear out case-insensitivity today in webkit.

[11:37:35.0000] <smaug____>
rafaelw_: did you see those two problems I found in webkit

[11:37:41.0000] <smaug____>
'this' handling and documentfragment handling

[11:37:56.0000] <rafaelw_>
/me looks at his email

[11:38:05.0000] <rafaelw_>
adam is gonna handle 'this'.

[11:38:10.0000] <smaug____>
I would assume those are easy to fix

[11:39:03.0000] <smaug____>
rafaelw_: so I suggested earlier today that we should put our tests to some generic testsuite

[11:39:19.0000] <smaug____>
w3c testsuite

[11:39:21.0000] <rafaelw_>
sounds like a good idea to me.

[11:39:42.0000] <smaug____>
rafaelw_: is it hard to make your stuff to not depend on google script libraries

[11:39:47.0000] <Ms2ger>
You're all in the WebApps WG?

[11:40:03.0000] <rafaelw_>
you mean on the closure test harness?

[11:40:07.0000] <smaug____>
yeah

[11:40:26.0000] <rafaelw_>
do w3c testsuites use a standard test library?

[11:40:55.0000] <smaug____>
Ms2ger: do you know about testharness.js or whatever it is called?

[11:41:02.0000] <Ms2ger>
Yes

[11:41:18.0000] <Ms2ger>
Someone landed it in WebKit, IIRC

[11:41:28.0000] <Ms2ger>
http://w3c-test.org/resources/testharness.js

[11:43:06.0000] <aklein>
rniwa probably knows something about this, he's been poking at that stuff recently

[11:44:24.0000] <Hixie>
blimey, the number of possible conditions that addHitRegion() can throw an exception for is quite ludicrous

[11:44:37.0000] <rniwa>
aklein: right, we have testharness.js checked in

[11:44:43.0000] <rniwa>
aklein: in LayoutTests/resources

[11:45:28.0000] <Hixie>
CSS people, what do i reference for 'cursor'? CSS3UI or CSS2.1 or other?

[11:45:56.0000] <Ms2ger>
2UI

[11:45:58.0000] <Ms2ger>
3UI, even

[11:46:18.0000] <Hixie>
roger, thanks

[11:46:52.0000] <Ms2ger>
Np

[11:46:59.0000] <rafaelw_>
smaug___: I see the document fragment bug. Yes. this should be easy to fix. Good catch.

[11:47:10.0000] <Hixie>
anyone know off-hand if ARIA's role="" is case sensitive?

[11:49:12.0000] <Hixie>
lol wut. http://www.w3.org/TR/wai-aria/roles references the alt text section in HTML then says "We've asked the HTML5 WG to remove or reduce this section, so we may remove the reference to it from ARIA."

[11:50:02.0000] <Hixie>
but it references both "HTML" (meaning HTML4) and "HTML5"'s sections...

[11:50:16.0000] <Hixie>
anywho

[11:51:23.0000] <rafaelw_>
smaug___: aklein points out to me the documentfragment issue is different than i was thinking. he has a patch for it, but its not 'easy'.

[11:52:12.0000] <Hixie>
can anyone point me to a user agent conformance criteria for aria-controls?

[11:52:25.0000] <Hixie>
i'm having trouble working out what some of these states and properties actually do in practice

[11:54:02.0000] <aklein>
maybe medium :)

[12:00:56.0000] <annevk>
is the atomic operation thing the hard part or something related to observers?

[12:01:17.0000] <annevk>
hmm I guess those are sort of intertwined :)

[12:05:59.0000] <jgraham>
Hixie: Is that "anywho" as in "Abandon all hope anywho enter here"?

[12:09:17.0000] <Ms2ger>
Hixie, so

[12:09:26.0000] <Ms2ger>
http://www.whatwg.org/specs/web-apps/current-work/multipage/webstorage.html#the-storage-event

[12:09:37.0000] <rafaelw_>
cd ..

[12:09:54.0000] <Ms2ger>
For clear(), it wants key to be null, but it isn't nullable

[12:16:34.0000] <aklein>
annevk: the atomic operation thing

[12:16:39.0000] <Hixie>
jgraham: basically

[12:16:45.0000] <Hixie>
/me sends in a CCP for this disaster

[12:16:56.0000] <Ms2ger>
Hixie, filed https://www.w3.org/Bugs/Public/show_bug.cgi?id=16469

[12:17:03.0000] <aklein>
annevk: tricky to change without breaking assumptions elsewhere in WebKit

[12:22:50.0000] <Hixie>
Ms2ger: k

[12:23:27.0000] <Ms2ger>
Do you have an ETA for finishing the canvas stuff? :)

[12:23:31.0000] <Hixie>
no

[12:29:47.0000] <TabAtkins>
Workmon: From an author style sheet?  No, the only way for an author to override an author-level !important is with a more specific author-level !important.

[12:29:57.0000] <TabAtkins>
Workmon: But user-level !important is higher than author-level !important.

[12:32:08.0000] <TabAtkins>
annevk: The sqoot thing was that in their advertisement for a code jam, they listed "women bringing you beer" as one of the perks.

[12:33:15.0000] <Workmon>
TabAtkins: The use case is someone with a fairly high specificity !important rule that they want to override for a single element

[12:33:27.0000] <Workmon>
But I guess calling setProperty is the way to go

[12:33:55.0000] <TabAtkins>
Workmon: The proper solution is "dont' use !important, you dummy".

[12:35:51.0000] <annevk>
aklein: I guess the good thing is that only concept-node-insert actually removes children from DocumentFragment

[12:36:06.0000] <annevk>
aklein: we could use concept-node-insert for the other stuff too potentially

[12:36:33.0000] <annevk>
aklein: the only problem might be MutationRecord order

[12:36:35.0000] <aklein>
annevk: sorta? then we end up in a world where MutationEvents can cause MutationObservers to just be wrong. but that's only a problem for implementors, not spec writers :)

[12:36:55.0000] <aklein>
yeah, I'm not sure about ordering

[12:37:19.0000] <aklein>
this stuff can get complicated

[12:38:11.0000] <annevk>
so I guess we can queue after the actual remove/insert operations

[12:38:38.0000] <annevk>
e.g. in http://dvcs.w3.org/hg/domcore/raw-file/tip/Overview.html#concept-node-replace-all

[12:39:02.0000] <annevk>
we drop 2-3 and let concept-node-insert handle that again

[12:39:15.0000] <annevk>
to make that work however, we need to move 4 to be after 6

[12:39:46.0000] <annevk>
that also works for concept-node-replace

[12:39:55.0000] <annevk>
can you see anything wrong with that aklein?

[12:42:09.0000] <TabAtkins>
annevk: This Selectors bug. Shouldn't it be brought up in www-style?

[12:42:59.0000] <annevk>
TabAtkins: it's out of scope of Selectors; Selectors says it is up to HTML (well, "host language"), which in turn says it's ASCII case-insensitive

[12:43:06.0000] <aklein>
annevk: don't we still need 2 to get the list of nodes?

[12:43:08.0000] <TabAtkins>
Ah, kk.

[12:43:18.0000] <TabAtkins>
annevk: Any idea what other browsers do?

[12:43:32.0000] <annevk>
aklein: yes

[12:43:51.0000] <annevk>
TabAtkins: Gecko ASCII, everyone else Unicode

[12:43:58.0000] <TabAtkins>
annevk: Ok.

[12:44:01.0000] <annevk>
TabAtkins: I filed bugs on Opera too

[12:44:03.0000] <TabAtkins>
I'll argue against AP.

[12:44:12.0000] <annevk>
oh god

[12:44:29.0000] <annevk>
not sure I want to read that bugmail

[12:44:41.0000] <TabAtkins>
It's just him saying "this doesnt' make sense"

[12:45:14.0000] <annevk>
oh, I guess he's not familiar with how HTML works then

[12:45:20.0000] <TabAtkins>
Correct.

[12:45:21.0000] <annevk>
or at least its parser

[12:46:09.0000] <annevk>
"Event if WebKit disagrees with every other browser out there, it's still not clear whether we should change this."

[12:46:33.0000] <annevk>
kind of sad that this (or if spec says so, we should just violate the spec) seems to be his go to feedback these days

[12:46:38.0000] <aklein>
annevk: hmm, seems like you'd also have to make concept-node-insert do something funny for the suppress observers flag, since you now need to have it take care of queueing for the DocumentFragment removal

[12:46:45.0000] <annevk>
he used to make WebKit match the XHR spec

[12:47:54.0000] <annevk>
aklein: yeah it would simply not listen to the flag for that operation

[13:34:42.0000] <annevk>
AryehGregor: sounds good btw, though maybe add a comment in the source documenting the selected text thingie

[13:34:51.0000] <annevk>
AryehGregor: re https://www.w3.org/Bugs/Public/show_bug.cgi?id=13843

[13:34:59.0000] <AryehGregor>
annevk, you mean a comment in the source giving my test-case?

[13:35:23.0000] <annevk>
yeah something like that or a pointer to the bug report

[13:35:32.0000] <AryehGregor>
Sure.

[13:36:42.0000] <annevk>
i'm off, mutation changes will likely happen tomorrow

[13:37:29.0000] <Ms2ger>
Night

[13:37:40.0000] <annevk>
nn

[13:46:34.0000] <hober>
yo.

[13:46:50.0000] <hober>
could some of you reply to http://lists.w3.org/Archives/Public/public-html/2012Feb/0275.html today?

[13:47:52.0000] <Ms2ger>
No

[13:48:55.0000] <hober>
Ms2ger: :)

[13:49:21.0000] <Ms2ger>
I'm not yet mad enough to write to public-html

[13:51:14.0000] <aklein>
annevk: for the this argument of MutationCallbacks, does the spec actually say that "this" is the MutationObserver?

[13:51:28.0000] <aklein>
oh

[13:51:29.0000] <aklein>
nm

[13:51:33.0000] <aklein>
annevk: misread the sentence

[13:52:01.0000] <jgraham>
hober: What Ms2ger said. Pretty sure we aren't falling over ourselves to implement that, but I guess you really want an answer from annevk

[13:52:02.0000] <hober>
Ms2ger: you are a smarter person than I am, it would seem

[13:52:41.0000] <hober>
jgraham: "a solicitation of UA implementor interest has gone unanswered for a month" is a good argument. "3 vendors claim they won't implement" is a better one. :)

[13:53:19.0000] <Ms2ger>
The chairs consider arguments now?

[13:53:25.0000] <hober>
heh

[13:54:14.0000] <Ms2ger>
Last time I checked, it was only FORMAL OBJECTIONs

[13:54:26.0000] <othermaciej>
actually it i more the opposite

[13:54:37.0000] <othermaciej>
so far, the only thing we have done with formal objections is record them

[13:55:58.0000] <jgraham>
hober: Yeah and I am very happy for annevk to provide a claim one way or the other :)

[13:56:01.0000] <othermaciej>
here is the list of all Formal Objections we ever got: <http://dev.w3.org/html5/status/formal-objection-status.html>

[13:56:05.0000] <hober>
jgraham: me too! :)

[13:56:50.0000] <Ms2ger>
Anyway, I've given up on the HTMLWG a long time ago, so consider whatever you like :)

[15:03:06.0000] <TabAtkins>
I shouldn't be amused by my response to https://bugs.webkit.org/show_bug.cgi?id=81752 , but I am.

[15:03:35.0000] <Ms2ger>
SQUIRREL

[15:21:11.0000] <Hixie>
hey maths people. what do you call a (cartesian) shape that has no holes, and where at any point outside the shape you can go in two orthgonal directions without approaching the shape?

[15:21:43.0000] <Hixie>
i.e. a shape like a filled O or P, or like a T, but unlike an S or F

[15:22:08.0000] <Hixie>
is there some special term that describes that kind of shape?

[15:26:00.0000] <Hixie>
(i guess i mean Euclidean, not Cartesian)

[15:29:30.0000] <TabAtkins>
Um, convex?

[15:29:37.0000] <Philip`>
P isn't convex

[15:29:41.0000] <TabAtkins>
True.

[15:30:01.0000] <TabAtkins>
I doubt there's a word for this.

[15:30:08.0000] <TabAtkins>
Why would you possibly need it?

[15:30:14.0000] <TabAtkins>
For describing stroke or something?

[15:30:43.0000] <Hixie>
describing the characteristic of a bounding circumference

[15:30:47.0000] <Hixie>
that doesn't have to be rectangular

[15:32:00.0000] <Philip`>
Why would it apply to T differently to how it applies to F?

[15:32:38.0000] <Hixie>
because of the bit between the bars of the F

[15:33:06.0000] <Philip`>
How's that different to the bit between the horizontal and vertical bars of the T?

[15:33:51.0000] <Hixie>
well it's different in the way i described earlier... not sure what you mean beyond that

[15:34:20.0000] <Philip`>
I think I mean, what algorithm cares about the difference you described earlier?

[15:34:46.0000] <Philip`>
(rather than just caring about e.g. convex vs non-convex)

[15:35:01.0000] <Philip`>
(or holey vs unholey)

[15:35:47.0000] <Hixie>
yeah i dunno

[15:35:50.0000] <Hixie>
maybe i don't need this

[15:36:12.0000] <jgraham>
TabAtkins: It might be funny, but there are also some reasonable arguments for not requiring unicode case insensitivity in general e.g. it introduces locale-dependence

[15:36:37.0000] <hober>
any thoughts on this (zero edit) CP before I submit it? http://www.w3.org/html/wg/wiki/User:Eoconnor/ISSUE-195

[15:36:46.0000] <zewt>
jgraham: no, case-insensitivity is normally locale-independent ("case folding")

[15:37:01.0000] <zewt>
case-insensitivity in unicode isn't the same as converting both strings to lowercase before comparing

[15:37:42.0000] <TabAtkins>
hober: Looks good.

[15:39:12.0000] <jgraham>
zewt: Hmm, OK

[15:40:51.0000] <hober>
TabAtkins: I want to include http://www.dreamwidth.org/userpic/1073989/1201616 in it but can't quite figure out how. :)

[15:41:37.0000] <TabAtkins>
heh


2012-03-22
[00:00:58.0000] <zcorpan>
https://www.w3.org/Bugs/Public/show_bug.cgi?id=11960#c19 - i wonder what demos and tests

[00:14:34.0000] <Ms3ger>
zcorpan: http://ie.microsoft.com/testdrive/performance/irishspring/

[00:17:13.0000] <zcorpan>
<!-- The sounds -- oh the wonderful sounds! -->

[00:17:29.0000] <zcorpan>
i love firefox's source highlighting

[00:22:38.0000] <heycam>
Copyright �

[00:51:48.0000] <niloy>
browser is rendering an empty div with 50% width with 0 computed width, anyway to fix it? http://jsfiddle.net/hKtWM/

[02:05:26.0000] <annevk>
"The first highlight is that this is a trinity of technologies which exists in a state of symbiosis."

[02:05:43.0000] <annevk>
why do people not right straightforward text for change proposals? http://www.w3.org/wiki/User:Cjones/ISSUE-195

[02:06:01.0000] <annevk>
you'd think they're written to convince people, not bore them

[02:07:46.0000] <annevk>
oh wow

[02:07:55.0000] <annevk>
ISSUE-195 does not consider the security issues at all

[02:08:04.0000] <annevk>
and makes the attack surface surprisingly larger

[02:08:17.0000] <annevk>
well nobody will implement that

[02:08:29.0000] <jgraham>
annevk: The only people still reading public-html have a very high boredom threshold

[02:08:46.0000] <jgraham>
So it's not really surprising if they themselves write boring proposals

[02:09:16.0000] <annevk>
ISSUE-195 compares the security implications with XHR, which works completely differently from form submission

[02:09:41.0000] <annevk>
this does show that nobody of interest is following public-html, indeed

[02:22:25.0000] <annevk>
https://www.w3.org/Bugs/Public/show_bug.cgi?id=11960#c19 bah

[02:26:25.0000] <zcorpan>
annevk: we have e.g. TextTrack which doesn't have anything to do with Text node

[02:27:41.0000] <zcorpan>
String seems to not make sense for one of encode/decode

[02:28:39.0000] <annevk>
yeah mkay

[02:28:50.0000] <annevk>
I argued for just having Encoder/Decoder

[02:29:12.0000] <zcorpan>
that wfm

[02:37:42.0000] <jgraham>
annevk: I lost the thread of that conversation

[02:37:59.0000] <jgraham>
I object if you want to have encoder/decoder objects even for the non-streaming case

[02:38:39.0000] <jgraham>
The non-streaming case should be String.prototype.encode(encoding) and ArrayBuffer[View].prototype.decode(encoding)

[02:38:47.0000] <zcorpan>
niloy: which browser?

[02:39:33.0000] <annevk>
jgraham: why offer two APIs that do almost the same thing?

[02:39:40.0000] <jgraham>
Having to create encoder objects for the simple case is crasy-overhead

[02:39:44.0000] <jgraham>
*crazy

[02:39:56.0000] <annevk>
given how often you need it, it seems not that much overhead to me

[02:40:27.0000] <jgraham>
No need to sell out the common case because of the rare case

[02:41:00.0000] <annevk>
both are pretty rare I think

[02:42:01.0000] <jgraham>
Well not on the web I need to encode/decode quite often. And I have never needed to use a streaming decoder. And I would be horrified at such a java-like API

[02:42:28.0000] <jgraham>
Having to construct an object to call one method on it, once is just nasty

[02:42:43.0000] <jgraham>
That means the code is 50% boilerplate!

[02:43:45.0000] <Velmont>
jgraham: js is not python, -- don't think you'd do encode/decode as much as in Python (which is every second line there :P)

[02:44:03.0000] <annevk>
really? I never encode/decode in Python

[02:44:20.0000] <jgraham>
It's not every second line, but it is quite often at IO boundaries

[02:44:48.0000] <jgraham>
The web platform so far has done that automatically

[02:44:56.0000] <jgraham>
But increasingly it won't

[02:45:36.0000] <jgraham>
as people send stuff over binary websockets, for example

[02:45:45.0000] <Velmont>
annevk: have to decode everything you take in, -- and encode everything you output.

[02:49:52.0000] <annevk>
Velmont: I guess I always use the default of open()

[02:50:40.0000] <Velmont>
in.decode('utf-8') <do text processing>  out.encode('utf-8')

[02:50:51.0000] <Velmont>
annevk: Maybe you don't manipulate the text you read in?

[02:51:16.0000] <jgraham>
Maybe your programs aren't non-ascii-safe

[02:51:18.0000] <Velmont>
I at least gets loads of spurious exceptions if I don't do that, -- only for non-ascii stuff though. Which I do quite a lot of so :]

[02:51:51.0000] <jgraham>
(it is sadly quite easy to be non-ascii-safe in Python 2. Fixing this is part of the point of Python 3)

[02:52:04.0000] <annevk>
yeah dunno really, I guess I mostly read ASCII stuff in, write bytes out

[02:52:12.0000] <annevk>
the last couple of weeks anyway

[02:52:16.0000] <jgraham>
Umm, missing a negative there

[02:52:19.0000] <annevk>
or use some kind of JSON serializer stuff

[02:54:08.0000] <annevk>
jgraham: but euh, I guess say so on the list

[02:54:15.0000] <annevk>
oh you did

[02:57:38.0000] <Velmont>
Hmmm. Opera does <sup>text</sup> as an item when findNodes(".//text()")

[02:57:51.0000] <Velmont>
and that doesn't support bla.data

[02:58:21.0000] <jgraham>
Huh?

[02:58:50.0000] <Velmont>
jgraham: respec.js throws in Opera, -- the idb spec doesn't work because of it.

[02:59:18.0000] <Velmont>
jgraham: Trying to find out why. -- And found it. -- But now I need to find out what that xpath thingy should do.

[02:59:48.0000] <Velmont>
Is <sup>bla</sup> a textNode? Or should it rather take only the "bla"?

[03:00:36.0000] <jgraham>
Only the bla

[03:00:45.0000] <Velmont>
jgraham: So, bug then.

[03:00:51.0000] <jgraham>
I am pretty surprised if this is broken

[03:00:56.0000] <jgraham>
But it could be ofc

[03:02:00.0000] <zcorpan>
wasn't xpath supposed to be perfect? :-)

[03:02:35.0000] <annevk>
I think the problem in Opera is that it interprets the XPath specification literally

[03:02:59.0000] <annevk>
Velmont: try running document.normalize() before the XPath runs

[03:04:20.0000] <Velmont>
annevk: Yes, not my code, it's respec.js that isn't working in Opera. Always irritated me but haven't looked at it until now.

[03:04:38.0000] <Velmont>
annevk: But I found such a reference now, yes.

[03:05:23.0000] <Velmont>
The others have ignored the xpath spec there, -- and Opera following gets all the problems for doing that :P

[03:05:44.0000] <annevk>
well the problem is the intersection of XPath and DOM really

[03:05:54.0000] <annevk>
DOM allows multiple Text nodes

[03:05:59.0000] <annevk>
XPath assumes a tree model that doesn't

[03:06:29.0000] <annevk>
everyone else was like lets modify XPath to suit the DOM and I guess jl tried the opposite

[03:09:59.0000] <Velmont>
annevk: OK, it was fixed in Opera next actually. I tried that already, but it was so slow that I thought it didn't work. But idb spec is always like that on this slow computer.

[03:11:30.0000] <annevk>
respec's lack of incremental display is annoying

[03:11:38.0000] <annevk>
well, I think respec in general is annoying

[03:11:48.0000] <Velmont>
It's very annoying. It should render to HTML and save that.

[03:11:54.0000] <Velmont>
So much faster.

[03:12:10.0000] <annevk>
it encourages the old-style DOM spec writing which is terrible

[03:12:33.0000] <zcorpan>
respec is responsible for that?

[03:13:20.0000] <Velmont>
What is difference between old and new? New is more algorithmic?

[03:13:42.0000] <zcorpan>
old has all these useless <dl>s

[03:17:49.0000] <zcorpan>
matjas, hasather: incorrect

[03:18:42.0000] <zcorpan>
name and nmchar aren't tokens :-)

[03:23:31.0000] <hsivonen>
zcorpan: not tokens in the HTML sense or not tokens in the general sense?

[03:23:53.0000] <hasather>
hsivonen: CSS

[03:23:54.0000] <zcorpan>
hsivonen: not tokens in CSS

[03:24:15.0000] <hasather>
zcorpan: could it be DIMENSION?

[03:24:24.0000] <zcorpan>
hasather: bingo

[03:24:49.0000] <hasather>
yatzy!

[03:25:31.0000] <hsivonen>
I wonder if 10 weeks from new Chrome has surpassed IE on StatCounter...

[03:27:49.0000] <annevk>
Velmont: yes and less <dl> with stuff like "Exceptions:" "none" etc.

[03:44:10.0000] <annevk>
so aklein said this yesterday: "annevk: good morning. re your question yesterday about transient observers, they do need to be added everywhere you remove the children of the DocumentFragment (to each child of the fragment if the fragment has subtree observers)"

[03:44:14.0000] <annevk>
but that already happens

[03:44:28.0000] <annevk>
per the remove algorithm that is invoked for each child of the fragment

[03:44:59.0000] <annevk>
I could still do the simplification however

[03:51:37.0000] <annevk>
should warnings really be normative? https://www.w3.org/Bugs/Public/show_bug.cgi?id=16418

[03:52:27.0000] <zcorpan>
annevk: why not?

[03:52:55.0000] <annevk>
it seems confusing to have normative statements in call out boxes

[03:53:15.0000] <annevk>
to me they seem more like "pay special attention to" or "see also"

[03:55:50.0000] <jgraham>
Indeed, I don't see how a warning can be normative

[03:57:20.0000] <jgraham>
Although I guess allowing SHOULD level statements aimed at users in warnings makes some sense

[04:00:30.0000] <zcorpan>
http://www.whatwg.org/specs/web-apps/current-work/multipage/infrastructure.html#plugins has should in a warning

[04:00:54.0000] <zcorpan>
http://www.whatwg.org/specs/web-apps/current-work/multipage/fetching-resources.html#encrypted-http-and-related-security-concerns too

[04:02:29.0000] <zcorpan>
http://www.whatwg.org/specs/web-apps/current-work/multipage/embedded-content-1.html#the-img-element has a may

[04:02:46.0000] <zcorpan>
and a must not

[04:04:13.0000] <zcorpan>
etc

[04:05:03.0000] <zcorpan>
though if people don't treat warnings as normative, i guess that's a problem

[04:05:43.0000] <annevk>
Velmont: fixed your CORS stuff

[04:05:53.0000] <annevk>
Velmont: found another potential issue because of it :/

[04:06:11.0000] <annevk>
Velmont: the Access-Control-Allow-Origin syntax, but not going to fix that until HTTP is more stable

[04:06:23.0000] <jgraham>
zcorpan: I think warnings should, in general be statements of fact.

[04:07:09.0000] <jgraham>
Sometimes they seem to follow the fact/requirement to mitigate effect of fact pattern

[04:07:28.0000] <jgraham>
which is OK. Although it could be nice if the requirement was seperate from the warning

[04:07:35.0000] <jgraham>
But maybe that would be hard to read

[04:09:24.0000] <annevk>
i'm pretty happy the DOM spec does not have to deal with mutation events (for now)

[04:09:30.0000] <annevk>
(and hopefully forever)

[04:09:36.0000] <annevk>
sounds like that's complicated

[04:18:27.0000] <Velmont>
annevk: is http unstable? :P

[04:23:07.0000] <zcorpan>
priorities: photoshop supports really awesome and complex things like content aware move, but doesn't do basic stuff like proper alpha in PNG8 or optimizing PNG

[04:24:29.0000] <Velmont>
I always get totally set out when trying Photoshop again coming from Gimp, -- it lacks LOADS of basic stuff.

[04:27:35.0000] <jgraham>
/me has fallen into a parallel universe

[04:29:57.0000] <jgraham>
I don't use photoshop or GIMP much but when I did I was way more interested in non-destructive adjustment layers (super useful for photo editing) than PNG optimisation (useless for photo editing).

[04:30:11.0000] <jgraham>
So what is "basic" might depend on your task

[04:30:43.0000] <zcorpan>
i meant basic in terms of impl complexity

[04:31:45.0000] <annevk>
Velmont: httpbis is

[04:31:55.0000] <jgraham>
Possibly. Doesn't seem the best metric to use since easy to implement might also mean "easy to make as a plugin or third-party tool")

[04:31:58.0000] <Velmont>
jgraham: Well, -- the stuff I'm talking about is making a precise selection. Gimp allows you to change your selection. So you can zoom in, fix the selection, - zoom out, zoom in on new place, fix selection. -- Photoshop doesn't allow that.

[04:32:02.0000] <annevk>
and they don't do living standard at the IETF so it's taking fricking ages before I can update stuff

[04:40:43.0000] <zcorpan>
https://twitter.com/#!/glazou/status/182787715337691137

[05:16:05.0000] <Velmont>
jgraham: BTW, any comments on the new pull request change? https://github.com/jgraham/testharness.js/pull/1

[05:22:06.0000] <jgraham>
Does github really not let you see squashed commits when doing review?

[05:22:25.0000] <Velmont>
jgraham: Yes

[05:22:41.0000] <jgraham>
It really doesn't

[05:22:43.0000] <jgraham>
?

[05:22:43.0000] <Velmont>
https://github.com/jgraham/testharness.js/pull/1/files << just click diff

[05:22:50.0000] <Velmont>
jgraham: Yes it does

[05:23:03.0000] <Velmont>
(allow you to see it squashed)

[05:23:19.0000] <Velmont>
I just want to squash it later so that the history is all nice.

[05:23:46.0000] <jgraham>
Oh I see you can see the whole thing squashed or one commit at a time

[05:32:42.0000] <jgraham>
Velmont: Made some comments

[05:32:51.0000] <Velmont>
ook ^^ :-)

[05:37:17.0000] <annevk>
meh

[05:37:19.0000] <annevk>
forgot hg pull

[05:39:02.0000] <annevk>
ms2ger: we still have multiple heads

[05:39:17.0000] <annevk>
ms2ger: some silly WD draft is there, dunno how to remove it from heads

[05:39:28.0000] <annevk>
ms2ger: because my knowledge of version control is limited to making changes :p

[05:40:08.0000] <Velmont>
jgraham: Hmm. Any idea on a better name? Thought about legacy, - but it's actually an legacy_to_new mapping, and we're getting the new name gotten from the legacy name.

[05:42:52.0000] <jgraham>
Velmont: I would use legacy_code and dom4_type or something rather than overloading the code variable

[05:43:03.0000] <jgraham>
Dunno that I like the "4"

[05:43:52.0000] <jgraham>
dom_ls_I_mean_living_standard_not_load_and_save_type is a bit long to type though

[05:45:00.0000] <jgraham>
Maybe just code and type is enough?

[05:46:08.0000] <annevk>
what does assert_throws look like today again?

[05:46:46.0000] <Velmont>
Hmmm. code is already NETWORK_ERR or NetworkError.

[05:47:14.0000] <Velmont>
I don't really want the tmp there at all, -- but I found no way to do it without it.

[05:48:19.0000] <jgraham>
Velmont: Right, that's what I'm saying. Can't you seperate out the two concepts entirely?

[05:48:44.0000] <jgraham>
Rather than having one variable that could be the old thing or could be the new thing

[05:48:48.0000] <Velmont>
I don't need the legacy mapping other than just getting the new one.

[06:01:15.0000] <annevk>
ok I think I hit my public-html quota for the month

[06:05:20.0000] <Velmont>
jgraham:   if (newstyle_code !== undefined)  code = newstyle_code;

[06:06:52.0000] <Ms3ger>
annevk: those heads are fine

[06:07:08.0000] <annevk>
Ms3ger--

[06:07:29.0000] <annevk>
Ms3ger: it's annoying if I have to chose a head when merging (the -- was to fix your name btw)

[06:08:09.0000] <Ms3ger>
Remind me to look at closing them tonight?

[06:08:17.0000] <annevk>
sure

[06:09:25.0000] <annevk>
if I remember that is

[06:18:52.0000] <Velmont>
Ms3ger, jgraham: Just pushed a new try at adressing your review. Admittedly not radically changed :P But still very open to good variable names.

[06:19:21.0000] <Ms3ger>
Velmont: haven't looked yet, I may be able to tonight or tomorrow

[06:29:21.0000] <annevk>
removing the Issues section from DOM fwiw

[06:29:24.0000] <annevk>
I filed two bugs

[06:29:28.0000] <annevk>
likely both WONTFIX

[06:32:39.0000] <Velmont>
Bah bah. -- Anyone know why my test isn't working? http://test.s0.no/idb/extra/idbfactory_open-transaction-lifetime.htm -- IndexedDB, I'm getting the second onupgradeneeded event, but not the second onsuccess. Seems to maybe be a bug in Firefox.

[06:35:25.0000] <smaug____>
Velmont: trying to ping some moz IDB devs

[06:35:32.0000] <smaug____>
but bad time..

[06:35:41.0000] <smaug____>
it is quite early in California

[06:35:49.0000] <Velmont>
smaug____: But it might be a bug in my test, -- but I've used so much time that I can't see clearly anymore. :P

[06:36:17.0000] <Velmont>
smaug____: Pulling up the console logs some debug information.

[06:45:46.0000] <Velmont>
OMG, so my fault.

[06:46:07.0000] <Velmont>
I had written openrq2.success instead of openrq2.onsuccess. Typical "stared too long at this" bug.

[06:47:18.0000] <Velmont>
Beautiful, it runs as expected. PHew.

[06:57:11.0000] <Velmont>
Oh, instead of using lots of time loading the respec.js version of the spec; I found a great solution, -- just save the page as html, and it's instant loading in all browsers. :]

[06:58:12.0000] <smaug____>
annevk: so transient variable just flags some observers to be transient

[06:58:23.0000] <smaug____>
do you use transient variable somewhere?

[07:02:38.0000] <smaug____>
annevk: I think I prefer transient observers over transient variable

[07:06:33.0000] <annevk>
smaug____: I don't use it explicitly anywhere indeed

[07:06:50.0000] <annevk>
smaug____: I think I prefer the same

[07:08:39.0000] <smaug____>
in my mind I still think observers and transient observers as a way to select a possibly expanding set of nodes, and listen mutations in that set

[07:09:53.0000] <annevk>
well that's what happens

[07:26:00.0000] <annevk>
I wonder if the ES6 work around classes can make stuff like EventReceiver unneeded...

[07:29:02.0000] <smaug____>
annevk: what you mean?

[07:29:20.0000] <smaug____>
EventTarget needs to be somewhere in the event target chain

[07:29:33.0000] <smaug____>
and I expect that EventTarget needs to be a host object because of that

[07:29:42.0000] <smaug____>
at least, I would prefer that

[07:33:16.0000] <annevk>
they have ideas about letting user objects inherit from host objects in some way

[07:33:24.0000] <annevk>
at least Alex Russell does

[07:33:38.0000] <annevk>
have to see how that goes I guess

[07:34:05.0000] <annevk>
anyway, got to go, my brother is about to present his CD

[08:23:33.0000] <EricPreisz>
Quick question...my background is in game development and specifically optimization of 3D game engines(~10 years)...I'm interested in canvas and I'm wondering if anyone can tell me if there is an open source project that is specifically focused on an optimized renderer. I'd like to help out if I can.

[08:24:25.0000] <jgraham>
There are several projects that aim to build game libraries on top of 2D/3D canvas. But I don't know much about them

[08:25:34.0000] <EricPreisz>
No, I'm not looking to build libraries on top, I'm looking to build the render piece that would execute those libraries. Seems like there are a lot of HTML5 game libraries out there.

[08:26:11.0000] <EricPreisz>
If anything...I'd do it just to set benchmarks for what sort of performance we can expect to be implemented.

[08:27:05.0000] <EricPreisz>
I found this big list of HTML5 game engiens/libs. https://github.com/bebraw/jswiki/wiki/Game-Engines

[08:27:09.0000] <jgraham>
Hmm, maybe I am revealing my ignorance about graphics programming then :) What level were you expecting to work at? The actual browser implementations?

[08:27:15.0000] <EricPreisz>
Yea

[08:28:43.0000] <jgraham>
Oh well in that case there is http://www.opera.com/company/jobs/opening/320/ or WebKit or Gecko to hack on. I think everyone is focused on making their implementations optimised since it has a big effect on some web sites

[08:29:08.0000] <jgraham>
I don't really know anything more sepcific than that

[08:29:17.0000] <jgraham>
/me probably isn't the right person to help

[08:30:10.0000] <EricPreisz>
I've put a lot of time into the topic ;) (shameless plug:http://www.amazon.com/Video-Game-Optimization-Eric-Preisz/dp/1598634356)

[08:30:43.0000] <EricPreisz>
But yea, I would like to work on a library that any browser implementation could use.

[08:32:21.0000] <EricPreisz>
I know very little about writing a browser or browswer engine...but I do know a lot about rendering. Thanks for the answer though!

[08:32:39.0000] <jgraham>
Hmm, I am having difficulty imagining what such a library would look like. AFAIK there isn't much shared code in this area

[08:32:58.0000] <jgraham>
Even different WebKit consumers use different gfx libraries

[08:33:55.0000] <jgraham>
(hence the myth of "-webkit" means "same code" — but that's an aside)

[08:35:53.0000] <EricPreisz>
On my quick searches, that's what I'm finding as well. But I think that there would be some value in a consolidated renderer. There's a popular open source renderer for the game industry and it's used by a lot of people for prototyping...it's not really to a professional standard for rendering though.

[08:37:43.0000] <Philip`>
High-performance browser-based games will probably want to use WebGL instead of 2D canvas, and then I don't think the browser itself will have much influence on rendering performance (since it's basically just passing calls through to the system's graphics drivers)

[08:38:24.0000] <Philip`>
The more important part is probably the JS code that people write to run on top of the browsers, and the browsers' JS engines and other related APIs (typed arrays etc)

[08:41:21.0000] <EricPreisz>
How you pass calls to the graphics driver is where all the performance is. Passing data one call at a time is what makes graphics slow. I'm sure that JS will be a bottleneck too, but if you think of a resolution that is 800x600...that's 480,000 pixels...that's a lot of work. Graphics will be a big consumer of resources. There's no reason that canvas couldn't be as fast as WebGL...plus the

[08:41:22.0000] <EricPreisz>
audience of developers for canvas will probably be many times bigger than WebGL.

[08:42:02.0000] <Philip`>
WebGL *is* canvas :-)

[08:42:36.0000] <Philip`>
(though independent from the older 2D canvas context)

[08:42:55.0000] <EricPreisz>
Is the older 2D canvas going to go away?

[08:43:26.0000] <jgraham>
No

[08:43:31.0000] <charlvn>
this i a really awesome job: http://www.opera.com/company/jobs/opening/239/

[08:43:32.0000] <Philip`>
No, though people who care significantly about performance might migrate to JS libraries that are built on top of WebGL

[08:43:32.0000] <EricPreisz>
From what I understand, they both render to a canvas, no? I'm not sure if they both share a graphics device or not.

[08:43:45.0000] <charlvn>
(not like i am going to apply, am perfectly happy with my current job, but if that was not the case)

[08:44:32.0000] <jgraham>
charlvn: I can say with great confidence that it is indeed an awesome job

[08:44:42.0000] <Philip`>
Some implementations of the 2D context are software renderers (via Cairo, Skia, etc), but I think newer implementations do hardware acceleration (via Direct2D, custom libraries built on top of OpenGL, etc)

[08:45:14.0000] <zcorpan>
EricPreisz: ask emoller⊙oc (our game developer guy)

[08:47:00.0000] <EricPreisz>
Oh...small world...Erik actually reviewed my book on his real time rendering site...Thanks!

[08:47:23.0000] <EricPreisz>
I had no clue.

[08:47:51.0000] <zcorpan>
cool

[08:53:36.0000] <zcorpan>
EricPreisz: i think opera wants more gfx developers -- if this is something you want to work with, maybe apply for the job (and reference Simon Pieters and I'll get a candy if you get the job) :-)

[08:56:10.0000] <EricPreisz>
Hrm...that's tempting...I've been sucked into a business role for the past couple of years...I'm getting rusty. ;) I run a game engine company now and one of our biggest issues is a great browser solution for our engines. We did the plug-in thing starting back in '06 and we stopped in '09....

[09:00:39.0000] <jgraham>
Well, at risk of turning this into #opera-jobs, we are always looking for top-quality developers and gfx is obviously a big growth area for browsers these days

[09:00:59.0000] <EricPreisz>
Oh...ops...I confused Erik Moller w/ Tomas Moller & Eric Haines...the authors of Real Time Rendering...I don't think I've met Erik M before...

[09:01:20.0000] <jgraham>
Heh

[09:57:39.0000] <dglazkov>
good morning, Whatwg!

[10:00:47.0000] <Philip`>
Good morning, dglazkov!

[10:26:48.0000] <AryehGregor>
So I guess now I should start on rewriting all my transforms reftests to meet CSSWG guidelines.

[10:27:02.0000] <AryehGregor>
That's about . . . 345 files.

[10:27:03.0000] <AryehGregor>
Sigh.

[10:27:21.0000] <AryehGregor>
I wish I could just do Gecko hacking instead.

[10:39:50.0000] <AryehGregor>
/me hates unnecessarily complicated tests

[10:40:01.0000] <AryehGregor>
I'm responsible for quite a few complicated tests myself, but not unnecessarily so.

[10:40:04.0000] <AryehGregor>
They just test a lot.

[10:49:08.0000] <Ms2ger>
Yay, CKEditor doesn't use element.all anymore

[10:56:18.0000] <AryehGregor>
Wait, so CSSWG tests need to be under the BSD *3*-clause license?

[10:56:23.0000] <AryehGregor>
Oh, wait.

[10:56:27.0000] <AryehGregor>
That's okay.

[10:56:32.0000] <AryehGregor>
It's the four-clause license that's evil.

[10:56:52.0000] <Ms2ger>
Yep

[11:00:26.0000] <AryehGregor>
Ms2ger, so what are some more bugs I should fix when I have time?

[11:03:01.0000] <Ms2ger>
Are you interested in canvas? :)

[11:03:33.0000] <Ms2ger>
Because Philip` doesn't seem to feel like updating his tests

[11:04:58.0000] <Philip`>
/me gets distracted too easily :-(

[11:08:31.0000] <AryehGregor>
No, I'm not really interested in graphics stuff.

[11:08:42.0000] <AryehGregor>
DOM stuff is more fun.

[11:09:27.0000] <Ms2ger>
A test suite for DOM4? ^.^

[11:09:50.0000] <AryehGregor>
I was thinking more like Gecko bugs.  A test suite for DOM4 would be pretty awesome, though.

[11:10:01.0000] <AryehGregor>
Maybe I'll ask to work on that once I'm done with transforms.

[11:10:09.0000] <AryehGregor>
That way I won't have to deal with the CSSWG more than necessary.  \o/

[11:12:06.0000] <zcorpan>
hmm, seems like webkit doesn't pollute the global scope in xhtml

[11:12:12.0000] <Ms2ger>
Hmm

[11:12:49.0000] <niloy>
I have a div with some checkbox, I want to close the div when user clicks outside the div, so I have put tabindex -1 on it and set focus on it, then attached a blur event which closes the div, the problem is blur is called even when user clicks on checkboxes inside the div, anyway to fix this in FF? chromes seems to handle it nicely

[11:13:28.0000] <Ms2ger>
AryehGregor, bug 578632 makes me think it's probably worthwhile to review the HTMLCollection implementations and namedItem("foo") / ["foo"], in case that's something you feel like doing

[11:18:50.0000] <AryehGregor>
Ms2ger, I was thinking of Gecko hacking, for the moment.

[11:19:02.0000] <AryehGregor>
Hmm, you know . . .

[11:19:05.0000] <AryehGregor>
/me looks back at his contract

[11:20:05.0000] <AryehGregor>
Actually, how about I try doing an editing patch or two?

[11:20:38.0000] <jgraham>
Oooh, I know this one

[11:20:46.0000] <jgraham>
AryehGregor: Down that path lies madness

[11:21:24.0000] <AryehGregor>
So everyone says!

[11:23:10.0000] <jgraham>
But you're not going to let the suspiciously-human-looking bones littering the path put you off?

[11:23:26.0000] <smaug____>
AryehGregor: you look at your contract what you should be doing o_O

[11:23:31.0000] <AryehGregor>
smaug____, ?

[11:23:48.0000] <AryehGregor>
My contract says various things.  And I've spoken with my manager-person too.

[11:23:50.0000] <smaug____>
/me has managed to do whatever he does for 6 years without looking what the contract says :)

[11:23:51.0000] <AryehGregor>
So I'm pretty sure I'm good.

[11:24:02.0000] <AryehGregor>
They seem not to care too much as long as I'm doing Gecko-y stuff.

[11:24:07.0000] <AryehGregor>
You're a contractor?

[11:24:15.0000] <smaug____>
yes

[11:24:34.0000] <Ms2ger>
smaug____, does your contract say something about reviewing already? :)

[11:24:45.0000] <smaug____>
Ms2ger: might be

[11:25:11.0000] <smaug____>
AryehGregor: just because some silly bureaucracy issues

[11:25:46.0000] <smaug____>
I would be an employee if I lived in Sweden

[11:27:01.0000] <zcorpan>
AryehGregor: i know, you could drop some quirks :-)

[11:27:10.0000] <AryehGregor>
Where do you live?

[11:27:18.0000] <jgraham>
Mozilla disagree with Monty Python about the merits of Finland?

[12:39:22.0000] <annevk>
aklein: my idea was to just say "A transient registered observer is a specific registered observer." and let the rest flow from how it's used

[12:40:12.0000] <annevk>
aklein: I'm also going to rename it to transient registered observer to make the relationship more clear (and set it more apart from just "observer" which is a property of it)

[12:40:43.0000] <annevk>
ideally we have a different name that does not have "observer" in it for "registered observer" but I have not been able to think of anything :/

[12:47:10.0000] <smaug____>
annevk: what problem are you trying to solve ?

[12:48:06.0000] <annevk>
"the chairs have decided to defer the publication from Tuesday March 27th to Thursday March 29th" mwahahaha

[12:48:25.0000] <annevk>
smaug____: we have a concept called "registered observer" that consists of among other things an "observer"

[12:48:43.0000] <annevk>
smaug____: I'd rather they are named somewhat more distinct

[12:48:49.0000] <annevk>
have*

[13:05:46.0000] <annevk>
zcorpan: seems you were right

[13:06:01.0000] <annevk>
maybe we should start a pool on the publication date

[13:06:12.0000] <annevk>
I'll put 10 down for next month

[13:07:02.0000] <Ms2ger>
I bet we can publish DOM4 earlier

[13:21:37.0000] <annevk>
smaug____: aklein: I now inlined the appending and removed the transient variable: http://dvcs.w3.org/hg/domcore/raw-file/tip/Overview.html#concept-node-remove

[14:10:39.0000] <sicking>
annevk: i believe the only way we can get rid of the global namespace polluter is to change the spec. I don't believe I can convince IE otherwise

[14:11:00.0000] <sicking>
annevk: OTOH, I haven't been successful in convincing hixie to change the spec, so here we are :(

[14:11:08.0000] <Ms2ger>
sicking, and Hixie won't change the spec before IE drops it

[14:11:26.0000] <sicking>
Ms2ger: your guess is as good as mine

[14:11:40.0000] <Ms2ger>
Well, he said so in the bug, didn't he?

[14:11:58.0000] <sicking>
not exactly that no

[14:15:48.0000] <annevk>
sicking: is there a bug report on WebKit?

[14:15:53.0000] <annevk>
did anyone file one on Opera?

[14:15:57.0000] <annevk>
I can't find one

[14:16:37.0000] <annevk>
my opinion has always been we should align with Gecko here, but I never actually followed through to see if we had a bug report and everything, it only comes up every so often

[14:17:32.0000] <Ms2ger>
Former Gecko, I suppose you mean

[14:18:27.0000] <annevk>
I guess I should have included the pedantic note I was thinking of in my had about excluding today...

[14:18:34.0000] <Ms2ger>
:)

[14:18:42.0000] <annevk>
head even*

[14:19:43.0000] <Hixie>
sicking: which bug is this? i'm usually all about doing what the implementors are doing.

[14:19:53.0000] <sicking>
Hixie: yup, you were here too

[14:20:05.0000] <Hixie>
k :-)

[14:20:19.0000] <sicking>
https://www.w3.org/Bugs/Public/show_bug.cgi?id=11960

[14:20:36.0000] <sicking>
Hixie: except you went with the implementations that does something that's IMO much worse for the web

[14:20:43.0000] <sicking>
i.e. much more likely to create buggy pages

[14:20:45.0000] <jgraham>
FWIW I think the global scope polluter is evil, but I would be against us removing it in Opera

[14:20:55.0000] <jgraham>
Because it would hurt compat

[14:21:09.0000] <Ms2ger>
jgraham, how about making it quirks-only?

[14:21:54.0000] <jgraham>
Ms2ger: Or making it quirks-only

[14:22:01.0000] <Ms2ger>
Boo

[14:22:09.0000] <Hixie>
sicking: i think what i wrote in comment 15 is reasonable. (in particular, i think you would ask no less of me if you were in microsoft's position and they in yours.)

[14:22:13.0000] <jgraham>
Yeah, it sucks, but so does breaking sites

[14:22:43.0000] <roc>
why would sites that aren't broken in Gecko break in Opera?

[14:22:55.0000] <jgraham>
roc: Sites are broken in gecko

[14:23:11.0000] <Ms2ger>
Google and Microsoft-sponsored demos are, mostly

[14:23:37.0000] <sicking>
Hixie: I just disagee with you. But now much I could do here beyond that. Reaching out to MS is clearly not fruitful if they are aware of the discussion

[14:23:50.0000] <roc>
what sites? This is not the breakage I've seen in any of the broken demos I've looked at

[14:24:03.0000] <jgraham>
Maybe, but people seem to think that demos are something other than marketing fluff carefully designed to break other browsers

[14:24:26.0000] <sicking>
Hixie: it's too long ago that I don't remember if webkit folks are aware of the issue. I imagine that I had talked to them at the time yes

[14:24:31.0000] <jgraham>
(note: I'm not actually cynical enough to think that all demos are like that)

[14:24:45.0000] <Ms2ger>
Of course not, Mozilla's aren't :)

[14:24:52.0000] <Hixie>
sicking: IE isn't the only browser here, it might well be easier to convince opera and webkit

[14:25:19.0000] <Hixie>
sicking: i'm not sure what you disagree with me on here, my opinion on the matter really isn't a driving factor here.

[14:25:27.0000] <sicking>
Hixie: anne was aware of the issue as he commented in the bug. I strongly suspect webkit was too

[14:25:39.0000] <sicking>
Hixie: that's the part i disagree with you about

[14:25:55.0000] <Hixie>
sicking: you disagree with my opinion that my opinion isn't a driving factor? :-)

[14:25:58.0000] <sicking>
Hixie: changing the spec would likely have changed both webkit and IE in the long term

[14:26:02.0000] <sicking>
Hixie: yes

[14:26:18.0000] <Hixie>
if my opinion was a driving factor we'd have removed the misfeature entirely

[14:26:19.0000] <annevk>
me being aware of it doesn't mean you should not file a bug on Opera btw

[14:26:29.0000] <Hixie>
i hate this namespace polution crap

[14:26:38.0000] <sicking>
Hixie: and yet the spec isn't changed

[14:26:51.0000] <Hixie>
like i said, the spec isn't driven by my opinion here

[14:26:51.0000] <sicking>
Hixie: so i don't know what factual basis you have for that statement

[14:27:01.0000] <sicking>
annevk: yeah, point taken

[14:27:10.0000] <sicking>
Hixie: like i said, i disagree

[14:27:35.0000] <sicking>
Hixie: well.. i disagree that you changing the spec wouldn't have changed the landscape here

[14:27:38.0000] <Hixie>
you disagree on with me about what my opinion is? o_O

[14:27:49.0000] <sicking>
Hixie: sorry, i put it poorly

[14:28:11.0000] <sicking>
Hixie: you seem to be of the opinion that changing the spec wouldn't have changed implementations. I disagree with that assertion

[14:28:36.0000] <annevk>
might Gecko still revert that change?

[14:29:01.0000] <sicking>
annevk: i imagine that if we can get word from google and opera that they will change, that we'd revert yes

[14:29:13.0000] <annevk>
ok, I'll file a bug on Opera

[14:29:13.0000] <Hixie>
sicking: ah, well, you could be right on that, sure. i don't think it's likely though. in my experience if a browser vendor says "we won't do that, it's too much of a compat cost" then me changing the spec anyway just leads to them dismissing the entire spec more.

[14:29:15.0000] <sicking>
annevk: ideally also from safari

[14:29:21.0000] <annevk>
see what happens

[14:35:24.0000] <annevk>
filed a bug on Opera

[14:35:34.0000] <annevk>
ref is CORE-45289

[14:35:41.0000] <annevk>
is there one on WebKit?

[15:24:56.0000] <Hixie>
i keep writing "hit region list" as "region hit list"

[15:25:05.0000] <Hixie>
not the same thing.

[15:41:06.0000] <Hixie>
woot, hit addHitRegion() is now almost entirely specced. The only parts missing are the parts that make it useful.

[15:52:40.0000] <roc>
did we enable global scope pollution for standards-mode documents?

[15:55:29.0000] <roc>
oh, I see we did


2012-03-23
[17:36:34.0000] <rniwa>
TabAtkins, Hixie: yt?

[22:08:21.0000] <mustang89>
holy crap i didn't even know mirc was around still looks like it did in 99

[22:08:26.0000] <mustang89>
almost

[23:47:49.0000] <zcorpan>
should the whitespace after the image in the second row be collapsed per spec? http://software.hixie.ch/utilities/js/live-dom-viewer/saved/1417

[23:48:28.0000] <Hixie>
white-space:normal?

[23:48:50.0000] <Hixie>
if so, yes, white space at the end of the line is collapsed in 'normal'

[23:49:01.0000] <Hixie>
see css2.1 bottom of section 10, iirc

[23:51:40.0000] <zcorpan>
i don't see anything about this in section 10

[23:52:01.0000] <Bhanu>
what is irc?

[23:52:26.0000] <Bhanu>
I saw it first time

[23:52:43.0000] <Bhanu>
can anyone tell me

[23:52:49.0000] <Bhanu>
what is irc?

[23:54:50.0000] <zcorpan>
Hixie: "Each tab (U+0009), carriage return (U+000D), or space (U+0020) character surrounding a linefeed (U+000A) character is removed if 'white-space' is set to 'normal', 'nowrap', or 'pre-line'." (in 16.6.1)?

[23:55:11.0000] <zcorpan>
Bhanu: https://en.wikipedia.org/wiki/IRC

[23:56:54.0000] <zcorpan>
oh, no, it's "If a space (U+0020) at the end of a line has 'white-space' set to 'normal', 'nowrap', or 'pre-line', it is also removed."

[23:59:30.0000] <zcorpan>
hmm. there was a site relying on it *not* being collapsed (and firefox doesn't collapse it). at least in almost standards mode/quirks mode.

[00:00:11.0000] <zcorpan>
wonder if we should try to follow webkit/spec and break the site or specify not to collapse it in almost/quirks

[00:03:19.0000] <Bhanu>
thanks zcorpan

[00:05:12.0000] <zcorpan>
np Bhanu, and welcome

[00:05:53.0000] <zcorpan>
what brought you here?

[00:30:15.0000] <annevk>
was it some kind of special day yesterday? no new email

[00:43:06.0000] <Bhanu>
sorry to delay... zcorpan. I brought to here by reading a book named "HTML5 for web designer"

[01:24:59.0000] <zcorpan>
so about the global scope pollution thing, would it be a reasonable compat compromize to limit it to quirks mode *and almost standards mode* ?

[01:26:49.0000] <Ms2ger>
Currently the table thing is the only limited quirk, right?

[01:27:21.0000] <zcorpan>
the line height calculation quirk, yeah

[01:28:26.0000] <annevk>
still no answer from anyone http://lists.w3.org/Archives/Public/www-dom/2011JulSep/0153.html

[01:28:29.0000] <annevk>
meh

[01:29:00.0000] <hsivonen>
zcorpan: seems like a slippery slope to let Almost Standards and Standards diverge some more

[01:29:18.0000] <annevk>
same: http://lists.w3.org/Archives/Public/www-dom/2011OctDec/0265.html

[01:30:07.0000] <annevk>
guess I'll just file bugs on those too

[01:30:14.0000] <zcorpan>
hsivonen: maybe. but if the choice is that and having global scope pollution in standards mode...

[01:30:18.0000] <Ms2ger>
Meh, I think EnforceRange is silly

[01:30:27.0000] <annevk>
you can say so in the bug

[01:31:16.0000] <zcorpan>
annevk: i think we should allow manipulation of xmlns attributes and let namespace algorithms do what they do (i.e. don't try to prevent people to shoot themselves in the foot)

[01:32:16.0000] <annevk>
do what they do?

[01:32:25.0000] <annevk>
not sure they look at xmlns attributes now

[01:33:10.0000] <zcorpan>
i thought they do, but i never researched the namespace algorithms properly

[01:34:25.0000] <zcorpan>
lookupPrefix i think looks at xmlns attributes

[01:34:39.0000] <zcorpan>
in some impls at least

[01:35:22.0000] <zcorpan>
per spec as well it seems

[01:37:30.0000] <zcorpan>
annevk: note that the html parser can produce namespace declarations that are wrong, so we're not making sure the tree doesn't have wrong namespace declarations by restricting setAttribute*

[01:37:51.0000] <zcorpan>
e.g. <svg xmlns="foo">

[01:37:57.0000] <annevk>
Ms2ger: fyi, just filing these bugs so I don't have to keep track of the email anymore, I don't actually believe we should fix all of them

[01:38:02.0000] <Ms2ger>
Yeah

[01:38:07.0000] <annevk>
inbox <250 teehee

[01:38:30.0000] <Ms2ger>
90

[01:39:13.0000] <annevk>
zcorpan: the spec does not look at the namespace of xmlns?

[01:39:55.0000] <annevk>
hmm nope

[01:40:00.0000] <annevk>
bug?

[01:42:02.0000] <zcorpan>
i think we should do the minimal set of checks that work when the attributes are correct

[01:42:30.0000] <zcorpan>
and let the result be bogus when they are not correct

[01:43:01.0000] <zcorpan>
just like we don't care about innerHTML making sense when modifying the tree in a way that text/html cannot represent

[01:46:44.0000] <annevk>
i guess that's fair

[01:47:19.0000] <annevk>
so, does it match implementations? :)

[01:48:11.0000] <zcorpan>
last time i checked impls aren't anal about keeping namespace declarations correct

[01:48:21.0000] <zcorpan>
but with little interop

[01:48:55.0000] <annevk>
serializing will also be a bitch :/

[01:50:23.0000] <zcorpan>
serializing should rewrite namespace prefixes to match the actual namespaces, iirc. but yeah, that's a bitch

[01:50:54.0000] <zcorpan>
and browsers don't actually do that last i checked :-)

[01:51:10.0000] <annevk>
I think Gecko might

[01:51:18.0000] <annevk>
but that still leaves namespaceless xmlns

[01:51:22.0000] <annevk>
meh

[01:51:23.0000] <Ms2ger>
zcorpan, a spec for that would be appreciated :)

[01:52:09.0000] <zcorpan>
Ms2ger: i'll try to finish this quirk thing first :-P

[01:53:11.0000] <Ms2ger>
I guess that's fair

[02:42:46.0000] <jgraham>
zcorpan: Is there any evidence that almost-standards mode covers a significant fraction of the sites that depend on the quirk?

[02:43:02.0000] <jgraham>
(the global scope polluter, I mean)

[02:54:41.0000] <zcorpan>
jgraham: no. though i haven't seen any evidence about standards mode usage, either, apart from the demo

[02:55:26.0000] <zcorpan>
all i know so far is adrian saying "i think this will break many sites in IE"

[03:25:59.0000] <zcorpan>
matjas: why do you have a mapping for zero width space?

[03:26:41.0000] <matjas>
zcorpan: surprisingly, i need it quite frequently. mostly when tweeting e.g. @font-face without turning it into a mention

[03:28:14.0000] <matjas>
zcorpan: it also makes it a bit easier to test js-escapes and css-escapes for white space edge cases (although i still need https://github.com/mathiasbynens/dotfiles/blob/master/.functions#L53-57 for proper testing)

[03:28:38.0000] <zcorpan>
k

[04:27:43.0000] <zcorpan>
hmm. http://simon.html5.org/specs/quirks-mode#the-blocks-ignore-line-height-quirk applies in almost standards mode too

[05:26:26.0000] <smaug____>
why do I have some many copies of DOM4 open..

[05:26:51.0000] <smaug____>
AppTab helps

[05:29:10.0000] <Ms2ger>
Because it's such a nice spec? ;)

[05:40:07.0000] <zcorpan>
foolip: <!-- As of

[05:40:08.0000] <zcorpan>
    2005-12, studies showed that around 0.2% of pages used the

[05:40:08.0000] <zcorpan>
    <image> element. -->

[05:40:42.0000] <zcorpan>
foolip: changing <image> now seems disruptive even if it's less than 0.2% today

[05:41:53.0000] <foolip>
zcorpan, yeah, I guess :(

[05:42:21.0000] <zcorpan>
foolip: having multiple <img>s seems to have the wrong behavior in legacy browsers

[05:42:41.0000] <foolip>
zcorpan, because they are fetched even or display:none? (are they?)

[05:42:53.0000] <zcorpan>
they are, yeah

[05:42:59.0000] <foolip>
again, :(

[05:43:16.0000] <zcorpan>
and this feature could be designed to work without needing CSS for legacy browsers

[05:44:03.0000] <foolip>
without even CSS? that seems excessively backwards compatible

[05:44:54.0000] <zcorpan>
the proposed markup doesn't need css to show a single image in legacy browsers

[05:47:00.0000] <foolip>
Yes, but I'm not a fan of using <source>

[05:47:20.0000] <zcorpan>
that's reasonable

[05:47:23.0000] <foolip>
Maybe I wouldn't care if I didn't know about the resource selection algorithm

[05:47:27.0000] <zcorpan>
call it something else :-)

[05:57:48.0000] <zcorpan>
seems to me it should be more like

[05:57:52.0000] <zcorpan>
<picture>

[05:57:52.0000] <zcorpan>
<source src=mobile.jog resolution=20dpi>

[05:57:52.0000] <zcorpan>
<source src=hires.jpg resolution=200dpi>

[05:57:52.0000] <zcorpan>
<img src=lowres.jpg resolution=96dpi alt="fallback text">

[05:57:52.0000] <zcorpan>
</picture>

[05:58:43.0000] <zcorpan>
where the browser downloads the image that is "good enough" for the current zoom level, and never downloads a lower resolution image than the ones it already has

[05:59:27.0000] <foolip>
um, so <img> takes part in the resource selection and is not just a fallback?

[05:59:37.0000] <zcorpan>
supporting full MQ here probably leads to authors using it incorrectly, like the spec currently has it wrong (it would download the mobile version when you zoom in)

[05:59:53.0000] <zcorpan>
yeah, that seems nice for DRY

[06:00:06.0000] <zcorpan>
and making sure legacy browsers don't get left in the cold

[06:00:33.0000] <zcorpan>
maybe the <img> has an implied resolution=96dpi and that can't be changed

[06:00:36.0000] <foolip>
yeah, but it'll just look weird in 5 years when legacy browsers are irrelevant

[06:00:50.0000] <foolip>
/me -> fika

[06:00:51.0000] <zcorpan>
so?

[06:01:07.0000] <zcorpan>
in five years bandwidth won't be a problem so you can just use <img> again :-)

[06:01:38.0000] <zcorpan>
also, lots of stuff in html looks weird because they were designed to be backwards compatible

[06:24:08.0000] <zcorpan>
media="" on <source> might well be a misfeature that we should drop

[06:27:47.0000] <zcorpan>
ok i commented on the picture spec

[06:51:56.0000] <zcorpan>
Hixie: btw, seems i was wrong about coordinate vs coordinates

[06:52:32.0000] <jgraham>
zcorpan: One might wonder if your <img adaptive> proposal couldn't be spelt <img>

[06:52:54.0000] <jgraham>
I guess that will break something for some reason

[06:53:26.0000] <zcorpan>
jgraham: i suspect making Range requests for all <img>s would break sites

[06:53:59.0000] <zcorpan>
but i don't have data on that

[07:05:12.0000] <zcorpan>
or pages might have progressive JPEGs but expect them to be fully downloaded so they can paint them on a canvas or so

[07:07:23.0000] <zcorpan>
also, an attribute can be feature-checked so you could choose to use a 96dpi image for legacy browsers and a 200dpi image for supporting browsers

[07:09:03.0000] <zcorpan>
which maybe could be spelled as <img src=96dpi.jpg adaptive=200dpi.jpg> (empty string for adaptive would use src instead)

[07:15:25.0000] <jgraham>
Interesting idea

[07:15:36.0000] <jgraham>
The one I like most so far, I think

[07:19:37.0000] <zcorpan>
ok updated my comment with that

[08:24:53.0000] <Wilto>
My ears were ringing. Hi, guys!

[08:26:31.0000] <Wilto>
jgraham: Unfortunately, we were informed pretty early on by a number of vendors that they weren’t willing to bypass image prefetching based on the existence of an attribute.

[08:27:04.0000] <Wilto>
jgraham: <img src="…" adaptive="…"> would still leave us downloading the original src first, then swapping it for the second src.

[08:28:36.0000] <Wilto>
The Chrome folks did all but post “LOL” somewhere. Hence our working around <img> altogether—for that reason, and to avoid introducing potential issues in older browsers (granted, the `adaptive` attr wouldn’t, but in general).

[08:29:12.0000] <Wilto>
We did a lot of that early brainstorming here: https://etherpad.mozilla.org/responsive-assets

[08:29:42.0000] <Wilto>
And a lot of this ground has been covered in the CG, even though it’s a bit distributed across posts and comments. We did our best to keep all conversation public and easily-parsed.

[08:33:44.0000] <Wilto>
It's been a disjointed "process," but there isn’t a hell of a lot of precedent for this "from Community Group to standard" chain of events. If theres anything I can do to help out with the history, please don’t hesitate to pester me. I turned into the spokeperson somewhere along the line.

[08:35:14.0000] <Wilto>
And I want to stress that I'm after _a_ solution, not "my" solution. I’m not married to <picture>, but all roads seem to lead that way the longer the discussion goes on. Completely open mind, here.

[08:36:27.0000] <Wilto>
(End rant.)

[08:58:51.0000] <jgraham>
10:27 < Wilto> jgraham: <img src="…" adaptive="…"> would still leave us downloading the original src first

[08:58:54.0000] <jgraham>
why?

[08:59:03.0000] <jgraham>
Wilto: ^

[08:59:48.0000] <jgraham>
AIUI in zcorpan's proposal you download exactly one image, ever

[09:00:29.0000] <jgraham>
It's just that you use http range requests to only download enough data for the resolution you have

[09:01:23.0000] <jgraham>
ofc it doesn't solve the use case of "display entirely different images based on screen size"

[10:33:37.0000] <volkmar>
is there an api out there with something like success()/succeded()/postSuccess() methods? I'm trying to name a method with a bit of consistency...

[10:38:44.0000] <AryehGregor>
volkmar, IDB comes to mind.

[10:38:51.0000] <AryehGregor>
Resource loads tend to use onload/onerror.

[10:39:52.0000] <volkmar>
actually, I was looking for something doing the call, not handling the event

[10:40:10.0000] <volkmar>
but I guess I will just go with something and hope someone will tell me if I'm wrong

[13:14:46.0000] <Ms2ger>
Oh hey, it's jgraham in my bugzilla

[14:10:32.0000] <jgraham>
Ms2ger: Be afraid, very afraid

[14:11:23.0000] <Ms2ger>
So, when are you guys implementing event ctors?

[14:15:31.0000] <jgraham>
Ms2ger: Wrong tense

[14:15:41.0000] <Ms2ger>
Oh?

[14:16:22.0000] <jgraham>
Unless you mean more than "new Event('foo')"

[14:16:32.0000] <Ms2ger>
Yep

[14:16:35.0000] <Ms2ger>
StorageEvent

[14:18:09.0000] <jgraham>
Ah. Probably when jl (or sof or bratell or a number of other people) has five minutes and the inclination then.

[16:15:42.0000] <Hixie>
hmm, i suppose if path is null and we're using the current default path i should throw if a transform is provided to addHitRegion...

[16:18:16.0000] <Hixie>
any dom core editors around?

[16:18:28.0000] <Hixie>
actually i guess MouseEvent isn't in DOM Core

[16:18:55.0000] <Hixie>
what spec defines the MouseEvent constructor these days?

[16:23:14.0000] <paul_irish>
http://html5labs.com/dom4events/#constructors-mouseevent maybe?

[16:23:22.0000] <Hixie>
ah, cool, thanks

[16:24:06.0000] <jwalden>
anyone have a recent copy of IE10 to test something for me?  I need to know what |Object.create(new DataView(new ArrayBuffer(8))).setUint8(2, 5)| in http://www.squarefree.com/shell/shell.html produces there

[16:24:15.0000] <Hixie>
heycam: can i do  "partial dictionary Foo { foo myNewMember }" ?

[16:25:21.0000] <heycam>
you cannot, sorry

[16:25:29.0000] <heycam>
did you ask that recently, or was that someone else?

[16:25:57.0000] <heycam>
one problem with allowing it is that we need to have a defined order for dictionary members, so that the properties can be got in a fixed order

[16:26:17.0000] <heycam>
with partials, you don't have any ordering between the different fragments

[16:26:41.0000] <jwalden>
specifying property enumeration order?  :-(

[16:26:56.0000] <Hixie>
heycam: hmm

[16:27:02.0000] <heycam>
jwalden, nah, just order of fetching properties from an object that's being used as a dictionary

[16:27:34.0000] <jwalden>
heycam: oh, you mean like for Object.defineProperty(..., ..., { enumerable: true, configurable: true }) what order enumerable/configurable are gotten?

[16:27:47.0000] <jwalden>
that ordering I am happy to have spec'd :-)

[16:27:49.0000] <heycam>
jwalden, yeah

[16:27:57.0000] <jwalden>
good, good

[16:28:05.0000] <Hixie>
heycam: i think it's going to become almost necessary given events

[16:28:13.0000] <heycam>
hmm really?

[16:28:17.0000] <Hixie>
heycam: and their constructors

[16:28:23.0000] <heycam>
why's that?

[16:28:28.0000] <Hixie>
brb

[16:29:46.0000] <jwalden>
event constructors taking dictionaries means you have to say what order the properties are retrieved, so that getters can have effects in the proper order and all, I think

[16:30:11.0000] <jwalden>
and I understand the event ctors to go crazy with dictionaries, because passing all of 'em as arguments is cracktastic

[16:30:25.0000] <heycam>
yeah, it's a much nicer pattern to use

[16:30:42.0000] <heycam>
still not sure why partial dictionaries are required though

[16:32:13.0000] <Hixie>
heycam: sorry, back

[16:32:29.0000] <Hixie>
heycam: say i want to add a member to MouseEvent

[16:32:42.0000] <heycam>
and you don't want to ask annevk to do it? :)

[16:32:48.0000] <Hixie>
heycam: how do i do that, assuming i'm not a mainstream spec (i.e. who can convince microsoft ot add it)

[16:33:30.0000] <heycam>
fork the spec? :)

[16:34:00.0000] <Hixie>
that seems like a bit of a heavyweight for one extra member :-P

[16:34:31.0000] <heycam>
how are you going to use this extra member?

[16:34:41.0000] <heycam>
I mean, what function is going to look at it?

[16:35:25.0000] <Hixie>
i would want to add a member to the dictionary so that it can be passed to the constructor so that it can set a new member i would also add to the MouseEvent interface

[16:35:31.0000] <Hixie>
same way as all the other members on event init dictionaries

[16:35:53.0000] <heycam>
I see, so you wouldn't need to redefine the constructor, because it's already written in terms of whatever members exist on the dictionary

[16:36:04.0000] <Hixie>
right

[16:37:01.0000] <heycam>
if we have two partial dictionary definitions, how do we decide how they are ordered?

[16:37:11.0000] <heycam>
currently dictionary members are defined to be got in the order they appear in the IDL

[16:37:42.0000] <heycam>
with ones on ancestors got before ones on descendants

[16:37:42.0000] <Hixie>
change the definition to be alphabetical :-)

[16:38:16.0000] <heycam>
yeah that's one way! :)

[16:39:56.0000] <paul_irish>
jwalden: browserstack has ie10pp2 to play with

[16:40:21.0000] <jwalden>
paul_irish: ooh, it does?  good to know for next time (I got an answer in #developers a second ago)

[16:40:57.0000] <jwalden>
although, I think pp2 is before they went to only-available-with-a-new-OS system, and I actually have that preview installed

[16:41:14.0000] <paul_irish>
correctomundo

[16:41:19.0000] <jwalden>
/me is not interested in blowing away his working OS solely to test IE10 :-)

[16:41:40.0000] <heycam>
Hixie, I guess we could even be consistent with current ordering (in case there is a reliance on order already, which I guess is unlikely) by doing the alphabetical thing only for the partial-included dictionary members

[16:42:47.0000] <Hixie>
heycam: we could do that, yeah. though generally i'm a bit suspicious of making partial dicts or interfaces having detectable results since the idea is that 'partial' is just an editorial aid

[16:43:29.0000] <heycam>
Hixie, yeah I guess so

[16:44:34.0000] <heycam>
the alphabetical order just seems a bit funny to me

[16:45:10.0000] <WeirdAl>
[partial] Dictionary

[16:45:12.0000] <Hixie>
could order it by the sum of the unicode codepoints of the characters in the name, it's even more silly :-P

[16:45:29.0000] <WeirdAl>
extra attributes ftw :p

[16:45:29.0000] <heycam>
heh

[16:45:51.0000] <jwalden>
normatively order it depending on the phase of the moon

[16:46:21.0000] <heycam>
mint a uuid for each partial dictionary, order based on that

[16:47:03.0000] <Hixie>
that goes back to the editorial details having normative effects


2012-03-24
[17:25:20.0000] <heycam>
Hixie, added partial dictionaries

[18:31:48.0000] <wycats>
I have a question https://gist.github.com/2177079

[18:31:57.0000] <wycats>
I wrote it in a gist for clarity

[18:32:17.0000] <wycats>
has to do with the tokenizer spec and something HTML5lib's tests say is a ParseError, but doesn't look like it to me

[18:59:08.0000] <Sirisian>
I'm looking for annevk2

[18:59:51.0000] <Sirisian>
Anne van Kesteren <-- that guy

[19:11:04.0000] <Hixie>
heycam: wow, that's good service. thanks dude!

[19:15:29.0000] <wycats>
Hixie: any thoughts on the above?

[19:15:33.0000] <wycats>
is the test just wrong?

[19:29:02.0000] <Hixie>
wycats: end tags aren't allowed to have attribute

[19:29:03.0000] <Hixie>
s

[19:29:30.0000] <Hixie>
wycats: search for "When an end tag token is emitted with attributes, that is a parse error."

[19:33:25.0000] <wycats>
Hixie: ah

[19:33:34.0000] <wycats>
so the parse error happens when the end tag is being emitted

[22:37:26.0000] <Hixie>
Sirisian: anne's often around. he's in the CET timezone.

[22:38:23.0000] <Sirisian>
Ah thanks. :)

[22:39:53.0000] <Sirisian>
It's kind of funny. I have a friend that believes it's impossible to get things added to specs and it's pointless to try so I'm going around against getting his change implemented in the spec and all browsers to prove him wrong. :P

[22:40:08.0000] <Sirisian>
Basically this bug: https://www.w3.org/Bugs/Public/show_bug.cgi?id=16502

[23:04:33.0000] <Hixie>
heh

[23:04:40.0000] <Hixie>
i wish Mac OS did something sane with multiple monitors

[23:04:46.0000] <Hixie>
their fullscreen thing drives me crazy

[05:43:52.0000] <Ms2ger>
jgraham, localStorage.key(-1) === undefined in Opera

[06:10:50.0000] <Ms2ger>
MikeSmith, ping

[06:26:40.0000] <Ms2ger>
MikeSmith, thanks

[07:19:27.0000] <smaug____>
Um, Web Audio draft still doesn't say what various AudioNode types actually do

[07:19:51.0000] <hsivonen>
hmm. http://www.fsf.org/news/announcing-js-labels

[07:25:37.0000] <hsivonen>
I wonder if RMS had a position about non-free PostScript programs back in the day when *nix-minded people sent .ps files over the network

[07:33:05.0000] <smaug____>
how can anyone test web audio

[07:33:25.0000] <smaug____>
if it doesn't define what is the expected output of audionodes :/

[07:54:20.0000] <Dashiva>
hsivonen: Or word macros :P

[08:30:29.0000] <hsivonen>
Dashiva: I expect RMS not to read Word files

[10:02:00.0000] <Dashiva>
hsivonen: He doesn't use javascript either, since he reads web pages in emacs

[11:52:34.0000] <yuhong>
<jgraham> I think you are making the erroneous assumption that calling something a "standard" makes it magical

[11:52:54.0000] <yuhong>
I think this would be good: http://hsivonen.iki.fi/almost-precedent/

[11:53:28.0000] <yuhong>
"Mode Switches are a Product of Their Time" section, in particular.


2012-03-25
[17:28:25.0000] <sedovsek>
Hey folks! Does anyone know a site that uses MultiColumns? (column-width: <size>; or column-count: <integer>;)

[17:28:33.0000] <sedovsek>
Found only few so far ...

[02:38:00.0000] <kennyluck>
Does anyone know how you find sites that use multiple backgrounds?

[04:13:45.0000] <Ms2ger>
No indexedDB in Opera?

[04:39:39.0000] <charlvn>
kennyluck: multiple backgrounds?

[04:39:43.0000] <charlvn>
not sure what that means

[09:32:22.0000] <Ms2ger>
/me waves at Aryeh

[10:00:53.0000] <sphaaz>
can i ask somebody about big file transfers 500+mb ver http

[10:01:32.0000] <sphaaz>
seems that transfer just stops on different transfered size using different browser

[10:01:52.0000] <sphaaz>
for example on chrome anything above 200 mb just fails

[10:02:06.0000] <sphaaz>
im probably not sending headers as i should

[10:02:20.0000] <sphaaz>
thx in advance

[12:37:19.0000] <annevk>
Ms2ger: Velmont is working on it

[12:37:39.0000] <Ms2ger>
it?

[12:38:15.0000] <annevk>
Ms2ger: re the only thing you said today

[12:38:55.0000] <Ms2ger>
Ah, IDB

[12:39:18.0000] <Ms2ger>
I also waved at Aryeh

[12:40:38.0000] <annevk>
I don't wave with my mouth typically

[12:41:00.0000] <Ms2ger>
You don't? Fascinating :)

[13:35:34.0000] <jgraham>
Alhough Velmont is mainly writing tests. So maybe we will just make a testsuite!

[13:36:09.0000] <Ms2ger>
And tell Microsoft to rewrite their tests until they match yours? :)

[13:46:44.0000] <jgraham>
That does seem to be the plan

[13:49:53.0000] <annevk>
lol

[13:50:06.0000] <annevk>
that Selectors matching bug in WebKit went exactly nowhere

[13:50:33.0000] <annevk>
roi of filing bugs on WebKit seems pretty low :/

[13:50:33.0000] <Ms2ger>
How very surprising

[14:04:37.0000] <kennyluck>
Or rather Mozilla people spend too much time on Bugzilla.

[14:07:28.0000] <Hixie>
annevk: try pinging hyatt in #webkit

[14:08:41.0000] <jgraham>
kennyluck: Non sequitur?

[14:13:22.0000] <kennyluck>
jgraham, seriously, as a self-called Mozilla community member, I think Mozilla folks spend too much time on all these community efforts. I see Opera showing this trait too, although I am less familiar with it.

[14:14:07.0000] <jgraham>
...

[14:14:14.0000] <jgraham>
Now I am really intrigued

[14:14:36.0000] <jgraham>
What do you mean "community efforts"?

[14:14:51.0000] <jgraham>
What do you think Opera spend too much time on?

[14:15:22.0000] <jacobolus>
kennyluck: as in, you think the mozilla people should ignore bugzilla?

[14:15:54.0000] <kennyluck>
standardization, responding to non-essential bugs too quickly, etc. etc.

[14:17:33.0000] <jgraham>
Maybe I shouldn't comment on Mozilla, but I am absoutely sure that Opera don't spend too much time on standards work. We have a slightly unusual setup because it is typically not our developers that are doing the standards stuff

[14:17:58.0000] <jgraham>
And we get a *huge* amount of value out of the work that we put in

[14:18:39.0000] <jgraham>
For example zcorpan doing the quirks mode spec allowed us to fix some site-compat bugs that we might otherwise never have identified

[14:19:52.0000] <kennyluck>
jacobolus, no I mean, at least, I think Mozilla people probably shouldn't investigate into problems raised by some random site owners, if those don't seem important.

[14:20:17.0000] <jgraham>
kennyluck: It is really hard to know which bugs are important until you investigate them.

[14:20:51.0000] <jgraham>
But I don't think that Mozilla typically have bz + roc + dbaron + all the other core developers doing frontline qa

[14:21:13.0000] <jacobolus>
kennyluck: how do you recommend finding and fixing bugs for a public open source project if you don't have a tracker that someone follows up with?

[14:21:16.0000] <kennyluck>
jgraham, well, I see bz everywhere :p

[14:21:18.0000] <jgraham>
AIUI they have employees/volunteers that triage the bugs

[14:26:30.0000] <jgraham>
https://twitter.com/#!/brucel/status/182440439016734720 is also interesting in the value of standards

[16:19:00.0000] <zewt>
can the world stop pretending that big endian is still a thing

[16:19:11.0000] <zewt>
optimizing for little endian is: perfectly okay


2012-03-26
[21:36:15.0000] <Hixie>
http://www.whatwg.org/specs/web-apps/current-work/#hit-regions opinions?

[22:06:20.0000] <Hixie>
zewt: network byte order is big-endian...

[22:11:29.0000] <Hixie>
hober: in case the chairs did give you the extension you asked for, addHitRegion() is in now. r7029.

[01:24:52.0000] <hsivonen>
/me wonders what kind of hoops one would have to jump through to obtain a big-endian device that has a WebGL-enabled Presto build on it

[01:27:01.0000] <gsnedders>
hsivonen: Buy a TV, I think.

[01:27:24.0000] <hsivonen>
gsnedders: but which TV?

[01:29:41.0000] <karlcow>
hsivonen: http://www.opera.com/press/releases/2011/01/19/

[01:30:26.0000] <gsnedders>
hsivonen: I'm unsure whether we can disclose information about our partner's hardware.

[01:30:38.0000] <hsivonen>
gsnedders: ok. that's what I expected

[01:30:54.0000] <gsnedders>
Though if we ship with Typed Arrays, it's black-box observable anyway.

[01:31:22.0000] <hsivonen>
so telling a Web developer to test BE is basically telling them to go buy a TV and it's up to them to figure out which one

[01:31:29.0000] <hsivonen>
yeah, that'll work

[01:31:42.0000] <karlcow>
there is also http://www.opera.com/press/releases/2012/03/19_2/

[01:31:52.0000] <gsnedders>
Apparently there are BE MIPS phones coming soon.

[01:32:26.0000] <karlcow>
"Opera TV browser with WebGL™ support are now available for MIPS-based DTVs, set-top boxes and other digital home devices."

[01:33:26.0000] <hsivonen>
I wonder how many months it will take Opera to decide to make ArrayBuffers on BE systems behave to scripts as if they were LE and burn cycles for byteswapped copies when passed to the GPU...

[01:34:01.0000] <hsivonen>
I don't see any realistic way to stop Web authors from publishing code that assumes that ArrayBuffers are LE

[01:36:08.0000] <gsnedders>
hsivonen: More practically, I wonder if we could get out a copy of mobile emulator running within QEMU

[01:36:39.0000] <gsnedders>
But likely that requires someone to care.

[01:43:58.0000] <gsnedders>
hsivonen: Perhaps a more telling sign is nobody has reported a bug yet down to WebGL and endianness

[01:46:05.0000] <jgraham>
I thought there were MIPS tablets shipping in China (probably without presto though). Perhaps some of those are BE?

[01:46:35.0000] <gsnedders>
I believe (almost?) all LE.

[01:50:17.0000] <jgraham>
Anyway, the advice to test on BE systems is clearly bogus and makes quite a good indicator for whether someone has thought enough about the problem

[01:51:59.0000] <gsnedders>
Does anyone have a nice, simple TC that gives big/little endian as a result?

[01:55:34.0000] <gsnedders>
hsivonen: I presume I can say fine that to my knowledge only one major TV OEM still produces BE hardware.

[01:57:20.0000] <gsnedders>
(And as far as I'm aware, we currently do not ship mobile on any BE hardware)

[01:58:42.0000] <hsivonen>
jgraham: yeah. It's worrying that the Khronos WG didn't have a mechanism for stopping blatant non-Web-safeness like this

[02:03:50.0000] <gsnedders>
hsivonen: As far as I can tell, apart from some talk from TC39 when it was talked about moving the spec there, nobody within the Khronos WG saw it as an issue.

[02:28:31.0000] <nonge>
the spec says about favicon.ico: "user agents may instead attempt to fetch and use an icon with the absolute URL obtained by resolving the URL "/favicon.ico" against the document's address" … I'm not sure: when the document has the url <example.com/foo/bar.html>, should the UA look for <example.com/foo/favicon.ico> or <example.com/favicon.ico>?

[02:29:39.0000] <gsnedders>
nonge: resolving /favicon.ico against http://example.com/foo/bar.html results in http://example.com/favicon.ico

[02:30:15.0000] <nonge>
gsnedders, ah great. thank you

[03:55:01.0000] <annevk>
zcorpan: you can also look for self[x]

[03:55:12.0000] <annevk>
zcorpan: and frames[x]

[03:55:50.0000] <annevk>
zcorpan: but I think the more problematic part is when people do var x = test.innerHTML or some such where "test" is a reference to the element in question

[03:56:43.0000] <annevk>
zcorpan: see e.g. http://software.hixie.ch/utilities/js/live-dom-viewer/?%3C!DOCTYPE%20html%3E%3Cscript%20id%3Dx%3Ew(x)%3C%2Fscript%3E

[03:57:53.0000] <zcorpan>
annevk: i don't think self[id] and frames[id] is more common than window[id] for lookup of non-framed elements

[03:58:15.0000] <zcorpan>
annevk: i don't know how to search for x without getting 99% noise :-)

[03:58:40.0000] <annevk>
but that is what people will likely use :/

[03:58:47.0000] <zcorpan>
yeah

[06:22:31.0000] <GPHemsley>
FYI: Filed Mozilla bug 739203; if Mozilla has implemented the HTML5 parser correctly, it may be a spec bug

[06:25:38.0000] <zewt>
Hixie: the format of ip packets isn't really relevant; big endian cpus shouldn't be a serious consideration in api design today

[06:26:36.0000] <zewt>
(and any new binary-format protocols should also be little-endian)

[06:29:47.0000] <zcorpan>
GPHemsley: why would it be a spec bug? the color of tags in view source is entirely a UI thing

[06:30:20.0000] <GPHemsley>
zcorpan: I said *may*; if the parser algorithm is involved, there's a possibility

[06:30:22.0000] <GPHemsley>
that's all

[06:30:27.0000] <zcorpan>
GPHemsley: though i think this is a known bug. (dunno if it was actually filed in bugzilla though)

[06:30:52.0000] <GPHemsley>
well, it is now :)

[06:31:30.0000] <zcorpan>
hsivonen mentions it in http://hsivonen.iki.fi/view-source/

[06:36:38.0000] <hsivonen>
GPHemsley: thanks, but it was a duplicate

[06:36:58.0000] <hsivonen>
coloring the script end tag is considerably harder than coloring other tags

[06:37:29.0000] <GPHemsley>
ah, ok

[06:37:41.0000] <zcorpan>
hsivonen: the tooltip for "<a class=foohref="foo">" has probably cause three times

[06:38:07.0000] <hsivonen>
zcorpan: one per line, though, right?

[06:38:14.0000] <hsivonen>
per line in the tooltip that is

[06:38:33.0000] <zcorpan>
oh, it's several errors

[06:38:53.0000] <hsivonen>
anyway, I opted to color the script end tag wrong in order to get the patch landed some time

[06:39:11.0000] <hsivonen>
turns out people pay attention to it :-(

[06:39:43.0000] <GPHemsley>
:)

[06:41:31.0000] <GPHemsley>
hsivonen: So why is it hard to color?

[06:43:06.0000] <hsivonen>
GPHemsley: the tokenizer doesn't go through enough state transitions to have transitions where the color scheme has color transitions, IIRC

[06:44:14.0000] <hsivonen>
could be fixed by adding more states to the tokenizer and making the syntax highlighter remember the run that covers "script" in case that run ends up participating in an end tag

[06:44:39.0000] <hsivonen>
or I suppose it could be fixed by some kind of post-processing hack

[06:44:49.0000] <hsivonen>
might actually be easier to do a post-processing hack

[06:45:00.0000] <zcorpan>
that's my first throught :-)

[06:45:15.0000] <hsivonen>
better not touch *those* tokenizer states

[06:48:06.0000] <zcorpan>
hsivonen: known that view source doesn't work for data: url pages?

[06:48:57.0000] <hsivonen>
zcorpan: huh? it's supposed to work

[06:48:59.0000] <GPHemsley>
zcorpan: WFM

[06:49:24.0000] <hsivonen>
zcorpan: WFM

[06:49:32.0000] <zcorpan>
13.0a1 (2012-03-07)

[06:49:46.0000] <zcorpan>
data:text/html,foobar

[06:49:59.0000] <zcorpan>
view source is empty for me :-(

[06:50:12.0000] <zcorpan>
/me updates firefox

[06:50:46.0000] <hsivonen>
I don't have an Aurora build here, so I can't test 13.

[06:50:50.0000] <zcorpan>
same with 14.0a1 (2012-03-25)

[06:51:19.0000] <hsivonen>
zcorpan: do you have an external editor set?

[06:51:20.0000] <GPHemsley>
zcorpan: I'm running Aurora 13, and it works

[06:51:29.0000] <zcorpan>
hsivonen: no

[06:51:45.0000] <GPHemsley>
although the title bar lists "data:..." as the URL o_0

[06:52:10.0000] <hsivonen>
GPHemsley: to avoid putting huge data: URLs there

[06:52:23.0000] <GPHemsley>
I suppose... but surely there's a happy medium?

[06:52:49.0000] <GPHemsley>
hsivonen: It doesn't do that for long http: URLs, does it?

[06:52:58.0000] <hsivonen>
GPHemsley: no

[06:54:06.0000] <hsivonen>
zcorpan: hmm. that's weird. which OS is this?

[06:54:33.0000] <zcorpan>
Mac OS X 10.7.2

[07:04:08.0000] <hsivonen>
zcorpan: WFM on Mac

[07:04:17.0000] <hsivonen>
zcorpan: sorry, I need more precise steps to reproduce

[07:17:31.0000] <annevk>
Pro and no idea

[07:17:52.0000] <hsivonen>
annevk: can't you buy a new battery for Pro without leaving it for servicing?

[07:19:04.0000] <annevk>
the help says "Service Battery: The battery isn’t functioning normally, and you may or may not notice a change in its behavior or the amount of charge it holds. Take your computer in for service. You can continue to use your battery before it’s checked without harming your computer."

[07:19:22.0000] <hsivonen>
annevk: ok

[07:19:38.0000] <annevk>
and I think I might have Apple Care on it

[07:19:55.0000] <annevk>
oh well, guess I'll go find out tomorrow

[07:22:34.0000] <zcorpan>
hsivonen: 1. go to data:text/html,foobar 2. right click 3. view page source. ACTUAL RESULT: empty window

[07:22:52.0000] <annevk>
is that CSS3 logo a first? http://my.opera.com/desktopteam/blog/2012/03/26/html5-css-64bit

[07:23:20.0000] <zcorpan>
hsivonen: woah. it shows up when i *click* in the view source

[07:23:33.0000] <annevk>
zcorpan: are you running Nightly?

[07:23:38.0000] <zcorpan>
yeah

[07:23:51.0000] <annevk>
it works fine for me

[07:23:53.0000] <annevk>
Mac

[07:23:57.0000] <zcorpan>
very weird

[07:24:26.0000] <hsivonen>
zcorpan: WFM

[07:24:52.0000] <zcorpan>
it also shows up if i do an exposé

[07:25:58.0000] <hsivonen>
a painting bug maybe

[07:26:28.0000] <hsivonen>
(I tested on a 2009 Mac Mini with Nvidia something graphics)

[07:27:55.0000] <zcorpan>
i have a few months old macbook pro

[08:23:30.0000] <annevk>
is "each X has the following request-associated concepts" correct English?

[08:26:26.0000] <michel_v>
is there a verb more precise than "to have" in this context?

[08:31:37.0000] <annevk>
not sure what you mean

[08:42:48.0000] <michel_v>
annevk: I mean that I find the verb a little bit vague. but other than that, it looks correct to me (which won't help you much as I too am an english-as-a-second-language person)

[09:51:37.0000] <bhearsum>
does anyone know if it's possible to do HTML5 validation from within python, possibly with http://code.google.com/p/html5lib/ ?

[09:52:21.0000] <Ms2ger>
Hi bhearsum

[09:52:38.0000] <Ms2ger>
And no, I'm afraid not

[09:52:51.0000] <bhearsum>
damn :(

[09:52:54.0000] <bhearsum>
also, hi Ms2ger!

[09:53:05.0000] <Ms2ger>
Java? :)

[09:53:08.0000] <bhearsum>
heh

[09:55:41.0000] <MikeSmith>
bhearsum: fwiw, validator.nu does at least have an HTTP interface you could use from within python

[09:55:54.0000] <bhearsum>
hmmm

[09:56:07.0000] <bhearsum>
that might be O.K. here, i generally try to avoid network dependencies in tests though

[09:57:06.0000] <bhearsum>
thanks for the link MikeSmith

[09:58:27.0000] <bhearsum>
/me finds http://htmlhelp.com/tools/validator/offline/index.html.en

[10:04:25.0000] <MikeSmith>
bhearsum: curl --data-binary @foo.html -H "Content-Type: text/html" "http://validator.nu?out=gnu&level=error"

[10:04:49.0000] <MikeSmith>
is an example of doing it from the command line

[10:05:36.0000] <bhearsum>
thanks

[10:24:57.0000] <dglazkov>
good morning, Whatwg!

[10:25:11.0000] <Ms2ger>
Good night, hat guy

[10:25:23.0000] <dglazkov>
Ms2ger: hats for everyone!

[10:38:44.0000] <kennyluck>
Good midnight.

[11:00:06.0000] <Hixie>
anyone have any opinions on how to do pattern transformations?

[11:00:17.0000] <Ms2ger>
Quickly? :)

[11:00:39.0000] <Hixie>
the two ideas currently are either an SVGMatrix argument to createPattern(), or a setTransform() method on CanvasPattern that takes an SVGMatrix

[11:56:48.0000] <Hixie>
ok since nobody seems to care, i'm going for the method that sets the matrix.

[13:02:24.0000] <annevk>
home sweet home

[13:13:39.0000] <annevk>
Hixie: so we are stuck with SVGMatrix?

[13:13:59.0000] <annevk>
I was kind of hoping it would go away in favor of something CSS-y (non-existing though...)

[13:15:03.0000] <hober>
i liked dino's 4x4 matrix proposal (to unify svgmatrix & other matrix needs in the platform)

[13:15:35.0000] <annevk>
hober: yeah, maybe that

[13:15:57.0000] <annevk>
hober: maybe comment on https://www.w3.org/Bugs/Public/show_bug.cgi?id=10132 ?

[13:18:30.0000] <jamesr_>
i think canvas just needs a 2x3 here

[13:18:33.0000] <jamesr_>
not 4x4

[13:37:20.0000] <annevk>
jamesr_: hmm yeah, so maybe they should not be shared after all

[14:06:37.0000] <Sirisian|Work>
hey there he is. Hey annevk :) Decided to tweet you when I thought you didn't use this channel >_>

[14:06:46.0000] <Sirisian|Work>
Just saw your tweet

[14:07:21.0000] <annevk>
i'm here usually around European time

[14:07:27.0000] <annevk>
daytime*

[14:08:03.0000] <annevk>
fwiw

[14:08:36.0000] <annevk>
it usually takes me a while to get to a bug report, unless I happen to be editing the spec or it's something important that needs addressing soonish

[14:17:06.0000] <jwalden>
well, this is moderately surprising

[14:17:52.0000] <jwalden>
looks like only v8 implements the correct behavior for dateWhichIsInvalid.setSeconds(argumentWhichSideEffectsWhenConvertedToNumber)

[14:18:01.0000] <jwalden>
and none of the other engines do it right

[14:18:12.0000] <TabAtkins>
JS is weird.

[14:18:22.0000] <jwalden>
/me would have expected Opera to get it right, since they rewrote from the spec

[14:18:39.0000] <jwalden>
well, this isn't much a case of JS being weird, as of engines just not following the spec steps

[14:18:53.0000] <jwalden>
behavior here is kind of arbitrary once you allow implicit conversions and such

[14:23:45.0000] <annevk>
ooh, a JS bug in Opera

[14:23:52.0000] <annevk>
gsnedders will be pleased

[14:23:57.0000] <annevk>
or find out you're wrong :p

[14:26:49.0000] <annevk>
"Q: Does window.orientation=0 mean landscape or portrait mode? A: Depends on the browser. Gotta love WebKit APIs" euh sicking does it depend on the flavor of WebKit?

[14:30:32.0000] <gsnedders>
jwalden: Partly depends if it changed between the final public draft of ES5 and the final spec, and regardless assumes we implemented all the built-ins correctly, which there certainly have been bugs like this before.

[14:31:16.0000] <gsnedders>
jwalden: Also implies neither our testsuite, your testsuite, nor test262 tests it. :P

[14:31:22.0000] <jwalden>
yup

[14:31:40.0000] <jwalden>
https://bugzilla.mozilla.org/show_bug.cgi?id=732779 is what triggered my discovery, fwiw

[14:32:36.0000] <gsnedders>
I was amused of the case of [[Put]]/[[Set]] on primitives and wrapping in strict. Found it, filed bugs, then someone else independently found it and filed bugs as well as emailing es5-discuss two days after.

[14:32:56.0000] <jwalden>
that bug's old, for us :-\

[14:33:13.0000] <gsnedders>
Yeah, you eventually found the dupe that I had missed.

[14:33:15.0000] <jwalden>
and drags in gnarly JSAPI public-API considerations

[14:33:30.0000] <gsnedders>
Certainly nobody else knew of it.

[14:33:35.0000] <gsnedders>
And V8 had the opposite bug!

[14:33:43.0000] <gsnedders>
It didn't wrap in strict or non-strict.

[14:33:52.0000] <jwalden>
oh, it's had about four or five dups or so, it's known...ish

[14:34:04.0000] <jwalden>
among the JS programmerati

[14:34:31.0000] <gsnedders>
I meant in other JS engines.

[14:34:38.0000] <jwalden>
ah

[14:35:54.0000] <Hixie>
annevk: i have no opinion on svgmatrix vs other matrix solutions

[14:35:58.0000] <Hixie>
annevk: i'm just using what i have

[14:36:31.0000] <gsnedders>
jwalden: Slightly unrelated, but any interest in making your jstests runner work better with other engines?

[14:36:32.0000] <annevk>
that's fair enough I guess, but I'm afraid we're locking ourselves down

[14:36:39.0000] <annevk>
but maybe we're already past that

[14:36:48.0000] <annevk>
nobody has picked up that ball thus far

[14:37:08.0000] <jwalden>
gsnedders: somewhat; I have at least one large task on my plate to complete before I could do any of that, tho

[14:37:28.0000] <jwalden>
at least if I'm volunteering my own time :-)

[14:37:50.0000] <jwalden>
plausibly it's a [good first bug] sort of thing

[14:37:58.0000] <jwalden>
although in a different sense from most of the JS first-bugs

[14:38:57.0000] <Sirisian|Work>
annevk, well the multiple monitor is kind of important. It's a problem that's plaguing many implementations since as soon as the screen loses focus you can't watch video. This is seen as a security concern so if my recommendation is added in a non-normative format then I can submit bugs to get all the browsers to implement it quickly allowing javascript to do something that not even a plugin like flash can do.

[14:39:03.0000] <gsnedders>
What we currently have makes it hard for us to stay up-to-date with the tests, which is awkward.

[14:40:19.0000] <gsnedders>
Might try and see if I can get permission to do such a thing (seeming it is technically contributing to moz, even if you are the ones who gain the least), but given I have exams coming up, I dunno about time.

[14:42:37.0000] <Hixie>
aw man, i don't remember how cvs works any more

[14:42:41.0000] <Hixie>
how do i do a revert in cvs?

[14:43:06.0000] <Hixie>
i need to revert a file back to revision 1.126

[14:43:11.0000] <gsnedders>
Locally or on server?

[14:43:41.0000] <Hixie>
server. but nevermind, the google has given me the anwer.

[14:44:59.0000] <annevk>
Sirisian|Work: if it's a security issue you should file bugs regardless of what any spec says

[14:45:01.0000] <Hixie>
cvs update -j 1.132 -j 1.126 Overview.html

[14:45:03.0000] <Hixie>
does that look right?

[14:45:11.0000] <Hixie>
1.132 is the current rev

[14:45:16.0000] <annevk>
Sirisian|Work: multi-monitor support is somewhat low on my priority list though

[14:45:33.0000] <Sirisian|Work>
you have 3 bugs. :\

[14:46:03.0000] <Sirisian|Work>
Or do you mean there's more discussion about bigger changes to the spec?

[14:47:24.0000] <annevk>
well, I'm still waiting for the CSS WG to figure out the display related bits

[14:47:31.0000] <annevk>
which are also important for <dialog>

[14:47:38.0000] <annevk>
so far it seems to be going nowhere though :/

[14:47:47.0000] <annevk>
but then I'm not subscribed to www-style so maybe

[14:48:04.0000] <Sirisian|Work>
Though that is a good suggestion. I think I'll submit bugs as a solution to the perceived security problem in the other browser's implementations. I have to leave work atm. Thanks for looking into it. :)

[14:49:44.0000] <kennyluck>
css3-box is not going anywhere so you need a CSS Skip-This Box Module Level 3 or  something?

[14:50:33.0000] <annevk>
somebody else's problem until I'm through with waiting

[15:18:49.0000] <sicking>
annevk: it might depend on if it's a tablet or cellphone

[15:19:09.0000] <sicking>
annevk: since tablets are usually held in landscape mode, but cellphones in portrait mode

[15:19:33.0000] <sicking>
annevk: i only tried safari on iphone vs. "browser" on android tablet

[15:19:42.0000] <TabAtkins>
annevk: What are the display-related bits?

[15:22:20.0000] <gsnedders>
Hixie: http://software.hixie.ch/utilities/js/live-dom-viewer/saved/1423 gives Internal Error.

[15:22:40.0000] <Hixie>
what did you do?!

[15:22:47.0000] <gsnedders>
No idea.

[15:22:51.0000] <Hixie>
that's impressive!

[15:23:29.0000] <gsnedders>
Hixie: Really, I just pressed save. :P

[15:23:58.0000] <gsnedders>
Hixie: http://pastebin.com/AMWc0HKw

[15:24:34.0000] <Hixie>
likely story

[15:25:14.0000] <Hixie>
wtf

[15:26:15.0000] <Hixie>
brb will fix

[15:28:34.0000] <zewt>
sicking: fwiw, i very often hold my phone landscape (keyboard is much easier to use that way and switching back and forth is laggy on android)

[15:29:31.0000] <Hixie>
gsnedders: looks like an apache bug. your test was just too long.

[15:29:38.0000] <Hixie>
gsnedders: i'm trying an alternative approach.

[15:34:10.0000] <jarek>
why <text> element was introduced in SVG? How is that better than using HTML via foreignObject?

[15:34:35.0000] <TabAtkins>
jarek: That was *years* ago.

[15:34:36.0000] <jarek>
is it possible that text will become obsolete just like SVG fonts?

[15:34:46.0000] <jarek>
TabAtkins: 1999, right?

[15:34:53.0000] <TabAtkins>
Sometime around then, yeah.

[15:34:54.0000] <heycam>
no I think we will keep <text> in SVG, because it is far more convenient to include a line of text than going to a <foreignObject>

[15:36:04.0000] <heycam>
I mean it's a shame that <foreignObject> is required to include HTML

[15:36:24.0000] <heycam>
but I think it will be difficult at this point to allow HTML in SVG more directly than via <foreignObject>

[15:36:29.0000] <jarek>
yeah, SVG feels so decoupled from HTML

[15:36:32.0000] <TabAtkins>
I think we should keep trying!

[15:36:46.0000] <TabAtkins>
<svg><g><p>Some text!</p></g></svg> would be nice.

[15:37:06.0000] <heycam>
it sure would! I worry that the html parser is what stops us improving things like this

[15:37:26.0000] <TabAtkins>
Not necessarily.  It's still *possible* to change the HTML parser for high-value causes.

[15:37:34.0000] <TabAtkins>
We're doing it as part of Web Components, frex.

[15:37:38.0000] <TabAtkins>
To handle <template>.

[15:37:39.0000] <heycam>
oh really, huh

[15:37:51.0000] <heycam>
ok well I will keep that in mind

[15:37:53.0000] <annevk>
TabAtkins: the ::cover stuff or whatever it ends up being

[15:38:00.0000] <annevk>
TabAtkins: hober knows more

[15:38:03.0000] <TabAtkins>
So you can do things like <template><tr>...</tr></template> without that getting fixed up.

[15:38:10.0000] <heycam>
I see

[15:38:33.0000] <TabAtkins>
annevk: Okay.  I'm in the process of writing an updated Display spec, so I'd like to see if I need to add anything else.

[15:41:38.0000] <Hixie>
gsnedders: ok, fixed

[15:41:55.0000] <Hixie>
as a bonus i finally made the live dom viewer not document.write() it's url

[15:42:06.0000] <Hixie>
so now it should work on all the browsers with those annoying xss filters

[15:42:24.0000] <TabAtkins>
*Thank you*

[15:46:51.0000] <zewt>
ugh, ArrayBufferView constructors make a copy when passed another view, and only actually create a *view* when passed an ArrayBuffer? what horrible, mind-shattering drugs were they on?

[15:49:08.0000] <annevk>
TabAtkins: well I guess the idea is to having something that covers both <dialog> and fullscreen

[15:49:17.0000] <annevk>
TabAtkins: I'm not sure what that is though

[15:49:23.0000] <TabAtkins>
Yeah, me neither.

[15:49:34.0000] <Hixie>
TabAtkins: we should get hober and have lunch

[15:49:45.0000] <TabAtkins>
Sounds good.

[15:49:46.0000] <Hixie>
TabAtkins: figure out what needs to happen for these three specs to work together

[15:49:52.0000] <Hixie>
hober: you around?

[15:50:26.0000] <Hixie>
hober, TabAtkins: i can do tomorrow or wednesday, i'm out thursday and friday

[15:50:57.0000] <abarth>
Hixie: What do you think about exposing parent.location.origin across origins?  Specifically, letting a frame see the origin of all the frames that contain it

[15:52:01.0000] <abarth>
Hixie: There are folks that want to do different things depending on who contains them.  They can use postMessage today to coordinate, but that requires the containers to run code in the parent to coordinate

[15:53:48.0000] <Hixie>
going up the chain seems safe

[15:54:19.0000] <Hixie>
going down seems dodgy, consider a case like a site bank.com where you configure what your bank is so you go to bank.com and it redirects you to your bank

[15:54:29.0000] <Hixie>
now i just have to iframe bank.com to find out the user's bank

[15:54:54.0000] <Hixie>
better example of that would be something like livejournal, which has per-user subdomains

[15:55:26.0000] <Hixie>
or a corp url redirector, where being able to read the origin would expose a lot of internal hostnames

[15:55:28.0000] <abarth>
yeah, you wouldn't want to expose the origin of random frames

[15:55:46.0000] <Hixie>
but going up seems fine, sure

[15:55:56.0000] <Hixie>
it'll be a pain to implement, i imagine

[15:56:03.0000] <Hixie>
i think it might be better to expose as location.parentOrigin

[15:56:12.0000] <Hixie>
than parent.location.origin

[15:56:22.0000] <abarth>
that's an interesting idea

[15:56:42.0000] <Hixie>
less likely to misimplemented, too

[15:57:12.0000] <dave_levin>
abarth: It has the nice side benefit that one can now hide ones origin and iframe if you really want to

[15:57:20.0000] <dave_levin>
abarth: Using two iframes

[15:58:19.0000] <abarth>
yeah.  thanks for the gut check.  I'll send an email to the list with more information about the use cases, etc

[16:06:41.0000] <zewt>
i don't think there was ever any reason to have an ArrayBuffer type at all; could have just made objects return an Int8Array and not have a magical typeless object

[16:07:15.0000] <zewt>
welcome to the future, where we still have crappy apis being permanently glued to the platform without any real review

[16:12:08.0000] <Philip`>
As far as I'm aware, it's not like the WebGL people were trying to work in secret - they had a use case, so they came up with a solution, and people outside the community were aware of it but didn't bother commenting on it (other than saying "the ES guys have been looking into this for years, if you wait a few more years they might agree on something that might be suitable"), so they stuck with it, and a year later it was implemented everywhere

[16:13:33.0000] <zewt>
clearly, something went wrong

[16:14:20.0000] <kennyluck>
It probably started to go wrong when Microsoft decided to make IE free.

[16:16:00.0000] <Philip`>
I guess what went wrong is that the people who could have given useful comments didn't give comments promptly, so they missed the chance to fix it in time

[16:16:30.0000] <zewt>
was it ever raised for review on whatwg/webapps?

[16:16:41.0000] <zewt>
(saying "we're doing this thing, subscribe to webgl-public if you want to talk about it" isn't good enough)

[16:17:31.0000] <zewt>
<- just frustrated that it has such seemingly obvious warts, it's become an infrastructural API, and now we're stuck with the warts forever

[16:21:18.0000] <Philip`>
http://www.w3.org/mid/4B217A6B.8070905⊙mc

[16:22:42.0000] <Philip`>
(People paid more attention to public-html back then)

[16:33:40.0000] <kennyluck>
Philip`, did anything happen to public-html in the meanwhile?

[16:34:24.0000] <TabAtkins>
kennyluck: It was infested by process trolls and taken over by noise.

[16:34:36.0000] <TabAtkins>
See: every single message about longdesc, ever.

[16:36:16.0000] <kennyluck>
Huh.

[16:38:27.0000] <TabAtkins>
The worst part is that I know the a11y people *mean* well, they just put blinders on when talking about certain topics.

[16:39:16.0000] <TabAtkins>
They have a mysterious and total blindness about the "longdesc is completely polluted and useless" studies, and insist on trying to either pretend that it's perfectly okay, or that it will be okay *this time* if they just give it a different name.

[16:40:13.0000] <zewt>
TabAtkins: everyone means well

[16:40:23.0000] <zewt>
(perhaps excluding DRM folk)

[16:40:28.0000] <kennyluck>
lol

[16:40:40.0000] <zewt>
(wasn't a joke, heh)


2012-03-27
[17:01:21.0000] <zewt>
Philip`: asking for commentary on WebGL isn't quite the same as asking for it on typed arrays, either

[18:49:28.0000] <miketaylr>
abarth: do you know if anyone has tried to contact winktoolkit people?

[18:49:45.0000] <miketaylr>
i've worked with them in the past on some compat stuff

[18:49:56.0000] <abarth>
miketaylr: nope, i just saw the bug report today

[18:50:22.0000] <miketaylr>
k, i'll email the guy and at least point him to the discussion

[20:40:55.0000] <smaug____>
volkmar: ping

[20:41:24.0000] <smaug____>
volkmar: could you ask someone managing moznet to allow more connections from the hotel

[20:44:37.0000] <smaug____>
or gavin or ehsan

[20:44:52.0000] <ehsan>
I don't have control over moznet

[20:45:07.0000] <smaug____>
ehsan: could you perhaps ping someone

[20:45:38.0000] <ehsan>
smaug____: I only know gavin

[20:45:44.0000] <ehsan>
don't know anybody else with the privs :/

[20:46:31.0000] <smaug____>
/me files a bug to fix the situation

[20:46:33.0000] <ehsan>
smaug____: fwiw, I can't get on moznet myself :(

[20:46:42.0000] <smaug____>
oh

[20:48:39.0000] <volkmar>
I will ask on #developers

[20:49:25.0000] <gavin>
I can't do that myself

[20:49:27.0000] <gavin>
file a server ops bug

[20:51:25.0000] <smaug____>
volkmar: ehsan bug 739516

[20:51:38.0000] <ehsan>
smaug____: thanks

[20:53:50.0000] <volkmar>
/me is so glad to use his server to connect to IRC :)

[21:15:11.0000] <zcorpan>
annevk: don't you mean s/non-streaming/streaming/ ?

[21:15:19.0000] <zcorpan>
oh wait

[21:18:20.0000] <zcorpan>
annevk: didn't we agree on having the non-streaming api on string/arraybuffer?

[21:53:02.0000] <zewt>
zcorpan: no reason to do that

[21:53:24.0000] <zewt>
i mean, there's no benefit to having separate streaming and non-streaming apis

[21:54:47.0000] <zewt>
turning new TextEncoding('foo').encode(s) into s.encode('foo') is really not much of a win for having more API

[21:55:30.0000] <zewt>
s/Encoding/Encoder/

[21:55:54.0000] <zewt>
bed

[22:21:02.0000] <zcorpan>
Hixie: https://www.w3.org/Bugs/Public/show_bug.cgi?id=16524 is about recent canvas stuff

[22:27:41.0000] <Sirisian>
He might not be awake

[22:28:23.0000] <Sirisian>
If Hixie is then I forgot to ask him about this: https://www.w3.org/Bugs/Public/show_bug.cgi?id=11517

[22:56:13.0000] <zcorpan>
so apparently there's no spec anywhere saying how percentage heights work inside tables

[22:56:16.0000] <zcorpan>
yay!

[01:12:19.0000] <MikeSmith>
http://lists.w3.org/Archives/Public/public-iri/2012Mar/0070.html

[01:12:36.0000] <MikeSmith>
[[

[01:12:38.0000] <MikeSmith>
RFC format:   There is ongoing developing some tooling and workflow which will allow us

[01:12:38.0000] <MikeSmith>
   to generate versions of our internet drafts and RFCs which have HTML and

[01:12:39.0000] <MikeSmith>
   PDF alternatives.

[01:12:40.0000] <MikeSmith>
]]

[01:13:32.0000] <MikeSmith>
to generate HTML versions

[01:14:13.0000] <MikeSmith>
I wonder how that's different from the generated HTML that tools.ietf.org already has

[01:15:18.0000] <MikeSmith>
and I wonder in which decade it might actually happen that the sources are maintained in HTML and the plain-text generated from that

[01:15:39.0000] <MikeSmith>
readability WTF

[01:16:08.0000] <annevk>
still no update on whether Unicode is okay huh?

[01:16:15.0000] <annevk>
IETF is hilarious

[01:16:31.0000] <MikeSmith>
there's still a few years left in this decade

[01:16:41.0000] <MikeSmith>
this is like the meeting of the Ents man

[01:17:00.0000] <MikeSmith>
I don't mean this particular message

[01:18:30.0000] <MikeSmith>
large irony here about multiple nit-picking editorial bugs filed against HTML spec and other W3C specs about "readability" issues

[01:20:01.0000] <MikeSmith>
as Jesus said, "wilt thou say to thy brother, Let me pull out the mote out of thine eye, and, behold, a beam is in thine own eye"

[01:47:28.0000] <Velmont>
Hmmm. Having all the other tests reside inside one test that only does setup seems to be a quite nice way to do tests.

[01:48:39.0000] <Velmont>
Looking at http://w3c-test.org/webapps/WebStorage/tests/submissions/Infraware/storage_local_key.html -- seems a nice way to do it.

[01:53:59.0000] <MikeSmith>
http://tools.ietf.org/html/draft-montenegro-httpbis-speed-mobility-00

[01:54:47.0000] <MikeSmith>
see the parts where is says "Same SPDY" and the parts where is doesn't

[01:54:57.0000] <MikeSmith>
e.g., "It would maintain the integrity of the layered architecture."

[01:55:29.0000] <MikeSmith>
implication being that SPDY does not "maintain the integrity of the layered architecture"

[01:57:31.0000] <MikeSmith>
also, see the one about "Protect our precious bodily fluids."

[01:58:43.0000] <annevk>
layered architecture sounds painful

[01:59:28.0000] <MikeSmith>
wow, it took 6 people to write this draft

[01:59:52.0000] <hsivonen>
just what everyone needed: SDPY getting the Web Socket treament at the IETF

[02:00:16.0000] <annevk>
MikeSmith: to write an introduction to the topic you mean

[02:00:39.0000] <annevk>
MikeSmith: section 2 is non-existent, and 3 and 4 are boilerplate :)

[02:01:38.0000] <annevk>
nice tweet hsivonen

[02:01:54.0000] <MikeSmith>
it's not a spec... it's not a requirements document... it's...

[02:02:30.0000] <MikeSmith>
mini-manifesto?

[02:03:26.0000] <MikeSmith>
is this mostly intended as implicit criticism of SPDY or what?

[02:03:37.0000] <zcorpan>
Velmont: i think you're supposed to use setup(func) and ideally let the script produce the same amount of tests even if the setup fails

[02:04:10.0000] <Velmont>
zcorpan: Yes, that's what I've been doing a few times before. But it's not always easy to make small unit tests fail like that.

[02:04:38.0000] <Velmont>
zcorpan: Quite often the error condition is also "timed out" which is quite slow.

[02:05:45.0000] <hsivonen>
any word from Apple or Opera about SPDY?

[02:06:10.0000] <zcorpan>
Velmont: i don't see how a wrapper test helps with timed out :-)

[02:07:15.0000] <Velmont>
zcorpan: Well, -- the first test will most probably fail, -- but the rest 20 tests will then never actually get created, -- so it will help not having all of those time out.

[02:07:23.0000] <annevk>
hsivonen: it's on our roadmap, though I suspect we might delay implementing if the IETF gets a go at it because we'd just lose a lot of time

[02:07:31.0000] <hsivonen>
gotta love it when a user with Firefox issues has 15 add-ons

[02:07:39.0000] <Velmont>
zcorpan: Well, -- not really a big problemo, -- but I'm always looking at different ways of writing the tests.

[02:07:43.0000] <hsivonen>
I guess I'm going to install those add-ons in a VM...

[02:08:07.0000] <MikeSmith>
e.g., does "Any HTTP 2.0 proposal should leverage the reliable transport and not attempt to replicate functions generally accepted as addressed by other layers." there because they see SPDY   as  replicating functions of other layers?

[02:08:09.0000] <hsivonen>
annevk: yay IETF for delays

[02:08:50.0000] <hsivonen>
MikeSmith: could have something to do with SPDY blending the TLS and HTTP layers

[02:08:53.0000] <annevk>
i was like "hurray" when I saw the HTTP 2.0 stuff come by

[02:08:55.0000] <zcorpan>
Velmont: not creating the other tests probably confuses spartan. i'm not sure but i think the framework doesn't wait for tests to time out if the setup fails

[02:09:02.0000] <MikeSmith>
hsivonen: OK

[02:09:49.0000] <annevk>
then made a little dance for being only tangentially involved in network standards

[02:10:20.0000] <hsivonen>
also, part of why SPDY works so well is that the TCP is a leaky abstraction, so multiplexing in SPDY is more efficient that letting IP multiplex multiple TCP connections

[02:10:46.0000] <MikeSmith>
I see

[02:11:11.0000] <hsivonen>
but AFAICT, SPDY does use TCP for "reliable transport"

[02:34:16.0000] <zcorpan>
iirc timj said he had tried to argue in Kronos that exposing endianness differences wouldn't work on the Web, but he was alone in the group to think so

[02:36:48.0000] <annevk>
:(

[02:37:20.0000] <annevk>
I have the impression he's often the sole sane voice there

[02:37:55.0000] <annevk>
I wonder how many years of experience the other people in that group have with browsers

[02:47:39.0000] <Velmont>
Ms2ger: Hey, -- for testharness.js;  I'm translating old NETWORK_ERR etc from the testcases to NetworkError. And then check if the implementation threw a newstyle DOMException (by checking if it has a type), if so: check that type == NetworkError, and code = 27.  --  If old-style, only check for the code.

[02:48:03.0000] <Velmont>
Ms2ger: Is the approach fine? https://github.com/jgraham/testharness.js/pull/1

[02:48:58.0000] <Velmont>
hrmf

[03:00:01.0000] <hsivonen>
aargh. what's the deal with bank sites having bad HTML

[03:00:42.0000] <hsivonen>
86 blank lines before the doctype. looking good.

[03:01:06.0000] <hsivonen>
very long meta keywords. check

[03:01:21.0000] <hsivonen>
coverage: global

[03:01:37.0000] <hsivonen>
money well allocated to SEO instead of reasonable HTML

[03:02:11.0000] <hsivonen>
ancient Netscape 4.x window resize fix

[03:02:22.0000] <hsivonen>
an empty script

[03:12:03.0000] <hsivonen>
cool. Hixie has actually explained what I need to do to fix this bank: http://lists.whatwg.org/htdig.cgi/whatwg-whatwg.org/2012-February/034869.html

[04:02:51.0000] <annevk>
two more decoders to go

[04:03:02.0000] <annevk>
actually, make that 3

[04:03:12.0000] <annevk>
big5, big5-hkscs, and gbk

[04:06:52.0000] <zcorpan>
/me wonders if it's reasonable to not support the unitless length quirk in calc()

[04:08:26.0000] <zcorpan>
seems mozilla already does that

[04:09:30.0000] <zcorpan>
webkit also

[04:13:07.0000] <zcorpan>
which makes sense, since calc can use numbers e.g. 2 * 5px

[04:28:20.0000] <zcorpan>
fixed

[04:46:30.0000] <MikeSmith>
/me wonders what encoding the #entmoot channel uses

[04:46:39.0000] <zcorpan>
hmm, my fix was wrong

[04:51:09.0000] <Philip`>
MikeSmith: I thought Entish was a non-written language (since if it was written then it could be read too hastily, and also trees don't have hands), so it's probably something like a very-low-frequency Vorbis encoding

[04:51:23.0000] <MikeSmith>
heh

[04:51:35.0000] <MikeSmith>
that explains the humming

[04:54:28.0000] <Philip`>
Oh, Wikipedia says I'm wrong - they adopted Quenya later, so presumably it'd be written in standard tengwar

[04:59:22.0000] <MikeSmith>
Philip`: so there is yet hope

[05:04:46.0000] <MikeSmith>
can somebody look at http://platform.html5.org/ in Chrome for me and tell me if rendering of the list in the Legend section is borked?

[05:16:00.0000] <Ms2ger>
MikeSmith, looks good, but the green flag seems a little wider than the rest

[05:18:03.0000] <MikeSmith>
Ms2ger: thanks

[05:34:14.0000] <annevk>
I think I can probably describe all encodings using this index concept

[05:34:32.0000] <annevk>
except perhaps for gb18030 as it is silly

[05:51:44.0000] <MikeSmith>
annevk: kindly please change the date on the diffs doc to March 29

[05:56:22.0000] <annevk>
so things are going done before the end of the month?

[05:56:31.0000] <MikeSmith>
yeah

[05:57:01.0000] <annevk>
how about we change html5-diff after the rest is done?

[05:57:19.0000] <annevk>
ah nm

[05:57:21.0000] <annevk>
i'll just do it now

[05:58:41.0000] <annevk>
MikeSmith: done

[05:58:52.0000] <MikeSmith>
arigatou

[06:08:47.0000] <annevk>
IANA is so crappy

[06:08:52.0000] <annevk>
http://www.iana.org/assignments/charset-reg/Big5-HKSCS has dead links

[06:09:06.0000] <annevk>
oh yeah, I should blame the group for maintaining that I guess, not "IANA"

[06:09:28.0000] <annevk>
otherwise someone might have a fit over the difference

[06:28:03.0000] <annevk>
hmm forgot hkscs is layered on top of big5

[06:28:40.0000] <annevk>
so big5-related stuff is pretty much a mess

[06:34:47.0000] <hsivonen>
time flies. the xtranormal Web Socket video is from December 2010

[06:36:51.0000] <annevk>
test

[06:37:34.0000] <annevk>
hmm so my connection is flaky, but not that flaky

[06:42:08.0000] <Ms2ger>
Velmont, your patch is on my todo list... I'll try to get to it tonight

[06:42:20.0000] <Ms2ger>
Sorry for the dealy

[06:42:24.0000] <Velmont>
:-)

[06:42:25.0000] <Ms2ger>
delay, even

[06:47:17.0000] <remysharp>
should I be using a <progress> element to indicate file upload, even though I know the total size before the file is sent (this is the bit that's confusing me in the spec)?

[06:52:19.0000] <annevk>
remysharp: yes

[06:52:44.0000] <annevk>
remysharp: that would be a determinate progress

[06:53:09.0000] <remysharp>
annevk: would it be fair to say that meter could go up and down, whereas progress can only go up?

[06:53:29.0000] <remysharp>
so I could (as the spec suggests) use meter to track disk space available

[06:55:02.0000] <annevk>
disk measurement is not some task that the user waits for

[06:55:17.0000] <annevk>
progress is related to some kind of activity, meter is just measuring things

[06:56:25.0000] <remysharp>
so, that's kind of a yes to my up/down analogy :) -- just makes it a little easier for me to remember

[06:56:42.0000] <remysharp>
I think I just saw an example of meter being used to measure activity in a google group

[06:56:54.0000] <remysharp>
which sounds right by my understanding now

[06:58:03.0000] <annevk>
yeah, I might temporal activity

[06:58:09.0000] <annevk>
meant damnit

[06:59:16.0000] <remysharp>
I liked my up/down thing - temporal reminds me of x-files for some reason :) (as requested, sense left at the door)

[06:59:48.0000] <annevk>
yeah dunno if up/down works in all cases, but it might

[07:00:41.0000] <remysharp>
I quietly suspect you're right

[07:03:30.0000] <annevk>
yay Orange

[07:03:38.0000] <annevk>
(WHATWG list has context)

[07:49:51.0000] <annevk>
hmm

[07:50:01.0000] <annevk>
both Opera and Chrome use surrogates for big5-hkscs

[07:50:03.0000] <annevk>
Gecko does not

[08:29:30.0000] <annevk>
you'd think that iterating over 20000 code points is not that hard

[08:29:58.0000] <annevk>
I guess it's not in benchmarks and that's why everything is slow

[08:34:41.0000] <annevk>
in IE they do indeed appear identical mappings

[08:35:00.0000] <annevk>
I guess the next step is some intersection research

[08:37:30.0000] <gsnedders>
annevk: Iterating over 20k codepoints is fairly quick. Doing stuff with them isn't.

[08:39:20.0000] <annevk>
good point

[09:17:04.0000] <dglazkov>
good morning, Whatwg!

[10:57:01.0000] <hsivonen>
is there a reference for Hixie's pre-IETF Web Sockets not having the problem with transparent proxies?

[11:05:43.0000] <Hixie>
what's "the problem with transparent proxies"?

[11:05:58.0000] <Hixie>
(there could be several)

[11:11:27.0000] <hsivonen>
Hixie: the proxy cache poisoning thing

[11:11:42.0000] <hsivonen>
Hixie: the one that was the big security thing at the IETF

[11:11:58.0000] <Hixie>
i'm not aware of a cache poisoning issue

[11:12:28.0000] <Hixie>
the thing that was a "big security thing at the IETF" as far as i can tell was a different thing for each person who thought there was a thing

[11:12:38.0000] <Hixie>
so that doesn't narrow it down for me :-)

[11:13:08.0000] <hsivonen>
Hixie: http://www.ietf.org/mail-archive/web/hybi/current/msg04744.html

[11:14:15.0000] <Hixie>
oh that's not necessarily cache poisoning. That's just the cross-protocol attack.

[11:14:45.0000] <Hixie>
my version of the protocol wasn't vulnerable to that because my protocol required sending what looked like two requests, the first one well-formed, and the second one noise

[11:15:24.0000] <Hixie>
and only if the two requests were treated as a single request by the proxy, and sent to the server together, and then the entire response sent back together as well, would the client send any more bytes

[11:17:25.0000] <Hixie>
(i never really understood why people were so suddenly concerned by that attack; by the time adam put out that paper, the issue had long been resolved in the spec)

[11:30:20.0000] <hsivonen>
oh. Chrome has migrated about:foo to chrome://foo vanity URLs

[11:30:22.0000] <hsivonen>
like Opera

[11:30:40.0000] <hsivonen>
except chrome: means something totally different in Gecko-based browsers

[11:43:30.0000] <jwalden>
that's probably better, actually; about:* has weird security properties, would be better if the privileged stuff that lived under there in Gecko were instead under a completely different protocol that were flat-out off-limits

[11:44:06.0000] <jwalden>
whether about:* could ever be made only the safe stuff in Gecko, tho, dunno

[12:43:53.0000] <Hixie>
TabAtkins: is 'image-rendering' gone?

[12:44:02.0000] <Hixie>
TabAtkins: (re https://www.w3.org/Bugs/Public/show_bug.cgi?id=12044#c2)

[12:53:41.0000] <annevk>
hsivonen: Hixie: I think the reason people were concerned is because nobody shipped or implemented the latest version of Hixie's spec, which was published just before the fork happened

[13:05:39.0000] <Hixie>
at least safari did

[13:05:51.0000] <Hixie>
but seems like implementing what i wrote would have been better than disabling it ;-)

[13:05:57.0000] <Hixie>
anyway that's history

[13:05:59.0000] <Hixie>
lunch!

[13:09:02.0000] <annevk>
no disagreement there

[13:14:36.0000] <karlcow>
http://inkdroid.org/journal/2012/03/27/cc0-and-git-for-data/

[13:18:27.0000] <hober>
Any comments on or suggestions for http://www.w3.org/html/wg/wiki/User:Eoconnor/ISSUE-200 before I send it in?

[13:24:24.0000] <annevk>
if we are going to revisit where <legend> can be used, we should use it for <details> and <figure> again...

[13:25:07.0000] <annevk>
"In fact, the author conformance restriction on <legend> *helps* authors to avoid butting heads with <fieldset>'s (unchangeable) weirdness." I think we can still make this better by describing the <fieldset> behavior in terms of some new CSS concept

[13:25:26.0000] <annevk>
but it looks more like UI design these days has no need for <fieldset>

[13:29:04.0000] <hober>
I'll add a note suggesting that those interested could propose 'some new CSS concept' to www-style; thanks

[13:35:59.0000] <TabAtkins>
Hixie: Punted to level 4.

[13:39:51.0000] <TabAtkins>
Are we generally against the init*Event functions?

[13:40:04.0000] <smaug____>
TabAtkins: yes

[13:40:07.0000] <smaug____>
in general

[13:40:16.0000] <smaug____>
not sure if there are some special cases

[13:40:44.0000] <smaug____>
(I think there aren't)

[13:41:29.0000] <TabAtkins>
What's the replacement?

[13:42:09.0000] <kennyluck>
constructors?

[13:42:15.0000] <TabAtkins>
That's what I thought.

[14:21:52.0000] <jgraham>
Yeah init*Event shouldn't be used in new features

[14:22:18.0000] <TabAtkins>
kk.  The question came up regarding initTransitionEvent

[14:30:12.0000] <jgraham>
TabAtkins: In unrelated news you now have me wondering about the biochemistry of the female reproductive system

[14:30:22.0000] <TabAtkins>
...

[14:30:23.0000] <TabAtkins>
How?

[14:30:53.0000] <jgraham>
http://twitter.com/#!/tabatkins/status/184523386486128641

[14:31:07.0000] <TabAtkins>
Ah, yes.

[14:31:17.0000] <TabAtkins>
The female reproductive system is slightly acidic.

[14:31:26.0000] <jgraham>
Ah

[14:31:37.0000] <TabAtkins>
Thus at least part of the taste.

[14:31:38.0000] <jgraham>
Oh, that's quite famous isn't it

[14:31:51.0000] <jgraham>
The acidity, not the taste

[14:31:56.0000] <jgraham>
Although probably that too

[14:32:28.0000] <TabAtkins>
I dunno if acid snatches are famous.

[14:34:42.0000] <jgraham>
I was under the vauge impression -- and this is very much not my specialist area -- that people who tried to closely monitor their reproductive cycle for one reason or the other took pH into account

[14:35:24.0000] <TabAtkins>
Oh, right.  Yes.

[14:35:31.0000] <TabAtkins>
That does vary across the cycle.

[14:50:36.0000] <jgraham>
Help, I have been on the internet too long. I see http://browserquest.mozilla.org/ and think of http://mozillaquest.com/

[14:51:28.0000] <jgraham>
(I assume one isn't supposed to think of that?!)

[15:08:45.0000] <Hixie>
http://www.w3.org/html/wg/wiki/ChangeProposals/notitle_captions#Details

[15:08:46.0000] <Hixie>
really?

[15:08:59.0000] <Hixie>
we're actually going to put an example in the spec _encouraging_ nested figures?

[15:15:08.0000] <nesta_>
Hixie hi?

[15:15:42.0000] <nesta_>
http://www.w3.org/html/wg/wiki/ChangeProposals/notitle_captions#Details

[15:16:27.0000] <nesta_>
cool! :)

[15:16:31.0000] <nesta_>
thnx!

[15:43:07.0000] <zewt>
ugh, File API added "oneTimeOnly" when nobody has actually defined that in any even vaguely meaningful way?

[15:43:19.0000] <zewt>
very poor

[16:24:05.0000] <Hixie>
woot, i finished canvas v5

[16:24:40.0000] <Hixie>
tomorrow i'll try to write replies to all the relevant e-mails and bugs

[16:25:27.0000] <TabAtkins>
Btw, thank you for the clearClip()!

[16:26:14.0000] <Hixie>
resetClip()?

[16:26:21.0000] <Hixie>
it was on the list of requests :-)

[16:26:41.0000] <TabAtkins>
Yeah.

[16:26:43.0000] <Hixie>
i added pretty much everything people asked for more than once and which didn't rely on infrastructre that didn't exist already

[16:27:05.0000] <Hixie>
(along with some infrastructure for the latter)

[16:27:12.0000] <Hixie>
(so that we can add them next time)

[16:27:51.0000] <Hixie>
TabAtkins: i'm gone the rest of the week as far as lunches go, and haven't been able to catch hober, but i'm free all next week so if you manage to catch him and convince him to come for lunch feel free to calendar me

[16:28:15.0000] <Hixie>
bbl

[16:29:27.0000] <TabAtkins>
kk


2012-03-28
[17:22:36.0000] <hober>
Hixie: here

[17:23:04.0000] <TabAtkins>
hober: Lunch sometime next week with Hixie and me (and tantek)?

[17:23:11.0000] <hober>
sure

[17:23:14.0000] <TabAtkins>
To talk about CSS and <dialog>/fullscreen?

[17:23:20.0000] <TabAtkins>
Kk, choose a date/place.

[17:23:27.0000] <hober>
i can head up to google, or i could host you guys here

[17:23:27.0000] <tantek>
sounds like a good plan.

[17:23:47.0000] <hober>
(i could also head to moz, of course)

[17:26:18.0000] <tantek>
I have a feeling I know where Hixie wants to eat lunch :)

[17:26:56.0000] <hober>
tuesday 3 april & thursday 5 april work for me

[17:27:08.0000] <TabAtkins>
Let's do Tuesday then.

[17:27:09.0000] <hober>
i guess monday would work as well for that matter

[17:27:11.0000] <hober>
ok

[17:29:16.0000] <hober>
noon? any particular google cafeteria?

[17:29:40.0000] <TabAtkins>
Dont' care that much.  Gotta get to my bus now, though, so I can't do any more planning tonight.

[17:29:52.0000] <hober>
k

[17:30:01.0000] <hober>
/me is already on my bus

[19:59:54.0000] <roc>
why don't people understand the little-endian typed arrays issue? it seems so obvious

[20:06:43.0000] <zewt>
seems like just kenneth who's digging in his heels

[20:07:33.0000] <Hixie>
roc: you mean the way that we've basically made the web little-endian?

[20:07:43.0000] <roc>
yes

[20:07:53.0000] <Hixie>
i pointed that out literally years ago

[20:07:58.0000] <Hixie>
nobody seemed to care then either

[20:08:07.0000] <roc>
I don't care

[20:08:10.0000] <zewt>
IMO, if he refuses to budge on this, someone should fork the typed array spec and fix it; this is too important to let it be broken by an inexperienced developer

[20:08:14.0000] <roc>
not caring is the correct response.

[20:08:53.0000] <Hixie>
seems kinda short-sighted but certainly making it little-endian explicitly would be better than making it machine-endian specific

[20:09:17.0000] <zewt>
that's what's going to happen anyway (if a real big-endian browser ever actually exists, which may never happen)

[20:09:26.0000] <Hixie>
(i don't know what else we could do; asking authors to check the endianness and byte swap themselves is a non-starter0

[20:09:31.0000] <Hixie>
s/0/)/

[20:09:46.0000] <zewt>
("real" meaning a nontrivial number of actual users use it, and it actually has modern API support, so this issue would have to be dealt with)

[20:10:47.0000] <roc>
if someone wants to push a big-endian architecture in the future, they need to give it byte-swapping loads and stores

[20:11:08.0000] <roc>
that's not hard at all, and would make the performance argument irrelevant as far as I can tell

[20:11:29.0000] <Hixie>
would the JS have to be different?

[20:11:47.0000] <zewt>
the performance argument is laughable

[20:12:17.0000] <roc>
Hixie: no, I think a big-endian machine could emulate little-endian behavior as far as JS could observe, quite easily

[20:12:34.0000] <zewt>
it goes like this: "every web developer should jump hoops for an optimization on a system that doesn't exist, may never exist, and which may not be a performance issue even if it ever does exist"

[20:12:59.0000] <roc>
:-)

[20:13:37.0000] <zewt>
Hixie: he's just saying (I think) that views would always be little-endian, hiding the big-endianness (as it should be)

[20:13:42.0000] <roc>
of course, even if you could persuade them to jump through those hoops, they'll probably get it wrong by accident anyway and will never know

[20:13:45.0000] <zewt>
the short-term problem is that we need big-endian views as well

[20:14:17.0000] <zewt>
and this make-believe of pretending views are native-endian means it's hard to get them

[20:14:18.0000] <Hixie>
so long as we're not exposing the machine's actual endianness, i don't really care what the api is

[20:14:28.0000] <Hixie>
native-endian just isn't workable

[20:14:32.0000] <zewt>
we all agree :)

[20:14:45.0000] <Hixie>
since there's no real big endian cpus out there, though, it doesn't much matter what the spec says

[20:14:57.0000] <zewt>
it's just the typed array editor who's (literally) refusing to even discuss it

[20:15:04.0000] <Hixie>
it'll be little-endian de facto

[20:15:08.0000] <zewt>
i know :)

[20:15:19.0000] <Hixie>
so why do you think the spec needs forking?

[20:15:34.0000] <zewt>
1: having a spec that's wrong is bad, and needs to be fixed, and 2: we need big-endian views, not just (de-facto) little endian views

[20:17:05.0000] <zewt>
but since the editor is pretending views aren't little endian, there's no way to get him to add big-endian oens

[20:17:08.0000] <zewt>
also ones

[20:17:49.0000] <roc>
I will attempt to reason with him

[20:18:20.0000] <zewt>
i don't think i can write a diplomatic mail at the moment since his reply irritated me so much ("this won't be changed, no matter what arguments anyone gives"--really?), so I'm not going to reply tonight

[20:18:55.0000] <Hixie>
just implement what you want, the spec will follow

[20:20:04.0000] <zewt>
i suppose for now I'll just suggest in the encoding API thread that it just make up its own big-endian view type; that's lame, though

[20:28:00.0000] <Sirisian>
Hixie, Are you busy?

[20:28:20.0000] <Hixie>
have to be offline every few minutes for a bit but if you don't mind occasional latency i'm around

[20:28:27.0000] <Sirisian>
Did you ever have a chance to look at this: https://www.w3.org/Bugs/Public/show_bug.cgi?id=11517 I replied to it a while back. not sure if the bug tracker sends out emails for replies to resolved bugs. I know it kind of seems unintuitive bug I think canvas could do well to implement simpler rendering methods that are capable of being more heavily optimized (that is no transforms). This goes along with the stencil operation bu

[20:28:27.0000] <Sirisian>
g. (I was going to post, but I accidently deleted a post I wrote a while ago that was basically using createImageData to make a binary stencil then allowing drawImageData to set it allowing for extremely optimized rendering). This original one: https://www.w3.org/Bugs/Public/show_bug.cgi?id=8396

[20:28:36.0000] <Sirisian>
I took that as a yes. :)

[20:29:53.0000] <Hixie>
i generally go through all the feedback (1000s of e-mails and 100s of bugs) on a first-come-first-served basis

[20:29:59.0000] <Hixie>
so i'm sure i'll get to the bug in time

[20:30:11.0000] <Hixie>
looking at it quickly now i see no clear indication of what you want me to do though

[20:30:14.0000] <Sirisian>
ah okay. No rush.

[20:33:02.0000] <variable>
/me wonders if any browser vendor would consider adding an option to ignore autocomplete=off 

[20:41:58.0000] <Hixie>
Sirisian: if you want me to do something you'll have to make a clear statement in the spec, or when i do get to it i'll probably just mark it needsinfo :-)

[20:42:10.0000] <Sirisian>
I'm thinking

[20:47:13.0000] <Sirisian>
drawImageData would just render without transforms taking in a raw ImageData object and only reference binary alpha (no complex blending is possible) and can optionally reference a set stencil buffer (another ImageData object). Then if you want to use a stencil you'd create it like: var stencil = context.createImageData(width, height); An addition I'd like is the ability to define the number of channels, but it's not necessar

[20:47:14.0000] <Sirisian>
y. That would look like createImageData(width, height, channels) so a person can specify the number of channels to create. Same for getImageData(x, y, width, height, channels) where channels would be an array to select channels like [0] to create a 1 channel ImageData of just the red channel. Then you can bind a stencil via context.stencil = stencil; Then you can render using drawImage(ImageData) which the stencil would only

[20:47:14.0000] <Sirisian>
work with. When drawing it would only use the first channel of the ImageData rendering the pixel only if the stencil isn't 0 at that place. (Context2D's Clip would still exist for everything else). This allow implementors to specialize the rendering code for with and without a stencil.

[20:47:49.0000] <Sirisian>
I actually typed this all out before like a few weeks ago and closed my browser at work and forgot about finishing it.

[20:52:05.0000] <Hixie>
i don't understand

[20:52:07.0000] <Hixie>
what's the use case?

[20:54:55.0000] <Sirisian>
Mostly so you don't have to incur the cost of rendering to canvas objects when manipulating imageData then rendering it back to a form to get simple alpha blending. The stencil is just an optimized clip algorithm that would be useful when rendering textures in say a canvas UI.

[20:55:22.0000] <Sirisian>
s/form/canvas

[20:56:51.0000] <Sirisian>
I might have to think about it some more. I think I wrote something down a while ago that made me rethink the binary alpha blending.

[20:57:18.0000] <Hixie>
that's not a use case, that's a solution

[20:57:22.0000] <Hixie>
or an optimisation

[20:57:24.0000] <Hixie>
or something

[20:57:31.0000] <Hixie>
a use case is something like "i want a platform game"

[20:58:57.0000] <Hixie>
(and then you slowly work up to the actual concrete problem you've run into that canvas can't do yet)

[21:07:10.0000] <Sirisian>
Yeah I'll create some use cases and post a more thorough explanation tomorrow. Thanks for the feedback.

[21:07:39.0000] <Sirisian>
If I don't argue myself out of requiring it :P

[21:08:08.0000] <Hixie>
:-)

[21:25:25.0000] <Hixie>
how do i _create_ an svg matrix?

[21:25:30.0000] <Hixie>
SVGMatrix, that is

[21:25:34.0000] <heycam>
Hixie, you can't create a standalone SVGMatrix

[21:25:38.0000] <Hixie>
...oh.

[21:25:40.0000] <heycam>
they are only used as part of reflecting attributes

[21:25:49.0000] <heycam>
they will gain a constructor in SVG2

[21:25:54.0000] <Hixie>
well that's gonna put a crimp in my comprehensive use of it in canvas. :-P

[21:26:09.0000] <Hixie>
what's the constructor look like in svg2?

[21:26:30.0000] <heycam>
it's not there yet, but it will at the very least include [Constructor()]

[21:26:38.0000] <Hixie>
looks like all the methods on SVGMatrix return an SVGMatrix

[21:26:40.0000] <heycam>
and probably one that takes components

[21:27:00.0000] <heycam>
oh

[21:27:00.0000] <heycam>
wait

[21:27:02.0000] <heycam>
I misremembered

[21:27:34.0000] <heycam>
the way you create an SVGMatrix *currently* is: anSVGSVGElement.createSVGMatrix()

[21:27:51.0000] <heycam>
i.e. you need an <svg> DOM object around

[21:28:02.0000] <Hixie>
ah ok

[21:28:07.0000] <heycam>
of course that sucks, and that's why we'll have constructors soon

[21:29:25.0000] <Hixie>
seems a bit wasteful the way that if you want to create a matrix that skews, rotates, and scales, you need to create a whole bunch of temporaries

[21:30:59.0000] <heycam>
I think there are pros and cons for both designs -- certainly would be nice to be able to modify the existing matrix tho

[21:31:13.0000] <zewt>
both are pretty equally common in matrix apis, in my experience

[21:31:15.0000] <heycam>
I think dino's proposed matrix interface had methods that modify the existing matrix

[21:31:32.0000] <zewt>
with the return-a-new-matrix looking prettier and the in-place approach usually being faster

[21:31:44.0000] <zewt>
(whether it is in JS, on modern archs, i'm not sure)

[21:37:13.0000] <zewt>
i guess mobile means the ubiquity of "modern archs" are set back by a good number of years...

[21:49:22.0000] <rniwa>
yay! undomanager is finally on w3c repository :D http://dvcs.w3.org/hg/undomanager/raw-file/tip/undomanager.html

[21:49:49.0000] <Hixie>
publish an fsa :-)

[21:50:54.0000] <rniwa>
/me updates the date

[22:09:21.0000] <smaug____>
rniwa: so does the undomanager spec define how many managers per page?

[22:10:15.0000] <rniwa>
smaug____: it's supposed to be per document.

[22:10:31.0000] <rniwa>
smaug____: but i'm still not sure.

[22:10:38.0000] <rniwa>
smaug____: i'd have to talk with enrica about it at the contributor's meeting.

[22:11:03.0000] <rniwa>
smaug____: given that firefox and opera do this already, it might be okay for us to change our behavior

[22:11:18.0000] <rniwa>
smaug____: also from our last discussion, having one undo manager per editable field matches platform conventions

[22:11:33.0000] <Hixie>
on which platforms?

[22:11:34.0000] <smaug____>
Given this is a new API, I would prefer doing it right ;)

[22:11:37.0000] <rniwa>
smaug____: of course, you can also define undoScope attribute to define new undo manager

[22:11:58.0000] <rniwa>
smaug____: yes, that's why i haven't finalized it or started implementing it

[22:12:03.0000] <rniwa>
smaug____: editing is a mess

[22:12:09.0000] <rniwa>
smaug____: i don't want to create another mess :)

[22:12:09.0000] <smaug____>
it is

[22:12:22.0000] <rniwa>
Hixie: both Windows and Mac from what we could tell

[22:12:36.0000] <smaug____>
looks like the spec isn't too long... I'll try to look at is asap

[22:13:01.0000] <rniwa>
smaug____: yeah, I tried to be as brief as possible.

[22:13:05.0000] <Hixie>
rniwa: don't forget there are many other platforms that may act in weird ways... it's fine to optimise for windows and mac, but let's not make the other platforms impossible

[22:13:12.0000] <rniwa>
smaug____: as an implementor, i hate reading long specs

[22:13:28.0000] <rniwa>
Hixie: sure, but neither iOS or Android seem to support undos

[22:13:55.0000] <rniwa>
Hixie: what are other relevant platforms?

[22:14:13.0000] <smaug____>
linux

[22:14:16.0000] <Hixie>
some of the more esoteric platforms i was thinking of are those based on WordStar editing conventions, and Emacs. though in both cases i think they also do per-field undo.

[22:14:39.0000] <rniwa>
Hixie: i don't think emacs is a good example to follow here.

[22:14:49.0000] <Hixie>
it is if you're writing a web browser in emacs

[22:15:00.0000] <Hixie>
my point is "platform conventions" means the platform the browser is in, not "mac+windows"

[22:15:08.0000] <rniwa>
Hixie: sure.

[22:15:24.0000] <Hixie>
which today might usually be mac and windows, but the whole point of being platform agnostic is that we don't hardcode that kind of thing in :-)

[22:15:31.0000] <rniwa>
Hixie: but I don't think it makes sense for me to over-generalize the spec

[22:15:36.0000] <rniwa>
untile someone complains

[22:15:53.0000] <Hixie>
it'll be too late if you wait 20 years for a new platform to come along and someone to complain

[22:16:06.0000] <rniwa>
Hixie: i'm fine with making it platform dependent as well

[22:16:20.0000] <Hixie>
the web isn't supposed to be platform dependant

[22:16:22.0000] <rniwa>
Hixie: but then there will be script-visible behavior differences

[22:16:33.0000] <rniwa>
Hixie: huh? i don't understand your proposal then

[22:17:02.0000] <Hixie>
i'm saying the api should be designed such that it abstracts out platform differences and there are no script-visible differences regardless of what the platform's conventions are

[22:17:02.0000] <smaug____>
rniwa: I didn't see Hixie to propose anything ;)

[22:17:07.0000] <rniwa>
Hixie: we can either specify one behavior or make it platform dependent and define what behaviors are allowed

[22:17:19.0000] <rniwa>
Hixie: in this case, it's impossible.

[22:17:21.0000] <Hixie>
or at least, not any script-visible differences that can be distinguished from the user doing something

[22:17:28.0000] <Hixie>
rniwa: things that are impossible just take longer :-)

[22:17:46.0000] <rniwa>
Hixie: well but it is impossible in this case.

[22:18:06.0000] <rniwa>
Hixie: i don't want to explain all the details since i've already explained it once to smaug____ and Aryeh other day

[22:18:22.0000] <rniwa>
but there are many existing APIs that already expose this particular behavior.

[22:18:23.0000] <smaug____>
and to ehsan ...

[22:18:26.0000] <rniwa>
smaug____: right

[22:19:04.0000] <rniwa>
there's no point for us to add another layer of abstraction here since it's already visible to the scripts.

[22:19:28.0000] <smaug____>
but we can make the platform better now that we're adding a new API

[22:19:44.0000] <rniwa>
smaug____: we can specify it explicitly

[22:20:03.0000] <rniwa>
smaug____: or define possible behaviors that UAs can implement

[22:20:26.0000] <rniwa>
smaug____: the latter is harder but that'll let WebKit and Trident keep their current behavior

[22:20:29.0000] <MikeSmith>
rniwa: draft looks good -- I wouldn't worry much about adding more formatting to it at this point

[22:20:36.0000] <rniwa>
MikeSmith: ok.

[22:20:55.0000] <MikeSmith>
Hixie: fsa?

[22:21:02.0000] <Hixie>
final specification agreement

[22:21:06.0000] <MikeSmith>
ah

[22:21:19.0000] <Hixie>
the step in a CG that causes people to firmly commit their patents

[22:21:33.0000] <MikeSmith>
yeah

[22:26:35.0000] <MikeSmith>
Hixie: I just made date changes to the spec boilerplate

[22:27:05.0000] <MikeSmith>
so if you not otherwise planning to commit any more changes today, please push to W3C so that the W3C HTML and microdata specs get updated

[22:28:15.0000] <MikeSmith>
but if you are going to be committing again later today, then I'll just wait

[22:31:22.0000] <Hixie>
MikeSmith: roger, i can do that now

[22:33:04.0000] <Hixie>
MikeSmith: done

[22:33:09.0000] <MikeSmith>
thanks

[22:33:24.0000] <Hixie>
np

[22:41:22.0000] <rniwa>
Hixie, MikeSmith: speaking of which, I think our microdata APi implementation is near completion aside of vCard support and propertyNodeList

[22:41:32.0000] <rniwa>
(one of our contributors is working on propertyNodeList now)

[22:42:24.0000] <MikeSmith>
rniwa: excellent

[22:42:41.0000] <MikeSmith>
I think I'm cc'ed on the microdata api bug

[22:42:54.0000] <Hixie>
vcard support?

[22:43:07.0000] <MikeSmith>
rniwa: you know about http://w3c-test.org/html/tests/submission/Opera/microdata/001.html right?

[22:43:20.0000] <rniwa>
MikeSmith: oh nice

[22:43:44.0000] <rniwa>
MikeSmith: has opera implemented vcard support as well?

[22:43:54.0000] <MikeSmith>
dunno

[22:44:09.0000] <MikeSmith>
I don't know what implementing vcard support means ..

[22:44:27.0000] <MikeSmith>
seems maybe Hixie doesn't either

[22:44:37.0000] <MikeSmith>
with drag and drop?

[22:47:04.0000] <rniwa>
huh maybe it has been removed from the spec :\ ?

[22:47:20.0000] <rniwa>
MikeSmith: I swear the spec had mentioned vCard at some point

[22:47:30.0000] <MikeSmith>
yeah, it did

[22:47:43.0000] <rniwa>
MikeSmith: was it removed?

[22:48:04.0000] <MikeSmith>
it's in the whatwg spec

[22:48:26.0000] <MikeSmith>
http://www.whatwg.org/specs/web-apps/current-work/multipage/microdata.html#vcard

[22:49:05.0000] <MikeSmith>
ah

[22:49:06.0000] <MikeSmith>
http://www.whatwg.org/specs/web-apps/current-work/multipage/microdata.html#conversion-to-vcard

[22:49:23.0000] <rniwa>
MikeSmith: right, that.

[22:49:25.0000] <MikeSmith>
the conversion algorithm is what's being implemented for that I guess

[22:49:26.0000] <MikeSmith>
yeah

[22:49:27.0000] <Hixie>
i don't understand what a browser would do with that

[22:49:44.0000] <rniwa>
Hixie: yeah, i don't think it's a high priority for us

[22:49:51.0000] <rniwa>
Hixie: in theory, we could be exposing that using some UI

[22:50:00.0000] <rniwa>
Hixie: but as far as I know, it's not high priority for us

[22:50:07.0000] <rniwa>
so i've suggested not to proceed with that change for now

[22:50:24.0000] <rniwa>
especially since adding code like that to webkit could be rather controvertial

[22:51:19.0000] <Hixie>
i don't understand what it would mean for you to implement it

[22:51:27.0000] <Hixie>
it isn't intended for browsers to implement, certainly :-)

[22:51:41.0000] <rniwa>
Hixie: meaning that we would implement API for embedders to use.

[22:51:53.0000] <rniwa>
Hixie: webkit is also used by mail clients, etc... :)

[22:51:56.0000] <Hixie>
oh so not part of the web-exposed api?

[22:52:02.0000] <rniwa>
Hixie: oh, no.

[22:52:16.0000] <rniwa>
Hixie: i mean http://www.whatwg.org/specs/web-apps/current-work/multipage/microdata.html#conversion-to-vcard doesn't really define a web-facing API, does it?

[22:52:45.0000] <rniwa>
/me checks the spec.

[22:52:50.0000] <rniwa>
yeah i don't think it does

[22:52:53.0000] <matjas>
hsivonen: I was wondering why you use document.write("\u003C/script>") etc. on https://hg.mozilla.org/integration/mozilla-inbound/rev/e82fc6f3bceb

[22:53:25.0000] <Hixie>
rniwa: that's why i was confused :-)

[22:53:46.0000] <matjas>
hsivonen: "\u003Cscript>" could be just "<script>" and "\u003C/script>" could be just "<\/script>", right? or did gecko at some point implement HTML4 ETAGO parsing?

[22:54:55.0000] <rniwa>
Hixie: yeah, sorry for the confusing. i should have not really mentioned :)

[22:55:02.0000] <rniwa>
s/really //

[22:55:30.0000] <rniwa>
too much wekbit-ism there :P

[23:12:54.0000] <hsivonen>
matjas: Escaping < as \u003C is the single piece of advice that works for all problems.

[23:13:18.0000] <hsivonen>
matjas: even when I know I could use something else depending on context, I try to follow the advice I give to others

[23:13:44.0000] <matjas>
hsivonen: could you elaborate on that? what are the problems with using "</script>" and "<\/script>"?

[23:14:14.0000] <matjas>
i thought i had it figured out at http://mths.be/etago :(

[23:14:22.0000] <hsivonen>
matjas: "</script>" would break out of the script

[23:14:35.0000] <hsivonen>
matjas: "<\/script>" would work

[23:14:53.0000] <matjas>
yeah… so why bother with the Unicode escapes?

[23:14:58.0000] <hsivonen>
matjas: so I could have used "<\/script>" here

[23:15:14.0000] <hsivonen>
matjas: because they work for "\u003C!--" too

[23:15:28.0000] <matjas>
aah, there it is. that’s what i was missing, thanks!

[23:15:40.0000] <hsivonen>
matjas: and I want to give advice that works for both </script> and <!--

[23:15:51.0000] <hsivonen>
matjas: and JSLint hates "<\!--"

[23:16:13.0000] <matjas>
btw, '\x3c' == '\u003c' if you wanna be concise ;)

[23:16:26.0000] <hsivonen>
matjas: so my canned advice is "replace < with \u003C and you are safe"

[23:17:00.0000] <Hixie>
i advise "don't do anything that requires strings involving <!-- or </script>" :-P

[00:21:43.0000] <zcorpan>
jslint should just accept <\!--

[00:24:58.0000] <zcorpan>
/me fixed calc() and rgb() etc for hashless and unitless quirks

[00:36:11.0000] <hsivonen>
zcorpan: good luck getting JSLint changed to accept conforming JS

[00:41:44.0000] <zcorpan>
uh, maybe js*hint*

[00:49:39.0000] <zcorpan>
filed https://github.com/jshint/jshint/issues/499

[01:08:02.0000] <zcorpan>
annevk: -76 had the random bytes after the first "request", and that's what firefox and opera implemented

[01:08:50.0000] <annevk>
k

[01:09:53.0000] <zcorpan>
i guess there was no evidence that the random bytes helped mitigate the attack completely

[01:10:08.0000] <annevk>
poor bz

[01:10:38.0000] <zcorpan>
?

[01:10:56.0000] <annevk>
arguing with CP

[01:11:03.0000] <zcorpan>
oh

[01:14:54.0000] <roc>
hey, I started it

[01:16:12.0000] <tomasf>
yes you did; you invaded Poland

[01:19:17.0000] <wilhelm>
We were invited. Punch was served.

[01:23:27.0000] <annevk>
the whole typed array spec is kind of horrid

[01:23:41.0000] <annevk>
but then TC39 was way slow delivering something nice :(

[01:28:54.0000] <gsnedders>
/me wonders if TC39 should move to something easier to add new language APIs to, but then remembers that there are deliberately few APIs in ES iteslf

[01:29:56.0000] <hsivonen>
oh now it's harmful to speak the truth about aggregate Web developer behavior

[01:30:31.0000] <gsnedders>
?

[01:30:54.0000] <hsivonen>
gsnedders: see chuck@jumis on the whatwg list in the thread referred to above

[01:33:08.0000] <matjas>
good catch, zcorpan: https://github.com/jshint/jshint/issues/499

[01:33:43.0000] <matjas>
funny how everyone gave up on trying to get js_L_int fixed

[01:34:30.0000] <gsnedders>
Some people just are too self-righteous…

[01:35:00.0000] <annevk>
I think paying attention to him is the real problem here

[01:35:21.0000] <hsivonen>
seems like chuck@jumis is positing the existence of angel developers (per terminology defined in http://web.archive.org/web/20110501062035/http://diveintomark.org/archives/2004/08/16/specs )

[01:44:50.0000] <hsivonen>
now there's an XSD approximation of XHTML5: http://xmlmind.com/xhtml5_resources.shtml

[01:50:00.0000] <zcorpan>
matjas: i now filed https://github.com/douglascrockford/JSLint/issues/114 as well, let's see how it goes

[01:50:43.0000] <matjas>
prediction: Crockford will just close it without even commenting

[01:51:26.0000] <zcorpan>
hsivonen: the first paragraph inspires great confidence

[01:54:31.0000] <zcorpan>
translation to English: "XMLmind has developed an initial version of an experimental, self-contained, W3C XML Schema for XHTML 5 which is implemented to the obsolete W3C Working Draft 25 May 2011 and has several limitations inherent to W3C XML Schema."

[02:07:23.0000] <MikeSmith>
hsivonen: looking at that schema now

[02:10:51.0000] <MikeSmith>
doesn't do case-insensitive matching of enumerated attribute values

[02:20:32.0000] <zcorpan>
ok so it needed another sentence, "Hasn't been properly reviewed yet is probably riddled with bugs."

[02:22:21.0000] <MikeSmith>
hsivonen: that schema is also using built-in xsd datatypes in ways that are not faithful to the spc

[02:22:24.0000] <MikeSmith>
*spec

[02:22:39.0000] <hsivonen>
So Android Market was rebranded to Google Play in order to cover movies and music, but in Europe only Android apps are available?

[02:22:47.0000] <hsivonen>
MikeSmith: not surprising

[02:22:51.0000] <MikeSmith>
yeah

[02:22:59.0000] <MikeSmith>
(about it not being surprising)

[02:23:54.0000] <MikeSmith>
hsivonen: fwiw in Japan at least I think it does have movies and music

[02:24:00.0000] <MikeSmith>
though I've never bought any myself

[02:24:27.0000] <MikeSmith>
and that part of the service is Japan-specific

[02:25:16.0000] <MikeSmith>
as in if there isn't a Japanese companies with rights to sell some movie in Japan, I'm sure it won't be in there

[02:43:31.0000] <annevk>
hmm not sure how to proceed with the big5 mess

[02:43:38.0000] <annevk>
the datasets are quite far apart

[02:48:53.0000] <charlvn>
hsivonen: some guy in the netherlands was able to install some google play apps (music, books and movies) on one of his devices but not the other

[02:48:56.0000] <charlvn>
hsivonen: http://www.androidworld.nl/113707/google-brengt-google-play-meer-onder-de-aandacht/

[02:50:41.0000] <charlvn>
i'm more worried about what the heck is going on with that russian app; to think it's possible to cause that level of mayhem by using some application identifier...

[02:53:16.0000] <annevk>
out of the 19782 code points you can get, 6280 are distinct among the implementations

[02:56:47.0000] <hsivonen>
annevk: does any of them match some official truth from unicode.org?

[02:56:57.0000] <hsivonen>
them being the data sets

[02:57:13.0000] <hsivonen>
charlvn: what's "the russian app"?

[02:57:42.0000] <annevk>
19782 - 6280 prolly does

[02:57:50.0000] <annevk>
I'm assuming the rest are proprietary extensions

[02:59:17.0000] <annevk>
I just generated all possible "valid" lead/trail byte combinations and then let various browsers generate the code points for me

[02:59:37.0000] <charlvn>
hsivonen: http://www.theverge.com/2012/3/26/2904389/google-play-bug-russian-email-app-samsung-android-seven

[03:01:01.0000] <Ms2ger>
/me ignores the TypedArray thread

[03:30:00.0000] <karlcow>
hsivonen: another issue of css vendor, that I came across a few days ago. Archived HTML. Be

[03:30:00.0000] <karlcow>
* packages

[03:30:00.0000] <karlcow>
* epub

[03:30:00.0000] <karlcow>
* html emails

[03:30:00.0000] <karlcow>
* saved files as…

[03:30:01.0000] <karlcow>
all of these will never be updated.

[03:56:07.0000] <hsivonen>
karlcow: there's probably quite a bit of -webkit-CSS in epubs by now...

[03:57:00.0000] <karlcow>
yup and in emails

[03:57:57.0000] <hsivonen>
karlcow: mail client-generated emails or separately-authored advertising mail?

[04:05:26.0000] <Ms2ger>
localStorage.clear();

[04:05:29.0000] <Ms2ger>
w("foo" in localStorage);

[04:06:00.0000] <gsnedders>
Ms2ger: You will claim that that is always true in Opera.

[04:06:01.0000] <gsnedders>
Yes.

[04:06:03.0000] <gsnedders>
Known.

[04:06:09.0000] <Ms2ger>
Thanks

[04:06:20.0000] <karlcow>
hsivonen: mail client-generated email

[04:08:13.0000] <Ms2ger>
gsnedders, you know, a non-public BTS isn't too bad if someone can verify the existence of bugs from code snippets :)

[04:27:06.0000] <annevk>
giving times for meetings in something other than UTC when it's across country boundaries is just annoying

[04:31:46.0000] <annevk>
timezone boundaries*

[04:44:51.0000] <zcorpan>
annevk: about big5, just pick one (e.g. IE)

[04:46:51.0000] <annevk>
I guess I should have given some more data in that email

[04:47:24.0000] <zcorpan>
yeah i looked at the json file and didn't know what to do with it :-P

[04:47:49.0000] <annevk>
Personally I think IE would be fine too, but it maps an awful lot to PUA, which some people dislike; then there's the Firefox Taiwan team which provided custom mappings for Firefox which is radically different from most browsers, but they say works better...

[04:48:55.0000] <annevk>
If you have ideas on how to usually present the 6000 differences, they're welcome

[04:49:38.0000] <annevk>
maybe I should prefilter the lists and replace PUA with FFFD, and then count the differences again

[04:50:16.0000] <zcorpan>
if the firefox taiwan team have a mapping that works better, why not use that?

[04:51:39.0000] <annevk>
Firefox does not have majority market share

[04:52:30.0000] <annevk>
http://www.wantchinatimes.com/news-subclass-cnt.aspx?id=20110906000028&cid=1206 seems somewhat recent on that

[04:52:36.0000] <annevk>
which indicates it's mostly IE

[04:52:38.0000] <annevk>
and then Chrome

[04:54:13.0000] <annevk>
Chrome is pretty close to IE for big5

[04:54:17.0000] <annevk>
only 62 differences

[04:54:35.0000] <annevk>
but big5-hkscs has about 6000 differences

[04:54:47.0000] <annevk>
IE treats it as an alias for big5

[04:54:51.0000] <annevk>
afaict

[04:55:15.0000] <annevk>
that is, decoding as big5 and big5-hkscs gives identical arrays

[04:57:16.0000] <zcorpan>
how do the firefox taiwan team know that their mapping "works better"?

[04:58:18.0000] <annevk>
not sure

[04:58:18.0000] <annevk>
https://bugzilla.mozilla.org/show_bug.cgi?id=310299

[04:58:52.0000] <zcorpan>
i guess you should ask them :-)

[05:00:30.0000] <annevk>
basically Microsoft fucked Unicode

[05:00:49.0000] <annevk>
by supporting HKSCS via a font, for some set of their users

[05:01:24.0000] <annevk>
so if you install that font, big5 Hong Hong pages will look fine, but big5 Taiwan pages won't

[05:01:26.0000] <annevk>
or some such

[05:02:23.0000] <annevk>
all the other browsers have tried a different approach, but pages still declare the encoding incorrectly (big5 instead of big5-hkscs) so Hong Kong users either install extensions or manually override the encoding

[05:02:42.0000] <annevk>
this is what I read on the subject thus far

[05:03:13.0000] <annevk>
so you can't win

[05:03:36.0000] <annevk>
except by some expensive widespread evangelism maybe

[05:03:56.0000] <zcorpan>
so it seems to me that big5 and big5-hkscs should be aliases, but there should be two locale-specific encodings

[05:04:15.0000] <zcorpan>
one for hong kong and one for taiwan

[05:05:47.0000] <annevk>
that still doesn't help anyone else trying to read either

[05:05:57.0000] <zcorpan>
right

[05:05:58.0000] <annevk>
but that might be an improvement over the current situation

[05:07:46.0000] <zcorpan>
what do the extensions do? just override the encoding to one or the other?

[05:08:36.0000] <annevk>
http://www.google.com/support/forum/p/Chrome/thread?tid=466c210af3fb6d08 suggests so

[05:08:47.0000] <annevk>
which basically means they want to change the underlying table

[05:10:53.0000] <annevk>
PUA count:

[05:10:54.0000] <annevk>
opera-hk 0

[05:10:55.0000] <annevk>
firefox 290

[05:10:55.0000] <annevk>
chrome 6217

[05:10:55.0000] <annevk>
firefox-hk 2985

[05:10:55.0000] <annevk>
opera 0

[05:10:55.0000] <annevk>
chrome-hk 664

[05:10:55.0000] <annevk>
internetexplorer 6217

[05:12:19.0000] <annevk>
now PUA, FFFD:

[05:12:20.0000] <annevk>
opera-hk 0 1199

[05:12:20.0000] <annevk>
firefox 290 0

[05:12:20.0000] <annevk>
chrome 6217 62

[05:12:20.0000] <annevk>
firefox-hk 2985 0

[05:12:20.0000] <annevk>
opera 0 6008

[05:12:20.0000] <annevk>
chrome-hk 664 751

[05:12:21.0000] <annevk>
internetexplorer 6217 0

[05:14:21.0000] <hsivonen>
seems odd that totally different mappings in a non-market leader could work better. very odd. URL for the "works better" claim?

[05:14:33.0000] <zcorpan>
running a heuristic detector isn't reliable enough for people in hong kong or taiwan, i guess?

[05:14:43.0000] <annevk>
hsivonen: see the bugzilla URL above

[05:15:34.0000] <annevk>
the IE situation is basically that IE always uses the same mapping (to PUA) and then the font on Windows does the rest

[05:16:03.0000] <annevk>
it seems Chrome has better interoperability with IE there for at least big5

[05:16:28.0000] <zcorpan>
but the font being present is acting like an override to the "other encoding", right?

[05:16:51.0000] <annevk>
no, it just shows different glyphs

[05:17:00.0000] <annevk>
the byte -> code point mapping is the same

[05:17:04.0000] <annevk>
it's like wingdings

[05:17:09.0000] <annevk>
a terrible solution

[05:17:30.0000] <zcorpan>
sure, i mean both taiwan users and hong kong users don't use the same font, right?

[05:17:41.0000] <annevk>
yeah

[05:17:59.0000] <hsivonen>
annevk: oh. IE depends on PUA fonts. I guess then different mapping might indeed be better

[05:18:30.0000] <annevk>
http://www.microsoft.com/hk/hkscs/

[05:20:39.0000] <annevk>
hsivonen: yeah dunno

[05:21:37.0000] <annevk>
hsivonen: IE still has insanely high market share there, reportedly pages rarely use the big5-hkscs label, and Chrome has the same mapping as IE for big5 (apart from 62 out of ~20000 code points)

[05:27:57.0000] <annevk>
hsivonen: it would probably be good to flag big5 usage in Validator.nu

[05:35:11.0000] <hsivonen>
annevk: I guess, yeah.

[05:35:18.0000] <hsivonen>
annevk: no idea what tables V.nu has...

[06:22:59.0000] <charlvn>
http://www.internetsociety.org/20th/defining-moments-internet

[06:26:13.0000] <dinesh___>
lol

[06:27:00.0000] <dinesh___>
i believe that there was no internet before "www", "tcp/ip", "dns", "emails", "arpanet", "emails" and perhaps even rfc

[06:28:03.0000] <dinesh___>
so perhaps search engines..

[06:28:52.0000] <zcorpan>
internet existed before www

[06:29:47.0000] <mainerror>
Before "Arpanet"!?

[06:29:52.0000] <dinesh___>
perhaps but that's not what most people think

[06:29:54.0000] <dinesh___>
;)

[06:31:01.0000] <zewt>
what, are you saying "internet" and "web" aren't the same thing

[06:31:04.0000] <zewt>
crazytalk

[06:31:22.0000] <zcorpan>
seems rfc1 is dated 7 april 1969

[06:31:47.0000] <zewt>
rfc1: "hello? is anybody out there?"

[06:33:06.0000] <zcorpan>
         [ This RFC was put into machine readable form for entry ]

[06:33:06.0000] <zcorpan>
         [ into the online RFC archives by Celeste Anderson 3/97 ]

[06:34:36.0000] <karlcow>
http://tools.ietf.org/html/rfc1

[06:36:30.0000] <karlcow>
not sure what it tells me, but I'm almost as old as the first RFC. dinosaur.

[06:45:33.0000] <zcorpan>
annevk: heavenly? yeah, maybe, dunno :-)

[06:47:17.0000] <annevk>
euh lol

[06:50:49.0000] <zcorpan>
hmmmm. calc() needs to support unitless. argh

[06:51:14.0000] <zcorpan>
er

[06:51:19.0000] <zcorpan>
i mean rect()

[07:03:33.0000] <annevk>
aah, The Economist finally caught up and disabled my online access

[07:04:38.0000] <annevk>
there's only a GBP 30 difference or so between online and online + print

[07:05:21.0000] <annevk>
a little less for the first year; is print distribution really that cheap, or is online covering the costs?

[07:17:24.0000] <karlcow>
annevk: the paper/delivery bill is certainly a small percentage of the salaries.

[07:23:46.0000] <annevk>
but is it only 30 per year per printed magazine

[07:23:59.0000] <annevk>
a little less even

[08:25:46.0000] <smaug____>
hmm, should I add EventReceiver

[08:33:41.0000] <karlcow>
http://www.w3.org/community/webapps-ui/

[08:43:13.0000] <annevk>
foolip: the arrays in big5.json are the code points found for these bytes:

[08:43:13.0000] <annevk>
while (leadbyte < (0xFE-0x81+1)):

[08:43:14.0000] <annevk>
    while (byte < (0xFE-0x40+1)):

[08:43:14.0000] <annevk>
        file.write(chr(leadbyte+0x81))

[08:43:14.0000] <annevk>
        file.write(chr(byte+0x40))

[08:43:14.0000] <annevk>
        if byte == 0x7E-0x40:

[08:43:14.0000] <annevk>
            byte += (0xA1 - 0x7F)

[08:43:15.0000] <annevk>
        byte += 1

[08:43:15.0000] <annevk>
    leadbyte += 1

[08:43:16.0000] <annevk>
    byte = 0;

[08:44:03.0000] <foolip>
annevk, as reported by charCodeAt I guess?

[08:44:05.0000] <annevk>
so 0x81 0x40 -> array[0]

[08:44:20.0000] <annevk>
foolip: almost

[08:44:29.0000] <annevk>
foolip: I combine surrogates

[08:45:10.0000] <annevk>
and for Opera I ignore a few code points less than 0x80 that follow a 0xFFFD

[08:45:34.0000] <annevk>
foolip: some stuff to get the data is here: http://dump.testsuite.org/encoding/big5/

[08:45:48.0000] <foolip>
annevk, ok, are the PUA points that are mapped not in the BMP, or is it just that some stuff maps to CJK C?

[08:46:53.0000] <foolip>
annevk, do you already have a hunch for how you're going to spec this, or is it all just broken?

[08:47:15.0000] <annevk>
foolip: I don't know for big5; ideally someone tells me

[08:47:20.0000] <annevk>
foolip: the PUA is all in BMP

[08:47:44.0000] <foolip>
annevk, have you looked at what mapping iconv uses?

[08:47:58.0000] <dglazkov>
good morning, Whatwg!

[08:48:23.0000] <gsnedders>
foolip: On what system?

[08:48:47.0000] <foolip>
gsnedders, for which question?

[08:49:00.0000] <annevk>
foolip: no, but I think that would be the same as Chrome here

[08:49:18.0000] <foolip>
annevk, oh, Chrome more or less uses iconv?

[08:49:20.0000] <annevk>
foolip: but maybe not, but I don't really care about non-browser consumers, they're likely even more wrong :)

[08:50:05.0000] <foolip>
Perhaps

[08:50:16.0000] <gsnedders>
foolip: iconv varying between POSIX impls

[08:50:51.0000] <foolip>
gsnedders, oh, then I mean the one in GNU libc I guess

[08:51:15.0000] <gsnedders>
/me was no idea whether OS X has uts iwb ub this case

[08:51:20.0000] <gsnedders>
*its own in

[08:51:26.0000] <foolip>
annevk,  mapping things to the PUA when they exist in Unicode proper seems worth avoiding, so some idea about what the compatible subset is would be sweet

[08:51:33.0000] <foolip>
Does Opera map to the PUA, for example?

[08:51:51.0000] <annevk>
no we don't

[08:52:15.0000] <annevk>
we map almost all of those to U+FFFD

[08:52:24.0000] <annevk>
apart from a few

[08:52:43.0000] <annevk>
big5 and big5-hkscs are also incompatible I'm told

[08:53:25.0000] <foolip>
As in, there are de-facto extensions to Big5 that conflict with Big5-HKSCS?

[08:54:24.0000] <annevk>
think so, not exactly sure how it relates to the standards

[08:54:37.0000] <annevk>
let me check our bug database, Peter explained somewhere

[08:55:07.0000] <foolip>
If IE is able to treat Big5 and Big5-HKSCS as synonyms it sounds like it's possible to sort out

[08:55:22.0000] <annevk>
foolip: see CORE-35726

[08:55:37.0000] <foolip>
Unless the horrible truth is that the same code points are used for different glyphs in popular fonts in Taiwan and Hong Kong :{

[08:55:47.0000] <annevk>
that's the thing

[08:55:57.0000] <annevk>
Microsoft ships HKSCS package for Hong Kong users

[08:56:02.0000] <annevk>
a package*

[08:56:15.0000] <annevk>
and that package includes different glyph mappings for some PUA code points

[08:56:38.0000] <foolip>
Ugh...

[08:56:48.0000] <annevk>
yeah, it's insane

[08:57:16.0000] <foolip>
Knowing which exact characters are in conflict would be useful

[08:58:11.0000] <Ms2ger>
Velmont, commented

[09:00:03.0000] <foolip>
annevk, from Peter's comments it looks like the conflicts are pretty trivial, where there exists duplicates in Unicode or at least very similar glyphs

[09:00:45.0000] <annevk>
http://coq.no/character-tables/chinese-traditional/en has some analysis, but not that much

[09:01:48.0000] <foolip>
annevk, I'd be happy to help out with this since I love both Chinese and Unicode, but it sounds like right now you don't really know where to start?

[09:03:49.0000] <annevk>
if we assume Microsoft is the dominant force I guess what you want is a) the difference in glyph mapping between users with and without the HKSCS plugin and b) the Unicode code points for all the ~6000 glyphs

[09:04:20.0000] <annevk>
and then maybe if they are not too incompatible provide a combined set of sorts

[09:04:38.0000] <annevk>
but presumably Microsoft would have done that if it were possible

[09:04:50.0000] <foolip>
Perhaps

[09:05:51.0000] <annevk>
if the difference is huge we could attempt to still avoid PUA (if the fonts work with that anyway, that might be another issue), and have different tables depending on locale

[09:05:53.0000] <foolip>
If possible, it would be great to have a look at the byte sequences that map to something different (in IE on Windows) in Big5 and Big5-HKSCS and screenshots of how those are actually rendered on a system with and without Microsoft's font package

[09:06:36.0000] <annevk>
the byte sequences map to the same code point afaict

[09:06:44.0000] <annevk>
although I have not tried installing the hkscs pack

[09:07:00.0000] <foolip>
They probably do, it would be odd for the mappings to depend on installed fonts.

[09:07:12.0000] <annevk>
hmm

[09:07:14.0000] <annevk>
"This HKSCS-2001 add-on software package is not compatible with Windows Vista™. Windows Vista has built-in support for HKSCS-2004."

[09:07:41.0000] <annevk>
I've been using Windows 7

[09:08:00.0000] <foolip>
Sounds like they've already unified things somewhat?

[09:08:41.0000] <annevk>
maybe

[09:08:55.0000] <annevk>
guess I should ask someone from Microsoft how they deal with it now

[09:09:39.0000] <foolip>
Yeah, let me know if you need help staring at glyphs and telling if they are the same or not.

[09:09:46.0000] <foolip>
Time to leave now, bye!

[09:11:43.0000] <annevk>
thanks foolip

[09:29:17.0000] <annevk>
foolip: http://lists.w3.org/Archives/Public/www-archive/2012Mar/0046.html

[10:16:04.0000] <annevk>
I wonder if http://www.microsoft.com/download/en/details.aspx?DisplayLang=en&id=12080 is available as source code or something

[10:16:12.0000] <annevk>
what is .msi?

[10:17:09.0000] <annevk>
Windows installation it seems

[10:23:31.0000] <TabAtkins>
zewt: roc: I just talked with Ken about the Typed Array stuff, and he offered a pretty convincing defense of his position.

[10:23:45.0000] <TabAtkins>
Which was basically:

[10:24:28.0000] <TabAtkins>
1) If you're generating data on the CPU for export to the GPU on the same device (common case for WebGL and WebAudio), endianness is irrelevant, because you don't really introspect the data. Using native endianness is best for performance, which is critical here.

[10:25:01.0000] <TabAtkins>
2) If you're pulling data from the network, DataView handles the testing and byteswapping easily and automatically - all you need to know is the endianness of the incoming data.

[10:25:13.0000] <TabAtkins>
(Which can reasonably be big or little, depending entirely on file format.)

[10:25:40.0000] <TabAtkins>
If you're exporting to the network, DataView also takes care of that, automatically swapping to your desired endianness as necessary.

[10:25:54.0000] <gsnedders>
TabAtkins: However, almost all WebGL demos do more than just generate data, so 1 isn't relevant

[10:25:59.0000] <TabAtkins>
The problem is that FF only implemented DataView last week, so a lot of bad advice was given.

[10:26:13.0000] <gsnedders>
TabAtkins: 2 is good and fine in theory… but nobody does it.

[10:26:26.0000] <gsnedders>
Almost no WebGL demos work on BE devices.

[10:26:57.0000] <TabAtkins>
Existing WebGL demos that generate data solely on the device?

[10:27:18.0000] <gsnedders>
Nah, a few people did a while ago evangelize stuff for this.

[10:27:29.0000] <gsnedders>
bz probably more than anyone else, IIRC.

[10:27:37.0000] <TabAtkins>
I'm just curious about the exact shape of the failing demos.

[10:27:55.0000] <gsnedders>
Mostly 2, and assuming the typed array is LE

[10:28:14.0000] <TabAtkins>
Because Ken claimed that existing ones (that didn't rely on network data without using DataView) should work fine on either architecture.

[10:28:26.0000] <gsnedders>
Oh, they do.

[10:28:34.0000] <gsnedders>
But most WebGL stuff relies on network data without using DataView.

[10:28:43.0000] <TabAtkins>
And he argues that the reason nobody has used DataView is to a large extent because FF didn't implement it originally.

[10:28:54.0000] <gsnedders>
And as long as that's possible, web devlopers will do it, because nobody will test on BE.

[10:29:40.0000] <gsnedders>
Modulo people targetting TVs, who likely will.

[10:30:20.0000] <gsnedders>
(The Opera Devices SDK has been shipping WebGL for over a year now)

[10:30:37.0000] <TabAtkins>
He also argues that, based on long experience with the JVM, you can't do automatic endianness-swapping without killing performance.

[10:31:39.0000] <gsnedders>
I totally agree. But provided we make it possible to have web devs easily break stuff on platforms almost nobody uses, they will.

[10:31:41.0000] <Philip`>
TabAtkins: "performance, which is critical here" - the cost of swapping bytes when uploading to the GPU sounds like it should be generally quite trivial compared to the other costs of copying the memory to the GPU when implemented sanely (though I'm not basing that on any experience)

[10:32:10.0000] <gsnedders>
It's either have it not work or do endianness-swapping, practically.

[10:32:11.0000] <TabAtkins>
Philip`: Ken argues that it's not, because you have to hold onto a schema for the data in the CPU so you can do the swap properly just before exporting.

[10:32:58.0000] <gsnedders>
TabAtkins: I expect most people would use LE DataViews, so the cost is there on BE anyway

[10:33:48.0000] <TabAtkins>
gsnedders: I don't understand.  DataViews don't have endianness - they're native too.  You specify what the endianness of the incoming data is, and it swaps there.

[10:34:27.0000] <Philip`>
TabAtkins: I imagine an implementation that cared about performance would JIT the memcpy-with-fancy-byte-swapping code, rather than using an explicit schema representation

[10:35:03.0000] <TabAtkins>
Philip`: According to Ken, that hasn't been possible in the years of compiler research in the JVM. It breaks down into lots of virtual gets.

[10:35:04.0000] <gsnedders>
TabAtkins: You can do the same  with the typed array, no?

[10:35:29.0000] <TabAtkins>
gsnedders: I'm not entirely sure I understand what you're asking.

[10:35:55.0000] <Philip`>
Virtual gets?

[10:36:55.0000] <gsnedders>
TabAtkins: You store the underlying array as native endianness. [[Get]] and [[Put]] convert the words they touch. Copying the array from CPU to GPU is quick (due to native endianness), as is taking a subarray.

[10:36:58.0000] <TabAtkins>
virtual calls when getting the data.  I'm more-or-less quoting from memory there, I don't know about shit.

[10:37:08.0000] <gsnedders>
Or maybe [[Get]] and [[Put]] are perf critical

[10:38:25.0000] <gsnedders>
But that's basically what DataViews do, AIUI

[10:38:55.0000] <Philip`>
TabAtkins: I don't see why you'd want to do any virtual method calls when just copying an array of bytes (with no fancy getters or anything) into a new array of bytes

[10:39:09.0000] <Philip`>
/me wonders whether GPUs actually have the same endianness as their host CPUs

[10:39:11.0000] <TabAtkins>
Philip`: Because you need to byteswap sometimes?

[10:39:16.0000] <TabAtkins>
Philip`: According to Ken, yes.

[10:39:43.0000] <TabAtkins>
gsnedders: All I know is that Ken says DataViews solve the problem in a way that automatic swapping can't.  Presumably that means swapping is done early.

[10:40:03.0000] <gsnedders>
Just do that for accesses of the whole array, have dataviews always have endianness, and then if you're using dataview you get high-perf 50% of the time.

[10:40:15.0000] <gsnedders>
Philip`: They do, by design, for just that reason.

[10:40:34.0000] <gsnedders>
TabAtkins: I don't believe we swap early, at least.

[10:43:31.0000] <Philip`>
TabAtkins: I don't see why the byteswapping would involve virtual method calls - it'd just involve reading 4 bytes from the input, doing a byte-swap instruction, then writing to the output array, and repeat for each field in the data structure that needs swapping, then loop, or whatever

[10:43:36.0000] <TabAtkins>
Ah, now that I've looked at the spec I see what's happening.  This design seems somewhat suboptimal.

[10:44:09.0000] <TabAtkins>
There's no reason to have the desired endianness on the get calls unless you're trying to optimize for the case where a file is mixed-endian.

[10:44:19.0000] <TabAtkins>
It should be specified on the constructor I guess.

[10:45:06.0000] <gsnedders>
TabAtkins: It depends.

[10:45:23.0000] <TabAtkins>
That still doesn't let you swap early, though, unless you know the data's schema.

[10:45:53.0000] <gsnedders>
TabAtkins: There are cases when you want to read in a file of non-native endianness, change one word, and then write it out.

[10:46:25.0000] <TabAtkins>
Hm, I think I need to see an example of DataView being used with WebGL.

[10:46:34.0000] <gsnedders>
In that case, it will normally be quicker to just convert the one thing you want to change

[10:59:46.0000] <annevk>
success

[10:59:48.0000] <annevk>
well some

[10:59:49.0000] <annevk>
http://blogs.msdn.com/b/shawnste/archive/2007/03/12/cp-951-hkscs.aspx

[11:02:57.0000] <annevk>
http://lists.w3.org/Archives/Public/www-archive/2012Mar/0051.html sounds promising

[11:03:15.0000] <annevk>
so IE treats them as aliases, no longer has different mappings depending on locale

[11:03:38.0000] <annevk>
so IE's mapping, perhaps with some PUA code points replaced with actual code points, sounds like the best way forward

[11:03:49.0000] <annevk>
including merging big5 and big5-hkscs

[11:06:20.0000] <zcorpan>
nice

[11:10:49.0000] <zcorpan>
/me created http://simon.html5.org/tools/js/unicodeize/ for spec writing

[11:13:30.0000] <annevk>
hmm

[11:13:36.0000] <annevk>
now I know my name is full of boring code points

[11:29:52.0000] <TabAtkins>
zcorpan: Yay, useful!

[11:46:39.0000] <zcorpan>
if anyone knows why the selection thing doesn't work in firefox and chrome when tabbing away from the textarea, lemme know

[11:47:38.0000] <zcorpan>
or get firefox/chrome fixed :-P

[11:48:21.0000] <smaug____>
zcorpan: what selection thing?

[11:48:33.0000] <zcorpan>
in http://simon.html5.org/tools/js/unicodeize/

[11:48:36.0000] <smaug____>
I guess I should try what happens in Opera

[11:48:59.0000] <smaug____>
ah, I see

[11:49:00.0000] <zcorpan>
http://dvcs.w3.org/hg/editing/raw-file/tip/editing.html#dom-selection-selectallchildren is the spec

[11:52:12.0000] <smaug____>
zcorpan: does the output element get focus event in FF/CH ?

[11:53:16.0000] <smaug____>
yes...

[11:54:06.0000] <zcorpan>
i don't seem to get an event in http://software.hixie.ch/utilities/js/live-dom-viewer/saved/1437

[11:55:01.0000] <zcorpan>
in chrome... get it in firefox when tabbing

[11:55:12.0000] <zcorpan>
not when clicking

[11:59:18.0000] <Hixie>
sweet kittens, our industry has a buzzword problem

[11:59:36.0000] <Hixie>
looks like "internet of things" is going to be the next "mobile web"

[12:00:31.0000] <zcorpan>
"internet of things"?

[12:01:49.0000] <rubys>
Hixie: I'd like to invite you to publish your complete Canvas 2D API editor's draft (including r7023 through r7038) at http://dev.w3.org/html5/2dcontext-hixie/

[12:04:46.0000] <smaug____>
o_O

[12:04:59.0000] <smaug____>
will there be a separate canvas spec in W3C ?

[12:05:35.0000] <rubys>
eventually, there will be something after HTML5, yes.

[12:06:30.0000] <annevk>
what is going to be published at 2dcontext then?

[12:07:36.0000] <rubys>
At the moment, that's frozen at March 7th.  It will certainly have the result of the issue 201 decision folded into it.  At this point, Hixie's draft goes beyond that with other new features.

[12:08:00.0000] <Hixie>
rubys: a "hixie" version of the canvas spec would just be the html spec with the 2d api in the canvas section, i'm not sure it makes sense to have a "hixie" version of just the 2d api

[12:08:57.0000] <rubys>
ultimately this may need to be done to all the specs, but we don't need to do all at once, and it makes sense to delay that for as long as is reasonable for the base HTML5 spec.

[12:09:10.0000] <annevk>
so why not call it -next then?

[12:09:23.0000] <annevk>
or -dev

[12:10:17.0000] <annevk>
seems kind of weird to put the nick of the editor in the URL

[12:10:27.0000] <rubys>
-next may be presumptuous and spur lots of extraneous discussions.  I simply would like to see it get out there to be discussed.  That's the best way to lead to a discussion about what should be in "-next"... I would much rather see leading by doing than yet another argument over who gets the pen.

[12:10:40.0000] <rubys>
annevk: the IETF does that all of the time, no?

[12:10:56.0000] <rubys>
we could go with Hickson I guess

[12:11:05.0000] <Hixie>
the ietf is a perfect example of the mess that happens when we do that :-)

[12:11:49.0000] <zcorpan>
can't http://www.whatwg.org/specs/web-apps/current-work/multipage/the-canvas-element.html#2dcontext be used for discussion?

[12:12:49.0000] <rubys>
Apple has patent concerns; Microsoft has other concerns.  Simply republishing it in W3C space hopefully can get the technical discussions going instead of the non-technical ones.

[12:12:50.0000] <Hixie>
rubys: anyway, i'm happy to check in a draft that is a true "editor's draft" as opposed to the "majority draft" or whatever it is we have now; but as editor the only draft i'd be writing is a single html spec, like the whatwg's, not a split out set of specs. if you think that'd be helpful, though, i'd be happy to do that.

[12:13:04.0000] <Hixie>
the patent concerns are moot unless we publish a REC of the draft in question

[12:13:11.0000] <Hixie>
merely having it on dev.w3.org doesn't make any difference there

[12:14:25.0000] <rubys>
Hixie: I think it would be helpful if you were to publish a clearly separate Canvas 2D API spec, preferably under your name or nick, in W3C space.  I am not suggesting that you change anything else about how you develop such a spec.  I would prefer if this were not yet done for the other W3C specs at this time.

[12:15:15.0000] <annevk>
rubys: IETF also publishes in ASCII and text/plain

[12:15:23.0000] <Hixie>
rubys: i do not support having a separate canvas spec, so i would like to not frame it in such a way that it appears to be my choice

[12:15:52.0000] <rubys>
Hixie: I would be glad to frame it as something that I requested.

[12:16:27.0000] <Hixie>
rubys: there's a 2dcontext-LC/ directory in cvs right now that is woefully out of date, would it makes sense to copy what is currently in 2dcontext/ to 2dcontext-LC/ and then put 2dcontext/ back to tip-of-tree?

[12:16:36.0000] <annevk>
rubys: and actually, IETF only does that before a WG is formed

[12:16:43.0000] <annevk>
rubys: WG drafts don't have it

[12:16:51.0000] <Hixie>
rubys: (that seems like it would address your concerns and mine, if i understand yours correctly)

[12:17:36.0000] <rubys>
2dcontext-LC is what went into LC1.  We likely will need to have an LC2.  What goes into those drafts will increasingly be locked down.

[12:17:59.0000] <rubys>
I think we need another draft that doesn't have those locks in place.  I think the Canvas doc would be a great way to start.

[12:18:30.0000] <annevk>
didn't you just say you want to freeze it?

[12:19:11.0000] <rubys>
annevk: there will at least be the need to apply the decision that is made for issue 201 to the W3C LC2 Canvas API draft.

[12:19:53.0000] <annevk>
and that cannot happen in 2dcontext-LC?

[12:19:55.0000] <rubys>
but at the moment, nobody is proposing adding ellipse support to the W3C HTML5 version of Canvas.

[12:20:07.0000] <annevk>
well it seems several people are

[12:20:16.0000] <annevk>
but they are not jumping through hoops

[12:20:27.0000] <annevk>
so for some definition of "proposing" I guess they are indeed not

[12:20:40.0000] <rubys>
annevk: agreed that we aren't disagreeing here :-)

[12:20:51.0000] <zcorpan>
hsivonen: jslint fixed. jshint not yet.

[12:21:39.0000] <annevk>
zcorpan: myth busted

[12:21:39.0000] <karlcow>
- Mike "Pomax" Kamermans

[12:21:40.0000] <karlcow>
processing.js

[12:21:46.0000] <karlcow>
https://www.w3.org/Bugs/Public/show_bug.cgi?id=14562

[12:21:49.0000] <zcorpan>
now i should probably file separate bugs to *do* whine about "<!--" and "</script>"

[12:21:50.0000] <karlcow>
did ask

[12:22:04.0000] <karlcow>
which led to https://www.w3.org/Bugs/Public/show_bug.cgi?id=14579

[12:22:17.0000] <rubys>
I stand by my original recommendation.  I would really rather not have any name that appears presumptuous to the point where people feel the need to challenge it.

[12:22:40.0000] <Hixie>
rubys: is there any problem with using the existing 2dcontext-LC/ directory for the cherrypicked draft and 2dcontext/ for the wg draft? i don't understand your objection to that

[12:23:02.0000] <Hixie>
rubys: my objection to creating a third directory is that we are already littering the w3c space with obsolete copies of the canvas spec

[12:23:14.0000] <Hixie>
rubys: i keep getting people coming across old copies and asking me obsolete questions about them

[12:23:21.0000] <Hixie>
rubys: it's truly hurting interop

[12:23:37.0000] <Hixie>
rubys: mike did some work getting rid of some old ones, but there's still at least 3 already

[12:23:48.0000] <rubys>
hixie that will start a flame war that I simply don't want to fight right now.

[12:24:10.0000] <Hixie>
why would it start a flame war?

[12:25:41.0000] <rubys>
At the moment, what is in 2dcontext is what the HTML WG intends to be as a part of HTML5, and is subject to the revert policy in place.

[12:25:54.0000] <Hixie>
so just change that to be 2dcontext-LC/

[12:26:28.0000] <rubys>
I am not willing to fight that battle at this time.  If you wish, feel free to decline my request to publish this separately.

[12:26:36.0000] <zcorpan>
or, i guess the html validator already whines about <!-- and </script>

[12:27:16.0000] <Hixie>
well it's already published separately, the request is to publish a version of the spec that fulfills certain chair decisions but not others, right?

[12:27:23.0000] <Hixie>
i mean, i'm not really sure whose draft this would be

[12:27:54.0000] <Hixie>
it doesn't represent what i would like, so it's not an editor's copy; it doesn't represent what the wg would like, so it's not a majority copy, it's not what we're going to publish so it's not a TR/ copy...

[12:28:07.0000] <Hixie>
whose draft would it be? what process would it be under? what would decide what it contains?

[12:28:20.0000] <rubys>
What I am suggesting is a Hixie version of the spec be published.  Whether parts of it are cherry picked for the HTML5 time frame or are fodder for an HTML.next has yet to be determined.

[12:28:37.0000] <Hixie>
a hixie version of the spec is already published: http://whatwg.org/html

[12:29:02.0000] <Hixie>
it has the exact same patent situation as a draft in dev.w3.org

[12:29:56.0000] <rubys>
My experience is that such a document will not attract participation by Microsoft, and in my opinion, that situation is suboptimal.

[12:30:49.0000] <Hixie>
nor does a dev.w3.org draft, really. the amount of microsoft input in the htmlwg has been so minimal as to be de minimis

[12:30:55.0000] <zcorpan>
rubys: you said microsoft has "other concerns". are they secret?

[12:31:16.0000] <rubys>
I am willing to make my request be an official request of a W3C co-chair.

[12:31:29.0000] <Hixie>
so then it'd be a chair's copy of the spec?

[12:32:12.0000] <rubys>
zcorpan: I haven't had that discussion with Microsoft, nor am I likely to.

[12:32:17.0000] <Hixie>
seems weird for the chairs to maintain (or ask someone to have maintain for them) a copy of the spec that doesn't match the very decisions they're handing down...

[12:33:17.0000] <rubys>
Hixie: the HTML WG has had a policy for a while allowing individuals to post specs.  Mostly that demonstrated (as expected) that there is a sincere desire to converge.

[12:34:28.0000] <rubys>
We have asked you to revert 7023 pending a decision on 201.  Now I see that there are other changes that haven't been proposed.  I'd like to see those get published in W3C space and to have a version of the spec that evolves slower and stabilizes.

[12:36:21.0000] <Hixie>
i'm happy to push the changes to dev.w3.org so long as we don't increase the number of different copies of the 2d api spec fragment in doing so

[12:36:34.0000] <Hixie>
i'm pretty open to a variety of ways in which we could avoid doing that

[12:38:07.0000] <rubys>
I believe that the LC one is pointed to by an announcement at some point.  Once we complete this LC work, we should be able to archive that one and point to the latest stable spec.

[12:39:02.0000] <rubys>
As I see it, there are two active threads, one that is winding down, and one that is ramping up.

[12:39:57.0000] <annevk>
cannot really find that announcement fwiw

[12:40:36.0000] <annevk>
also, it violates W3C policy to use the WD style sheet on dev.w3.org so that draft would have to change anyway

[12:40:57.0000] <Hixie>
it's not the announcements i'm worried about, it's people randomly running into the draft and thinking it's the latest copy

[12:41:46.0000] <Hixie>
i've found about 5 different copies of the canvas api and extensions to it in the last few minutes in w3.org space, none of which are up to date (since there isn't a mainline one currently, which is what sam is asking for me to add).

[12:43:47.0000] <rubys>
Microsoft appears to feel strongly about issue-201, so different people will have different perspectives on what is considered up to date.

[12:44:47.0000] <rubys>
Heck, I would gladly invite Microsoft to produce a copy of the 2D Canvas spec to their liking (and have a history of making exactly such request).

[12:45:53.0000] <Hixie>
that would probably not resolve my concerns of there being too many different copies of the spec. :-)

[12:46:49.0000] <rubys>
I'm Darwinian in that respect.  I think it would, just perhaps not quickly.

[12:47:36.0000] <rubys>
Found the post I was looking for: http://intertwingly.net/blog/2009/08/06/Disappearing-Silverware

[12:48:19.0000] <Hixie>
well the last time you asked them to do that it resulted in an additional spec that is still there on dev.w3.org, in an Attic directory, so I think evidence suggests otherwise. :-)

[12:48:31.0000] <jgraham>
The problem with many copies of the spec is that the harm they cause is in the short term not the long term

[12:49:23.0000] <Hixie>
indeed

[12:51:21.0000] <rubys>
I don't see the harm caused by a directory clearly labeled as attic, and can see an argument that the W3C needs to put a plan in place to move the 1st LC draft into such.

[12:52:06.0000] <rubys>
I do see considerable harm as labeling a spec that contains one of two competing proposals as "the latest".

[12:53:39.0000] <Hixie>
you're not the one fielding e-mails from people every day asking for clarifications about issues in the spec that were fixed months or years earlier, caused merely because they are looking at the TR/ page, or some random CVS-deleted Attic/ file, or whatnot.

[12:54:24.0000] <Hixie>
an alternative way to solving this problem, if we can't come to an agreement on how to have the latest copy in dev.w3.org, would be for the relevant issue to be resolved sooner rather than later.

[12:55:11.0000] <rubys>
at the moment, we have no counter proposal to issue 201, nor any proposal for the other additions that you have been making.

[12:55:37.0000] <rubys>
I've also seen reference to your plans for a v6 and beyond.

[12:56:38.0000] <Hixie>
well, to be fair, you do have a counter proposal, you just don't have one that's been written up in the bureaucratic way you'd like. You even asked for the counter-proposal to be reverted, so you can't say you don't know about it. :-)

[12:57:19.0000] <rubys>
To me a complete proposal would include rationale.

[12:58:03.0000] <Hixie>
the rationale is presumably the same

[12:59:57.0000] <Hixie>
rubys: looking at the existing -201 issue, i can confirm that the exact same rationale would apply to what was reverted

[13:00:02.0000] <rubys>
In any case, I've made my request.  If there is anything I can do to convince you to leave the stable copy as it stands and publish a -hixie version along side it, please let me know.

[13:00:21.0000] <Hixie>
rubys: if you like i can submit a CP that is identical in every way except the details section, but that just seems like bureaucracy for the sake of bureaucracy

[13:00:39.0000] <rubys>
would that CP include ellipse?

[13:00:59.0000] <Hixie>
sure, why not

[13:01:08.0000] <Hixie>
they're part of the Path object, after all

[13:01:40.0000] <Hixie>
how else would you make accessible ellipsoid hit regions?

[13:02:08.0000] <Hixie>
gotta go, lunch

[13:02:09.0000] <Hixie>
bbiab

[13:03:14.0000] <rubys>
looking at http://html5.org/tools/web-apps-tracker I see a number of changes that appear to go beyond hit testing.

[13:04:56.0000] <rubys>
I'll wander off, but I would like to see a -hixie draft and a Change Proposal that describes why what appears in that draft is a better fit for HTML5 than what is in http://www.w3.org/wiki/Canvas_hit_testing .

[13:58:01.0000] <annevk>
why does data:text/html,&%23x26BD; (soccer ball) not render in browsers other than Safari?

[14:13:22.0000] <TabAtkins>
Because most people don't have a font that'll display it, but Safari's last resort font has a bunch of emoji stuff, and so maybe has a soccer ball too?

[14:13:35.0000] <TabAtkins>
There's nothing wrong with the url - it produces the correct character in the page.

[14:16:07.0000] <annevk>
seems like a bug of sorts to me

[14:18:58.0000] <TabAtkins>
What, the non-rendering?

[14:19:45.0000] <TabAtkins>
That's not a bug, it's font support.  There's nothing buggy about it.

[14:20:03.0000] <TabAtkins>
Change your url to a character that the default font stack can render, and it works fine.

[14:20:37.0000] <annevk>
given that my OS has such a font, I would expect browsers to render it

[14:21:08.0000] <TabAtkins>
They can't realistically search your entire set of OS fonts when attempting to render a page.

[14:21:30.0000] <TabAtkins>
And I don't think OSes provide a utility for quickly asking "do you have a font that can render this character?".

[14:21:58.0000] <TabAtkins>
You can bug them to improve their default stack, of course.

[14:22:03.0000] <annevk>
doesn't mean it doesn't seem like a bug of sorts :)

[14:22:10.0000] <annevk>
right

[15:04:15.0000] <jwalden>
/me sees the soccer ball in Firefox in F15

[15:04:29.0000] <jwalden>
guess I have enough fonts installed for it

[15:10:42.0000] <zewt>
TabAtkins: that's not convincing at all, because it assumes incorrectly that views are only ever used for creating data that you hand off to WebGL

[15:10:56.0000] <zewt>
that's just obviously false

[15:13:12.0000] <gsnedders>
See: pdf.js.

[15:13:25.0000] <zewt>
the solution is to define both these views and all WebGL access as little endian, say "if you're big-endian, you're on your own", and then ignore big endian because big endian is dead

[15:14:00.0000] <TabAtkins>
Using a DataView, particularly once it's been expanded to be as easy to use as the other array views, seems to be the preferred answer.

[15:14:08.0000] <zewt>
dataview is completely irrelevant

[15:14:14.0000] <TabAtkins>
Why so?

[15:14:35.0000] <zewt>
views exist, so people will use them; dataview existing doesn't change taht

[15:14:39.0000] <zewt>
also that

[15:14:56.0000] <zewt>
we can't remove alert() just because there are other ways to display messages; people use alert

[15:15:03.0000] <TabAtkins>
DataView is meant to be *the* way to send/receive from servers.

[15:15:10.0000] <zewt>
but it *isn't*

[15:15:24.0000] <TabAtkins>
Right now, sure. Because DataView wasn't widely implemented.

[15:15:29.0000] <zewt>
views exist, and people use them (and I'll use them, because it's much nicer to have an array view of an array instead of calling a function)

[15:15:41.0000] <zewt>
doesn't matter--views still exist and will still be used

[15:15:54.0000] <TabAtkins>
And so any advice about how to use TypedArrays *today* can't reasonably tell people to use DataViews.

[15:16:09.0000] <gsnedders>
zewt: Big endian is *not* dead because typed arrays are done for things apart from WebGL. pdf.js, for example.

[15:16:21.0000] <TabAtkins>
The "array view of an array" thing is the "once DataViews are fixed up to be as convenient as the other arrays" thing.

[15:16:36.0000] <zewt>
gsnedders: find me a marketshare % of big endian systems and tell me it's not dead, heh

[15:16:47.0000] <zewt>
(of big endian systems that implement modern APIs, including ArrayBuffer and WebGL)

[15:17:07.0000] <TabAtkins>
From what I understand, a number of file formats (that you may want to read with an arraybuffer) are big-endian.

[15:17:26.0000] <gsnedders>
zewt: Well, of BE systems, yes, but file formats are still often BE.

[15:17:40.0000] <smaug____>
aklein: ping

[15:17:42.0000] <zewt>
(why is Firefox's address bar autocomplete so utterly broken? I type "typed arrays", hit enter; I see that it had the typed array spec selected when I was at "typed", but then it decided to jump to some random google search when I finished typing)

[15:17:46.0000] <aklein>
smaug____: pong

[15:17:53.0000] <zewt>
gsnedders: file formats aren't the issue (there *should* be explicitly big-endian views)

[15:17:57.0000] <smaug____>
aklein: about attribute filters

[15:18:14.0000] <smaug____>
aklein: sicking suggested that attribute filter applies only to non-namespaced attributes

[15:18:16.0000] <jgraham>
TabAtkins: Surely you have done the web thing long enough to know that if there are two ways to do something and one is wrong, authors will do the wrong way 80% of the time, the right way 10% and invent an entirely new and wrong way 10%

[15:18:25.0000] <smaug____>
aklein: what do you think about that

[15:18:41.0000] <zewt>
TabAtkins: DataView is an inherently less convenient API than views, for accessing arrays

[15:18:54.0000] <TabAtkins>
I'd say the percentages are more balanced, overall.  They don't *instinctively* reach for the bad one.  They just do it randomly, like a gas filling a room.  Brownian motion and all that.

[15:18:59.0000] <TabAtkins>
zewt: Yes.  Right now.

[15:19:04.0000] <zewt>
jgraham: (I object to the idea that accessing arrays inside a file format via views is "wrong"; it's the right, clean thing to do, and the "design" is wrong)

[15:19:14.0000] <zewt>
TabAtkins: what is "right now"? who is proposing changes to it?

[15:19:16.0000] <smaug____>
aklein: I don't care too much, but would could change my patch (which sicking is reviewing) if you agree with the change

[15:19:23.0000] <smaug____>
s/would//

[15:19:25.0000] <zewt>
the only thing needed are eg. Int16BEArray, etc

[15:19:25.0000] <TabAtkins>
zewt: Ken?

[15:19:29.0000] <jgraham>
zewt: Sure. I was thinking of an abstract example

[15:19:38.0000] <aklein>
smaug____: I don't care too much either, but I think we'd have to change our code too

[15:20:03.0000] <sicking>
aklein: it seems to me that if someone observes the "value" attribute, and a page modifies the "xlink:value" attribute and we notify the observer, it seems unlikely that the observer would check that it's the "correct" value attribute that is changed and just assume that any notifications is to the attribute that it cares about

[15:20:03.0000] <zewt>
one thing I need to recommend is that Int16LEArray (and friends) be added, so people can at least sidestep the issue

[15:20:05.0000] <jgraham>
My point was just that saying "but there is a way to get this right" has never been good enough

[15:20:10.0000] <TabAtkins>
zewt: I don't know how you'd use a normal view to access data from a BE file format with varying-width records.

[15:20:17.0000] <zewt>
but kenneth has dug in his heels on this so far he seems unwilling to do anything at all

[15:20:31.0000] <jgraham>
There is a way to generate well-formed XML, but that didn't happen either

[15:20:51.0000] <zewt>
TabAtkins: views are used for arrays (fixed-width); variable-width (eg. structs) *is* what DataView is good for

[15:20:53.0000] <TabAtkins>
zewt: I now understand his reasoning a bit better.  It seems correct that trying to do LE everywhere would just mean "BE devices get *really slow* WebGL".

[15:21:05.0000] <zewt>
TabAtkins: that's the only possible thing that can happen

[15:21:15.0000] <zewt>
the alternative is "big-endian devices get broken WebGL"

[15:21:22.0000] <jgraham>
TabAtkins: Instead they will get broken WebGL

[15:21:24.0000] <TabAtkins>
Rather than the current one, which is "BE devices break when you're reading data that you assumed was LE".

[15:21:33.0000] <zewt>
that's not correct; that's wrong

[15:21:55.0000] <TabAtkins>
I've been told that, right now, BE devices work just fine in WebGL with typed arrays.

[15:21:58.0000] <zewt>
you *should* be able to assume everything is little-endian. because nobody is, and nobody should have to, test on obscure big-endian devices; this is web 101--interoperability

[15:22:06.0000] <TabAtkins>
They fail when you pull binary data off the network without using a dataview.

[15:22:11.0000] <zewt>
which is broken

[15:22:42.0000] <sicking>
aklein, smaug____: It seems to me that only observing the null-namespace is less bug-prone, and at least in the gecko implementation simpler since we wouldn't have a attributeNamespace property on MutationRecord

[15:22:48.0000] <zewt>
you should never have to care about the endianness of the system you're on; it should have no visible effects on code, ever; and you should definitely not have to test on it

[15:23:01.0000] <aklein>
sicking: now I'm a bit confused, are you saying attributeFilter won't stop the observer from telling me about _all_ namespaced attributes?

[15:23:13.0000] <zewt>
it doesn't matter that fixing it makes big-endian systems slow--and who cares? nobody's making big-endian platforms anymore

[15:23:14.0000] <smaug____>
sicking: it wouldn't change the record

[15:23:20.0000] <smaug____>
sicking: only about filtering

[15:23:21.0000] <jgraham>
TabAtkins: I am 100% sure that wih the current setup BE devices will be broken on most real sites that depend on binary data

[15:23:33.0000] <smaug____>
sicking: record must have the namespace

[15:23:39.0000] <sicking>
smaug____: how so?

[15:23:47.0000] <TabAtkins>
zewt: Shrug.  From what I've heard, making the LE-everywhere assumption means that the common WebGL/WebAudio/other APIs that both generate and consume data in-page will be unacceptably slow on BE devices.

[15:23:49.0000] <smaug____>
because you need to know which attribute changed

[15:23:54.0000] <TabAtkins>
They're "work", but that's irrelevant.

[15:23:54.0000] <sicking>
smaug____: oh, for when you are observing all attribute changes?

[15:24:02.0000] <TabAtkins>
*They'll

[15:24:11.0000] <zewt>
what BE devices?

[15:24:15.0000] <smaug____>
sicking: yes

[15:24:21.0000] <jgraham>
TabAtkins: I would like some proof of that with actual hardware

[15:24:30.0000] <TabAtkins>
zewt: Aren't you assuming that BE devices exist and are important?

[15:24:43.0000] <TabAtkins>
jgraham: Ask Ken.  He alluded to years of experience with Java's NIO.

[15:24:54.0000] <sicking>
aklein: sorry, yeah, so it wouldn't simplify the implementation a lot, but it seems less bugprone when attribute filters are used

[15:25:03.0000] <jgraham>
Then I would like someone that actually ships in those devices to say taht they would prefer the site to not work than to be slow

[15:25:11.0000] <jgraham>
s/in/on/

[15:25:15.0000] <zewt>
no, I want this fixed so other APIs (eg. encoding API) don't keep getting derailed with "well we can't return UTF-16LE as Int16Array because it's native endian!" nonsense

[15:25:30.0000] <TabAtkins>
jgraham: "Slow", past a certain point, is a synonym for "doesn't work".

[15:25:40.0000] <aklein>
sicking: I assume this discussion is happening on a review, can you send the link?

[15:25:48.0000] <TabAtkins>
jgraham: You wouldn't play a videogame running at 3fps. ^_^

[15:25:51.0000] <zewt>
also, because it's a major, infrastructural API, and shouldn't have serious fundamental errors in the spec that everyone has to wink and ignore

[15:25:52.0000] <jgraham>
TabAtkins: Do you have any data to say we are remotely at that point?

[15:26:06.0000] <sicking>
aklein: still reviewing, but when i submit the review it'll appear here: https://bugzilla.mozilla.org/show_bug.cgi?id=641821

[15:26:06.0000] <TabAtkins>
jgraham: Ken asserts that we are.  I have no further data than that.

[15:26:15.0000] <jgraham>
That's not useful

[15:26:34.0000] <TabAtkins>
jgraham: Sorry.  He provided some limited assertions in his recent emails.  If you want more detail, respond there.

[15:26:47.0000] <jgraham>
(someone who has already made up their mind backing up their position with an assertion but no data)

[15:27:12.0000] <aklein>
sicking: ah, ok, was hoping you'd laid out your suggestion there. what I'm wondering is, if I observe with attributeFilter == ['foo'], will I hear about changes to someNamespace:bar? or will I not hear about any namespaced attributes if I have an attributeFilter?

[15:27:43.0000] <smaug____>
(aklein: sicking is shouting comments about the patch and API from the other side of the table)

[15:27:51.0000] <TabAtkins>
zewt: From what I understand, we're screwed anyway. If it's not native-endian, performance-critical stuff like WebGL won't work.  If it is native-endian, naive use of the API will break on unexpected endianness.

[15:28:00.0000] <jgraham>
(and "doesn't work" is always a synonym for "doesn't work". The only way the curent situation could end well is if BE devices became so common that people had to test on both. I would bet on the opposite)

[15:28:18.0000] <TabAtkins>
Luckily, the "worst case" that's been talked about (the author having to test and manually reorder bytes) doesn't exist once you have DataView.

[15:28:35.0000] <sicking>
aklein: sorry, i don't remember enough of the spec. If you observer with attributeFilter == ['foo'], would you hear about changes to bar (in null namespace)?

[15:28:37.0000] <jgraham>
Which authors won't use...

[15:28:40.0000] <TabAtkins>
DataView still isn't maximally convenient, but it doesn't seem hard to come up with usability improvements.

[15:28:41.0000] <zewt>
TabAtkins: web-compat trumps performance

[15:28:43.0000] <aklein>
sicking: no

[15:28:58.0000] <jgraham>
/me -> sleep

[15:29:02.0000] <TabAtkins>
zewt: Make up a new LE-only binary data that you can use for non-performance-critical stuff, then.

[15:29:06.0000] <sicking>
aklein: ok. Then no. I don't think you should hear about someNamespace:bar, nor someNamespace:foo either

[15:29:19.0000] <zewt>
especially since the performance thing is meaningless (what BE platforms are there that this is actually optimizing for?)

[15:29:24.0000] <smaug____>
aklein: so the if you have filter you wouldn't get records about any namespaced attribute changes

[15:29:25.0000] <sicking>
aklein: i.e. there would be an implicit "null:" on everything in the filter

[15:29:31.0000] <zewt>
TabAtkins: ... sorry, what?

[15:29:50.0000] <TabAtkins>
zewt: I'm confused.  You are questioning whether there are any BE platforms worth optimizing for.  But then you complain that other APIs will break on BE platforms.

[15:29:56.0000] <TabAtkins>
Do you care about BE platforms or not?

[15:30:03.0000] <sicking>
aklein: namespaced attributes are used extremely rarely. It's only used in SVG and XBL1 as far as I know

[15:30:14.0000] <TabAtkins>
sicking: And SVG is dropping them in SVG2.

[15:30:18.0000] <aklein>
sicking: yeah, I'd be fine with this for that reason

[15:30:25.0000] <sicking>
TabAtkins: woohoo!!!!

[15:30:27.0000] <aklein>
seems like DOM4 is trying to deprecate them too

[15:30:30.0000] <TabAtkins>
Fucking XLink.

[15:30:34.0000] <zewt>
i've never claimed to care about BE platforms, but the argument that we need a broken spec that nobody would ever implement (if there ever were any) in order to optimize for those systems is just nonsense

[15:30:41.0000] <aklein>
(at least by deemphasizing them in the spec text)

[15:30:45.0000] <smaug____>
aklein: how is DOM4 trying to deprecate them?

[15:31:02.0000] <TabAtkins>
zewt: I'm still confused, though.  Your *vehement* objection to the current spec seems to be predicated on things breaking in BE platforms.

[15:31:07.0000] <aklein>
smaug____: sorry, not "deprecate" so much as emphasizing the null namespace case

[15:31:08.0000] <shepazu>
sicking: doesn't RDFa use namespaced attributes?

[15:31:20.0000] <TabAtkins>
But then you dismiss arguments about performance on BE platforms.

[15:31:21.0000] <sicking>
shepazu: please god no!

[15:31:24.0000] <TabAtkins>
shepazu: No.

[15:31:37.0000] <shepazu>
it did at one point, I thought...

[15:31:38.0000] <gsnedders>
/me cares about web-compat and perf. on BE platforms

[15:31:40.0000] <zewt>
TabAtkins: my objection is that the spec is unimplementable, and doesn't reflect reality

[15:31:48.0000] <aklein>
smaug____: but this is why I don't care much about dropping them: I never use 'em

[15:31:54.0000] <smaug____>
:)

[15:31:57.0000] <gsnedders>
However, I don't think there's a solution that solves both.

[15:32:09.0000] <zewt>
(unimplementable due to web compat, that is)

[15:32:16.0000] <TabAtkins>
zewt: Your charge of "unimplementable" is based on BE platforms having problems with it due to breakage.

[15:32:26.0000] <TabAtkins>
So once again, do you care about BE platforms or not?

[15:32:32.0000] <smaug____>
aklein: sicking: I'll file a spec bug

[15:32:33.0000] <zewt>
why are you asking me questions that I just answered?

[15:32:39.0000] <TabAtkins>
Because you'r enot answering them.

[15:32:40.0000] <zewt>
i type fast enough already; I don't need practice

[15:32:49.0000] <sicking>
smaug____: awesome, thanks!

[15:32:52.0000] <TabAtkins>
gsnedders: That's my fear.

[15:33:21.0000] <TabAtkins>
gsnedders: If Ken can be proved wrong regarding the perf concerns, great.  But he is experience in this, so I'm inclined to trust him.  But I'm also clueless about this, so shrug.

[15:33:34.0000] <gsnedders>
TabAtkins: I'd rather go for web-compat and slow than no web-compat and fast in the short term.

[15:33:57.0000] <shepazu>
which devices are BE? ARM-based, or what?

[15:33:59.0000] <gsnedders>
I don't know what the relative bottle-necks are with this stuff. Depends on what you're using them for.

[15:34:08.0000] <TabAtkins>
zewt: You keep dismissing the "native endianness is needed for perf" by saying "who cares about perf on BE platforms?". But then you argue against native-endianness by saying that it breaks on BE platforms.

[15:34:11.0000] <gsnedders>
shepazu: ARM is almost entirely LE now. Some MIPS stuff is.

[15:34:13.0000] <TabAtkins>
shepazu: Yes, ARM is the major one.

[15:34:22.0000] <gsnedders>
TabAtkins: What major ARM device is BE?

[15:34:29.0000] <gsnedders>
(That can run a web browser)

[15:34:45.0000] <TabAtkins>
gsnedders: Maybe, but like I said, past a certain point "slow" means "broken" for things like games.

[15:34:54.0000] <TabAtkins>
gsnedders: I have no clue.  I thought I'd been told that ARM is BE.

[15:35:00.0000] <gsnedders>
Android, iOS, Sybmian, Windows Phone… they all use LE mode.

[15:35:07.0000] <zewt>
TabAtkins: specs that are interoperable and don't expose platform obscurities is much more important than performance on obscure platforms

[15:35:13.0000] <gsnedders>
TabAtkins: Many RISC CPUs, ARM inc., are bi-endian.

[15:35:27.0000] <gsnedders>
Most bi-endian CPUs nowadays are used in LE mode.

[15:35:27.0000] <zewt>
gsnedders: qualify: "run a modern web browser" (eg. with WebGL, ArrayBuffers, the rest)

[15:35:36.0000] <gsnedders>
zewt: Pretty much that dfn

[15:36:37.0000] <TabAtkins>
zewt: Once again, that doesn't answer my question.  Bad perf, in certain contexts, is equivalent to "broken". So you're saying that it's bad that the API is broken in BE platforms under some circumstances, but it doesn't matter that it's broken in BE platforms under other circumstances.

[15:37:14.0000] <zewt>
you can always get bad performance; you can't make that go away (you can always write WebGL apps that tax the GPU so that it's only practically usable on a desktop); so no, I don't consider slow as equivalent to broken

[15:37:15.0000] <gsnedders>
TabAtkins: Bad perf in certain contexts or broken in most contexts is the option here.

[15:37:16.0000] <TabAtkins>
Your argument is thus inconsistent.  You could instead be arguing that you think perf is an irrelevant circumstance, but you haven't made that argument so far.

[15:37:40.0000] <zewt>
you're the only one claiming that slow == broken

[15:38:01.0000] <TabAtkins>
zewt: For games, it is.  Do you challenge that assertion?

[15:38:21.0000] <TabAtkins>
For a game designed for 30fps, you can't reasonably play it at 3fps.

[15:38:39.0000] <TabAtkins>
It's functionally equivalent to the game throwing an error immediately, for all the good it does you.

[15:39:00.0000] <gsnedders>
TabAtkins: Most BE hardware with modern web browsers, even if content was delivered in BE form with native arrays, couldn't really push a 30fps game.

[15:39:18.0000] <zewt>
so you're saying WebGL is broken because it's possible to write a game that requires the fill rate of a $500 Geforce, and runs at .1FPS on a phone?

[15:39:33.0000] <zewt>
the game doesn't work, but that's not a bug in the spec or the API

[15:39:55.0000] <zewt>
likewise, if byte swapping makes your app too slow to run, that's unfortunate but not a bug

[15:39:56.0000] <TabAtkins>
zewt: Strawman. It's definitely possible to design a game optimized for phone-level hardware.  The perf drop is then significant.

[15:40:14.0000] <TabAtkins>
I'm unsure why you think "too slow to run" isn't a problem.

[15:40:51.0000] <zewt>
it's not at all equivalent to the API being broken, which the spec currently is

[15:41:13.0000] <gsnedders>
TabAtkins: Somehow we need a solution that allows interop in all cases, even with bad perf if you use the wrong API on the wrong hardware.

[15:41:14.0000] <TabAtkins>
...it's exactly the same.  You use the API, it runs fine on your platform, but it's unusable on other platforms.

[15:41:21.0000] <gsnedders>
That's my opinion, on the whole.

[15:41:23.0000] <TabAtkins>
That's equivalent to using the API and it erroring out on other platforms.

[15:41:27.0000] <zewt>
i'm also a bit appalled that anyone with any web experience is actually seriously arguing that it's okay to force web developers to care about endianness

[15:41:38.0000] <gsnedders>
However, I think the shit has mostly sailed.

[15:42:03.0000] <gsnedders>
So practically we might be unable to do little more than spec stuff as LE

[15:42:09.0000] <Hixie>
any web intents people around?

[15:42:10.0000] <TabAtkins>
gsnedders: I'm normally with you, but bad perf is *really* killer for gaming, which is a case I'd like to strongly support.  So I'd prefer something that doesn't have bad perf, and is easy to use in a compat way.

[15:43:24.0000] <gsnedders>
TabAtkins: What I'm basically suggesting there is always a way to get native perf on a certain endianness, but there may be more ways to get bad, byte-swapping perf on it too, though the behaviour will always be consistent.

[15:44:02.0000] <TabAtkins>
Maybe.

[15:44:14.0000] <TabAtkins>
I wonder if we can do something like make XHR return a DataView for "arraybuffer"?

[15:44:30.0000] <TabAtkins>
Probably not, now.

[15:45:18.0000] <gsnedders>
A Uint8DataView makes the most sense, IMO

[15:45:49.0000] <zewt>
ouch, that's the most confusing name imaginable :P

[15:45:58.0000] <TabAtkins>
A DataView with UInt8 array-like behavior?

[15:46:02.0000] <gsnedders>
Better than ClampedUint8DataView

[15:46:15.0000] <gsnedders>
Oh, no, I'm thinking of the arrays again.

[15:46:16.0000] <gsnedders>
Duh.

[15:46:29.0000] <gsnedders>
For some reason I always think they're data views.

[15:46:44.0000] <roc>
TabAtkins, annevk: "They can't realistically search your entire set of OS fonts when attempting to render a page." ... well, that's exactly what Firefox does

[15:46:50.0000] <roc>
if necessary

[15:47:09.0000] <TabAtkins>
/me liked the ES record stuff that progressed too slowly and got preempted by this, because it could have let you describe the fields of your data so you get automatic byte-swapping.

[15:47:12.0000] <TabAtkins>
roc: I didn't know that!

[15:47:24.0000] <TabAtkins>
I assumed you had a normal font-stack with Last Resort at the end.

[16:04:25.0000] <TabAtkins>
So what's this "LE mode" I'm hearing about?  And what's its relevance to the discussion?

[16:05:40.0000] <roc>
I discovered yesterday that ARM CPUs can switch endianness on the fly with a single instruction

[16:06:02.0000] <Hixie>
wow

[16:06:04.0000] <Hixie>
that's hardcore

[16:06:09.0000] <zewt>
how does that actually work? i'd think changing the endianness of your pointers would do ... bad stuff

[16:06:22.0000] <zewt>
only affects math, maybe?

[16:06:23.0000] <roc>
"carefully"

[16:06:26.0000] <zewt>
heh

[16:06:31.0000] <zewt>
"wear a helmet"

[16:06:42.0000] <roc>
I assumed it affects all loads and stores

[16:07:16.0000] <zewt>
is the opcode MSHRMCLD?

[16:07:21.0000] <roc>
http://www.doulos.com/knowhow/arm/Hints_and_Tips/Byte_Swapping/

[16:07:24.0000] <TabAtkins>
Oh, wow: "Oops! Google Chrome could not connect to hint.fm

[16:07:27.0000] <TabAtkins>
Other users are also experiencing difficulties connecting to this site, so you may have to wait a few minutes."

[16:07:35.0000] <TabAtkins>
That's pretty cool. <3 anonymous usage data.

[16:08:15.0000] <TabAtkins>
roc: I suppose that wouldn't help the GPU, though?

[16:08:19.0000] <roc>
There is a way to make the Web safe for BE machines. Have Chrome randomly emulate BE 10% of the time.

[16:08:46.0000] <Hixie>
i've proposed that kind of thing in the past

[16:08:47.0000] <zewt>
what about big-endian systems with little-endian GPUs?

[16:08:49.0000] <zewt>
(sorry, I had to say it)

[16:08:56.0000] <roc>
TabAtkins: yeah, I think what actually matters here is BE *GPUs*

[16:08:58.0000] <Hixie>
e.g. my websocket design required the ua to randomise the order of headers in the handshake

[16:09:05.0000] <TabAtkins>
I keep proposing stochastic prefix inclusion.  It hasn't yet made it past the laugh test.

[16:09:18.0000] <zewt>
Hixie: that sounds challenging to test, heh

[16:09:22.0000] <TabAtkins>
But I feel like it's kinda close.

[16:09:46.0000] <zewt>
(a bit unreasonable to expect of servers, though)

[16:09:48.0000] <TabAtkins>
(That is, only release prefixed things to the release channel in X% of browsers.)

[16:09:51.0000] <zewt>
(er, clients, I guess)

[16:10:18.0000] <zewt>
seems sort of questionable to expect people to introduce complexity (and therefore bugs) in order to reduce bugs

[16:10:31.0000] <TabAtkins>
That's pretty much been the argument against it, yeah.

[16:10:35.0000] <TabAtkins>
But randomness is so useful!

[16:10:49.0000] <TabAtkins>
So many things can be solved easier with randomness than with a deterministic process.

[16:10:51.0000] <zewt>
especially since it's expecting people to introduce bugs in *their* stuff, to reduce bugs in someone else's

[16:13:06.0000] <roc>
It seems to me that WebGL performance issues on BE machines could be solved in the driver.

[16:15:35.0000] <TabAtkins>
No clue.

[16:16:22.0000] <TabAtkins>
roc: Btw, if you're still interested in measurement APIs and such (improvements in the vein of getBoundingClientRect, etc.), we're gaining someone who wants to do spec/impl work and is interested in this.

[16:23:52.0000] <Philip`>
ARMv7 apparently always reads instructions as little-endian (except for a legacy mode in the "real-time" profile which can optionally be hardwired to do big-endian); otherwise the endianness just affects all load/store instructions (including NEON ones) (not registers or arithmetic or anything)

[16:24:13.0000] <TabAtkins>
Looking at DataView in practice, I see why it's not expected to be used.  http://code.google.com/p/webglsamples/source/browse/hdr/hdr.js#235

[16:24:17.0000] <TabAtkins>
Sheesh.

[16:24:54.0000] <TabAtkins>
You need to take an array buffer, wrap it in a data view, iterate over it with some moderately long boilerplate, and copy it into another array buffer.

[16:25:02.0000] <TabAtkins>
This could be made *enormously* more convenient to use.

[16:26:56.0000] <Philip`>
(I don't see anything saying SETEND can only be used from privileged modes, so maybe it can actually be used arbitrarily by applications?)

[16:29:11.0000] <TabAtkins>
Hixie: If you didn't see it, lunch next week on tuesday.

[16:30:13.0000] <Hixie>
TabAtkins: awesome. at goog?

[16:30:17.0000] <TabAtkins>
Yeah.

[16:30:32.0000] <TabAtkins>
Hopefully with tantek too.

[16:30:36.0000] <Hixie>
any idea what time?

[16:30:45.0000] <TabAtkins>
Let me check scrollback...

[16:31:03.0000] <TabAtkins>
noon

[16:31:15.0000] <Hixie>
k

[16:31:52.0000] <Hixie>
added to calendar

[16:32:16.0000] <Hixie>
do we have a meeting place planned?

[16:33:55.0000] <TabAtkins>
not yet

[16:33:58.0000] <Hixie>
k

[16:34:28.0000] <Hixie>
ok, i'm outta here. i'll be at San Jose's FRC regional the next three days. back monday.

[16:45:49.0000] <roc>
zewt: what do you mean, "Benoit's email"?

[16:48:00.0000] <roc>
hmm, I'm missing email

[16:51:22.0000] <zewt>
roc: "FWIW, here is a way to do this that will always work and won't rely on "luck". The key idea is that by the time one draws stuff, all the information about how vertex attributes use buffer data must be known. ..."

[16:51:41.0000] <roc>
I found it in the archives

[16:53:50.0000] <zewt>
uh, wait, what the

[16:54:10.0000] <zewt>
kenneth is actually talking about polymorphism dispatch overhead in Java as if it has any relevance to JS?

[16:55:18.0000] <TabAtkins>
The implication, I assume, is that similar JITing concerns may apply.

[16:55:49.0000] <Philip`>
/me supposes the most irritating case is if you have overlaps like "char data[] = { 0x01, 0x02, 0x03 }; glVertexAttribPointer(a, 1, GL_SHORT, 0, 0, data); glVertexAttribPointer(b, 1, GL_SHORT, 0, 0, data+1);", which should give one value 0x0102 and one 0x0203

[16:56:03.0000] <zewt>
but there's really no parallel, i think, between the way JS and Java dispatch works and optimizes

[16:56:13.0000] <TabAtkins>
Philip`: Ooh, that's true.

[16:56:18.0000] <Philip`>
(so you'd have to expand into non-overlapping arrays if you wanted to swap bytes)

[16:56:22.0000] <zewt>
Philip`: is "shoot the programmer in the head" an acceptable answer?

[16:56:25.0000] <TabAtkins>
Damn, if you pack that way you can't early-swap at all.

[16:57:02.0000] <Philip`>
zewt: I don't think it's explicitly undefined behaviour, so shooting the programmer is unlikely to be permitted, especially since it will violate the invariance requirements

[16:57:25.0000] <zewt>
Philip`: it violates the "you really, seriously need to be shot in the head" requirement

[16:58:05.0000] <zewt>
if WebGL was designed sanely, it just wouldn't allow that--but they're obsessed with trying to make WebGL just like OpenGL (a serious design mistake, if you ask me)

[16:58:29.0000] <zewt>
(making it an overlay of it, so they don't have to actually define it all, is good, of course)


2012-03-29
[17:00:12.0000] <roc>
I don't see that the JITTing concerns apply

[17:00:35.0000] <roc>
if you're on a big-endian machine, an Int32Array would always byteswap. That's it.

[17:01:02.0000] <Philip`>
Has anyone suggested/objected to doing something like defining a GL_OES_vertex_array_endianness extension so browsers can tell drivers to deal with the problem themselves, and then only support big-endian devices that provide that extension?

[17:01:13.0000] <roc>
yes, I just suggested that

[17:01:21.0000] <zewt>
this is what I'm referring to:

[17:01:22.0000] <zewt>
The result was increased polymorphism at call sites, which defeated the Java VM's optimizing compiler and led to 10x slowdowns in many common situations.

[17:01:27.0000] <zewt>
which seems 100% irrelevant to JS

[17:01:41.0000] <roc>
in reality I bet you could easily extend the GPU to run in little-endian mode, since obviously every GPU part is going to support little-endian so it works with 99% of the CPUs out there

[17:04:30.0000] <zewt>
... assuming they can even run in big-endian to begin with

[17:05:27.0000] <zewt>
i'd find it pretty sadly amusing if a big-endian system did crop up, and WebGL didn't work on it because its GPU was little-endian, and everything would have worked otherwise

[18:24:57.0000] <roc>
there are big-endian systems with GPUs so it's doable somehow or other

[18:55:56.0000] <zewt>
i wonder if that's an actual big-endian GPU, if the drivers fake it, or something else

[19:02:58.0000] <mkanat>
I missed the start of this conversation, is it about shaders?

[19:52:28.0000] <zewt>
this is pretty fantastic

[19:52:40.0000] <zewt>
my internet connection is corrupting IP packets in a way that checksums can't detect

[19:53:01.0000] <zewt>
crcs please :|

[23:28:51.0000] <hsivonen>
zcorpan: wow. that's surprising.

[23:29:09.0000] <hsivonen>
zcorpan: jslint getting fixed ahead of jshint that is

[23:32:32.0000] <zcorpan>
yeah

[23:58:37.0000] <annevk>
well well

[23:58:40.0000] <annevk>
are we going to publish today

[23:58:43.0000] <annevk>
or not

[23:58:48.0000] <annevk>
my magic eight ball says unlikely

[00:00:17.0000] <annevk>
html5 seems ready, but 2dcontext and html5-diff are not put into place, didn't bother checking more

[00:19:12.0000] <MikeSmith>
annevk: we will publish

[00:19:26.0000] <MikeSmith>
I'll get the rest done later today my time

[00:19:52.0000] <annevk>
goody

[00:20:07.0000] <annevk>
slightly less obsolete drafts on TR/ :)

[00:20:29.0000] <MikeSmith>
heh

[00:41:11.0000] <annevk>
I wonder if "Let row be the arithmetic left shift of lead − lead offset by 1 − adjust − 33" is better replaced by something like "Let row be ((lead - lead offset) << 1) - adjust - 33".

[00:42:20.0000] <annevk>
in other words, how do I get away with using << in mathematical expressions in standards

[00:43:45.0000] <zcorpan>
say what "<<" means in the terminology section

[00:48:39.0000] <annevk>
In mathematical expressions << means the arithmetic left shift of the left operand by the right operand.

[00:48:48.0000] <annevk>
something like that?

[00:49:29.0000] <annevk>
hmm

[00:53:55.0000] <annevk>
in Unicode math has ≪ which stands for much less-than

[00:54:26.0000] <annevk>
there's even ⋘

[00:54:28.0000] <annevk>
:)

[00:55:58.0000] <annevk>
oh well, I'll clarify it via some other way

[00:58:36.0000] <charlvn>
only place i've ever used << and >> was in c++ http://www.cplusplus.com/doc/tutorial/basic_io/

[01:00:16.0000] <annevk>
they're available in JavaScript

[01:00:23.0000] <charlvn>
i think it's supposed to be used for left shifts and right shifts though http://wiki.python.org/moin/BitwiseOperators

[01:01:49.0000] <charlvn>
heh! never expected that but it's also documented on mdn https://developer.mozilla.org/en/JavaScript/Reference/Operators/Bitwise_Operators

[01:02:21.0000] <charlvn>
so few people use these, most people just use *2 and /2

[01:02:26.0000] <annevk>
well yes, that's what I was going to use it for

[01:03:39.0000] <charlvn>
is it really that much more efficient? i would expect the interpreter / compiler to perform such optimisations

[01:03:54.0000] <charlvn>
in favour of readable code

[01:04:55.0000] <annevk>
what is more readable depends on what you are doing

[01:05:10.0000] <annevk>
the context here is encoding algorithms

[01:05:31.0000] <charlvn>
that's very true

[01:06:16.0000] <charlvn>
last year i got asked a ridiculous question during an internet with google ireland - how to count the number of binary 1's in an int32

[01:06:38.0000] <charlvn>
that was the only time in my life i ever decided to use a shift and that was mostly for academical reasons

[01:06:50.0000] <charlvn>
s/internet/interview/

[01:10:40.0000] <annevk>
charlvn: quick search on Google reveals it's not such a weird question: http://en.wikipedia.org/wiki/Hamming_weight

[02:29:06.0000] <annevk>
zcorpan: undefined

[02:43:18.0000] <charlvn>
annevk: it's a common question to ask in interviews, but it would be nice to see some practical use cases :P

[02:45:06.0000] <charlvn>
http://en.wikipedia.org/wiki/Hamming_weight#Efficient_implementation <- this is what it's relevant for (in interviews, not use cases)

[03:45:54.0000] <annevk>
hsivonen: did you see https://bugs.webkit.org/show_bug.cgi?id=26694 ?

[04:06:01.0000] <hsivonen>
annevk: I didn't

[04:08:11.0000] <hsivonen>
annevk: commented

[04:11:08.0000] <annevk>
if you have a range from x to y, is there a better way to calculate all possible positions than y-x+1?

[04:11:18.0000] <annevk>
the +1 is kind of ugly

[04:11:43.0000] <roc>
you mean a way to write "y - x + 1" that's less ugly?

[04:12:20.0000] <Ms2ger>
y + 1 - x?

[04:12:25.0000] <Ms2ger>
- x + y + 1?

[04:12:26.0000] <annevk>
:)

[04:13:10.0000] <Ms2ger>
(x�-xy+x)/x?

[04:14:29.0000] <annevk>
haha okay

[04:14:54.0000] <roc>
make your ranges closed at the start and open at the end

[04:15:03.0000] <roc>
that usually simplifies code

[04:15:04.0000] <annevk>
not sure what I was thinking of, I just happen to forget the +1 a lot

[04:15:24.0000] <zcorpan>
+1

[04:16:48.0000] <annevk>
roc: yeah that could work, except with encodings if the lead byte is from 0x81 to 0xFE, using 0xFF everywhere is kind of counter-intuitive too

[04:28:09.0000] <hsivonen>
annevk: c < 0xFF is way more intuitive than c <= 0xFE or c + 1 <= 0xFF

[04:28:27.0000] <hsivonen>
these are integers after all

[05:19:42.0000] <oal>
Do I have to pass an ImageData object along with a message to my web worker? new ImageData(61, 61, new CanvasPixelArray()) doesn't seem to work. Also, could I just be using a Uint8Array for this?

[05:21:56.0000] <annevk>
hsivonen: c < FE + 1 is what I have iirc

[05:22:08.0000] <hsivonen>
annevk: eww

[05:22:20.0000] <annevk>
well

[05:22:21.0000] <hsivonen>
annevk: please make that c < 0xFF

[05:22:32.0000] <annevk>
(FE - A1 +1) or some such

[05:23:01.0000] <gsnedders>
oal: A CanvasPixelArray in modern browsers should be a ClampedUint8Array

[05:23:18.0000] <gsnedders>
oal: and you can pass that to/from worker fine

[05:23:19.0000] <annevk>
could make it FF -A1 I guess, dunno

[05:23:27.0000] <Ms2ger>
ImageData doesn't have a constructor, though

[05:24:56.0000] <oal>
Aha, thanks! Let me give it a shot

[05:25:16.0000] <Ms2ger>
Also, Uint8ClampedArray, no?

[05:26:02.0000] <gsnedders>
Ms2ger: Yeah yeah! :P

[05:26:21.0000] <Ms2ger>
Yay, www-style people still consider SGML boolean attributes

[05:27:39.0000] <gsnedders>
/me ended up passing around a CanvasPixelArray if possible, otherwise Array.prototype.slice.call(data), earlier

[05:27:46.0000] <oal>
Hmm, I get "Uncaught ReferenceError: ImageData is not defined", Chromium 17.

[05:27:55.0000] <Ms2ger>
<Ms2ger> ImageData doesn't have a constructor, though

[05:28:02.0000] <gsnedders>
The fall-back doesn't really work in low memory situations, though

[05:28:14.0000] <Ms2ger>
Also, not supported in workers

[05:28:50.0000] <oal>
Oh, I see. So, I should simply use  an array with the correct length then?

[05:29:46.0000] <gsnedders>
You can pass around the CanvasPixelArray, not the ImageData.

[05:30:26.0000] <oal>
I'm starting out with an empty canvas anyway, so it wouldn't make much sense to pass that to the worker, then? All drawing will take place in the worker

[05:46:04.0000] <zcorpan>
time for a whatwg weekly?

[05:48:30.0000] <karlcow>
:)

[05:52:53.0000] <zcorpan>
karlcow: s/mentionn/mention/g

[05:57:33.0000] <karlcow>
/me tries to find the context :) 

[05:59:39.0000] <zcorpan>
web platform weekly

[06:08:53.0000] <karlcow>
ah!!! French getting into the way

[06:10:14.0000] <karlcow>
zcorpan: fixed! thanks. ☺ will be online in a few minutes.

[06:17:35.0000] <scott_gonzalez>
MikeSmith: We're getting about 4-5 sec run times for the HTML lint scripts.

[06:17:51.0000] <scott_gonzalez>
Per file.

[06:17:58.0000] <scott_gonzalez>
Not sure how much of that is overhead of spawning a new process.

[06:18:25.0000] <scott_gonzalez>
How hard would it be to have the lint scripts accept multiple files?

[06:19:00.0000] <MikeSmith>
scott_gonzalez: hard

[06:19:30.0000] <scott_gonzalez>
hmm...ok

[06:19:49.0000] <MikeSmith>
and most of that is overhead of spawning a new process

[06:19:57.0000] <MikeSmith>
starting up the Java VM each time

[06:20:13.0000] <MikeSmith>
hmm

[06:20:30.0000] <scott_gonzalez>
So if we just had a wrapper around the linters in Java, it should take care of the performance problems?

[06:21:11.0000] <MikeSmith>
I don't know how you would do that

[06:21:30.0000] <scott_gonzalez>
What do the linters take as input?

[06:22:01.0000] <MikeSmith>
the tool that actually does the validation takes a schema file and a HTML file as input

[06:22:05.0000] <scott_gonzalez>
Keep in mind I know nothing about Java...

[06:22:21.0000] <MikeSmith>
well, this isn't doing anything through Java directly

[06:22:28.0000] <MikeSmith>
it's just calling that command-line tool

[06:22:47.0000] <scott_gonzalez>
Right, I'm wondering if we could do it directly through Java and just call whatever the CLI calls internally.

[06:23:23.0000] <scott_gonzalez>
Of course, that would only work if the CLI is really simple and just passes the data off to some other class.

[06:24:05.0000] <MikeSmith>
even then I don't see any way to do it simply that would not require starting up the jre each and every time

[06:24:19.0000] <MikeSmith>
this is why validator.nu runs as a web service

[06:24:22.0000] <MikeSmith>
well, part of way

[06:24:51.0000] <MikeSmith>
I would really, really like to help you guys set up an instance of the validator.nu backend and have you use that

[06:25:11.0000] <MikeSmith>
you will for most cases see run times of 100ms or so per file, probably

[06:25:36.0000] <scott_gonzalez>
If it were small and simple to include in the jquery-ui repo, we would.

[06:26:03.0000] <MikeSmith>
it just amounts to a bunch of jar files

[06:26:19.0000] <MikeSmith>
if you would be wiling to have the jar files in the rep

[06:26:22.0000] <MikeSmith>
*repo

[06:26:44.0000] <scott_gonzalez>
What kind of total filesize would we be looking at?

[06:27:36.0000] <MikeSmith>
lemme check and see

[06:30:29.0000] <MikeSmith>
for the validator code itself, it would be 4MB

[06:30:43.0000] <MikeSmith>
8 jar files

[06:31:01.0000] <MikeSmith>
I'll check in the size of the 3rd-party dependencies

[06:34:45.0000] <MikeSmith>
28 3rd-party jar files

[06:34:52.0000] <MikeSmith>
checking the size total now

[06:36:14.0000] <MikeSmith>
actually, only 16 3rd-party files

[06:39:09.0000] <MikeSmith>
12MB for the 3rd-party files

[06:39:20.0000] <MikeSmith>
so 16MB total

[06:39:33.0000] <MikeSmith>
scott_gonzalez: ↑

[06:42:27.0000] <scott_gonzalez>
Ok, let's try it out and see how it works.

[06:43:44.0000] <scott_gonzalez>
Can you work with jzaefferer to get us set up with that?

[06:43:55.0000] <MikeSmith>
scott_gonzalez: yeah, absolutely

[06:44:04.0000] <scott_gonzalez>
jzaefferer = Jörn, the other dev lead for jQuery UI

[06:44:10.0000] <MikeSmith>
oh

[06:44:12.0000] <MikeSmith>
OK

[06:44:18.0000] <MikeSmith>
what time zone is he in?

[06:44:20.0000] <jzaefferer>
MikeSmith: would be great if you could put together a build that we can include

[06:44:31.0000] <MikeSmith>
hey jzaefferer

[06:44:32.0000] <scott_gonzalez>
GMT+1, but I'm pretty sure he doesn't sleep :-P

[06:44:37.0000] <MikeSmith>
heh

[06:44:47.0000] <MikeSmith>
jzaefferer: yeah, I'm sure I can put something together for you

[06:44:53.0000] <jzaefferer>
Planning to put that into an npm module, that we'll then include into our grunt build

[06:45:06.0000] <MikeSmith>
ah, OK

[06:45:19.0000] <MikeSmith>
there are a couple of minor changes I want to make to the validator code to make it more portable

[06:45:25.0000] <MikeSmith>
I will try to get those done tomorrow

[06:45:26.0000] <jzaefferer>
Whatever the binary ends up looking like, as long as we can somehow pass a list of files to validate and it doesn't take as long, that should work

[06:45:30.0000] <MikeSmith>
pending review from hsivonen

[06:45:39.0000] <MikeSmith>
yeah, we can do that

[06:46:29.0000] <jzaefferer>
OR we implement relaxNG in node/javascript ;)

[06:46:35.0000] <MikeSmith>
heh

[06:46:39.0000] <MikeSmith>
you don't want to do that :)

[06:46:45.0000] <jzaefferer>
yeah...

[06:47:00.0000] <jzaefferer>
well, I'll stick around here, let me know

[06:47:05.0000] <MikeSmith>
and anyway, validator.nu is doing far more than relaxng is capable of on its own

[06:47:06.0000] <MikeSmith>
OK

[06:47:16.0000] <MikeSmith>
to be clear, this will require having a process running and listening on a particular port

[06:47:22.0000] <MikeSmith>
port 8888 by default

[06:47:35.0000] <MikeSmith>
just for the duration of the test run

[06:47:40.0000] <jzaefferer>
okay

[06:48:16.0000] <MikeSmith>
so I will aim to have it all ready for you guys by end of next week

[06:48:21.0000] <jzaefferer>
as long as that doesn't need any actual network outside of the local machine, that's fine

[06:48:40.0000] <MikeSmith>
yeah, it will all be local

[06:49:00.0000] <jzaefferer>
cool

[06:49:33.0000] <MikeSmith>
there are some things that it normally tries to download from remote hosts when it first starts up, but we already have an option in place to have it use cached copies instead

[06:49:43.0000] <jzaefferer>
nice

[06:49:48.0000] <MikeSmith>
those copies are inside one of the jars

[07:01:21.0000] <MikeSmith>
hsivonen: if/when you're around and have a minute, wanted to ask you for a sanity check on a couple changes to make it possible to run the validator just from the jar files only, without needing to look for any files on the filesystem

[07:02:40.0000] <MikeSmith>
one is just to have it not look for the validator/log4j.properties but instead set the properties in the code directly

[07:03:39.0000] <MikeSmith>
the other is to have it not look for the local copies of the www.iana.org and wiki.whatwg.org on the filesystem but instead get them from the local-entities jar file

[07:04:16.0000] <MikeSmith>
if you don't have time I'll just e-mail you the actual patches

[07:05:05.0000] <MikeSmith>
immediate reason for the changes is to make it possible for the JQuery UI team to run their tests from just using the jar files

[07:05:17.0000] <MikeSmith>
but more generally to let anybody else be able to do that too

[07:06:53.0000] <Ms2ger>
MikeSmith, Chrome got into an infinite loop again: http://w3c-test.org/framework/results/web-storage-dev/

[07:07:33.0000] <MikeSmith>
no clues

[07:07:39.0000] <MikeSmith>
maybe ping Berjon about it

[07:07:59.0000] <Ms2ger>
And segfaulted now, yay Chrome!

[07:08:34.0000] <MikeSmith>
oh man

[07:10:40.0000] <Ms2ger>
/me blames Google

[07:11:18.0000] <Ms2ger>
Hrm

[07:11:29.0000] <Ms2ger>
That doesn't explain why Opera has the same issue, though

[07:12:02.0000] <MikeSmith>
same issue?

[07:12:06.0000] <MikeSmith>
the loop problem?

[07:12:16.0000] <Ms2ger>
Yep

[07:13:20.0000] <Ms2ger>
Seems there's something wrong with the "run in most-needed order"

[07:13:23.0000] <jarek>
should there be classList property on SVG elements?

[07:13:35.0000] <jarek>
Firefox implements it, but Chrome does not

[07:13:54.0000] <Ms2ger>
Yes

[07:14:14.0000] <Ms2ger>
It's on Element in DOM Core

[07:14:19.0000] <jarek>
but SVGElement.prototype.classList is not standardized, right?

[07:14:29.0000] <jarek>
it's in DOM Core? I though I have seen it in HTML5 spec

[07:14:33.0000] <Ms2ger>
Sure

[07:14:39.0000] <Ms2ger>
It used to be in HTML

[07:40:01.0000] <annevk>
why would you want to operate on local name?

[07:40:16.0000] <annevk>
everything that ignores namespaces operates on name thus far

[07:40:19.0000] <Ms2ger>
Say what?

[07:40:30.0000] <annevk>
context: https://www.w3.org/Bugs/Public/show_bug.cgi?id=16563

[07:41:07.0000] <Ms2ger>
smaug____,

[07:43:00.0000] <annevk>
hmm WHATWG Weekly

[07:43:17.0000] <annevk>
okay, if I can write it in 40 min

[07:43:18.0000] <annevk>
so

[07:43:19.0000] <smaug____>
annevk:  if you set attribute

[07:43:22.0000] <annevk>
lots of canvas

[07:43:25.0000] <smaug____>
you don't care about prefix

[07:43:35.0000] <smaug____>
you care about namespace and localName

[07:43:43.0000] <annevk>
smaug____: setAttribute("xlink:href", "test")

[07:43:48.0000] <annevk>
try it

[07:44:25.0000] <annevk>
if the element has an attribute xlink:href in the xlink namespace declared...

[07:45:53.0000] <smaug____>
so ?

[08:20:00.0000] <annevk>
rough draft: http://blog.whatwg.org/weekly-canvas-v5

[08:25:07.0000] <annevk>
smaug____: well it works with name there, not local name...

[08:25:36.0000] <smaug____>
and the question I had is, so ?

[08:25:37.0000] <smaug____>
:)

[08:26:05.0000] <annevk>
everything that ignores namespaces operates on name thus far

[08:26:48.0000] <annevk>
seems kind of weird to have that different here

[08:26:51.0000] <MikeSmith>
annevk: s/devices as that the vast/devices, as the vast/

[08:27:10.0000] <smaug____>
if you are handling namespaces, you really don't want to care of the prefixes

[08:27:17.0000] <smaug____>
you have namespace and localName

[08:27:36.0000] <annevk>
thanks MikeSmith

[08:27:48.0000] <smaug____>
(but I'm just in middle of something else...)

[08:28:16.0000] <annevk>
that's true enough, but I thought we didn't care about namespaces?

[08:28:25.0000] <annevk>
but I guess then we should not have attributeNamespace either hmm

[08:28:36.0000] <annevk>
annoying

[08:29:24.0000] <smaug____>
oh yes, namespaced attributes are very annoying

[10:18:38.0000] <dglazkov>
good morning, Whatwg!

[10:18:47.0000] <dglazkov>
and good night, Ms2ger

[10:18:51.0000] <Ms2ger>
Morning, dglazkov

[10:19:39.0000] <dglazkov>
now you're just messing with me

[10:40:58.0000] <TabAtkins>
Ms2ger: What's this about SGML boolean attributes?

[10:43:11.0000] <Ms2ger>
http://lists.w3.org/Archives/Public/www-style/2012Mar/0667.html

[10:43:54.0000] <TabAtkins>
Note: Christoph is not part of the WG.  He's one of the many contributors, and sometimes gets strange ideas.

[10:50:00.0000] <Ms2ger>
Note: I said "www-style", not "The Cabal"

[10:50:04.0000] <hober>
Hixie: in http://lists.w3.org/Archives/Public/public-html/2012Mar/0739.html rubys asked me to "obtain and incorporate any feedback you feel is necessary from the editor" on my counter proposal on the web+ prefix issue: http://www.w3.org/html/wg/wiki/User:Eoconnor/ISSUE-189

[10:50:22.0000] <hober>
Hixie: so, yeah. let me know if you have any thoughts on that.

[10:55:06.0000] <Ms2ger>
So, when doing for (var p in obj), where obj supports both indexed and named properties, which values should p take?

[10:55:25.0000] <gsnedders>
Ms2ger: For WebIDL?

[10:55:53.0000] <Ms2ger>
Hmm?

[10:57:09.0000] <gsnedders>
Ms2ger: A WebIDL-defined object, or a general ES one?

[10:57:21.0000] <Ms2ger>
Former

[11:03:06.0000] <gnarf>
hey WG guys... newz2000 over on #html5 was bringing up a feature that could be pretty handy in the future... Some way to detect/convey the current user's locale preferences in JavaScript

[11:03:45.0000] <Ms2ger>
No

[11:03:59.0000] <Ms2ger>
That's a privacy bug, not a feature

[11:04:05.0000] <gsnedders>
Already sent over HTTP, though

[11:04:13.0000] <gnarf>
sent on EVERY http connection

[11:04:16.0000] <gnarf>
privacy my ass

[11:04:19.0000] <gnarf>
(sorry)

[11:05:05.0000] <newz2000>
hi, sorry I missed the first part of the discussion

[11:05:20.0000] <newz2000>
I see in gecko 5+ the first value of the user's preferred lang is available in navigator.language

[11:05:25.0000] <newz2000>
that's an awesome improvement

[11:05:58.0000] <newz2000>
I suspect it only returns the first value because of backwards compatibility

[11:06:08.0000] <newz2000>
and it's not in the same format as the http header

[11:06:58.0000] <gsnedders>
The sensible format would surely be an array of language tags?

[11:07:12.0000] <newz2000>
that would be better than the string format that gets sent as part of the http header

[11:07:22.0000] <newz2000>
the http header includes a weighting value

[11:08:00.0000] <newz2000>
even if we only had the string value though it would be an improvement, it's pretty easily parsed.

[11:09:05.0000] <newz2000>
This was annoying a couple years ago, but in recent times client side templating is becoming more common

[11:09:43.0000] <newz2000>
and therefore localization of some resources can be done client side, except that you've got to use tricks to go to the server and find out what language is being sent in the http header

[11:10:00.0000] <newz2000>
I'd be happy to file bugs or some thing else to start productive conversation of the issue

[11:10:24.0000] <newz2000>
what is the best process?

[11:20:03.0000] <TabAtkins>
newz2000: This isn't a good room to discuss Gecko specifics, except insofar as it's relevant to specs.

[11:20:18.0000] <TabAtkins>
newz2000: But if you want to file bugs or something, go for it.

[11:20:43.0000] <newz2000>
well, my hope is to get all browsers to provide a common way

[11:20:58.0000] <newz2000>
none give all the info but a recent version of ff gives a little info and I hear IE does too.

[11:21:13.0000] <TabAtkins>
Oh, I see.  I skimmed past your wall of text. ^_^

[11:21:35.0000] <newz2000>
Yeah, maybe a mailing list post would be better, though it looks to be a pretty high volume list

[11:25:23.0000] <TabAtkins>
Just send a post to whatwg⊙wo

[11:25:45.0000] <newz2000>
ok.

[11:25:51.0000] <newz2000>
Thanks for the encouragement TabAtkins

[11:34:10.0000] <kennyluck>
Perhaps I shouldn't say this but from time to time Christoph's mails do make me laugh.

[11:37:15.0000] <TabAtkins>
He's clearly on the "theoretical" side of the specturm.

[12:35:28.0000] <annevk>
Ms2ger: hmm yeah

[12:35:40.0000] <annevk>
Ms2ger: the whole named property business needs a careful look

[12:37:23.0000] <Ms2ger>
Yeah

[12:37:36.0000] <Ms2ger>
No spec that I know of actually defines the order

[13:10:01.0000] <annevk>
http://calculist.org/blog/2012/03/29/synchronous-module-loading-in-es6/ because script scheduling was not complicated enough just yet?

[13:10:47.0000] <annevk>
kind of makes importScripts obsolete though I guess

[13:11:01.0000] <annevk>
s/though//

[13:13:02.0000] <MikeSmith>
http://www.belshe.com/2012/03/29/comments-on-microsofts-spdy-proposal/

[13:14:27.0000] <Ms2ger>
I like how the one comment talks about "HTML + Mobility"

[13:34:12.0000] <eseidel>
Curious if anyone here has knowledge of <iframe seamless=true>.  Either attempted implementing it, or worked on the spec?

[13:34:17.0000] <eseidel>
(besides Hixie of course)

[13:35:02.0000] <MikeSmith>
eseidel: no browser projects have attempted to implement it yet, afaik

[13:35:26.0000] <MikeSmith>
eseidel: btw, that sentence you cite seems grammatical to me

[13:35:30.0000] <MikeSmith>
though long

[13:35:41.0000] <eseidel>
MikeSmith: it took my little brain quite a while to parse

[13:35:47.0000] <eseidel>
MikeSmith: I'm not doubting it's english :)

[13:35:51.0000] <eseidel>
(or gramatical)

[13:35:51.0000] <MikeSmith>
heh

[13:35:53.0000] <Ms2ger>
<iframe seamless>, you mean, I guess

[13:35:54.0000] <eseidel>
just infinite

[13:36:00.0000] <MikeSmith>
en-US-hixie

[13:36:18.0000] <eseidel>
MikeSmith, Ms2ger are either of you familiar with the spec, enough to field questions?

[13:36:28.0000] <eseidel>
I'm looking (briefly) at what it would take in WebKit

[13:36:42.0000] <Ms2ger>
I'm not familiar, but feel free to bat me a question :)

[13:36:49.0000] <TabAtkins>
I'm roughly familiar with the spec.

[13:37:09.0000] <MikeSmith>
eseidel: https://bugzilla.mozilla.org/show_bug.cgi?id=631218 fwiw

[13:37:57.0000] <eseidel>
MikeSmith: k

[13:38:17.0000] <eseidel>
MikeSmith: it appears https://bugs.webkit.org/show_bug.cgi?id=45950 is ours

[13:40:13.0000] <eseidel>
TabAtkins: first question: re: the CSS parts.  I assume it's only that the "root style" of the inner document as it would be for a child of the iframe's parent.  NOT that global styles from the parent docuemnt apply to the inner document?  (such as a body { } selector?)

[13:40:47.0000] <Ms2ger>
I believe you assume wrong

[13:41:10.0000] <Ms2ger>
Or I may be parsing you wrongly :)

[13:41:31.0000] <TabAtkins>
eseidel: Selectors never match across the boundary.

[13:41:35.0000] <eseidel>
good

[13:41:46.0000] <TabAtkins>
Inheritance crosses the boundary, and user stylesheets ae cloned across the boundary.

[13:41:47.0000] <Ms2ger>
Or I'm plain wrong

[13:41:48.0000] <annevk>
I thought that was the whole point

[13:41:53.0000] <eseidel>
but, all selectors that might apply to the <iframe> or it's kids, are part of the style inherited by the inner-doucment's root

[13:41:57.0000] <annevk>
that Selectors cross the boundary

[13:42:05.0000] <TabAtkins>
(Wholely cloned, not haing their selectors apply across.)

[13:42:30.0000] <TabAtkins>
Selectors targetting the <iframe>'s children do nothing.

[13:42:40.0000] <TabAtkins>
The nested document inherits from the <iframe> element itself only.

[13:42:56.0000] <eseidel>
iframe:first-child { color: red } would not target the inner doc?

[13:42:59.0000] <Ms2ger>
You means iframe > foo?

[13:43:03.0000] <eseidel>
if, so that makes things super easy

[13:43:08.0000] <TabAtkins>
eseidel: Correctly.

[13:43:10.0000] <Ms2ger>
Because that wouldn't make sense

[13:43:11.0000] <eseidel>
from a CSS perspective

[13:43:19.0000] <TabAtkins>
Or rather, "iframe:first-child" would, because that still targets the iframe.

[13:43:21.0000] <eseidel>
OK, so it sounds like the CSS side is simple

[13:43:24.0000] <Ms2ger>
body {} would match the inner document's body, no?

[13:43:25.0000] <TabAtkins>
But "iframe > :first-child" doesn't.

[13:43:29.0000] <TabAtkins>
Ms2ger: No.

[13:43:33.0000] <TabAtkins>
Go read the spec. ^_^

[13:43:45.0000] <eseidel>
the spec only really enumerates what it does do :)

[13:43:54.0000] <eseidel>
the first two points state the 2 CSS parts

[13:44:08.0000] <TabAtkins>
eseidel: Yes, and thus it doesn't do anything else.

[13:44:11.0000] <Ms2ger>
In a CSS-supporting user agent: the user agent must add all the style sheets that apply to the iframe element to the cascade of the active document of the iframe element's nested browsing context, at the appropriate cascade levels, before any style sheets specified by the document itself.

[13:44:20.0000] <eseidel>
http://www.whatwg.org/specs/web-apps/current-work/#attr-iframe-seamless

[13:44:24.0000] <TabAtkins>
Ms2ger: Oh, duh, now I understand your question.  Yes.

[13:44:39.0000] <Ms2ger>
Then why did you say No?

[13:44:49.0000] <TabAtkins>
The stylesheet gets cloned over into the iframe's document, so yeah, a "body" selector in the outer document will also match the <body> in the ref'd document.

[13:44:51.0000] <eseidel>
ok, so I misunderstood too then

[13:44:54.0000] <eseidel>
ok

[13:44:57.0000] <TabAtkins>
Ms2ger: Because I thought you were saying something else.

[13:44:59.0000] <eseidel>
so that's a bit weird

[13:45:08.0000] <Ms2ger>
I wonder what you managed to read into that, then :)

[13:45:10.0000] <eseidel>
and may be difficult

[13:45:13.0000] <TabAtkins>
Ms2ger: I"m not sure.

[13:45:21.0000] <eseidel>
TabAtkins: are these stylesheets accessible from teh inner document?

[13:45:25.0000] <eseidel>
TabAtkins: are they cloned?

[13:45:27.0000] <TabAtkins>
eseidel: No.

[13:45:36.0000] <TabAtkins>
They just apply in the cascade before the doc's own stylesheets.

[13:45:37.0000] <eseidel>
TabAtkins: are they live?  such that modification to them by the outer document effects the inner?

[13:45:40.0000] <TabAtkins>
But they're not visible.

[13:45:42.0000] <TabAtkins>
Yes, they're live.

[13:46:37.0000] <eseidel2>
TabAtkins: sorry, irc cloud is being stupid

[13:46:50.0000] <eseidel2>
TabAtkins: I was asking:

[13:46:56.0000] <eseidel2>
eseidel> TabAtkins: are these stylesheets accessible from teh inner document?

[13:46:57.0000] <eseidel2>
1:46 PM <eseidel> TabAtkins: are they cloned?

[13:46:57.0000] <eseidel2>
1:46 PM <eseidel> TabAtkins: are they live?  such that modification to them by the outer document effects the inner?

[13:47:09.0000] <Ms2ger>
<TabAtkins> eseidel: No.

[13:47:09.0000] <Ms2ger>
<TabAtkins> They just apply in the cascade before the doc's own stylesheets.

[13:47:09.0000] <Ms2ger>
<eseidel> TabAtkins: are they live?  such that modification to them by the outer document effects the inner?

[13:47:09.0000] <Ms2ger>
<TabAtkins> But they're not visible.

[13:47:09.0000] <Ms2ger>
<TabAtkins> Yes, they're live.

[13:47:17.0000] <TabAtkins>
Thanks, Ms2ger .

[13:47:20.0000] <eseidel2>
ok

[13:47:21.0000] <Ms2ger>
Np

[13:47:23.0000] <eseidel2>
so that's easier

[13:47:28.0000] <TabAtkins>
Tehy're not literally cloned, just spammed into the cascade.

[13:47:36.0000] <ojan>
TabAtkins: what are the use-cases for :empty? Could we just make :empty match nodes that only contain non-significant whitespace?

[13:47:48.0000] <ojan>
TabAtkins: alternately, i guess we could add a :collapsed pseudo

[13:47:50.0000] <TabAtkins>
ojan: I really don't know what the use-case was.

[13:47:56.0000] <eseidel2>
TabAtkins: yeah, that's fine

[13:48:11.0000] <annevk>
I think :empty might have been for empty table cells

[13:48:47.0000] <ojan>
annevk: oh, could be

[13:49:02.0000] <eseidel2>
so TabAtkins , it seems the second bullet does not support the iframe:first-child { } selector matching anything in the inner document

[13:49:11.0000] <eseidel2>
TabAtkins: that's your interpretation, correct?

[13:49:14.0000] <TabAtkins>
ojan: I suspect that "insignificant white-space" would be okay for :empty, fi the spec was changed.

[13:49:35.0000] <eseidel2>
TabAtkins: that iframe:first-child { } matches nothing in the inner document (unless of course there is an iframe in that inner document with a child)

[13:49:36.0000] <TabAtkins>
eseidel2: Your selector is wrong. ^_^  If you meant "iframe > :first-child", then yes.

[13:49:54.0000] <TabAtkins>
Yes.

[13:49:57.0000] <eseidel2>
TabAtkins: my little CSS brain can't parse that anymore.  long since paged out all mys elector knowledge

[13:50:11.0000] <eseidel2>
TabAtkins: that's a defendant of :first-child ?

[13:50:14.0000] <TabAtkins>
iframe:first-child means "an iframe who is a first child".

[13:50:15.0000] <eseidel2>
decendant

[13:50:23.0000] <eseidel2>
oh, you're right

[13:50:32.0000] <eseidel2>
I want, first child of the frame

[13:50:47.0000] <eseidel2>
so iframe > :first-child then?

[13:50:48.0000] <TabAtkins>
Yeah, that won't "cross over" and select the first element in the ref'd doc.

[13:50:53.0000] <eseidel2>
ok, good

[13:51:30.0000] <TabAtkins>
Ooh, interesting diversion here.  What happens with @seamless and a <style scoped> on an ancestor?

[13:51:32.0000] <eseidel2>
TabAtkins: so the 3rd bullet is just saying that the root element of the inner doc inherits from the iframe's style

[13:51:39.0000] <TabAtkins>
yup

[13:52:22.0000] <TabAtkins>
Actually, I answered my own question.  The scoped stylesheet is just spammed into the cascade as normal, without carrying over any scoping semantics.

[13:52:38.0000] <TabAtkins>
Which will be weird with :scope selectors or whatever.

[13:53:01.0000] <TabAtkins>
I should raise an issue.

[13:53:13.0000] <Ms2ger>
And take over editing this stuff ;)

[13:53:57.0000] <eseidel2>
TabAtkins: so iframe still remains a replaced element

[13:54:05.0000] <eseidel2>
TabAtkins: it just magically acts like a block

[13:54:10.0000] <eseidel2>
in a manual hacky way

[13:54:17.0000] <TabAtkins>
eseidel2: Yes.

[13:55:12.0000] <eseidel2>
TabAtkins: so it behaves like a hacky inline-block of sorts?

[13:55:16.0000] <eseidel2>
i guess not quite

[13:55:22.0000] <eseidel2>
since inline block doesn't have width: auto?

[13:55:24.0000] <eseidel2>
I don't' remember, actually

[13:56:14.0000] <TabAtkins>
inline-block's width:auto translates to 'fit-content'.

[13:56:23.0000] <TabAtkins>
While block's width:auto translates to 'fill' or whatever.

[14:00:04.0000] <MikeSmith>
http://www.w3.org/News/2012#entry-9404

[14:00:25.0000] <MikeSmith>
publication announcement for the HTML WG TR drafts

[14:01:40.0000] <Ms2ger>
This month?!

[14:01:59.0000] <hober>
whooo!

[14:02:10.0000] <paul_irish>
\o/ MikeSmith

[14:02:20.0000] <Ms2ger>
Yay for having a slightly less obsolete document on TR/!

[14:02:48.0000] <MikeSmith>
heh

[14:04:41.0000] <MikeSmith>
it would be good to use this to give web developers a heads-up about the updates to the APIs section of the diff-from-HTML4 document

[14:04:44.0000] <MikeSmith>
http://www.w3.org/TR/2012/WD-html5-diff-20120329/#apis

[14:05:09.0000] <MikeSmith>
zcorpan added all kinds of awesome to that

[14:06:12.0000] <MikeSmith>
along with massively detailed section about what's changed over the last 12 months

[14:06:13.0000] <MikeSmith>
http://www.w3.org/TR/2012/WD-html5-diff-20120329/#changes-2011-05-25

[14:06:24.0000] <MikeSmith>
or 10 months

[14:20:29.0000] <karlcow>
→ curl -sI http://hansmuller-webkit.blogspot.ca/2012/03/css-transform-origin-coming-to-svg.html | grep Content-Type

[14:20:30.0000] <karlcow>
Content-Type: text/html; charset=UTF-8

[14:20:41.0000] <karlcow>
I wonder why blogspot call that HTML

[14:20:48.0000] <karlcow>
it is barely HTML

[14:21:14.0000] <karlcow>
there is a tendency to send big JSON files packages in an pseudo HTML UI

[14:21:18.0000] <karlcow>
jux.com does that too

[14:23:14.0000] <gsnedders>
Old New Twitter.com did too, not looked at source of New New Twitter

[14:24:22.0000] <karlcow>
really silly for blog posts.

[14:24:28.0000] <karlcow>
You do a save as of the page

[14:24:37.0000] <karlcow>
save it as html

[14:24:47.0000] <karlcow>
then try to load it in your browser later on

[14:24:50.0000] <karlcow>
BLANK PAGE

[14:24:52.0000] <karlcow>
nothing

[14:29:16.0000] <karlcow>
as a matter of facts the most reliable way to access the content seems to be the feed http://hansmuller-webkit.blogspot.ca/feeds/posts/default

[14:29:59.0000] <TabAtkins>
karlcow: The most reliable way to save a page is to open up developer tools, right click on the <html> element, and select "copy as html".  Then paste into a text file yourself.

[14:30:25.0000] <TabAtkins>
Add a doctype yourself.

[14:30:42.0000] <karlcow>
not really user friendly

[14:33:46.0000] <eseidel2>
TabAtkins: ok, so talk to me about testing

[14:34:00.0000] <TabAtkins>
?_?

[14:34:02.0000] <eseidel2>
TabAtkins: do you know if we have any seamless tests? Or should I start writing? :)

[14:34:11.0000] <TabAtkins>
Since we don't have an impl, I doubt we ahve tests.

[14:34:15.0000] <eseidel2>
k

[14:34:24.0000] <eseidel2>
TabAtkins: well, thanks for your thoughts :)

[14:34:28.0000] <TabAtkins>
Welcome!

[14:51:56.0000] <eseidel>
TabAtkins: talk to me about selection

[14:52:05.0000] <eseidel>
TabAtkins: would you be expected to be able to select across a seamless frame?

[14:52:28.0000] <eseidel>
I suspect you'll say yes... to which I'll reply "you're nuts"

[14:52:29.0000] <eseidel>
:)

[14:52:47.0000] <eseidel>
rniwa: ^^^

[14:52:58.0000] <rniwa>
eseidel: ?

[14:53:24.0000] <rniwa>
eseidel: any frame should be treated as an atomic element.

[14:53:42.0000] <rniwa>
eseidel: i.e. you either select the entire frame or not selecting the frame.

[14:53:52.0000] <eseidel>
rniwa: lets wait for TabAtkins to reply.  my understanding is <iframe seamless> is supposed to act basically like it's a <div> :)

[14:53:55.0000] <rniwa>
eseidel: there's no way for us to allow selection that crosses frame boundary

[14:54:00.0000] <eseidel>
basically fake not being a replaced element

[14:54:20.0000] <eseidel>
rniwa: that was my understanding, thank you for confirming

[14:54:37.0000] <eseidel>
(hence my "you'r nuts" comment above"

[14:55:38.0000] <eseidel>
/me looks forward to TabAtkins's return

[14:55:53.0000] <rniwa>
eseidel: somehow chrome & colloquy are interfering with each other today :\

[14:56:01.0000] <rniwa>
maybe it's m-18 thing

[14:56:20.0000] <eseidel>
rniwa: donno

[14:56:26.0000] <rniwa>
it stops responding when I'm running both of them at the same time

[14:56:33.0000] <rniwa>
they stop*

[14:56:36.0000] <eseidel>
rniwa: I've seen colloquy have trouble today too

[14:56:41.0000] <eseidel>
rniwa: but I normally use irccloud

[14:56:51.0000] <rniwa>
eseidel: chrome m-18 was just pushed yesterday

[14:56:53.0000] <eseidel>
rniwa: I can invite you if you're interested

[14:57:05.0000] <rniwa>
eseidel: not interested, but thanks

[15:00:51.0000] <rniwa>
huh... it seems like different processes keep dead-locking :(

[15:00:55.0000] <rniwa>
/me reboots his machine

[15:12:48.0000] <TabAtkins>
Whoops, back.

[15:13:02.0000] <TabAtkins>
rniwa is right.

[15:13:22.0000] <TabAtkins>
Seamles iframes are still iframes.  They have only the effects listed in the spec.

[15:22:32.0000] <eseidel>
TabAtkins: I'm just tryign to interpret the last bullet in the spec:

[15:22:32.0000] <eseidel>
User agents should, in general, act as if the active document of the iframe's nested browsing context was part of the document that the iframe is in, if any.

[15:22:59.0000] <eseidel>
TabAtkins: you believe that does not apply to selection

[15:23:04.0000] <eseidel>
or isn't trying to, rather

[15:23:13.0000] <eseidel>
(since donig so would be very very difficult in webkit)

[15:28:06.0000] <eseidel>
TabAtkins: my follow-up questions are about if this should affect form-control tab ordering, as well as form submission (I assume that form elements in the child don't some how magically end up in forms of the parent)

[15:29:15.0000] <eseidel>
TabAtkins: i'm not suggesting it should, but just making sure that that last bullet doesn't pull in anything too weird

[15:29:33.0000] <eseidel>
TabAtkins: trying to anticipate the craziness before I start writing code

[15:30:12.0000] <TabAtkins>
Hm.  I'd ask Hixie for clarification on those points.

[15:30:16.0000] <TabAtkins>
But he's gone until next week.

[15:31:27.0000] <eseidel>
TabAtkins: so hixie is our obi-wan here?

[15:31:35.0000] <eseidel>
TabAtkins: no one else has worked on the seamless stuff? :)

[15:31:43.0000] <TabAtkins>
Well, he knows what he intended when he wrote that, presumably.

[15:31:57.0000] <eseidel>
ok

[15:32:09.0000] <eseidel>
well, I'll just write it down in my "possible issues" list and start testing

[15:32:12.0000] <eseidel>
TabAtkins: thanks

[15:39:05.0000] <eseidel>
TabAtkins: seamless is going to be weird

[15:39:19.0000] <eseidel>
TabAtkins: because if you try to make somethign small, you'll have to constrict the size of your <html>

[15:39:31.0000] <eseidel>
TabAtkins: as normally <body> would fill the entire width, no?

[15:39:48.0000] <eseidel>
TabAtkins: for example, say you had an iframe with a div in it which was 100x100, and you assumed that was your content size

[15:39:55.0000] <eseidel>
TabAtkins: it would look that way when you viewed it independently

[15:40:14.0000] <eseidel>
TabAtkins: but when you tried to make it seamless in your doc, wouldn't the html/body force it to be full width?

[15:40:22.0000] <eseidel>
or am I mis-remembering my CSS?

[15:40:37.0000] <TabAtkins>
Why would it be forced to full width?  The iframe just changes from "default to a width of 300" to "default to a width of 'fill'".

[15:41:56.0000] <eseidel>
TabAtkins: I see, the iframe doesn't take the width of the child content, only the height

[15:42:14.0000] <eseidel>
In visual media, in a CSS-supporting user agent: the user agent should set the intrinsic width of the iframe to the width that the element would have if it was a non-replaced block-level element with 'width: auto'.

[15:42:22.0000] <TabAtkins>
Yeah, it acts more or less like a normal block element.

[15:42:26.0000] <eseidel>
good

[15:44:20.0000] <eseidel>
TabAtkins: you know of no way to access the "intrinsic" height of an element from JS, right?  that's only used in width calculations internally, correct?

[15:44:35.0000] <eseidel>
I believe we only expose the computed width/height

[15:47:25.0000] <TabAtkins>
yes

[15:49:02.0000] <eseidel>
TabAtkins: so seamless iframes are still replaced elements, and still inline, they just have funny intrinsic width as though they were blocks, correct?

[15:49:15.0000] <TabAtkins>
yes

[15:49:19.0000] <eseidel>
TabAtkins: (once again, I appreciate your consultation on this)

[15:54:32.0000] <TabAtkins>
np

[16:12:14.0000] <roc>
I've implemented part of 'seamless' for Gecko, although the patch hasn't landed

[16:12:52.0000] <roc>
the layout bits

[16:12:59.0000] <roc>
not the style bits

[16:38:18.0000] <eseidel>
TabAtkins: am I reading http://www.whatwg.org/specs/web-apps/current-work/#sandboxed-seamless-iframes-flag correctly, that the flag name has not yet been defined?

[16:38:27.0000] <eseidel>
TabAtkins: it's mentioned, but not given a name...

[16:38:32.0000] <eseidel>
(making it difficult to test! :)

[16:41:09.0000] <TabAtkins>
The flag is called "the sandboxed seamless iframes flag".  There's no value you can put in @sandbox to control it, though.

[16:43:32.0000] <eseidel>
TabAtkins: I see, so I just have to use <iframe sandbox> to set all the flags :)

[16:43:36.0000] <TabAtkins>
yeah

[16:44:01.0000] <eseidel>
TabAtkins: well, this will make things interesting to test


2012-03-30
[17:01:02.0000] <eseidel>
TabAtkins: well, I uploaded my first-pass tests to https://bugs.webkit.org/show_bug.cgi?id=45950.  I've not yet run them.  I'll work on more tests and implementation tomorrow.  Still unclear how difficult this will be.  The devil is in the details.

[17:04:07.0000] <TabAtkins>
kk, cool

[01:33:56.0000] <annevk>
ooh

[01:34:01.0000] <annevk>
was it webreq not pubreq?

[01:34:24.0000] <annevk>
yes it is :/

[02:32:14.0000] <annevk>
so it seems Gecko is the only browser to support http://en.wikipedia.org/wiki/Big5#Unicode-at-on which is cited as of limited success

[02:32:44.0000] <annevk>
taking IE's code table, then overriding the PUA characters with the HKSCS mapping, might be a somewhat sensible way forward

[02:53:07.0000] <hsivonen>
hmm. an HTML WG poll coming up. we haven't had one of those in a while

[03:02:18.0000] <zcorpan>
hsivonen: what's it about?

[03:09:14.0000] <hsivonen>
zcorpan: content model of <object>

[03:10:25.0000] <zcorpan>
woot

[03:11:17.0000] <Ms2ger>
/me sighs, ignores

[03:12:15.0000] <jgraham>
But isn't it obvious that a popular vote is the best way to decide technical questions? The only think we're doing wrong is not televising it. And getting Simon Cowell involved somehow.

[03:13:59.0000] <Ms2ger>
We've got a Simon, let him do it

[03:16:31.0000] <zcorpan>
Content model: a single sarcasm element.

[03:17:08.0000] <jgraham>
I'm not sure we would fit the role. zcorpan doesn't naturally inspire the urge to punch him in the face (at least as far as I can tell).

[03:17:14.0000] <jgraham>
s/we/he/

[03:17:35.0000] <zcorpan>
i guess i should work on that

[03:20:06.0000] <Ms2ger>
Yes! Then you can become a chair too!

[03:45:28.0000] <hsivonen>
TabAtkins: looks like your ISSUE-134 CP expired

[03:45:43.0000] <hsivonen>
this one http://lists.w3.org/Archives/Public/public-html/2011Jul/0235.html

[03:45:54.0000] <hsivonen>
per March 28 deadline

[03:48:00.0000] <annevk>
so IE PUA extensions to big5 are 0x81 / 0xA0 and 0xC6 / 0xC8

[03:49:50.0000] <hsivonen>
there's no agenda for the HTML WG f2f meeting, right?

[03:53:30.0000] <annevk>
haven't seen anything, but haven't paid to close attention either

[03:53:42.0000] <annevk>
s/to//

[03:55:46.0000] <zcorpan>
leif's CP says to allow nesting interactive content, but doesn't really explain why

[03:56:06.0000] <hsivonen>
annevk: ok. well, I think I won't be traveling to the meeting

[03:57:53.0000] <jgraham>
Was any justification given for the meeting for either HTML or WebApps?

[03:57:58.0000] <zcorpan>
"authors can just fill it with content without having to re-author the page first (that is: they don't need to make changes to the parent element in order to add the most optimal fallback content)." - not if you want e.g. a <form> in the fallback

[03:58:16.0000] <jgraham>
It kind of felt like "well everyone lives in the bay area anyway so we may as well get together"

[03:58:29.0000] <annevk>
so the incompatible overlap seems to be in 0xA3

[03:58:35.0000] <jgraham>
Even though that isn't true for the person organising it…

[03:59:02.0000] <annevk>
in big5 those are code points outside the PUA (at least in IE) and in hk they map to something else

[03:59:10.0000] <hsivonen>
jgraham: yeah, it felt like that

[03:59:56.0000] <annevk>
I was thinking of going

[04:00:07.0000] <annevk>
but if nobody is going to show up, hmm

[04:00:17.0000] <annevk>
I'm bad with jetlag these days

[04:00:39.0000] <hsivonen>
annevk: sounds bad considering that it seems that jetlag travel is your job

[04:02:59.0000] <jgraham>
hsivonen: One assumes that there will be some people that live within walking (en-us: driving) distance that will make it

[04:03:29.0000] <jgraham>
s/hsivonen/annevk/

[04:05:10.0000] <jgraham>
Not sure it is worth flying half way around the world just to see those people though

[04:05:11.0000] <annevk>
yeah, and I think I "have to" show up for WebApps

[04:05:32.0000] <jgraham>
Oh, really?

[04:05:59.0000] <annevk>
sort of told Art I would; he didn't think it would be useful without editors

[04:06:28.0000] <jgraham>
I see

[04:06:30.0000] <annevk>
on the upside it's over a month and I've no travel planned this one

[04:06:38.0000] <annevk>
I think that might be a first

[04:11:14.0000] <hsivonen>
you could have opted to show up at TPAC later this year and make jetlag Someone Else's Problem

[04:11:49.0000] <hsivonen>
or do what Hixie does: not showing up at meeting even if it's said that meeting without editors aren't useful

[04:12:10.0000] <annevk>
chrome and chrome-hk differ for 85-A0, A3, C6-C8 (with some compatible code points in between)

[04:12:23.0000] <hsivonen>
or was it axiomatic that there has to be a meeting?

[04:13:50.0000] <annevk>
not sure really; I kind of like visiting CA though and seeing everyone again

[04:24:22.0000] <annevk>
passion -> progress -> process -> !passion -> !progress

[04:27:42.0000] <zcorpan>
while (passion) make(progress);

[04:28:11.0000] <Ms2ger>
elihw; make(process);

[04:29:18.0000] <annevk>
what's elihw?

[04:30:49.0000] <MikeSmith>
hsivonen: WebApps WG is also meeting. People seemed to have found the f2f time useful at TPAC for discussing Web Components, among other things

[04:33:08.0000] <Ms2ger>
You mean XBL2 :)

[04:46:35.0000] <karlcow>
passion is a bad start… in a latin way

[04:59:10.0000] <MikeSmith>
anybody know if the minutes from today's IETF meetings are online yet?

[05:05:15.0000] <MikeSmith>
finds http://tools.ietf.org/wg/httpbis/minutes

[05:06:05.0000] <Ms2ger>
"mark observed that the problem of on-the-wire bits being turned into uris is now a problem for someone else"

[05:06:19.0000] <Ms2ger>
"larry masinter challenges the assertion that iri are working on this"

[05:06:22.0000] <Ms2ger>
Go Larry!

[05:07:00.0000] <MikeSmith>
:)

[05:07:02.0000] <MikeSmith>
http://tools.ietf.org/wg/hybi/minutes

[05:07:05.0000] <zcorpan>
annevk: maybe build a list of URLs looking for the relevant byte sequences for pages that have a big5 label, and check them manually

[05:07:10.0000] <MikeSmith>
"Action Item: Chairs to coordinate with W3C WebApps WG on API impact of MUX"

[05:07:40.0000] <Ms2ger>
Nooooooooooo

[05:09:22.0000] <hsivonen>
what's MUX?

[05:09:28.0000] <annevk>
zcorpan: if we can assume they're all authored for a single UA that might work...

[05:09:37.0000] <MikeSmith>
multiplexing?

[05:09:40.0000] <karlcow>
sounds an electronic music soundtrack

[05:09:48.0000] <karlcow>
sounds like*

[05:09:55.0000] <hsivonen>
MikeSmith: did hybi add multiplexing to Web Sockets?

[05:10:16.0000] <karlcow>
https://en.wikipedia.org/wiki/Multiplexer

[05:10:29.0000] <annevk>
hsivonen: not yet, I think, but I'm not following hybi

[05:10:35.0000] <karlcow>
http://www.w3.org/Protocols/MUX/

[05:10:50.0000] <hsivonen>
don't they respect the layered architecture where the nature of the IP layer takes care of multiplexing? :-)

[05:11:01.0000] <Ms2ger>
Zing.

[05:11:09.0000] <karlcow>
ahah ♥ http://www.w3.org/Protocols/MUX/WD-mux-980708.html

[05:11:17.0000] <hsivonen>
karlcow: thanks

[05:11:18.0000] <karlcow>
SMUX Protocol Specification

[05:11:18.0000] <karlcow>
W3C Working Draft 08-July-1998

[05:11:37.0000] <annevk>
we should have a bot that flags users when they start talking about layered architectures

[05:11:46.0000] <MikeSmith>
/me finds http://tools.ietf.org/html/draft-tamplin-hybi-google-mux-03

[05:11:48.0000] <MikeSmith>
expired though

[05:12:44.0000] <MikeSmith>
hmm yeah

[05:12:45.0000] <MikeSmith>
http://tools.ietf.org/wg/hybi/agenda?item=agenda-83-hybi.html

[05:12:46.0000] <Ms2ger>
MikeSmith, clearly the W3C document isn't expired, so it must be more authoritative

[05:13:01.0000] <MikeSmith>
za-zing

[05:13:09.0000] <karlcow>
but but but I love Millefeuilles http://farm3.staticflickr.com/2454/3883365345_ea76895ae0_m.jpg

[05:13:25.0000] <annevk>
zcorpan: who handles our tools for that internally?

[05:13:39.0000] <MikeSmith>
http://tools.ietf.org/agenda/83/slides/slides-83-hybi-0.pdf

[05:13:53.0000] <annevk>
found the interface...

[05:14:10.0000] <Ms2ger>
annevk, ... you've got internal tools for tracking academics?

[05:16:23.0000] <hsivonen>
huh? Is PDF legal at the IETF now? I insist on ASCII .txt slides!

[05:16:31.0000] <MikeSmith>
:)

[05:16:58.0000] <MikeSmith>
http://tools.ietf.org/html/draft-montenegro-httpbis-speed-mobility-01 references the websockets multiplexing I.D.

[05:16:59.0000] <annevk>
when Mike asked about minutes I tried looking something up and found that HTML + style sheets would be converted to plain text, but HTML without style sheets was fine

[05:17:13.0000] <annevk>
clearly the idea that style sheets are optional is not a concept they grasp

[05:17:31.0000] <annevk>
I think that was here: http://www.ietf.org/wg/meeting-materials.html

[05:17:48.0000] <annevk>
Philip`: do you still have your largish dataset?

[05:18:26.0000] <MikeSmith>
wtf

[05:18:30.0000] <jgraham>
annevk: I might worry that these datasets will be quite western-biased

[05:18:35.0000] <MikeSmith>
"Minutes may be submitted in plain text (Unix/Mac/Dos), in simple HTML with NO style sheets, PDF, and PPT. Minutes submitted with style sheets WILL BE converted to plain text. Therefore, if you are concerned about preserving the formatting of your minutes, then please submit them in simple HTML."

[05:18:41.0000] <annevk>
MikeSmith: yeah

[05:18:42.0000] <hsivonen>
what bundled app can I use on Windows 7 to test if the virtual machine deals with microphones reasonably?

[05:18:48.0000] <zcorpan>
annevk: why would you need to assume that?

[05:18:50.0000] <annevk>
MikeSmith: they're hiliarious

[05:19:02.0000] <zcorpan>
annevk: what tools?

[05:19:14.0000] <hsivonen>
hmm. maybe I should just install Skype in the VM and see if I can make a test call

[05:19:23.0000] <jgraham>
MikeSmith: That's … well it's funny for one thing. But how wrongheaded do you have to be to accept PPT but not HTML + CSS?

[05:19:49.0000] <annevk>
zcorpan: guess we can have people that read those variants of Chinese have a look

[05:20:06.0000] <MikeSmith>
I think these are the guidelines from bizarro superman planet

[05:20:11.0000] <hsivonen>
MikeSmith: CSS not ok but PPT ok. That's sad.

[05:20:50.0000] <Ms2ger>
IETF. That's sad.

[05:21:16.0000] <MikeSmith>
Bizzarro Superman say PPT GOOD but HTML BAD for minute of Internet standard meeting

[05:21:21.0000] <annevk>
zcorpan: was thinking of MAMA

[05:21:40.0000] <zcorpan>
annevk: ah. i think mama isn't really maintained anymore. :(

[05:21:48.0000] <Ms2ger>
twss

[05:23:07.0000] <annevk>
jgraham: the bias matters less as we'll only look at the big5 subset

[05:23:35.0000] <MikeSmith>
anyway, Yebisu time

[05:24:10.0000] <karlcow>
echo "IETF" | sed -e 's/IE/W/'

[05:24:36.0000] <jgraham>
annevk: Sure, you might just find that there isn't all that much data

[05:25:29.0000] <karlcow>
annevk: each time I asked about MAMA, dad told us, she was in limbo.

[05:30:02.0000] <Philip`>
annevk: Not in a conveniently accessible form (it's in some backup archive on some disk or other)

[05:30:24.0000] <Ms2ger>
Philip`, how about canvas tests?

[05:32:41.0000] <annevk>
Philip`: how big is the dataset?

[05:34:05.0000] <Ms2ger>
Sorry annevk, I'm afraid I scared him off

[05:34:21.0000] <Philip`>
annevk: It's http://webcrawl.s3.amazonaws.com/web200904.gz so only 2.6GB

[05:35:01.0000] <Philip`>
(though I didn't use that file directly, I parsed the HTTP headers and split it in multiple files for easier processing)

[05:35:21.0000] <zcorpan>
annevk: grep -aPibo "(content(-type\s*:|=\s*[\"']?)\s*text/html\s*;|<meta\s)\s*charset\s*=\s*[\"']?(big5|cn-big5|csbig5|x-x-big5|big5-hkscs)" web200904

[05:35:23.0000] <jgraham>
annevk: I thought zcorpan had been using the dotbot data

[05:35:29.0000] <jgraham>
Oh dammit

[05:35:56.0000] <Ms2ger>
Are you parsing HTML with regices, sir?

[05:36:16.0000] <jgraham>
Ms2ger: In other news, yay!

[05:36:18.0000] <zcorpan>
http://dotnetdotcom.org/

[05:36:30.0000] <annevk>
zcorpan: hmm, why don't you give me the results? :)

[05:36:46.0000] <zcorpan>
Ms2ger: yeah, i also do paris hilton (but don't tell my wife)

[05:36:54.0000] <Ms2ger>
jgraham, mm?

[05:37:20.0000] <zcorpan>
annevk: it gives byte offsets so you need to download the data to interpret the result anyway :-P

[05:37:48.0000] <jgraham>
Ms2ger: You Resolved:FIXED the import testharness.js bug

[05:37:54.0000] <Ms2ger>
Ah, yes

[05:37:57.0000] <zcorpan>
maybe i should do like Philip` and split the data into multiple files

[05:38:22.0000] <Ms2ger>
Now we will run 15 getElementsByClassName tests we didn't before!

[05:38:54.0000] <Philip`>
(I did the splitting mainly so I could easily run multiple threads that each pick a big chunk of pages and process them all)

[05:39:12.0000] <jgraham>
Ms2ger: Baby steps :)

[05:39:21.0000] <Ms2ger>
Indeed

[05:39:55.0000] <annevk>
zcorpan: so then write some other scripts that uses those offsets to read into the data and analyze for bytes?

[05:39:56.0000] <annevk>
hmm

[05:40:21.0000] <Ms2ger>
Now, if only Aryeh's tests didn't take so long that debug builds seem unable to handle them...

[05:40:23.0000] <zcorpan>
dunno, maybe the grep is the wrong starting point

[05:40:24.0000] <annevk>
sounds like pain and also like it will take a long time

[05:41:07.0000] <annevk>
my laptop is already slow with 1MB of JSON :)

[05:41:25.0000] <Philip`>
grep seems like a bad idea when you're trying to process whole pages, not just individual lines, and when you want to understand HTTP headers properly instead of getting confused by pages that happen to quote HTTP headers in their body text

[05:42:45.0000] <MikeSmith>
perl -pi -e and undef $/

[05:43:14.0000] <MikeSmith>
though that still doesn't hep you for docs that quite HTTP headers in their body

[05:44:01.0000] <MikeSmith>
or i-less even

[05:44:02.0000] <Philip`>
You mean read the entire ~14GB uncompressed input file into a string in RAM?

[05:44:07.0000] <MikeSmith>
if you only grepping

[05:44:15.0000] <MikeSmith>
yeah

[05:44:32.0000] <Philip`>
Even I wouldn't use Perl for that

[05:44:33.0000] <MikeSmith>
cause that's what real men do

[05:44:45.0000] <annevk>
haha, need some more RAM first

[05:45:31.0000] <MikeSmith>
when I need more RAM I just beat somebody and takes theirs

[05:46:59.0000] <MikeSmith>
btw, I added lightning bolts to http://platform.html5.org/

[05:48:13.0000] <zcorpan>
/me runs grep -aEizHZ "(content(-type[[:space:]]*:|=[[:space:]]*["']?)[[:space:]]*text/html[[:space:]]*;|<metas)[[:space:]]*charset[[:space:]]*=[[:space:]]*["']?(big5|cn-big5|csbig5|x-x-big5|big5-hkscs)" web200904 > big5.txt

[05:48:41.0000] <zcorpan>
it forgets about the URLs, but maybe that's ok

[05:49:20.0000] <annevk>
I guess we can first see if there's any data at all

[05:49:43.0000] <zcorpan>
that uses big5 encoding declaration?

[05:49:55.0000] <zcorpan>
seems to be plenty

[05:51:02.0000] <MikeSmith>
https://twitter.com/#!/mikebelshe/status/185650746623135745

[05:53:26.0000] <annevk>
is that concept "None of us is as dumb as all of us." explained somewhere?

[05:53:37.0000] <annevk>
apart from the motivational poster

[05:53:50.0000] <hsivonen>
I see Hixie made the blockquote in http://hsivonen.iki.fi/producing-xml/ non-conforming :-(

[05:54:09.0000] <MikeSmith>
annevk: it started from that motivational poster I think

[05:54:48.0000] <Ms2ger>
A long time ago, no?

[05:55:47.0000] <MikeSmith>
annevk: though it reminds me of "We have met the enemy and he is us."

[05:55:53.0000] <MikeSmith>
http://en.wikipedia.org/wiki/Pogo_(comic_strip)#.22We_have_met_the_enemy_and_he_is_us..22

[06:00:01.0000] <karlcow>
the French quote is the dumb thing is "L'intelligence de la foule" ~ aka Intelligence of the crowd… meant to qualify things like Heysel Stadium disaster

[06:13:52.0000] <zcorpan>
annevk: http://simon.html5.org/dump/big5.txt (29MB) - each response body is prefixed by "web200904\0"

[06:14:33.0000] <annevk>
hsivonen: there's already https://developer.mozilla.org/en/Document_Object_Model_(DOM)/window.navigator.language

[06:14:55.0000] <annevk>
zcorpan: sweet, so that's a subset basically?

[06:15:07.0000] <zcorpan>
annevk: yep

[06:15:24.0000] <annevk>
very interesting

[06:15:35.0000] <zcorpan>
shouldn't take too long to run a python script over it on a laptop

[06:16:23.0000] <annevk>
I'm going to buy some lunch first I think, but that should indeed be fine

[06:16:40.0000] <annevk>
thanks

[06:16:44.0000] <zcorpan>
np

[06:18:32.0000] <zcorpan>
it may contain false positives, like pages that have two declarations or just has content-type... as text in the page, but i guess that's pretty rare

[06:24:12.0000] <MikeSmith>
/me wonders if jzaefferer is around

[06:30:17.0000] <zcorpan>
annevk: hmm, it seems i may have got the regexp wrong. it doesn't seem to include content-type: matches

[06:30:24.0000] <zcorpan>
annevk: only content="..." matches

[06:34:26.0000] <zcorpan>
the problematic part seems to be the colon

[06:35:17.0000] <SHAGGSTaRR>
colons are always fulla shit zcorpan

[06:56:35.0000] <annevk>
zcorpan: guess I'll try to make something that works with this first

[06:59:14.0000] <zcorpan>
/me now runs grep -aEizHZ "(Content-Type[[:space:]]*:[[:space:]]*text/html[[:space:]]*;[[:space:]]*charset[[:space:]]*=[[:space:]]*["']?|[[:space:]]content[[:space:]]*=[[:space:]]*["']?[[:space:]]*text/html[[:space:]]*;[[:space:]]*charset[[:space:]]*=[[:space:]]*["']?|<meta[[:space:]]+charset[[:space:]]*=[[:space:]]*["']?)(big5|cn-big5|csbig5|x-x-big5|big5-hkscs)" web200904 > big5.txt

[07:07:53.0000] <jzaefferer>
hey MikeSmith, I'm here

[07:13:30.0000] <annevk>
so far I find trouble

[07:14:46.0000] <[tm]>
 jzaefferer: away from my PC now but just wanted to day i will have something fire you this weekend or Monday

[07:15:18.0000] <[tm]>
something for you

[07:15:18.0000] <Ms2ger>
You will have something fire him? Tough man

[07:15:26.0000] <[tm]>
Heh

[07:16:09.0000] <[tm]>
you prefer to script this on node i guess?

[07:16:43.0000] <annevk>
what's the problem with

[07:16:45.0000] <annevk>
i = 0

[07:16:45.0000] <annevk>
prev_byte = None

[07:16:45.0000] <annevk>
for b in bytes_read:

[07:16:45.0000] <annevk>
    if prev_byte != None:

[07:16:45.0000] <annevk>
        if ord(prev_byte) > 0xA0:

[07:16:45.0000] <annevk>
            i+=1

[07:16:46.0000] <annevk>
        #if ord(prev_byte) ==0xA3 and ord(b) > 0x3F and ord(b) < 0xFF:

[07:16:46.0000] <annevk>
        #    i+=1

[07:16:47.0000] <annevk>
        prev_byte = None

[07:16:47.0000] <annevk>
        continue

[07:16:48.0000] <annevk>
    if b < 0x80:

[07:16:48.0000] <annevk>
        continue

[07:16:49.0000] <annevk>
    prev_byte = b

[07:17:03.0000] <annevk>
apart from that > 0xA0 gives less results than < 0xA1!!!!

[07:17:11.0000] <scott_gonzalez>
[tm]: Yeah, our build script is written in node.

[07:17:37.0000] <[tm]>
ok

[07:22:29.0000] <hsivonen>
annevk: right. I'm skeptical about the usefulness of exposing a language list in a new API

[07:22:45.0000] <[tm]>
so what we need to do us use whatever nodes http client is to send th contents of each file as part of a post request to port 8888

[07:23:32.0000] <[tm]>
loop through arts from the command line

[07:24:02.0000] <[tm]>
and do an async read

[07:24:09.0000] <[tm]>
since it's node

[07:25:10.0000] <[tm]>
anyway i can write it but i guess you guys could too

[07:25:15.0000] <[tm]>
better than me

[07:26:47.0000] <[tm]>
so maybe i will just get the jars together and give you the details about how to start up the service and what exactly to send in the post

[07:27:49.0000] <hsivonen>
I wonder why Opera Mini on tablets doesn't say "Tablet" in the UA string like Opera Mobile on tablets

[07:28:13.0000] <annevk>
missed an ord()

[07:28:34.0000] <annevk>
still there's a lot of code points apparently that are not interoperable at all

[07:33:03.0000] <hsivonen>
hmm. Hixie's response to the responsive images threads wasn't particularly apt

[07:33:35.0000] <jgraham>
He wasn't responsive enough?

[07:33:52.0000] <hsivonen>
Hixie: you really don't see a use case for adapting what number of pixels you send depending on the recipient?

[07:34:27.0000] <hsivonen>
Hixie: sending the "same" photo sampled differently

[07:34:59.0000] <hsivonen>
Hixie: e.g. Flickr varies the bitmaps for the "same" photo it sends depending on context

[07:35:22.0000] <hsivonen>
Hixie: but they have to do imperatively instead of having a declarative way of doing it

[07:35:28.0000] <hsivonen>
(in their slideshows, for example)

[07:36:00.0000] <karlcow>
[10:28]  <hsivonen> I wonder why Opera Mini on tablets doesn't say "Tablet" in the UA string like Opera Mobile on tablets

[07:36:07.0000] <karlcow>
I wonder if it's a bug or not.

[07:36:16.0000] <karlcow>
It's always a lot of discussions

[07:37:21.0000] <zcorpan>
annevk: ok i've uploaded a new big5. although it looks like it's the same size, so either it was right the first time around, or it's still wrong, or it's now right but it didn't make any difference...

[07:37:40.0000] <zcorpan>
gotta go

[07:37:46.0000] <hsivonen>
oh well. there's the poll: https://www.w3.org/2002/09/wbs/40318/issue-158-objection-poll/

[07:37:57.0000] <hsivonen>
from September 2002

[07:39:15.0000] <matjas>
fun fact: IE < 8 doesn’t recognize `\:` as a CSS escape sequence for `:`, so you have to use `\3a ` instead.

[07:40:47.0000] <karlcow>
hsivonen: why do you think it's from September 2002

[07:41:02.0000] <hsivonen>
karlcow: is your IRC client in Quebec?

[07:41:11.0000] <annevk>
thanks simon

[07:41:13.0000] <hsivonen>
karlcow: /2002/09/

[07:41:21.0000] <jgraham>
karlcow: Because normal people (and Google) don't assume that URIs are opaque

[07:41:23.0000] <karlcow>
why do you think this is a date

[07:41:32.0000] <annevk>
i somehow thought extracting useful data was going to be easier, but it's still quite a lot of data

[07:41:34.0000] <hsivonen>
karlcow: it looks like one

[07:41:41.0000] <karlcow>
hsivonen: not to me ;)

[07:41:50.0000] <jgraham>
karlcow: Are you disputing that it is, in fact, a date?

[07:41:56.0000] <hsivonen>
karlcow: you've been on the W3C staff

[07:42:21.0000] <jgraham>
(just not a date that corresponds to anything relevant)

[07:42:28.0000] <annevk>
most of the W3C staff realizes that it's silly though

[07:42:33.0000] <annevk>
that's why we have /html/ now

[07:42:35.0000] <annevk>
and /ns/

[07:42:44.0000] <karlcow>
jgraham: yes ☺

[07:43:10.0000] <annevk>
claiming URLs are opague when they are in front of people all the time seems extremely counter productive

[07:43:40.0000] <karlcow>
annevk: tell that to mobile users, twitter and other shorteners

[07:43:48.0000] <annevk>
especially as they are, unlike say barcodes, very readable and to some extent memorable

[07:43:49.0000] <hsivonen>
people who believe URLs are opaque should use IP addresses instead of hostnames in their URLs

[07:44:26.0000] <hsivonen>
IP address, a slash and an UUID

[07:44:38.0000] <annevk>
karlcow: they didn't exist when this argument was made up

[07:44:53.0000] <karlcow>
and? :D

[07:44:53.0000] <annevk>
karlcow: and twitter uses it because <a ping> got canned

[07:45:20.0000] <annevk>
that some URLs are less readable than others, does not make them opague

[07:45:37.0000] <hsivonen>
annevk: good point. let's blame URL shorteners on people who objected to <a ping>

[07:45:57.0000] <karlcow>
huh? ☺ I don't understand the drift here

[07:47:25.0000] <karlcow>
domain names are definitely not opaque for most people so far, except when using QR code. (another layer), but the path is completely lost for most of the people I know who are not in the computing industry.

[07:47:32.0000] <karlcow>
Geek Magnifying glass.

[07:48:04.0000] <hsivonen>
karlcow: http://picturesofpeoplescanningqrcodes.tumblr.com/

[07:48:06.0000] <karlcow>
what I see is a lot of people using search engines with keywords for finding stuff they already know

[07:49:02.0000] <jgraham>
Sure, I do that. I also expect that if I find http://some.blog.com/2011/11/21/some_entry.html it was published in November 2011

[07:49:04.0000] <karlcow>
hsivonen: yes QR codes have a very very very limited area of real usage. ☺ the marketing saga here is insane.

[07:49:22.0000] <karlcow>
jgraham: disqualified. Geek! ;)

[07:49:38.0000] <annevk>
per this dataset the C6-C8 range does not matter much

[07:49:52.0000] <jgraham>
karlcow: Possibly, but you don't actually have any evidence

[07:50:02.0000] <annevk>
there is one instance of such a lead byte and it's inside a comment

[07:50:04.0000] <jgraham>
For your assertions

[07:50:10.0000] <karlcow>
jgraham: this goes both ways

[07:50:30.0000] <jgraham>
Sure.

[07:51:08.0000] <annevk>
advertising frequently uses the path

[07:51:23.0000] <annevk>
example.com/boldnewplan

[07:51:37.0000] <hsivonen>
facebook.com/aolkeyword

[07:57:55.0000] <annevk>
Content-Language: big5

[07:58:00.0000] <annevk>
this data contains fun stuff

[08:00:52.0000] <annevk>
also apparently 74944 bytes following a lead byte that are less than 0x40 (and thereby invalid)

[08:03:15.0000] <annevk>
although that's on 1761026 lead bytes

[08:09:35.0000] <michel_v>
what karlcow meant about dates in URLs is that the 2002/09 may only be the date that the resource was created on the server

[08:09:58.0000] <michel_v>
it might have changed a lot since then, with updated data. but its URL didn't because it's cool like that

[08:12:03.0000] <annevk>
https://www.w3.org/2012/03/12-ab-minutes (W3C Member-only)

[08:13:11.0000] <jgraham>
Why would anyone put a date in a URL for a resource that will change? (In this case the "resource" from 2002 is presumably the wbs system itself, not any of the surveys. Which is kind of like putting the date that Wordpress was first deployed in the url of all wordpress blogs)

[08:14:43.0000] <scott_gonzalez>
[tm]: Sorry, wasn't looking at this channel. Yeah, if you can just send us the details about how to start the service and make the request, we can write the node code.

[08:14:49.0000] <michel_v>
because it's a naming convention that just happens to be different from the mainstream conventions

[08:15:04.0000] <Philip`>
jgraham: Some people are terrible at coming up with names, and would rather only have to compete with other people's names from the same month rather than trying to be unique across all of W3C history

[08:15:24.0000] <hsivonen>
annevk: ooh. a date in a W3C URL!

[08:15:32.0000] <karlcow>
example.org/637GFDRkdsat5-suyig.html

[08:15:35.0000] <michel_v>
jgraham: (besides, on blogs the resource behind a "dated" URL does change over time while the date does not. that's comments)

[08:16:05.0000] <annevk>
hsivonen: don't tell karlcow

[08:16:27.0000] <Philip`>
(The technology society's fixation on TLAs doesn't help with the name collision problem)

[08:16:29.0000] <michel_v>
(or other ways to influence the resource that are not the author's actions)

[08:16:55.0000] <jgraham>
michel_v: I'm not sure how that is relevant. The date the article was first published is useful irrespective of later comments.

[08:17:04.0000] <karlcow>
"Ceci n'est pas une date." — Magritte

[08:17:19.0000] <jgraham>
The date that the underlying software was first deployed, not so much

[08:17:56.0000] <jgraham>
karlcow: Somewhat lacks to double-entendre that I am told is implied in the original

[08:18:05.0000] <jgraham>
s/to/the/

[08:19:47.0000] <karlcow>
I will use another forbidden word here ;) the calendar is a nice way to make layers of unique identifier because of the arrow of time.

[08:19:59.0000] <karlcow>
identifiers

[08:26:36.0000] <annevk>
hmm

[08:26:54.0000] <annevk>
no lead bytes in the 0xFx range

[08:27:02.0000] <annevk>
that is somewhat surprising

[08:27:50.0000] <hsivonen>
annevk: have you tested Python and Java big5 decoding?

[08:28:30.0000] <annevk>
hsivonen: nah, just browsers

[08:29:16.0000] <annevk>
not sure what we'd gain from those libraries, presumably they're even less compatible with what's out there

[08:38:10.0000] <annevk>
so in this dataset, there's 602746 lead bytes less than 0xA1 (undefined territory for big5) and 20825 0xA3 lead bytes followed by reserved territory

[08:38:28.0000] <annevk>
there's also 74374 invalid trail bytes

[08:39:14.0000] <annevk>
and a total of 1113300 lead bytes over 0xA1 (you'll have to subtract the 0xA3 bytes from that)

[08:40:03.0000] <annevk>
anyone ideas on how to analyze this?

[08:54:02.0000] <annevk>
I guess I could make character buckets

[08:54:30.0000] <annevk>
but actually, you probably need sequences to make sense of the Chinese

[08:54:47.0000] <annevk>
foolip: you around?

[09:05:02.0000] <sedovsek>
Hey! Any ideas on how to find webpages that are using multiple column layout? Either column-count: <integer> or column-width: <size>;

[09:05:04.0000] <sedovsek>
Manythanks!

[09:05:24.0000] <annevk>
there's one item here that has iso-8859-1 in HTTP and then in the HTML it has

[09:05:25.0000] <annevk>
<meta http-equiv="content-type" content="text/html; charset=euc-kr"/>

[09:05:25.0000] <annevk>
<meta http-equiv="content-type" content="text/html; charset=EUC-JP"/>

[09:05:25.0000] <annevk>
<meta http-equiv="content-type" content="text/html; charset=big5-hkscs"/>

[09:05:37.0000] <annevk>
all three

[09:05:46.0000] <sedovsek>
Sorry, didn't know I was bursting into the conversation.

[09:05:47.0000] <annevk>
HTML paradise

[09:05:58.0000] <annevk>
sedovsek: it's more of a monologue, no worries

[09:06:04.0000] <sedovsek>
Oh. :)

[09:11:23.0000] <annevk>
sedovsek: dataset we're using is from 2009; not sure if there's anything more recent

[09:11:49.0000] <annevk>
sedovsek: oh, and I think URLs are stripped

[09:12:42.0000] <annevk>
heh, the above was the only big5-hkscs declaration

[09:12:53.0000] <annevk>
so big5-hkscs is just not present

[09:13:24.0000] <sedovsek>
香港增補字符集 :P

[09:15:07.0000] <sedovsek>
I did some presentation about multiple columns, regions, exclusions & stuff like that ... and would like to show some real examples of, at least multi columns.

[09:15:07.0000] <sedovsek>
But found only 6 so far.

[09:15:08.0000] <sedovsek>
Which is quite sad because it degrades nicely.

[09:15:41.0000] <annevk>
hmm, only site I knew that was using it appears no longer to use it ( http://robert.ocallahan.org/ )

[09:16:06.0000] <smaug____>
MikeSmith's spec list uses it

[09:16:30.0000] <annevk>
ah yeah, sedovsek http://platform.html5.org/

[09:16:40.0000] <sedovsek>
Many thanks!

[09:17:59.0000] <sedovsek>
http://veerle.duoh.com/about - bio section here as well.

[09:18:03.0000] <sedovsek>
And wikipedia for references.

[09:29:24.0000] <karlcow>
http://my.opera.com/hallvors/blog/2012/03/29/slashdot-runs-out-of-slashes

[09:32:32.0000] <sedovsek>
Not sure if this is the right channel to ask this question, but ...

[09:32:41.0000] <sedovsek>
how come column-span has values either none or auto.

[09:33:00.0000] <sedovsek>
I would expect it could be a number as well?

[09:33:20.0000] <sedovsek>
For instance ... I want this h1/h2 element to span only across two columns.

[09:33:32.0000] <sedovsek>
(in case of 3 or more column layout)

[09:40:28.0000] <annevk>
too complex for the first version or something like that

[09:40:51.0000] <TabAtkins>
Yeah, values other than "1" and "all" were allowed at first, but it complicates layout something fierce.

[09:41:02.0000] <TabAtkins>
(Fucking floats.)

[09:41:07.0000] <sedovsek>
It crossed my mind, yea.

[09:41:40.0000] <sedovsek>
Especially with fluid column widths, flexible column counts, etc.

[09:42:32.0000] <TabAtkins>
And things where the spanner appears halfway in the multicol element, rather than at the beginning.

[09:42:56.0000] <TabAtkins>
With the current one, if a spanner appears you can just chop the multicol element into two multicol segments with the spanner between them, much simpler.

[09:44:06.0000] <sedovsek>
True, but that might require additional markup?

[09:44:39.0000] <sedovsek>
But it's also a fallback solution (for browsers that does not support column-span).

[09:44:57.0000] <TabAtkins>
No, I mean that the *layout engine in the browser* can do that.

[09:45:27.0000] <TabAtkins>
It's relatively simple to do that, from a layout perspective, than to deal with an element intruding across some of the columns.

[09:45:42.0000] <sedovsek>
Oh.

[09:47:54.0000] <sedovsek>
Another question if may I ...

[09:48:03.0000] <sedovsek>
just wrote docs for column span yesterday

[09:48:03.0000] <sedovsek>
https://developer.mozilla.org/en/CSS/column-span

[09:48:17.0000] <sedovsek>
Wasn't sure about column-span support in different browser.

[09:48:39.0000] <sedovsek>
Opera supports it from 11.1+?

[09:48:55.0000] <TabAtkins>
No clue about support. I know Opera probably supported it first, given that it's Hakon's spec.

[09:49:35.0000] <sedovsek>
Thank you.

[09:50:41.0000] <smaug____>
I thought it was in Gecko first, but could be wrong

[09:50:57.0000] <smaug____>
ah, column-span

[09:51:15.0000] <smaug____>
roc was hacking columns quite a bit at some point

[09:57:21.0000] <annevk>
charset=x-MS950-HKSCS o_O

[09:58:09.0000] <smaug____>
that looks interesting

[09:58:19.0000] <annevk>
ooh, there's a bunch more HKSCS data if you look for BIG5-HKSCS

[09:58:39.0000] <annevk>
my hex editor does case-sensitive searching, which is not that surprising I suppose

[09:58:52.0000] <annevk>
maybe it's more surprising that people use uppercase for these things

[09:59:27.0000] <annevk>
oh, Big5-HKSCS and MS950 also exist

[09:59:38.0000] <annevk>
charset=null :)

[10:01:48.0000] <annevk>
the ms950 is a Java invention apparently that somehow leaked

[10:20:44.0000] <dglazkov>
good morning, Whatwg!

[10:22:04.0000] <smaug____>
um, yeah, this is the way to write specs. let's not define what the API do but  "Alternatively, you could say that the current webkit implementation is the reference."  :/

[10:22:34.0000] <smaug____>
Web Audio is so under-specified

[10:25:08.0000] <annevk>
big5 is too

[10:25:38.0000] <TabAtkins>
smaug____: Argh, that's quite bad.

[10:26:48.0000] <smaug____>
TabAtkins: the spec defines all sorts of audionodes which modify the data somehow, but it is not defined how

[10:26:56.0000] <smaug____>
how can anyone write tests for that

[10:27:09.0000] <smaug____>
how can any web dev rely on the API

[10:27:24.0000] <annevk>
so people do actually have stuff like:<!-- meta http-equiv="content-type" content="text/html; charset=big5" -->

[10:27:46.0000] <jgraham>
smaug____: That's not a literal quote is it?!

[10:28:05.0000] <smaug____>
jgraham: the part inside "" is

[10:28:51.0000] <annevk>
heh, and in this entire dataset charset is never followed by a space

[10:28:59.0000] <annevk>
maybe that's a bug in the regexp

[10:29:23.0000] <annevk>
smaug____: euh wut, pointer?

[10:29:30.0000] <annevk>
sounds like vp8

[10:30:53.0000] <smaug____>
annevk: it is here http://lists.w3.org/Archives/Public/public-audio/2012JanMar/0543.html

[10:31:07.0000] <smaug____>
I know Raymond had other suggestions too

[10:31:57.0000] <smaug____>
but is felt very strange that one can even write such idea that let's use some implementation as reference and not really specify stuff

[10:32:02.0000] <jgraham>
Oh, it's not a quote from the spec. Well that's a little better

[10:32:32.0000] <smaug____>
jgraham: oh, that would be strange language in a spec

[10:33:03.0000] <smaug____>
is anyone from Opera in the Audio WG?

[10:33:09.0000] <jgraham>
Well the spec does mention webkit

[10:33:28.0000] <jgraham>
I... don't think so. foolip perhaps?

[10:33:30.0000] <annevk>
don't think we're in the WG, but reverse engineering the market leader is not something we're interested in

[10:33:35.0000] <annevk>
that's why we have standards...

[10:36:58.0000] <annevk>
<cfprocessingdirective pageencoding="Big5-HKSCS"> sweet

[10:38:48.0000] <annevk>
so out of 964, 14 pages declare big5-hkscs

[10:39:16.0000] <annevk>
and one of those does so via ColdFusion :p

[10:43:05.0000] <jgraham>
Oh foolip is in the group

[10:43:36.0000] <jgraham>
But he is stretched pretty thin :(

[11:10:42.0000] <annevk>
does html5lib do character encoding detection correctly?

[11:10:54.0000] <annevk>
hmm, but I can't actually use html5lib

[11:11:07.0000] <annevk>
I need a byte-level tokenizer

[11:11:20.0000] <annevk>
man :(

[11:11:42.0000] <annevk>
I guess it should be easy enough to adapt the html5lib tokenizer to work on bytes

[11:12:00.0000] <annevk>
but it's getting pretty convoluted just to analyze some data

[11:12:22.0000] <Philip`>
Can you just decode as iso-8859-1 chars then tokenise?

[11:13:00.0000] <annevk>
probably

[11:13:44.0000] <annevk>
the other problem is actually analyzing the data

[11:14:59.0000] <annevk>
there's about 630000 code points that will map to PUA in IE but are potentially better decoded as HKSCS

[11:15:42.0000] <annevk>
I guess if foolip is around I can try feeding him the first 100 or so and see whether it makes sense to continue and do something more elaborate

[11:16:36.0000] <annevk>
and I should probably generate the ~1000 files so I can inspect them each individually and make sure they are indeed encoded as big5/big5-hkscs and not utf-8 or some such

[11:35:56.0000] <bga>
is it true that you want to replace http?

[11:37:37.0000] <izhak>
no that's not true

[11:37:47.0000] <TabAtkins>
I want to replace http.

[11:37:49.0000] <annevk>
some people do

[11:37:50.0000] <TabAtkins>
With telepathy.

[11:37:50.0000] <izhak>
whatwg claims nothing about http

[11:37:55.0000] <TabAtkins>
So probably not a practical desire.

[11:38:14.0000] <TabAtkins>
I'm very confused as to where this meme came from, bga.

[11:38:27.0000] <annevk>
prolly the HTTP 2.0 / SPDY stuff

[11:38:31.0000] <bga>
but spdy, webrtc, http://blogs.msdn.com/b/interoperability/archive/2012/03/26/speed-and-mobility-an-approach-for-http-2-0-to-make-mobile-apps-and-the-web-faster.aspx

[11:38:45.0000] <TabAtkins>
spdy has absolutely nothing to do with whatwg.

[11:38:53.0000] <TabAtkins>
webrtc isn't whatwg anymore either.

[12:44:48.0000] <annevk>
no

[12:44:58.0000] <annevk>
we need to define the concept it seems

[12:45:01.0000] <annevk>
oh

[12:53:36.0000] <zewt>
there's no single place in every url-fetching api that's correct for that feature

[12:53:49.0000] <rubys>
Is Hixie around?

[12:54:02.0000] <zewt>
also it's much more than a "nit", heh

[12:58:25.0000] <rubys>
When Hixie gets back, I'd like to talk more about http://krijnhoetmer.nl/irc-logs/whatwg/20120328#l-1010 ; I talked to people I expected to balk at it, and to my surprise, it might be doable.  I just have a few questions, and perhaps we can make it happen as soon as Monday.

[12:59:04.0000] <arun__>
zewt, you're right, it's more than a nit.  Do you think it's worth defining it for Blob URIs in FIle API?  I'm inclined to think so.

[12:59:52.0000] <otherarun>
(note my new nick ^)

[13:00:24.0000] <zewt>
i think the "automatically-released blob urls" feature is worth doing it, yes (though as I mentioned later in the thread, I think the "release at a later point" instead of "on first use" is a better way of doing it)

[13:00:42.0000] <zewt>
(of course, it's not me that has to do the work, so take my "worth it" with whatever weight you like :)

[13:01:58.0000] <otherarun>
I think it's worth defining 'dereferencing.'  That shouldn't be bandied about loosely.

[13:01:58.0000] <zewt>
i'd definitely say that if we can't or won't define it, then the auto-releasing thing needs to be dropped entirely, since it's doomed to not being interoperable

[13:02:27.0000] <otherarun>
zest, I agree.  I just worry that it is a harder problem than it looks like.

[13:02:35.0000] <zewt>
well, it looks like each spec that takes a URL and initiates a fetch will need to invoke "dereference" explicitly somewhere

[13:02:36.0000] <otherarun>
gah, ^ zewt I mean

[13:03:12.0000] <otherarun>
I wonder what's rigorous enough here.

[13:03:15.0000] <zewt>
for example, "let urlRef be the dereferenced value of url", where urlRef is logically either 1: the underlying blob data or 2: the url itself (if it's just a regular URL)

[13:03:23.0000] <zewt>
then, urlRef is what's passed to the fetch algo

[13:03:47.0000] <zewt>
i'm sure there are plenty of hard parts of actually doing that, since so many places fetch

[13:03:51.0000] <otherarun>
Right.  Where here 'fetch' is the dereferencing steps.

[13:04:01.0000] <zewt>
no, "fetch" is the "fetch a resource" algorithm

[13:04:20.0000] <zewt>
http://www.whatwg.org/specs/web-apps/current-work/multipage/fetching-resources.html#fetch

[13:04:41.0000] <zewt>
afk a few

[13:07:02.0000] <jgraham>
Hmm, nobody told rubys that Hixie is away

[13:07:08.0000] <jgraham>
Maybe he will read the logs

[13:07:11.0000] <otherarun>
zewt, I think we can put dereference in terms of fetch.  More thought needed on this.

[13:07:50.0000] <otherarun>
zewt, but the call for doing it more rigorously or bailing is a good one.

[13:11:26.0000] <zewt>
otherarun: this must be done synchronously, before the surrounding JS call returns; fetch is often done asynchronously, or in a queued task

[13:11:45.0000] <otherarun>
hmmm

[13:11:52.0000] <zewt>
seems overly restrictive to try to require every usage of fetch be initiated synchronously

[13:12:12.0000] <zewt>
(we should have this discussion when anne or hixie are around)

[13:13:51.0000] <zewt>
basically, though, "dereference" can basically transform the URL into something that (at the spec level) can be used like the URL as far as fetch is concerned, but actually holds a reference to the underlying blob data

[13:14:12.0000] <zewt>
there could be a better way, of course

[13:15:29.0000] <otherarun>
zewt, that's probably what'll end up being the case.  I'm not sure exactly how much normalization the Blob URI needs to undergo.

[13:15:48.0000] <otherarun>
(note that the entire protocol is defined like GET is)

[13:15:55.0000] <zewt>
what do you mean "normalization" exactly?

[13:16:54.0000] <otherarun>
Oh, I mean what you mean when you say "basically transform the URL into something that (at the spec level) can be used lie the URL as far as fetch is concerned"

[13:17:08.0000] <otherarun>
^ lie = like above

[13:17:31.0000] <zewt>
in JSish pseudocode, it'd be something like var someUrl; urlOrBlob = dereference(urlOrBlob); fetch(urlOrBlob);

[13:17:34.0000] <MikeSmith>
to his surprise, heh

[13:17:49.0000] <otherarun>
MikeSmith, oh hai

[13:18:02.0000] <zewt>
where dereference would be eg. function dereference(url) { if is_a_blob_url(url) return theBlob; else return url; }

[13:18:14.0000] <otherarun>
zewt, aha!

[13:18:20.0000] <zewt>
(except it would dereference to the *underlying* data of the blob, not the actual blob, so it's unaffected by blob.close() and transfers)

[13:18:37.0000] <otherarun>
zewt, what happens on unsuccessful deref?

[13:18:38.0000] <zewt>
(we may also need some clear way of referring to "the underlying data of a blob")

[13:18:54.0000] <zewt>
hmm. leave the URL as-is, so you get an error at fetch time?

[13:19:03.0000] <zewt>
(the same error you get now, whatever that is)

[13:19:05.0000] <otherarun>
Yeah, ok.

[13:19:14.0000] <otherarun>
(Well you get a 500)

[13:19:23.0000] <otherarun>
(cribbing from HTTP parlance)

[13:19:31.0000] <zewt>
(404 seems to make more sense, but it's not terribly important)

[13:19:51.0000] <zewt>
(since it should never really happen in non-buggy code anyway)

[13:20:10.0000] <MikeSmith>
try to constrain discussion to some very narrow outcome and the express "surprise" when someone says "hey let's maybe not constrain the discussion to your artificially constrained outcome"

[13:20:22.0000] <MikeSmith>
surprise, surprise

[13:20:35.0000] <zewt>
what battle are you fighting? heh

[13:21:05.0000] <otherarun>
Some concern existed about information reveal about underlying filesystem, so chose to make invalid retrievals return 500s

[13:21:32.0000] <zewt>
can't imagine how that could happen, but it's not important enough to worry about now

[13:21:49.0000] <otherarun>
+1

[13:22:51.0000] <zewt>
hmm

[13:22:52.0000] <zewt>
well

[13:23:02.0000] <zewt>
if a spec is *already* initiating the fetch synchronously, this is probably unneeded

[13:23:08.0000] <zewt>
i don't know if anyone does that

[13:23:26.0000] <otherarun>
In our case, fetches are synchronous

[13:23:37.0000] <zewt>
anyone = specs

[13:25:02.0000] <zewt>
for example, XHR send() in async mode goes asynchronous before initiating the fetch

[13:26:08.0000] <zewt>
(as opposed to starting a fetch with the fetch synchronous flag unset, so fetch step 4 would do it)

[13:26:56.0000] <otherarun>
I think that's part of the problem with use of terms like 'dereference.'  It traipses over sync/async considerations.

[13:27:09.0000] <zewt>
(actually, it does both, depending on the code path ... don't recall why)

[13:28:46.0000] <otherarun>
/me = afk

[13:38:29.0000] <rubys>
jgraham: do you know when Hixie is expected back?

[13:38:37.0000] <TabAtkins>
saturday or sunday

[13:38:53.0000] <rubys>
ok, will try back then.  Thanks!

[13:51:36.0000] <sedovsek>
Here's the short list of websites that are using multiple column layout:

[13:51:37.0000] <sedovsek>
http://galjot.si/multiple-columns#current_use

[14:00:21.0000] <zewt>
those layouts are usually really terrible ... that one at the top is utterly unreadable

[14:04:46.0000] <sedovsek>
I would like to comment (either agree or disagree) on that, but since i've only found 7 examples ... :)

[14:05:08.0000] <sedovsek>
Can't really tell whether they're terrible or not.

[14:08:22.0000] <ojan>
TabAtkins, Hixie: what's the rationale behind limiting the number of on* event handlers we add? Why not just support on* events for all events?

[14:08:32.0000] <TabAtkins>
I don't know.  I'd like to add them for everything.

[14:08:40.0000] <TabAtkins>
Hixie's the one who wants to limit them.

[14:09:29.0000] <ojan>
The only think I can think of is the fear that we'll conflict with some existing on* attribute that the existing pages use...so then we'd have to name the event something less optimal for back-compat.

[14:09:36.0000] <ojan>
that doesn't seem like a great reason though

[14:10:27.0000] <isherman>
TabAtkins: any news on https://bugs.webkit.org/show_bug.cgi?id=66032 ?

[14:10:53.0000] <TabAtkins>
Not from me. ;_;

[14:11:37.0000] <isherman>
k, I'll try to track down Tantek sometime…

[14:18:54.0000] <Velmont>
Is ;_; crying? Like ^_^ unhappy: ·_· and with tears?

[14:19:00.0000] <TabAtkins>
Yes.

[14:19:05.0000] <Velmont>
Nice.

[14:19:05.0000] <TabAtkins>
;_; and T_T are both crying.

[14:25:20.0000] <Velmont>
sedovsek: Ofc there's much more usage than that. I've used it for several sites a long time. -- Biggest problem ofc is that they continue too long. So will always have to "guarantee" that the text isn't higher than a screenful.

[14:26:01.0000] <sedovsek>
Velmont: nice point regarding text height.

[14:26:29.0000] <isherman>
tantek: I think I'm supposed to ping you about https://bugs.webkit.org/show_bug.cgi?id=66032 — any chance of this getting some attention soon from the CSS working group?  (sorry if that's not quite the right name for the group, I'm not entirely up to speed here)

[14:26:33.0000] <TabAtkins>
Yeah, until multicol has (1) the ability to wrap to a new "row" when your height is constrainted and you've filled up your width, and (2) the ability to *not* columnate when the content is below a certain length, it's not really usable for arbitrary web paes.

[14:26:58.0000] <Velmont>
TabAtkins: Yep. So not for template driven stuff.

[14:27:16.0000] <TabAtkins>
Yeah.

[14:27:31.0000] <TabAtkins>
I use it on an personal web page to flow a whole bunch of recipe names across the page.

[14:27:32.0000] <tantek>
Hi isherman

[14:27:45.0000] <Velmont>
I've recently seen the light though, and will do more custom stuff going forwards. It's so freeing to actually be able to customize more stuff by writing special css and markups for different pages.

[14:27:46.0000] <tantek>
checking your www-style message now

[14:27:50.0000] <TabAtkins>
But it's okay for that to get taller than the page, because they're not meant to be read straight through.

[14:27:55.0000] <isherman>
tantek: thanks :)

[14:28:05.0000] <Velmont>
TabAtkins: Yep, - like wikipedia's references. That is a good usage.

[14:28:17.0000] <sedovsek>
TabAtkins, Velmont: I've used it here: http://galjot.si/talks/future-layouts/#slide30

[14:28:21.0000] <tantek>
isherman I believe there is some work being done on this

[14:28:25.0000] <TabAtkins>
Yeah, exactly like Wikipedia.

[14:28:36.0000] <sedovsek>
But that's because I need not care, or at least not so much, about degradation.

[14:28:53.0000] <sedovsek>
Wikipedia is great example, yes.

[14:29:04.0000] <isherman>
tantek: any way for me to stay in the loop on that work?

[14:29:31.0000] <tantek>
isherman ok found where it's being tracked for CSS4-UI: http://wiki.csswg.org/spec/css4-ui#more-selectors

[14:29:43.0000] <tantek>
:autofill is what you're asking about right?

[14:30:01.0000] <isherman>
tantek: yep, that's exactly it

[14:30:35.0000] <isherman>
tantek: would it be appropriate to add support for this selector to WebKit, or is it too early for now?

[14:30:58.0000] <tantek>
I presume you mean prefixed, like :-webkit-autofill

[14:32:37.0000] <isherman>
tantek: sure, prefixed if that's still the recommendation (I seem to recall having seen a long thread on WhatWG wondering about the value vs. cost of prefixes)

[14:32:56.0000] <tantek>
WhatWG has no authority on prefixing CSS features, the CSSWG does ;)

[14:33:26.0000] <tantek>
and yes, there's been lots of permathreads on several mailing lists about prefixing, few of them actually concluding with anything actionable or reasonably summarized.

[14:35:10.0000] <isherman>
But in the case of this selector, adding the prefixed ":-webkit-autofill" selector sounds appropriate?  If so, I'll go ahead with that :)

[14:35:10.0000] <Velmont>
sedovsek: Found a page I randomly remember from a few years ago that I thought used it, but I see now it's just placed divs. Although it could've used it.

[14:35:36.0000] <tantek>
yes - implementations are always encouraged to innovate in ways that make sense to them. it helps more sensibly shape the standards :)

[14:36:08.0000] <tantek>
isherman, there's a couple of paths to advance this pseudo-class, I don't have a preference, but you may have an opinion. either we can develop it in CSS4-UI, or, because it is a selector, it can also go into the next version of Selectors.

[14:36:32.0000] <sedovsek>
If I compare this one http://platform.html5.org/ in multi column layout or IE9 (fallback) ...

[14:36:53.0000] <sedovsek>
I kinda like it better with IE9 ... it feels like it's easier to find links you are looking for.

[14:37:37.0000] <isherman>
tantek: Hmm, I'm not sure what the difference between those two paths is — are they both targeted at CSS4 (or whatever the next version of CSS will be named)?

[14:39:06.0000] <tantek>
one difference is that there is a FPWD of selectors4: http://www.w3.org/TR/selectors4/ whereas I have yet to write-up even an editor's draft of CSS4-UI (I'm still working on wrapping up CSS3-UI, now that its second LC has closed).

[14:39:49.0000] <tantek>
so selectors4 is further along from that perspective, and thus putting the feature there may get it a) into an editor's draft sooner, b) into a public WD sooner, and perhaps even LC/CR sooner.

[14:40:33.0000] <isherman>
tantek: well, I guess a faster path is better from my perspective :)

[14:41:00.0000] <tantek>
but these things of course depend on individual editors, their time/interest etc. however since fantasai is editing Selectors4 I expect it to proceed reasonably swiftly (unless she takes on more work that slows her down) and likely faster than I can get CSS4-UI to the same draft state.

[14:42:41.0000] <isherman>
that makes sense

[14:43:12.0000] <isherman>
I think either way sounds fine to me — I'll leave it to your discretion, since you're much more familiar with this process

[14:43:48.0000] <tantek>
I'd also encourage lurking in irc://irc.w3.org:6665/css

[14:43:53.0000] <isherman>
but I'll go ahead and push forward on getting the prefixed version into WebKit

[14:44:00.0000] <tantek>
makes sense

[14:44:15.0000] <tantek>
and will help add weight/incentive/priority to get it spec'd

[14:46:04.0000] <isherman>
perfect — thanks again for the advice :)

[14:47:22.0000] <tantek>
isherman - no problem at all - thanks for the heads up.

[14:48:21.0000] <tantek>
isherman - I've also filed a bugzilla bug for the :-moz-autofill equivalent in Gecko: https://bugzilla.mozilla.org/show_bug.cgi?id=740979

[15:31:55.0000] <smaug____>
no aklein


2012-03-31
[17:12:16.0000] <heycam>
Hixie, the string dictionary default values in HitRegionOptions should use double quotes

[21:33:58.0000] <abarth>
Hixie: you're too clever by half

[22:26:53.0000] <smaug____>
no other mutationobserver people here :(

[22:27:15.0000] <smaug____>
/me decides then the correct behavior without asking anyone else :)

[00:00:03.0000] <[tm]>
smaug____: did the decision include unilaterally minting a new element name?

[00:02:07.0000] <smaug____>
/me has plenty of new element names in his pocket

[00:58:27.0000] <annevk>
seems it's time to remove myself from ietf-http-wg

[00:58:45.0000] <annevk>
not really interested in following another hybi-like discussion

[01:00:44.0000] <annevk>
and done

[04:40:04.0000] <annevk>
hmm, so I thought XHR and Image behaved differently

[04:40:43.0000] <annevk>
apparently not

[04:53:03.0000] <jarek>
Hi

[04:53:11.0000] <jarek>
according to http://commons.oreilly.com/wiki/index.php/SVG_Essentials/Coordinates:

[04:53:31.0000] <jarek>
"Specifying units in the <svg> element does not affect coordinates given without units in other elements."

[04:54:20.0000] <jarek>
why is it so? Even if a specify unit in top level element (svg), I have still to repeat all over the place?

[04:54:30.0000] <jarek>
s/if a specify/if I specify

[16:32:05.0000] <Ms2ger>
Yay, MutationObserver in Gecko

