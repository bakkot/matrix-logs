2013-05-01
[21:03:12.0000] <mortrca>
I would like to see an api developed that would allow for pages to capture events for non-standard keyboard buttons such as the play/pause/next/previous and other media control buttons that many keyboards have.

[21:04:42.0000] <mortrca>
Is there a reliable way for me to determine if this suggestion has been made in the past?

[22:25:27.0000] <kochi>
MikeSmith: yt?

[22:31:56.0000] <MikeSmith>
kochi: here

[22:34:07.0000] <kochi>
Hi Mike!

[22:34:54.0000] <kochi>
I read the F2F minutes of IME API part, and there was a discussion about its accessibility issue.

[22:36:18.0000] <kochi>
I understand there are strong oppositions for implementing an editor in <canvas>

[22:36:37.0000] <MikeSmith>
kochi: yep

[22:37:12.0000] <kochi>
but I think we shouldn't prevent those who want to do so from implementing, by restricting API

[22:37:33.0000] <kochi>
probably presenting such an example in the API doc isn't a good thing.

[22:39:11.0000] <MikeSmith>
kochi: yeah, I think part of it is just, that canvas example is quite prominent

[22:39:34.0000] <MikeSmith>
the spec would still  be fine without that example

[22:40:17.0000] <MikeSmith>
so it might just be a matter of dropping that example

[22:40:34.0000] <MikeSmith>
you could still keep the hooks in the API

[22:40:37.0000] <kochi>
Ok, I feel that the example made readers have impression that "implementing editor in <canvas>" is the primary goal to achieve by the IME API

[22:40:43.0000] <MikeSmith>
right

[22:41:17.0000] <kochi>
Ok, I'll consider dropping it.  Maybe coming up another good example would be better.

[22:41:53.0000] <kochi>
Also I got a very detailed (even updated) API doc from Microsoft

[22:42:03.0000] <kochi>
which was very awesome

[22:42:40.0000] <kochi>
but I have a fundamental question: can we mix CSS feature in the IME API spec?

[22:43:10.0000] <kochi>
their proposal included CSS properties like 'ime-mode'.

[22:43:49.0000] <kochi>
I think it makes sense to have all IME related features in one spec rather than distributed in HTML, DOM and CSS

[22:48:55.0000] <kochi>
It makes sense if the spec is used as a reference, it would be convenient to have all related information in one place, but if another authoritative CSS spec is updated, there may be discrepancy and doubles the updating effort for one thing.

[01:47:01.0000] <Hixie>
cabanier: i'd be fine with making fonts support CORS if browsers want to implement that. the canvas spec is blind to that, it just uses the font's origin.

[02:48:36.0000] <annevk>
http://www.w3.org/2001/tag/doc/mime-respect

[02:52:46.0000] <Ms2ger>
2001?

[03:05:19.0000] <annevk>
I wonder if the TAG was responsible for the idea that there's no meaning inherit to the URL. Might be about time to obsolete that...

[06:15:08.0000] <annevk>
http://lists.w3.org/Archives/Public/www-style/2013Apr/0641.html seems like overkill for what mostly comes down to string equality operations... Am I missing something?

[06:15:29.0000] <annevk>
TabAtkins_: ^^

[06:16:16.0000] <zewt>
D:

[06:17:08.0000] <zewt>
he started with two RFCs, that's always a recipe for massive overcomplexity

[06:17:59.0000] <Redface>
hi :)

[06:19:53.0000] <zewt>
annevk: better to be able to compare arbitrary attributes, have a really simple comparison, then if the comparison doesn't match your site, use the sort key approach and add another attribute just for the comparison

[06:20:52.0000] <annevk>
zewt: not sure what you mean

[06:21:01.0000] <zewt>
though at that point i guess you may as well just use a class and skip the whole thing

[06:21:34.0000] <zewt>
<a href="http://weird.url" data-foo="http://simplified.url">

[08:09:25.0000] <GPHemsley>
Hixie: Should I let you sort out any proposed change to the meta name list/

[08:09:26.0000] <GPHemsley>
?

[08:18:00.0000] <annevk>
GPHemsley: what do you mean?

[08:38:08.0000] <annevk>
TabAtkins_: Keven's argument is that JavaScript's modules follow the same semantics as CSS' @import by default but can be overridden

[08:38:16.0000] <annevk>
Kevin*

[08:38:39.0000] <TabAtkins_>
I understand his argument, but it's still wrong.  Also, CSS's @import is not a great model to be emulated.

[08:39:27.0000] <TabAtkins_>
He's attaching way too importance to the concept of a central naming authoring.  (This seems to be a common failure mode among people who like namespaces - they fetishize non-collision, even when it's perfectly reasonable to allow and manage collisions).

[08:40:16.0000] <annevk>
TabAtkins_: the default loader resolving against the document's URL combined with appending ".js" to the end seems silly though

[08:40:36.0000] <annevk>
TabAtkins_: @import semantics as default seems saner

[08:41:00.0000] <TabAtkins_>
Where relative links are resolved against the stylesheet's url?

[08:41:43.0000] <GPHemsley>
annevk: Most of the requests for wiki accounts nowadays are for people wanting to add entries to the Meta Extensions list

[08:43:12.0000] <annevk>
TabAtkins_: ah yeah, in JavaScript you might use the script's url I suppose, given it's a syntactic construct you can do that

[08:43:37.0000] <annevk>
GPHemsley: ah okay, that seems fine

[08:43:53.0000] <GPHemsley>
annevk: which?

[08:44:07.0000] <annevk>
GPHemsley: people adding entries to the list

[08:44:24.0000] <TabAtkins_>
Problematic, though - it means that when you move code from a <script> block to a separate stylesheet, you need to change the url.  Also, CSS's relative-link-resolution semantics are convenient *sometimes*, when getting resources which are situated near the stylesheet, but very frustrating when trying to link together resources in disparate locations.

[08:44:52.0000] <TabAtkins_>
(I want to add a doc() or doc-url() function that's identical to url(), but resolves against the document's base url instead.)

[08:47:12.0000] <annevk>
don't do base, but just the doc's URL

[08:47:25.0000] <annevk>
well, actually...

[08:47:28.0000] <TabAtkins_>
Riht, sorry, slip of fingers.

[08:47:49.0000] <SimonSapin>
annevk: is that not the same?

[08:47:58.0000] <annevk>
SimonSapin: no

[08:48:05.0000] <SimonSapin>
maybe with <base>?

[08:48:36.0000] <annevk>
TabAtkins_: it still seems better than append ".js" and then fetch it...

[08:48:52.0000] <TabAtkins_>
annevk: Doesn't seem too bad to me. ^_^

[08:49:39.0000] <annevk>
any other place that takes something that looks like a URL does not do that, but it's okay if JavaScript has it for modules?

[08:50:04.0000] <annevk>
o_O

[08:50:08.0000] <TabAtkins_>
It makes the module syntax look a lot like other language's module syntax, which is nice!

[08:58:17.0000] <TabAtkins_>
annevk: Regarding the url matching, I think David Sheets should be ignored.  Yes, URL matching is technically a pattern matching operation, but the patterns are non-trivial to author yourself, and we can offer much better.

[08:58:35.0000] <TabAtkins_>
Also, as he says himself, it's not able to express the :local-link() semantics. ^_^

[09:00:05.0000] <TabAtkins_>
I agree that it does offer a more powerful model in total, but I don't think it's worth it for giving up the simplicity of common cases.

[09:05:15.0000] <annevk>
It's a mismatch with the architecture we have today.

[09:05:47.0000] <dglazkov>
good morning, Whatwg!

[09:08:17.0000] <MikeSmith>
good morning, Web Components

[09:08:35.0000] <MikeSmith>
WebKit doesn't like you any more

[09:09:01.0000] <MikeSmith>
but we still do

[09:09:10.0000] <Ms2ger>
We do?

[09:10:18.0000] <nimbu>
ahahahahhaha

[09:10:24.0000] <nimbu>
Ms2ger is hilarious

[09:10:35.0000] <Ms2ger>
I am?

[09:14:17.0000] <nimbu>
VERY FUNNY!

[10:04:46.0000] <til>
dglazkov: can you please register appsforartists on the wiki for me

[10:05:07.0000] <til>
i'd like to add a link to the webgl settings object that getContext('2d') is mirroring

[10:05:09.0000] <til>
http://www.khronos.org/registry/webgl/specs/latest/#5.2

[10:07:02.0000] <cabanier>
hixie: so this line should be taken out then: "using a font that has an http://www.whatwg.org/specs/web-apps/current-work/multipage/origin-0.html#origin that is not the http://www.whatwg.org/specs/web-apps/current-work/multipage/origin-0.html#same-origin as that of the http://www.whatwg.org/specs/web-apps/current-work/multipage/dom.html#document object ….then the method must throw a http://www.whatwg.org/specs/web-apps/current-work/multipage/infrastruc

[10:10:28.0000] <til>
(CanvasOpage)

[10:10:34.0000] <til>
Opaque

[10:15:48.0000] <dglazkov>
til: could you be asking the wrong guy? I have no idea what you're asking for :)

[10:16:15.0000] <til>
you're listed here

[10:16:16.0000] <til>
http://wiki.whatwg.org/wiki/Special:ListUsers%26group%3Dautoconfirmed

[10:16:36.0000] <til>
there's a big banner for non-logged-in users that says if you want to make an edit, run it by one of these guys

[10:17:22.0000] <til>
you were listed there.  weird.

[10:17:40.0000] <dglazkov>
til: I guess I am no longer important :)

[10:18:42.0000] <til>
you're always important

[10:18:58.0000] <til>
Hixie: can you please make me an account at appsforartists on the wiki

[10:19:27.0000] <til>
i want to link the CanvasOpaque proposal to the WebGL settings object it's implementing

[10:20:57.0000] <MikeSmith>
til: I can set it up, I think

[10:21:04.0000] <til>
hooray MikeSmith

[10:21:06.0000] <til>
:)

[11:57:01.0000] <gsnedders>
Anyone here with the parser swapped in?

[12:09:21.0000] <gsnedders>
(If anyone does, can you help check whether <button><p><button> goes into an infinite loop per spec?)

[12:12:44.0000] <jsbell>
is boris zbarsky around? I can't recall his IRC nick. bzed perhaps?

[12:13:12.0000] <jsbell>
hrm, seems to be bz, so guess not

[12:14:29.0000] <gsnedders>
I don't think he's ever in here.

[12:21:46.0000] <MikeSmith>
jsbell: try #developers on irc.mozilla.org

[12:21:55.0000] <MikeSmith>
nick is just "bz"

[12:23:33.0000] <jsbell>
I'll just email, not urgent. :)

[12:23:36.0000] <jsbell>
thanks tho!

[12:24:07.0000] <gsnedders>
I am fairly certain html5lib is hitting another infinite loop per spec.

[12:24:11.0000] <gsnedders>
This is… nice.

[12:32:13.0000] <gsnedders>
Oh, no, it's just a bug in html5lib.

[12:34:18.0000] <jgraham_>
Seems more likely

[12:34:49.0000] <jgraham>
wilhelm: Is this power adapter yours?

[12:44:28.0000] <gsnedders>
jgraham: Do you want to set up critic for html5lib-tests?

[13:09:30.0000] <jgraham>
gsnedders: Sure, can do

[13:10:24.0000] <jgraham>
Although the thought of making the API calls is making me feel tired now. In the morning I think

[13:24:12.0000] <jgraham>
gsnedders: You can have some review for the patch instead

[13:24:22.0000] <jgraham>
I didn't merge, in case you want to

[13:25:43.0000] <Hixie>
cabanier: why?

[13:25:55.0000] <Hixie>
cabanier: if we take that out it'd be a security hole...

[14:51:25.0000] <cabanier>
Hixie: why is it a security hole?

[15:05:20.0000] <TabAtkins_>
http://software.hixie.ch/utilities/js/live-dom-viewer/saved/2237

[15:05:34.0000] <TabAtkins_>
Whoops, wrong channel.


2013-05-02
[03:02:14.0000] <kochi>
MikeSmith: removed <canvas> example in IME API spec: https://dvcs.w3.org/hg/ime-api/raw-file/default/Overview.html

[03:11:59.0000] <annevk>
TabAtkins_: awake?

[04:49:29.0000] <Ms2ger>
OH "I'd hate to see a naked middle-aged man with pink hair, and I am one."

[05:16:11.0000] <gsnedders>
Ms2ger: brucel?

[05:16:18.0000] <Ms2ger>
Yeah

[05:16:48.0000] <jgraham>
Pretty sure I have seen him and he wasn't naked

[05:35:04.0000] <annevk>
Pretty sure I've seen pictures where he was a book away from that

[06:07:40.0000] <zcorpan>
should rel=discussion and rel=issues be registered? (or are they just not implemented in v.nu yet?)

[06:08:06.0000] <zcorpan>
tantek: hsivonen_: MikeSmith: ^

[06:18:23.0000] <annevk>
I feel like a large part of Fetch is becoming an exercise in redefining vague parts of HTTP...

[06:19:46.0000] <annevk>
E.g. it now defines how to follow a redirect (that you include the same headers and such, how you parse the Location header), how to do HTTP authentication (again with including the headers, not doing it for CORS, that credentials are passed via the URL), ...

[06:21:04.0000] <annevk>
It's pretty close to just having "open a TCP connection, serialize this request object to an HTTP request, transmit it, parse response..."

[06:48:58.0000] <zcorpan>
annevk: just take that step :-)

[06:49:28.0000] <annevk>
that would get very bad with SPDY

[06:50:12.0000] <zcorpan>
why?

[06:50:55.0000] <annevk>
well it serializes differently, doesn't it?

[06:51:41.0000] <annevk>
keeps connections open longer, etc.

[06:52:13.0000] <annevk>
might even be possible to share connections across disconnected browsing contexts

[06:52:58.0000] <zcorpan>
i'm not familiar with spdy, but in any case it would be good with clear specs for http and spdy

[06:53:04.0000] <annevk>
what could possibly be taken over is all semantic-related requirements

[06:53:31.0000] <annevk>
maybe long term

[06:53:50.0000] <annevk>
after we bug the IETF about it again and show them what we need to build on top of their stuff  to actually use it...

[06:55:31.0000] <zcorpan>
anyone have comments on http://html-differences.whatwg.org/#development-model ?

[06:56:55.0000] <annevk>
authors seem to dislike the term authors, so maybe we should start calling them developers?

[06:58:31.0000] <annevk>
zcorpan: might also want to introduce a switch in the abstract for HTML5/HTML

[06:58:51.0000] <annevk>
zcorpan: for the document title

[06:59:28.0000] <MikeSmith>
zcorpan: dunno about those rel values

[06:59:30.0000] <zcorpan>
annevk: i decided to have the same title

[06:59:40.0000] <MikeSmith>
zcorpan: will take a look

[06:59:56.0000] <annevk>
zcorpan: <title> is still different?

[07:00:34.0000] <zcorpan>
annevk: no?

[07:01:57.0000] <annevk>
zcorpan: sorry, cache :/

[07:07:42.0000] <zcorpan>
annevk: thanks

[07:08:48.0000] <annevk>
zcorpan: oh, also just committed a small fix to xref you might want to integrate

[07:10:21.0000] <zcorpan>
ok

[07:13:48.0000] <zcorpan>
apparently today i've managed to procastinate documenting the changes on the w3c side :-P

[07:14:15.0000] <Redface>
such as?

[07:14:49.0000] <zcorpan>
Redface: you mean, what changes? or what?

[07:15:02.0000] <Redface>
yesyes

[07:15:16.0000] <Redface>
wat changes

[07:15:30.0000] <zcorpan>
that's what i haven't documented yet :-)

[07:15:44.0000] <zcorpan>
though e.g. <hgroup> being dropped

[07:17:33.0000] <Redface>
i see i see

[07:23:50.0000] <annevk>
ffffuuu

[07:24:05.0000] <annevk>
forgot to check www-authenticate header

[07:25:23.0000] <zcorpan>
Hixie: why this rule in http://www.whatwg.org/style/specification ? p + * > li, p + div.status + * > li, dd li { margin: 1em 0; }

[07:26:05.0000] <zcorpan>
Hixie: it makes some lists have spacing and others not, which looks weird (in html-differences at least)

[07:27:01.0000] <zcorpan>
Hixie: could the selector be changed to just `li` (and use a class where you don't want the spacing)?

[07:27:53.0000] <SteveF>
zcorpan: http://html-differences.whatwg.org/#development-model have some suggestions for the text re 5.1 should i file a bug?

[07:28:20.0000] <zcorpan>
SteveF: sure

[07:28:29.0000] <SteveF>
ok will do

[07:28:49.0000] <zcorpan>
(you can select text in the spec and a link should appear to file a bug)

[07:28:53.0000] <SteveF>
also noted some inaccuracies so will file bugs

[07:28:59.0000] <zcorpan>
thanks!

[07:30:32.0000] <zcorpan>
Hixie: (like the "brief" class which exists already)

[07:38:32.0000] <annevk>
SteveF: did you cc me or am I on the default cc list somehow?

[07:38:50.0000] <SteveF>
must be on default i just filed bugs

[07:40:49.0000] <annevk>
MikeSmith: can you remove me from that component? The one that reads "HTML5 differences from HTML4 (editor: Anne van Kesteren)"

[07:41:12.0000] <annevk>
MikeSmith: (before you decide to rename the component, you want to coordinate that with zcorpan)

[07:42:15.0000] <zcorpan>
i'm OK with renaming the component. "HTML differences from HTML4 (editor: Simon Pieters)"

[07:42:40.0000] <zcorpan>
oh this was about cc

[07:44:11.0000] <annevk>
yeah, renaming seems fine, but since the spec has direct links I thought I'd not ask about that :)

[08:07:54.0000] <MikeSmith>
annevk: zcorpan: ok, changed the component name and removed annevk from the Cc field

[08:08:09.0000] <MikeSmith>
the links I'll fix later

[08:08:19.0000] <annevk>
ta

[08:09:38.0000] <zcorpan>
MikeSmith: thanks. i can fix the links in html-differences

[08:14:32.0000] <MikeSmith>
k

[08:27:05.0000] <SteveF>
zcorpan:mike changing component name has broken the bug script a little

[09:22:58.0000] <dglazkov>
good morning, Whatwg!

[09:25:20.0000] <Redface_>
wow , heres 1:27am :)

[09:26:26.0000] <odinho>
And here it was 18:27

[09:28:32.0000] <Redface_>
where yall live in?

[09:28:59.0000] <odinho>
dglazkov: Is in California/USA IIRC, I'm in Oslo/Norway.

[09:29:25.0000] <dglazkov>
we span globe like a boss

[09:29:40.0000] <Redface_>
Seoul/South Korea over here

[09:30:03.0000] <annevk>
London reporting in

[10:37:42.0000] <TabAtkins>
annevk: pong

[10:38:32.0000] <annevk>
TabAtkins: fixed the bit I was going to ask about as I got feedback from someone else (in the DOM Standard, last two commits)

[10:39:34.0000] <TabAtkins>
Cool.  Looking into the threads, I'm not finding enough agreement to really justify asking you to change the resolve behavior quite yet.  I'll be putting up an email in a few looking for final sign-offs on what I want.

[10:40:00.0000] <TabAtkins>
(Regarding automatically assimilating thenables.)

[10:48:12.0000] <annevk>
TabAtkins: look at the suggestion from Domenic and see if that could work for you

[10:48:21.0000] <TabAtkins>
Where?

[10:48:24.0000] <annevk>
TabAtkins: where we'd special case branded Futures

[10:48:32.0000] <annevk>
TabAtkins: don't have a pointer handy and in meeting

[10:48:36.0000] <TabAtkins>
kk

[10:49:09.0000] <TabAtkins>
If it's "single-level unwrap native/branded futures, recursively assimilate thenables, just accept everything else", then that's still not great for me:

[10:49:57.0000] <TabAtkins>
It's not *predictable*.  "Thenable" is a category that is larger than "promise-like", and it means that you can accidentally trip into the "assimilate" case without wanting to, just because some API returns an object with a then() method unrelated to promises.

[10:52:22.0000] <TabAtkins>
I won't die if that's the behavior we settle on, I'll just be unhappy, because it means that to be predictable, you have to use Future.accept() to wrap the return value of any function that's not meant to return a future/thenable.

[10:52:50.0000] <annevk>
I agree it would be nicer to not special case "then". I don't think that's going to fly.

[10:53:08.0000] <TabAtkins>
Yeah, so I'm writing up an email to see if it's acceptable now.

[10:53:41.0000] <annevk>
My impression is that you're getting agreement from the monad-camp and everyone else is ignoring it. But hopefully someone speaks up now.

[10:55:22.0000] <TabAtkins>
Yeah, that's what I want to fix.

[11:38:16.0000] <tantek>
zcorpan rel-discussion is registered, I'm working on rel-issues

[11:52:43.0000] <tantek>
zcorpan, ok rel-issues registered and spec stubbed.

[11:52:47.0000] <tantek>
thanks for the heads-up.

[12:15:06.0000] <MikeSmith>
SteveF: which script?

[12:19:42.0000] <annevk>
MikeSmith: prolly the one running on html-differences.whatwg.org

[12:20:06.0000] <MikeSmith>
ah ok

[12:43:20.0000] <TabAtkins>
annevk: Your recent commits now leave the naming and behavior in an inconsistent state.

[12:44:31.0000] <TabAtkins>
You call the first argument to then an "acceptCallback", but it still uses the recursive resolve semantics.

[12:45:25.0000] <TabAtkins>
This means, for example, that it's impossible to provide an explicit callback with the same behavior as omitting the callback.

[12:46:02.0000] <TabAtkins>
Future.accept(Future.accept(5)).then(cb).then(alert) will, regardless of what "cb" is, alert a plain value, not a Future.

[12:46:15.0000] <TabAtkins>
While Future.accept(Future.accept(5)).then().then(alert) will alert a Future.

[12:50:13.0000] <SteveF>
MikeSmith: the script that makes it easier to file a bug

[12:57:42.0000] <annevk>
TabAtkins: the name of the callback indicates when it will be invoked

[12:58:14.0000] <annevk>
TabAtkins: futures don't have a "resolved" state, it's either "pending", "accepted", or "rejected"

[13:00:00.0000] <annevk>
Ah I see Domenic_ pointed that out already on the list

[13:17:58.0000] <TabAtkins>
annevk: I don't think you understand what I just said, because your response is a non-sequitur.  ^_^

[13:18:34.0000] <annevk>
TabAtkins: no it's not

[13:19:00.0000] <TabAtkins>
Remember earlier, when you said that "Future.accept(Future.accept(5)).then(function(x) { return Future.accept(x); }).then(alert)" would alert "<object Future>" rather than "5"?  That is, it would only strip one level of Future-ness from the value?

[13:19:11.0000] <annevk>
yeah that was wrong

[13:19:28.0000] <TabAtkins>
Yes, and now you have a problem.

[13:19:35.0000] <annevk>
but that's orthogonal to the naming

[13:19:46.0000] <TabAtkins>
There is no possible function you can pass to .then() that is equivalent to not passing a function, and that's dumb.

[13:20:12.0000] <Domenic_>
relevant: https://github.com/slightlyoff/DOMFuture/issues/13

[13:21:45.0000] <annevk>
TabAtkins: yeah, as I said to you earlier, we could introduce branding for that

[13:22:08.0000] <lecuyer>
TabAtkins: has there been a discussion around :has() as a pseudo class?

[13:22:34.0000] <TabAtkins>
lecuyer: Right now, the use-case for :has() is satisfied by :matches() and/or the subject indicator.

[13:25:15.0000] <lecuyer>
TabAtkins: ah, how did I miss the subject indicator?

[13:25:29.0000] <TabAtkins>
It's buried in a non-obvious section. ^_^

[13:26:25.0000] <lecuyer>
the ! is new to level 4, right? I dont' see that in 3

[13:26:29.0000] <TabAtkins>
Yes.

[13:27:08.0000] <TabAtkins>
foo:has(bar baz) is equivalent to :matches(!foo bar baz).

[13:27:26.0000] <lecuyer>
righto

[13:28:19.0000] <TabAtkins>
(I find :has() easier to read for its use-cases, though.)

[13:29:59.0000] <Domenic_>
subject indicator is going to be amazing

[13:31:21.0000] <TabAtkins>
Unfortunately, we've had to put it in the "complete" profile, so it'll only be available to JS APIs, not normal CSS selectors.

[13:31:45.0000] <Domenic_>
oh no why :(

[13:31:55.0000] <TabAtkins>
Because it's not fast. ^_^

[13:33:07.0000] <Domenic_>
:(. Is there another way to solve the common "previous sibling" requirement than `!foo bar`?

[13:33:56.0000] <TabAtkins>
Doing *just* a "previous sibling" or "parent" thing isn't terrible, and can probably be done in the fast profile (according to bzbarsky).

[13:34:00.0000] <TabAtkins>
But we haven't done so yet.

[13:34:12.0000] <Domenic_>
siiiigh

[13:35:00.0000] <Domenic_>
maybe some genius on the blink or ie team will think of a way to make it fast and then everyone else will be pressured into adding it ^_^

[13:35:45.0000] <Domenic_>
oh no the reference combinator is gone too, poor labels

[13:35:51.0000] <TabAtkins>
No it's not.

[13:36:00.0000] <fantasai>
Domenic_: There's ways to make it fast, it's just complicated and probably requires some sophisticated caching

[13:36:08.0000] <Domenic_>
it's under complete i mean

[13:37:15.0000] <TabAtkins>
Oh, right.  That's a borderline case - we need implementor feedback for it.

[13:50:35.0000] <jgraham>
The Futures discussion is nice. I get to silently agree with TabAtkins and so neatly avoid the work of actually getting involved.

[14:00:01.0000] <TabAtkins>
jgraham: I wish more people *would* speak up.  Even if I *am* a shining voice of reason in the darkness, if I'm the only one, it's easy for "the other side" to treat me like a lone objector and route around me.

[14:32:00.0000] <lecuyer>
TabAtkins: I think what you're asking is blazingly reasonable

[14:45:48.0000] <lecuyer>
crap, disregard the email I "sent", my client auto-sent when I closed the window :(

[14:48:17.0000] <Lachy>
fantasai, TabAtkins, thanks for dealing with the scoping stuff in selectors. I should be able to get back to doing some spec work next week. I can't do it this weekend as I'm busy moving apartment.

[14:48:56.0000] <Lachy>
though, note, hopefully the next time a spec with selectors api is published, it will be as part of the DOM spec, and not the independent selectors api 2 spec.

[14:49:08.0000] <TabAtkins>
No problem!

[15:11:56.0000] <tantek>
mailing lists might actually help with this: http://dilbert.com/strips/comic/2013-05-02/

[15:30:23.0000] <TabAtkins>
Yay, I have Jonas agreeing with me so far!

[15:30:26.0000] <TabAtkins>
That's helpful.

[15:38:27.0000] <Domenic_>
is it just me or are my emails not threading correctly -_-

[15:38:34.0000] <TabAtkins>
Works for me.

[15:38:53.0000] <TabAtkins>
Also: ARRRRGH, I'm not intending my mails to read as "We made a spec and you didn't, so stfu".

[15:39:18.0000] <TabAtkins>
I was getting getting angry at Mark for pretending like there's a real spec for promises-in-his-head that we all have to defer to, so that whatever I say is irrelevant.

[15:39:43.0000] <TabAtkins>
I was, however, intending them to be read as "Shit or get off the pot."

[15:48:03.0000] <Domenic_>
TabAtkins: are you aware of his involvement in Promises/A+?

[15:48:10.0000] <TabAtkins>
Yes, definitely.

[15:48:36.0000] <TabAtkins>
But, to the best of my knowledge, he keeps referring to a tc39 promises spec, not the separate promises/a+ spec that you're in charge of.

[15:48:48.0000] <TabAtkins>
If I'm wrong, sorry, but he hasn't made this clear. ^_^

[15:57:54.0000] <Domenic_>
I'm not sure that's what he's referring to, but it was my impression he was, because part of the Promises/A+ goal is to be something TC39 can build on, and his involvement has been toward that.

[16:05:01.0000] <TabAtkins>
My experience is that Mark is often unclear to the point of being obfuscatory. :/  It takes effort to make sure you actually know what he's talking about.

[16:05:17.0000] <TabAtkins>
But whatever, I'm just trying to get shit down, and don't mean to be rude to anyone. :/


2013-05-03
[21:00:33.0000] <Redface>
im at seoul digital forum. Tim Buners Lee showed up yesterday and today is for Jessica Alba

[02:24:30.0000] <hallvors>
darobin: busy?

[02:28:42.0000] <darobin>
hallvors: sort of, why?

[02:29:05.0000] <hallvors>
I was told to ask you for help fixing some settings on w3c-test.org

[02:29:20.0000] <hallvors>
(unfortunately, I don't know what exactly needs changing)

[02:29:55.0000] <hallvors>
But this test fails because the server doesn't allow PHP to send custom HTTP status text: http://w3c-test.org/web-platform-tests/master/XMLHttpRequest/status-basic.htm

[02:31:24.0000] <hallvors>
(If somebody else is less busy and could fix it, just tell me who to talk to)

[02:31:53.0000] <hallvors>
GET http://w3c-test.org/web-platform-tests/master/XMLHttpRequest/resources/status.php?code=502&text=YO&content=&type= should say "502 YO", not "502 Bad Gateway"

[02:34:53.0000] <annevk>
heh, I wrote that test :-)

[02:35:28.0000] <hallvors>
annevk: I know :)

[02:35:53.0000] <annevk>
happy to break both browsers and servers

[02:35:53.0000] <hallvors>
you don't happen to know an Apache pref that needs changing?

[02:37:00.0000] <Ms2ger>
I say we have darobin set up that python server we've been talking about

[02:37:24.0000] <darobin>
hallvors: ah yes, that's a known bug

[02:37:49.0000] <darobin>
Ms2ger: that won't happen today, but it would indeed be good

[02:37:59.0000] <Ms2ger>
Tomorrow? :)

[02:38:10.0000] <darobin>
hallvors: I need to divide and conquer the terrible mess that the Apache config is there to figure out why it won't allow that

[02:38:20.0000] <darobin>
Ms2ger: it will be the tomorrow of some day :)

[02:38:27.0000] <Ms2ger>
Heh

[02:38:44.0000] <Ms2ger>
Hmm, is http://www.w3.org/Style/css2-updates/css2/ actually public?

[02:39:19.0000] <annevk>
darobin: maybe it's something from PHP?

[02:39:32.0000] <darobin>
annevk: that's certainly possible too

[02:40:03.0000] <darobin>
that's one of the many things I love about PHP, it has so many configuration options and so many ways of setting them that you're always certain that it'll just work the same across machines

[02:40:45.0000] <hallvors>
/me 's irony detector just got triggered

[02:41:04.0000] <hallvors>
annevk: did you see my attachment in the XHR auth bug?

[02:41:21.0000] <SteveF>
darobin: i want to move using aria doc to github whats the procedure?

[02:41:38.0000] <darobin>
SteveF: you want it under the w3c account?

[02:41:57.0000] <SteveF>
yes as its a html wg deliverable

[02:42:09.0000] <darobin>
SteveF: ok, what shortname do you want?

[02:42:16.0000] <annevk>
darobin: how is PHP run?

[02:42:32.0000] <darobin>
annevk: I think through mod_php (IIRC)

[02:42:55.0000] <SteveF>
darobin: aria-in-html

[02:43:47.0000] <SimonSapin>
Ms2ger: why not? It’s an ED

[02:44:15.0000] <SimonSapin>
I’m not sure why it’s not under http://dev.w3.org/csswg/

[02:44:18.0000] <Ms2ger>
SimonSapin, do you know how hard it is to get Bert to make an ED public?

[02:44:55.0000] <SimonSapin>
not really

[02:45:02.0000] <SimonSapin>
but I think it’s good that it’s public

[02:45:28.0000] <annevk>
hallvors: no, pointer?

[02:45:30.0000] <Ms2ger>
It is good indeed

[02:45:55.0000] <Ms2ger>
Would be interesting to see when the wg first resolved to make it public, and when it actually became public

[02:46:07.0000] <hallvors>
question: when I push something to GitHub, how long does it take until the corresponding /submissions/ folder for the pull request is updated on w3c-test.org?

[02:46:21.0000] <jgraham>
"it depends"

[02:46:27.0000] <annevk>
Ms2ger: is: http://www.w3.org/Style/css2-updates/css2/,access

[02:46:38.0000] <SimonSapin>
we resolved in February to have one, not sure about publicity

[02:46:48.0000] <jgraham>
It should be quick (it is push based, not intermittent polling)

[02:47:03.0000] <jgraham>
But sometimes the github queue gets backed up and you have to wait

[02:47:04.0000] <hallvors>
annevk: bug 15418 , attachment: https://www.w3.org/Bugs/Public/attachment.cgi?id=1353

[02:47:19.0000] <hallvors>
jgraham: thanks

[02:47:39.0000] <hallvors>
ah, updated now :-)

[02:47:43.0000] <annevk>
hallvors: guess I don't get email for attachments

[02:48:02.0000] <annevk>
Ms2ger: what's the Python server you've been talking about?

[02:48:15.0000] <SimonSapin>
Ms2ger: "RESOLVED: Develop text for CSS2.1 PER as open editor's draft (while continuing to maintain errata). Publish PER when we're done & have updated implementation report" http://lists.w3.org/Archives/Public/www-style/2013Feb/0382.html

[02:48:17.0000] <SimonSapin>
it says "open"

[02:48:26.0000] <Ms2ger>
annevk, a magical solution for all our problems

[02:49:02.0000] <Ms2ger>
annevk, in python

[02:49:14.0000] <annevk>
Ms2ger: ah, sounds like what I've been arguing for for a while, but never created (other than simpleserver which I stole from Aleto)

[02:49:54.0000] <Ms2ger>
annevk, but it needs someone to do work, so, yeah :)

[02:50:31.0000] <SimonSapin>
what kind of python server?

[02:50:44.0000] <Ms2ger>
For testing

[02:50:59.0000] <jgraham>
A perfect one

[02:51:12.0000] <Ms2ger>
That I can run in Mozilla automation

[02:51:26.0000] <annevk>
hallvors: that diagram doesn't work

[02:51:42.0000] <hallvors>
well, what's the problem?

[02:51:45.0000] <annevk>
hallvors: also, user agents do challenge even if user/pass are provided in URL

[02:51:59.0000] <annevk>
hallvors: and user/pass in open() are just copied to the URL

[02:52:06.0000] <hallvors>
Opera doesn't, I think

[02:52:11.0000] <annevk>
hallvors: so those are equivalent

[02:52:18.0000] <hallvors>
(and it seems like bad UI :-p)

[02:52:21.0000] <annevk>
Rebel Opera or Clone Opera?

[02:52:27.0000] <hallvors>
Rebel

[02:52:30.0000] <hallvors>
of course :-p

[02:52:34.0000] <annevk>
hehe

[02:52:49.0000] <annevk>
well wait

[02:52:54.0000] <annevk>
challenge does not mean prompt

[02:53:11.0000] <Ms2ger>
No, it means challenge

[02:53:17.0000] <hallvors>
hm.. not following you then

[02:53:38.0000] <hallvors>
by "challenge", do you mean "send request without authorize first"?

[02:55:12.0000] <hallvors>
in the diagram, user/pass in open() are handled just like in URL..

[02:55:33.0000] <hallvors>
so I'm still not sure what's not working for you

[02:55:53.0000] <annevk>
hallvors: send request, if get a 401, redo request with Authorization header

[02:56:00.0000] <annevk>
hallvors: http://wiki.whatwg.org/wiki/HTTP_Authentication has my notes

[02:56:16.0000] <annevk>
hallvors: http://fetch.spec.whatwg.org/#concept-basic-fetch has it in spec language

[02:56:35.0000] <annevk>
my idea is to obsolete most of XHR's HTTP infrastructure  with that spec

[02:58:30.0000] <hallvors>
I just need enough details somewhere to make sure XHR tests have usable pass conditions :-p

[02:58:57.0000] <annevk>
hallvors: okay, so one problem with your diagram is that for cross-origin and credentials in the URL, you don't want to transmit an Authorization header

[02:59:12.0000] <annevk>
hallvors: in fact, you just want to return the 401

[02:59:16.0000] <hallvors>
(btw I want to split up your send-authentication.htm into multiple tests. It's pretty hard to get an overview of what it tests, and some browsers throw a ton of auth prompts at you)

[02:59:25.0000] <annevk>
hallvors: please do

[02:59:34.0000] <annevk>
hallvors: that test was more a proof of concept than an actual test :/

[02:59:52.0000] <annevk>
I should probably not have checked it in without understanding it as much as I do now

[03:00:37.0000] <hallvors>
- CORS and credentials in URL should send Authorization header *if* target server allows it and withCredentials is true, no?

[03:00:56.0000] <annevk>
ooh, what I'm not handling yet is the conflict of Authorization via setRequestHeader() and credentials via URL I just realized...

[03:01:06.0000] <hallvors>
(and if target server sends 401 or there is a 401 response cached)

[03:01:26.0000] <hallvors>
annevk: in XHR spec, right?

[03:01:40.0000] <hallvors>
that's too high level for Fetch, I presume.

[03:01:55.0000] <annevk>
no Fetch is the perfect place I think

[03:02:25.0000] <annevk>
it'll get the headers and the URL so it can make a sensible decision

[03:02:40.0000] <annevk>
whatever sensible is :)

[03:02:57.0000] <hallvors>
IMO header should "win"

[03:03:10.0000] <hallvors>
because from JS authors PoV, it's set later

[03:03:48.0000] <annevk>
well I guess if you set a header you don't wait for challenge

[03:03:55.0000] <annevk>
so I guess in a way that's already handled

[03:04:08.0000] <annevk>
back to your question...

[03:06:38.0000] <annevk>
hallvors: so yeah, I think we could allow that. My main question with CORS and URL credentials is whether it's a lot of additional complexity and whether that'll actually be used or whether we're just wasting implementer resources...

[03:08:00.0000] <hallvors>
https://www.w3.org/Bugs/Public/attachment.cgi?id=1355

[03:08:29.0000] <hallvors>
changed handling of cached credentials (per your wiki notes)

[03:09:12.0000] <hallvors>
IMO it doesn't seem to add a lot of complexity.. but we could of course request a small implementor review for this.

[03:18:24.0000] <annevk>
hallvors: you're missing the entry point of no supplied credentials and getting a 401 back

[03:18:38.0000] <annevk>
hallvors: and getting a 401 back with a malformed WWW-Authenticate header or some such

[03:19:08.0000] <hallvors>
shouldn't that just be passed on to the JS?

[03:19:50.0000] <annevk>
no we prompt

[03:21:00.0000] <hallvors>
I think we should avoid that if possible..

[03:21:15.0000] <hallvors>
(and by "if possible" I mean "if it has no compat impact"..)

[03:21:28.0000] <annevk>
pretty sure we have to prompt

[03:21:56.0000] <annevk>
I think we also prompt if the credentials turn out to be incorrect

[03:22:19.0000] <darobin>
SteveF: you should be good to go with https://github.com/w3c/aria-in-html

[03:23:21.0000] <annevk>
hallvors: also, I think if you set the Authorization header, for cross-origin, you don't need withCredentials to be true and the server to say both Allow-Credentials and opting in for that header...

[03:26:16.0000] <hallvors>
Hm.. need to think about that. It should be an easier concept (and implementation) to treat all credentials equally, but in the scheme right now setting an Authorization header and not setting .withCredentials means a cross-domain request is just terminated.

[03:31:01.0000] <annevk>
setting an Authorization header is just very different from using open() -> URL credentials

[03:34:02.0000] <hallvors>
Agree, to some extent. But then it would be easier to not apply .withCredentials to HTTP auth at all

[03:34:10.0000] <SteveF>
darobin: thanks

[03:34:41.0000] <hallvors>
so cross-origin HTTP auth would depend only on whether target server says it accepts Authorization

[03:35:49.0000] <hallvors>
(effectively .withCredentials would then be .withCookies I guess)

[03:36:08.0000] <hallvors>
(it's already a bit confusing to have both anonymous flag and .withCredentials. It's not really obvious why both are needed.)

[03:38:44.0000] <hallvors>
annevk: http://www.lucidchart.com/invitations/accept/518393da-9438-47e2-9d30-08f60a000d50

[03:39:18.0000] <annevk>
anonymous flag does more

[03:40:04.0000] <SteveF>
darobin: what should i be calling the spec doc?

[03:40:16.0000] <hallvors>
hides Origin:

[03:40:38.0000] <annevk>
we also never prompt for cross-origin

[03:40:46.0000] <annevk>
at the moment

[03:40:54.0000] <SteveF>
darobin: Overview,html?

[03:41:01.0000] <annevk>
that's why URL credentials are not handled for CORS

[03:41:07.0000] <darobin>
SteveF: nah, use index.html

[03:41:15.0000] <SteveF>
ok thanks

[03:41:32.0000] <darobin>
Overview.html is an antique W3C convention that dates back to when the world hadn't settled on index.html

[03:41:35.0000] <annevk>
anonymous flag sort of forces all requests to be CORS requests, whereas withCredentials only takes effect for those requests that are actually cross-origin

[03:42:15.0000] <annevk>
(fetch makes this somewhat clearer I think)

[03:42:18.0000] <SteveF>
darobin: :-)

[03:42:29.0000] <hallvors>
why is that distinction required?

[03:42:54.0000] <annevk>
hallvors: say withCredentials is false

[03:42:54.0000] <SteveF>
darobin: all i need to do now is get the editors draft url redirected right?

[03:42:58.0000] <hallvors>
i.e. could we say .withCredentials defaults to true for local, false for CORS but can be set to the other value?

[03:43:12.0000] <annevk>
hallvors: I request same-origin /test which redirects to http://cross-origin.example/test

[03:43:23.0000] <annevk>
hallvors: the first request will have credentials, the second won't

[03:43:25.0000] <darobin>
SteveF: you can do that with an .htaccess

[03:43:25.0000] <hallvors>
(and allow setRequestHeader('Origin', 'about:blank') )

[03:43:36.0000] <annevk>
hallvors: however, with the anonymous flag set, neither would

[03:43:52.0000] <annevk>
hallvors: that's not a valid value for Origin

[03:44:20.0000] <SteveF>
darobin: me dumb, ok will check it out its current url is https://dvcs.w3.org/hg/aria-unofficial/raw-file/tip/index.html

[03:44:41.0000] <darobin>
SteveF: I wouldn't worry too much about that

[03:44:48.0000] <SteveF>
OK

[03:45:09.0000] <darobin>
SteveF: just including a link to the new in a warning box on the old is fine too — in fact it may be better as it keeps history and all

[03:45:24.0000] <SteveF>
darobin: and get other editors access

[03:45:51.0000] <SteveF>
darobin: is that something I can do myself?

[03:45:56.0000] <hallvors>
Oh, it's "referrer source" wich isn't exactly Origin..

[03:45:56.0000] <hallvors>
If the anonymous flag is set, the URL "about:blank", and the referrer source otherwise.

[03:47:09.0000] <hallvors>
/me keeps stumbling across the XHR-Fetch line

[03:47:44.0000] <annevk>
in the end XHR will just be a light wrapper around Fetch

[03:48:29.0000] <annevk>
it's the legacy API for Fetch (history rewritten)

[03:48:45.0000] <hallvors>
anyway, it's your view that for XHR auth, .withCredentials should only apply to cached stuff (i.e. from earlier manual input)?

[03:50:28.0000] <annevk>
even that felt somewhat dodgy I've to say

[03:50:49.0000] <annevk>
having withCredentials for cookies only and just ignoring URL credentials always might be more sensible?

[03:51:29.0000] <annevk>
ugh

[03:51:39.0000] <hallvors>
I'd support that

[03:51:48.0000] <hallvors>
just to simplify implementations..

[03:52:02.0000] <annevk>
yeah, I guess we should ask though, how often people use HTTP auth

[03:52:12.0000] <annevk>
shall I email webapps and do a tweet?

[03:53:02.0000] <hallvors>
annevk: could you click the lucidchart URL and look at the schema now?

[03:53:13.0000] <hallvors>
(scroll up for the URL :-p)

[03:57:23.0000] <annevk>
complex :)

[03:57:45.0000] <hallvors>
The relevant question is how often people use HTTP Auth *with* XHR, especially cross-origin :-p

[03:58:39.0000] <hallvors>
..and how often they use XHR to a HTTP Auth guarded URL *and* want the end user to input user name and password manually (instead of having it hard-coded in the JS)

[03:59:02.0000] <hallvors>
(Actually it is slightly simplified by removing .withCredentials :))

[03:59:12.0000] <darobin>
SteveF: you need to give me the GH accounts of the other editors, unless you can seem to modify access yourself under Setting -> Teams

[03:59:36.0000] <annevk>
hallvors: ah yes, you'd prolly never want the prompting

[04:00:03.0000] <SteveF>
darobin:ok thanks will see if not will give you names

[04:00:08.0000] <hallvors>
I would very much prefer not having to spec any sort of prompting :-p

[04:00:25.0000] <annevk>
hallvors: okay, so that argues for cross-origin -> yes to go directly to done

[04:00:35.0000] <annevk>
hallvors: well, we have prompting already

[04:01:05.0000] <hallvors>
but I don't think XHR+HTTP Auth+prompting is used in the wild

[04:01:21.0000] <hallvors>
so we could try to kill it

[04:01:32.0000] <annevk>
I don't think that matter much to be honest

[04:01:38.0000] <annevk>
and it would be inconsistent with <img>

[04:02:01.0000] <hallvors>
if it's not about compat , what would stop us from killing it?

[04:02:12.0000] <annevk>
I don't think we should have such arbitrary differences between <img> and XHR

[04:02:20.0000] <hallvors>
non-violence preferences at the W3C?

[04:02:22.0000] <hallvors>
:)

[04:02:41.0000] <hallvors>
I think IMG and XHR are pretty different

[04:02:50.0000] <annevk>
not fetch-wise

[04:03:09.0000] <annevk>
that's the whole point of fetch, to look at these features together

[04:03:22.0000] <hallvors>
if fetch has impact on UI, it needs to consider what good UI is

[04:03:32.0000] <annevk>
and not make exceptions because the author of API Y thinks he knows better than the author of API Z

[04:03:40.0000] <hallvors>
this is probably the only place Fetch requires stuff from the UI

[04:03:48.0000] <annevk>
there's two places

[04:03:54.0000] <annevk>
HTTP auth, and HTTP proxy auth

[04:04:06.0000] <annevk>
and both are because of HTTP being silly

[04:04:10.0000] <annevk>
and both are legacy

[04:04:37.0000] <annevk>
and both should not be on/off on a per API basis I think without some proper consideration

[04:04:52.0000] <annevk>
(and in fact, proxy auth can prolly be never off)

[04:04:53.0000] <hallvors>
IMO it would make it a lot easier to have good UI if we say that only a top-level URL loaded in a window can trigger auth prompts

[04:05:18.0000] <annevk>
yes, but legacy

[04:05:21.0000] <hallvors>
(proxy auth is a bit different.. needs to happen on first request whatever that is)

[04:05:45.0000] <hallvors>
legacy / compat might require supporting HTTP auth also for main URL in a frame/iframe

[04:06:14.0000] <hallvors>
(and of course *sending* credentials for IMG et all if within a realm with known credentials)

[04:06:41.0000] <hallvors>
but I'm pretty sure no compat considerations force us to support prompting for IMG

[04:06:41.0000] <annevk>
I've encountered cases where the <img> would be behind credentials and the main document would not be

[04:06:52.0000] <hallvors>
really?

[04:07:00.0000] <annevk>
yeah, W3C has had stuff like that

[04:07:12.0000] <annevk>
prolly as legacy as their Overview.html stuff, but still

[04:07:13.0000] <hallvors>
I've seen bug reports for Opera because it prompted for inline resources and other browsers didn't

[04:07:26.0000] <hallvors>
we can ignore the W3C

[04:07:31.0000] <annevk>
oh no

[04:07:34.0000] <annevk>
all browsers prompt: http://dump.testsuite.org/xhr/auth/

[04:07:40.0000] <hallvors>
it's not the real world :-p

[04:08:07.0000] <hallvors>
weird.. I have certainly seen cases where Opera popped up unexpected prompts and others didn't

[04:10:59.0000] <annevk>
nice to have someone else care about fetch for a couple of hours though

[04:11:14.0000] <annevk>
it's been lonely

[04:13:04.0000] <Ms2ger>
/me sends annevk some beer

[04:13:27.0000] <annevk>
Ms2ger: heh, thanks, but we've got a full fridge of that, no locks

[04:15:44.0000] <jgraham>
puiblic-script-cood needs a policy that discourages +1 type messages

[04:16:42.0000] <jgraham>
*public-script-coord

[04:17:00.0000] <jgraham>
At least I didn't call it public-script-cod-piece

[04:17:06.0000] <jgraham>
*pubic

[04:17:07.0000] <hallvors>
argh. can't find the bug(s) I remember

[04:17:15.0000] <jgraham>
Fuck, now I typod the typo

[04:17:27.0000] <hallvors>
maybe it was just server side sniffing..? :-(

[04:17:50.0000] <hallvors>
it's hard to make tpyos deliberatley

[04:18:06.0000] <Ms2ger>
hallvors, server side sniffing? Surely that would never happen to Opera

[04:18:32.0000] <jgraham>
Anyway, to recap, messages like "I strongly [dis]agree with X" or "±1" should be considered off topic and subject to censure.

[04:19:06.0000] <Ms2ger>
Objection!

[04:20:12.0000] <hallvors>
Ms2ger: I actually expected this to get retweeted more: https://twitter.com/hallvord/status/327322391049019394 :-p

[04:20:28.0000] <Ms2ger>
/me looks at public-script-coord

[04:20:31.0000] <Ms2ger>
Yeah, no

[04:21:34.0000] <Ms2ger>
Looks like all the useful threads there are started by bz

[04:22:09.0000] <hallvors>
Annevk: great if you tweet and E-mail trying to gather some feedback..

[04:24:03.0000] <jgraham>
http://www.w3.org/2007/06/PWET-statement-of-principles.html hahaha

[04:24:17.0000] <jgraham>
"As of 2012, this DOCUMENT IS OBSOLETE, PLEASE SEE OUR NEW CODE (member-only during development, public eventually)"

[04:26:02.0000] <Ms2ger>
I guess (most of) the W3C does public things like Google does open source

[04:47:00.0000] <zewt>
Ms2ger: as a PR stunt, with as many roadblocks to prevent people from annoyingly actually using them?

[04:47:14.0000] <Ms2ger>
Sounds right

[04:47:48.0000] <zewt>
<- has had a fix for a really annoying bluetooth stack bug in android sitting in a local repo somewhere since like 2.1, way too hard to try to push it upstream

[05:25:20.0000] <annevk>
hallvors: oh, I think I'm convinced

[05:25:28.0000] <annevk>
hallvors: but I guess I can email a summary

[05:26:07.0000] <hallvors>
OK. Honestly, I'm not sure what I convinced you of right now :)

[05:26:47.0000] <hallvors>
so if you send out a summary I'll have to read it :-D

[05:28:25.0000] <annevk>
hallvors: well with withCredentials being for cookies, and not using the "authentication entry" or URL credentials for CORS

[05:28:41.0000] <hallvors>
OK :-)

[05:30:10.0000] <hallvors>
darobin: w3c-test.org runs PHP as an Apache 2.0 Filter rather than a Handler

[05:30:27.0000] <hallvors>
maybe there is a bug in PHP's Filter setup?

[05:30:36.0000] <darobin>
hallvors: you're debugging that with your l33t powers?

[05:30:57.0000] <darobin>
mmmm, actually that would likely make sense

[05:31:11.0000] <hallvors>
nah, just committed a phpinfo() file to my pull request ;-)

[05:31:20.0000] <darobin>
lol

[05:31:30.0000] <hallvors>
http://w3c-test.org/web-platform-tests/submissions/103/XMLHttpRequest/resources/info.php

[05:33:49.0000] <darobin>
oooh, great, it has SOAP enabled!

[05:43:01.0000] <annevk>
so I guess some setting in http://httpd.apache.org/docs/current/filter.html must be wrong

[05:57:21.0000] <annevk>
hallvors: email sent

[05:59:40.0000] <annevk>
hallvors: tweet tweeted

[05:59:53.0000] <annevk>
there's got to be a better way to say that

[06:00:09.0000] <Ms2ger>
twit twatted

[06:01:15.0000] <zcorpan>
SteveF: sorry to wontfix your bugs, but really, the focus of html-differences is "differences from html4", not "differences between whatwg and w3c"

[06:02:03.0000] <SteveF>
zcorpan: no problem

[06:02:52.0000] <annevk>
+1 to keeping it focused

[06:04:24.0000] <annevk>
hmm

[06:04:26.0000] <annevk>
blob URLs

[06:04:48.0000] <zcorpan>
(listing all differences between whatwg and w3c would be quite useful but should be a separate document)

[06:05:02.0000] <zewt>
annevk: i'm ... trying, heh

[06:05:03.0000] <annevk>
yeah, I think SteveF is actually working on that

[06:05:17.0000] <SteveF>
yes I am

[06:05:22.0000] <zcorpan>
nice

[06:06:31.0000] <annevk>
zewt: I dread even opening that thread, but it's one of the last ones I haven't...

[06:07:36.0000] <zewt>
it's just rehashing the same stuff again

[06:09:20.0000] <zcorpan>
heh, consensus by general not caring :-)

[06:21:25.0000] <hallvors>
annevk: "For CORS, we'd return to the caller right there" - what did you mean by this? It sounds like we basically would discard user/pass from open() or URL.

[06:22:19.0000] <annevk>
hallvors: you don't discard them necessarily, since you'd first do a challenge request and that'll return something and if that's a 401 you just tell the caller that and you never end up using user/pass

[06:22:44.0000] <annevk>
hallvors: it comes down to the same thing though

[06:23:00.0000] <hallvors>
But then there is no point in having user/pass arguments in the open() method??

[06:24:04.0000] <hallvors>
/me this language is too hard, wants the W3C to move towards consensus by dancing

[06:24:28.0000] <annevk>
hallvors: right, for CORS there wouldn't be

[06:25:43.0000] <annevk>
hallvors: the only other thing we'd need I guess is a flag in XHR that'd allow you to request that kind of behavior for normal requests too so you don't get a prompt

[06:27:24.0000] <hallvors>
So you want the only way to do HTTP auth for CORS requests to be to roll your own Authorization header?

[06:30:57.0000] <annevk>
yes

[06:31:43.0000] <annevk>
I believe that's currently the case too, in implementations

[06:32:32.0000] <hallvors>
It's a surprising limitation to authors.

[06:32:52.0000] <annevk>
zewt: so they met for x hours and still haven't defined dereferencing? *sigh*

[06:33:59.0000] <hallvors>
at least I think it will cause questions like "why didn't I get access to that CORS-enabled file by passing the right user name and password to open()?"

[06:34:18.0000] <annevk>
zewt: I think part of the question is "the browser not doing anything with it"

[06:34:24.0000] <annevk>
zewt: that understanding might be flawed

[06:34:59.0000] <annevk>
hallvors: haven't seen them thus far

[06:48:47.0000] <hallvors>
annevk: CORS uptake is good but it's not ubiquitous yet

[06:53:13.0000] <annevk>
hallvors: yeah we'll have to see

[06:56:40.0000] <hallvors>
I would still prefer to use user/pass in CORS requests if the server accepts Authorization headers. Seems to be more in line with what authors would expect. As you wanted to treat XHR and <img> the same way, I think doing this would also support your use case with <img> from a different HTTP - auth - protected origin better, no?

[06:58:18.0000] <annevk>
<img> has a different path

[06:58:28.0000] <annevk>
tainted cross-origin, XHR cannot get there

[06:58:37.0000] <annevk>
tainted cross-origin would still do Auth

[06:59:11.0000] <annevk>
also, what you're saying does not quite work that way, as user/pass would require both preflight and 401, that seems like a hell of a lot of complexity for a marginal case

[07:01:05.0000] <hallvors>
it would be nice to remove that challenge-response mode too

[07:01:20.0000] <annevk>
euh

[07:01:26.0000] <annevk>
that's part of the protocol

[07:01:30.0000] <hallvors>
and say that if JS provides user/pass we just send it :-p

[07:02:56.0000] <hallvors>
anyway, at the place in the algorithm we're discussing both preflight and 401 are already done

[07:03:41.0000] <hallvors>
so the only question is: re-try the request with an Authorization: based on the user/pass the script already gave us.. or give up and return the 401 response to the script?

[07:04:13.0000] <hallvors>
The complexity is already in the protocol

[07:04:54.0000] <hallvors>
We're just trying to decide if we're going to push some of the handling of that complexity over to the JS author.

[07:14:59.0000] <hallvors>
(well, both preflight and 401 are done if we ensure we define this as a request that requires a preflight )

[07:31:56.0000] <annevk>
right, the preflight is not done at all

[07:33:03.0000] <annevk>
it sounds super tricky

[07:33:28.0000] <annevk>
try to explain it as a set of modifications to Fetch without hurting yourself in the process

[07:33:44.0000] <annevk>
(sorry for slow reply, had a meeting)

[07:35:50.0000] <Ms2ger>
Damn meetings :)

[07:39:10.0000] <annevk>
http://w3cmemes.tumblr.com/post/42434634433/we-welcome-anne-back-to-full-time-wage-slavery

[08:14:48.0000] <zcorpan>
having looked through the commits for 5.1 for the past 8 months or so, the only things worth noting in html-differences were removal of hgroup and unforking of stuff

[08:22:30.0000] <dglazkov>
good morning, Whatwg!

[12:13:24.0000] <MikeSmith>
tantek: I added rel=discussion and rel=issues to the validator code and pushed it to the W3C validator

[12:18:48.0000] <tantek>
nice. thanks MikeSmith.

[13:13:02.0000] <Hixie>
as a head's up, i'm gonna be afk most of this month

[13:13:08.0000] <Hixie>
heads' up?

[13:13:16.0000] <Hixie>
heads-up?

[13:13:31.0000] <Hixie>
heads up?

[13:23:45.0000] <TabAtkins>
heads-up

[13:30:25.0000] <GPHemsley>
indeed, two words for the verb, one word (or hyphenated) for the noun: log in vs. login, set up vs. set up, etc.

[13:30:41.0000] <GPHemsley>
although I suppose "heads up" isn't a verb in the traditional sense

[13:30:50.0000] <GPHemsley>
it's more of a command

[13:31:11.0000] <GPHemsley>
as in "put your heads up"

[13:31:15.0000] <GPHemsley>
but anyway

[13:31:17.0000] <GPHemsley>
the point is the same

[13:31:19.0000] <GPHemsley>
:)

[13:41:07.0000] <nimbu>
TabAtkins: if you are celebrating formal friday i have a question for you

[13:41:43.0000] <nimbu>
TabAtkins: has the idea of using only constants been considered as a step 1 of custom properties.

[13:44:20.0000] <TabAtkins>
What do you mean by that?  Do you mean that the variables can't be mutated by JS?  Or do you mean that they're global rather than tree-scoped, so there's no cascade?

[13:44:58.0000] <nimbu>
TabAtkins: i meant the second

[13:45:10.0000] <nimbu>
TabAtkins: but i am guessing the first is true for custom properties as they stand no?

[13:45:29.0000] <TabAtkins>
Custom properties are just properties, so they can be mutated by JS like any other property, yes.

[13:45:55.0000] <nimbu>
right.

[13:46:25.0000] <TabAtkins>
The second was of course explored, many times by many people, both inside and outside the CSSWG.  It wasn't until I made tree-scoped variables that the WG finally decided they were useful enough to accept.

[13:46:44.0000] <nimbu>
:||||||

[13:46:46.0000] <nimbu>
okay

[13:46:58.0000] <nimbu>
i wil dig thro the emails

[13:48:06.0000] <TabAtkins>
See: every single variables proposal *ever* before I finally got mine through.

[13:48:14.0000] <nimbu>
ahahha

[13:48:15.0000] <nimbu>
:(

[13:48:20.0000] <TabAtkins>
Why?

[13:49:52.0000] <nimbu>
nothingggg

[13:49:55.0000] <nimbu>
i am just looking

[14:53:27.0000] <Hixie>
abarth: ping https://www.w3.org/Bugs/Public/show_bug.cgi?id=19662#c7


2013-05-04
[18:29:07.0000] <zewt>
every reply i start to write in the zip thread i end up throwing away

[18:29:28.0000] <zewt>
there are so many questions everything i try to comment on i end up going "but there are ten bigger questions than this"

[18:30:04.0000] <zewt>
like, if you have 50 images and you want to deliver them more efficiently, is zipping them really the right fix? ... and is that the problem that's trying to be solved? i don't even know where to start

[00:42:06.0000] <whatwg010>
hi

[00:42:47.0000] <whatwg010>
is there a way to access single letters in CSS?

[00:43:04.0000] <Ms2ger>
No

[00:43:43.0000] <whatwg010>
just no or not yet?

[00:44:37.0000] <Ms2ger>
Definitely not yet; I don't have a crystal ball :)

[00:44:53.0000] <whatwg010>
:-)

[00:44:54.0000] <Ms2ger>
But I don't think there's been talk about it recently

[00:45:24.0000] <whatwg010>
would be nice too add like a foreach(character) or something

[00:45:59.0000] <whatwg010>
so you can access the single letter in CSS without creating tons o tags in JS :-/

[00:49:23.0000] <whatwg010>
bye!

[01:18:23.0000] <Ms2ger>
arv, are you guys still planning to try making NodeList [ArrayClass]?

[01:38:45.0000] <ambv>
gsnedders: Do you plan to release html5lib 1.0 anytime soon?

[01:39:17.0000] <ambv>
what do you need to make that happen?

[04:26:14.0000] <gsnedders>
ambv: https://github.com/html5lib/html5lib-python/issues?milestone=1&page=1&state=open

[04:26:30.0000] <gsnedders>
ambv: plus https://sourceforge.net/p/pypi/support-requests/259/ because otherwise we can't upload to PyPi…

[04:37:59.0000] <ambv>
gsnedders: need a hand?

[04:39:13.0000] <gsnedders>
ambv: Well, I sure won't complain. :)

[04:40:02.0000] <gsnedders>
ambv: Just assign something to you when you start working on it to avoid duplicating work, but basically just go ahead.

[04:40:48.0000] <ambv>
are all open issues from Google Code moved to GitHub already?

[04:41:13.0000] <gsnedders>
No, but what's left is mostly stuff with patches which need committed into git and sent as pull requests, which is effort. :)

[04:42:16.0000] <gsnedders>
ambv: Anything without a patch is either new or somewhat ambiguous.

[04:42:30.0000] <gsnedders>
ambv: Like, is it just a support request, eg.

[04:42:30.0000] <ambv>
OK, so basically 1.0 is those four issues

[04:42:38.0000] <gsnedders>
Yeah, I think so.

[04:43:20.0000] <ambv>
I'm writing a book on Web scraping with Python (focused on 3.3, with support for 2.7) so naturally I need html5lib 1.0 up ASAP

[04:44:49.0000] <ambv>
I'm not sure if https://github.com/html5lib/html5lib-python/pull/34 is the right approach to solving #33

[04:46:27.0000] <Ms2ger>
/me wonders what annevk did that resulted into his latest tweet

[04:47:11.0000] <gsnedders>
ambv: It is.

[04:47:36.0000] <gsnedders>
ambv: We handle U+0000 in the states, it just we'll currently read too far and consume it as data accidentally.

[04:48:05.0000] <gsnedders>
ambv: I'll merge it shortly and change the commit message to something shorter and more readable.

[04:58:55.0000] <ambv>
gsnedders: I'll prepare a PR for https://github.com/html5lib/html5lib-python/issues/9 shortly

[04:59:02.0000] <ambv>
until then, BRB

[05:01:57.0000] <annevk>
zcorpan: https://github.com/whatwg/html-differences/commit/3b8edc621b9e6c73f9598b79de530d52bc018805 seems wrong; the actual list of changes within any single changelog was in chronological order, at least when I edited it

[05:05:52.0000] <ambv>
gsnedders: I cannot assign issues to myself unless I'm a project member

[05:06:06.0000] <gsnedders>
ambv: Well, that sucks. :(

[05:06:47.0000] <gsnedders>
ambv: What's your username?

[05:06:54.0000] <ambv>
ambv

[05:07:19.0000] <gsnedders>
ambv: Can you now?

[05:08:51.0000] <ambv>
gsnedders: no, but now *you* can assign me.

[05:08:53.0000] <ambv>
:)

[05:09:42.0000] <gsnedders>
/me wonders what the logic is here

[05:09:53.0000] <gsnedders>
ambv: And I could before :)

[05:10:06.0000] <gsnedders>
(I can assign any issue to anyone)

[05:10:13.0000] <ambv>
I'm not sure, I didn't have the "Assigned to you" list on the repo before. Now I do.

[05:10:55.0000] <gsnedders>
ambv: Oh well, assigned now.

[05:16:33.0000] <ambv>
gsnedders: what's the idea behind keeping tests as a submodule?

[05:17:08.0000] <gsnedders>
ambv: They're shared by a around half a dozen implementations of the parser, most of which are based in git repo.

[05:17:24.0000] <gsnedders>
*repos

[05:18:45.0000] <ambv>
ah, I see, the repo keeps test files, not test cases. good idea, indeed

[05:19:10.0000] <gsnedders>
ambv: Right, each impl has its own harness for the tests, but the data itself is external.

[05:21:33.0000] <ambv>
gsnedders: FWIW Kenneth Reitz's requests library uses charade, a six-based fork of chardet -> https://github.com/sigmavirus24/charade

[05:21:42.0000] <ambv>
html5lib could do the same

[05:22:22.0000] <gsnedders>
ambv: Ah, awesome.

[05:22:30.0000] <annevk>
hmmm

[05:22:41.0000] <annevk>
shouldn't we use something that implements http://encoding.spec.whatwg.org/ ?

[05:22:55.0000] <annevk>
Gecko at least is moving away from sniffing as much as possible

[05:23:11.0000] <annevk>
there's numerous problems with "universal" detection

[05:23:39.0000] <ambv>
sure, this is a heuristic which often fails. I consider it a matter of last resort

[05:24:39.0000] <gsnedders>
annevk: For now it's just used as a worse-case fallback, where we have no externally provided data nor can we tell from BOM/pre-parser.

[05:36:05.0000] <ambv>
gsnedders: do you maintain a changelog?

[05:36:46.0000] <gsnedders>
ambv: No.

[05:37:00.0000] <gsnedders>
ambv: It, uh, would be nice. Probably once 1.0 is out.

[05:37:18.0000] <gsnedders>
ambv: Though my personal attitude is that the git history should be clean enough to be usable as a changelog.

[05:37:32.0000] <ambv>
well, it's a kludge at best

[05:37:55.0000] <ambv>
I find it very reassuring if the PyPI page for a library has a changelog right there

[05:38:06.0000] <ambv>
or at least it's listed as a link to the docs

[05:38:18.0000] <gsnedders>
Whereas we scarcely have docs…

[05:38:42.0000] <gsnedders>
Basically in the short term releasing something that works on Python 3 and is generally less buggy than are ancient release is the top priority.

[05:39:17.0000] <gsnedders>
Having the git shortlog the same as a changelog isn't ridiculous IMO. Obviously with API incompatible changes you want more documentation, but I think in general it's fine.

[05:43:58.0000] <ambv>
sure thing

[05:44:21.0000] <ambv>
if the shortlog is indeed nice, creating a changelog shouldn't be that hard later on

[05:44:54.0000] <gsnedders>
This is why I tend push people to write nice commit messages. And often don't merge on GitHub bug rather sqash everything down.

[05:45:58.0000] <ambv>
gsnedders: so you'd rather rebase on a per-issue basis?

[05:46:25.0000] <gsnedders>
ambv: Basically yeah.

[05:46:39.0000] <gsnedders>
ambv: Unless it obviously makes sense as multiple commits, that is

[05:52:48.0000] <ambv>
gsnedders: would you mind me adding tox.ini to make it easier for contributors to locally test on all required releases?

[05:54:12.0000] <gsnedders>
tox.ini?

[05:56:00.0000] <gsnedders>
Oh, that tox.

[05:57:04.0000] <ambv>
well, I'm moving stuff around a bit anyway so I'll put a PR up in a minute, you'll decide whether you like what you see

[05:57:31.0000] <gsnedders>
In principle I'm in favour.

[06:01:39.0000] <gsnedders>
ambv: FWIW, the short version of what's currently happening is once we can upload builds to PyPi 1.0b1 will ship pretty much immediately, and then 1.0 will be finished.

[06:02:16.0000] <ambv>
well, I bumped Richard Jones to help with the PyPI credentials issue

[06:05:41.0000] <ambv>
is the optional "datrie" package comment in README.rst still up-to-date? I see datrie is now bundled with html5lib

[06:05:49.0000] <gsnedders>
It isn't.

[06:06:03.0000] <gsnedders>
datrie.py is just a wrapper to provide a consistent API

[06:06:10.0000] <ambv>
ah, nevermind, now I see

[06:22:02.0000] <gsnedders>
(I'll likely fork that folder off to be an external lib)

[06:46:47.0000] <gsnedders>
ambv: Am heading off, will be back in a few hours.

[06:47:03.0000] <ambv>
haha, I'm just closing up the PR

[06:47:14.0000] <ambv>
but won't keep you waiting

[06:47:26.0000] <ambv>
see you around, the PR will be waiting for you once you get back

[06:47:28.0000] <ambv>
:)

[06:54:51.0000] <ambv>
gsnedders: https://github.com/html5lib/html5lib-python/pull/40

[08:41:24.0000] <arv>
Ms2ger: Yeah, still want to make NodeList an [ArrayClass]. This time behind a flag. I don't know when it will happen.

[08:42:00.0000] <Ms2ger>
arv, okay. Is there a bug I can stalk?

[08:42:22.0000] <arv>
Ms2ger: Let me check and file a new one if needed

[09:24:22.0000] <arv>
Ms2ger: http://crbug.com/229398

[09:24:41.0000] <Ms2ger>
arv, thanks

[11:10:32.0000] <annevk>
https://www.w3.org/Bugs/Public/show_bug.cgi?id=21566#c10 Charles is going to fork the URL Standard? That'll be fun

[11:22:18.0000] <ambv>
gsnedders: Can I add a cumulative commit fixing the review fixes or do you want to rebase every single one? ;)

[11:22:35.0000] <ambv>
s/fixing the review fixes/applying the review fixes/

[11:31:17.0000] <Ms2ger>
He'll find out soon enough that he'd need to do actual work for that

[11:41:28.0000] <gsnedders>
ambv: I'd rather be able to sqash it down to the five logical commits you have

[11:41:30.0000] <annevk>
I'm for all other people doing that, but Charles didn't even manage to finish Progress Events...

[11:42:26.0000] <ambv>
gsnedders: should I do that or will you? I'm not a rebase expert

[11:45:36.0000] <gsnedders>
ambv: If you use `git commit --fixup=[commit id]` when fixing up everything, that'll do fine.

[11:45:46.0000] <gsnedders>
ambv: I'm happy to do everything else. :)

[11:47:16.0000] <gsnedders>
ambv: (using --fixup means I can just run `git rebase --autosquash` and it'll do it all by magic)

[11:47:37.0000] <gsnedders>
ambv: But for review purposes it's easier to review the fixes for the issues as separate commits.

[11:51:41.0000] <ambv>
OK, so I will use --fixup, sounds good to me.

[11:52:12.0000] <ambv>
gsnedders: What advantage does using a separate Opera Critic give you?

[11:52:33.0000] <ambv>
/me is away for 60 minutes, gotta put my 4 year old to sleep

[11:54:01.0000] <gsnedders>
ambv: It helps with reviews with lots of commits, and it provides a clear list of outstanding issues on the review (whereas on GitHub would have to check every single commit to make sure there were no outstanding comments), but I'm not convinced for such a relatively small project it makes sense really, given most reviews are small.

[11:55:18.0000] <gsnedders>
ambv: html5lib is in the awkward state of being big enough I can see its value sometimes, but small enough that I often can't. :)

[12:00:16.0000] <ambv>
especially that there are negative sides to using a separate tool as well

[12:01:21.0000] <gsnedders>
Well, without the negatives I would always be in favour :)

[12:34:15.0000] <ambv>
gsnedders: bikeshedding time! does that sound good to you? ->

[12:34:17.0000] <ambv>
``charade`` can be used as a fallback when character encoding cannot be determined. Its older brother ``chardet`` works as well on Python 2.

[12:35:07.0000] <ambv>
(with the message I want to emphasize that charade is the better choice for both Python 2 and Python 3, as charade is actively supported by the requests guys)

[12:35:51.0000] <gsnedders>
ambv: I dislike "its older brother" in the documentation, seems too informal. How about, "…determined; ``chardet``, from which it was forked, can also be used on Python 2."

[12:36:11.0000] <ambv>
Perfect.

[12:38:14.0000] <ambv>
gsnedders: BTW, there's a sentence that says "as well as Python 3.0 and above are supported". technically that's 3.2 and above, right?

[12:41:08.0000] <gsnedders>
ambv: Officially, for now, we support 3.0/3.1. It's untested on Travis because they don't support 3.0/3.1

[12:41:56.0000] <ambv>
gsnedders: even python-core doesn't support 3.0 and 3.1, and actively discourages any usage of 3.0 at that.

[12:42:47.0000] <ambv>
so I recommend discussing that with jgraham, doesn't really make sense to add yourself the maintenance burden.

[12:43:08.0000] <gsnedders>
ambv: There was a discussion before, to which the answer was neither of us really care. :)

[12:44:15.0000] <ambv>
haha, IMO it doesn't make sense to support 3.0 and 3.1 *unless you really care*.

[12:44:22.0000] <ambv>
same as 2.5 and below

[12:44:45.0000] <ambv>
but that's minor, I'll leave it as is - for now

[12:45:23.0000] <gsnedders>
I think practically what will happen is we'll support 3.2 and above officially, and practically try and keep Python 3.1 supported as long as it's supported in Debian stable/oldstable, likely for another year.

[12:47:09.0000] <Ms2ger>
Can't debian just use 2.3 or whatever they're on?

[12:47:30.0000] <gsnedders>
2.6

[12:48:01.0000] <gsnedders>
ambv: Basically, there's nothing in later 3 verisons also supported in 2.6 that right now gives much gain to us

[13:04:28.0000] <ambv>
woohoo! Now I can start fixing the actual bug

[13:22:28.0000] <ambv>
gsnedders: hm. some test cases are plain old unittest.TestCase subclasses. others, like test_tokenizer or test_sanitizer, are somewhat bizarre. tell me all about them ;)

[13:23:15.0000] <gsnedders>
ambv: About the mix, or how test_tokenizer and the like work?

[13:23:39.0000] <ambv>
both, but first how they work because I have to add a case for the failing sanitizer parser= arg

[13:23:43.0000] <ambv>
and I'm confused

[13:26:34.0000] <gsnedders>
ambv: The mix is because we used to use unittest for tests. Everything should just be moved over to using plain asserts for nose.

[13:28:47.0000] <gsnedders>
ambv: test_sanitzer has common test code for almost everything, so just gives nose a bunch of tuples of the test function and various different arguments to run. For parser= I guess you need a separate test (test_parser, I guess).

[13:29:20.0000] <gsnedders>
ambv: test_sanitizer looks quite a mess, tbh :)

[13:30:55.0000] <gsnedders>
ambv: Stuff like test_tokenizer and test_parser are fairly complicated, overly messy harnesses for the external test data. But they work so there's no real motivation to tidy them. :)

[13:31:57.0000] <ambv>
I mean, if those two modules are there to convince me that nose is better than plain old unittest, then I fail to see how ;)

[13:32:43.0000] <ambv>
possibly a failure condition returns a cleaner error message, is that so?

[13:33:11.0000] <gsnedders>
ambv: Well, if you look at how test_tokenizer used to work back in history, it basically had to create an empty class then call setattr and create dummy methods for each of several thousand tests.

[13:33:34.0000] <gsnedders>
ambv: tbh, I haven't looked at unittest since unittest2 happened so I don't know what it's like now.

[13:34:16.0000] <gsnedders>
ambv: But stuff like nose's coverage support, escaping to pdb on failure/error all seems nicer than unittest

[13:35:47.0000] <ambv>
does nose rerun or redefine asserts like py.test so it knows how to report a failure there?

[13:35:58.0000] <gsnedders>
Yes.

[13:36:07.0000] <gsnedders>
If I understand correctly.

[13:37:06.0000] <gsnedders>
ambv: Well, it does if run with -d

[13:37:35.0000] <ambv>
OK, I checked out the test generator documentation

[14:14:36.0000] <ambv>
gsnedders: I think there is nothing to fix for #9 (or #183 and #184 on code.google.com). The code path has been fixed by jgraham in f50cb082

[14:15:23.0000] <ambv>
there is a bogus comment on #184 that suggests 0.95 was broken but I guess the user had a custom tokenizer which didn't accept the parser keyword argument

[14:15:50.0000] <gsnedders>
ambv: Well, that simplifies life. :)

[14:16:05.0000] <ambv>
I'll comment on the issue and we can close it.

[14:19:21.0000] <ambv>
GitHub is hilarious. I'm assigned to the issue but I cannot close it on my own.

[14:19:58.0000] <gsnedders>
And nobody apart from those with push permissions can assign issues to themselves, even when they're part of the project!

[14:20:07.0000] <gsnedders>
Yeah, GitHub has some interesting permissions choices…

[14:22:16.0000] <ambv>
are you sure https://github.com/html5lib/html5lib-python/issues/37 is required for 1.0?

[14:22:59.0000] <ambv>
seems like a new feature for me, and a tricky one at that

[14:23:05.0000] <gsnedders>
It's not really, it's just relatively small.

[14:32:01.0000] <gsnedders>
ambv: And in the past ten minutes I've implemented it :)

[14:32:25.0000] <ambv>
gsnedders: how did you overcome arbitrary order in the tree builders?

[14:32:59.0000] <gsnedders>
ambv: I didn't.

[14:33:26.0000] <gsnedders>
ambv: As I hinted at in the comment, that's infeasible. I was treating the issue as a case of reordering even when the order *was* meaningful.

[14:34:48.0000] <ambv>
Okay, got it.

[14:39:16.0000] <gsnedders>
/me realizes OrderedDict isn't in 2.6, blarf!

[14:42:19.0000] <ambv>
yeah, requests have it in .compat

[14:42:35.0000] <ambv>
gsnedders: would it make sense to add a test for #33? http://www.bpaste.net/show/o0xqN6TRfFG4qLE56lDA/

[14:43:25.0000] <gsnedders>
ambv: It should just be added to the testdata, like https://github.com/html5lib/html5lib-tests/pull/4

[14:44:03.0000] <gsnedders>
ambv: But I'm not entirely sure whether we're using CTR or RTC for tests, thus it hasn't been merged yet. :)

[14:44:16.0000] <gsnedders>
(commit-then-review or review-then-commit, that is)

[14:44:17.0000] <ambv>
I see.

[14:44:28.0000] <ambv>
yeah, got it.

[14:44:36.0000] <gsnedders>
Wait, that's the wrong case.

[14:44:48.0000] <gsnedders>
I thought I had added a test for that. But yeah, it should go in testdata.

[14:44:55.0000] <gsnedders>
Probably to the tokenizer tests.

[14:48:58.0000] <gsnedders>
ambv: https://github.com/gsnedders/html5lib-python/commit/e37cac979534427e2e60239019ad06dda90f18a4 is the entire fix for #37, thus why I think we can get it in in time for 1.0 :)

[14:49:57.0000] <ambv>
sure, are you going to add ordereddict as a dependency for 2.6?

[14:50:05.0000] <ambv>
seems like the simplest fix

[15:07:58.0000] <gsnedders>
ambv: Yes, once I think of a sane way to include it/document it. Do I have a 2.6-test specific requirements file? Seems ugly.

[15:09:19.0000] <ambv>
ignore the fact that it's tests and simply add ordereddict to setup.py for 2.6. this will require moving the install_requires list out of setup() and to build it dynamically

[15:10:14.0000] <gsnedders>
But it's only required for the testsuite, so that seems inappropriate.

[15:11:08.0000] <ambv>
if you distribute it in the tarball then it's fine. if not, then just wrap the import error to return a meaningful error message

[15:13:00.0000] <ambv>
adding it for Tox is trivial, for Travis just add it to requirements-test.txt

[15:13:13.0000] <ambv>
for Python > 2.6 it's completely useless but it installs alright, harmless

[15:15:29.0000] <gsnedders>
Just a waste of a bit of time, really :)

[15:15:39.0000] <gsnedders>
But, well, small enough that's probably not an issue.

[15:17:24.0000] <ambv>
gsnedders: on an unrelated note, where to put the test for #6?

[15:17:47.0000] <ambv>
I *think* I fixed the issue, want to add the test before PRing

[15:19:02.0000] <gsnedders>
parser2.py I guess?

[15:19:07.0000] <gsnedders>
I dunno, really. :)

[15:20:10.0000] <ambv>
parser2 it is

[15:22:15.0000] <gsnedders>
ambv: For tox, I don't need a separate commands dfn under [testenv:py26], do I?

[15:22:57.0000] <ambv>
gsnedders: no, only specify "basepython = python2.6"

[15:23:07.0000] <ambv>
and all deps, it's not cumulative

[15:27:54.0000] <gsnedders>
ambv: Does #41 look right to you?

[15:30:44.0000] <ambv>
haha, I was about to tell

[15:30:53.0000] <ambv>
"apart from the empty line at the end of tox.ini…"

[15:30:56.0000] <ambv>
:)

[15:32:07.0000] <ambv>
gsnedders: what if people depended on the sorting behaviour that you now remove?

[15:33:03.0000] <gsnedders>
ambv: Then oh well. It makes no change to the semantics of the output. And we've frequently changed behaviour in edge-cases in pre-1.0 releases.

[15:34:20.0000] <gsnedders>
ambv: Like, the only reason it breaks the tests is because we do a byte-for-byte comparison and not the semantics of the output.

[15:35:15.0000] <ambv>
I'm asking more about: how does a person like that restore the previous behaviour?

[15:36:25.0000] <ambv>
for (attr_namespace, attr_name), attr_value in self.reorder_attributes(token["data"].items()):

[15:36:53.0000] <gsnedders>
ambv: What we should probably do, ideally, is add a new filter that reorders them and not do it in JsonWalker.

[15:37:02.0000] <gsnedders>
ambv: Then anyone can use the filter.

[15:37:24.0000] <ambv>
I have to check out filters

[15:38:09.0000] <ambv>
but JsonWalker? Hm?

[15:38:55.0000] <gsnedders>
In test_serializer.py

[15:39:53.0000] <ambv>
ah, yes, we could reuse the functionality for tests if we added it, right.

[15:40:48.0000] <ambv>
filters mutate the tree after building it, do I get that right?

[15:41:16.0000] <ambv>
hm, my English sucks. "filters mutate the tree after it has been built, right?"

[15:42:08.0000] <ambv>
and a Filter sounds great, solves the issue and frees you from OrderedDict

[15:42:09.0000] <ambv>
:>

[15:42:49.0000] <gsnedders>
ambv: Some are designed to be used to process the tree as being built, intercepting tokens from the tokenizer before passing on to the treebuilder, and others while getting tokens from treewalker.

[15:42:53.0000] <gsnedders>
Kinda sucks.

[15:42:59.0000] <gsnedders>
ambv: Still need OrderedDict, though

[16:20:09.0000] <ambv>
gsnedders: more reviewing to do! https://github.com/html5lib/html5lib-python/pull/42


2013-05-05
[23:26:45.0000] <heycam>
/me should write a browser extension to prevent Cmd+R from doing anything if I've got the whatwg complete spec open

[23:42:17.0000] <Hixie>
heycam: your wish is my command

[23:42:48.0000] <heycam>
Hixie, :D

[04:50:36.0000] <gsnedders>
jgraham: You have something in the SourceForge PyPI issue.

[05:52:36.0000] <ambv>
gsnedders: oops, I broke Critic. Seems it can't handle commit --amend

[06:21:49.0000] <odinho>
ambv It can, but you need to tell it to get ready for a rebase.

[06:22:00.0000] <odinho>
It was made for rebasing. We do it all the time at Opera.

[06:26:02.0000] <gsnedders>
odinho: But you can only rewrite history that's already pushed, you can't push a rewrite otherwise

[06:26:47.0000] <gsnedders>
On the other hand, GitHub just loses all comments if you amend a commit, which isn't great. :P

[06:26:52.0000] <gsnedders>
jgraham: s quit [Ping timeout: 276 seconds]

[06:27:06.0000] <gsnedders>
jgraham: https://critic.hoppipolla.co.uk/r/100 is broken because of a non-ff commit, plz fix.

[06:44:21.0000] <jgraham>
Right, you *can* push a rebase, but you need to tell it that you are going to do that

[06:45:07.0000] <jgraham>
Which is harder to do if github is also involved, I guess

[06:47:25.0000] <jgraham>
Nice of sourceforge to send email

[06:47:41.0000] <jgraham>
/me isn't sure what the brokenness in that review is

[06:47:56.0000] <jgraham>
And I have to go rake up "grass"

[06:48:14.0000] <jgraham>
Where "grass" is actually distressingly lots of moss

[06:51:40.0000] <gsnedders>
jgraham: Non-fast-forward commit to tracking branch, hence it is no longer tracking.

[06:51:51.0000] <gsnedders>
jgraham: Or you mean at a lower level than that?

[06:52:30.0000] <gsnedders>
jgraham: http://stackoverflow.com/questions/16378996/python-nose-tests-from-generator-not-running-concurrently is relevant for html5lib

[06:52:35.0000] <gsnedders>
(FYI)

[08:03:51.0000] <ambv>
gsnedders: in other words, I should check whether tags are HTML or alien? HTMLSanitizerMixin has a acceptable_elements attribute which I could use for that. Seems like mixing concerns, though.

[12:22:48.0000] <gsnedders>
ambv: It should just be a case of outputting what is in the DOM, there shouldn't be any real magic needed?

[12:22:57.0000] <gsnedders>
Unless, of course, we build the DOM incorrectly. But I'd be surprised.

[12:25:50.0000] <ambv>
let me see

[12:37:59.0000] <ambv>
gsnedders: can you open treebuilders/dom.py so we can agree on what's the actual bug here?

[12:38:47.0000] <gsnedders>
ambv: Gimme ten minutes?

[12:38:57.0000] <ambv>
sure thing.

[13:07:43.0000] <gsnedders>
ambv: Right, okay.

[13:08:19.0000] <ambv>
in line 230 there's the `attributes` dict built

[13:08:59.0000] <ambv>
it's built from itemsNS which unfortunately returns [((None, 'lang'), 'en')]

[13:09:45.0000] <gsnedders>
/me wonders what this nsmap thing is

[13:09:54.0000] <ambv>
information is lost at that point and this is why there's the KeyError later on

[13:10:32.0000] <ambv>
because node.attributes.keys() returns "xml:lang" and not bare "lang"

[13:12:49.0000] <gsnedders>
Yay for relying on things that are totally non-standard.

[13:15:08.0000] <ambv>
basically the whole dom2sax will apply namespace declarations regardless of whether they're alien or pure HTML

[13:15:56.0000] <ambv>
and it does have a default namespace listed in the function definition which is "xml:"

[13:16:06.0000] <gsnedders>
Okay, I'm thinking we should do what I wanted to do for 1.1, and add a testadapters submodule that does magic~. Rewrite dom2sax as an operation going from a treewalker.

[13:16:20.0000] <gsnedders>
And then the existing dom2sax can handle this.

[13:17:05.0000] <gsnedders>
Or rather wrap this.

[13:18:21.0000] <ambv>
well, it's definitely good to fix it for 1.0 but this is a new feature so at that point I cannot independently help

[13:18:40.0000] <gsnedders>
Well, at the moment it's totally broken :)

[13:19:39.0000] <ambv>
why a submodule though?

[13:20:00.0000] <gsnedders>
The adapters used for testing the treewalkers (see test_treewalkers.py) should be moved there.

[13:20:27.0000] <ambv>
but you don't mean a git submodule?

[13:20:36.0000] <gsnedders>
A Python submodule.

[13:20:41.0000] <ambv>
yay for confusing terminology

[13:20:43.0000] <ambv>
haha

[13:20:45.0000] <gsnedders>
:)

[13:20:55.0000] <ambv>
OK, a Python module sounds great

[13:21:01.0000] <gsnedders>
Should I?

[13:21:26.0000] <ambv>
but

[13:21:52.0000] <ambv>
the module would need to be outside of the tests

[13:23:03.0000] <gsnedders>
Yes. But the treewalker tests already depend on the parser, so I'm not too bothered.

[13:23:34.0000] <ambv>
I'm more concerned that this is a non-trivial amount of work

[13:23:34.0000] <gsnedders>
It's a bit evil, because the adapters rely on the treewalkers whose tests rely on the adapters, but oh well.

[13:23:52.0000] <gsnedders>
Half an hour's work, I'd guess.

[13:24:15.0000] <ambv>
well if adapters will be outside of the tests, you'll need to document and test them too

[13:26:12.0000] <gsnedders>
Bah, it's not like dom2sax is documented now. :P

[13:26:22.0000] <gsnedders>
I'd only move dom2sax for 1.0, I expect.

[13:28:59.0000] <ambv>
so, what's the plan (e.g. what should I work on now)?

[13:30:51.0000] <gsnedders>
ambv: #16 is a simple copy/paste job from the spec, if you want.

[13:31:29.0000] <gsnedders>
ambv: Or you can make sure the docstrings are actually up to date.

[13:32:01.0000] <ambv>
OK, so I'll drop #6 for the time being

[13:32:03.0000] <gsnedders>
ambv: Or you can give an opinion of whether we should drop simpletree (i.e., our own custom tree format, which AFAIK nobody uses)

[13:32:19.0000] <ambv>
you might reuse test_treeadapters though

[13:32:26.0000] <gsnedders>
Indeed, I will.

[13:33:07.0000] <ambv>
I'll make a separate PR just for that then

[13:33:25.0000] <ambv>
this will make tests fail, though ;)

[13:34:05.0000] <gsnedders>
Nah, don't worry.

[13:34:10.0000] <gsnedders>
I'll just grab it from your repo. :)

[13:35:07.0000] <ambv>
okay

[14:25:42.0000] <ambv>
gsnedders: we should include SPEC.html in the repo

[14:26:01.0000] <gsnedders>
ambv: For what purpose?

[14:26:02.0000] <ambv>
so that a user can know at any point from what version the implementation was made

[14:26:15.0000] <ambv>
it's a living standard, last changes were put today

[14:26:32.0000] <gsnedders>
/me is dubious because of the different in size it'll make

[14:26:35.0000] <ambv>
copying and pasting paragraphs from the spec into source files isn't maintainable

[14:26:42.0000] <gsnedders>
I'd rather just document what SVN version we implemented.

[14:27:06.0000] <gsnedders>
(Size in terms of the size of the repo)

[14:27:07.0000] <ambv>
I wouldn't bundle the spec with the tarballs of course

[14:27:35.0000] <ambv>
as for the repo size, a couple of MBs here and there aren't that much of a difference nowadays, are they?

[14:27:42.0000] <ambv>
but the SVN revision is fine as well

[14:27:48.0000] <zewt>
what a waste of floppy disks

[14:28:07.0000] <gsnedders>
ambv: It's extra data to download when cloning the repo.

[14:28:57.0000] <ambv>
well git manages to compress those kinds of file pretty well while cloning

[14:29:12.0000] <ambv>
but as I said, SVN revision works for me too

[14:30:16.0000] <ambv>
HM!

[14:31:01.0000] <ambv>
http://svn.whatwg.org/webapps/complete.html is older than http://www.whatwg.org/specs/web-apps/current-work/

[14:32:23.0000] <Hixie>
oops

[14:33:07.0000] <Hixie>
fixed

[14:40:13.0000] <ambv>
Hixie: thanks!

[14:41:19.0000] <gsnedders>
There are advantages to using #whatwg for html5lib support. :)

[14:42:16.0000] <ambv>
gsnedders: https://github.com/html5lib/html5lib-python/pull/43

[14:42:37.0000] <ambv>
now the thing that bothers me is why is step 7 commented out

[14:43:43.0000] <ambv>
it doesn't look right anyway, should we just get rid of it

[14:43:53.0000] <gsnedders>
Step 7 isn't commented out, step 7 is line 1486 in your copy.

[14:44:14.0000] <gsnedders>
What that commented out code is I have no idea.

[14:44:28.0000] <ambv>
ah, I see

[14:44:41.0000] <ambv>
I'll remove the code, git will remember it for us

[14:44:48.0000] <gsnedders>
Indeed.

[14:46:29.0000] <gsnedders>
ambv: See pull #44

[14:47:22.0000] <ambv>
gsnedders: #43 is now rebased

[14:47:28.0000] <ambv>
looking at 33

[14:47:30.0000] <ambv>
*44

[14:48:17.0000] <gsnedders>
/me points out rebasing stuff breaks Critic, as well as the fact that he prefers to be able to easily see changes in pull requests (thus non-fast-forward changes are hard to work out what has changed from when I last looked at the pull request)

[14:48:58.0000] <ambv>
OK, will use fixup from now on

[14:49:58.0000] <ambv>
as for #44, +1 - this implementation makes sense to me when I read it. dom2sax didn't, confusion level: high.

[14:50:53.0000] <gsnedders>
:)

[14:51:29.0000] <gsnedders>
ambv: I think I'm against comments from the spec in general, it's just the adoption agency algorithm is sufficently complex that I think it's useful.

[14:51:55.0000] <ambv>
fair enough. for comments that would be longer than the implementation I simply updated the step number

[14:53:37.0000] <ambv>
is doctype really capitalized "Doctype"? (line 21 in treeadapters/sax.py)

[14:53:43.0000] <gsnedders>
Yes.

[14:54:07.0000] <ambv>
yikes, that looks bad.

[14:54:12.0000] <gsnedders>
constants.py:3081

[14:54:21.0000] <gsnedders>
Really all the tokens should be classes, but oh well.

[14:56:12.0000] <ambv>
that's for 2.0

[14:56:13.0000] <ambv>
;)

[14:56:18.0000] <gsnedders>
Indeed. :)

[14:59:01.0000] <ambv>
from html5lib.filters.alphabeticalattributes import Filter as AlphabeticalAttributesFilter

[14:59:06.0000] <ambv>
my inner Java child smiled.

[15:00:22.0000] <gsnedders>
Bah, we have the ModuleCacheFactoryFactory in utils.py!

[15:00:41.0000] <gsnedders>
It's even commented with something like, "Yes, I know this isn't Java. Yes, I did really write a factory factory in Python."

[15:01:35.0000] <ambv>
:)

[15:02:50.0000] <gsnedders>
(I may note I have never voluntarily written Java in my life.)

[15:03:04.0000] <ambv>
gsnedders: I've heard Richard followed up on the PyPI login issue

[15:03:18.0000] <gsnedders>
ambv: Yes, I know. :)

[16:07:18.0000] <zewt>
i wonder why no browsers have made popup windows scoped to the tab they're opened from

[16:08:06.0000] <zewt>
sort of like tab-modal alerts

[16:09:39.0000] <zewt>
might make target=_blank a bit less of an abuse

[16:11:49.0000] <ambv>
how would you scope them from the UX perspective?

[16:12:24.0000] <zewt>
not entirely sure; could be a second row of tabs, though that's a bit clunky

[16:12:41.0000] <ambv>
but the idea is neat

[16:12:42.0000] <zewt>
not too bad if it only shows up when it's actually used, though

[16:14:02.0000] <zewt>
drives me nuts that pages will make every external link target=_blank to try to keep you from leaving their site, so i disable opening windows (which breaks sites, but not too frequently)

[16:20:30.0000] <ambv>
by the way, what does WHATWG think of the HTML5 logo

[16:20:51.0000] <ambv>
especially now that there's no longer a 5 in HTML5

[16:21:48.0000] <zewt>
does anyone in here care about logos? heh

[16:34:42.0000] <gsnedders>
zewt: Opera basically does.

[16:50:53.0000] <heycam>
Hixie++


2013-05-06
[17:07:06.0000] <ambv>
gsnedders: about simpletree, ask me again tomorrow

[17:08:30.0000] <ambv>
I have to see what the various options are (and for instance what can the PyPy guys use)

[17:14:45.0000] <ambv>
but I suspect nobody will miss it if it's gone. xml.etree and xml.dom.minidom are widely known, it makes sense for people to use them.

[17:15:52.0000] <ambv>
James' comment on simpletree.py says it all

[17:15:54.0000] <ambv>
"Really crappy basic implementation of a DOM-core like thing"

[22:50:20.0000] <Hixie>
heycam: what'd i do to get incremented? :-)

[22:50:31.0000] <heycam>
Hixie, the Cmd+R thing

[22:50:47.0000] <heycam>
Hixie, it was a flippant comment, but I'm sure it will save me some number of seconds when I accidentally do it next :)

[22:51:09.0000] <Hixie>
oh heh

[22:51:18.0000] <Hixie>
i did that when you asked for it, before i said "your wish is my command" :-)

[22:51:31.0000] <heycam>
ah :)

[22:51:44.0000] <heycam>
only saw it in the irc notification in #html-wg this morning

[22:52:00.0000] <Hixie>
#html-wg talked about it? o_O

[22:52:09.0000] <heycam>
no, there's a bot that announces changes

[22:52:11.0000] <Hixie>
oh

[22:52:14.0000] <Hixie>
i must have it muted

[02:18:46.0000] <ambv>
gsnedders: remove simpletree, if you ask me. I can prepare the PR. motivation: dom and etree are more useful in terms of interop. also, James' comment on simpletree.py: "Really crappy basic implementation of a DOM-core like thing"

[02:19:13.0000] <ambv>
most importantly though: 1.0 is *the* version to remove it, if at all.

[02:20:59.0000] <jgraham>
I think gsnedders agrees with you :)

[02:21:19.0000] <ambv>
jgraham: why hello there!

[02:21:32.0000] <ambv>
thanks for html5lib, James!

[02:21:39.0000] <jgraham>
I think I have previously disagreed on the basis that it can be mildly useful to have something we fully control for testing (although perhaps that is less true now that the porject is mostly stable)

[02:21:57.0000] <jgraham>
and on the basis that the scope for 1.0 should be as small as possible

[02:22:05.0000] <jgraham>
ambv: Thanks for your contributions :)

[02:22:23.0000] <ambv>
when did you get rid of beautiful soup treebuilder?

[02:22:58.0000] <ambv>
I vaguely recall that it was supported at some point

[02:23:31.0000] <jgraham>
I don't remember. Myabe not that long ago, although that was never working very well and BS4 now supports html5lib as a parser backend, so that makes life easier for us

[02:26:05.0000] <ambv>
jgraham: true. I have to look up how that works. bs4 doesn't use the entirety of html5lib, right? BS4 is a treebuilder on its own.

[02:26:42.0000] <ambv>
but more to the point: I will prepare the PR that removes simpletree.

[02:26:49.0000] <jgraham>
OK

[02:28:01.0000] <ambv>
jgraham: how about using http://www.w3.org/html/logo/downloads/HTML5_Logo_512.png as the logo for the GitHub html5lib org?

[02:29:28.0000] <jgraham>
Well it isn't MIT licensed for a start

[02:29:39.0000] <ambv>
and it has 5 in it

[02:29:46.0000] <ambv>
but so does the library name

[02:31:09.0000] <jgraham>
darobin: Speaking of licensing, I note that http://www.berjon.com/blog/2013/04/w3c-open-license.html takes a very W3C appraoch to dates in URLs :p

[02:38:17.0000] <SimonSapin>
Does / should html5lib use the encoding labels in http://encoding.spec.whatwg.org/ ?

[02:38:35.0000] <SimonSapin>
(https://github.com/SimonSapin/python-webencodings might help ;))

[02:38:51.0000] <jgraham>
It probably should, yes

[02:39:01.0000] <jgraham>
That is not 1.0 material for sure though :p

[02:39:06.0000] <SimonSapin>
sure

[02:39:23.0000] <SimonSapin>
I see a label mapping in constants.py, but I don’t know if it’s the same

[02:41:12.0000] <jgraham>
That's based on what used to be in the HTML spec. I doubt it's the same

[02:59:53.0000] <ambv>
jgraham: OK, here you go. a logo for the library that is MIT licensed. https://github.com/ambv/html5lib-logo

[03:00:00.0000] <ambv>
I made this ™

[03:00:24.0000] <darobin>
jgraham: hahaha, actually the only place I've ever liked dates to be in URLs is for blogs

[03:00:34.0000] <darobin>
because I like to know the time context of a given post

[03:01:39.0000] <jgraham>
darobin: So explain why the URL is 2013/04 and the post is 2013/05/03 :)

[03:01:48.0000] <darobin>
what?

[03:01:50.0000] <darobin>
oh fuck

[03:01:57.0000] <darobin>
that's a bug in my publishing system :)

[03:02:10.0000] <jgraham>
*that* was the part that reminded me of W3C :)

[03:02:12.0000] <SimonSapin>
darobin: is in a weird timezone

[03:02:18.0000] <darobin>
jgraham: isn't CC-BY MIT compatible?

[03:02:22.0000] <darobin>
(re the logo)

[03:02:32.0000] <darobin>
jgraham: yeah, good point

[03:02:48.0000] <darobin>
and to say I positively *hate* datedspace and have been arguing against it for essentially ever

[03:02:51.0000] <darobin>
oh well

[03:02:52.0000] <jgraham>
darobin: I expect they are compatible

[03:03:13.0000] <jgraham>
But two licenses are more complex than one

[03:03:26.0000] <darobin>
sure

[03:03:41.0000] <darobin>
it's just that if that's your concern, I would ignore it :)

[03:04:50.0000] <jgraham>
My concern is that I can't be bothered to check in the CC license and the attribution to whoever needs to be attributed for that logo, just to get a generic logo that doesn't quite fit the project anyway

[03:05:23.0000] <jgraham>
(I'm sure almost everyone using that logo is breaking the license, but oh well)

[03:08:16.0000] <jgraham>
(not least because the sample code appears to be in violation)

[03:16:34.0000] <darobin>
I guess we should sue then :)

[03:18:03.0000] <jgraham>
Pretty sure you wouldn't win :)

[03:18:20.0000] <jgraham>
But it might be quite funny?

[03:18:48.0000] <jgraham>
Actually that "pretty sure" is based on a model of a legal system ruled by common sense

[03:19:03.0000] <jgraham>
So I retract that

[03:23:57.0000] <ambv>
jgraham: so what do you think about the WHATWG-inspired html5lib logo?

[03:25:12.0000] <jgraham>
I'm not sure. Apart from the fact that I think the WHATWG logo reveals why Hixie isn't in graphic design, I think that it suggests html5lib is a WHATWG thing, which isn't quite true

[04:09:24.0000] <darobin>
not that I have any say, but I actually like ambv's logo *except* for the colour

[04:09:41.0000] <darobin>
I always thought that the WHATWG had picked the ugliest shade of green possible :)

[04:09:46.0000] <Philip`>
jgraham: I thought the WHATWG logo was designed by Matt Raymond, per http://lists.whatwg.org/pipermail/whatwg-whatwg.org/2006-November/007923.html

[04:10:37.0000] <ambv>
darobin: jgraham: to make a little twist on things, we can change the color to W3C HTML5's orange instead

[04:11:10.0000] <darobin>
ambv: I have a better idea, in order to illustrate the value of design by committee, how about using BOTH the green and the orange? ;)

[04:11:28.0000] <ambv>
/me cried a little inside

[04:16:47.0000] <jgraham>
Hmm, I wonder if all the variations on that logo that we have used since are copyright infringement :)

[04:20:29.0000] <jgraham>
darobin: You mean an animated gif that loops and jumps between the green and the orange at a selection of unequal intervals?

[04:20:55.0000] <darobin>
jgraham: how about an animated gradient?

[04:22:16.0000] <ambv>
I know.

[04:22:19.0000] <ambv>
It should BLINK.

[04:23:36.0000] <jgraham>
I think that we need SVG and the circle should either be, green, orange, or a feed of gsnedders' webcam. At random.

[04:32:40.0000] <darobin>
why blink when you can marquee?

[04:33:04.0000] <ambv>
https://dl.dropboxusercontent.com/u/4830253/hip5lib.png

[04:33:12.0000] <darobin>
sweet!

[04:35:44.0000] <Ms2ger>
Where did you get such a nice photo of darobin?

[04:36:50.0000] <jgraham>
darobin? It's a photo-fit of Ms2ger, surely?

[04:37:07.0000] <darobin>
I have no spectacles

[04:37:45.0000] <darobin>
besides, I think those glasses convey the hipsterness of a python project extremely well

[04:40:57.0000] <jgraham>
A ruby fanboi accusing *python* of being hipster? hahaha

[04:41:14.0000] <ambv>
jgraham: https://github.com/html5lib/html5lib-python/pull/45

[04:42:16.0000] <jgraham>
ambv: OK, can't review now (have real work…) but I don't think DOM is a good default treebuilder

[04:42:31.0000] <jgraham>
Since the python DOM implementation is pretty hopeless

[04:42:48.0000] <ambv>
jgraham: OK, it's more simpletree-like than etree

[04:42:59.0000] <jgraham>
Yeah, I know, but still

[04:43:19.0000] <jgraham>
I don't want to be a bad citizen by encouraging unsuspecting innocents to use it

[04:43:39.0000] <ambv>
that leaves etree.

[04:43:44.0000] <jgraham>
Indeed

[04:44:19.0000] <ambv>
OK, will update and rebase (and break Critic again, yays ;-))

[04:45:14.0000] <jgraham>
Why rebase?

[04:45:29.0000] <jgraham>
Or, to put it diffrently, please don't break critic :)

[04:45:43.0000] <ambv>
OK, will use --fixup.

[04:46:03.0000] <jgraham>
Yeah, that's much better style

[04:46:09.0000] <ambv>
jgraham: are you very tied to Critic? now that we're on GitHub, we might as well use that.

[04:46:21.0000] <Ms2ger>
ehehehe

[04:46:32.0000] <jgraham>
I am very very tied to critic having used the github review tools

[04:46:34.0000] <Ms2ger>
/me sits back with popcorn

[04:46:54.0000] <jgraham>
For a service that is generally good they are embarassingly poor

[04:47:07.0000] <jgraham>
Ahem

[04:47:23.0000] <jgraham>
Anyway, rebasing *does* work with critic

[04:47:49.0000] <jgraham>
And might even work with the critic/github integration, as long as you tell critic before you push that a rebase is going to occur

[04:48:34.0000] <jgraham>
But gratuitously rebasing pushed branches is bad style; you should squash right at the end before you want to merge with/rebase onto master

[04:49:08.0000] <jgraham>
Unless you need to incorporate some other changes that happened in master in the meantime

[04:50:15.0000] <jgraham>
(but if you need that tyou probably don't want to throw away the exisitng comments, so the github solution doesn't seem ideal)

[04:51:34.0000] <ambv>
I agree in general. For projects that use GitHub for the whole PR workflow the idea is to have the PR ready for automatic merging (by the big green button) at all times

[04:52:32.0000] <ambv>
For lines of code commented in the review it also integrates nicely since they are marked as "outdated diffs" then

[04:55:43.0000] <ambv>
jgraham: I will leave dom for Genshi

[04:56:13.0000] <gsnedders>
jgraham: What's the status for PyPI?

[04:56:26.0000] <ambv>
hello, gsnedders

[04:56:39.0000] <gsnedders>
ambv: (I'll be on train for most of today, FWIW)

[04:57:15.0000] <jgraham>
gsnedders: I need to actually do stuff but yes in theory I now can do stuff

[04:57:42.0000] <gsnedders>
jgraham: tl;dr: jgraham is lazy.

[04:58:35.0000] <ambv>
jgraham: FWIW if we remove simpletree then we might switch the default DOM implementation to a better one as well

[04:58:43.0000] <gsnedders>
Also: what's this without trains being totally fucked up on a bank holiday?

[04:58:44.0000] <ambv>
same backward incompatibility

[05:00:50.0000] <jgraham>
ambv: BTW the "outdated diff" thing on github is also totally broken since it assumes that any new change renders all previous comments irrelevant. Which is obviously a total lie.

[05:06:29.0000] <Ms2ger>
OH: "a very happy user of the MS Word Equation Editor"

[05:06:47.0000] <gsnedders>
Ms2ger: Are you sure you didn't just mishear?

[05:08:43.0000] <jgraham>
Perhaps it's just a test so you you know that the valium has kicked in as in: "How can you tell that the drugs work? Well I am a very happy user of the MS Word Equation Editor"

[05:10:24.0000] <Ms2ger>
https://groups.google.com/d/msg/mozilla.dev.platform/96dZw1jXTvM/JV5Ls2Dj73kJ

[05:10:41.0000] <Ms2ger>
(People might be interested in the rest of the thread as well)

[05:14:28.0000] <jgraham>
FWIW I once proposed that we made the parser accept a subset of (La)TeX and output a MathML DOM on the backend

[05:21:38.0000] <zewt>
never understood people squashing things before merging in git; much nicer to have the commits split out

[05:22:01.0000] <odinho>
Neh, better with nice history. Seeing all related changes on blame etc.

[05:22:03.0000] <odinho>
IMHO

[05:22:28.0000] <jgraham>
Yes, because there's nothing I want more in my history than all your "fixup! typo in arguments" commits

[05:22:28.0000] <zewt>
keeping them split apart is what gives you the nice history, instead of a bunch of work crushed into one mysterious commit

[05:22:47.0000] <zewt>
eh? i fixup those before they go anywhere

[05:23:34.0000] <odinho>
zewt: No-no. We don't squash to a SINGLE commit.

[05:23:40.0000] <odinho>
zewt: We have commits which make sense.

[05:23:51.0000] <odinho>
zewt: Then all fixups go into one of those master commits, if they make sense there.

[05:24:08.0000] <odinho>
zewt: If it is indeed a new "extra set" of work, worthy of its own commit, it gets that.

[05:25:00.0000] <Ms2ger>
/me prefers to think of stacks of patches

[05:25:58.0000] <jgraham>
The only things that should come in stacks are pancakes

[05:26:32.0000] <Ms2ger>
Queues, I guess

[05:26:44.0000] <Ms2ger>
The only things that should come in queues are Brits?

[05:27:00.0000] <jgraham>
Queues might be involved in procuring stacks of pancakes, for sure

[05:27:05.0000] <zewt>
a stack seems to imply they're all going to be reverted, heh

[05:27:51.0000] <tomasf>
pancake collections should be queues. you don't want to eat the coldest one last

[05:28:25.0000] <zewt>
pancakes don't really seem like stacks, since you don't pop them off and eat them one at a time

[05:28:59.0000] <Ms2ger>
/me imagines zewt with several pancakes in his mouth

[05:29:07.0000] <zewt>
:*

[05:29:50.0000] <jgraham>
A hetrogenous collection of pancakes should be arranged in a heap sorted according to flavour

[05:30:28.0000] <zewt>
whoever first called them a "stack of pancakes" sure had a poor understanding of data structures

[05:31:25.0000] <Ms2ger>
More like :∷

[05:31:39.0000] <tomasf>
pancakes should be hung on a clothes line for random access

[05:32:30.0000] <Ms2ger>
Looks like jgraham found a new kind of nerd-snipe

[05:32:49.0000] <darobin>
fools

[05:33:00.0000] <darobin>
pancakes should be eaten fast enough that the data structure does not matter

[05:33:03.0000] <darobin>
it's a real time thing

[05:33:15.0000] <Ms2ger>
WebRTP

[05:33:24.0000] <darobin>
if you can't parallelise the baking and eating, you don't deserve access to a stove

[05:33:42.0000] <zcorpan>
should i put the old changelogs in html-differences in a <details>?

[05:34:06.0000] <darobin>
zcorpan: more importantly, have you considered changing the title?

[05:34:07.0000] <Ms2ger>
Does anybody implement details?

[05:34:09.0000] <darobin>
/me ducks for cover

[05:34:24.0000] <jgraham>
zcorpan: How is that relevant to pancakes?

[05:34:28.0000] <jgraham>
Also, no

[05:34:52.0000] <zcorpan>
Ms2ger: chrome does

[05:35:15.0000] <jgraham>
<details> is a bad idea until we have components that are widely implemented and can express it properly

[05:35:30.0000] <jgraham>
Isn't the chrome implementation kind of horrible?

[05:35:30.0000] <Ms2ger>
Meh, chrome :)

[05:35:48.0000] <zcorpan>
maybe

[05:41:05.0000] <darobin>
zcorpan: if you want something like details, but not details, don't be afraid of using some JS thing

[05:41:13.0000] <darobin>
(assuming you're not lazy about this)

[05:41:32.0000] <darobin>
so long as the default is to show the content, you can enhance

[05:42:02.0000] <zcorpan>
darobin: by 'the default' you mean without JS?

[05:42:10.0000] <darobin>
yeah

[05:42:27.0000] <darobin>
i.e. don't just display: none the hidden stuff

[05:42:59.0000] <zcorpan>
i think i'll go with the lazy card

[05:43:22.0000] <darobin>
I expected no less :)

[05:43:37.0000] <zewt>
itym more

[05:43:46.0000] <darobin>
no

[05:43:57.0000] <darobin>
I couldn't possibly have expected any less

[05:44:34.0000] <darobin>
also, a fine mind like zcorpan would naturally be driven to laziness

[05:44:41.0000] <gsnedders>
ambv, jgraham: BS3 support was removed around the time of fixing all the tests, as I wasn't prepared to hack stuff to sort of support a tree without namespaces.

[05:45:02.0000] <zcorpan>
maybe it's the tea

[05:48:33.0000] <gsnedders>
/me reads logs from earlier and while he's at it steals some of Ms2ger's popcorn

[05:50:20.0000] <Ms2ger>
Too late, I wasn't allowed popcorn in the computer lab

[06:45:24.0000] <ambv>
gsnedders: PR updated

[06:50:52.0000] <ambv>
…and another fixup for flake8 to add missing vertical whitespace

[07:17:40.0000] <ambv>
…and yet another fixup for PyPy to get rid of xml.etree DeprecationWarnings which are considered errors on Travis

[07:18:15.0000] <jgraham>
ambv: You know that critic sends notifications so that you don't have to ;)

[07:19:02.0000] <ambv>
jgraham: :-) he might know "what" but he won't know "why"

[07:19:17.0000] <ambv>
this is the dark side of "fixup!"

[07:22:44.0000] <jgraham>
True

[07:54:12.0000] <gsnedders>
ambv: git commit --fixup --edit allows you to edit the message (though you should really keep the first line the same!)

[07:54:24.0000] <ambv>
good to know.

[07:54:30.0000] <ambv>
thanks!

[08:45:29.0000] <hallvors>
annevk: tried to help you resolve a bug, see PR 4 for XHR spec

[08:53:30.0000] <hallvors>
annevk: two of the tests in http://w3c-test.org/web-platform-tests/master/XMLHttpRequest/send-content-type-string.htm fails in Firefox just because there is a space before the word "charset".

[08:54:40.0000] <hallvors>
Isn't that a bit silly? Aren't both "text/html;charset=windows-1252" and "text/html; charset=windows-1252" valid MIME types? Should we make the tests a bit more accepting?

[08:58:11.0000] <hallvors>
(there's another test somewhere else that asserts charset must be upper case, i.e. charset=UTF-8 is expected even though charset=utf-8 was set. Does that make sense?)

[09:02:13.0000] <hallvors>
sorry, it's the other way around. Test sets lower case, expects lower case - Chrome upper cases UTF-8 and the test says failure.

[09:02:49.0000] <dglazkov>
good morning, Whatwg!

[09:41:49.0000] <annevk>
hallvors: just being conservative

[09:42:12.0000] <annevk>
hallvors: just in case servers mess up

[09:43:00.0000] <hallvors>
I'm somewhat tempted to rewrite to use assert regexp match to allow case insensitive and that single optional space..

[09:43:17.0000] <annevk>
hmm

[09:43:29.0000] <annevk>
that's inconsistent with what's required though

[09:43:43.0000] <hallvors>
because I don't really think it's the XHR test suite's job to require such things for MIME types..

[09:44:03.0000] <annevk>
well xhr makes that requirement

[09:44:38.0000] <annevk>
it requires a specific sequences of bytes, it doesn't require a particular mime type and leaves serialization up to the implementation

[09:56:01.0000] <hallvors>
annevk: if you say so. I'm trying to figure out where..

[10:46:57.0000] <annevk>
hallvors: you cannot have same-origin and anonymous flag set

[10:52:07.0000] <annevk>
TabAtkins: yo, I'm your timezone

[10:52:27.0000] <TabAtkins>
annevk: Yay!

[10:52:39.0000] <annevk>
TabAtkins: fwiw, Future.resolve() also only takes a value; currently nothing in the API does something special with futures

[10:53:03.0000] <TabAtkins>
Future.all() takes futures.

[10:53:07.0000] <annevk>
TabAtkins: the only semantic is thenable assimilation or not

[10:53:10.0000] <hallvors>
annevk: Sorry, I don't get it. Where does it say I can't?

[10:53:26.0000] <TabAtkins>
Unless I just haven't read the algorithm lately, and it accepts plain values as auto-accepted promises?

[10:53:31.0000] <annevk>
hallvors: the place where it makes origin a unique identifier

[10:53:34.0000] <hallvors>
(did you mean it has no effect on same-origin?)

[10:54:11.0000] <hallvors>
open() - Set source origin to a globally unique identifier if the anonymous flag is set, and the origin of document otherwise. ???

[10:54:13.0000] <annevk>
TabAtkins: per the algorithm, {then:function() {}} and new Future() are identical

[10:54:31.0000] <annevk>
hallvors: yes

[10:54:50.0000] <TabAtkins>
annevk: Yes, yes, that's fine (for the purpose of the relevant conversation).  When I say "Future", read "thenable" for now (unless I get people to agree on changing that).

[10:55:07.0000] <annevk>
TabAtkins: oh man that's so confusing

[10:55:12.0000] <TabAtkins>
Haha.

[10:55:17.0000] <annevk>
TabAtkins: I think in part that's what's ruining this conversation

[10:55:19.0000] <TabAtkins>
There's "plain values", and there's promise-likes.

[10:55:27.0000] <annevk>
Because I'm pretty sure Mark has a different set of assumptions

[10:55:43.0000] <TabAtkins>
Mark is using his own weird set of terminology that's different from everyone else's. :/

[10:56:19.0000] <hallvors>
hm.. nothing in that section about same vs cross origin. I think you mean under send(). Step 10. If the source origin and request URL are same origin etc

[10:57:19.0000] <hallvors>
here same-origin makes no reference to anonymous flag indeed

[11:01:03.0000] <hallvors>
Yup - have to remind myself that anonymous flag is basically just a way to turn off Referer: for cross-origin request..

[11:02:38.0000] <annevk>
TabAtkins: so yeah, I guess we should write an email that is perfectly clear on terminology and then ask what invariants everyone wants

[11:03:02.0000] <annevk>
TabAtkins: because now I've the feeling everyone is saying something else and still agreeing with each other because they all think people mean different things

[11:03:14.0000] <TabAtkins>
No, there's definitely not agreement going on here.

[11:03:17.0000] <annevk>
hallvors: if the origin is a unique identifier, it can never be same-origin with the URL

[11:05:21.0000] <annevk>
TabAtkins: I think what might be worth trying is instead of using abstract terms is to ask people what they want if you pass new Future vs something that matches {then:function(){}} vs any other kind of value

[11:06:11.0000] <TabAtkins>
annevk: At the moment we're talking about straight-up Futures in the thread, though.

[11:06:42.0000] <annevk>
straight-up future?

[11:07:13.0000] <TabAtkins>
As in, Futures in and of themselves, not thenables (though much of it applies to thenables as well).

[11:07:30.0000] <TabAtkins>
In other words, we're not talking past each other about Futures vs thenables, at least at the moment.

[11:14:54.0000] <hallvors>
(I don't understand why anonymous is a constructor argument and withCredentials is a property.. seems a bit inconsistent. But that's a sin of the past..)

[11:16:24.0000] <hallvors>
I also like Jonas Sicking's suggestion to send Authorization immediately. Implementing that shouldn't really be harder than implementing sending a setRequestHeader('Authorization', )

[11:16:30.0000] <hallvors>
- or?

[11:17:00.0000] <hallvors>
but I realise a lot of spec authoring is probably spent waiting for feedback :)

[11:20:22.0000] <hallvors>
I don't care much about the charset case issue. Allowing the optional space is IMO reasonable.. IMO it's more readable with a space.. but it's of course nitpick and hardly worth discussing.

[12:49:11.0000] <annevk5>
hallvors: we could do Authorization directly, if that's also done for user@pass in URLs I suppose. Or we could even make that differ... Someone just needs to outline all the different configurations and define it...

[12:49:21.0000] <annevk5>
hallvors: pretty much all of that should be in Fetch

[12:49:40.0000] <hallvors>
just a moment..

[12:50:40.0000] <hallvors>
Opera (presto) sends it immediately when you type user:pass@host

[12:52:51.0000] <hallvors>
Firefox doesn't though

[12:52:58.0000] <lecuyer>
not to boil the pot, but is DRM still happening in html5?

[12:53:46.0000] <hallvors>
companies with a lot of clout are still pushing DRM, yes

[12:54:47.0000] <lecuyer>
in the "have been pushing"-"have successfuly pushed", where are we?

[12:55:01.0000] <hallvors>
Neither does Chrome. But it's a bit hard to tell if it's just anti-phishing strip-away-user-pass or a deliberate feature. I'll go fake some 401s..

[12:59:15.0000] <hallvors>
Yes, it's a feature. They both require a 401 with a correct WWW-Authenticate challenge

[13:10:35.0000] <annevk>
Yeah, it's called HTTP authentication ;-)

[13:15:05.0000] <annevk>
hallvors: fyi, CORS is part of Fetch

[13:15:32.0000] <annevk>
hallvors: so in fact Fetch defines the whole thing, and XHR is just an API layer

[13:16:05.0000] <hallvors>
I basically don't care where it is defined as long as I can write sensible test cases and refer to some spec :-)

[13:16:56.0000] <hallvors>
The (largely theoretical) problem with sending Authorization immediately is that the server might request something else than Basic..

[13:17:34.0000] <hallvors>
so we throw a spanner into the auth negotiation feature of  HTTP if we did that

[13:17:46.0000] <hallvors>
(would throw)

[15:46:25.0000] <annevk>
ah yeah

[15:46:32.0000] <annevk>
that's why you need to get to the server

[15:46:34.0000] <annevk>
to get some details

[15:47:29.0000] <annevk>
oh

[15:47:37.0000] <annevk>
IE11 has __defineGetter__

[16:01:42.0000] <annevk>
arv: there's various different open issues with respect to Document objects

[16:01:52.0000] <annevk>
arv: one is that HTML attempts to merge most of them into one

[16:02:19.0000] <annevk>
arv: which is good as getting different document objects based on MIME type was just confusing

[16:02:34.0000] <annevk>
arv: but whether it's compatible has yet to be fully tested


2013-05-07
[19:18:30.0000] <kochi>
morning, whatwg!

[19:36:18.0000] <zewt>
i guess

[22:05:38.0000] <annevk5>
Hmm, nested URL schemes...

[22:07:14.0000] <SimonSapin>
like git+http: ?

[22:21:39.0000] <annevk5>
no, like view-source or jar

[22:22:30.0000] <annevk>
my initial plan was to not support them, but it seems like jar might be liked enough to justify adding either some kind of parser exception or whatever Gecko is doing at the moment

[22:24:15.0000] <SimonSapin>
annevk: "A relative scheme is a scheme listed in the first column of the following table." Is this table set in stone, or are applications expected to add to it?

[22:24:47.0000] <annevk>
if it needs to be bigger, the table should be expanded

[22:30:55.0000] <SimonSapin>
annevk: the git-clone man page lists ssh: git: ftps: rsync:

[22:31:05.0000] <SimonSapin>
but I don’t expect these to be supported by a browser

[22:32:07.0000] <annevk>
it's also not necessarily all URL schemes ever, they need to parse in a certain way too

[22:33:11.0000] <SimonSapin>
also, some Python packaging tools support multiple VCSs by having syntax like git+<URL> or hg+<URL>

[22:33:36.0000] <annevk>
but we can definitely expand it if there's need, this is just an initial set

[22:33:39.0000] <SimonSapin>
so you end up with hg+http: git+http: git+ssh: …

[22:33:52.0000] <SimonSapin>
I’m asking whether we should

[22:34:16.0000] <SimonSapin>
people are gonna keep inventing crazy schemes for their use

[22:34:55.0000] <SimonSapin>
should the URL Standard maintain a registry that people ask being added to?

[22:35:17.0000] <annevk>
oh, that'd be kinda separate

[22:35:30.0000] <annevk>
yeah, there should be a registry somewhere of what's in use

[02:11:35.0000] <jgraham>
zcorpan: FWIW I think the correct response to the title of the differences document is "you are wasting my time and the time of everyone on the mailing list. Please stop."

[02:11:51.0000] <jgraham>
Although perhaps not in quite such a blunt way :)

[02:12:08.0000] <jgraham>
*discussion on the title of the

[02:12:32.0000] <zcorpan>
yeah

[02:12:42.0000] <zcorpan>
or maybe i should stop responding

[04:12:19.0000] <hsivonen>
Did the HTML WG chartering discussion for which there are no public minutes get minuted Member-confidentially?

[04:14:13.0000] <gsnedders>
Are charter discussions not normally AB-confidential?

[04:18:44.0000] <hsivonen>
gsnedders: dunno

[04:19:07.0000] <hsivonen>
w3cmemes suggested that chartering was discussed at a WG meeting rather than an AB meeting

[04:19:18.0000] <hsivonen>
I might have misunderstood w3cmemes

[04:20:16.0000] <gsnedders>
It's often discussed at a WG meeting, but the WG can't do anything but shout at the AB, I believe.

[04:30:18.0000] <hallvors>
should setRequestHeader() accept input of any length, even very long strings?

[04:36:54.0000] <jgraham>
Why wouldn't it?

[04:38:55.0000] <SteveF>
hsivonen: there was some responses to comments on the charter in https://lists.w3.org/Archives/Member/w3c-archive/

[04:45:49.0000] <hallvors>
jgraham: assuming implementations have some limitations on how much data they accept, if so perhaps the method should throw when exceeding them or someting..?

[05:20:45.0000] <zcorpan>
hallvors: that usually falls under the "hardware limitations" clause

[05:21:15.0000] <zcorpan>
hallvors: (do impls have limitations?)

[05:21:24.0000] <hallvors>
OK. JS is genetically engineered to not bother about OOM I guess

[05:21:44.0000] <zcorpan>
right

[05:34:36.0000] <ambv>
gsnedders: re https://critic.hoppipolla.co.uk/showcomment?chain=153 - this is not an etree test, this is a dom test which was missing before (there were only tests for simpletree in fact). now I test both.

[05:35:15.0000] <ambv>
I agree with hardcoding {namespace}html, will do that momentarily

[05:48:44.0000] <gsnedders>
ambv: I mean I'd rather use html5lib.parse("<html>", treebuilder="dom") or so instead of hardcoding dom.TreeBuilder.

[05:49:06.0000] <gsnedders>
ambv: Because dom.TreeBuilder is really legacy and should be got at through dom.getTreeBuilder(minidom)

[05:49:10.0000] <ambv>
I changed that to use treebuilders.getTreeBuilder("dom"), is that okay too?

[05:49:16.0000] <gsnedders>
Yeah, that's fine.

[05:50:10.0000] <ambv>
also, https://critic.hoppipolla.co.uk/showcomment?chain=152

[05:51:12.0000] <gsnedders>
ambv: Responded

[05:53:41.0000] <gsnedders>
ambv: https://github.com/html5lib/html5lib-python/pull/47

[06:01:36.0000] <ambv>
is lxml.etree still limited compared to xml.etree?

[06:02:36.0000] <gsnedders>
ambv: It handles doctypes entirely differently to xml.etree

[06:06:45.0000] <ambv>
gsnedders: you should wait with your other pull requests so that you could fill in CHANGES.rst :P

[06:07:25.0000] <ambv>
I'll help with scraping information from the git logs for older releases

[07:10:51.0000] <ambv>
jgraham: gsnedders: DjangoCon EU is next week, I would want to make a lightning talk on html5lib 1.0 on it

[07:11:35.0000] <jgraham>
Nice idea

[07:11:52.0000] <ambv>
we will need 1.0 to be ready by that time, ideally with a new homepage and docs :>

[07:13:07.0000] <jgraham>
Hahaha

[07:13:13.0000] <jgraham>
But seriously…

[07:13:30.0000] <jgraham>
I think it's a good idea to do a talk whether or not 1.0 is ready

[07:13:42.0000] <jgraham>
And I think a new homepage and docs are also a good idea

[07:14:11.0000] <jgraham>
But I don't see us having some beautiful homepage and perfect docs in a week

[07:14:21.0000] <ambv>
well

[07:14:25.0000] <ambv>
We don't have to write a book

[07:14:48.0000] <jgraham>
Actually I don't see us having a beautiful homepage ever, unless someone with some design skills gets involved

[07:15:18.0000] <ambv>
And a homepage like html5lib.rtfd.org with the default theme (like http://kazoo.readthedocs.org) is totally enough

[07:15:41.0000] <ambv>
it's nice, standard and looks good

[07:16:00.0000] <jgraham>
Sure a page on readthedocs.org would be nice

[07:16:06.0000] <ambv>
this can be done by next week

[07:16:24.0000] <jgraham>
Yeah, that seems somewhat achiveable

[07:16:46.0000] <ambv>
AFAIU all the issues gsnedders wanted to close for 1.0 are either closed or a PR is waiting for being merged

[07:21:14.0000] <annevk>
"WebIDL level 1 is likely to be finished in a few months, with level 2 work ongoing." this would surprise me if actually true

[07:37:21.0000] <darobin>
annevk: where is that from?

[07:37:38.0000] <annevk>
darobin: chaals' summary

[07:40:33.0000] <gsnedders>
ambv: Using Sphinx and then readthedocs was kinda my plan

[07:40:44.0000] <gsnedders>
ambv: Though I was planning on shipping 1.0 without it :P

[07:40:56.0000] <gsnedders>
jgraham: Any thoughts on changing the maintainer?

[09:09:53.0000] <dglazkov>
good morning, Whatwg!

[09:35:48.0000] <matjas>
“That WhatWG doc sows confusion and should disappear.” — http://twitter.com/awbjs/status/331807099417923585

[09:35:55.0000] <matjas>
it disappearing is pretty much the end goal, indeed

[09:36:14.0000] <matjas>
but the “confusion” part is confusing

[09:38:36.0000] <Ms2ger>
AFAICT, Allen is a troll

[09:39:49.0000] <annevk>
Ms2ger, also editor of ES6

[09:39:55.0000] <Ms2ger>
Yeah

[09:40:00.0000] <miketaylr>
isn't IE11 adding __defineGetter__?

[09:40:05.0000] <miketaylr>
(allegedly)

[09:40:15.0000] <Ms2ger>
So I also get to blame him for using Word

[09:40:20.0000] <annevk>
But yeah, that's not a nice thing to say. Especially since he hasn't defined basic things that are part of JS such as <!--, -->, date parsing, etc.

[09:40:35.0000] <annevk>
Although matjas' document does not define date parsing either thus far.

[09:43:04.0000] <matjas>
miketaylr: hmm, IE did close my bug reports as WONTFIX

[09:43:21.0000] <miketaylr>
matjas: http://fremycompany.com/BG/2013/Internet-Explorer-11-9385-new-features-771/

[09:43:32.0000] <miketaylr>
of course that's "leaked" or whatever

[09:43:40.0000] <matjas>
miketaylr: oh wow! interesting

[09:43:57.0000] <annevk>
matjas, well well, https://twitter.com/awbjs/status/331812114333319170

[09:44:05.0000] <annevk>
matjas, there might be hope yet :)

[09:44:52.0000] <matjas>
annevk: \o/

[09:53:00.0000] <matjas>
https://bugs.ecmascript.org/show_bug.cgi?id=1471 now to file bugs for everything else in Web ECMAScript…

[09:53:38.0000] <annevk>
thanks matjas

[09:57:36.0000] <matjas>
i wish i could work on this full time for a few weeks or so

[10:02:49.0000] <annevk>
matjas: how's the teaching going?

[10:12:48.0000] <matjas>
annevk: it’s both awesome and tiresome

[10:18:32.0000] <GPHemsley>
Argh, just noticed I never pushed the change to mimesniff I made back in March, which swapped "MIME type" for "media type"

[10:18:56.0000] <annevk>
why rename that? :/

[10:20:41.0000] <GPHemsley>
change goes <-

[10:21:03.0000] <GPHemsley>
the argument at the time was to leave "media type" for CSS

[10:22:58.0000] <GPHemsley>
also, just realized that mimesniff is being treated as a "fork" for contribution considerations, meaning github is waiting for changes to merge "upstream"

[10:25:09.0000] <annevk>
GPHemsley: I'm not following. Leaving media type for CSS is exactly what we want I think. Also, MIME type is way more established within our set of documents.

[10:25:26.0000] <GPHemsley>
annevk: And I'm saying that's exactly what this commit delivers

[10:25:51.0000] <GPHemsley>
"media type" was replaced with "MIME type"

[10:26:35.0000] <annevk>
GPHemsley: maybe I misunderstand the concept 'swapped "MIME type" for "media type"' then.

[10:26:43.0000] <GPHemsley>
;)

[10:27:09.0000] <annevk>
"Give (one thing) and receive something else in exchange." hmm

[10:27:10.0000] <annevk>
oh well

[10:28:10.0000] <GPHemsley>
it's ambiguous, I admit

[10:28:18.0000] <GPHemsley>
but I think we're on the same page now :)

[10:30:22.0000] <GPHemsley>
annevk: Do you know if platform.html5.org also has any intention of being "upstreamed" to Michael Smith's user repo? (I can include it in my support request if we want it converted to a "normal" repo.)

[10:32:52.0000] <GPHemsley>
MikeSmith: Oh, ^^

[10:37:54.0000] <annevk>
GPHemsley: oh no, it's the new repo

[10:38:11.0000] <annevk>
GPHemsley: we're all pushing to that one now

[10:51:24.0000] <MikeSmith>
GPHemsley: what annevk said

[11:00:23.0000] <GPHemsley>
annevk, MikeSmith: OK, I'll include it in my support request, then.

[11:24:41.0000] <smaug____>
someone started to write a spec for selection

[11:24:48.0000] <smaug____>
where might that be

[11:25:39.0000] <jgraham>
https://dvcs.w3.org/hg/editing/raw-file/tip/editing.html#selections

[11:27:26.0000] <jgraham>
This mixed content blocking thing breaks sites :|

[11:51:35.0000] <manu-db>
For those of you that are interested in browser-based payments - https://manu.sporny.org/2013/browser-payments/

[11:52:09.0000] <manu-db>
We're having a call on that spec next week (open to the public) - it would be good to have someone there from Opera, Safari, and Chrome team.

[11:54:25.0000] <manu-db>
non-HTTPS link: http://manu.sporny.org/2013/browser-payments/ (other one throws up a cert warning)

[13:06:19.0000] <ambv>
\o/ simpletree is no more.

[13:12:33.0000] <annevk>
you guys killed it?

[13:12:37.0000] <annevk>
aw

[13:13:14.0000] <ambv>
yup, etree is the default now.

[13:15:05.0000] <gsnedders>
annevk: mwhahaha!

[13:15:37.0000] <annevk>
gsnedders: heh

[13:20:29.0000] <gsnedders>
annevk: Speaking of which, I might be at your end of the country sometime in the next month or two.

[13:21:17.0000] <annevk>
gsnedders: given an opportune time, I might be too :-)

[13:21:32.0000] <jgraham>
They gave annevk a whole end of the country?

[13:21:44.0000] <ambv>
gsnedders: I'm updating the change log for stuff merged since 0.95

[13:22:26.0000] <annevk>
/me is doing this crazy LHR-SFO-LHR-TSA-LHR-NRT-LHR thingie

[13:24:07.0000] <jgraham>
You're planning a stay with the TSA?

[13:24:42.0000] <annevk>
it's not just an agency apparently

[13:24:44.0000] <tantek>
Taiwan?

[13:25:19.0000] <annevk>
tantek: yeah

[13:25:56.0000] <tantek>
bummer of a TLA

[13:26:24.0000] <annevk>
heh

[13:28:06.0000] <gsnedders>
ambv: Good luck. I was planning on only caring about API changes. :)

[13:28:42.0000] <ambv>
people are curious

[13:32:19.0000] <jgraham>
They are? I assume people only read changelogs to find out why stuff broke. Or to learn about new features, perhaps.

[13:38:21.0000] <ambv>
I'm often curious and nervous if I don't see a change log on a library *before* I update

[13:38:43.0000] <ambv>
writing mission critical software is no fun

[13:44:47.0000] <ambv>
gsnedders: https://github.com/html5lib/html5lib-python/blob/master/html5lib/serializer/htmlserializer.py#L9 - this can be removed as well, I presume.

[14:00:26.0000] <gsnedders>
ambv: You have push access. Go change. :)

[14:00:47.0000] <ambv>
\o/

[14:01:20.0000] <gsnedders>
ambv: In general though, review-then-commit.

[14:02:02.0000] <ambv>
sure thing, I see that you do that, so I will too, naturally.

[14:03:18.0000] <ambv>
…but I still don't like Critic. <unsee who="jgraham"/>

[14:19:14.0000] <heycam>
annevk, "finished" = addressed the open issues; I'm going to try for that few month deadline

[14:19:56.0000] <annevk>
heycam: I'm missing some context I'm afraid

[14:20:09.0000] <heycam>
 <annevk> "WebIDL level 1 is likely to be finished in a few months, with level 2 work ongoing." this would surprise me if actually true

[14:20:20.0000] <annevk>
aah

[14:20:35.0000] <annevk>
well, it's been a few months for a few years now :p

[14:20:42.0000] <heycam>
yes ;)

[14:27:38.0000] <annevk>
I kinda thought ES guys were about less magic. But now they're coming up with this concept of a single string to mean either an absolute URLs or module name...

[14:56:11.0000] <GPHemsley>
/me responds to a thread from March about <a download>

[15:06:06.0000] <gsnedders>
ambv: Is there any decent way to "increment" a string in Python? Like, treating it as a base 0x110000 number? So "a\x00" became "a\x01" and "a\U0010FFFF" became "b\x00"?

[15:07:18.0000] <gsnedders>
Well, base sys.maxunicode + 1

[15:15:37.0000] <jsbell>
gsnedders: I had to implement that in JS last week, oddly enough.

[15:18:22.0000] <ambv>
gsnedders:

[15:18:24.0000] <ambv>
>>> import struct

[15:18:24.0000] <ambv>
>>> b = b'a\x00'

[15:18:25.0000] <ambv>
>>> new_value = struct.unpack('>q', b.rjust(8, b'\x00'))[0] + 1

[15:18:26.0000] <ambv>
>>> struct.pack('>q', new_value).lstrip(b'\x00')

[15:18:27.0000] <ambv>
b'a\x01'

[15:21:01.0000] <gsnedders>
ambv: But for Unicode strings?

[15:21:23.0000] <gsnedders>
Easy in the narrow build case, but wide builds not so much.

[15:22:52.0000] <ambv>
Let me see but I don' see any method right away.

[15:23:49.0000] <ambv>
You'd have to find a custom encoding that lends well to bitwise incrementing. Or increment by hand :/

[15:26:50.0000] <gsnedders>
jsbell: Come up with anything nice?

[15:26:52.0000] <jsbell>
my lame JS approach: https://gist.github.com/inexorabletash/5462871 (note: JS has only 16-bit strings)

[15:27:16.0000] <gsnedders>
jsbell: Yeah, JS makes it easy by having a nice round number of bits. :(

[15:29:34.0000] <jsbell>
(for the record, it's only used in the context of lexicographical compares of 16-bit code unit sequences, so I can pretend UTF-16 surrogate pairs don't exist)

[15:32:04.0000] <GPHemsley>
MikeSmith: Just forwarded you an e-mail about GitHub. You need to authorize a change to your local platforms.html5.org repo.

[15:41:52.0000] <gsnedders>
ambv: Can you rebase/push #49? (Don't use GitHub's PR merge, because needless merge commits.)

[15:42:56.0000] <ambv>
sure

[15:44:05.0000] <gsnedders>
ambv: Basically, once review accepted and provided Travis passes, go rebase and push yourself from now on.

[15:46:55.0000] <GPHemsley>
FTW, mimesniff is now a "normal" repository, rather than a fork

[15:53:12.0000] <GPHemsley>
annevk: Are you aware that the dom repo as a .DS_Store file?

[15:53:19.0000] <GPHemsley>
s/as/has/

[15:53:34.0000] <odinho>
Those hipsters!

[15:53:38.0000] <GPHemsley>
xhr too

[15:55:29.0000] <annevk>
I wasn't, but I can remove that

[15:55:59.0000] <GPHemsley>
I think I have .DS_Store in my user gitignore file

[15:56:26.0000] <GPHemsley>
yeah, ~/.gitignore_global

[15:57:58.0000] <annevk>
platform.html5.org is still a fork

[15:58:08.0000] <annevk>
what's the deal with that anyway? does it matter?

[16:02:54.0000] <GPHemsley>
annevk: Yeah, waiting on MikeSmith to authorize a switch; it affects a user's contributions on their profile.

[16:03:23.0000] <GPHemsley>
annevk: If a repo is a fork, a user won't get credit for it until it gets merged "upstream".

[16:03:26.0000] <annevk>
GPHemsley: oh, his would become a fork of ours at that point?

[16:03:29.0000] <GPHemsley>
yeah

[16:04:10.0000] <annevk>
would easily become our most popular repo then

[16:04:35.0000] <GPHemsley>
by what measure?

[16:04:55.0000] <GPHemsley>
oh, forks

[16:04:57.0000] <GPHemsley>
wow

[16:05:44.0000] <GPHemsley>
I didn't realize there were so many

[16:05:47.0000] <GPHemsley>
I wonder how that will play out

[16:05:57.0000] <GPHemsley>
(most are forks of Mike's repo, rather than WHATWG's)

[16:06:50.0000] <GPHemsley>
and it doesn't look like anyone else has actually made changes to their forked repos


2013-05-08
[17:02:45.0000] <annevk>
Makes sense, but kinda unexpected: http://www.example.org and http://www.example.org. are distinct origins.

[17:06:42.0000] <annevk>
abarth: you around?

[17:06:49.0000] <abarth>
annevk: yessir

[17:07:18.0000] <annevk>
abarth: how do you feel about defining the "Origin header" in Fetch and "origin of a URL" in URL?

[17:07:29.0000] <annevk>
abarth: and leaving https://tools.ietf.org/html/rfc6454 as mostly informational

[17:07:43.0000] <abarth>
what's the benefit of that change?

[17:08:10.0000] <annevk>
abarth: benefit of the first change is to no longer have the inaccurate definition of space-separated origins floating around

[17:08:34.0000] <annevk>
abarth: benefit of the second change is marginal, but basically to align around "URL" rather than URI / STD66

[17:09:36.0000] <abarth>
sounds like you're sad about the IETF process :)

[17:09:46.0000] <abarth>
I don't have any objection

[17:10:58.0000] <annevk>
I tried filing errata for the first thing, but it was rejected :/

[17:11:39.0000] <annevk>
And I keep getting questions about that production in relation to CORS. People think they can do Allow-Origin: x y z

[17:12:09.0000] <abarth>
yeah, it seemed like a good idea at the time, and the IETF makes it hard to change those sorts of things after a certain point in their process

[17:36:05.0000] <ambv>
jgraham: not yet public proof of concept - http://html5lib.rtfd.org/

[17:37:01.0000] <annevk>
Does html5lib support <template> yet?

[17:37:32.0000] <annevk>
Live DOM Viewer needs some updating for that too...

[17:37:49.0000] <ambv>
no, only a template attribute as of now.

[17:38:37.0000] <annevk>
Attribute? Not familiar with that I think

[17:39:57.0000] <ambv>
me neither, I only see it's listed as an acceptable attribute in the sanitizer

[17:40:14.0000] <ambv>
as for <template>, I cannot find it mentioned here http://www.whatwg.org/specs/web-apps/current-work/

[17:42:02.0000] <annevk>
ambv: it's in http://www.w3.org/TR/html-templates/ for now

[17:42:10.0000] <annevk>
ambv: but e.g. Firefox has it nightlies, I think Chrome does too

[17:42:23.0000] <annevk>
ambv: it should prolly be ported to HTML proper now it's in browsers

[17:44:09.0000] <ambv>
fun feature but will probably be added for html5lib 1.1 I guess

[23:51:57.0000] <annevk>
yes

[02:32:14.0000] <zcorpan>
ok, hg problems...

[02:33:03.0000] <zcorpan>
i did some work, commited, push, got:

[02:33:08.0000] <zcorpan>
abort: push creates new remote head fe04da5b1443!

[02:33:08.0000] <zcorpan>
(you should pull and merge or use push -f to force)

[02:33:18.0000] <zcorpan>
so i did hg pull -u

[02:33:35.0000] <zcorpan>
not updating: crosses branches (merge branches or update --check to force update)

[02:34:06.0000] <zcorpan>
so i did hg update --check

[02:36:16.0000] <zcorpan>
and now i don't know what i should do. can i just push?

[02:39:24.0000] <hsivonen>
DRM with bad encoding taste: PlayReady-oriented MP4 files contain UTF-16-encoded XML for designating the license server

[02:40:51.0000] <hsivonen>
in other news, Chrome for desktop already ships EME with at least Clear Key behind a flag

[02:41:47.0000] <jgraham>
zcorpan: Sounds like terrible advice from hg

[02:42:48.0000] <jgraham>
IMHO the right thing to do there is to rebase your changes on to of the upstream changes. Although hg makes that difficult

[02:43:25.0000] <jgraham>
But it sounds like if you try to push it won't work (or will do something bad)

[03:19:00.0000] <zcorpan>
jgraham: ok, how do i get the working copy back to the state when i committed?

[03:21:35.0000] <zcorpan>
/me tries hg rollback

[03:27:25.0000] <zcorpan>
well, i undid the pull, but the working copy is in state it was before i made changes. my commit still exists

[03:47:08.0000] <jgraham>
zcorpan: Your tree is in the state before you pulled?

[03:47:23.0000] <jgraham>
i.e. it has your commit but not any of the upstream?

[03:47:27.0000] <jgraham>
(changes)

[03:47:32.0000] <zcorpan>
i think so

[03:47:49.0000] <jgraham>
Well, my suggestion is to use hg pull --rebase

[03:47:59.0000] <jgraham>
Or maybe it is hg fetch --rebase

[03:48:10.0000] <jgraham>
Which requires the rebase extension to be enabled

[03:48:45.0000] <jgraham>
http://mercurial.selenic.com/wiki/RebaseExtension for how to enable it if it isn't already

[04:08:03.0000] <ambv>
jgraham: shouldn't http://code.google.com/p/html5lib/issues/detail?id=162 be fixed for 1.0 as well?

[04:12:53.0000] <jgraham>
ambv: Yes

[04:12:57.0000] <zcorpan>
jgraham: ok, did hg pull --rebase

[04:13:15.0000] <zcorpan>
so now i can push?

[04:15:41.0000] <jgraham>
zcorpan: Yes

[04:16:37.0000] <zcorpan>
yay! thanks jgraham

[04:26:26.0000] <hallvors>
does anyone know if there are subdomains set up on w3c-test.org that can be used for cross-origin tests?

[04:27:51.0000] <jgraham>
hallvors: Yes

[04:27:54.0000] <jgraham>
there are

[04:28:25.0000] <hallvors>
any docs on how/where to put helper files to use those?

[04:29:16.0000] <jgraham>
Well the files can go anywhere

[04:29:27.0000] <jgraham>
Everything is mirrored on all domains

[04:30:43.0000] <hallvors>
right. what are the domains?

[04:31:16.0000] <jgraham>
http://www.w3.org/wiki/Testing/Requirements#The_Web_test_server_must_be_available_through_different_domain_names

[04:31:27.0000] <jgraham>
Sorry, that took a long time to find :)

[04:31:45.0000] <hallvors>
nice

[04:33:28.0000] <jgraham>
If only there were a canonical site that had all this information, rather than it being spread across every wiki in the world

[04:33:42.0000] <zcorpan>
jgraham: so no mirror with different TLD

[04:34:00.0000] <jgraham>
No, I think there is only one tld

[04:35:16.0000] <hallvors>
Of course it's a bit tricky to figure out correct and lasting cross-origin URLs given the different branches. have to use JS, I guess.

[04:35:17.0000] <jgraham>
That seems fixable, but it seems hard to make it good enough for testing e.g. public-suffix without a custom DNS setup

[04:35:31.0000] <hallvors>
but most cross-origin tests should be JS anyway

[04:36:04.0000] <jgraham>
hallvors: Yeah, you will see in various places functions for taking a url and adding "www." just after the scheme part

[04:36:20.0000] <hallvors>
:)

[04:36:22.0000] <odinho_>
I had a support.js and some functions doing some smart stuff there.

[04:36:38.0000] <jgraham>
There would probably be something to be said for having a w3c-test stdlib for this kind of thing

[04:36:41.0000] <odinho_>
But it would be nice to have some sort of global variables where you could configure some stuff for this.

[04:40:40.0000] <hallvors>
does anyone know what Anne means by "UMP"  in http://lists.w3.org/Archives/Public/public-webapps/2010JanMar/0638.html ?

[04:40:59.0000] <hallvors>
/me apologises if this is a very silly question

[04:41:41.0000] <zcorpan>
http://www.w3.org/TR/UMP/

[04:45:24.0000] <hallvors>
if create an anonymous XHR request, rig it to GET a same-origin resource and set a custom header, it will trigger a preflight and the same-origin resource will have to opt in to receiving that custom header?! Right?

[04:47:27.0000] <hallvors>
maybe I should wait until Anne wakes up?

[05:14:59.0000] <ambv>
jgraham: as for the README.rst rewording, I'll update it in a separate PR

[05:15:38.0000] <ambv>
basically I'm proposing to rewrite it slightly using a more affirmative language and putting the most important information first

[05:16:07.0000] <ambv>
for instance: https://gist.github.com/ambv/0baf1dfb42548cf17959 /cc gsnedders

[05:19:17.0000] <jgraham>
FWIW I think using alternate treebuilders is README level

[05:20:18.0000] <ambv>
sure, I didn't take it out, it wasn't there before the edit

[05:21:36.0000] <jgraham>
I know

[05:46:12.0000] <ambv>
jgraham: something like https://gist.github.com/ambv/0baf1dfb42548cf17959 ?

[05:47:39.0000] <jgraham>
ambv: Looking good!

[05:48:08.0000] <ambv>
OK, pushing for RTC

[05:49:05.0000] <jgraham>
Real time Communication?

[05:49:11.0000] <ambv>
review-then-commit

[05:49:12.0000] <ambv>
:-)

[05:49:22.0000] <ambv>
an Apache term, gsnedders is using it as well

[05:51:24.0000] <jgraham>
Oh, I understand review-then-commit. But not the acronym :)

[10:27:09.0000] <ambv>
gsnedders: accept https://critic.hoppipolla.co.uk/showcomment?chain=176 as resolved, please

[11:12:54.0000] <TabAtkins>
annevk: Mind reviewing http://json-ld.org/spec/latest/json-ld-api/#the-application-programming-interface to make sure it's invoking the right jargon wrt futures?

[11:13:01.0000] <TabAtkins>
Looks reasonable to me.

[11:19:42.0000] <annevk>
TabAtkins: I guess

[11:31:59.0000] <GPHemsley>
The new Gmail compose interface really makes me angry

[11:32:20.0000] <TabAtkins>
Join zewt's club.  I'll be on the other side, loving the crap out of it.

[11:32:52.0000] <GPHemsley>
zewt, TabAtkins: Out of curiosity, what browser do you use?

[11:32:55.0000] <annevk>
It's okay, if only it didn't encourage top-posting.

[11:32:58.0000] <TabAtkins>
Chrome.

[11:33:04.0000] <TabAtkins>
annevk: That's nothing particularly new. :/

[11:33:34.0000] <GPHemsley>
Every time I try to write an e-mail, there's some portion of it that I have to fight with.

[11:33:38.0000] <GPHemsley>
And, FTR, I use Aurora.

[11:34:08.0000] <GPHemsley>
I personally do not like being treated like I don't know how to use a form element

[11:34:22.0000] <GPHemsley>
I don't need some babysitter go-between hijacking text inputs and textboxes.

[11:34:43.0000] <TabAtkins>
On the other hand, I feel like the new compose finally works like I *want* composes to work.

[11:34:48.0000] <TabAtkins>
(Except for a few small editting bugs.)

[11:35:25.0000] <GPHemsley>
Those editing bugs are what bug me the most.

[11:35:52.0000] <GPHemsley>
Gmail has hijacked my keyboard shortcuts and navigation for a while, but now it's worse

[11:36:06.0000] <GPHemsley>
I can't highlight and overwrite without being punted to the end of the e-mail

[11:36:17.0000] <GPHemsley>
I can't drag and drop without being navigated to some other part of the e-mail

[11:36:27.0000] <GPHemsley>
I can't edit the To/CC fields by hand

[11:36:34.0000] <GPHemsley>
(Which means I can't swap addresses)

[11:37:38.0000] <TabAtkins>
I don't understand the lightlight one, or the drag-and-drop one.

[11:37:45.0000] <TabAtkins>
What do you mean by "swap addresses"?

[11:37:46.0000] <GPHemsley>
And, (probably unrelatedly,) last night I was reading a long Google Groups thread and was scrolled back to the top when a new post came in

[11:37:52.0000] <TabAtkins>
s/lightlight/highlight/

[11:38:47.0000] <GPHemsley>
If I highlight a multiple lines of of a reply e-mail, and then hit enter multiple times to delete them and start writing, the cursor ends up at the bottom of the message

[11:38:49.0000] <GPHemsley>
under my signature

[11:39:02.0000] <TabAtkins>
Oh, that's bizarre.  I haven't experienced that.

[11:39:15.0000] <GPHemsley>
If I highlight a chunk of text in a reply and drag it to another part of the e-mail, weird things happen.

[11:39:21.0000] <TabAtkins>
Likely a random incompat issue with editting APIs.

[11:39:51.0000] <GPHemsley>
And if I want to switch the e-mail addresses in the To and CC fields, I have to delete them and retype them

[11:39:59.0000] <GPHemsley>
whereas I used to just be able to cut and paste

[11:40:08.0000] <TabAtkins>
You can just drag them.

[11:40:23.0000] <GPHemsley>
oh, hmm, I see that

[11:40:27.0000] <GPHemsley>
totally non-obvious

[11:40:48.0000] <TabAtkins>
I never use highlight+drag text, so I dunno what that might be doing.  (I consider that behavior a bug when I accidentally activate it. >_<)

[11:41:06.0000] <GPHemsley>
interesting

[11:41:06.0000] <TabAtkins>
GPHemsley: It was obvious to me - the "chips" looks draggable.  Different experiences, I suppose.

[11:41:28.0000] <GPHemsley>
I guess

[11:41:34.0000] <GPHemsley>
but hovering doesn't give any indication

[11:41:40.0000] <GPHemsley>
it just pops up a useless box

[11:41:52.0000] <TabAtkins>
Ooh, you're right.  It should produce a grabber icon.

[11:41:55.0000] <TabAtkins>
Filing bug now.

[11:42:00.0000] <GPHemsley>
kthx

[11:43:23.0000] <GPHemsley>
I used to use Gmail in Mozilla Prism before this new compose window

[11:43:35.0000] <GPHemsley>
(I'm probably the only one on Earth still using that application)

[11:44:02.0000] <GPHemsley>
allowing me to have Gmail in a separate app

[11:44:10.0000] <GPHemsley>
but attachments no longer work

[11:44:15.0000] <GPHemsley>
since it's based on Firefox 3.6

[11:45:09.0000] <GPHemsley>
I also still hate how the new Gmail design wastes a lot of whitespace

[11:45:24.0000] <GPHemsley>
(for whatever meaning of "new" is relevant here)

[11:46:09.0000] <TabAtkins>
Tried switching to the more compact theme?

[11:46:17.0000] <TabAtkins>
(from the gear dropdown, upper right)

[11:46:53.0000] <TabAtkins>
Heh, assuming that webapps should care about FF 3.6 is obviously a recipe for disappointment. ^_^

[11:47:15.0000] <GPHemsley>
This is *in* the compact theme

[11:47:22.0000] <GPHemsley>
If I used anything else, my head would explode

[11:48:15.0000] <GPHemsley>
And if the window is wide enough to display the full subject of an e-mail, why truncate it half-way through?

[11:48:23.0000] <GPHemsley>
/me is just ranting about Gmail at this point

[11:49:19.0000] <GPHemsley>
I also don't like how the list of labels no longer scrolls with the page... I have to scroll it separately to get to stuff at the end of the alphabet

[11:49:32.0000] <zewt>
also where the heck did colored names go

[11:49:51.0000] <zewt>
obnoxious that you used to be able to tell the Ians apart, but now they're all just "Ian"

[11:50:04.0000] <GPHemsley>
I mean, I guess that sort of makes sense... but it's jarring

[11:50:06.0000] <TabAtkins>
Yeah, I liked the colored names.

[11:50:28.0000] <GPHemsley>
Ah, yeah, zewt has a point. I'd missed that. (Though I think the anonymous icons change colors.)

[11:50:53.0000] <zewt>
it's the from column in mailboxes where it was useful

[11:51:24.0000] <GPHemsley>
Hmm... I'm not sure I remember that

[11:51:42.0000] <GPHemsley>
I also hate how they keep changing the available label color scheme

[11:51:49.0000] <GPHemsley>
rendering all my old label colors obsolete

[11:52:05.0000] <GPHemsley>
meaning I can no longer use the same color for new labels without jumping through color-picking hoops

[11:52:26.0000] <TabAtkins>
That's legit.  Mind summarizing the issue so I can report it better?

[11:52:26.0000] <zewt>
really though the biggest thing gmail is missing is being able to properly filter sublabels

[11:52:32.0000] <TabAtkins>
zewt: God, yes.

[11:52:43.0000] <GPHemsley>
TabAtkins: Which one? the label colors?

[11:52:51.0000] <TabAtkins>
GPHemsley: Yeah.

[11:52:54.0000] <zewt>
so 1: i can filter "anything not matched by another filter in this group", and 2: so grouped labels can view all labels underneath them

[11:53:09.0000] <zewt>
instead i have to have this giant matrix of "a && !b && !c && !d && !e"

[11:53:33.0000] <TabAtkins>
zewt: Yes on both.  I made a master label for all my standards lists, and it's worthless for anything but organizing the labels panel (which is what it was originally for, so yay?).

[11:53:54.0000] <GPHemsley>
TabAtkins: I've had Gmail since 2004, and have used labels since they were introduced (whenever that was). In the beginning, there was a default set of colors. So I used various choices to categorize my labels. Over the years, that default set of colors has changed, for whatever reason, but my old labels have not be recolored.

[11:54:22.0000] <GPHemsley>
TabAtkins: If I create a new label that I want to be in the same color category as other labels, I can no longer find the same color because it has been replaced.

[11:54:47.0000] <TabAtkins>
GPHemsley: Got it.  You can add custom colors, but we should probably have added custom colors automatically for people *using* colors that we removed.

[11:54:50.0000] <GPHemsley>
TabAtkins: And the default color set seems to have changed more than once.

[11:54:56.0000] <GPHemsley>
TabAtkins: Yes, exactly.

[11:56:29.0000] <GPHemsley>
I'd also like a search filter for e-mail that isn't labeled

[11:56:35.0000] <zewt>
they're also tinkering with the editor too much, so it's accumulating weird bugs

[11:56:48.0000] <zewt>
how many times have I tried to delete a blank line inside a quote, and ended up deleting the whole mail or something

[11:56:52.0000] <GPHemsley>
(including treating labels like "inbox" as unlabeled)

[11:57:21.0000] <GPHemsley>
zewt: Yeah, that seems similar to what I was complaining about: I get pushed to the end of the e-mail when i do that.

[11:58:17.0000] <TabAtkins>
GPHemsley: Filed.

[11:58:56.0000] <GPHemsley>
TabAtkins: Thanks. Is there any public place i can file these directly?

[11:59:08.0000] <TabAtkins>
Not that I know of - I'm using the internal bugfiler.

[11:59:12.0000] <GPHemsley>
k

[11:59:22.0000] <zewt>
the public google trackers have always been a black hole for me

[12:03:35.0000] <GPHemsley>
In a related area, I hate how the Gmail Android app notifies me when I archive mail via the Web

[12:03:54.0000] <GPHemsley>
It should only notify me when there's new mail, not when there's less old mail

[12:04:17.0000] <GPHemsley>
It also notifies me when I mark something as unread

[12:04:39.0000] <TabAtkins>
That's... weird.

[12:05:02.0000] <GPHemsley>
Not really... it's just not very smart

[12:05:08.0000] <GPHemsley>
it notifies me whenever the mailbox changes state

[12:05:15.0000] <TabAtkins>
Yeah, which is weird.  And dumb.

[12:05:16.0000] <GPHemsley>
without any regard to what the new state actually is

[12:05:30.0000] <GPHemsley>
Dumb, yes. Weird, I don't think so.

[12:07:50.0000] <zewt>
can someone tell the google ui people that having buttons titled "nope" instead of "no" do not make them cool

[12:07:54.0000] <zewt>
just sayin'

[12:08:06.0000] <TabAtkins>
Why you gotta crush their dreams?

[12:09:27.0000] <GPHemsley>
It'd also be cool to filter labels by color

[12:09:33.0000] <GPHemsley>
so that I can see which labels have what color

[12:09:46.0000] <GPHemsley>
(and then, when that other thing gets fixed, fix my newer label colors)

[12:10:30.0000] <GPHemsley>
That's probably enough for now

[12:10:42.0000] <GPHemsley>
highest priority annoyances, though, are the ones I have with the compose window

[12:10:50.0000] <GPHemsley>
because they are kinda the lifeblood of an e-mail app

[12:34:32.0000] <jgraham>
marcosc: Why not just Alarm.cancel()?

[12:34:54.0000] <marcosc>
that could work

[12:35:38.0000] <jgraham>
(it also seems kind of ironic that you can't have an Alarm constructor because you have to use futures)

[12:35:49.0000] <jgraham>
(or something async at least)

[12:36:48.0000] <marcosc>
jgraham: yeah, this affects a few APIs

[12:37:01.0000] <marcosc>
It means having a lot of:

[12:37:06.0000] <marcosc>
Foo.create()

[12:37:14.0000] <marcosc>
I'm not a big fan of that

[12:37:34.0000] <marcosc>
but can live with it if the Future provides some significant benefits

[12:37:39.0000] <jgraham>
Sure

[12:38:05.0000] <jgraham>
Would be find of neat if one could write "future Alarm()" instead of "new Alarm()"

[12:38:30.0000] <jgraham>
Although it doesn't really make sense since most things are one or the other

[12:38:44.0000] <marcosc>
yeah, I know what you mean

[12:38:49.0000] <jgraham>
Anyway, I'm not sure why this uses navigator

[12:39:06.0000] <marcosc>
I know, it should just use the interface object

[12:39:35.0000] <marcosc>
There is a lot of that stuff in the SysApps API. Working to remove it

[12:39:48.0000] <marcosc>
Everyone thinks they have to copy geolocation

[12:39:59.0000] <marcosc>
YOU DON'T HAVE TO COPY GEOLOCATION

[12:40:02.0000] <marcosc>
:)

[12:40:10.0000] <marcosc>
Someone W3C meme that

[12:40:33.0000] <marcosc>
rwaldron keeps telling people that too, but people get scared or something

[12:41:25.0000] <jgraham>
You mean with static methods, like AlarmManager.add?

[12:46:41.0000] <marcosc>
jgraham: yeah. But we just rename AlarmManager to Alarms or something

[12:50:39.0000] <TabAtkins>
Using Futures doesn't have to mean forgoing a constructor.  Future-ness is (or should be) like EventTarget-ness - something you can mix into anything.

[12:51:10.0000] <TabAtkins>
The places that currently prevent that are bugs.

[13:02:42.0000] <jgraham>
TabAtkins: I don't see what new Alarm() would do (other than block the main thread, which is obviously unacceptable)

[13:03:37.0000] <TabAtkins>
Return an Alarm(), which contains the passed data and a .cancel() method, and which can be .then()'d if you want to recieve notice of sucess/failure in registering it.

[13:03:50.0000] <TabAtkins>
Sorry, "Return an Alarm,...".

[13:06:48.0000] <jgraham>
Hmm, interesting. But it does mean that futures rather take over your API

[13:07:14.0000] <TabAtkins>
Only insofar as they represent a standardized way to register callbacks for success/failure.

[13:07:32.0000] <jgraham>
Now any method that requires the object to actually be fully constructed requires a Future

[13:07:33.0000] <TabAtkins>
Other than that, it's a straightforward API, which lets you create and cancel alarms.

[13:07:47.0000] <TabAtkins>
Oh, hm.

[13:08:27.0000] <TabAtkins>
Is the alternative just making an async constructor function, and then having a normal object?

[13:08:35.0000] <jgraham>
Yes

[13:08:38.0000] <TabAtkins>
kk.

[13:08:52.0000] <TabAtkins>
What we really need is to add "await" to the language.  :/

[13:09:17.0000] <jgraham>
How does that work?

[13:09:54.0000] <TabAtkins>
You have to declare the surrounding function to be async somehow (which forces it into returning a Future).  Then, you can use "await" in the body, which has a similar effect to "yield" in a generator.

[13:10:20.0000] <TabAtkins>
(It's basically identical to how you use generators today to *model* futures, in libraries like Task.js that provide a control-inverter for you.

[13:12:46.0000] <TabAtkins>
More explanation - an await expression is "await <expr>", where <expr> is either a plain value or a Future.  If it's a plain value, the await expression just returns that value.  If it's a future, your function pauses (like a generator does) until the future resolves, at which point the await expression resolves to the future's value.

[13:13:09.0000] <TabAtkins>
So you can write code that looks sync by using "await" to transform Futures into plain values.

[13:13:42.0000] <TabAtkins>
The original Future returned by the outer function is pending until the function returns or throws, at which point it accepts/rejects.

[13:13:59.0000] <jgraham>
So it's like python coroutines, kind of?

[13:14:31.0000] <TabAtkins>
It's shallow co-routines, with identical power to generators but an inverted semantic.  Dunno how powerful Python coroutines are.

[13:15:13.0000] <jgraham>
http://www.dabeaz.com/coroutines/index.html is more or less the canonical guide to python coroutines

[13:16:12.0000] <jgraham>
But yes, I think I get the idea, and it does seem like it would be helpful

[13:16:24.0000] <TabAtkins>
You can implement the semantic *using* generators and a manager - you just use "yield" instead of "await".  The manager function takes your generator and calls .next() repeatedly (receiving a Future from your yield call), and does the waiting for you, restarting you with .send() when it completes.

[15:19:43.0000] <annevk>
Where is HTML Imports defined?

[15:20:12.0000] <annevk>
dglazkov: ^

[15:22:28.0000] <dglazkov>
annevk: https://dvcs.w3.org/hg/webcomponents/raw-file/tip/spec/imports/index.html

[15:22:52.0000] <annevk>
dglazkov: trying to understand https://www.w3.org/Bugs/Public/show_bug.cgi?id=21976 basically

[15:22:55.0000] <annevk>
dglazkov: thanks btw

[15:23:09.0000] <jsbell>
annevk: Ages ago I asked about adding |readonly attribute DOMString message| to DOMError. I'm planning to actually implement that now. What's the best way to get it into the dom spec? Fork and send you a pull request?

[15:23:31.0000] <annevk>
jsbell: heh, been thinking about adding that earlier today

[15:23:53.0000] <annevk>
jsbell: I think it's easier for me to add it after I've looked at this HTML imports stuff

[15:24:08.0000] <jsbell>
great, thanks. I'll pester you in another few months if it doesn't materialize

[15:24:50.0000] <annevk>
sooner is fine, but yes

[15:24:57.0000] <annevk>
dglazkov: ownerNode should be Element

[15:25:14.0000] <annevk>
dglazkov: it's Node for style sheets because it can be a ProcessingInstruction there

[15:25:33.0000] <dglazkov>
annevk: pls file bugs. I won't remember :)

[15:25:33.0000] <annevk>
dglazkov: for style sheets it should prolly become (Element or ProcessingInstruction) I guess

[15:25:38.0000] <annevk>
pfff

[15:25:44.0000] <dglazkov>
pfffff

[15:26:35.0000] <annevk>
dglazkov: there's no component

[15:28:54.0000] <dglazkov>
there's a nice button

[15:29:00.0000] <dglazkov>
that does pretty much everything

[15:29:35.0000] <dglazkov>
:)

[15:29:52.0000] <annevk>
dglazkov: I did, the component fails

[15:29:58.0000] <dglazkov>
wat

[15:30:19.0000] <dglazkov>
config fail :(

[15:30:26.0000] <dglazkov>
sorry, use "Component Model"

[15:30:28.0000] <dglazkov>
will fix

[15:30:31.0000] <annevk>
done

[15:32:54.0000] <annevk>
dglazkov: why not <link>.importContent?

[15:33:07.0000] <annevk>
dglazkov: would make the whole construct much simpler

[15:33:22.0000] <dglazkov>
annevk: I think there's a bug for that already.

[15:33:37.0000] <dglazkov>
see https://www.w3.org/Bugs/Public/showdependencytree.cgi?id=20683

[15:33:44.0000] <dglazkov>
https://www.w3.org/Bugs/Public/show_bug.cgi?id=21225

[15:34:18.0000] <annevk>
yeah that's much better

[15:34:29.0000] <annevk>
i'm gonna mark my bug as a dupe of that I guess

[15:36:45.0000] <boogyman>
The idea behind an import is that you take advantage of User Agent caching in the master, opposed to separate documents?

[16:11:54.0000] <annevk>
jsbell: added

[16:12:22.0000] <jsbell>
annevk: awesome, thanks

[16:35:10.0000] <annevk>
GPHemsley: re https://www.w3.org/Bugs/Public/show_bug.cgi?id=21307 ; XHR does that kind of thing


2013-05-09
[23:50:57.0000] <roc>
hmm, I thought http://wiki.whatwg.org/wiki/Advice_for_people_writing_specs had more in it...

[23:56:58.0000] <Ms2ger>
http://wiki.whatwg.org/wiki/Howto_spec ?

[00:00:35.0000] <roc>
/me waits for that to load

[00:02:16.0000] <Ms2ger>
Looks like it's back

[00:08:46.0000] <roc>
thanks

[00:10:06.0000] <Ms2ger>
Np

[00:19:17.0000] <Ms2ger>
zcorpan, the answer to your hg question yesterday was "hg merge", fwiw

[00:37:24.0000] <kochi>
MikeSmith: ping?

[00:38:31.0000] <kochi>
Is Mike in US now?

[00:38:42.0000] <asmodai>
With Opera moving engine and all that, does it mean it will also share more of Chrome's WebDriver setup?

[01:19:54.0000] <darobin>
the W3C RF policy turns 10 this Sunday

[01:55:28.0000] <jgraham>
darobin: Planning a party? Will there be jelly and ice cream?

[01:56:06.0000] <jgraham>
In other news I note that all the "reformists" running for the AB are ex-Microsoft

[01:56:50.0000] <roc>
hehe

[01:57:02.0000] <roc>
the deprogramming takes a while, but it is effective

[05:31:37.0000] <gsnedders>
jgraham, ambv: is there anything for html5lib you want me to do *today*?

[05:32:33.0000] <ambv>
gsnedders: decide what to do about http://code.google.com/p/html5lib/issues/detail?id=162

[05:32:47.0000] <ambv>
it's not moved to GitHub, found it by accident

[05:39:50.0000] <gsnedders>
ambv: Per myself and jgraham's attitude before, it's not a regression from our last couple of releases so not 1.0 material

[05:39:59.0000] <gsnedders>
ambv: On the other hand, I won't say no to fixing it.

[05:40:05.0000] <gsnedders>
/me wonders why that isn't moved over

[05:42:52.0000] <ambv>
gsnedders: you can also convince jgraham to adopt my proposed html5lib logo

[05:42:54.0000] <ambv>
https://github.com/ambv/html5lib-logo

[05:43:14.0000] <gsnedders>
I don't have jgraham's on a leash to convince him everything. :)

[05:43:53.0000] <ambv>
try this: "jgraham: FWIW I find ambv's logo better than no logo."

[05:44:18.0000] <ambv>
I'm specifically targetting this sad octocat here - https://github.com/html5lib

[05:44:52.0000] <gsnedders>
ambv: On the other hand, I can just ignore jgraham because I'm an owner of the Github organization. :P

[05:48:42.0000] <ambv>
:)

[05:49:00.0000] <ambv>
OTOH, I hate when somebody ignores me.

[05:51:28.0000] <gsnedders>
Especially since I'm spending a fair bit of time around him in the next week. After that I can more easily ignore him. :P

[06:09:36.0000] <jgraham>
gsnedders: Tell me why my critic install has decided it can't create directories when trying to fetch from github?

[06:09:44.0000] <jgraham>
That would be really useful

[06:09:59.0000] <jgraham>
Because at the moment I am geting like 100 error emails an hour

[06:10:10.0000] <gsnedders>
jgraham: Perms on the containing directory?

[06:10:12.0000] <gsnedders>
Dunno.

[06:11:39.0000] <jgraham>
Well that is the only thing I can think of too

[06:11:57.0000] <jgraham>
But it looks fine, and I have no idea why it would suddenly change

[06:12:29.0000] <ambv>
it's probably quietly suggestion migration to GitHub...

[06:12:36.0000] <ambv>
*suggesting

[06:14:55.0000] <jgraham>
You think 100 emails an your is quiet?

[06:15:28.0000] <jgraham>
That kind of insanity might also explain why you think that github reviews are useful :p

[06:17:19.0000] <Ms2ger>
an your?

[06:18:21.0000] <jgraham>
*an hour

[06:25:21.0000] <jgraham>
Oh

[06:25:24.0000] <jgraham>
hahaha

[06:25:34.0000] <jgraham>
I have run out of subdirectories

[06:25:46.0000] <jgraham>
I wonder if they are supposed to get cleaned up

[06:30:30.0000] <darobin_>
jgraham: not all the reformists are ex-MS, Virginie isn't for instance

[06:30:49.0000] <darobin_>
also, there is debate as to whether there may be some crypto-reformists in the rest :)

[06:41:23.0000] <jgraham>
darobin: It's hard to tell from the statements. I was going from tantek's list

[06:43:27.0000] <hsivonen>
does anyone have a (Member-confidential) link at hand for previous AC rep positions on permissive licensing?

[06:57:31.0000] <darobin>
hsivonen: well there are the previous votes, and probably some discussions in the ac-forum

[06:59:31.0000] <darobin>
hsivonen: I'm not sure if those are member-only or team-only: https://www.w3.org/2002/09/wbs/33280/htmllicense2010/results and https://www.w3.org/2002/09/wbs/33280/doclic201105/results

[06:59:39.0000] <darobin>
note however that some of the positions expressed there have changed

[06:59:55.0000] <darobin>
more than anything the results indicate confusion when faced with the PSIG license

[07:01:16.0000] <darobin>
a lot of confusion in fact; I wouldn't put much faith in the results in either direction

[07:42:36.0000] <ambv>
gsnedders: who owns http://www.ohloh.net/p/html5lib ?

[07:43:35.0000] <gsnedders>
ambv: I do, seemingly.

[07:43:46.0000] <ambv>
github it.

[07:44:00.0000] <ambv>
ungooglecode it.

[07:47:42.0000] <gsnedders>
ambv: Does Read the Docs just automatically just use README and CHANGES without any further setup?

[07:47:54.0000] <ambv>
no, but I set it up

[07:48:09.0000] <Ms2ger>
Looks like http://www.ohloh.net/p/html5lib is suddenly dead

[07:48:15.0000] <gsnedders>
ambv: Is there no anything in the repo?

[07:48:34.0000] <gsnedders>
Ms2ger: I renamed it to html5lib-python, though maybe it should just stay as html5lib

[07:48:37.0000] <ambv>
not finished yet, currently lives at https://github.com/ambv/html5lib-python/tree/doc/doc

[07:49:01.0000] <gsnedders>
Ah, it comes from your repo.

[07:49:20.0000] <ambv>
yeah, that's temporary

[07:49:46.0000] <gsnedders>
ambv: Would rather different section in docs for public API and internal APIs, FWIW

[07:49:55.0000] <gsnedders>
Hence html5lib.trie wouldn't appear in the public one.

[07:50:06.0000] <gsnedders>
Obv. the public API is more important. :)

[07:50:12.0000] <ambv>
sure, this is autogenerated

[07:50:29.0000] <gsnedders>
Ms2ger: Moved it back to html5lib, albeit with the new name.

[07:50:31.0000] <ambv>
next up: pruning it and commenting the code in a style that Sphinx understands as well

[07:50:49.0000] <Ms2ger>
gsnedders, ta

[07:51:05.0000] <ambv>
and moving the rest of the stuff from the "docs" at Google Code so we can kill it

[07:51:12.0000] <ambv>
and just leave a link to html5lib.rtfd.org

[07:51:16.0000] <gsnedders>
ambv: Yeah, getting as much from the docstrings would be nice.

[07:51:22.0000] <gsnedders>
*as much as possible

[07:51:52.0000] <gsnedders>
ambv: FWIW, seemingly anyone with an ohloh account can edit the html5lib page.

[07:52:01.0000] <ambv>
interesting.

[07:52:09.0000] <ambv>
what do you think about the rtfd.org effort so far?

[07:52:31.0000] <Ms2ger>
gsnedders, I think that's only as long as nobody claimed to be a manager

[07:52:38.0000] <gsnedders>
Ms2ger: Indeed.

[07:52:53.0000] <gsnedders>
Ms2ger: But that's the current state.

[07:53:21.0000] <ambv>
"User gsnedders does not exist"

[07:53:23.0000] <gsnedders>
ambv: I think it's a good idea, even if I was planning on doing it post 1.0. :)

[07:53:33.0000] <gsnedders>
ambv: On rtfd?

[07:53:35.0000] <gsnedders>
Or what?

[07:53:36.0000] <ambv>
yeah

[07:53:42.0000] <gsnedders>
Yes, I have no account. :)

[07:53:47.0000] <ambv>
I'll add you as a maintainer as well

[07:53:53.0000] <ambv>
increase the bus factor

[07:54:08.0000] <Ms2ger>
/me throws a bus at ambv 

[07:54:23.0000] <ambv>
hey, that was a PCI bus

[07:56:10.0000] <jgraham>
/me votes himself in as a maintainer

[07:57:11.0000] <gsnedders>
jgraham: Should we leave you as maintainer in setup.py or not?

[07:58:27.0000] <jgraham>
gsnedders: I don't really see why not

[07:59:14.0000] <jgraham>
Seems kind of stupid that it should be a single person

[08:01:09.0000] <Ms2ger>
"a very low number of source code comments"

[08:01:55.0000] <jgraham>
I think automated quality analysis tools are kind of dumb

[08:02:19.0000] <jgraham>
Since they can't actually analyse quality only bad proxies

[08:03:17.0000] <jgraham>
It's not even that sure that the proxies are correlated with quality

[08:04:03.0000] <jgraham>
e.g. a high number of comments could indicate a lot of misleading comments, or code that has comments duplicating the functionality, or an over complex codebase

[08:04:26.0000] <jgraham>
s/functionality/code/

[08:08:04.0000] <ambv>
/me added jgraham as a maintainer on rtfd.org

[08:10:08.0000] <hsivonen>
darobin: thanks

[08:10:23.0000] <jgraham>
ambv: Thanks

[08:11:30.0000] <ambv>
I'll push the docs to master when everything covered on code.google.com is in

[08:12:34.0000] <darobin>
hsivonen: if you want to dig more, there's w3c-ac-forum

[08:40:05.0000] <jgraham>
So sanitising with treewalkers is totally bust, since they have (namespace, name) pairs for attributes rather than just names, like the tokenizer emits

[08:40:16.0000] <jgraham>
This whole design is a bit dubious

[08:40:20.0000] <Ms2ger>
/me looks for a victim to review https://github.com/w3c/web-platform-tests/pull/95

[08:41:54.0000] <jgraham>
Critic says me or annevk or zcorpan. Which isn't quite wrong. Although I would think that odinho should be on that list too. And gsnedders. And probably some others that aren't (ex-)Opera

[08:46:01.0000] <darobin>
does anyone here know where the people involved in the crazy toolkitchen shims for web components hang out?

[08:46:46.0000] <jgraham>
The Google offices?

[08:46:57.0000] <darobin>
heh

[08:47:14.0000] <darobin>
making their shit work isn't all that straightforward, to say the least

[08:47:34.0000] <Ms2ger>
odinho, hi :)

[08:47:53.0000] <ambv>
gsnedders: will we create and maintain 1.0 branch once it's released? ISTM it's possible to end up with 1.0.1 and 1.1.0. that will let us break API compatibility when required.

[08:51:18.0000] <jgraham>
Ms2ger: Nice tests

[08:51:46.0000] <Ms2ger>
jgraham, thank you :)

[08:53:04.0000] <jgraham>
I really wish github didn't have such a merge-happy default workflow :|

[08:55:00.0000] <odinho>
/me currently hiding

[08:55:17.0000] <Ms2ger>
odinho, oh, jgraham already reviewed

[08:55:28.0000] <ambv>
jgraham: it's the reason why it's successful.

[08:55:38.0000] <odinho>
phew

[08:56:32.0000] <Ms2ger>
odinho, http://i.qkme.me/3qih5c.jpg

[08:56:33.0000] <odinho>
That was fast.  Either I'm very slow or I do it too detailed.  I hope it's the last one, and then I should be more lenient :]

[08:57:23.0000] <gsnedders>
ambv: OTH, I'm trying to get any public API breakage in 1.0 so it doesn't matter. :P

[08:57:40.0000] <gsnedders>
ambv: Then it's relatively major things that will break lots which I'll call 2.0. We'll see.

[08:57:48.0000] <gsnedders>
Now, train.

[08:58:03.0000] <jgraham>
ambv: The reason that github is successful is that it only has default support for integrate-by-merge, not integrate-by-rebase? Interesting theory, please elaborate.

[08:58:38.0000] <ambv>
gsnedders: without a branch you'll have a hard time managing 1.0.2 and 2.0 at the same time.

[08:58:39.0000] <odinho>
ofc rebase would change the sha's.

[08:58:51.0000] <odinho>
But it could possibly have been an option.

[09:01:05.0000] <jgraham>
odinho: Well these tests followed a pretty clear pattern and were only testing a couple of lines of spec, so it wasn't the hardest review I've ever done

[09:03:08.0000] <odinho>
jgraham: Okay :] I didn't look much more than scroll through it and think "ouch, lots of lines :P"

[09:11:21.0000] <ambv>
jgraham: GitHub doesn't ever mention rebasing because it's fragile. They chose the straightforward option: merging. From GH's perspective if the user is interested in squashed commits, he should rebase when creating a pull request. If a project has a strict single-commit-PR policy, it should enforce it with their contributors.

[09:12:22.0000] <ambv>
This is why I was prepared to rebase my PRs on the go but we cannot use that since it breaks Critic.

[09:14:04.0000] <jgraham>
Rewriting commits that you already pushed, but pretending that nothing changed is just wrong

[09:14:25.0000] <jgraham>
But I don't see how rebasing is any more fragile than merging.

[09:14:59.0000] <ambv>
Excuse me but a merge is just another commit that you can revert.

[09:15:11.0000] <jgraham>
In either case the trivial case (where your branch is already based on master) is trivial

[09:15:29.0000] <jgraham>
And other cases require a human that understands what's going on

[09:15:51.0000] <jgraham>
I don't understand what point you are trying to make

[09:16:05.0000] <jgraham>
If anything a merge commit is *more* complicated than anything else

[09:16:17.0000] <jgraham>
Because it makes the history non-linear

[09:16:27.0000] <jgraham>
which makes it harder to understand

[09:16:34.0000] <jgraham>
and breaks e.g. git bisect

[09:16:51.0000] <ambv>
no, it's rebasing which breaks bisect. merge works just fine.

[09:17:07.0000] <Ms2ger>
Why would rebasing break bisect?

[09:17:21.0000] <jgraham>
OK, I think we must be talking past each other

[09:17:38.0000] <jgraham>
Because I don't understand how you can think that rebasing breaks bisect

[09:17:47.0000] <ambv>
Look.

[09:18:54.0000] <ambv>
Rebasing recreates history, potentially breaking its chronological order. Merging creates another chronological commit which is just like any other.

[09:19:02.0000] <jgraham>
Unless you mean that squashing breaks the ability to bisect within the squashed commits. Which is certainly true. But that's a totally different question compared to the method you use to get changes from topic branhces onto master

[09:19:55.0000] <jgraham>
Chronological of when things were committed on their topic branches seems entirely uninteresting

[09:20:01.0000] <TabAtkins>
Rebasing rewrites the original, *local* history.  Assuming you're not rebasing after pushing, though, the central history was never rewritten, and is always linear and sane.

[09:20:08.0000] <jgraham>
And merge commits are clearly not like any other

[09:20:15.0000] <jgraham>
They have multiple parents

[09:20:43.0000] <jgraham>
So if you try and bisect you have to have some strategy for dealing with the non-linear history

[09:21:05.0000] <jgraham>
That's *clearly* more complex than the case where master always has a strictly linear history

[09:22:06.0000] <jgraham>
/me wishes there was some way to draw diagrams in IRC

[09:22:20.0000] <jgraham>
Maybe I could try abusing combining characters to fit it all in one line? :)

[09:23:10.0000] <Ms2ger>
     ,--------,

[09:23:11.0000] <Ms2ger>
----<          >----

[09:23:11.0000] <Ms2ger>
     `--------�

[09:23:49.0000] <jgraham>
Yeah, I guess just drawing the diagram elsewhere and pasting would also work :p

[09:23:56.0000] <Ms2ger>
:)

[09:24:14.0000] <Ms2ger>
You could use <svg>...</svg>

[09:24:27.0000] <ambv>
TabAtkins: sure thing, which is why I think pull requests should be rebased when it makes sense. Specifically, pull requests should not have merge commits of their own.

[09:24:44.0000] <ambv>
But why would accepting a pull request have to end with a rebase is beyond me.

[09:24:50.0000] <jgraham>
Not sure that there's an irssi plugin that does svg :)

[09:24:59.0000] <TabAtkins>
Again, so that the master branch only ever has linear history.

[09:26:23.0000] <ambv>
TabAtkins: so when you later bisect knowing you had your last good commit on Monday and choose it as the "good", you might be surprised to find out a newer commit sitting *before* it in the linear history.

[09:27:16.0000] <TabAtkins>
If you're bisecting the master, but basing your memory of when commits happened on your activity in a feature branch, then sure?

[09:27:24.0000] <Ms2ger>
You mean that a commit can have an earlier timestamp than its parent?

[09:27:28.0000] <Ms2ger>
/me doesn't see the issue

[09:27:42.0000] <ambv>
Ms2ger: yes.

[09:29:38.0000] <ambv>
I agree that having many merge commits indicates a problem with your workflow. But avoiding merges at all costs doesn't look reasonable to me.

[09:29:52.0000] <jgraham>
A - B - C

[09:29:53.0000] <jgraham>
     \

[09:29:53.0000] <jgraham>
      D - E - F

[09:29:53.0000] <jgraham>
Original tree

[09:29:53.0000] <jgraham>
A - B - C - - -	M -

[09:29:54.0000] <jgraham>
     \	       /

[09:29:57.0000] <jgraham>
      D - E - F

[09:29:59.0000] <jgraham>
Merge

[09:30:02.0000] <jgraham>
A - B - C - D' - E' - F'

[09:30:04.0000] <jgraham>
     \

[09:30:07.0000] <jgraham>
      D - E - F

[09:30:10.0000] <jgraham>
Rebase

[09:30:14.0000] <jgraham>
To be clear, those are the two scenarios I'm talking about

[09:30:37.0000] <Ms2ger>
A - B - C - D' - E' - F'

[09:30:39.0000] <Ms2ger>
MQ

[09:30:54.0000] <Ms2ger>
Seems obvious what's simplest! :)

[09:31:26.0000] <jgraham>
Ms2ger: I think "having terrible support for local branches" is not simplest :p

[09:31:57.0000] <Ms2ger>
I've never had a need for a local branch

[09:32:02.0000] <ambv>
hm.

[09:32:26.0000] <ambv>
jgraham: Please elaborate.

[09:37:17.0000] <jgraham>
ambv: Well, I don't know what else to say. In the either case, you have a topic branch with 3 commits, whcih we assume are sensible atomic commits and have had all fixup!s squashed out of them. In the merge case, you keep your three original commits in the history, but at the expense of adding a merge commit that bifurcates the master branch and contains some of the information that is part of the patch (how merge conflicts were resolved). In the re

[09:42:05.0000] <ambv>
I think we violently agree here. Nobody wants "fixup!" commits in the history, nobody wants merge commits from branches which aren't considered long-lasting. The only thing I see we disagree on is "who should rebase" and "when".

[09:44:08.0000] <jgraham>
I don't want *any* merge commits in the history

[09:44:18.0000] <ambv>
You will after 1.0

[09:44:39.0000] <jgraham>
That wasn't a html5lib related statement

[09:44:46.0000] <jgraham>
But why?

[09:45:04.0000] <ambv>
How else can you manage having 1.0.x and 2.0.x simultaneously?

[09:45:45.0000] <Ms2ger>
Not merge?

[09:46:06.0000] <jgraham>
I don't see what problem merges would solve there

[09:46:41.0000] <Ms2ger>
Unless you want a 3.0.x that's a hybrid?

[09:46:56.0000] <ambv>
git checkout 1.0; hack hack hack; git commit   - and then -    git checkout 2.0; git merge 1.0; done.

[09:47:28.0000] <ambv>
your fix is now included in both branches, history is clear about what happened.

[09:47:49.0000] <ambv>
if you end up copying and pasting your fixes across branches, you might as well start using FTP.

[09:48:13.0000] <jgraham>
I'm not convinced

[09:48:27.0000] <jgraham>
It's not clear that you should be developing on a stable branch

[09:48:47.0000] <jgraham>
It's not clear that all commits from a stable branch should be applied to master

[09:48:57.0000] <ambv>
You shouldn't do features. But you should do bugfixes on stable branches.

[09:49:22.0000] <jgraham>
If you have a bugfix that applies to multiple branches cherry-pick is your friend

[09:50:07.0000] <jgraham>
Trying to merge the two branches just seems like it would create a mess

[09:52:03.0000] <ambv>
Have you tried? Because clearly cherry-pick is just a glorified copy and paste.

[09:52:39.0000] <Ms2ger>
Yes and yes

[09:53:25.0000] <ambv>
For one thing, trying to answer the question "where else is that fix applied?" isn't trivial without merges.

[09:54:25.0000] <Ms2ger>
It's trivial if you put all that in bugzilla :)

[09:55:00.0000] <ambv>
and then you switch from code.google.com to GitHub and you're screwed.

[09:55:02.0000] <jgraham>
A - B - C - D - E - F - G (master)

[09:55:03.0000] <jgraham>
     \

[09:55:03.0000] <jgraham>
      H - I - J           (1.0 branch)

[09:55:03.0000] <jgraham>
A - B - C - D - E - F - G - M

[09:55:03.0000] <jgraham>
     \                     /

[09:55:05.0000] <jgraham>
      H - I - J - - - - - -

[09:55:07.0000] <jgraham>
Merge

[09:55:10.0000] <jgraham>
A - B - C - D - E - F - G - J'

[09:55:12.0000] <jgraham>
     \

[09:55:15.0000] <jgraham>
      H - I - J

[09:55:17.0000] <jgraham>
cherry-pick

[09:55:32.0000] <jgraham>
So it looks to me like you end up with a totally unwanted tree if you do what you suggest

[09:56:38.0000] <Ms2ger>
A dag

[09:57:02.0000] <jgraham>
And, yes, I have seen a cherry-pick based approach work well enough for releasing complex consumer software

[09:58:19.0000] <jgraham>
I meant "tree" as-in http://git-scm.com/book/en/Git-Internals-Git-Objects#Tree-Objects

[09:58:32.0000] <jgraham>
Or perhaps as-in "working tree"

[09:59:26.0000] <ambv>
Sure thing, it's possible to develop software with both approaches. Pointing to authority is a weak argument so I'll just stick to your example

[09:59:55.0000] <ambv>
J' is really H with no way of knowing it's the same commit apart from kludges like keeping the message the same or using Bugzilla

[10:00:09.0000] <jgraham>
J' is really J

[10:00:18.0000] <jgraham>
And yes, tracking is hard

[10:00:20.0000] <ambv>
If it applies cleanly.

[10:00:42.0000] <jgraham>
But at least youu get the right result (i.e. you don't get the unwanted commits H and I in your history)

[10:02:32.0000] <ambv>
The solution to that is null-merging changes you don't want to see in newer series. Not that common really. Foward merging is quite clean.

[10:02:35.0000] <jsbell>
I always think of this picture when someone is explaining branching: http://foofighter1111.files.wordpress.com/2012/05/bttfii_2.jpg

[10:03:22.0000] <jgraham>
jsbell: heh

[10:04:18.0000] <jgraham>
ambv: What's null-merging, and how does it allow you to end up with a tree equivalent to the rebase one above, but using merges?

[10:06:05.0000] <jgraham>
Also, if J' doesn't apply cleanly as J then of course you need to change it. But that's true in either case; it's just that in one case the commit holds all the information and in the other it's split over the commit and the merge commit

[10:07:50.0000] <ambv>
A null-merge is a commit stating two commits as parents but only keeping state from one of them

[10:08:21.0000] <jgraham>
So you have a reference? google didn't help

[10:09:45.0000] <jgraham>
(I still don't understand how that would help, since in this case you need history from *part* of one branch and all of the other. Which I think you can only do by splitting two branches into three and having a 1.0.x-and-master branch)

[10:18:26.0000] <ambv>
jgraham: I can't find any definition. Here's how we use it with Python development: http://hg.python.org/cpython/log?rev=null+merge

[10:19:48.0000] <ambv>
For instance: http://hg.python.org/cpython/rev/7a45415956b9 -> change baseline: be6bbc9f0561 122d42d5268e         current baseline: be6bbc9f0561

[10:36:03.0000] <ambv>
So you null merge what you don't want, and then merge what you wanted separately. It's not perfect but it lets us minimize heads. If you apply a bugfix and see that all 3.x branches besides "default" are inactive, your work is done.

[10:41:52.0000] <ambv>
jgraham: Oh, actually it is documented here - http://docs.python.org/devguide/faq.html#how-do-i-make-a-null-merge

[10:46:04.0000] <gsnedders>
ambv: I just hope we don't have too much need for bugfix releases. :)

[10:46:08.0000] <gsnedders>
ambv: Or API changes. :)

[10:46:24.0000] <ambv>
:)

[10:47:30.0000] <gsnedders>
ambv: tl;dr: will create a 1.0.x branch when needed, IMO

[10:47:30.0000] <gsnedders>
:P

[10:49:05.0000] <ambv>
Sure. We can even do with cherry-picking since the project is small. If only git provided more metadata in the cherry-picked comment, it would be quite attractive.

[10:50:12.0000] <gsnedders>
Personally, at least, I tend to be very conservative with what goes in bugfix releases.

[10:50:23.0000] <gsnedders>
So cherry-picking works well. :P

[10:52:00.0000] <gsnedders>
What's the sdtatus wrt templates in HTML, BTW?

[10:52:14.0000] <gsnedders>
(People who, like, read the mailing list? :P)

[10:52:25.0000] <TabAtkins>
The <template> element, you mean?

[10:52:41.0000] <TabAtkins>
I think it's proceeding okay.

[10:53:30.0000] <gsnedders>
Is there any intention to move the parser stuff into HTML, I mean.

[10:53:49.0000] <TabAtkins>
I thought it got moved into the DOM Parsing spec?

[10:54:21.0000] <gsnedders>
Doesn't appear to have been?

[10:54:24.0000] <gsnedders>
Ms2ger: ^^

[10:54:39.0000] <gsnedders>
TabAtkins: Would be nice to have everything that changes the parse tree in one spec, IMO

[10:59:15.0000] <Ms2ger>
What?

[10:59:54.0000] <Ms2ger>
The parser is defined in HTML

[11:00:07.0000] <Ms2ger>
So that's where extensions should be

[11:00:42.0000] <gsnedders>
dglazkov: You!

[11:01:05.0000] <gsnedders>
dglazkov: What's the status of moving parsing HTML templates into the HTML spec?

[11:03:43.0000] <ambv>
gsnedders: I separated contributing information to CONTRIBUTING.rst so it's picked up by GitHub when somebody creates a pull request. I also expanded it, have a look if it reads right to you: https://github.com/ambv/html5lib-python/blob/contributing/CONTRIBUTING.rst

[11:04:44.0000] <gsnedders>
ambv: Do we want changelog entries for *everything*?

[11:04:55.0000] <gsnedders>
/me is unconvinced by this approach in general

[11:05:17.0000] <gsnedders>
Like, as an end-user of a library I tend to primarily want to know what APIs have changed and anything major.

[11:06:38.0000] <ambv>
I agree. We don't have AUTHORS so the changelog would be where attribution goes.

[11:07:10.0000] <ambv>
If we introduce AUTHORS, then we can clean up the changelog for every release.

[11:07:56.0000] <ambv>
The changelog is not so much about "what" but about "why".

[11:14:40.0000] <ambv>
gsnedders: so, separating AUTHORS. yay or nay?

[11:37:32.0000] <jgraham>
ambv: Oh I see. Yes I guess that would work, but it seems rather complicated and confusing compared to just cherry-picking

[11:38:06.0000] <ambv>
I agree both approaches have their good and bad sides ;-)

[11:38:33.0000] <ambv>
Python uses cherry picking as well between 2.7 and 3.x

[11:38:45.0000] <jgraham>
I mean it basically amounts to having to explicitly mark every commit that *isn't* on some branch

[11:39:28.0000] <ambv>
because the 2.7 and 3.x branches diverged so much it would not be feasible to maintain them together

[11:42:05.0000] <ambv>
jgraham: what do you think about https://github.com/ambv/html5lib-python/blob/contributing/CONTRIBUTING.rst and https://github.com/ambv/html5lib-python/blob/contributing/AUTHORS.rst

[11:49:43.0000] <manu-db>
TabAtkins: Do you have anyone on the Chrome team that is interested in browser-based payments?

[11:50:10.0000] <manu-db>
We are looking for a rep from Chrome team to show up to the next Web Payments telecon (we're discussing the Mozilla/FirefoxOS payments API): http://lists.w3.org/Archives/Public/public-webpayments/2013May/0041.html

[11:51:59.0000] <manu-db>
paul_irish: Previous two lines - if you could get someone from Chrome to show up for the Web Payments telecon discussing Firefox OS' browser-based payment API, that would be great.

[11:53:48.0000] <manu-db>
/me looks around for someone from Opera and the Safari team... hober, know of anyone at Apple that would be interested?

[11:55:24.0000] <ambv>
gsnedders: jgraham: you guys are from the Opera team, right? ^^^

[11:56:09.0000] <Ms2ger>
I guess jgraham might even count as Mobile

[11:56:12.0000] <odinho>
I have been reading the mailing list, but I'm not on specs any more.

[11:56:44.0000] <Ms2ger>
odinho, if you like specs, it seems Mozilla is hiring a lot of such people :)

[11:57:53.0000] <odinho>
Ms2ger: Indeed.  I actually flamed Mozilla a bit for having waaay to few spec people at a Firefox OS presentation here in Oslo.  And without any relation (I'm quite sure) Moz started hiring lots of spec people after that :-)

[11:58:46.0000] <Ms2ger>
odinho, I've said it for a long time, but it doesn't seem to have helped much until you came in ;)

[11:59:05.0000] <Ms2ger>
odinho, sounds like you're the better troll here!

[11:59:52.0000] <odinho>
Well. They said Mozilla specced XHR, and went on with the "we defend the open web" thing. In front of hundreds of people.

[12:00:21.0000] <Ms2ger>
Good I wasn't there, I'd have had to boo :)

[12:00:47.0000] <odinho>
So I said, hello, I'm from Opera, -- and you could see they were going shit-shit-shit :P

[12:01:11.0000] <Ms2ger>
"... and we specced XHR first."

[12:01:49.0000] <odinho>
Hehe. :-)

[12:14:34.0000] <gsnedders>
ambv: Yes.

[12:14:55.0000] <ambv>
looks nice, didn't notice html5lib had so many contributors

[12:14:59.0000] <gsnedders>
manu-db: I already prodded people internally, FWIW.

[12:15:46.0000] <manu-db>
gsnedders: thanks, appreciate that :) - if you want to e-mail me privately to shove somebody specific in the right direction, I'd be willing to do that. :P

[12:16:20.0000] <manu-db>
gsnedders: currently cc'ing Bruce Lawson on an e-mail about the upcoming browser payments telecon.

[12:16:26.0000] <ambv>
BBL, possibly in 2 hours

[12:29:45.0000] <jgraham>
gsnedders: Internal prodding sounds painful

[12:48:21.0000] <TabAtkins>
manu-db: Yes, yes I do.  Talk to esprehn⊙gc

[12:53:31.0000] <manu-db>
much obliged, TabAtkins :) - I'll ping them.

[12:58:05.0000] <manu-db>
jgraham: questioning gsnedders prodding methods is grounds for prodding...

[14:19:22.0000] <esprehn>
manu-db: what time is this telecon?

[14:25:44.0000] <manu-db>
esprehn: 8am PST

[14:28:05.0000] <manu-db>
esprehn: Web Payments telecon on browser payment API call details are here: http://lists.w3.org/Archives/Public/public-webpayments/2013May/0041.html

[14:34:37.0000] <esprehn>
ok, I can make that

[14:41:13.0000] <annevk>
TabAtkins: so in https://www.w3.org/Bugs/Public/show_bug.cgi?id=20600 are you not concerned with selectors requiring dropping unknown pseudo-elements on the floor and WebKit/Chrome not matching that model?

[14:43:23.0000] <manu-db>
esprehn: great, glad you'll be able to make it. :)

[14:54:16.0000] <TabAtkins>
annevk: I'm okay with Selectors changing the required behavior to match what Web Components needs.

[14:54:53.0000] <annevk>
I still don't see what's wrong with something like ::part(ident)

[14:55:32.0000] <annevk>
I don't see why we need to deviate from the established selectors model that is.

[14:55:40.0000] <TabAtkins>
annevk: Nothing wrong with it, except that it's longer than we'd ideally like, and it means that built-in components and author-defined components dont' use the same mechanisms.

[14:56:08.0000] <annevk>
They don't already...

[14:56:46.0000] <TabAtkins>
Not with x-, no.  But with "starts with -", they would.

[14:57:07.0000] <annevk>
Why, the ones we'd mint would not start with -

[14:57:27.0000] <annevk>
And the ones we'd mint would affect the parser of selectors...

[14:57:28.0000] <TabAtkins>
Depends on if we'd set that as the required pattern or not. ^_^

[14:57:56.0000] <annevk>
Well that ship has kinda already sailed with form controls which we're explaining in terms of this...

[14:58:21.0000] <annevk>
And if you don't think that ship has sailed, they could both use ::part :)

[15:00:33.0000] <esprehn>
::part seems pretty weird

[15:00:48.0000] <TabAtkins>
Form controls currently use a "starts with - and a prefix" pattern.

[15:01:28.0000] <annevk>
Hmm... http://www.w3.org/TR/css3-ui/#pseudo-elements

[15:02:06.0000] <TabAtkins>
I think IE might implement ::value.  The other three don't exist, but tantek is being stubborn and won't remove them.

[15:02:32.0000] <TabAtkins>
We also have ::placeholder.

[15:03:54.0000] <annevk>
I guess I could be okay with ::- but it seems kinda magic...

[15:04:44.0000] <TabAtkins>
Current element naming is kinda magic, too, since we only require that it has a dash in the name somewhere.

[15:05:22.0000] <tantek>
TabAtkins - which would you like me to remove?

[15:05:58.0000] <TabAtkins>
::choices, ::repeat-index, and ::repeat-item

[15:06:07.0000] <TabAtkins>
They won't survive CR, I guarantee.

[15:06:10.0000] <TabAtkins>
So might as well chop them now.

[15:06:18.0000] <annevk>
TabAtkins: note that there we actively try to avoid clashes between what authors and specs can introduce

[15:06:23.0000] <TabAtkins>
And xforms is dead.

[15:06:26.0000] <annevk>
TabAtkins: which is contrary to this ::- proposal

[15:06:40.0000] <tantek>
TabAtkins - not stubbornness, just haven't edited the draft to do so yet

[15:06:44.0000] <tantek>
consider them gone

[15:06:49.0000] <tantek>
they've been at risk for so long

[15:06:58.0000] <TabAtkins>
tantek: Long-term lack of editting looks like stubbornness from the outside. ^_^

[15:06:58.0000] <tantek>
and no-one cares to implement

[15:07:12.0000] <tantek>
TabAtkins, never ascribe to stubborness what you can ascribe to laziness.

[15:07:18.0000] <TabAtkins>
tantek: Also: I'm half a bottle of wine in, so I may be a little more abrasive than usual right now.

[15:07:23.0000] <tantek>
(or intertia)

[15:07:30.0000] <tantek>
inertia even

[15:08:06.0000] <tantek>
btw, speaking of removing things, the TV people are still complaining about the impending axing of the nav-* directional properties.

[15:08:25.0000] <annevk>
heh

[15:08:28.0000] <TabAtkins>
Produce a browser that someone cares about, and we can talk.

[15:08:34.0000] <tantek>
btw, even ::value has not shown to be especially well adopted, might punt that to CSS4-UI also

[15:08:53.0000] <tantek>
hence the note

[15:09:03.0000] <annevk>
it seems better to nuke those pseudo-elements indeed

[15:09:42.0000] <tantek>
yeah we'll just keep going to last call maybe

[15:09:50.0000] <annevk>
and instead of from the perspective of CSS, consider what we need from the perspective of web componentizing form controls

[15:09:50.0000] <TabAtkins>
I'd keep ::value around until the f2f (and put an agenda item in for it)

[15:09:54.0000] <a-ja>
aren't ::value and ::placeholder kinda tied together?

[15:10:03.0000] <TabAtkins>
a-ja: Maybe!

[15:10:14.0000] <TabAtkins>
Or rather, they *could* be, if we want to take them in that direction.

[15:10:27.0000] <tantek>
TabAtkins - nah, hence postponing to CSS4-UI rather than outright dropping (unlike the other three)

[15:10:32.0000] <tantek>
no need to keep it in 3

[15:10:58.0000] <tantek>
Tab are you going to be around at I/O?

[15:11:28.0000] <TabAtkins>
tantek: I'll be in the south bay for I/O.

[15:11:38.0000] <TabAtkins>
ie. not at i/o.

[15:11:50.0000] <tantek>
remote i/o

[15:16:14.0000] <annevk>
DHTML: document.write(); Ajax: XMLHttpRequest; HTML5: CSS3

[15:16:29.0000] <annevk>
aah forgot Web 2.0

[15:16:40.0000] <annevk>
Web 2.0: SEO

[15:16:43.0000] <TabAtkins>
web 2.-: jquery

[15:30:57.0000] <SimonSapin>
TabAtkins: what specifies the case-sensitivity of counter *names*?

[15:31:20.0000] <SimonSapin>
coundn’t

[15:31:24.0000] <TabAtkins>
SimonSapin: The fact that they're a user-defined identifier?

[15:31:33.0000] <SimonSapin>
couldn’t find it in 2.1, or lists 3

[15:31:37.0000] <TabAtkins>
I'm probably not invoking the grammar properly right now.

[15:31:43.0000] <SimonSapin>
hum, ok

[15:32:38.0000] <SimonSapin>
TabAtkins: yeah, should be <custom-ident> (defined in Values 3) rather than <ident>

[15:32:45.0000] <TabAtkins>
Yes.

[15:35:10.0000] <SimonSapin>
TabAtkins: do you have it written somewhere, or should I send this to www-style?

[15:35:30.0000] <TabAtkins>
No, go ahead and send it to www-style so I'll pick it up when I'm next ready to work on those specs.

[15:57:52.0000] <annevk>
TabAtkins: are you free Monday?

[15:58:01.0000] <annevk>
TabAtkins: or maybe Sunday or some such?

[15:58:09.0000] <nimbu>
annevk: are you still here?!

[15:58:14.0000] <annevk>
nimbu: uhuh

[15:58:48.0000] <TabAtkins>
annevk: I'm working with fantasai Monday, but otherwise kinda free.

[15:59:11.0000] <TabAtkins>
Sunday I'm available in the morning/early afternoon.  After that my wife's home.

[15:59:18.0000] <TabAtkins>
Also: were you on the Google campus this afternoon?

[16:00:10.0000] <annevk>
TabAtkins: wasn't

[16:00:35.0000] <annevk>
TabAtkins: Sunday morning would be nice, will ping you around then

[16:00:43.0000] <hober>
annevk: fyi the hangover helped put me in the right mood for wednesday's dnt meeting, thanks! :)

[16:00:46.0000] <annevk>
TabAtkins: oh actually, might get tricky too

[16:00:51.0000] <annevk>
hober: hehehe

[16:07:51.0000] <zewt>
gar where the heck did blocking sites in google search results go


2013-05-10
[17:18:28.0000] <annevk>
"We don't want the Web to be a bunch of cordoned-off apps." I wonder if Jeff Jaffe heard of SysApps.

[17:51:51.0000] <karlcow>
http://www.w3.org/QA/2013/05/perspectives_on_encrypted_medi.html

[17:52:32.0000] <zewt>
uninteresting

[17:53:39.0000] <karlcow>
Thus Spoke Zarathustra

[17:55:03.0000] <zewt>
i find it hard to believe anyone arguing for drm in an open web (an obviously fundamental incompatibility) doesn't have a personal stake in the matter, and arguing against it is, well, obvious; so arguments on both sides are uninteresting to me

[17:57:17.0000] <zewt>
(it's also an ancient argument, not significantly changed by the web context, so I'd be surprised if there's any new content in it this time around)

[02:44:39.0000] <jgraham>
Ms2ger: Yes, I think I agree with your reading of the spec

[02:47:18.0000] <Ms2ger>
Thanks :)

[04:04:09.0000] <hsivonen>
http://www.w3.org/QA/2013/05/perspectives_on_encrypted_medi.html#c4842306

[05:19:13.0000] <Ms2ger>
jgraham, do you know if Opera has tests for form.foo?

[05:21:31.0000] <jgraham>
Ms2ger: I don't know

[05:21:47.0000] <jgraham>
I might remember to look later

[05:21:57.0000] <Ms2ger>
I would be grateful if you could

[05:22:24.0000] <Ms2ger>
Our code for that is so full of suck... :/

[05:41:34.0000] <Ms2ger>
Consider http://software.hixie.ch/utilities/js/live-dom-viewer/saved/2245

[06:05:45.0000] <GPHemsley>
Is there precedent (that I can look at) for using ABNF in WHATWG specs?

[06:06:16.0000] <darobin_>
GPHemsley: yes, but no one has lived to tell the tale

[06:07:42.0000] <Ms2ger>
Does http://www.whatwg.org/specs/web-apps/current-work/multipage/the-button-element.html#publickeyandchallenge count as abnf?

[06:09:24.0000] <MikeSmith>
Ms2ger: seems like it ise

[06:09:48.0000] <MikeSmith>
eh or does ABNF use braces?

[06:10:02.0000] <GPHemsley>
I was referring specifically to RFC 5234: http://tools.ietf.org/html/rfc5234

[06:10:21.0000] <MikeSmith>
there was some other ABNF in the spec

[06:10:25.0000] <MikeSmith>
maybe still there

[06:10:29.0000] <MikeSmith>
/me tries to remember what

[06:13:29.0000] <GPHemsley>
/me also wonders if he should distinguish between "well-formed" MIME types and "valid" MIME types

[06:13:52.0000] <MikeSmith>
GPHemsley: that sounds odd

[06:14:14.0000] <MikeSmith>
I'd wonder who cares about the distinction

[06:14:25.0000] <MikeSmith>
not implementors

[06:14:35.0000] <GPHemsley>
k

[06:14:54.0000] <GPHemsley>
in other news, there is no .abnf class in the spec CSS file

[06:15:32.0000] <MikeSmith>
so I guess whatever other ABNF Hixie had in the there before, it's gone now

[06:16:09.0000] <MikeSmith>
ah I remember

[06:16:30.0000] <MikeSmith>
it was for the text content of script elements

[06:16:33.0000] <MikeSmith>
or maybe style elements

[06:16:36.0000] <MikeSmith>
can't remember which

[06:17:04.0000] <jgraham>
If you think you want to use ABNF you are probably doing it wrong

[06:17:19.0000] <darobin>
definitely

[06:17:31.0000] <MikeSmith>
http://www.whatwg.org/specs/web-apps/current-work/multipage/scripting-1.html#restrictions-for-contents-of-script-elements

[06:17:45.0000] <MikeSmith>
that is BNFish still

[06:18:32.0000] <GPHemsley>
that is precisely the ABNF I was referring to

[06:18:36.0000] <MikeSmith>
ah OK

[06:18:39.0000] <GPHemsley>
though I note it doesn't have special styling

[06:18:47.0000] <GPHemsley>
MikeSmith: Thanks for finding it

[06:19:01.0000] <GPHemsley>
jgraham, darobin: Care to elaborate/enlighten?

[06:19:33.0000] <darobin>
GPHemsley: ABNF is fine for describing things like valid document constraints

[06:19:55.0000] <MikeSmith>
yeah that's the case here

[06:19:58.0000] <darobin>
but it tends to suck if what you want is to describe implementation behaviour

[06:20:04.0000] <MikeSmith>
it's not defining parsing here

[06:20:19.0000] <darobin>
GPHemsley: as MikeSmith says, you *don't* want it to define parsing rules

[06:20:39.0000] <MikeSmith>
well it also suck if you have to write a parser based on it anyway

[06:20:40.0000] <darobin>
but it's good to describe constraints on content

[06:20:56.0000] <MikeSmith>
I did have to write a parser for the validator based on that ABNF

[06:21:00.0000] <MikeSmith>
and it was was PITA

[06:21:05.0000] <darobin>
yeah

[06:21:13.0000] <darobin>
supposedly you could generate one

[06:21:22.0000] <MikeSmith>
right, in theory

[06:21:25.0000] <GPHemsley>
in your defense, though, it has rules like "any string that doesn't contain a substring that matches not-data1"

[06:21:27.0000] <darobin>
but I've never seen a tool that really worked well for the languages I was interested in

[06:21:50.0000] <MikeSmith>
darobin: yep, I tried that in this case but gave up after running into nothing but fail

[06:22:06.0000] <darobin>
had the same problem with WebIDL

[06:22:37.0000] <darobin>
ended up hand rolling because none of the generators made any sense

[06:22:40.0000] <GPHemsley>
Well, the alternative is to have something like this, which seems like overkill: http://mimesniff.spec.whatwg.org/#parse-a-mime-type

[06:23:09.0000] <darobin>
GPHemsley: if you want to constrain how an implementation behaves, and you want error handling, you need stuff like that

[06:23:24.0000] <GPHemsley>
Also, I'm currently using the hodgepodge definition from HTTP to define what a MIME type is: http://mimesniff.spec.whatwg.org/#valid-mime-type

[06:23:33.0000] <MikeSmith>
we could just replace that ABNF with something based on the state-machine code I wrote for it in the validator. And then Hixie could run that through his pre-processor that turns the code into semi-prose.

[06:24:16.0000] <jgraham>
GPHemsley: There are two valid approaches for speccing parsing algorithms that I have seen: explicit state machines and prose recursive descent parsers

[06:24:23.0000] <MikeSmith>
I much prefer http://mimesniff.spec.whatwg.org/#parse-a-mime-type even if/when it seems like overkill

[06:24:52.0000] <GPHemsley>
If I rewrite the definition of "valid MIME type" and related terms using my own ABNF, it would simplify the definitions (and the dependencies) and I think it would making defining parsing easier

[06:25:01.0000] <MikeSmith>
hmm

[06:25:13.0000] <MikeSmith>
it would not make it easier to implement man

[06:25:29.0000] <jgraham>
Most of the difficulty in parsing is handling edge cases

[06:25:30.0000] <GPHemsley>
I don't think it would make it any harder, either, though

[06:26:19.0000] <MikeSmith>
well only one person has to define the parsing behavior, so optimizing the spec to make things easier for one person doesn't seem like such a great plan

[06:26:42.0000] <GPHemsley>
I do wonder what makes it difficult, though

[06:26:54.0000] <MikeSmith>
browser implementors at least are very happy without ABNF and with state-machine-type definitions instead

[06:27:21.0000] <MikeSmith>
IETFers are a different story of course

[06:27:23.0000] <GPHemsley>
but ABNF can be used to define state machines, can't it?

[06:27:34.0000] <MikeSmith>
GPHemsley: look back at what darobin said

[06:27:51.0000] <MikeSmith>
especially about handling errors

[06:28:33.0000] <GPHemsley>
What I have in mind is something like "if it doesn't match ABNF-A, do X"

[06:28:43.0000] <MikeSmith>
hmm

[06:29:09.0000] <GPHemsley>
I don't plan to just say "here's the ABNF, bye"

[06:29:10.0000] <MikeSmith>
as somebody who may need to be implementing parsing for this, I would not like that much

[06:29:23.0000] <MikeSmith>
that's kind of the worst of both worlds

[06:29:44.0000] <MikeSmith>
I think you are likely to make everybody even less happy with that than now

[06:30:42.0000] <jgraham>
Yeah, unless there is exactly one error path, and even then, that sounds horrendous

[06:30:55.0000] <GPHemsley>
but isn't it essentially just a regexp?

[06:31:37.0000] <jgraham>
No actual browser when confronted with  parsing problem thinks "hey, I know, I'll use regexps"

[06:31:45.0000] <Ms2ger>
Actually...

[06:32:09.0000] <jgraham>
/me suddenly becomes very afraid of the Gecko code

[06:32:15.0000] <GPHemsley>
^_^

[06:32:24.0000] <Ms2ger>
:D

[06:33:15.0000] <GPHemsley>
OK, so, then I have to ask: Do you all take issue with "valid MIME type" as it's currently defined?

[06:33:17.0000] <jgraham>
But seriously, bonsai or it didn't happen

[06:33:48.0000] <GPHemsley>
The link again: http://mimesniff.spec.whatwg.org/#valid-mime-type

[06:34:14.0000] <GPHemsley>
" A valid MIME type is a media-type, as defined in HTTP/1.1 or its successor, and is made up in part by a type and a subtype. The MIME type portion of a valid MIME type is the string represented by concatenating type, the string "/", and subtype. [HTTP]

[06:34:14.0000] <GPHemsley>
The MIME type portion of a valid MIME type excludes all parameters and is case-insensitive. [HTTP] "

[06:34:23.0000] <GPHemsley>
That's the part that I'm planning to replace with ABNF

[06:34:36.0000] <jgraham>
(I guess for the past half decade or so I mean mxr, but bonsai sounded better)

[06:34:58.0000] <GPHemsley>
heh

[06:35:10.0000] <GPHemsley>
I was like, "Do we really need to go back to CVS for this?"

[06:36:21.0000] <MikeSmith>
GPHemsley: making something essentially be a regexp is not a great goal. We have some code in the validator for parsing <time> that is an actual regexp where we do capturing groups and then check to see which capturing-group matches failed. i.e., pretty much what you've described

[06:36:34.0000] <MikeSmith>
and it's nasty

[06:36:37.0000] <GPHemsley>
Hmm

[06:36:38.0000] <GPHemsley>
OK

[06:36:46.0000] <Ms2ger>
jgraham, I guess I was thinking about pattern="" calling into the JS engine, which is kinda something else

[06:36:46.0000] <GPHemsley>
can you point me to a pretty example, then? :)

[06:37:56.0000] <jgraham>
Ms2ger: Right, in that case the input is a regexp, so there's not that much choice

[06:38:20.0000] <jgraham>
Obviously pattern should have taken BNF

[06:40:14.0000] <darobin>
GPHemsley: the thing is, in most cases you can't have isABNF || error()

[06:40:37.0000] <darobin>
what you want is ABNFConstruct1 || error1(), ABNFConstruct2 || error2(), etc.

[06:40:51.0000] <darobin>
actually if we had a language that did that nicely it could be sweet

[06:40:54.0000] <GPHemsley>
Well, yeah. I plan to use multiple ABNF rules

[06:41:08.0000] <darobin>
GPHemsley: at some point you're getting very close to prose then :)

[06:41:18.0000] <GPHemsley>
Perhaps I should just write it and let you all criticize it after the fact :P

[06:44:51.0000] <darobin>
GPHemsley: that's the right attitude :)

[07:33:33.0000] <GPHemsley>
Do WHATWG specs generally have abstracts?

[07:36:36.0000] <darobin>
GPHemsley: some do, some don't

[07:36:40.0000] <darobin>
(IIRC)

[07:37:01.0000] <Ms2ger>
jgraham, I was wondering if you remembered to look for those tests ;)

[07:37:17.0000] <darobin>
GPHemsley: using an abstract will simplify the life of whoever gets to steal your spec on behalf of a W3C WG

[07:37:34.0000] <GPHemsley>
Ah, so if I want to discourage that, I should remove it? ^_^

[07:38:14.0000] <jgraham>
Ms2ger: No, but now was a good time to remind me. Looking coming right up

[07:38:21.0000] <Ms2ger>
\o/

[07:38:34.0000] <jgraham>
I wouldn't get too excited

[07:38:48.0000] <GPHemsley>
darobin: Do you have any sense as to which portion is the majority?

[07:39:15.0000] <GPHemsley>
/me feels like the mimesniff abstract is mostly redundant to the introduction

[07:39:25.0000] <darobin>
GPHemsley: if you want to discourage that you should submit your spec to the HTML WG when it gets its new open license :)

[07:39:38.0000] <darobin>
GPHemsley: but overall, no, I don't know what the majority is

[07:40:26.0000] <GPHemsley>
Also, does anyone have any distinction between "key word" and "keyword"?

[07:40:41.0000] <darobin>
I think you want the latter

[07:41:20.0000] <GPHemsley>
darobin: I think I do, too, but that would go against the status quo

[07:41:41.0000] <GPHemsley>
(RFC 2119 uses "key word", and that is propagated to specs mentioning RFC 2119)

[07:43:00.0000] <darobin>
GPHemsley: ah, dunno then. I'd still use keyword at least outside of that context

[07:43:19.0000] <GPHemsley>
I'd like to use keyword inside of that context ;)

[07:43:37.0000] <darobin>
has anyone looked at making &apos: accepted in text/html as well? I thought it was but apparently not

[07:43:45.0000] <MikeSmith>
what rough beast, its hour come round at last, slouches towards Bethlehem to be born

[07:43:46.0000] <darobin>
GPHemsley: I wouldn't sweat it

[07:44:12.0000] <darobin>
MikeSmith: EME spec? :)

[07:44:19.0000] <MikeSmith>
heh

[07:44:29.0000] <MikeSmith>
well, now that you bring that up: http://www.w3.org/News/2013#entry-9813

[07:44:40.0000] <MikeSmith>
http://www.w3.org/TR/encrypted-media/

[07:44:52.0000] <MikeSmith>
the rest is future history

[07:48:23.0000] <jgraham>
Ms2ger: Well I found a file called Testcase%20showing%20the%20problem..html

[07:48:32.0000] <Ms2ger>
Heh

[07:48:49.0000] <jgraham>
Which isn'ta testcase and doesn't show the problem, but does seem to be related to named getters on forms

[07:49:12.0000] <jgraham>
Apart from that I'm not seeing much

[07:49:35.0000] <jgraham>
Asking zcorpan or hallvors on Monday might be a good strategy

[07:49:36.0000] <Ms2ger>
Sounds like I'm trying to coerce baku_ into writing them, then :)

[12:20:04.0000] <GPHemsley>
X-Content-Type-Options is now specced: http://lists.whatwg.org/pipermail/whatwg-whatwg.org/2013-May/039561.html

[12:49:34.0000] <annevk>
GPHemsley: I don't think that's what actually happens for <img>

[12:49:48.0000] <annevk>
GPHemsley: I'm pretty sure that image/png will still decode image/gif

[12:50:07.0000] <annevk>
GPHemsley: because of the way image decoders work

[13:29:49.0000] <GPHemsley>
annevk: I'm not sure what you mean. How does what you said contradict what I said?

[13:30:46.0000] <GPHemsley>
/me is starting to wonder whether he remembers how to put thoughts into words.

[13:41:37.0000] <annevk>
GPHemsley: X-Content-Type-Options: nosniff still works for image/gif labeled as image/png I think

[13:41:46.0000] <annevk>
GPHemsley: I think the spec has that wrong, or did you test that case?

[15:57:23.0000] <GPHemsley>
annevk: I'm still not clear on what you're saying, but if you load an image in the main browsing context, the nosniff rule should apply. If you load an image through <img>, HTML bypasses the main sniffing algorithm using a context-specific sniffing algorithm.


2013-05-11
[02:13:50.0000] <mekeor>
is it fine to use the <details> and <summary> (together with <dl> and <dd>) like this: <http://www.webdevout.net/test?0o>?  (i assume this is the right/best channel to discuss html5, right?)

[02:15:23.0000] <mekeor>
(the example only works with chrome/chromium or safari, see <http://www.w3schools.com/tags/tag_details.asp>.)

[02:25:29.0000] <mekeor>
/me is re-asking on #html5.

[08:19:19.0000] <jgraham>
GPHemsley: By "should" do you mean "I tested and this is what browsers do" or "I think this is what should happen given the specs, but didn't test"?

[08:20:12.0000] <GPHemsley>
jgraham: Where did I say "should"?

[08:20:34.0000] <GPHemsley>
Oh, to annevk?

[08:20:49.0000] <jgraham>
Yeah

[08:21:23.0000] <GPHemsley>
That's "should" as in, "If you follow what the spec says, this is what I expect to happen"

[08:21:27.0000] <annevk>
GPHemsley: I don't think you should have put that feature in without testing

[08:21:57.0000] <annevk>
GPHemsley: that's not how we normally do things and doesn't really help implementers, because now they still have to do all the legwork and then correct you on top of that

[08:23:53.0000] <jgraham>
Right, if you are defining an existing theng you have to match existing behaviour, especially where there is agreement on what the behaviour is. Which means that you always have to first work out what the existing behaviour is

[08:23:59.0000] <jgraham>
*thing

[08:24:45.0000] <GPHemsley>
AIUI, the agreed upon behavior was already determined

[08:43:06.0000] <annevk>
You still have to test as e.g. interpreting something labeled image/png as image/gif might not be seen as sniffing depending on who you ask.

[08:44:14.0000] <annevk>
Or in other words, if everything was perfectly clear as you suggest, there'd be no reason for us to have an open bug on implementing it with exactly those sort of questions.


2013-05-12
[14:28:34.0000] <Ms2ger>
Requiring an argument for rAF breaks instagram: https://bugzilla.mozilla.org/show_bug.cgi?id=871318

[14:29:28.0000] <Ms2ger>
And prefixing still sucks

[16:25:00.0000] <Domenic_>
Apparently HTML5 spec doesn't reference the URL spec? So we've got some annoying people in the Node.js bug tracker claiming that since HTML5 references outdated RFCs, Node should implement their resolution algorithm instead of the URL spec's.

[16:25:10.0000] <Domenic_>
Any chance of getting HTML5 updated to point to the proper URL spec?

[16:26:47.0000] <heycam>
Domenic_, http://www.whatwg.org/specs/web-apps/current-work/multipage/references.html#refsURL

[16:27:45.0000] <heycam>
(looks like the W3C version doesn't, though)

[16:29:25.0000] <Domenic_>
ah, that must be the source of the confusion :(

[16:37:30.0000] <cabanier>
Ms2ger: prefixes strike again.


2013-05-13
[18:04:44.0000] <Domenic_>
.>?/[[]kk[p

[18:06:56.0000] <Domenic_>
Here's a list of other standards that might need updating to reference the URL spec: https://github.com/joyent/node/issues/5452#issuecomment-17788325

[02:21:28.0000] <zcorpan>
MikeSmit1: https://www.w3.org/Bugs/Public/show_bug.cgi?id=21994

[02:37:06.0000] <darobin_>
zcorpan: do you know if it is possible to change the name of a component in bugzilla without breaking existing searches that involve it?

[02:37:29.0000] <zcorpan>
darobin: dunno, but it changed recently anyway

[02:37:47.0000] <zcorpan>
/me 101 Switching Trains

[02:38:00.0000] <darobin>
heh

[02:45:12.0000] <zcorpan>
is "backwards compatible" wrong English?

[02:48:52.0000] <jgraham>
No, but "wrong English" is incorrect English.

[02:53:02.0000] <zcorpan>
""Backward" never has an "s" when used as an adjective, only when used as an adverb." - https://www.w3.org/Bugs/Public/show_bug.cgi?id=21995

[02:56:14.0000] <tomasf>
but isn't it an adverb in that case? compatible in a backward way

[02:56:46.0000] <jgraham>
It is possible that "backward compatible" is more right

[02:57:16.0000] <jgraham>
But I don't think it's a big deal

[03:49:06.0000] <gsnedders>
So with var foo = new Worker('foo.js'); foo.postMessage(…) does the postMessage block until foo.js is loaded?

[03:49:14.0000] <gsnedders>
/me is confused how the example in the spec are safe

[03:53:08.0000] <Ms2ger>
gsnedders, wasn't there a queue for messages like that?

[03:53:22.0000] <Ms2ger>
Or the spec is buggy, that's possible too

[03:53:48.0000] <gsnedders>
I dunno. I scarcely know this stuff.

[03:53:54.0000] <gsnedders>
tl;dr: can I safely do this?

[03:54:22.0000] <Ms2ger>
tl;dr: maybe

[03:55:00.0000] <gsnedders>
Yeah, I think it's fine. It just adds it to the message queue.

[03:55:23.0000] <gsnedders>
Is there any way to know when a worker has loaded, short of sending a message from it?

[04:02:50.0000] <darobin>
I don't think that you get load events from workers

[04:02:53.0000] <darobin>
that might be a bug

[04:09:25.0000] <gsnedders>
I want to be able to call URL.revokeObjectURL once the worker has loaded.

[04:09:32.0000] <gsnedders>
Because, well, yeah, don't need the blob any more.

[05:46:42.0000] <gsnedders>
Is there anything except __proto__ in ES6 that requires all objects to keep realm?

[05:47:00.0000] <jgraham>
So, wait, what? W3C/Charles/Yandex/someone decided to write Yet Another URL Spec?

[05:47:16.0000] <Ms2ger>
Charles

[05:47:25.0000] <Ms2ger>
Is RFC style

[05:47:27.0000] <Ms2ger>
In*

[05:47:57.0000] <jgraham>
Well you assume Yandex wouldn't pay him to waste our time like that, but you never know

[05:48:57.0000] <Ms2ger>
Hah

[16:23:39.0000] <annevk>
Not sure if anyone referenced this last July, but it's pretty interesting: http://www.drdobbs.com/architecture-and-design/interview-with-alan-kay/240003442?pgno=2


2013-05-14
[17:36:25.0000] <annevk>
Future.from(futureLike) -> 1. O is ToObject(futureLike) 2. then is Get(O, "then") 3. then.[[Call]](O, acceptCallback, rejectCallback)

[17:44:10.0000] <annevk>
(re-raise exceptions)

[21:19:38.0000] <annevk5>
@whatwg now has more followers than HTML has commits.

[00:49:44.0000] <zcorpan>
http://www.w3.org/mid/CAAWBYDDYihkKdCMj1hd3H=mkhxurZkss9wqkY-8HABAzPLvsOw⊙mgc :-(

[01:28:05.0000] <zcorpan>
so in cssom-view, if i want to say "fire a scroll event at the document when the viewport is scrolled", what's the right jargon for "the document"?

[01:29:52.0000] <zcorpan>
viewport -> browsing context -> window -> active document ?

[01:30:01.0000] <zcorpan>
or just viewport -> document?

[03:29:03.0000] <jgraham>
zcorpan: browsing context > active document, I think

[03:29:23.0000] <jgraham>
Well probably viewport > browsing context > active document

[04:57:47.0000] <zcorpan>
https://www.w3.org/Bugs/Public/show_bug.cgi?id=14071 anyone have an idea about what the spec should say? http://dev.w3.org/csswg/cssom-view/#widl-Screen-colorDepth

[05:15:59.0000] <asmodai>
Anyone know of a bug that appears at least in FF 20 where you visit a HTTPS URL, get a certificate problem (showing no chain), visit another HTTPS URL (working and uses same root as other cert), visiting the first HTTPS URL again it suddenly works?

[05:20:30.0000] <svl>
asmodai: there's a number of bug reports about incomplete certificate chains in bugzilla; generally (afaik) they're resigned to tech evangelism to get the sites to fix it

[05:21:19.0000] <svl>
and the chain information is cached, so it working on the second visit is pretty much "by design"

[05:22:02.0000] <asmodai>
svl: That would explain the subsequent visits working then.

[05:23:14.0000] <asmodai>
svl: Verifying the URL/cert with http://www.networking4all.com/en/support/tools/site+check/ shows the chain being able to be resolved.

[05:28:03.0000] <asmodai>
svl: So I'm a bit at a loss why it would fail for some Firefox users.

[05:29:58.0000] <asmodai>
Domain in question: https://ehm01.iwelcome.nl/

[05:30:57.0000] <zcorpan>
anyone feel like it's time for naming things? https://www.w3.org/Bugs/Public/show_bug.cgi?id=20832

[05:32:41.0000] <jgraham>
zcorpan: just invoke convertNameFromLongJavaNameToShorterNameThatPeopleMightActuallyLike?

[05:33:01.0000] <zcorpan>
https://jwatt.org/svg/tmp/mouse-relative-positioning.svg has MouseEvent.getCoordsAt

[05:34:01.0000] <zcorpan>
not sure if the reverse is also needed

[05:34:22.0000] <svl>
asmodai: hmm, can't reproduce the error in any of my firefoxes; not an expert in this field - was just aware of the behaviour. But if the certificate comes with the correct chain, then I don't know what else is happening. Might be worth just filing a bug

[05:35:39.0000] <zcorpan>
also not sure why it makes sense to have it on MouseEvent

[05:38:02.0000] <zcorpan>
i think elementFromPoint() is the reverse

[05:38:34.0000] <asmodai>
svl: We have a VM/vbox snapshot of a Windows box with ff that can reproduce the problem at least.

[05:38:41.0000] <asmodai>
svl: will file a bug report

[05:49:48.0000] <asmodai>
svl: Thing is, we (where I work at) ought to be sort of an expert in this field, but could still be something we might've missed. :)  Thanks for help/pointers.

[08:18:07.0000] <zcorpan>
hmm, supporting both the legacy boolean argument to scrollIntoView() and a new options dictionary seems hairy.

[08:18:56.0000] <zcorpan>
maybe it's less hairy to have a new method? that's also possible to feature-check

[08:19:06.0000] <zcorpan>
/me looks at https://www.w3.org/Bugs/Public/show_bug.cgi?id=17152

[08:43:46.0000] <jgraham>
I wonder how darobin managed to decide which parts of HTML are interoperable despite having no tests

[08:49:26.0000] <gsnedders>
His magic wand.

[08:51:14.0000] <annevk>
zcorpan: don't forget to queue a task

[08:56:29.0000] <hallvors>
stuff everything and everybody relies on should be pretty interoperable. Though having tests would be better, obviously :)

[08:59:00.0000] <jgraham>
Well if that was true then most sites would work in all browsers with little cross-browser testing

[08:59:49.0000] <jgraham>
Or, at least, there would be a substantial subset of functionality that one could confidently use without cross-browser testing

[09:00:19.0000] <jgraham>
It strikes me that subset isn't ibviously as large as that document would suggest

[09:01:18.0000] <jgraham>
e.g. the <img> element is marked as "interoperable". But are the details of img.complete interoperable, inclusing whether the status changes in the middle of scripts or only between scripts?

[09:01:31.0000] <jgraham>
(I'm pretty sure they are not)

[09:03:17.0000] <jgraham>
Similarly I'm prestty sure that HTMLFormControlsCollection has interop issues given that Ms2ger was complaining the other day about the state of the Gecko implementation and asking if we had tests

[09:03:35.0000] <jgraham>
hallvors: (do you know of any tests for named getters on that btw?)

[09:04:13.0000] <jgraham>
And clearly any part of the document that depends on WebIDL isn't interoperable

[09:04:34.0000] <jgraham>
So there is something between "fantasy" and "unstated assumptions"

[09:04:41.0000] <jgraham>
in the green parts of this document

[09:07:25.0000] <hallvors>
jgraham: /core/bts/visual/155403/002.html might be interesting, for example..

[09:08:44.0000] <jgraham>
hallvors: Oh, it might be indeed

[09:15:51.0000] <Ms2ger>
/me listens carefully

[09:17:27.0000] <hallvors>
jgraham: /core/bts/javascript/195620/001.html is close to what you might be looking for too. Maybe with a small addition..

[09:20:00.0000] <jgraham>
hallvors: Nice.

[09:20:16.0000] <jgraham>
I will find some time to testharnessify these. Shoudn't take long

[09:21:36.0000] <jgraham>
They both pass in gecko though, so I wouldn't get all that excited

[09:21:48.0000] <jgraham>
if I were Ms2ger, at least

[09:22:15.0000] <hallvors>
heh. Looking at old tests is a trip down memory lane. 219245 was a bad bug, back in those days..

[09:22:19.0000] <Ms2ger>
Better than nothing :)

[09:23:21.0000] <jgraham>
If you are rewriting the code, I guess it is

[09:24:11.0000] <wilhelm>
There's a lot of good stuff on that server.

[09:28:37.0000] <hallvors>
jgraham: older and more hairy: /core/standards/scripts/jstest-futhark/js-regression/msie_collections.html - not sure if I really would want those old tests shared with the world :-p

[09:29:16.0000] <hallvors>
anyway, I'll get back to XHR stuff now..

[09:29:42.0000] <hallvors>
wilhelm: it's also mostly disorganised :)

[09:31:46.0000] <jgraham>
Right, hallvors and a few others are the only reasonable search indexes

[09:32:13.0000] <jgraham>
Although I wonder… could be fun to get something like Google code search running for it

[09:32:43.0000] <Ms2ger>
If you zip it up and send me a copy, I'll be happy to become another search index ;)

[09:33:31.0000] <jgraham>
Hah, could be hard to get approval for that :)

[09:34:47.0000] <Ms2ger>
How unfortunate :)

[09:35:28.0000] <gsnedders>
But, hey, hopefully more and more getting released.

[09:35:41.0000] <gsnedders>
hallvors: tbh, I wasn't really planning on trying to release any of the jstest-futhark stuff

[09:35:59.0000] <Ms2ger>
gsnedders, pretty please? :)

[09:36:11.0000] <gsnedders>
Ms2ger: This is like half of what I'm doing this summer. ;)

[09:36:21.0000] <Ms2ger>
gsnedders++

[09:36:35.0000] <hallvors>
quite. Unfortunately that msie_collections stuff might be the one that's most interesting to Ms2ger.. :-o

[09:37:11.0000] <hallvors>
though some of it looks like a long-abandoned work-in-progress

[09:37:32.0000] <hallvors>
(doesn't that describe the web too? :-])

[09:37:41.0000] <wilhelm>
jgraham: Handing the entire repo out to key people might be easier to get approval for than a public dump.

[09:38:34.0000] <hallvors>
well, with that new open source engine we should try to actually think like an open source organisation eventually :-p

[09:38:59.0000] <wilhelm>
That would be nice. (c:

[09:39:53.0000] <hallvors>
(don't hold your breath :( many insiders wanted that for a long time already)

[09:41:09.0000] <wilhelm>
I'm familiar with the problem. (c:

[09:43:06.0000] <Ms2ger>
Almost makes it sound as if you've worked for Opera! ;)

[09:44:08.0000] <hallvors>
and sure, I agree - since we have tests that aren't clean and modern enough to release them with PR bells and whistles, we can still probably get approval to contribute some of them to certain persons or projects. Certainly in this day and age where we're less focused on the engine.

[09:47:31.0000] <wilhelm>
Ms2ger: ... Almost sounds like I've been in charge of the department writing all those tests, banging my head against metaphorical office-politics walls for years! (c:

[09:50:37.0000] <dglazkov>
good morning, Whatwg!

[09:51:42.0000] <wilhelm>
hallvors: Yes. Find a key person at Mozilla, Google, Apple and Microsoft, send them a full dump with a disclaimer. "Do not release publicly before all third-party code with dodgy licenses have been removed."

[10:39:44.0000] <jgraham>
Sunset for Presto

[10:39:44.0000] <jgraham>
Yet QA of years gone by

[10:39:45.0000] <jgraham>
Still only on t

[10:41:48.0000] <wilhelm>
Poetry.

[10:45:13.0000] <Ms2ger>
Haiku.

[10:47:41.0000] <jgraham>
I think the word you are looking for is "terrible"

[10:48:15.0000] <Ms2ger>
No comment :)

[10:54:20.0000] <astearns>
any poetry

[10:54:21.0000] <astearns>
can be doggerel, such as

[10:54:27.0000] <astearns>
terrible haiku

[10:55:38.0000] <Ms2ger>
Anyone lower?

[10:58:36.0000] <odinho>
*shrug*

[11:07:39.0000] <hallvors>
hours of attention

[11:07:46.0000] <hallvors>
does not guarantee success

[11:07:50.0000] <hallvors>
presto dies

[11:10:34.0000] <marcosc>
mmm... pesto

[11:22:23.0000] <jgraham>
Self-referential

[11:22:23.0000] <jgraham>
nonsense wins competiton

[11:22:24.0000] <jgraham>
for awful haiku

[11:34:51.0000] <Ms2ger>
/me wonders what http://lists.w3.org/Archives/Public/public-web-perf/2013May/0053.html is on about

[11:49:31.0000] <hallvors>
one can get certain browsers into a state where they send OPTIONS request with Authorization: headers. Interesting sight.

[11:50:32.0000] <hallvors>
anyway, annevk: you might find https://critic.hoppipolla.co.uk/7a87ac3b?review=86 interesting

[11:51:27.0000] <annevk>
hallvors: a CORS preflight or just a request using OPTIONS?

[11:51:37.0000] <hallvors>
CORS

[11:51:41.0000] <annevk>
whoa

[11:51:52.0000] <annevk>
that's a bug

[11:52:02.0000] <hallvors>
you might want to ban that explicitly somewhere :)

[11:52:14.0000] <hallvors>
interestingly, both Presto and Chromium did it

[11:52:26.0000] <hallvors>
perhaps after prompts and manual input..

[11:53:47.0000] <hallvors>
having written some tests and looked at implementations, I think we should just not use user/pass from open() in CORS requests - call it a network error instead. However, I think setRequestHeader() should work.

[11:54:07.0000] <hallvors>
(although it doesn't in current implementations.. but that just looks buggy..)

[11:59:12.0000] <hallvors>
sigh.. http://w3c-test.org/web-platform-tests/submissions/103/XMLHttpRequest/send-authentication-cors-basic-setrequestheader.htm is completely broken on the w3c-test.org server because PHP isn't allowed to handle OPTIONS it seems

[11:59:21.0000] <hallvors>
hope darobin gets that fixed shortly

[12:00:05.0000] <hallvors>
makes it a bit harder to ask Anne for a review of those new tests :(

[12:02:48.0000] <annevk>
hallvors: that is banned

[12:03:01.0000] <annevk>
hallvors: it says the preflight is done without credentials

[12:03:03.0000] <hallvors>
'k

[12:03:20.0000] <hallvors>
any plans for a CORS test suite? :)

[13:18:06.0000] <hallvors>
if XHR uses the OPTIONS verb in a cross-origin request, I suppose the other end needs to say Access-Control-Allow-Methods: options ?

[13:18:25.0000] <hallvors>
bet we don't have tests for that :-p

[13:38:43.0000] <zcorpan>
annevk5: i'll bring this idea up again: why not use <script import=url></script> instead of <link rel=import>?

[13:39:07.0000] <annevk>
zcorpan: oh forgot about that

[13:39:10.0000] <annevk>
dunno

[13:39:37.0000] <annevk>
hallvors: yeah, OPTIONS is not a special case

[13:44:39.0000] <annevk>
zcorpan: you should prolly elaborate a bit on the proposal for people to grasp it's not <script src>

[13:55:07.0000] <zcorpan>
annevk: what should i say?

[14:06:26.0000] <zcorpan>
sent an email

[14:15:51.0000] <annevk>
connection here is flaky

[14:35:04.0000] <smaug____>
odinho: how do I run https://github.com/w3c/web-platform-tests/tree/master/eventsource ?

[14:40:52.0000] <zcorpan>
smaug____: http://w3c-test.org/web-platform-tests/master/eventsource/

[14:41:10.0000] <zcorpan>
smaug____: or do you mean on your own server?

[14:47:43.0000] <smaug____>
zcorpan: ah, thanks, that is enough

[16:42:25.0000] <zewt>
yet another confused person who thinks pushState removes the need to store client-side state in the hash

[16:45:45.0000] <Krinkle>
zewt: Are you referring to yourself?

[16:45:55.0000] <Krinkle>
/me sees no scrollback for several hours

[16:46:11.0000] <Krinkle>
no relevant scrollback that is*

[16:46:53.0000] <zewt>
...

[16:47:11.0000] <zewt>
list


2013-05-15
[20:27:25.0000] <m4nu>
esprehn: reminder - Web Payments telecon tomorrow: http://lists.w3.org/Archives/Public/public-webpayments/2013May/0041.html

[01:29:06.0000] <zcorpan>
TabAtkins: would it be totally unreasonable to change css tokenization and drop `function` so that e.g. url ("...") works and (foo)and(bar) works?

[03:16:51.0000] <gsnedders>
Ms2ger: summon.

[03:19:12.0000] <annevk>
dglazkov: import attribute needs to be nullable

[03:33:45.0000] <jgraham>
zcorpan: So, do you remember if we made a test for img@complete changing state synchronously?

[03:34:17.0000] <zcorpan>
jgraham: i think two or three were made at testtwf

[03:34:27.0000] <jgraham>
Oooh

[03:34:45.0000] <jgraham>
Any idea if they made it into git?

[03:35:00.0000] <zcorpan>
or maybe it was two or three about complete, not about changing state

[03:35:13.0000] <zcorpan>
dunno. if not, they're probably in the dropbox

[03:36:10.0000] <jgraham>
https://github.com/w3c/web-platform-tests/tree/master/html/semantics/embedded-content-0/the-img-element seems empty :(

[04:02:17.0000] <zcorpan>
dropbox folder: https://www.dropbox.com/el/?r=/link/17.AOFmkN4T8o%3Fk%3Do6sb9IQMgurg4ZENs-MA8R13sUJ8wawS%26eh%3DAADCReZky5Z6ay09oeRx_Cc2p-00uE5Y_zSqo90WX2x-bA&b=clk:None:12697318409740336513:740:554&z=AACGWCMMFChiTh1YjuNLGJGnSW2dqoSot-z_CblFbHHJWw

[04:02:22.0000] <zcorpan>
search for "complete"

[04:03:41.0000] <zcorpan>
anselmh's test seems to test that case

[05:35:06.0000] <ambv>
jgraham: gsnedders: I want to do the LT tomorrow or on Friday

[05:35:25.0000] <ambv>
could you guys upload 1.0b1 to PyPI?

[05:36:09.0000] <ambv>
I will announce it as a beta release that's already much better than the old one so there's no worry

[05:42:00.0000] <gsnedders>
ambv: Let me go prod jgraham.

[05:51:56.0000] <gsnedders>
ambv: tl;dr: will take a look tonight, will ship sometime (morning, evening, dunno) tomorrow

[05:52:11.0000] <gsnedders>
(well, really, "didn't hear, wasn't there")

[05:53:34.0000] <ambv>
(I didn't get that last sentence, sorry)

[05:54:05.0000] <gsnedders>
ambv: It's not that the conversation was too long and you didn't read it, it's that you didn't hear it, because you weren't there.

[05:57:52.0000] <ambv>
Ah, I missed what you were referring to by "dh;wt". Now I see: s/tl;dr/dh;wt/

[05:57:53.0000] <ambv>
Makes sense.

[05:58:56.0000] <ambv>
I'll move all existing docs to rtfd.org today and merge doc/ to master so it's served from one place

[06:03:30.0000] <gsnedders>
Let me look at it later before you merge?

[06:04:00.0000] <gsnedders>
Gives me something to do at the airport :P

[06:04:52.0000] <gsnedders>
(Running away from jgraham, because he's scary.)

[08:03:43.0000] <tobie>
shall we?

[08:04:19.0000] <jgraham>
You want to dance? Otherwise you probably got the wrong channel

[08:04:47.0000] <jgraham>
Even then you could talk to darobin and Lachy directly

[08:49:16.0000] <ambv>
gsnedders: jgraham: I'm preparing the Lightning Talk, will show it to you once I'm done. I need a list of blockers for 1.0 proper.

[09:56:55.0000] <dglazkov>
good morning, Whatwg!

[10:39:11.0000] <TabAtkins>
zcorpan: Probably unreasonable, yeah.

[10:51:22.0000] <Ms2ger>
gsnedders, Your wish is my command

[11:01:54.0000] <gavinc>
Ah, W3C process where you just wait till no one who disagrees with you is on the telecon to make a resolution

[11:08:55.0000] <marcosc_>
gavinc: sssh!!! don't give away the secret

[11:25:40.0000] <hober>
gavinc: which resolution this time?

[11:51:00.0000] <Ms2ger>
annevk, ping

[11:51:12.0000] <annevk>
Ms2ger: wut?

[11:51:17.0000] <Ms2ger>
DOMTokenList

[11:51:38.0000] <Ms2ger>
I can't find the part where we say that it should be populated from the attribute value

[11:51:57.0000] <annevk>
open bug iirc

[11:52:10.0000] <Ms2ger>
Ah

[11:52:12.0000] <annevk>
not entirely sure anymore what I thought the right solution for that would be at the time

[11:52:28.0000] <Ms2ger>
/me waits to review gsnedders's test, then

[11:52:47.0000] <Ms2ger>
Mm, a true Opera test

[11:52:56.0000] <Ms2ger>
It uses window.undefined

[11:53:02.0000] <annevk>
it should be pretty clear that setting it would just run the set parser

[11:54:00.0000] <Ms2ger>
So, my main question is this

[11:54:12.0000] <Ms2ger>
rel="test test"

[11:54:17.0000] <Ms2ger>
What is relList.length?

[11:55:00.0000] <annevk>
1

[11:55:32.0000] <annevk>
note that this is a change from DOMTokenList's original design (we made that two months back or so)

[11:56:16.0000] <annevk>
we changed it into a set for perf and simplicity

[11:59:07.0000] <Ms2ger>
http://dom.spec.whatwg.org/#concept-set-serializer doesn't seem to be clear about the order

[12:00:19.0000] <Ms2ger>
Also, "running the set serializer for the [...] list"?

[12:00:44.0000] <annevk>
sorry, it's an ordered set

[12:01:35.0000] <annevk>
I guess "add the collected string" should say "append ..."

[12:02:08.0000] <annevk>
Ms2ger: if you bug me tomorrow I might be able to fix this without jetlagging it up

[12:02:33.0000] <Ms2ger>
I'll dump it all in a bug :)

[12:40:18.0000] <hober>
where is the navcon work happening?

[12:43:03.0000] <Ms2ger>
public-web-perf?

[12:43:09.0000] <Ms2ger>
Or controller?

[12:43:11.0000] <Ms2ger>
Dunno

[12:43:23.0000] <TabAtkins>
navigation controller? probably webapps

[12:44:55.0000] <hober>
well, yeah, i would expect it to be worked on in webapps, but i don't see anything on public-webapps about it

[12:45:09.0000] <hober>
so i guess it's being worked on somewhere else

[12:45:20.0000] <hober>
a shadowy back room no doubt :)

[12:45:40.0000] <Ms2ger>
Yeah, sounds right

[12:57:36.0000] <jgraham>
hober: some closing-the-gap CG I think. And, you know, in secret.

[13:01:24.0000] <jgraham>
Although that group doesn't seem to actually exist

[13:04:28.0000] <Ms2ger>
The plot thickens


2013-05-16
[18:28:53.0000] <heycam>
TabAtkins, "style sheet!!as conformance class, ??" appears in the css-variables index

[01:37:50.0000] <drott>
hallvors: hi

[01:38:08.0000] <hallvors>
hi :)

[01:39:19.0000] <drott>
thanks for your review!

[01:39:46.0000] <drott>
wanted to explain a few things about how the organisation of the tests into files etc. ended up like this, and hear from you where we should go with this

[01:41:42.0000] <drott>
so - as you realized, tests originally came from FF, where they are run all in one

[01:41:54.0000] <drott>
or in two parts, one for workers, one for document context

[01:43:03.0000] <drott>
but the test execution is very long, ~3 minutes or so

[01:43:15.0000] <drott>
webkit layouttests don't support this long execution time

[01:43:39.0000] <drott>
so i extracted the logic into the xhrtimeout-tests.js (IIRC) - what you called the framework code

[01:43:48.0000] <drott>
and run it from separate files

[01:44:50.0000] <drott>
now, there is this groupFromFilename() function that does as the name says, extracts the group of tests that should be run in these split files

[01:45:48.0000] <drott>
if i understood your feedback correctly, you'd like the code for each file that runs a group of tests to be more close to that file

[01:46:18.0000] <drott>
but several test.html files share code in the framework, since they each run only a few of a group of similar tests

[01:47:39.0000] <drott>
so if i unroll/fold-out the groupFromFilename() and put the group to be executed into the files explicitly, we have duplicated the name from the filename to the content of the test - i don't know how much we gain by that

[01:48:29.0000] <drott>
and the second thing, separating the code out, making it less "frameworky" duplicates code too, since each individual test file would need a copy of what's in the xhrtimeout-tests.js

[02:00:25.0000] <hallvors>
drott: sorry for not responding, I had some phone calls..

[02:02:44.0000] <hallvors>
for most tests, I'd suggest splitting the code into a "common.js" file that all test cases load, and a "testNNN.js" file that has the code that executes the actual test

[02:03:05.0000] <hallvors>
now, I'm not very familiar with workers

[02:03:20.0000] <hallvors>
can a worker "include" or "require" another .js file?

[02:03:54.0000] <hallvors>
so do something like this at the top of a test: if(typeof document == 'undefined') require('common.js') ?

[02:04:16.0000] <drott>
good question re workers and require

[02:07:15.0000] <jgraham>
http://www.whatwg.org/specs/web-apps/current-work/multipage/workers.html#importing-scripts-and-libraries

[02:07:54.0000] <drott>
well, so the xhrtimeout-tests.js contains the logic for callbacks etc. - actually running the tests - at the top

[02:08:03.0000] <drott>
and a lower section that defines the groups

[02:08:09.0000] <drott>
and which tests to run

[02:08:24.0000] <hallvors>
We have importScripts(): http://www.whatwg.org/specs/web-apps/current-work/multipage/workers.html#dom-workerglobalscope-importscripts

[02:08:55.0000] <drott>
so most of it is like you suggest "common.js" - the rest would be per-test or per-test group

[02:09:11.0000] <hallvors>
I think that approach would be simpler for both developers debugging some problem exposed by the tests, and for future maintenance of the tests.

[02:10:12.0000] <hallvors>
(I was also somewhat concerned about whether the complexity would make tests unstable, but I haven't had time to really investigate that so I don't know.)

[02:10:33.0000] <hallvors>
Have you run these tests systematically over time somewhere?

[02:10:47.0000] <drott>
they run as part of the webkit layout tests several tens of times per day

[02:10:55.0000] <hallvors>
OK, that sounds good

[02:11:47.0000] <jgraham>
To be fair, so do a lot of unstable tests :)

[02:12:14.0000] <hallvors>
heh

[02:12:25.0000] <drott>
jgraham: i don't disagree with that - but these ones here are not flaky, they've proven quite reliable

[02:12:30.0000] <hallvors>
is there some place to review the results?

[02:12:42.0000] <hallvors>
anyway, given that I'll only argue that refactoring is good for debugging and maintenance ;-)

[02:12:52.0000] <jgraham>
drott: Good to know :)

[02:15:17.0000] <drott>
hallvors: the webkit waterfall has test execution logs, which marks them as "Passed", which means, they match the expected result, which has a few PASS lines matching the output of testharness.js

[02:15:27.0000] <drott>
here's for example a log of the http://build.webkit.org/builders/GTK%20Linux%2064-bit%20Release%20WK2%20%28Tests%29/builds/6753/steps/layout-test/logs/stdio

[02:15:32.0000] <drott>
GTK build and test run

[02:15:42.0000] <drott>
you see lines like http/tests/xmlhttprequest/timeout/xmlhttprequest-timeout-simple.html passed

[02:16:35.0000] <drott>
hallvors: debugging might be a bit easier since you don't have to figure out the launch logic

[02:17:07.0000] <drott>
hallvors: but maintenance i actually find easier with the approach of just having thin files that you don't need to touch - instead, the logic is in the "framework", in one place

[02:20:36.0000] <hallvors>
well - imagine that you're not familiar with the setup, and want to add a new test - it's significantly harder if you have to figure out this "launch logic" and then search through the files to find groupFromLocation() and then figure out where it gets its data from.. ;-)

[02:21:58.0000] <hallvors>
It's also confusing while trying to understand the setup that the RequestTracker constructor is called so many times, because it defines all the objects for each test, even those that won't be used in this test but will be used in others.

[02:23:04.0000] <drott>
hallvors: okay, I'll see what I can do

[02:23:16.0000] <drott>
hallvors: again, thanks for the feedback

[02:24:08.0000] <hallvors>
It shouldn't be too hard (I hope) - basically copy the code that defines the arrays in TestRequestGroups into separate "testNNN.js" files corresponding to the HTML files..

[02:24:24.0000] <hallvors>
add an importScripts statement for the worker case

[02:24:34.0000] <drott>
hallvors: maybe along with the requestTracker (and other objects) that each of them needs

[02:24:58.0000] <hallvors>
no, the RequestTracker definition should be in common.js

[02:25:05.0000] <drott>
the class

[02:25:06.0000] <hallvors>
:)

[02:25:11.0000] <hallvors>
IMHO

[02:25:14.0000] <drott>
but the instances could move into NN.js

[02:25:21.0000] <hallvors>
exactly

[02:25:42.0000] <drott>
alright

[02:27:02.0000] <hallvors>
so somebody not familiar with the tests looks at timeout-twice.html, sees link to timeout-twice.js, and gets the three RequestTracker instance definitions instantly

[02:29:27.0000] <hallvors>
and thank you for listening and discussing this feedback :)

[02:30:08.0000] <hallvors>
hello nimbu :)

[02:46:43.0000] <ambv>
gsnedders: Where do I put this example? I want to fix this -> http://www.bpaste.net/show/OHlEpp27lbdawO2thfbR/

[02:47:46.0000] <gsnedders>
WTF. When did we break that?

[02:47:48.0000] <gsnedders>
/me sighs

[02:48:06.0000] <ambv>
Definitely a 1.0 blocker ;-)

[02:51:16.0000] <ambv>
gsnedders: so, where does the example go? http://www.bpaste.net/show/clrC8KkPoLQ385vnwDEN/

[03:06:45.0000] <jgraham>
drott: Sorry for the spam

[03:07:21.0000] <ambv>
jgraham: hello there, James!

[03:20:56.0000] <ambv>
jgraham: gsnedders: can you scroll through the slides to see whether everything's fine? https://dl.dropboxusercontent.com/u/4830253/html5lib.pdf

[03:26:25.0000] <gsnedders>
ambv: You just need to change the test harness so it doesn't outright ignore tests the cause DataLossWarning. Like, they should have a pass condition of "does not raise an exception".

[03:26:47.0000] <gsnedders>
ambv: Instead of the current situation of "DataLossWarning? Well, we'll ignore you entirely"

[03:27:12.0000] <hallvors>
Implementor comments sought: is it hard to allow XHR overrideMimeType() to fix content type / encoding info in HEADERS_RECEIVED mode?

[03:28:14.0000] <gsnedders>
ambv: I'm always dubious about using affiliations for open source projects, but if you do, get the (current) Opera logo! http://business.opera.com/press/resources has it in all kinds of formats.

[03:28:34.0000] <gsnedders>
ambv: Also has several vector formats, which is probably a good idea

[03:29:07.0000] <jgraham>
Yeah, I don't really know to what extent this is an "Opera" thing

[03:29:33.0000] <jgraham>
Somehow I missed the fact that you're using a four-year-old logo

[03:30:20.0000] <gsnedders>
I mean, both of us were working on it pre-Opera

[03:30:45.0000] <jgraham>
Could be nice to have an example of using html5lib other than a blurry screenshot of the documentation

[03:30:56.0000] <jgraham>
Since you have lots of examples of using !html5lib

[03:31:31.0000] <ambv>
jgraham: haha, sure.

[03:32:06.0000] <jgraham>
On the lxml slide "It's a C extension" should probably be "lxml is a C extension"

[03:32:26.0000] <ambv>
gsnedders: raising on DataLossWarning breaks 98 tests currently

[03:32:50.0000] <gsnedders>
ambv: Yay.

[03:34:12.0000] <jgraham>
That's not surprising; it was used to hide things that simply aren't supported in some treebuilders iirc

[03:34:29.0000] <jgraham>
gsnedders: https://github.com/jsocol/bleach/blob/master/bleach/sanitizer.py

[03:35:17.0000] <ambv>
gsnedders: Maybe a more pragmatic approach for now would be to fix the direct issue (fun fact: it works on 3.2+ and PyPy)

[03:38:46.0000] <gsnedders>
jgraham: If something didn't get lost in communication, 98 tests raise exceptions (not warnings) whilewarning DataLossWarning.

[03:39:03.0000] <gsnedders>
jgraham: We should never throw an exception, we should just not check what tree we get

[03:41:27.0000] <ambv>
tests/test_parser.py catch DataLossWarnings as exceptions and ignore them which means such tests don't ever run anything useful

[03:45:31.0000] <ambv>
gsnedders: duh, the bug is really basic

[03:46:23.0000] <ambv>
unicode_literals means that the second argument in hex(123).rjust(5, "0") is unicode, should be bytes

[03:46:39.0000] <gsnedders>
I was guessing it was something stupid.

[03:47:13.0000] <gsnedders>
Yay, another case where we want the native str type, whatever that is

[03:47:20.0000] <ambv>
I'll just fix that up, but we lack a test for escapeChar and friends

[03:48:06.0000] <gsnedders>
Would "%05x" not do the right thing?

[03:48:17.0000] <gsnedders>
Which seems simpler than hacking around with string types.

[03:48:55.0000] <ambv>
yeah, I was going

[03:48:57.0000] <ambv>
to try that

[03:49:10.0000] <ambv>
but "%05x" is still unicode with unicode literals ;-)

[03:49:19.0000] <gsnedders>
Do we not want that?

[03:50:00.0000] <gsnedders>
ambv: Everything in/out of there should be unicode

[03:51:43.0000] <ambv>
        replacement = ("U%05x" % (ord(char),)).upper()

[03:52:15.0000] <gsnedders>
Why not just %05X?

[03:53:53.0000] <ambv>
because I forgot it exists. ha.

[03:54:03.0000] <ambv>
but I want a test for that breaking example I pasted you just for regressions.

[03:54:29.0000] <gsnedders>
I expect that's the only issue breaking all the DataLossWarning hidden problems?

[03:54:50.0000] <ambv>
the only one we're aware of at the moment

[03:54:55.0000] <ambv>
;-)

[03:55:18.0000] <gsnedders>
Would be worth trying to see how much effort it is to fix any exception raised, currently hidden behind DataLossWarning.

[03:55:29.0000] <gsnedders>
Because we have tests that will hit that exact case.

[03:58:55.0000] <ambv>
Yes, but let me do that after 1.0b1

[03:59:03.0000] <gsnedders>
/me has Flake fail on master, and wonders how that never showed up before

[03:59:52.0000] <ambv>
we should have flake invocations converted to Bash scripts so that I can connect them to tox

[04:00:02.0000] <ambv>
this way I'll be running them everytime locally

[04:00:27.0000] <gsnedders>
Oh, merge broke it somehow. :(

[04:04:53.0000] <gsnedders>
ambv: That's been on my to-do list for a while :P

[04:05:08.0000] <ambv>
Sure thing.

[04:05:58.0000] <ambv>
Now only a test to check we don't have a regression. It's tricky ;-)

[04:05:59.0000] <ambv>
http://www.bpaste.net/show/Na6TZMB4H6PkT1Wype11/

[04:06:25.0000] <gsnedders>
jgraham: https://critic.hoppipolla.co.uk/5056ff57?review=106

[04:06:34.0000] <gsnedders>
jgraham: (it's a single CHANGELOG entry)

[04:09:03.0000] <gsnedders>
/me wonders how tests have got so much slower

[04:13:46.0000] <gsnedders>
Nah, I'm just imagining them being quicker :P

[04:20:48.0000] <ambv>
PULLDOM Y U SO MEAN! http://www.bpaste.net/show/8ePI4jZLClouWS6Ua106/

[04:22:05.0000] <darobin>
zcorpan: you there?

[04:22:13.0000] <zcorpan>
darobin: yes

[04:22:26.0000] <darobin>
zcorpan: have you made a publication snapshot of the diffs doc?

[04:22:39.0000] <zcorpan>
darobin: no, but i can do it now

[04:22:41.0000] <darobin>
I can't see to see it in GH or CVS

[04:22:45.0000] <darobin>
that would be wunderbar

[04:22:51.0000] <zcorpan>
what's the date?

[04:22:55.0000] <darobin>
2805

[04:23:36.0000] <zcorpan>
heh, and people were upset about 2022!

[04:23:48.0000] <darobin>
lol

[04:30:53.0000] <hsivonen>
what does Google Play Music All Access use for playing music on the Web? Chrome-only? Cross-browser?

[04:32:27.0000] <zcorpan>
i don't recall what command i should use to specify a date for make... but i can fix it up manually

[04:34:47.0000] <zcorpan>
figured it out

[04:34:58.0000] <zcorpan>
make tr PUBDATE="28 May 2013"

[04:41:51.0000] <zcorpan>
darobin: https://rawgithub.com/whatwg/html-differences/master/TR.html

[04:43:27.0000] <darobin>
zcorpan: you're a star, thanks!

[04:43:32.0000] <darobin>
I wish all editors were like you :)

[04:45:32.0000] <zcorpan>
i try not to imagine what the implications of that would be :-P

[04:46:35.0000] <darobin>
zcorpan: well, except for the bit where you used <hgroup> :)

[04:49:02.0000] <zcorpan>
oh, is that not OK?

[04:49:25.0000] <zcorpan>
are w3c specs only allowed to use w3c html5?

[04:52:12.0000] <darobin>
zcorpan: yeah, they use what the validator says is good

[04:52:21.0000] <darobin>
but that's not a big deal, I just replaced it

[04:53:01.0000] <zcorpan>
i'll fix it anyway

[04:53:12.0000] <zcorpan>
i see the w3c html spec uses <p> for the subheading

[04:55:46.0000] <gsnedders>
ambv: Will push out 1.0b1 some time after lunch

[04:55:51.0000] <gsnedders>
Speaking of which, to lunch!

[04:55:56.0000] <ambv>
no no no!

[04:56:10.0000] <ambv>
gsnedders: push it with this -> https://github.com/html5lib/html5lib-python/pull/51

[04:59:01.0000] <ambv>
That being said, bon appetit!

[05:01:28.0000] <zcorpan>
darobin: fixed

[05:01:34.0000] <gsnedders>
ambv: Follow style elsewhere and don't use a tuple with a single item (i.e., use `"…" % ord(…)`)

[05:01:43.0000] <darobin>
zcorpan: super, thanks!

[05:01:59.0000] <darobin>
zcorpan: using <p> for the subheading is a very recent addition

[05:02:12.0000] <darobin>
it's from Steve's work on replacing hgroup

[05:02:15.0000] <gsnedders>
ambv: And if all tests pass with that with DataLossWarning not hiding exceptions, I'd much rather change test_parser.py than adding another test.

[05:02:19.0000] <darobin>
I think only the HTML spec uses that at the moment

[05:02:33.0000] <zcorpan>
darobin: yeah

[05:03:37.0000] <ambv>
gsnedders: I will change the styling as you wish. Just note that in general leaving out the tuple is incorrect (what if your single element ends up being a tuple?).

[05:04:28.0000] <ambv>
gsnedders: as for the test, putting this in html5lib-tests breaks PullDOM as seen here -> http://www.bpaste.net/show/8ePI4jZLClouWS6Ua106/ and I don't want to deal with that just now

[06:57:34.0000] <gsnedders>
ambv: Yeah, I know that it's wrong in general.

[06:57:55.0000] <ambv>
The tests failed on Travis, lemme just fix it up.

[06:59:41.0000] <ambv>
gsnedders: can I easily commit stuff on submodules? I mean, I have a clone of a submodule but I changed some test data in the html5lib working copy to see if they work at all

[06:59:53.0000] <ambv>
what's your workflow for that case?

[07:04:53.0000] <gsnedders>
ambv: Is there a nice submodule workflow given GitHub's permission mode?

[07:05:19.0000] <ambv>
this is why I'm asking. I hardly ever use submodules because of that.

[07:06:12.0000] <hallvors>
annevk: https://github.com/whatwg/xhr/pull/6

[07:15:55.0000] <gsnedders>
ambv: If we change the submodule to be GitHub over HTTP you can checkout master in there and commit/push in it

[07:15:59.0000] <gsnedders>
Which is probably better

[07:16:20.0000] <ambv>
+1

[07:16:56.0000] <ambv>
gsnedders: in related news, I fixed the failing tests

[07:29:52.0000] <ambv>
gsnedders: and Travis agrees, it works. https://github.com/html5lib/html5lib-python/pull/51

[07:31:11.0000] <jgraham>
ambv: Does your test actually check that you get the right tree?

[07:32:01.0000] <ambv>
jgraham: for that I have another test that goes in html5lib-tests

[07:32:29.0000] <ambv>
because I want to test whether the tree is good regardless of the builder

[07:33:14.0000] <ambv>
currently it fails for PullDOM (where the "xml:" prefix is discarded) which is why I don't want to have it in just now

[07:33:55.0000] <gsnedders>
jgraham: sof's bug seems to be hidden by DataLossWarning currently, BTW

[07:36:38.0000] <ambv>
jgraham: here's the test - https://github.com/html5lib/html5lib-tests/pull/6 we'll merge it when I fix PullDOM but this will be after DjangoCon

[07:36:54.0000] <ambv>
(unless you do it first, of course :))

[07:36:58.0000] <jgraham>
ambv: OK, fine, might want a comment to that effect

[07:37:17.0000] <gsnedders>
Should it not be the ihatexml name?

[07:37:24.0000] <gsnedders>
i.e., the infoset coerction name?

[07:38:11.0000] <ambv>
gsnedders: what are you referring to?

[07:39:02.0000] <annevk>
"So, largely, implementations don't let you do cross-origin XHR auth at all.." I recall saying exactly that. Good it's backed up by tests though.

[07:39:16.0000] <gsnedders>
ambv: https://github.com/html5lib/html5lib-tests/blob/master/tree-construction/tests14.dat#L34 seems to test xml:lang in HTML already?

[07:39:42.0000] <ambv>
so it has to be cancelled out by catching DataLossWarning

[07:40:22.0000] <gsnedders>
I don't think PullDOM can repesent xml:lang as an attribute?

[07:41:05.0000] <ambv>
what should we do with it then? skip the test for PullDOM? make it an expected failure? the test autogeneration doesn't seem to support this now.

[07:45:26.0000] <gsnedders>
ambv: Where did you add the catching warnings? test_parser.py?

[07:45:41.0000] <gsnedders>
Because with your fix I'm only seeing six more failures, and that tempts me to fix them all now.

[07:46:01.0000] <ambv>
in the test itself

[07:46:22.0000] <ambv>
https://github.com/ambv/html5lib-python/commit/add2c558a1c27e8237e2501c3850c178966ad0ee

[07:46:41.0000] <ambv>
this way when the warning goes away in the future, we will have a failure and know that something changed

[07:58:36.0000] <gsnedders>
jgraham: ihateihatexml

[07:59:49.0000] <jgraham>
We all do. But less than we hate xml

[08:00:03.0000] <jgraham>
Which didn't have to have all these stupid limitations

[08:17:50.0000] <ambv>
gsnedders: jgraham: I'm doing the LT tomorrow at 5:00 PM CEST, it would be great if 1.0b1 is up by then.

[08:17:58.0000] <ambv>
tell me if you need anything else

[08:30:23.0000] <gsnedders>
jgraham: What's the best approach for coercing public and system ids?

[08:30:35.0000] <gsnedders>
jgraham: Note the allowed set of chars differs between single and double quoted strings

[08:30:35.0000] <Ms2ger>
gsnedders, you called yesterday?

[08:30:43.0000] <gsnedders>
Ms2ger: Get my email?

[08:30:47.0000] <Ms2ger>
Yep

[08:30:51.0000] <Ms2ger>
Thanks

[08:34:34.0000] <jgraham>
gsnedders: In that " isn't allowed if it's double quoted and ' isn't allowed if it's single quoted?

[08:39:05.0000] <gsnedders>
jgraham: Yes.

[08:39:33.0000] <tantek>
aaronpk I heard about the Google's "email actions" but hadn't seen the details til that link

[08:39:45.0000] <tantek>
oops wrong channel

[08:50:46.0000] <gsnedders>
jgraham: Well, a PubidLiteral can never contain "

[08:51:03.0000] <gsnedders>
jgraham: But ' is allowed when double quoted, but not when single quoted.

[08:52:46.0000] <jgraham>
I don't remember how doctype and lxml work off the top of my head. I have recollections of a terrible hack

[08:53:30.0000] <gsnedders>
jgraham: We serialize the doctype as XML then parse it

[08:54:20.0000] <jgraham>
I was hoping that I had misremembered :(

[08:55:14.0000] <jgraham>
So always double quoting and escaping any remaining invalid cahracters in the normal way should be enough?

[08:55:25.0000] <gsnedders>
jgraham: Escaping meaning what?

[08:55:42.0000] <gsnedders>
jgraham: You cannot escape characters in pubid/sysid

[08:56:01.0000] <jgraham>
The U+12345 stuff

[08:56:56.0000] <gsnedders>
Right.

[08:57:31.0000] <jgraham>
It's either that or drop the characters I guess

[08:57:58.0000] <jgraham>
I think this is a little better

[08:58:00.0000] <gsnedders>
Or return it quoted from ihatexml

[08:58:12.0000] <gsnedders>
Which at least allows it somewhat.

[08:58:47.0000] <jgraham>
Return waht quoted?

[09:09:29.0000] <gsnedders>
jgraham: Have coercePubid(value) return the quoted value.

[09:16:01.0000] <ambv>
gsnedders: boom. https://github.com/html5lib/html5lib-python/pull/52

[09:27:39.0000] <gsnedders>
ambv: There's an identical commit on the dom2sax PR :)

[09:27:56.0000] <ambv>
dang

[10:14:03.0000] <TabAtkins>
heycam|away: Yeah, I need to just remove those dfns from my boilerplate.  They don't seem to accomplish anything, and they clutter up the index.

[10:14:21.0000] <TabAtkins>
(And are the only instance of "sub-terms" in most specs, which is what the !! thing is about.)

[11:15:11.0000] <ambv>
gsnedders: in unrelated news, sanitizer fails for a document like "<p><script>alert('Boo!')</script>Surprise!"

[11:15:51.0000] <ambv>
serialization breaks with TypeError: unhashable type: 'slice' on line 183 of html5lib/sanitizer.py

[11:15:56.0000] <ambv>
will look into it later

[13:40:21.0000] <mrbkap>
dglazkov: ping?


2013-05-17
[00:49:07.0000] <jgraham>
ambv: The problem you found is basically "santizer deswign is totally broken"

[00:49:35.0000] <jgraham>
Or rather "sanitizer tries to pretend that treewalker tokens are just like tokenizer tokens, fails"

[00:49:54.0000] <ambv>
I found it preparing the most basic sanitizer-as-filter example for docs.

[00:50:07.0000] <ambv>
Because the sanitizer is indeed a cool feature.

[00:50:13.0000] <jgraham>
It is

[00:50:49.0000] <jgraham>
But we need to fix it somehow to work with both the tokenizer and the treewalker

[00:50:57.0000] <jgraham>
Accounting for their differences

[00:51:33.0000] <ambv>
Definitely a thing to do for 1.0, but not for 1.0b1

[00:55:34.0000] <ambv>
gsnedders: jgraham: if #53 breaks some tests which are still not fixed, can you integrate #51 first? (the same code is in #53 as well)

[00:56:15.0000] <ambv>
basically now documents with xml attributes crap out with a stupid exception, this has little to do with DataLossWarning hiding *other* problems in the test suite

[01:03:01.0000] <ambv>
gsnedders: jgraham: same goes for integrating #52 first versus #44 which is still apparently incomplete

[01:09:35.0000] <hsivonen>
What's the right way to report potential Gmail security bugs?

[01:10:24.0000] <hsivonen>
oops. nevermind. It's not a potential security bug that I saw. Just a plain bug.

[01:26:16.0000] <ambv>
gsnedders: jgraham: I integrated docs to master, you can add new stuff and edit existing docs as you please. rtfd.org is now also switched to build from master. it syncs daily, if you want to make it refresh the docs faster, go to the rtfd.org dashboard and click Build manually.

[01:27:40.0000] <jgraham>
ambv: Nice

[01:27:51.0000] <ambv>
(currently building the new version)

[01:30:05.0000] <ambv>
jgraham: this is a new section - https://html5lib.readthedocs.org/en/latest/movingparts.html

[01:32:15.0000] <ambv>
jgraham: you can basically replace http://code.google.com/p/html5lib/wiki/UserDocumentation with a link to https://html5lib.rtfd.org/ at this point.

[01:33:45.0000] <ambv>
hehe, Travis build failed. Reason: HTTP error 503 while getting https://pypi.python.org/packages/source/s/six

[02:09:14.0000] <hsivonen>
does the W3C have a position on network neutrality?

[02:19:23.0000] <annevk>
hsivonen: not a published one as far as I know

[02:21:14.0000] <annevk>
I wonder how I missed http://www.w3.org/TR/2010/NOTE-hlink-20101216/

[02:22:28.0000] <hsivonen>
annevk: :-(

[02:23:01.0000] <hsivonen>
annevk: I guess I can't use "your argument is invalid, because this forum is committed to network neutrality"

[02:23:48.0000] <annevk>
hsivonen: cannot upset all those paying members, which these days include the cable guys

[02:23:50.0000] <jgraham>
Seems like TimBL believes in it? OR at least that's what I got from http://www2013.org/2013/05/16/highlights-from-the-day-4/

[02:24:11.0000] <jgraham>
Ofc it seems like these days W3C is all about the big bucks

[02:25:02.0000] <annevk>
I remember TimBL also celebrating when the Netherlands adopted a law in favor of net neutrality.

[02:26:02.0000] <hsivonen>
annevk: it's telling that the Chairs say stuff is a CEO decision instead of saying the buck stops at the Director

[02:27:07.0000] <jgraham>
I wonder if W3C would get the RF clause through today

[02:27:51.0000] <jgraham>
Or if thre would be some spiel about having to protect R&D investments, and so needing RAND

[02:37:12.0000] <annevk>
hsivonen: it's pretty sad it's basically becoming an industry lobby club. I guess it always was to some extent if you look at WS-DeathStar and such, but that never really affected my part of the world.

[02:38:58.0000] <annevk>
hsivonen: but yeah, it's basically "what the Members want" and "how do we get more Members" and not so much "leading the web to its full potential". Speaking of which, that tagline seems to have disappeared from the homepage.

[02:40:38.0000] <zcorpan>
marcosc: what's the point of doing monthly crawls?

[02:41:37.0000] <zcorpan>
marcosc: i think once a year would probably be enough

[02:44:01.0000] <SteveF>
zcorpan: i would like it to be more frequently to be able to measure changes over time better, maybe six monthly

[02:44:35.0000] <zcorpan>
SteveF: ok

[02:44:46.0000] <zcorpan>
twice a year seems reasonable

[02:46:13.0000] <zcorpan>
not that i object to crawling more frequently

[02:56:53.0000] <ambv>
jgraham: gsnedders: guys, my announcement is in a couple of hours. can we integrate #51 and #52 and release 1.0b1 ASAP?

[03:16:23.0000] <marcosc>
zcorpan: I wasn't sure how often the data changes

[03:20:04.0000] <hsivonen>
Is there a way to change my W3C-exposed email address as one operation without unsubscribing and resubscribing to each list?

[03:20:59.0000] <annevk>
hsivonen: not that I know of

[03:21:13.0000] <annevk>
hsivonen: you could ask in #sysreq

[03:44:07.0000] <hsivonen>
Yay. At least GNU mailman has the option to change address for all subscriptions on a given server

[03:55:48.0000] <jgraham>
ambv: Can you fix the issues in https://critic.hoppipolla.co.uk/r/112 then?

[03:55:56.0000] <ambv>
I'm on it.

[03:58:32.0000] <gsnedders>
ambv: #53 passes everything here?

[03:58:54.0000] <gsnedders>
ambv: And Travis shows it as passing?

[03:59:03.0000] <gsnedders>
ambv: And all the bugs it fixes are exceptions.

[03:59:28.0000] <ambv>
gsnedders: I was mislead by your comment that "Similar fixes are needed for the other tests."

[03:59:57.0000] <gsnedders>
ambv: Right, so test_treewalker.py will probably be hiding stuff to, for example

[04:00:04.0000] <gsnedders>
But this fixes everything for test_parser.py

[04:00:36.0000] <ambv>
gsnedders: OK, merge #53 then. LGTM. All I care about now is pushing 1.0b1 out :)

[04:06:49.0000] <gsnedders>
/me tries to push this…

[04:07:05.0000] <gsnedders>
Upload failed (401): You must be identified to edit package information

[04:07:07.0000] <gsnedders>
Wat.

[04:07:46.0000] <jgraham>
Wait, what? You just dropped a review that I was looking at.

[04:08:05.0000] <gsnedders>
ambv said it was okay, and I was going with that.

[04:08:35.0000] <ambv>
jgraham: gsnedders did the same thing I did in a separate PR and we're going with his.

[04:09:41.0000] <gsnedders>
http://bugs.python.org/issue9995 is a lovely bug

[04:10:05.0000] <ambv>
gsnedders: can you also merge https://github.com/html5lib/html5lib-python/pull/52

[04:10:12.0000] <ambv>
the docs currently rely on it

[04:10:13.0000] <ambv>
;)

[04:11:03.0000] <gsnedders>
ambv: I dislike those imports being in a function, tbh

[04:11:39.0000] <gsnedders>
I'd rather cherry-pick https://github.com/gsnedders/html5lib-python/commit/0310db7ec93381fe874ed76abdf5a7089add5c06

[04:12:10.0000] <ambv>
+1

[04:12:20.0000] <ambv>
do the pick, do the pick :)

[04:12:53.0000] <jgraham>
gsnedders: Well I finished your review, but the branch isn't tracking anymore

[04:12:59.0000] <jgraham>
Which is sad

[04:13:49.0000] <jgraham>
(I could probably fix it, but it could be more effort than it's worth)

[04:14:24.0000] <gsnedders>
jgraham: Not sure it should be in ihatexml, it's a serialization matter.

[04:15:04.0000] <gsnedders>
jgraham: Like, it's valid to have a sysid with both, but you cannot serialize it, at least how I'd read it.

[04:18:55.0000] <jgraham>
gsnedders: I think you are drawing too fine a distinction there.

[04:26:34.0000] <ambv>
gsnedders: the CHANGELOG now suggests 1.0 gold was released today, you might want to append "b1" to the version number in CHANGES.rst

[04:27:17.0000] <gsnedders>
Blarf!

[04:41:47.0000] <zcorpan>
hsivonen: are you switching to a new email address?

[04:44:34.0000] <gsnedders>
ambv: Why is PyPy not in the envlist for tox?

[04:44:35.0000] <jgraham>
/me wonders why hsivonen would be switching email address

[04:45:33.0000] <ambv>
gsnedders: no particular reason, only that it's rare to have it installed. I run "tox -e pypy" to make it run. If you want to add it as default, +1

[04:46:34.0000] <gsnedders>
ambv: Well, for most people, I don't expect they'll have more than two installed.

[04:47:09.0000] <ambv>
true. +1 for including it. How's that release going? :>

[04:47:18.0000] <ambv>
/me is feeling increased stress levels

[04:50:10.0000] <gsnedders>
ambv: Having tox fail horribly because of random ignored files from other branches, and trying again. :P

[05:04:59.0000] <ambv>
gsnedders: jgraham: I'll be back in 90 minutes. keeping my fingers crossed for 1.0b1

[05:38:18.0000] <jgraham>
Do timers go on the DOM task source?

[06:20:37.0000] <annevk>
jgraham: they have their own task source

[06:20:49.0000] <annevk>
"The task source for these tasks is the timer task source."

[06:22:57.0000] <jgraham>
Oh, it's right there and matches what I remembered. Sigh.

[06:23:02.0000] <jgraham>
annevk: Thanks

[06:23:30.0000] <annevk>
fwiw, what futures use is a strawman

[06:23:45.0000] <annevk>
we might want to switch to microtask or some such

[06:24:53.0000] <jgraham>
"what futures use"?

[06:26:14.0000] <annevk>
I thought the question was in relation to that

[06:27:36.0000] <jgraham>
Did you mean "that futures use"?

[06:27:56.0000] <jgraham>
But yeah, the question was about the futures/setImmediate thread

[06:29:45.0000] <annevk>
"that futures use" does not make sense

[06:31:55.0000] <jgraham>
Umm? "fwiw, that futures use is a strawman" would have made lots of sense to me

[06:32:17.0000] <jgraham>
The same sentence with s/that/what/ is still baffling

[06:32:55.0000] <zcorpan>
"the thingy that futures use"?

[06:35:11.0000] <jgraham>
Oh

[06:35:41.0000] <jgraham>
I understand now, but I don't think you can use "strawman" in that sense

[06:36:27.0000] <jgraham>
I was reading it as "that use for futures is a strawman"

[06:38:34.0000] <jgraham>
I guess you meant "the task source futures use is a moot point" or something

[06:38:54.0000] <jgraham>
Although cealy they have to be scheduled somehow

[06:38:57.0000] <jgraham>
*clearly

[06:39:08.0000] <jgraham>
So it's not clear to me that it is

[06:59:49.0000] <hsivonen>
zcorpan: yes. @hsivonen.fi

[07:00:52.0000] <zcorpan>
hsivonen: will the old email still work?

[07:01:43.0000] <hsivonen>
jgraham: to avoid disruption when iki.fi is slow to forward, to make sure I can use the email in various contexts without violating the rules of IKI, to make it possible to run a Persona primary for my email address, to get domain key sigs right, to avoid annoyances when Google thinks I'm @gmail.com when I want to appear to be @ another domain

[07:01:55.0000] <hsivonen>
zcorpan: the old address will continue to work "forever"

[07:03:06.0000] <zcorpan>
ok

[07:06:06.0000] <hsivonen>
also, to be nice to IKI's infrastructure, considering that I get massively more mailing list email than one is supposed to subscribe to with an @iki.fi address

[07:06:46.0000] <jgraham>
hsivonen: I see.

[07:55:49.0000] <ambv>
jgraham: gsnedders: woohoo, I did the LT

[07:56:02.0000] <ambv>
thanks for bearing with me

[07:56:15.0000] <jgraham>
ambv: Cool, did it go well?

[07:56:57.0000] <ambv>
There's gonna be a video so you'll be the judge but I suppose it went well. I managed to make them laugh a bit, they were interested with the subject and were happy to see "pip install html5lib"

[07:57:00.0000] <ambv>
:-)

[07:57:28.0000] <jgraham>
Cool, well let us know if you get any interesting questions/discussions later

[07:59:36.0000] <ambv>
I will, sure.

[08:22:18.0000] <ambv>
gsnedders: you should tweet about the release as well :)

[08:22:29.0000] <ambv>
ah, I see you did. Great! :D

[08:28:23.0000] <ambv>
jgraham: gsnedders: thanks again, now to crunch the rest of the things to release 1.0 proper :) see you around, my battery will die any minute now.

[09:22:33.0000] <dglazkov>
good morning, Whatwg!

[10:02:38.0000] <joshuaAdarme>
hello o hola

[10:42:12.0000] <smaug____>
dglazkov: curious, what is Polymer team? Some Google thingie?

[12:05:05.0000] <TabAtkins>
smaug____: Polymer was started by and is composed mostly of some googlers, but it's an open project.

[12:09:03.0000] <smaug____>
TabAtkins: what is it?

[12:18:07.0000] <TabAtkins>
smaug____: It's some people who are playing with shadow dom and related techs to produce useful toolkits.

[12:18:29.0000] <TabAtkins>
smaug____: Purpose is half testing group, half seed for public dev.

[14:40:03.0000] <Nenor>
Hi, anyone using Sublime Text 3 with SublimeLinter ?

[14:48:14.0000] <TabAtkins>
I'm using ST2, and I've used SublimeLinter on it before.


2013-05-18
[05:41:47.0000] <gsnedders>
ambv: You wouldn't happen to have a narrow build of Python there, to test html5lib under?

[05:42:03.0000] <gsnedders>
/me notes that html5lib hasn't been tested on a narrow build in forever

[05:42:35.0000] <ambv>
no but I can set one up

[05:49:15.0000] <gsnedders>
Uh, what. My build with --enable-unicode=ucs2 is giving sys.maxunicode == 0x10FFFF

[06:13:57.0000] <gsnedders>
./configure has set UNICODE_SIZE to 2, yet building it and running sys.maxunicode == 0x10FFFF gives true. o_O

[06:26:36.0000] <ambv>
gsnedders: it seems my Python 2.7 is in fact narrow

[06:26:44.0000] <ambv>
so yes, we test on a narrow build as well

[06:27:11.0000] <gsnedders>
ambv: Well, that's nice to know we're not entirely broken, esp. given the number of forks we have


2013-05-19
[18:37:47.0000] <heycam>
what spec defines window.devicePixelRatio?

[00:56:10.0000] <Ms2ger>
heycam, there isn't one, afaik

[00:56:22.0000] <heycam>
Ms2ger, I see

[00:56:38.0000] <heycam>
Ms2ger, I was just thinking it probably makes sense to have an event fired when its value changes

[00:56:56.0000] <heycam>
Ms2ger, so you can handle when your browser window is dragged from one screen to another (with different DPRs)

[00:57:22.0000] <Ms2ger>
Interesting

[00:57:30.0000] <Ms2ger>
Sounds like you get to spec it, then ;)

[00:58:01.0000] <heycam>
bah ;)


2013-05-20
[19:06:33.0000] <annevk>
TabAtkins: CSS needs to define somewhere "origin of style sheet" (which is the origin of the document that included the style sheet)

[19:06:48.0000] <annevk>
TabAtkins: then CSS Fonts and such can just use that

[19:16:21.0000] <annevk>
zcorpan: your "Sync cssom specs" commit to xref broke stuff

[19:16:39.0000] <annevk>
zcorpan: e.g. it doesn't seem like there's separate references for the getclientrects methods anymore

[23:16:31.0000] <TabAtkins>
annevk: kk, can do.  Looks like Cascade might be the best place to put it.

[23:16:50.0000] <TabAtkins>
Since it defined @import

[23:19:28.0000] <hsivonen>
what are the normal working hours for #sysreq? Boston office hours on weekdays?

[23:23:04.0000] <TabAtkins>
Likely.

[23:34:07.0000] <annevk>
hsivonen: also France

[23:52:50.0000] <TabAtkins>
annevk: Thoughts on issue 2 at <http://dev.w3.org/csswg/css-syntax/#the-input-byte-stream>?

[00:03:44.0000] <annevk>
TabAtkins: fwiw, TC39 crowd dislikes CSSVariablesDeclaration-type interfaces

[00:04:13.0000] <annevk>
TabAtkins: because of Object.prototype

[00:04:20.0000] <annevk>
/me looks at issue 2

[00:05:45.0000] <annevk>
TabAtkins: I think hsivonen might have a better informed opinion on that

[00:06:04.0000] <annevk>
TabAtkins: it's not entirely clear to me that restriction would make things safer

[00:28:31.0000] <annevk>
Hmm, serialization of arbitrary CSS token streams as required by CSS Variables also seems interesting

[00:47:55.0000] <Ms2ger>
annevk, I think that's all, then. Want to fix the other bug too? :)

[01:09:42.0000] <annevk>
Ms2ger: that one requires more thinking from what I remember

[01:09:44.0000] <jgraham>
heycam seems to be suck in some superposition of states

[01:10:13.0000] <annevk>
In other news, http://lists.w3.org/Archives/Public/public-texttracks/2013May/0016.html makes me sad. "it might inform a discussion of TTML profiles" is like a double red flag.

[01:10:32.0000] <annevk>
TTML is bad. Profiles also bad. Combined, ...

[01:13:13.0000] <annevk>
jgraham: he's here

[01:14:28.0000] <jgraham>
Wavefunction must have collapsed

[01:24:27.0000] <ambv>
jgraham: I got some feedback during the conference. First of all, it seems people expect html5lib to provide a custom tree format. I directed them towards bs4 for a straightforward querying API.

[01:24:37.0000] <annevk>
Ms2ger: so yeah, the idea was that HTML would invoke the "set parser"

[01:24:51.0000] <annevk>
Ms2ger: e.g. "Either when an element is created that has a class attribute or when an element's class attribute is set to a value other than the empty string, set the element's classes to the new value, parsed." is what DOM uses itself

[01:25:09.0000] <annevk>
Ms2ger: if that is missing anything or is not convenient enough, that'd be good to know

[01:27:06.0000] <jgraham>
ambv: Interesting. I mean that doesn't make much sense, but I see why people would think that

[01:27:45.0000] <jgraham>
Because it's traditional for libs to tightly couple parsing and representation

[01:28:02.0000] <ambv>
yes, I share your view that it's great to have those decoupled.

[01:28:25.0000] <ambv>
jgraham: Another thing, it seems we're currently very slow compared to other parsers and this makes for some poor PR, aka FUD.

[01:28:50.0000] <ambv>
So increasing performance would be a good target for post-1.0 releases.

[01:54:25.0000] <jgraham>
ambv: Well it's no secret that we're slow. Not sure it's possible to squeeze that much more performance out of pure python

[01:54:45.0000] <jgraham>
Or at least, we have spent non-trivial effort benchmarking it in the past

[01:55:56.0000] <jgraham>
Reading through one character at a time just isn't very efficient. But that's needed for a compliant implementation.

[01:56:20.0000] <jgraham>
Really I think the effort would be better spent on writing a C implementation in libxml2

[01:56:34.0000] <jgraham>
Then lxml.html would be fast and non-sucky

[01:56:38.0000] <ambv>
We can at least work with the PyPy guys to make it JIT compile better.

[01:56:48.0000] <jgraham>
Yeah, that makes sense

[01:57:11.0000] <jgraham>
Especially since lxml on PyPy doesn't seem to work so well

[01:57:14.0000] <ambv>
Currently for huge documents it's 5x faster than CPython but for typical documents it's 2x … slower.

[01:58:05.0000] <ambv>
jgraham: lxml still is 30x faster than html5lib on PyPy ;) but I guess there's much potential in improving html5lib performance. it would be big news for both html5lib and PyPy if we got the performance on par with lxml.

[01:58:30.0000] <ambv>
jgraham: https://github.com/ambv/html5lib-microbench

[01:58:59.0000] <SimonSapin>
jgraham: in libxml2, do you mean incremental conformance improvements on the existing parser, or a brand new implementation?

[02:00:26.0000] <jgraham>
SimonSapin: Yes :p

[02:00:49.0000] <SimonSapin>
jgraham: yes to which?

[02:01:17.0000] <jgraham>
One of those. It was a non-exclusive or, right? ;)

[02:01:57.0000] <jgraham>
I haven't looked at the existing parser well enough to know if "incremental improvements" are likely to end up with something conformant

[02:02:03.0000] <SimonSapin>
I had in mind, which do you think would be the way to go?

[02:02:56.0000] <jgraham>
If they would, that would be the low risk option, but my general feeling is that unless you started with the right architecture you won't end up with something conformant

[02:03:21.0000] <jgraham>
And so far only WebKit were close to having the right architecture

[02:03:52.0000] <jgraham>
and taht was because the spec was based on more on webkit than on anyone else

[02:09:38.0000] <Ms2ger>
/me kicks his connection

[02:10:15.0000] <Ms2ger>
annevk, do we have a bug on Hixie to invoke the set parser, then?

[02:52:56.0000] <annevk>
marcosc: you don't want "Call resolver's reject(value) method with error as value argument."; you want to call the internal resolve algorithm

[02:53:09.0000] <annevk>
Ms2ger: that could be that bug I suppose

[02:53:18.0000] <Ms2ger>
wfm

[02:53:22.0000] <annevk>
Ms2ger: bit slow today

[02:54:12.0000] <marcosc>
annevk: makes sense

[02:54:26.0000] <marcosc>
(I din't write the text, fwiw)

[02:54:31.0000] <annevk>
marcosc: k

[02:55:06.0000] <annevk>
marcosc: also needs to say something about running the remaining steps asynchronously and not terminating when you return

[02:55:26.0000] <annevk>
marcosc: looks okay otherwise

[02:55:35.0000] <marcosc>
annevk: thanks :)

[02:56:03.0000] <marcosc>
annevk: will update the corresponding bug on the sysapps repo

[03:41:09.0000] <zcorpan>
TabAtkins: "When errors occur in CSS, the parser attempts to recover gracefully, throwing away only the minimum amount of content before returning to parsing as normal." isn't quite true. for instance, a broken selector throws away the entire ruleset rather than just the selector

[03:43:03.0000] <zcorpan>
or maybe i misunderstood. it talks about the parser, while throwing away rulesets happens later

[03:44:00.0000] <ambv>
jgraham: http://pypi-externals.caremad.io/help/what/

[03:48:37.0000] <jgraham>
ambv: Context?

[03:49:24.0000] <ambv>
jgraham: distutils is very very very slow when it scrapes websites to find downloadable links. Disable this functionality by explicitly listing that we only publish packages on PyPI

[03:49:51.0000] <ambv>
this makes downloading packages significantly faster

[03:53:32.0000] <gsnedders>
ambv: Yeah, I saw that a few days ago.

[03:53:54.0000] <gsnedders>
ambv: But I thought it was in setup.py that changed the metadata, not just on PyPI

[03:54:53.0000] <ambv>
gsnedders: the newest distribute and setuptools are smarter than that but the default is still spurious scraping unless you opt-in on PyPI to the faster method

[03:56:24.0000] <gsnedders>
ambv: Does this have to be done per-version?

[03:56:25.0000] <gsnedders>
Le sigh.

[03:57:04.0000] <gsnedders>
No, doing it once seems enough.

[03:57:05.0000] <gsnedders>
Well, okay.

[04:08:26.0000] <ambv>
:-)

[06:20:28.0000] <zcorpan>
TabAtkins: isn't the specced bad-url behavior bad for future compat if we want to add expressions in url()?

[08:40:30.0000] <TabAtkins>
zcorpan: I don't think we ever can.

[08:40:36.0000] <Ms2ger>
Apparently document.all.tags has been broken in Gecko since Fx3.0

[08:41:01.0000] <miketaylr>
:'(

[08:41:15.0000] <miketaylr>
quit breaking my sweet dhtml site guys

[08:42:18.0000] <Ms2ger>
Should tell sicking :)

[09:09:37.0000] <TabAtkins>
annevk: Can you explain what the Object.prototype problem is?  Keys set on Object.prototype showing up as non-own properties on all objects?  I don't know why that's a problem for this kind of interface, or what I could do about it.

[09:09:46.0000] <TabAtkins>
annevk: Maybe expose it as a JS Map?

[09:10:08.0000] <TabAtkins>
annevk: Also, Syntax + CSSOM mandate how to serialize arbitrary token streams.

[09:10:30.0000] <TabAtkins>
(Or rather, will, once CSSOM finishes serialization stuff.)

[09:12:52.0000] <TabAtkins>
zcorpan: Text about error-recovery is of course approximate and non-normative.  But throwing away "just the selector" on a ruleset wouldn't help much - you'd be left with a ruleset with no selector, which doesn't match anything.

[09:13:25.0000] <TabAtkins>
But anyway, I have compat constraints to operate under with error recovery.

[09:14:55.0000] <Ms2ger>
TabAtkins, I think the point was about |foo, #broken# { ... }| not applying anything to foo

[09:15:01.0000] <TabAtkins>
Hm, exposing Variables as a JS Map seems like a much better idea anyway.  Wonder why I didn't think about that?

[09:15:31.0000] <TabAtkins>
Ms2ger: Ah, perhaps.  That was unclear.  Regardless, we know that was a mistake, but not one we can fix.

[09:15:38.0000] <TabAtkins>
;_;

[09:16:26.0000] <TabAtkins>
heycam|away|away: Your username is weird.  Also, there any IDL magic necessary to make something be a JS Map?

[09:17:24.0000] <Ms2ger>
TabAtkins, you guys might want to drop document.all.tags too

[09:51:08.0000] <dglazkov>
good morning, Whatwg!

[09:51:21.0000] <TabAtkins>
Ms2ger: I'll send an email.

[09:51:33.0000] <Ms2ger>
Ta

[09:52:29.0000] <TabAtkins>
Ms2ger: Got a bug or something I can ref?

[10:55:07.0000] <GPHemsley>
ICYMI: The Open Source (read: GitHub) Report Card: http://osrc.dfm.io/

[10:58:44.0000] <jgraham>
"It seems—from their activity streams—that jgraham and w3c are probably friends"

[10:58:48.0000] <jgraham>
Hmm

[10:58:56.0000] <Ms2ger>
Ha

[10:59:36.0000] <Ms2ger>
TabAtkins, er, thought I'd replied: https://bugzilla.mozilla.org/show_bug.cgi?id=874084

[11:00:12.0000] <Ms2ger>
"Ms2ger is a trend setting Javascripter"

[11:00:19.0000] <Ms2ger>
Well, that sure is news to me

[11:01:31.0000] <jgraham>
Maybe writing testharness.js is a trend?

[11:01:36.0000] <jgraham>
+tests

[11:01:49.0000] <Ms2ger>
Still one you set, then

[11:02:08.0000] <Ms2ger>
Also, apparently I do my work at 3am

[11:02:44.0000] <jgraham>
Yeah, I'm not convinced by its timezone corrections (and neither is it, to be fair)

[11:03:45.0000] <GPHemsley>
It's kinda revealing about how much work one does on GitHub vs. off it

[11:04:41.0000] <GPHemsley>
like, GitHub has no idea about my PHP stuff because it's not really on GitHub

[11:04:55.0000] <GPHemsley>
(and GitHub thinks mimesniff is Tcl, for some reason)

[11:07:43.0000] <Ms2ger>
/me kicks document.all some more

[11:08:25.0000] <jgraham>
Violence is the last refuge of the incompetent

[11:08:37.0000] <jgraham>
On the other hand document.all deserves it

[11:08:41.0000] <jgraham>
So please continue

[11:09:05.0000] <Ms2ger>
document.all["2"]

[11:09:08.0000] <Ms2ger>
What gives?

[11:09:24.0000] <Ms2ger>
How about ("2"), item("2"), namedItem("2")?

[11:12:02.0000] <Ms2ger>
The answer is obvious

[11:12:06.0000] <Ms2ger>
"depends on the browser"

[11:14:34.0000] <jgraham>
wwied?

[11:14:43.0000] <jgraham>
Or really wdied?

[11:15:28.0000] <Ms2ger>
?

[11:15:50.0000] <jgraham>
what does IE do?

[11:16:23.0000] <Ms2ger>
Ah

[11:17:48.0000] <Ms2ger>
getElementsByTagName("*")[2] for [], () and item(), and the thing with name "2" for namedItem()

[11:19:50.0000] <Ms2ger>
Oh wait

[11:19:56.0000] <Ms2ger>
/me should look at the right lines

[11:20:36.0000] <Ms2ger>
getElementsByTagName("*")[2] for [] and (), and the thing with name "2" for item() and namedItem()

[11:24:24.0000] <jgraham>
Ah, so presto got it "right" then

[11:24:30.0000] <jgraham>
No surprise there :)


2013-05-21
[17:42:28.0000] <annevk>
"Anne's behavior is quite similar to crismannoble's but crismannoble is more of a whiner."

[17:42:42.0000] <annevk>
"Anne is an awesome Javascripter who loves pushing code. Anne is an early-week worker who seems to work best in the wee hours."

[17:42:50.0000] <annevk>
Listen up TC39!

[17:54:14.0000] <sgalineau>
annevk, you high?

[18:02:24.0000] <annevk>
Heh, just playing with http://osrc.dfm.io/

[18:04:55.0000] <heycam>
TabAtkins, my IRC bouncer gets confused sometimes about whether it should append an "|away"

[18:05:04.0000] <heycam>
TabAtkins, there is no such functionality in Web IDL yet

[18:05:35.0000] <TabAtkins>
heycam: So if I want to use a Map for CSSStyleRule#vars, what should I do?

[18:06:52.0000] <heycam>
TabAtkins, do you want this Map to dynamically reflect the variable declarations, and to affect the declarations when you set properties on it?

[18:06:59.0000] <TabAtkins>
Yes.

[18:07:35.0000] <heycam>
TabAtkins, then I think you don't want a Map, since you can't "watch" the map for changes

[18:08:01.0000] <TabAtkins>
Well, apparently I don't want a naked getter/setter object either

[18:08:10.0000] <heycam>
TabAtkins, oh, why not?

[18:08:43.0000] <TabAtkins>
annevk can explain better, but I think it's because just using an "object map" is subject to trickiness with things defined on the prototype chain, including Object.prototype.

[18:09:05.0000] <TabAtkins>
Someone can add Object.prototype.foo and it'll show up on el.style.vars.foo, even though there's no var-foo rule.

[18:09:47.0000] <annevk>
heycam: basically what we did for dataset is disliked by TC39

[18:10:03.0000] <heycam>
annevk, I'm not sure there is a better solution currently

[18:10:12.0000] <TabAtkins>
The better solution is to magic up a Map.

[18:10:32.0000] <annevk>
TabAtkins: a Map does not have the .vars.x functionality

[18:10:34.0000] <TabAtkins>
(Also, using a Map probably is better in general, because you interoperate with the rest of the collection API stuff.)

[18:10:41.0000] <heycam>
Map just has get() and set() methods, right?

[18:10:43.0000] <annevk>
TabAtkins: it only has .vars.get("x")

[18:10:46.0000] <TabAtkins>
annevk: Right, but .vars.get('x') wouldn't kill me.

[18:11:07.0000] <annevk>
TabAtkins: in that case just create your own Map like URLQuery does

[18:11:13.0000] <heycam>
I think the problem is that Map is being thought of as an interface that you want to use for vars, but ES6's Map is a concrete class

[18:11:20.0000] <annevk>
TabAtkins: you need to do that anyway since you need the serialization stuff to happen

[18:11:25.0000] <heycam>
and a class that doesn't allow watching it for changes

[18:11:27.0000] <annevk>
TabAtkins: whereas Map is just in/out

[18:12:10.0000] <TabAtkins>
annevk: But I want it to be a Map for the purpose of working with the iterable functions, getting the rest of the Map extras, etc.

[18:12:22.0000] <TabAtkins>
URLQuery can't quite do that yet, because MultiMap doesn't exist.

[18:12:30.0000] <TabAtkins>
But I assume it's planned to do that.

[18:12:41.0000] <annevk>
TabAtkins: I guess, if MultiMap ever exists :)

[18:12:50.0000] <annevk>
(and if that matches)

[18:12:54.0000] <heycam>
this sounds very similar to the problem of Arrays

[18:12:59.0000] <TabAtkins>
Ah, it will.  And I think we did a good job with it.

[18:13:03.0000] <TabAtkins>
heycam: It's identical to that problem.

[18:13:05.0000] <heycam>
there's no Array interface that we can use for things like NodeList

[18:13:07.0000] <annevk>
heycam: yeah, I guess you want [MapClass] or some such

[18:13:12.0000] <TabAtkins>
Yup yup.

[18:13:25.0000] <heycam>
it would be great if there were native ES6 functionality for Array-likes, Map-likes, ...

[18:13:36.0000] <annevk>
heycam: or map CSSVariables { ... }

[18:13:59.0000] <heycam>
annevk, sure, but I'd like there to be a blessed way of doing similar things in plain JS

[18:14:08.0000] <heycam>
annevk, so that it's obvious what an IDL map should correspond to

[18:14:11.0000] <TabAtkins>
heycam: There is, at least for Maps.

[18:14:15.0000] <heycam>
TabAtkins, oh yes?

[18:14:18.0000] <TabAtkins>
In teh constructor, run Map.call(this)

[18:14:23.0000] <annevk>
heycam: I thought you could put Array on the prototype chain?

[18:14:26.0000] <TabAtkins>
You'll get a mapdata set up, etc.

[18:14:38.0000] <TabAtkins>
And also put Map on the prototype chain to get the methods.

[18:14:40.0000] <heycam>
annevk, you can, but I don't think that's going to get you the "platform object wants to monitor the object for changes" functionality

[18:15:13.0000] <TabAtkins>
heycam: We can just define our own methods, which do some work and then defer to Map.prototype.add or whatever.

[18:15:18.0000] <annevk>
heycam: you'll have to implement the methods yourself, always, I think, it's just that you want to share the methods

[18:15:33.0000] <annevk>
heycam: share the extra methods :)

[18:15:37.0000] <heycam>
annevk, ok, but also prevent Map.prototype.set from working

[18:15:45.0000] <TabAtkins>
Ah right, yes.

[18:15:46.0000] <annevk>
hmm

[18:15:59.0000] <TabAtkins>
Also, you can't even defer to Map.prototype.get, since your mapdata is magically populated.

[18:16:05.0000] <heycam>
I think you want to wrap a Map object that is hidden from the outside

[18:16:14.0000] <heycam>
and that wrapper object has the same-feeling interface to a Map

[18:16:22.0000] <TabAtkins>
But this really shouldn't be a hard spec problem, any more than saying that the properties on an object are magically populated, like you can do today.

[18:16:28.0000] <heycam>
but forwards to the Map object inside it, as well as doing whatever other dynamic things it wants

[18:16:43.0000] <TabAtkins>
heycam: And, ideally, is detectably a Map using the standard testing methods.

[18:16:46.0000] <annevk>
TabAtkins: well, we need to get it right :-)

[18:16:54.0000] <heycam>
TabAtkins, that might be a problem

[18:17:01.0000] <annevk>
TabAtkins: once we know what's right, specifying it is not really a problem

[18:17:10.0000] <heycam>
you want to identify it has implementing this Map-like interface, but not being a Map object itself

[18:17:34.0000] <heycam>
because it's not one of these concrete Map objects really

[18:17:35.0000] <TabAtkins>
/me goes to read the ES spec around Maps real quick.

[18:18:26.0000] <TabAtkins>
If I'm right, the ideal way is to just define that the mapdata is magical, populated by something per-spec, and mutations to it have some spec effect as well.

[18:20:32.0000] <heycam>
and the default Map object behaviour that ES has just has no other spec effect?

[18:20:40.0000] <TabAtkins>
Yes.

[18:20:54.0000] <heycam>
sounds reasonable on first read

[18:24:27.0000] <TabAtkins>
The spec for .get() just grabs from the [[MapData]] internal property.  We can hook this; the normal Map constructor initializes it to empty, but we could just define that it's instead filled with something specific.

[18:24:54.0000] <TabAtkins>
The spec for .set() appends tuples to [[MapData]], but that could be generalized or overridden to allow a hook for specs.

[18:25:09.0000] <heycam>
TabAtkins, so it would be nice if there were a plain JS way of doing this hooking. otherwise I can imagine complaints that we shouldn't be doing more messing with internal [[Properties]] like this

[18:25:15.0000] <TabAtkins>
Everything else is defined in terms of get/set or just reading from [[MapData]] directly.

[18:25:28.0000] <TabAtkins>
heycam: Certainly.  I'll bug es-discuss.

[18:25:35.0000] <heycam>
cool

[18:25:48.0000] <heycam>
/me wonders if Arrays could be specced similarly

[19:12:04.0000] <TabAtkins>
heycam: Bugging done.  Comment if you'd like.

[22:29:44.0000] <annevk>
Man, this comment syntax in VTT is annoying.

[22:30:11.0000] <annevk>
Well, the parser not having conformance requirements is annoying.

[00:17:10.0000] <zcorpan>
TabAtkins: shouldn't "reconsume the current input token" be called "unconsume the current input token"

[02:23:48.0000] <annevk>
I wonder what is happening to public-webapps: http://lists.w3.org/Archives/Public/public-webapps/2013AprJun/0762.html

[02:23:57.0000] <annevk>
It's not April 1...

[02:28:11.0000] <marcosc>
annevk: heh, I had to respond to that

[03:37:08.0000] <zcorpan>
Hixie: fail https://www.w3.org/Bugs/Public/show_bug.cgi?id=22106

[04:40:54.0000] <marcosc>
sooo... anyone looked at the Web Audio API? The "Required Support for Alternate Names" seems like an epic f'up. https://dvcs.w3.org/hg/audio/raw-file/tip/webaudio/specification.html#AlternateNames

[04:43:55.0000] <marcosc>
there is a lot of badness in that spec

[04:44:50.0000] <jgraham>
Well if they got past the whole "the spec is the WebKit implementation" thing, that's a win at least

[05:25:27.0000] <marcosc>
jgraham: but the spec doesn't even match WebKit

[06:31:30.0000] <annevk>
marcosc: there's a bunch of Mozilla guys on that already

[06:32:19.0000] <annevk>
marcosc: long and short of it is that Google managed to get some crappy API shipped on iPhone via Apple so now we're stuck with it...

[06:33:17.0000] <jgraham>
Is there actually a web api that has worked out OK?

[06:33:18.0000] <marcosc>
annevk: yeah, but why not then stick with the old names

[06:33:21.0000] <marcosc>
?

[06:33:26.0000] <marcosc>
why have two names for things

[06:33:30.0000] <marcosc>
it's confusing

[06:33:40.0000] <jgraham>
It seems like every single one we have decided was horrible just after it shipped

[06:33:48.0000] <marcosc>
they have noteOn() and start(), and they don't even work as the spec says

[06:33:52.0000] <annevk>
jgraham: are TextEncoder and TextDecoder bad?

[06:34:07.0000] <jgraham>
annevk: Dunno, does anyone ship them?

[06:34:12.0000] <annevk>
jgraham: think so

[06:34:31.0000] <annevk>
marcosc: because the old names suck and methods are cheap?

[06:35:06.0000] <annevk>
"cheap" lest anyone thinks we should boil the ocean

[06:43:35.0000] <darobin>
jgraham: don't we usually realise they're horrible and then ship them anyway?

[06:44:46.0000] <Ms2ger>
Did someone mention webrtc?

[06:44:58.0000] <marcosc>
:)..... :(

[06:45:02.0000] <darobin>
that's beyond horrible

[06:45:30.0000] <jgraham>
Well there's usually a race between realising they're horrible and shipping them

[06:45:48.0000] <jgraham>
But somehow never between fixing them and shipping them

[06:46:14.0000] <marcosc>
ok, so lesson here is not to bother fixing

[06:46:29.0000] <marcosc>
"jQuery will fix it" :D

[06:46:52.0000] <marcosc>
The W3C - jQuery will fix it (TM)

[06:46:56.0000] <marcosc>
heh

[06:46:57.0000] <marcosc>
I like it

[06:47:30.0000] <Ms2ger>
/me fires marcosc 

[06:48:19.0000] <marcosc>
You can't fire me! I quit!

[06:48:22.0000] <marcosc>
:)

[06:48:33.0000] <jgraham>
marcosc: To paraphrase mpilgrim, I think the moral of the story is that it’s time for us to find a new hobby. Preferably one that doesn’t involve angle brackets. Or computers. Or electricity.

[06:51:39.0000] <marcosc>
that would be nice

[08:13:19.0000] <darobin>
hsivonen: I am being asked if CC-BY addresses all the use cases in http://www.w3.org/2011/03/html-license-options.html#usecases, do you know if that happens to be the case?

[08:15:32.0000] <darobin>
hsivonen: I think it's the case, but I'm wondering if it's something you've checked

[08:46:19.0000] <tantek>
darobin - it's something I've checked, and in general it does, with the only possible source of conflicts has to do with *GPL open source where the "BY" requirement is unable to be passed on. But in practice *GPL open source projects seem to get around this somehow.

[08:46:34.0000] <tantek>
theoretically CC0 is best for this reason - it cleanly satisfies all the use cases

[08:47:16.0000] <tantek>
that being said, CC-BY is an excellent step forward here, and I think one that everyone who needs those use-cases will be able to work with.

[08:47:59.0000] <tantek>
the "BY" clause seems to make it a "less scary" option to some W3C folks, so if that's what it takes, to take a big step toward open licensing, I think it is worth it.

[09:01:59.0000] <darobin>
tantek: thanks, that's what I thought

[09:02:28.0000] <tantek>
darobin - hence why I'm ok supporting the CC-BY experiment for HTML5 extension specifications in the HTMLWG charter

[09:02:29.0000] <darobin>
note that for the code-related parts I think that in general they should fall under the W3C Software License irrespective of whether they appear in the body of the spec or not

[09:03:00.0000] <tantek>
darobin - that's an interesting exception clause. Perhaps we can similarly say that code-related parts in anything CC-BY we publish are subject themselves to CC0.

[09:03:16.0000] <tantek>
any code examples, any algorithms

[09:03:28.0000] <darobin>
that could probably be done without much of a problem assuming CC-BY is accepted

[09:03:38.0000] <tantek>
that would address the "only possible source of conflicts" case I noted above

[09:03:42.0000] <tantek>
indeed

[09:04:09.0000] <darobin>
I've asked team-legal about the current situation regarding the Software License as it's not at all clear from the current copyright document

[09:04:34.0000] <Ms2ger>
Does the HTML parser count as a code part?

[09:05:07.0000] <darobin>
Ms2ger: I doubt any interpretation would agree, but it certainly has crossed my mind :)

[09:39:55.0000] <TabAtkins>
zcorpan: I just copied the naming from HTML's parser. ^_^

[09:43:25.0000] <dglazkov>
good morning, Whatwg!

[10:03:48.0000] <testtest>
alert("hello world")

[10:06:11.0000] <window>
/me Hello world

[10:06:48.0000] <testtest>
:)

[10:25:20.0000] <hallvors>
annevk, where art thou?

[10:28:23.0000] <nimbu>
miketaylr: i am sure you were referring to anne in your tweet

[10:28:53.0000] <hallvors>
/me goes to see what Mike is tweeting about

[10:29:20.0000] <nimbu>
hallvors: https://twitter.com/miketaylr/status/336894563497160704

[10:29:25.0000] <nimbu>
hallvors: ALSO HAI LONG TIME NO SEE

[10:29:39.0000] <miketaylr>
nimbu: you can't prove that!

[10:30:17.0000] <hallvors>
nimbu: thanks :-D although I'm seeing you on Twitter all the time so it's more a case of "long see no time"!

[10:30:32.0000] <nimbu>
ahahah

[10:30:47.0000] <hallvors>
<3

[10:31:46.0000] <Ms2ger>
Sounds more like gsnedders

[10:32:00.0000] <nimbu>
Ms2ger: but 15 YO

[10:32:08.0000] <nimbu>
on xhmlt2

[10:32:09.0000] <jgraham>
Could be Hixie except for the 15 part :)

[10:32:16.0000] <nimbu>
:D

[10:32:33.0000] <nimbu>
miketaylr: put all of us out of our misery by revealing the redacted

[10:32:37.0000] <jgraham>
http://ln.hixie.ch/?start=1042630901&count=1

[10:32:55.0000] <hallvors>
interesting exercise to come up with a list of all the people in the world who were digging XHTML at 15

[10:32:55.0000] <nimbu>
ahahaha omg

[10:33:17.0000] <jgraham>
/me has plenty of misery but doubts that knowing who miketaylr was talking about will reduce it much

[10:33:37.0000] <Ms2ger>
OH: "Updated Candidate Recommendation of XPath and XQuery Functions and Operators 3.0"

[10:33:57.0000] <nimbu>
i want to tweet this

[10:34:04.0000] <nimbu>
hixie's view of xhmlt2

[10:34:23.0000] <hallvors>
good old times :)

[10:34:24.0000] <nimbu>
lol structurally sound <l>ine element

[10:34:32.0000] <jgraham>
It does sound like satire now

[10:34:43.0000] <jgraham>
But I believe he was serious when he wrote it

[10:34:48.0000] <hallvors>
/me didn't write XHTML until it was out of fashion

[10:34:52.0000] <nimbu>
"I've gone over two years now without using it. I know this, because I set about, two years ago, to see if I could find a use case for the style attribute, and I never found one. "

[10:34:55.0000] <nimbu>
omg all gold here.

[10:34:57.0000] <nimbu>
ahahah

[10:35:05.0000] <jgraham>
Kind of puts paid to the idea that he can't change his mind

[10:35:42.0000] <jgraham>
Oh, Hixie still thinks that about the style attribute

[10:35:58.0000] <nimbu>
i would agree if he thinks so about css

[10:36:17.0000] <jgraham>
That there isn't a use case for it?

[10:36:24.0000] <jgraham>
Oh I see

[10:36:27.0000] <jgraham>
*if*

[10:36:42.0000] <jgraham>
Well no I think he still believes exactly what he wrote there

[10:37:00.0000] <jgraham>
That it is always possible to work without an inline style attribute

[10:37:27.0000] <jgraham>
Or at least, to the extent it isn't, that represents deficiencies in CSS

[10:39:20.0000] <jgraham>
Not that I can find the mail right now

[10:39:32.0000] <nimbu>
ha.

[10:39:54.0000] <hallvors>
Hixie prefers people who have class to people who have only style. Who would disagree with that?

[10:40:04.0000] <Ms2ger>
I remember the time he only allowed style="" on font elements

[10:40:32.0000] <hallvors>
that's a fontastic idea

[10:40:52.0000] <nimbu>
ahahahahahhaha hallvors

[10:40:58.0000] <Ms2ger>
/me cringes

[10:41:04.0000] <nimbu>
O DEAR LORD Ms2ger

[10:41:05.0000] <nimbu>
no

[10:41:34.0000] <hallvors>
/me is apparently too tired to stop making stupid jokes

[10:42:12.0000] <nimbu>
it is a great joake hallvors

[10:42:44.0000] <hallvors>
I'll licence the word fontastic to you any day Divya ;)

[10:43:03.0000] <nimbu>
immediately using this license hallvors THNX

[11:14:56.0000] <zcorpan>
marcosc: i've whined about it (web audio), but seemingly without success. please bring it up on the list (asking for the new names to be removed)

[11:15:41.0000] <marcosc>
zcorpan: I will

[11:15:46.0000] <marcosc>
I'm putting together a demo

[11:15:46.0000] <zcorpan>
thanks

[11:15:54.0000] <marcosc>
to show that it's borked

[11:16:52.0000] <marcosc>
... but I literally just bought Dead Space and Dead Space 2 for EU10 on Steam... so I'm gonna go play! :D

[12:33:09.0000] <Yuhong>
Wonder if Hixie is at Google I/O or something.

[12:38:13.0000] <tantek>
#googleio was last week

[12:40:02.0000] <jgraham>
I believe Hixie is away for a few days

[12:40:15.0000] <jgraham>
or s/days/weeks/ perhaps

[12:40:57.0000] <Ms2ger>
Monthish

[12:42:14.0000] <jgraham>
Which is "a few weeks", more or less :p

[12:42:47.0000] <jgraham>
(days was a misleadingly small unit)

[12:43:47.0000] <hober>
Yuhong: he's on (or at least was on) vacation

[12:45:17.0000] <Yuhong>
I wanted to mention that the crash in http://ln.hixie.ch/?start=1115899732&count=1

[12:46:00.0000] <Yuhong>
Was later rediscovered in http://blogs.norman.com/2011/security-research/drag-and-drop-vulnerability-in-ms11-050 and it turned out to be a exploitable crash fixed in MS11-050.


2013-05-22
[17:44:23.0000] <zewt>
nothing quite as much fun as discussions of the general form "i just started reading web specs yesterday, and you're doing everything wrong"

[17:46:23.0000] <jacobolus>
is this a reasonable place to mention a typo in http://www.w3.org/TR/css-variables/#custom-property ? in the example, "main-color" should be "var-main-color" and "accent-color" should be "var-accent-color"

[17:46:43.0000] <jacobolus>
TabAtkins: ↑

[19:26:26.0000] <rillian>
TabAtkins: have you looked at the new CSS selectors in the WebVTT spec? http://dev.w3.org/html5/webvtt/#css-extensions

[19:27:13.0000] <rillian>
I'd like to get a sanity check on the design before we start implementing in Firefox.

[21:08:45.0000] <annevk>
I updated http://quuz.org/webvtt/ a bit.

[21:44:02.0000] <TabAtkins>
rillian: Yeah, they're kosher.  I helped design it early, and the pseudo-classes are already in Selectors 4.

[21:44:57.0000] <annevk>
TabAtkins: so you can't do something like ::before { content: voice } at the moment which seems sad

[21:45:18.0000] <TabAtkins>
annevk: Hm, interesting.

[21:45:24.0000] <annevk>
TabAtkins: and the restrictions on properties might be arbitrary?

[21:45:50.0000] <annevk>
TabAtkins: and if this is going to be implemented in terms of components long term, how will that affect this design and usage of pseudo-elements?

[21:46:23.0000] <TabAtkins>
I don't know if captions are meant to be addressed in components.

[21:46:45.0000] <TabAtkins>
And I'm fine with custom things for built-in stuff, even if they *could* be done less conveniently with components.

[21:47:31.0000] <TabAtkins>
annevk: There's a voice attribute, so if we support ::cue(::before)), you can just do "content: attr(voice);"

[21:48:14.0000] <annevk>
TabAtkins: if components are the way to explain elements, they need to be able to explain captions I think

[21:48:19.0000] <TabAtkins>
The property restrictions may be arbitrary.  It's supposed to be the properties that you can put on ::first-line

[21:48:22.0000] <TabAtkins>
Plus maybe something else?

[21:48:58.0000] <annevk>
As part of the "no magic" strategy...

[21:49:19.0000] <TabAtkins>
annevk: Maybe? They obviously need some ability to take a selector and apply it over a subtree.

[21:49:26.0000] <TabAtkins>
Maybe Components level 2. ^_^

[21:49:42.0000] <TabAtkins>
(Right now you can only surface individual elements as pseudo-elements.)

[21:50:25.0000] <annevk>
I meant to look into that. Whether components had a way to let styles bleed through. It seems the answer is no?

[21:50:44.0000] <annevk>
Do they just inherit var-*?

[21:51:23.0000] <annevk>
Overall that sounds okayish I suppose.

[22:42:59.0000] <TabAtkins>
annevk: There's a switch you can set to let selectors match through, which defaults to false.

[22:43:09.0000] <TabAtkins>
There's another switch for inheritance, which defaults to true.

[22:43:21.0000] <TabAtkins>
And yes, it's expected that variables will be a major way to style them.

[22:43:44.0000] <TabAtkins>
But there is also a way to declare certain shadow elements as pseudo-elements on the component root.

[22:44:40.0000] <rillian>
TabAtkins: another thing we talked about is assigning automatic consistent colours to <v> nodes based on the attribute value

[22:44:51.0000] <rillian>
it would be nice if there were some way to do that with CSS

[22:46:32.0000] <TabAtkins>
That seems... hard.

[22:46:38.0000] <TabAtkins>
It's basically declarative randomness, no?

[22:53:06.0000] <annevk>
TabAtkins: yes

[22:53:49.0000] <annevk>
TabAtkins: you have a WebVTT file, which may be streaming, which has X different voices, which you want to allocate different colors so you can easily distinguish who is speaking (as alternative for the ::before thing)

[22:55:09.0000] <TabAtkins>
This doesn't have to be random, actually.  Hmm.  If you didn't care what the values were, perhaps a color hashing function, which takes an arbitrary input (like an attr(voice) value) and produces a color from it.

[22:55:40.0000] <TabAtkins>
This wouldn't guarantee the values were different, or far enough apart to be distinguishable, but it'd give you a good chance of it.

[22:56:37.0000] <TabAtkins>
Alternately, make it explicit.  Create a list of values, and have the page consume them by associating them with a key.  The value assigned to each key is stable for the page, and the order they're consumed is defined somehow.

[22:56:46.0000] <TabAtkins>
So you could define, say, 20 colors for voices.

[22:57:48.0000] <annevk>
TabAtkins: alternatively, you'd do it on a per-cue basis I suppose

[22:58:19.0000] <TabAtkins>
annevk: You want persistent colors for each voice across a video.

[22:58:36.0000] <annevk>
TabAtkins: upfront doesn't work for live-captioning

[22:58:57.0000] <annevk>
(not sure that will ever happen in practice in that way though :))

[22:59:47.0000] <TabAtkins>
annevk: I meant that you declare a list of 20 appropriate colors up-front.  CSS figures out which colors attach to which voice for you, first-come-first-serve.

[23:00:27.0000] <annevk>
Ah yeah. Combined with the hash table that works.

[23:01:07.0000] <annevk>
Does seem like a pie-in-the-sky feature a bit, but worth keeping in mind.

[23:02:40.0000] <TabAtkins>
Finding use-cases outside of WebVTT would help.

[23:05:44.0000] <annevk>
You could maybe generalize it to select the first value from this list of values based on a string, then forever associate that value with that string and remove it from the list.

[23:06:10.0000] <annevk>
And then do silly things with it.

[23:07:13.0000] <annevk>
Color table rows based on their sort key?

[23:08:53.0000] <annevk>
Should patent that. "New CSS-based feature to do silly things."

[23:15:20.0000] <rillian>
TabAtkins: it could even select from an ordered list of colours

[23:15:40.0000] <rillian>
oh, you said that

[23:20:06.0000] <TabAtkins>
annevk: Yeah, generalizing to arbitrary values is pretty obvious.

[23:20:18.0000] <TabAtkins>
And your example isn't too terrible.  ^_^

[23:20:34.0000] <annevk>
Make it so!

[23:20:43.0000] <TabAtkins>
Point is, sounds like a useful tool for a variety of disparate and somewhat interesting use-cases that are difficult to address otherwise.

[23:21:07.0000] <TabAtkins>
Ooooh, I wonder how much I can bodge this into a randomness feature.

[23:21:43.0000] <TabAtkins>
Because why force people to declare values when they don't have to?  We can create some random functions, valid only in the list-declaring at-rule.

[23:22:03.0000] <TabAtkins>
This solves at least part of the "when do you evaluate?" problem with declarative randomness.

[23:22:15.0000] <MikeSmith>
does Chromium not support audio/mpeg?

[23:22:30.0000] <TabAtkins>
Like, let the list be capped with a random function, so it generates infinite values after your predefined ones.

[23:23:46.0000] <annevk>
TabAtkins: I think you might want "repeat" too, or random-from-list

[23:23:53.0000] <annevk>
but yeah

[23:24:54.0000] <annevk>
man, styling my website in random colors would be great

[23:25:35.0000] <TabAtkins>
Haha

[23:45:08.0000] <rillian>
MikeSmith: I believe it doesn't. MP3 is still a non-free format.

[23:45:37.0000] <MikeSmith>
rillian: ok

[02:36:22.0000] <annevk>
So where's hallvors? I'm getting pretty close to using Fetch in XMLHttpRequest to see what might break...

[02:36:37.0000] <annevk>
Also, I guess I want some feedback from Hixie and others. Maybe I should send email.

[03:15:30.0000] <darobin>
heh, "pretty dry reading"

[03:16:17.0000] <darobin>
annevk: "HTML Standard's fetch and potentially CORS-enabled fetch algorithms", -> potentially?

[03:16:52.0000] <darobin>
annevk: "and make provide a model" s/make//

[03:18:16.0000] <darobin>
annevk: "to fetch a resource or URL" what's the diff?

[03:19:14.0000] <darobin>
annevk: "Note: The block cookies flag is obsolete now." if so, then please either remove it or indicate why it's still in

[03:20:09.0000] <darobin>
annevk: "The element's node document. " -> The element's document node.  maybe?

[03:22:48.0000] <Ms2ger>
darobin, no, "node document" is a well-defined term

[03:23:26.0000] <darobin>
ah, the DOM4 node document?

[03:23:48.0000] <darobin>
an indication that this is a term would help, I failed to parse the sentence on reading

[03:24:17.0000] <Ms2ger>
Hmm, yes, that should be a link

[03:24:34.0000] <Ms2ger>
Hrm

[03:24:52.0000] <Ms2ger>
Something is wrong with the preprocessing

[03:26:46.0000] <darobin>
a lot of terms seem to be getting style but no link, too

[03:27:11.0000] <Ms2ger>
/me looks what's up

[03:29:21.0000] <Ms2ger>
People complain about tar arguments, but ln sucks too

[03:29:41.0000] <darobin>
annevk: ["true" is a string, while true is a byte string. ] maybe that example would be clearer if you didn't use a common boolean term

[03:29:46.0000] <darobin>
Ms2ger: you don't say :)

[03:30:17.0000] <darobin>
annevk: "considers bytes in the range 0x41 to 0x5A to be a match for their corresponding byte in the range 0x61 to 0x7A." -> does this need to state that the reverse is true too?

[03:30:41.0000] <darobin>
annevk: "via data URL" -> URLs

[03:32:58.0000] <annevk>
darobin: so lots of thanks, will try to address these tomorrow

[03:33:03.0000] <annevk>
darobin: seems we're heading out for food

[03:33:16.0000] <darobin>
sure, I'll just keep dumping stuff in the logs

[03:33:26.0000] <Ms2ger>
/me messes with the xrefs in the meantime

[03:33:31.0000] <darobin>
mostly it seems editorial so fart

[03:33:36.0000] <darobin>
so *far*

[03:33:59.0000] <annevk>
:-)

[03:34:20.0000] <darobin>
annevk: "A arequest has an associated " -> request

[03:52:59.0000] <Ms2ger>
darobin, what was the potentially thing about?

[03:54:07.0000] <darobin>
Ms2ger: ah, I can parse that sentence better on re-reading it

[03:54:37.0000] <darobin>
it's "potentially-CORS-enabled"

[03:55:35.0000] <darobin>
on first read it seemed to say "this specification supplants (...) HTML Standard's fetch" and, you know, maybe, CORS-enabled fetch

[03:56:06.0000] <darobin>
I think the "potentially" is useless and would be better dropped

[03:56:09.0000] <Ms2ger>
Heh

[03:56:28.0000] <Ms2ger>
Well, that's the goal of this spec :)

[03:57:20.0000] <darobin>
yeah, which is why it should be clear and not "potential" :)

[03:58:14.0000] <darobin>
hmmm, most of these algorithms I can't usefully review without writing the code to match

[03:59:18.0000] <darobin>
/me food

[03:59:57.0000] <Ms2ger>
Anyway, xrefs and "a arequest" should be fixed

[04:04:38.0000] <marcosc>
slightlyoff: can you help us out quickly with some Futures spec terminoloty? https://github.com/sysapps/web-alarms/issues/29#issuecomment-18271329

[04:05:31.0000] <marcosc>
or terminology :)

[04:27:56.0000] <darobin>
I love the mention that using cookies is a fingerprinting vector :)

[04:30:03.0000] <Ms2ger>
Keep your fingers off my cookies

[04:30:12.0000] <Ms2ger>
Cookies are delicious delicacies

[04:47:24.0000] <darobin>
annevk: some more notes for when you come back https://gist.github.com/anonymous/fe3aa4243ae7b4f68376

[04:47:39.0000] <darobin>
I guess that for such editorial stuff I could have made a pull request

[04:47:46.0000] <darobin>
will see about that next time

[06:50:01.0000] <slightlyoff>
marcosc: yeah, sorry for the delay

[06:53:28.0000] <marcosc>
slightlyoff: no probs, thanks for commenting

[08:34:41.0000] <Ms2ger>
SimonSapin, how's the new job? :)

[08:35:22.0000] <SimonSapin>
Ms2ger: It’s awesome :D

[08:35:54.0000] <SimonSapin>
and a bit overwhelming

[08:43:05.0000] <MikeSmith>
rillian: fwiw I managed to build Chromium with audio/mpeg support by feeding it a couple of gyp flags

[08:43:15.0000] <MikeSmith>
http://www.chromium.org/audio-video#TOC-GYP-Flags

[08:43:39.0000] <MikeSmith>
I guess that probably enables H.264 support too

[08:48:14.0000] <TabAtkins>
Good lord, tc39 is *actually* telling me that I shouldn't reuse their data structures, and should instead just reinvent a Map-lookalike every time I want to use a Map in a spec.

[08:48:22.0000] <TabAtkins>
This is a dream, right?

[08:48:26.0000] <TabAtkins>
I'm dreaming right now?

[08:49:38.0000] <Ms2ger>
No, no

[08:49:42.0000] <odinho>
Sweet dreams

[08:49:43.0000] <Ms2ger>
That's Javascripty

[08:49:51.0000] <Ms2ger>
It's the Idiomatic Way

[08:50:44.0000] <jgraham>
TabAtkins: In a moment MikeSmith will turn into Carrie Fisher and kiss you

[08:50:48.0000] <jgraham>
Which is weird

[08:50:53.0000] <TabAtkins>
jgraham: But oddly arousing.

[08:50:56.0000] <jgraham>
But it's your dream

[08:51:16.0000] <TabAtkins>
Does MikeSmith have the buns on before he changes?

[08:51:55.0000] <jgraham>
Sure, like normal

[08:52:06.0000] <TabAtkins>
Cool, cool, just making sure.

[08:52:17.0000] <TabAtkins>
Wouldn't want it to get weird or anything.

[10:35:44.0000] <zewt>
"Modified UTF-8 form"? there's a sequence of words that makes me rage inside

[11:31:17.0000] <rniwa>
zewt: sounds like a scary stuff.

[11:31:37.0000] <rniwa>
zewt: where did you find this horror?

[13:01:38.0000] <zewt>
google docs :(

[13:01:56.0000] <zewt>
(for Java stuff so the real blame might be on Oracle or Sun or whoever)

[13:02:09.0000] <zewt>
http://developer.android.com/training/articles/perf-jni.html

[13:09:12.0000] <Philip`>
zewt: Is the problem that you're wanting some actual documentation of the JNI API, not just a collection of random tips?

[13:13:40.0000] <Philip`>
zewt: Oh, I guess you were actually responding to rniwa

[13:13:59.0000] <Philip`>
in which case I'm pretty sure it's Sun's fault

[13:18:16.0000] <Philip`>
zewt: http://docs.oracle.com/javase/1.3/docs/guide/jni/spec/types.doc.html#16542 - been there since at least 1997, apparently

[13:19:16.0000] <Philip`>
Back then they thought a 16-bit char would be a sensible idea, too

[13:19:34.0000] <Philip`>
but it turns out Unicode is hard :-(

[13:35:56.0000] <dekiss>
when Google joined whatwg?

[13:44:00.0000] <jgraham>
dekiss: WHATWG doesn't have members really

[13:44:19.0000] <jgraham>
But Google employees have been active for a long time

[13:44:21.0000] <dekiss>
?

[13:44:24.0000] <dekiss>
cmon

[13:44:32.0000] <dekiss>
apple opera mozilla started it right?

[13:44:36.0000] <dekiss>
well

[13:44:40.0000] <dekiss>
who operate it then?

[13:44:49.0000] <dekiss>
it has closed membership i dont understand

[13:44:56.0000] <dekiss>
it must have directors or something

[13:45:12.0000] <dekiss>
right?

[13:45:35.0000] <dekiss>
you want to say it has some kind of directors and it works like closed organization?

[13:46:08.0000] <jgraham>
Apparently the amount that you can get done without a heavyweight bureaucracy would surprise you

[13:46:49.0000] <jgraham>
WHATWG theoretically has a group of appointed members that can tell Hixie that he's useless

[13:47:07.0000] <jgraham>
In practice they have, as far as I know, done nothing

[13:47:20.0000] <jgraham>
In fact it's hard to imagine what they would do

[13:47:41.0000] <hober>
i think they actually did something once

[13:47:50.0000] <jgraham>
Because the response to the failure mode "Hixie has gone mad and won't listen to reason" is to fork the spec

[13:47:52.0000] <hober>
but i don't remember what it was

[13:48:24.0000] <jgraham>
Didn't they vote to allow annevk to join their club?

[13:48:53.0000] <jgraham>
AFAIK the WHATWG site is hosted on Hixie's Dreamhost account

[13:49:23.0000] <jgraham>
In the early days some lawyers at Opera, Mozilla and Apple were involved in licensing the specification

[13:49:41.0000] <jgraham>
Apart from that it's just a mailing list

[13:50:11.0000] <dekiss>
hm

[13:50:30.0000] <dekiss>
its offiocial standard

[13:50:36.0000] <dekiss>
and 99% use it

[13:51:18.0000] <jgraham>
In this context I don't know what an "official" standard is

[13:51:56.0000] <jgraham>
It's not like there are laws about HTML compliance

[13:52:33.0000] <jgraham>
Browser vendors and market forces are the ultimate arbiters of what gets implemented

[13:52:55.0000] <dekiss>
hm

[13:52:58.0000] <dekiss>
what about w3?

[13:53:04.0000] <jgraham>
But there is some competition between venues for doing standards work

[13:53:05.0000] <dekiss>
Tim don't have power?

[13:53:19.0000] <dekiss>
that is plain bad

[13:53:27.0000] <dekiss>
money=BAD

[13:53:39.0000] <jgraham>
On brand name, efficiency, IPR commitments, etc.

[13:53:45.0000] <dekiss>
jgraham I know thats true I just try to cinvience myself in oppposite

[13:54:25.0000] <jgraham>
So W3C have comparatively strong IPR policies which several vendors particuarly like

[13:54:39.0000] <jgraham>
e.g. Microsoft won't do work in the WHATWG

[13:54:59.0000] <jgraham>
They also have a rather strong brand

[13:55:18.0000] <jgraham>
Although they are currently engaged in a self-destruct campaign on that front

[13:55:30.0000] <dekiss>
why?

[13:56:38.0000] <jgraham>
I don't know why.

[13:57:31.0000] <jedimind>
hey its a place w/ people and stuff

[13:57:33.0000] <jedimind>
crazy

[13:57:43.0000] <jgraham>
But the whole DRM thing is doing a lot of harm to the whole "W3C => good for the web" association they have managed to build up

[13:58:47.0000] <jgraham>
Also among vendors they are not renouned for being a place to get stuff done with a minimum of overhead

[13:59:17.0000] <gavinc>
Okay, those are same vendors pushing the DRM stuff.

[13:59:58.0000] <jgraham>
On the other hand WHATWG has a minimum of Process and is generally rather efficient at solving technical challenges, but doesn't offer the Patent policy so is rather weak on the IPR front

[14:00:30.0000] <jgraham>
(OTOH, it is possibly to republish WHATWG specs through W3C which can provide the benefits of both organisations)

[14:04:14.0000] <astearns>
jgraham: those benefits being all the process of the W3C plus all the snarking from WHATWG about that process?

[14:04:51.0000] <dekiss>
hm

[14:06:18.0000] <jgraham>
astearns: More like "getting stuff done from WHATWG without that process"


2013-05-23
[20:01:49.0000] <annevk>
TC39: Work with us. "W3C": Okay, how do I solve X in a way that makes sense? TC39: GTFO.

[20:02:04.0000] <annevk>
sad panda

[20:17:54.0000] <zcorpan>
annevk: up early?

[20:19:59.0000] <annevk>
zcorpan: late today actually. I'm in Taipei

[20:20:49.0000] <zcorpan>
ah

[20:21:48.0000] <annevk>
zcorpan: about to upload your merge to the server

[20:22:35.0000] <zcorpan>
what merge?

[20:23:11.0000] <annevk>
zcorpan: NOTE requiring whitespace

[20:23:18.0000] <zcorpan>
ah

[20:24:33.0000] <zcorpan>
first i considered filing a bug but i figured it would be about the same effort to do a PR

[20:41:56.0000] <MikeSmith>
Taipei

[20:42:02.0000] <MikeSmith>
annevk: nice

[20:42:19.0000] <MikeSmith>
been there only one time but I'd really like to visit again

[20:43:42.0000] <annevk>
MikeSmith: mostly been working thus far, but Saturday I'll have a chance to visit a few things and maybe go for a hike

[20:44:15.0000] <annevk>
MikeSmith: unfortunately the TAG F2F is in London next week so I couldn't hang around longer. Ideally I would've just stayed in Asia until the AC thingie...

[20:45:50.0000] <MikeSmith>
annevk: people probably suggested this already, but I recommend going to the night market if you have time

[22:08:54.0000] <nimbu>
Taipeiii

[22:09:06.0000] <nimbu>
i was only there to buy the first tiny asus computer

[22:09:10.0000] <nimbu>
and i never used it since

[22:11:58.0000] <annevk>
sounds like my XO laptop

[22:12:03.0000] <annevk>
although I got that in Oslo

[22:14:04.0000] <nimbu>
ya exactly

[23:22:24.0000] <annevk5>
Why is "intertwinedness" not a word?

[23:59:20.0000] <Ms2ger>
hober, yeah, I believe the one thing the whatwg members did was making annevk a member

[00:21:06.0000] <hallvors>
morning annevk5

[00:21:20.0000] <annevk>
hallvors: good afternoon

[00:22:02.0000] <hallvors>
so it's you and not a clone - 5 of you would be a bit rich, though between you you'd get a lot of spec stuff done :-p

[00:22:21.0000] <hallvors>
joking aside: thanks for the response headers fix

[00:22:31.0000] <annevk>
heh

[00:22:48.0000] <annevk>
5 is an obscure reference to 5 > 2, which is itself obscure

[00:35:09.0000] <hallvors>
layered obscurity. Sounds like something a spec editor would be into, yes

[00:35:14.0000] <hallvors>
;)

[00:39:17.0000] <annevk>
only in off hours

[00:47:17.0000] <hsivonen>
MikeSmith: did Vic Gundotra make you take the "(tm)" bit out on G+?

[01:40:34.0000] <hallvors>
Does the CORS spec have a test suite?

[01:41:11.0000] <annevk>
hallvors: yeah, Odin wrote one

[01:41:20.0000] <odinho>
^_^

[01:41:23.0000] <hallvors>
great, but where is it?

[01:41:31.0000] <odinho>
The obvious place

[01:41:34.0000] <hallvors>
I was looking around at w3c-test a bit

[01:41:41.0000] <odinho>
webappsec/cors

[01:41:44.0000] <odinho>
BUT!

[01:41:45.0000] <hallvors>
ah

[01:41:47.0000] <hallvors>
thanks

[01:41:47.0000] <odinho>
I will move it :D

[01:41:51.0000] <odinho>
Because I am allowed now

[01:41:59.0000] <odinho>
"allowed"

[01:42:23.0000] <annevk>
put it in Fetch :)

[01:43:17.0000] <odinho>
annevk: I'll put it in web-platform-tests/  -- but I should use the TR name, and that's still cors at W3C. :/

[01:43:38.0000] <annevk>
odinho: there's a requirement to that effect?

[01:43:39.0000] <odinho>
Dunno when the man will take Fetch.

[01:43:50.0000] <odinho>
annevk: Yep. To make it easy to find tests-specs.

[01:44:11.0000] <odinho>
I think it's a good rule :)

[01:44:25.0000] <annevk>
good rule of thumb, sure

[01:44:41.0000] <Ms2ger>
odinho, just put them under fetch

[01:44:44.0000] <odinho>
annevk: Easy to move when webapps/someone taks fetch

[01:48:37.0000] <hallvors>
odinho: could you also make sure the correct server names and port numbers work on w3c-test.org ?

[01:48:52.0000] <hallvors>
or rewrite the tests to use http://www.w3.org/wiki/Testing/Requirements#The_Web_test_server_must_be_available_through_different_domain_names

[01:50:02.0000] <Ms2ger>
Does webappssec have anything else?

[02:09:15.0000] <hallvors>
annevk: why is there no text about redirects under "cross-origin request event rules"?

[02:09:26.0000] <hallvors>
http://xhr.spec.whatwg.org/#cross-origin-request-event-rules

[02:09:52.0000] <annevk>
Apparently my site is the reference Stackoverflow uses to comment on why application/xml is better than text/xml, except that blog post is really old and obsolete by now (although the bad RFC has not yet been updated).

[02:10:12.0000] <annevk>
hallvors: CORS handles redirects

[02:10:28.0000] <annevk>
hallvors: all redirect text is going away once I patch XMLHttpRequest to use Fetch

[02:10:36.0000] <hallvors>
/me will look at CORS

[02:10:51.0000] <annevk>
Look at Fetch

[02:10:57.0000] <annevk>
CORS is the past

[02:12:26.0000] <hallvors>
http://www.w3.org/TR/2013/CR-cors-20130129/#redirect-steps

[02:12:35.0000] <hallvors>
/me will look at Fetch too

[02:14:00.0000] <annevk>
o_O TR/

[02:14:10.0000] <annevk>
http://steps.dodgson.org/b/2013/05/19/polymer-and-web-components/ "The New Gang of Four" :-)

[02:15:51.0000] <hallvors>
annevk: that's the CORS spec your XHR spec on whatwg links to :)

[02:16:00.0000] <hallvors>
/me believes in clicking links on the web

[02:16:25.0000] <annevk>
o_O

[02:16:34.0000] <annevk>
might be the latest I suppose, all the more reason to fetchify it

[02:17:27.0000] <hallvors>
ugh annevk, come back - I need you :-/

[02:20:39.0000] <hallvors>
So Fetch says "If the CORS flag is set and response's location's origin is not request's url's origin, set request's origin to a globally unique identifier."

[02:21:01.0000] <hallvors>
I'm not entirely sure what that means

[02:21:27.0000] <hallvors>
but as far as I can tell, it doesn't apply if a CORS resource redirects back to a same-origin resource

[02:31:29.0000] <odinho>
hallvors: They should use that.

[02:32:10.0000] <hallvors>
odinho: you meant the server names stuff?

[02:32:49.0000] <odinho>
Yea. I made a support.js file for that at least. But can double check it when I move it.  Was sidetracked by a meeting just now.

[02:33:17.0000] <hallvors>
excellent

[02:34:07.0000] <odinho>
hallvors: globally unique identifier is just a long random string, -- and the important part is that it stringifies to "null" but one guid is always != another guid

[02:35:07.0000] <odinho>
hallvors: If you    mysite -> flickr -> flickr, then origin=flickr,  if you do anything else, it's guid.

[02:35:19.0000] <odinho>
hallvors: So even    mysite -> flickr -> mysite  == guid

[02:35:37.0000] <hallvors>
OK..

[02:36:46.0000] <hallvors>
So that sends no Origin header in the next request - what about cookies?

[02:37:53.0000] <hallvors>
/me sometimes dislikes algorithm-style specs :-/

[03:00:13.0000] <hallvors>
Fetch makes NO sense anyway. "If request's omit credentials mode is always": include cookies and auth. Huh? What does 'omit' mean again?

[03:03:03.0000] <odinho>
Sounds strange. "omit credentials" always should not include cookies and auth.

[03:11:35.0000] <hallvors>
I just reported a bug for it

[03:11:40.0000] <hallvors>
probably an error

[03:34:29.0000] <Ms2ger>
hallvors, 'manual foo.html' in the MANIFEST

[03:35:52.0000] <jgraham>
Not that that's an agreed standard, but it works with Mozilla's infrastructure at least

[03:36:32.0000] <hallvors>
OK, thanks

[03:36:43.0000] <hallvors>
I admit that I don't usually update MANIFEST files

[03:36:54.0000] <hallvors>
I didn't know what they were for, really..

[03:37:34.0000] <Ms2ger>
I've got a tool to automatically run the tests listed there, and they're used for Mozilla's importing code too

[03:54:45.0000] <gsnedders>
Ms2ger: I started hanging around here when I was 15, not HTML WG fantasy land.

[04:04:02.0000] <darobin>
/me wonders why anyone would *not* want to go to fantasy land!

[04:19:51.0000] <annevk>
hallvors: seems I inverted the logic there

[04:19:55.0000] <annevk>
hallvors: for both statements

[04:19:59.0000] <annevk>
sloppy :/

[04:21:09.0000] <odinho>
Ah, I has a pull request BTW. https://github.com/w3c/web-platform-tests/pull/112

[04:21:16.0000] <odinho>
I added my todo list to it :-)

[04:48:49.0000] <hallvors>
annevk: https://www.w3.org/Bugs/Public/show_bug.cgi?id=22150 . And maybe you can add an explanatory note so that I'll understand why I don't have to report https://www.w3.org/Bugs/Public/show_bug.cgi?id=22151 next time.. ;)

[04:56:02.0000] <hallvors>
jgraham: was there a new review for https://critic.hoppipolla.co.uk/r/27 somewhere? URL?

[04:56:40.0000] <hallvors>
(if you haven't gotten around to it, no worries - I'll read through the old review and make fixes)

[05:35:49.0000] <Ms2ger>
Done with https://critic.hoppipolla.co.uk/r/116 for now, if anybody feels like reviewing

[05:49:34.0000] <MikeSmith>
hsivonen: about Google Plus, yeah, I got an admin message telling me I had to drop the [tm] from my name in order to comply with their misguided "real name" policy

[05:52:56.0000] <darobin>
they still have a "real name" policy?

[05:54:33.0000] <hsivonen>
MikeSmith: :-(

[05:57:26.0000] <Ms2ger>
Pff, g+

[05:57:57.0000] <hsivonen>
Today I learned. If you know the secret address of a shared calendar on Google Calendar and try to subscribe to it from another account, the you don't get to subscribe, but you are told the name of the calendar

[06:05:12.0000] <MikeSmith>
darobin: yeah they still have such a plicy afaik

[06:06:10.0000] <darobin>
MikeSmith: so basically it's okay for there to be zillions of bots friending people pretending to be sexy girls so long as they use real names?

[06:07:01.0000] <miketaylr>
/me pretends to be a sexy girl

[06:07:18.0000] <MikeSmith>
darobin: yep, that's an accurate description

[06:07:29.0000] <Ms2ger>
Of miketaylr?

[06:07:35.0000] <MikeSmith>
they really have their priorities straight

[06:07:40.0000] <MikeSmith>
Ms2ger: heh :)

[06:07:48.0000] <miketaylr>
:D

[06:11:03.0000] <Ms2ger>
Oh, looks like Gecko has <track> now

[06:21:23.0000] <nessy>
nice, nice, nice!

[06:35:17.0000] <hsivonen>
You'd think that the new Privacy Policy that allows Google to combine data across services would give them a way to tell bots and people apart by analyzing activity on other services

[06:37:39.0000] <Ms2ger>
That sounds even creepier

[06:47:01.0000] <jgraham>
Which part of "giant organisation that stores a complete record of everything you view online, your shopping habits, your email, your appointments, your documents and your social contacts" didn't already sound creepy?

[06:47:41.0000] <darobin>
jgraham: the part where they do the same for bots — poor sods haven't been asking for it

[06:47:43.0000] <Ms2ger>
"Creepier" doesn't imply it wasn't already creepy

[06:48:10.0000] <zewt>
the fight for bot privacy

[07:42:07.0000] <GPHemsley>
/me grumbles something about mimesniff

[07:44:59.0000] <GPHemsley>
Apparently a number of changes have been made to the Gecko sniffer in areas covered by the mimesniff without anyone letting me know

[07:45:06.0000] <GPHemsley>
+spec

[09:17:26.0000] <dglazkov>
good morning, Whatwg!

[10:16:19.0000] <Ms2ger>
/me always has to do a double take to figure out whether a tweet came from @FakeAlexRussell or @slightlylate

[10:29:40.0000] <TabAtkins>
annevk: intertwindedness *is* a word.

[10:29:51.0000] <Ms2ger>
winded?

[10:30:37.0000] <TabAtkins>
intertwinedness

[10:30:41.0000] <TabAtkins>
Too many d's.

[10:31:41.0000] <TabAtkins>
tantek: Mind editing UI to specify that 'cursor' propagates from the root to the viewport?

[10:31:54.0000] <TabAtkins>
tantek: See "Addressing space outside a document's root element" thread.

[10:32:05.0000] <tantek>
what does it mean for something to propagate to the viewport?

[10:32:13.0000] <tantek>
sounds reasonable

[10:32:23.0000] <TabAtkins>
The effect of the property applies to the viewport.  Check the wording around background.

[10:32:37.0000] <tantek>
thread on which list? URL if you happen to be looking at it?

[10:32:46.0000] <TabAtkins>
www-style, one sec for link

[10:33:15.0000] <TabAtkins>
http://www.w3.org/mid/kmqqts$ql1$1⊙ggo

[10:33:30.0000] <TabAtkins>
bz and I agree on it

[10:36:21.0000] <tantek>
TabAtkins - do we have a preferred canonical reference for this notion of viewport in CSS3, or are we still using 2.1 for that?

[10:36:33.0000] <TabAtkins>
Still 2.1.

[10:36:37.0000] <tantek>
k

[10:36:38.0000] <TabAtkins>
Unless B&B has something useful in it.

[10:36:47.0000] <tantek>
that's what I was wondering actually.

[10:36:55.0000] <TabAtkins>
Hm, wonder where the concept of "viewport" would even go...

[10:39:16.0000] <tantek>
yeah, that question.

[10:39:36.0000] <Ms2ger>
css-viewport-3

[10:39:51.0000] <TabAtkins>
Ms2ger: Consisting of two non-boilerplate paragraphs?

[10:40:03.0000] <Ms2ger>
Sounds like par for the course

[10:40:12.0000] <TabAtkins>
jerk. ^_^

[10:41:31.0000] <Ms2ger>
Me? I'd never! :)

[10:43:45.0000] <scott_gonzalez>
dglazkov Hixie: The idea of using the new input types (such as <input type="date">) with a custom UI has been discussed a few times on the mailing list, but there's never been a solid answer to this.

[10:43:59.0000] <scott_gonzalez>
The most recent response I've gotten from Hixie was that custom elements would solve this.

[10:44:07.0000] <scott_gonzalez>
Is that still the plan?

[10:46:02.0000] <TabAtkins>
Yes.

[10:46:41.0000] <scott_gonzalez>
Ok, so this presents two challenges. One hopefully easier to overcome than the other.

[10:46:51.0000] <scott_gonzalez>
The first problem is that nobody supports this.

[10:47:18.0000] <scott_gonzalez>
Chrome/Canary throw an error if you try to replace the Shadow DOM for an input: http://jsfiddle.net/tj_vantoll/uTa2d/

[10:47:24.0000] <Ms2ger>
Well, nobody supports anything else either

[10:47:32.0000] <scott_gonzalez>
That's the problem that's hopefully easy to overcome.

[10:48:02.0000] <TabAtkins>
Yes, that's something we know about and will fix as we go along.

[10:48:07.0000] <scott_gonzalez>
The bigger problem is that you wouldn't actually want to replace all <input> elements, just the ones of a certain @type.

[10:48:20.0000] <TabAtkins>
That is indeed the hard problem. :/

[10:48:30.0000] <TabAtkins>
<input> was badly designed from the start.

[10:48:41.0000] <TabAtkins>
No real way around it.

[10:49:13.0000] <scott_gonzalez>
Ok, let's start with an easier problem. Let's say you want to just create a new element instead of hijacking <input type="date">

[10:49:29.0000] <scott_gonzalez>
So you create a custom element like <foo-date>

[10:49:34.0000] <scott_gonzalez>
Which inherits from <input>

[10:49:55.0000] <scott_gonzalez>
We'll need a way to specify that it actually inherits from <input type="date"> so that all the semantics work.

[10:50:23.0000] <scott_gonzalez>
Will custom elements be able to leverage native validation or will everything have to go through setCustomValidity()?

[10:53:04.0000] <TabAtkins>
We don't yet let you define your own form elements yet.  When we do, though, we'll provide hooks for all the APIs.

[10:53:24.0000] <TabAtkins>
(And probably make satisfying the hooks required - no form elements that provide a submit value but don't understand the validity API, etc.)

[10:57:28.0000] <tj_vantoll>
It seems like if that were possible you probably wouldn't want to go the route of changing the shadow root of an <input>.

[10:58:10.0000] <scott_gonzalez>
Well, this is just the same old progressive enhancement of HTML4, upgraded to HTML5.

[10:58:17.0000] <TabAtkins>
Changing, no.  Adding a new shadow root, yes.

[10:58:44.0000] <scott_gonzalez>
Doesn't adding a new shadow root remove the old one?

[10:59:19.0000] <scott_gonzalez>
Or did you just mean that we're not reaching into the existing one and changing it.

[10:59:20.0000] <TabAtkins>
Not quite - it shadows (hah!) the old one, but you can surface the old one through the <shadow> element in your shadow tree.

[11:03:51.0000] <tj_vantoll>
Has any work started towards specifying custom form elements yet?

[11:04:56.0000] <TabAtkins>
There has been thought about it.  Nothing specified yet.

[11:07:11.0000] <jgraham>
I assumed intertwindness had been banned as a word to prevent Authur C. Clarke using it in a sex scene

[11:07:32.0000] <TabAtkins>
I suspect he already has, though I'd have to reread.

[11:09:53.0000] <tj_vantoll>
Ok so just to make sure I understand what has been discussed, the fact that you cannot add a new shadow root to form elements in Chrome is an implementation issue, but it should be possible at some point. And, the long term plan is to allow for custom form elements that will have hooks into things like the validation APIs.

[11:10:38.0000] <TabAtkins>
Yes.

[11:11:16.0000] <jgraham>
FWIW the design of <input> is helpful if you don't start from the point of view of trying to make components work

[11:11:43.0000] <jgraham>
e.g. <input type=number> can fall back to a text input without problems

[11:11:44.0000] <TabAtkins>
jgraham: Not particularly.  It means that you have to swap out interfaces based on attribute changes, which is nasty in a component-less world too.

[11:11:54.0000] <TabAtkins>
Yeah, that's the one good thing about it.

[11:11:59.0000] <jgraham>
Well yes, there is that

[11:12:10.0000] <TabAtkins>
But can also be solved (with a drop in usability) by allowing fallback contents.

[11:14:05.0000] <tj_vantoll>
Ok. Thanks TabAtkins.

[11:30:39.0000] <GPHemsley>
/me wonders what is lurking in the shadows...

[11:34:59.0000] <Ms2ger>
Me

[12:53:33.0000] <TabAtkins>
GPHemsley: Note that the shadow/light dom naming was originally a reference to legend of zelda.

[12:57:07.0000] <miketaylr>
so that's the real reason we have <link> for components

[12:57:29.0000] <TabAtkins>
Well, duh.  Surprised it took you so long.

[12:58:01.0000] <miketaylr>
or is it import now?

[12:58:10.0000] <TabAtkins>
Still a link.

[13:06:06.0000] <jgraham>
When do we get the boomerang?

[13:06:20.0000] <Ms2ger>
/me falls over

[13:06:23.0000] <Ms2ger>
It's here!

[14:27:16.0000] <rniwa>
TabAtkins: yt?

[14:27:23.0000] <TabAtkins>
rniwa: pong

[14:27:25.0000] <rniwa>
TabAtkins: hi

[14:27:29.0000] <rniwa>
TabAtkins: i have a question for object-fit

[14:27:34.0000] <TabAtkins>
Shoot

[14:27:54.0000] <rniwa>
TabAtkins: so suppose we have an image with an instrinstic ratio of 3:2

[14:28:10.0000] <rniwa>
TabAtkins: and then set width & height of an img element that uses this page to be 120px and 80px

[14:28:27.0000] <rniwa>
TabAtkins: now further suppose that I set max-width to 100px;

[14:28:40.0000] <rniwa>
TabAtkins: in this case, does img element still occupy 80px in height?

[14:28:57.0000] <hober>
rniwa: what's the value of object-fit?

[14:28:58.0000] <rniwa>
TabAtkins: (at least that's my current understanding of the spec)

[14:29:04.0000] <rniwa>
hober: oh very important

[14:29:15.0000] <rniwa>
TabAtkins, hober: with object-fit: contain

[14:29:16.0000] <TabAtkins>
That has nothing to do with object-fit, but rather to the sizing algorithm.

[14:29:25.0000] <TabAtkins>
object-fit doesn't change the sizing algorithm in any way.

[14:29:37.0000] <rniwa>
TabAtkins: but why?

[14:29:40.0000] <TabAtkins>
And the sizing algorithm just receives a specified size of 100 by 80

[14:29:44.0000] <TabAtkins>
rniwa: Why what?

[14:29:59.0000] <rniwa>
TabAtkins: why doesn't sizing algorithm change the height to be 66px instead?

[14:30:10.0000] <rniwa>
TabAtkins: what's the use case for leaving that extra space for img element?

[14:30:17.0000] <TabAtkins>
...because why would it?  You set the height to 80px.  We believe you when you say that.

[14:30:25.0000] <TabAtkins>
If you want CSS to compute the height, leave it auto.

[14:30:39.0000] <rniwa>
TabAtkins: so 120px and 80px are bad examples

[14:30:53.0000] <rniwa>
TabAtkins: a realistic example will be something like 100% by 100%

[14:31:03.0000] <rniwa>
TabAtkins: or 1em by 1em

[14:31:10.0000] <hober>
if you don't know what the width or height of an image is, so you don't know it's intrinsic aspect ratio, you want to constrain both width and height and maintain the aspect ratio without having weird extra space on either side

[14:31:14.0000] <TabAtkins>
Still all bad examples, because you're setting the height.

[14:31:42.0000] <TabAtkins>
hober: I don't think it's possible to enforce that many constraints at once.

[14:31:44.0000] <rniwa>
TabAtkins: why not?

[14:32:00.0000] <TabAtkins>
rniwa: Because you're setting the height.  Again, *we believe you* if you set it.

[14:32:30.0000] <hober>
i *think* we're talking about this case: <img src=unknown.jpg> img { max-width: 100%; max-height: 100%; object-fit: contain; }

[14:32:47.0000] <TabAtkins>
Okay, so that's a new situation.

[14:32:48.0000] <rniwa>
hober: s/max-//

[14:33:00.0000] <hober>
oh, interesting

[14:33:05.0000] <TabAtkins>
Let's assume that both of the 100%s resolve to a definite length.

[14:33:26.0000] <rniwa>
<img src=unknown.jpg> img { width: 100%; height: 100%; max-width: 1000px; max-height:1000px; object-fit: contain; }

[14:33:42.0000] <TabAtkins>
Now, width and height are both auto, so you enter the sizing algorithm with a specified size that's only constrained on the max side.

[14:34:10.0000] <rniwa>
TabAtkins: wait, why are width & height auto in this case?

[14:34:15.0000] <TabAtkins>
rniwa: No, your example doesn't demonstrate anything anything, again because width and height are both set.

[14:34:20.0000] <rniwa>
TabAtkins: yeah

[14:34:23.0000] <TabAtkins>
hober's does, because they're auto.

[14:34:24.0000] <rniwa>
TabAtkins: but this is the case i'm talking about.

[14:34:39.0000] <TabAtkins>
rniwa: Your case has nothing interesting going on, assuming that both 100%s resolve to a definite length.

[14:34:41.0000] <rniwa>
TabAtkins: no, i'm not interested in talking about the case where width & height are auto.

[14:34:57.0000] <rniwa>
TabAtkins: what I want is for height or width to shrink

[14:35:03.0000] <rniwa>
TabAtkins: preserving the aspect ratio

[14:35:09.0000] <TabAtkins>
rniwa: That's not what you'll get.

[14:35:10.0000] <rniwa>
TabAtkins: instead of leaving empty space there

[14:35:12.0000] <TabAtkins>
As I keep explaining.

[14:35:29.0000] <rniwa>
TabAtkins: so what will happen?

[14:35:35.0000] <TabAtkins>
If you *leave height auto*, it'll do what you want.

[14:35:41.0000] <rniwa>
TabAtkins: we don't want to :(

[14:35:51.0000] <TabAtkins>
Unless the height is too tall, I guess.  Then it'll squish.

[14:35:58.0000] <hober>
if i were to try to put the author of rniwa's example's intent into english, it's "make this image super big, but with max constraints in both dimensions, while preserving aspect ratio"

[14:36:13.0000] <TabAtkins>
Yeah, I get the intent.

[14:36:15.0000] <rniwa>
hober: yeah.

[14:36:28.0000] <TabAtkins>
He just keeps asking me about specific code that doesn't express that intent.  ^_^

[14:36:40.0000] <hober>
TabAtkins: so how would you acheive that intent, given that you don't know the intrinsic aspect ratio of unknown.jpg?

[14:37:34.0000] <miketaylr>
isn't that object-fit: cover?

[14:37:40.0000] <miketaylr>
/me should read up

[14:37:48.0000] <TabAtkins>
miketaylr: No, object-fit has no effect on the <img> element's size.

[14:37:56.0000] <TabAtkins>
It affects the size of the image *within* the <img> element.

[14:38:12.0000] <miketaylr>
right

[14:38:30.0000] <rniwa>
TabAtkins: right, but I'm challenging that behavior isn't useful.

[14:38:34.0000] <hober>
and how many authors realize that those are different things?

[14:38:43.0000] <rniwa>
TabAtkins: what most of authors want is for the width & height of img to be affected by object-fit.

[14:38:46.0000] <hober>
actually, how many authors want those to be different things?

[14:38:54.0000] <hober>
on the order of zero i'm guessing

[14:39:09.0000] <TabAtkins>
rniwa: I... don't think they do?  I mean, the entire example is about the image changing size within the <img> tag.

[14:39:23.0000] <rniwa>
TabAtkins: but why do we want that?

[14:39:25.0000] <TabAtkins>
What you're looking for is a stronger way to enforce aspect ratios than CSS gives you currently.

[14:39:31.0000] <rniwa>
TabAtkins: when do you want to resize the image within img?

[14:39:42.0000] <TabAtkins>
For videos, for example, to do letterboxing.

[14:40:00.0000] <TabAtkins>
When your video and <video> aspect ratios don't match.

[14:40:19.0000] <rniwa>
TabAtkins: maybe.

[14:40:21.0000] <TabAtkins>
I don't believe CSS currently has a way to enforce aspect ratios the way you guys are asking for.

[14:40:28.0000] <rniwa>
TabAtkins: yeah.

[14:40:30.0000] <rniwa>
TabAtkins: we don't.

[14:40:36.0000] <TabAtkins>
Not maybe - it's the required and expected behavior in HTML, and you can now express it in CSS.

[14:40:45.0000] <hober>
letterboxing is an interesting case, yeah, but i think it's the less commonly desired behavior

[14:40:47.0000] <TabAtkins>
(regarding letterboxing)

[14:40:58.0000] <rniwa>
hober: right.

[14:41:23.0000] <hober>
i think we should make the more commonly desired behavior at least as easy to achieve as letterboxing, if not easier

[14:41:36.0000] <rniwa>
TabAtkins: I'd argue that in most cases, authors want img to change its width & height in accordance to its aspect ratio.

[14:41:48.0000] <TabAtkins>
hober: Another example is, for example, zooming a large image within a small square.  With object-fit and object-position this is pretty easy - just set the width/height to what you want for the "window", object-fit to "none", and then adjust objec-tposition with JS.

[14:41:55.0000] <TabAtkins>
rniwa: What you want is real aspect ratio control.

[14:41:57.0000] <rniwa>
TabAtkins: I don't see why we'd want img element to have an extra for letterboxing

[14:41:58.0000] <TabAtkins>
This isn't just about images.

[14:42:28.0000] <rniwa>
extra space*

[14:43:03.0000] <TabAtkins>
Including the ability to say "I'm giving you width/height, but I need you to enforce the aspect-ratio over it anyway", perhaps by declaring a contain or cover constraint within the width/height rectangle.

[14:43:30.0000] <rniwa>
TabAtkins: right.

[14:43:40.0000] <TabAtkins>
I have a basic (but slightly broken) proposal for aspect-ratio on my blog which I need to dust off and put into a spec.  If you're interested in some implementation, I can work on it and make sure your use-cases are addressed.

[14:44:03.0000] <TabAtkins>
(I've been ignoring it so far due to lack of implementor interest.)

[14:45:56.0000] <rniwa>
TabAtkins: that'll be great.

[14:46:06.0000] <rniwa>
TabAtkins: but i don't think we need anything fancy for now.

[14:46:20.0000] <rniwa>
TabAtkins: just preserving aspect ratio in the example I gave you earlier.

[14:46:30.0000] <TabAtkins>
Yeah, not too hard.

[14:46:41.0000] <TabAtkins>
Dealing with the edge-cases are interesting, but that's it.

[14:47:03.0000] <TabAtkins>
And with the aspect-ratio property giving an aspect-ratio to arbitrary content (not just replaced elements), it'll work pretty widely.

[14:47:10.0000] <rniwa>
TabAtkins: all we need to do is to fiddle with the width computation when we're enforcing min/max constriant.

[14:47:28.0000] <TabAtkins>
More or less, but you also have to fiddle with height.

[14:47:53.0000] <TabAtkins>
Declaring the constraints you want to follow up-front will fix the issues I had in my aspect-ratio property.

[14:48:16.0000] <TabAtkins>
Where I tried to magically determine which constraints to respect, based on which things were auto.

[14:52:17.0000] <TabAtkins>
rniwa: More use-cases for object-fit as it currently stands: Your layout needs a user-supplied image to fill a certain rectangle, but you don't control the aspect ratio of the user-supplied images.  Keep a transparent background on the <img> and use object-fit:contain to force the image to fully display withing your specified bounds.

[14:53:54.0000] <TabAtkins>
(This could also be doable with our new hypothetical property, resizing the <img> itself to contain within your desired bounds.)

[14:55:01.0000] <hober>
TabAtkins: that sounds just like the letterboxing case to me

[14:55:25.0000] <hober>
which is definitely an interesting use case, but not as common as the problem rniwa's highlighting

[14:55:30.0000] <TabAtkins>
hober: Similar, but not quite, because you don't have to worry about the interaction with controls which fill a certain size.

[14:55:31.0000] <hober>
(which is a very common feature request)

[14:55:49.0000] <TabAtkins>
hober: Sure, that may be true.  Doesn't mean the solution is to abuse an existing property into doing what you want.  ^_^

[14:56:00.0000] <TabAtkins>
I'm not going to allow another vertical-align train-wreck.  ^_^

[14:56:00.0000] <hober>
heh. we could just nuke the existing property

[14:56:14.0000] <TabAtkins>
Already used in the HTML default stylesheet!

[14:56:15.0000] <hober>
does anyone even implement the current one (besides presto, r.i.p.)?

[14:56:21.0000] <TabAtkins>
Dunno.

[14:56:25.0000] <TabAtkins>
Well, printers.

[14:56:32.0000] <TabAtkins>
Dunno among browsers.  Maybe.

[14:57:44.0000] <hober>
i think people google around for how to do what rniwa wants, they find object-fit: contain, they assume it does what they want, and then they see this weird extra space for no apparent reason

[14:57:55.0000] <hober>
the other case (letterboxing etc.) isn't as common/compelling

[14:59:01.0000] <TabAtkins>
Again, all that means is that we need a property that does what they want.

[14:59:10.0000] <TabAtkins>
It doesn't negate the use-case for object-fit.

[15:01:22.0000] <hober>
while true, i'd rather change object-fit to do something like what rniwa wants in the common case, and then additionally make it possible to do the (weirder) behavior with some additional values

[15:01:33.0000] <hober>
'object-fit: contain letterbox' or some such

[15:01:49.0000] <rniwa>
TabAtkins: it seems better to address a more common use case.

[15:02:04.0000] <TabAtkins>
Oh god no.  Again, no vertical-align trainwreck.  A single property doing two very different things is just asking for confusion.

[15:02:27.0000] <TabAtkins>
Like, what would "letterbox" even mean for regular content?  It's nonsense.

[15:03:15.0000] <rniwa>
TabAtkins: exactly, that's why it doesn't make much sense for "object-fit: contain" to behave that way.

[15:03:16.0000] <TabAtkins>
Listen.  Just let me define the property for you.  I'll post it on the list.  You can implement it.  Everyone will be happy.

[15:04:07.0000] <rniwa>
TabAtkins: adding a new property to address my use case will be great

[15:04:41.0000] <rniwa>
TabAtkins: but I still have concerns for the current behavior of object-fit: contain because it's confusing for authors.

[15:05:05.0000] <TabAtkins>
Only because their is no way to get what they currently want, and they don't believe that, so they try everything that looks remotely like it'll work.

[15:05:35.0000] <TabAtkins>
I'm not going to keep repeating myself about the value of object-fit's current behavior.  It has its uses.

[15:06:00.0000] <rniwa>
TabAtkins: and I'm saying that those use cases aren't compelling.

[15:06:36.0000] <TabAtkins>
Unluckily for you, we have existing things in the web that use the functionality.  Removing object-fit just means those things are more magical and can't be tweaked.

[15:06:54.0000] <rniwa>
TabAtkins: what existing things?

[15:07:07.0000] <TabAtkins>
<video>.  I've already explained this.

[15:07:53.0000] <rniwa>
TabAtkins: how can video be using this feature when no browsers other than Opera have implemented it?

[15:08:13.0000] <TabAtkins>
Video is using the functionality that object-fit describes.

[15:08:18.0000] <TabAtkins>
It letterboxes.

[15:08:20.0000] <rniwa>
TabAtkins: also, the fact that some element has some interesting layout algorithm doesn't mean we have to expose that as a css property

[15:08:39.0000] <TabAtkins>
If we dont' have object-fit, that just means you can't do that yourself, or tweak the existing behavior.

[15:09:24.0000] <TabAtkins>
Unless the "interesting layout algorithm" is a legacy mistake, it is a good thing to make the web platform self-describable.

[15:09:39.0000] <rniwa>
TabAtkins: I don't those are use cases

[15:09:42.0000] <rniwa>
think*

[15:09:52.0000] <TabAtkins>
I do.  Shrug.

[15:09:58.0000] <TabAtkins>
People get to ahve different opinions!

[15:10:07.0000] <rniwa>
TabAtkins: sure, i agree to disagree

[15:11:03.0000] <TabAtkins>
(Or rather, people get to disagree because I'm not willing to put the effort into either convincing them, or convincing myself and self-updating sufficiently to be consistent again.  No one should ever disagree, as reality is objective, if we had enough processing power.)

[15:11:30.0000] <rniwa>
reality is very subjective.

[15:11:51.0000] <TabAtkins>
Wrong.  ^_^

[15:11:58.0000] <rniwa>
TabAtkins: again, i agree to disagree :)

[15:12:03.0000] <TabAtkins>
And since reality is objective, there's an objective answer to that question.

[15:12:15.0000] <TabAtkins>
Your perception of reality is subjective, by definition.

[15:13:56.0000] <hober>
offhand, i think you could describe <video> with existing platform features without object-fit

[15:14:08.0000] <hober>
but i didn't just try that :)

[15:15:01.0000] <TabAtkins>
If you reify <video> into a non-replaced element containing a [video-pane thing], sure.

[15:15:14.0000] <TabAtkins>
Or rather, you could, once we introduce the sizing property that respects aspect-ratios better.

[15:15:46.0000] <hober>
then we wouldn't need the weird property value any more, wheee

[15:17:51.0000] <TabAtkins>
You'd need an equalivalent property, plus enough Web Components to describe <video>, plus some way of describing [video-pane thing].

[15:18:01.0000] <TabAtkins>
Better?  Arguably either way, I think. ^_^

[15:18:54.0000] <hober>
you don't need enough web components to describe video, you just need a pseudo element for the [video-pane thing]

[15:19:19.0000] <hober>
which could be useful for "the image in the <img>" etc

[16:06:34.0000] <GPHemsley>
/me wants the hookshot


2013-05-24
[22:09:32.0000] <annevk>
zcorpan: you should probably comment on http://dev.w3.org/csswg/css-fonts/#object-model and try to fight against useless interfaces like "CSSFontFeatureValuesRule"

[22:09:44.0000] <annevk>
zcorpan: might as well just expose it as a CSSRule for now

[22:42:50.0000] <annevk>
Planning travel is the worst thing. It's great to see the world, but committing to a set of days and particular flights upfront...

[01:20:12.0000] <zcorpan>
annevk: i agree that the design for CSSRule seems weird. i'll ponder what it should be like instead, if it's worth changing it

[01:22:37.0000] <annevk>
zcorpan: so we can't change CSSRule, but we can avoid introducing new crappy string-based APIs in CSS

[05:09:35.0000] <oal>
Is there a document with all valid html tags, and the attributes and attribute values they take?

[05:10:23.0000] <oal>
Preferably json or something I can parse easily

[05:11:19.0000] <webben>
oal: mmm well i think the validator still uses a relaxng schema of some sort

[05:13:38.0000] <oal>
webben, hmm, no way of grabbing that somehow?

[05:14:00.0000] <jgraham>
What do you mean "attributes and attribute values they take"?

[05:14:02.0000] <oal>
I was thinking about scraping http://www.w3.org/TR/html-markup/elements.html, if nothing else is available

[05:14:24.0000] <jgraham>
There can be rather complex rules that can't be expressed in a schema

[05:14:33.0000] <oal>
jgraham, style, type etc

[05:14:40.0000] <oal>
ok

[05:16:18.0000] <oal>
Scraping the w3.org page above should be enough then. At least I get all available tags, and which ones are form related :)

[05:24:34.0000] <Ms2ger>
Keep in mind that scraping the w3.org page probably isn't kosher from a copyright POV

[05:24:47.0000] <Ms2ger>
whatwg.org/html is fine, though

[05:33:37.0000] <oal>
Ms2ger, thanks for letting me know. I'll use the whatwg one then :)

[05:49:41.0000] <jgraham>
hallvors: Nice

[05:57:22.0000] <Ms2ger>
Mm, tests

[06:09:18.0000] <hallvors>
jgraham: um, thanks - but what? Merging the MS tests? ;-)

[06:32:00.0000] <hallvors>
hmm.. still some bugs in those MS tests :-/

[06:43:03.0000] <jgraham>
hallvors: Yeah

[06:45:43.0000] <hallvors>
send-timeout-events exposes bugs in all browsers it seems

[06:46:18.0000] <hallvors>
I thought my review had been sloppy and the test was buggy, but apparently all implementations get it wrong differently :-p

[06:48:38.0000] <zcorpan>
review welcome :-) http://lists.w3.org/Archives/Public/www-style/2013May/0630.html

[06:49:10.0000] <zcorpan>
have a nice weekend guys. (i'll read the logs if you want to dump comments here)

[07:28:09.0000] <GPHemsley>
hmm... the GIF parser in WebKit shares a common ancestor with the one in Gecko

[07:28:19.0000] <GPHemsley>
/me wonders what that means for interop

[07:29:12.0000] <jgraham>
Means that the GIF spec couldn't go to Rec. on the basis of those implementations (if the spec was at the W3C)

[07:29:44.0000] <jgraham>
OTOH Opera/Presto doesn't share image decoders except for WebP

[07:34:04.0000] <GPHemsley>
(and Blink shares ancestor with WebKit, so...)

[07:37:24.0000] <Ms2ger>
"+5 Insightful"

[07:37:36.0000] <Ms2ger>
/me remembers the days he read /.

[07:47:44.0000] <GPHemsley>
"GIF is a legacy format; we recommend against generating new images in it." - giflib

[08:28:24.0000] <GPHemsley>
FTW: http://wiki.whatwg.org/wiki/GIF

[09:27:45.0000] <zewt>
i had to create a gif just the other day :|

[09:28:03.0000] <zewt>
because Android's video handling is catastrophically stupid (in native code)

[10:27:35.0000] <GPHemsley>
hmm... renaming usernames on MediaWiki requires an extension

[10:27:53.0000] <zewt>
:|

[10:36:44.0000] <GPHemsley>
annevk: Skimming Fetch, it seems like I might want to use it in mimesniff. Agree?

[10:37:54.0000] <GPHemsley>
annevk: (Any chance you could define "resource"?)

[10:44:23.0000] <GPHemsley>
annevk: "basic fetch" does not seem to allow for custom "about:" URLs; is that intentional?

[10:50:52.0000] <TabAtkins>
annevk: Hm, it's more convenient to make it a custom interface, because then you can attach the rules about what goes inside of it better.

[10:51:31.0000] <TabAtkins>
annevk, zcorpan: But I suggested in the mailing list that it needs to descend from CSSGroupingRule, and then it's done.  You get free interface for actual rules.


2013-05-25
[07:35:26.0000] <annekv>
GPHemsley: why does MIME need to reference Fetch?

[07:36:32.0000] <annekv>
GPHemsley: custom about URLs lead to a network typically, ... I guess I should allow certain arbitrary identifiers to resolve there provided they're documented.

[08:50:31.0000] <GPHemsley>
annevk: It doesn't need to, necessarily; it just seems like mimesniff and fetch are gently brushing up against each other, so it might be worth connecting them

[09:20:12.0000] <ambv>
gsnedders: if it was a duplicate then I did it fail for PullDOM and the other didn't?

[09:20:20.0000] <ambv>
*then how did it

[10:04:48.0000] <gsnedders>
ambv: That's a more worrying question.

[10:27:12.0000] <gsnedders>
ambv: "<!DOCTYPE html><html xml:lang=bar><html xml:lang=foo>" in test14.dat should be failing. Why isn't it?

[10:27:28.0000] <gsnedders>
ambv: (Rhetorical question!)

[10:28:42.0000] <gsnedders>
ambv: Because doctypes aren't supported by PullDOM.

[10:34:30.0000] <ambv>
OK. I get it.

[11:46:11.0000] <GPHemsley>
hmm... if I run all the mimesniff stuff through the filter of the 'parse a MIME type' algorithm, I can sidestep any issues with terminology or existing specs...

[11:47:08.0000] <GPHemsley>
(I can create something like a "MIME type object" to use spec-internally)

[11:47:30.0000] <GPHemsley>
(is this where APIs come from?)

[11:47:53.0000] <GPHemsley>
(or where WebIDL is used?)

[11:53:47.0000] <GPHemsley>
I don't remember if I knew about RFC 6838 (the latest incarnation of BCP 13, released in January 2013) before...

[11:53:56.0000] <GPHemsley>
("Media Type Specifications and Registration Procedures")

[14:19:18.0000] <GPHemsley>
Hixie: Do nested browsing contexts have separate security concerns from top-level browsing contexts when it comes to sniffing MIME type?

[14:35:59.0000] <GPHemsley>
/me wonders what to do in situations where an <img> element loads "single-page vector documents (single-page PDFs, XML files with an SVG root element)" or "animated vector graphics (XML files with an SVG root element that use declarative SMIL animation)"...

[14:37:25.0000] <GPHemsley>
"In particular, img elements should not be used to display transparent images" – shouldn't that be "wholly transparent"?


2013-05-26
[17:03:30.0000] <GPHemsley>
/me wonders why nobody but Mozilla updates their Bugzilla installations

[17:15:59.0000] <GPHemsley>
/me gets the sense that Google appends " - WhatWG" to every search result from whatwg.org

[17:16:15.0000] <GPHemsley>
actually, www.whatwg.org

[17:16:46.0000] <GPHemsley>
(or else, somewhere the server is serving the crawler a different page than the browser?)

[17:18:12.0000] <GPHemsley>
it might specifically be only results from the HTML spec

[17:18:29.0000] <GPHemsley>
(hard to tell)

[10:26:49.0000] <GPHemsley>
hmm... the WebVTT spec doesn't have the feature of clicking on a definition to find all its uses... :(

[10:28:39.0000] <GPHemsley>
which makes it difficult for me to determine what happens when the WebVTT parser algorithm fails/aborts

[10:35:29.0000] <GPHemsley>
/me wonders if other specifications define "media elements" that aren't <audio> or <video>

[10:41:02.0000] <Ms2ger>
svg:video?

[11:15:57.0000] <GPHemsley>
hmm... IANA registrations in HTML section 16 are inconsistent with how they specify magic numbers

[11:16:13.0000] <GPHemsley>
including how/whether they specify that a UTF-8 BOM is allowed

[11:29:14.0000] <ambv>
gsnedders: we should at least offer a migration guide in the docs, I guess.

[11:29:28.0000] <ambv>
it seems simpletree was in fact used ;-)

[12:11:25.0000] <GPHemsley>
does anyone know if "text/css" is defined in any modern CSS document?

[12:12:12.0000] <Ms2ger>
If not CSS2.1, probably now

[12:12:13.0000] <Ms2ger>
not*

[12:14:00.0000] <GPHemsley>
such definitions are usually listed in sections entitled "IANA Considerations", of which there are none in CSS2.1

[12:14:31.0000] <GPHemsley>
CSSOM mentions "text/css", but I think in a CSS-internal kind of way

[12:15:56.0000] <Ms2ger>
FWIW, I think "IANA Considerations" may well be a Hixieism

[12:17:29.0000] <GPHemsley>
not AFAICT

[12:17:39.0000] <GPHemsley>
I think it actually originates from the IETF

[12:18:14.0000] <GPHemsley>
BCP 26: http://tools.ietf.org/html/rfc5226

[12:18:53.0000] <GPHemsley>
"Guidelines for Writing an IANA Considerations Section in RFCs"

[12:19:42.0000] <GPHemsley>
And this document is referenced by RFC 6838, which specifies the latest requirements for registering a MIME type: http://tools.ietf.org/html/rfc6838

[12:20:00.0000] <GPHemsley>
specifically, in section 3.1: http://tools.ietf.org/html/rfc6838#section-3.1

[12:20:04.0000] <Ms2ger>
Ah, interesting

[12:20:41.0000] <GPHemsley>
given that the text/css registration on file dates from 1998, it seems to me that it might be a good idea to re-register it using the latest RFC

[12:20:57.0000] <GPHemsley>
on file with IANA, that is

[12:21:11.0000] <GPHemsley>
specifically, from RFC 2318

[12:21:36.0000] <GPHemsley>
probably within css3-syntax or somesuch

[12:22:43.0000] <GPHemsley>
or css-syntax, I guess it's now called

[12:23:09.0000] <GPHemsley>
TabAtkins: Thoughts? ^

[12:24:27.0000] <Ms2ger>
"XML is great � no doubt! The impact it has had on the Web has been tremendous."

[12:24:44.0000] <Ms2ger>
Looks like I accidentally ended up in a wormhole that left me in 2001

[12:26:30.0000] <GPHemsley>
those wormholes can be fun

[12:47:26.0000] <Ms2ger>
marcosc: \o/

[13:29:43.0000] <GPHemsley>
Hixie: In the "resource selection algorithm", step 9(otherwise)(17) references the "process candidate" step, which is not in the execution chain of 9(otherwise)(17)

[13:30:26.0000] <Ms2ger>
File a bug, he isn't here :)

[13:30:29.0000] <GPHemsley>
That is, the "process candidate" step is in step 9(if "mode" is "attribute")(1)

[13:30:44.0000] <GPHemsley>
meh

[13:30:48.0000] <GPHemsley>
so formal

[13:32:04.0000] <Ms2ger>
/me imagines a bug in a three-piece suit

[13:32:56.0000] <GPHemsley>
indeed, that is a very apt visual

[13:39:14.0000] <GPHemsley>
FTW: https://www.w3.org/Bugs/Public/show_bug.cgi?id=22167

[15:16:38.0000] <GPHemsley>
annekv: (Typo?)

[15:16:56.0000] <GPHemsley>
annevk: Are we moving towards not having "Standard" in the title of our specs?

[15:31:32.0000] <annevk>
GPHemsley: don't think so, but I'm jetlagged

[15:41:10.0000] <GPHemsley>
oh, it's zcorpan's fault

[15:41:18.0000] <GPHemsley>
https://github.com/whatwg/xref/commit/5c4dacc47cfe7748bdf552858b6efa380fef388b

[16:51:28.0000] <GPHemsley>
Does anyone here happen to know anything about the new (March 29, 2013) MIME type "application/font-sfnt" beyond what is in the IANA registration?

[16:52:05.0000] <GPHemsley>
(or perhaps have access to the ISO/IEC 14496-22 "Open Font Format" specification

[16:52:07.0000] <GPHemsley>
?)

[16:54:49.0000] <GPHemsley>
Oh, nevermind; it's a Publicly Available Standard


2013-05-27
[17:03:23.0000] <GPHemsley>
the registration is included in an amendment as Annex E, but it appears to be identical to what is at IANA

[17:03:28.0000] <GPHemsley>
(as it should be, I suppose)

[17:17:25.0000] <GPHemsley>
as I think I was saying, the registration is in ISO/IEC 14496-22:2009/Amd 2:2012

[19:28:14.0000] <SimonSapin>
TabAtkins: ping

[19:48:21.0000] <GPHemsley>
Does anyone have an opinion on whether I should assume that a MIME type is ASCII/UTF-8?

[19:54:42.0000] <SimonSapin>
GPHemsley: sounds reasonable, if nothing else specifies it.

[19:55:24.0000] <SimonSapin>
you’d need to define error handling, although you might not have to do it yourself if you refer to the Encoding standard. (Which AFAIR defaults to inserting replacement characters.)

[04:20:19.0000] <hsivonen_>
I wonder if <script defer> has ever worked per spec in Gecko

[04:27:02.0000] <Ms2ger>
That seems unlikely from first principles

[04:28:10.0000] <jgraham>
It's a browser feature, all browser features mismatch the spec, therefore it mismatches the spec?

[04:34:12.0000] <Ms2ger>
Sounds about right

[04:55:24.0000] <zcorpan>
GPHemsley: it was inconsistent so i just picked one. if you prefer to include the suffix, feel free to change it

[06:14:51.0000] <GPHemsley>
zcorpan: If they're all consistent now, that's fine.

[06:15:24.0000] <GPHemsley>
SimonSapin: It was more a question of whether I should refer to bytes (0x20) or code points (U+0020)

[06:40:35.0000] <GPHemsley>
SimonSapin: IIRC, your data: URL spec was waiting on me to complete the "parse a MIME type" algorithm; if so, that's now done.

[06:41:12.0000] <GPHemsley>
(Where "complete" and "done" indicate that the algorithm now fully terminates, not that it can't be improved.)

[06:41:49.0000] <GPHemsley>
http://mimesniff.spec.whatwg.org/#parse-a-mime-type

[06:42:35.0000] <GPHemsley>
/me wonders if the data: URL spec won't have the same issue wrt bytes vs. code points

[06:44:43.0000] <GPHemsley>
ah, right, it was the data: URL spec that sparked the discussion about null vs. empty string parameter values

[06:45:33.0000] <GPHemsley>
(the "parse a MIME type" algorithm handles/allows this distinction)

[06:47:57.0000] <GPHemsley>
(it's the difference between ";base64;" and ";base64=;"

[06:47:58.0000] <GPHemsley>
)

[06:49:29.0000] <GPHemsley>
hmm... I may have to do special handling on commas

[06:49:48.0000] <GPHemsley>
but perhaps not; perhaps that's more in scope of the data: URL spec

[06:50:49.0000] <GPHemsley>
you'll basically just have to search for matching quotes before you can determine the right comma to split on

[06:50:54.0000] <GPHemsley>
which is annoyingly unfortunate

[06:51:18.0000] <GPHemsley>
(it's possible that half of this dialog is going on in my head)

[06:52:32.0000] <GPHemsley>
SimonSapin: Note that you should be doing percent decoding before any processing/splitting

[06:52:56.0000] <GPHemsley>
IIUC

[06:53:45.0000] <GPHemsley>
hmm...

[06:53:48.0000] <GPHemsley>
"Attribute values in [RFC2045] are allowed to be either represented as

[06:53:48.0000] <GPHemsley>
   tokens or as quoted strings. However, within a "data" URL, the

[06:53:48.0000] <GPHemsley>
   "quoted-string" representation would be awkward, since the quote mark

[06:53:48.0000] <GPHemsley>
   is itself not a valid urlchar. For this reason, parameter values

[06:53:48.0000] <GPHemsley>
   should use the URL Escaped encoding instead of quoted string if the

[06:53:49.0000] <GPHemsley>
   parameter values contain any "tspecial"."

[06:53:56.0000] <hsivonen_>
the <script defer> code is so broken in terms of the spec that I have a hard time believing I could have accidentally broken it that badly if it used to be correct

[06:54:22.0000] <GPHemsley>
/me will shut up now

[06:54:25.0000] <annevk>
GPHemsley: basically you can get both string and byte sequence input for media types

[06:54:35.0000] <GPHemsley>
annevk: Yeah, that's what I figured...

[06:54:38.0000] <GPHemsley>
:/

[06:55:09.0000] <GPHemsley>
annevk: So I need to keep working with code points, then?

[06:55:48.0000] <annevk>
I guess you should figure out how implementations deal with the mismatch

[06:55:58.0000] <annevk>
and if they try to share code and if they want to, etc.

[06:56:32.0000] <GPHemsley>
how would I even go about testing how a MIME type is parsed?

[07:02:06.0000] <GPHemsley>
interesting... apparently Firefox accepts "text/html/test" as a valid MIME type (but it prompts for download)

[07:02:22.0000] <annevk>
You'd read the source code

[07:02:55.0000] <annevk>
I wonder why in http://first-website.web.cern.ch/sites/first-website.web.cern.ch/files/u4/Screen%20Shot%202013-05-27%20at%202.25.30%20PM.png sometimes trailing dots are used, sometimes :80, sometimes both, ...

[07:03:58.0000] <GPHemsley>
/me notes that the data: URL RFC doesn't even define what it means to be base64-encoded

[07:05:26.0000] <annevk>
I wouldn't pay too much attention to RFCs

[07:07:30.0000] <GPHemsley>
that was just an aside

[07:07:38.0000] <GPHemsley>
since I was looking for a source

[07:07:56.0000] <GPHemsley>
(I figured it'd at least be linked from the RFC)

[07:09:44.0000] <hallvors>
annevk: what is the #fragment part of the URL called in the Fetch spec? There is no instance of the word "fragment", just wondering if it's not covered there or named something else

[07:12:06.0000] <annevk>
hallvors: it's not called out at the moment, it'd be called "fragment"

[07:12:23.0000] <hallvors>
ok, thx

[07:15:08.0000] <annevk>
"The hypertext community were unimpressed with the web"

[07:15:13.0000] <annevk>
http://first-website.web.cern.ch/blog/1991-web-page-found-password-lost

[07:16:07.0000] <GPHemsley>
...first I have to find the source code...

[07:16:28.0000] <Ms2ger>
annevk, yeah, too messy

[07:18:52.0000] <GPHemsley>
ah, I think I've got it

[07:19:15.0000] <annevk>
where did hallvors go?

[07:19:41.0000] <Ms2ger>
Pang

[07:30:46.0000] <GPHemsley>
boy the Gecko code does a lot work based on file extensions..

[08:26:35.0000] <GPHemsley>
hmm... RFC 2231 specifies parameter continuation for MIME types in mail (i.e. actual MIME); RFC 5987 states HTTP doesn't need it

[08:26:41.0000] <GPHemsley>
so now I have to decide what to do

[08:27:23.0000] <GPHemsley>
I suppose I could just let downstream assemble any continued parameters

[08:27:33.0000] <GPHemsley>
yeah, that probably makes sense

[08:30:54.0000] <GPHemsley>
or else give the algorithm a parameter to indicate whether to support continuations

[08:55:29.0000] <GPHemsley>
oh, hmm... apparently my algorithm does allow arbitrary value-less parameters

[08:55:38.0000] <GPHemsley>
only if it's the last one in the MIME type

[08:55:42.0000] <GPHemsley>
interesting

[08:55:45.0000] <GPHemsley>
that's probably not right

[09:00:25.0000] <GPHemsley>
/me wonders whether Google's decision to create Blink was made to intentionally ensure that mobile doesn't become a monoculture

[09:01:55.0000] <Ms2ger>
*becomes a Google-owned monoculture

[09:02:28.0000] <GPHemsley>
fair enough, I suppose

[09:02:38.0000] <GPHemsley>
depends on how well WebKit does without Google, I guess

[09:04:37.0000] <GPHemsley>
does Chrome have an equivalent of Firefox's Page Info?

[09:14:45.0000] <Philip`>
GPHemsley: Does it matter how technically well WebKit does, given that Apple can force the use of WebKit on iOS, so web developers will have to support it regardless of how far it might fall behind some Android browsers?

[09:15:03.0000] <GPHemsley>
ah, right, I knew there was something I was forgetting

[09:15:27.0000] <GPHemsley>
so then my original point still stands then, doesn't it?

[09:16:43.0000] <jgraham>
It is an interesting question

[09:16:55.0000] <jgraham>
Does Apple need the web more than then web needs apple

[09:17:44.0000] <Philip`>
If Google changes the default Android browser to use Blink, and Apple doesn't abandon their current course, then I guess it's inevitable that it'll create a multicuture

[09:18:37.0000] <jgraham>
If WebKit on iOS became the new IE6 (which, as expressions go, is the new black), would people stop buying iOS devices, or would developers just grit their teeth and make things work with WebKit/iOS

[09:19:20.0000] <zewt_>
is that a serious question? heh

[09:19:35.0000] <GPHemsley>
WebKit on iOS would only become the new IE6 if it stopped innovating

[09:19:49.0000] <jgraham>
Well that was the premise

[09:20:03.0000] <jgraham>
That it fell far behind "some Android browsers"

[09:20:05.0000] <GPHemsley>
that doesn't appear to be happening at the moment though, right?

[09:20:15.0000] <zewt>
(people don't buy iOS devices for the browser)

[09:20:15.0000] <jgraham>
I have no idea

[09:20:31.0000] <jgraham>
I don't think anyone does really

[09:20:41.0000] <Philip`>
I'd probably assume Google's main motivation was that they think they can do everything better than everyone else, so Blink lets them get a competitive advantage over iOS, and if that resulted in a technically inferior iOS losing market share and dyng then they'd be perfectly happy with that, regardless of the monoculturality

[09:20:48.0000] <GPHemsley>
one would presume that Apple would not let their iOS browser stagnate as the rest of the Web moved forward

[09:20:59.0000] <GPHemsley>
(because it doesn't look like the rest of the Web is going to give up this time)

[09:21:39.0000] <GPHemsley>
Philip`: Yeah... I was just looking for a glimmer of Don't Be Evil, that's all

[09:21:49.0000] <jgraham>
AFAICT (and I stress, I have no special insight here) we haven't reached any kind of steady state in blink or webkit development post-split

[09:21:55.0000] <darobin>
if iOS lost market share for being technically inferior, it would be dead by now

[09:22:26.0000] <jgraham>
zewt: No, but would they accept a browser that was much worse than on other platforms

[09:22:48.0000] <zewt>
to what? having done a lot of both iOS and Android dev in the last year, i can tell you it's not inferior to android for development nor for users, heh

[09:23:04.0000] <jgraham>
Is the allure of the walled garden so strong that people would forego the web entirely?

[09:23:07.0000] <zewt>
jgraham: they don't have any choice, short of jumping ship entirely, which I expect nearly nobody would do

[09:23:14.0000] <jgraham>
If not, how bad would it have to be?

[09:23:20.0000] <Ms2ger>
On another note, sure would be nice if calendar providers interoperated

[09:23:46.0000] <jgraham>
I wonder if it is true that "nearly nobody" has jumped from iOS to another smartphone platform

[09:23:56.0000] <zewt>
due to browsers?

[09:24:02.0000] <jgraham>
In general

[09:24:11.0000] <zewt>
not talking in general

[09:24:22.0000] <jgraham>
Well at present the browsers are rather similar

[09:24:37.0000] <jgraham>
So "due to browsers" isn't a very interesting question

[09:24:43.0000] <jgraham>
+default

[09:25:07.0000] <jgraham>
Dunno if anyone has changed specifically to get Firefox/Opera Mobile

[09:25:13.0000] <zewt>
i don't think the browser is a big enough chunk of people's use of iOS, even if it was catastrophically bad I suspect the app marketshare of iOS would still keep most people there

[09:25:42.0000] <jgraham>
(I should note that "most people" don't use iOS, but perhaps you mean "most current users")

[09:25:54.0000] <zewt>
what? i mean most users of iOS, of course

[09:26:47.0000] <jgraham>
Ms2ger: And make it easy to switch to an alternate provider? Why would they do that?

[09:27:51.0000] <zewt>
i'd hope that apple would have the sense to keep their browser current; just saying, don't make the web-centric view that they have to or everyone will leave, since the browser isn't the center of iOS

[09:28:31.0000] <Philip`>
Given that the market is still expanding, it's probably more important to worry about attracting new users to a platform, than about switching existing users

[09:29:30.0000] <jgraham>
/me didn't actually take any view, just said it was an interesting question

[09:29:39.0000] <Philip`>
(and it's much easier to influence a new user who hasn't got a heavy investment in one platform already)

[09:30:04.0000] <zewt>
and apple tends to keep the browser on iOS just-slightly-worse for using apps than native, to make sure people keep making native apps

[09:30:25.0000] <zewt>
(eg. can't put an app bookmark on the home screen without the user using an obscure UI; no WebGL)

[09:54:03.0000] <GPHemsley>
Does any WHATWG spec define what it means to convert something to ASCII lowercase?

[09:55:20.0000] <zewt>
http://www.whatwg.org/specs/web-apps/current-work/#converted-to-ascii-lowercase

[09:55:22.0000] <GPHemsley>
hmm, DOM apparently

[09:55:28.0000] <GPHemsley>
or that

[09:56:28.0000] <GPHemsley>
thanks

[11:47:07.0000] <ripples>
pewpew

[11:48:30.0000] <Ms2ger>
Ahem?

[13:53:35.0000] <GPHemsley>
Feedback welcome: http://mimesniff.spec.whatwg.org/#parse-a-mime-type


2013-05-28
[00:14:03.0000] <hsivonen>
How close is WebKit-gtk to WebKit-Mac? should I test in Midori/Epiphany or really move to my Mac Mini to test?

[00:18:04.0000] <SimonSapin>
hsivonen: I suppose it depends on what you’re testing

[00:20:00.0000] <hsivonen>
SimonSapin: DOMContentLoaded, <script defer>, readyState

[00:20:07.0000] <hsivonen>
all supposed to live in WebKit

[00:20:10.0000] <hsivonen>
itself

[00:20:16.0000] <hsivonen>
rather than port code

[00:20:27.0000] <SimonSapin>
yes, that’s my limited understanding of webkit ports

[00:20:44.0000] <hsivonen>
findings so far: Gecko is wrong for <script defer> per spec

[00:21:02.0000] <hsivonen>
Presto and Blink don't interop on when readyState changes relative to <script defer>

[00:23:51.0000] <hsivonen>
unsurprisingly, Safari is like Chrome, still

[00:24:05.0000] <hsivonen>
waiting for Windows Update to give me a fully-patched IE...

[00:26:42.0000] <hsivonen>
I wonder how Hixie came up with the rules for <script defer> relative to DOMContentLoaded.

[00:26:45.0000] <zcorpan>
hsivonen: i think presto doesn't support defer

[00:26:53.0000] <hsivonen>
zcorpan: ah ok

[00:27:07.0000] <hsivonen>
at the time, IE didn't support DOMContentLoaded

[00:31:09.0000] <hsivonen>
Does Chrome OS run xorg still?

[00:52:32.0000] <jgraham>
hsivonen: Yeah, don't worry too much about presto for anything related to script scheduling or document loading

[00:52:32.0000] <jgraham>
It was all scheduled for a rewrite

[01:06:14.0000] <hsivonen>
So it looks like it was indeed I who broke <script defer> in Gecko

[01:06:21.0000] <hsivonen>
and someone noticed already in 2010

[01:06:41.0000] <hsivonen>
but it took until now to someone complain enough for it to actually register

[01:07:09.0000] <hsivonen>
makes one wonder about the utility of <script defer>, though, that this didn't become a big deal back in 2010

[01:08:54.0000] <hsivonen>
hmm. I wonder if <script defer> has ever worked right in XSLT in Gecko, though

[01:09:15.0000] <jgraham>
OK, script defer + XSLT is pretty much the definition of niche case

[01:09:26.0000] <jgraham>
s/case/feature/

[01:09:30.0000] <hsivonen>
Thanks to the wonders of XSLT, there's always a 3rd case after HTML and XML

[01:10:15.0000] <zcorpan>
can we disable defer in the xslt case?

[01:10:59.0000] <hsivonen>
zcorpan: it would be more work in the Trident/WebKit/Blink XSLT architecture, so probably won't fly

[01:11:11.0000] <zcorpan>
ah yeah

[01:11:15.0000] <jgraham>
I have a feeling that in presto XSLT support was implemented to not create a third case, I think the output just got fed back into the parser or something.

[01:11:25.0000] <jgraham>
But I really don't remember

[01:11:31.0000] <hsivonen>
so many things need a rewrite

[01:11:42.0000] <hsivonen>
Gecko's XSLT output is one of those

[01:11:51.0000] <hsivonen>
but first I should rewrite how XML is loaded in Gecko

[01:12:00.0000] <zcorpan>
yes we reparsed the output with the html parser

[01:12:04.0000] <hsivonen>
that project never got beyond careful planning

[01:12:14.0000] <Ms2ger>
We need a few clones of hsivonen, clearly

[01:12:52.0000] <zcorpan>
is there a reason gecko doesn't reparse?

[01:13:37.0000] <hsivonen>
zcorpan: Gecko does XSLT the Right Way

[01:13:55.0000] <zcorpan>
hsivonen: my question still stands :-P

[01:14:19.0000] <hsivonen>
zcorpan: sicking/peterv/Pike wrote it the Right Way?

[01:15:20.0000] <jgraham>
The Right Way does also seem to be The Hard To Maintain Way

[01:15:28.0000] <hsivonen>
yeah

[01:15:36.0000] <zcorpan>
yeah, so i actually meant, is there a reason not to change gecko to implement the Wrong Way like everyone else and not have a third mode to worry about?

[01:15:46.0000] <hsivonen>
and with scripts, the Right Way isn't actually quite right

[01:15:47.0000] <jgraham>
So given such a marginal feature, it seems that worse is better

[03:43:31.0000] <Ms2ger>
Anyone have old IEs around?

[03:44:53.0000] <hsivonen>
Ms2ger: I do

[03:45:24.0000] <Ms2ger>
Let me write you a test, then :)

[03:45:31.0000] <hsivonen>
Ms2ger: OK

[03:46:53.0000] <Ms2ger>
hsivonen, http://software.hixie.ch/utilities/js/live-dom-viewer/saved/2259

[03:49:14.0000] <hsivonen>
Ms2ger: HTMLInputElement, HTMLImageElement, HTMLImageElement

[03:49:18.0000] <hsivonen>
Ms2ger: in IE8 on XP

[03:49:27.0000] <Ms2ger>
:(

[03:49:37.0000] <hsivonen>
Yeah. :-(

[03:52:34.0000] <zcorpan>
why is that :-( ?

[03:53:27.0000] <zcorpan>
img needs the form element pointer?

[03:53:34.0000] <hsivonen>
zcorpan: right

[03:53:48.0000] <Ms2ger>
It seems to, at least

[03:54:35.0000] <hsivonen>
so why didn't WebKit devs feed their delta from the spec into the spec?

[03:54:45.0000] <zcorpan>
seems everyone implements that already?

[03:55:05.0000] <hsivonen>
zcorpan: Gecko and IE10 follow the spec and don't

[03:55:39.0000] <hsivonen>
or maybe I should test before I say anything

[03:55:55.0000] <zcorpan>
my copy of firefox gives the same result

[03:56:19.0000] <hsivonen>
Ms2ger: is this test case really testing what it is supposed to be testing?

[03:56:33.0000] <Ms2ger>
I don't know

[03:56:50.0000] <hsivonen>
/me boots Windows 8

[03:57:26.0000] <Ms2ger>
zcorpan, Gecko does weird stuff, with <form></form><img> matching, for example

[03:58:00.0000] <hsivonen>
Ms2ger: same result in IE10

[03:59:04.0000] <Ms2ger>
Hrm

[03:59:11.0000] <zcorpan>
Ms2ger: webkit and presto don't do that

[03:59:22.0000] <Ms2ger>
I'd hope not!

[03:59:23.0000] <hsivonen>
Ms2ger: maybe you should have </form> somewhere

[04:00:47.0000] <Ms2ger>
Gah, sounds like my IE10 is too old, then

[04:02:12.0000] <Ms2ger>
How about http://software.hixie.ch/utilities/js/live-dom-viewer/saved/2260 ?

[04:04:40.0000] <hsivonen>
Indeed Gecko tries to support <script defer> with XSLT

[04:05:28.0000] <hsivonen>
Ms2ger: IE10/Windows 8: HTMLInputElement, HTMLImageElement, undefined

[04:05:53.0000] <Ms2ger>
Okay

[04:06:47.0000] <hsivonen>
Ms2ger: IE8/XP: HTMLInputElement, HTMLImageElement, script terminated with error

[04:07:03.0000] <Ms2ger>
Lovely

[04:07:37.0000] <zcorpan>
what does ie do for http://software.hixie.ch/utilities/js/live-dom-viewer/saved/2261 ?

[04:08:10.0000] <zcorpan>
/me bets IE6 crashes

[04:08:22.0000] <hsivonen>
Ms2ger: script error in IE8

[04:08:43.0000] <zcorpan>
(for 2260)

[04:08:48.0000] <hsivonen>
Ms2ger: undefined in IE10

[04:09:10.0000] <hsivonen>
oops. those were 2261 for zcorpan

[04:09:10.0000] <Ms2ger>
That was for zcorpan?

[04:11:14.0000] <zcorpan>
undefined in ie10/win7 (tested in browserstack)

[04:19:49.0000] <hsivonen>
does the spec intend to forbid async scripts from running after a defer script has run but before DOMContentLoaded has fired?

[05:18:13.0000] <zcorpan_>
why does cssom have CSSCharsetRule again?

[05:18:55.0000] <zcorpan_>
again as in, it was obsolete in the anne-era

[06:53:52.0000] <annevk>
:/

[07:03:20.0000] <zcorpan_>
thanks annevk

[08:45:27.0000] <Ms2ger>
Nice to have someone working on cssom again

[08:48:45.0000] <darobin>
well, I guess I won't fix the PHP configuration on the test server today

[08:48:53.0000] <darobin>
/me looks for something to break very rudely

[09:01:45.0000] <darobin>
jgraham, Ms2ger: if I were to start writing that magic python server, where would I start looking?

[09:02:06.0000] <darobin>
I need something that's bare bones and doesn't handle any HTTP that I don't want it to, no magic, etc.

[09:02:33.0000] <darobin>
I reckon it may just be less painful than trying to set Apache+PHP up so that they work correctly

[09:02:44.0000] <jgraham>
darobin: Heh

[09:02:46.0000] <jgraham>
Well

[09:02:58.0000] <Ms2ger>
https://bitbucket.org/annevk/simpleserver ?

[09:03:29.0000] <darobin>
Ms2ger: interesting, thanks

[09:03:33.0000] <jgraham>
Yeah, using asyncore as the basis could work

[09:03:42.0000] <darobin>
I guess I need to think about how this needs to work, actually

[09:03:53.0000] <jgraham>
Right

[09:03:56.0000] <jgraham>
So, the thing is

[09:03:56.0000] <darobin>
because it needs to send regular files, well, regularly, and form the same origin

[09:04:08.0000] <jgraham>
There are kind of competing requirements

[09:04:35.0000] <jgraham>
For running on local test machines there is no need to service > 1 user

[09:04:50.0000] <jgraham>
and there is an advantage to handling statefulness in a simple way

[09:05:01.0000] <darobin>
ah, statefulness too

[09:05:06.0000] <jgraham>
For running on w3c-test.org is will be exposed to the whole internet

[09:05:16.0000] <darobin>
right, and we probably want to be able to run something public

[09:05:30.0000] <darobin>
if nothing else, it makes it easier to talk about stuff

[09:06:05.0000] <darobin>
glad we got rid of those people, they were annoying

[09:06:27.0000] <jgraham>
Most of the Google people seem to use irccloud

[09:07:47.0000] <jgraham>
Anyway, so in the past

[09:07:56.0000] <jgraham>
I got to the list of requirements

[09:08:04.0000] <jgraham>
Realised that they conflict

[09:08:08.0000] <jgraham>
and gave up

[09:08:11.0000] <darobin>
heh

[09:09:16.0000] <darobin>
I think we can get to something if we work on it based on which HTTP behaviours we need for specific cases

[09:09:56.0000] <darobin>
in general, we need something that can serve files correctly — that's easy

[09:10:17.0000] <jgraham>
Well at a high level

[09:10:34.0000] <darobin>
then we need specific endpoints to be configurable with specific behaviour such as setting headers, giving raw responses with specific status, being slow

[09:10:36.0000] <jgraham>
We need the ability for a test to send arbitary bytes over the wire

[09:10:49.0000] <jgraham>
With specific timing

[09:11:07.0000] <darobin>
so could we get away with something that just imports python and runs it if it has a given extension?

[09:11:09.0000] <jgraham>
But yes, there are specific things that are common cases

[09:11:20.0000] <darobin>
and we can prebuild some common cases

[09:11:39.0000] <jgraham>
Well we could do that

[09:11:56.0000] <jgraham>
It mgith be quite hard if the choices are "common case" or "no infrastructure"

[09:12:13.0000] <darobin>
if .tpy in filename: load it, give it the data and a raw socket; else: send the file

[09:12:14.0000] <darobin>
well

[09:12:27.0000] <darobin>
with that scheme we can start with zero infrastructure

[09:12:45.0000] <darobin>
and pieces that are common, we progressively move them into the core as available services

[09:13:07.0000] <jgraham>
Well sure, it might make sense to start with something very minimal

[09:13:43.0000] <darobin>
if we build it such that it can proxy some paths to another server, we can have a smooth transition

[09:13:57.0000] <darobin>
I'm guessing there's something in Python that can do proxies easily?

[09:16:12.0000] <darobin>
looking at the stuff out there, I find it hard to tell what's fresh and what's dead

[09:16:29.0000] <darobin>
I'm guessing this might be beyond my python, or at least it'll take me longer than reasonable

[09:16:34.0000] <darobin>
I'll sleep on it

[09:17:01.0000] <jgraham>
import time, random

[09:17:07.0000] <jgraham>
time.sleep(random.randint())

[09:17:17.0000] <Ms2ger>
Would be nice to have something like ^headers^ too

[09:17:57.0000] <darobin>
Ms2ger: you mean just a file that sets the headers for a directory?

[09:18:08.0000] <Ms2ger>
For a file

[09:18:12.0000] <Ms2ger>
But yes

[09:18:15.0000] <jgraham>
Turns out that everyone always thinks that the sugar they are used to is really important :)

[09:18:26.0000] <Ms2ger>
Well, really important

[09:18:41.0000] <darobin>
Ms2ger: so foo.html.^headers^ or some such?

[09:18:53.0000] <Ms2ger>
I think it's a reasonably common case, and that foo.html^headers^ solves it quite simply

[09:18:59.0000] <Ms2ger>
darobin, right

[09:19:08.0000] <jgraham>
Yeah, that could be true

[09:19:10.0000] <darobin>
yes that makes sense

[09:19:38.0000] <darobin>
it's not inherently hard and it's certainly part of the stuff that I'd suggest we add as we progress

[09:21:29.0000] <jgraham>
/me -> afk

[09:22:06.0000] <darobin>
yeah, I'm off to 1) drown my attempt at configuring PHP right in beer, and 2) mull over a replacement

[09:22:30.0000] <Ms2ger>
3) Implement <blink>?

[09:22:34.0000] <darobin>
maybe if we wait long enough then having Node as a dependency won't be an issue, and I can code it in a day, two tops :)

[09:29:47.0000] <Hixie>
/me is back

[09:29:56.0000] <annevk>
"Microsoft has been following the discussion on Futures closely both through the W3C and the discussions at TC39 (ECMAScript), and while we don't comment on plans for implementation, I can say that we are generally supportive of the idea."

[09:29:58.0000] <Ms2ger>
Congratulations!

[09:30:49.0000] <annevk>
Hixie: I'm gonna assume next is "brb, reading email" and we won't see you for another couple of weeks :p

[09:31:08.0000] <Ms2ger>
bholley!

[09:31:22.0000] <bholley>
/me knew he shouldn't have logged on IRC this morning

[09:31:23.0000] <bholley>
:-)

[09:31:43.0000] <Ms2ger>
I've been trying to catch you since Sunday or so :)

[09:32:02.0000] <bholley>
/me has been away from internet

[09:32:19.0000] <Ms2ger>
/me moves servers

[09:35:45.0000] <Hixie>
annevk: reading e-mail? nah, mark all as read, no?

[09:35:57.0000] <Hixie>
anyone send me anything important?

[09:36:30.0000] <Ms2ger>
Your spec for the named getter on form is bogus

[09:41:17.0000] <Hixie>
Ms2ger: file a bug

[09:41:19.0000] <Hixie>
:-)

[09:41:34.0000] <Hixie>
(or whatwg@ e-mail, i won't mark those as read)

[09:41:51.0000] <Hixie>
GPHemsley: we should probably encourage people to use their names as usernames rather than companies

[09:41:53.0000] <Ms2ger>
I already filed one

[09:42:03.0000] <Ms2ger>
More on their way

[09:42:09.0000] <GPHemsley>
probably

[09:44:10.0000] <GPHemsley>
For non-Mozillians: IE and Opera use the first occurrence of a parameter, Firefox and Chrome use the last occurrence

[09:44:23.0000] <GPHemsley>
no one does what the RFC says, which is to treat the whole MIME type as invalid

[09:59:40.0000] <Hixie>
i wonder what we should do about <meta name>

[09:59:48.0000] <Hixie>
on the one hand, everyone under the sun seems to invent their own value to use

[10:00:27.0000] <Hixie>
on the other, 99% of these values (at a guess) are never actually consumed by any software and are therefore just wasting author's time

[10:01:06.0000] <Ms2ger>
If it makes authors happy, can you really say that's a waste of their time?

[10:01:22.0000] <Hixie>
not clear that it makes them happy

[10:04:07.0000] <Hixie>
zcorpan: for your doc, you could name it "How HTML has evolved since 1998"

[10:22:27.0000] <GPHemsley>
Hixie: You mean you don't like fielding a hundred requests for accounts just to add spec-less meta extensions?

[10:23:22.0000] <Hixie>
no, we could solve that problem orthogonally

[10:23:26.0000] <Hixie>
(e.g. providing a web form)

[10:23:43.0000] <GPHemsley>
ah

[10:23:44.0000] <GPHemsley>
true

[10:23:59.0000] <Hixie>
we're fielding requests intentionally, as a way to see whether people actually do have so many crazy values intentionally

[10:24:03.0000] <Hixie>
it seems the answer  is yes

[10:24:25.0000] <GPHemsley>
heh

[10:24:50.0000] <GPHemsley>
you could go the MIME type route and have multiple types of values

[10:24:57.0000] <GPHemsley>
those with specs, those for private use or whatever

[10:25:26.0000] <Hixie>
well clearly we could have more specced values and less specced values

[10:25:35.0000] <Hixie>
but the question is really what to do about the latter

[10:26:19.0000] <GPHemsley>
/me shrugs

[10:32:26.0000] <bradeeoh>
Hixie: ping

[10:34:02.0000] <Hixie>
bradee-oh: pong

[10:39:24.0000] <bradee-oh>
Hixie: hi - I'm crafting an email to whatwg, but as I was, I noticed the plot was thicker than I originally noticed...

[10:39:33.0000] <bradee-oh>
Hixie: re: pagehide events and page visibility.

[10:39:41.0000] <bradee-oh>
Hixie: I guess I have two issues:

[10:40:10.0000] <bradee-oh>
1 - The original issue I was going to email about.  "unload a document" used to go "pagehide, then unload event, then no more events"

[10:40:26.0000] <bradee-oh>
Now it goes "pagehide, visibilitychanged, unload, then no more events"

[10:41:03.0000] <bradee-oh>
Hixie: this breaks an original goal of pagehide to be a drop-in replacement for the unload event (i.e., it's the last event you'll get)

[10:41:41.0000] <bradee-oh>
Hixie: It also doesn't make sense in the standalone world of pagehide/pageshow.  "If I get a pagehide event with persisted == true, then I expect no more events until I get pageshow"

[10:42:36.0000] <bradee-oh>
Hixie: but that leads to my second question...  apparently the spec never allows for "pagehide with persisted set to true".  I could swear that it did at one time, and WebKit certainly dispatches such events.

[10:42:53.0000] <Hixie>
bradee-oh: huh

[10:42:53.0000] <bradee-oh>
Hixie: and such an event is necessary for scripts to play with page caching.

[10:43:10.0000] <Hixie>
bradee-oh: i forget why we added visibilitychanged

[10:43:22.0000] <Hixie>
bradee-oh: does anyone implement it yet? If not, we could move it to before pagehide

[10:43:43.0000] <Hixie>
bradee-oh: in general, please do send the e-mail, i don't have any of this paged in and so i don't have anything useful to contribute right now :-(

[10:43:53.0000] <bradee-oh>
Hixie: We added it for tab visibility - background tabs, minimized windows, etc etc

[10:44:11.0000] <bradee-oh>
Hixie: okay - Should I put all of this in one, or start two threads?

[10:44:54.0000] <bradee-oh>
Hixie: I don't know about pagevis implementors yet, but I don't think we'll implement it as-is because of this holdup (https://bugs.webkit.org/show_bug.cgi?id=116769)

[10:45:38.0000] <Hixie>
bradee-oh: one mail is fine by me

[10:45:47.0000] <bradee-oh>
Hixie: okay.  Thanks!

[10:45:59.0000] <Hixie>
(e-mails i can split easily, bugs i can't. so i prefer e-mails to have lots of issues, and bugs to have one.)

[10:48:40.0000] <GPHemsley>
quick poll (no cheating!): what would the charset be for a document tagged with this MIME type:

[10:48:40.0000] <GPHemsley>
text/xml;test=ISO-8859-2 test te"st ; charset=ISO-8859-3; testing=asd"asd; charset=ISO-8859-4

[10:49:08.0000] <Hixie>
-3 probably

[10:49:46.0000] <GPHemsley>
Hixie: What made you come to that conclusion?

[10:50:56.0000] <Hixie>
[text/xml] [;] [test] = [ISO-8859-2 test te"st] [;] [charset] = [ISO-8859-3] [;] <abort>

[10:50:58.0000] <annevk>
isn't that a parse error theoretically?

[10:51:06.0000] <GPHemsley>
theoretically, but not in practice

[10:51:32.0000] <Hixie>
am i right? :-)

[10:51:42.0000] <GPHemsley>
Hixie: Depends on who you ask ;)

[10:51:44.0000] <Yuhong>
Hixie: on http://ln.hixie.ch/?start=1115899732&count=1, this crash was later discovered again in http://blogs.norman.com/2011/security-research/drag-and-drop-vulnerability-in-ms11-050 and turned out to be exploitable and fixed in MS11-050.

[10:51:52.0000] <Hixie>
GPHemsley: figures

[10:51:55.0000] <GPHemsley>
preliminary question, what about this:

[10:51:56.0000] <GPHemsley>
text/xml;charset=ISO-8859-3;charset=ISO-8859-4

[10:52:07.0000] <Hixie>
Yuhong: good times

[10:52:22.0000] <Hixie>
GPHemsley: -3, i hope, but it depends on whether you abort early or not

[10:52:47.0000] <GPHemsley>
presume you are reading the entire MIME type at once (not just looking for the charset specifically)

[10:53:06.0000] <GPHemsley>
though you raise a good point

[10:53:59.0000] <Hixie>
most of the time when you want a charset you are only looking for the charset

[10:54:01.0000] <Hixie>
not parsing the type

[10:54:03.0000] <Hixie>
in my experience

[10:54:13.0000] <Hixie>
see also the text/html charset sniffer in the html parser

[10:54:20.0000] <GPHemsley>
presume you are parsing the MIME type in general, and getting the charset is only a side effect

[10:54:59.0000] <GPHemsley>
(these examples are only using the charset as an easily testable proxy)

[10:55:14.0000] <GPHemsley>
(though I suppose if there are parsers that are looking for that parameter specifically, that'd be a problem)

[10:55:43.0000] <jgraham>
Hixie: Hej :) I hope you enjoyed your time away from angle brackets :)

[10:55:47.0000] <GPHemsley>
Hixie: Do you have a link to the text/html charset sniffer for me?

[10:55:54.0000] <Hixie>
jgraham: it was nice :-)

[10:55:59.0000] <Hixie>
GPHemsley: one sec

[10:56:00.0000] <jgraham>
OK, that was one smilie more than I needed

[10:56:06.0000] <Ms2ger>
:):)

[10:56:11.0000] <jgraham>
Now I am worried I am turning into a lunatic

[10:56:25.0000] <Ms2ger>
Turning?

[10:56:48.0000] <Hixie>
GPHemsley: oh i guess it's just for <meta> http://www.whatwg.org/specs/web-apps/current-work/#algorithm-for-extracting-a-character-encoding-from-a-meta-element

[10:57:19.0000] <GPHemsley>
/me wishes people used the multipage version more often

[10:57:19.0000] <Hixie>
but you'll love that algorithm

[10:57:41.0000] <Hixie>
just keep the single page one open, then paste the url into that tab and it'll jump without reloading

[10:58:37.0000] <GPHemsley>
I suppose I could do that

[10:58:39.0000] <GPHemsley>
but anyway

[10:59:05.0000] <GPHemsley>
take my tests again pretending you are not just looking for charset specifically

[10:59:20.0000] <Hixie>
ah

[10:59:21.0000] <Hixie>
dunno then

[10:59:39.0000] <Hixie>
don't we generally ignore parameters? :-)

[11:01:37.0000] <GPHemsley>
gah, you're no fun :P

[11:01:44.0000] <Yuhong>
Tested and on IE10 it deletes the text from the original location, while on Firefox it doesn't.

[11:02:40.0000] <Yuhong>
On Chrome it don't work.

[11:02:59.0000] <GPHemsley>
Hixie: Anyway, the way things are, if you have a parameter with an unquoted value, you ignore anything that comes after the first whitespace character.

[11:03:18.0000] <GPHemsley>
so charset=ISO-8859-1 this is ignored;test=bla

[11:03:29.0000] <GPHemsley>
the question is what to do about quotation marks

[11:03:54.0000] <GPHemsley>
some implementations will treat the quotation mark as a quotation mark and look for its match before deciding what to ignore

[11:04:06.0000] <Hixie>
weird

[11:04:08.0000] <GPHemsley>
others will ignore all characters that aren't semicolon

[11:04:24.0000] <GPHemsley>
so the question is, what do I put in the algorithm? :P

[11:04:44.0000] <GPHemsley>
it seems to be leaning towards not matching quotes in this case

[11:04:55.0000] <GPHemsley>
which IE, Opera, and Safari appear to agree with

[11:05:13.0000] <GPHemsley>
Firefox and Chrome, on the other hand, will each up that whole chunk between the two quotation marks and ignore that

[11:05:18.0000] <GPHemsley>
s/each/eat/

[11:05:38.0000] <GPHemsley>
meaning if you happen to have an unmatched quotation mark, the whole rest of the MIME type is ignored

[11:05:49.0000] <Hixie>
is there any way to test this other than charset?

[11:06:02.0000] <GPHemsley>
not that I'm aware of

[11:06:09.0000] <GPHemsley>
but I'm not aware of much :P

[11:06:47.0000] <GPHemsley>
what is the XML format parameter? anything visible?

[11:07:14.0000] <Hixie>
never heard of it

[11:07:21.0000] <GPHemsley>
then I have no idea

[11:07:45.0000] <GPHemsley>
I'm inclined to not match quotes

[11:07:59.0000] <GPHemsley>
but it has been suggested that tokenizing might be done before parsing

[11:08:12.0000] <GPHemsley>
though that would probably be in violation of the spec, as written

[11:08:16.0000] <GPHemsley>
/me shrugs

[11:09:41.0000] <Hixie>
!@#$%^&*( https://www.w3.org/Bugs/Public/show_bug.cgi?id=22106 wtf

[11:09:59.0000] <Hixie>
GPHemsley: if there's no way to test it, you may be trying to solve a non-problem. :-)

[11:15:55.0000] <GPHemsley>
Hixie: Well, yes and no

[11:16:19.0000] <GPHemsley>
Hixie: There are some browsers that will use the last charset value and some that will use the first

[11:16:28.0000] <GPHemsley>
So I think there's something in play here

[11:17:40.0000] <GPHemsley>
but seeing as how I would prefer the simpler solution, and a majority of browsers agree with me, I think I'll go with that

[11:17:56.0000] <GPHemsley>
(majority out of 5, that is)

[11:21:05.0000] <GPHemsley>
/me wonders if he should allow single quotes for quoted parameter values, too

[11:21:25.0000] <GPHemsley>
(probably not)

[11:34:25.0000] <GPHemsley>
ugh

[11:36:25.0000] <GPHemsley>
the browsers that do charset-first are also the ones that do non-quote-matching, and the same for charset-last and quote-matching

[11:36:28.0000] <GPHemsley>
except Safari

[11:37:26.0000] <GPHemsley>
because now I have to figure out whether to allow backslash to escape a semicolon in order to be ignored

[11:37:45.0000] <GPHemsley>
as in:

[11:37:46.0000] <GPHemsley>
text/xml;charset=ISO-8859-2 test te\;charset=ISO-8859-5 test; testing=asd\;asd

[11:38:10.0000] <GPHemsley>
allow backslash to escape in an ignorable element, and that declares no charset

[11:38:40.0000] <GPHemsley>
don't allow it to, and it does

[11:47:50.0000] <Hixie>
ok, mailbox is dealt with

[11:47:51.0000] <Hixie>
now lunch

[11:49:15.0000] <Ms2ger>
I assume "dealt with" doesn't imply "read"

[11:51:53.0000] <Hixie>
i read most of them

[11:52:41.0000] <Ms2ger>
How many were there, I wonder?

[11:54:22.0000] <GPHemsley>
hsivonen: You there?

[11:54:48.0000] <GPHemsley>
Anyone have IE handy?

[11:57:56.0000] <GPHemsley>
Here's a fun one:

[11:58:03.0000] <GPHemsley>
text/xml;test=asdf\;charset=ISO-8859-3 test;charset=ISO-8859-2 te\"st;testing=te"st;charset=ISO-8859-5

[11:58:22.0000] <GPHemsley>
Four possible encodings

[11:58:29.0000] <GPHemsley>
(utf-8 is the default for XML)

[11:58:41.0000] <GPHemsley>
and at least one browser does each one

[12:00:41.0000] <GPHemsley>
Firefox and Chrome do the same thing, but that's because they both match quotes

[12:00:50.0000] <GPHemsley>
I'm curious what IE does

[12:01:04.0000] <GPHemsley>
(IE has so far been patterning mostly with Opera)

[12:03:06.0000] <Ms2ger>
Other way around, probably

[12:03:22.0000] <GPHemsley>
well, yeah, but from my point of view :)

[12:04:43.0000] <qwebirc364527>
what is the best channel to ask questions about html5 and css3?

[12:05:54.0000] <aklein>
Hixie: yt? I've got some questions about the 'calling scripts' algorithm, especially as it regards microtask checkpoints

[12:12:30.0000] <GPHemsley>
regarding that last example: Firefox and Chrome choose -5, Opera chooses -3, Safari chooses utf-8

[12:12:38.0000] <GPHemsley>
so I guess no one actually chooses -2

[12:12:49.0000] <GPHemsley>
unless IE does

[12:13:51.0000] <GPHemsley>
a UA that allowed semicolon escaping would choose -2

[12:14:35.0000] <GPHemsley>
err, rather, a UA that allowed semicolon escaping AND used the first occurrence of a valid charset parameter

[12:14:46.0000] <GPHemsley>
(this is all very complicated)

[12:15:33.0000] <GPHemsley>
it's not clear what made Safari just reject everything and default to utf-8

[12:16:31.0000] <GPHemsley>
oh, unless...

[12:17:29.0000] <GPHemsley>
perhaps Sarfari is sniffing for HTML

[12:18:13.0000] <GPHemsley>
which would mean it treats the whole thing as invalid

[12:19:30.0000] <GPHemsley>
if that's true, it makes everything else even more complicated...

[12:34:11.0000] <GPHemsley>
Anyone with IE, what's the encoding on this page? http://whatwg.gphemsley.org/tests/mimesniff/sniffing.php?ct=text/xml;test=asdf\;charset=ISO-8859-3%20test;charset=ISO-8859-2%20te\%22st;testing=te%22st;charset=ISO-8859-5

[12:38:00.0000] <GPHemsley>
(at least Safari isn't treating it as invalid... I guess)

[12:57:19.0000] <GPHemsley>
Is it possible to determine the MIME type of an iframe using JavaScript?

[13:01:07.0000] <zcorpan>
Hixie: i think i'll not change the title again :-)

[13:01:23.0000] <Ms2ger>
B-b-b-b-but

[13:03:12.0000] <GPHemsley>
apparently only in Firefox and IE...?

[13:20:10.0000] <zcorpan>
GPHemsley: if everyone is doing different things, just spec the simplest sane thing you can come up with :-)

[13:35:47.0000] <Hixie>
aklein: here

[13:35:57.0000] <Hixie>
zcorpan: i figured :-)

[13:37:46.0000] <aklein>
Hixie: hi there. the algorithm at http://www.whatwg.org/specs/web-apps/current-work/multipage/webappapis.html#calling-scripts looks to me like it might be "perfoming a microtask checkpoint" too often

[13:38:14.0000] <aklein>
Hixie: the "microtask" is meant to end only when the outermost script invocation returns

[13:39:57.0000] <aklein>
but my reading of that section is that causing one script to be invoked from another (say, by synchronously dispatching an event via a call to HTMLElement.focus() inside an onclick handler) causes a checkpoint to be performed in the "middle" of the click handler (and then again at the end)

[13:41:35.0000] <aklein>
Gecko, WebKit, and Blink all do the right thing, but I think the spec likely needs a fix (this was noticed by someone unfamiliar with microtasks trying to understand them by reading the spec)

[13:42:18.0000] <Hixie>
aklein: i think that was done intentionally, but let me check the history...

[13:43:31.0000] <Hixie>
aklein: see https://www.w3.org/Bugs/Public/show_bug.cgi?id=19554

[13:43:44.0000] <Hixie>
aklein: it's intentional (and it is hoped that the browsers will change accordingly)

[13:43:54.0000] <Hixie>
aklein: however, if the browsers won't change, then obviously we should change the spec

[13:44:32.0000] <aklein>
Hixie: hmm, interesting, reading...

[13:49:49.0000] <aklein>
Hixie: more generally, I'm interested in the problem of specs not referencing this "jump to a code-entry point" algorithm. e.g., DOM core doesn't use that algorithm when describing how events are dispatched. is that just a bug?

[13:50:46.0000] <aklein>
it seems like the layering is tricky, though

[13:50:51.0000] <aklein>
since DOM isn't supposed to refer to HTML

[13:51:55.0000] <Hixie>
doublec: yt?

[13:52:18.0000] <Hixie>
aklein: yeah i think i need to rework it to be in terms of the JS spec

[13:52:24.0000] <Hixie>
aklein: there's a bug on that too, hold on

[13:54:31.0000] <Hixie>
aklein: https://www.w3.org/Bugs/Public/show_bug.cgi?id=18242

[13:56:50.0000] <aklein>
Hixie: my read of 19554: it looks you went with sicking's suggestion to do "outermost script exits" for blob url autorevoking, but left "perform microtask checkpoint" as running every time through the script-calling algorithm. and I don't see discussion about that issue on that bug.

[13:58:50.0000] <Hixie>
aklein: ah, maybe it was an error then. can you file a new bug?

[13:59:16.0000] <aklein>
Hixie: will do

[13:59:20.0000] <Hixie>
https://www.w3.org/Bugs/Public/show_bug.cgi?id=21851 makes no sense to me. can someone explain this? (the issue of putting .text on the abstract cue interface)

[13:59:23.0000] <Hixie>
aklein: thanks

[14:02:18.0000] <rafaelw>
Hixie: Can we abstract all uses of end-of-microtask into some kind of microtask work queue

[14:02:36.0000] <rafaelw>
and mutation observers, table sort, blob urls, etc... will all be microtask work queue types.

[14:02:55.0000] <rafaelw>
it looks like we now have at least four types of work happening without consistent semantics.

[14:03:17.0000] <rafaelw>
(mutation observers, table sorting, blob url revokation, custom element callbacks).

[14:03:19.0000] <aklein>
rafaelw: this seems to already be partially done, there's a list of "global script clean-up jobs"

[14:04:52.0000] <Hixie>
rafaelw: don't they all have slightly different needs?

[14:05:01.0000] <rafaelw>
I really hope not.

[14:05:05.0000] <rafaelw>
That would be unfortunate.

[14:05:23.0000] <rafaelw>
Adam is right, the closest thing here is the script cleanup steps.

[14:06:21.0000] <rafaelw>
I think maybe the global script cleanup jobs list needs a more general name: like global microtask work item

[14:06:22.0000] <aklein>
sicking & smaug____ might be interested in ^^^ as well

[14:06:35.0000] <rafaelw>
(and arun if he's nearby)

[14:07:48.0000] <sicking>
the way that mark miller proposed modeling it is that the "end of microtask" list is like a special task source

[14:07:57.0000] <sicking>
which has higher prioirty than all other task sources

[14:08:01.0000] <sicking>
i kind'a like that

[14:08:24.0000] <rafaelw>
presumably the current implementations fit that description?

[14:08:27.0000] <sicking>
i'm not sure that that's compatible with how mutation observers are defined right now, but I bet it could be made compatible with that

[14:08:29.0000] <Hixie>
i've suggested doing that

[14:08:35.0000] <Hixie>
but iirc there's problems with it

[14:08:36.0000] <sicking>
rafaelw: it's not how gecko does it

[14:08:47.0000] <rafaelw>
what's the semantic difference?

[14:09:19.0000] <sicking>
rafaelw: does mutation observers do anything differently once all mutation observers have been notified?

[14:09:47.0000] <sicking>
specifically, say that I have 3 observers

[14:09:49.0000] <sicking>
A B and C

[14:10:06.0000] <sicking>
if I do something that ends up wanting to notify all 3

[14:10:09.0000] <GPHemsley>
zcorpan: That's the plan :)

[14:10:33.0000] <sicking>
and then I return to the event loop, which means that we start notifying them

[14:10:42.0000] <sicking>
we start with notifying A

[14:11:01.0000] <sicking>
and then we notify B, but B does something that wants to notify A and C

[14:11:19.0000] <sicking>
which one is notified after that? A or C?

[14:11:22.0000] <rafaelw>
C

[14:11:23.0000] <smaug____>
(microtask doesn't necessarily mean returning to event loop)

[14:11:33.0000] <rafaelw>
then A

[14:11:46.0000] <rafaelw>
conceptually, you can think about the delivery steps like this:

[14:11:59.0000] <sicking>
rafaelw: ok, so we just add to C's list, and then add to A's list which adds A to the end of the queue?

[14:12:06.0000] <rafaelw>
let currentRecipients be currentRecipients

[14:12:10.0000] <rafaelw>
clear currentRecipients

[14:12:20.0000] <rafaelw>
while (currentRecipients.length)

[14:12:30.0000] <rafaelw>
  next  = currentRecipients.shift();

[14:12:43.0000] <rafaelw>
 if (next.stillNeedsDelivery) next.deliver()

[14:12:45.0000] <sicking>
rafaelw: you're already describing a different model than a task source

[14:13:33.0000] <sicking>
rafaelw: having it be a task source would require there not being a "currentReciptients" concept

[14:14:39.0000] <rafaelw>
is there any advantage to the task source scheduling that you're thinking of?

[14:14:45.0000] <sicking>
since "currentReciptients" require going through the contents of the task source and picking out things that are specifically MO tasks

[14:15:12.0000] <rafaelw>
no. it wouldn't

[14:15:36.0000] <sicking>
rafaelw: Not sure. There might be the advantage that we can put more things in the task source while having a defined interaction and order

[14:15:53.0000] <sicking>
i'm not sure how we can define more things happning at "end of microtask" right now

[14:16:20.0000] <Hixie>
see https://www.w3.org/Bugs/Public/show_bug.cgi?id=20821 for more discussion on this btw

[14:17:09.0000] <rafaelw>
it seems like there are two (somewhat orthogonal issues)

[14:17:13.0000] <rafaelw>
a) when delivery happens

[14:17:17.0000] <rafaelw>
b) how delivery happens.

[14:17:24.0000] <sicking>
yup

[14:17:30.0000] <sicking>
well

[14:17:39.0000] <sicking>
what do you mean by the "how"?

[14:17:41.0000] <rafaelw>
(and I suppose) whether all clients can live with the same semantics of a single a & b.

[14:17:47.0000] <rafaelw>
delivery scheduling

[14:18:01.0000] <rafaelw>
(i.e. m.o vs task source)

[14:18:27.0000] <sicking>
so a == "when do we run 'end of microtask' stuff", and b == "in what order does 'end of microtask' stuff run"?

[14:18:37.0000] <rafaelw>
yes.

[14:18:43.0000] <sicking>
then yes, i agree

[14:18:47.0000] <smaug____>
isn't a) clear

[14:18:58.0000] <sicking>
i thought so

[14:19:01.0000] <rafaelw>
that's what i'm hoping, the current spec language is clearly wrong.

[14:20:20.0000] <rafaelw>
there are two problems with the current wording (wrt a)

[14:22:42.0000] <rafaelw>
1) http://www.whatwg.org/specs/web-apps/current-work/multipage/webappapis.html#calling-scripts will Perform a microtask checkpoint, when there is a running script

[14:23:11.0000] <rafaelw>
2) there are multiple kinds of work which are happening here, and it seems like they should all be clients of the same mechanism.

[14:25:02.0000] <sicking>
rafaelw: doesn't step 5 in that algorithm only do the microtask checkpoint if it's the outermost running script?

[14:25:09.0000] <sicking>
oh, no

[14:25:21.0000] <sicking>
step 6 is what does the checkpoint

[14:26:08.0000] <rafaelw>
right. that's why adam was suggesting that step 5 is closest to what we need here.

[14:27:00.0000] <rafaelw>
although, we need think thing to also be invoked at the end of the current Task, so it makes somewhat less sense to call it (global script clean-up jobs)

[14:27:11.0000] <sicking>
the cleanup jobs stuff isn't even agreed upon being a workable idea. I think Google is wary so far

[14:27:40.0000] <sicking>
weary even

[14:27:50.0000] <rafaelw>
well, i think we can treat that as a separate issue.

[14:27:57.0000] <rafaelw>
(presumably that's about File stuff).

[14:28:08.0000] <sicking>
yes, definitely separate, sorry

[14:28:21.0000] <rafaelw>
at very least, there are m.o., custom element callbacks and table sorting.

[14:28:27.0000] <rafaelw>
that are all "end of microtask"

[14:28:49.0000] <rafaelw>
(and if their needs are different, i'm not aware of it).

[14:35:11.0000] <Hixie>
can anyone figure out what https://www.w3.org/Bugs/Public/show_bug.cgi?id=22049 means?

[14:35:25.0000] <rafaelw>
is this a reasonable way to clean this up: I'll write-up a proposal for cleaning up the language, attach it to a whatwg bug, and start cc'd folks -- and the folks i ad can make sure the right stake holders are added (that i missed)?

[14:35:52.0000] <sicking>
The way I'd like to define things is that there's an "end of microtask" queue of work items. These items are always added to the end of the queue and always run in queue order. Only once the queue is empty do we continue with doing whatever else we had planned to do (like calling the next event handler for example). M.o. would, when they detect that a MO gets its first entry, queue a work item at the end of the microtask queue which notifies 

[14:35:52.0000] <sicking>
MO. When a MO gets additional entries, nothings needed to be done.

[14:35:53.0000] <rafaelw>
s/ad/add

[14:36:04.0000] <sicking>
rafaelw: that soudns good

[14:36:38.0000] <rafaelw>
ok, well now you've opened issue b

[14:36:46.0000] <rafaelw>
so let's talk about it briefly.

[14:36:47.0000] <sicking>
rafaelw: ah, yes, definitely

[14:37:08.0000] <sicking>
rafaelw: sorry, my mind has been more occupied with b

[14:39:19.0000] <sicking>
rafaelw: i guess it would be nice if the table sorting happened before notifying any MO. Since otherwise we'd might notify it twice rather than once. But that requires tricky knowledge about different end-of-microtask-work-items

[14:43:31.0000] <rafaelw>
so adam and I were just talking about this and we think it's probably ok to use a regular Task queue.

[14:44:00.0000] <rafaelw>
M.O. will need to schedule a single task for all observers and make sure its pending every time a new record gets enqueue to an observer

[14:44:07.0000] <sicking>
rafaelw: won't that cause these things to run after an event has fully run? Rather than after each event handler

[14:44:33.0000] <rafaelw>
sorry. have you jumped back to talking about (a)?

[14:44:36.0000] <sicking>
rafaelw: or do you mean "task queue that runs at the end of microtask"

[14:44:40.0000] <rafaelw>
yes.

[14:44:45.0000] <sicking>
rafaelw: ok, i'm with you

[14:45:01.0000] <sicking>
why do you need a single task for all observers?

[14:45:05.0000] <rafaelw>
the issue with scheduling for m.o is that delivery is ordered by observer *creation time*.

[14:45:24.0000] <rafaelw>
so each delivery cycle needs to sort the observers which are about to be delivered to.

[14:45:57.0000] <sicking>
oooh :(

[14:46:04.0000] <sicking>
why do we use observer creation time?

[14:46:41.0000] <rafaelw>
well, first it was a useful construct because pages can control order of delivery by creating their observers in the right sequence.

[14:47:16.0000] <rafaelw>
but the real reason is that ordering by *mutation* order would have risked exposing implementation details.

[14:47:22.0000] <rafaelw>
and being non-compat.

[14:47:35.0000] <rafaelw>
(or very hard to spec)

[14:47:49.0000] <sicking>
mm.. good point

[14:48:30.0000] <rafaelw>
so i think it makes sense to use a FIFO queue (avoid Task queue for clarity).

[14:48:43.0000] <rafaelw>
the wording for m.o. gets more complex, but i think that's ok.

[14:48:57.0000] <sicking>
yeah

[14:49:09.0000] <rafaelw>
and i think we're all agreed on the timing, but the spec is just in need to a fix-up.

[14:49:48.0000] <rafaelw>
any other problems you can think of? otherwise I'll go write it up and open the bug.

[14:50:08.0000] <sicking>
we'd have to define things like, what happens if a MO does something that both cause additional MOs needing to be called, and also cause tables to need to be re-sorted. Does those MOs get called before or after the table is sorted?

[14:50:38.0000] <sicking>
I.e. say that you have observers A and B created

[14:50:47.0000] <sicking>
and you do a mutation that requires A to fire

[14:51:08.0000] <sicking>
so then A fires, and it does a mutation which requires B to get fired and also mutates a table.

[14:51:16.0000] <sicking>
does B run before or after table is resorted?

[14:51:37.0000] <sicking>
and would the answer be different if the initial mutation had required both A and B to get notified?

[14:52:19.0000] <rafaelw>
so i have an opinion...

[14:53:30.0000] <sicking>
i don't think i have a strong opinion. Though it seems iffy if the answer depends on if B was originally scheduled or not

[14:54:22.0000] <rafaelw>
i think when m.o. runs, it *has* to deliver to all observers that are "activated" before it calls the first one.

[14:54:48.0000] <rafaelw>
i think the question is where it continues delivering until there are no "active" observers, or if it yields to other types of work.

[14:55:22.0000] <rafaelw>
s/where/whether

[14:56:46.0000] <sicking>
makes sense

[14:59:46.0000] <rafaelw>
so presumably mark wants ecma end-of-turn stuff to be enqueued to this new microtask FIFO queue?

[15:00:07.0000] <rafaelw>
(promises, weakrefs, Object.observe, etc...)

[15:01:14.0000] <rafaelw>
s/ecma/ecmascript/

[15:05:47.0000] <rafaelw>
ok. i guess this horse is dead

[15:06:10.0000] <rafaelw>
i'll open a bug that puts a stake in the ground and we can iterate from there.

[15:16:15.0000] <sicking>
rafaelw: sorry, yes

[15:16:32.0000] <sicking>
rafaelw: say my name and my irc client will start blinking and stuff. It's really annoying but it works :)

[15:20:29.0000] <rafaelw>
sicking: ok.

[15:20:35.0000] <rafaelw>
here's the bug: https://www.w3.org/Bugs/Public/show_bug.cgi?id=22185

[15:20:44.0000] <rafaelw>
Please add anyone I've missed.

[15:21:09.0000] <rafaelw>
I'll try to write-up the proposal today or tomorrow.

[15:22:23.0000] <aklein>
rafaelw: thanks for writing this all down

[15:54:02.0000] <JonathanNeal>
So, in April http://html5doctor.com/the-hgroup-element/ mentioned they were "working on an article to help guide authors on which markup patterns they should use instead [of hgroup]" What has come of that? What would you folks recommend?

[15:54:15.0000] <JonathanNeal>
And related, any developments on <subline> or something similar?

[15:54:46.0000] <Hixie>
<hgroup> is the element to use.

[15:54:51.0000] <Hixie>
if you have subheadings

[15:55:39.0000] <Hixie>
hsivonen, MikeSmith, gsnedders: woops, sorry, just checked in a parser fix without marking it for conformance checkers and tools

[15:56:50.0000] <JonathanNeal>
Huh, has it been undeprecated or something, Hixie?

[15:58:02.0000] <Hixie>
JonathanNeal: it was never deprecated, at the whatwg

[15:58:26.0000] <boogyman>
JonathanNeal: why now use the appropriate h-level then use the "next sibling" CSS selector

[15:58:29.0000] <boogyman>
not*

[15:58:30.0000] <Hixie>
JonathanNeal: all that happened with <hgroup> is that the w3c is trying to assert its independence, as far as i can tell, by making dumb changes to their fork of the spec.

[15:58:50.0000] <Hixie>
(note: the above may be overly cynical)

[15:59:20.0000] <MikeSmith>
Hixie: thanksfor theheads-up

[15:59:59.0000] <Hixie>
MikeSmith: (specifically, for <menuitem>; without the fix you'll have an infinite loop)

[16:01:35.0000] <Hixie>
man, i'm totally screwing up this rtl bug

[16:01:36.0000] <MikeSmith>
ah yeah, I saw the bug report I think

[16:01:42.0000] <Hixie>
every time i fix it i make it worse

[16:01:48.0000] <JonathanNeal>
Is there an IRC room for bugging W3C folks about this, and figuring out what they plan to push in its stead?

[16:01:54.0000] <Hixie>
i18n people must think i'm a loon

[16:01:55.0000] <MikeSmith>
(menuitem)

[16:02:15.0000] <Hixie>
JonathanNeal: #htmlwg on irc.w3.org, if you care about the html spec, but i recommend living the easy life with the whatwg spec instead :-)

[16:03:04.0000] <Philip`>
#html-wg, I think

[16:03:14.0000] <JonathanNeal>
The inability to add so much as a <div> or <span> in <hgroup> was what keeps me tracking this.

[16:03:29.0000] <boogyman>
^ if you're a UA implementer. If he's a consumer, then he should look at which version of the spec is being used for UA's

[16:03:31.0000] <JonathanNeal>
Unless I'm incorrect in that preposition?

[16:04:54.0000] <Hixie>
JonathanNeal: why do you need a <div> in <hgroup>?

[16:05:01.0000] <MikeSmith>
JonathanNeal: I don't think hgroup is ever essential. The only reason to use it is if you care about how applications the implement the outline algoritm are going to show your headings in the outline

[16:05:03.0000] <Hixie>
JonathanNeal: (you can have a <Span> around the <h1> or <h2> contents in <hgroup>)

[16:06:45.0000] <JonathanNeal>
I was always hoping an element like <hgroup> or <subline> would normalize some of the odd implementations I catch across the web.

[16:07:09.0000] <JonathanNeal>
Like here http://twitter.github.io/bootstrap/ they have a kind of sub heading or abstract that they place in a paragraph.

[16:07:14.0000] <Hixie>
that's hte idea of <hgroup>, right

[16:07:16.0000] <JonathanNeal>
But here http://purecss.io/ they have it in a heading.

[16:07:26.0000] <Hixie>
abstracts are more <header> material

[16:08:15.0000] <MikeSmith>
JonathanNeal: the W3C HTML spec has http://www.w3.org/html/wg/drafts/html/master/common-idioms.html#sub-head (if you've not seen it already)

[16:08:27.0000] <Hixie>
JonathanNeal: the bootstrap case is <header> <hgroup> <h1> Bootstrap </h1> <h2> Sleek [...] </h2> </hgroup> <p> ...download... </p> <nav> <p> ...github...examples... </p> </nav> </header>

[16:08:33.0000] <Hixie>
or similar

[16:08:36.0000] <JonathanNeal>
The Boostrap team occasionally labeling it a "byline", although it is not being used to attribute credit, it's being used as a subheading.

[16:10:27.0000] <JonathanNeal>
<div class="marketing">…<h1>Built with Bootstrap.</h1><p class="marketing-byline">For even more sites built with Bootstrap…</div>

[16:12:16.0000] <JonathanNeal>
Those are interesting recommendations, MikeSmith.

[16:13:04.0000] <boogyman>
JonathanNeal: secondary to this conversation, but I believe a hyphen is an illegal character to use in an id/class attribute value

[16:13:19.0000] <JonathanNeal>
Hixie: I see. Thanks. Yet Boostrap almost kind of avoids HTML5 elements.

[16:14:18.0000] <JonathanNeal>
boogyman: not sure I follow. there is no sub-head element, that's just an article describing (meh) techniques to mark up subheadings.

[16:14:32.0000] <Hixie>
JonathanNeal: yeah i just meant that's what it would look like if you used modern HTML

[16:16:25.0000] <JonathanNeal>
Maybe the paradigm shift was just really high to think of using <h1-6> for longer, even mulit-part text.

[16:16:37.0000] <JonathanNeal>
<h2-6> rather, within an <hgroup>

[16:16:41.0000] <MikeSmith>
JonathanNeal: I happen to agree with those recommendations, and disagree with Hixie. I think hgroup is a solution in search of a problem.

[16:17:05.0000] <Hixie>
the problem is right there: how do you mark up subheadings

[16:17:08.0000] <Hixie>
every w3c spec has it

[16:17:13.0000] <Hixie>
how is it not a real problem?

[16:17:46.0000] <MikeSmith>
Hixie: you can obviously mark up subheadings without <hgroup>

[16:17:51.0000] <tantek>
Hixie, you mean it's not <br><b><font size> ?

[16:17:53.0000] <tantek>
;)

[16:18:01.0000] <JonathanNeal>
It's certainly a situation in the projects I've worked on, and I see differing opinions on how it should be marked up, between Twitter and Yahoo.

[16:18:22.0000] <MikeSmith>
everybody was marking up subheadings in whatever ways before hgroup came along

[16:18:32.0000] <Hixie>
MikeSmith: well sure, you can mark up paragraphs with <p>. I'm not disagreeing that there are multiple solutions, just saying that there is a problem

[16:18:33.0000] <MikeSmith>
UAs do nothing with hgroup

[16:18:46.0000] <Hixie>
MikeSmith: er, without <p>

[16:18:50.0000] <MikeSmith>
yeah

[16:19:20.0000] <MikeSmith>
I agree it'd be a bigger problem if browsers actually exposed the document outline

[16:19:23.0000] <Hixie>
JonathanNeal: right, the fact that there were multiple people disagreeing on how to mark it up is why we introduced <hgroup>

[16:19:37.0000] <Hixie>
it's similar to <section> and <aside> and so on

[16:19:59.0000] <JonathanNeal>
MikeSmith: some do, my iPhone has started recommending alternate views of web pages.

[16:20:11.0000] <JonathanNeal>
I'm sure you all know what it is better than I do, but has anyone else seen this?

[16:20:16.0000] <MikeSmith>
Hixie: but so far you're the one who's not wanting to have browsers provide a way to Web content to expose a document outline

[16:20:20.0000] <JonathanNeal>
It kind of strips the page of styling and presents you with a book view of a web page?

[16:20:33.0000] <MikeSmith>
JonathanNeal: have not see that

[16:23:08.0000] <JonathanNeal>
Yea, it's called "Reader"

[16:23:23.0000] <JonathanNeal>
http://photos.appleinsider.com/safari-110607-3.png

[16:24:11.0000] <MikeSmith>
ah yeah

[16:24:11.0000] <Hixie>
MikeSmith: i think the outline thing is kind of an orthogonal thing. even without the outline issue, we still need something like <aside> and <nav> and <hgroup>.

[16:24:42.0000] <MikeSmith>
JonathanNeal: that thing seems pretty half-assed

[16:25:29.0000] <boogyman>
its a "low-fi" render

[16:25:31.0000] <MikeSmith>
Hixie: I think there's way more of need for <aside> and <nav> then for <hgroup> but yeah I agree people certainly want something

[16:25:51.0000] <JonathanNeal>
MikeSmith: it's a start, and definitely the most outline-ish thing I've seen for non-developers.

[16:26:08.0000] <Hixie>
MikeSmith: sure, subheadings are rarer than sidebars, but that's just a question of degrees, not a question of whether there's a problem or not.

[16:26:35.0000] <MikeSmith>
JonathanNeal: well, it doesn't seem like an outline at all to me. And it's not clear to me that it's doing anything with <hgroup>

[16:26:43.0000] <MikeSmith>
Hixie: true

[16:28:55.0000] <JonathanNeal>
MikeSmith: I meant, it's using (atleast the elements of) the outline to create a book view of the page.

[16:29:48.0000] <MikeSmith>
Hixie: I guess to me it just seems like not a high enough priority to merit a new element. But then I could also say that about <article> and some others.

[16:30:17.0000] <JonathanNeal>
Long live <main>

[16:31:34.0000] <MikeSmith>
I think some people get way way to wrapped up in discussions about how to properly use the semantic elements -- <article> etc.

[16:31:59.0000] <MikeSmith>
splitting hairs

[16:32:04.0000] <MikeSmith>
talmudic

[16:32:12.0000] <MikeSmith>
pick your metaphor

[16:33:22.0000] <MikeSmith>
I think in the end Web authors should care fuck all what somebody else thinks of their markup, as long as it's accessible and i18n-friendly, etc.

[16:34:42.0000] <MikeSmith>
it's like looking at the source of somebody's PDF and complaining about how they used PostScript

[16:34:48.0000] <boogyman>
Do you agree that there's a difference between appearing accessible, and being accessible?

[16:35:56.0000] <MikeSmith>
boogyman: is that question a trap of some kind?

[16:37:46.0000] <boogyman>
that wasn't my intent. I have seen poorly authored code that is "accessible" in the sense that it had tags and wai-aria roles, but that if someone was more miopic, it's really a pos that doesn't make sense.

[16:38:24.0000] <MikeSmith>
I see

[16:39:33.0000] <MikeSmith>
boogyman: I would imagine that anybody who was taking the time to add wai-aria roles to a document would be doing it in good faith to try to actually make it accessible

[16:40:13.0000] <Hixie>
MikeSmith: well sure, but we have it now, so it's kind of a moot point. There's lots of elements that are even less useful.

[16:40:33.0000] <MikeSmith>
Hixie: no disagreement there

[16:40:43.0000] <Hixie>
ok :-)

[16:41:52.0000] <MikeSmith>
so in related news, I see http://www.apple.com/safari/features.html mentions hgroup

[16:41:57.0000] <MikeSmith>
"Support for article, aside, footer, header, hgroup, nav, and section elements allows developers to create advanced web designs with semantic markup."

[16:42:21.0000] <MikeSmith>
JonathanNeal: do you have an example of Reader doing something with hgroup?

[16:44:44.0000] <MikeSmith>
maybe hober knows

[16:44:49.0000] <boogyman>
oh, btw -- Hixie stop being a loon

[16:46:28.0000] <Hixie>
MikeSmith: i did a search at google and found literally over 100,000,000 pages with <hgroup> (vs about five times as many with <aside>). It's pretty widely used.

[16:47:16.0000] <Hixie>
(this is on a subset of the web that we use for this kind of thing internally, i don't recall the sample size but it's in the single-digit billions, iirc)

[16:51:54.0000] <MikeSmith>
Hixie: OK

[16:52:14.0000] <MikeSmith>
that suggests to me we probably don't really need <aside) either then :)

[16:53:26.0000] <boogyman>
100m isn't an insignificant amount

[16:58:22.0000] <Hixie>
MikeSmith: well, see https://www.w3.org/Bugs/Public/show_bug.cgi?id=17812 -- from the same sample, i got about 50k pages mentioning :read-only and friends

[16:59:19.0000] <Hixie>
MikeSmith: i'd guess 100m here is about 1%-10%. We were forced to have the <image> hack in the HTML parser for something used on 0.2% of pages. FWIW.

[16:59:44.0000] <JonathanNeal>
Good ol' <image>.

[16:59:51.0000] <JonathanNeal>
How's <picture> doing these days?


2013-05-29
[17:04:58.0000] <MikeSmith>
Hixie: along with those stats I saw others from the corpus that Steve got data from that suggest <hgroup> is used way less than that

[17:06:01.0000] <MikeSmith>
JonathanNeal: a Chrome/Blink dev posted an Intent to Implement for <picture> to the blink-dev list

[17:07:53.0000] <Hixie>
steve's corpus is significantly smaller

[17:08:42.0000] <Hixie>
he's probably got data biased towards front pages and major sites, whereas google has much more depth in the tail

[17:20:24.0000] <MikeSmith>
Steve's report is at http://blog.paciellogroup.com/2012/04/html5-accessibility-chops-data-for-the-masses/

[17:20:55.0000] <MikeSmith>
data if from a "Top 10,000 sites" data set

[17:23:27.0000] <MikeSmith>
"Of the top 8915 HTML pages, 79 (0.89%) were found to include use of the HTML5 hgroup element."

[17:24:16.0000] <JonathanNeal>
Change Proposal: replace hgroup with the subline element - attaboy

[17:24:58.0000] <JonathanNeal>
(from Steve's report)

[17:33:38.0000] <stevefaulkner>
JonathanNeal: we are discussing in the html wg about developing <subline> further, have had quite a bit of positive developer feedback

[17:35:36.0000] <JonathanNeal>
stevefaulkner: just talk, anything particular?

[17:37:24.0000] <GPHemsley>
Safari will download anything willy nilly

[17:37:26.0000] <GPHemsley>
/me wonders how vulnerable that makes it to attacks

[17:38:00.0000] <JonathanNeal>
More notes on Safari Reader http://mathiasbynens.be/notes/safari-reader

[17:38:24.0000] <stevefaulkner>
JonathanNeal: developing it as an extension spec, its got the basis for it  already there http://www.html5accessibility.com/HTML5extensions/subline.html but needs some further work

[17:41:10.0000] <JonathanNeal>
I had seen that popping up on Google lately. I am a <subline> advocate. We had it in the html5shiv for a while.

[17:42:12.0000] <JonathanNeal>
But, it's always good to challenge those perspections and collect new data.

[17:42:31.0000] <JonathanNeal>
For instance, I did not know that w3c and whatwg had forked on it.

[17:44:08.0000] <stevefaulkner>
JonathanNeal: look forward to your input as we develop subline spec further then

[17:44:42.0000] <JonathanNeal>
ha, can't imagine i'll have anything new to contribute, but i'll always be around, and I'll always be looking for reasons I am wrong.

[17:44:51.0000] <JonathanNeal>
Because, in the end, I usually am.

[17:45:16.0000] <stevefaulkner>
likewise

[17:46:59.0000] <GPHemsley>
interesting... both Chrome and Safari will display a file marked as "text/<256-char string>" as plaintext

[17:47:07.0000] <GPHemsley>
/me wonders if that's a good idea

[17:48:50.0000] <GPHemsley>
(as I assumed, they do that for anything where the top-level type is "text")

[17:49:08.0000] <GPHemsley>
logically, that seems like a good idea

[17:49:16.0000] <GPHemsley>
but I wonder if there are instances where it isn't

[17:49:29.0000] <GPHemsley>
s/logically/intuitively/

[17:49:41.0000] <TabAtkins>
Yeah, everything that's text/* is... text.  Any further information just seems to be for helpful naming purposes.

[17:50:03.0000] <boogyman>
GPHemsley: maybe, but then you would have to question why it's being marked as "text/" if it's not truly text

[17:50:34.0000] <GPHemsley>
anyone have IE handy?

[17:50:48.0000] <boogyman>
unfortunately. lol what version?

[17:51:32.0000] <boogyman>
7-10*

[17:52:43.0000] <JonathanNeal>
I have IE handy.

[17:53:26.0000] <JonathanNeal>
Have 6 on a VM because I double as a sadist?

[17:53:27.0000] <GPHemsley>
any version

[17:53:38.0000] <GPHemsley>
you can start with this: http://whatwg.gphemsley.org/tests/mimesniff/sniffing.php?ct=web%20test

[17:53:59.0000] <JonathanNeal>
Interesting https://www.google.com/search?q=define:sadist "someone who obtains pleasure from inflicting pain or others" I FOR ONE ENJOY INFLICTING OTHERS

[17:54:19.0000] <GPHemsley>
but actually, there's one that'd be more useful

[17:54:55.0000] <JonathanNeal>
IE6 and IE6 want to download this file.

[17:54:58.0000] <GPHemsley>
JonathanNeal: What's the encoding on this page? http://whatwg.gphemsley.org/tests/mimesniff/sniffing.php?ct=text/xml;test=asdf\;charset=ISO-8859-3%20test;charset=ISO-8859-2%20te\%22st;testing=te%22st;charset=ISO-8859-5

[17:54:59.0000] <JonathanNeal>
*IE7

[17:55:12.0000] <JonathanNeal>
okay, hold up, testing the new link you sent.

[17:55:54.0000] <JonathanNeal>
IE6, IE7, and IE8 on XP all look at the file.

[17:56:23.0000] <JonathanNeal>
They show what appears to be the source code of a document, but the content within <body> is all squares.

[17:56:56.0000] <GPHemsley>
yeah, in that case I only care about which encoding they chose

[17:57:13.0000] <GPHemsley>
squares suggests -3

[17:57:15.0000] <GPHemsley>
IIRC

[17:58:09.0000] <JonathanNeal>
It looks like rich markup

[17:58:57.0000] <JonathanNeal>
Yea, IE6 devtool says "<BODY class=st>"

[17:59:38.0000] <JonathanNeal>
Or is this IE's way of reading an XML document?

[17:59:58.0000] <GPHemsley>
it's an HTML document that's tagged as XML for debugging purposes

[18:00:20.0000] <GPHemsley>
(if the Content-Type header is ignored, then it should output as HTML; otherwise, it should output as XML)

[18:00:31.0000] <GPHemsley>
but I'm really just interested in what the text actually looks like

[18:00:37.0000] <GPHemsley>
(i.e. the charset/encoding)

[18:00:50.0000] <GPHemsley>
based on your description, it seems to be ISO-8859-3

[18:01:03.0000] <GPHemsley>
(-2 would be accented letters, -5 would be Cyrllic)

[18:01:10.0000] <GPHemsley>
s/letters/Latin/

[18:01:18.0000] <GPHemsley>
utf-8 would be Japanese

[18:01:44.0000] <GPHemsley>
Cyrillic, that is

[18:01:53.0000] <GPHemsley>
(for -5)

[18:03:10.0000] <GPHemsley>
JonathanNeal: How does IE treat this? http://whatwg.gphemsley.org/tests/mimesniff/sniffing.php?ct=text/xml%20plain

[18:03:13.0000] <boogyman>
GPHemsley: IE10 wants to open the file

[18:03:24.0000] <JonathanNeal>
Just a moment.

[18:03:37.0000] <JonathanNeal>
IE6 wants to open the fie.

[18:03:38.0000] <GPHemsley>
boogyman: Which? web test?

[18:03:38.0000] <JonathanNeal>
*file

[18:04:10.0000] <JonathanNeal>
Same with IE7 and IE8.

[18:04:13.0000] <boogyman>
web test = dl, xml/plain = view source

[18:04:47.0000] <GPHemsley>
boogyman: Does that mean it treats it as XML? (I don't know what that looks like in IE.)

[18:05:46.0000] <boogyman>
seems to believe there's a <pre> around the contents

[18:07:25.0000] <GPHemsley>
ah, like Safari

[18:07:27.0000] <GPHemsley>
gotcha

[18:07:46.0000] <GPHemsley>
boogyman: How does it treat this? http://whatwg.gphemsley.org/tests/mimesniff/sniffing.php?ct=text/whatever

[18:09:02.0000] <boogyman>
http://i44.tinypic.com/auth6b.gif SS

[18:09:11.0000] <boogyman>
text/whatever = dl

[18:10:10.0000] <GPHemsley>
boogyman: What about this? http://whatwg.gphemsley.org/tests/mimesniff/sniffing.php?ct=text/xml%20charset=ISO-8859-3

[18:10:30.0000] <boogyman>
xml tree without styling

[18:10:32.0000] <GPHemsley>
Ah, OK, that looks like XML

[18:10:41.0000] <boogyman>
oops, sorry that's Fx

[18:11:14.0000] <boogyman>
text/xml = <pre> encapsulated

[18:11:27.0000] <GPHemsley>
Hixie: Thanks to you, that link makes Safari do plaintext with an ISO-8859-3 charset ^^

[18:11:43.0000] <GPHemsley>
boogyman: Japanese?

[18:11:51.0000] <boogyman>
yup

[18:11:52.0000] <GPHemsley>
k

[18:12:15.0000] <boogyman>
well, i assume the characters are japanese

[18:12:29.0000] <boogyman>
文書の etc.

[18:12:40.0000] <GPHemsley>
yeah, if it looks Japanese, assume it is

[18:12:53.0000] <GPHemsley>
(I know what the other encodings that I'm giving you look like)

[18:13:00.0000] <GPHemsley>
(and they don't look like Japanese)

[18:13:35.0000] <GPHemsley>
-3 has unknown characters, -2 has accented Latin, -5 has Cyrillic

[18:13:38.0000] <GPHemsley>
and utf-8 is Japanese

[18:16:37.0000] <GPHemsley>
boogyman: What about this? http://whatwg.gphemsley.org/tests/mimesniff/sniffing.php?ct=text/xml;charset=%22

[18:17:21.0000] <boogyman>
<pre> with Japanese characters

[18:17:38.0000] <GPHemsley>
and this? http://whatwg.gphemsley.org/tests/mimesniff/sniffing.php?ct=text/xml;charset=%22;charset=ISO-8859-3

[18:17:55.0000] <boogyman>
same

[18:18:08.0000] <GPHemsley>
and this <pre> differs from what you showed in the screenshot?

[18:19:16.0000] <boogyman>
the </body> is inline, opposed to the screenshot where it's on a new line

[18:22:34.0000] <GPHemsley>
does it get colored?

[18:25:01.0000] <boogyman>
is what colored?

[18:27:44.0000] <GPHemsley>
what you're calling <pre>

[18:28:04.0000] <GPHemsley>
(the screenshot you showed me is colored, and represents an XML parsing)

[18:28:40.0000] <boogyman>
correct, all markup like tags are colored

[18:29:46.0000] <GPHemsley>
ah, ok, then that's XML

[18:30:57.0000] <boogyman>
ah

[18:31:46.0000] <boogyman>
okay, then substitute all <pre> remarks with xml representations

[18:36:48.0000] <MikeSmith>
so, looking at http://mathiasbynens.be/notes/safari-reader , the Reader-ifiable requirements that matjas reverse-engineered and describes there seem pretty arbitrary and some even bizarre

[18:39:33.0000] <MikeSmith>
e.g., "Every paragraph should have at least 100 characters."

[18:41:45.0000] <MikeSmith>
" Readability then loops through all these ‘paragraphs’ and assigns a score to them based on how ‘content-y’ they look. This score is determined by things like the number of commas, class names used in the markup, etc."

[18:42:16.0000] <MikeSmith>
the number of commas?

[18:45:52.0000] <TabAtkins>
zcorpan: How much bridge text needs to exist between the Syntax spec and the CSSOM?  That is, what do you need me to define about how to produce a CSSOM tree from a "stylesheet" as produced by the Syntax spec?

[18:47:28.0000] <GPHemsley>
TabAtkins: Did you see my suggestion about re-registering text/css?

[18:47:43.0000] <TabAtkins>
GPHemsley: Yeah.  What would I need to do?

[18:48:43.0000] <GPHemsley>
TabAtkins: Follow the instructions here: http://tools.ietf.org/html/rfc6838

[18:49:11.0000] <GPHemsley>
(Like HTML, etc., include a registration form in the spec and let IANA know about it.)

[18:49:36.0000] <TabAtkins>
kk

[18:49:48.0000] <GPHemsley>
(section 4 down)

[19:02:57.0000] <JonathanNeal>
MikeSmith: yea, it's pretty bad.

[19:08:05.0000] <MikeSmith>
Hixie: I think maybe the validator.nu/Mozilla HTML parser wasn't up-to-date yet with the current HTML spec for <menuitem> anyway, but instead parsed it per the way Mozilla had unilaterally implemented it before you actually specced it

[19:10:13.0000] <MikeSmith>
hsivonen: I wonder if you've noticed in difference in load on bugzilla.validator.nu/html5.validator.nu now that the HTML4+Schematron stuff is no longer happening

[19:50:09.0000] <GPHemsley>
Feedback welcome: http://mimesniff.spec.whatwg.org/#parse-a-mime-type

[20:37:15.0000] <MikeSmith>
GPHemsley: nice

[20:38:57.0000] <MikeSmith>
GPHemsley: "whitespace character" is as defined in the HTML spec?

[20:46:50.0000] <SimonSapin>
GPHemsley: do you expect this to be used for data: URLs?

[20:49:45.0000] <SimonSapin>
I suppose we could do the percent-decoding before calling this algorithm, and not worry too much about it

[20:50:27.0000] <SimonSapin>
Assume that there isn’t much content that does funny percent-encoding of MIME delimiters in their data: URLs

[21:54:14.0000] <kochi>
MikeSmith: ping?

[21:57:23.0000] <MikeSmith>
kochi: here now

[21:57:30.0000] <MikeSmith>
got your message

[21:57:38.0000] <MikeSmith>
lemme change the assignee now

[21:57:41.0000] <MikeSmith>
one minute

[21:58:05.0000] <MikeSmith>
kochi: btw I been in Matsumoto this week

[21:58:16.0000] <MikeSmith>
I'll be back in Tokyo on Saturday

[21:59:54.0000] <MikeSmith>
kochi: OK, changed the default assignee now

[22:00:07.0000] <kochi>
MikeSmith: thanks!

[22:00:27.0000] <MikeSmith>
cheers

[22:00:30.0000] <kochi>
and one question: one of my colleagues want to have a write access to shadow DOM spec. who to consult?

[22:00:35.0000] <MikeSmith>
me

[22:00:50.0000] <MikeSmith>
is that colleague a member of the WebApps WG already?

[22:00:52.0000] <kochi>
ok, i'll let him contact you.

[22:01:18.0000] <kochi>
maybe not.  I'll forward what I did to join WG.

[22:01:19.0000] <MikeSmith>
every member of the WebApps WG has push access to that spec

[22:01:29.0000] <MikeSmith>
but I can add people manually too

[22:01:52.0000] <MikeSmith>
so just e-mail the info if you want me to add somebody

[22:01:54.0000] <kochi>
I see.  I remember I got approval to join WG by TV Raman, but you can also do, right?

[22:02:01.0000] <MikeSmith>
yeah

[22:02:08.0000] <kochi>
i see

[22:02:24.0000] <MikeSmith>
but the person at least needs to have a W3C account/username already

[22:02:25.0000] <kochi>
btw, are you working there in Matsumoto?

[22:02:50.0000] <kochi>
is a W3C account/username different from W3C bugzilla account?

[22:03:30.0000] <MikeSmith>
yeah, they are two different accounts

[22:03:38.0000] <MikeSmith>
and yeah I am working here in Matsumoto]

[22:04:02.0000] <kochi>
heh, but enjoy staying there!

[22:05:40.0000] <kochi>
MikeSmith: btw, you may find *him* in http://dena.com/recruit/students/internship/techstudig2013.html

[22:06:21.0000] <JonathanNeal>
Sometimes I look at the sectioning elements in print, and I just about give up http://desktoppub.about.com/od/newsletters/a/newsletter_part.htm

[22:15:45.0000] <JonathanNeal>
The anatomy of an <hgroup> in print seems to be: Headline, the H1. Kicker, the H2 coming before the H1, Hammer/Slammer, the H2 coming before the H1, but styled larger, Hammer being block, Slammer being inline. Deck, the H2 coming after the H1 (or the P in a SUBLINE).

[22:20:28.0000] <kochi>
MikeSmith: According to http://www.w3.org/Consortium/activities DOM working group is no longer active, usually DOM related issue is handled in WebApps WG?

[22:21:01.0000] <kochi>
I know www-dom ML is good place to discuss any DOM issues, though

[22:22:00.0000] <kochi>
mm, http://www.w3.org/DOM/Activity has the answer to that.

[22:25:17.0000] <zewt>
the web died a horrible death the day it allowed pages to play audio without asking permission from the user

[22:25:34.0000] <zewt>
murderous raging hatred

[22:36:04.0000] <JonathanNeal>
zewt: when was this? 1996?

[23:11:58.0000] <MikeSmith>
kochi: yeah WebApps WG is where DOM-related work is now

[23:12:42.0000] <MikeSmith>
kochi: (sorry for delay in replying -- I stepped away for a bit)

[23:17:17.0000] <kochi>
MikeSmith: np, thanks!

[00:42:07.0000] <hsivonen>
MikeSmith: I deployed earlier this week. Let's see how it goes

[01:04:15.0000] <zcorpan>
TabAtkins: i haven't looked into hooking in to css-syntax yet. however, my hunch is that you can use abstract concepts like "declaration" and i can hook into that from cssom

[01:06:53.0000] <darobin>
mounir: I got replies from the GitHub team, they're on the issue

[01:08:32.0000] <SimonSapin1>
zcorpan: Syntax defines things like "A declaration has a name, a value which consits of a list of component values, and an "important" flag."

[01:08:51.0000] <zcorpan>
SimonSapin: yeah

[01:09:56.0000] <zcorpan>
so the text in the beginning saying that the output is a CSSOM tree seems like a lie, since it's not defined in terms of CSSOM objects

[01:10:59.0000] <SimonSapin>
yeah, I sent a comment that maybe Syntax should not mention CSSOM at all

[01:12:45.0000] <zcorpan>
if we need to keep CSSCharsetRule for compat, css-syntax needs to have an object for it in its output

[01:14:21.0000] <SimonSapin>
it does, "parse a stylesheet" will have a corresponding at-rule in the list of rules it returns

[01:15:07.0000] <SimonSapin>
although this parsed at-rule does nothing, so I’m still convinced that it shouldn’t appear in the OM

[01:19:09.0000] <zcorpan>
ah, right, i thought it was stepped over after sniffing it or some such

[01:22:49.0000] <annevk>
the parser should build CSSOM objects I think

[01:25:11.0000] <kochi>
MikeSmith: We got a comment from Microsoft about IME API spec, and the comment included recommendation for whatwg inputmode attribute.

[01:25:25.0000] <zcorpan>
there are several ways we can define things. either css-syntax is the central place where all css features are listed (it would need to be aware of the features to generate the right CSSOM objects instead of generic objects like now)

[01:25:45.0000] <kochi>
MikeSmith: where is it best to discuss inputmode spec?

[01:25:45.0000] <zcorpan>
or CSSOM is the central place that is aware of all css features

[01:26:25.0000] <zcorpan>
or it's distributed across all the specs that define the relevant feature to say what CSSOM object it maps to (and maybe define the CSSOM interface, too)

[01:26:38.0000] <Ms2ger>
Mm, DE

[01:26:41.0000] <zcorpan>
or a combination of these

[01:27:26.0000] <zcorpan>
in HTML, the DOM interface of an element is defined where the element is defined, and the parser is aware of the element if it needs special parsing

[01:28:05.0000] <zcorpan>
CSS doesn't need special parsing though

[01:29:44.0000] <Ms2ger>
I'd say it doesn't make sense to implement the interface without the feature or the other way around, so it makes more sense to define them together

[01:29:53.0000] <zcorpan>
yeah

[01:32:59.0000] <MikeSmith>
hsivonen: OK, great

[01:33:53.0000] <MikeSmith>
kochi: a good place to discuss inputmode is on the whatwg mailing list

[02:06:08.0000] <mounir>
darobin: good news

[02:06:21.0000] <mounir>
though, I will have no more excuse to slack :(

[02:08:03.0000] <asmodai>
So I was working on some Selenium tests and noticed that I had tests working for Chrome/Firefox, yet failing for PhantomJS. Tracked it down to doing a (mistaken I think) get_attribute('label') call on an option element. FF en Chrome gave back what the visible text would be. PJS gave an empty string. Did I manage to grab an UA-internal attribute for the element in the case of FF/Chrome?

[02:19:48.0000] <darobin>
mounir: they haven't fixed it just yet, so enjoy the slacking while you can!

[02:33:53.0000] <asmodai>
Interesting, fiddling with some JavaScript myself on the same element gives me only id, value, selected. Wonder if Web Driver gets some additional information from the browser with the getElementAttribute() call.

[02:44:16.0000] <kochi>
MikeSmith: thanks!  i was away.

[03:13:02.0000] <andyjpb>
hi peeps

[03:13:08.0000] <andyjpb>
I'm looking at http://wiki.whatwg.org/wiki/IRC

[03:13:26.0000] <andyjpb>
what is the rationale for this not being an HTTP header like the other cross origin policy stuff?

[03:14:27.0000] <jgraham>
Wrong link?

[03:14:28.0000] <tomasf>
IRC being an HTTP header?

[03:15:01.0000] <andyjpb>
oops

[03:15:07.0000] <andyjpb>
http://wiki.whatwg.org/wiki/Meta_referrer

[03:17:01.0000] <jgraham>
abarth: ^

[03:17:15.0000] <jgraham>
(I guess he is asleep though)

[03:17:35.0000] <jgraham>
(so you might want to wait 6 hours or so)

[03:17:46.0000] <andyjpb>
It's ok.. I have all day

[03:17:47.0000] <andyjpb>
;-)

[03:18:27.0000] <jgraham>
One common reason for preferring meta over http headers is that they are relatively easy to add

[03:19:27.0000] <andyjpb>
...or forget to add ;-)

[05:06:10.0000] <darobin>
MikeSmith: were you involved in setting up some of the test media files like http://media.w3.org/2010/05/sound/sound_5 ?

[05:10:21.0000] <Ms2ger>
darobin, that was plh

[05:10:30.0000] <darobin>
Ms2ger: ah, ok, thanks

[05:10:50.0000] <Ms2ger>
http://www.w3.org/mid/1273815461.31439.19.camel@chacal

[05:11:13.0000] <darobin>
thanks, that's helpful

[05:11:17.0000] <Ms2ger>
Np

[05:11:29.0000] <darobin>
one of those is 160MB — I'm not entirely convinced we need that :)

[05:13:03.0000] <jgraham>
Sometimes having large resources can be helpful for certain tests

[05:13:15.0000] <jgraham>
It's always nice if they aren't large static files though

[05:13:49.0000] <jgraham>
Need a bot here that can give messages when people reconnect

[05:18:08.0000] <darobin>
do you know what the examples directory is for at the root of the test repo?

[05:18:25.0000] <darobin>
because the big file is only needed for that

[05:18:41.0000] <jgraham>
Ask plh

[05:18:43.0000] <Ms2ger>
Nothing

[05:19:05.0000] <jgraham>
Although I think Ms2ger's answer is correct

[05:19:53.0000] <jgraham>
Pretty sure only plh has added stuff there, and that if he wants to continue his idea of having a collection of examples it should go elsewhere

[05:23:30.0000] <darobin>
ok, thanks

[05:23:39.0000] <darobin>
because most of the big files are referenced from there

[05:23:43.0000] <darobin>
so I'll just ignore those

[05:29:06.0000] <MikeSmith>
darobin: was not involved in setting those up

[05:30:36.0000] <darobin>
MikeSmith: thanks, Ms2ger traced it to plh for me

[05:31:07.0000] <MikeSmith>
ah ok

[05:35:55.0000] <darobin>
mmmm

[05:36:13.0000] <darobin>
I wonder if I should've used the submission/ prefix for these PRs, even though they're not submissions

[05:36:33.0000] <darobin>
anyway: I just made PRs to 1) add a license, and 2) switch the media to local

[06:41:43.0000] <asmodai>
After some confusion on my part earlier today, I found out that it seems PhantomJS doesn't adhere to the specs (unless I still misunderstood things): https://github.com/ariya/phantomjs/issues/11365

[06:42:52.0000] <SimonSapin>
How related are W3C document licensing and the patent policy? https://lists.w3.org/Archives/Member/w3c-ac-forum/2013AprJun/0267.html (Member only link, sorry)

[06:44:49.0000] <SimonSapin>
can’t we have both open licensing and and patent policy?

[06:44:52.0000] <annevk>
read the reply

[06:46:30.0000] <hsivonen>
I’m [redacted] that [redacted] [redacted] [redacted] in the Member space of the W3C.

[06:46:54.0000] <asmodai>
lol

[06:49:36.0000] <SimonSapin>
damn, I fell right into the FUD

[06:52:10.0000] <annevk>
@w3cwtf tweeting it should give you a hint too

[06:52:24.0000] <SimonSapin>
yeah

[06:54:33.0000] <darobin>
SimonSapin: you're not the only one who thinks there may be something fishy with that argument :)

[06:56:30.0000] <SimonSapin>
one more reason I’m glad I picked this side

[07:03:20.0000] <jgraham>
Member space is good for giving a nice place to post the crazy without being ridiculed in public

[07:04:48.0000] <Ms2ger>
That's not exactly accurate

[07:04:53.0000] <Ms2ger>
We still ridicule in public

[07:05:50.0000] <SimonSapin>
by the way, who’s behind @w3cwtf?

[07:06:01.0000] <Ms2ger>
No comment

[07:06:27.0000] <SimonSapin>
that was quick :)

[07:15:47.0000] <GPHemsley>
MikeSmith: I haven't yet decided how to define "whitespace character" because I haven't decided whether to treat the MIME type as a byte sequence or a string of characters.

[07:16:11.0000] <GPHemsley>
SimonSapin: The intention is to use it anywhere that MIME types appear. I have to add the caveat that protocol-specific handling would have to be done first.

[07:20:47.0000] <gsnedders>
Hixie: thx for like actually mentioning this (at some point I'm gonna have to sit down and make sure we actually match the spec in html5lib…)

[07:20:53.0000] <gsnedders>
Hixie: And that's going to be painful.

[07:23:19.0000] <jgraham>
gsnedders: BTW asserting that all tag names/attribute names/values are strings in the treewalker broke stuff

[07:23:31.0000] <jgraham>
Well, broke end users

[07:23:51.0000] <jgraham>
s/strings/unicode/

[07:24:21.0000] <jgraham>
Because they would parse a tree, do something like document.body.appendChild(document.createElement("foo"))

[07:24:34.0000] <jgraham>
and then the document wouldn't serialize

[07:27:59.0000] <gsnedders>
jgraham: So I guess we just need to rely on implicit unicode conversion there, lovely.

[07:28:35.0000] <darobin>
yay baby fucking yay!

[07:28:37.0000] <darobin>
\o/

[07:28:42.0000] <darobin>
/me solved the PHP configuration problem

[07:29:25.0000] <Ms2ger>
Are you sure?

[07:29:30.0000] <darobin>
turns out that Debian adds its own layer of fuckedupness atop the ample doses of moronitude provided by Apache and PHP

[07:29:49.0000] <darobin>
Ms2ger: not in general, just for w3c-test.org

[07:30:35.0000] <darobin>
well, that's just hour upon hour of my life that I'm not getting back

[07:45:10.0000] <gsnedders>
jgraham: So the question is then how do we decode everything to unicode using the default encoding on Python 2 and raise TypeError on Python 3 without ugly hacks.

[07:45:26.0000] <gsnedders>
/me wonders if u"" + u"abc" causes an allocation

[08:01:49.0000] <mounir>
kochi: ping

[08:36:40.0000] <GPHemsley>
Anyone have IE handy?

[08:36:48.0000] <GPHemsley>
http://whatwg.gphemsley.org/tests/mimesniff/sniffing.php?ct=text/xml;%22=;charset=iso-8859-3%20%22=iso-8859-5

[08:37:38.0000] <JonathanNeal>
At least User Agent Strings are starting to calm down… not

[08:37:39.0000] <JonathanNeal>
Mozilla/5.0 (Macintosh; Intel Mac OS X 10_8_3) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/28.0.1500.20 Safari/537.36  OPR/15.0.1147.18 (Edition Next)

[08:38:28.0000] <GPHemsley>
JonathanNeal: You always seem to appear right after I say something that might be relevant to you

[08:38:43.0000] <GPHemsley>
(in this case, it's another IE request)

[08:38:48.0000] <JonathanNeal>
Go for it.

[08:38:51.0000] <GPHemsley>
http://whatwg.gphemsley.org/tests/mimesniff/sniffing.php?ct=text/xml;%22=;charset=iso-8859-3%20%22=iso-8859-5

[08:40:01.0000] <SimonSapin>
fwiw, I found http://www.modern.ie/en-us/virtualization-tools#downloads pretty strig

[08:40:07.0000] <SimonSapin>
pretty straightforward

[08:40:18.0000] <JonathanNeal>
Okay, in Chrome it appears like an xml doc, text/xml. Same in IE6,7,8, except the Japanese is just squares.

[08:40:45.0000] <zewt>
jeez, google can be outright disgraceful sometimes

[08:41:09.0000] <GPHemsley>
SimonSapin: Yeah, I'm looking at that now, actually. I'll get it set up eventually :P

[08:41:29.0000] <zewt>
code.google.com/p/android/issues/detail?id=10076 "can you document this?" closed by design "but can you document this?" two years later "hey guys this is still not documented can you document it" their solution: ticket flagged to not allow comments

[08:41:58.0000] <zewt>
problem solved!

[08:42:11.0000] <GPHemsley>
JonathanNeal: It's that square thing that I'm interested in. That suggests it uses -3.

[08:42:27.0000] <GPHemsley>
Which makes my life more difficult

[08:42:29.0000] <GPHemsley>
perhaps

[08:43:55.0000] <GPHemsley>
JonathanNeal: What about this? http://whatwg.gphemsley.org/tests/mimesniff/sniffing.php?ct=text/xml;%22charset%22=iso-8859-3

[08:44:15.0000] <JonathanNeal>
Little squares.

[08:44:18.0000] <JonathanNeal>
Almost every time I see little squares.

[08:44:37.0000] <JonathanNeal>
(almost every time you share one of these links)

[08:45:04.0000] <GPHemsley>
squares means it's using iso-8859-3 encoding

[08:45:16.0000] <GPHemsley>
(-5 would be Cyrillic characters)

[08:45:35.0000] <GPHemsley>
that's intriguing

[08:45:40.0000] <GPHemsley>
in this case

[08:47:45.0000] <GPHemsley>
JonathanNeal: and this? http://whatwg.gphemsley.org/tests/mimesniff/sniffing.php?ct=text/xml;%22charset=iso-8859-3

[08:49:53.0000] <SteveF>
JonathanNeal: http://lists.w3.org/Archives/Public/public-html/2013May/0164.html

[08:51:42.0000] <GPHemsley>
/me happens to think that <hgroup> and <subline> can coexist

[08:52:32.0000] <JonathanNeal>
Checking

[08:52:35.0000] <GPHemsley>
For example, <subline> could also be associated with an <hgroup>

[08:53:05.0000] <GPHemsley>
Hixie: I wonder if you should treat singleton headers as having an implicit hgroup, barring explicit ones?

[08:53:13.0000] <JonathanNeal>
IE6-8, little squares.

[08:53:22.0000] <GPHemsley>
s/barring/except when there are/

[08:53:24.0000] <JonathanNeal>
Wish there was a control so I could see something other than squares.

[08:53:38.0000] <GPHemsley>
The squares are replacement/missing characters

[08:53:48.0000] <GPHemsley>
if you want, change -3 to -5

[08:53:54.0000] <GPHemsley>
then you'll get Cyrillic

[08:57:23.0000] <JonathanNeal>
Nice, SteveF!

[09:00:00.0000] <JonathanNeal>
In traditional news print, there were at least four different ways of marking up the elements of a header. http://i.imgur.com/jwcBObk.png I am glad to see the web normalizing these, based on content rather than appearance.

[09:00:03.0000] <GPHemsley>
oh wow, this IE virtualization is pretty neat

[09:05:20.0000] <GPHemsley>
JonathanNeal: Oh, apparently I was wrong. In this case, the squares mean utf-8

[09:09:01.0000] <Hixie>
MikeSmith: 0.89% for 8000 pages vs 1%-10% for 1-10 billion pages is well within the margin of error for the former, so that is quite consistent data.

[09:10:18.0000] <Hixie>
MikeSmith: makes sense (re <menuitem>)

[09:11:30.0000] <JonathanNeal>
SteveF: what does zero or more div/p elements mean?

[09:12:13.0000] <Hixie>
GPHemsley: not sure what you mean re implicit <hgroup>

[09:12:44.0000] <JonathanNeal>
I can't say I've seen a restriction on the content of an element like that.

[09:12:51.0000] <Hixie>
JonathanNeal: what kind of content goes in each of those parts of the header?

[09:13:20.0000] <GPHemsley>
Hixie: If any occurrence of a <hN> occurs outside of an explicit <hgroup>, assume an implicit <hgroup> around it

[09:13:28.0000] <GPHemsley>
Hixie: Then <subline> can be associated with an hgroup

[09:13:29.0000] <Hixie>
JonathanNeal: (btw, the spec tries to distinguish between "header" and "heading", where the former is a variety of things including navigation, and the latter is specifically what should appear in the table of contents)

[09:13:41.0000] <Hixie>
GPHemsley: not sure what you mean by "assume an implicit"

[09:13:52.0000] <GPHemsley>
Hixie: Like if <tbody> is missing, for example

[09:13:57.0000] <Hixie>
oh in the parser?

[09:14:00.0000] <JonathanNeal>
Hixie: googling any of those key words usually brings up one or another example, http://desktoppub.about.com/od/newsletters/a/newsletter_part.htm http://www.uiowa.edu/~c019136/136s5online17/hedjargon.html http://behindbylines.wordpress.com/2013/02/13/journalist-lingo-confusion-cleared/

[09:14:01.0000] <GPHemsley>
sure

[09:14:05.0000] <Hixie>
that's a non-starter, we'd break a ton of the Web

[09:14:15.0000] <Hixie>
lots of CSS assumes there's no <hgroup> there

[09:14:49.0000] <GPHemsley>
is tbody explicitly exposed to the styling when it's not there?

[09:15:04.0000] <JonathanNeal>
GPHemsley: I think so, yes?

[09:15:11.0000] <GPHemsley>
oh, hm

[09:15:12.0000] <Hixie>
GPHemsley: it's in the DOM, so yes

[09:15:12.0000] <GPHemsley>
m

[09:16:14.0000] <Hixie>
JonathanNeal: are "hammer" and "slammer" the same thing, or two things?

[09:17:31.0000] <JonathanNeal>
Hixie: much like early HTML, the names are synonymous with their styling.

[09:18:17.0000] <JonathanNeal>
kicker is before and diminutive.

[09:19:10.0000] <JonathanNeal>
rather, kicker is before and lesser in importance than the headline.

[09:19:23.0000] <JonathanNeal>
hammer is before and stronger in importance than the headline. e.g kicker is small and hammer is big.

[09:19:37.0000] <JonathanNeal>
Slammer is before and stronger in importance, but inline with the headline.

[09:19:50.0000] <Hixie>
are there web sites styled this way i could look at?

[09:19:54.0000] <Hixie>
all these examples seem to be about print

[09:20:17.0000] <Hixie>
cnn for example doesn't seem to use this style

[09:20:23.0000] <JonathanNeal>
Exactly, my original point was that I'm glad the web has normalized these. However, probably due to the original constraints of the web, most of these ceased to exist online.

[09:20:23.0000] <Hixie>
it's more <hgroup>-like

[09:20:24.0000] <Ms2ger>
/me wonders if Hixie meant these slammers: http://derek.broox.com/photo/closet-cleaning/full/11163/pog-slammers.jpg

[09:20:30.0000] <JonathanNeal>
The deck is about the only thing that survives.

[09:20:39.0000] <JonathanNeal>
And I've seen it mislabeled as a byline, by Twitter Bootstrap for instance.

[09:21:00.0000] <Hixie>
the deck isn't part of the heading, it's just a paragraph

[09:21:03.0000] <Hixie>
can be part of the header

[09:21:06.0000] <Hixie>
but that's a separate issue

[09:21:07.0000] <JonathanNeal>
The deck is what we think of as the hgroup's h2-6, or the subline.

[09:21:38.0000] <Hixie>
oh? in http://www.cnn.com/interactive/2013/05/us/sutter-walk-oklahoma/ what would you say is the deck?

[09:21:42.0000] <JonathanNeal>
The deck isn't necessarily a paragraph, it can be just a part of a sentence.

[09:21:45.0000] <Hixie>
oh, wait, i'm confusing the deck and the lede

[09:22:14.0000] <Hixie>
yeah the deck is just the h2 in the hgroup

[09:22:40.0000] <JonathanNeal>
In your example, according to traditional print, the <h2> is the heading.

[09:23:24.0000] <Hixie>
both the h1 and the h2 are the heading

[09:23:32.0000] <Hixie>
that page is actually a perfect example of what hgroup was designed for

[09:23:36.0000] <Hixie>
it perfectly wraps the h1/h2

[09:23:37.0000] <JonathanNeal>
But the <h2> could also be the deck. It would be contextual with the styling of the newspaper as a whole. As writers who care about the meaning regardless of style, we're left to guess.

[09:24:32.0000] <Hixie>
imho <hgroup> is quite well-designed -- it fits right into how authors actually write pages today, it just paves a cowpath

[09:24:39.0000] <Hixie>
i don't understand why it's controversial

[09:24:59.0000] <JonathanNeal>
Based on the source, "Walking the path of a tornado" is the headline. Based on appearance and print tradition, "A journey into the heart of a 17-mile storm" is the heading.

[09:25:06.0000] <JonathanNeal>
*headline

[09:25:10.0000] <Hixie>
they're both the heading

[09:25:31.0000] <JonathanNeal>
Yes, they are.

[09:25:57.0000] <JonathanNeal>
A deck is also a headline.

[09:26:18.0000] <Hixie>
anyway, gotta head out, meeting. bbiab.

[09:26:38.0000] <Hixie>
if someone could explain why hgroup is controversial while i'm away, please do, i'll read the scrollback :-)

[09:26:41.0000] <JonathanNeal>
But on the web, we've tried to learn from and distinguish content better than print.

[09:27:26.0000] <JonathanNeal>
Hixie: I would say http://www.w3.org/html/wg/wiki/ChangeProposals/hgroup does a pretty good job.

[09:48:55.0000] <annevk>
Hixie: btw, you're behind in commits, @WHATWG has more followers than you have commits these days

[09:49:13.0000] <GPHemsley>
(isn't that kind of the goal?)

[09:50:10.0000] <annevk>
only take me serious when needed GPHemsley :p

[09:52:35.0000] <GPHemsley>
hgroup has structural semantics, subline has content semantics

[09:53:01.0000] <GPHemsley>
I'm telling you, they're different things

[10:09:36.0000] <JonathanNeal>
Another good example of headline elements in print http://www.tameri.com/dtp/elements.html

[10:12:34.0000] <GPHemsley>
I would argue the CNN article mentioned earlier should use <hgroup>

[10:13:51.0000] <GPHemsley>
when it comes to a news article, <hN> and <hgroup> should be in headlinese

[10:14:06.0000] <GPHemsley>
<subline> should be in full sentences

[10:15:03.0000] <GPHemsley>
<hgroup> should be used if you could alternatively put a colon between the headers

[10:15:14.0000] <GPHemsley>
s/headers/<hN>s/

[10:15:39.0000] <GPHemsley>
So, for the CNN article, "Walking the path of a tornado: A journey into the heart of a 17-mile storm"

[10:16:08.0000] <JonathanNeal>
We're both trying to distinguish content from the body of an article / section / page, right?

[10:17:36.0000] <JonathanNeal>
If you've got a moment, GPHemsley, I want to get us on the same page, and then work from there.

[10:17:41.0000] <GPHemsley>
abstractly, yes

[10:19:32.0000] <GPHemsley>
we're trying to put the right content into the right buckets

[10:36:33.0000] <GPHemsley>
http://i.imgur.com/5vsMypV.jpg

[10:37:38.0000] <GPHemsley>
<subline> is better for those

[10:39:22.0000] <GPHemsley>
subline p:first-child { font-weight: bolder; }

[10:41:21.0000] <GPHemsley>
<subline> is like a pseudo-hgroup; it's a header that's not a header

[10:41:42.0000] <GPHemsley>
(maybe use it for pull quotes, too)

[10:42:20.0000] <TabAtkins>
zcorpan: Okay, cool, I'll remove mentions of CSSOM.

[10:43:02.0000] <TabAtkins>
SimonSapin: Syntax could remove the @charset rule from the input stream if necessary.

[10:43:22.0000] <GPHemsley>
hmm... actually, this paper only uses bold on the first one if there's more than one

[10:43:27.0000] <GPHemsley>
I wonder how you could style that...

[10:45:07.0000] <GPHemsley>
(it's almost as if it's the header of the subline...)

[10:46:03.0000] <GPHemsley>
oh, maybe subline > header

[10:46:14.0000] <GPHemsley>
though that's less automated

[10:46:35.0000] <GPHemsley>
SteveF: Thoughts?

[10:47:21.0000] <SteveF>
GPHemsley: not a lot at the mo, am reading in between wrangling kids and preparing dinner

[10:47:40.0000] <GPHemsley>
/me wonders why extensions refer specifically to HTML5 when they plan to be versioned separately (or won't make it into HTML5.0)

[10:47:51.0000] <GPHemsley>
SteveF: Ah, OK; wasn't sure you were here

[10:49:29.0000] <SteveF>
GPHemsley: yeah here lurking

[10:49:54.0000] <GPHemsley>
SteveF: In particular, I think your Dr. Strangelove examples should actually use hgroup too

[10:50:29.0000] <GPHemsley>
because "Or: How I Learned to Stop Worrying and Love the Bomb" is most certainly part of the title

[10:52:15.0000] <SteveF>
GPHemsley: the why  not use a single hx?

[10:52:31.0000] <GPHemsley>
Because it's a secondary part of the title

[10:54:30.0000] <SteveF>
GPhemsley: I can do the same with a span and display:block in h1

[10:54:48.0000] <GPHemsley>
http://pastebin.mozilla.org/2458800

[10:55:03.0000] <GPHemsley>
but that doesn't give it semantic substance

[10:56:53.0000] <GPHemsley>
JonathanNeal: Thoughts?

[10:57:19.0000] <JonathanNeal>
I like it. I'm writing up something similar, myself.

[10:59:36.0000] <GPHemsley>
You should be able to remove all <subline> elements from an <article> and still be able to comprehend the contents

[10:59:40.0000] <GPHemsley>
I think

[11:00:08.0000] <GPHemsley>
you can't do that for <hN> or <hgroup>

[11:00:39.0000] <SteveF>
GPhemsley: this is what is supposed to be convyed to assitive tech http://pastebin.mozilla.org/2458803 don't see any differentiation there

[11:01:07.0000] <SteveF>
GPHemsley: as per the implementation pushed by hixie

[11:01:08.0000] <GPHemsley>
Is that so? Because that's not what I would expect

[11:01:28.0000] <SteveF>
GPhemsley:what would you expect?

[11:02:15.0000] <GPHemsley>
To me, <hgroup> means "these headings all refer to the same section", not "these are all the same heading"

[11:03:09.0000] <SteveF>
GPhemsley: thats not how the acc layer is specced

[11:03:21.0000] <GPHemsley>
well, then perhaps that is the problem, Hixie?

[11:03:44.0000] <GPHemsley>
/me wonders how long the meeting is

[11:04:42.0000] <GPHemsley>
normally, a new <hN> element implicitly creates a new section

[11:04:50.0000] <GPHemsley>
<hgroup> prevents that from happening

[11:05:03.0000] <GPHemsley>
at least, according to my intuitive understanding

[11:05:28.0000] <GPHemsley>
it doesn't make any heading level any different from what it is stated as

[11:06:13.0000] <GPHemsley>
like I said earlier, it should be treated like a colon separator

[11:07:11.0000] <GPHemsley>
(the Strangelove example is a little different, since it explicitly uses "or", but still)

[11:08:49.0000] <SteveF>
GPHemsley: "HGROUP elements are essentially equivalent to headings that contain multiple "paragraphs" (in the sense defined in the HTML specification). They should be conveyed as such to accessibility tools. This means setting the "heading" role on the HGROUP element, and treating the Hx elements in the HGROUP element the same way as paragraphs are treated normally. " http://wiki.whatwg.org/wiki/C

[11:08:50.0000] <SteveF>
hange_Proposal_for_ISSUE-129#Bug_10592:_Request_regarding_the_ARIA_role_of_heading_elements_inside_HGROUP_elements

[11:09:19.0000] <JonathanNeal>
Here's my mud to the mix. https://gist.github.com/jonathantneal/5672276

[11:09:20.0000] <GPHemsley>
ah, hmm

[11:09:21.0000] <SteveF>
GPHemsley: from horses mouth

[11:09:50.0000] <SteveF>
anyway sorry gotta go for real witll read scrollback

[11:10:05.0000] <SteveF>
laters

[11:11:59.0000] <GPHemsley>
JonathanNeal: I think the kicker/hammer/slammer concept is a bit complex

[11:12:12.0000] <GPHemsley>
I'm also not sure whether bylines should go in <subline>

[11:12:38.0000] <GPHemsley>
(and I'm also not sure about having out-of-order <hN>s in <hgroup>)

[11:13:13.0000] <GPHemsley>
so that's about half your document that I'm not sure about :P

[11:14:07.0000] <JonathanNeal>
It's food for thought. I think the limitations of web have created this bias.

[11:14:18.0000] <JonathanNeal>
Just like you might find it weird to have multiple sublines http://prosintraining.com/gateway/wp-content/themes/CherryTruffle/timthumb.php?src=http://prosintraining.com/gateway/wp-content/uploads/2010/03/headline.gif&h=200&w=200&zc=1

[11:15:26.0000] <GPHemsley>
that third one seems like a deck

[11:16:18.0000] <JonathanNeal>
And here's a kicker http://unix.temple.edu/~susanj/design/new/kicker.jpg http://unix.temple.edu/~susanj/design/new/kicker2.jpg

[11:16:39.0000] <JonathanNeal>
and another kicker http://www.osu.edu/assets/brand/unitid-kicker.png

[11:16:48.0000] <JonathanNeal>
Alive and well in print.

[11:17:15.0000] <GPHemsley>
yeah, I'm down with having a kicker

[11:17:22.0000] <GPHemsley>
I just don't know if this is the appropriate place for it

[11:17:28.0000] <JonathanNeal>
But kickers are reverse order <hN>s in an <hgroup>.

[11:17:44.0000] <GPHemsley>
Are they? They seem more like categories to me

[11:18:24.0000] <JonathanNeal>
How would you mark those up? http://desktoppub.about.com/od/glossary/g/Kicker.htm

[11:19:09.0000] <GPHemsley>
well, that's why I said it was more complex — I'm not sure :P

[11:19:29.0000] <GPHemsley>
we could have <supline>

[11:20:00.0000] <GPHemsley>
but we're kind of blurring the line between style and semantics

[11:20:43.0000] <GPHemsley>
keep in mind that one kicker could apply to multiple articles

[11:21:59.0000] <GPHemsley>
(e.g. in "Nation" and "World" sections, where the state/country is in the kicker)

[11:24:04.0000] <TabAtkins>
annevk: What ever happened with the XML5 or MicroXML or Error-Tolerant XML or whatever effort?

[11:24:31.0000] <JonathanNeal>
Looking at the example provided earlier, <hgroup> and/or <subline> answer http://www.cnn.com/interactive/2013/05/us/sutter-walk-oklahoma/ addressing the headings and bylines.

[11:24:49.0000] <Ms2ger>
TabAtkins, nobody cares enough to implement it, I guess

[11:24:50.0000] <TabAtkins>
annevk: Asking because one of our implementors is starting an experiment with just using the HTML parser (in foreign content mode) for standalone SVG, just like SVG-in-HTML currently uses.

[11:25:14.0000] <JonathanNeal>
<hgroup> alone does not, if we think bylines should matter to outline / accessibility.

[11:26:07.0000] <JonathanNeal>
Ha, http://www.concordmonitor.com/readerservices/informationalpages/5618276-95/web-headline

[11:28:09.0000] <GPHemsley>
JonathanNeal: Was that an agreement, then? (I can't tell)

[11:28:53.0000] <JonathanNeal>
I'm not agreeing that we're blurring the line between semantics and style. I'm just referring to the usage of lesser headings that come before main headings.

[11:29:35.0000] <JonathanNeal>
Especially those that catagorize the heading, where it's "beforeness" is clearly there for meaning more than style.

[11:30:06.0000] <GPHemsley>
I'm just not clear on what you mean in reference to the CNN article

[11:30:21.0000] <GPHemsley>
(which has no kicker, AFAICT)

[11:30:43.0000] <Ms2ger>
/me kicks this conversation already

[11:30:48.0000] <GPHemsley>
:)

[11:31:50.0000] <GPHemsley>
JonathanNeal: To me, anything in <hgroup> should be in a document outline; if it shouldn't be in a document outline, then it shouldn't be in <hgroup>

[11:33:22.0000] <JonathanNeal>
Stuff that belongs in <header> but not <hgroup>, yes.

[11:33:36.0000] <JonathanNeal>
I guess a kicker could be a <p> in a <header> above an <h1>

[11:33:49.0000] <GPHemsley>
that sounds relatively reasonable

[11:34:03.0000] <GPHemsley>
(though it certainly loses its semantic value)

[11:34:15.0000] <JonathanNeal>
Exactly, that later part is why I've liked <subline>

[11:34:26.0000] <GPHemsley>
right

[11:35:20.0000] <nimbu>
TabAtkins: pingping

[11:35:39.0000] <JonathanNeal>
Except, I think <subline> should be liberal, so it can address kickers as well as decks. Then again, I also think <hgroup> should be liberal, and accept out of order <hN>, like "Lord of the Rings" and "The Return of the King".

[11:35:45.0000] <GPHemsley>
<header><subline class="kicker">...</subline><hgroup class="headline">...</hgroup><subline class="deck">...</subline></header>

[11:36:05.0000] <GPHemsley>
yeah, perhaps we need a better name than "subline"

[11:36:22.0000] <GPHemsley>
IDK

[11:37:00.0000] <GPHemsley>
JonathanNeal: Also, I'm not necessarily arguing against out-of-order <hN>s in <hgroup>; I was just stating that I don't think they're currently allowed

[11:37:21.0000] <GPHemsley>
your example is a good one

[11:37:23.0000] <GPHemsley>
I suppose

[11:37:37.0000] <GPHemsley>
depending on what you were trying to focus on

[11:47:44.0000] <tantek>
could someone here who is *not* a W3C member / invited expert see if they can access this? https://www.w3.org/2002/09/wbs/33280/html-charter-2013-2/results

[11:48:07.0000] <tantek>
just trying to double-check its W3C member-only-ness

[11:54:20.0000] <svl>
tantek: I get a basic authentication request for "W3CACL" (so can't access it)

[11:56:18.0000] <tantek>
thanks svl - that was what I was wondering.

[12:09:36.0000] <TabAtkins>
nimbu: pomg

[12:10:07.0000] <TabAtkins>
tantek: Just turn on your incognito mode or whatever when you need to check that stuff.

[12:10:42.0000] <tantek>
thanks TabAtkins - good work around - except some IP blocks are whitelisted as from members

[12:10:59.0000] <TabAtkins>
tantek: Oh, interesting.  I didn't know that.

[12:11:06.0000] <tantek>
e.g. for example, *anyone* inside Microsoft's corpnet can access W3C member resources

[12:11:24.0000] <tantek>
wouldn't surprise me if the same thing was true for Google's internal net

[12:11:29.0000] <TabAtkins>
It's not.

[12:11:39.0000] <tantek>
it's also true inside Apple's internal net

[12:12:53.0000] <tantek>
TabAtkins - next time you're at a WG meeting of any sort at a W3C member company, try it out

[12:13:28.0000] <tantek>
suffice it to say, sometimes hosting companies "accidentally" give WG members internal net access, probably trusting them on the honor system

[12:13:38.0000] <tantek>
(and assume all traffic is logged obv)

[12:17:22.0000] <gsnedders>
jgraham: I wonder if we should ask the Bleach guys if they want to maintain the sanitizer…

[12:35:48.0000] <jgraham>
gsnedders: Well the thought had crossed my mind

[12:36:03.0000] <jgraham>
But it doesn't solve the problem that it's fundamentally broken

[12:38:47.0000] <gsnedders>
jgraham: In what way? That it's designed for the tokenizer?

[12:39:58.0000] <jgraham>
That it tries to deal with two different types of input as if they were the samewhen they are not

[12:40:05.0000] <jgraham>
Or "yes"

[12:48:08.0000] <jgraham>
tantek: I thought W3C had stopped doing the ip whitelist thing

[12:51:42.0000] <tantek>
jgraham - really? as of when?

[12:52:27.0000] <jgraham>
Well it stopped working at Opera a couple of years ago iirc

[12:52:52.0000] <jgraham>
Possibly Microsoft are more special, I don't know

[12:58:00.0000] <Hixie>
GPHemsley: that seems to be a print thing. Does that kind of thing happen on the Web?

[12:58:08.0000] <Hixie>
gsnedders: https://www.w3.org/Bugs/Public/show_bug.cgi?id=21308 indicates tests that html5lib needs

[13:06:05.0000] <JonathanNeal>
GPHemsley: http://i.imgur.com/bAueHbF.png

[13:10:17.0000] <Hixie>
<header> <p class="category">Today in WWW</p> <h1> <strong> &lt;h?>: </strong> Why writing headlines is too hard </h1> <p>Unsure of what to use, developers are now fighting over semantics.</p> </header> <p>It was...

[13:14:59.0000] <TabAtkins>
+1

[13:37:11.0000] <tantek>
jgraham - perhaps Opera changed their network provider and someone forgot to tell someone at W3C they had new IP addresses.

[13:37:19.0000] <tantek>
easily could be one of the things that falls through the cracks

[14:04:39.0000] <Hixie>
can someone come up with a case where in the HTML parser, generating a </dd> when you've seen a <dd> and are going through the in-body steps for "dd", will not cause the earlier <dd> to be closed as we hoped before adding foreign content lands?

[14:12:04.0000] <JonathanNeal>
Same with bylines, in the <header>?

[14:13:35.0000] <JonathanNeal>
<h1>The Chronicals of Naria <strong>The Lion, The Witch, and the Wardrobe</strong></h1> ?

[14:13:51.0000] <Hixie>
that one is just an <hgroup>

[14:14:14.0000] <Hixie>
<hgroup> <h1>The Chronicals of Narnia</h1> <h2>The Lion, The Witch, and the Wardrobe</h2> </hgroup>

[14:14:17.0000] <Hixie>
or actually

[14:14:19.0000] <Hixie>
even without the hgroup

[14:14:25.0000] <Hixie>
since it's actually a site header followed by a page header

[14:14:33.0000] <Hixie>
so just  <h1>The Chronicals of Narnia</h1> <h2>The Lion, The Witch, and the Wardrobe</h2>

[14:21:35.0000] <JonathanNeal>
Hixie: it's a category for the heading, but not the main heading.

[14:21:57.0000] <JonathanNeal>
Think, <h2>Flower of the Day</h2><h1>Roses</h1>

[14:26:58.0000] <Hixie>
then <hgroup> <h2>Flower of the Day</h2><h1>Roses</h1></hgroup>, probably?

[14:27:08.0000] <Hixie>
i'm not familiar with that style on the web

[14:29:33.0000] <JonathanNeal>
Interesting, does the <header> accomplish the same thing as <hgroup> or is HGTV getting it a little off? http://www.hgtvgardens.com/perennials/flower-of-the-day-delphinium

[14:29:53.0000] <TabAtkins>
<header> doesn't do anything to the outline algorithm.

[14:29:59.0000] <JonathanNeal>
Or rather http://viewsource.in/hgtvgardens.com/perennials/flower-of-the-day-delphinium#L316-318

[14:45:25.0000] <JonathanNeal>
Awesome http://2.bp.blogspot.com/-PrFpbT8fQoo/TwnGjeJSUqI/AAAAAAAAAWc/Sn7mjr-BZ1I/s1600/IMG_0565.JPG

[14:47:53.0000] <JonathanNeal>
I would say that the way the web works has made it harder for websites to implement kickers and reverse order <hgroup> stuff, which is why we see less of them in the wild. The fact that decks and bylines survive is a testimony of their importance as an element of communication.

[14:48:34.0000] <Hixie>
JonathanNeal: come now, it's trivial to fake it with <div>s and <span>s

[14:49:08.0000] <JonathanNeal>
or <p>s

[14:49:46.0000] <JonathanNeal>
I guess the subject was made less trivial when <hgroup> was introduced.

[14:51:41.0000] <JonathanNeal>
What i mean by that is, for me the subject was made less trivial. Sorry, I'm still shaking bad communication habits.

[14:55:42.0000] <JonathanNeal>
gsnedders: do you still work on the outliner?

[14:57:38.0000] <JonathanNeal>
Do sections without headings inherit the headings of their parent, or are they considered Untitled, like http://gsnedders.html5.org/outliner/process.py?url=http://www.whatwg.org/specs/web-apps/current-work/multipage/elements.html#the-title-attribute

[14:57:58.0000] <TabAtkins>
untitled

[14:59:41.0000] <JonathanNeal>
The OCD I went through with <nav>...

[14:59:50.0000] <JonathanNeal>
I was hoping it might inherit.

[15:00:11.0000] <TabAtkins>
It seems like that would usually be a bad idea.

[15:00:19.0000] <Hixie>
that would make little sense :-)

[15:00:44.0000] <TabAtkins>
I mean, literally putting the same <hn> element into the subsections would almost certainly be wrong.

[15:02:09.0000] <JonathanNeal>
For a <nav> element, this has been frustrating.

[15:04:21.0000] <JonathanNeal>
I often see <header><h1/><h2/><nav/><p/></header> working similarly as an <hgroup>, except that it doesn't according to spec.

[15:06:26.0000] <JonathanNeal>
Where many <hn> elements are merged similar to <hgroup>, and I can expect anything in <header> to be header material for the article.

[15:06:29.0000] <Hixie>
well if the <h1> is a site header and the <h2> a page header, that's fine

[15:07:00.0000] <Hixie>
it's only a problem if there's a later <h2> that's supposed to be a subheading of the <h1>/<h2> combo

[15:07:09.0000] <Hixie>
as opposed to just the <h1>, at the same level as the earlier <h2>

[15:07:46.0000] <JonathanNeal>
<header><h2>Flower of the Day</h2><h1>Roses</h1></header><h2>Their Beautiy</h2><p/><h2>Their Color</h2><p/><h2>Their Grace</h2><p/>

[15:08:15.0000] <Hixie>
that's clearly bogus, yes

[15:08:52.0000] <Hixie>
since it is the same as <section><h1>Flower of the Day</h1></section> <section><h1>Roses</h1> <section><h1>Their Beauty</h1></section> <section.../> <section.../> </section>

[15:22:10.0000] <JonathanNeal>
Can you see what it is trying to be?

[15:30:26.0000] <JonathanNeal>
Well, that's not the kind of question or discussion you like to have, I know.

[15:31:23.0000] <Hixie>
it's presumably trying to be

[15:31:43.0000] <TabAtkins>
If you replaced <header> with <hgroup>, that would be a correct implementation of what they're trying to do.

[15:31:53.0000] <Hixie>
<hgroup><h1>Flower of the Day</h1><h2>Roses</h2></hgroup> <section><h1>Their Beauty</h1></section> <section.../> <section.../>

[15:31:56.0000] <Hixie>
or

[15:32:02.0000] <Hixie>
<hgroup><h2>Flower of the Day</h2><h1>Roses</h1></hgroup> <section><h1>Their Beauty</h1></section> <section.../> <section.../>

[15:32:04.0000] <JonathanNeal>
I suspect <hgroup> is better than <h1>Lord of the Rings <strong>The Two Towers<strong> <small>A Book Review</small></h1>

[16:08:02.0000] <GPHemsley>
/me cries over tag soup

[16:55:39.0000] <tantek>
I found a site that uses longdesc - web comic CSSquirrel, e.g. http://cssquirrel.com/comic/?comic=107

[16:56:01.0000] <tantek>
longdesc="http://www.cssquirrel.com/comicscripts/script102.htm"

[16:56:25.0000] <tantek>
which … 404s

[16:56:27.0000] <tantek>
sigh

[16:56:27.0000] <TabAtkins>
Yeah, he uses it solely to disprove the "nobody uses longdesc correctly" argument.

[16:56:41.0000] <tantek>
TabAtkins - uh, you mean to *prove* ?

[16:57:04.0000] <tantek>
also goes to show no one is viewing it - because no one has reported it - because he hasn't fixed it.

[16:57:05.0000] <TabAtkins>
Hahaha, nice.

[16:57:14.0000] <tantek>
although I guess I just viewed it - by viewing the source

[16:57:20.0000] <tantek>
doing some analysis on comic markup

[16:57:26.0000] <tantek>
you know, for #indiewebcamp

[16:57:33.0000] <tantek>
just in case I wanted to publish a comic on my own site


2013-05-30
[17:03:30.0000] <hober>
tantek: see also http://www.soxaholix.com/

[17:04:34.0000] <tantek>
hober do you like their markup?

[17:07:47.0000] <hober>
no

[17:07:53.0000] <tantek>
yeah

[17:08:17.0000] <tantek>
btw - just found this - http://xkcdexplainedexplainedexplained.tumblr.com/

[17:09:01.0000] <tantek>
so here's a good example

[17:09:02.0000] <tantek>
http://xkcd.com/386/

[17:09:30.0000] <tantek>
since the people speaking don't have explicit identities, I'm wondering what the right way to markup their dialog is

[17:11:11.0000] <Hixie>
<p>"Are you coming to bed?"</p> <p>"I can't. This is important."</p> <p>"What?"</p> <p>"Someone is <em>wrong</em> on the Internet."</p>

[17:11:23.0000] <Hixie>
ok, time to be afk again. bbl.

[17:11:52.0000] <tantek>
/me looks for his CMOS

[17:12:43.0000] <tantek>
anyway I'm thinking <object> tag with all the fallback inside

[17:15:03.0000] <tantek>
ah, pronouns. right.

[17:28:51.0000] <GPHemsley>
Oh, nice. My MIME type testing just crashed Aurora

[17:29:37.0000] <GPHemsley>
that is *definitely* a spec violation

[17:52:38.0000] <GPHemsley>
well, at least it's reproduceable

[21:04:33.0000] <tantek>
Hixie - CMOS agrees with you!

[21:04:40.0000] <a-ja>
heycam: ping

[21:04:47.0000] <heycam>
a-ja, pong

[21:05:54.0000] <a-ja>
heycam: <details> and <summary> have a chance at making esr24 release? or other priorities higher?

[21:06:16.0000] <tantek>
15th edition, 11.43 Speech, Dialogue, And Conversation / Direct discourse

[21:06:26.0000] <tantek>
"change in speaker is usually indicated by a new paragraph"

[21:06:48.0000] <heycam>
a-ja, unfortunately other things have been having priority recently. next chance to look at it is probably from june 24.

[21:08:24.0000] <a-ja>
heycam: k....likely not then, i guess. oh well

[21:08:34.0000] <heycam>
a-ja, yep. sorry about that!

[21:09:26.0000] <a-ja>
heycam: n/p....just like to know for planning purposes.

[21:10:30.0000] <Hixie>
tantek: well duh :-P

[21:21:19.0000] <tantek>
Hixie - I like to do my homework :)

[21:24:39.0000] <Hixie>
:-)

[22:30:09.0000] <TabAtkins>
heycam: While we're on the subject of you having other things to look at, seen my email from earlier today about adding a way to declare an interface map-like?

[22:30:28.0000] <heycam>
TabAtkins, no, I haven't seen that yet

[22:30:35.0000] <heycam>
TabAtkins, what was the outcome of the thread on es-discuss?

[22:31:10.0000] <TabAtkins>
They don't want to add anything to ES for it, but Tom gave a quite decent suggestion of how to achieve what we want with only a little bit of help from WebIDL.

[22:31:21.0000] <heycam>
TabAtkins, oh, great

[22:31:36.0000] <TabAtkins>
His idea could be adopted by ES as well without the troubles that my other suggestions had, but I'd prefer not to wait for it.

[22:32:06.0000] <heycam>
TabAtkins, do you have a link so I can take a quick peek now?

[22:32:14.0000] <TabAtkins>
My thread?

[22:32:28.0000] <heycam>
TabAtkins, no the "my email from earlier today"

[22:32:50.0000] <TabAtkins>
http://lists.w3.org/Archives/Public/public-webapps/2013AprJun/0805.html

[22:34:44.0000] <heycam>
TabAtkins, so they key I guess is not to use Map.prototype's actual methods, but just to have a new set of identically named ones that do the custom behaviour?

[22:34:57.0000] <heycam>
*the

[22:35:57.0000] <TabAtkins>
Yes, basically.  And have the set of them maintained in WebIDL rather than individual specs, so one update will fix every spec.

[22:37:04.0000] <TabAtkins>
Kinda sad that that means Map.prototype.set.call() won't be hooked and work correctly (it'll just throw instead, I think, as the object doesn't have a [[MapData]] internal property), but whatever, that's the only real downside left.

[22:37:41.0000] <heycam>
TabAtkins, mmm. if you cannot do arbitrary map insertions/removals without side effects, then it's kind of not a Map as defined by ES anyway

[22:38:41.0000] <TabAtkins>
omg, not this again.  Yes, it's a Map in every way.  ES happened to define that the thing named by Map is specifically an object->object map, but that shouldn't prevent other types of maps from existing or interoperating.  Maps are naturally parametric.

[22:39:05.0000] <heycam>
("it depends what you mean by Map")

[22:39:17.0000] <TabAtkins>
That's why I lower-cased when allowed by English conventions. ^_^

[22:39:45.0000] <heycam>
ok :)

[22:39:57.0000] <TabAtkins>
A map is a list of key/value tuples.  A Map is the ES class, which is defined as object->object.

[22:40:09.0000] <heycam>
ok, sure.

[22:40:25.0000] <TabAtkins>
A CSSVariablesDeclaration is a map which is string->string, and which is backed by a CSSStyleRule object.

[22:41:19.0000] <heycam>
anyway, I'll take a stab at it a bit after I get back from F2F stuff next week

[22:41:26.0000] <TabAtkins>
Cool.  See you in Tokyo!

[22:41:32.0000] <heycam>
see you then

[23:48:15.0000] <tantek>
Hixie - long form alt text (including aforementioned dialog) for an image posted as normal inline markup inside an object: http://tantek.com/2013/149/b1/bayesian

[00:03:57.0000] <jgraham>
tantek: I'm rather sure the W3C access change at Opera was intentional. I remember mail from Charles.

[00:04:13.0000] <wilhelm>
tantek: I did a similar experiment here: http://wja.no/t/comic/ . (Stolen graphics with no attribution; previously not linked from anywhere.)

[00:04:22.0000] <tantek>
jgraham. huh - interesting. wonder when that happened.

[00:05:16.0000] <tantek>
wilhelm - interesting experiment! yes it looks like you used XKCD as a source.

[00:05:30.0000] <wilhelm>
If you have 12 panels, the comic will work on any screen resolution.

[00:05:35.0000] <wilhelm>
Four columns, tree, two, one.

[00:05:50.0000] <tantek>
my workflow happened in a different order, I was inspired to draw the comic first, and then was encouraged to post it, and then had to of course figure out the markup to do so.

[00:06:15.0000] <tantek>
interestingly enough, at least some aggregators use the fall back markup instead of the <object>! e.g. http://planet.mozilla.org/

[00:07:54.0000] <wilhelm>
Yeah, my experiment started with "how can you make a digital graphic novel work on any screen size". I also found a way to use panels of different sizes.

[00:08:00.0000] <wilhelm>
Would be fun to try with some real content.

[00:13:50.0000] <Ms2ger>
http://quotes.burntelectrons.org/6945

[00:15:11.0000] <tantek>
Ms2ger - almost a haiki

[00:15:15.0000] <tantek>
haiku even

[00:25:33.0000] <Ms2ger>
http://i.imgur.com/CwjA7Z1.jpg

[00:36:14.0000] <zcorpan>
i wonder what's wrong with <h1>heading<br>subheading</h1>

[00:38:02.0000] <Ms2ger>
Styling

[00:39:16.0000] <zcorpan>
<h1><span>heading</span><br><span>subheading</span></h1>

[00:48:38.0000] <nessy>
I think it's about automatically creating a table-of-contents thing

[00:48:50.0000] <nessy>
you don't really want the subheading in it

[00:49:12.0000] <nessy>
just my 2c worth though ;-)

[01:13:17.0000] <SteveF>
zcorpan: thats one of the options suggested in the spec (except for the <br>) display:block is used instead, but use of <br> should also be shown http://www.w3.org/html/wg/drafts/html/master/common-idioms.html#sub-head

[01:14:33.0000] <zcorpan>
SteveF: the <br> seems relevant if it's supposed to be understandable without css

[01:15:07.0000] <zcorpan>
running together two sentences can change the meaning

[01:17:34.0000] <SteveF>
zcorpan: bug filed https://www.w3.org/Bugs/Public/show_bug.cgi?id=22204  yeah agree either that or delineation such as : or - much discussion here http://html5doctor.com/howto-subheadings/

[01:19:03.0000] <zcorpan>
SteveF: in the "Ramones -" example, how is the dash hidden?

[01:20:58.0000] <SteveF>
CSS display:none guess i need anther bug filed...

[01:22:52.0000] <SteveF>
so it could be <i>-</i> i {display:none}

[01:24:52.0000] <zcorpan>
isn't that abuse of <i>?

[01:27:11.0000] <SteveF>
don't think so "The i element represents a span of text in an alternate voice or mood" it would make sense to differentiate the - as something other than the rest of the text and what does abuse of <i> actually mean who does the abuse effect?

[01:29:49.0000] <SteveF>
zcorpan: you can comment on bug if you think its an issue https://www.w3.org/Bugs/Public/show_bug.cgi?id=22205

[01:31:17.0000] <annevk>
zcorpan: fyi, @namespace has similar issues as @charset

[01:44:34.0000] <zcorpan>
annevk: what issues?

[01:45:39.0000] <zcorpan>
/me wonders why the attributes are readonly

[01:46:22.0000] <annevk>
zcorpan: you can't do modifications to namespace declarations or insert new ones as that breaks parsed selectors

[01:46:52.0000] <annevk>
zcorpan: what you actually want to do is expose a readonly namespace map

[01:46:59.0000] <annevk>
zcorpan: there's some emails about that

[01:47:08.0000] <annevk>
zcorpan: there's also some emails about that prolly not being possible due to legacy

[01:47:31.0000] <zcorpan>
ok, haven't read those

[01:50:41.0000] <zcorpan>
should all readonly attribute CSSStyleDeclaration style; have [PutForwards=cssText] ?

[01:51:04.0000] <SimonSapin>
One of the reasons I dropped cssutils and wrote tinycss: when I ask cssutils for the selector of a style rule, it serializes it from its internal representation which uses namespace URLs rather than prefixes. To do that, it loops over every rule of the stylesheet to rebuild the prefix map, just in case you’ve messed with @namespace rules.

[01:51:04.0000] <SimonSapin>
Net result: O(n²) time for getting all selectors from a stylesheet with n style rules.

[01:51:41.0000] <annevk>
zcorpan: depends on your school of thought it seems

[01:51:45.0000] <annevk>
zcorpan: I think it's useful

[01:55:10.0000] <heycam>
annevk, I wonder if while you're with alex, wycats, etc. you could discuss named getters/setters

[01:55:26.0000] <heycam>
annevk, seems some people don't really like them (sicking, at least), while others do

[01:55:46.0000] <annevk>
heycam: nobody wants them

[01:55:57.0000] <heycam>
annevk, I thought Hixie did

[01:56:09.0000] <annevk>
heycam: okay, almost nobody

[01:56:12.0000] <heycam>
:)

[01:56:23.0000] <heycam>
ok, I'll factor that in

[01:56:25.0000] <annevk>
heycam: that's why Map and such exists

[01:56:30.0000] <heycam>
right

[01:56:33.0000] <heycam>
that's what made me think of it again

[01:56:45.0000] <annevk>
heycam: btw, you should talk with wycats__ about JSIDL <> Web IDL

[01:57:03.0000] <wycats__>
heycam

[01:57:04.0000] <wycats__>
hey

[01:57:06.0000] <annevk>
heycam: he thinks morphing Web IDL might be more effort

[01:57:07.0000] <heycam>
hi wycats__

[01:57:09.0000] <annevk>
ah

[01:57:11.0000] <annevk>
there he is :)

[02:16:59.0000] <SteveF>
GPHemsley: JonathanNeal notes, ideas on stuff after discussion last night http://lists.w3.org/Archives/Public/public-html/2013May/0173.html

[02:48:04.0000] <zcorpan>
annevk: http://lists.w3.org/Archives/Public/www-style/2009Oct/0181.html ?

[02:48:21.0000] <annevk>
zcorpan: looks accurate

[02:48:30.0000] <annevk>
zcorpan: man that was long ago

[02:48:51.0000] <zcorpan>
yeah

[02:49:09.0000] <zcorpan>
i haven't found anything about "prolly not being possible due to legacy"

[03:06:53.0000] <zcorpan>
insertRule('@namespace "foo"', 0) throws in webkit/blink

[03:07:35.0000] <zcorpan>
and presto

[03:11:54.0000] <zcorpan>
though gecko and ie10 allow it, but don't invalidate the style sheet if it's being added after other things

[04:03:51.0000] <annevk>
darobin: is the github.com/w3c stuff synced on w3.org somehow?

[04:04:08.0000] <darobin>
annevk: not yet, but the systeam is working on making that generic

[04:04:14.0000] <annevk>
darobin: k

[04:04:23.0000] <darobin>
you don't have to decide now, you can use your organisation and move the repos later if it makes sense

[04:04:30.0000] <annevk>
darobin: so w3.org will get git hosting?

[04:04:46.0000] <darobin>
annevk: it's definitely being looked at, yes

[04:05:07.0000] <darobin>
at the very least it'll get sync from github

[04:05:10.0000] <annevk>
darobin: kinda makes sense for the W3C TAG to be its own organization

[04:05:27.0000] <annevk>
darobin: so if they could consider syncing both /w3c and /w3ctag ...

[04:05:44.0000] <darobin>
annevk: yeah, I don't have a strong opinion on that, I just wanted to point out that you can use the w3c org

[04:06:03.0000] <darobin>
I can easily set you up, and grant admin over repos and stuff

[04:06:54.0000] <annevk>
too much management and coordination I guess, hmm

[04:07:02.0000] <annevk>
but anyway, sounds good about git syncing

[04:08:08.0000] <darobin>
as you prefer, I really don't have a preference, just know that it's on the table

[05:14:29.0000] <hallvors>
annevk: what did you mean by "leaving new features to the API for Fetch"?

[05:14:43.0000] <hallvors>
is the Fetch spec going to define what properties an XHR instance has??

[05:23:12.0000] <Ms2ger>
/me wonders if dap counts as web-platform

[05:24:14.0000] <jgraham>
/me concurs with Ms2ger's wondering

[05:29:06.0000] <annevk>
hallvors: Fetch is going to define something like Response = fetch(Request)

[05:29:16.0000] <annevk>
euh, prolly Future<Response>

[05:30:36.0000] <hallvors>
/me can now prove that jgraham and Ms2ger are wonderful people, full of wondering

[05:31:36.0000] <hallvors>
annevk: and..? Fetch will then define properties on Request and XHR will just say "look at Fetch"?

[05:32:49.0000] <annevk>
hallvors: XHR will no longer be needed

[05:33:14.0000] <annevk>
Ms2ger: depends on the API?

[05:34:36.0000] <hallvors>
Oh well. I thought Fetch was about the slightly lower-level networking and XHR would still exist but defer to Fetch a lot regarding details

[05:35:04.0000] <annevk>
yes that too

[05:35:14.0000] <annevk>
that's plan a)

[05:35:19.0000] <annevk>
or plan 1)

[05:35:27.0000] <annevk>
plan 2 is to add a better API

[05:35:35.0000] <hallvors>
Does that mean you're basically "abandoning" the XHR spec at this point because Fetch will obsolete it anyway?

[05:35:48.0000] <annevk>
not sure what you mean by abandone

[05:35:56.0000] <annevk>
seems pretty important to define it

[05:36:40.0000] <hallvors>
Sorry . I'm not sure how you are planning to put the bits together

[05:37:42.0000] <hallvors>
if I suggest a new property for XHR instances and you say you'll "leave new features of the API for Fetch" it sounds like xhr.credentialsPolicy will be defined in the Fetch spec

[05:38:18.0000] <annevk>
right

[05:38:21.0000] <hallvors>
(even when it's proposed as an XHR property that's going to map well on to what's already in Fetch)

[05:38:44.0000] <hallvors>
so it sounds like you're not going to write anything in the XHR spec

[05:38:46.0000] <annevk>
I don't think we should extend XHR further if we're also going to do a new API soonish

[05:39:01.0000] <annevk>
doesn't mean we should no longer maintain XHR

[05:39:13.0000] <hallvors>
so that's why I'm asking if you're "abandoning" the spec

[05:39:31.0000] <hallvors>
in the expectation that it will be obsolete

[05:39:41.0000] <annevk>
what does obsolete mean?

[05:40:10.0000] <hallvors>
what does maintain mean? ,-)

[05:42:35.0000] <hallvors>
So Fetch will create a new, competing, JS-exposed API for HTTP. var req=new Request(); response = fetch(req); response.then() .. ?

[05:42:54.0000] <hallvors>
(or whatever your preferred futures syntax is)

[05:43:26.0000] <jgraham>
Why would fetch have an API?

[05:43:32.0000] <hallvors>
/me knows futures is considered cool but doesn't study the details of all those discussions yet

[05:43:43.0000] <annevk>
hallvors: yeah

[05:43:44.0000] <jgraham>
Shouldn't the API be a layer on top of fetch?

[05:43:55.0000] <annevk>
jgraham: sure

[05:44:04.0000] <hallvors>
jgraham: I'm just trying to understand what Anne is saying :-p

[05:44:09.0000] <annevk>
jgraham: "Fetch" is the model, fetch() is the API

[05:44:24.0000] <annevk>
(prolly, requires some further thinking)

[05:44:32.0000] <hallvors>
why?

[05:44:40.0000] <hallvors>
to use futures?

[05:44:45.0000] <jgraham>
annevk: Re:DAP, battery, vibration, ambient light and proximity so far

[05:44:50.0000] <annevk>
hallvors: yeah

[05:45:17.0000] <annevk>
jgraham: those seem like relevant things, although the APIs are suckish

[05:45:44.0000] <annevk>
hallvors: futures, and provide a way to expose a tainted response somehow

[05:46:01.0000] <Ms2ger>
Clearly TC39 should review them

[05:46:33.0000] <annevk>
Ms2ger, tears were shed

[05:47:01.0000] <jgraham>
Well they are things. Not obvious they are ever going to be web-exposed though

[05:47:19.0000] <Ms2ger>
"DAP: They Make Things"

[05:48:01.0000] <annevk>
jgraham: I guess I should write some tests for B2G, but I thought most were

[05:48:26.0000] <jgraham>
You can cause the phone to vibrate from a web page?

[05:48:36.0000] <Ms2ger>
*app

[05:48:46.0000] <hallvors>
appsite ?

[05:48:57.0000] <jgraham>
Well I don't know what a web app is

[05:49:05.0000] <jgraham>
Everyone means something different whan they say that

[05:49:52.0000] <annevk>
jgraham: I was hoping you could

[05:50:38.0000] <annevk>
jgraham: https://wiki.mozilla.org/WebAPI suggests it is

[05:52:16.0000] <jgraham>
Hmm, maybe then

[05:52:29.0000] <jgraham>
The spec doesn't say anything about permissions I guess

[05:52:53.0000] <jgraham>
Seems a bit obnoxious

[05:53:12.0000] <jgraham>
Although probably no more than the rest of the web

[05:59:13.0000] <annevk>
I have a test, but getting my phone on the network is hard :/

[05:59:34.0000] <annevk>
http://dump.testsuite.org/vibrate/test.html

[05:59:37.0000] <annevk>
"test"

[05:59:54.0000] <Ms2ger>
It didn't

[06:00:14.0000] <annevk>
Ms2ger: using?

[06:00:18.0000] <Ms2ger>
Maybe because I don't have a smartphone and I loaded the page on my laptop

[06:00:34.0000] <annevk>
Ms2ger: don't you have something useful to do? :p

[06:01:01.0000] <Ms2ger>
http://xkcd.com/303/

[06:02:11.0000] <annevk>
even reasonably matches the HTTP status code

[06:12:08.0000] <annevk>
hallvors: my apologies btw for not communicating much about the Fetch plan, it's still evolving, also based on input from others

[06:15:53.0000] <hallvors>
annevk: apology accepted (although I'm wondering if you're reluctant to add stuff to XHR to make your new API a stronger contender in comparison :-p ;-))

[06:20:12.0000] <annevk>
hallvors: I'm reluctant to add stuff to avoid needless web platform complexity

[06:20:32.0000] <annevk>
hallvors: I'm always reluctant to add stuff

[06:21:02.0000] <hallvors>
he said and added a new API ;-)

[06:21:33.0000] <annevk>
heh

[06:21:58.0000] <hallvors>
(I agree with the sentiment, BTW)

[06:22:27.0000] <hallvors>
(this whole anti-anonymous effort was of course an attempt at simplifying things)

[06:23:53.0000] <hallvors>
hm.. saying I'm involved in anti-anonymous efforts in a public chatroom seems uncautious. could be misunderstood ;-)

[06:26:12.0000] <hallvors>
anyway. I was pushing for a tri-state withCredentials because it seems simpler, Sicking had some good and valid concerns and while I think the mess would be temporary and the improvement permanent, I'm happy to defer to his experience and implementor skillz. Especially if you actually give me a tri-state property eventually :-)

[06:26:20.0000] <annevk>
most things in #whatwg are misunderstood, though only by people who want to

[06:26:29.0000] <hallvors>
heh

[06:27:00.0000] <hallvors>
anything can be misunderstood if you try hard enough

[06:30:26.0000] <Ms2ger>
/me launches an anonymous attack on hallvors 

[06:31:41.0000] <hallvors>
/me is a clueless cyber warrior

[07:31:58.0000] <GPHemsley>
SteveF: I'm kinda bummed you didn't include the alternative suggestions JonathanNeal and I proposed.

[07:37:22.0000] <zcorpan>
annevk: https://www.w3.org/Bugs/Public/show_bug.cgi?id=22208

[07:41:55.0000] <annevk>
zcorpan: did you clarify that adding them doesn't change the actual namespace map of the style sheet or did you define something else?

[07:42:24.0000] <annevk>
zcorpan: I don't think there's a namespace map currently and you need to be clear on what happens there

[07:42:39.0000] <annevk>
zcorpan: e.g. can you change an existing test|test in meaning or not, can you invalidate it, etc.

[07:42:41.0000] <zcorpan>
annevk: my thinking was that it would change the namespace map, but i haven't really specified how the namespace map works

[07:43:04.0000] <annevk>
zcorpan: changing the namespace map would potentially require re-parsing selectors, which seems terrible

[07:43:08.0000] <zcorpan>
annevk: it throws if you try to change @namespace if there are any other rules

[07:43:20.0000] <zcorpan>
so nothing needs to be reparsed

[07:43:26.0000] <annevk>
zcorpan: but you can override a previous @namespace

[07:43:38.0000] <annevk>
zcorpan: ooh sorry

[07:43:49.0000] <zcorpan>
look at the diff :-)

[07:43:55.0000] <annevk>
zcorpan: meh

[07:44:00.0000] <annevk>
:)

[07:44:42.0000] <GPHemsley>
Hixie: I was kinda hoping you hear your opinion on the whole <hgroup>/<subline> discussion yesterday :)

[07:44:48.0000] <GPHemsley>
*to

[07:51:31.0000] <GPHemsley>
We never put together a style guide, did we?

[07:51:51.0000] <GPHemsley>
I ask because I wonder what our preferred term for dictionary/map/associative array is

[07:52:04.0000] <GPHemsley>
 /object

[09:36:13.0000] <dglazkov>
good morning, Whatwg!

[09:54:39.0000] <JonathanNeal>
hello

[10:07:05.0000] <Ms2ger>
tobie, so why hide the documentation away into another repo?

[10:26:41.0000] <JonathanNeal>
Do spans or divs imply anything other than logical grouping?

[10:33:13.0000] <Ms2ger>
No

[10:35:34.0000] <JonathanNeal>
Are there any best practices for divs and spans that I should know about?

[10:36:27.0000] <TabAtkins>
Don't overuse them, but don't contort yourself trying to underuse them either?

[10:36:28.0000] <JonathanNeal>
Like, how liberally can they be used? Is it appropriate to use divs for text-only content, or is it appropriate to put block level elements inside a span?

[10:37:12.0000] <TabAtkins>
Putting blocks in a <span> will likely have bad layout effects, due to the inline-breaking behavior.  Using a <div> for text content is fine if the text is naturally block-like.

[10:37:24.0000] <TabAtkins>
The default presentation implies a modicum of semantics, but that's it.

[10:38:24.0000] <JonathanNeal>
I was making a devil's argument in another channel that one could do away with divs.

[10:38:55.0000] <TabAtkins>
You really can't.  And you shouldn't try to.

[10:39:15.0000] <TabAtkins>
HTML does not and will not try to express all possible semantics.

[10:39:28.0000] <JonathanNeal>
I'm not sure one "can't".

[10:39:40.0000] <TabAtkins>
For arbitrary web content, you can't.

[10:40:05.0000] <JonathanNeal>
I haven't found any situations where a span can't be there, unlike a div, which has restrictions.

[10:40:43.0000] <TabAtkins>
If you're willing to tweak 'display', a <span> and a <div> are identical, yes.

[10:41:16.0000] <JonathanNeal>
Except that a <div> will be forced out of certain block level elements, like <p>.

[11:25:38.0000] <TabAtkins>
JonathanNeal: That's a benefit for those of us who like to utilize end-tag omission.  ^_^

[11:38:27.0000] <JonathanNeal>
end-tag omission works great until you're next element isn't regularly recognized by IE8. <p>lorem<section>ahhh i didn't break in IE, oh the humanity</section>

[11:43:58.0000] <TabAtkins>
Don't have to care, wheeee!

[11:46:03.0000] <JonathanNeal>
:)

[12:44:38.0000] <tobie>
Ms2ger: re docs: good question. Short answer: it didn't cross my mind (and I guess that's because I don't like having completely different content in branches of the same repository).

[12:45:59.0000] <jgraham>
branches?

[12:46:44.0000] <tobie>
branches!

[12:51:21.0000] <Hixie>
zcorpan: yt?

[12:51:30.0000] <zcorpan>
Hixie: yes

[12:51:48.0000] <Hixie>
zcorpan: https://www.w3.org/Bugs/Public/show_bug.cgi?id=15588

[12:52:04.0000] <Hixie>
zcorpan: do you want something from me for this? do you want to take it for now? any input?

[12:53:52.0000] <Hixie>
also https://www.w3.org/Bugs/Public/show_bug.cgi?id=14703

[12:54:05.0000] <Hixie>
though presumably that one will definitely require something from me

[12:54:08.0000] <zcorpan>
Hixie: i don't know. if you have anything useful to add, comment in the bug. i'll take a closer look at it tomorrow

[12:58:44.0000] <Hixie>
zcorpan: nothing that i haven't already added

[12:58:51.0000] <Hixie>
zcorpan: thanks

[12:59:26.0000] <tobie>
Ms2ger: that said, I see benefits to both options and I'm absolutely open to changing if there's consensus to doing so and someone's willing to do the work (migrating GH issues, essentially).

[13:00:12.0000] <Ms2ger>
tobie, don't feel too strongly either

[13:08:06.0000] <jgraham>
(I don't see why there would be branches with different content)

[13:31:16.0000] <zcorpan>
Hixie: if you could file bugs for https://www.w3.org/Bugs/Public/show_bug.cgi?id=14703#c6 that'd be splendid (select text in the spec to file a bug)

[13:41:36.0000] <zcorpan>
Hixie: maybe HTML needs to use something along the lines of http://dev.w3.org/csswg/cssom/#requirements-on-user-agents-implementing-the-xml-stylesheet-processing-instruction for <link>?

[13:45:10.0000] <zcorpan>
man, the xml-stylesheet spec is horrible to read, being in terms of infoset

[13:45:27.0000] <zcorpan>
"[Definition: A processing instruction information item is said to be a potential xml-stylesheet processing instruction if it has the [target] property xml-stylesheet and it either is in the [children] property of a document information item and appears before the element information item of the document information item's [children] property, or it appears in the [children] property of a document type declaration informat

[13:45:27.0000] <zcorpan>
ion item.]"

[13:57:58.0000] <Hixie>
zcorpan: yeah, i assume so

[13:58:17.0000] <Hixie>
zcorpan: and yes, will file bugs

[13:58:23.0000] <zcorpan>
thanks!

[14:00:21.0000] <Hixie>
am i dumb? why is firefox giving me NS_ERROR_FAILURE on http://software.hixie.ch/utilities/js/live-dom-viewer/?saved=2266 ?

[14:03:04.0000] <Hixie>
seems to work in hixie.ch/www/tests/adhoc/dom/level0/history/pushState/003.html

[14:03:09.0000] <Hixie>
er, http://www.hixie.ch/tests/adhoc/dom/level0/history/pushState/a/b/c/

[14:03:10.0000] <Hixie>
er

[14:03:14.0000] <Hixie>
er, http://www.hixie.ch/tests/adhoc/dom/level0/history/pushState/003.html

[14:03:16.0000] <Hixie>
sheesh

[14:05:00.0000] <Hixie>
well webkit's behaviour is odd

[14:16:39.0000] <GPHemsley>
/me gets "error: NS_ERROR_XPC_NOT_ENOUGH_ARGS: Not enough arguments [nsIDOMHistory.pushState] on line 5" on the first link

[14:16:42.0000] <GPHemsley>
Hixie: ^

[14:19:36.0000] <zcorpan>
how do people pronounce "@charset"? is it "charset" or "at-charset"?

[14:20:01.0000] <divya>
why dont you ask twitter zcorpan

[14:20:57.0000] <Hixie>
GPHemsley: sorry, i meant http://software.hixie.ch/utilities/js/live-dom-viewer/?saved=2267

[14:21:39.0000] <zcorpan>
divya: done

[14:21:53.0000] <zcorpan>
divya: now you have to answer the question :-P

[14:22:10.0000] <Hixie>
it's pronounced at-car-set

[14:22:22.0000] <divya>
who is the inventor of charset

[14:22:27.0000] <divya>
plz give that person a webby award

[14:22:32.0000] <divya>
and ask how to pronounce it

[14:22:43.0000] <zcorpan>
Hixie: even if the next word is "at-rule"?

[14:22:54.0000] <Hixie>
divya: so you know what the wrong way to pronounce it is? :-P

[14:22:59.0000] <Hixie>
zcorpan: know, the next word is just "rule"

[14:23:02.0000] <Hixie>
er

[14:23:04.0000] <Hixie>
"no"

[14:23:06.0000] <Hixie>
not "know"

[14:23:12.0000] <Hixie>
man

[14:23:15.0000] <divya>
Hixie: i have always said CHHHAR

[14:23:18.0000] <divya>
not car

[14:23:25.0000] <Hixie>
k-har?

[14:23:32.0000] <Hixie>
or tshar?

[14:23:36.0000] <divya>
TSHARRR

[14:23:39.0000] <divya>
English sucks

[14:23:43.0000] <Hixie>
it's not tshar

[14:23:47.0000] <Hixie>
it's short for "character"

[14:23:54.0000] <divya>
yes i knooo

[14:23:59.0000] <divya>
but i cannot get myself to say car

[14:24:02.0000] <Hixie>
(a lot of people agree with you)

[14:24:03.0000] <zcorpan>
Hixie: css-syntax uses "at-rule" so i wanted to hook in to that :-|

[14:24:05.0000] <Hixie>
(you're all wroooong)

[14:24:12.0000] <divya>
ALL WRONG!

[14:24:22.0000] <divya>
what did I tell you zcorpan

[14:24:24.0000] <divya>
like 100 responses

[14:24:29.0000] <divya>
everyone likes to bikeshed

[14:24:34.0000] <divya>
its delightful waste of our time

[14:24:34.0000] <Hixie>
zcorpan: i would say "an at-rule" and "an at-car-set rule"

[14:24:47.0000] <Hixie>
sometimes maybe "an at-car-set at-rule"

[14:25:41.0000] <zcorpan>
poor @charset on twitter will wonder what the buzz is about

[14:25:44.0000] <divya>
hahah

[14:27:01.0000] <GPHemsley>
Shouldn't annevk have that account?

[14:27:23.0000] <GPHemsley>
@charizard

[14:27:42.0000] <GPHemsley>
better watch out for that rule

[14:28:01.0000] <Hixie>
-_-

[14:29:10.0000] <GPHemsley>
^_^

[14:32:57.0000] <zcorpan>
Hixie: something being an abbreviation of something else doesn't imply that it's pronounced as part of the original word

[14:34:14.0000] <Hixie>
counter example?

[14:35:04.0000] <zcorpan>
Hixie: do you say "car" with the "a" as in "park" or with the "a" as in "character"?

[14:36:39.0000] <zcorpan>
(i guess the latter would be more like "care")

[14:37:20.0000] <Hixie>
i pronounce the a in car the same as in cart, park, lark, farm

[14:37:52.0000] <Hixie>
so i guess, fair enough

[14:38:35.0000] <zcorpan>
:-)

[14:39:25.0000] <Hixie>
in other news, i can never figure out insertBefore()'s arguments

[14:39:45.0000] <zcorpan>
yeah same here. i always get them wrong on the first try

[14:43:42.0000] <Hixie>
anyone disagree with my logic for base URLs in the source of http://www.hixie.ch/tests/adhoc/dom/level0/history/pushState/003.html ?

[14:44:09.0000] <Hixie>
(note that WebKit doesn't do it that way)

[14:44:16.0000] <Hixie>
(but Gecko seems to)

[14:45:20.0000] <gavinc>
/me has oddly been staring at baseuri and pushstate all week

[14:45:22.0000] <gavinc>
/me goes to read

[14:47:02.0000] <gavinc>
Restating base doesn't change anything in HTML?

[14:47:13.0000] <Hixie>
only the first <base href> matters

[14:48:12.0000] <gavinc>
the comment on 24 is wrong

[14:48:16.0000] <gavinc>
but the result is correct

[14:48:24.0000] <gavinc>
At least my reading ;)

[14:48:42.0000] <gavinc>
It's 'cause the base url before d is now set from back at line 16

[14:48:44.0000] <gavinc>
right?

[14:49:07.0000] <gavinc>
Nothing magic about "remembering" the base from the old <base>

[14:49:25.0000] <Hixie>
how is it wrong?

[14:49:46.0000] <Hixie>
i don't follow

[14:50:02.0000] <Hixie>
(see https://www.w3.org/Bugs/Public/show_bug.cgi?id=18459#c11 for context btw)

[14:50:40.0000] <gavinc>
Right!

[14:51:05.0000] <gavinc>
and when it gets resolved, it's resolved realitive to the current document URI which is now the base since the old <base> went away

[14:51:27.0000] <gavinc>
the "remembered" bit is confusing to me

[14:51:44.0000] <gavinc>
there just isn't a <base> anymore, so it's the document URI again

[14:52:00.0000] <gavinc>
and then there is a base again so add d/

[14:52:02.0000] <Hixie>
by "remembered" i mean "stored for future use"

[14:52:15.0000] <gavinc>
... I don't think it is however...

[14:52:19.0000] <gavinc>
is it?

[14:52:29.0000] <Hixie>
if it wasn't, the base URL would have to be recomputed each time it was needed

[14:52:32.0000] <gavinc>
Isn't it just dropping back to the Document URI

[14:52:36.0000] <Hixie>
so the pushState() calls would matter

[14:52:50.0000] <Hixie>
s/matter/immediately change the base URL/

[14:53:59.0000] <Hixie>
reload to see new phrasing of comments

[14:54:27.0000] <gavinc>
Okay, now I agree, yes :D

[14:54:55.0000] <Hixie>
excellent

[14:55:51.0000] <gavinc>
... base uri is hard to explain...

[14:55:58.0000] <Hixie>
little bit

[15:50:39.0000] <TabAtkins>
zcorpan: I usually pronounce it "at-charset", but use a/an as if it started with "c".

[15:51:11.0000] <zcorpan>
TabAtkins: that doesn't make sense

[15:51:21.0000] <TabAtkins>
zcorpan: I'm not super-consistent with this, but I decided on this pattern a while ago in my specs and try to stick to it.

[15:51:28.0000] <TabAtkins>
zcorpan: When writing, that is.

[15:51:38.0000] <TabAtkins>
When speaking, since I'm pronouncing the "at", I use "an".

[15:52:29.0000] <zcorpan>
ok. i use an in cssom now.

[15:54:52.0000] <TabAtkins>
It's not really important, so whatever.  English's a/an thing is dumb.


2013-05-31
[18:39:56.0000] <GPHemsley>
TabAtkins, zcorpan: As long as you don't use "an universal"...

[18:40:29.0000] <TabAtkins>
See?  Dumb rule.  Starts with a vowel, but pronounced with an initial "y" sound.

[18:58:36.0000] <zewt>
(the rule is "starts with a vowel sound", eg. open-mouthed, and that's not)

[19:23:17.0000] <GPHemsley>
/me notes TabAtkins is using the "dumb rule" of two spaces after punctuation

[19:23:42.0000] <GPHemsley>
/me wonders if he's pointed this out before

[19:24:23.0000] <GPHemsley>
/me notes the "an" rule is one of phonology, which is naturalistic, not artificial

[21:04:24.0000] <TabAtkins>
GPHemsley: Punctuation rules don't actually matter to anything, and it's a habit in my fingers now.

[21:09:42.0000] <SimonSapin>
TabAtkins: Didn’t we resolve on 'pad' rather than 'fill'? https://dvcs.w3.org/hg/csswg/rev/372efb71c9ca http://lists.w3.org/Archives/Public/www-style/2013May/0377.html

[21:10:31.0000] <TabAtkins>
Darn, did we?  I misremembered, then.

[21:10:34.0000] <TabAtkins>
I'll change it.

[23:26:15.0000] <SteveF>
GPHemsley: feel free to put your ideas to the WG

[00:46:35.0000] <zcorpan>
MikeSmith: http://www.w3.org/2009/07/webidl-check is giving me 503

[00:48:40.0000] <zcorpan>
or rather http://www.w3.org/2009/07/webidl-check?doc=http%3A%2F%2Fdev.w3.org%2Fcsswg%2Fcssom%2F&output=text

[00:51:28.0000] <zcorpan>
apparently http://dev.w3.org/csswg/

[00:55:58.0000] <MikeSmith>
zcorpan: will check later

[00:56:13.0000] <MikeSmith>
away from my PC at the moment

[01:02:13.0000] <Ms2ger>
HTMLOptionsCollection has

[01:02:14.0000] <Ms2ger>
getter (HTMLOptionElement or HTMLOptGroupElement)? namedItem(DOMString name);

[01:02:26.0000] <Ms2ger>
Can it actually ever return a HTMLOptGroupElement?

[01:06:31.0000] <jgraham>
Why not?

[01:07:17.0000] <jgraham>
At last per-spec

[01:10:17.0000] <Ms2ger>
select.options is the only HTMLOptionsCollection, right?

[01:11:33.0000] <jgraham>
I don't know of any others off the top of my head

[01:11:47.0000] <Ms2ger>
The options IDL attribute must return an HTMLOptionsCollection rooted at the select node, whose filter matches the elements in the list of options.

[01:11:55.0000] <Ms2ger>
The list of options for a select element consists of all the option element children of the select element, and all the option element children of all the optgroup element children of the select element, in tree order.

[01:12:05.0000] <jgraham>
Right

[01:12:22.0000] <jgraham>
So it can contain optgroup elements

[01:13:46.0000] <Ms2ger>
No it can't

[01:13:53.0000] <Ms2ger>
It can contain children of optgroup elements

[01:14:23.0000] <jgraham>
Oooh, interesting. I can't read

[01:39:09.0000] <zcorpan>
Ms2ger: it can't return HTMLOptGroupElement afaict

[01:44:06.0000] <Ms2ger>
Good

[01:44:15.0000] <Ms2ger>
I filed https://www.w3.org/Bugs/Public/show_bug.cgi?id=22225

[01:48:19.0000] <jgraham>
Ms2ger: Bug would be better if you had written *can't*

[01:48:21.0000] <jgraham>
:)

[01:49:16.0000] <zcorpan>
heh, if i modify the tc is https://www.w3.org/Bugs/Public/show_bug.cgi?id=15588 to have <html dir=rtl>, webkit scrolls to the bottom

[01:59:38.0000] <Ms2ger>
jgraham, well, more like, added "only"

[03:46:59.0000] <zcorpan>
Hixie: turns out to spec 'top of the document' i first have to support vertical writing modes throughout :-)

[04:14:54.0000] <dekiss>
shoudl I read the specification from w3c.org website or from whatwg.org

[04:15:20.0000] <jgraham>
whatwg.org

[04:15:24.0000] <dekiss>
haha

[04:15:30.0000] <dekiss>
because I asked here you said that?

[04:15:47.0000] <annevk>
dekiss: feel free to ask us over email :p

[04:15:49.0000] <jgraham>
I will say the same thing if you ask on the W3C servers too :)

[04:15:52.0000] <dekiss>
I don't understand in whatwg website html living standard is updated non stop? continiously?

[04:15:57.0000] <dekiss>
ahah

[04:16:00.0000] <dekiss>
fu

[04:16:02.0000] <dekiss>
joke :D

[04:16:04.0000] <annevk>
it is

[04:16:11.0000] <dekiss>
are you people officials from whatwg? ^^

[04:16:16.0000] <dekiss>
you know ian ?

[04:16:25.0000] <annevk>
dekiss: http://wiki.whatwg.org/wiki/FAQ has a lot of the details

[04:16:34.0000] <dekiss>
jgraham why will you do that?

[04:16:35.0000] <annevk>
dekiss: i guess I'm an official in some way

[04:16:38.0000] <jgraham>
It's only updated when Hixie's awake. Unless his cats get at the computer.

[04:16:47.0000] <dekiss>
why I should read on whatwg.org and not on w3c.org?

[04:17:06.0000] <annevk>
dekiss: w3.org mostly forks whatwg.org and therefore the latter is more up to date

[04:17:08.0000] <dekiss>
so

[04:17:13.0000] <dekiss>
I am confused

[04:17:14.0000] <annevk>
dekiss: it's what implementers look at too typically

[04:17:26.0000] <dekiss>
whatwg.org html standard is implemented in the web browsers or 23c standard?

[04:17:33.0000] <dekiss>
thwy differ a little

[04:17:35.0000] <dekiss>
w3c*

[04:17:51.0000] <dekiss>
hm

[04:17:52.0000] <annevk>
mostly WHATWG

[04:17:54.0000] <jgraham>
Because on w3.org you are more likely to get an out of date version or a version with some features split out into other documents for political reasons, or simply a version without up to date bug fixes

[04:18:04.0000] <dekiss>
so you say safari and opera for example (NOT IE) implement html from whatwg?

[04:18:06.0000] <dekiss>
website

[04:18:25.0000] <dekiss>
"split out for political reasons" ?

[04:18:43.0000] <dekiss>
canvas is republican and html is democrat?

[04:18:44.0000] <dekiss>
:D

[04:18:46.0000] <annevk>
dekiss: I strongly recommend reading through the FAQ I just linked

[04:18:53.0000] <dekiss>
why canvas is split out for political reasons

[04:19:21.0000] <dekiss>
ok but

[04:19:24.0000] <dekiss>
so you say safari and opera for example (NOT IE) implement html from whatwg?

[04:19:36.0000] <dekiss>
tell me honestly and i wil lrespect you

[04:19:40.0000] <dekiss>
^^

[04:19:54.0000] <annevk>
when I worked for Opera that was the case, I doubt it has changed

[04:20:08.0000] <annevk>
I think the same is true for Apple, but it may vary on a person-by-person basis

[04:20:33.0000] <dekiss>
ah

[04:20:35.0000] <annevk>
the short answer is that it's complicated and does not matter much

[04:20:42.0000] <dekiss>
so you recommend me t oread we dev edition?

[04:20:47.0000] <dekiss>
wil lI miss a lot ?

[04:20:56.0000] <dekiss>
I am not web browser maker (for now)

[04:20:58.0000] <dekiss>
I just make websites

[04:21:01.0000] <annevk>
dekiss: what do you want to learn about?

[04:21:02.0000] <dekiss>
adn web apps

[04:21:07.0000] <dekiss>
web dev

[04:21:28.0000] <annevk>
dekiss: web dev edition would be a good start, but also e.g. https://developer.mozilla.org/en-US/ has good introductions to many topics

[04:21:40.0000] <dekiss>
man you know if firefox chrome need workers? :D

[04:21:48.0000] <dekiss>
I can even clean monitors hahah :D

[04:21:58.0000] <dekiss>
but web dev monitors

[04:22:18.0000] <annevk>
dekiss: http://careers.mozilla.org/en-US/

[04:22:26.0000] <dekiss>
annevk I am not sure why I cant find list for all meta name atribbute values

[04:22:34.0000] <dekiss>
on whatwg.org

[04:22:55.0000] <annevk>
dekiss: http://wiki.whatwg.org/wiki/MetaExtensions

[04:23:45.0000] <annevk>
dekiss: also http://www.whatwg.org/C#standard-metadata-names (blessed by the HTML standard)

[04:23:56.0000] <dekiss>
ok thanks annevk

[04:24:17.0000] <dekiss>
how you found them

[04:24:18.0000] <dekiss>
i coudlnt :S

[04:25:23.0000] <annevk>
i know, basically

[04:25:52.0000] <annevk>
but the latter you can find by searching for "meta element" within the HTML standard and then clicking on the "name" attribute and then scrolling down

[04:25:58.0000] <annevk>
and I think at some point that links to the former

[04:26:25.0000] <dekiss>
ok

[04:26:26.0000] <dekiss>
thanks

[04:30:08.0000] <dekiss>
so DOM is developed at whatwg too?

[04:30:12.0000] <dekiss>
I thought its w3c thing

[04:31:02.0000] <boogyman>
the DOM is developed by implementers, the specification is co-authored by whatwg and w3c

[04:31:53.0000] <dekiss>
hm

[04:31:58.0000] <dekiss>
now im totaly lost

[04:32:05.0000] <dekiss>
co-authored what it means?

[04:32:15.0000] <annevk>
I write the DOM spec here: http://dom.spec.whatwg.org/

[04:32:19.0000] <JibberJim>
co = lots of arguments

[04:32:23.0000] <dekiss>
shoudl I read about DOM at whatwg or w3c

[04:32:36.0000] <JibberJim>
dekiss: Somewhere else

[04:32:37.0000] <annevk>
It's not currently being actively forked by the W3C.

[04:32:53.0000] <dekiss>
so at whatwg website I should read DOM right?

[04:33:01.0000] <annevk>
yes

[04:33:19.0000] <dekiss>
thanks annevk

[04:33:42.0000] <darobin>
it might not even be forked, just republished under RF :)

[04:34:04.0000] <dekiss>
ever gona be dom 4?

[04:34:11.0000] <annevk>
yes that'd be ideal

[04:34:21.0000] <annevk>
dekiss: dunno, versioning is kind of a concept of the past

[04:34:30.0000] <dekiss>
annevk

[04:34:38.0000] <dekiss>
I have one very big concern about html5

[04:35:06.0000] <dekiss>
first of all, all major website lets say: CNN, FAceook use only divs.. not single html5 element (header footer section)

[04:35:18.0000] <boogyman>
dekiss: wrong

[04:35:22.0000] <dekiss>
second, it is MUCH harder to make same website with html5 semantic elements

[04:35:24.0000] <dekiss>
than divs

[04:35:30.0000] <dekiss>
boogyman true check it

[04:35:32.0000] <boogyman>
wrong again

[04:35:34.0000] <dekiss>
now conclusion

[04:35:41.0000] <dekiss>
why should I sue html5 semantic elements?

[04:35:48.0000] <dekiss>
just for impaired people or?

[04:35:54.0000] <annevk>
dekiss: you should definitely sue them

[04:36:05.0000] <dekiss>
third, does impaired people have A LOT of benefit if I use html5 semantic elements?

[04:36:06.0000] <annevk>
dekiss: using them, is really up to you ;)

[04:36:26.0000] <dekiss>
I plan (and I will) test how much really impaired peopel benefit from html5 semantic elemnts

[04:36:30.0000] <dekiss>
because they are HELL

[04:36:46.0000] <dekiss>
I mean very harder to do same things with them than with divs

[04:37:00.0000] <dekiss>
but if they help imapired people alot I will use them no mater how hard they are

[04:37:20.0000] <dekiss>
annevk but you know exaclty how much impaired peopel benefit from them?

[04:37:26.0000] <boogyman>
dekiss: accessibility devices don't care about the "semantic" elements, they care about having the appropriate context, which are provided with some of the "new" tags, but are still applicable for override using the WAI-ARIA attributes

[04:37:39.0000] <dekiss>
because as I see I should use them only for impaired peoiple

[04:38:00.0000] <dekiss>
boogyman WRONG

[04:38:38.0000] <annevk>
dekiss: he's correct actually

[04:38:45.0000] <dekiss>
well

[04:38:47.0000] <dekiss>
how come

[04:38:50.0000] <annevk>
dekiss: search engines might have some benefit too

[04:39:02.0000] <dekiss>
I read everywhere that html5 semantic elements help impaired people :S

[04:39:10.0000] <dekiss>
now I am totally lost pls exaplin to me

[04:39:15.0000] <annevk>
dekiss: the elements map onto semantics exposed by the assistive technology

[04:39:38.0000] <annevk>
dekiss: boogyman is basically saying that, maybe in a different way than you understand ;)

[04:40:12.0000] <dekiss>
man I understand this, when blind person read my page with speech or touch device he sees nav tag and he knows its menu

[04:40:28.0000] <dekiss>
but I wonder if I put div with id="menu" I think he will know what it is

[04:40:30.0000] <dekiss>
..

[04:40:38.0000] <dekiss>
so they benefit from them or not pls exaplin

[04:40:40.0000] <dekiss>
aw

[04:40:49.0000] <dekiss>
why should I use html5 semnatic elements than

[04:41:07.0000] <dekiss>
its much harder to make website with them and noone uses them I havent seen single page with them

[04:41:21.0000] <dekiss>
look cnn.com and facebook.com websites

[04:41:47.0000] <boogyman>
dekiss: example <ol role="navigation"><li><a href="/">home</a></li></ol> can be written like the following <nav><a href="/">home</a></nav>. the "role=navigation" is now implied due to the behind-the-scenes mapping the element has for the accessibility-enabled device.

[04:42:34.0000] <annevk>
dekiss: large sites are slow adopters, but you'll see they switched doctypes

[04:42:45.0000] <dekiss>
I saw annevk

[04:42:47.0000] <dekiss>
but

[04:43:03.0000] <dekiss>
I am totally lost if not for imapired people then why should I use html5 elements

[04:43:16.0000] <dekiss>
I find them useless ( some of them) other than that

[04:43:31.0000] <dekiss>
and its much harder for meto make website with them (some of them) not all

[04:43:56.0000] <dekiss>
if I make standard website okwith header footer etc but If I go with something different div is my friend

[04:44:05.0000] <annevk>
dekiss: people using assistive technology (not sure I like the term impaired) will benefit is what we're saying

[04:44:06.0000] <boogyman>
dekiss: Authors are encouraged to use the semantically appropriate tag, but are not forced to do so.

[04:44:18.0000] <annevk>
dekiss: SteveF can tell you more, we're breaking up for lunch

[04:44:46.0000] <dekiss>
annevk man once you said they will not once you say they will -_-

[04:44:48.0000] <dekiss>
im totally lost now

[04:45:00.0000] <dekiss>
ok

[04:45:46.0000] <dekiss>
guys yo ugot me lost now pls help me

[04:45:49.0000] <annevk>
dekiss: I never said they won't ;-) As I said, you might not have understood all the terminology yet. I'd suggest reading up on things a bit more and generally absorb all the things ;-)

[04:46:05.0000] <dekiss>
once yo usaid people wit hassisitive technology will benefit from html5 semantic elements and once you said they will not :S

[04:46:17.0000] <dekiss>
hm

[04:46:19.0000] <dekiss>
ok..

[04:47:09.0000] <webben>
dekiss: 'but I wonder if I put div with id="menu" I think he will know what it is' : no, browsers + assitive technology will present that exactly the same as any other div

[04:47:10.0000] <boogyman>
dekiss: annevk said that large sights are slow adopters, meaning that it will take them longer to implement, not that they will not implement.

[04:47:20.0000] <SteveF>
dekiss: depending on the browser use of HTML elements such as header/footer/aside etc are exposed to AT as landmarks which is useful

[04:47:49.0000] <dekiss>
webben assistive tech. will not tell man that div has id with value "menu"?

[04:47:58.0000] <webben>
dekiss: id just creates a unique label for an element in a document, user software doesn't assume those labels have any special meaning

[04:48:02.0000] <dekiss>
nah I will try this assistive tech. and see my self

[04:48:09.0000] <webben>
and it doesn't normally present them to the end user

[04:48:11.0000] <dekiss>
thats only true way to find out how really people benefit

[04:48:22.0000] <dekiss>
any guide what assitive technology people use?

[04:48:37.0000] <dekiss>
to read websites? is that software I guess or maybe hardware too?

[04:48:42.0000] <webben>
dekiss: Bear in mind that AT is complicated to learn.

[04:49:01.0000] <dekiss>
webben it is ok I want to know this so I will learn it

[04:49:03.0000] <webben>
So you may get quite a confused idea of how it works if you don't have a bit of time to invest into learning it

[04:49:12.0000] <webben>
dekiss: What platform are you on?

[04:49:17.0000] <dekiss>
I keep at "web for all": thing :)

[04:49:31.0000] <dekiss>
that s he point of web if you ask me its mission

[04:49:34.0000] <dekiss>
and should be !

[04:50:02.0000] <webben>
That's laudable - what I'm warning you is that you may come to false beliefs about what AT can or cannot do or what is or is not useful because of your lack of knowledge of the software in question

[04:50:13.0000] <SteveF>
dekiss: this http://www.html5accessibility.com/ covers support for various aspects of new html5 features, but it needs updating, there have been some improvements since last spetmebr

[04:50:34.0000] <webben>
dekiss: Are you on Mac/*nix/Windows?

[04:51:18.0000] <dekiss>
webben im on Windows

[04:51:20.0000] <dekiss>
7

[04:51:48.0000] <webben>
dekiss: http://uiaccess.com/accessucd/ http://www.nvaccess.org/

[04:51:49.0000] <dekiss>
webben I am going to lear this AT thing :)

[04:52:14.0000] <dekiss>
tyhanks all for info guys

[04:52:30.0000] <boogyman>
btw, welcome to web development :D

[04:52:32.0000] <dekiss>
hope I wont get banned here too I managed to be ignored/muted/banned on most of freenode channels in a day or two :D

[04:52:37.0000] <dekiss>
heheh -_-

[04:52:40.0000] <dekiss>
thanks again

[04:53:02.0000] <boogyman>
dekiss: if you are not rude, then you are welcome

[04:53:06.0000] <dekiss>
boogyman thanks nice to meet you :F

[04:53:07.0000] <dekiss>
:D

[05:08:59.0000] <ondras>
hi

[05:09:18.0000] <ondras>
I am looking for some rather advanced assistance with CORS

[05:09:26.0000] <ondras>
is this a suitable channel, or are there any better?

[05:09:49.0000] <ondras>
more specifically, I am running into issues with credentialed requests and 302 redirects

[05:09:59.0000] <ondras>
(basically this does not work at all, both ff & chrome)

[05:10:16.0000] <dekiss>
cors are for letting xss

[05:10:23.0000] <dekiss>
you knwo right?

[05:10:25.0000] <dekiss>
:)

[05:10:32.0000] <dekiss>
why its not working

[05:10:57.0000] <ondras>
my guess that 302 sets Origin:null to the second request (as per the spec)

[05:11:05.0000] <ondras>
and this does not work with credentialed requests

[05:11:08.0000] <ondras>
or something like that.

[05:11:22.0000] <ondras>
chrome reports "Cannot make any requests from null. "

[05:11:36.0000] <ondras>
(which does not appear when I redirect a non-credentialed xhr)

[05:12:13.0000] <dekiss>
aw

[05:12:26.0000] <dekiss>
sry man Ihave some job and some problems myself I guess omeone wil lhelkp you

[05:12:31.0000] <dekiss>
try #html #html5 too

[05:12:37.0000] <dekiss>
also try #javascript

[05:12:50.0000] <dekiss>
I think guys from javascript chn will help you try there pls

[05:12:51.0000] <ondras>
I would appreciate some w3c member or so

[05:13:00.0000] <dekiss>
try #html

[05:13:08.0000] <dekiss>
im not from whatwg btw :)

[05:13:15.0000] <dekiss>
some guys here are

[05:14:20.0000] <Ms2ger>
annevk, CORS questions

[05:19:28.0000] <dekiss>
web browser creators must use html specifications standards from w3c or its up to them?

[05:27:41.0000] <jgraham>
web browser creators can do whatever they like, mostly

[05:28:10.0000] <jgraham>
I mean it's not like W3C can send in darobin to break their fingers if they use a WHATWG spec

[05:28:19.0000] <dekiss>
:D

[05:28:20.0000] <dekiss>
ok thanks

[05:28:33.0000] <dekiss>
so the yare recommendations liek they say :)

[05:28:35.0000] <dekiss>
ok

[05:28:36.0000] <jgraham>
Or invent a whole new proprietary platform that runs in their browser

[05:28:38.0000] <dekiss>
but why all use them

[05:28:52.0000] <dekiss>
hm ok

[05:28:56.0000] <dekiss>
so xhtml 2 was shame? :D

[05:29:07.0000] <dekiss>
so w3c adopted html5 to hide that shame? :D

[05:29:10.0000] <dekiss>
hehehe

[05:29:22.0000] <dekiss>
becasue xhtml didnt succeed at all?

[05:30:48.0000] <annevk>
Ms2ger: yes?

[05:30:58.0000] <ondras>
annevk: hi

[05:31:07.0000] <darobin>
well

[05:31:08.0000] <ondras>
14:12 < ondras> more specifically, I am running into issues with credentialed requests and 302 redirects

[05:31:13.0000] <ondras>
14:12 < ondras> (basically this does not work at all, both ff & chrome)

[05:31:20.0000] <darobin>
I do enjoy a pretext to break someone's fingers

[05:31:31.0000] <annevk>
ondras: the redirect itself needs to opt in, are you doing that?

[05:31:33.0000] <dekiss>
darobin you have muscles?

[05:31:49.0000] <darobin>
dekiss: enough to operate some plyers, yes

[05:31:57.0000] <dekiss>
:)

[05:32:00.0000] <ondras>
annevk: what do you mean by "opt in"? it is a normal http/302 with correct access-control-... response headers

[05:32:09.0000] <ondras>
annevk: but it redirects to another, "3rd" domain

[05:32:23.0000] <ondras>
(1st being the JS one, 2nd being the one originally requested)

[05:33:19.0000] <jgraham>
darobin: I guess all that free milk makes the google guys harder to intimidate.

[05:33:27.0000] <annevk>
ondras: so the request is credentialed, does it require a preflight?

[05:33:34.0000] <ondras>
no

[05:33:43.0000] <ondras>
it is a GET with a custom Accept, so a Simple request

[05:34:03.0000] <annevk>
and the 302 resource has both Access-Control-Allow-Origin and Access-Control-Allow-Credentials set?

[05:34:04.0000] <darobin>
jgraham: ah, but they forget I worked in the Netherlands

[05:34:13.0000] <darobin>
over there, they shove milk in your face all day long

[05:34:25.0000] <ondras>
annevk: yes, but the redirected request has Origin: null

[05:34:28.0000] <ondras>
annevk: which is correct per spec

[05:34:29.0000] <dekiss>
so why faken IE is ruinning the web?

[05:34:31.0000] <dekiss>
any idea?

[05:34:39.0000] <ondras>
annevk: but causes "Cannot make any requests from null. " in Chrome

[05:34:45.0000] <ondras>
(and fails silently in FF)

[05:34:45.0000] <dekiss>
pls tell microsoft guys to stop sucking thanks in advance

[05:34:49.0000] <dekiss>
sry I had to do it :)

[05:35:00.0000] <annevk>
ondras: aah, is the final response Access-Control-Allow-Origin: null ?

[05:35:13.0000] <ondras>
annevk: should be?

[05:35:15.0000] <ondras>
will try in a sec

[05:35:23.0000] <annevk>
ondras: it needs to match the Origin header

[05:35:35.0000] <zcorpan>
Hixie: https://www.w3.org/Bugs/Public/show_bug.cgi?id=15588

[05:35:38.0000] <dekiss>
anyway I never understood why Bill Gates want to ruin the IT technology if its not profitable for him

[05:35:47.0000] <annevk>
ondras: but yes, that's an annoying edge case implementations might not do correctly :/

[05:35:50.0000] <ondras>
annevk: yeah, looks like this worked (at least in ff)

[05:35:55.0000] <ondras>
annevk: let me try in chrome as well

[05:35:55.0000] <annevk>
ondras: cool

[05:36:12.0000] <ondras>
annevk: fails in chrome, apparently

[05:36:18.0000] <ondras>
 Cannot make any requests from null.

[05:36:22.0000] <annevk>
if you could file a bug on them that'd be great

[05:36:26.0000] <ondras>
(the request itself happens)

[05:36:32.0000] <annevk>
abarth et al should just fix that

[05:36:47.0000] <ondras>
annevk: will try, but it is hard for me to make them a simple testcase

[05:37:07.0000] <ondras>
annevk: also, this issue does not happen if the requested and 302ed resource share origin

[05:37:21.0000] <annevk>
ondras: if you file a bug and explain the redirect thing that should be sufficient

[05:37:26.0000] <annevk>
ondras: feel free to name drop me

[05:37:30.0000] <annevk>
ondras: may or may not help

[05:38:10.0000] <ondras>
annevk: also, does the 302ed resource need to return the Credentials header?

[05:38:39.0000] <annevk>
ondras: per spec, yes

[05:38:55.0000] <annevk>
ondras: http://fetch.spec.whatwg.org/#cors-check

[05:39:49.0000] <ondras>
okay, thanks

[05:39:59.0000] <ondras>
will double-check my testcase and report chrome bug

[05:40:02.0000] <ondras>
also, let me test opera

[05:40:17.0000] <ondras>
...fails

[05:40:24.0000] <annevk>
Clone Opera is Chrome

[05:40:32.0000] <annevk>
Rebel Opera would prolly pass

[05:41:20.0000] <ondras>
this one is a very old Opera

[05:41:29.0000] <ondras>
probably from the times of the old republic

[05:41:31.0000] <ondras>
12.x or so

[05:47:03.0000] <ondras>
annevk: If the value of the header whose name is Access-Control-Allow-Origin within response's headers is true, return success.

[05:47:11.0000] <ondras>
annevk: probably a typo - should be "Credentials" ?

[05:49:40.0000] <dekiss>
at devices will read only html code not css and javascript at all?

[05:50:04.0000] <boogyman>
dekiss: don't double post

[05:50:53.0000] <EvilMachine>
Hello! So… how complete is the developers spec? I don’t want to miss out on even a single thing relevant to developers, so I would need it to be complete.

[05:51:12.0000] <annevk>
ondras: thanks

[05:51:25.0000] <annevk>
ondras: you want to be credited as "Ondra Zara"?

[05:52:05.0000] <ondras>
annevk: Ondrej Zara, probably, but no need for this credit

[05:52:32.0000] <annevk>
ondras: if there's a non-ASCII spelling that's fine too

[05:52:41.0000] <ondras>
Ondřej Žára

[05:52:45.0000] <annevk>
ondras: awesome

[05:53:20.0000] <dekiss>
EvilMachine go away

[05:53:23.0000] <dekiss>
he came here too -_-

[05:53:37.0000] <dekiss>
this dude called me idiot trying to help him :| good luck helping him haha

[05:54:02.0000] <Ms2ger>
Be nice.

[05:54:04.0000] <dekiss>
boogyman ok but ansewr me pls

[05:54:10.0000] <dekiss>
ok

[05:54:18.0000] <dekiss>
im he is not :S

[05:54:35.0000] <annevk>
EvilMachine: it's synced every month or so, so it's a bit behind http://whatwg.org/C

[05:55:06.0000] <annevk>
ondras: https://github.com/whatwg/fetch/commit/2038f66dcbe7d108a5fcb2c0c5f55b98319b7d07

[05:55:06.0000] <boogyman>
dekiss: again rude. it's generally poor etiquette to discuss "bad" things across channels. leave it in the channel.

[05:55:18.0000] <dekiss>
ok

[05:55:43.0000] <dekiss>
man he called me idiot for helping him not beign hacked :D

[05:55:44.0000] <Ms2ger>
<p class="pubdate">23 November 2012</p> seems to suggest a bit less than every month

[05:55:53.0000] <Ms2ger>
dekiss, leave it.

[05:55:54.0000] <dekiss>
boogyman any idea about my question dude?

[05:56:11.0000] <boogyman>
i answered it in #css

[05:56:18.0000] <dekiss>
oh sry let me see

[05:56:50.0000] <dekiss>
um

[05:56:51.0000] <ondras>
annevk: nice, thanks a lot and thanks for general assistance. going to file a chrome bug now and wait patiently :)

[05:57:02.0000] <dekiss>
at devices interpret dom changes with scripts?

[06:06:22.0000] <EvilMachine>
annevk: Ah, so since the normal HTML5 spec is already a CR, and hence stable enough to use, the dev spec is too.

[06:06:32.0000] <EvilMachine>
annevk: Thanks. :) That anwered my question.

[06:07:07.0000] <EvilMachine>
By the way: How come the spec reads like the instructions for the Holy Handgrenade? ;)

[06:08:24.0000] <annevk>
EvilMachine: we like Monty Python

[06:08:37.0000] <EvilMachine>
annevk: I cannot possibly disagree with that. ;)

[06:09:03.0000] <matjas>
hmm, since <title> may be omitted in HTML5, is `<html xmlns="http://www.w3.org/1999/xhtml"/>` the shortest possible XHTML5 document?

[06:09:31.0000] <matjas>
(if the document is an iframe srcdoc document or if title information is available from a higher-level protocol)

[06:11:00.0000] <annevk>
matjas: sounds plausible

[06:12:16.0000] <Ms2ger>
/me wonders if head/body are required

[06:12:35.0000] <Ms2ger>
Looks like they are

[06:14:23.0000] <EvilMachine>
;)

[06:19:23.0000] <EvilMachine>
Why does it say “October 2012” in the title of http://www.w3.org/TR/html5-author/ ? Is this not that “updated monthly” thing you were talking about?

[06:19:50.0000] <EvilMachine>
annevk:

[06:19:57.0000] <EvilMachine>
annevk:  ↑

[06:20:10.0000] <annevk>
EvilMachine: you want http://developers.whatwg.org/

[06:20:41.0000] <EvilMachine>
annevk: Aaah, alright.

[06:23:39.0000] <EvilMachine>
Oh-oh. “Living standard”… sound like “there will be no stability, and nobody can trust on any feature being reliably how he expects it to be”… I’m sure it wasn’t intended that way, because that would mean using huge amounts of time to keep up to date…

[06:24:11.0000] <EvilMachine>
/me checks the FAQ first.

[06:25:31.0000] <EvilMachine>
Hmm… it seems I can keep track of the “defined” spec. Not the “is actually implemented” (as in post-candidate-recommendation) spec…

[06:26:05.0000] <EvilMachine>
But that makes everything a mess. :(

[06:26:26.0000] <zewt>
(there are lots of things implemented that aren't in "CR" ...)

[06:26:38.0000] <EvilMachine>
zewt: Exactly my point.

[06:27:00.0000] <zewt>
no, "actually implemented" is not the same as "post CR"

[06:27:14.0000] <EvilMachine>
zewt: Also exactly my point.

[06:27:17.0000] <zewt>
...

[06:27:28.0000] <zewt>
what? heh

[06:27:40.0000] <Ms2ger>
Sounds like someone makes a lot of exact points

[06:27:41.0000] <EvilMachine>
zewt: My point is, that everything is different and I can rely on nothing. ^^

[06:27:54.0000] <EvilMachine>
Actually: s/^^/:(/

[06:28:10.0000] <Ms2ger>
You can rely on everything that has been implemented and is used

[06:28:20.0000] <Ms2ger>
You can't rely on anything else

[06:28:23.0000] <zewt>
anyway, you equated "actually implemented" with "CR", which is inaccurate so I'm just explaining the difference (implemented is a superset of CR)

[06:28:32.0000] <EvilMachine>
Ms2ger: Until it changes. Which is *all the time*.

[06:28:57.0000] <EvilMachine>
zewt: Ah, okay, yes, you are of course right.

[06:29:25.0000] <zewt>
and looking at text based on CR specs is definitely not a good way to get up-to-date info

[06:29:41.0000] <EvilMachine>
zewt: You don’t say. ;)

[06:30:02.0000] <annevk>
EvilMachine: living standards are basically better than what we had before, but no silver bullet

[06:30:16.0000] <jgraham>
No, you really can't rely on anything. Just ask David Hume.

[06:30:18.0000] <annevk>
EvilMachine: stability boxes on the side help

[06:30:45.0000] <EvilMachine>
annevk: I don’t like it when people say thing like „better“ without saying why, though. ^^

[06:31:00.0000] <annevk>
EvilMachine: I was hoping you'd read the FAQ for that

[06:31:19.0000] <EvilMachine>
annevk: Ah… Well, that’s an ongoing process too. XD

[06:31:27.0000] <annevk>
EvilMachine: in short, it better reflects the way software is developed and therefore the cycles between software and standards are shorter

[06:32:48.0000] <EvilMachine>
annevk: Being a developer too, I have to agree. But as a user the whole point of a standard is, that it is reliable (= non-changing).

[06:33:08.0000] <zewt>
as a user (developer of software on the web), I disagree

[06:33:27.0000] <EvilMachine>
annevk: In short: What do I develop my site against? I have no idea what to pick now.

[06:33:41.0000] <zewt>
as a user specs are merely documentation for interfaces

[06:33:58.0000] <EvilMachine>
zewt: spec ≠ standard

[06:34:04.0000] <zewt>
uhh

[06:34:08.0000] <annevk>
EvilMachine: typically people develop their sites against implementations, but you could develop it against the stable pieces of the HTML Living Standard (identified by the boxes)

[06:34:17.0000] <jgraham>
When was the web ever non-changing?

[06:34:18.0000] <annevk>
EvilMachine: you'll be better off than with HTML4

[06:34:53.0000] <EvilMachine>
zewt: What I meant was: Yes, a spec is merely a documentation. Correct. A standard is more though, as it is a stable reliable point too. :)

[06:35:10.0000] <annevk>
EvilMachine: typically that's a lie for software standards

[06:35:30.0000] <zewt>
i disagree with the distinction but I'm not really interested in debating a tangental semantic, heh

[06:36:36.0000] <EvilMachine>
annevk:  "typically people develop their sites against implementations" – What? No! That is really really wrong! Nobody should *ever* write a website for a specific browser. Otherwise we end up in a “Best read in IE” world again.

[06:37:10.0000] <Ms2ger>
There's a difference between what happens and what should happen

[06:37:25.0000] <zewt>
if you want to know what actually works in browsers, and which versions of browsers, and how well-deployed that version is, you're always going to need extra resources (things like caniuse) and testing (even "CR" has never meant "implemented in every browser")

[06:37:39.0000] <EvilMachine>
annevk: How is it a lie? You mean when browser developers can’t properly implement a standard if their lives depended on it? ;)

[06:37:41.0000] <Ms2ger>
As you might have noticed, we already are in the "You can only use Chrome" world

[06:38:14.0000] <annevk>
Ms2ger: don't make it more confusing than it needs to be

[06:38:42.0000] <annevk>
EvilMachine: it means that while we implement we find things that need changing

[06:38:45.0000] <jgraham>
I am confident that browser vendors couldn't correctly implement standards if their life depended on it

[06:38:53.0000] <EvilMachine>
Ms2ger: Then you live in another universe than I do. Such a site never ever flies in practice. My clients would never accept a site that only runs in one browser.

[06:39:00.0000] <jgraham>
Not least because in that situation no one would work for a browser vendor

[06:39:10.0000] <annevk>
And yes, what jgraham says is also the sad truth. Implementing is hard.

[06:39:18.0000] <zewt>
you seem to be suggesting either 1: all browser vendors release versions in lockstep, implementing features at exactly the same time, or 2: the web implements a set of features, then stops, and we can never add anything because it would cause differing feature sets; obviously both are nonsense

[06:39:19.0000] <EvilMachine>
annevk: I’m not easily confused. Don’t worry. :)

[06:39:20.0000] <jgraham>
and there would be so much red tape that no new things would happen

[06:39:32.0000] <jgraham>
and the web platform would calcify and become irrelevant

[06:39:39.0000] <jgraham>
and there would be no more browser vendors

[06:39:46.0000] <Ms2ger>
EvilMachine, that must be the case, then

[06:39:55.0000] <EvilMachine>
annevk: Yes, that’s why there is a version number for a standard. The changes get into the next version.

[06:40:17.0000] <annevk>
EvilMachine: as an implementor, I want them integrated next hour

[06:42:39.0000] <zewt>
as a user, i sure don't want to wait a year and a half for a giant cycle of spec update, spec ratification, then wait for a long browser update cycle to catch up (which is exactly what we had, which is a trap we've finally, for the most part, broken out of)

[06:43:32.0000] <annevk>
note also that the browser sometimes cannot implement the spec because it has a bug, so it needs to be fixed

[06:43:36.0000] <annevk>
e.g. HTML4 has plenty of bugs

[06:43:39.0000] <EvilMachine>
zewt: No, that wasn’t what I suggested. Let me clarify: I suggested that as a developer,  I get a new version of a standard every year (or more), which I can actually use, since I can trust that until the end of said cycle, browsers will always try the best they can to behave that way. If I can’t trust on that, the spec/standard/api becomes useless.

[06:43:43.0000] <zewt>
also it avoids the mistake of assuming all features on the web are developed together, in a specific, predictable order, which is what versioning assumes

[06:44:24.0000] <zewt>
your conclusion is plainly wrong (since the specs and APIs are extraordinarily useful)

[06:44:34.0000] <EvilMachine>
jgraham: I think you may be hallucinating. ^^

[06:45:09.0000] <EvilMachine>
jgraham: Or will the world end and satan will come with its Trident to smite us all? ;)

[06:45:50.0000] <jgraham>
I might be. Who knows? Not me! I might have imagined this whole thing!

[06:46:05.0000] <zewt>
worktime

[06:46:25.0000] <EvilMachine>
zewt: If it is not predictable what an API does, there is no API. There is only useless chaos.

[06:46:28.0000] <jgraham>
But in either case your ideas don't really fit in with the reality I percieve

[06:48:02.0000] <EvilMachine>
In simple plain words that hit the core of the problem: It seems I cannot know, what Document.someFunction() does, one hour from now. I simply can’t. Which means I can’t use it. Which means the thing is dead. (Yes, please correct me because I hope I’m horribly horribly wrong. :)

[06:48:50.0000] <EvilMachine>
(Or what <sometag someattribute="somevalue"/> does in one hour.)

[06:49:12.0000] <EvilMachine>
How could I possibly program code that way?

[06:49:52.0000] <Ms2ger>
Take <div></div>

[06:49:58.0000] <Ms2ger>
Do you know what it does?

[06:51:23.0000] <EvilMachine>
Ms2ger: Trick question. Tags don’t do stuff. They define/markup/represent stuff. And: Bad example, since it’s a generic block element.

[06:51:28.0000] <EvilMachine>
^^

[06:51:54.0000] <Ms2ger>
"(Or what <sometag someattribute="somevalue"/> does in one hour.)"

[06:52:00.0000] <jgraham>
document.body then

[06:52:34.0000] <jgraham>
What does that do

[06:52:34.0000] <Ms2ger>
Bad example, I've got a patch in my tree to change how it works in Gecko

[06:52:35.0000] <jgraham>
?

[06:52:44.0000] <EvilMachine>
Let’s use the <img> element (or any other one with semantic meaning).

[06:52:58.0000] <jgraham>
Ms2ger: I bet your patch doesn't make it a bad example

[06:53:02.0000] <Ms2ger>
:)

[06:53:08.0000] <jgraham>
I bet it makes it a good example in fact

[06:53:34.0000] <EvilMachine>
jgraham: Are you two in love? :D

[06:53:49.0000] <jgraham>
Unless you change document.body to, say, make the computer emit a high pitched squeek that attracts dogs

[06:53:56.0000] <Ms2ger>
So, tell me, what does <img src=foo.png> do?

[06:53:59.0000] <Ms2ger>
jgraham, bingo!

[06:54:57.0000] <jgraham>
EvilMachine: Let's say, for the sake of argument, that you believe that document.body returns the body element of the document (where I leave "the" to be defined)

[06:55:44.0000] <jgraham>
And a crazy spec author decides that document.body should, when accessed, cause the computer to attract local dogs

[06:55:53.0000] <jgraham>
Because "living spec"

[06:56:00.0000] <EvilMachine>
Ms2ger: That’s exactly my point. With a proper standard, I can look up what it does. (Or at least what I can expect it to do. [Or file a bug otherwise]. With a living standard, I have no freaking idea, as in ten seconds it could  load the picture from a completely different server and display it upside down.

[06:56:35.0000] <jgraham>
And a mysterious UA implementor like Ms2ger actually goes ahead and implements that spec

[06:56:43.0000] <webben>
EvilMachine: Well the web isn't built that way … so… there is no "proper standard" like that.

[06:57:05.0000] <jgraham>
And somehow manages to land the change

[06:57:06.0000] <EvilMachine>
jgraham: HTML doesn’t do that. CSS’s aural/voice properties can be used to do that dog thing. ^^

[06:57:17.0000] <jgraham>
What do you expect to happen next?

[06:57:34.0000] <jgraham>
(sure HTML does that. bgsound has played sound for decades)

[06:57:39.0000] <EvilMachine>
webben: That sentence, all by itself, meant absolutely nothing.

[06:57:50.0000] <webben>
/me shrugs

[06:58:33.0000] <EvilMachine>
jgraham: Presentational markup is not proper HTML and was a PHB abomination that should never have existed.

[06:59:11.0000] <webben>
EvilMachine: Spec compliance isn't a major goal for browser vendors in and of itself. Compatibility with significant deployed content is.

[06:59:34.0000] <EvilMachine>
So what about my point above: Yes, I do in fact have absolutely no idea what the <img src=foo.png> does, an hour from now. That’s my problem.

[06:59:44.0000] <webben>
EvilMachine: Specs are useful to browser vendors mainly to avoid the reverse engineering involved in compatibility.

[07:00:00.0000] <webben>
EvilMachine: Actually induction gives you a very sound guide to what it will do.

[07:00:02.0000] <jgraham>
EvilMachine: Sigh. Are you trolling?

[07:00:35.0000] <EvilMachine>
webben: That *couldn’t* be more ass-backwards, since “deployed” content *is* based on specs.

[07:01:10.0000] <EvilMachine>
jgraham: No? Are you?

[07:01:16.0000] <webben>
EvilMachine: Very little deployed content is written to spec.

[07:01:46.0000] <gsnedders>
Most deployed content is written to "well, this works in IE and Chrome".

[07:02:05.0000] <EvilMachine>
I know I‘ve apparently hit a wound here. I really am that unsure regarding knowing what things do though. :/

[07:02:11.0000] <webben>
EvilMachine: Anyway, regardless of how "backwards" you think it is, it's clearly the case that you have good reason <img src=foo.png"> will work much the same an hour from now as before.

[07:03:20.0000] <webben>
*good reason to think

[07:03:36.0000] <EvilMachine>
webben: And why is it? Because it *can*. Which is exactly because browser makers allowed the horrible mess through instead of throwing an error on detectable misusage or let the site maker suffer the consequences on non-detectable ones, like with every other compiler/interpreter on the planet.

[07:03:47.0000] <jgraham>
EvilMachine: So since apparently the "follow along at home" approach isn't working:

[07:04:12.0000] <jgraham>
The real forces that act on the web are not standards

[07:04:31.0000] <jgraham>
They are market pressures, and the need to keep functioning with deployed content

[07:04:46.0000] <gsnedders>
EvilMachine: Whether or not that should've been done 20 years ago is irrelevant — the market won't allow it now.

[07:04:47.0000] <EvilMachine>
webben: Actually, the point of the „living standard” is apparently exactly that I don’t have good reason to expect that.

[07:04:52.0000] <webben>
EvilMachine: Again, because the major driver is allowing users to access deployed content.

[07:04:53.0000] <jgraham>
If someone arbitarily started changing the way things work sites would break

[07:04:58.0000] <SteveF>
EvilMachine: note if you  use the W3C HTML validation service http://validator.w3.org/ to check your code, then the HTML 5.1  Nightly http://www.w3.org/html/wg/drafts/html/master/Overview.html contains the corresponding rule set

[07:05:17.0000] <jgraham>
Vendors spend a lot of time and effort making sure not to change things in ways that would break the web

[07:05:38.0000] <jgraham>
Writing things down in specs is part of that effort

[07:05:57.0000] <jgraham>
So, to a certain extent you have the causality backwards

[07:06:16.0000] <jgraham>
Specs aren't a tool for dictating what happens

[07:06:42.0000] <EvilMachine>
jgraham: “market pressures“… Yeah, I noticed: The dumbest and loudest users are always the ones everything is adapted to. End result: iOS, MS Clippy, and other abominations of induced stupidity. But let’s not go there, the channel is already up in arms about my apparent heresy. ;)

[07:07:23.0000] <jgraham>
EvilMachine: You're not being heretical. But you aren't being very receptive to what you could be learning either

[07:08:08.0000] <gsnedders>
EvilMachine: The problem with making anything stricter is that a user can use browser version x (which isn't strict) or browser version x+1 (which is strict). If a website the user relies on only works in version x, are they going to upgrade to x+1?

[07:10:04.0000] <EvilMachine>
I’ll quiet down a bit now, since I see that we get nowhere. Instead of an answer to that problem, I only get empty phrases based on belief, emotional reactions (as if people would link their pride with this and hence I had attacked them personally), and “Are you trolling?” questions. I give up. But I expected more from you guys. :(

[07:10:42.0000] <zewt>
troll score: 1/10

[07:10:52.0000] <EvilMachine>
Case in point: ↑

[07:11:06.0000] <EvilMachine>
/me mutes himself.

[07:13:08.0000] <gsnedders>
EvilMachine: There's a fair bit of real data behind things like the above — it's just mostly held internally to the companies that collected it

[07:37:02.0000] <EvilMachine>
Okay. It’s decided.

[07:37:04.0000] <MikeSmith>
EvilMachine: I'd recommend using http://validator.w3.org/nu/ directly instead of http://validator.w3.org/

[07:37:07.0000] <EvilMachine>
After 15 years developing web applications (for market leaders among others), I will change businesses. Maybe Haskell. Maybe Android, if that isn’t also a “living mess”.

[07:37:24.0000] <EvilMachine>
The WhatWG mindset is certifiably insane. It seems you cannot even comprehend the problem with your approach. Like it’s a mental blind spot/taboo and every question about it gets avoided like it was never said because it *must be repressed, or we all couldn’t accept ourselves anymore and would have to hate ourselves*. In this super-defensive emotion-based way that quickly gets to personal attacks. As if you had built yo

[07:37:24.0000] <EvilMachine>
ur whole model of reality and self-acceptance on it. Also you always seem to assume binary black and white scenarios. If I think your approach is bad, you automatically assume I “side” with “the other” or “the opposing” approach, and strongly so, like small children do. In all this, you behave extremely similar to the stereotypical American.

[07:37:25.0000] <MikeSmith>
EvilMachine: for validation that SteveF mentioned

[07:37:36.0000] <EvilMachine>
If kids failed as math and physics, you guys would *change math and physics* to redefine their errors as “correct”. Motto: HTML(2+2=5). Besides: Chrome/Firefox/etc are textbook examples of the Inner Platform Anti-Pattern: Like Emacs, they are their own OSes now. If only the built-in browsers weren’t so shitty. ;) In this, you are very similar to the iOS/Ubuntu/Firefox/MSClippy/Win8 crowd of obsessive dumbward-spiralin

[07:37:37.0000] <EvilMachine>
g. (Mostly caused by lack of spine / individuality.)

[07:37:48.0000] <EvilMachine>
RIP WWW. It was nice while XHTML lasted.

[07:39:27.0000] <SteveF>
MIkeSmith: though they were the same for HTML5, what differences are there?

[07:39:35.0000] <SteveF>
thought

[07:39:57.0000] <MikeSmith>
SteveF: teh UI and options

[07:40:28.0000] <MikeSmith>
pluse the http://validator.w3.org/ does some preprocessing and postprocessing and introduces bugs when it does

[07:41:00.0000] <MikeSmith>
.win 12

[07:41:01.0000] <SteveF>
MikeSmoth: FYI in all TPG technical reports we point to http://validator.w3.org/nu/

[07:41:08.0000] <MikeSmith>
cool

[07:41:29.0000] <SteveF>
that should have been Mike's moth

[07:41:50.0000] <SteveF>
its my pet name for the validator

[07:44:46.0000] <Ms2ger>
I wonder if EvilMachine will find Haskell static enough for his liking

[07:45:34.0000] <jgraham>
Don't tell him that sometimes they update stuff

[07:45:49.0000] <jgraham>
And not everything is rigourously specced

[07:46:04.0000] <jgraham>
Using a pure waterfall model

[07:46:26.0000] <Ms2ger>
/me ponders the physics comparison

[07:46:58.0000] <Ms2ger>
If he'd been Einstein, would he have eliminated the relativistic effects from the universe rather than changing the textbooks?

[07:47:25.0000] <dekiss>
someone called for me?

[07:47:27.0000] <dekiss>
:D

[07:47:47.0000] <dekiss>
I think if Nikola TEsla didn't existed we woudln't had html5 and html at all

[07:48:05.0000] <dekiss>
we woudlnt even had comptuers not anything similar.. aalso lights etc

[07:48:07.0000] <Ms2ger>
No, I don't think anybody called, why?

[07:48:12.0000] <dekiss>
HAHAHA

[07:48:15.0000] <dekiss>
ok im off :D

[07:48:25.0000] <Ms2ger>
See you :)

[07:48:28.0000] <dekiss>
:))

[07:50:50.0000] <MikeSmith>
jgraham: btw, about the TTW Forward event in Tokyo, the tentative plan is to focus on writing tests for the input element and the "Dates and Times" section, because that's what http://www.w3.org/html/wg/tests-cr-exit.html indicates we need tests for. But I wanted to ask if you had other suggestions for what to focus on.

[07:51:16.0000] <MikeSmith>
I think there's probably not enough granularity in that http://www.w3.org/html/wg/tests-cr-exit.html list

[07:51:42.0000] <Ms2ger>
I think we established that that page is a lie

[07:52:41.0000] <MikeSmith>
OK, well then I'd really like to try to identify a couple other sections of the spec that the attendees coudl help write tests for

[07:53:03.0000] <MikeSmith>
anything come to mind?

[07:54:43.0000] <Ms2ger>
/me thinks

[07:55:04.0000] <jgraham>
Well the base url section just got fixed so it should be correct. If there's anyone you take a dislike to, get them to test that :)

[07:55:20.0000] <SteveF>
MikeSmith: worth a read http://accessibility.oit.ncsu.edu/blog/2013/05/31/screen-readers-at-a-crossroads/

[07:55:58.0000] <MikeSmith>
too bad Nikola TEsla's not alive to write tests for us, similar to the way he created light and computing

[07:56:08.0000] <MikeSmith>
SteveF: will take a look

[07:56:19.0000] <MikeSmith>
jgraham: OK

[07:56:34.0000] <Ms2ger>
form's named item can always use some more tests

[07:57:11.0000] <Ms2ger>
Interaction with tables / <input> and <img> with the same name / past names map

[07:57:25.0000] <MikeSmith>
Ms2ger: which section of the spec is form's named item?

[07:57:27.0000] <dekiss>
MikeSmith wqhat kind of tests

[07:57:36.0000] <Ms2ger>
The form element

[07:57:42.0000] <MikeSmith>
Ms2ger: OK

[07:58:03.0000] <Ms2ger>
/me wonders if anybody implemented cssElementMap

[07:58:19.0000] <jgraham>
It's hard to pick things

[07:58:19.0000] <MikeSmith>
dekiss: testing to see if we can send electric power through the air for free

[07:58:27.0000] <dekiss>
hah

[07:58:36.0000] <Ms2ger>
Document.currentScript? Is that implemented?

[07:58:43.0000] <dekiss>
write element that sends 1kw when you click it!

[07:58:49.0000] <jgraham>
I mean I know there are lots of untested things

[07:59:07.0000] <MikeSmith>
Ms2ger: I don't even knwo what that is

[07:59:10.0000] <Ms2ger>
Rendering could use a bunch

[07:59:12.0000] <dekiss>
document.sendElectricityTo("MikeSmith");

[07:59:24.0000] <jgraham>
Yeah, rendering is a good idea

[07:59:29.0000] <Ms2ger>
MikeSmith, me neither, I was just looking through the spec :)

[07:59:32.0000] <MikeSmith>
ah Rendering yeah

[08:00:02.0000] <jgraham>
Probably all the stuff in Obsolete features :)

[08:00:22.0000] <dekiss>
Ms2ger why you work in whatwg?

[08:00:32.0000] <dekiss>
I mean how you find time you have lot free time?

[08:00:36.0000] <Ms2ger>
Obsolete features is mostly reflection, which is covered by Aryeh's tests

[08:00:37.0000] <dekiss>
goof job yo udoing btw

[08:00:44.0000] <Ms2ger>
And document.all, which I don't want tests for

[08:00:50.0000] <jgraham>
Ms2ger: <applet> and <marquee>

[08:00:56.0000] <Ms2ger>
Mm

[08:01:04.0000] <Ms2ger>
Also not for people you like

[08:01:22.0000] <Ms2ger>
dekiss, I'm studying, so I still have some free time

[08:01:31.0000] <jgraham>
(also frames, but that's the general "document loading and navigation" stuff)

[08:02:21.0000] <Ms2ger>
Yeah, tests for <frame> would be nice

[08:02:41.0000] <Ms2ger>
We had some code coverage that showed that most lines of that code was hit about 4 times

[08:03:32.0000] <Ms2ger>
All the new stuff in canvas, I guess

[08:03:34.0000] <MikeSmith>
hard to motivate people to write tests for frames proabbly

[08:03:44.0000] <Ms2ger>
Fair :)

[08:03:58.0000] <MikeSmith>
canvas tests would be fun though

[08:04:05.0000] <jgraham>
MikeSmith: Threaten them with document.sendElectricityTo(victim)

[08:04:08.0000] <Ms2ger>
Is anything about http://www.whatwg.org/specs/web-apps/current-work/multipage/elements.html#wai-aria testable?

[08:04:46.0000] <MikeSmith>
Ms2ger: I think not

[08:04:52.0000] <jgraham>
I think it is

[08:05:00.0000] <jgraham>
But it's essentially aria tests

[08:05:01.0000] <MikeSmith>
really?

[08:05:15.0000] <MikeSmith>
not testable cross-browser in my experience

[08:05:19.0000] <jgraham>
Well I guess if aria doesn't actually have any requirements for UAs

[08:05:26.0000] <MikeSmith>
ah yeah

[08:05:53.0000] <jgraham>
Makes the sentence "User agents are required to implement ARIA semantics on all HTML elements, as defined in the ARIA specifications." a bit meaningless

[08:05:55.0000] <Ms2ger>
http://html5.org/tools/web-apps-tracker?from=7868&to=7869

[08:05:59.0000] <MikeSmith>
I meant the part about what the UA has to expose to platform accessiblity APIs

[08:06:20.0000] <dekiss>
ok

[08:06:22.0000] <Ms2ger>
audio/video/track could use a lot of tests, of course

[08:06:39.0000] <jgraham>
zcorpan wrote quite some tests for parts of that

[08:06:56.0000] <MikeSmith>
jgraham: I guess the meaning there comes from what the UA exposes to the platform

[08:07:01.0000] <jgraham>
So it won't be easy to dive in and hiy stuff that isn't already done

[08:07:23.0000] <Ms2ger>
Mm

[08:07:29.0000] <Ms2ger>
Is that in the repo?

[08:07:50.0000] <MikeSmith>
track is getting implemented more widely now

[08:08:12.0000] <MikeSmith>
I remember seeing some stuff landing in Mozilla

[08:08:28.0000] <Ms2ger>
Yeah

[08:08:57.0000] <Ms2ger>
From Seneca students, don't think there was a lot of tests to them

[08:09:03.0000] <MikeSmith>
those would be funnish tests to write

[08:09:06.0000] <MikeSmith>
relatively

[08:09:35.0000] <Ms2ger>
HTMLTableElement things, except the sorting stuff, perhaps

[08:09:36.0000] <jgraham>
Ms2ger: I don't know where that is

[08:09:44.0000] <Ms2ger>
Somewhere in Canada

[08:09:48.0000] <jgraham>
I'm relatively sure we released it

[08:09:51.0000] <Ms2ger>
Oh

[08:10:02.0000] <jgraham>
not the students :)

[08:10:11.0000] <Ms2ger>
Yeah

[08:10:16.0000] <Ms2ger>
Maybe in a PR?

[08:10:45.0000] <jgraham>
https://github.com/w3c/web-platform-tests/tree/master/old-tests/submission/Opera/media

[08:11:05.0000] <Ms2ger>
Oh, not even that

[08:11:15.0000] <Ms2ger>
Sounds like someone at Opera should create PRs

[08:11:43.0000] <jgraham>
Yeah

[08:11:59.0000] <jgraham>
I think it was matching the new structure that was hard

[08:12:02.0000] <Ms2ger>
Drag and drop sounds horrible to automate tests for... *skip*

[08:12:23.0000] <Ms2ger>
WebSockets?

[08:12:42.0000] <jgraham>
I'm sure that there were more media tests than that

[08:14:19.0000] <jgraham>
We also released a bunch of dnd tests https://github.com/w3c/web-platform-tests/tree/master/old-tests/submission/Opera/dnd

[08:14:25.0000] <jgraham>
But yes, automation is a pain

[08:14:37.0000] <dekiss>
people that work in whatwg get any money from any donation or something?

[08:14:52.0000] <Ms2ger>
A lot of people here work for browser vendors

[08:15:13.0000] <jgraham>
Kind of like donation, but the more regular kind that involves a contract and an employer

[08:15:48.0000] <Ms2ger>
bz suggested box-sizing

[08:16:02.0000] <dekiss>
hm

[08:16:05.0000] <Ms2ger>
And that would be really nice, because we're blocking unprefixing on that

[08:16:32.0000] <dekiss>
guys that make firefox get any money?

[08:16:41.0000] <dekiss>
mozilla organization is non profit right? it takes donations or?

[08:17:25.0000] <Ms2ger>
Mozilla Corporation employs several hundred people nowadays

[08:17:39.0000] <kbrosnan>
we can discuss this on #firefox if you want, it is offtopic for this channel

[08:18:06.0000] <Ms2ger>
Historically most of the income was from a deal with Google to make it the default search engine, dunno if that's still true

[08:20:07.0000] <Ms2ger>
+ named getter on Document

[08:21:22.0000] <dekiss>
Ms2ger but mozilla organization makes firefox and it is non profitable org

[08:21:25.0000] <Ms2ger>
MikeSmith, I guess preferably stuff with a good spec ...

[08:21:30.0000] <dekiss>
I think mozilla sponsors them

[08:21:34.0000] <dekiss>
ok sry for off topic chat

[08:22:04.0000] <dekiss>
Ms2ger yeah I guess :)

[08:22:15.0000] <dekiss>
that for Google dewfault search eng

[08:22:25.0000] <jgraham>
Offtopic for this channel? Only if it requires a sense of logic.

[08:23:02.0000] <dekiss>
I am not sure how MOzilla foundation get money from Google

[08:23:09.0000] <MikeSmith>
Ms2ger:  yeah

[08:23:19.0000] <dekiss>
Firefox maka mozilla organization which is non profit?

[08:23:50.0000] <Ms2ger>
dekiss, http://techcrunch.com/2012/11/15/mozilla-releases-annual-report-for-2011-revenue-up-33-to-163m-majority-from-google/

[08:24:12.0000] <dekiss>
ok thanks

[08:24:15.0000] <Ms2ger>
MikeSmith, so, named getters might not be optimal, then...

[08:24:31.0000] <Ms2ger>
MikeSmith, but box-sizing would be nice if anyone is interested in CSS

[08:24:44.0000] <dekiss>
hmm I thought mozilla foundation makes firefox and I though is non profit org

[08:24:57.0000] <MikeSmith>
Ms2ger: ok

[09:04:56.0000] <SteveF>
dekiss: you can still generate revenue and be a non profit organization. Non profit means money made is not for the benefit of shareholders but is ploughed back into organization no?

[09:06:02.0000] <GPHemsley>
/me wonders why he bothered to read the scrollback

[09:07:16.0000] <dekiss>
hm

[09:07:21.0000] <dekiss>
but I cant take money

[09:07:23.0000] <dekiss>
liek profit

[09:08:40.0000] <SteveF>
dekiss: http://en.wikipedia.org/wiki/Nonprofit_organization "is an organization that uses surplus revenues to achieve its goals rather than distributing them as profit or dividends."

[09:11:21.0000] <dekiss>
yeah

[09:11:41.0000] <dekiss>
people that work in org cant take money for the job

[09:11:45.0000] <dekiss>
they have to be volunteers

[09:11:49.0000] <dekiss>
that is non profit organization

[09:12:09.0000] <dekiss>
its not something like company with shares

[09:12:29.0000] <Ms2ger>
Hardly

[09:12:34.0000] <dekiss>
or no?

[09:12:44.0000] <dekiss>
im not sure

[09:13:14.0000] <Ms2ger>
No, a non-profit can have paid employees

[09:13:33.0000] <dekiss>
than it can act as a company

[09:13:43.0000] <dekiss>
making profits and sharing profits like wages

[09:13:46.0000] <dekiss>
to employees?

[09:13:51.0000] <dekiss>
I think there is no strict line

[09:14:04.0000] <dekiss>
but I guess tehre is border max wage eomployee can take and so

[09:15:53.0000] <Ms2ger>
No idea about the specific laws

[09:17:50.0000] <dekiss>
yeah i think they differ inndifferent coutries too

[09:22:06.0000] <SteveF>
many non profits have paid employees ther is no problem with that

[09:35:26.0000] <GPHemsley>
Feedback welcome: http://mimesniff.spec.whatwg.org/#parse-a-mime-type

[10:45:59.0000] <TabAtkins>
GPHemsley: Is it even possible for a mimetype to be non-ASCII?

[10:46:18.0000] <TabAtkins>
If not, then aside from invalid overlong forms, ASCII and uft-8 are obviously identical.

[10:51:28.0000] <JonathanNeal>
hello

[11:02:14.0000] <gavinc>
dekiss: Non-profits can't have PROFIT or shares, or equity. Wages are not equity.

[11:04:10.0000] <Hixie>
so... how do I unambiguously refer to a JS Object, the kind of thing you get from {} literals, as opposed to JS Arrays, RegExps, Strings, host objects, and so forth?

[11:04:35.0000] <Hixie>
right now i say "If input is an Object object"; is that ambiguous?

[11:05:33.0000] <Ms2ger>
Why?

[11:06:07.0000] <TabAtkins>
All of those things are valid Objects.  I echo Ms2ger in asking why you think you need to be that specific.

[11:08:17.0000] <Hixie>
it's for the structured clone algorithm

[11:09:10.0000] <Hixie>
e.g. i want to clone |{ }| but not |function () { }|

[11:09:15.0000] <TabAtkins>
You still don't want literal things of the Object class, I wouldn't think.  Subclassing Object is perfectly valid.

[11:09:22.0000] <TabAtkins>
You should exclude things you dont' want instead.

[11:10:22.0000] <gavinc>
Um, that's going to be hard isn't it? as Object is a kind of function yes?

[11:10:29.0000] <Hixie>
there's a potentially infinite list of things i want to exlude

[11:10:32.0000] <Hixie>
e.g. all the host objects

[11:10:56.0000] <Hixie>
all the magical objects future JS versions introduce

[11:11:23.0000] <Hixie>
gavinc: well it's done, right now, and shipped, as far as i can tell, i'm just trying to clean up the wording :-)

[11:14:22.0000] <TabAtkins>
gavinc: No, you're confusing objects with their constructor functions.

[11:14:48.0000] <gavinc>
TabAtkins: Ah, yes I am.

[11:15:33.0000] <TabAtkins>
Hixie: So do that - exclude all host objects and anything with a predefined JS class besides Object in its prototype chain.

[11:16:34.0000] <Hixie>
what's a predefined JS class? That sounds like what I want

[11:16:42.0000] <gavinc>
http://www.w3.org/html/wg/drafts/html/master/infrastructure.html#safe-passing-of-structured-data ... that seems reasonably easy to follow today?

[11:16:53.0000] <gavinc>
"If input is another native object type (e.g. Error, Function)"

[11:16:58.0000] <Hixie>
lordy, don't rely on the w3 copy :-)

[11:16:59.0000] <gavinc>
"If input is a host object (e.g. a DOM node)"

[11:17:14.0000] <Hixie>
http://www.whatwg.org/html#safe-passing-of-structured-data

[11:17:25.0000] <Hixie>
the specific text i'm asking about is "If input is an Object object"

[11:21:05.0000] <JonathanNeal>
instance of?

[11:22:18.0000] <TabAtkins>
JonathanNeal: We're telling him he doesn't want to test for that.  Also, everything is instanceof Object unless you've set prototype to null.

[11:24:07.0000] <Ms2ger>
/me wonders why TC39 hasn't tried to take over structured clone yet

[11:28:16.0000] <gavinc>
Hrm, perhaps that is really just the else of that long if?

[11:28:52.0000] <JonathanNeal>
TabAtkins: I thought he was checking for a particular kind of Object, just regular old Object like {} ?

[11:30:20.0000] <Ms2ger>
That doesn't really make sense from an OOP perspective, does it?

[11:30:33.0000] <TabAtkins>
JonathanNeal: Yes, but that's not a good thing.  I can make an object-with-defaults, for example, which is nothing more than a {}, but with an object filled with defaults in its prototype.

[11:30:58.0000] <JonathanNeal>
Okay, cause there are some tricks to getting the "class".

[11:31:09.0000] <JonathanNeal>
Ben Alman wrote one https://github.com/cowboy/javascript-getclass/blob/master/dist/ba-getclass.js

[11:31:41.0000] <JonathanNeal>
I'm sorry if that doesn't help.

[11:38:59.0000] <GPHemsley>
TabAtkins: http://whatwg.gphemsley.org/tests/mimesniff/sniffing.php?ct=text/pl%C3%A1in;charset=ISO-8859-5

[11:42:01.0000] <GPHemsley>
/me finds it interesting that many of the people requesting wiki accounts to add meta extensions are library and information science people

[12:04:12.0000] <wycats__>
Ms2ger: do you want us to?

[12:04:19.0000] <wycats__>
I think we would like to :p

[12:04:43.0000] <Ms2ger>
I'm not surprised you'd like to :)

[12:05:01.0000] <wycats__>
Ms2ger: the current system isn't hookable, and we can fix that in ES

[12:05:15.0000] <wycats__>
and it would need to interact with proxies, etc.

[12:05:30.0000] <Ms2ger>
I don't know what I'd want, fwiw

[12:05:45.0000] <wycats__>
Ms2ger: I personally see TC39 as just another W3C working group

[12:05:51.0000] <Ms2ger>
Oh

[12:05:52.0000] <wycats__>
sort of similar relationship-wise to WHATWG

[12:05:56.0000] <Ms2ger>
Then keep it in the WHATWG spec

[12:06:10.0000] <wycats__>
O_O

[12:06:28.0000] <wycats__>
Ms2ger: Did I touch a third rail?

[12:06:59.0000] <Ms2ger>
You may find I have little love for the W3C :)

[12:07:12.0000] <wycats__>
Ms2ger: nor I

[12:07:21.0000] <wycats__>
Ms2ger: I'm a reformer, mmmkay?

[12:07:37.0000] <Ms2ger>
Good luck with that :)

[12:07:42.0000] <wycats>
it's going well

[12:08:19.0000] <wycats>
fwiw: many members of TAG believe in forkable licensing

[12:08:25.0000] <wycats>
it's a matter of time imho

[12:09:00.0000] <wycats>
we can call TC39 a WHATWG "WG" :P

[12:09:14.0000] <wycats>
we're all working on the platform, right?

[12:09:31.0000] <Ms2ger>
Well, if you guys are getting closer...

[12:09:40.0000] <wycats>
say more

[12:09:45.0000] <Ms2ger>
We've got a shared test repo that would be marvelous for y'all :)

[12:09:52.0000] <wycats>
seems good

[12:10:14.0000] <wycats>
I guess I miss the war-wound era

[12:10:16.0000] <wycats>
missed*

[12:10:40.0000] <Ms2ger>
https://github.com/w3c/web-platform-tests, all JS tests welcome ;)

[12:11:40.0000] <wycats>
Ms2ger: if we put stuff in there, do they get trapped in a non-forkable-IP trap?

[12:12:11.0000] <wycats>
I will raise the idea of putting ES stuff in there

[12:12:15.0000] <Ms2ger>
No, 3-clause BSD

[12:12:37.0000] <wycats>
we have a process implementors are using already

[12:12:41.0000] <wycats>
wouldn't want to screw them

[12:12:47.0000] <wycats>
next meeting

[12:12:47.0000] <wycats>
done

[12:12:59.0000] <Ms2ger>
\o/

[12:14:13.0000] <GPHemsley>
/me wonders what a frood is

[12:14:35.0000] <hober>
GPHemsley: they're usually pretty hoopy

[12:14:35.0000] <Ms2ger>
A cool dude

[12:15:04.0000] <Ms2ger>
But clearly hober's is better at h2g2 quotes

[12:15:04.0000] <GPHemsley>
so then what is a "cool frood"?

[12:15:33.0000] <Ms2ger>
A guy who knows where his towel is

[12:16:39.0000] <GPHemsley>
"It is maintained by the HTML Test Suite Task Force, which for all that it has "Task Force" in its name is really a bunch of <guys who know where their towels are>."

[12:16:40.0000] <GPHemsley>
Got it.

[12:17:11.0000] <Ms2ger>
And darobin

[12:17:56.0000] <GPHemsley>
heh

[12:18:10.0000] <GPHemsley>
/me wonders how many is in a bunch.

[12:20:17.0000] <Ms2ger>
A half dozen?

[12:20:59.0000] <GPHemsley>
Oh, come on. I set that one up for you.

[12:21:35.0000] <Ms2ger>
Uh, 42?

[12:21:56.0000] <GPHemsley>
\o/

[12:22:09.0000] <Ms2ger>
It's been a while since I read it

[12:22:13.0000] <GPHemsley>
yeah, me too

[12:23:42.0000] <jgraham>
/me notes that "many mambers of the TAG like X" doesn't really mean anything about the status of X at the W3C

[12:24:06.0000] <hober>
yeah

[12:24:25.0000] <wycats>
jgraham: accurate

[12:24:30.0000] <wycats>
it's a start

[12:24:36.0000] <hober>
though it's getting better, the tag has historically only been tangentially related to the actual work on the platform

[12:24:55.0000] <wycats>
hober: I do not believe that's accurate anymore

[12:24:58.0000] <wycats>
certainly not this meeting

[12:25:27.0000] <jgraham>
Actual work on the platform is also only tangentially related to the status of X at the W3C

[12:25:41.0000] <wycats>
we had a nice chat with Olivier about Web Audio

[12:25:47.0000] <jgraham>
Or at least s/tangentially/indirectly/

[12:25:57.0000] <wycats>
kicked off http://lists.w3.org/Archives/Public/www-style/2013May/0812.html

[12:26:11.0000] <wycats>
a bunch of stuff

[12:26:12.0000] <wycats>
JSIDL

[12:26:33.0000] <wycats>
http://w3ctag.github.io/jsidl/jsidl.html

[12:26:46.0000] <wycats>
I guess read the minutes but a large % of time was spent on platform-specific stuff

[12:26:59.0000] <wycats>
Alex, Anne, Marcos and I are actively working on platform stuff

[12:27:19.0000] <wycats>
it's almost like we were able to change the composition of the TAG by changing the composition of the TAG ;)

[12:34:13.0000] <Hixie>
TabAtkins: re the questions i was asking earlier, thanks for the class thing. it led me to (i think) the right parts of the right specs. you can see the resulting patches in https://www.w3.org/Bugs/Public/show_bug.cgi?id=21658

[12:34:32.0000] <Hixie>
Ms2ger: ping https://www.w3.org/Bugs/Public/show_bug.cgi?id=21590

[12:34:43.0000] <Ms2ger>
/me jumps

[12:34:59.0000] <Hixie>
:_D

[12:35:29.0000] <Ms2ger>
Actually, webidl defines a Function

[12:35:31.0000] <Ms2ger>
/me closes that bug

[12:35:38.0000] <Hixie>
swee-eeet

[12:35:49.0000] <Hixie>
mission. accomplished.

[12:36:26.0000] <Hixie>
any bikeshed painters interested in a naming frenzy? go crazy on https://www.w3.org/Bugs/Public/show_bug.cgi?id=21572

[12:36:45.0000] <TabAtkins>
Hixie: In http://html5.org/tools/web-apps-tracker?from=7875&to=7876, you meant "Object" there at the very end.

[12:37:02.0000] <Hixie>
woops

[12:37:06.0000] <Hixie>
yes, thanks. good catch.

[12:37:53.0000] <TabAtkins>
I can stand behind "child-free elements".  The fact that text is a Node and thus a child is not usually relevant.

[12:38:59.0000] <jgraham>
child-free sounds like it means "void"

[12:39:07.0000] <jgraham>
in the jargon sense

[12:40:08.0000] <TabAtkins>
But it's not void, so maybe that's okay?

[12:40:41.0000] <Hixie>
i'm a bit reluctant to use terms that are vaguely right but not technically right

[12:40:57.0000] <Hixie>
in a spec, people tend to over-read everything already

[12:41:25.0000] <Hixie>
we'd end up with questions about what it means to have a non-child Text node child, etc

[12:47:40.0000] <hober>
"text-only elements"?

[12:58:11.0000] <tantek>
hober, is that like "text-only email"?

[13:09:59.0000] <Hixie>
hober: that's confusing with CDATA

[13:32:13.0000] <GPHemsley>
plaintext element?

[13:32:21.0000] <GPHemsley>
(what's the difference between CDATA and RCDATA?)

[13:32:21.0000] <Hixie>
also confusing with CDATA

[13:32:53.0000] <Hixie>
RCDATA elements can have text and character references

[13:33:01.0000] <Hixie>
CDATA can only hae text

[13:33:15.0000] <Hixie>
CDATA elements are thus called "Raw text" elements

[13:34:09.0000] <Hixie>
https://www.w3.org/Bugs/Public/show_bug.cgi?id=21572 (already addresses why "normal text", "cooked text", "text", and "no-child" are probably less good than just RCDATA)

[13:34:20.0000] <GPHemsley>
escaped text?

[13:34:25.0000] <GPHemsley>
escaped raw text?

[13:34:38.0000] <Hixie>
escaped implies that entities _are_ used

[13:34:46.0000] <GPHemsley>
(maybe "raw text" should be renamed external "raw text" or something?)

[13:34:54.0000] <GPHemsley>
err, "external raw text"

[13:35:02.0000] <Hixie>
(and "potentially escaped text elements" is too long!)

[13:35:06.0000] <Hixie>
"external" how?

[13:35:46.0000] <GPHemsley>
well, according to the definition, they're only used when allowing another language in HTML

[13:35:51.0000] <GPHemsley>
maybe "foreign raw element"?

[13:35:58.0000] <GPHemsley>
maybe "foreign raw text element"?

[13:36:15.0000] <GPHemsley>
(i.e. <script> and <style>)

[13:36:23.0000] <Hixie>
how are they any more foreign than onclick="" and style="" attributes?

[13:36:47.0000] <GPHemsley>
they're foreign in the sense that they switch langauges

[13:36:52.0000] <GPHemsley>
languages

[13:37:01.0000] <GPHemsley>
I'm just brainstorming here

[13:37:43.0000] <GPHemsley>
but presumably @onclick and @style would be similar

[13:37:52.0000] <Hixie>
they allow character references

[13:38:04.0000] <GPHemsley>
right

[13:38:29.0000] <GPHemsley>
so the difference is that the attributes are encoded using HTML

[13:38:34.0000] <GPHemsley>
whereas the elements aren't

[13:39:08.0000] <GPHemsley>
are @onclick and @style considered RCDATA?

[13:40:24.0000] <GPHemsley>
maybe "raw text elements" vs. "escapabale raw text elements"?

[13:40:50.0000] <Hixie>
attributes are RCDATA in the old SGML world, iirc

[13:40:54.0000] <Hixie>
they're nothing special in html

[13:41:21.0000] <GPHemsley>
define "nothing special"

[13:41:36.0000] <GPHemsley>
there lacks a distinction?

[13:41:39.0000] <Hixie>
right

[13:41:58.0000] <GPHemsley>
is there a reason? or was there a lack of a reason?

[13:42:41.0000] <Hixie>
reason for what?

[13:42:50.0000] <a-ja>
hmm

[13:42:56.0000] <a-ja>
RIP Camino

[13:42:59.0000] <GPHemsley>
what I mean is, could attributes be re-called whatever the new name for RCDATA is without changing anything?

[13:43:35.0000] <Hixie>
there's no need for a name for attributes

[13:43:43.0000] <Hixie>
since we treat them all the same now

[13:44:10.0000] <GPHemsley>
wait... were different attributes treated differently at one point?

[13:44:22.0000] <Hixie>
yes sgml, yes

[13:44:54.0000] <GPHemsley>
so why not have a single term describe all attributes plus <title> and <textarea>?

[13:45:11.0000] <Hixie>
well we have no use for a term for attributes

[13:45:36.0000] <Hixie>
but the problem would be having a term for <style> that implies something special that style="" is implied not to have

[13:45:38.0000] <GPHemsley>
we just found a use: to indicate to people that they share restrictions

[13:45:49.0000] <Hixie>
attributes and <title> aren't treated the same

[13:46:27.0000] <GPHemsley>
what do you mean by "treated"?

[13:46:36.0000] <Hixie>
parsed

[13:46:45.0000] <Hixie>
share similar restrictions

[13:47:02.0000] <GPHemsley>
how the content is written and how the content is interpreted are two different things, are they not?

[13:47:02.0000] <Hixie>
it doesn't seem useful to related them to each other

[13:47:09.0000] <Hixie>
they are both different

[13:47:49.0000] <GPHemsley>
what can <title> and <textarea> do that attributes can't, or vice versa?

[13:48:01.0000] <dekiss>
hm

[13:48:11.0000] <dekiss>
real Hixie? :)

[13:48:14.0000] <Hixie>
GPHemsley: it's kinda subtle, see the spec :-)

[13:48:22.0000] <GPHemsley>
Hixie: :P

[13:48:27.0000] <dekiss>
if yes just to say Hi and thanks for doing good job :)

[13:48:35.0000] <Hixie>
dekiss: there's a fake one? :-) Hi! Thanks.

[13:48:39.0000] <dekiss>
haha

[13:48:55.0000] <dekiss>
nice I didn't expect to see you here honestly nice !

[13:49:04.0000] <Hixie>
this is where i hide

[13:49:08.0000] <dekiss>
:)

[13:50:06.0000] <GPHemsley>
alright, well anyway

[13:50:20.0000] <GPHemsley>
Hixie: was there something wrong with "escapable raw text"?

[13:50:37.0000] <GPHemsley>
+elements

[13:50:46.0000] <dekiss>
man have you met Steve Jobs ?

[13:51:03.0000] <dekiss>
sry for asking this but Inever spoke to person who knew him

[13:51:13.0000] <TabAtkins>
Talk to anyone from Apple!

[13:51:19.0000] <dekiss>
:)

[13:51:24.0000] <dekiss>
#apple?

[13:51:27.0000] <Hixie>
GPHemsley: that could work

[13:51:32.0000] <Hixie>
GPHemsley: let me add it to the bug

[13:51:37.0000] <GPHemsley>
k

[13:51:50.0000] <Hixie>
dekiss: nope, never met him.

[13:51:55.0000] <dekiss>
ok

[13:52:07.0000] <dekiss>
man your name is on html standard :) omg yo uare ceo of whatwg^^

[13:52:51.0000] <Hixie>
Conned Editing Officer?

[13:52:57.0000] <GPHemsley>
^_^

[13:52:58.0000] <Hixie>
the guy tricked into writing the spec? :-)

[13:52:58.0000] <dekiss>
you were president

[13:53:05.0000] <dekiss>
:D

[13:53:13.0000] <dekiss>
no, don't look it that way!

[13:53:18.0000] <Hixie>
we have a bunch of editors now actually, not just me

[13:53:22.0000] <Hixie>
see spec.whatwg.org for a list of specs

[13:53:50.0000] <dekiss>
yeah i saw

[13:54:06.0000] <dekiss>
haha

[13:54:10.0000] <dekiss>
this is funny but I must tel lyou :)

[13:54:37.0000] <dekiss>
ok so I hold some private classes about web design and I teach kids about you :)))))

[13:54:41.0000] <dekiss>
hahah

[13:54:50.0000] <dekiss>
omg

[13:55:00.0000] <Hixie>
all good i hope :-|

[13:55:05.0000] <dekiss>
haha yep :)

[13:55:07.0000] <GPHemsley>
/me wonders if there's a whatwgmemes he can go post to

[13:55:15.0000] <Hixie>
GPHemsley: we use w3cmemes

[13:55:24.0000] <GPHemsley>
nah, not the same :P

[13:56:27.0000] <dekiss>
Hixie you met Timothy Berners-Lee?

[13:56:41.0000] <dekiss>
have yo useen him in live

[13:57:47.0000] <Hixie>
yes, most people here have probably met tim at some time or other

[13:58:30.0000] <dekiss>
nice

[13:58:40.0000] <GPHemsley>
;_;

[13:59:36.0000] <dekiss>
sry I cant believe its really you man :D

[13:59:44.0000] <dekiss>
pls reply me from your mail and I will belive pls pls :D

[14:00:07.0000] <GPHemsley>
dekiss: Enough already

[14:00:37.0000] <pdr>
Hixie, sign my chest!

[14:01:16.0000] <TabAtkins>
dekiss: Hixie, he's just this guy, you know?  A bunch of us either work for the browser companies or are webdevs who do something with browser dev as well.

[14:09:04.0000] <TabAtkins>
Hixie: ...for what?

[14:09:23.0000] <Hixie>
canvas example

[14:09:31.0000] <Hixie>
but actually i found some online

[14:09:34.0000] <Hixie>
under CC license

[14:10:29.0000] <dekiss>
Hixie is there future for webgl?

[14:10:53.0000] <Hixie>
not my area of expertise, but i doubt webgl is going away any time soon

[14:12:01.0000] <dekiss>
man

[14:12:02.0000] <TabAtkins>
Oh man, the molecules really *do* form little hexagons: http://www.wired.com/wiredscience/2013/05/atomic-level-images/

[14:12:11.0000] <dekiss>
if you need some employees pls tell me thanks in advance :)

[14:12:21.0000] <Hixie>
employees?

[14:12:22.0000] <Hixie>
for what?

[14:12:25.0000] <dekiss>
welllllll

[14:12:37.0000] <dekiss>
anything web related or pc related or science related etc.

[14:12:51.0000] <dekiss>
I can even clean web dev monitors in google

[14:12:51.0000] <Hixie>
oh

[14:12:54.0000] <dekiss>
HAHAHA :D

[14:13:00.0000] <dekiss>
^^

[14:13:00.0000] <Hixie>
i have no hiring authority for anything

[14:13:01.0000] <Hixie>
so...

[14:13:11.0000] <dekiss>
ok

[14:13:14.0000] <dekiss>
nvm

[14:13:20.0000] <dekiss>
what you work in google man?

[14:13:26.0000] <dekiss>
if its no secret?

[14:13:39.0000] <Hixie>
the html spec

[14:13:45.0000] <dekiss>
Chrome?

[14:14:09.0000] <Hixie>
no, http://whatwg.org/html is what i write as my fulltime job

[14:14:34.0000] <dekiss>
hm ok

[14:15:07.0000] <TabAtkins>
dekiss: None of us have any hiring authority.  Our companies' job application pages are easy to find.

[14:15:19.0000] <Hixie>
http://caroll-ann.deviantart.com/art/Bugs-Bunny-Sprites-Sheets-346185418 "This work is licensed under a Creative Commons Attribution-Noncommercial-Share Alike 3.0 License"

[14:15:43.0000] <dekiss>
Hixie when you put transition on some element and give position fixed and scroll the page the elements leave lines on the webpage its bug

[14:15:54.0000] <dekiss>
but I think its more css related :)

[14:16:02.0000] <dekiss>
sec im gona report it

[14:16:39.0000] <dekiss>
TabAtkins I know man but if you recommend me

[14:16:41.0000] <dekiss>
^^

[14:16:54.0000] <dekiss>
kidding, no way you can recommend someone you just met on net :D

[14:16:55.0000] <TabAtkins>
I'm not going to recommend a stranger.

[14:17:04.0000] <dekiss>
haha exactly just joke sec.. brb :)

[14:20:55.0000] <dekiss>
Hixie honestly w3c adopted html 5 because they wanted or to escape the shame of not sucessfull xhtml 2?

[14:21:23.0000] <dekiss>
and there was risk that browsers vendors will implement html5 and not xhtml2 and everyone would use html5? :)

[14:46:22.0000] <tantek>
well hello 2007 era political discussion

[15:29:49.0000] <dkiss>
pls link me list of all meta values for http-euqiv attribute thanks

[15:30:15.0000] <tantek>
dkiss, try asking siri

[15:31:32.0000] <dkiss>
?

[15:32:13.0000] <dkiss>
wat

[15:33:23.0000] <dkiss>
I cant find it anywhere

[15:52:28.0000] <gavinc>
tantek: *snicker*

[15:52:40.0000] <dkiss>
 what should I use to tell browsers to update their cache? I saw last-modified is not valid meta name value :S

[15:55:57.0000] <tantek>
/me is waiting for an irc bot named siri

[15:57:53.0000] <dkiss>
also I have one more question, in keywords attribute can I put english and macedonian words together separated with , ?

[16:04:53.0000] <Hixie>
dkiss: you have to do it at the HTTP level, <meta> won't do anything

[16:05:00.0000] <Hixie>
dkiss: also, keywords meta is a waste of time

[16:05:05.0000] <Hixie>
search engines ignore it

[16:06:10.0000] <dkiss>
ok

[16:06:17.0000] <dkiss>
:|

[16:06:54.0000] <dkiss>
Hixie if you need help pls tell me writing html spec I want to volunteer :)

[16:07:06.0000] <Hixie>
we have many specs that need editors

[16:07:30.0000] <dekiss>
I am finishing some projects for my firm and after that I will be free to help you guys will apply soon

[16:07:52.0000] <Hixie>
apply?

[16:08:10.0000] <Hixie>
all this work is done by volunteers or people whose company is paying them to work on it

[16:08:15.0000] <Hixie>
almost all of us started as volunteers

[16:08:31.0000] <dekiss>
yeah I wil lapply for volunteering

[16:08:46.0000] <Hixie>
no need to apply, you're accepted. just do the work ;-)

[16:09:16.0000] <dekiss>
:) thanks

[16:59:12.0000] <GPHemsley>
/me shoots Hixie a look

