2013-01-01
[20:28:12.0000] <Hixie>
well i didn't get to 0/0 by year-end, but I got pretty close on e-mails, and we're at about the same level in bugs as we were at the start of the year, which isn't bad given the influx

[20:28:44.0000] <Hixie>
i guess the things i was planning on doing in january are gonna need to be pushed on to april, though

[13:04:19.0000] <annevk>
Man, having multiple globals sure causes a ton of grief...

[13:06:17.0000] <tantek>
globals all the way down.


2013-01-02
[06:48:29.0000] <annevk>
I feel like Bj√∂rn wrote that www-archive message for me...

[07:50:27.0000] <annevk>
pbarth: did you merry Adam?

[07:50:39.0000] <annevk>
marry, doh

[09:10:59.0000] <annevk>
heycam|away: yt?

[09:11:14.0000] <annevk>
heycam|away: can you default to a string literal in IDL?

[09:14:40.0000] <annevk>
http://dev.w3.org/2006/webapi/WebIDL/#prod-DefaultValue says yes

[11:54:23.0000] <jsbell>
[1000, -1, -2, Infinity, -Infinity, NaN].forEach(function(x) { try { document.createElement('select').options.add(document.createElement('option'), x); } catch (e) { console.log(x + ": " + e); } })

[11:55:14.0000] <jsbell>
FF17 throws on +/-Infinity. Chrome 23/Safari 6/IE10 throw on -2, +/-Infinity and NaN

[11:57:20.0000] <jsbell>
Based on the HTML + WebIDL specs I wouldn't expect any of them to throw. :P

[12:07:54.0000] <jwalden>
optional (HTMLElement or long)? before = null

[12:08:35.0000] <jwalden>
I don't remember stuff fully to be confident, but I think that takes either an element, or any value (which will then be coerced to long)

[12:08:45.0000] <jwalden>
so, yeah, not throwing at all I *think* might be spec-right

[12:09:03.0000] <jwalden>
/me doesn't remember the option interface well enough to know what of these options is at all sane

[12:22:29.0000] <jsbell>
jwalden: I noticed this futzing with the ES number-> IDL long conversion code.

[12:23:04.0000] <jwalden>
unsurprising :-)

[12:23:37.0000] <jsbell>
Could toss an [EnforceRange] in the spec's IDL to get throwing behavior on non-finites, but dunno why FF distinguishes NaN, and throwing on < -1 would require prose anyway.

[12:23:40.0000] <jwalden>
another fun thing to test is { valueOf: function() { return "bazinga"; } }

[12:23:46.0000] <jwalden>
er, s/return/throw/

[12:25:23.0000] <jsbell>
I haven't tried, but I bet incrementing a counter in valueOf would give inconsistent results as well.

[12:26:06.0000] <jwalden>
undoubtedly :-)

[12:33:51.0000] <jwalden>
/me tries reading Gecko variant code to figure out what causes that behavior, spends too much time following twisty passages, gives up

[12:34:18.0000] <jwalden>
we'll adhere to webidl requirements in semi-short order, I expect

[12:34:32.0000] <jwalden>
/me doesn't know the timeline for this particular bit of code being converted, tho

[12:44:36.0000] <annevk>
jsbell: are you sure long accepts NaN?

[12:44:41.0000] <annevk>
jsbell: that seems kinda unlikely

[12:46:38.0000] <annevk>
jsbell: don't mind me, I'm wrong :/

[12:48:39.0000] <annevk>
jwalden: btw, Ms2ger explained why that algorithm was correct after all

[12:49:04.0000] <annevk>
jwalden: the global named properties are on some prototype object

[12:49:47.0000] <jwalden>
/me would have thought long == Int32, and ECMAScript conversions would use the ToInt32 operator

[12:49:50.0000] <annevk>
jwalden: so using the [[GetOwnProperty]] would get there eventually

[12:50:00.0000] <annevk>
jwalden: yeah that's correct

[12:50:01.0000] <jwalden>
if that's not the case, that's mildly surprising

[12:50:27.0000] <jwalden>
in which case NaN would become 0 for your test, jsbell

[12:50:32.0000] <annevk>
it's ToInt32(ToNumber(V))

[12:50:48.0000] <jwalden>
ToNumber(NaN) => NaN, ToInt32(NaN) => 0

[12:50:50.0000] <annevk>
http://dev.w3.org/2006/webapi/WebIDL/#es-long (with some exceptions for extended attributes)

[12:50:53.0000] <jwalden>
for better or worse

[12:51:14.0000] <annevk>
but Infinity also becomes 0

[12:51:22.0000] <annevk>
and Gecko throws for that...

[12:51:36.0000] <jwalden>
Gecko

[12:51:37.0000] <jwalden>
er

[12:51:52.0000] <jwalden>
Gecko's not using webidlish code right now, so all bets are off as to what it does :-)

[12:52:00.0000] <jwalden>
at least, not for that particular interface/method/argument

[12:52:04.0000] <annevk>
fair enough

[12:52:25.0000] <jwalden>
/me will be glad when non-webidl stuff is all dead

[12:53:36.0000] <annevk>
yeah, then we can start fighting Web IDL

[12:53:48.0000] <annevk>
or something like that :)

[12:54:51.0000] <jwalden>
I shouldn't be, but I'm continually amazed by how much of Gecko semantics is just "that's what the random internal method that happened to be used, did"

[12:55:44.0000] <annevk>
it seems kinda natural for any system that grows big, to have a lot of inconsistencies

[12:56:11.0000] <annevk>
you get that even when there's one person developing the system for an extended period of time

[12:57:37.0000] <jwalden>
I dunno, I find algorithms are just that much worse to read, usually, if they're not isomorphic to the spec steps

[12:58:17.0000] <jwalden>
which naturally leads me into writing helper methods like ToUint32 or whatever, where at least if they're wrong it's just a matter of changing guts

[12:58:43.0000] <jwalden>
rather than having to change a hundred places all converting in different ways

[12:58:53.0000] <jwalden>
meh, doesn't really matter at this point

[12:59:04.0000] <annevk>
well that certainly makes sense :)

[12:59:36.0000] <annevk>
I meant more what came before the standard and to some extent the standards we're developing now; that they all have their inconsistencies

[12:59:58.0000] <jwalden>
true enough

[13:21:08.0000] <jsbell>
jwalden: re: "what the random internal method... did" - and the resulting specs are such fun to implement, because you know that in some code base, somewhere, there's some trivial and probably very efficient implementation of what seems like an insanely baroque algorithm.

[13:22:01.0000] <jwalden>
in my experience, usually the internal method is also insanely baroque and inefficient :-)

[13:22:23.0000] <jwalden>
with special cases nobody's seriously thought through because some random page needed something

[13:22:25.0000] <jsbell>
Sure, kill my sense of hope... ;-)

[13:22:31.0000] <jwalden>
even redundant special cases

[13:22:33.0000] <jwalden>
heh

[13:29:06.0000] <annevk>
jsbell: not sure what specs you're reading, but I usually aim to simplify what the implementations did

[13:37:13.0000] <Hixie>
i have no idea what that mail on www-archive means

[13:38:17.0000] <Ms2ger>
Hixie, "encodings suck"

[13:42:13.0000] <annevk>
It's about BOM taking precedence over the encoding declaration and supposedly whether X-Content-Type-Options should influence that or not... And whether it's a good idea to begin with. Overall I took it as subtle critique of the Encoding Standard :-)

[13:55:15.0000] <Hixie>
sounds complicated

[14:39:40.0000] <jsbell>
Hixie: Saw "An error occurred submitting your review comment" from the HTML spec. Maybe I typed too much, maybe there's a back-end issue.

[14:40:44.0000] <Hixie>
looking...

[14:40:50.0000] <Hixie>
(did you save your comment text, perchance?)

[14:41:31.0000] <jsbell>
Hixie: it does not appear to have been cleared from the input field, so yes

[14:41:37.0000] <Hixie>
i got back a "Text Too Long" from bugzilla

[14:41:42.0000] <Hixie>
thought i worked around that though

[14:42:13.0000] <Hixie>
ah, i see

[14:42:15.0000] <Hixie>
let me fix this...

[14:45:55.0000] <Hixie>
jsbell: do you still have it up?

[14:46:00.0000] <Hixie>
jsbell: if so, try submitting again

[14:46:25.0000] <jsbell>
submittifying...

[14:46:28.0000] <jsbell>
success!

[14:46:53.0000] <Hixie>
sweet

[14:48:30.0000] <Hixie>
i really don't understand where these people are coming from who type in random things in that form

[14:48:47.0000] <Hixie>
got one just now that's just an address

[14:48:49.0000] <Hixie>
why would you do that?

[14:51:16.0000] <annevk>
a bot reverse engineering the rules?

[14:52:01.0000] <Hixie>
doesn't look like it

[14:52:11.0000] <Hixie>
every one i've seen, they visit a few pages, then send a wacked comment

[14:53:16.0000] <Hixie>
maybe they're trying to do a search?

[14:53:24.0000] <Hixie>
and that's just what's got focus?


2013-01-03
[19:59:49.0000] <JonathanNeal>
hello

[00:37:15.0000] <tantek>
thanks MikeSmith for the #microformats edit - I've been unsure about the rel-publisher value since I saw it show up.

[00:43:59.0000] <MikeSmith>
tantek: somebody asked about it on the www-validator list (asked why the validator doesn't support it despite it being on the wiki page)

[03:52:16.0000] <annevk>
oh, seems some of the IETF found the URL Standard again

[03:52:31.0000] <annevk>
too bad their comments are not really actionable

[04:04:22.0000] <odinho>
What are they saying?

[04:06:33.0000] <annevk>
https://twitter.com/bagder/status/286544650284699648

[04:09:21.0000] <annevk>
I like this one too https://twitter.com/dret/status/286625563496574977

[04:09:59.0000] <annevk>
Especially combined with the fact that their hero Roy has been stating that URI == URL for some time now...

[04:10:34.0000] <annevk>
Anyway, back to creating more states for more sensible error reporting...

[04:40:14.0000] <annevk>
If you resolve http:example.org against http://example/ should that give a parse error?

[04:43:02.0000] <annevk>
I'm going with yes...

[04:55:35.0000] <odinho>
Hehe. One thing they do say though, is that it would indeed be nice to have a non-normative overview over what's supported. You're doing lots of findings, and then encode them into this spec, but it's not quickly referencable. Although I fear that would be too big to use in the end anyway...

[04:56:38.0000] <annevk>
Given that it all changes over time I don't really see how that's useful. Although you could "generate" such a thing if we completed that test suite...

[04:56:59.0000] <annevk>
Sorry, I can see how it's useful, but also how it'd be time consuming :-)

[04:58:51.0000] <odinho>
Yeah.

[05:56:46.0000] <SimonSapin>
annevk: maybe diagrams like http://dev.w3.org/csswg/css3-syntax/#token-diagrams would help explaining the syntax of URLs?

[06:00:22.0000] <annevk>
SimonSapin: yeah, the plan is to add those at some point

[06:00:43.0000] <annevk>
SimonSapin: though the comments were about parsing

[06:38:27.0000] <annevk>
SimonSapin: those syntax diagrams seem incomplete btw

[06:38:38.0000] <SimonSapin>
annevk: how so?

[06:38:43.0000] <annevk>
SimonSapin: e.g. for url() you can also escape the u / r / l

[06:39:43.0000] <SimonSapin>
indeed

[06:44:51.0000] <SimonSapin>
annevk: or maybe not. http://www.w3.org/TR/CSS21/syndata.html#tokenization uses "url" litteraly in the token definition, not something like {u}{r}{l}

[06:44:51.0000] <SimonSapin>
Green in Firefox and Opera but Chromium: data:text/html,<style>@import \75rl("data:text/css,body{background:green}")

[06:50:49.0000] <annevk>
SimonSapin: yeah, the old specs are messy that way

[06:51:43.0000] <Ms2ger>
Sounds like something needs a test

[06:51:48.0000] <annevk>
SimonSapin: there was a problem of sorts with writing it as {u}{r}{l} if I remember correctly

[06:51:49.0000] <SimonSapin>
annevk: http://dev.w3.org/csswg/css3-syntax/#data-state still does not allow escapes

[06:52:30.0000] <annevk>
SimonSapin: oh Tab forgot the hard part?

[06:53:54.0000] <annevk>
oh I see

[06:53:56.0000] <annevk>
hmm

[06:57:11.0000] <SimonSapin>
seemed deliberate to me last time I looked, but maybe

[06:57:36.0000] <annevk>
yeah, seems weird though to accept escapes everywhere but url()

[06:57:54.0000] <annevk>
well and @charset, but @charset is weird

[06:58:46.0000] <Ms2ger>
Ah, darobin is back?

[06:59:46.0000] <SimonSapin>
I don‚Äôt think this is really a problem in practice. Have you ever seen escapes used on CSS-defined keywords, other than in test cases?

[06:59:53.0000] <SimonSapin>
But yes, it should be clarified

[07:00:14.0000] <annevk>
well I'd prefer if we killed CSS escapes

[07:00:21.0000] <annevk>
especially for keywords/identifiers

[07:00:29.0000] <annevk>
but that seems unrealistic

[07:00:59.0000] <darobin>
Ms2ger: ayup

[07:01:14.0000] <Ms2ger>
darobin, go review some tests :)

[07:01:17.0000] <darobin>
thanks for the pull requests wrangling you did over the holidays

[07:01:19.0000] <darobin>
haha

[07:01:27.0000] <darobin>
will do, but I'm still catching up on email

[07:01:58.0000] <SimonSapin>
annevk: probably unrealistic. But I usually pretend they‚Äôre not there. Just like I pretend that everything is case-sensitive ;)

[07:02:11.0000] <Ms2ger>
Good :)

[07:02:38.0000] <Ms2ger>
I've got some more pull requests to create, but branches hurt my head, so it'll be one at a time

[07:17:22.0000] <annevk>
SimonSapin: if only we could go back in time and simplify some of this stuff

[07:17:28.0000] <SimonSapin>
annevk: @charset is case-sensitive too :)

[07:17:40.0000] <annevk>
SimonSapin: @charset is beautiful

[07:18:12.0000] <annevk>
SimonSapin: requires double quotes as well

[07:18:23.0000] <annevk>
SimonSapin: and a single space preceding the double quotes

[07:18:26.0000] <SimonSapin>
and a single space, no comment, no space before the ;

[07:18:59.0000] <annevk>
yeah, once you have to write out the details people suddenly realize they should keep it simple...

[07:19:00.0000] <SimonSapin>
well, if we go back in time let‚Äôs support UTF-8 only, @charset doesn‚Äôt even exist

[07:19:11.0000] <annevk>
fair point

[07:19:44.0000] <annevk>
and kill utf-16 before hsivonen et al get a chance to be upset by it

[07:19:54.0000] <SimonSapin>
hehe

[07:23:27.0000] <annevk>
how many days left in this TAG election thingie darobin?

[07:23:40.0000] <darobin>
6

[07:23:55.0000] <SimonSapin>
wrote to www-style about escaping url()

[07:23:59.0000] <annevk>
so it's closed after Jan 9?

[07:24:10.0000] <annevk>
SimonSapin: might want to search the archives

[07:24:16.0000] <annevk>
SimonSapin: Bert and I went over it before...

[07:25:37.0000] <annevk>
SimonSapin: http://lists.w3.org/Archives/Public/www-style/2007Dec/0215.html

[07:26:52.0000] <annevk>
SimonSapin: http://wiki.csswg.org/spec/css2.1#issue-23

[07:27:11.0000] <annevk>
SimonSapin: it was closed, but no idea how it was fixed (assumed editorial suggests they agreed with {u}{r}{l}...)

[07:27:20.0000] <darobin>
annevk: yes, correct

[07:32:15.0000] <SimonSapin>
annevk: http://test.csswg.org/suites/css2.1/20110323/html4/uri-015.htm

[08:15:02.0000] <annevk>
SimonSapin: the assert there is wrong

[08:15:15.0000] <annevk>
metadata fail #nobodyiscounting

[08:19:55.0000] <annevk>
SimonSapin: see also e.g. http://www.w3.org/TR/2010/WD-CSS2-20101207/grammar.html#scanner

[08:20:17.0000] <annevk>
SimonSapin: stuff changed there, I forgot if there was an email explaining why

[08:20:42.0000] <SimonSapin>
annevk: lots referenced from http://lists.w3.org/Archives/Public/www-style/2012May/0329.html

[08:20:49.0000] <SimonSapin>
I‚Äôm writing a patch for css3-syntax

[08:22:27.0000] <annevk>
SimonSapin: except the edit was made and then reverted, and I believe Bert had a reason for that

[08:22:44.0000] <annevk>
SimonSapin: see the above draft for where the change was actually in

[08:31:22.0000] <annevk>
Ah, the problem is http://lists.w3.org/Archives/Public/www-style/2010Jul/0499.html I suppose

[10:38:19.0000] <SimonSapin>
annevk: well, in level 3 tree construction actually uses the tokenization

[10:38:36.0000] <SimonSapin>
having a full CSS 2.1 separated from the core grammar was a mistake IMO

[10:46:01.0000] <annevk>
uhuh

[11:26:17.0000] <Ms2ger>
w3fools is down?

[11:55:02.0000] <Hixie>
annevk: https://twitter.com/dret/status/286625563496574977 is funny because that's what people from the w3c said back when we started with Web Forms 2 :-)

[11:55:59.0000] <yroc>
Hi, happy new year all -- wondering about rationale for <pre>

[11:56:16.0000] <Hixie>
anything specific about it? or just why it's in the spec?

[11:56:23.0000] <yroc>
why not just use white-space: pre;

[11:56:33.0000] <yroc>
and display: block;

[11:56:42.0000] <tantek>
because the white space has meaning in the content sometimes

[11:56:46.0000] <Hixie>
the idea is that CSS is optional

[11:56:50.0000] <yroc>
on any particular element that you want preformatting?

[11:57:04.0000] <Hixie>
you should be able to get everything important even if the CSS doesn't get applied

[11:57:05.0000] <tantek>
e.g. code, python, etc.

[11:57:15.0000] <tantek>
if the whitespace has meaning, use <pre>, if the white-space is presentational, use white-space property

[11:57:50.0000] <Hixie>
tantek: yroc is writing our rationale document, so he needs the "why" more than the "what" :-)

[11:58:28.0000] <tantek>
Hixie, s/important/has meaning in the content

[11:58:49.0000] <tantek>
"important" is too fuzzy / not actionable

[11:59:17.0000] <Hixie>
yeah not saying what i said was good, just that "do X" isn't helpful if the question is "why do we have X" :-)

[12:00:05.0000] <tantek>
my answer was for why

[12:00:19.0000] <yroc>
But really, where do we stop adding elements then. What makes preformatted text special enough to be given (and retained) a semantic tag?

[12:00:22.0000] <tantek>
we have <pre> because there are cases where whitespace has meaning in the content.

[12:00:49.0000] <tantek>
yroc - elements have to meet a certain high bar for inclusion. I believe W3Cmemes has an explanatory image for this.

[12:00:51.0000] <yroc>
Or is it just historical?

[12:00:53.0000] <Hixie>
yroc: realistically, we have <pre> because it was implemented already when i wrote hte spec

[12:01:03.0000] <tantek>
(new) elements

[12:01:21.0000] <yroc>
Hixie: right then, it's basically historical...

[12:01:26.0000] <Hixie>
yroc: and for things that were implemented already, the choice is either (a) drop it in the "obsolete" section or (b) go all-in and spec it properly

[12:01:38.0000] <tantek>
Hixie, more stuff should have gone into the obsolete section

[12:01:57.0000] <yroc>
@So what made you decide the latter for pre?

[12:02:02.0000] <Hixie>
yroc: for <pre>, (b) seemed more useful since there are times, e.g. source code, e-mails, etc, where it's impossible without CSS

[12:02:04.0000] <yroc>
@Hixie, sorry

[12:02:05.0000] <Hixie>
tantek: file bugs

[12:02:15.0000] <Hixie>
s/etc/etc)/

[12:02:18.0000] <tantek>
Am now of the opinion that the back-semantic definitions of <i>, <b>, <s>, <u> are nearly useless and confusing.

[12:02:27.0000] <Hixie>
wait forget my last regexp

[12:02:34.0000] <tantek>
Hixie, I'd expect you to close the bugs as "already discussed"

[12:02:47.0000] <Hixie>
tantek: not if there's new data :-)

[12:03:10.0000] <Hixie>
tantek: but if you want to get rid of <i>, make sure to say what element you'd use instead for its six zillion use cases

[12:03:21.0000] <tantek>
well, I don't really consider "changing my opinion" to be sufficiently new/objective "data" for that purpose. however, it's sufficiently anecdotally interesting IMO that I'm going to teach that way.

[12:03:28.0000] <Hixie>
tantek: same for the others (but not six zillion, more like 5, 3, and 2 respectively)

[12:03:58.0000] <tantek>
the point is not that there are no use-cases. the point is that the use-cases are not relevant enough to justify inclusion in the core language.

[12:04:33.0000] <Hixie>
yroc: see also http://wiki.whatwg.org/wiki/FAQ#Where.27s_the_harm_in_adding.E2.80.94 for rationale behind not adding features btw

[12:04:48.0000] <Hixie>
tantek: <i> has a ton of use cases that are pretty critical, imho.

[12:04:53.0000] <yroc>
@Hixie: will do

[12:05:00.0000] <tantek>
Hixie, that's a good link.

[12:05:04.0000] <Hixie>
tantek: the others i agree are weaker, and i wouldn't have added them if we didn't have a way to get them for free

[12:05:05.0000] <tantek>
Thanks, will be using that.

[12:05:17.0000] <tantek>
They're not free in terms of teaching cost.

[12:05:37.0000] <tantek>
<i> does stand out more than the others, I'll admit.

[12:05:50.0000] <tantek>
I have found more often uses for it in prose, posts etc.

[12:05:53.0000] <Hixie>
the teaching cost i think is gonna have to be paid for anyway

[12:06:01.0000] <tantek>
(per the "instance of a term" rough definition)

[12:06:12.0000] <tantek>
Hixie, nah, we can simply ignore old/obsolete elements when authoring.

[12:06:29.0000] <yroc>
I've interpreted <i>, for example, to be a "catch all" for semantic phrases that are conventionally marked up with italics. and

[12:06:41.0000] <tantek>
/me jokingly thinks of writing a summary of HTML: The Good Parts ;)

[12:06:42.0000] <Hixie>
there's so much material and software out there saying to use <b> and <u> and to a lesser extent <s> that you;ll have to field questions either way; we might as well, imho, head it off at the pass.

[12:07:02.0000] <Hixie>
by defining them

[12:07:05.0000] <tantek>
nah, easier to say, "old docs, ignore"

[12:07:06.0000] <Hixie>
since we have uses for them

[12:07:11.0000] <Ms2ger>
tantek, good luck finding those

[12:07:16.0000] <tantek>
just as we say for that-website-that-shall-not-be-named-but-shows-up-in-google-results

[12:07:30.0000] <tantek>
good luck finding what?

[12:07:37.0000] <tantek>
people love simplified summaries

[12:07:48.0000] <tantek>
that dispense with trivia, esoterica, obsolete "old people" stuff

[12:07:49.0000] <Ms2ger>
The good parts of HTML

[12:07:49.0000] <yroc>
You use <em> for stress emphasis, but you can't have tag for every possible case where italics are conventionally used. Therefore you defined <i> as a "catch-all".

[12:08:07.0000] <yroc>
@Hixie: is that a correct interpretation of <i>?

[12:08:34.0000] <Hixie>
tantek: "old docs, ignore" is not much cheaper than "b is for keywords, s is for intentionally inaccurate text (think price cuts), and u is for annotations (like spelling errors)"

[12:08:42.0000] <Hixie>
tantek: see http://www.whatwg.org/specs/web-apps/current-work/#usage-summary

[12:09:02.0000] <Hixie>
yroc: yeah, it's pretty close

[12:09:25.0000] <tantek>
Hixie, how is "keyword" different from "instance of a term"?

[12:09:32.0000] <Hixie>
yroc: (though i wouldn't use the word "italics")

[12:09:55.0000] <yroc>
@Hixie: why? and what word would you use?

[12:10:23.0000] <Hixie>
tantek: see the spec, it has some pretty good examples. the short answer is when you read text that has <i>, you use a different voice, whereas you don't read <b> differently at all, instead it's meant to draw your attention.

[12:10:47.0000] <Hixie>
tantek: e.g. gossip magazines will <b> a person's name so you can see the articles talks about them, but <i> wouldn't be appropriate for that.

[12:11:00.0000] <Hixie>
yroc: "instance of term" or "alternate mood or voice", like the spec :-)

[12:12:05.0000] <yroc>
@Hixie: right, but why are those particular (seemingly disparate) semantic elements lumped together in the first place?

[12:12:25.0000] <yroc>
Is it not because they are conventionally *italicized*?

[12:12:31.0000] <tantek>
Hixie, how do you "draw your attention" to <b> in a screen reader if "you don't read <b> differently at all" ?

[12:12:34.0000] <yroc>
in prose.

[12:13:31.0000] <yroc>
What does "instance of term", "alternate mood", and "ship name" have in common?

[12:13:45.0000] <yroc>
If not that they are conventionally italicized in prose?

[12:15:23.0000] <Hixie>
yroc: see the spec. The core definition is "alternate mood or voice", the others are all just examples of that. For example, when you say "I sailed on the /Enterprise/ for a couple of days", you tend to have a slight pause before the ship name and pronounce it with a slightly different stress. Same as "I like /felis domesticus/".

[12:15:39.0000] <Hixie>
tantek: a list or other UI, same as e.g. headings, tables, etc.

[12:16:39.0000] <yroc>
@Hixie not so sure about that one :-)

[12:17:27.0000] <yroc>
But you're the editor. I'm here to write what you're rationale is, so that's what I'll do.

[12:19:08.0000] <yroc>
Just circling back to <pre> for a moment, you said its continued inclusion is partially do to CSS being required.

[12:19:56.0000] <yroc>
Are you saying it's a goal of specing HTML to minimize authors having to use CSS?

[12:20:42.0000] <Hixie>
the core design of HTML is that it describes the page's structure/meaning/semantics/logic/content/other-buzz-words, while CSS describes the page's layout/presentational/formatting/style/other-buzz-words. The latter part is medium-specific and should never be necessary to understand the page.

[12:21:02.0000] <Hixie>
it should always be possible to just drop CSS entirely and still interact with / use / understand the page

[12:21:25.0000] <Hixie>
without CSS it'll likely be much uglier, but that's a separate issue

[12:22:30.0000] <yroc>
That's a good explanation -- makes me understand pre better, thanks.

[12:23:05.0000] <yroc>
In the spec, regarding links, it says:  media, hreflang, and type attributes are "purely advisory", what exactly does that mean?

[12:23:24.0000] <yroc>
"Purely advisory", that is...

[12:23:32.0000] <Hixie>
"media" should be gone

[12:23:38.0000] <Hixie>
unless you mean <link>

[12:24:06.0000] <yroc>
It's a general link section... I think it includes <a> and <link>

[12:24:45.0000] <Hixie>
"purely advisory" means "just information, not something anyone is expecting you to take as fact or do anything interesting with, if you get more authoritative information, ignore the purely informative one"

[12:24:52.0000] <Hixie>
try reloading, i removed "media" a few days ago

[12:25:42.0000] <yroc>
K.

[12:28:18.0000] <yroc>
Another <pre> question (sorry!) Why are <br> elements allowed in pre? Doesn't that contradict the semantics?

[12:31:22.0000] <Hixie>
<br> in <pre> means nothing different than a newline

[12:33:10.0000] <yroc>
Yes, but isn't the whole point of pre, that the text is formatted "by typographic conventions rather than by elements"? (where I interpret <br> to be an element).

[12:33:25.0000] <Ms2ger>
Not really

[12:33:38.0000] <Ms2ger>
You can have <strong>s too

[12:33:54.0000] <Ms2ger>
Or whatever you like

[12:34:01.0000] <Hixie>
yroc: that's the intent, but it's harmless to allow <br> in practice

[12:34:15.0000] <Hixie>
yroc: in general we try to make things be invalid if that would help catch likely errors

[12:34:32.0000] <yroc>
Aha, got ya.

[12:34:44.0000] <Hixie>
yroc: but if something is just a bit silly, not really an error, and solving it wouldn't save anyone any time, then we allow it, typically

[12:35:00.0000] <yroc>
Or perhaps could you call it "non-conforming"

[12:35:05.0000] <Hixie>
yroc: see also http://www.whatwg.org/specs/web-apps/current-work/#conformance-requirements-for-authors

[12:35:25.0000] <Hixie>
and its subsections

[12:35:56.0000] <yroc>
I know I'm being very (too) analytical, but that's me!

[12:36:03.0000] <yroc>
Yes, I'll check it out.

[14:52:46.0000] <Hixie>
not sure how i feel about @whatwg tweeting out w3c bureaucracy :-P

[14:56:37.0000] <tantek>
unless WHATWG is planning a takeover from within of W3C bureaucracy...

[14:56:51.0000] <Hixie>
"takeover"?

[14:56:55.0000] <Hixie>
of what?

[14:57:14.0000] <Hixie>
we already write all the specs we want to write, what more is there to take over

[15:09:12.0000] <gavin>
the w3 brand

[15:09:22.0000] <zewt>
who would want that

[15:10:14.0000] <Hixie>
i'm certainly ok with them keeping that...

[15:10:17.0000] <zewt>
that'd be like buying out RealPlayer for the brand recognition

[15:10:22.0000] <Hixie>
hah

[15:11:00.0000] <gavin>
it's not valuable for their reputation amongst people who actually know what they do

[15:11:20.0000] <gavin>
it's valuable for all the other people in the world, of which we are but a small minority

[15:11:29.0000] <zewt>
nobody else cares

[15:12:21.0000] <gavin>
I wish that that that were true, but it's a horribly naive claim

[15:13:07.0000] <Hixie>
it's not clear to me what difference it makes. authors use what's implemented. the implementors are those "who actually know what they do".

[15:13:40.0000] <gavin>
plenty of people still think the w3 is highly relevant to web standardization

[15:13:45.0000] <gavin>
that reputation has value

[15:13:53.0000] <Hixie>
but what does their thinking that actually do, concretely?

[15:14:03.0000] <Hixie>
i mean, if it's just a matter of who gets credit, i don't care

[15:14:26.0000] <Hixie>
i'm happy for the mainstream media to pester the w3c PR team and let us get on with the work :-)

[15:14:31.0000] <zewt>
can't say i've ever known anyone who isn't actually implementing (or complaining about something not implementing) who cared at all about the w3c, or the ietf for that matter

[15:16:38.0000] <gavin>
it's not just about credit. reputation is an important part of being able to influence people and things.

[15:17:20.0000] <zewt>
and reputation is something the w3c has been losing rapidly of late

[15:20:37.0000] <Hixie>
gavin: what is it the w3c can influence that is valuable?

[15:20:59.0000] <Hixie>
we already write all the specs we want (or rather, hand the bandwidth) to write

[15:21:06.0000] <Hixie>
s/hand/have/

[15:21:15.0000] <Hixie>
the browser vendors have influence on the spec

[15:21:22.0000] <Hixie>
the w3c has never had that influence

[15:21:54.0000] <gavin>
they can influence people's thoughts about what web standards are important

[15:22:08.0000] <gavin>
you might say that that's "not important"

[15:22:23.0000] <zewt>
i'd say that's a bit too vague to even have an opinion on, can you be more concrete

[15:22:43.0000] <Hixie>
do you have any examples of them doing that?

[15:22:48.0000] <Hixie>
i'm not sure what you mean

[15:23:00.0000] <Hixie>
like how they influenced people to think XHTML2, XForms, and RDF were important?

[15:24:44.0000] <zewt>
if browser vendors wants to implement something, authors want to use it and whatwg has the bandwidth to spec it, no amount of handwaving or ranting from the w3c would stop it from happening (if they even chose to try, which I'm not aware of them doing)

[15:25:00.0000] <Hixie>
well they tried to stop HTML

[15:25:14.0000] <gavin>
many people think that HTML5 CR is an important milestone, for example

[15:25:25.0000] <Hixie>
(and to a lesser extent canvas and microdata)

[15:25:59.0000] <gavin>
if the w3 tomorrow released a statement saying that HTML5 development hit a wall and that they'd need to delay its readiness as an official spec, many people would believe them

[15:26:06.0000] <Hixie>
and so?

[15:26:17.0000] <zewt>
meanwhile stuff would keep getting implemented and they'd look silly

[15:26:24.0000] <Hixie>
and people would still use it

[15:26:34.0000] <gavin>
no, people would not use it as much

[15:26:36.0000] <Hixie>
just like they have been using it for years while the w3c kept saying it wasn't done

[15:26:40.0000] <zewt>
that's quite a claim

[15:26:56.0000] <gavin>
I'm not talking about the existing uses. I'm talking about new uses.

[15:27:20.0000] <Hixie>
people have used new stuff that i've specced and people have implemented so quickly that we've actually been forced into compataibility constraints before i was done speccing them

[15:27:26.0000] <Hixie>
pushState() being the best example

[15:27:28.0000] <gavin>
getting people to buy that HTML is a suitable platform for mobile development is just as much about PR as it is about what gets implemented

[15:27:56.0000] <zewt>
not at all, it's only about getting apple and google to fix their crappy-to-useless mobile browsers

[15:28:05.0000] <Hixie>
getting people to buy that HTML is a suitable platform for mobile development is exclusively about whether HTML actually ir, or is not, a suitable platform.

[15:28:09.0000] <Hixie>
w3c has sod-all to do with that.

[15:28:22.0000] <Hixie>
(whatwg has very little to do with it either)

[15:28:23.0000] <gavin>
no, it's not at all exclusively about that

[15:28:32.0000] <gavin>
it would be nice if it were

[15:28:45.0000] <Hixie>
people are _trying_ to use the web, and can't because of browser limitations, and that has nothing to do with the w3c

[15:28:49.0000] <Hixie>
which would have them using XForms and RDF

[15:28:53.0000] <gavin>
but we don't live in a world where the only thing that matters is bits-shipped, nice as that would be

[15:29:09.0000] <gavin>
anyhow, I'm clearly not going to get anywhere arguing with you guys about this, so I'll drop it

[15:29:48.0000] <Hixie>
i think facebook's comments (which were based entirely on their experience, as far as i can tell, and not at all on the w3c) had more impact on people's view of the web as a platform for mobile dev than anything the w3c ever did or said

[15:29:59.0000] <zewt>
(and I suspect both apple and google half-ass their mobile browsers intentionally because they want people to write nonportable apps instead)

[15:30:41.0000] <gavin>
I gave a very theoretical example of something that the w3 could impact using its influence - they haven't done that, so it's kind of moot

[15:30:57.0000] <Hixie>
have they ever impacted anything with their influence?

[15:30:59.0000] <gavin>
I agree that they're losing their influence, obviously, but it's naive to claim that they don't have any

[15:31:23.0000] <gavin>
yes, plenty

[15:31:32.0000] <Hixie>
i'm happy to believe they have some if there's any evidence that they've had some, but so far the only impact i've seen is pretty much irrelevant. e.g. they had an impact on what doctypes people use, but that's just an opaque stirng.

[15:31:37.0000] <gavin>
companies have "must support w3 standards" on all of their checklists

[15:31:58.0000] <Hixie>
those companies write web pages that don't validate using flash and html5 features the w3c hasn't included in their specs.

[15:32:04.0000] <Hixie>
so i'm not sure that means anything.


2013-01-04
[16:34:37.0000] <Yuhong>
Personally I consider "HTML5" even as a buzzword a misnomer nowadays.

[16:36:41.0000] <Yuhong>
How many people using the buzzword know for example that canvas dates back to 2005?

[16:45:53.0000] <Yuhong>
Personally, I hope this can be finished: http://www.w3.org/wiki/Evolution

[16:46:07.0000] <Yuhong>
It will be helpful in proving the W3C process is flawed.

[16:47:00.0000] <Yuhong>
Hopefully, the TAG elections will get the right people in and help get this finished.

[16:49:30.0000] <Hixie>
if the people in question don't have time to update it now, why would they have time to update it after joining the mailing list and getting more mail than they do now?

[16:55:14.0000] <Yuhong>
Hixie: http://logbot.glob.com.au/?c=freenode%23whatwg&s=dec+31+2012&e=4+Jan+2013#c759102

[17:01:03.0000] <Yuhong>
Unrelated, but in case you didn't see it.

[18:46:53.0000] <rniwa>
any mozilla folks here?

[18:47:15.0000] <rniwa>
ideally someone working on css.

[18:49:24.0000] <heycam>
rniwa, I can try to help

[18:49:28.0000] <rniwa>
heycam: hi!

[18:49:32.0000] <heycam>
hey

[18:49:37.0000] <rniwa>
heycam: do you know if mozilla has any tests for CSS calc?

[18:49:44.0000] <heycam>
rniwa, we ought to

[18:49:47.0000] <rniwa>
heycam: if so, if you guys are planning to upstream those tests to W3C?

[18:49:59.0000] <rniwa>
heycam: i've checked http://test.csswg.org/source/contributors/mozilla/submitted/ but i don't see any tests there.

[18:50:15.0000] <rniwa>
heycam: mikelawther from google is implementing css calc in webkit

[18:50:24.0000] <heycam>
rniwa, people have been writing new tests in an upstreamable form, but I don't know if we have concrete plans to upstream existing tests

[18:50:27.0000] <heycam>
although it would be nice to

[18:50:28.0000] <rniwa>
heycam: and we would like to be abel to import your tests.

[18:50:34.0000] <rniwa>
heycam: ah, i see.

[18:50:38.0000] <heycam>
oh yes I met mikelawther at LCA last year

[18:50:43.0000] <rniwa>
heycam: cool :)

[18:50:56.0000] <heycam>
let me take a look at the existing tests

[18:50:57.0000] <rniwa>
heycam: could you keep him in the loop about your upstream effort?

[18:51:01.0000] <heycam>
to see how easy they would be to upstream

[18:51:43.0000] <heycam>
they are here btw: https://hg.mozilla.org/mozilla-central/file/tip/layout/reftests/css-calc/

[18:54:20.0000] <heycam>
rniwa, those tests seem reasonable self contained, so I think they shouldn't be hard to upstream

[19:00:31.0000] <rniwa>
heycam: great.

[19:00:47.0000] <rniwa>
heycam: is there any Bugzilla bug filed anywhere regards to this?

[19:00:51.0000] <heycam>
just filed one

[19:00:53.0000] <heycam>
and CCed you

[19:00:54.0000] <rniwa>
heycam: thanks.

[19:00:55.0000] <rniwa>
heycam: oh

[19:00:58.0000] <heycam>
couldn't find mike as a bugzilla user there though

[19:01:05.0000] <rniwa>
heycam: yeah.

[19:01:11.0000] <rniwa>
heycam: i don't think he has Mozilla bug account.

[19:01:17.0000] <rniwa>
/me waits for an email :)

[19:01:24.0000] <rniwa>
heycam: thanks a lot for the help.

[19:01:29.0000] <heycam>
no problem!

[05:00:58.0000] <annevk>
Hixie: ah yeah, I abuse @WHATWG now and then

[05:02:36.0000] <annevk>
Hixie: my excuse has been that the idea was that it could be used for whatever, but maybe we should keep it scoped nowadays

[08:01:10.0000] <annevk>
Man... I'm almost done with annotating parse errors...

[08:01:18.0000] <annevk>
No fun was had

[09:59:34.0000] <Hixie>
annevk: i don't have any problem with you abusing @whatwg, i trust your judgement

[10:00:05.0000] <Hixie>
annevk: i can't help but wonder how many of @whatwg's subscribers really care about the TAG though :-)

[10:00:13.0000] <Hixie>
then again, i'm baffled by why _you_ care, so... :-P

[12:17:41.0000] <Hixie>
hey bruce is asking me what my biggest mistake was for some article he's writing -- anyone got any suggestions? (i've already listed pushState, appcache, postMessage()'s security model...)

[12:18:05.0000] <Ms2ger>
Margin collapsing?

[12:18:21.0000] <Ms2ger>
The HTMLWG?

[12:18:30.0000] <WeirdAl>
Hixie - listening to developers for Acid 3 tests?

[12:18:42.0000] <WeirdAl>
/me being one of those idiot developers

[12:18:52.0000] <Hixie>
ooh, hadn't tought about margin collapsing and acid3, i was focused on the spec

[12:19:04.0000] <Ms2ger>
Acid2 and <p><table>

[12:23:55.0000] <Hixie>
I actually think <p><table> is fine, personally, but yeah, the acid tests in general

[12:24:22.0000] <Ms2ger>
You think the one quirk in the parser is fine?! :)

[12:24:38.0000] <annevk>
Hixie: localStorage?

[12:24:48.0000] <WeirdAl>
compared to the horrors that the acid tests required, Ms2ger?  Yeah.

[12:24:59.0000] <Hixie>
i think the quirk sucks, but i think not implying </p> at <table> is what sucks, not the fact that we have a quirk so much :-)

[12:25:02.0000] <Ms2ger>
Oh, SVG fonts

[12:25:14.0000] <Hixie>
annevk: oh yeah, the storage mutex, good call

[12:25:20.0000] <annevk>
Hixie did not do SVG fonts :-)

[12:25:24.0000] <Hixie>
i did in acid3

[12:25:31.0000] <annevk>
ooh

[12:25:43.0000] <annevk>
Hixie: SGML comments ;-)

[12:25:49.0000] <Hixie>
was that acid2 or 3?

[12:25:51.0000] <Ms2ger>
Oh man

[12:25:52.0000] <Hixie>
2, rigt?

[12:25:56.0000] <annevk>
yeah

[12:25:56.0000] <Ms2ger>
2, I think

[12:27:00.0000] <annevk>
ah, Ms2ger had margin collapsing :)

[12:27:26.0000] <annevk>
That's a long list, why do we trust this guy again?

[12:27:39.0000] <Hixie>
nobody else is willing to do it?

[12:27:40.0000] <Ms2ger>
Why, prefer the CSSWG?

[12:28:05.0000] <annevk>
Ms2ger: uhuh

[12:31:11.0000] <annevk>
looking forward to reading that

[12:31:43.0000] <annevk>
Hixie: I guess that's part of it; would be so great to have actual competition rather than a copy & paste lobby

[13:47:37.0000] <annevk>
MikeSmith: what does https://twitter.com/katoken0215/status/287224151620587520 say?

[13:52:52.0000] <zewt>
that you're a woman, for starters...

[13:53:58.0000] <annevk>
whoa

[13:54:03.0000] <annevk>
TR/domcore looks ugly

[13:54:15.0000] <annevk>
dglazkov: please link to dom.spec.whatwg.org instead from the Shadow DOM spec

[13:56:57.0000] <annevk>
dglazkov: when does redistribution happen? how is this represented in implementations? is the DOM sprinkled with special nodes?

[13:57:23.0000] <annevk>
zewt: if that's all it says it's not very interesting

[14:12:36.0000] <zewt>
annevk: describing what you said in your last post, i think

[14:13:59.0000] <annevk>
New Zealand though?

[14:20:37.0000] <zewt>
annevk: apparently he thought you were a european woman

[14:21:23.0000] <zewt>
https://twitter.com/katoken0215/status/287320663876833280

[14:21:28.0000] <zewt>
(he deleted the last one, heh)

[14:23:20.0000] <yroc>
Hi, wondering why the leading newline following an opening <pre> tag is stripped...

[14:23:35.0000] <yroc>
Is it to prevent the opening <pre> tag from displacing the initial line of preformatted text.

[14:25:58.0000] <annevk>
yroc: legacy thing from SGML iirc

[14:26:39.0000] <annevk>
yroc: http://www.w3.org/TR/html401/appendix/notes.html#notes-line-breaks

[14:26:53.0000] <annevk>
wycats_: you around?

[14:30:08.0000] <annevk>
Anyone else know if it gets any better than http://api.jquery.com/on/ ?

[14:31:27.0000] <annevk>
whoa

[14:31:36.0000] <annevk>
http://zeptojs.com/ document.write is still recommended anno 2012

[14:32:09.0000] <yroc>
annevk: Right. And now, with the white-space processing model, *all* newlines are ignored when white-space: normal;

[14:32:37.0000] <annevk>
yroc: right, so the quirk is only kept for <pre> and <textarea>, where it's observable

[14:32:51.0000] <annevk>
well, more directly observable

[14:32:59.0000] <yroc>
Exactly, where white-space: pre;

[14:33:26.0000] <yroc>
annevk: But *why* is the quirk kept?

[14:33:43.0000] <annevk>
yroc: because otherwise sites will render differently

[14:33:48.0000] <zewt>
the opposite of "on()" is "off()"? really? heh

[14:34:41.0000] <annevk>
zewt: I wonder if that's actually used

[14:34:46.0000] <yroc>
annevk: if the initial newline following <pre> were not stripped, sites would render differently?

[14:35:00.0000] <annevk>
yroc: right

[14:35:19.0000] <yroc>
Uh, can you give an example?

[14:35:30.0000] <annevk>
yroc: you would get a blank line

[14:36:44.0000] <yroc>
Oh, I see what you mean. I thought you meant different browsers would render differently (an interop problem). Yes, exactly, you'd get a blank line

[14:36:45.0000] <annevk>
yroc: http://www.w3.org/TR/CSS21/text.html seems to rely on it for instance

[14:37:06.0000] <annevk>
yroc: well we don't want to remove it because then you'd get an interop problem

[14:37:14.0000] <annevk>
yroc: and we'd break sites

[14:38:10.0000] <zewt>
annevk: doesn't look like it's actually a very nice interface (off(), i mean)

[14:38:25.0000] <yroc>
yroc: but isn't it a useful thing to keep? Doesn't it allow you to start the first line of preformatted text on a "fresh" line without the starting <pre> tag displacing the content?

[14:38:31.0000] <annevk>
zewt: I agree, I'm open to suggestions

[14:38:32.0000] <zewt>
since you still have to have a reference to the listener function, so it has the same problems as addEventListener(x, func.bind(something))

[14:38:37.0000] <yroc>
Oops, I meant annevk!

[14:39:02.0000] <annevk>
yroc: it's being kept

[14:39:06.0000] <zewt>
nicer to return an object representing the observation, eg. x = event.addEventListener(...); x.remove();

[14:39:37.0000] <zewt>
i seem to recall prototype has something like that (been a while though)

[14:39:53.0000] <annevk>
with s/event/element/?

[14:40:09.0000] <zewt>
yeah

[14:40:31.0000] <annevk>
we also have the setInterval API we could mimic...

[14:40:41.0000] <zewt>
http://prototypejs.org/doc/latest/dom/Event/on/index.html

[14:40:54.0000] <yroc>
annevk: Yes, I know, but I'm just saying there's a good reason, which I'm trying to nail down (for example, "without this behavior, you'd get an undesirable blank line at the beginning of your preformatted content."

[14:41:19.0000] <yroc>
annevk: Would you say that's the true reason?

[14:41:54.0000] <annevk>
zewt: could you add that to https://www.w3.org/Bugs/Public/show_bug.cgi?id=16491 perhaps? I guess I'm gonna try to make some progress on that bug. It's been well over a year now...

[14:41:56.0000] <zewt>
these days i just pre-bind my event handlers (this.click_handler = this.click_handler.bind(this)), which is a little wordy but works fine in practice

[14:42:42.0000] <zewt>
not at home, i'll add it if i remember when i get back

[14:44:45.0000] <zewt>
lack of a capture argument to all of those apis is also annoying

[14:51:42.0000] <annevk>
well if nobody is using that...

[14:52:00.0000] <annevk>
we can do all kinds of things, e.g. make all events bubble for the purposes of this new API

[14:52:26.0000] <annevk>
I actually thought jQuery did that, but that page does not describe that behavior

[14:54:48.0000] <annevk>
http://prototypejs.org/doc/latest/dom/Event/Handler/new/index.html is an interesting API too

[14:54:55.0000] <annevk>
although it should implicitly call start

[14:55:48.0000] <Hixie>
yroc: generally if changing something would break web pages (as in this case), we don't even bother to look for other reasons :-)

[14:57:22.0000] <zewt>
yeah i'd much prefer an api that always bubbles, i can filter out the bubble phase easily enough if i really want that

[14:58:26.0000] <zewt>
personally the most annoying subtle weirdness of dom events for me is how capturing listeners aren't run before non-capturing listeners during the "on target" phase (or whatever it's called)

[14:59:58.0000] <annevk>
listeners are in adding order

[15:00:59.0000] <zewt>
but intuitively capturing listeners are before non-capturing listeners, but that's not actually the case when dispatching to the target itself

[15:01:28.0000] <yroc>
Hixie: I see. But incidentally, I think it's actually a good thing that the initial newline is stripped for the reason I outlined above.

[15:01:47.0000] <zewt>
anyway, fixing that even in a different api is probably not worth the added complexity of the subtle difference (and probably other weirdness as a result)

[15:01:48.0000] <Hixie>
yroc: probably, yeah

[15:02:51.0000] <annevk>
zewt: well we can do all kinds of stuff, e.g. let the developer completely control independently whether capture/bubble/target are included or not

[15:03:33.0000] <annevk>
zewt: but whether that's needed... it seems most cases are about target+bubbling, preferably with event delegation via selector

[15:04:14.0000] <zewt>
maybe i just do weird things, i dunno

[15:04:17.0000] <yroc>
Hixie: In fact, I think it would be good to strip the newline after a child <code> starting tag...

[15:04:22.0000] <yroc>
, so the author can start the first line flush with the rest of the code (just a suggestion!)

[15:05:06.0000] <yroc>
Hixie: Wondering why do we an element to represent a word wrap opportunity?

[15:05:10.0000] <zewt>
sometimes i'll put a capturing listener on a tree to grab an event, do something funky with it, then re-dispatch it (perhaps at a later time), eg. grabbing onclick and delaying the actual onclick by 0.5s to allow an animation to happen

[15:05:22.0000] <yroc>
Hixie: Why isn't zero width space sufficient?

[15:05:57.0000] <annevk>
zewt: you can do the same with preventDefault()

[15:06:23.0000] <zewt>
no, because i don't want any non-capturing event listeners to run (since often the actual behavior of the button or whatever is a scripted event, not the default)

[15:07:26.0000] <yroc>
Hixie: U+200B

[15:07:27.0000] <zewt>
anyway, it can be dealt with, it just means guaranteeing that the element where the capturing event listener lives is *above* any nodes that might receive the event later, to guarantee the capturing listener happens first--not a huge deal, just annoying when i forget

[15:09:17.0000] <annevk>
given that none of the libraries have it and pretty much no developer I have talked to really gets the final argument of addEventListener, I'm sceptical about the new API catering for it, but who knows

[15:10:28.0000] <tantek>
why not leave it out until someone needs it in a real world situation?

[15:10:30.0000] <jamesr>
the one that you just say "false" for because firefox complains if you don't?

[15:11:55.0000] <annevk>
tantek: well zewt had such a situation apparently ;)

[15:12:06.0000] <annevk>
jamesr: does it still? :/

[15:12:24.0000] <annevk>
hopefully once those new IDL bindings land that will no longer happen

[15:12:56.0000] <jamesr>
oh! guess it doesn't any more

[15:13:47.0000] <annevk>
since I started writing the core bit of Events it has been optional per spec

[15:14:37.0000] <annevk>
seems optional in Nightly 20something at least

[15:18:35.0000] <zewt>
annevk: i think a new events API should absolutely support capturing, but it'd be fine if it was an options dictionary item instead

[15:19:43.0000] <annevk>
dunno

[15:20:08.0000] <zewt>
capturing isn't used a lot but when you need it, it's really helpful

[15:20:53.0000] <zewt>
afk, heading home


2013-01-05
[16:04:36.0000] <Hixie>
yroc: i seem to recall there was some difference, but the real answer is probably just because it was already implemented, so why not

[16:16:01.0000] <zewt>
annevk: random thought, but i wonder if this could just be element.addEventListener("click", function(e) { }, { options }) when the third argument is a dictionary instead of a boolean, possible options are "selector" and "capture", and have "alwaysBubble" be an option (instead of having a separate function just for that)

[16:17:25.0000] <zewt>
also i wonder if making addEventListener return an object or a timeout-like id would be web-compatible (can't imagine why not, but it's such a critical API that who knows)

[16:36:15.0000] <jamesr>
if we do that i'd really like there to be a way to specify some filters on the sorts of events - i.e. say which key events you care about for keyboard-related ones, specifying which modifiers you care about

[16:36:42.0000] <jamesr>
so the browser can know up-front whether to bother doing all the setup of firing a DOM event or if the listener is just going to toss it

[16:43:36.0000] <yroc>
Hixie: Interesting though because <wbr> is not in the 4.01 spec as far as I can see, nor in Berners-Lee RFC 1866 or W3C's 3.2 spec.

[16:43:58.0000] <Hixie>
yeah we didn't pay much attention to the earlier specs when writing the current one

[16:44:04.0000] <Hixie>
more what browsers implemented

[16:44:11.0000] <yroc>
Hixie: I have found references to it dating back to the late 90s, so it's obviously been around

[16:44:16.0000] <yroc>
I see.

[16:44:59.0000] <yroc>
So that was the driving force then. The fact that it was implemented in the major browsers, so it was just spec'ed

[16:45:53.0000] <Hixie>
that's why it was specced as required to implement, but the reason it was speced as valid to use (a completely different question) is more likely to be that it provided a valid use case (albeit one that's no more useful than the zwsp character, iirc)

[16:48:24.0000] <yroc>
But there's really such thing as "required to implement," is there? I mean the vendors can do what they want, no?

[16:48:36.0000] <Hixie>
well true

[16:48:55.0000] <Hixie>
in practice what the spec says is required to implement is what they will implement anyway

[16:49:29.0000] <yroc>
...or have already implemented! :-)  Gotcha.

[16:49:33.0000] <Hixie>
but it also says what a new browser would have to implement to be compatible with the web

[16:51:38.0000] <yroc>
"Compatible with the web?" -- what do you mean by "web" here?

[16:51:56.0000] <Hixie>
deployed web content

[16:52:35.0000] <yroc>
So compatible with what web authors are producing.

[17:03:58.0000] <Hixie>
right

[17:45:10.0000] <Hixie>
ok, i'm reopening all the whatwg later and remind bugs

[17:52:11.0000] <jamesr>
new year = it's later now?

[17:58:10.0000] <Hixie>
yeah

[19:53:53.0000] <Hixie>
annevk: did you fiele a bug for https://www.w3.org/Bugs/Public/show_bug.cgi?id=20535#c3 ?

[03:40:51.0000] <annevk>
Hixie: will do

[03:57:22.0000] <annevk>
done

[04:02:47.0000] <annevk>
jamesr: interesting idea

[05:04:58.0000] <annevk>
smaug____: I suggest looking at some popular JavaScript libraries if you want to understand "why"

[05:23:15.0000] <smaug____>
annevk: that isn't why

[05:23:33.0000] <annevk>
it is though

[05:23:42.0000] <smaug____>
jQuery has its API just because someone has decided to have such

[05:24:02.0000] <smaug____>
I'd like to understand why jQuery has the API

[05:25:23.0000] <smaug____>
I don't have too much against jQuery's APIs, but need to be careful since it tends to slow down things (either it is jQuery implementation or the API design)

[05:49:06.0000] <annevk>
every developer I talk to wants selector-based filtering

[05:49:19.0000] <annevk>
you make a good point about when to do said filtering though

[05:50:42.0000] <annevk>
pretty sure we can do whatever is most performant there

[05:51:28.0000] <smaug____>
well, it affects to behavior

[05:51:34.0000] <smaug____>
I wonder what jQuery does

[05:55:15.0000] <annevk>
oops, it seems it filters based on event.target

[05:55:41.0000] <smaug____>
oh

[05:55:44.0000] <smaug____>
that is somewhat odd

[05:55:52.0000] <annevk>
nah, see e.g. http://icant.co.uk/sandbox/eventdelegation/

[05:57:04.0000] <smaug____>
other thing possibly useful would be event target groups, so that one could add and remove listeners from many targets at once

[05:57:23.0000] <annevk>
that's basically this

[05:57:47.0000] <smaug____>
it is not

[05:58:03.0000] <annevk>
you register on a common parent and select the targets with a selector

[05:58:20.0000] <smaug____>
this requires common parent and all

[05:58:39.0000] <annevk>
given that events dispatch in a tree, that's a given

[05:58:56.0000] <annevk>
but maybe the reverse is all we need...

[05:59:30.0000] <annevk>
listen to events for elements that match these selectors?

[05:59:55.0000] <annevk>
not sure that quite works given text nodes and such though

[06:01:14.0000] <smaug____>
"given that events dispatch in a tree"... I was thinking something more generic which can handle several DOM trees at once, and wouldn't actually be restricted to DOM trees, but would work with all the event targets

[06:01:53.0000] <smaug____>
hmm, selector matching on XHR doesn't quite make sense

[06:03:03.0000] <smaug____>
is jquery's 'on' node only thing

[06:03:48.0000] <smaug____>
oh dear, it has all different thing for "Ajax"

[06:05:38.0000] <annevk>
yeah, selector-based matching only makes sense for Elements

[06:05:57.0000] <annevk>
well, for RootNode I suppose

[06:07:11.0000] <smaug____>
/me doesn't understand the word "delegation" with event handling

[06:07:16.0000] <smaug____>
it is just normal event handling

[06:08:16.0000] <smaug____>
the fact that listener isn't on the target or that target checking happens within the listner does not mean any kind of "delegation"

[06:17:40.0000] <annevk>
I think the way it's viewed is that you delegate the work to a listener registered on a parent

[06:18:16.0000] <annevk>
I'm not sure it's very interesting to debate terminology at this point though. It's called delegation by the developer community...

[06:18:47.0000] <smaug____>
yeah, and I just don't understand what you actually delegate. You just do stuff in an ancestor's listener :)

[06:19:23.0000] <smaug____>
well, delegation isn't a good term IMO, so I don't expect it to end up to specs

[06:19:34.0000] <smaug____>
we need something more exact, if anything

[06:19:57.0000] <smaug____>
but lunch time

[06:28:12.0000] <annevk>
the spec will just define the API, no buzzwords...

[06:28:38.0000] <annevk>
but at this point it's not really clear what requirements the API should meet

[07:29:49.0000] <smaug____>
yeah, need to know the requirements first

[09:31:27.0000] <zewt>
smaug____: "delegation" just refers to the approach (handling events for dynamic trees by listening up the tree and filtering), and it's the best term there will ever be merely because it's what everyone uses and understands

[09:31:52.0000] <zewt>
trying to rename something after a term is widely accepted is never the right thing to do

[09:33:42.0000] <smaug____>
well, I don't know how accepted that is

[09:34:32.0000] <smaug____>
anyhow, if it doesn't end up to any spec, as I hope, I don't care :)

[09:34:34.0000] <zewt>
it is in my experience

[09:35:50.0000] <smaug____>
Firefox UI is all about event "delegation", but "delegation" isn't really used anywhere

[09:36:09.0000] <smaug____>
(I know, that is not web development)

[09:58:02.0000] <zewt>
oops, tried to put a million event listeners on window and chrome is upset at me

[10:01:05.0000] <smaug____>
:)

[10:01:16.0000] <smaug____>
zewt: doing performance testing?

[10:02:37.0000] <smaug____>
(for some reason chrome's event dispatch speed has regressed significantly)

[10:03:08.0000] <smaug____>
(at least in my tests)

[10:07:33.0000] <zewt>
smaug____: just sanity checking the "event filtering" thing on https://www.w3.org/Bugs/Public/show_bug.cgi?id=16491 (which as I suspected, seems to not be useful, at least at the dispatch phase)

[10:08:18.0000] <zewt>
also ... wow, webkit is initKeyboardEvent and gecko is initKeyEvent and there's no overlap? seriously?

[10:08:56.0000] <smaug____>
Gecko has DOM 0 key events, webkit has some obsolete D3E draft key events, IIRC

[10:13:13.0000] <annevk>
o_O

[12:30:27.0000] <Yuhong>
"And we provide the longest support life cycle of any browser, allowing you to upgrade your browser at your own pace."

[12:30:35.0000] <Yuhong>
From http://blogs.windows.com/ie/b/ie/archive/2012/12/13/ten-reasons-why-internet-explorer-10-is-best-for-business.aspx

[13:11:51.0000] <zewt>
one might possibly refer to that as "spin"

[13:31:23.0000] <Yuhong>
<zewt> one might possibly refer to that as "spin"

[13:32:29.0000] <Yuhong>
Not my point, My point is they are actually touting that they support all IE versions for the 10+ years life of a Windows version.


2013-01-06
[08:25:16.0000] <zewt>
dreaming of a world where dom events never had the bubbles and cancelable flags

[11:44:14.0000] <Hixie>
zewt: the cancelable flag is a particularly useless one

[11:51:37.0000] <Ms2ger>
Pff

[11:51:41.0000] <Ms2ger>
Half the web is useless

[11:59:00.0000] <Hixie>
i dunno about _that_

[12:02:03.0000] <zewt>
cancelable should be relegated to web-compatibility only and otherwise never even mentioned in specs

[12:02:47.0000] <zewt>
all events should be cancelable unless there's some weird web-compat reason otherwise

[12:17:20.0000] <Hixie>
zewt: it's less work for me to keep just speccing it as is (cancelable if canceling has an effect, not otherwise) than it would be to go through and change everything...

[12:17:45.0000] <zewt>
well, changing the ones that are implemented already is probably not worth it, but new events should just always be cancelable

[12:18:39.0000] <Hixie>
i think it'd be worse for half the events to make sense and the other half to be always cancelable than for us to continue to just do it

[12:21:36.0000] <zewt>
but always being cancelable makes more sense, since the whole concept of uncancellable events doesn't make sense :)

[13:04:00.0000] <Hixie>
zewt: sure it does

[13:04:05.0000] <Hixie>
zewt: i mean, it's not useful, but it makes sense

[13:04:32.0000] <Hixie>
zewt: it just means that the code that invoked the event will not check whether the event was canceled or nat

[13:21:03.0000] <gsnedders>
hsivonen, jgraham, abarth: do we really want tests for <main> in html5lib when it's not in the spec

[13:31:36.0000] <gsnedders>
Also, wow, nice. We now have the tokenizer depending on the parser. Yay.

[13:32:22.0000] <Hixie>
for what?

[13:33:09.0000] <gsnedders>
In html5lib. For the CDATA state.

[13:33:35.0000] <Hixie>
is that all?

[13:33:53.0000] <Hixie>
i thought the parser could switch the tokeniser state for other things too

[13:33:55.0000] <gsnedders>
Yeah, otherwise the parser just manipulates the tokenizer state.

[13:33:56.0000] <Hixie>
e.g. <plaintext>

[13:33:59.0000] <Hixie>
ah

[13:34:03.0000] <Hixie>
what's the difference here?

[13:34:20.0000] <gsnedders>
Tokenizer looking at the parser, not parser mutating tokenizer.

[13:35:01.0000] <Hixie>
ah, k. i guess i forget what's special about cdata.

[13:35:03.0000] <Hixie>
it's been a whiel.

[13:35:05.0000] <Hixie>
while.

[13:35:12.0000] <gsnedders>
Foreign content is top of the stack.

[13:35:19.0000] <Hixie>
ah, right

[13:35:33.0000] <Hixie>
could probably be implemented as state the other way too

[13:35:40.0000] <gsnedders>
Or bottom of the stack, depending on who's listening.

[13:35:54.0000] <Hixie>
oh man, that's something i should have listed as one of my biggest mistakes

[13:36:00.0000] <Hixie>
what a mess

[13:37:53.0000] <abarth>
gsnedders: The <main> thing seems like a tempest in a teapot

[13:38:02.0000] <abarth>
gsnedders: I'm just ignoring it figuring that it doesn't matter

[13:40:34.0000] <gsnedders>
abarth: I'm just somewhat irked by the tests failing :P

[13:41:03.0000] <abarth>
can we move them to a "proposed" directory or something?

[13:42:13.0000] <gsnedders>
Not really. html5lib just names tests *.dat, and there's little attention paid to file names in most runners, AFAIK.

[13:45:03.0000] <abarth>
I mean that we could move the "dat" file to a different directory

[13:45:27.0000] <abarth>
so that it's not run until the behavior it is tested is "accepted" in some sense

[13:46:49.0000] <gsnedders>
Yeah, I guess. hsivonen: you care if we move the main tests to a separate file in a proposed folder?

[14:10:42.0000] <Hixie>
do browsers not implement Element.querySelector()?

[14:12:55.0000] <Hixie>
nevermind, i'm a tool


2013-01-07
[17:57:33.0000] <Hixie>
man, why is utf-8 so hard for libraries to get right

[02:13:16.0000] <annevk>
I thinks this API for events is the way to go: https://gist.github.com/4463430

[02:13:23.0000] <annevk>
with the second and third argument reversed

[02:13:47.0000] <annevk>
and for now just make everything bubble and ignore capture altogether

[02:24:03.0000] <jgraham>
Is matchesSelector suppoed to be a built-in function on window, or something that a user could do in js?

[02:24:49.0000] <Ms2ger>
Builtin on Element, no?

[02:25:05.0000] <jgraham>
No, the one in the proposal is different

[02:43:11.0000] <hsivonen>
gsnedders: I put the <main> tests in a separate file and checked with jgraham and annevk first

[02:43:50.0000] <annevk>
jgraham: you would do it in JS

[02:44:04.0000] <annevk>
jgraham: as in the proposal

[02:45:06.0000] <jgraham>
annevk: Well it was marked as "syntactic sugar" so I thought you were proposing a built-in equavalent to the following JS

[02:45:38.0000] <jgraham>
Since sugar is usually something that you don't have to implement yourself

[02:46:04.0000] <jgraham>
hsivonen: I think what you did was fine fwiw

[02:47:01.0000] <annevk>
jgraham: ah yeah

[02:47:23.0000] <annevk>
jgraham: I think for Element.on we could overload and let the third argument be a string which would be interpreted as that sugar

[02:47:25.0000] <odinho>
Getting back a stop() function is a bit strange though?

[02:47:31.0000] <annevk>
odinho: why?

[02:47:46.0000] <odinho>
No, I just haven't seen it. s/strange/unfamiliar/

[02:48:05.0000] <annevk>
I quite like it, seems much more lightweight than returning an object with a method

[02:48:05.0000] <odinho>
More used to getting back object I can do moar stuff on.

[02:48:41.0000] <darobin>
well, it can also be an object :)

[02:48:45.0000] <odinho>
And if we'd even want to do something else with the registered listener than stopping it?

[02:50:02.0000] <odinho>
Though I guess the jqueryists would actually expect on to return eventTarget itself, so you could chain.

[02:51:05.0000] <Ms2ger>
Boo

[02:51:27.0000] <odinho>
It'd be nice not having to write addEventListener all the time.

[02:51:58.0000] <annevk>
I want to return a function/object as the other pattern of unregistering sucks

[02:52:12.0000] <odinho>
annevk: True dat.

[02:52:21.0000] <odinho>
(I'm very for the .on it no matter how it's done)

[02:52:41.0000] <annevk>
Yeah, I don't want to make addEventListener more complicated

[02:53:28.0000] <annevk>
The only other thing I thought of was making the methods exclusive but I think that's too much inconvenience

[02:54:19.0000] <darobin>
note that you could return an object and allow for chaining

[02:55:05.0000] <darobin>
all it takes would be for the returned object to also support .on() and know what event target to send it to (which it ought to)

[02:55:16.0000] <darobin>
of course, I'm not saying that's necessarily a good idea :)

[02:57:46.0000] <annevk>
I thought it was just element.matches() these days btw?

[02:57:51.0000] <annevk>
darobin: sounds like a bit too much magic

[03:00:07.0000] <darobin>
annevk: what bothers me more than the magic is that it actually only chains .on()

[03:00:29.0000] <darobin>
whereas in chaining I'd expect to be able to call whatever is callable on the original event target

[03:00:59.0000] <darobin>
$el.on(...).css(...).appendTo(...) etc.

[03:01:19.0000] <Ms2ger>
Eww

[03:04:22.0000] <annevk>
My new hobby: finding useful return values that break chaining

[03:04:46.0000] <jgraham>
Isn't that the normal case?

[03:05:20.0000] <jgraham>
I mean typically you expect a function (or method) to return a value

[03:05:41.0000] <jgraham>
Returning the object that you first thought of is a rather strange idea

[03:11:57.0000] <annevk>
It was a joke :)

[03:15:39.0000] <annevk>
Minutes are so bad... http://www.w3.org/2012/05/02-webapps-minutes.html#item04 "[ Bike shedding about name ]"

[03:15:56.0000] <annevk>
Pretty sure we actually made a decision there

[03:19:13.0000] <hsivonen>
btw, has anyone tested if IE10 has an ‚ÄúIE9 XML‚Äù mode in addition to an ‚ÄúIE10 XML‚Äù mode?

[03:19:55.0000] <hsivonen>
I guess that‚Äôs something I need to test

[03:20:14.0000] <hsivonen>
Also: Modes in mobile edition of IE9 and IE10

[03:21:27.0000] <hsivonen>
hmm. Google Maps for desktop renders in the IE10 Standard mode, so they don‚Äôt even have the excuse of that mode not existing on mobile

[03:23:07.0000] <annevk>
http://programmingisterrible.com/post/39812339693/are-16-bits-providing-at-most-65-536-distinct beautiful

[03:24:00.0000] <hsivonen>
hah

[03:24:07.0000] <darobin>
beautiful

[03:24:50.0000] <darobin>
/me u2665 chaining

[03:31:17.0000] <annevk>
also from that blog I learned about https://www.facebook.com/notes/facebook-engineering/xhp-a-new-way-to-write-php/294003943919

[03:49:02.0000] <darobin>
"The correct solution is to pass this input through htmlspecialchars() before displaying it to the user."

[03:49:13.0000] <darobin>
dude, the correct solution is to not use PHP in the first place

[04:01:18.0000] <annevk>
http://programmingisterrible.com/post/39590933826/the-ghost-of-http

[04:01:24.0000] <annevk>
this blog is getting better and better

[04:02:00.0000] <annevk>
darobin: doesn't matter, every language has the same problem whenever you string concat HTML

[04:02:16.0000] <darobin>
annevk: it does matter

[04:02:46.0000] <darobin>
if you build a templating language specifically for the web and you don't make it so that it escapes HTML by default, don't be surprised that there are so many exploits later

[04:03:55.0000] <annevk>
fair enough I suppose, but I don't really see PHP as a templating language, it's just another language

[04:13:14.0000] <hsivonen>
annevk: points to the blogger for including Atom on the list of failures. We should have publishes an RSS5 instead.

[04:47:50.0000] <odinho>
Hmm. HTML6 is XML. Sneaky. Not even backwards compat afics. http://html6spec.com/

[04:49:42.0000] <odinho>
( http://lists.w3.org/Archives/Public/public-html/2013Jan/0016.html )

[04:52:34.0000] <hsivonen>
sigh. constant vigilance needed. I thought we agreed not to do stuff like http://html5.org/tools/web-apps-tracker?from=7621&to=7622 back in 2006 after burying the ‚Äúsignificant inline content‚Äù concept

[04:55:21.0000] <MikeSmith>
hsivonen: Hixie seems to be saying he intended it that way all along, for the title element at least

[04:56:40.0000] <hsivonen>
I wonder if he pinged glazou first

[04:57:08.0000] <MikeSmith>
I don't think he pinged anybody

[04:58:21.0000] <MikeSmith>
I think he made that change as a result of a recent IRC discussion

[04:58:34.0000] <MikeSmith>
I'll try to find a pointer to the logs

[05:19:42.0000] <MikeSmith>
hsivonen: http://logbot.glob.com.au/?c=freenode%23whatwg&s=20+Dec+2012&e=21+Dec+2012#c756715 and http://logbot.glob.com.au/?c=freenode%23whatwg&s=21+Dec+2012&e=22+Dec+2012#c757484

[05:25:29.0000] <hsivonen>
MikeSmith: thanks

[05:27:49.0000] <hsivonen>
I think I will end up sending email to the list :-(

[05:29:05.0000] <hsivonen>
do we have a wiki page that explains why conneg is bad and you should not try to solve things by saying ‚ÄúI know! Let‚Äôs use conneg!‚ÄùS

[05:29:12.0000] <hsivonen>
s/S/?/

[05:31:03.0000] <annevk>
slightlyoff: not sure if you're on IRC, but the Event class I pointed to is the same as the DOM has plus WebKit proprietary extensions

[05:31:13.0000] <annevk>
slightlyoff: not actually changed for Dart

[05:32:11.0000] <annevk>
hsivonen: someone from Google is pushing it again: http://www.igvita.com/2012/12/18/deploying-new-image-formats-on-the-web/

[05:32:24.0000] <annevk>
hsivonen: 386'ing conneg is not for me

[05:32:46.0000] <hsivonen>
boo. Dart‚Äôs ‚Äúcleaned up‚Äù DOM still has live child collections

[05:33:02.0000] <hsivonen>
firstChild/nextSibling FTW

[05:33:23.0000] <annevk>
Part of it is "cleaned up", lots of it seems a straight copy of the existing classes/interfaces

[05:34:30.0000] <annevk>
oh, Eric Lawrence points out some problems with conneg in the comments

[05:37:48.0000] <jgraham>
Dart hasn't died yet? How sad

[05:38:47.0000] <annevk>
It's not like Google's bleeding money over it

[05:39:17.0000] <jgraham>
Well no, but it is keeping bright people from working on better things

[05:43:34.0000] <hsivonen>
I ended up writing a short one-off comment about Accept: https://bugzilla.mozilla.org/show_bug.cgi?id=240493#c89

[05:44:44.0000] <annevk>
does webarch say anything about conneg?

[05:45:13.0000] <annevk>
it does

[06:45:15.0000] <annevk>
https://gist.github.com/4475457

[06:45:29.0000] <annevk>
That includes all the syntax sugar libraries have...

[06:46:09.0000] <annevk>
heycam|away: are you there? I wonder if the above overloading thingie actually works... Maybe Ms2ger knows?

[06:46:38.0000] <Ms2ger>
dictionary<EventCallback>?

[06:47:16.0000] <annevk>
{click: callback1, resize: callback2}

[06:48:18.0000] <Ms2ger>
Hrm

[06:48:31.0000] <Ms2ger>
A dictionary with an open-ended set of keys?

[06:48:56.0000] <Ms2ger>
Because that doesn't exist

[06:48:59.0000] <annevk>
Yes, with string keys and values of type between < and >

[06:49:13.0000] <annevk>
Ms2ger: well there's a bug for that

[06:49:19.0000] <darobin>
Ms2ger: that doesn't exist but there's a bug for it

[06:49:19.0000] <Ms2ger>
Oh?

[06:49:28.0000] <Ms2ger>
Has someone specced iteration order?

[06:50:02.0000] <annevk>
Ms2ger: https://mail.mozilla.org/pipermail/es-discuss/2013-January/027842.html

[06:50:08.0000] <annevk>
Ms2ger: anything else? :)

[06:51:17.0000] <Ms2ger>
But most likely, those wouldn't be distinguishable, no

[06:57:04.0000] <zewt>
annevk: don't know what the point of the weird dictionary thing is; not sure what "EventFilter" is but if it's the "filter based on keys for keypress" or whatever, like I said before that seems like a complex optimization for something having no need of optimization

[06:57:49.0000] <annevk>
zewt: it's so you can implement your own delegation

[06:58:03.0000] <annevk>
zewt: e.g. based on a selector, or something else

[06:58:54.0000] <zewt>
you can already do it manually now within the function if you want to do it yourself

[06:59:52.0000] <annevk>
sure but that's less reusable

[07:00:01.0000] <zewt>
if(!event.target.matchesSelector("whatever")) return;

[07:02:21.0000] <zewt>
also, an options dictionary seems natural, instead of an infrequently-used optional parameter

[07:03:49.0000] <hsivonen>
OK. I started the wiki page: http://wiki.whatwg.org/wiki/Why_not_conneg

[07:03:56.0000] <annevk>
hsivonen: heh

[07:04:11.0000] <annevk>
zewt: I believe it's quite frequently used actually

[07:04:19.0000] <zewt>
not to channel a hixie, but are there use cases for making up your own filters other than selectors? in my experience selectors are a pretty good fit

[07:06:24.0000] <zewt>
elem.addEventListener("click", this.onClick, { filter: ".button" }); seems nice and clean and clear to me

[07:06:42.0000] <darobin>
to back up zewt's point, is there a library that filters on something other than selectors?

[07:08:36.0000] <zewt>
can always start with string selectors, and make it a (DOMString or EventFilter) later if wanted

[07:08:40.0000] <annevk>
well selectors don't make sense for non-RootNode nodes

[07:09:02.0000] <zewt>
what's a RootNode?

[07:09:06.0000] <annevk>
see DOM

[07:09:12.0000] <zewt>
if that means "document" then that's wrong

[07:09:40.0000] <annevk>
why? if you register on a document you want to filter on its elemetn descendants, same for documentfragment

[07:10:13.0000] <zewt>
if you register on an element you want to filter on its descendants too, why wouldn't that make sense? that's how it's used

[07:10:22.0000] <darobin>
yeah, that's how it's used

[07:10:24.0000] <annevk>
sure, RootNode includes Element

[07:10:55.0000] <annevk>
again, see DOM

[07:11:05.0000] <zewt>
then that's not what I said :P and that's a pretty broken name

[07:11:30.0000] <zewt>
gotta head to work, later

[07:11:42.0000] <annevk>
well it means Document

[07:11:45.0000] <annevk>
just as much as it means Element

[07:11:56.0000] <annevk>
and DocumentFragment

[07:12:04.0000] <annevk>
those can all be roots

[07:12:14.0000] <zewt>
it doesn't mean the root node of a document, which is what it sounds like--it doesn't make sense for every node in a tree to be called a "root node", heh

[07:12:16.0000] <darobin>
yeah it's not the best name ever

[07:12:46.0000] <annevk>
it can be renamed if you have a suggestion

[07:12:50.0000] <darobin>
TreeNode?

[07:12:51.0000] <annevk>
it doesn't really matter

[07:12:57.0000] <zewt>
but anyway selectors inside a document are the overwhelming majority of use cases, makes sense to me to optimize for that

[07:12:58.0000] <annevk>
Comment is a TreeNode too

[07:12:59.0000] <darobin>
not really, no, but it's very confusing

[07:13:23.0000] <annevk>
zewt: the proposal optimizes for that

[07:13:28.0000] <zewt>
but afk work for real

[07:13:58.0000] <darobin>
comments have children?

[07:14:15.0000] <annevk>
a comment is part of a Tree

[07:14:20.0000] <darobin>
sure, everything is :)

[07:14:26.0000] <darobin>
BranchNode

[07:14:27.0000] <darobin>
?

[07:14:30.0000] <annevk>
right, that's why it's super confusing

[07:14:31.0000] <darobin>
NonLeafNode?

[07:14:47.0000] <darobin>
TrunkNode

[07:14:55.0000] <Ms2ger>
BlahNode

[07:15:01.0000] <darobin>
ContainerNode

[07:15:04.0000] <annevk>
ah

[07:15:04.0000] <darobin>
yeah, what Ms2ger said

[07:15:13.0000] <darobin>
anything that doesn't imply it's a root when it's not :)

[07:15:15.0000] <annevk>
Wikipedia suggests InternalNode and ExternalNode

[07:15:16.0000] <Ms2ger>
darobin, heya

[07:15:24.0000] <Ms2ger>
Feel like reviewing some tests? :)

[07:15:26.0000] <annevk>
http://en.wikipedia.org/wiki/Tree_(data_structure)#Terminology

[07:15:33.0000] <darobin>
Ms2ger: I will

[07:15:36.0000] <annevk>
oh but that doesn't work

[07:15:58.0000] <darobin>
annevk: don't use wikipedia for that, you'll get some computer science terminology out of it

[07:16:55.0000] <annevk>
yeah and it'd be wrong anyway

[07:17:04.0000] <annevk>
it should indicate it has the potential to have child nodes

[07:17:10.0000] <darobin>
MotherNode

[07:17:22.0000] <annevk>
uhuh

[07:17:33.0000] <darobin>
ParentNode

[07:17:46.0000] <annevk>
I guess that could work

[07:17:53.0000] <annevk>
the other one is named ChildNode at the moment

[07:17:57.0000] <annevk>
and element is in both

[07:18:05.0000] <darobin>
/me likes MotherNode better, but hey :)

[07:18:12.0000] <darobin>
"I found it and it's the MotherNode!"

[07:19:00.0000] <annevk>
looks like your first contribution to the DOM spec

[07:19:28.0000] <annevk>
at least from this generation

[07:22:17.0000] <annevk>
committed

[07:25:34.0000] <annevk>
oh hey, GitHub -> Twitter works again...

[07:25:47.0000] <annevk>
https://twitter.com/thedomstandard/status/288304791833161728

[07:35:11.0000] <odinho>
darobin: MotherNode sounds like something cool and nongeneric, should find some other use for it. :]

[07:36:02.0000] <darobin>
odinho: definitely :)

[08:23:15.0000] <gsnedders>
/me wonders how many HTTP devices there are where gzip is significant in overhead

[08:29:31.0000] <darobin>
gsnedders: I'm guessing mostly old feature phones and the zigbee devices

[08:29:39.0000] <darobin>
(and anything like the latter)

[08:31:34.0000] <MikeSmith>
what's zigbee devices?

[08:35:32.0000] <darobin>
MikeSmith: it's IoT stuff

[08:36:14.0000] <darobin>
like X10, but designed this decade

[08:36:28.0000] <annevk>
I changed https://gist.github.com/4475457 around btw

[08:36:31.0000] <darobin>
they use HTTP on some ridiculously small devices

[08:38:00.0000] <gsnedders>
darobin: How many feature phones run full HTTP clients?

[08:38:40.0000] <gsnedders>
Opera Mini will at times use HTTP, but normally not.

[08:38:51.0000] <gsnedders>
And it's rare to see a full browser nowadays on a feature phone.

[08:39:06.0000] <darobin>
gsnedders: well many *have* an HTTP client, few would actually see much actual usage

[08:39:23.0000] <annevk>
oh yes

[08:39:29.0000] <annevk>
GitHub -> Twitter works again fully

[08:39:30.0000] <annevk>
teehee

[08:39:50.0000] <darobin>
gsnedders: there are quite a lot of very old Nokias out there, they all have browsers

[08:40:13.0000] <darobin>
but browsing the web with those is unlikely to be a very happy experience :)

[08:40:38.0000] <annevk>
lots of phones have browsers, but are they used?

[08:41:01.0000] <gsnedders>
Most phones with browsers that get used have the power that gzip isn't massively noteworthy.

[08:51:25.0000] <darobin>
gsnedders: agreed, but that's not the case for zigbee devices

[08:51:39.0000] <darobin>
that said, I'm not sure what your context is ‚Äî it's quite likely that those don't matter in your case

[08:51:58.0000] <darobin>
on really dumb devices gzip does have an impact

[08:52:07.0000] <darobin>
in fact IIRC zigbee uses EXI for those

[09:02:41.0000] <dglazkov>
good morning, Whatwg!

[09:02:46.0000] <gsnedders>
darobin: My context is hsivonen's claim HTTP would've been better without the negociation for gzip

[09:03:37.0000] <darobin>
mmm, possibly

[09:05:03.0000] <darobin>
HTTP would have been better with no authoritative metadata whatsoever

[09:05:27.0000] <darobin>
so you drop content type and content encoding, and only use magic numbers (falling back to sniffing)

[09:06:14.0000] <darobin>
authoritative metadata is just a nightmare design antipattern

[09:09:09.0000] <annevk>
Hmm, Twitter suggests people maybe want to encode to other encodings... http://cache.gyazo.com/2ad55482c4cbcc983ec49306dc3fa47d.png

[09:10:10.0000] <Ms2ger>
darobin, I bet you like Content-MD5

[09:10:40.0000] <darobin>
annevk: that's a lie

[09:10:44.0000] <gsnedders>
/me wonders how much Content-MD5 would help if everyone actually encforced it

[09:10:47.0000] <darobin>
Ms2ger: one of my faves!

[09:10:58.0000] <annevk>
darobin: Ms2ger is lying or I am?

[09:11:18.0000] <annevk>
/me is confused

[09:11:22.0000] <Ms2ger>
Eh?

[09:11:24.0000] <darobin>
annevk: Ms2ger always is, but it's a lie that people want to encode to anything other than utf8

[09:11:29.0000] <darobin>
don't listen to the voices!

[09:11:31.0000] <annevk>
ooh

[09:11:42.0000] <gsnedders>
Yay VCS!

[09:11:45.0000] <annevk>
I wasn't planning on changing the API based on some rambling on twitter

[09:11:51.0000] <gsnedders>
bzr failing to clone because of some UnicodeDecodeError.

[09:14:54.0000] <annevk>
I wonder how https://bugzilla.mozilla.org/show_bug.cgi?id=757726 helps if you can still do "in"

[09:15:19.0000] <gsnedders>
Or just have an <object> and see if the fallback content is used.

[09:16:30.0000] <annevk>
all it does it seems is create a weird object

[09:21:00.0000] <Pomax>
is this a reasonable place for html5lib questions, or do I have to use the mailing list for that?

[09:22:02.0000] <Ms2ger>
Ask away

[09:22:43.0000] <Pomax>
I'm just trying the basic documentation example, with an import html5lib, f = open("test.html"), doc = html5lib.parse(f), but already the content of doc is <None>

[09:23:15.0000] <Pomax>
using the smallest test html I could come up with that's a full document with some content, http://pastebin.mozilla.org/2043951

[09:23:17.0000] <gsnedders>
You almost certainly want to pass a treebuilder to it, so html5lib.parse(f, treebuilder="etree") gives you an ElementTree

[09:23:32.0000] <gsnedders>
/me hopes he's got the argument format right

[09:23:55.0000] <gsnedders>
Oh wow, I did.

[09:23:56.0000] <Pomax>
hm. in that case the docs definitely need a minor tweak, since the first example claims to already return a simpletree

[09:23:59.0000] <Pomax>
heh, nice

[09:24:04.0000] <Pomax>
alright, let me try that.

[09:24:29.0000] <gsnedders>
You basically don't want to use simpletree. We should probably just make etree the default.

[09:24:43.0000] <Pomax>
I was using someone else's library (bleach) that relies on html5lib but things started going tremendously wrong once I used html docs with svg elements, so I figured I'd try to track down where it goes wrong.

[09:24:43.0000] <jgraham>
<None> is the unhelpful representation of the root node in simpletree

[09:24:59.0000] <gsnedders>
/me is busy trying to fix 3to2 to get it converting Python 3 html5lib

[09:25:05.0000] <jgraham>
So it actually did work

[09:25:13.0000] <jgraham>
But didn't look like it had

[09:25:14.0000] <gsnedders>
jgraham: ...

[09:25:26.0000] <gsnedders>
I've contributed to this project for how long and didn't know this!

[09:25:28.0000] <jgraham>
Well None != <None>

[09:25:42.0000] <jgraham>
The angle brackets are everything

[09:25:42.0000] <gsnedders>
Well, yes, but still. Looks like some container containing just None.

[09:26:41.0000] <jgraham>
Well it is a side effect of the implementation of repr being "<%s>"%element.tagname and the root node having tagname of None

[09:26:59.0000] <jgraham>
Should just override it in that case

[09:27:30.0000] <gsnedders>
File a bug?

[09:28:31.0000] <jgraham>
It would be faster to fix the bug

[09:28:45.0000] <gsnedders>
Can you manually port the fix to Py3 then?

[09:29:09.0000] <gsnedders>
/me is sufficently far along with this he wants to just get it done without doing Py2->Py3 again

[09:30:15.0000] <MikeSmith>
gsnedders: about your tweet saying that hold html5lib runs much faster under latest PyPy for parsing the HTML5 spec

[09:30:33.0000] <MikeSmith>
how fast is that in absolute terms?

[09:30:50.0000] <gsnedders>
6s locally, which is 2x speed.

[09:30:52.0000] <MikeSmith>
I mean, does it make it actually usable for docs of that size?

[09:30:55.0000] <MikeSmith>
ok

[09:31:24.0000] <gsnedders>
When of the ugly bits of html5lib exhibits really bad perf in PyPy though, so it should be easy enough to make that quicker

[09:31:48.0000] <Ms2ger>
When?

[09:31:59.0000] <MikeSmith>
gsnedders: OK

[09:32:04.0000] <gsnedders>
s/When/One/

[09:32:05.0000] <MikeSmith>
without PyPy it takes a lot longer than 12s even

[09:32:22.0000] <gsnedders>
Then I guess I have a quicker computer than you :P

[09:33:20.0000] <gsnedders>
$ time python  parse.py -b etree --no-html ../testdata/sites/web-apps-new.htm

[09:33:24.0000] <gsnedders>
real    0m13.742s

[09:33:33.0000] <gsnedders>
That appears to be pretty much it.

[09:33:44.0000] <MikeSmith>
hmm lemme try it now

[09:34:23.0000] <gsnedders>
web-apps-new.htm isn't in the repo, it's just http://www.whatwg.org/c yesterday evening

[09:35:18.0000] <MikeSmith>
real	0m11.481s

[09:37:14.0000] <gsnedders>
Interestingly, it's far slower with lxml

[09:37:55.0000] <MikeSmith>
I get 0m15.771s if I actually generate output from parse.py

[09:40:45.0000] <annevk>
hsivonen: fwiw, www-international is now "debating" "Why not conneg"

[09:43:12.0000] <MikeSmith>
annevk: "He can‚Äôt be serious, can he?"

[09:43:18.0000] <MikeSmith>
gotta love that

[09:43:24.0000] <Ms2ger>
Bwahahahahahahahahaha

[09:43:47.0000] <MikeSmith>
"Well, you expect shocking remarks out of WhatWG members." is good too

[09:43:50.0000] <annevk>
"Well, you expect shocking remarks out of WhatWG members." (Is this missing a "can"?)

[09:44:34.0000] <annevk>
I guess it works this way too

[10:23:09.0000] <TabAtkins_>
Morning, whatwg!

[10:23:11.0000] <TabAtkins_>
^_^

[10:48:41.0000] <annevk>
Ms2ger: step 9 in http://dom.spec.whatwg.org/#concept-event-dispatch is redundant with step 4.5 in invoke or not?

[10:48:55.0000] <annevk>
Ms2ger: (not step 9's substeps, those are needed)

[10:50:21.0000] <Ms2ger>
annevk, eh, why?

[10:51:18.0000] <annevk>
Ms2ger: oops

[10:51:49.0000] <annevk>
Ms2ger: hmm so yeah, bubbles needs to be checked either way :)

[10:58:14.0000] <Pomax>
hm, another html5lib question; if I want to parse an html5 doc that has embedded SVG with namespaced attributes like xlink:href, which creative mix of html5lib settings do I need to use to preserve those namespaces during parse? =)

[11:05:40.0000] <jgraham>
How much "like" xlink:href?

[11:06:14.0000] <jgraham>
There are a few special cases where namespaces are preserved, but generally HTML (and SVG-in-HTML) doesn't have namespaces

[11:06:33.0000] <jgraham>
(xlink:href is one such special case)

[11:06:33.0000] <Pomax>
"things like" being used to mean "things including" =)

[11:07:16.0000] <Pomax>
good point, the only namespaced attribute I found in the SVG spec attribute list for all the elements we need to support is the xlink:href one

[11:07:40.0000] <Pomax>
although then that still leaves the question of how to preserve it when running the html doc through html5lib. with "dom" the 'xlink:

[11:07:43.0000] <Pomax>
' bit is removed

[11:08:21.0000] <Pomax>
at least when I print out the parse result using the "Serialization of Streams" example

[11:08:37.0000] <Hixie>
hsivonen: what's wrong with http://html5.org/tools/web-apps-tracker?from=7621&to=7622 ? just s/must/should/ for <title> and <option>? and why so grumpy :-P

[11:11:57.0000] <vcarbune>
can anyone here help me with a doubt about cross-origin video text tracks processing?

[11:13:44.0000] <Ms2ger>
Did people here look at http://wiki.ecmascript.org/doku.php?id=harmony:binary_data, btw?

[11:17:25.0000] <Hixie>
bz's feedback is orders of magnitude more complicated to deal with than almost anyone else's

[11:17:59.0000] <Ms2ger>
His brain is orders of magnitude more complex, too

[11:21:02.0000] <Hixie>
http://w3cmemes.tumblr.com/post/39943615914/image-inline-image-1

[11:21:07.0000] <Hixie>
not sure what's up with the text

[11:26:35.0000] <annevk>
Ms2ger: shouldn't that binary_data include of the TypedArray stuff?

[11:26:44.0000] <Ms2ger>
I dunno

[11:26:59.0000] <annevk>
Ms2ger: I thought that was the idea actually

[11:27:14.0000] <Ms2ger>
I don't know what the idea was :)

[11:28:10.0000] <annevk>
I like how there's just as many opinions on es-discuss on how to design JS APIs as elsewhere

[11:32:50.0000] <JonathanNeal>
Is there a study available on the classnames or IDs that websites tend to use to label certain areas, like "main" for content, or the initial "wrapper"?

[11:33:19.0000] <Ms2ger>
Google had some of that, I think

[11:33:23.0000] <Ms2ger>
Maybe MOMA too

[11:33:27.0000] <Ms2ger>
(Or MAMA?)

[11:33:36.0000] <annevk>
JonathanNeal: Steve Faulkner did one recently to look for justification for the <main> element, don't have a pointer handy

[11:45:29.0000] <Ms2ger>
Oh, wow, navigator.plugins is in installation-time order?

[11:47:00.0000] <JonathanNeal>
annevk: thanks, yea, hopefully someone will find that link.

[11:49:09.0000] <annevk>
Ms2ger: sounds whacky

[11:49:25.0000] <Ms2ger>
That it does indeed

[11:53:22.0000] <tantek>
JonathanNeal, annevk, you might be thinking of: http://webdevdata.org/

[11:53:38.0000] <tantek>
It's even a community group: http://www.w3.org/community/webdevdata/

[11:58:52.0000] <stevefaulkner>
jonathanNeal http://triin.net/2006/06/12/CSS#figure-34  http://westciv.typepad.com/dog_or_higher/2005/11/real_world_sema.html http://dev.opera.com/articles/view/mama-common-attributes/#id  http://lists.w3.org/Archives/Public/public-html/2012Oct/0109.html

[11:59:21.0000] <JonathanNeal>
Thanks stevefaulkner!

[11:59:30.0000] <stevefaulkner>
np

[11:59:33.0000] <JonathanNeal>
and thanks tantek!

[12:00:02.0000] <annevk>
well that was easy http://dvcs.w3.org/hg/d4e/raw-file/tip/source_respec.htm

[12:00:20.0000] <JonathanNeal>
container is much more popular than wrapper.

[12:00:26.0000] <annevk>
thanks Jacob / Travis (if you read this :))

[12:00:32.0000] <JonathanNeal>
I hardly see any "inset" either, and that's my goto name.

[12:05:43.0000] <annevk>
Which specification uses VoidFunction from IDL?

[12:11:53.0000] <Hixie>
anyone got IE10 handy?

[12:31:18.0000] <Hixie>
you really have to love the way we use IDL interfaces to define classes, not interfaces, and then implement them as prototypes, not classes.

[12:33:15.0000] <TabAtkins>
To be fair, JS prototypes are the equivalent of classes.

[12:33:23.0000] <TabAtkins>
But the interface/class thing is silly, yes.  ^_^

[12:33:46.0000] <TabAtkins>
(And the "class" keyword coming in ES6 just desugars to prototype stuff.)

[12:38:41.0000] <dglazkov>
annevk: do you know what's the latest thinking on the prototype-swizzling story around adoptNode, document.open?

[12:39:03.0000] <annevk>
dglazkov: yes, I'm waiting for input from non-Gecko vendors on what they're planning on doing

[12:39:29.0000] <annevk>
dglazkov: plus maybe an explanation of what web components is doing in this area that has bz concerned

[12:39:43.0000] <annevk>
dglazkov: https://www.w3.org/Bugs/Public/show_bug.cgi?id=20567 is the tracking bug

[12:40:18.0000] <annevk>
we could rename interface to class...

[12:40:23.0000] <annevk>
doesn't really matter

[12:40:33.0000] <dglazkov>
annevk: custom elements don't do anything in this area.

[12:40:53.0000] <annevk>
it seems bz thought otherwise

[12:41:42.0000] <dglazkov>
annevk: I was actually hopeful that if we had a precedent for this, I don't have to do the whole renameNode-style thing for custom elements

[12:42:37.0000] <annevk>
does this come down to the same thing though? not exactly...

[12:42:38.0000] <dglazkov>
annevk: I need to look at the bugs he filed to see what his thoughts were.

[12:43:01.0000] <annevk>
that bug has pointers to the mailing list discussion, which is where bz provided feedback

[12:43:26.0000] <annevk>
but e.g. there's not going to be precedent for doing this if e.g. WebKit is not going to implement this or Opera/IE are not interested...

[12:43:43.0000] <annevk>
all that's somewhat clear is what Gecko does and why it does that

[12:45:02.0000] <dglazkov>
annevk: bz doesn't actually list any specific concerns with web components in the thread. But he did file a bunch of bugs that might have more specifics.

[12:45:13.0000] <annevk>
k

[13:24:58.0000] <Steve^>
Hi, can anyone recommend a resource that simply lists the attributes and methods of <video>?

[13:25:48.0000] <tantek>
Steve^: https://developer.mozilla.org/en-US/docs/HTML/Element/video

[13:34:22.0000] <Steve^>
tantek, it doesn't seem to list the methods

[13:34:36.0000] <tantek>
they're linked from that page

[13:34:48.0000] <tantek>
from the TOC: https://developer.mozilla.org/en-US/docs/HTML/Element/video#DOM_interface

[13:35:45.0000] <Steve^>
Aha! https://developer.mozilla.org/en-US/docs/DOM/HTMLMediaElement

[13:35:47.0000] <Steve^>
thanks

[13:35:54.0000] <tantek>
and currently across two pages, for <video> and in general media elements: https://developer.mozilla.org/en-US/docs/DOM/HTMLVideoElement and https://developer.mozilla.org/en-US/docs/DOM/HTMLMediaElement

[13:35:55.0000] <tantek>
right

[13:35:56.0000] <tantek>
:)

[13:36:09.0000] <Steve^>
I thought the world was crazy, was just me

[13:36:50.0000] <tantek>
you being crazy does not falsify the possibility of the world also being crazy ;)

[14:21:31.0000] <Hixie>
TabAtkins: i think there are qualitative differences between what i would consider a "class" and the js style oop

[14:26:02.0000] <TabAtkins>
I submit that the definition of "class" is very very loose, unless you're purposely just using a single language's definition of the term.

[14:26:42.0000] <TabAtkins>
And within the possibility-space of "things that languages call 'classes' which are reasonable impls of some sort of OO thing", I claim that JS's prototype-based stuff is a class.

[14:26:48.0000] <TabAtkins>
Proof by example:

[14:27:21.0000] <gsnedders>
TabAtkins: classes aren't just syntactical sugar, because super.

[14:27:24.0000] <TabAtkins>
class foo { constructor(a) { this.a = a; return this; } bar(b) { print(b); } }

[14:27:25.0000] <TabAtkins>
===

[14:27:51.0000] <TabAtkins>
function foo(a) { this.a = a; return this; } foo.prototype.bar = function(b) { print(b); }

[14:28:01.0000] <TabAtkins>
Modulo a few tiny bits like super which can't be strictly desugared.

[14:28:10.0000] <Hixie>
yeah i'm not quite sure how to put into words what the difference is

[14:28:16.0000] <TabAtkins>
Cause there isn't one.  ^_^

[14:28:39.0000] <Hixie>
there's definitely a difference between what JS does and what I think of as class-based-oop

[14:28:44.0000] <Hixie>
but it might be unrelated to the classness

[14:29:20.0000] <TabAtkins>
There are indeed differences, but every OOP implementation has differences, because OOP is a loosely-connected set of concepts.

[14:29:24.0000] <Hixie>
yes

[14:31:11.0000] <Hixie>
on another note, did we ever resolve http://lists.w3.org/Archives/Public/public-script-coord/2012OctDec/0363.html ?

[14:36:42.0000] <Hixie>
does webidl define what should happen here? http://software.hixie.ch/utilities/js/live-dom-viewer/saved/2061

[14:36:58.0000] <Hixie>
firefox, safari, chrome: throw (various exceptions)

[14:37:03.0000] <Hixie>
opera: actually runs the method

[14:37:54.0000] <annevk>
Hixie: we did not resolve that

[14:38:05.0000] <annevk>
Hixie: my impression is that unless you file a bug, heycam might miss it

[14:38:20.0000] <Hixie>
opera doesn't even throw if you make the method 'select', which button doesn't have

[14:39:07.0000] <Hixie>
window.alert.call(document.body) in opera does response "WRONG THIS" though

[14:39:43.0000] <heycam>
annevk, Hixie, I think that should throw

[14:39:47.0000] <heycam>
iirc

[14:40:17.0000] <Hixie>
heycam: does the reason it should throw cover cases like http://lists.w3.org/Archives/Public/public-script-coord/2012OctDec/0363.html ?

[14:41:00.0000] <heycam>
Hixie, (will read in a bit, email exceeds my "reading simultaenous with attending meeting" bandwidth...)

[14:41:20.0000] <Hixie>
that e-mail exceeded my bandwidth even when i was doing nothing else, so, understood

[14:42:04.0000] <heycam>
:p

[14:43:16.0000] <SimonSapin>
It‚Äôs out! http://packages.python.org/cairocffi/ (sorry for the spam)

[14:46:44.0000] <annevk>
SimonSapin: doesn't explain why I'd want this drop-in replacement

[14:47:06.0000] <annevk>
SimonSapin: or should I know what "CFFI-based" means for that? :)

[14:50:06.0000] <SimonSapin>
annevk: pycairo does not install with the usual python tools, is different on python 2 and 3, exposing new cairo stuff means requiring new cairo version, it‚Äôs a pain to maintain (C code doing manual refcounting of Python objects, yay!), and nobody seems to be really maintaining it

[14:50:28.0000] <SimonSapin>
annevk: CFFI is an implementation detail, you don‚Äôt really need to care about it

[14:50:52.0000] <SimonSapin>
but it‚Äôs what makes it different from pycairo

[15:12:38.0000] <heycam>
Hixie, the reason I thought that example threw was because HTMLInputElement.prototype.checkValidity can't be called on an HTMLButtonElement (and vice versa)

[15:13:06.0000] <Hixie>
webidl says that, i assume?

[15:13:24.0000] <heycam>
Hixie, yes, there's a check if the object implements the interface that the operation is declared on

[15:13:29.0000] <Hixie>
k

[15:13:44.0000] <heycam>
Hixie, the origin issue is something that would need to be checked in the same place, but isn't currently

[15:14:35.0000] <Hixie>
k

[15:14:44.0000] <Hixie>
do i need to do anything to allow you to fix that one too?

[15:15:55.0000] <heycam>
Hixie, you might yes -- if anything it'll probably be a hook in Web IDL that defines a "security check" to be done at that point

[15:16:13.0000] <heycam>
Hixie, or maybe just define the origin of objects, and then I just check origins myself in that part of Web IDL

[15:16:28.0000] <heycam>
/me will reply on that thread

[15:16:31.0000] <Hixie>
k, thanks

[15:35:39.0000] <annevk>
bz will not be happy with an additional check there

[15:44:46.0000] <heycam>
why is the additional check needed?  is there a way to get the value of the property despite the check that is done?  (before a navigation or something?)

[15:45:11.0000] <Hixie>
you can get the property from one Document

[15:45:16.0000] <Hixie>
and apply it to another

[15:45:23.0000] <heycam>
oh right, I understand

[15:45:44.0000] <Hixie>
or take it from one Location, navigate such that the origin has changed, then apply it

[15:49:37.0000] <annevk>
heycam: why is it unreasonable for a subclass to supersede a method of a parent class?

[15:49:55.0000] <annevk>
heycam: is that some particular kind of OO people don't like?

[15:50:09.0000] <heycam>
unreasonable if it makes the ancestor one invalid to be called on the object

[15:50:23.0000] <annevk>
but why would you do that?

[15:50:30.0000] <heycam>
well why indeed :)

[15:50:42.0000] <heycam>
so I don't want to disallow overriding

[15:50:44.0000] <annevk>
sorry, I meant why would you call

[15:51:10.0000] <Hixie>
the case i most commonly run into is where the superclass implementation is "throw EAbstractMethod"

[15:51:13.0000] <heycam>
oh, who knows why you would -- but for languages where it's possible I think it makes sense that it still be valid to call the ancestor method

[15:51:37.0000] <annevk>
how would you do it in JS?

[15:51:52.0000] <heycam>
if you can get at the ancestor method that throws EAbstractMethod and you call it on an object that overrides that method, then I think it should still throw EAbstractMethod

[15:51:54.0000] <Hixie>
annevk: grab something from HTMLCollection and apply it to HTMLAllCollection

[15:52:05.0000] <Hixie>
heycam: and your app will crash, right

[15:52:25.0000] <heycam>
in some languages, yes

[15:52:35.0000] <Hixie>
heycam: i'm not saying it's the wrong thing to do, i'm just saying that on the web we can't let people crash the browser

[15:52:40.0000] <heycam>
but it's not crashing because it has an unexpected object type it's been called on

[15:52:40.0000] <annevk>
Hixie: and why does the this check not make that throw here?

[15:52:45.0000] <annevk>
Hixie: because it's a parent class?

[15:52:51.0000] <heycam>
I'm not saying that we should allow the browser to crash...

[15:53:35.0000] <Hixie>
annevk: well if there's no overridden subclass method, you don't want it to throw, right?

[15:53:41.0000] <annevk>
the whole inheritance thing on most classes in DOM-land is basically a shortcut for defining stuff...

[15:53:44.0000] <heycam>
if you define `interface A { void f(); };` then you need to write your f() prose such that it makes sense for any object that implements A, right?

[15:54:06.0000] <annevk>
Hixie: oops yeah

[15:54:27.0000] <Hixie>
heycam: in the case of the web apis, the problem is that we sometimes think in terms of interfaces and sometimes in terms of classes

[15:54:49.0000] <annevk>
maybe we should s/interface/class/ to get that out of the way?

[15:54:51.0000] <heycam>
s/implements A/is of a class that inherits from A/ then

[15:55:18.0000] <Hixie>
heycam: so e.g. HTMLElement is both an interface (HTMLElement.onblur is a property that means different things on HTMLAnchorElement and HTMLBodyElement), and a class (HTMLElement.click() is defined for HTMLElement and implemented identically for HTMLAnchorElement and HTMLBodyElement)

[15:56:17.0000] <heycam>
I don't think that's the relevant distinction, or at least, onblur ought to be defined so that its getter/setter makes sense when applied to both kinds of element

[15:56:39.0000] <heycam>
it's just that its behaviour is defined in terms of looking at what object "this" is when called

[15:56:54.0000] <Hixie>
onblur on HTMLAnchorElement is a way to set an event listener on the element, and on HTMLBodyElement is a way to set an event listener on the Window.

[15:57:00.0000] <annevk>
onblur you could easily define generically no?

[15:57:07.0000] <heycam>
right

[15:57:08.0000] <annevk>
just checking if it's body and then forwarding

[15:57:13.0000] <Hixie>
they're essentially completely different.

[15:57:21.0000] <Hixie>
annevk: sure. that's what i'm saying we should do for all these cases.

[15:57:21.0000] <heycam>
completely?

[15:57:48.0000] <Hixie>
annevk: either check the this, and throw if it's not the right one, or, check the this, and run the right code.

[15:57:48.0000] <annevk>
Hixie: heycam is saying the same, but that you do it in prose :)

[15:58:12.0000] <Hixie>
i don't really care where it's done

[15:58:52.0000] <heycam>
as long as we have well defined behaviour for when HTMLElement.onblur's setter is applied to an HTMLBodyElement, that is fine

[15:58:57.0000] <Hixie>
if it's prose, it's gonna require you (anne) and I to edit our specs; if it's done in WebIDL's definition, it's just heycam

[15:59:09.0000] <annevk>
do you need anything more than if onblur is set, these steps must be run: 1. if the context object is <body>, set a listener on Window. 2 otherwise set a listener on the context object

[15:59:14.0000] <annevk>
?

[15:59:28.0000] <Hixie>
heycam: for that one, there's only one in the idl. for onerror, there's two, and they have different types.

[15:59:55.0000] <Hixie>
heycam: i don't know that we really say what happens when you call HTMLElement.onerror's setter or getter on an HTMLBodyElement.


2013-01-08
[16:00:07.0000] <Hixie>
or if there should even be a detectable difference

[16:00:08.0000] <heycam>
I think we do!

[16:00:15.0000] <Hixie>
since the only difference is the type

[16:00:41.0000] <heycam>
it surely can't require much prose to make it work

[16:00:53.0000] <annevk>
wasn't that type mostly useful for developers?

[16:01:15.0000] <annevk>
I mean it doesn't actually affect implementations as it's a callback

[16:01:45.0000] <heycam>
/me doesn't know

[16:01:47.0000] <Hixie>
yeah in JS for onerror anything will match either type, i think

[16:01:48.0000] <annevk>
I'd just treat all those as one and define the superset behavior

[16:02:16.0000] <annevk>
for the HTMLCollection vs HTMLPropertiesCollection case I'm less sure, since that would affect me

[16:02:18.0000] <Hixie>
anyway i don't really care what solution we pick, just need to know what to write :-)

[16:02:21.0000] <annevk>
:-)

[16:02:36.0000] <annevk>
Hixie: see above for a sketch for onblur

[16:02:41.0000] <heycam>
if you want me to look at HTMLCollection and propose wording for you both, I can do that

[16:03:19.0000] <annevk>
Hixie: just make the element check part of the attribute definition and don't let it depend on IDL

[16:03:39.0000] <Hixie>
as far as i can tell, onblur is defined already.

[16:03:45.0000] <Hixie>
there's only one attribute.

[16:04:09.0000] <Hixie>
onerror is the unclear one as far as those go.

[16:04:55.0000] <annevk>
but onblur has implementation requirements in different places

[16:05:04.0000] <annevk>
even if there's only one attribute, the prose suggests they're different

[16:05:10.0000] <Hixie>
*shrug*

[16:05:28.0000] <annevk>
well that's kinda relevant one you start applying one attribute at another location

[16:05:32.0000] <annevk>
I'd think

[16:06:12.0000] <Hixie>
there's only one onblur, so if it's defined to work on one <body> element, i don't see why it wouldn't work anywhere.

[16:11:17.0000] <annevk>
Hixie: I guess you're saying that although the attribute is defined separately for all elements and the <body> element in particular, that's kind of an implicit if check in the attribute's implementation?

[16:11:40.0000] <Hixie>
right

[16:12:42.0000] <annevk>
Hixie: I guess I can buy that. It seems onerror is also one type now in the spec?

[16:14:04.0000] <annevk>
Which would leave HTMLPropertiesCollection which heycam is going to fix? :-)

[16:14:29.0000] <heycam>
I'll take a look at it later today and post in the bug with proposed wording

[16:16:32.0000] <annevk>
nn

[16:17:35.0000] <Hixie>
onerror is of two types

[16:17:42.0000] <Hixie>
but we can change that i guess

[19:53:19.0000] <Yuhong>
"btw, has anyone tested if IE10 has an ‚ÄúIE9 XML‚Äù mode in addition to an ‚ÄúIE10 XML‚Äù mode?"

[19:53:27.0000] <Yuhong>
Yes it does: http://msdn.microsoft.com/en-us/library/hh834788(v=vs.85).aspx

[21:52:08.0000] <karlcow>
do web notifications allow for bells?

[23:23:57.0000] <Hixie>
i like how http://dvcs.w3.org/hg/d4e/raw-file/tip/source_respec.htm has two contradictory paragraphs defining what is normative and what is not

[23:24:07.0000] <Hixie>
(paragraps 1 and 3 of the conf section)

[00:52:48.0000] <hsivonen>
https://twitter.com/g16n/status/288326241755484160

[01:27:07.0000] <darobin>
"And it doesn't mean you are addressing the same way the @brucel @brucel"?

[01:29:42.0000] <darobin>
/me wonders how much of the web breaks if we just dropped Accept-Language entirely

[02:39:48.0000] <annevk>
Using x- for web components is so silly. Why hasn't that been named differently yet? x- means experimental and on top of that the IETF is over the x- experiment itself...

[02:43:26.0000] <Ms2ger>
I gave up trying to drill that into their heads

[02:58:44.0000] <jgraham>
But it's ugly and breaks functionality! What's not to like?

[03:00:59.0000] <Ms2ger>
Your face :)

[03:01:20.0000] <jgraham>
Well, I think we can all agree on that

[03:04:22.0000] <darobin>
/me smooches jgraham's face

[03:05:03.0000] <Ms2ger>
/me whacks darkcypher_bit 

[03:05:07.0000] <Ms2ger>
/me whacks darobin 

[03:05:13.0000] <Ms2ger>
darkcypher_bit, nvm

[03:05:26.0000] <darobin>
tee hee

[03:05:36.0000] <darobin>
/me smooches Ms2ger too

[03:05:44.0000] <Ms2ger>
Nooo

[03:05:48.0000] <Ms2ger>
Do work instead!

[03:06:51.0000] <karlcow>
pwet!

[03:07:39.0000] <Ms2ger>
Hi Karl

[03:07:52.0000] <karlcow>
‚ò∫ hullo

[03:08:22.0000] <darobin>
Ms2ger: I find it difficult to focus on working with your sexiness hanging around like that

[03:08:42.0000] <Ms2ger>
/me covers his body

[03:37:50.0000] <annevk>
Does anyone know how Shadow DOM works at an implementation level?

[03:38:44.0000] <odinho>
Let's hope they do, else the one in webkit would be in very bad shape.

[03:42:14.0000] <annevk>
The terminology usage in the Shadow DOM spec is so sloppy :/

[04:51:24.0000] <annevk>
so given

[04:52:01.0000] <annevk>
<a href=x>test</a> <b id=x>test</b> <style> a /href/ b { background:papayawhip } </style>

[04:52:17.0000] <annevk>
are we gonna see some papayawhip action?

[04:52:31.0000] <annevk>
http://dev.w3.org/csswg/selectors4/#idref-combinators seems to suggest so, which seems kinda poor design to me

[05:25:42.0000] <annevk>
I don't understand http://dvcs.w3.org/hg/webcomponents/raw-file/tip/spec/shadow/index.html#reprojection

[05:25:59.0000] <annevk>
How can an insertion point be a child node of a shadow host?

[05:26:25.0000] <annevk>
<shadow><div><content/></div></shadow> and <div> is tied to another <shadow>?

[05:32:39.0000] <annevk>
it's so weird how this spec works

[05:32:58.0000] <annevk>
so 4.6 makes requirements, and 4.7 makes them again but in an algorithm?

[05:33:06.0000] <annevk>
what's going on?

[05:39:34.0000] <jgraham>
I imagine what's going on is that the spec has been written by a small group of people that aren't pro spec writers, are mainly interested in one implementation, and already know how things work so don't explain it clearly

[05:40:10.0000] <jgraham>
It is the sort of thing that gets fixed when e.g. you start commenting and others start implementing

[05:40:47.0000] <annevk>
I filed a bunch of bugs already and a couple more today, not entirely sure it's helping though...

[05:41:35.0000] <annevk>
And my main objective here is really to understand what's going on so I can adjust DOM accordingly, but maybe I should indeed wait with that but then I worry it might be too late to change Shadow DOM at some point because "Microsoft shipped" it or some silly reason like that

[05:43:31.0000] <jgraham>
Yeah, I guess assuming that Microsoft will provide feedback before they ship something broken isn't a strategy with history on its side

[05:49:38.0000] <annevk>
So the event situation for shadow trees... Say you have <a><b> and <a> has a <shadow><content match=b> then you dispatch on <b>

[05:50:20.0000] <annevk>
traversal path becomes b > content > shadow > a I guess

[05:53:21.0000] <annevk>
ah, but you only hit problems if the event originates from a shadow tree

[06:06:14.0000] <annevk>
I guess a more interesting case is <a><b> with both <a> and <b> having a shadow tree attached so you end up with something like <a> -> <shadow> -> <b> -> <shadow> and then in <b>'s <shadow> an event is dispatched

[06:07:02.0000] <annevk>
once the event reaches <a>'s <shadow>, the target should be <b> I suppose and not change

[08:35:21.0000] <dglazkov>
good morning, Whatwg!

[08:38:01.0000] <dglazkov>
huh, annevk asked some questions and left

[08:41:06.0000] <darobin>
dglazkov: don't worry, he usually returns after realising that the real world is even more broken than web technology

[08:41:54.0000] <dglazkov>
darobin: it's not broken, it's a work in progress :)

[08:50:42.0000] <darobin>
dglazkov: I can't wait for last call then

[08:51:47.0000] <dglazkov>
darobin: we were supposed to be done on Dec 21, but stuff got delayed.

[08:52:06.0000] <darobin>
for the real world?

[08:52:13.0000] <darobin>
I had no idea you were part of that team, too

[08:52:30.0000] <dglazkov>
darobin: we're all part of that team

[08:52:55.0000] <darobin>
no, I just do snapshots

[08:53:17.0000] <darobin>
working on the next fossil record

[08:53:41.0000] <dglazkov>
see? part of the team

[10:17:50.0000] <TabAtkins>
annevk: We need *some* prefix to avoid polluting the tagname namespace.  x- is the closest one to hand, and the ugliness is actually a plus.

[10:18:32.0000] <TabAtkins>
(It should hopefully help prevent people from just scatting <para> and <list> elements all over their page, since they'll instead be ugly <x-para> and <x-list>.)

[10:22:25.0000] <TabAtkins>
annevk: The bit about "insertion point is a child node of another shadow host" could be written better, and have an example, but it's referring to this:

[10:22:41.0000] <TabAtkins>
<shadow><x-foo><content></x-foo></shadow>

[10:23:06.0000] <TabAtkins>
That is, the children of whatever element that shadow belongs to are reprojected as children of another component.

[10:23:39.0000] <TabAtkins>
We went through a *ton* of pain trying to solve that problem in a simpler matter, but as far as we can tell our current solution is the only way to allow composition without everything cooperating ahead of time.

[10:23:50.0000] <TabAtkins>
(And even with cooperation, the selectors necessary to style things were wonky as hell.)

[10:25:05.0000] <TabAtkins>
The point of it is just that, from the perspective of <x-foo>'s own shadow tree (and it's own <content> element selecting things from its light children), the <x-foo> contains the projected nodes from the outer shadow, *not* the <content> element of the outer shadow.  It's replaced in-place.

[10:28:29.0000] <Ms2ger>
It's sad

[10:29:50.0000] <TabAtkins>
Which is sad?

[10:30:32.0000] <Ms2ger>
That people still think custom tagnames aren't batshit insane

[10:31:03.0000] <TabAtkins>
Hixie's silly is='' idea is just moving the custom tagname to an attribute.  It's still fucntionally a tagname in all respects - it needs to be aroudn during initial parse, and then changing it has no effect.

[10:31:20.0000] <TabAtkins>
It just obfuscates things.

[10:31:33.0000] <Ms2ger>
If you still believe that, I'm not going to bother trying to convince you

[10:32:05.0000] <TabAtkins>
I haven't been around during any discussions that disputed what I just said.  All I've heard is reluctance to actually use tagnames, which strikes me as insubstanial.

[10:32:14.0000] <TabAtkins>
If you ahve real reasons why what I said above is false, lay them on me.

[10:39:38.0000] <Hixie>
Ms2ger++

[10:39:46.0000] <Hixie>
/me has laid the reasons down in detail in the bug

[10:40:03.0000] <TabAtkins>
Which bug was it again, Hixie?  Just title or something for me to search for.

[10:40:48.0000] <Hixie>
has "is" and "tatribute" in the summary, i think. has "select/map" in the comments.

[10:40:51.0000] <Hixie>
attribute, even

[10:49:16.0000] <TabAtkins>
Hixie: Ah, right, the "everything will be divs and there will be no semantics" argument, which ignores the ability to specify the tag you're descending from declaratively (via an attribute(!) on <element>) and via script (via document.register).  The declarative version is identically informative, and more reliable, since you can't screw up and accidentally forget to apply the attribute to an instance.

[10:51:39.0000] <TabAtkins>
<p is=foo> is the same as <element name=x-foo extends=p>

[10:53:21.0000] <Hixie>
i discuss that in the bug too

[10:53:50.0000] <Hixie>
having the fallback in the binding declaration puts it in the wrong place -- you want the fallback in the page itself, for reasons i elaborate on in the bug

[10:56:48.0000] <TabAtkins>
Yes, I'm reading through that.  I don't understand the argument.  Why is the location of the fallback information important, as long as everything is declaratively knowable?

[11:04:14.0000] <TabAtkins>
(As far as I can tell, that point isn't adequately explained in the bug.)

[11:04:34.0000] <Hixie>
requiring that every random html processor also be enough of a web components processor to get the fallback declaration is an unacceptably (and i thought obviously) high implementation burden

[11:05:06.0000] <Hixie>
and i's a burden that is put on those implementors least likely to have the bandwidth to support it

[11:05:10.0000] <Hixie>
it's

[11:05:21.0000] <TabAtkins>
I assume that anything capable of actually *using* the page in any worthwhile capacity is a significant HTML processor, and thus would implement the general suite of web stuff.

[11:05:43.0000] <Hixie>
i do not think that assumption is warranted.

[11:06:37.0000] <Hixie>
for example, that increases the cost of operating a web search user agent significantly (more networking required, more processing required, etc), and that's an industry where we really don't want to be making the costs any higher than they already are

[11:07:15.0000] <Hixie>
it also means that an HTML file is no longer stand-alone in its semantics, which seems like a huge and rather disturbing step to take

[11:07:30.0000] <TabAtkins>
Web search that cares about the meaning of elements (the bar you're setting) already has to care about CSS to some extent, at least, or it's trivially vulnerable to cloaking.

[11:07:54.0000] <TabAtkins>
That's a much huger requirement than asking it to parse another document which is also HTML and look for simple associations.

[11:08:29.0000] <Hixie>
only if it's being used against arbitrary web content

[11:08:40.0000] <Hixie>
most spiders are in enterprise environments where that's not really an issue

[11:09:37.0000] <TabAtkins>
I'm not sure why enterprise web spiders are an industry we should care particularly much about, to the point of harming the authoring experience.

[11:11:48.0000] <Hixie>
well as discussed in the bug, i think having the fallback in the markup also improves the web author experience.

[11:12:30.0000] <TabAtkins>
People have made the exact opposite argument in the bug, too, and I find them much more convincing.  ^_^

[11:14:00.0000] <JibberJim>
/me is with Hixie on that

[11:18:56.0000] <dglazkov>
TabAtkins++

[11:19:21.0000] <dglazkov>
I am sort of intrigued by "select/map" idea though

[11:20:06.0000] <TabAtkins>
Basically, I find it very difficult to argue that it's more helpful for developers to have to repeat the element your component descends from for every instance.  It would be like having to write a chain of superclasses for every "new" call in JS.

[11:20:51.0000] <dglazkov>
TabAtkins: that is true. What if for elements that extend HTMLElement, you could just have straight custom tag?

[11:21:29.0000] <jgraham>
TabAtkins: But it is vastly more helpful for processors

[11:22:04.0000] <jgraham>
Since it degrades gracefully whereas the alternative does not

[11:22:05.0000] <TabAtkins>
If you forgo the "input/" prefix, you need an x- prefix.  Inconsistance is bad, so you'd need to put the x- prefix on the "input/" prefixed things too, which is silly.

[11:23:16.0000] <TabAtkins>
jgraham: The degrading possible is very minimal.  If you've never worked with apps and the sort of "components" they use, it's easy to imagine that you can just slightly extend HTML's semantics and everything will be great.  In reality, most components will descend from <div> or whatever, not because of laziness, but because *that's the most appropriate tag, given that nothing else has the right semantics*.

[11:24:07.0000] <dglazkov>
jgraham: being stuck in the ghetto is a sad compromise. If you look at what web devs are doing today to make their own "tags", you'll see that it's all gone to imperative land anyhow.

[11:26:29.0000] <jgraham>
I know what people do today. I would much rather that a custom calendar widget is <input type=calendar is=my-calendar> or whatever than <x-my-calendar>.

[11:26:37.0000] <jgraham>
for example

[11:27:37.0000] <jgraham>
(not that I really like the is= syntax)

[11:28:12.0000] <jgraham>
But the idea that <div> is the best match semantic in the overwhelming majority of cases is clearly wrong

[11:28:53.0000] <jgraham>
There are many cases that are like a button, or like some kind of <input> or like a list, or like a table

[11:36:25.0000] <Hixie>
jgraham: arguably, most of those cases should be bound from CSS, imho

[11:40:00.0000] <Ms2ger>
Oh yes

[11:40:11.0000] <Ms2ger>
We've got lovely experiences with binding

[11:41:10.0000] <jgraham>
Hixie: Yeah, good luck convincing Mozilla people that's a good idea :)

[11:42:55.0000] <a-ja>
<input type=calendar data-is=my-calendar>   ???

[11:45:06.0000] <Hixie>
jgraham: it seems pretty clear that e.g. the button style google uses is a CSS-level thing.

[11:45:24.0000] <Hixie>
jgraham: but Mozilla already seems to do this via CSS for their themes, so I don't see why it'd be hard to convince them?

[11:46:32.0000] <Ms2ger>
Because we know how terrible it sucks

[11:46:41.0000] <Ms2ger>
bz can tell you stories

[12:04:13.0000] <dglazkov>
<input type=redundant is=redundant class=redundant class=redundant>

[12:05:57.0000] <Ms2ger>
See?

[12:18:11.0000] <dglazkov>
I like that Hixie at least proposes interesting alternatives

[12:18:40.0000] <dglazkov>
most other detractors simply engage in navel gazing

[12:23:42.0000] <dglazkov>
introduction of local semantics to HTML is simply bringing it in sync with reality. It's scary and new, but angst never seemed like a good reason for anything.

[12:28:33.0000] <jgraham>
dglazkov: "navel gazing"? Do you that that's helpful?

[12:29:14.0000] <dglazkov>
jgraham: probably not :)

[12:29:55.0000] <dglazkov>
jgraham: but then again, if it stirs you enough to help come up with a better idea, maybe it is? :P

[12:30:14.0000] <jamesr>
Hixie, +1 for proper RAF use in your sample code :)

[13:26:46.0000] <jgraham>
dglazkov: Well the ability to declaratively reuse an existing element name is a requirement. So I can only think of three ways of declaring which component will extend it: An attribute, a parser hack, and a binding langauge. I think all three options have already been suggested.

[13:30:19.0000] <dglazkov>
What if you look at it as the requirement being to just allow web authors to build their own DOM elements? The markup part of it is just a matter of consistency.

[13:33:54.0000] <TabAtkins>
jgraham: The "binding language" possibility is just what Web Components currently uses (<element extends>), yes?

[13:38:19.0000] <dglazkov>
TabAtkins: I think a "binding" is the render-then-decorate approach that CSS takes

[13:38:53.0000] <dglazkov>
which decorators part of Web Components is already covering

[13:42:02.0000] <csuwldcat>
dglazkov: here

[13:42:20.0000] <csuwldcat>
dglazkov: it's Daniel ftr

[13:42:20.0000] <dglazkov>
heeey csuwldcat :)

[13:42:25.0000] <jgraham>
I was thinking of something like the approach that XBL1 takes. Which, as previously mentioned, turns out to suck (according to bz)

[13:42:34.0000] <csuwldcat>
just left an overly frustrated comment on the bug

[13:42:44.0000] <csuwldcat>
correct by questionable tone, sorry

[13:42:48.0000] <csuwldcat>
but*

[13:43:12.0000] <dglazkov>
csuwldcat, meet jgraham and Hixie and TabAtkins and the gang

[13:43:19.0000] <csuwldcat>
heyo!

[13:43:54.0000] <csuwldcat>
this whole is=, as=, thing=, can we just make it an optional semantic addon?

[13:44:05.0000] <jgraham>
(if we were not allowing anything in the markup, my response would be "why not" and if that had a good enough answer "can we use normal js inheritance")

[13:44:09.0000] <csuwldcat>
it's irrelevant to a majority of use-cases

[13:44:15.0000] <BenoitRen>
Hi everyone. I have a semantic HTML question. I have one or more sets of video game screenshots that are being showed to the viewer to compare. Like how a particular scene looks on one game platform versus others. My first thought was that this looks a lot like tabular data. I'd have gone with that, but CSS overflow support on tables is quite spotty, so I'm looking for an alternative.

[13:44:20.0000] <csuwldcat>
and introduces a *ton* of gotchas

[13:44:50.0000] <dglazkov>
jgraham: the answer to inheritance is already there.

[13:44:53.0000] <TabAtkins>
BenoitRen: <table> would have been fine, but this situation doesn't have any appreciable semantic, so use whatever's convenient.

[13:45:06.0000] <jgraham>
csuwldcat: It seems pretty essential if we want something like graceful degredation

[13:45:16.0000] <csuwldcat>
sure, but optional

[13:45:26.0000] <jgraham>
and making it optional wouldn't remove the gotchas

[13:45:28.0000] <csuwldcat>
tags default to SPAN semantics

[13:45:42.0000] <jgraham>
Yeah, that's the problem

[13:46:02.0000] <csuwldcat>
<element extends="table">

[13:46:11.0000] <TabAtkins>
My previous point about most components reasonably descending from <div> means that a large fraction (likely a large majority) of components won't have a graceful degradation story in the first place.

[13:46:21.0000] <BenoitRen>
TabAtkins: I don't know of anything else that's convenient, except maybe a list of lists... :/

[13:46:24.0000] <TabAtkins>
See: most uses of components in the while today, which are just piles of divs and such.

[13:46:27.0000] <csuwldcat>
TabAtkins: correct

[13:46:37.0000] <TabAtkins>
s/while/wild/

[13:46:49.0000] <jgraham>
<element extends=table> looks prettier but doesn't have the right graceful degredation story

[13:47:09.0000] <TabAtkins>
BenoitRen: A list of pairs, where each pair is just some <img> elements and maybe some wrapper elements for structure, is fine.

[13:47:15.0000] <jgraham>
TabAtkins: That's a problem that we want to fix, not a desirable feature of the solution

[13:47:19.0000] <csuwldcat>
the problems is="" introduces if it is used as the binding/proto mechanism are untenable

[13:47:35.0000] <csuwldcat>
it literally could waste millions of dev hours a year

[13:47:51.0000] <TabAtkins>
jgraham: I submit that it's not a fixable problem, and your hope that it is fixable comes from a naivety about the problem, due to insufficient experience with what authors are doing in that space.

[13:47:57.0000] <jgraham>
Where are these problems documented?

[13:48:07.0000] <csuwldcat>
the bug

[13:48:17.0000] <BenoitRen>
TabAtkins: That works for pairs, but the particular page I'm working on compares three screenshots.

[13:48:18.0000] <csuwldcat>
it just went through them for probably the 12th time

[13:48:25.0000] <jgraham>
TabAtkins: I submit that you have provided no evidence that is the case and it would be good if you could do so

[13:48:30.0000] <csuwldcat>
<input type="button" is="foo" /> != <button is="foo">

[13:48:33.0000] <TabAtkins>
BenoitRen: Then mark up three of them.  Don't overthink it.

[13:48:42.0000] <csuwldcat>
one could/will cause explosions

[13:49:07.0000] <csuwldcat>
but devs will *never* think about the reason why

[13:49:22.0000] <jgraham>
csuwldcat: Let me reread the bug

[13:49:40.0000] <BenoitRen>
TabAtkins: Like <dl><dt><img></dt><dd><img></dd><dd><img></dd></dl>?

[13:49:41.0000] <csuwldcat>
you cannot have an element defintion that materially relies on an element proto and expect it to interop when slapped on random other elements

[13:50:25.0000] <BenoitRen>
TabAtkins: I'm overthinking it because I'd like to do it right, even if a little bit. :)

[13:52:56.0000] <csuwldcat>
it's not just a preference, is="" is nearly a technical/API non-starter

[13:53:15.0000] <csuwldcat>
it has real consequences that are significant and error-prone

[13:53:32.0000] <csuwldcat>
I could care less about introducing a descriptor attribute

[13:53:37.0000] <csuwldcat>
knock yourself out

[13:54:00.0000] <jgraham>
That sounds like complaining that if you create an object that inherits from class A and try to use methods of class B it will fail. Well yes, but that doesn't seem to be something that people have difficulty understanding.

[14:00:16.0000] <csuwldcat>
jgraham: you used a imperitive construction to make the case for declaritive interop difficulty

[14:00:20.0000] <csuwldcat>
?

[14:02:03.0000] <csuwldcat>
the point is, you're not constructing an concrete class, is="" is packed with inference, by nature

[14:15:28.0000] <gsnedders>
jgraham: Um, etree_lxml hasn't been tested in ages.

[14:16:06.0000] <gsnedders>
So lxml support has all kinds of weird bugs. :(

[14:27:07.0000] <BenoitRen>
TabAtkins: I went with a bunch of <ul class="comparison">. Thanks for the assistance! :)

[14:33:06.0000] <BenoitRen>
/me is out

[14:33:10.0000] <BenoitRen>
Laters.

[14:34:24.0000] <Hixie>
csuwldcat: Web Components is the optional add-on, not the semantics.

[14:43:18.0000] <dglazkov>
Hixie: I wonder if the gist of the whole argument is on whether we should allow authors to introduce local semantics.

[14:51:27.0000] <Hixie>
dglazkov: "semantics" is what the author and reader agree the semantics are. On the Web, that means something that the browser vendor and page author both agree is defined in a specification. It is basically impossible for an author to unilaterally introduce new semantics.

[14:51:49.0000] <Hixie>
dglazkov: i do agree that that is probably where the disagreements begin, though

[14:54:07.0000] <dglazkov>
Hixie: why does it need to be impossible?

[14:58:52.0000] <Hixie>
it doesn't _need_ to be impossible

[14:59:01.0000] <Hixie>
it just is

[14:59:22.0000] <Hixie>
if fred decides he wants a new semantic, he isn't going to be able to unilaterally write a spec for it and convince all the browser vendors to adopt it

[14:59:48.0000] <Hixie>
heck i write the spec for HTML as my fulltime job and i can barely do it

[15:00:30.0000] <dglazkov>
if fred could come up with a new set of tags to describe some concepts in his web applications, he should be able to do it.

[15:00:58.0000] <Hixie>
that's not new semantics

[15:01:24.0000] <dglazkov>
oh?

[15:01:38.0000] <Hixie>
<Hixie> dglazkov: "semantics" is what the author and reader agree the semantics are

[15:01:47.0000] <Hixie>
i.e. the spec.

[15:01:48.0000] <dglazkov>
they mean something to fred and all other authors of this web app

[15:02:09.0000] <Hixie>
that's fantastic. still not semantics though.

[15:02:15.0000] <dglazkov>
that's just one type of semantics. The public semantics.

[15:02:26.0000] <Hixie>
it's not public if it's just the authors of the page

[15:02:43.0000] <dglazkov>
what fred has is local semantics

[15:03:07.0000] <Hixie>
ok fine, we can define that as "local semantics"

[15:03:10.0000] <Hixie>
local semantics is worthless.

[15:03:43.0000] <Hixie>
(on the large scale)

[15:03:48.0000] <Hixie>
(which is what matters)

[15:05:30.0000] <dglazkov>
interestingly, the value of local semantics is not zero on the large scale. If fred writes a successful library that's used by many authors, his set of tags may be used by unnamed editor of HTML spec to turn them into public semantics.

[15:06:03.0000] <Hixie>
there is marginal incremental value, sure, but it's not of relevance to this discussion

[15:06:37.0000] <Hixie>
specifically, "local semantics" doesn't address any of the problems that we need semantics for, namely, fallback in legacy UAs, fallback in non-web-component-aware UAs, ability for new authors to understand what's going on, ability for UAs to determine page meaning without fetching other resources, etc.

[15:06:42.0000] <Hixie>
all the things discussed in the bug.

[15:07:58.0000] <Hixie>
it's the same reason we have em, strong, cite, a, dfn, q, small, s, abbr, data, time, code, var, samp, sub, sup, ruby, etc, rather than just letting authors make up their own elements and use CSS to style them.

[15:08:34.0000] <Hixie>
the same reason people use HTML rather than just XML+script+css

[15:09:14.0000] <dglazkov>
well, fred that we're talking about is already using json+script+css, precisely because HTML wouldn't let him have local semantics.

[15:14:52.0000] <Hixie>
dglazkov: i've nothing against adding local semantics hooked to real semantics

[15:15:12.0000] <dglazkov>
The problems you mentioned are real, though I can't exactly measure their real impact.

[15:16:00.0000] <dglazkov>
Hixie: that is a ghetto approach, which is why I am not super in love with it. I am intrigued by the idea, though.

[15:16:22.0000] <Hixie>
what do you mean by "ghetto" in this context?

[15:17:08.0000] <dglazkov>
"here's a playground for your kind (the web dev), let the browser do their thing and don't bother us"

[15:18:30.0000] <Hixie>
ah. then i disagree.

[15:18:32.0000] <dglazkov>
I think it's a fair question (that I've been asked many times): why can't a web developer build their own tag that behaves just like the built-in one? the ghetto makes it clear where the real folks live, and where the toy people should play.

[15:18:43.0000] <Hixie>
it's not toy people

[15:18:46.0000] <Hixie>
it's extensions.

[15:18:59.0000] <Hixie>
extensions are qualitatively different than built-in features.

[15:19:17.0000] <dglazkov>
extensions is just a nice word for ghetto

[15:19:34.0000] <dglazkov>
built-in should be abolished as a concept eventually

[15:19:48.0000] <Hixie>
i completely disagree with that

[15:19:58.0000] <dglazkov>
everything is just custom elements that UA happened to provide

[15:20:02.0000] <dglazkov>
Hixie: I know :)

[15:21:06.0000] <Hixie>
these are the same arguments we had when xml came to be

[15:21:20.0000] <Hixie>
people were pushing the idea that people would be able to make up their own language

[15:21:58.0000] <dglazkov>
the idea to make up their own language, as a self-goal, is crazy and stupid.

[15:22:14.0000] <Hixie>
how is that different than "everything is just custom elements"?

[15:24:01.0000] <dglazkov>
because with the latter, the goal is to make the entire surface of Web platform inherently consistent and hackable. If some crazy nut decides to go invent their language with it, I am not going to stop them.

[15:24:08.0000] <Hixie>
TabAtkins: do i have to put anything about :user-error in the html spec? and if so, what?

[15:24:21.0000] <dglazkov>
Hixie: he's not at desk

[15:25:07.0000] <Hixie>
dglazkov: i think the goal of "make the entire surface of Web platform inherently consistent and hackable" is as misguided as the goal behind Perl6 of making the language itself mutable

[15:25:42.0000] <Hixie>
having concrete things that don't change is _good_, it's what makes the language approachable and usable

[15:25:47.0000] <Hixie>
you find someone else's work, you can tell how it works

[15:25:52.0000] <Hixie>
because it uses the same language you know

[15:26:07.0000] <Hixie>
if people can just mutate anything at will, it becomes nigh on impossible to maintain other people's work

[15:26:11.0000] <dglazkov>
it's a requirement for any platform to be usable. Unlike what it is now

[15:26:22.0000] <dglazkov>
Hixie: you're taking this to the deep end

[15:26:43.0000] <Hixie>
i disagree that it's a reqirement for the platform to be usable

[15:26:54.0000] <Hixie>
first, i don't know of any platform that actually does this and is widely used.

[15:27:09.0000] <Hixie>
second, the web is clearly usable, since it's used.

[15:27:16.0000] <Hixie>
it's the world's most used platform.

[15:27:26.0000] <Hixie>
sure, it can be made easier and more powerful

[15:27:44.0000] <Hixie>
but i don't see any reason to believe that making its core pillars mutable is a step towards that

[15:27:47.0000] <Hixie>
rather than a step awauy

[15:27:50.0000] <Hixie>
away

[15:28:02.0000] <dglazkov>
Hixie: I know :) I wonder if it's because you need some experience building and maintaining a good-sized web app. Then you'll see what I am talking about. Most web devs today spend most of their time fighting the platform, not working with it

[15:29:04.0000] <dglazkov>
making core pillars mutable sounds a bit different from what I am talking about

[15:31:31.0000] <dglazkov>
the web is definitely clearly usable. But it sucks as an application platform. And there's a lot of folks (including me) who think it shouldn't.

[15:31:55.0000] <Hixie>
i do write web apps, dunno how big they have to be to count as "good-sized", but my most recent mostly complete one is thousands of lines of JS, thousands of lines of HTML, and thousands of lines of server-side code.

[15:32:08.0000] <zewt>
it sure doesn't suck as an application platform (which isn't to say it doesn't have tons of room for improvement)

[15:32:50.0000] <Hixie>
there are certainly things in the platform that suck and are hard to deal with

[15:33:03.0000] <Hixie>
but i don't think being able to invent your own language is a solution to any of them

[15:33:13.0000] <zewt>
for many things i prefer it for application development over native development (especially when there's any gui involved), so i can only say it sucks in that respect to an equal or lesser degree than alternatives

[15:33:20.0000] <dglazkov>
again, you're trying to misrepresent what I am trying to say

[15:33:30.0000] <Hixie>
i'm not trying to

[15:33:33.0000] <zewt>
(that's a pretty accusatory thing to say)

[15:33:35.0000] <dglazkov>
inventing own language is not the goal

[15:33:39.0000] <Hixie>
if i am doing so it is because i don't understand what you are saying.

[15:33:48.0000] <dglazkov>
Hixie: then it's accidental

[15:33:51.0000] <Hixie>
which seems quite likely since i think what you're saying makes no sense :-)

[15:34:19.0000] <Hixie>
(wc says said app is about 20,000 lines of html, js, perl, and freepascal)

[15:34:20.0000] <zewt>
is http://krijnhoetmer.nl/irc-logs/whatwg/ down?

[15:34:28.0000] <Hixie>
(fwiw)

[15:34:38.0000] <zewt>
(looking for context)

[15:34:43.0000] <dglazkov>
Hixie: that's a lot of lines

[15:34:50.0000] <Hixie>
(though it has no shims to make things work in down-level clients, which i wouldn't be surprised to see double it)

[15:35:19.0000] <Hixie>
it's not that many lines, but it's relatively dense code

[15:36:00.0000] <dglazkov>
what component approach did you take, if it's not a secret?

[15:37:25.0000] <Hixie>
two approaches, mostly

[15:37:28.0000] <Hixie>
well, three

[15:37:43.0000] <csuwldcat>
whoa, just read the last few minutes - helllllo hyperbole!

[15:38:00.0000] <Hixie>
one was "add things i need to the HTML spec and wait for them to be implemented", but obviously that doesn't scale and i wouldn't say i really used that :-)

[15:38:27.0000] <Hixie>
the main one was i used canvas (it's a visual game); i used a lot of what i learnt from this project in the speccing of addHitRegion(), fwiw.

[15:38:59.0000] <Hixie>
and the third is that i am waiting for web components to enable me to extend <input> to provide a better UI for what I want; in the meantime I'm using the closest matching <input> type.

[15:39:43.0000] <csuwldcat>
Hixie: for some perspective, not a *single* web developer at mozilla that has used/discussed/explored custom elements has thought is="" _is_ was a good idea

[15:40:06.0000] <Hixie>
csuwldcat: i don't think it's a great idea either.

[15:40:26.0000] <csuwldcat>
why can't is/as just be optional

[15:40:27.0000] <csuwldcat>
?

[15:41:11.0000] <csuwldcat>
why burden and obfiscate the interface with such inference? Especially when the inference is singly to serve a tangential need?

[15:41:15.0000] <Hixie>
almost nobody would use it if it was optional, since most people don't undersand why semantics matter

[15:41:29.0000] <Hixie>
same reason people used to use <font> all the time

[15:41:34.0000] <csuwldcat>
<x is="foo">

[15:42:13.0000] <csuwldcat>
nothing forces they to comply

[15:42:39.0000] <Hixie>
indeed. nothing stops people from just using xml and css today.

[15:43:13.0000] <Hixie>
but by saying things are required, and making the language ergonomics encourage particular behaviours, we can increase the chances.

[15:43:17.0000] <a-ja>
or div & span with data-

[15:44:08.0000] <Hixie>
indeed

[15:44:18.0000] <Hixie>
and some people do indeed just use <div>s

[15:44:21.0000] <Hixie>
and it's sad when they do

[15:44:31.0000] <Hixie>
but at least the language encourages them not to

[15:44:33.0000] <csuwldcat>
Hixie, so you're afraid of the circumstance where a developer creates a custom element - that semantically kin to an existing element - and explicitly not using extends="input", for instance?

[15:44:46.0000] <Hixie>
e.g. it's easier to use <nav> than <div class="nav">

[15:45:11.0000] <csuwldcat>
what is the barrier to entry for extends="" *once* vs is="" 1000 times repeditively?

[15:45:13.0000] <Hixie>
csuwldcat: that is a fear, yes. more specifically, i'm worried people won't make it clear in the markup itself that it is an input.

[15:45:23.0000] <csuwldcat>
what is the need?

[15:45:24.0000] <Hixie>
so first, notice i am not suggestion we use is=""

[15:45:26.0000] <Hixie>
and haven't for a long time

[15:45:37.0000] <Hixie>
and please read the relevant bug where i discuss the reasons for all this

[15:45:40.0000] <csuwldcat>
UA just parses the <element extends="input" name="x-foo">

[15:45:51.0000] <Hixie>
UA has to download the file that contains the <element> first

[15:45:54.0000] <Hixie>
that's one of the problems

[15:46:04.0000] <csuwldcat>
you have a chicken egg here

[15:46:09.0000] <csuwldcat>
how will it know to use is?

[15:46:13.0000] <Hixie>
?

[15:46:13.0000] <csuwldcat>
is=""?

[15:46:19.0000] <Hixie>
antecedant error

[15:46:20.0000] <csuwldcat>
bc you code it to know this?

[15:46:25.0000] <csuwldcat>
the parser

[15:46:35.0000] <csuwldcat>
if it takes code to recognize is

[15:46:36.0000] <Hixie>
antecedent even

[15:46:43.0000] <Hixie>
i don't know what you're asking, sorry

[15:46:45.0000] <csuwldcat>
does it not take code to pull link

[15:46:57.0000] <csuwldcat>
either way you need to add something, no?

[15:47:03.0000] <csuwldcat>
either is="" recognition

[15:47:12.0000] <csuwldcat>
or extends="" recognition

[15:47:23.0000] <csuwldcat>
the same ends can be achieved, no?

[15:47:27.0000] <Hixie>
i really have no idea what you're talking about right now. can i beg you to start over with a complete sentence that doesn't require prior context in this conversation? :-)

[15:48:11.0000] <csuwldcat>
ok, in the element defintion <element name="x-tag-completer" extends="input">

[15:48:36.0000] <csuwldcat>
you declare your kin, what you are most like, or want to be

[15:48:56.0000] <csuwldcat>
obviously the browser would need to be coded to recognize this

[15:49:13.0000] <csuwldcat>
similarly it would need additional code to recognize is=""

[15:49:48.0000] <csuwldcat>
it seems to me, the single difference here, is that you are unhappy with not forcing the choice of an existing native element to inherit from

[15:49:53.0000] <csuwldcat>
am I wrong?

[15:50:09.0000] <Hixie>
my problem is that a UA that doesn't know anything about Web Components, when it sees <x-tag-completer>, has no idea what this is

[15:50:24.0000] <Hixie>
such a UA needs to see that as an <input>

[15:50:36.0000] <csuwldcat>
does it not have the same effect as a HTMLSpanElement in UA land?

[15:51:00.0000] <Hixie>
so e.g. <input/tag-completer>, which parses as <input> in legacy UAs, and as an <input> element implementing the "tag-completer" component in Web Component-aware UAs.

[15:51:30.0000] <Hixie>
yes, that's the problem, <x-tag-completer> is like <foo> or <span>, not like <input> which is what it should be like if a tag-competer is some sort of input widget.

[15:51:44.0000] <Hixie>
when you get a reference to the element, it should implement HTMLInputElement in both new and old UAs

[15:51:58.0000] <Hixie>
when you are a search engine you should be able to tell that it's a form control without knowing about web components

[15:52:37.0000] <csuwldcat>
Hixie: I know the crawlers execute js and grab linked docs

[15:52:39.0000] <Hixie>
when you only have the HTML file and not the web components, your data analysis tool should be able to know it's a form control and not, say, a section

[15:53:00.0000] <csuwldcat>
so that isn't the blocker it is being made out to be

[15:53:13.0000] <csuwldcat>
if you have the page, it will have the link

[15:53:40.0000] <csuwldcat>
and custom element internal elements will be native mostly

[15:53:57.0000] <Hixie>
requiring that tiny spiders implement web components just to be able to tell that it's an input is imho putting the burden on the wrong side of the balance.

[15:54:06.0000] <csuwldcat>
Let me admit something, you are in part right

[15:54:48.0000] <csuwldcat>
not forcing people through a fail-prone attribute may result in less is="" users

[15:54:55.0000] <csuwldcat>
I'll openly admit that

[15:55:02.0000] <csuwldcat>
However

[15:55:03.0000] <Hixie>
let me repeat that i am not proposing is=""

[15:55:16.0000] <csuwldcat>
input/foo?

[15:55:25.0000] <Hixie>
that's my latest proposal, yes

[15:55:27.0000] <csuwldcat>
how about <x/foo>....

[15:55:36.0000] <Hixie>
the "input" part is the part i care about

[15:55:36.0000] <csuwldcat>
see what I did there ;)

[15:55:55.0000] <Hixie>
if you do <x/foo> the validator can say "look dude, that's not HTML"

[15:56:04.0000] <Hixie>
which is enough to push a lot of people towards doing it right

[15:56:05.0000] <csuwldcat>
x-foo or x/foo, brevedy and felt need will win

[15:56:56.0000] <csuwldcat>
how do you reconcile the very real probability that the vast majority of custom elements have no equivalent?

[15:57:33.0000] <Hixie>
i don't think that's true, to start with

[15:57:34.0000] <csuwldcat>
thus rendering the exercise a monotonous, annoyance

[15:57:47.0000] <Hixie>
but do we have any data on that?

[15:57:52.0000] <csuwldcat>
I'd be willing to bet

[15:57:58.0000] <Hixie>
i'd love to see what kinds of components people are trying to write

[15:58:01.0000] <csuwldcat>
our tags at Mozilla

[15:58:11.0000] <Hixie>
if we had data showing this one way or the other it would significantly influence my opinions

[15:58:12.0000] <csuwldcat>
how do you classify a x-growbox?

[15:58:17.0000] <csuwldcat>
howabout a slidebox

[15:58:23.0000] <Hixie>
what's a "growbox"? or "slidebox"?

[15:58:23.0000] <csuwldcat>
flipbox?

[15:58:26.0000] <csuwldcat>
map?

[15:58:37.0000] <Hixie>
map as in map of the world, pick a country? that's a <select>.

[15:58:43.0000] <zewt>
please don't assume that everyone here is an expert in gecko internals :)

[15:58:47.0000] <csuwldcat>
growbox autoanimates height to match new injected elements

[15:58:53.0000] <Hixie>
that's CSS.

[15:58:59.0000] <csuwldcat>
basically, height: auto; transitioning

[15:59:00.0000] <Hixie>
shouldn't be a component at all. at least, not one in the markup.

[15:59:02.0000] <csuwldcat>
nope

[15:59:09.0000] <csuwldcat>
can't do that without this

[15:59:16.0000] <csuwldcat>
another annoyance we took care of

[15:59:17.0000] <Hixie>
then fix css to make it possible.

[15:59:20.0000] <csuwldcat>
haha

[15:59:27.0000] <csuwldcat>
On it :)

[15:59:47.0000] <Hixie>
things that are presenation-specific have no business being a markup-level component. they should either be in css, or css+webcomponents, but not in the html markup.

[15:59:54.0000] <csuwldcat>
Hixie: this is a copout "shouldn't be a component at all. at least, not one in the markup."

[15:59:56.0000] <Hixie>
presentation-specific


2013-01-09
[16:00:08.0000] <Hixie>
csuwldcat: how do you do an HTTP server with web components?

[16:00:18.0000] <csuwldcat>
jigga what?

[16:00:33.0000] <Hixie>
an HTTP server. Like Apache. How do you do that with Web components?

[16:00:45.0000] <csuwldcat>
I smell a rouse...

[16:00:54.0000] <csuwldcat>
not to be confused with rose

[16:01:07.0000] <csuwldcat>
ill bite

[16:01:12.0000] <csuwldcat>
"you dont"

[16:01:17.0000] <Hixie>
that's a copout

[16:01:34.0000] <csuwldcat>
I had binocculars on that one ;)

[16:01:51.0000] <csuwldcat>
c8

[16:01:52.0000] <csuwldcat>
c*

[16:02:02.0000] <zewt>
Hixie: other people having a different view on what a proposed feature is for doesn't make them nonsensical (which is what the "http server" analogy is suggesting)

[16:02:26.0000] <csuwldcat>
we have a x-localstorage tag

[16:02:36.0000] <zewt>
:|

[16:02:37.0000] <csuwldcat>
and x-indexeddb

[16:02:47.0000] <csuwldcat>
oh, they'll blow your hair back

[16:03:38.0000] <Hixie>
zewt: my point was just that saying "that's a copout" is an insufficient answer because it can be applied to things that are clearly not copouts but that we both agree are valid.

[16:04:08.0000] <csuwldcat>
what I'm saying, is that you can say any element "shouldn't be a component"

[16:04:33.0000] <csuwldcat>
just to reinforce a narrative that says "most custom elements have native kin"

[16:04:37.0000] <Hixie>
maybe i'm wrong and HTML should be presentational again after all, but I don't see why. Without an argument explaining why Web Components in markup are a valid answer for presentational stuff, rather than being just the easy solution today but not the right solution, the answer "it's a copout" is not valid.

[16:05:07.0000] <Hixie>
csuwldcat: you have my cause and effect backwards

[16:06:04.0000] <Hixie>
csuwldcat: i'm not starting from the assumption that most custom elements have native building blocks and using the argument that presentational stuff should be in CSS to support it. I'm starting from the assumption that HTML is not presentational, and concluding from that that thus it is likely that most components will have semantic building blocks to start from.

[16:06:20.0000] <csuwldcat>
I have the agony of a thousand unborn developers on my mind who will curse forced, fail-prone, obtuse, fallaciously-inferred semantics and inheritance

[16:07:53.0000] <Hixie>
i don't know how to debate in those terms

[16:09:21.0000] <jamesr>
what's expected rendering for this testcase: <!DOCTYPE html><div style="width: 6px; height:50px; overflow: scroll; border: 1px solid blue"></div>

[16:09:52.0000] <Hixie>
jamesr: expected per spec or per reality?

[16:10:02.0000] <jamesr>
i'm seeing the overflow controls sticking out of the div, but in inconsistent ways

[16:10:03.0000] <Hixie>
jamesr: (i.e. how much detail do you want regarding scrollbar rendering)

[16:10:25.0000] <jamesr>
i'm looking at code so i think i want to know 'bout reality :)

[16:10:42.0000] <jamesr>
bonus points - rtl!

[16:11:28.0000] <Hixie>
well basically i think the answer is you want cropped scrollbars that are visible except on recent MacOS with the legacy pref off and on mobile iOS and Android

[16:12:00.0000] <Hixie>
horizontal scrollbar invisible, vertical one aligned to the left on rtl and right on ltr

[16:12:25.0000] <jamesr>
ok. from what i'm seeing so far doubtful i'll find anyone that matches that

[16:12:27.0000] <Hixie>
invisible because the bottom right (left in rtl) corner is bigger than 6px square.

[16:12:47.0000] <Hixie>
on recent macos the scrollbars overlap, so you'd see the bottom

[16:12:54.0000] <zewt>
i don't recall ever seeing a browser actually crop scrollbars, at least in windows

[16:12:56.0000] <Hixie>
and on mobile the scrollbars are invisible anway

[16:12:58.0000] <zewt>
/me tries it

[16:13:05.0000] <jamesr>
zewt, on linux, scrollbars aren't cropped anywhere

[16:13:14.0000] <jamesr>
in chromium they're sticking out of the "wrong" end

[16:13:24.0000] <jamesr>
and they aren't cropped

[16:13:36.0000] <jamesr>
in firefox-linux, they stick out of the "correct" end in LTR but don't flip in RTL and aren't cropped

[16:14:30.0000] <zewt>
https://zewt.org/~glenn/test-windows-ff.png gross

[16:14:40.0000] <jamesr>
hah

[16:14:45.0000] <jamesr>
that's even worse that linux, amusingly enough

[16:14:50.0000] <jamesr>
what flavor of windows is that?

[16:15:00.0000] <zewt>
win7

[16:15:12.0000] <zewt>
does gecko use native controls for windows scrollbars, or does it fake it?

[16:15:13.0000] <jamesr>
zewt, and if you put that in <body dir="rtl">, do you get the same thing but stuck to the right edge of the screen?

[16:15:27.0000] <csuwldcat>
Hixie: I think you're missing the built-in motivation for developers to use extends=""

[16:15:43.0000] <Hixie>
csuwldcat: extends="" isn't in the page, so i'm not even looking at it.

[16:15:56.0000] <csuwldcat>
huh?

[16:16:09.0000] <Hixie>
csuwldcat: extends="" is in the web component's file, not the main HTML file.

[16:16:09.0000] <csuwldcat>
why?

[16:16:13.0000] <csuwldcat>
so?

[16:16:16.0000] <csuwldcat>
the UA knows

[16:16:23.0000] <csuwldcat>
crawlers know

[16:16:30.0000] <jamesr>
opera matches webkit - it sticks to the "wrong" end, isn't cropped, but does flip for RTL

[16:16:32.0000] <csuwldcat>
who else is there that can't know?

[16:16:35.0000] <Hixie>
<Hixie> requiring that tiny spiders implement web components just to be able to tell that it's an input is imho putting the burden on the wrong side of the balance

[16:16:36.0000] <zewt>
https://zewt.org/~glenn/test-windows-ff-rtl.png identical, just right-aligned

[16:16:58.0000] <Hixie>
<Hixie> my problem is that a UA that doesn't know anything about Web Components, when it sees <x-tag-completer>, has no idea what this is <Hixie> such a UA needs to see that as an <input>

[16:17:02.0000] <Hixie>
etc

[16:17:06.0000] <Hixie>
see above

[16:17:15.0000] <jamesr>
zewt, interestingly in the non-overconstrained case firefox does flip the scrollbar to the correct size

[16:17:31.0000] <jamesr>
so it's just the overconstrained case that does the LTR behavior always

[16:17:46.0000] <csuwldcat>
true, but I'm pretty sure people aren't going to be using components much until the browsers support them

[16:17:50.0000] <zewt>
https://zewt.org/~glenn/test-windows-chrome.png is that the same as what you see in linux?

[16:17:54.0000] <csuwldcat>
again, it's chicken and egg

[16:18:19.0000] <csuwldcat>
the conceptual/process overhead for using components AND completely different fallbacks is great

[16:18:29.0000] <jamesr>
zewt, yup, same with safari/mac. if you rtl then you should see that same thing flipped around a vertical axis

[16:18:30.0000] <csuwldcat>
no matter how it is specified

[16:18:33.0000] <jamesr>
and right-aligned

[16:18:56.0000] <jamesr>
in chromium, at least, we use the native theming assets but render them ourselves so we're technically capable of clipping

[16:19:06.0000] <jamesr>
not sure that's true for all other browsers

[16:19:09.0000] <zewt>
gecko looks like it does the same thing

[16:19:10.0000] <csuwldcat>
my bet: it's mostly an API that devs use to make more significant apps

[16:19:21.0000] <csuwldcat>
that said

[16:19:21.0000] <zewt>
since it looks exactly the same, but doesn't actually behave like native scrollbars

[16:19:34.0000] <zewt>
(eg. right-clicking doesn't give you the scrollbar context menu that real ones do)

[16:19:36.0000] <csuwldcat>
the only two browsers that have app initiatives

[16:19:41.0000] <csuwldcat>
are evergreen

[16:20:05.0000] <csuwldcat>
so the scope and duration of the issue you're trying to prevent is fleeting

[16:20:06.0000] <Hixie>
csuwldcat: it's not just browsers. We shouldn't require every HTML processor to also implement Web Components just to grab out what the fallback element is.

[16:20:09.0000] <Hixie>
imho.

[16:20:22.0000] <Hixie>
this is for all time, not just fleeting transition pain.

[16:21:04.0000] <zewt>
really wish there was a thing i could paste some HTML into, and get back screenshots from all major browsers in each OS

[16:21:04.0000] <csuwldcat>
are there many HTML processors that ignore link tags currently?

[16:21:27.0000] <csuwldcat>
not just special link rel

[16:21:38.0000] <csuwldcat>
normal ones that have been available for years

[16:21:42.0000] <csuwldcat>
are there many out there?

[16:21:59.0000] <Hixie>
csuwldcat: sure. Many tiny HTML processors don't fetch scripts or styles.

[16:22:19.0000] <csuwldcat>
what about next/previous page prefetch?

[16:22:35.0000] <Hixie>
hardly any browsers support that, let alone tiny UAs

[16:22:39.0000] <csuwldcat>
or any other number of ways docs are brought in?

[16:22:41.0000] <Hixie>
here's a concrete example:

[16:23:03.0000] <Hixie>
say i wanted to extend <h2>-<h6> in the HTML spec to do something cool like have a bug report form

[16:23:24.0000] <Hixie>
right now to generate the Table of Contents I run it through anolis, a tiny HTML processor that knows about <h1>-<h6>

[16:23:34.0000] <Hixie>
if my <h2>s start being <x-fancy-h2>, it won't work anymore

[16:23:48.0000] <Hixie>
if they become <h2/fancy-header> it'll work fine still

[16:24:15.0000] <csuwldcat>
will it work if you put <H1/fancy-header>?

[16:24:25.0000] <csuwldcat>
or sorry

[16:24:40.0000] <csuwldcat>
<dt/fancy-header>

[16:24:50.0000] <Hixie>
what would that mean?

[16:24:54.0000] <csuwldcat>
or any other tag that has a header like application?

[16:25:06.0000] <csuwldcat>
oh, as a developer, I'm just wondering why I can

[16:25:09.0000] <Hixie>
i would assume that my "fancy-header" component would be defined to extend only h1-h6

[16:25:18.0000] <csuwldcat>
can't go applying that to any ol' element

[16:25:22.0000] <csuwldcat>
can I?

[16:25:33.0000] <Hixie>
i would assume that web components wouldn't allow it

[16:25:38.0000] <Hixie>
but that's orthogonal

[16:25:49.0000] <csuwldcat>
oh, so a completely obtuse fail to potential users?

[16:25:53.0000] <csuwldcat>
sounds fun

[16:26:00.0000] <Hixie>
wouldn't be obtuse

[16:26:04.0000] <csuwldcat>
surely it is

[16:26:15.0000] <csuwldcat>
the interface begs people to mix and match

[16:26:21.0000] <csuwldcat>
beggggs

[16:26:31.0000] <Hixie>
it would be an error message like "The 'fancy-header' component applies to h1, h2, h3, h4, h5, h6. Application to <dt> is not defined and the binding has not been applied." or some such.

[16:26:47.0000] <Hixie>
but if the author wants it to apply to <dt>, and the component is defined to apply to it, then sure, why not

[16:27:00.0000] <Hixie>
i would imagine many components would apply to almost any phrasing element

[16:27:24.0000] <csuwldcat>
lol

[16:27:40.0000] <Hixie>
not sure why that's funny, but glad i can entertain :-)

[16:27:44.0000] <csuwldcat>
if that was the case, semantics are irrelevant :)

[16:28:02.0000] <Hixie>
why?

[16:28:06.0000] <csuwldcat>
if I can apply it to anything...then what use is <div/foo> ???

[16:28:12.0000] <Hixie>
depends what "foo" is

[16:28:25.0000] <Hixie>
if "foo" is a specific kind of control, then it probably only applies to <input>

[16:28:30.0000] <csuwldcat>
sure does, but not to this implementation

[16:28:42.0000] <Hixie>
if "foo" is "makes the title="" attribute have a fancy tooltip", then it would apply to any element with a title="" attribute

[16:28:44.0000] <csuwldcat>
it doesn't care if you need a kinship or now

[16:28:45.0000] <csuwldcat>
not

[16:28:57.0000] <Hixie>
not really sure what you're arguing here

[16:28:59.0000] <zewt>
you can apply css styles to any element, that doesn't make semantics irrelevant

[16:29:04.0000] <csuwldcat>
it'll force you to regurgitate it arbitrarily

[16:29:08.0000] <Hixie>
do you not think it should be possible to extend any element to have fancy tooltips?

[16:29:13.0000] <csuwldcat>
im arguing

[16:29:26.0000] <csuwldcat>
that if you are saying most/many could be applied to any element

[16:29:41.0000] <csuwldcat>
then what in the world is the leading tag name worth?

[16:29:47.0000] <Hixie>
"many" and "most" are not the same

[16:29:50.0000] <csuwldcat>
sure, a UA can read it

[16:30:04.0000] <Hixie>
and i just gave you a concrete example of how the tag name is critical

[16:30:11.0000] <csuwldcat>
but it is meaningless, worse, it could actually be *wrong*

[16:30:51.0000] <csuwldcat>
if slidebox has no semantics

[16:31:15.0000] <csuwldcat>
and I can apply it to any tag... why are you forcing me to write a random tag name in?

[16:31:38.0000] <csuwldcat>
or are you contending that I declare a special intent to be universally used?

[16:31:46.0000] <csuwldcat>
extends="all">

[16:31:47.0000] <csuwldcat>
?

[16:32:22.0000] <csuwldcat>
SMALLEST_POSSIBLE_TAG_NAME_HERE/foo

[16:33:29.0000] <csuwldcat>
"mr speaker, why do I have to write that tag name for these 5 elements? They aren't really sections, or divs?" "Well Billy, someone made us do that regardless for a few other use cases"

[16:34:07.0000] <csuwldcat>
"Doesn't HTMLUnknownElement have a similar proto profile as Span?"

[16:34:22.0000] <zewt>
... obviously a tag name without special semantics could be recommended for use when no existing html tag corresponds to it (but that's obvious and you know that already, and your sarcasm makes it hard to take your arguments seriously)

[16:34:28.0000] <csuwldcat>
"Sure billy, but that just isn't good enough for fringe use-cases"

[16:34:53.0000] <gsnedders>
Ugh, HTMLUnknownElement.

[16:34:58.0000] <gsnedders>
/me wants rid of that.

[16:35:00.0000] <csuwldcat>
Im more on board with x/foo

[16:35:05.0000] <csuwldcat>
than is=""

[16:35:11.0000] <gsnedders>
Just another way to break existing content by introducing elements.

[16:35:12.0000] <csuwldcat>
Hixie: I like that the proposal changed

[16:35:30.0000] <csuwldcat>
because everyone will just do x/foo

[16:35:47.0000] <csuwldcat>
and the inheritance comes from the <element extends="input"> anyway

[16:36:29.0000] <csuwldcat>
either way, brevity will win out, bring on the slashes ;)

[16:36:36.0000] <csuwldcat>
x/slidebox

[16:36:42.0000] <csuwldcat>
x/flipbox

[16:36:50.0000] <csuwldcat>
x-slidebox

[16:36:53.0000] <csuwldcat>
same shizz

[16:36:59.0000] <csuwldcat>
well not the same

[16:37:13.0000] <csuwldcat>
but developer-ergo wise, it will be

[16:39:22.0000] <csuwldcat>
how about all the downstream fall out?

[16:39:30.0000] <csuwldcat>
regexps, client parsers

[16:39:31.0000] <csuwldcat>
etc

[16:39:48.0000] <csuwldcat>
what happens when some detect what they believe is an end tag?

[16:40:39.0000] <csuwldcat>
slash is not expected by a large number of scripts I venture

[16:43:51.0000] <csuwldcat>
Hixie: did you consider all that? ^

[16:44:00.0000] <csuwldcat>
unintended consequence...

[16:45:16.0000] <csuwldcat>
if that is common, we could *literally* be breaking the web, as in scripts would error out that used to work

[16:45:29.0000] <csuwldcat>
never assuming both start and end tags have slashes

[16:45:34.0000] <csuwldcat>
I could be wrong

[16:45:39.0000] <csuwldcat>
are slashes allowed?

[16:45:57.0000] <csuwldcat>
and widely know to possibly be in start tags?

[16:46:21.0000] <csuwldcat>
I haven't seen it, I actually not sure on that, do you know?

[16:51:43.0000] <Hixie>
sorry, was afk

[16:51:45.0000] <Hixie>
oh, he left

[16:52:00.0000] <Hixie>
well anyway, i should be off. bbiab.

[17:11:05.0000] <JakeA>
Hey all. What effect should .innerHTML = "" have on the nodes previously in the element?

[17:11:29.0000] <TabAtkins>
JakeA: They're deleted.

[17:11:44.0000] <JakeA>
should each child be removed from the node, or each descendant removed from its parent?

[17:12:29.0000] <TabAtkins>
I suspect it's just each child, but I'm not sure - you'd have to check with a Mutation Observer.

[17:12:58.0000] <JakeA>
Trying to follow http://dom.spec.whatwg.org/#concept-node-replace-all

[17:13:23.0000] <JakeA>
there's a loop through descendants, but I think it's just for adding to the mutation observer

[17:13:52.0000] <JakeA>
Chrome, Firefox, Opera remove the children. IE removes descendants

[17:15:23.0000] <JakeA>
Yeah, IE's in the wrong, the descendants bit is just for adding to the mutation childList. Cheers!

[00:27:25.0000] <hsivonen>
interesting. the validator.nu process on html5.validator.nu had managed to die

[00:27:29.0000] <hsivonen>
relaunched

[00:37:37.0000] <Ms2ger>
gsnedders, what's up with HTMLUnknownElement?

[00:50:12.0000] <MikeSmith>
do you know what caused the process to dies?

[00:50:14.0000] <MikeSmith>
*dies

[00:50:16.0000] <MikeSmith>
oops

[00:50:21.0000] <MikeSmith>
d i e

[01:11:43.0000] <hsivonen>
MikeSmith: I have no clue

[01:12:30.0000] <MikeSmith>
hsivonen: OK

[03:17:11.0000] <Stevef_>
mikesmith: darobin: links to all html5 elements etc are broken in https://dvcs.w3.org/hg/aria-unofficial/raw-file/tip/index.html because URLS have changed for HTML5 editors version any chance of a fix?

[03:24:02.0000] <darobin>
Stevef_: they're broken but they redirect

[03:24:36.0000] <darobin>
I don't think we're going to reorganise the way the spec is split up, I'm pretty happy with the current result

[03:25:25.0000] <Stevef_>
darobin: sure, i didn't wait ;ong enough for the redirect just saw the 404 and started to whine :-)

[03:25:40.0000] <Stevef_>
thanks, thats fine

[03:25:44.0000] <darobin>
Stevef_: if you want to update that doc to have all the links to HTML be correct, it's actually possible to automate, we have the data for that

[03:25:49.0000] <darobin>
hehe

[03:26:28.0000] <Stevef_>
darobin: will ping you when i think about ding it

[03:26:48.0000] <darobin>
Stevef_: this script has all the data: http://www.w3.org/html/wg/drafts/html/master/fragment-links.js

[03:26:56.0000] <Stevef_>
cheers

[03:27:07.0000] <darobin>
fragment_links contains a mapping from IDs to the file in which they are contained

[05:08:43.0000] <annevk>
https://dvcs.w3.org/hg/webcomponents/raw-file/tip/spec/shadow/index.html#shadow-dom-example probably illustrates much of the disconnect

[05:38:15.0000] <hsivonen>
fwiw, next time someone complains about using non-fictitios data in examples in a Hixie spec, cite http://www.w3.org/TR/vocab-regorg/ for precedent

[05:38:39.0000] <hsivonen>
*fictitious

[05:58:07.0000] <MikeSmith>
hsivonen: what's an example of non-fictitious data in one of Hixie's specs?

[05:58:54.0000] <MikeSmith>
Stevef_: fwiw, for the author view I plan to keep the file splits as they were/are

[05:59:19.0000] <Stevef_>
mikesmith: ok thanks for the info

[05:59:43.0000] <hsivonen>
MikeSmith: I'm not sure, but my vague recollection is that google and yahoo were named somewhere at some point.

[06:00:19.0000] <MikeSmith>
hsivonen: ah, OK

[06:17:06.0000] <MikeSmith>
NTT Software is offering bounties to anyone who implements some open WebKit bugs related to Japanese layout / vertical text

[06:17:17.0000] <MikeSmith>
http://www.ntts.co.jp/offer/css-bunkakai/pop01.html

[06:18:17.0000] <MikeSmith>
20‰∏áÂÜÜ or most are 10‰∏áÂÜÜ

[06:19:27.0000] <MikeSmith>
2200 USD or 1100 USD each

[06:23:02.0000] <darobin>
can someone offer a bounty on the life of people who publish tables as images?

[06:24:40.0000] <darobin>
MikeSmith: do you know who at NTT is driving that though?

[06:25:50.0000] <MikeSmith>
darobin: no I don't but I'll ask

[06:26:22.0000] <darobin>
if you I'd love to ask them some question

[06:26:35.0000] <MikeSmith>
NT Software is a different business unit from the people who are actively participating in W3C WGs currently

[06:26:41.0000] <MikeSmith>
*NTT

[06:27:06.0000] <darobin>
well yeah, NTT is more like a small country than a large company

[06:27:31.0000] <MikeSmith>
yeah

[06:28:10.0000] <MikeSmith>
I think it might be a separate company, the way NTT Docomo is, only partly owned by NTT

[06:29:14.0000] <darobin>
the entire conglomerate is set up that way AFAIK

[06:29:21.0000] <darobin>
ditto NTT Data

[06:29:50.0000] <MikeSmith>
yeah

[06:29:52.0000] <darobin>
I used to work for a company where we sold stuff to NTT several times because it was easier for them to do that rather than figure out how to get the same internally

[06:29:59.0000] <MikeSmith>
hah

[06:30:33.0000] <darobin>
MikeSmith: do you know if there's a page for the testing meeting? (And are you going?)

[06:31:04.0000] <MikeSmith>
umm, remind me which testing meeting?

[06:31:11.0000] <MikeSmith>
the one in California?

[06:33:06.0000] <darobin>
yeah that one

[06:33:10.0000] <darobin>
I see pretty much no details

[06:34:14.0000] <MikeSmith>
darobin: so I told plh I thought you should go to that

[06:34:16.0000] <MikeSmith>
not me

[06:34:19.0000] <MikeSmith>
and he agreed

[06:34:25.0000] <MikeSmith>
so it's settled!

[06:34:28.0000] <darobin>
MikeSmith: haha

[06:34:33.0000] <darobin>
well I'm planning to go that's for sure

[06:34:39.0000] <darobin>
but you could have been there too, you never know

[06:34:59.0000] <darobin>
I'm just worried that since I haven't heard from it that it's still taking place ‚Äî I need to book travel...

[06:35:19.0000] <MikeSmith>
yeah I don't know the precise details

[06:35:29.0000] <MikeSmith>
but I think it's the end of this month

[06:35:48.0000] <MikeSmith>
so yeah you should book your travel

[06:36:08.0000] <MikeSmith>
I guess you gotta ping plh about the date

[06:36:28.0000] <Ms2ger`>
Speaking of tests

[06:36:32.0000] <Ms2ger`>
Hi darobin :)

[06:36:48.0000] <darobin>
Ms2ger`: I haven't forgotten you sweetheart

[06:36:51.0000] <darobin>
it'll happen this week

[06:37:59.0000] <MikeSmith>
darobin: btw http://spec.nttdocomo.co.jp/spbss/

[06:38:11.0000] <MikeSmith>
ringmark-ish type thing

[06:38:23.0000] <MikeSmith>
you gotta push some buttons to see the results

[06:38:36.0000] <MikeSmith>
but I think there's English version

[06:38:51.0000] <MikeSmith>
http://spec.nttdocomo.co.jp/spbss/english/index.html

[06:39:25.0000] <darobin>
interesting

[06:39:34.0000] <MikeSmith>
I haven't looked yet to see what tests it's actually running

[06:39:41.0000] <darobin>
might be worth looking inside to see if the tests are better than ringmark

[06:40:38.0000] <MikeSmith>
I suspect they are not tests that they came up with themselves

[06:40:51.0000] <MikeSmith>
but instead got from somewhere else

[06:41:14.0000] <MikeSmith>
I hope not from html5test at least

[06:43:14.0000] <darobin>
MikeSmith: mmmm, they're testing for the Calendar API...

[06:43:22.0000] <darobin>
this doesn't bode well for the rest

[06:43:30.0000] <MikeSmith>
hmm yeah

[06:43:58.0000] <darobin>
it's just an API that doesn't exist

[06:46:56.0000] <darobin>
they've helpfully minified all their scripts, too :)

[06:51:38.0000] <Ms2ger`>
Sounds exactly like ringmark, then

[07:01:33.0000] <annevk>
TabAtkins: thanks for explaining, but I still don't get it :/

[07:02:12.0000] <annevk>
I think my Mac has this problem https://discussions.apple.com/thread/4421353 which suggests I need to replace the SSD

[07:02:17.0000] <annevk>
aarghfhfd

[07:26:33.0000] <gsnedders>
Ms2ger`: I hate it (HTMLUnknownElement). It is in the spec because I got it there.

[07:30:07.0000] <gsnedders>
jgraham: Any opinion on how far back we should support html5lib on Py2?

[07:32:03.0000] <Ms2ger`>
Fwiw, we require 2.7 now and it makes us happy :)

[07:33:30.0000] <gsnedders>
I think most of what we care about goes back to 2.5, and I think the 3to2 generated code deals with that.

[08:35:23.0000] <MikeSmith>
darobin: regardless of the NTT Software bounty thing, I think Taichi Kawabata is definitely the guy you want to talk to

[08:35:28.0000] <MikeSmith>
he was at TPAC

[08:35:32.0000] <MikeSmith>
dunno if you met him

[08:35:38.0000] <MikeSmith>
I don't know him well

[08:36:17.0000] <darobin>
the name vaguely recalls something, but I have a terrible memory of people I've met briefly vs names I've just seen in passing in email

[08:36:22.0000] <darobin>
in any case, good to know!

[08:37:28.0000] <dglazkov>
good morning, Whatwg!

[08:41:51.0000] <gavinc>
"just change the date on the spec every time someone checks something in" ... seriously? Don't we have computers to do that sort of thing?

[08:43:06.0000] <MikeSmith>
dglazkov: annevk was having a hard time understanding what the Reprojection part of the Shadow DOM spec is saying

[08:43:16.0000] <MikeSmith>
or what it's trying trying to say

[08:43:27.0000] <MikeSmith>
http://logbot.glob.com.au/?c=freenode%23whatwg&s=8%20Jan%202013&e=8%20Jan%202013#c760296

[08:43:59.0000] <MikeSmith>
oh I see in the logs now you saw his comments already

[08:45:39.0000] <MikeSmith>
darobin: e.g., http://lists.w3.org/Archives/Public/www-style/2011Feb/0804.html has an example of double-sided ruby use case that Kawabata-san contributed

[08:46:29.0000] <darobin>
gavinc: where's that from?

[08:46:51.0000] <gavinc>
darobin: rdf-wg, so no, no one else here cares ;)

[08:47:47.0000] <darobin>
MikeSmith: thanks, that's an interesting case indeed (though it does seem to belong to the more rare variety)

[08:48:20.0000] <darobin>
gavinc: heh. is this a spec using ReSpec on the dvcs.w3 server? if so it's a known bug that the date does not match the last change automatically

[08:48:23.0000] <dglazkov>
MikeSmith: reprojection is a hard subject anyway.

[08:48:34.0000] <dglazkov>
MikeSmith: I propose shopping

[08:48:48.0000] <gavinc>
darobin: ding ;)

[08:50:46.0000] <Ms2ger`>
Well, respec is the known bug ;)

[08:51:57.0000] <darobin>
and that, ladies and gentlemen, is how you trap Ms2ger`

[08:52:12.0000] <darobin>
Ms2ger`: actually the bug is that hgweb doesn't set last modified dates correctly

[08:52:18.0000] <Ms2ger`>
darobin, so about those tests :)

[08:52:33.0000] <darobin>
I said this week my love, so it'll be this week

[08:52:52.0000] <Ms2ger`>
My week ends on Wednesday

[08:52:55.0000] <Ms2ger`>
:)

[08:53:50.0000] <darobin>
well I've got a whole seven days ahead of me then!

[08:54:04.0000] <Ms2ger`>
Dammit :)

[08:55:29.0000] <Ms2ger`>
Wait, I thought someone at Mozilla already wrote tests for case sensitivity

[08:55:32.0000] <Ms2ger`>
Why more?

[08:56:22.0000] <dglazkov>
annevk: insertion point can certainly be a child of a shadow host. insertion point from tree A can be a child of a shadow host of tree B.

[09:06:53.0000] <MikeSmith>
dglazkov: I think Anne's point was that the spec should make that clear but doesn't

[09:08:20.0000] <dglazkov>
MikeSmith: gotcha

[09:17:14.0000] <MikeSmith>
dglazkov: you coining a lot of novel terms in that spec man

[09:17:33.0000] <MikeSmith>
I like "reprojection" though

[09:18:12.0000] <MikeSmith>
I think there was a song by the 13th Floor Elevators, "I've got reprojection"

[09:18:39.0000] <Ms2ger`>
Was that one of your bands?

[09:19:38.0000] <dglazkov>
MikeSmith: thanks! I think...

[09:19:40.0000] <MikeSmith>
Ms2ger`: that was the band to end all bands

[09:19:41.0000] <dglazkov>
:P

[09:19:55.0000] <MikeSmith>
one dude played the electric jug

[09:20:37.0000] <MikeSmith>
dglazkov: to truly compete with Hixie in name-coining you need to get the term "palpable" into your spec

[09:20:59.0000] <dglazkov>
MikeSmith: challenge accepted

[09:21:09.0000] <MikeSmith>
yes!

[09:21:16.0000] <MikeSmith>
this is why I love standards

[09:21:30.0000] <MikeSmith>
well, this and the HTML working-group chairs

[09:21:43.0000] <MikeSmith>
hard to decide what I love more

[09:21:52.0000] <Ms2ger`>
Booze

[09:22:20.0000] <dglazkov>
hard not to love those who are brave enough to admit: "I am not a person, I am a chair."

[09:23:54.0000] <gsnedders>
b'<!DOCTYPE HTML>\n<meta http-equiv="Content-Type " content="text/html; charset=iso8859-2">'

[09:24:06.0000] <gsnedders>
Why does that expect windows-1252 as the encoding?

[09:24:22.0000] <gsnedders>
Because of the whitespace?

[09:26:09.0000] <MikeSmith>
bugga wha

[09:26:22.0000] <MikeSmith>
who's that b'

[09:26:37.0000] <MikeSmith>
some pythong thing like u'

[09:26:49.0000] <gsnedders>
MikeSmith: Yup.

[09:26:54.0000] <gsnedders>
MikeSmith: For a binary string.

[09:28:14.0000] <MikeSmith>
does the spec actually say waht do for that?

[09:28:34.0000] <gsnedders>
Sure.

[09:28:42.0000] <Ms2ger`>
Let's hope so!

[09:36:03.0000] <annevk>
dglazkov: the spec is very vague with respect to the model I think

[09:36:11.0000] <annevk>
dglazkov: there's some algorithms, but no model

[09:36:45.0000] <annevk>
dglazkov: I think defining what this means in an implementation would be much better

[09:36:58.0000] <annevk>
dglazkov: and would not lead to problems as we've seen thus far with e.g. relatedTarget

[09:37:22.0000] <annevk>
dglazkov: and if relatedTarget is a problem, so are the other MouseEvent and TouchEvent properties

[09:37:30.0000] <dglazkov>
annevk: sounds good.

[09:37:56.0000] <dglazkov>
I like the notion of explicitly defining a model in a spec.

[09:38:11.0000] <dglazkov>
it would fit well with the algorithms, too

[09:38:19.0000] <annevk>
what we want in the end for all specs is to map relative closely to implementations

[09:38:29.0000] <annevk>
because whenever they don't we hit issues

[09:42:43.0000] <dglazkov>
annevk: +1

[09:42:48.0000] <dglazkov>
:)

[09:45:39.0000] <dglazkov>
annevk: (an excuse follows) I've been trying to get to the point where the spec is complete and correct in terms of functional machinery, and concentrated on additions and edits. Now it's time to take a holistic view and refactor.

[09:47:37.0000] <tantek>
is there a groundhog day meme generator? (case-sensitivity)

[10:05:55.0000] <annevk_>
dglazkov: looking forward to the refactor

[10:06:20.0000] <dglazkov>
annevk: I thought you were doing it!

[10:06:37.0000] <dglazkov>
:P

[10:06:41.0000] <annevk>
hehe

[10:07:01.0000] <csuwldcat>
dglazkov: thought of something

[10:07:11.0000] <annevk>
need to know a bit more about the details for that

[10:07:31.0000] <csuwldcat>
would <div/foo> break a lot of script on the web?

[10:07:48.0000] <csuwldcat>
im thinking regexp and parsing code for all sorts of things

[10:08:04.0000] <csuwldcat>
do you think it would false id the start tags as end tags?

[10:08:29.0000] <dglazkov>
csuwldcat: that's the concern that hsivonen raised I think.

[10:08:49.0000] <csuwldcat>
hmm, how can we test that?

[10:08:53.0000] <dglazkov>
csuwldcat: I am still brewing on this. I apologize for not having a hard opinion.

[10:09:00.0000] <csuwldcat>
np

[10:09:19.0000] <csuwldcat>
you're the calm cool and collected dimitri!

[10:09:22.0000] <csuwldcat>
:)

[10:13:27.0000] <annevk>
dglazkov: fwiw, it might help to point Hixie to the kind of example at the end of the spec

[10:14:09.0000] <dglazkov>
annevk: oh?

[10:14:52.0000] <annevk>
why is the style sheet broken on https://dvcs.w3.org/hg/webcomponents/raw-file/tip/spec/shadow/index.html btw?

[10:15:17.0000] <jamesr_>
annevk: [blocked] The page at https://dvcs.w3.org/hg/webcomponents/raw-file/tip/spec/shadow/index.html ran insecure content from http://www.w3.org/StyleSheets/TR/W3C-ED.

[10:15:53.0000] <jamesr_>
dglazkov: should be https://www.w3.org/StyleSheets/TR/W3C-ED (or just //www.w3.org/StyleSheets/TR/W3C-ED ftw)

[10:15:55.0000] <dglazkov>
annevk: need to make link rels point to https as well

[10:15:55.0000] <annevk>
oh a Chrome thing

[10:15:57.0000] <dglazkov>
yop

[10:16:28.0000] <annevk>
CSS insecure but the <img> is not? weird

[10:16:39.0000] <jamesr_>
it's mixed content in all browsers, i think chrome may be the only one that straight up blocks that

[10:16:50.0000] <annevk>
it doesn't block all of it

[10:17:24.0000] <annevk>
dglazkov: never mind about the example in the end

[10:25:05.0000] <TabAtkins>
annevk: Let me try explaining in more detail.  Say you're inventing the <details> element with shadow dom.  The shadow of it will look like: <shadow><content select=summary:first-of-type><div><content></div></shadow>.

[10:25:25.0000] <csuwldcat>
dglazkov: tags in the style of <foo/bar> aren't able to be doc.createElement generated in Firefox

[10:25:27.0000] <csuwldcat>
document.createElement('foo/bar');

[10:25:32.0000] <TabAtkins>
(For the sake of this discussion, I'm going to use soemthing silly.)

[10:25:35.0000] <csuwldcat>
invalid char errpr

[10:25:58.0000] <csuwldcat>
meaing all of x-tag and any polylib that provides backwards compat is impossible

[10:26:36.0000] <TabAtkins>
Now, say you wanted a details element that only showed the even children, and there was already a component for that - <x-even-children-only>.  That element's shadow looks like <shadow><content select=:nth-child(even)></shadow>.

[10:26:37.0000] <csuwldcat>
fails in Chrome too

[10:26:37.0000] <csuwldcat>
Error: INVALID_CHARACTER_ERR: DOM Exception 5

[10:27:11.0000] <TabAtkins>
So, you rewrite your <x-details> shadow to be:  <shadow><content select=summary:first-of-type><x-even-children-only><content></x-even-children-only></shadow>

[10:27:30.0000] <csuwldcat>
Hixie: <foo/bar> tags can't be polyfilled

[10:27:38.0000] <TabAtkins>
Naively, though (and this is how the spec worked at first), the <x-even-children-only> element only has a single child - the <content> element!

[10:27:52.0000] <csuwldcat>
that's a show-stopper for our apps initiative at Mozilla

[10:28:00.0000] <TabAtkins>
In other words, components aren't composible if they actually want to filter their contents.

[10:28:34.0000] <TabAtkins>
The reprojection makes it so that, when the <x-even-children-only> element looks at its children, it sees the *results* of the <content> element, rather than the <content> element itself.

[10:28:40.0000] <TabAtkins>
Thus, composition works.

[10:39:46.0000] <annevk>
csuwldcat: <foo/bar> can as it would be a <foo> element with a bar attribute

[10:41:20.0000] <annevk>
TabAtkins: ah okay, got it

[10:41:54.0000] <annevk>
TabAtkins: fwiw, using <shadow> is actually confusing (I later learned) as there's an element called that way

[10:44:18.0000] <csuwldcat>
annevk: what?

[10:44:45.0000] <csuwldcat>
are you saying that it is a boolean attribute?

[10:44:58.0000] <csuwldcat>
so it actuall is <foo bar>

[10:45:04.0000] <Stevef_>
mikesmith: didn't know you were a roky erickson fan

[10:45:07.0000] <csuwldcat>
annevk: ^

[10:45:48.0000] <csuwldcat>
annevk: how does that escape the metric ton of problems of an is="" attribute?

[10:45:58.0000] <csuwldcat>
the problem set is the same

[10:46:22.0000] <csuwldcat>
you are now back to false inferrences of proto inheritance and mutability

[10:48:34.0000] <Stevef_>
MikeSmith: bull of the woods is my fave elevators album

[10:49:20.0000] <volkmar>
http://www.whatwg.org/specs/web-apps/current-work/multipage/common-microsyntaxes.html#valid-time-string <- does someone understand the logic of the point 4 here?

[10:49:54.0000] <volkmar>
having an optional part needed or not depending on what the optional part contains seems at best odd

[10:51:00.0000] <annevk_>
I guess it means that if second is zero you can write either :00 or nothing

[10:54:22.0000] <volkmar>
this is oddly expressed

[10:54:44.0000] <volkmar>
this should be marked as optional

[10:54:53.0000] <volkmar>
and if not present, seconds should be considered as = 0

[10:58:50.0000] <TabAtkins>
annevk_: Yeah, I know it's confusing, sorry.  I think we actually tend to use <shadow-root> to indicate it in bug conversations.

[11:23:16.0000] <csuwldcat>
annevk_: from now on, if people mean to describe an attribute, let's not use <foo/bar>

[11:23:25.0000] <csuwldcat>
it's foo[bar]

[11:23:33.0000] <csuwldcat>
no need to confuse ;)

[11:26:17.0000] <Ms2ger`>
foo@bar, duh

[11:36:34.0000] <annevk_>
csuwldcat: I meant when used in markup you end up with <foo bar> so you could use that for polyfill

[11:36:45.0000] <annevk_>
csuwldcat: if you want to use it through document.createElement you'd have to patch that method

[11:37:01.0000] <gsnedders>
Ms2ger`: I do like how this is the only context in which XPath is used.

[11:37:30.0000] <Ms2ger`>
What's XPath? :)

[11:38:21.0000] <csuwldcat>
[bar] has all the same ridiculous issues is="bar" has

[11:41:37.0000] <annevk_>
csuwldcat: I don't think you'll be winning anyone over if you keep using words like "ridiculous"

[11:45:53.0000] <gsnedders>
annevk: Now don't be ridiculous.

[11:52:50.0000] <jgraham>
gsnedders: I care not one jot about Python < 2.6

[11:52:57.0000] <jgraham>
MikeSmith: Secret testing meeting :(

[11:53:00.0000] <jgraham>
+?

[11:54:31.0000] <gsnedders>
jgraham: The encoding tests are a mess. I'm not sure whether they're testing the prescan or the changing encoding.

[11:56:12.0000] <jgraham>
dglazkov: I suppose one option would be <input +component>

[11:56:54.0000] <jgraham>
Needing the space is a bit unfortunate

[11:57:24.0000] <annevk>
the discussion on es-discuss reveals quite a few problems btw with the notion of making the entire platform hackable

[11:58:05.0000] <annevk>
e.g. https://mail.mozilla.org/pipermail/es-discuss/2013-January/027952.html

[11:59:49.0000] <jgraham>
"

[11:59:51.0000] <jgraham>
That's a _really_ interesting definition of "can't do anything".

[11:59:59.0000] <jgraham>
"

[12:00:03.0000] <jgraham>
Hah

[12:00:31.0000] <Ms2ger`>
What he's missing is that the guy has a craving in search of a problem, I guess

[12:01:51.0000] <annevk>
Ms2ger`: well given that he's essentially arguing the implement the DOM-in-JS party line the exchange seems relevant

[12:02:22.0000] <Ms2ger`>
s/the guy/the DOM-in-JS party/

[12:02:33.0000] <jgraham>
Yeah well

[12:02:55.0000] <jgraham>
The idea that browsers can toss out two decades of invariants isn't going to fly

[12:03:16.0000] <jgraham>
Regardless of how eloquently someone argues for it

[12:04:02.0000] <jgraham>
Doesn't mean that there aren't improvments we can make in terms of the flexbility of the platform of course

[12:06:44.0000] <gsnedders>
jgraham: So it appears a lot of html5lib has got broken due to tests getting broken. I'm blaming you.

[12:07:24.0000] <gsnedders>
And I seem to be fixing it when I try to test Py3 changes.

[12:07:26.0000] <gsnedders>
So oh well.

[12:07:43.0000] <jgraham>
gsnedders: All I heard there was "I'm fixing it"

[12:07:50.0000] <gsnedders>
Just making it a lot more work than I expected, given the Py2 code is broken too. :(

[12:08:18.0000] <annevk>
We'll get you some cake

[12:09:24.0000] <annevk>
gsnedders: btw, for running tests, there's no option to just ignore a file like the one for <main>?

[12:10:06.0000] <gsnedders>
annevk: I just did if file == "main-element": continue

[12:17:53.0000] <Hixie>
hsivonen: you seem significantly more conservative about the parser than i do. Is there some reason I'm missing? It seems to me that if anything, we should be less conservative about it than we've ever been before, given how good a position we're in right now with respect to parsing HTML.

[12:20:29.0000] <Hixie>
abarth: the security problem in the thread you're in with bz is that you can get the _getter_ for Window.document from a Window prototype, and then apply it to a Window you have that's cross-origin

[12:20:53.0000] <Hixie>
abarth: so the security check for _getting "document"_ is bypassed, and you need a security check in the execution of the getter itself.

[12:21:05.0000] <Hixie>
abarth: doesn't require assymetric checks though, that's a separate issue

[12:43:59.0000] <gsnedders>
jgraham: I've just pushed a ton of stuff, leading up to the new tip which regenerated the Py2 code from Py3.

[12:44:06.0000] <gsnedders>
So Py3 should now be the authorative copy.

[12:55:40.0000] <jgraham>
gsnedders: Nice

[13:00:35.0000] <gsnedders>
Interesting side-note about the new html5lib revision: on the speed.pypy.org benchmark data, it's 8% quicker than before with PyPy (mainly down to 2to3 and then 3to2 sorting out all the implicit str/unicode conversions) and 25% quicker than the old html5lib revision tested on speed.pypy.org; CPython shows a 14% regression over the same set of changes despite having optimization work specifically

[13:00:42.0000] <gsnedders>
targetting it.

[13:15:17.0000] <annevk_>
gsnedders: okidoki

[13:26:11.0000] <jgraham>
gsnedders: More optimisation from whom?

[13:27:37.0000] <jgraham>
annevk: Producing multipart responses in HTTP isn't exactly well supported

[13:27:44.0000] <jgraham>
+frameworks

[13:27:52.0000] <Hixie>
yeah really

[13:27:57.0000] <jgraham>
and maybe s/HTTP/server-side/

[13:28:37.0000] <jgraham>
(I don't really like magic comments either, but I think "this is a sunk cost on the producer side" is a weak argument)

[13:28:39.0000] <annevk>
jgraham: given it's in <iframe> and such I'd think it is

[13:29:09.0000] <jgraham>
annevk: I have never used a web framework that made it easy to produce a multipart response

[13:29:44.0000] <jgraham>
I'm not aware of a way to configure apache to serve a resource that is several files stuffed into a multipart response

[13:29:48.0000] <annevk>
it was part of Comet

[13:29:58.0000] <hober>
MikeSmith: irc.w3.org has been really flaky for me lately. was it something i said? :)

[13:31:53.0000] <jgraham>
annevk: I'm not saying it's a dealbreaker, or that it's impossible to generate multipart responses. But I don't think it's really a built-in feature anywhere at present. So not really a sunk cost.

[13:36:10.0000] <gsnedders>
jgraham: From myself/Philip` at various points.

[13:45:05.0000] <annevk>
jgraham: couple of searches on Google shows that there's plenty of documentation on how to produce multipart responses in various popular languages

[14:01:46.0000] <jgraham>
annevk: All the pages I can see say "this isn't built in" (if you just look at things serving normal GET requests, not at comet servers)

[14:02:49.0000] <jgraham>
Of course I'm not disputing that it's *possible*, just that it is  well supported


2013-01-10
[16:03:08.0000] <zewt>
things that are less than confidence-inspiring: http://joker.com has a login form on the front non-https page

[16:07:07.0000] <tantek>
it's not supposed to be funny?

[17:24:35.0000] <MikeSmith>
hober: the IRC server was upgraded a few days agod

[17:25:06.0000] <MikeSmith>
to ngIRCd

[17:26:48.0000] <MikeSmith>
if you're see flakiness, please report it so the systems team can investigate

[17:28:33.0000] <a-ja>
it's all the new users....bailing from Messenger :)

[17:28:36.0000] <MikeSmith>
hober: oh I think what you're seeing might not have anything to do with the IRC server upgrade at all but instead this: "Connectivity problems due to a bad link between MIT and Level3"

[17:29:05.0000] <MikeSmith>
that connectivity problem has been going on for several days now

[17:29:39.0000] <MikeSmith>
a-ja: :-)

[17:30:57.0000] <a-ja>
MikeSmith: just heard that on CNN and haven't read about it yet....wassup?

[17:31:57.0000] <MikeSmith>
a-ja: I don't know the details at all. Just know it's been at least 2-3 days now going one

[17:36:09.0000] <abarth>
Hixie: in WebKit, window.document isn't visible across origins

[17:37:43.0000] <Hixie>
abarth: well, it is, but in those cases it's ok

[17:38:15.0000] <abarth>
in which cases is it visible across origins?

[17:38:58.0000] <a-ja>
MikeSmith: ahh...forcing em on to skype instead

[17:39:32.0000] <Hixie>
abarth: take a same-domain iframe's document, then set your own document.domain.

[17:39:45.0000] <Hixie>
the document you took is now cross-origin, but you can still access it

[17:39:48.0000] <abarth>
oh, I wasn't covering document.domain

[17:39:53.0000] <abarth>
document.domain is dumb

[17:39:56.0000] <abarth>
and isn't interoperable

[17:40:22.0000] <abarth>
there's nothing special about document in that regard

[17:40:25.0000] <MikeSmith>
a-ja: ah you mean Microsoft has shut down Messenger?

[17:40:30.0000] <abarth>
the same is true for any other property of window

[17:40:40.0000] <abarth>
or any other property of anything for that mater

[17:40:43.0000] <abarth>
matter

[17:40:50.0000] <a-ja>
MikeSmith: in March

[17:40:51.0000] <abarth>
(except the ones I listed in my email)

[17:42:06.0000] <JonathanNeal>
Great article Bruce Lawson, if you're out there. http://html5doctor.com/interview-with-ian-hickson-html-editor/

[17:42:28.0000] <Hixie>
abarth: yup

[17:42:52.0000] <JonathanNeal>
Hixie: you were good too :)

[17:43:34.0000] <Hixie>
heh

[17:44:52.0000] <a-ja>
why do we trust that guy again?   heh

[17:45:06.0000] <a-ja>
good interview

[17:45:16.0000] <JonathanNeal>
It was a really great article. Hixie, if the web doesn't work out for us, I will read your column in the printed press.

[17:45:45.0000] <Hixie>
heh

[17:45:56.0000] <Hixie>
journalist was one of the things i wanted to be as a kid

[17:46:32.0000] <Hixie>
(spec writer wasn't. i became a spec writer long before it was what i wanted to be.)

[17:46:58.0000] <JonathanNeal>
Now you're good at both. Thanks for sharing that content.

[18:02:24.0000] <MikeSmith>
they should run an article where Hixie is the one who interviews somebody and asks the questions

[18:02:46.0000] <MikeSmith>
Hixie interviews abarth

[18:02:47.0000] <MikeSmith>
or bz

[18:04:49.0000] <a-ja>
or a11y folks

[18:07:30.0000] <MikeSmith>
speaking of abarth I see WebKit will be moving HTML parsing of the main thread to speed up parsing on mobile

[18:07:52.0000] <MikeSmith>
http://lists.webkit.org/pipermail/webkit-dev/2013-January/023271.html

[18:10:10.0000] <abarth>
yes

[18:10:28.0000] <abarth>
although we're going to start with a slightly different approach that used in mozilla

[18:11:13.0000] <abarth>
(just moving the tokenizer, not the whole thing)

[18:15:13.0000] <MikeSmith>
abarth: you working on the implementation again this time too, or just Eric?

[18:54:12.0000] <MikeSmith>
Hixie: in case you're curious, XSLT WG published a "XSLT and XQuery Serialization 3.0" that defines XHTML and HTML output methods, normatively referencing the HTML spec

[18:54:21.0000] <MikeSmith>
well, the HTML5 spec

[18:54:27.0000] <MikeSmith>
though also the HTML4 spec

[18:55:45.0000] <MikeSmith>
and not matching the definition for space characters in the HTML spec

[20:33:08.0000] <abarth>
MikeSmith: yes, eric, tonyg, and myself

[20:45:11.0000] <MikeSmith>
abarth: ah ok

[21:23:44.0000] <zewt>
i forget how impossible wikipedia is to read without a style to hide the endless gross mass of superscripts

[00:02:15.0000] <hsivonen>
Hixie: that we now have exceptionally good interop for HTML parsing is not a permission to start breaking that interop!

[01:35:24.0000] <krijn_>
Are there any WebVTT implementations out there already?

[01:53:22.0000] <krijn_>
http://ie.microsoft.com/testdrive/Graphics/VideoCaptions/ - IE10, Chrome en Safari, check!

[02:31:46.0000] <MikeSmith>
https://code.google.com/p/web-page-replay/ is interesting

[02:32:03.0000] <MikeSmith>
"Record web pages using a local DNS and local HTTP/HTTPS servers which act as proxies and record performance metrics in addition to the actual resources."

[02:32:13.0000] <MikeSmith>
"Play back recorded pages again with simulated performance characteristics."

[02:33:20.0000] <MikeSmith>
call-flow diagrams https://code.google.com/p/web-page-replay/wiki/ArchitecturalOverview

[03:10:32.0000] <Stevef>
krijn_: http://www.w3.org/community/texttracks/2012/08/23/webvtt-support-in-browsers/  may be helpful

[03:10:54.0000] <krijn_>
Jep, just found that, thanks

[03:16:38.0000] <SimonSapin>
gsnedders: great news for html5lib on Python 3. It looks like two separate code bases, do you expect to release two tarballs?

[03:20:21.0000] <SimonSapin>
gsnedders: or maybe a single tarball with a single setup.py that picks between src2 and src3?

[04:18:18.0000] <Ms2ger>
gsnedders, btw, from __future__ import unicode_literals is nice

[04:46:40.0000] <Ms2ger>
/me never realized how true wordpress's "Some HTML is ok" was

[04:47:35.0000] <annevk>
I wonder though

[04:47:55.0000] <annevk>
Impostor, glitch in the matrix, potential comeback?

[04:49:09.0000] <hsivonen>
I was quite surprised to see someone claiming to be Mark Pilgrim post

[04:51:54.0000] <MikeSmith>
post where?

[04:54:56.0000] <Ms2ger>
MikeSmith, Hixie's interview

[04:55:08.0000] <Ms2ger>
http://html5doctor.com/interview-with-ian-hickson-html-editor/

[04:56:42.0000] <MikeSmith>
ah ok

[04:58:39.0000] <Ms2ger>
What was the chatter about a secret testing meeting about, btw?

[04:58:55.0000] <darobin_>
it's not secret, it just hasn't been announced....

[05:00:02.0000] <Ms2ger>
Go on... :)

[05:00:41.0000] <darobin>
Ms2ger: from what I gather 29/01, West Coast somewhere

[05:00:46.0000] <darobin>
that's *all* I know :)

[05:00:51.0000] <SimonSapin>
Mark Pilgrim‚Äôs post if dated 2007

[05:01:14.0000] <SimonSapin>
is* dated

[05:01:21.0000] <Ms2ger>
January 8, 2013 at 5:05 pm #

[05:01:44.0000] <Ms2ger>
Can someone point me to where \s in JS regices is defined?

[05:01:49.0000] <SimonSapin>
ah, I was looking at http://blog.whatwg.org/the-longdesc-lottery linked from the interview

[05:04:41.0000] <hasather>
Ms2ger: http://www.ecma-international.org/ecma-262/5.1/#sec-15.10.2.12

[05:05:23.0000] <Ms2ger>
hasather, thanks

[05:09:56.0000] <Ms2ger>
What does [0-9]{4,} mean?

[05:12:11.0000] <darobin>
Ms2ger: four or more digits

[05:12:21.0000] <darobin>
hi romainhuet__ :)

[05:13:24.0000] <Ms2ger>
darobin, good :)

[05:14:43.0000] <darobin>
I wonder if TC39 can be convinced to improve JS regexes

[05:16:07.0000] <annevk>
they are improving them

[05:16:17.0000] <darobin>
ah, good to know

[05:16:22.0000] <darobin>
annevk: you have a pointer?

[05:20:24.0000] <annevk>
darobin: hmm, at least for the i18n work there's talk about it

[05:20:48.0000] <darobin>
ah yes, I've heard mentions of making \w i18n friendly and that sort of stuff

[05:20:58.0000] <Ms2ger>
/me cries

[05:21:05.0000] <darobin>
but I'd like things like lookbehinds and such that are a weird omission now

[05:23:48.0000] <annevk>
\w as well?

[05:23:59.0000] <annevk>
oh well

[05:24:03.0000] <annevk>
JavaScript is weird

[05:24:18.0000] <annevk>
can't find where I read this :/

[05:28:20.0000] <annevk>
I wish I was in the same timezone as dglazkov for a while

[05:28:54.0000] <Ms2ger>
Sounds like you should find an employer in the Bay Area ;)

[05:29:27.0000] <annevk>
Who says I haven't? :p

[05:29:56.0000] <Ms2ger>
Problem solved, then :)

[05:31:49.0000] <annevk>
So given my email from last night, I realize that https://dvcs.w3.org/hg/webcomponents/raw-file/tip/spec/shadow/index.html#events-that-are-always-stopped does not make sense.

[05:32:09.0000] <annevk>
That is, what about the capture phase?

[05:33:13.0000] <annevk>
dglazkov calls it "refactoring" but I've the feeling what we lack here is a coherent design :/

[05:33:39.0000] <annevk>
Maybe I should just ignore the shadow DOM for now and focus on the HTML spec?

[05:38:12.0000] <annevk>
Filed https://www.w3.org/Bugs/Public/show_bug.cgi?id=20633 for some of the issues

[05:42:20.0000] <darobin>
it is customary when designing something around the shadow DOM to come up with a broken design of some kind

[05:42:41.0000] <darobin>
dglazkov is nothing if not traditional

[05:43:01.0000] <annevk>
A broken design is okay, but an unexplained design is not.

[05:43:43.0000] <annevk>
At least not for my purposes...

[05:50:05.0000] <hsivonen>
annevk: do you have an opinion on <x-map> vs. <select is=map> vs. <select/map> ?

[05:50:14.0000] <annevk>
hsivonen: they all suck

[05:50:30.0000] <hsivonen>
yeah

[05:52:18.0000] <annevk>
<x-map> would make it hard to make custom components out of <td> and such, <select is=map> is kinda weird, <select/map> I suppose is the least weird and the best parser-wise (although it would require changes to the parser)

[05:52:36.0000] <Ms2ger>
Don't tell that to hsivo... Oh

[05:52:47.0000] <annevk>
heh

[05:53:31.0000] <annevk>
Not necessarily best parser-wise as least changes to the parser, but most flexibility for web developers...

[05:54:08.0000] <annevk>
Well, <select is=map> does that too

[05:54:59.0000] <darobin>
but it's verbose

[05:55:26.0000] <Ms2ger>
Won't anybody thnk f te chrcters?

[05:56:07.0000] <annevk>
Can't avoid verbose while caring about parser compatibility I think... Unless maybe we parse <x-...> similar to <script>?

[05:58:35.0000] <hsivonen>
I think I care more about infoset compat for server-side munging than about parser compat

[05:59:04.0000] <hsivonen>
so stuff that would involve non-NCName local names in server-side systems are not OK from my POV

[06:00:16.0000] <hsivonen>
that is, if you can't use server-side XSLT to augment a doc that says <select/map>, then we shouldn't have <select/map>

[06:01:18.0000] <annevk>
Isn't it unfair to consider those systems immutable? Just imagine what that would do to CSS, CSS is designed around parser changes...

[06:03:46.0000] <hsivonen>
annevk: I was talking about data model

[06:04:09.0000] <hsivonen>
annevk: that's my point: revising the data model in all server-side systems is a big deal

[06:04:27.0000] <hsivonen>
annevk: even if parsers and serializers are off-the-shelf in principle

[06:04:31.0000] <annevk>
Ah yeah, dunno what the localName would be for select/map

[06:04:47.0000] <hsivonen>
annevk: CSS didn't assume a stable data model to begin with

[06:05:10.0000] <annevk>
(Which is painful for CSSOM designers...)

[06:05:27.0000] <hsivonen>
<template> breaks the data model on the client

[06:05:35.0000] <hsivonen>
but on the server you can pretend it doesn't

[06:05:44.0000] <hsivonen>
not so with select/map as a local name

[06:06:12.0000] <hsivonen>
unless you want some Uhhhhhh notation

[06:06:44.0000] <Ms2ger>
<select/map></select/map>?

[06:07:20.0000] <hsivonen>
that reads almost as badly as <title/foo/

[06:07:39.0000] <hsivonen>
the SGML <title/foo/ that is

[06:07:43.0000] <annevk>
I do anticipate allowing <x-...> will make a even bigger mess of the web as that will be sprinkled all over the place...

[06:08:15.0000] <hsivonen>
annevk: well, <x-...> can be deployed even if browser devs say ‚Äúno‚Äù‚Ä¶

[06:08:26.0000] <annevk>
At that point the last bit about shared semantics in HTML is thrown overboard and you really need a browser-like engine to understand what's going on.

[06:08:39.0000] <annevk>
hsivonen: yeah, and they have of course to some extent.

[06:09:33.0000] <annevk>
hsivonen: just when you sanction that and let it pass through validation, libraries will use it, developers will use them throughout their site, and reusable HTML is lost to the world.

[06:10:22.0000] <annevk>
(just thinking out loud)

[06:10:36.0000] <annevk>
(not necessarily loud :-))

[06:11:58.0000] <hsivonen>
I‚Äôm in general pretty unhappy that right after we reached interop with IE10 shipping people come up with multiple parser change ideas from <template> to void <menuitem> to <select/map>

[06:12:34.0000] <annevk>
I'm with Hixie though. The whole point of interoperable parsing is that it makes it easier to make specific changes.

[06:13:05.0000] <annevk>
That's why we document features of the past and reimplement features of the past. To make it easier to tweak them.

[06:17:36.0000] <hsivonen>
In the interview, Hixie answered someone that stuff is going to stick if it is in 2 browsers

[06:17:50.0000] <hsivonen>
I guess that doesn't apply to e.g. <command> parsing/serialization

[06:17:57.0000] <hsivonen>
so ‚Äúall bets are off‚Äù?

[06:18:30.0000] <hsivonen>
(or Hixie should have said ‚Äúin 2 browsers and used in content‚Äù)

[06:19:07.0000] <annevk>
I think that's what he meant

[06:20:03.0000] <Ms2ger>
Well, I guess it applies in the sense that you shouldn't bet on it being changeable

[06:21:26.0000] <annevk>
Everyone had some variant of <basefont> too, yet we managed to remove most of it

[06:21:39.0000] <annevk>
In the case of <Basefont> the parser weirdness is still there though I believe

[06:22:35.0000] <hsivonen>
annevk: yes, <basefont> and <bgsound> are in the parser as void

[06:22:49.0000] <hsivonen>
annevk: and it would not be a win to make the parser unaware of them

[06:23:26.0000] <annevk>
hsivonen: agreed, I meant that we removed HTMLBaseFontElement at some point

[06:23:34.0000] <annevk>
hsivonen: even though it had two implementations

[06:23:45.0000] <hsivonen>
IE and Opera?

[06:24:59.0000] <Ms2ger>
Probably us, actually

[06:25:43.0000] <annevk>
Gecko at least.

[06:25:53.0000] <Ms2ger>
https://bugzilla.mozilla.org/show_bug.cgi?id=518110

[06:26:57.0000] <annevk>
I wonder if later on nsIDOMHTMLHeadElement.profile was removed now binary compat is no longer necessary?

[06:27:13.0000] <Ms2ger>
Yeah, I believe so

[06:27:24.0000] <annevk>
k

[06:28:46.0000] <annevk>
man

[06:28:46.0000] <annevk>
https://bugzilla.mozilla.org/show_bug.cgi?id=3875#c77

[06:29:34.0000] <Ms2ger>
"It's not standards compliant, it's deprecated. We are not required to implement deprecated features"

[06:29:50.0000] <annevk>
"As font, they liked to have something that presented better to students, Comic Sans MS" "I discover the BASEFONT tag at W3schools" "it works in IE, but not in Mozilla" "I was forced to throw Mozilla from the PC and work just with IE"

[06:29:56.0000] <annevk>
10/10 would read again

[06:30:08.0000] <Ms2ger>
And there's more

[06:39:41.0000] <annevk>
I hope that not exposing Node's cross-origin catches on

[06:40:12.0000] <annevk>
(disregarding document.domain for now)

[06:52:55.0000] <hsivonen>
what‚Äôs the correct term for the thing that Rails used to use the snowman for?

[06:53:09.0000] <hsivonen>
it‚Äôs not ‚ÄúUTF-8 canary‚Äù, but it‚Äôs a similar term

[06:53:12.0000] <hsivonen>
what is it?

[06:53:16.0000] <hsivonen>
my memory fails me

[06:53:38.0000] <hsivonen>
it‚Äôs ‚ÄúUTF-8 (noun)‚Äù

[06:53:41.0000] <hsivonen>
but which noun

[06:54:21.0000] <MikeSmith>
not talisman?

[06:55:05.0000] <hsivonen>
MikeSmith: no. it has a function

[06:55:24.0000] <hsivonen>
oh well. I‚Äôll try to write my way around my lack of proper terminology

[06:55:51.0000] <hsivonen>
two functions even

[06:56:38.0000] <annevk>
utf-8 parameter?

[06:56:40.0000] <annevk>
http://stackoverflow.com/questions/4104474/rails-3-utf-8-query-string-showing-up-in-url

[06:56:56.0000] <annevk>
utf8*

[06:58:43.0000] <annevk>
hsivonen: https://github.com/rails/rails/commit/c6160898c83107ba63017ad2a8b3878733267136

[07:02:17.0000] <hsivonen>
annevk: I saw the patch by wycats_. Too bad the commit message didn‚Äôt have the term I was looking for.

[07:02:34.0000] <hsivonen>
annevk: I also tried to find it on wycats_'s blog and on StackOverflow

[07:02:37.0000] <hsivonen>
no success

[07:02:53.0000] <hsivonen>
I‚Äôm very sure I am not imagining things and there is a term for that thing

[07:02:55.0000] <annevk>
from what I can find about the parameter there's not really a name, but maybe someone coined one?

[07:03:27.0000] <annevk>
something it's called utf8 enforcer param

[07:03:30.0000] <annevk>
somewhere*

[07:04:23.0000] <annevk>
not many hits for that though

[07:07:30.0000] <hsivonen>
FWIW, the context was https://bugzilla.mozilla.org/show_bug.cgi?id=234628#c63

[07:17:08.0000] <annevk>
Less encoding menu ++

[07:19:29.0000] <romainhuet>
darobin: Hey! Just noticed your message I was away :)

[07:19:52.0000] <Ms2ger>
/me waves at darobin 

[07:20:33.0000] <darobin>
:)

[07:21:44.0000] <Ms2ger>
darobin, also, ugh.

[07:23:39.0000] <jgraham>
darobin: So, what's the difference between secret and unannounced? :)

[07:25:20.0000] <darobin>
hsivonen: I thought it was UTF8 Canary

[07:25:54.0000] <darobin>
jgraham: secret is properly planned but kept to a gang; unannounced is not even planned out

[07:26:28.0000] <darobin>
jgraham: note though it's not a really technical meeting, it's about getting commitments from companies to provide resources for testing

[07:27:04.0000] <jgraham>
Also, I think one lesson from web components is that you shouldn't overconstrain things like identifiers just because you don't have a use case today

[07:27:30.0000] <jgraham>
Lots of possible solutions fail because they require non NCName tags/attributes

[07:28:08.0000] <annevk_>
NCName is a disaster

[07:29:19.0000] <hsivonen>
darobin: ok. maybe canary was the noun I was looking for after all

[07:32:46.0000] <annevk>
dglazkov: XBL2 misses quite a few lessons from HTML not only because it's a XML vocab :-)

[07:32:55.0000] <darobin>
hsivonen: actually common usage seems to be "unicode canary"

[07:49:03.0000] <annevk>
whoa Chrome already ships with some kind of <template> support?

[07:50:15.0000] <Ms2ger>
Chrome shipping something half-baked? They wouldn't!

[07:50:37.0000] <annevk>
false alarm it seems

[08:40:11.0000] <gsnedders>
Ms2ger: from __future__ import unicode_literals and b"" helps iff we drop support for earlier than 2.6, which I dunno about.

[08:40:40.0000] <gsnedders>
SimonSapin: I dunno, I may well just make it so setup.py uses awkwardduet (a continuation of 3to2) to build the src2.

[08:41:45.0000] <SimonSapin>
gsnedders: something like distribute‚Äôs use_2to3?

[08:41:50.0000] <gsnedders>
SimonSapin: Exactly.

[08:42:03.0000] <gsnedders>
Just, like, use_3to2 :)

[08:42:25.0000] <gsnedders>
But it can't use the actual original 3to2, because we cause that to throw an exception.

[08:43:14.0000] <SimonSapin>
I didn‚Äôt know distribute had use_3to2 built-in like it has use_2to3

[08:43:23.0000] <gsnedders>
SimonSapin: I've got no strong opinion on what to do, for distribution. What I will probably do is remove the py2 code from hg.

[08:43:40.0000] <gsnedders>
To stop people thinking it has any development significance, beyond it working.

[08:44:06.0000] <jgraham>
gsnedders: Things older than 2.6 are already broken I think

[08:44:13.0000] <jgraham>
I wontfixed some bugs already

[08:44:26.0000] <SimonSapin>
however it‚Äôs done, It‚Äôs desirable that "pip install html5lib" just works on all supported python versions

[08:44:32.0000] <gsnedders>
SimonSapin: Agreed.

[08:44:57.0000] <SimonSapin>
it‚Äôs one of the reason I made cairocffi to replace py2cairo/pycairo

[08:44:58.0000] <dglazkov>
annevk: Hixie actually HTML-ized XBL2 in the last large edit

[08:45:32.0000] <dglazkov>
good morning, Whatwg!

[08:45:42.0000] <gsnedders>
If we drop everything but 2.6/2.7 then I may well just try and get a single codebase running.

[08:46:35.0000] <SimonSapin>
single code base with 2.6+ is very doable

[08:47:00.0000] <SimonSapin>
I even prefer a custom compat.py module to using six

[09:01:55.0000] <gsnedders>
SimonSapin: tbh, it's embarrassingly rare that I actually deal with anything like packaging nowadays, thus my lack of a clue :P

[09:03:50.0000] <SimonSapin>
gsnedders: I could give a hand if you want

[09:04:20.0000] <gsnedders>
I guess my biggest problem is just not knowing what a good idea is for Py2/Py3 duality.

[09:06:45.0000] <SimonSapin>
b'' and __future__.unicode_literals go a long way to make this easier

[09:07:30.0000] <SimonSapin>
__future__.division is nice too. (integer division is still available as //)

[09:07:37.0000] <gsnedders>
Last I knew we were still unofficially officially supporting older Python versions, thus not using that approach. Though 2to3 was badly needed just to sort out the mess there was before of str/unicode comparisons and coercions.

[09:09:38.0000] <SimonSapin>
https://github.com/mitsuhiko/python-modernize looks nice (one-shot conversion to a single code base) but I haven‚Äôt tried it.

[09:10:05.0000] <gsnedders>
tbh, it may well be pretty much possible just adding from __future__ import unicode_literals

[09:10:06.0000] <GPHemsley>
/me grumbles something about trailing slashes in URLs

[09:10:43.0000] <SimonSapin>
GPHemsley: what about it?

[09:11:31.0000] <GPHemsley>
SimonSapin: Just arguing about whether about URLs (particularly bare domains) should have a trailing slash. Also arguing about whether it's worth arguing about.

[09:12:29.0000] <SimonSapin>
tastes and colors ‚Ä¶

[09:13:34.0000] <GPHemsley>
/me grumbles some more

[09:14:00.0000] <Ms2ger>
non est disputandum?

[10:07:07.0000] <JonathanNeal>
Hello

[10:36:22.0000] <JonathanNeal>
When using a <link> element with rel=alternate, is the type required? This fellow says the DIHTML5 chapter is off by saying it is required https://github.com/diveintomark/diveintohtml5/issues/21

[10:37:21.0000] <tantek>
huh, he had me until the citation of w3schools

[10:38:36.0000] <JonathanNeal>
I ignored that reference in my reply. I know it's a red flag. As far as his argument goes, it doesn't really change it. He was just trying to give it weight.

[10:39:51.0000] <TabAtkins>
JonathanNeal: It seems like Mark is referring to literally rel="alternate", not rel="stylesheet alternate".

[10:39:51.0000] <tantek>
right, that's the problem. someone thinking that referencing w3schools adds weight is bad sign.

[10:40:10.0000] <tantek>
also the argument is a bit pedantic and also his suggested text ruins the flow / readability of Mark's text for a very minor point.

[10:40:16.0000] <TabAtkins>
I'm not sure if <link rel="alternate" type="text/css"> is supported anywhere.

[10:40:22.0000] <JonathanNeal>
Unless we subtly believe that anything on whatwg that also happens to be in w3schools is probably wrong in both, and that w3schools is, in essence, nothing more than a parody-style bug reporter.

[10:40:27.0000] <tantek>
TabAtkins, yeah.

[10:40:58.0000] <TabAtkins>
If it is supported anywhere, I'd believe that type="text/css" might be required to have it process as CSS.

[10:41:37.0000] <tantek>
so the confusion is that "optional" does not mean "has no effect"

[10:41:43.0000] <tantek>
the issue reporter is confusing the two

[10:42:03.0000] <tantek>
yes, "type" is optional, but like many optional features, if you want the desired EFFECT, then using it is REQUIRED

[10:42:41.0000] <JonathanNeal>
I see.

[10:42:44.0000] <tantek>
I think Mark's text is short, simple, and fine as is. Adding longer text as suggested just adds to the "glaze" factor and will likely result in LESS comprehension, not more.

[10:42:51.0000] <tantek>
I would would "won't fix" this.

[10:43:03.0000] <tantek>
*wordstutter*

[10:48:16.0000] <JonathanNeal>
Thanks

[10:49:17.0000] <JonathanNeal>
Thanks a lot, tantek. I would like to have most of these issues addressed or resolved before I begin making the responsive changes. My goal is to have the book more like this https://a248.e.akamai.net/camo.github.com/3d702d436ffc01ec0c533ab0e8b0afd06524257b/687474703a2f2f692e696d6775722e636f6d2f73504d437a2e706e67

[10:49:45.0000] <JonathanNeal>
I mean this https://a248.e.akamai.net/camo.github.com/6264b96dce00bb1d2a7b557567a5237213a1544e/687474703a2f2f692e696d6775722e636f6d2f58336838592e706e67

[10:50:05.0000] <tantek>
ooh nice!

[12:08:54.0000] <Hixie>
hsivonen: nobody's talking about breaking interop, just evolving the platform

[12:09:51.0000] <Hixie>
hsivonen: <command> parsing isn't a feature, <command> is a feature. <command> has never been implemented.

[12:26:47.0000] <Hixie>
GPHemsley: did you do the eR-eF guy?

[12:37:21.0000] <GPHemsley>
Hixie: Done now.

[12:40:12.0000] <Hixie>
oh, thanks. didn't mean to ask you to do it, was just wanting to make sure i didn't give him a second account by mistake :-)

[13:04:53.0000] <jgraham>
Hixie: Well of course you do break interop if browsers parse <command>foo</command> differently. Particularly if you start getting usage of <command>

[13:05:08.0000] <Hixie>
why would we get usage of <command>?

[13:07:59.0000] <jgraham>
Well I guess for a feature that's being removed and never got used the case is weaker

[13:09:24.0000] <Hixie>
i would be jumping up and down faster than and higher than hsivonen if someone was suggesting turning <img> into a non-void element or some such

[13:10:57.0000] <tantek>
it is irrelevant if browsers do parse <command>foo</command> differently, if no one publishes any real world pages with <command> that depend on those differences, if even publishes any real world pages with <command> at all that is.

[13:11:10.0000] <tantek>
if even *anyone* publishes...

[13:13:58.0000] <jgraham>
Hixie: But it is also problematic to introduce void elements

[13:14:43.0000] <jgraham>
In general being conservative around the parser is reasonable

[13:14:51.0000] <tantek>
that I'd agree with

[13:14:55.0000] <tantek>
on both points

[13:15:08.0000] <jgraham>
And the burden of proof that changes are compatible is firmly with the people proposing the changes

[13:15:21.0000] <tantek>
though I'd say "risky" rather than problematic WRT introducing new void elements

[13:15:38.0000] <tantek>
it's only problematic if there are existing real world pages that happened to be depending on non-void usage of such elements

[13:16:09.0000] <tantek>
jgraham - I'm not sure the burden is so cut and dry

[13:16:20.0000] <tantek>
I think we can make bayesian/probabilistic arguments both ways

[13:16:51.0000] <jgraham>
tantek: I fell like if you want to change the parser you should get some data and show that your change won't break any pages

[13:17:10.0000] <jgraham>
There are a few sources of such data and people have successfully used them in the past

[13:18:30.0000] <tantek>
having to prove that every new element won't break the web is too unnecessarily high a bar for our desire to continue evolving the web

[13:19:16.0000] <tantek>
that being said, as you pointed out, we should be conservative around changes to the parser

[13:19:28.0000] <jgraham>
Not every new element

[13:19:34.0000] <tantek>
new void elements are an interesting subset of both of those

[13:19:36.0000] <jgraham>
Just ones that need parser changes

[13:19:47.0000] <tantek>
not all parser changes are the same level of "riskiness"

[13:21:09.0000] <jgraham>
Well obviously. Like Hixie said, changing <img> parsing is an obvious non starter. On the other hand (even) hsivonen believes that it's OK to change the parser for <main> given the risk/benefit (I wonder if someone looked for existing use of <main>...)

[13:21:47.0000] <tantek>
(people did look for existing uses of <main> - I believe stevefaulkner in particular, with his open crawl corpus)

[13:22:23.0000] <tantek>
Webdevdata.org

[13:22:43.0000] <tantek>
now if there was a nice web UI to query that data ...

[13:24:33.0000] <WeirdAl>
!seen Ms2ger

[13:26:29.0000] <jgraham>
WeirdAl: Good luck with that

[13:26:49.0000] <WeirdAl>
I'm looking for some *simple* testcases for DOMParser/XMLSerializer

[13:27:09.0000] <WeirdAl>
http://domparsing.spec.whatwg.org/

[13:27:57.0000] <WeirdAl>
in particular character encodings

[13:29:05.0000] <jgraham>
You want simple tests for character encodings? You realise that's an oxymoron, right?

[13:29:06.0000] <annevk>
dglazkov: I wouldn't classify that edit as a major change

[13:29:18.0000] <jgraham>
But I don't recall any DOMParser tests

[13:29:21.0000] <WeirdAl>
jgraham: partially, yes :)

[13:29:24.0000] <jgraham>
Maybe annevk does

[13:29:26.0000] <annevk>
dglazkov: it was just rewording a few things to get implementor interest, not a fresh look

[13:29:33.0000] <annevk>
WeirdAl: jgraham, sorry

[13:29:37.0000] <WeirdAl>
(back in about 15 minutes)

[13:29:38.0000] <dglazkov>
annevk: okay

[13:29:47.0000] <jgraham>
Dammit I was trying to pass the buck :)

[13:30:19.0000] <annevk>
dglazkov: I'd appreciate an answer to the offsetX/offsetY question

[13:30:41.0000] <annevk>
dglazkov: trying to figure out how to best refactor dispatch

[13:30:45.0000] <annevk>
dglazkov: but maybe for now I should leave shadow DOM out of the picture?

[13:32:58.0000] <dglazkov>
annevk: been terribly busy in the last few days, will start answering emails at earnest tomorrow morning (PST)

[13:33:16.0000] <annevk>
dglazkov: okay, guess I can work on Encoding work instead

[13:33:47.0000] <dglazkov>
annevk: thank you for your patience. you are very important to us. please continue to hold and the next representative will be with you shortly

[13:35:05.0000] <annevk>
uhuh :)

[13:48:53.0000] <WeirdAl>
jgraham: well, the alternative is that I write tests... and people tell me that they're wrong :p

[14:03:46.0000] <jgraham>
WeirdAl: Maybe if you write correct tests they won't do that? ;)

[14:04:02.0000] <WeirdAl>
heh, I write tests in Jasmine

[14:04:35.0000] <WeirdAl>
so even if it's correct, it's "wrong"

[14:10:49.0000] <jgraham>
Well yes, if you write tests in the wrong format it's not that helpful

[14:12:54.0000] <jgraham>
Where "wrong" in this case just means "not widely used in the standards community"

[14:13:08.0000] <csuwldcat>
Hixie: Brian Kardell has the best solution I've seen so far

[14:13:14.0000] <csuwldcat>
did you see the bug?

[14:13:56.0000] <Hixie>
jgraham: given the massive upside of <menuitem> and the comparatively trivial upside of <main>, I don't really understand hsivonen's position on this

[14:14:00.0000] <Hixie>
csuwldcat: looking now

[14:15:25.0000] <csuwldcat>
dglazkov: read the last two comments on the is/tag bug

[14:15:34.0000] <csuwldcat>
I like the simplicity of it

[14:15:38.0000] <jgraham>
"could skip tokenization" - I don't see how that will work

[14:16:14.0000] <csuwldcat>
jgraham: if you marked it as your 'fallback' it could do that, why not?

[14:16:28.0000] <csuwldcat>
I mean DOM inflation, whatever

[14:16:49.0000] <jgraham>
csuwldcat: How do you skip tokenising something?

[14:16:49.0000] <csuwldcat>
jgraham: basically, it could ignore them

[14:16:53.0000] <gsnedders>
csuwldcat: How do you know where to resume tokenizing?

[14:17:10.0000] <jgraham>
Yes, gsnedders was clearer

[14:17:11.0000] <csuwldcat>
perhaps im not using the right word, can we just fix on the meaning?

[14:17:20.0000] <jgraham>
You could at best stop treebuilding

[14:17:23.0000] <csuwldcat>
you don't need the elements if their parent is marked fallback

[14:17:34.0000] <csuwldcat>
sure, the rotator splint, that thing

[14:17:38.0000] <csuwldcat>
:)

[14:17:43.0000] <jgraham>
csuwldcat: It's hard to know what the meaning is if you say something that means something different

[14:17:55.0000] <csuwldcat>
sorry

[14:17:59.0000] <csuwldcat>
didn't mean to

[14:18:13.0000] <jgraham>
Well it's OK , I understand now

[14:18:27.0000] <jgraham>
I still don't understand why that's considered a good thing

[14:18:45.0000] <jgraham>
it just seems to introduce gratuitous differences in the DOM

[14:19:26.0000] <csuwldcat>
not really, it's not all that different than if a Template is applied and the child content doesn't match a <content select=""> selector

[14:19:31.0000] <csuwldcat>
it is not rendered

[14:19:45.0000] <csuwldcat>
same sort of thing

[14:20:05.0000] <csuwldcat>
except you wouldn't ever need to even create the DOM elements in the first place

[14:20:16.0000] <jgraham>
Well <template> has already caused all sorts of controversy because of the weird-ass way it interacts with the DOM

[14:20:21.0000] <csuwldcat>
haha

[14:20:34.0000] <jgraham>
But in that case there was a compelling reason

[14:20:35.0000] <csuwldcat>
oh this is a barrel of monkeys isn't it

[14:21:02.0000] <csuwldcat>
fallback allows the developer to not worry about it messing with normal component operation if it is not needed

[14:21:09.0000] <csuwldcat>
think of alt=""

[14:21:32.0000] <jgraham>
Well

[14:21:35.0000] <csuwldcat>
I don't need to query and loop all img elements turning off the alt display when it isn't needed

[14:21:39.0000] <csuwldcat>
the browser does that

[14:22:00.0000] <csuwldcat>
the fallback attr would be a flag to tell it to do the same, where similarly unneeded

[14:22:24.0000] <jgraham>
It seems pretty dubious to me to start adding attributes that affect treebuilding

[14:23:06.0000] <jgraham>
And it means that you can't show the fallback if there is some fatal problem with the component

[14:23:12.0000] <csuwldcat>
lol, so naturally you would be opposed to attributes being used to massively affect treebuilding in the realm of compone... oh, wait ;)

[14:23:30.0000] <jgraham>
I don't know if you can *have* fatal problems with components

[14:23:33.0000] <bkardell>
Ok... can we consider first without fallback attr

[14:24:04.0000] <csuwldcat>
jgraham: fatal problems?

[14:24:07.0000] <jgraham>
Right, so ignoring the @fallback thing, this is roughly the same solution we have for <canvas>

[14:24:14.0000] <jgraham>
Which sucks

[14:24:26.0000] <csuwldcat>
it works though

[14:24:35.0000] <jgraham>
But it is at least a recognised pattern on the platform

[14:24:53.0000] <bkardell>
It is the same as a lot of things

[14:24:57.0000] <csuwldcat>
and I'd hate to impose known suckage on the 90% case, to satisfy the hand-wavey fractional cases

[14:25:15.0000] <jgraham>
I am still dubious of your 90% claims

[14:25:21.0000] <jgraham>
But anyway

[14:25:22.0000] <bkardell>
Yes, that is my point...hixie/etc seem ok with them...

[14:25:27.0000] <csuwldcat>
jgraham: me too, but a majority for sure

[14:25:35.0000] <dglazkov>
sorry guys, doing the webkit gardening thing, need to watch the tree

[14:25:39.0000] <csuwldcat>
I have experience in our own component building

[14:25:50.0000] <csuwldcat>
we have actual man-on-the-ground info and usage on that

[14:25:56.0000] <csuwldcat>
these are not made-up claims

[14:26:08.0000] <jgraham>
By "fatal problems", I meant a situation where the component fails to init

[14:26:57.0000] <jgraham>
For example if I write <x-foo><select fallback>[...] and there isn't any component corresponding to x-foo

[14:27:08.0000] <jgraham>
I want the select to display

[14:27:09.0000] <csuwldcat>
well, I wouldn't want component authors to have lame code in every component that sniffed if fallback content was needed and had to manually special case blowing it out

[14:27:22.0000] <jgraham>
But with @fallback it wouldn't even be in the DOM

[14:27:25.0000] <csuwldcat>
that was the reason for the suggestion

[14:27:45.0000] <csuwldcat>
sure, and that's why I was thinking it would be helpful for devs

[14:28:08.0000] <bkardell>
Ok, so I mentioned this earlier on that thread

[14:28:13.0000] <csuwldcat>
because they wouldn't have to worry about erasing the unused stuff

[14:28:29.0000] <jgraham>
Huh? Why would it helpful to not display the fallback in the case of an error?

[14:28:38.0000] <csuwldcat>
in the words of an obviously cool dude: (2:28:15 PM) jgraham: But with @fallback it wouldn't even be in the DOM

[14:28:46.0000] <csuwldcat>
precisely my motivation! :)

[14:28:58.0000] <jgraham>
Right, I see what you are trying to achieve

[14:29:01.0000] <csuwldcat>
jgraham: error is different

[14:29:07.0000] <jgraham>
But I think that's the wrong way to do it

[14:29:08.0000] <csuwldcat>
keep it somewhere, sure

[14:29:23.0000] <csuwldcat>
this is for you browser-backend folks to figure out

[14:29:24.0000] <jgraham>
Well there isn't really any "somewhere"

[14:29:36.0000] <csuwldcat>
im just saying, it would be nice for a dev not to worry about it

[14:29:43.0000] <csuwldcat>
as with alt=""

[14:29:58.0000] <csuwldcat>
jgraham: Templates have a non-rendered "somewhere"

[14:30:06.0000] <csuwldcat>
so, there, somewhere like it

[14:30:15.0000] <csuwldcat>
you know what I mean

[14:30:21.0000] <csuwldcat>
so does <object>

[14:30:27.0000] <jgraham>
The non-rendered somewhere of templates makes kittens weep

[14:30:31.0000] <bkardell>
I think we all agree on the concepts though?  Impl details aside?

[14:30:37.0000] <bkardell>
Lol

[14:31:02.0000] <jgraham>
Well

[14:31:22.0000] <csuwldcat>
I'd rather have kittens weaping than the majority of developers crying because the interface is obtuse and lame

[14:31:32.0000] <csuwldcat>
weeping*

[14:31:50.0000] <csuwldcat>
I support kitten sadness, if you will

[14:32:19.0000] <jgraham>
Conceptually <x-foo> with fallback is ugly and doesn't really encourage good fallback. But I think I can live with it. Of course I reserve the right to change my mind when Hixie and hsivonen point out all the flaws in this approach :)

[14:32:58.0000] <csuwldcat>
jgraham: the known litany of flaws in the attribute routes are far worse than anything they've presented

[14:33:23.0000] <csuwldcat>
it's like choosing a footgun because a handknife scares you

[14:33:25.0000] <Hixie>
bkardell: the key is that with <foo/bar> you can't not give <foo>. If you're saying that <x-bar><foo> would fail to bind if the <foo> was present, and would turn into a single element in the DOM, then ok

[14:33:36.0000] <Hixie>
bkardell: but that seems like it'd require even more crazy parsing magic than <foo/bar>.

[14:33:47.0000] <Hixie>
er, if the <foo> was _not_ present

[14:33:49.0000] <Hixie>
sorry

[14:34:01.0000] <csuwldcat>
Hixie: but you're hoisting this imposition on all cases when it is not going to be the majority case

[14:34:12.0000] <csuwldcat>
that's the problem

[14:35:00.0000] <csuwldcat>
Hixie: also, developers can just use the semantic elements as their component guts

[14:35:36.0000] <csuwldcat>
Hixie: this API will largely be an advanced dev API, at least short/medium term

[14:35:57.0000] <csuwldcat>
we will have the opportunity to best-practice-ize the hell out of it

[14:36:28.0000] <csuwldcat>
and to make you a happy Hixie, I will bust my ass over here at mozilla to make sure all of our docs, references, and components do this well

[14:36:52.0000] <Hixie>
i feel like you are not taking into account what i have been saying

[14:36:53.0000] <csuwldcat>
I will shout it from the rooftops, scout's honor

[14:37:08.0000] <Hixie>
it doesn't matter what you or i say, documentation has minimal impact on what authors do

[14:37:21.0000] <csuwldcat>
Hixie: correct

[14:37:29.0000] <csuwldcat>
thus: <x/x-map>

[14:37:33.0000] <csuwldcat>
boom

[14:37:40.0000] <Hixie>
i've already responded to that

[14:38:11.0000] <Hixie>
if you're just going to ignore what i'm saying, there's not much point in discussion

[14:38:29.0000] <csuwldcat>
where did you respond to it

[14:38:34.0000] <csuwldcat>
I'm scanning the bug now

[14:38:43.0000] <csuwldcat>
and I feel similarly

[14:38:49.0000] <Hixie>
in IRC, yesterday

[14:39:13.0000] <csuwldcat>
I feel you are paying little to no attention to the #Fact, that the interface and implementation using attributes is fraught with peril

[14:39:30.0000] <csuwldcat>
and degrades all sorts of other things

[14:39:33.0000] <Hixie>
i'm not suggesting using attributes...

[14:39:42.0000] <csuwldcat>
sure you are

[14:39:48.0000] <Hixie>
authors aren't going to use <x/foo> any more than they'll use <x class="foo"> today -- it looks ugly, validators will complain, etc

[14:39:55.0000] <Hixie>
i'm really not

[14:39:56.0000] <csuwldcat>
<select/x-map> == <select x-map>

[14:39:58.0000] <Hixie>
no

[14:40:10.0000] <Hixie>
<select/map> == <select>, bound to "map" component

[14:40:13.0000] <Hixie>
no attributes

[14:40:51.0000] <csuwldcat>
How do I pollyfill that in a sane way Hixie?

[14:41:17.0000] <sjmiles>
my concern is that the actual % of components that have sensical fallback semantics is too small to justify any of this hoop jumping

[14:41:17.0000] <csuwldcat>
if you answer: "you dont" that is an immediate loss of 3423523452352345 points

[14:41:39.0000] <csuwldcat>
sjmiles: and that's the word!

[14:41:45.0000] <csuwldcat>
preach it!

[14:41:56.0000] <Hixie>
we shouldn't optimise for shims, shims are for a few years, the web is for decades

[14:42:02.0000] <csuwldcat>
hahaha

[14:42:15.0000] <csuwldcat>
yeah, and so is the lame interface we hoist upon them

[14:42:20.0000] <Hixie>
yeah ok laugh at me, that will convince me

[14:42:25.0000] <csuwldcat>
my thouhts exactely

[14:42:37.0000] <csuwldcat>
im not laughing at you buddy, you are a smart guy

[14:42:39.0000] <csuwldcat>
and a web icon

[14:42:44.0000] <csuwldcat>
I was laughing at the irony

[14:42:47.0000] <Hixie>
if you're not willing to have a serious conversation then i've got bigger fish to fry

[14:42:53.0000] <csuwldcat>
the very reason you dislike it

[14:43:04.0000] <csuwldcat>
is the same reason I dislike attr/slash etc

[14:43:25.0000] <csuwldcat>
sorry, I wasn't laughing at you

[14:43:27.0000] <csuwldcat>
as I said

[14:43:44.0000] <Hixie>
i've made multiple attempts at proposing alternative syntaxes that try to take into account the concerns that you have and the concerns i have

[14:43:51.0000] <csuwldcat>
we just use the same reason, from two different angles

[14:44:04.0000] <Hixie>
if you're not ok with any of them, it's your turn to try to make proposals that address my concerns and yours

[14:44:28.0000] <csuwldcat>
we did, but at a point we run up against the realm of total possibility

[14:44:45.0000] <csuwldcat>
are there other wholey different options possible?

[14:45:06.0000] <sjmiles>
some of us place a really high premium on simple syntax

[14:45:29.0000] <sjmiles>
and less so on fallback and machine-semantics

[14:45:35.0000] <csuwldcat>
sjmiles: where "some of use" == the majority of users/use-cases

[14:45:54.0000] <Hixie>
sjmiles: right, hence my proposing something that is literally the shortest it could be while still addressing the fallback issue

[14:46:12.0000] <Hixie>
csuwldcat: without data documenting what the use cases are, repeatedly saying "what i want is the majority case" is unconvincing

[14:46:13.0000] <csuwldcat>
but you introduce all sorts of other things

[14:46:20.0000] <csuwldcat>
like the unswitchable case

[14:46:25.0000] <csuwldcat>
that still is an issue

[14:46:32.0000] <Hixie>
unswitchable case?

[14:46:35.0000] <sjmiles>
yes, but as I keep saying, the cost (even if it's the most minimal) is too high for me vs the ROI

[14:46:49.0000] <csuwldcat>
<input/x-foo> may not be able to be applied to <button/x-foo>

[14:46:57.0000] <sjmiles>
^ this

[14:47:11.0000] <csuwldcat>
I may touch a proto prop in the code def of x-foo that does not exist on <button>

[14:47:29.0000] <csuwldcat>
even if the phenotypical render of the two would have devs believe it would be logical

[14:47:47.0000] <sjmiles>
if <input/x-foo> was optional, then I would have no complaints

[14:47:49.0000] <csuwldcat>
that is a full-stop, unexpected bustage case

[14:48:01.0000] <csuwldcat>
yep

[14:48:02.0000] <csuwldcat>
me too

[14:48:26.0000] <Hixie>
if you write <input/foo>, and "foo" is defined to only apply to / only extend <button>, then obviously it shouldn't bind

[14:48:28.0000] <csuwldcat>
optional means I agree with anything, as long as there is the option to make a truly custom tag

[14:48:30.0000] <Hixie>
i answered that yesterday too

[14:48:49.0000] <Hixie>
sjmiles: it being optional is the one thing i think is a dealbreaker

[14:48:58.0000] <csuwldcat>
but Hixie, brotha man, where would you specify that?

[14:49:04.0000] <sjmiles>
then you make 90% of my components div/x-foo

[14:49:09.0000] <csuwldcat>
in the...component definition?

[14:49:13.0000] <csuwldcat>
which isn't in the page...

[14:49:20.0000] <csuwldcat>
which is behind a link asset....

[14:49:28.0000] <csuwldcat>
which brings us to square 1

[14:49:46.0000] <Hixie>
sjmiles: <div/foo>, not <div/x-foo>. And maybe, I don't know what your componetns are. Is there documentation somewhere that talks about what the likely use cases are? Because 90% of the ones I've seen are extending existing elements, not <div>.

[14:49:58.0000] <Hixie>
csuwldcat: eh?

[14:50:04.0000] <Hixie>
csuwldcat: you're not making sense man

[14:50:10.0000] <csuwldcat>
Hixie: "foo" is defined to only apply to / only extend <button

[14:50:11.0000] <csuwldcat>
where

[14:50:13.0000] <csuwldcat>
defined where

[14:50:20.0000] <Hixie>
csuwldcat: in the definition of "foo"

[14:50:21.0000] <sjmiles>
we've made extensive component systems using non-web based components

[14:50:27.0000] <csuwldcat>
which isn't in the page!

[14:50:30.0000] <Hixie>
csuwldcat: so?

[14:50:33.0000] <sjmiles>
so, this is just me, I can't say 'for the web'

[14:50:47.0000] <csuwldcat>
so the dev has to find the link tag

[14:50:55.0000] <csuwldcat>
hunt through 50 defintions

[14:50:58.0000] <Hixie>
csuwldcat: why does the dev have to do anything

[14:51:03.0000] <csuwldcat>
and scout for a whitelist?

[14:51:12.0000] <csuwldcat>
these are untenable ergonomics

[14:51:22.0000] <Hixie>
why does the dev have to do this?

[14:51:31.0000] <csuwldcat>
Hixie: no, that is not really the case

[14:51:44.0000] <Hixie>
what are you saying "no" to

[14:51:48.0000] <csuwldcat>
this is why I wanted to talk in person with the rest of the folks

[14:51:50.0000] <Hixie>
i've only said "why" for the past like 5 lines

[14:51:51.0000] <sjmiles>
examples from similar technology: http://enyojs.com/gallery/

[14:52:26.0000] <Hixie>
csuwldcat: i don't see why we'd be any more able to have a conversation in person than on IRC

[14:52:27.0000] <csuwldcat>
why, because if they make the assumptions the platform infers currently, they are often going to be sadly mistaken

[14:52:31.0000] <sjmiles>
fwiw, often these things are 'decorators' that wrap around semantic elements, rather than replace them

[14:52:39.0000] <Hixie>
csuwldcat: what assumptions

[14:52:45.0000] <Hixie>
csuwldcat: i'm at a complete loss as to what you're talking about here

[14:52:45.0000] <csuwldcat>
sjmiles: wow, I didn't even think of that

[14:52:48.0000] <csuwldcat>
great point

[14:53:02.0000] <csuwldcat>
Hixie: this is why IRC can be frustrating

[14:53:14.0000] <Hixie>
csuwldcat: it works better if you use complete sentences :-)

[14:53:15.0000] <csuwldcat>
I think sjmiles knows exactely what im talking about

[14:53:21.0000] <Hixie>
csuwldcat: and don't use rhetorical questions

[14:53:45.0000] <csuwldcat>
if we force a whitelist

[14:53:58.0000] <csuwldcat>
<element whitelist="input">

[14:54:02.0000] <Hixie>
components have a whitelist already, no? they say what they're extending.

[14:54:04.0000] <csuwldcat>
then that forces a dev hunt

[14:54:08.0000] <csuwldcat>
no

[14:54:10.0000] <csuwldcat>
they don't

[14:54:21.0000] <Hixie>
seriously, dude, rebind your "enter" key to your "space" key and put everything from one sentence on one line

[14:54:54.0000] <csuwldcat>
can we stop being pedantic about my writing style and focus?

[14:55:05.0000] <Hixie>
your writing style is making this conversation impossible to follow for me

[14:55:06.0000] <csuwldcat>
there is currently no whitelist

[14:55:18.0000] <csuwldcat>
extend declares proto inheritance

[14:55:20.0000] <Hixie>
components as defined say what they extend, right?

[14:55:26.0000] <csuwldcat>
it is a 1:1

[14:55:30.0000] <Hixie>
ok, great

[14:55:34.0000] <Hixie>
so that's what you apply the binding to

[14:56:16.0000] <Hixie>
if you have a component that allows you to enter a bug for a section header, and it extends an <h3>, then you say <h3/bugformheading3>

[14:56:39.0000] <Hixie>
(though it would be simpler if you could have one component that you could apply to all of h1-h6)

[14:56:53.0000] <csuwldcat>
you can't mix proto extension and tag application together

[14:57:04.0000] <dfreedm>
what if you wanted a component to extend another component?

[14:57:06.0000] <csuwldcat>
they are not the same and have internal code reliance impact

[14:57:08.0000] <Hixie>
csuwldcat: can you elaborate on why not?

[14:57:16.0000] <csuwldcat>
the proto is different

[14:57:29.0000] <csuwldcat>
your example of all Hs is myopic

[14:57:30.0000] <dfreedm>
say, foo extends h1, and bar extends foo

[14:57:36.0000] <Hixie>
the proto of what is different from the proto of what?

[14:57:43.0000] <sjmiles>
you guys are talking about how to make it work, but my concern is still that the syntax is a non starter

[14:57:53.0000] <dfreedm>
would devs have to know to write a <h1/foo/bar> ?

[14:58:14.0000] <Hixie>
dfreedm: no, just <h1/bar>, at least in my proposal

[14:58:24.0000] <csuwldcat>
sjmiles: well sure, but what Hixie is saying, is that no matter how bad the interface would be, the optimal fringe case solution should trump

[14:58:28.0000] <Hixie>
dfreedm: the key is to have both the component name and the "real semantic" in the markup

[14:58:50.0000] <Hixie>
csuwldcat: see, that kind of strawman reinterpretation and trivialisation of my comments makes me not at all interested in talking with you

[14:59:02.0000] <csuwldcat>
is it not true?

[14:59:03.0000] <Hixie>
csuwldcat: because it makes me feel like you're not taking my concerns seriously

[14:59:06.0000] <csuwldcat>
I am

[14:59:27.0000] <csuwldcat>
im just weighing them against the majority of use-cases

[14:59:37.0000] <Hixie>
i do not think the interface is bad, and i do not think my concern (that we keep conveying semantics) is a "fringe case"

[14:59:50.0000] <csuwldcat>
I don't think it rises to a level that warrents complicating the ergonomics

[14:59:51.0000] <Hixie>
you keep referring to this "majority of use cases". are the use cases documented somewhere?

[14:59:52.0000] <sjmiles>
this is one crucial disagreement

[14:59:58.0000] <csuwldcat>
warrants*

[15:00:11.0000] <sjmiles>
I posted a link to a page of 'components', did you see those?

[15:00:12.0000] <Hixie>
(thank you for writing full sentences btw, it's making it much easier to follow)

[15:00:15.0000] <csuwldcat>
https://github.com/mozilla/x-tag-elements

[15:00:31.0000] <csuwldcat>
half of those elements don't extend semantic ones

[15:00:52.0000] <csuwldcat>
Hixie: do be mindful of what sjmiles mentioned about decorators

[15:01:06.0000] <csuwldcat>
if your "compontent" is that close to a native element

[15:01:13.0000] <csuwldcat>
you are likely writing a decorator

[15:01:13.0000] <Hixie>
sjmiles: yeah, i looked at those. Those of that list that seemed applicable to the Web seemed mostly to be extensions of <input> or <select>.

[15:01:27.0000] <csuwldcat>
which acts precisely the way you want

[15:01:31.0000] <sjmiles>
I don't understand 'applicable to the web'

[15:01:49.0000] <sjmiles>
all those components are in use in applications that use web technology, is this the problem?

[15:02:03.0000] <sjmiles>
the classic 'page vs app' debate?

[15:02:45.0000] <csuwldcat>
Hixie: that's the thing with our two stances, I would contend that sjmiles, I, and the majority who have voiced opinion on the issue are focused on the "applicable to the web" cases

[15:03:08.0000] <csuwldcat>
aka, the way and cases this API will be used en mass

[15:03:26.0000] <csuwldcat>
Is that not of primary importance?

[15:03:36.0000] <Hixie>
sjmiles: oh i misunderstood the keyboard one, thought it was for extending the OS on-screen keyboard. YEah, they mostly seem to apply. They mostly are extensions of existing elements, like <iframe>, <input>, <Select>, <applet>, etc.

[15:04:00.0000] <csuwldcat>
Hixie: I really think the decorators thing is the seperation point

[15:04:12.0000] <csuwldcat>
I love the idea that they can bridge this gap

[15:04:20.0000] <Hixie>
most of them on https://github.com/mozilla/x-tag-elements also extend existing elemeents

[15:04:25.0000] <csuwldcat>
sjmiles: thank you for bringing that up

[15:04:38.0000] <Hixie>
this all seems to suggest that "the majority of use-cases" do not extend <div>

[15:04:46.0000] <Hixie>
they extend existing elements

[15:05:04.0000] <Hixie>
which is _exactly_ what i thought would be the case and why i am worried about people not giving the full semantics in the page.

[15:05:53.0000] <csuwldcat>
dragbox, alert, dialog, flipbox, indexed scroller, map, mediaquery, modal, panel, shiftbox, slidebox, template - all do not

[15:06:08.0000] <csuwldcat>
Hixie: the ones that do, would be decorators

[15:06:22.0000] <csuwldcat>
We just don't have the polyfill for that yet

[15:06:26.0000] <csuwldcat>
so they are in there

[15:06:40.0000] <Hixie>
dragbox is a <select> or <menu> extension (not entirely clear to me).

[15:06:42.0000] <csuwldcat>
an example would be autocomplete, that would be a decorator

[15:07:02.0000] <Hixie>
alert-popup is a <dialog> extension

[15:07:18.0000] <Hixie>
dialog-toast is a <dialog> extension

[15:07:29.0000] <csuwldcat>
no, dragbox is a container that when applied creates an automatically draggable relationship between its children and drop areas, and other dragboxes

[15:07:40.0000] <csuwldcat>
sure, they would be decorators

[15:08:06.0000] <Hixie>
<flipbox> is either a CSS binding (what you call a decorator?) that applies to everything, or probably more likely a <section> extension

[15:08:29.0000] <Hixie>
index-scroller seems to be nothing currently, so can't tell

[15:08:33.0000] <csuwldcat>
but some of those have proto methods

[15:08:45.0000] <csuwldcat>
which point to custom elements

[15:09:00.0000] <csuwldcat>
so that's is not true for most of the ones I listed

[15:09:21.0000] <csuwldcat>
flipbox could be, slidebox would not be

[15:09:39.0000] <csuwldcat>
because that needs a template, proto props, and extended methods

[15:09:48.0000] <Hixie>
not clear what map is; if it's just to show a map, it's probably an <img> extension; if it's a country picker, a <select> extension. If it's an interactive map app like Google Maps, then you might have your first <div> extender (but maybe <article> would be better).

[15:10:08.0000] <csuwldcat>
it shows a Leaflet interactive map

[15:10:22.0000] <csuwldcat>
not an img

[15:10:34.0000] <Hixie>
anyway, this clearly doesn't demonstrate that <div> is what the majority will be derived from

[15:10:42.0000] <csuwldcat>
and not a country picker, just a map that can be used for any purpose

[15:10:44.0000] <Hixie>
so, let's put that to rest, please

[15:11:05.0000] <csuwldcat>
that is not accurate, and I don't agree

[15:11:13.0000] <Hixie>
!

[15:11:19.0000] <Hixie>
we just went through a bunch of them!

[15:11:44.0000] <csuwldcat>
most of those need proto extension

[15:11:51.0000] <Hixie>
what does that mean?

[15:12:11.0000] <Hixie>
that they define an externally visible API?

[15:12:15.0000] <csuwldcat>
they need to extend the type and provide new functions/accessors

[15:12:27.0000] <csuwldcat>
correct, one that goes beyond attributes

[15:12:34.0000] <Hixie>
what does that have to do with whether they are equivalent to an <input> or a <div>?

[15:12:59.0000] <csuwldcat>
it is the delineation between a decorator and a custom element

[15:14:41.0000] <csuwldcat>
I just ran out of time for today, but the API interface choice here is going to be a plague to developers for a long time, ergonomics trump, and <x-map><select fallback><option>US</option></select></x-map> is a good solution

[15:14:49.0000] <csuwldcat>
you'are map could be svg or canvas

[15:15:15.0000] <csuwldcat>
just because you believe a developer should take on a tag, doesn't mean their use-case is so narrowly defined

[15:15:21.0000] <csuwldcat>
your*

[15:16:08.0000] <Hixie>
i don't see why decorators are relevant here

[15:16:11.0000] <csuwldcat>
Hixie: a intense discussion, but necessary, thank you for having it

[15:16:25.0000] <csuwldcat>
an intense*

[15:21:04.0000] <sjmiles>
is there a difference between "semantically equivalent to image" and "has image API such that an image elements is a suitable fallback"?

[15:22:57.0000] <sjmiles>
I see hixie's point that many of those components could be conceptually similar to input/img/etc., but does that from an API standpoint, that e.g., map IS an img?

[15:25:33.0000] <sjmiles>
Right, Sgt. Major. Marching up and down the square!

[15:32:13.0000] <Hixie>
sjmiles: my concern is for the case of the UA that doesn't implement components

[15:32:23.0000] <Hixie>
sjmiles: and for those, the UA needs to know what element to treat the component element as

[15:38:12.0000] <bkardell>
Sorry catching up

[15:39:04.0000] <bkardell>
Wait ... hixie, you keep saying "not select/x-map" but your who point was that legacy read that as attr

[15:39:30.0000] <bkardell>
Now you are advocating willynilly attributes in the global space?

[15:39:37.0000] <bkardell>
What am I missing?

[15:40:35.0000] <Hixie>
not just legacy, any UA that doesn't implement web components

[15:40:51.0000] <sjmiles>
hixie: it's not clear to me that, e.g., getting a IMG is better than getting an HTMLUnknownElement (or a span) ... I understand the usefulness for semantic evaluation (this thing is image-like), but less so for fallback

[15:40:56.0000] <Hixie>
the parser would be changed so that <foo/bar> wouldn't treat "bar" as an attribute.

[15:41:16.0000] <dglazkov>
I think there's a distinction between any UA that doesn't implement Web components and any UA that doesn't run JS. The former is not an issue. The latter is.

[15:41:18.0000] <Hixie>
sjmiles: in the case of the map, i agree, img wouldn't be particularly useful for fallback. Nothing really would be.

[15:41:39.0000] <Hixie>
dglazkov: the former is an issue too

[15:41:39.0000] <dglazkov>
/me throws a line into the crowd and runs away

[15:42:09.0000] <bkardell>
Right but you can't change legacy

[15:42:25.0000] <bkardell>
Why is the former not an issue?

[15:42:35.0000] <sjmiles>
hixie: to me, that's the '90% of components don't map to semantics properly' argument that you said I couldn't make anymore :)

[15:42:41.0000] <Hixie>
sure, but that's not a big deal. Who cares if a few pages get some attributes in legacy UAs on random elements.

[15:42:42.0000] <bkardell>
Input/type

[15:42:53.0000] <Hixie>
sjmiles: hm?

[15:43:41.0000] <bkardell>
You would effectively reserve every valid attr of the base tag instead of just saying x-??

[15:43:46.0000] <bkardell>
Hixie...shame

[15:44:06.0000] <sjmiles>
sorry, I have been suggesting that 'most' components would be based on DIV, and I thought you said that argument was debunked

[15:45:13.0000] <sjmiles>
the distinction I'm making is that although many of those components map neatly to existing components conceptually, in terms of actual fallback functionality the payoff is drastically less

[15:45:18.0000] <Hixie>
bkardell: no, i'm saying don't use attributes at all

[15:45:31.0000] <sjmiles>
sorry "existing components" was supposed to be "existing semantics"

[15:46:00.0000] <bkardell>
In legacy it _is_ an attr

[15:46:19.0000] <bkardell>
Isn't that why you suggested in the first?  We tried it, it is

[15:46:44.0000] <Hixie>
sjmiles: for some, fallback for users in legacy UAs is indeed a lost cause, yes. That's not the primary concern. Just like <div> and CSS could just be used exclusively and you'd still have a usable page for users. The problem in both cases is that the page is meaningless for other tools, like search engines, accessibility tools, data mining tools, etc.

[15:46:55.0000] <Hixie>
bkardell: i don't understand the relevance of legacy parsers here.

[15:47:05.0000] <bkardell>
Doesn't it defeat the whole pupose if we jump hoops to make legacy work only to kill it

[15:47:42.0000] <bkardell>
I am gonna have to go read that thread again

[15:48:01.0000] <nimbu>
OMG

[15:48:04.0000] <Hixie>
bkardell: as i just said to sjmiles, it's not just about legacy. But even if it was, I don't understand the problem here?

[15:48:09.0000] <nimbu>
AHEM w3cmemes creator

[15:48:17.0000] <nimbu>
there is one waiting to be created on today's news

[15:48:17.0000] <Hixie>
bkardell: how does this kill something?

[15:48:54.0000] <sjmiles>
hixie: well, this is the distinction I was asking about in the lull ... the difference between 'machine semantics' and 'fallback'

[15:49:28.0000] <sjmiles>
that's why I wanted to consider some kind of 'machine semantic hint'

[15:49:44.0000] <sjmiles>
but ultimately that falls in the category of 'make it optional'

[15:50:48.0000] <bkardell>
Ok... today select/map is parsed as select map

[15:51:03.0000] <Hixie>
sure but today browsers don't do web components either, so...

[15:51:12.0000] <Hixie>
that's kind of a non-issue

[15:51:41.0000] <bkardell>
Anything that is not legacy is by definition new

[15:51:57.0000] <zewt>
(well, no)

[15:52:19.0000] <bkardell>
So what part of the new is problematic with the fallback approach I suggested

[15:52:26.0000] <bkardell>
Did I miss it?

[15:52:35.0000] <Hixie>
the <foo><bar> thing?

[15:52:44.0000] <Hixie>
well it's two elements, and it doesn't fail if you don't give the <bar>

[15:53:04.0000] <Hixie>
so it kinda misses the whole point of keeping semantics

[15:53:19.0000] <Hixie>
i gotta go, meeting. bbl

[15:54:06.0000] <bkardell>
I will be leaving, if someone wants to post up to the bug where this leaves off it would be helpful imo

[15:54:37.0000] <bkardell>
Esp if someone can explain what hixie just said right there :)


2013-01-11
[16:10:46.0000] <bkardell>
:x|

[18:12:30.0000] <bkardell>
Hixie: where you at man?

[18:54:25.0000] <brian_>
dglazkov: you there?

[19:02:10.0000] <bkardell>
...crickets...

[19:05:08.0000] <bkardell>
Hixie: It definitely seems like aside from the fact that it yields two elements, this covers a lot

[19:05:28.0000] <bkardell>
and that two elements only has to be in legacy/script unsupported case

[19:05:53.0000] <bkardell>
am I way off on that?

[19:07:03.0000] <bkardell>
dglazkov: in theory this can provide a plan for both legacy and script not supported

[19:07:17.0000] <bkardell>
you can parse them, they have semantic meaning - just a wrapper

[19:07:40.0000] <bkardell>
if wrappers are a serious problem then the whole interwebs are borked

[20:26:01.0000] <Hixie>
back

[22:28:05.0000] <webguynow>
My attempt at Data url's, starting with <img> turned out to be a flop.

[22:28:35.0000] <webguynow>
Anyone have an example ?

[22:29:09.0000] <webguynow>
actually, There's quite a few around, so I'm not sure what I did wrong

[22:30:29.0000] <odinho>
http://software.hixie.ch/utilities/cgi/data/data might help a bit too.

[22:33:52.0000] <webguynow>
The PHP examples look pretty darn easy.

[22:34:42.0000] <webguynow>
I actually encoded with Java.  ReadIn the file with IOUtils  and encoded with the iHarder Base64

[22:35:30.0000] <webguynow>
was originally trying on my work PC, with IE9 as the browser

[22:37:19.0000] <webguynow>
did the same thing on another machine, and still the image does not show

[22:37:45.0000] <odinho>
That Hixie utility has a quite needlessy big html boilerplate.

[22:38:00.0000] <Hixie>
which one?

[22:38:11.0000] <Hixie>
oh the data kitchen

[22:38:11.0000] <Hixie>
yeah

[22:38:13.0000] <Hixie>
that's old

[22:38:13.0000] <odinho>
Hixie: The one I pasted :-)

[22:38:20.0000] <odinho>
Yeah, I figured :D

[22:38:25.0000] <WeirdAl>
hey, I like that data kitchen

[22:38:42.0000] <WeirdAl>
it works, so why mess with it?

[22:39:05.0000] <Hixie>
hence why it still has the boilerplate :-)

[22:40:27.0000] <odinho>
Yeaa, it does. Although smaller boilerplate brings nicer data uri's (if you're lazy and don't change it), data:text/html;charset=utf-8,%3C!DOCTYPE%20HTML%3E%0D%0A%3Ctitle%3ETest%3C%2Ftitle%3E%0D%0A%3Cstyle%20type%3D%22text%2Fcss%22%3E%3C%2Fstyle%3E%0D%0A%3Cp%3Ehelo

[22:40:46.0000] <odinho>
It was merely an observation, WeirdAl, not a break the world suggestion :P

[22:40:55.0000] <WeirdAl>
:)

[01:00:14.0000] <Ms2ger>
Clearly the data URI kitchen should be renamed

[01:58:28.0000] <annevk>
Indeed what is up with that?

[01:59:27.0000] <jgraham>
?

[02:02:32.0000] <annevk>
jgraham: just a late reply

[02:05:01.0000] <annevk>
MikeSmith: not sure when I last disrupted myself (maybe during the summer), violated an Internet Standard quite recently, and I believe AWWW means Astronaut ;-)

[02:37:43.0000] <hsivonen>
annevk: I hope the TAG upholds data model compatibility: http://lists.whatwg.org/pipermail/whatwg-whatwg.org/2013-January/038632.html

[02:44:16.0000] <darobin>
hsivonen: now that annevk's on the TAG he won't be able to hang out with us anymore

[02:44:26.0000] <darobin>
they lock up the ivory tower to make sure of that

[02:49:33.0000] <Ms2ger>
<object data="../images/blue.png" type="image/gif"

[03:01:18.0000] <annevk>
It seems wrong that a lot of component use cases are design-orientated and would require changes to the markup.

[03:01:36.0000] <annevk>
That is really quite backwards...

[03:02:55.0000] <annevk>
hsivonen: from the newly elected I doubt many care about that strongly, if that's what you mean...

[03:08:38.0000] <Ms2ger>
darobin, and next :)

[03:08:54.0000] <Ms2ger>
darobin, this one's smaller, though ;)

[03:08:59.0000] <darobin>
Ms2ger: :)

[03:09:10.0000] <darobin>
Ms2ger: some of the Mozilla tests I approved are not very good

[03:09:19.0000] <darobin>
they're correct, but not great as tests

[03:09:29.0000] <Ms2ger>
Which ones? :)

[03:09:50.0000] <hsivonen>
annevk: so is upholding XML stuff now completety off TAG‚Äôs list of interests?

[03:09:51.0000] <darobin>
I'm accepting them on the grounds that it's better to have a poor correct test that we can improve than nothing at all

[03:09:58.0000] <darobin>
the ol ones notably

[03:10:01.0000] <Ms2ger>
And better or worse than Microsoft's average oles?

[03:10:03.0000] <Ms2ger>
ones?

[03:10:09.0000] <annevk>
hsivonen: I don't know what the TAG interests are :-)

[03:10:18.0000] <Ms2ger>
/me looks

[03:10:19.0000] <darobin>
they test useful stuff like ol@reversed and all

[03:10:27.0000] <darobin>
but they don't indicate what the pass condition is

[03:10:37.0000] <darobin>
(and I wonder if they couldn't be more automated)

[03:10:43.0000] <Ms2ger>
Oh, those are reftests

[03:10:54.0000] <darobin>
ah

[03:10:57.0000] <darobin>
that wasn't clear

[03:11:08.0000] <darobin>
but anyway, we can improve them

[03:11:13.0000] <Ms2ger>
Indeed

[03:11:35.0000] <annevk>
hsivonen: I personally care about consistency, but I'm not strictly opposed to changing XML, although that seems like a farfetched idea (and when I tried I failed)

[03:12:25.0000] <hsivonen>
annevk: the thing is that there‚Äôs code out there even if you change the XML spec

[03:12:28.0000] <hsivonen>
see 5th edition

[03:24:44.0000] <annevk>
Is there a browser that even implements the 5th?

[03:32:53.0000] <hsivonen>
annevk: dunno. If you find one, please comment on https://bugzilla.mozilla.org/show_bug.cgi?id=501837

[04:32:09.0000] <Ms2ger>
darobin, yt?

[04:35:55.0000] <darobin>
Ms2ger: back now

[04:36:25.0000] <Ms2ger>
I've got a couple of tests for properties of the window object

[04:36:43.0000] <Ms2ger>
Can I just dump those in html/browsers/the-window-object?

[04:36:51.0000] <Ms2ger>
None of the subdirs really make sense

[04:40:53.0000] <darobin>
Ms2ger: yeah, I reckon that's good enough

[04:41:18.0000] <darobin>
we should strive for clarity rather than for being anal, methinks :)

[04:41:48.0000] <Ms2ger>
And that's coming from a HTMLWG editor?

[04:42:14.0000] <darobin>
/me gives Ms2ger a butterfly kiss

[04:42:36.0000] <Ms2ger>
/me gives darobin a pat on the back

[04:51:51.0000] <annevk>
still waiting for http://mcc.id.au/2010/novel.html to be released

[04:53:17.0000] <darobin>
wah?

[05:02:07.0000] <bkardell>
Hixie: re: select/map discussion.  My question is - do you agree that has warts too?

[05:09:55.0000] <bkardell>
Your slash proposal I mean?

[05:11:34.0000] <annevk_>
bkardell: he won't be online for at least another four or so hours

[05:12:33.0000] <bkardell>
You are following that... why no comment?

[05:12:43.0000] <bkardell>
I'd love to hear your thoughts

[05:12:54.0000] <bkardell>
Congrats btw!

[05:13:22.0000] <annevk>
Because it's not really clear to me what problem we're solving

[05:13:42.0000] <bkardell>
That statement alone would have been helpful imo

[05:13:44.0000] <annevk>
I thought it was about components at first. But a lot of the use cases that keep coming up seem presentational in nature...

[05:13:48.0000] <bkardell>
Because I agree

[05:14:14.0000] <annevk>
And addressing presentational problems with changes in HTML markup...

[05:14:30.0000] <annevk>
Yeah well, there's a lot of things to look at, can't be on top of all of them :-)

[05:15:09.0000] <bkardell>
Gotta drop.. back in a few hours

[05:20:42.0000] <Ms2ger>
Hrm, I thought I had commit access to html5lib

[05:54:42.0000] <annevk>
Ms2ger: I can arrange that...

[05:55:30.0000] <annevk>
Ms2ger: you need it?

[05:55:51.0000] <Ms2ger>
I found a test I apparently never pushed there

[05:55:57.0000] <Ms2ger>
So, I guess :)

[05:57:20.0000] <annevk>
check again

[06:08:10.0000] <Lachy>
annevk, I finished updating the selectors api integration into dom http://lachy.id.au/temp/dom-core.html

[06:08:24.0000] <Lachy>
full diff here https://github.com/lachlanhunt/dom/commit/453f2e2457202f49bd2743966a6f2f66f78a771a

[06:09:23.0000] <Lachy>
it's been rebased onto your latest commit, so it's should be ready to pull it in if there's no more problems with it.

[06:13:52.0000] <annevk>
Lachy: need-to-resolve does not seem to point anywhere

[06:14:05.0000] <annevk>
in 5226

[06:14:11.0000] <Ms2ger>
annevk, ta

[06:14:15.0000] <Lachy>
oh, that definition was dropped. I must have missed the reference to it.

[06:14:41.0000] <annevk>
why is refNodes nullable?

[06:15:10.0000] <annevk>
and if it's nullable, it should default to null, but I'm not really sure that's the right approach

[06:18:09.0000] <Lachy>
it's nullable to handle a case where some library function calls it like find(selector, ref), without bothering to check if ref was set to anything

[06:19:16.0000] <annevk>
shouldn't it be Node... btw rather than sequence<Node>?

[06:19:20.0000] <annevk>
hmm

[06:19:22.0000] <Lachy>
no

[06:19:28.0000] <annevk>
why not?

[06:19:39.0000] <Lachy>
sequence<Node> allows for a NodeList to be passed for multiple reference nodes

[06:19:51.0000] <annevk>
sure Node... allows for that too

[06:19:58.0000] <annevk>
I think anyway

[06:20:13.0000] <Lachy>
Huh?

[06:20:28.0000] <Ms2ger>
Eh?

[06:20:41.0000] <annevk>
if you pass the argument as ...nodelist

[06:20:45.0000] <Ms2ger>
Oh, hmm

[06:20:54.0000] <Lachy>
/me checks webidl...

[06:21:00.0000] <annevk>
would make sense anyway

[06:21:34.0000] <Ms2ger>
That's probably ES6

[06:21:39.0000] <annevk>
sure

[06:22:08.0000] <annevk>
ah yeah, ...fds won't be in IDL yet

[06:22:35.0000] <Lachy>
what is fds?

[06:23:13.0000] <Ms2ger>
annevk's canonical name for a nodelist

[06:23:27.0000] <Ms2ger>
Never seen var fds = document.getElementsByClassName(...?

[06:23:46.0000] <Lachy>
never.

[06:24:08.0000] <Ms2ger>
darobin, ping

[06:24:17.0000] <darobin>
yes?

[06:24:26.0000] <annevk>
Lachy: in any event, if we do nullable, it needs to be = null as well

[06:24:57.0000] <annevk>
Lachy: which means refNodes is always given, but might be null

[06:25:26.0000] <Ms2ger>
darobin, I found a file that I need to turn into a test once CSS defines reversed counters, is there any place I can dump that? :)

[06:25:28.0000] <annevk>
Lachy: the algorithms don't really seem to account for refNodes being null at the moment

[06:25:52.0000] <darobin>
Ms2ger: hmmm, is it a CSS test?

[06:25:53.0000] <Lachy>
annevk, that won't work. That would screw up the algorithm for determining refNodes, where null is treated as an explicit way to say there are no refNodes.

[06:26:12.0000] <darobin>
Ms2ger: or an <ol> test? Or yet something else?

[06:26:15.0000] <Ms2ger>
darobin, it's for <ol> and <ol reversed>'s numbering

[06:26:16.0000] <Lachy>
so that might need to be fixed

[06:26:30.0000] <darobin>
Ms2ger: well, if it's really ol then I'd put it with the tests for the ol element

[06:26:36.0000] <Ms2ger>
Alright

[06:26:38.0000] <darobin>
Ms2ger: but if it's CSS, talk to the CSS WG

[06:26:46.0000] <Ms2ger>
I try to avoid that :)

[06:26:52.0000] <darobin>
which I know is cruel and unusual punishment, but hey

[06:26:57.0000] <annevk>
Lachy: not treating undefined and null the same is kinda icky

[06:29:01.0000] <annevk>
Lachy: some of your exceptions are missing ""

[06:29:22.0000] <annevk>
Lachy: all the stuff related to parsing should also move to Selectors

[06:29:30.0000] <Lachy>
I know.

[06:29:38.0000] <Lachy>
But it hasn't been put in there yet.

[06:30:01.0000] <Lachy>
I can follow up with csswg to get that done, but it should at least be kept somewhere till it is

[06:30:15.0000] <annevk>
a lot of stuff under "Processing selectors" should be moved to that section that should eventually go away

[06:30:21.0000] <annevk>
I think

[06:30:58.0000] <annevk>
ideally we just define the thin API layer...

[06:31:18.0000] <annevk>
not that I'm opposed to putting it in the DOM

[06:31:52.0000] <darobin>
next you'll be arguing for some modularity

[06:31:54.0000] <annevk>
Lachy: use append rather than add

[06:32:23.0000] <annevk>
darobin: I usually argue for that

[06:32:58.0000] <annevk>
darobin: and I usually argue argainst those that suggest it without having actually explored the options

[06:33:31.0000] <darobin>
annevk: I know, I've sort of met you before

[06:33:36.0000] <darobin>
(was just teasing)

[06:34:03.0000] <darobin>
/me goes back to hating inter element whitespace with a vengeance

[06:34:24.0000] <annevk>
firstElementChild :-)

[06:34:44.0000] <Ms2ger>
darobin, you can also hate my pull requests instead?

[06:35:48.0000] <darobin>
annevk: doesn't help me here, sadly

[06:36:51.0000] <darobin>
Ms2ger: in a minute, let me give the full of my hatred to IEWS first

[06:39:04.0000] <darobin>
Ms2ger: those changes are they submissions or reviewed stuff?

[06:39:23.0000] <darobin>
in other words, do I need to go through each file to check them or rather is it stuff you've removed and are pushing into place

[06:40:35.0000] <Lachy>
annevk, if you find any more issues, post them as a comment on the diff page. I'll get to them later. And I'll see what I can do about shifting as much as I can out of here and into Selectors.

[06:41:57.0000] <Lachy>
[2013-01-11 15:41:32] <Lachy>	 annevk, if you find any more issues, post them as a comment on the diff page. I'll get to them later. And I'll see what I can do about shifting as much as I can out of here and into Selectors.

[06:48:14.0000] <annevk>
/me hopes Ms2ger can review a bit

[06:48:20.0000] <annevk>
Lachy: thanks for the work

[07:17:14.0000] <annevk_>
Lachy: added a bunch of comments

[07:17:18.0000] <Lachy>
thanks

[07:17:59.0000] <Ms2ger>
darobin, it's stuff from my submission dir, dunno how careful you want to review those

[07:18:31.0000] <Ms2ger>
I'll try to review some Selectors later

[07:21:27.0000] <darobin>
Ms2ger: ok, gotcha

[07:26:32.0000] <Ms2ger>
SimonSapin, French Spacing means exactly what you think it means, no difference between space-after-full-stop and space-everywhere-else

[07:27:08.0000] <annevk>
no mushrooms involved?

[07:27:34.0000] <SimonSapin>
Ms2ger: oh I may have missed as step in the thread

[07:28:19.0000] <Ms2ger>
annevk, no, mushrooms are definitely Dutch

[08:04:14.0000] <zewt>
i wonder if JS engines are able to optimize the "make a native function call that returns an object, and discard the result" case: it can know the object has no other references, and collect it immediately

[08:05:30.0000] <zewt>
(well, if the native call declares that it returns a new object)

[08:07:38.0000] <bkardell>
hixie: ping

[08:26:18.0000] <dpk>
hello

[08:26:50.0000] <dpk>
i think i've found a slight lingustic flaw in the HTML LS

[08:26:58.0000] <dpk>
http://www.whatwg.org/specs/web-apps/current-work/multipage/common-microsyntaxes.html#dates-and-times

[08:27:36.0000] <dpk>
refers to months and dates as referring to a "specific proleptic Gregorian date"

[08:28:20.0000] <dpk>
"proleptic" is used as meaning that the Gregorian calendar is used regardless of whether it was actually used at the time; ie. you don't use the Julian calendar before 1582/1752/etc

[08:29:13.0000] <dpk>
but what it actually means is a date that *is* before its introduction

[08:30:37.0000] <dpk>
you could fix this by either changing it to say "proleptic for dates before 1582", or by introducing a definition of ‚Äòproleptic‚Äô just for the specification that says that

[08:34:37.0000] <dglazkov>
good morning, Whatwg!

[08:37:46.0000] <gsnedders>
zewt: That'll be done as a result of inlining and dead-code elimination

[08:38:07.0000] <gsnedders>
Anyhow, time for me to vanish for the weekend.

[08:38:38.0000] <Ms2ger>
/me waves

[08:43:29.0000] <annevk>
dpk: best to file a bug

[08:44:25.0000] <dpk>
annevk: how do i do that?

[08:44:53.0000] <annevk>
dpk: whatwg.org/C has a form at the bottom of the screen which you can use

[08:45:31.0000] <annevk>
dpk: you could also email whatwg‚äôwo or go directly to w3.org/Bugs/Public and file it on WHATWG / HTML

[08:45:58.0000] <dpk>
oh, do the W3C have a mailing list? i'll CC that, too

[08:46:08.0000] <dpk>
html-public, isn't it?

[08:46:16.0000] <Ms2ger>
Don't crosspost

[08:47:12.0000] <Noah>
Ms2ger: why?

[08:47:16.0000] <dpk>
Ms2ger: such level of integration between the two organisations which specify the same thing would be dangerous to society, i suppose

[08:48:07.0000] <annevk>
dpk: it's a problem because WHATWG requires subscription so you get broken threads

[08:48:36.0000] <dpk>
oh, i have to subscribe? ‚Äì_‚Äì

[08:48:51.0000] <annevk>
dpk: not at all

[08:48:55.0000] <dpk>
wait

[08:48:56.0000] <dpk>
wat

[08:49:00.0000] <annevk>
dpk: you can file a bug instead

[08:49:16.0000] <annevk>
dpk: if you use the form in the spec you don't have to subscribe or give your email to anything

[08:49:50.0000] <dpk>
i'd like to hear back about this, though

[08:50:32.0000] <annevk>
then you should either make a bug account or subscribe to the mailing list

[08:53:04.0000] <dpk>
but‚Ä¶ *sigh*

[08:53:09.0000] <dpk>
/me makes a bug account

[09:00:15.0000] <annevk>
jgraham: why do you only reply to part of the argument?

[09:00:28.0000] <annevk>
zewt did the same, it's not really helping getting anywhere

[09:09:42.0000] <dpk>
k, done: https://www.w3.org/Bugs/Public/show_bug.cgi?id=20649

[09:10:24.0000] <annevk>
thanks

[09:13:35.0000] <yroc>
annevk: A few days ago I asked what the rationale was for the leading and trailing newlines being stripped in <pre> elements...

[09:13:49.0000] <yroc>
annevk: You gave me the appropriate reference here: http://www.w3.org/TR/html401/appendix/notes.html#notes-line-breaks

[09:14:35.0000] <yroc>
annevk: But I'm trying to relate this now to the case of a <pre> with a child <code>

[09:15:01.0000] <annevk>
yroc: it's just a legacy quirk

[09:15:15.0000] <yroc>
The leading and trailing newlines of a child <code> inside a parent <pre> are *not* stripped.

[09:15:32.0000] <Ms2ger>
Yep, because browsers never did that

[09:15:45.0000] <Ms2ger>
So nobody depends on that happening

[09:15:53.0000] <Ms2ger>
And it's more complicated

[09:15:53.0000] <yroc>
annevk: Yes, I know -- the reference you gave me was good, like I said.

[09:16:48.0000] <yroc>
But why doesn't the line break principle in html 4.01 apply to the case of a child <code> in a parent <pre>?

[09:17:07.0000] <zewt>
annevk: i sure didn't do that

[09:17:45.0000] <annevk>
yroc: again, it's a quirk

[09:17:45.0000] <zewt>
if you make the same argument twice, replying to it in one place and deleting the other isn't ignoring the repeat, heh

[09:18:10.0000] <annevk>
I don't think that's what happened

[09:19:51.0000] <yroc>
annevk: So by "quirk" you mean there's no rational reason why browsers strip leading and trailing newline of <pre> but they don't strip leading and trailing newlines of a <code> child of <pre>?

[09:20:34.0000] <annevk>
yes

[09:20:43.0000] <annevk>
gotta reboot, in trouble again :/

[09:20:53.0000] <Ms2ger>
Well, there is one: stripping it from children is more work

[09:21:32.0000] <yroc>
Ms2ger: more work for who? UA implementors?

[09:21:43.0000] <Ms2ger>
Yeah

[09:23:03.0000] <yroc>
Ms2ger: it's so funny when you rack your brain to make sense of something, assuming that there's a well thought out intention to the why, when in some cases (like this one, apparently) there isn't

[09:23:30.0000] <Ms2ger>
You must be new here ;)

[09:23:51.0000] <yroc>
How'd ya guess?!

[09:24:19.0000] <yroc>
New, but learning... slowly ;)

[09:25:29.0000] <Ms2ger>
This is an important thing to learn, then... Not a lot has been well thought through before implementation :)

[09:26:45.0000] <yroc>
Ms2ger: Yes, exactly. I think that's going to be my working assumption from now on until proven otherwise :)

[09:26:58.0000] <Ms2ger>
Good idea :)

[09:27:09.0000] <yroc>
Lot less head banging that way...

[09:38:03.0000] <annevk_>
dunno zewt, rather not introduce new objects without constructors

[09:38:12.0000] <annevk_>
and a constructor here could make sense

[09:55:21.0000] <TabAtkins>
Ms2ger: Reversed counters?  You mean, counters that you have to look forward in the document to see what value they should end up on?

[09:55:47.0000] <Ms2ger>
I mean something to implement <ol reversed>

[09:55:52.0000] <Ms2ger>
So, I guess?

[09:56:49.0000] <TabAtkins>
I'm curious how that would even work, actually.

[09:57:00.0000] <TabAtkins>
You still need to establish the counter's scope at the usual starting place.

[09:57:19.0000] <TabAtkins>
Maybe an end parameter on counter-reset?

[09:57:55.0000] <Ms2ger>
Ask bz :)

[09:59:39.0000] <annevk_>
dglazkov: why on both <a> and <b>?

[09:59:58.0000] <TabAtkins>
I see how it would work in my head, actually.  I was concerned temporarily about unreachable endpoints, but actually it's always fine - you just keep a running sum of the counter-increments until the scope ends, then reverse them to get your actual starting value.

[09:59:59.0000] <annevk_>
dglazkov: that seems different from how <a> with a child <b> would normally behave without shadow trees

[10:00:23.0000] <TabAtkins>
Argh, though, the syntax of coutner-* is *killer*.  Space-separated lists ftl.

[10:03:13.0000] <annevk>
dglazkov: also note that event listeners can set the target to display:none, can remove it from the tree, etc. so offsetX / offsetY will end up weird

[10:03:55.0000] <annevk>
dglazkov: and what you're suggesting does not seem compatible with how they're computed today for elements that could reasonably have a shadow tree

[10:09:39.0000] <annevk>
dglazkov: replied on the list

[10:56:32.0000] <dglazkov>
annevk: me too! :)

[11:43:58.0000] <Hixie>
annevk: btw, whatwg.org/newbug

[11:44:44.0000] <Hixie>
bkardell: here now

[11:47:19.0000] <Hixie>
hsivonen: yt?

[11:52:12.0000] <bkardell>
Hixie:  you agree select/map thing is not without warts/right?

[11:57:26.0000] <annevk_>
Hixie: cool

[11:58:35.0000] <Hixie>
bkardell: well it's certainly not as pretty as it would be if we could have the HMTL spec updated to have a true <geomap> element and so not need a component at all, sure

[11:58:41.0000] <Hixie>
bkardell: and angle brackets are kind of pain

[11:58:49.0000] <Hixie>
bkardell: but then i'm not a huge fan of HTML as a whole

[11:58:59.0000] <Hixie>
bkardell: so it's not hard for me to admit that something in HTML has warts :-)

[11:59:31.0000] <bkardell>
No no... not what I mean

[12:00:18.0000] <csuwldcat>
new Map(); // which element did that imperitive invocation just resolve to?

[12:00:41.0000] <bkardell>
Hixie: both plans have a number of good/bad implications... right?

[12:00:44.0000] <csuwldcat>
if --> <element whitelist="input, textarea">

[12:00:46.0000] <csuwldcat>
then

[12:01:01.0000] <csuwldcat>
new Foo(); gets which one?

[12:02:35.0000] <bkardell>
I am just curious if we can just agree to a list to benefits and drawbacks for each one

[12:02:38.0000] <Hixie>
bkardell: all options have good and bad points, but i think <select/map> is the only proposal i'm aware of that has no fatal problems currently. Why, are there problems I should know of that are fatal with <select/map>?

[12:02:46.0000] <csuwldcat>
do we start throwing parse errors then?

[12:02:48.0000] <Hixie>
bkardell: i would be very happy to see such an analysis

[12:02:57.0000] <Hixie>
bkardell: and would be happy to review it and offer suggestions

[12:03:05.0000] <Hixie>
feel free to use the whatwg wiki if you want

[12:03:09.0000] <Hixie>
i can create you an account

[12:03:16.0000] <csuwldcat>
<div/foo> ERROR: invalid application of a slash-hacked attribute to a tag

[12:03:17.0000] <csuwldcat>
?

[12:04:07.0000] <csuwldcat>
do we extend doc.createElement to understand 'div/foo'?

[12:04:30.0000] <Hixie>
personally i wouldn't, but that's up to dglazkov as far as i'm concerned

[12:04:56.0000] <csuwldcat>
I figured as much

[12:05:51.0000] <csuwldcat>
throw YAOAA (Yet Another One-off API Asterisk) on the pile

[12:06:34.0000] <bkardell>
Hixie: sure... if we want.  I mean, I see a lot of drawbacks to / but only one benefit

[12:06:38.0000] <csuwldcat>
I feel like we're making swiss cheese, not a coherent API

[12:07:22.0000] <bkardell>
Hixie: i'd like someone to just list pro/con implications so we can agree wtf we are even talking abt

[12:07:30.0000] <csuwldcat>
ok

[12:07:36.0000] <csuwldcat>
***goes to paste

[12:07:45.0000] <bkardell>
Dispassionately csuwldcat

[12:07:48.0000] <bkardell>
:)

[12:11:38.0000] <bkardell>
Hixie: because I think we are on too many levels talking past each other...

[12:13:48.0000] <csuwldcat>
https://etherpad.mozilla.org/custom-element-pro-con

[12:16:51.0000] <Hixie>
bkardell: http://wiki.whatwg.org/wiki/Components

[12:17:04.0000] <Hixie>
ok, csuwldcat did one too

[12:17:07.0000] <Hixie>
/me looks at csuwldcat's

[12:17:49.0000] <Hixie>
i disagree with most of csuwldcat's cons so far

[12:17:51.0000] <Hixie>
:-)

[12:18:19.0000] <csuwldcat>
Hixie: you can disagree all you want, those are the downstream effects

[12:18:28.0000] <csuwldcat>
please, add your dispute under each one

[12:18:36.0000] <csuwldcat>
show me how they are invalid

[12:18:46.0000] <csuwldcat>
Im not even half way done

[12:19:45.0000] <bkardell>
Sorry guys... phone and accessing irc through it :-/

[12:23:46.0000] <annevk>
Can't we go back to use case discussion again? Yesterday quite a few people said they wanted decorators. Most of what web components is now is not decorators...

[12:24:27.0000] <dglazkov>
annevk: both decorators and custom elements are part of web components.

[12:24:43.0000] <annevk>
dglazkov: how do decorators work?

[12:24:49.0000] <annevk>
dglazkov: via CSS?

[12:24:55.0000] <dglazkov>
annevk: yup

[12:25:05.0000] <annevk>
dglazkov: where is that defined?

[12:25:21.0000] <dglazkov>
annevk: http://www.w3.org/TR/components-intro/#decorator-section

[12:25:46.0000] <annevk>
dglazkov: intro does not sound like a definition

[12:25:49.0000] <dglazkov>
annevk: I don't know what you mean by "quite a few people", but I am pretty sure most web devs want custom elements.

[12:27:23.0000] <dglazkov>
annevk: I haven't written the decorators spec yet.

[12:27:34.0000] <annevk>
e.g. http://www.w3.org/2008/webapps/wiki/Component_Model_Use_Cases

[12:28:57.0000] <annevk>
a lot of those are either extending an existing form control or a decorator

[12:29:27.0000] <annevk>
which kinda argues for the <.../...> design I'd think

[12:31:18.0000] <Hixie>
yeah, people posted pages of components yesterday that showed exactly that

[12:31:32.0000] <dglazkov>
the biggest complaint about slash-type is that it's verbose. The best analogy I heard is having to write out base type for every instance in a normal programming language.

[12:31:50.0000] <Hixie>
wait, what? the slash-type thing is the least verbose it could possibly be

[12:31:57.0000] <Hixie>
it literally has exactly as few characters as you can use

[12:32:00.0000] <annevk>
dglazkov: it's not that verbose

[12:32:07.0000] <hober>
i still prefer <select is=map> to <select/map>

[12:32:12.0000] <Hixie>
you literally cannot get any less verbose without using gzip or something

[12:32:47.0000] <dglazkov>
Hixie <x-map> is less verbose in that regard. It has better developer egronomics.

[12:33:41.0000] <csuwldcat>
dglazkov: that's a #Fact

[12:35:37.0000] <Hixie>
dglazkov: sure but it doesn't meet the requirements so that's kind of moot

[12:35:42.0000] <Hixie>
dglazkov: i mean, <map> is even less verbose

[12:35:47.0000] <Hixie>
dglazkov: as is <>

[12:35:53.0000] <dglazkov>
looking through backlog and comments, the main objections from Web developers boils down to ergonomics. So.. Standards guys want slash-type, Web devs want custom tags.

[12:36:17.0000] <Hixie>
i don't _want_ slash-type

[12:36:22.0000] <Hixie>
i want something that meets the requirements

[12:36:30.0000] <Hixie>
foo/bar is the only one people have proposed that does

[12:36:34.0000] <Hixie>
i'm certainly open to other proposals

[12:36:42.0000] <hober>
whatever the syntax, it needs to convey two pieces of information: the element you're extending, and the component that extends it. <x-map> doesn't do that.

[12:37:32.0000] <Hixie>
TabAtkins: i love the "lead" vs "mislead" in http://www.w3.org/mid/CAAWBYDCQ-dmUGJpehYsjZLH9RQbc3F-VFd_um=qGBmK0ws181g‚äômgc

[12:37:49.0000] <Hixie>
TabAtkins: you should take that paragraph and put it in the whatwg faq somewhere :-)

[12:38:40.0000] <csuwldcat>
Hixie: dglazkov: verbosity is a subconcern

[12:39:01.0000] <csuwldcat>
the biggest lame-ness here, is that tags are noun identities with specfic protos

[12:39:29.0000] <csuwldcat>
tags and the HTMLElement constructors they are tied to have always had a strongly tied relationship

[12:39:32.0000] <Hixie>
yeah ok that etherpad thing has just devolved into namecalling, i'm out

[12:39:35.0000] <csuwldcat>
we are now obliterating that

[12:39:43.0000] <csuwldcat>
where

[12:39:43.0000] <csuwldcat>
?

[12:40:43.0000] <TabAtkins>
Hixie: I... had no idea I was making such a great pun/parallel.

[12:40:46.0000] <TabAtkins>
That's wonderful.

[12:42:28.0000] <Hixie>
hehe

[12:42:30.0000] <TabAtkins>
Hixie: If you drop the requirement that "requiring parsers to read linked HTML documents is bad", then the current spec solution hits all the same points that <foo/bar> does, but better.

[12:42:46.0000] <csuwldcat>
TabAtkins: WORD

[12:43:13.0000] <Hixie>
TabAtkins: sure, if we require all UAs to implement Web Components. But we can't seriously do that. That's a huge amount of work on one of the most complicated aspects of the web platform.

[12:43:28.0000] <csuwldcat>
Hixie: cited some micro parser used by 4 guys in a basement in Siberia though

[12:43:28.0000] <Hixie>
TabAtkins: is even html5lib going to support web components natively?

[12:43:29.0000] <TabAtkins>
That's an incorrect assertion.

[12:43:29.0000] <dglazkov>
TabAtkins: I agree. I would like to understand whether 5 and 7 are actually requirements or nice-to-haves

[12:44:00.0000] <TabAtkins>
The parser required to understand the fallback tag semantics is a tiny tiny subset of Web Components.  It's just "use your HTML parser, and look for <element> elements in the linked document."

[12:44:07.0000] <TabAtkins>
s/."/"./

[12:44:39.0000] <csuwldcat>
Hixie: what is HTML5lib?

[12:44:50.0000] <TabAtkins>
Once you see the <element name="x-bar" extends="foo">, you can parse <x-bar> exactly as easily as <foo/bar>, with the same semantic fallback.

[12:45:02.0000] <TabAtkins>
csuwldcat: It's the de facto non-browser impl of the HTML parser.

[12:45:08.0000] <Hixie>
TabAtkins: i don't think that is a reasonable requirement. For example, you might not have network at that point.

[12:45:10.0000] <TabAtkins>
Written in Python 2/3.

[12:45:15.0000] <csuwldcat>
ah

[12:45:33.0000] <csuwldcat>
WHAT? (12:46:02 PM) Hixie: TabAtkins: i don't think that is a reasonable requirement. For example, you might not have network at that point.

[12:45:37.0000] <csuwldcat>
so you had a network to dl the page

[12:45:39.0000] <Hixie>
csuwldcat: "Hixie: cited some micro parser used by 4 guys in a basement in Siberia" is the kind of hyperbolic strawman construction that makes me not enjoy discussing this with you, fwiw.

[12:45:49.0000] <csuwldcat>
but not to get the linked rel?

[12:46:00.0000] <csuwldcat>
oh gosh, that sounds absurd

[12:46:19.0000] <sjmiles>
re: div/x-foo and 'verbosity is a subconcern' => not for me. From my perspective verbosity is the primary issue.

[12:46:24.0000] <csuwldcat>
Hixie: let me rephrase

[12:46:30.0000] <Hixie>
most of the studies we do of HTML consist of big zipfiles of HTML files where none of the links have been followed, for instance.

[12:47:12.0000] <csuwldcat>
what do you think the total usage rates of the cases you cite in relation to the lesser known parsers that are not used by any of today's modern browsers?

[12:47:15.0000] <TabAtkins>
sjmiles: I'm not concerned with relative verbosity either, just intent.  Having to restate your inheritance structure with every instantiation seems asinine. :/

[12:47:34.0000] <Hixie>
TabAtkins: fwiw, i agree with that

[12:47:44.0000] <sjmiles>
@tabatkins: yes, precisely ... it's a cost I have to pay over and over

[12:47:58.0000] <Hixie>
TabAtkins: having said that, we had some interesting cases yesterday that came up where i think this would actually help

[12:48:04.0000] <TabAtkins>
Hixie: Then are you just biting the bullet? \

[12:48:07.0000] <csuwldcat>
TabAtkins: asinine, and asiten, and asieleven

[12:48:10.0000] <TabAtkins>
Hixie: Sorry, I skipped most of the discussion yesterday.

[12:48:15.0000] <Hixie>
TabAtkins: for instance, consider a component that wants to add an API for <h1>-<h6>

[12:48:15.0000] <csuwldcat>
see what I did there ;)

[12:48:33.0000] <Hixie>
TabAtkins: (some <h1>s to <h6>s, that is)

[12:48:43.0000] <Hixie>
TabAtkins: do you have to declare 6 components?

[12:48:53.0000] <csuwldcat>
No Hixie

[12:49:00.0000] <csuwldcat>
that could be a decorator

[12:49:04.0000] <Hixie>
not a decorator, it adds an api

[12:49:29.0000] <TabAtkins>
If you wanted to mimic the same hierarchy, then probably, yeah.

[12:49:34.0000] <csuwldcat>
h1,h2,h3,h4,h5 { decorator: url(#HixieHeadings); }

[12:49:52.0000] <TabAtkins>
csuwldcat: API-adding via decorator is in the long future, if ever.

[12:49:53.0000] <annevk>
csuwldcat: dude, he just said it wasn't a decorator

[12:50:12.0000] <csuwldcat>
TabAtkins: he just added that after we said it

[12:50:27.0000] <TabAtkins>
csuwldcat: Yes, but he said it quickly.  ^_^

[12:50:31.0000] <csuwldcat>
he's tacking on reqs live, this is called moving the goal post

[12:50:33.0000] <csuwldcat>
haha

[12:50:37.0000] <csuwldcat>
good point

[12:50:50.0000] <TabAtkins>
csuwldcat: Dude, don't be like that.  This is a fast, casual medium.

[12:50:57.0000] <Hixie>
i didn't move the goalpost, I said it added an API in the very first line that mentioned it!

[12:51:00.0000] <Hixie>
jesus

[12:51:05.0000] <annevk>
TabAtkins: seems weird btw as h1-h6 implement the same interface

[12:51:11.0000] <TabAtkins>
You can't work here if you require that everyone state their entire argument and all clarifications in a single line.

[12:51:12.0000] <annevk>
TabAtkins: HTMLHeadingelement

[12:51:19.0000] <Hixie>
TabAtkins: or alternatively, every phrasing element

[12:51:20.0000] <TabAtkins>
annevk: <h1-6> are werid, yes.

[12:51:30.0000] <csuwldcat>
but hixiem you did it to present your corner case specifically geared to achieve your narrative

[12:51:34.0000] <Hixie>
TabAtkins: or every sectioning element (that one in particular seems quite plausible)

[12:51:36.0000] <csuwldcat>
how do you not see that?

[12:51:38.0000] <annevk>
TabAtkins: they're not the only elements with a non-unique interface

[12:51:58.0000] <sjmiles>
I realize I'm not getting any traction with the verbosity argument, but I expect web-devs are going to find it extremely off-putting (my team does)

[12:52:07.0000] <TabAtkins>
Hixie: Hm, I see.  Yes, there are some plausible cases where you could want to apply the same API across several existing HTML elements.

[12:52:14.0000] <csuwldcat>
sjmiles: naw, they'll just rock the X

[12:52:29.0000] <csuwldcat>
<x/hoodwinked>

[12:52:54.0000] <csuwldcat>
TabAtkins: Hixie: I admit as well, the case is valid

[12:53:05.0000] <Hixie>
TabAtkins: what we could do is have an in-page macro mechanism, i suppose

[12:53:15.0000] <sjmiles>
csuwldcat: I refer to the notion that will require the extra tag semantic <div/x-whatever>

[12:53:20.0000] <csuwldcat>
I would contend that it is fractional and not going to be the norm

[12:53:23.0000] <TabAtkins>
Hixie: I don't think that overrides in general the argument against restating your base on every element, though.  Perhaps argues for a way to address that case specifically.

[12:53:44.0000] <Hixie>
TabAtkins: so <foo/bar> is the regular syntax, but you can say <define element="bar" extends="foo" with="binding.html"> and then use <bar>

[12:53:53.0000] <TabAtkins>
Or pursuing something like slash-tag at the same time, as a way to manually override the extends="" attribute.

[12:54:00.0000] <TabAtkins>
Yeah, that's what I'm thinking.

[12:54:15.0000] <csuwldcat>
sjmiles: oh, but I think Hixie said the parser addition that will be required by this will add some magic that means when parsed, the name after the slash is not added as an attribute

[12:54:16.0000] <Hixie>
that would allow us to even drop the x-

[12:54:21.0000] <bkardell_>
Hixie: question - for tab too

[12:54:24.0000] <annevk>
that seems even better

[12:54:28.0000] <dglazkov>
wait wait

[12:54:32.0000] <TabAtkins>
Hixie: I don't really want to repeat that macro on every page, though - I'd prefer to link it in once.

[12:54:36.0000] <annevk>
especially if the plan is to express native elements in terms of shadow trees too

[12:54:37.0000] <dglazkov>
so declare elements in the doc ahead of time?

[12:54:38.0000] <bkardell_>
sorry guys you should have seen me trying to do this on my phone, it was something to behold

[12:54:44.0000] <TabAtkins>
dglazkov: Forward declarations!

[12:54:50.0000] <sjmiles>
look, having to put <div/x-foo> instead of just <x-foo> at a very basic level is off-putting to web devs

[12:54:55.0000] <dglazkov>
yeah. it has terrible developer ergonomics, too

[12:54:57.0000] <Hixie>
TabAtkins: well, it has to be in-page because otherwise the parser will just be utterly lost

[12:54:59.0000] <bkardell_>
if you do the slash thing - a LOT of tools break

[12:55:02.0000] <annevk>
dglazkov: like import in Python

[12:55:03.0000] <Hixie>
hsivonen is going to hate this

[12:55:12.0000] <TabAtkins>
Hixie: Without an in-band signal that it's something special, sure.

[12:55:13.0000] <csuwldcat>
sjmiles: not just that, it has HUGE downstream consequences

[12:55:20.0000] <dglazkov>
sjmiles will hate the forward decls

[12:55:26.0000] <csuwldcat>
with tag names, every API devs use today works

[12:55:27.0000] <TabAtkins>
(Like the x- prefix.)

[12:55:39.0000] <csuwldcat>
doc.createElement, querySelector, getElementsByTagName, el.nodeName, etc,

[12:55:42.0000] <Hixie>
the x- thing is _so_ ugly though

[12:55:49.0000] <TabAtkins>
It's reallyl not. ^_^

[12:55:51.0000] <csuwldcat>
with this method, hixie is tossing all of that

[12:55:52.0000] <Hixie>
i mean, uglier even than the slash thing

[12:55:53.0000] <Hixie>
imho

[12:56:00.0000] <Hixie>
anyway, that's clearly subjective

[12:56:01.0000] <csuwldcat>
unless we patch that everywhere

[12:56:16.0000] <sjmiles>
at some point we discussed merely requiring '-' ... since devs will want to id their elts anyway (goog-map, yui-button) this I expect to not be alarming to web devs

[12:56:17.0000] <bkardell_>
hixie: amen... subjective :)

[12:56:20.0000] <dglazkov>
csuwldcat was right that if we have to do slash-type, most libraries will simply flow around with <x/foo>

[12:56:20.0000] <Hixie>
i suppose we could require a prefix, that would get around hsivonen's concerns

[12:56:38.0000] <csuwldcat>
dglazkov: I will, with x-tag

[12:56:41.0000] <bkardell_>
dgazkov: and tools will break

[12:56:53.0000] <bkardell_>
that is one of the things hixie wans tot avoid

[12:56:53.0000] <dglazkov>
bkardell_: well, that

[12:56:53.0000] <annevk>
bkardell_: such as?

[12:57:00.0000] <csuwldcat>
you can stamp a money back guarantee on that

[12:57:05.0000] <TabAtkins>
Hixie: <x-tag is=h1> ^_^

[12:57:12.0000] <hober>
ewwwwh

[12:57:14.0000] <Hixie>
the other thing is what is the tag name of an extended element -- i guess y'all want it to be the component, but that means it'd be different for legacy UAs and new UAs in the <foo/bar> case

[12:57:24.0000] <Hixie>
TabAtkins: yeah but that fails 7

[12:57:28.0000] <bkardell_>
just go to your syntax highlighters for example or all of these poste things we use online and start playing

[12:57:33.0000] <TabAtkins>
Where were these numbered reqs?

[12:57:34.0000] <Hixie>
TabAtkins: people just won't bother with the is=""

[12:57:34.0000] <csuwldcat>
TabAtkins: oh you are a cunning fellow Tag, nay Ninja like

[12:57:38.0000] <Hixie>
http://wiki.whatwg.org/wiki/Components

[12:57:49.0000] <dglazkov>
... namespaces?

[12:57:51.0000] <TabAtkins>
Ah, kk.

[12:57:53.0000] <hober>
the tag name of an element that happes to be bound to a component should be the same as if it weren't bound

[12:57:56.0000] <TabAtkins>
<x-tag/h1>

[12:58:05.0000] <bkardell_>
csuwildcat and I accidentally were getting auto-completed closing tags, things that looked like errors or attributes that look like content

[12:58:12.0000] <TabAtkins>
In legacy browsers, tagname is x-tag, like we want, and h1 is an attribute name.

[12:58:20.0000] <Hixie>
TabAtkins: <h1/tag> is cleaner than <x-tag/h1>

[12:58:25.0000] <csuwldcat>
yeah, we also blast a ton of regexps out in the wild

[12:58:26.0000] <Hixie>
TabAtkins: if we're going there

[12:58:45.0000] <csuwldcat>
Hixie: can we give everyone your email for the support requests?

[12:58:47.0000] <TabAtkins>
Hixie: Marginally, yes, due tot he prefix loss, but we want to allow components to rely on their default extends (and thus be slash-less).

[12:58:53.0000] <csuwldcat>
I mean that's fair right?

[12:59:12.0000] <bkardell_>
this is what I was saying

[12:59:20.0000] <bkardell_>
doesn't that violate hixie's #7?

[12:59:38.0000] <Hixie>
do we have any idea how many components we're expecting per page?

[12:59:42.0000] <hober>
csuwldcat: everyone already has his email address

[12:59:43.0000] <Hixie>
bkardell_: not if we do the macro declaration thing

[12:59:53.0000] <csuwldcat>
haha hober: good point

[12:59:57.0000] <TabAtkins>
Often, a decent number.  sjmiles can probably give a good answer.

[13:00:03.0000] <Hixie>
like 10? 100?

[13:00:12.0000] <csuwldcat>
Hixie: in our experience, it all depends on the app

[13:00:13.0000] <Hixie>
trying to work out if it's just out of the question to declare them ahead of time

[13:00:18.0000] <sjmiles>
100s

[13:00:20.0000] <csuwldcat>
some it was as few as 10

[13:00:27.0000] <Hixie>
ok yeah that won't work then

[13:00:28.0000] <Hixie>
bummer

[13:00:31.0000] <csuwldcat>
others, that have iterated uses, it was 100s

[13:00:35.0000] <Hixie>
sjmiles: in one page?

[13:00:37.0000] <Hixie>
man

[13:00:41.0000] <sjmiles>
easily

[13:00:52.0000] <csuwldcat>
x-responsive-img

[13:00:55.0000] <TabAtkins>
Hixie: I know that, just using jQuery components, I've sometimes written pages with *lots* of things.

[13:01:12.0000] <TabAtkins>
Counting things that were practically components, just not packaged as such, that number goes up a lot more.

[13:01:12.0000] <Hixie>
maybe we should just abandon HTML and just have them all use XML... (not joking)

[13:01:17.0000] <hober>
sjmiles: do you mean 100s of instances of a handful of components, or a handful of instances of 100s of components?

[13:01:22.0000] <sjmiles>
components support composition, the layering available there allows one to mitigate a complex application structure into numerous small pieces

[13:01:33.0000] <csuwldcat>
100s of instances of a handful of components!!! :)

[13:01:36.0000] <Hixie>
i mean, if there's 100s of these things, there's no way any software is going to make head or tail of it even if they have the fallback elements

[13:01:47.0000] <sjmiles>
100s of instances of a much smaller # of components

[13:01:51.0000] <Hixie>
oh

[13:01:52.0000] <Hixie>
ok

[13:01:53.0000] <csuwldcat>
correct

[13:02:02.0000] <Hixie>
how many component types per page though?

[13:02:02.0000] <sjmiles>
my perspective is 'web apps' to be clear

[13:02:06.0000] <Hixie>
sure

[13:02:07.0000] <csuwldcat>
so maybe 10-20 uniques

[13:02:10.0000] <sjmiles>
component types is more like dozens

[13:02:12.0000] <csuwldcat>
with a few at high iteration

[13:02:18.0000] <sjmiles>
for serious apps

[13:02:23.0000] <csuwldcat>
yeah

[13:02:24.0000] <Hixie>
ok that's not so bad then

[13:02:29.0000] <csuwldcat>
the only kind hehe

[13:02:50.0000] <dglazkov>
also important, in the cases where 100s of instances are present, the apps are built dynamically and more than likely HTML is only used as the UI configuration medium, not a public document.

[13:03:00.0000] <Hixie>
we could do something like <script type="parser macro declaration"> foo = <select/foo>; bar = <input/bar> </script>

[13:03:15.0000] <csuwldcat>
Hixie: in total though, over the whole of an app, across all pages/views, you could have many more

[13:03:16.0000] <sjmiles>
apologize if I'm repeating, but I'm concerned that rule #5 is more or less like insisting all ice-cream be served with peas on top

[13:03:18.0000] <dglazkov>
iow, you would load chunks of templates or fragments, and replace them as you work

[13:03:24.0000] <Hixie>
dglazkov: yeah, in which case you don't even need to define that many macros

[13:03:25.0000] <csuwldcat>
im just saying there are like 10-20 uniques per view

[13:03:40.0000] <sjmiles>
ulimately, the ice-cream consumers will go to incredible lengths to build pea-removal machines

[13:03:47.0000] <csuwldcat>
so the whole app may have 50-60

[13:03:57.0000] <dglazkov>
Hixie: what I meant is that in this case requirements 5 and 7 are moot

[13:04:06.0000] <csuwldcat>
Hixie: think of it like jQuery plugins, some sides include like 50 js files, each a plugin

[13:04:12.0000] <Hixie>
dglazkov: not entirely, but yes, to a large extent i agree

[13:04:21.0000] <Hixie>
dglazkov: it's the markup case i'm worried about

[13:04:32.0000] <dglazkov>
Hixie: I understand.

[13:04:35.0000] <Hixie>
mostly worried about, anyway

[13:04:41.0000] <csuwldcat>
I will mourn the loss of doc.createElement for many moons

[13:04:56.0000] <Hixie>
sjmiles: sure, just like today they use <div>s only

[13:04:59.0000] <csuwldcat>
and all the other DOM APIs we'll either lose or have to patch

[13:05:02.0000] <Hixie>
sjmiles: but i don't think that's most people

[13:05:08.0000] <Hixie>
sjmiles: and it's widely understood to be poor style

[13:05:09.0000] <csuwldcat>
that is what developers will hunt us for

[13:05:22.0000] <dglazkov>
Hixie: these two cases are in contradiction then

[13:05:53.0000] <dglazkov>
I think both csuwldcat and sjmiles are mostly interested in the former and could care less about the latter

[13:06:00.0000] <csuwldcat>
yup

[13:06:09.0000] <Hixie>
the former = from script?

[13:06:19.0000] <csuwldcat>
the markup is low medium, all the downstream is heartbreaking

[13:06:22.0000] <Hixie>
if so, they sure are arguing forcefully about the latter :-)

[13:06:32.0000] <dglazkov>
let's call it the "apps" case vs. "document" case.

[13:06:49.0000] <Hixie>
i disagree with the premise that there's a difference or that apps only use scripts

[13:06:50.0000] <sjmiles>
this is why I wanted something optional

[13:06:50.0000] <csuwldcat>
Im not sure I can sell a spec that requires patching every DOM interface that works off of a tag/selector

[13:07:05.0000] <csuwldcat>
Boris will probably go into a fit of nerd rage

[13:07:11.0000] <dglazkov>
Hixie: okay let's see

[13:07:31.0000] <bkardell_>
are we editing a wiki with something new?

[13:07:33.0000] <TabAtkins>
Hixie: I've added my proposal to the wiki page.  Do you agree with my writeup?

[13:07:43.0000] <dglazkov>
Hixie: in "apps" case, the requirements 5 and 7 are uninteresting, since the app uses markup as purely UI config serialization/deserialization medium

[13:07:52.0000] <bkardell_>
hixie: that was creepy fast

[13:08:17.0000] <dglazkov>
Hixie: in "document" case, the requirements 5 and 7 are serious, because the document's semantics are public

[13:08:22.0000] <sjmiles>
@dglazkov: yes, this is my belief also

[13:08:34.0000] <csuwldcat>
TabAtkins: dglazkov: I think a hard req for us is that you can use existing DOM APIs to query/create elements

[13:08:36.0000] <Hixie>
bkardell_: hm?

[13:08:45.0000] <sjmiles>
that's when I ask for 'optional'

[13:08:55.0000] <csuwldcat>
document.createElement('div/foo')

[13:09:07.0000] <sjmiles>
document.createElement *must* work

[13:09:07.0000] <csuwldcat>
querySelector('div/foo')

[13:09:09.0000] <bkardell_>
hixie: nm.. i just said 'can we edit the wiki' and a microsecond later you said 'i updated the wiki

[13:09:25.0000] <Hixie>
TabAtkins: failing any of those requirements imho is a blocker.

[13:09:30.0000] <csuwldcat>
sjmiles: correct

[13:09:41.0000] <TabAtkins>
csuwldcat: The only thing you might need to change is createElement, I think.

[13:09:48.0000] <TabAtkins>
bkardell_: I said that, actually.

[13:09:52.0000] <csuwldcat>
uhhh

[13:09:52.0000] <bkardell_>
oh

[13:09:54.0000] <bkardell_>
hahaha

[13:09:58.0000] <csuwldcat>
TabAtkins: what about all the others?

[13:10:03.0000] <TabAtkins>
csuwldcat: The tagname in any case would be the component's name.

[13:10:05.0000] <csuwldcat>
how do I use querySelector?

[13:10:07.0000] <Hixie>
TabAtkins: seems right though. It's basically the same as the earlier x-geomap proposal.

[13:10:22.0000] <csuwldcat>
what? how in the...

[13:10:26.0000] <csuwldcat>
please explain

[13:10:29.0000] <Hixie>
dglazkov: i disagree with the premise that apps are written entirely from script

[13:10:43.0000] <Hixie>
dglazkov: but that doesn't seem to affect the argument

[13:10:59.0000] <sjmiles>
I would say the premise is that apps are very much less interested in semantic clarity or backward UA compat

[13:11:00.0000] <csuwldcat>
Hixie, not entirely, but many recent ones are a panel shell with all other creation done in script

[13:11:01.0000] <Hixie>
bkardell_: i wrote that page today, yes

[13:11:09.0000] <TabAtkins>
csuwldcat: <x-foo/h1> still creates an <x-foo> element.  It just changes the default extension, for the purpose of things that care about it, from whatever <element name=x-foo extends="???"> said, to h1.

[13:11:16.0000] <Hixie>
bkardell_: when the etherpad was started

[13:11:17.0000] <dglazkov>
Hixie: I disagree with this premise, too! I did not say anything about them being written entirely from script

[13:11:29.0000] <sjmiles>
app frequently do not work at all without the proper requirements and trying to push them into that realm is flawed

[13:11:33.0000] <Hixie>
dglazkov: i don't understand the point you are making then

[13:11:52.0000] <annevk>
TabAtkins: can't we use another prefix? E.g. "c-" meaning component?

[13:11:55.0000] <TabAtkins>
Hixie: As a meta-comment, I do find it troublesome to hold apps hostage to documents.  I've had to fight against this in CSS land for a long time.

[13:12:02.0000] <TabAtkins>
annevk: I don't care what the prefix is.

[13:12:03.0000] <annevk>
TabAtkins: x- is so overused and for something completely different to boot

[13:12:06.0000] <dglazkov>
Hixie: okay. When you are writing say, an game app.

[13:12:23.0000] <dglazkov>
you have several screens that appear during the game

[13:12:40.0000] <dglazkov>
these screens are implemented as <template> instances in your doc

[13:12:49.0000] <bkardell_>
all... did someone comment on my observation that <select/geomap actually does break things that dont have the exact quirks of today's parsers

[13:12:57.0000] <dglazkov>
you instantiate them and use them as necessary

[13:13:11.0000] <csuwldcat>
bkardell_: please elaborate

[13:13:12.0000] <bkardell_>
I think it is a red-herring that it looks like that proposal meets all reqs

[13:13:18.0000] <dglazkov>
for anyone but the app, the markup content of these screens is completely uninteresting

[13:13:21.0000] <csuwldcat>
which browsers, and where?

[13:13:24.0000] <dglazkov>
crawlers will hate this

[13:13:33.0000] <dglazkov>
sorry correction

[13:13:40.0000] <dglazkov>
crawlers will want to ignore this content

[13:13:46.0000] <Hixie>
bkardell_: they're not quirks of today's browsers, today's browsers all implement the html parser spec which is pretty specific about how to parse this.

[13:14:10.0000] <dglazkov>
and if they don't, they will produce junk knowledge about this app as a document

[13:14:21.0000] <bkardell_>
hixie: I'm not sure I see the distinction

[13:14:27.0000] <sjmiles>
(re: wiki, my position is that <select/geomap> fails requirement 4)

[13:14:28.0000] <csuwldcat>
just read the wiki

[13:14:32.0000] <Hixie>
dglazkov: if your thesis is that we don't care about semantics for games, then i disagree

[13:14:32.0000] <bkardell_>
lots of tools parse html that don't

[13:14:38.0000] <bkardell_>
and do really well

[13:14:43.0000] <Hixie>
dglazkov: though i will grant you that many people will be of that opinion

[13:14:49.0000] <csuwldcat>
<x-geomap> doesn't even fail the reqs by your own definitions

[13:14:55.0000] <TabAtkins>
Hixie: Arguably, <select/geomap> fails 7, due to our repeated assertions that it's likely to become common to just extend an <x> element.

[13:15:02.0000] <csuwldcat>
if #7 Needs to encourage authors to put a real semantic rather than just skipping that step.

[13:15:37.0000] <Hixie>
TabAtkins: by the logic of that assertion, people would just use <x class=""> today, and they don't. They at worst use <div class="">, and that is widely considered poor style.

[13:15:43.0000] <csuwldcat>
Hixie: you might want to change this to "Needs to strictly force authors to put a real semantic rather than just skipping that step, even when it doesn't apply to their use-case"

[13:16:02.0000] <csuwldcat>
then I can agree, it certainly would meet #7

[13:16:25.0000] <sjmiles>
the reality of web devs, IMHO, is that you can only 'encourage' people by making things that feel good ... if being semantic has tangible benefits devs will do it, if you try to force it, they will revolt

[13:16:37.0000] <csuwldcat>
Hixie: many devs don't know <x> would be evaluated as Unknow inline element

[13:16:41.0000] <csuwldcat>
if they did, they might

[13:16:45.0000] <TabAtkins>
Hixie: It's really not considered poor style - quite a lot of app frameworks do precisely that (ask sjmiles).  There's a worrying number that also just straight-up use custom tagnames, without even a prefix to disambiguate.

[13:16:51.0000] <csuwldcat>
hell, most of our web devs didn't realize that

[13:17:37.0000] <sjmiles>
people understand the notion of semantic-goodness, but again, without a tangible benefit, the boss yelling at them to meet the deadline is massively more persuasive

[13:17:47.0000] <bkardell_>
I think maybe wycats_ has some experience there too :)

[13:18:05.0000] <sjmiles>
all wild generalizations by me are IMO :)

[13:18:27.0000] <sjmiles>
or, IME (in my experience)

[13:18:30.0000] <csuwldcat>
dglazkov: Hixie: I have strong objections to the wording of 5 & 7

[13:18:43.0000] <csuwldcat>
5 assumes there are even semantics applicable, a dubious assertion

[13:18:48.0000] <Hixie>
TabAtkins: it has an entry in wiktionary: http://en.wiktionary.org/wiki/divitis

[13:18:58.0000] <csuwldcat>
and 7 just askes that it encourges the use of fallback content

[13:19:25.0000] <csuwldcat>
which all would, through our extensive developer evangelism networks

[13:19:52.0000] <dglazkov>
this is another good point. Restriction breeds perversion. Designing something that will not be palatable to devs, even if with good intentions (see reqs 5 and 7) will just result in more craziness.

[13:19:59.0000] <TabAtkins>
Hixie: I'm quite aware of the dislike of the pattern in semantic circles.  I'm also aware of the heavy and continuing use of it anyway within app frameworks.

[13:20:02.0000] <Hixie>
when you have people like zeldman and allsopp who criticise it so much they have coined a term for it, i think it's "considered poor style"

[13:20:07.0000] <csuwldcat>
Hixie: I can't wait for the next entry after this is released: xitis

[13:20:18.0000] <Hixie>
TabAtkins: sure, just like layout tables are still widely used

[13:20:26.0000] <sjmiles>
@dglazkov: yes, thank you for again saying what's in my head, but much more clearly :)

[13:20:51.0000] <Hixie>
TabAtkins: there's a difference between that and just embracing it and defining it as the best practice in the spec

[13:21:05.0000] <csuwldcat>
Hixie: if you relent on the link document thing, I think you'll find devs will tie in the semantics anyway

[13:21:08.0000] <sjmiles>
layout tables used to be necessary to get the work done, what's left now are reverberations of that

[13:21:16.0000] <csuwldcat>
because it actually benefits them to inherit the correct proto

[13:21:17.0000] <TabAtkins>
Hixie: You know it's incorrect to say that we're just rubberstamping div-itis.

[13:21:31.0000] <TabAtkins>
Due to the extends="" attribute.

[13:21:45.0000] <TabAtkins>
And my proposal for optionally allowing slash-tag as well.

[13:22:01.0000] <csuwldcat>
TabAtkins: but he is setting up the circular argument that you can't parse that, to the advantage of his narrative

[13:22:15.0000] <bkardell_>
TabAtkins: where were you when I was trying to make this argument on the bug that re-opened this?

[13:22:16.0000] <csuwldcat>
Hixie, I don't mean anything against you, but that is the case

[13:22:30.0000] <TabAtkins>
bkardell_: Ignoring the walls of text.  ^_^

[13:22:37.0000] <Hixie>
TabAtkins: fair enough

[13:23:12.0000] <TabAtkins>
Are there any other non-alphanumeric characters allowed in Name productions besides dash and underscore?

[13:23:18.0000] <TabAtkins>
/me is too lazy to look it up.

[13:23:23.0000] <csuwldcat>
TabAtkins: slash tags as optional, that's another good compromise

[13:23:28.0000] <csuwldcat>
good thinking!

[13:23:46.0000] <dglazkov>
I personally like forward defines. I would allow the browser to know which elements are going to be custom in advance.

[13:23:48.0000] <TabAtkins>
(Though actually, keeping the slash-tag so that the actual tagname parses equivalently in all browsers is probably a good thing.)

[13:23:57.0000] <bkardell_>
I worry about this slash thing brothers

[13:24:07.0000] <bkardell_>
have you read my points on it?

[13:24:12.0000] <bkardell_>
are they all invalid?

[13:24:15.0000] <dglazkov>
but it's untenable in real life (the case where you have multiple libraries of components, one including another, etc.)

[13:24:24.0000] <TabAtkins>
bkardell_: Haven't read too much, no.

[13:24:26.0000] <csuwldcat>
dglazkov: not only that, but how are you going to throw late parse errors?

[13:24:26.0000] <annevk>
I'd prefer btw if we could come up with something that's prefixless. Per that talk Hixie referenced the other day on G+ it might actually be nice if native elements could be minted. Of course, we'd have to do it in such a way that new HTML elements can still be created somehow...

[13:25:11.0000] <csuwldcat>
if <input/foo> is invalid, because foo cannot be attached to input, then you have to throw, but you can't do it until the linked compontents file is parsed anyway

[13:25:19.0000] <TabAtkins>
annevk: As far as I can tell, the only strategy that's ever worked for combining language-defined and author-defined is (1) prefixing the author-defined stuff, or (2) assuming that author-defined stuff won't happen that often anyway, and just stomping on them when you extend the language.

[13:25:22.0000] <csuwldcat>
beccause you don't know it is invalid yet

[13:26:02.0000] <csuwldcat>
annevk: in our use of the x- compontent tags, we generally have semeantic content as the payload

[13:26:03.0000] <annevk>
TabAtkins: I guess otherwise you'd have to tell in advance somehow this is an author-binding...

[13:26:25.0000] <TabAtkins>
annevk: And be okay with author-bindings stomping language-bindings when the names collide.

[13:26:34.0000] <annevk>
TabAtkins: right

[13:27:27.0000] <annevk>
Of course given HTML's silly parser it's not actually tenable

[13:27:33.0000] <hober>
this is, again, one of the reasons i prefer <select is=map> - there's no stomping of language-bindings and author-bindings :)

[13:27:34.0000] <sjmiles_>
(still here)

[13:27:55.0000] <bkardell_>
hober: I don't entirely hate that

[13:28:00.0000] <csuwldcat>
hober, other than the fact you just infered the prototype inheritance

[13:28:07.0000] <TabAtkins>
hober: I hate it.  ^_^

[13:28:12.0000] <bkardell_>
hober: the main drawback is that you have to know the root element

[13:28:20.0000] <csuwldcat>
and doing so will cause devs to think they can add is="map" to non-selects

[13:28:23.0000] <TabAtkins>
(For the reasons already stated - it looks mutable, it requires restating the inheritance in every instantiation, etc.)

[13:28:33.0000] <bkardell_>
personally, I like my proposal better, but..

[13:28:37.0000] <csuwldcat>
even if that would cause internal compontent logic to go haywire

[13:29:17.0000] <TabAtkins>
I'm unsure - does the extension of a tag change the prototype chain of the newly-constructed element, or just some other information accessible to a11y stuff and such?

[13:29:34.0000] <csuwldcat>
it changes it

[13:29:43.0000] <bkardell_>
TabAtkins: the mutability thing is only bothersome until you realize that lots of things in html are like that

[13:29:44.0000] <sjmiles_>
the div/x-foo solution is clever, is there anyway we can default to 'div/'? I realize this poses a moral hazard, but it makes my objections go away

[13:29:46.0000] <csuwldcat>
emits a new proto

[13:29:57.0000] <bkardell_>
TabAtkins: you can't change the type of a script tag, for example

[13:30:20.0000] <bkardell_>
I think people could overcome it if it really gave all the rest of the benefits right

[13:30:30.0000] <TabAtkins>
sjmiles_: The last proposal on the wiki page now has that - it's the current spec (just <x-tag>, with <element extends=""> defining the extension) + the ability to override the extension with slash-tag: http://wiki.whatwg.org/wiki/Components

[13:30:50.0000] <TabAtkins>
bkardell_: They're rare, though, and those attributes that act like that are little-used, I think.

[13:31:01.0000] <TabAtkins>
I mean, @type isn't even a required attribute as long as you're using JS.

[13:31:16.0000] <bkardell_>
I've talked to several people who quickly changed their mind - that's all I'm saying

[13:31:21.0000] <sjmiles_>
TabAtkins: ah sorry, missed it, I'm +100 on that :)

[13:31:22.0000] <bkardell_>
if we dont have to - let's not

[13:31:35.0000] <bkardell_>
but... it's not as bad as / in my mind

[13:31:51.0000] <annevk>
you can change type="" of <script> and API-wise that's observable

[13:31:54.0000] <bkardell_>
TabAtkins: Weigh the pros and cons

[13:31:58.0000] <annevk>
all HTML attributes are mutable

[13:32:17.0000] <bkardell_>
but they don't necessarily have an effect - yeah?

[13:32:22.0000] <bkardell_>
couldnt that be the case here?

[13:32:24.0000] <annevk>
it's just that not all mutations have side effects beyond normal DOM changes, but most do

[13:32:41.0000] <bkardell_>
annevk: yeah - I'm not saying anything diff... I said that in the email thread I think

[13:33:03.0000] <bkardell_>
it has pros that / don't have

[13:33:26.0000] <annevk>
I saw someone suggesting <input type> was not mutable, but that certainly is, and will change the widget

[13:33:36.0000] <bkardell_>
really?

[13:33:41.0000] <TabAtkins>
bkardell_: Definitely.

[13:33:44.0000] <bkardell_>
I swear I just tried that yesterday

[13:33:52.0000] <TabAtkins>
/me regularly uses that mutability to change type=password to type=text.

[13:34:03.0000] <bkardell_>
hrm

[13:34:11.0000] <annevk>
TabAtkins: we should maybe have some kind of API on type=password

[13:34:22.0000] <TabAtkins>
annevk: For?

[13:34:32.0000] <annevk>
TabAtkins: or get UAs to implement a checkbox like think to show the password

[13:34:38.0000] <dglazkov>
attributes are non-starter

[13:34:40.0000] <TabAtkins>
annevk: Ah, interesting.

[13:34:44.0000] <csuwldcat>
annevk: no, it won't

[13:35:02.0000] <TabAtkins>
csuwldcat: What are you contradicting?

[13:35:05.0000] <dglazkov>
let's get everyone to agree on that.

[13:35:08.0000] <annevk>
TabAtkins: it's all over the place in OS UI, I'd love to have it in browsers :)

[13:35:14.0000] <TabAtkins>
annevk: Agreed!

[13:35:19.0000] <csuwldcat>
the fact you can change the attribute

[13:35:26.0000] <csuwldcat>
oh misread

[13:35:29.0000] <csuwldcat>
it was type

[13:35:35.0000] <TabAtkins>
annevk: Since the right side of inputs seems to be okay to place widgety things, maybe the button can just go there.

[13:35:36.0000] <csuwldcat>
thought it was a custom element attr

[13:35:57.0000] <csuwldcat>
dglazkov: agreed

[13:36:14.0000] <annevk>
yeah

[13:36:43.0000] <csuwldcat>
dglazkov: slash is going to be a nightmare to polyfill as well

[13:36:56.0000] <dglazkov>
hober: I highly recommend reading https://www.w3.org/Bugs/Public/show_bug.cgi?id=18669 for a good discussion on that. Sorry it's long :)

[13:37:08.0000] <csuwldcat>
https://github.com/mozilla/web-components/blob/master/document.register.js

[13:37:44.0000] <dglazkov>
csuwldcat: I think the key here is to examine requirement 5 and determine if it really is a show-stopper.

[13:37:52.0000] <dglazkov>
if it is, then we go back to drawing table

[13:38:03.0000] <bkardell_>
so... for everyone here

[13:38:06.0000] <dglazkov>
if it isn't then we already have a proper solution with optional slash-type

[13:38:23.0000] <bkardell_>
does everyone realize that <select/map today parses with map as an attribute?

[13:38:33.0000] <TabAtkins>
bkardell_: Yes, it's been repeatedly explained.

[13:38:40.0000] <dglazkov>
... unless TabAtkins added something new to http://wiki.whatwg.org/wiki/Components in the last secs

[13:38:41.0000] <dglazkov>
:)

[13:38:45.0000] <TabAtkins>
dglazkov: I have not.

[13:38:53.0000] <csuwldcat>
dglazkov: but brian's solution does that

[13:39:03.0000] <csuwldcat>
not at the tag level, but via fallback contents

[13:39:13.0000] <dglazkov>
oh.

[13:39:18.0000] <dglazkov>
why is it not on http://wiki.whatwg.org/wiki/Components?

[13:39:24.0000] <bkardell_>
TabAtkins:  but the same thing without the / would not be a webcomponent

[13:39:36.0000] <dglazkov>
/me pokes bkardell

[13:39:50.0000] <csuwldcat>
dglazkov: http://paste.mootools.net/f305b18b7

[13:39:55.0000] <annevk>
why doesn't extends define an interface name rather than an element name?

[13:40:11.0000] <annevk>
makes much more sense to extend HTMLHeadingElement than h1 or h2

[13:40:13.0000] <csuwldcat>
annevk: huh?

[13:40:34.0000] <TabAtkins>
bkardell_: Correct, <select> by itself would not be, in that proposal.  In my proposal, <x-...> indicates a component, and the slash just indicates an override extension.

[13:40:36.0000] <annevk>
or HTMLModElement or HTMLQuoteElement

[13:40:49.0000] <csuwldcat>
annevk: it could just as easily map to that

[13:40:49.0000] <sjmiles_>
fwiw, my notion of a default semantic type is not actually in the wiki

[13:41:05.0000] <TabAtkins>
annevk: Would make sense, I suppose.  It does mean putting DOM stuff into HTML, which hasn't happened before.

[13:41:06.0000] <sjmiles_>
the last one is close, but it requires a-priori access to element tag, which is no bueno

[13:41:14.0000] <csuwldcat>
sjmiles_: unknowns read as spans, right dglazkov?

[13:41:25.0000] <TabAtkins>
csuwldcat: More or less, yeah.

[13:41:40.0000] <sjmiles_>
HTMLUnknownElement I suppose (is that crazy?)

[13:41:48.0000] <bkardell_>
sjimles_ not really

[13:42:05.0000] <TabAtkins>
annevk: As csuwldcat suggests, having extends="h1" just imply the actual DOM interface rather than the specific tag might work too.

[13:42:05.0000] <csuwldcat>
so dglazkov, if you look at that example, let's imagine my map, is a canvas map

[13:42:14.0000] <dglazkov>
wait wait, the last proposal http://wiki.whatwg.org/wiki/Components#Proposal:_.3Cx-geomap.3E_for_the_default_extension_.28specified_in_.3Celement.3E.29.2C_.3Cx-geomap.2Fselect.3E_to_override is not what I expected

[13:42:22.0000] <csuwldcat>
that blows up this whole argument

[13:42:33.0000] <TabAtkins>
annevk: That doesn't gain us much, though, as Hixie brings up further examples (all sectioning elements, all phrasing elements) which also make sense, and don't share a reasonable ancestor.

[13:42:41.0000] <dglazkov>
I thought there was one more proposal about optional fallback, where <x-map> is same as <span/x-map>

[13:42:53.0000] <annevk>
TabAtkins: at least it makes more sense from a JS perspective

[13:43:18.0000] <csuwldcat>
TabAtkins: I think that's a separate issue

[13:43:37.0000] <csuwldcat>
that can be solved with a repurposed is="" on the <element> def

[13:43:49.0000] <csuwldcat>
correct?

[13:44:36.0000] <csuwldcat>
so Hixie, TabAtkins, dglazkov, what happens when my MAP element is a canvas map?

[13:44:54.0000] <csuwldcat>
you still force me to <select/map> ???

[13:44:59.0000] <hober>
dglazkov: big surprise; after reviewing that bug thread, i find i'm somewhere between Hixie & hsivonen's positions. :)

[13:45:19.0000] <dglazkov>
hober: I think you might be lost, then :P

[13:45:31.0000] <sjmiles_>
rofl

[13:45:32.0000] <hober>
heh

[13:45:34.0000] <bkardell_>
hober: where are you?

[13:45:40.0000] <TabAtkins>
csuwldcat: My proposal (last one in the wiki page) doesn't at all.  Your <x-map> declares whatever its default native semantics are, and author can override per-instance if necessary.

[13:46:24.0000] <hober>
bkardell_: I prefer <select is=map> to <select/map> for several reasons, and prefer <select/map> to anything that involves not saying both "select" and "map"

[13:46:25.0000] <csuwldcat>
TabAtkins: I like that

[13:46:50.0000] <csuwldcat>
hober: but attributes are a non-starter for a laundry list of reasons

[13:47:09.0000] <sjmiles_>
TabAtkins: my understanding is that some of the semantic meaning is intended for web-crawlers (search engines, and so on), so access to the element definitions can't be a requirement

[13:47:12.0000] <dglazkov>
one is select.setAttribute("is", "fun");

[13:47:18.0000] <hober>
csuwldcat: i disagree

[13:47:33.0000] <csuwldcat>
sjmiles_: not so, google can and does parse all sorts of stuff like that

[13:47:42.0000] <bkardell_>
hober:  can I talk you out of select/map?

[13:47:52.0000] <bkardell_>
:)

[13:47:57.0000] <csuwldcat>
talk to Matt Cutts

[13:48:05.0000] <TabAtkins>
sjmiles_: That's how Hixie states the requirement.  More specifically, he feels that guaranteed access to the semantics even when you can't follow links (because you're offline, you've archived the one page, etc.) is required.

[13:48:07.0000] <hober>
bkardell_: select/map isn't my preferred solution, so yeah, you can! :)

[13:48:22.0000] <bkardell_>
hober: ok

[13:48:36.0000] <TabAtkins>
sjmiles_: I am not as hardline.  Requiring every page be self-contained seems a non-starter to me, because it means bloat in every page and more work for authors.

[13:48:42.0000] <csuwldcat>
bkardell_: he likes is=""

[13:48:43.0000] <sjmiles_>
IMO: anything that requires me as a web dev to define 'x-foo' as a select, and then say 'select' again every time they employ x-foo will make devs batshit

[13:48:44.0000] <bkardell_>
hober: select is=map isn't my original/preferred, but I could likve

[13:48:54.0000] <bkardell_>
live*

[13:49:00.0000] <csuwldcat>
he's one of *those* people...jk hober

[13:49:11.0000] <TabAtkins>
Also, many apps (what we really care about here) make no sense self-contained anyway - they often *need* the additional resources linked in to work at all.  This is in contrast to documents, which can often be reasonably self-contained without great effort.

[13:49:17.0000] <bkardell_>
it has numerous advantages actually, only 2 downs I can see

[13:49:47.0000] <bkardell_>
hober: many will likely do <x is="select"

[13:49:48.0000] <sjmiles_>
TabAtkins: that's tricky, if we really care about 'apps', the necessity of 5 and 7 is greatly reduced IMO

[13:49:53.0000] <bkardell_>
I think anyway

[13:49:54.0000] <csuwldcat>
TabAtkins: great distinction and point, this is of primary concern to us at Mozilla

[13:49:57.0000] <TabAtkins>
sjmiles_: I agree!

[13:50:11.0000] <TabAtkins>
sjmiles_: I think that documents have little need of Components in the first place.

[13:50:12.0000] <csuwldcat>
we are trying to make the web a viable apps platform, and the competition is native platforms

[13:50:24.0000] <TabAtkins>
sjmiles_: Whether or not they end up *using* a lot of components is still up in the air, of course.

[13:50:25.0000] <hober>
bkardell_: i don't think many people would do that who aren't already doing <x class=map>

[13:50:37.0000] <csuwldcat>
if the web seems cumbersome and hard to deal with, we lose, we all lose

[13:50:42.0000] <TabAtkins>
sjmiles_: The hope is that the ugliness of the prefix prevents widespread use of API-free components solely to make "more semantic" names.

[13:50:44.0000] <bkardell_>
TabAtkins:don't have to ignore them, but lower priority, right? I agree to that

[13:51:14.0000] <TabAtkins>
While the terseness of the prefix doesn't put off apps that do need API-full components.

[13:51:14.0000] <hober>
csuwldcat: i don't think that's a universally-held position (that it's native v. web, yadda yadda)

[13:51:27.0000] <sjmiles_>
TabAtkins: I agree completely ... that's why I start at "terseness trumps" ... but to not completely remove 'documents' as a use case, I want something options

[13:51:31.0000] <sjmiles_>
optional

[13:51:44.0000] <csuwldcat>
hober: im in the trenches talking to all sorts of partner app companies daily bro, it is

[13:51:59.0000] <TabAtkins>
Thus, hopefully, the current language design means that documents use few components, and only really for app-like things, while the meaningful parts use native elements.

[13:52:20.0000] <TabAtkins>
And for apps, the things that *do* map decently to native semantics will often just use them anyway.

[13:52:24.0000] <bkardell_>
who put "The "x-" prefix is ugly."

[13:52:30.0000] <bkardell_>
I call bs

[13:52:37.0000] <csuwldcat>
Hixie: another unsung benefit: x-tabbox will light a fire under the standardistas to standardize common tags sooner

[13:52:44.0000] <dglazkov>
another thought: _why_ would a non "app" use web components? what would be the motivation?

[13:52:56.0000] <TabAtkins>
The optional slash-tag thing is actually useful there - I find that I agree with Hixie quite a bit in that if you have a component for phrasing-level elements, it'll probably apply for *all* of them.

[13:53:15.0000] <csuwldcat>
with the hapless marass of is="", we can go about coining useless document tags that do nothing interesting and simply carry on as usual

[13:53:22.0000] <TabAtkins>
Writing <x-foo/i> and <x-foo/b> instead of <x-foo-i> and <x-foo-b> (and having to double/triple/more up your <element> definitions) seems just fine.

[13:53:25.0000] <dglazkov>
the whole point of custom elements is to enable instantiate an object tree given markup

[13:53:28.0000] <TabAtkins>
And means that the sematnics are self-contained.

[13:53:41.0000] <dglazkov>
if you never use the object tree, what good will <x-foo> be?

[13:53:48.0000] <sjmiles_>
yes, I've been trying to make these distinctions for a while now: app vs document, semantic HTML vs. application HTML, machine vs human semantics, and fallback vs semantic hinting ... seems like these are all conflated in this discussion

[13:55:39.0000] <bkardell_>
sjmiles_: it's a hard line to draw though

[13:55:48.0000] <sjmiles_>
for people that see a component for x-fancy-input, there is an obvious problem that it obscures the 'input-ness'

[13:55:50.0000] <bkardell_>
when does the small thing become big

[13:55:58.0000] <hober>
dglazkov: "non-app" web pages often sprinkle widgety-things here and there; i assume we'd like such things to be built with components

[13:56:00.0000] <annevk>
bkardell_: it is ugly

[13:56:01.0000] <sjmiles_>
I would argue it's intent not size

[13:56:03.0000] <bkardell_>
or when does it become "red"

[13:56:20.0000] <csuwldcat>
can I get at least an admittance from the is="" foo/bar crowd, that the way fallback is done today in things like object could easily work here

[13:56:27.0000] <sjmiles_>
when I make x-report-generator, I much less concerned with losing some obvious native semantic

[13:56:33.0000] <TabAtkins>
hober: Yes, it's the "here and there" thing that I find important - most of the content *probably* won't be components.

[13:56:41.0000] <csuwldcat>
and that the only difference is that someone wants this to be forced on people from the top tag down

[13:56:51.0000] <hober>
TabAtkins: sure.

[13:56:54.0000] <bkardell_>
annevk: That's not taste?

[13:57:01.0000] <TabAtkins>
csuwldcat: Where you nest the fallback into the element?  I don't admit that it could "easily work" here.

[13:57:09.0000] <dglazkov>
hober: ... and today, this is already <script> document.write ... chunk, not anything semantic

[13:57:11.0000] <TabAtkins>
csuwldcat: Becauset he contents of a component are part of its API.

[13:57:14.0000] <csuwldcat>
TabAtkins: do tell?

[13:57:15.0000] <bkardell_>
annevk: please pick a better word so I can understand, or we should remove it from the wiki :)

[13:57:22.0000] <sjmiles_>
for 'sprinkles' and highly seamantice overrides, we surely need some semantic hinting and perhaps fallback behavior

[13:57:26.0000] <csuwldcat>
not if we include a fallback attribute

[13:57:26.0000] <hober>
dglazkov: yeah, if we do this right we can improve on the status quo

[13:57:34.0000] <bkardell_>
annevk: need facts, not opinions

[13:57:43.0000] <sjmiles_>
for giant apps that never will work in ancient browser, or without JS, and so on, the semantic hinting is burdensome

[13:57:48.0000] <csuwldcat>
TabAtkins: dglazkov: that would specifically tell the WC code not to use it

[13:57:50.0000] <bkardell_>
annevk: too much of this is opinion already :)

[13:57:56.0000] <sjmiles_>
IMO neither use case is invalid, so we need an OPTION

[13:57:59.0000] <TabAtkins>
annevk: You'll have a hard time arguing that "x-" is particularly uglier than "div/".  ^_^

[13:58:02.0000] <dglazkov>
hober: yup. This is why we shouldn't have nasty hacks like magic attributes that never change.

[13:58:19.0000] <TabAtkins>
csuwldcat: Possible, sure, but ugly in its own way, imo.

[13:58:26.0000] <hober>
dglazkov: this is why we shouldn't have nasty hacks like sending custom element names over the wire :)

[13:58:28.0000] <csuwldcat>
TabAtkins: in use today

[13:58:36.0000] <csuwldcat>
no developer ramp time

[13:59:00.0000] <csuwldcat>
easy to understand and completely opt-in, maintaining the optimal interface we know is better

[13:59:04.0000] <TabAtkins>
csuwldcat: I don't think "fallback as child element" is in use today for component-type things.  Only native elements that already have it built in.

[13:59:12.0000] <csuwldcat>
<object>

[13:59:15.0000] <hober>
dglazkov: <aside is=adsense> :)

[13:59:17.0000] <csuwldcat>
sure

[13:59:25.0000] <csuwldcat>
same-ish

[13:59:48.0000] <TabAtkins>
csuwldcat: Another bad part of it is expressed on the wiki, too - if you don't really need to express fallback, just what it descends from, then it's just a silly talisman.

[13:59:54.0000] <dglazkov>
hober: it's a nice idea. but it's an ugly hack: aside.setAttribute("is", "notAdsense"); // still adsense

[14:00:26.0000] <csuwldcat>
TabAtkins: correct, as it will be for the majority of use-cases

[14:00:31.0000] <dglazkov>
hober: custom element names, even select/map is better than that -- at least you're call things what they are

[14:00:42.0000] <annevk>
dglazkov: seems kinda similar to <script src> to me

[14:00:45.0000] <hober>
but then you totally break parity between html and xhtml

[14:00:48.0000] <annevk>
dglazkov: that's not too ugly

[14:01:05.0000] <csuwldcat>
we are letting one concern, that is still addressed via other proposals, dominate the API and the use-cases, when itself is not a majority use-case

[14:01:38.0000] <csuwldcat>
that is Unintuitive, Horse-Cart API Design 101

[14:01:52.0000] <sjmiles_>
IMO, if HTML5 is ever going to battle native apps (particularly on mobile) we need to at least allow for streamlined syntax ... if you don't, devs will simply build something like it anyway, in Babel-Tower fashion

[14:01:54.0000] <csuwldcat>
Cart-Horse, rather ;)

[14:01:56.0000] <dglazkov>
annevk: well, it's no kinda like src. script.setAttribute("src") will still change the value

[14:02:06.0000] <dglazkov>
the whole element becomes numb.

[14:02:29.0000] <bkardell>
Annvk: script src, yes...I keep saying

[14:03:14.0000] <bkardell>
Gglazkov: I could live with that...easily learnable

[14:03:26.0000] <csuwldcat>
bkardell: but given there is only one use of script on the net today on 99.9% of sites, the argument is laced with obscurity and irrelevance

[14:04:04.0000] <sjmiles_>
csuwldcat: hrm? that doesn't sound right

[14:04:07.0000] <annevk>
dglazkov: did anyone seriously suggest changing setAttribute() semantics? doubt it

[14:04:14.0000] <bkardell>
Csuwldcat: disagree.

[14:04:18.0000] <csuwldcat>
bkardell: could you live with people adding is="" to elements that do nothing or throws errors, unless you meticulously inspect a linked document?

[14:04:25.0000] <sjmiles_>
most sites have 9,000 scripts for +1 buttons and ad-servers and all kinds of gunk

[14:04:36.0000] <hober>
annevk: indeed; i'm not suggesting that we should go anywhere near messing with setAttribute

[14:05:04.0000] <bkardell>
Csuwldcat: yes...if it is the best equibrium we can find

[14:05:43.0000] <csuwldcat>
but can we think for a second about the word equilibrium?

[14:05:45.0000] <bkardell_>
csuwldcat: I can conceed that hixie and annevk and all have a kind of a point there

[14:06:14.0000] <bkardell_>
csuwldcat:  I think it is all about prioritizing the "requirements"

[14:06:33.0000] <csuwldcat>
bkardell: I 100% agree

[14:07:10.0000] <csuwldcat>
and I would like to do it according to occurrence, relevance/use-case/total use-cases

[14:07:14.0000] <bkardell_>
csuwldcat: I dont know for sure if I think they all are the same value, but if we weigh them out and find select is= yields the best equilbrium... I could learn to cope

[14:08:18.0000] <csuwldcat>
Can Hixie agree to rewrite the polyfill

[14:08:33.0000] <csuwldcat>
I think it would be a great exercise for him to get in touch with the pain points

[14:08:35.0000] <bkardell_>
csuwldcat: if you can get an honest fact pro/con of the implications then we can take up prioritization discussion

[14:09:00.0000] <csuwldcat>
Can anyone here just write a few of these? and them make their case?

[14:09:14.0000] <dglazkov>
The problem with developer ergonmics of "is" attribute become quite obvious once you have an app with 100s of components.

[14:09:37.0000] <csuwldcat>
I'm curious to see a show of hands as to who has A) read the full spec B) tried to polyfill is="" C) written components with it

[14:09:49.0000] <sjmiles_>
all 3

[14:10:00.0000] <sjmiles_>
and years prior making custom component solutions

[14:10:04.0000] <csuwldcat>
My spidy sense is telling me that the semanticists haven't

[14:10:05.0000] <TabAtkins>
I suspect the raised hands are two - you, and sjmiles_.

[14:10:10.0000] <csuwldcat>
just got a feeling about it

[14:10:13.0000] <sjmiles_>
lol :)

[14:10:33.0000] <dglazkov>
heey, I have 3 too

[14:10:34.0000] <sjmiles_>
so, I see both sides

[14:10:59.0000] <sjmiles_>
the problem I have is the requirement to FORCE semantics

[14:11:09.0000] <sjmiles_>
seems to me that's really important to Hixie

[14:11:16.0000] <sjmiles_>
and is ultimately where we keep getting stuck

[14:11:22.0000] <csuwldcat>
opining from an armchair, and telling of the truth from the trenches after putting some skin in the game are two very different things

[14:11:46.0000] <sjmiles_>
well yes, but the 'armchair' is just actually a different set of gnarly blood-filled trenches

[14:11:50.0000] <sjmiles_>
don't forget :)

[14:11:55.0000] <csuwldcat>
sjmiles_: that is squarely the issue, yes

[14:12:02.0000] <csuwldcat>
forced vs elected

[14:12:54.0000] <csuwldcat>
neither of the competing proposals fail to address the issue, there is only the difference between forced and elected

[14:13:13.0000] <dglazkov>
hober: btw, <aside><x-adsense> is probably better semantically anyway.

[14:13:46.0000] <dglazkov>
but I digress

[14:13:57.0000] <csuwldcat>
sjmiles_: Im not going to lie to people in the docs we write at mozilla, we're going to be very upfront about why the majority of the time they are playing in a mud pit

[14:14:12.0000] <bkardell_>
I have edited the wiki - feel free to yell at me

[14:14:26.0000] <csuwldcat>
if we go Vader on this, someone please own it, wear the mantle

[14:14:56.0000] <dglazkov>
TabAtkins: I want to propose a slight alteration of your proposal

[14:15:10.0000] <dglazkov>
TabAtkins: not "override", but "indicate".

[14:15:33.0000] <sjmiles_>
csuwldcat: we're not done yet, don't go nuclear too soon

[14:16:00.0000] <dglazkov>
you can't override <x-qux/h1> if x-quz is an HTMLDivElement. Thus, the slash-tag becomes the optional indicator of base semantic element

[14:16:01.0000] <TabAtkins>
dglazkov: Same diff.  You're ignoring the one specified in <element>.

[14:16:18.0000] <TabAtkins>
dglazkov: Oh, no, I was supposing that you *could* do exactly that.

[14:16:36.0000] <dglazkov>
okay. Can you add this to wikeee

[14:16:38.0000] <TabAtkins>
So, for example, a phrasing element component could default-extend <span>, but then you could do /b, /i, /u, whatever.

[14:16:46.0000] <csuwldcat>
dglazkov: good point

[14:16:47.0000] <TabAtkins>
 /em

[14:17:09.0000] <dglazkov>
I just want this to be an option for specifying base semantics.

[14:17:10.0000] <TabAtkins>
dglazkov: What needs to be added?  What I just said is exactly what the wiki indicates. ^_^

[14:17:29.0000] <TabAtkins>
dglazkov: If you don't specify any base in <element>, I assume it extends <div> or somesuch.

[14:17:35.0000] <csuwldcat>
TabAtkins: the word override has proto smashing implications

[14:17:38.0000] <bkardell_>
tabatkins: but not what the wiki overrides

[14:17:42.0000] <csuwldcat>
he wants you to scope it tighter

[14:17:42.0000] <bkardell_>
:-p

[14:18:03.0000] <bkardell_>
indicates/overrides... see what I did there

[14:18:12.0000] <TabAtkins>
csuwldcat: It should indeed proto-smash.  If the element you're extending shows up in your proto, then doing /em should make HTMLEmElement show up in your proto chain.

[14:18:39.0000] <bkardell_>
tabatkins: but only if it is more specific?

[14:18:53.0000] <dglazkov>
TabAtkins: what if the custom element expects a certain proto (like methods, props)?

[14:19:00.0000] <TabAtkins>
bkardell_: No need to care about that.  (Anyway, I think the HTML*Element set are all leaf nodes.)

[14:19:12.0000] <TabAtkins>
dglazkov: Then you break at runtime, presumably.

[14:19:20.0000] <dglazkov>
TabAtkins: that seems bad?

[14:19:25.0000] <TabAtkins>
Don't do bad things?

[14:19:25.0000] <sjmiles_>
seems like you suys are into something else now

[14:19:35.0000] <sjmiles_>
I cant say "an input is now an img'

[14:19:41.0000] <sjmiles_>
why would I do that with custom elements?

[14:19:59.0000] <csuwldcat>
TabAtkins: can't do that

[14:20:00.0000] <TabAtkins>
sjmiles_: native elements don't extend each other.  Components can.

[14:20:02.0000] <sjmiles_>
I mean, I see there are interesting possibilities there, but adding new abilities seems a bad idea at this point

[14:20:14.0000] <sjmiles_>
yes, even more to the point

[14:20:28.0000] <sjmiles_>
if I extend x-bar from x-foo, I can't then say "shove x-zot" prototype on it

[14:20:32.0000] <TabAtkins>
Where do you get the information about what element you're extending if not from the proto chain?

[14:20:42.0000] <csuwldcat>
what if the original proto and the props/methods it offered were materially relied upon in the component logic?

[14:20:45.0000] <TabAtkins>
sjmiles_: You certainly can.  Just fiddle with __proto__.

[14:20:57.0000] <TabAtkins>
csuwldcat: Then it breaks.  Again, don't do stupid things.

[14:21:03.0000] <csuwldcat>
you smash that, it literally could be a monkey wrench in the gears

[14:21:04.0000] <sjmiles_>
yes, it utterly breaks

[14:21:20.0000] <sjmiles_>
it's nonesensical

[14:21:26.0000] <sjmiles_>
but with proper spelling

[14:21:31.0000] <TabAtkins>
For the situations we've talked about (component for all headings, all phrasing elements, all sectioning elements), it doesn't break.

[14:21:31.0000] <csuwldcat>
TabAtkins: the funny thing is, you don't know you're "doing stupid things"

[14:21:47.0000] <dglazkov>
TabAtkins: that's a total foot gun

[14:21:47.0000] <TabAtkins>
(Because the prototypes don't actually offer much of anything.)

[14:21:51.0000] <sjmiles_>
yes, this is what I'm calling 'new interesting possibilities', which IMO is a mistake to add on

[14:21:55.0000] <csuwldcat>
sure, now let's get real about how developers will actually try to use these things

[14:22:09.0000] <csuwldcat>
it will be a field of landmies

[14:22:11.0000] <sjmiles_>
most of what I'm doing is entirely dependent on a deterministic proto chain

[14:22:12.0000] <csuwldcat>
mines

[14:22:25.0000] <TabAtkins>
In Javascript you cna already do things like constructor.call(anotherObject).

[14:22:32.0000] <csuwldcat>
you just traded a handknife for a footgun

[14:22:38.0000] <sjmiles_>
yes, but if you just randomly do that, nothing will work

[14:22:44.0000] <csuwldcat>
yeah

[14:22:47.0000] <bkardell_>
tabatkins: but you have to at least know significant details of js and dom to do it

[14:22:55.0000] <TabAtkins>
sjmiles_: What are you doing that depends on a constant prototype chain?

[14:22:58.0000] <csuwldcat>
I just relied on the input's documentURI prop

[14:23:11.0000] <csuwldcat>
oops, they just smashed it with /button

[14:23:14.0000] <bkardell_>
tabatkins: declarative is a little bigger space of people right?

[14:23:15.0000] <csuwldcat>
no more documentURI

[14:23:28.0000] <csuwldcat>
but shucks, they *looked* just like two buttons

[14:23:28.0000] <sjmiles_>
TabAtkins: when I inherit Bar from Foo, Bar expects to use Foo's prototypical implementation

[14:23:36.0000] <sjmiles_>
TabAtkins: if it's not there, Bar will not work

[14:23:53.0000] <csuwldcat>
devs will make phenotypical judgements on interop

[14:24:19.0000] <TabAtkins>
sjmiles_: Only some elements have non-trivial prototypes.  The examples so-far-given where you want to be able to extend multiple elements identically all ahve trivial prototypes.

[14:24:20.0000] <astearns>
dglazkov: are you thinking of removing the optional indication of base semantics in <element> in favor of an optional indication in <x-component/base>?

[14:24:22.0000] <sjmiles_>
TabAtkins: I'm confused about this dicussion. In general, although you can call "Boat" constructor on a "Car" object, it doesn't mean it will float. :)

[14:24:35.0000] <csuwldcat>
to think that they are going to scan a hundred(s) lines long component definition for any use of a proto prop not to smash is a fairytale

[14:25:06.0000] <TabAtkins>
csuwldcat: No, I expect that authors usually won't use /foo at all.  When they can do so, hopefully it's documented.

[14:25:07.0000] <dglazkov>
astearns: all of these are proposals here: http://wiki.whatwg.org/wiki/Components

[14:25:11.0000] <csuwldcat>
sjmiles_: oh I like that

[14:25:29.0000] <TabAtkins>
The cases being handled by the override thing are those that I think are minority in the first place, but still interesting enough to be worth addressing.

[14:25:40.0000] <csuwldcat>
TabAtkins: Hope and Change hasn't worked out hardly as well as advertised in the past...

[14:25:53.0000] <sjmiles_>
Ok, I suspect I missed some key bit here and am arguing Quixotically

[14:26:09.0000] <csuwldcat>
sjmiles_: no, you're right on

[14:26:32.0000] <csuwldcat>
__proto__ setting will infact xfer props, but they will explode if you try to use them

[14:26:44.0000] <csuwldcat>
thus your Car/Boat thing was apropreate

[14:26:56.0000] <TabAtkins>
sjmiles_: The arguments I've heard so far for per-element base indication is, say, wanting a common API on all phrasing elements (<a>, <b>, <i>, <em>, <strong>, etc.).  In the current spec, you'd need to do this by defining a bunch of identical components.

[14:27:01.0000] <csuwldcat>
btw, I suck at spelling, ftr

[14:27:02.0000] <astearns>
dglazkov: right - I read into what you were saying above as option 6 *without* the default extension specified in <element> - removing the extends attribute of <element>

[14:27:37.0000] <TabAtkins>
My optional /foo thing lets you address this in a more natural way, by defining the component once and then saying which element it's extending per use (with a default extension still available).

[14:28:07.0000] <csuwldcat>
TabAtkins: will the rule of the day be defensive self-inspection code inside components?

[14:28:10.0000] <TabAtkins>
It seems obviously silly to do something like <x-drawing-surface/select>, though.

[14:28:36.0000] <TabAtkins>
csuwldcat: Why do you assume that "oh shit, the page doesn't work, maybe it's because I did something stupid by adding this extra /foo stuff" is insufficient?

[14:28:41.0000] <dglazkov>
astearns: no, not that :)

[14:28:48.0000] <csuwldcat>
<x-drawing-surface><select fallback></select></x-drawing-surface>

[14:28:59.0000] <TabAtkins>
(Alternately, we could define a set of pre-existing categories that you can extend from, which limits you.

[14:29:10.0000] <csuwldcat>
TabAtkins: I like that better

[14:29:25.0000] <sjmiles_>
TabAtkins: if I make 'x-sjmiles-cool' can I write <x-sjmiles-cool> in my html? that's what I want.

[14:29:37.0000] <dglazkov>
TabAtkins: I think the list is simply all tag names that have this prototype

[14:29:38.0000] <TabAtkins>
For example, saying <element name=x-foo extends=span category=phrasing> allows <x-foo/b>, but throws an error somewhere if you do <x-foo/input>.

[14:29:40.0000] <sjmiles_>
alternatives, options, and extensions are all fine by me

[14:29:44.0000] <csuwldcat>
especially if we're already throwing out the canard requirement that you have to have it operate without the linked doc

[14:30:04.0000] <TabAtkins>
dglazkov: Most tags are direct children of HTMLElement, though, so that's not a useful categorization scheme.

[14:30:24.0000] <dglazkov>
the use case where it's necessary is h1..h6 and what else?

[14:30:30.0000] <TabAtkins>
sjmiles_: Yes, once again, I've always been for that.  My proposal is the last entry in the wiki page, like I said before.

[14:30:42.0000] <TabAtkins>
dglazkov: Heading elements, phrasing elements, sectioning elements, maybe others?

[14:30:55.0000] <csuwldcat>
dglazkov: ol, ul

[14:30:57.0000] <annevk>
dglazkov: quote/blockquote ins/del share the interface too

[14:31:03.0000] <TabAtkins>
Ah yeah, lists make sense.

[14:31:12.0000] <dglazkov>
aha, all these guys.

[14:31:14.0000] <csuwldcat>
so, just to be clear

[14:31:16.0000] <annevk>
dglazkov: prolly a few others

[14:31:17.0000] <csuwldcat>
this is a need

[14:31:19.0000] <sjmiles_>
TabAtkins: great, but there is not general agreement on that core point. Once there is, I can go away. :)

[14:31:20.0000] <csuwldcat>
but not a proto need

[14:31:33.0000] <dglazkov>
csuwldcat: prototype never changes, correct.

[14:31:35.0000] <csuwldcat>
hmm

[14:31:46.0000] <csuwldcat>
well that's not exactely right

[14:31:49.0000] <dglazkov>
at least in my head :)

[14:31:57.0000] <TabAtkins>
sjmiles_: You dont' have to argue with me on that point, at least.

[14:32:07.0000] <csuwldcat>
let's imagine for a sec that some day in the future, we add some thing that only works on a ol

[14:32:15.0000] <csuwldcat>
some kind of sort or something

[14:32:28.0000] <TabAtkins>
dglazkov: It seems weird if <x-coolspan/b> has HTMLSpanElement in its prototype, rather than HTMLBoldElement.

[14:32:31.0000] <csuwldcat>
and then we have the need to be strictly bound

[14:32:42.0000] <dglazkov>
<element extends="ol" name="x-gar">.. </element> usage: <x-gar/ul> or <x-gar/ol>

[14:32:53.0000] <TabAtkins>
(Actually, <b> doesn't even ahve an interface of its own.)

[14:33:03.0000] <csuwldcat>
dglazkov: true enough

[14:33:33.0000] <TabAtkins>
dglazkov: Now, how do you establish such a restriction, such that <x-gar/input> is not allowed?

[14:33:39.0000] <TabAtkins>
(Also, what does "not allowed" mean?)

[14:33:43.0000] <csuwldcat>
TabAtkins: how could you?

[14:34:03.0000] <TabAtkins>
csuwldcat: I don't understand the question.  State it more explicitly?

[14:34:17.0000] <dglazkov>
look at slash-tag, and look at tag, if their base prototype is different, then throw away slash-tag

[14:34:36.0000] <TabAtkins>
dglazkov: Once again, that doesn't work.  <ol> and <ul> have different prototypes.

[14:34:38.0000] <csuwldcat>
How could you other than an inferred blacklist based off the diff between an explicit whitelist?

[14:35:01.0000] <dglazkov>
TabAtkins: ah, then my example is wrong

[14:35:05.0000] <TabAtkins>
*Some* categories of elements have a nice prototype relationship.  Definitely not all.

[14:35:25.0000] <TabAtkins>
For example, a lot of phrasing element just use HTMLElement directly - they don't even ahve their own unique interface.

[14:36:16.0000] <csuwldcat>
Where is the line between this whole debate and role="" (hopefully that isn't a stupid question - ducks)

[14:36:23.0000] <dglazkov>
<element name="x-fart"> (extends HTMLElement) usage: <x-fart/b> or any html tag that uses HTMLElement directly

[14:36:55.0000] <dglazkov>
<element name="x-burp" extends="HTMLHeadingElement"> usage <x-burp/h1>, <x-burp/h2>, etc.

[14:37:06.0000] <dglazkov>
whoa, me wrong

[14:37:15.0000] <TabAtkins>
dglazkov: Now you can't use <x-foo/time>?

[14:37:16.0000] <dglazkov>
<element name="x-burp" extends="h1">

[14:37:33.0000] <TabAtkins>
(Dude, please use standard metasyntactic variables.  It's annoying typing fart and burp.)

[14:37:40.0000] <dglazkov>
sorry :)

[14:38:05.0000] <csuwldcat>
TabAtkins: buzzkill!

[14:38:07.0000] <TabAtkins>
Note that <time> is, for most intents and purposes, a standard phrasing element.  The only difference is that it additionally has a .datetime property.

[14:38:08.0000] <csuwldcat>
:)

[14:38:28.0000] <TabAtkins>
But your test (compare prototype grandparents) would fail it.

[14:38:34.0000] <dglazkov>
<element name="x-zoot" extends="time"> can only be <x-zoot> and <x-zoot/time>

[14:38:44.0000] <dglazkov>
TabAtkins: yup.

[14:38:50.0000] <dglazkov>
we're not decorating here.

[14:38:55.0000] <csuwldcat>
dglazkov: yes that makes sense

[14:39:02.0000] <csuwldcat>
because if we're dling the linked doc

[14:39:06.0000] <dglazkov>
all types are deterministic. The optional notation is only to:

[14:39:09.0000] <csuwldcat>
we know they are always time

[14:39:20.0000] <TabAtkins>
dglazkov: I'm not decorating either.  I'm just saying that the difference between <b> and <time> isn't large enought to justify forever barring them from being used with the same component.

[14:39:31.0000] <csuwldcat>
and why would anyone masquerade one truly accurate semantic as another?

[14:39:39.0000] <csuwldcat>
other than the Heading case....

[14:39:45.0000] <dglazkov>
a) disambiguate tags have the same prototype

[14:39:57.0000] <dglazkov>
b) allow painting semantics on custom tags

[14:40:37.0000] <TabAtkins>
dglazkov: You didn't answer my objection.

[14:40:52.0000] <dglazkov>
TabAtkins: because it stomps on proto and makes a foot gun. Take time element for example

[14:41:10.0000] <TabAtkins>
The difference between <time> and <b>, or <data> and <b>, or perhaps others, isn't large enough to justify forever barring them from using the same component API.

[14:41:11.0000] <dglazkov>
suppose the component only uses datetime property on some condition (hover at a certain time)

[14:41:35.0000] <dglazkov>
the awesome author Bob takes this component (let's call it x-roo) and sticks it on a b

[14:41:39.0000] <dglazkov>
<x-roo/b>

[14:41:43.0000] <dglazkov>
everything looks great

[14:41:48.0000] <dglazkov>
then Bob ships the site

[14:41:51.0000] <TabAtkins>
It means that I must write two identical components, the only difference being that one is defined with <element name=x-foo extends=span> and the other is <element name=x-foo-data extends=data>.

[14:41:52.0000] <dglazkov>
and it breaks 3 hours later

[14:42:08.0000] <dglazkov>
it's a foot gun

[14:42:21.0000] <dglazkov>
TabAtkins: sure. that's how you should do it.

[14:42:40.0000] <TabAtkins>
dglazkov: You're misreading me.  If we're talking categories, and we care about possibly different protos, then I'm saying that *your categories are insufficient*, not *fuck categories, let people do whatever*.

[14:42:52.0000] <csuwldcat>
I agree with the footgun eventuality, it will happen, and there will be blood (cinema reference...nvm)

[14:43:03.0000] <TabAtkins>
For example, something like <element category=phrasing> could be used with /b and /time.

[14:43:11.0000] <dglazkov>
ohhh

[14:43:13.0000] <dglazkov>
I see

[14:43:28.0000] <dglazkov>
so the author of the component would have to build it knowingly for a category of elements

[14:43:37.0000] <csuwldcat>
TabAtkins: this is what I was saying earlier

[14:43:50.0000] <csuwldcat>
(2:35:31 PM) csuwldcat: How could you other than an inferred blacklist based off the diff between an explicit whitelist?

[14:44:04.0000] <csuwldcat>
category == that whitelist

[14:44:44.0000] <dglazkov>
TabAtkins: but if Bob the author attempts to use a component that was not built for a specific category, the browser says no.

[14:44:47.0000] <dglazkov>
right?

[14:44:51.0000] <TabAtkins>
csuwldcat: Since I had explicitly already introduced that as an option before you said that line, I was confused what you were trying to say.  ^_^

[14:44:59.0000] <TabAtkins>
dglazkov: What does "the browser says no" mean?

[14:45:05.0000] <csuwldcat>
TabAtkins: fair -nough

[14:45:07.0000] <dglazkov>
throw error, ignore, whatevs

[14:45:17.0000] <dglazkov>
TBD

[14:45:30.0000] <csuwldcat>
dglazkov: but what does it do in the meantime?

[14:45:55.0000] <csuwldcat>
and what does it do once it errors?

[14:46:15.0000] <csuwldcat>
disapear the element from render or just leave it with the error thrown?

[14:46:17.0000] <dglazkov>
since the override is secondary, I think we could just ignore it

[14:46:29.0000] <TabAtkins>
Ignoring the override is an acceptable answer to me.

[14:46:30.0000] <csuwldcat>
ok

[14:46:36.0000] <csuwldcat>
that makes sense

[14:46:51.0000] <TabAtkins>
This requires that we predefine some categories.

[14:46:52.0000] <dglazkov>
so if Bob does <x-zoo/input> and x-zoo has category="phrasing", it just defaults to <x-zoo>

[14:47:00.0000] <dglazkov>
TabAtkins: yay work!

[14:47:02.0000] <TabAtkins>
It also means we should consider whether this is actually worth this effort.

[14:47:12.0000] <sjmiles_>
TabAtkins: ^ this

[14:47:16.0000] <dglazkov>
TabAtkins: also, this can be done later.

[14:47:23.0000] <dglazkov>
TabAtkins: new feature

[14:47:28.0000] <csuwldcat>
TabAtkins: ^ yep +1

[14:47:59.0000] <sjmiles_>
you are the heavy hitters, resolve [Bug 18669] first please

[14:48:00.0000] <dglazkov>
we can start with just making slash-tag an option to paint semantics

[14:48:07.0000] <csuwldcat>
I'd want to take a long hard look at the % of real use-cases we expect, and how much more it adds that can confuse

[14:48:14.0000] <sjmiles_>
/me is stuck in a rut

[14:48:46.0000] <dglazkov>
sorry, sjmiles_

[14:49:00.0000] <dglazkov>
look another TAG member!

[14:49:16.0000] <csuwldcat>
sjmiles_: Call a x-towtruck/winch...but only if the towtruck is compatible, no worries, you'll find out async after the two truck driver already arrives ;)

[14:49:22.0000] <dglazkov>
/me is easily distracted

[14:49:54.0000] <sjmiles_>
csuwldcat: TabAtkins is particularly good at making things like that actually work, so dont' take it off the table!

[14:50:05.0000] <dglazkov>
we have people at various stages of acceptance. This is consensus-driven, so we need have them all

[14:50:06.0000] <csuwldcat>
haha, ok, agreed

[14:50:17.0000] <csuwldcat>
wellllll

[14:50:31.0000] <dglazkov>
1) Hixie I think is the closest to the finish line

[14:50:37.0000] <sjmiles_>
we beat some of the stakeholders into silence (but not submission)

[14:51:03.0000] <dglazkov>
2) annevk is unknown

[14:51:08.0000] <csuwldcat>
dglazkov: is the finish line a high precipice of some sort?

[14:51:09.0000] <dglazkov>
3) hober is just starting

[14:51:44.0000] <dglazkov>
csuwldcat: I think general understanding of the problem and seeing the spectrum of solutions

[14:52:00.0000] <csuwldcat>
dglazkov: do you get the sense he will agree to an optional solution wrt semantics?

[14:52:18.0000] <dglazkov>
4) csuwldcat is way over finish line, far far beyond the horizon. We can only hear his screams

[14:52:20.0000] <csuwldcat>
I was not getting that feeling, just saying...

[14:52:37.0000] <csuwldcat>
haha, I've already won 7 tour de frances

[14:52:47.0000] <csuwldcat>
no doping either

[14:53:11.0000] <dglazkov>
I don't take Hixie's opinion lightly. If he has a strong opinion, there's a good reason for it.

[14:53:38.0000] <csuwldcat>
dglazkov: I agree it is a completely valid case/desire, never robbed him of that fact

[14:54:05.0000] <csuwldcat>
just how product relevant it is to the world large and the on-the-ground rate of applicable occurrence

[14:57:17.0000] <sjmiles_>
optional FTW

[14:59:36.0000] <hober>
dglazkov: you have to be careful to not end up in "consensus by exhaustion" territory

[15:02:21.0000] <dglazkov>
hober: I just want consensus.

[15:02:30.0000] <dglazkov>
exhaustion is optional.

[15:03:52.0000] <hober>
heh. i predict that, whether or not we manage to get consensus, exhaustion will have turned out to be mandatory :)

[15:09:08.0000] <dglazkov>
well, it's likely. I'll grant you that.

[15:56:20.0000] <dglazkov>
awesome discussion everyone, by the way


2013-01-12
[17:16:04.0000] <Hixie>
hsivonen: ping on https://www.w3.org/Bugs/Public/show_bug.cgi?id=17869 (does the proposal at the end work for you?)

[01:17:27.0000] <annevk>
dglazkov: hey, "Okay." is not a list :p


2013-01-13
[09:30:56.0000] <sfswgn>
how do you register a new meta extension?

[09:32:01.0000] <sfswgn>
and why are no twitter meta extensions on the list?

[09:34:00.0000] <sfswgn>
?

[09:35:08.0000] <Ms2ger>
Because nobody added them, presumably

[09:35:14.0000] <Ms2ger>
Or because there's no spec

[09:36:24.0000] <sfswgn>
could I help with adding them?

[09:36:29.0000] <sfswgn>
no spec?

[09:36:39.0000] <sfswgn>
https://dev.twitter.com/docs/cards

[09:40:21.0000] <Ms2ger>
It's a wiki

[09:40:32.0000] <Ms2ger>
You request an account, and you edit the page

[09:42:16.0000] <sfswgn>
is the link I gave what is considered a spec?

[09:43:24.0000] <Ms2ger>
Dunno, compare it with the specs that are linked?

[09:44:16.0000] <sfswgn>
I'd like to request an account

[09:44:29.0000] <Ms2ger>
Go ahead

[09:44:40.0000] <sfswgn>
how?

[09:44:43.0000] <Ms2ger>
You need to email somewhere, I believe

[09:44:51.0000] <Ms2ger>
It's on the main page of the wiki, at least

[09:45:39.0000] <sfswgn>
is it worth getting meta extensions registered just to validate a website in the w3c validator?

[09:46:30.0000] <Ms2ger>
Depends on how much you care about the validation and how much your time is worth to you, I guess

[09:46:59.0000] <sfswgn>
it takes a long time to get a meta name registered?

[09:49:03.0000] <Ms2ger>
Just changing the page, I believe

[09:49:14.0000] <Ms2ger>
And possibly pestering the validator people to update

[09:50:12.0000] <sfswgn>
is it hard to get them to update?

[09:50:23.0000] <Ms2ger>
Probably not

[09:53:14.0000] <MikeSmith>
I can update it this week

[09:53:36.0000] <Ms2ger>
He's gone already

[09:53:41.0000] <MikeSmith>
ah ok

[09:55:03.0000] <MikeSmith>
I have my client set to not show parts (too much noise when trying to read channels on mobile)

[15:52:00.0000] <GPHemsley>
Ms2ger: FYI, you have the power to create wiki users. (You are a permanent member of the autoconfirmed users group.)


2013-01-14
[16:03:33.0000] <heycam>
w3.org down?

[18:30:21.0000] <paul_irish>
hober: can you help me out with a whatwg wiki account? username "Paul Irish"

[18:50:14.0000] <MikeSmith>
paul_irish: will try to see if I have perms

[18:51:00.0000] <paul_irish>
you do

[18:51:03.0000] <MikeSmith>
heycam|away: entire MIT network is dropping off due to a routing problem

[18:51:18.0000] <MikeSmith>
paul_irish: ok gimme a minute

[18:51:24.0000] <paul_irish>
no rush! :)

[18:55:19.0000] <MikeSmith>
paul_irish: ok, you want the account created?

[20:14:42.0000] <paul_irish>
MikeSmith: yeah

[20:19:13.0000] <MikeSmith>
paul_irish: pusshed on the button on it a while back

[20:19:22.0000] <MikeSmith>
should be mail in your inbox

[20:19:29.0000] <MikeSmith>
sent to your gmail account

[20:24:42.0000] <paul_irish>
thx dude

[01:01:40.0000] <annevk>
If an interface has a constructor, does a derived interface necessarily need a constructor?

[02:12:31.0000] <annevk>
I had not realized UI Events was just some patching on top of DOM3 Events :/

[02:27:40.0000] <annevk>
smaug____: we could also do new EventTarget(eventParent)

[02:27:46.0000] <annevk>
smaug____: I think

[02:28:21.0000] <annevk>
smaug____: we could even consider always exposing the eventParent as a readonly attribute on EventTarget, but I'm not sure that's worth it

[02:28:48.0000] <hsivonen>
from the department of entirely unsurprising news: the IE9 mode in IE10 does not actually match IE9. For example, IE9 mode in IE10 accepts unprefixed 2D transforms but real IE9 does not (requires -ms-).

[02:30:29.0000] <annevk>
"House of cards"

[02:30:51.0000] <smaug____>
I think we need some kind of parent

[02:31:06.0000] <smaug____>
but having it in EventTarget might be a bit odd

[02:31:38.0000] <smaug____>
though...

[02:31:40.0000] <annevk>
smaug____: Why do we need to expose it explicitly?

[02:31:57.0000] <smaug____>
because it makes sense ?

[02:32:02.0000] <smaug____>
:)

[02:32:11.0000] <annevk>
smaug____: The best kind of argument

[02:32:35.0000] <smaug____>
I wonder if IDB might need eventParent

[02:32:40.0000] <smaug____>
need to ask sicking about that

[02:33:27.0000] <annevk>
Well I'm going to rewrite concept-event-dispatch to use an "event parent" concept at least to calculate the object chain before dispatching

[02:33:47.0000] <annevk>
So IDB and others can use that

[02:34:30.0000] <annevk>
But it does not need to be exposed. E.g. that for event purposes Window is the parent of Document is not exposed in such a way either at the moment

[02:35:42.0000] <smaug____>
it is

[02:35:54.0000] <smaug____>
.defaultView

[02:36:52.0000] <annevk>
That's not really convincing and was not introduced for that purpose at all...

[03:13:39.0000] <SimonSapin>
Hi annevk_. A few questions about http://encoding.spec.whatwg.org/#utf-8-decoder ‚Ä¶

[03:14:20.0000] <annevk>
SimonSapin: what about it?

[03:14:46.0000] <SimonSapin>
the algorithm "returns" one code point/EOF/error and is called repeatedly, right?

[03:15:22.0000] <SimonSapin>
when it says "emit" something, the steps stop there for this iteration

[03:16:23.0000] <SimonSapin>
"Let byte be the value at byte pointer." is that a copy, or does byte (potentially) change when byte pointer does?

[03:24:35.0000] <SimonSapin>
annevk: and I think that "Increase the byte pointer by one." is not at the right place, but I‚Äôm not sure what would fix it

[03:25:33.0000] <SimonSapin>
and it might be possible to avoid "Decrease the byte pointer by one." by moving the range checking earlier

[03:26:26.0000] <annevk>
SimonSapin: /byte/ is either a copy or a pointer, but if byte pointer changes byte does not

[03:28:23.0000] <annevk>
SimonSapin: I believe the algorithm is correct though

[03:28:36.0000] <annevk>
SimonSapin: but there's many ways to implement a utf-8 decoder

[03:29:16.0000] <SimonSapin>
annevk: it‚Äôs probably correct, but I don‚Äôt find it very clear

[03:29:51.0000] <SimonSapin>
it‚Äôs not obvious that you should not continue the steps after "emit"

[03:30:19.0000] <annevk>
SimonSapin: did you read section 4?

[03:31:13.0000] <annevk>
but yeah, I'm not entirely satisfied with how that works at the moment

[03:31:50.0000] <SimonSapin>
section 4 might be what I was missing

[03:31:53.0000] <annevk>
I did it mainly this way to reduce the overhead as it would be the same everywhere, but maybe self-contained algorithms would be better

[03:32:59.0000] <SimonSapin>
maybe just refer to section 4 every time

[03:33:33.0000] <SimonSapin>
annevk: anyway I started https://github.com/SimonSapin/rust-webencodings

[03:33:39.0000] <SimonSapin>
and learning rust along the way

[03:33:53.0000] <annevk>
oh cool

[03:33:58.0000] <annevk>
you should tell the Mozilla guys

[03:34:04.0000] <annevk>
they might wanna use it ;)

[03:35:05.0000] <SimonSapin>
I will, once it does a bit more

[03:37:37.0000] <annevk>
SimonSapin: fwiw, seems they already link to section 4

[03:38:06.0000] <annevk>
"The utf-8 decoder (decoder for utf-8) is:" the second "decoder" is a link back to what decoder actually means

[03:38:22.0000] <SimonSapin>
oh, missed that

[03:47:41.0000] <SimonSapin>
annevk: do you have encoding tests?

[03:48:17.0000] <annevk>
SimonSapin: I have http://dump.testsuite.org/encoding/single-byte-test.html

[03:48:40.0000] <annevk>
I've been meaning to convert that one to testharness.js to make Ms2ger happy

[03:49:00.0000] <annevk>
I'd need some information on whether using PHP is fine...

[03:49:28.0000] <darobin>
annevk: using PHP is fine

[03:49:46.0000] <darobin>
it just needs to get reviewed before being imported to the test server

[03:49:56.0000] <darobin>
but since the repo isn't synced yet, that's not an immediate problem

[03:49:57.0000] <annevk>
darobin: so the other problem with that test seems to be that it triggers the slow script dialog in Gecko

[03:50:50.0000] <annevk>
darobin: I could probably make it 30 or so static files instead generated with Python

[03:51:06.0000] <darobin>
annevk: doesn't trigger that here, though it did trigger my mental "There's something wrong here" dialog :)

[03:51:16.0000] <annevk>
although hmmm might require some .htaccess

[03:51:22.0000] <annevk>
heh

[03:51:43.0000] <annevk>
it fetches the same thing about 50 times or so sync

[03:51:53.0000] <annevk>
each time with a different header

[03:52:35.0000] <darobin>
hmmm, synchronous XHR, adding methods to a core prototype ‚Äî full of lovely :)

[03:55:20.0000] <annevk>
darobin: well all that can be rewritten, the test was mostly a quick hack to figure a few things out

[03:55:40.0000] <annevk>
just not sure what the desired features are of a largish test

[03:57:17.0000] <darobin>
annevk: I know, I was just poking fun

[03:57:38.0000] <darobin>
annevk: I wonder, could this be turned into a bunch of distinct tests?

[03:57:49.0000] <darobin>
with testharness and all

[03:57:54.0000] <annevk>
yeah, as I said, I could generate them from Python

[03:57:56.0000] <darobin>
just so that it doesn't trigger any slowness warnings

[03:57:58.0000] <annevk>
or some other language

[03:58:09.0000] <darobin>
ah, ok that's what you meant ‚Äî sorry, wasn't clear on that bit

[03:58:10.0000] <SimonSapin>
annevk: testing single bytes encoding based on their index is easy enough. I‚Äôm more interested in corner cases like how many replacement characters do you get for a given invalid UTF-8 sequence

[03:58:44.0000] <annevk>
SimonSapin: http://code.google.com/p/stringencoding/ might have tests

[03:58:45.0000] <darobin>
annevk: I don't have a strong opinion, but at the very least if it's going to be big and slow it's better if there's some sort of progress indication

[03:59:03.0000] <darobin>
even if it's just a <pre> listing the parts being tested

[03:59:21.0000] <annevk>
SimonSapin: agreed that those are more desirable

[04:00:02.0000] <darobin>
I reckon that making it xhr-async will cause it to spin the event loop often enough to avoid the slow script dialog

[06:03:22.0000] <MikeSmith>
annevk: did you before have a thing somewhere like http://www.lookout.net/test/url/url-liveview.html ?

[06:03:52.0000] <MikeSmith>
Chris says in his blog post he thought you did but he can't remember the address

[06:04:00.0000] <annevk>
http://dump.testsuite.org/url/inspect.html

[06:04:07.0000] <annevk>
I commented on his G+ post

[06:05:09.0000] <annevk>
How did you get the correct link to his tool? :)

[06:05:10.0000] <MikeSmith>
ah ok

[06:05:29.0000] <MikeSmith>
annevk: through URL surgery

[06:05:41.0000] <annevk>
heh

[06:05:47.0000] <MikeSmith>
fitting :)

[06:06:03.0000] <hsivonen>
http://www.delorie.com:81/some/url.txt is down. Does anyone know a substitute?

[06:06:51.0000] <annevk>
hsivonen: something like http://software.hixie.ch/utilities/cgi/test-tools/echo maybe?

[06:07:30.0000] <hsivonen>
annevk: thanks. not quite as pure but works for my purposes today

[06:07:50.0000] <annevk>
yeah, the raw dump stuff was nice

[06:10:10.0000] <hsivonen>
can ‚ÄúBrowser Modes‚Äù 7 through 9 (not ‚ÄúDocument Modes‚Äù) in IE10 be activated by means other than the dev tools?

[06:10:25.0000] <hsivonen>
that is, can an intranet admin activate them for particular sites?

[06:11:34.0000] <hsivonen>
oh awesome. IE10 doesn‚Äôt have application/xml in Accept

[06:11:38.0000] <hsivonen>
we should drop that

[06:12:31.0000] <hsivonen>
oh. IE9 doesn‚Äôt either

[06:12:34.0000] <hsivonen>
I thought it did

[06:20:51.0000] <annevk>
Heh https://twitter.com/aaronsw/status/140810339771097088 hadn't seen that before

[06:27:21.0000] <MikeSmith>
heh

[06:32:40.0000] <jesusruiz>
one question, WHATWG specification differs from the W3C specification?.

[06:33:47.0000] <jesusruiz>
I speak from the time of the final specification, the W3C that seem set for 2014.

[06:34:27.0000] <jesusruiz>
But I do not see the WHATWG definite date.

[06:35:44.0000] <hsivonen>
jesusruiz: It‚Äôs a living spec. There‚Äôs no end date.

[06:37:18.0000] <jesusruiz>
hsivonen thanks for the reply ;)

[06:38:50.0000] <jesusruiz>
What I have not entirely clear is, after a bit of separation that has had the WHATG and W3C specification that must be followed.

[06:39:13.0000] <jesusruiz>
I like the freedom of WHATG.

[06:39:20.0000] <jesusruiz>
WHATWG

[06:40:10.0000] <jesusruiz>
but if the specs are going to be something different, and not as a developer which follow.

[06:41:08.0000] <hsivonen>
jesusruiz: follow the WHATWG spec

[06:41:36.0000] <hsivonen>
jesusruiz: the W3C spec will be out of date by construction, since the W3C publishes snapshots

[06:42:19.0000] <jesusruiz>
hsivonen Yes, I feel more identified with this group. So I think you're right.

[06:43:10.0000] <jesusruiz>
It is an important reason you mention.

[07:02:56.0000] <Ms2ger>
annevk, I'm so glad you want to make me happy :)

[07:03:23.0000] <Ms2ger>
GPHemsley, sounds like work...

[07:42:00.0000] <Stevef>
hsivonen: HTML 5.1 is only a little behind and in front in some ways

[08:06:58.0000] <MikeSmith>
http://lists.webkit.org/pipermail/webkit-dev/2013-January/023326.html

[08:07:13.0000] <MikeSmith>
(Sent from)

[08:09:08.0000] <Ms2ger>
Oh really

[09:25:19.0000] <dglazkov>
good morning, Whatwg!

[09:41:16.0000] <hober>
paul_irish: sorry, just seeing your msg now. thankfully MikeSmith got to you first. :)

[09:51:52.0000] <paul_irish>
hober: yup! np thx

[10:47:43.0000] <stevefaulkner>
MikeSmith: can you give me the URL for the numarkup dev validator?

[11:04:30.0000] <Ms2ger>
"To me, it looks longer."

[11:16:42.0000] <Ms2ger>
Hear, hear: https://www.w3.org/Bugs/Public/show_bug.cgi?id=20665

[11:27:12.0000] <GPHemsley>
Ms2ger: I'm just saying, if somebody comes to you and asks, you can help them. ;)

[11:27:57.0000] <Ms2ger>
GPHemsley, I wish I didn't know that :)

[11:28:34.0000] <GPHemsley>
Ms2ger: If it makes you feel any better, there are a bunch of people in this channel who have that power.

[11:29:17.0000] <GPHemsley>
http://wiki.whatwg.org/index.php?title=Special:ListUsers&group=autoconfirmed

[11:29:45.0000] <Ms2ger>
Good to know

[11:31:01.0000] <GPHemsley>
(And I'm happy to add more people to that list, if anyone wants to make suggestions.)

[11:32:46.0000] <jesusruiz>
GPHemsley Do you only keep the wiki?

[11:33:13.0000] <GPHemsley>
jesusruiz: I think I'm chief in charge, but I believe there are others. Why?

[11:33:15.0000] <jesusruiz>
documentation of the specification, not keep you?

[11:33:39.0000] <GPHemsley>
jesusruiz: Specifications are generally not maintained via the wiki.

[11:34:00.0000] <jesusruiz>
I know that is not normal, but you are missing a possible translation of the documentation.

[11:34:34.0000] <jesusruiz>
a platform that could help translate into some languages.

[11:35:04.0000] <jesusruiz>
but well, neither does the W3C. So, time to time :)

[11:35:50.0000] <jesusruiz>
GPHemsley thanks for the info ;)

[11:36:04.0000] <Ms2ger>
/me has never seen the point of translating specifications

[11:36:50.0000] <GPHemsley>
jesusruiz: Well, I'm not in charge of that. You'll have to talk to Hixie or others with more influence on that.

[11:37:13.0000] <jesusruiz>
Well, for those who know English no problem. In fact, English is very common to know, but some people do not know the language.

[11:37:37.0000] <Ms2ger>
Do those people implement browsers?

[11:38:09.0000] <jesusruiz>
for example php is translating the documentation. It was a simple idea.

[11:38:33.0000] <Ms2ger>
Specification != documentation

[11:39:04.0000] <Ms2ger>
Translating documentation makes a lot of sense, but we're not in the documentation business

[11:41:34.0000] <jesusruiz>
 Ms2ger Yeah, right. Anyway, I guess the documentation can be translated personally by others. Always keeping course and asking permission rights.

[11:43:47.0000] <jesusruiz>
I ask on the mailing list :) Thanks to all

[13:08:46.0000] <jgraham>
https://www.frederik-braun.com/thesis/ (via miketaylr)

[13:09:24.0000] <jgraham>
Also, it looks like crap in pdf.js, if someone wants to report that

[13:11:17.0000] <jgraham>
Also, 73 pages? That's crazy-short (doesn't mean that it's not good, of course)

[14:40:03.0000] <eighty4>
gsnedders: You should know this :) What version/revision of html5 was target deprecated? http://dev.w3.org/html5/markup/a.html#a.attrs.target "The target attribute on the a element was deprecated in a previous version of HTML, but is no longer deprecated"

[14:46:17.0000] <tantek>
4

[14:55:44.0000] <eighty4>
gsnedders: right‚Ä¶ some kind of brain**** nevermind.

[15:22:32.0000] <annevk>
Translation of specifications is most definitely useful. Not everyone knows English growing up (or for that matter later in life) and yet might want to know the inner workings of the web.

[15:23:26.0000] <annevk>
We lose out on massive amounts of feedback from the Japanese community alone due to the language barrier as far as I can tell.

[15:32:24.0000] <zewt>
massive amounts of useless feedback about mistranslations

[15:43:31.0000] <Hixie>
abarth: could you chat with Nasko and decide if Chrome wants or does not want cross-origin seamless iframes?

[15:50:59.0000] <jamesr>
Hixie, woah

[15:52:05.0000] <Hixie>
woah?

[15:54:36.0000] <annevk>
zewt: I think there would be some benefits to not having this huge Western bias, but it's hard to proof. Fortunately to some extent things are being translated (e.g. by myakura) and bits of feedback do come through.

[15:55:00.0000] <annevk>
Hixie: cross-origin <iframe seamless> without events is still a useful feature I think

[15:55:40.0000] <annevk>
Hixie: I thought it was pretty clear that introducing new synchronous cross-origin object access was a no-go

[15:56:40.0000] <Hixie>
i don't have this topic paged in right now

[15:56:44.0000] <Hixie>
so i've no idea what you're saying. :-)

[15:57:21.0000] <annevk>
Hixie: maybe buy some more RAM at Fry's?

[15:57:31.0000] <Hixie>
they don't sell ram compatible with my motherboard :-(

[15:57:43.0000] <annevk>
man, sad times


2013-01-15
[16:00:24.0000] <annevk>
This exchange right here between David and Patrick: https://twitter.com/dstorey/status/290967431902543873

[16:00:31.0000] <annevk>
#comedygold

[16:02:30.0000] <Hixie>
should we spec navigator.product?

[16:03:16.0000] <Hixie>
spec currently has it commented out with:    <!-- product: Mozilla and Safari only; always returns "Gecko" -->

[16:04:09.0000] <annevk>
I'm surprised IE found out before Opera

[16:04:33.0000] <hober>
didn't opera ship navigator.product=="Gecko" first, before even gecko?

[16:04:49.0000] <annevk>
hober: sounds plausible

[16:06:22.0000] <gsnedders>
It was removed in 2.x.277

[16:07:55.0000] <gsnedders>
But is in browser.js for a number of sites.

[16:08:26.0000] <annevk>
Very encouraging that Travis files such a bug though. It's awesome to hear about such issues. Especially as not having it probably increases the barrier to entry.

[16:11:49.0000] <gsnedders>
I wonder if navigator.productSub is needed too.

[16:11:59.0000] <MikeSmith>
that David and Patrick thread is good

[16:17:54.0000] <MikeSmith>
if any production sites were doing anything with productSub I'd wonder why

[16:18:26.0000] <MikeSmith>
but then I guess the same could be said about navigator.product

[16:19:07.0000] <gsnedders>
FCKEditor used to, at least

[16:19:38.0000] <gsnedders>
Like, navigator.product == "Gecko" && navigator.productSub > 20031123 or something like that

[16:27:52.0000] <MikeSmith>
ah

[16:28:04.0000] <MikeSmith>
greater than

[16:28:46.0000] <MikeSmith>
the whacky whacky web

[16:29:54.0000] <MikeSmith>
or Âè§ÊÄ™Âè§ÊÄ™ÁöÑÁΩë as they call it in China

[16:31:11.0000] <abarth>
Hixie: sure

[16:31:24.0000] <Hixie>
every now and then i get an e-mail that i cannot make head or tails of

[16:31:31.0000] <Hixie>
and then i notice it was sent to a mailing list that isn't the whatwg list

[16:31:38.0000] <Hixie>
and i breathe a sigh of relief as i move on

[16:56:51.0000] <MikeSmith>
Hixie: you been reading the www-tag list too much

[16:57:05.0000] <MikeSmith>
either that or es-discuss

[16:58:35.0000] <Hixie>
i'm on es-discuss, but heavily filtered

[16:58:38.0000] <Hixie>
anything specific?

[17:00:11.0000] <MikeSmith>
no I was just being obnoxious. I imagine the es-discuss threads are clear if you take the time read up on the context

[17:00:34.0000] <MikeSmith>
though I can also imagine that would require a lot of time

[17:00:48.0000] <Hixie>
oh, sorry, didn't realise you were being a smartass regarding my last comment :-P

[17:01:55.0000] <MikeSmith>
I know, you're stunned because I'm usually so deadly serious

[17:02:09.0000] <Hixie>
:-P

[17:02:48.0000] <MikeSmith>
this is my new IRC persona for 2013

[21:11:39.0000] <kamathln>
hi . is there a screen orientation change

[21:11:47.0000] <kamathln>
doh

[21:11:57.0000] <zewt>
presumably, if you reorient your screen

[21:12:23.0000] <kamathln>
hi . is there a 'screen orientation' change event like 'device orientation' change event?

[21:12:28.0000] <kamathln>
zewt ^^

[21:13:39.0000] <kamathln>
if there is, it would be usefull in cases when we enable screen 'autorotation' like in Android

[21:15:46.0000] <MikeSmith>
kamathln: there's a draft spec for it

[21:16:02.0000] <kamathln>
MikeSmith: Cool! Thanks.

[21:16:06.0000] <MikeSmith>
lemme get your the URL

[21:16:14.0000] <MikeSmith>
not sure where it's implemented

[21:17:27.0000] <MikeSmith>
I think in the case of WebKit there is somebody from Samsung working on a patch but there is not agreement in the WebKit community about landing the patch

[21:18:48.0000] <zewt>
multiple types of orientation doesn't exactly sound promising

[21:19:31.0000] <MikeSmith>
well it's just the same word but two very different things

[21:19:52.0000] <MikeSmith>
kamathln: https://dvcs.w3.org/hg/screen-orientation/raw-file/tip/Overview.html

[21:20:15.0000] <MikeSmith>
the screen one could just as well be called screemode or somethig

[21:21:41.0000] <MikeSmith>
kamathln: for the related WebKit thread, see http://lists.webkit.org/pipermail/webkit-dev/2012-November/thread.html#22951

[21:21:57.0000] <kamathln_>
it worked well, till I rotated it throughly and the screen re-oriented

[21:22:05.0000] <kamathln_>
thats when I realized the need

[21:22:13.0000] <MikeSmith>
I think it may already be Firefox

[21:22:21.0000] <MikeSmith>
volkmar would know

[21:22:54.0000] <kamathln_>
MikeSmith: Thats nice! I am trying everythign in Firefox. Personally I am a fan of Firefox and trying all these stuff there.

[21:23:14.0000] <kamathln_>
MikeSmith: thanks for the linkies

[21:23:21.0000] <MikeSmith>
Android port of Firefox is pretty nice

[21:23:29.0000] <MikeSmith>
kamathln_: yeah cheers

[22:25:37.0000] <MikeSmith>
grr I guess I need to finally upgrade to Lion. Can't even build mac port of WebKit to check layout test failures

[22:50:58.0000] <othermaciej>
MikeSmith: Lion? Not all the way to Mountain Lion?

[22:51:11.0000] <othermaciej>
MikeSmith: my understanding is that SL --> Lion is the big hardware support discontinuity

[22:51:18.0000] <othermaciej>
MikeSmith: but yeah, we don't really support SL any more

[22:56:35.0000] <MikeSmith>
yeah whatever the latest OS is

[23:19:25.0000] <hsivonen>
Lion supports my laptop but Mountain Lion does not. So I installed Ubuntu.

[23:20:03.0000] <hsivonen>
It annoys me that Apple doesn‚Äôt communicate OS support levels properly.

[23:20:35.0000] <hsivonen>
For example, Snow Leopard got the Java plug-in blacklisting, but it‚Äôs not clear if it otherwise gets security patches

[23:21:32.0000] <hsivonen>
And people who run PPC software from Adobe or even Macromedia can‚Äôt upgrade from Snow Leopard just for the price of the OS upgrade

[02:19:32.0000] <kamathln>
volkmar: MikeSmith: in firefox window.screen.onmozorientation=function(){blah; useforsomethign(window.screen.mozOrientation); blah;}

[02:40:30.0000] <annevk>
https://twitter.com/koalie/status/291132240656752641 sounds like not much has changed.

[02:58:57.0000] <Somatt_wrk_>
any insights about having a direct relation between a label and it's checkbox input's state ?

[02:59:41.0000] <Somatt_wrk_>
I mean, it seems that such a link is desirable and should exist in the html sepcifications...

[03:01:05.0000] <volkmar>
kamathln: Screen Orientation API is implemented in Firefox

[03:01:34.0000] <volkmar>
kamathln: on Desktop, it will "guess" based on your screen width/height, on Mobile (Android and FxOS), it will use the sensors

[03:03:57.0000] <kamathln>
volkmar: you mean  window.screen.onmozorientation right?

[03:07:39.0000] <annevk>
Looks like that is obsolete: https://developer.mozilla.org/en-US/docs/DOM/MozOrientation

[03:08:02.0000] <volkmar>
annevk: MozOrientation is sensor events

[03:08:15.0000] <volkmar>
kamathln: yes

[03:09:07.0000] <volkmar>
kamathln: actually, screen.mozOrientation

[03:09:15.0000] <volkmar>
kamathln: and screen.onmozorientationchange

[03:09:30.0000] <volkmar>
screen.mozLockOrientation()

[03:09:36.0000] <volkmar>
and screen.mozUnlockOrientation()

[03:46:08.0000] <kamathln_>
volkmar: thanks! Amazing to think Firefox had it all since 3.6 !

[03:47:21.0000] <volkmar>
kamathln_: not 3.6, really

[03:47:55.0000] <kamathln_>
oh. It says so here - https://developer.mozilla.org/en-US/docs/DOM/MozOrientation

[03:48:06.0000] <volkmar>
kamathln_: this is a different feature

[03:48:07.0000] <kamathln_>
Introduced in Gecko 1.9.2

[03:48:42.0000] <volkmar>
kamathln_: the page you are looking at is about sending sensor eveteents

[03:48:45.0000] <volkmar>
events, even

[03:48:54.0000] <kamathln_>
I know. Thats why I found it strange that DeviceOrientation actually obsoleted MozOrientation

[03:49:15.0000] <volkmar>
it is implemented since Firefox 14

[03:49:28.0000] <volkmar>
https://bugzilla.mozilla.org/show_bug.cgi?id=740188 and https://bugzilla.mozilla.org/show_bug.cgi?id=720794

[03:49:30.0000] <kamathln_>
oh wait. I got my confusion. Sorry

[06:32:17.0000] <Ms2ger>
darobin, do you want me to go through the removed files in your PR or can I just merge?

[06:32:53.0000] <darobin>
Ms2ger: maybe look at the file names to double-check? I'm pretty sure it's correct

[06:33:08.0000] <Ms2ger>
Alright, I'll look later, then :)

[06:34:33.0000] <darobin>
Ms2ger: cheers mate

[06:34:57.0000] <Ms2ger>
Thanks for your work, too!

[06:35:01.0000] <darobin>
I should go to boring meetings more often, it always makes me very productive

[06:35:07.0000] <Ms2ger>
Do you know about w3c-test.org, btw?

[06:35:16.0000] <darobin>
you mean syncing to it?

[06:35:22.0000] <Ms2ger>
Yeah

[06:35:31.0000] <darobin>
MikeSmith is on that

[06:35:40.0000] <Ms2ger>
Or, I dunno, if someone is going to blow it up, I'd like to know too :)

[06:36:02.0000] <darobin>
(or at least I think that's what I understood from talking to him yesterday)

[06:36:04.0000] <darobin>
hahaha

[06:42:51.0000] <manu-db>
hey darobin (and Hixie if he's around) - we got rid of using the term IRI in the JSON-LD spec and started using URL instead - people are flipping out - is there a solid set of argumentation for why the HTML5 spec uses URL instead of IRI that I can link to?

[06:43:43.0000] <manu-db>
The argumentation that we used was that web developers are less familiar with IRI than they are with URL - and other people have complained when we use IRI for that very reason.

[06:44:33.0000] <manu-db>
Since the feedback to go from IRI to URL was your idea (passes the buck) :) - I was wondering what settled this discussion for the HTML5 spec...

[06:46:10.0000] <manu-db>
this also affects the Web Payments work (same complaint over the use of IRI there... folks want us to use URL)

[06:48:14.0000] <hsivonen>
manu-db: is this for using the *R* things as network addresses or as opaque strings that can be compared for equality?

[06:49:30.0000] <manu-db>
hsivonen: both :) - we had been talking about IRIs throughout the spec - those IRIs can be used opaquely, but some of them are used to identify *R* things.

[06:50:51.0000] <hsivonen>
hmm. URL might indeed be a harder sell for the identifier use. after all, that‚Äôs where URI came from

[06:50:54.0000] <hsivonen>
manu-db: good luck

[06:50:58.0000] <manu-db>
hsivonen: I've heard enough complaints about IRI throughout the years that I wanted to just try aligning w/ the HTML5 spec for JSON-LD - but now the RDF folks are objecting to the change, so I'm trying to find if there is a solid set of argumentation for why using the term IRI has been abandoned?

[06:51:49.0000] <manu-db>
hsivonen: We're trying to use a single term throughout the spec and the biggest push-back we've had on IRI was that nobody (meaning most Web developers) knows what it is.

[06:51:52.0000] <hsivonen>
manu-db: well, everyone out there (where ‚Äúout there‚Äù does not include IETF and the RDF community) talks about URLs when they mean the addresses

[06:51:55.0000] <Ms2ger>
I think I see the issue

[06:52:14.0000] <Ms2ger>
"the RDF folks"

[06:52:15.0000] <hsivonen>
manu-db: not sure the WHATWG has a canned argument for the id case

[06:52:53.0000] <hsivonen>
but maybe I just missed the memo and will learn something when reading the logs later

[06:53:35.0000] <manu-db>
Is this sane spec text? "Throughout this specification, the term URL means IRI as defined in [RFC3987]. The reason we use the term URL instead is because it is more familiar to Web developers."

[06:53:52.0000] <manu-db>
or does that conflate the issue more?

[06:54:24.0000] <hsivonen>
using them as ids in the first place is what conflates the issue :-(

[06:54:57.0000] <manu-db>
/me thinks that ship has sailed. :)

[06:55:01.0000] <hsivonen>
manu-db: have you thought through why you want to refer to RFC 3987 instead of annevk's spec?

[06:55:28.0000] <manu-db>
hsivonen: I'd be happy to refer to annevk's spec if it is more up to date and will be normative within a couple of months?

[06:55:35.0000] <manu-db>
link to annevk's IRI spec?

[06:55:41.0000] <manu-db>
/me goes off to google it.

[06:55:52.0000] <Ms2ger>
url.spec.whatwg.org

[06:55:56.0000] <hsivonen>
http://url.spec.whatwg.org/

[06:56:15.0000] <hsivonen>
but I doubt that spec cares about RDF compat for id use

[06:56:20.0000] <hsivonen>
it cares about the addressing case

[06:56:38.0000] <zewt>
(drives me nuts when people say "URI" as if any user in the world actually distinguishes it from URL; the term needs to die)

[06:56:50.0000] <manu-db>
Thanks - I'll raise this during the JSON-LD telecon, which starts in 3 minutes - will check back here for any addition comments... thanks hsivonen, Ms2ger :)

[06:57:09.0000] <Ms2ger>
Enjoy

[06:57:22.0000] <hsivonen>
manu-db: you‚Äôre welcome

[06:57:51.0000] <darobin>
manu-db: sorry, was afk

[06:57:52.0000] <zewt>
hsivonen: fyi you're sending angle quotes as apostrophes, heh

[06:58:05.0000] <darobin>
I think that the core argument in this case is basically who JSON-LD is aimed at in the first place

[06:58:06.0000] <zewt>
looks weird in some fonts

[06:58:18.0000] <darobin>
if you want to do RDF for the RDF people, then stick to RDF terminology

[06:58:23.0000] <hsivonen>
are you sure it‚Äôs me sending and not you receiving?

[06:58:25.0000] <darobin>
but AFAIK, the RDF people have RDF

[06:58:28.0000] <zewt>
yep

[06:58:32.0000] <hsivonen>
/me checks what krijnh sees

[06:59:10.0000] <darobin>
if instead you want something that web hackers can understand and use for linked data, which is my understanding of what JSON-LD is for, then use terminology that they're familiar with

[06:59:27.0000] <hsivonen>
zewt: krijnh‚Äôs logs show my apostrophes as UTF-8 apostrophes

[06:59:28.0000] <darobin>
beyond that, so long as you define how they're processed in your context, the terminology doesn't matter IMHO

[06:59:39.0000] <darobin>
you could just call them Unicorns

[06:59:45.0000] <manu-db>
/me oooohs.

[07:00:05.0000] <hsivonen>
zewt: how did you diagnose that it‚Äôs me sending instead of you receiving?

[07:00:06.0000] <manu-db>
/me s/URL/Unicorn/g

[07:00:26.0000] <zewt>
hsivonen: i think they're U+2019's ("right single quotation mark") instead of just apostrophes

[07:00:34.0000] <darobin>
manu-db: yeah that would make for a fun spec

[07:00:37.0000] <zewt>
hsivonen: because i've seen it before and I know how the font i'm using renders each

[07:00:41.0000] <hsivonen>
‚òÉ <-- does that look like a snowman to you?

[07:00:54.0000] <zewt>
for a very generous definition of snowman :)

[07:00:56.0000] <zewt>
http://i.imgur.com/WpPbH.png

[07:00:58.0000] <darobin>
hsivonen: does drawing quality count?

[07:01:34.0000] <hsivonen>
zewt: I‚Äôm trying to send U+2019

[07:01:39.0000] <hsivonen>
darobin: no

[07:01:40.0000] <zewt>
this is a JP fixed-width font that renders ' as single-width and unicode quotes as double-width, which makes the difference easy to spot (other fonts are less dumb, but they still tend to make quotes more quote-like than apostrophe-like)

[07:01:48.0000] <zewt>
hsivonen: that's not an apostrophe, that's a quote

[07:01:52.0000] <hsivonen>
zewt: there‚Äôs your problem

[07:02:04.0000] <hsivonen>
(JP fixed width that is)

[07:02:16.0000] <zewt>
not much of a problem, but you're sending the wrong character

[07:02:37.0000] <hsivonen>
zewt: Gnome Character map says: ‚Äúthis is the preferred character to use for apostrophe‚Äù

[07:02:43.0000] <Ms2ger>
Unicode semantics fight... 3, 2, 1, Go!

[07:02:46.0000] <zewt>
Gnome Character map is wrong

[07:02:49.0000] <hsivonen>
zewt: [citation needed]

[07:02:55.0000] <zewt>
the preferred character for apostrophe is: apostrophe

[07:03:13.0000] <zewt>
namely, U+0027

[07:03:20.0000] <hsivonen>
zewt: nope

[07:03:26.0000] <zewt>
yep.

[07:03:41.0000] <hsivonen>
zewt: it looks like a foot sign‚Äînot like an apostrophe

[07:04:18.0000] <zewt>
looks thoroughly like an apostrophe to me :)

[07:05:24.0000] <zewt>
the unicode angled quote marks tend to be styled in a way meant to be symmetric with one another, and only make sense when you actually have matching quotes, not as apostrophes

[07:06:16.0000] <zewt>
afk, work

[07:08:20.0000] <krijnh>
hsivonen: que?

[07:08:38.0000] <krijnh>
That's correct, right?

[07:08:43.0000] <hsivonen>
krijnh: yes

[07:09:01.0000] <krijnh>
Always using UTF-8. Always declaring that I do.

[07:09:03.0000] <krijnh>
Next!

[07:12:26.0000] <MikeSmith>
about w3c-test.org syncing from github, i'm currently at the stage of conducting a personal thought experiment on that

[07:13:08.0000] <MikeSmith>
wait no i'm sitting zazen and contemplating it as a koan

[07:13:57.0000] <darobin>
rofl

[07:14:20.0000] <MikeSmith>
so if somebody has some time to consider / suggest some concrete ideas on that before I reach full enlightenment, that'd be great

[07:14:45.0000] <hsivonen>
In a way, UTF-16 ate my day again. (been preparing test cases)

[07:15:21.0000] <darobin>
MikeSmith: there are two sides to this, 1) triggering the download, 2) getting the content

[07:15:45.0000] <darobin>
for part 2, mostly I'm guessing that something like git pull, git reset --hard would work

[07:15:58.0000] <darobin>
for part 1, we have a bunch of options

[07:16:31.0000] <darobin>
Dom has a script that triggers on GH commits over email, but I don't think it'd run on that machine

[07:16:41.0000] <darobin>
we can have it trigger from HTTP, too

[07:16:49.0000] <darobin>
or just cron

[07:17:12.0000] <darobin>
MikeSmith: I wonder how much we could pilfer from the existing rsync script?

[07:17:35.0000] <darobin>
one thing that we might want to steal from it is how it quarantines changes that involve PHP and other such executable content

[07:17:43.0000] <darobin>
/me isn't sure where that script is, though

[07:20:45.0000] <MikeSmith>
darobin: I know where the review-flagging script is

[07:21:01.0000] <MikeSmith>
as far as rsync, i would need to ahve somewhere to rsync from

[07:21:37.0000] <darobin>
MikeSmith: which is where I'm putting 2 and 2 together :)

[07:22:00.0000] <MikeSmith>
I would think we could avoid the rsync and just do a pull

[07:22:04.0000] <darobin>
MikeSmith: Dom's script has to run on jay, because that's where it can be triggered by some procmail magic using a sysbot+whatever rule

[07:22:11.0000] <MikeSmith>
ahah

[07:22:13.0000] <MikeSmith>
ok

[07:22:28.0000] <darobin>
yeah, but if we just do a pull, does review-flagging still work?

[07:22:58.0000] <MikeSmith>
I think it would be made to yes

[07:23:24.0000] <MikeSmith>
with an appopriate hook set up in the local clone

[07:23:40.0000] <MikeSmith>
umm hmm

[07:24:22.0000] <MikeSmith>
d'oh maybe not since the content's going to be there already if we just pull it

[07:25:03.0000] <MikeSmith>
darobin: you have clearly already mediated on this koan more than me, sensei

[07:25:17.0000] <MikeSmith>
/me heads back to the woodshed

[07:26:22.0000] <MikeSmith>
so yeah I think we need a new step of indirection to emualate the old step of indirection (as far as the review-filtering of PHP stuff goes)

[07:26:30.0000] <darobin>
heh, flattery

[07:26:38.0000] <darobin>
MikeSmith: I can take it over if you want, but it might have to wait a little since I've got a bunch of things to finish

[07:26:50.0000] <darobin>
also, last time I tinkered with that box I broke things :)

[07:27:14.0000] <MikeSmith>
no I'll try to get it worked out this week

[07:27:20.0000] <darobin>
I can give you dom's script if it's helpful

[07:27:25.0000] <MikeSmith>
yes please

[07:27:29.0000] <darobin>
sure thang

[07:32:38.0000] <MikeSmith>
wow here's some novel fugly http://www.magicscroll.net/ScrollTheWeb.html

[07:34:13.0000] <MikeSmith>
I believe the effect it's intended to introduce is technically called "instant frustration"

[07:40:19.0000] <MikeSmith>
woo boy only thing better than a telcon right now would be a telcon where we take the whole time to go through open action items

[07:41:20.0000] <darobin>
especially if half the actions are questions from the old TAG that no one wants to answer :)

[07:43:57.0000] <MikeSmith>
heh

[08:03:45.0000] <Ms2ger>
darobin, MikeSmith, starting in #HTMLT

[08:36:40.0000] <dglazkov>
good morning, Whatwg!

[09:29:24.0000] <manu-db>
darobin, hsivonen, Ms2ger, annevk: The JSON-LD group decided to use IRI instead of URL, against my pleading to use URL, (because the RDF WG would probably not go for using URL instead of IRI). Discussion can be found here - http://json-ld.org/minutes/2013-01-15/#topic-2

[09:46:51.0000] <marcosc>
manu-db: What are you using to generate those minutes?

[10:03:05.0000] <kamathln>
manu-db: totally out of the loop, read the linky you sent just for passing time, but here is my 0.5 cents - why cant you make it that the format use URL/URI/IRI interchangeably ?

[10:04:44.0000] <kamathln>
doh .. never mind .. i see whats wrong with that.

[10:14:04.0000] <bkardell>
Hixie:  re web components alternative poposal on that bug... can my-tag extend select in definition or no

[10:25:35.0000] <manu-db>
marcosc: sorry, was on the phone - reading backlog.

[10:26:47.0000] <manu-db>
marcosc: I'm using scrawl.js - something I wrote in a weekend to replace the scribe tools at W3C... let me find a couple of links for you.

[10:27:55.0000] <bkardell>
dglazkov: if you know the answer to my question to Hixie above, please jump in

[10:28:17.0000] <manu-db>
marcosc: Take this text: http://json-ld.org/minutes/2013-01-15/irc.log and dump it into the edit box at the bottom of this screen: http://json-ld.org/minutes/scribe-tool/

[10:29:00.0000] <manu-db>
marcosc: As you edit the minutes, they update live (so you don't have to do the awful edit/regenerate dance you have to w/ W3C current scribe tools)

[10:29:59.0000] <manu-db>
marcosc: all the source is available here - https://github.com/json-ld/minutes/tree/master/scribe-tool

[10:31:36.0000] <manu-db>
unfortunately, I haven't had the time to improve it... it works fairly well for the JSON-LD and Web Payments stuff... it's the scribe tool that I hate the least.

[10:36:04.0000] <dglazkov>
bkardell:

[10:36:29.0000] <dglazkov>
bkardell: no, in the latest proposal, you can't make a custom tag extend from an existing element. Only Element.

[10:38:13.0000] <bkardell>
dglazkov: why?  Can't we just say that some parsers won't know about the base element?

[10:38:52.0000] <dglazkov>
bkardell: we could, but then that would be not the latest proposal :)

[10:39:08.0000] <bkardell>
dglazkov:  you can't even extend other custom components???

[10:39:50.0000] <dglazkov>
bkardell: you can. But their are forever slotted to be one of the two piles: is=foo-bar or <foo-bar>

[10:40:01.0000] <dglazkov>
their->they

[10:40:54.0000] <bkardell>
What happens if I say foo-bar extends select and then use the <foo-bar form?

[10:40:59.0000] <bkardell>
Throws?

[10:47:36.0000] <bkardell>
dglazkov: sorry that was for you, I just forgot to add your name

[10:48:16.0000] <dglazkov>
bkardell: <foo-bar> stays HTMLUnknownElement

[10:49:56.0000] <dglazkov>
bkardell: iow, just ignored

[10:51:55.0000] <bkardell>
dglazkov: that is disappointing and I think confusing.  Others will not like

[10:52:27.0000] <dglazkov>
yeah... it's an overconstrained problem. Something's gotta give

[10:54:52.0000] <Ms2ger>
Clearly you should just use least squares

[11:03:15.0000] <dglazkov>
Ms2ger: I dunno. everybody on this channel is pretty square. Hard to pick the least ones.

[11:09:09.0000] <Yuhong>
<hsivonen> For example, Snow Leopard got the Java plug-in blacklisting, but it‚Äôs not clear if it otherwise gets security patches

[11:09:19.0000] <Yuhong>
It does, they changed the policy with Flashback.

[11:09:43.0000] <Yuhong>
othermaciej: Why doesn't Safari get security updates on SL while the rest of the OS does?

[12:17:47.0000] <Hixie>
bkardell: yes (you then bind it as <select is="my-tag">)

[12:23:55.0000] <bkardell>
Hixie: but only that way.. see logs my convo with dglazkov

[12:24:28.0000] <bkardell>
Hixie: seems better, but confusing

[12:26:47.0000] <Hixie>
yeah

[12:26:53.0000] <Hixie>
i'm certainly open to other solutions

[12:27:09.0000] <Hixie>
but i don't see how to satisfy everyone's requirements here

[12:27:25.0000] <Hixie>
this seemed like the compromise that gave the least for each position

[12:27:30.0000] <bkardell>
Hixie:  re: your fallback comment on the bug... you could make an agument that tag/pupose may matter.  Hard to judge without data

[12:27:47.0000] <Hixie>
how do you mean?

[12:29:32.0000] <bkardell>
Hixie:  Well.. for some tags maybe it is more intuitive or useful for authors

[12:32:38.0000] <matjas>
dglazkov: did you see http://stackoverflow.com/q/14338817/96656?

[12:33:24.0000] <dglazkov>
matjas: no, but I am happy people are thinking through these problems

[12:35:52.0000] <Hixie>
bkardell: if what you want to do is make a new tag, that's supported in the latest proposal, right?

[12:39:10.0000] <dglazkov>
matjas: replied

[12:39:20.0000] <matjas>
dglazkov: thanks

[13:22:05.0000] <jgraham>
I am probably not following closely enough, but the last proposal on the bug did look a lot like a no-one-likes-it design-by-consensus proposal

[13:22:52.0000] <jgraham>
It didn't feel like anyone could look at it and go "oh yes, I see why there are these two entirely different syntaxes for doing slight variations of the same thing"

[13:24:22.0000] <dglazkov>
jgraham: haha, you're like the 5th person to say it

[13:24:50.0000] <dglazkov>
given all of the constraints, the volume of the problem space is negative at the moment.

[13:26:50.0000] <jgraham>
Yes. Can we also have the constaint that there should be a single syntax for all cases?

[13:26:59.0000] <dglazkov>
jgraham: :)

[13:27:05.0000] <jgraham>
Seriously :)

[13:27:44.0000] <dglazkov>
jgraham: you should totally reply on bug. A proposal is an iteration

[13:27:56.0000] <jgraham>
Then we can talk about which constraints we are willing to bend and by how much, rather than trying to find a CSS2 style bad solution that fits all the stated constraints

[13:27:56.0000] <dglazkov>
iterations without feedback are not very useful

[13:37:33.0000] <bkardell>
Hixie: it is supported yes... I meant re your comment about fallback being inside the element...your other response

[13:58:07.0000] <hober>
jgraham++ for one syntax

[13:58:47.0000] <hober>
(another reason why i prefer is="" to /; it minimizes syntactic difference between html and xhtml for this

[14:06:19.0000] <dglazkov>
hober what about elements that have completely new semantics (case E in https://www.w3.org/Bugs/Public/show_bug.cgi?id=18669#c36)

[14:11:54.0000] <jgraham>
dglazkov: I think <a is="foo"> for that case is considerably better than multiple syntaxes

[14:12:00.0000] <jgraham>
Argh

[14:12:07.0000] <jgraham>
s/<a/<x/

[14:13:00.0000] <dglazkov>
why not just <x>?

[14:15:10.0000] <jgraham>
That would violate "one syntax"

[14:16:28.0000] <jgraham>
But my browser just froze, which I think makes it time to go to sleep

[14:17:13.0000] <dglazkov>
jgraham: that's how I know it, too

[14:17:15.0000] <dglazkov>
good night

[14:47:07.0000] <Hixie>
bkardell: you mean why <my-map><select> is bad?

[15:06:30.0000] <hober>
dglazkov: <span is> or <div is>

[15:09:18.0000] <bkardell>
Hixie: yes. I think it might not be universally good nor bad in/of itself

[15:09:40.0000] <bkardell>
Hixie: in certain cases maybe more intuitive/valuable to devs

[15:09:48.0000] <Hixie>
bkardell: well nothing is universally good or bad in this space, but i think it has a number of problems that nothing else has, while simultaneously being less useful to authors overall

[15:09:54.0000] <Hixie>
bkardell: (for reasons i discussed in the bug)

[15:20:27.0000] <bkardell>
Hixie: seems like it has advantages that most others don't too

[15:21:58.0000] <Hixie>
like what?

[15:37:08.0000] <bkardell>
Hixie: as we discussed on the bug: known pattern, no parser changes necessary, you can falllback, inform engines, etc

[15:37:32.0000] <bkardell>
Hixie: btw... interesting comment there on bug just now

[15:44:34.0000] <tantek>
how is the is= vs new tag debate not just "Distributed Extensibility, Round N+1" ?

[15:49:42.0000] <Hixie>
bkardell: all the patterns we're talking about are known patterns, most don't require parser changes, the fallback thing is not a real win in practice based on lessons we've learnt with HTML additions in the past few years

[15:49:50.0000] <Hixie>
bkardell: (not sure what "inform engines" means)

[15:50:08.0000] <Hixie>
tantek: this actually defines the extensibility model, the syntax is just a minor aspect of the conversation

[15:50:23.0000] <Hixie>
tantek: unlike the usual discussion, where the syntax (the easiest part) is the only thing discussed

[15:50:50.0000] <bkardell>
Hixie: just meant search engines should be able to parse the content and get meaning

[15:51:04.0000] <bkardell>
Hixie: existing ones I mean

[15:51:07.0000] <Hixie>
bkardell: ah, then i disagree that it does that in practice

[15:51:15.0000] <Hixie>
bkardell: because it decouples the actual element from the semantic

[15:51:27.0000] <Hixie>
bkardell: you really want the semantic and the new element to be the same element, imho

[15:51:34.0000] <Hixie>
bkardell: otherwise links from one to the other don't work

[15:52:00.0000] <bkardell>
Hixie: really?  It's mostly a wrapper...if wrapping element throw shit to fan, seems the whole web would be lost by now

[15:52:21.0000] <Hixie>
the web is remarkably resilient

[15:52:24.0000] <Hixie>
to failure

[15:52:50.0000] <Hixie>
very few things fail violently enough to destroy everything

[15:52:54.0000] <Hixie>
doesn't mean they're not failing though


2013-01-16
[16:54:17.0000] <briankardell>
Hixie: are you saying that when video was introduced that search engines couldn't see the fallback content?

[17:14:40.0000] <GPHemsley>
It's amazing how many sites are completely broken in Firefox 3.6 nowadays.

[17:15:03.0000] <GPHemsley>
(Many of them are completely blank because the old parser thinks the whole page is a comment.)

[18:15:06.0000] <Hixie>
briankardell: no, i'm saying that by and large authors don't bother to use the fallback feature of <video>

[21:37:20.0000] <MikeSmith>
heycam: congrats on style scoped going out in Nightly

[21:37:39.0000] <heycam>
MikeSmith, thanks!

[23:12:46.0000] <hsivonen>
GPHemsley: I expect the Web to become incompatible with Firefox 3.6 even faster now that Firefox 3.6 has (finally) dropped off http://gs.statcounter.com/#browser_version_partially_combined-ww-daily-20130115-20130115-bar

[23:12:55.0000] <hsivonen>
IE6 too!

[23:13:35.0000] <hsivonen>
of course, the number of items on that chart is arbitrary, but I still expect it to matter to people‚Äôs perception when stuff falls out of view

[23:15:00.0000] <hsivonen>
(aside: it‚Äôs sad that they bundle all Android stock browser versions together when they are at least as different as [and actually more different than] the Safari versions that are listed as separate)

[23:15:33.0000] <hsivonen>
(bundling Opera Mobile and Opera Mini into one number is worse, of course)

[23:15:59.0000] <hsivonen>
(and separating Safari on iPhone and iPod Touch. seriously, why would you do that?)

[23:17:17.0000] <tantek>
separate iPhone and iPod Touch? Why not separate iPhone, iPhone 2, iPhone 3, iPhone 3G, iPhone3GS, iPhone 4, iPhone 4S, iPhone 5, iPod Touch, iPod 4 Touch, iPod 5 Touch?

[23:19:57.0000] <hsivonen>
in general, it seems that when it comes to mobile, they throw out everything that‚Äôs technically interesting and lists brands instead

[23:22:45.0000] <hsivonen>
aargh. Acid2 requires nearest neighbor image scaling? sadness. https://bugzilla.mozilla.org/show_bug.cgi?id=830731#c12

[00:42:51.0000] <hsivonen>
MikeSmith: any chance of moving http://www.w3.org/1999/xhtml/ to http://www.w3.org/1999/xhtml ?

[00:43:05.0000] <hsivonen>
MikeSmith: and upgrading the mention of HTML5 to CR?

[00:45:43.0000] <Ms2ger>
Anyone ever heard of <table cols>?

[00:45:54.0000] <hsivonen>
at least the namespace URL of SVG doesn‚Äôt redirect to another URL

[00:48:47.0000] <MikeSmith>
hsivonen: yes chance

[00:49:22.0000] <MikeSmith>
we should

[00:49:35.0000] <hsivonen>
MikeSmith: great

[00:49:56.0000] <SimonSapin>
annevk (if you read logs), re http://dump.testsuite.org/encoding/single-byte-test.html , you might not need PHP or .htaccess if you use xhr.overrideMimeType()

[00:50:01.0000] <hsivonen>
MikeSmith: being able to do ctrl-l, ctrl-c and pasting into code would be most helpful

[00:50:45.0000] <hsivonen>
(yes, I still search for ‚ÄúXHTML namespace‚Äù on the Web when writing code)

[00:51:08.0000] <hsivonen>
(on Mac, I had a system-level macro for that, but on Linux I don‚Äôt)

[00:51:46.0000] <hsivonen>
(I had a thing hooked into the a11y APIs on Mac so that I could type a few letters and it expanded to the XHTML namespace URL)

[01:19:16.0000] <darobin>
Ms2ger, jgraham: we just had our first pull request from a total third party :) https://github.com/w3c/html-testsuite/pull/18

[01:38:14.0000] <hsivonen>
\o

[01:38:19.0000] <hsivonen>
oops

[01:50:23.0000] <Ms2ger>
darobin, next you'll have me believe github actually was a good idea...

[01:54:17.0000] <hsivonen>
has Chrome removed its character encoding override menu? or am I just failing to locate the menu?

[01:54:42.0000] <hasather>
hsivonen: Tools > Encoding

[01:56:34.0000] <hsivonen>
hasather: I don‚Äôt see an Encoding submenu there

[01:56:42.0000] <smaug____>
I have it

[01:57:01.0000] <smaug____>
v24

[01:57:15.0000] <hsivonen>
I tried Chrome 25 and Chromium 23

[01:57:19.0000] <hsivonen>
both on Linux

[01:57:54.0000] <hasather>
hsivonen: I have it in 23 and 26 on Linux

[01:57:56.0000] <smaug____>
I tried Chrome, not Chromium

[01:58:14.0000] <hasather>
I tried both

[01:59:12.0000] <Ms2ger>
Still these, Chrome 25 dev on Linux64

[02:00:37.0000] <hsivonen>
are you running with Unity global menu or without?

[02:00:45.0000] <hasather>
hsivonen: without

[02:00:51.0000] <hsivonen>
I see the Encoding submenu in the View menu on Mac

[02:00:59.0000] <hsivonen>
no Tools menu on Mac

[02:01:14.0000] <hasather>
hsivonen: I use the menu to the right of the address bar

[02:01:28.0000] <Ms2ger>
GPHemsley, what's Firefox 3.6? :)

[02:02:03.0000] <hsivonen>
hasather: ooh. *that* Tools

[02:02:05.0000] <hsivonen>
hasather: thanks

[02:02:27.0000] <hsivonen>
I have another different Tools menu in the Unity global menubar

[02:02:50.0000] <hsivonen>
kudos to Google for burying this UI

[02:03:04.0000] <hasather>
hsivonen: Ah, didn't think of that, I'm not touching Unity :)

[02:03:24.0000] <hsivonen>
Firefox with the Firefox button enabled buries it in an illogical place

[02:03:42.0000] <hsivonen>
(Under a Web Developer menu)

[02:04:01.0000] <smaug____>
well, that is pretty similar to chrome's tools

[02:04:04.0000] <hsivonen>
(Web developer had better declare their encoding instead of using the menu!)

[02:04:11.0000] <hsivonen>
*developers

[02:04:28.0000] <smaug____>
true

[02:04:33.0000] <hsivonen>
the reason the menu exists is for *users* to deal with developers

[02:05:10.0000] <smaug____>
obviously no one has thought about the menu entry because no one ever uses it

[02:05:22.0000] <hsivonen>
right.

[02:05:40.0000] <hsivonen>
I want to add some telemetry so that we could get data for killing the menu

[02:06:01.0000] <hsivonen>
(now that I‚Äôve spent time making the menu be less bad)

[02:13:04.0000] <smaug____>
hsivonen: problem is that it can be very useful for someone

[02:13:15.0000] <smaug____>
yet most of the users don't even know it is there

[02:16:28.0000] <darobin>
Ms2ger: well, at this point it's just one submission, but with luck we can get that grow

[02:17:53.0000] <darobin>
richt: just the man I was looking for! is there an Opera build with the Discovery API in it?

[02:18:17.0000] <darobin>
I'm looking through labs but the site is somewhat broken

[02:18:32.0000] <richt>
yep there is. you want the link?

[02:19:56.0000] <richt>
darobin, I sent you it on a private channel.

[02:20:34.0000] <darobin>
richt: thanks man!

[02:21:04.0000] <darobin>
ah, the site seems to work again, too ‚Äî cool

[02:33:20.0000] <jgraham>
darobin: Nice :)

[02:34:10.0000] <Ms2ger>
Hi jgraham

[02:34:22.0000] <Ms2ger>
Do you want to do me a little favour? :)

[02:35:18.0000] <Ms2ger>
Apparently Presto does something with <ul align=center>, which it shouldn't

[02:35:27.0000] <Ms2ger>
Want to file a bug for me? :)

[02:35:57.0000] <darobin>
Ms2ger: do you have a recommended hotel to stay at near the Mozilla office in MV?

[02:36:15.0000] <Ms2ger>
Not personally, but I can ask around

[02:36:47.0000] <darobin>
Ms2ger: it's not a big deal, I can just pick something not too far from the offices

[02:37:03.0000] <darobin>
/me hates the valley

[02:37:19.0000] <Ms2ger>
holiday inn express, I'm told

[02:37:59.0000] <Ms2ger>
I haven't been to California this century, myself

[02:38:45.0000] <Ms2ger>
Apparently on walking distance

[02:38:47.0000] <Ms2ger>
darobin, ^

[02:39:04.0000] <darobin>
Ms2ger: excellent, thanks!

[02:39:08.0000] <smaug____>
yeah, 15mins walk or something

[02:39:21.0000] <Ms2ger>
Np

[02:39:34.0000] <darobin>
anything that involves not having to drive sounds like heaven

[02:49:20.0000] <smaug____>
darobin: oh, is that hotel closed

[02:49:26.0000] <smaug____>
google maps at least says so

[02:49:31.0000] <smaug____>
closed or moved

[02:49:53.0000] <darobin>
smaug____: ah, damn, I'll check that when I book (which won't be this second)

[02:51:59.0000] <smaug____>
Hotel Avante is a bit farther away, 25mins walk

[02:55:36.0000] <darobin>
smaug____: thanks, I'll check that out if the other one has indeed vanished

[03:35:51.0000] <MikeSmith>
darobin: plh will have a car when he's there I'm pretty sure

[03:35:58.0000] <MikeSmith>
can ride with him

[03:36:04.0000] <darobin>
MikeSmith: ah, good point

[03:40:33.0000] <hsivonen>
darobin: at this time of year, you‚Äôd need heating in Hotel Avante and the heater is noisy

[03:41:10.0000] <darobin>
hsivonen: is it noisier than me snoring?

[03:41:21.0000] <darobin>
if plh has a car, I might just go to whatever hotel he's staying at

[03:41:27.0000] <hsivonen>
darobin: I haven‚Äôt heard you snoring, but probably yes

[03:41:43.0000] <darobin>
that would be very loud

[03:41:49.0000] <darobin>
as annevk knows :)

[03:42:07.0000] <hsivonen>
darobin: the heater has a fan that blows the warm air into the room

[03:42:16.0000] <darobin>
yeah, I'm familiar with that setup

[04:42:29.0000] <MikeSmith>
hsivonen: so moving of http://www.w3.org/1999/xhtml/ is hindered by the fact that we are still using CVS to maintain the source

[04:43:34.0000] <MikeSmith>
and there's no way to delete directories in CVS

[04:43:41.0000] <MikeSmith>
well there is

[04:43:52.0000] <MikeSmith>
but not from the client side

[04:44:56.0000] <MikeSmith>
and actually even if I removed that dir on the cvs server I don't think it will get removed on the Web server

[04:45:25.0000] <MikeSmith>
so.. I'll need to ask the system team for some help with it I guess

[04:54:34.0000] <hsivonen>
MikeSmith: ah CVS. the fitting companion to Namespaces. :-(

[04:54:52.0000] <darobin>
we're removing that page? why not turn it into something more useful?

[04:55:29.0000] <MikeSmith>
darobin: was just trying to move it to be without the slash

[04:55:45.0000] <MikeSmith>
i.e., to make the actual Namespace URI

[04:56:04.0000] <darobin>
it's not as if millions of URLs pointing to it were going to suddenly cry out in terror, and be suddenly silenced

[04:56:20.0000] <darobin>
oh dear me, that's a bad mistake...

[04:56:29.0000] <MikeSmith>
hsivonen: actually it's even better than CVS and Namespaces

[04:56:55.0000] <MikeSmith>
hsivonen: because we make heavy use of conneg

[04:57:10.0000] <MikeSmith>
so it's the best all worlds

[04:57:38.0000] <darobin>
I wonder if that couldn't save us here

[04:58:01.0000] <darobin>
well, not conneg specifically

[04:58:10.0000] <darobin>
but maybe some modrewrite magic would work

[04:58:18.0000] <MikeSmith>
CVS rubbing elbows with conneg to serve of deferenceable documents for Namespace URIs

[04:58:34.0000] <darobin>
redirect xhtml/ to xhtml, and ensure that xhtml serves (through internal redirection) whatever else

[04:58:53.0000] <darobin>
you should throw some PHP in there

[04:58:54.0000] <MikeSmith>
darobin: I tried a little of that already but don't work

[04:58:59.0000] <darobin>
damn

[04:59:11.0000] <MikeSmith>
could be I did it wrong though

[05:05:00.0000] <Ms2ger>
A bit of CVS, a bit of PHP, a bit of Namespaces and a bit of conneg

[05:05:06.0000] <Ms2ger>
Sounds like the W3C

[05:05:21.0000] <Ms2ger>
Either that or the Divine Comedy

[05:05:55.0000] <MikeSmith>
we aim to please

[05:06:03.0000] <MikeSmith>
and we don't disappoint

[05:06:41.0000] <MikeSmith>
as far as providing pure entertainment value for your dollar

[05:08:36.0000] <hsivonen>
MikeSmith: how come conneg needs a slash?

[05:09:10.0000] <MikeSmith>
it doesn't

[05:09:29.0000] <MikeSmith>
that part is not not currently using conneg

[05:10:20.0000] <MikeSmith>
but if I were to put a file in there named xhtml.html it would show up as http://www.w3.org/1999/xhtml

[05:10:48.0000] <hsivonen>
I see

[05:12:56.0000] <MikeSmith>
Ms2ger: it's more of The Good Soldier Schweik than the Divine Comedy

[05:14:57.0000] <Ms2ger>
/me waves at darobin 

[05:20:45.0000] <darobin>
Ms2ger?

[05:21:01.0000] <Ms2ger>
Oh, nothing, just a PR :)

[05:21:41.0000] <hsivonen>
so do we still think that letting some ampersands followed by ASCII letters not be errors is a good idea?

[05:22:16.0000] <Ms2ger>
I don't, if I counted the negatives correctly :)

[05:24:21.0000] <hsivonen>
I don‚Äôt either. So do I r+ a patch to match the spec while waiting for Hixie to change the spec?

[05:28:36.0000] <Ms2ger>
The validator is more strict than the spec right now? I'd r-

[05:30:25.0000] <hsivonen>
Ms2ger: both the validator and View Source in Firefox

[05:48:58.0000] <hsivonen>
stuff I learned today: don't view a patch in gmail and save as. Use the download link in the Gmail UI instead.

[05:49:07.0000] <hsivonen>
save as makes the patch fail to apply

[07:45:48.0000] <Ms2ger>
darobin: I'm told: '"holiday inn express Mountain view" is now called "Hotel Strata"'

[07:52:08.0000] <zewt>
hsivonen: is it expanding tabs or something?

[07:52:25.0000] <Ms2ger>
zewt, introducing CRs, possibly

[07:52:30.0000] <zewt>
(lately i've stopped using hard tabs in code completely; call them a long failed experiment)

[07:52:59.0000] <zewt>
(also it's easier to convince people to not use tabs than to fix broken ts=4 defaults in their editors)

[08:07:32.0000] <hsivonen>
zewt: I did not diagnose

[08:09:12.0000] <Ms2ger>
/me looks for an Opera person

[08:11:30.0000] <hasather>
Ms2ger: can I help?

[08:12:03.0000] <Ms2ger>
hasather, https://bugzilla.mozilla.org/show_bug.cgi?id=831232#c2 ; consider yourself informed :)

[08:13:18.0000] <hasather>
Ms2ger: alright :)

[08:31:55.0000] <dglazkov>
good morning, Whatwg!

[08:35:43.0000] <nimbu>
hey dglazkov you should do some PR with @stshank

[08:35:47.0000] <nimbu>
w.r.t web components

[08:39:10.0000] <dglazkov>
/me does PR

[08:39:17.0000] <dglazkov>
how do I do PR, btw?

[08:39:37.0000] <dglazkov>
and who is @stshank

[08:41:00.0000] <nimbu>
dglazkov: he is a tech journalist afaik

[08:41:04.0000] <nimbu>
@stshank on twitter

[08:41:14.0000] <nimbu>
dglazkov: you do PR by being your smooth suave self!

[08:41:24.0000] <nimbu>
/me may not know how to spell suave

[08:41:46.0000] <dglazkov>
yay shampoo!

[08:42:02.0000] <nimbu>
dglazkov: https://twitter.com/stshank/status/291511013612867586

[08:42:03.0000] <nimbu>
ahahah

[08:44:37.0000] <dglazkov>
twittered

[08:52:29.0000] <nimbu>
very nice dglazkov

[09:13:15.0000] <annevk>
So soon we can write cursor:progre√ü?

[09:14:03.0000] <tantek>
oh no

[09:14:48.0000] <annevk>
This whole lets use Unicode case folding for language identifiers madness got to stop.

[09:16:10.0000] <tantek>
yeah

[09:23:07.0000] <espadrine>
annevk: reading through the URL parsing algorithm, it seems that URLs like "http:news.ycombinator.com" (without the double slash) yield to a bogus state in which we keep adding to the buffer and don't end the algorithm properly (even though there is a parse error).

[09:23:07.0000] <espadrine>
annevk: Is there any reason a scheme-relative URL must start with //? Browsers seem to accept it when there is no double slash, and I recall that TBL considered it unfortunate since it doesn't serve a purpose.

[09:23:07.0000] <espadrine>
annevk: Also, what does it mean to have both a parse error and to continue the algorithm?

[09:24:49.0000] <annevk>
It depends on the base URL what such a URL will do.

[09:25:11.0000] <annevk>
Parse errors indicate issues with the syntax, but not all such issues result in total failure.

[09:25:27.0000] <annevk>
Most in fact, do not, and are happily "ignored".

[09:26:49.0000] <annevk>
espadrine: So in parsing your URL, you hit step 2 in http://url.spec.whatwg.org/#scheme-state

[09:27:24.0000] <annevk>
espadrine: Then it either goes to relative or authority state or authority first slash state

[09:28:38.0000] <espadrine>
in this case, it ends up in the "authority state", and "appends c to buffer" until buffer is empty. Should we assume that then, the algorithm stops? What is the behaviour when the pointer goes beyond the end of the buffer?

[09:29:36.0000] <espadrine>
in any case, I believe it makes the algorithm fail where browsers currently succeed

[09:31:36.0000] <annevk>
it appends to buffer until you hit step 2

[09:31:39.0000] <annevk>
the EOF code point

[09:32:34.0000] <annevk>
at which point it reprocesses the string

[09:34:37.0000] <espadrine>
ah, right, my bad. So it does work.

[09:36:22.0000] <annevk>
Hopefully :-) I very much appreciate you double checking!

[09:36:36.0000] <espadrine>
:)

[10:00:18.0000] <volkmar>
Hixie: I think valueAsNumber and valueAsDate need some love

[10:00:27.0000] <volkmar>
every time I look at them, I feel like some things are missing

[10:01:38.0000] <Hixie>
send feedback or file a bug, listing use cases :-)

[10:01:50.0000] <volkmar>
Hixie: just a quick question before doing that

[10:02:10.0000] <volkmar>
Hixie: on setting valueAsNumber

[10:02:27.0000] <volkmar>
if the algorithm to convert to a string doesn't work

[10:02:29.0000] <volkmar>
what should happen?

[10:02:36.0000] <volkmar>
my code does set the value to the empty string

[10:02:45.0000] <volkmar>
but I can't find if I decided that or if it is written somewhere

[10:04:01.0000] <Hixie>
doesn't the spec answer?

[10:04:09.0000] <Hixie>
(i don't know off hand, would have to just read the spec to answer)

[10:05:49.0000] <volkmar>
Hixie: no the spec say to run the algorithm and set the value to the returning string

[10:06:26.0000] <volkmar>
but the algorithm, for time for example, is something like "set a valid time string that represents the input milliseconds..."

[10:06:35.0000] <volkmar>
there is no error handling

[10:07:17.0000] <volkmar>
and for time, it's quite easy to imagine a number that isn't working (like anything greater or equal to 24*60*60*1000 or a negative number)

[10:12:00.0000] <Hixie>
hm, let me see...

[10:12:58.0000] <Hixie>
i'm confused

[10:13:03.0000] <Hixie>
why would the algorithm not work?

[10:13:53.0000] <Hixie>
what value can you set valueAsNumber to that would fail?

[10:14:46.0000] <volkmar>
Hixie: what .valueAsNumber = -1; should do?

[10:14:51.0000] <volkmar>
it type='time'

[10:15:22.0000] <volkmar>
iow, what would .value return after that?

[10:16:50.0000] <volkmar>
Hixie: actually, the |create a Date object| concepts solve the issue of float numbers

[10:16:55.0000] <Hixie>
"23:59:59", no?

[10:17:26.0000] <volkmar>
Hixie: why?

[10:18:14.0000] <volkmar>
I mean, it's a way of seeing it

[10:18:45.0000] <Hixie>
valueAsNumber applies, so it doesn't throw InvalidStateError. valueAsDate applies, so you use the first branch. create a Date object with value -1, which is one second before 1970-01-01. Convert that to a string, which returns a valid time string for that time, which is 23:59:59. Set the value to that string.

[10:19:00.0000] <Hixie>
seems pretty unambiguous in the spec

[10:19:29.0000] <Hixie>
(s/for that time/for that time in UTC/)

[10:20:14.0000] <volkmar>
ok, I see

[10:20:28.0000] <volkmar>
this branch to Date is just odd

[11:29:02.0000] <Ms2ger>
Quoting Feynman on www-style? Would upvote.

[11:31:26.0000] <jgraham>
"Let's work in a lap dancing club"?

[11:33:24.0000] <Ms2ger>
jgraham, btw, did you file a bug for <ul align=center> or should I?

[11:35:32.0000] <jgraham>
I didn't

[14:12:51.0000] <Hixie>
anyone have test cases for the kind of thing discussed here?: http://www.w3.org/mid/DF0A84C4-AEAB-4716-B23F-FB3BA48BDE3C‚äôgc


2013-01-17
[17:48:36.0000] <MikeSmith>
Hixie: Julian's site, maybe?

[17:48:48.0000] <MikeSmith>
are they Content-Location header tests?

[19:10:03.0000] <MikeSmith>
othermaciej: I think it's sad that people in the HTML WG have to waste time responding to the question about whether Microdata should be normative or not

[19:10:46.0000] <MikeSmith>
you might just as well be making them vote on whether the HTML5 spec itself should be normative or not

[19:11:09.0000] <othermaciej>
MikeSmith: on the one hand, I wish we just had consensus going in on that question, but on the other hand, I prefer to have it be a clear WG decision than to face a formal objection to a purely chair decision

[19:11:18.0000] <othermaciej>
MikeSmith: but I see your point

[19:11:42.0000] <MikeSmith>
and I see your point from your perspective as chair

[19:12:14.0000] <othermaciej>
looks like there is a reasonably clear trend in answers so far

[19:12:43.0000] <MikeSmith>
yeah

[19:12:47.0000] <othermaciej>
we will also have to do the same process for polyglot and alt-techniques, which may be even more controversial

[19:13:07.0000] <othermaciej>
(and which are less of a slam dunk because there's no implementation impact)

[19:14:11.0000] <MikeSmith>
yeah those are very different cases from the Microdata case and I think those merit having people in the group take time to respond

[19:17:00.0000] <MikeSmith>
btw I think along with the difference about implementation impact the reason Microdata is different is that Microdata was a part of the HTML spec, and the spec itself is obviously normative so the Microdata spec is also normative

[19:17:30.0000] <MikeSmith>
it was never split out for the purposes of making its normativity a question to discuss

[19:17:50.0000] <MikeSmith>
any more than Web Storage or whatever

[19:17:58.0000] <MikeSmith>
anything else that was split out

[19:19:49.0000] <MikeSmith>
but anyway

[19:21:30.0000] <tantek>
where's the survey?

[19:22:02.0000] <MikeSmith>
hey tantek

[19:22:12.0000] <MikeSmith>
survey is at othermaciej: in other news I hope it's not considered an abuse if I write a

[19:22:16.0000] <MikeSmith>
oops

[19:22:28.0000] <tantek>
I do wonder, if an "HTML microformats" draft also made its way to HTMLWG - would the same sets of folks be for / against it being "normative"

[19:22:30.0000] <MikeSmith>
wrong paste

[19:22:35.0000] <MikeSmith>
https://www.w3.org/2002/09/wbs/40318/microdata-status-preference-poll/results

[19:22:57.0000] <MikeSmith>
tantek: dunno

[19:23:08.0000] <MikeSmith>
that would be a very different question

[19:23:11.0000] <tantek>
or would microdata advocates suddenly switch to the "but we already have a way" attitude

[19:23:17.0000] <MikeSmith>
ah

[19:23:22.0000] <MikeSmith>
I see what you're saying

[19:23:36.0000] <tantek>
is it a question of multiple approaches vs. one and only one approach

[19:23:38.0000] <MikeSmith>
no I don't think the microdata advocates would do that

[19:23:42.0000] <tantek>
or is it a question of team A vs. team B

[19:23:49.0000] <MikeSmith>
none of the above

[19:23:52.0000] <tantek>
and thus both would oppose a team C.

[19:24:17.0000] <tantek>
well, I tend to prefer specing multiple approaches and letting web authors etc. decide

[19:24:56.0000] <MikeSmith>
it's a question of one person trying to abuse the process vs a bunch of other people who don't feel that strongly about microdata but are being compelled to state the obvious

[19:26:18.0000] <othermaciej>
tantek: I doubt microdata advocates would object to a microformats spec on principle

[19:26:39.0000] <othermaciej>
there was no serious attempt to block HTML+RDFa

[19:27:14.0000] <tantek>
othermaciej but HTML+RDFa is not really competitive with microdata in the market place of authorship (web authors have pretty much ignored HTML+RDFa)

[19:27:26.0000] <tantek>
OTOH, microformats (still) has quite a bit of momentum with authors

[19:27:35.0000] <tantek>
it's easy to not have to block something that's not a "threat"

[19:27:54.0000] <tantek>
or heck, even makes your preferred technology look better in comparison ;)

[19:28:44.0000] <othermaciej>
from what I've seen, folks who are down with microdata usually see microformats as a complement and sometimes even see microdata as a potential tool for building specific microformats

[19:29:04.0000] <tantek>
othermaciej - yes, my experience matches that as well, now that you mention it

[19:29:34.0000] <tantek>
and in fact, we've worked hard with microformats2 to separate the syntax and vocabulary so you could, say, use microformats2 vocabularies with microdata syntax for example (if that's your preference).

[19:30:09.0000] <tantek>
ok that makes much more sense, as technologies are designed to be more complementary, there's more complementary support (from the people involved).

[19:34:06.0000] <tantek>
survey answered with rationale: https://www.w3.org/2002/09/wbs/40318/microdata-status-preference-poll/results?

[19:34:15.0000] <tantek>
Thanks for the heads-up MikeSmith, othermaciej

[19:34:23.0000] <MikeSmith>
hai

[19:37:08.0000] <MikeSmith>
othermaciej: so I was going to say I hope it's not considered an abuse if I speculatively attach to a bug a WebKit mac-platform-specific layout test without actually running the test in my environment

[19:37:20.0000] <MikeSmith>
for the purpose of un-failing the mac-ews bot

[19:38:06.0000] <MikeSmith>
the problem I am having is that I have a chromium build enviornment and my test works in that environment and with the chromium-ews bot

[19:38:26.0000] <othermaciej>
MikeSmith: nothing wrong with using the ews bots for testing, though if the patch is not meant to be reviewed as-is, it would probably be nicer to not flag it and manually submit to ews

[19:40:22.0000] <MikeSmith>
I can't actually submit it to ews myself I don't think. I don't have the perms, do I? I'm not a committer

[19:41:09.0000] <othermaciej>
well I can help you out if that turns out to be an issue

[19:41:25.0000] <MikeSmith>
ok

[19:42:28.0000] <MikeSmith>
anyway the test I wrote passes in my environment and the chromium-ews bot but fails for mac because apparently chromium exposes different AX landmark information to the AT layer than mac does

[19:43:18.0000] <othermaciej>
I think ax tests regrettably require platform-specific results

[19:44:38.0000] <MikeSmith>
OK so I'm realizing that nobody seems to actually care much what chromium ax does, but they do care what mac does, and that's what most all of the existing ax layout tests are checking

[19:44:50.0000] <MikeSmith>
anyway I think I know how to fix it now

[19:45:13.0000] <MikeSmith>
after having gotten some guidance from Chris Fleizach and James Craig

[19:46:02.0000] <othermaciej>
great

[19:47:04.0000] <MikeSmith>
othermaciej: as far as the plaform differences, yeah I know. But it seems like the chromium behavior on OSX should be made to match the mac behavior. There's no good reason for it to be different.

[19:47:11.0000] <MikeSmith>
but I know that's not your problem to solve

[19:47:44.0000] <othermaciej>
MikeSmith: you're probably right that chromium-mac should match mac, but I thought the chromium-ewe bot ran on linux

[19:48:44.0000] <MikeSmith>
oh

[21:21:16.0000] <ginger>
MikeSmith: it may well be a Chromium bug!

[21:26:15.0000] <MikeSmith>
ginger: the specific thing is that mac exposes the landmark as AXSubrole and just AXGroup for AXRole; e.g., AXRole: "AXGroup", AXSubrole: "AXLandmarkMain"

[21:27:12.0000] <MikeSmith>
but in my environment testing with chromium DRT, it exposes the landmark as AXRole and nothing for AXSubrole

[21:28:36.0000] <MikeSmith>
ginger: see the main-element-expected.txt contents at https://bugs.webkit.org/attachment.cgi?id=182695&action=review

[21:31:07.0000] <MikeSmith>
hmm but another thing is, I think if I run Accessibility Inspector on the actual Chromium binary, for the same test case, what it exposes the same thing that mac does

[21:31:12.0000] <MikeSmith>
the right thing

[21:31:24.0000] <MikeSmith>
the landmark as AXSubrole and just AXGroup for AXRole

[21:32:46.0000] <jamesr>
MikeSmith, have a WebKit bug? i can add folks who are knowledgable (and care) about AX stuff on the chromium team

[21:32:48.0000] <MikeSmith>
it makes no sense for the DRT behavior to be different from the Chromium behavior

[21:33:06.0000] <jamesr>
i don't personally know much about that area

[21:33:33.0000] <MikeSmith>
jamesr: thanks -- bug is https://bugs.webkit.org/show_bug.cgi?id=103172

[21:34:09.0000] <MikeSmith>
the test uses this thing window.accessibilityController

[21:34:20.0000] <jamesr>
oh hmm, they're already cc'd

[21:34:24.0000] <MikeSmith>
ah OK

[21:34:33.0000] <jamesr>
and that patch bug isn't (obviously) related to AX roles

[21:34:35.0000] <jamesr>
seems to be a feature?

[21:34:58.0000] <jamesr>
and it's passing on the cr-linux EWS bot?

[21:35:09.0000] <MikeSmith>
jamesr: yeah, for adding a <main> element

[21:35:37.0000] <jamesr>
MikeSmith, well like i said - not my area. Dominic Mazzoni (dmazzoni) and Alice Boxhall (aboxhall) are your contacts for chromium AX questions

[21:35:39.0000] <MikeSmith>
needs and accessibility layout test to land

[21:35:45.0000] <jamesr>
i'm not going to spend time on <main> of all things

[21:35:46.0000] <MikeSmith>
ok, thanks again

[21:35:49.0000] <MikeSmith>
heh

[21:36:22.0000] <annevk>
beautiful tweet MikeSmith

[21:36:52.0000] <MikeSmith>
jamesr: I would not spend any time on it either if  I could get somebody else to do it instead

[21:37:11.0000] <MikeSmith>
annevk: you read Chinese now?

[21:37:20.0000] <MikeSmith>
you'Re making progress, grasshopper

[21:37:42.0000] <MikeSmith>
soon it will be time for you to walk the rice paper without leaving any footprints

[21:37:48.0000] <jamesr>
google translate has fun with it, at least

[21:37:54.0000] <jamesr>
"The speed of light is modified around the the symmetric fusion field of biophysics hidden truth of the universe. The W3C to destroy Judah because he accidentally discovered these secrets. Web browser development team used to conceal the truth about the Holy Spirit pendulum optical universe is HyperNet. The rules for encryption of the time, in the Ogg Theora video codec. As eight legs scorpion eight notes in an octave"

[21:37:59.0000] <MikeSmith>
but first you much snatch these pebbles from my hand

[21:38:14.0000] <jamesr>
which sounds like a relatively normal post to one of the W3C's security lists

[21:38:20.0000] <MikeSmith>
hahaha

[21:38:24.0000] <MikeSmith>
lol

[21:41:55.0000] <MikeSmith>
jamesr: I think I will submit that as my official response for this HTML WG poll about whether the Microdata spec should be normative or not

[21:43:30.0000] <jamesr>
MikeSmith, R=me if you submit the google translated version

[21:43:51.0000] <jamesr>
i really like "As eight legs scorpion eight notes in an octave"

[21:45:54.0000] <annevk>
MikeSmith: unfortunately I could only judge what Google Translate offered

[21:46:35.0000] <annevk>
MikeSmith: but one day I will snatch those pebbles from your hand anyway and walk the rice paper without trace

[21:55:56.0000] <MikeSmith>
annevk: I am sure you will

[21:56:15.0000] <MikeSmith>
jamesr: I can see you are man of philosophy

[22:01:01.0000] <MikeSmith>
ginger: so the test I made is using window.accessibilityController with DRT and that's what is showing AXRole: AXLandmarkMain. So if running Accessibility Inspector with the actuall Chromium binary sees something different than that (as it seems to be), then I guess that means there's something wrong with Chromium window.accessibilityController that causes it to not be showing what it should be showing

[23:18:45.0000] <stevefaulkner>
MikeSmith: re layout test issue, I will ping dominic mazzoni

[23:20:15.0000] <MikeSmith>
stevefaulkner: thanks

[23:21:15.0000] <MikeSmith>
it's not blocking main, because I'm just going to drop the chromium test and have only a mac-platform ax test

[23:22:19.0000] <MikeSmith>
for this patch the mac platform test is the only one anybody was asking for

[23:23:52.0000] <MikeSmith>
but outside of that I would really like to know why my test is passing with the test runner but the actual browser exposes something different than what my test does

[23:24:13.0000] <stevefaulkner>
MikeSmith: OK, have mailed dominic ccd you

[23:24:38.0000] <MikeSmith>
thnaks

[23:26:14.0000] <stevefaulkner>
MikeSmith: re micro data, its not a big ask to answer the survey

[23:26:43.0000] <stevefaulkner>
and if it helps us move on then worth it

[00:11:04.0000] <stevefaulkner>
MikeSmith: check you email, dominic responded in detail

[00:11:28.0000] <stevefaulkner>
oh you already did :-)

[00:12:25.0000] <MikeSmith>
yp

[00:12:37.0000] <MikeSmith>
thanks again man

[00:12:55.0000] <MikeSmith>
Dominic's explanation was very helpfull

[01:32:17.0000] <hsivonen>
whoa, whoa! Someone has used the Schematron custom schema feature of Validator.nu!

[02:36:03.0000] <hsivonen>
sent comments to yet another W3C mailing list: http://lists.w3.org/Archives/Public/public-multilingualweb-lt-comments/2013Jan/

[02:41:02.0000] <MikeSmith>
hsivonen: wow who's using that Schematron part?

[02:41:09.0000] <MikeSmith>
oh ITS?

[02:53:24.0000] <hsivonen>
MikeSmith: dunno who is using it. (I don‚Äôt log that kind of stuff.)

[03:03:19.0000] <MikeSmith>
hsivonen: I bet you a million dollars it was probably Jirka testing something

[03:04:17.0000] <Ms2ger>
/me uses the Schematron part

[03:04:22.0000] <Ms2ger>
MikeSmith, time to pay up :)

[03:04:24.0000] <MikeSmith>
I think there are maybe 25 people in the whole world who have ever written a Schematron schema

[03:04:30.0000] <MikeSmith>
damn

[03:04:50.0000] <MikeSmith>
Ms2ger: Norm, you finally gave yourself away, man

[03:04:57.0000] <Ms2ger>
Oh crap

[03:04:59.0000] <MikeSmith>
you had me tricked for a long tiem

[03:05:53.0000] <MikeSmith>
ladies and gents, let me introduce you to my good friend Norm Walsh aka Ms2ger

[03:06:18.0000] <MikeSmith>
Ms2ger: seriously you got to be kidding me

[03:06:49.0000] <Ms2ger>
MikeSmith, don't you think it was the perfect guise?

[03:06:50.0000] <MikeSmith>
oh you are

[03:06:58.0000] <MikeSmith>
it was

[03:07:18.0000] <MikeSmith>
up til now I was sure you were Larry Masinter

[03:07:35.0000] <Ms2ger>
Excuse me?!

[03:07:50.0000] <MikeSmith>
damn

[03:08:02.0000] <MikeSmith>
that's exacty what Larry would say!

[03:08:08.0000] <MikeSmith>
just like that

[03:08:19.0000] <MikeSmith>
with the "?!"

[03:08:57.0000] <MikeSmith>
in fact he has actualy seriously said "Excuse me?!" to me like that

[03:09:09.0000] <MikeSmith>
so now you have me confused

[03:10:01.0000] <Ms2ger>
Eggcelent

[03:11:20.0000] <MikeSmith>
Ms2ger: so perhaps what it is instead is, your "Ms2ger" is actually multiple people using the same nick, as back when you were doing that same kind of thing with your "Mr Last Week in HTML5" blog posts

[03:12:01.0000] <Ms2ger>
If that's what floats your boat, my dear

[03:12:47.0000] <MikeSmith>
Ms2ger: oh man your true persona is finally emerging

[03:13:08.0000] <MikeSmith>
you must feel freer now, like a great weight has been lifted

[03:13:09.0000] <hsivonen>
hmm. the descriptive text at http://thebjoernhoehrmannproject.org/ has changed

[03:13:27.0000] <MikeSmith>
hsivonen: I blame Ms2ger.

[03:13:32.0000] <smaug____>
Hmm, something is not quite right when reviewing patches which implement something from the spec by far the most of the time goes to trying to understand what the spec says

[03:13:50.0000] <Ms2ger>
MikeSmith, don't get BjÔøΩrn involved!

[03:14:03.0000] <hsivonen>
smaug____: I had that happen to me today when reviewing the ITS patches for V.nu

[03:14:05.0000] <MikeSmith>
smaug____: that could never be true with the HTML spec

[03:14:37.0000] <MikeSmith>
Ms2ger: ok, Bj√∂rn

[03:17:13.0000] <MikeSmith>
smaug____: if you have a problem following implementing something in the HTML spec, it is axiomatic that the reason is, you're not thinking hard enough. Or not rightly. You must think as the spec does. You must *become* the spec. You must become _palpable_.

[03:19:25.0000] <MikeSmith>
Ms2ger: for the record, Norm Walsh is a god. Or at least a demi-god.

[03:19:31.0000] <smaug____>
yeah, obviously I'm the problem

[03:19:49.0000] <MikeSmith>
smaug____: now you're learning

[03:19:51.0000] <Ms2ger>
Clearly the spec was not written for dragons

[03:20:09.0000] <MikeSmith>
Larry is a good too. Just a different kind

[03:20:17.0000] <MikeSmith>
it's like Loki and Thor

[03:21:48.0000] <MikeSmith>
I wrote a lot of XSLT but pretty much everything I know about XSLT I learned from reading Norm's XSLT code for the DocBook stylesheets

[03:22:24.0000] <MikeSmith>
just as I learned Java from reading Henri's validator code

[03:23:01.0000] <Ms2ger>
Just don't ever learn C++ from any code of mine

[03:23:24.0000] <MikeSmith>
damn

[03:23:26.0000] <MikeSmith>
too late

[03:24:00.0000] <MikeSmith>
that's been my strategy

[03:26:38.0000] <MikeSmith>
btw I like how Bjarne Stroustrup says the "++" in the name of the language represents all the extra bloat that he/they added due to lack of ability/will to tell people No when they asked for features to be added to it

[03:26:44.0000] <MikeSmith>
a la SVG

[03:27:00.0000] <MikeSmith>
Hixie aat least is great about saying No

[03:29:22.0000] <MikeSmith>
smaug____: anyway for extra enlightenment you should try implemeenting the outline-algorithm in the spe, an elaborate part of which is something that ends up being a noop when you go to implement it

[03:30:50.0000] <MikeSmith>
and when you go to write the code, you scratch your head and say, there's no way Hixie would take a bunch of time to write in this complicated thing that's really just a noop, so I guess I must be doing something wrong

[03:32:04.0000] <MikeSmith>
and then two hours later after going over it with a fine-tooth comb, you figure out, No, the whole complicated thing really is just a noop

[03:33:16.0000] <smaug____>
:)

[03:39:10.0000] <Stevef>
why isn't <title> content taken into account in the outline algorithm?

[03:43:16.0000] <MikeSmith>
Stevef: dunno. I've never thought about it. But yeah it seems reasonable that it should be

[03:44:06.0000] <MikeSmith>
btw gsnedders implementation of the outline algorithm actually takes alt text for images into account

[03:45:01.0000] <MikeSmith>
for the case where you have like <h1><img alt="My Website!! src=foo.png></h1>

[03:58:43.0000] <Stevef>
cool, not in the validator oultine?

[03:59:12.0000] <MikeSmith>
Stevef: no, because it's not required by the spec

[03:59:32.0000] <MikeSmith>
still it seems like a good refinement

[03:59:50.0000] <Stevef>
that seems like a bug in spec

[04:00:04.0000] <MikeSmith>
perhaps so

[04:01:07.0000] <Stevef>
if the outline algorithm actually gets implemnted anywhere it matters then...

[04:04:00.0000] <MikeSmith>
if anybody cared enough to propose a feature for automatically including a generated TOC in a document, then it would matter

[04:04:24.0000] <MikeSmith>
and it would make sense for browsers to implement the outline algorithm to generate that

[04:04:59.0000] <MikeSmith>
I'm kind of surprised that more Web devs have not asked for such a feature

[04:06:11.0000] <Stevef>
the only user agent implementation i know of i.e. JAWS appears only to modify heading level based on nesting (and does that poorly) it doesn't represent the outline tree

[04:47:23.0000] <MikeSmith>
Stevef: dogs bites man

[04:48:03.0000] <MikeSmith>
if JAWS ever actually implemented anything innovative, that'd be a "man bites dog" story

[04:48:53.0000] <MikeSmith>
the fact that JAWS doesn't implement something, or implements it poorly seems unsurpising

[04:49:17.0000] <MikeSmith>
I guess a thing to do would be to see if the NVDA devs have interest or not

[04:50:39.0000] <MikeSmith>
or if somebody could get them to chime in on on it and say if they see it has a feature that they could do something useful with

[05:03:05.0000] <Stevef>
MikeSmith: NVDA would probably look to firefox to implement the outlining in the acc layer

[05:04:12.0000] <MikeSmith>
Stevef: works for me :)

[05:05:00.0000] <MikeSmith>
so if NVDA though it was important enough, they could help make the case to Mozilla

[05:05:26.0000] <Stevef>
have raised it with dbolter etal no bites

[05:05:32.0000] <MikeSmith>
ok

[05:08:12.0000] <Stevef>
think the algorithm needs further work before I would advocate it

[06:33:17.0000] <zewt>
http://dev.w3.org/2006/webapi/WebIDL/#idl-DOMString DOMString is immutable by definition, right?

[06:35:39.0000] <Ms2ger>
I guess so

[07:33:44.0000] <scrieler>
hi, our ez publish community has some validation errors because our template extension with some meta tags aren't listed for validation. content-type content-language copyright MSSmartTagsPreventParsing for example, do I need a account to add it in the wiki?

[08:53:00.0000] <scrieler>
any admin here?

[08:55:05.0000] <Hixie>
GPHemsley: ping ^

[09:02:38.0000] <dglazkov>
good morning, Whatwg!

[09:03:20.0000] <tantek>
good morning dglazkov!

[09:07:32.0000] <GPHemsley>
Hixie, scrieler: You talkin' to me?

[09:10:02.0000] <scrieler>
I am looking for an admin because I get some meta tag validation errors in our ez publish community template, the validator says I have to add this to your wiki, but the account register is blocked. can u help me?

[09:11:09.0000] <TallTed>
scrieler - can you give us the URL you're trying to work with?

[09:11:10.0000] <GPHemsley>
scrieler: Ah, sure. (Though so could many others in here.) I need a username and an e-mail address from you.

[09:21:12.0000] <Ms2ger>
'This should be "at-keywork token" instead.'

[09:21:18.0000] <Ms2ger>
I don't think so...

[09:34:59.0000] <scrieler>
I am wondering why <meta name="MSSmartTagsPreventParsing" content="TRUE" /> is listed as error although it's listed on the wiki meta page, do anybody has an idea?

[09:35:19.0000] <Ms2ger>
Because the validator has to update

[09:36:00.0000] <scrieler>
ah, ok, thanks

[09:36:56.0000] <Hixie>
GPHemsley: sorry, was just breezing through and figured you'd be able to help :-)

[09:36:59.0000] <Hixie>
/me leaves again

[09:37:52.0000] <GPHemsley>
Hixie: That's fine. But I do want to make the point that you don't actually have to be an admin to register users on the wiki.

[10:33:03.0000] <dbaron>
talking about the spec for <input> is rather painful... "default value" and "defaultValue" aren't distinguished in speech very well

[10:51:11.0000] <Hixie>
dbaron: call the latter "dot default value"

[10:53:24.0000] <Hixie>
wtf is public-html-admin

[10:53:31.0000] <Hixie>
how the heck can one wg need so many mailing lists

[10:54:12.0000] <Ms2ger>
Lots of people with nothing better to do than send emails

[10:59:21.0000] <annevk>
TIL that calling out the security theater at the airport while customs is checking your bag (again and again) makes people uncomfortable.

[10:59:45.0000] <annevk>
But really, my electric toothbrush was close to my laptop charger and that made it suspicious? What kind of operation are they running?

[11:02:20.0000] <Ms2ger>
Oh dear

[11:02:41.0000] <Ms2ger>
Did you get arrested?

[11:06:16.0000] <annevk>
No, but he did ask me who I worked for. So I said I was unemployed. He then asked what I did. I said I did some pro bono work and now get some funding from a charity. He then wondered whether I meant the artist Bono and after that wondered where this Pro Bono corporation was based. Explaining that it's a Latin expression did not help.

[11:07:48.0000] <annevk>
In the end he wished me best of luck with the charities. I think I've been standing there for ten minutes or so.

[11:07:52.0000] <dbaron>
annevk, customs, or security?

[11:08:20.0000] <annevk>
Good point, security. The guy that did the screening.

[11:09:18.0000] <dbaron>
My experience with customs in Europe is that usually there's a door marked "nothing to declare" and a door marked "something to declare", and sometimes there isn't even anybody watching which door you go through to take a declaration.

[11:11:15.0000] <Ms2ger>
There's customs is Europe?

[11:14:15.0000] <Hixie>
Ms2ger: when you exit or enter shengen, yeah

[11:14:30.0000] <annevk>
dbaron: Yeah my bad, it's security screening that's the problem. Getting stopped by customs has been a while.

[11:14:50.0000] <dbaron>
Hixie, no, I think it's the EU

[11:15:10.0000] <dbaron>
Hixie, when I arrived at Heathrow, after immigration and baggage claim, there were 3 lines:

[11:15:23.0000] <dbaron>
 (1) flights from the EU (2) flights not  from the EU, nothing to declare (3) flights not from the EU, something to declare

[11:15:34.0000] <Hixie>
where were these lines going? into the UK?

[11:15:39.0000] <Hixie>
or into the airport's zones?

[11:15:42.0000] <dbaron>
yeah, entering the UK

[11:16:07.0000] <Hixie>
right, so you've already exit shengen

[11:16:11.0000] <Hixie>
schengen, sorry

[11:16:33.0000] <Hixie>
(uk isn't part of schengen)

[11:16:47.0000] <dbaron>
Terminal 1 arrival, directed into the immigration queue (my flight from US, nearby flight arriving from Schengen, both have to go through UK immigration), separate baggage claims for the  flights but not-segregated, and then you're supposed to go through the door depending on which flight you were on

[11:17:11.0000] <dbaron>
right, but my point is that it looked like whether you had to go through customs was a function of whether you were coming from the EU

[11:17:17.0000] <dbaron>
but they were mostly trusting you to go through the right line

[11:17:40.0000] <Hixie>
sure, because irish flights probably go to a different terminal

[11:17:50.0000] <Hixie>
as did domestic flights

[11:18:10.0000] <dbaron>
not necessarily a different terminal, but different paths within that terminal, at least

[11:18:35.0000] <Hixie>
i bet people on flights from switzerland into that area were also to go through the EU line

[11:18:52.0000] <Hixie>
because switzerland is in schengen but not in the EU

[11:19:31.0000] <Hixie>
usually the signs say "[EU] [+]"

[11:19:37.0000] <Hixie>
where EU is the EU flag

[11:19:38.0000] <Hixie>
:-)

[11:20:09.0000] <Hixie>
(dunno what people from Iceland, Liechtenstein, and Norway are supposed to do. Just guess that they count as EU?)

[11:20:24.0000] <Ms2ger>
Stay in their isolation?

[11:21:30.0000] <annevk>
Hixie: they're the same as Switzerland

[11:21:41.0000] <Hixie>
yeah but i've never seen the signs say that

[11:21:57.0000] <Hixie>
the signs either say "Schengen", or have the EU and swiss flags

[11:22:09.0000] <Hixie>
in my (admittedly limited) experience

[11:22:31.0000] <Ms2ger>
You may have been looking for Swiss flags :)

[11:22:33.0000] <annevk>
Hmm, maybe I should start paying some attention to that. I usually only see "EU" which I take it means Schengen for all intents and purposes.

[11:23:01.0000] <Hixie>
Ms2ger: valid

[11:23:39.0000] <Hixie>
annevk: yeah, but there's like 7 countries that aren't in the EU that are in schengen (or have equivalent agreements), and 2 that are in the EU and not in schengen...

[11:23:44.0000] <Hixie>
so it's not actually the same

[11:23:53.0000] <Hixie>
which makes it very confusign for them to use an EU flag for it

[11:24:43.0000] <Ms2ger>
It's not like Brits would identify with the EU flag

[11:25:08.0000] <Hixie>
but it's not like the norwegians would either

[11:25:31.0000] <Hixie>
well that's ironic

[11:25:42.0000] <Hixie>
chrome just gave me the "a script has hung" dialog

[11:25:58.0000] <Hixie>
while i was searching the spec for "slow script" to find out if the spec said anything about the "a script has hung" dialog

[11:29:30.0000] <dbaron>
wikipedia has a nice diagram somewhere

[11:32:16.0000] <annevk>
dbaron: http://upload.wikimedia.org/wikipedia/commons/8/84/Supranational_European_Bodies.png ?

[11:32:33.0000] <dbaron>
annevk, yes, exactly

[11:32:34.0000] <annevk>
in context: http://en.wikipedia.org/wiki/Schengen_Area#Territories_of_Schengen_states_outside_the_Area

[11:32:40.0000] <dbaron>
(I started to look for it, and then got distracted by email)

[11:32:49.0000] <annevk>
Quite a mess :-)

[11:33:26.0000] <dbaron>
It might well be the "EU Customs Union" that matters as to whether you go through Customs... I'd guess.

[11:34:20.0000] <dbaron>
indeed, http://en.wikipedia.org/wiki/European_Union_Customs_Union

[11:36:13.0000] <Ms2ger>
Europe \o/

[11:36:17.0000] <annevk>
Ah yeah, this is why I could bring "cheap" cigarettes and alcohol to Norway for my former colleagues

[11:37:08.0000] <annevk>
But I guess it was because of Schengen that there was almost never an actual passport check in Oslo...

[11:38:43.0000] <Hixie>
annevk: do you know anything about http://www.w3.org/mid/DF0A84C4-AEAB-4716-B23F-FB3BA48BDE3C‚äôgc ?

[11:41:38.0000] <annevk>
My recollection is that Content-Location is a piece of crap.

[11:42:11.0000] <Hixie>
k

[11:42:15.0000] <Hixie>
so i should just ignore that?

[11:42:34.0000] <annevk>
Hixie: http://lists.w3.org/Archives/Public/ietf-http-wg/2009AprJun/0084.html

[11:42:55.0000] <annevk>
I wonder if they actually solved that issue taking our concerns into account...

[11:43:06.0000] <Hixie>
ok well i'm just punting on this then

[11:44:11.0000] <annevk>
http://trac.tools.ietf.org/wg/httpbis/trac/ticket/154 looks like they plan on dropping it affecting the base URL

[11:44:17.0000] <annevk>
so I think you can just defer to them

[11:45:39.0000] <annevk>
Hixie: I can email a reply if you want

[11:45:49.0000] <Hixie>
don't reply on my account

[11:46:06.0000] <annevk>
no, just give the guy a pointer to the httpbis stuff

[11:46:28.0000] <annevk>
if you're planning on not replying for now that might be nice

[11:46:58.0000] <Hixie>
fine i shall reply

[11:47:04.0000] <Hixie>
you and your politeness

[11:47:14.0000] <Hixie>
:-P

[11:48:11.0000] <Hixie>
there, done

[12:35:07.0000] <Hixie>
i wish all the feedback i got was as easy to deal with as jwatt's

[12:41:05.0000] <Yuhong>
 /msg NickServ identify asdasd

[12:41:17.0000] <miketaylr>
uh oh

[12:41:32.0000] <miketaylr>
Yuhong: time to change your pw

[12:43:03.0000] <Yuhong>
ls

[12:43:47.0000] <Yuhong>
Anyway, I wrote this analysis of the HTML legacy parsing based on the Netscape classic source:

[12:43:52.0000] <Yuhong>
http://stackoverflow.com/questions/8318911/why-does-html-think-chucknorris-is-a-color/12630675#12630675

[12:45:25.0000] <Yuhong>
This is the source that was to be used for the cancelled "Mariner" project.

[12:46:07.0000] <Yuhong>
On which I posted this comment: https://news.ycombinator.com/item?id=5070858

[12:49:36.0000] <Yuhong>
BTW, the whole thread is worth reading: https://news.ycombinator.com/item?id=5062761

[13:38:43.0000] <jgraham>
Hixie: You could arrange that by rejecting any feedback not from jwatt

[13:39:00.0000] <Hixie>
i don't think that would lead to the spec quality improvements i want

[13:40:22.0000] <jgraham>
This is what happens when you don't state all the constraints :)

[13:40:48.0000] <Hixie>
:-(

[13:49:17.0000] <Hixie>
it's amazing how steady the rate of new bugs is

[14:00:25.0000] <Hixie>
TabAtkins: you around?

[14:00:44.0000] <Hixie>
TabAtkins: i'm poking at the anchoring thing of <dialog>

[14:00:52.0000] <Hixie>
TabAtkins: specifically, loop protection

[14:01:31.0000] <Hixie>
TabAtkins: i think your solution (enforcing the total ordering on dependencies to be tree order) is the only solution that i've seen that works

[14:02:02.0000] <Hixie>
TabAtkins: but it's unfortunate, and i was wondering if you'd thought of anything to solve this in a different way

[15:04:32.0000] <Hixie>
huh. i'd forgotten that overflow:Scroll doesn't clip descendent position:absolute content.

[15:08:16.0000] <Hixie>
i wonder what we do with anchored dialogs that are inside overflow:scroll areas.

[15:08:27.0000] <Hixie>
1. that are anchored to things outside the overflow

[15:08:33.0000] <Hixie>
2. that are anchored to things inside the overflow


2013-01-18
[20:48:36.0000] <MikeSmith>
hsivonen: three of the W3C validator.nu instances crashed today at almost the same time with segfaults

[20:52:29.0000] <MikeSmith>
hsivonen: looking at the log output, I have no idea why. The last stack trace in the logs is for a SAXStreamer.fatal error from TreeBuilder.startTag(TreeBuilder.java:2859) > TreeBuilder.pushHeadPointerOntoStack(TreeBuilder.java:4574) in the htmlparser code

[20:54:41.0000] <MikeSmith>
but that's a noraml error that appears to occur pretty often in the logs anyway, without any segfault happening

[21:10:23.0000] <MikeSmith>
hsivonen: hmm all of them show that somebody was trying to use the /html5 UI for some reason

[21:11:39.0000] <MikeSmith>
which is not linked to from the main UI nor anywhere, so dunno how they'd even know it was there. I guess I should just disable that but I don't know how

[23:15:05.0000] <stevefaulkner>
MikeSmith: email to webkit dev list from James Craig http://lists.webkit.org/pipermail/webkit-dev/2013-January/023371.html :-)

[00:02:10.0000] <hsivonen>
MikeSmith: seems weird for SAXStreamer to be used in ways that‚Äôd crash

[00:43:43.0000] <MikeSmith>
Stevef: yep, saw that. Will get my test fixed and update the patch

[00:45:00.0000] <MikeSmith>
hsivonen: yeah, pretty sure that had nothing to do with it

[00:45:45.0000] <MikeSmith>
nothing else at all in the logs that would provide a clue about what the cause was, though

[01:31:55.0000] <Stevef>
TabAtkins: didn't think I was putting words in your mouth, I qualified the statement with "appears to think"

[01:33:30.0000] <Stevef>
TabAtknins: on mobile/tablets not an issue, but on desktop...

[01:34:25.0000] <odinho>
Hmm. Whatever happened to the tests-on-GitHub thing?

[01:35:31.0000] <MikeSmith>
odinho: going as planned, far as I know

[01:35:50.0000] <MikeSmith>
some reason to think otherwise?

[01:35:54.0000] <odinho>
MikeSmith: Okay, I thought it was done already? :P

[01:36:01.0000] <odinho>
MikeSmith: I can't find it on github.com/w3c

[01:36:10.0000] <MikeSmith>
eh?

[01:36:17.0000] <MikeSmith>
html-testsuite, right?

[01:36:42.0000] <odinho>
Hmmmm. But but, I'm interested in webapps and webappsec :)

[01:36:49.0000] <MikeSmith>
aah

[01:36:51.0000] <odinho>
Yeah, -- I remember asking about that.

[01:36:52.0000] <MikeSmith>
well

[01:37:13.0000] <odinho>
And "blabla decision needed". So guess I have to do some actual admin work there :P

[01:37:24.0000] <MikeSmith>
odinho: bug Art

[01:37:31.0000] <odinho>
MikeSmith: Okay :]

[01:38:01.0000] <MikeSmith>
Art is great on getting decisions made and stuff done

[01:39:50.0000] <odinho>
MikeSmith: I've seen that :-) So I'll just wait till the end of the day when I guess he'll come on.

[01:40:08.0000] <MikeSmith>
yeah

[01:42:18.0000] <MikeSmith>
Stevef: in the bug, Niwa-san is asking that I put my name in the name field in the changelogs for the patch. So I'll do that but put "Authored by Steve Faulkner." at the top of the body of the changelog.

[01:42:30.0000] <MikeSmith>
if that's OK with you

[01:43:16.0000] <Stevef>
MikeSmith: yeah no problem, the importnat thing is it gets implemented :-)

[01:43:51.0000] <Stevef>
and you did all the hard work getting the tests done, thanks!

[01:44:17.0000] <MikeSmith>
ain't done yet

[01:44:21.0000] <MikeSmith>
well mostly done

[01:44:46.0000] <MikeSmith>
but then everything's always mostly done

[01:45:35.0000] <Stevef>
well the patch itself took a few hours and that is only because I am a noob

[01:45:52.0000] <Stevef>
a few lines of code

[04:50:05.0000] <MikeSmith>
Stevef: question just out of curiosity, one of the existing tests I'm looking at has a comment, "When a header and footer are inside an article, they should not be landmarks."

[04:50:21.0000] <MikeSmith>
and the test has an assertion for checking that

[04:50:58.0000] <MikeSmith>
why is that the expected behavior?

[04:51:58.0000] <annevk>
landmarks are document/application global

[04:52:02.0000] <annevk>
iirc

[04:53:01.0000] <hsivonen>
hmm. so much wrong with the pro-Polyglot rationale

[04:53:11.0000] <hsivonen>
probably not worth the 386, though

[04:55:21.0000] <MikeSmith>
annevk: I see

[04:55:55.0000] <hsivonen>
/me is slightly surprised to see ‚Äúsimple majority wins‚Äù as opposed to ‚Äúchairs decide‚Äù polls at the HTML WG

[04:56:15.0000] <MikeSmith>
hsivonen: me too actually

[04:57:06.0000] <MikeSmith>
they seem to be making a distinction between process issues and technical issues

[04:57:13.0000] <hsivonen>
yeah

[04:59:07.0000] <Stevef>
MikeSmith: thats how webkit have implemented header/footer as their use in HTML is not the same as in ARIA, having lots of headers and footers in pages makes noise if they are all landmarks

[05:00:01.0000] <MikeSmith>
Stevef: you mean that behavior is not required by the ARIA spec?

[05:01:18.0000] <Stevef>
Its not required by HTML5 there is not a one to one mapping between definition and recommended use of header/footer and definition and recommended use of banner/contentinfo

[05:01:40.0000] <Stevef>
as anne said "landmarks are document/application global"

[05:02:09.0000] <Stevef>
they are not meant to be overused otherwise their utiltiy is lost

[05:02:58.0000] <Stevef>
landmark are typically big chunks a macro division of content

[05:04:40.0000] <MikeSmith>
if that's the case then the behavior that WebKit has adopted should be made a requirement in the spec, I think

[05:04:59.0000] <MikeSmith>
Firefox handles them differently?

[05:05:54.0000] <Stevef>
Firefox at the moment does am working on getting them to adopt webkit behaviour, at the moment header isn't exposed as a landmark at all

[05:06:17.0000] <MikeSmith>
oh

[05:06:35.0000] <Stevef>
note: they still get a role in webkit, a more generic 'group' role

[05:06:46.0000] <MikeSmith>
ok

[05:07:29.0000] <MikeSmith>
so to be clear, for the case where they are children of <main> the should still be landmarks, though, right?

[05:07:38.0000] <Stevef>
yes

[05:07:39.0000] <MikeSmith>
if so I can have the test check for that

[05:07:41.0000] <MikeSmith>
ok

[05:07:55.0000] <Stevef>
its only article/section

[05:08:00.0000] <MikeSmith>
hai

[05:09:11.0000] <Stevef>
will need to think on it a bit re: children of main

[05:11:12.0000] <Stevef>
typically header and footer are used as would be expected of banner/contentinfo in the wild, but when they are not they tend to be many instances on a page

[05:12:03.0000] <Stevef>
expected as in a single instance of each

[05:12:45.0000] <Stevef>
278 HTML5 pages using Header and Footer elements http://www.html5accessibility.com/HTML5data/header-footer/index-all.html

[05:13:40.0000] <Stevef>
usually header at top and footer at bottom of page unsurprisingly

[05:36:53.0000] <MikeSmith>
Stevef: oh strike what I said before. It seems like header and footer should not be landmarks if they're childen of main

[05:37:18.0000] <MikeSmith>
because people should not be using them as children of main to begin with, right?

[05:43:31.0000] <hsivonen>
is anyone maintaining a service that diffs W3C HTML and WHATWG HTML and visualizes the differences?

[05:44:23.0000] <MikeSmith>
hsivonen: not that I know of

[05:45:27.0000] <hsivonen>
ok :-(

[05:47:27.0000] <annevk>
MikeSmith: was it announced who got two year and who got one year on the TAG?

[05:47:58.0000] <MikeSmith>
hsivonen: one issue is, I think HTML diffing tools choke on the spec in its current size

[05:47:59.0000] <annevk>
I just noticed again that difference exists

[05:48:06.0000] <MikeSmith>
annevk: it was announced to the AC

[05:48:18.0000] <MikeSmith>
annevk: yeah you got the short straw

[05:48:23.0000] <MikeSmith>
oh

[05:48:25.0000] <MikeSmith>
hmm

[05:48:31.0000] <annevk>
that sounds positive

[05:49:15.0000] <annevk>
http://lists.w3.org/Archives/Public/www-tag/2013Jan/0016.html could be seen either as order of elected or on order of last name with my name incorrectly ordered as would be typical in the US

[05:49:16.0000] <MikeSmith>
I guess I shouldn't have said it here if it's not been announced

[05:49:55.0000] <annevk>
well http://www.w3.org/2001/tag/ has it as public

[05:50:00.0000] <MikeSmith>
annevk: yeah I've no insight into the order he chose

[05:50:57.0000] <annevk>
thanks for looking

[05:52:02.0000] <hsivonen>
annevk: I don‚Äôt see that page saying anything about the newly-elected members

[05:52:18.0000] <annevk>
hsivonen: I meant it'll be public soon enough

[05:52:24.0000] <hsivonen>
ah

[05:54:37.0000] <MikeSmith>
Stevef: if header and footer really are not meant to be used a direct children of main then you could make that an explicit requirement in the spec, in the Content Model part ("Flow content, with no header or or footer children.")

[05:58:45.0000] <annevk>
http://digbysblog.blogspot.ca/2013/01/the-poor-poor-rich-of-wall-street.html trololol

[06:12:07.0000] <MikeSmith>
annevk: yeah in that graphic the distressed looks on the faces of all the people was the best touch

[06:16:17.0000] <MikeSmith>
people struggling on a meager $200,000 salary plus only $25,000 a year on top of that in investment income

[06:16:30.0000] <MikeSmith>
you really have to empathize with their hardship

[06:17:56.0000] <MikeSmith>
but then the kicker is you find out out their taxes are going to increase by $2900

[06:18:44.0000] <MikeSmith>
and then at the injustice of that heinous increase you can only feel outrage

[06:19:06.0000] <MikeSmith>
masterful

[06:20:24.0000] <Stevef>
MikeSmith: that will involve chnages to authroing advice for footer/header is spec

[06:20:50.0000] <MikeSmith>
Stevef: my point is it should not be mere advice

[06:21:02.0000] <MikeSmith>
it should be a requirement

[06:21:29.0000] <MikeSmith>
and yeah I realize it would need a change to the spec

[06:21:40.0000] <Stevef>
MikeSmith: well that means significant changes...

[06:21:46.0000] <MikeSmith>
I'm not asking about it right now for the purposes of tests for the patch

[06:22:02.0000] <MikeSmith>
Stevef: yeah, sure

[06:22:18.0000] <Stevef>
MikeSmith: realise that, need to look at data and use cases then...

[06:22:58.0000] <Stevef>
see what shakes out

[06:23:06.0000] <MikeSmith>
ok

[07:06:49.0000] <Somatt_wrk>
any idea what happens when loading new html5 semantic elements via xhr in IE8 once we've made it discover them ?

[07:07:02.0000] <Somatt_wrk>
can they be parsed properly ?

[07:29:44.0000] <MikeSmith>
Stevef: OK I just posted and updated patch to the bug, with separate ax tests for Chrome and Safari

[07:30:07.0000] <Stevef>
yeah saw that thanks, hopefully will pass

[07:30:18.0000] <MikeSmith>
fingers crossed that it will actually pass when the mac-ews bot runs it

[07:30:31.0000] <MikeSmith>
cause I am not able to actually run it locally

[07:34:54.0000] <MikeSmith>
Stevef: it takes quite a while for the bots to run, but if you check later and all the platform indicators are green for the latest patch, then it's happy times

[07:35:15.0000] <Stevef>
cool will check

[07:35:39.0000] <MikeSmith>
I will now take the opportunity to drop off for a while and drink some shochu

[07:38:21.0000] <Stevef>
have one for me you deserve it

[08:47:18.0000] <annevk>
So is tag‚äôwo subscribed to w3c-ac-forum‚äôwo and am I therefore getting Member-only email again even though I cannot access Member-only archives?

[08:47:41.0000] <annevk>
And also, nobody told me I was added to tag‚äôwo

[09:06:49.0000] <hober>
annevk: you're probably the first person elected to the tag who didn't simultaneously also have Member access

[09:07:28.0000] <annevk>
Does marcosc have Member access? I guess he might because of WebApps.

[10:38:13.0000] <dglazkov>
good morning, Whatwg!

[10:41:17.0000] <astearns>
good morning, dglazkov - is the 'is' attribute still immutable in the latest proposal?

[10:41:37.0000] <dglazkov>
astearns: yup

[10:41:41.0000] <astearns>
ok, thanks

[12:20:41.0000] <Hixie>
dglazkov: by "immutable" you mean "changing it does nothing", right? (not that the attribute itself doesn't change)

[12:25:43.0000] <dglazkov>
Hixie: right

[12:27:00.0000] <Hixie>
good good

[15:23:39.0000] <Hixie>
i stuck the html spec intro into http://splasho.nfshost.com/upgoer5/

[15:23:46.0000] <Hixie>
it said: UH OH! YOU HAVE USED NON-PERMITTED WORDS (SPECIFICATION, DEFINES, WEB, PLATFORM, DETAIL, WEB, PLATFORM, SPECIFICATION, STACK, RELATIVE, SPECIFICATIONS, SUMMED).

[15:23:50.0000] <Hixie>
well bummer

[15:23:55.0000] <Hixie>
that's like half the words of the intro

[15:52:55.0000] <astearns>
hixie: This paper shows how a big part of the world-wide tied-up things works, in lots and lots of ways. It goes with other papers that show how to make things work, shown in this picture:


2013-01-19
[16:02:10.0000] <astearns>
odd that 'shown' is more common than 'web' or 'link'

[16:03:36.0000] <dgorbik>
Hixie: hello. There is a WebVTT requirment "The 'display' property on WebVTT Ruby Objects must be set to 'ruby'." But for just ruby elements in HTML we have those styles: "text-indent: 0;". Should they be different? Or probably display: ruby is not implemented yet in WebKit?

[16:03:39.0000] <Hixie>
TabAtkins: do i have to say anything for :user-error in the HTML spec?

[16:04:09.0000] <Hixie>
dgorbik: text-indent doesn't matter in webvtt's case because it doesn't apply and thus can't be set to anything but zero

[16:04:39.0000] <Hixie>
dgorbik: the problem in HTML is that text-indent inherits, and so anything that's block-like in a phrasing context has to have its text-indent overridden back to 0 so it doesn't get its ancestor's indent

[16:05:07.0000] <dgorbik>
Hixie: then why don't we set display: ruby for HTML?

[16:07:02.0000] <Hixie>
we do

[16:07:14.0000] <Hixie>
search for "ruby {"

[16:07:21.0000] <Hixie>
the first match is where it's set to display:ruby

[16:08:00.0000] <Hixie>
wait, where did you find it set text-indent to zero in the spec?

[16:08:03.0000] <dgorbik>
Hixie: I don't see that in html.css

[16:08:11.0000] <Hixie>
it probably should, but i can't find that line...

[16:08:13.0000] <Hixie>
what's html.css?

[16:08:17.0000] <dgorbik>
No, I've found that in html.css

[16:08:21.0000] <Hixie>
oh

[16:08:25.0000] <Hixie>
i thought you were asking about the spec

[16:08:33.0000] <dgorbik>
these are default css styles in webkit for elements

[16:08:46.0000] <Hixie>
i'm not a webkit developer, so i've no idea

[16:08:51.0000] <dgorbik>
I am now trying to understand whether we have to set display: ruby for html elements as well.

[16:09:30.0000] <dgorbik>
Hixie: so the only thing I need ‚Äî display: ruby should be set for HTML elements as well, not just WebVTT ruby elements?

[16:10:10.0000] <Hixie>
according to the spec, yes, but i have no idea how webkit implements ruby

[16:10:13.0000] <Hixie>
if it implements ruby

[16:10:20.0000] <Hixie>
maybe webkit has special optimisations to do it differently internally

[16:10:28.0000] <dgorbik>
Hixie: okay, thanks, I will try to find that

[16:10:31.0000] <Hixie>
the spec just says what the results have to be like, not what the implementation strategy has to be

[16:10:32.0000] <gsnedders>
Hixie: Why do you not know everything?

[16:29:50.0000] <esprehn_>
dgorbik: I don't think there's a ruby display type

[16:30:19.0000] <dgorbik>
esprehn_: is it being emulated somehow or just not implemented?

[16:30:27.0000] <esprehn_>
dgorbik: oh I see, css3-ruby specifies specific display types

[16:31:02.0000] <esprehn_>
dgorbik: webkit has a hack in RenderObject::createObject that checks the qname and looks at display and produces either an inline ruby or a block ruby

[16:31:08.0000] <esprehn_>
css3 ruby

[16:32:07.0000] <esprehn_>
err, css3 ruby's display types seem broken since it doesn't support block and inline modes

[16:32:36.0000] <esprehn_>
this spec is busted

[16:32:53.0000] <zewt>
it uses ... display types? o_O

[16:36:29.0000] <esprehn_>
zewt: yeah, but doesn't define an inline-ruby or block-ruby or I dunno

[16:36:49.0000] <esprehn_>
I don't think webkit could implement the spec without breaking existing ruby content

[16:38:37.0000] <zewt>
sounds like the wrong axis, though i havn't looked at that spec

[16:39:12.0000] <Hixie>
empty numeric control, you hit the step up button. what value does it take?

[16:39:16.0000] <Hixie>
same question, step down button

[16:39:50.0000] <dgorbik>
esprehn: do we render ruby the way specs require aside the fact we don't set some properties?

[16:39:51.0000] <zewt>
unless there's some use case for a particular behavior it's probably arbitrary

[16:40:16.0000] <zewt>
by default i'd probably just pick 0 (or 1 or an arbitrary value in range if there's a range limit)

[16:40:33.0000] <Hixie>
possible answers: minimum, maximum, default step base, step base, zero...

[16:41:03.0000] <zewt>
min and max don't seem correct, at least

[16:41:17.0000] <Hixie>
i was thinking just snap to the minimum

[16:41:25.0000] <Hixie>
let's see what real ones do...

[16:41:33.0000] <zewt>
what if the range is -9999999999 to 99999999999?

[16:42:03.0000] <Hixie>
what if indeed

[16:42:30.0000] <zewt>
zero or one at least don't go crazy if the range is huge (or if there isn't any range)

[16:43:19.0000] <dgorbik>
esprehn, Hixie: by the way (I was about to ask this at one point). Specs require that 'background-' style rules that are applied to WebVTT objects should be applied to the root of those objects instead (it's called webvtt cue box). So here is a question ‚Äî do you have an idea of how to implement that? As far as I understand we create a RenderStyle for the parent first and then for the children, so we will have to recalc styles after w

[16:43:37.0000] <zewt>
after we$

[16:43:37.0000] <Hixie>
chrome default to zero then takes a step in the given direction, snapping to min/max if it's out of range, as far as i can tell

[16:44:07.0000] <Hixie>
dgorbik: not all webvtt objects, just the root, right?

[16:44:25.0000] <Hixie>
dgorbik: just apply the background to the cue's wrapping box rather than the root box

[16:44:26.0000] <dgorbik>
esprehn: or do some crazy preprocessing... Like manually walking over the rules and splitting them so that 'background-' rules would apply to parent nodes. And only then create renderers

[16:44:30.0000] <Hixie>
("just")

[16:44:54.0000] <Hixie>
opera seems to default to minimum if you go up and maximum if you go down

[16:45:51.0000] <dgorbik>
Hixie: I thought that's for all objects... If any object (even deeply nested one) has this property, it should be applied to the cue box which could be several levels above.

[16:46:01.0000] <dgorbik>
no?

[16:46:54.0000] <Hixie>
no, that would make no sense :-)

[16:47:00.0000] <Hixie>
how would you decide which one was the background?

[16:47:08.0000] <dgorbik>
Hixie: that what I was thinking too

[16:48:47.0000] <dgorbik>
Hixie: hm, is looks like it's now clear about this. I don't remember it was in the previous revision.

[21:27:38.0000] <bambu>
I have index.html, and I copy it to another file called about.html. I alter a paragraph containing the content, and I have a two page site!

[21:28:09.0000] <bambu>
However, to me it seems redundant to have basically two files that are the same apart from a small paragraph, lots of wasted space.

[21:28:29.0000] <bambu>
Is this just how its done?

[21:28:35.0000] <bambu>
Any alternatives?

[21:46:58.0000] <bambu>
Anyone care to read: http://pastie.org/private/7jdn5nelu1zgg6m69pg2dg

[22:21:40.0000] <zewt>
i'll never understand pages with image viewers that hide the image until it finishes loading

[22:22:16.0000] <zewt>
as i sit there waiting for several seconds on a spinner or whatever annoyed because they're jumping hoops to disable incremental loading that browsers have spend tons of time making work

[22:23:09.0000] <zewt>
sometimes i can only wonder if peoples' brains have an on/off switch (stuck in the more unfortunate position)

[02:09:02.0000] <ashemedai>
So this whole new Opera ICE using Webkit. I was amazed.

[02:09:13.0000] <ashemedai>
(Or Ice rather.)

[06:15:28.0000] <MikeSmith>
so who's the guy in the Opera Ice video?

[06:15:34.0000] <MikeSmith>
I don't recognize him

[07:01:44.0000] <espadrine>
MikeSmith: I thought that was Opera's CEO?

[07:35:09.0000] <Ms2ger>
Opera has a CEO?

[08:01:14.0000] <MikeSmith>
Ms2ger: yeah Opera has a CEO but they're planning to replace him with WebKit

[08:01:23.0000] <Ms2ger>
I see

[08:01:43.0000] <MikeSmith>
espadrine: that's no Opera's CEO in that video

[08:01:59.0000] <Ms2ger>
Insufficient pointy hair?

[08:02:19.0000] <MikeSmith>
heh

[08:02:58.0000] <MikeSmith>
well, for one thing, he wouldn't be caught dead wearing the shirt that guy is wearing

[08:03:54.0000] <MikeSmith>
there are a lot of varieties of bad fashion sense in the world, but there's nothing quite like the northern European variety

[08:04:34.0000] <MikeSmith>
especially Scandinavian

[08:05:10.0000] <MikeSmith>
I mean what message is dude sending with that shirt

[08:05:36.0000] <Ms2ger>
And that coming from MikeSmith :)

[08:06:07.0000] <MikeSmith>
well, I would make that shirt look good

[08:06:17.0000] <MikeSmith>
it's all about how you wear it

[08:08:02.0000] <Ms2ger>
Adding a cowboy hat, maybe?

[08:10:20.0000] <MikeSmith>
either that or one of my pimp canes

[08:40:44.0000] <Ms2ger>
"Leading the Web to its fool potential"

[08:47:45.0000] <divya>
:)))

[08:47:55.0000] <divya>
thats what i was wondering MikeSmith

[08:48:01.0000] <divya>
that dude looks so not like lars

[09:54:13.0000] <MikeSmith>
divya:  indeed

[09:54:57.0000] <MikeSmith>
reminds me of somebody, but definitely not Lars

[09:55:25.0000] <MikeSmith>
https://mobile.twitter.com/kripken/status/292685421282988033

[10:23:24.0000] <hsivonen>
has annevk's URL spec been implemented in Java yet?

[11:20:09.0000] <zewt>
gar i need to write a gm script to somehow stop href from being changed during onmousedown, to kill those obnoxious fake-link things google and other sites do

[11:34:58.0000] <zewt>
http://pastebin.com/vcjZ7nuh bad enough that google was doing it, now other sites are starting to copy it

[11:50:14.0000] <zewt>
oh i left it killing all onmousedowns, that won't exactly scale heh

[13:33:47.0000] <Moo-_->
zewt: aah... so that's how they do it


2013-01-20
[04:11:48.0000] <Ms2ger>
/me finds http://www.damowmow.com/playground/canon.txt

[06:11:48.0000] <MikeSmith>
novel use of hgroup in the markup for this thing http://codepen.io/bennettfeely/pen/BeKfA

[08:25:06.0000] <jgraham>
Ms2ger: Disappointed to find that isn't a web standard aimed at controlling model castles

[08:25:30.0000] <Ms2ger>
Pff

[08:25:34.0000] <Ms2ger>
Castles don't have trains

[08:54:46.0000] <Hixie>
MikeSmith: "novel"

[08:57:55.0000] <MikeSmith>
hgroup all the things!

[09:00:21.0000] <MikeSmith>
and throw in some <label> as a bonus

[11:20:58.0000] <MikeSmith>
Èñ¢Êù±ÈÄ£Âêà

[11:22:01.0000] <Ms2ger>
Kanto Union?

[11:39:12.0000] <SimonSapin>
TabAtkins: https://dvcs.w3.org/hg/csswg/diff/8e74e0231167/css3-syntax/Overview.src.html is not right. You need to emit the delim token, and you‚Äôre already in the data state

[11:40:58.0000] <SimonSapin>
TabAtkins: wait, no. It‚Äôs s/switch to the data state/switch to the ident state/

[11:53:00.0000] <SimonSapin>
TabAtkins: 3.3.12.  Ident state also needs to be updated. And at-keywords

[11:56:21.0000] <Ms2ger>
TabAtkins, and if you have self-imposed rules, please document them in the spec :)


2013-01-21
[22:35:47.0000] <hsivonen>
‚ÄúThe polyglot markup community‚Äù http://lists.w3.org/Archives/Public/public-html/2013Jan/0052.html

[22:42:13.0000] <MikeSmith>
hsivonen: he forgot to add the word "thriving" there

[22:42:58.0000] <hsivonen>
I‚Äôm trying to figure out how to ask for the membership list of said community without Sam telling me I‚Äôm using emotive language or something.

[22:43:41.0000] <hsivonen>
I genuinely curious if the community is larger than Sam and Leif

[22:47:46.0000] <MikeSmith>
I wonder whether Leif actually even authors anything using polyglot markup

[22:49:56.0000] <MikeSmith>
heycam|away: in http://mcc.id.au/BrowserMiniconf/LCA2013/Schedule "Below is the schedule for the Browser Miniconf", the URL for the Browser Miniconf link goes to the 2012 info page

[22:50:10.0000] <MikeSmith>
instead of to the 2013 one

[22:51:12.0000] <MikeSmith>
shanestephens: ‚Üë

[22:57:47.0000] <hsivonen>
I wonder if the Opera Ice video is an elaborate troll: the UI depicted has Windows 8 -like gestures and animations and there already was an ICE Browser from Norway.

[23:03:00.0000] <MikeSmith>
does make you wonder who leaked it and why

[23:04:08.0000] <MikeSmith>
and anyway the writeups about make speculations that aren't substantiated by anything that's actually in the video

[23:04:23.0000] <hsivonen>
yeah

[23:05:42.0000] <MikeSmith>
speaking of elaborate trolls I wonder sometimes if html5test is in the category

[23:06:09.0000] <hsivonen>
the remarks at the end of the video sound like they could be offensive to people who‚Äôve worked on Opera‚Äôs products for years. I find it surprising that the presenter would say that to an audience of Opera employees.

[23:08:32.0000] <hsivonen>
I always get annoyed when journalists score browsers mainly by publishing html5test.com scores

[23:09:45.0000] <MikeSmith>
there's not shortage recently of some Opera people saying things that are offensive to people who've worked on Opera's products for years

[23:10:27.0000] <hsivonen>
s/journalists score/journalists rate/

[23:10:31.0000] <MikeSmith>
hsivonen: I was just looking at the dependency tree for the htmltest on mozilla bugzilla

[23:11:00.0000] <MikeSmith>
and I noticed the bug for keygen

[23:12:15.0000] <MikeSmith>
god knows why the htmltest dude thinks keygen merits having a feature-test there

[23:39:42.0000] <Stevef>
MikeSmith: congrats on finally getting the main layout tests working on webkit :-)

[23:43:14.0000] <MikeSmith>
Stevef: yeah the WebKit ax test-runner infrastructure is .. idiosyncratic

[23:43:22.0000] <MikeSmith>
but it gets the job done

[23:44:18.0000] <Stevef>
right

[23:44:22.0000] <MikeSmith>
now that I've learned it I suppose I should put it to good use and write a some more tests

[23:45:46.0000] <MikeSmith>
btw I didn't include a test to check if header and footer get de-landmarked if they're descendants of main

[23:47:11.0000] <MikeSmith>
because, first off, the patch doesn't yet actually implement that behavior

[23:47:53.0000] <MikeSmith>
hmm or perhaps it does

[23:47:59.0000] <Stevef>
OK , thats gets handled by article/secton currently, need to look into it and spec it out

[23:48:48.0000] <MikeSmith>
ok so a follow-up bug could be opened for that later

[23:49:25.0000] <MikeSmith>
I guess I should quit speculating and just write the test now to see

[23:49:33.0000] <Stevef>
yes, i have some related feedback to process

[23:49:59.0000] <MikeSmith>
but not make the test part of the initial patch

[23:57:25.0000] <Ms2ger>
MikeSmith, not just their a11y tests :)

[00:01:51.0000] <MikeSmith>
Ms2ger: yeah but I suspect that a11y test stuff for other engines maybe have some similar esoteric-ness

[00:02:32.0000] <Ms2ger>
/me grumbles at ReSpec

[00:03:36.0000] <hsivonen>
/me keeps reading a11y as ally

[00:03:43.0000] <hsivonen>
testing their allies

[00:05:59.0000] <MikeSmith>
ax is  easier to type

[00:06:04.0000] <MikeSmith>
and read

[00:08:07.0000] <hsivonen>
would you rather accessibility be an ax or an ally?

[00:08:46.0000] <MikeSmith>
I prefer the ax

[00:09:24.0000] <MikeSmith>
btw am I missing something or is there really no way in bugs.webkit.org to do component watching?

[00:11:28.0000] <MikeSmith>
I know the bugzilla version there doesn't have the component-watching feature but it also doesn't have the QA contact field so no use of the convention of putting a unique address there to follow

[00:22:20.0000] <Stevef>
MikeSmith: the effect of section/article on header/footer and potential effect of main on same needs to be added to WAI-ARIA section of HTML in the mapping tables will file a bug etc

[00:22:46.0000] <MikeSmith>
Stevef: ok

[00:24:36.0000] <Stevef>
there is quite a bit of work on the WAI-ARIA section needed in 5.1 to better reflect implementations

[00:25:35.0000] <hsivonen>
Hixie, dglazkov: have you pinged the SVG and MathML groups about element names with a hyphen in them being reserved from now on?

[00:27:10.0000] <MikeSmith>
Stevef: I'm a bit confused about why the job of speccing some of this behavior falls to HTML instead of to PFWG to define in the ARIA specs

[00:27:51.0000] <Stevef>
MikeSmith: because the host language defines the mappings for the host language features

[00:28:01.0000] <MikeSmith>
Stevef: I realize they can't define anything about HTML elements, but they can for the related abstractions

[00:28:13.0000] <MikeSmith>
this is more than just mappings

[00:28:40.0000] <MikeSmith>
and it should be handled the same way across all host languages

[00:30:14.0000] <Stevef>
well that maybe something that can be refined in aria 1.1

[00:31:09.0000] <MikeSmith>
Stevef: yeah that seems to be the proposed solution for any suggestions/comments that people make about aria

[00:31:25.0000] <MikeSmith>
"yeah we gonna fix that in the next version"

[00:31:31.0000] <hsivonen>
‚ÄúGoogle Chrome does not use the Windows Media Player plugin, it uses the ActiveX control instead.‚Äù Really?

[00:32:18.0000] <hsivonen>
is there even WMP-dependent Web content that anyone cares about anymore?

[00:33:55.0000] <Stevef>
I don't have much influence or input on the wai-aria spec and only have so many hands

[00:56:43.0000] <hsivonen>
/me wonders if there are polyglot elephants, too

[01:17:06.0000] <Stevef>
MikeSmith: and in the case of header/footer and banner/contentinfo we have an imperfetc match between the semantics and authoring requirements/advice, in which case the differences i think need to be defined in HTML

[01:27:20.0000] <MikeSmith>
Stevef: ok

[02:06:51.0000] <a_not_registed_n>
hi@all

[02:11:37.0000] <a_not_registed_n>
i¬¥m trying to get an animation to work. (with <canvas>) is it possible to remove a single Item? for example the last one?

[02:12:24.0000] <a_not_registed_n>
asking because "context.clearRect" delete all to the ground with background and other layers

[02:13:08.0000] <Ms2ger>
Canvas is a bitmap, so, no

[02:21:28.0000] <a_not_registed_n>
so i had to draw in every frame everything again?

[02:22:24.0000] <tomasf>
if you want "layers", maybe you should use something other than a canvas

[02:24:31.0000] <a_not_registed_n>
layers would be nice. can you suggest something?

[02:25:08.0000] <tomasf>
what are you trying to accomplish?

[02:27:54.0000] <a_not_registed_n>
an application using Phonegap. so i can only use HTML5/CSS/JS

[02:28:54.0000] <a_not_registed_n>
and had to run on webkit

[02:36:07.0000] <a_not_registed_n>
can you store different transparent <canvas> on each other? selct by id and draw in wihout "damage" the other layers...

[02:44:29.0000] <hsivonen>
whoa. annevk is not on IRC.

[03:01:53.0000] <darobin>
lol, hsivonen :) ‚Äú[t]he polyglot markup community‚Äù consists of you and Sam?

[04:11:05.0000] <annevk>
HTMLSelectElement.remove()

[04:12:28.0000] <Ms2ger>
Fun, isn't it?

[04:13:17.0000] <hsivonen>
annevk: you may be interested in the Character Encoding menu on Firefox for Android

[04:13:28.0000] <hsivonen>
annevk: it has fewer options than the desktop menu

[04:13:56.0000] <hsivonen>
annevk: and the list is based on looking at what kind of list the stock browser offers

[04:14:08.0000] <Ms2ger>
And no idea about window.event, but that feels uglier

[04:14:10.0000] <hsivonen>
minus removing GBK for some problem or another

[04:14:38.0000] <hsivonen>
(I wish we were more scientific about these menus)

[04:15:02.0000] <hsivonen>
(more scientific than treating the Android stock browser as a role model)

[04:16:44.0000] <hsivonen>
btw, I don‚Äôt see a Character Encoding menu at all in Chrome Beta for Android (en-US)

[04:26:58.0000] <annevk>
hsivonen: cool

[04:27:06.0000] <annevk>
Ms2ger: I guess Opera has srcElement too?

[04:27:35.0000] <annevk>
hsivonen: problem is I don't have Android at the moment, and I believe the Android phone I have somewhere hidden away does not run Gecko :/

[04:27:45.0000] <Ms2ger>
That's what was claimed in the bug, I haven't tested

[04:28:01.0000] <annevk>
I think Opera has window.event too though.

[04:28:06.0000] <annevk>
Does WebKit have that?

[04:29:17.0000] <Ms2ger>
Dunno

[04:32:34.0000] <hsivonen>
annevk: Firefox for Android now runs on ARMv6

[04:32:41.0000] <hsivonen>
and with less RAM

[04:32:50.0000] <hsivonen>
GLES is still a requirement, though

[04:34:05.0000] <hsivonen>
from the ‚ÄúDon‚Äôt they do QA or dogfooding?‚Äù department: Eclipse CDT regressed the ability to attach to a process with gdb and shipped

[04:34:16.0000] <annevk>
Does that mean compatible with http://en.wikipedia.org/wiki/HTC_Wildfire ? There's no easy to go by chart

[04:34:45.0000] <annevk>
Guess I can take a look tonight

[04:36:47.0000] <hsivonen>
annevk: it has too little RAM to be officially supported

[04:36:51.0000] <hsivonen>
might work anyway

[04:47:33.0000] <annevk>
Ms2ger: w("event" in window) -> true in Chrome

[05:13:52.0000] <annevk_>
Oh my bad. I missed that hsivonen made the same argument as I did in the other email.

[05:14:27.0000] <annevk>
"When 50% of the polyglot markup community itself can‚Äôt get it right, why bother?"

[05:15:17.0000] <annevk>
XHTML was hard and failed with the web developer community. So lets try to be HTML and XHTML at the same time, surely that's simpler!

[05:15:36.0000] <annevk>
Lessons learned: less than zero.

[05:17:01.0000] <odinho>
Hmm. I really thought the tests-at-github thing was resolved.

[05:17:18.0000] <odinho>
Would be uncool having to do it all over again for webapps and webappsec.

[05:19:58.0000] <annevk>
Man ReSpec sucks with fragment identifiers...

[05:20:12.0000] <annevk>
FOUC and you're at the top rather than what you were trying to read...

[05:23:07.0000] <jgraham>
odinho: Well last time it came up, ArtB basically said "no experimenting in my working group"

[05:23:27.0000] <odinho>
jgraham: Oh, I just sent an email saying "can we move now plzs"

[05:23:30.0000] <annevk>
My feeling at that point is that ReSpec appears to optimize for editors at the expense of everyone else, but actually optimizes for ReSpec at the expense of everyone.

[05:23:38.0000] <jgraham>
So now that the idea is proven in HTML, it should be OK to do in WebApps

[05:23:40.0000] <odinho>
jgraham: Anyway html tests already did it. So it's not experimental any more.

[05:24:01.0000] <jgraham>
But of course there might be some other reason given not to do it

[05:24:56.0000] <jgraham>
You going to review the pull requests btw?

[05:27:00.0000] <odinho>
Was intending to take a look

[05:27:37.0000] <jgraham>
Cool

[06:03:09.0000] <Ms2ger>
odinho, fwiw, I'd prefer having one repo for html+webapps+...

[06:27:10.0000] <Ms2ger>
darobin, AFAIK, yes

[06:27:33.0000] <annevk_>
Ms2ger: IDB also doesn't define event handlers very clearly in terms of HTML

[06:30:57.0000] <Ms2ger>
annevk, it's better at defining other things?

[06:31:16.0000] <darobin>
Ms2ger: I can't find usage info on this, are you sure it's well deployed, even in mobile?

[06:31:17.0000] <jgraham>
Ms2ger: Out of interest, why one repo?

[06:31:36.0000] <Ms2ger>
jgraham, why two?

[06:31:59.0000] <annevk>
Ms2ger: that was rhetorical?

[06:32:19.0000] <Ms2ger>
jgraham, I just don't see the point of silo'ing things by working group

[06:32:59.0000] <jgraham>
Ms2ger: Fair enough. I don't think it's a very serious problem because in practice it isn't hard to move things from one repo to another if needed

[06:33:11.0000] <Ms2ger>
jgraham, especially since I seem to remember that people submitted tests for WebApps deliverables to the HTML test suite before

[06:33:11.0000] <darobin>
I hear a lot of people asking for an integrated TS with everything

[06:33:16.0000] <jgraham>
And smaller repos can be nice

[06:33:23.0000] <darobin>
no one gives a shit about how things are cut up into groups

[06:33:44.0000] <annevk>
yeah

[06:33:54.0000] <annevk>
that's why people like #whatwg

[06:34:00.0000] <jgraham>
darobin: But, Process man, Process

[06:34:07.0000] <darobin>
mmmm, patents ‚Äî not process

[06:34:20.0000] <Ms2ger>
Webapps wouldn't be too bad, but figuring out where tests for Performance or Touch Events go...

[06:34:23.0000] <darobin>
you wouldn't have RF if there weren't groups

[06:34:31.0000] <darobin>
(no matter how much that may suck)

[06:34:56.0000] <annevk>
you can have groups but shared tests...

[06:35:03.0000] <jgraham>
darobin: I know, but now I can't tell what you are advocating for tests

[06:35:08.0000] <annevk>
they're not correlated that way

[06:35:12.0000] <darobin>
at the same time, I got a lot of complaints at TakeOff about how participating in standards involved receiving tons of email about stuff you don't give a shit about

[06:35:29.0000] <darobin>
it seems people don't want to care where specs belong, but would like one list per spec, or even per feature

[06:35:45.0000] <darobin>
Making Communities Happy Is Hard: Film at 11

[06:36:00.0000] <Ms2ger>
More lists tends to lead to more email too, unfortunatel

[06:36:01.0000] <Ms2ger>
y

[06:36:07.0000] <darobin>
jgraham: I tend to lean towards Ms2ger's position ‚Äî have just the one repo

[06:36:46.0000] <annevk>
Yeah, more lists doesn't necessarily mean more productive discussion. And you'll waste a bunch of time when reviewing to figure out where feedback has to go. I hit that problem each time I review.

[06:36:51.0000] <darobin>
someone even told me "I like the HTML WG better than WHAT WG because there's almost no email there nowadays"

[06:36:57.0000] <darobin>
I tried hard not to giggle

[06:37:02.0000] <Ms2ger>
darobin, I failed :)

[06:37:50.0000] <annevk>
We could just give everyone their own mailing list with no email.

[06:37:55.0000] <darobin>
yay!

[06:38:03.0000] <Ms2ger>
indexedDB of type IDBFactory, readonly

[06:38:03.0000] <Ms2ger>
    This attribute provides applications a mechanism for accessing capabilities of indexed databases.

[06:38:12.0000] <jgraham>
public-annevk‚äôwo? I like

[06:38:23.0000] <darobin>
Ms2ger: you failed at something in particular or just in general?

[06:38:35.0000] <Ms2ger>
darobin, I failed not to giggle

[06:38:49.0000] <darobin>
jgraham: and then annevk would unsub from that list due to the copyright commitment

[06:38:53.0000] <darobin>
Ms2ger: :)

[06:39:16.0000] <Ms2ger>
And create annevk‚äôlwo instead?

[06:40:00.0000] <annevk>
darobin: heh, I'll keep waving that flag until it's settled

[06:40:11.0000] <annevk>
darobin: don't think it's a problem for email though, but I might be missing something

[06:40:17.0000] <darobin>
you need guns, not flags

[06:42:15.0000] <jgraham>
Guns that pop flags out of the end?

[06:44:27.0000] <darobin>
jgraham: you never tell ‚Äî that's the point

[06:44:44.0000] <darobin>
hmmmm, just received the first valid argument against using GH to date

[06:45:01.0000] <darobin>
being this: http://viewdns.info/chinesefirewall/?domain=github.com

[06:45:06.0000] <darobin>
that's annoying

[06:46:22.0000] <annevk>
Ms2ger: Indexed DB returns arbitrary objects? Are those described in sufficient detail?

[06:47:34.0000] <annevk>
Whoa, they haven't blocked my site.

[06:49:18.0000] <Ms2ger>
"Getting this property must return the source for the request. Returns null when there is no source set."

[06:49:53.0000] <Ms2ger>
darobin, http://viewdns.info/chinesefirewall/?domain=bitbucket.org :)

[06:50:37.0000] <hsivonen>
darobin: China can DNS poison any domain any day. Any Web-based tool you choose today can be banned tomorrow.

[06:50:48.0000] <darobin>
Ms2ger: which just shows how unused it is :)

[06:50:57.0000] <hsivonen>
darobin: so it doesn't make much sense to choose tools based on what's banned in China

[06:50:59.0000] <darobin>
hsivonen: I know, but it's a small factor to take into account

[06:51:18.0000] <darobin>
I don

[06:51:20.0000] <darobin>
gah

[06:51:31.0000] <darobin>
I don't like the idea of banning chinese contributors, even if it's not our fault

[06:51:39.0000] <Ms2ger>
hsivonen, clearly with so many Chinese members (http://lists.w3.org/Archives/Public/www-archive/2013Jan/0019.html), they wouldn't be able to block anything W3C hosts :)

[06:52:16.0000] <hsivonen>
darobin: well, Finland blocked lists.w3.org as child porn one time. Should we stop using lists.w3.org?

[06:52:29.0000] <darobin>
hsivonen: I'm not talking about not using

[06:52:35.0000] <darobin>
I'm pondering proxying

[06:52:43.0000] <darobin>
totally different notion :)

[06:52:48.0000] <annevk>
thanks Ms2ger

[06:52:58.0000] <hsivonen>
darobin: ah

[06:53:13.0000] <hsivonen>
http://hsivonen.iki.fi/access-blocked/ for those with short memory

[06:53:28.0000] <darobin>
to be fair though, I don't think that preventing children from accessing lists.w3.org is a bad idea :)

[06:53:44.0000] <darobin>
it may forever scar one

[06:53:59.0000] <Ms2ger>
darobin, I don't think it's just children that are blocked from child porn

[06:54:04.0000] <hsivonen>
oops. it was www.w3.org not lists.w3.org

[06:54:36.0000] <darobin>
oh, child porn, I had misparsed hsivonen's initial line

[07:03:36.0000] <hsivonen>
hmm. the grammar coherence of my last email to public-html is unusually bad

[07:04:19.0000] <hsivonen>
forgetting the start of the sentence before getting to the end of the sentence

[07:04:22.0000] <hsivonen>
multiple times

[07:04:54.0000] <darobin>
ah, the well know problem of timblificiation

[07:06:02.0000] <darobin>
if you start also speaking that way, you might want to consider joining a support group

[07:58:34.0000] <Stevef>
darobin: spam man

[07:58:43.0000] <darobin>
\o/

[07:58:59.0000] <darobin>
Stevef: well, *if* I can succeed

[07:59:08.0000] <darobin>
right now I'm getting a 502 on updating the DB

[07:59:22.0000] <Stevef>
so do we have a 5.1 componenet now?

[07:59:49.0000] <darobin>
no, it's just HTML5 spec

[08:00:16.0000] <darobin>
I don't see much of a point in adding a new component for 5.1, we just keep working on the same bug set

[08:00:17.0000] <Stevef>
OK so do we use HTML5 spec component for 5.1 bugs?

[08:00:22.0000] <darobin>
yup

[08:00:25.0000] <Stevef>
cool

[08:00:33.0000] <darobin>
there's a CR component for things that should definitely target the CR draft

[08:00:34.0000] <zewt>
(there's also no such thing as "html5.1" dot dot dot)

[08:01:15.0000] <Ms2ger>
There's just a HTML :)

[08:01:33.0000] <Stevef>
if you believe there is

[08:01:52.0000] <zewt>
pretty telling that hixie spends years getting everyone to understand that html is unversioned, then w3c people go "yay, hixie's gone! now we can finally increase the version number!"

[08:02:13.0000] <zewt>
(heh)

[08:02:26.0000] <Stevef>
yeah thise bastard W3C people

[08:02:30.0000] <Stevef>
those

[08:02:43.0000] <darobin>
I don't care, all I want is the right set up for "This is not the version you're looking for" jokes

[08:02:44.0000] <zewt>
call it a lumping together :P

[08:02:55.0000] <darobin>
the rest is immaterial

[08:03:21.0000] <Ms2ger>
Twss

[08:03:28.0000] <Stevef>
besides its not HTML5.1 its HTML 5.1

[08:03:43.0000] <Stevef>
nightly no less

[08:09:09.0000] <Stevef>
the one fortified with <main> ... runs and hides

[08:09:14.0000] <darobin>
oh yeah, forgot that we also want to have the ability to make "cast thy coloured nightlies and look upon Denmark as a friend" jokes

[08:10:36.0000] <Stevef>
darobin: did you see my whine on htmlwg irc about wonky 5.1 links?

[08:10:56.0000] <Ms2ger>
Meanwhile, the WHATWG server is powered by Shakespeare spinning in his grave

[08:11:11.0000] <darobin>
Stevef: nope, but I am already aware that something broke the build script

[08:11:29.0000] <darobin>
that would break links

[08:11:35.0000] <darobin>
Ms2ger: I'm all about renewables :)

[08:11:48.0000] <Stevef>
FYI weird stuff going on with html 5.1 follwoing a link in multipage redirects to single page - results in browser hang...

[08:12:34.0000] <darobin>
Stevef: yeah, I don't know what broke us but it broke us bad

[08:12:43.0000] <darobin>
last time it was a very poorly placed closing element

[08:16:28.0000] <darobin>
~/ Bugs like violence, Break the silence, Come crashing in, Into my little mailbox /~

[08:42:09.0000] <jgraham>
Ms2ger: I thought there was only XUL?

[08:42:33.0000] <Ms2ger>
/me eyes jgraham 

[09:02:02.0000] <annevk>
hsivonen: we could consider utf-8 a special label maybe just like utf-16

[09:02:42.0000] <annevk>
hsivonen: guess you'd want telemetric data on how often the encoding is changed from utf-8 to something else

[09:40:14.0000] <MikeSmith>
so <main> just now landed in WebKit

[09:40:20.0000] <MikeSmith>
http://trac.webkit.org/changeset/140341

[10:42:04.0000] <MikeSmith>
"content-type (mime type) squatting" is an apt was to characterize polyglot http://lists.w3.org/Archives/Public/www-tag/2013Jan/0049.html

[11:32:57.0000] <MikeSmith>
wow some quality Bjoern-age to www-archive just now

[11:33:19.0000] <MikeSmith>
http://lists.w3.org/Archives/Public/www-archive/2013Jan/0021.html

[11:34:10.0000] <MikeSmith>
2000 words worth

[11:44:54.0000] <Ms2ger>
Hmm, "Angstklauseln"

[11:50:04.0000] <Ms2ger>
And it ends with a shot at Hixie, nicely done

[11:55:24.0000] <MikeSmith>
"Angstklauseln" is a great word

[11:55:50.0000] <MikeSmith>
I wonder if that's actually commonly used or if he coined it

[11:58:53.0000] <jgraham>
http://de.wikipedia.org/wiki/Disclaimer

[11:59:36.0000] <jgraham>
Links to http://angstklauseln.wordpress.com/

[12:01:26.0000] <MikeSmith>
ah

[12:01:29.0000] <MikeSmith>
ok

[12:01:46.0000] <MikeSmith>
well we should use the equivalent in English

[12:01:58.0000] <MikeSmith>
it's an apt description

[12:02:02.0000] <Ms2ger>
/me checks if http://angstklauseln.wordpress.com/ is run by BjÔøΩrn

[12:02:07.0000] <MikeSmith>
hah

[12:02:38.0000] <Ms2ger>
Apparently not

[12:04:03.0000] <MikeSmith>
"Frankenmails" is not up to par though. SpuckteAntworten would be better

[12:04:27.0000] <MikeSmith>
(for the shot at Hixie)

[12:06:20.0000] <MikeSmith>
speaking of Hixie, here's Hixie and BruceL in Japanese: http://www.publickey1.jp/blog/13/hixie_html5hixie.html

[12:06:41.0000] <MikeSmith>
retitled "Why does Hixie always say No?"

[14:54:03.0000] <heycam>
MikeSmith, thanks, fixed the link

[14:55:04.0000] <heycam>
hsivonen, Hixie, I don't think SVG has any plans on introducing hyphenated element names. the existing ones are solely for css-descriptors-in-element-form, and we really shouldn't have those anyway

[14:55:19.0000] <heycam>
hsivonen, Hixie, the existing hyphenated ones might well all be removed from SVG 2 too

[15:02:44.0000] <heycam>
TabAtkins, is @host meant to also replace @global?

[15:03:17.0000] <heycam>
TabAtkins, so you could write for example:  @host { body > :scope > p { ‚Ä¶ } }

[15:03:19.0000] <heycam>
?


2013-01-22
[19:08:48.0000] <MikeSmith>
President of Japan's 2nd biggest mobile operator says they are considering to market smartphones with Firefox OS

[19:08:55.0000] <MikeSmith>
http://japan.cnet.com/news/service/35027172/

[19:09:06.0000] <MikeSmith>
„ÄåFirefox OS„Äç„ÇíÊê≠Ëºâ„Åó„Åü„Çπ„Éû„Éº„Éà„Éï„Ç©„É≥„ÅÆË≤©Â£≤„ÇíÊ§úË®é„Åó„Å¶„ÅÑ„Çã„Åì„Å®„ÇíÊòé„Åã„Åó„Åü„ÄÇ

[19:09:13.0000] <tantek>
whoa cool

[19:09:31.0000] <zewt>
"firefox os"? not sure i even want to know

[19:10:05.0000] <tantek>
http://www.mozilla.org/en-US/firefoxos/

[19:15:35.0000] <MikeSmith>
back in the day, KDDI was also the first operater in the world to ship mobile phones with a full browser installed

[19:16:06.0000] <MikeSmith>
full Opera Mobile (non-Mini)

[19:16:23.0000] <MikeSmith>
they branded it as "PC Site Viewer"

[19:45:56.0000] <MikeSmith>
tantek: Is there any difference now between B2G and FirefoxOS?

[19:46:56.0000] <MikeSmith>
I noticed there's still also B2G pages on the wiki, along with the FirefoxOS ones.

[19:47:21.0000] <tantek>
technical vs. marketing?

[19:47:35.0000] <MikeSmith>
yeah, seems like

[19:48:12.0000] <tantek>
I mean, they're the same thing. Except FirefoxOS sounds like something awesomely web native that you'd like to run, and B2G sounds like a bad Web 2.0 acronym.

[19:48:20.0000] <MikeSmith>
heh

[19:48:22.0000] <tantek>
my opinion of course, not anything official ;)

[19:48:44.0000] <MikeSmith>
I'm gonna tell reporters to quote you on that

[19:48:55.0000] <tantek>
oh crap - with IRC log citation as well I'm sure

[19:49:13.0000] <tantek>
well, it's the not worst thing I've been quoted saying.

[19:49:31.0000] <tantek>
http://www.flickr.com/photos/kaeru/875369568/

[20:02:53.0000] <MikeSmith>
tantek: hahah

[20:03:11.0000] <MikeSmith>
well that statement I think almost anybody would agree with

[00:44:27.0000] <annevk>
Anyone found a copy of http://www.imdb.com/title/tt2187884/ somewhere? Seems like a pretty interesting moving. Guerilla-shot at Disney theme parks :-)

[01:21:14.0000] <annevk>
"If metadata falls in the forest and there is no one to hear it, does it make a sound?"

[01:21:38.0000] <annevk>
In related news, not sure how glazou simultaneously heralds XML as a requirement for the book industry and implies they have not actually read the XML specification with regards to encodings...

[01:22:47.0000] <annevk>
Also, I was kinda hoping encodings to not be a subject worthy of debate.

[01:29:35.0000] <MikeSmith>
it's (ir|mor)onic that he's trumpeting about user needs with those requirements have absolutely no relation to user needs and bring no value to users

[01:29:46.0000] <MikeSmith>
EPUB seems to require a whole chain of things for reasons that are completely at odds with actual user needs

[01:30:24.0000] <hsivonen>
thing most at odds with actualy users needs: META-INF/rights.xml

[01:30:58.0000] <MikeSmith>
well I think that's where a lot of the rest of it stems from

[01:31:58.0000] <othermaciej>
the EPUB format seems puzzling in many ways

[01:32:15.0000] <annevk>
Have to hand it to glazou for trying to make the WYSIWYG thing work and raising issues every now and then, but the issues he raises do not exactly strike me as what's the real problem...

[01:33:56.0000] <hsivonen>
so per the latest email, does glazou work for companies that use something other than XML parsers with XML?

[01:35:32.0000] <annevk>
"With respect to the industrial xml solutions available to the companies I work for, certainly not." I don't even...

[01:37:15.0000] <annevk>
I don't really think that discussion is going anywhere. glazou just wanted to rant a bit.

[01:41:54.0000] <othermaciej>
is he saying that UTF-8 is not guaranteed to work in industrial XML solutions, or that industrial XML solutions guarantee support for a wide range of other encodings?

[01:41:55.0000] <MikeSmith>
time to mine it for a w3cmeme

[01:43:28.0000] <MikeSmith>
othermaciej: the latter, I'm pretty sure

[01:43:41.0000] <MikeSmith>
the first would be beyond absurd

[01:44:15.0000] <hsivonen>
othermaciej: EPUB is less puzzling if you start with the following assumptions: 1) UI layer has to work when the book's DRM scheme is unsupported. 2) XHTML files are munged by DRM.

[01:45:24.0000] <hsivonen>
/me notes that off-the-shelf expat supports only UTF-8, UTF-16 and ISO-8859-1 (and maybe US-ASCII, can't remember)

[01:46:45.0000] <hsivonen>
anyway, using non-UTF-8 for a format that has supported UTF-8 from day 1 is being part of the encoding problem

[01:50:22.0000] <darobin>
I think that what glazou is trying to say is that given the content in that industry, an XML parser has to support much more than UTF*

[01:50:34.0000] <MikeSmith>
yeah that

[01:58:26.0000] <hsivonen>
Version attributes are useless. Film at 11: http://www.glazman.org/weblog/dotclear/index.php?post/2012/08/06/EPUB3-fun-2

[02:01:50.0000] <MikeSmith>
nice

[02:02:59.0000] <darobin>
no no, they're not useless

[02:03:05.0000] <darobin>
they're positively harmful

[02:05:40.0000] <darobin>
there's a decision tree for that: http://berjon.com/blog/2009/12/xmlbp-naive-versioning.html

[02:12:08.0000] <karlcow>
Stevef: comment published on QA.

[02:12:10.0000] <karlcow>
thanks!

[02:12:21.0000] <Stevef>
np

[03:09:15.0000] <annevk>
MikeSmith: why was https://www.w3.org/Bugs/Public/show_bug.cgi?id=13639 reopened?

[03:09:38.0000] <annevk>
Oh well, I'll just remove myself from the cc list

[03:21:57.0000] <annevk>
wait what

[03:22:02.0000] <annevk>
Is http://www.w3.org/TR/DOM-Level-3-Events/#events-MouseEvent-buttons a new feature?

[03:22:08.0000] <annevk>
I thought we had given up on bitmasks?

[03:23:07.0000] <annevk>
Seems Firefox has it

[03:23:14.0000] <darobin>
annevk: how else can you make it extensible to 8-button mice?

[03:23:20.0000] <Stevef>
annevk: yeah some people wanted to get PF to review, so it was re-opened

[03:23:28.0000] <annevk>
Chrome does not

[03:23:54.0000] <Stevef>
darobin: have provided comment https://www.w3.org/Bugs/Public/show_bug.cgi?id=13639#c5

[03:23:57.0000] <darobin>
AFAIK it's been there a while

[03:24:01.0000] <darobin>
at least, it rings a bell

[03:24:11.0000] <annevk>
Well, .button used to be a bitmask in IE

[03:24:21.0000] <annevk>
In other browsers it mapped to whatever the DOM defined at the time

[03:24:37.0000] <annevk>
I think .buttons is a new invention that somehow slipped past review...

[03:24:41.0000] <darobin>
annevk: yeah, it's been in the spec since 2010 at least

[03:32:49.0000] <annevk>
I don't like the way that specification has been developed. Full of surprises.

[03:48:26.0000] <annevk>
Is there some other holiday season? Am I listening in to the wrong bubble? There appears to be not much activity. And especially issues I've raised over the past couple of months got like zero attention. Maybe everyone moved beyond web standards to herd cattle or some such?

[04:11:03.0000] <smaug____>
annevk is gone, but yesterday was http://en.wikipedia.org/wiki/Martin_Luther_King,_Jr._Day

[04:53:30.0000] <Ms2ger>
Yay, polyglot in my inbox

[04:54:56.0000] <darobin>
the whole world is polyglot

[04:55:02.0000] <darobin>
it's like no one's working on anything else

[04:55:07.0000] <hsivonen>
Ms2ger: do you subscribe to www-archive?

[04:55:07.0000] <darobin>
/me set the ignore flag on that one

[04:55:17.0000] <Ms2ger>
hsivonen, no, glazou cc'd me

[04:55:22.0000] <hsivonen>
Ms2ger: ah right

[04:55:33.0000] <darobin>
/me wonders who would be mad enough to sub to www-archive

[04:55:38.0000] <darobin>
well, apart from Bjoern

[04:55:58.0000] <hsivonen>
darobin: Do I need a support group for that, too?

[04:56:51.0000] <darobin>
hsivonen: you and 60 other people :)

[04:57:20.0000] <darobin>
including a substantial number of folks in this channel

[05:02:39.0000] <Ms2ger>
darobin, is BjÔøΩrn actually subscribed?

[05:03:12.0000] <darobin>
Ms2ger: no, but I would be surprised if he wasn't at some point

[05:03:18.0000] <darobin>
you know, before it was cool

[05:45:33.0000] <odinho>
darobin: Sounds super great to me :]

[05:46:08.0000] <odinho>
It'll look stupid if I say that on the ml though, because I agreed with you from the beginning anyway :P

[05:46:33.0000] <odinho>
If we just send enough emails back and forth, it'll look like there was a discussion and stuff is decided? ;P

[05:49:16.0000] <MikeSmith>
annevk: I don't know why that bug was reopened, and seems like darobin doesn't either, but maybe Stevef does

[05:49:35.0000] <Stevef>
i have commented on bug

[05:49:40.0000] <MikeSmith>
ah ok

[05:49:50.0000] <Stevef>
pointed tominutes

[05:49:55.0000] <MikeSmith>
hai

[05:50:50.0000] <odinho>
So tobie also doesn't like the WG-clustering of tests.

[05:52:06.0000] <MikeSmith>
darobin: I subscribe to www-archive for the sole purpose of being able to read Bjoern's messages as soon as they hit the newstand (as it were)

[05:52:18.0000] <MikeSmith>
for the sense of anticipation

[05:53:41.0000] <tobie>
Oh, that's where this conversation is happening.

[05:53:45.0000] <tobie>
:)

[05:54:24.0000] <annevk>
Don't tell anyone ;-)

[05:54:33.0000] <odinho>
Which one? :P

[05:55:05.0000] <tobie>
heh.

[05:55:21.0000] <hsivonen>
/me still reads mlw as Mr. Last Week instead of MultiLingual Web.

[05:55:45.0000] <MikeSmith>
heh

[05:56:10.0000] <MikeSmith>
darobin: dunno why figure is not allowed in dd, but yeah seems like it should be

[05:57:34.0000] <tobie>
odinho: re: I wouldn't mind WG-clustering, if WG-clustering was only about tech. But it's not. And that makes it super confusing. Discoverability is a big issue.

[05:58:24.0000] <odinho>
Yep. :-)

[05:58:36.0000] <tobie>
Admittedly, I am very slow, but it took me months (!) to figure out what was happening where.

[05:59:40.0000] <tobie>
...and this was my job. Regular developers don;t have the bandwidth for this.

[05:59:54.0000] <tobie>
s/;/'/

[06:00:19.0000] <odinho>
tobie: Lots of confusion abound. The first post in the thread starts off from a confusion :]

[06:00:35.0000] <tobie>
True.

[06:01:29.0000] <MikeSmith>
darobin: hmm figure actually is already allowed in dd. maybe it's changed since the time I built those jars

[06:04:41.0000] <karlcow>
hmm a +1 on www-tag. Where are the reformists?

[06:16:08.0000] <Ms2ger>
Ah, tobie's here

[06:19:18.0000] <tobie>
Ms2ger: yes

[06:19:57.0000] <Ms2ger>
Hi tobie :)

[06:20:13.0000] <tobie>
Hi!

[06:27:03.0000] <darobin>
odinho: I love your plan man :)

[06:27:53.0000] <darobin>
MikeSmith: ah, yeah, I thought it would be allowed

[06:28:04.0000] <darobin>
are you tracking it or should I look more closely?

[06:28:32.0000] <Ms2ger>
darobin, so, what do we bikeshed "html-testsuite" to? :)

[06:29:00.0000] <darobin>
Ms2ger: man, STFU, I've been hoping no one would broach that topic ever since the merging suggestion cropped up :)

[06:29:03.0000] <Stevef>
chris lilley is getting XML ornery https://twitter.com/svgeesus/status/293725944269643776 and https://twitter.com/svgeesus/status/293725703294316544

[06:30:59.0000] <tobie>
I missed an episode, apparently. What's the plan for tests, odinho?

[06:31:26.0000] <darobin>
I just had a meeting with the Web Crypto WG ‚Äî they want to put their stuff inside html-testsuite

[06:31:29.0000] <Ms2ger>
tobie, you replied to his emails :)

[06:32:04.0000] <odinho>
tobie: I think Robin meant one of my snarky ";P" lines up here. :-)

[06:32:15.0000] <odinho>
tobie: So nothing that's not on the mailing list :]

[06:32:29.0000] <darobin>
me?

[06:32:34.0000] <darobin>
I would so never encourage snarkiness

[06:33:06.0000] <Ms2ger>
/me snorts

[06:34:33.0000] <darobin>
well, maybe except in the way that the overwhelming loftiness of my view may lead pettier men to being snarky

[06:34:50.0000] <tobie>
I'm still trying to figure out whether odinho is advocating for a repo per WG, a repo for W3C or something in between.

[06:35:02.0000] <darobin>
odinho is advocating for one big repo

[06:35:07.0000] <darobin>
where we all party

[06:35:14.0000] <odinho>
tobie: lol. I fail at comms.

[06:35:29.0000] <odinho>
Party-party.

[06:35:31.0000] <Ms2ger>
odinho, communists?

[06:35:33.0000] <darobin>
well, at least one repo for all the browser stuff

[06:35:35.0000] <tobie>
odinho: and I'm slow.

[06:35:44.0000] <MikeSmith>
darobin: I tested with jar I pointed you at and it allows figure in dd and as far as I caln tell figure has always been allowed in dd

[06:35:51.0000] <hsivonen>
what's the context of Chris Lilley's xml-nowhere tweet?

[06:36:17.0000] <darobin>
MikeSmith: interesting, I have multiple "source":43276.5-43276.29: error: Element "figure" not allowed as child of element "dd" in this context. (Suppressing further errors from this subtree.)

[06:36:20.0000] <tobie>
darobin: I'll let you define what exactly it is you mean by "all the browser stuff."

[06:36:31.0000] <darobin>
tobie: I admin the repo, I decide :)

[06:36:42.0000] <darobin>
hsivonen: I'm guessing polyglot

[06:36:43.0000] <tobie>
WFM.

[06:36:47.0000] <Ms2ger>
I would suggest CSS, but glazou is already unhappy

[06:36:57.0000] <darobin>
ah, yeah, we're not taking over the CSS tests

[06:37:05.0000] <hsivonen>
darobin: who argued xml-nowhere in that context?

[06:37:09.0000] <darobin>
though we might manage to gain enough weight to drag them over!

[06:37:11.0000] <tobie>
darobin: build it and they will come.

[06:37:18.0000] <darobin>
hsivonen: I dunno man, I stopped reading those threads

[06:37:35.0000] <darobin>
tobie: well, we're still not sure that we want them to come ;)

[06:37:36.0000] <Ms2ger>
/me never started

[06:37:48.0000] <Ms2ger>
darobin, hey, so about my RDF tests...

[06:37:48.0000] <darobin>
a wise man Ms2ger is

[06:38:09.0000] <darobin>
Ms2ger: sure thing! I'll put them right next to the XML Schema ones

[06:38:15.0000] <Ms2ger>
/dev/null?

[06:38:25.0000] <darobin>
like I said, wise man

[06:38:33.0000] <Ms2ger>
/me bows

[06:44:31.0000] <MikeSmith>
hsivonen: I guess I still don't have sufficient clue to understand what Kingsley means by "burden for HTML5 parser developers" in the tangent on the polyglot thread. As far as I can see it doesn't relate to parsing at all but instead to making a conforming RDFa processor that does whatever stuff is needed for that, after the actual parsing.

[06:45:01.0000] <Ms2ger>
MikeSmith, you're reading that thread?

[06:45:07.0000] <Ms2ger>
/me passes MikeSmith the booze

[06:45:11.0000] <MikeSmith>
heh

[06:45:36.0000] <annevk>
It seems that DOM playtime is over. I wonder when the outcry starts that no longer making Attr inherit from Node breaks web architecture.

[06:46:15.0000] <Ms2ger>
annevk, when the TAG says so ):

[06:46:16.0000] <Ms2ger>
:)*

[06:46:50.0000] <annevk>
Well I'm part of that group now. It's gonna be though to get consensus on that one.

[06:47:13.0000] <annevk>
"consensus" hah. I made a funny.

[06:48:01.0000] <MikeSmith>
Ms2ger: pretty sure I  need to booze to actually understand what "producing RDF model based data from an HTML5 document comprised of fine-grained structured data islands" is. Or to care. But even as dumb as I am I know it has nothing to do with "HTML5 parsing".

[06:48:43.0000] <Ms2ger>
annevk, congratudolences, I guess

[06:49:28.0000] <Ms2ger>
SimonSapin, fantasai isn't going to be happy if you want to put pseudo-elements in Selectors :)

[06:49:33.0000] <hsivonen>
MikeSmith: I didn't try to understand that tangent

[06:49:50.0000] <SimonSapin>
Ms2ger: I don‚Äôt know, why?

[06:50:44.0000] <Ms2ger>
Oh, hmm, are they back?

[06:50:50.0000] <Ms2ger>
I thought she threw them out

[06:50:52.0000] <SimonSapin>
Ms2ger: having them somewhere else is fine with me, as long as they are defined at all

[06:51:39.0000] <SimonSapin>
Ms2ger: selectors4 have the general rules (syntax, position, ‚Ä¶), but not the definitions on any particular pseudo-element

[06:57:25.0000] <SimonSapin>
Ms2ger: do you know if the pseudo-elements are now somewhere else?

[07:06:39.0000] <annevk>
hsivonen: seems you're more productive on www-tag than I am ;-)

[08:08:39.0000] <MikeSmith>
I just noticed the implied scare quotes that annevk put around the word productive there

[09:13:40.0000] <Ms2ger>
jsbell, thanks

[09:14:06.0000] <jsbell>
ms2ger: I have to resend to the list since I sent from the wrong address. Sorry for the dupe you're about to get.

[09:14:19.0000] <Ms2ger>
Np

[09:14:33.0000] <Ms2ger>
It's not like I don't get a lot of email anyway :)

[09:15:05.0000] <jsbell>
ms2ger: and thank *YOU*. I'm meeting with the MSFTies this Friday to do some IDB spec bashing

[09:15:31.0000] <Ms2ger>
Maybe I should look some more, then ;)

[09:15:34.0000] <jsbell>
modulo ReSpec issues... and maybe I'll end up hacking on that.

[09:15:50.0000] <jsbell>
Please do. Mind the open issues, though, we have a bit of a backlog to edit in.

[09:16:03.0000] <Ms2ger>
Oh, and a file a bug / open bugs link would be nice

[09:16:50.0000] <Ms2ger>
And poke darobin if respec still sucks :)

[09:22:07.0000] <darobin>
heh

[09:22:15.0000] <darobin>
someone scare up a nice syntax and I'll implement it

[09:22:27.0000] <darobin>
else, wait until I have a day or so to myself to scare it up

[09:22:36.0000] <Ms2ger>
Next decade?

[09:22:52.0000] <darobin>
re IDB though it's not entirely my fault that they're using WebIDL deprecated exception stuff

[09:22:58.0000] <darobin>
I reckon "this year"

[09:23:10.0000] <Ms2ger>
Are they still?

[09:23:15.0000] <darobin>
well they were

[09:23:29.0000] <Ms2ger>
I was thinking static operations, enums, and bug tracker links

[09:23:33.0000] <darobin>
I made ReSpec ignore those and they weren't happy because all their exception stuff vanished :)

[09:23:35.0000] <Ms2ger>
Which I'm all blaming on you

[09:23:48.0000] <darobin>
it has enums

[09:23:52.0000] <Ms2ger>
I remember that, now they claim TypeError is a DOMException

[09:23:57.0000] <darobin>
I forget if it has static, I thought it did

[09:24:26.0000] <darobin>
bug tracker link is, like, a few lines of patching so I reckon if you bug me about that tomorrow morning it'll happen :)

[09:24:30.0000] <darobin>
/me off now

[09:24:46.0000] <Ms2ger>
I need a bot to ping people in the morning

[09:24:49.0000] <Ms2ger>
One that isn't me

[09:25:09.0000] <darobin>
infobot can do that

[09:25:18.0000] <darobin>
anyway, I'll leave setting up an instance to someone else :)

[09:25:30.0000] <Ms2ger>
I'll ping you about that in the morning ;)

[09:25:33.0000] <annevk>
So I'm looking into my paperwork for the first time since well, forever, and I find out I have double insurance. Apparently this means I get a bunch of money back.

[09:26:21.0000] <annevk>
I should have taken an hour back in 2007 or so when I signed all those papers, to actually read what they said.

[10:16:43.0000] <odinho>
Ohwell. That should be it for the day. :-)

[10:17:05.0000] <Ms2ger>
It's not even 8pm yet

[10:17:09.0000] <odinho>
:-(

[10:18:22.0000] <odinho>
I've been coming quite early to work in the mornings now though. Everything from 6 (that was an outliner) to 8-9 (more usual).

[10:18:53.0000] <Ms2ger>
And that's early? :)

[10:18:56.0000] <odinho>
And it's not hip to work long hours in Norway anyway. So most of the day I'm sitting almost alone here in this huge room.

[10:19:15.0000] <odinho>
"most of the day" is a extremely huge overstatement, btw.

[10:19:53.0000] <Ms2ger>
I'd hope so :)

[10:20:00.0000] <odinho>
Ms2ger: I can always do more work at home, since I has laptop now.

[10:20:19.0000] <Ms2ger>
Do they allow you to take code home? ;)

[10:20:24.0000] <Ms2ger>
/me mitm's odinho 

[10:20:53.0000] <WeirdAl>
Ms2ger is there a crash stats IRC channel?

[10:21:13.0000] <Ms2ger>
KaiRo would know

[10:21:19.0000] <WeirdAl>
oops, wrong channel

[10:31:55.0000] <TabAtkins>
heycam|away: @host and @global are the same concept.  The name isn't nailed down.

[10:34:49.0000] <Ms2ger>
annevk, I know you like URL parsing, so I cc'd you :)

[10:52:18.0000] <dglazkov>
good morning, Whatwg!

[10:53:32.0000] <chriho>
Morning

[10:53:42.0000] <chriho>
Hi, I have a feature request for: http://www.whatwg.org/specs/web-apps/current-work/multipage/the-video-element.html#media-resources-with-multiple-media-tracks

[10:53:58.0000] <chriho>
could there be audioTrack.channels "returns number of audio channels in audio"

[10:54:07.0000] <chriho>
or something that indicates if it's stereo or surround...

[10:54:59.0000] <dglazkov>
/me mumbles something about WebKit and Opera again

[11:29:26.0000] <Ms2ger>
darobin, and if you'd have time to accept my pull request...

[13:07:39.0000] <annevk>
Ms2ger: if they used scheme:// they could have reused the same parser ws and http already use

[13:07:49.0000] <annevk>
Ms2ger: kinda sad they didn't


2013-01-23
[00:20:27.0000] <lenny557>
hi out there..

[00:22:05.0000] <lenny557>
is there are any simple option to do linebreaks on "context.fillText" in a <canvas> ?

[00:56:21.0000] <lenny557>
done tx

[01:26:33.0000] <Ms2ger>
annevk, yeah, IETF...

[03:28:06.0000] <Stevef>
tantek: FYI discussing <article> on HTMl WG list http://lists.w3.org/Archives/Public/public-html/2013Jan/0109.html

[04:08:21.0000] <darobin>
Ms2ger: I haven't looked at the result, but Anssi just made: http://www.w3.org/mid/9577692B-0672-4269-9491-3D80A9F3919D‚äônc

[04:17:36.0000] <odinho>
Soeh, time to do some wiki editing I guess? :D :D  --  I'll save it for this evening.

[04:17:42.0000] <smaug____>
hsivonen: so <main>.  I assume it is something sane

[04:18:11.0000] <smaug____>
/me doesn't see it in the spec

[04:19:42.0000] <smaug____>
oh, extension

[04:20:05.0000] <smaug____>
but https://dvcs.w3.org/hg/html-extensions/raw-file/tip/maincontent/index.html gives 500

[04:23:33.0000] <Ms2ger>
<iframe name=foo></iframe>

[04:23:39.0000] <Ms2ger>
What is document.foo?

[04:29:37.0000] <stevefaulkner>
smaug____: http://www.w3.org/html/wg/drafts/html/master/grouping-content.html#the-main-element

[04:30:24.0000] <smaug____>
thanks

[04:30:30.0000] <stevefaulkner>
np

[04:31:33.0000] <smaug____>
/me wonders if that will end up to html spec at some poitn

[04:31:35.0000] <smaug____>
point

[04:32:44.0000] <stevefaulkner>
smaug____: as its being implemented i guess so

[04:34:03.0000] <stevefaulkner>
though it is in the HTML spec, just not the one you were referring to

[04:34:17.0000] <smaug____>
in general we implement HTML spec from whatwg

[04:34:32.0000] <Ms2ger>
stevefaulkner, that's not "the HTML spec" :)

[04:34:47.0000] <Ms2ger>
stevefaulkner, at most, it's "the HTML 5.1 spec"

[04:35:05.0000] <stevefaulkner>
smaug____: yeah i realise that

[04:35:53.0000] <stevefaulkner>
Ms2ger: choose your brand ;-)

[04:36:05.0000] <Ms2ger>
stevefaulkner, I've chosen the right one, yes ;)

[04:36:35.0000] <Ms2ger>
/me writes tests instead

[04:36:40.0000] <Ms2ger>
Also, darobin... :)

[04:37:16.0000] <stevefaulkner>
right for your purposes, for non implementers...

[04:37:47.0000] <Ms2ger>
They would be better off reading the most recent spec too, and not worry about meaningless numbers

[04:38:24.0000] <Ms2ger>
I think it's sad the W3C is wasting so much time that could be used to improve the web

[04:38:27.0000] <Ms2ger>
Oh well

[04:39:10.0000] <darobin>
Ms2ger: you called?

[04:39:32.0000] <Ms2ger>
darobin, I believe I still have an outstanding pull request :)

[04:39:47.0000] <stevefaulkner>
5.1 is up to date...

[04:40:59.0000] <darobin>
Ms2ger: yeah yeah, I'll get to it when my headache lifts :)

[04:41:13.0000] <Ms2ger>
darobin, so that my tests can give you another? ;)

[04:41:30.0000] <stevefaulkner>
and includes authoring advice and requirements not included elsewhere that improves the web

[04:41:52.0000] <darobin>
Ms2ger: yeah, I can only have one headache at a time

[04:41:58.0000] <darobin>
I'm straightforward like that

[04:42:05.0000] <Ms2ger>
stevefaulkner, like, "it's okay to use layout tables"?

[04:43:50.0000] <stevefaulkner>
reality alert, its not OK to use layout tables, but if you do as many do, (just say no doesn't work) there are ways to mitigate their use

[04:45:11.0000] <Ms2ger>
I know the arguments, but they simply don't outweigh the fact that the W3C announced that layout tables aren't so bad after all

[04:46:17.0000] <stevefaulkner>
nobody announced that, but its not worth arguing about

[04:47:00.0000] <Ms2ger>
That was what the webdev community took from the announcement nevertheless

[04:47:48.0000] <stevefaulkner>
oh really I missed that pointer?

[04:49:02.0000] <stevefaulkner>
i didn't even know there was an announcement

[04:49:07.0000] <hsivonen>
smaug____: <main> is one of those things that will need to land first for it to be in the WHATWG spec.

[04:51:34.0000] <Ms2ger>
stevefaulkner, oh, come on... The chair's email to public-html about the ISSUE

[04:52:31.0000] <smaug____>
hsivonen: ah

[04:52:33.0000] <darobin>
Ms2ger: I can't seem to dig up a pointer to the repo for the spec references data that Anolis uses (it's for tobie)

[04:53:11.0000] <Ms2ger>
darobin, it's on github/whatwg/xref

[04:53:12.0000] <Ms2ger>
IIRC

[04:53:19.0000] <stevefaulkner>
Ms2ger: i thought nobody of any consequence read html list, where is the spate of web dev articles hailing the return of layout tables?

[04:53:45.0000] <darobin>
Ms2ger: ah! and there I was looking all across bitbucket

[04:53:51.0000] <darobin>
granted, that only takes about ten minutes

[04:54:32.0000] <Ms2ger>
stevefaulkner, you were right, not worth my time to discuss

[04:55:24.0000] <Ms2ger>
darobin, and get rid of the index.html in the html-testsuite repo, please ;)

[04:55:34.0000] <stevefaulkner>
Ms2ger: right, getting all ornery as you does nothing

[04:56:16.0000] <stevefaulkner>
lets all get back to improving the web ;-)

[04:57:58.0000] <stevefaulkner>
me/ funny how people have a habit of falling off high horses

[04:58:08.0000] <darobin>
Ms2ger: done

[04:58:29.0000] <Ms2ger>
Thanks

[04:58:36.0000] <darobin>
/me trots off back to email stuff on his little poney

[05:02:39.0000] <Ms2ger>
Document doesn't have an indexed getter I'm missing in the spec, does it?

[07:53:54.0000] <chriho>
anybody here with experience of videos with multiple audio tracks in HTML5?

[08:24:25.0000] <dglazkov>
good morning, Whatwg!

[08:44:10.0000] <tantek>
SteveF - I share your skepticism about rdf/microdata http://lists.w3.org/Archives/Public/public-html/2013Jan/0114.html

[08:44:40.0000] <tantek>
so we do have the hAtom microformat which is well deployed by authors/developers (and supported by search engines)

[08:44:54.0000] <Stevef>
tantek: right, what about use for comments?

[08:45:02.0000] <tantek>
there's been some brainstorming around distinguishing comments

[08:45:53.0000] <tantek>
Stevef - so my thoughts on comments come from the #indiewebcamp perspective - which is that ideally, every comment you write would primarily be a post on your own site which you then syndicated out to wherever you wanted the comment to show-up.

[08:46:26.0000] <tantek>
thus I tend to lean a bit more strongly in the direction of considering comments as full fledged posts / articles of their own (with perhaps their own comments)

[08:46:34.0000] <Stevef>
OK - interesting

[08:46:40.0000] <darobin>
that's exactly what I was referring to with Habermasian optimism :)

[08:47:17.0000] <darobin>
"lol u SUK" doesn't fly so well as "primarily a post on your own site which you then syndicated out to wherever you wanted the comment to show-up"

[08:47:25.0000] <tantek>
one of my concerns with a lot of web standards / architecture is that since so much is being driven by large companies with large silos, they don't even consider (are typically blind to) the "classic" peer-to-peer distributed/decentralized actual *web* way of thinking

[08:47:45.0000] <darobin>
(though I love the heart of the idea)

[08:48:12.0000] <tantek>
so on those fronts, I feel I have to push extra hard to get that point not just across, and considered, but made *preferable*

[08:48:18.0000] <darobin>
I don't think it's a "big company" thing

[08:48:30.0000] <tantek>
web standards *should* be optimized for *web* like behavior, not silo-behavior

[08:48:31.0000] <darobin>
big companies can understand decentralisation better than smaller ones I find

[08:48:57.0000] <Stevef>
in the real world the current definition lends itself to less than optimal user experiences for the people who do consume <article>

[08:49:04.0000] <tantek>
darobin - big companies all have underlying cultural assumptions of why wouldn't you trust a small handful of big companies?

[08:49:31.0000] <tantek>
Stevef - perhaps we can start by documenting sites with problematic use of <article>

[08:49:40.0000] <tantek>
or did you already do that in the list of links you provided?

[08:49:52.0000] <tantek>
(wasn't sure if those were analyses of article or uses of or both)

[08:49:56.0000] <darobin>
tantek: oh I'm not saying that I particularly trust them, just that I'm not convinced that that's where the dividing line falls

[08:50:11.0000] <tantek>
darobin - there's no dividing line, it's a fuzzy cultural issue

[08:50:34.0000] <tantek>
and actually, it's apparently turning generational as well, as "new kids" don't even remember being "webby" - they've grown up on and are used to silos

[08:50:40.0000] <Stevef>
tantek: sure  I linked to some 170 sites that use article as basis for anlaysis

[08:51:37.0000] <Stevef>
but haven't carried that out yet, but its pretty easy to find examples of where its been (i think) overused to no good effect

[08:51:39.0000] <tantek>
darobin: this is good: "I wonder if recommending to mark comments up as <article> inside <details> would address the sort of issue you had in mind."

[08:52:07.0000] <tantek>
Stevef - yeah, it would be good to analyze such examples to see if things like darobin's suggestion would help

[08:52:08.0000] <Stevef>
tantek: anwyay just wanted to make you aware of the dicussion as you may be interested

[08:52:15.0000] <tantek>
appreciated

[08:52:45.0000] <tantek>
Stevef - ah this is interesting: "the use of article to describe a one sentence comment

[08:52:46.0000] <tantek>
and a lengthy blog post seem at odds."

[08:53:11.0000] <Stevef>
as users have been complaining about section and article use and abuse

[08:53:20.0000] <tantek>
so tweets are often "one sentence comment[s]" - but they're certainly deserving of <article> - as they are their own posts, not necessarily "about" or in response to something (though sometimes they are)

[08:53:21.0000] <darobin>
tantek: what I like about details > article is that I believe it DTRT in AT *and* for sighted users

[08:54:57.0000] <tantek>
darobin - agreed. and here's a real world example of such a UI: http://www.aaronsw.com/weblog/looperexplained

[08:56:26.0000] <tantek>
Stevef - the distinction you point out, between "one sentence" and "lengthy blog post" (and frankly, also "comment") is a problem that the ActivityStreams community and more recently the #indiewebcamp and #microformats communities have been working on for quite some time.

[08:56:38.0000] <Stevef>
darobin: yes and no, once in the details, largenumbers of comments result in the same issue

[08:56:49.0000] <tantek>
you're essentially describing a few typical different kinds of posts

[08:57:00.0000] <darobin>
Stevef: yes, but you've deliberately decided to activate the details

[08:57:14.0000] <tantek>
what ActivityStreams calls "object types", and which, in this case call "note", "article", "comment"

[08:57:55.0000] <Stevef>
some subtyping of article would be nice

[08:58:02.0000] <tantek>
(they've also got a lot of faffing about verbs, but those have never really taken off, much more overdesigned than necessary for v1)

[08:58:14.0000] <darobin>
Stevef: if you've decided to enter the details/summary=Comments, then I think that "Article. LOL u SUK. End of article" makes sense

[08:58:45.0000] <tantek>
I'm giving you the very simplified summary of AS. There's much more and there's folks trying to critically extract a valuable subset: http://indiewebcamp.com/ActivityStreams

[08:59:08.0000] <tantek>
Stevef - so ActivityStreams essentially does that - subtypes "articles"

[08:59:32.0000] <tantek>
but HTML (tag markup in general) is very bad at "subtyping"

[08:59:42.0000] <tantek>
at least in anyway accessible to "ordinary" developers

[09:00:24.0000] <tantek>
(all the tag extensibility / is="" crap is pretty doomed to fail IMHO in terms of "normal" authors. heavy coders / developers may be able to use it - same folks that used XUL, but it doesn't really scale)

[09:00:44.0000] <Stevef>
darobin: if there are then 10/30 or more comments with nested replies using lists makes it much more understanadable and and navigable to users who consume the semantics

[09:01:51.0000] <tantek>
anyway - just wanted to invite folks, if you want to discuss different post types (note/article/comment etc.) - please feel free to hop into #indiewebcamp - as that's where a lot more of this has been *practically* discussed (people actually using the stuff on their own sites)

[09:02:21.0000] <tantek>
(I don't hold much hope for *web* post-type distinction discussions on peanut-gallery / support forum mailing lists)

[09:02:39.0000] <Stevef>
also sent this lengthy proposal/criticique on outlines (from one ben lord) to the list http://lists.w3.org/Archives/Public/public-html/2013Jan/0126.html

[09:03:12.0000] <tantek>
of course I am still a fan of ditching <section> and the outline algorithm

[09:03:30.0000] <Stevef>
tantek: will lurk and see what I can learn/contribute

[09:03:32.0000] <tantek>
though I think it is inevitable that it will simply fail to exit HTML5 CR

[09:04:23.0000] <tantek>
/me is thinking more and more about writing up a series of posts on "HTML: The Good Parts"

[09:05:45.0000] <tantek>
so much useless and/or overly complex crap in *both* WHATWG HTML and HTML5 CR. and it's not worth wasting time whittling away at them by filing bugs on all of them. It might be easier to simply extract out the bits "that don't suck".

[09:06:02.0000] <darobin>
heh

[09:06:06.0000] <darobin>
I for one would love to read that

[09:06:37.0000] <tantek>
and by all means - if anyone else would like to write their own  "HTML: The Good Parts" posts - please, go right ahead. I claim no copyright or anything else on the idea.

[09:06:59.0000] <tantek>
(to be fair, a lot of stuff is in the spec for more political than real-world reasons)

[09:07:09.0000] <tantek>
*specs I should say

[09:09:51.0000] <Stevef>
tantek: I think its worthwhile trying to tweak authoring advice and requirements in the spec

[09:10:22.0000] <tantek>
Stevef - sure

[09:10:36.0000] <tantek>
I just think there's so much noise in the spec that authors are going to go some place most of the time

[09:10:44.0000] <tantek>
which I suppose is what the authoring guide is for

[09:11:20.0000] <tantek>
darobin - do you actually *like* the schema defintions of Comment vs Article vs BlogPosting vs UserComment? (per http://lists.w3.org/Archives/Public/public-html/2013Jan/0113.html ) ?

[09:11:35.0000] <darobin>
tantek: no, it's all too complicated

[09:11:42.0000] <darobin>
but it's there

[09:11:46.0000] <tantek>
ok, that was my impression too but I didn't want to presume

[09:11:47.0000] <darobin>
I was looking for something off the shelf

[09:11:56.0000] <tantek>
plus, Comment vs. UserComment?

[09:12:03.0000] <tantek>
talk about a mess

[09:12:04.0000] <darobin>
beats me too

[09:12:18.0000] <darobin>
I only found out about UserComment by following a link from BlogPost

[09:12:49.0000] <tantek>
my favorite is still http://schema.org/Volcano with property "faxNumber"

[09:12:50.0000] <karlcow>
tantek: what search engines do with hAtom. (I lived under a rock too long I think)

[09:13:01.0000] <Stevef>
I mean looking at the debates about how to use stuff example: http://html5doctor.com/html5-simplequiz-7-pinterest/ something is amiss

[09:13:09.0000] <darobin>
but putting my hacker cap on, I reckoned "there's this thing that exists, and I can easily just slap itemtype=whatever string they have, and go have beer"

[09:13:27.0000] <tantek>
karlcow - *some* search engines index the dates and times of posts, and *some* search engines even have validators that show you that they've parsed the hAtom and understand the components of it

[09:13:45.0000] <tantek>
I should say, at least one *major* search engine that starts with a G :)

[09:14:17.0000] <tantek>
darobin - "there's this thing that exists, and I can easily just slap ‚Ä¶ " is a compelling argument

[09:15:03.0000] <darobin>
yeah, anything more than that and the word "ontology" pops into my head

[09:15:09.0000] <tantek>
lol

[09:15:20.0000] <darobin>
given the magnitude of the headcold I have today, I would really just not

[09:15:31.0000] <karlcow>
tantek: is there a blog post somewhere about who does what. It might become handy very soon for a workshop.

[09:15:32.0000] <tantek>
get well soon

[09:15:35.0000] <darobin>
ta ;)

[09:16:56.0000] <tantek>
karlcow - as a one-slide summary - feel free to re-use (all the usual CC) http://tantek.com/presentations/2012/09/microformats2/#slide9

[09:17:24.0000] <tantek>
(it's a build so you'll have to click to see the bullets if you're using a JS-enabled UA :) )

[09:18:37.0000] <tantek>
karlcow if you're looking for search engine support in particular, this is a good start: http://microformats.org/wiki/search-engines

[09:18:48.0000] <tantek>
(and the "main article" pages it links to have many more details)

[09:18:57.0000] <annevk>
Ms2ger: left a comment on making it more similar to ws/http just in case

[09:19:18.0000] <tantek>
and any further questions, hang out in #microformats and happy to answer (as others are too)

[09:20:07.0000] <Ms2ger>
annevk, thanks

[09:21:09.0000] <annevk>
the problem with the ABNF stuff is that it's unclear you apply it after you already have distinct components

[09:21:19.0000] <tantek>
karlcow - what's the workshop you're teaching?

[09:21:29.0000] <annevk>
oh well, dinner time

[09:26:42.0000] <tantek>
Stevef that pinterest simplequiz poses quite a few challenges: http://html5doctor.com/html5-simplequiz-7-pinterest/

[09:26:56.0000] <tantek>
so many things to markup there to make them useful

[09:38:52.0000] <karlcow>
tantek: at SudWeb in May, there will be a workshop on comments and specifically on aggregating blog posts answering each others. First as an experiment between friends.

[09:39:05.0000] <karlcow>
http://sudweb.fr/2013/

[09:46:40.0000] <tantek>
karlcow - fascinating - definitely need to have you in #indiewebcamp then as that's exactly the kind of thing we discuss a lot

[09:47:29.0000] <tantek>
also on blog posts answering each others, you may be interested in the development of h-cite: http://microformats.org/wiki/h-cite

[09:53:07.0000] <karlcow>
thanks for the links

[10:10:38.0000] <Ms2ger>
darobin, the new idlharness looks equivalent on the DOM test, at least

[11:53:22.0000] <Hixie>
did anne really drop ebcdic?

[11:54:02.0000] <Ms2ger>
You like ebcdic?

[11:54:47.0000] <Hixie>
i wouldn't say _like_...

[11:55:15.0000] <Hixie>
it was endearing to have an encoding that in theory people could use with HTML despite it being crazytown and non-ASCII-compatible

[11:56:34.0000] <Ms2ger>
I'm not sure "endearing" was the word I'd use

[14:24:17.0000] <esprehn_>
tantek: ping

[14:33:08.0000] <tantek>
esprehn_ pong

[14:38:51.0000] <esprehn_>
tantek: caught you through email, wanted to discuss requestAutocomplete (or figure out who to talk to about it)

[14:39:08.0000] <tantek>
through email?

[14:40:08.0000] <esprehn_>
tantek: I sent an email to the address of yours I realized I had

[14:43:28.0000] <esprehn_>
tantek: It'd be great to align this API with what's going on at Mozilla in a similar space

[15:24:46.0000] <tantek>
esprehn - catching up and reading your email, and recalling our conversation from last month.

[15:24:58.0000] <tantek>
in short yes, would be great if we could do some collaboration, harmonization in this area

[15:25:26.0000] <tantek>
I wanted to get Ben Adida involved on the Mozilla end - he's the right person to talk to about this kind of identity stuff.

[15:25:41.0000] <tantek>
he does tend to hang out more in irc://irc.mozilla.org/identity

[15:26:29.0000] <tantek>
personally I'd like to also explore how to make any kind of identity related API, structure, etc. more "web"-like

[15:26:44.0000] <tantek>
meaning, being able to use any web site you want for your identity, not just one of a handful of "providers"

[15:26:58.0000] <tantek>
there's too much oligopoly-centric framing in a lot of today's API designs

[15:27:20.0000] <tantek>
whereas I think we should design open web platform APIs *preferring* scenarios where individuals own/control their own domains

[15:27:44.0000] <tantek>
if that kind of thinking interests you, there's a whole crowd of people self-dogfooding and figuring out how to make it work in the #indiewebcamp channel


2013-01-24
[00:05:42.0000] <annevk>
Who else would be good to cc on https://www.w3.org/Bugs/Public/show_bug.cgi?id=20567 ?

[00:05:47.0000] <annevk>
Maybe maciej?

[00:06:18.0000] <annevk>
Who from Google?

[00:11:15.0000] <heycam>
arv?

[00:11:51.0000] <MikeSmith>
annevk: maybe post a message to webkit-dev, with a link to the bug? That way anybody could just Cc themselves.

[00:55:48.0000] <darobin>
manu-db: you there?

[01:02:12.0000] <Ms2ger>
Good morning, darobin :)

[01:04:36.0000] <darobin>
hi Ms2ger!

[01:36:39.0000] <MikeSmith>
darobin: if you pinging manu-db about those bugs with the public-rdfa-wg‚äôwo address, please see my comments over on #html-wg :)

[01:38:08.0000] <darobin>
MikeSmith: yup saw them thanks!

[01:57:02.0000] <hsivonen>
this sums up the disconnect: https://twitter.com/svgeesus/status/294075320691204097

[02:44:06.0000] <MikeSmith>
hsivonen: https://twitter.com/svgeesus/status/294060529780137984 surprised me more

[02:44:19.0000] <MikeSmith>
"if SAX1 had it, ppl used and depended on it and SAX2 dropped it, that would be a great analogy."

[02:45:05.0000] <MikeSmith>
I would think the normal conclusion would be that people probably did not depend on it

[02:45:50.0000] <MikeSmith>
and everybody gets things done fine in SAX2 without it

[02:46:14.0000] <MikeSmith>
hsivonen: but anyway, LexicalHandler does actually expose it, right?

[02:46:43.0000] <MikeSmith>
I realize of course that ContentHandler doesn't

[02:47:02.0000] <hsivonen>
MikeSmith: not in LexicalHandler. Guess again. :-)

[02:47:11.0000] <hsivonen>
MikeSmith: it‚Äôs well buried

[02:47:15.0000] <hsivonen>
MikeSmith: not in core

[02:47:23.0000] <hsivonen>
not in extra set 1.0

[02:47:35.0000] <hsivonen>
it‚Äôs in extras 1.1 alpha

[02:47:40.0000] <MikeSmith>
ah OK

[02:47:56.0000] <hsivonen>
MikeSmith: do you want to guess again or shall I give the name of the interface?

[02:48:21.0000] <MikeSmith>
well given that, it's even more clear there's not wide need for it by people programming in SAX

[02:48:40.0000] <MikeSmith>
hsivonen: lemme make one more guess

[02:50:28.0000] <MikeSmith>
hsivonen: well I was going to "guess" by finding it in the docs but I just now did that and I still can't find it!

[02:50:49.0000] <hsivonen>
Designed by XML haters, clearly. :-)

[02:51:25.0000] <hsivonen>
The interface is Locator2. I bet you didn‚Äôt see that coming.

[02:51:45.0000] <MikeSmith>
eh?

[02:51:47.0000] <MikeSmith>
nuts

[02:52:18.0000] <hsivonen>
well, it‚Äôs not completely nuts to bundle the character encoding info with line and column info

[02:52:47.0000] <MikeSmith>
ah yeah that makes sense

[02:52:48.0000] <hsivonen>
but it shows how the designers of the API treated that stuff as that kind of IO artifact

[02:52:54.0000] <MikeSmith>
yeah

[02:54:54.0000] <MikeSmith>
hsivonen: about Chris's comments, funny thing is, I don't think Chris feels very strongly about polyglot. So I'm not sure why he cares whether the XML declaration is exposed in the DOM API

[02:56:13.0000] <MikeSmith>
and so far the polyglot case that Glazman brought up is the only case that I recall anybody in the discussion saying they actually needed it for

[02:58:53.0000] <MikeSmith>
I guess maybe what Chris was reacting to is that he thought the removals were motivated just by kneejerk XML hate

[03:04:00.0000] <JibberJim>
Anyone know off hand if the video element can go 0 volume distinct from MUTE (ie change volume to 0, call unmute, what happens?)   It seems from reading that mute and volume are distinct, so you can have an "unmute" which does nothing if the volume is set to 0.  And a volume setting to 1 which doesn't produce any sound because it's muted.

[03:09:04.0000] <MikeSmith>
JibberJim: what method do you call to "unmute"?

[03:09:27.0000] <MikeSmith>
oh

[03:09:43.0000] <MikeSmith>
nm

[03:11:59.0000] <MikeSmith>
JibberJim: after looking at the spec, your reading seems correct

[03:12:15.0000] <MikeSmith>
you want other behavior?

[03:13:01.0000] <MikeSmith>
like, if volume is 0 and you unmute, then something should happen to the volume?

[03:13:03.0000] <darobin>
that strikes me as entirely sane and correct behaviour

[03:13:10.0000] <MikeSmith>
yeah

[03:17:51.0000] <darobin>
but JibberJim isn't usually a huge fan of sane and correct

[03:18:33.0000] <Ms2ger>
And a good morning to you too

[03:20:18.0000] <karlcow>
well with unmuting and listening to the volume at 0. You can at least listen the noise of silence.

[03:23:06.0000] <Ms2ger>
I didn't need to see your name to know who said that :)

[03:33:01.0000] <matijsb>
there's a Terry Pratchett joke in there somewhere

[03:34:43.0000] <Ms2ger>
You're welcome to make it :)

[03:35:09.0000] <matijsb>
I'll leave it to the pros ;)

[06:08:00.0000] <manu-db>
darobin, MikeSmith: Hey - was in meetings all day yesterday - what's up?

[06:20:49.0000] <darobin>
manu-db: don't worry, I pinged you by mistake

[06:21:01.0000] <darobin>
MikeSmith: was pretending to be you in Bugzilla, which confused me

[06:21:29.0000] <manu-db>
darobin: Is this exchange going to result in no new work being piled on top of me?

[06:23:47.0000] <Ms2ger>
manu-db, if you want work...

[06:23:51.0000] <manu-db>
noooo!

[06:23:54.0000] <manu-db>
no

[06:24:01.0000] <Ms2ger>
Yes you do! ;)

[06:24:04.0000] <manu-db>
no more, I can't take it.

[06:24:16.0000] <manu-db>
/me hides under darobin.

[06:24:44.0000] <Ms2ger>
/me gives work to darobin instead

[06:25:20.0000] <manu-db>
good man. :) - he loves extra work.

[06:30:08.0000] <darobin>
you can try giving work to me, but what with my brain being smothered in snot it's not going to do you any good :)

[06:31:09.0000] <manu-db>
it just slides off... that's a good defense, never thought about it that way.

[06:31:24.0000] <manu-db>
darobin: on a more serious note - is there anything I need to do as a result of whatever happened yesterday?

[06:31:27.0000] <Ms2ger>
I'm snot, you're glue?

[06:32:13.0000] <darobin>
manu-db: no, but thanks for offering ;)

[06:32:21.0000] <darobin>
Ms2ger: huwah?

[06:39:01.0000] <Workshiva>
I haven't been keeping up with the filesystem APIs, is there a way to offer the user to save a data: URI with a recommended filename?

[06:52:43.0000] <darobin>
Workshiva: <a href='data:...' download='xxx.foo'>,...

[06:54:18.0000] <Workshiva>
That seems almost too easy to be true

[06:57:32.0000] <Workshiva>
Also, thanks

[07:01:39.0000] <darobin>
Workshiva: well, it's not implemented all that broadly

[07:03:37.0000] <Workshiva>
Luckily I only need it for a chrome extension

[08:45:39.0000] <Velmont>
Hmmm. darobin, what do you think about the name? If everything is supposed to be in html-testsuite, it's not exactly a very ... obvious name, is it?

[08:56:30.0000] <darobin>
mmm, Velmont is Odin in disguise!

[08:56:46.0000] <darobin>
Velmont: I don't think that the name is a huge problem to be honest

[08:57:01.0000] <darobin>
99% of people think that all of what we do is "HTML5"

[08:57:17.0000] <Velmont>
Okay. :]

[08:57:20.0000] <Ms2ger>
Those people aren't the ones I want to write tests :)

[08:57:31.0000] <Velmont>
We want the 1%!!

[08:57:37.0000] <darobin>
lol

[08:57:57.0000] <darobin>
Ms2ger: that's actually not true, a lot of the good test writers really don't give a shit about the whole naming thing

[08:58:02.0000] <darobin>
and we want them on board

[08:58:05.0000] <Ms2ger>
The ones that can tell a spec from a hole in the ground ;)

[08:58:13.0000] <darobin>
(and I don't think they should give a shit ‚Äî I for one don't :)

[08:58:48.0000] <Velmont>
At TestTWF there was a HTML5 "part". Everyone had to put up their hand on what they wanted to work on. Almost noone did put up their hand for HTML5, because they were waiting for "IndexedDB" and similar specs that they cared about. :]

[08:58:54.0000] <darobin>
if you think that a spec is different from a deep, dark, and neverending hole in the ground you clearly don't know what a spec is

[08:59:32.0000] <marcosc>
heh

[08:59:33.0000] <darobin>
Velmont: true, but frankly I don't think the name is an issue

[08:59:47.0000] <darobin>
naming would be an important concern if we went with multiple repos

[08:59:58.0000] <darobin>
because we'd need to make it easy for people to find the right repo

[09:00:07.0000] <darobin>
but if there's only one, everything points there

[09:00:16.0000] <darobin>
we could call it unicorn for all it matters IMHO

[09:00:37.0000] <darobin>
who am I kidding that my opinions are ever humble? I meant IMO

[09:00:42.0000] <Velmont>
I'm a bit at loss about what to write on that wiki page for Art though... I can copy what's in the readme at github, maybe. ( https://github.com/w3c/html-testsuite/blob/master/README.md )

[09:01:16.0000] <darobin>
Velmont: write whatever you think someone who doesn't know us but is clueful would need to get started

[09:01:31.0000] <darobin>
if that means cut and paste, then all the easier for you

[09:01:43.0000] <darobin>
once you've put a first draft up I'll look at it to help

[09:06:18.0000] <Ms2ger>
darobin, pff, let's just put it on github.com/whatwg/tests :)

[09:06:49.0000] <darobin>
haha

[09:08:47.0000] <Velmont>
darobin: The real reason I asked was that I was maybe expecting some resistance on the naming not being generic.

[09:09:02.0000] <darobin>
Velmont: yeah I thought of that too

[09:09:03.0000] <Velmont>
The Webapps WG uses the W3C's ''html-testsuite'' repository on GitHub for its tests.

[09:09:23.0000] <darobin>
if it really is a problem we'll look into changing it

[09:09:32.0000] <darobin>
but I don't think it's a real issue

[09:10:01.0000] <Velmont>
Yeah, don't really have to preemptively do that ;]

[09:10:20.0000] <darobin>
right, I prefer to cross that bridge if it shows up

[09:10:32.0000] <darobin>
no point in solving an issue if no one ends up having it :)

[09:10:34.0000] <Ms2ger>
/me throws a bridge at darobin's feet

[09:10:50.0000] <Ms2ger>
/me puts a nice stack of tests on top

[09:11:01.0000] <darobin>
/me mumbles something about the velocity of an unladen swallow

[09:11:20.0000] <darobin>
Ms2ger: you *really* don't want me reviewing anything today

[09:11:36.0000] <darobin>
I'll get to it as soon as I can look at something more complex than email without my eyes crossing

[09:11:37.0000] <Ms2ger>
I don't want you to review, I want you to approve :)

[09:11:40.0000] <darobin>
lol

[09:12:11.0000] <darobin>
if it really is only about approving, you can approve it yourself you know :)

[09:12:22.0000] <Ms2ger>
Well, technically, yes :)

[09:12:39.0000] <Ms2ger>
But that makes it seem the review process is a failure

[09:13:25.0000] <Ms2ger>
We wouldn't want that, would we? ;)

[09:14:46.0000] <gsnedders>
In reality, nobody reviews anything anyway.

[09:58:29.0000] <Velmont>
Meh darobin disappeared. But anyway -> http://www.w3.org/wiki/Webapps/Submitting_tests

[10:21:30.0000] <tantek>
Velmont - I took a look - looks good. And thanks for using the W3C wiki rather than a WG silo wiki :)

[10:23:16.0000] <Velmont>
tantek: Yeah, I just notified webapps list about it now. Time to do something else :]

[10:24:29.0000] <tantek>
Velmont, cool. Also, your update reminded me the Webapps page itself needed some updating, e.g. dates of the next meeting: http://www.w3.org/wiki/Webapps

[10:25:15.0000] <Velmont>
tantek: Haha, yeah, I didn't even read them :S  Should've noticed that.

[10:25:39.0000] <tantek>
It's ok, now we just have to convince whoever maintains the meeting agendas to use the W3C wiki :)

[11:28:41.0000] <matjas>
‚ÄúIf there wasn‚Äôt a benefit to coding XHTML then why would it be formally codified into the (x)HTML5 standard then?‚Äù ‚Äî http://mathiasbynens.be/notes/html5-levels#comment-13

[11:29:29.0000] <Hixie>
and y'all complained when i had the spec discouraging xml

[11:29:34.0000] <Hixie>
and look where we are now :-P

[11:30:58.0000] <matjas>
(i didn‚Äôt complain :P)

[11:31:37.0000] <matjas>
relevant commit from the other day http://html5.org/tools/web-apps-tracker?from=7645&to=7646

[11:33:48.0000] <Hixie>
btw html4 didn't "not require" the slash; the slash just meant something very different in html4

[11:33:59.0000] <Hixie>
basically almost none of the browsers implemented it, but the validator did

[11:35:15.0000] <matjas>
Hixie: heads up, http://ln.hixie.ch/+ 404s

[11:35:43.0000] <matjas>
Hixie: what did it mean in HTML4? is this about SGML?

[11:35:47.0000] <Ms2ger>
Yep

[11:35:57.0000] <Ms2ger>
<s/foo/

[11:36:10.0000] <matjas>
ah, and <title// etc., I see

[11:36:36.0000] <matjas>
http://mathiasbynens.be/notes/minimal-html all over again

[11:41:10.0000] <Hixie>
hm, oops

[11:41:13.0000] <Hixie>
/me fixes his redirects

[11:41:44.0000] <Hixie>
404 fixed

[11:42:13.0000] <Hixie>
yeah, the / in html4 was sgml magic syntax

[11:42:33.0000] <Hixie>
meant various things, but none of it is what html now says it means

[11:55:51.0000] <jgraham>
Velmont: FWIW I think the repo name should be web-platform-testsuite

[11:56:13.0000] <jgraham>
Or failing that no-rdf-allowed-testsuite

[11:56:21.0000] <Ms2ger>
How about rdfa?

[11:56:47.0000] <jgraham>
The second choice name should answer that ;)

[11:57:03.0000] <jgraham>
But seriously, I don't care if RDFa people put tests there

[11:57:13.0000] <jgraham>
I can ignore them without difficulty

[12:19:47.0000] <JibberJim>
MikeSmith / darobin (who's not here...) sorry I got dragged away after my question :(  But yes, I don't like the idea of calling UNMUTE and it not resulting in sound coming out - however, that's as a user, and it doesn't necessarily mean the spec is wrong as you can handle the behaviour yourself in your UI layer.

[12:20:50.0000] <JibberJim>
I noted that Chrome's UI handles it by showing the Mute/Unmute button as muted and unresponsive when you click on it if you make the volume 0, and that seems very wrong to me.  It means the user has a button which sometimes work.

[12:23:10.0000] <TabAtkins>
JibberJim: Existing televisions seem relatively split on the subject, in my experience.  Some treat mute-ness as an independent state from volumn, others act fancy and will push you up to a "reasonable" volumn if you lower the volume to 0 and then press unmute.

[12:23:50.0000] <TabAtkins>
Man, *why* am I typoing it as volumn so much?  That third instance, which is spelled correctly, took me two tries to get it right.

[12:24:20.0000] <TabAtkins>
Anyway, the independent-state thing seems nice and simple to understand.  Trying to decide on a reasonable volume seems hard.

[12:24:32.0000] <TabAtkins>
(Argh, again with the attempted volumn spelling!)

[12:24:53.0000] <Velmont>
jgraham: "tests"

[12:25:37.0000] <JibberJim>
It actually came up because the test page only lets you take the volume down to 0.01 or something like that...

[12:26:30.0000] <JibberJim>
Yes I agree, the "what is a reasonable volume" is hard - although perhaps less hard on a TV which often these days has a "volume when you turn it on" setting in their menu.

[12:47:02.0000] <jgraham>
Velmont: The name?

[12:47:45.0000] <jgraham>
I specifically don't want EmotionML tests, or RIF tests or anything that you wouldn't implement in a browser

[12:48:31.0000] <jgraham>
"web platform" is the name for things that we implement in web browsers

[12:48:46.0000] <jgraham>
So web-platform-tests[uite]

[12:49:29.0000] <jgraham>
(I think html-testsuite is bad because it's misleading; we want to make it easy for people to find the right things)

[12:58:36.0000] <annevk>
MikeSmith: emailed webkit-dev

[12:58:49.0000] <Hixie>
annevk: did you get a chance to review https://www.w3.org/Bugs/Public/show_bug.cgi?id=17839 ?

[12:59:16.0000] <annevk>
Hixie: to some extent, need to figure out still why you can't use decode

[12:59:25.0000] <Hixie>
it does DOM manipulation

[12:59:29.0000] <Hixie>
er

[12:59:30.0000] <Hixie>
BOM

[12:59:30.0000] <Hixie>
typo

[12:59:59.0000] <annevk>
Hixie: which is what we want, unless the requirements changed somehow

[13:00:32.0000] <Hixie>
yeah but i already do that

[13:00:55.0000] <annevk>
I'll have a look tomorrow, but basically assume I'm on a 16-day vacation or some such

[13:01:05.0000] <annevk>
Hixie: the idea was to centralize the BOM checking

[13:02:23.0000] <Hixie>
i don't see much value in changing how we do bom checking

[13:03:54.0000] <annevk>
if it's a change something went wrong

[13:04:44.0000] <annevk>
the value of CSS / HTML / XML / JavaScript / ... using decode (and new formats using utf-8 decode) is that there's more shared code

[13:05:15.0000] <Hixie>
as far as i can tell it's just pointless editorial tweaking :-)

[13:05:23.0000] <Hixie>
if it ain't broke, i don't want to fix it

[13:06:57.0000] <annevk>
I'll keep that mind when doing a more thorough review

[13:36:10.0000] <JibberJim>
Another VIDEO element question, which I can't find in the spec.  Is the loadStarted event required?  Or is it possible to call .play() and it go immediately to canPlayThrough ? because it's got a source and it can play etc. ?

[13:40:41.0000] <JibberJim>
I think the event is required from reading.


2013-01-25
[16:01:25.0000] <Hixie>
anyone got IE handy?

[16:04:04.0000] <Hixie>
hsivonen: you around?

[16:09:54.0000] <heycam>
Hixie, I have an IE

[16:42:36.0000] <dgorbik>
Hixie: how should be lang WebVTT node get translated to DOM?

[16:43:25.0000] <JonathanNeal>
I'm drowning, my blood has gone to the extremities, and the only way to save me is to decide whether {} are braces or brackets in Hixie English.

[16:44:48.0000] <dgorbik>
dgorbik: oh, looks like it's still considered to be a class node but with the lang attribute set, right?

[16:53:11.0000] <dgorbik>
Hixie: okay so class nodes will get their language from the stack, but language nodes will still be created in the tree. So the question still remains - should they be dropped when we build a DOM tree or should a span be created with lang attribute set?

[20:04:28.0000] <JonathanNeal>
hello

[04:29:44.0000] <hsivonen>
Hixie: I‚Äôm around now

[04:49:59.0000] <Ms2ger>
jgraham, browser-tests?

[05:13:11.0000] <darobin>
bikeshed all the things!

[05:13:34.0000] <Ms2ger>
Hi darobin, how are you today? :)

[05:13:50.0000] <darobin>
I think I'm going to head home and back to bed :)

[05:24:28.0000] <annevk>
darobin: solid plan

[05:24:59.0000] <darobin>
annevk: I like it too

[05:26:25.0000] <MikeSmith>
oh joy http://www.iana.org/assignments/character-sets that the validator needs to parse to get valid character-set info and that has been a plain-text file for the last gazillion years now redirects to http://www.iana.org/assignments/character-sets/character-sets.xml

[05:27:35.0000] <MikeSmith>
though I see now the plain-text one is at http://www.iana.org/assignments/character-sets/character-sets.txt

[05:28:55.0000] <MikeSmith>
hsivonen: seems you must have a load problem on bugzilla.validator.nu

[05:29:17.0000] <MikeSmith>
it's taking a long time to load

[05:31:59.0000] <annevk>
MikeSmith: please implement the Encoding Standard and not IANA character-sets

[05:32:32.0000] <MikeSmith>
annevk: has Hixie updated the HTML spec yet?

[05:32:44.0000] <MikeSmith>
oh yeah I guess he did earlier this week

[05:33:00.0000] <annevk>
hoping to review that in more detail today

[05:33:05.0000] <MikeSmith>
ok

[05:33:15.0000] <annevk>
but yeah, HTML, CSS, now use it

[05:33:32.0000] <annevk>
JavaScript too I guess since HTML defines JavaScript's network layer

[05:34:04.0000] <MikeSmith>
OK then yeah we can update the validator to what the HTML spec says now

[05:35:58.0000] <annevk>
MikeSmith: which is much easier, the Encoding Standard has a fixed list

[05:36:09.0000] <annevk>
MikeSmith: available as JSON to boot

[05:36:11.0000] <MikeSmith>
yup

[05:37:06.0000] <hsivonen>
MikeSmith: we should switch over to the Encoding Standard like annevk says

[05:38:08.0000] <MikeSmith>
ok I'll up a bugzilla.validator.nu bug for it

[05:38:24.0000] <hsivonen>
MikeSmith: probably someone running Schematron on the same host that runs bugzilla

[05:40:13.0000] <MikeSmith>
hsivonen: man we really got to turn that off. I have come around to thinking it's probably still useful to keep HTML4 checking but we could just replace the current xhtml.sch with Java code just like for the HTML5 case

[05:41:01.0000] <MikeSmith>
the HTML4 xhtml.sch is a much smaller and simpler set of assertions than the HTML5 set

[05:41:14.0000] <MikeSmith>
hsivonen: good idea? bad idea?

[05:42:43.0000] <hsivonen>
MikeSmith: good

[05:43:13.0000] <hsivonen>
MikeSmith: but we should also make the default config not do HTML4 validation automatically

[05:43:27.0000] <hsivonen>
MikeSmith: that is, HTML4 validation should always require user action

[05:43:48.0000] <hsivonen>
MikeSmith: FWIW, I think https://addons.mozilla.org/en-us/firefox/addon/omnivalidator/ is what's making bugzilla.validator.nu slow

[05:47:01.0000] <hsivonen>
Although I could just make Validator.nu 403 for that one, I‚Äôd rather fix the perf problem

[05:47:24.0000] <MikeSmith>
hsivonen: if that's what's causing it you may want to ask the developer to point it at http://validator.w3.org/nu/ instead

[05:47:36.0000] <hsivonen>
or html5.validator.nu

[05:48:58.0000] <hsivonen>
hmm. maybe I can add a redirect

[05:48:59.0000] <MikeSmith>
I wonder if the fix for the perf problem might be to set up rate throttling

[05:49:52.0000] <MikeSmith>
or if the problem is not single IPs using it excessively but instead just the overall volume, I guess that wouldn't help

[05:50:00.0000] <hsivonen>
that, too, but most pressing fixes is: Make sure Schematron is never run without the user explicitly asking to run Schematron

[05:50:11.0000] <MikeSmith>
yeah

[05:50:20.0000] <hsivonen>
I‚Äôll try to set up a redirect now

[05:50:50.0000] <MikeSmith>
so yeah I agree HTML4 validation should always require user action, never do HTML5 validation automatically

[05:51:30.0000] <MikeSmith>
for the W3C instance that makes even more sense because there's already the existing validator for HTML4

[05:51:52.0000] <MikeSmith>
currently at least

[05:53:14.0000] <MikeSmith>
though the long-term plan is still to phase that out and make the validator.nu backend the default at http://validator.w3.org and move the legacy one to http://validator.w3.org/html4 or something

[06:13:12.0000] <hsivonen>
looks like I don't manage to make Apache do what I want

[06:13:15.0000] <hsivonen>
oh well

[06:33:21.0000] <MikeSmith>
annevk: so the document-conformance requirement in the Encoding spec is that documents must use utf-8, right?

[06:33:30.0000] <annevk>
yeah

[06:33:51.0000] <MikeSmith>
ok so we need to just emit an error for anything other than that

[06:33:53.0000] <annevk>
admittedly a bit optimistic, though given the many issues with everything else I think it's fair

[06:38:39.0000] <MikeSmith>
I guess for the other values that are listed in the spec as being required for UAs to support, we could emit a specific error saying, "Error: 'iso-8859-2' is supported in current browsers but is no longer a valid encoding. Use utf-8 instead."

[06:39:51.0000] <zewt>
not sure i'd say it's not "valid" (it is)

[06:40:36.0000] <zewt>
"iso-8859-2 is an obsolete legacy encoding, utf-8 should be used instead"? not sure

[06:41:25.0000] <MikeSmith>
zewt:  actually I like that wording better, yeah

[06:42:12.0000] <zewt>
(i'm always a little wary of overselling conformance criteria)

[06:43:04.0000] <zewt>
personally when every browser supports something and will always support something, i find "you really shouldn't do this" to be a bit more honest than "this is illegal stop it", heh

[06:43:33.0000] <MikeSmith>
yeah, true

[06:43:39.0000] <MikeSmith>
more helpful

[06:44:18.0000] <MikeSmith>
I'm interested in just trying to make sure the error message is more helpful than it is annoying

[06:44:39.0000] <zewt>
i wonder if there's a summary somewhere of issues legacy encodings will cause that everyday authors might experience (i've been on utf-8 far too long to remember any, at least at the non-scripting markup level)

[06:45:36.0000] <MikeSmith>
hmm if there isn't yet we could certainly make a summary at the wiki or somewhere

[06:45:55.0000] <zewt>
eg. reasons non-programmer web authors, who don't need to write text outside of their legacy encoding, should care (if there are any)

[06:45:58.0000] <MikeSmith>
and I could actually have the error messages then include a link to that

[06:46:22.0000] <zewt>
("utf-8 is nicer" isn't something joe blogger the piano teacher cares about)

[06:46:55.0000] <MikeSmith>
yeah

[06:47:19.0000] <MikeSmith>
so yeah we should definitely have a page somewhere to link to

[06:48:53.0000] <annevk>
zewt: http://annevankesteren.nl/2009/09/utf-8-reasons has some

[06:49:08.0000] <MikeSmith>
annevk: btw I think it would be better to have the spec say, "Documents must use the utf-8 encoding" instead of "Authors must use the utf-8 encoding"

[06:49:11.0000] <annevk>
http://annevankesteren.nl/presentations/1F4A9.html has a bunch of points too

[06:49:32.0000] <annevk>
MikeSmith: do you consider .js and .css files documents?

[06:49:33.0000] <zewt>
annevk: those (first one) are programmer reasons

[06:49:38.0000] <zewt>
those are easier to come up with

[06:50:17.0000] <zewt>
annevk: heh i was just thinking about PILE OF POO for this same reason D:

[06:50:35.0000] <zewt>
(it's probably a more compelling feature for random users than the others, heh)

[06:50:38.0000] <annevk>
you hit issues as soon as go beyond a very simple document

[06:51:21.0000] <annevk>
also, it's required material for a lot of new formats

[06:52:23.0000] <annevk>
MikeSmith: btw, for now I'd make it a Warning if that's feasible

[06:52:49.0000] <annevk>
MikeSmith: give people another year or so to get used to the idea

[06:54:23.0000] <MikeSmith>
annevk: hmm yeah as far as author vs document, I guess people normally would not consider .js and .css files to be documents, so please forget what I said :)

[06:54:31.0000] <zewt>
i almost sort of wish some kind of magic was stuffed into the html doctype, like <!doctype html!> or something, that future browsers could interpret as "default to utf-8", so we could skip boiletplating the charset declaration in the future

[06:56:11.0000] <MikeSmith>
annevk: as far as Warning vs Error I don't mind it being an Error. For end users, in practice I think most of them they really don't make any distinction -- they consider both to be errors that they need to fix

[06:57:00.0000] <MikeSmith>
you should ask hsivonen too but I suspect he also figures it should be an Error if you're going to make it a requirement at all

[06:57:15.0000] <zewt>
sometimes i pay more attention to errors, at least for documents that end up with pages of "warning autocomplete is illegal" warnings that drown out everything else (don't recall which validator that was, whichever one opera punts to by default)

[06:57:46.0000] <annevk>
MikeSmith: fair enough

[06:58:51.0000] <MikeSmith>
zewt: yeah me too but I'm mot sure if most users do that. From bug reports at least, many just seem to want "how do I make this message go away!!"

[06:59:33.0000] <zewt>
heh

[07:00:05.0000] <zewt>
everyone knows the real reason to pass validation is to make the validator pass, not to solve problems :P

[07:00:35.0000] <zewt>
afk work

[07:04:26.0000] <MikeSmith>
:)

[07:26:03.0000] <hsivonen>
oh great. I post to www-style and get a reply from someone who thinks we should deprecate media queries.

[07:26:22.0000] <hsivonen>
I wonder if I should reply to any part of his email.

[07:26:29.0000] <Ms2ger>
Deprecate all the things!

[07:26:46.0000] <Ms2ger>
My general approach to such emails is chuckle and ignore

[07:27:14.0000] <Ms2ger>
"If you use `respec`, your ED may be broken"

[07:27:16.0000] <Ms2ger>
May?

[07:51:46.0000] <annevk>
hsivonen: yeah, or a less than comparison in script

[07:52:08.0000] <annevk>
hsivonen: you'd think the point was clear even though the example was inaccurate

[07:55:01.0000] <annevk>
Ms2ger: so should we use a callback?

[07:55:12.0000] <Ms2ger>
Come again?

[07:55:23.0000] <annevk>
Ms2ger: sorry, for the local name + namespace -> interface map

[07:55:50.0000] <Ms2ger>
Ah

[07:55:52.0000] <annevk>
Let interface be the element interface for x and y.

[07:55:58.0000] <Ms2ger>
For createElement?

[07:56:36.0000] <Ms2ger>
That sounds good enough for me

[07:57:01.0000] <annevk>
The element interface for x and y is Element, unless stated otherwise. Note: other specifications require otherwise, e.g. for html and http://www.w3.org/1999/xhtml you'll get HTMLHtmlElement

[07:57:19.0000] <annevk>
Ms2ger: also createElementNS, don't think there's anything else, is there?

[07:57:38.0000] <Ms2ger>
Not as far as I know

[07:58:01.0000] <Ms2ger>
I just completely missed that you were talking about those at first :)

[07:58:19.0000] <annevk>
Well, for me the context was clear, but I should have shared it first :)

[07:58:40.0000] <annevk>
I think this is why sometimes people are confused with my blog posts.

[07:58:45.0000] <Ms2ger>
I should write some more tests

[07:58:49.0000] <Ms2ger>
Either that or reddit

[07:59:13.0000] <annevk>
Whoa reddit. I think I'm now almost two weeks without visiting reddit.

[08:00:08.0000] <annevk>
But given everything else that's going on it's hard to measure the impact of that.

[08:16:41.0000] <annevk>
https://www.w3.org/Bugs/Public/show_bug.cgi?id=20775

[08:16:43.0000] <annevk>
https://www.w3.org/Bugs/Public/show_bug.cgi?id=20776

[08:16:52.0000] <annevk>
Does MathML use special interfaces?

[08:17:44.0000] <annevk>
Doesn't look like it

[08:18:18.0000] <annevk>
Test used: <math></math><script>w(document.getElementsByTagName("math")[0])</script>

[08:25:39.0000] <Ms2ger>
Yeah, there was something of a MathMLElement interface, but it never got implemented

[08:55:33.0000] <Hixie>
hsivonen: what's the status in Gecko in terms of making BOMs override the user when the user asks for an encoding override? Leif claims you want to do this.

[09:00:12.0000] <Ms2ger>
Hixie, https://bugzilla.mozilla.org/show_bug.cgi?id=234628

[09:14:35.0000] <Hixie>
that's about xml

[09:15:50.0000] <Hixie>
or at least was for a while?

[09:16:13.0000] <Hixie>
i can't tell what the answer to my question is from that bug

[09:20:09.0000] <Ms2ger>
Hmm

[09:20:15.0000] <Ms2ger>
Maybe it's for polyglot

[09:20:57.0000] <Hixie>
ok well, either way, this all seems to be UI-specific, so I'll just punt on this.

[09:38:41.0000] <TabAtkins>
hsivonen: Jeezus christ, no, don't respond to that email.

[09:45:03.0000] <esprehn_>
TabAtkins: ??

[09:45:31.0000] <TabAtkins>
esprehn_: hsivonen posted a message to www-style about MQs, got several dumb emails amounting to "MQs are dumb, just use fluid design".

[09:46:24.0000] <esprehn_>
TabAtkins: I do rather enjoy lines of text that span my entire 30in monitor

[09:48:51.0000] <Hixie>
wow, talk about unlucky

[09:49:04.0000] <Hixie>
back on jan 16th i was testing some code i wrote

[09:49:24.0000] <Hixie>
which converts a Date to a string in the format "day-of-month month", as in, Jan 16

[09:49:28.0000] <Hixie>
and it worked great!

[09:49:39.0000] <Hixie>
today I noticed _all_ the days were Jan 16

[09:50:03.0000] <MikeSmith>
hahaha   :-)

[09:50:14.0000] <TabAtkins>
Hahaha

[09:50:24.0000] <Hixie>
turns out that the number of seconds from jan 1 1970 to now equals the number of milliseconds from jan 1 1970 to jan 16 1970

[09:50:29.0000] <hsivonen>
TabAtkins: I already did, but only to the part that posed a question many others might wonder about

[09:50:50.0000] <TabAtkins>
hsivonen: Now that I've read the rest of the thread, bozo bit flipped on this Fred dude.

[09:55:21.0000] <JonathanNeal>
"There is no single combination of containers and codecs that works in all HTML5 browsers." That's not true anymore, is it?

[09:55:27.0000] <JonathanNeal>
Does webm work in IE10?

[09:55:39.0000] <TabAtkins>
WebM still doesnt' work in Safari anyway, iirc.

[09:55:50.0000] <JonathanNeal>
Bummer.

[09:55:51.0000] <TabAtkins>
WebM can work in IE10 if you've installed the codecs yourself.

[09:56:07.0000] <JonathanNeal>
"This is not likely to change in the near future." also true?

[09:56:19.0000] <TabAtkins>
To the best of my knowledge, yes.

[09:56:32.0000] <JonathanNeal>
Do they all support H.264?

[09:57:01.0000] <TabAtkins>
Dunno about Opera.  FF... might now, if you have the codecs already on your system.

[09:59:51.0000] <JonathanNeal>
Okay, Opera only supports webm and ovg.

[09:59:54.0000] <JonathanNeal>
*ogv

[10:21:01.0000] <JonathanNeal>
Hahaha, just read up on the two year anniversary of Chrome not pulling out H.264 support. http://blog.chromium.org/2011/01/more-about-chrome-html-video-codec.html

[10:21:12.0000] <JonathanNeal>
But I like H.264.

[10:23:05.0000] <TabAtkins>
If it weren't for licensing, I'd have no problems with it.

[10:23:13.0000] <TabAtkins>
(Though I think WebM is technically better now.)

[10:28:35.0000] <Hixie>
Stevef_: you're welcome to participate in the whatwg community, but i would really appreciate it if you would then actually participate, rather than just throwing links to other discussions in every few weeks.

[10:31:54.0000] <Stevef_>
hixie: I stated why I pointed to the particular discussion and also pointed to some suggestions I had produced, if you don't want the what wg list members to be aware of discussions affecting HTML in other fora, I will not make them aware via your list.

[10:32:16.0000] <Hixie>
Stevef_: people who want to be aware of public-html discussions have subscribed to public-html

[10:32:32.0000] <Hixie>
Stevef_: so if your goal is just to have people be aware of public-html discussions, there's no need

[10:32:43.0000] <Hixie>
Stevef_: thanks for the consideration, though

[10:34:00.0000] <Stevef_>
hixie: ok message understood I will not bring up disvussions that have potential to chnage stuff in the HTML 5/5.1 on the whatwg list

[10:34:11.0000] <TabAtkins>
Dude, don't be purposely difficult.

[10:34:30.0000] <Hixie>
TabAtkins: let it go, he's gotten way less rude than he used to be

[10:34:32.0000] <astearns>
s/Dude/Dudes/

[10:34:53.0000] <Ms2ger>
What he said

[10:35:29.0000] <Hixie>
i like the ambiguity of Ms2ger's statement, leaving it unclear if he's supporting tab, me, or astearns :-P

[10:35:40.0000] <Ms2ger>
astearns, in fact

[10:35:55.0000] <Hixie>
seems reasonable :-)

[10:36:16.0000] <JonathanNeal>
Yea, I have to agree with astearns too. Dude has a point.

[10:36:59.0000] <TabAtkins>
s/Dude/Dudes/

[10:37:10.0000] <Ms2ger>
No, just astearns

[10:37:12.0000] <TabAtkins>
(I just wanted to make your sentence ungrammatical.)

[10:37:14.0000] <JonathanNeal>
Nope

[10:37:44.0000] <TabAtkins>
Hixie: Yo, do you call {} "braces" or "brackets"?

[10:37:52.0000] <Hixie>
braces or curly brackets

[10:37:57.0000] <TabAtkins>
Haha.

[10:38:22.0000] <Hixie>
straight brackets, or square brackets, are []

[10:38:29.0000] <Hixie>
parentheses, or round brackets, are ()

[10:38:46.0000] <Hixie>
angle brackets, or les conveniently "less than greater than", are <>

[10:38:49.0000] <Hixie>
less

[10:39:06.0000] <Hixie>
by "straight brackets" i mean straight "brackets", not the term "straight brackets"

[10:39:16.0000] <TabAtkins>
Ah, that was unclear.

[10:39:35.0000] <TabAtkins>
Use "Just" or "Plain" to avoid geometric terms in a situation like this.

[10:39:35.0000] <Hixie>
yeah

[10:39:36.0000] <hober>
"the unmarked case"

[10:39:56.0000] <Hixie>
"plain brackets" are brackets you use to surround fields

[10:40:07.0000] <JonathanNeal>
I think Hixie and his English would agree with http://www.jonathantneal.com/characters/

[10:40:10.0000] <Hixie>
as in corn fields, not as in plane fields

[10:40:13.0000] <Hixie>
also i may be being silly now

[10:40:39.0000] <TabAtkins>
plane fields are airplane junkyards.

[10:40:40.0000] <Ms2ger>
[corn fields]

[10:40:47.0000] <Hixie>
JonathanNeal: i prefer "octothorpe" for #, though hash is fine too.

[10:41:05.0000] <Hixie>
and ` is "backtick", not just "tick"

[10:41:16.0000] <Hixie>
"?" is "question mark", not "query"

[10:41:23.0000] <Hixie>
" is "double quote"

[10:41:33.0000] <Hixie>
| is "vertical bar"

[10:41:48.0000] <Ms2ger>
Oh dear

[10:41:52.0000] <TabAtkins>
Next controversial pronunciation question: is "char" pronounced with a soft ch like "chair", or a hard ch like "character"?  And is it a long ar like "bar", or a soft ar like "bare"?

[10:41:55.0000] <JonathanNeal>
It is a double quote, but when someone says quote I first think of ". The section just to the right of that clarifies it.

[10:41:57.0000] <Hixie>
and ! is only "bang" if you're reading it as part of something else

[10:42:14.0000] <Hixie>
TabAtkins: "char" is pronounced "car" in my world, because it's shart for "character".

[10:42:34.0000] <TabAtkins>
...shart?

[10:42:41.0000] <Hixie>
uh

[10:42:42.0000] <Hixie>
short

[10:42:44.0000] <Hixie>
dvorak typo

[10:43:08.0000] <Hixie>
(or a weird british accent, your choice)

[10:43:09.0000] <TabAtkins>
So, becuase it's short for character, you still don't pronounce it like "character".  (Wrong vowel.)

[10:44:14.0000] <Hixie>
yeah, the "a" is weird. dunno why. (note i don't pronounce the first "a" in "character" as either "bar" or "bare")

[10:44:59.0000] <Hixie>
i pronounce it more like the norwegian ae ligature character

[10:45:07.0000] <Hixie>
like "hat"

[10:45:22.0000] <JonathanNeal>
I will find a way to get everyone agreeing on this language, by golly.

[10:45:27.0000] <Hixie>
hah

[10:45:29.0000] <Hixie>
good luck with that

[10:45:30.0000] <Hixie>
afk

[10:45:56.0000] <JonathanNeal>
"char" as in "chardonnay"

[10:46:13.0000] <TabAtkins>
Just swap both phonemes to the wrong one?

[10:46:21.0000] <GPHemsley>
/me pronounces "char" like it reads, ignoring any relationship to "character"

[10:46:27.0000] <TabAtkins>
/me too.

[10:46:43.0000] <JonathanNeal>
I pronounce it like charcoal.

[10:46:44.0000] <TabAtkins>
Like the english word "char".

[10:46:52.0000] <GPHemsley>
/me scrolls back to find out what this conversation is about.

[10:47:16.0000] <TabAtkins>
How Hixie names the {} characters.

[10:48:05.0000] <GPHemsley>
() = parentheses; [] = square brackets; {} = curly braces; <> = angle brackets

[10:48:31.0000] <GPHemsley>
# depends on contexts, probably hash nowadays

[10:49:03.0000] <GPHemsley>
` = backtick; ? = question mark; " = double quotes; | = vertical bar

[10:49:04.0000] <JonathanNeal>
The context is as independent characters in web programming

[10:49:21.0000] <JonathanNeal>
GPHemsley http://jonathantneal.com/characters/

[10:49:36.0000] <TabAtkins>
Also, more or less how you would read the character if encountering it in code that you're reading out to another coder.

[10:49:36.0000] <GPHemsley>
! = exclamation point, except for hashbang

[10:49:56.0000] <TabAtkins>
Frex, while I name | as "vertical bar", I'd just call it "bar" casually.

[10:50:11.0000] <GPHemsley>
! can also be "not" in certain contexts

[10:50:18.0000] <GPHemsley>
like != = "not equals"

[10:51:25.0000] <GPHemsley>
* = star or asterisk

[10:51:59.0000] <GPHemsley>
interestingly, I don't seem to think of < and > as open and close

[10:53:03.0000] <GPHemsley>
I don't use shorthand "paren" or "dollar"; it's "parenthesis" and "dollar sign"

[10:53:32.0000] <GPHemsley>
I think the rest are OK

[10:55:02.0000] <JonathanNeal>
Thanks GPHemsley. It is interesting to learn how many different ways we identify these characters.

[10:55:23.0000] <GPHemsley>
It's also interesting, because I'm not used to saying these things out loud

[10:55:36.0000] <GPHemsley>
so, for example, how do you pronounce "admin"?

[10:56:04.0000] <JonathanNeal>
"add men"

[10:56:12.0000] <JonathanNeal>
yourself?

[10:56:13.0000] <TabAtkins>
Like "administrator" without the suffix?

[10:56:29.0000] <TabAtkins>
Oh, and stress moved to the first syllable, per stadnard English rules.

[10:56:55.0000] <JonathanNeal>
I wish the stress was moved to the first syllable in paren.

[10:57:04.0000] <TabAtkins>
JonathanNeal: It is when I say it.

[10:57:24.0000] <JonathanNeal>
Do you say "puh ren" or "per en"?

[10:57:36.0000] <TabAtkins>
GPHemsley: I started expicitly shortening "parenthesis" when I started saying it more, because the repeated th/s phonemes are tongue-twisters.

[10:57:47.0000] <TabAtkins>
"pair en".

[10:58:13.0000] <JonathanNeal>
Interesting, and I call them "per en".

[10:58:15.0000] <TabAtkins>
Pronouncing it like it was a new word, unrelated to the context from which it was shortened.

[10:58:37.0000] <GPHemsley>
TabAtkins: Yeah, see, I don't do the stress movement.

[10:58:55.0000] <TabAtkins>
(I pronounce a lot of initialisms too, which requires some creativity due to them breaking spelling rules.)

[10:59:19.0000] <GPHemsley>
Also at play here is the Mary/marry/merry distinction/merger

[10:59:22.0000] <TabAtkins>
CSS = SEH-sis, HTML = HUH-tuh-mul

[10:59:29.0000] <GPHemsley>
oh wow

[10:59:34.0000] <TabAtkins>
GPHemsley: Yeah, the sound definitely falls into that merger.

[10:59:53.0000] <TabAtkins>
Or HEH-tim-mul, I guess, now that I say it out loud.

[10:59:58.0000] <Ms2ger>
What-wig?

[11:00:01.0000] <TabAtkins>
Yes.

[11:00:03.0000] <JonathanNeal>
TabAtkins: whoooooa

[11:00:05.0000] <JonathanNeal>
"png" as in "ping", gif with a g as in "guide".

[11:00:06.0000] <GPHemsley>
yikes

[11:00:12.0000] <TabAtkins>
Yup.

[11:00:46.0000] <GPHemsley>
SEE ess ess; aitch tee EM ell; what double you jee

[11:01:18.0000] <GPHemsley>
PNG is usually pee enn jee

[11:01:21.0000] <JonathanNeal>
GPHemsley: ++

[11:01:25.0000] <JonathanNeal>
except for PNG

[11:01:37.0000] <GPHemsley>
but I'm a soft G GIFfer

[11:03:01.0000] <JonathanNeal>
Webemm?

[11:03:26.0000] <GPHemsley>
sounds good

[11:03:54.0000] <TabAtkins>
Webimm.

[11:04:05.0000] <JonathanNeal>
Speaking of which, I want to change the recommended order of encoding videos from "Webm, ogg, h.264" to "Webm, h.264, ogg", because of the current state of support. What do you think?

[11:04:19.0000] <TabAtkins>
Well, I think that's my merger talking.  Webemm is probably a better spelling.

[11:04:20.0000] <GPHemsley>
oh, then there's the pin/pen merger

[11:04:31.0000] <JonathanNeal>
ogg isn't really necessary in a post Firefox 3.5 - Opera 10.5 world.

[11:04:51.0000] <TabAtkins>
JonathanNeal: Yes, that's fine.  Using *just* WebM and h.264 is sufficient.

[11:05:35.0000] <TabAtkins>
Iirc, you can do the same two-codec dance with audio, too.  MP3 works in several, but I forget which free format covers the remainder.

[11:09:39.0000] <JonathanNeal>
Neither do I, but I suspect its ogv.

[11:09:48.0000] <TabAtkins>
Likely.

[11:09:58.0000] <TabAtkins>
Since Opera and FF both like Ogg.

[11:10:06.0000] <TabAtkins>
And I think everyone else does MP3

[11:10:34.0000] <Ms2ger>
Wave?

[11:11:53.0000] <TabAtkins>
Come now, be serious.

[11:13:33.0000] <JonathanNeal>
*waves back*

[11:14:11.0000] <Stevef_>
hixie: FYI i pointed to html list for context i pointed to http://www.html5accessibility.com/tests/comments.html which is some ideas and explanation i put together, so didn't merely throw a link

[11:14:42.0000] <JonathanNeal>
http://diveintohtml5.info/video.html#video-containers also fails to mention wmf, but does mention avi

[11:19:26.0000] <pablof>
this is bringing the metafilter pronunciation survey to mind, http://metatalk.metafilter.com/21984/2012-MetaFilter-Survey-and-Research-Discussion-Thread

[11:19:43.0000] <JonathanNeal>
wmv, sorry.

[11:22:41.0000] <Ms2ger>
Mailing lists are a support forum anyway

[11:37:33.0000] <tantek>
Ms2ger++

[12:11:51.0000] <jgraham>
The correct prnounciation of "{}" is "thank goodness I'm not using a Swedish keyboard". At least that's what I say if I have to type them and read what I'm doing aloud

[12:12:57.0000] <jgraham>
Although probably "goodness" isn't quite right

[12:13:01.0000] <TabAtkins>
Good thing about CSS is that it uses enough punctuation to lock us into caring about a fairly narrow set of keyboards, so we've got a decent idea of what other glyphs we can use.

[12:16:48.0000] <jgraham>
I am really surprised that so many people don't just switch to something more programmer-friendly for writing code. I mean it isn't really *fair* that programming languages were invented in English-speaking countries and used the symbols that are easy to access on the corresponding keyboard, but having to reach for AltGr all the time must suck. In fact I think sometimes you need three-key combinations

[12:21:45.0000] <esprehn_>
jgraham: I'd assume most editors fill stuff in automatically

[12:24:46.0000] <jgraham>
esprehn_: Not really, I mean some will ad a losing brace if you put in an opening one, but you can't do much more than that

[12:24:51.0000] <JonathanNeal>
Ah, the "fairness" of coding languages.

[12:25:08.0000] <jgraham>
*add a closing

[12:26:14.0000] <JonathanNeal>
Seeking any kind of sweeping cultural fairness (especially in technology) as a policy is flawed, I think inherently.

[12:27:14.0000] <Ms2ger>
But we need to be fair!

[12:27:24.0000] <Ms2ger>
And have unicode case insensitivity!

[12:27:56.0000] <JonathanNeal>
Effectively, the engineers of HTML and CSS hijacked english, and it is now part of their trade language. Now, due to their similarities, english and web terminology will affect each other.

[12:31:10.0000] <JonathanNeal>
I saw a video recently of an arabic programming language. I think that's really cool. I understand the potential advantages. I understand the linguistic advantage of dropping English and speaking Esperanto.

[12:31:43.0000] <JonathanNeal>
But it's just not practical, given the human experience and human limitation. </html5:rant>

[12:34:13.0000] <Ms2ger>
And it's a lot more convenient than Arabic for us, no?

[12:35:33.0000] <jgraham>
(I believe that esperanto isn't considered very theoretically good)

[12:35:44.0000] <gsnedders>
(Indeed.)

[12:36:16.0000] <jgraham>
(The future is supposed to be more like http://www.exocomics.com/101 )

[12:36:20.0000] <gsnedders>
(There is no language that is theoretically good, because sociolinguistic pressures always cause deviation)

[12:37:07.0000] <jgraham>
Well yes, that's one issue

[12:39:34.0000] <JonathanNeal>
say "pacific ocean" and give the "c" the same sound every time.

[12:40:25.0000] <jgraham>
why?

[12:45:13.0000] <JonathanNeal>
y?

[13:56:05.0000] <JonathanNeal>
Do you call ‚Äπ a chevron? That's not <, mind you. Or do you call it an angle quotation, something else?

[13:56:20.0000] <TabAtkins>
I don't know what the character is, exactly.

[13:56:35.0000] <TabAtkins>
Is it the french quotation mark?

[13:58:01.0000] <TabAtkins>
The only thing I call a chevron is the symbol used in military ranks.

[13:58:18.0000] <JonathanNeal>
It's from http://www.w3.org/TR/WD-entities-961125#entspecial It may be the french one, it goes by the name guillemet.

[13:58:47.0000] <TabAtkins>
Ah, kk.  In that case, I call it a guillemet, or "single french quotation mark, you know, the angle thingies".

[13:58:53.0000] <JonathanNeal>
Wikipedia calls it "Double angle quote (chevron, guillemet, duck-foot quote), left"

[13:59:40.0000] <TabAtkins>
But I don't actually refer to it in any meaningful amount, outside of discussing the internationalization of quotation marks in CSS, so the name I give it doesn't matter much.

[14:01:12.0000] <JonathanNeal>
And the guillemet has two. Okay.

[14:05:40.0000] <JonathanNeal>
Yea, we don't use any of these when writing structural HTML, CSS, or JavaScript

[14:06:43.0000] <esprehn_>
chevron is just a generic term for things that look like like < and > or stripes

[14:06:54.0000] <esprehn_>
the military rank bars are chevrons even if they're straight lines

[14:09:53.0000] <esprehn_>
Hixie: what's the reason for webvtt being an entirely new language instead of just XML or HTML?

[14:10:13.0000] <TabAtkins>
esprehn_: It's not an entirely new language - it's a close cousin to an existing subtitle format.

[14:10:37.0000] <TabAtkins>
(And I think plain VTT is still parseable as WebVTT for the most part.)

[14:10:47.0000] <esprehn_>
mm

[14:10:49.0000] <TabAtkins>
s/existing/existing and very popular/

[14:11:47.0000] <esprehn_>
This feels like it should have been XML with a mapping from the XML ns to the HTML ns, the wormhole is very unfortunate

[14:12:02.0000] <esprehn_>
ex i { color: red; } ::cue(i) { color: blue }

[14:12:15.0000] <esprehn_>
the design is confusing

[14:12:32.0000] <TabAtkins>
What wormhole? It's an embedded document.  No embedded documents are targetable directly from the outside document.

[14:13:25.0000] <esprehn_>
oh I see, these things are not actually elements

[14:13:26.0000] <esprehn_>
hmm

[14:13:34.0000] <esprehn_>
dgorbik: I'm not sure this implementation you have makes sense

[14:13:40.0000] <esprehn_>
in the spec they're not Elements or even HTMLElements

[14:14:20.0000] <esprehn_>
they're just a logical tree that produces a rendered result that you can then convert to HTML in the form of a DocumentFragment

[14:15:13.0000] <esprehn_>
TabAtkins: yeah, now that I read this spec more closely...

[14:15:36.0000] <esprehn_>
TabAtkins: the web VTT universe is not really even a DOM universe

[14:16:27.0000] <TabAtkins>
esprehn_: Right, it's not DOM, but it's close enough that it's mappable into a document tree for CSS.

[14:16:40.0000] <TabAtkins>
It *could* be made into full DOM.

[14:16:49.0000] <TabAtkins>
It has all the necessary abstractions.

[14:17:33.0000] <esprehn_>
yeah

[14:17:51.0000] <JonathanNeal>
needs moar <!doctype subtitle>

[14:19:16.0000] <nimbu1>
bleh welcome to web word esprehn_ everything is just 'close enough' to everything else

[14:19:47.0000] <esprehn_>
heh

[14:32:22.0000] <dgorbik>
esprehn_: there is no other way to have CSS matching and rendering without using Elements obviously

[14:33:17.0000] <esprehn_>
dgorbik: yes but the webvtt node tree can be a tree of very light weight nodes that just maps to the resulting HTMLElements that live in the shadow

[14:33:28.0000] <Hixie>
esprehn_: it's essentially SRT

[14:33:42.0000] <esprehn_>
dgorbik: think of this as if you were implementing it in JS, you'd have a tree of JS objects for the VTT nodes, and the DOM would contain HTML nodes

[14:33:54.0000] <Hixie>
esprehn_: but as a general rule, XML is a disaster, and HTML more so, so that's why not to reuse those. :-)

[14:34:36.0000] <dgorbik>
esprehn_: I am not sure how that would be different from reusing Nodes and Elements and all this infrustructure. Why should we invent trees again?

[14:36:24.0000] <esprehn_>
dgorbik: because what you're doing requires a lot of special hackery and being very careful

[14:37:18.0000] <jgraham>
In case any HTMLWG chairs are listening "You really don't know much about this field, do you?" is the point at which you start applying whatever etiquette policy we have.

[14:37:55.0000] <dgorbik>
esprehn_: I still will not be able to build a tree for rendering purposed (in shadow dom) with those lightwait objects.

[14:38:09.0000] <dgorbik>
purposes*

[14:38:20.0000] <esprehn_>
dgorbik: ex ::cue(i[style]) should not match, but clearly would if you just used an inline style.

[14:38:58.0000] <JonathanNeal>
I get so used to functions that don't exist.

[14:39:03.0000] <JonathanNeal>
Element.prototype.forEach.

[14:40:07.0000] <dgorbik>
esprehn_: are you trying to say that inline styles will introduce some other problems like this?

[14:40:26.0000] <esprehn_>
dgorbik: when you implement that nested selector matching you'll need to be careful

[14:40:35.0000] <esprehn_>
I guess either approach is fine

[14:40:49.0000] <esprehn_>
creating elements in the html namesape that are not HTMLElement certainly isn't :)

[14:41:33.0000] <dgorbik>
esprehn_: which one is the second approach? the first one is to use inline styles and separate tags

[14:42:41.0000] <esprehn_>
dgorbik: to create a separate tree, produce real HTML elements, and stick a scoped stylesheet down in the shadow.

[14:42:57.0000] <esprehn_>
I guess you're someone stuck since <v> is not an HTML element :/

[14:43:02.0000] <esprehn_>
somewhat*

[14:44:08.0000] <esprehn_>
sigh

[14:44:20.0000] <esprehn_>
dgorbik: just fix the namespace and use an inline style for now

[14:44:59.0000] <esprehn_>
Hixie: my issue is that we're going to bloat the browser terribly if every new thing invents a new format

[14:45:45.0000] <esprehn_>
I suppose if this format already exists :)

[14:46:15.0000] <zewt>
<v> generates a <span title=voice> DOM node, not a <v> element

[14:46:31.0000] <Hixie>
esprehn_: i don't think supporting new dedicated formats is a substantial source of code complexity or size, especially relative to the alternatives

[14:46:59.0000] <Hixie>
zewt: the only time <v> generates <span title=voice> is if you use the method that converts WebVTT to HTML, but that's not really likely to be used much

[14:47:05.0000] <esprehn_>
zewt: not in the tree dgorbik is producing, because he wants ::cue(v) to match without extra work

[14:47:27.0000] <Hixie>
zewt: in particular, that isn't relevant to the rendering part

[14:47:39.0000] <zewt>
Hixie: he said "produce real HTML elements", so that seems like the only sane thing to do

[14:47:49.0000] <esprehn_>
yes

[14:49:01.0000] <zewt>
esprehn_: you'll (he'll) have to do some extra work no matter what, since ::cue doesn't exist outside of WebVTT in the first place (right?)

[14:49:33.0000] <dgorbik>
esprehn_, Hixie: this is a balance between having a unified markup or having a more suitable language for each purpose (and easier for the end user). The problem that this webvtt thing is not convertible in terms of syntax to html markup because it introduces its small differences. So we try to reuse existing html objects but also add something new to them.

[14:52:36.0000] <esprehn_>
zewt: yeah, it's a question of which machinery you want to change

[14:53:04.0000] <Hixie>
dgorbik: imho "unified markup" has been convincingly demonstrated to be a fool's errand. :-)

[14:53:14.0000] <Hixie>
zewt: i don't understand the relevance of HTML elements to WebVTT

[14:53:17.0000] <esprehn_>
principally this whole feature is like glorified generated content, like if you could ask an HTMLElement to produce the equivalent html for the :before or :after pseudo elements

[14:53:46.0000] <esprehn_>
perhaps such a mapping should even exist

[14:56:08.0000] <dgorbik>
When we try to mimic webvtt rendering by using htmlelements latter start to imply their own meaning (like style attribute like esprehn_ mentioned). That makes this even harder

[14:57:31.0000] <dgorbik>
Hixie: well, it may be less or more unified, it's just a matter of balance

[14:57:45.0000] <zewt>
not sure what you mean by the style attribute; webvtt's dom construction rules never create style attributes

[14:58:21.0000] <Hixie>
don't try to mimic webvtt rendering by using html elements, why would you do that?

[14:58:21.0000] <esprehn_>
zewt: he's talking about a webkit implementation detail

[14:58:35.0000] <esprehn_>
the one that I'm questioning

[14:58:51.0000] <zewt>
what detail is that, again?

[14:59:07.0000] <dgorbik>
Hixie: is mimicing webvtt rendering by using just elements or styledelements is fine though? :

[14:59:08.0000] <dgorbik>
:)

[14:59:23.0000] <Hixie>
i wouldn't mimic webvtt rendering at all :-)

[14:59:27.0000] <Hixie>
just render webvtt directly

[14:59:39.0000] <Hixie>
why would you use any kind of dom elements?

[15:00:29.0000] <esprehn_>
Hixie: because that's how selector matching works for things like ::cue(v) { ... } and anonymous renderers like those this would create are very problematic, specifically the text inside them is not selectable

[15:00:32.0000] <dgorbik>
esprehn_: does this mean that Hixie suggests having a separate tree we attach to and produce a RenderTree?

[15:00:39.0000] <esprehn_>
dgorbik: yes

[15:00:47.0000] <dgorbik>
yep, selector matching still will not work in this case.

[15:00:59.0000] <Hixie>
i don't understand what selector matching has to do with elements, other than as a historical implementation detail

[15:01:09.0000] <Hixie>
nothing in CSS requires that it be matched against DOMs only

[15:01:13.0000] <Hixie>
any tree with named nodes is fine

[15:01:23.0000] <esprehn_>
Hixie: That

[15:01:32.0000] <esprehn_>
That's just not how webkit works

[15:01:46.0000] <esprehn_>
and there's no way they're going to make the selector matching engine generic as you describe

[15:01:58.0000] <Hixie>
so fix webkit

[15:02:06.0000] <esprehn_>
it's extremely optimized for very specific use cases

[15:02:15.0000] <dgorbik>
only HTMLElements are related to DOM directly as far as I understand. Just Element implements some traits of html elements but can be used elsewhere. Is this right?

[15:02:19.0000] <Hixie>
so optimise it for two use cases :-)

[15:02:44.0000] <Hixie>
dgorbik: HTMLElement inherits from Element

[15:03:09.0000] <esprehn_>
Hixie: I'm not going to fight that fight with the people that maintain that part of webkit, the entire thing would need to be rewritten

[15:03:09.0000] <Hixie>
dgorbik: the DOM is a tree of Element objects (and other objects inheriting from Node), rooted at a Document object (hence Document Object Model)

[15:03:40.0000] <Hixie>
esprehn_: so rewrite it. why would there be a fight?

[15:04:08.0000] <zewt>
... i expect there would be a fight in any production browser at someone rewriting a critical component, heh

[15:04:11.0000] <esprehn_>
dgorbik is welcome to debate that with Apple

[15:04:23.0000] <dgorbik>
:D

[15:04:25.0000] <Hixie>
esprehn_: writing hacky code because of concerns over who's going to fight what is definitely not a good design approach :-)

[15:04:31.0000] <esprehn_>
I'm not going to be involved in the discussion to rewrite a major critical component of webkit just for WebVTT

[15:05:15.0000] <esprehn_>
it's a year's worth of work

[15:05:22.0000] <esprehn_>
and a political mine field :)

[15:06:15.0000] <zewt>
Hixie: any production codebase is going to see massive resistance to rewriting a critical, heavily-tested and optimized component, especially if it's just for one isolated feature

[15:06:52.0000] <dgorbik>
esprehn_: how is this related to the political side of things?

[15:07:14.0000] <zewt>
i wouldn't be surprised if the reaction was that the feature just isn't worth the reengineering cost--that isn't political at all, simply practical cost analysis

[15:07:34.0000] <esprehn_>
dgorbik: I don't think antti and kling would want to rewrite the entire selector matching system just for webvtt to match logical non Node things

[15:08:10.0000] <esprehn_>
nor do I think that approach really makes sense anyway

[15:09:18.0000] <dgorbik>
esprehn_: Is there even a way to do this? I wonder based on what this selector matching system would match non Node objects

[15:09:21.0000] <zewt>
why can't they be a Node subclass (but one that isn't exposed as a child to scripts)?

[15:09:48.0000] <dgorbik>
esprehn_: you will have to have some kind of an interface for what can be matched and will end up with the same Element or HTMLElement

[15:10:01.0000] <esprehn_>
dgorbik: yes, just use an Element

[15:10:20.0000] <zewt>
<zewt> what detail is that, again? <-

[15:10:35.0000] <zewt>
(some issue related to style)

[15:12:30.0000] <zewt>
(if they're Element, then they don't have a style anyway--that's HTMLElement)

[15:12:56.0000] <Hixie>
using something like Node or Element is an ugly hack with horrible memory characteristics

[15:13:11.0000] <Hixie>
there's no need for parts of webvtt to have event listener machinery, for example

[15:13:47.0000] <zewt>
whether or not that has horrible memory characteristics seems like an implementation detail :P

[15:14:12.0000] <zewt>
(one which I know nothing about)

[15:14:44.0000] <Hixie>
isn't all of this an implementation detail?

[15:15:03.0000] <zewt>
sure

[15:15:09.0000] <zewt>
still an implementation detail

[15:17:48.0000] <dgorbik>
zewt: if we set the inline style for those webvtt elements, 'style' attribute appears and is accessible with css matching code like ::cue(v[style])

[15:17:57.0000] <zewt>
(if they want to deal with that eg. by introducing an internal base class of Node without event handling they can do that--it just doesn't seem like the issue here)

[15:17:58.0000] <dgorbik>
which is not required by specs

[15:18:00.0000] <esprehn_>
Hixie: can I apply transitions on these things?

[15:18:34.0000] <esprehn_>
or animations

[15:18:44.0000] <Hixie>
dgorbik: it's not "not required", it's "required not", as in, that would be a violation of the spec

[15:18:48.0000] <zewt>
dgorbik: if it's an Element, it has no style (that's introduced in HTMLElement), right?

[15:19:04.0000] <Hixie>
esprehn_: not currently, but we should in due course fix that and provide a way to do transitions 

[15:19:14.0000] <esprehn_>
dgorbik: element[style] has nothing to do with style, it has to do with an element that has an attribute named style

[15:19:21.0000] <Hixie>
esprehn_: the main problem is the transitions that are needed for webvtt are generally directional too

[15:19:24.0000] <esprehn_>
err zewt I meant

[15:19:25.0000] <Hixie>
esprehn_: not just temporal

[15:19:32.0000] <Hixie>
esprehn_: e.g. sweeping a colour change left to right

[15:19:42.0000] <zewt>
esprehn: you definitely wouldn't set an attribute named "style"

[15:20:11.0000] <dgorbik>
Hixie: do you suggest separating those classes the way so we have all that is needed by selector matching in the underlying class and have everything else above? I don't see yet how it's even possible to extract selector matching and make it unified

[15:20:13.0000] <esprehn_>
zewt: in the hacky way of implementing this feature as dgorbik was describing you would.

[15:20:26.0000] <zewt>
sounds like the wrong way, then :)

[15:20:30.0000] <esprehn_>
yes

[15:20:51.0000] <Hixie>
dgorbik: i'm not familiar with webkit's code enough to make intelligent recommendations at that level

[15:21:02.0000] <zewt>
it makes sense to me (on first glance, at least) to parse webvtt cues to a tree of Element subclasses (or maybe just Node), and then you'd have a renderer sitting at the top of that tree, rendering based on its children

[15:21:07.0000] <Hixie>
dgorbik: but in principle, selectors as a concept are agnostic to the kind of node being matched

[15:21:15.0000] <dgorbik>
Hixie: but how would you do this if you were creating you own 'ideal' browser?

[15:22:03.0000] <Hixie>
dgorbik: have a generic selector-matching machinery that could be passed trees where hte nodes in the tree implemented an interface that exposed things that the selector matcher would use

[15:22:14.0000] <zewt>
it *might* make sense to parse to a tree of HTMLElements, and let the general-purpose DOM renderer do the rendering, but you'd need to avoid things like setting attributes

[15:22:42.0000] <Hixie>
dgorbik: like "what is your name", and "what is your parent", and "what are your attributes", and "what is your language", and "are you being hovered over", etc

[15:22:52.0000] <zewt>
(my impression from the things that WebVTT does is that trying to render it like that would be tricky at best, though...)

[15:23:29.0000] <Hixie>
dgorbik: or alternatively, make the selector matching system be templated so that you could instantiate one for DOM Nodes, one for WebVTT trees, etc

[15:23:38.0000] <dgorbik>
Hixie: it would be much easier if we used Objective C instead of C++ I guess :-)

[15:23:44.0000] <zewt>
i also don't know enough (anything at all) about webkit to help, though

[15:26:50.0000] <zewt>
can you define an internal style property on HTMLElement, which is fed into the style determination (like the style attribute) but is internal and not reflected by any attribute, so you can set it without it being visible to selectors?

[15:27:17.0000] <dgorbik>
zewt: too much hackery in general code

[15:27:21.0000] <zewt>
why?

[15:27:27.0000] <dgorbik>
people don't like to see webvtt checks in the core

[15:27:39.0000] <zewt>
it's just another style string, fed into the style immediately after @style

[15:27:42.0000] <dgorbik>
or any other webvtt-specific code

[15:27:58.0000] <zewt>
if you can't change anything at all then give up, your restrictions make doing anything useful impossible :)

[15:28:45.0000] <zewt>
if you want specs to be written so they can be implemented without changing any code, you're going to find that a tough sell

[15:29:02.0000] <esprehn_>
nah, there's a way to to do this

[15:29:05.0000] <dgorbik>
zewt: I think it makes the code harder to mainain also. In the approach esprehn_ suggested (by setting the RenderStyle directly, so we are doing it at another level, not markup but rendering level) makes it much easier to keep all those specific things in a couple of files.

[15:29:07.0000] <esprehn_>
I already discussed it

[15:29:52.0000] <zewt>
dgorbik: that's exactly the same thing as i'm saying--set the style at a level that doesn't require setting attributes

[15:30:32.0000] <esprehn_>
zewt: yeah, we just make the "style resolver" wise about WebVTT

[15:30:37.0000] <dgorbik>
zewt: I though you suggested setting those at the level of the renderstyle but then have a check so that the style property doesn't appear when we access it

[15:31:31.0000] <zewt>
no, set the style independently from @style, so the attribute never exists in the first place

[15:32:11.0000] <dgorbik>
zewt: that's what I am going to do

[15:40:30.0000] <esprehn_>
zewt: it's a bit more complex since what you describe is the wrong specificity. ::cue(b) { font-weight: normal; } should override the default of bold.

[15:41:08.0000] <esprehn_>
but if what you did was the equivalent of style="font-weight: bold" for all webvtt <b> elements you'd override the author sheet

[15:41:15.0000] <zewt>
esprehn: so apply the internal style before applying stylesheets (which itself is before @style)

[15:41:21.0000] <esprehn_>
exactly :)

[15:41:38.0000] <zewt>
"b a" isn't more complex than "a b" :)

[15:43:34.0000] <zewt>
for simple things like <b>, couldn't you just have ::cue(b) { font-weight: bold; } in the UA stylesheet

[15:45:21.0000] <dgorbik>
esprehn_: I still have to find out why b {color: red} didnt work for internal nodes when it was define in author rules.

[15:45:28.0000] <zewt>
(dynamic things like the results of the webvtt positioning algorithm being where you'd need direct control)

[15:45:35.0000] <dgorbik>
esprehn_: I will debug this case

[15:46:13.0000] <dgorbik>
probably UA rules are matched against ALL nodes on the page including those that are inside of the shadow dom.

[15:46:24.0000] <dgorbik>
but all the others don't

[15:51:04.0000] <esprehn_>
dgorbik: yes, that's how shadows work

[15:52:12.0000] <esprehn_>
dgorbik: at least I'm pretty sure user agent shadows don't let author sheets effect them

[15:54:15.0000] <abucur_>
hi! there's a paragraph in the web-apps spec stating that not all the events are dispatched using the task queue and that other are dispatched synchronously during other tasks. does anyone have an example for that?


2013-01-26
[16:02:55.0000] <zewt>
search for "fire a simple event" and "queue a task to fire a simple event"

[16:44:27.0000] <dgorbik>
esprehn_: how do you think is it best to do this in two steps? First ‚Äî fix this regression and set the correct namespaces. And second ‚Äî apply the right styles, this is not covered by tests yet.

[16:45:05.0000] <esprehn_>
dgorbik: yes, fix the bad casts first

[17:10:56.0000] <Hixie>
can anyone work out if i'm missing something in https://www.w3.org/Bugs/Public/show_bug.cgi?id=19590 ? (table parsing, the claim is there's a potential infinite loop)

[17:29:17.0000] <Hixie>
am i misreading the dom spec, or is it fine to have a range whose start is at a document node?

[17:57:34.0000] <erlehmann>
i have done an art.

[17:57:50.0000] <erlehmann>
anyone interested in media fragments beside me? :3

[23:11:22.0000] <MikeSmith>
I'm starting to wonder if Anne has some moral objection to writing introductory material for his specs.

[23:12:32.0000] <MikeSmith>
speaking of which I wonder if "Fundamentally, the DOM is one giant memory leak." would make a good addition to the introductory section for the DOM spec

[23:12:39.0000] <MikeSmith>
http://lists.w3.org/Archives/Public/www-dom/2013JanMar/0067.html

[23:21:29.0000] <MikeSmith>
when somebody files something like https://www.w3.org/Bugs/Public/show_bug.cgi?id=18766 but doesn't actually add themselves to the Cc field, I wonder how they know when Hixie or somebody else has commented

[00:54:12.0000] <annevk>
MikeSmith: I'm just bad at writing introductory material. I think it's because its correctness is hard to measure

[00:54:52.0000] <MikeSmith>
annevk: yeah

[00:54:53.0000] <annevk>
MikeSmith: With algorithms you can tell when there's nothing left to remove. With introductory text and examples there's no simple rules to use.

[00:56:00.0000] <MikeSmith>
it's hard to hit the sweet spot on it too, I think -- between being too brief and being way too long

[00:56:26.0000] <MikeSmith>
I think in some W3C specs they're really is just way too much introductory info

[00:57:07.0000] <MikeSmith>
especially given that the specs are supposed to be primarily for implementors who don't need that much info to understand the context

[01:45:11.0000] <Dashiva>
Is whatwg.org/issues still in use?

[03:36:27.0000] <Ms2ger>
Poor Hixie... Fixes a bug, gets two in return

[07:59:55.0000] <MikeSmith>
Ms2ger: yeah "poor Hixie" is for sure a phrase we don't hear people say nearly often enough

[08:03:09.0000] <MikeSmith>
the Rolling Stones made a song about this

[09:24:23.0000] <jgraham>
MikeSmith: Curiously enough (I can't get no) satisfaction is the number one complaint about Hixie

[09:28:03.0000] <Hixie>
MikeSmith: in my experience, the answer is "they don't know when i commented"

[09:28:17.0000] <Hixie>
Dashiva: it's in use in that that feedback is the feedback i have to deal with

[09:28:28.0000] <Hixie>
Dashiva: i don't look at the votes much because people haven't ever really used it

[09:31:08.0000] <Dashiva>
kk

[09:32:01.0000] <GPHemsley>
/me wonders when the whatwgmemes will appear.

[09:32:22.0000] <GPHemsley>
(Or does this fall under w3cmemes?)

[09:32:23.0000] <Hixie>
pretty sure w3cmemes is covering whatwg already :-P

[09:37:54.0000] <gsnedders>
See the latest post.

[09:41:51.0000] <jgraham>
To be fair there are probably far more people in W3C land that give a shit about infoset compatibility

[09:44:47.0000] <jgraham>
(but http://w3cmemes.tumblr.com/post/34765672844/meanwhile-in-the-treehouse is clearly about the WHATWG, for example)

[09:45:34.0000] <Hixie>
the one about bz was about feedback he sent to the whatwg list, too

[09:45:47.0000] <Hixie>
though of course it applies to feedback he sends everywhere :-)

[09:46:06.0000] <jgraham>
Yeah, but it could equally have applied to anything he said ever, more or less

[09:46:16.0000] <jgraham>
So it wasn't such a nice example :)

[09:46:23.0000] <manu1>
Has anybody else done a technical review of the EME spec yet? It's pretty bad - http://manu.sporny.org/2013/drm-in-html5/

[09:46:29.0000] <Hixie>
jgraham: agreed :-)

[09:46:33.0000] <manu1>
anybody else know of the use case they're trying to address?

[09:46:57.0000] <manu1>
I assumed it was "reduce content piracy"... but maybe they're after something else?

[09:47:30.0000] <Ms2ger>
What makes you think they have use cases to address?

[09:47:37.0000] <Hixie>
the use case is "browser vendor who also has content distribution deals who wants to convince paranoid deluded content producer to provide them with content"

[09:47:59.0000] <Hixie>
(drm won't reduce piracy (it'll actually increase it))

[09:48:13.0000] <manu1>
Ms2ger: I just... you know, assumed that they're trying to solve problem.

[09:48:35.0000] <Ms2ger>
/me sniggers

[09:49:00.0000] <jgraham>
Mmm DRM *and* plugins? What's not to like?

[09:49:23.0000] <manu1>
Hixie: yeah, that's the assumption I made while reviewing the spec... the goals section doesn't actually say that, though... so wondered if anyone on this list actually took part in the design of the spec (or had talks about the design of the spec) with the editors.

[09:49:57.0000] <Hixie>
i had high-level talks with some of the people involved, both in public and in private

[09:50:07.0000] <manu1>
jgraham: hey, the spec isn't about DRM! It's about plugins, that may or may not implement DRM. So, theoretically, you could use the spec without having any sort of DRM! >_>

[09:50:15.0000] <Hixie>
but since i disagree with the work at a moral level, i really didn't get very far into the technicalities

[09:51:14.0000] <manu1>
Hixie: The technical argument is pretty straight-forward if the goal was just presented clearly in the spec. They also went to great lengths to reinvent TLS in the spec, that was pretty awesome.

[09:51:33.0000] <manu1>
oh, and clear-text decryption keys... that was also pretty awesome.

[09:51:35.0000] <Hixie>
the technical argument is indeed pretty straight-forward. "what you want to do is mathematically impossible."

[09:51:44.0000] <manu1>
/me nods.

[09:51:53.0000] <Hixie>
but what they want to do isn't mathematically impossible

[09:52:09.0000] <manu1>
which is deliver a placebo to the content providers.

[09:52:12.0000] <Hixie>
right

[09:52:33.0000] <Hixie>
except unlike most placebos this one has pretty major negative second-hand side-effects

[09:52:34.0000] <manu1>
okay, just making sure that is what was going on and that I wasn't missing some vital piece of information... thx, Hixie.

[09:52:50.0000] <jgraham>
I'm pretty sure that the clearkey thing is smoke and mirrors

[09:52:54.0000] <Hixie>
i'm probably not the most objective person to verify this for you, fwiw :-)

[09:53:17.0000] <manu1>
My favorite part of the spec is this image: https://dvcs.w3.org/hg/html-media/raw-file/tip/encrypted-media/stack_overview.png

[09:53:19.0000] <jgraham>
Anyway, I haven't looked at this hard so I probably shouldn't comment :)

[09:53:46.0000] <manu1>
I did look at it in detail this morning - it's definitely smoke and mirrors.

[09:54:12.0000] <Ms2ger>
It's good to see the HTML WG spends its time on useful things for once.

[09:54:14.0000] <manu1>
(I say this having implemented a variety of DRM and PKI systems)

[09:55:11.0000] <espadrine>
that proposal is pretty old. Why wasn't there an outcry earlier?

[09:55:32.0000] <manu1>
probably because it wasn't being proposed as a First Public Working Draft, espadrine

[09:55:34.0000] <Hixie>
espadrine: there was huge outcry when they proposed it

[09:55:44.0000] <Hixie>
espadrine: it even made it as far as the tech press

[09:55:46.0000] <manu1>
/me missed that fireworks show.

[09:56:15.0000] <Hixie>
e.g. http://news.cnet.com/8301-30685_3-57384129-264/standards-leader-blasts-html5-video-copy-protection/

[09:57:20.0000] <espadrine>
so now that it's a public working draft, they're going to do what, pressure browsers into implementing it?

[09:57:36.0000] <Hixie>
it's mostly being pushed by browser vendors, as i understand it

[09:58:41.0000] <espadrine>
well, I haven't heard of any interest in implementing it. Is there any work on that front?

[09:59:12.0000] <Hixie>
espadrine: companies don't tend to spend engineering effort on writing specs they're not implementing

[09:59:50.0000] <Hixie>
(but they rarely comment on future products or services for legal and PR reasons, so it's normal for that not to be obvious)

[10:00:50.0000] <espadrine>
yes, but they wrote Dart's spec, and they weren't very successful in adding Dart (or the primitives to put a non-JS VM in) to WebKit

[10:01:27.0000] <Hixie>
you asked about "interest in implementing it", not about "success in deploying it"

[10:03:22.0000] <espadrine>
poor implementers.

[10:07:34.0000] <Hixie>
bbl

[10:12:08.0000] <Philip`>
/me was testing some stuff on Android involving playing a video on a TV through the HDMI connection, and it refused to display the video because of HDCP, but then he found he could just remove the video buffer's protected-content flag in a user-space library and apparently defeat the whole protection system

[10:19:05.0000] <SimonSapin>
Philip`: did you really think there was more than this to DRM?

[10:19:32.0000] <SimonSapin>
I mean, if the user can read it, well, the user can read it

[10:19:54.0000] <zewt>
Philip`: i think a lot of these "copy protection" mechanisms are actually to trigger legal things, rather than to actually prevent copying

[10:20:18.0000] <zewt>
eg. making it so flipping a flag in a userspace library is "bypassing copy protection" so they can sue you for that

[10:25:37.0000] <Philip`>
SimonSapin: In this case it's not hugely trivial for the user to read the video since I think the decoded data never actually passes through the CPU (the graphics processor does all the decryption and decoding and composition, and will refuse to composite into an untrusted buffer when the appropriate flags are set)

[10:25:54.0000] <Philip`>
but it's not hugely hard either

[10:26:00.0000] <SimonSapin>
I see

[10:28:47.0000] <Philip`>
but I guess there's no real motivation to make it any harder than is necessary for legal reasons

[12:21:29.0000] <zewt>
bleh jquery

[12:21:55.0000] <Ms2ger>
And a heartfelt bleh from me too

[12:21:58.0000] <zewt>
what kind of sadistic API has a function named width() that's both a getter and a setter

[12:22:23.0000] <zewt>
wasted ten minutes trying to figure out where this code is setting an element's width, and it's a width() call that i was skimming over because the name looks like a getter

[12:23:16.0000] <gsnedders>
zewt: Now imagine a tool that programmatically reduces JS to minimize TCs, and tries removing arguments.

[12:23:48.0000] <zewt>
javascript minifiers need to die in a fire

[12:30:32.0000] <zewt>
why does everything with a syntax vaguely like cvs have to slightly change the shorthand for "commit"

[12:30:55.0000] <zewt>
during cvs i got in the habit of "cvs co"; svn broke that, so i had to relearn "svn ci"; and now git breaks *that*

[12:32:21.0000] <SimonSapin>
zewt: hum, git aliases?

[13:25:39.0000] <jgraham>
SimonSapin: git aliases are frightening. As far as I can tell they just encorage you to do things that don't work when you are logged into other machines and prevent you helping other people who need guidance

[13:26:11.0000] <jgraham>
For cases like this it's just better to learn the tool warts and all

[13:26:46.0000] <jgraham>
zewt: gsnedders wasn't talking about a JS minifier exactly, but a testcase minifier

[13:27:08.0000] <SimonSapin>
jgraham: Still, I‚Äôll keep my "graph = log --oneline --date-order --graph --all --decorate" alias

[13:27:58.0000] <jgraham>
(which does minify js of course but in a manner, and with an intent, that is quite different from most minifiers)

[13:29:08.0000] <jgraham>
SimonSapin: I guess for essentially synthesising new commands it's more defensible. But still annoying that you can't rely on it

[13:29:56.0000] <jgraham>
Although, as we learnt this week, the solution to that is to keep all your dotfiles, including your private keys, in github so they are accessible from anywhere

[13:30:09.0000] <jgraham>
And to anyone

[13:31:50.0000] <SimonSapin>
crypto reduces all problems to key management problems, and GitHub solves the latter

[13:40:02.0000] <espadrine>
jgraham: I followed your advice, I feel a lot safer already.

[13:45:00.0000] <Ms2ger>
SimonSapin, you mean, "hg gl"?

[13:45:13.0000] <SimonSapin>
maybe

[14:49:26.0000] <GPHemsley>
Oh, here's another one: how do you pronounce "json"?

[14:58:02.0000] <gsnedders>
GPHemsley: "Jay-son" is how I've always heard it said.

[14:58:54.0000] <GPHemsley>
Does "son" rhyme with "bun" or "con"?

[14:59:17.0000] <gsnedders>
en son/sun

[15:04:29.0000] <jgraham>
It is canonically pronounced like the name, Jason

[15:06:01.0000] <jgraham>
Despite this, Kylie is *still* refusing requests to duet with Crockford

[15:28:15.0000] <zewt>
sometimes i swear browser implementors are just out to annoy authors for fun

[15:28:33.0000] <zewt>
it seems like webkit (or at least mobile safari) honors tabindex=-1 ... unless all inputs are tabindex=-1, in which case it ignores it entirely

[15:29:40.0000] <zewt>
so i guess instead i get to play games with @disabled


2013-01-27
[16:59:23.0000] <Tashs>
Hey

[18:29:09.0000] <erlehmann>
dear hixie, your new blog software does not give me a feed.

[18:29:19.0000] <erlehmann>
this is very unfortunate.

[18:29:51.0000] <erlehmann>
do you have a link to your posts from your new blog at https://plus.google.com/107429617152575897589/posts ?

[18:31:51.0000] <erlehmann>
like an RSS or ATOM feed?

[18:33:05.0000] <erlehmann>
also, which game is this? https://plus.google.com/107429617152575897589/posts/CeBLKZH54kR

[18:40:04.0000] <erlehmann>
oh, found it http://en.wikipedia.org/wiki/Twilight_Imperium

[22:43:55.0000] <JonathanNeal>
it looks like Settlers.

[22:43:59.0000] <JonathanNeal>
space edition

[23:52:11.0000] <SimonSapin>
Hi. Could someone test this in IE? data:text/html;charset=utf8,<html%20class=%C2%80><style>.%C2%80{background:green

[02:20:32.0000] <kamathln>
Hi, is it possible to create a database that is visible only to https: URLs?

[02:30:07.0000] <kamathln>
if not, would it be a good idea?

[03:19:37.0000] <gsnedders>
kamathln_: What sort of database? IndexedDB?

[03:20:55.0000] <gsnedders>
kamathln_: They're per-origin (i.e., scheme, host, port tuples), so they're only https or only http.

[04:05:19.0000] <MikeSmith>
should the CSS validator not report errors for webkit-search-decoration and webkit-search-cancel-button and moz-focus-inner ?

[04:05:31.0000] <MikeSmith>
https://twitter.com/necolas/status/295370972326940674

[04:22:19.0000] <MikeSmith>
filed a bug https://www.w3.org/Bugs/Public/show_bug.cgi?id=20787

[07:23:13.0000] <SimonSapin>
CSS syntax is used in stylesheets, style attributes, selector APIs, media attributes, CSS.supports(), ‚Ä¶ did I miss any?


2013-01-28
[01:13:29.0000] <jgraham>
/me only just noticed that all the technical debate about EME is going to public-html-admin. Which is pretty funny. And shows that I'm a bit slow to notice things.

[01:29:03.0000] <sedovsek>
Hey. Is there a chance to achieve the same effect (hw accel.) in Firefox that we do with -webkit-transform: translateZ(0);?

[02:34:50.0000] <hsivonen>
aargh. I forgot the DOM interface for <main>. good catch by smaug

[02:43:21.0000] <MikeSmith>
hsivonen: your tests didn't catch that?

[02:43:54.0000] <hsivonen>
MikeSmith: I'm bad at writing them, apparently. this is why there should be a different QA person writing the tests

[04:31:44.0000] <jgraham>
hsivonen: I sort of imagine that the way that EPUB will handle compat-breaking changes is to offer multiple variations for download during transitional periods. Presumably the half-life of readers isn't going to be super-long so that seems sort of viable. I might be wrong though.

[04:37:53.0000] <MikeSmith>
I think what's fundamentally broken with EPUB to begin with is that I'm required to download and install something called a "Reading System" just to be able to read a book that's essentially just HTML and CSS

[04:38:47.0000] <Ms2ger>
But at least it's polyglot

[04:38:59.0000] <MikeSmith>
or actually I need to download and install multiple such Reading System applications, one for each vendor I buy books from

[04:39:24.0000] <Ms2ger>
/me reads dead tree books instead

[04:40:02.0000] <MikeSmith>
the size of my apartment I have no room for any more dead-tree books than the ones I already have

[04:44:35.0000] <MikeSmith>
the things I've learned from Henri have just left me thinking that there's little hope of fixing the problems with ebooks

[04:45:51.0000] <MikeSmith>
the current user experience around ebook reading is appallingly bad and I seems really unlikely to change much any time soon

[05:42:34.0000] <hsivonen>
jgraham: So you expect users to know what version of EPUB the embedded software on their device supports?

[05:42:58.0000] <hsivonen>
jgraham: it would be easier to rebrand the incompatible new EPUB to something other than EPUB then

[05:43:41.0000] <hsivonen>
jgraham: you know, unlike you and me, normal people don't load a bunch of test cases to figure out what the thing they have bought *actually* is capable of doing

[05:44:41.0000] <hsivonen>
(as you might infer from my emails, I have loaded some test cases)

[05:46:25.0000] <hsivonen>
regarding http://lists.w3.org/Archives/Public/www-style/2013Jan/0517.html : Have I misunderstood how Vary and ETag work in HTTP caching?

[05:47:36.0000] <hsivonen>
MikeSmith: note that there are devices with Reading Systems on them and you don‚Äôt get to download and install new ones

[05:47:58.0000] <hsivonen>
MikeSmith: except as part of an updated system image your vendor might be kind enough to give you

[05:48:16.0000] <MikeSmith>
hsivonen: yeah I was just going to say that I guess I hadn't thought about those devices enough

[05:48:39.0000] <MikeSmith>
and people hang on to those for a long time

[05:48:57.0000] <MikeSmith>
I still see a lot of older Kindles around

[05:49:03.0000] <hsivonen>
MikeSmith: I got one for Christmas. It has 2 EPUB engines. The Adobe one does not support EPUB3.

[05:49:37.0000] <hsivonen>
MikeSmith: I haven't yet proceeded far enough in my testing to be able to tell if I can load my own content into the other engine to diagnose if it supports EPUB3

[05:50:01.0000] <MikeSmith>
 why2 engines as atll?

[05:50:09.0000] <MikeSmith>
*at all?

[05:50:22.0000] <hsivonen>
MikeSmith: two different DRM systems

[05:50:29.0000] <MikeSmith>
ah yeah

[05:51:02.0000] <hsivonen>
MikeSmith: also, I think Kobo wants to be able to do stuff in their engine without being limited by what Adobe is willing to sell them

[05:51:22.0000] <hsivonen>
but AFAICT, there's no way for the user to push a standard EPUB file onto the Kobo engine

[05:51:39.0000] <MikeSmith>
wonderful

[05:51:44.0000] <hsivonen>
I suspect there is a way to push an non-standard EPUB-like file onto it, but I haven't tested that hypothesis

[05:52:24.0000] <hsivonen>
I'd prefer Kobo to catch up with the features of the Adobe engine before implementing some more

[05:53:04.0000] <hsivonen>
it really irks me that the Kobo engine doesn't do ligatures or English hyphenation

[05:53:29.0000] <hsivonen>
my main complaints about the Adobe engine are that it doesn't support OpenType kerning or Finnish hyphenation

[05:53:41.0000] <hsivonen>
also, it's too shy to hyphenate English

[05:53:58.0000] <hsivonen>
that is, the hyphenation threshold does not match my preferences

[05:54:23.0000] <MikeSmith>
better than not doing hyphenation at all I guess

[05:54:26.0000] <MikeSmith>
I wonder why the Kobo engine doesn't do ligatures or English hyphenation

[05:54:53.0000] <MikeSmith>
are both of the engines on your device based on browser engines?

[05:55:18.0000] <hsivonen>
I believe the Kobo thing is based on WebKit. Probably QtWebKit.

[05:55:30.0000] <hsivonen>
I'm pretty sure the Adobe thing is an independent impl of CSS

[05:55:36.0000] <MikeSmith>
ok

[05:55:57.0000] <hsivonen>
the Adobe folks at TPAC couldn't confirm :-(

[05:56:23.0000] <MikeSmith>
btw my perspective on this is biased I guess by the fact that I mostly just read books on my Android smartphone

[05:57:41.0000] <MikeSmith>
I used to read at lot on my iPad2 but I quit because it was a chore to carry around and actually was causing my pain in my hands because of the way you have to hold it to read

[05:59:15.0000] <MikeSmith>
whereas I have at least one smartphone with me all the time and holding it and using it are a lot more natural

[06:03:39.0000] <hsivonen>
10" tablet for reading books: bad

[06:04:11.0000] <hsivonen>
smaller, lighter, less reflective screen, optional front lighting FTW

[06:04:55.0000] <hsivonen>
I should get around to writing a review of this thing, but I probably won't

[06:05:13.0000] <hsivonen>
blog posts get long. too long to be finished

[06:05:19.0000] <MikeSmith>
heh

[06:05:20.0000] <MikeSmith>
yep

[06:05:47.0000] <hsivonen>
I have it written in my head, but the bandwidth of braindumping is bad

[06:07:04.0000] <MikeSmith>
kinda like coding

[06:08:00.0000] <hsivonen>
totally. I also have an EPUB creation tool designed in my head

[06:10:40.0000] <MikeSmith>
enjoy that ability at least

[06:11:14.0000] <MikeSmith>
I think as you get older it gets harder to design stuff in your head

[06:23:00.0000] <Ms2ger>
hsivonen, does it do polyglot?

[06:23:02.0000] <Ms2ger>
/me runs

[06:24:53.0000] <hsivonen>
Ms2ger: HTML to XHTML conversion without bothering with any polyglot guarantees

[06:30:04.0000] <hsivonen>
so. regarding the www-style thread. I reread the relevant parts of RFC 2616 and I still think I've understood HTTP caching correctly. What I am missing or am I misunderstanding what Ilya says?

[06:31:35.0000] <hsivonen>
Hixie: are you paying attention to the www-style thread? It's relevant to srcset in the sense that it proposes a competing mechanism.

[06:31:45.0000] <Ms2ger>
I have happily ignored the thread, but maybe the IETF is missing the point

[06:39:20.0000] <zewt>
*insert ietf joke here*

[06:39:56.0000] <zewt>
(also, isn't HTTP caching an odd topic for www-style? heh)

[07:04:01.0000] <kamathln>
Hi, I was going through the IndexedDB specification, I tried to find what the intended behaviour is if "onversionchange" of the database object is set to null ? From firefox's behaviour, it seems it will just act like it returned success, but the specification itself does not say anything file:///home/kamathln/Documents/Indexed%20Database%20API.html#widl-IDBDatabase-onversionchange

[07:04:05.0000] <kamathln>
is there anything I missed?

[07:06:50.0000] <kamathln>
Its my first time reading specifications like this, so I wish someone could handhold me for the same

[07:07:53.0000] <hsivonen>
zewt: well, the HTTP-based proposal that is claimed to be cache-friendly (which I don't buy) is trying to work around the way Media Queries behave

[07:08:13.0000] <hsivonen>
zewt: so if MQs behaved a bit differently, perhaps we could avoid this HTTP-based workaround

[07:09:44.0000] <hsivonen>
zewt: not only am I skeptical about Client-Hints' cache-friendliness in general, but I'm particularly skeptical relative to MQ-based solutions if MQs are adjusted a little

[07:10:50.0000] <hsivonen>
cool. now there can be a showdown between the old TAG and the 4 horsemen about how much the TAG should care about closed systems

[07:49:33.0000] <Velmont>
Does anyone with a popular site (but not as popular as Google)

[07:49:34.0000] <Velmont>
actually want to rescale images on the fly (as opposed to letting

[07:49:34.0000] <Velmont>
Opera do it for them)?

[07:49:47.0000] <Velmont>
hsivonen: lol, - didn't have your own browser to use as an example? :P

[07:57:04.0000] <hsivonen>
Velmont: Firefox doesn‚Äôt have Turbo/Mini server-side image optimization

[08:01:38.0000] <Velmont>
hsivonen: Ah... It was meant like that. :-)

[09:01:40.0000] <dglazkov>
good morning, Whatwg!

[09:09:22.0000] <yroc>
dglazkov: or good afternoon or evening depending on where you are!

[09:18:29.0000] <zewt>
hsivonen: not familiar with the problem, but is it of the "fetching resources over and over" variety?

[09:19:42.0000] <zewt>
firefox is weird with subpixel widths

[09:20:38.0000] <zewt>
http://zewt.org/~glenn/firefox-wrapping.html chrome always sizes the box to the size of the contents; firefox makes it a pixel smaller (when the fractional part of the width is less than .5), causing the spans to be wrapped

[09:22:20.0000] <zewt>
i guess the span wrapping happens when the width would be greater than the truncated width, instead of the rounded width that it'll actually use

[09:22:49.0000] <zewt>
or ... no, but something like that

[09:29:27.0000] <zewt>
looks like it's one of those bugs that someone went "yeah let's just leave it" 5 years ago and left the whole world to get headaches because of their horrible bugs

[09:29:36.0000] <zewt>
thanks firefox

[09:30:21.0000] <Ms2ger>
Yw

[09:33:07.0000] <zewt>
awesome, someone putting "bug" in scare quotes, as if it isn't obviously a bug

[09:46:30.0000] <kamathln>
hi folks, please reply to my query above even if I seem offline, I internet is flaky and I keep checking the logs to know if anyone has replied anyway

[09:49:09.0000] <MikeSmith>
kamathln: you might consider sending that question to the public-webapps‚äôwo mailing list which is the main place where the IndexedDB spec is discussed

[09:51:02.0000] <kamathln>
MikeSmith: thnaks

[09:53:30.0000] <yroc>
\quit

[09:56:48.0000] <MikeSmith>
Am I the only one around here who thinks it's a bad idea to hardcode path names into build files? https://bugs.webkit.org/show_bug.cgi?id=108089

[10:02:37.0000] <hsivonen>
trololol: http://lists.w3.org/Archives/Public/public-html/2013Jan/0202.html

[10:04:06.0000] <Ms2ger>
/me wonders who got the idea there was a torch that needed carrying

[10:05:04.0000] <MikeSmith>
hsivonen: think about how much different things would be if similar to that Jack guy he was offering a $10 bounty for somebody to implement polyglot support in the validator

[10:25:52.0000] <jgraham>
hsivonen: I was sort of imagining that a backwards-incompatible change in EPUB would be handled by device detection in whatever marketplace people are using to get their books, or by listing popular devices that consume each format on Project Gutenburg

[10:26:27.0000] <jgraham>
Possibly that would still be a terrible UX, but not more terrible than the fact that EPUB doesn't work on kindles at all

[10:27:29.0000] <gsnedders>
From a consumer POV, I wonder whether it'd be better just to call it something else.

[10:27:50.0000] <Ms2ger>
Do consumers actually know "epub"?

[10:28:19.0000] <gsnedders>
(I expect backwards incompatible changes would happen the way they do elsewhere: very, very slowly)

[10:28:21.0000] <TabAtkins>
Depends on what services they buy from.

[10:28:27.0000] <TabAtkins>
If from Amazon or B&N, likely not.

[10:28:38.0000] <TabAtkins>
Smaller sellers often advertise and offer ePubs directly.

[10:28:54.0000] <gsnedders>
Google Play explicitly has "EPUB" and "PDF" downloads for eReaders.

[11:00:02.0000] <Hixie>
hsivonen: i will look out for it

[11:22:44.0000] <Hixie>
hsivonen: what subject?

[11:24:34.0000] <hsivonen>
Hixie: http://lists.w3.org/Archives/Public/www-style/2013Jan/0434.html

[11:29:55.0000] <Hixie>
i don't understand, how does this affect srcset?

[11:30:05.0000] <Hixie>
srcset already doesn't download pictures that aren't relevant

[11:34:00.0000] <Hixie>
hsivonen: on an unrelated note, do you know what they're referring to in https://www.w3.org/Bugs/Public/show_bug.cgi?id=19590 ? i can't work out how you'd get an infinite loop

[11:38:12.0000] <SimonSapin>
TabAtkins: I don‚Äôt understand the part about "url() tokenization rules when writing variables"

[11:51:41.0000] <TabAtkins>
It should probably be valid to do things like "var-special-js-thing: url("example.com" more-stuff-here);", if it's meant to be interpreted by JS.

[11:51:54.0000] <TabAtkins>
But that's a bad-url token.

[11:52:13.0000] <TabAtkins>
Hm, though, I don't keep any details of what the token is, though.

[11:52:18.0000] <TabAtkins>
So nevermind, I guess.

[11:56:27.0000] <SimonSapin>
TabAtkins: is a serializer supposed to round-trip bad-url?

[11:56:58.0000] <TabAtkins>
SimonSapin: Given that it'll drop the declaration or block containing it in every other circumstance, obviously not.

[11:58:31.0000] <SimonSapin>
TabAtkins: I‚Äôve had requests to preserve invalid declarations such as `*width: 100px` in tinycss for a minifier

[11:59:07.0000] <TabAtkins>
Ah yeah, that's possible.  If you just skip the grammar-checking step, it wont' drop anything.

[11:59:33.0000] <TabAtkins>
But still, bad-url tokens don't have contents (neither do bad-strings), so they won't roundtrip - you can't serialize them as anything.

[12:00:21.0000] <SimonSapin>
btw, when you say a declaration is "grammatically valid", is that for a given property?

[12:00:36.0000] <SimonSapin>
is `color: 4px` grammatically valid?

[12:01:25.0000] <TabAtkins>
Depends on what level we're talking about.  Some grammar violations are caught by the parser, like "*width:100px".  Most are caught by the grammar-checking step, which is property-specific.

[12:01:43.0000] <SimonSapin>
"If the current declaration     is grammatically valid, append it to the value of the current rule."

[12:01:45.0000] <TabAtkins>
(There's a line in the spec when you append a valid declaration about this, and another for when you pop a rule."

[12:01:49.0000] <SimonSapin>
that‚Äôs a property-specific check, right?

[12:01:52.0000] <TabAtkins>
Yes.

[12:02:28.0000] <SimonSapin>
I skip that in tinycss and leave it to the caller to filter (or not)

[12:02:52.0000] <TabAtkins>
Yes, that's acceptable.  Officially, the full "CSS parser" is the combination of tinycss and the caller's filter.

[12:03:52.0000] <SimonSapin>
but `*width: 100px` is not even a declaration so preserving it for minifiers is not obvious

[12:04:14.0000] <SimonSapin>
it might even be a non-goal in rust-cssparser if I want servo to use it eventually

[12:05:03.0000] <TabAtkins>
It's a non-goal in the current Syntax spec, as that declaration would be thrown away early as a syntax error (switching over to next-declaration error state).

[12:05:13.0000] <SimonSapin>
yes

[12:06:35.0000] <SimonSapin>
the spec probably doesn‚Äôt need to care about this, but a tokenizer also needs to track source line numbers if good error reporting is desired

[12:07:06.0000] <TabAtkins>
(Which is now present in my cssparser, thanks to a nice patch.)

[12:07:14.0000] <TabAtkins>
(By espadrine, iirc.)

[12:07:57.0000] <SimonSapin>
nice

[12:10:01.0000] <SimonSapin>
doesn‚Äôt reconsume() need to check for newline too?

[12:11:55.0000] <Mike_2>
hi everybody

[12:17:49.0000] <Ms2ger>
http://lists.w3.org/Archives/Public/public-webapps/2013JanMar/0165.html

[12:17:54.0000] <espadrine>
SimonSapin: I thought about it, but I believe the first consume() already incremented the line number, didn't it?

[12:18:29.0000] <SimonSapin>
espadrine: yes, but won‚Äôt it increment again for the same newline on the next call?

[12:18:58.0000] <SimonSapin>
let‚Äôs write a test case :)

[12:19:07.0000] <espadrine>
:) good habit

[12:19:36.0000] <SimonSapin>
I see none has touched https://github.com/tabatkins/css-parser/blob/master/tests.js after me :p

[12:20:19.0000] <SimonSapin>
no I‚Äôm exaggerating, Tab has a commit

[12:27:15.0000] <SimonSapin>
my test framework sucks

[12:27:41.0000] <SimonSapin>
it can‚Äôt represent token‚Äôs line/column numbers

[12:29:24.0000] <SimonSapin>
espadrine: how do you extract/use these location information from a parsed stylesheet?

[12:29:35.0000] <espadrine>
SimonSapin: I just found a case where you do need to reset the line number

[12:29:39.0000] <espadrine>
but it's a parse error

[12:29:52.0000] <espadrine>
foo {bar:"foo\nbar"}

[12:30:07.0000] <espadrine>
(the \n being an actual newline character)

[12:30:40.0000] <SimonSapin>
espadrine: but escaped newline are valid in quoted strings

[12:31:36.0000] <espadrine>
those don't trigger reconsume()

[12:31:48.0000] <espadrine>
it needs to be a parser error

[12:31:56.0000] <espadrine>
that's probably why I didn't think to add that case

[12:35:01.0000] <espadrine>
SimonSapin: I just went through all uses of reconsume() in the tokenizer, that's the only possibility where the line number can go wrong

[12:35:21.0000] <SimonSapin>
ok

[12:35:46.0000] <SimonSapin>
I gave up on the test case. I‚Äôd basically need another test framework

[12:36:30.0000] <espadrine>
too bad

[15:16:46.0000] <a-ja>
Hixie: very low-priority ping re: rendering

[15:28:45.0000] <Hixie>
a-ja: pong

[15:28:57.0000] <a-ja>
a nit

[15:29:52.0000] <a-ja>
the implementation status popup thing next to sections-and-headings has wrong links in it

[15:30:21.0000] <Hixie>
woah

[15:30:30.0000] <Hixie>
oh, i see

[15:30:36.0000] <Hixie>
it's just that sections-and-headings doesn't have one

[15:30:52.0000] <Hixie>
if you want one for sections-and-headings, just alt-double-click there

[15:30:55.0000] <Hixie>
and it'll create one

[15:31:01.0000] <a-ja>
?  i see links to following section

[15:32:45.0000] <Hixie>
how do you mean?

[15:34:03.0000] <a-ja>
shows link to #quotes and the edit link point to quotes, too

[15:35:16.0000] <Hixie>
yes, #quotes is the previous section

[15:35:55.0000] <Hixie>
there's always a box at the top-left, it is the box for the most recent section to have one

[15:36:11.0000] <a-ja>
yep...preview, not following.

[15:36:13.0000] <a-ja>
k

[15:38:42.0000] <a-ja>
h1 ~ h2 thru h5 looks better now.....though awfully damned verbose when coding for -webkit-any, -moz-any, and :matches :/

[15:41:55.0000] <Hixie>
a-ja: yeah

[15:54:26.0000] <Hixie>
can anyone work out why http://www.hixie.ch/tests/adhoc/dom/workers/shared/001.html fails in webkit?

[15:54:34.0000] <Hixie>
works in opera...

[15:57:41.0000] <othermaciej>
if the Web Inspector is to be trusted 001.js never gets loaded

[15:59:06.0000] <Hixie>
gets loaded for me (safari and chrome) according to web inspector

[15:59:18.0000] <Hixie>
but i can't work out how to debug a worker

[15:59:56.0000] <Hixie>
oh maybe event.source isn't implemented in webkit...


2013-01-29
[16:00:03.0000] <Hixie>
(safari gives me a more useful error message than chrome)

[16:00:41.0000] <othermaciej>
do you know which step of the test fails?

[16:01:33.0000] <Hixie>
let me get back to you in a minute

[16:02:39.0000] <Hixie>
ok yeah

[16:02:44.0000] <Hixie>
it's just that .source isn't yet supported

[16:02:47.0000] <Hixie>
using .ports[0] works fine

[16:05:55.0000] <Hixie>
ok now 003 is failing in opera

[16:07:42.0000] <Hixie>
bummer

[16:08:19.0000] <Hixie>
so webkit acts like the normative parts of the spec say, and opera acts like the tutorial parts of the spec say

[16:09:59.0000] <Hixie>
anyone other than opera or webkit planning on implementing SharedWorker?

[16:11:30.0000] <yroc>
Hixie: can you handle two conversations at once?

[16:11:31.0000] <a-ja>
https://bugzilla.mozilla.org/show_bug.cgi?id=643325

[16:18:35.0000] <Hixie>
yroc: sure

[16:18:38.0000] <Hixie>
a-ja: thanks

[16:18:51.0000] <Hixie>
smaug____: yt?

[16:19:35.0000] <Hixie>
anyone with IE10 around? what does it say in http://www.hixie.ch/tests/adhoc/dom/workers/shared/000.html ?

[16:20:08.0000] <smaug____>
Hixie: pong

[16:20:27.0000] <smaug____>
ah, SharedWorkers

[16:20:36.0000] <smaug____>
I've tried to get bent to implement them

[16:20:40.0000] <smaug____>
let me ask

[16:20:47.0000] <Hixie>
smaug____: do you have an opinion on https://www.w3.org/Bugs/Public/show_bug.cgi?id=19491 ? the question is, should it be possible to connect to a sharedworker when you don't know the URL it was started with

[16:20:54.0000] <Hixie>
smaug____: (but you do know the name it was started with)

[16:21:01.0000] <yroc>
K. In light of recent discussion about <article>, what is your rationale for marking up blog comments with <article>?

[16:21:21.0000] <Hixie>
smaug____: right now the spec says both, opera follows the "urls don't have to match" thing the tutorial suggests, and webkit follows the "urls have to match" thing which the normative algorithm says

[16:21:35.0000] <yroc>
For one thing, blog comments don't seem to meet the def'n of "self-contained" (as article is defined in the spec)

[16:23:46.0000] <Hixie>
yroc: http://lists.w3.org/Archives/Public/public-whatwg-archive/2012Jan/0226.html discusses this

[16:23:59.0000] <Hixie>
yroc: let me know if that's not enough

[16:24:21.0000] <yroc>
Great, I'll have a look. Thanks.

[16:30:06.0000] <Hixie>
smaug____: let me know if you or bent have a different opinion, but fwiw, for now, i'm fixing the non-normative text to match the normative text

[16:30:11.0000] <Hixie>
smaug____: so url has to match

[16:30:34.0000] <smaug____>
Hixie: add a comment

[16:30:50.0000] <smaug____>
Hixie: and I agree with you

[16:31:14.0000] <smaug____>
s/add/I added/

[16:31:25.0000] <Hixie>
awesome, thanks

[16:31:29.0000] <Hixie>
smaug____++

[16:32:09.0000] <smaug____>
(obviously too late to type anything)

[16:33:09.0000] <Hixie>
wait... i totally misread the spec

[16:33:23.0000] <smaug____>
your spec ;)

[16:34:07.0000] <Hixie>
oh i see, i didn't misread, it's contradictory within the normative section

[16:34:16.0000] <Hixie>
step 5 contradicts step 7.1

[16:34:21.0000] <Hixie>
bummer

[16:34:59.0000] <Hixie>
but that's ok

[16:35:19.0000] <Hixie>
the name allows you to have multiple instances of the same url

[16:35:20.0000] <Hixie>
ok

[16:35:37.0000] <Hixie>
don't mind me, ignored everything i said since i incremented you

[16:41:04.0000] <a-ja>
Hixie: ie10 says FAIL

[16:41:13.0000] <Hixie>
thanks

[16:49:03.0000] <yroc>
Hixie: "An article is just a

[16:49:04.0000] <yroc>
comment that has been hoisted to a more prominent position.

[16:49:04.0000] <yroc>
" I'm not exactly convinced of this.

[16:49:34.0000] <yroc>
I mean, I'm thinking a comment is a *reaction* to another piece of writing.

[16:50:02.0000] <zewt>
sounds like it's trying to reduce the whole internet to a set of comments of varying levels of complexity, heh

[16:51:00.0000] <yroc>
I'm thinking that "stand-alone" means you can read it and it makes sense in and of itself, without having to link it to anything else.

[16:51:10.0000] <a-ja>
yroc: never seen a comments feed?

[16:51:55.0000] <TabAtkins>
Never seen reddit?

[16:53:00.0000] <yroc>
Hixie had an example of reddit in his reference, so I have to say, yes :-)

[16:53:43.0000] <TabAtkins>
One blog I read, Less Wrong, uses a reskinned reddit codebase, and there the comments frequently *are* reparented into full articles.

[16:53:52.0000] <Hixie>
pretty much all writing is a reaction to another piece of writing

[16:54:02.0000] <Hixie>
whether it's a comment or not doesn't much affect that

[16:54:09.0000] <TabAtkins>
(Often lightly edited before they hit the homepage to give them more structure, but still, just viewing the comment thread rooted on them is very much like a blog post.)

[16:54:18.0000] <yroc>
But, I'm just talking in general. A comment like "LOL" or an example in the spec: "Yeah! Especially when talking about your lobbyist friends!"

[16:54:29.0000] <TabAtkins>
Have you seen blogs?

[16:54:52.0000] <Hixie>
yroc: there are articles whose contents are pretty short too... twitter is an extreme example of that, as are many tumblrs

[16:54:58.0000] <TabAtkins>
Those are basically the typical microblog. ^_^

[16:55:16.0000] <yroc>
You can't decipher these without reference to the "main" article.

[16:55:53.0000] <Hixie>
the same applies to many things that nobody disagrees are articles

[16:55:58.0000] <TabAtkins>
Ooh, Tumblr's a good example - a lot of posting is just a quote of someone else's post with a tiny amount of commentary.  "LOL" is a common one.  Does the mere fact that it's *presented* like a top-level post, despite being for all intents and purposes a comment, change things?

[16:56:26.0000] <TabAtkins>
Or should tumblr people have to distinguish between "real" posts and reblogs, with the latter not including an <article> at all?

[16:56:39.0000] <TabAtkins>
(And of course, some reblogs are indeed full posts on their own.)

[16:57:04.0000] <Hixie>
imho the distinction between "Article" and "Comment" is a distinction from a bygone era, one in which newspapers were written by Journalists and the lowly citizenry had no outlet

[16:57:34.0000] <Hixie>
nowadays there's nothing to distinguish an article from a comment, and often the comments have higher "value"

[16:58:42.0000] <yroc>
OK, *but* what does "self-contained" in the spec mean? (I apologize if you think you already answered that)

[16:59:11.0000] <Hixie>
it means that it was written as one thing

[16:59:34.0000] <Hixie>
for example, if you just take the words "example, if" from this sentence, they're not self-contained, while the whole thing is.

[16:59:49.0000] <Hixie>
(if you have a better way to put it, please let me know)

[17:00:17.0000] <Hixie>
"complete" might be a better word

[17:01:01.0000] <TabAtkins>
It's just meant to distinguish it from <section>, which often contains things that aren't self-contained, and only make sense in conjunction with the whole article.

[17:01:24.0000] <Hixie>
yeah

[17:02:22.0000] <TabAtkins>
(While a comment might not make sense except in relation to the article it's responding to, the connection is of a qualitatively different and weaker kind than that of a section to its article.

[17:02:26.0000] <TabAtkins>
)

[17:02:56.0000] <Hixie>
i've changed the spec from "self-contained" to "complete, or self-contained,"

[17:04:24.0000] <yroc>
Can you give a simple example of an incomplete <section> of content?

[17:04:57.0000] <Hixie>
sure, any of the sections in the spec

[17:05:43.0000] <yroc>
Are you saying that <section> is by definition incomplete?

[17:05:59.0000] <yroc>
An incomplete unit of content, that is.

[17:07:48.0000] <yroc>
Like, <h1>Granny Smith</h1><p>These juicy, green apples make a great filling for

[17:07:48.0000] <yroc>
  apple pies.</p>

[17:07:59.0000] <yroc>
This is incomplete content?

[17:08:38.0000] <Hixie>
well, the examples in the spec for <section> and <article> are mostly a bit too contrived to really comment on, because real sections are pages long

[17:08:44.0000] <Hixie>
i meant hte actual spec sections

[17:08:46.0000] <Hixie>
not the example ones

[17:08:54.0000] <yroc>
Ah.

[17:08:55.0000] <Hixie>
like, section 11.2.3

[17:09:09.0000] <Hixie>
doesn't make sense without 11.2.2 etc

[17:09:32.0000] <Hixie>
but mostly the real answer is "it depends on author intent"

[17:10:07.0000] <Hixie>
one could imagine a book with a "Granny Smith" chapter that just said "These juicy, green apples make a great filling for apple pies.", and then it'd be a section because there'd be lots of other chapters on (maybe) other kinds of apples

[17:11:06.0000] <Hixie>
but then one could imagine a tweet or reddit comment or tumblr post or newspaper classified ad that just said "Granny Smith. These juicy, green apples make a great filling for apple pies.", and then it'd be an article because that was the whole thing.

[17:11:50.0000] <yroc>
OK, what you're saying now is making sense to me...

[17:12:48.0000] <yroc>
Comments aren't "part" of what they're responding to.

[17:13:10.0000] <yroc>
This is what you mean by "complete"

[17:13:17.0000] <Hixie>
right

[17:14:49.0000] <a-ja>
so, <section>s are incomplete til they're in W3C rec, and modified every few years; then they become <article>s?

[17:15:04.0000] <a-ja>
/me ducks

[17:15:29.0000] <Hixie>
basically.

[17:18:26.0000] <yroc>
But, one thing that bothers me now. The spec says that the composition could *in principle* be independently distributable or reusable. Doesn't that make a book chapter (and *lots* of other potential <section>s) in fact <article>s (by definition)?

[17:19:13.0000] <yroc>
i.e., Even if they're part of a whole, in principle they don't have to be.

[17:19:15.0000] <Hixie>
if you were to write a chapter in such a way that you could publish it independently, then yeah, it could be an <article>

[17:19:44.0000] <Hixie>
but then you could also write an article in such a way that you could put it in a sidebar of another article, and then it's also an <aside>. :-)

[17:20:51.0000] <GPHemsley>
/me wants to comment on this discussion but doesn't feel like reading the scrollback to determine the context.

[17:21:07.0000] <yroc>
Right, but the terminology "in principle" would, it seems to me, bias the use of <article> over <section>

[17:21:40.0000] <Hixie>
yroc: yeah... i dunno what better terminology to use

[17:21:45.0000] <Hixie>
GPHemsley: man, that's never stopped anyone else

[17:22:05.0000] <GPHemsley>
I try not to contribute to the problems, only the solutions ;)

[17:22:14.0000] <Hixie>
:-P

[17:23:07.0000] <GPHemsley>
I don't see what the big deal is, though. I would think <section> would be pretty clear.

[17:23:13.0000] <Hixie>
you'd think

[17:23:44.0000] <GPHemsley>
Perhaps the real problem is that people still are not separating semantics from presentation.

[17:24:11.0000] <GPHemsley>
A section has a header. It would show up in a table of contents. Fairly straightforward.

[17:24:44.0000] <Hixie>
GPHemsley: so does an article

[17:24:49.0000] <yroc>
GPHemsley: Do you even know what this discussion is about?

[17:24:52.0000] <Hixie>
and not all sections have headers

[17:24:54.0000] <GPHemsley>
yroc: Nope.

[17:25:09.0000] <Hixie>
not all docs with sections have tables of contents

[17:25:18.0000] <yroc>
GPH: thought not.

[17:25:23.0000] <GPHemsley>
Hixie: *theoretical* tables of contents ;)

[17:25:43.0000] <GPHemsley>
yroc: I thought I made that pretty clear.

[17:26:12.0000] <yroc>
GPH: I guess I don't know you well enough yet ;-)

[17:26:48.0000] <Hixie>
GPHemsley: so when do you use article? every use of article can have a theoretical table of contents too :-)

[17:26:58.0000] <GPHemsley>
Hixie: I do get the sense that <article> is a bit of a misnomer.

[17:27:31.0000] <Hixie>
trying to fit the semantics of any element into a one word short name is a challenge :-)

[17:27:49.0000] <GPHemsley>
Hixie: Also, that was kinda the point I was making. <article> has a table of contents; <section> adds an item to that table of contents.

[17:29:09.0000] <a-ja>
uh oh....i just coded a TOC as a section

[17:29:17.0000] <Hixie>
a magazine might have several <article>s and a table of contents listing them

[17:29:23.0000] <Hixie>
in fact it's pretty common in printed magazines

[17:29:32.0000] <a-ja>
with role=directory, of course :/

[17:29:41.0000] <GPHemsley>
Hixie: Yeah, it all depends on your field of view, macro/micro.

[17:30:05.0000] <GPHemsley>
a-ja: That's not necessarily outside of my definition.

[17:30:44.0000] <a-ja>
<section> adds an item to that table of contents.  <== causes a loop

[17:30:49.0000] <a-ja>
heh

[17:30:55.0000] <yroc>
Hixie: How about something like, "self-contained or complete composition...that might potentially be independently distributed or reused...

[17:31:23.0000] <GPHemsley>
a-ja: If you have pages before the TOC, it's completely reasonable to include the TOC in the TOC. ;)

[17:31:44.0000] <GPHemsley>
a-ja: Note that the TOC itself only has the header, not the entire contents.

[17:32:28.0000] <GPHemsley>
It basically comes down to what you peg as an article. Everything is relative to that. And you can have articles within articles.

[17:32:44.0000] <GPHemsley>
(Though it might be weird to have articles within sections.)

[17:33:08.0000] <Hixie>
yroc: "might potentially" and "in principle" have the same problem, i think

[17:33:14.0000] <Hixie>
right, gotta go

[17:33:27.0000] <Hixie>
feel free to mail the list if you come up with a magic solution to all our problems while i'm afk :-)

[17:33:41.0000] <GPHemsley>
/me still doesn't even know what the problems are. :P

[17:34:12.0000] <a-ja>
GPHemsley: not at all....have seen plenty of comment <articles> in a comments <section>

[17:34:36.0000] <GPHemsley>
a-ja: Ah, I suppose that would be the exception.

[17:35:04.0000] <GPHemsley>
a-ja: Perhaps like when you combine multiple books into a single book, but one of those books has short stories in it.

[17:35:19.0000] <a-ja>
argh!

[17:35:41.0000] <GPHemsley>
although actually, that might be an article, not a section

[17:35:41.0000] <GPHemsley>
hmm

[17:36:42.0000] <a-ja>
/me goes back to scratching head over whether breadcrumbs and/or toc belong within in a <main>

[17:37:10.0000] <GPHemsley>
a-ja: Wouldn't they go in <header>?

[17:37:49.0000] <GPHemsley>
a-ja: Well, breadcrumbs would, at least. TOC is probably more debatable.

[17:38:43.0000] <yroc>
Oh, I saw <main> now in W3C nightly... Is <main> coming to the spec?

[17:49:06.0000] <GPHemsley>
Hmm... my definitions and explanations of <article> and <section> appear to match up exactly with what the spec says

[17:49:18.0000] <GPHemsley>
that was, in some ways, a complete coincidence

[17:49:27.0000] <GPHemsley>
but a good one, I think

[17:51:14.0000] <GPHemsley>
(not just for my own personal sake)

[17:51:14.0000] <GPHemsley>
Hixie: FYI, the <section> section uses "programme" instead of "program"

[17:52:10.0000] <GPHemsley>
Actually, that whole example is somewhat weird. Why does the description of the ceremony use <p> instead of <ol>?

[18:03:50.0000] <GPHemsley>
When was the last time the W3C Validator's tree/outline generator worked?

[18:07:40.0000] <a-ja>
GPHemsley: been a while, ime

[18:08:05.0000] <GPHemsley>
That was one of my favorite features, even back before anyone cared.

[18:08:23.0000] <a-ja>
semantic data extractor

[18:10:00.0000] <a-ja>
unless you use html5-style titling

[18:13:51.0000] <GPHemsley>
What was that site that's like pastebin, but with live preview?

[18:14:02.0000] <moo-_->
GPHemsley: jsfiddle.net

[18:14:31.0000] <GPHemsley>
moo-_-: Doesn't look like the one I had in mind, but it'll do. Thanks.

[18:14:42.0000] <moo-_->
np

[18:16:44.0000] <GPHemsley>
moo-_-: Err, actually, it seems to only allow portions of a page, and it doesn't use the browser default CSS. Is there another one?

[18:17:27.0000] <GPHemsley>
ah, jsbin.com

[18:17:34.0000] <GPHemsley>
I should've known

[19:43:47.0000] <Hixie>
GPHemsley: spec is en-us-x-hixie, in which "program" is a computer program and "programme" is all the other programmes. :-P

[19:43:58.0000] <Hixie>
GPHemsley: btw, i apparently gave that rod guy an account when he asked for one last march

[19:44:07.0000] <GPHemsley>
/me shrugs x2

[19:44:29.0000] <Hixie>
(totally forgot until just now where i happened to search for his name in gmail)

[19:44:47.0000] <Hixie>
he had [SEC-UNCLASSIFIED] in the subject line then, too...

[19:46:53.0000] <GPHemsley>
Australian government archives

[19:47:05.0000] <GPHemsley>
serious stuff :)

[19:48:17.0000] <a-ja1>
maybe

[19:48:38.0000] <a-ja1>
/me worked for a US govt archives once

[19:48:57.0000] <zewt>
us.zip

[19:50:01.0000] <a-ja>
us army records center

[19:50:20.0000] <a-ja>
b4 email was commonplace

[21:59:01.0000] <MikeSmith>
to borrow a movie-industry phrase I learned from watching Argo, I guess we could say that Web Intents is "in turnaround" now

[21:59:06.0000] <MikeSmith>
http://lists.w3.org/Archives/Public/public-web-intents/2013Jan/0015.html

[22:48:51.0000] <hsivonen>
manu-db: I don't think the goal of EME is to reduce piracy. I think the goal is to make Hollywood exects comfortable so that they let Netflix deliver content with EME-bootstrapped DRM instead of Silverlight.

[23:26:47.0000] <Hixie>
it better not be to reduce piracy, since it'll do precisely zilch to curb piracy

[01:14:06.0000] <Stevef>
a-ja: re main breadcrumbs no as they are site navigation which is usually found across pages, if the TOC is the main content of the page yes, if you think this needs to be made clearer in the spec feel to file a bug https://www.w3.org/Bugs/Public/enter_bug.cgi?product=HTML%20WG&component=HTML5%20spec&priority=P3

[01:39:29.0000] <hsivonen>
Hixie: dunno about the alleged infinite loop

[01:39:54.0000] <hsivonen>
Hixie: the www-style thread turns to image optimization concerns later

[01:50:52.0000] <Stevef>
hixie: seems like this could also be an article,or any part of a conversation or dialogue

[01:50:57.0000] <Stevef>
or this

[02:44:15.0000] <a-ja>
Stevef: the graduation programme example certainly has a toc (i.e. intra-page nav) within <main>

[02:44:59.0000] <Stevef>
a-ja: yes, thats intra page

[02:54:24.0000] <a-ja>
Stevef: i suggest being explicit as possible, so <main> doesn't get abused into being a substitute for a center-column wrapper div

[02:58:14.0000] <Stevef>
a-ja: i have tried to be explicit any feedback on how to be more specific appreciated :-)

[03:01:08.0000] <a-ja>
well, "The main content section of a document includes content that is unique to that document and excludes content that is repeated across a set of documents such as site navigation links, copyright information, site logos and banners and search forms (unless the document or applications main function is that of a search form)." could have breadcrumbs specifically added to the exclusion list

[03:07:56.0000] <a-ja>
and the graduation pgm could have explicit reference to the nav before main being to other pages, vs. the nav within main being exclusively intra-page nav

[03:08:58.0000] <a-ja>
iow, be explicit in surrounding text about what's implicit in the example

[03:19:27.0000] <Stevef>
a-ja: thanks!

[03:21:23.0000] <a-ja>
Stevef, i take it the lack of header nav /ul is intentional

[03:21:44.0000] <a-ja>
and the H2 in caps

[03:21:52.0000] <Stevef>
yes

[03:22:30.0000] <a-ja>
and use of ul vs ol ?

[03:23:06.0000] <Stevef>
a-ja:not intentional will review

[03:26:45.0000] <a-ja>
Stevef: unrelated directly to <main> doc....perhaps.  should intra-page toc have role=directory on the ul or ol ? (seem to recall that from WAI docs)

[03:29:21.0000] <kamathln>
sicking: Hi, are the race conditions in IndexedDb (even handler assignment) still around? Where can I follow the discussions on IndexedDb ?

[03:30:11.0000] <SimonSapin>
hsivonen: re MQ vs client hints: what does "art direction" mean?

[03:34:30.0000] <hsivonen>
SimonSapin: that you change image shape and size so that a smaller image shows only an area of interest chosen by a human to be the most important part of the image

[03:34:59.0000] <SimonSapin>
I see, thanks

[03:35:08.0000] <Stevef>
a-ja: sounds reasonable but i don't think it makes any difference practically as its mapped to a list role in APis

[03:40:38.0000] <kamathln>
sicking: got it : https://dvcs.w3.org/hg/IndexedDB/raw-file/tip/IndexedDB%20Disposition%20of%20Comments.html , but is that the last call/

[03:42:07.0000] <a-ja>
Stevef: may follow up on that in WAI doc (WAI1?), in light of no <dir> element anymore

[04:16:46.0000] <annevk>
How do I reference a pull request in a commit?

[04:21:10.0000] <kamathln>
Hi, is there any bot I can use to "tell" someone who has left the channel?

[04:22:25.0000] <hsivonen>
kamathln: no. but you try to say stuff so that it gets logged and hope the person you wants to reach reads logs

[04:22:45.0000] <hsivonen>
(public logs on the Web that is. I don't mean logs of their own absent IRC client)

[04:23:19.0000] <kamathln>
I can't "hope", I want to ensure ;)

[04:23:47.0000] <hsivonen>
kamathln: there's no way to ensure on this channel

[04:24:33.0000] <kamathln>
hsivonen: thanks anyways .. almost everyone has an email, I will dig for and use that ;)

[04:25:11.0000] <hsivonen>
kamathln: the probability of people responding to logs may be higher than the probability they respond to email

[04:25:19.0000] <hsivonen>
(not joking)

[04:25:44.0000] <kamathln>
hsivonen: hmm.. you are right ..

[04:26:46.0000] <kamathln>
sicking: I made a terrible sin (by netizen standards) by not googling thoroughly before asking a qn.. saying sorry for that :)

[04:26:57.0000] <kamathln>
hsivonen: ^^ :P

[04:28:34.0000] <smaug____>
there seems to be MemoServ

[04:28:48.0000] <kamathln>
smaug____: thanks! lemme try

[04:30:39.0000] <kamathln>
smaug____: return SUCCESS;

[04:30:43.0000] <kamathln>
smaug____: thanks :)

[04:31:42.0000] <smaug____>
lunch time

[04:32:08.0000] <smaug____>
kamathln: and it worked :)

[04:32:16.0000] <smaug____>
bbl

[04:46:12.0000] <annevk>
hsivonen: btw, https://www.w3.org/Bugs/Public/show_bug.cgi?id=20127 (<template> and shadow DOM affecting DOM algorithms)

[04:47:37.0000] <hsivonen>
annevk: yay edge cases

[04:47:56.0000] <annevk>
I'm kinda surprised nobody thought of that thus far

[04:48:16.0000] <hsivonen>
so it looks like I always forget to land htmlparser patches after landing the corresponding Gecko patches

[04:49:16.0000] <MikeSmith>
hsivonen: oh

[04:49:29.0000] <MikeSmith>
you forgot this time too?

[04:49:56.0000] <hsivonen>
MikeSmith: I'm in the process of landing a bunch of stuff

[04:50:00.0000] <hsivonen>
MikeSmith: sorry about the delay

[04:50:14.0000] <hsivonen>
so I guess *this* time I did not forget

[05:15:17.0000] <hsivonen>
MikeSmith: I landed the pending htmlparser patches

[05:16:24.0000] <hsivonen>
MikeSmith: (and I have not forgotten about ambiguous ampersands. I need to discuss it some more with Hixie. maybe raise it in a WG again.)

[05:17:35.0000] <MikeSmith>
hsivonen: fwiw I personally have no strong opinions on that

[05:18:00.0000] <MikeSmith>
I wrote the patch in the interest of clearing out some validator bug reports :)

[05:18:44.0000] <MikeSmith>
because there are several open reports about that one

[05:21:35.0000] <MikeSmith>
I did try a bit to consider what would be the best validator behavior from the user perspective but I doesn't seem to me there's a real clear answer

[05:21:49.0000] <MikeSmith>
seems like a judgement-call case

[05:21:51.0000] <hsivonen>
hmm. is ambiguous ampersands on the band name list yet?

[05:21:53.0000] <hsivonen>
:-(

[05:21:57.0000] <MikeSmith>
heh

[05:22:02.0000] <MikeSmith>
if not it should be

[05:23:19.0000] <hsivonen>
it is now

[05:23:47.0000] <MikeSmith>
excellent

[05:24:15.0000] <MikeSmith>
Ambiguous Ampersand would be a fitting name for a character in a John Waters movie

[05:25:24.0000] <hsivonen>
so I copied the dir of eclipse itself, the workspace and ~/.eclipse to another computer and launched eclipse.

[05:25:38.0000] <hsivonen>
and it didn't open up in the same state as on the computer I copied from

[05:25:43.0000] <hsivonen>
what did I fail to copy?

[05:27:28.0000] <MikeSmith>
hsivonen: if it were on a Mac i'd say maybe there's something in ~/Library/Application Support/

[05:28:51.0000] <MikeSmith>
hmm no not there

[05:29:34.0000] <MikeSmith>
but on my Mac I do see things in ~/Documents/workspace/.metadata/.plugins/org.eclipse.core.*

[05:30:17.0000] <MikeSmith>
hmm yeah, e.g., ~/Documents/workspace/.metadata/.plugins/org.eclipse.core.resources/.projects/htmlparser/org.eclipse.jdt.core

[05:32:06.0000] <MikeSmith>
I guess on Mac you'd want to copy over all of ~/Documents/workspace

[05:32:41.0000] <MikeSmith>
no what the equivalent is on other OSes

[05:33:52.0000] <hsivonen>
thanks. problem solved: I forgot to make a symlink I had for the workspace and I was referring to the workspace via the symlink

[05:35:21.0000] <MikeSmith>
ah OK. oh and I see now you'd already said earlier above that you'd copied the workspace so nothing that I said was relevant anyway :)

[06:16:53.0000] <manu-db>
hsivonen: re: the purpose of EME - yes, that's my reading on why it exists as well. However, that's not stated in the spec and that's not a technical goal. I'm just trying to help them create a more robust technical goal for the spec.

[06:17:47.0000] <manu-db>
The EME spec spends a great deal of time weasel-wording its way around what it is actually doing.

[06:18:39.0000] <manu-db>
"We're not creating a DRM system, we're creating a protection system... ClearKey is not meant to be used in production, it's just for testing purposes... oh, and browsers are required to implement it, etc."

[06:21:19.0000] <manu-db>
The whole spec is just a tad too disingenuous for my taste... I'd rather the HTML Media WG publish a spec called WebDRM that requires the browser vendors to agree on a DRM plugin standard and how it works, than do what the EME spec does right now, which is establish most everything as out of scope and provide ClearKey (which provides no real protection for content, but requires browser...

[06:21:21.0000] <manu-db>
...manufacturers to implement it)

[06:22:27.0000] <manu-db>
at least that way Mozilla has a chance of not getting skewered with royalties for whatever CDM scheme becomes popular.

[08:09:20.0000] <Ms2ger>
MikeSmith, any news on w3c-test.org replication, btw?

[08:10:18.0000] <MikeSmith>
Ms2ger: no, sorry

[08:10:50.0000] <MikeSmith>
i will make time this week

[08:32:54.0000] <annevk>
Ms2ger: fyi: https://www.w3.org/Bugs/Public/show_bug.cgi?id=20127

[08:33:22.0000] <annevk>
Ms2ger: will prolly fix that soonish

[08:35:31.0000] <Ms2ger>
Great :)

[08:36:17.0000] <dglazkov>
good morning, Whatwg!

[08:40:13.0000] <annevk>
I've been wondering what I have done and regret in the context of the web platform. So far I have CORS header naming and overall complexity.

[08:41:08.0000] <annevk>
But then that's one of the few things I actually introduced to the web platform as lots of my work has been specifying old relics.

[09:30:37.0000] <jwalden>
/me supposes the things he regrets are stuff he tested before implementation and missed the issues that arose later in specification, but were argued too late to change

[09:31:26.0000] <jwalden>
like [0].indexOf(-0) being 0, or [NaN].indexOf(NaN) being -1 (assuming I remember both cases correctly enough)

[09:32:24.0000] <jwalden>
I still think we could change those, but we have some severely compat-crazy people in es-discuss at times :-\

[09:32:56.0000] <jwalden>
not to mention es-discuss politics

[09:33:00.0000] <jwalden>
"not to mention"

[09:33:22.0000] <annevk>
Can't you sneak it into Gecko?

[09:34:58.0000] <jwalden>
well, that would have been past the module owner, at one time, and brendan was one of the compat-crazy people IMO :-)

[09:35:12.0000] <jwalden>
and these days, if it ain't in a spec, roughly, we don't change

[09:35:30.0000] <jwalden>
or in a draft that pretends to slightly approach spec-ness

[09:36:13.0000] <jwalden>
probably my biggest grumble about many SpiderMonkey extensions is how under-thought out they are in terms of the actual semantics implemented

[09:36:38.0000] <jwalden>
too much hand-waviness, not enough actual algorithms and specific syntax addition descriptions and stuff

[09:36:41.0000] <annevk>
That does sound fairly political. I like to believe there's always room for experiments in HTML/DOM/CSS, but maybe that's not true either.

[09:37:26.0000] <jwalden>
yeah, I think we don't do enough experimentation, especially with a rapid-release thing that makes experimentation lower-cost

[09:38:00.0000] <jwalden>
pretty much any plausible change should be something we can ship in a nightly for a little bit to get basic, if incomplete, information about web compatibility

[09:38:41.0000] <jwalden>
although, it's surprising just how many things we think are negligible based on nightly/alpha/beta feedback, only to find them rather worse when they get in a release

[09:38:59.0000] <jwalden>
nightly/alpha/beta users don't cover the site gamut as well as one might expect

[09:39:31.0000] <jwalden>
given the number of such testers we have, I'd have thought simple law of large numbers and all

[09:41:21.0000] <annevk>
I guess there might be quite a few intranet deployments these days that will not test with nightlies.

[09:41:34.0000] <annevk>
I only have FirefoxNightly.app at the moment myself

[09:41:50.0000] <annevk>
Same for Chrome

[09:42:47.0000] <jwalden>
the issues with seeming-lesser import that I've noticed as being worse at release scale haven't been intranet things (although I don't doubt there are some I just haven't seen)

[09:43:43.0000] <annevk>
I remember hsivonen battling router software

[09:49:04.0000] <jsbell>
sicking: I was talking to the MSFT folks last week about the IndexedDB spec. Do you have any objection to eliminating the speclets/build step and just having one document?

[09:57:59.0000] <sicking>
jsbell: not at all!

[09:59:36.0000] <jsbell>
sicking: okay. we did an (offline) edit pass together for editorial nits (about 10 of the issues). I think the plan is that Eliot will get those in, then I'll tackle updating to the new ReSpec. Time permitting all around.

[10:06:24.0000] <sicking>
jsbell: awesome

[10:07:45.0000] <jsbell>
sicking: yeah. I was sitting with Israel and Eliot so gained some insights. :)

[10:50:16.0000] <MikeSmith>
Matthew Kaufman from MS/Skype right now filing a barrage of bugs against the WebRTC spec

[10:50:20.0000] <MikeSmith>
http://lists.w3.org/Archives/Public/public-webrtc/2013Jan/

[10:50:38.0000] <MikeSmith>
normally when you see an implementor do that, it's good sign

[10:51:11.0000] <MikeSmith>
sign that they're interested in implementing the spec but that there are some problems that need fixing

[10:51:57.0000] <MikeSmith>
I hope that's the case here

[10:52:09.0000] <Ms2ger>
Do you know if they're implementing from the spec rather than from Google's codedump?

[10:52:52.0000] <MikeSmith>
I don't know that they're implementing at all from anything at this point

[10:53:47.0000] <MikeSmith>
but they are not bad bugs

[10:54:08.0000] <MikeSmith>
a lot of them are just "XXX not specified"

[10:54:18.0000] <MikeSmith>
which is true

[10:54:54.0000] <MikeSmith>
I guess you really could not implement from the spec if all that stuff is not specified

[10:56:25.0000] <MikeSmith>
so it could be instead that the purpose of him raising the bugs is just to point out, this spec is not implementable in its current form because here's all this stuff it doesn'T even specify

[10:57:35.0000] <othermaciej>
MikeSmith: I‚Äôd guess Microsoft still wants to push for their CU-RTC thing instead

[10:58:19.0000] <MikeSmith>
othermaciej: from their public comments so far that would sure seem to be the case

[10:58:59.0000] <MikeSmith>
but the WebRTC WG pretty soundly rejected CU-RTC after quite a lot discussion about the details

[11:00:44.0000] <othermaciej>
I need to get some input from people at Apple who would actually understand the technical details

[11:01:09.0000] <othermaciej>
it kinda seemed to me like Microsoft‚Äôs criticism of relying on SDP might be valid, but I wasn‚Äôt able to evaluate for myself

[11:03:04.0000] <MikeSmith>
othermaciej: my understanding of the SDP choice is that the group made it with full knowledge that it introduced some other problems but that the benefits it brings to app developers are worth the tradeoff

[11:04:27.0000] <othermaciej>
MikeSmith: I‚Äôm also not able to evaluate whether those benefits are worth it

[11:04:39.0000] <MikeSmith>
yeah, not that I actually understand any of this stuff

[11:27:37.0000] <hober>
Hixie: how's it going re: https://www.w3.org/Bugs/Public/show_bug.cgi?id=20212#c11 ?

[11:28:58.0000] <Hixie>
haven't looked at it since that comment

[11:29:48.0000] <hober>
ok

[11:58:48.0000] <esprehn_>
TabAtkins: By default a background image should be inside the borders?

[11:59:47.0000] <esprehn_>
TabAtkins: specifically why is the radial gradient under the borders on http://jsfiddle.net/Shsxv/1/ ?

[12:01:10.0000] <Hixie>
by default the background goes to outside the borders

[12:01:16.0000] <Hixie>
the border is over the background

[12:01:23.0000] <Hixie>
unless background-origin is set to something else

[12:03:28.0000] <Hixie>
sorry, background-clip

[12:03:30.0000] <Hixie>
not -origin

[12:03:37.0000] <Hixie>
http://dev.w3.org/csswg/css3-background/#the-background-clip

[12:03:52.0000] <esprehn_>
 if I do background-image: url(cat.png); border: 100px solid red; the borders aren't over the cat though

[12:04:09.0000] <esprehn_>
the background color is under the borders, but the image is not

[12:04:47.0000] <esprehn_>
Hixie: what's notable is that a gradient is specified as a background-image, but behaves as a background-color

[12:06:03.0000] <Hixie>
esprehn_: set background-repeat:repeat and it'll go under the border

[12:06:09.0000] <Hixie>
oh wait

[12:06:13.0000] <Hixie>
if it's solid red you won't see it

[12:06:15.0000] <Hixie>
set it to dotted red

[12:06:39.0000] <esprehn_>
ah, so the cat is inside the border by default, and not repeated under the borders

[12:07:16.0000] <Hixie>
it should be repeated under the borders

[12:07:28.0000] <Hixie>
but it's positioned relative to the padding box

[12:08:48.0000] <Hixie>
http://software.hixie.ch/utilities/js/live-dom-viewer/saved/2075

[12:13:10.0000] <esprehn_>
Hixie: perfect, thanks

[13:11:32.0000] <esprehn_>
Hixie: more fundamentally no other language works like this

[13:11:42.0000] <esprehn_>
Hixie: new Socket() does not connect the socket in _any_ language that I'm aware of

[13:13:59.0000] <esprehn_>
Hixie: but the reasons are many, if your constructor is a verb your only extension point is the constructor

[13:14:57.0000] <esprehn_>
and the only error return is an exception

[13:16:16.0000] <esprehn_>
it's standard OO design

[13:17:30.0000] <esprehn_>
it's weird to be discussing this, it's a question of why is JS a special snowflake :)

[14:09:23.0000] <Hixie>
esprehn_: there are plenty of APIs where creating the object has side-effects

[14:09:34.0000] <Hixie>
esprehn_: e.g. IO::Socket::INET in perl opens the socket

[14:09:41.0000] <Hixie>
esprehn_: when you call the constructor

[14:11:41.0000] <Hixie>
esprehn_: Java's Socket API seems to do the same, when you call its constructor with an IP and port

[14:11:57.0000] <Hixie>
java.net.Socket, that is

[14:16:13.0000] <Hixie>
esprehn_: as far as i can tell, the common lisp equivalent has a function to which you pass the address and port and from which you receive a live connected socket

[14:16:55.0000] <Hixie>
in fact it'd be hard to see how a pure-functional system could do anything _but_ return a live connected object

[14:17:38.0000] <Hixie>
not that doing I/O in a pure-functional system is something i'd recommend for people who want to remain sane

[14:18:02.0000] <jgraham>
Well a *pure* functional system doesn't have IO by definition

[14:18:19.0000] <Hixie>
right

[14:18:46.0000] <jgraham>
(python's SMTP lib also connects in the constructor, to pick a random example)

[14:19:35.0000] <Hixie>
it's a pretty common pattern

[14:19:57.0000] <Hixie>
imho it's a sensible one, though it certainly doesn't fit perfectly with e.g. how C++ handled exceptions in constructors

[14:20:03.0000] <Hixie>
handles

[14:20:23.0000] <Hixie>
so there are certain languages where it's probably a bad pattern

[14:20:29.0000] <Hixie>
(not JS)

[14:31:08.0000] <esprehn_>
Hixie: heh, seems you're right

[14:31:20.0000] <esprehn_>
Hixie: but Java does provide a way to create a socket that's not connected

[14:31:39.0000] <esprehn_>
Hixie: there's no way for Gmail to have a single Notification instance for "New mail available" and just call show() on it

[14:31:42.0000] <esprehn_>
like <dialog>

[14:32:56.0000] <Hixie>
esprehn_: sure there is. Just create an object with a show() method that creates the notification.

[14:33:19.0000] <Hixie>
esprehn_: i mean, it won't be a native Notification object, but why would that matter

[14:36:14.0000] <esprehn_>
but people do reuse XHRs

[14:37:08.0000] <esprehn_>
I mean I'll concede that clearly other people disagree with me :)

[14:38:29.0000] <Hixie>
that people reuse XHRs is a source of lots of problems, and is IMHO a terrible mistake

[14:39:03.0000] <Hixie>
but in practice XHR's design stems from the fact that it used to be an ActiveX object, which is to say a COM object, and COM objects have a lot in common with C++ objects

[14:39:32.0000] <Hixie>
and using C++ design in JS isn't good practice IMHO :-)

[14:40:05.0000] <sicking>
yup

[14:47:52.0000] <esprehn_>
Hixie: perhaps, I do think you're overly optimistic about what happens inside the JS VMs

[14:48:35.0000] <esprehn_>
no one has predictive allocation, or has been working on it that I know of

[14:48:48.0000] <esprehn_>
or magical behind your back free()

[14:49:19.0000] <esprehn_>
I guess we'll catch up with lisp eventually

[14:52:11.0000] <Hixie>
the point is just to allow implementations to do that

[14:55:35.0000] <Hixie>
anyone think of a better term than "outlinee" for "the element for which an outline is being created"?

[15:00:44.0000] <Philip`>
"outline target"?

[15:01:27.0000] <Philip`>
(Terms that look like typos of other terms are probably not a fantastic idea)

[15:13:14.0000] <esprehn_>
Hixie: outlined element


2013-01-30
[16:54:55.0000] <TabAtkins>
Hixie or others: If task A is queued to Source A, and then task B is queued to Source B, we're guaranteed that A will pop before B, right?  That is, temporal ordering of tasks is preserved across task sources?

[16:58:50.0000] <TabAtkins>
This is implicit if a browser ignores the task sources and just puts everything in a big queue, and seems like it would be easy to rely on, as the precise task source an event is queued into feels like an implementation detail to an author, and so I presume it's actually required.

[17:11:13.0000] <zewt>
TabAtkins: afaik, the whole point of different task sources is that ordering is *not* preserved across them--ordering is only preserved within the same task source

[17:12:10.0000] <zewt>
(well, there's also some stuff that says "delete all tasks in task source xxx", i think)

[17:13:39.0000] <zewt>
well, task *queues*--not completely sure what the distinction is between task queues and task sources, off-hand

[17:23:10.0000] <TabAtkins>
zewt: Problem there is that a worker can be using a proxy canvas, call commit(), and then postMessage to the main thread, but have no guarantee that when the message arrives the new data will have been pushed to the main-thread canvas.

[17:25:14.0000] <esprehn_>
TabAtkins: could we expose an oncommit event on canvas?

[17:25:30.0000] <esprehn_>
seems like something you'd want

[17:25:45.0000] <TabAtkins>
Yes, sounds useful.

[17:29:22.0000] <zewt>
TabAtkins: well, it sounds equivalent to sending messages over two MessagePorts (each with their own task source) to the same place--the order is undefined

[17:30:23.0000] <zewt>
if the order of two message ports can't be defined, committing a canvas would seem to have the same basic problem

[17:30:54.0000] <TabAtkins>
In that case, there's a bit of a usability problem, and we need an event on the canvas like esprehn_ says.

[17:31:39.0000] <esprehn_>
I think the event is nice as well since you don't need adhoc postMessage

[17:31:55.0000] <esprehn_>
it would seem fairly common to want your background image processor to tell the UI thread it's done drawing

[17:34:46.0000] <esprehn_>
ex. your game engine is drawing in the worker

[18:40:45.0000] <Hixie>
TabAtkins: no, the whole point of task sources is that they identify tasks that are not ordered relative to eacho ther

[18:41:41.0000] <Hixie>
TabAtkins: (thus most things should use the DOM manipulation task source)

[18:45:36.0000] <TabAtkins>
Hixie: Kk, in that case see the discussion immediately above, where we probably need an "oncommit" event fired at the main-thread canvas.

[18:45:41.0000] <TabAtkins>
So you can coordinate.

[18:45:55.0000] <Hixie>
if you need to coordinate, just send the bitmap across instead of using the proxies

[18:46:08.0000] <Hixie>
(it's no less performant)

[18:46:28.0000] <Hixie>
(in fact it's probably essentially the same code in the backend)

[18:46:48.0000] <TabAtkins>
You mean as an ImageBitmap?

[18:46:55.0000] <Hixie>
yeah

[18:49:01.0000] <TabAtkins>
I'll check and see if that's acceptable, or if there are hidden impl things that make it less performant.

[18:50:32.0000] <Hixie>
should be almost identical, but if it's not please do let me know!

[19:05:59.0000] <esprehn_>
Hixie: the event would still be nice :)

[19:14:40.0000] <Hixie>
esprehn_: when would the event fire? 60 times a second shortly after the bitmap was updated?

[19:15:30.0000] <esprehn_>
Hixie: is it really specced to swap buffers 60 times a second? I thought there was an explicit commit() from the worker

[19:15:49.0000] <Hixie>
i'm assuming the commit() will be called at the end of the requestAnimationFrame() callback

[19:16:01.0000] <esprehn_>
inside the worker?

[19:16:28.0000] <Hixie>
yeah

[19:17:30.0000] <esprehn_>
then yes, it'd fire that many times a second

[19:17:40.0000] <esprehn_>
just like if you did a postMessage() back at the page inside rAf

[19:18:15.0000] <Hixie>
why would that be useful?

[19:18:34.0000] <Hixie>
i don't really understand the use case here

[19:18:41.0000] <Hixie>
(not saying there isn't one -- i don't disagree, just don't understand

[19:18:42.0000] <Hixie>
)

[19:18:56.0000] <esprehn_>
Hixie: because I want to setup things inside the <canvas>, for example putting DOM nodes down inside since they can receive focus and events, but are not drawn

[19:19:20.0000] <esprehn_>
Hixie: in my game engine the drawing/physics are happening in the worker, but I don't want the focusable things in the canvas tree to appear until the user can actually see them

[19:19:41.0000] <Hixie>
ah, then an event that fires sometime after the bitmap is synced is no good

[19:19:56.0000] <Hixie>
you'd want either a synchronous event, or to do the painting yourself

[19:20:14.0000] <TabAtkins>
Yeah, and with that scenario, "pass the ImageBitmap in your postMessage" is the right answer.

[19:20:53.0000] <esprehn_>
And then do drawImage(bitmap) and hope the implementation is smart about it?

[19:20:54.0000] <Hixie>
we could have a synchronous event, but it would preclude implementations doing the painting without going via the main thread, which i don't think is a good idea

[19:22:38.0000] <MikeSmith>
heycam: nice slides

[19:22:45.0000] <MikeSmith>
http://mcc.id.au/2013/lca-webidl/

[19:22:58.0000] <esprehn_>
Hixie: if the worker is not committing in every rAf, how does the page know when it's safe to call toDataURL() and not get a blank visual?

[19:23:08.0000] <heycam>
MikeSmith, thanks; Chris Heilmann is responsible for the nice styling

[19:23:25.0000] <TabAtkins>
esprehn_: The *page* (main thread) never has a blank visual, once a single frame has come in.

[19:23:28.0000] <Hixie>
esprehn_: you mean, how do you know when at least one commit has been done?

[19:23:39.0000] <esprehn_>
Hixie: yes

[19:23:43.0000] <Hixie>
esprehn_: you don't

[19:24:01.0000] <esprehn_>
Hixie: Something like Google Feedback wants to know without polling the page constantly

[19:24:16.0000] <Hixie>
google feedback just wants to get what's actually rendering

[19:25:01.0000] <esprehn_>
yes, modulo rendering delay. So if Google Maps is still drawing and nothing has painted yet, we might wait for a single frame to appear before taking a screenshot

[19:25:17.0000] <MikeSmith>
heycam: ah I was going to ask about the styling. I should have figured Chris had a hand in it. I like the fact that the presentation starts with an thumbnail view of all the slides, instead of with the first slide. Seeing that, I think all slide tools should do it that way. Or provide it as an option at least.

[19:25:39.0000] <esprehn_>
Hixie: I guess that's somewhat specific, but it would be nice to know if the buffer in the canvas is "fresh"

[19:25:44.0000] <Hixie>
esprehn_: if google maps is still drawing and nothing has painted yet, that's probably what the user is bitching about, and thus probably a good thing to have in the screenshot :-)

[19:26:17.0000] <heycam>
MikeSmith, yeah that is unconvential. I think you put "?full" at the end to begin with the first slide.

[19:26:30.0000] <heycam>
MikeSmith, (the presentation toolkit is Shower)

[19:27:03.0000] <Hixie>
esprehn_: you cannot know if it's fresh, by design. There's no locking and no shared state, it's a purely asychronous message-passing system.

[19:27:20.0000] <Hixie>
esprehn_: the worker could send two commit() messages back to back, and the main thread might get them two weeks apart.

[19:27:36.0000] <kochi_>
hello, #whatwg

[19:27:41.0000] <esprehn_>
Hixie: you're misunderstanding

[19:27:47.0000] <Hixie>
hello kochi_

[19:27:53.0000] <Hixie>
esprehn_: that's quite possible :-)

[19:27:56.0000] <esprehn_>
Hixie: there's no message passing system inside the <canvas>

[19:28:21.0000] <Hixie>
esprehn_: the entirety of canvas is one big message passing system

[19:28:24.0000] <Hixie>
esprehn_: (to the GPU)

[19:28:25.0000] <esprehn_>
Hixie: you should be able to ask the <canvas> if it's ever had any drawing commands or commit() executed on it

[19:28:33.0000] <kochi>
ah, from proper client again: hello!

[19:28:50.0000] <kochi>
(without underscore)

[19:29:13.0000] <esprehn_>
Hixie: that's trivial to detect, since the swap() for the draw under the hood is known. Or in some implementations they may not even allocate the output surface until some drawing command has been executed

[19:29:19.0000] <MikeSmith>
hey kochi

[19:29:34.0000] <Hixie>
esprehn_: if the commit() happened on a different thread, it's not at all necessarily trivial.

[19:29:37.0000] <kochi>
MikeSmith: hi!

[19:30:15.0000] <Hixie>
esprehn_: we could provide an async api that reports back "at some point in the past, i knew that we had/had not seen a commit()"

[19:30:25.0000] <Hixie>
esprehn_: but that doesn't seem hugely useful

[19:30:35.0000] <esprehn_>
I don't understand why that needs to be async

[19:31:00.0000] <Hixie>
esprehn_: because there's no locking and the commit() could be happening on another thread

[19:31:38.0000] <esprehn_>
Hixie: when does the context in the main thread get data so it's visible to getImageData() ?

[19:32:01.0000] <Hixie>
esprehn_: getImageData() is a bad API. It should have been async. It blocks on the GPU.

[19:32:07.0000] <Hixie>
esprehn_: the main thread has to ask the GPU for the data.

[19:34:20.0000] <kochi>
MikeSmith: i am still sorting it out from internal reviews for ime api spec, and trying to get it out until the end of the next week.

[19:35:00.0000] <MikeSmith>
kochi: sounds good. If you need any feedback or help from me, just let me know.

[19:36:23.0000] <kochi>
MikeSmith: thanks!

[19:37:09.0000] <esprehn_>
Hixie: so then the answer is never? or the answer is getImageData() should block on the commit?

[19:38:12.0000] <kochi>
a minor issue I would like to bring here is how assigning a property of an object with side effect allowed.

[19:38:45.0000] <Hixie>
esprehn_: the answer is that in principle the main thread gets the data either at some arbitrary point after the UI is updated, or it has to request it from the GPU

[19:39:11.0000] <kochi>
e.g. we have ime_context.enabled as readonly + ime_context.setEnabled(true or false) vs ime_context.enabled as read/write

[19:39:41.0000] <esprehn_>
Hixie: okay

[19:39:58.0000] <esprehn_>
Hixie: I wonder what the implications of this on out of process workers are

[19:40:48.0000] <esprehn_>
Hixie: You can't talk directly to the GPU from inside the other process, so commit() has to send the buffer/shm across to the painting thread in another process

[19:41:11.0000] <TabAtkins>
kochi: the latter is *much* better.

[19:41:39.0000] <kochi>
TabAtkins: hi!

[19:42:09.0000] <TabAtkins>
yo. ^_^

[19:42:48.0000] <kochi>
TabAtkins: could you explain why? I got used to C++ programming and modifying a property without setter/getter makes me feel uneasy :)

[19:43:32.0000] <TabAtkins>
Because it's a C++ pattern, and that's now idiomatic JS. ^_^

[19:44:02.0000] <TabAtkins>
Most of the DOM's sins can be traced to C++ programmers trying to apply C++ idioms to JS.  (Or Java programmers doing the same.)

[19:44:10.0000] <esprehn_>
no, the idea is sane :)

[19:44:27.0000] <esprehn_>
JS just provides property getters and setters so there's no issue in the future

[19:45:11.0000] <TabAtkins>
Sorry, I was referring specifically to the syntax that kochi was suggesting, where the setter was an expliclitly-named "setFoo" method.

[19:45:25.0000] <kochi>
TabAtkins: hmm, but what if assigning .enable = true is a heavy operation? in that case, should we have an asynchronous method with callback?

[19:45:28.0000] <esprehn_>
yeah, setters will hopefully be a thing of the past soon

[19:45:29.0000] <TabAtkins>
Yes, the .enabled property might be a JS getter/setter under the hood.

[19:45:36.0000] <esprehn_>
even ObjC added properties

[19:45:38.0000] <TabAtkins>
kochi: It depends on the specifics.

[19:46:20.0000] <TabAtkins>
kochi: If setting it would do enough work to jank the thread, or for some other reason takes a non-trivial amount of time, then yes, you probably want it to be asynchronous.

[19:46:30.0000] <TabAtkins>
And thus a method with callbacks or events.

[19:46:33.0000] <Hixie>
esprehn_: that depends on the architecture. There's nothing in principle about computer science that says that the rendering can't happen off the main thread without main thread involvement.

[19:47:03.0000] <kochi>
TabAtkins: I see, probably people agree if the synchronous assignment blocks, having async method would be preferred.

[19:48:49.0000] <TabAtkins>
Yes.

[19:49:11.0000] <TabAtkins>
kochi: Like if it has to communicate cross-process, for example.

[19:49:58.0000] <kochi>
TabAtkins: thanks for the advice.

[19:51:16.0000] <kochi>
TabAtkins: so .setFoo() or .isFoo() is generally not a preferred naming?

[19:51:45.0000] <TabAtkins>
kochi: In general, yes.  isFoo(), sometimes, depending on the API.  If it's just to check on a boolean, then it's frowned upon.

[19:52:11.0000] <TabAtkins>
But if it's something like "isArray(object-that-might-be-an-array)", it's okay.

[19:52:21.0000] <kochi>
TabAtkins: i see.

[20:05:53.0000] <zewt>
Hixie: but real software is bound by the graphics systems of the OS they run on, and Microsoft isn't going to reengineer Direct3D to allow cross-process rendering to allow Firefox to implement it, so in reality they'd have to do something else

[20:08:55.0000] <zewt>
in reality i'd expect dedicated (not shared) workers to run in the same process as the thread that created them, and for most threaded rendering to use dedicated workers, so if they only have to fall back to something slow for shared workers, that's probably OK

[20:10:32.0000] <Hixie>
zewt: sure, and the spec allows that. But the spec has to be written for next decade's architectures as well as this decade's, so its constraints are sometimes narrower (or its requirements wider) than today's tech would imply.

[20:12:48.0000] <zewt>
Hixie: i don't think that applies here; if it was unreasonable to implement (which it probably isn't), the spec could forbid it today and relax the restriction when tech catches up

[20:32:19.0000] <jamesr_>
D3D allows for cross-process rendering just fine if you can assume D3D9Ex or up

[20:32:43.0000] <jamesr_>
so win xp is a bit screwed, but the drivers are so bad there you probably don't want to attempt to use the GPU for canvas anyway

[20:45:57.0000] <roc>
yes

[21:02:55.0000] <Hixie>
zewt: not sure exactly what you're referring to

[23:23:11.0000] <MikeSmith>
I prefer the Mark Watson messages that he sends from his iPhone

[23:24:08.0000] <MikeSmith>
they are much easiser to read -- much easier to distinguish what's him from what who he's quoting

[23:53:43.0000] <Ms2ger>
heycam|away, http://mcc.id.au/2013/lca-webidl/?full#Enumerations is wrong

[23:53:49.0000] <Ms2ger>
ctx.fillRule = "something";  // throws TypeError

[23:54:03.0000] <Ms2ger>
Actually, for attributes, it's ignored silently

[00:18:47.0000] <MikeSmith>
Ms2ger: on mac do you know is there a target name I can give to mach to get it to build a *.dmg?

[00:39:36.0000] <Ms2ger>
MikeSmith, package

[00:39:54.0000] <hsivonen>
Can someone review http://wiki.whatwg.org/wiki/Why_not_conneg#Server-side_choice_is_worse_for_intermediate_caches_than_browser-side_choice for technical accuracy, please?

[00:43:09.0000] <MikeSmith>
Ms2ger: super thanks

[00:43:22.0000] <Ms2ger>
Np :)

[00:43:39.0000] <jgraham>
hsivonen: Oh, interesting point. But I don't think I know better than you how HTTP caching works, so I don't think the fact that I don't see an error (without reading the spec) means that there are no errors

[00:55:58.0000] <annevk>
hsivonen: sounds about right

[00:56:19.0000] <annevk>
hsivonen: HTTP caching combined with content negotiation is pain

[00:56:44.0000] <annevk>
hsivonen: might want to ask mnot / jreschke I suppose

[03:57:03.0000] <annevk>
MikeSmith: kinda weird that the Notifications WG was extended without anyone asking me about it...

[03:58:06.0000] <annevk>
But I guess that's pretty much par for the course.

[04:29:04.0000] <annevk>
I wonder where http://www.w3.org/TR/its20/ is used to the extent of its-storage-size=25

[04:29:52.0000] <annevk>
Also, for HTML's hyphenless design there's quite a few hyphens there

[04:31:55.0000] <MikeSmith>
annevk: about Notifications WG, I should have given you a heads-up about it

[04:32:35.0000] <MikeSmith>
you knew I had asked if anybody else would be willing to chair the group, right?

[04:32:46.0000] <annevk>
Btw, participating in the TAG as a non-Member is difficult as it requires Member access to e.g. dial into the teleconference

[04:33:19.0000] <annevk>
MikeSmith: I think I was just confused about the meaning of "very soon" in http://lists.w3.org/Archives/Public/public-web-notification/2012Nov/0008.html

[04:34:15.0000] <annevk>
(The TAG problem is largely theoretical for me btw starting Monday next week, but still.)

[04:35:18.0000] <Ms2ger>
Nice way to leave us hanging :)

[04:37:40.0000] <annevk>
Ms2ger: if unlike me you can access https://lists.w3.org/Archives/Member/tag/latest you might be able to find out more

[04:37:50.0000] <MikeSmith>
annevk: still if there's no requirement for TAG members to be from W3C member orgs or to sign up for "invited expert" member access, then dialing in should not require Member access so I will ask that be changed

[04:38:28.0000] <annevk>
MikeSmith: I think the Invited Expert thing is required, not sure if that has happened yet

[04:38:43.0000] <Ms2ger>
annevk, I see, that also answers my next question :)

[04:38:44.0000] <annevk>
Ms2ger: Was hoping to write a blog post, maybe this weekend

[04:39:07.0000] <MikeSmith>
there are lot of assumptions been made in the way that the TAG currently aoperates that are maybe going to ned to be changed or at least considered more carefully

[04:40:38.0000] <MikeSmith>
like I also had my own assumptions about the communication about the Notifications WG but I can see I should have handled that differently

[04:42:42.0000] <MikeSmith>
but the reason  for the delay between Noveember and now in me saying anything else about it was it took that long to get confirmed agreement about getting a new chair, and then for me to go back to the W3C management and get it all approved

[04:42:56.0000] <MikeSmith>
and just delays from me personally in not getting around to it faster

[04:43:38.0000] <Ms2ger>
Sounds like you're having a lot of fun with the bureaucracy :)

[04:44:25.0000] <MikeSmith>
well handling this kind of stuff is not on my list of favorite things to do

[04:44:50.0000] <MikeSmith>
maybe I should have stepped back and asked somebody else on the team to handle ti

[04:45:02.0000] <Ms2ger>
Wouldn't fit in with the beer and other booze on that list? ;)

[04:45:33.0000] <MikeSmith>
shochu

[04:45:35.0000] <MikeSmith>
but yeah

[04:51:00.0000] <jgraham>
/me assumes that on Monday annevk will ascend to demigod status like Wesley Crusher did in a notably cringeworthy episode of Star Trek:TNG

[04:53:37.0000] <Ms2ger>
Sounds about right

[04:58:55.0000] <MikeSmith>
all right shit

[04:59:04.0000] <MikeSmith>
you guys guessed it

[04:59:10.0000] <MikeSmith>
so I might as well say

[04:59:32.0000] <MikeSmith>
we're appointing annevk to be Director

[05:01:49.0000] <Ms2ger>
"Programmable state-machines in CSS proposal"

[05:01:55.0000] <Ms2ger>
I think I'm going to skip this

[05:04:31.0000] <jgraham>
Ms2ger: I totally want it to be possible to build a turing machine in CSS. That actually renders the tape.

[05:04:43.0000] <jgraham>
Pure CSS of course

[08:16:27.0000] <annevk>
http://www.bbc.co.uk/news/business-21258205 omg

[08:18:08.0000] <annevk>
how do those people get a job?

[08:21:17.0000] <jgraham>
annevk: Would *you* admit to taking anything from Apple?

[08:21:32.0000] <miketaylr>
wow, that's really hard to listen to

[08:21:38.0000] <miketaylr>
/me cringes for everyone

[08:22:43.0000] <jgraham>
Although when they get onto "why would you buy a blackberry" he is pure fail

[08:23:46.0000] <jgraham>
Maybe he could have said "you wouldn't" and stopped. That's would have been shorter and contained the same essential message.

[08:24:13.0000] <miketaylr>
heh

[08:24:35.0000] <jgraham>
(note: I have no idea if BB actually has redeeming features, but "this product sucks" is the message I got from that interview)

[08:25:37.0000] <annevk>
Not acknowledging the question at all was just such a fail. Way to go for the BBC to not let them walk and call the guy out on his marketing speak.

[08:28:20.0000] <jgraham>
Yeah, but it's a bit unfortunate that question could be interpreted as "what would you like to be sued for?"

[08:29:09.0000] <Ms2ger>
Round corners

[08:34:39.0000] <Stevef>
darobin: ping

[09:40:57.0000] <dglazkov>
good morning, Whatwg!

[09:45:16.0000] <JonathanNeal>
heyo

[10:32:54.0000] <gsnedders>
jgraham: You don't mind if I add an optional dependency on a couple of C tries for html5lib?

[10:33:28.0000] <Ms2ger>
Ugh, C

[10:40:46.0000] <nimbu>
darobin: necolas wants to talk to you

[10:41:42.0000] <darobin>
divya: I'm connected on and off as I hop from meeting to meeting, so the simplest might be email

[10:41:53.0000] <darobin>
with which I'll lag until next week, but at least it won't get lost

[10:43:27.0000] <necolas>
darobin: it's ok, there's no rush. i was interested in finding out who to talk to about some things we're encountering while developing our (twitter) widgets.

[10:43:54.0000] <darobin>
necolas: sure thing!

[10:44:21.0000] <darobin>
I'm leaving here in 5 minutes, so either some time later, or robin‚äôwo as you prefer

[10:44:34.0000] <necolas>
darobin: thanks, sounds good.

[10:44:56.0000] <darobin>
np

[10:45:34.0000] <gsnedders>
Ms2ger: The tests you added to html5lib are wrong in their expectation

[10:46:27.0000] <gsnedders>
You need more whitespace. Will fix.

[11:00:44.0000] <Ms2ger>
gsnedders, I'm afraid I have to admit I never got around to actually running them :)

[11:04:37.0000] <TabAtkins>
Ms2ger: Not full state machines, but the ability to design multi-step animations between states, seems useful.

[13:11:15.0000] <jgraham>
gsnedders: Have you checked the implementation for badness? e.g. istr that trie-based implementations of entity parsing can use rather a large amount of memory if not done carefully

[14:14:51.0000] <gsnedders>
jgraham: Yes.

[14:27:49.0000] <JonathanNeal>
This drag and drop polyfill should be working in IE8&9 http://jonathantneal.github.com/dropfile/

[14:28:05.0000] <tantek>
that's an impressive accomplishment

[14:32:44.0000] <yroc>
Hixie: Section 4.6.14 (samp element), "Nested samp and kbd elements..."

[14:33:07.0000] <yroc>
Shouldn't it be "Nested *span* and kbd elements..."?

[14:33:18.0000] <Hixie>
no?

[14:33:21.0000] <Hixie>
why would it be span?

[14:33:35.0000] <yroc>
That seems to be what the accompanying example is showing.

[14:33:47.0000] <yroc>
<span class="prompt">

[14:34:17.0000] <yroc>
Or is the example wrong?

[14:34:22.0000] <yroc>
Or am I wrong?

[14:39:32.0000] <Hixie>
look closer :-)

[14:39:35.0000] <Hixie>
there are spans there, it's true

[14:39:39.0000] <Hixie>
but they're just for styling

[14:42:02.0000] <yroc>
Yeah, but that's what the sentence says -- that samp and kbd are there for "styling of specific elements of the samp output"

[14:42:18.0000] <yroc>
But then spans are used for styling!

[14:57:20.0000] <Hixie>
yroc: yeah, i can add a comment about the span too.

[15:06:07.0000] <yroc>
OK great. Not to belabor the point, but when the sentence introducing the example says, "Nested samp and kbd elements allow for the styling of specific elements of the sample output...", what is the 'specific element' that sample output that samp is styling in the example?

[15:06:59.0000] <yroc>
Sorry: what is the 'specific element' that samp is styling in the example?

[15:07:20.0000] <yroc>
Because samp is wrapping the entire block.

[15:11:33.0000] <Hixie>
samp is styling the "output" of the computer, like, what would be on the screen

[15:11:51.0000] <Hixie>
and "kbd" is styling the input; in the case of kbd-nested-in-samp, the part of the output that echoed the input

[15:12:27.0000] <Hixie>
(Under <kbd>'s definition, the spec says "When the kbd element is nested inside a samp element, it represents the input as it was echoed by the system.")

[15:12:49.0000] <Hixie>
(reload for the latest update to that example btw)

[15:13:17.0000] <Hixie>
MikeSmith: you around?

[15:20:13.0000] <yroc>
Hixie: OK, it's clear. Thanks very much :)

[15:24:30.0000] <JonathanNeal>
Have you guys already addressed some of the keyboard issues talked about here? http://codeflow.org/entries/2013/jan/30/keyboard-events-in-javascript-are-broken/

[15:24:42.0000] <Hixie>
not to my knowledge

[15:25:00.0000] <Hixie>
it's a huge amount of work that nobody who's sane has been brave enough to attempt

[15:25:55.0000] <Hixie>
jgraham: https://www.w3.org/Bugs/Public/show_bug.cgi?id=17155 ping

[15:44:08.0000] <Hixie>
hsivonen, jgraham, gsnedders, abarth: ping https://www.w3.org/Bugs/Public/show_bug.cgi?id=17924

[15:53:06.0000] <JonathanNeal>
Well gee, what all needs to be done? Write a spec?

[15:56:53.0000] <Hixie>
JonathanNeal: write a ton of test cases, figure out what the browsers are actually doing, figure out what a common ground is, convince all the browser vendors that converging on that common ground makes sense, and speccing it.

[15:57:26.0000] <Hixie>
and then, maintaining the spec for several years as everyone finds errors in your work :-)

[15:57:36.0000] <JonathanNeal>
just that?

[15:57:40.0000] <Hixie>
yup

[15:57:43.0000] <Hixie>
more or less

[15:57:48.0000] <jacobolus>
Hixie: any estimate of man hours for that? maybe 1000?

[15:57:58.0000] <Hixie>
hmmm

[15:58:38.0000] <zewt>
iirc keyboard stuff is hard because everyone's browser sniffing to work around the differences, which makes converging existing apis hard

[15:58:41.0000] <jacobolus>
maybe that's a bit high. 300-500 spaced out over a few years

[15:59:12.0000] <JonathanNeal>
We'll get fifty developers together and have it specced out over a weekend.

[15:59:15.0000] <Hixie>
reverse engineering the browsers is probably a full-time job for a couple of months, if you're not used to doing it, plus a month or two getting up to speed; figuring out what they're doing and what the common ground is is probably another month or so full time, convincing the vendors i'll get back to, writing the spec if you're used to it is probably a couple of days, if you're not maybe a month, full time.

[15:59:34.0000] <Hixie>
maintaining it is probably a low-bandwidth job for 5 years, maybe a day a week at most

[15:59:49.0000] <Hixie>
convincing the browser vendors to converge on one thing might be impossible, so i can't estimate how long it'd take


2013-01-31
[16:00:12.0000] <jacobolus>
JonathanNeal: I think you found a new full-time gig for the next 6 months! :)

[16:00:33.0000] <zewt>
another part is probably researching past attempts, reading www-dom, etc. threads on the topic, etc. to see what's got in the way previously

[16:00:36.0000] <Philip`>
It's probably quicker to work on touch APIs and wait for keyboards to become obsolete and die out

[16:01:05.0000] <Hixie>
so i'd say probably about 2000 hours total, maybe, 3000 hours, but spread unevenly over half a decade

[16:01:08.0000] <zewt>
(remind me to not say "etc." twice in the same sentence)

[16:01:13.0000] <Philip`>
(Also, speech- and mind-recognition APIs)

[16:01:16.0000] <Hixie>
that includes ramp-up time though

[16:01:29.0000] <JonathanNeal>
Philip`: because we'll be creating virtual keyboards on their touch devices and laptops where we can define the degree of textile feedback>

[16:02:45.0000] <Hixie>
for someone who's done this a lot before (like several people in this channel), it's probably a lot less on the front-end

[16:02:46.0000] <JonathanNeal>
Did they press A or did they BILLYMAYS press A.

[16:02:59.0000] <jacobolus>
JonathanNeal: you might have about as easy a time convincing all those silly european countries to just switch to standard QWERTY

[16:03:03.0000] <Hixie>
but the people who are experienced already have a lot of maintenance work ongoing, so the cost that's prohibitive is the back-end maintenance cost

[16:03:45.0000] <jacobolus>
JonathanNeal: while you're at it, spec out the US switch to the metric system

[16:03:49.0000] <jacobolus>
:)

[16:05:46.0000] <JonathanNeal>
Done https://petitions.whitehouse.gov/petition/make-metric-system-standard-united-states-instead-imperial-system/FndsKXLh

[16:06:42.0000] <JonathanNeal>
ARE YOU UNIMPRESSED? AND NOW!?

[16:12:02.0000] <Hixie>
heycam: yt?

[16:12:45.0000] <heycam>
Hixie, hi

[16:12:58.0000] <Hixie>
heycam: any comment on https://www.w3.org/Bugs/Public/show_bug.cgi?id=19819 ?

[16:13:04.0000] <heycam>
/me looks

[16:13:46.0000] <Hixie>
(suitable comment might be "yeah, bz is right, fix yer stuff hixie")

[16:13:56.0000] <heycam>
Hixie, I think bz is right

[16:13:59.0000] <Hixie>
k

[16:14:04.0000] <heycam>
the number of arguments passed is visible to the script

[16:14:15.0000] <Hixie>
so i just stick "optional" before the second argument and move on?

[16:14:20.0000] <heycam>
and the rules for how IDL values get converted when invoking a callback will pass the 4 required arguments

[16:14:21.0000] <heycam>
yep!

[16:14:26.0000] <heycam>
oh

[16:14:29.0000] <heycam>
hang on

[16:14:56.0000] <Hixie>
/me hangs on

[16:14:58.0000] <heycam>
you would have to stick optional before each of argument 2, 3 and 4

[16:15:12.0000] <Hixie>
okie dokie

[16:15:13.0000] <heycam>
because of the rule that if one argument is optional then all following must be optional

[16:15:34.0000] <heycam>
I guess it minorly might suggest that the callback could be invoked with say 3 arguments, not just 1 or 4

[16:15:45.0000] <heycam>
but there's no overloading for callbacks like there is for operations, atm

[16:16:01.0000] <Hixie>
well i don't really care what it's declared as, since prose always invokes it

[16:16:06.0000] <Hixie>
just want to keep bz and you happy :-)

[16:16:10.0000] <heycam>
ok

[16:16:12.0000] <Hixie>
btw there's an example in the spec of an optional argument where the next argument isn't marked optional

[16:16:29.0000] <heycam>
that'll be invalid idl then

[16:16:32.0000] <heycam>
afaicr

[16:16:32.0000] <Hixie>
oh nevermind

[16:16:37.0000] <Hixie>
next arg is variadic

[16:16:41.0000] <heycam>
ah

[16:16:43.0000] <heycam>
anyway, I'm happy with optional before each of those three trailing arguments

[16:16:49.0000] <Hixie>
roger

[16:41:59.0000] <GPHemsley>
/me wonders if there should be more oversight on the meta extensions

[21:53:55.0000] <MikeSmith>
Hixie: here now

[21:55:11.0000] <Hixie>
i was thinking about using the target milestone field in bugzilla to help sort things

[21:55:20.0000] <Hixie>
is that something you can help with?

[21:55:47.0000] <MikeSmith>
yeah sure

[21:56:09.0000] <MikeSmith>
we need to add some enumerated values there?

[21:56:42.0000] <Hixie>
yeah

[21:57:46.0000] <Hixie>
i was thinking, in the whatwg product, "2013 Q1", "2013 Q2", "2013 Q3", "2013 Q4", "2014 Q1", and so on, as high as you can be bothered to go, and then also something like "Pending Implementation Interest"

[22:02:51.0000] <MikeSmith>
ok lemme give it a try now

[22:17:34.0000] <MikeSmith>
damn they make this complicated

[22:18:00.0000] <MikeSmith>
bugzilla config is so unintuitive

[22:20:15.0000] <MikeSmith>
...and they've arbitrarily chosen to limit the field 20 to characters

[22:20:49.0000] <Hixie>
weird

[22:21:11.0000] <Hixie>
"Needs Impl Interest"

[22:21:53.0000] <MikeSmith>
thanks

[22:32:19.0000] <MikeSmith>
Hixie: so how far out should we go? 2016?

[22:32:25.0000] <MikeSmith>
2022?

[22:32:46.0000] <Hixie>
however far we go, we'll go further once we get there, so it's up to you :-)

[23:14:18.0000] <jgraham>
Hixie: Hmm, I have paged all of the 17155 stuff out. I can look for TCs I wrote though

[00:17:00.0000] <MikeSmith>
Glen Adams really seems to try hard to find novel ways to geet even more people to lose resect for him

[00:17:08.0000] <MikeSmith>
what few there may be left

[00:25:33.0000] <jgraham>
I propose starting public-html-religion to keep thological discussions off the technical list and the <del>political</del>admin list

[00:25:39.0000] <jgraham>
*theological

[00:28:19.0000] <jgraham>
Then I will finally have a forum to adress the important question of whether the many-into-one behaviour of the <html> element is a product of western monotheistic beliefs and therefore inappropriate for a global markup standard

[00:38:18.0000] <MikeSmith>
I don't see quoting something from a book in your sig as being necessary a religious thing

[00:38:51.0000] <MikeSmith>
it is see more so in this case I gues

[00:39:23.0000] <MikeSmith>
but there are a lot of shades of things that could be taken as religious

[00:43:09.0000] <MikeSmith>
anyway if I were going to take offense at what people put into their sigs I think the legal disclaimers that some people attach to every single message they send to a list is a lot more worthy of offense

[00:43:25.0000] <MikeSmith>
because those serve absolutely no purpose

[00:45:50.0000] <jgraham>
The problem is that it is a topic where there is a line ranging from "inoffensive" to "illegal" and everyone wants to weigh in with their exact definition of where "inappropriate" is on that line.

[00:52:25.0000] <jgraham>
MikeSmith: Are you allowed to ask people to take that discussion off list and to the archives, or do we have to wait for the 300+ email flame war and/or the chairs to do it?

[00:52:39.0000] <jgraham>
s/the archives/www-archive/

[00:53:09.0000] <MikeSmith>
yeah I will ask that the discussion be moved to www-archive

[00:54:08.0000] <jgraham>
(I suggest pre-empting the possible response that this is an admin matter and therefore on topic for an admin list)

[00:59:42.0000] <MikeSmith>
jgraham: oh, already sent it before I got back to see that suggestion

[02:22:59.0000] <MikeSmith>
Hixie: btw we now have dates in the Target Milestone field for use with all WHATWG components

[02:23:05.0000] <MikeSmith>
https://www.w3.org/Bugs/Public/enter_bug.cgi?product=WHATWG

[07:15:53.0000] <Yaffle>
Hello!!!

[07:17:14.0000] <Yaffle>
@Hixie, can you please look at https://www.w3.org/Bugs/Public/show_bug.cgi?id=20768 ?

[07:21:29.0000] <jgraham>
Yaffle: That doesn't seem like a good bug report

[07:21:39.0000] <Yaffle>
@jgraham, why?

[07:21:59.0000] <jgraham>
Because it doesn't explain a problem with the spec

[07:22:06.0000] <jgraham>
There might *be* one

[07:22:17.0000] <jgraham>
But it isn't obvious what it is

[07:22:51.0000] <jgraham>
For example it isn't clear whether the "problem" is a QoI issue

[07:23:05.0000] <jgraham>
Well, it's not even that obviosu what the problem is

[07:23:07.0000] <Yaffle>
spec is correct, but EventSource is not so good

[07:23:29.0000] <jgraham>
Right

[07:23:53.0000] <jgraham>
So is spec action needed?

[07:24:24.0000] <jgraham>
Is it something that can be fixed by browsers changing their implementation?

[07:24:43.0000] <Yaffle>
yes, i want to see "heartbeat timeout" in the spec

[07:24:47.0000] <jgraham>
If browsers can change their implementation, will they? If not why not?

[07:25:59.0000] <jgraham>
If it can be solved with a browser change (which it seems like maybe it can, since you say Chrome isn't affected), why wouldn't they just do that instead of implemented some as-yet unspeced feature

[07:26:17.0000] <jgraham>
If it *can't* be, you need a clear statement of the problem

[07:26:26.0000] <Yaffle>
because Chrome uses TCP-level keepalives

[07:26:26.0000] <jgraham>
A clear statement of why a spec change is needed

[07:26:44.0000] <jgraham>
And finally a suggestion for the possible form of that change

[07:26:54.0000] <jgraham>
Right so why can't everyone else do that too?

[07:31:16.0000] <Yaffle>
they fear

[07:32:09.0000] <jgraham>
Right, if there are good technical reasons that what Chrome does is bad, that needs to be in the bug

[07:32:36.0000] <Yaffle>
and the tcp keepalives interval is 45 seconds, which may be too big for some EventSource applications

[07:33:30.0000] <jgraham>
Right, well this all needs to be explained to make it a good bug report

[07:33:56.0000] <Yaffle>
this is all needs a discussion

[07:34:05.0000] <jgraham>
Like "You might think that just doing what Chrome does would solve this without any spec changes but that doesn't really solve the whole problem because (reasons)"

[07:36:56.0000] <Yaffle>
ok

[07:38:10.0000] <jgraham>
So the basic structure should be: description of a problem that the current spec doesn't address, reason why any trivial solution is insufficient to addresss the problem, suggestions for possible solutions

[07:38:22.0000] <jgraham>
The last one is optional

[08:06:03.0000] <zewt>
oh cool, didn't know img.complete was in ios 6 safari

[08:46:04.0000] <dglazkov>
good morning, Whatwg!

[09:03:25.0000] <tantek>
good morning dglazkov!

[09:18:03.0000] <KyleBarnhart>
Hi. Is there someone of authority how can definitively answer a question regarding the implementation of the WebVTT text track specification?

[09:18:15.0000] <KyleBarnhart>
Specifically...

[09:20:10.0000] <KyleBarnhart>
I am part of a team who is trying to implement the standard. Whereas I take the view that the parser section of the specification is to be adhered to when writing an implementation, they take the view that the implementation is should be written to the syntax rules and the parser section can be ignored.

[09:21:27.0000] <Ms2ger>
The parser section is the only relevant one for an implementation

[09:22:03.0000] <KyleBarnhart>
It is one. Not a validator. It is parsing the format for the eventual use in Mozilla.

[09:22:37.0000] <Ms2ger>
Right

[09:22:48.0000] <Ms2ger>
Then you want to follow the parsing section

[09:22:58.0000] <Ms2ger>
I understand your first patches are due today?

[09:23:56.0000] <KyleBarnhart>
I believe.

[09:24:29.0000] <KyleBarnhart>
I'm not responsible for that. I'm handling testing at the moment.

[09:25:18.0000] <Ms2ger>
Great, we'll need quite a few of those :)

[09:30:05.0000] <KyleBarnhart>
Is it okay if the parser (and I mean in the final future version) differs in some significant ways from the specification? Such as when to and not to discard a cue, and accepting input that the specification would not allow.

[09:39:23.0000] <Ms2ger>
If the code is to end up in Gecko, it had better follow the specification to the letter

[09:40:25.0000] <Hixie>
KyleBarnhart: what do they think the spec is for, if not following?

[09:41:28.0000] <MikeSmith>
inspiration

[09:41:46.0000] <Ms2ger>
Suggestions

[09:42:46.0000] <Hixie>
MikeSmith: awesome, thanks! One last thing on the milestones, looks like we have to explicitly give the "no milestone" milestone, so all the bugs have ended up in "Needs Impl Interest". Is there any chance you could rename that one to "Unsorted", and then add one to the other end of the list (after the quarterly milestones) called "Needs Impl Interest"?

[09:43:22.0000] <MikeSmith>
sure

[09:43:33.0000] <MikeSmith>
gimme a minute

[09:43:45.0000] <Hixie>
sure, no rush

[09:45:31.0000] <MikeSmith>
well it's quick to do

[09:45:43.0000] <MikeSmith>
in fact so quick that's it already done!

[09:45:52.0000] <MikeSmith>
I have become one with bugzilla

[09:45:59.0000] <Hixie>
:-D

[09:46:03.0000] <Hixie>
thanks dude

[09:49:57.0000] <Hixie>
hsivonen, abarth, jgraham: ping https://www.w3.org/Bugs/Public/show_bug.cgi?id=17924 (same as one I sent yesterday, in case you already looked and don't care)

[09:50:25.0000] <Ms2ger>
SVG fragment parsing?

[09:50:32.0000] <Hixie>
yeah

[09:51:04.0000] <Ms2ger>
Sounds like it would be good to fix, but I'll leave it to hsivonen to tell you how :)

[09:52:14.0000] <KyleBarnhart>
Thank you very much for your answer. I'm going to go now and discuss this with our team.

[09:52:33.0000] <Hixie>
KyleBarnhart: please don't hesitate to ask any other questions

[09:52:59.0000] <KyleBarnhart>
Thank you :)

[09:53:40.0000] <Velmont>
KyleBarnhart: What's also good to know is that specs are never really set in stone.

[09:53:54.0000] <Hixie>
MikeSmith: when you have a moment and happen to be at bugzilla's admin page again, if you could add a "Needs Research" between "2022 Q4" and "Needs Impl Interest", that'd be great

[09:54:00.0000] <Velmont>
KyleBarnhart: It should follow what implementations do as well. So if there's something strange there it might be a bug in the spec.

[09:54:08.0000] <Hixie>
KyleBarnhart: yeah, what Velmont said. If there's a reason to implement something other than the spec, we should change the spec.

[09:54:27.0000] <Hixie>
KyleBarnhart: the reason to have a spec is to make sure everyone does the same thing, but so long as they all do the same thing, it doesn't really matter what that thing is exactly

[09:54:31.0000] <Velmont>
KyleBarnhart: Although there is already implementions of that one, so hopefully there shouldn't be too much :-)

[09:58:27.0000] <MikeSmith>
Hixie: I have communicated your request to bugzilla

[09:58:44.0000] <MikeSmith>
Flight looks extremely cool https://github.com/twitter/flight/tree/gh-pages/demo

[09:58:50.0000] <Hixie>
MikeSmith: you are teh awesomest

[09:58:56.0000] <MikeSmith>
https://github.com/twitter/flight/blob/master/README.md

[10:20:56.0000] <hsivonen>
Hixie: ping ack but can't review today

[10:21:25.0000] <Hixie>
hsivonen: roger

[11:18:19.0000] <jgraham>
KyleBarnhart: I'm pretty sure Opera have written some WebVTT tests that might help you get started

[11:18:43.0000] <jgraham>
I'm not sure if they are public yet. zcorpan would know, but he's not around

[11:19:23.0000] <jgraham>
http://w3c-test.org/html/tests/submission/Opera/media/track/webvtt/

[11:19:42.0000] <jgraham>
I love it when a plan comes together

[11:20:00.0000] <jgraham>
Although I guess it hasn't come together until everyone passes the tests

[11:23:24.0000] <jgraham>
KyleBarnhart: Also, Ms2ger should be able to help you get those tests running as MochiTests

[11:24:06.0000] <jgraham>
'cause y'know until a test is in an automated regression framework it as good as doesn't exist

[11:45:57.0000] <Ms2ger>
Suppose you have a form element

[11:46:10.0000] <Ms2ger>
And you do for (var p in form) { w(p); }

[11:46:15.0000] <Ms2ger>
What do you get logged?

[11:46:22.0000] <Hixie>
all kinds of random stuff

[11:47:10.0000] <Ms2ger>
Alright, let's ignore the random stuff, and focus on the stuff in form.elements

[11:49:14.0000] <Hixie>
everything except image inputs, i think

[11:49:17.0000] <Hixie>
but i'm saying that from memory

[11:49:30.0000] <Ms2ger>
Any numbers?

[12:04:48.0000] <Hixie>
Ms2ger: numbers?

[12:04:53.0000] <Hixie>
Ms2ger: oh, numbers

[12:04:56.0000] <Hixie>
Ms2ger: dunno off hand

[12:05:09.0000] <Hixie>
Ms2ger: i assume this is well-defined, but of course the definition might not match reality

[12:06:39.0000] <Ms2ger>
Exactly :)

[12:12:30.0000] <abarth>
Hixie: makes sense

[12:12:36.0000] <gsnedders>
Ms2ger: 25.

[12:14:20.0000] <Hixie>
abarth: the parsing thing?

[12:14:45.0000] <Hixie>
ah, saw your comment. thanks!

[13:01:00.0000] <Hixie>
Ms2ger: ping https://www.w3.org/Bugs/Public/show_bug.cgi?id=17844

[13:01:20.0000] <Ms2ger>
I have no idea what those do

[13:01:36.0000] <Ms2ger>
I was hoping someone who isn't me could do the reverse engineering :)

[13:02:42.0000] <Hixie>
heh

[13:05:18.0000] <jgraham>
So whoever won't do reverse engineering for that is a good candidate to be the real Ms2ger?

[13:05:36.0000] <Ms2ger>
Either that or just lazy

[13:06:41.0000] <jgraham>
Hmm, that's a problematically large group of people :(

[13:08:32.0000] <Hixie>
smaug____: you around?

[13:08:45.0000] <smaug____>
Hixie: pong

[13:09:17.0000] <Hixie>
smaug____: you asked for [LenientThis] on onmouseenter and onmouseleave in https://www.w3.org/Bugs/Public/show_bug.cgi?id=18836, referencing https://bugzilla.mozilla.org/show_bug.cgi?id=691059

[13:09:30.0000] <Hixie>
smaug____: can you elaborate on why we need LenientThis? I forget what it does and how to test for it :-(

[13:09:42.0000] <Hixie>
right now only one event handler has it

[13:10:04.0000] <Hixie>
(onreadystatechange, which is magical for other reasons too)

[13:10:18.0000] <Ms2ger>
Hixie, so, Interface.prototype.onmouseenter

[13:10:18.0000] <smaug____>
Hixie: bz asked for LenientThis ;)

[13:10:33.0000] <Ms2ger>
Hixie, that's a getter, and when you access it like that...

[13:10:35.0000] <Hixie>
oh, so he did

[13:10:52.0000] <Ms2ger>
Hixie, 'this' isn't a concrete object of the right type, so we throw

[13:10:53.0000] <Hixie>
looks like Ms2ger is going to do a bz impression and answer my questiosn though

[13:11:01.0000] <Hixie>
Ms2ger: ah, right. so there's pages doing that, huh

[13:11:41.0000] <Ms2ger>
Actually, pages call the setter, not the getter, but same thing

[13:11:49.0000] <smaug____>
/me would need to re-read the bug

[13:12:24.0000] <Ms2ger>
https://bugzilla.mozilla.org/show_bug.cgi?id=691059#c5 fwiw

[13:12:40.0000] <Hixie>
yeah i'm reading that

[13:12:48.0000] <Hixie>
ok

[13:12:54.0000] <Hixie>
i guess we'll just add [LenientThis]

[13:13:05.0000] <Ms2ger>
Please do :)

[13:13:30.0000] <Hixie>
should it be that way just on everything?

[13:13:32.0000] <Hixie>
including Window?

[13:13:49.0000] <Ms2ger>
Just on the ones where it's required by compat ):

[13:13:51.0000] <Ms2ger>
:)*

[13:14:41.0000] <Hixie>
well right now there's one interface for all of the above

[13:14:45.0000] <Hixie>
by bz's request :-)

[13:14:54.0000] <Hixie>
so it's just gonna be [LenientThis] everywhere

[13:15:02.0000] <Ms2ger>
/me looks

[13:15:16.0000] <Ms2ger>
Element/Document/Window all get it in Gecko

[13:15:23.0000] <Ms2ger>
And then Document.onreadystatechange

[13:16:10.0000] <Hixie>
k

[13:16:22.0000] <Hixie>
will do this after lunch

[13:16:24.0000] <Hixie>
bbiab

[13:16:28.0000] <Ms2ger>
Thanks :)

[13:25:06.0000] <smaug____>
thanks Ms2ger

[13:25:15.0000] <Ms2ger>
Np

[14:07:15.0000] <caitp>
If anyone is around, I just wanted to follow up on some logs that Kyle Barnhart left from here in a blog post http://kyle.barnhart.ca/2013/01/webvtt-parser-specification-irc-chat.html, because I get the impression that some important information had been left out

[14:08:17.0000] <caitp>
he's doing this whole appeal to authority thing (and is rightfully doing so in some cases), but is using it to make huge adjustments to a number of unit tests, which those of us who are implementing the library agree are not technically correct

[14:08:33.0000] <Ms2ger>
Well

[14:08:54.0000] <Ms2ger>
AFAICT, he's suggesting you implement the normative part of the spec, instead of the authoring recommendation

[14:09:20.0000] <caitp>
so these are unit tests which are checking pathways through the parser code, and is completely independent of business rules such as "throw away cue X under these circumstances"

[14:10:01.0000] <TabAtkins>
As long as you always come up with the exact same structure as what the spec's parser has, you can do it however you want.

[14:10:06.0000] <Ms2ger>
Not sure what you're saying, exactly

[14:10:09.0000] <TabAtkins>
But it sounded a lot like you might not always come up with the same structure.

[14:10:25.0000] <TabAtkins>
s/the spec's parser has/the spec's parser produces/

[14:10:26.0000] <caitp>
we have a design such that we can ensure that those rules are followed accordingly in the browser, but doing so during the unit tests seems to actually restrict our ability to test different issues and ensure that we can get through them without problems

[14:10:52.0000] <caitp>
apparently a portion of my text was cut off there :)

[14:11:51.0000] <caitp>
anyways, the point is that, while we are well aware that the browser is expected to behave a certain way with these files, not all applications will work that way, and being a general purpose library we kind of need to test what the code actually does rather than what a single application of it will be doing

[14:12:13.0000] <Ms2ger>
Your unit tests can tell apart states that are exposed the same way to the browser?

[14:13:07.0000] <TabAtkins>
If applications intended to interoperate with the web do different things with the same input, you're probably gonna have a bad time.  For example, anything which parses WebVTT but which sometimes comes up with a different set of cues than a browser would is probably wrong.

[14:13:14.0000] <caitp>
what we can do in unit tests is ensure that we get expected output from the parser/scanner to ensure that it works correctly (reports syntax errors correctly, appropriately assigns cue data)

[14:13:22.0000] <TabAtkins>
As in - it will make people annoyed that the file they authored doesn't work the same.

[14:13:40.0000] <caitp>
in the browser we can say "okay, we're not going to ignore these errors, we're going to not display this cue to the browser"

[14:14:44.0000] <Ms2ger>
Anyway, I'm sure I'll be looking at the patches soon enough :)

[14:15:08.0000] <caitp>
we have a pile of work to do on those after the last few big refactors landed :(

[14:15:09.0000] <TabAtkins>
The only reason to not do the same thing as the browser would is in special cases like an editor, where you want to show the invalid things so the author can fix it.

[14:15:59.0000] <caitp>
TabAtkins, that's exactly correct, or if a browser ever decides to be more lenient on marginally malformed data

[14:16:10.0000] <caitp>
which i'm sure you'd frown upon, but it's known to happen

[14:16:20.0000] <TabAtkins>
caitp: If the latter ever happens, the correct answer is to fix the spec.  No need to anticipate it ahead of time.

[14:17:44.0000] <Ms2ger>
We won't need to be more lenient, if all browsers implement the spec in the first place, because then authoring mistakes will be obvious immediately

[14:18:21.0000] <caitp>
while I agree with that, I think that's probably pretty unlikely, since even now you already have incomplete implementations in webkit and probably elsewhere

[14:18:35.0000] <caitp>
so quirks mode is probably already a thing destined to happen

[14:19:41.0000] <TabAtkins>
Seems unlikely, unless we get a large body of incompatible content.  We'll more likely just slightly break some small amount of content and deal with it.

[14:20:18.0000] <caitp>
could go either way I think, it's hard to predict how much it will take off

[14:20:27.0000] <caitp>
it might have other uses apart from just accessibility features

[14:24:05.0000] <caitp>
anyways, these unit tests aren't worrying about business rules like "skip a cue if the timestamp is marginally wrong but can still be identified as a timestamp", and he keeps rewriting piles of tests to expect behaviour that isn't going to happen under the configuration that he's working with. it might be good to suggest writing a separate set of tests where the constraints are in line with those of the browser. I'

[14:24:05.0000] <caitp>
ve tried to communicate this, but he will continually exclaim that there is no other option than to do exactly what the spec says -- But of course that's not true, as already pointed out, there are other uses for the library, such as authoring and validating, and we need to ensure that we can do those things

[14:24:11.0000] <caitp>
I'll stop blabbing now, cheers =)

[14:24:43.0000] <TabAtkins>
I think it's weird to call those "business rules" when they're reasonably part of the parsing process, but whatever. ^_^

[14:25:15.0000] <TabAtkins>
But yes, as I've said, all that matters is that you end up in the same structure as what the spec dictates.  How you get there is unimportant.  (However, sticking close to the spec is a good way to be more certain that you're doing it right.)

[14:49:03.0000] <gsnedders>
woo optimization!

[14:52:34.0000] <gsnedders>
For a month old copy of the complete, Web Apps 1.0 spec, consumeEntity is down to 0.625s from 2.132s.

[14:53:16.0000] <gsnedders>
Oh, and a reduction in memory usage.

[15:02:26.0000] <Philip`>
gsnedders: That sounds pretty slow given that the spec only uses about four different entities and they can be recognised from their first character :-p

[15:08:53.0000] <gsnedders>
Philip`: Well, entity lookup is no longer the bottleneck

[15:08:55.0000] <JonathanNeal>
Hello

[15:08:59.0000] <JonathanNeal>
Anyone have IE7-9 running?

[15:35:47.0000] <Hixie>
can anyone work out what the order is that i used for attributes in the attribute index?

[15:36:26.0000] <Hixie>
i think it's alphabetical by attribute name then by element names, with the element names being ordered alphabetically too

[15:36:32.0000] <Hixie>
and that i just screwed up type=""

[15:46:56.0000] <jwalden>
esprehn: regarding "overly optimistic about what happens inside the JS VMs" and "we'll catch up with lisp eventually", I think it's at least unclear, as doing all the bits of analysis lisp does may impose unacceptable runtime overhead (or may not); but it is the case that SpiderMonkey has had to be selective about analysis it does due to that analysis not paying off well enough in the common cases

[15:47:44.0000] <TabAtkins>
/me thinks some optional typing would help, but is willing to wait for a good PLT weenie to introduce a really nice type system first.

[15:50:44.0000] <Hixie>
jwalden: yeah, certainly up-front analysis is a trade-off

[15:51:16.0000] <Hixie>
jwalden: i think long-term it's certainly plausible that a browser could notice some JS being used a lot and start doing more detailed analysis in the background

[15:51:29.0000] <jwalden>
Hixie: indeed

[15:51:33.0000] <Hixie>
jwalden: maybe even aggregating such analysis across many users

[15:51:49.0000] <jwalden>
/me imagines privacy timing attacks on that ;-)

[15:51:55.0000] <jwalden>
but sure

[15:51:57.0000] <Hixie>
heh

[15:52:52.0000] <jwalden>
I just felt compelled to push back against the "Ope^H^H^HLisp did it first thing", when it's different requirements being solved :-)

[15:52:57.0000] <Hixie>
hehhah

[15:52:59.0000] <Hixie>
er

[15:53:10.0000] <Hixie>
heh was to the timing attacks, hah was to the different requireemnts

[15:53:59.0000] <Hixie>
we get that a lot. people are always telling me that this and that platform has solved some problem, so the web should do it too

[15:54:14.0000] <jwalden>
:-)

[15:54:15.0000] <Hixie>
and it's like, "yeah but they don't assume every application is a hostile attacker" or whatever

[15:54:19.0000] <Hixie>
always something different

[15:54:27.0000] <Hixie>
"yeah but they can assume you have a keyboard"

[15:54:38.0000] <Hixie>
or "yeah but they can assume the user isn't blind"

