2011-11-01
[20:39:00.0000] <Hixie>
jgraham: yt?

[21:02:00.0000] <Hixie>
is pms broken for anyone else?

[21:26:00.0000] <jarek>
Hi

[21:27:00.0000] <jarek>
are there any chances for getting ::selection pseudo-element back in CSS Selectors spec?

[21:27:01.0000] <jarek>
it seems to be supported by all major browsers

[21:29:00.0000] <jarek>
even IE9 supports it

[21:30:00.0000] <jarek>
https://developer.mozilla.org/en/CSS/%3a%3aselection

[21:31:00.0000] <jarek>
I wonder why all browsers except Firefox are using unprefixed version

[21:31:01.0000] <jgraham>
Hixie: Sems to be at least a bit up

[21:31:02.0000] <jgraham>
+e

[21:32:00.0000] <Hixie>
jgraham: http://pimpmyspec.net/aquarium.py/output?uri=http%3A%2F%2Fwww.whatwg.org%2Fspecs%2Fweb-apps%2Fcurrent-work%2Fsource-whatwg-complete&process_filter=on&process_toc=on&process_xref=on&process_sub=on&process_annotate=on&filter=&annotation=&newline_char=LF&tab_char=SPACE&min_depth=2&max_depth=6&w3c_compat_xref_a_placement=on&parser=lxml.html&serializer=html5lib&output_encoding=ascii

[21:32:01.0000] <Hixie>
jgraham: gives me an exception

[21:32:02.0000] <Hixie>
gotta go, bbiab

[21:34:00.0000] <jgraham>
Hixie: node=<?p?> in the traceback looks suspicious

[21:35:00.0000] <jgraham>
My first guess is that it is falling over on a PI that shouldn't be there

[21:45:00.0000] <divya>
foolip: does this html to atom algo removal mean there is no more toatom microdata interface?

[22:33:00.0000] <Hixie>
jgraham: ah, good to know, didn't realise PIs would be a problem

[22:33:01.0000] <Hixie>
jgraham: fixed, retrying

[22:43:00.0000] <jgraham>
Hixie: Yeah, it has no idea how to serialize them. That could be seen as a bug

[22:43:01.0000] <jgraham>
/me -> sleep

[22:43:02.0000] <Hixie>
nn

[22:43:03.0000] <Hixie>
(that did fix it btw)

[22:58:00.0000] <boblet>
hey all, does XML (and by extension XHTML5) require lowercase element/attribute names?

[22:59:00.0000] <Hixie>
XML does not, though it is case-sensitive. All the elements in XHTML are lowercase, so it effectively does.

[22:59:01.0000] <Hixie>
elements and attributes

[23:00:00.0000] <boblet>
Hixie: All the elements in XHTML are lowercase meaning XHTML 1.x right? thanks

[23:00:01.0000] <Hixie>
meaning XHTML, any version

[23:00:02.0000] <boblet>
aah ok

[01:11:00.0000] <hsivonen>
I wonder how often the 2D canvas is used for vector drawing vs. bitmap blitting

[01:11:01.0000] <hsivonen>
also, I wonder what vector drawing use cases there are in the wild that wouldn't be more appropriate as SVG

[01:13:00.0000] <hsivonen>
what ojan said in IRC logs about SVG name case handling scares me

[01:13:01.0000] <hsivonen>
I wish Chrome just did what Firefox does (which is spec-wise right) and now try to invent new behaviors

[01:35:00.0000] <hsivonen>
/me sees "Our mission is to create the semantic web." in an HTML WG bug comment

[02:03:00.0000] <zcorpan>
Hixie: i think the websocket garbage collection rules might need tweaking now that message can't be fired in CLOSING (can error be fired in CLOSING?)

[02:06:00.0000] <zcorpan>
Hixie: i think i see more typos in r6798 (s/the// s/it/if/)

[02:07:00.0000] <Ms2ger>
zcorpan, filed

[02:14:00.0000] <hsivonen>
maybe I should email ojan with references to relevant Gecko bugs to avoid a situation where Chrome just proceeds to make stuff up

[02:27:00.0000] <Ms2ger>
glwt

[02:32:00.0000] <Ms2ger>
gsnedders, I believe the conclusion was "What the hell? We don't want to implement that"

[06:08:00.0000] <JakeA>
Anyone know why — in html comments are still disallowed?

[06:09:00.0000] <JakeA>
Stupid auto correct, I mean -- of course

[06:09:01.0000] <Ms2ger>
It is allowed now, IIRC

[06:10:00.0000] <Ms2ger>
Hmm, I'm wrong

[06:10:01.0000] <Ms2ger>
Not sure

[06:11:00.0000] <Ms2ger>
Because that breaks in some browser versions, perhaps

[06:11:01.0000] <JakeA>
Wonder if there's a particular faulty browser that goes nuts, or if it just wasn't considered to be relaxed

[06:11:02.0000] <JakeA>
yeah

[06:12:00.0000] <Ms2ger>
Firefox < 4, I think?

[06:12:01.0000] <Ms2ger>
Some versions of Opera as well, I suspect

[06:12:02.0000] <zcorpan>
we generally want legal trees to be serializable in both text/html and xml

[06:13:00.0000] <zcorpan>
but i guess it will be changed at some point

[06:13:01.0000] <JakeA>
Makes sense, I guess it should be covered by the error handling, maybe already is

[06:14:00.0000] <JakeA>
Cheers guys

[07:06:00.0000] <bga_>
how easy http://www.youtube.com/watch?v=FNWcy8S2k4Y

[07:06:01.0000] <bga_>
like flexbox

[08:05:00.0000] <zcorpan>
is automatically resizable textarea solved already by css.next ?

[09:25:00.0000] <Hixie>
hsivonen: http://www.w3.org/Bugs/Public/show_bug.cgi?id=14596#c3

[09:45:00.0000] <annevk>
Hixie, I think we should remove FF now from WebVTT, I know you don't care, but I do a little bit

[09:51:00.0000] <Hixie>
annevk: why?

[09:52:00.0000] <Hixie>
annevk: it's a pain to do (e.g. means implementors and i have to duplicate their definitions of "skip whitespace", "space character", etc)

[09:52:01.0000] <Hixie>
annevk: what's the benefit?

[12:40:00.0000] <Ms2ger>
Hmm, Hixie fixed bug 1462814628

[12:41:00.0000] <oconnore>
is there an html5lib fork compatible with python3?

[12:41:01.0000] <oconnore>
I pulled from: https://github.com/mikexstudios/html5lib-python

[12:41:02.0000] <oconnore>
er.. cloned

[12:43:00.0000] <Ms2ger>
oconnore, yeah, but it's rather out of date

[12:44:00.0000] <oconnore>
Ms2ger: what would you use that is up to date?

[12:44:01.0000] <Ms2ger>
The python2 version

[12:44:02.0000] <oconnore>
hmm, python people are so weird...

[12:44:03.0000] <oconnore>
ok

[12:45:00.0000] <Ms2ger>
Lots of work, little benefit..

[12:46:00.0000] <oconnore>
utf8 by default is pretty spiffy :)

[12:46:01.0000] <oconnore>
is that github link a reasonably up to date python 2 version?

[12:47:00.0000] <hober>
whoa, confusing nick :)

[12:47:01.0000] <Ms2ger>
http://code.google.com/p/html5lib/

[12:47:02.0000] <oconnore>
uploaded jan 2010?

[12:58:00.0000] <heycam>
jamesr, ping

[13:01:00.0000] <gsnedders>
oconnore: Expect html5lib to start working with Python3 again within a week

[13:02:00.0000] <Ms2ger>
Oh?

[13:02:01.0000] <gsnedders>
http://code.google.com/p/html5lib/issues/detail?id=187

[13:02:02.0000] <gsnedders>
Most of the work was done by jgraham ages ago, it's just we've regressed 2to3 making something useful

[13:05:00.0000] <Ms2ger>
Philip`, you don't happen to have time to have a look at http://www.w3.org/Bugs/Public/show_bug.cgi?id=14356 ?

[13:06:00.0000] <gsnedders>
I'm just in general planning on trying to crack through as many html5lib issues as possible after all my work due in tomorrow is done

[13:06:01.0000] <gsnedders>
Speaking of which, I should do some of that :)

[13:13:00.0000] <dglazkov>
Hixie: are you coming to webapps?

[13:14:00.0000] <annevk>
Hixie: so the reason to remove FF is because cache manifests don't have it either

[13:14:01.0000] <annevk>
Hixie: if you think we should have FF we should add it to cache manifests I suppose

[13:25:00.0000] <oconnore>
gsnedders: thanks!

[13:30:00.0000] <jamesr_>
heycam, pong

[13:30:01.0000] <heycam>
jamesr_, hey. I'm at TPAC, I'm going to be meeting with the Web Perf WG in half an hour.

[13:30:02.0000] <heycam>
jamesr_, and I've been ignore raf for a while :)

[13:30:03.0000] <jamesr_>
cool! i'm not able to attend any TPAC stuff this round

[13:30:04.0000] <heycam>
jamesr_, so just wanted to check in and see what the status is

[13:30:05.0000] <jamesr_>
heycam, there are open issues on RAF, but afaik nothing about it to be resolved at TPAC

[13:30:06.0000] <heycam>
jamesr_, yeah I would be reluctant to resolve things here

[13:30:07.0000] <jamesr_>
/me finds the list of open issues

[13:31:00.0000] <jamesr_>
any idea where i could find it?

[13:36:00.0000] <heycam>
yeah, hang on

[13:36:01.0000] <heycam>
http://www.w3.org/2010/webperf/track/products/5

[13:36:02.0000] <jamesr_>
heycam, i don't think there are any open editorial issues. the open issues are behavior things that we need to hash out w/ vendors and are all basically waiting for feedback

[13:36:03.0000] <heycam>
yes

[13:36:04.0000] <jamesr_>
i haven't been able to provide the implementor feedback for chromium on them, been busy doing other things

[13:36:05.0000] <heycam>
there was one specifically you said you were going to experiement with

[13:36:06.0000] <heycam>
which I think was the running animations at all in bg tabs

[13:36:07.0000] <jamesr_>
yes. i have had some talks with jquery guys about that offline

[13:36:08.0000] <heycam>
ok

[13:36:09.0000] <jamesr_>
the last discussion was mostly about jquery behaving badly

[13:36:10.0000] <jamesr_>
but the current text in the spec matches what MS and we would prefer

[13:36:11.0000] <heycam>
ok

[13:36:12.0000] <jamesr_>
gecko had a different implementation, but i think the main motiviation was jquery behavior which has since changed

[13:36:13.0000] <jamesr_>
so i asked the jquery guys (paul) to experiment a bit and see if they had feedback

[13:36:14.0000] <heycam>
yeah, i didn't see explicit message from boris about being ok with it though

[13:36:15.0000] <jamesr_>
right

[13:37:00.0000] <jamesr_>
my hope is that paul can make a definitive statement at some point that jquery would be OK or not OK with this behavior

[13:37:01.0000] <jamesr_>
and then re-raise the issue on the list

[13:37:02.0000] <heycam>
ok

[13:37:03.0000] <heycam>
wrt the monotonic clock, I think everyone agrees to include it

[13:37:04.0000] <heycam>
not sure whether it should live in this spec or not

[13:37:05.0000] <jamesr_>
the other open issue is about the timestamp parameter. due to some implementation issues we haven't been able to experiment with that yet, so i don't have a concrete proposal to raise yet

[13:37:06.0000] <jamesr_>
right

[13:37:07.0000] <jamesr_>
we need to have a normative reference in some location TBD

[13:37:08.0000] <heycam>
yeah

[13:37:09.0000] <jamesr_>
i think tonyg might have wanted to raise that somewhere within WebPerf

[13:37:10.0000] <heycam>
when you say about the timestamp parameter, do you just mean whether that is also referring to a monotonic clock?

[13:37:11.0000] <jamesr_>
which woudl be fine with me

[13:37:12.0000] <jamesr_>
yes

[13:37:13.0000] <heycam>
i think there was the issue of whether the time there represents the next sample time, or the "current" time, or what

[13:37:14.0000] <heycam>
or whether that matters

[13:37:15.0000] <jamesr_>
ah yeah

[13:37:16.0000] <jamesr_>
or whether to provide multiple values

[13:37:17.0000] <jamesr_>
i think we want to be consistent with CSS animation APIs

[13:37:18.0000] <jamesr_>
once those exist

[13:37:19.0000] <heycam>
ok :)

[13:37:20.0000] <jamesr_>
but i don't think dino has a concrete proposal there yet

[13:37:21.0000] <jamesr_>
so it's hard to say

[13:37:22.0000] <jamesr_>
would rather try to get the script-based and CSS-based animation APIs in sync

[13:37:23.0000] <heycam>
that would be good

[13:37:24.0000] <heycam>
not sure if dean has made progress on a proposal

[13:38:00.0000] <heycam>
what do you think about the comment about worrying about 59Hz screens?

[13:38:01.0000] <heycam>
in response to the issue about a submillisecond clock

[13:38:02.0000] <jamesr_>
well 60hz doesn't map to an integer number of milliseconds

[13:38:03.0000] <jamesr_>
i'd prefer to use a submillisecond precision clock, which implies not using DOMTimeStamp

[13:38:04.0000] <jamesr_>
because DOMTimeStamp has to be integer milliseconds for legacy reasons

[13:43:00.0000] <heycam>
so a Number isn't sufficient resolution?

[13:43:01.0000] <jamesr_>
number is fine

[13:43:02.0000] <heycam>
ah ok

[13:43:03.0000] <heycam>
I didn't see anyone object to having submillisecond resolution

[13:43:04.0000] <heycam>
so let's just do that

[13:43:05.0000] <heycam>
being able to handle 59Hz exactly doesn't seem as important

[13:43:06.0000] <jamesr_>
yeah that's fine. milliseconds since when is the issue

[13:43:07.0000] <jamesr_>
since unix epoch has issues when the system clock is adjusted

[13:43:08.0000] <jamesr_>
which is why i'd prefer to use a timebase like user timing does

[13:43:09.0000] <heycam>
yes

[13:43:10.0000] <heycam>
i think document start time or whatever is fine, nobody objected to that in the end, i think

[13:43:11.0000] <heycam>
and the final issue is the element argument to raf

[13:43:12.0000] <heycam>
and I think you were just going to add that to the spec

[13:43:13.0000] <jamesr_>
well no

[13:43:14.0000] <heycam>
no?

[13:43:15.0000] <jamesr_>
we didn't agree on behavior

[13:43:16.0000] <heycam>
maybe i misread

[13:43:17.0000] <heycam>
ok

[13:43:18.0000] <jamesr_>
i dunno what to do there. boris and i thought it should do different things :)

[13:43:19.0000] <heycam>
then should we just leave it off for now?

[13:43:20.0000] <jamesr_>
yeah

[13:43:21.0000] <jamesr_>
leave the issue open, have no spec text

[13:43:22.0000] <heycam>
ok

[13:43:23.0000] <jamesr_>
which is what the current spec text does

[13:43:24.0000] <heycam>
yep

[13:43:25.0000] <heycam>
not a blocking issue then

[13:43:26.0000] <jamesr_>
has an editorial note referencing the issue but no normative text

[13:43:27.0000] <heycam>
ok cool. so i'll relay all this to the group.

[13:43:28.0000] <heycam>
not sure if you wanted to call in :)

[13:43:29.0000] <jamesr_>
don't think i'll be able to

[13:43:30.0000] <heycam>
ok

[13:43:31.0000] <jamesr_>
but i don't think any of the open issues can/should be resolved at the f2f, although if anyone comes up with proposals and posts them to the list i'd be happy to discuss there or make edits as appropriate

[13:43:32.0000] <jamesr_>
but mostly i think everything's waiting for some external action

[13:43:33.0000] <heycam>
yes ok

[13:44:00.0000] <heycam>
feel free to hang in irc on #webperf though

[13:44:01.0000] <jamesr_>
in channel - will try to check it

[13:44:02.0000] <jamesr_>
if you ping here i'll be more likely to see it

[13:45:00.0000] <heycam>
k

[14:48:00.0000] <heycam>
jamesr_, so it seems no minutes were taking during that session :) but I think people were ok with the current state of those issues in general, seems people were in favour of having a separate spec defining the monotonic clock for raf to reference

[14:48:01.0000] <heycam>
jamesr_, so i made sure no decisions were made, but the room had consensus. jatinder will mail to the list with what we discussed so that you and others can respond.

[14:49:00.0000] <jamesr_>
heycam, sounds good

[15:29:00.0000] <dglazkov>
mutation events are hard.

[15:29:01.0000] <dglazkov>
/me suggests shopping

[15:29:02.0000] <Ms2ger>
Or something Component Modelish?

[15:30:00.0000] <dglazkov>
:D

[16:01:00.0000] <roc>
Hixie: we need to make some changes to the spec for plugin instantiation for Web compatibility ... would you prefer a W3C bug or a WHATWG email?

[16:01:01.0000] <Hixie>
either's fine by me

[16:01:02.0000] <Hixie>
what's the change?

[16:02:00.0000] <roc>
we need to not instantiate display:none plugins, basically

[16:02:01.0000] <roc>
no browser does that, and doing it breaks the Web

[16:02:02.0000] <Hixie>
<embed>, <object>, and <applet>?

[16:02:03.0000] <roc>
I've only tested <embed>

[16:03:00.0000] <roc>
there are a details to be worked out

[16:03:01.0000] <Hixie>
send mail, sounds like it'll need discussion

[16:03:02.0000] <Hixie>
bug is better for quick things

[16:03:03.0000] <roc>
OK

[16:05:00.0000] <zcorpan>
roc: what broke?

[16:05:01.0000] <roc>
https://bugzilla.mozilla.org/show_bug.cgi?id=697651

[16:11:00.0000] <jgraham>
Hmm, I thought we had changed some behaviour here recently, but maybe I am wrong

[16:12:00.0000] <roc>
Maybe you did, but I tested 11.52

[16:13:00.0000] <Hixie>
jgraham: in the spec, or opera?

[16:13:01.0000] <Hixie>
i seem to recall this topic has been discussed before, but off-hand i can't remember what the exact discussion was

[16:14:00.0000] <zcorpan>
afaik opera hasn't changed its behavior around display:none plugins

[16:16:00.0000] <jgraham>
Oh, maybe we didn't change then :) I remember discussion about this case at least

[16:16:01.0000] <jgraham>
And web-compat concerns

[16:16:02.0000] <jgraham>
Hixie: In Opera

[16:17:00.0000] <jgraham>
(so possibly we dropped the ball around reporting a spec bug; if so I apologise)

[16:19:00.0000] <zcorpan>
i remember discussing it also, but we didn't have any new information as a basis to file a spec bug, iirc

[16:21:00.0000] <zcorpan>
so now we know of one site that breaks

[16:21:01.0000] <zcorpan>
and it's a google site?

[16:34:00.0000] <roc>
yeah

[16:34:01.0000] <roc>
note though, our patch that makes display:none plugins run hasn't even landed yet

[16:35:00.0000] <roc>
this is just something one of our developers found with the patch applied locally

[16:35:01.0000] <roc>
and given no browsers instantiate display:none plugins right now, I doubt we were lucky enough to find the only broken site

[16:36:00.0000] <zcorpan>
ah, ok

[16:47:00.0000] <jamesr_>
roc, webkit hasn't been capable of instantiating display:none plugins for a very long time

[16:47:01.0000] <jamesr_>
but i thought firefox was

[16:47:02.0000] <roc>
no

[16:47:03.0000] <roc>
we never have

[16:47:04.0000] <jamesr_>
ah ok. we'll keep not doing it then

[16:47:05.0000] <jamesr_>
easy enough

[16:47:06.0000] <jamesr_>
although it feels like a layering violation (style changes plugin loading?). compat > purity

[16:47:07.0000] <roc>
grrrrrrr my brain can't keep jamesr and jgraham separated

[16:47:08.0000] <rillian_>
if only they used nicks derived from their names :)

[16:49:00.0000] <roc>
jamesr: there is some weirdness, like if you make the element temporarily display:none and flush layout, that doesn't cause the plugin to be reinstantiated (on any browser)

[16:49:01.0000] <roc>
oh wait

[16:49:02.0000] <roc>
I didn't actually test that properly

[16:49:03.0000] <jamesr_>
yeah - if you set a classname on a parent but don't trigger a style recalc, then we won't know it's display:none

[16:49:04.0000] <jamesr_>
in webkit it depends on exactly how you set things

[16:50:00.0000] <jamesr_>
i think writing to style.display will immediately kill the plugin

[16:50:01.0000] <jamesr_>
but would have to test to be sure

[16:51:00.0000] <roc>
ugh

[16:52:00.0000] <jamesr_>
because of details of our style resolution process that should never be observable

[16:52:01.0000] <roc>
temporarily setting display:none and then flushing (and setting display:none back) reinstantiates the plugin in Firefox, Opera and Chrome

[16:52:02.0000] <roc>
that's deplorable

[16:52:03.0000] <roc>
that should just be fixed

[16:55:00.0000] <roc>
in fact just setting style.display to none and setting it back doesn't reinstantiate in Chrome

[16:59:00.0000] <gsnedders>
roc: It seems better that when layout is flushed isn't black-box observable from script.


2011-11-02
[17:00:00.0000] <gsnedders>
IMO

[17:01:00.0000] <roc>
absolutely

[17:01:01.0000] <gsnedders>
Oh, right.

[17:01:02.0000] <gsnedders>
I misread what you wrote.

[17:02:00.0000] <gsnedders>
I missed the "and then flushing". I should go sleep.

[00:41:00.0000] <benschwarz>
foolip: !ping

[01:17:00.0000] <kennyluck>
What is the easiest way to trigger WebKit encoding mismatch reparsing ?

[01:17:01.0000] <kennyluck>
(Or does such thing exists?)

[02:04:00.0000] <foolip>
benschwarz, !pong

[02:59:00.0000] <Ms2ger>
Oh, hmm

[03:02:00.0000] <Ms2ger>
AryehGregor, could you update anolis? Looks like a full stop still gets lost in your version: https://bitbucket.org/ms2ger/dom-core/changeset/e4ce1db482f8#chg_dom-core.html_oldline7684

[03:09:00.0000] <phunkei>
hello, can someone tell me the markup for a valid (Maybe valid for the next few month) datetime on blogposts?

[03:11:00.0000] <phunkei>
A few days ago I started using the <time> tag but it seems to be deprecated already

[03:17:00.0000] <divya>
phunkei: use spans :)

[03:36:00.0000] <bga_>
http://www.youtube.com/watch?v=i2fhNVQPb5I

[04:17:00.0000] <Ms2ger>
<zcorpan> i carefully read every email i receive, several times, then backwards, then in random order following any references

[04:17:01.0000] <gsnedders>
That guy is *smart*.

[04:43:00.0000] <Ms2ger>
http://quotes.burntelectrons.org/157

[04:56:00.0000] <gsnedders>
/me mumbles something about host objects and getters

[04:56:01.0000] <Ms2ger>
Can we just for back to .item()?

[04:56:02.0000] <Ms2ger>
for?

[04:57:00.0000] <Ms2ger>
/me can't tpye

[05:23:00.0000] <foolip>
Mike[tm], http://dev.w3.org/html5/spec/the-iframe-element.html#the-video-element is on the wrong page, can you update the W3C spec splitter to fix?

[06:43:00.0000] <boblet>
I can’t see <time> in #obsolete. is that intentional?

[06:43:01.0000] <boblet>
s/#obsolete/obsolete.html#obsolete/

[06:45:00.0000] <annevk>
it was not in a previous HTML iteration

[06:47:00.0000] <gsnedders>
What's an iteration?

[06:47:01.0000] <gsnedders>
Like, given the fact WHATWG now publishes a single Living Standard, what justifies something being obsolete?

[06:47:02.0000] <boblet>
annevk: aah, suspected so. so treated as a <span> equivalent, with @datetime and @pubdate ignored, amirite? Btw, how is this going to work for the Living Standard spec in the future?

[06:48:00.0000] <boblet>
oh. what he said :)

[06:48:01.0000] <annevk>
boblet, I suspect it depends on the stability level of the feature

[06:48:02.0000] <annevk>
boblet, <time> never made it past Last Call or so

[06:49:00.0000] <zcorpan>
the Living Standard doesn't have Last Calls

[06:49:01.0000] <annevk>
zcorpan, its sections do

[06:49:02.0000] <boblet>
annevk: spec stability rather than browser implementation? hmm, I would have guessed the latter, and was wondering if it was two implementations or something

[06:50:00.0000] <boblet>
browser uptake reflecting reality etc etc

[06:50:01.0000] <annevk>
e.g. the Window object is marked as "Implemented and widely deployed"

[06:50:02.0000] <annevk>
were we to remove it I would expect that to be noted somewhere

[06:51:00.0000] <annevk>
now not all of these markers are up to date so there's still some room for confusion

[06:51:01.0000] <annevk>
it's also not all figured out

[07:29:00.0000] <adactio>
If <time> is being dropped in favour of a more general <data> element, what is the justification for keeping <nav>, <aside> and <article> ....surely the more general <section> should suffice, by the same logic?

[07:30:00.0000] <adactio>
 (in particular, distinguishing when to use <section> and when to use <article> is something that WHATWGers can't agree on, let alone web developers)

[07:31:00.0000] <digger3>
applying similar reasoning to any hierarchy of elements will collapse it to the most general element.

[07:31:01.0000] <digger3>
This isn't even too far off proposing that 1984's newspeak was on too something (yes this is a pseudo-Godwin)

[07:32:00.0000] <adactio>
But in the specific case of sectioning content, why is more than one element needed?

[07:34:00.0000] <digger3>
adactio: the additional semantic information needs to support a requirement either grounded in markup or automated information extraction. I'm assuming ththat this holds fothe more specific sectioning elements

[07:36:00.0000] <adactio>
digger3: then why doesn't that logic apply to <time>? There's the generic <data> (just like <section>) and then the more specific <time> (just like <article> or <aside>). The existence of <data> doesn't negate the need for <time> any more than the existence of <section> negates the need for <aside> (for exactly the parsing reasons you mention).

[07:39:00.0000] <digger3>
adactio: that argument is perfectly valid, it was certainly not my intention to contest _that_

[07:40:00.0000] <adactio>
Could anyone else explain it to me then? annevk? hsivonen? gsnedders? anyone? bueller?

[07:43:00.0000] <annevk>
adactio, I don't really think there's an analogy to be made between structural elements and an element designed to made a concept machine readable

[07:43:01.0000] <foolip>
adactio, AFAIK <article> and friends were added as convenient styling hooks based on common class values

[07:43:02.0000] <foolip>
while the purpose of <time> was for use in microformats and such

[07:43:03.0000] <foolip>
it may be that people are just using it for styling, though

[07:44:00.0000] <adactio>
annevk: You don't consider part of the reason for the existence of sectioning content is to allow machine parsing? (e.g. skip navigation)

[07:46:00.0000] <adactio>
To be clear, I'm not arguing against the existence of <data>; I just don't think it negates the need for a more specific <time> element (in the same way that the existence of <section> doesn't mean there's no reason to have a <nav> element.

[07:46:01.0000] <adactio>
<time> is to <data> as <article>, <nav> and <aside> are to <section>.

[07:46:02.0000] <annevk>
I just don't think it's quite the same

[07:47:00.0000] <annevk>
If you need Microdata to make use of <time> then it might as well be <data>

[07:47:01.0000] <adactio>
annevk: It's not *quite* the same but it is very very similar. Both use cases have semantic (structural) value as well as machine-reading value (and to a much lesser extent, styling).

[07:48:00.0000] <annevk>
If there are other uses, they should probably be brought up as they have not been considered

[07:48:01.0000] <adactio>
annevk: But that's the point: you don't need microdata to make use of time because it's *vocabulary* is pre-set (namely ISO 8601)

[07:48:02.0000] <foolip>
it's not ISO 8601

[07:48:03.0000] <adactio>
annevk: whereas with <data>, the vocabulary is "fuck knows."

[07:48:04.0000] <foolip>
it's much more limited

[07:49:00.0000] <annevk>
adactio, see http://www.w3.org/Bugs/Public/show_bug.cgi?id=13240#c0

[07:49:01.0000] <adactio>
foolip: a subset of ISO 8601, yes. The point is: it is pre-defined.

[07:49:02.0000] <adactio>
annevk: Oh, I've seen it. Believe me, I've seen it. All. Of. It.

[07:49:03.0000] <annevk>
I mostly used <time> as a replacement for some other construct on my blog, but not sure what the purpose was

[07:49:04.0000] <webben>
adactio: One of the purposes of the specific sectioning elements is to allow the navigation and reorganisation of content (cf. the ARIA roles to which they are mapped).

[07:50:00.0000] <adactio>
webben: For that reason, I consider those elements to be machine-readable (as well as conveying semantics) ...just like <time>.

[07:51:00.0000] <webben>
adactio: Not sure what you're saying.

[07:51:01.0000] <webben>
adactio: I'm pointing to a reason why making those sectioning semantics machine-readable and part of the core vocabulary is important.

[07:53:00.0000] <adactio>
webben: and I'm not disagreeing with you. I'm pointing out that putting some elements (section, article, nav, etc.) into the bucket of "structural" while putting other elements (time) into the bucket of "machine readable" isn't a straightforward division. *All* of those elements are both semantic and machine-readable. It's not a binary thing.

[07:54:00.0000] <webben>
"structural" vs. "machine-readable" does not make sense as a distinction, I agree.

[07:55:00.0000] <digger3>
machine-readable -> machine-interpretable

[07:58:00.0000] <webben>
I can imagine <time> having a positive influence on text-to-speech, since tts has traditionally struggled to distinguish numbers from datetimes. The lead time on having important tts agents actually make use of it may be quite long however.

[08:17:00.0000] <zcorpan>
woah, why did i not know of http://blekko.com/webgrep before?

[08:23:00.0000] <Ms2ger>
Does Opera support strict mode already?

[08:24:00.0000] <annevk>
I think we implemented ES5

[08:24:01.0000] <zcorpan>
opera.next does i think

[08:24:02.0000] <boblet>
so sad I missed this conversation :)

[08:24:03.0000] <divya>
yes opera.next does

[08:26:00.0000] <Ms2ger>
Want to tell me what http://software.hixie.ch/utilities/js/live-dom-viewer/saved/1243 logs in .next, then?

[08:27:00.0000] <zcorpan>
log: wtf

[08:27:01.0000] <zcorpan>
log: wtf

[08:27:02.0000] <zcorpan>
log: wtf

[08:27:03.0000] <zcorpan>
log: wtf

[08:27:04.0000] <Ms2ger>
That's a bug, then :)

[08:27:05.0000] <Ms2ger>
But perhaps in WebIDL

[08:28:00.0000] <annevk>
/me heads to TPAC

[08:28:01.0000] <zcorpan>
yeah i think we have some bugs with webidl/dom and strict

[08:29:00.0000] <zcorpan>
e.g. setting readonly property doesn't throw TypeError iirc

[08:29:01.0000] <Ms2ger>
\o/

[08:30:00.0000] <zcorpan>
jgraham probably knows better

[08:30:01.0000] <Ms2ger>
Poke heycam about it, will you? :)

[08:33:00.0000] <zcorpan>
about what?

[08:50:00.0000] <dglazkov>
good morning, Whatwg!

[08:51:00.0000] <Ms2ger>
Good evening, dglazkov

[08:52:00.0000] <divya>
good nite dglazkov!

[08:53:00.0000] <dglazkov>
hello timezone-impaired people! :P

[08:54:00.0000] <divya>
:))

[09:07:00.0000] <_bga>
morning is not time, its state of soul

[09:07:01.0000] <_bga>
:)

[09:07:02.0000] <divya>
my soul is dark and stormy then

[09:11:00.0000] <dglazkov>
_bga++

[09:12:00.0000] <dglazkov>
and OMG does Mountain View have great mornings or what

[09:13:00.0000] <divya>
dglazkov: wai u no tpac?

[09:13:01.0000] <gsnedders>
dglazkov: Dunno. Can you get me plane tickets?

[09:14:00.0000] <dglazkov>
divya: they are doing plenareeey things in the morning. I am trying to catch up on emails and #whatwg trolling

[09:14:01.0000] <divya>
sgtm

[09:14:02.0000] <dglazkov>
gsnedders: only if it's a paper plane

[09:15:00.0000] <gsnedders>
dglazkov: hmm, might not be great over the Atlantic

[09:15:01.0000] <dglazkov>
gsnedders: :)

[09:15:02.0000] <rniwa>
dglazkov: or land patches :D

[09:15:03.0000] <zcorpan>
anyone know of a good reason why <data value> shouldn't be <global itemvalue>?

[09:16:00.0000] <dglazkov>
rniwa: :)

[09:21:00.0000] <foolip>
zcorpan, don't you already know?

[09:22:00.0000] <divya>
zcorpan: you should check the 100,000 messages on the mailing list because it will surely contain an answer to that question

[09:23:00.0000] <foolip>
zcorpan, worst case scenario would be <time datetime="" itemvalue=""> where the itemValue reflection can be 3 different things

[09:25:00.0000] <zcorpan>
divya: pointer?

[09:25:01.0000] <divya>
zcorpan: i was snarking :P

[09:26:00.0000] <divya>
its what is the default recommendation :PPP

[09:26:01.0000] <divya>
(also how broak it is that you need to search mailing list for rationale :/ )

[09:26:02.0000] <zcorpan>
foolip: yeah, that's true. could disallow it for elements that don't reflect to their textContent by default, maybe

[09:26:03.0000] <foolip>
zcorpan, disallow it, of course, but how should it be implemented?

[09:26:04.0000] <Ms2ger>
divya, there's a wiki page you can add to :)

[09:27:00.0000] <divya>
Ms2ger: o? where?

[09:27:01.0000] <divya>
that whatwg wiki?

[09:27:02.0000] <zcorpan>
foolip: ignore itemvalue?

[09:27:03.0000] <Ms2ger>
Yep

[09:27:04.0000] <gsnedders>
divya: Running svn blame on the spec, seeing if there's a bug mentioned in commit message when text you're interested in changed, or searching mailing lists for emails from Hixie around then tends to work

[09:27:05.0000] <foolip>
zcorpan, in other words, add it in the otherwise clause of http://www.whatwg.org/specs/web-apps/current-work/multipage/microdata.html#dom-itemvalue ?

[09:28:00.0000] <zcorpan>
gotta go. next stop: örebro c

[09:29:00.0000] <divya>
gsnedders: :'( its so tedious

[09:30:00.0000] <foolip>
divya, what change do you want to know about?

[09:31:00.0000] <foolip>
if it's just that svn is slow, I maintain https://gitorious.org/whatwg/webapps pretty much only for this purpose

[09:31:01.0000] <divya>
foolip: nothing just generally complaining how it takes a while to figure out why a certain feature exists in the form it does.

[09:31:02.0000] <divya>
/me should shut up now

[09:31:03.0000] <foolip>
that it does

[09:31:04.0000] <divya>
foolip: ooo i did not know about that gitorious!

[09:32:00.0000] <divya>
omg amazing

[09:32:01.0000] <divya>
at least its not too bad

[09:32:02.0000] <foolip>
sometimes it's possible to git bisect your way to the right commit, sometimes not

[09:54:00.0000] <boblet>
this may be of interest to some of you: http://html5doctor.com/time-and-data-element/

[09:54:01.0000] <AryehGregor>
Ms2ger, how do I do that again?  It's been so long that I've forgotten.

[09:54:02.0000] <boblet>
although possibly not by now :)

[09:55:00.0000] <Ms2ger>
hg pull -u in your source folder

[09:55:01.0000] <Ms2ger>
and sudo python setup.py install, IIRC

[09:56:00.0000] <AryehGregor>
Printed out a bunch of stuff that doesn't look like errors.

[09:56:01.0000] <AryehGregor>
I guess we'll see if it works.

[09:56:02.0000] <Ms2ger>
Heh

[10:02:00.0000] <digger3>
boblet: excellent story and considerations

[10:03:00.0000] <boblet>
digger3: thank you. it’s all due to annevk5 and foolip’s excellent feedback :)

[10:19:00.0000] <MikeSmith>
dglazkov: did anybody get back to you about the room yet?

[11:25:00.0000] <dglazkov>
Mike[tm]: yus

[11:26:00.0000] <dglazkov>
In addition, I managed to misplace, panic about it, and recover the key to the room in about 10 minutes.

[11:27:00.0000] <dglazkov>
excellent fodder for your next nightmare

[11:27:01.0000] <MikeSmith>
heh

[11:35:00.0000] <MikeSmith>
abarth: I just switched on your commit perms for http://dvcs.w3.org/hg/content-security-policy

[11:35:01.0000] <abarth>
thanks!

[11:35:02.0000] <MikeSmith>
please try it and make sure it works

[11:39:00.0000] <abarth>
abort: authorization failed

[11:39:01.0000] <abarth>
maybe i have the wrong password

[11:40:00.0000] <MikeSmith>
abarth: it should be the same username and password as your W3C web login

[11:40:01.0000] <MikeSmith>
we use the same ldap db for both

[11:40:02.0000] <abarth>
success!

[11:40:03.0000] <abarth>
thanks

[11:40:04.0000] <MikeSmith>
cheers

[12:15:00.0000] <Ms2ger>
Oh, look

[12:15:01.0000] <Ms2ger>
testharness.js' logging in broken in XHTML documents

[12:15:02.0000] <Ms2ger>
Guess why

[12:20:00.0000] <bhearsum>
does HTML5 support 'put', 'delete', and other methods on forms? if so, which browsers have support for it?

[12:20:01.0000] <bhearsum>
hmm, i can probably test this myself

[12:21:00.0000] <Ms2ger>
Hi bhearsum

[12:21:01.0000] <bhearsum>
hi Ms2ger :)

[12:22:00.0000] <Ms2ger>
HTML supported it for a while, IIRC, but it was removed for lack of use cases

[12:22:01.0000] <bhearsum>
doesn't look like HTML5 supports it, either, based on http://www.whatwg.org/specs/web-apps/current-work/multipage/forms.html#the-form-element and it not validating with http://html5.validator.nu/

[12:30:00.0000] <Hixie>
so which room are people in at tpac?

[12:54:00.0000] <hober>
component model at 1:30 in room 1234

[13:11:00.0000] <MikeSmith>
Ms2ger: that may be the cause of some problem I had with running the DOM4 test suite

[13:11:01.0000] <Ms2ger>
That's where it hit me

[13:12:00.0000] <Ms2ger>
All the xhtml tests time out

[13:28:00.0000] <jgraham>
Ms2ger: Oh. I thought I fixed that for the SVG folks

[13:28:01.0000] <jgraham>
But I guess AryehGregor broke it again

[13:28:02.0000] <jgraham>
Should add a TC

[13:47:00.0000] <annevk>
so if you set <textarea>'s raw value to \r\n you get \r\r\n?

[13:48:00.0000] <annevk>
on submission

[14:08:00.0000] <AryehGregor>
jgraham, does the test harness itself have a test suite to detect breakage, that I should run to check that any changes of mine are correct?

[14:12:00.0000] <jgraham>
AryehGregor: The apisample files

[14:12:01.0000] <jgraham>
I think there is one bug there at the moment

[14:12:02.0000] <AryehGregor>
/me notes for the future

[14:12:03.0000] <jgraham>
(they don't all say "PASS", you have to read the description)

[14:20:00.0000] <AryehGregor>
jgraham, you should make a README or HACKING file or something with instructions on how to write patches/test they're correct/get review/etc.

[14:23:00.0000] <jgraham>
AryehGregor: Good idea

[16:30:00.0000] <Salt>
whatwg is to w3, as ?

[16:31:00.0000] <kennyluck>
www-style is to the CSS working group.

[16:33:00.0000] <Salt>
officially watched public channel?

[16:38:00.0000] <Salt>
or is it a publicly accessible official channel?

[16:40:00.0000] <kennyluck>
Salt, it's a public mailing list.

[16:41:00.0000] <kennyluck>
I am talking about www-style.

[16:41:01.0000] <Salt>
www-style is somewhat official watched

[16:52:00.0000] <jgraham>
So how upset are people oing to get if we start asking for a (possibly coarse-grained) url for the part of the spec being tested in testharness tests?


2011-11-03
[17:12:00.0000] <jgraham>
(I think my approach would be to make it very easy to not do and have the people who want the data fill in the gaps)

[19:55:00.0000] <Hixie>
wtf

[19:55:01.0000] <Hixie>
http://software.hixie.ch/utilities/js/live-dom-viewer/saved/1246

[19:56:00.0000] <Hixie>
<!DOCTYPE html><script>window.addEventListener('click', function (event) {w(event);}. true);</script><p>TEST

[19:56:01.0000] <Hixie>
am i wrong that clicking on TEST should invoke w() ?

[19:56:02.0000] <Hixie>
oh dear lord

[19:56:03.0000] <Hixie>
/me sees a comma that is really a period

[20:02:00.0000] <wilhelm>
"ACTION: Mary Brady get NIST to submit the 1,000,000 test cases Wilhelm said we will need for HTML5 [recorded in http://www.w3.org/2011/11/02-tpac-minutes.html#action01]" … Apparently my work here is done.

[20:02:01.0000] <wilhelm>
/me plays Transport Tycoon instead.

[01:15:00.0000] <zcorpan>
shouldn't the quotes thing use :lang(foo) > q ?

[03:07:00.0000] <zcorpan>
what happened to https://github.com/sideshowbarker/console-object ? http://www.w3.org/Bugs/Public/show_bug.cgi?id=10694

[04:58:00.0000] <annevk>
sigh

[05:04:00.0000] <zcorpan>
annevk: ?

[05:10:00.0000] <annevk>
zcorpan: it's 5AM

[05:13:00.0000] <zcorpan>
ah

[05:16:00.0000] <smaug____>
there are good reasons to not travel

[05:17:00.0000] <smaug____>
(though, sounds like it has been great fun in TPAC, and more interesting than last year)

[05:19:00.0000] <boblet>
does anyone remember if there was an attribute for article revision dates, similar to @pubdate? I heard talk of @revdate, but can’t seem to find any mention of it (specifically why it was dropped)

[05:20:00.0000] <annevk>
unconference made it good

[05:20:01.0000] <annevk>
group meetings are not that great though

[05:23:00.0000] <boblet>
also, git log -S is damn slow on webapps repo :)

[05:26:00.0000] <smaug____>
annevk: has there been any discussion about implementation status of webidl

[05:27:00.0000] <annevk>
not much; some people are going to work on a test suite though I believe

[06:10:00.0000] <foolip>
boblet, I don't think revdate has ever existed

[06:11:00.0000] <boblet>
foolip: yeah I couldn’t find any mention of it either. btw thanks for the git mirror of webapps :) cool seeing those 2006 commits

[06:12:00.0000] <foolip>
boblet, since log -S is so slow, sometimes git bisect is faster if you want to figure out when something was added/removed, but then you need to find a point before and after first

[06:13:00.0000] <boblet>
foolip: luckily Hixie’s commit msgs are pretty informative, so git log --grep has been working for me (much faster)

[06:14:00.0000] <foolip>
right, that should work a lot of the time

[08:15:00.0000] <zcorpan>
is the DOMException "type" exposed to scripts?

[08:16:00.0000] <zcorpan>
/me looks at webidl

[08:18:00.0000] <zcorpan>
.name

[08:24:00.0000] <linclark>
foolip: is there a bug with http://foolip.org/microdatajs/live right now?

[08:24:01.0000] <linclark>
foolip: I'm not getting any results for this snippet

[08:24:02.0000] <linclark>
http://pastebin.com/iBWKxig2

[08:24:03.0000] <foolip>
linclark, of course, but none that I know of :)

[08:25:00.0000] <foolip>
wfm, which browser are you using?

[08:25:01.0000] <linclark>
Chrome.... which, now that you mention it has been having problems with YouTube's JS since I updated it

[08:26:00.0000] <foolip>
works in Chromium for me too

[08:27:00.0000] <foolip>
does the error console say anything?

[08:27:01.0000] <linclark>
I just closed out Chrome to see if restarting would help, it's working in FF for me

[08:27:02.0000] <linclark>
I'll let you know when I open Chrome back up

[08:27:03.0000] <foolip>
ok

[08:27:04.0000] <scor>
works in both chrome and FF for me

[08:28:00.0000] <linclark>
Uncaught TypeError: Object name has no method 'each'

[08:28:01.0000] <linclark>
must be something with my Chrome

[08:29:00.0000] <scor>
works with fresh chrome 15.0.874.106

[08:29:01.0000] <scor>
https://skitch.com/scor/gf3nh/about-google-chrome

[08:32:00.0000] <linclark>
scor: I believed you ;)

[08:33:00.0000] <scor>
/me has been overskitching lately...

[08:43:00.0000] <linclark>
foolip: just FYI, it was a hiccup in Chrome. working now

[08:43:01.0000] <foolip>
good good

[09:09:00.0000] <kennyluck>
Is reading the error message the only way how you test what kind of error IE throws?

[09:11:00.0000] <michel_v>
w3

[09:12:00.0000] <michel_v>
whoops, keyboard mistake. please don't sink my battleship.

[09:17:00.0000] <foolip>
zcorpan, does the latest bid on http://www.w3.org/Bugs/Public/show_bug.cgi?id=14260 sound good to you?

[09:20:00.0000] <Hixie>
latest bid, heh

[09:21:00.0000] <zcorpan>
foolip: do if i do document.createElement('video') and append tracks, those won't block playback since the element was empty at creation time?

[09:22:00.0000] <foolip>
yeah

[09:22:01.0000] <zcorpan>
not sure i like that

[09:22:02.0000] <foolip>
I'm not sure either

[09:22:03.0000] <zcorpan>
now i really have to go.

[09:22:04.0000] <foolip>
not sure what I would like, though

[09:24:00.0000] <Hixie>
we could say that you also set the list when the element is inserted into the document

[09:25:00.0000] <Hixie>
but that would only help if the script doesn't try to start playback until after that happens

[09:26:00.0000] <smaug____>
 /> should not be used in html, right ?

[09:26:01.0000] <smaug____>
just <input>, not <input/>

[09:28:00.0000] <Philip`>
It's permitted on some elements but always unnecessary and confusing

[09:29:00.0000] <Philip`>
(...except on foreign (MathML/SVG) elements where it might do stuff)

[09:43:00.0000] <david_carlisle>
Hixie: I asked this the other day, but only answer I got was to ask you:-) whatwg weekly highlighted that microdata attributes don't apply to MathML. If we wanted them to apply to MathML, what would be the right course of action?

[09:43:01.0000] <Hixie>
hmm

[09:44:00.0000] <david_carlisle>
:-)

[09:44:01.0000] <Hixie>
does MathML have a DOM API?

[09:44:02.0000] <Hixie>
or does it just use Element?

[09:44:03.0000] <tantek>
/me thinks microdata (microformats, RDFa etc.) should apply to any practical markup language.

[09:44:04.0000] <david_carlisle>
It did, but th ebrowser implementers didn't really like it and just used a plain xml dom, but we could do something if it was needed

[09:45:00.0000] <Hixie>
david_carlisle: interesting

[09:45:01.0000] <david_carlisle>
so mathml2 had a dom api in chapter 8 but we pulled it in mathml3 saying it would be a separate spec if needed

[09:45:02.0000] <Hixie>
well what i really meant was "do browsers implement a DOM API for it" which i think you answered :-)

[09:45:03.0000] <Hixie>
david_carlisle: the answer then would probably depend on whether SVG wanted to add it as well

[09:46:00.0000] <Hixie>
david_carlisle: if SVG wants to add it too, then the answer is that I would just move the API to the Element node, and then define the attributes as applying to SVG and MathML in the HTML spec and the MathML and SVG specs would just need to mention in passing that the attributes are conforming, to make sure the loop was closed

[09:47:00.0000] <david_carlisle>
True, although for mathml perhaps more than svg, I think that the language should seem to the author as a unified markup for mathematical documents and the mathml/html distinction lost as far as poss

[09:47:01.0000] <shepazu>
Hixie: add microdata et al?

[09:47:02.0000] <shepazu>
or something else?

[09:47:03.0000] <Hixie>
shepazu: right (itemscope, itemtype, itemid, itemref, and itemprop)

[09:47:04.0000] <Hixie>
shepazu: global attributes

[09:47:05.0000] <shepazu>
Hixie, I think the SVG WG does want to add those, yes

[09:48:00.0000] <Hixie>
david_carlisle: from the authoring perspective it would be transparent, yeah

[09:48:01.0000] <Hixie>
shepazu: ok

[09:48:02.0000] <Hixie>
shepazu, david_carlisle: in that case i recomment filing a bug saying to add the item* attributes to SVG and MathML

[09:48:03.0000] <shepazu>
in general, we'd like to have parity with HTML features like that (for some value of "like that")

[09:48:04.0000] <shepazu>
k

[09:49:00.0000] <david_carlisle>
OK thanks

[09:49:01.0000] <shepazu>
david_carlisle: would you be so kind as to do that?

[09:49:02.0000] <Hixie>
shepazu, david_carlisle: please make sure to include in that bug a list of any elements that should be considered URL elements

[09:49:03.0000] <david_carlisle>
shepazu: yes

[09:49:04.0000] <Hixie>
shepazu, david_carlisle presumably <svg:a> and <mathml:image>, in particular

[09:49:05.0000] <Hixie>
shepazu, david_carlisle: but there's probably others too

[09:49:06.0000] <shepazu>
david_carlisle: great, please do add that you want them for SVG, not just MathML

[09:49:07.0000] <david_carlisle>
Hixie: yes although we also allow href on (more or less anything) echoes of xhtml2 don't you know:-)

[09:49:08.0000] <shepazu>
Hixie: yes, I'll try to ask the SVG WG this week about it

[09:50:00.0000] <Hixie>
david_carlisle: well for microdata you have to define for each element where the value comes from. it's usually textContent, but sometimes it's an attribute (we try to keep these to an absolute minimum)

[09:51:00.0000] <Hixie>
david_carlisle: do browsers implement href=""-everywhere?

[09:52:00.0000] <david_carlisle>
Hixie: I think it got added to firefox which is the main browser native version, and it will work in IE/Mathplayer after the next mathplayer release

[09:52:01.0000] <Hixie>
pity

[09:52:02.0000] <Hixie>
but ok

[09:53:00.0000] <david_carlisle>
the alternative (mathml2 variant) was to allow xlink:href everywhere but that wasn't overwhelmingly popular either

[09:53:01.0000] <david_carlisle>
and worked in firefox 2 but not 3 +

[09:54:00.0000] <Hixie>
the alternative is to just use <a> :-)

[09:54:01.0000] <shepazu>
<a> seems logical to me

[09:55:00.0000] <shepazu>
not much more verbose, I'd guess

[09:55:01.0000] <david_carlisle>
Anyway thanks for teh advice, i'll re-read the microdata spec before raising the bug, to try to make some coherent suggestions

[09:55:02.0000] <Hixie>
roger

[09:55:03.0000] <Hixie>
it should be pretty simple to do

[09:55:04.0000] <tantek>
/me agrees with just use <a>

[09:55:05.0000] <shepazu>
david_carlisle: please email me when you've filed it, and I'll add the SVG stuff

[09:55:06.0000] <david_carlisle>
shepazu: OK

[09:55:07.0000] <shepazu>
thanks, david_carlisle, Hixie

[09:56:00.0000] <tantek>
IMHO allowing xlink:href everywhere is already an anti-pattern (was effectively attempted in XHTML2) and should be avoided. Instead, re-use <a> as is and then all the existing logic about microdata/microformats/RDFa that applies to <a> should "just work"

[09:58:00.0000] <shepazu>
david_carlisle: is there a version of MathML that talks about HTML5 integration?

[09:58:01.0000] <shepazu>
SVG is working on such a spec

[09:58:02.0000] <stercor>
Where can I find a HTML5 template?

[09:59:00.0000] <stercor>
s/a/an/

[09:59:01.0000] <Hixie>
stercor: <!DOCTYPE HTML><title>Insert title here</title><p>Insert document here

[09:59:02.0000] <stercor>
Hixie: no head, body tags?

[10:00:00.0000] <stercor>
or <html>

[10:00:01.0000] <Hixie>
they're optional

[10:00:02.0000] <Hixie>
you can add them, but i was lazy :-)

[10:00:03.0000] <stercor>
How do I specify utf-8?

[10:00:04.0000] <Hixie>
make sure to send the HTTP Content-Type header with charset=utf-8

[10:01:00.0000] <annevk>
or <meta charset=utf-8>

[10:01:01.0000] <annevk>
before <title>

[10:01:02.0000] <shepazu>
stercor: you can also use http://html5boilerplate.com/

[10:02:00.0000] <stercor>
My script is at http://pastebin.com/4xDjk5a4 It's good for 10 min.

[10:03:00.0000] <annevk>
ok, I cannot hold it to myself

[10:03:01.0000] <stercor>
shepazu: I'll go there. Thanks.

[10:03:02.0000] <annevk>
HTML WG inner circle: HTML co-chairs and accessibility representatives (as seen in today's meeting setup)

[10:07:00.0000] <david_carlisle>
tanteck: using html's a makes a lot less sense if mathml used elsewhere or on its own

[10:07:01.0000] <shepazu>
annevk: world's got to see, see all the love, love that's in you for the HTML WG?

[10:07:02.0000] <annevk>
shepazu: just my wit, or lack thereof, depending on your perception

[10:08:00.0000] <david_carlisle>
shepazu: yes mathml 3 spec mentions this briefly http://www.w3.org/TR/MathML3/chapter6.html#interf.html

[10:08:01.0000] <shepazu>
annevk: I was just making a lame song reference, actually

[10:08:02.0000] <annevk>
the t-shirt I wear today says "HTML LOVE & PEACE", by the way

[10:09:00.0000] <shepazu>
nice

[10:09:01.0000] <annevk>
/me needs to listen to more music

[10:09:02.0000] <shepazu>
annevk: this is really old 70s stuff

[10:10:00.0000] <shepazu>
annevk: what's so funny about peace, love, and understanding?

[10:10:01.0000] <david_carlisle>
shepazu: is your svg/html integration spec draft available anywhere (could probably try to coordinate something from mml side)

[10:11:00.0000] <shepazu>
david_carlisle: http://dev.w3.org/SVG/modules/integration/SVGIntegration.html

[10:11:01.0000] <shepazu>
but it's out of date, going to be modified soon

[10:11:02.0000] <david_carlisle>
thanks

[10:12:00.0000] <shepazu>
david_carlisle: maybe you should add <a> to MathML so it works even outside HTML… and microdata would need to be added too

[10:13:00.0000] <david_carlisle>
shepazu:  well people already think mathml s rather markup heavy, if you had to wrap everything you wanted to be a link in another element it wouldn't be massively popular with mathml users, I think.

[10:15:00.0000] <shepazu>
understood, david_carlisle, but you might consider whether it should be allowed, so that content that comes from HTML would work everywhere

[10:15:01.0000] <tantek>
david_carlisle - as much as mathml users are also html authors, re-using <a> is likely to be more popular than a global (namespaced/prefixed) attribute.

[10:15:02.0000] <hober>
"i want this to be a link, so i put it in <a>" is pretty much the first thing any web author learns

[10:15:03.0000] <Ms2ger>
tantek, mathml3 href isn't namespaced, fwiw

[10:16:00.0000] <hober>
the set of mathml authors who aren't html authors isn't a very interesting set

[10:16:01.0000] <tantek>
Ms2ger - but xlink:href is ^^^^^

[10:16:02.0000] <Ms2ger>
Well, yeah, don't do that :)

[10:16:03.0000] <tantek>
and universal 'href' attribute failed already in XHTML2, so no need to repeat that mistake.

[10:16:04.0000] <tantek>
ergo … <a> ftw

[10:17:00.0000] <Ms2ger>
Well, the difference is that browsers actually implement global href for mathml

[10:17:01.0000] <shepazu>
you could simply allow both syntaxes, but specify that for MathML in HTML, only <a> "works"

[10:18:00.0000] <hober>
why diverge mathml-in-html and mathml-in-fantasyland?

[10:18:01.0000] <david_carlisle>
shepazu:  well of course mixing an html a in mathml already has defined (and unusually almost sensible:-) parse behaviour so users can already do that if they want

[10:19:00.0000] <tantek>
Ms2ger - really? So that mutant DNA from XHTML2 propagated to MathML? Sorry to hear that.

[10:19:01.0000] <david_carlisle>
hober: why mathml-in-fantasyland (there is far more mathml there than in html, currently)

[10:20:00.0000] <david_carlisle>
ODF inside openoffice for example

[10:22:00.0000] <david_carlisle>
tantek:  href= wasn't specifically from html2, it came after consulting what people would rather implement given that xlink wasn't that popular with anyone.

[10:23:00.0000] <stercor>
annevk: Hmmm...HTML5 doesn't like <?php...?>  What to do?

[10:23:01.0000] <annevk>
have it parsed by PHP first?

[10:23:02.0000] <annevk>
the output of PHP matters, not the input

[10:23:03.0000] <stercor>
Doh!

[10:24:00.0000] <stercor>
Just need to change the extension from .html to .php...

[10:24:01.0000] <annevk>
shepazu: love & peace are great, they're also slightly ironic in the context of HTML :)

[10:27:00.0000] <karlcow>
stercor: or change the way your html file are processed

[10:28:00.0000] <karlcow>
putting an extension in your uris make them weaker

[10:28:01.0000] <karlcow>
if in the future you change your technology, you will break links

[10:30:00.0000] <Hixie>
tantek: has hcard been updated to rfc6350?

[10:34:00.0000] <karlcow>
http://www.guardian.co.uk/technology/blog/2011/nov/03/will-html5-replace-native-apps?CMP=twt_gu

[10:34:01.0000] <tantek>
Hixie - working on it

[10:34:02.0000] <Hixie>
tantek: what's your plan for the XML property?

[10:34:03.0000] <Hixie>
(i'm updating the microdata vocab right now)

[10:34:04.0000] <tantek>
likely to subset based on properties with public web-based use-cases

[10:35:00.0000] <tantek>
XML property is not useful on the web

[10:35:01.0000] <Hixie>
so is your plan just to ignore the vcard requirement that vcard UAs never drop XML if they don't support it?

[10:35:02.0000] <tantek>
key additions/changes are things like "gender" (which has broad publishing support etc)

[10:35:03.0000] <Hixie>
i.e. if someone does a vcard->hcard->vcard round trip

[10:36:00.0000] <tantek>
well vcard->hcard wouldn't really be an vcard UA per se would it? that would be an hcard UA

[10:36:01.0000] <Hixie>
fair enough

[10:36:02.0000] <Hixie>
so we just say we're not "propagating vcards" when we go to hcard/microdata and so this isn't a problem

[10:36:03.0000] <Hixie>
i could get behind that

[10:36:04.0000] <Hixie>
ok

[10:37:00.0000] <tantek>
a possible sensible interpretation of vcard's XML property is to convert it to additional embedded markup inside an hcard

[10:37:01.0000] <tantek>
for the vcard->hcard direction

[10:37:02.0000] <tantek>
but for hcard->vcard, until someone documents some practical use cases, I see no reason for an xml property in hcard

[10:38:00.0000] <Hixie>
soudns good to me

[10:38:01.0000] <tantek>
Hixie, see http://microformats.org/wiki/microformats-2#h-card for my work in progress on updating hcard for RFC6350 (new/changed properties from RFC6350 and others noted)

[10:38:02.0000] <tantek>
consider that the "living spec" as it were ;)

[10:39:00.0000] <Hixie>
noted

[10:39:01.0000] <tantek>
and please do report back if you see something wrong or nonsensical

[10:44:00.0000] <Hixie>
/me learns from mf2 and flattens sex and gender-identity into top-level properties

[10:48:00.0000] <annevk>
mf2

[10:48:01.0000] <annevk>
like XHTML2 but better?

[10:48:02.0000] <Hixie>
microformats 2

[10:49:00.0000] <annevk>
looks like it is finally simpler

[10:49:01.0000] <annevk>
with implied things and such

[10:49:02.0000] <annevk>
<a class="h-card" href="http://benward.me">Ben Ward</a>

[10:49:03.0000] <tantek>
annevk - more like HTML5 in philosophy. documenting what's actually been implemented, then simplifying and adding more features for authors/designers etc.

[10:49:04.0000] <annevk>
is what I suggested informally to someone at a conference a couple of years ago

[10:49:05.0000] <annevk>
looks great

[10:49:06.0000] <tantek>
annevk - turns out you were right :)

[11:14:00.0000] <sicking>
and ECMAScript uses it

[11:14:01.0000] <sicking>
wrong window

[11:16:00.0000] <dglazkov>
/me now wonders what's the right window

[11:20:00.0000] <jgraham>
Is this jepoardy?

[11:20:01.0000] <jgraham>
We have to guess what "it" is

[11:21:00.0000] <jgraham>
/me goes for "Microsoft Word"

[11:21:01.0000] <jgraham>
;)

[11:22:00.0000] <dglazkov>
It's clear to me that by "it", sicking means character "f"

[11:24:00.0000] <sicking>
today's TPAC meeting, in collaboration with sesame street, brought to you by the letter "Q"

[11:25:00.0000] <ojan>
how's the rest of tpac going? anything exciting?

[11:25:01.0000] <ojan>
i read all the various notes on component model related stuff

[11:26:00.0000] <ojan>
sicking: on a random note, is there documentation on how mozilla uses reftests?

[11:26:01.0000] <ojan>
sicking: we're figuring out how to extend our reftest support and it woudl be good if whatever we design is mozilla reftest compatible

[11:27:00.0000] <sicking>
ojan: http://lmgtfy.com/?q=mozilla+reftest  ;-)

[11:27:01.0000] <ojan>
ojan--

[11:27:02.0000] <sicking>
haha

[11:27:03.0000] <ojan>
sometimes i still forget that i work on and with open source projects

[11:28:00.0000] <sicking>
sorry, i couldn't help myself :)

[11:28:01.0000] <ojan>
nah...well deserved

[11:29:00.0000] <sicking>
ojan: lots of good meetings at TPAC this year though

[11:30:00.0000] <ojan>
sicking: yeah, i felt that monday and tuesday were very productive

[11:30:01.0000] <astearns>
AFAIK mozilla is moving away from the manifest (reftest.list) in favor of metadata in the test that the test harness uses to construct the manifest

[11:30:02.0000] <ojan>
i certainly don't regret going

[11:30:03.0000] <sicking>
yeah, i think this was the best one yet

[11:30:04.0000] <ojan>
sicking: i can't be there the rest of the week for health reasons :(

[11:30:05.0000] <sicking>
astearns: that could be

[11:30:06.0000] <sicking>
ojan: you might want to ping dbaron (who's still at TPAC i'd guess)

[11:31:00.0000] <ojan>
astearns: the thing we're currently trying to figure out is whether we can assert that references files always end with -ref or -notref

[11:31:01.0000] <sicking>
ojan: ugh, sorry to hear :(

[11:31:02.0000] <ojan>
or whether we need to parse all the tests first to figure out which ones are references files...which would suck

[11:31:03.0000] <ojan>
or to have some sort of manifest...which would also suck

[11:32:00.0000] <astearns>
definitely not a maintained manifest. On the filename I'm asking Peter Linss - just a sec

[11:32:01.0000] <sicking>
ojan: i don't think you can rely on -ref

[11:32:02.0000] <ojan>
sicking: :(

[11:32:03.0000] <sicking>
ojan: but the manifest is pretty easy to parse

[11:32:04.0000] <jgraham>
ojan: There are tests that use e.g. about:blank as the ref

[11:32:05.0000] <ojan>
maybe we'll need to add some sort of manifest format for the rare cases where we import other test suites

[11:33:00.0000] <jgraham>
We have a parser for the Mozilla format

[11:33:01.0000] <jgraham>
Well, several, I think

[11:33:02.0000] <jgraham>
It is pretty easy to write

[11:33:03.0000] <ojan>
i strongly strongly prefer self-describing tests to a manifest format

[11:33:04.0000] <jgraham>
That's not an either/or proposition

[11:33:05.0000] <ojan>
astearns: https://bugs.webkit.org/show_bug.cgi?id=66295 is where we're discussing this

[11:33:06.0000] <jgraham>
Also, the data is a triple

[11:34:00.0000] <jgraham>
(test, ref, type)

[11:34:01.0000] <jgraham>
where type is typically 'equals' or 'not equals'

[11:34:02.0000] <astearns>
Peter says there are different naming conventions. Sometimes refs start with ref-

[11:34:03.0000] <jgraham>
Sometimes 'not equals' is useful for making sure that you don't hit some bug

[11:35:00.0000] <ojan>
astearns: oh, i'm ok with that as long as you can always tell from the filename

[11:35:01.0000] <jgraham>
So (test.html, about:blank, !=) would ensure that test.html displays *something*

[11:35:02.0000] <astearns>
sometimes the refs are in a separate folder

[11:35:03.0000] <ojan>
jgraham: yeah, i see the benefit of being able to compare against about:blank

[11:36:00.0000] <ojan>
astearns: yeah, that's fine too

[11:36:01.0000] <astearns>
I'll add what Peter is telling me to 66295

[11:36:02.0000] <ojan>
astearns: thanks

[11:36:03.0000] <ojan>
jgraham: ok...it sounds like we'll eventually need to add support for mozilla manifests...

[11:36:04.0000] <dbaron>
astearns, that's news to me

[11:36:05.0000] <ojan>
jgraham: but we'll probably use it exclusivly for mozilla reftests that we import

[11:37:00.0000] <dbaron>
ojan, sicking, ping me regarding what?

[11:37:01.0000] <jgraham>
right, we don't actually use the manifest directly either

[11:37:02.0000] <ojan>
dbaron: we're working out our reftest support for webkit...

[11:37:03.0000] <Ms2ger>
astearns, that's only the CSSWG

[11:37:04.0000] <jgraham>
But if we all have a common format that we can read, it is helpul for sharing stuff

[11:37:05.0000] <ojan>
dbaron: trying to figure out what design we need in order to be able to support both the mozilla reftest and the w3c ones

[11:37:06.0000] <ojan>
s/w3c/csswg

[11:38:00.0000] <Ms2ger>
Just support the reftest.list

[11:38:01.0000] <ojan>
jgraham: we certainly have no intention of creating a new manifest format

[11:38:02.0000] <astearns>
ms2ger: so far. I believe the intent is to have a single ref test format across the w3c

[11:38:03.0000] <jgraham>
One question I was talking to dbaron about is the size of the area that we screenshot

[11:38:04.0000] <Ms2ger>
astearns, yeah, and?

[11:38:05.0000] <jgraham>
In some cases it might be useful to standardise that

[11:39:00.0000] <ojan>
jgraham: fwiw, you can compare against about:blank using self-describing tests as well...the link element just points to about:blank

[11:39:01.0000] <Ms2ger>
asmodai, it's only the CSSWG that wants to get rid of the manifest afaik

[11:39:02.0000] <astearns>
dbaron: sorry, what's news to you?

[11:39:03.0000] <ojan>
Ms2ger: i support getting rid of manifest

[11:39:04.0000] <jgraham>
ojan: That's not really what "self-descibing" mens to me, but yes

[11:39:05.0000] <jgraham>
*means

[11:39:06.0000] <ojan>
Ms2ger: and i expect webkit in general would

[11:40:00.0000] <ojan>
jgraham: sure....i couldn't htink of a a better term for it

[11:40:01.0000] <ojan>
self-contained?

[11:40:02.0000] <jgraham>
(I think of "self-describing" as meaning "can be tested manually"

[11:40:03.0000] <jgraham>
)

[11:48:00.0000] <dbaron>
astearns, mozilla switching away from manifest format

[11:49:00.0000] <ojan>
dbaron: what are you doing instead?

[11:50:00.0000] <ojan>
dbaron: would be good if mozilla + csswg use the same system if possible

[11:50:01.0000] <astearns>
dbaron: ah, OK. I forget who I was talking to about this, but I thought this was happening in order to share tests more efficiently

[11:51:00.0000] <dbaron>
astearns, though once the CSSWG settles on internal != and == links I suppose we might...

[11:51:01.0000] <dbaron>
(I don't remember what the CSSWG settled on regarding and vs. or.)

[11:51:02.0000] <dbaron>
instead of what?

[11:51:03.0000] <astearns>
csswg is still using manifests, it's just that the data is in the test file and the manifests are ephemeral artifacts of the test harness

[11:51:04.0000] <ojan>
astearns: i don't understand that sentence at all

[11:51:05.0000] <ojan>
lol

[11:52:00.0000] <ojan>
astearns: isn't the csswg just using link elements and/or test/directory naming?

[11:52:01.0000] <astearns>
you'll have to talk to Peter Linss to get the real explanation :)

[11:53:00.0000] <Ms2ger>
The build system produces the manifest files from the markup, sounds right

[11:54:00.0000] <ojan>
but the existence of the manifests isn't required to run the tests...you could write a different test runner that doesn't generate manifests, no?

[11:54:01.0000] <Ms2ger>
I guess

[11:54:02.0000] <astearns>
I expect that's the case

[11:55:00.0000] <Ms2ger>
I know that we're moving towards manifests for non-reftest tests

[11:55:01.0000] <Ms2ger>
Because pulling all tests out of a directory was too much of a pain

[11:57:00.0000] <ojan>
manifests--

[11:58:00.0000] <Ms2ger>
Tell me what's better, then

[11:58:01.0000] <ojan>
i guess i don't know how the non-refttest tests you're talking about work

[11:59:00.0000] <ojan>
for webkit, we just use filename conventions...

[11:59:01.0000] <Ms2ger>
Yeah, we want to get rid of that

[11:59:02.0000] <ojan>
foo.html is compared against foo-expected.txt and foo-expected.png

[11:59:03.0000] <ojan>
why?

[12:00:00.0000] <Ms2ger>
Haven't been following closely myself

[12:00:01.0000] <ojan>
needing to maintain manifest files seems like a lot of unnecessary work

[12:00:02.0000] <astearns>
+

[12:00:03.0000] <Ms2ger>
It's not too bad, IMO

[12:00:04.0000] <ojan>
if there's huge benefit, it might be worth it, but i don't see any benefit

[12:01:00.0000] <astearns>
benefit over naming scheme: more interesting relationships than 1-1

[12:01:01.0000] <astearns>
multiple tests sharing a reference

[12:02:00.0000] <astearns>
tests having more than one reference

[12:02:01.0000] <ojan>
you can do this with link elements in the test...the only case where that doesn't work is if the presence of the link element messes with what you're testing

[12:03:00.0000] <ojan>
and in those cases you just have to live with 1-1

[12:03:01.0000] <astearns>
yes, I was just listing benefits over naming schemes

[12:03:02.0000] <astearns>
I prefer metadata because then I can modify one file instead of keeping track of two

[12:04:00.0000] <astearns>
(sorry, metadata over manifests)

[12:23:00.0000] <TabAtkin1_>
ojan: The CSSWG uses explicit links to references, which allows you to reuse a single ref for many tests (which we do a lot).

[12:23:01.0000] <TabAtkin1_>
ojan: And then, yeah, the build script extracts metadata from the tests into the manifest file.

[12:24:00.0000] <TabAtkin1_>
ojan: Manifests are probably necessary at some point because not all languages expose a metadata functionality like HTML's <link>.

[12:25:00.0000] <wilhelm>
dbaron: The Chrome team wishes to discuss reftests today. Do you have time to meet us in the lobby around 14:00 today?

[12:25:01.0000] <dbaron>
wilhelm, depends on the agenda in #fx, but probably yes

[12:26:00.0000] <wilhelm>
dbaron: Great. If there's any other time that works better for you, do tell. (I have another meeting at 15:30.)

[12:28:00.0000] <smaug____>
svg in html doesn't really support namespaces, right?

[12:29:00.0000] <smaug____>
it is just that svg elements get svg namespace

[12:29:01.0000] <smaug____>
/me is too lazy to read the spec

[12:31:00.0000] <Ms2ger>
smaug____, correct

[12:31:01.0000] <Ms2ger>
(Also, xlink)

[13:02:00.0000] <ojan>
TabAtkins: yeah, i like that, but for the links to references, i want all references to be clear that they are references and not test from either the filename or the path

[13:03:00.0000] <ojan>
TabAtkins: as in, <link ref="bar.html"> should not work. <link ref="bar-ref.html"> is fine though

[13:03:01.0000] <ojan>
TabAtkins: i'm also ok with refs being about:blank or data urls though

[13:04:00.0000] <ojan>
TabAtkins: the part i care about is that it's clear looking at a given file in the tree whether it is a test or a reference

[13:04:01.0000] <ojan>
wilhelm: unfortunately, i can't make it to tpac today...who from chromium did you talk to that will be there?

[13:07:00.0000] <wilhelm>
ojan: Ryosuke.

[13:09:00.0000] <ojan>
wilhelm: k...well, if notes are taken, i'll read the minutes and comment appropriately. :)

[13:21:00.0000] <Hixie>
man, the list of changes in the new vcard is woefully incomplete

[14:21:00.0000] <annevk>
/me tries to play foolip

[14:21:01.0000] <annevk>
/me is not that great at it

[14:21:02.0000] <annevk>
(discussing adaptive streaming in the HTML WG)

[14:30:00.0000] <foolip_>
annevk: good luck!

[14:31:00.0000] <foolip_>
say no to defining a manifest format before we have the JS API to do it without manifests

[14:34:00.0000] <annevk>
I think I got that bit right :)

[14:39:00.0000] <foolip_>
also say no do DRM :)

[14:39:01.0000] <annevk>
so they brought it up

[14:39:02.0000] <annevk>
and I said JavaScript

[14:39:03.0000] <annevk>
and they said no

[14:39:04.0000] <Hixie>
"if we don't support drm it's limiting to users"

[14:39:05.0000] <Hixie>
ummm

[14:40:00.0000] <Hixie>
i think he got that backwards

[14:40:01.0000] <foolip_>
when they say "replace your media framework with a 3rd party binary blob", you say no :)

[14:40:02.0000] <annevk>
what is wrong with the javascript thingie though?

[14:40:03.0000] <annevk>
they said something about not secure enough

[14:40:04.0000] <annevk>
but I'm not sure what that means

[14:41:00.0000] <annevk>
you can get the key separately from the content and make things work, no?

[14:41:01.0000] <rillian_>
I gather there are layers of snake oil

[14:41:02.0000] <rillian_>
encrypting the stream from the server is just one layer

[14:41:03.0000] <foolip_>
anything that doesn't replace the media framework is trivial to circumvent, since you could otherwise just modify the browser demuxer to write to disk

[14:41:04.0000] <rillian_>
others are things like querying random system information and blocking playback if the locale or timezone is wrong

[14:42:00.0000] <annevk>
foolip_: I see

[14:42:01.0000] <rillian_>
and passing keys and encrypted data out of javacript to the binary blob that actually decodes the video

[14:42:02.0000] <foolip_>
so implicitly what is required is a plug-in architecture for <video>, or they cooperate only with the browsers they think are important

[14:42:03.0000] <foolip_>
in either case, not so great for us

[14:42:04.0000] <rillian_>
also, they want access to things like hardware identifiers so they can track users better

[14:43:00.0000] <annevk>
foolip_: and some kind of "standard like looking API on top"

[14:43:01.0000] <annevk>
?

[14:43:02.0000] <annevk>
they were asking for that API I guess

[14:43:03.0000] <foolip_>
yeah, kind of like ns4plugins is a standard

[14:43:04.0000] <annevk>
great success

[14:44:00.0000] <foolip_>
gotta sleep, I'll leave it to you now :)

[14:44:01.0000] <annevk>
g'night!

[15:05:00.0000] <roc>
annevk: FWIW http://hg.mozilla.org/users/rocallahan_mozilla.com/specs/raw-file/tip/StreamProcessing/StreamProcessing.html can be used to implement adaptive streaming quite well IMHO

[15:06:00.0000] <roc>
for lame DRM, something else is needed though ... probably the best thing would be an API that lets you implement codecs (and containers) in JS

[15:06:01.0000] <roc>
some kind of worker API that takes compressed data in and produces audio and video tracks out

[15:31:00.0000] <remysharp>
(probably wrong place for this - but) do browsers wait until the connection is closed before rendering the DOM tree?

[15:32:00.0000] <franksalim>
remysharp: connection? do you mean until an HTTP response body has loaded?

[15:33:00.0000] <remysharp>
basically I have this simple server: http://jsbin.com/ovahuf/js

[15:33:01.0000] <remysharp>
curl that server and I get hello...(2 seconds) world

[15:34:00.0000] <remysharp>
view in a browser like Chrome (for instance) and it hangs until the whole this is delivered

[15:34:01.0000] <remysharp>
I just thought browsers rendered the DOM as it was recieved

[15:34:02.0000] <annevk>
remysharp: no

[15:34:03.0000] <franksalim>
remysharp: some browsers wail until a certain amount of data has arrived

[15:34:04.0000] <remysharp>
like I said - probably wrong place for this Q - but you guys and gals are all smart!

[15:34:05.0000] <jarek>
remysharp: I guess browsers render the DOM on the fly, otherwise all pages would be awfully slow

[15:34:06.0000] <annevk>
remysharp: that is, we don't wait

[15:35:00.0000] <remysharp>
ah - but you want a certain amount of data before rendering?

[15:35:01.0000] <annevk>
there is some timeout and the specifics differ per browser

[15:35:02.0000] <annevk>
but some pages don't close their connection, so not rendering does not work

[15:35:03.0000] <franksalim>
remysharp: make that a setInterval of res.write(...) and see what you get :)

[15:36:00.0000] <remysharp>
franksalim: good idea

[15:36:01.0000] <jarek>
remysharp: here is a nice article on this topic: http://taligarsiel.com/Projects/howbrowserswork1.htm

[15:36:02.0000] <franksalim>
remysharp: every browser has some way of delivering a partial response

[15:36:03.0000] <jarek>
"For better user experience, the rendering engine will try to display contents on the screen as soon as possible. It will not wait until all HTML is parsed before starting to build and layout the render tree. Parts of the content will be parsed and displayed, while the process continues with the rest of the contents that keeps coming from the network."

[15:37:00.0000] <remysharp>
great - cheers. That's what I suspected (and was pretty sure I had seen in the past) - but my test obviously was too contrived!

[15:40:00.0000] <bga_>
remysharp and why css hasnt ::parent rule. style and draw once during onfly rendering

[15:42:00.0000] <remysharp>
btw - Acknowledgements in Introducing HTML5 (2nd edit) - annevk in particular: http://dl.dropbox.com/u/43399/acks.jpg

[15:43:00.0000] <annevk>
uppercase V, really?

[15:43:01.0000] <annevk>
thanks though :)

[15:44:00.0000] <annevk>
almost like adactio wrote it :p

[15:44:01.0000] <remysharp>
annevk: shit - really. ah, bugger, I guess that's a reason to cash in on a 3rd edition ;-)

[15:44:02.0000] <annevk>
hehe

[15:44:03.0000] <franksalim>
ha, nice

[15:45:00.0000] <annevk>
ah yeah, I read parts of that book mostly due to Bruce

[15:45:01.0000] <annevk>
nice read

[15:46:00.0000] <jgraham>
annevk: You look lost

[15:47:00.0000] <remysharp>
cheers, I'm pretty sure I wouldn't have finished my parts had it not been for bruce still writing his parts.

[15:53:00.0000] <jarek>
http://dev.w3.org/SVG/modules/

[15:53:01.0000] <jarek>
there is not much work going in SVG space

[15:54:00.0000] <heycam>
jarek, a bunch of those have basically moved to be joint CSS/SVG specs

[15:55:00.0000] <jarek>
hendry: is there anything besides https://dvcs.w3.org/hg/FXTF/raw-file/tip/filters/publish/Filters.html ?

[15:55:01.0000] <jarek>
s/hendry/heycam

[15:55:02.0000] <heycam>
jarek, maybe? :) would have to look

[15:55:03.0000] <heycam>
/me must afk

[15:55:04.0000] <annevk>
jgraham: I'm trying to pull a jgraham :p

[15:56:00.0000] <heycam>
the transforms stuff at least, though

[15:57:00.0000] <annevk>
rules for pronouncing Ms2ger in meetings: "miss-two-ger" (roughly)

[15:58:00.0000] <jgraham>
Make him sound like a girl?

[15:59:00.0000] <bga_>
microsoft2 german

[15:59:01.0000] <hober>
post-tpac in-n-out run tonight anyone?

[15:59:02.0000] <annevk>
ooh

[15:59:03.0000] <annevk>
/me had pancakes for breakfast and too much coke

[15:59:04.0000] <jgraham>
/me proposes we call him "Missy Too-ger"

[16:00:00.0000] <annevk>
(as in cola)

[16:00:01.0000] <annevk>
hober: is there more "healthy" food in SC?

[16:07:00.0000] <TabAtkin1_>
hober: Apparently I'm not allowed to do dinner an in-n-out tonight.  >_<

[16:07:01.0000] <TabAtkin1_>
(According to Shane, who is apparently MY MOM NOW GEEZ.)

[16:08:00.0000] <jgraham>
It's that the role your wife is supposed to take?

[16:09:00.0000] <annevk>
SAD TabAtkin1_ IS SAD

[16:09:01.0000] <jgraham>
*Isn't that

[16:09:02.0000] <annevk>
also, what is there to do 2AM Sunday and why was I not told?

[16:09:03.0000] <Hixie>
tantek_: (from #htmlwg) Google does; but if you just search for [mv] we currently seem to assume that you mean the unix command or other things actually called "mv". Try searching for "la fiesta, mv" and notice that "Mountain View" is boldend (i.e. matched) in the result

[16:10:00.0000] <franksalim>
hober: I would try to crash that. I could use another burger

[16:10:01.0000] <tantek_>
Hixie, maps doesn't seem to recognize it

[16:10:02.0000] <tantek_>
last I checked (a few weeks ago?)

[16:10:03.0000] <tantek_>
MV = Mountain View that is

[16:10:04.0000] <tantek_>
I think it put it in Missouri or something

[16:10:05.0000] <Hixie>
yeah, weird

[16:10:06.0000] <tantek_>
search engine heuristics are pretty flakey

[16:10:07.0000] <annevk>
Google services are often inconsistent

[16:11:00.0000] <tantek_>
often good, but yeah

[16:11:01.0000] <annevk>
e.g. G+ was awful when it came to "WHATWG"

[16:12:00.0000] <jgraham>
Well it's a common problem. Heuristics are flakey but work everywhere; specific markup can still be flakey but might be less so on average, but only works when people specifically add extra stuff

[16:21:00.0000] <TabAtkin1_>
annevk: 2am on Sunday is the DST switch in the US.

[16:22:00.0000] <annevk>
cunning

[16:22:01.0000] <TabAtkin1_>
Also: we're done today in SVG.  Is it worthwhile to attend HTML?

[16:22:02.0000] <annevk>
sort of status update session

[16:22:03.0000] <TabAtkin1_>
That sounds not very interesting.

[16:27:00.0000] <ojan>
random question...anyone know the history behind percentage sizes in standards mode? specifically, in quirks mode, to resolve a percentage, you walk up the tree until you hit the first non-auto, non-percentage valu (roughly)...for standards mode, if you hit an auto value you bail.

[16:27:01.0000] <ojan>
this behavior seems totally wrong to me and i'm wondering how the decision got made

[16:27:02.0000] <ojan>
so i can propose a fix for the future

[16:28:00.0000] <ojan>
i figure dbaron or sicking might know?

[16:28:01.0000] <tantek_>
ojan - is that a CSS question?

[16:28:02.0000] <ojan>
yeah...i guess i should get on some other irc channel

[16:28:03.0000] <annevk>
hixie resolved 80% of 1550 bugs since we had the HTML5 Last Call

[16:29:00.0000] <tantek_>
might have better luck on irc://irc.w3.org:6665/css

[16:29:01.0000] <annevk>
that's about 200 bugs per month

[16:29:02.0000] <tantek_>
especially this week

[16:29:03.0000] <ojan>
tantek_: thx.

[16:29:04.0000] <annevk>
and it excludes emails and other specs

[16:29:05.0000] <annevk>
/me amazed

[16:30:00.0000] <ojan>
that's pretty crazy

[16:30:01.0000] <tantek_>
ojan, I used to have the answer to your question in my head (CSS 2.1 details and reasoning for all compat/strict switches etc.), but unfortunately haven't used that info in code in ~10 years, sorry.

[16:31:00.0000] <ojan>
tantek_: yeah, i figure this decision was made a lloooong time ago

[16:33:00.0000] <smaug____>
/me clearly needs to file some more HTML bugs so that Hixie has something to do

[16:36:00.0000] <AryehGregor>
ojan, FWIW, I've run into this behavior in practice, and it was really confusing.

[16:36:01.0000] <AryehGregor>
I assume it's impossible to change now, though.

[16:36:02.0000] <roc>
ojan: which behavior seems wrong?

[16:36:03.0000] <AryehGregor>
I'd guess it has to do with the fact that in some cases, the width of an auto element depends on its contents.

[16:37:00.0000] <AryehGregor>
E.g., a floated div with width: auto will be as wide as its contents, so trying to set contents' width relative to it is obviously going to be bad.

[16:37:01.0000] <AryehGregor>
But there are people here who are much more expert in CSS than me, so why am I talking?

[16:38:00.0000] <ojan>
roc: the standards behavior

[16:38:01.0000] <AryehGregor>
(the cases where it's confusing are where "auto" translates to "100%", which IIRC is the case for blocks in normal flow with no margin or padding, so you have to add a magic width: 100% which doesn't actually do anything noticeable)

[16:38:02.0000] <ojan>
roc: it's clearly not what people want/expect

[16:38:03.0000] <ojan>
roc: the way you get the behavior you want these days is to have to put height 100% on every ancestor including the html element

[16:38:04.0000] <AryehGregor>
Yes, that's extremely confusing.

[16:38:05.0000] <ojan>
roc: then when you change your structure a little, you have to remember to put height 100% on any new elements you add

[16:39:00.0000] <roc>
yeah, sounds reasonable, but I doubt we can change the standards-mode behavior without hitting compat issues

[16:39:01.0000] <ojan>
AryehGregor: the thing that bugs me is that the quirks behavior does it right, so it's clearly solvable

[16:39:02.0000] <ojan>
roc: yeah, we'd have to add a new unit

[16:39:03.0000] <ojan>
roc: which sucks...but it's better than the status quo imo

[16:39:04.0000] <roc>
maybe there are better features for the use-cases

[16:40:00.0000] <AryehGregor>
There'd be no graceful fallback for a new unit, so it would be useless for ages.

[16:40:01.0000] <AryehGregor>
Although the same is true for any solution here, I guess.

[16:40:02.0000] <roc>
a lot of uses for percentage height blocks are covered by flexbox for example

[16:40:03.0000] <AryehGregor>
Really, the same is true for any feature that merely lets you do an existing thing more easily.

[16:41:00.0000] <ojan>
roc: the problem is that a lot of times the flexbox is in a perctnage container

[16:41:01.0000] <ojan>
roc: e.g. if you want the flexbox to fill the whole viewport

[16:41:02.0000] <ojan>
roc: i guess the new viewport units address that specific use-case

[16:42:00.0000] <ojan>
roc, AryehGregor: what people actually do in practice is make the element positioned and give it top/left/right/bottom=0

[16:42:01.0000] <ojan>
but most people don't think to do that

[16:42:02.0000] <AryehGregor>
Interesting.

[16:43:00.0000] <ojan>
so they either learn to put percentages up the whole tree, or they hard code using javascript

[16:43:01.0000] <AryehGregor>
That only works for fixed width.

[16:43:02.0000] <ojan>
it's a case of people doing the latter that got me worked up enought to try to address it

[16:43:03.0000] <AryehGregor>
The use-case is just making a column that's the height of the whole page?

[16:43:04.0000] <ojan>
AryehGregor: not necessarily the whole page...

[16:43:05.0000] <ojan>
AryehGregor: image in a dialog where you want the contents to fill the dialog

[16:44:00.0000] <ojan>
AryehGregor: the dialog is fixed height

[16:44:01.0000] <AryehGregor>
If the dialog is fixed height, then the problem is only if you have a wrapper intervening between the dialog and its height: 100% contents?

[16:44:02.0000] <AryehGregor>
Which has height: auto?

[16:44:03.0000] <ojan>
AryehGregor: which is the common case

[16:44:04.0000] <AryehGregor>
Right, makes sense.

[16:44:05.0000] <ojan>
AryehGregor: or...a common case anyways

[16:44:06.0000] <AryehGregor>
The current behavior is indeed pathological.

[16:45:00.0000] <AryehGregor>
Although you do have to bail out in some cases.  <div style=float:right><div style=width:100%>foo</div></div> can't do anything sensible except ignore the width property.

[16:46:00.0000] <AryehGregor>
Unless it makes the parent div width:100% despite being floated, which would be weird.

[16:46:01.0000] <AryehGregor>
Although perhaps not entirely unexpected.

[16:48:00.0000] <ojan>
AryehGregor: yes, there are cases you need to bail...but the common case of auto-sizing shoudl not be one of them

[16:48:01.0000] <ojan>
a coworker had an interesting idea of an altnerative to a new unit

[16:48:02.0000] <ojan>
we could add a new property a la box-sizing

[16:48:03.0000] <ojan>
ok...i'll stop littering whatwg with css discussion...

[16:49:00.0000] <AryehGregor>
Yeah, I thought of that too, but a new unit makes more sense here.

[16:50:00.0000] <AryehGregor>
It's more predictable.

[16:50:01.0000] <AryehGregor>
It won't change random the meaning of random other rules.

[16:50:02.0000] <AryehGregor>
(#whatwg is fine for CSS discussion)

[16:50:03.0000] <AryehGregor>
(although not for making actual decisions, of course)

[16:50:04.0000] <AryehGregor>
s/random//


2011-11-04
[17:12:00.0000] <roc>
ojan: I think a lot of Web apps really want flexbox all the way down

[17:14:00.0000] <ojan>
roc: yeah, maybe

[23:07:00.0000] <zcorpan>
hmm, hasn't browsers implemented appcache completely already? http://www.w3.org/Bugs/Public/show_bug.cgi?id=14364

[00:44:00.0000] <hsivonen>
/me is amused by Hixie's description of how to find him. http://www.w3.org/Bugs/Public/show_bug.cgi?id=14492

[02:58:00.0000] <FlorianX>
hi, i've got one question: Web Messaging works only with iFrames? because for channel/cross document messages i need to call otherWindow.post(...) -> but how can i call this on an other browser tab/window?

[03:01:00.0000] <zcorpan>
you might be able to use a shared worker

[03:01:01.0000] <bga_>
you can cross tab messaging via onstarage event

[03:02:00.0000] <FlorianX>
bga_: but i musst call postMessage(..) on otherWindow -> how could i get the tab?

[03:02:01.0000] <FlorianX>
zcorpan: yeah worker communication uses postMessage too.

[03:03:00.0000] <bga_>
FlorianX let api allow you get ref to other your tab. now you can do otherTab.document = null. welcome to XSS crazy world

[03:04:00.0000] <zcorpan>
.document is not overridable :)

[03:04:01.0000] <FlorianX>
bga_: is there a function to get a window or a tab. because everywhere stands tab/ window but the examples use only iframe...

[03:06:00.0000] <FlorianX>
the iframe i get with document.getElement... the worker was created in the js so i have a ref... but how get i a ref to a new window or a tab :-)

[03:09:00.0000] <bga_>
FlorianX ok you can create dispatcher - shared worker. assign id to each tab, allow send msg to other tab, enumarate ids, allow rpc to exec arbitrary code in other tab etc

[03:10:00.0000] <FlorianX>
ok

[03:11:00.0000] <FlorianX>
so the next question is, is channel messaging only a specialized cross document messaging "only" with ports?

[03:13:00.0000] <bga_>
FlorianX btw you can do more :). cross window messaging in different browsers via Flash and SharedStoarge %)

[03:13:01.0000] <FlorianX>
with the chanels?

[03:14:00.0000] <bga_>
if you implement

[03:16:00.0000] <FlorianX>
new i've got the same question before :-D how could i get a ref to the other browser because i musst call in every case newBrowser.postMessage(...)

[03:16:01.0000] <FlorianX>
*now

[03:17:00.0000] <zcorpan>
FlorianX: you connect to a shared worker and it creates a message channel between the two, sends the ports back, and then the pages can communicate through the channel

[03:17:01.0000] <bga_>
ref to browser sounds crazy and useless

[03:17:02.0000] <zcorpan>
FlorianX: no need to have a ref to the window

[03:20:00.0000] <FlorianX>
zcorpan: nice. thanks

[03:21:00.0000] <bga_>
zcorpan btw when p2p api will land in html5?

[03:21:01.0000] <FlorianX>
bga_: yeah useless, but importent to know :-D

[03:22:00.0000] <zcorpan>
bga_: it's already in the spec

[03:23:00.0000] <bga_>
FlorianX you dont need to know in which browser given window. homogenious space

[03:24:00.0000] <bga_>
of cource you can do someWindow._rpc('navigator.userAgent', fn(ret){  })

[03:26:00.0000] <bga_>
zcorpan url?

[03:28:00.0000] <bga_>
can not google spec

[03:28:01.0000] <bga_>
sorry

[03:29:00.0000] <zcorpan>
http://www.whatwg.org/specs/web-apps/current-work/multipage/video-conferencing-and-peer-to-peer-communication.html#video-conferencing-and-peer-to-peer-communication

[03:35:00.0000] <bga_>
nice. now i can make html5 bittorrent client :)

[03:43:00.0000] <FlorianX>
i'm still trying to understand the differences between the channel and cross-document messaging... in channel there is a direct communication channel, so many pieces of code could communicate with their pendats... in cross the hole document reacts to a message? is this the difference? *in simple words* :-D

[03:52:00.0000] <zcorpan>
FlorianX: with a channel you have two ports. the ports can be sent around.

[05:36:00.0000] <sgentle>
hi there

[05:37:00.0000] <sgentle>
I'm doing some stuff with templating and I wanted to check something… in general, should I expect user agents to modify the dom for shits and giggles when it's first rendered?

[05:40:00.0000] <sgentle>
for example, if I have an xpath that points to a certain element using a standard no-funny-business HTML parser, should I expect it to point to that element in the browser also? in all browsers?

[05:41:00.0000] <Philip`>
Is a "no-funny-business HTML parser" something like html5lib or the validator.nu HTML5 parser?

[05:42:00.0000] <Philip`>
If so, modern browsers will produce precisely the same DOM, if the page doesn't contain any scripts that use document.write or that modify the DOM explicitly

[05:44:00.0000] <Philip`>
(Most pre-HTML5 non-browser HTML parsers and older browsers will differ in the namespacing of elements, and in various minor details)

[05:44:01.0000] <sgentle>
yeah, my definition of no-funny-business includes the relatively well specified funny business in the spec :o)

[05:44:02.0000] <annevk>
I might be able to get used to this 5AM thing

[05:44:03.0000] <sgentle>
(which is to say, that doesn't count as funny business… geez, negatives are confusing)

[05:45:00.0000] <sgentle>
what do you mean by namespacing?

[05:46:00.0000] <Philip`>
The HTML5 parser puts HTML elements into the HTML namespace

[05:46:01.0000] <Philip`>
Most pre-HTML5 parsers put the elements in no namespace

[05:46:02.0000] <annevk>
"<table>test" moves things around

[05:46:03.0000] <annevk>
there's various other algorithms that modify the DOM

[05:47:00.0000] <annevk>
you only hit such cases for documents that are non-conforming

[05:48:00.0000] <Philip`>
That's well specified funny business so it'll be the same between browsers and non-browser parsers (html5lib etc) though

[05:48:01.0000] <Philip`>
/me is assuming that's roughly what sgentle means

[05:49:00.0000] <sgentle>
yeah

[05:49:01.0000] <sgentle>
basically I'm trying to do something clever where I parse some html for the locations of template markers to make selectors to those elements

[05:50:00.0000] <Philip`>
Scripts break everything, of course

[05:50:01.0000] <sgentle>
of course :)

[05:52:00.0000] <Philip`>
(Also, non-browser parsers might not implement the spec correctly, because e.g. their DOM-or-similar-tree implementation can't represent all possible DOMs, or because they're trying to be streaming etc)

[05:52:01.0000] <sgentle>
so my main concern is just whether I'm going to parse the html, say "aha! this template renders to /body/table/tr[3]/td[2]" and then have that not match up to the actual DOM

[05:53:00.0000] <zcorpan>
it wouldn't match anything with a conforming parser :)

[05:53:01.0000] <Philip`>
If there are no problematic scripts in the HTML, and if everyone implements HTML5 correctly (which isn't quite true depending on your scope), that should work fine :-)

[05:53:02.0000] <sgentle>
it'd be swell if I could somehow hook into the browser's parser, but, y'know… you ask three browsers for an implementation and you get four implementations

[05:54:00.0000] <zcorpan>
(there would be a tbody element)

[05:54:01.0000] <sgentle>
:o

[05:54:02.0000] <sgentle>
I imagine that forgetting tbody is the sort of thing that might get you run out of #whatwg on a rail

[05:55:00.0000] <sgentle>
so, uh… I hesitate to ask this

[05:55:01.0000] <sgentle>
but how badly is that not true for older browsers?

[05:55:02.0000] <annevk>
<tbody> has been done for a *long* time

[05:55:03.0000] <Philip`>
/me doesn't remember any browser in which it's not true

[05:55:04.0000] <annevk>
use http://software.hixie.ch/utilities/js/live-dom-viewer/ to figure out what browsers do

[05:55:05.0000] <zcorpan>
old browsers insert tbody too. i think netscape 4 or something might fail to do it

[05:57:00.0000] <sgentle>
sorry, not tbody, I mean in general, the expectation that I can parse HTML and get a DOM that matches the DOM in the browser

[05:58:00.0000] <Philip`>
Before HTML5, every browser browser gave a different DOM, and every non-browser HTML parser gave different ones again

[05:58:01.0000] <sgentle>
oh good :)

[05:58:02.0000] <Philip`>
s/browser//

[05:59:00.0000] <sgentle>
I was worried for a second this was going to be a massive pain in the ass

[05:59:01.0000] <Philip`>
There's probably some small subset of HTML that'd be sufficiently compatible for your goals, but I don't think anyone has attempted to define that subset

[06:00:00.0000] <sgentle>
or maybe some sufficiently complicated way of selecting an element

[06:00:01.0000] <Philip`>
so the sanity-preserving course is probably to only expect to support browsers with HTML5 parsers

[06:00:02.0000] <Philip`>
/me has no idea which browser versions that would be, though

[06:01:00.0000] <Philip`>
The easy way to select an element is to modify the source and add an id attribute

[06:01:01.0000] <sgentle>
yeah, I was thinking about that

[06:01:02.0000] <sgentle>
although adding an id to everything feels a little gross

[06:02:00.0000] <sgentle>
(not to mention, ironic that to solve the problem of the DOM being modified in arbitrary ways I modify the DOM in an arbitrary way)

[06:02:01.0000] <sgentle>
but that might be the only sane option

[06:03:00.0000] <sgentle>
whoa… although

[06:03:01.0000] <zcorpan>
http://caniuse.com/#search=parser gives an idea (although ie9 doesn't use an html5 parser)

[06:03:02.0000] <sgentle>
maybe I could render the html again using an iframe

[06:03:03.0000] <sgentle>
with ids

[06:04:00.0000] <sgentle>
and then use those ids to construct xpaths or some other generic selector based on the structure of the DOM

[06:04:01.0000] <sgentle>
then use that selector to get elements in the original document

[06:04:02.0000] <sgentle>
…and since those both happen within the browser, the quirks would be the same (probably)

[06:05:00.0000] <sgentle>
I'd obviously have to nuke script tags somehow to stop them being run, but other than that...

[06:11:00.0000] <sgentle>
or even something like document.createElement('html').innerHTML = templateWithIds

[06:12:00.0000] <sgentle>
is that too crazy to work?

[06:13:00.0000] <Philip`>
"too crazy" depends on what you're trying to achieve, and whether there's less crazy ways to do it

[06:13:01.0000] <Philip`>
(What are you trying to achieve?)

[06:15:00.0000] <sgentle>
well, in a larger sense I'm trying to do live templating - that is, you can use a template + data to generate HTML, change the data and have the HTML change

[06:18:00.0000] <sgentle>
as an arbitrary design goal (if I can get away with it), I'd like to not do a jquery-ui style "you use my library? a thousand CSS classes descend upon you!"

[06:19:00.0000] <sgentle>
and instead preserve the template property that what you get out is basically what you put in

[06:20:00.0000] <sgentle>
the only missing piece is that I need a way to access the templated elements after the page has loaded

[06:20:01.0000] <sgentle>
(which is why I'm asking so many strange questions about selectors)

[06:25:00.0000] <Smylers>
TabAtkins: http://lists.w3.org/Archives/Public/public-html/2011Nov/0012.html is hilarious. Thank you!

[06:52:00.0000] <Ms2ger>
annevk, any interesting discussions about me?

[06:53:00.0000] <annevk>
you were thanked for working on tests and someone asked how to pronounce your name

[06:53:01.0000] <annevk>
I think that was about it

[06:54:00.0000] <annevk>
Glenn Adams is notoriously absent

[06:55:00.0000] <Ms2ger>
Hah

[06:57:00.0000] <annevk>
hixie had some idea on how to define mutation observers in the DOM btw while not depending on HTML

[06:57:01.0000] <hsivonen>
oh so the masked person at TPAC wasn't Ms2ger after all?

[06:57:02.0000] <Ms2ger>
hsivonen, ...perhaps?

[06:57:03.0000] <annevk>
we basically just "queue" the stuff and HTML dispatches it or some such

[06:58:00.0000] <annevk>
hsivonen: I think only tantek walked around with a mask on halloween

[06:58:01.0000] <tantek>
>:->

[06:58:02.0000] <Ms2ger>
I see

[06:58:03.0000] <annevk>
Ms2ger: oh and sicking wants us to add EventTarget.on.event.add(...) and within those new type of listeners events would always bubble

[06:58:04.0000] <hsivonen>
annevk: ok. I meant the photo Sylvain tweeted

[06:59:00.0000] <annevk>
yeah that was tantek :)

[07:00:00.0000] <Ms2ger>
If sicking can get smaug to implement it, sound great to me :)

[07:01:00.0000] <annevk>
and I think pretty much everyone wants node.remove/prepend/etc. though what they should take as argument...

[07:50:00.0000] <annevk>
Ms2ger: should also file a bug on HTML for contextless parsing

[07:50:01.0000] <annevk>
Ms2ger: requires a new insertion mode afaict

[07:52:00.0000] <Ms2ger>
Either that or use <body> like for the other apis

[07:52:01.0000] <annevk>
Ms2ger: using <body> is not acceptable for e.g. jQuery and copy & paste so if we do that we might as well not do it

[07:52:02.0000] <annevk>
Ms2ger: you want to be able to create a fragment of several rows a in table for instance

[07:52:03.0000] <Ms2ger>
/me will read the thread later

[07:53:00.0000] <annevk>
k

[08:54:00.0000] <heycam>
dglazkov, is it ok if your components presentation to us is bumped half an hour later to 12:30pm?

[08:55:00.0000] <heycam>
dglazkov, sorry, I mean to 2:30pm. (we originally said 2pm.)

[08:57:00.0000] <annevk>
at some point I should stop explaining why URL processing should be uniform and move to the next level

[08:59:00.0000] <Ms2ger>
annevk, sniffing?

[09:00:00.0000] <heycam>
whoever sniffed it dealt it

[09:00:01.0000] <Ms2ger>
heycam, I understand tpac has come to an interesting level?

[09:01:00.0000] <heycam>
I don't know anything about levels, man

[09:01:01.0000] <heycam>
/me brb chairing

[09:03:00.0000] <dglazkov>
good morning, Whatwg!

[09:04:00.0000] <dglazkov>
heycam: sure. Am I presenting anything? I thought you guys just wanted to pick my brain on shadow doom

[09:05:00.0000] <Ms2ger>
/me tries not to picture that

[09:06:00.0000] <annevk>
hober said the other day he needs to be sniffed

[09:06:01.0000] <annevk>
/me found that  somewhat disturbing

[09:07:00.0000] <dglazkov>
I sniffed hober. He's okay

[09:10:00.0000] <hober>
I don't know what to say.

[09:11:00.0000] <dglazkov>
:)

[09:11:01.0000] <zewt>
seriously, rhyming is not the way

[09:11:02.0000] <hober>
Anybody want a peanut?

[09:12:00.0000] <zewt>
you can't quote the end of that scene, there's nowhere to go with it

[09:14:00.0000] <Ms2ger>
/me arrests zewt for violating the "Getting-Out-of-Sketches-Without-Using-a-Proper-Punch-Line Act"

[09:15:00.0000] <dglazkov>
ah yes, the good old GOOSWUPPLA act.

[09:18:00.0000] <jgraham>
/me votes we send annevk to the motivational speaker session

[09:18:01.0000] <Ms2ger>
What did he do to you now?

[09:18:02.0000] <annevk>
/me slaps jgraham around with a largish wet trout

[09:19:00.0000] <karlcow>
/me supports jgraham in his proposal. Annevk definitely would benefit of it

[09:19:01.0000] <annevk>
/me does a 180 with his trout

[09:21:00.0000] <Ms2ger>
/me opens a trout shop

[09:21:01.0000] <jgraham>
Raise the praise, mionimize the criticize, man

[09:22:00.0000] <jgraham>
Oh, tht did post

[09:22:01.0000] <jgraham>
Silly spoty connection

[09:22:02.0000] <jgraham>
*spotty

[09:23:00.0000] <Ms2ger`>
Let's criticize the IETF

[09:23:01.0000] <Ms2ger`>
Or shepazu, of course :)

[09:23:02.0000] <annevk>
Unicode!

[09:23:03.0000] <jgraham>
The words fish and barrel come to mind

[09:23:04.0000] <annevk>
<canvas>!

[09:25:00.0000] <heycam>
dglazkov, sure, no need to present! just be present :)

[09:26:00.0000] <dglazkov>
I'll be a present.

[09:32:00.0000] <zewt>
"the optional encoding string parameter MUST be a name or an alias of a character set used on the Internet [IANACHARSET], or else is considered invalid" is that "MUST" strange?

[09:32:01.0000] <dglazkov>
wait, there's a vibrator spec?

[09:33:00.0000] <dglazkov>
oh, it's for the phones. nevermind.

[09:33:01.0000] <zewt>
seems odd to place a normative requirement on parameters, instead of just saying "if it's valid, do this, otherwise do this"

[09:35:00.0000] <jgraham>
/me notes that the problem with longdesc in browsers is that we don't have any interest in exposing mostly-junk data to users

[09:35:01.0000] <Philip`>
You expose the content of web pages to users, and most of those are junk

[09:37:00.0000] <karlcow>
specifically ads ;)

[09:37:01.0000] <jgraham>
Philip`: coming from you , I expect data to back up that statement :p

[09:38:00.0000] <karlcow>
I wonder about the proportion of img used for ads and used for no-ads

[09:38:01.0000] <annevk>
users are junks?

[09:38:02.0000] <karlcow>
junkies

[09:38:03.0000] <karlcow>
[09:38]  * karl has the feeling the longdesc looks like a footnote, annotation mechanism. a reference to another piece of text information.

[09:39:00.0000] <karlcow>
in fact I could see longdesc used in other contexts.

[09:39:01.0000] <Philip`>
jgraham: Most assertions made on IRC are junk too, of course

[09:39:02.0000] <karlcow>
with a combination of xmlhttprequest to bring the text in a possible tooltip, ui, something

[09:41:00.0000] <annevk>
if you use XMLHttpRequest you should use data-*

[09:41:01.0000] <jgraham>
hsivonen: The proper view-source highlghting sounds very cool

[09:42:00.0000] <karlcow>
annevk: would it be an issue with the lack of rich semantics

[09:42:01.0000] <karlcow>
it is usually not text only

[09:42:02.0000] <karlcow>
it is an html file

[09:52:00.0000] <annevk>
HTML WG inner circle is discussing longdesc

[09:52:01.0000] <annevk>
nobody else has anything to say, yet it takes ages

[09:53:00.0000] <annevk>
/me is getting allergic to hearing "change proposal"

[09:54:00.0000] <Ms2ger``>
Only just now?

[09:54:01.0000] <annevk>
so far I mostly saw it in writing

[09:54:02.0000] <Philip`>
How do people pronounce "a11y" in real life?

[09:55:00.0000] <zewt>
"accessibility" :)

[09:55:01.0000] <annevk>
I think I heard a-11

[09:56:00.0000] <zewt>
it's an ironically unaccessible abbreviation

[09:56:01.0000] <zewt>
how do you translate "l10n"?

[09:56:02.0000] <Philip`>
"lion"

[09:56:03.0000] <karlcow>
/me is not a big fan of hgroup… or more exactly never really had to use it

[09:56:04.0000] <annevk>
there's no irony in standards

[09:56:05.0000] <Ms2ger>
Only sarcasm

[09:56:06.0000] <karlcow>
L-tee-N

[09:56:07.0000] <zewt>
i said translate :P

[09:57:00.0000] <annevk>
trololol

[09:57:01.0000] <zewt>
how do you localize the abbreviation for localization

[09:57:02.0000] <Philip`>
Oh, like into non-English languages?

[09:57:03.0000] <Philip`>
/me forgot such languages existed

[09:57:04.0000] <karlcow>
hmm

[09:58:00.0000] <Hixie>
is tantek around?

[09:58:01.0000] <karlcow>
L-dix-N doesn't sound that good in French

[09:58:02.0000] <dglazkov>
a10n

[09:58:03.0000] <karlcow>
a2l

[09:59:00.0000] <dglazkov>
w1f

[10:15:00.0000] <jgraham>
We totally need a HTMLWG drinking game based around the words "Change Proposal" and "Call for Consensus"

[10:16:00.0000] <annevk>
you want double headaches?

[10:16:01.0000] <smaug____>
:)

[10:17:00.0000] <smaug____>
/me thinks or hopes he has made the right choice to not care about HTML WG at all.

[10:18:00.0000] <AryehGregor>
AFAICT, technical work doesn't occur on the public-html list as a rule, only on the whatwg list or Bugzilla.

[10:18:01.0000] <AryehGregor>
Bugzilla is courtesy of the HTMLWG, though.

[10:18:02.0000] <AryehGregor>
That's certainly worth caring about.

[10:19:00.0000] <tantek>
/me feels obligated to mention http://tantek.com/2011/238/b1/many-ways-slice-url-name-pieces

[10:20:00.0000] <smaug____>
I do file some html spec bugs

[10:20:01.0000] <smaug____>
but I don't refer to HTML5 spec, but whatwg html spec

[10:31:00.0000] <gsnedders>
jgraham: Why is it always people who don't drink who start drinking games?

[10:31:01.0000] <Hixie>
tantek: see /msg

[10:31:02.0000] <smaug____>
Hixie: a bit difficult to read that diff without enough context... so click-in-progress is set whenever user clicks an element?

[10:32:00.0000] <Hixie>
the patch isn't quite complete yet

[10:32:01.0000] <Hixie>
but basically it'll be fired for anything that is click(), the click caused by hitting enter, and the click caused by clicking

[10:32:02.0000] <Hixie>
and it'll be unset after the activation behaviorus are done

[10:32:03.0000] <smaug____>
ok, sounds good

[10:32:04.0000] <jgraham>
MikeSm

[10:33:00.0000] <smaug____>
/me updates the patch for gecko

[10:33:01.0000] <jgraham>
MikeSmith drinks from the poisoned chalice

[10:33:02.0000] <MikeSmith>
heh

[10:34:00.0000] <hober>
you're a good man, MikeSmith

[10:34:01.0000] <hober>
though i don't understand why this would be an html wg deliverable

[10:35:00.0000] <MikeSmith>
hot potato

[10:35:01.0000] <hober>
it's almost like we need a wg that defines how urls work across the platform

[10:35:02.0000] <hober>
why does that sound familiar?

[10:38:00.0000] <annevk>
Mike[tm]: put it in the URL standard

[10:38:01.0000] <annevk>
MikeSmith: that is, rename http://dvcs.w3.org/hg/url/raw-file/tip/Overview.html to URL, and make it happen

[10:38:02.0000] <annevk>
that is what I would do anyway with more time

[10:38:03.0000] <Hixie>
MikeSmith: btw if you just took up an action to work on the URL spec, please coordinate with i18n and abarth

[10:38:04.0000] <annevk>
ooh

[10:38:05.0000] <annevk>
document license

[10:42:00.0000] <MikeSmith>
Hixie, yeah, I plan to

[11:01:00.0000] <Hixie>
MikeSmith: cool

[11:47:00.0000] <jgraham>
In which we learn that most people who can afford to go to a week-long meeting are paid by someone to go

[11:48:00.0000] <Ms2ger>
Orly?

[11:49:00.0000] <AryehGregor>
/me 's fiancée has a friend named Orly

[11:49:01.0000] <jgraham>
Orly?

[11:51:00.0000] <AryehGregor>
/me needs friends named Yarly and Nowai

[11:54:00.0000] <jgraham>
You could have children named that

[11:55:00.0000] <AryehGregor>
I'll be sure to suggest it.

[11:55:01.0000] <AryehGregor>
I'm sure she won't mind.  It's only fair that I get to name half the kids, right?

[12:00:00.0000] <karlcow>
http://www.businessinsider.com/gm-is-about-to-move-100000-employees-to-google-apps-2011-11

[12:01:00.0000] <_bga>
can i critique this api http://wiki.whatwg.org/wiki/StringEncoding

[12:03:00.0000] <Ms2ger>
_bga, I'd suggest asking for use cases

[12:03:01.0000] <Hixie>
gotta love #htmlwg. "W3C through its process guarantees stability" o_O

[12:06:00.0000] <franksalim>
_bga, Ms2ger: that proposal looks very useful to me

[12:08:00.0000] <_bga>
Ms2ger 1) move it to ArrayBuffer and rename to _encodeFrom, _decodeTo 2) remove byteOffset and byteLen to prefer .slice (its virtual, not copy anything) 3) this API too C'sh, like strcopy or something, immutable api is better, ie ._decodeTo(charset) -> ArrayBuffer, but _encodeFrom(string) is mutable

[12:08:01.0000] <Ms2ger>
Anyway, find the guy who invented it and send your comments to him

[12:09:00.0000] <_bga>
i hoped he here

[12:09:01.0000] <_bga>
ok

[12:10:00.0000] <franksalim>
_bga: are you saying it is better to create a new ArrayBuffer than write bytes into an existing buffer (mutating it)?

[12:10:01.0000] <_bga>
yeah

[12:11:00.0000] <_bga>
immutable api is better for ppl

[12:11:01.0000] <franksalim>
worse for performance

[12:11:02.0000] <_bga>
less chanse make error

[12:11:03.0000] <_bga>
i know

[12:11:04.0000] <franksalim>
which many users of typed arrays care about, i think

[12:11:05.0000] <franksalim>
since the likely uses of this are going to be mixed binary/text formats and protocols

[12:11:06.0000] <franksalim>
is there any fast path for copying one array buffer into another?

[12:13:00.0000] <franksalim>
because if i have to have a javascript inner loop to copy bytes, doing the utf8 codec in javascript would probably be faster than creating a temporary buffer

[12:14:00.0000] <franksalim>
(there may be a fast path for copying, i just haven't seen it in my reading of the Typed Array spec. if there is, what should i look for?)

[12:16:00.0000] <_bga>
franksalim compiler can analize that you make something like a = a._decodeTo('utf8') or return a._decodeTo('utf8') i.e. you completely forget about old {a} and do translation inplace but i guess malloc is not bottleneck in buffer convertation

[12:19:00.0000] <_bga>
franksalim var a = new Int16Array([10]), b = new Int16Array(a); a[0] = 1; b[0]

[12:21:00.0000] <franksalim>
_bga: i'm not sure i understand the point of that code

[12:21:01.0000] <franksalim>
constructing a new Int16Array is not the same as copying from one existing buffer into another existing buffer

[12:22:00.0000] <_bga>
if you pass a.buffer instead a, b will have same buffer as a, but by passing a you copy a.buffer to b.buffer

[12:23:00.0000] <_bga>
b[0] == 10 prove it

[12:23:01.0000] <franksalim>
if i have an existing buffer b, perhaps with some binary header data, and i want to write in additional bytes (perhaps that were encoding a string)

[12:23:02.0000] <franksalim>
*were the result of encoding a string

[12:24:00.0000] <franksalim>
i can't do that in place without a javascript inner loop, i believe

[12:24:01.0000] <franksalim>
so it is desirable to be able to write that string out as bytes directly into my existing buffer, in my opinion

[12:25:00.0000] <_bga>
hm

[12:26:00.0000] <_bga>
[].push.apply() does not work

[12:26:01.0000] <_bga>
heh

[12:26:02.0000] <zewt>
. o ( dreaming of python's method binding )

[12:28:00.0000] <_bga>
bad that typed arrays hasnt realloc


2011-11-05
[21:56:00.0000] <wilhelm>
~

[22:57:00.0000] <jgraham>
wilhelm: .

[22:58:00.0000] <wilhelm>
jgraham: I blame the lag.

[23:04:00.0000] <jgraham>
So would the Jackson Five if they were around today

[07:54:00.0000] <gsnedders>
It says something that when I see a Java plugin used I'm actively surprised, whereas a decade ago it wouldn't have surprised me in the least (though annoyed me while I waited for the JVM to startup…)

[08:02:00.0000] <bga_>
/me want jvm in browser by default instead js. If somebody wants js - Rhino

[08:03:00.0000] <gsnedders>
bga_: I want something where a single company doesn't control the language by virtue of holding patents over it.

[08:03:01.0000] <bga_>
mm. patents. ok. llvm

[08:06:00.0000] <gsnedders>
bga_: Too slow, and not designed for non-trusted code-execution.

[08:06:01.0000] <bga_>
but monopoly is ok. single version. single mind. better than 3-4 companies implements same stuff i.e. just waste haman resources

[08:06:02.0000] <gsnedders>
(slow in the compile-time sense, not in generated-code performance)

[08:07:00.0000] <gsnedders>
bga_: Then why have multiple browser engines at all?

[08:07:01.0000] <gsnedders>
What incentive is there for performance, etc?

[08:08:00.0000] <bga_>
lets c++ compler maker fights, not we :)

[08:08:01.0000] <bga_>
and cpu manufacturers

[08:09:00.0000] <gsnedders>
But that doesn't really affect the performance of canvas that much.

[08:11:00.0000] <bga_>
but ok. monopoly is ideal. you want stimul to make product better. i see MS make Windows better w/o pressure of concurents. thay just cares about users

[08:11:01.0000] <bga_>
oracle too

[08:12:00.0000] <bga_>
that ill called perfectionism

[08:13:00.0000] <gsnedders>
bga_: MS don't make Windows better for that reason, MS continue to develop Windows because licensing is tied to specific Windows versions.

[08:13:01.0000] <gsnedders>
To continue to sell site-licenses, they have to invalidate the old licenses.

[08:14:00.0000] <gsnedders>
The revenue they get from  per-unit OEM sales is comparitively minute.

[08:15:00.0000] <gsnedders>
bga_: A good monopoly example where you have no financial incentive to develop it further is IE/Win, and the abandonment of its development a decade ago. It brings in no revenue to MS, so it's purely a cost-sink.

[08:17:00.0000] <bga_>
gsnedders for example we have Flash. wa have canvas. Flash api much better and faster than canvas because Adobe is monopoly. single version. but 3 companies enchange canvas speed triple slower. And after 5+ years canvas reach level of flash

[08:18:00.0000] <gsnedders>
bga_: It's not clear simply having more resources working on a single engine would have addressed that problem any quicker.

[08:18:01.0000] <bga_>
gsnedders because IE6 was ideal. 3d, vector graphic, FFI(activex), sound, video, smil, etc

[08:19:00.0000] <gsnedders>
bga_: The IE team didn't, and were fully intending on fixing bugs in the near future after IE6.

[08:20:00.0000] <gsnedders>
They were intending on fixing places where hasLayout became black-box observable, expecting to continue on the same fairly quick release-cycle IE had had at that point.

[08:20:01.0000] <gsnedders>
(Fairly quick at least compared with IE today)

[10:05:00.0000] <annevk>
Mike[tm]: I just filed a bug on appcache and it did not go to public-html automatically but instead was filed under other drafts...

[10:05:01.0000] <annevk>
Mike[tm]: seems wrong

[10:50:00.0000] <heycam>
annevk, according to CSSOM, should document.styleSheets include items for <link rel="stylesheet alternate"> even if they don't have a title=""?

[10:53:00.0000] <annevk>
probably should not include those

[10:53:01.0000] <annevk>
I think that might not get past the "create a style sheet" steps

[10:53:02.0000] <annevk>
or should not, anyway, because it's useless

[10:55:00.0000] <heycam>
annevk, where is "create a style sheet" actually invoked?

[10:56:00.0000] <heycam>
annevk, for link elements that is? I can see there's a section for <?xml-ss?> and Link headers...

[10:56:01.0000] <annevk>
in HTML I think

[10:57:00.0000] <annevk>
though I'm not sure if Hixie is doing that properly

[10:57:01.0000] <heycam>
mm

[10:58:00.0000] <heycam>
an IE demo fails in Firefox because it doesn't expose all the title-less alternate stylesheet <link>s in document.styleSheets, so I wanted to point to some spec justification for that

[10:59:00.0000] <annevk>
yeah I heard about that the other day

[11:00:00.0000] <annevk>
style sheet loading, creating of StyleSheet objects, etc. is all very sketchy :(

[11:00:01.0000] <heycam>
mm

[11:00:02.0000] <heycam>
:)

[11:02:00.0000] <annevk>
are you eating something?

[11:02:01.0000] <annevk>
mm

[11:05:00.0000] <heycam>
annevk, no, just sleepy after flight so I have a limited set of irc responses to use :)

[11:06:00.0000] <annevk>
mm

[11:29:00.0000] <kennyluck>
Is it a known issue that validator.nu throws more "parse error" than it should be for character references?

[11:41:00.0000] <annevk>
kennyluck: you can check its bugs no?

[11:43:00.0000] <kennyluck>
annevk, it will be easier if someone says "yes" to my question and then I'll skip this. ;)

[11:44:00.0000] <annevk>
I don't know  the answer :)

[11:45:00.0000] <annevk>
ew http://wiki.whatwg.org/wiki/StringEncoding

[11:47:00.0000] <zewt>
only particularly "ew" thing is "detectEncoding", which is being dropped

[11:48:00.0000] <zewt>
rest is rough but straightforward

[12:33:00.0000] <annevk>
other feedback:

[12:33:01.0000] <annevk>
appcache does not mean "works offline"

[12:33:02.0000] <annevk>
even if it did, users don't get it

[12:34:00.0000] <annevk>
they search google for URLs so a) they can't find the apps when offline and b) they don't know they work offline

[12:34:01.0000] <zewt>
then why is it in a section titled "offline web applications"? heh

[12:34:02.0000] <annevk>
ironyfreezone

[12:36:00.0000] <Philip`>
Is it more like "works when the internet connection temporarily drops because you're going through a tunnel but you don't need to notice"?

[12:38:00.0000] <annevk>
the thing you want is e.g. angry birds offline

[12:38:01.0000] <annevk>
but users won't remember that URL

[12:38:02.0000] <Philip`>
Sounds like we need an offline Google

[12:39:00.0000] <Philip`>
Shouldn't be too bad if it just searches through every page you've already visited

[12:39:01.0000] <zewt>
since when do users remember any URLs, that's not the user's job

[12:44:00.0000] <annevk>
I guess you need to get to the point where the application is "installed" so you can launch it from where you launch other apps

[12:45:00.0000] <zewt>
chrome can do that (bookmark webpages to the start menu like an app), but it's really obscure

[12:51:00.0000] <zewt>
"create application shortcuts"

[14:40:00.0000] <annevk>
http://tantek.com/2011/238/b1/many-ways-slice-url-name-pieces is pretty awesome

[15:09:00.0000] <annevk>
http://lists.w3.org/Archives/Public/public-webapps/2009JulSep/1358.html

[15:17:00.0000] <annevk>
http://dev.w3.org/2006/webapi/WebIDL/#es-attributes

[16:00:00.0000] <annevk>
we should organize a WHATCAMP; a place for developers and standards people to meet

[16:00:01.0000] <annevk>
(not my idea)

[16:01:00.0000] <annevk>
I get the feeling there's a lot of subtle things we can change that would improve the web for everyone

[16:01:01.0000] <annevk>
having met with some developers in the past week

[16:08:00.0000] <smaug____>
annevk: hopefully somewhere in Europe

[16:08:01.0000] <smaug____>
but yes, sounds like a good idea

[16:09:00.0000] <zcorpan>
Örebro maybe? :-)

[16:09:01.0000] <smaug____>
Opera could arrange it... Oslo perhaps? I haven't been there :)

[16:12:00.0000] <smaug____>
might be easier to arrange it in Brussels close to Fosdem, like couple of days before Fosdem

[16:12:01.0000] <annevk>
that does not sound too bad

[16:13:00.0000] <annevk>
I think we should have it in the bay area too, but experimenting closer to home works better for me :)

[16:14:00.0000] <smaug____>
/me is all for trying to make technology world less US centric

[16:15:00.0000] <smaug____>
annevk: perhaps Opera and Mozilla Europe could arrange something together.

[16:16:00.0000] <zcorpan>
what do you guys think about http://www.w3.org/Bugs/Public/show_bug.cgi?id=14364 ?

[16:16:01.0000] <annevk>
yeah

[16:17:00.0000] <annevk>
zcorpan: there's a lot of interest here

[16:17:01.0000] <annevk>
zcorpan: pretty much everyone dealing with appcache also wants dynamic; but it's kind of dinstict

[16:18:00.0000] <annevk>
zcorpan: appcache is atomic, this is somewhat separate from that

[16:18:01.0000] <annevk>
wycats had these notes:

[16:18:02.0000] <annevk>
window.localResources.add(url, callback) => window.localResources.remove(url) => window.localResources.update(url, callback)

[16:18:03.0000] <annevk>
window.localResource.on("update", callback)

[16:19:00.0000] <annevk>
I think sicking thinks this should be solved using Indexed DB

[16:19:01.0000] <annevk>
download first and then store it in the database

[16:19:02.0000] <annevk>
but that seems less convenient as you cannot keep using URLs at that point

[16:20:00.0000] <annevk>
zcorpan: does that help?

[16:21:00.0000] <zcorpan>
so sicking thinks appcache shouldn't be used at all?

[16:22:00.0000] <annevk>
app cache is what is required to make your app run offline

[16:22:01.0000] <annevk>
resources on top of that such as media or large amounts of email is typically stored in different ways

[16:23:00.0000] <annevk>
e.g. for email attachments it seems sensible to store them in Indexed DB

[16:23:01.0000] <annevk>
but there is probably room between the two for cached URLs

[16:24:00.0000] <annevk>
tantek: hey

[16:24:01.0000] <annevk>
tantek: so I'm just using macports

[16:24:02.0000] <tantek>
greetings

[16:24:03.0000] <tantek>
oh ok

[16:26:00.0000] <annevk>
tantek: updated the spec just now

[16:26:01.0000] <annevk>
hg clone, hg pull, hg update, hg commit, hg push

[16:27:00.0000] <annevk>
it's "fairly" trivial

[16:27:01.0000] <tantek>
ah ok - sounds not too different than git

[16:30:00.0000] <smaug____>
obviously tantek should do some gecko development to get used to hg

[16:30:01.0000] <annevk>
he does work for Mozilla... :p

[16:30:02.0000] <smaug____>
I know :)

[16:32:00.0000] <annevk>
btw tantek, see the logs for "WHATCAMP"; standards/developers/browsers

[16:34:00.0000] <tantek>
ooh that sounds like a good idea

[16:34:01.0000] <tantek>
annevk - I took a look at the draft, we want the OWFa statement to autoupdate as well

[16:34:02.0000] <tantek>
s/4 November 2011/[DATE: 01 Jan 1901]

[16:34:03.0000] <tantek>
smaug :)

[16:35:00.0000] <zcorpan>
ok who will be the one to save <hgroup>?

[16:35:01.0000] <tantek>
zcorpan - I'm considering it

[16:35:02.0000] <annevk>
tantek: oh I didn't realize that

[16:35:03.0000] <tantek>
annevk - that way it indicates that we've agreed to OWFa on the very latest draft

[16:36:00.0000] <annevk>
also fixed

[16:36:01.0000] <tantek>
I like <hgroup> semantically, and am unsure about the usefulness of its impact on the outline algorithm

[16:36:02.0000] <tantek>
nice

[16:37:00.0000] <zcorpan>
tantek: cool

[16:37:01.0000] <tantek>
I'm considering writing up a change proposal just to keep the semantics part, and drop the impact on the outline algorithm.

[16:37:02.0000] <tantek>
I'm wondering if there are enough people that would care however.

[16:37:03.0000] <tantek>
Because if I'm the only one that cares then it doesn't make sense to save hgroup.

[16:38:00.0000] <zcorpan>
wait what? impacting the outline algorithm is the semantic <hgroup> has!

[16:38:01.0000] <annevk>
tantek: I want to use it for my specs at least

[16:39:00.0000] <annevk>
tantek: afaik people want to keep it and I doubt it will be dropped across both specs...

[16:39:01.0000] <zcorpan>
nobody has written a no-change CP

[16:41:00.0000] <tantek>
zcorpan - the use-case of having it impact the outline algorithm which then would affect things like tables of contents - is not described as it is used in practice.

[16:41:01.0000] <tantek>
e.g. in a book with a title with subhead, or a chapter title with subhead, the text of both is grouped and shown together, rather than hidden

[16:41:02.0000] <tantek>
rather than the subhead being hidden that is

[16:42:00.0000] <tantek>
zcorpan - if you'd like to work together on a change proposal - I'm for it

[16:42:01.0000] <tantek>
feel free to get started and I'll contribute

[16:42:02.0000] <zcorpan>
the subhead doesn't need to be hidden in the ToC, i think

[16:43:00.0000] <zcorpan>
the <hgroup> is the heading, and it just gets its *rank* from the highest ranked h* child

[16:43:01.0000] <zcorpan>
what text to use in the ToC is not defined

[16:44:00.0000] <tantek>
/me is working on a few change proposals already (enhanced time, keep/introduce data, etc.)

[16:45:00.0000] <tantek>
zcorpan that wasn't my understanding - but I can re-read the spec.

[16:46:00.0000] <zcorpan>
hmm. seems i was wrong.

[16:46:01.0000] <zcorpan>
"For the purposes of document summaries, outlines, and the like, the text of hgroup elements is defined to be the text of the highest ranked h1–h6 element descendant of the hgroup element, if there are any such elements, and the first such element if there are multiple elements with that rank. If there are no such elements, then the text of the hgroup element is the empty string."

[16:46:02.0000] <zcorpan>
i think that should be considered a UI issue and not restricted like that

[16:46:03.0000] <tantek>
zcorpan - what you described above (not quoted) is the effect I want because that's what I've seen happen in outlines/ToCs

[16:46:04.0000] <tantek>
zcorpan - I would be happy with that too.

[16:50:00.0000] <zcorpan>
tantek: if the effect hgroup has was removed from the outline algo altogether, then <hgroup><h1></h1><h2></h2></hgroup> would create two *sections*, which is not wanted

[16:50:01.0000] <tantek>
zcorpan - aha I see what you mean

[16:51:00.0000] <tantek>
In practice, semantic subheads are joined with their heading using some sort of combination character.

[16:51:01.0000] <tantek>
e.g.

[16:51:02.0000] <tantek>
http://en.wikipedia.org/wiki/The_Diamond_Age

[16:51:03.0000] <zcorpan>
i don't have time right now to write a CP (have to sleep), but i'd suggest no-change CP except loosen the paragraph quoted above

[16:53:00.0000] <zcorpan>
(rationale: what text to use in ToC etc is a UI issue, and the spec usually doesn't restrict UI choices)

[16:54:00.0000] <tantek>
effectively has <hgroup><h1>The Diamond Age</h1> <h2>Or, A Young Lady's Illustrated Primer</h1></hgroup>

[16:54:01.0000] <annevk>
back later

[16:54:02.0000] <tantek>
but when the h1 and h2 are combined, they're combined with a ":"

[16:54:03.0000] <tantek>
The Diamond Age: Or, A Young Lady's Illustrated Primer

[16:54:04.0000] <tantek>
ttyl annevk

[16:55:00.0000] <zcorpan>
yep

[16:55:01.0000] <tantek>
thus it would be particularly useful if <hgroup> allowed for specifying how to join the headings when making a single string

[16:55:02.0000] <zcorpan>
that smells like overengineering to me :)

[16:55:03.0000] <tantek>
I don't have a specific suggestion except perhaps a combiner attribute that takes a string to insert between the different heading children

[16:55:04.0000] <tantek>
perhaps

[16:55:05.0000] <tantek>
we can mention it as considered and rejected too.

[16:56:00.0000] <zcorpan>
/me would keep it simple

[16:56:01.0000] <zcorpan>
if you write a CP, i'm happy to review it tomorrow

[16:57:00.0000] <zcorpan>
or maybe i can write one tomorrow if you don't

[16:57:01.0000] <tantek>
zcorpan - tomorrow is fine - go ahead and start one

[16:57:02.0000] <tantek>
I would but I'm already working on two

[16:57:03.0000] <zcorpan>
k

[16:57:04.0000] <zcorpan>
g'night


2011-11-06
[17:43:00.0000] <tantek>
FYI: http://www.w3.org/wiki/User:Tantekelik/data_element change proposal to re-add the data element. Comments welcome.

[18:34:00.0000] <wilhelm>
Mike[tm]: Did you say you were headed to SF today? If you want to head out later, do tell. I'm in the neighbourhood now.

[20:13:00.0000] <sicking>
annevk5: that's not actually what I was thinking at all. I was just saying that if you have big chunks of data to store locally, you should use blobs in indexedDB

[20:14:00.0000] <sicking>
annevk5: it sounds like a good idea to me to allow modifying the appcache to add and remove files

[01:14:00.0000] <roc>
I am not entirely happy that the CSS WG spends unbounded amounts of energy micro-optimizing gradient syntax while issues like "region styling interacts disastrously with stacking contexts" get no attention

[01:15:00.0000] <roc>
</whine>

[02:28:00.0000] <zcorpan>
ok i've submitted my first CP

[02:28:01.0000] <zcorpan>
i thought i would never write a CP, but oh well

[05:45:00.0000] <annevk>
zcorpan: so it seems everyone is on board with dynamic appcache then

[05:46:00.0000] <annevk>
/me misunderstood sicking

[05:49:00.0000] <annevk>
someone should create http://isthepfwgpublicyet.com/

[05:56:00.0000] <Workshiva>
It exists, you just typoed the URL

[05:57:00.0000] <Workshiva>
data:text/html,<title>Is%20the%20PF%20WG%20public%20yet?</title><p>No

[06:01:00.0000] <annevk>
my bad

[06:02:00.0000] <AryehGregor>
hsivonen, the coloring in these examples didn't make it into the feed.  You should either use inline CSS instead of classes, or tell readers to look at the original post if they want coloring: http://hsivonen.iki.fi/view-source/

[06:02:01.0000] <AryehGregor>
(syndication is exactly the sort of scenario where inline style is appropriate, IMO)

[06:41:00.0000] <zcorpan>
The Styling Is Part Of The Content!11

[06:42:00.0000] <bga_>
body::after { content: 'long text' } ?

[07:14:00.0000] <astearns>
roc: has "region styling interacts disastrously with stacking contexts" been brought up on www-style?

[09:52:00.0000] <Hixie>
annevk: you around?

[11:25:00.0000] <roc>
astearns: yes

[11:28:00.0000] <astearns>
roc: got a pointer to the thread? I'm happy to make sure the issue gets some attention


2011-11-07
[18:07:00.0000] <jarek>
Hi

[18:08:00.0000] <jarek>
why 'no-display' and 'no-content' values for 'overflow' property are marked in red here:

[18:08:01.0000] <jarek>
http://www.w3.org/TR/css3-box/

[18:09:00.0000] <jarek>
I mean: http://www.w3.org/TR/css3-box/#overflow

[18:11:00.0000] <jarek>
MDN does not seem to be mentioning them anywhere

[18:38:00.0000] <kennyluck>
jarek, I strongly suggest you not read that spec. I haven't seen it being discussed for a year or so.

[18:39:00.0000] <kennyluck>
If a statement is marked in red, that means there are issues.

[23:11:00.0000] <MikeSmith>
hsivonen: http://bugzilla.validator.nu/show_bug.cgi?id=875 (filed today) is yet another report caused by the misleading error+elaboration message for subtypes of the input element

[23:12:00.0000] <MikeSmith>
I'm wondering what you think of the idea of just allowing all the input attributes on all subtypes in the schema, and moving all the error reporting to Assertions.java

[23:13:00.0000] <MikeSmith>
and special-casing the elaboration message

[23:14:00.0000] <MikeSmith>
to output the same elaboration message from all input types

[23:15:00.0000] <MikeSmith>
maybe the elaboration message for input could be a <dl> list where each <dt> is an attribute name and the <dd> is a list of input types for which that attribute is allowed

[23:25:00.0000] <hsivonen>
MikeSmith: it least the elaboration needs to be type-specific. Maybe even the error message could be intercepted to avoid having to resort to Assertions.java

[23:25:01.0000] <MikeSmith>
OK

[00:07:00.0000] <hsivonen>
who is "james" in http://www.w3.org/2011/11/02-jquery-minutes.html ?

[00:07:01.0000] <hsivonen>
jgraham?

[00:13:00.0000] <hsivonen>
huh? Does Windows Server edition not have an H.264 Media Foundation decoder or why does <video> not work in IE9 there?

[00:13:01.0000] <hsivonen>
(per slides from the above minutes)

[00:19:00.0000] <hsivonen>
roc: did you notice that drawing DOM stuff to canvas was among the top requests paul_irish and ycats got from Web authors?

[00:19:01.0000] <roc>
no

[00:19:02.0000] <roc>
link?

[00:21:00.0000] <franksalim>
this one? http://paulirish.com/2011/what-feature-would-improve-the-web/

[00:25:00.0000] <hsivonen>
franksalim: yes

[00:25:01.0000] <hsivonen>
roc: also slide 11 of https://docs.google.com/present/view?id=ajdqczcmx5pv_148ggbxbfg2&pli=1

[00:25:02.0000] <roc>
easy to ask for

[00:25:03.0000] <roc>
not so easy to fix the security problems with

[00:27:00.0000] <hsivonen>
roc: right

[00:31:00.0000] <roc>
hsivonen: do you know anything about dvcs.w3.org?

[00:31:01.0000] <roc>
we actually do have a way to render DOM elements to canvas

[00:32:00.0000] <roc>
by the way

[00:32:01.0000] <roc>
canvas.drawImage(new Image("data:text/xml,<svg ...><foreignObject ...>...</foreignObject></svg>"), 0, 0);

[00:33:00.0000] <hsivonen>
roc: I have pushed a test to dvcs.w3.org once

[00:33:01.0000] <roc>
did you have to do anything special to get credentials?

[00:33:02.0000] <roc>
my W3C password, that works for reading member emails etc, doesn't work for dvcs

[00:33:03.0000] <roc>
AFAICT

[00:33:04.0000] <hsivonen>
roc: you need to be a participant in a WG and use the same credentials you use to see behind the Member-only paywall

[00:34:00.0000] <roc>
hmmm

[00:34:01.0000] <hsivonen>
roc: odd. you are a participant in the HTML WG after all

[00:34:02.0000] <roc>
am I?

[00:34:03.0000] <roc>
I don't know

[00:34:04.0000] <roc>
or does my ability to post to public-html indicate that I am?

[00:34:05.0000] <roc>
I'll email dbaron

[00:34:06.0000] <hsivonen>
roc: you are

[00:34:07.0000] <hsivonen>
http://www.w3.org/2000/09/dbwg/details?group=40318&public=1

[01:03:00.0000] <heycam>
hsivonen, yes that was jgraham

[01:18:00.0000] <hsivonen>
heycam|away: thanks

[01:45:00.0000] <MikeSmith>
roc: if you're still around, I can help with dvcs.w3.org perms

[01:45:01.0000] <roc>
cool

[01:45:02.0000] <roc>
my username is 'rocallah'

[01:45:03.0000] <MikeSmith>
OK

[01:45:04.0000] <MikeSmith>
w

[01:46:00.0000] <MikeSmith>
which repo?

[01:49:00.0000] <roc>
hg/audio

[01:49:01.0000] <MikeSmith>
OK

[01:50:00.0000] <MikeSmith>
roc: please try it now

[01:55:00.0000] <roc>
here goes

[01:55:01.0000] <roc>
great, that worked!!

[01:55:02.0000] <MikeSmith>
super

[01:59:00.0000] <roc>
thanks

[02:03:00.0000] <MikeSmith>
no problem

[02:11:00.0000] <roc>
http://robert.ocallahan.org/2011/11/drawing-dom-content-to-canvas.html

[02:11:01.0000] <roc>
paul_irish: ^^^

[07:02:00.0000] <manu`>
Heads-up, Data Driven Standards Community Group launches at W3C: http://manu.sporny.org/2011/data-driven-standards/

[07:02:01.0000] <manu`>
and the link to the group: http://www.w3.org/community/data-driven-standards/

[07:07:00.0000] <jgraham>
manu`: I agree entirely with the idea that this methodology is a good one and should be adopted, but I don't quite see what the value of a community group is in this situation

[08:00:00.0000] <AryehGregor>
smaug____, do you think we can get rid of Range.detach()?  http://www.w3.org/Bugs/Public/show_bug.cgi?id=14591

[08:08:00.0000] <smaug____>
hmm

[08:08:01.0000] <smaug____>
it is indeed useless

[08:08:02.0000] <smaug____>
or, not quite

[08:09:00.0000] <smaug____>
but anyway quite strange method

[09:14:00.0000] <dglazkov>
good morning, Whatwg!

[09:25:00.0000] <manu`>
jgraham: re: http://www.w3.org/community/data-driven-standards/ the advantage, imho, of a community group is to create a place where people can gather - one list that discusses how to technically achieve the goal and document how it is done.

[09:26:00.0000] <manu`>
We'd like to start building tools that allow folks to just plug in regular expressions that are run on a monthly/quarterly basis... we're thinking of using CommonCrawl to do the first sets of crawls

[09:26:01.0000] <manu`>
and then utilizing someone like 80legs.com for the next few crawls.

[09:27:00.0000] <manu`>
We're planning on doing a crawl to see where and how RDFa and Microdata is being used/abused...

[09:28:00.0000] <manu`>
I've been trying to get something like this going for about 6 months now, but every time we try to partner w/ someone, it falls through... and it's become increasingly difficult to wrangle everyone involved.... so, CG seemed like a good place to gather and promote the ideas.

[09:29:00.0000] <manu`>
I think we'll use the wiki to gather services and document how to write crawls for each service... probably have a github account in time for crawling template storage... so that you can just copy the crawling template (map/reduce job) to an Amazon Elastic Map Reduce instance and hit "GO!"

[09:30:00.0000] <manu`>
make sense?

[09:49:00.0000] <gsnedders>
brucel: Yeah, the postoffice brokenness is definitely new :\

[09:53:00.0000] <gsnedders>
manu`: There's a few options. One is just to use data from dotdotbot, though that's a fairly old dump.

[09:53:01.0000] <gsnedders>
manu`: The other option is just to crawl pages from some public index like dmoz

[09:54:00.0000] <gsnedders>
I mean, yeah, you won't get quite the amount of data you could from Google's index, but probably still enough to be reasonable

[09:54:01.0000] <gsnedders>
I guess the problem is finding the pages that actually use RDFa/Microdata, though, really

[10:07:00.0000] <manu`>
gsnedders: do you know how much data dotdotbot has? or dmoz? CommonCrawl has tens of terabytes of data (5 billion pages?) 80legs claims to crawl the entire crawl-able web every 3 months (but does not store the data - they just process as they crawl) - there is also WebGrep - but they don't support regexes, just static string matching.

[10:08:00.0000] <gsnedders>
manu`: dotdotbot has just 13GB, but for most purposes it's a representive sample of the web as a whole (which probably means you'll find almost no RDFa in it).

[10:08:01.0000] <gsnedders>
manu`: dmoz just process as they go, but you can get all the URLs and crawl yourself enough for a representitive sample

[10:09:00.0000] <gsnedders>
The problem with RDFa/Microdata is going to be making sure you get a representitive sample of them and not of the web as a whole.

[10:09:01.0000] <gsnedders>
(or rather the subset of the web that uses RDFa/Microdata)

[10:09:02.0000] <manu`>
yes, true... but seeing as how nobody really has any public data yet... we have to start somewhere.

[10:09:03.0000] <erlehmann>
i need a kissology schema

[10:09:04.0000] <erlehmann>
does any one have one?

[10:09:05.0000] <manu`>
one of the things we're considering is running a test on each crawling service... to see how representative each one are.

[10:10:00.0000] <manu`>
s/one are/one is wrt to the other/

[10:10:01.0000] <erlehmann>
i'd like this to work using RDFa <http://daten.dieweltistgarnichtso.net/src/wer-kuesst-wen/?json=internet-elite.json>

[10:10:02.0000] <erlehmann>
;)

[10:11:00.0000] <erlehmann>
but i cannot seem to find any good graphical RDF aggregators

[10:11:01.0000] <gsnedders>
manu`: The other alternative is just browser extentions and process what users visit

[10:12:00.0000] <manu`>
erlehmann - I remember somebody doing something like that w/ FOAF some time ago, but I can't remember the URL for it...

[10:12:01.0000] <erlehmann>
manu`, i remember lish daelnar doing the same thing with pico -w

[10:12:02.0000] <erlehmann>
sexchart.org/sexchart.9.43

[10:12:03.0000] <erlehmann>
http://sexchart.org/sexchart.9.43

[10:13:00.0000] <manu`>
gsnedders: yes, that would be a good alternative as well - but I'm suspect as to how easy it will be to have people install software to crawl the web on our behalf.... I think it's a good idea, just that writing the software and getting a community built around it seems to be more difficult than utilizing these large web crawls.

[10:13:01.0000] <erlehmann>
but the point is that a graphical RDFa aggregator could show a social graph quite nicely

[10:13:02.0000] <erlehmann>
why are the large crawls needed?

[10:14:00.0000] <manu`>
erlehmann: absolutely, it would be nice to have... one of our engineers tried using gource to do a visualization of some RDF data we had... it was a good idea that was never finished.

[10:15:00.0000] <manu`>
re: large crawls - representative sample... we're not just concerned about RDFa/Microdata... I think it would be good for the HTML5 spec... allowing features to be killed off more easily (see the latest <time> fiasco - which I agreed w/ the removal of time, but w/o data it's hard to make a case for /any/ removal)

[10:16:00.0000] <manu`>
re: http://sexchart.org/sexchart.9.43 - that made my eyes bleed.

[10:51:00.0000] <erlehmann>
time is removed?

[10:51:01.0000] <erlehmann>
oh noes.

[10:51:02.0000] <erlehmann>
i have to subscribe to the newsletters more often

[10:52:00.0000] <erlehmann>
manu`, the problem with relationship graphs is that every single person i know that can do more than i can do does not want to code a tool that may or may not ruin their supposedly monogamous relationship or show embarassing ex partners.

[10:52:01.0000] <erlehmann>
so i do not really have any help with coding.

[10:53:00.0000] <erlehmann>
but lots of people saying “one should be able to dispute RDF assertions”

[10:53:01.0000] <erlehmann>
facepalm m(

[11:02:00.0000] <matjas>
why does `foo &amp bar` (missing semicolon) render as an ampersand?

[11:04:00.0000] <bga_>
&<i />amp <- hack :)

[11:06:00.0000] <zewt>
&amp;amp;amp;amp;amp;amp;amp;

[11:06:01.0000] <bga_>
%)

[11:07:00.0000] <matjas>
zewt: that renders as `&amp;amp;amp;amp;amp;amp;`, which makes sense, since there’s a semicolon following the first

[11:07:01.0000] <matjas>
i’m just trying to understand the other case

[11:08:00.0000] <zewt>
i know, heh

[11:08:01.0000] <zewt>
matjas: i'd just guess web-compatibility

[11:09:00.0000] <bga_>
matjas may be its same as < tr >

[11:09:01.0000] <bga_>
^ its not tag

[11:13:00.0000] <matjas>
http://www.whatwg.org/specs/web-apps/current-work/multipage/tokenization.html#tokenizing-character-references

[11:14:00.0000] <matjas>
bga_: the weird thing is that `foo &amp bar` is actually valid (even in HTML4)

[11:14:01.0000] <roc>
/me wonders if paul_irish reads IRC

[11:34:00.0000] <kennyluck>
matijsb, no it's not. It's a parse error.

[11:38:00.0000] <matjas>
kennyluck: that’s what i thought after reading http://www.whatwg.org/specs/web-apps/current-work/multipage/tokenization.html#tokenizing-character-references, but validator.nu and http://validator.w3.org/check (in HTML 4.01 strict mode) don’t complain at all

[11:39:00.0000] <matjas>
oh wait, my bad, validator.nu does complain

[11:39:01.0000] <matjas>
/ignore me!

[11:39:02.0000] <matjas>
but in HTML4 it seems to be valid, unless that’s a bug in the validator

[11:40:00.0000] <kennyluck>
I know nothing about HTML 4.01 so you might be right about the HTML 4.01 part.

[11:44:00.0000] <matjas>
http://validator.nu/?doc=data%3Atext%2Fhtml%3Bcharset%3Dutf-8%2C%3C%21DOCTYPE+html+PUBLIC+%22-%2F%2FW3C%2F%2FDTD+HTML+4.01%2F%2FEN%22+%22http%3A%2F%2Fwww.w3.org%2FTR%2Fhtml4%2Fstrict.dtd%22%3E%3Ctitle%3ETest%3C%2Ftitle%3E%3Cp%3Efoo%2520%26amp%2520bar&parser=html4&showsource=yes validator.nu’s HTML 4.01 validator says it’s a parse error too

[11:44:01.0000] <matjas>
must be a bug with http://validator.w3.org/check

[11:47:00.0000] <AryehGregor>
What's the best way to do new content attributes where we want values of "true", "false", and "inherit"?  Like contenteditable or spellcheck?

[11:48:00.0000] <kennyluck>
What about "true", "false", and "auto"? I am thinking about dir=auto.

[11:49:00.0000] <AryehGregor>
I'm just wondering which way would be preferred for new attributes.

[11:50:00.0000] <Philip`>
manu`: http://philip.html5.org/data/dotbot-20090424.txt for dotbot

[11:50:01.0000] <Philip`>
manu`: (http://philip.html5.org/data/pages-using-rdfa.txt is seemingly RDFa-using pages from that)

[11:52:00.0000] <Philip`>
manu`: I think dmoz had like 5M distinct URLs when I last checked; average page size (if you have an upper limit of maybe 1MB) is about 30KB if I remember correctly, so it's like 150GB to download all those pages, which isn't particularly problematic

[11:54:00.0000] <Philip`>
manu`: With the dotbot data (~0.5M pages) it only took me a few minutes to parse and analyse every page, on a single quad-core machine, so no need for fancy cloud-based map-reduce processing until you have maybe an order of magnitude more pages or want instant results

[11:56:00.0000] <Philip`>
matjas: "&amp" without semicolon is listed in http://www.whatwg.org/specs/web-apps/current-work/multipage/named-character-references.html#named-character-references so it gets parsed (but I think it's always a syntax error if you use any of the ones without semicolons)

[11:57:00.0000] <matjas>
Philip`: mind = blown, I had missed that, thanks!

[11:57:01.0000] <matjas>
i also tested with raquo but that has an semicolon-less entry as well

[11:58:00.0000] <Philip`>
matjas: (The details of the list are due to compatibility requirements - semicolons are required wherever the spec can get away with it)

[12:12:00.0000] <manu-db>
Philip`: Thanks for the link... looking at it now.

[12:14:00.0000] <manu-db>
Philip`: Do you think that the dotbot and dmoz sample sets are large enough to give a decent representation of usage on the Web?

[12:15:00.0000] <jgraham>
/me wonders if it is worth the effort of trying to kill <details>

[12:15:01.0000] <jgraham>
Or at least putting it on ice for now

[12:16:00.0000] <jgraham>
(because I am not convinced that it is possible to implement well at this stage)

[12:16:01.0000] <jgraham>
(due to styling problems)

[12:17:00.0000] <paul_irish>
roc: i do read IRC :) thx for the awesome post.. badassjs already wrote it up http://badassjs.com/post/12473322192/hack-of-the-day-rendering-html-to-a-canvas-element-via

[12:17:01.0000] <scor>
Philip`: this data is from 2009?

[12:18:00.0000] <roc>
paul_irish: great, thanks!

[12:19:00.0000] <roc>
paul_irish: it may be possible to work around Webkit's data: URI bug by using a BlobBuilder to construct the SVG image and getting a Blob URI for it

[12:21:00.0000] <Philip`>
manu-db: Depends what you're measuring usage of - if you assume the data is a uniform random sample of the web, and you determine that N pages have some property, you can easily calculate the error bars on N, and I've completely forgotten the details but I think it's reasonably accurate when N is at least a few dozen, for samples of this scale

[12:22:00.0000] <manu-db>
Philip`: Right - college level statistics and all... but the assumption being made is that the data in dmoz and dotbot is a uniform random sample of the Web... and I'm not convinced that it is.

[12:22:01.0000] <Philip`>
manu-db: Yeah, they're definitely not

[12:23:00.0000] <manu-db>
to put it another way - we've done analysis on the Sindice database and a few others and found that even those large data sets have some bias.

[12:23:01.0000] <Philip`>
At least the dotbot data might be a uniform sample of some defined population (i.e. the set of pages they crawled), though not necessarily a useful population

[12:23:02.0000] <Philip`>
There's an infinite number of web pages so it's impossible to even have the concept of a uniform sample

[12:24:00.0000] <manu-db>
right... so, right now, we're looking at doing a 80+TB crawl - it'll cost us around $100 USD ... if the numbers that we find there match the dmoz / dotbot data - then we can assume that dmoz / dotbot have an acceptable randomized sample of the Web...

[12:24:01.0000] <jgraham>
I was going to say, what do you mean by a fair sample in this case?

[12:25:00.0000] <manu-db>
"fair sample" - I don't know... right now, I'm just wondering how much deviation there will be among the crawlers for the same question... like: "how may <time> elements are there in the data set?"

[12:25:01.0000] <Philip`>
There are various problems like dmoz having a zillion nytimes.com pages at some point in the past (if I remember correctly), which can be improved by e.g. limiting number of pages per domain

[12:25:02.0000] <manu-db>
(and then you divide the occurences by number of pages, etc.

[12:26:00.0000] <manu-db>
jgraham: I think one of the problems is that we don't know what a "fair sample" looks like... there is no metric for determining a fair sample...

[12:27:00.0000] <manu-db>
for the reasons that Philip` states... I tend to shrug when people ask that question. I don't have a good answer - thus the need for the Data-Driven Standards work...

[12:27:01.0000] <Philip`>
Probably the most useful sample is the set of pages visited by users in a day, multiplied by the importance they assign to each visit

[12:28:00.0000] <Philip`>
A more feasible approximation is the set of pages visited by users in a day

[12:28:01.0000] <jgraham>
Indeed. I can't even begin to imagine what you would say. If you show usage of <time> in 1% of all pages but those 1% are all wordpress blogs that will be upgraded with the next security release, is that a significant number of people or not?

[12:28:02.0000] <manu-db>
I'm sure you could factor their page rank in there somewhere.

[12:28:03.0000] <Philip`>
dmoz probably has a lot of bias towards old sites (because they were entered a long time ago) that nobody visits nowadays

[12:29:00.0000] <jgraham>
manu-db: You might be able to get that data more directly e.g. by getting a browser maker to add element counters to their data collection tools

[12:29:01.0000] <manu-db>
jgraham - yes, answering questions like that is difficult... usually getting data just creates more questions that you want to ask the data...

[12:29:02.0000] <Philip`>
dotbot probably has a lot of bias towards deep database-driven sites with large numbers of pages

[12:29:03.0000] <Velmont>
jgraham: Well, -- themes are not really always that easily upgraded.

[12:29:04.0000] <Philip`>
(and most pages are visited very rarely)

[12:29:05.0000] <jgraham>
(the user-determined average)

[12:29:06.0000] <manu-db>
jgraham: good idea - but getting browser vendors to move on stuff like this is a very long and painful process... we haven't had much luck with it in the past.

[12:30:00.0000] <jgraham>
Right, there's probably a bunch of reasons that's a bad idea

[12:30:01.0000] <Velmont>
jgraham: Also, I have <time> on all pages of universitas.no which has quite a lot of pages (a news paper). It's a fish in the sea, but I guess many othershave it.:]

[12:30:02.0000] <jgraham>
But it is the only thing that comes close to the rather-reasonable definition of "fair" (i.e. usage weighted) that Philip` gave

[12:30:03.0000] <Philip`>
If you're measuring stuff like <time>, then that's extremely rare and very recent, so I expect it'll be very hard to find and depend hugely on the sample method, whereas usage of something like longdesc has probably not changed much for a decade so it doesn't matter so much where you look

[12:31:00.0000] <jgraham>
Velmont: It was only an example

[12:31:01.0000] <Philip`>
scor: It is

[12:31:02.0000] <jgraham>
(but does indicate another problem with getting data from browser vendors which is that it is useless without URLs and they shouldn't hand those over)

[12:34:00.0000] <Philip`>
I suppose the other problem is that even when you have pretty accurate and detailed and multiply-reproduced data about e.g. longdesc, people ignore it

[12:34:01.0000] <manu-db>
You could artificially create some sort of relevance rank by applying the Google page rank of a domain to the URLs that you scan of that domain... but even that is pretty hand-wavingly band... that could give you a relevance value for the markup for a particular page.

[12:35:00.0000] <manu-db>
In any case - I don't think the questions we're going to be asking are that detailed at first.

[12:35:01.0000] <manu-db>
We just want to know "How many sites will break if we remove X?"

[12:36:00.0000] <manu-db>
and then at least we have data... that we can argue endlessly about the significance of those sites.

[12:36:01.0000] <zewt>
be nice if google could do things like dom-level queries, heh

[12:36:02.0000] <zewt>
google xpath

[12:36:03.0000] <manu-db>
the thing that concerns me is that we don't even have the basic set of data right now.

[12:37:00.0000] <manu-db>
zewt: So, I was looking into the map-reduce stuff and if there was a Python HTML5 DOM (which there is), you could do those types of queries on the Common Crawl data set.

[12:37:01.0000] <Philip`>
I don't think you want to use Python - Java is about a hundred times faster for this

[12:38:00.0000] <Philip`>
(where "this" includes HTML5 parsing)

[12:38:01.0000] <jgraham>
Philip`: I think you mean "I don't think you'd want to use a python *parser*)

[12:38:02.0000] <jgraham>
s/)/"/

[12:38:03.0000] <manu-db>
Well... you can use Java too... I just try not to unless absolutely necessary.

[12:38:04.0000] <bga_>
:)

[12:38:05.0000] <bga_>
use pure C!

[12:38:06.0000] <Ms2ger>
You can use C++, as soon as hsivonen finishes his standalone parser :)

[12:39:00.0000] <Ms2ger>
(Along with HTML5 becoming a recommendation?)

[12:39:01.0000] <manu-db>
unfortunately, Hadoop is written in Java... which is what Amazon's Elastic Map Reduce crap uses... so, no C++ love there.

[12:41:00.0000] <Velmont>
The h264 js decoder, would be nice to see a theora js-based decoder, seeing as theora has lots less complexity. Then maybe I could retire using java applet cortado for showing videos to legacy browsers.

[12:41:01.0000] <Philip`>
manu-db: Annoyingly, trying to prove a negative ("there aren't many significant pages that will break if we remove X") seems massively harder than a positive (which you can prove by demonstrating there are N affected pages in this sample) :-(

[12:42:00.0000] <Philip`>
(For a negative, people will always argue your sample may be missing many significant pages, and will probably be right)

[12:43:00.0000] <Philip`>
/me isn't entirely sure it's worth the effort of trying to do the former

[12:44:00.0000] <manu-db>
Philip`: I don't quite follow, mind elaborating?

[12:46:00.0000] <Ms2ger>
Absence of proof isn't proof of absence, and stuff like that

[12:48:00.0000] <Philip`>
If you say "our search found nobody using <time> so we can safely remove it", someone will say "but this major site over here uses it", or "your sample is 3 months old and there was a load of publicity 2 months ago that will have encouraged thousands of people to use it", or "you ought to try looking in .gov sites because I have a hunch they might use it", etc

[12:51:00.0000] <Philip`>
(whereas if you say "this list of three hundred sites uses <time>, and based on the sample size there's probably at least a thousand times that many in the full collection that was sampled, so it's too expensive to remove it", then nobody will disagree)

[12:51:01.0000] <manu-db>
right

[12:52:00.0000] <Philip`>
(so the latter is easy and can produce usable results to help ensure compatibility in language design, but the former seems to end up frequently in endless discussions about the methodology)

[12:55:00.0000] <manu-db>
yes, that's true. However, having data across 80TB of data is better than not... especially if we can understand how randomized these sample sets are...

[12:55:01.0000] <manu-db>
I'm not saying that you won't have people saying that you sampled the wrong data set...

[12:56:00.0000] <manu-db>
but by having a pretty solid data set and methodology, you can convince the more rational people among us about a trend.

[12:56:01.0000] <manu-db>
where solid data set >= 80TB of data or 5 billion pages

[12:56:02.0000] <manu-db>
and methodology == the same question asked across dotbot, CommonCrawl, and 80legs.com gave roughly the same answer.

[12:57:00.0000] <manu-db>
(not saying that is easy to do... but it sounds better than what we're doing right now)

[12:57:01.0000] <manu-db>
(and it seems technically achievable for a very small investment of time and cash)

[12:58:00.0000] <Philip`>
Is the plan to update the data set regularly? (I'd imagine it's more useful to have one that's e.g. 10% of the size but updated every 3 months, so you can follow trends over time and detect usage of recent features)

[12:58:01.0000] <erlehmann>
manu-db, why not use html5lib?

[12:58:02.0000] <erlehmann>
for python?

[12:58:03.0000] <erlehmann>
i do not see what python dom stuff could do better. i feel dumb.

[12:58:04.0000] <Philip`>
(The dotbot data is kind of uselessly outdated now)

[12:58:05.0000] <manu-db>
Philip`: I think CommonCrawl updates their data twice a year... 80legs updates their data every 3 months.

[12:59:00.0000] <manu-db>
Philip`: It would be fun to see how much the dotbot data deviates from the frequently updated sample sets...

[13:01:00.0000] <manu-db>
erlehmann: Yes, you could use html5lib - except that some people say that it's slow (which translates into lots of $$$ on an Amazon Elastic Map Reduce Job on multiple terabytes of data)

[13:02:00.0000] <Philip`>
/me even has data saying it's slow :-)

[13:03:00.0000] <erlehmann>
oh

[13:05:00.0000] <jgraham>
It is slow

[13:05:01.0000] <jgraham>
This is not really an opinion :)

[13:05:02.0000] <devfil>
AryehGregor: hi, I'm trying to use your execCommand implementation but looks like it doesn't work on firefox :/

[13:06:00.0000] <AryehGregor>
devfil, I'll need a lot more details than that to debug the issue.  First, what URL are you looking at?  editor.html is *not* meant to be actually usable in practice at this point.

[13:06:01.0000] <Philip`>
(...Or at least I did have data - it's somewhere in the IRC logs, I'm just not sure where)

[13:07:00.0000] <AryehGregor>
(I'm about to leave for a while, but I should be back in an hour or so, so just be patient -- or continue this discussion by e-mail)

[13:07:01.0000] <devfil>
AryehGregor: I'm using nicEdit but instead of calling window.execCommand I'm calling myExecCommand, it works in chrome

[13:07:02.0000] <AryehGregor>
devfil, it will work somewhat in recent Chrome and Firefox, fail in some cases even in them, and fail horribly in other browsers.  It's really meant for testing, so I don't expect it to be reliable in other contexts.

[13:08:00.0000] <devfil>
AryehGregor: yes, I know

[13:08:01.0000] <devfil>
AryehGregor: I'm using firefox 7.0.1

[13:08:02.0000] <AryehGregor>
devfil, try Firefox 9.0a2 or later.

[13:08:03.0000] <AryehGregor>
Probably won't matter, though.

[13:09:00.0000] <AryehGregor>
Also try giving me a test case or describing the exact problem.

[13:09:01.0000] <AryehGregor>
AFK, BBL.

[13:15:00.0000] <kennyluck>
How different is recent Chrome from WebKit now? I wonder

[13:16:00.0000] <dglazkov>
kennyluck: what do you mean?

[13:18:00.0000] <kennyluck>
dglazkov, well AryehGregor mentioned execCommand work somewhat in recent *Chrome* and Firefox. This makes me wonder how far is Chromimum from the WebKit trunk at the moment.

[13:20:00.0000] <dglazkov>
kennyluck: http://src.chromium.org/viewvc/chrome/trunk/src/DEPS tells you the current WebKit revision being used (see "webkit_trunk" variable value), and the first entry on http://trac.webkit.org/ will give you the latest WebKit revision.

[13:20:01.0000] <devfil>
AryehGregor: only the first time it doesn't work

[13:20:02.0000] <dglazkov>
kennyluck: so, right now it's about 70 revisions.

[13:20:03.0000] <TabAtkins>
kennyluck: Chrome pulls from the trunk, though.  We don't fork, though a given release branches based on a particular trunk revision.

[13:21:00.0000] <kennyluck>
AryehGregor, so when you so "it fail horribly in other browser" I guess you don't include Safari running with the WebKit trunk?

[13:22:00.0000] <jgraham>
kennyluck: I expect AryehGregor can't run safari

[13:24:00.0000] <kennyluck>
TabAtkins, good to know. Thanks.

[13:58:00.0000] <karlcow>
http://twitter.com/0penweb

[14:06:00.0000] <AryehGregor>
kennyluck, Safari counts the same as outdated Chrome as far as I'm concerned.  I'm talking about IE and Opera, and maybe mobile browsers.

[14:06:01.0000] <AryehGregor>
Also, I could run Safari for Windows on a VM if I cared enough.

[14:07:00.0000] <AryehGregor>
But it doesn't matter, Chrome works the same for my purposes.

[14:22:00.0000] <AryehGregor>
/me wonders why while (var foo = bar()) isn't allowed, while for (var foo = bar(); ...) is

[14:23:00.0000] <gsnedders>
AryehGregor: because it's a var statement, and for/for-in are a special case.

[14:23:01.0000] <AryehGregor>
Why have a special case instead of just allowing it in any similar place?

[14:24:00.0000] <smaug____>
AryehGregor: it is not similar place

[14:24:01.0000] <gsnedders>
AryehGregor: Because it's semantics are different in the for/for-in case.

[14:25:00.0000] <AryehGregor>
Hmm.  I guess for (a; b; c) { d; } is logically the same as a; while (b) { d; c; }, so only the middle part is comparable.

[14:26:00.0000] <AryehGregor>
Huh, var a; a = [1, 2] && a[0]; doesn't work.  Apparently it evaluates the whole expression, including the assignment, before it actually assigns?

[14:26:01.0000] <AryehGregor>
That's counterintuitive.

[14:26:02.0000] <AryehGregor>
Not like C, at least.

[14:27:00.0000] <Philip`>
Surely being counterintuitive is like C

[14:27:01.0000] <zewt>
C is one of the most intuitive languages you'll find

[14:27:02.0000] <AryehGregor>
C is amazingly intuitive.

[14:27:03.0000] <AryehGregor>
It's really, really simple.

[14:27:04.0000] <zewt>
^5

[14:27:05.0000] <gsnedders>
AryehGregor: logical and is evaluated by GetValue(LHS) and then GetValue(RHS)

[14:28:00.0000] <gsnedders>
IIRC

[14:28:01.0000] <AryehGregor>
And GetValue() of an assignment is the RHS of the assignment, without actually doing the assignment, I guess?

[14:28:02.0000] <Philip`>
Doesn't seem particularly intuitive when there's trivial stuff like "a = a++" where it's impossible to know what it'll do

[14:28:03.0000] <zewt>
AryehGregor: that's parsed as a = ([1,2] && a[0]), not (a = [1,2]) && a[0]

[14:29:00.0000] <AryehGregor>
zewt, oh!

[14:29:01.0000] <Philip`>
Also not intuitive: aliasing

[14:29:02.0000] <AryehGregor>
So I could do (a = [1, 2]) && a[0], and that would work?

[14:29:03.0000] <gsnedders>
AryehGregor: Yes

[14:29:04.0000] <zewt>
if you felt the need, heh

[14:29:05.0000] <AryehGregor>
Okay, now that makes sense.

[14:29:06.0000] <AryehGregor>
Although maybe I'll just stick with being verbose and having some extra function calls.

[14:30:00.0000] <zewt>
Philip`: having used C for a decade and a half or so, I've never felt the need to write "a = a++" :)

[14:30:01.0000] <AryehGregor>
Okay, so my reproducible crash in Chromium, which is a regression, has not had anyone pay attention to it in more than a week despite the fact that I provided detailed reproduction instructions and a crash ID?  Seriously?  http://code.google.com/p/chromium/issues/detail?id=101791

[14:31:00.0000] <zewt>
it's just a fairly isolated (and rare, for that language) language ambiguity

[14:31:01.0000] <gsnedders>
zewt: Well, isn't that technically undefined?

[14:31:02.0000] <AryehGregor>
/me pokes dglazkov and TabAtkins 

[14:32:00.0000] <zewt>
by spec I'm not sure, but not that I'd defend that in particular--undefined things are based--it's just fairly isolated, in my experience

[14:32:01.0000] <zewt>
also are bad

[14:32:02.0000] <zewt>
(based? fingers on autopilot, apparently)

[14:33:00.0000] <gsnedders>
zewt: It ES (to take an example of where that's defined), it's a no-op if a is a Number

[14:37:00.0000] <TabAtkins>
AryehGregor: I don't have bug editting privileges on there, but I'll poke someone.

[14:37:01.0000] <AryehGregor>
TabAtkins, thanks.

[14:37:02.0000] <gsnedders>
*In

[14:58:00.0000] <AryehGregor>
TabAtkins, can you reproduce the crash?

[14:58:01.0000] <TabAtkins>
AryehGregor: Yup, and I put my own crash id in the bug report.

[14:58:02.0000] <AryehGregor>
Thanks.

[14:58:03.0000] <TabAtkins>
AryehGregor: https://bugs.webkit.org/show_bug.cgi?id=71737

[14:59:00.0000] <AryehGregor>
"You are not authorized to access bug #71737.

[14:59:01.0000] <AryehGregor>
"

[14:59:02.0000] <TabAtkins>
Oh, sorry, it's marked as a security bug.

[14:59:03.0000] <AryehGregor>
You should be able to CC me.

[14:59:04.0000] <TabAtkins>
AryehGregor: Still ayg⊙an?

[15:00:00.0000] <AryehGregor>
Yes, should be.

[15:00:01.0000] <TabAtkins>
k, you're cc'd

[15:00:02.0000] <AryehGregor>
Thanks.


2011-11-08
[17:27:00.0000] <sephr>
roc: are you awake?

[17:27:01.0000] <roc>
yeah, it's 2:30pm here :-)

[17:33:00.0000] <sephr>
roc: ok can you join #jsclique?

[17:33:01.0000] <sephr>
I want to talk about drawing nodes to canvas

[19:08:00.0000] <Taggnostr>
hello

[00:06:00.0000] <MikeSmith>
hsivonen: in looking at http://bugzilla.validator.nu/show_bug.cgi?id=876 (prefix subtags for extended language subtags and variant subtags), maybe the "Variant foo lacks required prefix." error message could also report what correct/expected prefix actually is.

[00:06:01.0000] <MikeSmith>
it seems like that would be helpful to users

[00:07:00.0000] <MikeSmith>
if you think it's worth adding I can write up a patch

[00:07:01.0000] <hsivonen>
MikeSmith: yeah. My error message writing tends to suck.

[00:07:02.0000] <hsivonen>
MikeSmith: as evidenced by Firefox localizers trying to make sense of parse errors

[00:07:03.0000] <MikeSmith>
heh

[00:07:04.0000] <MikeSmith>
well

[00:07:05.0000] <MikeSmith>
I wouldn't have thought about it in this case either except that Richard's checker does report it

[00:08:00.0000] <hsivonen>
MikeSmith: turns out I don't get to say "astral non-character" in Firefox UI :-(

[00:08:01.0000] <MikeSmith>
hmm

[00:08:02.0000] <MikeSmith>
what are you supposed to say instead?

[00:09:00.0000] <hsivonen>
MikeSmith: I just dropped "astral", because it wasn't important to differentiate erroneous character references by BMP vs. non-BMP

[00:09:01.0000] <MikeSmith>
ah, OK

[00:11:00.0000] <MikeSmith>
I guess the need for precise wording and the need for easier localizability are not always simple to reconcile

[07:22:00.0000] <annevk>
heycam: yt?

[07:23:00.0000] <annevk>
heycam: we should simplify callback

[07:23:01.0000] <annevk>
heycam: if everything is handleEvent we just need some inline parameter syntax for callbacks instead of the current thing

[07:45:00.0000] <hsivonen>
can someone remind me again what information the number in the ADR token in Opera Mobile's UA string carries?

[07:46:00.0000] <hsivonen>
or the SYB token on Symbian

[08:00:00.0000] <MikeSmith>
annevk5: it seems we are behind on reporting about Web Notifications

[08:00:01.0000] <MikeSmith>
see end of Bjoern's message here: http://lists.w3.org/Archives/Public/www-archive/2011Nov/0008.html

[08:01:00.0000] <MikeSmith>
so we should either publish and updated WD or some note explaining why we haven't

[08:02:00.0000] <MikeSmith>
... or even shut the WG down and move it to being a CG, which doesn't have any heartbeat requirement

[08:05:00.0000] <Philip`>
The solution to a group's lack of accountability on its progress is to change it into a group with no requirement of accountability on its progress?

[08:05:01.0000] <hober>
MikeSmith: annevk5 says the comments haven't been addressed yet

[08:06:00.0000] <jgraham>
annevk5 is dead and hober is a medium?

[08:07:00.0000] <hober>
he's shaving

[08:09:00.0000] <MikeSmith>
hober: MikeSmith says I understand about the comments but this is only about CYA so that we don't get spanked for not following the process requirements

[08:11:00.0000] <MikeSmith>
Philip`: it's more about lack of progress, period

[08:14:00.0000] <AryehGregor>
chrome://crashes isn't recording my crashes.  :(

[08:14:01.0000] <AryehGregor>
There's one from October 26, but none of the dozen or two I got today were recorded.

[08:15:00.0000] <AryehGregor>
(I wish sad tabs gave you a JS stack trace, if script was running during the crash)

[08:15:01.0000] <AryehGregor>
These tab crashes are really impeding my productivity.  Feh.

[08:20:00.0000] <AryehGregor>
Inconsistent crashes are the worst.

[08:36:00.0000] <annevk5>
MikeSmith: if we have a homepage, can't we put a notice there?

[08:36:01.0000] <MikeSmith>
annevk5: I guess

[08:36:02.0000] <MikeSmith>
not sure

[08:36:03.0000] <MikeSmith>
I'll check

[08:36:04.0000] <annevk5>
MikeSmith: alternatively, find me an editor :)

[08:37:00.0000] <annevk5>
I don't really see the point in publishing anything without an editor that addresses comments within a couple of months

[08:37:01.0000] <MikeSmith>
yeah, agreed about that

[08:38:00.0000] <MikeSmith>
but if neither of us nor the current editor has the time and energy to drive it, it could go to a CG and just survive on its own merit

[08:42:00.0000] <AryehGregor>
CGs have to have a certain level of participation to be started, and are closed for inactivity, no?

[08:44:00.0000] <MikeSmith>
I don't know that the rules are for inactivity on CGs

[08:44:01.0000] <MikeSmith>
other than that they must have 4 partipants

[09:05:00.0000] <jernoble>
Hixie: another MediaController question for you.

[09:06:00.0000] <jernoble>
Hixie: from the last comment on https://bugs.webkit.org/show_bug.cgi?id=71408

[09:06:01.0000] <jernoble>
Hixie:  In 4.8.10.11.2, the table in step 2 of "report the controller state" doesn't match the table in 4.8.10.17 for Media Controllers.  The former talks about the "readyState newly being X" and the latter talks about the "readyState newly being X or greater".

[09:12:00.0000] <jernoble>
Hixie: I filed http://www.w3.org/Bugs/Public/show_bug.cgi?id=14731

[11:37:00.0000] <AryehGregor>
So is there an Opera Next 12.00?  My Opera Next says 11.50.

[11:38:00.0000] <wilhelm>
AryehGregor: http://opera.com/next/

[11:38:01.0000] <AryehGregor>
Isn't it supposed to auto-update?

[12:36:00.0000] <espadrine>
AryehGregor: Opera Next does auto-update, if you restart it of course.

[12:36:01.0000] <AryehGregor>
espadrine, on all OSes?  Didn't seem to happen for me on Linux.

[12:36:02.0000] <espadrine>
(and, I believe, if you check the checkbox).

[12:36:03.0000] <Ms2ger>
And has deb.opera.com been updated?

[12:37:00.0000] <espadrine>
I've seen the autoupdating work on Linux.

[14:52:00.0000] <annevk>
ojan: there's actually some more edge cases :(

[14:53:00.0000] <annevk>
e.g. Comment can appear as descendant of Document

[14:53:01.0000] <annevk>
ProcessingInstruction too

[14:53:02.0000] <annevk>
so for those you need to check the parent and throw or something

[14:54:00.0000] <smaug____>
annevk: ok, I think I like the proposal :)

[14:54:01.0000] <annevk>
sweet

[14:54:02.0000] <danbeam>
is there a room for the CSSWG on freenode?

[14:55:00.0000] <smaug____>
danbeam: for w3c stuff use w3c's irc server

[14:56:00.0000] <annevk>
#css on irc.w3.org:6665

[14:56:01.0000] <danbeam>
smaug____, annevk thanks!


2011-11-09
[19:26:00.0000] <sephr>
roc: please don't tell me that that SVG in img patch is in firefox 8 stable

[19:28:00.0000] <roc>
the patch that breaks blob URIs?

[19:28:01.0000] <roc>
it's being backed out

[19:29:00.0000] <sephr>
I haven't even looked at the patch; I was just under the impression that it broke them from what you said

[19:29:01.0000] <sephr>
alright thanks

[19:29:02.0000] <sephr>
roc: speaking of ff8 changes, what's with the ugly 'no favicon' favicon?

[19:30:00.0000] <roc>
no idea

[19:40:00.0000] <jarek>
why W3C validator marks "@media all and (orientation: portrait) {}" as invalid?

[19:41:00.0000] <jarek>
I'm getting "portrait is not a orientation value ) {}" error

[19:41:01.0000] <jarek>
is this a bug in the validator?

[22:47:00.0000] <asmodai>
*sigh* that's awesome. 7.0.1 FF browser suddenly hangs on opening all my tabs on startup after upgrading to either 7.0.2/8.0

[22:47:01.0000] <asmodai>
Time to get debugging again

[22:48:00.0000] <asmodai>
Consistent hang though, 13% CPU (Core i7) and ~320 MB

[00:31:00.0000] <asmodai>
Oh wow, http://www.zdnet.com/blog/perlow/exclusive-adobe-ceases-development-on-mobile-browser-flash-refocuses-efforts-on-html5/19226

[00:35:00.0000] <Ms2ger>
Philip`, feel like doing some explaining in http://www.w3.org/Bugs/Public/show_bug.cgi?id=14421 ?

[00:59:00.0000] <hsivonen>
I wonder what the current thinking about X-OperaMini-Phone* headers is in the Opera Mini team these days. Good idea in retrospect? Bad idea in retrospect?

[02:09:00.0000] <Areks>
hello all

[02:09:01.0000] <Areks>
does ie8 support canvas or svg?

[02:19:00.0000] <jarek__>
Areks: http://caniuse.com/#search=canvas  http://caniuse.com/#search=svg

[02:50:00.0000] <zcorpan>
/me removes his mpilgrim feeds

[02:51:00.0000] <zcorpan>
/me also removes ln.hixie.ch

[05:27:00.0000] <asmodai>
What a news day, both Flash and Silverlight seemingly going the way of the dodo.

[05:29:00.0000] <smaug____>
oh, also silverlight

[05:29:01.0000] <smaug____>
good good

[05:32:00.0000] <asmodai>
http://www.theverge.com/2011/11/9/2548975/microsoft-may-halt-development-work-on-silverlight-after-next-release

[05:32:01.0000] <smaug____>
if we could add NaCl to that list, then the day would be really good

[05:32:02.0000] <asmodai>
Was not that unanticipated after the WinRT announcement

[05:33:00.0000] <zcorpan>
can someone explain "entry script" and give illustrative examples? :)

[05:39:00.0000] <asmodai>
having no context I could imagine entry script being the first script that runs and acts like a bootstrapper? :)

[05:40:00.0000] <jgraham>
/me thinks illustrated examples would be more fun than illustrative examples

[05:40:01.0000] <Philip`>
smaug____: Do you know if anyone has started using NaCl in real life yet?

[05:41:00.0000] <Philip`>
(Anyone other than Google, in particular)

[05:41:01.0000] <asmodai>
Philip`: I know some gamedevs investigating it

[05:41:02.0000] <asmodai>
Philip`: and working on code for it

[05:42:00.0000] <jgraham>
zcorpan: Isn't it just the script associated with the topmost item in the callstack?

[05:43:00.0000] <jgraham>
(assuming a downward growing stack)

[05:43:01.0000] <asmodai>
Heh, acquaintance complaining about canvas performance: http://starlon.lyrical.net/canvas_spiney.php

[05:45:00.0000] <nlogax>
i get ~1 fps on a quad-core i7.

[05:46:00.0000] <asmodai>
Heh

[05:46:01.0000] <asmodai>
that averages what some of us see

[05:46:02.0000] <asmodai>
0.3 fps to 2 fps depending on browser

[05:47:00.0000] <Philip`>
That doesn't exactly look like an efficient implementation of that effect

[05:48:00.0000] <asmodai>
Suggestions welcome, i'll let him know ^^

[05:51:00.0000] <zcorpan>
jgraham: what's the entry script when script A document.writes script B, for instance?

[05:52:00.0000] <Philip`>
asmodai: For a start, don't blindly port code that's optimised for C :-)

[05:53:00.0000] <jgraham>
zcorpan: When A is running it is A. When B is running it is B

[05:53:01.0000] <Philip`>
There's a load of stuff like of[ofptr + 0]=DIV_2(f[fptr + 0]) + DIV_8(f[fptr + 0]) + DIV_8(f[fptr + 1]) + DIV_8(f[fptr + -1]) + DIV_8(f2[f2ptr + 0]) + adj_tl2;

[05:53:02.0000] <Philip`>
which is assuming array lookups are free, and assuming DIV_2 is a macro and free, etc

[05:54:00.0000] <Philip`>
Better to understand what it's doing algorithmically and then work out how to implement that as sensible efficient JS

[05:54:01.0000] <jgraham>
zcorpan: At least AIUI. Because the script ends up in "creating scripts" which ends up in "calling scripts" which always changes the entry point

[05:55:00.0000] <zcorpan>
jgraham: ok. thanks

[05:58:00.0000] <asmodai>
Philip`: *nod*

[05:58:01.0000] <asmodai>
he did mention:

[05:59:00.0000] <asmodai>
<< starlon>> Should be accessing the image data directly for one.

[05:59:01.0000] <smaug____>
asmodai: that code could perhaps use typed arrays (at least when those are available)

[06:01:00.0000] <asmodai>
It's funny because people, not this guy, are whining about the state of HTML5 and taking over Flash features while it's not ready for it, but a lot of it is a bit catch-22, the moment Flash drops and people look at HTML5 it will drive HTML5 forward faster

[06:01:01.0000] <Philip`>
asmodai: I'd hypothesise (with no attempt at profiling the code or looking in any real detail) that the part that interacts with the canvas is fast (since it seems to be basically just putImageData), and it's all the JS code doing computations that is slow

[06:01:02.0000] <asmodai>
Philip`: That could very well be.

[06:01:03.0000] <jgraham>
I would hpothesise, without looking at anything, that there is no reason that the javascript should be slow for this

[06:02:00.0000] <asmodai>
jgraham: Haha

[06:02:01.0000] <jgraham>
if it is written in a way that works well

[06:02:02.0000] <jgraham>
(which it isn't at present)

[06:04:00.0000] <smaug____>
jgraham: btw, does Opera support typed arrays?

[06:05:00.0000] <Philip`>
I'd assume there's no fundamental reason it should necessarily be more than like 10x slower than C, if it's optimised for JS

[06:06:00.0000] <smaug____>
10x sounds quite a lot

[06:06:01.0000] <jgraham>
smaug____: Yes, in the snapshots

[06:06:02.0000] <jgraham>
Although I am not 100% sure how optimised they are yet

[06:07:00.0000] <asmodai>
http://blog.illyriad.co.uk/index.php/2011/11/webgl-experiments-illyriads-3d-town/

[06:23:00.0000] <hsivonen>
Looks like there are Android fanbois who became Flash fanbois because Android had Flash but iOS didn't

[06:24:00.0000] <hsivonen>
I'm making inferences from Android Central comments on Firefox 8 and the news about Adobe no longer developing Flash Player for mobile

[06:29:00.0000] <asmodai>
That's weird.

[06:29:01.0000] <asmodai>
I am a huge Android enjoyer, but I would not mind to see Flash go bye bye

[06:34:00.0000] <zcorpan>
i haven't had a single case of "hmm i need to install flash to make this work" on my phone

[06:36:00.0000] <asmodai>
Watching Khan Academy videos on my tablet does :(

[06:38:00.0000] <hsivonen>
I occasionally have to copy the page URL from Firefox to Opera Mobile on Android, because there's a video wrapped in swf

[06:39:00.0000] <jgraham>
zcorpan: I have needed it to view a resturant website on someone else's phone, I think

[06:40:00.0000] <hsivonen>
restaurant sites... what's possessing them to use swf and PDF?

[06:43:00.0000] <Philip`>
Maybe it's just seen as an extension of printed leaflets produced by their graphic designers, and they don't think they need to bother finding a web developer to get involved

[06:44:00.0000] <asmodai>
Happens a lot on websites. They convert their weekly product bonus folder to a Flash clickable version >_<

[06:47:00.0000] <smaug____>
hsivonen: although it was an email attachment, I was very surprised when I got that one pdf news letter yesterday to my moco email

[07:01:00.0000] <AryehGregor>
I don't suppose there's any free crippleware Word suitable for testing but not actual use, is there?

[07:03:00.0000] <jgraham>
Libreoffice? :p

[07:03:01.0000] <AryehGregor>
I have that, but it would be nice if I could test on Word too.

[07:03:02.0000] <jgraham>
(yeah, I know that is not sutiable for you :)

[07:11:00.0000] <AryehGregor>
I can test in Google Docs, though.

[07:12:00.0000] <AryehGregor>
That's another data point.

[07:17:00.0000] <hsivonen>
AryehGregor: doesn't Google Docs depend on what contenteditable does?

[07:17:01.0000] <AryehGregor>
hsivonen, no, it doesn't use contenteditable at all.

[07:18:00.0000] <AryehGregor>
No one in their right mind uses contenteditable for anything, it's a complete trainwreck.

[07:18:01.0000] <AryehGregor>
Well, not exactly.

[07:18:02.0000] <AryehGregor>
People without the resources of Google Docs are forced to use contenteditable, they just don't use execCommand().

[07:18:03.0000] <AryehGregor>
Some poor suckers do use execCommand(), but anyone sensible uses a library like TinyMCE or such.

[07:19:00.0000] <AryehGregor>
But anyway, no, currently Google Docs doesn't use contenteditable at all, and its data model isn't even really HTML.

[07:19:01.0000] <AryehGregor>
But in any event, what I'm testing right now (auto-linking when you type a URL) is independent of contenteditable, except in IE, which I'm testing by itself.

[07:19:02.0000] <hsivonen>
AryehGregor: what does Google Docs use?

[07:20:00.0000] <AryehGregor>
Div soup and lots and lots of JavaScript.

[07:20:01.0000] <AryehGregor>
I mean, they do use HTML for rendering, not canvas or something.

[07:21:00.0000] <jgraham>
(Docs does actually use contenteditable to get IME support)

[07:21:01.0000] <hsivonen>
jgraham: I was about to ask about that next

[07:21:02.0000] <jgraham>
(but they create a contenteditable div and then delete it again, or something)

[07:21:03.0000] <AryehGregor>
Probably only because they haven't finished writing their own IME yet, anyway.

[07:21:04.0000] <jgraham>
Well the platform doesn't really support it yet

[07:21:05.0000] <jgraham>
They are pushing for it though :)

[07:21:06.0000] <AryehGregor>
/me doesn't have much of any inside info about this, was just given a brief summary by Annie Sullivan at a Toronto meetup a while back

[07:22:00.0000] <AryehGregor>
jgraham, why can't you make one up from scratch in JS?

[07:22:01.0000] <jgraham>
/me only knows what was said at TPAC

[07:22:02.0000] <jgraham>
AryehGregor: I'm not sure

[07:22:03.0000] <jgraham>
Maybe the idea is that you should use the system one?

[07:23:00.0000] <jgraham>
Because different users will have different configurations

[07:23:01.0000] <jgraham>
and having it work differently on one website would be a problem

[07:24:00.0000] <AryehGregor>
One might think that's true for everything else, too.

[07:24:01.0000] <AryehGregor>
Google Doc constantly annoys me by behaving differently from normal programs when I do things like Ctrl-Backspace.

[07:25:00.0000] <jgraham>
Well I would be pretty surprised if I typed "hello" and docs inserted "world"

[07:25:01.0000] <jgraham>
(rather than "hello")

[07:26:00.0000] <jgraham>
Moreso than if editing commands worked differently

[07:27:00.0000] <AryehGregor>
I don't think IMEs quite work that way.  At least for CJK, they show you what they're going to input and you have to hit space to let it.  Although perhaps for common words, users remember the right sequence and don't look because they know what they have to type for the first choice to be correct.

[07:27:01.0000] <AryehGregor>
I've seen them used, but never tried it myself.  (Not that I know any CJK language.)

[07:28:00.0000] <jgraham>
My imagination is that learning a new IME is roughly like learning a new keyboard layout

[07:28:01.0000] <jgraham>
But I haven't used one either

[07:31:00.0000] <AryehGregor>
I picture it as more like smartphone autosuggest, except there's no option to just keep what you typed.

[07:35:00.0000] <AryehGregor>
To be fair, LibreOffice also often ignores platform conventions.

[07:39:00.0000] <hsivonen>
document.body.outerHTML = "<body>foo</body>";

[07:39:01.0000] <hsivonen>
only pre-Ragnarök Opera works the way authors might expect

[07:40:00.0000] <hsivonen>
Chrome and Ragnarök work per spec

[07:40:01.0000] <hsivonen>
IE9 works yet differently

[07:40:02.0000] <hsivonen>
I guess I'll just make Firefox work per spec like Ragnarök and Chrome

[07:41:00.0000] <AryehGregor>
What does spec say?

[07:41:01.0000] <hsivonen>
AryehGregor: you get two heads

[07:41:02.0000] <AryehGregor>
o_O

[07:41:03.0000] <hsivonen>
AryehGregor: zero heads in IE9

[07:42:00.0000] <AryehGregor>
Why should it affect the head at all?

[07:42:01.0000] <hsivonen>
one head in pre-Ragnarök Opera

[07:42:02.0000] <hsivonen>
AryehGregor: parsing stuff with html as the context node always generates a head and a body

[07:43:00.0000] <hsivonen>
correction: zero bodies in IE9 (one head)

[07:45:00.0000] <jgraham>
Two heads are better than one!

[07:48:00.0000] <annevk5>
talking about body and head elements as heads and bodies is weird

[07:48:01.0000] <annevk5>
we're not hitman

[07:49:00.0000] <dglazkov>
good morning, Whatwg!

[07:50:00.0000] <jgraham>
dglazkov: Damn, I obviously needed to spend more time with you to dull the edge of your optimism

[07:55:00.0000] <hsivonen>
jgraham, annevk5: do you happen to know why Opera Mobile says "Opera Mobi" in its UA string?

[07:55:01.0000] <hsivonen>
Is it avoiding the substring "Mobile" or the substring "Opera Mobile"?

[07:55:02.0000] <jgraham>
hsivonen: No idea

[07:55:03.0000] <jgraham>
I might be able to ask someone

[07:56:00.0000] <jgraham>
If you rally care

[07:56:01.0000] <hsivonen>
jgraham: I do really care, so it would be very nice if you could ask

[07:59:00.0000] <annevk5>
/me leaves it to jgraham

[07:59:01.0000] <annevk5>
UA strings make me sad

[10:33:00.0000] <AryehGregor>
So Gecko throws on node.childNodes[-1], it seems.

[10:36:00.0000] <AryehGregor>
document.childNodes[-1] is undefined in IE9, Chrome 16 dev, Opera 12.00.  Throws in Firefox 9.0a2.

[10:36:01.0000] <AryehGregor>
Spec seems to say it should be null.

[10:37:00.0000] <AryehGregor>
document.childNodes.item(-1) is null in IE9, Firefox 9.0a2, and Opera 12.00.  Throws in Chrome 16 dev.  Spec seems to say it should be null.

[10:37:01.0000] <AryehGregor>
Sigh.

[10:38:00.0000] <AryehGregor>
WebIDL doesn't permit a getter method to return something different from actually indexing, right?

[10:38:01.0000] <erlehmann>
argl

[10:44:00.0000] <AryehGregor>
http://www.w3.org/Bugs/Public/show_bug.cgi?id=14743

[11:05:00.0000] <AryehGregor>
Is there a way in Firebug to break on all exceptions, like in WebKit's Web Inspector?

[11:14:00.0000] <AryehGregor>
Blech, we really need to standardize HTML serialization properly.  Gecko and WebKit behave differently in all sorts of ways.

[11:14:01.0000] <AryehGregor>
hsivonen, do you know what the story is with HTML serialization?  Has anyone tried implementing the spec?

[11:14:02.0000] <AryehGregor>
/me notices that Gecko URL-encodes <a href=""> in serialization

[11:19:00.0000] <annevk5>
you have to pay for Growl now?

[11:32:00.0000] <wilhelm>
Do any of the search engines actively use the metadata described on schema.org yet?

[11:32:01.0000] <AryehGregor>
Almost certainly.

[11:32:02.0000] <AryehGregor>
Why would they make the project in the first place if they didn't intend to use it?

[11:35:00.0000] <wilhelm>
That's known to happen in this industry. (c:

[11:43:00.0000] <hober>
annevk5: made it to the airport ok?

[11:49:00.0000] <Hixie>
AryehGregor: document.childNodes[-1] is undefined in in the spec

[11:49:01.0000] <AryehGregor>
Hixie, really?  How so?

[11:50:00.0000] <Hixie>
how would it be anything else?

[11:50:01.0000] <AryehGregor>
Hixie, in DOM4, NodeList has a getter, item().  item() is defined to return null for out-of-range indices.

[11:50:02.0000] <Hixie>
yes, item(-1) definitely returns null

[11:50:03.0000] <Hixie>
that's a method call

[11:51:00.0000] <Hixie>
but there's no -1 property

[11:51:01.0000] <Hixie>
on the object

[11:52:00.0000] <Hixie>
so you never even get to webidl, you return undefined all the way back in the JS spec

[11:52:01.0000] <Hixie>
certainly you don't get as far as invoking item()

[11:52:02.0000] <AryehGregor>
Hmm.

[11:52:03.0000] <AryehGregor>
/me rereads the relevant bit of WebIDL

[11:53:00.0000] <AryehGregor>
"If an indexed property getter was specified using an operation with an identifier, then the value returned when indexing the object with a given index is the value that would be returned by invoking the operation, passing the index as its only argument."

[11:53:01.0000] <AryehGregor>
It doesn't say that only holds for supported property indices.

[11:53:02.0000] <AryehGregor>
Maybe it should.

[11:53:03.0000] <AryehGregor>
Otherwise, I don't see where the concept is used.

[11:54:00.0000] <AryehGregor>
Maybe I should look at the ES binding?

[11:54:01.0000] <AryehGregor>
(Maybe we should stop pretending WebIDL is language-neutral?)

[11:55:00.0000] <Hixie>
well you should definitely also be looking at the ES binding, certainly

[11:55:01.0000] <Hixie>
but also the JS spec

[11:56:00.0000] <AryehGregor>
I don't see where ES comes into play.  If WebIDL says what happens when you index the object, it overrides ES.

[11:57:00.0000] <Hixie>
if WebIDL overrides JS then it overrides the parts of JS it overrides, sure. But it doesn't override everything.

[11:57:01.0000] <AryehGregor>
Hmm, I think this bit implies that every object supporting indexed properties will appear to have all numeric properties from 0 to 2^32 - 2: http://dev.w3.org/2006/webapi/WebIDL/#dfn-array-index-property-name

[11:59:00.0000] <Hixie>
4.7.2 is the algorithm JS calls

[12:00:00.0000] <Hixie>
and that algorithm, if the index isn't supported, defers to JS

[12:00:01.0000] <Hixie>
which then returns undefined

[12:00:02.0000] <AryehGregor>
Hmm, okay.

[12:00:03.0000] <AryehGregor>
That's confusing.

[12:00:04.0000] <AryehGregor>
I'll file some WebIDL bugs.

[12:00:05.0000] <Hixie>
WebIDL doesn't really override JS at all here, it just uses the hooks JS provides

[12:08:00.0000] <AryehGregor>
http://www.w3.org/Bugs/Public/show_bug.cgi?id=14746

[12:47:00.0000] <Ms2ger>
AryehGregor, does document.childNodes[-1] still throw in Nightly?

[12:47:01.0000] <AryehGregor>
Ms2ger, didn't test, only tested in Aurora.

[12:47:02.0000] <AryehGregor>
/me looks for Nightly

[12:47:03.0000] <Ms2ger>
You're probably still on the old bindings, then

[12:48:00.0000] <AryehGregor>
"old bindings"?

[12:48:01.0000] <smaug____>
I thought Aurora has new bindings

[12:48:02.0000] <smaug____>
for nodelists

[12:48:03.0000] <Ms2ger>
smaug____, but has there been an update already?

[12:48:04.0000] <AryehGregor>
/me finds https://launchpad.net/~ubuntu-mozilla-daily/+archive/ppa

[12:49:00.0000] <smaug____>
Ms2ger: ah, true

[12:49:01.0000] <smaug____>
yeah, AryehGregor, try Nightly

[12:49:02.0000] <Ms2ger>
AryehGregor, DOM bindings, we're experimenting with a new approach on nodelists

[12:49:03.0000] <Ms2ger>
See https://bugzilla.mozilla.org/show_bug.cgi?id=648801

[12:50:00.0000] <AryehGregor>
I see, I had the repo installed but needed to install the firefox-trunk package.

[12:53:00.0000] <AryehGregor>
Ah, now it works.

[12:53:01.0000] <AryehGregor>
Nice.

[12:53:02.0000] <AryehGregor>
Thanks.

[12:53:03.0000] <Ms2ger>
Np :)

[13:13:00.0000] <annevk5>
hober: yeah all good

[13:13:01.0000] <annevk5>
hober: fly in an hour or so, was way on time :)

[13:18:00.0000] <wilhelm>
I thought I was running late when flying out on Sunday, but the airport had just forgot to adjust their clocks. :P

[13:22:00.0000] <annevk5>
ooh, that would be really annoying

[13:26:00.0000] <hober>
cool

[13:40:00.0000] <annevk5>
TabAtkins: fwiw, TR/html5/ uses the script thingie to close the notice

[13:40:01.0000] <annevk5>
TabAtkins: seems like the path of least resistance


2011-11-10
[17:23:00.0000] <nattokirai>
bz: ping

[17:33:00.0000] <sgentle>
hi there

[17:33:01.0000] <sgentle>
is there a reasonable way to keep a reference to a set of elements in the DOM? Eg, if I had <ul><div /><li /><li /><div /></ul> and I wanted to keep a reference to the <li>s such that I could add another one at the end (or the start, or the middle), and the reference would stay valid even if extra nodes were added or removed around it? I think I basically want something like a documentFragment that is actually in the document

[17:55:00.0000] <roc>
what's wrong with just holding references to the nodes?

[18:04:00.0000] <sgentle>
gets a bit messy if you remove the last node and add it again

[18:04:01.0000] <sgentle>
(i.e., what do I anchor to if I have an empty list?)

[18:04:02.0000] <sgentle>
I'm poking around with Range, which looks promising

[18:05:00.0000] <sgentle>
(although, as always, browser support is a desolate wasteland of broken dreams)

[18:10:00.0000] <zewt>
a "reference" to an empty list is usually just null

[23:08:00.0000] <hsivonen>
AryehGregor: Dunno what the story with serialization is exactly. Maybe I should implement it for Firefox to make innerHTML work faster.

[00:11:00.0000] <zcorpan>
ok so what should happen if http://example.org embeds http://foo.example.org and they both set document.domain to example.org, then the outer page does <body onload="window[0].document.write('foo')"> ? what's the origin of the inner document?

[00:14:00.0000] <zcorpan>
afaict from the spec the origin doesn't change as a result of hte document being blown away

[00:15:00.0000] <zcorpan>
or, wait

[00:18:00.0000] <zcorpan>
argh

[02:25:00.0000] <smaug____>
hsivonen: curious, how stable is outerHTML, or how well do browsers implement it

[02:25:01.0000] <smaug____>
in other words, should I read the spec and file spec bugs :)

[02:26:00.0000] <smaug____>
Where is Ms2ger

[02:31:00.0000] <annevk>
hober: good news, the beer survived!

[02:49:00.0000] <hsivonen>
smaug____: I implemented the spec. Chrome and Opera 12 alpha seemed to implement the spec

[02:49:01.0000] <hsivonen>
smaug____: IE has implemented it for ages, but in IE, edge cases are weird

[02:50:00.0000] <hsivonen>
smaug____: edge cases being cases where the context node is something particularly special

[02:50:01.0000] <smaug____>
hsivonen: you mentioned something about body context yesterday

[02:51:00.0000] <hsivonen>
smaug____: no, I mentioned setting outerHTML on body, which makes html the context node for the fragment parsing algorithm

[02:51:01.0000] <hsivonen>
smaug____: that case works the same in Chrome, Opera 12 and (with the patch) Firefox

[02:51:02.0000] <hsivonen>
smaug____: the result is even logical in its own way even if counter-intuitive

[02:52:00.0000] <smaug____>
yeah, I meant using outerHTML on body

[02:52:01.0000] <hsivonen>
smaug____: it fails enough in IE that I don't expect anyone to assign to outerHTML on body anyway

[02:53:00.0000] <hsivonen>
smaug____: I think we shouldn't worry about the counter-intuitiveness and we should just do what the spec already says and what Opera 12 and Chrome already do

[02:53:01.0000] <jgraham>
hsivonen: We had a bug where people were assigning outerHTML on <html>

[02:53:02.0000] <smaug____>
hsivonen: what about DocumentFragment

[02:53:03.0000] <jgraham>
(it was dark-matterish though)

[02:53:04.0000] <smaug____>
it is *very* surprising to see <body> created automatically

[02:53:05.0000] <hsivonen>
smaug____: I made it work per spec

[02:54:00.0000] <jgraham>
smaug____: You mean <head>?

[02:54:01.0000] <smaug____>
I mean <body>

[02:54:02.0000] <hsivonen>
smaug____: in the document fragment case, the body node is only a fictional context node. it doesn't show up in the output

[02:54:03.0000] <hsivonen>
smaug____: you need to read the spec sentence very carefully

[02:55:00.0000] <hsivonen>
smaug____: italic parent and upright parent are different nodes

[02:55:01.0000] <hsivonen>
jgraham: does setting outerHTML on html do something reasonable in IE?

[02:56:00.0000] <hsivonen>
which reminds me that I should participate in the public-webapps thread and explain why tweaking fragment parsing is harder than it seems

[02:57:00.0000] <jgraham>
hsivonen: I don't think so

[02:57:01.0000] <jgraham>
It used to in Opera

[02:57:02.0000] <jgraham>
hsivonen: What is hard?

[02:58:00.0000] <hsivonen>
jgraham: DWIM without a context node so that *everything* works intuitively

[02:58:01.0000] <smaug____>
hsivonen: yes, please, comment something in the webapps

[02:58:02.0000] <hsivonen>
smaug____: oh, in the patch, I didn't try to make the optimization for parsing directly into the context node

[02:59:00.0000] <hsivonen>
smaug____: I figured that there are enough ways for the circumstances to prevent the optimization from working

[02:59:01.0000] <hsivonen>
smaug____: so it would be a premature optimization

[02:59:02.0000] <jgraham>
hsivonen: Any particular subset of everything you have in mind as being hard?

[03:00:00.0000] <smaug____>
hsivonen: yeah, we can optimize later

[03:00:01.0000] <hsivonen>
smaug____: I think we shouldn't optimize unless we later see a lot of perf-critical outerHTML use that would benefit from parsing directly to the context node

[03:00:02.0000] <hsivonen>
smaug____: ok

[03:00:03.0000] <smaug____>
hsivonen: I'll do some profiling later

[03:02:00.0000] <hsivonen>
jgraham: suppose you want a DWIM mode where <html>, <head>, <body>, <tbody>, <tr>, <td>, <g>, <mi>, etc. all do whatever the person invoking the parser intended

[03:03:00.0000] <hsivonen>
jgraham: in that case, you'd have to support <html> creating an node and enforcing the usual rules for its children *except* after </html>, it would have to allow siblings

[03:03:01.0000] <hsivonen>
jgraham: for no use cases--just for logic and completeness

[03:03:02.0000] <hsivonen>
/me goes read the public-webapps thread

[03:03:03.0000] <jgraham>
Why woulod it have to?

[03:04:00.0000] <hsivonen>
jgraham: for completeness

[03:04:01.0000] <hsivonen>
jgraham: otherwise, we'd end up cherry-picking magic modes for some hard tags but not others

[03:04:02.0000] <hsivonen>
jgraham: maybe we'll end up making a partially magic mode

[03:04:03.0000] <jgraham>
I mean if you do <html>{stuff}</html>{more stuff} in the contextless mode I would expect it to be like passing that to the HTML parser

[03:05:00.0000] <hsivonen>
jgraham: that's because you've done QA on an HTML parser!

[03:06:00.0000] <jgraham>
Well maybe :) But it doesn't seem particularly illogical

[03:06:01.0000] <hsivonen>
jgraham: btw, any word on the "Mobi" string?

[03:06:02.0000] <jgraham>
Much less than outerHTML

[03:07:00.0000] <jgraham>
hsivonen: Nothing definitive, there were suggestions that many combinations of the words "Opera" and "Mobile" including them individualy had been problematic on at least some sites

[03:08:00.0000] <hsivonen>
jgraham: thanks

[03:08:01.0000] <Ms3ger>
smaug____: at your service

[03:08:02.0000] <jgraham>
Argh it's the evil twin

[03:12:00.0000] <annevk>
1.5 times as evil

[03:13:00.0000] <smaug____>
Ms3ger: hsivonen already answered

[03:25:00.0000] <zcorpan>
annevk: why doesn't https://bitbucket.org/annevk/webvtt/issues/query have issue tracking enabled?

[03:26:00.0000] <annevk>
prolly default

[03:30:00.0000] <zcorpan>
can you flip a switch?

[03:32:00.0000] <annevk>
/me flips and succeeds

[03:32:01.0000] <zcorpan>
thanks

[03:32:02.0000] <smaug____>
annevk: which all callbacks use handleEvent?  EventListener, some GeoLocation stuff, but what else?

[03:33:00.0000] <smaug____>
Apparently FunctionStringCallback, but that can and should be changed

[03:33:01.0000] <smaug____>
and so should NavigatorUserMediaSuccessCallback

[03:33:02.0000] <smaug____>
aha

[03:33:03.0000] <smaug____>
/me files spec bugs

[03:33:04.0000] <annevk>
BlobCallback

[03:33:05.0000] <annevk>
there's quite a few

[03:34:00.0000] <smaug____>
all the ones in HTML spec can be changed

[03:34:01.0000] <annevk>
there were some more according to people working on Chromium

[03:34:02.0000] <annevk>
still seems like a pretty silly idea to me

[03:34:03.0000] <smaug____>
what?

[03:35:00.0000] <smaug____>
to not use handleEvent everywhere?

[03:35:01.0000] <smaug____>
it is silly to have badly named methods in interfaces

[03:35:02.0000] <annevk>
just having function seems fine to me actually

[03:36:00.0000] <annevk>
these are a lot of extra methods you would have to learn in theory and they will likely almost never end up getting used

[03:36:01.0000] <smaug____>
"you would have to learn" ?

[03:36:02.0000] <smaug____>
who would have to learn

[03:37:00.0000] <annevk>
authors

[03:37:01.0000] <smaug____>
if web dev doesn't use {} syntax, he doesn't need to care about the method names

[03:37:02.0000] <annevk>
if they care about the non-function model at all

[03:37:03.0000] <annevk>
which seems unlikely

[03:37:04.0000] <smaug____>
{} is used pretty often for event listeners

[03:38:00.0000] <annevk>
I never encountered it

[03:38:01.0000] <annevk>
but I haven't done any research

[03:46:00.0000] <hsivonen>
smaug____: ok. I responded to the public-webapps thread

[03:51:00.0000] <jgraham>
hsivonen: Agreed that svg and mathml fragments might be problematic

[03:54:00.0000] <annevk>
fwiw

[03:54:01.0000] <annevk>
yehuda submitted a patch to the bug ms2ger filed for the HTML parsing algorithm

[03:54:02.0000] <annevk>
I guess that outlines his expectations

[03:54:03.0000] <hsivonen>
annevk: URL?

[03:56:00.0000] <annevk>
/me tries to find it

[03:58:00.0000] <annevk>
hsivonen: http://www.w3.org/Bugs/Public/show_bug.cgi?id=14694

[03:59:00.0000] <hsivonen>
annevk: thanks

[04:04:00.0000] <jgraham>
That patch doesn't actually work does it?

[04:04:01.0000] <jgraham>
e.g. <tr><caption>

[04:04:02.0000] <jgraham>
Uh, bad example

[04:05:00.0000] <smaug____>
hsivonen: would it make sense to have some kind of innerHTML like method which had context node as a parameter

[04:06:00.0000] <zcorpan>
like createContextualFragment?

[04:06:01.0000] <smaug____>
that way svg/mathml could be handled somewhat sane way,

[04:06:02.0000] <smaug____>
zcorpan: something like that, but createContextualFragment is insane

[04:06:03.0000] <smaug____>
:)

[04:07:00.0000] <smaug____>
it is really silly that one needs to create and initialize a range object to get right context node

[04:07:01.0000] <jgraham>
(well actually not that bad an example, since that would crash I think)

[04:12:00.0000] <jgraham>
Umm, ignore me, I am being silly

[04:20:00.0000] <smaug____>
DocumentFragment parseHTML(DOMString aData, [optional] Element aContext)

[04:20:01.0000] <smaug____>
in Document

[04:20:02.0000] <smaug____>
or, in each element, but without optional parameter

[04:22:00.0000] <zcorpan>
innerHTML already has context

[04:23:00.0000] <hsivonen>
smaug____: the API that takes a DOM node as a context is innerHTML

[04:24:00.0000] <hsivonen>
smaug____: except the result holder is the same node, not a separate DocementFragment

[04:24:01.0000] <smaug____>
right

[04:24:02.0000] <hsivonen>
I think we should add innerHTML, outerHTML and insertAdjacentHTML to SVG and MathML nodes, too.

[04:25:00.0000] <smaug____>
hsivonen: I'm thinking about sane replacement to createContextualFragment.

[04:25:01.0000] <hsivonen>
smaug____: would it mark scripts as "already started" or not?

[04:26:00.0000] <smaug____>
bah. Why do you need to ask difficult questions

[04:26:01.0000] <hsivonen>
smaug____: I suppose we could have document.createContextualFragment(markup, contextLocal, contextNS)

[04:27:00.0000] <hsivonen>
smaug____: where omitting contextNS would default to the XHTML namespace

[04:27:01.0000] <hsivonen>
smaug____: and omitting both contextLocal and contextNS would do Yehuda's DWIM

[04:28:00.0000] <hsivonen>
or document.parseFragment to have a shorter name

[04:28:01.0000] <hsivonen>
and to avoid using the same name as a crazy feature

[04:35:00.0000] <jgraham>
document.parse would be a better name

[04:36:00.0000] <jgraham>
Nameing in the DOM was one of the things that all the js people were complaining about

[04:37:00.0000] <smaug____>
js or jQuery or who ;)

[04:41:00.0000] <hsivonen>
smaug____: Alex Russell in particular.

[05:09:00.0000] <annevk>
zcorpan: thanks for filing the WebVTT issues

[05:09:01.0000] <annevk>
zcorpan: I think I'm not going to work much until Monday so if you want to write patches... otherwise I'll get to it

[05:10:00.0000] <zcorpan>
k

[05:18:00.0000] <zcorpan>
annevk: i tried pushing a change. it said auth failed

[05:19:00.0000] <annevk>
try again

[05:20:00.0000] <zcorpan>
bb/acl: zcorpan is allowed. accepted payload.

[05:21:00.0000] <zcorpan>
i get an ugly username. oh well

[05:22:00.0000] <annevk>
way ahead of you

[05:23:00.0000] <zcorpan>
aah! thanks

[05:41:00.0000] <zcorpan>
hmm. settings parser looks scary. i'll leave that one for now :)

[05:44:00.0000] <zcorpan>
annevk: dom api doesn't expose linePosition auto value. (returns 0 instead.) should we get the spec changed to expose it?

[05:47:00.0000] <annevk>
zcorpan: if the API only exposes the computed value that does not seem necessary

[05:49:00.0000] <Philip`>
AryehGregor: If you still want a free Word, you could buy a new computer with Office Start 2010 on it (http://www.microsoft.com/oem/en/products/office/pages/office_2010_starter.aspx)

[05:49:01.0000] <davidb_>
t

[05:55:00.0000] <zcorpan>
annevk: it'd be nice if the dom api and your parser's api were consistent so it's easy to compare the output

[05:57:00.0000] <zcorpan>
annevk: also, i think it would be good to be able to set linePosition to "auto" in the dom api

[05:58:00.0000] <annevk>
maybe it should be made nullable

[06:05:00.0000] <Philip`>
(s/Start/Starter/)

[06:06:00.0000] <jgraham>
/me wonders how Philip` manages to collect quite so much correct-but-useless information

[06:07:00.0000] <annevk>
are you still working on your thesis Philip`?

[06:10:00.0000] <Philip`>
jgraham: Actually I didn't know about it until half an hour ago when looking at new laptops

[06:11:00.0000] <Philip`>
annevk: No, it's all written and submitted now

[06:37:00.0000] <annevk>
so how can webperf specs go to CR exactly?

[06:37:01.0000] <annevk>
http://dvcs.w3.org/hg/webperf/raw-file/tip/specs/PerformanceTimeline/Overview.html says entryType returns unsigned short but specs define DOMString values for it

[06:37:02.0000] <annevk>
const DOMString is going to be removed

[06:49:00.0000] <jgraham>
annevk: I get the impression WebPerf is the new D3E

[06:52:00.0000] <smaug____>
:)

[06:58:00.0000] <smaug____>
jgraham: NavigationTiming was in CR when it was still very much unimplementable

[07:15:00.0000] <hsivonen>
annevk: as part of your XHR testing and speccing, did you test if engines other than Gecko support multipart responses in XHR?

[07:15:01.0000] <hsivonen>
(the only test case I have at hand is entangled in mochitest)

[07:19:00.0000] <annevk>
afaik only Gecko does it

[07:34:00.0000] <smaug____>
hsivonen: http://mozilla.pettay.fi/post_multipart_test.html is an old test

[08:17:00.0000] <gsnedders>
Philip`: So what are you doing now?

[08:18:00.0000] <jgraham>
gsnedders: Shopping for a laptop by the sound of it

[08:50:00.0000] <annevk>
http://blog.whatwg.org/weekly-tpac-2011

[08:50:01.0000] <annevk>
featuring tantek's <time> proposal

[08:58:00.0000] <AryehGregor>
Philip`, I have trouble understanding advice of the form "If you want a free X, you could buy Y."  It doesn't seem internally consistent.

[09:01:00.0000] <zewt>
if you want a free phone, just sign this $2000 contract!

[09:04:00.0000] <jgraham>
AryehGregor: It seems to depend on whether the value to you of Y is greater than the cost of Y. If it is you could indeed regard X as free.

[09:04:01.0000] <jgraham>
(or equal to)

[09:04:02.0000] <AryehGregor>
jgraham, no, you're just getting a discount on both X and Y.

[09:06:00.0000] <jgraham>
I'm not sure why. If you have no interest in X but get it anyway, why would you regard that as a discount on X?

[09:06:01.0000] <AryehGregor>
Well, in any event, you're not getting X for free.  You're getting X and Y in exchange for money.

[09:06:02.0000] <AryehGregor>
You might not care that you're getting X, and might be willing to pay the same amount for Y alone.

[09:07:00.0000] <AryehGregor>
But you're still only getting X in exchange for money, whatever else you get along with it.

[09:07:01.0000] <AryehGregor>
So it's not free.

[09:09:00.0000] <tantek>
/me is on the HTML-WG call

[09:09:01.0000] <tantek>
hgroup is not closed - due to being reopened/extended

[09:09:02.0000] <tantek>
what are various whatwg opinions on hgroup?

[09:10:00.0000] <AryehGregor>
/me doesn't care

[09:10:01.0000] <annevk>
"no change"

[09:12:00.0000] <tantek>
annevk, would you be opposed to altering (as in dropping) hgroup's presentational effects (e.g. on an automatically generated TOC - leave it up to the UA rather than specifying it) ?

[09:12:01.0000] <annevk>
not really, that's always up to the UA anyway

[09:12:02.0000] <tantek>
that's been the biggest problem with it in my opinion

[09:13:00.0000] <tantek>
/me is unable to get on w3c irc from his current location for some reason. :/

[09:13:01.0000] <annevk>
are there any meaningful implementations for that yet?

[09:13:02.0000] <tantek>
not AFAIK

[09:13:03.0000] <tantek>
which is another good reason to drop that bit from the spec

[09:13:04.0000] <annevk>
tantek: you can use either http://irc.w3.org/ or irc://irc.w3.org:6665/

[09:13:05.0000] <annevk>
(the former is a web interface)

[09:14:00.0000] <tantek>
aha - thanks for the web interface

[09:19:00.0000] <jgraham>
/me has the opinion that you should encourage people to have conf. calls

[09:20:00.0000] <jgraham>
*shouldn't

[09:20:01.0000] <annevk>
heh

[09:20:02.0000] <annevk>
the HTML WG is going to do a revert via MikeSmith

[09:20:03.0000] <annevk>
poor MikeSmith

[09:20:04.0000] <MikeSmith>
woe is me

[09:20:05.0000] <annevk>
are they going to install MikeSmith as editor next?

[09:20:06.0000] <annevk>
dial in

[09:20:07.0000] <annevk>
and find out next week, in the HTML WG teleconference

[09:23:00.0000] <tantek>
wow that was fast - just 25 min for the telcon

[09:23:01.0000] <jgraham>
tantek: I think that something with the semantic of <hgroup> is needed. I care less whether it is spelled <hgroup> or <hsub> or whatever

[09:23:02.0000] <tantek>
jgraham, opinion appreciated.

[09:23:03.0000] <jgraham>
Assuming they cover the same use cases

[09:23:04.0000] <tantek>
I tend to prefer avoiding namesmithing/bikeshedding, especially for things which have been in a spec for a while

[09:24:00.0000] <tantek>
/me would rather tweak/fix hgroup than introduce new element(s).

[09:24:01.0000] <jgraham>
Which they don't, quite, but it is unclear that the differences are important

[09:24:02.0000] <tantek>
agreed.

[09:24:03.0000] <karlcow>
I would prefer an attribute. hsub looks like an annotation. But really I do not care that much as in I didn't find any practical use for it

[09:24:04.0000] <tantek>
karlcow, why prefer an attribute?

[09:24:05.0000] <karlcow>
s/hsub looks/hsub content looks/

[09:25:00.0000] <tantek>
and what attribute on what element(s)?

[09:26:00.0000] <annevk>
since when do we use attributes for semantics?

[09:26:01.0000] <tantek>
annevk, re: http://blog.whatwg.org/weekly-tpac-2011

[09:26:02.0000] <karlcow>
tantek: an attribute because I don't see it only attached to headers. In case it makes sense (which I have doubt) to copy newspaper, magazine, there is always this kind of excerpt of bold text separating sections which looks like a bit the subtitle thing

[09:26:03.0000] <jgraham>
annevk: Since <input>?

[09:26:04.0000] <tantek>
s/support for years, months, birthdays lacking a year, and durations/support for years, months, birthdays lacking a year, timezones, and durations

[09:26:05.0000] <tantek>
jgraham - the input type morphing semantics have largely been admitted to be a design error

[09:27:00.0000] <tantek>
karlcow - it sounds like you're talking about a different use-case than hgroup

[09:27:01.0000] <tantek>
hgroup is quite narrowly defined for specific use-cases and I think it's good to keep it that way

[09:27:02.0000] <jgraham>
Well yes, but the question wasn't "was it a good idea?"

[09:27:03.0000] <karlcow>
tantek: possible. I didn't find usage of hgroup I guess.

[09:28:00.0000] <tantek>
jgraham, I think annevk meant that statement in a forward-looking manner ;)

[09:28:01.0000] <jgraham>
In the case of input, it is unlikely that we would have been able to easily introduce new input types as new elements, so that case isn't clearcut

[09:28:02.0000] <karlcow>
/me is dire need of things to markup people (authors, etc.) more than hgroup. :)

[09:28:03.0000] <jgraham>
But I agree in general the idea of an attribute doesn't sound great

[09:28:04.0000] <tantek>
/me has a spec that karlcow might be able to use to markup people. ;)

[09:30:00.0000] <karlcow>
<person class="auteur">tantek</person> has a <cite>spec</cite>

[09:31:00.0000] <karlcow>
<livingthing class="person"> if we want to be meta :p

[09:31:01.0000] <jgraham>
/me runs away

[09:31:02.0000] <Ms2ger>
<thing livingstate=living class=person>?

[09:31:03.0000] <dglazkov>
good morning, Whatwg!

[09:31:04.0000] <karlcow>
hehe

[09:32:00.0000] <tantek>
karlcow - nice HTML 3.0 you got there

[09:32:01.0000] <karlcow>
<person> <time> <location> and we can do a lot of things

[09:32:02.0000] <tantek>
/me notes that HTML 3.0 had <person>

[09:33:00.0000] <wilhelm>
<location> would be very nice.

[09:33:01.0000] <tantek>
karlcow - in practice, location markup has been problematic

[09:33:02.0000] <tantek>
in terms of data quality etc.

[09:33:03.0000] <tantek>
e.g. meta icbm stuff has been a disaster of inaccuracy

[09:33:04.0000] <karlcow>
I like the stance of flickr on that

[09:33:05.0000] <tantek>
so it's not clear we know how to design a good location element yet

[09:33:06.0000] <tantek>
based on data from past 10+ years of attempts to markup location

[09:33:07.0000] <karlcow>
aaron straup cope/flickr about areas and geoid

[09:34:00.0000] <tantek>
adr/geo microformats have had some success, but lat/long confusion (swapping, signs) continues to be an issue

[09:35:00.0000] <karlcow>
/me likes loose models

[09:35:01.0000] <tantek>
karlcow - do you have a <location> brainstorm written up on a wiki page? would love to know your next level down thoughts on that.

[09:35:02.0000] <tantek>
karlcow - that's perhaps TMI

[09:35:03.0000] <karlcow>
nope :) I don't think I have written things or maybe a long time ago on my blog in French.

[09:35:04.0000] <karlcow>
Could try to dig it

[09:36:00.0000] <zewt>
seems like you could never really get lat/long wrong (without noticing it) if it was actually being used

[09:36:01.0000] <karlcow>
TMI in american context maybe ;)

[09:36:02.0000] <Philip`>
AryehGregor: You might be wanting to buy a Y in any case, and you'd be getting a X with it even if you didn't want it, so if you do want it then it's a bonus for no extra cost

[09:36:03.0000] <zewt>
if you're in the US and you post something and a map opens on the side showing australia, something's amiss :)

[09:37:00.0000] <tantek>
zewt +1

[09:37:01.0000] <Philip`>
gsnedders: Various bits and pieces, and vaguely trying to think about getting a proper job

[09:37:02.0000] <AryehGregor>
Philip`, something that you can get only in exchange for money is not free no matter how you slice it, except in marketing-speak.  Just because it's a good deal doesn't mean it's free.

[09:38:00.0000] <tantek>
I think you can get entropy for free.

[09:39:00.0000] <AryehGregor>
It's possible in principle to produce arbitrarily large quantities of entropy while doing arbitrarily small quantities of work, yes.

[09:39:01.0000] <Ms2ger>
And bad APIs

[09:39:02.0000] <zewt>
you get entropy by default :)

[09:39:03.0000] <AryehGregor>
Sadly, someone normally has to be paid to come up with even bad APIs.

[09:40:00.0000] <karlcow>
http://code.flickr.com/blog/2009/10/19/small-bridges-to-proximate-spaces/

[09:42:00.0000] <zewt>
your ipv6 is leaking

[09:43:00.0000] <MikeSmith>
<time> revert is done

[09:43:01.0000] <MikeSmith>
Laissez les bons temps rouler

[09:43:02.0000] <MikeSmith>
I'll send a message to the list

[09:43:03.0000] <karlcow>
http://www.archimuse.com/mw2009/papers/cope/cope.html

[09:43:04.0000] <annevk>
I wonder whether it'll go the way of the dodo

[09:43:05.0000] <annevk>
aka the <canvas> 2D spec

[09:44:00.0000] <karlcow>
you need <time> for the  soup flavor

[09:47:00.0000] <karlcow>
/me likes that dodo in French means sleep

[09:56:00.0000] <Philip`>
AryehGregor: I suppose an alternative way to view is that if you have recently bought a Windows computer or know someone who has, that computer may well have a version of Office that you can legitimately use for no further cost

[09:56:01.0000] <AryehGregor>
Yes, that's valid.

[09:58:00.0000] <Ms2ger>
/me pokes Philip` towards W3C bugzilla

[10:00:00.0000] <Ms2ger>
I wonder who Shelly is going to replace Hixie with

[10:14:00.0000] <AryehGregor>
Ms2ger, don't be silly.  Specs are made by the community, not individuals.  HTML5 is no different from HTML 4.01, and we didn't need Hixie for that.  The important thing is that everyone gets to decide together what will happen, not that there's anyone to actually do it.  That part will naturally take care of itself.

[10:14:01.0000] <Ms2ger>
/me would enjoy sitting back and watching

[10:15:00.0000] <AryehGregor>
We already did, it was called XHTML2.

[10:15:01.0000] <annevk>
/me needs to get some party snacks

[10:15:02.0000] <Ms2ger>
/me passes annevk some popcorn

[11:00:00.0000] <AryehGregor>
Nice, now MikeSmith has to do merge conflict resolution, in CVS no less.  Will he be asked to hand-revert the change every time Hixie updates the spec from now on?

[11:01:00.0000] <AryehGregor>
/me watches with interest

[11:01:01.0000] <AryehGregor>
/me really doubts there are no merge conflicts with subsequent changes, since it must have touched a ton of things to remove an element

[11:02:00.0000] <AryehGregor>
The date will conflict, at the very least.

[11:02:01.0000] <annevk>
hopefully for MikeSmith he is either in a bar or in bed given the time in Tokyo

[11:02:02.0000] <Ms2ger>
A bar is probably a better path

[11:02:03.0000] <Ms2ger>
Path? Guess

[11:02:04.0000] <annevk>
I know the path

[11:03:00.0000] <annevk>
/me has seen the bar

[11:04:00.0000] <wilhelm>
Where is the bar? Shinjuku Ni-chōme?

[11:05:00.0000] <annevk>
somewhere in nishishinjuku

[11:06:00.0000] <AryehGregor>
WebKit has no window.Selection . . .

[11:16:00.0000] <Hixie>
lol, the htmlwg chairs are funny

[11:16:01.0000] <Hixie>
i feel bad for mike

[11:18:00.0000] <annevk>
Ms2ger: I thought we knew it broke jQuery already and were waiting for sicking or some such?

[11:19:00.0000] <Ms2ger>
Were we?

[11:19:01.0000] <sicking>
you were?

[11:19:02.0000] <Ms2ger>
I'm waiting for sicking, but that's for reviews ;)

[11:19:03.0000] <annevk>
Ms2ger: sicking: guess not :)

[11:19:04.0000] <annevk>
I like how you fixed it

[11:20:00.0000] <Ms2ger>
Oh?

[11:20:01.0000] <annevk>
hehe, MikeSmith tweeting in Dutch

[11:20:02.0000] <annevk>
Ms2ger: keeping node document sane for document

[11:20:03.0000] <Ms2ger>
Yeah

[11:21:00.0000] <Ms2ger>
I think we use node document for documents in the spec

[11:23:00.0000] <AryehGregor>
What's correct behavior for http://software.hixie.ch/utilities/js/live-dom-viewer/saved/1253 ?  I assume it's iframe1, iframe2, body, which is what IE9 and Firefox 9.0a2 do.  Chrome 16 dev and Opera 12.00 do iframe1, body, iframe2 (second iframe doesn't block the load event).

[11:27:00.0000] <AryehGregor>
If I just add an iframe dynamically, not from another iframe's onload handler, it does correctly block the load event in WebKit too.

[11:27:01.0000] <AryehGregor>
But if I add a second iframe from the first iframe's onload handler, the second one only blocks the load event in some browsers.

[11:31:00.0000] <AryehGregor>
/me works around it by using setup({explicit_done: true})

[11:54:00.0000] <AryehGregor>
Do implementations ever actually throw TypeErrors?

[11:54:01.0000] <AryehGregor>
I assume so, but in what cases?

[12:00:00.0000] <AryehGregor>
Ah, IE9 does.  Nice.

[12:02:00.0000] <Ms2ger>
We do for pure JS, but not yet for DOM stuff

[12:03:00.0000] <AryehGregor>
Good to know.

[12:03:01.0000] <AryehGregor>
Everyone but Gecko seems to return 0 across the board for the length property of DOM methods.

[12:04:00.0000] <AryehGregor>
At least the ones I've looked at.

[12:04:01.0000] <AryehGregor>
Gecko matches WebIDL and returns the minimum number of allowed arguments.

[12:04:02.0000] <AryehGregor>
(or whatever it's supposed to be; I'm mostly dealing with methods that have a fixed number of arguments)

[12:05:00.0000] <TabAtkins>
annevk: Yeah, using some script is trivial, but it's silly to do that when there's an element for the job.

[12:06:00.0000] <TabAtkins>
annevk: Plus the use-case for closing it is really minor in the first place.

[12:07:00.0000] <annevk>
"path of least resistance" was key, you could've been done already ;)

[12:07:01.0000] <annevk>
of course, if you want to make this work with <details>, why not, I don't really care

[12:14:00.0000] <annevk>
nn

[12:14:01.0000] <Ms2ger>
nn

[12:15:00.0000] <annevk>
/me hopes to wake up around six-sevenish

[12:15:01.0000] <Ms2ger>
That's not something I usually hope

[12:15:02.0000] <annevk>
me neither, but jetlag + going to bed real early makes it reasonable

[12:18:00.0000] <AryehGregor>
Hmm.  What should getSelection() return when called on a Document with null defaultView?

[12:18:01.0000] <AryehGregor>
IE and Gecko seem to return the Selection for its window anyway, while WebKit returns null.

[12:19:00.0000] <AryehGregor>
How do I refer to the window corresponding to an object?  Like, the window that has its interface and so on?

[12:21:00.0000] <AryehGregor>
No, better yet, IE returns a different Selection object entirely.

[12:21:01.0000] <AryehGregor>
Fun.

[12:21:02.0000] <Ms2ger>
new Image() probably has some wording for that

[12:25:00.0000] <AryehGregor>
jgraham, are assert_inherits and assert_idl_attribute exactly the same thing?

[12:25:01.0000] <AryehGregor>
Also, did you ever review my testharness.js patch?

[12:31:00.0000] <AryehGregor>
"If the [NoInterfaceObject] extended attribute was not specified on the interface, then the interface prototype object must also have a property named “constructor” with attributes { [[Writable]]: true, [[Enumerable]]: false, [[Configurable]]: true } whose value is a reference to the interface object for the interface."

[12:31:01.0000] <AryehGregor>
That implies that Foo.prototype.constructor === Foo for any WebIDL interface, right?

[12:33:00.0000] <Ms2ger>
Sounds right

[12:33:01.0000] <AryehGregor>
Works in IE, not in Gecko.

[12:33:02.0000] <AryehGregor>
Also works in WebKit.

[12:33:03.0000] <Ms2ger>
Then it must be wrong ;)

[12:33:04.0000] <AryehGregor>
/me looks for other things to test

[12:34:00.0000] <AryehGregor>
Object.getPrototypeOf(), fun.

[12:34:01.0000] <AryehGregor>
/me tests that

[12:37:00.0000] <roc>
that might be fixed for NodeList in Gecko

[12:37:01.0000] <AryehGregor>
What in WebIDL defines that interface objects are own properties of the global object, and not inherited?

[12:40:00.0000] <Ms2ger>
For every interface that is not declared with the [NoInterfaceObject] extended attribute, a corresponding property MUST exist on the interfaces relevant namespace object.

[12:40:01.0000] <Ms2ger>
http://dev.w3.org/2006/webapi/WebIDL/#es-interfaces

[12:40:02.0000] <AryehGregor>
And it's just an own property by default?

[12:43:00.0000] <Ms2ger>
Could be clarified, I guess

[12:43:01.0000] <Ms2ger>
heycam|away, ^

[12:46:00.0000] <AryehGregor>
Hmm, we need an assert_interface.

[12:46:01.0000] <AryehGregor>
I should write that.

[12:48:00.0000] <AryehGregor>
jgraham, if you aren't going to review my patches when I submit them on Bugzilla, and nor is anyone else, I'm just going to have to keep committing them directly to hg.

[12:48:01.0000] <AryehGregor>
I mean, when I do that, at least we make some progress.

[12:50:00.0000] <jgraham>
AryehGregor: I haven't seen the email

[12:51:00.0000] <jgraham>
This may be my fault

[12:51:01.0000] <AryehGregor>
jgraham, I filed it on October 28 and pinged you about it here at least a couple of times.  http://www.w3.org/Bugs/Public/show_bug.cgi?id=14589

[12:51:02.0000] <AryehGregor>
I'm happy to do review-then-commit, but there has to actually be timely review.

[12:54:00.0000] <jgraham>
AryehGregor: It looks OK, I think

[12:54:01.0000] <AryehGregor>
jgraham, thanks.

[12:54:02.0000] <AryehGregor>
I'll commit it.

[12:54:03.0000] <AryehGregor>
/me is currently working on an assert_interface method, though, so will get to that later

[12:57:00.0000] <jgraham>
I hate reviewing without a proper tool

[12:57:01.0000] <jgraham>
What will assert_interface do?

[13:11:00.0000] <AryehGregor>
jgraham, assert that something follows everything WebIDL says about interfaces.

[13:11:01.0000] <AryehGregor>
E.g., assert_interface("Selection", {options:...}, "desc . . .");

[13:11:02.0000] <AryehGregor>
So far IE and Opera match spec, everyone else gets something wrong.

[13:12:00.0000] <AryehGregor>
Gecko has no .prototype.constructor, WebKit stringifies the interface object incorrectly.

[13:13:00.0000] <AryehGregor>
Tests are far more fun to write than specs!

[14:02:00.0000] <heycam>
Ms2ger, I think it's clear, but it'll become even clearer once modules are removed (and then the "interface's relevant namespace object" bit will be replaced by something like "ECMAScript global object")

[15:06:00.0000] <wilhelm>
Hm. How would you mark up the block of text “Sherlock Holmes–his limits” in this document? http://en.wikisource.org/wiki/Page%3AA_study_in_scarlet.djvu/26

[15:09:00.0000] <TabAtkins>
With <hgroup>?

[15:09:01.0000] <TabAtkins>
Or, hm, no, never mind.

[15:09:02.0000] <TabAtkins>
Now that I'm reading the passage, it's just a normal heading.

[15:10:00.0000] <TabAtkins>
<section><h1><span class='name'>Sherlock Holmes</span> - his limits.</h1> <ol>...</ol></section>

[15:11:00.0000] <wilhelm>
It's a normal heading in a subdocument that shouldn't appear in the table of contents or document outline.

[15:11:01.0000] <wilhelm>
Hence my mild confusion. (c:

[15:11:02.0000] <TabAtkins>
subdocuments can't be marked up very well in HTML.

[15:12:00.0000] <wilhelm>
Indeed.

[15:12:01.0000] <TabAtkins>
<iframe srcdoc> ^_^

[15:13:00.0000] <wilhelm>
/me cries.

[15:22:00.0000] <dglazkov>
why is there a distinction between TextTrack and HTMLTrackElement?

[15:22:01.0000] <rillian_>
HTMLTrackElement is a <track> you put in the document

[15:22:02.0000] <rillian_>
under a media element

[15:22:03.0000] <rillian_>
like <audio> or <video>

[15:23:00.0000] <rillian_>
to reference a text track file

[15:23:01.0000] <rillian_>
a TextTrack is a pure js object representing the result of parsing that file

[15:24:00.0000] <rillian_>
or, if you prefer, an HTMLTrackElement handles the plumbing between a TextTrack object and a MediaElement which is supposed to play it back

[15:24:01.0000] <Hixie>
dglazkov: you cna also get TextTracks straight from the media file

[15:24:02.0000] <Hixie>
dglazkov: or indeed create one out of whole cloth in the DOM

[15:25:00.0000] <dglazkov>
ohhhh. That makes sense. The media itself can have a TextTrack embedded in it

[15:26:00.0000] <dglazkov>
I was confused why the API for adding TextTracks isn't just adding an HTMLTrackElement child.

[15:27:00.0000] <dglazkov>
ok cool. Thanks, rillian_ and Hixie

[15:27:01.0000] <Hixie>
HTMLTextTrack is just for external text tracks

[15:27:02.0000] <Hixie>
if you're creating on dynamically, you don't need the element

[15:28:00.0000] <rillian_>
right, you can get a TextTrack from the parent's media file, from a separate HTMLTextTrack's file, or you can create it yourself

[15:28:01.0000] <rillian_>
e.g. from data you slurped out of your cms

[15:30:00.0000] <Hixie>
smaug____: what are all these bugs about?

[15:31:00.0000] <TabAtkins>
Hixie: Ignore them for now - there's still ongoing discussion about them on webapps.

[15:31:01.0000] <Hixie>
should they be closed, reassigned to smaug____, something else...?

[15:32:00.0000] <TabAtkins>
I suppose reassigned to smaug____ for resolution when we figure out what we want to do.

[15:33:00.0000] <smaug____>
Hixie: sorry

[15:33:01.0000] <smaug____>
Hixie: the main bug is just about remove handleEvent

[15:33:02.0000] <smaug____>
and =FunctionOnly

[15:34:00.0000] <smaug____>
I started to file them one by one, but then noticed that there are too many

[15:35:00.0000] <Hixie>
what's wrong with handleEvent?

[15:35:01.0000] <Hixie>
i'm confused

[15:35:02.0000] <smaug____>
silly name

[15:35:03.0000] <smaug____>
those interfaces have nothing to do with events

[15:35:04.0000] <Hixie>
i'm confused

[15:36:00.0000] <smaug____>
?

[15:36:01.0000] <Hixie>
how about you pretend i haven't seen any of the bugs, nor any of the mailing list discussion, and you start over from the top :-)

[15:36:02.0000] <smaug____>
Hixie: in the interface you have handleEvent

[15:36:03.0000] <Hixie>
what interface

[15:37:00.0000] <smaug3G>
Hixie: in some callback interfaces you have method handleEvent

[15:37:01.0000] <Hixie>
yes

[15:37:02.0000] <smaug3G>
although the interface has nothing to do with events

[15:37:03.0000] <Hixie>
sure it's just a callback

[15:37:04.0000] <smaug3G>
there is no reason to have wrong name for the method

[15:38:00.0000] <Hixie>
doesn't matter what the name is

[15:38:01.0000] <jamesr_>
there's no reason to have _any_ name for the method 95% of the time

[15:38:02.0000] <smaug3G>
especially, if and when =FunctionOnly will be removed

[15:38:03.0000] <Hixie>
could be fooBarBaz

[15:38:04.0000] <Hixie>
FunctionOnly is being removed?

[15:38:05.0000] <smaug3G>
that is the other part

[15:38:06.0000] <jamesr_>
without FunctionOnly the name does matter, i suppose

[15:38:07.0000] <Hixie>
some languages need a name, even for interfaces marked FunctionOnly, because they don't have method pointers

[15:38:08.0000] <smaug3G>
there is no reason for =FunctionOnly

[15:39:00.0000] <smaug3G>
except perhaps for backwards compatibility in onfoo handlers

[15:39:01.0000] <Hixie>
surely if we default to only accepting function pointers this will cause all kinds of back-compat issues

[15:40:00.0000] <smaug3G>
I don't understand

[15:40:01.0000] <Hixie>
there are web pages that assume, e.g., that you can pass { handleEvent: function (event) { } } to addEventListener

[15:40:02.0000] <TabAtkins>
Yes, there is code in the wild that expects to be able to pass an object with a 'handleEvent' property to a callback.

[15:40:03.0000] <smaug3G>
so far most (all?) implementations just pretend that there is no =FunctionOnly

[15:40:04.0000] <smaug3G>
except for onfoo handlers

[15:41:00.0000] <smaug3G>
Hixie: yes, there are pages and good use cases for { handleEvent: function() {}} and there is no reason to not allow the same with other callbacks

[15:42:00.0000] <Hixie>
oh, i see, you're not proposing defaulting to FunctionOnly, you're proposing forcing all APIs to support both function pointers _and_ objects with a single method for the callback

[15:42:01.0000] <Hixie>
well if we do the latter then we definitely still need a name for the method!

[15:43:00.0000] <smaug3G>
How else would I want to remove FunctionOnly o_O

[15:43:01.0000] <Hixie>
i assumed you wanted to remove the ability to use objects. that's why i use functiononly, to simplify the api by only accepting one type.

[15:44:00.0000] <Hixie>
if you're saying i should use FunctionOnly less, that's a fine suggetion. File a bug on that with the use cases.

[15:44:01.0000] <smaug3G>
I don't understand what that simplifies

[15:44:02.0000] <smaug3G>
I did file a bug to remove =FunctionOnly

[15:44:03.0000] <smaug3G>
is there a usecase for =FunctionOnly ?

[15:45:00.0000] <Hixie>
you need a use case for additional abilities, not for lack of abilities

[15:45:01.0000] <Hixie>
the ability to use an object for a callback is an ability

[15:45:02.0000] <Hixie>
i mean we could also support strings as callbacks, the way setTimeout does

[15:45:03.0000] <Hixie>
we could also support URLs as callbacks

[15:45:04.0000] <Hixie>
or MessagePort objects

[15:45:05.0000] <Hixie>
or any number of other mechanisms

[15:45:06.0000] <smaug3G>
I'd say you need a reason to explicitly remove functionality

[15:46:00.0000] <Hixie>
the reason to remove functionality is always the same: make the platform simpelr

[15:46:01.0000] <smaug3G>
=FunctionOnly doesn't make platform simpler

[15:46:02.0000] <Hixie>
well i'm not really interested in arguing the point

[15:47:00.0000] <Hixie>
it seems self-evident that having two features is less simple than having one

[15:47:01.0000] <Hixie>
whether you agree or not, however, that is the reasoning for trying to limit the number of features

[15:47:02.0000] <smaug3G>
from implementation point of view making explicit limitations to the default handling is less simple

[15:48:00.0000] <smaug3G>
also from authoring point of view, since { handleEvent} is anyway supported in event listeners

[15:48:01.0000] <smaug3G>
and in fact with other non-legacy callbacks in most of current implementations

[15:50:00.0000] <Hixie>
that's the kind of information you should include in the bug, yes

[15:50:01.0000] <smaug3G>
/me so much wishes we could get some consistency to the platform

[15:51:00.0000] <Hixie>
says the person arguing for different names for different callbacks :-P

[15:52:00.0000] <Hixie>
anyway, i could only find one =FunctionOnly that needed to be changed, the drag-and-drop one

[15:52:01.0000] <Hixie>
did i miss anything?

[15:52:02.0000] <Hixie>
(the WebRTC stuff is likely to be removed so i'm ignoring that here)

[15:54:00.0000] <smaug3G>
most of them were in webrtc yes

[15:54:01.0000] <smaug3G>
I want consistency to callback method names: the method name should indicate what is the reason it is called.

[15:54:02.0000] <smaug3G>
also, same object can implement several callback interfaces

[15:55:00.0000] <Hixie>
i'm marking the webrtc bugs rejected since you filed them in the htmlwg component but the htmlwg doesn't have those interfaces

[15:55:01.0000] <Hixie>
i've changed them in the whatwg copy

[15:55:02.0000] <smaug3G>
{ handleEvent: function(e) {}, handleMutations: function() {param} } ....

[15:55:03.0000] <Hixie>
i expect that text will be killed soon though

[15:56:00.0000] <Hixie>
since it looks like mozilla and google are looking at the webrtc wg at the w3c rather than the whatwg text

[15:56:01.0000] <TabAtkins>
smaug3G: That's being debated right now in webapps.  It's somewhat premature to file bugs advocating one particular method yet.

[15:56:02.0000] <Hixie>
/me really doesn't understand why anyone would use an object for a callback when a closure does everything you would want, better

[15:56:03.0000] <smaug3G>
TabAtkins: I know it is being debated there. It has been debated several times before

[15:57:00.0000] <smaug3G>
it is handy to keep some state in the object, and you get right 'this' handling in the callback

[15:58:00.0000] <smaug3G>
(without need to do any additional JS stuff )

[15:58:01.0000] <TabAtkins>
smaug3G: Sure, and that can all be done with a closure or .bind().

[15:58:02.0000] <smaug3G>
that .bind() is something additional

[15:59:00.0000] <TabAtkins>
Your preference for {handleFoo:...} over .bind seems arbitrary.

[15:59:01.0000] <Hixie>
you don't get the right "this"

[15:59:02.0000] <TabAtkins>
Both are parts of the language.

[15:59:03.0000] <Hixie>
you get the "this" of the object passed to the method

[15:59:04.0000] <Hixie>
not the "this" of whatever object is setting all the callbacks

[15:59:05.0000] <Hixie>
which is typically the one you want


2011-11-11
[16:00:00.0000] <smaug3G>
var o = { handleEvent: function(e) {}};

[16:00:01.0000] <smaug3G>
when handleEvent is called, this == o;

[16:00:02.0000] <Hixie>
zcyes

[16:00:03.0000] <Hixie>
yes

[16:00:04.0000] <Hixie>
which is the wrong this

[16:00:05.0000] <smaug3G>
which is the right one

[16:00:06.0000] <Hixie>
no

[16:01:00.0000] <smaug3G>
if you don't want that, you can use function() {} as a callback

[16:01:01.0000] <Hixie>
you want "this" to be the "this" that applies in the code that set the callback

[16:01:02.0000] <smaug3G>
no

[16:01:03.0000] <smaug3G>
well, depends on the case

[16:01:04.0000] <TabAtkins>
Hixie: You could want either.  Luckily JS has mechanisms to handle them both easily.

[16:02:00.0000] <smaug3G>
and since implementations handle both cases anyway, there is no need to limit it

[16:02:01.0000] <Hixie>
TabAtkins: do you have an example of when you would want what smaug says?

[16:02:02.0000] <Hixie>
TabAtkins: i cannot recall ever wanting that, but i'd love to see an example

[16:03:00.0000] <TabAtkins>
Hixie: If you're just holding onto some state shared across multiple callbacks.

[16:04:00.0000] <smaug3G>
you could look at Firefox UI source code for example. It is using { handleEvent: function() {}} style all the time

[16:06:00.0000] <smaug3G>
...because it wants to keep some state across the calls

[16:07:00.0000] <Hixie>
TabAtkins: why would you need a "this" at all then? surely you'd just have the state in the closure.

[16:07:01.0000] <TabAtkins>
Hixie: That's another way to do it, sure.

[16:08:00.0000] <TabAtkins>
The object is basically a public closure for these purposes.

[16:08:01.0000] <Hixie>
i wonder when you'd do that

[16:08:02.0000] <Hixie>
or rather, why i've never ended up wanting that

[16:09:00.0000] <Hixie>
i guess the way i always do it is i have a public object that then sets the callbacks, i don't create the object specifically for the handlers

[16:09:01.0000] <Hixie>
seems like creating it just for the handlers would be rather constraining, e.g. what if you later need two types of handlers?

[16:09:02.0000] <Hixie>
seems like poor style to me

[16:31:00.0000] <TabAtkins>
Hixie: Your commit message was incorrectly snarky.  Closures hide the data inside them unless you specifically provide methods to export them.  Objects expose the data inside them.

[16:32:00.0000] <Hixie>
closures don't hide data that's public

[16:32:01.0000] <Hixie>
they just take existing variables and let you access them later, whether they are private or public

[16:33:00.0000] <Hixie>
(i wrote the checkin comment before you explained the use case, though, so you're right that it was excessively snarky, sorry about that)

[16:33:01.0000] <TabAtkins>
Ah, right, sorry.  Was thinking of the common practice of using closures specifically to hide static vars.

[16:35:00.0000] <jernoble>
Hixie: i have a question about your response to the MediaController bug

[16:35:01.0000] <Hixie>
which one?

[16:35:02.0000] <Hixie>
oh the one with the states

[16:35:03.0000] <jernoble>
Hixie: right

[16:35:04.0000] <Hixie>
shoot

[16:35:05.0000] <jernoble>
Hixie: so if a group of slaved media elements' ready states go from a minimum value of 1 to a minimum value of 3

[16:36:00.0000] <jernoble>
Hixie: do the events for 2 & 3 fire, or just the event for 3?

[16:36:01.0000] <jernoble>
Hixie: Because i don't think the answer is clear from those two tables.

[16:36:02.0000] <jernoble>
Hixie: (or I'm just being dense.)

[16:36:03.0000] <Hixie>
the second table is non-normative so it doesn't help answer the question oen way or the other

[16:36:04.0000] <Hixie>
let me see though

[16:38:00.0000] <Hixie>
so if a group of media elements are in states 1,1,3 and go to the state 1,3,3, nothing happens

[16:38:01.0000] <Hixie>
then if they go to the state 3,3,3 in one go

[16:39:00.0000] <Hixie>
you start off at "When the ready state of a media element whose networkState is not NETWORK_EMPTY changes, the user agent must follow the steps given below"

[16:39:01.0000] <Hixie>
in step one you go to "If the previous ready state was HAVE_CURRENT_DATA or less, and the new ready state is HAVE_FUTURE_DATA"

[16:39:02.0000] <Hixie>
so you queue up canplay on the media element

[16:40:00.0000] <Hixie>
(and maybe 'playing')

[16:40:01.0000] <Hixie>
then you go to step 2

[16:40:02.0000] <Hixie>
report the controller state

[16:40:03.0000] <Hixie>
new readiness state is now 3

[16:40:04.0000] <Hixie>
so you fire canplay on the media controller in step 2

[16:40:05.0000] <Hixie>
so the answer is, you don't fire the event for 2

[16:41:00.0000] <Hixie>
jernoble: does that answer your question?

[16:41:01.0000] <jernoble>
Hixie: okay, that's what i thought. the second table confused me though; but since it's non-normative, looks like that settles it then. :)

[16:41:02.0000] <jernoble>
Hixie: thanks!

[16:42:00.0000] <Hixie>
jernoble: yeah the second table's wording is maybe not ideal

[16:42:01.0000] <Hixie>
jernoble: not sure how to improve it really

[16:43:00.0000] <Hixie>
oh actually i slightly misspoke when i went through the steps above, though it doesn't affect the final answer

[16:43:01.0000] <Hixie>
on the media element you do queue up tasks to fire loadeddata then canplay

[16:43:02.0000] <Hixie>
because you hit "If the previous ready state was HAVE_METADATA and the new ready state is HAVE_CURRENT_DATA or greater"

[16:43:03.0000] <Hixie>
maybe i should make it do the same for MediaController

[16:44:00.0000] <Hixie>
jernoble: i think maybe it _should_ fire the intermediate events

[16:44:01.0000] <jernoble>
Hixie: i think that's where the reviewer got confused.

[16:45:00.0000] <Hixie>
jernoble: otherwise someone listening to one event might miss it if the network is especially fast, or whatnot

[16:45:01.0000] <jernoble>
Hixie: especially since there's no accessor for readyState, authors would have to add listeners for /all/ the events, even if they only cared about a single state.

[16:45:02.0000] <Hixie>
yeah

[16:46:00.0000] <Hixie>
ok let me make the intermediate events fire while i'm here

[16:46:01.0000] <jernoble>
Hixie: and i'll change the implementation while /I'm/ here.

[16:46:02.0000] <Hixie>
heh, in the spec source under the first paragraph for step 2 it says:

[16:46:03.0000] <Hixie>
    <!-- hopefully everyone will understand what this means -->

[16:46:04.0000] <Hixie>
:-/

[16:47:00.0000] <jernoble>
chuckle. :)

[16:51:00.0000] <Hixie>
ok i changed the spec to fire all the events when incrementing

[16:52:00.0000] <Hixie>
but when decrementing it just fires the new state

[16:52:01.0000] <Hixie>
that works right?

[16:52:02.0000] <jernoble>
Hixie: yup. seems to.

[16:53:00.0000] <Hixie>
ok it's checked in

[16:56:00.0000] <jernoble>
Hixie: cool, thanks.

[16:57:00.0000] <hober>
yay

[23:44:00.0000] <annevk>
hah, slept until 8:30

[23:47:00.0000] <wilhelm>
You beat the jet lag already?

[23:50:00.0000] <annevk>
I doubt that, but I did sleep normal hours, although much longer than usual

[00:13:00.0000] <annevk>
zcorpan: lol, trying to incite a riot on twitter :p

[00:14:00.0000] <Hixie>
wtf, why is twitter CSS-free for me today

[00:14:01.0000] <Hixie>
huh, fixed itself when i logged in

[00:14:02.0000] <annevk>
they seem to be rolling out some updates

[00:27:00.0000] <annevk>
heh, just discovered mattur has a bunch of twitter lists

[00:44:00.0000] <hsivonen>
is xhr.status 200 when the respose was cached? e.g. if the server said not modified?

[00:45:00.0000] <hsivonen>
I've identified a new risk with adding HTML support to XHR:

[00:46:00.0000] <hsivonen>
existing code that treats checking responseXML for null as a surrogate for checking HTTP success when expecting XML on success

[00:46:01.0000] <hsivonen>
and errors come with a text/html body

[00:48:00.0000] <annevk>
search for "conditional"

[00:50:00.0000] <hsivonen>
annevk: thanks

[00:51:00.0000] <hsivonen>
I wonder if I should make Firefox pretend it doesn't support HTML parsing when status isn't a success or if I should land support for parsing error bodies and see how much the Web breaks

[00:52:00.0000] <hsivonen>
or require responseType = "document" to force parsing of error bodies

[00:54:00.0000] <annevk>
the middle of those is the intent of the spec

[00:54:01.0000] <annevk>
and is what happens if error bodies come with XML

[00:54:02.0000] <hsivonen>
annevk: what do you mean?

[00:55:00.0000] <annevk>
if a server has a text/xml 500 status page

[00:55:01.0000] <annevk>
responseXML will be populated with its contents

[00:55:02.0000] <hsivonen>
annevk: I mean what's "the middle"?

[00:55:03.0000] <annevk>
that should work for text/html too

[00:55:04.0000] <annevk>
hsivonen: you gave three options, I prefer #2

[00:56:00.0000] <hsivonen>
annevk: I see

[00:56:01.0000] <hsivonen>
the scary part is that I found out about this by reading the code of our extension update code

[00:56:02.0000] <hsivonen>
s/update code/updates/

[01:05:00.0000] <annevk>
omg

[01:05:01.0000] <annevk>
we're getting document.find now?

[01:06:00.0000] <annevk>
sicking: why not simply use Array?

[01:07:00.0000] <annevk>
nm

[01:07:01.0000] <annevk>
/me missed something obvious

[01:47:00.0000] <jgraham>
/me notes that document.find seems like a very confusing name

[01:48:00.0000] <jgraham>
But whatever

[03:40:00.0000] <zcorpan>
i wonder if steve and the chairs feel good about wasting Mike[tm]'s time

[03:42:00.0000] <jgraham>
I wonder if they care

[03:44:00.0000] <Ms2ger>
Time isn't relevant, they need to assert authority

[03:44:01.0000] <Philip`>
Short-term loss for long-term gain

[03:44:02.0000] <annevk>
Philip`: what is the gain?

[03:45:00.0000] <Ms2ger>
/me adds scare quotes

[03:45:01.0000] <jgraham>
annevk: 05:47 < Ms2ger> [...] authority

[03:45:02.0000] <Philip`>
annevk: Nebulous

[03:48:00.0000] <hsivonen>
I don't like wasting MikeSmith's time, but dropping <time> the way Hixie dropped it was still a bad move.

[03:50:00.0000] <jgraham>
AFAICT everyone apart from MikeSmith benefited from this

[03:50:01.0000] <jgraham>
If Hixie hadn't dropped time, the people who want the new, different, time would never have got it

[03:50:02.0000] <zcorpan>
poor guy

[03:51:00.0000] <hsivonen>
jgraham: how did I benefit?

[03:51:01.0000] <jgraham>
and the charis wouldn't have got to show us how effective they are

[03:51:02.0000] <jgraham>
*chairs

[03:51:03.0000] <annevk>
ineffective*

[03:51:04.0000] <zcorpan>
hsivonen: the spec will better match use cases people want

[03:52:00.0000] <jgraham>
hsivonen: Well since new-<time> is different from old-<time> it's not really clear that you would have had less validator changes to make in either case

[03:53:00.0000] <jgraham>
(the other case being "new time was morphed from old time without an intermediate stage")

[03:53:01.0000] <jgraham>
(ignoring the fact that that would probably not have happened)

[03:54:00.0000] <Ms2ger>
Also, Gecko supports outerHTML now!

[03:54:01.0000] <Ms2ger>
hsivonen++

[03:55:00.0000] <annevk>
welcome to 2000

[03:56:00.0000] <Ms2ger>
Why thank you

[03:56:01.0000] <jgraham>
meow?

[03:58:00.0000] <hsivonen>
Ms2ger: thank you for writing most of the code for that patch

[03:58:01.0000] <Ms2ger>
And thank you for writing the hard code :)

[03:59:00.0000] <hsivonen>
I think the really noteworthy thing here is that IE4 didn't use vendor prefixes for this stuff, so there isn't now msOuterHTML, webkitOuterHTML, oOuterHTML and now a new mozOuterHTML to evangelize

[03:59:01.0000] <hsivonen>
so when we implement IE4 features, they just start working

[04:00:00.0000] <hsivonen>
when we implement WebKit features, we deliberately self-sabotage them so that additional evangelism is needed

[04:01:00.0000] <hsivonen>
(actually, I'm not sure if outerHTML was an IE4 or IE5 feature, but that's not the point)

[04:03:00.0000] <roc>
that works OK when the non-prefixed feature was introduced with reasonable behavior

[04:03:01.0000] <roc>
it doesn't work so well when the non-prefixed feature is introduced with utterly broken behavior

[04:04:00.0000] <zcorpan>
like drag and drop?

[04:04:01.0000] <roc>
hmm yeah

[04:04:02.0000] <roc>
and contenteditable

[04:05:00.0000] <roc>
and the entire CSS box model, basically

[04:05:01.0000] <roc>
we pay for that one by writing <!DOCTYPE HTML> until the end of time

[04:06:00.0000] <hsivonen>
roc: OTOH, it makes no sense for transforms to be supported in all the 4 engines but with different prefix in each one to foil interop

[04:06:01.0000] <roc>
you should ask dbaron if he thinks the behavior differences warrant the prefixing

[04:07:00.0000] <hsivonen>
roc: in retrospect, we should have made IE's box model the default and used box-sizing to opt into the different behavior

[04:07:01.0000] <hsivonen>
roc: same thing for <img> and line height

[04:07:02.0000] <roc>
that's probably true

[04:08:00.0000] <roc>
however, there was a lot of other brokenness there

[04:09:00.0000] <zcorpan>
we could have made the brokeness the compliant behavior like with the html parser

[04:09:01.0000] <roc>
for situations like transforms I think there is a case for saying "we think this model is close enough to right, let's rip off the prefixes now and tidy up the differences later, because the cost of the prefixes outweighs the cost of the behavior changes for interop"

[04:10:00.0000] <roc>
zcorpan: reverse engineering hasLayout and all the rest of the IE brokenness is not something anyone has ever wanted to do

[04:10:01.0000] <zcorpan>
roc: other browsers don't have hasLayout in quirks mode

[04:10:02.0000] <roc>
yeah

[04:10:03.0000] <roc>
browsers don't interoperate in quirks mode

[04:11:00.0000] <roc>
to make quirks mode the compliant behavior, we'd have to fix that

[04:11:01.0000] <hsivonen>
roc: don't Gecko/WebKit/Presto interop remarkably far in quirks mode, though?

[04:11:02.0000] <hsivonen>
even if IE is totally different

[04:11:03.0000] <roc>
I honestly don't know

[04:11:04.0000] <annevk>
it's getting closer and closer afaik

[04:12:00.0000] <roc>
IE being totally different is enough to sink the proposition

[04:12:01.0000] <hsivonen>
so does Mango ship the IE 5.5 mode for quirks or do they have a Gecko/WebKit/Presto-like quirks mode based on the IE9 engine snapshot?

[04:12:02.0000] <roc>
if we interoperate closely in quirks mode, it's because our quirks modes aren't very different to our standards modes, which are converging

[04:12:03.0000] <annevk>
having quirks mode interop between non-IE browsers is still worth it

[04:12:04.0000] <hsivonen>
I should find access to a Mango phone and do some community service

[04:12:05.0000] <annevk>
roc: yeah that's definitely part of it

[04:13:00.0000] <annevk>
roc: but we also take quirks mode into account now, e.g. for the HTML parser

[04:13:01.0000] <roc>
we recently eliminated the difference between quirks mode and standards mode text decorations

[04:15:00.0000] <roc>
hsivonen: an important question is: if we rip off prefixes while we know behavior changes will be needed for interop, will various browsers actually make those changes to unprefixed property behavior?

[04:15:01.0000] <roc>
I'm not confident they all will

[04:15:02.0000] <hsivonen>
roc: depends on the magnitude of changes and the amount of existing content

[04:16:00.0000] <roc>
yes

[04:16:01.0000] <hsivonen>
roc: I think requestAnimationFrame could be unprefixed immediately and the second argument or the return value be bikeshedded later

[04:16:02.0000] <roc>
yeah

[04:17:00.0000] <jgraham>
FWIW opera frequently gets screwed over by prefixes

[04:17:01.0000] <roc>
we should do more to ship the subset of commonly-agreed behavior quickly without prefix

[04:17:02.0000] <jgraham>
Where people write -webkit-foo and -moz-foo but forget -o-foo

[04:17:03.0000] <roc>
on mobile, everyone who's not Webkit gets screwed over by prefixes

[04:17:04.0000] <jgraham>
So it looks like we don't support cool stuff that we do

[04:17:05.0000] <hsivonen>
jgraham: Firefox for Android suffers from -webkit-

[04:18:00.0000] <hsivonen>
I think it sucks that Mozilla, Opera and Microsoft agree to work against their interest and the interest of Web authors, because it's supposedly the right thing to do

[04:19:00.0000] <hsivonen>
the only beneficiary of the situation is WebKit, ATM

[04:19:01.0000] <hsivonen>
I should blog about this, but I want to get HTML in XHR ready for review first

[04:20:00.0000] <jgraham>
I should remember to see if that's correlated with who is pro "prefixes until CR or later" next time this comes up

[04:20:01.0000] <hsivonen>
"CR or later" is hurting the Web

[04:22:00.0000] <jgraham>
Yeah, the current situation is insane

[04:24:00.0000] <roc>
hsivonen: I look forward to that blog post!

[04:26:00.0000] <annevk>
/me read CR and was thinking CRLF

[04:26:01.0000] <Ms2ger>
annevk, obviously that's the only useful expansion :)

[04:29:00.0000] <Taggnostr>
hsivonen, the other day I was looking for some html5 test cases and I found your thesis/website

[04:34:00.0000] <hsivonen>
Taggnostr: did you find the test cases you were looking for?

[04:35:00.0000] <hsivonen>
annevk: CR in the CRLF sense is hurting the Web, too

[04:35:01.0000] <Taggnostr>
hsivonen, nope, but I found the description of the parsing algorithm in the html5 draft

[04:35:02.0000] <Taggnostr>
I'm working on a parser and I was trying to determine how it should handle broken html

[04:36:00.0000] <hsivonen>
Taggnostr: "just" implement the parsing algorithm

[04:36:01.0000] <hsivonen>
Taggnostr: what programming language are you using?

[04:37:00.0000] <Taggnostr>
python, I'm trying to improve the html parser included in the stdlib to make it follow the html5 standard, possibly while preserving backward compatibility

[04:37:01.0000] <hsivonen>
Taggnostr: are you aware of https://code.google.com/p/html5lib/ ?

[04:38:00.0000] <Taggnostr>
yes, I actually found this channel while looking at that page

[04:38:01.0000] <jgraham>
Taggnostr: (please look at HEAD, not at the lat release)

[04:38:02.0000] <jgraham>
*last

[04:38:03.0000] <Taggnostr>
but including a new module in the stdlib is not easy, so I was trying to fix the existing one

[04:40:00.0000] <jgraham>
Well… good luck. It isn't clear how you would fix the existing one without writing a roughly equivalent amount of code to html5lib

[04:41:00.0000] <Taggnostr>
I haven't looked closely at html5lib but from what I've seen it seems more complicated than I expected, especially compared to the html parser used by python

[04:41:01.0000] <jgraham>
Also, strictly speaking, a SAX-style API doesn't work with HTML

[04:41:02.0000] <zcorpan>
parsing html is complicated

[04:42:00.0000] <jgraham>
Since various things alter the parts of the tree that have already been emitted

[04:42:01.0000] <jgraham>
e.g. <table><div>

[04:42:02.0000] <zcorpan>
you can have non-streaming SAX or fatal SAX

[04:42:03.0000] <jgraham>
or <body a=b><body c=d>

[04:43:00.0000] <jgraham>
The HTMLParser model doesn't have any extensions to allow fixup of the existing tree

[04:43:01.0000] <jgraham>
and I presume fatal SAX would not be regarded as useful

[04:43:02.0000] <hsivonen>
jgraham: XML folks love fatal SAX :-)

[04:44:00.0000] <hsivonen>
jgraham: maybe not that useful for HTML, though

[04:44:01.0000] <jgraham>
hsivonen: Yes well. Look how that turned out

[04:45:00.0000] <Taggnostr>
the main goal here is to provide a parser able to parse broken HTML -- it doesn't have to be an HTML5 parser, but since HTML5 defines how to parse broken HTML and that is what browsers do, it seems better to do the same rather than coming up with our own decisions/algorithm

[04:45:01.0000] <hsivonen>
jgraham: Validator.nu uses fatal SAX for HTML

[04:45:02.0000] <hsivonen>
Taggnostr: coming up with ways to parse HTML that aren't the HTML5 algorithm is a terrible idea

[04:46:00.0000] <wilhelm>
I've heard regular expressions are great for parsing HTML.

[04:46:01.0000] <Taggnostr>
that's already the current situation, the idea is to make the algorithm closer to HTML5

[04:50:00.0000] <jgraham>
wilhelm: In the interests of playing nice with the visitor, I will loan you my sarcasm end tag: </sarcasm>

[04:50:01.0000] <wilhelm>
jgraham: Oh, sorry. Thanks. (c:

[04:51:00.0000] <jgraham>
Taggnostr: There is little point is being "close to" HTML 5 when you could just do what the standard says

[04:51:01.0000] <Taggnostr>
I'm not sure if that's doable though, the parser should be backward-compatible

[04:52:00.0000] <jgraham>
hsivonen: The validator is a special case. The only reaon it doesn't stop at the first error regardless of streamability is that it wouldn't be very user friendly

[04:52:01.0000] <Taggnostr>
also it already has a specific API, and I'm not sure implementing the parser described by the HTML5 draft would work with it

[04:54:00.0000] <jgraham>
Taggnostr: Well it wouldn't since HTML isn't streamable in general

[04:54:01.0000] <Ms2ger>
MikeSmith, thanks

[04:55:00.0000] <jgraham>
(without some representation of tree fixup in the stream)

[04:55:01.0000] <jgraham>
You can do what hsivonen does and die at the first non-streamable error

[04:55:02.0000] <jgraham>
But there are a pile of sites where that will break

[04:55:03.0000] <Taggnostr>
what do you mean exactly with streamable?

[04:57:00.0000] <Ms2ger>
<table>Foo

[04:57:01.0000] <Ms2ger>
That'll return a tree with the Foo text node before the table

[04:57:02.0000] <jgraham>
You can't represent it with an api that announces various token types (start tag, end tag) and build the correct tree without significant domain knowledge in the treebuilding layer

[04:58:00.0000] <zcorpan>
you could extend SAX with fixup events

[04:58:01.0000] <hsivonen>
Taggnostr: the Validator.nu parser supports all of HTML with the SAX API by first buffering everything into a tree model

[04:58:02.0000] <jgraham>
If HTMLParser is actually supposed to be an HTMLTokenizer and doesn't try to make all the tags balance or anything, that can be represented as a set of events

[04:59:00.0000] <jgraham>
But it is only half the work (or less) of actually parsing

[04:59:01.0000] <Taggnostr>
yes, it doesn't balance anything

[05:00:00.0000] <jgraham>
Oh, well in that case look at the tokenizer.py code in html5lib

[05:00:01.0000] <Taggnostr>
in that case it will announce a <table> start tag, and then Foo

[05:00:02.0000] <Taggnostr>
that's where I looked :)

[05:01:00.0000] <jgraham>
It does almost what you want but you will need to add an interface that emits HTMLParser-compatible events

[05:01:01.0000] <Taggnostr>
is there a reference implementation of the parser described by HTML5?

[05:01:02.0000] <jgraham>
No

[05:02:00.0000] <Taggnostr>
so they just wrote down the algorithm without having a real implementation and without testing it?

[05:02:01.0000] <jgraham>
But html5lib, Gecko (+validator.nu), Webkit and Presto all have implementations that are knopwn to be close to spec

[05:02:02.0000] <jgraham>
Taggnostr: "they" == "we" and no

[05:03:00.0000] <hsivonen>
Taggnostr: it has had plenty of testing

[05:03:01.0000] <jgraham>
The algorithm was arrived at by careful study of what browsers did

[05:03:02.0000] <jgraham>
Plus feedback from browser vendors when they broke pages

[05:03:03.0000] <jgraham>
Plus inspiration for how to fix difficult problems in an acceptable way

[05:04:00.0000] <jgraham>
(misnested formatting elements, parsing comments in scripts)

[05:04:01.0000] <Taggnostr>
so it wasn't written from scratch

[05:04:02.0000] <jgraham>
That depends what you mean

[05:04:03.0000] <jgraham>
Hixie didn't fabricate it from unicorn horn and pony hair

[05:05:00.0000] <jgraham>
But no one had ever written it down before

[05:05:01.0000] <jgraham>
And it isn't quite like what any one browser had before

[05:05:02.0000] <Taggnostr>
ok

[05:07:00.0000] <zcorpan>
jgraham: that's one of the more hilarious statements i've seen about the parsing algorithm

[05:11:00.0000] <gsnedders>
Taggnostr: Reference implementations are problematic if they're normative, because any bug in the reference implementation is then part of the standard. Informative reference implementations are no more or less useful than having the four implementations we already have.

[05:12:00.0000] <Ms2ger>
4?

[05:13:00.0000] <gsnedders>
html5lib, Gecko, WebKit, Presto.

[05:13:01.0000] <hsivonen>
gsnedders: WebKit isn't compliant

[05:14:00.0000] <hsivonen>
David Flanagan's parser is probably more compliant than WebKit by now

[05:15:00.0000] <hsivonen>
I wonder how compliant IE10 is

[05:15:01.0000] <gsnedders>
Last I heard not massively

[05:17:00.0000] <zcorpan>
what does webkit do wrong?

[05:17:01.0000] <hsivonen>
zcorpan: MathML stuff at least

[05:18:00.0000] <hsivonen>
zcorpan: generally anything that has been fixed in the spec since the Chrome 8 release train left the station

[05:18:01.0000] <zcorpan>
ok

[05:20:00.0000] <Philip`>
/me wonders if anyone pointed Taggnostr at http://code.google.com/p/html5lib/source/browse/#hg%2Ftestdata%2Ftokenizer yet

[05:23:00.0000] <Taggnostr>
I wonder if those are usable with HTMLParser (assuming that the license allows me to use them)

[05:24:00.0000] <gsnedders>
HTMLParser?

[05:24:01.0000] <jgraham>
Taggnostr: MIT license

[05:24:02.0000] <Philip`>
(http://wiki.whatwg.org/wiki/Parser_tests for documentation)

[05:24:03.0000] <Taggnostr>
thanks for the pointers Philip`

[05:25:00.0000] <Taggnostr>
jgraham, did you write those tests?

[05:25:01.0000] <Taggnostr>
gsnedders, the parser I'm working on

[05:25:02.0000] <gsnedders>
Taggnostr: They're written by many different people

[05:25:03.0000] <Philip`>
I think they're used by all HTML5 parser implementations

[05:26:00.0000] <Philip`>
(so they ought to be pretty correct relative to the spec, unless a dozen people all made exactly the same misreading of the spec)

[05:28:00.0000] <gsnedders>
(or have all failed to update their impls to some spec change)

[05:54:00.0000] <karlcow>
http://twitter.com/fraunhoferfokus/status/134983678513254402

[05:54:01.0000] <karlcow>
"We have something in the pipes for online video codec standardization but can't talk about it yet", Hoschka, W3C #MWS11 #video #codec #W3C

[05:59:00.0000] <Philip`>
Like a new codec, so half the world can standardise on that one while the other half standardises on WebM?

[06:00:00.0000] <Workshiva>
10% discount on h264 licenses

[06:29:00.0000] <Ms2ger>
Hmm, sicking doesn't realize that public-html is a politics-only list?

[06:37:00.0000] <jgraham>
What did he post there?

[06:38:00.0000] <Ms2ger>
http://lists.w3.org/Archives/Public/www-archive/2011Nov/0021.html

[06:42:00.0000] <annevk>
man

[06:42:01.0000] <annevk>
why is Steam for the Mac such a disaster

[06:42:02.0000] <annevk>
I only wanted to play Portal

[06:44:00.0000] <Philip`>
Is it not just equivalent to the Windows version?

[06:45:00.0000] <Workshiva>
s/Steam/any port/

[06:47:00.0000] <jgraham>
Ms2ger: You may say he's a dreamer but... well actually I guess he is the only one in this case. Nevermind.

[06:47:01.0000] <Ms2ger>
jgraham++

[06:59:00.0000] <annevk>
getting portal for the xbox might be less of a hassle

[07:02:00.0000] <Philip`>
Depending on how much of a hassle it is, running it in Wine might be less of a hassle

[07:02:01.0000] <hsivonen>
eww. IE blog has ugly URLs

[07:04:00.0000] <hsivonen>
oh. it's HTTPS Everywhere that makes IE blog URLs ugly

[07:10:00.0000] <hsivonen>
Does someone happen to know who came up with vendor prefixes and when?

[07:11:00.0000] <annevk>
maybe around the same time standards mode happened?

[07:13:00.0000] <hsivonen>
Did IE5 for Mac have vendor-prefixed stuff?

[07:14:00.0000] <gsnedders>
Certainly most of it's CSS3 support wasn't

[07:15:00.0000] <annevk>
at least as far as CSS 2 was concerned it was post 98

[07:15:01.0000] <hsivonen>
did the CSS positioning fiasco start this all?

[07:16:00.0000] <annevk>
http://lists.w3.org/Archives/Member/w3c-css-wg/1998OctDec/0008.html seems to be about where it started

[07:17:00.0000] <annevk>
(W3C Member-only)

[07:18:00.0000] <hsivonen>
whoa. Do we have [redacted] to blame about this *too*?

[07:19:00.0000] <Ms2ger>
[Redacted].

[07:19:01.0000] <annevk>
http://www.w3.org/Style/Group/1998/09/f2f.html (W3C Member-only)

[07:20:00.0000] <Philip`>
Yeah, [redacted] is certainly a [redacted]

[07:20:01.0000] <gsnedders>
hsivonen: Very much positioned for non-specified properties, though, not for draft-standards.

[07:21:00.0000] <annevk>
http://lists.w3.org/Archives/Member/w3c-css-wg/1998JulSep/0298.html is also relevant

[07:21:01.0000] <annevk>
also has the winning notation

[07:22:00.0000] <hsivonen>
annevk: thanks

[07:23:00.0000] <gsnedders>
Up to 3k unread emails on whatwg. Time to give up soon?

[07:25:00.0000] <jgraham>
http://www.w3.org/Style/Group/1998/09/f2f.html

[07:25:01.0000] <jgraham>
Oh yo0u posted that

[07:25:02.0000] <zewt>
trying to explain the difference between opengl prefixing and web prefixing to the webgl guys seems like a futile effort

[07:26:00.0000] <hsivonen>
wow. important problems were foreseen when this mess started

[07:32:00.0000] <Philip`>
/me isn't sure what OpenGL prefixing is

[07:32:01.0000] <Philip`>
Don't they normally do suffixing (with _ARB/_EXT etc)?

[07:33:00.0000] <zewt>
vendor prefixing, GL_NV_*, GL_ATI_, etc

[07:34:00.0000] <zewt>
but it's not used the same as web prefixing

[07:37:00.0000] <zewt>
(for extensions I mean, functions and constants are suffixed)

[07:39:00.0000] <Philip`>
I suppose one main difference is that it's normal for a vendor to implement extensions from competing vendors' namespaces

[07:40:00.0000] <zewt>
that's what brought it up, yeah, though there are other differences

[07:40:01.0000] <Philip`>
(NVIDIA implements GL_ATI_texture_float, AMD implements GL_NV_primitive_restart, etc)

[07:41:00.0000] <Philip`>
/me wonders if it's considered bad etiquette to write code using a reverse-engineered undocumented GL extension

[07:43:00.0000] <zewt>
being prefixed is the normal, expected final product for most opengl extensions, where with web apis it's usually just a development/compatibility thing that you expect to go away in the finished product

[07:43:01.0000] <zewt>
far more inherently hardware-specific extensions with opengl, different development processes with opengl, etc

[07:45:00.0000] <Philip`>
Isn't it fairly common for the expectation to be that the extension will move from vendor prefixes to ARB and maybe eventually to core?

[07:45:01.0000] <zewt>
common but minority

[07:46:00.0000] <Philip`>
Ah

[07:46:01.0000] <zewt>
the issue was with gecko implementing an extension developed in webkit, whether they should implement it as WEBKIT or rename it; i was arguing that, unlike OpenGL practices and like Web APIs, they should

[07:46:02.0000] <annevk>
well well

[07:47:00.0000] <annevk>
Xbox finally updated

[07:47:01.0000] <annevk>
maybe I get to play a game today after all

[07:47:02.0000] <zewt>
they decided to dodge the issue by abruptly promoting the extension out of _WEBKIT

[07:47:03.0000] <jgraham>
Now it will explode

[07:50:00.0000] <zewt>
and without an extension in front of us pressing the issue, the discussion won't go anywhere, so I'll get to rehash it down the line when the next extension comes around

[07:50:01.0000] <zewt>
oh well. heh

[07:52:00.0000] <hsivonen>
oh so the SVG WG has gone from being vehemently against SVG in HTML to wanting to put SVG in the HTML namespace

[07:52:01.0000] <dglazkov>
good morning, Whatwg!

[07:52:02.0000] <hsivonen>
dglazkov: good evening

[07:53:00.0000] <Ms2ger>
'Afternoon

[07:53:01.0000] <shepazu>
hsivonen: we were never against putting SVG in HTML, we lobbied for it...

[07:53:02.0000] <hsivonen>
shepazu: oh yes, you (SVG WG, maybe not you personall) were at Mandelieu TPAC

[07:54:00.0000] <shepazu>
hsivonen: I think you're misremembering

[07:55:00.0000] <shepazu>
we always wanted to have SVG in HTML… the devil of how to do that was in the details

[07:56:00.0000] <hsivonen>
shepazu: there were elements in the SVG WG who were horrified by the idea of not using a full XML parser for parsing SVG

[07:56:01.0000] <shepazu>
and conditions have now changed, so we are adapting to what seems like the best way forward is from where we are now

[07:56:02.0000] <shepazu>
hsivonen: that's a detail

[07:56:03.0000] <hsivonen>
shepazu: I disagree about it being a detail

[07:57:00.0000] <hsivonen>
shepazu: it's nice that the SVG WG sees the error in its ways, but changing things now would break what we've reached interop on

[07:58:00.0000] <hsivonen>
shepazu: I'd much rather see Web authors start using SVG now than scare them off for another 5 years or so

[07:58:01.0000] <shepazu>
before Adobe and Inkscape, the 2 major SVG authoring-tool vendors, were engaged in the SVG WG, we had no way of knowing if those tools would adapt to new SVG syntax… now, they are both engaged, and conditions are different

[07:58:02.0000] <shepazu>
hsivonen: I don't think there is unanimity in the SVG WG about what namespace SVG elements would be in

[07:59:00.0000] <hsivonen>
shepazu: and now we have a new condition that we've reached interop on doing SVG in HTML the way the HTML spec says

[07:59:01.0000] <shepazu>
yup

[08:02:00.0000] <jgraham>
It is not clear to me that there is enough legacy here to make it too late to break

[08:02:01.0000] <jgraham>
I don't know what IE9 does

[08:02:02.0000] <jgraham>
But it is not very HTML5 compliant in general, so it doesn't obviously block this change

[08:03:00.0000] <hsivonen>
jgraham: IE9 tokenizes SVG scripts per HTML5 for practical purposes (there may be edge cases that are different)

[08:04:00.0000] <hsivonen>
jgraham: even if there isn't existing content, if we start changing how SVG works in browsers, we reset the clock again on the "when can I use SVG" question from the Web author POV

[08:05:00.0000] <jgraham>
I wonder how important IE 9 is though. Once 10 is out the people using 9 might all move to 10 rather fast, and the people stuck on lower versions might remain there

[08:05:01.0000] <jgraham>
I wouldn't be surprised to see a pattern like that

[08:06:00.0000] <jgraham>
Also, I'm not entirely sure I understand how much content would be affected in this case

[08:06:01.0000] <hsivonen>
we can't break interop every time we reach interop depending on the current politics at the SVG WG

[08:06:02.0000] <hsivonen>
if we want adoption some day

[08:06:03.0000] <jgraham>
Agreed

[08:07:00.0000] <jgraham>
But that doesn't mean that doing it once is unworkable

[08:07:01.0000] <hsivonen>
jgraham: are you talking about style and script tokenization or about putting SVG elements in the HTML namespace?

[08:11:00.0000] <jgraham>
The first. The second seems like a very nice change but much more worrying compat-wise

[08:12:00.0000] <hsivonen>
IE isn't the only boat archor browser BTW. There's also the Android stock browser that could cause trouble for at least 3 years or so.

[08:13:00.0000] <Ms2ger>
"Boat anchor browser" is a nice term

[08:16:00.0000] <TabAtkins_>
What's an example of a current spec that takes an options object, and exposed a XXXDict interface so you can feature-detect what's available?

[08:17:00.0000] <annevk>
dictionaries are not exposed

[08:18:00.0000] <TabAtkins_>
I was pretty sure that *someone* did what I just asked for.

[08:23:00.0000] <Ms2ger>
WebRTC hasn't figured out dicts yet

[08:35:00.0000] <zewt>
i suppose that's one benefit to the "defaults in the dictionary" approach (rather than in algorithms); it'd be easier to generically expose the attributes and their defaults as an object

[08:36:00.0000] <zewt>
i suppose exposing the defaults isn't terribly important, though, so much as just which keys are understood

[08:39:00.0000] <TabAtkins_>
zewt: Yeah, that's the primary benefit.  Exposing defaults is a lucky accident.

[08:40:00.0000] <zewt>
TabAtkins: but the defaults aren't always in the IDL dictionary

[08:40:01.0000] <zewt>
(ever, now? not sure)

[09:21:00.0000] <AryehGregor>
jgraham, IE9 works on Vista and IE10 doesn't, no?  Of course, maybe there aren't enough people using Vista to matter.

[10:12:00.0000] <jgraham>
AryehGregor: Maybe. I was thinking of XP vs others and enterprise vs sane

[10:12:01.0000] <AryehGregor>
Maybe.

[10:16:00.0000] <jgraham>
AryehGregor: It looks like Vista has at best 1/3 of the share of either XP or 7 so it's not clear that will be a big effect

[10:44:00.0000] <smaug____>
annevk: sicking: got crazy idea. Could we support the new XHR response types only in async XHR (I'm talking about the Window context, not Worker context)

[10:45:00.0000] <sicking>
smaug____: it's been shipping for a while in various browsers, but quite possibly yeah

[10:45:01.0000] <jamesr_>
ooo

[10:48:00.0000] <smaug____>
/me files a spec bug

[10:49:00.0000] <smaug____>
jamesr_: do you think webkit would be willing to make such change?

[10:50:00.0000] <jamesr_>
smaug____, as a way to encourage authors to move away from sync, right?

[10:50:01.0000] <smaug____>
yes

[10:50:02.0000] <smaug____>
sync is bad in the UI thread

[10:50:03.0000] <jamesr_>
i personally think it's a great idea. i'm not sure what our implementation status

[10:50:04.0000] <jamesr_>
yeah sync is the worst

[10:50:05.0000] <smaug____>
unfortunately it is used quite ofter for text and xml responses

[10:51:00.0000] <jamesr_>
i know :(

[10:51:01.0000] <smaug____>
Google Docs was using it allover at some point

[10:51:02.0000] <jamesr_>
hell yeah let's do it

[10:52:00.0000] <jamesr_>
smaug____, do you have a mozilla bug i can cite in the webkit bug report?

[10:52:01.0000] <jgraham>
"if the sync flag is true throw ERR_YOURE_DOING_IT_WRONG"

[10:52:02.0000] <Ms2ger>
COME_ON_ERR?

[10:53:00.0000] <smaug____>
jamesr_: not yet

[10:53:01.0000] <smaug____>
I'm just sending email to webapps

[10:53:02.0000] <smaug____>
XHR2 doesn't seem to have bugzilla component

[10:54:00.0000] <Ms2ger>
There's just one for XHR1 and 2, no?

[10:54:01.0000] <jamesr_>
filed https://bugs.webkit.org/show_bug.cgi?id=72154 (partially as a way to solicit feedback from other WebKit devs)

[10:55:00.0000] <jamesr_>
somebody would have to figure out the compat risks of changing things depending on how long each type has been supported, i'm not personally familiar

[10:55:01.0000] <jamesr_>
but i love the idea

[10:55:02.0000] <smaug____>
Ms2ger: I couldn't find any component

[10:55:03.0000] <smaug____>
perhaps just looked at some wrong place

[10:56:00.0000] <smaug____>
Ms2ger: er, now I see it

[10:56:01.0000] <smaug____>
XHR1 and XHR2

[10:56:02.0000] <Ms2ger>
Good :)

[11:03:00.0000] <smaug____>
http://www.w3.org/Bugs/Public/show_bug.cgi?id=14773 https://bugzilla.mozilla.org/show_bug.cgi?id=701787

[11:29:00.0000] <smaug____>
hmm, XHR doesn't really define how responseText and responseXML map to each other while loading

[11:29:01.0000] <smaug____>
I mean, does something require that parsing needs to be synchronous or not

[12:23:00.0000] <zewt>
personally i think any use of window-synchronous xhr should force the page to comic sans

[13:19:00.0000] <jamesr_>
sicking, on the .findAll() thread i missed why the return type needs something in addition to Array.prototype on the prototype chain

[13:20:00.0000] <jamesr_>
what would go on [some type].prototype ?

[13:21:00.0000] <sicking>
jamesr_: See point to in the goals list in the beginning of the mail

[13:21:01.0000] <TabAtkins>
jamesr_: .findAll again, for example.

[13:22:00.0000] <sicking>
jamesr_: it's a future extension point so that we can hang things at it later

[13:23:00.0000] <sicking>
jamesr_: like .findAll, or .remove (to remove all the nodes from their parent), or .merge to merge two NodeArrays together and produce a sorted NodeArray

[13:23:01.0000] <sicking>
jamesr_: jquery has a host of functions on their equivalent of NodeArray, many of these would make sense on NodeArray too

[13:23:02.0000] <TabAtkins>
It has basically the entire Element API on their nodelists.

[13:24:00.0000] <TabAtkins>
Which is super-useful.

[13:25:00.0000] <sicking>
document.findAll(...).addEventListener would be neat

[13:25:01.0000] <jamesr_>
that operates on each element in the array?

[13:25:02.0000] <sicking>
yes

[13:25:03.0000] <_bga>
:(

[13:26:00.0000] <_bga>
dont invent jq again

[13:26:01.0000] <_bga>
plz

[13:26:02.0000] <TabAtkins>
Sorry, _bga, but you're wrong.  jQuery's interface is *really* useful.

[13:26:03.0000] <_bga>
doc.findAll(...).forEach(...)

[13:27:00.0000] <TabAtkins>
_bga: That doesn't let you do very useful things like run .findAll on the results and get back a unioned-and-document-sorted nodelist.

[13:27:01.0000] <sicking>
_bga: the fact that jQuery is seeing so much use is a pretty good indication that it's doing something right

[13:29:00.0000] <_bga>
TabAtkins jq api isnt orhogonal but ok if you want. anyway nobody need add event listerer to many nodes bucause event delegation by class is better

[13:30:00.0000] <TabAtkins>
_bga: Possible so.  But once you've added 50% of the Element API to it, you might as well add the rest for consistency.

[13:32:00.0000] <dglazkov>
sicking: that smells like a language thing to me:

[13:33:00.0000] <sicking>
dglazkov: what does?

[13:33:01.0000] <TabAtkins>
dglazkov: Lifting functions over an array is something the language can make easier, but it doesn't always go far enough.

[13:33:02.0000] <TabAtkins>
Like with the el.findAll().findAll() example.

[13:33:03.0000] <dglazkov>
sicking: document.findAll(..)..->addEventListener or something...

[13:34:00.0000] <sicking>
dglazkov: you mean the ability to apply a function call to all elements in an array?

[13:34:01.0000] <dglazkov>
sicking: yah

[13:34:02.0000] <sicking>
they already have that as a library, but the syntax is clunky

[13:35:00.0000] <sicking>
array.map(function(e) { e.doStuff(...) });

[13:35:01.0000] <dglazkov>
yup

[13:35:02.0000] <sicking>
possibly lambda expressions will help

[13:35:03.0000] <TabAtkins>
lift(doStuff)(array)

[13:35:04.0000] <TabAtkins>
Damn focus on methods and 'this' makes that hard.

[13:36:00.0000] <sicking>
right

[13:36:01.0000] <_bga>
i had els._do('addEventListener', [_fn, false])

[13:36:02.0000] <TabAtkins>
/me wishes once again that he could just program lisp in the browser...

[13:36:03.0000] <dglazkov>
array/:=(addEvenListener

[13:36:04.0000] <_bga>
* els._do('addEventListener', [type, _fn, false])

[13:36:05.0000] <dglazkov>
a sad hitler shorthand

[13:39:00.0000] <_bga>
TabAtkins anyway you(whole committee) must populate widget model, not jq spagetti code

[13:39:01.0000] <TabAtkins>
/me can't parse that sentence.

[13:39:02.0000] <_bga>
sorry

[13:39:03.0000] <sicking>
_bga: well.. first step is to come up with a concrete proposal

[13:40:00.0000] <sicking>
_bga: once you have that we can talk :)

[13:40:01.0000] <sicking>
_bga: next step would be to TC39 and pitch it

[13:40:02.0000] <sicking>
/me is about to pitch weak references to TC39

[13:41:00.0000] <TabAtkins>
sicking: Like, right now?

[13:41:01.0000] <sicking>
TabAtkins: no, need to do a couple of more rounds through dhermans brain

[13:41:02.0000] <TabAtkins>
Oh, okay.  Wasn't sure how immediate the "about" was.

[13:41:03.0000] <sicking>
TabAtkins: but the first round went better than other things I've pitched him

[13:44:00.0000] <TabAtkins>
The current thing I'm most excited about is private Names and decoupling . and [] semantics.

[13:46:00.0000] <_bga>
TC39 has wrong way imho. i stopped reading mailing list half year ago

[13:47:00.0000] <hsivonen>
smaug____: parsing in XHR does not need to be synchronous. responseXML isn't available until parsing has ended.

[13:54:00.0000] <smaug____>
hsivonen: ah

[13:55:00.0000] <hsivonen>
smaug____: however, I did intentionally stall progress events until the charset is known, because responseText is supposed to accumulate during progress events

[13:55:01.0000] <smaug____>
yeah, that is ok-ish

[13:56:00.0000] <smaug____>
at least I don't have any better solution

[13:56:01.0000] <hsivonen>
smaug____: I have an alternative solution, but I don't want to bother unless Web compat requires

[13:57:00.0000] <hsivonen>
smaug____: the alternative is to expose stuff in the ASCII range in responseText before the encoding has been decided

[13:57:01.0000] <dglazkov>
arv: did you see the conversation about a lifting shorthand in JS?

[13:57:02.0000] <hsivonen>
i.e. start stalling at the first non-ASCII character

[13:58:00.0000] <hsivonen>
smaug____: but I thought it's not worthwhile to add that kind of complexity without a clear demonstartion of Web compat issues with the way I wrote the patch

[13:58:01.0000] <arv>
dglazkov: lifting shorthand?

[13:58:02.0000] <dglazkov>
arv: to provide jquery-like lift facilities in the language

[13:58:03.0000] <smaug____>
hsivonen: I agree

[13:58:04.0000] <arv>
dglazkov: reading irc backlog now

[13:59:00.0000] <hsivonen>
smaug____: what I'm most worried about in terms of Web compat is the situation that the extension manager had showing up on the Web

[13:59:01.0000] <dglazkov>
arv: I remember you mentioning something about this

[13:59:02.0000] <hsivonen>
smaug____: that is, XHR users expecting HTTP text/html 404 or other error pages to give null responseXML

[13:59:03.0000] <smaug____>
yeah

[13:59:04.0000] <hsivonen>
smaug____: but again, I think it doesn't make sense to solve that problem without a demonstration that it's a real Web compat problem

[14:00:00.0000] <smaug____>
hsivonen: could we not give responseXML at all for text/html documents

[14:00:01.0000] <smaug____>
only response

[14:00:02.0000] <hsivonen>
smaug____: if it becomes a problem, we could only give responseXML when the status code is 2xx

[14:01:00.0000] <smaug____>
but why do we need to give HTML document from responseXML

[14:01:01.0000] <smaug____>
responseXML is legacy

[14:01:02.0000] <hsivonen>
smaug____: responseXML is the way you obtain a Document from XHR

[14:02:00.0000] <hsivonen>
smaug____: but yeah, if it becomes a problem, we could limit availability to the xhr.response

[14:02:01.0000] <smaug____>
hsivonen: you can get document using .response

[14:03:00.0000] <smaug____>
so, is there any reason to get document from responseXML

[14:03:01.0000] <hsivonen>
smaug____: I was following the spec

[14:03:02.0000] <smaug____>
right

[14:03:03.0000] <arv>
TabAtkins: Like this: http://traceur-compiler.googlecode.com/svn/trunk/example/collection.html

[14:03:04.0000] <smaug____>
the spec is possibly wrong

[14:04:00.0000] <smaug____>
(specs are always wrong :p )

[14:04:01.0000] <hsivonen>
smaug____: to me, it seems logical to offer the document via responseXML

[14:04:02.0000] <arv>
dglazkov: ES6 will have real iterators and a for-of loop for them

[14:04:03.0000] <smaug____>
even if the document has nothing to do with XML?

[14:04:04.0000] <TabAtkins>
arv: Yeah.

[14:04:05.0000] <hsivonen>
smaug____: I suggest we try to find out if offering it via resposeXML breaks the Web

[14:04:06.0000] <hsivonen>
smaug____: we have innerHTML on XML docs

[14:05:00.0000] <arv>
dglazkov: Me and Jacob talked about .{ for chaining. es-discuss didn't like it much though

[14:05:01.0000] <smaug____>
hsivonen: and that is unfortunate, but too late to fix

[14:05:02.0000] <TabAtkins>
arv: What does that do, run the block on the list or something?

[14:05:03.0000] <dglazkov>
arv: nifty demo!

[14:05:04.0000] <TabAtkins>
Or is that the "set multiple properties as an expression" thing?

[14:06:00.0000] <dglazkov>
/me slaps es-discuss with a trout

[14:06:01.0000] <arv>
TabAtkins: expr.{a: b, c: d} desugars to something like $tmp = expr; tmp.a = b; $tmp.c = d

[14:06:02.0000] <hsivonen>
smaug____: I suggest landing without more spec violations than the ones I've made already for not honoring <meta> for responseType == "text" and seeing what happens

[14:06:03.0000] <TabAtkins>
Yeah, what I thought.  Not sure how that's relevant to what we were talking about, though.

[14:06:04.0000] <arv>
TabAtkins: very much like css hierarchies

[14:07:00.0000] <hsivonen>
smaug____: if bad stuff happens, let's make spec change suggestions

[14:07:01.0000] <smaug____>
hsivonen: we can do that

[14:07:02.0000] <smaug____>
hsivonen: and removing the support for .responseXML is easy

[14:07:03.0000] <TabAtkins>
arv: We're talking about things like el.findAll().remove() or whatnot.

[14:08:00.0000] <smaug____>
I probably would want responseText and responseXML to support only legacy types

[14:08:01.0000] <smaug____>
(only those types which should be allowed to be used with sync XHR)

[14:09:00.0000] <arv>
TabAtkins: It allows chaining... https://mail.mozilla.org/pipermail/es-discuss/2011-November/018268.html

[14:09:01.0000] <arv>
TabAtkins: without restructuring the whole API to use methods that return THE jQuery obejct

[14:11:00.0000] <arv>
TabAtkins: For that I would just use a for of loop but expanding NodeList to implement Node is an exercise we have done. It seems to mostly work

[14:11:01.0000] <hsivonen>
smaug____: the reason the patch doesn't leak is that the parser always delivers DOMContentLoaded if we get as far as using the event listener

[14:12:00.0000] <smaug____>
hsivonen: what releases the listener?

[14:12:01.0000] <TabAtkins>
arv: I see.  It's using a slightly different syntax between the {} to allow method calls.

[14:12:02.0000] <hsivonen>
smaug____: whoa. I'm not sure.

[14:13:00.0000] <arv>
TabAtkins: This is kind of pushing the limits of syntax and some people really dislike this direction

[14:13:01.0000] <hsivonen>
smaug____: I need to take a better look at your comments at daytime

[14:13:02.0000] <smaug____>
k

[14:13:03.0000] <TabAtkins>
arv: I can see why.  ^_^

[14:14:00.0000] <TabAtkins>
Definitely a bit difficult to read.

[14:16:00.0000] <smaug_____>
/me kicks this 3G connection

[14:19:00.0000] <arv>
TabAtkins: no harder than jquery =P I also find the closing curly brace a lot cleaner than jquery's begin(). ... .end()

[14:19:01.0000] <TabAtkins>
Agree on that last point.

[14:32:00.0000] <dglazkov>
TabAtkins: where's a good summary of the latest and greatest on CSS variables?

[14:32:01.0000] <dglazkov>
TabAtkins: "in my head" is an acceptable answer

[14:32:02.0000] <TabAtkins>
http://dev.w3.org/csswg/css-variables

[14:41:00.0000] <dglazkov>
TabAtkins: this is gorgeous

[14:43:00.0000] <TabAtkins>
Damn, if you remove all the examples, the whole useful part of the spec is *just* over two screenfuls.

[14:44:00.0000] <sicking>
TabAtkins: had you been involved in the accessibility-for-canvas API?

[14:44:01.0000] <dglazkov>
I thought exmaples_were_ the useful part :)

[14:44:02.0000] <sicking>
TabAtkins: i think someone said you had been present during those discussions at tpac?

[14:44:03.0000] <TabAtkins>
sicking: Only in shouting for use-cases.

[14:44:04.0000] <TabAtkins>
No, I was not in the tpac discussions.

[14:45:00.0000] <TabAtkins>
Though my spirit may have been hovering in the room.

[14:45:01.0000] <TabAtkins>
Glooming at everyone.

[14:45:02.0000] <sicking>
hah

[14:46:00.0000] <dglazkov>
accessibility for ALL the canvases!

[14:46:01.0000] <sicking>
TabAtkins: i think the use case is basically to existing use of canvas accessible. I realize that a lot of canvas use today can be done in a differe, more accessible way, using completely different APIs

[14:46:02.0000] <sicking>
TabAtkins: but i think asking people to completely redo what they are doing, especially if the win is "just" accessibility, isn't going to have any effect

[14:47:00.0000] <TabAtkins>
I agree.

[14:47:01.0000] <smaug____>
that reminds me... since I know nothing about canvas+a11y, I was wondering few days ago why imagemaps couldn't be used with canvas

[14:48:00.0000] <sicking>
smaug____: the problem is that it's a completely different API. If you're drawing something on screen with canvas, you'll need a completely different code-path to also create an imagemap

[14:48:01.0000] <smaug____>
I was told that it has been decided that imagemaps don't work well enough in that case, but does anyone happen to have links to where that discussion has happened

[14:48:02.0000] <sicking>
smaug____: so it's just too inconvenient

[14:49:00.0000] <sicking>
smaug____: additionally, there is no way to associate an element with a particular image-map area

[14:49:01.0000] <sicking>
TabAtkins: but working based on examples of how people use canvas today is definitely a good idea

[14:50:00.0000] <smaug____>
sicking: I don't quite buy that all. Something new could be added to maps

[14:50:01.0000] <smaug____>
but, as I said, I'm not really familiar with a11y+canvas

[14:52:00.0000] <TabAtkins>
sicking: I have no problem with designing some a11y apis into canvas.  My problem is designing things in such a way that authors have to go to extra lengths to use them (because most won't), or designing in the absence of use-cases since that almost always results in solving non-problems or solving real problems wrongly.

[14:53:00.0000] <TabAtkins>
a11y should be as automatic as possible, even if that means you don't get a perfect solution.

[14:54:00.0000] <Hixie>
sicking: i wish the people asking for "making canvas accessible" would in fact do as you say and start with real uses of canvas

[14:55:00.0000] <Hixie>
sicking: currently they just hand-wave the use cases and then design things that would only make sense if you were doing something absurd and cockamamie like implementing a word processor in canvas or something

[14:56:00.0000] <sicking>
TabAtkins: definitely. My suggestion has been to create a API which builds hit-testing into canvas. Then we can use the hit-testing information to provide a11y

[14:56:01.0000] <Hixie>
fwiw, hit testing is on my list of things to add to canvas once we do path primitives

[14:57:00.0000] <Hixie>
which is high on my list to do within the next few momnths

[14:57:01.0000] <Hixie>
months

[14:57:02.0000] <sicking>
Hixie: the API i have suggested creates hit-testing without the need for path primitives

[14:57:03.0000] <zewt>
so far i've had to use HTML elements overlaid on top of a canvas for hit testing (clumsy and limited, but works)

[14:58:00.0000] <Hixie>
sicking: i think we should avoid adding new features to paths that we'd have to duplicate when we have path primitives, but i'm certainly open to suggestions. mail the list or file a bug.

[14:58:01.0000] <sicking>
Hixie: of course, i can't compare it to a proposal which does use path primitives until someone makes such a proposal ;-)

[14:58:02.0000] <sicking>
Hixie: done and done

[14:58:03.0000] <sicking>
Hixie: the bug is already on file and already links to my proposal

[14:58:04.0000] <Hixie>
cool

[14:58:05.0000] <Hixie>
url?

[14:59:00.0000] <sicking>
http://www.w3.org/Bugs/Public/show_bug.cgi?id=13176

[14:59:01.0000] <sicking>
http://lists.w3.org/Archives/Public/public-canvas-api/2011JulSep/0195.html

[14:59:02.0000] <Hixie>
ah man, don't use public-canvas-api

[14:59:03.0000] <Hixie>
who reads that

[14:59:04.0000] <sicking>
Hixie: dude, it's in the bug, you know how to find it

[15:00:00.0000] <Hixie>
sure, i'm just saying htat list is a bad place to send feedback in general

[15:01:00.0000] <Hixie>
yeah your proposal is basically what i had in mind, except i think we should just do it with Path objects instead of continuing to use the existing path stuff

[15:02:00.0000] <Hixie>
since everything we add to the existing path stuff will have to be duplicated when we add path primitives

[15:02:01.0000] <Hixie>
it's hard to say how good such a proposal would be for accessibility though

[15:03:00.0000] <Hixie>
oh actually no, your proposal isn't quite what i had in mind

[15:03:01.0000] <Hixie>
i missed that you were setting a "drawing mode"

[15:03:02.0000] <Hixie>
my idea was just to use the path to set the boundary rect

[15:03:03.0000] <Hixie>
s/rect/shape/

[15:04:00.0000] <sicking>
my proposal is to make everything drawn why "setDrawingFor" forward clicks to the underlying element

[15:04:01.0000] <sicking>
that way people have incentive to use the API

[15:04:02.0000] <sicking>
the a11y is no longer bolt-on

[15:05:00.0000] <Hixie>
it's not clear to me that that helps a11y

[15:05:01.0000] <Hixie>
if the user can click, why does the element matter?

[15:06:00.0000] <sicking>
making a real connection between pixels and elements has many benefits

[15:06:01.0000] <sicking>
it means we know where to focus if you tab to said element

[15:06:02.0000] <Hixie>
to me it looks like this would just encourage people to have lots of empty <div>s in the canvas to use as event listeners

[15:06:03.0000] <Hixie>
we already have a solution to the focus ring problem

[15:07:00.0000] <Hixie>
http://www.whatwg.org/specs/web-apps/current-work/#dom-context-2d-drawsystemfocusring

[15:07:01.0000] <sicking>
one that anyone is using?

[15:07:02.0000] <sicking>
or implementing?

[15:07:03.0000] <sicking>
or has expressed like for?

[15:07:04.0000] <Hixie>
implementors from gecko, opera, and webkit have said they like what the whatwg spec has as far as that goes

[15:07:05.0000] <Hixie>
in fact it was mostly designed by roc

[15:08:00.0000] <sicking>
i haven't really head any positive feedback about it

[15:08:01.0000] <Hixie>
the whatwg api or the richs api?

[15:08:02.0000] <sicking>
the whatwg API

[15:08:03.0000] <sicking>
i don't know what richs api is

[15:08:04.0000] <Hixie>
the richs api is the one in the w3c copy of hte canvas spec, that's self-contradictory

[15:09:00.0000] <Hixie>
the whatwg one, like i said, was designed mostly by roc, with input from people from opera and webkit who were all supportive at the time it was put in

[15:09:01.0000] <Hixie>
(iirc, i reached out to microsoft but got no reply)

[15:10:00.0000] <sicking>
ok

[15:10:01.0000] <sicking>
i guess your experience is different from mine

[15:10:02.0000] <Hixie>
well, nobody to my knowledge has implemented it

[15:10:03.0000] <Hixie>
so my experience doesn't mean much :-)

[15:11:00.0000] <Hixie>
i'm certainly happy to try other solutions that are more likely to get implemented, including linking focus rings with click regions

[15:12:00.0000] <sicking>
i haven't given a great deal of thought to focus rings, but it doesn't seem like what we currently have is solving a lot of the problem

[15:12:01.0000] <Hixie>
what we should do is list the actual concrete examples of usage of canvas that are not accessible, but that are valid sensible uses of canvas, and see what we need to do to make those better

[15:12:02.0000] <Hixie>
that would help us design solid solutions

[15:13:00.0000] <zewt>
fwiw, https://zewt.org/curves/

[15:14:00.0000] <zewt>
control points created in the curve should really be tabbable (the actual clickable regions are done with HTML, which is a hack)

[15:14:01.0000] <Philip`>
/me has been doing some thing that uses canvas and hit-testing, but it was sufficiently trivial to just store a list of rectangle coordinates and test them manually on mousemove, and he wouldn't want to use the actual drawing paths for hit-testing because it's user-friendlier to give several pixels margin around them

[15:14:02.0000] <zewt>
(hasn't been updated with crossorigin so it'll only work opening local files)

[15:16:00.0000] <Hixie>
zewt's example is a perfect example of something where it's not at all clear to me how mapping the clickable regions to elements would make it more accessible

[15:17:00.0000] <Philip`>
With control-point movement you probably want to detect which point is closest to the mouse, rather than picking whichever is within the radius and happened to be drawn first/last

[15:17:01.0000] <zewt>
a couple other notable things here: the clickable region of the control points is larger than the points, and the mouse cursor is affected by what's hovered (it would be nice to be able to do that without muddling with the cursor by hand in mousemove/mouseover)

[15:17:02.0000] <Hixie>
Philip`: indeed

[15:18:00.0000] <Hixie>
zewt: sounds like a perfect thing for SVG :-)

[15:18:01.0000] <Hixie>
zewt: (at least the latter part)

[15:18:02.0000] <zewt>
Philip`: that doesn't matter much in this particular case, since control points can't be that close together (drag within a few pixels and it deletes the point)

[15:18:03.0000] <zewt>
but in other cases, yes

[15:19:00.0000] <Hixie>
http://wiki.whatwg.org/wiki/Canvas

[15:20:00.0000] <zewt>
Hixie: SVG doesn't help if I need 1 feature from SVG and 9 from Canvas, unless they integrate better than I'm aware

[15:20:01.0000] <zewt>
(eg. a way to create matching paths in SVG and Canvas, or something like that)

[15:20:02.0000] <Hixie>
what features do you need from canvas?

[15:21:00.0000] <zewt>
i havn't used SVG enough to know how to do this sort of thing in it

[15:21:01.0000] <Hixie>
as far as i'm aware, you can do all of this in svg

[15:21:02.0000] <Philip`>
/me likes the "easy-to-use API" feature

[15:22:00.0000] <Hixie>
can't argue with that

[15:23:00.0000] <sicking>
Hixie, zewt: In that example you'd call setDrawingFor before/after drawing the draggable markers

[15:23:01.0000] <Hixie>
no, you'd want the path for the hit zones to be bigger than the markers

[15:23:02.0000] <Hixie>
sicking: but what element would you forward the clicks to?

[15:24:00.0000] <sicking>
Hixie: Yeah, I've thought about adding a number argument for getting a bigger area around the drawn figure clickable

[15:24:01.0000] <sicking>
Hixie: you'd have to create "dummy" elements inside the canvas

[15:24:02.0000] <sicking>
Hixie: so how would you make that accessible?

[15:24:03.0000] <Hixie>
(imho best to just have an actual path and just say "within this path is the region")

[15:25:00.0000] <Hixie>
sicking: i don't know in what sense it is inaccessible

[15:25:01.0000] <sicking>
Hixie: yeah, you're not the first to suggest that. I'm open to that idea

[15:25:02.0000] <Hixie>
sicking: certainly a blind person can't use it, but there's not much we can do for them. So presumably we're talking about limited but not zero vision.

[15:25:03.0000] <zewt>
you can always draw a transparent larger clickable path around your visible part

[15:25:04.0000] <Hixie>
sicking: or maybe keyboard-only users?

[15:26:00.0000] <sicking>
Hixie: possibly, i'm not fully sure

[15:26:01.0000] <Hixie>
zewt: every drawing operation is a transparent area filling the whole canvas, so that doesn't really work :-)

[15:26:02.0000] <Hixie>
sicking: we can't design an API without knowing what we're trying to solve.

[15:26:03.0000] <zewt>
i mean, use the transparent path as the clickable part

[15:26:04.0000] <Hixie>
sicking: (despite what we may see others do)

[15:26:05.0000] <zewt>
for example, hovering near the path (not over a control point) changes the cursor to cross when you're close enough to click; that clickable region is invisible and complex (follows the curve)

[15:26:06.0000] <sicking>
Hixie: no, but doing nothing and waiting for the a11y community to come up with something hasn't been terribly successful either

[15:27:00.0000] <zewt>
(that's just done manually on mousemove, iirc)

[15:28:00.0000] <zewt>
would be a lot nicer to just draw a thicker invisible path around the line of the curve, give it a cursor style (somehow) and receive mousedown

[15:28:01.0000] <Hixie>
sicking: replacing one unsuccessful strategy with another is not a win :-)

[15:28:02.0000] <zewt>
afk

[15:28:03.0000] <Hixie>
sicking: or even an improvement

[15:29:00.0000] <Hixie>
sicking: when i get aroudn to this i intend to study what the problems actually are in some depth

[15:29:01.0000] <sicking>
Hixie: i think the "let's not do anything until we know exactly what to do" strategy is the worst possible strategy since it'll just result in others ignoring us and doing whatever they think is the best

[15:29:02.0000] <Hixie>
sicking: i didn't say "exactly"

[15:31:00.0000] <jernoble>
Hixie: more MediaController questions

[15:31:01.0000] <jernoble>
Hixie: "the playbackRate attribute … on setting, must set the MediaController's media controller playback rate to the new value, then queue a task to fire a simple event named ratechange at the MediaController."

[15:31:02.0000] <jernoble>
Hixie: Should it also set the playback rate of its slaved media elements? or is that implied?

[15:31:03.0000] <Hixie>
jernoble: the rates are multiplied -- search for "effective playback rate"

[15:32:00.0000] <Philip`>
/me 's current canvas use is http://zaynar.co.uk/0ad-pub/profiler4.png where every rectangle (including the ~1000 tiny narrow ones along the top) has a tooltip displayed on mouseover containing a load more data

[15:32:01.0000] <Hixie>
jernoble: actually they're no longer multiplied, the controller just overrides it

[15:32:02.0000] <jernoble>
Hixie: so it's implied that it directly affects the playback rate of the slaved media elements.

[15:32:03.0000] <jernoble>
Hixie: right, they're overriden.

[15:32:04.0000] <Hixie>
jernoble: not implied, it's very explicit

[15:33:00.0000] <Hixie>
Philip`: yeah, i don't see how a DOM can ever make that more accessible

[15:33:01.0000] <Hixie>
Philip`: but it would be good to have accessibility experts actually describe what the ideal accessible UI for that would be

[15:34:00.0000] <Hixie>
sicking: there's a world of difference betwene zero data (what we have now), some data sufficient to actually design a good API (what we need, and can easily obtain by speaking to people with experience in this space), and complete and full knowledge that would design an ideal API (which would take years to collect)

[15:34:01.0000] <Hixie>
sicking: i'm arguing for the second, not the third.

[15:34:02.0000] <jernoble>
Hixie: got it. thanks.

[15:34:03.0000] <Hixie>
sicking: and i plan to do the work to collect the data.

[15:34:04.0000] <Hixie>
jernoble: np

[15:34:05.0000] <Hixie>
sicking: (though if others want to help that would be fantastic)

[15:36:00.0000] <sicking>
Hixie: i haven't been operating with zero data. I've been operating with the examples of canvas that i've seen in the wild. Minus the ones that built an editor in canvas as they weren't good products anyway and would be too much work to make accessible, so we simply can't get good results

[15:37:00.0000] <Hixie>
sicking: can i convince you to list some of those examples on this wiki page? http://wiki.whatwg.org/wiki/Canvas

[15:37:01.0000] <Hixie>
sicking: or describe them by e-mail?

[15:37:02.0000] <sicking>
Hixie: unfortunately most of them i can't find any more :(

[15:37:03.0000] <Hixie>
sicking: even one would be a start

[15:38:00.0000] <Hixie>
so far i've added zewt's example

[15:38:01.0000] <sicking>
Hixie: i'll put some on the wiki

[15:38:02.0000] <Hixie>
cool, thanks

[15:38:03.0000] <Hixie>
that would be a huge help

[15:41:00.0000] <zewt>
looks like WebGL switched their WebGLContextEvent to a constructor, http://www.khronos.org/registry/webgl/specs/latest/#5.14

[15:42:00.0000] <smaug____>
/me should implement event ctors


2011-11-12
[00:11:00.0000] <annevk>
more html5lib tests: http://www.davidflanagan.com/2011/11/code-coverage-f.html

[01:18:00.0000] <MikeSmith>
annevk: very cool

[01:18:01.0000] <MikeSmith>
" can parse the HTML specification in under 8 seconds"

[01:19:00.0000] <MikeSmith>
but doesn't handle document.write() yet

[04:47:00.0000] <Dashiva>
Say, does anyone know why 'initial' isn't a valid CSS value for most properties?

[04:48:00.0000] <Ms2ger>
Buggy specs

[04:48:01.0000] <Ms2ger>
Also, you may be misreading the subtle requirements that make it valid

[04:51:00.0000] <Dashiva>
Oh?

[04:53:00.0000] <Ms2ger>
"All CSS properties also accept the keyword values inherit and initial as their property value, but for readability these are not listed explicitly in the property value syntax definitions."

[04:53:01.0000] <Ms2ger>
http://dev.w3.org/csswg/css3-values/#component-types

[04:53:02.0000] <Ms2ger>
So anything that depends on css3values supports it, anything that references css21 doesn't

[04:54:00.0000] <Dashiva>
Oh, I wasn't aware that css3 had changed that

[04:54:01.0000] <Dashiva>
Cool

[04:54:02.0000] <Ms2ger>
There was some discussion about making it more obvious on www-style

[04:57:00.0000] <Ms2ger>
Also, can someone tell the WebGL people that DOM *2* Core isn't the right spec to reference for "DOMString"?

[05:08:00.0000] <annevk>
still think we should have named it string

[05:09:00.0000] <Ms2ger>
Meh

[05:09:01.0000] <annevk>
Teh

[05:09:02.0000] <annevk>
it's weekend, bikeshedding is encouraged

[05:10:00.0000] <annevk>
finally played Portal this morning by the way

[05:10:01.0000] <Ms2ger>
Go ahead, the shed is over there

[05:10:02.0000] <annevk>
great twist

[05:10:03.0000] <annevk>
the challenges that come with the Xbox edition are hard though

[05:10:04.0000] <annevk>
haven't really completed those

[05:27:00.0000] <Dashiva>
The max number of portals used ones are okay

[05:27:01.0000] <Dashiva>
Since you can think about what you're doing

[05:40:00.0000] <annevk>
pro tip: if your internet is slow, try resetting the router

[08:10:00.0000] <erlehmann>
annevk, now go play http://cymonsgames.com/asciiportal/


2011-11-13
[09:46:00.0000] <AryehGregor>
Is there a good way to test [[Configurable]]?

[09:46:01.0000] <AryehGregor>
Just delete and see if it works?

[09:46:02.0000] <_bga>
getOPD?

[09:47:00.0000] <AryehGregor>
Oh, awesome.

[09:47:01.0000] <AryehGregor>
Thanks!

[09:48:00.0000] <AryehGregor>
I guess if that returns the right thing but it doesn't behave right, that's more of an ES bug than a WebIDL bug.

[10:01:00.0000] <_bga>
AryehGregor http://pastie.org/2857719

[10:05:00.0000] <AryehGregor>
Only IE9 ever passes my new shiny assert_interface().

[10:05:01.0000] <AryehGregor>
Go IE.

[10:06:00.0000] <AryehGregor>
Gecko doesn't have Node.prototype.constructor.

[10:07:00.0000] <AryehGregor>
Node.prototype is enumerable and configurable in Opera, and should be neither.

[10:07:01.0000] <AryehGregor>
In WebKit, window.Node is not writable but is enumerable, while it should be writable but not enumerable.  And String(Node) is wrong.

[10:10:00.0000] <Ms2ger>
AryehGregor, can you also try it on NodeList?

[10:11:00.0000] <AryehGregor>
/me tries

[10:12:00.0000] <AryehGregor>
Ms2ger, works.

[10:12:01.0000] <AryehGregor>
I mean, it passes everything.

[10:12:02.0000] <Ms2ger>
Excellent

[10:54:00.0000] <AryehGregor>
What's an example of a static operation that's actually used in real life?  I don't find any in DOM4, and the only one I find in HTML is URL.createObjectURL.

[10:59:00.0000] <Ms2ger>
IDB

[10:59:01.0000] <Ms2ger>
Those are the only two

[11:03:00.0000] <AryehGregor>
jgraham, I submitted another testharness.js patch: http://www.w3.org/Bugs/Public/show_bug.cgi?id=14814

[11:30:00.0000] <heycam>
AryehGregor, also you can test Object.getOwnPropertyDescriptor(obj, propname).configurable

[11:31:00.0000] <Ms2ger>
heycam, yes, that's what _bga said

[11:32:00.0000] <heycam>
Ms2ger, I'd have realised that if I'd read just one line further, I suppose :)

[11:32:01.0000] <Ms2ger>
:)

[13:37:00.0000] <gsnedders>
AryehGregor: getOPD often returns bogus things for host objects in general.

[13:38:00.0000] <Ms2ger>
Well, then that's an excellent thing to test

[13:38:01.0000] <gsnedders>
A WebIDL mapping issue rather than a per-interface issue in general, though

[13:38:02.0000] <gsnedders>
And I'm not sure WebIDL actually requires it to be correct

[13:39:00.0000] <heycam>
hopefully it does

[13:40:00.0000] <gsnedders>
I have some draft email somewhere about things that WebIDL fails to specify.

[13:40:01.0000] <gsnedders>
I know what your intention is, heycam :)

[13:40:02.0000] <Ms2ger>
Send it, dammit :)

[13:40:03.0000] <heycam>
gsnedders, yes please send :)

[13:43:00.0000] <gsnedders>
Oh, no, it's fixed now anyway

[13:44:00.0000] <Ms2ger>
:)

[13:46:00.0000] <heycam>
yay

[14:21:00.0000] <annevk>
heh

[14:22:00.0000] <annevk>
HTML5 new featured by WSJ: http://online.wsj.com/article/SB10001424052970203537304577030033160849296.html

[14:22:01.0000] <Ms2ger>
"Implementations that use ECMAScript to implement the APIs defined in this specification must implement them in a manner consistent with the ECMAScript Bindings defined in the Web IDL specification"

[14:22:02.0000] <Ms2ger>
Does that mean C++ implementations are free to do whatever?

[14:22:03.0000] <annevk>
I hope so

[14:23:00.0000] <heycam>
"implement" there is a bit iffy

[14:23:01.0000] <heycam>
it's not the implementation of the DOM needing to be js

[14:23:02.0000] <annevk>
we should definitely not make requirements on other languages I think

[14:23:03.0000] <heycam>
it should be saying if the APIs are exposed to JS

[14:23:04.0000] <heycam>
or something

[14:24:00.0000] <annevk>
heycam: any chance we can get unions in?

[14:24:01.0000] <annevk>
heycam: if not, I think I'm just going to use them when I get back to editing DOM4

[14:24:02.0000] <heycam>
ha

[14:24:03.0000] <annevk>
heycam: much like Hixie's has been using non-existing features

[14:24:04.0000] <heycam>
I think they make sense

[14:25:00.0000] <heycam>
dunno if it is worth trying to drop all the overload stuff just in favour of unions

[14:25:01.0000] <Ms2ger>
Btw, cabal, please review the mouse lock spec

[14:25:02.0000] <heycam>
might be possible

[14:25:03.0000] <annevk>
Ms2ger: place a pointer in

[14:25:04.0000] <annevk>
though I'm going to try to sleep shortly

[14:25:05.0000] <Ms2ger>
http://dvcs.w3.org/hg/webevents/raw-file/default/mouse-lock.html

[14:25:06.0000] <annevk>
still adjusting after the flight :(

[14:26:00.0000] <annevk>
heycam: there's definitely some overlap

[14:26:01.0000] <Ms2ger>
Hmm, sleeping...

[14:26:02.0000] <annevk>
heycam: though the append() stuff you cannot really do with overloading because of the varargs

[14:27:00.0000] <annevk>
allowing append(Comment, Text) does not work with append(Comment...); append(Text...) afaict

[14:28:00.0000] <annevk>
via this new "Activity" feature of twitter I find out that people "favorite" tweets a lot

[14:28:01.0000] <heycam>
annevk, yeah that wouldn't allow append(aComment, aComment, aText, aComment)

[15:16:00.0000] <annevk>
so much for sleeping before midnight :)

[15:17:00.0000] <annevk>
http://imgur.com/K7D7Y hehe

[15:17:01.0000] <gsnedders>
jgraham: tokenizer.py:184(entitiesStartingWith) is a huge bottleneck in html5lib/PyPy, accounting for a 1/6th of complete.html parse-time.

[15:17:02.0000] <gsnedders>
Guess we should move over to using a trie.

[15:17:03.0000] <gsnedders>
I mean, we could cache it, but that seems hacky, and will just end up using way more memory than doing it properly.

[15:19:00.0000] <Philip`>
Alternatively, hardcode the entities lt/gt/amp/quot because they're a vast majority of all occurrences

[15:19:01.0000] <Philip`>
(and fall back to a slower search if it's none of them)

[15:20:00.0000] <Philip`>
(Also, look at data to verify the hypothesis that those entities are the vast majority)

[15:29:00.0000] <gsnedders>
Philip`: Doesn't help seeming it's scanned one-character-at-a-time

[15:32:00.0000] <Philip`>
See if first char is l/g/a/q; if so, see if self.stream.char() is t/t/m/u; etc; then when it falls off the fast path, send the whole list of characters to the slower lookup code

[15:33:00.0000] <Philip`>
Might avoid the cost of doing a load of expensive dictionary lookups (as with a trie) for the common cases

[15:35:00.0000] <gsnedders>
Seems to be the slowest thing in Python 2.7.2 too


2011-11-14
[16:05:00.0000] <gsnedders>
jgraham: Um, tests don't run anymore.

[16:05:01.0000] <gsnedders>
Why do you always break tests? ;_;

[00:47:00.0000] <zcorpan>
should structured clone support Stream?

[00:53:00.0000] <jgraham>
gsnedders: Why do you think I broke anything?

[00:55:00.0000] <jgraham>
Also, tries aren't exactly famous for being particularly low-memory usage

[01:15:00.0000] <jgraham>
AryehGregor: I fear the number of asserts bound up in assert_interface

[03:36:00.0000] <annevk>
okay so roc argued for nested fullscreen

[03:36:01.0000] <annevk>
and nobody else said anything

[03:37:00.0000] <annevk>
I think that means I'll go with roc and see what happens next

[03:37:01.0000] <annevk>
people are also complaining (not on list) about the style rules

[03:37:02.0000] <annevk>
e.g. background:black is problematic

[03:37:03.0000] <annevk>
and either padding/border need to be cleared or we need to set box-sizing

[03:37:04.0000] <annevk>
the latter is prolly better

[03:44:00.0000] <jgraham>
FWIW I think roc's argument is pretty convincing so I changed my mind

[03:45:00.0000] <annevk>
I presented the same argument

[03:45:01.0000] <jgraham>
Yeah, but roc is more convincing than you :p

[03:46:00.0000] <jgraham>
(I think I had actually underestimated the difficulty of working around the problem)

[03:48:00.0000] <annevk>
So argument by authority works on you? hah

[03:48:01.0000] <annevk>
In any event, roc's stack description does not seem to work

[03:48:02.0000] <jgraham>
/me wonders what sounded like "argument from authority"

[03:50:00.0000] <jgraham>
What's wrong with the stack?

[03:50:01.0000] <Ms2ger>
It's just doctors together, I guess

[03:52:00.0000] <annevk>
jgraham: the stack is per document, but then you still need a check if the element on the stack is in the document

[04:00:00.0000] <annevk>
jgraham: basically, the exitFullscreen steps make it seem the stack is global

[04:29:00.0000] <gsnedders>
jgraham: Because you tried to get the tests running with nose without updating the documentation or any of the other tests

[04:30:00.0000] <gsnedders>
Like runtests.py and runparsertests.py just throw errors now

[04:32:00.0000] <zcorpan>
now you're just being picky

[04:43:00.0000] <jgraham>
Oh, did I commit that?

[04:44:00.0000] <jgraham>
Well, having the tests running in nose is a huge win for sanity

[04:46:00.0000] <jgraham>
So think of it an an impetus to make the other tests work properly (i.e. in nose)

[05:06:00.0000] <gsnedders>
jgraham: See, I'm still not sure it's much of a win, and breaking it is just annoying.

[05:06:01.0000] <jgraham>
gsnedders: I am entirely sure it is 100% win

[05:07:00.0000] <gsnedders>
/me wants a receieve hook that rejects anything that regresses any testcase

[05:07:01.0000] <jgraham>
No

[05:08:00.0000] <jgraham>
Apart from anything else it would quickly get complicated

[05:08:01.0000] <jgraham>
Imagine someone adding a TC that we fail. Why would one reject other pushes for failing to address that?

[05:09:00.0000] <jgraham>
So you would either need to make people add annotations like "expected fail" that the commit hook would ignore

[05:09:01.0000] <jgraham>
(+ to indicate TC fails)

[05:09:02.0000] <jgraham>
Or keep a list of known passes/fails

[05:10:00.0000] <zcorpan>
you could reimplement spartan for html5lib

[05:10:01.0000] <jgraham>
Doing that once is enough I think :p

[05:16:00.0000] <Philip`>
Have a receive hook that sends a warning message to IRC on test failures, so people can apply their own judgement and decide whether to tell off the committer

[05:17:00.0000] <jgraham>
/me suggests lack of infrastructure is not the main problem

[05:18:00.0000] <Ms2ger>
jgraham, but the tools will save us!

[05:20:00.0000] <jgraham>
If by "tools" you mean "street corner preachers" and "save us" you mean "convert us to Jesus" then I still have my doubts

[05:21:00.0000] <zcorpan>
well you kinda look like Jesus anyway :)

[05:21:01.0000] <annevk>
dr Jesus

[05:22:00.0000] <jgraham>
Rumbled

[05:23:00.0000] <jgraham>
/me notes that if Jesus looked like him, he would have stuck out like a sore thumb in the middle east

[05:24:00.0000] <Ms2ger>
Like you with a tan, perhaps?

[05:27:00.0000] <jgraham>
I'm not sure I get tans, just more pronounced freckles

[05:28:00.0000] <annevk>
http://i.imgur.com/JVI4V.jpg and even so, within half an hour you're in the mountains

[05:29:00.0000] <annevk>
one of the reasons Tokyo is pretty awesome

[05:33:00.0000] <myakura>
Is that a view from Takaosan?

[05:36:00.0000] <hsivonen>
I *think* I've seen Zeldman show a CSS example that included an unprefixed CSS property in anticipation of the property getting standardized in the future

[05:36:01.0000] <hsivonen>
now I can't find such an example on this blog

[05:36:02.0000] <hsivonen>
am I imagining things?

[05:36:03.0000] <annevk>
myakura: helicopter

[05:37:00.0000] <myakura>
annevk: yeah... Takaosan's never been that close to the city.

[05:39:00.0000] <annevk>
I meant that Tokyo is so vast, and even so it's pretty easy to get to the mountains

[05:41:00.0000] <annevk>
Ms2ger: btw, for DOM4, we need to make sure insert DocumentFragment is atomic

[05:41:01.0000] <Ms2ger>
Yep

[05:41:02.0000] <annevk>
Ms2ger: and we need to have some kind of innerHTML handle, replace all children with DocumentFragment

[05:42:00.0000] <annevk>
whenever such an insert happens a "MutationRecord" is created if there are appropriate listeners

[05:42:01.0000] <annevk>
MutationRecord are not really created in a smart way otherwise

[05:43:00.0000] <annevk>
if you change an attribute several times in a row, you get multiple of them

[09:09:00.0000] <gsnedders>
Ms2ger: Do you have tests for TreeWalker?

[09:17:00.0000] <Ms2ger>
No

[09:17:01.0000] <Ms2ger>
I can probably point you at the ones Mozilla has

[09:18:00.0000] <gsnedders>
Okay, apparently it's fairly trivial to crash IE9 with. And apparently in Opera previousNode and parentNode are identical.

[09:18:01.0000] <Ms2ger>
Nice

[09:18:02.0000] <gsnedders>
But yeah, pointing at a testsuite would be nice.

[09:21:00.0000] <Ms2ger>
http://mxr.mozilla.org/mozilla-central/source/content/events/test/test_bug650493.html is one...

[09:25:00.0000] <Ms2ger>
I was thinking about http://mxr.mozilla.org/mozilla-central/source/content/base/test/test_NodeIterator_basics_filters.xhtml?force=1, apparently

[09:26:00.0000] <Ms2ger>
Which points at http://hixie.ch/tests/adhoc/dom/traversal/node-iterator/...

[09:26:01.0000] <dglazkov>
good morning, Whatwg!

[09:26:02.0000] <Ms2ger>
And http://hixie.ch/tests/adhoc/dom/traversal/tree-walker/ is.. Bah, empty

[09:27:00.0000] <annevk>
reminds me of one of my unfinished projects, http://testsuite.org/

[09:30:00.0000] <Ms2ger>
http://mxr.mozilla.org/mozilla-central/source/content/base/test/test_treewalker_nextsibling.xml

[09:32:00.0000] <Ms2ger>
http://mxr.mozilla.org/mozilla-central/source/content/base/test/test_bug628938.html

[09:34:00.0000] <Ms2ger>
http://mxr.mozilla.org/mozilla-central/source/content/base/test/test_bug338541.xhtml

[09:34:01.0000] <Ms2ger>
That's about it, I think

[09:35:00.0000] <annevk>
should prolly import those tests too

[09:35:01.0000] <annevk>
one test suite to rule them all

[09:35:02.0000] <Ms2ger>
Yeah, I need to look at that

[09:35:03.0000] <Ms2ger>
Put that list somewhere, will you? :)

[09:40:00.0000] <annevk>
krijn already did for me

[10:00:00.0000] <AryehGregor>
jgraham, do you have a better idea than lots and lots of asserts in one?  I think it's essential that we have all that logic packaged up in one place, because exact same things should be tested for every single interface declared in any spec . . .

[10:01:00.0000] <AryehGregor>
s/exact/the exact/

[10:07:00.0000] <zcorpan>
AryehGregor: how about a helper function that generates a bunch of tests?

[10:08:00.0000] <zcorpan>
testWebIdlStuff(interfaceObject, instance, {settings:'maybe'})

[10:11:00.0000] <krijn>
annevk: with pleasure!

[10:13:00.0000] <Ms2ger>
krijn, thanks! :)

[10:14:00.0000] <krijn>
is it still fast enough?

[10:17:00.0000] <Ms2ger>
I noticed the front page sometimes is a day out of date

[10:17:01.0000] <krijn>
Probably because of time zones

[10:18:00.0000] <krijn>
I think a cache builder is running every night or something

[11:29:00.0000] <JonathanNeal>
Using HTML5, how would you mark up the "to" and "from" in a letter?

[12:16:00.0000] <roc>
annevk: can you explain in more detail why the stack doesn't work?

[12:16:01.0000] <roc>
and why background:black doesn't work?

[12:25:00.0000] <zewt>
roc: one comment I made about background: black (don't think anyone responded to it) was http://permalink.gmane.org/gmane.org.w3c.whatwg.discuss/32958

[12:26:00.0000] <roc>
oh, you're Glenn Maynard?

[12:26:01.0000] <roc>
interesting

[12:26:02.0000] <zewt>
in a good way or a bad way? heh :P

[12:26:03.0000] <roc>
unfortunately I have trouble keeping my Glenn's straight

[12:26:04.0000] <zewt>
i've only seen one other posting on whatwg/webapps

[12:26:05.0000] <zewt>
(and infrequently)

[12:26:06.0000] <roc>
right

[12:27:00.0000] <roc>
I frequently find myself disagreeing with that Glenn

[12:27:01.0000] <zewt>
i vaguely remember disagreeing with him, but no recollection of about what

[12:27:02.0000] <zewt>
(actually, my recollection is "i wish this guy didn't have my name" ...)

[12:28:00.0000] <roc>
better change your name to something more unique :-)

[12:29:00.0000] <zewt>
i'd expect that the ancestor elements of the fullscreen element would not be rendered, even without blackground being set, but I don't know how that works in detail

[12:29:01.0000] <zewt>
glenn-99295c95-4fbc-4c23-96d3-8fd0666e2f60

[12:30:00.0000] <roc>
that kind of change requires invasive changes to the layout engine

[12:30:01.0000] <roc>
which don't really serve any useful purpose

[13:03:00.0000] <jgraham>
AryehGregor: I didn't have a better idea but zcorpan's idea is interesting

[13:04:00.0000] <jgraham>
Only seems worth it if there are other cases where it could be used though

[13:27:00.0000] <gsnedders>
I think we want something that goes further than that: something that autogenerates tests for things such as [TreatNullAs=] as well as the property descriptor.

[13:32:00.0000] <jgraham>
Well the logical conclusion is something where you paste a whole idl block in as text and do test_idl() and it runs all the tests for you

[13:32:01.0000] <jgraham>
The question is whether it is useful to have a bit less magic than that and make people write test for different parts of the idl by hand

[13:33:00.0000] <jgraham>
I'm not sure what the sweet spot is between ease of writing tests and ease of understanding the output

[13:33:01.0000] <jgraham>
I guess sone can have both

[13:36:00.0000] <gsnedders>
I think we just want to take a whole IDL block

[13:37:00.0000] <gsnedders>
Optionally with a function that returns an instance of the interface if it doesn't have a zero-argument constructor

[13:40:00.0000] <jgraham>
Why a function?

[13:40:01.0000] <jgraham>
Just pass in an instance

[13:40:02.0000] <jgraham>
Well I gues you might need many instances

[13:45:00.0000] <gsnedders>
jgraham: What does nose actually buy us in the html5lib case?

[13:46:00.0000] <jgraham>
Me not wanted to kill people?

[13:46:01.0000] <jgraham>
Also, more seriously, test generators are ideal for us

[13:47:00.0000] <jgraham>
Since we generate a bunch of tests from a data file it is totally natural to represent that as a single test function being called multiple times from a generator

[13:47:01.0000] <gsnedders>
Eh, they make the tests harder to run (we appear to have almost a thousand errors currently…), and that's only relevant for people changing the test harness code, which is almost nobody.

[13:47:02.0000] <gsnedders>
Optimizing for people editing that code is the wrong optimization.

[13:48:00.0000] <jgraham>
Rather than the crazy thing we did with unittest where we built a class wih test_* methods at runtime

[13:48:01.0000] <jgraham>
I have hated that code more than any other code in the project for some time

[13:49:00.0000] <jgraham>
I agree that if there is a committed partial conversion that's bad and we should finish the conversion

[13:49:01.0000] <gsnedders>
I believe that the default unittest in Ython nowadays can do everythign you need to get rid of that ugliness

[13:54:00.0000] <jgraham>
Show me where. I don't see it

[13:54:01.0000] <jgraham>
It adds test discovery but afaict not generators

[13:54:02.0000] <gsnedders>
"Tests grouped by a TestSuite are always accessed by iteration. Subclasses can lazily provide tests by overriding __iter__()."

[13:56:00.0000] <jgraham>
That will still be ugly

[13:56:01.0000] <jgraham>
We will sill have to create a TestCase for each test at runtime

[13:57:00.0000] <gsnedders>
And creating an object is so much worse than creating a tuple?

[13:57:01.0000] <jgraham>
Basically my problem with UnitTest is that it is a bout an order of magnitude more complex than needed, mostly for the benefit of looking like java

[13:57:02.0000] <paul_irish>
there is clearly a difference between how http://livedom.validator.nu/ and  http://software.hixie.ch/utilities/js/live-dom-viewer/ are acting. is one considered more maintained?

[13:57:03.0000] <jgraham>
Which is not something I aspire to

[13:58:00.0000] <Ms2ger`>
paul_irish, they have different purposes

[13:58:01.0000] <jgraham>
paul_irish: I don't think either are particularly maintained. But the validator.nu one I expect has not been updated recently (it uses a javascript implementation of the parsing algorithm)

[13:58:02.0000] <Ms2ger`>
paul_irish, the former is based on the validator.nu parser, the latter uses your browser

[13:59:00.0000] <jgraham>
gsnedders: The errors that I see have no particular relationship to the test harness I don't think

[13:59:01.0000] <paul_irish>
ah uses a GWT compilation of the parser. cool.

[13:59:02.0000] <gsnedders>
jgraham: Regardless, the output from parser tests of unittest was a lot more usable than what we get now from nose, and that's far more important

[14:00:00.0000] <jgraham>
I disagree. nose's output is better

[14:01:00.0000] <gsnedders>
jgraham: With unittest we got far more readable identifiers for testse.

[14:04:00.0000] <gsnedders>
Also I can't get nose usefully working with pdb at all :\

[14:05:00.0000] <gsnedders>
It puts me into pdb in a totally different place to the stack it gives me at the end, useful.

[14:07:00.0000] <gsnedders>
Ergh, we're breaking relying upon non-documented behaviour.

[14:08:00.0000] <annevk>
roc: hey, I want to go to bed, but the background works poorly because there's no color, and if you have a background set already it gets thrown away because of the current style rules; we could make background:black apply at the normal UA style sheet level of course

[14:09:00.0000] <annevk>
roc: your description of stacking I didn't get because all the elements on a stack would be in the document

[14:09:01.0000] <annevk>
roc: because the stack is document bound

[14:15:00.0000] <gsnedders>
jgraham: Bloody hell html5lib is broken from a testsuite POV…

[14:15:01.0000] <gsnedders>
And yes, I am bitchy about this.

[14:16:00.0000] <gsnedders>
Because every time I want to hack on html5lib I invariably spend the vast majority of my time fixing regressions that others ahve introduced and would ahve found if they had run the testseuite.

[14:16:01.0000] <gsnedders>
s/ahve/have/g

[14:20:00.0000] <jgraham>
gsnedders: Just as well it is as easy as typing nosetests now then

[14:20:01.0000] <jgraham>
I just fixed most of the error

[14:20:02.0000] <gsnedders>
jgraham: No, it's as easy as installing nosetests and running it compared with just running runtests.py

[14:22:00.0000] <gsnedders>
jgraham: And you did it a lot quicker than I did.

[14:22:01.0000] <jgraham>
If you aren't already using pip + virtualenv you have bigger problems

[14:23:00.0000] <gsnedders>
jgraham: It's still an extra step.

[14:24:00.0000] <Philip`>
/me has never used either pip or virtualenv, and wouldn't know where to start

[14:24:01.0000] <gsnedders>
Philip`: Obviously you have bigger problems then

[14:24:02.0000] <Philip`>
I have many problems

[14:26:00.0000] <jgraham>
I bet in practice you would start with google

[14:26:01.0000] <Ms2ger`>
And bugs you need to get to

[14:26:02.0000] <jgraham>
10 errors/8 fails

[14:27:00.0000] <gsnedders>
jgraham: Le sigh, now I have a merge conflict from both of us fixing one bug.

[14:28:00.0000] <gsnedders>
/me wonders how to get his repo back to the correct state

[14:29:00.0000] <jgraham>
Given the size of the bugs it can't have been more than one line

[14:29:01.0000] <jgraham>
Unless it was in test_sanitizer

[14:29:02.0000] <jgraham>
In which case you want my copy

[14:29:03.0000] <gsnedders>
It was etree, because I wrote a far longer commit message :P

[14:29:04.0000] <gsnedders>
And now I have two additional merges, and an extra fix.

[14:30:00.0000] <gsnedders>
Why does hg have to be so hard to use!?

[14:31:00.0000] <jgraham>
It's not, it's just git brain damage

[14:31:01.0000] <jgraham>
I get the same

[14:31:02.0000] <gsnedders>
Oh, no, now you've fixed the one issue I fixed while I was fighting merges…

[14:31:03.0000] <gsnedders>
jgraham: How do I find out what a push would push with hg?

[14:31:04.0000] <gsnedders>
How do I revert to the remote head?

[14:31:05.0000] <gsnedders>
I can't find any easy way to do either.

[14:32:00.0000] <jgraham>
hg outgoing shows what you would push

[14:32:01.0000] <gsnedders>
jgraham: Nice of them to mention that in the hg push documentation.

[14:32:02.0000] <jgraham>
and hg update -r {revision} for the other thing

[14:33:00.0000] <jgraham>
Dunno if there is an equivalent of origin/master

[14:33:01.0000] <gsnedders>
jgraham: That doesn't work.

[14:33:02.0000] <gsnedders>
Because it's a parent of the revision I'm currently on.

[14:34:00.0000] <gsnedders>
I can't actually get it back. WTF?

[14:34:01.0000] <jgraham>
I don't understand what you mean, but maybe --clean

[14:34:02.0000] <gsnedders>
hg up -r e46af3a0f549 is a no-op.

[14:34:03.0000] <gsnedders>
--clean doesn't help

[14:35:00.0000] <jgraham>
And  help

[14:35:01.0000] <jgraham>
That's not what I was aiming for

[14:36:00.0000] <jgraham>
And e46af3a0f549 isn't your local HEAD?

[14:36:01.0000] <gsnedders>
No, that's the merge of my fix for your last two commits and your last two commits.

[14:37:00.0000] <gsnedders>
And I don't really want to push four commits that in total change zero lines of code.

[14:37:01.0000] <gsnedders>
Because that's just fucking stupid.

[14:38:00.0000] <jgraham>
Enable the mq extension and hg strip them away?

[14:38:01.0000] <jgraham>
(note: may be dangerous)

[14:38:02.0000] <gsnedders>
Bloody hell, how can this be so hard in hg?

[14:38:03.0000] <jgraham>
Well I don't really understand what you have done so it is hard to help

[14:40:00.0000] <gsnedders>
my head is a commit which merges two heads — one is the current remote in the remote repo, one is an identical fix for the same bug which is local.

[14:42:00.0000] <jgraham>
The documentation claims that hg update -C -r works

[14:42:01.0000] <gsnedders>
Bullshit.

[14:42:02.0000] <gsnedders>
gsnedders@vanveen:~/Documents/my-projects/OSS/html5lib/python/html5lib/tests$ hg up -C -r e46af3a0f549

[14:42:03.0000] <gsnedders>
0 files updated, 0 files merged, 0 files removed, 0 files unresolved

[14:43:00.0000] <gsnedders>
gsnedders@vanveen:~/Documents/my-projects/OSS/html5lib/python/html5lib/tests$ hg log --limit 1

[14:43:01.0000] <gsnedders>
changeset:   1738:82a5ce2a85a4

[14:44:00.0000] <gsnedders>
http://www.markhneedham.com/blog/2010/04/15/hg-reverting-committed-changes/ claims I have to clone the whole repo to do it.

[14:44:01.0000] <gsnedders>
Wow.

[14:45:00.0000] <gsnedders>
Okay, so now I've spent the past twenty minutes trying to push fixes that you managed to push because I was fighting hg, onwards!

[14:45:01.0000] <jgraham>
You really don't *need* to

[14:47:00.0000] <jgraham>
Rule 1 of the internet is "don't believe blogs that are written by people who don't understand what they are doing and mainly sourced from 'facts' cobbled together on twitter"

[14:48:00.0000] <gsnedders>
Well, it was the best documentation I could find!

[14:48:01.0000] <jgraham>
Even the first comment is better documentation than the post!

[14:50:00.0000] <jgraham>
http://stackoverflow.com/questions/5833616/mercurial-getting-out-of-a-bad-merge

[14:50:01.0000] <gsnedders>
And how do I run nose under Python 3?

[14:50:02.0000] <gsnedders>
Unless I have two separate html5lib clones running in different virtualenvs…

[14:52:00.0000] <gsnedders>
Just, wow. nose is *really* simplifying stuff.

[14:53:00.0000] <jgraham>
Huh?

[14:54:00.0000] <AryehGregor>
jgraham, gsnedders, zcorpan: yeah, what we ideally want is something that parses a WebIDL block and generates a whole bunch of tests.  But some things will still need to be tested manually, e.g., argument type conversion -- there's no way in general to figure out whether the arguments were converted correctly, or whether it's even safe to call the function with those arguments in the first place.

[14:54:01.0000] <jgraham>
Well yeah I guess any use of python 3 will require a different interpreter + set of libs

[14:54:02.0000] <AryehGregor>
Still, we could do a whole lot based on the IDL block.

[14:54:03.0000] <JonathanNeal>
What do you think if i use data-* attributes in places where I used to use class=.  These data- attribute names have more semantic meaning to the document than just presentation. eg <table data-meta> for tabular data that serves as the meta or abstract of the document.

[14:55:00.0000] <jgraham>
AryehGregor: Sounds like I have a project :)

[14:55:01.0000] <jgraham>
/me will now sleep

[14:56:00.0000] <gsnedders>
jgraham: There's no simple way to get tests running under Python 3 and Python 2 without a lot of work using Nose.

[14:56:01.0000] <gsnedders>
Without nose it was trivial.

[15:10:00.0000] <gsnedders>
I'm confused as to what has happened to history as a result of that merge.

[15:10:01.0000] <gsnedders>
Like, it looked fine locally, but now I'm just confused.

[15:12:00.0000] <Philip`>
Try "hg view" to visualise the repository, maybe?

[15:14:00.0000] <timeless>
/me isn't familiar w/ hg view

[15:15:00.0000] <Philip`>
If you're familiar with gitk, it's that

[15:15:01.0000] <gsnedders>
That makes it look a heckuva lot cleaner than Google Code does.

[15:16:00.0000] <timeless>
/me tends to use hg glog


2011-11-15
[16:08:00.0000] <eric_carlson>
Hixie: ping?

[17:37:00.0000] <JonathanNeal>
Why does <address> only scope to <article> but not other sectioning content? http://www.whatwg.org/specs/web-apps/current-work/multipage/sections.html#the-address-element

[20:02:00.0000] <Hixie>
eric_carlson: here

[20:43:00.0000] <eric_carlson>
Hixie: if <track>.kind is changed from a known to an unknown value, what should <track>.track.kind return?

[20:43:01.0000] <Hixie>
same as if it started with an unknown value, i hope

[20:43:02.0000] <Hixie>
but let me check what the spec says

[20:56:00.0000] <eric_carlson>
Hixie: that is what I assumed logically, but I wasn't sure from the spec text

[21:13:00.0000] <Hixie>
eric_carlson: so it looks like "text track kind" is defined from the current attribute value here: http://www.whatwg.org/specs/web-apps/current-work/#sourcing-out-of-band-text-tracks

[21:14:00.0000] <Hixie>
eric_carlson: and track.kind is defined in terms of "text track kind" here: http://www.whatwg.org/specs/web-apps/current-work/#dom-texttrack-kind

[21:15:00.0000] <Hixie>
eric_carlson: so yeah, whenever the content attribute is invalid or missing, the DOM attribute will return "subtitles"

[21:15:01.0000] <eric_carlson>
Hixie: great, thanks for the confirmation!

[21:15:02.0000] <Hixie>
np

[00:47:00.0000] <hsivonen>
does yandex.ru offer @yandex.ru email to its users like @yahoo.com emails are user emails?

[00:48:00.0000] <hsivonen>
unlike @google.com emails

[00:53:00.0000] <Philip`>
hsivonen: http://translate.google.com/translate?hl=en&sl=auto&tl=en&u=http%3A%2F%2Fpassport.yandex.ru%2Fpassport%3Fmode%3Dregister - "Usename: [    ] @ Yandex.ru" - looks like it

[00:56:00.0000] <hsivonen>
Philip`: ok. thanks

[01:01:00.0000] <hsivonen>
hmm. Roy T. Fielding is the editor of the W3C DNT spec: http://www.w3.org/TR/2011/WD-tracking-dnt-20111114/

[01:01:01.0000] <hsivonen>
I'm a bit surprised. I had no idea he worked on that stuff.

[01:01:02.0000] <Dashiva>
I know why it's called DNT, but "Tracking Preference Expression (DNT)" still looks silly

[01:03:00.0000] <hsivonen>
hmm. the IDL isn't [Supplemental]

[01:04:00.0000] <Philip`>
Dashiva: Doesn't seem much sillier than the European Organization for Nuclear Research (CERN)

[01:04:01.0000] <hsivonen>
might be a good idea for someone who knows WebIDL better than I do to check the implements/supplements situation of the DNT spec

[01:05:00.0000] <hsivonen>
Philip`: or UTC

[01:06:00.0000] <hsivonen>
while I realize there's the UTx pattern, UTC looks like a compromise between English and French by choosing a permutation that makes sense for neither

[01:17:00.0000] <heycam>
hsivonen, I think what's there works

[01:18:00.0000] <heycam>
hsivonen, though I think people prefer the shorter "partial interface Navigator { ... }" these days

[01:23:00.0000] <Ms2ger>
Yeah

[01:23:01.0000] <Ms2ger>
That's a respecism, I think

[01:24:00.0000] <hsivonen>
ok

[02:46:00.0000] <annevk>
oh yes SSID strings just gained meaning

[02:47:00.0000] <annevk>
http://googleblog.blogspot.com/2011/11/greater-choice-for-wireless-access.html

[03:01:00.0000] <Philip`>
Using "ends with _nomap" as a flag doesn't sound the most highly scalable solution when someone else in the world invents a second SSID flag

[03:05:00.0000] <hsivonen>
Philip`: they'll just have to accept that their flag might not be the last one

[03:05:01.0000] <hsivonen>
I wonder what font rasterizer the Google Docs PDF reader uses

[03:05:02.0000] <annevk>
there's a maximum length of 32 characters

[03:06:00.0000] <annevk>
it's gonna be fun if there's more flags

[03:06:01.0000] <hsivonen>
the rasterizer manages to produce the kind of ugliness that's familiar to Windows users, but surely Google isn't running that stuff on Windows

[03:06:02.0000] <annevk>
is naming your SSID "_nomap" sufficient?

[03:07:00.0000] <hsivonen>
what's the deal with people freaking out about SSID-based mapping anyway?

[03:07:01.0000] <hsivonen>
what's the model of threat to privacy?

[03:09:00.0000] <krijn>
TabAtkins: okay if we publish your #fronteers11 video this week?

[03:10:00.0000] <hsivonen>
krijn: btw, I occasionally see an old snapshot of http://krijnhoetmer.nl/irc-logs/ in Opera Mini. Did you change caching headers? Did Opera make their caching over-aggressive? What has happened?

[03:11:00.0000] <krijn>
Old as in a day old?

[03:11:01.0000] <hsivonen>
krijn: yes

[03:12:00.0000] <Philip`>
hsivonen: You might move to live in a secret new location to evade a stalker/criminal/etc, but would take your wireless router with you, and the stalker/etc could later query Google's access point database to figure out where you are now living

[03:12:01.0000] <krijn>
hsivonen: that cache is only updated once a day

[03:12:02.0000] <krijn>
I think

[03:13:00.0000] <hsivonen>
krijn: ok. it's annoying not to find the link to the latest log there from time to time

[03:13:01.0000] <hsivonen>
Philip`: ok. that's a reasonable use case

[03:14:00.0000] <Philip`>
Or you might carry an access point around with you (as an ad-hoc network or 3G-wifi-bridge thing) and people could discover where you had been in the past

[03:15:00.0000] <hsivonen>
Philip`: that's a reasonable use case, too

[03:16:00.0000] <Philip`>
Or you might just be paranoid and hate Google

[03:16:01.0000] <krijn>
hsivonen: it should update around 00:15 CET each day

[03:17:00.0000] <krijn>
Ah, I see, yeah, if there's no activity in a channel in those 15 minutes, the log isn't created yet

[03:29:00.0000] <hsivonen>
krijn: can that be fixed easily?

[03:29:01.0000] <annevk>
hsivonen: you should bookmark /irc-logs/whatwg

[03:29:02.0000] <annevk>
it redirects to the latest

[03:29:03.0000] <krijn>
What annevk said

[03:29:04.0000] <hsivonen>
annevk: I suppose. Back when I set up my Speed Dial, I expected to read #html-wg logs, too, but there's nothing interesting there typically

[03:30:00.0000] <hsivonen>
krijn: it would be nice to have a link from the log page to the previous log, too

[03:31:00.0000] <Ms2ger>
annevk, well, that only works if you stay up past midnight

[03:32:00.0000] <krijn>
hsivonen: yeah, I should build that some day.. Even though the archive is static now

[03:34:00.0000] <hsivonen>
I updated my Speed Dial using a device with better bookmark management ergonomics. Let's see how long it takes for change to propagate to Opera Mini on the legacy phone

[03:46:00.0000] <gwicke>
hello, I am trying to find or generate a stand-alone Javascript version of the HTML parser at validator.nu

[03:46:01.0000] <gwicke>
tried GWT, but did not find any up-to-date pointers on the build process

[03:47:00.0000] <gwicke>
ideally, I am looking for something less obscured than the GWT-generated one at livedom.validator.nu

[03:47:01.0000] <annevk>
gwicke: http://www.davidflanagan.com/2011/10/html-parsing-wi.html

[03:48:00.0000] <gwicke>
annevk: thanks!! reading..

[03:49:00.0000] <hsivonen>
gwicke: you need to adapt the HtmlParser-compile-detailed script or the HtmlParser-compile-detailed.launch Eclipse launch setup to the path on your system and the details of your GWT version

[03:50:00.0000] <gwicke>
hsivonen: I did not see those in the tarball

[03:50:01.0000] <hsivonen>
gwicke: it's in the hg repo

[03:51:00.0000] <gwicke>
oh- only found an old svn one so far

[03:51:01.0000] <hsivonen>
https://hg.mozilla.org/projects/htmlparser/

[03:52:00.0000] <hsivonen>
gwicke: where was the link to the old svn repo?

[03:52:01.0000] <gwicke>
http://wiki.whatwg.org/wiki/Validator.nu_parser

[03:53:00.0000] <gwicke>
hsivonen: and thanks for the hg location! Did not find it at http://about.validator.nu/htmlparser/

[04:00:00.0000] <hsivonen>
gwicke: thanks. I fixed both pages

[04:02:00.0000] <hsivonen>
mattur's email archeology is awesome: https://twitter.com/#!/mattur/status/136411627695251456

[04:02:01.0000] <gwicke>
hsivonen: it looks like David's parser might be better for my needs, but if I succeed in generating the JS through GWT I'll send you a script that is adapted to Debian

[04:02:02.0000] <hsivonen>
gwicke: ok

[04:03:00.0000] <hsivonen>
I feel that I now have to try the optimizations that David didn't try before he proceeded with a new implementation

[04:03:01.0000] <annevk>
hsivonen: RT'd that from @WHATWG :)

[04:03:02.0000] <hsivonen>
annevk: good

[04:08:00.0000] <annevk>
hmm

[04:08:01.0000] <annevk>
merging fullscreen and dialog

[04:08:02.0000] <annevk>
for styling anyway

[04:08:03.0000] <annevk>
yikes

[04:09:00.0000] <hsivonen>
annevk: unintended turn of events!

[04:10:00.0000] <hsivonen>
annevk: but it does make sense

[04:11:00.0000] <annevk>
does seem like there's plenty of overlap

[04:11:01.0000] <annevk>
at least for modal dialogs and fullscreen

[04:12:00.0000] <hsivonen>
annevk: foresee politics about modal dialogs being an HTML WG issues fullscreen having been discussed in the WHATWG

[04:14:00.0000] <hsivonen>
it's awesome how crufty the output is default sample document in http://buzzword.org.uk/2010/md2rdfa/

[04:17:00.0000] <Ms2ger>
annevk: foresee politics

[04:17:01.0000] <Ms2ger>
ftfy

[04:18:00.0000] <gwicke>
hsivonen: I get a lot of messages about annotations not resolving, like java.lang.ClassNotFoundException: nu.validator.htmlparser.annotation.Virtual

[04:18:01.0000] <gwicke>
but it still seems to work

[04:18:02.0000] <hsivonen>
gwicke: yeah

[04:18:03.0000] <gwicke>
;)

[04:18:04.0000] <hsivonen>
gwicke: I don't know why the GWT compiler fails to find those

[04:19:00.0000] <gwicke>
I am not of much help on Java or GWT unfortunately

[04:22:00.0000] <gwicke>
I added a wildcard classpath (/usr/share/java/*) to make it work, not sure if that is considered good form

[04:23:00.0000] <hsivonen>
gwicke: make it work in what sense?

[04:24:00.0000] <gwicke>
to make it find the classes it needs

[04:24:01.0000] <hsivonen>
gwicke: and the compilation result worked?

[04:24:02.0000] <gwicke>
libcommons-collections3 and the gwt classes

[04:24:03.0000] <gwicke>
yes

[04:24:04.0000] <hsivonen>
gwicke: interesting

[04:24:05.0000] <gwicke>
will get you a link to pastebin in a moment

[04:25:00.0000] <gwicke>
http://pastebin.com/rn1csAcq

[04:25:01.0000] <hsivonen>
there's supposed to be enough stuff under super/ to cover for JDK classes that aren't in GWT

[04:26:00.0000] <hsivonen>
gwicke: ok. if you include /usr/share/java, distributing the compilation result might violate the license of your JDK impl. YMMV. IANAL.

[04:27:00.0000] <gwicke>
hrm..

[04:27:01.0000] <gwicke>
can try to narrow it down

[04:33:00.0000] <gwicke>
getting java.lang.NoClassDefFoundError: org/apache/tools/ant/types/ZipScanner

[04:37:00.0000] <gwicke>
This works without wildcard on Debian unstable: http://pastebin.com/p6bMjmpP

[04:51:00.0000] <hsivonen>
gwicke: hmm. that must be requirement for the GWT compiler itself

[04:53:00.0000] <gwicke>
might be- I am not using the prescribed build setup for GWT, which might include additional paths. The gwt packages only list the jre as dependencies.

[04:56:00.0000] <hsivonen>
gwicke: I might goofed when I included GWT compiler input in -cp

[04:56:01.0000] <hsivonen>
might have goofed

[04:56:02.0000] <hsivonen>
interesting developments around schema.org: http://lists.w3.org/Archives/Public/public-html-data-tf/2011Nov/0117.html

[05:01:00.0000] <gwicke>
hsivonen: if you mean the $APPDIR/* bits, then those seem to be needed

[05:01:01.0000] <gwicke>
at least it fails to compile if I remove them

[05:05:00.0000] <hsivonen>
gwicke: there might be some other way to pass those to the compiler only so that the VM running the compiler doesn't see them

[05:06:00.0000] <gwicke>
ok, will let you know if I find something

[05:55:00.0000] <Ms2ger>
Btw, Opera guys: not nice that you didn't include a -moz-double-rainbow line

[05:56:00.0000] <miketaylr>
/me files a bug

[05:57:00.0000] <zcorpan>
we can't know what syntax you're using if it's not supported yet

[05:58:00.0000] <hsivonen>
do I recall correctly that -webkit-border-radius matched what got standardized?

[06:03:00.0000] <annevk>
Ms2ger: doesn't matter, we did it first

[06:03:01.0000] <hsivonen>
/me is about to publish a blog post about that

[06:03:02.0000] <Ms2ger>
annevk++

[06:03:03.0000] <annevk>
/me thought we were going to keep it a secret easter egg

[06:03:04.0000] <hsivonen>
prefixes--

[06:04:00.0000] <annevk>
hsivonen: I think what got standardized was something I made up that matched exactly nobody

[06:04:01.0000] <Ms2ger>
annevk, blame karlcow

[06:04:02.0000] <hsivonen>
annevk: ok

[06:04:03.0000] <annevk>
I made something up, refined by fantasai, that allowed you to set all longhands using just border-radius

[06:04:04.0000] <annevk>
nobody had that

[06:16:00.0000] <karlcow>
/me is waiting for a disco-ball extension with rotation speed and shyniness

[06:31:00.0000] <hsivonen>
I blogged about vendor prefixes: http://hsivonen.iki.fi/vendor-prefixes/

[06:34:00.0000] <annevk>
karlcow: fyi, Mozilla is implementing the same API

[06:34:01.0000] <annevk>
karlcow: I think the mutation stuff is quite settled now

[06:41:00.0000] <karlcow>
annevk: context? same API?

[06:43:00.0000] <astearns>
hsivonen: "I think browser vendors should adding more prefixed CSS features" needs a word

[06:45:00.0000] <jgraham>
"burn in hell for" is four words

[06:45:01.0000] <jgraham>
</joke>

[06:45:02.0000] <hsivonen>
astearns: thanks. fixed

[06:46:00.0000] <karlcow>
"The situation is harmful for Firefox for mobile, Opera Mobile and IE on Windows Phone. Yet, Mozilla, Opera and Microsoft are going along with the prefixing scheme. At one point, Microsoft planned to implement a -webkit-CSS feature for IE on Windows Phone, but people out of principle told them not to and they backed down."

[06:46:01.0000] <karlcow>
I think we should all implement in our engines a -*- and been done with it. and let the mess happens

[06:48:00.0000] <annevk>
karlcow: DOM mutations

[06:49:00.0000] <karlcow>
Aaaaaah

[06:49:01.0000] <karlcow>
in "The specification contains currently a placeholder on how Mutation Events are implemented in Chrome but this is likely to change again."

[06:49:02.0000] <karlcow>
ok fixing

[06:51:00.0000] <karlcow>
thanks annevk

[06:59:00.0000] <jgraham>
hsivonen: "experimetal"

[07:02:00.0000] <jgraham>
hsivonen: But generally very nice article

[07:08:00.0000] <gsnedders>
hsivonen: You are aware we support one -apple- feature relating to widgets?

[07:10:00.0000] <hsivonen>
gsnedders: no, not aware until now

[07:10:01.0000] <gsnedders>
-apple-dashboard-region

[07:11:00.0000] <gsnedders>
http://lists.w3.org/Archives/Public/www-archive/2011Mar/att-0007/css_properties.txt was current

[07:13:00.0000] <gsnedders>
Note also -xv- (XHTML Voice) and -wap- (WAP).

[07:23:00.0000] <gsnedders>
Also interesting is that Apple are shipping Speex in iOS now. Though the audio side has never been that interesting, given the number of major companies already shipping Vorbis.

[07:27:00.0000] <zewt>
wow, ff8's addon thing on update is 10x clunkier now

[07:30:00.0000] <jgraham>
zewt: ?

[07:30:01.0000] <zewt>
much less streamlined than it used to be

[07:31:00.0000] <jgraham>
Maybe I don't actually have any addons in my firefox installs but I don't remember noticing that they regressed the UI

[07:31:01.0000] <zewt>
extension state list made me go woah-way-too-much-info, so i'd expect typical users to give up and just mash "ok"

[07:37:00.0000] <zewt>
heh err

[07:37:01.0000] <zewt>
ff8: BlobBuilder now has a getFile() method that returns the content of the blob as a file.

[07:37:02.0000] <zewt>
... why?

[07:38:00.0000] <zewt>
guess i should bring that up in the blob ctor thread (probably implies a File ctor too)

[07:46:00.0000] <Ms2ger>
karlcow, X-Forwaded-For?

[07:53:00.0000] <karlcow>
Ms2ger: I typoed?

[07:53:01.0000] <Ms2ger>
Yep

[07:53:02.0000] <karlcow>
ah

[07:53:03.0000] <karlcow>
ForwaRded

[07:53:04.0000] <karlcow>
heh

[07:53:05.0000] <karlcow>
fixing

[07:53:06.0000] <Ms2ger>
Ta

[07:56:00.0000] <karlcow>
ok in the process of being published again.

[07:56:01.0000] <karlcow>
Thanks Ms2ger

[08:02:00.0000] <annevk>
so did Mozilla ship BlobBuilder prefixed?

[08:02:01.0000] <annevk>
/me hides

[08:02:02.0000] <Ms2ger>
We may have

[08:03:00.0000] <Ms2ger>
annevk, we did

[08:03:01.0000] <JonathanNeal>
good morning :)

[08:04:00.0000] <annevk>
Ms2ger: prolly a good thing :)

[08:04:01.0000] <annevk>
/me will read hsivonen's post later; hopes there's new words

[08:07:00.0000] <zcorpan>
i'm glad css prefixes didn't end up using namespace URLs at least

[08:07:01.0000] <JonathanNeal>
I like vendor prefixes, they helped get us this far.

[08:08:00.0000] <JonathanNeal>
we couldn't have done it waiting around for the spec, the web exists in a state of experiment, but none of that will matter in two years when most browsers update themselves.

[08:08:01.0000] <jgraham>
JonathanNeal: Everyone loves nothing working on non-webkit mobile browsers

[08:09:00.0000] <JonathanNeal>
that's the real complaint, isn't it.

[08:09:01.0000] <jgraham>
Well partially yes

[08:09:02.0000] <Ms2ger>
/me hasn't been convinced that implementing webkit's prefixed junk is the right solution

[08:10:00.0000] <gsnedders>
JonathanNeal: We have enough problems on desktop too

[08:10:01.0000] <jgraham>
But the underlying issue is that "best viewed in X browser" wasn't good when it was spelled out on the homepage

[08:10:02.0000] <jgraham>
It isn't better because it is buried in the CSS

[08:10:03.0000] <JonathanNeal>
http://css3please.com/ - afaik it has had linear-gradient sitting there.

[08:11:00.0000] <JonathanNeal>
So anyone using this service, not modifying the code, has just been waiting for other browsers to catch up to what seems to be the standard.

[08:11:01.0000] <JonathanNeal>
in the meantime, they're benefit from the browsers that do support the feature.

[08:12:00.0000] <JonathanNeal>
why is benefiting from the early adoption of a browser a bad thing? if the other browsers can't keep up, that seems less webkit's fault and less the author's fault. there was a time a lot of us rolled our eyes because opera had yet to add gradients.

[08:13:00.0000] <zcorpan>
JonathanNeal: did you read the blog post?

[08:13:01.0000] <JonathanNeal>
the entire thing

[08:14:00.0000] <jgraham>
JonathanNeal: The point is not to make people wait

[08:14:01.0000] <zcorpan>
the problem is with people using only -webkit- and then not updating their pages, then when other browsers implement the feature, it still doesn't work in existing content that uses a single prefix

[08:14:02.0000] <JonathanNeal>
yea, but i agree with the first counter argument at least.

[08:14:03.0000] <jgraham>
The point is to solidify around what people ship rather than having a harmful committee-driven Process

[08:16:00.0000] <JonathanNeal>
hmm, i thought whatwg proved you could work around the harmful committee-driven process.

[08:16:01.0000] <Philip`>
Experimental features should have timebomb prefixes, like "-moz-expires20120515-foo" which will stop working in Mozilla browsers after the given date, to force authors to update their pages to the standard which should have been released by that time

[08:18:00.0000] <Ms2ger>
Philip`, yeah, it's called -moz-

[08:18:01.0000] <jgraham>
Someone suggested making any use of experimental features add a red norification bar to the page

[08:18:02.0000] <jgraham>
I can't see Google going for it though

[08:20:00.0000] <Philip`>
Ms2ger: That doesn't make it clear to authors that it'll stop working in the near future, so they'll complain if it ever gets removed, so it'll probably never get removed

[08:21:00.0000] <Ms2ger>
That doesn't follow

[08:21:01.0000] <JonathanNeal>
i'm also not crazy about the original webkit gradient implementation.

[08:22:00.0000] <Ms2ger>
AFAIK, Mozilla has removed support for all the prefixed stuff some time after implementing the unprefixed version

[08:22:01.0000] <JonathanNeal>
it's really up to the vendors to remove their own prefixes.

[08:23:00.0000] <JonathanNeal>
including webkit

[08:23:01.0000] <Ms2ger>
Well, relying on webkit to do what's good for the web...

[08:23:02.0000] <JonathanNeal>
it really seems like folks are upset webkit is doing so much and it is being adopted so widely.

[08:24:00.0000] <gsnedders>
I don't think people mind WebKit doing so much: it's when you get so many websites including only webkit prefixes that it hurts other browsers.

[08:25:00.0000] <gsnedders>
Heck, it's still fairly painful for Opera with border-radius which we've been shipping for years, lots of new content only include -webkit- and -moz- prefixes.

[08:25:01.0000] <JonathanNeal>
so, we're not blaming webkit for that, right?

[08:25:02.0000] <Philip`>
People got upset when Microsoft was doing so much (e.g. ActiveX, and DX filters in CSS, and expression(), etc, which wouldn't really work with any other browser implementation) and it got adopted somewhat widely

[08:25:03.0000] <JonathanNeal>
gsnedders: that surprises me, because authors should prefer to use the prefixless border-radius.

[08:26:00.0000] <miketaylr>
but they don't

[08:26:01.0000] <gsnedders>
I don't think there's really that much blame  directed at WebKit.

[08:26:02.0000] <gsnedders>
JonathanNeal: They don't. Most articles on the web talk only about -webkit- and -moz-.

[08:26:03.0000] <Philip`>
JonathanNeal: I imagine authors use whatever they read in the blog post written about the features in 2006 and not updated since

[08:26:04.0000] <JonathanNeal>
Philip`: the other browsers came up with a better way to do it, didn't they?

[08:26:05.0000] <miketaylr>
/me had an issue yesterday with orkut.com with only -moz-border-radius and -webkit-border-radius

[08:26:06.0000] <JonathanNeal>
also, isn't webkits code open, anyone can see how they do it, very unlike ms

[08:27:00.0000] <gsnedders>
JonathanNeal: Just having the source doesn't mean you can instantly dive in and understand it.

[08:27:01.0000] <miketaylr>
how does having access to source code help me have a less crappy experience on mobile gmail?

[08:27:02.0000] <JonathanNeal>
well, the worst thing i see happening that could be the browsers fault is not dumping the old prefixes.

[08:27:03.0000] <gsnedders>
Heck, even with open source products most people just black-box reverse engineer them. It tends to be quicker.

[08:28:00.0000] <gsnedders>
JonathanNeal: And they're not going to dump them when huge amounts of content rely upon them.

[08:29:00.0000] <JonathanNeal>
so your solution is to allow old implementations to exist on the web

[08:29:01.0000] <JonathanNeal>
but vendor-prefix-less?

[08:30:00.0000] <gsnedders>
JonathanNeal: I never gave a solution.

[08:30:01.0000] <jgraham>
There are two situations

[08:30:02.0000] <jgraham>
a) there is not enough content to have any compat implication

[08:30:03.0000] <Ms2ger>
Philip`, please do reply to http://www.w3.org/Bugs/Public/show_bug.cgi?id=14421 :)

[08:30:04.0000] <jgraham>
b) there is enough content to have a compat implication

[08:31:00.0000] <jgraham>
In case a) there  is no problem

[08:31:01.0000] <JonathanNeal>
what is enough content?

[08:31:02.0000] <jgraham>
In case b) we currently have the situation where that content will typically remain broken in non-first0implementor browsers forever

[08:31:03.0000] <zewt>
for one thing, you can't talk about css vendor prefixes and javascript vendor prefixes together--they're separate beasts and the practical annoyance is very different

[08:31:04.0000] <Philip`>
Ms2ger: Maybe you should remind me in a morning (UTC), then I might avoid other distractions and spend the day dealing with my backlog of canvas things :-)

[08:32:00.0000] <gsnedders>
Did someone not have a blog-post recently about breaking the web?

[08:32:01.0000] <zewt>
(you can easily wrap it away in the JS case, eliminating a large portion of the annoyance)

[08:32:02.0000] <Ms2ger>
Philip`, that would involve me getting up early, no?

[08:32:03.0000] <jgraham>
The alternative for case b) is to work out how to evolve the API whilst allowing other browsers to render the legacy content

[08:32:04.0000] <Philip`>
Ms2ger: Or going to bed later than me, so I'll see it when I wake up

[08:33:00.0000] <Philip`>
I suppose I could always try to be less disorganised with my life, but that sounds like hard work

[08:33:01.0000] <zewt>
well, of course early implementations should never have no prefix--whether it's a vendor prefix or a generic one

[08:33:02.0000] <JonathanNeal>
jgraham: you could give users the ability to read the other prefixes

[08:33:03.0000] <Ms2ger>
Heh

[08:33:04.0000] <JonathanNeal>
you could have a switch "drop vendor prefixes"

[08:33:05.0000] <JonathanNeal>
or authors, rather.

[08:33:06.0000] <JonathanNeal>
in their css

[08:33:07.0000] <jgraham>
JonathanNeal: I don't understand what that would help with

[08:33:08.0000] <tantek>
good morning, I'm at the W3Conf in Seattle/Redmond. Any other whatwg'ers here?

[08:34:00.0000] <JonathanNeal>
jgraham: with the switch on, browsers are allowed to read other vendor prefixed css

[08:34:01.0000] <jgraham>
Why would we want to let *authors* choose?

[08:34:02.0000] <miketaylr>
when would a user not want that on?

[08:34:03.0000] <jgraham>
The whole point is that authors can't be trusted with prefixes

[08:35:00.0000] <tantek>
channel is irc://irc.w3.org:6665/w3conf

[08:35:01.0000] <jgraham>
Because they never fulfil the "don't use this for stuff you don't mind breaking or promise to keep up to date forever" part of the contract

[08:35:02.0000] <JonathanNeal>
jgraham: well, then let browsers read everybody's prefixes.

[08:35:03.0000] <JonathanNeal>
i don't see harm in that either

[08:35:04.0000] <jgraham>
OK

[08:35:05.0000] <JonathanNeal>
but i wouldn't drop the prefixes.

[08:35:06.0000] <jgraham>
Then why not s/-whatever-//

[08:36:00.0000] <jgraham>
if browsers can read them all anyway

[08:36:01.0000] <JonathanNeal>
jgraham: they don't read them all anyway, yet.

[08:36:02.0000] <JonathanNeal>
thus http://lea.verou.me/prefixfree/

[08:38:00.0000] <jgraham>
I know they don't

[08:39:00.0000] <jgraham>
But what is the advantage of everyone reading -webkit-foo compared to dropping the -webkit- part?

[08:39:01.0000] <JonathanNeal>
jgraham: -webkit-gradient(linear, left top, left bottom, from(#444444), to(#999999));

[08:39:02.0000] <JonathanNeal>
versus -webkit-linear-gradient(top, #444444, #999999);

[08:40:00.0000] <JonathanNeal>
even webkit tweaked things, mind you they changed the property name a little, but who's to say a browser should be left to get it right.

[08:41:00.0000] <JonathanNeal>
as features become more complicated, we won't want five versions sitting on the same property value.

[08:41:01.0000] <JonathanNeal>
i'll admit that another argument for vendor prefixing is writing valid non-prefixed code and no one even cares about valid css

[08:42:00.0000] <JonathanNeal>
i throw in *ie hacks all the time anyway

[08:42:01.0000] <JonathanNeal>
the article never mentioned being "valid"

[08:43:00.0000] <jgraham>
JonathanNeal: As far as I can tell what you are proposing would require everyone to support every syntax variation for all eternity

[08:44:00.0000] <dglazkov>
good morning, Whatwg!

[08:44:01.0000] <JonathanNeal>
i'm probing the ideas

[08:44:02.0000] <JonathanNeal>
hopefully not in vain

[08:45:00.0000] <karlcow>
hmm reading the log

[08:45:01.0000] <karlcow>
and enjoying the dated extension

[08:45:02.0000] <karlcow>
-vendor-YYYYMMDD-

[08:45:03.0000] <karlcow>
/me has a big smile :p

[08:47:00.0000] <miketaylr>
/me would screw it up as -vendor-MMDDYYYY-

[08:47:01.0000] <Philip`>
-vendor-YYYY-MM-DD-, then

[08:47:02.0000] <jgraham>
-vendor-I-realise-I-am-a-bad-person-for-doing-this-and-will-probably-have-to-say-hail-Marys-or-something-and-anyway-this-prefix-will-expire-on-26-11-2011-and-hey-youre-using-less-or-sass-and-not-reading-this-arent-you-dammit-

[08:47:03.0000] <miketaylr>
mmm dashes

[08:49:00.0000] <Ms2ger>
Throw in some underscores

[08:49:01.0000] <Philip`>
Then someone will write an article saying "to future-proof your site, you should write <style>#foo { -moz-2012-01-01-foo: ...; -moz-2012-01-02-foo: ...; -moz-2012-01-03-foo: ...; ... }</style>"

[08:49:02.0000] <karlcow>
-vendor-⌚- tick tick

[08:49:03.0000] <Philip`>
so we'd need to put a nonce in there too

[08:51:00.0000] <miketaylr>
http://twitter.com/#!/chriseppstein/status/136485985029603328

[08:51:01.0000] <miketaylr>
heh

[08:53:00.0000] <miketaylr>
of course, if you're going to use a tool to get from foo to vendor-foo anyways, might as well kill vendor-foo

[08:55:00.0000] <tantek>
yeah that's about right

[08:55:01.0000] <tantek>
such tools obscure the risk that web designers are taking that the properties will change (hint: they do)

[08:55:02.0000] <tantek>
so if you use such tools, get ready for your sites to break more often and your clients to get pissed.

[08:56:00.0000] <jgraham>
That argument is isomorphic to "the tools will save us"

[08:56:01.0000] <Ms2ger>
Please describe the isomorphism in detail.

[08:56:02.0000] <JonathanNeal>
 so perhaps browsers should natively do what prefixfree does for them?

[08:57:00.0000] <jgraham>
Ms2ger: Happily this isn't an exam so I can ignore you :)

[08:57:01.0000] <Ms2ger>
:<

[08:57:02.0000] <JonathanNeal>
except i still don't like the idea of having multiple ways of doing the same thing on a single property.

[08:57:03.0000] <jgraham>
(I mean Chris Eppstein's argument in case that wasn't obvious)

[08:58:00.0000] <Philip`>
That "that is a 'the tools will save us' argument" argument seems to rely on an assumption that tools will never save us in any situation and we don't even need to consider the actual situation in hand, which seems less reasonable than merely assuming tools won't save us in every situation and so we ought to examine the specific cases

[08:59:00.0000] <jgraham>
Philip`: Think of it as an attempt to shift the burden of proof

[08:59:01.0000] <JonathanNeal>
at least you're not blaming webkit

[09:00:00.0000] <Ms2ger>
/me blames webkit

[09:00:01.0000] <jgraham>
In this case the burden of proof seems to be firmly with the people claiming that prefixes aren't a problem because tools

[09:00:02.0000] <Ms2ger>
You missed some words there

[09:00:03.0000] <Ms2ger>
Maybe "they are"

[09:00:04.0000] <jgraham>
/me wishes he knew what should be added to "because tools" but twitter

[09:00:05.0000] <JonathanNeal>
miketaylr: as an aside, looking at the kindle stats revealed how much of a not-ipad killer it was going to be.

[09:01:00.0000] <JonathanNeal>
*kindle fire

[09:01:01.0000] <JonathanNeal>
i can't remember if the price or the resolution were lower. :P

[09:02:00.0000] <tantek>
prefixes are for experimentation and implementation/designer feedback. not for production.

[09:02:01.0000] <tantek>
if you depend on prefixed properties for production work, you bear the resulting risk/instability.

[09:02:02.0000] <JonathanNeal>
tantek: so shame on me for using them in production?

[09:02:03.0000] <JonathanNeal>
i thought it's my risk to take..

[09:02:04.0000] <miketaylr>
but in practice, it's the users who take on the risk

[09:02:05.0000] <miketaylr>
the author finishes their site, moves on to the next one

[09:02:06.0000] <JonathanNeal>
what risk?

[09:02:07.0000] <JonathanNeal>
of not getting rounded edges?

[09:03:00.0000] <JonathanNeal>
that's the risk i was taking

[09:03:01.0000] <miketaylr>
layout?

[09:03:02.0000] <JonathanNeal>
the example was used earlier regarding border radius, so the risk is "you might not get rounded edges on this/these boxes".

[09:04:00.0000] <jgraham>
The risk of the site looking crappier or, in some cases not working at all

[09:04:01.0000] <jgraham>
Arguably it is the browser vendor who actually take the risks

[09:04:02.0000] <JonathanNeal>
i think anyone using a prefix inherently knows they are saying "only in"

[09:04:03.0000] <jgraham>
Typically the user can choose to use a different browser

[09:04:04.0000] <zewt>
except welcome to the real world

[09:04:05.0000] <jgraham>
Although of course they may have strong reasons not to

[09:05:00.0000] <JonathanNeal>
so when i wrote "-moz-border-radius" a few years ago, i knew i was only giving that experience to firefox at the time.

[09:05:01.0000] <zewt>
your users didn't

[09:06:00.0000] <tantek>
JonathanNeal - yes - your tradeoff to make, but as an author/designer, you bear the responsibility, not the tools.

[09:06:01.0000] <JonathanNeal>
of course, my IE users never saw them.

[09:06:02.0000] <zewt>
you mean your FF users suddenly saw that they went away after a (theoretical) upgrade changed/removed it

[09:07:00.0000] <JonathanNeal>
zewt: thank goodness we don't live in an era that fears progressive enhancement, otherwise they could have said "no, no border radius in firefox until ie has it"

[09:07:01.0000] <JonathanNeal>
zewt: had i been irresponsible, then yes, they may have lost the rounded edges later.

[09:08:00.0000] <karlcow>
JonathanNeal: simple example with no-damages on user experience do not help to solve the issue we are discussing.

[09:08:01.0000] <zewt>
the advantage of prefixes, as i've always seen them, is that they localize the oddities of that implementation, so other vendors don't have to worry about them, and so the "final" API isn't bound down by them (for some never-actually-existing value of "final", heh)

[09:08:02.0000] <JonathanNeal>
zewt: yes

[09:08:03.0000] <karlcow>
the article from hsivonen was about vendor extension. Period. Be in CSS, DOM, HTTP etc.

[09:08:04.0000] <JonathanNeal>
karlcow: what would you rather discuss? wasn't border-radius a valid example earlier?

[09:09:00.0000] <zewt>
JonathanNeal: this isn't "progressive enhancement", it's progressive deenhancement, where users actively see features going *away* as they upgrade

[09:09:01.0000] <karlcow>
If your site relies heavily on CSS transition for example, it will fall apart in other browsers.

[09:09:02.0000] <karlcow>
border-radius is not a valid example

[09:09:03.0000] <JonathanNeal>
okay so only things that affect the UI

[09:09:04.0000] <JonathanNeal>
eg transitions and transforms?

[09:10:00.0000] <JonathanNeal>
display modes

[09:10:01.0000] <karlcow>
except if the prose in your page says: Click on this button when the box is rounded and you will be credited of 10 dollars

[09:10:02.0000] <karlcow>
if you see what I mean

[09:10:03.0000] <karlcow>
consequences for User experiences

[09:11:00.0000] <JonathanNeal>
well, my users were happy, especially the ones who got the better experience

[09:12:00.0000] <karlcow>
and for one careful designer who will deploy them elegantly, there are thousands more who will not. And the millions of users depend on these thousands.

[09:12:01.0000] <JonathanNeal>
later i added the webkit-border-radius and later i dropped both for border-radius.  but i understand that point is now void as you accept it isn't a problem.

[09:12:02.0000] <zewt>
the main problem i see with prefixes, in practice today, is that most web apis don't gravitate towards something "final" and fixed anymore

[09:12:03.0000] <zewt>
so under traditional prefixing, those apis just stay prefixed permanently, which is silly

[09:12:04.0000] <JonathanNeal>
zewt: or is it that browsers just develop new technologies faster.

[09:13:00.0000] <JonathanNeal>
then form the csswg

[09:13:01.0000] <zewt>
no, it's that most specs aren't aiming towards "finalize everything, set it in stone and head towards REC", they just loop between WD/LC forever (and that's okay)

[09:14:00.0000] <zewt>
so the basic notion of "we'll remove the prefix when it's finalized" breaks down

[09:15:00.0000] <JonathanNeal>
so why won't it finalize?

[09:15:01.0000] <zewt>
it seems to become something more like "we'll remove the prefix when it seems like the API has mostly settled down, even though it's not final", at least for JS APIs (the CSS side I'm not sure)--but that's a lot fuzzier

[09:15:02.0000] <JonathanNeal>
that seems more the css spec writers fault.

[09:17:00.0000] <zewt>
perhaps css specs are more able to be finalized than js APIs; I don't know

[09:18:00.0000] <JonathanNeal>
so now it's not about css vendor prefixes anymore?

[09:18:01.0000] <Ms2ger>
No

[09:19:00.0000] <zewt>
power cycle: go

[09:20:00.0000] <JonathanNeal>
future of the web: go: http://www.hurtownia-kontakt.pl/

[09:21:00.0000] <JonathanNeal>
well, drop the prefixes, it will only make my life easier, i suppose.

[09:21:01.0000] <zewt>
i don't know if the reason css prefixes stick around too long is for similar reasons as with JS APIs.

[09:22:00.0000] <JonathanNeal>
i don't relate the two

[09:22:01.0000] <JonathanNeal>
more people theme than write functionality, and when they write functionality, they rarely step into something vendor prefixes.

[09:22:02.0000] <JonathanNeal>
*prefixed

[09:24:00.0000] <zewt>
heh ff8 upgrade losing random cookies, it seems

[09:28:00.0000] <JonathanNeal>
Well, we can drop the prefixes on our own servers and use something like prefixfree, while we wait for browsers to drop the vendor prefixes, if that is what you are suggesting.

[09:28:01.0000] <zewt>
(i'm not suggesting anything)

[09:29:00.0000] <zewt>
if i have any suggestion, it's that people stop saying "vendor prefixes", and clearly say "css prefixes" or "api prefixes"

[09:30:00.0000] <zewt>
(eg. this is mostly about css prefixes, yet this has found its way to the WebGL list, and people there already seem to not understand prefixes badly enough that this could confuse them)

[09:31:00.0000] <JonathanNeal>
well, we're using the terminology from the original blogpost.

[09:31:01.0000] <JonathanNeal>
and they are commonly referred to as vendor prefixes.

[09:31:02.0000] <zewt>
and as i just said, "vendor prefixes" includes both CSS and scripting, so people should be more clear than that if they mean one in the other in particular

[09:33:00.0000] <zewt>
(perhaps the argument is meant to apply to scripting prefixes too; i havn't had time to read the whole thing, but on a quick look it doesn't seem to be)

[09:33:01.0000] <JonathanNeal>
vendor css prefixes, vcssps

[09:33:02.0000] <JonathanNeal>
or is it css vendor prefixes?

[11:25:00.0000] <roc>
hsivonen: so, what kind of response did you get?

[11:28:00.0000] <hsivonen>
roc: the vast, vast majority of commenters agree

[11:29:00.0000] <hsivonen>
roc: a couple asked about -draft- prefix (I should have written a pre-emptive rebuttal for that)

[11:29:01.0000] <roc>
where's this feedback?

[11:30:00.0000] <hsivonen>
roc: twitter @mentions

[11:30:01.0000] <hsivonen>
roc: so not very nyanced

[11:30:02.0000] <Rik`>
yes, -draft- will be misspelled -drat- :)

[11:31:00.0000] <hsivonen>
roc: Tab seemed to suggest adding ways to work around the problem instead of fixing the problem, though the point might have been lost in a tweet

[11:35:00.0000] <hsivonen>
s/nyanced/nuanced/

[11:35:01.0000] <hsivonen>
/me apparently can't spell

[11:35:02.0000] <smedero>
I assumed you were referring to a nyan-cat influenced version of nuanced

[11:37:00.0000] <timeless>
hsivonen: you're just thinking in suomi

[11:37:01.0000] <timeless>
or trying to type that way

[11:38:00.0000] <hsivonen>
timeless: you've diagnosed the problem correctly

[11:39:00.0000] <timeless>
(this is why finns have trouble in the real world, they convert all foreign language words into Finnish spelling based on Finnish pronunciation)

[11:39:01.0000] <timeless>
otoh, you're doing much better than most in that you're catching your mistakes :)

[11:39:02.0000] <timeless>
/me still remembers Micorophones + Mirophones @ Nokia

[11:40:00.0000] <timeless>
(actually, those made me proud of my Finnish coworkers, even they winced at the site of those on big projected slides in our main auditorium)

[11:40:01.0000] <Ms2ger>
s/site/sight/

[11:41:00.0000] <hsivonen>
timeless: the way the use the Finnish writing system to one's advantage is to memorize the *correct* foreign spellings by thinking about them as pronounced by Finnish text-to-speech rules

[11:41:01.0000] <timeless>
Ms2ger: eep, oops

[11:41:02.0000] <hsivonen>
hehe

[11:41:03.0000] <roc>
hsivonen: I'm worried about reducing the ability of authors to know that a feature is experimental or engine-specific, or our ability to explain it to them. I wish there was as good a way to do that without prefixes, but I can't think of one.

[11:42:00.0000] <hsivonen>
roc: it doesn't matter. even if authors know a feature is experimental or engine-specific, they will still use it if it solves their client's problem right now

[11:43:00.0000] <Rik`>
ship behind a pref?

[11:43:01.0000] <hsivonen>
roc: the only true way to keep stuff experimental is not to ship it in the release channel so that it can't solve the client's problem right now

[11:43:02.0000] <roc>
hsivonen: there is often more than one way to solve a problem

[11:44:00.0000] <hsivonen>
Rik`: when we did that with the HTML parser, people started talking about flipping the pref on forums that were uncomfortably visible

[11:44:01.0000] <Rik`>
whatever the forum, it's still a small amount of users

[11:45:00.0000] <roc>
I think prefs are OK because most users aren't going to flip any prefs

[11:45:01.0000] <timeless>
roc: devs will use the first way they find that solves their problem

[11:45:02.0000] <timeless>
and they will demand users flip prefs

[11:45:03.0000] <timeless>
we've seen really bad advice on flipping prefs

[11:46:00.0000] <hsivonen>
I'm worried that they ask users to flip prefs, yes

[11:46:01.0000] <timeless>
if you're going to do pref flipping, at least require the pref be per domain

[11:46:02.0000] <timeless>
so that you don't have one site randomly cause behavior changes to another site the user visits

[11:46:03.0000] <hsivonen>
EMC told their extranet users to flip the HTML5 parser pref

[11:46:04.0000] <hsivonen>
(to off)

[11:46:05.0000] <timeless>
lol

[11:46:06.0000] <roc>
I don't think we've ever seen more than 10% of Firefox users flip any given pref

[11:47:00.0000] <timeless>
you don't think 10% of firefox users is a bad number?

[11:47:01.0000] <roc>
I don't think it's enough for sites to depend on the pref being flipped

[11:49:00.0000] <roc>
"they will still use it if it solves their client's problem" ... well, some will. But some won't, and some will construct cross-browser fallbacks if they know to.

[11:49:01.0000] <hsivonen>
roc: those that will are Mozilla's, Opera's and Microsoft's problem

[11:50:00.0000] <timeless>
hsivonen: and Nokia's, and RIM's

[11:50:01.0000] <timeless>
at least you big guys get to do something about it

[11:50:02.0000] <timeless>
the rest of us just suffer

[11:52:00.0000] <roc>
hsivonen: Understood. Making things worse for the others is what I'm concerned about.

[11:53:00.0000] <roc>
in that there's costs to what you're proposing as well as benefits

[11:53:01.0000] <hsivonen>
roc: mozRequestAnimationFrame might already have made some things on the Web function less well for other browsers

[11:54:00.0000] <hsivonen>
roc: even when the other vendors have kept on the treadmill and implemented it with their prefix

[11:54:01.0000] <hsivonen>
roc: though the difference is probably non-obvious to users

[11:54:02.0000] <hsivonen>
roc: the stuff Mozilla has added lately makes the difference non-obvious when authors fall back to standard stuff

[11:54:03.0000] <roc>
wouldn't the other browsers just keep using timers?

[11:55:00.0000] <hsivonen>
roc: yes, so animations would be less efficient than in Firefox

[11:55:01.0000] <hsivonen>
roc: even if the vendor have done their homework

[11:55:02.0000] <roc>
that's not making them function less well for other browesrs

[11:55:03.0000] <hsivonen>
roc: well, either there's a benefit from mozRequestAnimationFrame or we wouldn't need the whole thing

[11:56:00.0000] <roc>
I agree that we could have done better by making requestAnimationFrame unprefixed much earlier

[11:56:01.0000] <timeless>
fwiw, IRCCloud isn't particularly interested in spending time chasing mozWebSocket or whatever it is

[11:56:02.0000] <hsivonen>
roc: likewise, the new chunked XHR response types allow people to write code that uses less memory in Firefox even once the other vendors catch up

[11:56:03.0000] <timeless>
they might chase it eventually, or just wait for it to be unprefixed

[11:56:04.0000] <timeless>
(instead, they're using Flash, which otoh, in theory is portable)

[11:56:05.0000] <timeless>
/me saw mozRequestAnimationFrame or perhaps the standardized one mentioned in a slide deck this week

[11:58:00.0000] <roc>
hsivonen: I totally agree that we should unprefix stuff much more aggressively

[11:58:01.0000] <timeless>
actually, it was https://developer.mozilla.org/en/DOM/window.requestAnimationFrame

[11:58:02.0000] <roc>
in some cases, even as aggressively as "before shipping in a release"

[11:59:00.0000] <AryehGregor>
There's no equivalent for PCRE's x option in JS, is there?  Allowing you to write regexes where whitespace is ignored?

[11:59:01.0000] <AryehGregor>
So you can do multiline with comments, etc.?

[11:59:02.0000] <timeless>
AryehGregor: sounds right

[11:59:03.0000] <timeless>
you can use RegExp("hi" /*hi ... */ + "lo")

[12:00:00.0000] <timeless>
i guess that kinda depends on your definition of "no equivalent"

[12:00:01.0000] <Philip`>
You could write a regexp to strip whitespace and comments from regexps

[12:00:02.0000] <timeless>
if you're going to do that, you might as well do it my way..

[12:03:00.0000] <hsivonen>
roc: one reason why I think flagging non-standard feature has almost no value is that I view CSS features and APIs that one of the top engines create and authors adopt as features that haven't been standardized *yet*

[12:03:01.0000] <hsivonen>
roc: that is, I think nothing should stay in a state where it's both in use and non-standard

[12:04:00.0000] <roc>
Google and Microsoft buy usage

[12:05:00.0000] <timeless>
doesn't mozilla sponsor jQuery/jQuery-mobile like everyone else?

[12:05:01.0000] <hsivonen>
well, there are cases where it makes sense to try to block bad stuff by not implementing

[12:05:02.0000] <roc>
I don't see how that's compatible with what you just said

[12:06:00.0000] <Hixie>
"buy usage"?

[12:06:01.0000] <hsivonen>
roc: it makes sense if there's an alternative that drives the thing that isn't implemented into a "not in use" category

[12:07:00.0000] <roc>
Hixie: spend money evangelizing features, or in many cases actually make cash payments to get people to use features

[12:07:01.0000] <zewt>
i'd expect that if you have to do that, something is wrong with the feature, heh

[12:07:02.0000] <hsivonen>
roc: anyway, I think vendor A shouldn't have to guess if a feature they launch is going to end up stonewalled by vendors B and C and therefore should have been prefixed from the beginning

[12:07:03.0000] <roc>
they don't have to guess

[12:07:04.0000] <roc>
we can communicate

[12:08:00.0000] <hsivonen>
roc: because if the feature that vendor A launches is one that B, C and D want to implement, everyone is better off by not having it prefixed

[12:08:01.0000] <roc>
totally agree

[12:08:02.0000] <roc>
I think we should go to the CSS WG right now with a list of features we want to unprefix today

[12:09:00.0000] <timeless>
hsivonen: how do you deal with breaking api changes in such a model?

[12:09:01.0000] <hsivonen>
roc: great

[12:09:02.0000] <timeless>
consider the disaster that is webSockets

[12:09:03.0000] <hsivonen>
timeless: you don't make breaking API changes when the API is used so much that the breakage would be too great

[12:09:04.0000] <roc>
websockets had breaking API changes because the protocol was totally insecure

[12:09:05.0000] <hsivonen>
timeless: that disaster is a "disaster" that's available through Java and Flash every day

[12:10:00.0000] <zewt>
roc: well, security fixes trump compatibility when the collision is unavoidable

[12:10:01.0000] <hsivonen>
websockets also had breaking changes because the IETF WG felt they could bikeshed it to no end

[12:10:02.0000] <timeless>
what hsivonen said

[12:10:03.0000] <zewt>
that doesn't really reduce the importance of compatibility, it's just something yet higher

[12:10:04.0000] <timeless>
fwiw, IRCCloud apparently only supports up to version X of Chrome and not later

[12:11:00.0000] <timeless>
(using WebSockets)

[12:11:01.0000] <zewt>
that sounds more like "doesn't work at all", since almost everyone autoupdates chrome

[12:11:02.0000] <Hixie>
roc: the websockets protocol wasn't insecure

[12:11:03.0000] <timeless>
zewt: i think it's the difference between Released and Canary or Dev

[12:11:04.0000] <timeless>
not certain

[12:11:05.0000] <timeless>
/me doesn't know the versions of Chrome well enough to care

[12:11:06.0000] <Hixie>
roc: it was a variant that the ietf was considering that was insecure

[12:11:07.0000] <roc>
Hixie: it could be used to poison badly-written proxies, couldn't it?

[12:12:00.0000] <Hixie>
roc: but that was itself a breaking change from what had been specced

[12:12:01.0000] <roc>
maybe I'm misremembering, in which case, I stand corrected

[12:12:02.0000] <Hixie>
roc: as far as i am aware, what i specced couldn't.

[12:12:03.0000] <roc>
ok

[12:13:00.0000] <Hixie>
/me is rather sad that we went to the ietf for websockets

[12:13:01.0000] <hsivonen>
pro tip to the IETF: just rubber-stamp what Hixie specs :-)

[12:14:00.0000] <hsivonen>
Hixie: I'm sad about it, too

[12:14:01.0000] <timeless>
anyway, yeah, it /looks/ like IRCCloud only supports Chrome 15 and not higher

[12:14:02.0000] <Hixie>
they ended up adding a year and no new features to the technology, while simultanteously removing some security features, increasing the likelihood authors would get it wrong, and making it more complicated

[12:14:03.0000] <timeless>
15 is what normal people would have, with 16, 17 and 18 being things you could have (I have Canary/17)

[12:14:04.0000] <Hixie>
anyway

[12:14:05.0000] <Hixie>
that's water under the bridge

[12:15:00.0000] <zewt>
periodically grumbling about water under the bridge is useful, to help remind people to build dams in the future :)

[12:15:01.0000] <timeless>
heh

[12:15:02.0000] <timeless>
the Chinese dams have been um.. interesting

[12:16:00.0000] <Hixie>
roc: i'm curious about what vendor-prefixed vendor-specific technologies microsoft and google have been sponsoring before they are accepted by other vendors... do you just mean demos?

[12:16:01.0000] <roc>
Web Audio API

[12:17:00.0000] <hsivonen>
roc: that one had particularly uncool naming

[12:17:01.0000] <roc>
yeah, that was branding genius\

[12:17:02.0000] <hsivonen>
roc: Firefox's API should have been promoted as both "Web" and "HTML5"

[12:17:03.0000] <roc>
make sure to grab "Web <simplest possible noun> API" for your next feature

[12:17:04.0000] <zewt>
is that the weird stuff google search uses for voice input? (which always worried me--how is it inputting sound with only a click, when I never gave it permission to do that)

[12:18:00.0000] <hsivonen>
roc: at least our out-of-spec <menuitem> stuff is promoted as HTML5 content menus

[12:18:01.0000] <Hixie>
roc: who's using that?

[12:18:02.0000] <TabAtkins>
krijn: Please publish!

[12:18:03.0000] <Hixie>
zewt: yeah, i don't understand why webkit doesn't do that for _every_ input control, that feature makes no sense to me

[12:19:00.0000] <hsivonen>
*context menus

[12:19:01.0000] <zewt>
i don't understand what security team would allow a feature to input sound without an explicit user confirmation

[12:19:02.0000] <timeless>
zewt: who needs security teams for features? :)

[12:19:03.0000] <zewt>
cough

[12:19:04.0000] <timeless>
omi, shiny

[12:19:05.0000] <timeless>
push push push

[12:19:06.0000] <Hixie>
zewt: it's just a flag you can set to enable voice input on a particular control, it's no more of a security risk than keyboard input

[12:19:07.0000] <roc>
Hixie: it's not quite "in use" on the public Web for non-demos as far as I know, but Google's certainly trying to get it there, and it is in use in Chrome apps

[12:19:08.0000] <zewt>
let's just turn on filesystem api for C:\ and be done with it :P

[12:20:00.0000] <timeless>
zewt: the Linux people will say "sure, go ahead, we don't have a C:!"

[12:20:01.0000] <zewt>
Hixie: of course it is, i don't randomly type sensitive information into a webpage, but nobody is going to realize that everything being said in the room is being recorded

[12:20:02.0000] <Hixie>
roc: well chrome apps using a chrome api is like firefox extensions using xbl or xul, doesn't seem a huge deal. and having use in demos seems a positive thing.

[12:21:00.0000] <zewt>
i don't know if that API is globally enabled or whitelisted to google.com or what

[12:21:01.0000] <Hixie>
zewt: are we talking about the same feature? i'm not aware of anything that does what you describe.

[12:21:02.0000] <zewt>
Hixie: the mic button on the google.com search page

[12:21:03.0000] <zewt>
i don't know what the API is like under the hood, if it's possible to mask the voice input overlay in any way, etc

[12:21:04.0000] <Hixie>
zewt: that feature only allows the user to use the mic instead of the keyboard to insert text into a form control, the page doesn't get any of the audio, only the text

[12:21:05.0000] <hsivonen>
Hixie: I think -webkit-CSS demos are hurting Firefox when Firefox implements the same features as -moz-CSS

[12:21:06.0000] <roc>
If you look at people's notes from this conference http://www.newgameconf.com/ there is no sense that the Google evangelists were portraying Web Audio API as a non-standard experiment

[12:22:00.0000] <Hixie>
zewt: plus it's opt-in, the mic isn't even on until the user clicks the mic icon

[12:22:01.0000] <Hixie>
hsivonen: i think prefixes are a terrible idea, been saying so for ages

[12:22:02.0000] <timeless>
zewt: it probably uses flash in some cases :)

[12:22:03.0000] <zewt>
Hixie: that seems of less use, then, but okay

[12:22:04.0000] <zewt>
roc: i wouldn't expect someone calling an api "web audio api" to do such a thing :P

[12:23:00.0000] <Hixie>
roc: that's certainly unfortunate, but then it _is_ being developed in a w3c wg, no?

[12:23:01.0000] <timeless>
roc: gah, that site's design requires webfonts in order not to render badly

[12:23:02.0000] <roc>
Anyway, I don't want to bash Microsoft and Google about this. The point is that usage can be and is bought. Every time Microsoft releases a new platform they have tons of apps built by Microsoft dollars. Microsoft paid NBC to stream the Olympics over Silverlight. That sort of thing.

[12:24:00.0000] <zewt>
roc: does MS really do that for non-proprietary tech?

[12:24:01.0000] <roc>
so making decisions based on observed "usage" could just give control to people who can do that

[12:24:02.0000] <zewt>
after all, if an API is open and implemented and useful, you don't really *have* to do that

[12:24:03.0000] <Hixie>
well, silverlight was a platform they wanted to have win, i think it's pretty reasonable if you're going to have a vendor-specific tech to try to make it succeed :-)

[12:25:00.0000] <Hixie>
not that a vendor-specific tech is imho a good thing, but that's a separate issue

[12:25:01.0000] <Hixie>
we can hardly claim it's unfair for a company to try to compete

[12:25:02.0000] <Hixie>
even if what they're competing with is vendor-neutral

[12:25:03.0000] <Hixie>
competition makes us stronger

[12:25:04.0000] <roc>
I don't see why they wouldn't do the same for their extensions to the Web

[12:25:05.0000] <zewt>
competition sometimes makes us stronger; it doesn't always work out that way in the end :)

[12:26:00.0000] <zewt>
not that that makes any difference to what we're doing

[12:26:01.0000] <hsivonen>
/me has to step away from the computer

[12:26:02.0000] <Philip`>
Surely competition only makes you stronger if the competition loses, which isn't a certainty

[12:27:00.0000] <zewt>
philip: unfortunately, the more common end result is nobody "wins" and tech is fragmented, which means everyone loses

[12:27:01.0000] <TabAtkins>
I think that prefixes are still a good thing for the web.  What is bad is that (a) features stay prefixed for too long, and (b) CSS doesn't have a good way to abstract over prefixes, unlike JS.

[12:27:02.0000] <TabAtkins>
We can fix (a) by pushing harder on the CSSWG to not bikeshed the hell out of things.

[12:27:03.0000] <zewt>
(which is a result I'll take over proprietary tech winning outright, but)

[12:28:00.0000] <TabAtkins>
We can fix (b) with something like Mixins.

[12:28:01.0000] <roc>
Hixie: hypothetically, if there were two competing standards, and one was better than the other in every way, but the other got more usage initially because its backer spread a lot of money around, and it won, then that wouldn't be good for the Web

[12:28:02.0000] <zewt>
TabAtkins: it seems to me that prefixing was introduced before people started accepting the fact that APIs rarely become "finalized" and etched in stone, and the way things are prefixed just never caught up to deal with that change

[12:29:00.0000] <roc>
if Microsoft had spread more money around and had a free hand to use their full range of anticompetitive tricks, and Silverlight had then won, that wouldn't have been good for the Web either

[12:29:01.0000] <roc>
competition is generally good, but it doesn't always produce optimal results

[12:30:00.0000] <zewt>
roc: "fair competition is good" is a more useful statement, I think

[12:30:01.0000] <zewt>
unfair competition, not so much--whatever "unfair" means

[12:30:02.0000] <roc>
depends on the definition of "fair"

[12:30:03.0000] <zewt>
yep

[12:30:04.0000] <roc>
you're likely to define it to make that statement a tautology

[12:31:00.0000] <AryehGregor>
roc, Silverlight is completely incompatible with the rest of the web platform and is so large that it's effectively impossible to standardize, so it's not comparable to the properties/methods/etc. we're talking about.

[12:31:01.0000] <roc>
TabAtkins: we should go through the set of non-CR CSS proposals and identify a set that we should unprefix today

[12:31:02.0000] <TabAtkins>
roc: I agree with this.

[12:31:03.0000] <roc>
AryehGregor: sorry, I'm just riffing on "competition makes us stronger"

[12:31:04.0000] <TabAtkins>
roc: Come to MTV and we can work on it.  ^_^

[12:31:05.0000] <Hixie>
roc: well, depends on whether they want their extensions to win specifically or whether they just want the ability in the platform

[12:32:00.0000] <AryehGregor>
Competition in its purest sense is incompatible with the notion of copyright.  After all, copyright is a legal monopoly.

[12:32:01.0000] <Hixie>
roc: in google's case, while there may be specific engineers who get attached to specific ideas sometimes (me included!), as a general rule, the desire is to get interoperable implementations of particular abilities into the platform, and not any one particular tech or another.

[12:32:02.0000] <Hixie>
roc: can't say what microsoft's goals are, though

[12:32:03.0000] <roc>
you always want your extension to win, because you're first to market with your extension which gives you an advantage

[12:32:04.0000] <AryehGregor>
So we're definitely talking about only limited competition here in any event.

[12:32:05.0000] <zewt>
AryehGregor: eh, that's a misunderstanding of "copyright"; you can make that argument a lot more convincingly against patents

[12:33:00.0000] <roc>
by "you" I include myself

[12:33:01.0000] <TabAtkins>
In CSS we're still occasionally having to slap MS's hand about pushing their *particular* impl quirks.

[12:33:02.0000] <Hixie>
roc: i think if there were two competing standards, and one was better than the other in every way, then it's unlikely google would spend money on the other. again, dunno about microsoft.

[12:33:03.0000] <zewt>
you can leverage copyright against competition, but if anyone actually wants to do *that* it's the w3c :)

[12:34:00.0000] <roc>
TabAtkins: this should only take 30 minutes

[12:34:01.0000] <roc>
Hixie: I used to believe that, but I don't now.

[12:34:02.0000] <AryehGregor>
zewt, one of the axioms of perfect competition is that all sellers are selling interchangeable products, so . . .

[12:34:03.0000] <TabAtkins>
roc: Wanna organize a time this week?  Anyone else you believe should be in on it?

[12:34:04.0000] <zewt>
copyright doesn't prevent creating interchangeable products

[12:34:05.0000] <AryehGregor>
Perfect competition is incompatible with R&D, really.  The point is, it's not necessarily always desirable.

[12:35:00.0000] <AryehGregor>
zewt, it either prevents creating interchangeable products, or creates barriers to enter the market (violating another axiom of pure competition).

[12:35:01.0000] <TabAtkins>
roc: I've been meaning to talk with you about measurement/position APIs as well.  Sometime soon.

[12:35:02.0000] <AryehGregor>
I.e., you have to expend a lot of resources to create an interchangeable product and thereby enter the market.

[12:35:03.0000] <roc>
How about me, David and Boris come up with a list (we're all in Auckland this week), you come up with a list, and we'll propose unprefixing the intersection of those lists? :-)

[12:35:04.0000] <AryehGregor>
But I'm quibbling.

[12:36:00.0000] <TabAtkins>
roc: Ah, didn't realize you were all down there!  Sounds good.

[12:36:01.0000] <AryehGregor>
roc, TabAtkins: How about the policy is changed to "the second shipping implementation removes prefixes if it looks pretty much compatible"?

[12:36:02.0000] <AryehGregor>
Instead of "remove prefixes at CR"?

[12:36:03.0000] <AryehGregor>
Obviously, I'm talking on a per-property basis, not per-spec.

[12:36:04.0000] <TabAtkins>
AryehGregor: Why not "when we have two impls, cut everything that's not ready for CR and push the rest up"?

[12:37:00.0000] <AryehGregor>
TabAtkins, . . . because then you'll have a new standard like every three months for every time a single small group of features get implemented?

[12:37:01.0000] <TabAtkins>
AryehGregor: ...and?

[12:37:02.0000] <zewt>
and that's horrible? heh

[12:37:03.0000] <AryehGregor>
I don't think that will work well with W3C policy.

[12:37:04.0000] <AryehGregor>
Process, you know.

[12:38:00.0000] <AryehGregor>
I'm all in favor of annual snapshots.

[12:38:01.0000] <AryehGregor>
Anyway, got to go.

[12:38:02.0000] <Hixie>
roc: i'm not aware of ever having seen that situation, so i have no data one way or the other

[12:38:03.0000] <TabAtkins>
Nah, it can work within the Process if you're proactive about it.

[12:39:00.0000] <Hixie>
roc: as i've said before, though, if you ever see a case where you think google is pushing for inferior tech, please tell me about it so i can see what's up

[12:42:00.0000] <zewt>
TabAtkins: i think it's more than "two compatible implementations exist for some feature" to warrant unprefixing, though

[12:42:01.0000] <zewt>
if two vendors quickly implement a new, in-development spec, you want to let it sit around prefixed for a while--let the spec bake, let people play around with the implementations to improve it, before locking it in place by unprefixing

[12:43:00.0000] <zewt>
even if it's just "two compatible implementations and an OK from the spec editor"

[12:44:00.0000] <TabAtkins>
zewt: I agree.

[12:44:01.0000] <zewt>
(it might be possible to lay out stricter criteria, but it's probably not possible to get them right the first 2-3 attempts)

[12:45:00.0000] <TabAtkins>
I don't think there's much reason to be strict about it.  A general policy and people eager to apply it should be enough.

[12:46:00.0000] <zewt>
basically "the editor says OK to locking that part of the spec into backwards-compat" (hopefully implying "we've used the API in practice enough to give that kind of sign-off")

[12:46:01.0000] <jgraham>
/me thinks the response to "we should do X" of "let's have a f2f meeting!" is part of the problem

[12:46:02.0000] <zewt>
letting people use judgement? :O

[12:46:03.0000] <jgraham>
Or part of a problem at least

[12:53:00.0000] <TabAtkins>
jgraham: Bah.  Pair programming is the best programming.

[12:54:00.0000] <Ms2ger>
Pff

[12:55:00.0000] <zewt>
let's waste half of every programmer :P

[12:55:01.0000] <TabAtkins>
I think that single programming is wasting half of a programmer.

[13:01:00.0000] <jgraham>
I have no evidence that statement is false. But not all tasks are programming and waiting for optimum conditions for any single task doesn't maximise overall throughput

[13:01:01.0000] <TabAtkins>
You may have noticed the smilie after my statement, in any case, indicating a lack of seriousness.

[13:02:00.0000] <jgraham>
I already find it pretty concerning that the CSS WG has like 4 F2F meetings a year and has to schedule special extra time at TPAC

[13:02:01.0000] <jgraham>
TabAtkins: I really didn't. And still haven't

[13:03:00.0000] <jgraham>
Oh you mean the original statement

[13:03:01.0000] <jgraham>
Yeah, fair enough

[13:06:00.0000] <astearns>
jgraham: the CSS WG needs all that time for the unbounded pagination demoing

[13:06:01.0000] <TabAtkins>
SO MANY PAGES

[13:06:02.0000] <TabAtkins>
On that note, pagination 100% needs to be broken down into more primitives.

[13:06:03.0000] <TabAtkins>
Maybe Regions too?

[13:07:00.0000] <jgraham>
astearns: I thought that was the point of TPAC, not just the CSS meeting

[13:07:01.0000] <astearns>
jgraham: yes, it overflowed

[13:24:00.0000] <roc>
"two compatible implementations" is a very large improvement on "one implementation", and delaying unprefixing beyond that may very likely hurt more than it helps --- see hsivonen's observations

[13:28:00.0000] <zcorpan>
why do people care about whitespace for quasis but not for innerHTML or normal markup?

[13:30:00.0000] <krijn>
TabAtkins: we will, thanks!

[13:31:00.0000] <TabAtkins>
zcorpan: People care about whitespace for quasis?

[13:35:00.0000] <zcorpan>
some do, apparently

[13:35:01.0000] <Ms2ger>
I was wondering the same

[13:35:02.0000] <jgraham>
+1 on the wondering

[13:37:00.0000] <jgraham>
AryehGregor: BTW what you really want is commit-on-a-branch-then-review

[13:39:00.0000] <TabAtkins>
Bleh, filing a bug with Moz Legal is too much work.  I'll just make up my own example.

[13:51:00.0000] <zewt>
roc: "two compatible implementations" without "plus editor's OK" would be bad, I think; human judgement must be in the equation somewhere

[13:52:00.0000] <zcorpan>
why does http://blog.webmproject.org/2011/11/video-codecs-101.html ues flash?

[13:52:01.0000] <astearns>
"two compatible implementations" seems to me to imply a test suite. The tests don't always come that soon, unfortunately

[13:53:00.0000] <espadrine>
zcorpan: Is there a way to have embedded youtube videos in html?

[13:53:01.0000] <gsnedders>
astearns: "both work on Gmail"/"both work on FB Chat" works in lieu of a test-suite :P

[13:53:02.0000] <espadrine>
afaik html5 youtube is only available on their website

[13:53:03.0000] <astearns>
grr

[13:54:00.0000] <zcorpan>
espadrine: the flash embed code uses html if the user has opted in, iirc

[13:54:01.0000] <zcorpan>
espadrine: anyway that's not youtube afaict

[13:54:02.0000] <zcorpan>
or maybe it is

[13:55:00.0000] <zcorpan>
/me opts in

[13:55:01.0000] <zcorpan>
ok, ignore me!

[13:57:00.0000] <espadrine>
zcorpan: I ignore you ;)

[13:58:00.0000] <svl>
/me hasn't opted in (blocking all youtube cookies actually) and has lately been getting youtube webm videos on random blogs.

[13:59:00.0000] <gsnedders>
Hixie: How do you justify the Dart/TC39 split then that has obviously happened within Google?

[13:59:01.0000] <Hixie>
"justify"?

[14:00:00.0000] <gsnedders>
s/justify/explain/ really

[14:00:01.0000] <Hixie>
differing visions of what is best for the web

[14:01:00.0000] <gsnedders>
I mean, if the aim is to get bigints, classes into the web platform, that could've been done (and was being done, by Google, before people got pulled from TC-39!), but the aim is obviously just to use Dart.

[14:02:00.0000] <Hixie>
"the aim" implies a premise that is false

[14:03:00.0000] <gsnedders>
The point of Dart is to make up for the lack of a number of things in JS, right?

[14:04:00.0000] <Hixie>
not so much lacking features so much as what, to dart's supporters, are viewed as fundamental design decisions, i believe

[14:05:00.0000] <Hixie>
http://www.dartlang.org/docs/technical-overview/index.html seems to discuss the goals in more detail than i could do justice on irc

[14:06:00.0000] <gsnedders>
See, I still don't think anyone else apart from a small number of Google people see anything in Dart as fundamental design decisions.

[14:06:01.0000] <Hixie>
agreed

[14:06:02.0000] <gsnedders>
I mean, the only fundamental change is class-based OO instead of prototype-based OO.

[14:07:00.0000] <gsnedders>
And with some sort of class syntax likely to be introduced in ES6, that's becoming blurred.

[14:07:01.0000] <Hixie>
i'm not familiar enough with either dart or future js proposals to comment on such specifics

[14:08:00.0000] <gsnedders>
Kinda disconcerting that what I've heard from multiple people is that Dart exists in large part just to keep Lars Baks at Google.

[14:08:01.0000] <gsnedders>
Unleashing a new language to the web (esp. if it reaches Chrome) is not a nice thing at all, and that really is a flimsy reason to do so.

[14:11:00.0000] <Hixie>
while personally i think that the right thing to do on the web is to embrace and extend existing technologies in a vendor-neutral manner, i don't think it's bad to experiment with new things.

[14:11:01.0000] <Hixie>
i mean, one day i hope html is replaced by something better

[14:11:02.0000] <Hixie>
and it's not like it's going to come out of a standards committee

[14:12:00.0000] <Hixie>
i presume the same applies to, e.g., JS

[14:12:01.0000] <Hixie>
when new things aren't better enough, they fail

[14:12:02.0000] <Hixie>
q.v. xhtml2

[14:12:03.0000] <Hixie>
have faith in the power of the market :-)

[14:12:04.0000] <Ms2ger>
Pah

[14:15:00.0000] <gsnedders>
Hixie: Google can single-handedly more-or-less make other browser vendors do things to some extent, though. If Gmail got a new UI only to Dart-supporting browsers, I expect everyone else would look very closely at Dart.

[14:15:01.0000] <gsnedders>
I mean, if it were FB who started using Dart, nobody would really care, probaly.

[14:15:02.0000] <gsnedders>
*probably

[14:15:03.0000] <Ms2ger>
See: spdy

[14:15:04.0000] <gsnedders>
But because Google control both ends of the stack…

[14:15:05.0000] <Hixie>
yeah, i was about to say

[14:15:06.0000] <Hixie>
see spdy

[14:15:07.0000] <zewt>
well, spdy isn't being pushed

[14:15:08.0000] <erlehmann>
gsnedders, if that is true, where is my webm-enabled proprietary browser? :3

[14:15:09.0000] <Hixie>
you wildly overestimate google's power here :-)

[14:15:10.0000] <Hixie>
webm is another example

[14:15:11.0000] <gsnedders>
erlehmann: YouTube supports H.264 too.

[14:16:00.0000] <gsnedders>
erlehmann: So from a content POV they aren't pushing it in the same way.

[14:16:01.0000] <Hixie>
not only that, but there's a huge difference between webm and dart

[14:16:02.0000] <zewt>
(i wish something like spdy would be pushed, though I'm not familiar enough with spdy to know if I'd want it in particular to be)

[14:16:03.0000] <Hixie>
with webm, pretty much everyone at google thinks it's better than h.264 for the web

[14:16:04.0000] <erlehmann>
zewt, go read about it. then read about SCTP

[14:16:05.0000] <Hixie>
whereas with dart, views are really quite mixed on the matter

[14:16:06.0000] <zewt>
i've read about it, but i don't know how it is in practice

[14:17:00.0000] <zewt>
(havn't heard of sctp)

[14:17:01.0000] <Ms2ger>
Hixie, I remember an announcement about removing H### support from Chrome... Is that still going to happen?

[14:17:02.0000] <Hixie>
dunno, i'm not part of the chrome team

[14:17:03.0000] <Hixie>
i would assume so

[14:17:04.0000] <jgraham>
I'm not sure he is underestimating google's power

[14:18:00.0000] <jgraham>
You have the position to be very evil, if you choose

[14:18:01.0000] <gsnedders>
I mean, the SPDY example isn't really relevant: you're still serving the same content over HTTP.

[14:19:00.0000] <timeless>
gsnedders: just slower and with less security?

[14:19:01.0000] <zewt>
spdy isn't user-visible (or rather, the user-visibility of it is subtle)

[14:19:02.0000] <gsnedders>
But if you start serving Dart over SPDY to browsers which support both and stop updating the JS/HTTP version…

[14:19:03.0000] <gsnedders>
timeless: See what zewt said.

[14:20:00.0000] <zewt>
webm vs h264 is also not user-visible (or again subtle--mostly a difference in legal issues, and secondarily in coding efficiency, neither of which most users will notice)

[14:20:01.0000] <timeless>
well

[14:20:02.0000] <timeless>
that's unfair

[14:20:03.0000] <timeless>
these are all transports

[14:20:04.0000] <timeless>
making them user visible is all about some content provider only providing better content via one transport

[14:21:00.0000] <timeless>
that applies to SPDY and WEBM and Dart

[14:21:01.0000] <timeless>
or Silverlight if you ha ve

[14:21:02.0000] <jgraham>
If helps if you want to portray your browser as fast that it can load your sites faster than the competition by using a proprietary protocol

[14:21:03.0000] <zewt>
if google decided to make things visibly lessened when on h264 (lower the bitrate a lot) or when on http instead of spdy (disable features when not on spdy), then they could push those features; of course, that's out-of-line from the features themselves

[14:21:04.0000] <timeless>
jgraham: sure

[14:21:05.0000] <zewt>
and yeah, that's the sort of thing google could use their weight to push things where most others can't

[14:22:00.0000] <zewt>
of course, they'd also be lessening their own products in the process (making gmail not as good in Firefox or IE or whoever they're trying to pressure), so it's not without cost to them

[14:22:01.0000] <annevk>
roc: I think the stacking makes sense now, thanks for explaining; I do think we should restrict it to subtrees (either of the element or the Document, depending on where it is set)

[14:22:02.0000] <timeless>
zewt: they're killing gmail-java for blackberry

[14:22:03.0000] <zewt>
annevk: so you can't fullscreen a->b->c->d and then stack a a->b->c2 fullscreen on top of it?

[14:22:04.0000] <annevk>
roc: If we do not restrict it to subtrees you get really weird scenarios and I'm not even sure that's possible given the UI and API constraints

[14:23:00.0000] <zewt>
(sounds reasonable, if that's what you mean)

[14:23:01.0000] <timeless>
and they killed gmail ui=2 for IE6 iirc

[14:23:02.0000] <Hixie>
jgraham: gsnedders argues that google can single-handedly change the web technology stack, but as far as i can tell, that is simply untrue -- either due to inability, as i would tend to believe, or due to policy, which is certainly also possible -- and there are multiple examples of cases demonstrating this imho, as discussed above.

[14:23:03.0000] <zewt>
timeless: heh, that one I'm not going to shed any tears over :)

[14:23:04.0000] <gsnedders>
Hixie: I'd argue it's done to policy in alrge part.

[14:23:05.0000] <gsnedders>
*large

[14:23:06.0000] <annevk>
zewt: yes

[14:24:00.0000] <gsnedders>
And that's the scary thing.

[14:24:01.0000] <Hixie>
jgraham: (microsoft certainly also have had cases where they would have liked a technology to take over the web, and they have certainly not had policy to stop them, and they've had far _more_ leverage than google does, e.g. 99% market share for their browser, and they have equally failed to single-handedly do such things.)

[14:24:02.0000] <Hixie>
gsnedders: if it was just policy, microsoft would have replaced html with silverlight long ago, imho

[14:24:03.0000] <timeless>
zewt: well, i believe they offer Chrome as a download

[14:25:00.0000] <gsnedders>
Hixie: Having open-source code for Dart especially makes it far easier for Google than it ever was for MS, though

[14:25:01.0000] <timeless>
gsnedders: i'm not sure on that point :)

[14:25:02.0000] <Hixie>
gsnedders: that's certainly a novel argument

[14:26:00.0000] <zewt>
timeless: there's a reasonable ulterior motive there, too, though--not wanting to have to maintain compatibility with IE6

[14:26:01.0000] <timeless>
zewt: hey, not all reasons for doing something have to be evil

[14:26:02.0000] <timeless>
i'm just noting that a vendor clearly can try to persuade users to move

[14:26:03.0000] <timeless>
and has shown its willingness to do so

[14:26:04.0000] <gsnedders>
Hixie: Is it? Opera could never ship Silverlight on Linux/MIPS, so MS could give us all the insentive in the world and we wouldn't. With Dart that isn't so clear-cut.

[14:26:05.0000] <timeless>
heck, even MS does!

[14:27:00.0000] <timeless>
the SharePoint team forced users to upgrade by dropping IE6 support!

[14:27:01.0000] <gsnedders>
/me tries at the very mention of SharePoint

[14:27:02.0000] <timeless>
gsnedders: incentive, i think

[14:27:03.0000] <annevk>
/me missed neologisms in hsivonen's post

[14:27:04.0000] <Hixie>
gsnedders: mono?

[14:27:05.0000] <annevk>
/me is slightly disappointed

[14:28:00.0000] <Hixie>
annevk: ?

[14:28:01.0000] <timeless>
/me thought ms gave some support to mono

[14:28:02.0000] <timeless>
and just because some teams at MS or Sun weren't very good at doing what needed to be done to force something

[14:29:00.0000] <gsnedders>
timeless: Yes, that's how you spell it. :P

[14:29:01.0000] <timeless>
doesn't mean some other team at some other company can't get something similar done w/ similar or even slightly less resources

[14:29:02.0000] <Hixie>
gsnedders: anyway, there's one way to make this a non-issue

[14:29:03.0000] <Hixie>
gsnedders: get more market share :-P

[14:30:00.0000] <timeless>
/me thinks MS/Sun made marketing / strategic mistakes

[14:30:01.0000] <timeless>
not so much technological, but more political

[14:30:02.0000] <gsnedders>
Hixie: I dunno — it's not so much market-share-as-vendor that's relevant here as it is market-share-as-content-provider.

[14:30:03.0000] <annevk>
Hixie: hsivonen sometimes coins awesome words

[14:31:00.0000] <annevk>
or phrases

[14:31:01.0000] <Hixie>
gsnedders: you need both in order to effect market-changing leverage, imho

[14:31:02.0000] <Hixie>
annevk: oh, i get it

[14:31:03.0000] <Hixie>
annevk: i thought you meant he'd used some and you'd not noticed them or something

[14:31:04.0000] <Hixie>
annevk: and i was wondering which ones i'd missed!

[14:32:00.0000] <annevk>
heh

[14:32:01.0000] <gsnedders>
Hixie: Google has enough as market-share-as-vendor to have the leverage, IMO. So it's really just everyone who needs to cut into that.

[14:32:02.0000] <gsnedders>
Controlling both ends of the stack leads to some interesting cases…

[14:34:00.0000] <roc>
SPDY is being pushed

[14:34:01.0000] <roc>
we're implementing it

[14:35:00.0000] <roc>
I think we're going to help standardize it

[14:35:01.0000] <gsnedders>
I still think SPDY was pushed live too soon and could've been improved upon…

[14:35:02.0000] <timeless>
gsnedders: you're in favor of IETF bikeshedding? :-)

[14:35:03.0000] <gsnedders>
roc: Are you still going to be willing to change it after shipping if standardizing decides to make changes?

[14:35:04.0000] <roc>
annevk: dunno what you mean by "restrict to subtree"

[14:36:00.0000] <roc>
gsnedders: depends on the changes. I assume we'd be willing to make some changes

[14:36:01.0000] <Hixie>
gsnedders: shipping is standardisation. if a committee decides to change the spec after it's shipped interoperably, that's just dumb.

[14:36:02.0000] <Ms2ger>
Hixie, remember, this is IETF territory

[14:36:03.0000] <roc>
I hope that if we encounter something stupid that we think should be changed, we won't just go ahead and implement the stupid thing. But I'm not doing the work.

[14:36:04.0000] <timeless>
Ms2ger: i'm sure he wants to forget :)

[14:37:00.0000] <gsnedders>
Hixie: Effectively Google has standardized SPDY on its own without consulting anyone by shipping, and that's what I don't like.

[14:37:01.0000] <Hixie>
what timeless said

[14:37:02.0000] <timeless>
thanks :)

[14:37:03.0000] <Hixie>
gsnedders: dude, you can hardly say google didn't consult anyone

[14:37:04.0000] <Hixie>
gsnedders: nobody might have been interested, but that's an entirely different matter

[14:38:00.0000] <Ms2ger>
If nobody's interested, that might be a sign that you aren't heading in the right direction

[14:38:01.0000] <Hixie>
completely agreed

[14:38:02.0000] <Hixie>
we saw this with svg, too

[14:38:03.0000] <timeless>
heh

[14:38:04.0000] <timeless>
+1

[14:38:05.0000] <Ms2ger>
^

[14:39:00.0000] <Hixie>
where svg was headed in the wrong direction, and the browser vendors ignored it because we had enough on our plate and weren't interested

[14:39:01.0000] <Hixie>
and then later on it was too late, and so that's what we implemented

[14:39:02.0000] <Hixie>
it's not limited to one-vendor situations

[14:39:03.0000] <timeless>
/me ponders

[14:40:00.0000] <Ms2ger>
I guess you could count the SVGWG as one vendor

[14:40:01.0000] <annevk>
roc: tree is <div id=a> <div id=b/> <div>; one #a goes fullscreen, #b can; but if #b goes fullscreen, #a can't

[14:43:00.0000] <zewt>
given that the typical UI that would put #a fullscreen is no longer visible if #b is fullscreen, that seems sane

[14:43:01.0000] <annevk>
yeah, I'm not even sure how you'd get a trusted click in the first place

[14:43:02.0000] <zewt>
also it makes the "stack" work like a "stack" in both senses of the word

[14:43:03.0000] <roc>
annevk: I'm not sure why any restrictions in the spec are needed here

[14:44:00.0000] <zewt>
eg. the list of fullscreened elements is a stack, and it's also a stack in terms of the DOM nodes (top-down)

[14:44:01.0000] <annevk>
roc: otherwise figuring out fullscreenchange events get harder I think

[14:44:02.0000] <zewt>
(whether it's actually needed for a sane API/implementation, no idea)

[14:44:03.0000] <annevk>
roc: you did not define those in your change proposal

[14:46:00.0000] <roc>
what's the problem? you run the algorithm, then figure out what's fullscreen in each document and fire fullscreenchange at it

[14:46:01.0000] <roc>
alternatively we could just fire fullscreen at the document and never at the element

[14:46:02.0000] <roc>
fullscreenchange I mean

[14:47:00.0000] <roc>
if you want to catch loss-of-fullscreen you need to register at the document anyway

[14:47:01.0000] <annevk>
there's no problem, the algorithm is just more complicated

[14:47:02.0000] <annevk>
and probably unnecessarily so

[14:48:00.0000] <roc>
then let's simplify things by firing fullscreenchange at the document always

[14:49:00.0000] <annevk>
e.g. if B embeds two documents and fullscreen changes from one of those documents to the other

[14:49:01.0000] <annevk>
the stack situation gets more complicated

[14:50:00.0000] <timeless>
is it changing using JS?

[14:50:01.0000] <annevk>
JS could have a reference, sure

[14:51:00.0000] <annevk>
so yeah, UI-restricted does not make sense and this situation could definitely arise

[14:56:00.0000] <annevk>
roc: I think the main complication last time I looked at this was the tree walking

[14:56:01.0000] <annevk>
roc: instead of just walking upwards (if you restrict to subtree), you also have to walk downwards again

[14:56:02.0000] <annevk>
roc: I guess it's not a huge deal if you feel strongly

[14:57:00.0000] <roc>
are you talking about the document tree or the DOM node tree?

[14:57:01.0000] <roc>
I don't see how the DOM node tree is relevant at all

[14:58:00.0000] <annevk>
the "tree" of Documents

[14:58:01.0000] <annevk>
actually browsing contexts, and that's not a tree either

[14:58:02.0000] <roc>
it's not?

[14:59:00.0000] <annevk>
it has popups and weird things, kind of depends on how you look at it

[15:00:00.0000] <roc>
I agree the document tree walking gets more complicated, but your <div> example had only one document so I didn't understand it

[15:00:01.0000] <annevk>
oh yeah for the single document case it's not a huge deal either way

[15:00:02.0000] <annevk>
I just meant to illustrate the concept

[15:02:00.0000] <annevk>
anyway, I should get to bed and get used to the timezone here :)

[15:03:00.0000] <annevk>
hopefully next time I'll manage to express my point at the start

[15:03:01.0000] <annevk>
nn

[15:32:00.0000] <Hixie>
tantek: yt?

[15:36:00.0000] <Hixie>
tantek: yt?

[15:53:00.0000] <Hixie>
jeez, iso 8601 defines way the heck too many formats

[15:53:01.0000] <Hixie>
the joke about the great thing about standards being that there's so many to chose from is supposed to apply to _alternative_ standards, not to standards within a single specification


2011-11-16
[16:00:00.0000] <zewt>
whatever the "w3c technical architecture group" is, this "comment" on web storage/app cache is not making them appear terribly ... *cough* on top of things

[16:02:00.0000] <zewt>
it's almost as if they ignored web storage while it was out in production for years, waiting until it's going to LC to even bother looking at it

[17:02:00.0000] <zcorpan>
zewt: what do you mean "as if"

[17:02:01.0000] <zcorpan>
hmm. past bedtime. nn

[17:17:00.0000] <tantek>
oops just saw Hixie's yt

[17:18:00.0000] <tantek-ipod>
Now here as tpod also

[17:18:01.0000] <tantek>
oh look at that

[18:14:00.0000] <zewt>
bluh

[18:14:01.0000] <zewt>
there's that other glenn :|

[19:23:00.0000] <roc>
TabAtkins: I'm just going to send our proposed list of properties to www-style right now

[20:00:00.0000] <roc>
well, that should generate some discussion

[20:04:00.0000] <zewt>
should I fear

[20:04:01.0000] <zewt>
i guess not, since i don't follow www-style

[20:53:00.0000] <Hixie>
aww, missed tantek

[23:43:00.0000] <Ms2ger>
Philip`, isn't this a nice day to work on canvas tests? :)

[23:45:00.0000] <Margle>
ok, so I've asked this before… but this channel… do you guys know each other?

[23:45:01.0000] <Margle>
do you work in the industry?

[23:47:00.0000] <Hixie>
margle: most people here have some relationship to browser vendors, standards organisations, or the like

[23:47:01.0000] <Hixie>
margle: we haven't all met in person though

[23:47:02.0000] <margle>
radsauce

[23:53:00.0000] <hsivonen>
XHR Level 2 FTW! HTML in XHR support landed.

[23:54:00.0000] <hsivonen>
(I'll write a report to public-webapps about the implementation choices.)

[00:31:00.0000] <Ms2ger>
required_props.code = { ... }[code]; required_props[code] = required_props.code;

[00:31:01.0000] <Ms2ger>
/me is confused

[01:22:00.0000] <jacobolus>
is it possible to stick an https page in an iframe on a page at a different domain? I don't want to communicate between the frames, I just want to show its content in a box

[01:27:00.0000] <zcorpan>
sure

[01:28:00.0000] <jacobolus>
oh, nevermind

[01:28:01.0000] <zcorpan>
but if it has an insecure cert or so it won't be shown in some browsers

[01:28:02.0000] <jacobolus>
there's an x-frame-options header :)

[01:28:03.0000] <jacobolus>
that explains it

[01:29:00.0000] <jacobolus>
is that part of any specific spec?

[01:42:00.0000] <zcorpan>
it appears no

[01:43:00.0000] <zcorpan>
added to http://wiki.whatwg.org/wiki/Specifications_TODO

[02:16:00.0000] <annevk>
I like how glazou wrote his post starting from the assumption he would disagree with hsivonen and never really evaluates his position

[02:18:00.0000] <jgraham>
Are you surprised?

[02:19:00.0000] <annevk>
/me assumes rhetorical

[02:19:01.0000] <hsivonen>
annevk: to me, it seems that at some points glazou effectively says that the CSS WG's policies aren't to blame but the browser vendors that comply with the policies

[02:26:00.0000] <annevk>
Which is not just ironic for that reason, it's also ironic because the reason this feature was originally designed for. And he seems ignorant about early IE, not that it matters...

[02:29:00.0000] <annevk>
I think we should just do what is right and have the few people in the CSS WG who think the current crazy is right, adjust

[03:11:00.0000] <annevk>
stevef: if you read this, *both* probably require changes; not either fullscreen or modal dialogs

[03:11:01.0000] <annevk>
stevef: so yes, someone has to look into it, probably someone who knows a lot about stacking contexts and layout fun

[03:13:00.0000] <annevk>
stevef: also, TabAtkins wrote the CCP for ISSUE-134, not sicking

[03:28:00.0000] <gsnedders>
It seems glazou's argument basically makes sense if stuff moves to CR as soon as its stable.

[03:28:01.0000] <gsnedders>
On a per-feature basis.

[03:29:00.0000] <annevk>
wait

[03:29:01.0000] <annevk>
you mean like how HTML living standard works?

[03:29:02.0000] <annevk>
because like you know, he dislikes that

[03:30:00.0000] <gsnedders>
No.

[03:30:01.0000] <gsnedders>
Just split each CSS feature out into a module of its own as soon as it is ready to go to CR.

[03:31:00.0000] <gsnedders>
Doing that allows you to have a model consistent with what glazou is arguing and what browser vendors want, I think.

[03:31:01.0000] <gsnedders>
I think that's the only model that has that quality, though.

[03:32:00.0000] <jgraham>
Ah the infinite editorial work model

[03:33:00.0000] <annevk>
good luck finding people happy to work on that

[03:33:01.0000] <jgraham>
Anyway I think that doesn't work unless the CSSWG use the same definition of "stable" as the rest of the world

[03:33:02.0000] <gsnedders>
On a totally unrelated note, both IE9 and Opera 11.10/Windows limit timer resolution to 60Hz while running on battery to minimize CPU usage — I wonder if that's worth making conforming behaviour…

[03:34:00.0000] <gsnedders>
Or is that already conforming?

[03:34:01.0000] <gsnedders>
Hmmm…

[03:36:00.0000] <gsnedders>
Informative note claims that is conforming, but I'm not sure I understand how.

[03:38:00.0000] <annevk>
http://happyworm.com/blog/2011/11/15/html5-audio-apis-how-low-can-we-go/ "I would strongly urge the developers of it to include a more comprehensive low level API in future releases. What’s the worst that could happen?" *chuckle*

[03:41:00.0000] <jgraham>
gsnedders: Hardware limitations clause

[03:41:01.0000] <gsnedders>
jgraham: It's not a hardware limitation though. I can perfectly well get nanosecond percision from the hardware, I just choose not to.

[03:42:00.0000] <jgraham>
gsnedders: The fact that it will kill the battery unreasonably fast is a hardware limitation

[03:42:01.0000] <annevk>
roc: should fullscreenerror also dispatch only on Document?

[03:43:00.0000] <gsnedders>
"User agents may impose implementation-specific limits on otherwise unconstrained inputs, e.g. to prevent denial of service attacks, to guard against running out of memory, or to work around platform-specific limitations."

[03:43:01.0000] <annevk>
roc: made that change for now

[03:43:02.0000] <gsnedders>
It's not an otherwise unconstrained input, it's constrained to 4ms.

[03:43:03.0000] <gsnedders>
So that clause doesn't apply.

[03:44:00.0000] <annevk>
gsnedders: so your point is that clause should be reworded?

[03:45:00.0000] <gsnedders>
annevk: My point is we have multiple impls that disagree with the spec that don't intend on changing behaviour so the spec should change.

[03:45:01.0000] <gsnedders>
I don't really care how the normative change is made.

[04:14:00.0000] <zcorpan>
gsnedders: iirc the spec allows for arbitrary delay in timers

[04:15:00.0000] <zcorpan>
Optionally, wait a further user-agent defined length of time.

[04:15:01.0000] <zcorpan>
This is intended to allow user agents to pad timeouts as needed to optimise the power usage of the device. For example, some processors have a low-power mode where the granularity of timers is reduced; on such platforms, user agents can slow timers down to fit this schedule instead of requiring the processor to use the more accurate mode with its associated higher power usage.

[04:16:00.0000] <gsnedders>
does "user-agent defined" mean it have to be constant?

[04:16:01.0000] <zcorpan>
why would it?

[04:31:00.0000] <gsnedders>
In other news, TabAtkins: happy birthday!

[04:35:00.0000] <bga_>
+1

[05:45:00.0000] <annevk>
eh

[05:45:01.0000] <annevk>
speccing stacks

[05:45:02.0000] <annevk>
:(

[06:05:00.0000] <AryehGregor>
jgraham, I don't really care where the patches are stored prior to review.  They can be somewhere other than a branch, that's fine by me.

[06:08:00.0000] <jgraham>
AryehGregor: The point is commit-to-branch-then-review gives you the benefits of version control for your unrevieweed changes. For example a new commit to the same branch represents a fix to the previous commits to address review comments or fix bugs

[06:09:00.0000] <AryehGregor>
Possibly.

[06:09:01.0000] <AryehGregor>
Unrelated: what browsers need to do is have on-by-default instrumentation that sends back info to the browser vendor in a manner that doesn't breach user privacy.

[06:09:02.0000] <AryehGregor>
For instance:

[06:10:00.0000] <AryehGregor>
If you want to know for what percentage of users a boolean B is true, send back a bit computed as follows: with probability 0.99999, send a random bit.  With probability 0.00001, send B.

[06:11:00.0000] <annevk>
AryehGregor: fwiw, I have filed several bugs on Gecko regarding removing redundant/obsolete for which Ms2ger provided patches that are now removed from the platform

[06:11:01.0000] <annevk>
AryehGregor: you could do the same

[06:12:00.0000] <AryehGregor>
Then add all the received bits together, divide by the number of bits, subtract 0.444445, multiply by 100,000.

[06:12:01.0000] <AryehGregor>
If you have enough users, that should give you the correct percentage of users for which B is true.

[06:13:00.0000] <AryehGregor>
But for any given user, the bit is 99.999% likely to be noise, so it yields negligible information.

[06:13:01.0000] <AryehGregor>
Submit all these bits back every time you check for an update.

[06:13:02.0000] <AryehGregor>
That would be incredibly useful data at no cost to privacy.

[06:14:00.0000] <AryehGregor>
You could submit the value of every boolean pref, and also things like "was Range.detach() called by any page since the last update".

[06:14:01.0000] <AryehGregor>
For that matter, you could just throw in whether every single JS-exposed method was called since the last update.

[06:15:00.0000] <AryehGregor>
Thereby gaining a list of methods that are effectively never used.

[06:15:01.0000] <AryehGregor>
Wouldn't it be great if we had data like that?

[06:16:00.0000] <annevk>
sure

[06:19:00.0000] <AryehGregor>
https://bugzilla.mozilla.org/show_bug.cgi?id=702948

[06:44:00.0000] <AryehGregor>
Okay, why does this throw an exception? [""].map("".trim)

[06:44:01.0000] <AryehGregor>
But "".trim.call("") does not.

[06:45:00.0000] <bga_>
in 1st case use pass {window} as {this}

[06:45:01.0000] <AryehGregor>
Why is that necessary?

[06:45:02.0000] <bga_>
{window} is not string

[06:46:00.0000] <AryehGregor>
Oh.

[06:46:01.0000] <AryehGregor>
Hmm?

[06:46:02.0000] <AryehGregor>
I don't get it.

[06:46:03.0000] <AryehGregor>
The function is called on the array elements, no?

[06:46:04.0000] <AryehGregor>
Oh.

[06:46:05.0000] <AryehGregor>
No, I still don't get it.

[06:47:00.0000] <bga_>
you want trim(arguments[0])

[06:47:01.0000] <bga_>
but native trim is str.trim(), not trim(arg)

[06:48:00.0000] <AryehGregor>
Oh, right.

[06:48:01.0000] <AryehGregor>
It's operating on the this value, not on the first argument.

[06:49:00.0000] <AryehGregor>
So really I need [""].map(function(s) { return s.trim() }).

[06:49:01.0000] <AryehGregor>
Okay.

[06:49:02.0000] <AryehGregor>
Awkward, but makes sense now.

[07:01:00.0000] <hsivonen>
foolip: thanks for the typo notification on G+. Fixed.

[07:02:00.0000] <foolip>
/me is a bit sad to see the CSS WG co-chair "totally disagree and will do all I can to avoid that"

[07:04:00.0000] <annevk>
W3C TAG is pretty sad state of affairs too

[07:04:01.0000] <Rik`>
I thought co-chairs shouldn't express their opinions as co-chairs

[07:04:02.0000] <annevk>
Art is cool (co-chair WebApps)

[07:07:00.0000] <annevk>
Rik`: http://www.w3.org/2005/10/Process-20051014/process.html#GeneralChairs defers to a Member-only document with respect to the roles of a Chair

[07:08:00.0000] <annevk>
Rik`: but yes, one of the rules that is pretty widely known is that a Chair removes his "Chair-hat" when participating in a discussion

[07:09:00.0000] <annevk>
Rik`: not sure what the practical difference is though

[07:10:00.0000] <Rik`>
every time glazou talks about CSS, he mentions his role as co-chair instead of member

[07:11:00.0000] <Rik`>
that kind of implies that he has a bigger voice for decisions

[07:19:00.0000] <Philip`>
A chair hat sounds like it could cause serious spinal injuries

[07:20:00.0000] <wilhelm_>
That would explain a lot.

[07:22:00.0000] <zcorpan>
i read on google plus earlier that they care about page load speed. now when i'm on the train i can't load google plus at all, but facebook and twitter load fine

[07:22:01.0000] <annevk>
don't believe everything you read? :p

[07:23:00.0000] <zcorpan>
that doesn't help me with getting it loaded :)

[07:25:00.0000] <jgraham>
Use the time to try and beat your social networking addiction?

[07:26:00.0000] <Rik`>
I've heard wordpress loads fine

[07:27:00.0000] <zcorpan>
i just wanted to read the comments on Hixie's <time> post, but plus wants me to do something else clearly

[07:33:00.0000] <jgraham>
zcorpan: I have now read them for you. TLDR: blah blah, whine, moan, WHATWG is evil, blah

[07:35:00.0000] <gavinc>
jgraham: by that summary I guess Ian's post was blah blah, whine, moan, W3C is evil, blah

[07:39:00.0000] <foolip>
gavinc, almost exactly, yes: https://plus.google.com/107429617152575897589/107429617152575897589/posts/3ZEQAVkF6xd

[07:39:01.0000] <gavinc>
foolip: yeah, I have read...  and commented

[07:42:00.0000] <jgraham>
gavinc: Plus a couple of sentences of useful information, yeah

[07:42:01.0000] <hsivonen>
It sucks that Hixie does stuff like the <time> removal. stunts like that make people more afraid of Living Standards and makes it harder to advocate changes to the way the CSS WG does stuff

[07:43:00.0000] <hsivonen>
s/and/which/

[07:43:01.0000] <foolip>
hsivonen, do you think it was obvious from the initial bug that removing it was a bad idea?

[07:47:00.0000] <hsivonen>
foolip: politically, yes. I think I'm going to stay out of the technical debate for a while still.

[07:47:01.0000] <jgraham>
hsivonen: It seems to me that characterising it as a "stunt" is unfair. It also seems to me that the new use cases (the ones I head orally; I haven't checked the wiki page) are pretty shaky; in particular the value to a search engine of a <time> with no context about what type of time it is seems rather small. But I am happy to accept that the risk of including the element is small compared to the chance of it being useful

[07:47:02.0000] <hsivonen>
(the political side matters as far as making people scared of Living Standards)

[07:47:03.0000] <hsivonen>
jgraham: ok. maybe calling it a "stunt" is unfair. sorry

[07:48:00.0000] <foolip>
sure, it's completely unsurprising that some people got upset

[07:49:00.0000] <annevk>
thanks for your XHR email hsivonen

[07:49:01.0000] <annevk>
hsivonen: not sure when I get to it yet

[07:49:02.0000] <annevk>
hsivonen: all these little patches to specs all over is taking its time

[07:58:00.0000] <hsivonen>
annevk: ok. it will be interesting to see how badly non-null responseXML for error responses breaks the Web

[08:04:00.0000] <zcorpan>
http://www.google.com/codesearch#search/&q=%5C.responseXML%5Cs*%5C!?===?%5Cs*null&type=cs

[08:05:00.0000] <zcorpan>
there you can see a few sites to test, like fckeditor

[08:06:00.0000] <AryehGregor>
Ugh, why does rdesktop to an EC2 Windows instance require a million tries before it works?

[08:06:01.0000] <Ms3ger>
http://www.google.com/codesearch#search/&q=\.responseXML\s*[\!=]==?\s*null&type=cs might work better

[08:14:00.0000] <karlcow>
/me sees the "public domain" license on http://dvcs.w3.org/hg/fullscreen/raw-file/tip/Overview.html and wonders about the implication with French law. 

[08:14:01.0000] <karlcow>
I guess it doesn't matter given the nationality of the two editors. No idea.

[08:14:02.0000] <karlcow>
Doomed copyright laws.

[08:19:00.0000] <annevk>
karlcow: CC0 1.0 should work no? (which is what it is)

[08:20:00.0000] <annevk>
smaug____: should we prevent sync for cross-origin requests entirely?

[08:21:00.0000] <AryehGregor>
Okay, so it turns out that no one but IE even pretends to implement IDLs from (for instance) DOM4 per spec.

[08:21:01.0000] <AryehGregor>
The prototypes don't have the expected properties at all.

[08:22:00.0000] <AryehGregor>
Like, say, Node.prototype.nodeType is just undefined except in IE.

[08:22:01.0000] <AryehGregor>
IE9 implements spec almost perfectly.

[08:23:00.0000] <karlcow>
annevk: not sure. An author in France can't put his work in the public domain. It doesn't exist. The work will be upgraded to public domain 70 years after the death of the author, but he can't do it before. (which is stupid we agree.)

[08:23:01.0000] <AryehGregor>
In Gecko, it looks like all the properties are just dumped on the thing lowest on the prototype chain.  Like nodeType is in Text.prototype and Element.prototype, but not Node.prototype.

[08:24:00.0000] <annevk>
karlcow: yes but CC0 is a copyright

[08:25:00.0000] <annevk>
karlcow: copyright license

[08:25:01.0000] <karlcow>
hmm indeed. The name is confusing.

[08:26:00.0000] <AryehGregor>
In WebKit, it looks like document has a property nodeType which is neither an own property nor anywhere in the prototype chain.

[08:26:01.0000] <AryehGregor>
Which is HTMLDocument -> Document -> Node -> Object as expected.

[08:27:00.0000] <AryehGregor>
-> null.

[08:29:00.0000] <AryehGregor>
Opera seems similar.

[08:29:01.0000] <AryehGregor>
Gecko has the property on the prototype too, but not as an own property.

[08:29:02.0000] <AryehGregor>
/me shakes head in disbelief

[08:29:03.0000] <AryehGregor>
I guess we just get lots of tests that only IE passes, huh?

[08:30:00.0000] <AryehGregor>
Well, it depends on the interface.  Selection is more sane in Gecko, for instance.

[08:30:01.0000] <AryehGregor>
/me goes back to adding features to his tests

[08:33:00.0000] <tantek>
/me rejoins from Redmond.

[08:48:00.0000] <tantek>
/me reads https://plus.google.com/107429617152575897589/posts/3ZEQAVkF6xd to catch up on the fun.

[08:52:00.0000] <dglazkov>
good morning, Whatwg!

[08:53:00.0000] <Rik`>
http://blogs.computerworlduk.com/open-enterprise/2011/11/mozillas-brendan-eich-on-the-birth-of-firefox/index.htm

[08:53:01.0000] <Rik`>
wow, I never knew hyatt was at Apple when working on Phoenix

[08:59:00.0000] <tantek>
/me realizes he should have asked for a time extension for the revert request regarding time/data during last week's HTML WG teleconference. :/

[09:06:00.0000] <annevk>
tantek: yeah well

[09:06:01.0000] <annevk>
tantek: it'll be sorted out in due course

[09:07:00.0000] <tantek>
/me is still a bit slow on all the W3C process stuff.

[09:07:01.0000] <tantek>
yeah, but with unfortunate wasted time on the part of Mike Smith and Hixie.

[09:07:02.0000] <annevk>
most WGs don't have this

[09:07:03.0000] <tantek>
/me really hates source control gymnastics and thus sympathizes greatly with both of them.

[09:08:00.0000] <AryehGregor>
jgraham, do you propose any way of parsing IDLs from JS other than lots of messy regex?

[09:08:01.0000] <AryehGregor>
Because that's pretty much working for me so far, but it doesn't seem super ideal.

[09:12:00.0000] <jgraham>
AryehGregor: Write or steal a proper parser?

[09:12:01.0000] <AryehGregor>
jgraham, such as from where?

[09:12:02.0000] <jgraham>
Well one exists but it depends on peg.js and I don't know how that plays with licenses

[09:12:03.0000] <AryehGregor>
Will it parse WebIDL's format, anyway?

[09:12:04.0000] <jgraham>
(google for WebIDL parser javascript)

[09:12:05.0000] <AryehGregor>
Oh, there are WebIDL-specific ones, nice.

[09:12:06.0000] <AryehGregor>
I've already got a mostly-working regex one, but it's slightly horrifying.

[09:13:00.0000] <AryehGregor>
Or more than slightly.

[09:13:01.0000] <AryehGregor>
Perhaps extremely.

[09:13:02.0000] <AryehGregor>
You are probably not surprised at my approach to the problem.

[09:13:03.0000] <jgraham>
The alternative is just to write one. Which could be fun but has a cost.

[09:15:00.0000] <jgraham>
(it seems like the licensing terms are rather OK)

[09:16:00.0000] <smaug____>
annevk: CORS has been supported quite a long time

[09:16:01.0000] <jgraham>
I would suggest that whatever we do we put all of this into a different script that one must include in addition to testharness[report].js

[09:16:02.0000] <smaug____>
annevk: so preventing sync might break some sites

[09:17:00.0000] <smaug____>
(I wouldn't be surprised it for example Google Docs would break)

[09:17:01.0000] <smaug____>
s/it/if/

[09:22:00.0000] <AryehGregor>
jgraham, why?

[09:24:00.0000] <jgraham>
AryehGregor: Because it is a significant amount of extra script that isn't needed (and doesn't have to be understood) for most tests

[09:24:01.0000] <AryehGregor>
Okay, doesn't matter to me.

[09:25:00.0000] <jgraham>
A typical API will need one file that does generate_idl_tests(IDL)

[09:25:01.0000] <AryehGregor>
I was thinking a better API would be to expose an extra type of object that can generate various sorts of tests from the IDL.

[09:25:02.0000] <AryehGregor>
So you might want to test that a specific object is an instance of an interface, for instance.

[09:25:03.0000] <jgraham>
Maybe

[09:26:00.0000] <jgraham>
In any case having that all in a single file per API seems reasonable

[09:26:01.0000] <jgraham>
and not having the extra code in other tests for the same API also seems reasonable

[09:31:00.0000] <AryehGregor>
Okay, so it looks like the first interface I tried testing in the WebIDL parser is actually an invalid WebIDL interface to start with.

[09:31:01.0000] <AryehGregor>
It has an enum, which apparently doesn't exist in WebIDL.

[09:31:02.0000] <AryehGregor>
Good error to catch.

[09:32:00.0000] <AryehGregor>
(this is Range per DOM4)

[09:33:00.0000] <AryehGregor>
Seems to work nicely.

[10:24:00.0000] <AryehGregor>
jgraham, okay, so my proposed syntax is now new IdlInterface('interface .....').test(); to test.

[10:24:01.0000] <AryehGregor>
That runs tests based on the interface object itself.

[10:24:02.0000] <AryehGregor>
Then later we can add methods that test other things, like test that something is an instance of the interface.

[10:24:03.0000] <AryehGregor>
Sound good?

[10:25:00.0000] <AryehGregor>
The code is in its own file that has to be included separately.

[10:27:00.0000] <AryehGregor>
I'll commit the WebIDL parser too, which says it's under the MIT license, which I assume is fine.

[10:30:00.0000] <annevk>
you have a proper WebIDL parser?

[10:30:01.0000] <annevk>
cool

[10:30:02.0000] <AryehGregor>
annevk, https://github.com/darobin/webidl.js/tree/

[10:30:03.0000] <AryehGregor>
It seems to work for all the correct IDLs I've tried so far.

[10:30:04.0000] <AryehGregor>
The Range IDL in DOM4 is wrong, I think, it uses a construct (enum) not defined by WebIDL.

[10:31:00.0000] <annevk>
yeah, DOM might soon use some other non-standard constructs

[10:31:01.0000] <annevk>
union!

[10:31:02.0000] <zewt>
D:

[10:31:03.0000] <AryehGregor>
:(

[10:32:00.0000] <AryehGregor>
Define them in WebIDL plz?

[10:32:01.0000] <AryehGregor>
. . . also, what would a union be in JS?

[10:32:02.0000] <annevk>
union is mostly for vararg overloading

[10:33:00.0000] <annevk>
and I suspect heycam will add it in due course

[10:33:01.0000] <annevk>
but can't have all new features wait for Web IDL improvements

[10:34:00.0000] <zewt>
union sort of implies overlapping memory, though, which doesn't make sense in JS of course

[10:37:00.0000] <AryehGregor>
http://dvcs.w3.org/hg/html/file/ecdfd06cbdc9/tests/resources/idlharness.js

[10:49:00.0000] <zcorpan>
AryehGregor: seriously cool

[10:50:00.0000] <zcorpan>
AryehGregor: it might be annoying that you have to use one string per interface

[10:50:01.0000] <AryehGregor>
As opposed to just one giant string that you run all the tests on?

[10:50:02.0000] <AryehGregor>
That should be relatively easy to change.

[10:51:00.0000] <zcorpan>
yeah

[10:51:01.0000] <AryehGregor>
http://aryeh.name/tmp/webapps/DOMCore/tests/submissions/AryehGregor/interfaces.html

[10:51:02.0000] <AryehGregor>
The thing is, I want to add other methods like IdlInterface.prototype.test_instance() that tests something is an instance of the interface, say.

[10:52:00.0000] <AryehGregor>
Although maybe a better strategy would be to concatenate all the IDLs from all the specs and have one giant IDL object that represents everything about all standard IDLs.

[10:52:01.0000] <AryehGregor>
That would give the most flexibility for testing.

[10:52:02.0000] <AryehGregor>
But this is a good start, I think.

[10:53:00.0000] <zcorpan>
i dunno, but i imagined that it would be nice to use the interfaces in a <script> data block instead of using \n\

[10:53:01.0000] <AryehGregor>
That would be less ugly, certainly.

[10:53:02.0000] <zcorpan>
i agree it should be possible to test instances

[10:54:00.0000] <AryehGregor>
http://w3c-test.org/webapps/DOMCore/tests/submissions/AryehGregor/interfaces.html

[10:55:00.0000] <zcorpan>
maybe testing instance could be a bit different. like you parse all interfaces first, then call a method like testInstance(instance, 'HTMLVideoElement') or something

[10:57:00.0000] <AryehGregor>
Potentially, yeah.

[10:58:00.0000] <AryehGregor>
Improvements welcome.

[10:59:00.0000] <AryehGregor>
For now, I have to get back to actual Selection/Range stuff . . . this has been a bit of a detour.

[10:59:01.0000] <zcorpan>
really nice work

[11:03:00.0000] <AryehGregor>
There's loads more to do.

[11:03:01.0000] <AryehGregor>
WebIDL has tons of requirements that could be tested.

[11:05:00.0000] <zcorpan>
i've wanted to write this sort of thing myself, so i might just jump in

[11:06:00.0000] <AryehGregor>
:)

[11:09:00.0000] <wilhelm_>
Very nice indeed.

[11:19:00.0000] <roc>
AryehGregor, jgraham: David Flanagan's dom.js project has a WebIDL parser in JS

[11:19:01.0000] <tantek>
hey brucel - you had questions about <time>

[11:19:02.0000] <AryehGregor>
roc, interesting.  I found a (presumably) different one that seems to work well enough.

[11:20:00.0000] <jgraham>
AryehGregor: Cool.

[11:20:01.0000] <jgraham>
AryehGregor: I don't want to have one giant IDL block though

[11:21:00.0000] <AryehGregor>
jgraham, that would be what's easiest if we use <script> for data.

[11:21:01.0000] <jgraham>
You should be able to copy from the spec, paste it into a test file and get useful tests

[11:21:02.0000] <AryehGregor>
Which would be nicer.

[11:21:03.0000] <AryehGregor>
Yes, but there are some tests that you can't do easily unless the test knows about all the different IDLs.

[11:21:04.0000] <jgraham>
Such as?

[11:21:05.0000] <AryehGregor>
Like if one interface has a member whose type is another interface.

[11:21:06.0000] <AryehGregor>
I guess you don't need to do all the checks on that, though.

[11:22:00.0000] <AryehGregor>
Just instanceof would probably be fine.

[11:22:01.0000] <jgraham>
Yeah

[11:22:02.0000] <AryehGregor>
Which doesn't need the IDL for the other interface.

[11:22:03.0000] <jgraham>
Indeed

[11:22:04.0000] <jgraham>
the other interface can be tested seperatly

[11:24:00.0000] <jgraham>
Also, as gsnedders said, there is probably a great deal one can do if one has an API that takes an IDL block and a function returning an object that should implement that IDL block

[11:24:01.0000] <roc>
I don't think hsivonen and glazou disagree all that much. Everyone agrees that if browsers never shipped prefixed/non-CR stuff in release builds, we wouldn't have a problem

[11:25:00.0000] <AryehGregor>
jgraham, I was thinking that would be a separate method on IdlInterface.

[11:25:01.0000] <jgraham>
roc: That seems like a pointless thing to agree on since it won't ever happen (people not shipping in release until CR)

[11:25:02.0000] <AryehGregor>
Yay, I wrote a test that passes in Firefox if I run it in Firebug but fails if I run it without Firebug.

[11:25:03.0000] <roc>
yeah, the major point of difference is that glazou thinks that's possible

[11:25:04.0000] <zcorpan>
instanceof won't work if the interface is [NoInterfaceObject]

[11:26:00.0000] <jgraham>
roc: And therein lies the problem. Glazou seems to have a broken idea of the market dynamics

[11:26:01.0000] <AryehGregor>
zcorpan, hmm, true.

[11:26:02.0000] <jgraham>
zcorpan: True, but that's a bit of an edge case

[11:26:03.0000] <tantek>
woo - ratholing on prefixes again?

[11:26:04.0000] <tantek>
anyone want to talk <time> element instead? ;)

[11:27:00.0000] <zcorpan>
<time> to go!

[11:33:00.0000] <hsivonen>
roc: I'm not expecting stuff to stay in experimental builds until CR under the current CSS WG notion of CR

[11:33:01.0000] <roc>
I'm not either

[11:34:00.0000] <hsivonen>
roc: I expect stuff to go to release when the pressure to ship outweighs doubts about the design of the feature

[11:34:01.0000] <smaug____>
not removing prefixes causes also some problems. That indicates to authors that they can rely on feature, although the feature should be just experimental

[11:34:02.0000] <smaug____>
/me doesn't quite understand why webkit doesn't remove prefixes

[11:35:00.0000] <hsivonen>
smaug____: shipped features aren't really experimental

[11:35:01.0000] <smaug____>
they can be

[11:35:02.0000] <smaug____>
if it is clear to everyone that prefixed things can go away at any point

[11:35:03.0000] <jgraham>
The problem with the notion of "experimental" builds is that typically the features aren't used by enough users to get really good feedback

[11:35:04.0000] <hsivonen>
smaug____: the authors decide what they treat as experimental when stuff is in release builds

[11:35:05.0000] <smaug____>
but apparently that isn't happening, at least in some browser engines

[11:36:00.0000] <jgraham>
(I'm excluding nightly/dev track builds where features are on by default and expected to transition into the next release)

[11:36:01.0000] <hsivonen>
smaug____: WGs or vendors don't get to make authors treat stuff as experimental after shipping

[11:37:00.0000] <jgraham>
Well I say "the" problem; I mean "one of the problems"

[11:37:01.0000] <smaug____>
hsivonen: well, part of that problem is that prefixes aren't being removed actively

[11:38:00.0000] <hsivonen>
smaug____: I wouldn't be too surprised if the bar for removing a -webkit-prefixed feature was around the bar for removing a Cocoa API call from Mac OS X

[11:38:01.0000] <hsivonen>
smaug____: dunno what their actual policy is

[11:39:00.0000] <hsivonen>
(I'd appreciate a pointer to their policy if there is one)

[11:40:00.0000] <jgraham>
AryehGregor: So, it would be nice if we could structure the code in some more straightforward way. I'm not sure quite what that is, but given an attribute x on a property y, it would be nice if all the tests for (x,y) were localised in a given place

[11:40:01.0000] <AryehGregor>
jgraham, what do you mean?

[11:43:00.0000] <roc>
hsivonen: I started a thread on www-style about removing prefixes from some CSS properties, you may wish to contribute

[11:45:00.0000] <Hixie>
hsivonen: i am offended by your characterisation of replacing <time> with <data> as a "stunt"

[11:53:00.0000] <AryehGregor>
jgraham, to test that an object implements an interface, you also want to test that it implements all the interfaces that one inherits.  If we don't have a single object that knows about lots of IDLs, this means you'll have to do something like test_implements(document, "HTMLDocument"); test_implements(document, "Document"); test_implements(document, "Node"); which a) is error-prone, b) doesn't test that the inheritance is in the correct orde

[11:53:01.0000] <AryehGregor>
r.

[11:54:00.0000] <AryehGregor>
(although I don't know if (b) is actually meaningful)

[11:54:01.0000] <hsivonen>
roc: I already posted one contribution to the thread

[11:55:00.0000] <roc>
ok

[11:55:01.0000] <hsivonen>
Hixie: I'm sorry about my bad choice of words. I think the removal of <time> in that manner was bad PR for the Living Standard model and for HTML5

[11:56:00.0000] <Hixie>
yes

[11:56:01.0000] <Hixie>
clearly :-)

[11:57:00.0000] <Hixie>
but these things will happen

[12:17:00.0000] <Hixie>
if anyone is interested in <time>'s duration syntax, it would be really helpful if you could fill out http://www.whatwg.org/specs/web-apps/current-work/temp and mail me your results

[12:17:01.0000] <Hixie>
also feel free to add any other cases you think are important

[12:18:00.0000] <Hixie>
tantek: it would be really helpful if you could fill out http://www.whatwg.org/specs/web-apps/current-work/temp and mail me your results (feel free to add any other cases you think are important)

[12:18:01.0000] <dglazkov>
is there a spec for the Living Standard Model?

[12:18:02.0000] <Hixie>
dglazkov: "put the spec on the web and keep it updated"

[12:19:00.0000] <dglazkov>
:)

[12:19:01.0000] <Hixie>
bbiab

[12:28:00.0000] <tantek_>
Hixie, I do think we can improve on ISO8601's duration syntax

[12:28:01.0000] <tantek_>
what I wrote up on the Time wiki page was my first thoughts

[12:29:00.0000] <AryehGregor>
What's an example of a real-world interface that has two operations with the same name?  Anything?

[12:29:01.0000] <AryehGregor>
DOM4 doesn't have any.

[12:29:02.0000] <Ms2ger>
Canvas?

[12:32:00.0000] <AryehGregor>
createPattern, okay.

[12:34:00.0000] <Ms2ger>
> "CSS3 browser" and "CSS4 browser" are meaningless terms.

[12:34:01.0000] <Ms2ger>
No, they are not.  If that were the case, there is no point in having Level 4 vs. Level 3 modules.

[12:34:02.0000] <Ms2ger>
Who's going to tell Brian there's no point?

[12:35:00.0000] <jamesr_>
there's a point to having level 3 vs level 4 modules?

[12:35:01.0000] <jamesr_>
news to me

[12:37:00.0000] <tantek_>
different level modules yes. making claims of a "CSS3 Browser" or "CSS4 Browser" no.

[12:38:00.0000] <roc>
I agree with tantek

[12:39:00.0000] <roc>
well, somewhat. I'm not sure if labeling modules with revision levels is a good idea, but it doesn't matter here

[12:41:00.0000] <tantek>
roc, the way I see the revision levels is basically for snapshotting sets of "stable" feature

[12:41:01.0000] <tantek>
features

[12:41:02.0000] <tantek>
per module

[12:41:03.0000] <roc>
yes

[12:42:00.0000] <tantek>
to translate with the "living spec" terminology -

[12:42:01.0000] <roc>
but it's a heavyweight process which requires us to make editorial decisions, sometimes controversial ones, to allow stable features to progress independent of unstable features

[12:42:02.0000] <roc>
we could fix that by putting every feature in its own module, but that would create new problems

[12:43:00.0000] <roc>
or, we could simply fix it by allowing features within the same module to be independently marked stable, at least for unprefixing purposes

[12:43:01.0000] <roc>
which is what I'm proposing

[12:43:02.0000] <tantek>
module X level N is the live version until it enters CR at which point it becomes a feature freeze fork (where some features may be dropped), and module x level N+1 becomes the live version

[12:44:00.0000] <tantek>
yeah, at what point during CR do prefixes get dropped is an interesting question

[12:44:01.0000] <tantek>
I've heard a variety of different opinions

[12:44:02.0000] <tantek>
though there is some convergence on CR + test suite for a feature/property/value + prefixed 2 implementations that behave the same way = ok to unprefix that feature/property/value

[12:45:00.0000] <tantek>
and yes that would mean features/properties/values within the same specification being marked independently "stable" for the purpose of removing vendor prefixes

[12:46:00.0000] <tantek>
those 3 conditions (CR, tests, 2+ interoperable prefixed implementations) are from experience in the CSS WG

[12:46:01.0000] <tantek>
though one could make a case that the CR portion of that is a "nice to have"

[12:46:02.0000] <Ms2ger>
Would be great to have tests, of course

[12:47:00.0000] <tantek>
Ms2ger - I think it is irresponsible to remove prefixes from a feature without tests for the feature.

[12:47:01.0000] <astearns>
can't assess "interoperable" without tests

[12:47:02.0000] <jamesr_>
in practice css module revision #s seem mostly like a way to punt on proposals by saying "we'll think about that in revision N+1"

[12:47:03.0000] <tantek>
astearns, bingo

[12:47:04.0000] <Ms2ger>
tantek, in the implementation's or the standard's test suite?

[12:48:00.0000] <tantek>
Ms2ger the latter - with tests that use the prefixed version(s)

[12:48:01.0000] <Ms2ger>
All for, glwt

[12:48:02.0000] <tantek>
jamesr_ I hear your frustration.

[12:51:00.0000] <roc>
jamesr_: that's a good thing

[12:51:01.0000] <roc>
well, it's good to be able to stop people adding stuff that prevents the spec from progressing

[12:51:02.0000] <roc>
it's not good to have new features gated on the progress of unrelated features

[12:52:00.0000] <tantek>
jamesr_ also - for any specific CSS proposal, there's always a way for folks to incrementally develop them, on the www-style list, on wiki.csswg.org etc.

[12:52:01.0000] <roc>
but you can never reach unprefixed status that way

[12:52:02.0000] <tantek>
and that way, as roc points out, such ideas can be iterated without blocking more mature features.

[12:54:00.0000] <roc>
astearns: authors assess "interoperable" when they routinely pass the same values to all browsers' prefixed properties

[12:54:01.0000] <roc>
when that's happening, it's interoperable enough

[12:54:02.0000] <astearns>
that's determined by their own testing for when they can do that reliably

[12:55:00.0000] <astearns>
for what ever value of "reliably" works for them

[12:55:01.0000] <jamesr_>
roc, i think it's a good thing to punt

[12:55:02.0000] <jamesr_>
so long as there are good reasons

[12:57:00.0000] <roc>
astearns: yeah, that's what "interoperable enough" means

[12:58:00.0000] <astearns>
so it's not a complete test suite that's needed. Just enough to check what authors mean for "interoperable"

[12:58:01.0000] <tantek>
astearns, anyone can submit test cases for CSS features.

[12:59:00.0000] <tantek>
so for any author complaining about prefixes, I say, submit what test cases you think demonstrate interop between prefixed implementations.

[12:59:01.0000] <Ms2ger>
Ah, and who does?

[12:59:02.0000] <Ms2ger>
Apart from Gérard

[12:59:03.0000] <roc>
realistically, they're not going to submit testcases

[13:00:00.0000] <astearns>
I'm encouraging the teams at Adobe who code around browser incompatibilities to submit tests :)

[13:00:01.0000] <roc>
making this whole process depend on authors doing work is doomed

[13:00:02.0000] <tantek>
roc, it makes sense to put burden on the complainers

[13:00:03.0000] <tantek>
as a logical extension of the OSS "patches welcome" philosophy

[13:02:00.0000] <zewt>
... it hardly seems appropriate to label people who want interoperable APIs as "complainers"

[13:02:01.0000] <roc>
if we could aggregate and harness the negative energy of millions of Web developers for useful purposes, we could be as gods

[13:02:02.0000] <zewt>
heh

[13:04:00.0000] <TabAtkins>
roc: I believe that prefixes are, in general, a good thing, but that prefixes, in several particular instances we're struggling with, have been a bad thing due to the specs languishing in a pre-CR state.

[13:04:01.0000] <roc>
I'm undecided on the former, but we can fix the latter independent of that

[13:05:00.0000] <TabAtkins>
Yes, we can.

[13:05:01.0000] <zewt>
TabAtkins: for CSS prefixes specifically, or scripting prefixes as well?

[13:05:02.0000] <TabAtkins>
And we can also limit the pain that such languishing causes in the future, and maybe even produce a dynamic that makes languishing explicitly antisocial.

[13:05:03.0000] <TabAtkins>
By, for example, limiting prefixed properties to beta or earlier only.

[13:05:04.0000] <zewt>
people tend to say "prefixes" when they're thinking more of one or the other, i think

[13:05:05.0000] <TabAtkins>
zewt: Both, in my opinion.

[13:06:00.0000] <roc>
I would love to have a world where prefixed properties aren't in release builds

[13:06:01.0000] <TabAtkins>
roc: We've seriously considered it.

[13:06:02.0000] <TabAtkins>
roc: We need to make a pact.

[13:06:03.0000] <zewt>
it's not clear to me, since the entire "living standard" concept essentially discards the notion of arriving at CR

[13:07:00.0000] <tantek>
TabAtkins - the game theory of the situation won't allow that to happen: "a world where prefixed properties aren't in release builds"

[13:07:01.0000] <TabAtkins>
zewt: That's not true.  Push the CSSWG just a *little* bit farther, and you ahve a living stadnard within the confines of W3C process.

[13:07:02.0000] <tantek>
good luck on eliminating -webkit- properties from release Safari builds

[13:07:03.0000] <TabAtkins>
tantek: Eliminating the current ones, of course not.

[13:07:04.0000] <TabAtkins>
But keeping new ones from trickling down is doable.

[13:07:05.0000] <zewt>
TabAtkins: i'm more familiar with the scripting side of things than CSS

[13:07:06.0000] <tantek>
zewt see above my translation of module levels to living spec

[13:08:00.0000] <tantek>
Tabatkins, I agree, CSSWG is approaching living spec-like working routines

[13:08:01.0000] <tantek>
I think we can get there

[13:08:02.0000] <TabAtkins>
Doing a proper living standard within the process just requires small modules and active pushing to CR.

[13:08:03.0000] <tantek>
TabAtkins - I think it requires more than that, but those are good steps

[13:09:00.0000] <zewt>
a simple case i'm thinking of is eg. webkitURL.createObjectURL, and wondering when that should be unprefixed, since even after that API is fairly stable and interoperably implemented (and it probably is, at this point), new methods will presumably be added to URL in the future

[13:09:01.0000] <tantek>
e.g. when module X level N goes to CR, issuing a public WD of module X level N+1

[13:09:02.0000] <zewt>
in that particular case, i suppose it makes more sense to prefix the methods, instead of URL itself

[13:09:03.0000] <tantek>
right

[13:09:04.0000] <TabAtkins>
zewt: Yes, once the core object is "stable", you prefix methods.

[13:09:05.0000] <tantek>
it's case by case

[13:09:06.0000] <tantek>
even in CSS

[13:09:07.0000] <tantek>
sometimes we prefix properties

[13:09:08.0000] <zewt>
(URL.webkitCreateObjectURL instead of webkitURL.createObjectURL)

[13:09:09.0000] <tantek>
other times, values

[13:09:10.0000] <TabAtkins>
Just like how, in CSS, you start by prefixing the property, and later prefix the values.

[13:10:00.0000] <tantek>
lol, take it away TabAtkins :)

[13:10:01.0000] <TabAtkins>
Hehe. ^_^

[13:11:00.0000] <zewt>
(of course, prefixing loses a lot of its meaning unless everyone does it, and firefox doesn't prefix URL, heh--though it doesn't lose *all* meaning)

[13:13:00.0000] <Phrogz_>
http://www.whatwg.org/specs/web-apps/current-work/multipage/origin-0.html#origin has three specs relating to data: urls on images. The last two confuse me. What does the word "found" mean in the context of "found in another Document or script"?

[13:13:01.0000] <Phrogz_>
I suspect that it is the last spec that is preventing this page: http://phrogz.net/SVG/svg_to_png.xhtml from working as intended. Chrome is throwing a security error trying to round trip an SVG image from the same document through a canvas.

[13:15:00.0000] <TabAtkins>
No, that's not it.  We just specifically taint canvases when you draw any SVG into them.

[13:15:01.0000] <Phrogz_>
TabAtkins: Oh? Can't tell if you're joking or not. If not...why on earth?

[13:15:02.0000] <TabAtkins>
Not joking.  It's because the security issues are complicated, and we're punting for now.

[13:16:00.0000] <TabAtkins>
Dealing with <foreignContent> requires some subtlety.

[13:16:01.0000] <Phrogz_>
OK. May I ask who "we" are? (For a StackOverflow answer I'd like to cite my source. :)

[13:16:02.0000] <TabAtkins>
Chrome engineer.

[13:16:03.0000] <Phrogz_>
Thanks. Any mailing list discussion on this topic you could point me at (or in the general vicinity of)?

[13:17:00.0000] <TabAtkins>
I'd have to dig stuff up.  Search in public-webapps⊙wo for posts from Adam Barth about it?

[13:18:00.0000] <Phrogz_>
Thanks. Any keywords you'd recommend? Taint? origin-clean? svg? foreignObject?

[13:18:01.0000] <hober>
drawElement

[13:18:02.0000] <zewt>
heh, i got bored of stackoverflow ... too little filtering for quality of questions leading to too many crap questions to wade through

[13:19:00.0000] <Phrogz_>
zewt: That's the truth for sure. Still, there's a glimmer of hope there for storing good answers. Plus, I'm foolishly addicted to the rep. Jeff's got his claws in me.

[13:19:01.0000] <zewt>
pages of people looking to get their homework done gets tiresome

[13:21:00.0000] <Phrogz_>
So, that explains my specific question. Still, I'm interested in the difference between those last two image/data: url specs. Can anyone clarify?

[13:21:01.0000] <gavinc>
zewt:  Perhaps might be faster to change how homework is assigned rather then trying to get people to stop looking for answers online. The first only seems really hard, the 2nd impossible.

[13:22:00.0000] <annevk>
Hixie: using datetime as attribute seems annoying

[13:22:01.0000] <annevk>
AryehGregor: XMLHttpRequest.send()

[13:23:00.0000] <TabAtkins>
Phrogz_: I think the "other Document" that's referring to just means "other than the image referred to by the data: url"

[13:25:00.0000] <Phrogz_>
TabAtkins: ? I suppose it would be clearer to me if someone could give an example of when the first case might occur. (What javascript code would result in an image having a data URL that was "found" in another Document or script?)

[13:25:01.0000] <annevk>
roc: I'm happy to have Opera drop the prefixes for the modules you proposed btw

[13:25:02.0000] <annevk>
roc: for those we implement anyway :)

[13:25:03.0000] <roc>
please say so on the list

[13:26:00.0000] <roc>
and mention whether you'd be happy for other browsers to drop prefixes on the features you don't implement :-)

[13:26:01.0000] <zewt>
Phrogz_: iframes? (but if the iframe isn't same-origin then you can't access the IMG in question in the first place)

[13:28:00.0000] <TabAtkins>
Phrogz_: For example, if you use an <iframe> whose document contains a data: url.

[13:28:01.0000] <TabAtkins>
Phrogz_: I think that's the right interpretation.

[13:33:00.0000] <annevk>
roc: done and done

[13:35:00.0000] <annevk>
AryehGregor: IDL interface tests, sweet

[13:35:01.0000] <annevk>
AryehGregor: you're on a roll :)

[13:36:00.0000] <jgraham>
TabAtkins: Who has discussed not shipping prefixed stuff in stable builds? It seems unlikely that such a policy would meet with universal approval at google since afaik your products use -webkit-* for stuff that others don't have yet

[13:37:00.0000] <tantek>
jgraham - agreed.

[13:37:01.0000] <Ms2ger>
AryehGregor, did you look at the ProgressEvent tests, btw?

[13:37:02.0000] <jgraham>
(by "products" I mean "websites")

[13:38:00.0000] <Ms2ger>
text/html XHR was backed out, btw

[13:38:01.0000] <jgraham>
AryehGregor: I mean I want the code to be structured more clearly than a big series of "if" statements, such that it is easy to find all the tests relating to a particular attribute in the IDL

[13:38:02.0000] <annevk>
Ms2ger: something broke?

[13:38:03.0000] <jgraham>
Or other part of the IDL

[13:39:00.0000] <Ms2ger>
Tests

[13:40:00.0000] <annevk>
tests

[13:40:01.0000] <annevk>
the ultimate troll

[13:41:00.0000] <jamesr_>
we've (chromium) thought having things that are on in dev builds but not beta / stable

[13:41:01.0000] <jamesr_>
it gets tricky though

[13:41:02.0000] <jgraham>
tantek: Producing a *good* testsuite for a spec is often lots of work. Perhaps more than implementing it. Almost no spec currently has a good testsuite (CSS 2.1 has a patchy but reasonable testsuite and that took *years*). Gating unprefixing on testsuites either requires a big change in how we get tests (suggestions welcome!) or just perpetuates the current problem

[13:41:03.0000] <jamesr_>
for example you lose some of the benefits of having a dev channel if the thing you release to beta is not what was previously on dev

[13:42:00.0000] <jgraham>
In practice authors are often happy to work around bugs in a feature if they get to use that feature

[13:42:01.0000] <jamesr_>
some of the QA/testing benefits that is

[13:44:00.0000] <roc>
another option is to ship prefixed features in all builds, but disabled behind a preference/config flag

[13:44:01.0000] <annevk>
heh, private flame from glazou

[13:44:02.0000] <annevk>
roc: then you might as well do it unprefixed behind a config flag

[13:45:00.0000] <roc>
that works too

[13:45:01.0000] <roc>
then anyone can try the feature, we don't have to worry about code differences between dev and release builds, and authors still can't rely on it

[13:45:02.0000] <tantek>
jgraham - note that I specifically said test cases/suite for a *feature/property/value* - not a *spec*

[13:45:03.0000] <tantek>
very different problem

[13:46:00.0000] <annevk>
it seems though that we should be able to nail down a feature within half a year or so

[13:46:01.0000] <dglazkov>
I want to print this out and frame it: "They care whether two UAs have incompatible implementations, because it affects their work.  They don't care what the exact reasons are _why_ that happens. -- Zbarsky."

[13:46:02.0000] <tantek>
so yeah, please no strawmen

[13:46:03.0000] <annevk>
and within half a year we have happily made changes thus far

[13:46:04.0000] <annevk>
for non-CSS features

[13:46:05.0000] <annevk>
so I really think it's a non-issue

[13:46:06.0000] <jgraham>
tantek: Depends on the feature

[13:46:07.0000] <annevk>
CSS just need to get with the times

[13:46:08.0000] <tantek>
jgraham - sure

[13:46:09.0000] <jgraham>
tantek: There still isn't a really good <video> testsuite afaik

[13:47:00.0000] <jgraham>
And yt everyone ships and no one says it should be prefixed

[13:47:01.0000] <jgraham>
(prefixing is harder in HTML ofc. This doesn't seem o turn out bad very often)

[13:47:02.0000] <divya>
i like roc's suggestion of a config flag

[13:47:03.0000] <tantek>
jgraham - because both Opera and Mozilla made changes to <video> as necessary in implementations

[13:47:04.0000] <tantek>
rather than be saddled with compat modes for old <video> content

[13:47:05.0000] <tantek>
but not all implementations work that way

[13:48:00.0000] <jgraham>
I don't understand your point

[13:48:01.0000] <jgraham>
In HTML and mostly in the APIs we haven't had prefixes

[13:48:02.0000] <tantek>
jgraham - OTOH CSS 'clip' property failed because it was implemented unprefixed, incompatibly, in IE which then had compat reasons that prevented fixing it.

[13:49:00.0000] <jgraham>
What are the cases that turned out really bad that prefixing would have fixed

[13:49:01.0000] <annevk>
'filter' maybe, though it might turn out alright in the end

[13:49:02.0000] <tantek>
so yes, unprefixed implementation by vendors who don't mind breaking early content have worked

[13:49:03.0000] <annevk>
there's like a few examples

[13:49:04.0000] <jgraham>
tantek: Incompatibly with what?

[13:49:05.0000] <tantek>
but that's only a few

[13:49:06.0000] <zewt>
blob.slice was tricky to fix, iirc

[13:49:07.0000] <annevk>
but they by far do not outweigh gradients, transitions, etc.

[13:49:08.0000] <tantek>
spec, other implementations etc. edge cases etc.

[13:49:09.0000] <tantek>
clip was *very* problematic

[13:49:10.0000] <annevk>
you mean the space-separated stuff?

[13:50:00.0000] <tantek>
that was the beginning of the reasons for doing prefixes

[13:50:01.0000] <jgraham>
local storage could have ended up better, but prefixing wouldn't have helped (probably)

[13:50:02.0000] <Phrogz_>
TabAtkins: So you think that img.src = frames[1].document.querySelector('#hasdataurl').src;    would trigger the first case, but  img.src = frames[1].document.querySelector('#hasdataurl').src.replace('1','3') would trigger the second origin policy?

[13:50:03.0000] <tantek>
jgraham, prefixing the DOM APIs for localStorage could have fixed it as well

[13:50:04.0000] <Phrogz_>
(Where 'first' is the next-to-last and 'second' is the last spec under image origin. Wish each of these had specific identifiers.)

[13:50:05.0000] <annevk>
remember, we had globalStorage first

[13:51:00.0000] <jgraham>
tantek: With clip, others shipped first and Microsoft just released a buggy implementation? Or Microsoft shipped first?

[13:51:01.0000] <annevk>
it took a very long time for localStorage problems to crop up

[13:51:02.0000] <annevk>
too long basically

[13:51:03.0000] <jgraham>
Right, prefixing wouldn't have helped

[13:51:04.0000] <jgraham>
Because the problems didn't become clear for so long that any sane process would have unprefixed

[13:51:05.0000] <jgraham>
Or flash would have won

[13:52:00.0000] <zewt>
it's not clear that localStorage's basic API is even fixable, since most of the likely fixes end up killing its main appeal (convenience)

[13:54:00.0000] <roc>
should I bother restarting the thread with the language Brian wants?

[13:55:00.0000] <tantek>
roc, URL?

[13:56:00.0000] <zewt>
webkitURL

[13:56:01.0000] <TabAtkins>
Phrogz_: I'm not sure. :/

[13:57:00.0000] <TabAtkins>
jgraham: Us in WebKit.  It would indeed be unpopular with our Apps teams.  That doesn't mean we couldn't do it.

[13:58:00.0000] <Phrogz_>
TabAtkins: OK, thanks. I'll try bringing this to the mailing list.

[13:58:01.0000] <tantek>
TabAtkins, to start with, dropping prefixed versions of properties when you implemented the unprefixed version would be a good start. Mozilla has that policy.

[13:58:02.0000] <TabAtkins>
tantek: I know they do.  That's very likely not going to happen.

[13:58:03.0000] <tantek>
TabAtkins, why?

[13:58:04.0000] <tantek>
seems easier / less tempting than not adding them in the first place.

[13:59:00.0000] <TabAtkins>
For one thing, those properties are often used in *Apple* products that can't easily be updated.  For two, preventing our Apps teams from using new stuff as quickly is one thing, making them remove stuff they already have is another.  ^_^

[13:59:01.0000] <TabAtkins>
tantek: And no, it's much harder than not adding int he first place.

[13:59:02.0000] <tantek>
commenting out code so much easier than writing it  :p

[14:00:00.0000] <Phrogz_>
Is public-webapps⊙wo the right spot to discuss http://www.whatwg.org/specs/web-apps/current-work/multipage/origin-0.html#origin-0 ?

[14:00:01.0000] <TabAtkins>
Better to email whatwg⊙wo

[14:01:00.0000] <TabAtkins>
The fact that public-webapps shares a naming similarity with part of the URL for the html spec is a coincidence.

[14:01:01.0000] <Phrogz_>
kk

[14:01:02.0000] <Ms2ger>
Well, not a coincidence... Both are about web apps

[14:01:03.0000] <TabAtkins>
Well, yeah.  But WebApps doesn't do the HTML spec.

[14:02:00.0000] <hober>
TabAtkins: happy birthday!

[14:02:01.0000] <TabAtkins>
hober: Thanks!

[14:02:02.0000] <Ms2ger>
And that

[14:05:00.0000] <dglazkov>
TabAtkins: Happy birthday!

[14:06:00.0000] <roc>
Wait, it's Tab's birthday?

[14:06:01.0000] <roc>
Mine too!

[14:06:02.0000] <TabAtkins>
Yay!

[14:06:03.0000] <TabAtkins>
Birthday buddies!

[14:06:04.0000] <roc>
except I'm about 50 years old

[14:06:05.0000] <roc>
er

[14:07:00.0000] <Ms2ger>
Congratulations/Condolences then

[14:08:00.0000] <jgraham>
Aren't you also on different sides of midnight?

[14:08:01.0000] <TabAtkins>
Oh, yeah, I guess.

[14:08:02.0000] <TabAtkins>
roc: You're Nov 17?

[14:09:00.0000] <roc>
oooh yeah

[14:09:01.0000] <roc>
yes, I live in the future

[14:09:02.0000] <annevk>
heh

[14:09:03.0000] <jgraham>
Happy birthday both (although seeing "happy birthday" always makes me start humming "unhappy birthday" by The Smiths, so that too)

[14:09:04.0000] <annevk>
happy birthday to both of you!

[14:10:00.0000] <TabAtkins>
Not birthday buddies, then.

[14:10:01.0000] <TabAtkins>
;_;

[14:10:02.0000] <dglazkov>
jgraham: you are truly a grump :)

[14:11:00.0000] <jgraham>
No, no, it is just that the smiths are very hummable

[14:11:01.0000] <jgraham>
Well also yes

[14:12:00.0000] <jgraham>
But mostly the humming thing in this case

[14:12:01.0000] <dglazkov>
ah. well, that's true. I guess a true grump never hums, either.

[14:12:02.0000] <dglazkov>
a true grump only grumps.

[14:13:00.0000] <Ms2ger>
/me grumps

[14:14:00.0000] <dglazkov>
Ms2ger: you don't count. You don't really exist.

[14:14:01.0000] <Ms2ger>
/me grumps

[14:14:02.0000] <dglazkov>
:)

[14:15:00.0000] <jgraham>
Ms2ger exists, it's just a benevolent AI

[14:15:01.0000] <TabAtkins>
He's the european instantiation of the BZ algorithm.

[14:16:00.0000] <TabAtkins>
BZ originally being run, of course, on MIT hardware.

[14:16:01.0000] <timeless>
happy birthday TabAtkins

[14:18:00.0000] <TabAtkins>
timeless: Thanks!

[14:26:00.0000] <dglazkov>
european? I always imagined Ms2ger being from Louisiana or someplace like that.

[14:26:01.0000] <TabAtkins>
Nah, his timezone is somewhere in europe.

[14:27:00.0000] <dglazkov>
see? he left.

[14:27:01.0000] <Ms2ger>
/me grumbles at irssi

[14:27:02.0000] <dglazkov>
it's probably because it's Alligator-hunten time!

[14:28:00.0000] <Hixie>
aw, nobody sent me their opinions on the duration thing

[14:28:01.0000] <Ms2ger>
Hixie, nobody cares

[14:28:02.0000] <Ms2ger>
Sorry

[14:28:03.0000] <Hixie>
seems that way

[14:28:04.0000] <hober>
the duration thing?

[14:29:00.0000] <Hixie>
hober: looking for someone to fill in http://www.whatwg.org/specs/web-apps/current-work/temp and mail it to me :-)

[14:29:01.0000] <AryehGregor>
Someone with an nvidia.com e-mail address asking questions about the origin of data: URLs?  Seems odd.

[14:32:00.0000] <Hixie>
webkit engineer i believe

[14:33:00.0000] <AryehGregor>
Ms2ger, by the way, there's something that fails for NodeList on a nightly (trying to poke NodeList.prototype.length): http://aryeh.name/tmp/webapps/DOMCore/tests/submissions/AryehGregor/interfaces.html

[14:35:00.0000] <AryehGregor>
(or you can use http://w3c-test.org/webapps/DOMCore/tests/submissions/AryehGregor/interfaces.html, if you want something more official-looking)

[14:35:01.0000] <Ms2ger>
It throws, right?

[14:35:02.0000] <Ms2ger>
That's per spec

[14:35:03.0000] <AryehGregor>
Really?

[14:35:04.0000] <AryehGregor>
Where?

[14:35:05.0000] <Ms2ger>
It's subtle

[14:36:00.0000] <TabAtkins>
length is an own property, not gotten fromt eh prototype, I think.

[14:36:01.0000] <Ms2ger>
TabAtkins, nope

[14:36:02.0000] <TabAtkins>
Oh, shrug then.

[14:36:03.0000] <AryehGregor>
WebIDL seems to imply that it's on the prototype.

[14:36:04.0000] <Ms2ger>
length is a getter that throws if |this| is not a NodeList

[14:36:05.0000] <Ms2ger>
Which NodeList.prototype isn't

[14:36:06.0000] <AryehGregor>
Oh.

[14:36:07.0000] <AryehGregor>
Really?

[14:36:08.0000] <Ms2ger>
Yep

[14:36:09.0000] <AryehGregor>
Where does it say that?

[14:37:00.0000] <Ms2ger>
http://dev.w3.org/2006/webapi/WebIDL/#es-attributes

[14:37:01.0000] <TabAtkins>
Presumably in the ES spec.

[14:37:02.0000] <AryehGregor>
DOM4 describes it as a regular old attribute.

[14:37:03.0000] <heycam>
regular old attributes are all accessor properties on the prototype

[14:37:04.0000] <Ms2ger>
What heycam said

[14:37:05.0000] <AryehGregor>
Hmm, right.

[14:39:00.0000] <AryehGregor>
But I'm not actually getting it, I don't think.

[14:39:01.0000] <AryehGregor>
Or I'm not intending to.

[14:40:00.0000] <heycam>
so as Ms2ger says, NodeList.prototype is not a NodeList object

[14:40:01.0000] <heycam>
it's just a plain object

[14:40:02.0000] <AryehGregor>
Right, I get that.

[14:40:03.0000] <AryehGregor>
But I think all I'm doing is calling hasOwnProperty and getOwnPropertyDescriptor on it.

[14:40:04.0000] <heycam>
the getter for NodeList.prototype.length does a check to see what its this object is

[14:40:05.0000] <heycam>
if it's not a NodeList, it throws

[14:40:06.0000] <Ms2ger>
Oh

[14:40:07.0000] <heycam>
those should succeed...

[14:40:08.0000] <Ms2ger>
It may be getOPD being broken as well

[14:41:00.0000] <Ms2ger>
I noticed bholley was looking at that

[14:41:01.0000] <AryehGregor>
getOwnPropertyDescriptor looks like it's what's throwing.

[14:41:02.0000] <heycam>
definitely a bug then

[14:44:00.0000] <AryehGregor>
NodeFilter.prototype doesn't exist in Gecko.  o_O

[14:44:01.0000] <jgraham>
It's not that surprising if the ES5 introspection magic fails with host objects

[14:45:00.0000] <jgraham>
It does in Opera I believe

[14:45:01.0000] <heycam>
NodeFilter's a funny one

[14:45:02.0000] <heycam>
being something intended to be implemented by JS

[14:45:03.0000] <AryehGregor>
jgraham, well, it's not per spec, so . . .

[14:45:04.0000] <heycam>
but also something that can be a host object

[14:45:05.0000] <heycam>
(iirc)

[14:45:06.0000] <AryehGregor>
Ms2ger, also, you know that the entire prototype chain for Nodes is messed up, right?  Everything seems to be on the last prototype object, nothing much is on Node.prototype or Document.prototype or such.

[14:46:00.0000] <Ms2ger>
Yes

[14:46:01.0000] <heycam>
or that might be XPathFilter or something

[14:46:02.0000] <Ms2ger>
That's by design

[14:46:03.0000] <AryehGregor>
Is that for performance or something?

[14:46:04.0000] <AryehGregor>
It's causing like half the tests to fail.

[14:46:05.0000] <Ms2ger>
Dunno, it's an awful design

[14:46:06.0000] <Ms2ger>
Blame netscape

[14:46:07.0000] <AryehGregor>
(WebKit fails almost all of them, and IE9 seems to be closest to spec)

[14:47:00.0000] <jgraham>
AryehGregor: Right, it is a bug

[14:47:01.0000] <jgraham>
But an unsurprising one given that the ability to do this is rather new

[14:48:00.0000] <AryehGregor>
Right.

[14:48:01.0000] <Ms2ger>
Anyway, I expect us to get a lot better in the following 6 months or so

[14:50:00.0000] <AryehGregor>
/me plans to actually test writable/enumerable/configurable-ness, too, not just trust getOPD

[14:50:01.0000] <jgraham>
Sounds reasonable

[14:52:00.0000] <AryehGregor>
I wonder how much the web depends on the details of things like whether properties on prototypes are configurable or not.

[14:53:00.0000] <Ms2ger>
It sure depends on awful things about on* properties

[14:53:01.0000] <AryehGregor>
Like what?

[14:54:00.0000] <Ms2ger>
Being able to set them on the prototype and stuff

[14:54:01.0000] <Ms2ger>
Ask heycam :)

[14:55:00.0000] <heycam>
AryehGregor, yeah was on old version of prototype that was being used one some sites

[14:55:01.0000] <heycam>
and it was doing something like Interface.prototype.onsomething = null

[14:55:02.0000] <AryehGregor>
Whee.

[14:56:00.0000] <heycam>
so previously when on* things were on the instance, this was basically just doing nothing

[14:56:01.0000] <heycam>
now with on* being accessors on prototype.... throw

[14:59:00.0000] <AryehGregor>
/me observes that ES seems to be one case where there are clear versions that browsers actually implement completely in a timely fashion, and it seems to work well

[14:59:01.0000] <heycam>
prefix all the things!

[15:00:00.0000] <jamesr_>
AryehGregor, really? nobody has ever fully implemented ES3, and nobody can since it's incompatible with the web

[15:00:01.0000] <jamesr_>
and there aren't any full implementations of ES5 that i'm aware of (although some folks are getting close)

[15:00:02.0000] <annevk>
Opera fails 1 test

[15:01:00.0000] <annevk>
but given that ES5 does not include http://wiki.whatwg.org/wiki/Web_ECMAScript it's not really real world compatible :(

[15:01:01.0000] <jamesr_>
so we're close to having the first ever implementation of a clear version of an ECMAScript

[15:03:00.0000] <jgraham>
I think that one test we fail is a likely web compat issue

[15:04:00.0000] <jgraham>
Also, gecko and others implement parts of es.next in an unprefixed (afaik) way

[15:04:01.0000] <jgraham>
certianly historically gecko has had a bunch of nonstandard stuff

[15:05:00.0000] <jgraham>
So it isn't really clear that this is an example of clear versions that everyone implements in a timely fashion

[15:06:00.0000] <jgraham>
(scripting engines are also a bit special because they are very self-contained and typically have dedicated teams working on them)

[15:07:00.0000] <Hixie>
for duration values: if "1h", "1min", and "1mo" are conforming, but "1m" is not (ambiguous), should a duration of "1hour" be conforming?

[15:07:01.0000] <jgraham>
Are the i18n people not going to cut out your kidneys?

[15:08:00.0000] <annevk>
Hixie: I vote for simple first

[15:09:00.0000] <TabAtkins>
I'm with annevk.  min and mo are the only ambiguous case.

[15:09:01.0000] <TabAtkins>
And if you'd just switch to bimonths that ambiguity would disappear.  ^_^

[15:10:00.0000] <annevk>
Hixie: we can always allow more syntax later; we have use cases for duration, not for lots of different duration syntax

[15:11:00.0000] <dglazkov>
annevk: where's the new event constructor syntax doc? linky?

[15:12:00.0000] <dglazkov>
http://www.w3.org/TR/domcore/#events

[15:13:00.0000] <dglazkov>
annevk: I answer my own questions

[15:17:00.0000] <annevk>
great :)

[15:17:01.0000] <annevk>
nn

[15:20:00.0000] <gsnedders>
jgraham: I've not read the history, FWIW, but for WebIDL testing see <http://suika.fam.cx/www/webidl2tests/readme>

[15:21:00.0000] <gsnedders>
jgraham: Massively outdated, but tests based upon WebIDL,

[15:22:00.0000] <gsnedders>
AryehGregor: JSC supported all of ES5 except Function.prototype.bind for ages, IE9 doesn't support strict mode. It's far from entirely versioned…

[15:23:00.0000] <gsnedders>
annevk: Web ECMAScript doesn't actually contradict in ES5.

[15:23:01.0000] <gsnedders>
annevk: Something supporting all those variants is still a conforming ES5 impl

[15:33:00.0000] <gsnedders>
heycam: WebIDL is inconsistent: operator getters and attribute getters should have identical behaviour for checking this.

[15:37:00.0000] <gsnedders>
heycam: I mentioned that in an email forever ago, but I think you missed it


2011-11-17
[16:23:00.0000] <heycam>
gsnedders, I could well have missed it

[16:24:00.0000] <gsnedders>
heycam: Want me to send it again?

[16:24:01.0000] <heycam>
gsnedders, yep sure

[16:24:02.0000] <heycam>
/me checks the spec now too

[16:25:00.0000] <heycam>
so that is something that changed recently, the attribute getter one at least

[16:25:01.0000] <heycam>
due to the crazy on* behaviour

[16:26:00.0000] <gsnedders>
Oh, I sent the email after the operator getter changed behaviour

[16:27:00.0000] <heycam>
by operator getter do you mean operation?

[16:27:01.0000] <gsnedders>
So totally not following any emails to spec mailing lists

[16:28:00.0000] <gsnedders>
And yes, I do mean operation

[16:28:01.0000] <gsnedders>
I'm watching TV shows and not paying attention to what I'm typing.

[16:28:02.0000] <heycam>
yeah I haven't replied on public-script-coord for a couple of weeks :p

[16:30:00.0000] <gsnedders>
The only thing I read at all nowadays is various testsuite mailing lists.

[19:04:00.0000] <zewt>
ugh

[19:04:01.0000] <zewt>
ff8 is doing that horrible "hide the http://" garbage too now

[19:04:02.0000] <zewt>
horrible idea

[19:13:00.0000] <zewt>
good, at least i can disable browser.urlbar.trimURLs

[22:03:00.0000] <yaffle>
Hello!

[22:03:01.0000] <yaffle>
could somebody help me with event delegation?

[22:03:02.0000] <yaffle>
my question is: why DOM API doesn't implement binding of event delegation and "stopPropagation" for this, like jQuery does? It seems, that jQuery makes it very good and this is very cool

[22:04:00.0000] <yaffle>
$(document).on('click', '.test', function () { alert(0); return false; });

[22:04:01.0000] <yaffle>
$(document).on('click', '.bu', function () { alert(1); return false; });

[22:04:02.0000] <yaffle>
$(document).on('click', '.bu', function () { alert(2); return false; });

[22:04:03.0000] <yaffle>
<div class="test">

[22:04:04.0000] <yaffle>
  <div class="bu">

[22:04:05.0000] <yaffle>
    bu here

[22:04:06.0000] <yaffle>
  </div>

[22:04:07.0000] <yaffle>
</div>

[22:05:00.0000] <yaffle>
clicking on  ".test > .bu" will alert(1) and alert(2), but not alert(0)

[22:05:01.0000] <yaffle>
how to do the same with DOM API ?

[23:02:00.0000] <hsivonen>
looks like the thread about unprefixing has inspired quite a few responses on www-style

[00:01:00.0000] <zcorpan>
yaffle: http://software.hixie.ch/utilities/js/live-dom-viewer/saved/1257

[00:52:00.0000] <krijn>
TabAtkins: http://vimeo.com/32135328

[00:52:01.0000] <krijn>
(Sorry about that intro title :()

[01:01:00.0000] <yaffle>
zcorpan: no, it's not what i need: let's change markup to:

[01:01:01.0000] <yaffle>
<div class="test">

[01:01:02.0000] <yaffle>
  <div class="bu">

[01:01:03.0000] <yaffle>
    <a>

[01:01:04.0000] <yaffle>
    bu here

[01:01:05.0000] <yaffle>
    </a>

[01:01:06.0000] <yaffle>
  </div>

[01:01:07.0000] <yaffle>
</div>

[01:02:00.0000] <yaffle>
jQuery implements their own "dispatch", so it can "stopPropagation" even with event-delegation

[01:27:00.0000] <zcorpan>
yaffle: ok. then, *shrug*

[01:30:00.0000] <hsivonen>
not the best for truth but probably good for advocacy that Firefox 3.6 no longer shows up on caniuse

[01:34:00.0000] <hsivonen>
oh. there's an option to show old versions

[02:33:00.0000] <annevk>
Is there a bug on WebKit on removing document.width and document.height?

[02:49:00.0000] <jarek>
annevk: but those are used all over the place, removing them would break many websites

[02:50:00.0000] <jarek>
no, wait... Firefox has done that...

[02:50:01.0000] <jarek>
https://developer.mozilla.org/en/DOM/document.width

[02:51:00.0000] <annevk>
/me filed https://bugs.webkit.org/show_bug.cgi?id=72591

[02:52:00.0000] <annevk>
jarek: only Gecko and WebKit supported them

[02:52:01.0000] <annevk>
jarek: some Google-demo is still using them it seems, but not much more than that as far as I know

[02:58:00.0000] <abarth>
annevk: which demo?

[02:59:00.0000] <annevk>
http://studio.html5rocks.com/#Puzzle because of code in http://studio.html5rocks.com/samples/svg-puzzle/jigsaw.js

[02:59:01.0000] <annevk>
instead of document.width it should use document.body.clientWidth and same for height

[02:59:02.0000] <annevk>
abarth: ^^

[02:59:03.0000] <abarth>
annevk: thanks.  i can try to figure out who to nudge

[03:00:00.0000] <abarth>
strange, i don't see them in document.idl

[03:01:00.0000] <annevk>
thanks man

[03:02:00.0000] <abarth>
ah, they're on HTMLDocument

[03:03:00.0000] <annevk>
added that to the bug

[03:05:00.0000] <abarth>
i've got a patch, but i need to see how many tests it breaks :)

[03:37:00.0000] <yaffle>
http://stackoverflow.com/questions/8162883/dom-events-api-event-delegation-and-stoppropagation

[03:39:00.0000] <annevk>
I am the only one confused by this thread: http://lists.w3.org/Archives/Public/public-html/2011Nov/0157.html

[03:41:00.0000] <annevk>
yaffle: use event.stopPropagation()

[03:44:00.0000] <yaffle>
annevk:  event delegation!

[03:46:00.0000] <annevk>
yaffle: not sure how to interpret tha

[03:46:01.0000] <annevk>
t

[03:46:02.0000] <smaug____>
(what has that to do with delegation?)

[03:48:00.0000] <yaffle>
annevk: i want to use "event delegation", so all event listeners are attached to same element, event.stopPropagation() will not help

[03:50:00.0000] <smaug____>
stopImmediatePropagation()

[03:50:01.0000] <smaug____>
though, I'm not sure what delegation means in this case

[03:50:02.0000] <smaug____>
apparently something different than usually

[03:51:00.0000] <annevk>
sicking did suggest we should add jQuery-style event handling to the DOM

[03:51:01.0000] <annevk>
I haven't had time to look at it yet

[03:52:00.0000] <smaug____>
huh

[03:53:00.0000] <yaffle>
annevk: wow! sounds good

[03:53:01.0000] <smaug____>
sicking has all these crazy ideas :p

[03:53:02.0000] <smaug____>
what is good in jquery event handling?

[03:57:00.0000] <yaffle>
smaug____:  "stopPropagation" support + short syntax for event delegation

[03:57:01.0000] <smaug____>
DOM events support stopPropagation

[03:57:02.0000] <smaug____>
what is "short syntax for event delegation" ?

[03:58:00.0000] <yaffle>
smaug____: but not for "event-delegation" pattern

[03:59:00.0000] <smaug____>
do you mean .delegate() method in jQuery ?

[03:59:01.0000] <yaffle>
smaug____: $(document).on('click', '.test', function() { alert(123); });  - will alerts clicking on elements with className "test"

[04:00:00.0000] <yaffle>
smaug____: yes, in latest jQuery, they move to "on" method, although "delegate" makes the same

[04:00:01.0000] <smaug____>
document.documentElement.onclick = function (e) { if (e.target.className.contains("test")) { alert(123); } }

[04:01:00.0000] <yaffle>
smaug____:   <b class="test"><a> who will be the target "a" or "b"? </a></b>

[04:01:01.0000] <smaug____>
depending on the stopPropagation calls ofc

[04:01:02.0000] <smaug____>
ah, true

[04:02:00.0000] <smaug____>
ok, my example doesn't work

[04:02:01.0000] <smaug____>
but something quite similar would

[04:02:02.0000] <yaffle>
smaug____: document.addEventListener('click', function (event ) { var target =event.target; while (target && !(target.matchesSelector && target.matchesSelector('.test')) { target=target.parentNode;} if (target) {alert(123)}   },false);

[04:02:03.0000] <yaffle>
smaug____: this is what we can do with native DOM, but we can't do "stopPropagation"

[04:03:00.0000] <smaug____>
I don't understand what you mean with 'can't do "stopPropagation"'?

[04:04:00.0000] <smaug____>
ah, you want the first listener to call stopPropagation if there are many listeners

[04:04:01.0000] <smaug____>
er, many elements with .test ?

[04:05:00.0000] <yaffle>
smaug____: http://jsfiddle.net/sbxBw/3/

[04:06:00.0000] <yaffle>
smaug____: many event listeners...

[04:07:00.0000] <smaug____>
stopImmediatePropagation() should work

[04:08:00.0000] <smaug____>
hmm

[04:08:01.0000] <smaug____>
well, that testcase is just about plain normal addEventListener

[04:08:02.0000] <smaug____>
and calling stopPropagation

[04:11:00.0000] <smaug____>
I can see some use cases for registering same listener to different targets

[04:11:01.0000] <smaug____>
but since that is just so trivial to do in scripting, I'm not sure that kind of "delegation" is needed in DOM API

[04:13:00.0000] <yaffle>
smaug____: stopImmediatePropagation is not what i need))) stopImmediatePropagatin prevends ALL listeners from execution

[04:14:00.0000] <yaffle>
smaug____: http://jsfiddle.net/sbxBw/4/ updated example ))

[04:15:00.0000] <smaug____>
in that example you'd just call stopPropagation() in the listener added to element with .bu

[04:17:00.0000] <yaffle>
smaug____: if i will add listeners to elements with ".bu" - this wouldn't be "event-delegation" =)

[04:17:01.0000] <smaug____>
how is jquery not adding listener to .bu element?

[04:17:02.0000] <smaug____>
I must be missing something here

[04:18:00.0000] <smaug____>
$(document) is just the context, right? and then everything underneath it with .bu and .test will get the listeners you define

[04:20:00.0000] <yaffle>
smaug____:  "click" event will bubbles up to document, so we can listen for him on document, then check event.target or event.target.parentElement or ...

[04:21:00.0000] <smaug____>
"The .on() method attaches event handlers to the currently selected set of elements in the jQuery object."

[04:21:01.0000] <smaug____>
that is from jQuery documentation

[04:22:00.0000] <yaffle>
When a selector is provided, the event handler is referred to as delegated.

[04:22:01.0000] <smaug____>
so, as far as I see, the example you posted is still just about event propagation and calling stopPropagation

[04:22:02.0000] <yaffle>
http://api.jquery.com/on/#direct-and-delegated-events

[04:25:00.0000] <smaug____>
" The handler is not called when the event occurs directly on the bound element, but only for descendants "

[04:25:01.0000] <smaug____>
so, still about normal event propagation

[04:25:02.0000] <smaug____>
"runs the handler for any elements along that path matching the selector."

[04:26:00.0000] <smaug____>
still reading...

[04:26:01.0000] <smaug____>
I assume I'm missing something here..

[04:28:00.0000] <smaug____>
but I can't find anything...

[04:28:01.0000] <smaug____>
jQuery uses word delegate quite unique way

[04:29:00.0000] <smaug____>
ah, now I see

[04:35:00.0000] <smaug____>
one could add the "delegate" listener during capture phase

[04:35:01.0000] <smaug____>
and then remove it automatically later

[04:35:02.0000] <smaug____>
that should give the jQuery behavior

[05:01:00.0000] <yaffle>
smaug____, hm... thanks, good solution

[07:40:00.0000] <oal>
Is it possible to do :after {content: this.alt; } or something simliar with css? I'd like to add a description below images based on their "alt" attribute.

[07:42:00.0000] <divya>
::after { content: attr(alt); }

[07:45:00.0000] <woef>
Not really recommended though.

[07:47:00.0000] <oal>
Oh, never thought it would be that simple :)

[07:47:01.0000] <oal>
woef: Why?

[07:48:00.0000] <woef>
"The caption is to provide information about the image, while the alt text is to provide alternative content _to_ the image; these are not conceptually the same."

[07:48:01.0000] <woef>
Basically, there should be a difference in how you use them.

[07:50:00.0000] <oal>
Got it. Hmm, the cms I use adds alt and title attributes. Should I use the title instead?

[07:52:00.0000] <annevk>
::after does not work on <img>

[07:52:01.0000] <annevk>
you should use <figure> <img> <figcaption> caption </figcaption> </figure> I think

[07:53:00.0000] <divya>
o thats true

[07:55:00.0000] <oal>
Ah, thanks, that's why it didn't work! ;)

[09:42:00.0000] <Ms2ger>
/me is bored of the unprefixing thread already

[09:49:00.0000] <jgraham>
Took a while

[09:53:00.0000] <jgraham>
"If [the CSS WG] cannot advance specification to recommendation status much faster than it has for the existing CSS Level 3 recommendations, Spock will be around when the last recommendation is published. Without time travel." - heh. Pity about the rest of the email.

[09:54:00.0000] <AryehGregor>
I want to make a blog post on the progress of my editing specification, preferably somewhere in W3C-land.  What blog might I post on?

[09:55:00.0000] <AryehGregor>
I can make it on the WHATWG blog, but I'd prefer it to be W3C because of Microsoft.

[09:56:00.0000] <jgraham>
Microsoft read W3C blogs?

[09:57:00.0000] <tantek>
AryehGregor, put it on your own personal blog, tag it HTML5, and get it syndicated into the planet HTML5 aggregator on W3.org

[09:57:01.0000] <tantek>
#ownyourdata

[09:57:02.0000] <AryehGregor>
tantek, I don't have a personal blog.

[09:57:03.0000] <tantek>
personal wiki then? ;)

[09:57:04.0000] <AryehGregor>
jgraham, I have no idea, but I'm making an effort to use W3C stuff where possible out of support for CGs.

[09:59:00.0000] <jgraham>
Doesn't your CG get a blog?

[09:59:01.0000] <AryehGregor>
Um, maybe.

[09:59:02.0000] <AryehGregor>
I can check.

[09:59:03.0000] <jgraham>
I mean it is basically just wordpress

[10:00:00.0000] <AryehGregor>
That would be logical.

[10:00:01.0000] <tantek>
Hixie, what was that URL for time duration microsyntaxes where you're gathering examples/data?

[10:00:02.0000] <AryehGregor>
Is there some way to configure "hg push" to push to multiple repos?

[10:00:03.0000] <jgraham>
/me is pretty sure it does

[10:00:04.0000] <jgraham>
AryehGregor: That sounds like it would be very confusing

[10:00:05.0000] <AryehGregor>
Why?

[10:00:06.0000] <jgraham>
What if the push fails to one repository?

[10:01:00.0000] <Hixie>
tantek: http://www.whatwg.org/specs/web-apps/current-work/temp

[10:01:01.0000] <AryehGregor>
Then it prints an error for that one and tries another?

[10:01:02.0000] <tantek>
thanks

[10:01:03.0000] <AryehGregor>
/me doesn't know if git allows this either, but it seems useful for mirroring

[10:01:04.0000] <Hixie>
tantek: btw, i have one problem with the duration thing separate from the syntax, that i wonder if you could help me with

[10:01:05.0000] <Ms2ger>
hg push a && hg push b

[10:01:06.0000] <tantek>
Hixie - should I copy/paste that into a wiki page?

[10:02:00.0000] <Hixie>
sure

[10:02:01.0000] <tantek>
and edit  / comment?

[10:02:02.0000] <tantek>
ok

[10:02:03.0000] <Hixie>
tantek: it seems that a year month day hour minute second duration can be boiled down to a number of months and a number of seconds

[10:02:04.0000] <Ms2ger>
Aliases are nice for that

[10:02:05.0000] <Hixie>
tantek: but how would one expose this in an api in a way that wouldn't be misused all the time?

[10:02:06.0000] <tantek>
except that months are not a consistent amount of time :/

[10:02:07.0000] <tantek>
/me really dislikes the # of months duration

[10:02:08.0000] <jgraham>
Pretty sure you can only push to one repo at a time with git

[10:03:00.0000] <Hixie>
tantek: if we exposed durationMonths and durationSeconds, people expecting short times would only look at the seconds

[10:03:01.0000] <jgraham>
Because I think practically it would be confusing when it failed and you were left with some repos updated and some not

[10:03:02.0000] <Hixie>
tantek: and then if someone ever typos a number of months instead of minutes, they'll find the months are ignored, and will increase the seconds or something and go on their merry way... and later when someone who _does_ handle months and seconds comes along, they'll find the data is bogus

[10:03:03.0000] <tantek>
we could define a "month" duration as always being 30 days

[10:03:04.0000] <Hixie>
tantek: yeah

[10:04:00.0000] <Hixie>
tantek: another option would be to say that you can _either_ give durations of years+months, _or_ days,hours,minutes,seconds

[10:04:01.0000] <Hixie>
tantek: but can't mix and match, at least not for now

[10:04:02.0000] <tantek>
Hixie, well, ISO8601 let's you mix and match, so...

[10:04:03.0000] <tantek>
lets you

[10:04:04.0000] <Hixie>
tantek: we're already profiling ISO8601 anyway, *shrug*

[10:04:05.0000] <tantek>
agreed, profiling/subsetting is good.

[10:04:06.0000] <tantek>
we can at least try to be consistent

[10:05:00.0000] <tantek>
can we punt on an API for durations for the moment?

[10:05:01.0000] <tantek>
and see if there is sufficient interest in that at all from implementers?

[10:05:02.0000] <AryehGregor>
Ms2ger, yeah, I figured that out.  Works well enough for me.

[10:05:03.0000] <Hixie>
tantek: (another problem with mixing and matching is that what is 1month30days? on feb 1st, yf you add days then months you end up at the start of april, but if you add months then days, you end up at the end of march)

[10:06:00.0000] <Ms2ger>
Also, interesting how often people mention HTML4 on www-style

[10:06:01.0000] <tantek>
/me needs to reference ISO8601 to answer that :/

[10:06:02.0000] <tantek>
or perhaps iCalendar

[10:06:03.0000] <tantek>
since iCalendar also has durations

[10:06:04.0000] <tantek>
and defines what happens when you have a dtstart and a duration

[10:06:05.0000] <Hixie>
tantek: for duration, if we don't add an api, i'm worried people will roll their own

[10:06:06.0000] <Hixie>
tantek: and that's a non-trivial parser to write

[10:06:07.0000] <tantek>
Hixie, if people roll their own, we can then use that as experience to design a good one

[10:06:08.0000] <Hixie>
tantek: especially if we add the new syntax

[10:07:00.0000] <tantek>
so far people haven't even implemented the *simpler* API of datetime

[10:07:01.0000] <Hixie>
tantek: but even if they do roll their own, they'll still have the problem of what to do with months and seconds, so i don't think it would solve the earlier problem

[10:07:02.0000] <Hixie>
tantek: this would actually be simpler than the old api

[10:07:03.0000] <tantek>
we can define duration canonicalization

[10:07:04.0000] <Hixie>
tantek: in practice

[10:07:05.0000] <tantek>
as part of the parsing

[10:08:00.0000] <Hixie>
tantek: anyway, the advantage of not allowing months and seconds to be mixed is we can always allow it later if we find it's easy or important to deal with after all

[10:08:01.0000] <Hixie>
tantek: are there use cases for mixing them that we know of today?

[10:08:02.0000] <tantek>
if we're going to split them, I'd prefer days and seconds

[10:08:03.0000] <tantek>
since those are much more precisely / universally defined

[10:08:04.0000] <Hixie>
not sure what you mean by "split"

[10:08:05.0000] <tantek>
as the two granularities

[10:08:06.0000] <Hixie>
days is just a multiple of seconds

[10:09:00.0000] <tantek>
your distinction of months and seconds

[10:09:01.0000] <tantek>
instead use days and seconds

[10:09:02.0000] <Hixie>
?

[10:09:03.0000] <tantek>
you speak of months and seconds

[10:09:04.0000] <Hixie>
months are the problem, not days

[10:09:05.0000] <tantek>
and I'm saying instead, let us speak of days and seconds

[10:09:06.0000] <Hixie>
days are trivial

[10:09:07.0000] <tantek>
not if we define a month to be 30 days

[10:09:08.0000] <Hixie>
1 day = 86400 seconds

[10:09:09.0000] <Hixie>
if we defined 1 month = 30 days then we have no problem

[10:10:00.0000] <Hixie>
except that a month isn't 30 days

[10:10:01.0000] <tantek>
/me needs to reference iCalendar to determine that

[10:10:02.0000] <Hixie>
(feb 1 + 1 month = march 4th? not)

[10:11:00.0000] <Hixie>
icalendar doesn't allow years and months anyway

[10:11:01.0000] <tantek>
for durations?

[10:11:02.0000] <Hixie>
yeah

[10:11:03.0000] <tantek>
interesting

[10:11:04.0000] <annevk>
wow http://www.reddit.com/r/politics/comments/mfrs2/nypd_are_blocking_a_sidewalk_and_asking_for/

[10:11:05.0000] <tantek>
perhaps we should take that path then

[10:11:06.0000] <Hixie>
(though tehy do support weeks)

[10:12:00.0000] <Hixie>
(which seems to be an iso8601 extension?)

[10:12:01.0000] <jgraham>
annevk: DOCUMENT_POSITION_CONTAINED_BY (16, 10 in hexadecimal).

[10:12:02.0000] <tantek>
as a week = 7 days ?

[10:12:03.0000] <Hixie>
seems that way

[10:12:04.0000] <jgraham>
annevk: Either say 16 or 0x10

[10:12:05.0000] <tantek>
I'm find with limiting duration to the iCalendar subset

[10:12:06.0000] <tantek>
I believe that covers current use-cases

[10:12:07.0000] <Hixie>
let me look at the use cases again

[10:12:08.0000] <tantek>
and if someone wants to justify months etc. later with other use-cases that we can't do with days or weeks, they can document it

[10:13:00.0000] <tantek>
current use cases are around music song lengths, movie lengths, etc. and iCalendar.

[10:13:01.0000] <tantek>
let's punt on months

[10:13:02.0000] <Hixie>
well, not supporting months at all would certainly be an interesting approach

[10:13:03.0000] <Ms2ger>
jgraham, patches welcome :)

[10:13:04.0000] <divya>
annevk: these two photos are CLASSIC https://twitter.com/aaronsw/status/137191356778020864

[10:13:05.0000] <Hixie>
TabAtkins: does not supporting months at all seem reasonable to you?

[10:13:06.0000] <Hixie>
(tab and i were talking about this yesterday)

[10:14:00.0000] <hober>
sounds good to me

[10:14:01.0000] <tantek>
Hixie, when defining something seems odd/weird, it's often a sign that there aren't sufficient use-cases to constrain it properly

[10:14:02.0000] <Hixie>
(and he's the only person to have sent me his opinions on that survey yet! ;-) )

[10:14:03.0000] <tantek>
thus I have no problems leaving out months

[10:14:04.0000] <Hixie>
tantek: certainly

[10:14:05.0000] <tantek>
it's the more design-conservative thing to do

[10:14:06.0000] <tantek>
and simply leave it open to being justified by use-cases in the future and adding it then

[10:14:07.0000] <tantek>
we can make sure the rest of the syntax is forward/backward compatible

[10:15:00.0000] <tantek>
(though I have a feeling that in the decade+ of iCalendar development/usage not needing months, we're not going to need months for duration either)

[10:15:01.0000] <tantek>
/me will adjust the Time element whatwg wiki page accordingly for duration

[10:16:00.0000] <Hixie>
tantek: btw, since you're going through the htmlwg process for this, do you know if the chairs have a timetable on this issue?

[10:17:00.0000] <tantek>
my understanding is that they are open for alternative change proposals, but due to the nature of the consensuses at the F2F, they are willing to move more quickly than usual if there are no objections

[10:18:00.0000] <Hixie>
what do they think of as "quickly"?

[10:18:01.0000] <tantek>
I'm presuming quickly = weeks rather than months

[10:19:00.0000] <Hixie>
oh ok

[10:19:01.0000] <Hixie>
so there's no rush on this

[10:19:02.0000] <Hixie>
ok

[10:19:03.0000] <tantek>
oh wait is the HTML WG call going on right now?

[10:20:00.0000] <tantek>
or was it at 9am

[10:20:01.0000] <annevk>
an hour earlier

[10:20:02.0000] <tantek>
shoot

[10:20:03.0000] <hober>
you missed it

[10:20:04.0000] <tantek>
/me missed the call.

[10:20:05.0000] <tantek>
was time/data discussed at all?

[10:20:06.0000] <hober>
/me missed it too

[10:20:07.0000] <tantek>
sorry I had meant to attend. don't even have the different time zone excuse.

[10:22:00.0000] <tantek>
also, Hixie, for the details of my Time change proposal, other than the syntaxes as documented on the Time element wiki page, I've left the details to be specified by the editor, and from what I can tell, that is acceptable to the group (assuming no objections are raised).

[10:22:01.0000] <annevk>
divya: also WTF

[10:22:02.0000] <tantek>
/me would rather not overconstrain the editor's job.

[10:23:00.0000] <annevk>
divya: unless parody, in which case, funny

[10:23:01.0000] <Hixie>
tantek: i expect to have updated the spec long before the chairs get around to a decision, if they're working on the time scale of weeks rather than hours

[10:23:02.0000] <divya>
annevk: sadly not

[10:23:03.0000] <tantek>
Hixie, ok, I will attempt work with your time scale.

[10:23:04.0000] <annevk>
yeah I was wondering why you just wouldn't update the spec

[10:23:05.0000] <Hixie>
tantek: i've been making good use of your wiki page :-)

[10:23:06.0000] <annevk>
same for <dialog> btw

[10:23:07.0000] <annevk>
seems everyone wants it anyway

[10:24:00.0000] <annevk>
and pretty much everyone wants the new <time>

[10:24:01.0000] <Hixie>
annevk: i've not had many days actual work time on the spec since tpac unfortunately

[10:24:02.0000] <rniwa>
annevk: I talked with someone working on accessibility a couple of days ago, and he really liked dialog element 'cause it'll make modal content more accessible

[10:24:03.0000] <Hixie>
annevk: for <dialog> i had planned to wait for the chairs, but now it's interfering with fullscreen i might just get on with it

[10:25:00.0000] <Hixie>
annevk: (we've been waiting months already)

[10:25:01.0000] <Hixie>
annevk: once i'm done with the <time> thing we should talk about how to figure out dialog and fullscreen to make sure they work together

[10:27:00.0000] <annevk>
someone needs to figure out the CSS model we want

[10:27:01.0000] <annevk>
I don't really care

[10:27:02.0000] <annevk>
I think hober was going to ask www-style

[10:27:03.0000] <annevk>
hober: will you get that out today?

[10:28:00.0000] <tantek>
Hixie, I'm traveling today (from Seattle back to SF) but will try to write-up some more on duration while offline.

[10:28:01.0000] <tantek>
Including iterating on the list of examples you posted

[10:29:00.0000] <tantek>
I'll start with updating the duration addition in the wiki to drop months (and thus presumably years as well). I can add weeks for iCalendar compatibility (that seems reasonable to me).

[10:29:01.0000] <tantek>
(re: Time element wiki page on whatwg)

[10:29:02.0000] <Hixie>
tantek: i'd be interested in your opinions on those examples (especially, "1h" vs "1 h", and whether to allow any subset of the english word for the unit, as in "1 hou", "1hours"), but no need to worry about things like the dropping months stuff, i have that in hand

[10:29:03.0000] <hober>
yeah, it'll go out today

[10:30:00.0000] <Hixie>
tantek: i've actually already written much of the spec text for this other than for the extended duration syntax

[10:30:01.0000] <tantek>
Hixie, that's great to hear.

[10:30:02.0000] <Hixie>
haven't regenned the spec yet though so if you want to see it, you'll have to look in the source of http://www.whatwg.org/specs/web-apps/current-work/working-copy which is rather hard to find stuff in :-)

[10:30:03.0000] <gavinc>
the duration syntax is what ISO 8601... and some other stuff?

[10:31:00.0000] <Hixie>
(search for "duration" and search for a comment after the <data> element's definition)

[10:31:01.0000] <Hixie>
gavinc: a small subset of ISO8601's syntax, and something more readable based on what tantek was proposing

[10:31:02.0000] <Hixie>
gavinc: i'm trying to keep the new syntax similar enough to the ISO syntax that one parser can do both without having to have different modes for both syntaxes

[10:31:03.0000] <Hixie>
gavinc: while still making the syntax easier to read

[10:33:00.0000] <annevk>
Hixie: you need to have a mode because the HTML one has to throw out stuff the other allows

[10:33:01.0000] <Hixie>
annevk: like what? (fill out the form and mail it in! :-) )

[10:35:00.0000] <tantek>
annevk, the <time> duration microsyntax should be a superset of ISO8601 duration syntax as profiled by iCalendar. If you find / think of an exception to that, please let us know ASAP.

[10:35:01.0000] <Hixie>
webkit doesn't support the vw unit? :-(

[10:37:00.0000] <beverloo>
No, vh/vm neither.

[10:38:00.0000] <beverloo>
(logically)

[10:40:00.0000] <annevk>
tantek: the moment you get into superset/profile/subset relationships, using a modeless parser is flawed

[10:41:00.0000] <tantek>
I'm not sure I have data either way to assess that statement.

[10:42:00.0000] <annevk>
tantek: a) the parser would be non-conforming because it either accepts more or less than it is supposed to and b) because of that authors might create content outside the restrictions

[10:43:00.0000] <Hixie>
annevk: can you give an example? i don't understand what you mean

[10:43:01.0000] <annevk>
tantek: e.g. URLs are restricted in HTTP, but because of the way browsers deal with all URLs, a lot of the restrictions HTTP places on them have been removed from wget/curl to be more compatible with browsers

[10:44:00.0000] <annevk>
if ISO allows 1hour/1h and HTML just allows 1h; you cannot use an identical parser for that

[10:44:01.0000] <Hixie>
ISO allows only 1H, i'm proposing that our syntax also allow "1 h"

[10:44:02.0000] <Hixie>
(and maybe "1 hour", depending on what people think should be allowed)

[10:45:00.0000] <Hixie>
seems like one parser could pretty easily handle both

[10:45:01.0000] <annevk>
so the HTML parser cannot be used for ISO in that instance

[10:45:02.0000] <Hixie>
that's certainly the case, yes

[10:45:03.0000] <gavinc>
Hixie: Wouldn't ISO have to be prefixed with P? eg P1H?

[10:45:04.0000] <Hixie>
nobody is suggesting that the html duration parser would be a good generic ISO8601 parser

[10:45:05.0000] <Hixie>
ISO8601, after all, supports about six bazillion variants we have no intention of even mentioning

[10:45:06.0000] <Hixie>
same applies to all the date and time formats in the HTML spec in fact

[10:45:07.0000] <Hixie>
gavinc: yes

[10:46:00.0000] <annevk>
"i'm trying to keep the new syntax similar enough to the ISO syntax that one parser can do both without having to have different modes for both syntaxes"

[10:46:01.0000] <annevk>
I guess I'll see what ends up in the spec

[10:46:02.0000] <annevk>
I did fill in the survey

[10:46:03.0000] <annevk>
btw

[10:47:00.0000] <annevk>
just now

[10:47:01.0000] <Hixie>
cool!

[10:47:02.0000] <Hixie>
thanks

[10:47:03.0000] <Hixie>
i meant that one parser could do both syntaxes when used in an html page

[10:47:04.0000] <Hixie>
not that you could use the parser for ISO8601-only cases outside HTML

[10:47:05.0000] <Hixie>
sorry for the ambiguity

[10:48:00.0000] <tantek>
Hixie - I didn't see a form on that page, just text examples

[10:48:01.0000] <gavinc>
and I've lost track of the survey

[10:48:02.0000] <Hixie>
i was using form in the old fashioned sense

[10:48:03.0000] <Hixie>
http://www.whatwg.org/specs/web-apps/current-work/temp

[10:49:00.0000] <Hixie>
something that can be filled in

[10:50:00.0000] <annevk>
i.e copy/paste, fill in the open questions

[10:50:01.0000] <tantek>
got it

[10:51:00.0000] <tantek>
good ol' test case driven spec development ;)

[10:54:00.0000] <tantek>
Hixie, I'm not sure about allowing whitespace

[10:55:00.0000] <gavinc>
So, would 1MT1M be uh, something to add? or not considering supporting etc?

[10:55:01.0000] <tantek>
between # and unit

[10:55:02.0000] <tantek>
gavinc we are currently considering excluding months

[10:55:03.0000] <tantek>
per the above discussion

[10:55:04.0000] <Hixie>
gavinc: you mean as opposed to P1MT1M? or?

[10:55:05.0000] <tantek>
in short, iCalendar doesn't have it, nor do any current use cases need it

[10:55:06.0000] <Hixie>
tantek: sadly we still have to think about how to parse it, just in case we add it later

[10:56:00.0000] <tantek>
Hixie, agreed.

[10:56:01.0000] <tantek>
so currently, 1MT1M would be invalid.

[10:56:02.0000] <gavinc>
Hixie: Yeah, cause P1MT1M would be fine, yes?

[10:56:03.0000] <tantek>
no, that would also be invalid

[10:56:04.0000] <tantek>
since we are not supporting months (the P1M part)

[10:56:05.0000] <Hixie>
gavinc: modulo months being invalid in general, P1MT1M would be valid ISO-based syntax

[10:57:00.0000] <Hixie>
gavinc: i don't think we'd want to say that "1MT1M" (or "1DT1H" to move away from the ambiguous and controversial cases) would be conforming, though i imagine we'd parse it as if the P was there, since it's unambigous what it means

[10:58:00.0000] <gavinc>
Hixie: So not all valid ISO durations would be conforming?

[10:58:01.0000] <tantek>
Hixie, agreed with parsing it, but similar to CSS forward compatible parsing, we would ignore values with months as unsupported.

[10:58:02.0000] <tantek>
gavinc - no one supports "all valid ISO durations"

[10:58:03.0000] <Hixie>
gavinc: definitely not, there's like six bazillion different ISO duration syntaxes

[10:58:04.0000] <gavinc>
heh, yes I'm aware

[10:58:05.0000] <tantek>
nor does anyone support "all valid ISO dates"

[10:59:00.0000] <annevk>
what is the reason why durations and date/time are gobbled together?

[10:59:01.0000] <tantek>
so yeah, we're subsetting

[10:59:02.0000] <annevk>
s/why//

[10:59:03.0000] <tantek>
in the fine tradition of RFC 3339, W3C Date-time-note etc.

[10:59:04.0000] <tantek>
annevk - because alternatives are worse?

[10:59:05.0000] <gavinc>
and mixing start datetime and duration to form a single interval

[10:59:06.0000] <Hixie>
annevk: in reality? i think because schema.org used <time datetime=""> for durations and imdb used schema.org and now we might as well support it, because, why not

[11:00:00.0000] <annevk>
Hixie: ah :(

[11:00:01.0000] <annevk>
tantek: having separate attributes would have made sense to me

[11:00:02.0000] <tantek>
annevk - I think we discussed this in person at TPAC

[11:00:03.0000] <annevk>
tantek: putting all kinds of magic into a single attribute that has a different syntax when specified on e.g. <del> or <ins> seems wrong

[11:00:04.0000] <tantek>
a duration attribute

[11:01:00.0000] <tantek>
yeah that bothers me too

[11:01:01.0000] <annevk>
but if schema.org already did it...

[11:01:02.0000] <tantek>
/me would be ok with a duration attribute. but also ok with overloading datetime attribute.

[11:01:03.0000] <tantek>
well, schema.org already went much further / worse

[11:01:04.0000] <annevk>
then again, I hear schema.org is doing RDFa now

[11:01:05.0000] <tantek>
/me wants to avoid that rathole.

[11:01:06.0000] <tantek>
annevk, if you want to make a case for a duration attribute, I'm open to it.

[11:03:00.0000] <Hixie>
jsut make sure to define what happens when both are specified :-)

[11:03:01.0000] <gavinc>
Question, looking over the <time> wiki page. Did the conversation around supporting intervals already come up? I only care a little bit

[11:03:02.0000] <tantek>
Example of an interval?

[11:04:00.0000] <gavinc>
2011-11-15/2011-11-17

[11:05:00.0000] <Hixie>
gavinc: that's just a start time plus a duration

[11:05:01.0000] <Hixie>
gavinc: (or, two times)

[11:05:02.0000] <gavinc>
Well, that wasn't. That was two times

[11:05:03.0000] <gavinc>
yeah

[11:05:04.0000] <gavinc>
But can also be a mix of duration and a time

[11:05:05.0000] <tantek>
That's an event

[11:05:06.0000] <Hixie>
i think composition is better handled in the vocabulary that uses <time>

[11:05:07.0000] <Hixie>
though i did look at ISO8601's ideas here

[11:06:00.0000] <tantek>
Use two elements

[11:06:01.0000] <Hixie>
turns out the syntax is unambiguous enough that we can add it later if there's a use case

[11:06:02.0000] <tantek>
Agreed on composition

[11:07:00.0000] <gavinc>
That's kinda of the question, to say mark up a meeting, we'd recommend two <time> elements one for the start and one for the end with relations of start and end time, vs a single <time> and an interval

[11:09:00.0000] <tantek>
Keep time atomic

[11:10:00.0000] <Hixie>
gavinc: in practice even vEvents in iCalendar use two times rather than an ISO8601 interval

[11:10:01.0000] <gavinc>
Yes, one of the reasons I mentioned I don't care all that much

[11:11:00.0000] <gavinc>
Haven't seen too many intervals in the wild and they can always be decomposed

[11:13:00.0000] <gavinc>
also, I think Hixie was saying there are huge number of ISO formats... I don't think there are for duration. For whole datetimes sure.

[11:13:01.0000] <Hixie>
there's like 8

[11:13:02.0000] <tantek>
Hixie if we add a duration attribute I'd say it's ignored if there is a datetime attribute

[11:13:03.0000] <gavinc>
For duration?

[11:17:00.0000] <Hixie>
gavinc: ok, three for duration, plus 4 for intervals, of which three include duration, so a total of 9 interval formats

[11:17:01.0000] <tantek>
If we're adding a duration attribute to keep datetime consistent across elements, we'd also need to add a timezone attribute for the separate timezone case as well.

[11:17:02.0000] <Hixie>
er, 10 interval formats

[11:17:03.0000] <tantek>
I'll think about it some more and write something up

[11:17:04.0000] <Hixie>
tantek: datetime="" on <time> already has nothing to do with datetime="" on <ins>

[11:17:05.0000] <tantek>
Ok

[11:17:06.0000] <Hixie>
tantek: even back with the old <time> element they had quite different rules

[11:18:00.0000] <Hixie>
and formats

[11:18:01.0000] <tantek>
Ok that's good to know

[11:18:02.0000] <tantek>
Was there any desire to harmonize them?

[11:18:03.0000] <Hixie>
not from me

[11:18:04.0000] <Hixie>
but then my desire was to kill <time> so what do i know :-P

[11:18:05.0000] <gavinc>
Hixie: but if we throw out intervals... then it's just 3 duration formats

[11:19:00.0000] <Hixie>
gavinc: well technically in ISO8601 the duration formats are just a component of time intervals. But yes, three duration formats.

[11:20:00.0000] <AryehGregor>
So using functional methods like .forEach() overrides the value of this.  Is there some way to work around this, other than rewriting with C-style for loops or rewriting all uses of "this" to something else?

[11:20:01.0000] <gavinc>
gavin: ... oh, yeah it's all in the interval section isn't it. ew

[11:20:02.0000] <gavinc>
s/gavin/Hixie/

[11:20:03.0000] <Hixie>
AryehGregor: .bind(), iirc

[11:21:00.0000] <AryehGregor>
How would that be used?

[11:23:00.0000] <tantek>
/me going offline for a bit.

[11:23:01.0000] <Hixie>
i believe you do func.bind(this) and it returns a function with the right |this|

[11:28:00.0000] <Hixie>
though the spec for bind() looks complicated

[11:43:00.0000] <annevk>
<ins datetime=2004> makes some sense

[11:44:00.0000] <annevk>
but I don't really care that strongly

[11:44:01.0000] <annevk>
whenever I get around to even using <ins>, I almost never use any of its attributes

[11:45:00.0000] <divya>
yeah it needs to be something that tools do

[11:45:01.0000] <divya>
not humans

[11:45:02.0000] <Hixie>
yeah <ins> is more there out of inertia than real usage

[11:46:00.0000] <Hixie>
it has just enough to make it pointless to remove

[11:46:01.0000] <Hixie>
like <samp> and others

[11:46:02.0000] <Hixie>
anyway. bbiab.

[11:54:00.0000] <AryehGregor>
What defines that document.createElement("span") returns something whose prototype is HTMLSpanElement instead of HTMLElement or Element?

[11:55:00.0000] <Ms2ger>
HTML

[11:55:01.0000] <AryehGregor>
Where?

[11:55:02.0000] <Ms2ger>
Let's see if I can find it

[11:56:00.0000] <Ms2ger>
http://www.whatwg.org/specs/web-apps/current-work/multipage/elements.html#element-definitions

[11:56:01.0000] <AryehGregor>
That seems kind of vague.

[11:57:00.0000] <Ms2ger>
Patches welcome :)

[12:07:00.0000] <tantek>
Divya, your point about something that tools do was made about HTML an markup in general, and has been shown historically to be wishful at best. It's a tired argument that continues to be falsified in practice.

[12:08:00.0000] <divya>
tantek: i dont remember dates or times so it would be neat if tools do it for me

[12:09:00.0000] <divya>
and with git versioning you could technically mark when every character was inserted/deleted

[12:09:01.0000] <tantek>
You can say that about lots of things. "would be neat if"

[12:10:00.0000] <tantek>
The other perspective to take is that people in practice will be hand authoring so let's make the syntax as simple easy and reliably predictable as possible.

[12:10:01.0000] <divya>
yes i am not sure if html markup is the right place for  versioning content.

[12:10:02.0000] <divya>
that is my concern.

[12:11:00.0000] <divya>
(talking specifically of ins datetime="")

[12:11:01.0000] <divya>
nothing more.

[12:11:02.0000] <tantek>
Ins and del serve a limited function in practice.

[12:11:03.0000] <Ms2ger>
Would be neat if authors didn't do stuput things :)

[12:11:04.0000] <Ms2ger>
/me can't tpye

[12:11:05.0000] <Ms2ger>
(stuput? Really?)

[12:11:06.0000] <divya>
/me thinks it would be neat if Ms2ger could type

[12:11:07.0000] <tantek>
Some bloggers / news sites use ins/del for updates etc.

[12:12:00.0000] <Ms2ger>
dvyai: mm...

[12:12:01.0000] <divya>
definitely

[12:12:02.0000] <divya>
hahah

[12:12:03.0000] <divya>
i do that myself.

[12:12:04.0000] <tantek>
We've already improved ins del in html5 by allowing only dates (it used to require full datetimes)

[12:12:05.0000] <divya>
oh good.

[12:13:00.0000] <Ms2ger>
Pff, html5

[12:13:01.0000] <Ms2ger>
That's so last decade

[12:13:02.0000] <tantek>
We could further improve it by permitting year only and year month only as well just as we are improving the time element

[12:14:00.0000] <tantek>
So you could write as annevk did above

[12:18:00.0000] <annevk>
Ms2ger: did Gecko finally remove CDATASection?

[12:19:00.0000] <TabAtkins>
Hixie: Not really.  For example, using <time> with durations to machine-markup a timeline that you then use script to pass through and provide a visual rendering for.

[12:19:01.0000] <annevk>
Ms2ger: I think there might be some kind of bug on that subject already

[12:28:00.0000] <jgraham>
AryehGregor: You can pass this to forEach as an additional argument

[12:28:01.0000] <Ms2ger>
Hmm, thought that other bug had been fixed already

[12:28:02.0000] <Ms2ger>
And Gecko hasn't removed it yet, I need to get around to that

[12:28:03.0000] <AryehGregor>
jgraham, oh, cool, thanks.

[13:07:00.0000] <kennyluck>
AryehGregor, (re What defines that document.createElement("span") returns something whose prototype is HTMLSpanElement instead of HTMLElement or Element?) I think this one is probably what you are looking for → http://www.whatwg.org/specs/web-apps/current-work/multipage/tree-construction.html#create-an-element-for-the-token

[13:13:00.0000] <Philip`>
kennyluck: That's for the parser, which isn't involved in createElement

[13:14:00.0000] <kennyluck>
Ah, indeed.

[13:20:00.0000] <WeirdAl>
annevk: ping, spec question on XHR2

[13:21:00.0000] <WeirdAl>
https://bugzilla.mozilla.org/show_bug.cgi?id=525816#c32

[13:26:00.0000] <annevk>
your interpretation is correct

[13:26:01.0000] <annevk>
they are mutual exclusive events

[13:26:02.0000] <WeirdAl>
phew :)

[13:26:03.0000] <WeirdAl>
thanks

[13:28:00.0000] <WeirdAl>
Does the spec explicitly state that anywhere?

[13:32:00.0000] <adtykfhyipoh>
sicking I need some help

[13:32:01.0000] <zewt>
to descramble his nick

[13:33:00.0000] <adtykfhyipoh>
hey can you help me

[13:33:01.0000] <smaug____>
better to just ask the question

[13:33:02.0000] <adtykfhyipoh>
Oh yeah and I just use this clump of letters as my username it's not cryptic

[13:33:03.0000] <smaug____>
someone may help

[13:33:04.0000] <adtykfhyipoh>
so I have a form that's action is a php file, but instead of linking to that php file it just downloads it

[13:33:05.0000] <adtykfhyipoh>
why is that

[13:34:00.0000] <zewt>
(is sicking the designated random-php-question guy? heh)

[13:34:01.0000] <adtykfhyipoh>
no but he just joined so I thought he would be online to see my question

[13:35:00.0000] <kennyluck>
lol

[13:36:00.0000] <Philip`>
I think asking random specific people for help is generally considered rude

[13:37:00.0000] <adtykfhyipoh>
yeah I know but I am 9 years old so watcha gonna do. Anyways, can I have help?

[13:38:00.0000] <kennyluck>
adtykfhyipoh, you should probably ask someone from #php

[13:38:01.0000] <adtykfhyipoh>
k

[13:38:02.0000] <Hixie>
re tab's use case above, we ran into each other at lunch and realised that that use case is possible to handle using just <time datettime="year-month">, so it's not a strong use case for months in durations after all

[13:41:00.0000] <annevk>
WeirdAl: Progress Events might say that

[13:42:00.0000] <annevk>
WeirdAl: file a bug / email if you think it should be stated somewhere (preferably including a suggestion as to where)

[13:42:01.0000] <WeirdAl>
I'll have to think about where.

[13:43:00.0000] <WeirdAl>
ah ha!

[13:43:01.0000] <WeirdAl>
"The error, abort, and load event types are mutually exclusive." - from the progress event spec

[13:43:02.0000] <WeirdAl>
of course, it doesn't mention timeout ;)

[13:43:03.0000] <annevk>
i guess it could go in the events summary section of XHR

[13:43:04.0000] <WeirdAl>
we might just need to define "exclusive progress events" or something like that

[13:44:00.0000] <annevk>
well the specs algorithm takes care of the details

[13:44:01.0000] <WeirdAl>
in both specs, stating that when an exclusive progress event fires, no other can

[13:45:00.0000] <annevk>
it's already stated, just needs an informative note about their mutual exclusiveness I think

[13:45:01.0000] <Hixie>
gavinc: oops, i missed one. There are four alternative duration formats, and one of the ones I had mentioned earlier it turns out can take either a comma or a decimal point so it's actually five formats.

[13:45:02.0000] <gavinc>
Hixie: Those zany Germans

[13:45:03.0000] <WeirdAl>
ok - I'll take a look this weekend, annevk

[13:46:00.0000] <bfrohs>
Question about <input type=hidden> -- Are Line Feeds and Carriage Returns allowed in the value? They are specifically disallowed in Text state and Search state, but no mention is made for Hidden state. And, if not, is there an acceptable HTML solution for storing form data from a textarea?

[13:46:01.0000] <annevk>
WeirdAl: thanks

[13:46:02.0000] <gavinc>
Hixie: Anecdotally I don't think I've seen any use of decimals other then in the seconds field

[13:47:00.0000] <Hixie>
anecdotally i've not really seen any of these in wide use :-P

[13:48:00.0000] <Hixie>
bfrohs: yes, they are allowed

[13:48:01.0000] <Hixie>
iirc

[13:48:02.0000] <Hixie>
bfrohs: for legacy reasons you may wish to escape them though as some browsers normalise them away

[13:48:03.0000] <Hixie>
bfrohs: i forget if we fixed that or not

[13:48:04.0000] <Hixie>
in the spec

[13:48:05.0000] <bfrohs>
Hixie: Thank ya much

[13:49:00.0000] <zewt>
annevk: progress events itself doesn't say anything normative about event sequences, right? (eg. which events must be mutually exclusive)

[13:50:00.0000] <gavinc>
Hixie: That's fair. A lot of the time interesting durations have been encoded either with start and end dates, or as a decimal seconds field

[13:52:00.0000] <Hixie>
yeah, personally if i was making a machine-readable format i'd just use floating point seconds, and if i was making a human-readable format i'd do something less impenetrable than iso's formats :-)

[13:59:00.0000] <gavinc>
Python time deltas work rather nicely. They don't have months either. http://docs.python.org/library/datetime.html#timedelta-objects

[14:14:00.0000] <bfrohs>
Hixie: About escaping CR/LF, did you mean to use &#13; and &#10;, or to use another escaping mechanism that's recognized server-side?

[14:14:01.0000] <Hixie>
as this is for working around browser limitations, i'm not sure, you'd have to test the browsers to find out what is necessary

[14:15:00.0000] <bfrohs>
Gotcha, thanks again

[14:17:00.0000] <TabAtkins>
Yeah, given the lunchtime discussion, and the fact that multiple other well-known timedelta formats don't allow months or higher, I say just drop them.

[14:17:01.0000] <Hixie>
anyone know if tantek put up his opinions on that "survey" i had put out earlier?

[14:17:02.0000] <TabAtkins>
Unless it's hidden on the wiki, no.

[14:17:03.0000] <Hixie>
i'm still torn on supporting "1ho" "1hour" and "1hours"

[14:17:04.0000] <TabAtkins>
But not "1hou"?

[14:17:05.0000] <Hixie>
i'm leaning towards not conforming, and probably not supported in the parser either

[14:18:00.0000] <Hixie>
i mean the whole question of supporting any suffixes longer than the minimum required for disambiguating

[14:18:01.0000] <Hixie>
the difficulting is really with "1mi" vs "1min"

[14:18:02.0000] <TabAtkins>
Well, now that we don't even need "min" and "mo" to disambiguate, I think it's fine to stick with single-letter prefixes.

[14:19:00.0000] <Hixie>
yeah, maybe that's the best way to go

[14:20:00.0000] <Hixie>
should datetime="1h " be conforming? (trailing whitespace)

[14:21:00.0000] <TabAtkins>
Yes.

[14:21:01.0000] <Hixie>
note that datetime="PT1H " is not (the ISO8601 equivalent)

[14:21:02.0000] <TabAtkins>
Trailing whitespace in unambiguous formats should always be ignored.

[14:21:03.0000] <Hixie>
the question is about conformance, not parsing

[14:21:04.0000] <TabAtkins>
Yeah, I don't see a reason to make it non-conforming.

[14:22:00.0000] <TabAtkins>
Makes some authoring patterns easier if it's allowed.

[14:22:01.0000] <TabAtkins>
Similar to allowing a trailing comma in object literals.

[14:22:02.0000] <Hixie>
k

[14:22:03.0000] <Hixie>
note that for integers (e.g.) min="1 " is not conforming

[14:23:00.0000] <Hixie>
but then those formats don't have internal whitespace either

[14:23:01.0000] <Hixie>
so that's not a big deal

[14:23:02.0000] <Hixie>
ok, agreed that the extended form for durations can have leading and trailing whitespace

[14:23:03.0000] <TabAtkins>
Yes, exactly.  The authoring pattern I'm referring to isn't relevant there.

[14:24:00.0000] <TabAtkins>
(Where you're mapping an array or object directly into a string and each component ahs a space put after it.)

[14:26:00.0000] <Hixie>
should 1.1h be allowed?

[14:26:01.0000] <Hixie>
(fractional units that aren't seconds)

[14:26:02.0000] <Hixie>
if we support fractional seconds, it provides no additional difficulty as far as i can tell to support fractional everything else

[14:26:03.0000] <TabAtkins>
I don't think there's much need, but I don't think it's problematic either.

[14:27:00.0000] <zcorpan>
the <template> thing, can it parse into a document fragment?

[14:27:01.0000] <TabAtkins>
zcorpan: As opposed to a document?

[14:28:00.0000] <zcorpan>
yes

[14:28:01.0000] <Hixie>
i guess i'll stick to integers for now

[14:28:02.0000] <zcorpan>
there was an argument about document being too heavy weight

[14:28:03.0000] <TabAtkins>
zcorpan: I don't think there's much difference for the use-cases either way.

[14:28:04.0000] <TabAtkins>
If any.

[14:29:00.0000] <slightlyoff>
document fragment doesn't imply new intercepters, new script context, etc.

[14:29:01.0000] <slightlyoff>
which is nice

[14:30:00.0000] <zcorpan>
feel free to suggest it on the list. i'm off to bed

[14:31:00.0000] <astearns>
1.5h seems much more likely than 1.1h

[14:35:00.0000] <TabAtkins>
But 1.5h20m seems... weird.

[14:46:00.0000] <AryehGregor>
New and much spiffier idlharness.js, comments appreciated: view-source:http://w3c-test.org/webapps/DOMCore/tests/submissions/AryehGregor/interfaces.html

[14:46:01.0000] <AryehGregor>
Er: http://w3c-test.org/webapps/DOMCore/tests/submissions/AryehGregor/interfaces.html

[14:46:02.0000] <AryehGregor>
(although you'll want to view source also)

[15:01:00.0000] <jamesr_>
Hixie, a time interval expressed as a # of seconds is really difficult to to convert to a human readable form. it's not actually possible to say what "January 14 2015 11:00:04" + 31556926 seconds will be

[15:01:01.0000] <jamesr_>
since leap second tables don't exist yet for 2015

[15:01:02.0000] <Hixie>
in practice, people ignore leap seconds

[15:02:00.0000] <jamesr_>
saying "plus one year" would actually be more machine readable, in that sense, although it wouldn't express a fixed number of seconds

[15:03:00.0000] <Hixie>
(in fact, in practice, outside of our datacenters, physics labs, and similar situations, most people are in fact unaware that leap seconds exist at all.)

[15:03:01.0000] <jamesr_>
well i figured if we were gonna go semantic web we might as well go full retard^Wpedantic

[15:04:00.0000] <Hixie>
we're not going semantic web :-)

[15:05:00.0000] <Philip`>
/me wonders if the relevant use cases were listed somewhere (since presumably the desired behaviour is totally different if it's for e.g. calendar scheduling)

[15:06:00.0000] <Hixie>
yeah, in the wiki

[15:06:01.0000] <Hixie>
basically, the length of calendar appointments and music tracks

[15:06:02.0000] <Hixie>
and expressing those to a search engine

[15:06:03.0000] <Hixie>
or local page script

[15:09:00.0000] <Philip`>
http://wiki.whatwg.org/wiki/Special:RecentChanges looks like an awful lot of spam :-/

[15:10:00.0000] <rillian_>
wiki spam has gotten terrible in the last few months

[15:10:01.0000] <Hixie>
AryehGregor: is there a way to disable user pages on media wiki, do you know?

[15:10:02.0000] <rillian_>
we have a bot posting all traffic to wiki.xiph.org to irc

[15:10:03.0000] <rillian_>
so we can nuke it as it comes in

[15:12:00.0000] <tantek>
regarding the wiki spam - based on the patterns I suspect it's coming from the same IP

[15:12:01.0000] <tantek>
(have seen similar problems and blocked per IP on the microformats wiki)

[15:13:00.0000] <tantek>
if someone more admin-like than me has access to the logs, we could probably do some IP specific blocking

[15:13:01.0000] <tantek>
rillian_ we have a similar bot for microformats.org/wiki posting wiki edits to #microformats

[15:14:00.0000] <tantek>
it's quite handy for both quickly purging spam, and seeing what areas have interest/activity

[15:15:00.0000] <rillian_>
yep. as long as the traffic isn't too hard

[15:15:01.0000] <rillian_>
er, heavy

[15:16:00.0000] <tantek>
hence my question about IP address - typically after blocking 1-2 IPs this stuff gets stopped.

[15:16:01.0000] <tantek>
I think the same spammer is attacking wiki.openwebfoundation.org

[15:16:02.0000] <Hixie>
i nuked a bunch of them

[15:16:03.0000] <Hixie>
anyone want admin privs?

[15:17:00.0000] <Hixie>
anyone not have admin privs? :-)

[15:17:01.0000] <rillian_>
sorry, have enough spam filters to clean already :(

[15:17:02.0000] <Hixie>
hehe

[15:17:03.0000] <tantek>
Hixie - I think I already have admin privs, but I'm not sure how to get the IP addresses of the folks creating spam accounts.

[15:18:00.0000] <Hixie>
i just block the accounts and check the "prevent this ip" checkbox

[15:18:01.0000] <Hixie>
it seems to do the right thing

[15:18:02.0000] <tantek>
hmm...

[15:18:03.0000] <tantek>
I thought that was the default - will double-check

[15:18:04.0000] <Hixie>
it is i think

[15:18:05.0000] <rillian_>
there's a special priv to be able to access the IP address table, iirc

[15:19:00.0000] <tantek>
Hixie - go ahead and max-out my admin privs if they're not already.

[15:19:01.0000] <Hixie>
looks like they are maxed out

[15:21:00.0000] <AryehGregor>
Hixie, no specific feature allows that, but you could probably configure it that way.

[15:22:00.0000] <Hixie>
how about preventing creation of new pages for non-admin users?

[15:22:01.0000] <Hixie>
i don't mind us giving admin rights away to anyone who wants them, basically

[15:22:02.0000] <AryehGregor>
Hixie, you should be able to do $wgNamespaceProtection[NS_USER] = 'protect' or something to stop non-admins from editing user pages.

[15:22:03.0000] <Hixie>
but just moving the bar to "you have to ask someone who is already an admin" would likely go a long way

[15:23:00.0000] <Hixie>
that would be a start i guess

[15:23:01.0000] <Hixie>
/me pokes around

[15:23:02.0000] <AryehGregor>
I think you'd be best served installing better automatic spam account filters rather than trying to lock down the wiki more.

[15:23:03.0000] <AryehGregor>
Wikis become a lot less useful as they get locked down more.

[15:24:00.0000] <Hixie>
yeah, that would be good too

[15:24:01.0000] <Hixie>
anyone around want to do that?

[15:24:02.0000] <Hixie>
if anyone wants to volunteer to play with the wiki, mail me

[15:25:00.0000] <Hixie>
should a duration of "P" be considered 0 seconds, or a failure?

[15:25:01.0000] <Hixie>
(same for "" and " ")

[15:25:02.0000] <TabAtkins>
I vote failure.

[15:25:03.0000] <TabAtkins>
Though, hm.

[15:25:04.0000] <mkanat>
For media?

[15:25:05.0000] <TabAtkins>
Maybe not.

[15:25:06.0000] <TabAtkins>
mkanat: No, for <time> durations.

[15:26:00.0000] <mkanat>
Ah. No opinion, then. :-)

[15:26:01.0000] <TabAtkins>
Hixie: Actually, I vote 0 seconds.

[15:26:02.0000] <Hixie>
on what grounds?

[15:26:03.0000] <TabAtkins>
To allow authoring cases like serializing an object containing duration pieces, and not having to worry about no duration pieces being passed.

[15:26:04.0000] <Hixie>
presumably you agree that "3s X" should return failure

[15:26:05.0000] <Hixie>
hm, good reason

[15:27:00.0000] <TabAtkins>
Yes, I agree with that.

[15:27:01.0000] <Hixie>
that argues for it being conforming, too

[15:27:02.0000] <TabAtkins>
Yeah, sure.

[15:27:03.0000] <Hixie>
not sure i would necessarily want to encourage authors to write <time></time> though

[15:27:04.0000] <Hixie>
and mean zero seconds

[15:27:05.0000] <Hixie>
as opposed to "not yet filled in"

[15:27:06.0000] <zewt>
do no browsers implement File with DataTransferItem yet, or is my test code just broken?

[15:27:07.0000] <zewt>
("no" = chrome + firefox)

[15:28:00.0000] <TabAtkins>
Hixie: Make the lacuna value be something other than the empty string?

[15:28:01.0000] <tantek>
Btw I specifically included fixed point numbers for durations

[15:29:00.0000] <tantek>
P or "" should be invalid

[15:29:01.0000] <tantek>
It's more likely to be a typo than intended

[15:30:00.0000] <tantek>
1.5h is slightly more human readable than 1h30m

[15:31:00.0000] <TabAtkins>
tantek: You think so?  I'm split, but I think it's a corner case.  Most decimal hours are less readable than h+m

[15:31:01.0000] <tantek>
Tabatkins yes I do think so. Based on publishing example seen

[15:32:00.0000] <tantek>
Examples*

[15:32:01.0000] <smaug____>
1h30min is more readable, IMO

[15:33:00.0000] <smaug____>
that could be locale dependent

[15:34:00.0000] <Hixie>
1h30 is the norm in locales like france, fwiw

[15:34:01.0000] <Hixie>
zewt: i'm not aware of any implementations, but i'm often the last to know

[15:34:02.0000] <zewt>
k

[15:34:03.0000] <Phrogz>
TabAtkins: Thanks for the mailing list clarification on SVG-in-IMG-in-Canvas. (Before I got spec-spanked by Boris.)

[15:34:04.0000] <zewt>
just wanted to make sure it wasn't implemented everywhere and I was doing something silly

[15:34:05.0000] <Hixie>
i think i'm gonna go with no time units being an error, and no fractions in non-second units, for now at least

[15:40:00.0000] <Hixie>
i guess since we recently made ".1" a valid float value, "1m.1s" should be valid?

[15:40:01.0000] <TabAtkins>
Yes.

[15:40:02.0000] <Hixie>
hm, it looks kinda bad

[15:41:00.0000] <TabAtkins>
No, it's fine!

[15:41:01.0000] <Hixie>
as in, it looks like "1m. 1s"

[15:41:02.0000] <zewt>
(sigh, do I really have to convince someone that synchronous APIs in workers exist)

[15:41:03.0000] <zewt>
"mailing list busywork"

[15:42:00.0000] <TabAtkins>
zewt: That person doesn't disbelieve that sync APIs exist.

[15:42:01.0000] <zewt>
sure seems to

[15:42:02.0000] <TabAtkins>
zewt: They think that they *shouldn't*, or maybe just that *this* sync API shouldn't.

[15:42:03.0000] <TabAtkins>
And I think that all the sync apis should be promise-based instead.

[15:42:04.0000] <zewt>
"Considering the current messaging API and the allowed host APIs, I strongly disagree." <- that guy

[15:43:00.0000] <TabAtkins>
I'm not sure what sentence is supposed to mean in the first place.

[15:43:01.0000] <TabAtkins>
Rather than writing a ranty explanatory email, perhaps ask him?

[15:44:00.0000] <zewt>
gmail sure makes it a challenge to trim quotes

[15:44:01.0000] <zewt>
delete a blank line, and an inner quote suddenly loses its block marker entirely

[15:44:02.0000] <TabAtkins>
zewt: Use solely plain text.

[15:44:03.0000] <TabAtkins>
Much easier.

[15:45:00.0000] <TabAtkins>
/me apparently doesn't believe in guis.

[15:45:01.0000] <zewt>
then i have to toggle back and forth all the time, otherwise it'll send my mails as ugly non-flowed 80-column text as if it's the 90s

[15:45:02.0000] <TabAtkins>
I don't see a problem with this.  ^_^

[15:50:00.0000] <Hixie>
"P1DT1H" is valid and should be parsed as 25 hours.

[15:50:01.0000] <zewt>
TabAtkins: i claim a slight irony in HTML folks preferring fixed-format messages that can't be reflowed for the user's system :)

[15:50:02.0000] <Hixie>
"P1D1H" is invalid, but i intend to also parse it as 25 hours

[15:50:03.0000] <TabAtkins>
zewt: Even more, us CSS people *hate* css-styled emails for the most part.

[15:50:04.0000] <Hixie>
"P1H1D" is again invalid (order matters for the iso variant), but again i intend to also parse it as 25 hours

[15:50:05.0000] <TabAtkins>
Hixie: Yes, seems fine.

[15:50:06.0000] <Hixie>
now the question:

[15:51:00.0000] <Hixie>
"P1HT1D". parse it the same way? (i.e. ignore the T in this case?)

[15:51:01.0000] <TabAtkins>
zewt: We all use ascii formats like Markdown or similar.

[15:51:02.0000] <TabAtkins>
Hixie: Yes, parse the same way, I think.

[15:51:03.0000] <Hixie>
and how about "P1H1DT" and "PT1HT1S"?

[15:51:04.0000] <Hixie>
i.e. T not in between components, or multiple Ts

[15:52:00.0000] <TabAtkins>
Hixie: P1MT1M is still not allowed, right, as you're not doing month durations?

[15:52:01.0000] <Hixie>
also, how about two TTs in a row

[15:52:02.0000] <Hixie>
TabAtkins: correct, the T is completely pointless here, only allowed for ISO compat

[15:52:03.0000] <zewt>
TabAtkins: not advocating CSS in emails--people *don't* need advanced formatting in email

[15:52:04.0000] <TabAtkins>
Hixie: Ignore a single T, sure.  Don't see any reason to accept multiple Ts.

[15:53:00.0000] <TabAtkins>
Hixie: Though, just "remove all P and T from the string before processing" is simple and easy.

[15:53:01.0000] <Hixie>
well not accepting multiple Ts requires keeping track of whether we got one or not

[15:53:02.0000] <Hixie>
which is fine by me

[15:53:03.0000] <TabAtkins>
Yeah, so shrug, either way is fine with me.

[15:53:04.0000] <Hixie>
well presumably you don't want P1TH" to be one hour

[15:53:05.0000] <TabAtkins>
Ah, true that.

[15:53:06.0000] <TabAtkins>
But still, skipping all Ts between duration tokens seems fine I guess.

[15:53:07.0000] <TabAtkins>
And Ps.

[15:53:08.0000] <TabAtkins>
Or maybe just skip Ps at the beginning?

[15:53:09.0000] <mkanat>
zewt: This is going to be very hard without CSS: https://bug607829.bugzilla.mozilla.org/attachment.cgi?id=515285

[15:53:10.0000] <Hixie>
P is just at the start

[15:54:00.0000] <Hixie>
(parser will skip whitespace before it)

[15:54:01.0000] <Hixie>
ok i'll skip any Ts between any two components, but fail if T is used in any other way (between number and unit, at the end, two in a row)

[15:54:02.0000] <TabAtkins>
Hixie: I don't see why we should fail with Ts at the end or two-in-a-row.

[15:55:00.0000] <TabAtkins>
"P1hT1mT" and "P1hTT1m" both seem invalid but easy to parse.

[15:55:01.0000] <Hixie>
well mostly because it's easier to spec that way

[15:55:02.0000] <Hixie>
ok

[15:55:03.0000] <Hixie>
will support those then

[15:56:00.0000] <TabAtkins>
mkanat: Yeah, computer-generated and "active" emails can use HTML well.  Human-written emails rarely do.

[15:56:01.0000] <mkanat>
TabAtkins: Yeah, true.

[15:56:02.0000] <mkanat>
Unfortunately, my understanding is that gmail strips CSS, making it very hard to standardize such things.

[15:56:03.0000] <mkanat>
From a client perspective.

[15:56:04.0000] <TabAtkins>
(The primary effect of using HTML+CSS in human-written emails is to use bizarre font sizes or dark colors that don't work well with my theme.)

[15:58:00.0000] <TabAtkins>
Or, ugh, to use colors to indicate what's quoted and what's your own writing.

[15:58:01.0000] <Hixie>
ok i think i have the parser figured out, now to convert it to english

[15:59:00.0000] <TabAtkins>
Why *anyone* thinks that's a good idea when it trivially doesn't scale past the first reply is beyond me.

[15:59:01.0000] <zewt>
TabAtkins: i don't think emails should be able to set fonts or font sizes, either

[15:59:02.0000] <zewt>
setting fixed-width (for code) is okay, but you don't need direct font control for that

[15:59:03.0000] <TabAtkins>
zewt: So you think that headings and <small> should have no effect in HTML email?


2011-11-18
[16:00:00.0000] <zewt>
i don't know in general, but i agree that having random people posting in GIGANTO HUGE TEXT (they're important people, folks!) is really annoying

[16:00:01.0000] <AryehGregor>
heycam, why does WebIDL seem to use TypeError for so many different things?  AFAIK we have zero interop on what exception types to throw, so wouldn't it make the most sense to use different exception types for different types of errors?  Like for passing too few arguments, at least -- that seems like it could benefit from a unique error type.

[16:00:02.0000] <zewt>
i think flowing email instead of forcing everything to 80-column (especially on mobile) is a major win, though, and basic formatting (italic, bold)

[16:01:00.0000] <TabAtkins>
zewt: Flowing is incompatible with using text-based quoting indicators.

[16:01:01.0000] <AryehGregor>
. . . maybe it's not so many places, actually.

[16:01:02.0000] <zewt>
(links, images)

[16:01:03.0000] <AryehGregor>
ES also uses TypeError a lot.

[16:01:04.0000] <zewt>
TabAtkins: no it's not; the renderer just needs to be a bit smarter--gmail does it fine

[16:01:05.0000] <AryehGregor>
But it doesn't seem to be the right type for too few arguments.

[16:02:00.0000] <TabAtkins>
zewt: Really?  I occasionally see Gmail do dumb things with flowed text and >> quoting.

[16:02:01.0000] <zewt>
i'm not entirely sure what kind of magic gmail does

[16:03:00.0000] <TabAtkins>
I mean, it knows how to convert blockquotes into a proper plaintext.

[16:03:01.0000] <TabAtkins>
If everyone would just write in Markdown this would be easier.

[16:04:00.0000] <zewt>
i guess more specifically, flowed isn't enough for quotes; you need HTML's blockquote to supplement it

[16:04:01.0000] <TabAtkins>
Yeah.

[16:04:02.0000] <gavinc>
On decimals in durations... perhaps something along the lines of decimals can only be used in the final terminal? eg 1.5h makes sense 1.5h10m does not. Really any new field after a decimal doesn't make a whole lot of sense

[16:04:03.0000] <TabAtkins>
Or some other explicit indicator of start/stop quoting.

[16:05:00.0000] <zewt>
blockquote seems saner than > quoting in general, in particular because no matter how advanced human society gets, people will still feel the need to get "inventive" with quote markers

[16:05:01.0000] <zewt>
("i don't like >, let's use # instead" STOP THAT)

[16:05:02.0000] <TabAtkins>
Or the person's initials as quote markers, urgh.

[16:06:00.0000] <zewt>
don't forget "You said:"

[16:06:01.0000] <zewt>
(... who?)

[16:07:00.0000] <Dashiva>
Don't forget forced line wrapping

[16:07:01.0000] <zewt>
talking about spec text is a whole lot easier with basic formatting, though

[16:07:02.0000] <TabAtkins>
Sure.

[16:07:03.0000] <zewt>
not being able to mimic spec rendering in email hurts

[16:07:04.0000] <TabAtkins>
All the formatting allowed in Markdown is useful without being obnoxious.

[16:08:00.0000] <zewt>
i wonder if there's a mystery firefox setting to disable pasting html

[16:14:00.0000] <AryehGregor>
Don't forget forced line wrapping that's then forced a second time so every line wraps to a second line that only has one word on it.

[16:15:00.0000] <AryehGregor>
Kind of like when the MTU decreases by a few bytes somewhere in the middle of transit.

[16:15:01.0000] <zewt>
(bleh, maybe i can disable it on gmail with some greasemonkey hackery; it's only gmail that it's a day-to-day headache with)

[16:20:00.0000] <AryehGregor>
"Due to a filter you created, this message was not sent to Spam."  That needs a button saying "The filters were right, this isn't spam, try being smarter next time."

[16:21:00.0000] <Philip`>
Does Gmail actually learn from things you mark as spam/not-spam?

[16:21:01.0000] <AryehGregor>
I hope so.

[16:21:02.0000] <Philip`>
/me has never noticed an effect like that

[16:22:00.0000] <AryehGregor>
I'm guessing the effect isn't per-user.

[16:22:01.0000] <AryehGregor>
Or maybe it is.

[16:22:02.0000] <AryehGregor>
I don't know, I don't look at my spam folder much.

[16:23:00.0000] <AryehGregor>
But I'm sure it at least feeds back into whatever their global spam filter is.  Like I bet if they add a new heuristic, they'll adjust the weight they give it based on what percentage of users change its results, or something.

[16:23:01.0000] <AryehGregor>
Isn't the classic way to do spam filtering a Bayesian filter that updates based on manual user corrections?

[16:23:02.0000] <TabAtkins>
Yup.

[16:23:03.0000] <AryehGregor>
If they did that or some variant but the weights were global instead of per-user, you wouldn't notice an individual effect from clicking Spam/Not Spam, but it would have an effect if enough users did it.

[16:24:00.0000] <AryehGregor>
Maybe an elaboration would have an extra per-user layer so your personal spam filter is more responsive to your changes.

[16:24:01.0000] <TabAtkins>
I wish/hope they do.

[16:24:02.0000] <AryehGregor>
I honestly have no idea, spam filtering is all voodoo magic.  But surely you'd have no way of checking your filter's accuracy if not for the Spam/Not Spam buttons.

[16:25:00.0000] <TabAtkins>
I'm quite certain we use a Bayesian filter of some variety.

[16:25:01.0000] <zewt>
it's pretty annoying that gmail filters have no "mark as spam" option

[16:25:02.0000] <TabAtkins>
I'm hoping/wishing for a personalized filter layered atop the global one.

[16:25:03.0000] <AryehGregor>
zewt, . . . they don't?

[16:26:00.0000] <AryehGregor>
Oh, the filters.

[16:26:01.0000] <zewt>
nope; the closest is delete

[16:26:02.0000] <AryehGregor>
As in the things Gmail calls filters, not spam filters.

[16:26:03.0000] <AryehGregor>
Right.

[16:26:04.0000] <AryehGregor>
That would be nice.

[16:26:05.0000] <AryehGregor>
/me uses the "Don't mark as spam" feature for several filters

[16:26:06.0000] <zewt>
i havn't had too much trouble with false positives on gmail

[16:27:00.0000] <TabAtkins>
Other than the "mark everything from @google.com as spam" issue, me neither.

[16:27:01.0000] <AryehGregor>
I've had a few simple ones.

[16:27:02.0000] <TabAtkins>
And I have a fitler to prevent that now.

[16:27:03.0000] <AryehGregor>
Like yeah, @google.com gets marked as spam a lot.

[16:27:04.0000] <zewt>
i recently had "69% Discount! BUY VIGARA & CILAIS NOW!!! Next Day Delivery!" pass gmail's spam filter

[16:27:05.0000] <AryehGregor>
I wonder if it's due to bad SPF rules or something.  I think I investigated that once.

[16:27:06.0000] <zewt>
how could they possibly identify *that* as spam?

[16:28:00.0000] <AryehGregor>
I've also had routine daily mailings from my servers (like logwatch) marked as spam sometimes.

[16:28:01.0000] <TabAtkins>
zewt: Too much spoofing, I suppose, and we *for some reason* don't use the existing verification systems.

[16:28:02.0000] <AryehGregor>
IIRC, once most of the logwatch mails I got were marked as spam, but I marked them all not spam a couple of times and they stopped being marked as spam, so maybe that's anecdotal evidence that it learns from mistakes like that.

[16:28:03.0000] <zewt>
gmail has more incentive to listen to you screaming "not spam" than "spam"

[16:29:00.0000] <zewt>
since false positives are much more dangerous than false negatives

[16:29:01.0000] <AryehGregor>
TabAtkins, what existing verification systems?  SPF, which breaks forwarding?  Or DKIM, which requires everyone sending mail from a domain to have that domain's private key?

[16:29:02.0000] <zewt>
i imagine that has to be pretty localized, though, or it'd be abusable (create accounts, send your spam to them, mark them not spam)

[16:30:00.0000] <AryehGregor>
Verification of the sender in SMTP is just completely broken, because of legacy constraints like mailing lists.

[16:30:01.0000] <TabAtkins>
I know nothing of email verification systems and their shortcomings.

[16:30:02.0000] <AryehGregor>
SPF and DKIM are great, if all your mail is being sent from servers you control.

[16:31:00.0000] <AryehGregor>
And not being forwarded or mangled.

[16:31:01.0000] <AryehGregor>
Otherwise, not so much.

[16:31:02.0000] <TabAtkins>
zewt: Makes sense.  I suppose that using a personalize ham filter and a global spam filter works fine.

[16:31:03.0000] <TabAtkins>
Since you *always* want spam information to be globally contributed, I guess.

[16:31:04.0000] <zewt>
global spam filtering is also abusable, in the opposite way, so at least it probably has to be heavily diluted

[16:31:05.0000] <zewt>
("hey guys, let's make gmail mark ebay as a spammer")

[16:31:06.0000] <TabAtkins>
Only with more difficulty, and hamminess is typically consulted before spamminess.

[16:32:00.0000] <zewt>
of course, there's subjectivity in there, too

[16:32:01.0000] <AryehGregor>
. . . why is Chrome so persistently bad at restoring tabs when you close multiple windows in succession?

[16:32:02.0000] <zewt>
for example, i consider mail from companies i've done business with that i didn't give them permission to use my email address for ("newsletters", "special offers") to be spam; some people don't

[16:32:03.0000] <AryehGregor>
Not only does it not restore any window other than the last you closed, it commonly forgets about the other window entirely.

[16:33:00.0000] <AryehGregor>
/me hopes he didn't have any important tabs that got eaten

[16:35:00.0000] <AryehGregor>
Would it be so hard for it to notice when I close two windows within three seconds of each other and restore both when I restart?

[16:35:01.0000] <AryehGregor>
Reliably?

[16:35:02.0000] <AryehGregor>
/me grumbles

[16:35:03.0000] <zewt>
firefox yells at you if you close a window with multiple tabs open

[16:35:04.0000] <AryehGregor>
The first time, until you uncheck the box.

[16:35:05.0000] <zewt>
there's sort of a disconnect in the way sessions work vs. the way chrome tries to look

[16:36:00.0000] <zewt>
eg. how chrome tries to look like a background system that's always present, and how people usually don't file->exit from chrome

[16:36:01.0000] <zewt>
where session restores tend to be tied to file->exit closing everything at once

[16:36:02.0000] <zewt>
it should probably at least have a "recently closed windows", which is restored with the session

[16:45:00.0000] <AryehGregor>
/me didn't realize you can use File->Exit to close everything at once

[16:45:01.0000] <AryehGregor>
That's a usable workaround, if it restores all windows automatically.

[16:45:02.0000] <paul_irish_>
AryehGregor: i use the Session Buddy extension which i set to autosave my windows

[16:45:03.0000] <heycam>
AryehGregor, JS itself tends to favour TypeError for those kinds of things (insufficient arguments, bad types, etc.)

[16:45:04.0000] <paul_irish_>
but also File ->Exit ya.

[16:46:00.0000] <heycam>
AryehGregor, which is why I went with it nearly everywhere

[16:52:00.0000] <jamesr_>
has anyone verified that Charles Pritchard isn't just a sophisticated n-gram email generation bot?

[16:58:00.0000] <Hixie>
ok for people following on at home i did a regen with some of the new text in the microsyntaxes section

[16:59:00.0000] <Hixie>
yearless dates (e.g. birthdays, 05-06): http://www.whatwg.org/specs/web-apps/current-work/#yearless-dates

[16:59:01.0000] <Hixie>
timezones as a separate concept: http://www.whatwg.org/specs/web-apps/current-work/#time-zones

[17:00:00.0000] <Hixie>
and durations: http://www.whatwg.org/specs/web-apps/current-work/#durations

[17:04:00.0000] <Hixie>
bbiab.

[17:05:00.0000] <mkanat>
Hixie: Hmm. I'm assuming Olsen timezones have already been discussed?

[17:07:00.0000] <kennyluck>
Hixie, "One or more digits followed by a U+004D LATIN CAPITAL LETTER M character, representing a number of hours." should read "number of minutes."

[17:23:00.0000] <zewt>
chrome doesn't implement the Worker interface inside workers? weird

[18:36:00.0000] <tantek>
mkanat Olsen style named timelines were previously rejected long ago from microformats' timezone microsyntaxes.

[18:37:00.0000] <mkanat>
tantek: Fair enough. I think they do make life easier for implementors who want perfect accuracy, but they're not going to be typed by most actual users.

[18:37:01.0000] <tantek>
The short version for why no Olsen named TZs is that people notoriously get them wrong especially with respect to DST

[18:37:02.0000] <mkanat>
As in, notoriously implement interpreting them improperly?

[18:38:00.0000] <tantek>
They dot actually make life easier for higher data quality - which is the right way to evaluate anything an author/coder might emit into HTML

[18:38:01.0000] <tantek>
s/dot/don't

[18:39:00.0000] <tantek>
Smart folks all the time write/say PDT when they mean PST and vice versa.

[18:40:00.0000] <mkanat>
Yes, but I was thinking the full Olsen zones, America/Los_Angeles and so on.

[18:40:01.0000] <mkanat>
I agree that the three-letter TZs are an abomination.

[18:40:02.0000] <tantek>
Better to address it with numerical precision upfront (with offset from Z) than provide the illusion of precision with named TZs

[18:41:00.0000] <tantek>
And it's yet another named registry dependency

[18:41:01.0000] <tantek>
Worse, one that's political and unpredictable

[18:42:00.0000] <tantek>
Never mind the DMCA takedown of the NIH FTP URL

[18:42:01.0000] <TabAtkins_>
Yeah, the city-based registry changes over time.

[18:43:00.0000] <mkanat>
I suppose numerical offsets do give you accuracy.

[18:43:01.0000] <tantek>
All those RFCs with references to Olsen now have broken links

[18:43:02.0000] <mkanat>
Even if the DST changeover goes to some other date in the future, your time is still accurate--it's just not in the TZ that that location would have, when you actually get to that date.

[18:44:00.0000] <mkanat>
I see the problems of trying to bake the Olsen DB into clients.

[18:45:00.0000] <zewt>
well, the biggest problem with named timezones is it's a moving target

[18:45:01.0000] <mkanat>
Right, that's the problem with baking it into clients.

[18:46:00.0000] <mkanat>
And people who want to use them on the server-side already have libraries for it that can emit times with numeric offsets if they want to send those to the client, so that does seem fine.

[18:50:00.0000] <tantek>
Mkanat, worse than baking into clients, with HTML/microformats it's a matter of baking into *documents* which must be much more reliable than clients.

[18:51:00.0000] <mkanat>
tantek: Yeah, that's a good point.

[18:59:00.0000] <tantek>
Also tried to send this earlier but I think I was already too far off the ground:

[18:59:01.0000] <tantek>
Hixie, fine with omitting fixed point numbers or now til examples documented on wiki, however we should be similarly conservative with out of order unit values etc until someone finds backward compat reasons/examples.

[19:00:00.0000] <TabAtkins_>
tantek: Don't quite agree.  Allowing out-of-order unit values makes both parsing and generation somewhat easier.

[19:01:00.0000] <tantek>
Disagree because it makes simple transposition errors more difficult to detect

[19:02:00.0000] <TabAtkins_>
Hmm, transposition seems like a minor issue here.

[19:02:01.0000] <TabAtkins_>
Because the units are separate from each other by at least one digit.

[19:03:00.0000] <tantek>
Not that way

[19:03:01.0000] <tantek>
But like this

[19:03:02.0000] <tantek>
Writing 1m5h when 1h5m is intended

[19:03:03.0000] <tantek>
Also easy to miss that error web reviewing.

[19:04:00.0000] <TabAtkins_>
Hm, maybe.

[19:04:01.0000] <tantek>
Because people see the order of digits and assign relevance more to the order than to he unit suffixes

[19:06:00.0000] <tantek>
This is all about optimizing ease of authoring high quality data.

[19:07:00.0000] <tantek>
so i'd rather start with a more conservative syntax

[19:08:00.0000] <tantek>
Where errors are earlier / more easily detected and corrected

[19:09:00.0000] <tantek>
Speaking if errors - typing on an iPod sucks. I'm going to dinner and will resume later tonight in a laptop

[19:11:00.0000] <tantek>
/me didn't mean to have hat message be self-supporting. :/

[19:11:01.0000] <TabAtkins_>
^_^

[19:49:00.0000] <erlehmann>
tantek, with “1h5m”, transposition errors can happen. so is the answer not something like “12:34”, where only order matters?

[20:11:00.0000] <tantek>
erlehmann: I'm considering exactly that for a potential separate duration attribute.

[20:12:00.0000] <erlehmann>
i see what you did there.

[21:56:00.0000] <Hixie>
ok. adding an element.

[21:56:01.0000] <Hixie>
step 1: adding a section for the element itself.

[21:59:00.0000] <Hixie>
step 2: updating the category lists to include the new element.

[21:59:01.0000] <Hixie>
pick an element with the same basic design (in this case <data>), and search the spec for mentions of that element in the category descriptions and copy what i did there.

[22:01:00.0000] <Hixie>
step 3: update images/content-venn.svg

[22:02:00.0000] <Hixie>
step 4: update the syntax section. not needed in this case as it's a "normal" element.

[22:02:01.0000] <Hixie>
step 5: update the phrasing element usage summary examples

[22:04:00.0000] <Hixie>
step 6: update the parser. unnecessary in this case as it's a "normal" element.

[22:04:01.0000] <Hixie>
step 7: add new examples and update existing ones that are affected by the new element.

[22:06:00.0000] <tantek__>
hey Hixie, I've been updating / tweaking the Time element wiki page regarding durations

[22:07:00.0000] <tantek__>
capturing a bunch of the things discussed in IRC

[22:13:00.0000] <Hixie>
step 8: update the rendering section. unnecessary in this case as there's no non-default rendering to speak of.

[22:14:00.0000] <Hixie>
step 9: update the obsolete section as appropriate. unnecessary in this case as I forgot to add <time> to that section when I dropped it. :-)

[22:14:01.0000] <Hixie>
step 10: update the indexes

[22:15:00.0000] <tantek__>
sounds like fun

[22:21:00.0000] <Hixie>
step 11: update the aria mappings. i believe there's nothing to map in this case.

[22:25:00.0000] <Hixie>
ok

[22:25:01.0000] <Hixie>
regen

[22:25:02.0000] <Hixie>
could do with more <data> examples now

[22:25:03.0000] <Hixie>
since i converted a lot of them back to <time> again

[23:00:00.0000] <rniwa>
Hixie: are you still there?

[23:00:01.0000] <Hixie>
yup

[23:01:00.0000] <rniwa>
Hixie: I have a question for you regarding accessKey content attribute

[23:01:01.0000] <rniwa>
Hixie: should accessKey content attribute simulate click upon key press?

[23:01:02.0000] <rniwa>
i.e. simulate mousedown, mouseup, & click

[23:01:03.0000] <rniwa>
or just click?

[23:01:04.0000] <Hixie>
it should do what the spec says :-)

[23:02:00.0000] <Hixie>
"When the user presses the key combination corresponding to the assigned access key for an element, if the element defines a command, the command's Hidden State facet is false (visible), the command's Disabled State facet is also false (enabled), and the element is in a Document, then the user agent must trigger the Action of the command."

[23:03:00.0000] <Hixie>
then see the subsections under http://www.whatwg.org/specs/web-apps/current-work/#commands for the specific definition of what the Action of an element is in any particular case

[23:03:01.0000] <Hixie>
(all elements with an assigned access key by definition have an Action)

[23:04:00.0000] <rniwa>
Hixie: ok, the spec appears to suggest we don't simulate mouedown/moseup

[23:05:00.0000] <rniwa>
just double-checking with you

[23:06:00.0000] <Hixie>
yeah nothing ever simulates mousedown/mouseup. The exact behaviour depends on what the element is. e.g. for <option> elements the event that eventually fires is 'change', for <div> elements the event that eventually fires is 'click', for <label> no event fires on the label but something might happen to the associated control, etc.

[23:07:00.0000] <erlehmann>
i want a novel by charles stross, where lawmakers of the future have the (?) embroidered on their clothing

[23:07:01.0000] <Hixie>
actually on <div> you'd see a 'focus' event also

[23:09:00.0000] <rniwa>
Hixie: right.

[23:09:01.0000] <rniwa>
Hixie: we might not be doing the right thing for focus at the moment

[23:09:02.0000] <rniwa>
but someone is working on accessKey content attribute

[23:09:03.0000] <rniwa>
so we might match the spec in near future :)

[23:09:04.0000] <rniwa>
Hixie: thanks for the help

[23:10:00.0000] <Hixie>
btw looking at the Action section it looks like the way it refers to the activation behaviour is a bit out of date

[23:11:00.0000] <Hixie>
so the exact text might change

[23:11:01.0000] <Hixie>
i think it won't affect the normative meaning

[23:12:00.0000] <Hixie>
hm. step 12: update the microdata algorithms to use <time> again. oops.

[23:12:01.0000] <Hixie>
tantek: if you're still around, check out the spec and let me know if the new text looks good to you

[23:14:00.0000] <Hixie>
http://www.whatwg.org/specs/web-apps/current-work/#the-time-element

[23:15:00.0000] <rniwa>
hm...

[23:16:00.0000] <Hixie>
hm?

[23:44:00.0000] <hsivonen>
I find it surprising that IE9 on Windows Phone doesn't have a JS JIT (according to http://www.sitepoint.com/mobile-ie9-differences/ )

[23:45:00.0000] <hsivonen>
ooh. no Compatibility View, either

[23:45:01.0000] <annevk>
Hixie: no check-in yet?

[23:48:00.0000] <Hixie>
about to do it, unless you see a problem :-)

[23:49:00.0000] <annevk>
it doesn't say how to extract the datetime value

[23:49:01.0000] <Hixie>
"The datetime value of a time element is the value of the element's datetime content attribute, if it has one, or the element's textContent, if it does not."

[23:50:00.0000] <Hixie>
that not enough?

[23:51:00.0000] <annevk>
from a parser perspective there does not seem to be one algorithm for getting the value out

[23:51:01.0000] <Hixie>
"The time element represents its contents, with the added semantic that the the value given for the matching syntax in the list below, if any, is the meaning that corresponds to the element's contents."

[23:51:02.0000] <Hixie>
so you find which syntax it matches, if any, and that's what it represents

[23:53:00.0000] <Hixie>
admittedly, that makes the error handling parser for durations somewhat pointless

[23:54:00.0000] <annevk>
so you parse them as each of them and if one does not return an error you are okay?

[23:55:00.0000] <Hixie>
what the spec says now is that you check to see which syntax they conform to

[23:55:01.0000] <Hixie>
but i guess i can add a detector algorithm

[23:55:02.0000] <Hixie>
i'll do that tomorrow

[23:56:00.0000] <annevk>
ok, sounds good

[00:05:00.0000] <Hixie>
i wonder how to do this short of just having an algorithm that is all the algorithms together

[00:07:00.0000] <Hixie>
distinguishing a global date and time string from a local date and time string, for instance, without using some crude heuristic like "ends in a Z or has a + or - somewhere in it"

[00:12:00.0000] <annevk>
depends on the extensibility you want I suppose

[00:14:00.0000] <annevk>
http://xkcd.com/979/ I hate it when that happens :)

[00:33:00.0000] <annevk>
sweet http://blog.chromium.org/2011/11/lossless-and-transparency-encoding-in.html

[00:33:01.0000] <annevk>
hopefully Gecko will add it now

[00:50:00.0000] <hsivonen>
has Google explained why they aren't working with JPEG XR?

[00:51:00.0000] <hsivonen>
there might be good legal reasons

[00:51:01.0000] <hsivonen>
but without an explanation, it looks like it's Google doing its own thing instead of ISO standards

[00:56:00.0000] <zcorpan>
/me uncomments <time> in html-elements

[01:17:00.0000] <annevk>
hsivonen: prolly too hard, witness APNG

[01:59:00.0000] <erlehmann>
annevk, ENOCONTEXT what is too hard?

[02:53:00.0000] <hsivonen>
stuff I learned about URL parsing today: Three slashes after http: works in Firefox 8 but not in IE8.

[02:54:00.0000] <hsivonen>
works in Chrome, too

[02:59:00.0000] <smaug____>
annevk: we should kill also timeout for sync XHR

[03:01:00.0000] <annevk>
but timeout doesn't throw

[03:01:01.0000] <annevk>
at all

[03:01:02.0000] <annevk>
oh well, not really a great argument

[03:02:00.0000] <annevk>
smaug____: are you implementing the other exceptions? and changes to allow responseType to be set before open() etc.

[03:04:00.0000] <smaug____>
just reviewing a patch which throws when xhr is sync

[03:04:01.0000] <annevk>
/me hopes it's per spec

[03:04:02.0000] <hsivonen>
smaug____: should I prepare a patch to make HTML parsing unavailable in sync XHR?

[03:05:00.0000] <smaug____>
hsivonen: that would be good yes

[03:05:01.0000] <annevk>
hsivonen: it should still work in Workers though

[03:05:02.0000] <smaug____>
we really should try to kill sync XHR in Window context

[03:05:03.0000] <smaug____>
HTML Document in Workers?

[03:06:00.0000] <annevk>
oh right

[03:06:01.0000] <annevk>
though maybe, at some point

[03:08:00.0000] <hsivonen>
smaug____: OK. now that I've gotten some food, I'll try to track down the source of the error again...

[03:16:00.0000] <MikeSmith>
annevk: can you remind me please how I get http://html5.org/tools/web-apps-tracker to show all changes?

[03:16:01.0000] <MikeSmith>
nm

[03:16:02.0000] <MikeSmith>
http://html5.org/tools/web-apps-tracker?limit=-1

[03:20:00.0000] <annevk>
sweet

[03:21:00.0000] <annevk>
now that's going to get hit often

[03:23:00.0000] <annevk>
someone tell me when html5.org goes down and I'll change the above URL to return "Damn it Mike™, you're awesome but did you have to expose this URL‽"

[03:23:01.0000] <zcorpan>
make it a rickroll redirect

[03:24:00.0000] <MikeSmith>
shit

[03:24:01.0000] <MikeSmith>
sorry man

[03:24:02.0000] <annevk>
heh

[03:24:03.0000] <MikeSmith>
change it to something else

[03:24:04.0000] <annevk>
I think we'll be fine

[03:24:05.0000] <annevk>
time will tell

[03:24:06.0000] <MikeSmith>
I'm managing to fuck up all kinds of things during the last two weeks

[03:24:07.0000] <MikeSmith>
I'm on a roll

[03:24:08.0000] <MikeSmith>
surprising even myself

[03:25:00.0000] <annevk>
more bad management if you ask me

[03:25:01.0000] <MikeSmith>
hard to know what lies ahead

[03:26:00.0000] <annevk>
maybe it's the cheese

[03:32:00.0000] <annevk>
zcorpan: http://lists.w3.org/Archives/Public/www-archive/2011Nov/0052.html

[03:34:00.0000] <annevk>
http://www.urbandictionary.com/define.php?term=blink182 "Was that blink 182 or blink 181? I lost count...fuck me gently with a chainsaw."

[03:35:00.0000] <annevk>
lol

[03:36:00.0000] <zcorpan>
annevk: great success

[04:01:00.0000] <zcorpan>
wonder if i should point out that a text/html; charset=windows-1252 resource can instantiate a worker with the url "#" which will interpret the same resource as a utf-8 script

[04:02:00.0000] <zcorpan>
(we even have a test case for this)

[04:26:00.0000] <ashaw>
I am wondering which IRC room works on developing the JS-API

[04:26:01.0000] <jgraham>
What js-api?

[04:27:00.0000] <annevk>
zcorpan: the point was more that it's not implemented apparently

[04:27:01.0000] <ashaw>
the Javascipt standard library

[04:29:00.0000] <zcorpan>
annevk: well it's implemented in opera

[04:30:00.0000] <annevk>
ashaw: are you talking about http://es5.github.com/ ?

[04:30:01.0000] <jgraham>
ashaw: Do you mean DOM? Or the "standard library" in ECMAScript?

[04:31:00.0000] <ashaw>
I do not know, in general I want to talk about window.crypto

[04:31:01.0000] <ashaw>
and other things arround it for the same sort of stuff

[04:32:00.0000] <annevk>
this would be okay for window.crypto I think

[04:32:01.0000] <jgraham>
ashaw: Here is as good a place as any I know, but I don't know how many of the relevant people hang out here

[04:32:02.0000] <annevk>
might not be anyone around to talk about it though

[04:33:00.0000] <ashaw>
I have implemented ECC crypto in javascript in order to try to make a start at an acceptable online voting system.

[04:33:01.0000] <ashaw>
however I have discovered a number of shortfalls that make this task, though possible, unpractical due to speed constraints.

[04:34:00.0000] <annevk>
you might be best of emailing to whatwg⊙wo

[04:34:01.0000] <annevk>
details here: http://www.whatwg.org/mailing-list

[04:34:02.0000] <annevk>
abarth can then reply whenever he's awake

[04:34:03.0000] <ashaw>
Ok, I'll email the mailing list.

[04:37:00.0000] <ashaw>
Basically, I need SHA, and a Bignum library over arrayBuffers and possibly support for loading a script into a web worker off a secure server so that data can be transfered only by a communication API

[04:37:01.0000] <ashaw>
Has any of this been brought up before?

[04:38:00.0000] <annevk>
Workers support a importScripts methods

[04:39:00.0000] <annevk>
method even

[04:40:00.0000] <ashaw>
is there any way that the main site can modify the web-workers context directly, and if so, can this be stopped.

[04:41:00.0000] <ashaw>
Also is there a way that window.crypto.random can be accessed from a web-worker

[04:41:01.0000] <zcorpan>
importScripts is same-origin-only though

[04:41:02.0000] <ashaw>
same-orogin-only is good

[04:41:03.0000] <zcorpan>
good :)

[04:42:00.0000] <zcorpan>
i thought "off a secure server" implied different-origin

[04:42:01.0000] <ashaw>
no-I ment an even stricter sense of same-origin

[04:43:00.0000] <ashaw>
i want a web worker that is locked up tight, and can-not be modified once started

[04:46:00.0000] <annevk>
/me isn't quite sure "One use case could be to replace everything in a document with new nodes:" is a use case zcorpan, but I'll allow it anyway

[04:47:00.0000] <annevk>
ashaw: I think only a Worker can modify a worker

[04:47:01.0000] <ashaw>
that same worker? or can one worker modify annother?

[04:48:00.0000] <annevk>
I'm going with "I don't think so"

[04:48:01.0000] <annevk>
you can only interact with a worker via postMessage() so I don't really see how

[04:49:00.0000] <ashaw>
Goooood.

[04:50:00.0000] <ashaw>
Now comes the question, as the cryptographically secure RNG has been put in window.crypto, there is no-way to access it from a web worker directly is there?

[04:50:01.0000] <ashaw>
Which is sad :(

[04:55:00.0000] <annevk>
well

[04:55:01.0000] <annevk>
it's on its own interface

[04:55:02.0000] <annevk>
I expect it to be exposed to workers as well

[04:55:03.0000] <annevk>
would make sense to me anyway

[04:55:04.0000] <annevk>
anyway, put that in your email

[04:56:00.0000] <annevk>
better to have it logged on list than here

[04:57:00.0000] <ashaw>
yeah

[04:58:00.0000] <ashaw>
I have been trying to figure our how to solve the problems mentioned here: http://rdist.root.org/2010/11/29/final-post-on-javascript-crypto/

[05:01:00.0000] <annevk>
ok emailed improving the DOM rev 2 to www-dom

[05:01:01.0000] <annevk>
hopefully this one is a little better

[05:04:00.0000] <jgraham>
annevk: Why does remove take a ContentNode?

[05:06:00.0000] <annevk>
i'm a copy and paste man jgraham

[05:06:01.0000] <annevk>
better get used to it

[05:42:00.0000] <annevk>
smaug____: so timeout should throw on setting if the synchronous flag is set

[05:42:01.0000] <annevk>
smaug____: and open() should throw if timeout is set to something other than zero?

[05:42:02.0000] <annevk>
smaug____: see http://dev.w3.org/2006/webapi/XMLHttpRequest-2 for when withCredentials currently is supposed to throw

[05:42:03.0000] <annevk>
I will make that change now so I don't forget

[05:45:00.0000] <smaug____>
looking

[05:45:01.0000] <smaug____>
and yes, that timout handling sounds good

[05:48:00.0000] <Ms2ger>
http://lists.w3.org/Archives/Public/www-style/2011Nov/0389.html

[05:49:00.0000] <Ms2ger>
Björn seems even more snarky than usual, lately

[05:51:00.0000] <annevk>
I always wonder how he gets enough satisfaction about just being right and not having much of an effect on changing things around.

[05:52:00.0000] <annevk>
Assuming he's right most of the time, for now.

[05:54:00.0000] <Ms2ger>
Hmm, I wonder if Mozilla hackers are going to be confused by ContentNode

[05:55:00.0000] <smaug____>
Ms2ger: I'm sure we'll add ChromeNode :)

[05:55:01.0000] <Ms2ger>
nsIChrome? :)

[05:55:02.0000] <smaug____>
nsIDOMChromeNode

[05:55:03.0000] <smaug____>
nah, that would be visible to content

[05:55:04.0000] <smaug____>
nsIDOMContentNode

[05:56:00.0000] <smaug____>
oh, you meant nsIContent vs nsINode

[05:56:01.0000] <Ms2ger>
Yeah

[05:56:02.0000] <annevk>
Ms2ger: it's not an actual interface type though

[05:56:03.0000] <annevk>
Ms2ger: it's just IDL syntax

[05:56:04.0000] <Ms2ger>
Mm

[05:56:05.0000] <smaug____>
I wonder how many different meanings "content" has :)

[05:56:06.0000] <annevk>
at least, that's how I see it

[05:57:00.0000] <annevk>
so can name it FairyNode if that works better for everyone

[05:57:01.0000] <annevk>
because it won't make an iota of a difference

[05:57:02.0000] <annevk>
not sure I used "iota" right

[05:57:03.0000] <smaug____>
why *Node?

[05:57:04.0000] <smaug____>
DOMString isn't any kind of "Node"

[05:58:00.0000] <annevk>
in this context it becomes a Text node

[05:58:01.0000] <annevk>
but sure

[05:58:02.0000] <annevk>
we can call the thing FairyDust

[05:58:03.0000] <annevk>
as I said, does not matter

[05:58:04.0000] <smaug____>
DOMConstructionUnit or some such might describe it better

[05:59:00.0000] <smaug____>
well, not quite like that, something shorter and simpler

[05:59:01.0000] <annevk>
have fun bikeshedding

[05:59:02.0000] <annevk>
/me continues working on XHR

[05:59:03.0000] <smaug____>
thanks

[06:08:00.0000] <hsivonen>
annevk: I'm changing sync mode not to support HTML parsing

[06:08:01.0000] <hsivonen>
annevk: in order to avoid proliferating the sync evilness

[06:09:00.0000] <asmodai>
omg

[06:09:01.0000] <asmodai>
Opera 12 has decent MathML rendering :|

[06:09:02.0000] <annevk>
I'd sort of prefer to keep HTML/XML in feature parity

[06:09:03.0000] <annevk>
but okay

[06:09:04.0000] <annevk>
I mean technically it's a new feature, but making the bar to use HTML higher is very anti-platform

[06:10:00.0000] <annevk>
sync is also very anti-platform, but still

[06:10:01.0000] <jgraham>
asmodai: Hmm? Same as previous Operas afaik

[06:13:00.0000] <asmodai>
jgraham: Really? because last time around when I check on 11 it was not looking so decent?

[06:13:01.0000] <asmodai>
Unless my memory is deteriorating faster than I think it does.

[06:15:00.0000] <hsivonen>
hmm. turning off HTML parsing in sync mode make charset handling differ between sync and async...

[06:18:00.0000] <hsivonen>
discussions about spec organization so that normative references always point to more mature specs makes me sad

[06:18:01.0000] <hsivonen>
s/makes/make/

[06:22:00.0000] <annevk>
hmm

[06:22:01.0000] <annevk>
smaug left

[06:22:02.0000] <annevk>
http://dev.w3.org/2006/webapi/XMLHttpRequest-2/#the-timeout-attribute

[06:22:03.0000] <annevk>
http://dev.w3.org/2006/webapi/XMLHttpRequest-2/#the-open-method

[06:40:00.0000] <annevk>
heh http://infrequently.org/2011/11/vendor-prefixes-are-a-rousing-success/

[06:41:00.0000] <annevk>
now if Google/Apple sort out deprecating features in WebKit

[06:41:01.0000] <annevk>
I could buy into that

[06:41:02.0000] <annevk>
(and deprecating in a way that leads to actual removal)

[06:41:03.0000] <annevk>
if not, well...

[06:53:00.0000] <AryehGregor>
heycam|away, JS doesn't throw at all for insufficient arguments, does it?  It just sets them to undefined?  You're right that it seems to use TypeError for everything under the sun, though.

[06:56:00.0000] <AryehGregor>
It seems like it would be more desirable to throw distinct exceptions for too few arguments and wrong type, which is what Gecko currently seems to do.

[06:57:00.0000] <AryehGregor>
But I guess if browsers are willing to go with it, shrug.

[07:27:00.0000] <annevk>
AryehGregor: Opera throws WRONG_ARGUMENT_ERR or some such

[07:27:01.0000] <AryehGregor>
Yes.

[07:27:02.0000] <AryehGregor>
For both.

[07:27:03.0000] <AryehGregor>
It's a clearer error name than TypeError.

[07:27:04.0000] <annevk>
AryehGregor: oh okay :)

[07:28:00.0000] <annevk>
I think nobody has taken a critical look yet at that part of Web IDL

[07:28:01.0000] <annevk>
apart from maybe Microsoft but they don't give feedback until it is shipped typically

[07:32:00.0000] <jgraham>
I like TypeError

[07:32:01.0000] <jgraham>
I think aligining with javascript native APIs is a win

[07:33:00.0000] <jgraham>
Also, I notice that Alex doesn't really talk about the user or vendor point of view of prefixes, only the author point of view. It is pretty easy to say that prefixes are awesome when you work on webkit and are sure that everyone will include a -webkit- prefix always

[07:39:00.0000] <tantek>
Hixie: re: time element text update, minor tweak:

[07:40:00.0000] <tantek>
s/The datetime attribute must be present. Its value must be/The datetime attribute, if present, must be

[07:40:01.0000] <tantek>
since we explicitly allow <time>2011</time> etc. (even prefer)

[07:40:02.0000] <tantek>
to reduce DRY violations

[07:41:00.0000] <tantek>
also, example still to be fixed:

[07:41:01.0000] <tantek>
s/"2007-10-20">19/"2007-10-07">7

[07:43:00.0000] <tantek>
regarding time zone offsets, experience has shown that *dropping* the ":" between the hours/minutes on timezone offsets helps better distinguish them from appearing like times

[07:44:00.0000] <tantek>
e.g. 07:00-0800 is more obviously 7am in PST than

[07:44:01.0000] <tantek>
07:00-08:00 which looks like an interval of 7am to 8am.

[07:44:02.0000] <zewt>
whoever started with sub-hour timezone offsets needs to be shot into the sun

[07:44:03.0000] <tantek>
this is a human authorability/readability/verfiability concern

[07:45:00.0000] <tantek>
zewt I believe there is even a country that has a half-hour DST change.

[07:45:01.0000] <zewt>
tantek: -0800 is also just a common notation that people are familiar with

[07:45:02.0000] <tantek>
dbaron would know

[07:45:03.0000] <tantek>
yeah

[07:45:04.0000] <zewt>
i've heard of at least one place with a 15-minute offset :|

[07:46:00.0000] <tantek>
I'm fine with parsing with the colon as error recovery, however we should make timezone offsets valid only *without* the ":" between HH MM.

[07:46:01.0000] <annevk>
yeah, around India there's some fun stuff

[07:47:00.0000] <annevk>
India in fact has the half an hour

[07:48:00.0000] <annevk>
Bangladesh might be the one with three quarters?

[07:48:01.0000] <tantek>
Hixie, regarding year-less date parsing:

[07:48:02.0000] <tantek>
http://www.whatwg.org/specs/web-apps/current-work/#parse-a-yearless-date-string

[07:48:03.0000] <annevk>
oh, Nepal is

[07:48:04.0000] <annevk>
in Kathmandu it's 21:35 now

[07:48:05.0000] <tantek>
please explicitly allow the leading double-hyphen

[07:48:06.0000] <tantek>
making it optional is fine

[07:48:07.0000] <tantek>
e.g.

[07:48:08.0000] <tantek>
--11-18

[07:49:00.0000] <tantek>
as that's the ISO8601 syntax for yearless dates

[07:49:01.0000] <annevk>
Chatham Islands in New Zealand have a similar weird offset

[07:49:02.0000] <annevk>
there it's 05:35

[07:50:00.0000] <zewt>
into the sun.

[07:50:01.0000] <annevk>
if we have offsets at all it doesn't really matter how arbitrary they are

[07:57:00.0000] <smaug____>
"What front-ender in 2011 doesn’t test on at least two browsers?" I'm pretty sure in case of pages for mobile devices, it happens very often.

[08:01:00.0000] <jgraham>
Indeed. And even when they do it is probably stock iOS + stock android

[08:02:00.0000] <annevk>
apple.com/html5/ anyone?

[08:11:00.0000] <TabAtkins_>
Hixie: Somewhat confusingly, the <time> section says that @datetime is required, and then all of the examples don't use @datetime.

[08:12:00.0000] <annevk>
http://www.msnbc.msn.com/id/45306416/ns/health-diet_and_nutrition/ o_O

[08:12:01.0000] <annevk>
pizza a vegetable

[08:12:02.0000] <annevk>
wtf is wrong with that country

[08:12:03.0000] <zewt>
TabAtkins: fyi earlier <tantek> s/The datetime attribute must be present. Its value must be/The datetime attribute, if present, must be

[08:12:04.0000] <annevk>
I thought the EU had issues

[08:20:00.0000] <TabAtkins_>
zewt: Yeah.

[08:20:01.0000] <TabAtkins_>
annevk: It's called lobbying!  Our government is basically run by corporations.

[08:20:02.0000] <divya>
TabAtkins: its just a better name for corruption

[08:21:00.0000] <divya>
and bribery

[08:21:01.0000] <TabAtkins_>
divya: Pretty much, yes.

[08:21:02.0000] <divya>
?slap US politicians

[08:22:00.0000] <annevk>
lobbying makes some amount of sense (e.g. as wycats does on behalf of some set of developers), but this goes way beyond that

[08:22:01.0000] <divya>
this scares me SO MUCH http://jilliancyork.com/wp-content/uploads/2011/11/mubarak-and-us-presidents1.gif

[08:22:02.0000] <miketaylr>
the new national anthem: http://www.youtube.com/watch?v=wusGIl3v044

[08:23:00.0000] <divya>
especially how Hosni looks unchanged over 40 yearss

[08:23:01.0000] <divya>
hahaha miketaylr

[08:23:02.0000] <timeless>
annevk: we tried to make ketchup a vegetable :)

[08:23:03.0000] <timeless>
divya: at least you can see it publicly :)

[08:24:00.0000] <divya>
timeless: whats the advantage? just despair?

[08:24:01.0000] <timeless>
you can openly see who is being corrupted

[08:24:02.0000] <timeless>
since it's in the public

[08:24:03.0000] <timeless>
whereas corruption in Finland occurs behind closed doors

[08:24:04.0000] <timeless>
you know it happened, but not how/to whom

[08:25:00.0000] <divya>
timeless: but both sucks anyway, we all end up getting screwed

[08:25:01.0000] <divya>
not like this public display of corruption makes any difference to the lives of ordinary people

[08:25:02.0000] <divya>
also i do not think corporations have altered the culture of a nation anywhere else as much as they have in the US

[08:26:00.0000] <timeless>
that's a function of time

[08:26:01.0000] <timeless>
and the fact that most other places already have preexisting corruption fighting to retain dominance :)

[08:26:02.0000] <timeless>
(hello Italy, Greece, Spain)

[08:27:00.0000] <divya>
i dunno timeless in india at least there are so many companies vying for favors that it ends up favouring nobody.

[08:27:01.0000] <divya>
which is great. except here in the US that is not the case.

[08:28:00.0000] <divya>
anywayysss sorry for ot convo :P

[08:28:01.0000] <tantek>
TabAtkins - see log for a bunch of <time> feedback/iteration

[08:29:00.0000] <timeless>
divya: what i've seen of india is that it has dangerous corruption at local levels

[08:29:01.0000] <timeless>
(see some illegal mining or something)

[08:29:02.0000] <timeless>
in the US, typically you can't get away w/ just corrupting local officials for that purpose

[08:29:03.0000] <divya>
timeless: totally, but it does not impact the whole nation like it does here.

[08:30:00.0000] <timeless>
it's all about Checks and Balances

[08:30:01.0000] <timeless>
our system requires bigger Checks :)

[08:30:02.0000] <divya>
hahahaha

[08:37:00.0000] <jgraham>
(in the particular case of school food, the US is hardly the only place with significant issues. There was an expose a few years back in Britain that showed schools spending 37p per pupil on food and not including anything that could remotely be descibed as healthy. I'm not sure the situation is much better in Sweden)

[08:38:00.0000] <Philip`>
(Fortunately we had Jamie Oliver to solve the nation's woes)

[08:41:00.0000] <jgraham>
(unfortunately he didn't. He did raise awareness of it as a problem though)

[08:44:00.0000] <tantek>
TabAtkins - also you may be interested in reviewing (and contributing to) the rationale for the data element: http://www.w3.org/wiki/User:Tantekelik/data_element

[08:44:01.0000] <tantek>
(per the emails you've been sending to public-html)

[09:31:00.0000] <JonathanNeal>
All right, lay it on me, if you must.  Why are people hating on client-side LESS?

[09:34:00.0000] <jarek>
JonathanNeal: because it's over-complicated and there are no tools to debug it?

[09:34:01.0000] <JonathanNeal>
well, i appreciate hearing an answer, and i can understand the absense of debugging tools for the less itself.

[09:50:00.0000] <TabAtkins_>
tantek: Okay, I'll review when I get to the office and have the log to look at.

[09:52:00.0000] <tantek>
Thanks TabAtkins. Also feel free to join the data_element change proposal as a co-contributor assuming that's the approach you want to take.

[09:54:00.0000] <TabAtkins_>
Yeah, I'm about to edit the wiki page a bit.

[10:04:00.0000] <AryehGregor>
ES5 seems to leave typeof foo undefined if foo is a host object that doesn't implement [[Call]].  Are there real-world examples of such things that don't have a typeof "object"?

[10:05:00.0000] <AryehGregor>
Also: why is legacycaller legacy?

[10:05:01.0000] <AryehGregor>
Do we not want things implementing interfaces to be callable?

[10:09:00.0000] <annevk>
AryehGregor: correct

[10:09:01.0000] <AryehGregor>
Why not, out of curiosity?

[10:10:00.0000] <annevk>
getter is sufficient

[10:11:00.0000] <annevk>
caller is a legacy document.all thing

[10:11:01.0000] <annevk>
should rename constant to legacyconstant as well imo

[10:12:00.0000] <Hixie>
really?

[10:13:00.0000] <annevk>
whenever you want to use numeric constants, you want to use string enumeration instead

[10:14:00.0000] <AryehGregor>
Yeah, that would actually be a really good change.

[10:14:01.0000] <AryehGregor>
Hopefully it will scare spec writers away from using numeric constants in new interfaces.

[10:15:00.0000] <TabAtkins_>
Oh man, one can hope.

[10:16:00.0000] <annevk>
that doesn't mean btw that I think that whereever we have constants now we should introduce the equivalent with strings

[10:16:01.0000] <annevk>
just that we shouldn't propagate it further

[10:16:02.0000] <TabAtkins_>
Yes, many existing uses aren't worth bothering over.

[10:23:00.0000] <tantek>
Hixie, btw once that example fix is done, you can strike this paragraph: (The end date is encoded as one day after the last date of the event because in the iCalendar format, end dates are exclusive, not inclusive.)

[10:23:01.0000] <tantek>
since that's been fixed for a while in hCalendar :) http://microformats.org/wiki/dtend-issue

[10:29:00.0000] <AryehGregor>
WebIDL does not appear to define the [[Class]] of interface prototype objects.

[10:29:01.0000] <AryehGregor>
Is there something that implies it's implicitly "Object"?

[10:30:00.0000] <AryehGregor>
Oh: "If a value for the internal property [[Class]] is not given for a particular object, its value is implementation specific."

[10:30:01.0000] <AryehGregor>
Phooey.

[10:33:00.0000] <bga_>
hm

[10:55:00.0000] <Hixie>
tantek: you filed a bug about that right? at tpac?

[10:58:00.0000] <tantek>
yeah - the hCalendar example is a separate issue on the wiki page

[10:58:01.0000] <tantek>
I think you filed a bug about it at TPAC :)

[11:00:00.0000] <Hixie>
ok. so long as the issue is covered by a bug, i'll deal with it in a separate patch

[11:01:00.0000] <Hixie>
this patch is long enoug as it is

[11:02:00.0000] <Hixie>
annevk: i think the algorithm is just gonna be "try each of these algorithms in turn", because the alternative is either to make a really complicated hybrid algorithm for the whole thing (what UAs that care about performance will want to do), or a bunch of heuristics that will be a maintenance nightmare and that nobody will ever actually implement as written anyway

[11:06:00.0000] <AryehGregor>
Hixie, you use numeric constants in lots of new interfaces.  You should really use strings instead.  They're much nicer for authors.

[11:06:01.0000] <Hixie>
all those interfaces predate the change in prevailing opinion on the matter

[11:06:02.0000] <AryehGregor>
Are all of them implemented yet?

[11:06:03.0000] <Hixie>
file bugs if there are any not

[11:06:04.0000] <Hixie>
i'm happy to change htem

[11:09:00.0000] <AryehGregor>
http://www.w3.org/Bugs/Public/show_bug.cgi?id=14879

[11:13:00.0000] <Hixie>
commented

[11:19:00.0000] <Hixie>
tantek: do you have a reference for the double hyphen thing for yearless dates?

[11:19:01.0000] <Hixie>
the wikipedia page says -- is used as an interval delimiter

[11:21:00.0000] <Hixie>
vcard seems to use wacked syntax without delimiters

[11:21:01.0000] <tantek>
really? that's odd. vCard4 certainly has it as an example for it http://tools.ietf.org/html/rfc6350#section-4.3

[11:21:02.0000] <tantek>
yeah they leave out the delimiters between Y M D

[11:22:00.0000] <tantek>
(oddly)

[11:22:01.0000] <Hixie>
removing delimiters is a non-starter for <time> since it would lead to all kinds of ambiguities

[11:22:02.0000] <tantek>
well of course

[11:22:03.0000] <tantek>
it's worse than that

[11:22:04.0000] <Hixie>
so for now i'll punt on the -- thing

[11:22:05.0000] <tantek>
it hurts authorability

[11:22:06.0000] <Hixie>
for sure

[11:22:07.0000] <tantek>
hence the version I proposed with delimiters

[11:23:00.0000] <tantek>
--11-18

[11:23:01.0000] <tantek>
instead of

[11:23:02.0000] <tantek>
--1118

[11:23:03.0000] <tantek>
both are valid ISO8601

[11:23:04.0000] <Hixie>
annevk: if you're still around, take a look and let me know if the rather naiive algorithm i put in is acceptable to you

[11:24:00.0000] <tantek>
which is why included --MM-DD in particular

[11:24:01.0000] <tantek>
in order to provide a microsyntax for month-day that was ISO8601 compatible

[11:25:00.0000] <Hixie>
ok screw it. i'm gonna find out if google actually has a copy of this damn standard and just read it.

[11:26:00.0000] <Hixie>
tired of reading second-hand accounts of it on the web :-)

[11:26:01.0000] <tantek>
Hixie, out of curiosity, why did you include the year-week microsyntax? (not that I oppose it, I just didn't find enough use-cases to really justify it_

[11:26:02.0000] <tantek>
)

[11:26:03.0000] <tantek>
I mean if you're going to include year-week, you might as well include year-ordinaldays

[11:26:04.0000] <tantek>
e.g.

[11:26:05.0000] <tantek>
2011-322

[11:26:06.0000] <Hixie>
you listed parity with <input type=foo> as a design policy, so i went with it

[11:27:00.0000] <Hixie>
(week dates are quite common in european business)

[11:27:01.0000] <tantek>
ah ok - wasn't sure if you considered that a strong enough reason - ok

[11:27:02.0000] <tantek>
interesting

[11:27:03.0000] <Hixie>
well i figured why not, it costs us virtually nothing at this point

[11:27:04.0000] <Hixie>
i mean, what's one more when there's half a dozen formats already

[11:27:05.0000] <tantek>
in that case, I'd say add ordinal dates also

[11:27:06.0000] <tantek>
as that would complete the wikipedia infobox examples

[11:28:00.0000] <tantek>
on the right here: http://en.wikipedia.org/wiki/ISO_8601

[11:28:01.0000] <Hixie>
ordinal dates are too close to year-month imho. also, no <input type> equivalent, and not used as much as weeks as far as i'm aware.

[11:28:02.0000] <tantek>
http://en.wikipedia.org/wiki/ISO_8601#Ordinal_dates

[11:28:03.0000] <tantek>
and besides, everyone knows ordinal dates are the future, right TabAtkins?

[11:29:00.0000] <tantek>
there's no input type equivalent because ordinal dates are just another form of dates

[11:30:00.0000] <Hixie>
true. so there's not really a use case.

[11:30:01.0000] <Hixie>
and realistically, your bims ain't gonna take over any time soon :-P

[11:31:00.0000] <tantek>
my experience has been that bims have been useful for storage but not in publishing

[11:32:00.0000] <tantek>
the use cases for ordinals over normal dates are mostly just date-math related - easier to add / subtract # of days

[11:32:01.0000] <tantek>
or even weeks

[11:32:02.0000] <Hixie>
http://www.exit109.com/~ghealton/y2k/yrexamples.html#_International.ISO8601 is the first page i've found that supports your --month-day theory, but according to that page, -nn-nn is confusingly a _month_, not a yearless day...

[11:33:00.0000] <Hixie>
anyway, i'll add support for --

[11:34:00.0000] <tantek>
it might make yearless dates less confusing for europeans

[11:34:01.0000] <tantek>
if a European sees 11-10 they erroneously interpret it as 11th of October

[11:34:02.0000] <Hixie>
as a european, i'd interpret it as november tenth

[11:35:00.0000] <tantek>
whereas if they saw --11-10 they may have a chance at noticing something is different than their locale-specific date-format and then see it correctly.

[11:35:01.0000] <Hixie>
yeah

[11:35:02.0000] <Hixie>
anyway, optional leading -- is now conforming and parsed

[11:35:03.0000] <Philip`>
If I saw --11-10 I wouldn't have a clue what it was and would have no idea where to look to find out

[11:35:04.0000] <Hixie>
ok unless anyone has anything else that needs changing, i'm gonna push it

[11:35:05.0000] <tantek>
again, this is about tweaking the syntax to increase data quality

[11:35:06.0000] <tantek>
Hixie - there were some complaints about using schema.org examples

[11:35:07.0000] <Hixie>
Philip`: what about if you saw "Birthday: <time>--11-10</time>" ?

[11:35:08.0000] <tantek>
I think it was on the bug on data

[11:36:00.0000] <Hixie>
tantek: if there's an open bug on something, i'll deal with that separately

[11:36:01.0000] <tantek>
Philip - as far as data quality is concerned, "wouldn't have a clue what it was" is better than silently misinterpreting it as a different value.

[11:36:02.0000] <Hixie>
none of the new examples are schema.org-related

[11:37:00.0000] <tantek>
Hixie, this one: itemtype="http://schema.org/BlogPosting"

[11:37:01.0000] <tantek>
does anyone even use BlogPosting?

[11:37:02.0000] <tantek>
it's an unnecessary divergence from the Atom / hAtom vocabulary

[11:37:03.0000] <Philip`>
Hixie: I'm pretty sure I'd still have no idea

[11:37:04.0000] <tantek>
which btw, is in every copy of wordpress now

[11:37:05.0000] <tantek>
(hAtom that is)

[11:38:00.0000] <Philip`>
(I'd expect everyone to write birthdays as "10 Nov" or "10 November" anyway, not "11-10")

[11:39:00.0000] <tantek>
let me see if I get this right in microdata:

[11:39:01.0000] <tantek>
<article itemscope itemtype="http://microformats.org/profile/hatom">

[11:39:02.0000] <tantek>
 <h1 itemprop="entry-title">Small tasks</h1>

[11:39:03.0000] <tantek>
 <footer>Published <time itemprop="published" datetime="2009-08-30">yesterday</time>.</footer>

[11:39:04.0000] <tantek>
 <p itemprop="entry-content">I put a bike bell on his bike.</p>

[11:39:05.0000] <tantek>
</article>

[11:40:00.0000] <Hixie>
tantek: happy to add hAtom examples too, spec is trying to remain neutral on the question of vocabs. file bugs or send mails with suggested examples.

[11:40:01.0000] <tantek>
ah ok

[11:40:02.0000] <Hixie>
tantek: assuming there's a spec somewhere that defines the microdata vocabulary "http://microformats.org/profile/hatom" and all its conformance rules, that looks right

[11:41:00.0000] <Hixie>
ok. i'm pushing the first draft of this new <time> element.

[11:41:01.0000] <tantek>
Hixie - the goal is to have the URL *be* the definition (or summary reference for) the spec

[11:42:00.0000] <tantek>
is there a distinction between name of vocabulary and root object in microdata?

[11:42:01.0000] <tantek>
or are they presume to be the same?

[11:42:02.0000] <Hixie>
tantek: that seems like a fine goal, though currently not an achieved one.

[11:42:03.0000] <Hixie>
"root object"?

[11:42:04.0000] <Hixie>
(not achieved for that to be a microdata vocabulary, i mean. looks like it defines a microformats one.)

[11:43:00.0000] <tantek>
right, the profiles need to be updated to be syntax independent

[11:43:01.0000] <tantek>
part of the goal of microformats-2, to separate vocabulary development so that they can be used independently of the microformats-2 syntax (and vice versa)

[11:44:00.0000] <tantek>
e.g. in microformats-2 it would look like this (URL not exist yet)

[11:44:01.0000] <tantek>
<article itemscope itemtype="http://microformats.org/profile/h-entry">

[11:44:02.0000] <tantek>
 <h1 itemprop="entry-title">Small tasks</h1>

[11:44:03.0000] <tantek>
 <footer>Published <time itemprop="published" datetime="2009-08-30">yesterday</time>.</footer>

[11:44:04.0000] <tantek>
 <p itemprop="entry-content">I put a bike bell on his bike.</p>

[11:44:05.0000] <tantek>
</article>

[11:45:00.0000] <Hixie>
tantek: for a vocabulary to be used for microdata, it needs to define conformance to the same level of detail as the vcard microdata vocabulary in the html spec

[11:45:01.0000] <Hixie>
tantek: which includes some microdata-specific concepts

[11:45:02.0000] <Hixie>
http://www.whatwg.org/specs/web-apps/current-work/#vcard

[11:46:00.0000] <tantek>
like "This vocabulary does not support global identifiers for items." ?

[11:47:00.0000] <Hixie>
pretty much every sentence in that section uses microdata-specific terminology

[11:47:01.0000] <Hixie>
("item" is a special concept in microdata)

[11:47:02.0000] <tantek>
item/object same difference

[11:47:03.0000] <Hixie>
so long as somewhere you say that

[11:48:00.0000] <Hixie>
e.g. "when this vocabulary is used with microdata, conformance requirements corresponding to objects apply to items" or something

[11:48:01.0000] <tantek>
that's reasonable

[11:48:02.0000] <tantek>
btw if you're flattening vcard microdata in general (as you did with sex / gender-identity), you can drop all the "(inside n)"

[11:48:03.0000] <tantek>
ok

[11:49:00.0000] <tantek>
"n" is dropped in microformats-2 version of h-card and all its subproperties are flattened to just be properties of the "item" as you would say in microdata

[11:50:00.0000] <Hixie>
yeah

[11:50:01.0000] <Hixie>
i thought about changing that

[11:50:02.0000] <Hixie>
but i figured it'd be better to leave it so people could see how to spec that kind of structure

[11:50:03.0000] <Hixie>
since nobody uses this vocabulary anyway... :-)

[11:51:00.0000] <Hixie>
(if you want to define the "http://microformats.org/profile/hcard" vocabulary such that people use it, i don't mind changing the URL in the HTML spec and adding a note saying that it's just an example vocab)

[11:51:01.0000] <tantek>
you could leave "org" as is if you want to leave the documentation of how to do that

[11:51:02.0000] <Hixie>
org has a different structure

[11:51:03.0000] <Hixie>
so they're both useful in their own way

[11:52:00.0000] <tantek>
aren't they just both list of subproperties?

[11:52:01.0000] <Hixie>
one is a fixed set, the other is more open-ended, iirc

[11:52:02.0000] <tantek>
they should both just be fixed sets

[11:53:00.0000] <Hixie>
org takes zero-or-more organization-unit properties

[11:53:01.0000] <Hixie>
ORG:name;unit;unit;unit

[11:53:02.0000] <Hixie>
or something

[11:53:03.0000] <tantek>
hmm, I thought commas delimited multivalues and ; delimited the subproperties

[11:54:00.0000] <tantek>
but I'd have to double-check vcard

[11:54:01.0000] <Hixie>
i dunno

[11:54:02.0000] <Hixie>
i'm just doing it from memory

[11:54:03.0000] <tantek>
would it be helpful for http://microformats.org/profile/hcard to provide the microdata-specific concepts you mention?

[11:55:00.0000] <Hixie>
hcard or hatom?

[11:55:01.0000] <tantek>
potentially both/all

[11:55:02.0000] <Hixie>
for hatom, sure, if it's to be used with microdata

[11:55:03.0000] <Hixie>
for hcard, also sure, if you want to take over speccing that vocab

[11:56:00.0000] <Hixie>
then i can change the html spec's vcard vocab to more obviously an example

[11:56:01.0000] <Hixie>
if you want to do that, send mail

[11:56:02.0000] <tantek>
why would you need to change the html spec's vocab?

[11:56:03.0000] <Hixie>
well we don't want two specs defining the same thing, especially if differently from each other :-)

[11:56:04.0000] <Hixie>
the vocabs in html are really only there to show how to define a vocab

[11:56:05.0000] <tantek>
I guess I'm not understanding - I was wondering if updating http://microformats.org/profile/hcard would help the example provided in the HTML spec.

[11:57:00.0000] <Hixie>
the urls are opaque per the spec

[11:57:01.0000] <Hixie>
you're not supposed to resolve them or anything

[11:58:00.0000] <tantek>
ah ok, so the example in the spec shows how to re-use a microformats profile/definition vocabulary to define a microdata vocabulary

[11:58:01.0000] <Hixie>
the url is the microformats url only because you asked it to be

[11:58:02.0000] <Hixie>
originally it was http://n.whatwg.org/something iirc

[11:59:00.0000] <tantek>
made sense to show basing on existing work

[11:59:01.0000] <Hixie>
yup

[11:59:02.0000] <tantek>
ok, I'll leave the current microformats profiles as-is then

[11:59:03.0000] <tantek>
because that better illustrates that process (of defining a new vocabulary based on an existing one)

[12:00:00.0000] <tantek>
the microformats-2 profile URLs will be different and contain microdata-specific language as needed

[12:00:01.0000] <tantek>
likely something like this (directly using their root class name / item)

[12:00:02.0000] <tantek>
http://microformats.org/profile/h-card

[12:00:03.0000] <Hixie>
404

[12:01:00.0000] <Hixie>
oh, you mean in the future

[12:01:01.0000] <Hixie>
got it

[12:01:02.0000] <Hixie>
sounds good

[12:15:00.0000] <annevk>
Hixie: you now have

[12:15:01.0000] <annevk>
+   <li><p>If <span title="parse a month string">parsing a month

[12:15:02.0000] <annevk>
+   string</span> from the element's <span>datetime value</span>, if

[12:15:03.0000] <annevk>
+   The machine-readable equivalent is the <span

[12:16:00.0000] <annevk>
which seems wrong

[12:17:00.0000] <annevk>
otherwise it seems fine to me

[12:18:00.0000] <Hixie>
oops

[12:20:00.0000] <Hixie>
(i generated that section with some dubious regexps)

[12:20:01.0000] <Hixie>
(apparently got one wrong!)

[12:26:00.0000] <Hixie>
tantek: ok, i posted on the public-html thread proposing the <time> diff as the patch for your CP

[12:26:01.0000] <tantek>
Hixie, sounds good, I'll rereview.

[12:26:02.0000] <tantek>
so we're punting on a separate duration attribute then?

[12:27:00.0000] <Hixie>
*shrug*. imdb is already using datetime= for it.

[12:27:01.0000] <Hixie>
i don't have a strong view on the matter

[12:28:00.0000] <Hixie>
having mutually exclusive attributes has been kind of a pain in other contexts, fwiw (e.g. <meta)

[12:28:01.0000] <Hixie>
gotta go, lunch

[12:29:00.0000] <annevk>
hopefully the schema.org guys let not leak more ISO badness in there

[12:29:01.0000] <Hixie>
we can but hope

[12:34:00.0000] <tantek>
shall we pretend the "opening hours" problem isn't there?

[12:35:00.0000] <Hixie>
are they using <time> for that too?

[12:35:01.0000] <tantek>
yeah :(

[12:35:02.0000] <Hixie>
-_-

[12:35:03.0000] <tantek>
with a completely made-up syntax

[12:35:04.0000] <Hixie>
/me looks

[12:35:05.0000] <tantek>
basically, it looks like approach was, is it related to time? great, make something up and use the time element.

[12:36:00.0000] <Hixie>
well on the plus side it's distinguishable

[12:36:01.0000] <Hixie>
i say we ignore it for now, see how much uptake it gets

[12:36:02.0000] <Hixie>
and if it gets some, why not!

[12:36:03.0000] <tantek>
that's my preference for now too

[12:36:04.0000] <tantek>
and at least document alternatives to it

[12:36:05.0000] <tantek>
seems like opening hours should use multiple time elements

[12:37:00.0000] <tantek>
just as events do

[12:37:01.0000] <tantek>
etc.

[12:37:02.0000] <Hixie>
well we don't have any weekday things, and many elements is pretty verbose

[12:37:03.0000] <Hixie>
i don't see anything wrong with <data itemprop="openingHours" value="Tu,Th 16:00-20:00">...</data> though

[12:37:04.0000] <Hixie>
maybe i should add that example to the spec

[12:37:05.0000] <tantek>
lol - yeah

[12:38:00.0000] <tantek>
data is a good place to experiment with machine data extensions

[12:38:01.0000] <Hixie>
indeed

[12:38:02.0000] <tantek>
and then as you say we can better see if anything gets any uptake

[12:38:03.0000] <tantek>
without polluting existing elements

[12:39:00.0000] <TabAtkins>
tantek: Can you go respond to Sam that the current patch is fine?

[12:39:01.0000] <tantek>
/me will handle emails as they are queued. 

[12:39:02.0000] <TabAtkins>
d'oh

[12:39:03.0000] <tantek>
I'll skip breakfast for IRC but not email :P

[12:40:00.0000] <TabAtkins>
What timezone are you in now?

[12:40:01.0000] <tantek>
-0800 ;)

[12:40:02.0000] <Hixie>
speaking of skipping breakfast, i need to go in to get mine.

[12:40:03.0000] <Hixie>
bbiab.

[12:40:04.0000] <TabAtkins>
tantek: Then it's not breakfast time, weirdo.

[12:40:05.0000] <TabAtkins>
You have already skipped it.

[12:40:06.0000] <tantek>
what Hixie said. bbiab.

[12:54:00.0000] <tantek>
Hixie, when you get back, finally reloaded the time element definition, just noticed the timezone examples still use the ':' syntax

[12:54:01.0000] <tantek>
<time>+00:00</time>

[12:54:02.0000] <tantek>
<time>-08:00</time>

[12:54:03.0000] <tantek>
without : is preferabl

[12:54:04.0000] <tantek>
<time>+0000</time>

[12:54:05.0000] <tantek>
<time>-0800</time>

[12:54:06.0000] <Hixie>
i'm running out the door as we speak but will look when i got back on

[12:54:07.0000] <Hixie>
afk

[12:55:00.0000] <tantek>
requires updating http://www.whatwg.org/specs/web-apps/current-work/#parse-a-time-zone-offset-component obv to allow 4 digits without the colon after the +/- is seen.

[12:55:01.0000] <tantek>
ok

[13:12:00.0000] <jgraham>
AryehGregor: +1 of FooPrototype if it is web compatible (which I assumed it was not but if IE and Opera both do it...)

[13:34:00.0000] <smaug____>
annevk: FYI, I'm adding telemetry probes to Gecko to check how often sync XHR is used.

[13:49:00.0000] <smaug____>
ojan: I was wondering about you performance concerns about DOM improvements since they don't apply to Gecko, but good that you corrected yourself :)

[13:49:01.0000] <ojan>
smaug____: yeah...it had been a while since i had last looked at the relevant webkit code

[13:49:02.0000] <smaug____>
the possible performance problem comes from Node vs DOMString as a parameter

[13:49:03.0000] <ojan>
smaug____: yea, but that's worth it IMO :)

[13:50:00.0000] <ojan>
smaug____: out of curiosity...what does gecko do to avoid appending a parent to it's child? do you walk up the ancestor chain?

[13:50:01.0000] <smaug____>
yeah, in general, I like the API

[13:51:00.0000] <ojan>
smaug____: webkit does...but having O(n) operations in append/etc sucks

[13:51:01.0000] <smaug____>
gecko does the same

[13:51:02.0000] <ojan>
smaug____: i'm wondering if there are clever ways we can optimize it out

[13:51:03.0000] <smaug____>
and yes, it suck

[13:51:04.0000] <ojan>
smaug____: rniwa had an idea that we could check if the new child had any children as a fast way out of a common case

[13:52:00.0000] <ojan>
i'm on the fence as to whether that's a good optimization or not though

[13:52:01.0000] <smaug____>
well, if one has extra memory to consume, you could store the "level" of DOM node in the nodes

[13:52:02.0000] <ojan>
smaug____: yeah...thought of that...memory aside, it means that when you move nodes you have to update the whole subtree

[13:52:03.0000] <smaug____>
but in gecko we don't want to increase the size of nodes

[13:53:00.0000] <smaug____>
though, I would need to check (or ask bz) how close we're size of cache lines

[13:53:01.0000] <TabAtkins>
Bloom filters solve everything.

[13:53:02.0000] <ojan>
i doubt we'd want to add to the size of node either

[13:53:03.0000] <smaug____>
ojan: well, for certain things you do need to update the whole subtree

[13:53:04.0000] <ojan>
TabAtkins: how would you use bloom filters here?

[13:53:05.0000] <smaug____>
like, whether the subtree is "in-document"

[13:54:00.0000] <ojan>
smaug____: that's true

[13:55:00.0000] <rniwa>
smaug____, ojan: we can "color" each tree with a unique value

[13:55:01.0000] <TabAtkins>
ojan: Fast-path for if the parent is in the subtree of its child.

[13:55:02.0000] <rniwa>
it won't solve the case where you're moving the node within the tree though...

[13:55:03.0000] <TabAtkins>
Or, rather, if the parent is in the ancestor chain of its child.

[13:56:00.0000] <rniwa>
smaug____, ojan: you could imagine that we can omit those O(n) checks if two nodes belong to a different fragment or document

[13:56:01.0000] <TabAtkins>
Or, arg, when doing B.appendChild(A), telling quickly if A is in the ancestor chain of B.

[13:56:02.0000] <TabAtkins>
And following up with an ancestor walk on positives.

[13:56:03.0000] <smaug____>
rniwa: well, you need to add some flags for colors, and that uses memory

[13:57:00.0000] <rniwa>
smaug____: I suppose.

[13:57:01.0000] <rniwa>
smaug____: but we already have a pointer for document fragment / document, right?

[13:57:02.0000] <TabAtkins>
Adding the filter would be additional memory, though.

[13:57:03.0000] <rniwa>
TabAtkins: how would you efficiently implement that filter?

[13:58:00.0000] <smaug____>
there is a pointer to parent, and to ownerdocument (not directly)

[13:58:01.0000] <TabAtkins>
rniwa: it's essentially identical to the descendant-combinator fast path we use now.

[13:58:02.0000] <TabAtkins>
And, hm, if we already have that, perhaps we can reuse it.

[13:58:03.0000] <rniwa>
TabAtkins: what's "descendant-combinator fast path"?

[13:59:00.0000] <TabAtkins>
rniwa: It's what I just described.  ^_^  Every element has a bloom filter of its ancestors, so you can more quickly tell if a given element is in the ancestor chain.

[13:59:01.0000] <rniwa>
TabAtkins: WebKit implements this?

[14:00:00.0000] <TabAtkins>
rniwa: Yeah.

[14:00:01.0000] <rniwa>
TabAtkins: that's a big news to me

[14:00:02.0000] <rniwa>
TabAtkins: where is this implemented?

[14:00:03.0000] <Philip`>
TabAtkins: Doesn't that mean you still have an O(n) cost to update all the filters when reparenting a subtree?

[14:01:00.0000] <TabAtkins>
rniwa: http://peter.sh/2011/02/unspoofable-infobars-fast-descendant-selectors-and-the-web-inspector-api/

[14:01:01.0000] <ojan>
TabAtkins: that fast path only applies during parsing i believe

[14:01:02.0000] <TabAtkins>
Philip`: Probably, yeah.

[14:01:03.0000] <ojan>
TabAtkins: we don't keep it around

[14:02:00.0000] <TabAtkins>
ojan: Ah, kk.

[14:02:01.0000] <ojan>
TabAtkins: we have a single bloom filter that we update as we add/remove elements during parsing, afaik

[14:02:02.0000] <ojan>
TabAtkins: ignoring memory, having a bloom filter per node has the problem of needing to update the entire subtree when you move nodes around

[14:03:00.0000] <rniwa>
TabAtkins: I don't think this is applicable for DOM operations

[14:03:01.0000] <ojan>
rniwa: yeah...we could check that the documents are the same...but i'm not sure how much that buys us for the common cases...

[14:03:02.0000] <rniwa>
TabAtkins: it's about selectors

[14:03:03.0000] <TabAtkins>
True that.

[14:04:00.0000] <rniwa>
ojan: right, for that reason (slow update), I don't think we can bloom filter for each node

[14:04:01.0000] <ojan>
rniwa: welll, it could serve the same purpose for DOM operations i think

[14:04:02.0000] <smaug____>
ah, antti implemented boom filters

[14:04:03.0000] <rniwa>
also, it'll consume SO MUCH memory

[14:04:04.0000] <jgraham>
I would have thought that the memory cost of storing the filters was reason enough not to use them

[14:04:05.0000] <ojan>
it is

[14:04:06.0000] <ojan>
bloom filters are not happening

[14:04:07.0000] <rniwa>
jgraham: yes

[14:05:00.0000] <ojan>
webkit's use of them is very limited

[14:05:01.0000] <TabAtkins>
/me wants to use bloom filters for everything.

[14:05:02.0000] <rniwa>
we're already getting complaints about how big Node object is

[14:05:03.0000] <rniwa>
so there's no way we can store bloom filter for each node

[14:05:04.0000] <rniwa>
on the other hand, in common case

[14:05:05.0000] <rniwa>
you end up adding a bunch of nodes to the same parent

[14:05:06.0000] <smaug____>
yeah, same with Gecko. It is hard to add new stuff to Node

[14:06:00.0000] <rniwa>
so maybe we can optimize that case

[14:06:01.0000] <jgraham>
Same hre, I think

[14:06:02.0000] <jgraham>
*here

[14:06:03.0000] <ojan>
rniwa: that's *a* common case

[14:06:04.0000] <smaug____>
although, traditionally Gecko's Node has been more light weight than webkit's

[14:06:05.0000] <ojan>
rniwa: i'm not sure it's the only one though

[14:06:06.0000] <smaug____>
but we've been adding new stuff to Node

[14:06:07.0000] <rniwa>
ojan: yeah, I think we need to cherry-pick those common cases and optimize for them

[14:06:08.0000] <rniwa>
ojan: I don't think we can solve this problem in general

[14:07:00.0000] <ojan>
rniwa: yeah...but if you get your common cases wrong, then you end up making things slower :)

[14:08:00.0000] <ojan>
rniwa: the hard part there if finding a representative subset of what real world dom usage is like == very hard

[14:08:01.0000] <rniwa>
ojan: don't think so. adding 4-5, or even 10, constant checks is much better than running O(n) algorithm

[14:09:00.0000] <ojan>
rniwa: not if you have to do the O(n) algorithm as well

[14:09:01.0000] <rniwa>
ojan: right, so we should add checks to determine cases where O(n) algorithm is not nded

[14:09:02.0000] <rniwa>
needed*

[14:09:03.0000] <rniwa>
of course, it'll be pointless if the algorithm to determine that itself is O(n)

[14:10:00.0000] <rniwa>
but I'm all for adding constant checks to avoid running O(n) algorithm

[14:11:00.0000] <jgraham>
The point is that unless the cases are common enough you have to do the checks and run the algorithm anyway. But it seems like there should be some common cases here

[14:11:01.0000] <rniwa>
jgraham: right.

[14:11:02.0000] <rniwa>
jgraham: I think in practice, we can measure the performance on gmail, facebook, etc...

[14:11:03.0000] <rniwa>
because they tend to do a lot of DOM operations

[14:12:00.0000] <ojan>
don't get me wrong...i support doing this...it will just need to be backed up buy good data on the effects on a number of top sites

[14:12:01.0000] <jgraham>
Right, one can certianly imagine seeing how often some easy cases are hit

[14:12:02.0000] <rniwa>
jgraham: yeah

[14:12:03.0000] <rniwa>
jgraham: we could add some logging mechanism and run it for one week while using gmail, facebook, etc...

[14:13:00.0000] <rniwa>
and see how common each case is

[14:13:01.0000] <Philip`>
Won't the common cases be that the DOM trees are very shallow, so the O(n) cost is negligible?

[14:13:02.0000] <rniwa>
Philip`: the problem is that we normally go up

[14:13:03.0000] <rniwa>
Philip`: i.e. parent -> parent's document

[14:14:00.0000] <rniwa>
Philip`: as supposed to looking through the inserted subtree

[14:14:01.0000] <Philip`>
Usually the documents would be very shallow too, I'd guess

[14:14:02.0000] <rniwa>
Philip`: and in practice, the inserted subtree tends to be shallow

[14:14:03.0000] <rniwa>
Philip`: don't think so

[14:14:04.0000] <jgraham>
Well it depends what you mean

[14:14:05.0000] <rniwa>
Philip`: I think we allow it to be at most 512 nodes deep

[14:15:00.0000] <jgraham>
Right, hundreds of nodes is atypical

[14:15:01.0000] <rniwa>
that's A LOT of nodes to check

[14:15:02.0000] <jgraham>
But a few tens of nodes might be common

[14:15:03.0000] <Philip`>
"at most" doesn't sound like the common case

[14:15:04.0000] <rniwa>
also the problem is cache locallity

[14:15:05.0000] <rniwa>
if we go up in the tree, then we'll be pulling those objects into registry in order to walk through the tree

[14:16:00.0000] <rniwa>
and that might reduce the cache locality

[14:16:01.0000] <smaug____>
TabAtkins: just curious, how does the webkit patch handle the false positive cases?

[14:16:02.0000] <smaug____>
or does it not need to

[14:16:03.0000] <rniwa>
in modern processors, this has a significant performance impact

[14:16:04.0000] <smaug____>
or does it just not care

[14:16:05.0000] <rniwa>
in fact... if one of elements up in the hierarchy, e.g. document ends up having a really big vtable

[14:16:06.0000] <rniwa>
you may end up invalidating a lot of cache

[14:17:00.0000] <rniwa>
though don't think webkit currently calls any virtual functions in appendChild, insertBefore, etc...

[14:17:01.0000] <rniwa>
virtual functions are evil LOL

[14:17:02.0000] <WeirdAl>
not as evil as eval

[14:18:00.0000] <rniwa>
WeirdAl: yeah, they're only 1 edit-distance away from each other

[14:18:01.0000] <smaug____>
virtual methods are indeed bad, really bad

[14:18:02.0000] <Philip`>
/me wonders if the parent/child pointers could be stored separately from the actual node data, so you can fit more of them into a cache line

[14:18:03.0000] <Philip`>
(if that's the problem)

[14:18:04.0000] <rniwa>
Philip`: I had that idea as well

[14:18:05.0000] <rniwa>
Philip`: but then looking through this table will be an issue

[14:18:06.0000] <ojan>
smaug____: the bloom filter is just used as a fast rejection

[14:18:07.0000] <smaug____>
ah

[14:18:08.0000] <rniwa>
Philip`: and in practice, you tend to access lots of data in one node object

[14:19:00.0000] <rniwa>
so not sure if that really improves the performance much

[14:19:01.0000] <rniwa>
it'll be really good to collect stats as ojan suggested

[14:20:00.0000] <rniwa>
some time in near future

[14:20:01.0000] <smaug____>
/me is about to collect data about innerHTML usage

[14:20:02.0000] <ojan>
rniwa: you could just create a locally intrumented webkit and load a few top sites

[14:20:03.0000] <rniwa>
I might just do that myself :P

[14:20:04.0000] <rniwa>
ojan: yeah

[14:20:05.0000] <ojan>
smaug____: to what end?

[14:20:06.0000] <rniwa>
ojan: that's what I'm thinking

[14:20:07.0000] <smaug____>
ojan: basically to check what kind of data is set to innerHTML

[14:20:08.0000] <rniwa>
smaug____: yeah, that's also good thing to gather stats for

[14:21:00.0000] <smaug____>
whether it is short strings or markup or what

[14:21:01.0000] <rniwa>
smaug____: I think developers know that innerHTML is faster than inserting indivisual node

[14:21:02.0000] <smaug____>
(using telemetry)

[14:21:03.0000] <rniwa>
smaug____: so a lot of them use innerHTML instead of DOM methods

[14:21:04.0000] <rniwa>
smaug____: length?

[14:21:05.0000] <rniwa>
smaug____: or actual markup?

[14:21:06.0000] <smaug____>
well, in the old days DOM used to be a lot slower in all the browsers

[14:22:00.0000] <rniwa>
I'd be interested in knowing how many nodes are added per innerHTML

[14:22:01.0000] <rniwa>
and if people are calling innerHTML in consecutive manner without triggering layout

[14:22:02.0000] <rniwa>
e.g.

[14:22:03.0000] <rniwa>
for (...) innerHTML += ...

[14:22:04.0000] <smaug____>
rniwa: probably length, and whether short strings contain markup

[14:22:05.0000] <rniwa>
if consecutive concat to innerHTML is common

[14:22:06.0000] <rniwa>
we can probably lazily evaluate innerHTML

[14:23:00.0000] <rniwa>
though authors may cache things themselves if they are using innerHTML for speed

[14:23:01.0000] <smaug____>
that is quite hard

[14:23:02.0000] <rniwa>
may already*

[14:23:03.0000] <smaug____>
especially if you have mutation event listeners

[14:23:04.0000] <rniwa>
smaug____: yeah, on my second thought, lazily evaluating them might be tricky

[14:23:05.0000] <rniwa>
yeah :(

[14:23:06.0000] <rniwa>
/me hates mutation events

[14:24:00.0000] <smaug____>
/me is still on progress to get MutationObserver done for Gecko

[14:24:01.0000] <rniwa>
smaug____: or if the inserted node pulled resources

[14:24:02.0000] <rniwa>
smaug____: or worse yet, script elements...

[14:24:03.0000] <smaug____>
(if I could focus only doing that...)

[14:25:00.0000] <annevk>
ojan: btw, you can implement it as a different method on Document and Element/DocumentFragment

[14:25:01.0000] <rniwa>
anyways, I'm planning to spend my Q1 improving webkit's dom code

[14:25:02.0000] <annevk>
ojan: we could even define some methods specially as such

[14:25:03.0000] <rniwa>
/me wants fast/slim DOM

[14:26:00.0000] <rniwa>
not slow/fat DOM

[14:26:01.0000] <smaug____>
/me wants DOM implemented in JS :)

[14:27:00.0000] <rniwa>
smaug____: doesn't IE do that?

[14:27:01.0000] <Philip`>
Implementing DOM in JS and worrying about cache locality seem kind of completely opposing viewpoints :-)

[14:27:02.0000] <ojan>
annevk: yup

[14:28:00.0000] <ojan>
annevk: interestingly...webkit doesn't let you append a DocumentType if it's already in the DOM

[14:28:01.0000] <smaug____>
rniwa: really? I thought you need Proxies et al to implement DOM in JS, and IE doesn't, IIRC, have Proxy objects

[14:28:02.0000] <annevk>
ojan: oh, just saw your other email

[14:28:03.0000] <ojan>
annevk: i don't think the spec requires that though

[14:28:04.0000] <ojan>
annevk: so, i'm gonna see if i can remove that check

[14:28:05.0000] <annevk>
ojan: I think it does

[14:28:06.0000] <smaug____>
Philip`: JS JITs could optimize many things

[14:28:07.0000] <ojan>
annevk: oh...maybe i misread

[14:28:08.0000] <smaug____>
Philip`: also, JS is a lot safer language than C++

[14:29:00.0000] <annevk>
ojan: http://dvcs.w3.org/hg/domcore/raw-file/tip/Overview.html#concept-node-pre-insert see 4.4

[14:29:01.0000] <ojan>
anoh isee...it's actually step 5, no?

[14:29:02.0000] <smaug____>
writing security bugs in C++ is way too easy

[14:30:00.0000] <ojan>
annevk: i see...it's actually step 5, no?

[14:30:01.0000] <annevk>
ojan: step 5 is for when you append to non-Document nodes

[14:30:02.0000] <ojan>
annevk: right...that's the case i'm talking about

[14:30:03.0000] <rniwa>
smaug____: yeah, dynamic optimization can do a whole lot

[14:31:00.0000] <annevk>
oh yeah that should fail in general

[14:31:01.0000] <annevk>
because you put in the wrong place

[14:31:02.0000] <ojan>
annevk: i believe webkit will let you append a DocumentType to an Element if it's not already in the DOM

[14:31:03.0000] <annevk>
ooh

[14:31:04.0000] <ojan>
/me goes to test

[14:31:05.0000] <rniwa>
smaug____: but we can't write layout code in javascript

[14:31:06.0000] <ojan>
sigh...now i have to remember how to make documenttype nodes

[14:32:00.0000] <annevk>
document.createDocumentType

[14:32:01.0000] <rniwa>
!

[14:32:02.0000] <annevk>
euh sorry

[14:32:03.0000] <rniwa>
we have a method on document just to create doctype?

[14:32:04.0000] <annevk>
document.implementation.createDocumentType()

[14:32:05.0000] <annevk>
http://dvcs.w3.org/hg/domcore/raw-file/tip/Overview.html#dom-domimplementation-createdocumenttype

[14:32:06.0000] <annevk>
rniwa: worse

[14:32:07.0000] <rniwa>
:(

[14:32:08.0000] <annevk>
rniwa: it's on document.implementation

[14:33:00.0000] <ojan>
annevk: nm...webkit seems to throw an error

[14:33:01.0000] <rniwa>
wtf

[14:33:02.0000] <ojan>
annevk: that was the check i was hoping we could get rid of

[14:33:03.0000] <ojan>
annevk: i don't really care if developers put/move documenttype nodes in their DOM

[14:33:04.0000] <ojan>
annevk: as long as we spec it that only the top-level node affects the actual compatMode

[14:34:00.0000] <annevk>
you could get rid of that check at that level, but you'd still need the check somewhere

[14:34:01.0000] <ojan>
annevk: it's something developers will basically never do...so it's worth getting rid of the check

[14:34:02.0000] <ojan>
annevk: why do you need the check at all?

[14:34:03.0000] <annevk>
oh

[14:35:00.0000] <annevk>
but you also need to check for Document and

[14:35:01.0000] <ojan>
annevk: in teh case of appending to a Document, there's a whole different set of rules and complications

[14:35:02.0000] <ojan>
annevk: but for the case of appending to an Element

[14:35:03.0000] <ojan>
annevk: i don't see why we don't just allow it

[14:35:04.0000] <annevk>
element.append(document) is what I meant

[14:35:05.0000] <annevk>
DocumentType is not the only node not allowed there

[14:36:00.0000] <ojan>
annevk: interesting...i forget how webkit handles that...

[14:36:01.0000] <annevk>
and there's Attr too

[14:36:02.0000] <annevk>
in your current impl

[14:37:00.0000] <annevk>
and prolly ShadowRoot?

[14:37:01.0000] <ojan>
annevk: interesting...i think this webkit code is just dumb actually

[14:38:00.0000] <rniwa>
ojan: I don't think those constant-time checks is a big of a deal

[14:38:01.0000] <ojan>
the "isChildTypeAllowed" call is what should deal with documenttype nodes...so we should be able to kill that if-check

[14:38:02.0000] <rniwa>
ojan: in fact, we could add a special node-flag to do this in constant time

[14:39:00.0000] <ojan>
rniwa: they're not as big a deal as the O(n) checks, but every branch we can get rid of adds up for such a performance-sensitive codepath

[14:39:01.0000] <rniwa>
ojan: but we can combine all those checks into one check

[14:39:02.0000] <rniwa>
ojan: because we can just do bitwise and

[14:39:03.0000] <rniwa>
ojan: in practice, function calls would cost us much more than those node-type checks

[14:40:00.0000] <rniwa>
ojan: checking a node-type is extremely efficient in webkit

[14:40:01.0000] <rniwa>
ojan: checking tagname is slower but none of the checks we're talking here involves checking a particular tag name

[14:40:02.0000] <rniwa>
so I don't think this would be an issue for us

[14:40:03.0000] <ojan>
rniwa: as i read the code right now...that if-check is actually completely rendudant with the existing isChildTypeAllowed call

[14:41:00.0000] <rniwa>
I see

[14:41:01.0000] <ojan>
i might be reading the code wrong though

[14:41:02.0000] <rniwa>
I actually bet that calling that function itself is much more expensive than any of the checks we do

[14:41:03.0000] <rniwa>
if it's not inlined

[14:42:00.0000] <rniwa>
I think any gains we get from optimizing those constant checks will be completely dwarfed by all function calls involved in binding code

[14:43:00.0000] <rniwa>
not that I'm opposed to make them faster

[14:43:01.0000] <rniwa>
but I don't think we should make the spec more permissive just to get rid of content-time node-type checks

[14:45:00.0000] <ojan>
i've given up on the spec changes...

[14:45:01.0000] <ojan>
which is to say, i don't think we'd gain much by changing the spec

[14:45:02.0000] <ojan>
if anything

[14:45:03.0000] <ojan>
but...there might be room for optimizing the webkit code

[14:46:00.0000] <rniwa>
ok. I guess I misunderstood you then

[14:46:01.0000] <rniwa>
ojan: definitely!

[14:46:02.0000] <ojan>
rniwa: no...you understood me right...i just changed my thinking on it :)

[14:46:03.0000] <rniwa>
k

[14:46:04.0000] <annevk>
the only potential room for improvement to the spec is that ele.append(DocumentType) would throw at the same point ele.append(Range) would throw

[14:47:00.0000] <annevk>
but at some point you got to check that the right object is actually passed

[14:47:01.0000] <ojan>
annevk: true

[14:58:00.0000] <ap>
Hixie: does HTML5 parser (still) disallow surrogates in numeric entities (such as &#xd83d;&#xde12;)?

[15:04:00.0000] <Hixie>
yes

[15:04:01.0000] <Hixie>
ewll

[15:04:02.0000] <Hixie>
well

[15:04:03.0000] <ap>
Hixie: this used to work in Gecko and in WebKit, and I just got a bug

[15:04:04.0000] <Hixie>
the parser doesn't allow or disallow anything

[15:04:05.0000] <Hixie>
bu the syntax does

[15:05:00.0000] <ap>
Hixie: the parser converts these to U+FFFD

[15:05:01.0000] <Hixie>
that appears to be consistent with the spec (http://www.whatwg.org/specs/web-apps/current-work/#tokenizing-character-references)

[15:08:00.0000] <ap>
Hixie: so I sent that bug back for now, but I don't have a great explanation why we had to break this. It worked in at least two engines, and appeared useful

[15:08:01.0000] <Hixie>
why is it useful?

[15:08:02.0000] <Hixie>
just encode the actual character

[15:08:03.0000] <Hixie>
surrogates are a UTF-16 feature

[15:09:00.0000] <ap>
Hixie: in that some dumb perl script had more chance of encoding non-ASCII correctly. for some people, lots of people don't want to transfer non-ASCII

[15:09:01.0000] <ap>
for some reason

[15:09:02.0000] <TabAtkins>
ap: He meant use the escape for the actual character.

[15:09:03.0000] <roc>
oh dear, bz used the classic "with all due respect" -> "with absolutely no respect"

[15:09:04.0000] <Hixie>
ap: supporting surrogates would be like supporting &#xC3;&#xA9; for &eacute;

[15:10:00.0000] <ap>
TabAtkins: like &#128530; ? that's what I've been responding to. A dumb script won't do that

[15:10:01.0000] <Hixie>
ap: just use the actual unicode codepoint

[15:10:02.0000] <Hixie>
ap: why would a dumb perl script ever see utf-16? perl uses utf-8.

[15:10:03.0000] <Hixie>
tantek: i updated the spec to make : optional in time zones

[15:11:00.0000] <ap>
Hixie: practically, lots of software can handle UTF-16, but it's a tiny minority that works with non-BMP characters correctly

[15:11:01.0000] <ap>
Hixie: I entirely share your vision of what's right

[15:12:00.0000] <Hixie>
my recommendation is to get people to ignore UTF-16 entirely

[15:12:01.0000] <tantek>
Hixie - thanks re: tz

[15:12:02.0000] <Hixie>
honestly if we could drop utf-16 support the way we dropped utf-32 support, i'd be all over it

[15:12:03.0000] <TabAtkins>
/me still has a soft spot for utf-32.

[15:12:04.0000] <tantek>
The time-zone offset examples should show/prefer without : also

[15:13:00.0000] <Hixie>
TabAtkins: a pretty wide one i would assume :-P

[15:13:01.0000] <TabAtkins>
Hixie: Narrower than my ints, at least.

[15:13:02.0000] <ap>
Hixie: anyway, I'm not asking to revert the spec to previously interoperable behavior at this point. I'd love to have a better explanation of why we broke this, which I don't.

[15:14:00.0000] <Hixie>
tantek: i made them use a variety (though i think most still have the colon), but i'll bear that in mind when adding more examples

[15:14:01.0000] <tantek>
ideally the examples should be exemplary

[15:14:02.0000] <tantek>
to teach authors well

[15:14:03.0000] <Hixie>
ap: the real reason is probably that i didn't even think to test it, because i had a lapse of judgement in which i assumed browsers wouldn't do something so silly

[15:15:00.0000] <tantek>
especially the time-zone by itself examples

[15:15:01.0000] <Hixie>
tantek: when it comes to syntax, the examples are intentionally varied in their use of syntax to indicate that all valid syntaxes are equally valid

[15:15:02.0000] <Hixie>
tantek: (this applies to everything, not just date formats)

[15:17:00.0000] <tantek>
I realize the spec as-is isn't for authors, however I do think the varied use of syntax should be biased towards syntax that results in fewer authoring mistakes / data quality errors over time

[15:17:01.0000] <tantek>
sorry maybe i'm looking at an older snapshot

[15:17:02.0000] <tantek>
reloading

[15:18:00.0000] <Hixie>
a slight bias, agreed

[15:18:01.0000] <Hixie>
as i said, i'll make the examples lean more that way over time

[15:18:02.0000] <tantek>
yeah I was looking at an older version (multipage)

[15:18:03.0000] <Hixie>
i'm more concerned with getting the normative text of the w3c and whatwg specs converged again than worrying about example text :-)

[15:18:04.0000] <tantek>
looking at one-page version now

[15:18:05.0000] <Hixie>
multipage should be updated now, is it not?

[15:19:00.0000] <Hixie>
oh, i haven't uploaded it yet

[15:19:01.0000] <Hixie>
my bad

[15:19:02.0000] <tantek>
yeah one-page version looks better

[15:20:00.0000] <Hixie>
multipage should be updated in about 5 min

[15:21:00.0000] <tantek>
no problem - I'll stick with one page

[15:27:00.0000] <tantek>
Hixie, I think I need to raise a 4th separate issue and change proposal to get the ISO week formats in there, no problem doing so, I'll take care of that this weekend.

[15:27:01.0000] <tantek>
(regarding Sam's email)

[15:28:00.0000] <Hixie>
your devotion to their process is quite entertaining

[15:28:01.0000] <tantek>
just trying to help the wheels rotate

[15:28:02.0000] <Hixie>
sam did say though that if everyone thought the patch was ok we could short-circuit it, which may help them rotate faster :-)

[15:29:00.0000] <tantek>
I'll email you a suggested replacement for the schema.org example because I think that's the remaining outstanding issue that Sam (re)raised.

[15:29:01.0000] <tantek>
(regarding your patch)

[15:33:00.0000] <Hixie>
tantek: there's an issue with an example?

[15:33:01.0000] <Hixie>
i couldn't find any of these issues in the issue list so i wasn't sure what sam meant to be honest

[15:34:00.0000] <Hixie>
i don't recall even seeing a bug regarding a schema.org example, so by process it surely can't be an issue yet

[15:37:00.0000] <tantek>
it was raised as a comment in the bug on data

[15:37:01.0000] <tantek>
IIRC

[15:37:02.0000] <Hixie>
ah

[15:37:03.0000] <Hixie>
well the chairs told me not to touch that bug anymore so i haven't been reading it

[15:38:00.0000] <Hixie>
let me go have a look

[15:40:00.0000] <Hixie>
oh, i see, it's because they don't want microdata in the examples, not because they don't wnat schema.org in the examples

[15:40:01.0000] <tantek>
huh? not AFAICT

[15:40:02.0000] <tantek>
the opposite

[15:41:00.0000] <tantek>
nothing wrong with microdata in the examples

[15:41:01.0000] <tantek>
the specific comment about schema.org was objecting to that

[15:41:02.0000] <Hixie>
"In addtion to that, schema.org examples have no business in the W3C spec

[15:41:03.0000] <Hixie>
because microdata is not part of HTML5 ( just like RDFa isn't part of the spec

[15:41:04.0000] <Hixie>
)."

[15:41:05.0000] <Hixie>
all the comments that contain "schema.org" seem to support this train of thought

[15:42:00.0000] <Hixie>
anyway i don't mind stripping all the schema.org examples from the proposal and not adding them to the w3c spec

[15:42:01.0000] <Hixie>
that's fine

[15:42:02.0000] <Hixie>
it's the normative text that i care about

[15:43:00.0000] <Hixie>
(it baffles me that the w3c continues to consider microdata to not be part of html)

[15:44:00.0000] <tantek>
Hixie, here's an attempt at a replacement example for the blog post that's not microformats nor schema.org

[15:44:01.0000] <tantek>
<article itemscope itemtype="http://tools.ietf.org/html/rfc4287">

[15:44:02.0000] <tantek>
 <h1 itemprop="title">Small tasks</h1>

[15:44:03.0000] <tantek>
 <footer>Published <time itemprop="published" datetime="2009-08-30">yesterday</time>.</footer>

[15:44:04.0000] <tantek>
 <p itemprop="content">I put a bike bell on his bike.</p>

[15:44:05.0000] <tantek>
</article>

[15:44:06.0000] <Hixie>
that's still microdata though

[15:44:07.0000] <tantek>
sure, but it's not microdata that anyone is going to use in practice

[15:44:08.0000] <tantek>
I have a feeling that would resolve that particular objection

[15:44:09.0000] <Hixie>
which is fine by me and i'm happy to add the example to the whatwg spec, but my point is that the objection to those examples was over the use of microdata, not over the use of schema.org

[15:48:00.0000] <tantek>
Hixie, I will point that Sam's response to you seemed to agree with my proposed resolution to the issue

[15:48:01.0000] <tantek>
which says "Provide one or more examples that show use with microformats, microdata, and RDFa"

[15:48:02.0000] <Hixie>
examples of what? <time>?

[15:48:03.0000] <tantek>
and "Prefer use of openly developed vocabularies/URLs (e.g. microformats.org, whatwg.org, w3.org) rather than those developed by one company (or just a few companies) like schema.org."

[15:49:00.0000] <Hixie>
what are you quoting from?

[15:49:01.0000] <Hixie>
i see nothing in that bug that supports this line of reasoning

[15:49:02.0000] <tantek>
Sam's email

[15:49:03.0000] <Hixie>
(note that using rdfa with <time> is impossible wince RDFa doesn't support <time> yet as far as i can tell)

[15:49:04.0000] <tantek>
where he quotes me from

[15:49:05.0000] <Hixie>
which one

[15:49:06.0000] <Hixie>
url?

[15:50:00.0000] <tantek>
most recent - let me get the url

[15:50:01.0000] <Hixie>
oh i see

[15:50:02.0000] <Hixie>
got it

[15:50:03.0000] <Hixie>
he's quoting you

[15:50:04.0000] <Hixie>
ok

[15:50:05.0000] <tantek>
http://lists.w3.org/Archives/Public/public-html/2011Nov/0184.html

[15:50:06.0000] <tantek>
yeah

[15:50:07.0000] <Hixie>
i suggest a simpler solution then

[15:50:08.0000] <Hixie>
remove that part of your change proposal :-P

[15:50:09.0000] <Hixie>
and i'll add whatever examples you want :-)

[15:51:00.0000] <tantek>
it was added because Sam complained that my change proposal didn't address enough issues

[15:51:01.0000] <tantek>
sorry, "complained" is a bit harsh. pointed out.

[15:51:02.0000] <Hixie>
so he wants you to address more issues, but if you address them in a way that has no bearing on what was actually raised, he's ok with it?

[15:52:00.0000] <tantek>
ah this about *data*

[15:52:01.0000] <tantek>
sorry

[15:52:02.0000] <Hixie>
working with the w3c hurts my brain

[15:52:03.0000] <tantek>
he's quoting from

[15:52:04.0000] <tantek>
http://www.w3.org/wiki/User:Tantekelik/data_element

[15:52:05.0000] <tantek>
which is my attempt at a change proposal to add data

[15:52:06.0000] <Hixie>
it's not clear to me why we need any CPs here at all

[15:52:07.0000] <Hixie>
we have a patch

[15:53:00.0000] <Hixie>
unless someone has any objections, why can't the CP just be "apply the patch"

[15:53:01.0000] <tantek>
Hixie, I'm trying to interpret the issues in a way that will achieve consensus which is another way of saying minimizing friction so you can get on to more things

[15:53:02.0000] <tantek>
it started as one change proposal yes

[15:53:03.0000] <Hixie>
ok tell you what, i'll let you deal with the process as you wish, you tell me what to add to the spec

[15:53:04.0000] <tantek>
I've updated it / split it per feedback / guidance from Sam

[15:54:00.0000] <tantek>
in the interests of moving it through the HTML WG process

[15:54:01.0000] <tantek>
hoops etc.

[15:54:02.0000] <Hixie>
ok so what do you want me to add, and where

[15:55:00.0000] <tantek>
(reloading one-page version)

[15:58:00.0000] <tantek>
so the first change is to replace the schema.org example in the time section with the rfc4287 version I pasted above: http://krijnhoetmer.nl/irc-logs/whatwg/20111119#l-103

[15:58:01.0000] <tantek>
and yes, RDFa use of <time> is currently undefined

[15:59:00.0000] <tantek>
I'll monitor the RDFa discussions and when they've figured it out I can suggest an example for RDFa+time as well, but we don't have to wait for that.

[15:59:01.0000] <Hixie>
do you mind if i tweak the example contents a bit?

[15:59:02.0000] <Hixie>
also, i'm not sure it makes sense to use an RFC url as an itemtype, is an example.org URL ok instead?

[15:59:03.0000] <tantek>
sure - I was just picking something that somehow made sense


2011-11-19
[16:00:00.0000] <tantek>
with a URL that people could look at

[16:00:01.0000] <tantek>
and see what terms/vocab was (re)used

[16:00:02.0000] <tantek>
it's a hypothetical example

[16:00:03.0000] <tantek>
example.org is better though - good idea

[16:00:04.0000] <tantek>
less likely to be blindly copy/pasted

[16:01:00.0000] <Hixie>
/me looks at rfc487 instead of 4287 and gets very confused :-P

[16:01:01.0000] <tantek>
lol

[16:01:02.0000] <Hixie>
ah, atom

[16:01:03.0000] <Hixie>
makes sense

[16:01:04.0000] <tantek>
so sure. example.org/rfc4287 ;)

[16:01:05.0000] <Hixie>
and i already have a reference, awesome

[16:07:00.0000] <Hixie>
ok i've marked the old schema.org example as being for the whatwg spec only, and added an example based on the one you suggested.

[16:07:01.0000] <Hixie>
should be up momentarily on the single-page copy

[16:08:00.0000] <Hixie>
tantek: k, new example is up, just before the one that's whatwg-only

[16:08:01.0000] <tantek>
reloading

[16:10:00.0000] <tantek>
Hixie, with all this example updating, would it be too much to ask to fix the hCalendar example as well since you're in that area?

[16:10:01.0000] <tantek>
(or does that mess up your bug resolution stats ;) )

[16:11:00.0000] <tantek>
(new fictional microdata vocab example looks good)

[16:11:01.0000] <tantek>
/me goes to review data element while he's here on the single-page version

[16:14:00.0000] <Hixie>
if we can consider it part of the same issue, sure

[16:15:00.0000] <Hixie>
i don't want to be making changes to the spec that aren't in the htmlwg copy

[16:15:01.0000] <tantek>
yeah

[16:15:02.0000] <Hixie>
it's bad enough that we're diverged so much as it is (which was caused by having things in flight when the chairs decided to force mike to do his stuff)

[16:15:03.0000] <tantek>
trying to figure out how to make your one patch address multiple issues / change proposals simultaneously

[16:15:04.0000] <tantek>
yeah, apologies again for failing to realize how bad that was going to be and failing to object to the revert / and/or ask for a delay

[16:16:00.0000] <tantek>
(I was on that telcon)

[16:16:01.0000] <Hixie>
i'm still baffled by why the chairs decided to do it this way instead of following their process

[16:16:02.0000] <Hixie>
(i.e. reopen the bug)

[16:16:03.0000] <tantek>
I don't quite understand the revert request process

[16:16:04.0000] <Hixie>
but whatever

[16:16:05.0000] <Hixie>
i'm letting you deal with it :-)

[16:16:06.0000] <tantek>
fair enough

[16:16:07.0000] <Hixie>
gotta move to another room, one moment. then will examine the hcalendar thing.

[16:17:00.0000] <tantek>
ok

[16:23:00.0000] <tantek>
data element description seems fine

[16:23:01.0000] <tantek>
couple of notes

[16:23:02.0000] <tantek>
interesting that value attribute is required

[16:23:03.0000] <tantek>
I guess that makes sense

[16:23:04.0000] <tantek>
would there be any value in <data> without value?

[16:23:05.0000] <tantek>
or is that just a span?

[16:23:06.0000] <TabAtkins>
It's just <span> at that ponit.

[16:24:00.0000] <tantek>
the only minor difference I can think of:

[16:24:01.0000] <tantek>
span can be / is just used for styling hooks sometimes

[16:24:02.0000] <tantek>
data would be an explicit way of saying "this is data"

[16:24:03.0000] <tantek>
but that's pretty minor

[16:24:04.0000] <tantek>
not worth quibbling or changing the spec about

[16:25:00.0000] <TabAtkins>
The presence of @itemprop on <span> also says that.

[16:25:01.0000] <tantek>
let's see how web developers use <data>

[16:26:00.0000] <tantek>
TabAtkins, thanks for your updates to http://www.w3.org/wiki/User:Tantekelik/data_element

[16:26:01.0000] <TabAtkins>
np

[16:33:00.0000] <tantek>
updated with Contributors section

[16:46:00.0000] <Hixie>
tantek: ok, fixing hcalendar example

[16:46:01.0000] <Hixie>
should be up

[16:47:00.0000] <Hixie>
tantek: anything else?

[16:48:00.0000] <Hixie>
if not i'll reply to sam saying that i've worked with you to address his concerns

[16:49:00.0000] <tantek>
Hixie thanks - checking

[16:49:01.0000] <tantek>
also, I just wrote up a fourth change proposal to handle the year week only dates

[16:49:02.0000] <tantek>
http://www.w3.org/wiki/User:Tantekelik/time_input_match

[16:51:00.0000] <Hixie>
k

[16:51:01.0000] <tantek>
I believe the four change proposals I've written up at http://www.w3.org/wiki/User:Tantekelik#change_proposals now cover the edits in your patch

[16:51:02.0000] <Hixie>
cool

[16:51:03.0000] <tantek>
or vice versa

[16:52:00.0000] <tantek>
temporal order isn't that relevant right?

[16:52:01.0000] <Hixie>
yeah, i was gonna say, more vice versa :-)

[16:53:00.0000] <Hixie>
do you want to reply to sam or should i?

[16:53:01.0000] <tantek>
I'll go ahead since I wrote up the 4th change proposal, as that will require raising a 4th issue to be addressed by the 4th change proposal

[16:54:00.0000] <Hixie>
cool, thanks

[16:54:01.0000] <tantek>
/me digs through his email

[17:10:00.0000] <tantek>
email sent. awaiting the 30 second "Undo" delay ;)

[17:10:01.0000] <tantek>
Hixie, since you've updated your patch, you may want to send that to the list

[17:11:00.0000] <Hixie>
k

[17:14:00.0000] <tantek>
http://lists.w3.org/Archives/Public/public-html/2011Nov/0186.html

[17:22:00.0000] <tantek-ipod>
Ok going mobile. Will try to lurk for a while in case there are any other time related discussions. Maybe see some of you (sf folks) at Ilya's memorial tonight. (see plancast.com/t )

[02:07:00.0000] <heycam>
/me laughs at the grindr related bug raised on the spec

[06:04:00.0000] <adtykfhyipoh>
hey can someone invite me to #php?

[06:06:00.0000] <adtykfhyipoh>
I need help with pp

[06:06:01.0000] <adtykfhyipoh>
*php

[06:11:00.0000] <adtykfhyipoh>
hello

[06:11:01.0000] <adtykfhyipoh>
please help

[06:11:02.0000] <adtykfhyipoh>
where are php file uploads stored by default? I need to set permissions

[06:23:00.0000] <erlehmann>
wat

[14:38:00.0000] <Margle>
paul_irish: cool talk bro

[14:38:01.0000] <paul_irish>
thxx


2011-11-20
[19:23:00.0000] <Yuhong>
Here is a case where interleaving document.write with appendChild of <base> element had led to a 0-day security bug:

[19:23:01.0000] <Yuhong>
https://bugzilla.mozilla.org/show_bug.cgi?id=607222

[09:26:00.0000] <gsnedders>
AryehGregor: You can fake [[Class]] with a custom toString, but then Foo.prototype.toString !== Object.prototype.toString so you just break the spec elsewhere

[09:26:01.0000] <AryehGregor>
gsnedders, of course, it's not perfect.  It will handle the common case of alert(), though.

[09:26:02.0000] <AryehGregor>
ES5 doesn't allow JS to set [[Class]], so of course you're never going to really get it right from JS.

[09:27:00.0000] <gsnedders>
And ES6 will get rid of [[Class]] entirely

[09:59:00.0000] <AryehGregor>
So FromPropertyDescriptor is defined to only work for a fully populated property descriptor, "such as that returned from [[GetOwnProperty]] (see 8.12.1)".  But [[GetOwnProperty]] doesn't say what to do if the object's property wasn't fully populated.

[10:00:00.0000] <AryehGregor>
If the spec says a property is defined with a [[Get]] field but no [[Set]] field, what's GetOwnProperty supposed to fill in for [[Set]]?

[10:09:00.0000] <AryehGregor>
Noteworthy: IE9 has a grand total of one WebIDL bug that I've been able to find so far.

[10:09:01.0000] <AryehGregor>
That's pretty darned impressive.

[10:09:02.0000] <AryehGregor>
(it always has .length 0 for functions, instead of equal to the max number of arguments)

[10:12:00.0000] <gsnedders>
AryehGregor: Not that surprising seeming they tried to impl it, and their testing of new stuff tends to be pretty good

[10:14:00.0000] <AryehGregor>
Yeah, I'm not surprised.

[10:14:01.0000] <AryehGregor>
I assume other implementations predated the spec, and IE9 wrote it from scratch per spec.

[10:32:00.0000] <gsnedders>
AryehGregor: AFAIK nobody else has changed their impl in > 10 years

[10:32:01.0000] <AryehGregor>
gsnedders, apparently Gecko is creating a new implementation, which is deployed for NodeList in current builds.

[10:33:00.0000] <AryehGregor>
That seems to be per spec, although one of the tests fails (apparently because of a bug in getOPD).

[10:45:00.0000] <Ms2ger>
gsnedders, yeah, our DOM bindings are being rewritten mostly from scratch to be less language-neutral

[10:46:00.0000] <zewt>
an unusual goal for a rewrite, heh

[10:46:01.0000] <Ms2ger>
zewt, you don't want to know how much support for python cost(s) us in code complexity

[11:06:00.0000] <AryehGregor>
/me discovers that to get an up-to-date node.js, he can either a) not use distributor packages, b) upgrade to 11.10, or c) try using newer packages and get into a rat's nest of dependency failures

[11:07:00.0000] <AryehGregor>
/me opts for (b)

[11:07:01.0000] <AryehGregor>
Fortunately, it's been a few years since an Ubuntu upgrade really broke my computer too badly.

[11:31:00.0000] <gsnedders>
AryehGregor: See, I'm scared of doing that on my desktop because it's ubuntu-standard (not ubuntu-desktop) with X.org and window manager and all installed manually. Seems more likely to break than something remotely standard.

[11:32:00.0000] <AryehGregor>
Ah.

[11:32:01.0000] <AryehGregor>
I stick to the well-trodden paths, personally.

[11:32:02.0000] <AryehGregor>
/me is alarmed that it thinks it's going to remove gnome-panel, since he relies on that, but will figure out details later

[11:32:03.0000] <gsnedders>
GNOME Panel is gone with GNOME 3.

[11:33:00.0000] <gsnedders>
But Ubuntu uses Unity by default anyway

[11:33:01.0000] <AryehGregor>
Right, and that doesn't use gnome-panel either by default, but you can still start it manually in 11.04.

[11:33:02.0000] <AryehGregor>
Which I do.

[11:33:03.0000] <AryehGregor>
And it works fine.

[11:33:04.0000] <AryehGregor>
I wrote a Google+ post on why I feel it's necessary.

[11:33:05.0000] <gsnedders>
Ah, you only have GNOME Shell and Unity as options in 11.10

[11:33:06.0000] <AryehGregor>
Maybe 11.10 Unity makes it unnecessary, I dunno.

[11:33:07.0000] <gsnedders>
Eh, Unity/GNOME Shell both suck :)

[11:34:00.0000] <gsnedders>
(I finally moved away from GNOME on my laptop when 11.10 came out… Now experimenting with Arch Linux on it, but it's not prompting for encrypted drive password on boot, yay)

[11:39:00.0000] <AryehGregor>
Don't you love how installing all the new packages takes a couple of hours, but it will sometimes randomly pause in the middle to prompt you about something, so you can't leave it unattended?

[11:39:01.0000] <AryehGregor>
And partway through the process, all your existing programs stop working so you can't usefully use the computer?

[11:39:02.0000] <AryehGregor>
<3 Linux

[11:42:00.0000] <AryehGregor>
/me thinks package management is great, but it should really be totally revamped

[11:43:00.0000] <AryehGregor>
There's no reason most of these packages can't be installed in a separate directory and only activated on reboot, say.  And I can't believe bulk upgrades can't be optimized a lot.

[11:43:01.0000] <AryehGregor>
Like using binary delta compression, for starters, the way Chrome does.

[11:43:02.0000] <AryehGregor>
/me grumbles

[11:48:00.0000] <Ms2ger>
Whoa, webkit removed document.width/height?

[11:54:00.0000] <Ms2ger>
TabAtkins, so what attribute normalization are you guys talking about in the the DIDOM thread?

[12:09:00.0000] <Ms2ger>
And there is Shelley again...

[12:32:00.0000] <Philip`>
AryehGregor: Gentoo is nice and never asks you for information during installation

[12:33:00.0000] <AryehGregor>
Philip`, what does it do instead, give you a root shell and expect you to install X and create any users you want by hand?

[12:33:01.0000] <Philip`>
(though admittedly it does tell you to do various things after installation, like checking diffs of all the configuration files and deciding which changes to accept, or like reinstalling some other packages that depend on an incompatible version of what you already reinstalled)

[12:34:00.0000] <Philip`>
AryehGregor: I mean installing new packages onto a working system, not installing a new one from scratch

[12:34:01.0000] <AryehGregor>
Oh, okay.

[12:35:00.0000] <Philip`>
(When installing from scratch, it does give you a root shell and expect you to do the stuff in http://www.gentoo.org/doc/en/gentoo-x86-quickinstall.xml (or the more verbosely described version in other documentation))

[12:37:00.0000] <AryehGregor>
/me prefers to stick with boring distributions and spend his time using software that lets you actually do useful things, like web browsers

[12:41:00.0000] <Philip`>
Yeah, it's not generally time-efficient

[14:26:00.0000] <AryehGregor>
The best part is packages where the configuration file has to be edited by hand in most cases but there's no separate file for the defaults, so if you install the package you'll almost surely modify the config file, and then it will conflict on every single upgrade.

[14:26:01.0000] <AryehGregor>
Examples: mysql, etckeeper.

[14:31:00.0000] <AryehGregor>
. . . rsnapshot.  Because no one modifies the default /etc/rsnapshot.conf, right?  That would be just silly!

[14:32:00.0000] <zewt>
better than distros that compile everything on install, as if that's a reasonable thing to do on a loaded server

[14:35:00.0000] <AryehGregor>
But think of what a great speedup you'll get from being able to use SSE4 instructions!

[14:36:00.0000] <zewt>
yeah, it makes file servers and http totally blaze

[14:36:01.0000] <AryehGregor>
Especially when your motherboard dies and you temporarily move the disk to another chassis to reduce downtime and it turns out the other CPU is slightly older and so your machine doesn't boot!

[14:36:02.0000] <zewt>
heh

[14:37:00.0000] <zewt>
i stopped using ubuntu after my last wouldn't-boot-after-upgrade failure

[14:37:01.0000] <AryehGregor>
I always managed to get it to boot after upgrade.

[14:37:02.0000] <AryehGregor>
Eventually.

[14:37:03.0000] <paul_irish>
I'm working with someone that wants to suggest EventTarget.on (as a method) .. what's the best venue for that proposal?

[14:37:04.0000] <AryehGregor>
To be fair, that's better than I can say for Windows.

[14:37:05.0000] <AryehGregor>
paul_irish, what would it do?

[14:37:06.0000] <zewt>
the upgrade wouldn't boot with the new kernel; i tried downgrading the kernel so i could try to fix it, and it turned out it also used a new grub (iirc) that wouldn't boot on the old kernel, they were interlocked

[14:38:00.0000] <paul_irish>
addEventListener mostly. probably could also get the opt-in delegation that has been discussed a little bit

[14:38:01.0000] <AryehGregor>
Oh, not booting on a new kernel, that's happened to me.

[14:38:02.0000] <AryehGregor>
Sometimes I've wound up booting o the kernel from the under-development version, or a kernel.org kernel.

[14:39:00.0000] <annevk>
paul_irish: www-dom

[14:39:01.0000] <AryehGregor>
s/ o / /

[14:39:02.0000] <zewt>
that's bad enough, but breaking every standard downgrade procedure by interlocking upgrades--that's just a poor distro

[14:39:03.0000] <annevk>
paul_irish: www-dom⊙wo that is

[14:39:04.0000] <zewt>
(went back to debian)

[14:39:05.0000] <paul_irish>
yup. kk thx annevk

[14:39:06.0000] <AryehGregor>
Hey, it's all about tradeoffs.

[14:39:07.0000] <annevk>
paul_irish: why not EventTarget.on.event.add() btw?

[14:39:08.0000] <paul_irish>
so much typing.

[14:40:00.0000] <annevk>
I guess it depends on what flexibility you want

[14:40:01.0000] <paul_irish>
yeah

[14:40:02.0000] <AryehGregor>
Would you prefer the latest version of everything, plus new shiny half-baked software applications that have had rigorous usability testing on all four of their features?  Or a reliable, stable machine that is guaranteed to boot the very finest software from three years ago?

[14:40:03.0000] <_bga>
annevk :/

[14:41:00.0000] <_bga>
div.onClick._add(_fn)

[14:41:01.0000] <AryehGregor>
Ubuntu is a bit flaky, but I prefer being able to use almost all of my software from the official package repos and not be missing much.

[14:41:02.0000] <_bga>
div.onClick._del(_fn)

[14:41:03.0000] <AryehGregor>
It's reportedly a lot more reliable than Fedora.

[14:41:04.0000] <annevk>
_bga: o_O

[14:41:05.0000] <annevk>
/me is not sure what is going on

[14:41:06.0000] <AryehGregor>
(pretty much the only things I use not from the official repos are web browsers)

[14:41:07.0000] <annevk>
better go to bed while that is the case :)

[14:41:08.0000] <annevk>
nn

[14:42:00.0000] <_bga>
tomorrow

[14:42:01.0000] <_bga>
ok

[14:42:02.0000] <_bga>
good night annevk

[14:42:03.0000] <AryehGregor>
Okay, time to try rebooting.

[14:46:00.0000] <AryehGregor>
I have to hand it to Canonical.

[14:46:01.0000] <AryehGregor>
That is about the smoothest upgrade imaginable.

[14:46:02.0000] <AryehGregor>
(at least the reboot part of it)

[14:47:00.0000] <AryehGregor>
Too bad Unity is still broken, and now starting gnome-panel doesn't seem to work, so I can't actually figure out which XChat window is which without going through all of them one by one.

[14:47:01.0000] <jgraham>
AryehGregor: They are telling you to level up and use screen + irssi

[14:48:00.0000] <AryehGregor>
I still have multiple browser windows and terminal windows open.

[14:48:01.0000] <AryehGregor>
No way to tell them apart.

[14:49:00.0000] <finn_a>
I wish I could use a local IRC client but for some reason it keeps disconnecting on me

[14:50:00.0000] <finn_a>
Webchat it is

[14:50:01.0000] <AryehGregor>
Okay, so gnome-panel is still around, it just doesn't work from Alt-F2 . . .

[14:50:02.0000] <AryehGregor>
Oh, /usr/local/bin, great.

[14:53:00.0000] <AryehGregor>
Also, I notice Unity has been improved to handle two monitors correctly now, where "correctly" means "the left-hand monitor must be the primary one" instead of "the left-hand side of both monitors kind of works except not really because the design specs didn't say how to behave for multiple monitors and so the behavior is essentially random".

[14:53:01.0000] <finn_a>
Too true.

[14:54:00.0000] <AryehGregor>
Not that I'm blaming them.  I mean, if you have only like two guys writing your features, it's probably a good idea to not actually let users have options.

[14:54:01.0000] <finn_a>
Ubuntu is sweet, but sometimes, if you want to do something just a little bit outside the ordinary path, you'll struggle.

[14:54:02.0000] <finn_a>
Humm... I mean, the beaten path. I think

[14:55:00.0000] <AryehGregor>
That way, the 16% of users who are actually happy with the defaults can have a great experience, the 61% of users who don't like the defaults but are too lazy to change them will get used to the workarounds they figure out and eventually not care, and only 23% will be angry enough to switch to another distro.

[14:55:01.0000] <AryehGregor>
(figures may not add up to 100% due to rounding and/or fabrication)

[14:56:00.0000] <finn_a>
Seems about right.

[14:57:00.0000] <AryehGregor>
Also, it seems like Alt-F2 now refuses to run the command you actually specify and instead autocompletes with no obvious way to override it, even if you give a full path.

[14:57:01.0000] <finn_a>
How annoying.

[14:57:02.0000] <AryehGregor>
Apparently its search index hasn't heard of /usr/bin/gnome-panel, so it must not exist, and I must mean /usr/bin/gnome-panel-screenshot instead.

[14:58:00.0000] <AryehGregor>
It's only fair, I'm sure I'm a backwards cretin for wanting GNOME 2 features anyway.

[14:58:01.0000] <AryehGregor>
Problem is, I have no idea how Alt-F2 works or how to replicate its effect (namely running a graphical program without having to keep it open in some terminal or screen or such).

[14:59:00.0000] <finn_a>
There's always the desktop/GUI solution.

[14:59:01.0000] <AryehGregor>
What?

[14:59:02.0000] <finn_a>
If you can stick a shortcut somewhere that solves it.

[15:00:00.0000] <AryehGregor>
Oh.

[15:00:01.0000] <AryehGregor>
Right.

[15:00:02.0000] <AryehGregor>
Those things.

[15:00:03.0000] <finn_a>
Pretty annoying though. I agree.

[15:00:04.0000] <AryehGregor>
Now the fun question is, will it actually let me create a shortcut by path, or do I have to browse to it in nautilus and drag because users aren't supposed to know about filesystems?

[15:01:00.0000] <AryehGregor>
/me waits however many minutes for nautilus to display a few hundred sorted icons in /usr/bin

[15:01:01.0000] <AryehGregor>
Okay, less than a minute.

[15:01:02.0000] <finn_a>
Lucky there

[15:02:00.0000] <finn_a>
So, the atmosphere here in the IRC chat is quite different from the forums

[15:02:01.0000] <finn_a>
I think I like it

[15:02:02.0000] <AryehGregor>
Brilliant, it copied it.  That is exactly the correct default action when dragging an executable!

[15:02:03.0000] <AryehGregor>
Do actual WHATWG people use the forums?

[15:02:04.0000] <finn_a>
I have no idea. I just browsed there and said wat

[15:02:05.0000] <AryehGregor>
I mean, like, the people who edit specs and stuff.

[15:02:06.0000] <AryehGregor>
Also, don't equate my occasional ranting with the normal atmosphere of this channel.

[15:03:00.0000] <AryehGregor>
I only occasionally indulge, when I want to procrastinate and no one is saying anything important that I'm disrupting.

[15:03:01.0000] <finn_a>
Nah I've been lurking for a while now

[15:03:02.0000] <finn_a>
Nothing as inane as the stuff in the forums

[15:03:03.0000] <AryehGregor>
/me cannot find a way to make a link using the GUI, so resorts to ln -s from the command line so that he can click the shortcut because the command itself doesn't do what he wants from the command line

[15:04:00.0000] <finn_a>
Oh lawd.

[15:04:01.0000] <AryehGregor>
Success!

[15:04:02.0000] <finn_a>
Sometimes I'm glad I'm stuck with Windows.

[15:04:03.0000] <finn_a>
Then I remember, I'm stuck with Windows...

[15:04:04.0000] <AryehGregor>
That's the great thing about Linux.  It perpetually annoys you with stupid and totally unnecessary inconveniences, but then makes you feel smart because you figure out how to work around them

[15:04:05.0000] <AryehGregor>
.

[15:05:00.0000] <AryehGregor>
Unless it makes you feel stupid because you can't figure out how to work around them, in which case you should stick to Windows.

[15:05:01.0000] <finn_a>
Or for that sake, Mac.

[15:05:02.0000] <finn_a>
I must say. I tried. I tried, Linux, I really did.

[15:05:03.0000] <finn_a>
But, I can't seem to install it at all.

[15:06:00.0000] <finn_a>
I don't have a CD drive

[15:06:01.0000] <finn_a>
And the Wubi install doesn't work for me

[15:06:02.0000] <AryehGregor>
Okay, now everything is actually working the way I want it again.  I'm pleased.  This is below average downtime for an Ubuntu upgrade.

[15:06:03.0000] <AryehGregor>
Oh, wait, spoke too soon.

[15:06:04.0000] <finn_a>
It begins...

[15:07:00.0000] <AryehGregor>
gnome-panel made a top panel that partially overlaps the Unity panel.

[15:07:01.0000] <finn_a>
How darn annoying

[15:07:02.0000] <finn_a>
Such is life in Ubuntu 11.

[15:08:00.0000] <AryehGregor>
11.10.

[15:08:01.0000] <AryehGregor>
Not 11.

[15:08:02.0000] <AryehGregor>
It's YY.MM.

[15:09:00.0000] <finn_a^>
So apparently it's cool to crash.

[15:09:01.0000] <finn_a^>
While I'm typing out a long sentence

[15:09:02.0000] <AryehGregor>
Well, you said you use Windows, so yeah.

[15:09:03.0000] <finn_a^>
True enough

[15:10:00.0000] <AryehGregor>
. . . Windows did actually crash?

[15:10:01.0000] <finn_a^>
Nah it was Opera

[15:10:02.0000] <AryehGregor>
Oh, okay.

[15:10:03.0000] <finn_a^>
Makes sense still

[15:10:04.0000] <AryehGregor>
Because I thought Windows was actually reasonably stable these days.

[15:10:05.0000] <finn_a^>
It sort of is but my netbook only has like 1 gig of ram or something

[15:10:06.0000] <finn_a^>
Three tabs at the same time? Nyeeeah. Maybe

[15:12:00.0000] <finn_a^>
http://forums.whatwg.org/bb3/viewtopic.php?f=1&t=4741

[15:12:01.0000] <finn_a^>
Is this the real world?

[15:13:00.0000] <finn_a^>
I mean, I can't really blame the guy, with all the HTML5 hype, but, really?

[15:14:00.0000] <AryehGregor>
Looks like zcorpan is the only actual WHATWG person who uses the forum.

[15:15:00.0000] <finn_a^>
Something like that.

[15:16:00.0000] <finn_a^>
Maybe I should try unetbootin

[15:16:01.0000] <finn_a^>
...In that case I'm getting Debian though

[15:22:00.0000] <finn_a^>
Guess I'll try it

[15:22:01.0000] <finn_a^>
Talk to you.

[15:40:00.0000] <AryehGregor>
/me finds himself poring through an strace of gnome-panel to figure out where it's reading its configuration from

[15:40:01.0000] <AryehGregor>
This is more like a typical upgrade now.

[15:50:00.0000] <AryehGregor>
/me gives up on getting gnome-panel to work correctly for now

[15:51:00.0000] <AryehGregor>
/me slightly suspects he destroyed his gnome-panel settings and they just don't take effect until GNOME restarts or something

[15:58:00.0000] <AryehGregor>
Oh, wow, they borked Alt-Tab.

[15:59:00.0000] <AryehGregor>
Hitting it twice in a row no longer lets you switch between two windows.

[15:59:01.0000] <zewt>
haha

[15:59:02.0000] <AryehGregor>
. . .

[15:59:03.0000] <zewt>
yeah uh that's universal windows ui 101

[15:59:04.0000] <AryehGregor>
The first one gets me from terminal to Chrome, the second gets me from Chrome window 1 to Chrome window 2.

[15:59:05.0000] <zewt>
("windowing ui")

[15:59:06.0000] <AryehGregor>
I have to hit tab twice to get back to the terminal.

[15:59:07.0000] <zewt>
if they think that's an acceptable change, then they have no business making a windowing system


2011-11-21
[16:00:00.0000] <AryehGregor>
That's exceptionally horrifying even for Ubuntu upgrade brokenness.

[16:00:01.0000] <zewt>
i keep a wide distance between myself and linux as a desktop. heh

[19:49:00.0000] <zewt>
"The idea is not to remove APIs." "smaller set of facilities" ... okay ...

[20:45:00.0000] <zewt>
heh

[20:46:00.0000] <zewt>
sixty million sites? no big deal!

[20:47:00.0000] <zewt>
should just filter out that utter waste of time thread so i don't feel the urge to keep looking at it

[20:49:00.0000] <paul_irish_>
zewt: which thread is this

[20:50:00.0000] <zewt>
"tag comment on" (sic)

[20:51:00.0000] <zewt>
wherein apparently people try to argue that tens of millions of sites is small enough to not worry about changing web storage

[20:52:00.0000] <zewt>
(an unlikely number, i think, but that's beside the point)

[21:12:00.0000] <Hixie_>
non-vendors arguing with vendors who say no is always rather amusing

[21:16:00.0000] <tantek>
prefixes?

[21:16:01.0000] <Hixie_>
in this particular instance, the thread zewt mentioned

[21:16:02.0000] <Hixie_>
but it's always funny regardless of who it is

[21:17:00.0000] <zewt>
that thread's just abject nonsense, heh

[21:20:00.0000] <zewt>
my takeaway is just names being associated with the nonsense--in this case, "w3c tag" (and since I don't really know what the "TAG" is, i just associate the w3c with it), and oracle

[21:21:00.0000] <Hixie_>
the TAG is essentially an invitation-only interest group

[21:22:00.0000] <zewt>
an unpleasant series of words in and of itself

[21:22:01.0000] <Hixie_>
it's constituents are those who think it is a good idea to sit on a group which has "architecture" as one of the three words of its name

[21:23:00.0000] <Hixie_>
and who can get voted in by a group, i forget if the voting group is the incumbent group of people on the tag, or the ac, or some other group

[21:23:01.0000] <zewt>
and periodically make suggestions half a decade or more too late

[21:23:02.0000] <zewt>
(along with all the other obvious problems here)

[21:25:00.0000] <zewt>
the disconnect from reality is stunning, even if it shouldn't be

[00:00:00.0000] <hsivonen>
ooh. there's now a keyword for a11y_semantics on the W3C bugzilla

[00:02:00.0000] <hsivonen>
and a11y_table_headers

[00:02:01.0000] <hsivonen>
oh, come on. how come this is an a11y bug? http://www.w3.org/Bugs/Public/show_bug.cgi?id=13396

[01:34:00.0000] <jgraham>
AryehGregor: But [[Class]] == XPC_WN_ModsAllowed_NoCall_Proto_JSClass is so pretty!

[02:09:00.0000] <annevk>
heycam|away: maybe unions should be a typedef and we should support something like or for methods e.g. append(DOMString|Node node...) or some such

[02:10:00.0000] <annevk>
heycam|away: that is I think supporting or for methods is enough, maybe allowing a typedef for them is nice as a convenient short name, if that doesn't have side effects

[03:25:00.0000] <annevk>
<s> is the one that is legal right?

[03:25:01.0000] <annevk>
s element is impossible to search for in the HTML spec

[03:25:02.0000] <annevk>
so I wrote http://blog.whatwg.org/weekly-time-police

[03:33:00.0000] <annevk>
"(as opposed to just writing the specs for the browser implementors and leaving web authors guessing)" ah yeah, I forgot why I put those domintro boxes in the XHR spec

[03:34:00.0000] <annevk>
o_O

[03:34:01.0000] <annevk>
what an asshat

[03:42:00.0000] <jgraham>
annevk: The phrase "could care less about" doesn't make much sense in the context you used it. At least I presume you weren't intending to convey "I care about this some unspecified amount that is greater than the minimum amount that I could care"

[03:43:00.0000] <jgraham>
(possibly you meant "couldn't care less" which is likely untrue, but might convey the sentiment of not thinging it is a substantive issue better)

[03:43:01.0000] <jgraham>
*thinking

[03:46:00.0000] <annevk>
jgraham: ooh

[03:46:01.0000] <annevk>
jgraham: you're talking about my email to public-html

[03:47:00.0000] <annevk>
jgraham: I guess I did mean couldn't

[03:47:01.0000] <annevk>
I think I've made that mistake before :(

[03:47:02.0000] <annevk>
/me was searching through his WHATWG Weekly post

[03:52:00.0000] <annevk>
hehe

[03:52:01.0000] <annevk>
I'm now labeled "spindoctor"

[03:52:02.0000] <annevk>
by stevef

[03:53:00.0000] <annevk>
not really sure what I am spinning though

[03:54:00.0000] <jgraham>
annevk: It's one of those things that people *all* *over* *the* *internet* get wrong and I get annoyed by. I probably shouldn't since I'm sure I write some stupid stuff too. But still.

[03:55:00.0000] <annevk>
It's good to call it out

[03:55:01.0000] <annevk>
I aspire to write better English than the natives, but I usually fail :)

[03:58:00.0000] <annevk>
wow

[03:58:01.0000] <annevk>
I canceled my The Economist subscription since I hardly ever read it these days

[03:58:02.0000] <annevk>
they just cancel it per direct and give you the remaining money back

[03:59:00.0000] <annevk>
classy

[04:02:00.0000] <zcorpan>
i guess 'width:50%' counts as a "CSS3 layout command", dunno

[04:18:00.0000] <annevk>
WHATWG on Google+: https://plus.google.com/110228011578241735536/

[04:22:00.0000] <zcorpan>
it will be useful for what?

[04:23:00.0000] <annevk>
not sure yet

[04:24:00.0000] <annevk>
but might be easier to comment for people on Google+

[04:24:01.0000] <annevk>
it might be easier to share quick ideas there

[04:24:02.0000] <annevk>
and get feedback on them

[04:24:03.0000] <annevk>
we'll have to explore

[04:26:00.0000] <zcorpan>
do spec updates get posted there?

[04:27:00.0000] <annevk>
if someone makes that work

[04:31:00.0000] <annevk>
seems a page can only be managed by one person?

[04:31:01.0000] <annevk>
that would be rather annoying

[04:31:02.0000] <annevk>
might be a shortlived experiment if so

[04:33:00.0000] <espadrine>
I think there was the possibility of having more managers, but it was broken, so they removed it

[04:33:01.0000] <espadrine>
(it might come back)

[04:35:00.0000] <annevk>
okay

[04:35:01.0000] <annevk>
I think I'll just share WHATWG Weekly there for now

[04:55:00.0000] <hsivonen>
the new Web, where instead of an RSS feed, someone has to post updates to Twitter, G+, Facebook, etc.

[04:56:00.0000] <annevk>
that's easy to say, but you do cannot share items out of an RSS feed without twitter/G+/etc.

[04:57:00.0000] <annevk>
you cannot easily bind popularity to them either without twitter/G+/etc.

[04:57:01.0000] <annevk>
or get feedback

[06:24:00.0000] <annevk>
can someone please fix the WHATWG Wiki somehow?

[06:24:01.0000] <annevk>
the spam is becoming a serious issue

[06:24:02.0000] <annevk>
I'm spending way too much time cleaning it up

[06:27:00.0000] <Lachy>
annevk, what do you suggest be done?

[06:27:01.0000] <annevk>
and it seems I'm not the only one

[06:27:02.0000] <annevk>
for the blog we use the spam software from Matt Mullenweg's company

[06:27:03.0000] <annevk>
forgot the name

[06:27:04.0000] <annevk>
there's a mediawiki plugin for that

[06:28:00.0000] <annevk>
maybe that helps?

[06:28:01.0000] <annevk>
alternatively

[06:28:02.0000] <annevk>
block new user registration

[06:28:03.0000] <annevk>
which sucks

[06:28:04.0000] <annevk>
and point them to IRC

[06:28:05.0000] <annevk>
if there's an easy way for us to make a new user that is...

[06:28:06.0000] <annevk>
or

[06:28:07.0000] <annevk>
some plugin that allows deletion

[06:28:08.0000] <Lachy>
blocking user registration could be done as a temporary fix, but we could try that plugin.

[06:29:00.0000] <annevk>
like when you got to latest edits

[06:29:01.0000] <annevk>
a bunch of checkboxes

[06:29:02.0000] <annevk>
and a big button + delete all content and ban these users

[06:29:03.0000] <Lachy>
AryehGregor, ^

[06:30:00.0000] <annevk>
just take a look now: http://wiki.whatwg.org/wiki/Special:RecentChanges

[06:30:01.0000] <annevk>
doesn't even fit on the default page what I did

[06:30:02.0000] <annevk>
I hope I got all

[06:30:03.0000] <annevk>
seems hixie/hober/tantek missed a few

[06:31:00.0000] <annevk>
but spam control should not be something four people have to be involved in over the course of a single week :)

[06:31:01.0000] <Lachy>
we used to have ConfirmEdit set up which did help a lot. Is that still functioning?

[06:33:00.0000] <annevk>
there's something about patrolled edits

[06:33:01.0000] <annevk>
but the content still needs to be removed

[06:33:02.0000] <annevk>
and it doesn't apply to user pages maybe?

[06:33:03.0000] <annevk>
yeah, maybe that it doesn't apply to user pages is the problem

[06:33:04.0000] <annevk>
since everyone keeps creating user pages

[06:41:00.0000] <annevk>
kennyluck: I think with feedback we should be as inclusive as possible; whereas when making a standard you want to give as little freedom as possible to the implementor

[06:41:01.0000] <Lachy>
http://www.mediawiki.org/wiki/Extension:AkismetKlik

[06:41:02.0000] <annevk>
kennyluck: if such a comparison makes sense at all, which I'm not sure it does :)

[06:42:00.0000] <annevk>
Lachy: oh, experimental only :(

[06:44:00.0000] <annevk>
Lachy: maybe something like http://www.mediawiki.org/wiki/Extension:ConfirmEdit ?

[06:44:01.0000] <Lachy>
annevk, we already have that one

[06:45:00.0000] <Lachy>
I'm not sure if it's still enabled though, nor how to check

[06:45:01.0000] <annevk>
Lachy: so new users get a ReCaptcha?

[06:46:00.0000] <Lachy>
They get asked to solve a simple equation. http://wiki.whatwg.org/index.php?title=Special:UserLogin&type=signup

[06:46:01.0000] <Lachy>
Maybe that plugin is just out of date

[06:46:02.0000] <annevk>
ah yeah

[06:46:03.0000] <annevk>
maybe we should go for something more complex?

[06:47:00.0000] <annevk>
it seems '<label for="wpCaptchaWord">53 - 5</label>' is easy enough to automate

[06:47:01.0000] <annevk>
if this is an automated attack, might not be I guess

[06:52:00.0000] <annevk>
already more useful feedback on Google+ than the WHATWG blog has had in quite a while

[06:53:00.0000] <annevk>
the non-open webby nature of social networks is uncool, but they do help in participation

[06:54:00.0000] <Lachy>
I upgraded the plugin. But I just noticed all the .svn folders in there now. Did this whole wiki installation get moved to an SVN server somewhere, and then deployed from there?

[06:56:00.0000] <annevk>
that sounds like a thing foolip would do

[06:56:01.0000] <annevk>
but I don't think he's involved

[06:56:02.0000] <annevk>
maybe that's how DreamHost deals with this?

[06:56:03.0000] <foolip>
hehe, I plead not guilty

[06:57:00.0000] <kennyluck>
Instead of G+, I think having some WHATWG regulars participate in the discussion forum of the jQuery standard team would be more worthy though.

[06:57:01.0000] <kennyluck>
if folks here are not doing it already

[06:58:00.0000] <annevk>
we're doing it the other way around since a couple of weeks

[06:58:01.0000] <annevk>
wycats and paul_irish

[06:58:02.0000] <annevk>
help out via IRC / email

[06:59:00.0000] <annevk>
I want to have some kind of StandardsCamp in due course

[06:59:01.0000] <annevk>
or WebPlatformCamp or whatever

[06:59:02.0000] <miketaylr>
can it be in an actual forest?

[06:59:03.0000] <annevk>
if there's wireless of some kind :p

[07:00:00.0000] <kennyluck>
I assume most of jQuery people are on https://groups.google.com/forum/?pli=1#!forum/jquery-standards and I think setting up more channels won't help much.

[07:01:00.0000] <MikeSmith>
miketaylr: amen to something you said on a mailing list in the last few days

[07:01:01.0000] <MikeSmith>
right now I can't remember quite what it was

[07:01:02.0000] <miketaylr>
heh

[07:01:03.0000] <MikeSmith>
but you told it like it is

[07:01:04.0000] <miketaylr>
oh, localStorage?

[07:02:00.0000] <annevk>
kennyluck: it seems Jake is also on board with them, great!

[07:02:01.0000] <MikeSmith>
ah yea

[07:02:02.0000] <MikeSmith>
miketaylr: yah

[07:02:03.0000] <MikeSmith>
so I should shut up about that

[07:02:04.0000] <annevk>
kennyluck: I'm occupied enough as it is, but if you have extra time feel free to join and share whatever you learn :)

[07:03:00.0000] <MikeSmith>
annevk: for the record, I am the W3C's crazy uncle

[07:03:01.0000] <MikeSmith>
the TAG is not capable of competing with me in that regard

[07:04:00.0000] <annevk>
if you're the crazy uncle one would have to wonder what the W3C is

[07:04:01.0000] <annevk>
or the TAG for that matter :p

[07:04:02.0000] <kennyluck>
annevk, I was trying to save more of your time!

[07:05:00.0000] <MikeSmith>
/me ends his second two-hour telcon about the same topic in as many days and heads off to drink some shouchu in peace

[07:08:00.0000] <annevk>
Should we use http://disqus.com/welcome/ for the WHATWG blog to make it easier for people to give feedback on an article?

[07:08:01.0000] <annevk>
Apparently it can import existing comments

[07:08:02.0000] <jgraham>
Why?

[07:08:03.0000] <annevk>
I just explained why

[07:08:04.0000] <jgraham>
Why does it make it easier?

[07:09:00.0000] <annevk>
because you don't have to fill in all your details

[07:09:01.0000] <jgraham>
/me has never liked disqus on other people's blogs

[07:10:00.0000] <annevk>
yeah me neither, but then I don't give much feedback on the WHATWG blog and neither does anyone else

[07:10:01.0000] <annevk>
and yet there's quite a few people who read it, who probably have questions

[07:10:02.0000] <annevk>
e.g. on Google+ some people replied directly with some feedback

[07:10:03.0000] <annevk>
it seems there's some kind of barrier to be kicked down there

[07:13:00.0000] <jgraham>
Maybe. I think it is pretty natural to comment on something in the place you found it rather than on the thing itself even if that doesn't make much sense

[07:13:01.0000] <jgraham>
Consider e.g. reddit, slashdot

[07:13:02.0000] <jgraham>
Often the articles they link to have comments, but people comment on reddit/etc/ instead

[07:14:00.0000] <annevk>
That suggests it does not matter much what we do

[07:14:01.0000] <annevk>
Which might be true, although some WHATWG posts did get a lot of feedback, hmm

[07:36:00.0000] <erlehmann>
annevk, i hereby offer to host an imageboard, with the main section being /w/ – whatwg.

[07:37:00.0000] <erlehmann>
annevk, please do not use disqus. it is a pain for users.

[07:37:01.0000] <erlehmann>
it also is not usable at all without javascript, without that being necessary.

[07:38:00.0000] <erlehmann>
i know at least 3 blogs where using disqus has prevented comments from being made, in a „why doesn't this stupid thing work“-way.

[07:39:00.0000] <zcorpan>
so about find() and findAll(), are people aware of the existing window.find() which is for page search?

[07:40:00.0000] <jgraham>
/me wonders why it can't be called .select

[07:41:00.0000] <jgraham>
(are we really that precious about 2 characters?)

[07:41:01.0000] <annevk>
erlehmann: okay, no disqus for now

[07:42:00.0000] <erlehmann>
annevk, i do not even see why one would use it if a comment infrastructure is there. the blogs using it (at least those i know) are mainly HTML static pages.

[07:43:00.0000] <zcorpan>
jgraham: wasn't select an IE XPath-y API or some such?

[07:43:01.0000] <annevk>
erlehmann: basically so you don't have to fill in all your details just to leave a simple comment

[07:43:02.0000] <annevk>
erlehmann: four fields is overkill for what should be one

[07:44:00.0000] <erlehmann>
annevk, then do it imageboard-style. only an optional name.

[07:45:00.0000] <erlehmann>
as i detailed in my mail, it leads to more comments, but not necessarily more spam.

[07:47:00.0000] <jgraham>
zcorpan: selectNodes and selectSingleNode afaict

[07:47:01.0000] <zcorpan>
k

[07:47:02.0000] <Philip`>
/me 's usual experience of Disqus is that he scrolls to the bottom of a blog post and then waits two seconds and the comments section still hasn't loaded, so he closes the page and goes off somewhere else without even reading the existing comments

[07:49:00.0000] <jgraham>
/me wonders if dglazkov still thinks that "having XPath in HTML DOM opens up a whole new level of flexibility and just plain coding convenience for JavaScript developers"

[08:14:00.0000] <karlcow>
/me fears that more and more information goes on G+ closed system

[08:15:00.0000] <timeless>
/me chuckles

[08:15:01.0000] <annevk>
I rather it goes there than lost in the minds of people

[08:15:02.0000] <karlcow>
qotd

[08:15:03.0000] <annevk>
have it go*

[08:15:04.0000] <smaug____>
/me has given up using his google account

[08:16:00.0000] <annevk>
valuable feedback for the platform is :)

[08:16:01.0000] <annevk>
I can see how that can be interpreted in various ways :)

[08:16:02.0000] <karlcow>
 /dev/null+

[08:16:03.0000] <karlcow>
 /dev/nullgle+

[08:17:00.0000] <annevk>
heh

[08:18:00.0000] <annevk>
In general though I think it's important that we try out new things and see how they go

[08:19:00.0000] <annevk>
Lets try to learn from our conservative predecessors :)

[08:20:00.0000] <zewt>
sometimes i feel like i'm playing an adventure game editing comments in gmail

[08:21:00.0000] <zewt>
i remove text before a quote, and it moves quote headers around in seemingly random ways

[08:27:00.0000] <annevk>
zcorpan: find() would not be on Window

[08:27:01.0000] <annevk>
zcorpan: it's for Document/DocumentFragment/Element

[08:27:02.0000] <annevk>
zcorpan: and maybe NodeArray

[08:34:00.0000] <zcorpan>
annevk: ok. still, a bit confusing if window.find() and document.find() exist and do very different things

[08:36:00.0000] <jarek>
annevk: why CSSOM sucks so much? :/

[08:37:00.0000] <jarek>
annevk: I'm just reading http://dev.w3.org/csswg/cssom/#the-cssrule-interface and there are few improvements

[08:39:00.0000] <jarek>
e.g. there doesn't seem to be a way to get a list of declarations from CSSStyleRule

[08:41:00.0000] <annevk>
latest XKCD is pretty cool

[08:42:00.0000] <annevk>
jarek: yes there is: http://dev.w3.org/csswg/cssom/#cssstylerule

[08:42:01.0000] <annevk>
jarek: specially, .style

[08:43:00.0000] <annevk>
jarek: the reason it sucks though, I don't know, it was designed before my time

[08:43:01.0000] <jarek>
annevk: ohh, that's awkward

[08:43:02.0000] <jarek>
annevk: why can't we have a full representation of stylesheet in JSON-like format?

[08:43:03.0000] <annevk>
jarek: when Java was still popular in standards bodies and jQuery was -10 years old

[08:45:00.0000] <jarek>
do you know any better object representation for CSS?

[08:45:01.0000] <annevk>
jarek: not really

[08:45:02.0000] <annevk>
jarek: I just wanted to document what was out there

[08:45:03.0000] <annevk>
though apparently the CSS WG thinks I'm interested in new features

[08:46:00.0000] <annevk>
not sure how that happened

[08:46:01.0000] <annevk>
I had some plans for a better value API, but there's little traction thus far

[08:46:02.0000] <jarek>
I'm building custom CSS parser, so I thought about outputting simillar objects to CSSOM

[08:46:03.0000] <annevk>
ah I see

[08:47:00.0000] <annevk>
in JavaScript?

[08:47:01.0000] <jarek>
yeah

[08:47:02.0000] <annevk>
cool

[08:47:03.0000] <jarek>
but after reading the spec I dropped this idea :P

[08:47:04.0000] <annevk>
fair enough

[08:47:05.0000] <annevk>
I'm not sure how we get this design to be honest and improving it is kind of hard

[08:47:06.0000] <annevk>
people have all kinds of different uses for CSS

[08:48:00.0000] <jarek>
annevk: it would good engough if the stylesheet was represented as a tree

[08:48:01.0000] <jarek>
e.g. first there is styleRule

[08:48:02.0000] <jarek>
then there is styleRule.declarations, and styleRule.selectors.selector, and...

[08:49:00.0000] <annevk>
it's basically a tree at this point

[08:49:01.0000] <annevk>
declarations are just stored in a map

[08:50:00.0000] <annevk>
a CSSRule is either a selector/declaration block, or an at-rule

[08:50:01.0000] <jarek>
annevk: but the tree is not very deep, e.g. you can't access simple selectors to calculate specificity

[08:50:02.0000] <erlehmann>
annevk, please stop sending me mail twice. i am on the list and will get it anyway.

[08:50:03.0000] <annevk>
erlehmann: please configure your settings, reply-all is standard procedure for every list I'm on

[08:51:00.0000] <annevk>
erlehmann: you can configure this for the WHATWG list if that is the one that is bothering you

[08:51:01.0000] <annevk>
jarek: sure, and when you have several style sheets it also does not work

[08:51:02.0000] <erlehmann>
annevk, intredasting. i am all in favor of filtering on the receiving end, but i did not know that this was not an error.

[08:52:00.0000] <erlehmann>
annevk, does that mean i send mail to everyone twice too?

[08:54:00.0000] <annevk>
erlehmann: depends on how you send your email I guess

[08:54:01.0000] <jarek>
what's the status of this spec? http://disruptive-innovations.com/zoo/cssvariables/

[08:54:02.0000] <jarek>
are there any chances that it will be accepted by W3C?

[08:55:00.0000] <annevk>
erlehmann: I always use reply all because otherwise just the person sending the email will get the reply (the mailing list software should not change the reply-to header)

[08:55:01.0000] <jgraham>
annevk: "Average cost of meal at 20 costliest SF resturants - $85.27" - apparently xkcd teaches us that food is cheap in California

[08:55:02.0000] <erlehmann>
annevk, i see. there is also the case that that person may have left the list, for late replies. i have „reply to list“ in here (using sylpheed claws).

[08:56:00.0000] <erlehmann>
i thought it was an error, honest.

[08:56:01.0000] <annevk>
jgraham: heh

[08:56:02.0000] <annevk>
erlehmann: my software has reply list too now, maybe I should start using that

[08:57:00.0000] <annevk>
erlehmann: maybe some people only look at messages addressed at them though and then they would miss it

[08:57:01.0000] <jcranmer>
I prefer reply to list

[08:57:02.0000] <annevk>
erlehmann: so reply all seems safer, but I could change habbit for a while and see what happens

[08:57:03.0000] <jcranmer>
otherwise, the mailing list refuses to send me an email that would get filtered into the correct folder

[08:57:04.0000] <erlehmann>
annevk, i see a reason for including people. as i said, i am all in favor of filtering at the recipient end

[08:58:00.0000] <jcranmer>
/me ought to break down and use gmane to access most of these mailing lists

[09:07:00.0000] <zewt>
"list reply" is nice, but very few MUAs support it; i just reply-all since that's convention on these lists (and gmail doesn't have list-reply)

[09:07:01.0000] <zewt>
also very few users actually understand list-reply-to

[09:08:00.0000] <jcranmer>
the MUA I have makes it easier to reply-to-list than reply-all on a mailing list message

[09:09:00.0000] <zewt>
gmail only has (afaik) reply-all and reply-to-sender; to reply to the list only i'd have to edit recipients manually every time (not going to happen)

[09:11:00.0000] <gsnedders>
jQuery JSONP has so much browser sniffing it's painful.

[09:16:00.0000] <AryehGregor>
zewt, some mailing lists have the sender as the list, so reply to sender replies to the list.

[09:16:01.0000] <AryehGregor>
Wikimedia lists are all set up like that, but W3C lists seem not to be.

[09:16:02.0000] <AryehGregor>
It always made much more sense to me, as a convention.

[09:17:00.0000] <kennyluck>
AryehGregor, do Wikimedia lists have public archives as well?

[09:17:01.0000] <AryehGregor>
kennyluck, yes.

[09:17:02.0000] <zewt>
AryehGregor: that's horrible

[09:18:00.0000] <zewt>
the sender is the person who sent the message; i shouldn't have to jump hoops if i want to reply to someone directly

[09:18:01.0000] <AryehGregor>
/me shrugs

[09:18:02.0000] <AryehGregor>
Reply to sender is rarely what people want, on lists.

[09:19:00.0000] <kennyluck>
The reason why I guess W3C is doing this is to make to think twice if you are criticizing people and don't want that to be public.

[09:19:01.0000] <zewt>
kennyluck: no, it's because it's how almost all lists work

[09:19:02.0000] <kennyluck>
hmm… OK

[09:21:00.0000] <Philip`>
/me remembers lots of discussion about the mailing list sender settings when public-html was first set up

[09:21:01.0000] <Philip`>
(and lots of discussions about how mailing lists were obsolete and rubbish)

[09:22:00.0000] <Philip`>
(I think the discussion went on for weeks with hundreds of messages, and ended up with nothing changing)

[09:24:00.0000] <zewt>
mailing lists are still the best approach for detailed conversations

[09:25:00.0000] <zewt>
forums are handy for casual conversation (fewer steps to jump in with one reply to a running conversation if you're not a member in advance), but not a fan for technical discussions

[09:30:00.0000] <AryehGregor>
Okay, finally.

[09:30:01.0000] <AryehGregor>
Solution: log out, log in to GNOME Classic desktop, gnome-panel will be right-clickable.  Delete the top panel.  Go back to Unity, and the bottom panel will remain.

[09:31:00.0000] <AryehGregor>
Why in heaven's name this process is necessary or even works, I don't know, but I finally have what I want.

[09:31:01.0000] <AryehGregor>
Now I need to look into that Alt-Tab behavior . . .

[09:34:00.0000] <AryehGregor>
Too bad I can't post a response here: http://ubuntuforums.org/showthread.php?p=11300607#post11300607

[09:35:00.0000] <zewt>
locked threads are one of the reasons forums tend to be terrible

[09:35:01.0000] <zewt>
people arbitrarily deciding that nobody could possibly have anything useful to say about a topic, so they should be prevented from doing so

[09:35:02.0000] <AryehGregor>
To be fair, I didn't generally allow that on the forum I ran.

[09:36:00.0000] <AryehGregor>
Also to be fair, forums tend to become cesspits much more readily than mailing lists, for whatever reason.

[09:36:01.0000] <AryehGregor>
Maybe just because of how they're used.

[09:37:00.0000] <zewt>
if someone locks a topic i'm writing on, even odds i'll just stop going to the forum entirely

[09:38:00.0000] <AryehGregor>
If nobody ever locks topics, most forums tend to become places nobody will want to go to in the first place.

[09:38:01.0000] <Philip`>
AryehGregor: Maybe it's because mailing lists appeal to more old-fashioned people, so they typically have more mature communities

[09:38:02.0000] <zewt>
that's silly; it's even easier to ignore uninteresting topics on forums than lists

[09:38:03.0000] <AryehGregor>
Anyway: so it seems like the theory is that in Ubuntu 11.10, Alt-Tab switches between applications and Alt-` switches between windows in the same application.  This might at least be tolerable, despite being a completely gratuitous break from the behavior of every OS in the universe for the last zillion years, except that Alt-Tab sometimes still does switch between windows in the same application.

[09:38:04.0000] <AryehGregor>
Sigh.

[09:39:00.0000] <zewt>
AryehGregor: sounds like somebody with very little UI experience trying to be too "clever"

[09:39:01.0000] <AryehGregor>
zewt, most forums are a bunch of bored teenagers whose idea of fun is to post off-topic nonsense.

[09:39:02.0000] <zewt>
when it comes to fundamental UIs, "clever" is bad

[09:40:00.0000] <AryehGregor>
zewt, or they have UI experience but are being pushed to get new and exciting changes out the door so their marketing department can point to all the cool progress they're making.

[09:40:01.0000] <AryehGregor>
That's a major problem with Ubuntu right now.

[09:40:02.0000] <AryehGregor>
They're trying to be ambitious but don't have the resources to do it right, so they push out all kinds of changes that are half-baked.

[09:40:03.0000] <AryehGregor>
I don't actually think Unity is so bad, I just think it really needs a lot more refinement before it makes sense to inflict it on people by default.

[09:40:04.0000] <zewt>
i never use linux as a desktop, but ubuntu (and to a lesser extent debian) tends to make unwelcome changes on the server-side, too

[09:41:00.0000] <gavinc>
Of course Apple never just changes things to make things exciting and new

[09:41:01.0000] <zewt>
changing stuff that's been around forever, which every linux user in the world knows how to deal with, for something new and shiny and invariably brittle

[09:41:02.0000] <zewt>
upstart needs to die

[09:42:00.0000] <AryehGregor>
gavinc, sure they do, but they have the resources to do it right.

[09:42:01.0000] <AryehGregor>
zewt, SysV init is what needs to die.  It's horrible for performance and maintainability.  I have no strong opinion on Upstart vs. systemd, though.

[09:43:00.0000] <zewt>
upstart broke on a system and after hours of trying to figure out how i was supposed to diagnose it, i just threw up my hands and reinstalled

[09:43:01.0000] <Philip`>
zewt: Maybe the idea is that people who aren't Linux users (but are potential users) don't know how to deal with it yet, but they're the important people (since they will drive the growth of Linux and Linux-related companies), so the benefits of sticking with a familiar but inferior solution are lessened

[09:43:02.0000] <AryehGregor>
I don't think I've had any trouble with Upstart itself, although I remember once the mysqld start script gave me a lot of grief.

[09:44:00.0000] <zewt>
Philip`: put differently, "we don't care about existing users, we need our new shinies"

[09:44:01.0000] <AryehGregor>
Philip`, that argues for trying to copy Windows conventions, not make up ones that no one anywhere has ever used.

[09:47:00.0000] <zewt>
expecting everyone to learn a completely new system is pushing a huge effort onto existing users

[09:47:01.0000] <gavinc>
So?

[09:47:02.0000] <zewt>
what?

[09:47:03.0000] <gavinc>
Apple got/gets great press and lots of new users by throwing plenty of old users under the bus

[09:47:04.0000] <gavinc>
I don'

[09:47:05.0000] <zewt>
AryehGregor: well, for that particular case, windows's conventions for startup and service maintenance are pretty much "mysterious black box" even to most advanced users, heh

[09:47:06.0000] <gavinc>
t think the issue is so much change, as it is that Unity isn't very good yet

[09:47:07.0000] <AryehGregor>
Okay, the "Bias alt-tab sorting prefer windows on the current viewport" setting in CompizConfig Settings Manager seems to have fixed the Alt-Tab behavior.

[09:47:08.0000] <AryehGregor>
zewt, I've found that to generally be true of Windows.  Linux is often annoying and poorly designed, but I can almost always diagnose and fix problems with a bit of work.

[09:48:00.0000] <AryehGregor>
Windows is more likely to work correctly out of the box, but if it breaks, good luck fixing it.

[09:48:01.0000] <AryehGregor>
You can only hope someone on some forum posted a voodoo-magic solution that will mysteriously work.

[09:48:02.0000] <erlehmann>
AryehGregor, just use XFCE.

[09:49:00.0000] <zewt>
with init.d i can; upstart, well, i could have spent the time to figure it out, but it looked like a ... well, like a closed black-box, which was making diagnosing my problem very hard; i had no interest in learning more about it

[09:49:01.0000] <AryehGregor>
Windows gurus are people who've memorized archaic configuration menus without really knowing what they're doing.  Linux gurus are people who write patches for their desktop.

[09:49:02.0000] <erlehmann>
zewt, does upstart not react to service?

[09:49:03.0000] <zewt>
i tried to get it into a diagnostics mode to tell me what it was doing, and it went into full-blown developer debug mode, spewing endless pages of low-level detail, which didn't help in the slightest

[09:49:04.0000] <erlehmann>
like service pulseaudio status?

[09:49:05.0000] <erlehmann>
AryehGregor, that is fun.

[09:49:06.0000] <jarek>
I wish Windows 98 was still supported, it's GUI was 10 times more productive than current shells

[09:49:07.0000] <zewt>
i don't know; i switched back to debian

[09:49:08.0000] <AryehGregor>
erlehmann, I've only written one.

[09:50:00.0000] <jarek>
s/it's/its

[09:50:01.0000] <zewt>
(i don't recall what the problem I was having was, but it was preventing the system from booting)

[09:50:02.0000] <erlehmann>
jarek, just install XFCE?

[09:50:03.0000] <AryehGregor>
Like a while ago, I created a laptop account for my fiancée.  Logging in didn't work.  It took like ten minutes for me to figure out the problem, which I reported, and I got a prompt response to my bug.

[09:50:04.0000] <gavinc>
erlehmann: service works fine with upstart

[09:50:05.0000] <erlehmann>
gavinc, good.

[09:50:06.0000] <erlehmann>
AryehGregor, sounds nice.

[09:50:07.0000] <jarek>
erlehmann: I'm using XFCE right now, it's far behind Gnome 2.x and Win98 in terms of usability

[09:51:00.0000] <AryehGregor>
On the other hand, any new accounts created on my parents' Windows 7 laptop don't work.  I spent at least half an hour trying to debug it, but none of the fixes I found by Googling the error message worked, and I still have not the slightest idea what the actual problem is.

[09:51:01.0000] <jarek>
e.g. I can't rearange menu items or unmount pendrive

[09:51:02.0000] <AryehGregor>
So I just use my father's account if I have to use their laptop.

[09:51:03.0000] <zewt>
winxp had the general UI pretty much right; they broke a *lot* in 7

[09:51:04.0000] <erlehmann>
jarek, with the exception that xfdesktop cannot into single click, what is missing?

[09:51:05.0000] <erlehmann>
the panel is better than gnome2

[09:51:06.0000] <AryehGregor>
zewt, isn't Debian switching to upstart?

[09:51:07.0000] <AryehGregor>
Yeah, I liked the Xfce panel too.

[09:51:08.0000] <AryehGregor>
I used it for a while.

[09:51:09.0000] <zewt>
AryehGregor: dunno, but the universal law of computing is that everything always gets worse, and that would be a logical consequence of that law

[09:51:10.0000] <Philip`>
/me is currently using Win7 and KDE, and doesn't get particularly upset by either of them

[09:52:00.0000] <gavinc>
Yes, debian is switching and redhat already did (but is switching away again)

[09:52:01.0000] <AryehGregor>
zewt, SysV init is horrifying for boot performance.  Everything has to be run serially, from shell scripts.

[09:52:02.0000] <zewt>
"boot performance"? who cares about how long it takes to boot?

[09:52:03.0000] <zewt>
i'd find it hard to think of anything i care about less

[09:52:04.0000] <jarek>
erlehmann: in Gnome 2.x I could open any remote filesystem by clicking on Panel -> Places

[09:52:05.0000] <erlehmann>
AryehGregor, i have noticed the opposite: windows takes a lot of work to be „just right“. it has no usable mediaplayer out of the box, nor a good editor. i even recently installed debian, because my girlfriend's laptop did not work with windows out of the box, but it did with debian (the driver CD had different drivers than the ones usable the hardware)

[09:52:06.0000] <Philip`>
zewt: Lots of people don't seem to have discovered suspend-to-RAM yet

[09:53:00.0000] <AryehGregor>
zewt, people who just installed Linux for the first time, and the first thing they see is that it boots really quickly compared to Windows?

[09:53:01.0000] <erlehmann>
jarek intredasting. then we need to improve XFCE, until it becomes the new gnome2!

[09:53:02.0000] <erlehmann>
Philip`, Win7 IS KDE4. mind = blown :D

[09:53:03.0000] <tantek>
AryehGregor: The problem with forums turning into cesspools more than email lists - any specific instances? Was it perhaps due to a lack of active community management?

[09:53:04.0000] <zewt>
it's the stupidest possible reason to change to a completely different, poorly-designed boot/service management system

[09:54:00.0000] <AryehGregor>
erlehmann, Windows has no usable default programs, that's absolutely true.  Its hardware support is also much more obnoxious than Linux's in many ways.  But it fails less often in ways that require you to actually understand your computer to fix it.

[09:54:01.0000] <zewt>
(i use notepad.exe all the time, heh)

[09:54:02.0000] <zewt>
calc.exe used to be decent; they sort of made it crap in 7

[09:54:03.0000] <AryehGregor>
tantek, mostly the forums I've been on were a bunch of teenagers hanging out, and the mailing lists I've been on were mostly targeted professional-ish things.  So it might be totally unrelated to the medium.

[09:55:00.0000] <zewt>
(for less trivial apps, they're not the OS's job to provide anyway; windows isn't a "distribution" in the sense linux systems normally are)

[09:56:00.0000] <erlehmann>
AryehGregor, the problem is that I know no one who can tell me if „change this registry key“ is the correct solution. with linux, that is kind of logical. and even my ten year old sister can type „apt-get“. (in fact, she seems to prefer it to a graphical package manager, since that takes longer)

[09:56:01.0000] <erlehmann>
zewt, if i get an operating system, i want usable defaults. part of that is having something like gedit and not something like notepad.

[09:57:00.0000] <zewt>
*shrug*

[09:57:01.0000] <zewt>
for serious editing i want vim; i don't care what the default is

[09:58:00.0000] <erlehmann>
hell, even „we know best, don't change anything“ OS X has somewhat usable defaults though their network manager lacks polish.

[09:58:01.0000] <erlehmann>
and their theming support was often grounds for me to confuzzle mac users „can you make it less blue-grayish?“

[09:58:02.0000] <erlehmann>
;)

[09:58:03.0000] <gsnedders>
zewt: The default matters when you can't install anything.

[09:59:00.0000] <AryehGregor>
Windows probably has terrible defaults for antitrust reasons.

[09:59:01.0000] <AryehGregor>
If they bundled a good text editor, they'd get in trouble.  They already got in trouble for bundling a usable browser, and these days an OS might as well be totally unusable if it doesn't have a browser.

[09:59:02.0000] <zewt>
if you can't install anything, you're either on someone else's system (in which case notepad is fine for quick editing), or you're on a corporate system (in which case the blame lies with your IT staff, not Microsoft)

[10:01:00.0000] <erlehmann>
zewt, or on an iDevice

[10:01:01.0000] <erlehmann>
well, that's a corporate system

[10:01:02.0000] <erlehmann>
in which case the blame lies with you, not Apple

[10:01:03.0000] <zewt>
speaking of reasonable defaults, would someone please tell debuntu that traceroute should obviously be installed by default

[10:04:00.0000] <tantek>
/me is on an idevice and wishes there was a webapp for irc that worked on it instead of having to use a native client. 

[10:05:00.0000] <AryehGregor>
tantek, it would have to be a privileged web app . . .

[10:05:01.0000] <zewt>
not at all

[10:05:02.0000] <gsnedders>
AryehGregor: Or proxy everything

[10:05:03.0000] <zewt>
you don't want to make irc connections directly from the phone anyway

[10:05:04.0000] <Philip`>
/me imagines Windows might have terrible defaults partly for compatibility reasons too, since people will write applications making assumptions about Notepad

[10:05:05.0000] <AryehGregor>
gsnedders, or that.

[10:06:00.0000] <gavinc>
zewt: Well, tracepath and traceroute6 are installed by default

[10:06:01.0000] <tantek>
Not to mention a decent texteditor webapp that sync'd local/web storage.

[10:06:02.0000] <zewt>
traceroute is the standard, universal tool; it's not optional

[10:06:03.0000] <finnala>
ack, it's a hard life in the 21 century

[10:07:00.0000] <tantek>
Like an etherpad that worked offline.

[10:07:01.0000] <erlehmann>
zewt, ed is the standard editor and is it on my android phone?

[10:07:02.0000] <erlehmann>
yes, indeed, it is.

[10:07:03.0000] <erlehmann>
but i still use nano.

[10:07:04.0000] <erlehmann>
:>

[10:07:05.0000] <zewt>
gross

[10:07:06.0000] <finnala>
Aw yeah, Nano.

[10:08:00.0000] <gavinc>
zewt: tracepath is not setuid, traceroute is

[10:08:01.0000] <erlehmann>
tantek, why can web apps not into IRC?

[10:08:02.0000] <zewt>
traceroute is one of the universal tools fundamental to any networked system. lacking it is just ridiculous

[10:09:00.0000] <zewt>
even windows has it (tracert)

[10:09:01.0000] <gavinc>
zewt: tracepath is traceroute minus security holes

[10:09:02.0000] <tantek>
Eg freenode with secure logins over ssl

[10:10:00.0000] <zewt>
gavinc: contrived; if traceroute was insecure, it wouldn't be in the distro at all

[10:11:00.0000] <Philip`>
Web browsers are insecure, and they're in the distro

[10:11:01.0000] <zewt>
(tracepath is also not installed by default in debian; at least in my install)

[10:13:00.0000] <zewt>
(it's also no reason to have a separate tool and expect everyone to figure out which tool to use on which system; the correct thing would be to provide a subset of traceroute with the same UI, using alternatives to switch)

[10:13:01.0000] <cfq>
tantek: how about irccloud? --> https://irccloud.com/

[10:13:02.0000] <erlehmann>
zewt, it is one command away, don't whine.

[10:13:03.0000] <zewt>
...

[10:13:04.0000] <erlehmann>
whereas not having a dozen usable apps on windows is a pain.

[10:13:05.0000] <zewt>
erlehmann <- -1

[10:13:06.0000] <zewt>
heh

[10:14:00.0000] <erlehmann>
?

[10:14:01.0000] <zewt>
again, windows is not a distro; it doesn't attempt to be--and the last thing i want is lots (more) windows bloat with it trying to package a bunch more stuff

[10:15:00.0000] <zewt>
(bloat is one serious problem in windows; I think 64-bit Win7 is on the order of 15 gigs, which is a huge chunk of an SSD)

[10:17:00.0000] <Philip`>
/me has 20GB in C:\Windows (with 64-bit Win7 and patches and various applications)

[10:17:01.0000] <zewt>
xp64 was like 4gb

[10:17:02.0000] <zewt>
well, no, xp32 was; not sure about xp64 off-hand

[10:17:03.0000] <Philip`>
(Luckily someone convinced me to get a 128GB SSD instead of 64GB, so space hasn't been a problem yet)

[10:17:04.0000] <finnala>
The problem with W7 is that it grows with each security patch

[10:18:00.0000] <Philip`>
((after moving some rarely-used Steam stuff onto the HD))

[10:18:01.0000] <zewt>
it's particularly nasty for VMs

[10:18:02.0000] <gavinc>
Philip`: I thought that's what Win7 was for, it's to run Steam

[10:18:03.0000] <erlehmann>
zewt, with 15 GIGABYTE, i can expect SOME usable editor.

[10:19:00.0000] <zewt>
"it's so bloated, what's a little more bloat" :)

[10:19:01.0000] <Philip`>
gavinc: That's my main use for it

[10:19:02.0000] <erlehmann>
zewt, if it were smaller, i would say, you are right. but it is not.

[10:19:03.0000] <gavinc>
Philip`: Well, I guess I also use IE sometimes to test things

[10:19:04.0000] <erlehmann>
it is big and still fails at usable apps.

[10:19:05.0000] <gavinc>
Philip`: Clearly just need Steam OS

[10:19:06.0000] <zewt>
text editor is shrug fine, but there's so much else that i need on any system that it's just one of many

[10:21:00.0000] <finnala>
Steam OS. That'd be gorgeous

[10:21:01.0000] <zewt>
(i use notepad all the time; the only things, for simple use, that i wish they'd fix is loading unix line endings, and undo)

[10:21:02.0000] <Philip`>
gavinc: Yeah, they should make a custom OS for games and run it on some custom hardware so developers have a predictable stable platform

[10:21:03.0000] <zewt>
(for anything nontrivial i just use gvim)

[10:21:04.0000] <Philip`>
gavinc: They could call it an Sbox or something

[10:21:05.0000] <finnala>
Reminds me of those old games that ran directly from floppies

[10:21:06.0000] <zewt>
"please flip the disk"

[10:21:07.0000] <finnala>
"Plane flying too fast?" "Turbo button to the rescue"

[10:22:00.0000] <zewt>
i wonder if i still have the old hole punch for apple II single-sided floppies

[10:23:00.0000] <tantek_>
zewt - any hole punch would do IIRC

[10:23:01.0000] <finnala>
Oldest stuff I have is my Amiga 600. Strange how up to date that thing feels even today.

[10:23:02.0000] <tantek_>
/me will take a look at irccloud

[10:24:00.0000] <tantek_>
thanks cfq

[10:24:01.0000] <tantek_>
anybody have any favorite webapp text editors?

[10:24:02.0000] <finnala>
Irccloud sounds pretty badass

[10:24:03.0000] <gavinc>
Philip`: Yeah! The SBox! And maybe it could come with dedicated controllers for games!

[10:24:04.0000] <zewt>
heh

[10:24:05.0000] <zewt>
gavinc: sad thing is, the 360 controller on the PC is one of the pieces that have recently made pc gaming a lot less painful

[10:25:00.0000] <finnala>
Hmm, there's always that OnLive console

[10:25:01.0000] <gavinc>
zewt: Well, at least playing 360 ports on the PC

[10:25:02.0000] <zewt>
having to design games around "arbitrary collection of axes and buttons" is a pretty big limitation

[10:25:03.0000] <zewt>
no, lots (maybe most, now) of pc games support the controller natively

[10:26:00.0000] <finnala>
As long as my shooters will still be controlled with a mouse, I'm grand.

[10:26:01.0000] <gavinc>
Mostly as long as TF2 is controlled with a mouse I'm happy... there are other shooters?

[10:27:00.0000] <finnala>
I still play some counter strike.

[10:27:01.0000] <finnala>
Still, I concede.

[10:28:00.0000] <Philip`>
/me likes it when games support 360 controller and mouse+keyboard, and automatically switch all their on-screen control prompts whenever you start using a different input method

[10:29:00.0000] <gsnedders>
Games like F1 2011 which you have to go into the config to change between the two are horrible

[10:29:01.0000] <gsnedders>
If I login to my profile with the keyboard, I then need to go to the options to play the game with the controller.

[10:30:00.0000] <finnala>
Ah well, I don't have this problem, yay for only piece of electronics being my netbook.

[10:30:01.0000] <finnala>
Moving to new countries is tedious...

[10:32:00.0000] <tantek_>
finnala especially when citizenship portability is still TBI in most of the world.

[10:33:00.0000] <finnala>
Sweet sweet European Union.

[10:33:01.0000] <finnala>
i /still/ had troubles with my taxes / banks / payslip.

[10:36:00.0000] <finnala>
Ah well. I can't seem to get mIRC / chatzilla / any real IRC client to work on this computer. shell account/irssi to the rescue.

[10:39:00.0000] <erlehmann>
xchat.

[10:39:01.0000] <erlehmann>
mIRC is pig disgusting.

[10:41:00.0000] <zewt>
mirc works fine, never liked xchat when i've tried it

[10:41:01.0000] <rillian_>
it's true, it does work fine

[10:41:02.0000] <rillian_>
I've been using limechat on macos. I think it also has a windows version.

[10:42:00.0000] <timeless>
IRCCloud (invites available)

[10:42:01.0000] <rillian_>
interesting mix of old and new ui design

[10:42:02.0000] <rillian_>
but I really like the 'things being said in other channels' pane it has

[10:42:03.0000] <finnala>
mirc is fine.

[10:42:04.0000] <finnala>
I just need something local

[10:42:05.0000] <finnala>
I tried chatzilla, but I get some sort of connection reset. Mirc does the same thing

[10:43:00.0000] <rillian_>
irssi in screen is very popular

[10:43:01.0000] <finnala>
I've no idea what's wrong, and I have no intention on fixing it.

[10:43:02.0000] <finnala>
irssi in screen was my plan... :> Putty to the rescue

[10:44:00.0000] <zewt>
i don't like irssi as a client at all; though i use it for irssi-proxy

[10:44:01.0000] <zewt>
(which i connect to with mirc, and with andchat on my phone)

[10:44:02.0000] <finnala>
I don't mind it... I guess I'm a nondiscriminating software-user

[10:45:00.0000] <timeless>
AryehGregor: fwiw alt-` is also available on OS X iirc

[10:45:01.0000] <timeless>
and technically BeOS had a way to do something similar w/ Twitcher

[10:46:00.0000] <timeless>
(but it was shinier, more powerful)

[10:47:00.0000] <finnala>
Awwrite. Irssi up and running at least.

[10:47:01.0000] <erlehmann>
ii

[10:47:02.0000] <erlehmann>
best irc client ever

[10:47:03.0000] <erlehmann>
or so i heard

[10:47:04.0000] <timeless>
zewt: Startup on Windows is solved by http://www.soluto.com/

[10:48:00.0000] <finnala>
I never even tried ii

[10:48:01.0000] <finnala>
I'm not sure if I even heard of it before now

[10:49:00.0000] <timeless>
AryehGregor: hey, when you have time w/ your parent's laptop, ping me

[10:50:00.0000] <AryehGregor>
timeless, um, why?

[10:51:00.0000] <timeless>
zewt: awww, i like the Calc.exe refresh

[10:51:01.0000] <timeless>
AryehGregor: i'd like to try to solve the login problem :)

[10:51:02.0000] <zewt>
i hate how i have to constantly switch modes depending on whether i want floating-point or base conversions

[10:51:03.0000] <AryehGregor>
timeless, I'm not really interested in spending the time on it.

[10:52:00.0000] <timeless>
AryehGregor: windows has simple tools because they were demos

[10:52:01.0000] <timeless>
the goal was to build a commercial ecosystem

[10:53:00.0000] <timeless>
by enabling partners to create and sell products

[10:53:01.0000] <timeless>
plus it meant you could get the os out the door faster

[10:53:02.0000] <timeless>
and you had fewer things that you'd be changing that might upset people

[10:53:03.0000] <timeless>
if MS changed a setting in the Word Processor, and it was part of the OS

[10:53:04.0000] <timeless>
then people would yell about that change and blame the OS

[10:53:05.0000] <timeless>
this way, people can choose the Word Processor of their choice, and complain about that w/o bashing the OS

[10:54:00.0000] <timeless>
When OpenOffice does something stupid, you don't blame Linux/Debian/Red Hat

[10:54:01.0000] <timeless>
this is actually valuable for each of those groups

[10:55:00.0000] <timeless>
Philip`: and yes, people do write things expecting notepad to exist in a given place and to work a certain way

[10:55:01.0000] <timeless>
http://blogs.msdn.com/b/oldnewthing/archive/2010/01/28/9954432.aspx is one place where that's discussed

[10:55:02.0000] <zewt>
(but the backwards-compatibility problem isn't as pronounced as it is with, say, breaking web APIs)

[10:55:03.0000] <timeless>
another is the disaster where people have an editor that forks and talks to itself and quits

[10:56:00.0000] <timeless>
if someone spawns EDITOR and expects it to be able to monitor the spawned process and then use the result to decide that the user has updated the file

[10:56:01.0000] <timeless>
and someone foolishly replaces EDITOR with something that exits immediately before the user can change the file, then... pain

[10:56:02.0000] <zewt>
that's just a basic API issue

[10:57:00.0000] <timeless>
zewt's right about the notepad / guest user / corporate lockdown

[10:57:01.0000] <zewt>
defining what launching an editor application is supposed to do

[10:57:02.0000] <finnala^>
Now we're talking

[10:57:03.0000] <timeless>
well, people who write replacements don't think about what they're replacing

[10:58:00.0000] <timeless>
consider the dozens of terrible Minesweeper knockoffs

[10:58:01.0000] <zewt>
overly-broad statement

[10:58:02.0000] <timeless>
and the dozens of terrible so.exe knockoffs

[10:58:03.0000] <zewt>
many do, some don't, depending on competence

[10:58:04.0000] <timeless>
s/so/sol/

[10:58:05.0000] <timeless>
will you accept "the vast majority"?

[10:59:00.0000] <zewt>
if you discard the ones that nobody actually cares about, probably not

[11:00:00.0000] <zewt>
("jimmy's weekend hack editor for my cs201 project, released as 10-second-delay 90s nagware")

[11:00:01.0000] <timeless>
finnala^: would you like an irccloud invite

[11:00:02.0000] <zewt>
i actually hit a nagware-delay program the other day; "nostalgic" would not be the word i'd use

[11:00:03.0000] <finnala^>
That would be sweet indeed.

[11:01:00.0000] <timeless>
Philip`: they should make XBox360? :)

[11:01:01.0000] <timeless>
finnala^: /msg me your email address

[11:02:00.0000] <timeless>
/me reaches now now

[11:02:01.0000] <finnala_>
Sorry, got disconnected there for a second

[11:02:02.0000] <timeless>
finnala^: /msg me your email address

[11:02:03.0000] <finnala_>
Sure, one moment.

[11:02:04.0000] <timeless>
irccloud solves disconnections too :)

[11:02:05.0000] <tantek>
/me has signed up for a beta invite to https://irccloud.com/ - and now the wait.

[11:02:06.0000] <timeless>
tantek: i can just send you an invite

[11:03:00.0000] <zewt>
ff8 broke my anti-animated-favicon userChrome.css hack D:

[11:03:01.0000] <timeless>
then it's a race between me trying to send one and james getting your request and seding one

[11:03:02.0000] <timeless>
s/sed/send/

[11:03:03.0000] <timeless>
/me lost the last such race

[11:03:04.0000] <timeless>
zewt: what did your hack do?

[11:03:05.0000] <timeless>
or perhaps, how did you do it?

[11:03:06.0000] <finnala_>
timeless: Can you forward it to faa⊙ms please? :)

[11:03:07.0000] <timeless>
done

[11:04:00.0000] <finnala_>
Sweet. Thanks.

[11:04:01.0000] <zewt>
.tab-icon-image[src $= ".gif"] { visibility: hidden; }

[11:04:02.0000] <timeless>
tantek: seriously, i have 2 left today, if you're in a hurry :)

[11:04:03.0000] <zewt>
some false positives but worth it

[11:04:04.0000] <timeless>
oh, ick

[11:04:05.0000] <timeless>
technically you could have false negatives

[11:04:06.0000] <tantek>
timeless - cool, sign me up!

[11:04:07.0000] <zewt>
since firefox devs apparently actually think animated tab icons are okay (they're not)

[11:04:08.0000] <timeless>
tantek: email address?

[11:05:00.0000] <tantek>
pm

[11:05:01.0000] <timeless>
done

[11:05:02.0000] <finnala_>
So, now to see how well this thing works

[11:05:03.0000] <zewt>
hmm, works now, guess it was just a random miss

[11:05:04.0000] <timeless>
zewt: better than someone using js to animate it by setInterval(... document.getElementById("link-favicon").href=...)

[11:06:00.0000] <timeless>
people often save their favicon (even .gif) as favicon.ico :)

[11:06:01.0000] <zewt>
i don't think you can change the favicon after the page loads

[11:06:02.0000] <timeless>
that's probably how you missed it

[11:06:03.0000] <timeless>
you should be able to...

[11:06:04.0000] <zewt>
really really need a css "stop animations" style

[11:06:05.0000] <timeless>
yes

[11:06:06.0000] <zewt>
but i'm not putting the energy into fighting for that, heh

[11:07:00.0000] <finnala_>
The irccloud page is... weird...

[11:07:01.0000] <timeless>
oh, that sucks

[11:08:00.0000] <timeless>
zewt: ok

[11:08:01.0000] <timeless>
if you delete the <link> node from the dom, and reinsert it, you'll get an updated image

[11:08:02.0000] <timeless>
so yes it's a little bit more painful

[11:08:03.0000] <timeless>
but only a little more work, and js can trivially manage that :)

[11:08:04.0000] <zewt>
could also rate limit it

[11:08:05.0000] <timeless>
/me animated the favicon from irccloud to the google logo for testing

[11:11:00.0000] <zewt>
https://bugzilla.mozilla.org/show_bug.cgi?id=111373 today's the decade anniversary of this bug, so yeah, not holding out much hope

[11:12:00.0000] <finnala>
Okay. This at least gives the appearance of working.

[11:14:00.0000] <finn_irccloud>
Thanks for the invite.

[11:19:00.0000] <timeless>
zewt: there's a patch from this year

[11:41:00.0000] <heycam>
annevk, yeah having the union directly as the operation argument type seems ok to me

[11:43:00.0000] <annevk>
can you overload attributes currently?

[11:43:01.0000] <annevk>
it could be used for those too

[11:43:02.0000] <annevk>
basically

[11:43:03.0000] <annevk>
if we have union in this way

[11:44:00.0000] <annevk>
we may not need multiple method definitions anymore

[11:44:01.0000] <annevk>
unless you want to make the second argument dependent on the first and such

[11:44:02.0000] <annevk>
not sure if we have that and not sure if it's a good idea

[11:44:03.0000] <annevk>
oh

[11:44:04.0000] <annevk>
canvas.toDataURL() has some of that

[11:47:00.0000] <erlehmann>
zewt, http://tech.slashdot.org/story/11/11/21/1814228/ms-to-build-antivirus-into-win8-boon-or-monopoly

[11:47:01.0000] <erlehmann>
but still no good editor. for antitrust reasons. sure.

[11:48:00.0000] <finnala>
Such is life in the Microsoft world

[11:50:00.0000] <annevk>
wow

[11:50:01.0000] <annevk>
 /. is still there

[11:50:02.0000] <annevk>
/me didn't know

[11:51:00.0000] <finnala>
The strange part is that it's still fairly good, in my opinion anyway.

[11:51:01.0000] <finnala>
I thought anything that stayed on the net for too long got corrupted

[11:51:02.0000] <Philip`>
Is Digg dead yet?

[11:52:00.0000] <erlehmann>
digg exists?

[11:52:01.0000] <erlehmann>
annevk, slashdot is still there. but still no good editor. for antitrust reasons ;)

[11:53:00.0000] <finnala>
Digg still exists, but it's truly a shell of what it once was

[11:57:00.0000] <annevk>
could someone do me a favor and make a highres PNG out of http://www.whatwg.org/images/logo.svg ?

[11:58:00.0000] <annevk>
256x256/512x512 is probably enough

[11:58:01.0000] <annevk>
for the Google+ page

[11:59:00.0000] <finnala>
lol dunno why but that logo makes me think this is all some kind of practical joke

[12:00:00.0000] <annevk>
did you read our tagline?

[12:00:01.0000] <finnala>
I believe I might have

[12:00:02.0000] <finnala>
"leave all sense of logic at the door" or something.

[12:01:00.0000] <annevk>
anyway, the logo is definitely inspired by "WHAT"

[12:02:00.0000] <finnala>
http://i.imgur.com/ttEaX.png

[12:02:01.0000] <finnala>
is that what you needed?

[12:02:02.0000] <annevk>
and leading up to the creation of the WHATWG there was a series of blog posts along the lines of "I wonder /what wg/ will work on this?"

[12:02:03.0000] <annevk>
thanks

[12:02:04.0000] <finnala>
No stress.

[12:02:05.0000] <zewt>
W:D

[12:03:00.0000] <annevk>
https://plus.google.com/110228011578241735536/ is a little prettier now

[12:04:00.0000] <finnala>
looking good.

[12:06:00.0000] <finnala>
What do you think of that Diaspora social network?

[12:06:01.0000] <finnala>
I mean I kind of hope it breaks through and becomes something, but it feels unlikely

[12:07:00.0000] <annevk>
never tried it

[12:07:01.0000] <erlehmann>
finnala, i am planning to do a talk whose title can be literally translated as “no one needs diaspora”

[12:07:02.0000] <finnala>
Haha

[12:07:03.0000] <erlehmann>
it does not solve any user problem, only tries to emulate facebook

[12:07:04.0000] <finnala>
I'm not so sure, myself.

[12:08:00.0000] <finnala>
I think one problem is that Facebook has grown too big to fail, and alternative networks will be doomed to fail

[12:08:01.0000] <erlehmann>
finnala, it tells the big lie that “with just checking this box, your private data will be secure”

[12:08:02.0000] <annevk>
just like hunters have trophies I should have something similar for features I got killed from the web

[12:08:03.0000] <annevk>
latest addition: document.height & document.width

[12:08:04.0000] <erlehmann>
annevk, hahaha

[12:08:05.0000] <annevk>
now removed from Gecko and WebKit

[12:09:00.0000] <finnala>
Oh like that. To be honest, I haven't thought much about the privact of my data.

[12:09:01.0000] <erlehmann>
finnala, when me and another guy asked a dev at re:publica conference why they did not use existing open standards, he gave a null response.

[12:09:02.0000] <finnala>
I agree with that sentiment.

[12:10:00.0000] <erlehmann>
the host then told the audience to not ask technical questions. no one asked any question.

[12:10:01.0000] <finnala>
You raise a good point.

[12:10:02.0000] <zewt>
"don't ask questions that make the speaker uncomfortable"

[12:11:00.0000] <finnala>
Still I believe we need a more "open" social network

[12:11:01.0000] <erlehmann>
zewt, not that. he literally gave no usable answer.

[12:11:02.0000] <annevk>
is jake here on IRC?

[12:11:03.0000] <finnala>
Or actually, more than one

[12:11:04.0000] <annevk>
Jake Verbaten that is

[12:11:05.0000] <finnala>
Whether or not we use Diaspora is not something I really care about

[12:11:06.0000] <erlehmann>
zewt, i honestly believe the host wanted to avoid him wasting our time. because he did not say “i don't know” or similar

[12:12:00.0000] <erlehmann>
finnala, publishing data in not-interoperable form in someone else's namespace is a problem.

[12:12:01.0000] <finnala>
I guess I agree.

[12:12:02.0000] <finnala>
I'll be waiting for your article, in that case. :)

[12:12:03.0000] <erlehmann>
finnala, what is the problem with just using blogs, feeds and feedreaders, mailinglists, email, xmpp? if it is the interface, work on that.

[12:13:00.0000] <finnala>
Maybe it is the interface. I'm not sure what the problem is. What I do know is that Facebook has a giantic userbase that is essentially disconnected from the rest of the internet, save some privacy-invading "chats" and "like buttons"

[12:14:00.0000] <erlehmann>
finnala, if my talk will not be accepted (which is likely, a discussion panel on the open web got only accepted last-minute) i may write an article outlining it.

[12:15:00.0000] <finnala>
Well I'm happy you take the time to give your opinion on it. I look forward to it.

[12:15:01.0000] <erlehmann>
finnala, google+ continues this, with less “you can't see this” and an even less usable interface.

[12:15:02.0000] <Hixie_>
nice, a google+ page

[12:16:00.0000] <Hixie_>
i thought of doing one myself but figured i'd be accused of some sort of google-centric something or other

[12:16:01.0000] <erlehmann>
finnala, it really is not a difficult thing to go through the motions, collecting all the points. diaspora will scratch none of the issues people have with facebook.

[12:16:02.0000] <annevk>
Hixie_: I didn't realize I would be the only one who could maintain it :(

[12:16:03.0000] <annevk>
Hixie: hopefully that's temporary

[12:16:04.0000] <Hixie>
i expect so

[12:16:05.0000] <Hixie>
but have no information one way or the other

[12:16:06.0000] <finnala>
erlehmann: I think I might start to get where you're coming from. Sorry, sometimes I can be a bit slow.

[12:17:00.0000] <erlehmann>
finnala, no problem. i think for most people listening to that is only possible because the hype has subsided.

[12:17:01.0000] <erlehmann>
the “we'll produce something in a few month” hype

[12:17:02.0000] <erlehmann>
months

[12:18:00.0000] <annevk>
Hixie: people seem to like it though, so that's good

[12:18:01.0000] <erlehmann>
annevk, brought upon it yourself. if there were only some way to fill it dynamically, with some kind of … feed!

[12:18:02.0000] <annevk>
Hixie: although it did create a mini-thread on whatwg@

[12:18:03.0000] <erlehmann>
you could auto-post the blog articles there. is that possible?

[12:18:04.0000] <Hixie>
yeah, reading that now :-)

[12:18:05.0000] <erlehmann>
mea culpa.

[12:18:06.0000] <annevk>
erlehmann: I don't know if there's an API

[12:18:07.0000] <annevk>
erlehmann: haven't really looked to be honest

[12:19:00.0000] <annevk>
erlehmann: it's not a big deal either way

[12:19:01.0000] <zewt>
erlehmann: if comments end up on g+, or end up fragmented between the blog and g+, then that's a minus

[12:19:02.0000] <erlehmann>
annevk, they don't even have feeds. what do you expect? but you surely could make a userscript or two.

[12:19:03.0000] <zewt>
at least they finally fixed g+ on apps

[12:19:04.0000] <erlehmann>
zewt, i agree to the fullest extent allowed by law.

[12:20:00.0000] <zewt>
it was rather irritating that google kept shoving "try g+!" at me, with links that say "you can't use g+!"

[12:20:01.0000] <annevk>
comments already end up on twitter, the blog, IRC, forums, etc.

[12:20:02.0000] <annevk>
maybe on reddit occasionally

[12:20:03.0000] <annevk>
or hackernews

[12:20:04.0000] <annevk>
people's personal blog

[12:20:05.0000] <finnala>
Hehe. It is kind of hard to keep track of what is what, to be honest.

[12:20:06.0000] <annevk>
that's the way the world works

[12:20:07.0000] <erlehmann>
annevk, that is like the opposite of the perfect solution fallacy.

[12:21:00.0000] <annevk>
I think it's great personally

[12:21:01.0000] <erlehmann>
“because everything is crap, let's produce more crap.”

[12:21:02.0000] <annevk>
why would want centralized control over people's thoughts

[12:21:03.0000] <erlehmann>
not without usable backlinks.

[12:21:04.0000] <annevk>
that way lies madness

[12:21:05.0000] <erlehmann>
not centralized. but pingbacks or stuff.

[12:21:06.0000] <finnala>
Well, that's basically what the general person has now though, through Facebook

[12:21:07.0000] <erlehmann>
madness.

[12:22:00.0000] <finnala>
I mean, some people might use Reddit, blogs. But the general populace place on the net is definitely Facebook

[12:22:01.0000] <erlehmann>
is that so.

[12:22:02.0000] <erlehmann>
dunno.

[12:22:03.0000] <zewt>
in every way lies madness; life is merely your choice of madness

[12:22:04.0000] <erlehmann>
i know people who use twitter a lot.

[12:22:05.0000] <erlehmann>
and people who use facebook for invites.

[12:22:06.0000] <erlehmann>
zewt, U MAD?

[12:22:07.0000] <zewt>
quite

[12:22:08.0000] <finnala>
I don't think any of my collegues use anything but Facebook

[12:24:00.0000] <finnala>
I guess as long as the alternatives are there there's no real reason to panic.

[12:24:01.0000] <annevk>
I have Facebook, but that's not where most of creative output goes

[12:29:00.0000] <jgraham>
We ned a lyskom instance for the spec!

[12:29:01.0000] <jgraham>
Or at least a conference on lyslyskom

[12:29:02.0000] <jgraham>
or whatever it's called

[12:30:00.0000] <erlehmann>
jgraham, what is lyskom?

[12:31:00.0000] <jgraham>
It's <del>pure evil</del>a messaging system invented at Linkoping university

[12:31:01.0000] <finnala>
Don't trust Scandinavians.

[12:31:02.0000] <jgraham>
Which never really made it outside the city gates

[12:31:03.0000] <Ms2ger>
I hear Opera has an office there, they must be evil as well

[12:31:04.0000] <jgraham>
The people who like it *really* *really* like it

[12:32:00.0000] <erlehmann>
finnala, a lot of my friends use imageboards, well, i even met my girlfriend through an imageboard. in my culture, moot is the hero and zuckerberg the villain. blood for the blood god, skulls for the skull throne!

[12:32:01.0000] <jgraham>
They go on about how the whole thing being a directed graph is teh awesomes

[12:32:02.0000] <erlehmann>
jgraham, it it an open standard? if not, fail.

[12:32:03.0000] <finnala>
imageboards are nice. I grew up with messageboards/forums, myself.

[12:32:04.0000] <jgraham>
(notice I didn't say acyclic)

[12:32:05.0000] <finnala>
Didn't have internet for the longest time.

[12:33:00.0000] <finnala>
Lyskom sounds scary.

[12:33:01.0000] <erlehmann>
jgraham, go make a better „who kissed whom“ than me using your directed graph knowledge!

[12:33:02.0000] <jgraham>
And abou how it is great that you can move messages around, reedit them and generally break every invariant that might make it possible to build a good UI

[12:34:00.0000] <erlehmann>
jgraham, so it is … multiplayer notepad?

[12:34:01.0000] <finnala>
Like Google Wave but with extra nerd.

[12:34:02.0000] <jgraham>
erlehmann: It is sort of an open standard. http://www.lysator.liu.se/lyskom/protocol/

[12:35:00.0000] <erlehmann>
jgraham, if „sort of“ means there is only one implementation, triple fail.

[12:35:01.0000] <jgraham>
erlehmann: Since the only client that isn't "for n00bs" (not my words) is in emacs, I doubt anyone using lyskom has been doing much kissing

[12:36:00.0000] <jgraham>
erlehmann: I have no idea how many server implementations there are. There are multiple client implementations that all suck

[12:36:01.0000] <erlehmann>
jgraham, hey, i got the same response when i presented that thing at a pub.

[12:36:02.0000] <finnala>
You presented /what/ at a pub?

[12:36:03.0000] <annevk>
Ms2ger: already well ingrained in Mozilla messaging I see :p

[12:37:00.0000] <erlehmann>
finnala, oh. that was unfortunately worded. http://daten.dieweltistgarnichtso.net/src/wer-kuesst-wen

[12:37:01.0000] <Ms2ger>
annevk, I cannot comment on behalf of Mozilla :)

[12:37:02.0000] <finnala>
Breaking out the German stuff, I see.

[12:37:03.0000] <erlehmann>
finnala, wait.

[12:37:04.0000] <erlehmann>
http://daten.dieweltistgarnichtso.net/src/wer-kuesst-wen/?json=internet-elite.json

[12:37:05.0000] <erlehmann>
i got sample data

[12:38:00.0000] <erlehmann>
hehe

[12:38:01.0000] <jgraham>
erlehmann: QC doesn't have a very well connected network

[12:38:02.0000] <erlehmann>
people are URLs

[12:38:03.0000] <erlehmann>
jgraham, click the second link then

[12:38:04.0000] <finnala>
Germany scares me

[12:38:05.0000] <finnala>
This is a novel concept though.

[12:38:06.0000] <finnala>
I think I like it

[12:39:00.0000] <jgraham>
erlehmann: TMI :)

[12:39:01.0000] <erlehmann>
finnala, people have names and URLs. i get the avatars from the URLs.

[12:39:02.0000] <jgraham>
(also your graph layout algorithm doesn't work very well)

[12:39:03.0000] <erlehmann>
jgraham, this is a very crappy hack. everyone knowing something about web apps or data journalism did not want to help me.

[12:40:00.0000] <jgraham>
Fair enough :) It's not an easy problem AIUI

[12:40:01.0000] <erlehmann>
they either told me it is not usable (wrong, i have amazon style recommendations: people who kissed X also kissed Y)

[12:40:02.0000] <erlehmann>
or feared they would be displayed then

[12:40:03.0000] <finnala>
Hahaha that is awesome

[12:40:04.0000] <finnala>
But frightening

[12:40:05.0000] <erlehmann>
finnala, click on „empfehlungen“

[12:41:00.0000] <erlehmann>
one guy told me his girlfriend would end the relationship if she knew about this. i don't care enough about him or her to seek her out to tell.

[12:41:01.0000] <erlehmann>
jgraham, the layout used web workers, until i realized i eats 10MB RAM per second that way.

[12:41:02.0000] <finnala>
Remind me to delete my Facebook account if this ever reaches the masses.

[12:41:03.0000] <annevk>
erlehmann: http://www.silkapp.com/ is pretty awesome at browsing data

[12:41:04.0000] <annevk>
erlehmann: but it's still closed beta for now

[12:42:00.0000] <annevk>
(disclaimer: from friends)

[12:42:01.0000] <Hixie>
has nessy been around recently?

[12:42:02.0000] <annevk>
haven't seen her

[12:42:03.0000] <erlehmann>
in before “nessy has been around” and similar jokes

[12:42:04.0000] <erlehmann>
finnala, this works with every web site that provides the information. but i recently had the problem that a girl had actually deleted all of her URIs. that is rare, however.

[12:43:00.0000] <erlehmann>
mark pilgrim will never appear on this!

[12:43:01.0000] <erlehmann>
now we know why he killed his web sites :D

[12:43:02.0000] <finnala>
:)

[12:43:03.0000] <TabAtkins>
I've *almost* got this graph planar, dammit

[12:43:04.0000] <erlehmann>
it saves in your localstorage

[12:43:05.0000] <TabAtkins>
fucking artnoveua and eir promiscuity.

[12:44:00.0000] <finnala>
Hahaha I noticed too!

[12:44:01.0000] <erlehmann>
so you can make your own network. but careful, if the URL has a „json“ query parameter it overwrites everything.

[12:44:02.0000] <finnala>
I think I'm good, man. I think I'm good

[12:45:00.0000] <erlehmann>
TabAtkins, she actually asked me to add more people to a demo so she would not stand out. hahahaha.

[12:45:01.0000] <jgraham>
erlehmann: You nerd sniped TabAtkins. Congratulations :)

[12:45:02.0000] <TabAtkins>
Argh, goddam your graph physics.

[12:45:03.0000] <finnala>
It still flummoxes me how different the atmosphere in this IRC is from the WHATWG forum.

[12:45:04.0000] <erlehmann>
TabAtkins, https://github.com/erlehmann/wer-kuesst-wen

[12:45:05.0000] <finnala>
I definitely like this better. Oh yes

[12:45:06.0000] <jgraham>
erlehmann: Now you need to move on to more chalenging targets

[12:45:07.0000] <TabAtkins>
jgraham: One of my favorite timewasters is an old game called Planarity, which gives you a large graph and tells you to make it planar.

[12:45:08.0000] <erlehmann>
TabAtkins, hey, i never thought you could combine it!

[12:46:00.0000] <TabAtkins>
No physics there, so you have to do all the moving.

[12:46:01.0000] <erlehmann>
achievement award, make the local hookup network not planar!

[12:46:02.0000] <TabAtkins>
I don't know enough graph theory to actually do that.  ;_;

[12:47:00.0000] <erlehmann>
jgraham, my original project idea was much more ambitious, called „fickileaks“ (german wordplay on wikileaks) and should aggregate data from multiple sources. after the architecture was discussed, no one wanted to code much. :(

[12:47:01.0000] <finnala>
Oh you Germans.

[12:47:02.0000] <erlehmann>
i have yet to come to a decent RDFa aggregator and browser (which btw, is what i am wanting to do here)

[12:48:00.0000] <erlehmann>
finnala, more like “you berliners”. it is different in other parts.

[12:48:01.0000] <finnala>
Yeah but the other parts have other oddities

[12:48:02.0000] <erlehmann>
if you could browse FOAF statements through such an interface, that would be fun.

[12:48:03.0000] <Hixie>
annevk: is there still a way to filter the tracker only by changes that affect gecko?

[12:48:04.0000] <finnala>
I've been to the Kieler Umschlag. I've seen things.

[12:48:05.0000] <erlehmann>
finnala, less fun oddities.

[12:49:00.0000] <erlehmann>
TabAtkins, jgraham, any better idea for the physics? i am thinking i'll re-implement it some time either using d3 or the javascript infoviz toolkit.

[12:49:01.0000] <finnala>
If you apply enough of that fig liquor, everything becomes fun.

[12:49:02.0000] <TabAtkins>
erlehmann: I have no idea.

[12:49:03.0000] <finnala>
What's it called again.. I've only ever seen it in Germany

[12:49:04.0000] <erlehmann>
the former can bind a graph to DOM data, the latter can do fancy vis stuff with zooming.

[12:49:05.0000] <TabAtkins>
I'm just annoyed that the physics keeps making nodes drift into non-planar configurations.

[12:49:06.0000] <erlehmann>
finnala, „kleiner feigling“ ?

[12:50:00.0000] <finnala>
Yes. That is the stuff

[12:50:01.0000] <erlehmann>
TabAtkins, the algorithm is crap.

[12:50:02.0000] <annevk>
Hixie: no, nobody was using that feature

[12:50:03.0000] <Hixie>
k

[12:50:04.0000] <TabAtkins>
So, on actual web stuff for a moment.  In http://lists.w3.org/Archives/Public/public-webapps/2011OctDec/1038.html Boris talks about barewords in on* attributes.  Can someone elaborate why this is a problem?

[12:50:05.0000] <annevk>
Hixie: in practice most changes affect all implementors, too

[12:51:00.0000] <erlehmann>
barewords?

[12:51:01.0000] <Hixie>
annevk: well, "wgoi" always come together, yes

[12:51:02.0000] <Hixie>
annevk: but those are often separate from "a", "c", and "t"

[12:51:03.0000] <annevk>
TabAtkins: say the page has a global variable called "findAll"

[12:51:04.0000] <annevk>
TabAtkins: if you then use findAll in an event listener that is a reference to that global variable

[12:52:00.0000] <annevk>
TabAtkins: but if you define a method called findAll on the same object as that event listener is on, that will be found first and you no longer get back what you expect (the global variable)

[12:52:01.0000] <erlehmann>
annevk, what is this silkapp supposed to do? i can't figure it out

[12:52:02.0000] <annevk>
erlehmann: it's effectively an annotated wikipedia setup

[12:53:00.0000] <TabAtkins>
annevk: Why is that an issue in this case, then?  The method in question would only be defined on Element, not on window.

[12:53:01.0000] <annevk>
erlehmann: and then you browse by those annotations you made

[12:53:02.0000] <annevk>
erlehmann: sort of the semantic web idea

[12:53:03.0000] <annevk>
erlehmann: but in practice instead of fairy land

[12:53:04.0000] <erlehmann>
jgraham, regarding more challenging targets, i am making music using a stack machine. using postfix notation http://daten.dieweltistgarnichtso.net/video/glitched.ogv

[12:53:05.0000] <erlehmann>
annevk, semantic web as in „usable across domains“ ?

[12:53:06.0000] <annevk>
TabAtkins: because the way variable look up works

[12:54:00.0000] <erlehmann>
that is karplus-strong string synthesis

[12:54:01.0000] <erlehmann>
there

[12:54:02.0000] <annevk>
TabAtkins: you start with the element

[12:54:03.0000] <TabAtkins>
Oh, I see.  Because it's defined on element, a bare "find()" call would use the element's .find method.

[12:54:04.0000] <annevk>
TabAtkins: see lexical scope definitions for event handler attributes

[12:54:05.0000] <Hixie>
i wonder what exactly nessy intended to imply with http://lists.w3.org/Archives/Public/public-texttracks/2011Nov/att-0017/webvtt.html#snippets

[12:54:06.0000] <TabAtkins>
Man, that's weird.

[12:54:07.0000] <Hixie>
am i supposed to remove those attributes from HTML altogether?

[12:54:08.0000] <Hixie>
duplicate the text?

[12:54:09.0000] <erlehmann>
annevk, everything having “closed beta” and secret APIs is suspicious to me

[12:54:10.0000] <annevk>
TabAtkins: yeah, welcome to '95?

[12:55:00.0000] <TabAtkins>
annevk: ;_;

[12:55:01.0000] <annevk>
erlehmann: fair enough, it's pretty neat though

[12:55:02.0000] <finnala>
So, is there some way to start at 95, because all of this is pretty confusing for me

[12:55:03.0000] <finnala>
;)

[12:56:00.0000] <Hixie>
will have to poke at it after lunch

[12:56:01.0000] <Hixie>
bbiab

[12:56:02.0000] <annevk>
finnala: around when I started someone made http://htmldog.com/

[12:56:03.0000] <annevk>
finnala: it seems to be still around and quite useful

[12:56:04.0000] <zewt>
sometimes adding features to the web is like building a house on a foundation made of icy pebbles laid on treadmills

[12:57:00.0000] <erlehmann>
annevk, i'll check back when it works. “works” implying that i can use it without registering much. like wikipedia. or 4chan.

[12:57:01.0000] <finnala>
Thanks. I know most of the stuff on htmldog though. I hope at least :)

[12:57:02.0000] <annevk>
finnala: if you're beyond that level, reading the specifications, history posts from hsivonen, others, ...

[12:57:03.0000] <TabAtkins>
annevk: htmldog is still one of the better references on the web.

[12:57:04.0000] <erlehmann>
htmldog, first thought “if you do not remove that feature, i'll shoot this dog”

[12:57:05.0000] <erlehmann>
with annevk holding the gun

[12:57:06.0000] <erlehmann>
:D

[12:58:00.0000] <TabAtkins>
I learned a lot from that site when first learning webdev.

[12:58:01.0000] <zewt>
who gets to be the dog

[12:58:02.0000] <finnala>
Yeah that's what I'm doing. It felt like the difficulty level suddenly increased with DOM/Javascript.

[12:58:03.0000] <annevk>
erlehmann: oh god

[12:58:04.0000] <annevk>
:)

[12:58:05.0000] <erlehmann>
annevk, seriously.

[12:58:06.0000] <erlehmann>
then i clicked the link.

[12:58:07.0000] <annevk>
finnala: ah yeah, getting a grasp of what is defined in http://dvcs.w3.org/hg/domcore/raw-file/tip/Overview.html might help

[12:59:00.0000] <finnala>
Thanks. That might indeed help.

[12:59:01.0000] <annevk>
abarth: nice going on getting document.width/document.height removed

[12:59:02.0000] <abarth>
thanks for filing the bug

[12:59:03.0000] <abarth>
hopefully the change will stick

[12:59:04.0000] <erlehmann>
we need an annevk motivational poster

[12:59:05.0000] <annevk>
finnala: I learned most of the DOM when I started at Opera in not too much time

[12:59:06.0000] <erlehmann>
showing that it is possible to kill features for good

[13:00:00.0000] <annevk>
finnala: just write some script, see what it does, and see if it matches your expectations based on the spec

[13:00:01.0000] <annevk>
finnala: or whatever works best for you

[13:00:02.0000] <finnala>
That works well for me.

[13:00:03.0000] <finnala>
Thanks.

[13:00:04.0000] <zewt>
learning the DOM (vs. "knowing all of the historical quirks") is no harder than any other API

[13:00:05.0000] <erlehmann>
zewt, i wish to dispute that

[13:01:00.0000] <erlehmann>
but on a subtle point

[13:01:01.0000] <annevk>
zewt: maybe that's true, but the DOM is what you end up working with a lot, so it's useful to know

[13:01:02.0000] <annevk>
zewt: mostly being able to read IDL is important if you want to read specs

[13:01:03.0000] <erlehmann>
how hard it is is mostly not a function of how complicated something is, but how good the documentation is

[13:01:04.0000] <zewt>
sure, but i mean it's not a huge endeavor (at least for an experienced developer)

[13:01:05.0000] <finnala>
If you can build stuff using DOM, does that mean you could theoretically build websites without HTML?

[13:02:00.0000] <erlehmann>
DOM is complicated, but documentation is extensive.

[13:02:01.0000] <finnala>
Or XHTML for that matter

[13:02:02.0000] <annevk>
zewt: guess you got me there :)

[13:02:03.0000] <finnala>
I guess, it's kind of a silly question.

[13:02:04.0000] <zewt>
finnala: some ajax-y pages are sort of like that

[13:02:05.0000] <zewt>
well

[13:02:06.0000] <erlehmann>
finnala, having a bare-bones thingy call a script, filling content into the page. let's not go there.

[13:02:07.0000] <zewt>
not ajax per se, but heavily scripted sites

[13:02:08.0000] <erlehmann>
this as a bad thing, even when google and twitter do it.

[13:02:09.0000] <zewt>
but using html at some level is usually helpful

[13:03:00.0000] <erlehmann>
it breaks fundamental assumptions about the web.

[13:03:01.0000] <annevk>
finnala: there's usually some HTML in play to bootstrap things and using HTML is better for search engines and such

[13:03:02.0000] <zewt>
erlehmann: depending on what i'm doing, i don't mind breaking someone's assumptions if they're wrong assumptions :)

[13:03:03.0000] <finnala>
Oh make no mistake, I like it at HTML. HTML is homely and something I feel I understand pretty well.

[13:03:04.0000] <zewt>
but again, depending entirely on the application

[13:04:00.0000] <erlehmann>
zewt, i mean of the “200 means there is content” and “404 means this link is dead” type.

[13:04:01.0000] <annevk>
finnala: http://software.hixie.ch/utilities/js/live-dom-viewer/ might also help with getting an understanding of the DOM

[13:04:02.0000] <erlehmann>
i wrote a link checker lately to weed out deadlinks. turned out there are some stupid webservers returning errors for HEAD.

[13:04:03.0000] <erlehmann>
or returning 404, then delivering the content anyway.

[13:04:04.0000] <finnala>
Thanks annevk, I'll try to use that.

[13:05:00.0000] <erlehmann>
no case was special enough to break those rules. i'll just not link there then.

[13:05:01.0000] <finnala>
This seems to complement HTML pretty well.

[13:06:00.0000] <erlehmann>
their loss. but my frustration when trying to find out what was wrong.

[13:06:01.0000] <erlehmann>
developers lie.

[13:06:02.0000] <zewt>
more like bugs happen :)

[13:06:03.0000] <erlehmann>
finnala, try using firebug or the chrome dev tools or opera dragonfly.

[13:06:04.0000] <zewt>
especially in things like HEAD, which are relatively less used, easier for bugs to go unnoticed

[13:07:00.0000] <finnala>
I'm using dragonfly. Mostly for CSS/ID stuff, up til now though

[13:07:01.0000] <erlehmann>
zewt, returning 404 and then the content in a wordpress blog is a special class of bug. it is wrong in a kind of wrong way.

[13:07:02.0000] <erlehmann>
you are not supposed to be able to do that.

[13:07:03.0000] <zewt>
that's a dumb bug for a developer, but an easy bug for an author to miss

[13:08:00.0000] <finnala>
Oh dear, next will be to understand HTTP too I guess.

[13:08:01.0000] <zewt>
i'd imagine testing in IE would notice that--does IE9 still hide 404 content and replace it with a generic page?

[13:08:02.0000] <erlehmann>
finnala, HTTP is pretty easy. i recommend you write your own web server and test it.

[13:08:03.0000] <annevk>
there might be legitimate reasons to return 404 and still return content

[13:08:04.0000] <erlehmann>
zewt, ha. thats funny.

[13:08:05.0000] <zewt>
how so? heh

[13:08:06.0000] <annevk>
you don't want the URL indexed, but you know what content the user is looking for

[13:08:07.0000] <Ms2ger>
Helpful 404 pages?

[13:09:00.0000] <annevk>
but I think WordPress typically uses a redirect

[13:09:01.0000] <annevk>
for that

[13:09:02.0000] <Ms2ger>
Those are all over

[13:09:03.0000] <erlehmann>
the point i do not get is that it takes more code to set the headers wrong than to leave them alone.

[13:09:04.0000] <Ms2ger>
http://www.mozilla.org/en-US/foo

[13:09:05.0000] <erlehmann>
annevk, you could also use robots.txt

[13:09:06.0000] <finnala>
That kind of 404 is very usual

[13:10:00.0000] <finnala>
I guess I'll try to write a web server. Not on my netbook though.

[13:10:01.0000] <erlehmann>
lying breaks infrastructure. people who lie about status codes also return “well, yes this domain does exist. in fact, it points to a friendly t-mobile search page”

[13:10:02.0000] <finnala>
I can't wait to get my paycheck.

[13:10:03.0000] <zewt>
bleh, why does FF still not support rel=noreferrer

[13:10:04.0000] <erlehmann>
finnala, it is really easy. you'll admire the simplicity of HTTP if you get it done.

[13:11:00.0000] <zewt>
http is simple for simple cases, but it's one of those things that's a bit nitty to get right in the wild

[13:11:01.0000] <zewt>
largely for working around buggy clients, heh

[13:12:00.0000] <erlehmann>
zewt, buggy clients like chrome, telling it wants gzipped content it cannot handle. that was a nasty thing.

[13:12:01.0000] <erlehmann>
out of all browsers …

[13:12:02.0000] <erlehmann>
if it were IE or safari, i would have understood :(

[13:12:03.0000] <erlehmann>
finnala, this is helpful http://redbot.org/

[13:12:04.0000] <zewt>
gzip, or deflate?

[13:13:00.0000] <zewt>
breaking gzip is lame; breaking deflate would be *bad*

[13:13:01.0000] <hober>
hey

[13:13:02.0000] <finnala>
If only I was a developer

[13:13:03.0000] <finnala>
I'm actually a law student

[13:13:04.0000] <finnala>
Hey there hober

[13:13:05.0000] <finnala>
I guess that's what free time is for

[13:13:06.0000] <smaug____>
zewt: ah, good that you reminded... the patch to support noreferrer got review- from me... I should ask someone to update the patch

[13:13:07.0000] <erlehmann>
finnala, http://redbot.org/?uri=http%3A%2F%2Fblog.fefe.de

[13:14:00.0000] <finnala>
Redbot? Even more shady German stuff? ;)

[13:14:01.0000] <erlehmann>
finnala, this is a legit HTTP server diagnosis tool.

[13:14:02.0000] <erlehmann>
no red light distrcict service bot, or whatever you assumed :3c

[13:14:03.0000] <finnala>
Oh nice. I can try that on my own blog too.

[13:15:00.0000] <finnala>
So I can also add user agents too.

[13:15:01.0000] <erlehmann>
zewt, i cannot remember good enough, but i thought it was gzip. specifically media files that chrome refused to play.

[13:15:02.0000] <Ms2ger>
Also, people who want EventTarget.on probably should think about compat for window.on

[13:16:00.0000] <finnala>
Thanks erlehmann, this looks pretty userful.

[13:16:01.0000] <erlehmann>
userful.

[13:16:02.0000] <erlehmann>
ha

[13:16:03.0000] <finnala>
hahaha

[13:16:04.0000] <finnala>
Typos.

[13:16:05.0000] <Yuhong>
An actual security vulnerability caused by interleaving appendChild of base element with document.write:

[13:16:06.0000] <Yuhong>
https://bugzilla.mozilla.org/show_bug.cgi?id=607222

[13:17:00.0000] <zewt>
"userful" that sounds like an oblique insult

[13:18:00.0000] <finnala>
With this I can finally get my content negotiation working

[13:18:01.0000] <Yuhong>
While HTML was invented in 1991, document.write was invented in year 1996, and W3C DOM Level 1 became Recommendation in 1998 and first implemented in 1999.

[13:18:02.0000] <finnala>
Userful indeed.

[13:18:03.0000] <smaug____>
Ms2ger: yeah

[13:18:04.0000] <zewt>
rec before the first implementation? heh

[13:18:05.0000] <Ms2ger>
Oh look, it's Yuhong again

[13:18:06.0000] <smaug____>
I'm pretty sure there are variables or functions named 'on'

[13:19:00.0000] <Yuhong>
zewt: Actually, first implementation *released* in 1999. It was IE5.

[13:20:00.0000] <Yuhong>
Netscape 5 "Mariner" would have implemented it too if it wasn't cancelled in late 1998.

[13:21:00.0000] <Yuhong>
Just to get the idea of the history, and note that none of them had any specified error handling.

[13:23:00.0000] <finnala>
Hmmm. Opera used to send MSIE in the user agent string?

[13:25:00.0000] <Yuhong>
Yea, I know. By the time Netscape 6 was released in 2000, MSIE was already becoming dominant and it was too late.

[13:25:01.0000] <finnala>
22:21 < Ms2ger> Oh look, it's Yuhong again

[13:25:02.0000] <erlehmann>
TabAtkins, why is the parent selector not “<” ?

[13:25:03.0000] <finnala>
whoops sorry

[13:26:00.0000] <TabAtkins>
erlehmann: What do you mean?  There is no parent combinator.

[13:26:01.0000] <Yuhong>
http://www.google.com/url?sa=t&rct=j&q=&esrc=s&source=web&cd=1&ved=0CBwQFjAA&url=http%3A%2F%2Fwww.mozillazine.org%2Ftalkback.html%3Farticle%3D1708&ei=f8LKTqnGN-ihiQLppJnMCw&usg=AFQjCNGQU0fG-3MvSFWRNwIMn7O4cEkSkQ

[13:26:02.0000] <Yuhong>
Correct URL: http://www.mozillazine.org/talkback.html?article=1708

[13:27:00.0000] <finnala>
Uncool

[13:27:01.0000] <erlehmann>
TabAtkins, won't CSS4 have a parent selector?

[13:27:02.0000] <TabAtkins>
erlehmann: No, it has a subject indicator.

[13:27:03.0000] <erlehmann>
oui?

[13:27:04.0000] <TabAtkins>
And it's not CSS4, it's Selectors 4.

[13:28:00.0000] <TabAtkins>
http://dev.w3.org/csswg/selectors4/#subject

[13:28:01.0000] <finnala>
Hmm

[13:28:02.0000] <TabAtkins>
Something like this, if we can swing it from a performance standpoint.

[13:28:03.0000] <erlehmann>
ah, modules

[13:28:04.0000] <TabAtkins>
erlehmann: Also, Selectors isn't actually part of CSS.  We just started it.

[13:28:05.0000] <erlehmann>
TabAtkins, i see. it moves the targeted element around in the selector.

[13:29:00.0000] <TabAtkins>
erlehmann: Yes.

[13:29:01.0000] <erlehmann>
that might even be more useful.

[13:29:02.0000] <finnala>
What is selectors part of then?

[13:29:03.0000] <TabAtkins>
finnala: The web.

[13:29:04.0000] <Yuhong>
I wonder if eventually HTML6/CSS4 will be the new buzzword.

[13:29:05.0000] <TabAtkins>
Web Selectors 1.0

[13:29:06.0000] <finnala>
That's kind of non-commital.

[13:29:07.0000] <hober>
finnala: while selectors are defined by the css wg, they'

[13:30:00.0000] <hober>
re not part of css

[13:30:01.0000] <finnala>
But they will be used mainly in CSS?

[13:30:02.0000] <TabAtkins>
finnala: That's the point.  ^_^  It's tech-neutral.  Anything with a tree structure with nodes that can be mapped to a {name, id, classes, attributes} tuple works with Selectors.

[13:30:03.0000] <hober>
they get used in other specs in other wgs, e.g. querySelector and friend in webapps

[13:30:04.0000] <annevk>
finnala: CSS is not part of HTML, but HTML does use it

[13:30:05.0000] <annevk>
finnala: Selectors is not part of CSS, but CSS does use it

[13:30:06.0000] <Philip`>
Yuhong: The point of buzzwords is to be new and unique and flashy - it'd be no good having "HTML6" after "HTML5" since they're too similar

[13:30:07.0000] <finnala>
I guess that sort of makes sense

[13:31:00.0000] <erlehmann>
TabAtkins, if it is web selectors 1.0 now, in two years it must be CSS5 (used as a buzzword, also encompassing several javascript enhancements)!

[13:31:01.0000] <finnala>
I hate marketing

[13:31:02.0000] <TabAtkins>
erlehmann: That's the plan!

[13:31:03.0000] <Philip`>
(and historically it's gone like DHTML, XHTML, AJAX, Web 2.0, HTML5)

[13:31:04.0000] <erlehmann>
Philip`, well, one can still have Adobe HTML5 CS2

[13:31:05.0000] <finnala>
HTML5 has so little to do with HTML, I can kind of understand why you're moving towards "non-commital" groups

[13:31:06.0000] <erlehmann>
(it will come, i tell you)

[13:32:00.0000] <finnala>
Well. HTML5 has everything to do with HMTL

[13:32:01.0000] <finnala>
But you understand what I mean.

[13:32:02.0000] <Yuhong>
 Another favorite is "standard-compliance".

[13:33:00.0000] <Yuhong>
Once Netscape 4 was despised as being non "standard-compliant".

[13:33:01.0000] <Yuhong>
Now people are saying the same at IE6 years after it was released.

[13:33:02.0000] <erlehmann>
TabAtkins, selectors being able to target elements in the past and future makes me all wiggly. MADNESS. thanks for the linw.

[13:33:03.0000] <erlehmann>
link

[13:33:04.0000] <TabAtkins>
erlehmann: We just stole that from WebVTT and made the langauge a bit more neutral.

[13:33:05.0000] <finnala>
IE6 was actually pretty cool when it was released. Eh, browses the net and doesn't afraid of anything

[13:34:00.0000] <erlehmann>
Yuhong, it was not standards compliant when it was released as well.

[13:34:01.0000] <erlehmann>
finnala should try elinks.

[13:34:02.0000] <finnala>
I have tried Links.

[13:35:00.0000] <finnala>
if it's like links I think I'll stick to Opera.

[13:35:01.0000] <erlehmann>
elinks has not been updated much since 2009. i sent a patch to the mailing list for audio and video elements and they found out that the spam filter ate all messages.

[13:35:02.0000] <finnala>
Hahaha

[13:35:03.0000] <erlehmann>
but no one was irritated by this, because the project did not have many contributions.

[13:35:04.0000] <finnala>
Wait, will they add video to elinks?

[13:35:05.0000] <TabAtkins>
Hopefully ascii video!

[13:35:06.0000] <finnala>
Awesome.

[13:36:00.0000] <TabAtkins>
http://www.xanthir.com/demos/video/demo3.html

[13:36:01.0000] <finnala>
There's something in mplayer that makes it possible to watch through a console

[13:36:02.0000] <erlehmann>
finnala, i have something for you http://blog.dieweltistgarnichtso.net/html5-media-elements-in-elinks

[13:36:03.0000] <Yuhong>
Anyone remember this: http://archive.webstandards.org/ie55.txt

[13:36:04.0000] <erlehmann>
that's my blog. at that time i did not know that git existed.

[13:36:05.0000] <hober>
w3m > elinks

[13:37:00.0000] <finnala>
Haha that's beautiful

[13:37:01.0000] <erlehmann>
TabAtkins, elinks starts vlc-nox or mplayer automagically in console, if i so desire. eh is a pretty cool browser and i actually use it sometimes for browsing feeds.

[13:37:02.0000] <finnala>
I think I read something about the way RMS read the interenet

[13:38:00.0000] <finnala>
wgeting pages and then reading them later in a text browser

[13:38:01.0000] <finnala>
or something

[13:38:02.0000] <TabAtkins>
This is accurate.  He has a script running on his box.  He sends it requests, it emails him pages.

[13:38:03.0000] <TabAtkins>
Which he, of course, reads in emacs.

[13:38:04.0000] <finnala>
This blows my mind.

[13:39:00.0000] <erlehmann>
maybe it is an efficient use of his time.

[13:39:01.0000] <zewt>
the end-game of NIH

[13:39:02.0000] <Phrogz>
heh

[13:39:03.0000] <erlehmann>
zewt, ?

[13:39:04.0000] <erlehmann>
emacs has a web browser. multiple, probably.

[13:39:05.0000] <hober>
emacs-w3m is the most usable. w3 is a mess.

[13:40:00.0000] <hober>
there are a couple of other ones iirc

[13:40:01.0000] <finnala>
I seriously can't fathom why you would want to.

[13:41:00.0000] <hober>
/me uses emacs-w3m for rendering html email in gnus

[13:41:01.0000] <Yuhong>
emacs-w3 was one of the first browsers to implement the CSS1 draft back in 1995.

[13:41:02.0000] <Ms2ger>
Oh, I thought you were saying the W3C is a mess

[13:41:03.0000] <hober>
Yuhong: and w3 + emacspeak is one of the only implementations of aural stylesheets (may they rip)

[13:42:00.0000] <Yuhong>
FYI: http://www.reddit.com/r/web_design/comments/exnr8/on_netscape_and_css_history_heres_the_history/

[13:43:00.0000] <Yuhong>
Remember the Netscape monopoly back in year 1995?

[13:43:01.0000] <finnala>
Barely

[13:43:02.0000] <finnala>
Back then we lived in BFN, so I only remember internet cafes and the like.

[13:43:03.0000] <finnala>
They all had netscape though.

[13:44:00.0000] <Yuhong>
HTML 3.0? What was the first browsers pre-NN4/IE4 that supported PNG?

[13:47:00.0000] <finnala>
Lovely

[13:50:00.0000] <Yuhong>
And BTW, how many clients are able to tell the difference between HTML5, CSS3, and AJAX just by looking at the page?

[13:50:01.0000] <finnala>
CSS and AJAX has some uses where the output will look exactly the same.

[13:50:02.0000] <finnala>
Or rendering, or whatever you want to call it

[13:52:00.0000] <gsnedders>
Yuhong: HTML 3.0 never had any support from browser venders.

[13:52:01.0000] <Yuhong>
gsnedders: You never heard of Arena, emacs-w3, Viola, etc?

[13:53:00.0000] <gsnedders>
Yuhong: Well, of any browser with much in the way of marketshare

[13:53:01.0000] <Yuhong>
gsnedders: Thus why I mention the Netscape monopoly.

[13:54:00.0000] <erlehmann>
TabAtkins, what do you think about Google+? I mean, as a web standards guy. Are they failing as hard as I portrait it?

[13:54:01.0000] <TabAtkins>
erlehmann: I try not to think about Google's products from a standards point of view.

[13:55:00.0000] <erlehmann>
TabAtkins, why not?

[13:55:01.0000] <TabAtkins>
Because it keeps me from being disappointed, usually.

[13:55:02.0000] <gsnedders>
Touché.

[13:55:03.0000] <erlehmann>
I see what you did there.

[13:56:00.0000] <jgraham>
TabAtkins: (selectors may not be CSS specific but the CSSWG more or less controls them and all the decisions related to e.g perf. are based on CSS as the primary use case)

[13:56:01.0000] <TabAtkins>
jgraham: Indeed.

[13:56:02.0000] <Yuhong>
It was IE3 breaking the Netscape monopoly that bought CSS1 into attention.

[13:59:00.0000] <timeless>
zewt: fwiw, i sort of poked someone about the animated thing, maybe it'll go somewhere

[13:59:01.0000] <timeless>
if it doesn't, you can poke dao@moznet about it

[14:06:00.0000] <Yuhong>
finnala: Can you say fundamentally flawed?

[14:06:01.0000] <finnala>
Wait what did I do now?

[14:07:00.0000] <Yuhong>
finnala: I am talking about the buzzwords.

[14:07:01.0000] <finnala>
Oh right.

[14:07:02.0000] <finnala>
Buzzwords will be buzzwords.

[14:08:00.0000] <finnala>
As long as the people who matter keep a fair grisp on what is what I'll be satisfied.

[14:08:01.0000] <finnala>
It does hurt a bit when someone is talking about HTML5s "border radius" an such though. It's as if they should actually know better

[14:09:00.0000] <Yuhong>
finnala: And how you mention "CSS and AJAX has some uses where the output will look exactly the same".

[14:10:00.0000] <finnala>
Well, it's a fact.

[14:10:01.0000] <finnala>
Or am I completely misinterpreting.

[14:11:00.0000] <Yuhong>
finnala: I mean that is the fundamental flaw behind the buzzwords.

[14:11:01.0000] <finnala>
Yuhong: Yeah well, I agree with that.

[14:11:02.0000] <finnala>
You can't really use them to describe anything in specifics

[14:12:00.0000] <finnala>
Especially with CSS transitions and JQuery in the picture.

[14:13:00.0000] <Yuhong>
finnala: In other words, sucking up to non-technical management.

[14:14:00.0000] <finnala>
Yuhong: That's what most of use are paid to do. :\

[14:15:00.0000] <Yuhong>
finnala: What would be better terms for them?

[14:15:01.0000] <Hixie>
nessy: yt?

[14:16:00.0000] <Yuhong>
finnala: http://news.ycombinator.com/item?id=3259400

[14:16:01.0000] <finnala>
Yuhong: I don't really think it is a worthwile pursuit

[14:16:02.0000] <finnala>
managers will call "new stuff" whatever they wall to call it.

[14:16:03.0000] <Hixie>
nessy: are the sections in http://lists.w3.org/Archives/Public/public-texttracks/2011Nov/att-0017/webvtt.html#snippets intended to be removed from HTML or duplicated in WebVTT or both? or something else? I don't really understand.

[14:16:04.0000] <finnala>
want to* call it

[14:17:00.0000] <finnala>
Interesting that that guy mentions legal code.

[14:20:00.0000] <finnala>
No I think we have a pretty good setup already, with HTML, CSS, JavaScript, etc. There shouldn't really be any ambiguity.

[14:20:01.0000] <finnala>
From my POV, anyway.

[14:21:00.0000] <finnala>
Yet again there, is, but that is to be chalked up to marketing.

[14:23:00.0000] <Yuhong>
"HTML5" vs Flash, for example.

[14:23:01.0000] <timeless>
finnala: yeah, i'm quite happy w/ /. for headline news

[14:24:00.0000] <Yuhong>
Canvas was for example invented back in 2005 or so.

[14:24:01.0000] <benjoffe>
is there a good blog post or something which explains that css3 and all that jazz isn't part of html5? And how it's mostly just more semantics/parsing rules with a couple of extra apis?

[14:25:00.0000] <finnala>
Yuhong: Interesting you should mention that. I was googling for opinions on that some days ago, the consensus seemed to think that calling CSS3/new ECMAscript and so on HTML5 was a good idea

[14:25:01.0000] <finnala>
I can't say I agree, but I left my search pretty early

[14:25:02.0000] <gsnedders>
Yuhong: Canvas first shipped in Mac OS 10.4, which was first public in 2004.

[14:25:03.0000] <finnala>
consensus seemed to be*

[14:26:00.0000] <Yuhong>
10.4 was released in 2005 actually.

[14:26:01.0000] <gsnedders>
Well, canvas was public after the first developer preview in 2004, was what I meant

[14:27:00.0000] <Yuhong>
I know, I remember reading about it, and how Hixie had to reverse engineer it to put it into what became HTML5.

[14:28:00.0000] <Philip`>
finnala: I think the WHATWG sort-of-consensus was that it's impossible to fight against abuse of the term "HTML5", so the HTML5 spec got renamed to "HTML" and we don't have to worry about the overloaded HTML5 term any more

[14:28:01.0000] <finnala>
[23:29] [finnala(+i)] [2:freenode/#whatwg(+cnt)]

[14:28:02.0000] <finnala>
What am I doin...

[14:28:03.0000] <finnala>
Sorry

[14:28:04.0000] <finnala>
Yeah Philip` , I also noticed that

[14:28:05.0000] <finnala>
After thinking about it for a while I welcome the move

[14:29:00.0000] <Philip`>
Anybody still talking about "HTML5" is either using the marketing buzzword term, or still believes in the W3C :-)

[14:30:00.0000] <Yuhong>
I think the main reason is to make it a living standard, so there would be actually no "HTML6".

[14:30:01.0000] <finnala>
And I was looking forward to HTML16.

[14:30:02.0000] <Yuhong>
At least at the WHATWG.

[14:31:00.0000] <finnala>
Oh dear. Let's not hope for even more competing HTML specs.

[14:32:00.0000] <Philip`>
We don't want to get confused with http://html6.by.ru/

[14:33:00.0000] <finnala>
http://adactio.com/journal/1684/

[14:33:01.0000] <finnala>
That's a blogpost about this. I guess

[14:33:02.0000] <finnala>
Philip`: WTAF is that?

[14:34:00.0000] <Yuhong>
Submitted, BTW: http://news.ycombinator.com/item?id=3263062

[14:34:01.0000] <Yuhong>
http://www.reddit.com/r/web_design/comments/mknru/css_and_ajax_has_some_uses_where_the_output_will/

[14:35:00.0000] <Philip`>
/me has no idea what Yuhong is trying to say

[14:35:01.0000] <finnala>
I'm kind of confused, myself. Sorry. I'm kind of new to this place.

[14:37:00.0000] <Yuhong>
finnala: I would have suggested in 2004 to create a new version of XHTML that *is* backward-compatible unlike XHTML2.

[14:37:01.0000] <finnala>
Isn't that what XHTML5 is all about?

[14:38:00.0000] <Yuhong>
finnala: Yes. I am talking about the creation of the WHATWG and what could have done instead.

[14:38:01.0000] <Yuhong>
finnala: Yes. I am talking about the creation of the WHATWG and what could have been done instead.

[14:38:02.0000] <finnala>
Oh, right.

[14:40:00.0000] <Yuhong>
finnala: And push for an HTML version later in the process.

[14:40:01.0000] <finnala>
No sense in crying over spilt milk, I would say

[14:40:02.0000] <finnala>
I for one think HTML5 must have saved XHTML.

[14:40:03.0000] <finnala>
I quite like where we're positioned right now

[14:41:00.0000] <Philip`>
finnala: No need to apologise - Yuhong confuses me and I've been here for ages :-p

[14:41:01.0000] <Yuhong>
finnala: And it happens, IE9 finally supports true XHTML.

[14:42:00.0000] <Yuhong>
finnala: Unfortunately, it will take years for IE8 to die, which also affects most HTML5/CSS3 features.

[14:42:01.0000] <jgraham>
/me is also confused. But that's normal

[14:42:02.0000] <finnala>
Hmm, well, the web is evolving faster and faster though

[14:42:03.0000] <finnala>
And IE8 is currently receding in stats, isn't it?

[14:44:00.0000] <finnala>
I say give it til the end of 2012, and IE8 and less will be around 5-10% of the net

[14:44:01.0000] <Yuhong>
finnala: I know, the death of XP.

[14:46:00.0000] <finnala>
Hmm, I wonder what happens if we extrapolate the stats from w3schools

[14:46:01.0000] <timeless>
Yuhong: ie8 isn't going to have too long of a shelf life

[14:46:02.0000] <Yuhong>
finnala: Though of course right now there are some Vista/7 users who has to stick for IE8 for corporate webapp compatibility, but I expect that to die too of course.

[14:47:00.0000] <timeless>
/me thinks ie7 is basically dead

[14:47:01.0000] <finnala>
I mean, that should give a decent pinpointer of when IE8 usage will be low on technical-heavy sites

[14:47:02.0000] <timeless>
MS will use Sharepoint to kill old versions of IE

[14:47:03.0000] <timeless>
just as it used SharePoint to kill IE6

[14:47:04.0000] <finnala>
Hmm.

[14:47:05.0000] <finnala>
Actually I was writing something up about this exact thing some while ago.

[14:48:00.0000] <finnala>
Seen from the point of XHTML, anyway, for a novice web author.

[14:50:00.0000] <timeless>
http://web.archive.org/web/20100209025506/http://blogs.msdn.com/sharepoint/archive/2009/05/07/announcing-sharepoint-server-2010-preliminary-system-requirements.aspx

[14:50:01.0000] <Yuhong>
I wrote something up too: http://www.reddit.com/r/web_design/comments/ese39/how_ie_damaged_xhtml_adoption/

[14:50:02.0000] <finnala>
I'm quite new to web shenanigans, to be honest. But I try to think of interesting stuff.

[14:51:00.0000] <Hixie>
/me ponders how to set up a system so people can subscribe to changes to parts of the spec

[14:52:00.0000] <finnala>
http://aurbakken.name/articles/2011/11/12/the-impossible-xhtml

[14:52:01.0000] <finnala>
This is what I wrote. :)

[14:52:02.0000] <Hixie>
i fancy a system based on the lines of the source file would be best

[14:52:03.0000] <TabAtkins>
Hixie: Except that lines drift over time, no?

[14:52:04.0000] <finnala>
I guess looking back, it's kind of naive, but that's the beauty of it

[14:52:05.0000] <Hixie>
maybe exposing those line numbers up to the html or something

[14:52:06.0000] <jgraham>
Hixie: I thought about this once and I think foolip has too

[14:52:07.0000] <Hixie>
TabAtkins: yeah, but a script could keep track of those based on the diffs

[14:52:08.0000] <jgraham>
Hixie: I would just make it per-section

[14:52:09.0000] <jgraham>
I would *prefer* per-section

[14:53:00.0000] <Hixie>
per-section is harder as it requires some manner of determining the sections

[14:53:01.0000] <Hixie>
but i'm certainly open to that too

[14:53:02.0000] <finnala>
Per section makes more sense to me.

[14:54:00.0000] <finnala>
If the changes are small they could be marked like they are on Wikipedia, maybe?

[14:54:01.0000] <TabAtkins>
Hixie: Sections are just the nearest heading of the right level.

[14:54:02.0000] <Hixie>
another option is to have the spec source annotated with different topics

[14:54:03.0000] <Hixie>
TabAtkins: that assuems the ability to parse html

[14:54:04.0000] <mkanat>
Hixie: Or you could split the sections into files in the source tree.

[14:54:05.0000] <timeless>
Hixie: sections definitely comes to mind

[14:54:06.0000] <mkanat>
Hixie: And combine them at render or build time.

[14:55:00.0000] <Hixie>
mkanat: i want the source file to be a single file, for convenience when editing

[14:55:01.0000] <mkanat>
/me nods.

[14:55:02.0000] <timeless>
Hixie: what, you don't have hsivonen 's java parser handy?

[14:55:03.0000] <timeless>
to validate that your html works :)

[14:55:04.0000] <jgraham>
Hixie: The spec generation already depends on the ability to parse HTML

[14:56:00.0000] <Hixie>
timeless: i do run the validator every time i edit the spec, actually, but every time it tells me it has an I/O error due to the file size, so i'd rather not rely on that

[14:56:01.0000] <jgraham>
So that doesn't seem like a big isue

[14:56:02.0000] <timeless>
lol

[14:56:03.0000] <jgraham>
*issue

[14:56:04.0000] <timeless>
is there a bug filed for that?

[14:56:05.0000] <Hixie>
jgraham: true, though i've managed to outsource all the parsing out :-)

[14:56:06.0000] <Hixie>
timeless: it's an artificial limit, hsivonen increases it occasionally

[14:56:07.0000] <timeless>
does he know it needs to be bumped again?

[14:56:08.0000] <Hixie>
timeless: i'm planning on removing the webrtc section which i expect will fix it, so i haven't filed a bug

[14:57:00.0000] <timeless>
well, is there harm in outsourcing the email/tagging to the people already running the parsers?

[14:57:01.0000] <Hixie>
timeless: none, but nobody has done it

[14:57:02.0000] <Yuhong>
BTW, what would be useful for fixing XSS attacks etc is to report XML parse errors to a server.

[14:57:03.0000] <Hixie>
anyway, i'm thinking that even better than sections, which change somewhat frequently, might be to annotate the spec with topics to which one could subscribe

[14:57:04.0000] <timeless>
Hixie: class :)

[14:57:05.0000] <timeless>
class="footopic"

[14:58:00.0000] <Hixie>
or data-topic="foo"

[14:58:01.0000] <timeless>
class="footopic othertopic"

[14:58:02.0000] <Hixie>
sure

[14:58:03.0000] <timeless>
but does that actually help you?

[14:58:04.0000] <timeless>
if a topic is really a <h1>

[14:58:05.0000] <Ms2ger>
It can be done in emacs

[14:58:06.0000] <Ms2ger>
Does that count as "help"?

[14:58:07.0000] <timeless>
do you really want to have that data-topic copied to each <h> inside that <h1> ?

[14:58:08.0000] <Hixie>
i actually think it'd be easier to do this at the line level, not the HTML level, since the diffs are line-based

[14:58:09.0000] <timeless>
that would be painful

[14:58:10.0000] <Hixie>
so it'd be easier to do if i didn't have to somehow map lines to a DOM tree

[14:59:00.0000] <finnala>
MediaWiki does changes pretty swell.

[14:59:01.0000] <timeless>
that's going to make your lines incredibly verbose

[14:59:02.0000] <Hixie>
topics seem both better for the users of this system as well as for me, since i can just mention the topic each time it changes

[14:59:03.0000] <gavinc>
First we need a SKOS topic map! Then just some RDFa to link sections to a topic! ... please don't kill me ;)

[14:59:04.0000] <Hixie>
(turns out i actually already do, to some extent, for other purposes)

[14:59:05.0000] <timeless>
/me chuckles

[14:59:06.0000] <Hixie>
/me pokes at svn diff to see how easy getting line numbers will be

[15:00:00.0000] <timeless>
svn diff -U 100000 |grep -n .

[15:00:01.0000] <timeless>
or something :)

[15:00:02.0000] <Hixie>
heh

[15:00:03.0000] <Hixie>
that's another option i was considering, yes

[15:01:00.0000] <timeless>
it doesn't actually really do the right thing for line insertion/removals

[15:01:01.0000] <timeless>
depending on your definition of the right thing

[15:03:00.0000] <Yuhong>
I'd suggest a HTTP header.

[15:06:00.0000] <Hixie>
ooh, diff --line-format

[15:07:00.0000] <finnala>
You can count on there being some obscure solution to your obscure problem.

[15:08:00.0000] <finnala>
;)

[15:10:00.0000] <finnala>
In the Linux/UNIX ecosystem, anyway.

[15:19:00.0000] <Yuhong>
hsivonen: http://validator.nu/?doc=http%3A%2F%2Fwww.tesco.com%2F&parser=xmldtd&laxtype=yes

[15:19:01.0000] <Yuhong>
Notice the warnings and errors.

[15:21:00.0000] <TabAtkins>
Yuhong: Be precise, please.  hsivonen, the problem is that it's flagging *all* <a> elements with the "@shape is obsolete" error, when they're not using the attribute.

[15:23:00.0000] <Philip`>
That's because the DTD says the shape attribute is implied, I think

[15:23:01.0000] <TabAtkins>
That's silly.

[15:23:02.0000] <Philip`>
so the validator is working technically correctly

[15:23:03.0000] <timeless>
how do i find the dtd?

[15:24:00.0000] <timeless>
http://www.w3.org/TR/html/dtds.html

[15:24:01.0000] <timeless>
<!ATTLIST a

[15:24:02.0000] <timeless>
  %attrs;

[15:24:03.0000] <timeless>
  %focus;

[15:24:04.0000] <timeless>
...

[15:24:05.0000] <timeless>
  shape       %Shape;        "rect"

[15:24:06.0000] <timeless>
...

[15:24:07.0000] <timeless>
>

[15:26:00.0000] <annevk>
seems per design

[15:26:01.0000] <annevk>
supporting DTDs might be considered a misfeature I suppose

[15:27:00.0000] <timeless>
/me ponders

[15:27:01.0000] <timeless>
i'm not sure this is right

[15:31:00.0000] <timeless>
    Schema Error: Cannot find preset schema for namespace: .

[15:32:00.0000] <timeless>
/me wonders what that means

[15:33:00.0000] <Yuhong>
Also: http://validator.nu/?doc=http%3A%2F%2Fwww.tesco.com%2F&schema=http%3A%2F%2Fs.validator.nu%2Fxhtml10%2Fxhtml-strict.rnc+http%3A%2F%2Fs.validator.nu%2Fxhtml10%2Fxhtml.sch+http%3A%2F%2Fc.validator.nu%2Fall-html4%2F&parser=xmldtd&laxtype=yes

[15:33:01.0000] <Yuhong>
"Warning: Added the xml:space default attribute to the script element as required by XML parsing rules when loading DTDs."

[15:34:00.0000] <Yuhong>
"Error: Attribute xml:space not allowed on XHTML element script at this point."

[15:34:01.0000] <finnala>
That sure sounds kind of backwards.

[15:35:00.0000] <finnala>
Like a teacher adding something to your write-up, then correcting it.

[15:36:00.0000] <Philip`>
DTDs are kind of backwards

[15:43:00.0000] <finnala>
Yuhong: I believe I did read someone suggesting exactly that, that browsers should tell the server when the XML is malformed.

[15:43:01.0000] <finnala>
I don't really remember where I read it though...

[15:44:00.0000] <finnala>
As it is right now, they stated, the user is punished for the authors misdeeds.

[15:46:00.0000] <Yuhong>
I'd suggest an HTTP header and a protocol.

[15:48:00.0000] <erlehmann>
i'd suggest servers having to parse the XML they give our

[15:49:00.0000] <finnala>
If servers didn't have finite processing power, that'd be a good solution

[15:49:01.0000] <Yuhong>
EXI lets servers send XML as binary, allowing XML to parsed by browsers faster.

[15:50:00.0000] <Yuhong>
As opposed to HTTP compression which the browser has to first decompress, then do full parsing which is slower.

[15:50:01.0000] <Yuhong>
http://www.w3.org/XML/EXI/

[15:52:00.0000] <Yuhong>
Particularly handy for generating XML via creating elements etc.

[15:52:01.0000] <finnala>
Interesting.

[15:53:00.0000] <mkanat>
Sweet. Because that's exactly what XML needs--being harder to parse. ;-)

[15:53:01.0000] <finnala>
Is XML hard to parse? I mean, computer-wise?

[15:54:00.0000] <mkanat>
Programmer-wise, it is.

[15:54:01.0000] <Philip`>
mkanat: Indeed, and being impossible to debug when you get a parser error

[15:54:02.0000] <TabAtkins>
Depends on what you mean by "XML".

[15:54:03.0000] <mkanat>
Philip`: Yes, that would be an awesome feature. :-D

[15:55:00.0000] <TabAtkins>
finnala: If you mean vanilla XML without canonicalization or namespaces or anything, it's not difficult.

[15:55:01.0000] <TabAtkins>
With those things, it is more complex and slower.

[15:55:02.0000] <finnala>
I guess.

[15:55:03.0000] <gavinc>
Don't worry everyone always produces perfectly well formed and valid XML

[15:56:00.0000] <finnala>
I do detect some irony in the air

[15:57:00.0000] <mkanat>
gavinc: Heck, I know I do. Look at these magic fingers.

[15:59:00.0000] <erlehmann>
Philip`, that is a problem of the parser.

[15:59:01.0000] <erlehmann>
i mean, impossible to debug

[15:59:02.0000] <erlehmann>
errors in XML parsers are for the most part stupid

[15:59:03.0000] <erlehmann>
webkit got it partially right with „rendering up to the first error“


2011-11-22
[16:00:00.0000] <mkanat>
erlehmann: We were referring to EXI. :-)

[16:00:01.0000] <gavinc>
erlehmann: Right, which is of course a violation of the XML spec

[16:00:02.0000] <erlehmann>
mkanat, making it even harder to parse?

[16:00:03.0000] <mkanat>
erlehmann: Yeeeeah.

[16:01:00.0000] <erlehmann>
gavinc, i see what you did there. fun fact: once upon a time you could remote-crash XMPP clients (those that used a real XML parser) by sending namespace-malformed XML

[16:01:01.0000] <erlehmann>
at least knocked them offline.

[16:01:02.0000] <finnala>
Specs schmecks. Isn't that how the web works? ;)

[16:01:03.0000] <erlehmann>
nowadays you'll only knock yourself offline.

[16:01:04.0000] <erlehmann>
finnala, the word is „schmocks“

[16:03:00.0000] <Yuhong>
Tag soup can be even worse of course. I already mentioned https://bugzilla.mozilla.org/show_bug.cgi?id=607222

[16:04:00.0000] <TabAtkins>
That has nothing to do with tag soup.  It's DOM scripting.

[16:05:00.0000] <Yuhong>
Yep, the reason I say it is related to tag soup is that it involves document.write which writes tag soup and an appendChild of the base element.

[16:07:00.0000] <Yuhong>
Also: http://ln.hixie.ch/?start=1155195074&count=1

[16:08:00.0000] <TabAtkins>
document.write's problems go *far* beyond tag soup.  It's a basic layering violation.

[16:09:00.0000] <MikeSmith>
Yuhong, TabAtkins - about the validator behavior for shape, Philip` is right. I added that error reporting because without it there, the message "Error: The shape attribute on the a element is obsolete. Use area instead of a for image maps." gets reported for every <a> element, and the user is, like, "Huh?", because they don't have any shape attributes on those elements in their source and the don't know that XML requires the parser

[16:09:01.0000] <MikeSmith>
add them

[16:10:00.0000] <MikeSmith>
if people find that annoying they shouldn't use XML

[16:10:01.0000] <TabAtkins>
Or use a custom DTD, I guess.

[16:10:02.0000] <MikeSmith>
yeah. and/or they should select the "don't load external entities" option

[16:10:03.0000] <MikeSmith>
or maybe we should make the "don't load external entities" option the default (if it's not otherwise)

[16:11:00.0000] <MikeSmith>
hmm, no, can't do that

[16:11:01.0000] <MikeSmith>
because then it will report all the named character references as errors

[16:11:02.0000] <MikeSmith>
yippee for SGML legacy misfeatures

[16:13:00.0000] <gavinc>
This stuff? Why RDF XMLLiteral is still a -really- bad idea.

[16:13:01.0000] <TabAtkins>
HTMLLiteral!

[16:16:00.0000] <gavinc>
Mm, can HTML be easily compared for equivalence? (also, canonical lexical form?)

[16:17:00.0000] <TabAtkins>
Canonicalization is the devil.

[16:17:01.0000] <TabAtkins>
In other words, no.

[16:18:00.0000] <gordo>
when i use link rel="icon" type="image/png" sizes="48x48"

[16:19:00.0000] <gordo>
and various other sizes

[16:19:01.0000] <gordo>
do browsers make a request for every size?

[16:19:02.0000] <gordo>
or just one

[16:19:03.0000] <zewt>
why not test it? heh

[16:19:04.0000] <gordo>
favicons don't seem to appear in the net tab of browser developer tools

[16:20:00.0000] <gavinc>
TabAtkins: Canonicalization isn't really that much of an issue. But lexical to value mapping is. Seems like that would end up with needing an HTML parser in order to parse RDF. Same as today with XMLLiteral needing an XML parser

[16:21:00.0000] <TabAtkins>
I'll defer to other people who've told me that canonicalization is an issue.  But otherwise, yes, you're right - comparison requires an HTML parser to parse RDF.

[16:22:00.0000] <Yuhong>
I think canonicalization of HTML is even worse due to it being tag soup which it's error handing was only recently standardized.

[16:23:00.0000] <gavinc>
But I think an optional defined datatype for HTMLLiteral would be decent, and preferable to XMLLiteral in real usage. Yes, comparing it by value would require an HTML parser but some implementations will have one lying around anyway being in a browser already

[16:23:01.0000] <gavinc>
/me thinking out loud

[16:24:00.0000] <TabAtkins>
What are the timplementations of RDF in browsers?

[16:25:00.0000] <gavinc>
Okay, valid point

[16:25:01.0000] <gavinc>
Well, in theory an implementation of the RDF API

[16:26:00.0000] <gavinc>
and RDFa API

[16:40:00.0000] <Hixie>
nessy: ping

[16:44:00.0000] <Philip`>
Maybe XMLLiteral would be saner if its value space was DOMs, not strings-which-are-canonicalisations-of-DOMs

[16:44:01.0000] <Hixie>
has to be serialised somehow; the idea is to store the information in a database

[16:48:00.0000] <gavinc>
One idea was to have the value space be the XML infoset, but even creating that is complicated

[16:48:01.0000] <gavinc>
and an HTMLLiteral wouldn't have an infoset

[16:55:00.0000] <gavinc>
Oh, I don't think I've asked anyone here yet to kick Turtle in HTML tires yet http://dvcs.w3.org/hg/rdf/raw-file/default/rdf-turtle/index.html#in-html

[17:20:00.0000] <AryehGregor>
Ouch.

[17:20:01.0000] <AryehGregor>
I never thought about the fact that properties we add to Document will be in global scope for inline event handlers.

[17:20:02.0000] <AryehGregor>
That's bad.

[17:23:00.0000] <Hixie>
yeah that's screwed me several times already

[17:29:00.0000] <zewt>
no way to segregate new properties somehow, so they're not visible from there?

[17:29:01.0000] <zewt>
scoping nightmares go

[17:35:00.0000] <MikeSmith>
are the "final rendered dimensions of cells within a table" not exposed in the DOM?

[17:36:00.0000] <MikeSmith>
height and width of a particular cell?

[17:41:00.0000] <mkanat>
MikeSmith: That's just computed style, isn't it?

[17:42:00.0000] <MikeSmith>
mkanat: hmm, yeah, I would think so

[17:59:00.0000] <AryehGregor>
Awesome, it's even worse than I thought -- the element itself is also in the scope chain.

[17:59:01.0000] <AryehGregor>
zewt, that's exactly what I think we should do -- make new properties (at least those with short names that might cause conflict) not get hit from on* as bare names.

[18:45:00.0000] <MikeSmith>
Hixie, annevk - regarding the "WHATWG on Google+" discussion on the whatwg list, the parts about people needing to read through diffs

[18:46:00.0000] <MikeSmith>
I notice that diff has this "-show-function-line=regexp" option

[18:47:00.0000] <MikeSmith>
which could be used to find the nearest preceding <h1>-<h6> heading

[18:47:01.0000] <MikeSmith>
and/or the nearest preceding element with an id value

[18:48:00.0000] <MikeSmith>
and that heading text and id value would then be included in the diff

[18:49:00.0000] <MikeSmith>
and then http://html5.org/tools/web-apps-tracker could show the heading titles for the sections of the spec affected by that change

[18:50:00.0000] <MikeSmith>
and provide links back to the spec

[19:13:00.0000] <MikeSmith>
hmm, I forgot that Hixie doesn't use many IDs in his source..

[19:13:01.0000] <MikeSmith>
oh

[19:13:02.0000] <MikeSmith>
but the index file does have them

[21:29:00.0000] <erlehmann>
ha, i thought i might be on hacker news for my work on libglitch. but now this. http://news.ycombinator.com/item?id=3264074

[21:29:01.0000] <erlehmann>
i hope many people whime in on this discussion. it is important to have mindshare for the open web.

[22:23:00.0000] <erlehmann>
>For quite a few years people used the Internet Explorer icon on pamphlets and posters as an icon representing The Internet. It seems people are now starting to use Facebook's icon for that.

[22:23:01.0000] <erlehmann>
facepalm m(

[00:13:00.0000] <yaffle>
hello!

[00:17:00.0000] <yaffle>
http://www.whatwg.org/specs/web-apps/current-work/multipage/comms.html#messageevent

[00:18:00.0000] <yaffle>
why we need "origin" attribute for MessageEvent from server-sent-events ?

[00:25:00.0000] <yaffle>
or for MessageEvent from websockets ?

[00:25:01.0000] <Hixie>
we don't

[00:25:02.0000] <yaffle>
when it can be usefull?

[00:25:03.0000] <Hixie>
it's only useful for messages from window.postMessage(), iirc

[00:25:04.0000] <yaffle>
so, why this is presented in the spec? seems, some internet bloggers writes their aritcles and propagates "origin" attribute checks every time...

[00:25:05.0000] <Hixie>
you should check the 'origin' attribute all the time when receiving messages from window.postMessage()

[00:27:00.0000] <yaffle>
yes, i know, but checking this for messages from websockets and servern-sent-events is redundantly

[00:27:01.0000] <Hixie>
does it even have a value for those?

[00:28:00.0000] <yaffle>
http://www.html5rocks.com/en/tutorials/eventsource/basics/#toc-security

[00:31:00.0000] <Hixie>
yeah that's pretty much pointless. can you file a bug so that i can clarify that that warning is especially relevant for window.postMessage() messages and not so much EventSource and WebSocket ?

[00:32:00.0000] <yaffle>
@Hixie, ok

[00:34:00.0000] <Hixie>
thanks

[00:38:00.0000] <erlehmann>
tantek, do you like refbacks? if not, why not?

[00:43:00.0000] <tantek>
erlehmann, assuming you're talking about http://en.wikipedia.org/wiki/Refback then no

[00:44:00.0000] <tantek>
because they're too easily open to abuse

[00:44:01.0000] <tantek>
HTTP header forgery can be used to trick a refback enabled site into accessing some other random site out there

[00:45:00.0000] <erlehmann>
tantek, and then there is no link to the site and everything is well.

[00:45:01.0000] <hsivonen>
tantek: why is it bad to do a GET to a random site out there?

[00:45:02.0000] <erlehmann>
or not?

[00:46:00.0000] <tantek>
it's an attack surface on a server

[00:46:01.0000] <tantek>
for example, it's a trivial way to cause a DDOS

[00:47:00.0000] <tantek>
if you can trick 1000s of servers out there to issue a get request on one random site out there

[00:47:01.0000] <erlehmann>
tantek, what do you recommend instead?

[00:48:00.0000] <tantek>
there is no "Instead". the protocol is flawed all by itself.

[00:48:01.0000] <tantek>
go back to the drawing board. ;)

[00:49:00.0000] <tantek>
actually, given that I was able to explain a trivial DDOS scenario - and I'm not even a security expert, why isn't this documented on the wikipedia article?

[00:49:01.0000] <erlehmann>
tantek, no. i mean: what do you recommend instead of using linkbacks?

[00:52:00.0000] <tantek>
oh I know - erlehmann, here's your homework assignment in return for that answer, go update the wikipedia article to add a criticism section noting the trivial DDOS abuse of Refback enabled servers, with a <ref> cite to my statements above http://krijnhoetmer.nl/irc-logs/whatwg/20111122#l-387 :)

[00:52:01.0000] <Hixie>
it's already pretty trivial to cause a server to get a lot of GETs, that's not a particularly interesting security issue imho

[00:52:02.0000] <tantek>
or just add it to the existing Security issues section

[00:53:00.0000] <erlehmann>
what Hixie said.

[00:53:01.0000] <tantek>
nah, I call theoretical on that

[00:53:02.0000] <Hixie>
you can call what you like :-)

[00:53:03.0000] <tantek>
worthy of documenting as a vulnerability introduced by implementing the protocol

[00:53:04.0000] <erlehmann>
tantek, you are a clever and mean person.

[00:54:00.0000] <Hixie>
if you want to do a DDOS of the nature you describe it's far less work to just post a link on some popular site to some porn or a kitten, and include on that page a link to the victim site

[00:56:00.0000] <tantek>
Hixie, if that were true, people would be doing it all the time on sites like http://cuteoverload.com/ but that doesn't appear to be happening.

[00:56:01.0000] <Hixie>
the reason they don't do it is that a bunch of GETs isn't a particularly interesting attack

[00:56:02.0000] <Hixie>
same reason they don't do it with pingback, trackback, spam e-mail, etc

[00:56:03.0000] <Hixie>
all of which are existing ways to do what you describe

[00:58:00.0000] <foolip>
Hixie, jgraham, I was at one point writing a change tracking tool that used the outline algorithm to determine sections

[00:58:01.0000] <foolip>
but I got bored, as usual

[00:59:00.0000] <tantek>
Hixie, perhaps more likely, there just aren't sufficient numbers of Refback enabled servers yet to perform an interesting attack.

[00:59:01.0000] <tantek>
perhaps because the vulnerability is so obvious.

[01:00:00.0000] <Hixie>
there's plenty enough servers that get tons of traffic per link that can be used to cause the attack you describe

[01:00:01.0000] <Hixie>
reddit, for instance

[01:00:02.0000] <Hixie>
slashdot

[01:00:03.0000] <Hixie>
indeed the effect is even named after slashdot

[01:00:04.0000] <tantek>
sure, and that does happen

[01:00:05.0000] <Hixie>
it used to be a problem

[01:00:06.0000] <tantek>
articles get slashdotted

[01:00:07.0000] <Hixie>
and it isn't anymore

[01:00:08.0000] <tantek>
it used to be

[01:01:00.0000] <tantek>
until slashdot perhaps dropped in popularity

[01:01:01.0000] <Hixie>
slashdot has far more traffic now than it used to

[01:01:02.0000] <tantek>
by people that actually read and click? twitter-level attention spans have reduced that too

[01:02:00.0000] <tantek>
now you're more likely to get the effect if @KevinRose tweets a link to your site

[01:02:01.0000] <Hixie>
the reason it's no longer a problem is that it's so trivial to perform the attack you describe, that any serious web server software has long been hardened against that kind of attack

[01:02:02.0000] <Hixie>
anyway, bed time

[01:02:03.0000] <Hixie>
nn

[01:02:04.0000] <tantek>
nn

[01:11:00.0000] <erlehmann>
nn?

[01:11:01.0000] <erlehmann>
nighty-nighty?

[01:11:02.0000] <erlehmann>
tantek, i agree with Hixie on this. if 1000 (single) GETs are a problem, maybe one should stop hosting pages on embedded hardware.

[01:12:00.0000] <erlehmann>
or use better server software, written in C, with libowfat and tinyldap.

[01:13:00.0000] <erlehmann>
tantek, i think will implement refback and see how it goes. big problem: hashbang sites. :(

[01:39:00.0000] <annevk>
MikeSmith: that diff stuff seems interesting

[01:39:01.0000] <annevk>
MikeSmith: in most cases you can generate the ID from the header value

[01:39:02.0000] <annevk>
MikeSmith: using the same algorithm Anolis uses

[01:39:03.0000] <MikeSmith>
ah yeah

[01:39:04.0000] <MikeSmith>
right right

[01:40:00.0000] <MikeSmith>
hadn't thought about that

[01:40:01.0000] <hsivonen>
MikeSmith: I think I might have solved http://www.w3.org/Bugs/Public/show_bug.cgi?id=10174

[01:40:02.0000] <annevk>
MikeSmith: that will be a problem with duplicate "Introduction" sections and such, but they are not that frequent

[01:40:03.0000] <hsivonen>
it's a shocking bug

[01:40:04.0000] <hsivonen>
in the code that converts bytes to UTF-16 code units

[01:40:05.0000] <MikeSmith>
hsivonen: yeah?

[01:41:00.0000] <hsivonen>
the code returns an EOF sign where doing so can't be right

[01:41:01.0000] <MikeSmith>
annevk: and for code in intro sections it's non-normative anyway, so nobody should care too much

[01:41:02.0000] <hsivonen>
/me tests some more

[01:41:03.0000] <MikeSmith>
s/code/spec text/

[01:41:04.0000] <annevk>
MikeSmith: and I think I can run custom diff on my server

[01:42:00.0000] <MikeSmith>
annevk: cool. If I can help let me know

[01:42:01.0000] <annevk>
if you can provide the commandline thingie

[01:42:02.0000] <hsivonen>
Unicode conversion loops are hard

[01:42:03.0000] <MikeSmith>
I'm also happy to help with some of the other ideas that were discussed in that thread, if anybody else wants to put time into it

[01:42:04.0000] <annevk>
we could start with that and see what it does on web-apps-tracker

[01:43:00.0000] <MikeSmith>
annevk: the command line thing is just that same exact thing I put into the message

[01:44:00.0000] <MikeSmith>
it's really only that one line of code that invokes the diff command with the arguments needed

[01:44:01.0000] <MikeSmith>
so you should be able to just cut and paste it out of there

[01:45:00.0000] <MikeSmith>
and make the subversion config change for whatever user you have web-apps-tracker running under

[01:47:00.0000] <MikeSmith>
the fact that it breaks right exactly at byte 56K seemed like it must be something more than just coincidental

[01:47:01.0000] <MikeSmith>
0xE000

[01:47:02.0000] <MikeSmith>
that number even looks scary

[01:47:03.0000] <hsivonen>
it falls on a multiple of a buffer size

[01:47:04.0000] <MikeSmith>
yeah

[01:51:00.0000] <erlehmann>
how does the yellow highlighting work in the logs?

[01:55:00.0000] <MikeSmith>
hsivonen: thanks for the fix

[01:55:01.0000] <MikeSmith>
/me goes to push the change to w3c validator.nu backend 

[02:07:00.0000] <annevk>
TabAtkins / ojan / etc. I think we should do it with a Web IDL annotation instead

[02:07:01.0000] <annevk>
I guess I should say on the list

[02:13:00.0000] <annevk>
so MikeSmith, I currently have "svn diff -r %s%s %s"

[02:14:00.0000] <MikeSmith>
OK

[02:14:01.0000] <MikeSmith>
you don't need to change that

[02:15:00.0000] <annevk>
svn diff does support --diff-cmd

[02:16:00.0000] <MikeSmith>
yeah

[02:16:01.0000] <MikeSmith>
true

[02:16:02.0000] <MikeSmith>
so yeah, you can do it that way

[02:16:03.0000] <MikeSmith>
instead of in the config file

[02:17:00.0000] <MikeSmith>
"svn diff --diff-cmd diffwrap -r %s%s %s"

[02:17:01.0000] <annevk>
I don't have full control over the server

[02:17:02.0000] <MikeSmith>
ah

[02:17:03.0000] <annevk>
the diff utility I have does support -F

[02:17:04.0000] <annevk>
but obviously it does not have -r

[02:17:05.0000] <MikeSmith>
yeah

[02:18:00.0000] <MikeSmith>
it's not going to pass that -r to the external diff util

[02:18:01.0000] <annevk>
okay

[02:18:02.0000] <MikeSmith>
or maybe it does, but the wrapper doesn't read that arg

[02:19:00.0000] <MikeSmith>
so you just need to have a "diffwrap" file somewhere

[02:19:01.0000] <MikeSmith>
and put into it:

[02:19:02.0000] <MikeSmith>
#!/bin/sh

[02:19:03.0000] <MikeSmith>
diff -u -F '<h[1-6]' ${6} ${7}

[02:19:04.0000] <MikeSmith>
maybe you don't need the -u in there

[02:20:00.0000] <MikeSmith>
dunno

[02:20:01.0000] <MikeSmith>
hmm, or maybe you do, come to think of it

[02:20:02.0000] <annevk>
I'm going to try with

[02:20:03.0000] <annevk>
    command = "svn diff -r %s%s %s --diff-cmd diff -u -F '<h[1-6]'"

[02:20:04.0000] <MikeSmith>
yeah

[02:20:05.0000] <MikeSmith>
tried that already

[02:20:06.0000] <MikeSmith>
won't work

[02:21:00.0000] <MikeSmith>
even if you properly quote "diff -u -F '<h[1-6]'"

[02:21:01.0000] <MikeSmith>
it needs it to be in script

[02:22:00.0000] <MikeSmith>
because subversion can never do things that way everybody does them

[02:22:01.0000] <MikeSmith>
the intuitive way

[02:22:02.0000] <MikeSmith>
it likes to do them the asstarded way

[02:22:03.0000] <annevk>
it does not seem to do anything

[02:23:00.0000] <MikeSmith>
read the intro to http://svnbook.red-bean.com/en/1.2/svn.advanced.externaldifftools.html if you care to know the ugly details

[02:24:00.0000] <annevk>
oh

[02:24:01.0000] <annevk>
so this won't do anything

[02:24:02.0000] <MikeSmith>
um

[02:25:00.0000] <MikeSmith>
I think you may need to put the --diff-cmd before the -r part

[02:25:01.0000] <MikeSmith>
or at least before the final %s

[02:25:02.0000] <MikeSmith>
which is a filename

[02:25:03.0000] <MikeSmith>
and which needs to be the last arg, I think

[02:26:00.0000] <annevk>
ok

[02:26:01.0000] <annevk>
MikeSmith: so I need to make that diffwrap script?

[02:27:00.0000] <MikeSmith>
yup

[02:28:00.0000] <annevk>
sigh

[02:28:01.0000] <annevk>
nothing is working

[02:29:00.0000] <MikeSmith>
dunno what error you're getting

[02:31:00.0000] <MikeSmith>
but of course you have to either give --diff-cmd the absolute path to the diffwrap script, or you need to put the diffwrap script into whatever PATH the web-apps-tracker user has set

[02:31:01.0000] <annevk>
did it work for you with that script?

[02:31:02.0000] <MikeSmith>
yup

[02:32:00.0000] <annevk>
I can just copy and paste the template?

[02:32:01.0000] <annevk>
and then replace $DIFF with "diff" I suppose and remove the variable declaration

[02:32:02.0000] <MikeSmith>
you gotta make that script chmod 755 too

[02:33:00.0000] <MikeSmith>
yeah, sure

[02:33:01.0000] <MikeSmith>
and add the -F '<h[1-6]' part

[02:37:00.0000] <annevk>
ooh in there?

[02:37:01.0000] <MikeSmith>
heh

[02:37:02.0000] <MikeSmith>
yeah man

[02:37:03.0000] <annevk>
also -u ?

[02:38:00.0000] <MikeSmith>
yup

[02:38:01.0000] <annevk>
this means the Python stuff ends up looking like this:

[02:38:02.0000] <annevk>
    command = "svn diff --diff-cmd diffwrap -r %s%s %s"

[02:38:03.0000] <MikeSmith>
yeah

[02:38:04.0000] <annevk>
still yielding nothing

[02:38:05.0000] <annevk>
maybe I should add the .sh?

[02:39:00.0000] <MikeSmith>
yeah, if it has a .sh extension, yeah

[02:39:01.0000] <MikeSmith>
and also you probably need to put the absolute path

[02:39:02.0000] <MikeSmith>
not just --diff-cmd diffwrap

[02:40:00.0000] <MikeSmith>
but -diff-cmd /home/annevk/bin/diffwrap.sh

[02:40:01.0000] <MikeSmith>
or whatever

[02:45:00.0000] <annevk>
MikeSmith: doesn't work :(

[02:46:00.0000] <MikeSmith>
you not getting any error message?

[02:46:01.0000] <annevk>
maybe, I'm just logged in via ssh and trying it live

[02:46:02.0000] <MikeSmith>
you sure the diffwrap script is executable?

[02:47:00.0000] <MikeSmith>
-rwxr-xr-x

[02:47:01.0000] <annevk>
hmm

[02:47:02.0000] <annevk>
when I execute that it says diff: unrecognized option `--right'

[02:48:00.0000] <MikeSmith>
ah

[02:48:01.0000] <MikeSmith>
yeah

[02:48:02.0000] <MikeSmith>
remove that part from the line in the script

[02:48:03.0000] <annevk>
including LEFT / RIGHT ?

[02:48:04.0000] <MikeSmith>
yeah, don't do $DIFF --left $LEFT --right $RIGHT at all

[02:49:00.0000] <MikeSmith>
I don't even understand what the hell that stuff is

[02:49:01.0000] <hsivonen>
'Would it help if the TAG were to "Recommend" to W3C to not be a "bad netizen"?'

[02:49:02.0000] <MikeSmith>
instead make it diff -u -F '<h[1-6]' ${6} ${7}

[02:49:03.0000] <MikeSmith>
and "Somehow getting a regular "have obligations related to registration been met"

[02:49:04.0000] <MikeSmith>
check into the W3C document publication/advancement procedure shouldn't be too

[02:49:05.0000] <MikeSmith>
difficult."

[02:50:00.0000] <MikeSmith>
gotta love that way of approaching things

[02:50:01.0000] <MikeSmith>
annevk: or diff -u -F '<h[1-6]'  $LEFT $RIGHT should work too

[02:50:02.0000] <MikeSmith>
if you have those variables in your script

[02:51:00.0000] <MikeSmith>
but I don't see any point in having them because you can just do diff -u -F '<h[1-6]' ${6} ${7} directly

[02:51:01.0000] <annevk>
this works

[02:51:02.0000] <MikeSmith>
sweet

[02:51:03.0000] <annevk>
but it seems something else in the script breaks because of this

[02:51:04.0000] <MikeSmith>
oh

[02:52:00.0000] <annevk>
ah yeah

[02:52:01.0000] <annevk>
--- /tmp/tmp.27 2011-11-22 10:53:17.000000000 +0000

[02:52:02.0000] <annevk>
+++ /tmp/tmp.28 2011-11-22 10:53:17.000000000 +0000

[02:52:03.0000] <annevk>
is no longer accurate

[02:52:04.0000] <annevk>
and therefore I can not extract the information from it I am trying to extract

[02:53:00.0000] <MikeSmith>
ah yeah

[02:53:01.0000] <MikeSmith>
but is working int he oupt

[02:53:02.0000] <MikeSmith>
*in the output

[02:53:03.0000] <MikeSmith>
if you wait for the page to load

[02:53:04.0000] <MikeSmith>
shows the diff at the bottom

[02:54:00.0000] <MikeSmith>
hmm

[02:54:01.0000] <MikeSmith>
but ends up with some cases like <h6><dfn title="attr-input-type-file">

[02:54:02.0000] <MikeSmith>
because it truncates that part at 40 chars

[02:54:03.0000] <MikeSmith>
I think

[02:55:00.0000] <MikeSmith>
oh well

[02:55:01.0000] <MikeSmith>
can refine it later

[02:55:02.0000] <MikeSmith>
and/or make hack the diff source and build a binary that doesn't truncate at 40 chars

[02:55:03.0000] <MikeSmith>
because I think that's a hard-coded limit

[02:58:00.0000] <hsivonen>
manu-db: regarding your W3C Conference talk: why is giving your bank account number to someone a bad idea?

[02:58:01.0000] <hsivonen>
manu-db: is the U.S. system so broken that people can take your money if they know your account number instead of just sending you money?

[03:00:00.0000] <annevk>
MikeSmith: is there any way we can change back those log lines?

[03:00:01.0000] <jgraham>
At least in the UK giving out your bank number can, in some cases, be used to set up direct debits I think

[03:00:02.0000] <MikeSmith>
annevk: maybe

[03:01:00.0000] <MikeSmith>
but I don't understand why it's changing them to begin with

[03:01:01.0000] <jgraham>
hsivonen: http://news.bbc.co.uk/2/hi/7174760.stm

[03:01:02.0000] <MikeSmith>
annevk: what should those log lines actually say?

[03:01:03.0000] <annevk>
usually they give back what svn diff returns

[03:01:04.0000] <annevk>
the actual svn to and from numbers

[03:02:00.0000] <MikeSmith>
annevk: well, you already have those, don't you?

[03:02:01.0000] <annevk>
not if you revTo is 0

[03:03:00.0000] <MikeSmith>
ah

[03:03:01.0000] <MikeSmith>
really?

[03:03:02.0000] <MikeSmith>
I mean, if you are doing svn diff --diff-cmd diffwrap -r %s%s %s

[03:03:03.0000] <MikeSmith>
then it's just those first pair of %s%s, right?

[03:03:04.0000] <hsivonen>
jgraham: oh, right. Direct debit.

[03:04:00.0000] <hsivonen>
jgraham: the protocol for setting up direct debit is bogus here, too.

[03:05:00.0000] <annevk>
MikeSmith: one can be omitted

[03:06:00.0000] <annevk>
MikeSmith: and then we still need to know the other one for the UI

[03:06:01.0000] <annevk>
well we don't need to

[03:06:02.0000] <annevk>
but we could before

[03:07:00.0000] <hsivonen>
jgraham: I wonder if banks had usability people who advocated for the bogus direct debit setup protocol or if they were just full of FAIL without usability people winning over security people

[03:11:00.0000] <annevk>
MikeSmith: see e.g. http://html5.org/tools/web-apps-tracker?from=2011&to=1999 now

[03:11:01.0000] <annevk>
MikeSmith: for how it looks

[03:11:02.0000] <hsivonen>
aargh. # in data: URL for the lose

[03:11:03.0000] <annevk>
MikeSmith: for the other feature, see http://html5.org/tools/web-apps-tracker?from=6830

[03:12:00.0000] <annevk>
MikeSmith: note how the UI knows it's against 6831

[03:12:01.0000] <MikeSmith>
/me looks

[03:12:02.0000] <annevk>
MikeSmith: http://html5.org/tools/web-apps-tracker?from=6829 here again, the UI knows it's against 6831; and it figured that out from the log

[03:12:03.0000] <annevk>
I commented out diffwrap

[03:13:00.0000] <MikeSmith>
ah

[03:15:00.0000] <hsivonen>
I hadn't realized the HTML spec had outgrown Validator.nu's size limit again

[03:15:01.0000] <MikeSmith>
hsivonen: yeah

[03:16:00.0000] <hsivonen>
time to set it to 7 MB, I guess

[03:16:01.0000] <MikeSmith>
annevk: so maybe we can figure out later some way to get around that so your python script can still get the data it needs

[03:16:02.0000] <hsivonen>
at least the limit is use case-driven

[03:16:03.0000] <annevk>
yeah, or we kill that feature

[03:16:04.0000] <annevk>
always require both fields

[03:16:05.0000] <annevk>
oh there might be another issue

[03:17:00.0000] <annevk>
if you fill in a revision larger than actually exists

[03:17:01.0000] <annevk>
you could poise the cache

[03:17:02.0000] <annevk>
so you always want to know the revision numbers the diff ran against

[03:17:03.0000] <annevk>
there's some other ways to get around too, but this was rather trivial

[03:18:00.0000] <MikeSmith>
OK. well I'm happy to help more later if I can

[03:18:01.0000] <MikeSmith>
right now I gotta go get some food

[03:18:02.0000] <annevk>
I should get some lunch too

[03:18:03.0000] <annevk>
:)

[03:55:00.0000] <hsivonen>
Hixie: I adjusted the size limit on Validator.nu to accommodate the HTML spec again

[03:59:00.0000] <jgraham>
foolip: Oh, if I understand what you were going for, that seems simple and clever.

[03:59:01.0000] <foolip>
jgraham, you mean diff-sections?

[03:59:02.0000] <jgraham>
Yeah

[04:00:00.0000] <jgraham>
I didn't really read the code much, so I might not have understood

[04:00:01.0000] <foolip>
it splits the spec into directories and files

[04:00:02.0000] <foolip>
then git log -- sections/video/bla will only show commits in that subsection

[04:00:03.0000] <jgraham>
Right

[04:00:04.0000] <jgraham>
So you can subscribe to particular sections or files

[04:01:00.0000] <foolip>
yeah, that would be the idea

[04:01:01.0000] <jgraham>
s/sections/directories/

[04:01:02.0000] <jgraham>
Like I said, that seems clever and simple

[04:01:03.0000] <foolip>
but the tooling to actually do that is missing so far, feel free to step in :)

[04:02:00.0000] <jgraham>
Well… maybe :) I fear trying to commit to getting more done :) But this does seem like I would particularly benefit from it

[04:13:00.0000] <annevk>
foolip: MikeSmith's diff command thingie does give you section titles for changes

[04:13:01.0000] <annevk>
foolip: and it works

[04:14:00.0000] <annevk>
foolip: it doesn't seem like it would be a big burden to go from there to some kind of push notification if you find a particular section

[04:14:01.0000] <annevk>
foolip: could have a twitter account per section :)

[04:17:00.0000] <jgraham>
The moaning of the G+ haters will be nothing to my wrath if you start publishing data exclusively on twitter

[04:17:01.0000] <hsivonen>
foo&noti;bar is my least favorite part of named character reference tokenization

[04:18:00.0000] <annevk>
jgraham: define data

[04:21:00.0000] <zcorpan>
hsivonen: what's your most favorite?

[04:22:00.0000] <hsivonen>
zcorpan: hard to say. named character reference tokenization doesn't have particularly nice parts

[04:31:00.0000] <eightfold>
can someone have a look at this:

[04:31:01.0000] <eightfold>
http://jsfiddle.net/abmTH/

[04:35:00.0000] <eightfold>
i want to hide .PreviewSizes based on the content of pxField

[04:37:00.0000] <zcorpan>
i'll say my favorite is <a href="&copy=">

[04:37:01.0000] <zcorpan>
but then i don't have to implement it :)

[04:42:00.0000] <eightfold>
bah, that was supposed to go in #jquery. sorry.

[04:55:00.0000] <foolip>
annevk, yeah, I tried that as well, but with that approach you can either only follow <h1> sections or need to follow each and every sub-section, I think

[04:56:00.0000] <jgraham>
annevk: Data is like pornography; I know it when I see it :p

[05:11:00.0000] <annevk>
foolip: that's true, but the subsections are in a database

[05:11:01.0000] <annevk>
foolip: because of the section annotation system

[05:11:02.0000] <foolip>
annevk, oh, ok

[05:11:03.0000] <annevk>
basically, there's a couple of dots, but how to connect them...

[05:11:04.0000] <foolip>
well, whoever sets up a working solution first wins!

[05:11:05.0000] <foolip>
I hope it isn't me

[05:53:00.0000] <annevk>
MikeSmith: it seems we should give people at least a week before marking things as NEEDSINFO after you already requested some information

[06:05:00.0000] <zcorpan>
what's the difference between needsinfo keyword and RESOLVED NEEDSINFO?

[06:05:01.0000] <annevk>
needsinfo can be added by anyone

[06:05:02.0000] <annevk>
resolving can only be done by editors

[06:29:00.0000] <zcorpan>
i see

[08:24:00.0000] <jgraham>
TabAtkins: You will excuse me while I don't hold my breath for the "batch processors" selectors spec

[08:58:00.0000] <grendzy>
Hi!  Drupal community is looking for a more sophisticated parser to replace PHP DOM (a.k.a SimpleXML, I think based on libxml2).  Is http://code.google.com/p/html5lib/ abandoned?  Last commit was almost 2 years ago.  Thanks!

[09:01:00.0000] <jgraham>
I am not aware thatanyone is actively working on the PHP port

[09:01:01.0000] <jgraham>
If you would like to take over that would be easy to arrange

[09:01:02.0000] <jgraham>
But you should maybe check the performance before you decide what you want to do :)

[09:03:00.0000] <smaug____>
wasn't there some plan to support hsivonen's parser with libxml2

[09:05:00.0000] <smaug____>
grendzy: take hsivonen's parser, and generate php code from  java files :)

[09:07:00.0000] <hsivonen>
smaug____: there's a plan. now that View Source is out of the way, it might actually become real

[09:08:00.0000] <erlehmann>
grendzy, as far as i can say, html5lib was usable 1 year ago.

[09:09:00.0000] <erlehmann>
i used the PHP portion for a wordpress plugin.

[09:09:01.0000] <erlehmann>
and am now using python.

[09:09:02.0000] <erlehmann>
PHP is pig disgusting.

[09:14:00.0000] <grendzy>
thanks folks… anyone mind if I quote this chat on a drupal.org discussion?

[09:15:00.0000] <AryehGregor>
Go ahead.

[09:15:01.0000] <AryehGregor>
It's publicly logged.

[09:15:02.0000] <grendzy>
cool, thanks again for the feedback

[09:23:00.0000] <jarek>
grendzy: this channel is already logged on http://krijnhoetmer.nl/irc-logs/

[09:57:00.0000] <Ms2ger>
"Funnily enough, I've just been talking to the DOM5 and DOM6 API designers..."

[09:57:01.0000] <Ms2ger>
Anybody know those?

[10:09:00.0000] <smaug____>
Ms2ger: where is that coming from?

[10:10:00.0000] <timeless>
/me saw that

[10:10:01.0000] <timeless>
/me can't remember

[10:14:00.0000] <miketaylr>
public-webapps?

[10:19:00.0000] <timeless>
ah yes, in a Selectors API 2 thread

[11:19:00.0000] <rillian_>
foolip: what do you think about video.advance(optional unsigned long frames) ?

[11:20:00.0000] <rillian_>
the idea would be to have something you could call the single-step when paused

[11:20:01.0000] <zewt>
might be expensive to implement for some codecs

[11:20:02.0000] <rillian_>
yeah, I was just thinking skipping many frames could be very expensive

[11:20:03.0000] <rillian_>
in a variable frame rate stream

[11:21:00.0000] <rillian_>
video.advance() wouldn't be bad though

[11:22:00.0000] <zewt>
don't know if there are use cases for small values of frames but greater than 1

[11:22:01.0000] <Hixie>
hsivonen: thanks. i think it's only a temporary issue though, i'll be removing a lot of text soon which should solve the problem anyway.

[11:22:02.0000] <zewt>
perhaps it would be cheap enough to just call advance() multiple times--if the decoding itself is done lazily, it would still allow frame skipping optimizations

[11:23:00.0000] <rillian_>
zewt: yeah. I think the idea is just to scan faster

[11:24:00.0000] <rillian_>
but if it's unlimited, someone might try to use it to seek, not realizing it's an expensive operations on some formats

[11:24:01.0000] <zewt>
right

[11:24:02.0000] <hsivonen>
Hixie: the old limit was around 5 MB. the spec was around 6 MB. the new limit is 7 MB

[11:24:03.0000] <zewt>
(some people might still call advance() a ton to try to seek, but you can only babysit so much)

[11:24:04.0000] <rillian_>
*is* it expensive on vfr mp4?

[11:24:05.0000] <zewt>
not sure

[11:24:06.0000] <rillian_>
I guess it's pretty bad on webm

[11:25:00.0000] <rillian_>
you can go a chunk at a time, but still

[11:29:00.0000] <Hixie>
hsivonen: oh, wow.

[11:29:01.0000] <Hixie>
hsivonen: i wonder what i added to make the difference so high

[11:30:00.0000] <danbeam>
anybody know if it's intentional that it's pretty much impossible to find out if setting a style from the JS/DCOM will actually trigger a CSS transition / [webkitT]ransitionEnd event?  I'm having issues where I'd like to fire a callback on webkitTransitionEnd but if there's no style that ends up changing (i.e. you simply set the same style) you'll never reach this event handler as you never triggered a transition...

[11:30:01.0000] <Hixie>
hsivonen: it still seems to catch errors all teh way to near the bottom of the spec

[11:30:02.0000] <Hixie>
hsivonen: so i assumed it was just on the edge

[11:32:00.0000] <rillian_>
zewt: I think reason for the argument was so you could call video.advance(-1)

[11:32:01.0000] <zewt>
doesn't have to be an integer to allow that (though also, scanning backwards can be pretty expensive)

[11:33:00.0000] <rillian_>
which isn't as expensive as large n, but it still a lot of new code

[11:33:01.0000] <rillian_>
zewt: right

[11:33:02.0000] <zewt>
not necessarily much code, but it's often an expensive operation

[11:34:00.0000] <rillian_>
well, you  might have to rememeber the last keyframe, if you're not already?

[11:35:00.0000] <zewt>
only if you want to optimize it further, but that's very low-level...

[11:36:00.0000] <zewt>
(depending heavily on the codec, of course--many formats you'll need to keep the keyframe around anyway)

[11:36:01.0000] <zewt>
(or multiple keyframes)

[11:38:00.0000] <danbeam>
s/DCOM/DOM/ **

[11:38:01.0000] <rillian_>
well, the reason this never works is you really want to just buffer a bunch of decoded data so you can step around

[11:38:02.0000] <rillian_>
which is what editing applications do

[11:38:03.0000] <rillian_>
but that adds a lot of footprint for a feature which mostly isn't used

[11:38:04.0000] <zewt>
generally when it works, seeking backwards is just painfully slow, decoding everything over and over

[11:39:00.0000] <zewt>
editing applications tend to just reencode the video in something designed for it (stuff that doesn't keyframe once a year)

[11:39:01.0000] <rillian_>
that too

[11:40:00.0000] <rillian_>
anyway, I think it has to map to a low-level call inside the playback engine

[11:40:01.0000] <rillian_>
because for variable frame rate formats, you can't be sure you're moving to a particular frame number without codec- and container- specific knowledge

[11:42:00.0000] <rillian_>
which is why fixed frame rate is the ONE TRUE WAY! *ahem*

[12:15:00.0000] <Ms2ger>
Hmm, nice

[12:16:00.0000] <Ms2ger>
Apparently all of Gecko/Webkit/Presto let you do handle = setInterval(); clearTimeout(handle);

[12:22:00.0000] <annevk>
Ms2ger: isn't that how that feature works?

[12:23:00.0000] <Ms2ger>
Not per spec afaict

[12:23:01.0000] <Ms2ger>
Note interval <-> timeout

[13:10:00.0000] <jgraham>
Ms2ger: Oh, that is interesting

[13:11:00.0000] <jgraham>
Presumably the reverse is also true so clearInterval and clearTimeout are synonyms?

[13:12:00.0000] <Ms2ger>
That's true in Gecko, haven't tested

[13:14:00.0000] <jgraham>
Any reason not to make the spec say that?

[13:14:01.0000] <Ms2ger>
Probably not, I filed a bug

[13:16:00.0000] <TabAtkins>
jgraham: I wouldn't hold your breath, no; it'll certainly take more than a minute or two to do it.

[13:16:01.0000] <TabAtkins>
But I've talked with fantasai about it, and we both think it's a reasonable idea.

[13:19:00.0000] <jgraham>
TabAtkins: Well ignoring the fact that selectors is turning into something that closely resembles line noise already (or Perl), waiting years for the inevitable wrangling about who owns the spec and where it is allowed to discuss it and then more time as people debate synatax seems relatively unappealing compared to slapping the already-implemented-in-Opera API onto XPath and covering all the same use cases. Even if we still so the other thing.

[13:19:01.0000] <jgraham>
*do

[13:23:00.0000] <TabAtkins>
Do you already understand XPath?

[13:23:01.0000] <erlehmann>
i once made a content management system using XSLT

[13:23:02.0000] <jgraham>
Me? I understand it enough to use it when I use lxml

[13:23:03.0000] <erlehmann>
madness

[13:23:04.0000] <jgraham>
XSLT != XPath

[13:23:05.0000] <jgraham>
XSLT is indeed nuts

[13:24:00.0000] <erlehmann>
jgraham, i had to use Xpath in between.

[13:24:01.0000] <jgraham>
Sure, XSLT depends on XPath

[13:24:02.0000] <TabAtkins>
jgraham: Then you are an extremely tiny minority of authors.  Almost *all* authors are unaware that there even is such a thing as XPath, and would react badly if we tried to tell them to use a completely different selection syntax if they want a new feature, that doesn't work with any of the old features.

[13:24:03.0000] <erlehmann>
jgraham, i think tha difference between perl line noise and CSS is that CSS is single-pass tokenizing. you can't parse perl. (at all)

[13:25:00.0000] <jgraham>
TabAtkins: The selectors way might be a good long term thing for that reason

[13:25:01.0000] <TabAtkins>
And, heh, if you think CSS is line noise, I don't see how you don't think even worse of XPath.  ^_^

[13:25:02.0000] <erlehmann>
what TabAtkins says, it sounds reasonable

[13:25:03.0000] <jgraham>
Even though selectors scales badly due to the syntax

[13:25:04.0000] <erlehmann>
XPath is just lots of JS comments to the trained eye (starting with //)

[13:26:00.0000] <jgraham>
XPath mostly has a consistent syntax afaict

[13:26:01.0000] <erlehmann>
scales badly?

[13:26:02.0000] <jgraham>
Selectors just picks a new character for each new feature

[13:26:03.0000] <jgraham>
By 2050 I will probably need to have emoji input to make complex selectors

[13:26:04.0000] <TabAtkins>
Only for syntax-level features.  Most features can be exposed through pseudoclasses and similar.

[13:27:00.0000] <erlehmann>
what became of :outside?

[13:27:01.0000] <Ms2ger>
::outside*

[13:27:02.0000] <erlehmann>
::outside i mean

[13:27:03.0000] <TabAtkins>
Doesn't exist yet.  The draft speccing is is currently abandoned.

[13:27:04.0000] <erlehmann>
I WANT OUTSIDE

[13:27:05.0000] <erlehmann>
breaking out of div hell is great.

[13:27:06.0000] <jgraham>
erlehmann: Thank you for demonstrating my point :)

[13:28:00.0000] <TabAtkins>
erlehmann: I know, I want functionality like that too.

[13:28:01.0000] <erlehmann>
jgraham, i like CSS. it can do, err, stuff.

[13:29:00.0000] <erlehmann>
here, take some blog.fefe.de/?css=http://daten.dieweltistgarnichtso.net/src/fefe-anaglyph-css/anaglyph.css

[13:29:01.0000] <erlehmann>
(caveat: red-cyan glasses needed.)

[13:30:00.0000] <miketaylr>
/me goes blind

[13:30:01.0000] <jgraham>
/me isn't saying anything about CSS in general

[13:31:00.0000] <erlehmann>
miketaylr, that blog allows external CSS. i also made an imageboard style and a facebook-like one once.

[13:31:01.0000] <erlehmann>
:)

[13:31:02.0000] <miketaylr>
ooo cool

[13:31:03.0000] <erlehmann>
it is a fun demo ground for neat tricks

[13:33:00.0000] <erlehmann>
http://blog.fefe.de/?css=http://daten.dieweltistgarnichtso.net/src/fefesbook-css/fefesbook.css

[13:33:01.0000] <erlehmann>
see what i did there?

[13:33:02.0000] <miketaylr>
heh

[13:33:03.0000] <miketaylr>
aw bummer, http://blog.fefe.de/?css=data:text/css,h1{color:green}

[13:33:04.0000] <miketaylr>
:P

[13:34:00.0000] <erlehmann>
i use html::before

[13:34:01.0000] <erlehmann>
BOW BEFORE ME

[13:34:02.0000] <erlehmann>
:D

[13:35:00.0000] <erlehmann>
maybe i should do an article on abusing CSS

[13:35:01.0000] <erlehmann>
hehe

[13:35:02.0000] <erlehmann>
selectors fun is fun!

[13:48:00.0000] <finnala>
 With great power comes great responsibility

[14:32:00.0000] <TabAtkins>
Yup, Bjoern is now in my killfilter.  Nearly every interaction I have with him is him trolling.

[14:37:00.0000] <TabAtkins>
Hmm, looks like a recency illusion, actually.  He's only recently been trolling, and only in CSS stuff.  I'll remove the filter and let him ride a while longer.

[14:44:00.0000] <Hixie>
bjoern h?

[14:44:01.0000] <TabAtkins>
Yeah.

[14:47:00.0000] <Hixie>
i haven't found him trolling, though i have for hte past few years found his priorities are more theoretical than i am comfortable with

[14:47:01.0000] <Hixie>
he used to be emminently practical in his feedback

[14:47:02.0000] <TabAtkins>
Yeah, when I looked back through my archives, his feedback on html or js stuff seems fine.

[14:47:03.0000] <Hixie>
now he tends to talk about process and theoretical spec correctness issues

[14:48:00.0000] <Hixie>
(much like julian)

[14:50:00.0000] <jgraham>
TabAtkins: FWIW I think accusing Robin of "arguing badly" was unjustified

[14:51:00.0000] <jgraham>
AFAICT there is no actual disagreement about facts only about priorities

[14:52:00.0000] <jgraham>
Everyone agrees that selectors don't address all the use cases today. The only disagreement is about whether the remaining use cases are important enough to address now rather than in a hypothetical future selectors spec

[14:53:00.0000] <jgraham>
At the cost of having nice API for two selection methods in the short term as opposed to nice API for one method and hideous API for one method

[14:53:01.0000] <TabAtkins>
Possibly.  He was being needlessly sarcastic, and then compounded it with impugning my motives and hyperbolizing.

[14:54:00.0000] <TabAtkins>
I claimed he was arguing badly at the sarcasm point, though, where it was much more weakly justified.

[14:55:00.0000] <TabAtkins>
At this point I think it's quite accurate, though.

[14:56:00.0000] <jgraham>
Anyway I will go to sleep now. No doubt there will be a deluge of mail about this to look forward to :)

[15:10:00.0000] <Hixie>
anyone know if in mysql there's a way to check if a column's value is equal to one of a set of strings? short of manually constructing a sequence of ORed expressions?

[15:11:00.0000] <Hixie>
hmm, looks like IN (?, ?) will do it

[15:11:01.0000] <Hixie>
i wonder if there's a way to make DBI automatically fill the right number of ?s

[15:13:00.0000] <Philip`>
I just use '... IN ('.(join ', ', map '?', @data).')' to get the right number of them

[15:14:00.0000] <Philip`>
/me has never encountered a more elegant method

[15:14:01.0000] <TabAtkins>
Hixie appears to be above the crass practice of direct SQL string creation.

[15:14:02.0000] <Hixie>
Philip`: yeah that's what i'm doing, but i was hoping for something neater

[15:14:03.0000] <Philip`>
It's less crass if you're dynamically generating placeholders, and not putting user-supplied data into the query string

[15:15:00.0000] <Hixie>
yeah, it's not terrible

[15:15:01.0000] <Hixie>
it's still not pretty though :-)

[15:16:00.0000] <Philip`>
You could always create a temporary table, insert each item into that table, then do the query with "foo IN (SELECT value FROM that_temporary_table)"

[15:16:01.0000] <Hixie>
i would assume that that has worse perf characteristics

[15:16:02.0000] <Hixie>
what i'd like is just to be able to put a single ? in the query, and pass DBI an arrayref and have it expand it appropriately

[15:46:00.0000] <annevk>
oops

[15:46:01.0000] <annevk>
bit over aggressive there on the wiki

[15:47:00.0000] <Hixie>
no worries

[15:51:00.0000] <annevk>
ojan: annotating everything with [Scope] on Document/Element and their derived interfaces seems like it would add a lot of noise

[15:51:01.0000] <zewt>
i've wanted sql apis to be able to do things like select("select * from table where id in (?)", [1,2,3]), and know (or have a simple way of saying) that the array should be expanded appropriately

[15:52:00.0000] <annevk>
ojan: I can see how that makes sense if the new set becomes larger... but at this point in time?

[15:52:01.0000] <AryehGregor>
Hixie, the ? stuff probably maps to prepared statements on the DB side, no?  Not something in the library?

[15:52:02.0000] <zewt>
(the same thing as what hixie said, actually)

[15:52:03.0000] <zewt>
no, ? is usually "expand an (escaped) parameter here"

[15:53:00.0000] <AryehGregor>
Yes, but is that done by the client library or the server?

[15:53:01.0000] <zewt>
library

[15:53:02.0000] <AryehGregor>
I guess it's probably done by the client library in this case.

[15:53:03.0000] <zewt>
the communication to the server is just the resulting SQL

[15:53:04.0000] <AryehGregor>
Although MySQL supports a feature with the same syntax, it would take three statements to use it, I guess: http://dev.mysql.com/doc/refman/5.6/en/sql-syntax-prepared-statements.html

[15:54:00.0000] <annevk>
from twitter "I use the first thing that autocompletes in the devtools :)" so that's how people end up using document.width

[15:54:01.0000] <AryehGregor>
More, actually.

[15:54:02.0000] <Hixie>
AryehGregor: either way

[15:54:03.0000] <AryehGregor>
What's document.width anyway?

[15:54:04.0000] <Hixie>
AryehGregor: i don't mind how it's implemented ;-)

[15:54:05.0000] <AryehGregor>
I saw people talking about it.

[15:54:06.0000] <annevk>
it's nothing now

[15:54:07.0000] <zewt>
iirc i've wanted the same syntax to be able to fill in array literals (with postgres)

[15:55:00.0000] <annevk>
I guess it's time to find some more features to remove

[15:55:01.0000] <annevk>
well, not right now, now it's sleepy time :)

[15:56:00.0000] <Philip`>
zewt: Common advice is to use the ? placeholders so the server can cache the optimised query and reuse it with any arguments, which seems incompatible with the idea that the expansion is done by the client library

[15:56:01.0000] <ojan>
annevk: yeah...i just wouldn't want new features to fall through the cracks

[15:56:02.0000] <ojan>
but i guess the consequences aren't that bad

[15:56:03.0000] <ojan>
my hope is more that we could reduce the list over time

[15:57:00.0000] <ojan>
but maybe it's not worth the effort

[15:57:01.0000] <zewt>
the main reason for ? placeholders is to abstract away string escapes

[15:57:02.0000] <zewt>
anything else might be useful but a distant second...

[15:57:03.0000] <AryehGregor>
Philip`, it might be two different features using the same ? syntax.

[15:57:04.0000] <zewt>
that's definitely what prepared statements are for; i don't know if non-prepared statements do that too

[15:58:00.0000] <zewt>
though i guess i wouldn't be surprised, at least with postgres which (last i knew) is a lot more aggressive about optimizing than mysql

[15:58:01.0000] <TabAtkins>
Philip`: It's compatible with the idea that you don't have to worry about escaping, because the client library handles it all for you.

[15:59:00.0000] <zewt>
though optimization is a bit trickier than that, since you don't know which parts of the query are static and which are variable

[15:59:01.0000] <zewt>
(which you do know with prepared statements)

[15:59:02.0000] <AryehGregor>
MySQL is great at optimizing, providing you tell it exactly what optimizations to do and are fine with completely rewriting your queries in harebrained ways to trick it into being not completely retarded.

[15:59:03.0000] <Hixie>
nessy: ping


2011-11-23
[16:00:00.0000] <annevk>
ojan: it's a valid concern; I've been trying to think of something simpler, but haven't really been able to come up with anything

[16:00:01.0000] <annevk>
ojan: it's also kind of neat the way the scope chain thing works, but I guess it's a misfeature for extensibility

[16:00:02.0000] <zewt>
for example, "select * from users where id > 100" optimizes completely differently on (random database i just tested on) than "id > 1000000" (the former uses a seq scan, the latter an index scan)

[16:01:00.0000] <AryehGregor>
(Once someone asked in #mysql about some query with GROUP BY for days of the week, which was running really slowly on his data set.  I advised him to rewrite it as a UNION of seven copy-pasted queries with different WHERE clauses, and he reported the performance was drastically better.)

[16:01:01.0000] <ojan>
annevk: i think it's also a misfeature for developers...

[16:01:02.0000] <annevk>
ojan: okay

[16:01:03.0000] <zewt>
(since postgres knows that there are tons of users > 100, but very few > 1000000)

[16:01:04.0000] <annevk>
ojan: I guess you don't like 'with' either?

[16:01:05.0000] <ojan>
annevk: i think the vast majority of developers are surprised by this when they learn about it and tend to learn about it by hitting a weird unexpected bug trying to access a global

[16:01:06.0000] <AryehGregor>
zewt, yeah, obviously.  It's going to have to do cardinality estimates, and it can't do that without the actual numbers.  WHERE foo=6 might be a totally different execution plan from WHERE foo=7, if 6 and 7 have very different frequencies.

[16:02:00.0000] <ojan>
annevk: i'm more OK with "with" since you do it more explicitly

[16:02:01.0000] <ojan>
annevk: i don't love it, but it's different in my view

[16:02:02.0000] <annevk>
fair enough

[16:02:03.0000] <AryehGregor>
The MySQL optimizer will sometimes figure out it doesn't have to run the query at all -- "impossible where condition noticed after reading const tables" or such.

[16:02:04.0000] <AryehGregor>
So it knows it has to return zero rows even before you actually run the query.

[16:02:05.0000] <ojan>
annevk: doesn't really matter either way...we're stuck with it

[16:03:00.0000] <AryehGregor>
But it depends totally on the values of the parameters.

[16:03:01.0000] <zewt>
i don't think postgres will do that, but it'll at least reduce it to an index scan, which is probably near-constant-time

[16:03:02.0000] <zewt>
(when the condition never happens)

[16:03:03.0000] <annevk>
we could have scope-interface HTMLButtonElement { }; interface HTMLButtonElement {}; maybe

[16:03:04.0000] <annevk>
ojan: ^^

[16:03:05.0000] <ojan>
annevk: yeah, that seems nicer

[16:03:06.0000] <AryehGregor>
Surely [Scope] interface HTMLButtonElement?

[16:04:00.0000] <AryehGregor>
Not a whole new definition type?

[16:04:01.0000] <annevk>
I'm not sure why we have all this weird [] syntax instead of just native support

[16:04:02.0000] <annevk>
but sure

[16:04:03.0000] <AryehGregor>
"native support"?

[16:04:04.0000] <ojan>
annevk: i don't feel strongly about any of this as long as we can add new APIs without compat concerns

[16:05:00.0000] <zewt>
oh, postgres sometimes does it

[16:05:01.0000] <AryehGregor>
I'm sure it does.

[16:05:02.0000] <annevk>
AryehGregor: e.g. sometimes you use readonly attribute and sometimes you use [Replaceable] attribute

[16:05:03.0000] <AryehGregor>
pgsql is generally much smarter than MySQL.

[16:05:04.0000] <zewt>
if i say "id = 1 and id = 2", it adds "One-Time Filter: false", which i presume means the same thing

[16:05:05.0000] <annevk>
pretty weird

[16:05:06.0000] <annevk>
I'd rather we just use keywords all over

[16:05:07.0000] <zewt>
it just doesn't figure out "id > 100 and id < 0" is always false (for integers)

[16:05:08.0000] <AryehGregor>
annevk, well, there are like half a dozen that are magic, yeah.  readonly, getter/setter/legacycaller/etc., static.

[16:05:09.0000] <annevk>
and I actually think we should drop "attribute"

[16:05:10.0000] <annevk>
we don't say "method" either

[16:05:11.0000] <AryehGregor>
I don't know why we have two different syntaxes.

[16:06:00.0000] <AryehGregor>
You'd just have to make sure it's not ambiguous.

[16:06:01.0000] <AryehGregor>
zewt, oh, really?  I'm surprised, that seems easy.

[16:06:02.0000] <annevk>
() makes it that way

[16:06:03.0000] <annevk>
() -> method

[16:06:04.0000] <annevk>
no () -> attribute

[16:06:05.0000] <ojan>
annevk: makes sense to me

[16:06:06.0000] <AryehGregor>
MySQL does.

[16:07:00.0000] <AryehGregor>
zewt, MySQL does figure that out.

[16:07:01.0000] <AryehGregor>
Impossible WHERE noticed after reading const tables

[16:07:02.0000] <annevk>
but there's not a lot of people who want to simplify Web IDL these days

[16:07:03.0000] <annevk>
some kind of stabilizing frenzy

[16:07:04.0000] <Hixie>
did you guys ever get mikesmith's diff -F idea to work, btw?

[16:07:05.0000] <annevk>
/me rather has continuous improvement

[16:08:00.0000] <AryehGregor>
Changing WebIDL is annoying because then all the specs have to change.

[16:08:01.0000] <annevk>
Hixie: yes, but it is not there yet because it removed a feature svn diff had

[16:09:00.0000] <Hixie>
what command line did you use to get it to work, and what did it remove?

[16:09:01.0000] <Hixie>
(i'm doing it for something else)

[16:09:02.0000] <annevk>
Hixie: specifically because you use a custom diff the diff result you get no longer gives you the SVN revision numbers that where actually used (they can be different from input under some conditions)

[16:10:00.0000] <Hixie>
svn passes you the labels, so that's not a big deal

[16:10:01.0000] <Hixie>
but in this case it doesn't matter for me

[16:10:02.0000] <annevk>
oh, if svn does that maybe we can make it work somehow

[16:10:03.0000] <annevk>
anyway

[16:11:00.0000] <annevk>
I created diffwrap.sh

[16:11:01.0000] <annevk>
contains

[16:11:02.0000] <annevk>
#!/bin/sh

[16:11:03.0000] <annevk>
diff -u -F '<h[1-6]' ${6} ${7}

[16:11:04.0000] <annevk>
and then

[16:11:05.0000] <annevk>
the svn diff command becomes

[16:11:06.0000] <annevk>
svn diff --diff-cmd ./diffwrap.sh -r

[16:11:07.0000] <annevk>
and after -r your revision numbers

[16:12:00.0000] <Hixie>
add "-L {$} -L {5}" to your diff arguments, that should get you the labels right iirc

[16:12:01.0000] <Hixie>
er

[16:12:02.0000] <Hixie>
{$4} and {$5} respectively

[16:12:03.0000] <Hixie>
er

[16:12:04.0000] <Hixie>
{$3}

[16:12:05.0000] <Hixie>
not 4

[16:12:06.0000] <Hixie>
probably

[16:12:07.0000] <Hixie>
try echoing all the arguments to find out which you want :-P

[16:12:08.0000] <Hixie>
anyway

[16:12:09.0000] <Hixie>
why isn't this working for me then

[16:13:00.0000] <annevk>
I don't want to know what is passed to svn diff btw

[16:13:01.0000] <annevk>
I want to know what svn diff ended up getting

[16:13:02.0000] <annevk>
e.g. if I just pass in revFrom

[16:13:03.0000] <Hixie>
yes, i understand

[16:13:04.0000] <annevk>
k

[16:13:05.0000] <AryehGregor>
Wait, wait, wait, wait.  Are ES people using "globalization" as a synonym for "localization"?  That's got to be the most confusing thing ever.

[16:13:06.0000] <annevk>
did you 755 on diffwrap.sh?

[16:13:07.0000] <Hixie>
so i'm doing  svn diff source --diff-cmd 'diff' -x "-u6 -F '<h[1-6]'"

[16:13:08.0000] <Hixie>
instead of using a wrapper

[16:14:00.0000] <annevk>
you need the wrapper

[16:14:01.0000] <Hixie>
but the -F thing isn't working right

[16:14:02.0000] <zewt>
AryehGregor: i don't know, but those words mean utterly different things

[16:14:03.0000] <Hixie>
why?

[16:14:04.0000] <AryehGregor>
zewt, do they?  I've never heard "globalization" used with respect to software.

[16:14:05.0000] <annevk>
Hixie: Mike told me to read http://svnbook.red-bean.com/en/1.2/svn.advanced.externaldifftools.html

[16:14:06.0000] <AryehGregor>
Only "localization" and "internationalization".

[16:14:07.0000] <annevk>
Hixie: I didn't and just followed his instructions

[16:14:08.0000] <annevk>
Hixie: but I assume it's explained there

[16:14:09.0000] <zewt>
it has no particular meaning in the field, but as a word it has no relation to "localization" that i know

[16:15:00.0000] <Hixie>
annevk: looks like that's out of date. svn has a -x argument now to pass arguments to diff.

[16:16:00.0000] <annevk>
oh

[16:16:01.0000] <annevk>
dunno then

[16:16:02.0000] <annevk>
/me -> bed

[16:16:03.0000] <annevk>
nn

[16:17:00.0000] <Hixie>
nn

[16:18:00.0000] <Hixie>
wtf

[16:19:00.0000] <Hixie>
svn diff source --diff-cmd 'diff' -x "-u6 -F=<"    works fine

[16:19:01.0000] <Hixie>
svn diff source --diff-cmd 'diff' -x "-u6 -F=<h"    shows no function

[16:19:02.0000] <Hixie>
svn diff source --diff-cmd 'diff' -x "-u6 -F<h"   shows no function

[16:21:00.0000] <AryehGregor>
Maybe <h is interpreted as "use 'h' as the input file"?  Try more quoting.

[16:21:01.0000] <AryehGregor>
/me doesn't know if this is being passed to a shell somewhere

[16:22:00.0000] <Hixie>
svn diff source --diff-cmd 'diff' -x "-u6 --show-function-line=<h[1-6]" works

[16:25:00.0000] <AryehGregor>
Curious.

[16:25:01.0000] <AryehGregor>
What about: "-u6 --show-function-line='<h'"

[16:27:00.0000] <Hixie>
dunno, once it started working i moved on :-)

[16:28:00.0000] <Hixie>
ok the topics i have so far are: ['Canvas','HTML','HTML Syntax and Parsing','Microdata','Offline Web Applications','Server-Sent Events','Video Text Tracks','Video and Audio','Web Storage','Web Workers','WebSocket API']

[16:28:01.0000] <Hixie>
any other topics i should add?

[16:29:00.0000] <AryehGregor>
Do you have some particular reason for picking that granularity?  Implementers normally work on extremely specific sets of things, no?

[16:30:00.0000] <AryehGregor>
To be fair, I can think of some people who are interested specifically in some of those topics.

[16:30:01.0000] <AryehGregor>
/me doesn't need this anyway, just looks at all the revisions

[16:30:02.0000] <Hixie>
well the video and track ones were requested

[16:30:03.0000] <Hixie>
and the others map to what i already had annotated for other reasons :-)

[16:31:00.0000] <AryehGregor>
Good strategy.

[16:54:00.0000] <Hixie>
ok you can now subscribe to specific topics

[17:15:00.0000] <Hixie>
i sent a mail to the list describing how

[18:02:00.0000] <jwalden>
zewt: re animated tab icons, I wonder if that's perhaps a use case for an attribute to put on <img> (well, its <xul:image> brother, but really <img>) to disable image animation; not a good use case, but perhaps there are use cases which would better fit on the actual web

[18:07:00.0000] <zewt>
jwalden: https://bugzilla.mozilla.org/show_bug.cgi?id=653035

[18:08:00.0000] <zewt>
(which was met with deafening crickets)

[18:12:00.0000] <jwalden>
zewt: I think the place to propose that would be www-style, more likely

[18:17:00.0000] <zewt>
(no, because all of the use cases are UA-specific)

[19:26:00.0000] <MikeSmith>
zcorpan: needsinfo I created because under the current regime I don't officially have authority to move other editors' bugs to resolved

[19:26:01.0000] <MikeSmith>
so I didn't want to move others' bugs to resolved and have somebody call process foul

[19:36:00.0000] <Hixie>
MikeSmith: want me to go through them and mark then NEEDSINFO?

[19:37:00.0000] <MikeSmith>
yeah, sure

[19:37:01.0000] <MikeSmith>
if you have time

[19:37:02.0000] <MikeSmith>
there's about 40 of them at this point, I think

[19:37:03.0000] <MikeSmith>
so I seen you started marking up the spec with topic annotations

[19:38:00.0000] <MikeSmith>
I think that'll be useful

[19:38:01.0000] <Hixie>
yeah see whatwg mail

[19:38:02.0000] <MikeSmith>
ah, ok

[19:38:03.0000] <MikeSmith>
/me is at 295 unread in his inbox right now

[19:39:00.0000] <MikeSmith>
a few hours ago annevk was trying out that diff thing I suggested

[19:39:01.0000] <MikeSmith>
for web-apps-tracker

[19:39:02.0000] <MikeSmith>
and got it working

[19:39:03.0000] <Hixie>
yeah i used that for this too

[19:39:04.0000] <MikeSmith>
ah cool

[19:39:05.0000] <MikeSmith>
annevk got it working but ran into a problem caused by a side effect of it

[19:40:00.0000] <MikeSmith>
so hopefully he can figure out some way to get around that

[19:40:01.0000] <Hixie>
yeah we spoke about it

[19:40:02.0000] <MikeSmith>
ah, OK

[19:42:00.0000] <Hixie>
http://lists.whatwg.org/htdig.cgi/whatwg-whatwg.org/2011-November/033946.html

[19:43:00.0000] <Hixie>
annevk: if you want me to include the affected topics in my html5.org ping, let me know

[19:43:01.0000] <Hixie>
i should probably find a way to put them in the checkin comment, too

[19:43:02.0000] <MikeSmith>
/me finishes reading scrollback about the diff stuff

[19:44:00.0000] <MikeSmith>
didn't know about -x

[19:44:01.0000] <MikeSmith>
AryehGregor: yeah, that use of "globalization" is misguided

[19:45:00.0000] <MikeSmith>
that is what TC39 is calling their locales API

[19:45:01.0000] <MikeSmith>
which I guess is probably the context for why you mentioned it

[19:46:00.0000] <MikeSmith>
it's kind of like when people started calling themselves "serial entrepreneurs"

[19:46:01.0000] <MikeSmith>
and now serial whatevers

[19:47:00.0000] <MikeSmith>
when not just a few years ago the only context for using "serial" was in serial murderer or serial some-other-criminal-type

[20:03:00.0000] <zewt>
MikeSmith: i tend to assume "attention grab" when people don't use the same word for something that the rest of living english-speaking humanity uses

[20:04:00.0000] <MikeSmith>
hmm

[20:04:01.0000] <MikeSmith>
yeah

[20:04:02.0000] <MikeSmith>
there is that too

[20:04:03.0000] <MikeSmith>
but I don't think they are consciously doing it for that reason

[20:04:04.0000] <MikeSmith>
they are just naively saying, Hey, there's a word that sounds good

[20:05:00.0000] <zewt>
if people are implementing a localization framework who don't even know the word "localization", i'd be very worried

[20:05:01.0000] <MikeSmith>
without taking time to consider how the word it normally used in practice and what negative connotations it might have

[20:05:02.0000] <MikeSmith>
no, they know the word localization

[20:05:03.0000] <MikeSmith>
I think it's that what they are producing is not strictly about localization

[20:06:00.0000] <MikeSmith>
it's more about what normally called "locales" support

[20:06:01.0000] <MikeSmith>
I guess

[20:06:02.0000] <MikeSmith>
and it seems like until recently most everybody had been calling the JS thing "The Locales API"

[20:24:00.0000] <zewt>
locales is a standard part of localization

[20:24:01.0000] <zewt>
not to state too much the obvious :)

[21:46:00.0000] <heycam>
annevk, yeah I would say hold off on cosmetic changes like dropping "attribute" so as to avoid churning lots of specs for little gain.

[21:47:00.0000] <heycam>
AryehGregor, thanks for filing this bunch of bugs recently, btw. probably can't get to them until next week or later due to https://twitter.com/#!/heycam/status/138489725102211073

[22:05:00.0000] <Hixie>
heycam++ on not changing webidl in backwards-incompatible ways

[22:05:01.0000] <Hixie>
i have real problems to work on and don't need make-work

[23:26:00.0000] <matjas>
zcorpan told me this the other day: “a-zA-Z1-9 and = after an entity without semicolon inside an attribute makes the entity get unconsumed and emitted as text”

[23:26:01.0000] <matjas>
where can i find that in the spec?

[23:29:00.0000] <MikeSmith>
matjas: you looked through http://www.whatwg.org/specs/web-apps/current-work/multipage/tokenization.html#consume-a-character-reference already?

[23:30:00.0000] <MikeSmith>
the middle of the "Anything else" part

[23:31:00.0000] <matjas>
“If the character reference is being consumed as part of an attribute, and the last character matched is not a U+003B SEMICOLON character (;), and the next character is either a U+003D EQUALS SIGN character (=) or in the range U+0030 DIGIT ZERO (0) to U+0039 DIGIT NINE (9), U+0041 LATIN CAPITAL LETTER A to U+005A LATIN CAPITAL LETTER Z, or U+0061 LATIN SMALL LETTER A to U+007A LATIN SMALL LETTER

[23:31:01.0000] <matjas>
 Z, then, for historical reasons, all the characters that were matched after the U+0026 AMPERSAND character (&) must be unconsumed, and nothing is returned.”

[23:31:02.0000] <matjas>
thanks, MikeSmith!

[23:31:03.0000] <MikeSmith>
cheers

[23:40:00.0000] <MikeSmith>
getting support for command element and API into webkit not looking so good

[23:40:01.0000] <MikeSmith>
https://lists.webkit.org/pipermail/webkit-dev/2011-November/018662.html

[23:41:00.0000] <MikeSmith>
at least not as currently spec'ed

[00:32:00.0000] <annevk>
there's a benefit to cleaning up IDL syntax too, but mkay

[00:33:00.0000] <annevk>
Hixie: CANVAS topic should include the element

[03:58:00.0000] <annevk>
smaug____: do you know the CORS code a little bit?

[03:58:01.0000] <annevk>
smaug____: I wonder how Mozilla implemented the Content-Type stuff

[05:21:00.0000] <annevk>
non-living standards strike again: http://www.ietf.org/mail-archive/web/websec/current/msg00846.html

[05:28:00.0000] <annevk>
okay event delegation is neat

[05:42:00.0000] <jgraham>
annevk: What in particular?

[05:47:00.0000] <annevk>
jgraham: ?

[05:47:01.0000] <bga_>
lol xslt! http://www.meta-language.net/sample.html

[05:48:00.0000] <AryehGregor>
heycam|away, no rush.  It's not blocking my test writing; I've just got comments in the code pointing out what I should look at when the bugs are resolved.

[05:52:00.0000] <jgraham>
annevk: What do you mean by "event delegation". Or what part of it is neat? jQuery seems to have an API for attaching an event listener to a bunch of elements which was called "delegate" but afaict "delegation" is just having one event handler that deals with events coming from multiple nodes in the subtree of the node to which the handler is attached

[05:52:01.0000] <jgraham>
But possibly I don't understand the terminology here

[05:53:00.0000] <annevk>
see the API proposal on www-dom

[05:56:00.0000] <jgraham>
Oh, so the important point of the API proposal is matching the nodes on which you actually care about the event is baked in?

[06:17:00.0000] <annevk>
jgraham: euhm, the important point is that can catch events on objects inserted at any point in time, without having to explicitly insert listeners on those objects and without having to do a lot of filtering yourself

[06:25:00.0000] <jgraham>
annevk: Right, the "without having to do a lot of filtering yourself" is what I said about matching the right nodes being baked in

[06:33:00.0000] <annevk>
jgraham: ah, "baked in" threw me of

[07:42:00.0000] <AryehGregor>
Hixie, HTML has [OverrideBuiltins] partial interface Document { . . . }, which WebIDL doesn't currently allow.  What's the intent?  That the properties in that partial interface should override builtins, but the ones DOM4 defines for Document should not?  Is this how implementations behave?

[08:01:00.0000] <hsivonen>
http://occupyhtml.org/ some people still like plug-ins

[08:03:00.0000] <bga_>
plugins is ok

[08:09:00.0000] <annevk>
MikeSmith: are you there?

[08:16:00.0000] <jarek__>
why {term} is defined in CSS2.1 as:

[08:16:01.0000] <jarek__>
[ NUMBER S* | PERCENTAGE S* | LENGTH S* | EMS S* | EXS S* | ANGLE S* |  TIME S* | FREQ S* ]

[08:16:02.0000] <jarek__>
| STRING S* | IDENT S* | URI S* | hexcolor | function

[08:16:03.0000] <jarek__>
and not as:

[08:17:00.0000] <jarek__>
[ NUMBER S* | PERCENTAGE S* | LENGTH S* | EMS S* | EXS S* | ANGLE S* |  TIME S* | FREQ S* | STRING S* | IDENT S* | URI S* | hexcolor | function]

[08:17:01.0000] <jarek__>
how is that different?

[08:17:02.0000] <jarek__>
I mean, why the first part is between [] brackets?

[08:22:00.0000] <divya>
because those are length units

[08:22:01.0000] <divya>
the rest are not

[08:24:00.0000] <jarek__>
/me searches for definition of length unit

[08:27:00.0000] <divya>
http://dev.w3.org/csswg/css3-values/

[08:27:01.0000] <jarek__>
in CSS2.1 padding is defined like this:

[08:27:02.0000] <jarek__>
‘padding-top’ <length> | <percentage>

[08:28:00.0000] <jarek__>
so this grouping does not make sense :/

[08:31:00.0000] <jarek__>
divya: btw, I have read your article on CSS vocabulary last week, great writing

[08:31:01.0000] <divya>
thanks jarek__!

[08:38:00.0000] <AryehGregor>
What's the difference in WebIDL between an implements statement, and using a partial interface?

[08:38:01.0000] <AryehGregor>
Just that you can save some typing if you want to add the same members to multiple interfaces?

[08:40:00.0000] <annevk>
is implements automatically NoInterfaceObject these days?

[08:41:00.0000] <AryehGregor>
Nope.

[08:41:01.0000] <AryehGregor>
Seems not.

[08:41:02.0000] <AryehGregor>
So that's a difference, yeah, but is it a desirable one?

[08:41:03.0000] <annevk>
not really

[08:42:00.0000] <annevk>
but implements can be useful if you define something like Workers and you want to expose a bunch of existing stuff

[08:43:00.0000] <annevk>
maybe they should be defined as "implementable interface Foo { }"

[08:43:01.0000] <annevk>
and then implements Foo gives the same semantics as partial

[08:44:00.0000] <annevk>
and Foo is just some name

[09:24:00.0000] <Hixie>
AryehGregor: the [OverrideBuiltins] should be on the DOM Document interface

[09:24:01.0000] <AryehGregor>
Hixie, so DOM4 should add [OverrideBuiltins] to the original interface, and you should remove it from the partial interface?

[09:24:02.0000] <AryehGregor>
Incidentally, preliminary HTML IDL tests: http://w3c-test.org/html/tests/submission/AryehGregor/interfaces.html

[09:27:00.0000] <Hixie>
AryehGregor: yeah

[09:28:00.0000] <AryehGregor>
Hixie, except the getter is defined in HTML, and OverrideBuiltins is only allowed to appear on an interface with a getter . . .

[09:28:01.0000] <AryehGregor>
/me isn't sure what the right way is to handle that

[09:29:00.0000] <dglazkov>
good morning, Whatwg!

[09:30:00.0000] <annevk>
AryehGregor: the right way to handle that would be to file a bug on heycam|away :)

[09:30:01.0000] <AryehGregor>
/me does so

[09:30:02.0000] <Hixie>
AryehGregor: partial interfaces are just an editorial detail, Document has a getter, whether it's defined on the block with 'partial' or not

[09:31:00.0000] <AryehGregor>
Editorially, that violates the fiction that DOM4 doesn't depend on HTML.

[09:32:00.0000] <Hixie>
why?

[09:32:01.0000] <Hixie>
oh because you need a getter

[09:32:02.0000] <Hixie>
hm

[09:33:00.0000] <AryehGregor>
Right.

[09:33:01.0000] <Hixie>
let it be heycam's roblem :-)

[09:34:00.0000] <annevk>
I looked at CORS again today to fix various issues

[09:34:01.0000] <annevk>
it really needs to be rewritten at some point :(

[09:35:00.0000] <annevk>
the positive thing here is that I've learned something the past couple of years

[09:35:01.0000] <annevk>
so there's that

[09:35:02.0000] <Hixie>
annevk: we should merge things like fetch, cors, maybe mimesniff, and various others at some point, but i highly recommend waiting a few years

[09:36:00.0000] <annevk>
yeah merging fetch was coming to mind but indeed

[09:36:01.0000] <annevk>
patience

[09:36:02.0000] <AryehGregor>
http://www.w3.org/Bugs/Public/show_bug.cgi?id=14913

[09:36:03.0000] <annevk>
AryehGregor++

[09:39:00.0000] <AryehGregor>
Hixie, you have partial interface URL, but I don't see any reference to the full interface.

[09:39:01.0000] <Hixie>
yeah

[09:39:02.0000] <Hixie>
it doesn't exist yet

[09:40:00.0000] <AryehGregor>
That seems like a bit of a spec bug.

[09:40:01.0000] <AryehGregor>
/me files it so he can put the bug number in his tests as a comment

[09:41:00.0000] <annevk>
AryehGregor: http://dvcs.w3.org/hg/url/raw-file/tip/Overview.html

[09:41:01.0000] <annevk>
Hixie: ^^

[09:41:02.0000] <annevk>
I asked MikeSmith to define URL parsing in that spec too

[09:42:00.0000] <AryehGregor>
LGTM, but we need a reference.  Also, that IDL itself doesn't parse, but that's a separate issue.

[09:42:01.0000] <annevk>
it's abarth's Google Docs document converted to HTML by me

[09:42:02.0000] <annevk>
I might have made some mistakes

[09:42:03.0000] <AryehGregor>
interface [Replaceable] URL {

[09:42:04.0000] <AryehGregor>
That looks like it's not your mistake.  :)

[09:43:00.0000] <AryehGregor>
(easily fixable, though)

[09:43:01.0000] <Hixie>
ah, cool, it exists now

[09:44:00.0000] <Hixie>
if you've filed a bug on me to update the html spec to point to that spec, thanks

[09:45:00.0000] <annevk>
I think that spec should eventually define Syntax/Parsing/Model/API

[09:45:01.0000] <AryehGregor>
I did, yeah.

[09:45:02.0000] <annevk>
for URLs

[09:45:03.0000] <AryehGregor>
I didn't give the spec URL, though.

[09:48:00.0000] <AryehGregor>
So if I'm testing that document.body is an HTMLBodyElement and document.head is an HTMLHeadElement, does it make sense to repeat all the tests for Node/Element/HTMLElement for both objects?

[09:48:01.0000] <AryehGregor>
(for instance)

[09:48:02.0000] <AryehGregor>
That means they'd all be run once for every interface that extends HTMLElement.

[09:48:03.0000] <AryehGregor>
Since I'm testing one of each element type.

[09:48:04.0000] <AryehGregor>
That seems like a lot of repetition.

[09:50:00.0000] <AryehGregor>
It seems like it makes more sense to only do the tests for the bottommost interface if I've tested the higher ones, at least for most of the element types.

[09:51:00.0000] <jgraham>
AryehGregor: Yeah, having huge numbers of tests that every HTML*Element is also an Element is just a waste of entropy

[09:52:00.0000] <AryehGregor>
And that it's an HTMLElement, and a Node.

[09:52:01.0000] <jgraham>
Indeed

[09:52:02.0000] <AryehGregor>
However, we do want to test that both Document and Text are Nodes, for instance.

[09:53:00.0000] <AryehGregor>
So I'll have to make it configurable somehow.

[09:54:00.0000] <AryehGregor>
Oh, so things like WindowBase64 are so that workers can implement them too, right?  Interesting.

[09:54:01.0000] <AryehGregor>
/me will have to support that

[09:57:00.0000] <Hixie>
AryehGregor: re your mail about my crappy checkin comments, I've added a line to the checkin comment that lists the affected topics

[09:57:01.0000] <Hixie>
AryehGregor: it won't be perfect, certainly at first where a lot of the time it'll just say "Affected topics: HTML"

[09:57:02.0000] <Hixie>
AryehGregor: but it's a  start

[09:57:03.0000] <AryehGregor>
Hixie, is it on the first line?  If not, it won't be visible to anyone reading commit-watchers unless they look at the actual e-mail instead of just the subject.

[09:58:00.0000] <Hixie>
last line. If I make it the first line it'll be the only thing in the e-mail subject.

[09:58:01.0000] <AryehGregor>
For non-editorial changes, you can usually figure out the general subject from the first line of the commit summary.

[09:59:00.0000] <Hixie>
yeah

[10:00:00.0000] <AryehGregor>
As I said, it's not a big deal for me, I just glance at all of them.

[10:10:00.0000] <AryehGregor>
You know what's fun?  When my tests call alert() with no arguments because that's supposed to throw, and WebKit doesn't throw but instead alerts the empty string, interrupting the tests.

[10:11:00.0000] <AryehGregor>
. . . then it hangs.  I wonder what the last method it called was.

[10:13:00.0000] <AryehGregor>
window.open is fun too.

[10:14:00.0000] <AryehGregor>
("pop-up blocked")

[10:23:00.0000] <zewt>
sort of need browser help to test some stuff properly...

[10:24:00.0000] <zewt>
eg. a (restricted) api to fire keyboard/mouse input as if it was real user input, replace modal things (alert, file pickers) with a callback, that sort of thing

[10:24:01.0000] <zewt>
i assume browsers do all that for their internal testing anyway

[10:30:00.0000] <AryehGregor>
HTML defines interface Function?  o_O

[10:30:01.0000] <AryehGregor>
WTF?

[10:37:00.0000] <Hixie>
that predates WebIDL, i think. As far as I know, though, WebIDL still doesn't provide a type equivalent to that Function interface.

[10:40:00.0000] <dglazkov>
heycam: what's the new way to describe [Supplemental] in WebIDL?

[10:41:00.0000] <dglazkov>
Window implements SupplementalInterface?

[10:41:01.0000] <Hixie>
dglazkov: depends what you want exactly

[10:41:02.0000] <Hixie>
dglazkov: what are you trying to do?

[10:41:03.0000] <dglazkov>
I want to add "is" attribute to HTMLElement

[10:42:00.0000] <Hixie>
then you want a partial interface

[10:42:01.0000] <dglazkov>
oh cool

[10:42:02.0000] <dglazkov>
thanks

[10:51:00.0000] <AryehGregor>
http://www.w3.org/Bugs/Public/show_bug.cgi?id=14916

[11:19:00.0000] <dglazkov>
does w3 have a way to create localized bug trackers for specs?

[11:19:01.0000] <dglazkov>
it would be nice to have all component model todos organized as bugs.

[11:21:00.0000] <AryehGregor>
dglazkov, you can request a component in their Bugzilla.

[11:22:00.0000] <dglazkov>
a component model component

[11:22:01.0000] <dglazkov>
will adding bugs not spam mailing lists?

[11:23:00.0000] <dglazkov>
or is that only for certain components?

[11:23:01.0000] <AryehGregor>
I don't know the details.

[11:24:00.0000] <AryehGregor>
I think it's configurable per-component which lists get notified.

[11:27:00.0000] <AryehGregor>
. . . location.hasOwnProperty is undefined in Gecko?  Really?

[11:31:00.0000] <smaug____>
AryehGregor: .location is so bizarre object that I don't expect much sanity in any implementation :)

[12:02:00.0000] <Hixie>
i rather like this new notification system

[13:14:00.0000] <sicking>
annevk: ping

[13:16:00.0000] <TabAtkins>
jarek: The grouping doesn't actually *do* anything.  I don't know why it exists, but it's meaningless, since they're all using the | separator.

[13:17:00.0000] <jarek>
TabAtkins: I see, thanks letting me know

[13:19:00.0000] <TabAtkins>
jarek: No problem. All of the grammar combinators like that are associative, so grouping only has an effect when you're mixing combinators.

[13:29:00.0000] <annevk>
sicking: sort of here

[13:29:01.0000] <annevk>
sicking: gaming

[13:30:00.0000] <sicking>
annevk: so, ContentType is always added to the list of custom headers

[13:31:00.0000] <sicking>
annevk: but the server still doesn't need to send "Content-Type" in ac-response-headers if the value is "text/plain" "multipart/form-data" etc, right?

[13:31:01.0000] <sicking>
annevk: nor do we pre-flight if it's one of those values, right?

[13:31:02.0000] <annevk>
correct

[13:32:00.0000] <annevk>
the only requirement that changed is that the server needs to set Content-Type if it wants to handle it

[13:32:01.0000] <annevk>
in so far you can make server requirements

[13:33:00.0000] <annevk>
it's more advice I guess

[13:34:00.0000] <rniwa>
AryehGregor: ping

[13:38:00.0000] <annevk>
sicking: I don't think we want to change any UA requirements in the spec

[13:46:00.0000] <Hixie>
MikeSmith: i'm not going to touch the bugs that aren't assigned to me (counting contributor@ bugs as being mine)

[13:47:00.0000] <divya>
MikeSmith: Lemme know when you are here. got to ask you smthing

[13:49:00.0000] <sicking>
annevk: what do you mean by "if it wants to handle it"?

[13:51:00.0000] <annevk>
the server section is currently written assuming a list of header names

[13:52:00.0000] <annevk>
we could have the weird content-type special case there too

[13:52:01.0000] <annevk>
but currently it's not there

[13:53:00.0000] <annevk>
just read the diff or the section, that's easier prolly :)

[13:56:00.0000] <Ms2ger>
annevk, web-apps-tracker frontpage seems to be out of date

[14:00:00.0000] <sicking>
annevk: oh, you're saying that the spec now recommends that if the server want's the client to be able to set "Content-Type", then it should add it to the acah-header. No matter what values it wants to allow

[14:01:00.0000] <annevk>
sicking: basically

[14:01:01.0000] <annevk>
Ms2ger: did source change?

[14:01:02.0000] <Ms2ger>
Yes

[14:01:03.0000] <Ms2ger>
6829  [Authors] [Conformance Checkers] [Gecko] [Internet Explorer] [Opera] [Webkit] [Tools] extend timezone format to also allow omitting the colon 2011-11-18 23:22

[14:01:04.0000] <Ms2ger>
Is the newest I get

[14:02:00.0000] <sicking>
annevk: hmm.. we should probably add the exception there too

[14:02:01.0000] <sicking>
annevk: for people using the spec as documentation. Also so that people don't think they are safe if they don't add it

[14:03:00.0000] <annevk>
feel free to suggest a rewrite

[14:04:00.0000] <annevk>
few people did give feedback on that section

[14:04:01.0000] <annevk>
so I guess it's of use to some

[14:04:02.0000] <annevk>
but I don't really like it

[14:05:00.0000] <annevk>
Ms2ger: no idea what that can be

[14:05:01.0000] <Ms2ger>
/me hopes it'll go away on itself, then

[14:05:02.0000] <annevk>
doubt it

[14:08:00.0000] <annevk>
Ms2ger: http://svn.whatwg.org/webapps/ says the same as web-apps-tracker

[14:10:00.0000] <annevk>
sicking: also, I think the current text is fine

[14:10:01.0000] <annevk>
sicking: it explains the whole thing

[14:28:00.0000] <timeless>
Ms2ger / annevk : if i stuck up minutes for tpac webapps mon/tue + comp(wed), would any of you proof them?

[14:29:00.0000] <Ms2ger>
Perhaps

[14:29:01.0000] <Ms2ger>
But not tonight

[14:30:00.0000] <timeless>
so, should i send them direct to you?

[14:30:01.0000] <timeless>
/me doesn't have particularly handy web servers

[14:30:02.0000] <Ms2ger>
Sure

[14:33:00.0000] <timeless>
ok, i presume you won't be doing scribe edits, so i'm just sending the files as i expect to commit them

[14:34:00.0000] <timeless>
enjoy

[14:34:01.0000] <timeless>
/me crosses task off todo list for a bit

[14:34:02.0000] <timeless>
that just leaves expenses

[14:56:00.0000] <annevk>
http://www.reuters.com/article/2011/11/18/us-hp-lane-idUSTRE7AH2DK20111118 lol

[14:56:01.0000] <annevk>
that photo

[14:58:00.0000] <TabAtkins>
annevk: What, the HP guy using an Apple?

[15:01:00.0000] <timeless>
annevk: he should use a WebOS pad?

[15:02:00.0000] <timeless>
it looks like he's trying not to laugh

[15:02:01.0000] <timeless>
MikeSmith: ping ping

[15:43:00.0000] <MikeSmith>
timeless: here now


2011-11-24
[16:04:00.0000] <timeless>
MikeSmith: still here?

[16:04:01.0000] <timeless>
the message where he wrote "to text/plain" was when he stopped using rich text email messages

[16:05:00.0000] <timeless>
i'm not sure what mail client you're using

[16:05:01.0000] <timeless>
the archives seem to only show the plain text version of messages (kinda good, somewhat problematic when referencing rich versions)

[16:08:00.0000] <MikeSmith>
ah

[16:08:01.0000] <MikeSmith>
I see

[16:09:00.0000] <MikeSmith>
I don't read the archives, so didn't see the context

[16:09:01.0000] <MikeSmith>
and I read all my mail in mutt, so it's all plain text to me anyway :)

[16:14:00.0000] <MikeSmith>
/me finishes reading scrollback

[16:15:00.0000] <MikeSmith>
Hixie: yeah, wasn't expecting that you'd touch the ones not assigned to you

[16:16:00.0000] <MikeSmith>
thanks for checking those

[16:16:01.0000] <MikeSmith>
oh

[16:17:00.0000] <MikeSmith>
I guess you haven't actually gotten to them yet

[16:17:01.0000] <MikeSmith>
so, then, thanks in advance :)

[16:19:00.0000] <timeless>
MikeSmith: do you really want me to reply to www-archive?

[16:20:00.0000] <MikeSmith>
timeless: no

[16:20:01.0000] <MikeSmith>
no need

[16:20:02.0000] <MikeSmith>
it's clear now

[16:20:03.0000] <timeless>
well, it's clear

[16:20:04.0000] <timeless>
but i still need someone to smack the rest of the googlers

[16:20:05.0000] <timeless>
can you do that for me?

[16:20:06.0000] <timeless>
please?

[16:20:07.0000] <MikeSmith>
nope

[16:20:08.0000] <timeless>
(that includes the chromium.org one)

[16:20:09.0000] <MikeSmith>
because I think the solution to that problem is for you and everybody else to read your mail in better mail client

[16:21:00.0000] <MikeSmith>
as I do

[16:21:01.0000] <MikeSmith>
it's like, if there's somebody annoying with you in the same room, and you close your eyes, that annoying person goes away

[16:23:00.0000] <timeless>
/me sighs

[16:23:01.0000] <timeless>
unhelpful

[16:24:00.0000] <MikeSmith>
well, seriously, I wish people would not send mail that way too

[16:24:01.0000] <MikeSmith>
but I do not want to become the netiquette police

[16:24:02.0000] <MikeSmith>
I think the message you sent to the list was great

[16:25:00.0000] <timeless>
yeah, i tried to provide a nice set of examples

[16:25:01.0000] <timeless>
sadly i screwed up and message 4 went to the wrong address and thus appeared out of order

[16:25:02.0000] <MikeSmith>
oh

[16:25:03.0000] <timeless>
i really did send it before 5

[16:26:00.0000] <MikeSmith>
anyway, that message of yours of course has a URL now so people on the list can point others to it when needed

[16:26:01.0000] <MikeSmith>
dude

[16:26:02.0000] <timeless>
yeah, i've already used it at least once

[16:26:03.0000] <timeless>
i still need to get used to that MID Thing

[16:26:04.0000] <timeless>
is it possible to have the mailing list web ui software provide MID links?

[16:26:05.0000] <MikeSmith>
you seem to be excessively worried about some of this kind of stuff lately

[16:27:00.0000] <MikeSmith>
timeless: yeah it's possible of course

[16:27:01.0000] <timeless>
could you ask the systeam for me?

[16:27:02.0000] <timeless>
/me wonders if that's the right team

[16:27:03.0000] <timeless>
oh, and whom was i supposed to send my magic script that figure out speakers and such? was that sys also?

[16:27:04.0000] <MikeSmith>
would be better if you asked yourself. they will listen to that more than me requesting it

[16:27:05.0000] <MikeSmith>
yeah

[16:28:00.0000] <timeless>
ok, mailto:sysreq@w3 ?

[16:28:01.0000] <MikeSmith>
yep

[16:28:02.0000] <MikeSmith>
but about the order you sent your messages in, I don't think anybody else would find that confusing and many probably would not even notice

[16:29:00.0000] <MikeSmith>
I think you need to try to do some things more randomly in your life

[16:29:01.0000] <MikeSmith>
make some arbitrary decisions

[16:29:02.0000] <MikeSmith>
or flip a coin

[16:29:03.0000] <MikeSmith>
or sometimes do the opposite of what you'd normally be inclined to do

[16:29:04.0000] <MikeSmith>
now and then

[16:34:00.0000] <AryehGregor>
I am entirely unsurprised that that's a course of action you would endorse.

[16:34:01.0000] <rniwa>
AryehGregor: hi

[16:34:02.0000] <AryehGregor>
rniwa, hi.

[16:35:00.0000] <rniwa>
AryehGregor: did you see the webkit bug I just cc-ed you on?

[16:35:01.0000] <AryehGregor>
rniwa, it's in my work inbox.  I'll look at it tomorrow.

[16:35:02.0000] <rniwa>
AryehGregor: ok

[16:36:00.0000] <rniwa>
AryehGregor: I think your editing API spec should match the behavior

[16:36:01.0000] <AryehGregor>
I'll get back to you on that.

[16:36:02.0000] <rniwa>
k

[16:44:00.0000] <MikeSmith>
rniwa: please be nice to the command api

[16:44:01.0000] <MikeSmith>
he needs your help

[16:44:02.0000] <rniwa>
MikeSmith: yeah

[16:45:00.0000] <rniwa>
MikeSmith: I want them

[16:45:01.0000] <rniwa>
MikeSmith: it's just that I don't feel like there have been enough discussions

[16:45:02.0000] <MikeSmith>
yeah, understood

[16:45:03.0000] <rniwa>
MikeSmith: e.g. most of webkit developers, etc... have never heard of command apis :(

[16:45:04.0000] <MikeSmith>
definitely needs some more attention

[16:45:05.0000] <rniwa>
yeah

[16:45:06.0000] <rniwa>
MikeSmith: I think they have a lot of good ideas

[16:45:07.0000] <rniwa>
MikeSmith: just needs some polishing

[16:46:00.0000] <rniwa>
MikeSmith: and to do that, it's important to address use cases, etc...

[16:46:01.0000] <MikeSmith>
yup

[16:46:02.0000] <rniwa>
I know some people (including myself) have a tendency to implement whatever spec says without doing the sanity check of the spec itself

[16:47:00.0000] <MikeSmith>
hmm, yeah, that's definitely not the way it should work

[16:47:01.0000] <rniwa>
MikeSmith: so there's a very interesting implication on accessibilty

[16:47:02.0000] <rniwa>
MikeSmith: good one actually

[16:47:03.0000] <MikeSmith>
yeah?

[16:47:04.0000] <MikeSmith>
how so?

[16:47:05.0000] <rniwa>
MikeSmith: if we expose "commands"

[16:47:06.0000] <rniwa>
MikeSmith: then it could be listed in context menu, etc...

[16:47:07.0000] <MikeSmith>
yeah

[16:47:08.0000] <rniwa>
MikeSmith: and assistant technology can provide a higher-level semantics of what an app does

[16:48:00.0000] <rniwa>
which is a superb solution to listing buttons and letting people figure out what those buttons do

[16:48:01.0000] <MikeSmith>
so the spec already does some of that by tying it in with accesskey

[16:48:02.0000] <rniwa>
also, you could imagine that if command has some human readable level such as "create a new note"

[16:49:00.0000] <rniwa>
then voice recognition software might be able to automatically execute that command

[16:49:01.0000] <rniwa>
when the user instructs it to do so

[16:49:02.0000] <rniwa>
MikeSmith: yeah, typing it to accessKey is nice

[16:50:00.0000] <rniwa>
MikeSmith: but we aren't so happy about how command's states are tied with the element that defines it

[16:50:01.0000] <MikeSmith>
yeah, there's a lot of utility that could be had from this feature, so it would be nice to see it getting some more scrutiny and refinement

[16:50:02.0000] <MikeSmith>
ah

[16:50:03.0000] <MikeSmith>
yeah

[16:50:04.0000] <rniwa>
MikeSmith: e.g. we had an idea to tie the command with execCommand's commands

[16:50:05.0000] <rniwa>
MikeSmith: and with tthat

[16:50:06.0000] <rniwa>
MikeSmith: you can also tie it to radio box, checkbox, etc... states

[16:51:00.0000] <MikeSmith>
OK

[16:51:01.0000] <rniwa>
MikeSmith: for example, you can imagine that if you have <input type="checkbox" command="bold">

[16:51:02.0000] <rniwa>
MikeSmith: then UA can automatically check this box when the command state is bold

[16:51:03.0000] <rniwa>
I mean when bold command's state is true

[16:51:04.0000] <MikeSmith>
yeah

[16:51:05.0000] <rniwa>
and uncheck when the state is false

[16:52:00.0000] <rniwa>
MikeSmith: we can apply similar mechanism to select, radio, etc...

[16:52:01.0000] <rniwa>
MikeSmith: from that perspective, the current design of ting the command state to the element

[16:52:02.0000] <rniwa>
and furthermore having inputelement-like checked state isnt' ideal

[16:53:00.0000] <rniwa>
because you may want to have multiple UI widgets referring to the same command

[16:53:01.0000] <rniwa>
e.g. <select command="color"><option>blue<option>green

[16:53:02.0000] <rniwa>
<

[16:53:03.0000] <rniwa>
</select>

[16:54:00.0000] <rniwa>
in this case, you want blue or green to be selected when color command's state is blue or green

[16:54:01.0000] <rniwa>
but in addition to this select element

[16:54:02.0000] <rniwa>
the same app may have another UI widget that has <input type="color">

[16:54:03.0000] <rniwa>
MikeSmith: and this one should automatically reflect whatever the current command value is

[16:55:00.0000] <MikeSmith>
OK

[16:55:01.0000] <rniwa>
MikeSmith: furthermore, we probably want to let authors to define and implement their own custom UI component

[16:55:02.0000] <rniwa>
MikeSmith: and those component should probably be able to be notified of command state's change

[16:55:03.0000] <rniwa>
MikeSmith: so we need some sort of registry mechanism

[16:55:04.0000] <rniwa>
MikeSmith: also we need to be able to scope commands

[16:56:00.0000] <rniwa>
e.g. many websites include WYSIWYG editors but commands available inside a editor are vastly different from those available outside the editor

[16:57:00.0000] <rniwa>
MikeSmith: but there's a lot of "data-binding" aspect here though

[16:57:01.0000] <MikeSmith>
yeah, so that gets into the components stuff

[16:57:02.0000] <rniwa>
right

[16:58:00.0000] <MikeSmith>
and maybe it's good to wait on the command things until components is further along

[16:58:01.0000] <rniwa>
MikeSmith: could be

[16:58:02.0000] <rniwa>
MikeSmith: but I think we can start the discussion

[16:58:03.0000] <rniwa>
MikeSmith: and get more attentions

[16:58:04.0000] <MikeSmith>
yeah

[16:58:05.0000] <rniwa>
MikeSmith: because we definitely need a good API to define toolbars, menus, and semantically connect those components

[16:59:00.0000] <rniwa>
MikeSmith: I was hoping to get the discussion started by now but it seems like I've caught up by other stuff :(

[16:59:01.0000] <rniwa>
so maybe I'll do that in Jan

[16:59:02.0000] <MikeSmith>
yeah

[17:00:00.0000] <MikeSmith>
I think we should also plan to have another face to face meeting in the valley next spring

[17:00:01.0000] <rniwa>
MikeSmith: but this is definitely something I'll be interested in

[17:00:02.0000] <rniwa>
MikeSmith: oh that'll be nice :)

[17:00:03.0000] <rniwa>
though i'm sure google doesn't mind flying me over to anywhere if we can be productive like we were in this TPAC

[17:01:00.0000] <MikeSmith>
yeah, we need to do it for sure

[17:08:00.0000] <rniwa>
MikeSmith: anyway, I'm planning to work on command API in the coming months

[17:09:00.0000] <rniwa>
MikeSmith: it's just that i've been swamped by other work

[17:09:01.0000] <rniwa>
also I really want to get my undomanager ready for early adaptation by the end of the year

[17:19:00.0000] <zewt>
heh

[17:19:01.0000] <zewt>
gui text editors with broken undo are so much worse than a simple textbox editor that i almost don't know why gmail bothers

[17:20:00.0000] <zewt>
if i undo one more time in gmail, and have it revert a change a mile away without showing me what...

[17:20:01.0000] <MikeSmith>
yeah, please

[17:20:02.0000] <zewt>
then i have to redo, and (since it still doesn't show what changed) i just have to cross my fingers and hope

[18:19:00.0000] <MikeSmith>
so David Flanagan has his JS-based HTML parser working with node.js now

[18:19:01.0000] <MikeSmith>
https://twitter.com/#!/__DavidFlanagan/status/139512471949017088

[18:19:02.0000] <MikeSmith>
https://github.com/andreasgal/dom.js

[02:22:00.0000] <annevk>
MikeSmith: can I share your Google+ post on the WHATWG page?

[02:22:01.0000] <MikeSmith>
sure

[02:22:02.0000] <MikeSmith>
of course

[02:22:03.0000] <annevk>
MikeSmith: it's currently semi-private, but it seems just public info

[02:22:04.0000] <MikeSmith>
oh

[02:23:00.0000] <MikeSmith>
yeah, pretty much the only things I make private like that are when I don't think it's necessarily of interest to everybody in my circles

[02:23:01.0000] <MikeSmith>
so I have a "interested in browser stuff" circle that I post that too

[02:23:02.0000] <MikeSmith>
shit

[02:23:03.0000] <annevk>
hmm it seems I cannot share it

[02:23:04.0000] <MikeSmith>
big earthquake somewhere

[02:23:05.0000] <annevk>
I guess WHATWG is not in that circle

[02:23:06.0000] <annevk>
oh

[02:23:07.0000] <annevk>
:(

[02:24:00.0000] <MikeSmith>
lemme add it

[02:24:01.0000] <MikeSmith>
I thought it was

[02:24:02.0000] <MikeSmith>
hokkaido

[02:24:03.0000] <MikeSmith>
http://quake.twiple.jp/quake/view/20111124192542

[02:25:00.0000] <annevk>
/me I have a workaround I think

[02:25:01.0000] <MikeSmith>
hmm, I don't know how I can change a post to public after I posted it..

[02:26:00.0000] <annevk>
no workaround did not work

[02:26:01.0000] <MikeSmith>
ah, I see

[02:26:02.0000] <annevk>
I shared it with +WHATWG

[02:26:03.0000] <annevk>
but then +WHATWG cannot share it with the public

[02:27:00.0000] <MikeSmith>
hmm, I still don't see how I can change the original post to being public

[02:27:01.0000] <MikeSmith>
I guess I can't

[02:27:02.0000] <Workshiva>
You can't

[02:28:00.0000] <annevk>
it's all lost :)

[02:30:00.0000] <annevk>
MikeSmith: where do you normally put redirects for specs?

[02:30:01.0000] <annevk>
MikeSmith: in their parent directory?

[02:30:02.0000] <jgraham>
In which we discover the fundamental limitation of circles. They are great for solving the "I only want to share drunken photos with my friends" problem but totally useless for the "I publish on multiple topics but the audience for each topic is not the same"

[02:30:03.0000] <MikeSmith>
yeah, usually

[02:30:04.0000] <MikeSmith>
jgraham: yup

[02:31:00.0000] <annevk>
MikeSmith: might be easier for you actually

[02:31:01.0000] <MikeSmith>
OK

[02:32:00.0000] <MikeSmith>
XHR spec?

[02:32:01.0000] <annevk>
to redirect http://dev.w3.org/2006/webapi/XMLHttpRequest-2/ and http://dev.w3.org/2006/webapi/XMLHttpRequest/ to http://dvcs.w3.org/hg/xhr/raw-file/tip/Overview.html

[02:32:02.0000] <annevk>
yup

[02:38:00.0000] <Workshiva>
jgraham: Or rather, circles solve sender ACLs, not receiver filtering

[02:39:00.0000] <MikeSmith>
annevk: OK, done

[02:40:00.0000] <jgraham>
Workshiva: If you want to be all fancy about it :p

[02:42:00.0000] <Workshiva>
Maybe one day you'll be able to filter by hashtags

[03:00:00.0000] <hsivonen>
yay. HTML in XHR broke Wolfram Alpha

[03:02:00.0000] <hsivonen>
alos, having the HTML parser run uselessly on Gmail is not good

[03:02:01.0000] <hsivonen>
I'm leaning more and more towards supporting HTML only if responseType == "document"

[03:02:02.0000] <hsivonen>
to avoid opting all legacy in

[03:11:00.0000] <MikeSmith>
hsivonen: in what way does it run uselessly on Gmail?

[03:11:01.0000] <hsivonen>
MikeSmith: Gmail does XHR to a text/html resource and has been written before HTML in XHR existed

[03:12:00.0000] <annevk>
http://dvcs.w3.org/hg/xhr/raw-file/tip/Overview.html#specification-history

[03:12:01.0000] <hsivonen>
MikeSmith: so either they have written code that knows how to handle HTML in XHR in advance

[03:13:00.0000] <MikeSmith>
ah

[03:13:01.0000] <hsivonen>
MikeSmith: or HTML parsing happens uselessly and they use responseText anyway

[03:13:02.0000] <annevk>
lets make it "document" only

[03:13:03.0000] <MikeSmith>
I see

[03:13:04.0000] <hsivonen>
annevk: sold!

[03:14:00.0000] <annevk>
that way we don't need the weird async difference either

[03:14:01.0000] <smaug____>
"document" only sounds ok to me

[03:16:00.0000] <jgraham>
Oooh a bandwagon! I'll jump on!

[03:18:00.0000] <hsivonen>
smaug____: is it intentional that we don't throw for "document" in the sync mode yet?

[03:19:00.0000] <smaug____>
hsivonen: hmm, is there some patch waiting for landing..

[03:21:00.0000] <smaug____>
seems like so

[03:30:00.0000] <annevk>
MikeSmith: can you create a notifications repo that jgraham can access?

[03:30:01.0000] <MikeSmith>
sure

[03:30:02.0000] <annevk>
MikeSmith: "notifications" as a name seems fine

[03:31:00.0000] <annevk>
sweet

[03:43:00.0000] <MikeSmith>
http://dvcs.w3.org/hg/notifications/

[03:43:01.0000] <MikeSmith>
annevk: ↑

[03:43:02.0000] <MikeSmith>
with that I step out to get some food

[03:43:03.0000] <annevk>
thanks man

[03:46:00.0000] <jgraham>
MikeSmith: Cool, thanks

[06:34:00.0000] <annevk>
hsivonen: you around?

[06:35:00.0000] <annevk>
hsivonen: I wondered whether for http://dvcs.w3.org/hg/xhr/raw-file/tip/Overview.html#text-response-entity-body the only part that should be restricted to legacy is the XML handling

[06:44:00.0000] <annevk>
I will read your emails again instead of this lazy approach

[06:55:00.0000] <hsivonen>
annevk: I think step #4 should only apply for responseType == ""

[06:55:01.0000] <hsivonen>
annevk: I think it shouldn't apply to responseType == "text"

[06:55:02.0000] <hsivonen>
or chunked-text

[06:55:03.0000] <annevk>
right

[06:55:04.0000] <annevk>
I just made that change

[06:55:05.0000] <annevk>
(not pushed yet)

[06:55:06.0000] <hsivonen>
ok

[06:56:00.0000] <annevk>
now for document I will change that text/html only works for "document"

[06:56:01.0000] <hsivonen>
in other news, detecting HTML in XHR support is complicated: https://developer.mozilla.org/En/HTML_in_XMLHttpRequest#Feature_Detection

[06:56:02.0000] <hsivonen>
annevk: thanks

[06:56:03.0000] <annevk>
and then update the bug filed on HTML

[06:56:04.0000] <annevk>
or can you update that bug?

[06:56:05.0000] <annevk>
you probably know better what the HTML spec has to say

[06:57:00.0000] <hsivonen>
ok

[07:01:00.0000] <annevk>
I was afraid these changes would be much harder

[07:03:00.0000] <annevk>
hsivonen: the spec is updated, I just need add the more specific invocation for the HTML parser spec

[07:05:00.0000] <hsivonen>
I commented on the bug

[07:05:01.0000] <hsivonen>
annevk: thank you

[07:05:02.0000] <annevk>
thank you too!

[07:05:03.0000] <annevk>
:)

[07:06:00.0000] <annevk>
hsivonen: is the parser run with scripting disabled?

[07:07:00.0000] <hsivonen>
annevk: yes (as required by the spec draft I read!)

[07:07:01.0000] <annevk>
hsivonen: okay, I'll add that to the bug to make sure hixie considers that as an option

[07:09:00.0000] <annevk>
hsivonen: I sometimes wonder whether it should be "act as if scripting was on but do not actually run scripts" so you do not get unexpected <noscript> stuff, but I think it does not matter much and the current solution is arguably cleaner

[07:12:00.0000] <timeless>
hsivonen: you need to fix your page

[07:12:01.0000] <timeless>
it talks about XHR2

[07:12:02.0000] <timeless>
but annevk just spent time killing XHR2 :)

[07:16:00.0000] <annevk>
ah sorry about that

[07:16:01.0000] <annevk>
XHR will not have version numbers anymore

[07:16:02.0000] <annevk>
if it's up to me

[07:17:00.0000] <timeless>
annevk: you didn't do anything wrong, hsivonen just needs to fix it

[07:17:01.0000] <timeless>
although, it's a wiki, you could do it if you like :)

[07:17:02.0000] <timeless>
/me objects to wikis, they require creating more passwords which is annoying

[07:23:00.0000] <hsivonen>
timeless: good point

[07:23:01.0000] <hsivonen>
Living XHR

[07:24:00.0000] <hsivonen>
/me lands some XHR code before fixing the docs

[07:44:00.0000] <hsivonen>
timeless: I fixed the documentation

[07:45:00.0000] <timeless>
kinda

[07:45:01.0000] <timeless>
it should say "the X dated version" adds

[07:45:02.0000] <timeless>
otherwise it sounds tautological

[07:45:03.0000] <timeless>
The XMLHttpRequest specification adds HTML parsing support to XMLHttpRequest.

[07:46:00.0000] <timeless>
it doesn't actually need to says <Dated version>, but you roughly need to indicate that this happened during its evolution instead of just saying it added it to what seems like itself

[07:47:00.0000] <timeless>
and giving a date is moderately helpful for people trying to figure out if some browser not covered by a table at the bottom has a prayer of supporting it

[08:00:00.0000] <hsivonen>
timeless: I made the first sentence make more sense. Beyond that, it's a wiki. :-)

[08:06:00.0000] <AryehGregor>
Google Docs' selection handling is unbelievably messed up.

[08:06:01.0000] <AryehGregor>
Like: position cursor at beginning of line.  Shift+Down Arrow.  Ctrl-X.  Move to beginning of another line.  Ctrl-V.

[08:06:02.0000] <AryehGregor>
Result?  It prepends it to the second line instead of adding a new line before the current line.

[08:07:00.0000] <AryehGregor>
Same as if you did Shift+End instead of Shift+Down Arrow.

[08:07:01.0000] <AryehGregor>
And with RTL, arrows move in logical direction, not visual.  So the right arrow moves left and vice versa.  Which frankly might make some sense, but it's not what any other program in the universe does.

[08:08:00.0000] <AryehGregor>
If you're going to reinvent the wheel, is it too much to ask that you do it properly?  How is it that GNOME people are capable of doing all this stuff basically as people expect but Google isn't?

[08:08:01.0000] <AryehGregor>
/me grumbles

[08:10:00.0000] <annevk>
I omitted the SotD in the editor's draft: http://dvcs.w3.org/hg/xhr/raw-file/tip/Overview.html

[08:10:01.0000] <annevk>
and included "Participate:" similar to what WHATWG HTML uses

[08:11:00.0000] <timeless>
hsivonen: alright :)

[08:12:00.0000] <timeless>
AryehGregor: i was going to say "at least you aren't playing w/ RTL"

[08:12:01.0000] <annevk>
maybe I should omit abstract too

[08:12:02.0000] <timeless>
/me just filed some bugs about non English UI foolishness

[08:12:03.0000] <annevk>
yes I should

[08:12:04.0000] <timeless>
this app which is aware of the input method editor (on screen keyboard)

[08:12:05.0000] <AryehGregor>
timeless, I was dumping the text of my sheva berachos invitation in Google Docs for safe-keeping.

[08:13:00.0000] <timeless>
asked the user to enter text in English

[08:13:01.0000] <timeless>
but the IME only supports Hebrew (and has no way to switch)

[08:13:02.0000] <timeless>
or the IME only supports Arabic (and has no way to switch)

[08:14:00.0000] <timeless>
oh, and i haven't found a way to insert BiDi push markers w/ the keyboard

[08:14:01.0000] <timeless>
so I end up with stupid things like:

[08:14:02.0000] <AryehGregor>
timeless, the Google Translate app for Android is ingenious like that.  Translate from Hebrew to English . . . without being able to enter Hebrew!

[08:14:03.0000] <timeless>
4. In foo, select  CIBARA or .WERBEH

[08:14:04.0000] <timeless>
AryehGregor: that makes me feel so much better

[08:15:00.0000] <timeless>
/me likes not being alone

[08:15:01.0000] <AryehGregor>
(supposedly my version of Android natively supports Hebrew, but it actually doesn't)

[08:15:02.0000] <timeless>
lol

[08:15:03.0000] <AryehGregor>
(that will be more interesting when I move to Israel in a few months)

[08:15:04.0000] <AryehGregor>
(for now I use a third-party keyboard when necessary)

[08:15:05.0000] <timeless>
my BlackBerry thankfully has both Hebrew as a UI language and Hebrew for hardware and software keyboards

[08:15:06.0000] <timeless>
there are just a couple of rough edges

[08:15:07.0000] <timeless>
which are mostly things you'd *never* see

[08:16:00.0000] <timeless>
(hence me only spotting them now and not months ago)

[08:18:00.0000] <AryehGregor>
Yes, Hebrew works fine on my fiancée's Blackberry, although it's not unlocked, so in Israel it will mostly serve as an expensive paperweight.

[08:18:01.0000] <AryehGregor>
Actually, Hebrew text doesn't render even remotely correctly in my version of Android either.

[08:18:02.0000] <AryehGregor>
Nexus One.

[08:18:03.0000] <AryehGregor>
It's incredibly annoying.

[08:18:04.0000] <AryehGregor>
It's sometimes displayed in reverse order, and nikkud is absolutely hopeless.

[08:18:05.0000] <AryehGregor>
And apparently my phone is now too old to get updates anymore.

[08:19:00.0000] <timeless>
cyanogen?

[08:19:01.0000] <AryehGregor>
Which I got, uh, like a year and a half ago?

[08:19:02.0000] <AryehGregor>
Amazingly lame.

[08:19:03.0000] <AryehGregor>
Yes, I might have to resort to Cyanogen.

[08:20:00.0000] <timeless>
http://theunderstatement.com/post/11982112928/android-orphans-visualizing-a-sad-history-of-support

[08:23:00.0000] <AryehGregor>
That is horrifying.

[08:33:00.0000] <jgraham>
I just noticed Brendan Eich accused someone else of writing an overlong bug comment

[08:33:01.0000] <jgraham>
That is funny

[08:33:02.0000] <jgraham>
Also, if anyone is writing a dictionary and needs good examples for irony ^

[08:34:00.0000] <AryehGregor>
It was probably on one of the WebIDL bugs I filed, right?

[08:34:01.0000] <jgraham>
Yeah, the legacyconst one

[08:42:00.0000] <timeless>
AryehGregor: i take it you haven't seen that before?

[08:42:01.0000] <AryehGregor>
No.

[08:42:02.0000] <AryehGregor>
I mean, I knew the basic fact, I just didn't see the detailed analysis.

[08:43:00.0000] <timeless>
/me thought it made news everywhere

[08:43:01.0000] <annevk>
hsivonen: thanks for that tweet btw

[08:43:02.0000] <annevk>
hsivonen: seems that's sufficient to inform the world the new state of affairs :)

[08:43:03.0000] <jgraham>
I thought it was generally agreed that the iPhone parts of that figure wre misleading

[08:45:00.0000] <timeless>
jgraham: no

[08:45:01.0000] <AryehGregor>
In what way?

[08:45:02.0000] <timeless>
what was agreed was that people can't read labels

[08:45:03.0000] <timeless>
(or perhaps "people don't read")

[08:47:00.0000] <timeless>
AryehGregor: people somehow had trouble understanding that "on current major version" doesn't mean "on current major version <today>" it means "<on current major version at the relative mark time indicated -- based on the original release date>"

[08:47:01.0000] <AryehGregor>
That was apparent to me.

[08:47:02.0000] <timeless>
if you look at /. and others, you'll discover that people can't read

[08:48:00.0000] <timeless>
and/or can't interpret charts

[08:48:01.0000] <timeless>
it's incredibly depressing

[08:51:00.0000] <jgraham>
(alternative theory: the visualisation is bad is bad)

[08:51:01.0000] <AryehGregor>
I think the visualization here was good.  It makes it clear how long each phone gets updates.

[08:51:02.0000] <timeless>
it would be possible to make the graph have a <date> based x axis

[08:51:03.0000] <AryehGregor>
But then it would be harder to compare meaningfully.

[08:51:04.0000] <AryehGregor>
You'd know which phones are up-to-date now, but it would be bad for telling how long each one got support.

[08:51:05.0000] <timeless>
but then you'd have to do a heck of a lot of scanning

[08:51:06.0000] <AryehGregor>
It is a bit confusing that the chart only goes to three years, so if you don't pay attention you might think the oldest iPhones are still supported.  It should be extended to the present in all cases.

[08:52:00.0000] <AryehGregor>
Although then it's confusing in a different way.

[08:52:01.0000] <AryehGregor>
Hmm.

[08:52:02.0000] <AryehGregor>
Visualization is hard.

[08:53:00.0000] <timeless>
that could be done i suppose

[10:07:00.0000] <annevk>
are data URLs already same origin with the XMLHttpRequest origin?

[10:08:00.0000] <annevk>
or does XMLHttpRequest need to say something for that?

[10:10:00.0000] <timeless>
what do people use for temporary image uploads?

[10:11:00.0000] <Ms2ger>
I used to use http://imageshack.us/ when I did that

[10:12:00.0000] <timeless>
thanks

[10:13:00.0000] <timeless>
AryehGregor: http://imageshack.us/f/687/016aandroidorphansbydat.png/

[10:13:01.0000] <timeless>
is that really better?

[10:18:00.0000] <Ms2ger>
Anybody who feels like figuring out what setInterval.length should be?

[10:18:01.0000] <Ms2ger>
AryehGregor?

[10:18:02.0000] <timeless>
heh

[10:19:00.0000] <timeless>
lol, gecko says 0

[10:19:01.0000] <Ms2ger>
Yep

[10:19:02.0000] <Ms2ger>
Bug was filed in 2003

[10:20:00.0000] <timeless>
IE says the same fwiw

[10:20:01.0000] <timeless>
it's probably based on the fact that the first argument type was chaotic

[10:20:02.0000] <timeless>
so gecko idl was foo setInterval(void);

[10:21:00.0000] <timeless>
where the c++ impl stole arguments from the js stack

[10:21:01.0000] <Ms2ger>
Indeed

[10:21:02.0000] <smaug____>
we should change that

[10:21:03.0000] <smaug____>
to take jsvals

[10:21:04.0000] <timeless>
Chrome agrees w/ 0

[10:21:05.0000] <smaug____>
as parameters

[10:21:06.0000] <timeless>
so i think we have all the browsers agreeing on 0

[10:21:07.0000] <Ms2ger>
smaug____, we can't do that yet :)

[10:22:00.0000] <smaug____>
hmm, why not

[10:22:01.0000] <timeless>
is there a really big reason for changing it?

[10:22:02.0000] <smaug____>
consistency would be a good reason

[10:22:03.0000] <timeless>
other than breaking any site that happens to already be using this value?

[10:22:04.0000] <Ms2ger>
The setInterval(fun, timeout, arg1, ...) form

[10:23:00.0000] <smaug____>
ah, the ... part

[10:24:00.0000] <Ms2ger>
/me patiently awaits the WebIDL parser

[10:35:00.0000] <timeless>
Ms2ger: so, you'd rather the value be 2?

[10:35:01.0000] <Ms2ger>
No, I don't care

[10:35:02.0000] <Ms2ger>
I want to close bugs

[10:41:00.0000] <timeless>
oh brother

[10:41:01.0000] <timeless>
Safari says the answer is 2

[10:42:00.0000] <timeless>
/me wonders if that's just because it's an older version of webkit

[10:42:01.0000] <annevk>
either you are playing this naive or you should be pleased because there's several engines that actually agree here!

[10:42:02.0000] <timeless>
5.1.1 (7534.51.22)

[10:42:03.0000] <annevk>
usually it's like 4 browsers, 6 different answers

[10:42:04.0000] <timeless>
heh

[10:44:00.0000] <timeless>
opera also says 0

[10:44:01.0000] <timeless>
so, Safari is my only odd man out

[10:44:02.0000] <_bga>
annevk does not count Konqueror heh

[10:44:03.0000] <timeless>
4/5 browsers agree the answer is 0

[10:44:04.0000] <timeless>
the answer is 0. resolved.

[10:44:05.0000] <timeless>
i'm assuming that safari would say 0 if i could get a newer webkit backend for it

[10:45:00.0000] <timeless>
annevk: yes, i naively assumed that both webkit browsers on my computer would agree

[10:45:01.0000] <annevk>
_bga: maybe I didn't count IE and Konquerer, who knows

[10:46:00.0000] <timeless>
grr

[10:46:01.0000] <annevk>
timeless: fwiw, with Web IDL it's also often the case that there is interop, but everyone wants to change to something new instead

[10:46:02.0000] <timeless>
rim's webkit also says 2

[10:46:03.0000] <timeless>
/me doesn't remember how to ask what version of webkit this has

[10:46:04.0000] <annevk>
timeless: I suspect it depends on the ECMAScript implementation or maybe a timer implementation if that is also not in WebKit itself

[10:48:00.0000] <timeless>
ok, i have webkit 534.11+ if my blackberry ua is to be trusted

[10:48:01.0000] <timeless>
annevk: yeah, i know

[10:48:02.0000] <timeless>
re webidl and vendors wanting to change even w/ interop

[10:49:00.0000] <timeless>
my guess though here is that webkit changed and my safari/torch browsers are just old webkits

[10:49:01.0000] <timeless>
(i could check, it isn't worth my time right now)

[10:50:00.0000] <timeless>
anyone know if giuseppe pascale (opera) irc's outside of meetings?

[10:55:00.0000] <annevk>
sometimes internally

[10:55:01.0000] <timeless>
i'd like to send him backchannel on irc, it's easier than me writing tiny emails on my phone

[10:57:00.0000] <annevk>
I'd just ask him

[10:58:00.0000] <annevk>
(which would require an email :) )

[11:13:00.0000] <timeless>
my aren't we helpful :)

[11:13:01.0000] <timeless>
AryehGregor / jgraham : i'd really be interested in knowing if you found http://imageshack.us/f/687/016aandroidorphansbydat.png/ to be better/more useful

[11:40:00.0000] <Ms2ger>
annevk, the last example in http://dev.w3.org/csswg/cssom/#examples-0 may be missing a decimal point

[12:57:00.0000] <timeless>
anyone here speak japanese / happen to recognize jakomobile.com ?

[12:57:01.0000] <Ms2ger>
MikeSmith, ^

[12:58:00.0000] <MikeSmith>
timeless: there's not japanese on that page :)

[12:58:01.0000] <MikeSmith>
and I never heard of jakomobile

[12:59:00.0000] <timeless>
http://pastebin.mozilla.org/1388112

[13:17:00.0000] <MikeSmith>
/me looks at timeless link

[13:17:01.0000] <timeless>
thanks

[13:17:02.0000] <timeless>
/me was wondering if MikeSmith died

[13:17:03.0000] <MikeSmith>
been working on slides I was asked to send to an event organizer a week ago :)

[13:18:00.0000] <MikeSmith>
for a presentation tomorrow

[13:19:00.0000] <MikeSmith>
so this is some kind of service that you apparently were signed up for

[13:19:01.0000] <MikeSmith>
the details about what the service actually is are sparse

[13:19:02.0000] <MikeSmith>
but maybe a gaming service?

[13:19:03.0000] <MikeSmith>
something called A-Team?

[13:44:00.0000] <timeless>
do i want to try to tell them i didn't sign up for it?

[13:56:00.0000] <MikeSmith>
timeless: dunno

[13:56:01.0000] <MikeSmith>
it is a legitimate service at least

[14:01:00.0000] <timeless>
ok, so, according to gmail's translate, i send email to the jakomobile address, is that correct?

[14:01:01.0000] <timeless>
/me thanks MikeSmith for taking the time to look

[14:01:02.0000] <MikeSmith>
yeah

[14:15:00.0000] <MikeSmith>
"Institutions will try to preserve the problem to which they are the solution."

[14:17:00.0000] <MikeSmith>
"pleas to evolve are drowned in the politics of an aging organization resistant to change"

[14:17:01.0000] <MikeSmith>
"People have a great capacity for change. Those people can and will continue to lead us as our institutions fail and eventually harm us."

[14:19:00.0000] <Ms2ger>
Context?

[14:19:01.0000] <MikeSmith>
"still solving a problem projects don't have, source hosting, appears to be beyond the capabilities of the organization"

[14:19:02.0000] <MikeSmith>
http://www.mikealrogers.com/posts/apache-considered-harmful.html

[14:20:00.0000] <MikeSmith>
"People and their contributions are as transparent as we can imagine and the direct connection of these people to each other turn social problems back in to social problems rather than political problems."

[14:21:00.0000] <MikeSmith>
"it is hosted, developed, and maintained by someone but they do not enforce any set of governance or process over the users of the system"

[14:21:01.0000] <MikeSmith>
"became a very political organism and navigating those politics has come to require more and more institutional knowledge over the years"

[14:27:00.0000] <Ms2ger>
/me likes how http://dowebsitesneedtolookexactlythesameineverybrowser.com/ looks exactly the same in every browser

[14:28:00.0000] <timeless>
not lynx :)

[14:28:01.0000] <timeless>
and technically it depends on which of three fonts you have

[14:28:02.0000] <timeless>
since that controls how NO! is rendered :)

[14:29:00.0000] <timeless>
http://wayback.archive.org/web/*/dowebsitesneedtolookexactlythesameineverybrowser.com

[14:30:00.0000] <timeless>
/me likes that the site has been around for years and is properly indexed

[14:31:00.0000] <timeless>
MikeSmith: it's unfortunate that the author of that post didn't use a spell checker

[14:31:01.0000] <timeless>
/me wonders if that's because Apache doesn't have one

[14:34:00.0000] <MikeSmith>
timeless: man, I think few people would read that post and have their first comment be that it needs a spell checker

[14:34:01.0000] <MikeSmith>
you're exceptional :)

[14:34:02.0000] <timeless>
thanks :)

[14:34:03.0000] <timeless>
actually, what was going through my mind was a parallelism to a mozilla thread

[14:34:04.0000] <timeless>
involving webdev v. webtools

[14:34:05.0000] <timeless>
but i didn't really want to share that

[14:35:00.0000] <timeless>
what bothers me is that having arguments which are probably fairly good

[14:35:01.0000] <timeless>
but happen to be tarnished by silly easily catchable errors

[14:36:00.0000] <timeless>
makes it harder to be willing to present them in other venues w/o having their value discarded for lack of ...

[14:36:01.0000] <timeless>
/me tries to find a similar complaint by someone else about an even shorter thing in a different context

[14:37:00.0000] <timeless>
gah, the fact that lists.mozilla.org and mail.mozilla.org aren't the same is um...

[14:38:00.0000] <timeless>
> oh, God forbid Mozilla hire fucking editors: "When discussing the list else where, please respect people's privacy and do name participants, individuals or companies. "

[14:38:01.0000] <timeless>
> https://mail.mozilla.org/listinfo/enterprise

[14:39:00.0000] <timeless>
n.b. that seems to have been corrected

[14:56:00.0000] <Hixie>
AryehGregor: you around?


2011-11-25
[16:02:00.0000] <roc>
can we forbid delinquent editors from posting new ideas to www-style?

[16:04:00.0000] <roc>
("joke")

[16:13:00.0000] <MikeSmith>
heh

[00:20:00.0000] <annevk>
having xhr in hg is sooo nice

[00:20:01.0000] <annevk>
having it be a single spec is real nice too

[00:20:02.0000] <annevk>
changing the spec is easy again

[01:46:00.0000] <benschwarz>
I was just reminiscing over days gone by MikeSmith … http://twitter.com/#!/benschwarz/status/39891483897102336

[01:47:00.0000] <MikeSmith>
that don't loading for me

[01:47:01.0000] <MikeSmith>
due to me being in china

[01:48:00.0000] <benschwarz>
"Without @sideshowbarker, the WHATWG developer spec wouldn't have happened. Lets make that clear, this man is a legend." — Me, Feb 22

[01:48:01.0000] <MikeSmith>
heh

[01:48:02.0000] <MikeSmith>
famous all over town

[01:48:03.0000] <benschwarz>
oh snapple

[01:48:04.0000] <benschwarz>
https://plus.google.com/111991826926222544385/about

[01:49:00.0000] <benschwarz>
that picture, laying down

[01:49:01.0000] <benschwarz>
so good

[01:49:02.0000] <benschwarz>
haha

[01:50:00.0000] <MikeSmith>
no google+ here either!

[01:50:01.0000] <MikeSmith>
that's the one with the sign?

[01:51:00.0000] <MikeSmith>
unfortunately they moved the shop and they don't have that sign where anybody can lay down in front of it any more

[01:52:00.0000] <benschwarz>
MikeSmith: what will I do in tokyo then?!

[01:52:01.0000] <benschwarz>
we'll get a html5 gang sign pic in front of that thing one day

[01:53:00.0000] <MikeSmith>
they still got the sign

[01:54:00.0000] <MikeSmith>
maybe we can get them to roll it out

[01:56:00.0000] <benschwarz>
I'm sure we can

[01:56:01.0000] <benschwarz>
Not planned to be in tokyo for a while… but I'm really yearning to return

[01:58:00.0000] <hsivonen>
wow. a longish thread about the meaning of <foo/> in HTML4 on www-validator. again. still. in 2011.

[02:00:00.0000] <jgraham>
hsivonen: I would feel sorry for you if that wasn't so funny

[02:02:00.0000] <zcorpan>
hsivonen: pointer?

[02:04:00.0000] <zcorpan>
/me guesses http://lists.w3.org/Archives/Public/www-validator/2011Nov/0007.html

[02:04:01.0000] <MikeSmith>
yeah

[02:04:02.0000] <MikeSmith>
glad I skipped that one :)

[02:05:00.0000] <MikeSmith>
wonderfully intuitive "NET-enabling start-tag requires SHORTTAG YES" message the validator emits there

[02:05:01.0000] <jgraham>
/me is glad that we have start tags to enable the net

[02:06:00.0000] <MikeSmith>
we need more specs like SGML

[02:13:00.0000] <zcorpan>
MikeSmith: especially nice that the validator has stepped away from spec purity since html4's sgml decl says SHORTTAG YES

[02:13:01.0000] <zcorpan>
but still has confusing messages

[02:14:00.0000] <MikeSmith>
it still clings to spec purity in other ways

[02:14:01.0000] <MikeSmith>
like, reporting id=foo and id=FOO and duplicated IDs

[02:14:02.0000] <MikeSmith>
and not reporting e.g.,  <p right> as an error

[02:15:00.0000] <MikeSmith>
the SGML neckbeards were in a league of their own

[02:16:00.0000] <MikeSmith>
in other news, great entertainment value in Murata-san's bugzilla comments

[02:17:00.0000] <MikeSmith>
or should i say "comment"

[02:17:01.0000] <hsivonen>
zcorpan: you found the right thread

[02:17:02.0000] <MikeSmith>
because it's the same one he's made several times now

[02:17:03.0000] <MikeSmith>
www-validator is a pot of gold

[02:18:00.0000] <zcorpan>
most of the thread seems to discuss how to improve the message that says that the slash causes other confusing messages to be emitted

[02:18:01.0000] <zcorpan>
instead of, i dunno, removing the confusing messages and emitting one unconfusing message

[02:20:00.0000] <MikeSmith>
heh

[02:49:00.0000] <annevk>
okay

[02:50:00.0000] <annevk>
so the outstanding feature requests for XMLHttpRequest are

[02:50:01.0000] <annevk>
redirects

[02:50:02.0000] <annevk>
"chunked-text"

[02:50:03.0000] <annevk>
"chunked-arraybuffer"

[02:50:04.0000] <annevk>
"json"

[02:50:05.0000] <annevk>
"stream"

[02:50:06.0000] <annevk>
and the thread on WHATWG

[03:39:00.0000] <hsivonen>
hmm. Niels Leenheer (the html5test.com guy) doesn't make it too easy to find his email address on the site

[03:39:01.0000] <hsivonen>
maybe I should just tweet

[03:40:00.0000] <jgraham>
Yeah it is pretty annoying; there are bugs in the tests

[03:40:01.0000] <Neocortex>
whois says it's info⊙sn

[03:41:00.0000] <Neocortex>
http://sights.nl/en/

[03:42:00.0000] <hsivonen>
Neocortex: thanks

[03:43:00.0000] <hsivonen>
yay. located his email address in my email archives

[04:05:00.0000] <hsivonen>
what's the best-maintained diveintohtml5 version today?

[04:06:00.0000] <hsivonen>
.info? the html5doctor version?

[04:06:01.0000] <hsivonen>
does either of them actually have fixes?

[04:21:00.0000] <oal>
I came across this http://dev.w3.org/csswg/css3-grid-align/#grid-concepts Is it supported in any browsers yet?

[04:23:00.0000] <hsivonen>
oal: IE10 might have prefixed support

[04:25:00.0000] <oal>
Great, I hope the other's follow

[05:59:00.0000] <kennyluck>
oal, there's announcement on webkit-dev that WebKit developers just started to implement it. I guess it'll take a month or so to have something to play with.

[06:05:00.0000] <oal>
kennyluck: Cool. I've read ~half of this now as well (http://www.w3.org/TR/css3-layout/). Do you know if the display: "abc" style will be supported as well?

[06:32:00.0000] <kennyluck>
oal, that I don't know. Neither of these is under heavy discussion on www-style, and I think css3-layout is probably less popular somehow. You'll be encourage in this channel to use the up-to-date version http://dev.w3.org/csswg/css3-layout/ by the way. :p

[06:33:00.0000] <oal>
Oh, thanks. I haven't really ever spent much time on the w3 sites before :P

[07:55:00.0000] <AryehGregor>
Ms2ger, timeless: AFAICT, all non-Gecko engines just always have .length = 0 for IDL operations.  This is one of the few things from WebIDL that IE9 doesn't follow.  Gecko's behavior is clearly more correct, though.

[07:56:00.0000] <AryehGregor>
/me doesn't know what varargs are supposed to do to .length, offhand

[07:56:01.0000] <AryehGregor>
/me has just ignored varargs so far in his WebIDL tests

[07:57:00.0000] <AryehGregor>
Also, when I say "all non-Gecko engines" I don't include Safari, if that's different from Chrome.  I don't bother testing it separately, as a rule.

[07:57:01.0000] <AryehGregor>
So maybe Safari is right but Chrome is wrong.

[07:58:00.0000] <AryehGregor>
Hixie, I'm around now, on and off.

[08:26:00.0000] <timeless>
AryehGregor: the gecko behavior for xpidl stuff is length = the number of non optional arguments in the case where there is no overloading

[08:26:01.0000] <timeless>
in cases where there's overloading it depends on how it's implemented

[08:26:02.0000] <AryehGregor>
I think WebIDL requires that it's the maximum number of arguments you could ever legitimately pass to it, ignoring varargs.

[08:26:03.0000] <timeless>
generally overloading is implemented by declaring 0 arguments and having the native code deal w/ it

[08:26:04.0000] <Ms2ger>
Overloading in XPIDL?

[08:26:05.0000] <AryehGregor>
But the algorithm is complicated.

[08:27:00.0000] <timeless>
Ms2ger: well overloading is technically *outside* of xpidl

[08:27:01.0000] <Ms2ger>
Right

[08:27:02.0000] <timeless>
but from the perspective of things who are expecting different possible inbound arguments

[08:27:03.0000] <AryehGregor>
IIUC, it's max{number of arguments of f, counting optional but not varargs | f is an operation on the given interface with the given identifier}.

[08:27:04.0000] <timeless>
perhaps i shouldn't say 0 arguments but "however many common arguments there are"

[08:27:05.0000] <timeless>
which is typically 0..

[08:28:00.0000] <Ms2ger>
Recently we've been using jsvals, fwiw

[08:28:01.0000] <timeless>
Ms2ger: yeah, i know

[08:28:02.0000] <timeless>
but that's recent stuff

[08:28:03.0000] <timeless>
i'm a historian

[08:28:04.0000] <Ms2ger>
:)

[08:28:05.0000] <AryehGregor>
/me isn't sure offhand how overloading works if one interface extends another and they share a method name but with different arguments

[08:28:06.0000] <timeless>
stuff that hasn't been dead and buried for a while doesn't interest me

[08:28:07.0000] <Ms2ger>
AryehGregor, is that allowed?

[08:28:08.0000] <timeless>
AryehGregor: in gecko, classically, "poorly" :)

[08:28:09.0000] <AryehGregor>
Ms2ger, possibly not.

[08:28:10.0000] <timeless>
in gecko you're allowed to do:

[08:28:11.0000] <timeless>
foo.InterfaceName.method()

[08:29:00.0000] <timeless>
foo.OtherInterface.method()

[08:29:01.0000] <timeless>
but that only works if the interface isn't a DOMClassInfo :)

[08:29:02.0000] <timeless>
(more or less)

[08:29:03.0000] <Ms2ger>
I think Mozilla managed to get that thrown out of WebIDL

[08:29:04.0000] <timeless>
the right answer should be that it should be forbidden

[08:29:05.0000] <AryehGregor>
You can always do InterfaceName.prototype.method.call(foo).

[08:29:06.0000] <timeless>
if you need a new method with different arguments, get your own method name and stop confusing poor users

[08:30:00.0000] <timeless>
AryehGregor: actually

[08:30:01.0000] <timeless>
does that always work?

[08:30:02.0000] <AryehGregor>
Why not?

[08:30:03.0000] <timeless>
window1.InterfaceName.prototype.method.call(window2.foo)

[08:30:04.0000] <AryehGregor>
That won't work.

[08:30:05.0000] <Ms2ger>
In Gecko, it might very well work

[08:30:06.0000] <timeless>
right, so your example doesn't work either :)

[08:30:07.0000] <Ms2ger>
But we're the odd one out

[08:30:08.0000] <AryehGregor>
It's not supposed to work.

[08:31:00.0000] <AryehGregor>
Because the interface prototype you're using is not the prototype of the object you're talking about.

[08:31:01.0000] <timeless>
AryehGregor: but i don't think there's a convenient way to calculate window2 from foo

[08:31:02.0000] <AryehGregor>
No, there's no way at all.

[08:31:03.0000] <timeless>
which makes calculating InterfaceName hard

[08:31:04.0000] <AryehGregor>
I've been told that's a deliberate design feature.

[08:31:05.0000] <timeless>
and thus your sample code is essentially impossible to do correctly

[08:31:06.0000] <AryehGregor>
Well, not quite.

[08:31:07.0000] <AryehGregor>
You can always use Object.getPrototypeOf.

[08:31:08.0000] <timeless>
i think you can try to chase the prototype chain

[08:31:09.0000] <Ms2ger>
Or __proto__ :)

[08:31:10.0000] <timeless>
Ms2ger: shh

[08:32:00.0000] <AryehGregor>
I work with standards, __proto__ doesn't exist!

[08:32:01.0000] <AryehGregor>
I mean, it does, but I can't use it in tests, because it's not standard . . .

[08:32:02.0000] <AryehGregor>
Can we sneak Web ES requirements into HTML or something?

[08:32:03.0000] <timeless>
out-of-scope

[08:34:00.0000] <AryehGregor>
Maybe WebIDL can sneak them into the ES binding.

[08:34:01.0000] <AryehGregor>
Or, like, maybe ES could actually require them.

[08:34:02.0000] <AryehGregor>
srsly.

[08:35:00.0000] <Ms2ger>
Let's do that

[08:35:01.0000] <AryehGregor>
Nobody's seriously considering getting rid of __proto__, are they?

[08:35:02.0000] <AryehGregor>
So why isn't it in ES?

[08:35:03.0000] <Ms2ger>
Sure thing

[08:35:04.0000] <Ms2ger>
IIRC

[08:35:05.0000] <AryehGregor>
They are?

[08:35:06.0000] <timeless>
i thought es was trying to get rid of the ability to mutate __proto__

[08:35:07.0000] <AryehGregor>
Oh, well, that I can understand.

[08:35:08.0000] <AryehGregor>
In ES5 the prototype is fixed at object creation time, right?

[08:35:09.0000] <AryehGregor>
That seems reasonable enough to me.

[08:35:10.0000] <timeless>
/me hasn't read it

[08:35:11.0000] <timeless>
but i think that's the goal

[08:36:00.0000] <AryehGregor>
Mutating it could cause all kinds of problems, although they're probably resolvable somehow.

[08:36:01.0000] <timeless>
it's really annoying from a hackery perspective

[08:36:02.0000] <Ms2ger>
I'd ask, but people are eating turkeys

[08:36:03.0000] <AryehGregor>
That was yesterday.

[08:36:04.0000] <timeless>
/me wants a turkey

[08:36:05.0000] <AryehGregor>
Unless it's leftover turkeys.

[08:36:06.0000] <timeless>
all i have is a bike w/ a flat tire

[08:36:07.0000] <AryehGregor>
That sounds less edible.

[08:36:08.0000] <timeless>
and some grease

[08:36:09.0000] <Ms2ger>
You could try the grease?

[08:36:10.0000] <timeless>
it isn't designed for cooking

[08:36:11.0000] <jgraham>
Why would you want a turkey

[08:36:12.0000] <timeless>
and i know where it's been

[08:36:13.0000] <jgraham>
They have little to nothing to recommend them

[08:36:14.0000] <timeless>
jgraham: it's edible and reminds me of home?

[08:37:00.0000] <jgraham>
Apart from being relatively cheap per unit mass

[08:37:01.0000] <timeless>
jgraham: ben franklin is little to nothing?

[08:37:02.0000] <jgraham>
/me doesn't know what ben franklin has to do with it but wouldn't eat slugs just because einstein liked them

[08:37:03.0000] <timeless>
... For the Truth the Turkey is in Comparison a much more respectable Bird, and withal a true original Native of America . . . He is besides, though a little vain & silly, a Bird of Courage, and would not hesitate to attack a Grenadier of the British Guards who should presume to invade his Farm Yard with a red Coat on.

[08:37:04.0000] <jgraham>
(note: he didn't. probably)

[08:38:00.0000] <Ms2ger>
Maybe if you cook them by having lightning hit them?

[08:38:01.0000] <timeless>
what is the world coming to that people don't know his stance on turkeys?

[08:38:02.0000] <timeless>
http://en.wikipedia.org/wiki/Wild_Turkey#Benjamin_Franklin_and_the_US_national_bird

[08:39:00.0000] <timeless>
in context, this is what he had to say about the eagle:

[08:39:01.0000] <timeless>
... For my own part I wish the Bald Eagle had not been chosen the Representative of our Country. He is a Bird of bad moral character. He does not get his Living honestly. You may have seen him perched on some dead Tree near the River, where, too lazy to fish for himself, he watches the Labour of the Fishing Hawk; and when that diligent Bird has at length taken a Fish, and is bearing it to his Nest

[08:39:02.0000] <timeless>
 for the Support of his Mate and young Ones, the Bald Eagle pursues him and takes it from him.

[08:40:00.0000] <zewt>
sounds like a pretty apt characterization of our country

[08:40:01.0000] <timeless>
too true

[08:40:02.0000] <timeless>
so it was probably a fitting choice

[08:40:03.0000] <timeless>
but oh well

[08:40:04.0000] <timeless>
anyway, don't say you didn't ever learn anything about Franklin from #whatwg :)

[08:40:05.0000] <timeless>
(or Turkeys or Eagles for that matter)

[08:41:00.0000] <jarek>
http://www.w3.org/TR/css3-animations/ defines keyframes rule as:

[08:41:01.0000] <jarek>
'@keyframes' IDENT '{' keyframes-blocks '}';

[08:41:02.0000] <jarek>
shouldn't there be STRING instead of IDENT?

[08:41:03.0000] <jgraham>
I think it would be a more apt characterisation of your country if the eagle sold the fishing hawk on the value of hard work as part of the "American Dream"

[08:41:04.0000] <timeless>
lol

[08:42:00.0000] <timeless>
jgraham: this is more about foreign afairs

[08:42:01.0000] <timeless>
i'm sure we have an example fitting your american dream somewhere

[08:43:00.0000] <timeless>
although the only thing that comes to mind is the praying mantis

[08:43:01.0000] <zewt>
jarek: might not matter here, but i assume you should be reading http://dev.w3.org/csswg/css3-animations/

[08:43:02.0000] <zewt>
beware of "TR" in w3 URLs

[08:44:00.0000] <timeless>
yeah, T means "almost certainly out of date, this document published for lawyers, if you aren't one, steer clear"

[08:44:01.0000] <timeless>
s/T/TR/

[08:44:02.0000] <jarek>
zewt: thanks, the dev spec uses IDENT

[08:44:03.0000] <jarek>
so maybe it uses different definitions of tokens?

[08:46:00.0000] <timeless>
IDENT comes from http://www.w3.org/TR/CSS2/grammar.html#scanner

[08:46:01.0000] <timeless>
/me thinks

[08:46:02.0000] <timeless>
/me grumbles sorry about the CSS2 ref

[08:48:00.0000] <timeless>
jarek: why would you want STRING instead of IDENT?

[08:48:01.0000] <timeless>
STRING requires one to have "..." or '...'

[08:48:02.0000] <timeless>
which is at least moderately annoying

[08:48:03.0000] <jarek>
timeless: yeah, there are many examples on the web that look like this:

[08:48:04.0000] <jarek>
@keyframes "myAnimation" {}

[08:49:00.0000] <timeless>
interesting

[08:49:01.0000] <jarek>
no, wait... actually I have found it only in the old spec :)

[08:49:02.0000] <timeless>
could i convince you to collect urls for them (possibly sorted by pagerank) and send them to www-style?

[08:49:03.0000] <timeless>
oh

[08:49:04.0000] <jarek>
ok, this makes sense now

[08:49:05.0000] <timeless>
so old content that hasn't evolved

[08:49:06.0000] <timeless>
yay

[08:49:07.0000] <timeless>
the dead web, that's where i come in

[08:50:00.0000] <timeless>
except i don't do much css archeology right now

[08:50:01.0000] <timeless>
@keyframes is too new to be buried and studied by archeologists :)

[08:51:00.0000] <timeless>
jarek: do they really use @keyframes and not @-vendor-keyframes?

[08:51:01.0000] <jarek>
timeless: I need to parse both of them

[08:52:00.0000] <timeless>
do the web a favor and don't support string

[08:53:00.0000] <timeless>
/me wishes browser vendors would HTTP POST /validator-feedback <payload>

[08:53:01.0000] <timeless>
"Dear site, this is an automated message listing content errors which resulted in things not working the way you expected"

[08:53:02.0000] <timeless>
...

[08:54:00.0000] <timeless>
w3schools doesn't think ie has an -ms-keyframes, but css-tricks does

[08:55:00.0000] <timeless>
/me can't find any high ranked site that mentions the STRING form

[08:56:00.0000] <timeless>
how are you finding these bogus sites?

[08:56:01.0000] <timeless>
/me doesn't know how to ask google for such content

[08:58:00.0000] <jarek>
opening http://dev.w3.org/csswg/css3-box/ crashes Chrome

[09:05:00.0000] <jarek>
http://dev.w3.org/csswg/css3-grid/ says:

[09:05:01.0000] <jarek>
"This specification is not being actively maintained, and should not be used as a guide for implementations. It may be revived in the future, but for now should be considered obsolete."

[09:05:02.0000] <jarek>
I thought that Microsoft was pushing CSS grids very hard

[09:05:03.0000] <Ms2ger>
css3-grid is a Bertism, afaik

[09:06:00.0000] <jarek>
also, the last update is from 26 October 2011 and IE10 has already implemented it, why is it considered obsolete?

[09:12:00.0000] <astearns>
jarek: look at http://dev.w3.org/csswg/css3-grid-align/

[09:13:00.0000] <jarek>
astearns: thanks

[09:21:00.0000] <jarek>
does http://dev.w3.org/csswg/ contain always the latest versions of the spec?

[09:22:00.0000] <astearns>
yes - that's where the editors check in

[09:25:00.0000] <jarek>
http://dev.w3.org/csswg/css3-ruby/ is older than http://www.w3.org/TR/css3-ruby/

[09:26:00.0000] <jarek>
was it renamed to http://dev.w3.org/csswg/css3-writing-modes/?

[09:26:01.0000] <Ms2ger>
No

[09:26:02.0000] <Ms2ger>
css3ruby is a bit of an odd one out

[09:27:00.0000] <Ms2ger>
Also, the date on tr/ is the publication date; doesn't mean it has been changed from the ED

[09:35:00.0000] <zewt>
would be nice if they'd at least find a way to get google to stop returning TR results before ED

[09:35:01.0000] <zewt>
don't know if there's any way to do that short of blocking the TR from being indexed completely

[09:39:00.0000] <Ms2ger>
rel=canonical?

[09:44:00.0000] <jarek>
where is the spec that was previously under https://dvcs.w3.org/hg/FXTF/raw-file/tip/filters/publish/Filters.html ?

[09:44:01.0000] <jarek>
I mean the new CSS and SVG filters

[11:30:00.0000] <AryehGregor>
zewt, I filed a bug on HTML asking for exactly that.

[11:30:01.0000] <AryehGregor>
I thought it was FIXED, but seems not?

[11:31:00.0000] <AryehGregor>
/me can't find it

[11:33:00.0000] <AryehGregor>
Hixie, do you remember me ever filing a bug suggesting you add <meta name=robots content=noindex> to the TR/ drafts?

[11:34:00.0000] <AryehGregor>
I thought I did.

[13:23:00.0000] <Hixie>
AryehGregor: i fixed it, but we haven't republished since so it hasn't taken effect

[13:23:01.0000] <Hixie>
AryehGregor: my ping earlier was for some bug, i commented instead

[13:39:00.0000] <Ms2ger>
AryehGregor, yt?


2011-11-26
[02:05:00.0000] <annevk>
and non-liveness strikes again: http://www.ietf.org/mail-archive/web/websec/current/msg00851.html

[02:06:00.0000] <annevk>
maybe we should keep some kind of wiki page

[03:22:00.0000] <Velmont>
annevk: I printed the XHR2 non-dev version at first, but that was because I was noob and noone told me I should read the dev version :P (odinho btw)

[03:23:00.0000] <Velmont>
I became quite confused when what I read on paper didn't match what I was reading on the screen (at that point I had learned to use the dev version)

[03:23:01.0000] <annevk>
Velmont: heh

[03:23:02.0000] <annevk>
Velmont: I guess XHR needs a notice similar to http://www.w3.org/TR/html5/

[04:48:00.0000] <jgraham>
Also, it should have a print stylesheet that replaces the content of the spec with the friendly message "Seriously?"

[09:01:00.0000] <jarek>
should single invalid selector make the whole @keyframes rule invalid?

[09:01:01.0000] <jarek>
this is what happens on Chrome

[09:01:02.0000] <jarek>
but the spec does not mention it

[09:02:00.0000] <jarek>
I would expect the declaration  block with invalid selector to be skipped, not the whole atrule


2011-11-27
[17:11:00.0000] <duryodhan>
hi folks .. where do I report possible errors in the HTML5 spec. Its a trivial but important bug: the Fetch algorithm http://www.whatwg.org/specs/web-apps/current-work/multipage/fetching-resources.html#fetch doesn't actually check the same-origin flag. It only does so after a redirect.

[17:12:00.0000] <duryodhan>
Is Hixie the right person to ping about this?

[17:13:00.0000] <annevk>
origin is checked before the request is made

[17:13:01.0000] <annevk>
before fetch is invoked, that is

[17:18:00.0000] <annevk>
duryodhan: ^^

[17:18:01.0000] <duryodhan>
annevk: can't find that check at http://www.whatwg.org/specs/web-apps/current-work/multipage/workers.html#dom-workerglobalscope-location

[17:19:00.0000] <duryodhan>
it just seems like a better idea to do the check inside the fetch url .. what does it even mean to do a cross origin fetch with same-origin flag set? If it redirects to the same domain it will be disallowed ?

[17:21:00.0000] <annevk>
duryodhan: http://www.whatwg.org/specs/web-apps/current-work/multipage/workers.html#dom-worker

[17:22:00.0000] <annevk>
duryodhan: I'm not sure that you can ever get into that situation, but maybe the spec should indeed point that out

[17:23:00.0000] <duryodhan>
annevk: ohh yeah .. noticed.

[17:23:01.0000] <duryodhan>
yeah to me it seems like unnecessary to require all calls to fetch to do teh same origin check themselves

[17:24:00.0000] <annevk>
I don't think all calls do such a check

[17:24:01.0000] <annevk>
but maybe now with CORS that changed

[17:24:02.0000] <annevk>
at some point CORS/fetch needs to merged

[17:24:03.0000] <annevk>
but we're gonna wait with that

[17:33:00.0000] <annevk>
/me wonders where myakura is

[17:34:00.0000] <annevk>
/me thinks myakura should deal with http://lists.w3.org/Archives/Public/public-webapps/2011OctDec/1209.html :p

[02:49:00.0000] <ashaw>
hey, I was wondering if there was a way of telling a web browser to not allow any external embedding of javascript in a document and to dissbale eval?

[02:51:00.0000] <ashaw>
because as far as I can see there is not, and this would be a useful security feature for the web

[03:05:00.0000] <bga_>
ashaw http://www.w3schools.com/html5/att_iframe_sandbox.asp

[03:06:00.0000] <ashaw>
but can I do it outside of an iframe

[03:07:00.0000] <bga_>
=> wrap all page into iframe

[03:08:00.0000] <ashaw>
That is kind of useless

[03:09:00.0000] <ashaw>
and will cause useability problems with, giving the most basic example, and iphone

[03:09:01.0000] <bga_>
sec

[03:10:00.0000] <ashaw>
Also I want to load scripts, but only thoes originally embeded in the html of the page, no other scripts

[03:11:00.0000] <ashaw>
so above also does not do what I want

[03:12:00.0000] <bga_>
ashaw you can use dommutation events, catch any attemp to add <script> and dont allow set src

[03:12:01.0000] <ashaw>
and how do you deal with eval?

[03:12:02.0000] <bga_>
by replacing src attibute and setAttribute fn

[03:13:00.0000] <bga_>
oh eval

[03:13:01.0000] <bga_>
ashaw user still can use cross origin XHR and eval/Fn, ok

[03:14:00.0000] <bga_>
but you can wrap XHR too :)

[03:14:01.0000] <ashaw>
yeah, but this is now becoming complex and vunerable to bugs

[03:15:00.0000] <ashaw>
and what if they then do and overwride your handler

[03:16:00.0000] <Philip`>
/me thought mutation events were generally agreed to be evil and never to be used

[03:17:00.0000] <Philip`>
ashaw: Maybe you want something a bit like https://developer.mozilla.org/en/Security/CSP ?

[03:20:00.0000] <bga_>
ashaw dont forget that user can download resource via <img> & canvas, <link>, <object> and <embed>

[03:21:00.0000] <ashaw>
I was about to mention them

[03:21:01.0000] <ashaw>
That CSP stuff seems good

[03:23:00.0000] <ashaw>
but only firefox?

[03:24:00.0000] <ashaw>
does webkit, IE, opera offer anything similar?

[03:28:00.0000] <ashaw>
so webkit is impelmenting support

[03:32:00.0000] <bga_>
https://docs.google.com/present/view?id=dz4jvnj_54hrjnwpdc&pli=1

[03:41:00.0000] <ashaw>
cool, but not quite applicable

[03:43:00.0000] <bga_>
i like typesafe router

[03:48:00.0000] <ashaw>
So do I


2011-11-28
[22:45:00.0000] <rniwa>
good evening everyone

[22:47:00.0000] <rniwa>
Hixie: yt?

[03:01:00.0000] <hsivonen>
people sure paste weird stuff into the comment form on the spec

[03:14:00.0000] <finnala^>
Like what?

[03:17:00.0000] <zcorpan>
hsivonen: it's almost like the "ctrl-v" thread in various forums

[03:18:00.0000] <hsivonen>
zcorpan: ctrl-v thread?

[03:18:01.0000] <hsivonen>
finnala^: like an iPhone crash dump

[03:20:00.0000] <zcorpan>
hsivonen: e.g. http://www.webforum.nu/showthread.php?t=108702

[03:22:00.0000] <hsivonen>
zcorpan: that's a meme I haven't seen before

[03:25:00.0000] <hsivonen>
http://thecodinghumanist.com/blog/archives/2011/11/15/the-kindle-fire-user-agent-string

[03:25:01.0000] <hsivonen>
Amazon has the good sense not to put "Android" in their UA string

[03:26:00.0000] <finnala^>
hsivonen: Sounds like fun reading.

[04:01:00.0000] <erlehmann>
hsivonen, lies. HNNNNGGG. are there so many sites relying on user agent LIES?

[04:02:00.0000] <hsivonen>
erlehmann: there seem to be many sites that give feature phone content to browsers that have "Android" in the UA string but that don't match the UA string of the Android stock browser on a well-known device like Nexus One

[04:03:00.0000] <hsivonen>
the logic seems to be:

[04:03:01.0000] <hsivonen>
if (UA string that the author tested) {

[04:03:02.0000] <hsivonen>
iPhone_site();

[04:03:03.0000] <hsivonen>
} else if (mobile traits) {

[04:04:00.0000] <hsivonen>
feature_phone_site();

[04:04:01.0000] <hsivonen>
} else {

[04:04:02.0000] <hsivonen>
desktop_site();

[04:04:03.0000] <hsivonen>
}

[04:04:04.0000] <hsivonen>
and "Android" counts as a mobile trait

[04:04:05.0000] <erlehmann>
hsivonen, i see their fail and reach for my media queries.

[04:05:00.0000] <hsivonen>
the user experience of Firefox on tablets goes up tremendously by faking the UA string of desktop Linux Firefox

[04:06:00.0000] <hsivonen>
my understanding so far is that eliminating the substring "Android" is the key

[04:08:00.0000] <erlehmann>
hsivonen, is there a concerted effort to KILL AND MAIM javascript frameworks who encourage this stupid UA testing?

[04:08:01.0000] <hsivonen>
erlehmann: it's probably most often server-side code than JS

[04:09:00.0000] <erlehmann>
hsivonen, is there a concerted effort to KILL AND MAIM server-side code frameworks who encourage etc. pp.?

[04:09:01.0000] <hsivonen>
erlehmann: not to my knowledge

[06:03:00.0000] <jgraham>
AryehGregor: Would it be a problem for you if we move testharness.js and other related bits to its own repo and make it owned by the testing IG rather than the HTMLWG?

[06:49:00.0000] <karlcow>
MikeSmith: I can't find anymore your demo of Japanese script layout

[07:05:00.0000] <timeless>
script layout?

[07:05:01.0000] <timeless>
that reminds me, i was supposed to file a bug about some CJK IMEs today

[07:12:00.0000] <AryehGregor>
jgraham, it makes sense.  Does it have any practical implications either way?

[07:21:00.0000] <karlcow>
timeless: I remember that Mike Smith had made a demo where you could see the text vertical or horizontal

[07:26:00.0000] <karlcow>
hmm maybe it was using a rotate on ruby. not sure

[07:57:00.0000] <jgraham>
AryehGregor: Depending on the setup it might mean that you have to join the IG to push

[07:58:00.0000] <jgraham>
(at the moment you have to be in HTML or WebApps AIUI)

[08:14:00.0000] <jarek>
is there any difference between "@namespace blah url(http://blah.com);" and "@namespace blah 'blah';"?

[08:15:00.0000] <annevk>
no

[08:16:00.0000] <annevk>
oh sorry

[08:16:01.0000] <annevk>
yes

[08:16:02.0000] <annevk>
the namespace is different

[08:16:03.0000] <annevk>
if you wanted to ask whether there was a difference between using quotes and the URL function, there is none

[08:18:00.0000] <jarek>
annevk: I thought that all namespeaces should have URI form, what's the point in allowing strings?

[08:19:00.0000] <annevk>
we should probably not have allowed the URL function, because it behaves very differently from e.g. background:url(...)

[08:19:01.0000] <annevk>
while namespaces are URLs

[08:19:02.0000] <annevk>
they are universally treated as strings

[08:19:03.0000] <annevk>
they are not resolved

[08:20:00.0000] <annevk>
and compared codepoint for codepoint

[08:20:01.0000] <annevk>
very different from URLs

[08:21:00.0000] <annevk>
e.g. www.w3.org cannot use "/1999/xhtml" as namespace for documents they publish

[08:21:01.0000] <annevk>
that is distinct from the "http://www.w3.org/1999/xhtml" namespace

[08:22:00.0000] <jarek>
annevk: I see, thanks for clarification

[08:30:00.0000] <timeless>
and of course if it wasn't the case that the strings were not resolved, then if w3c had used /1999/xhtml then anyone doing copy+paste would break if they hosted anywhere outside www.w3.org :)

[08:37:00.0000] <dglazkov>
good morning, Whatwg!

[09:13:00.0000] <annevk>
morning dglazkov

[09:13:01.0000] <annevk>
for attributes there's:

[09:13:02.0000] <annevk>
* remove

[09:14:00.0000] <annevk>
* create an append

[09:14:01.0000] <annevk>
and*

[09:14:02.0000] <annevk>
* change value

[09:14:03.0000] <annevk>
change value is either by qualified name or namespace and local name

[09:15:00.0000] <annevk>
create and append is by local name and optionally a namespace and prefix

[09:16:00.0000] <annevk>
remove is the same as change value

[09:20:00.0000] <annevk>
Lachy: any progress on wiki updates?

[09:22:00.0000] <Lachy>
annevk, no. I need to discuss it with AryehGregor and get his help to set it up

[09:25:00.0000] <annevk>
can you remove the ability for people to register for now?

[09:25:01.0000] <annevk>
it sucks, but that at least makes http://wiki.whatwg.org/wiki/Special:RecentChanges useful again and reduces make work for me

[10:00:00.0000] <Lachy>
annevk, we could probably set up this extension too later. http://www.mediawiki.org/wiki/Extension:ConfirmAccount

[10:00:01.0000] <Lachy>
But I'll go and disable account creation entirely for now

[10:43:00.0000] <annevk>
thanks hober

[10:43:01.0000] <annevk>
re: http://lists.w3.org/Archives/Public/www-style/2011Nov/0705.html

[12:20:00.0000] <Hixie>
MikeSmith: yt?

[13:22:00.0000] <Hixie>
so the spec has:

[13:22:01.0000] <Hixie>
  [TreatNullAs=EmptyString] attribute DOMString alinkColor;

[13:22:02.0000] <Hixie>
to which the webidl checker says:

[13:22:03.0000] <Hixie>
      1 Line 0 of IDL #0:Extended attribute TreatNullAs used on Document.alinkColor without required âStringâ argument.

[13:23:00.0000] <Hixie>
is that just a webidl checker bug?

[13:24:00.0000] <timeless>
that *sounds* like a bug

[13:25:00.0000] <timeless>
dev.w3.org/2006/webapi/WebIDL/#TreatNullAs -- The [TreatNullAs] extended attribute MUST take the identifier EmptyString.

[13:27:00.0000] <Hixie>
yeah that was my conclusion too

[13:27:01.0000] <Hixie>
ok i'll just ignore for now then

[13:51:00.0000] <annevk>
http://lists.w3.org/Archives/Member/w3c-css-wg/2011OctDec/0239.html o_O

[13:51:01.0000] <zewt>
first-class-citizens only

[13:52:00.0000] <miketaylr>
O_o

[14:09:00.0000] <tantek>
annevk - just saw that. shall I take a shot at replying? essentially that for the purposes of more liberal licensing we are pursuing fullscreen outside of the current CSSWG charter, with the intent to contribute to a community group with liberal licensing as described in the draft.

[14:10:00.0000] <annevk>
tantek: I changed the style sheet

[14:10:01.0000] <tantek>
since editor-ship hours appear to be one of the limiting factors of W3C spec development, it seems reasonable that editors (who contribute the content) have the right to choose their licensing.

[14:12:00.0000] <annevk>
tantek: such a reply wfm

[14:12:01.0000] <tantek>
sure, different style sheet helps

[14:12:02.0000] <tantek>
ok

[14:13:00.0000] <glazou>
tantek: you can choose the way you want ; but those terms are not compatible with an AC vote without prior discussion

[14:13:01.0000] <tantek>
glazou - they are compatible in a CG

[14:13:02.0000] <glazou>
unburry the tomahawk if you wish

[14:13:03.0000] <tantek>
expressly noted, please see this for details: http://tantek.com/2011/240/b1/w3c-community-groups-opportunities-suggestions-challenges

[14:14:00.0000] <glazou>
but this document MUST be changed or nixed right now

[14:14:01.0000] <annevk>
bullshit

[14:14:02.0000] <glazou>
it's **curently** under AC vote and PR observation

[14:14:03.0000] <annevk>
this document isn't

[14:14:04.0000] <tantek>
glazou - why must the current document be changed?

[14:14:05.0000] <glazou>
because it lists licensing terms that were never given to ACs

[14:14:06.0000] <tantek>
I'll repeat: for the purposes of more liberal licensing Anne and I are pursuing Fullscreen outside of the current CSSWG charter, with the intent to contribute to a community group with liberal licensing as described in the draft.

[14:15:00.0000] <annevk>
glazou: this draft was not developed at the W3C or by the AC

[14:15:01.0000] <glazou>
fine

[14:15:02.0000] <tantek>
glazou - that's not a requirement of CGs.

[14:15:03.0000] <glazou>
then don't put in dev.w3.org

[14:15:04.0000] <glazou>
then keep it inside CG

[14:15:05.0000] <glazou>
not in WG charter

[14:15:06.0000] <tantek>
CGs allow for additional licensing that ACs have never seen before.

[14:15:07.0000] <glazou>
no problem

[14:15:08.0000] <glazou>
but it's in WG charter

[14:15:09.0000] <annevk>
there's other CG documents hosted on dcvs.w3.org

[14:15:10.0000] <glazou>
and that is currently voted

[14:15:11.0000] <glazou>
annevk: they're not in WG charter

[14:15:12.0000] <tantek>
glazou I raised that question in my blog post about CGs a while ago

[14:15:13.0000] <glazou>
I don't care about other docs

[14:15:14.0000] <tantek>
so far it is unanswered

[14:16:00.0000] <annevk>
a couple of words on the charter does not give you ownership of something I wrote glazou

[14:16:01.0000] <annevk>
that's nonsense

[14:16:02.0000] <tantek>
above URL

[14:16:03.0000] <hober>
editing is in a wg charter, two wgs even

[14:16:04.0000] <tantek>
"How should community groups coordinate (if at all) with existing working groups in areas of overlap?"

[14:16:05.0000] <glazou>
annevk: you're such a young fanatic not caring about IPR it's something exhausting

[14:16:06.0000] <glazou>
sometimes

[14:16:07.0000] <zewt>
...

[14:16:08.0000] <glazou>
tantek: that's unanswered ATM

[14:17:00.0000] <tantek>
glazou and as such, you cannot make conclusive demands.

[14:17:01.0000] <tantek>
we are in unexplored territory, so Anne and I are exploring.

[14:17:02.0000] <glazou>
tantek: trust me I can, this item was forwarded by W3C staff

[14:17:03.0000] <annevk>
glazou: having just skimmed through your email I really do not think I'm the fanatic here

[14:17:04.0000] <tantek>
glazou - I encourage you to tell that W3C staff person to write their own blog post about it

[14:17:05.0000] <tantek>
if they can stand by their words in public

[14:18:00.0000] <tantek>
I certainly did

[14:18:01.0000] <annevk>
I changed the style sheet and I think I'll go back to Zelda

[14:18:02.0000] <glazou>
tantek: a blog entry is not communication with the ACs

[14:18:03.0000] <tantek>
glazou: and private W3C staff communications are an anathema to open standards development.

[14:18:04.0000] <glazou>
that is NOT enough

[14:18:05.0000] <glazou>
since this document is in the WG charter

[14:18:06.0000] <tantek>
a public blog post better helps open standards development than a private email.

[14:18:07.0000] <glazou>
I will then ask it to be removed from the charter

[14:18:08.0000] <tantek>
glazou - the charter simply says what the CSS WG *may* work on

[14:19:00.0000] <tantek>
it doesn't have any jurisdiction on anything outside of CSS WG.

[14:19:01.0000] <glazou>
and then ACs vote on that also based on IPR

[14:20:00.0000] <tantek>
glazou, I'll send my explanation about to w3c-css-wg which you are welcome to forward to the W3C staff person

[14:20:01.0000] <glazou>
and I'll send link to this channel's log

[14:21:00.0000] <glazou>
thanks for the nice present

[14:22:00.0000] <annevk>
I'm not sure what you are getting upset about. I didn't even know this was in the CSS WG charter.

[14:22:01.0000] <annevk>
I only discussed this document and working on the document on the WHATWG list and asked someone for some space to host it.

[14:25:00.0000] <krijn>
Just checking here: http://twitter.com/krijnhoetmer/status/141281791314108416 wasn't supposed to be a secret, was it?

[14:26:00.0000] <zewt>
mental note: if I ever want to get lots of people to click a link, put "is this a secret?" next to the URL

[14:26:01.0000] <krijn>
Yeah, always works :)

[14:26:02.0000] <annevk>
krijn: dude only in #secrettreehouse

[14:26:03.0000] <krijn>
I'm banned there!

[14:29:00.0000] <tantek>
glazou - I prefer discussions of document licensing are done in public forums.

[14:29:01.0000] <tantek>
hence my blogging about it.

[14:29:02.0000] <tantek>
I'll add that to my reply to your member-only w3c-css-wg email ;)

[14:36:00.0000] <tantek>
posted: http://lists.w3.org/Archives/Member/w3c-css-wg/2011OctDec/0240.html

[14:50:00.0000] <tantek>
glazou - FWIW, I do think working with both CGs and more open licenses will help overall W3C draft/group efficiency, including in the CSSWG. There's no reason for GRRRRRs or advocating violence[1]. [1]https://twitter.com/glazou/status/141273032923688960

[15:01:00.0000] <annevk>
o_O

[15:05:00.0000] <Hixie>
http://dev.w3.org/html5/webvtt/ is live

[15:08:00.0000] <Hixie>
in other news, i just dropped the webrtc part of the whatwg spec

[15:12:00.0000] <zewt>
what was the problem with that?

[15:12:01.0000] <Hixie>
w3c forked it and development moved there

[15:12:02.0000] <zewt>
heh

[15:13:00.0000] <Hixie>
(but don't forget kids, forking is bad!)

[15:15:00.0000] <hober>
do as i say, not as i do?

[15:17:00.0000] <tantek>
Hixie, why not take the positive approach? "W3C forks WebRTC spec, demonstrating the utility of forkability!"

[15:19:00.0000] <Hixie>
i only have so much positive energy, my snark has to come out somewhere

[15:19:01.0000] <Hixie>
and #whatwg is it :-)

[15:19:02.0000] <zewt>
because it's impossible to eliminate the irony from that statement :P

[15:22:00.0000] <annevk>
tantek: you might not know they made a restrictive fork

[15:23:00.0000] <annevk>
tantek: only the parts Hixie originally wrote are under the permissive license

[15:23:01.0000] <annevk>
which is fine in a way, but since that is now the only copy being developed further...

[15:23:02.0000] <zewt>
it basically looks like they're going "allowing forks is bad, watch, we'll show you why"

[15:25:00.0000] <zewt>
personally i've come to hate the GPL and use permissive licenses for all of my own open source work, so that sort of thing irritates me in another way (encourages people to use restrictive licenses like the GPL)

[15:25:01.0000] <tantek>
zewt, yeah

[15:25:02.0000] <zewt>
(for a weak value of "hate", to be fair; enough that I don't invest myself in GPL projects beyond trivial patches)

[15:26:00.0000] <Hixie>
GPL isn't have as restrictive as the license they used here, fwiw

[15:26:01.0000] <zewt>
it isn't restrictive compared to proprietary licenses, but it's very restrictive as an open source license

[15:30:00.0000] <tantek>
…and I've used up my "arguing with people on the internet" time quota for today: http://lists.w3.org/Archives/Member/w3c-css-wg/2011OctDec/0242.html (wasted on member-only space at that :( )

[15:30:01.0000] <tantek>
per xkcd.com/386

[15:30:02.0000] <tantek>
back to answering #microformats questions.

[15:31:00.0000] <Hixie>
two e-mails is your quota? man, you're stingy

[15:31:01.0000] <Hixie>
:-P

[15:32:00.0000] <Hixie>
tantek: in other news, you heard anything from the chairs about <time> recently?

[15:32:01.0000] <tantek>
I think we're still on W3C Thanksgiving break

[15:33:00.0000] <tantek>
or so I thought per https://twitter.com/glazou/status/141273910976069632 ;)

[15:33:01.0000] <tantek>
Hixie, in all seriousness I was going to ping the public-html list again for people who still have questions/objections to my change proposals, in the hopes of adding more explanation to help convince folks.

[15:33:02.0000] <Hixie>
is there anyone not convinced?

[15:34:00.0000] <tantek>
since Sam has requested that I work on building more consensus before calling for consensus on the change proposals

[15:34:01.0000] <Hixie>
o...k

[15:34:02.0000] <tantek>
yeah

[15:34:03.0000] <annevk>
I think there was at least one person who wanted to keep pubdate or some such

[15:34:04.0000] <Hixie>
ah ok

[15:34:05.0000] <tantek>
last I saw there was someone with a counter proposal for a global "content" attribute

[15:34:06.0000] <tantek>
annevk - yes I need to debunk that email

[15:34:07.0000] <tantek>
 / blog post

[15:35:00.0000] <tantek>
there are people that hypothetically want pubdate but don't seem to have used it in practice

[15:35:01.0000] <Hixie>
oh lordy, that's all we need

[15:35:02.0000] <Hixie>
a global attribute for this

[15:35:03.0000] <annevk>
oh

[15:35:04.0000] <annevk>
http://dev.w3.org/html5/spec/ still says November 4

[15:35:05.0000] <tantek>
in practical use, any use of pubdate is supersetted with hAtom

[15:35:06.0000] <tantek>
e.g. Readability.com parsing/consuming

[15:36:00.0000] <tantek>
pubdate by itself has only been "theoretically" useful, not actually

[15:37:00.0000] <tantek>
so that's fine, just need to add more FAQs to the change proposals

[15:38:00.0000] <tantek>
which is probably a good thing - will hopefully help avert people walking down the same mistaken paths again sometime in the future when context has been forgotten

[15:38:01.0000] <Hixie>
annevk: yeah, the revert caused a conflict (unsurprisingly), and rather than spend the hours it would take to fix that, i have just made the <time> proposal and stopped doing work on html

[15:38:02.0000] <Hixie>
annevk: since i have a ton of work on WebVTT and other specs to do instead, it's not a big deal

[15:39:00.0000] <tantek>
/me waits for someone to contact WebMonkey to update everyone on the drama. ;)

[15:39:01.0000] <Hixie>
tantek: yeah, in practice the expected consumers of pubdate -- namely, search engines -- have used schema.org and microformats instead

[15:39:02.0000] <Hixie>
tantek: so not much point having pubdate=""...

[15:39:03.0000] <Hixie>
annevk: i didn't expect it would take quite so long for the chairs to move on the <time> issue though, given how urgently they wanted it reverted

[15:40:00.0000] <annevk>
ironyfreezone

[15:41:00.0000] <annevk>
anyway, nn, been a long day :)

[15:41:01.0000] <Hixie>
nn :-)

[15:42:00.0000] <necolas>
Hixie: am i correct in saying that this is not an option? http://ikelewis.com/the-future.html (the "test" is flawed anyway)

[15:43:00.0000] <Hixie>
an option?

[15:44:00.0000] <necolas>
as in, can <img> be repurposed like that in theory?

[15:45:00.0000] <necolas>
iirc, i was previously told it could not be

[15:54:00.0000] <Hixie>
<img> parsing is pretty much a lost cause, but we can probably do something else to solve the same use case

[15:54:01.0000] <Hixie>
<img> used to have a lowsrc="" attribute

[15:54:02.0000] <Hixie>
not many people used it though so we dropped it

[15:55:00.0000] <Hixie>
so before readding it or something like it, we'd need to have evidence that people actually want this solved this time :-)

[15:58:00.0000] <necolas>
Hixie: that's what i thought w.r.t. <img> and wanted to confirm it before people took it too seriously. there is interest in solving the "responsive image" problem, but it's not clear if something like <video> for images (+ use of 'media' attribute) is a good solution. thanks :)


2011-11-29
[16:55:00.0000] <karlcow>
Hixie: i think people wants a "highsrc"

[16:56:00.0000] <karlcow>
as in save bandwidth/more responsive when on mobile. so if <img src="foo" lowsrc="tinyfoo"/> downloads everything foo and tinyfoo. We have not made any progress.

[16:57:00.0000] <karlcow>
personally I do not think 2 sizes solve a lot of use case either.

[16:57:01.0000] <karlcow>
the other issue is that the screen size is only one context.

[16:58:00.0000] <karlcow>
small screen size on a wifi is not the same thing than small screen size on 3g

[17:05:00.0000] <necolas>
karlcow: that's right. screen size is not an accurate proxy of available bandwidth

[17:53:00.0000] <AryehGregor>
In Ubuntu 11.10, you don't need to enter your password to apply updates.  That is a small but amazingly awesome usability improvement.

[17:53:01.0000] <AryehGregor>
Because the update dialog thing shows up like every day.

[22:38:00.0000] <hsivonen>
/me wonders if http://lists.w3.org/Archives/Member/w3c-css-wg/2011OctDec/0239.html meets the criteria for messages that are eligible to be posted to the Member list instead of the public list under the CSS WG mailing list policy

[23:53:00.0000] <Taggnostr>
is there an easy-to-parse version of http://www.w3.org/TR/html5/named-character-references.html available somewhere?

[00:10:00.0000] <MikeSmith>
Taggnostr: maybe http://www.w3.org/2003/entities/2007xml/unicode.xml

[00:11:00.0000] <Taggnostr>
not sure xml is easier to parse than html -- I was hoping in a plain txt like the ones used by the Unicode consortium

[00:11:01.0000] <MikeSmith>
(the source of that, not the rendered version)

[00:11:02.0000] <Taggnostr>
but thanks anyway

[00:11:03.0000] <MikeSmith>
um, OK

[00:12:00.0000] <Taggnostr>
e.g. http://www.unicode.org/Public/6.0.0/ucd/NamedSequences.txt

[00:16:00.0000] <zcorpan>
Taggnostr: http://gsnedders.html5.org/html5.txt

[00:20:00.0000] <Taggnostr>
thanks

[00:21:00.0000] <Taggnostr>
the fact that some entities map to 2 chars is a bit of a problem for application that expect them to map to a single char (and e.g. use a char type for the result)

[00:30:00.0000] <Taggnostr>
is that list definitive or is it possible that more entities will be added in future?

[00:32:00.0000] <zcorpan>
it's not impossible that more entities will be added, but i would say it's unlikely

[00:36:00.0000] <Taggnostr>
ok

[00:41:00.0000] <hsivonen>
https://twitter.com/#!/glazou/status/141436497143414785

[00:43:00.0000] <MikeSmith>
hsivonen: he has such a wonderful, understated way of expressing his views

[00:43:01.0000] <MikeSmith>
very diplomatic

[00:43:02.0000] <MikeSmith>
exactly what one would want in a working-group chair

[00:46:00.0000] <hsivonen>
Taggnostr: I use the character reference table that in the spec and split it using regular experessions

[00:46:01.0000] <hsivonen>
(yes, consuming HTML using regexps in order to build an HTML parser)

[00:46:02.0000] <hsivonen>
s/that in/that is in/

[00:47:00.0000] <Taggnostr>
I used the parser that needs the entities to parse the page that contains it :)

[00:47:01.0000] <Taggnostr>
s/it/them/

[00:49:00.0000] <Taggnostr>
btw, is there any reason why the U+XXXXX notation is used there? usually U+XXXX is used for BMP chars, and U+XXXXX and U+XXXXXX are used for non-BMP ones

[00:49:01.0000] <Taggnostr>
it's just a minor nit, but it looks a bit weird to me

[00:51:00.0000] <zcorpan>
file a bug

[00:52:00.0000] <zcorpan>
the spec uses U+XXXX elsewhere

[00:55:00.0000] <Taggnostr>
is the "feedback comments" form ok too?

[00:56:00.0000] <Taggnostr>
can I also provide a patch?

[00:56:01.0000] <zcorpan>
the feedback form is ok (it files a bug)

[00:56:02.0000] <zcorpan>
the table is generated so i don't think a patch on the html source will help

[00:57:00.0000] <Taggnostr>
then I guess the script that generates it will need to be patched

[00:57:01.0000] <zcorpan>
yeah

[00:58:00.0000] <zcorpan>
afaik that script isn't public

[00:59:00.0000] <Taggnostr>
ok

[01:13:00.0000] <tantek>
hsivonen - I specifically stated my preference to have licensing discussions in public in that thread.

[01:13:01.0000] <tantek>
not sure what else I can do except just continue to do the work itself in public

[01:52:00.0000] <david_carlisle>
Taggnostr: the 5 digit convention is probably my fault, I use that internally in unicode.xml (to allow easy naive sorting of filenames etc) but (after comments on earlier drafts) I switch to 4 digits for BMP range in the generated spec, so I guess Hixie should do same in the htnl spec

[03:07:00.0000] <annevk>
tantek: I emailed once explaining where I come from

[03:08:00.0000] <annevk>
tantek: if someone wants to discuss next steps I suggest we request that happens in public

[03:19:00.0000] <hsivonen>
tantek, annevk: thank you for preferring discussion in public

[03:20:00.0000] <annevk>
kind of painful the whole thing

[03:21:00.0000] <annevk>
I wish people were a bit nicer about it

[03:21:01.0000] <annevk>
the other thing is that the only interactions I have with these people is when they want to badmouth me for something they think I did wrong

[03:21:02.0000] <annevk>
it's a very negative relationship

[03:22:00.0000] <jgraham>
I toughtthere was only one person who wanted everything to happen behind closed doors

[03:22:01.0000] <jgraham>
*thought there

[03:25:00.0000] <jgraham>
Is there any precedent for dispatching events to window and workers

[03:25:01.0000] <jgraham>
?

[03:25:02.0000] <jgraham>
It seems like the device orientation people are considering it

[03:25:03.0000] <annevk>
as long as it's async that might be fine

[03:26:00.0000] <annevk>
I don't think there's a precedent

[03:26:01.0000] <annevk>
and it might be a bit inconsistent I guess

[03:30:00.0000] <jgraham>
It feels a bit weird to me. I mean I can see the appeal, but it's not hard to forward the important points as messages to the worker if you want to

[03:30:01.0000] <jgraham>
This would be much easier with a polling-based design :|

[03:30:02.0000] <annevk>
are we going to do the same for scroll/hashchange etc.?

[03:31:00.0000] <annevk>
this is why it's bad to have people working on features in a vacuum

[03:31:01.0000] <annevk>
they do what makes some sense to me without considering the platform as a whole

[03:33:00.0000] <michel_v>
to them, you mean?

[03:33:01.0000] <annevk>
oops yes

[03:34:00.0000] <michel_v>
it always comes down to "Very clever people, working alone, make very clever mistakes"

[03:35:00.0000] <smaug____>
saying something happens behind the the closed doors makes one curious what is discussed there...

[03:36:00.0000] <annevk>
smaug____: see http://krijnhoetmer.nl/irc-logs/whatwg/20111128#l-443 onwards

[03:40:00.0000] <smaug____>
huh

[04:15:00.0000] <annevk>
http://lists.w3.org/Archives/Public/public-html/2011Oct/0108.html o_O

[04:19:00.0000] <zcorpan>
why do we support Link: again?

[04:20:00.0000] <hsivonen>
it seems this would be the easiest to solve by unsupporting Link

[04:21:00.0000] <hsivonen>
zcorpan: I gather it's mostly Hixie's and annevk's fault for writing tests

[04:21:01.0000] <hsivonen>
annevk: the CP has the usual Conformance Classes Changes: None.

[04:22:00.0000] <annevk>
I was willing to cave on Link btw

[04:22:01.0000] <annevk>
Hixie still likes it

[04:23:00.0000] <annevk>
not sure if it's in Acid3 or not

[04:23:01.0000] <zcorpan>
it's not

[04:23:02.0000] <annevk>
nuking it works for me

[04:23:03.0000] <annevk>
but I think it might be in 3 browsers by now?

[04:24:00.0000] <zcorpan>
did ie implement it?

[04:25:00.0000] <zcorpan>
http://simon.html5.org/articles/mobile-results is unstyled in chrome

[05:05:00.0000] <hsivonen>
who is operating DuckDuckGo and what's their business model?

[05:07:00.0000] <wilhelm_>
It was just one guy until recently.

[05:08:00.0000] <hsivonen>
is it basically an anonymizer on top of Yahoo! (which itself gets data from Bing)?

[05:08:01.0000] <jgraham>
/me hopes their business model is independent of whether the name is too embarassing for word-of-mouth marketing to work

[05:09:00.0000] <wilhelm_>
No, I think it's more fancy than that. Here's the guy: http://www.gabrielweinberg.com/

[05:10:00.0000] <hsivonen>
jgraham: their name seems more catchy than e.g. Teoma

[05:10:01.0000] <erlehmann>
i started using duckduckgo solely because it is not as overbloated as other frontends and does not second-guess like google.

[05:11:00.0000] <jgraham>
I can't imagine ever telling my mother to use a search engine called DuckDuckGo. Assuming she didn't mishear me and think I was talking about a porn search engine, she would laugh at me

[05:11:01.0000] <erlehmann>
in before someone mentioning the gimp

[05:12:00.0000] <erlehmann>
also in before someone mentioning photoshop, wondering aloud if that is a program to buy color prints online.

[05:12:01.0000] <hsivonen>
I don't know English porn slang well enough to understand what makes duckduckgo sound like a porn search engine

[05:12:02.0000] <erlehmann>
just checked the yahoo front page. it is still full of crap :/

[05:12:03.0000] <jgraham>
I was siomply thinking s/D/F/g

[05:12:04.0000] <hsivonen>
jgraham: I see

[05:13:00.0000] <jgraham>
(if it does become popular that site will *so* exist)

[05:13:01.0000] <hsivonen>
I thought the association you are supposed to make is duck, duck, goose

[05:14:00.0000] <erlehmann>
http://www.boardgamegeek.com/boardgame/35964/duck-duck-go

[05:14:01.0000] <erlehmann>
>duck! duck! GO! comes with 6 REAL rubber duckies, and a rubber bird dog. There are over 100 duckies in the set - which ones will YOU get?

[05:28:00.0000] <sakamal>
hello

[05:29:00.0000] <jgraham>
hi

[06:19:00.0000] <mpt>
erlehmann, Photoshop 1.0's icon: http://blog.cocoia.com/2008/the-first-photoshop-icon/

[06:28:00.0000] <hsivonen>
where's the useful set of Mac OS X settings that was on github and was called something like ~/.osx?

[06:28:01.0000] <hsivonen>
the name of the project turns out to be ungooglable

[06:29:00.0000] <hasather>
hsivonen: https://github.com/mathiasbynens/dotfiles/blob/master/.osx?

[06:29:01.0000] <hsivonen>
hasather: yes. thank you

[06:34:00.0000] <hsivonen>
hmm. I was almost sure that list of tricks had a way to speed up network shares by making Finder not look inside files to generate icons

[06:34:01.0000] <hsivonen>
but now the list seems to be lacking that

[06:38:00.0000] <hsivonen>
for some reason, accessing my NAS from Lion is terribly, terrible slow compared to Snow Leopard or Ubuntu

[06:41:00.0000] <michel_v>
hsivonen: over AFP? there's been changes in Lion, so your NAS needs an update if the vendor released one

[06:42:00.0000] <hsivonen>
michel_v: I've updated the NAS

[06:42:01.0000] <hsivonen>
michel_v: I turned off AFP just now. Left the CIFS service running on the NAS

[06:42:02.0000] <hsivonen>
curiously, my pre-existing Mac aliases pointing to the NAS still work

[06:43:00.0000] <hsivonen>
even though I thought I was using AFP previously

[06:43:01.0000] <hsivonen>
I think it's still very uncool of Apple to make perf suck with unupdated AFP servers

[06:50:00.0000] <annevk>
volkmar: battery strength could be used across pages

[06:50:01.0000] <annevk>
volkmar: not sure if that is exposed though

[06:50:02.0000] <annevk>
volkmar: I only briefly looked at the draft

[06:53:00.0000] <volkmar>
annevk: battery strength?

[06:54:00.0000] <volkmar>
you mean level?

[06:54:01.0000] <annevk>
yeah seems like I mean that

[06:56:00.0000] <hsivonen>
hmm. maybe I've accidentally used CIFS from the Mac all along and I should switch the Mac to using AFP...

[06:59:00.0000] <annevk>
volkmar: in any event, it does not seem like a serious issue

[07:00:00.0000] <hsivonen>
how can accessing local network shares suck this badly in Lion

[07:08:00.0000] <volkmar>
annevk: knowing the battery level doesn't seem like a privacy treat to me

[07:08:01.0000] <volkmar>
I mean, the battery level is a changing information

[07:09:00.0000] <annevk>
it's fingerprinting of some kind but it's not exactly stable

[07:09:01.0000] <annevk>
 / reliable

[07:09:02.0000] <volkmar>
annevk: yes, it could be used to fingerprint but hardly

[07:10:00.0000] <annevk>
hopefully

[07:10:01.0000] <hsivonen>
maybe for cross-site navigation. not for return visits

[07:10:02.0000] <annevk>
apparently deviceorientation can be used to figure out what keys you press

[07:13:00.0000] <jgraham>
Wow, is it really that sensitive? Or is the attack different to what I am imagining?

[07:14:00.0000] <annevk>
sensitive I believe

[07:18:00.0000] <hsivonen>
annevk: do you mean the device moves a little when you press keys and device orientation can pick that up?

[07:19:00.0000] <jarek>
what's the current state of http://dev.w3.org/csswg/css3-page/?

[07:19:01.0000] <jarek>
does any browser implement it?

[07:19:02.0000] <jarek>
the grammar seems to be out of sync with the examples

[07:20:00.0000] <miketaylr>
here's the original paper, hsivonen (i believe): www.cs.ucdavis.edu/~hchen/paper/hotsec11.pdf

[07:20:01.0000] <annevk>
hsivonen: see e.g. http://www.gatech.edu/newsroom/release.html?nid=71506

[07:21:00.0000] <miketaylr>
oh cool, haven't seen this one

[07:23:00.0000] <hsivonen>
miketaylr, annevk: thanks

[07:29:00.0000] <divya>
no implementation yet jarek

[07:29:01.0000] <jarek>
divya: even in Opera? AFAIR the spec was pushed by Opera

[07:30:00.0000] <divya>
we have implementation for this http://dev.w3.org/csswg/css3-gcpm/

[07:45:00.0000] <annevk>
argh

[07:45:01.0000] <annevk>
qualified name versus prefix/local name/namespace make attributes complex

[07:49:00.0000] <jarek>
why @page atrule can have only one pseudo-class?

[07:50:00.0000] <jarek>
e.g. I can have either "@page :first" or @page :left", but not @page :first:left"

[07:53:00.0000] <scor>
hsivonen: will validator.nu validate such markup one day? <link href="page.html" rel="foaf:page">

[07:53:01.0000] <scor>
is it pending some spec to become more stable, or it is the way it is now by design?

[07:55:00.0000] <scor>
validator.nu choose HTML5+ARIA, SVG 1.1 plus MathML 2.0 (experimental) for the page I was testing

[08:07:00.0000] <annevk>
the other extremely silly thing is that setAttributeNS takes a qualified name

[08:10:00.0000] <annevk>
ohg

[08:10:01.0000] <annevk>
given

[08:10:02.0000] <annevk>
 document.head.setAttributeNS("test", "x:a", "a")

[08:10:03.0000] <annevk>
 document.head.setAttributeNS("test", "e:a", "b")

[08:10:04.0000] <annevk>
Gecko actually changes the prefix!

[08:11:00.0000] <annevk>
which is what the spec says :)

[08:11:01.0000] <annevk>
but not what Opera/WebKit do

[08:11:02.0000] <MikeSmith>
/me krijn 

[08:12:00.0000] <MikeSmith>
oofs

[08:12:01.0000] <krijn>
Yes?

[08:12:02.0000] <krijn>
/me MikeSmith too!

[08:45:00.0000] <smaug____>
hmm, 3.5% of XHRs are still sync :/

[08:45:01.0000] <smaug____>
unfortunately I don't know which sites are using sync XHR

[08:52:00.0000] <annevk>
smaug____: how many of those are cross-origin?

[08:52:01.0000] <smaug____>
dunno

[08:52:02.0000] <smaug____>
I could add some more probes

[08:52:03.0000] <annevk>
I'm happy to make that change sicking suggested

[08:53:00.0000] <annevk>
not sure if it's preferable for the spec to lead there though

[09:26:00.0000] <annevk>
maybe I should define

[09:26:01.0000] <annevk>
append "attribute"

[09:26:02.0000] <annevk>
change attribute value

[09:26:03.0000] <annevk>
remove attribute

[09:27:00.0000] <annevk>
append/remove/change

[09:44:00.0000] <AryehGregor>
It's absolutely astonishing how much time I wind up spending on wedding-related stuff 13 days before.

[09:44:01.0000] <AryehGregor>
(how much being basically all of it)

[09:44:02.0000] <AryehGregor>
/me has not done a single minute of work since last Wednesday

[09:45:00.0000] <jgraham>
/me is absolutely not astonished

[09:45:01.0000] <annevk>
/me wishes he had a break in the same period

[09:46:00.0000] <jgraham>
annevk: I thought you were just playing Zelda :p

[09:46:01.0000] <dglazkov>
AryehGregor: congrats!

[09:46:02.0000] <annevk>
AryehGregor: hopefully you can enjoy it when it's there :)

[09:47:00.0000] <annevk>
jgraham: that's what I should do :)

[09:47:01.0000] <annevk>
jgraham: finally got those damn flames, now these otherworldly powers are asking me see some dragons

[09:47:02.0000] <annevk>
jgraham: never stops, that game

[09:47:03.0000] <divya>
AryehGregor: congratulations!

[09:48:00.0000] <AryehGregor>
dglazkov, divya: Thanks.

[09:48:01.0000] <jgraham>
/me should finish the last Zelda game :p

[09:49:00.0000] <Philip`>
AryehGregor: 13 days of pre-wedding effort seems insignificant to the lifetime of post-wedding effort that will be needed

[09:50:00.0000] <AryehGregor>
Philip`, well, right, but I'm expecting that the post-wedding effort won't be so much as to actually preclude me from working.  I think my wife would take exception to that.

[09:50:01.0000] <jgraham>
Depends, maybe his new bridge will push a toaster in the bath on their honeymoon

[09:50:02.0000] <jgraham>
*bride

[09:50:03.0000] <jgraham>
I assume you are not marrying a bridge…

[09:50:04.0000] <AryehGregor>
/me doesn't take baths, so is safe

[09:51:00.0000] <AryehGregor>
No, but if you're interested, I have a lovely bridge to sell you.

[09:51:01.0000] <AryehGregor>
Scenic view, busiest vehicular bridge in the world, roughly two blocks from my house.

[09:51:02.0000] <AryehGregor>
Only $50,000.

[09:54:00.0000] <AryehGregor>
I don't have the deed handy, but I'll be able to get it to you in six months if you pay now.

[09:55:00.0000] <AryehGregor>
Just need to find it buried somewhere under the sofa cushions.

[11:32:00.0000] <rniwa>
good morning #webkit

[11:33:00.0000] <rniwa>
oops I mean #whatwg

[11:33:01.0000] <AryehGregor>
rniwa, FYI, if you didn't know, I'm being really slow to respond to anything because I'm getting married in 13 days.

[11:33:02.0000] <AryehGregor>
So if something is urgent, be sure to ping me and I can look.

[11:34:00.0000] <rniwa>
AryehGregor: oh, congratulations!

[11:34:01.0000] <AryehGregor>
But otherwise it will probably stay on the backburner for a couple of weeks.

[11:34:02.0000] <AryehGregor>
Thanks!

[11:34:03.0000] <rniwa>
AryehGregor: well, it seems like everyone's slow in responding to anything in december so no problem :)

[11:34:04.0000] <rniwa>
AryehGregor: have you moved to Israel already?

[11:35:00.0000] <AryehGregor>
rniwa, no, that will be a few months after we get married.

[11:35:01.0000] <rniwa>
AryehGregor: ah, ok/

[11:49:00.0000] <gsnedders>
Hah, so IE10pp4 finally has XHR+CORS. Wonder if they still have XDR?

[11:52:00.0000] <erlehmann>
gsnedders, what is the „pp“ for?

[11:56:00.0000] <gsnedders>
erlehmann: Platform preview

[11:57:00.0000] <erlehmann>
gsnedders, meaning what exactly?

[11:58:00.0000] <erlehmann>
is that microsoftspeak for “beta” ?

[12:00:00.0000] <gsnedders>
erlehmann: pre-alpha, really

[12:00:01.0000] <gsnedders>
Or alpha, depending on how you define terms

[12:01:00.0000] <erlehmann>
gsnedders, what do they say for “beta” ? in before odd release numbers.

[12:04:00.0000] <gsnedders>
"Beta"

[12:04:01.0000] <gsnedders>
And then "Release Candidate"

[12:04:02.0000] <gsnedders>
The platform preview isn't really a browser.

[12:05:00.0000] <gsnedders>
It's just a thin wrapper around mshtml.dll

[12:05:01.0000] <gsnedders>
The platform previews really have little relation to where they are in the dev phase

[12:05:02.0000] <gsnedders>
IE9 had PPs after the Beta

[12:35:00.0000] <jgraham>
Right, platform preview is actually quite literal

[12:35:01.0000] <jgraham>
It is a preview of the *platform* i.e. the rendering engine/scripting engine/etc.

[12:35:02.0000] <jgraham>
Not of the browser

[12:36:00.0000] <jgraham>
i.e. it doesn't have any UI

[12:36:01.0000] <jgraham>
(or any UI that will actually be released)

[12:56:00.0000] <L04f3r>
Is IE10 really that great as they claim it to be: http://samples.msdn.microsoft.com/ietestcenter/#svg11e2

[12:57:00.0000] <L04f3r>
SVG compliance beating both Chrome and Firefox

[12:59:00.0000] <miketaylr>
based on the 74 submitted tests, probably

[12:59:01.0000] <L04f3r>
Well actually on the same page they claim IE9 Svg is not that bad either,

[13:00:00.0000] <L04f3r>
I think they just pick and choose what to test against.

[13:07:00.0000] <hober>
gaaaah

[13:08:00.0000] <hober>
I always expect bugs.w3.org or bugzilla.w3.org to go to the right place

[13:09:00.0000] <hober>
MikeSmith: do you think we could get a redirect or two in place?

[13:11:00.0000] <bga_>
gsnedders http://mobile.twitter.com/kangax/status/141623286927851521

[13:13:00.0000] <jgraham>
hober: Oh, I thought it was just me

[13:13:01.0000] <jgraham>
I *always* type bugs.w3.org

[13:13:02.0000] <jgraham>
Showing a disturing inability to learn

[13:20:00.0000] <gsnedders>
bga_: known

[13:22:00.0000] <timeless>
AryehGregor: mazal tov

[13:24:00.0000] <timeless>
L04f3r: what microsoft does is pick certain areas to do work on

[13:24:01.0000] <timeless>
and then they do work on them

[13:24:02.0000] <timeless>
in those areas, they also advertise that they've done work

[13:24:03.0000] <timeless>
this is all perfectly rational

[13:27:00.0000] <roc>
Microsoft tends to not submit tests that they don't pass

[13:28:00.0000] <jgraham>
It is also true that they often pass tests that they have written. Or do well in benchmarks they have written. This is not really surprising. In general be very worried about attaching too much weight to single-vendor tests of any kind. Or any tests really. But at least if it is something where multiple people have independly contributed to there is a hope it won't suck

[13:28:01.0000] <dbaron>
roc, neither does any browser vendor other than Mozilla, I think

[13:28:02.0000] <roc>
the fairest way to interpret their test results is to compare the non-IE browsers against each other and ignore the IE results :-)

[13:29:00.0000] <gsnedders>
dbaron: We release tests we fail… along with a greater number we pass. :)

[13:29:01.0000] <jgraham>
We have even been known to release whole testsuites we do badly at (XHR2)

[13:30:00.0000] <gsnedders>
Well, we did equally badly when we released that, no?

[13:30:01.0000] <dbaron>
hmmm, I think somebody from Opera once told me they're not supposed to do that, but maybe they do, and that's good :-)

[13:30:02.0000] <gsnedders>
It's just others improved more quickly than us. :P

[13:31:00.0000] <jgraham>
gsnedders: I don't think so. But I might be wrong.

[13:31:01.0000] <astearns>
I've been submitting tests that both WebKit and IE fail, but should pass soon :)

[13:31:02.0000] <jgraham>
/me is generally more upset by crappy performance tests than crappy regression tests because they seem to have more PR value

[13:33:00.0000] <gsnedders>
But how quickly you can shift off an empty array is *totally* important!

[13:33:01.0000] <jgraham>
e.g. apparently all of Microsoft's canvas tests essentially tested blitting speed. But there were lots of them and they were pretty

[13:33:02.0000] <jgraham>
And sunspider is kind of a joke

[13:33:03.0000] <gsnedders>
(That's PeaceKeeper 2)

[13:34:00.0000] <jgraham>
Well yeah, Peacekeper is just very buggy

[13:34:01.0000] <gsnedders>
Also another favourite thing to benchmkar is timer resoution.

[13:34:02.0000] <gsnedders>
*benchmark

[13:34:03.0000] <jgraham>
15:36 < jgraham> Well yeah, Peacekeper is just very buggy

[13:35:00.0000] <gsnedders>
I meant that more generally than PEaceKEpper.

[13:35:01.0000] <jgraham>
(it is doubly sad because good performance tests are really useful in targeting optimisation work)

[13:35:02.0000] <gsnedders>
*PeaceKeeper

[13:35:03.0000] <gsnedders>
/me really can't type decently right now

[13:35:04.0000] <gsnedders>
jgraham: Well, Kraken is fairly decent. But it's massively dominated by whether you impl a small number of things or not, CSE especially.

[13:37:00.0000] <gsnedders>
(Which, to be fair, is interesting. But if you care about perf it's something you can trivially do yourself.)

[13:38:00.0000] <gsnedders>
Testing things that can't be done at a source level are more interesting.

[13:38:01.0000] <jgraham>
Right, Kraken has actually made some attempt to target realistic workloads, which is nice

[13:46:00.0000] <timeless>
writing good tests is hard

[13:46:01.0000] <timeless>
plus you'll eventually lose

[13:46:02.0000] <timeless>
it's better to write and publish tests which let you look good in marketing :)

[13:47:00.0000] <timeless>
oh wait, i don't think i've ever had an employer that tried to do that

[13:47:01.0000] <timeless>
/me sighs

[13:50:00.0000] <roc>
gsnedders: actually in JS you can't CSE everything yourself, because there are a bunch of CSE-able runtime checks

[13:53:00.0000] <gsnedders>
roc: I'm assuming the author of the JS knows the types of arguments of the function and items higher up in the lexical scope are.

[13:54:00.0000] <gsnedders>
roc: Oh, you mean the runtime checks are CSE-able?

[13:54:01.0000] <gsnedders>
Oh, duh.

[13:54:02.0000] <roc>
yeah

[13:54:03.0000] <gsnedders>
I need to read what you write, and not read four things at once :)

[13:55:00.0000] <gsnedders>
roc: Depending on design, that may be done separately to CSE of code, though

[13:55:01.0000] <annevk>
IE has CORS now

[13:55:02.0000] <annevk>
sweet

[13:55:03.0000] <gsnedders>
annevk: Old news.

[13:55:04.0000] <annevk>
care

[13:59:00.0000] <annevk>
so I think Sam Ruby announced earlier today that the W3C HTML spec

[14:00:00.0000] <annevk>
of which the editor's draft was last updated November 4

[14:00:01.0000] <annevk>
will not see updates until at least somewhere in January

[14:00:02.0000] <annevk>
way to make yourself irrelevant

[14:02:00.0000] <timeless>
wasn't it already irrelevant?

[14:08:00.0000] <annevk>
I wish there was a way to fix a typo in a tweet other than deleting it and posting a new one

[14:08:01.0000] <gsnedders>
+1

[14:09:00.0000] <hober>
/me must have missed that announcement

[14:11:00.0000] <annevk>
it follows from when they plan to work on <time> again

[14:11:01.0000] <annevk>
which seems mid-January, maybe later

[14:11:02.0000] <timeless>
well, we're almost @december anyway

[14:11:03.0000] <timeless>
and that's a holiday somewhere

[14:11:04.0000] <annevk>
see e.g. http://lists.w3.org/Archives/Public/public-html/2011Nov/0229.html

[14:12:00.0000] <annevk>
more likely end of January / mid-February given the time they give for counter proposals and all

[14:17:00.0000] <gavinc>
Yeah, it's so horrible to take a little bit of time to let people read, think, and respond. I mean a whole four weeks will have gone by! (two of which will likely to be spent on holidays)

[14:19:00.0000] <_bga>
https://gitorious.org/qmlweb/pages/Home

[14:19:01.0000] <annevk>
gavinc: the problem is giving people time to comment, that's great

[14:20:00.0000] <annevk>
gavinc: the problem is having an unmaintained forked draft

[14:20:01.0000] <annevk>
I'm missing a "not" in that first sentence :)

[14:21:00.0000] <karlcow>
annevk: I'm pretty the Web will survive :)

[14:21:01.0000] <timeless>
annevk: unmaintained drafts, oh my!

[14:21:02.0000] <timeless>
wait, doesn't that describe 10-15 years of w3 docs?

[14:21:03.0000] <karlcow>
I have been watching for 20 years its soap-opera. It will survive for a few weeks, months even

[14:22:00.0000] <karlcow>
hurricane in teapots

[14:22:01.0000] <gavinc>
So the W3C is making itself irrelevant by having forked the WHATWG HTML document in order to revert an element that that WHATWG added back after taking a few days to consider having removed it.

[14:23:00.0000] <annevk>
karlcow: there's always things that will outlast other things

[14:23:01.0000] <jgraham>
gavinc: That seems to be an inaccurate summary of the situation, yes

[14:24:00.0000] <annevk>
karlcow: you are probably right that this does not matter much

[14:25:00.0000] <annevk>
karlcow: at least we are past the point where if I said "specification" on my weblog I would get a lengthy public personal letter from someone

[14:25:01.0000] <gavinc>
annevk: but a good chance to bash the W3C can't go wasted

[14:25:02.0000] <gsnedders>
TabAtkins: Is it a goal of selectors to be able to do something like //*[substring(., 0, 4) == "this"] or //comment()?

[14:25:03.0000] <annevk>
gavinc: I did not bash the W3C

[14:26:00.0000] <annevk>
gavinc: I am somewhat upset by the not caring of the HTML WG co-chairs

[14:26:01.0000] <annevk>
gavinc: and them not giving any indication they are doing something here

[14:26:02.0000] <othermaciej>
we do care

[14:26:03.0000] <annevk>
gavinc: or communicating about the problem

[14:26:04.0000] <othermaciej>
and will do something

[14:26:05.0000] <annevk>
hey othermaciej :) sweet

[14:26:06.0000] <othermaciej>
though I'm honestly unable to predict what

[14:26:07.0000] <annevk>
heh

[14:28:00.0000] <TabAtkins>
gsnedders: The first selects all elements with names beginning with "this", right?

[14:29:00.0000] <jgraham>
gsnedders: I don't think anyone is seriously arguing that selectors will ever be as powerful as XPath

[14:29:01.0000] <TabAtkins>
gsnedders: Almost certainly not.  JS can do the former just as easily, and comment nodes are mostly irrelevant.

[14:29:02.0000] <jgraham>
The only discussion is whether it is worth adding API for that extra power

[14:29:03.0000] <TabAtkins>
jgraham: I seriously argue that they're basically identical in power, especially when combined with JS and NodeArray or whatever.

[14:30:00.0000] <jgraham>
TabAtkins: In that case I claim that DOM is just as powerful and selectos are unnecessary

[14:30:01.0000] <annevk>
fwiw, unlike Selectors, XPath can select text nodes, attribute nodes, and things like that

[14:31:00.0000] <gavinc>
fragments of text nodes too

[14:31:01.0000] <jgraham>
Right, XPath is clearly theoretically better than selectors.

[14:31:02.0000] <annevk>
if "better" means it can do more

[14:32:00.0000] <gsnedders>
TabAtkins: No, names whose textContent begins with this

[14:32:01.0000] <zewt>
more widely-known, i'd expect, which is a plus in and of itself

[14:32:02.0000] <annevk>
but it would be interesting to see how often XPath is used today and how much convenience APIs have been created for it

[14:32:03.0000] <gsnedders>
TabAtkins: That argument applies to selectors too.

[14:32:04.0000] <gsnedders>
TabAtkins: (that it can just be done in JS)

[14:32:05.0000] <zewt>
i've used it, though mostly just for local greasemonkey scripts; never really had a need for pages i've authored myself

[14:33:00.0000] <zewt>
and for xml stuff, of course, though not for a long time

[14:33:01.0000] <gavinc>
TabAtkins: In fact plenty of sites still use @style and JS to do styling

[14:33:02.0000] <gsnedders>
JS is Turing complete, so you can do, any processing you want of data you have access to.

[14:33:03.0000] <zewt>
(actually, not that long, now that I think about it)

[14:33:04.0000] <jgraham>
"Better" means something like "has been designed with a small number of ideas that work with the whole DOM data model"

[14:33:05.0000] <zewt>
(i know nothing at all about selectors)

[14:34:00.0000] <gsnedders>
Anolis certainly used to use XPath for things that don't work with CSS Selectors.

[14:34:01.0000] <jgraham>
Whereas selectors has celarly just been made up as people went along to solve CSS use cases

[14:34:02.0000] <jgraham>
*clearly

[14:34:03.0000] <zewt>
(is that just the name for css matching?)

[14:34:04.0000] <gsnedders>
(It didn't use CSS Selectors at all, because in lxml they're just compiled to XPath, so there's little gain, just cost)

[14:34:05.0000] <zewt>
(i abuse parentheses)

[14:34:06.0000] <jgraham>
zewt: Yeah

[14:34:07.0000] <zewt>
gotcha

[14:34:08.0000] <jgraham>
(you do)

[14:34:09.0000] <zewt>
heh

[14:35:00.0000] <gavinc>
systems for crawling the public web use xpath a fair amount. Not a browser UA, but still a UA.

[14:35:01.0000] <timeless>
that reminds me, i should pick up one of the other specs and review it

[14:35:02.0000] <timeless>
/me gets distracted by chasing credit cards and bills

[14:35:03.0000] <zewt>
yeah, i use it for finding random nodes for gm scripts pretty often (but that's not a use case for a web api)

[14:36:00.0000] <annevk>
gavinc: but not really relevant for developing browser-based APIs

[14:36:01.0000] <timeless>
anyone here ever ask United Airlines for a duplicate of a receipt for an extra baggage fee?

[14:36:02.0000] <zewt>
timeless: i might ask such a thing if i want to see a blank, bewildered stare

[14:36:03.0000] <jgraham>
I use XPath all the time with html5lib + lxml but again tht's not quite the web use case

[14:36:04.0000] <timeless>
zewt: it's blocking a >1000$ reimbursement

[14:37:00.0000] <timeless>
the fee was 25%

[14:37:01.0000] <timeless>
s/%/$/

[14:38:00.0000] <gsnedders>
/me thinks unless browsers are going to drop XSLT and the existing DOM Level n XPath impls, we may as well have a clean API for it

[14:38:01.0000] <jgraham>
I tend to agree

[14:38:02.0000] <jgraham>
Which never happens :)

[14:38:03.0000] <jgraham>
Although I don't include XSLT in my argument

[14:39:00.0000] <jgraham>
Because, ugh

[14:39:01.0000] <gsnedders>
jgraham: Well, we can't drop XPath and not XSLT.

[14:39:02.0000] <zewt>
i tend to find css selectors for the common cases more readable; but that's probably because when i use xpath, it's generally for more complex cases anyway

[14:39:03.0000] <jgraham>
zewt: I think it is generally agreed that for simple cases selectors are more readable

[14:40:00.0000] <jgraham>
foo.bar is better than //foo[@class='bar']

[14:40:01.0000] <jgraham>
(and that isn't even right)

[14:40:02.0000] <zewt>
also, i've never tried using css selectors for GM scripts; i probably should

[14:41:00.0000] <TabAtkins>
gsnedders: Ah, in that case, maybe.  Selectors based on text content have been rejected as too slow for CSS, but if we do a "batch processors profile" of Selectors, it's perfectly reasonable.

[14:41:01.0000] <zewt>
yeah, i have to check references a lot with xpath, which IMO implies a poor design (also because I don't use it often enough, but even so)

[14:42:00.0000] <gavinc>
can selectors select positionally? //foo[42] I know I never have but not sure I haven't

[14:42:01.0000] <TabAtkins>
gsnedders: I don't think "You dont' need Selectors at all if you have JS" is a reasonable argument.

[14:42:02.0000] <TabAtkins>
gavinc: Yes, but in a different way than XPath does.

[14:42:03.0000] <gavinc>
TabAtkins: nth child stuff? yeah okay

[14:42:04.0000] <TabAtkins>
gavinc: Selectors can select based on index among siblings.  XPath selects based on document-order index in the current context nodeset.

[14:43:00.0000] <gavinc>
TabAtkins: Which is often the parent and thus often the same

[14:43:01.0000] <gavinc>
TabAtkins: Yeah

[14:43:02.0000] <TabAtkins>
gavinc: However, with JS involved (which is the context we care about here), it's just "document.find('foo')[42]"

[14:43:03.0000] <annevk>
and Selectors ignores non-elements

[14:43:04.0000] <TabAtkins>
Or rather, findAll.

[14:44:00.0000] <jgraham>
(kind of sucks if you don't want to create and destroy a big array of elements though)

[14:45:00.0000] <jgraham>
document.selectSingleNode("//foo[42]") avoids that

[14:45:01.0000] <TabAtkins>
A little bit, sure.  I don't know if it's a big deal.  The fact that map() and filter() are separate functions also sometimes means you're creating intermediaries.

[14:45:02.0000] <TabAtkins>
But that's good enough for most functional languages.

[14:45:03.0000] <zewt>
python has spoiled me against the grossness of map and filter functions

[14:46:00.0000] <TabAtkins>
I'll admit, list comprehensions are awesome.

[14:46:01.0000] <gavinc>
Personally I know I would have used XPath in the browser more with a better API. But then the back end was often XML

[14:46:02.0000] <TabAtkins>
And I'm excited to get them in JS.

[14:46:03.0000] <zewt>
(list comprehensions and generator expressions)

[14:46:04.0000] <jgraham>
Anyway, I am quite skeptical that the line in the sand between "what I should have to write js for" and "what I can use a DSL for" is "what selectors can do"

[14:46:05.0000] <gavinc>
Didn't use CSS selectors much in JS till JQuery either

[14:46:06.0000] <timeless>
and i'm expecting them to ask me for 25$ for the receipt

[14:47:00.0000] <jgraham>
timeless: Sucks to be you...

[14:47:01.0000] <TabAtkins>
jgraham: Sure.  But I don't think the answer for "the line is misdrawn" is "support a new language with a different syntax but 95% the same functionality"

[14:47:02.0000] <karlcow>
is there an implementation of selectors in python.

[14:47:03.0000] <jgraham>
TabAtkins: It's not "support a new language" though

[14:47:04.0000] <karlcow>
/me is using a lot XPath in my scripts

[14:47:05.0000] <jgraham>
karlcow: Yeah lxml has one

[14:47:06.0000] <gavinc>
karlcow: It compiles XPaths ;)

[14:47:07.0000] <jgraham>
But just using xpath is easier

[14:47:08.0000] <TabAtkins>
gavinc: Yeah, jQuery made Selectors-in-JS popular, paving the way for querySelector and now find.

[14:47:09.0000] <paul_irish>
hey #whatwg.. friends and i are working on a site to launch tomorrow that's all about getting more developer/author involvement in standards & browser development... http://h5bp.github.com/igotmybeanie/ would love any feedback you have. areas where the content is a little WTF or could use more detail..

[14:47:10.0000] <karlcow>
ahah

[14:48:00.0000] <gavinc>
TabAtkins: I do remember however wishing that jQuery had also implemented XPath selectors :\

[14:48:01.0000] <jgraham>
Apparenty it did at one point

[14:48:02.0000] <TabAtkins>
jgraham: XPath is a new language for most devs.  If qSA had never existed, it would still probably be a bad idea to have XPath selectors in JS and Selectors selectors in CSS, again because of the 95% overlap.

[14:48:03.0000] <TabAtkins>
gavinc: They did.  Then they removed it because nobody used it.

[14:49:00.0000] <gavinc>
MMm, no, it didn't do math, nor work with context

[14:49:01.0000] <gavinc>
Looked like XPath, wasn't. At least that's my memory

[14:49:02.0000] <TabAtkins>
gavinc: Oh, ok, yeah.  It was a subset.

[14:49:03.0000] <jgraham>
TabAtkins: Everything is new to people the first time.

[14:49:04.0000] <jgraham>
And the overlap is far from 95%

[14:50:00.0000] <TabAtkins>
jgraham: Your first statement is true.  Your second statement is arguable.

[14:50:01.0000] <TabAtkins>
The vast majority of Selectors usage is trivial tagname/class/id selection, perhaps with a combinator involved, and maybe some :hover.

[14:50:02.0000] <jgraham>
/me finds that after you get away from the simple things XPath is relatively OK because the model is clean whereas CSS is a mess

[14:50:03.0000] <gavinc>
jgraham: +1

[14:50:04.0000] <jgraham>
Right, if people only do trivial things selectors are better

[14:50:05.0000] <TabAtkins>
Weighted by usage on the web, the percentage is probably greater than 95%.

[14:51:00.0000] <karlcow>
"<TabAtkins> jgraham: XPath is a new language for most devs." HIHI. houhou ahaha. :D I'm going to the toyshop to find webtools for the 5 years old :)

[14:51:01.0000] <jgraham>
But it is not clear if people only do trivial things because that's all that is easy with selectors

[14:51:02.0000] <TabAtkins>
jgraham: The models are isomorphic.

[14:51:03.0000] <annevk>
paul_irish: WHATWG blog also covers W3C WebApps to some extent

[14:51:04.0000] <gavinc>
TabAtkins: Weighted by usage on the web there was no need for img ;) metrics will only get you so far

[14:52:00.0000] <annevk>
paul_irish: and other random stuff that interests me

[14:52:01.0000] <jgraham>
TabAtkins: But CSS Selectos looks like line noise. That's a difference

[14:52:02.0000] <TabAtkins>
jgraham: XPath lets you save on functions by reusing the same things for all string handling, for example, and just letting you specify the source of the string.

[14:52:03.0000] <paul_irish>
annevk: truth. ill refine that wording

[14:52:04.0000] <TabAtkins>
jgraham: Um, and XPath selectors aren't line noise?

[14:52:05.0000] <jgraham>
Well I don't have to rememebr the difference between : and :: or + and ~

[14:52:06.0000] <zewt>
not really

[14:52:07.0000] <paul_irish>
karlcow: i linked to your weekly summaries as well. :D

[14:52:08.0000] <annevk>
paul_irish: also may want to add www-dom⊙wo to the mailing lists

[14:53:00.0000] <paul_irish>
k

[14:53:01.0000] <TabAtkins>
Shrug, okay.  I don't see much difference in line-noise-ness, particularly in the abbreviated syntax.

[14:53:02.0000] <miketaylr>
paul_irish: you can add a link to ODIN for people to keep up to speed with Opera updates, ;) http://my.opera.com/ODIN/blog/

[14:53:03.0000] <TabAtkins>
Both require a sophisticated mental parser to understand non-trivial examples.

[14:53:04.0000] <karlcow>
paul_irish: damned! :) more pressure. I should finish write one today or tomorrow morning. It is almost done.

[14:53:05.0000] <miketaylr>
in (How do I keep up with what’s landing in browsers?)

[14:54:00.0000] <annevk>
paul_irish: "See the latest commits to the HTML and CSS specs by following their respective working groups on Twitter:" has the twitter accounts in the wrong order, either fix that or drop respective

[14:54:01.0000] <paul_irish>
kk

[14:55:00.0000] <annevk>
paul_irish: for advanced, http://wiki.whatwg.org/wiki/Bugzilla_conventions might also be of help for those diving into existing bugs

[14:56:00.0000] <annevk>
paul_irish: nice initiative

[14:56:01.0000] <paul_irish>
thanks. excited about it :)

[14:56:02.0000] <paul_irish>
conventions page is excellent

[14:57:00.0000] <miketaylr>
:hover on the blue buttons could use some more contrast for my old eyes

[14:57:01.0000] <divya>
agreed

[14:57:02.0000] <divya>
fixing.

[14:57:03.0000] <karlcow>
miketaylr: me too :) oldies

[14:57:04.0000] <karlcow>
:p

[14:57:05.0000] <jgraham>
paul_irish: Woudl be nice if the browser updates thing was more cross browser. Someone mentioned the Opera ODIN. Maybe the IE blog and some Mozilla blog (about:mozilla?)

[14:57:06.0000] <gavinc>
sigh, totally non spec related question: ... are there any non evil registrars these days?

[14:58:00.0000] <karlcow>
gavinc: using gandi.net myself

[14:58:01.0000] <paul_irish>
jgraham:  Yeah I'm gonna end up making a better post that summarizes browser update resources, but it's gonna land after this ships (tomorrow morning).

[14:58:02.0000] <paul_irish>
but i'll add in the browser outlets explicitly for now

[14:59:00.0000] <jgraham>
paul_irish: Great

[14:59:01.0000] <annevk>
gavinc: https://www.transip.nl/ is pretty awesome

[14:59:02.0000] <annevk>
gavinc: not sure if it works outside the Netherlands though, don't know anyone who tried

[15:00:00.0000] <annevk>
oh, and it might only be in Dutch :)

[15:00:01.0000] <gavinc>
/me can read a bit of dutch ... but not sure about co-workers

[15:00:02.0000] <jgraham>
/me also used gandi.net

[15:01:00.0000] <jgraham>
I didn't notice any evilness so far

[15:02:00.0000] <paul_irish>
thx everyone

[15:02:01.0000] <jgraham>
paul_irish: WebApps (and CSS I guess) also have testsuites that would benefit from contributers

[15:03:00.0000] <paul_irish>
jgraham: have any links handy?

[15:03:01.0000] <annevk>
http://lists.w3.org/Archives/Public/public-webapps-testsuite/

[15:03:02.0000] <annevk>
http://lists.w3.org/Archives/Public/public-css-testsuite/

[15:03:03.0000] <annevk>
are entry points of some kind

[15:04:00.0000] <jgraham>
http://www.w3.org/2008/webapps/wiki/Testing

[15:04:01.0000] <jgraham>
http://wiki.csswg.org/test

[15:15:00.0000] <annevk>
holy shit

[15:15:01.0000] <annevk>
"IE10 Preview 4 introduces an updated  quirks mode that is more consistent and interoperable with the way quirks modes works in other browsers like Firefox, Chrome, Safari, and Opera."

[15:16:00.0000] <annevk>
not sure what it means exactly, but that might be bigger than CORS

[15:18:00.0000] <gsnedders>
We needs tests for quirks mode, obviously.

[15:21:00.0000] <roc>
how do you activate it?

[15:21:01.0000] <jgraham>
/me expects it involves goat entrails under a full moon

[15:21:02.0000] <franksalim>
will IE10 have both quirks modes?

[15:22:00.0000] <timeless>
typically ie would automatically decide to use quirks mode

[15:23:00.0000] <timeless>
or you could use F12 to force it

[15:26:00.0000] <timeless>
/me downloads the new ie10pp

[15:28:00.0000] <timeless>
Debug> Force {ie5 quirks, ie7 doc, ie8 doc,ie9 doc, standards, quirks}

[15:28:01.0000] <timeless>
so currently it has 2 modes labeled as quirks

[15:28:02.0000] <timeless>
plus 3 doc modes and a standards mode

[15:28:03.0000] <franksalim>
paul_irish: this might mean you could revise your estimate of 72 IE flavors upwards

[15:28:04.0000] <franksalim>
timeless: wow

[15:28:05.0000] <timeless>
and yes, you can change the mode in f12

[15:28:06.0000] <timeless>
if you haven't used f12, you need to get it and try

[15:28:07.0000] <timeless>
/me goes home

[15:29:00.0000] <franksalim>
so how do you specify which quirks mode you want? is there a quirks mode doctype /s

[15:29:01.0000] <timeless>
presumably it tries to match the rules gecko and co use

[15:30:00.0000] <annevk>
whoa, complex

[15:30:01.0000] <annevk>
must suck to do QA on that

[15:30:02.0000] <miketaylr>
DOCTYPEs are for suckers

[15:33:00.0000] <annevk>
heard it here first

[15:48:00.0000] <roc>
our rules are quite simple

[15:48:01.0000] <roc>
the question is, what mode do they use for a document without a DOCTYPE?

[15:48:02.0000] <roc>
I find it hard to believe they'll switch such documents from "IE6" mode to something else

[15:51:00.0000] <jamesr_>
time to update the IE mode flowchart?


2011-11-30
[16:06:00.0000] <annevk>
rniwa: the current attribute change concepts are sufficient? is that what you were saying?

[16:11:00.0000] <rniwa>
annevk: yes!

[16:11:01.0000] <rniwa>
annevk: thanks for making that change

[16:11:02.0000] <rniwa>
annevk: now I can refer to those concepts in my spec

[16:11:03.0000] <annevk>
cool

[16:12:00.0000] <annevk>
I wonder when people are doing the analysis for the style="" attribute

[16:12:01.0000] <rniwa>
annevk: https://github.com/rniwa/undomanager/blob/master/undomanager.html already has reverting algorithm for node data replacement and inserting/removal of a node

[16:12:02.0000] <rniwa>
annevk: what do you mean by

[16:12:03.0000] <rniwa>
analysis?

[16:12:04.0000] <annevk>
whether or not we should exclude it by default

[16:13:00.0000] <rniwa>
annevk: oh, right.

[16:13:01.0000] <rniwa>
annevk: you can probably just reply to that thread on public-webapps

[16:14:00.0000] <annevk>
the mutation observer thread you mean?

[16:14:01.0000] <annevk>
I guess I will do that, but I should probably study the API a bit more and how it ties together to see whether I have any more questions

[16:15:00.0000] <annevk>
I got a pretty good understanding in SF, just need to work it out in text to see if there's something missing

[16:15:01.0000] <annevk>
(such as attribute namespace prefix changes...)

[16:16:00.0000] <ojan>
annevk: my intuition is that we should exclude style be default as well. rafael isn't a huge fan of adding more warts to the API, but he doesn't seem totally opposed to it if the benefits are large enough.

[16:16:01.0000] <ojan>
s/be/by

[16:18:00.0000] <annevk>
yeah

[16:18:01.0000] <annevk>
maybe we should omit attributeNamespace if sicking is serious about removing namespaced attributes...

[16:21:00.0000] <sicking>
annevk: someone needs to run statistics first

[16:22:00.0000] <sicking>
annevk: and we have to jump through some hoops to make xlink:href and xmlns... work

[16:22:01.0000] <annevk>
yeah I wasn't quite sure how you were planning on doing that

[16:23:00.0000] <annevk>
just not introducing new attributes like that works for me

[16:33:00.0000] <jamesr_>
roc, it looks like https://wiki.mozilla.org/NPAPI:AsyncDrawing overlaps really heavily with the ppapi drawing model. did you look at the latter?

[17:04:00.0000] <roc>
yes

[17:05:00.0000] <roc>
Pepper forces you to buy into the whole Pepper model, which no-one really wants to do (other than Google obviously)

[17:28:00.0000] <gsnedders>
I guess IE will use the HTML5 modes, based upon the HTML5 logic, unless the mode opts into a specific mode or is on compat. list

[17:30:00.0000] <gsnedders>
Because then their Native HTML5 impl is more complete, and more code runs using their Native impl.

[18:19:00.0000] <TabAtkins>
jwalden: Does the new FF background-sizing rules match what Image Values says?  If not, we should discuss this on the list, to see what needs to be changed in the spec.

[18:26:00.0000] <MikeSmith>
hober: looks like we don't have a bugzilla.w3.org domain yet, but we do have bugs.w3.org (just not actually configured to anything it seems)

[18:26:01.0000] <MikeSmith>
/me fires off a mail to systems team

[18:30:00.0000] <jwalden>
TabAtkins: not sure; I've been busy with JS stuff lately and haven't been looking at image values recently

[18:32:00.0000] <TabAtkins>
jwalden: Okay.  Reading through the irc logs, looks like we do match up.

[18:33:00.0000] <jwalden>
that would have been my guess, but there is substantial complexity here

[18:33:01.0000] <jwalden>
and we don't do the image sizing stuff outside background-image yet, either

[18:34:00.0000] <jwalden>
I am almost tempted to go back and do that, sometime

[18:34:01.0000] <jwalden>
fix one thing and suddenly you feel guilted into implementing the whole thing :-)

[19:55:00.0000] <MikeSmith>
is http://lists.w3.org/Archives/Public/www-archive/2011Nov/0047.html just a bug in Firefox?

[19:55:01.0000] <MikeSmith>
or is there some ambiguity or deficiency in the spec that needs to fixed?

[19:56:00.0000] <MikeSmith>
«Firefox bug: "Worker" load ignores Content-Type version parameter»

[21:14:00.0000] <rniwa>
annevk: yt?

[21:59:00.0000] <hsivonen>
hmm. how do I send the Windows key to VirtualBox guest on Ubuntu so that Unity won't capture it?

[22:00:00.0000] <MikeSmith>
I see the ACM's document licensing policy are also out of sync with the community they're supposed to be serving

[22:00:01.0000] <MikeSmith>
https://plus.google.com/109706986708019547706/posts/Mz8tYYBLzEx

[22:05:00.0000] <MikeSmith>
the bug-filing UI that Dimitri Glazgov has on http://dvcs.w3.org/hg/webcomponents/raw-file/tip/explainer/index.html is nice

[22:07:00.0000] <hsivonen>
IE10 added TTML support, too :-(

[22:08:00.0000] <hsivonen>
fragmentation that could have been avoided

[22:08:01.0000] <hsivonen>
cool that they implemented WebVTT, though

[22:18:00.0000] <MikeSmith>
hsivonen: I don't understand what they actually implemented as far as TTML

[22:18:01.0000] <MikeSmith>
e.g., did they implement character styling?

[22:19:00.0000] <MikeSmith>
and if so, how? what spec is the support based on? since there's not actually any spec that defines how to use TTML with HTML <video>..

[22:19:01.0000] <MikeSmith>
or in browsers at all

[22:23:00.0000] <MikeSmith>
http://www.rfc-editor.org/authors/rfc6455.txt close to final publication

[22:23:01.0000] <MikeSmith>
wonder where Michael Carter is these days

[23:10:00.0000] <MikeSmith>
http://msdn.microsoft.com/en-us/library/hh673566.aspx#ttml

[23:14:00.0000] <hsivonen>
MikeSmith: wow. Is that all they implemented of TTML?

[23:14:01.0000] <MikeSmith>
seems so

[23:14:02.0000] <hsivonen>
radical subsetting

[23:14:03.0000] <MikeSmith>
yeah, in the docs, they make it clear that it's just a subset

[23:29:00.0000] <zcorpan>
it seems a bit weird that bugs can go from RESOLVED NEEDSINFO to TrackerRequest

[23:47:00.0000] <hsivonen>
is it important for Web compat that lines don't wrap when text/plain is loaded into a browsing context whose view port is narrower than the lines?

[23:47:01.0000] <hsivonen>
what bad stuff would happen if browsers started line wrapping text/plain?

[00:05:00.0000] <MikeSmith>
webgl on android http://www.theverge.com/2011/11/29/2599183/surprise-sony-ericssons-android-2-3-update-included-webgl

[00:06:00.0000] <MikeSmith>
hsivonen: ascii art?

[00:10:00.0000] <Hixie>
really? to test IE10 I still have to install an entire OS?

[00:10:01.0000] <Hixie>
sigh

[00:29:00.0000] <hsivonen>
fwiw, Mozilla has already shipped WebGL on Android. (lacking in game-ready performance, though)

[01:57:00.0000] <smaug____>
annevk: FYI, MutationCallback has handleMutations, not handleEvent

[01:57:01.0000] <smaug____>
annevk: FYI, MutationCallback has handleMutations, not handleEvent

[01:57:02.0000] <smaug____>
(I didn't know that MutationObserver API has been copied to DOM4)

[01:58:00.0000] <annevk>
it doesn't in WebKit afaik

[01:58:01.0000] <annevk>
that callback thread didn't get quite resolved

[01:59:00.0000] <smaug____>
It does in Gecko and in the Google Docs version of the API

[01:59:01.0000] <smaug____>
(my patch for Gecko hasn't landed yet)

[02:01:00.0000] <annevk>
when I discussed it with the guys at Google they didn't like handleMutations

[02:01:01.0000] <annevk>
so I left it at handleEvent and raised that issue on the list

[02:01:02.0000] <annevk>
I guess it should be renamed handleMutations given the outcome of that discussion

[02:02:00.0000] <smaug____>
/me needs to say Google guys again that they are wrong :p

[02:21:00.0000] <mib_ngqf8w>
hi

[02:23:00.0000] <mib_ngqf8w>
is this the right place to talk about globalCompositeOperation and "copy" in particular?

[02:24:00.0000] <jgraham>
It's not a bad place

[02:25:00.0000] <mib_ngqf8w>
I think the spec about it is not clear and some browser are imlpementing in a way and some in another way

[02:26:00.0000] <mib_ngqf8w>
and I think one of the way is useful in real-world uses and the other is useless

[02:28:00.0000] <mib_ngqf8w>
and the useless way could be emulated while the opposite needs no crossbrowser unusual tricks

[02:28:01.0000] <Philip`>
The spec is precise about what it intends (though that's not the same as "clear") - effectively the whole canvas should be cleared and then the new shape drawn on top, since that's how the drawing model works

[02:30:00.0000] <mib_ngqf8w>
the fact is I'm trying to draw curves with different opacities inside it - to draw with tablet pressure

[02:31:00.0000] <mib_ngqf8w>
but each curve is one opacity so I'm trying to emulate it with "copy"

[02:31:01.0000] <mib_ngqf8w>
but if copy is not what I hope it is there is not a good way to get tablet pressure in canvas

[02:33:00.0000] <Philip`>
Can you get it to clip to the shape you're wanting to fill, before drawing with 'copy', so that it won't affect pixels outside that shape?

[02:34:00.0000] <mib_ngqf8w>
"destination-out" + "copy"?

[02:38:00.0000] <Philip`>
I mean like 'drawYourPathOutline(); ctx.save(); ctx.clip(); ctx.globalCompositeOperation = "copy"; ctx.fill(); ctx.restore();'

[02:45:00.0000] <mib_ngqf8w>
thanks you Philip. I hope it could work

[02:46:00.0000] <mib_ngqf8w>
the fact is I'm trying to have a blurred curve (using shadows) with tablet pressure

[02:46:01.0000] <mib_ngqf8w>
maybe the clipping could create problems with the blur around each line

[02:48:00.0000] <mib_ngqf8w>
could be possible to propose a spec about a line with different opacity, shadow and color and size for each "node" of the curve?

[02:52:00.0000] <mib_ngqf8w>
and gradations of the nodes proprieties on the lines between the nodes

[03:10:00.0000] <mib_ngqf8w>
ok. I'll return to talk about that when there are less people sleeping

[03:11:00.0000] <mib_ngqf8w>
bye

[04:04:00.0000] <gsnedders>
Anyone looked into the IE10pp4 quirks mode?

[04:06:00.0000] <gsnedders>
Seems to expose modern objects, and use the AAA for parsing.

[04:09:00.0000] <zcorpan>
wonder what their strategy is these days

[04:14:00.0000] <Philip`>
Does the new quirks mode apply to typical doctypeless pages with no special markers or flags or anything?

[04:15:00.0000] <Philip`>
/me wonders if they just decided that failing to support HTML5 features in new sites that forgot to include a doctype is a greater compatibility concern than changing behaviour on old sites that didn't include a doctype

[04:16:00.0000] <Philip`>
(and since they seem to be promoting HTML5, it's better to break old sites than to break the new sites they're telling everybody to write)

[04:16:01.0000] <gsnedders>
Philip`: Typical DOCTYPEless pages

[04:17:00.0000] <gsnedders>
Not hit IE5 Quirks yet

[04:18:00.0000] <Philip`>
x-ua-compatible ie=5?

[04:18:01.0000] <gsnedders>
Yeah, I'm guessing that'll trigger it

[04:18:02.0000] <gsnedders>
But what's curious is whether they have magic.

[04:22:00.0000] <gsnedders>
I mean, this basically means unless you end up blacklisted or opt-in to an old mode, you're running per HTML5

[04:53:00.0000] <annevk>
wow really?

[04:53:01.0000] <annevk>
that's pretty awesome

[05:24:00.0000] <wilhelm_>
This kind of pixel densities make CSS media queries … interesting: http://www.anandtech.com/show/5002/toshiba-releases-61-display-with-resolution-of-2560x1600

[05:25:00.0000] <zcorpan>
gsnedders: about time for a quirks spec, then

[05:32:00.0000] <kennyluck>
www.whatwg.org is down ???

[05:33:00.0000] <wilhelm_>
No.

[05:34:00.0000] <kennyluck>
hmm… just checked downforeveryoneorjustme.com and it's indeed just me.

[05:39:00.0000] <zcorpan>
"The beta (a.k.a. "aurora") of Firefox 10 ..." - html5weekly

[05:44:00.0000] <hsivonen>
wilhelm_: I worry that someone ships a browser that doesn't do the right thing with device pixel to CSS pixels ratio and UA sniffing ensues

[05:44:01.0000] <hsivonen>
zcorpan: I guess the channels haven't been communicated well enough...

[06:03:00.0000] <annevk>
zcorpan: setTimeout(0) is what you are asking for

[06:06:00.0000] <zcorpan>
annevk: that's not without problems

[06:07:00.0000] <annevk>
you'll need to elaborate

[06:07:01.0000] <annevk>
also on use cases

[06:07:02.0000] <zcorpan>
setTimeout(0) waits 4ms per spec

[06:08:00.0000] <annevk>
i thought that the first was queued immediately

[06:08:01.0000] <annevk>
not sure if the spec matches reality

[06:09:00.0000] <zcorpan>
so the last time i abused window.postMessage was when i did a study on SRT

[06:10:00.0000] <jgraham>
I thought setTimeout only had a lower limit if it was called from another timer

[06:13:00.0000] <zcorpan>
yeah

[06:49:00.0000] <karlcow>
http://blog.bluevia.com/2011/11/30/dan-appelquist-joins-bluevia-to-lead-product-management/

[07:02:00.0000] <hsivonen>
I didn't see this coming: http://lists.w3.org/Archives/Public/www-style/2011Nov/0782.html

[08:02:00.0000] <paul_irish>
http://movethewebforward.org/ is launched. an initiative to get more involvement in standards and such from the larger webdev population. pull requests and issues welcome. :)

[08:15:00.0000] <jgraham>
paul_irish: Nice

[08:16:00.0000] <timeless>
hsivonen: wow

[08:17:00.0000] <smaug____>
paul_irish: you could mention that html5rocks.com is mainly webkit or chrome thingie

[08:17:01.0000] <paul_irish>
i thought i did

[08:17:02.0000] <smaug____>
the name html5rocks is quite misleading

[08:17:03.0000] <paul_irish>
there is that... :)

[08:17:04.0000] <timeless>
misleading names on the web?!

[08:17:05.0000] <timeless>
how can that be!

[08:18:00.0000] <smaug____>
paul_irish: "updates.html5rocks.com - short news, tips, and tricks about HTML5"

[08:18:01.0000] <smaug____>
should be perhaps: "updates.html5rocks.com - short news, tips, and tricks about webkit"

[08:23:00.0000] <timeless>
+1

[08:23:01.0000] <miketaylr>
/me still prefers html5r0cks.com

[08:24:00.0000] <timeless>
miketaylr: nice

[08:26:00.0000] <smaug____>
paul_irish: should you mention http://caniuse.com/ ?

[08:26:01.0000] <drublic>
paul_irish: there is no mention of the server-names in the "Ask for help"-irc section i think

[09:07:00.0000] <divya>
drublic: for free node?

[09:08:00.0000] <divya>
i see. it was there, but got removed.

[09:08:01.0000] <drublic>
divya: yes. and for mozilla too

[09:09:00.0000] <drublic>
divya: the channel-list was different yesterday i guess :D

[09:11:00.0000] <divya>
drublic: pushed. it might take about 10 mins

[09:11:01.0000] <drublic>
divya: cool! :)

[09:19:00.0000] <drublic>
divya: short question: what's the best way to request the status of a bug in opera? send a mail?

[09:20:00.0000] <divya>
ask me :)

[09:20:01.0000] <drublic>
k

[09:20:02.0000] <drublic>
mom

[09:20:03.0000] <divya>
:P

[09:22:00.0000] <drublic>
divya: bug-id DSK-350419, it's not possible to use opera next for me as it breaks all the time. but i'd love to test some features sometimes

[09:31:00.0000] <divya>
drublic: ah its a P1 bug!

[09:31:01.0000] <divya>
which means it is most likely going to be fixed asap. the problem is with hw accell

[09:31:02.0000] <divya>
if you can go to opera:config and disable HW Accell it should be better

[09:31:03.0000] <drublic>
divya: ah cool!

[09:32:00.0000] <drublic>
hehe. it's not possible to navigate there I think :D

[09:32:01.0000] <divya>
oh?

[09:32:02.0000] <drublic>
good to know that it will be fixed soon.

[09:32:03.0000] <divya>
drublic: you can d/l the latest snapshot it seems stabler to me

[09:33:00.0000] <drublic>
the "over-accelleration" starts on click

[09:33:01.0000] <divya>
yeah but you can type opera:config in the addressbar?

[09:33:02.0000] <drublic>
i've got build 1155

[09:33:03.0000] <divya>
drublic: the latest desktop blog post has link to 1174

[09:33:04.0000] <drublic>
divya: right

[09:33:05.0000] <divya>
which is far more stabl

[09:34:00.0000] <drublic>
just saw it

[09:34:01.0000] <drublic>
divya: looks better now

[09:34:02.0000] <drublic>
but still buggy…

[09:34:03.0000] <drublic>
anyway

[09:34:04.0000] <drublic>
thank you very much for letting me know

[09:34:05.0000] <divya>
no problemo!

[09:35:00.0000] <drublic>
any plans to open the bugtracker for everyone?

[09:36:00.0000] <drublic>
divya: works great with hardware accel turned off :)

[09:37:00.0000] <divya>
drublic: yes we are trying. the bug tracker is like 7 years old or more!

[09:37:01.0000] <divya>
so getting them public is an uphill task.

[09:37:02.0000] <drublic>
divya: that's awesome!

[09:37:03.0000] <divya>
and we need resources :P

[09:37:04.0000] <drublic>
divya: right…

[09:38:00.0000] <drublic>
but great to see some movement :)

[09:39:00.0000] <divya>
:)

[10:00:00.0000] <rniwa>
AryehGregor: yt?

[10:53:00.0000] <rniwa>
hi everyone

[10:53:01.0000] <rniwa>
undomanager discussion is moving from #developer @ mozilla

[10:53:02.0000] <ehsan>
alright

[10:54:00.0000] <ehsan>
rniwa: I'm here

[10:54:01.0000] <rniwa>
sicking: could you repost your proposal here/

[10:54:02.0000] <rniwa>
so that others can understand what the heck we're going to talk about

[10:54:03.0000] <ehsan>
AryehGregor: we're discussing the undo manager spec

[10:54:04.0000] <sicking>
writing it up

[10:54:05.0000] <rniwa>
sicking: great.

[10:57:00.0000] <WeirdAl>
bad idea #7:  why not just have two interfaces:  TransactionWithReapply and StandardTransaction?

[10:57:01.0000] <zewt>
any luck with the undo selection state problem?

[10:57:02.0000] <WeirdAl>
let the stinking transaction itself define what it wants

[10:58:00.0000] <rniwa>
zewt: I think I'm just going to ignore Mac case for now.

[10:58:01.0000] <rniwa>
zewt: since now automatic transaction has reapply/unapply method

[10:58:02.0000] <zewt>
which case is that?

[10:58:03.0000] <rniwa>
zewt: author can fix it if needed

[10:58:04.0000] <rniwa>
zewt: deleted content is selected

[10:58:05.0000] <rniwa>
on Mac

[10:58:06.0000] <rniwa>
WeirdAl: transaction is duck-typed

[10:59:00.0000] <rniwa>
WeirdAl: but that's sort of my proposal as well: let transaction define what it wants

[10:59:01.0000] <zewt>
as long as deleted content that was selected before it was deleted comes back selected

[10:59:02.0000] <rniwa>
WeirdAl: read my thread titled "Re-introducing AutomaticDOMTransaction interface to decouple automatic transaction from UndoManager"

[10:59:03.0000] <WeirdAl>
I am a couple days behind on email

[10:59:04.0000] <rniwa>
zewt: the problem is that it's near impossible to correctly detect what has been deleted

[11:00:00.0000] <sicking>
make automatic transactions have three functions   implement/unapply/reapply    ("implement" to be bikeshedded later)

[11:00:01.0000] <sicking>
make manual transactions have three functions   apply/unapply/reapply

[11:00:02.0000] <sicking>
when a transaction is passed to the undo-manager, it checks if it has a "implement" method. If it does it knows that it's a automatic transaction. It records meta-data indicating that it's an automatic transaction and then calls implement. While implement is running it records the DOM mutations performed.

[11:00:03.0000] <sicking>
when a transaction is passed to the undo-manager which *doesn't* have a "implement" method, it knows that it's a manual transaction. It records meta-data indicating this and then calls apply.

[11:00:04.0000] <sicking>
When undoing a automatic transaction it undoes the DOM mutations and calls the unapply method if it exists.

[11:00:05.0000] <sicking>
When undoing a manual transaction simply calls the unapply method if it exists.

[11:00:06.0000] <sicking>
When redoing a automatic transaction it redoes the the mutations and then calls reapply if it exists.

[11:00:07.0000] <sicking>
When redoing a manual transaction it reapply if it exists or apply otherwise.

[11:00:08.0000] <zewt>
if you select a block in FF, delete it, then undo, it comes back selected; that's pretty important, IMO (restoring the actual state before the delete)

[11:01:00.0000] <rniwa>
sicking: we have isAutomatic so this works the way you just said more or less.

[11:01:01.0000] <ehsan>
rniwa: right

[11:01:02.0000] <rniwa>
sicking: btw, we should probably rename "apply" to execute or something like that

[11:01:03.0000] <sicking>
*possibly* we can make all calls to apply provide a argument indicating if the calls is due to an original application, or due to a reapplication. Indicated though a bool or string (i don't care which :) )

[11:01:04.0000] <ehsan>
which is along the lines of what I was talking about on moznet

[11:01:05.0000] <rniwa>
sicking: it's really confusing to name a method "apply" in JS

[11:01:06.0000] <sicking>
rniwa: sure, i'm fine with whatever names

[11:02:00.0000] <rniwa>
zewt: hm...

[11:02:01.0000] <rniwa>
zewt: didn't know that case :(

[11:02:02.0000] <ehsan>
can someone explain to me why we need to call apply when redoing an automatic transaction at all?

[11:02:03.0000] <rniwa>
zewt: we need some way to communicate that information back to UA though

[11:02:04.0000] <sicking>
rniwa: the point is to have different function names for automatic and manual transactions

[11:02:05.0000] <zewt>
(i don't have any new ideas, was just wondering if anyone else has had any)

[11:02:06.0000] <rniwa>
zewt: when a random node is removed from the document, we have no way of knowing that it should be selected upon undo

[11:02:07.0000] <rniwa>
sicking: hm... okay.

[11:03:00.0000] <sicking>
rniwa: that makes it more ok to not call the "apply"/"implement" method if reapply isn't there when reapplying a automatic transaction

[11:03:01.0000] <rniwa>
sicking: true

[11:03:02.0000] <sicking>
rniwa: technically it also removes the need for the isAutomatic flag. But we can keep it to make it more explicit (rather than looking for a "implement" method)

[11:04:00.0000] <rniwa>
sicking: well i guess if we use two different names, then we don't need isAutomatic flag

[11:04:01.0000] <rniwa>
sicking: to avoid a confusion like what if we had both apply and isAutomatic: true

[11:04:02.0000] <sicking>
rniwa: indeed

[11:04:03.0000] <rniwa>
sicking: or has implement but isAutomatic: false

[11:04:04.0000] <rniwa>
that's just annoying

[11:04:05.0000] <rniwa>
sicking, ehsan: okay, that sounds like a viable option to the problem at hand

[11:05:00.0000] <rniwa>
sicking: on the other hand, I still like the idea of reintroducing AutomaticDOMTransaction interface

[11:05:01.0000] <rniwa>
sicking: the main rationale behind is that being able to revert DOM changes seems useful even outside of undomanager

[11:06:00.0000] <rniwa>
sicking: this feature tied to undomanager; i.e. UA can only revert DOM changes if it's part of undo stack

[11:06:01.0000] <rniwa>
makes it really hard to use besides undo/redo

[11:07:00.0000] <WeirdAl>
rniwa: can you repost the link to the current spec, please?

[11:07:01.0000] <sicking>
rniwa: yeah... so i guess we could make AutomaticDOMTransaction take an object with "implement"/"unapply"/"reapply" and returns an object with "apply"/"unapply"/"reapply"

[11:07:02.0000] <jgraham>
rniwa: (AryehGregor is likely busy shopping for his wedding dress, or whatever it is one does before a wedding)

[11:07:03.0000] <rniwa>
jgraham: rniwa.com/editing/undomanager.html

[11:07:04.0000] <sicking>
rniwa: however I would ask what the use cases are

[11:07:05.0000] <rniwa>
sicking: right.

[11:07:06.0000] <zewt>
unclickable url D:

[11:07:07.0000] <WeirdAl>
got it

[11:07:08.0000] <rniwa>
sicking: so even in an app that uses manual transactions

[11:08:00.0000] <rniwa>
sicking: there might be cases where they decide to use automatic transaction internally

[11:08:01.0000] <sicking>
rniwa: without an undomanager there's a bigger risk that someone tries to undo changes on a DOM that looks differently than the "after" state

[11:08:02.0000] <sicking>
rniwa: true

[11:08:03.0000] <rniwa>
sicking: yeah but that's okay because the spec precisely defines when and how reverting DOM changes is done

[11:08:04.0000] <rniwa>
zewt, jgraham: http://rniwa.com/editing/undomanager.html

[11:09:00.0000] <rniwa>
sicking: see 3.1.1. http://rniwa.com/editing/undomanager.html#reverting-dom-changes

[11:09:01.0000] <sicking>
rniwa: it's ok in the sense that it'll be consistent. I'll probably result in surprising behavior for the page though

[11:09:02.0000] <sicking>
rniwa: for the page author that is

[11:09:03.0000] <rniwa>
sicking: right, but I think that's okay

[11:09:04.0000] <rniwa>
sicking: it's same thing as mutation observers

[11:09:05.0000] <rniwa>
sicking: or any other APIs that interact with DOM

[11:10:00.0000] <sicking>
rniwa: ok

[11:10:01.0000] <rniwa>
sicking: but I see your concern though

[11:10:02.0000] <zewt>
if I mention vim's undo trees, will people throw vegetables at me

[11:10:03.0000] <ehsan>
/me is rather ambivalent about adding AutomaticDOMTransaction back

[11:10:04.0000] <sicking>
rniwa: i feel like ehsan.

[11:10:05.0000] <rniwa>
zewt: I've considered those cases when we initially thought about collaborative editing

[11:10:06.0000] <ehsan>
/me throws some vegteables at zewt

[11:10:07.0000] <WeirdAl>
/me thinks that no matter what, there's got to be some non-normative sections explaining the rationales

[11:11:00.0000] <rniwa>
zewt: but it turned out that it's such a complex feature that I might need to get a Ph.D. in that topic first before I can make any sensible API for it.

[11:11:01.0000] <zewt>
seems like undo is plenty complex anyway :)

[11:11:02.0000] <rniwa>
WeirdAl: yeah, I'll have to do that at some point

[11:11:03.0000] <sicking>
rniwa: one option is to do the API I just proposed. And possibly add AutomaticDOMTransaction later.

[11:12:00.0000] <sicking>
rniwa: implementation-wise that'll be easy. If/when we add AutomaticDOMTransaction, just use that to wrap any transaction object passed which has a "implement" method

[11:12:01.0000] <rniwa>
sicking, ehsan: so one thing I want to accomplish by reintroducing the interface is to de-couple automatic transaction from undomaanger

[11:12:02.0000] <rniwa>
sicking: so that undomanager can just focus on calling apply, unapply, and reapply and don't need to be aware of what kind of transaction it's applying

[11:13:00.0000] <rniwa>
sicking, ehsan: this allows us to add new types of transactions in the future more easily

[11:13:01.0000] <ehsan>
rniwa: I'm not sure why that's valuable

[11:13:02.0000] <sicking>
rniwa: the goal being to make things easier implementation-wise, specification-wise or user-wise?

[11:13:03.0000] <rniwa>
sicking: all.

[11:14:00.0000] <sicking>
rniwa: i don't see how it helps

[11:14:01.0000] <rniwa>
sicking: I think it's conceptually easier to understand that undomanager just calls apply, unapply, and reapply.

[11:14:02.0000] <rniwa>
sicking: and then we have this special interface that creates an transaction with UA auto-tracking changes

[11:14:03.0000] <sicking>
/me wants to point rniwa to an article on orthogonality that he recently read

[11:14:04.0000] <rniwa>
sicking: I had an opportunity to talk to some developers + other UA implementors at TPAC

[11:15:00.0000] <rniwa>
sicking, ehsan: and got an impression that undomanager doing the magical thing is quite confusing to a lot of ppl

[11:17:00.0000] <ehsan>
rniwa: that sounds to me like a problem which can be fixed by documentation

[11:17:01.0000] <ehsan>
not by adding more to the spec

[11:17:02.0000] <rniwa>
sicking, ehsan: nice thing about re-introducing the interface is that it eliminates the need for apply method altogether

[11:17:03.0000] <ehsan>
impl-wise that's not gonna simplify much either

[11:17:04.0000] <ehsan>
just one if statement most likely ;)

[11:17:05.0000] <ehsan>
rniwa: how would it do that?

[11:18:00.0000] <sicking>
rniwa: http://lists.w3.org/Archives/Public/public-webapps/2011OctDec/1147.html

[11:18:01.0000] <rniwa>
ehsan: because if the interface is responsible for keeping track of DOM changes

[11:18:02.0000] <rniwa>
ehsan: those DOM changes can happen outside of the undomanager

[11:18:03.0000] <rniwa>
ehsan: the interface can then just supply special unapply/reapply methods to be used by undomanager

[11:19:00.0000] <rniwa>
ehsan: there was no need for apply method for manual transaction from the beginning

[11:19:01.0000] <rniwa>
the only reason we have 'em is to be consistent with automatic transactions

[11:19:02.0000] <zewt>
pretty hard to take someone seriously who's arguing against orthogonal design. heh

[11:20:00.0000] <sicking>
rniwa: http://www.artima.com/intv/ruby2.html  <-- better formatted

[11:20:01.0000] <ehsan>
rniwa: let me think about this a bit

[11:20:02.0000] <zewt>
(that also explains a lot about why ruby is so ... uh, bad)

[11:21:00.0000] <rniwa>
sicking: thanks for the article

[11:21:01.0000] <rniwa>
/me reads

[11:21:02.0000] <rniwa>
sicking, ehsan: de-coupling apply from undomanager also eliminates the need for special-casing changes outside of the undo scope

[11:22:00.0000] <rniwa>
sicking, ehsan: because now authors can just make changes outside of the transaction before adding it to undo manager

[11:22:01.0000] <rniwa>
sicking, ehsan: so automatic transaction can now focus on just reverting whatever DOM changes made inside "implement" method

[11:23:00.0000] <rniwa>
sicking, ehsan: we don't even need complicated sanity-checks in "transact" because transact does nothing but adds the entry to the undo stack.

[11:23:01.0000] <rniwa>
it simplifies so many things in so many levels

[11:24:00.0000] <sicking>
rniwa: I don't see that it implements things for the implementor at all. *worst* case I'd use the automatic transaction object internally. But I think i can even make it better than that and use an internal abstraction

[11:25:00.0000] <sicking>
rniwa: for authors it does give them another tool, which could be useful I agree

[11:25:01.0000] <sicking>
rniwa: but it also means that they have to do more typing since the undomanager won't wrap the automaticDOMTransaction ctor automatically, they have to type it out.

[11:26:00.0000] <WeirdAl>
typing is cheap :p

[11:27:00.0000] <sicking>
WeirdAl: and yet one of the big complaints about the DOM is that it uses too long function names for everything

[11:28:00.0000] <zewt>
if that's the biggest complaint someone has about an API, the API must be really good

[11:28:01.0000] <rniwa>
sicking: true. it does require more typing specially after your proposal about renaming apply to implement for automatic transaction

[11:28:02.0000] <rniwa>
sicking: we used to have isAutomatic so the increase wasn't so bad.

[11:29:00.0000] <ehsan>
rniwa: I'm not sure if I understand this correctly: "the interface can then just supply special unapply/reapply methods to be used by undomanager"

[11:30:00.0000] <rniwa>
ehsan: i.e. the interface "wraps" the author-supplied unapply/reapply so that when undoManager calls unapply/reapply

[11:30:01.0000] <rniwa>
ehsan: it can do the work to revert DOM changes made by the author

[11:32:00.0000] <ehsan>
rniwa: dunno, it still doesn't seem like a large improvement, but I don't wanna stall this discussion :)

[11:32:01.0000] <WeirdAl>
rniwa: would a face-to-face of interested parties in the spec be a good idea anytime soon?

[11:33:00.0000] <WeirdAl>
attendance not mandatory :)

[11:34:00.0000] <rniwa>
WeirdAl: you mean for undo manager?

[11:34:01.0000] <WeirdAl>
yes

[11:34:02.0000] <rniwa>
ehsan, sicking: I think I like Jonas' idea about renaming apply to implement for automatic transaction

[11:35:00.0000] <WeirdAl>
I've been interested, but not able to devote a lot of time to the spec

[11:35:01.0000] <rniwa>
ehsan, sicking: I really disliked isAutomatic flag so it's a huge improvement over the current spec.

[11:35:02.0000] <rniwa>
ehsan, sicking: but I still think re-introducing the interface is a good idea. maybe I should let you sleep on it and maybe you'll agree with me :)

[11:35:03.0000] <sicking>
rniwa: like i said, as long as we do that i'm happy. I can live with also adding the AutomaticDOMTransaction, but I don't feel the immediate need

[11:36:00.0000] <rniwa>
sicking: ok.

[11:36:01.0000] <WeirdAl>
commit, backout, reapply? :p

[11:36:02.0000] <WeirdAl>
/me is kidding

[11:36:03.0000] <rniwa>
sicking: I guess I should go talk with other folks before making the change.

[11:36:04.0000] <ehsan>
rniwa: I agree with sicking

[11:36:05.0000] <rniwa>
sicking: so by "also adding the interface", you mean that transact on undomanager still accepts duck-typed object

[11:36:06.0000] <rniwa>
sicking: before it being applied?

[11:37:00.0000] <ehsan>
/me assumes yes

[11:37:01.0000] <sicking>
yes

[11:37:02.0000] <rniwa>
WeirdAl: hm... i guess we'd have to figure out when everyone's free

[11:37:03.0000] <rniwa>
WeirdAl: also, it might be a good idea to do it after I post it on public-webapps

[11:37:04.0000] <WeirdAl>
weekends work best for me, and I am in the SF Bay Area

[11:37:05.0000] <rniwa>
which I'm hoping to happen in the next couple of weeks

[11:37:06.0000] <rniwa>
woot woot!

[11:38:00.0000] <rniwa>
ehsan, sicking: okay. let's push back on re-introducing the interface for now and propose the rename

[11:38:01.0000] <WeirdAl>
knowing me, I'll probably rehash some of my other points about the spec :)

[11:38:02.0000] <rniwa>
ehsan, sicking: since the rename seems like a very good solution to the problem at hand

[11:39:00.0000] <rniwa>
sicking: would you like to post it yourself on whatwg or should I do it on behalf of you?

[11:39:01.0000] <rniwa>
WeirdAl: ok.

[11:39:02.0000] <sicking>
rniwa: it would be awesome if you could post it

[11:40:00.0000] <rniwa>
sicking: ok, will do.

[11:40:01.0000] <rniwa>
sicking, ehsan: thanks for your time!

[11:40:02.0000] <ehsan>
rniwa: so should I hold off on looking at the email discussions? :)

[11:40:03.0000] <rniwa>
ehsan: I'll post it in the next 10-20m

[11:40:04.0000] <ehsan>
great

[11:40:05.0000] <ehsan>
thanks :)

[11:42:00.0000] <rniwa>
sicking, ehsan: btw, instead of [(implement, apply), unapply, reapply], can we do [(executeAutomatic, execute), executeUndo, executeRedo] ?

[11:42:01.0000] <rniwa>
or can we do [(executeAutomatic, execute), undo, redo] ?

[11:43:00.0000] <ehsan>
I guess it's a good sign that we can now focus on bikeshedding? ;)

[11:43:01.0000] <rniwa>
I really want to avoid using the name "apply" for the said reason.

[11:43:02.0000] <rniwa>
ehsan: yeah. we've been bikeshedding a lot on those method names.

[11:43:03.0000] <ehsan>
fwiw I would avoid names with "automatic" in them

[11:44:00.0000] <ehsan>
since I was never quite convinced that "automatic transaction" is a good name ;)

[11:44:01.0000] <rniwa>
ehsan: hm...

[11:44:02.0000] <ehsan>
but I will mostly hold off on bikeshedding ;)

[11:44:03.0000] <rniwa>
ehsan: but since it's called automatic DOM transaction now, let's stick with automatic for now

[11:44:04.0000] <rniwa>
ehsan: if you have a better alternative, I'm more than happy to discuss it

[11:44:05.0000] <WeirdAl>
native? :)

[11:45:00.0000] <WeirdAl>
built-in?

[11:45:01.0000] <rniwa>
WeirdAl: it used to be managed.

[11:45:02.0000] <WeirdAl>
esoteric?

[11:45:03.0000] <ehsan>
rniwa: I don't really :(

[11:45:04.0000] <ehsan>
/me has always been bad with names

[11:46:00.0000] <rniwa>
/me uses his editorial power to make the rename!

[11:46:01.0000] <ehsan>
/me envies rniwa's powers ;)

[11:47:00.0000] <rniwa>
sicking, ehsan: so the conclusion is to get rid of the apply's argument, right?

[11:47:01.0000] <WeirdAl>
/me sticks his pinky into his lip, and plots a nefarious plot to destroy the spec

[11:47:02.0000] <WeirdAl>
into... one hundred BILLION bits!

[11:48:00.0000] <rniwa>
oh wait, no. that's not what sicking said.

[11:50:00.0000] <rniwa>
WeirdAl: my spec is forged in Mount Doom. I'm not sure if the destruction is possible.

[11:50:01.0000] <WeirdAl>
:D

[11:51:00.0000] <WeirdAl>
so are you now Sauron?

[11:55:00.0000] <ehsan>
rniwa: wait, is it not?

[11:55:01.0000] <ehsan>
sicking?

[11:55:02.0000] <ehsan>
/me is totally confused now

[11:56:00.0000] <rniwa>
ehsan: I think sicking suggested that we'll have implement, unapply, reapply for automatic transaction and then apply([mode]), unapply, reapply for manual transaction

[11:57:00.0000] <sicking>
rniwa: yes

[11:58:00.0000] <sicking>
rniwa: though i think the mode isn't critical. But seems useful

[11:58:01.0000] <sicking>
rniwa: and we can have it as a string since people seem to prefer that

[11:58:02.0000] <rniwa>
sicking: yeah, but not sure if this is a net win.

[11:58:03.0000] <rniwa>
sicking: the API is getting more complicated :(

[11:59:00.0000] <sicking>
rniwa: i can live with dropping it

[11:59:01.0000] <rniwa>
sicking: ok.

[11:59:02.0000] <sicking>
rniwa: it's mostly a (very small) burden for implementors. Authors can ignore it, JS ignores any extra arguments passed to a function

[12:00:00.0000] <rniwa>
sicking: right, but I'd like to keep the API simple as possible.

[12:00:01.0000] <sicking>
worst case we can add it back if people hack it in themselves by carrying extra state

[12:00:02.0000] <rniwa>
sicking: yeah, I guess we can figure out when we do the initial impl. in gecko & webkit.

[12:00:03.0000] <ehsan>
agreed

[12:00:04.0000] <sicking>
rniwa: well.. when people start to use it

[12:00:05.0000] <rniwa>
sicking: i'm thinking of writing some demo app to see how the current API works.

[12:01:00.0000] <sicking>
rniwa: cool

[12:02:00.0000] <rniwa>
sicking: so are you okay with getting rid of the argument?

[12:02:01.0000] <rniwa>
sicking: should we still rename the function to implement?

[12:03:00.0000] <rniwa>
sicking, ehsan: anyway, Jonas' response posted on whatwg

[12:08:00.0000] <espadrine>
About movethewebforward.org: I'm maintaining an effort to show a very fast sum-up of the new stuff added in the latest version of web specs, over at https://github.com/espadrine/New-In-A-Spec

[12:08:01.0000] <espadrine>
Love to get pull requests!

[12:24:00.0000] <paul_irish>
espadrine: should like.. publish this is a blog with a feed or something i think

[12:24:01.0000] <paul_irish>
the information is supervaluable but folks don't look for spec updates in a github repo :)

[12:24:02.0000] <espadrine>
paul_irish: probably ^^

[12:24:03.0000] <espadrine>
I'll make a script to publish this automatically

[12:28:00.0000] <tsenart>
paul_irish: you can https://github.com/espadrine/New-In-A-Spec/commits/master.atom

[12:29:00.0000] <paul_irish>
i know that it's possible.....

[12:29:01.0000] <paul_irish>
but that's not exactly the same as more of a blog type setup

[12:29:02.0000] <tsenart>
ah you're talking about discoverability..

[12:29:03.0000] <tsenart>
sure

[12:29:04.0000] <paul_irish>
ya and friendliness

[12:29:05.0000] <tsenart>
makes sense

[12:30:00.0000] <divya>
espadrine: you can use octopress :)

[12:31:00.0000] <espadrine>
paul_irish, tsenart: what dns name should I take?

[12:31:01.0000] <espadrine>
divya: I'm looking at octopress right now... ;)

[12:31:02.0000] <tsenart>
espadrine: use gh-pages

[12:31:03.0000] <tsenart>
:)

[12:31:04.0000] <divya>
well you can point a domain to ghpages

[12:31:05.0000] <divya>
webstandardupdates.com?

[12:31:06.0000] <divya>
specupdates?

[12:32:00.0000] <espadrine>
divya: very nice!

[12:33:00.0000] <divya>
:)

[12:33:01.0000] <jankeromnes>
espadrine: what about mothereffinspecupdates?

[12:33:02.0000] <divya>
NO

[12:33:03.0000] <divya>
can people stop mothereffing shit

[12:33:04.0000] <jankeromnes>
divya: just kidding

[12:33:05.0000] <divya>
it would be much appreciated by the undersigned

[12:33:06.0000] <espadrine>
sorry, fathereffingspecupdates ^^

[12:33:07.0000] <divya>
:)

[12:34:00.0000] <divya>
:))

[12:35:00.0000] <espadrine>
divya: I'm actually tempted both by webstandardupdates.com and specupdates.com ^^

[12:35:01.0000] <divya>
hahaha

[12:36:00.0000] <divya>
specupdates is smaller but could also be read as spe cup dates

[12:36:01.0000] <divya>
:P

[12:36:02.0000] <espadrine>
XD

[12:40:00.0000] <Philip`>
espadrine: html5updates.com, for the latest news about CSS3 and geolocation and all that stuff

[12:43:00.0000] <espadrine>
Philip`: looks nice! but it isn't quite what I'm trying to do

[12:44:00.0000] <espadrine>
I'm trying to give people a very fast diff between the latest version of a spec and the previous version

[13:04:00.0000] <annevk>
sicking: you'll have to provide more details on how exactly text decoding in combination with chunked and progress events are supposed to wkr

[13:04:01.0000] <annevk>
work*

[13:04:02.0000] <sicking>
annevk: like HTML parsing

[13:04:03.0000] <gsnedders>
hsivonen: Official word is there in a comment now, quirks/no-quirks based upon HTML5, except for X-UA-Compatible, and Compatibility View.

[13:05:00.0000] <annevk>
sicking: ?

[13:05:01.0000] <sicking>
annevk: you expose the parts that you "parsed" (here, decoded), and wait for more data before exposing the parts you haven't yet parsed (decoded)

[13:05:02.0000] <annevk>
how do you know what to decode?

[13:05:03.0000] <zewt>
i wonder if buffering incremental data might cause interop problems (and if so, whether they could be prevented)

[13:06:00.0000] <sicking>
annevk: how do you mean?

[13:06:01.0000] <zewt>
line buffering would avoid it entirely, but wouldn't always be wanted

[13:06:02.0000] <annevk>
you get some bytes and an encoding

[13:06:03.0000] <annevk>
how do you go from there

[13:06:04.0000] <annevk>
that's not really clear to me

[13:06:05.0000] <annevk>
and even less clear to me is where that is currently defined

[13:07:00.0000] <zewt>
annevk: HTML incremental decoding must define that, right? (even if it's not quite what's wanted here, it'd be a place to start)

[13:07:01.0000] <annevk>
it doesn't actually since the details are not exposed

[13:08:00.0000] <sicking>
annevk: you decode as many bytes as you can using the encoding

[13:08:01.0000] <zewt>
it should be pretty straightforward for UTF-8; harder to handle it for the general case

[13:08:02.0000] <zewt>
(to define, I mean)

[13:08:03.0000] <sicking>
annevk: conceptually, any bytes that you can't decode, you store away

[13:09:00.0000] <sicking>
annevk: and prepend to the next hunk of bytes that you get to decode

[13:09:01.0000] <annevk>
sicking: plus you assume the byte stream is always encoded per the encoding

[13:09:02.0000] <sicking>
annevk: huh?

[13:09:03.0000] <zewt>
well, you still want error handling (replacement for bad UTF-8 sequences, etc)

[13:10:00.0000] <zewt>
(except for incomplete UTF-8 sequences, which would just be deferred for more data)

[13:10:01.0000] <annevk>
that does seem reasonable, but I'm not sure any of that is defined

[13:10:02.0000] <annevk>
I guess that should be in the encoding spec...

[13:11:00.0000] <annevk>
sicking: that does indeed mean that for the non-arraybuffer case .loaded is a mismatch

[13:11:01.0000] <annevk>
but that's prolly not too bad

[13:12:00.0000] <sicking>
annevk: yeah, that always been true for responseText

[13:12:01.0000] <zewt>
i'd expect ProgressEvent.loaded to represent the underlying stream anyway, not the high-level, decoded strings

[13:19:00.0000] <zewt>
i still wonder about buffering, though; it probably wouldn't be hard for scripts to accidentally depend on the buffering behavior of a particular browser

[13:20:00.0000] <zewt>
i suppose browsers shouldn't actually buffer data (that is, send an event immediately as soon as no more data is available to read), but you'd get the same effect from different MTUs, etc

[13:56:00.0000] <espadrine>
http://espadrine.github.com/New-In-A-Spec/ is really ugly right now, I'll make it prettier tomorrow ;)

[13:59:00.0000] <TabAtkins>
espadrine: Ooh, useful!  Thanks!

[14:01:00.0000] <espadrine>
;)

[14:03:00.0000] <Philip`>
espadrine: Oh, I didn't realise there was already an html5updates.com - I was just suggesting it as a name for your site :-)

[14:03:01.0000] <rniwa>
zewt: was it you who wanted to have an informal meet ups for undo manager?

[14:03:02.0000] <AryehGregor>
jgraham, fortunately, my bride is the one who has to pick a dress, not me.  I have to get men's clothing, but that's amazingly easier.

[14:04:00.0000] <divya>
ooooooooooo espadrine!!!

[14:04:01.0000] <divya>
FAST STUFF

[14:05:00.0000] <espadrine>
^^

[14:05:01.0000] <rniwa>
AryehGregor: hi

[14:05:02.0000] <AryehGregor>
rniwa, hi.

[14:05:03.0000] <rniwa>
AryehGregor: what do you feel about the discussion on your feedback thread

[14:05:04.0000] <AryehGregor>
/me hasn't looked at anything spec-related in a week

[14:05:05.0000] <espadrine>
Philip`: would have been a nice name too ;)

[14:05:06.0000] <rniwa>
AryehGregor: about isReapply being problmatic when wealways call reapply

[14:06:00.0000] <AryehGregor>
I'm getting married in twelve days, so I'm a little distracted by other things.

[14:06:01.0000] <rniwa>
AryehGregor: ok.

[14:06:02.0000] <rniwa>
AryehGregor: I'm preparing my spec to be implementation-ready

[14:06:03.0000] <AryehGregor>
Okay, good.

[14:06:04.0000] <rniwa>
AryehGregor: I guess I'll leave as is then

[14:06:05.0000] <jgraham>
AryehGregor: You're not scottish then :)

[14:06:06.0000] <rniwa>
AryehGregor: we can always amend later

[14:06:07.0000] <AryehGregor>
k.

[14:07:00.0000] <rniwa>
jgraham: what did you think of the spec? > undomanager

[14:07:01.0000] <AryehGregor>
jgraham, I'm about as non-Scottish as one can get, but what specific thing were you thinking about?

[14:07:02.0000] <jgraham>
rniwa: I haven't read it closely yet

[14:07:03.0000] <jgraham>
AryehGregor: Kilts

[14:07:04.0000] <rniwa>
jgraham: ok.

[14:07:05.0000] <AryehGregor>
(The name "Gregor" comes from my grandfather changing his name from Silverman to avoid discrimination.)

[14:08:00.0000] <AryehGregor>
What's so hard about kilts?  Get one with your clan's pattern or something and you're all set, right?

[14:08:01.0000] <jgraham>
AryehGregor: I ws going more with the kilt=dress thing which you can use to wind up scottish people ;)

[14:09:00.0000] <jgraham>
(also I didn't actually think you were Scottish)

[14:09:01.0000] <AryehGregor>
Surely a kilt is more like a skirt, if anything.

[14:09:02.0000] <jgraham>
Well yes

[14:10:00.0000] <rniwa>
I guess picking a dress will be tricker if bride and broom come from different countries or practice different religions

[14:10:01.0000] <zewt>
rniwa: nope

[14:10:02.0000] <rniwa>
zewt: hm... I'm wondering if there's a big demand

[14:10:03.0000] <jgraham>
I you marry a broom you have bigger problems

[14:10:04.0000] <rniwa>
zewt: if there are only 2-3 ppl interested, then I'd just have a bar conv.

[14:10:05.0000] <AryehGregor>
Fortunately, Orthodox Jews are only allowed to marry other Orthodox Jews, so that's not a big problem.

[14:11:00.0000] <jgraham>
/me wonders if genetic diversity is a big problem

[14:12:00.0000] <rniwa>
jgraham: oops, I meant to say groom*, not broom

[14:12:01.0000] <jgraham>
rniwa: :)

[14:12:02.0000] <rniwa>
I always get those two confused for whatever reason

[14:12:03.0000] <AryehGregor>
jgraham, it can be.  Tay-Sachs disease is a serious issue.  It's common for religious Jews to undergo testing for recessive genetic disorders before getting married.

[14:12:04.0000] <AryehGregor>
(Both my fiancée and I did, no conflicts.)

[14:13:00.0000] <jgraham>
Interesting

[14:15:00.0000] <rniwa>
I hear there's bio-tech companies that can tell you whether a couple is likely to have a child with some chronic disease or not.

[14:16:00.0000] <rniwa>
apparently ppl go to those places and "check things out" before they get engaged

[14:17:00.0000] <AryehGregor>
rniwa, yep.  Basically they just test if you're a carrier of various recessive genetic disorders.

[14:20:00.0000] <jgraham>
Disappointingly "Jewish Genetic Disorders: A Layman's Guide" doesn't seem to be available in the libraries of Europe.

[14:21:00.0000] <jgraham>
You can buy it at amazon.de though

[14:21:01.0000] <Philip`>
/me wonders how long it'll be before you can choose your partner based on the genetic expectation of the children's attractiveness or intelligence

[14:21:02.0000] <AryehGregor>
Tay-Sachs is the one everyone talks about.  If you get two copies of the gene, your brain turns into fat by the time you're eight or so.

[14:22:00.0000] <AryehGregor>
Philip`, if you buy evolutionary psychology, that's sort of what everyone tries to do already.

[14:22:01.0000] <Philip`>
AryehGregor: Humans are rubbish at computing DNA combinations in their heads, though

[14:23:00.0000] <jgraham>
I'm not sure that intelligence is heavily selected for

[14:23:01.0000] <AryehGregor>
Philip`, no, they just use approximations that trade off a great deal of accuracy for drastically higher efficiency.

[14:24:00.0000] <jgraham>
By which I mean, it is unclear to me that people with a large choice of sexual partners go for more intelligent ones a disproportiante amount of the time

[14:24:01.0000] <rniwa>
Philip`: i'm not sure if that's really desirable

[14:25:00.0000] <jgraham>
Compared with their prospenity to go for more physically attractive ones

[14:25:01.0000] <rniwa>
Philip`: you might be a perfect match to someone genetically but your personality, etc... may not match well.

[14:25:02.0000] <jgraham>
rniwa: (I don't think Philip` said it was *desirable*)

[14:25:03.0000] <AryehGregor>
jgraham, it varies culturally.  The Jewish ideal as recorded in the Talmud and medieval rabbinic texts is that women should marry the greatest Torah scholar they can, and men should try to marry the daughter of a great Torah scholar.  That's heavily correlated with intelligence.

[14:25:04.0000] <rniwa>
jgraham: I think it depends.

[14:26:00.0000] <AryehGregor>
Someone or other theorizes this led to Jews becoming smart.  I didn't make this up, I think a Wikipedia article says it, so it's probably true.

[14:26:01.0000] <Philip`>
AryehGregor: I bet it was a Torah scholar who came up with that rule

[14:26:02.0000] <rniwa>
jgraham: I have a hypothesis that a lot of women tend to go with the intelligent ones whereas a lot of men go with pretty ones.

[14:26:03.0000] <AryehGregor>
Philip`, admittedly,  yeah, rabbinic texts tend to be written by Torah scholars.

[14:26:04.0000] <jgraham>
AryehGregor: Is it borne out by how they actually act? I mean if I were a scholar recording cultral ideals, I might claim the same thing

[14:26:05.0000] <jgraham>
Oh, Philip` already said that

[14:27:00.0000] <jgraham>
rniwa: That might be true.

[14:28:00.0000] <AryehGregor>
jgraham, not completely, but in a lot of Jewish communities today, yeah, to a large extent.  I dated girls who made sure to emphasize how many of their male relatives were studying Torah.  In certain Orthodox communities, any man who's not studying Torah full-time has no chance of finding a respectable woman who will marry him.

[14:28:01.0000] <AryehGregor>
In other communities, not so much.

[14:28:02.0000] <jgraham>
There is probably data somewhere, but it is never easy to work out what to search for or whether the study is worthless

[14:29:00.0000] <AryehGregor>
Data about what?

[14:29:01.0000] <jgraham>
About rniwa's hypothesis

[14:30:00.0000] <AryehGregor>
Oh, that.

[14:30:01.0000] <TabAtkins>
AryehGregor: An alternate (or perhaps complementary) hypothesis was the fact that the money-handling professions were relegated to Jews in Europe for several centuries.

[14:31:00.0000] <gsnedders>
AryehGregor: Well, the daughter of a great Torah scholar may not themself be intellifent.

[14:31:01.0000] <gsnedders>
(wrt correlation with intelligence)

[14:32:00.0000] <Philip`>
If all the men are spending all their time studying the Torah, does that mean that all the useful work has to be done by the women?

[14:33:00.0000] <mkanat>
I think that's partially why the ideal is to be studying the Torah, because it's an ideal one would have to strive for--not all the men could spend all their time doing it.

[14:34:00.0000] <mkanat>
Unless they had been very successful in life--or, I suppose in a large enough community, if they were the rabbi.

[14:35:00.0000] <AryehGregor>
TabAtkins, money-handling doesn't require a lot of intelligence, though.

[14:35:01.0000] <AryehGregor>
gsnedders, intelligence has a large genetic component, so there'll be a correlation.

[14:36:00.0000] <AryehGregor>
Philip`, bingo!  In places like Lakewood, New Jersey, all the men study Torah full-time while their wives work.  And also take care of ten children.

[14:36:01.0000] <mkanat>
This is super off-topic, but genetic links to intelligence are more correlation than causation.

[14:36:02.0000] <TabAtkins>
AryehGregor: It requires math skills, which is something that Jews are traditionally considered good at.

[14:36:03.0000] <AryehGregor>
And they live in poverty and are supported by as much government aid as they can scrounge up.

[14:36:04.0000] <AryehGregor>
TabAtkins, moneylending doesn't require much math.  A little, but nothing special.

[14:36:05.0000] <jgraham>
mkanat: [citation needed]

[14:37:00.0000] <mkanat>
AryehGregor: But it does require a meticulous attention to detail.

[14:37:01.0000] <mkanat>
jgraham: That was more or less my sentiment. ;-)

[14:38:00.0000] <AryehGregor>
mkanat, IQ is generally reported to have fairly high heritability, say 0.4 to 0.6 or something.  I don't quite get what heritability means, but it tends to be computed based on things like "identical twins separated at birth have more similar IQs than fraternal twins not separated at birth, so genetics seems to be awfully important".

[14:38:01.0000] <Philip`>
Correlation is correlated to causation

[14:38:02.0000] <jgraham>
It's not realy clear why being left to money handling professions for a few hundred years would make you more intelligent as a population

[14:38:03.0000] <AryehGregor>
http://en.wikipedia.org/wiki/Heritability_of_IQ

[14:38:04.0000] <paul_irish>
o

[14:39:00.0000] <mkanat>
jgraham: The culture of Judaism has a very strong focus on education.

[14:39:01.0000] <jgraham>
It would be very surprising if a particular part of biochemisty wasn't inherited

[14:39:02.0000] <TabAtkins>
jgraham: Assuming that money-handling professions have their success correlated at least somewhat with mathematical intelligence, then it seems reasonable that such a trait would be encouraged in the population.

[14:39:03.0000] <jgraham>
TabAtkins: It isn't really clear that a few hundred years would make much difference

[14:39:04.0000] <jgraham>
(maybe it would, I don't know)

[14:39:05.0000] <AryehGregor>
jgraham, you can have tons of selection in a few hundred years, if the pressure is strong.

[14:40:00.0000] <TabAtkins>
jgraham: When you're mostly doing selection, and have a sufficiently isolated population, that's an adequate number of generations.

[14:40:01.0000] <AryehGregor>
For instance, skin color tends to adjust to climate within 1000 years, IIRC.

[14:40:02.0000] <jgraham>
Right, but how strong would the pressure be?

[14:40:03.0000] <jgraham>
Everyone needs somebody to do less skilled jobs

[14:40:04.0000] <jgraham>
So it's not like all the less intelligent people are going to starve

[14:41:00.0000] <TabAtkins>
jgraham: That's kind of the beauty of this just-so story - European Jews were part of the wider European population, but only bred among themselves.

[14:41:01.0000] <AryehGregor>
If everyone is trying to marry the biggest scholar, potentially very strong.  Because then the scholars get the wives who have the biggest dowries (medieval Europe, remember) and get to provide very well for their kids.

[14:41:02.0000] <mkanat>
AryehGregor: This is somewhat relevant when you talk about genetic research: http://www.ploscompbiol.org/article/info%3Adoi%2F10.1371%2Fjournal.pcbi.1002240

[14:41:03.0000] <rniwa>
jgraham: traditionally, men with lots of wealth tend to have lots of kids

[14:42:00.0000] <AryehGregor>
mkanat, well, yes, medical studies tend to be mostly complete garbage.

[14:42:01.0000] <rniwa>
jgraham: just because they can afford them

[14:42:02.0000] <AryehGregor>
There's a better reference for that.

[14:42:03.0000] <AryehGregor>
/me looks it up

[14:42:04.0000] <AryehGregor>
mkanat, http://www.theatlantic.com/magazine/archive/2010/11/lies-damned-lies-and-medical-science/8269/

[14:42:05.0000] <mkanat>
AryehGregor: Ah yeah, I think I read that article. :-)

[14:42:06.0000] <AryehGregor>
(yes, it's a popular article, I didn't read the studies it's based on, so sue me)

[14:43:00.0000] <AryehGregor>
I think anyone who's had personal exposure to actual academic research realizes it's mostly garbage that people are shoving out the door by hook or by crook so they can get more publications on their CV and get ahead in the tenure rat-race.

[14:43:01.0000] <jgraham>
Sure, I'm not suggesting that it is impossible to evolve a noticable change in average intelligence in a few hundred years

[14:43:02.0000] <rniwa>
jgraham: so on top of selection by their partners, there might be additional pressure which is that more intelligent ones will have lots of decendents

[14:43:03.0000] <jgraham>
I am just noting that without any sort of model or running th numbers, it is very far from obvious that it is a workable explaination

[14:44:00.0000] <AryehGregor>
rniwa, historically, no one had much choice in how many kids they had -- it was determined by how early you married, how many women you married (for men, if polygyny is allowed), and whether/how soon you remarried upon your spouse's death.

[14:44:01.0000] <AryehGregor>
jgraham, there was some guy who studied it.

[14:44:02.0000] <AryehGregor>
/me looks it up

[14:44:03.0000] <AryehGregor>
Of course: http://en.wikipedia.org/wiki/Ashkenazi_Jewish_intelligence

[14:44:04.0000] <rniwa>
AryehGregor: well rich guys used to have many wives

[14:45:00.0000] <AryehGregor>
Link to study that I never read: http://harpending.humanevo.utah.edu/Documents/ashkiq.webpub.pdf

[14:45:01.0000] <jgraham>
/me notes that today it is strongly correlated with how poor you are

[14:45:02.0000] <AryehGregor>
rniwa, not in Europe.  The Church didn't allow polygyny.

[14:45:03.0000] <AryehGregor>
(nor did European Jews, although Middle Eastern Jews did, like the surrounding Muslims)

[14:45:04.0000] <rniwa>
AryehGregor: i guess that's true in the dark ages

[14:46:00.0000] <AryehGregor>
rniwa, from early medieval times up to the present day.

[14:46:01.0000] <rniwa>
AryehGregor: that's on principal.

[14:46:02.0000] <AryehGregor>
Well, men had mistresses, that's true.

[14:46:03.0000] <AryehGregor>
Not multiple wives, but unofficially, yeah.

[14:47:00.0000] <mkanat>
jgraham's right; there's a TED talk on this.

[14:47:01.0000] <rniwa>
AryehGregor: e.g. Chinese government prohibits polygyny but polygyny has become a status quo in China from what I've heard.

[14:47:02.0000] <jgraham>
AryehGregor: That paper is quite long and doesn't have any graphs.

[14:47:03.0000] <AryehGregor>
Especially the really wealthy and powerful.

[14:47:04.0000] <rniwa>
AryehGregor: right.

[14:47:05.0000] <rniwa>
AryehGregor: mistresses is probably more accurate.

[14:47:06.0000] <AryehGregor>
But as far as Ashkenazi Jews go, note that being a great Torah scholar is going to be highly correlated with marital fidelity.

[14:47:07.0000] <AryehGregor>
jgraham, that's why I read three sentences of the Wikipedia article instead.

[14:48:00.0000] <AryehGregor>
/me reads a whole section

[14:48:01.0000] <gsnedders>
AryehGregor: In the early Church, under the Roman empire, polygyng was common

[14:48:02.0000] <AryehGregor>
It looks like the paper focuses more on what TabAtkins suggested.

[14:48:03.0000] <AryehGregor>
gsnedders, the really really early Church.

[14:49:00.0000] <gsnedders>
Common is untrue, really. Unusual, but not rare.

[14:50:00.0000] <AryehGregor>
http://en.wikipedia.org/wiki/Polygamy_in_Christianity

[14:51:00.0000] <AryehGregor>
Polygamy can never be really "common".  I mean, at most 50% of the men in any population can practice it, typically.

[14:51:01.0000] <AryehGregor>
It was only ever doable for a wealthy minority.

[14:51:02.0000] <gsnedders>
Certainly Luther didn't frbid it in the Luteran churches, AFAIK

[14:51:03.0000] <gsnedders>
(To take a more recent case)

[14:51:04.0000] <jgraham>
AryehGregor: The wikipedia article is actually very interesting

[14:52:00.0000] <jgraham>
So much so it should probably be deleted :p

[14:52:01.0000] <gsnedders>
But certainly now it is rare

[14:52:02.0000] <AryehGregor>
gsnedders, the Wikipedia article suggests it was condemned by the early Catholic Church, but some Protestants reconsidered it.

[14:52:03.0000] <AryehGregor>
The Bible doesn't actually say anything against it, so it's natural that the Protestants would want to throw out the restriction -- sola scriptura, right?

[14:54:00.0000] <jgraham>
I am pretty sure pretty sure there are examples of cultures that practice what I will call "cooperative" or many-to-many polygamy

[14:55:00.0000] <gsnedders>
AryehGregor: Depends very much on the Protestant sect

[14:56:00.0000] <AryehGregor>
Polyandry of any kind is very uncommon, because a) women don't get any more children (or any other obvious benefit) by marrying multiple men, and b) people won't know who their father is, which will (among other things) discourage fathers from supporting children who may or may not be theirs.

[14:56:01.0000] <AryehGregor>
On the other hand, polygyny is pretty common, because it allows wealthy men to have more children while also supporting their multiple wives to higher standards than they'd have gotten as the sole wife of a poorer person.

[14:56:02.0000] <gsnedders>
AryehGregor: Many Protestants broke off from the Catholic Church at different times, often for specific reasons, so only changed what affected their specific reason to break off

[14:58:00.0000] <gsnedders>
AryehGregor: sola scriptura only happened in a relatively small number of cases, though many smaller sects joined with ones who had been through more radical transformations

[14:59:00.0000] <jgraham>
AryehGregor: http://www.sciencedaily.com/releases/2010/11/101110161930.htm?utm_source=feedburner&utm_medium=feed&utm_campaign=Feed:+sciencedaily+%28ScienceDaily:+Latest+Science+News%29&utm_content=Google+Reader claims that in some regions it has been common

[15:00:00.0000] <AryehGregor>
Well, it's far less common than polygyny, anyway.

[15:00:01.0000] <AryehGregor>
Polygyny is more the rule than the exception, as far as I know.

[15:02:00.0000] <gsnedders>
Most of the polyamourous couples I know are polyandric (well, not truly, as they aren't married)

[15:02:01.0000] <othermaciej>
polyandry tends to occur in societies with a severe shortage of women (e.g. ones that severely undervalue daughters and therefore practice female infanticide)

[15:02:02.0000] <jgraham>
Note that for women there is a benefit to having children by multiple partners; you are increasing the genetic diversity of your offspring

[15:03:00.0000] <jgraham>
Which is an "obvious benefit"

[15:03:01.0000] <AryehGregor>
Not really.

[15:03:02.0000] <AryehGregor>
It doesn't increase your expected number of offspring much, if at all.

[15:03:03.0000] <jgraham>
From an evolutionary point of view it is

[15:03:04.0000] <AryehGregor>
(I mean total descendants)

[15:03:05.0000] <jgraham>
Sure it does

[15:04:00.0000] <AryehGregor>
How?

[15:04:01.0000] <AryehGregor>
If some plague kills everyone without gene X, you shouldn't care whether one of your two husbands has gene X, or if you only have one husband with a 50% chance of having gene X.

[15:04:02.0000] <jgraham>
If you pick one partner who happens to give you children that are all infertile you get 0 grandchildren. If you pick two partners and only one has that problem you get some grandchildren

[15:05:00.0000] <AryehGregor>
Look at the expected values, though.

[15:05:01.0000] <AryehGregor>
If you pick one partner and they have a 50% chance of their children all being infertile, it's the same expected number of grandchildren as if you marry two men and one has the problem.

[15:06:00.0000] <AryehGregor>
On the other hand, if you have only one husband and he's confident all your children are his, he'll probably be a lot happier to support them, which makes a big difference.

[15:06:01.0000] <mkanat>
In fact, I'd have to guess (without doing the math) that you'll have better generic diversity across and entire race with monogamy.

[15:06:02.0000] <mkanat>
*genetic

[15:06:03.0000] <AryehGregor>
Especially in agricultural societies, where men have all the wealth and women need all the help they can get from their husbands.

[15:07:00.0000] <jgraham>
You never care about "across the entire race"

[15:07:01.0000] <jgraham>
You only optimise for your own grandchildren

[15:08:00.0000] <jgraham>
/me is too tired to reason through the maths at the moment

[15:08:01.0000] <jgraham>
and should indeed be sleeping

[15:09:00.0000] <jgraham>
But it would seem surprising if having more genetic diversity in your offspring was a bad thing

[15:10:00.0000] <AryehGregor>
I don't think genetic diversity matters for this purpose.

[15:10:01.0000] <AryehGregor>
It should be all the same whether you actually have diversity, or you have random-picked homogeneity.

[15:11:00.0000] <jgraham>
I am going to try the sleeping thing :)

[15:22:00.0000] <erlehmann>
AryehGregor, polythings can be common if they are not exclusive.

[15:24:00.0000] <erlehmann>
>"In some Amazonian cultures, it was bad manners for a husband to be jealous of his wife's extramarital partners,"

[15:24:01.0000] <erlehmann>
in fact, i consider jealousy a bad character trait

[15:25:00.0000] <gicode>
AryehGregor: Do you know if the DOM4 spec for Range will eventually include getBoundingClientRect and/or the mutation APIs like modify/extend that are part of Selection?

[15:25:01.0000] <AryehGregor>
gicode, I think getBoundingClientRect might already be specced elsewhere.

[15:25:02.0000] <AryehGregor>
/me looks

[15:26:00.0000] <AryehGregor>
CSSOM View.

[15:26:01.0000] <AryehGregor>
http://dev.w3.org/csswg/cssom-view/#extensions-to-the-range-interface

[15:26:02.0000] <AryehGregor>
extend() doesn't make any obvious sense for Range, because there's no concept of a focus or anchor.

[15:26:03.0000] <AryehGregor>
So I don't see how you'd figure out which direction to extend.

[15:27:00.0000] <AryehGregor>
modify() is an unholy mess and I'll be grateful if anyone can come up with a usable spec for that as a Selection method, forget about Range.

[15:27:01.0000] <gicode>
AryehGregor: Thanks, I wasn't aware of that section in the CSS spec

[15:28:00.0000] <AryehGregor>
CSSOM View, not CSS.

[15:29:00.0000] <gicode>
AryehGregor: Sorry, CSSOM View :-)  For the modify/extend, the main thing I am looking for is an implementation of Unicode Text Segmentation

[15:29:01.0000] <AryehGregor>
That's not relevant to extend().

[15:30:00.0000] <AryehGregor>
For modify(), I'm pretty sure browsers currently implement it using voodoo magic, not Unicode Text Segmentation.

[15:31:00.0000] <gicode>
Yay, magic!  Thanks for the heads up.

[15:32:00.0000] <AryehGregor>
That's why I stopped trying to spec it.

[15:32:01.0000] <AryehGregor>
WebKit made it up and Gecko copied it.  I didn't look, but I suspect WebKit reused whatever internal code they happened to have lying around that did vaguely the right thing.

[15:32:02.0000] <rniwa>
gicode: what about unicode text segmentation?

[15:32:03.0000] <AryehGregor>
Getting it correct would probably require a great deal of work, because there are going to be like four billion subtle special cases where you want it to do magic.

[15:33:00.0000] <AryehGregor>
It depends on layout, too, which is fun.

[15:33:01.0000] <gicode>
rniwa: Specifically iterating over words (rather than space delimited tokens)

[15:33:02.0000] <rniwa>
gicode: modify works on visual text but all you get is DOM-based selection

[15:33:03.0000] <gsnedders>
AryehGregor: IIRC, we should use Unicode Text Segmentation

[15:33:04.0000] <AryehGregor>
Moving one line down needs to figure out where the cursor is visually and where it will go.

[15:33:05.0000] <AryehGregor>
gsnedders, does Opera implement modify()?

[15:33:06.0000] <rniwa>
gicode: oh, sure, you can do that using modify.

[15:33:07.0000] <gsnedders>
Or am I forgetting things?

[15:34:00.0000] <rniwa>
gicode: selection.modify will be much more useful once we can just instantiate it

[15:34:01.0000] <rniwa>
gicode: e.g. (new Selection).modify(~~)

[15:34:02.0000] <AryehGregor>
The definition of "word" varies by platform, as well as language.

[15:34:03.0000] <rniwa>
AryehGregor: right, that's why we need a method like modify in order to iterator over

[15:35:00.0000] <rniwa>
AryehGregor: we should add a constructor to DOMSelection so that ppl can just instantiate it

[15:35:01.0000] <gicode>
rniwa: If you instantiate one, what is it selecting?

[15:35:02.0000] <rniwa>
AryehGregor: modify and some other methods become much more useful

[15:35:03.0000] <rniwa>
gicode: nothing

[15:35:04.0000] <rniwa>
gicode: it's an non-visible object like range

[15:35:05.0000] <gsnedders>
AryehGregor: Okay, no

[15:36:00.0000] <rniwa>
gsnedders: in CJK, you can't reliably separate words

[15:36:01.0000] <rniwa>
gsnedders: since there are no word seperators

[15:36:02.0000] <rniwa>
gsnedders: you need to use dictionary-based heuristics

[15:39:00.0000] <AryehGregor>
rniwa, per spec, the interface is called Selection, not DOMSelection, BTW.

[15:39:01.0000] <gsnedders>
rniwa: Right, but USA #29 provides non-locale aware algorithms

[15:39:02.0000] <AryehGregor>
(there's no window.Selection in WebKit for some reason)

[15:39:03.0000] <rniwa>
gsnedders: I don't think it's really useful

[15:39:04.0000] <gsnedders>
*UAX

[15:40:00.0000] <rniwa>
gsnedders: in general, unicode ppl don't get CJK.

[15:40:01.0000] <rniwa>
especially C and J

[15:40:02.0000] <rniwa>
gsnedders: there are quite few Unicode-haters in Japan at least.

[15:40:03.0000] <gicode>
AryehGregor: In Chromium, Range seems to have all the selection APIs

[15:40:04.0000] <AryehGregor>
gicode, that's weird.

[15:41:00.0000] <AryehGregor>
Uncaught TypeError: Object  has no method 'extend'

[15:41:01.0000] <AryehGregor>
Doesn't seem like it to me.

[15:42:00.0000] <gicode>
AryehGregor: Ah, yea.  I saw expand and got confused.

[15:43:00.0000] <AryehGregor>
WebKit has lots of made-up nonstandard methods on Range and Selection.  It's annoying.

[15:43:01.0000] <AryehGregor>
Some of them aren't useful, either, like setBaseAndExtent().

[15:43:02.0000] <AryehGregor>
(= collapse() followed by extend())

[15:46:00.0000] <rniwa>
AryehGregor: so... I've recently learned that base != anchor and extent != focus

[15:46:01.0000] <AryehGregor>
Really?

[15:46:02.0000] <rniwa>
AryehGregor: yeah

[15:46:03.0000] <AryehGregor>
That's even more confusing.

[15:46:04.0000] <rniwa>
AryehGregor: when you double-click a word

[15:46:05.0000] <rniwa>
AryehGregor: base and extent stays at where you clicked

[15:46:06.0000] <rniwa>
AryehGregor: whereas focus/anchor will be at the end and the beginning of the word

[15:46:07.0000] <AryehGregor>
I'd file a bug asking that this nonstandard stuff be removed, but somehow I suspect the answer would be "no, lots of WebKit-specific stuff depends on it, we should just standardize it instead".

[15:48:00.0000] <rniwa>
AryehGregor: yeah...

[15:48:01.0000] <rniwa>
AryehGregor: but nobody knows the difference

[15:48:02.0000] <rniwa>
AryehGregor: so maybe we can at least hide it from Web-facing API

[15:48:03.0000] <AryehGregor>
That would be nice.

[15:48:04.0000] <AryehGregor>
It seems like unnecessary complication.

[15:49:00.0000] <rniwa>
AryehGregor: I tend to agree but then I'm not the one who added that feature

[15:49:01.0000] <rniwa>
so we probably need to talk to whoever knows about this stuff

[15:49:02.0000] <AryehGregor>
If Gecko is willing to remove multi-Range Selections, WebKit should be willing to make sacrifices too.  :)

[15:55:00.0000] <rniwa>
AryehGregor: I tend to agree but then webkit has a lot of companies involved so it's hard for me to make a call.

[15:55:01.0000] <AryehGregor>
Right.

[15:56:00.0000] <rniwa>
AryehGregor: we can probably start from spitting out console messages

