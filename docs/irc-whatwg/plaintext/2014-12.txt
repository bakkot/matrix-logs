2014-12-01
[21:39:44.0000] <MikeSmith>
https://github.com/webspecs/url/issues/6

[21:40:18.0000] <MikeSmith>
ABNF ALL THE THINGS!!

[21:41:39.0000] <MikeSmith>
but.. "these rules are NOT regular" https://github.com/webspecs/url/issues/6#issuecomment-65014005

[21:43:11.0000] <MikeSmith>
OK then, ABNF *SOME OF THE THINGS!! https://github.com/webspecs/url/issues/6#issuecomment-65014477

[21:45:25.0000] <MikeSmith>
"it would be actively misleading to present ABNF as the normative mechanism, and furthermore, it would be unproductive to lead people to believe that such grammar could be used by an ABNF pipeline"

[21:45:29.0000] <MikeSmith>
bravo

[21:49:27.0000] <MikeSmith>
"as an implementor, I don't see anything that's going to be beneficial for writing an implementation" vs the spec stating "These railroad diagrams, as modified by the accompanying text, define grammar production rules for URLs"

[21:51:25.0000] <MikeSmith>
implementing the parsing and serializing algorithms defined in the normative prose of the spec is what's "beneficial for writing an implementation"

[21:52:39.0000] <MikeSmith>
the railroad diagrams don't define implementation requirements for any conformance class at all

[21:54:17.0000] <MikeSmith>
hmm or am I wrong and that's now how the spec defines the parsing algorithm

[23:04:28.0000] <MikeSmith>
Domenic: I'm starting to wonder if attempting to define implementation requirements through a combination of a (regular) formalism plus (non-regular) processing steps isn't the worst of both worlds

[23:04:52.0000] <Domenic>
MikeSmith: yeah, I am in the same boat

[23:05:19.0000] <Domenic>
MikeSmith: did you see my https://github.com/webspecs/url/issues/5#issuecomment-65026820 ?

[23:05:39.0000] <MikeSmith>
Domenic: no, didn't see it yet

[23:05:41.0000] <MikeSmith>
looking now

[23:05:55.0000] <Domenic>
it might be a bit clearer, unsure

[23:06:33.0000] <Domenic>
it makes it clear that the railroad diagram parsing is just step 1 of a multi-step process.

[23:06:47.0000] <MikeSmith>
yeah I think it's clearer

[23:07:35.0000] <MikeSmith>
as far as what you commented on in the existing spec, yeah, "fuzzy" is a good way to describe it

[23:08:04.0000] <MikeSmith>
would be nice to get more (browser) implementor feedback on what's there in the spec now

[23:08:17.0000] <Domenic>
yeah :(

[23:08:57.0000] <MikeSmith>
I doubt many UA implementors have actually looked it much, or at least not with an eye toward trying to imagine writing code based on it

[23:09:17.0000] <MikeSmith>
I hadn't myself until an hour or so ago

[23:10:28.0000] <MikeSmith>
myself I didn't think what annevk had in the spec (before this rewrite) was particularly hard to follow or implement from

[23:10:40.0000] <Domenic>
agreed!

[23:10:59.0000] <MikeSmith>
so I'm not sure this rewrite is solving any problems for the right people

[23:11:12.0000] <MikeSmith>
though it may be solving problems for some others

[23:11:55.0000] <MikeSmith>
anyway, I'll try to remain positive and open-minded, and try to give some concrete constructive feedback

[23:12:10.0000] <Domenic>
our daily struggle :)

[23:12:32.0000] <MikeSmith>
well for this at least I think on the issue comments you're already saying most I what I'd attempt to

[23:25:56.0000] <sussane>
Indonesia please...

[00:57:21.0000] <zcorpan>
has tc39 still not specified __defineGetter__ ?

[02:31:33.0000] <zcorpan>
my knee-jerk reaction to url railroads is that i prefer the algorithm style, but it may be that it's what i'm used to. i have never tried to implement or test a railroad spec (url is the first that i know)

[02:31:56.0000] <zcorpan>
but as far as algorithm vs. BNF-style grammar goes, i much prefer specs that use algorithms

[02:32:35.0000] <zcorpan>
i find it easier to reason about and make sure the implementation matches what the spec says

[02:45:09.0000] <zcorpan>
it could be that specs that use grammars have historically also left many details and error handling undefined, which skews my taste

[02:56:41.0000] <Ms2ger>
Are they normative in URL?

[03:07:01.0000] <MikeSmith>
Ms2ger: in Sam's rewrite yeah the URL railroad diagrams normatively define parsing behavior, sometimes in combination with a few algorithmic steps after a particular diagram

[03:07:53.0000] <MikeSmith>
I haven't yet looked in detail at if/how they define error handling

[03:37:24.0000] <zcorpan>
foolip: i have grep results for cdata+xhtml if you're interested

[04:03:08.0000] <zcorpan>
foolip: https://gist.github.com/anonymous/bf63359fc7d45f16effc

[05:55:56.0000] <zcorpan>
seems like MediaQueryList exposes when layout happens. so we need to specify what flushes layout and what blocks layout

[05:56:27.0000] <zcorpan>
http://software.hixie.ch/utilities/js/live-dom-viewer/saved/3323

[06:06:30.0000] <MikeSmith>
does a web socket server need to run on a privileged port?

[06:07:09.0000] <MikeSmith>
(wondering why the default ws: port in web-platform-tests config file is 82)

[06:09:48.0000] <zcorpan>
MikeSmith: no

[06:11:18.0000] <SteveF_>
TabAtkins: hi, more bikeshed: can I add a <script src="blah"> to a .bs file?

[06:13:39.0000] <zcorpan>
http://software.hixie.ch/utilities/js/live-dom-viewer/saved/3324 - gecko seems to fire resize events sync when flushing layout while blink/webkit fire it later

[06:21:46.0000] <zcorpan>
http://software.hixie.ch/utilities/js/live-dom-viewer/saved/3325 - gecko/blink/webkit all invoke requestAnimationFrame later. i guess resize should do the same

[06:23:29.0000] <zcorpan>
wonder if it makes sense to avoid painting on a flushed layout. does anyone do that?

[06:29:26.0000] <zcorpan>
foolip: if you want to search in httparchive, it could be interesting to search for something like "([^/]/|[\"'])<\!\[CDATA\[" to find literal regexes and strings that start with <![CDATA[. on github i saw a few of those but they were mostly using xhr.responseText

[07:11:00.0000] <TabAtkins>
SteveF_: Yes.  Just make sure the element is on its own line, or Bikeshed might not recognize it, and will attempt to do autolinking on the contents.

[07:11:21.0000] <SteveF_>
thanks!

[10:56:04.0000] <Domenic>
TabAtkins: ping https://github.com/tabatkins/bikeshed/pull/288

[10:59:03.0000] <TabAtkins>
Domenic: Some people have been on vacation all weekend

[10:59:34.0000] <Domenic>
pssshaw

[11:00:59.0000] <TabAtkins>
And by "some people" I mean me, and by "on vacation" I mean playing DA:I

[12:04:05.0000] <allam2002>
can any one help me to register a new meta to whatwg


2014-12-02
[17:37:23.0000] <jgraham>
 

[17:38:50.0000] <ato>
A man of few words.

[18:45:22.0000] <MikeSmith>
heh

[18:45:42.0000] <MikeSmith>
jgraham: well put

[21:02:37.0000] <deadowl>
gonna afk for a bit, but was wondering about the concept of providing a source set for scripts. There are multiple CDNs that a web author can hook into for a script (e.g. jquery), and one of those locations may be cached. The default source could otherwise then provide a local (server-wise) copy of the script.

[02:00:31.0000] <foolip>
zcorpan_: that's interesting. I didn't think to look for CDATA in strings

[02:00:56.0000] <foolip>
but in the case of xhr.send(document), the problem would happen on the server-side

[02:02:15.0000] <foolip>
it's possible for the output of innerText and XMLSerializer to be sent over the network as well, of course

[02:04:34.0000] <zcorpan_>
foolip: you mean innerHTML i guess

[02:10:53.0000] <JakeA>
/me checks channel name, looks for annevk in members list, checks channel name again

[03:00:11.0000] <foolip>
zcorpan_: yes, innerHTML

[03:00:19.0000] <foolip>
zcorpan_: https://codereview.chromium.org/756313002/#msg4

[03:00:53.0000] <foolip>
would you remove CSSRule.CHARSET_RULE, or leave it like annevk has done for some Node type constants?

[03:02:54.0000] <zcorpan_>
foolip: i guess leave it

[03:05:14.0000] <foolip>
zcorpan_: ok, thanks

[06:45:28.0000] <Ms2ger>
mathiasbynens, wait, we have ipv6 adoption?

[06:51:44.0000] <mathiasbynens>
Ms2ger: my home connection (Telenet) has supported IPv6 for 6 months now

[06:54:12.0000] <wanderview>
JakeA: I think annevk is traveling for the moz portland thing this week

[06:54:25.0000] <JakeA>
wanderview: ahh ok, cheers!

[06:55:42.0000] <Ms2ger>
I hope he's arrived by now

[09:25:23.0000] <Domenic>
TabAtkins: can I use https://github.com/tabatkins/bikeshed/pull/288 with the web interface automatically, or does that need to wait for an update?

[09:44:45.0000] <TabAtkins>
Domenic: It updates regularly and automatically.

[09:45:16.0000] <Domenic>
TabAtkins: so it automatically adds new command-line params?

[09:45:44.0000] <TabAtkins>
Ah, that part not so much. We'll need to bug plinss to have pass-through of parameters.

[09:47:28.0000] <Domenic>
done https://github.com/tabatkins/bikeshed/pull/288#issuecomment-65272321

[11:21:34.0000] <TabAtkins>
rubys: For whatever reason, your responses tend to break threading.

[11:34:06.0000] <IdeaHat>
Hey all. I'm working on a mime-sniffer for the Servo project. Looks like there are bugs in the documentation at https://mimesniff.spec.whatwg.org/, but they also look like they are already red-highlighted. Does that mean they are already noted?

[11:35:14.0000] <jgraham>
IdeaHat: Yeah, although I don't know if anyone is really working on that spec or not

[11:35:20.0000] <jgraham>
GPHemsley: ^

[11:37:12.0000] <IdeaHat>
jgraham: fair nuff. I was going to also ask, the method for returning the sniffed type is a little vague. We're just writing over the header right now.

[11:38:41.0000] <IdeaHat>
But if its not currently being maintained I can look else where.

[11:40:16.0000] <jgraham>
IdeaHat: I don't know if there's anything better than that spec. I kind of lost track tbh. You might need to own the spec if you want it fixed ;)

[11:40:47.0000] <IdeaHat>
fair nuff...

[11:41:23.0000] <jgraham>
annevk might know more when he's around

[11:43:52.0000] <Domenic>
IdeaHat: own the spec ... do it ... join ussss

[11:44:35.0000] <caitp>
(speaking of that, whatever happened to the window.console spec guy?)

[11:44:44.0000] <IdeaHat>
hehe, I can't commit at the moment.

[11:48:47.0000] <Domenic>
terinjokes: yeah, what happened to the console spec

[11:49:05.0000] <terinjokes>
caitp: i'm still here

[11:49:18.0000] <terinjokes>
it's on GitHub, we've got a room #console-spec

[11:49:51.0000] <Domenic>
pssh what's wrong with this room

[11:50:23.0000] <caitp>
just wanted to see how that was going, and if there's been any movement on unifying them all in browsers

[11:50:32.0000] <caitp>
not expecting miracles, but you know =)

[11:50:47.0000] <Domenic>
https://terinjokes.github.io/console-spec/

[11:51:06.0000] <Domenic>
not bad, a solid day of effort would make that console.spec.whatwg.org-worthy IMO.

[11:51:14.0000] <terinjokes>
ocotober! (sigh, need to get back to this)

[11:52:21.0000] <terinjokes>
two major things right now are defining the logger function, and the special logic for console.table

[11:54:39.0000] <Domenic>
You could get the script-observable stuff done with almost no work

[11:55:17.0000] <Domenic>
That probably means just specifying what assert() does (I think it throws?) and putting in warning notes about the non-interoperable aspects of the IDL.

[11:57:27.0000] <terinjokes>
Domenic: pardon, script observable?

[11:57:45.0000] <Domenic>
terinjokes: basically, testable using JS instead of human eyes

[11:58:03.0000] <Domenic>
terinjokes: to be interoperable with web content a browser only needs to implement script-observable parts

[11:58:12.0000] <Domenic>
to be developer-friendly, it needs more, of course.

[11:58:35.0000] <Domenic>
but if you implement a browser in which e.g. console.log doesn't exist or console.assert fails to throw, you risk sites not working.

[11:59:00.0000] <terinjokes>
yeah, i think the unit tests right now just see if console.* exist and are callable

[11:59:15.0000] <Domenic>
yeah the tests are nice

[12:00:07.0000] <terinjokes>
is it in scope that the formatters are script observable in some place

[12:00:30.0000] <terinjokes>
if #4 is resolved, then it could be done there

[12:00:47.0000] <terinjokes>
(set the assert message with format specifiers and observe the error message)

[12:01:34.0000] <Domenic>
interesting

[12:02:01.0000] <Domenic>
need to build browser interest there i guess

[13:42:31.0000] <TabAtkins>
Hehe, I love when people forget to actually take something offlist when they say they are. Luckily rubys didn't say anything embarrassing.


2014-12-03
[19:42:22.0000] <zewt_>
middle-clicking links on amazon, opening in same tab because it's not a real link; sad when even Amazon fucks up the basics

[19:42:49.0000] <zewt_>
particularly sad because sites like amazon set the standards, so lots of other sites will use it to justify the same screwups

[00:43:49.0000] <zcorpan>
mathiasbynens: hmmm. http://dabblet.com/gist/69fee57c26b73996b53f the JS misdetects chrome/opera for me. not sure why

[00:44:53.0000] <mathiasbynens>
zcorpan: you mean the `var html = document.documentElement; document.body.innerHTML = 'rebeccapurple ' + (getComputedStyle(html).backgroundColor === 'rgb(102, 51, 153)'? '<strong>is</strong> supported!' : 'is not supported :(')`?

[00:45:02.0000] <zcorpan>
mathiasbynens: right

[00:45:35.0000] <mathiasbynens>
zcorpan: hmm, works for me. you may want to ask @leaverou as it’s her demo

[00:46:25.0000] <mathiasbynens>
tested in Opera 26.0.1656.32 & Chrome 39.0.2171.71 (64-bit) on OS X

[01:03:51.0000] <zcorpan>
mathiasbynens: huh. now it works for me. when i tested previously it said "not supported" in both opera and chrome (but the background was purple)

[01:05:25.0000] <zcorpan>
running in a private window it shows as not supported again. reloading makes it work

[01:15:30.0000] <mathiasbynens>
woah, weird

[07:05:17.0000] <annevk>
Can someone reach out to https://twitter.com/arslancb/status/539891265161015296 please?

[07:06:07.0000] <foolip>
annevk: do you understand the request?

[07:06:38.0000] <annevk>
foolip: I guess I can reply myself

[07:06:59.0000] <foolip>
annevk: I did too :)

[07:07:28.0000] <annevk>
cool :-)

[07:18:32.0000] <elixir876>
guys i need a job tip

[07:18:52.0000] <elixir876>
i have an offer and i don't know what to do

[08:59:09.0000] <annevk>
The amount of URL politics emails :-(

[08:59:53.0000] <rubys>
annevk: tell me about it.

[09:00:25.0000] <rubys>
annevk: meanwhile, I did have a good call with wseltzer.  I do not believe the member agreement is a problem, and she will look into the invited expert agreement issue.

[09:15:25.0000] <Domenic>
annevk: haha nice reply to www-tag

[09:18:43.0000] <tantek>
Domenic: URL?

[09:19:20.0000] <Ms2ger>
http://lists.w3.org/Archives/Public/www-tag/latest

[09:19:22.0000] <Domenic>
tantek: thread starts at http://lists.w3.org/Archives/Public/www-tag/2014Dec/0005.html, only a few short replies to get to the good stuff

[09:19:45.0000] <tantek>
Ms2ger - I see you like support forums

[09:19:55.0000] <Ms2ger>
I do

[09:41:04.0000] <roc>
Ms2ger: are you at the Mozilla meeting in Portland?

[09:41:19.0000] <Domenic>
Rubys: why is the copy hosted on w3ctag? At the last f2f the TAG agreed to abandon url copying as a work item.

[09:41:30.0000] <Ms2ger>
roc, I'm not, sadly

[09:41:49.0000] <Ms2ger>
Domenic, host everything everywhere!

[09:42:17.0000] <rubys>
Domenic: ask Daniel Appelquist.

[09:43:31.0000] <rubys>
Ms2ger: my goal is to work with everybody.  I plan to meet with the W3C Director in 1Q 2015 and challenge the need for a w3c copy.

[09:43:47.0000] <rubys>
I'd like that discussion to be based on facts, not fears.

[09:44:12.0000] <Domenic>
rubys: in that case the answer is "because we didn't delete it yet"…

[09:44:55.0000] <rubys>
Domenic: no.  Since the TAG decision, I talked to Daniel.  He added me to that repository for exactly this purpose.

[09:45:41.0000] <Domenic>
Oh :/

[09:45:45.0000] <Domenic>
Ms2ger: I think the goal is to beat canvas for total number of distinct copies

[09:53:27.0000] <gsnedders>
who's up for hand-executing the parser spec going bug hunting? because I don't have all the table and foreign content stuff in my head atm, and this is both

[09:53:54.0000] <gsnedders>
your mission, should you choose to accept it, is to parse "<table><th><math><td></tr>" and find out if any of the spec's notes are wrong

[10:01:40.0000] <gsnedders>
ok, this is a bug in Gumbo I'm pretty sure

[10:07:19.0000] <Ms2ger>
gsnedders, a degree?!

[10:13:03.0000] <Ms2ger>
TabAtkins, I've been trying to get us to write a table layout spec for as long as I've been involved with Servo :)

[10:13:51.0000] <TabAtkins>
I'm going to pretend that continuing to yell at people will eventually work.

[10:14:23.0000] <rubys>
TabAtkins: is there a way to say "none" for Level in bikeshed metadata?

[10:14:32.0000] <TabAtkins>
https://github.com/tabatkins/bikeshed/pull/264

[10:15:02.0000] <TabAtkins>
Some statuses are unlevelled, but all the W3Cish statuses require a level currently.

[10:15:29.0000] <TabAtkins>
Can you use one of the unlevelled statuses, or do you need a non-leveled W3C status?  And if you do, do you really think there won't be a v2?

[10:16:55.0000] <annevk>
Ms2ger: you're working on table layout? Bless you

[10:16:56.0000] <rubys>
TabAtkins: I added comments to that pull request; for all I know, the W3C URL Standard won't live beyond 1Q2015.

[10:17:18.0000] <Ms2ger>
annevk, I'm shouting at people who do

[10:17:26.0000] <annevk>
This morning I saw some of the work smontagu has done on vertical layout, it looks really great

[10:17:35.0000] <annevk>
And apparently you can play with in Nightly by flipping a pref

[10:17:48.0000] <Ms2ger>
I hear such things

[10:17:49.0000] <gsnedders>
Ms2ger: a whole degree!

[10:18:04.0000] <Ms2ger>
gsnedders, congratulations!

[10:18:04.0000] <rubys>
TabAtkins: meanwhile, I have a near term need.  I actually had briefly patched bikeshed myself (differently, but the same result).

[10:19:50.0000] <TabAtkins>
rubys: Oh, that pubrules error making you request this isn't an issue with the version at all, it's an issue with pubrules having a broken "looks like a date" regex.  Not actually a pubrules violation.

[10:20:30.0000] <rubys>
TabAtkins: ok.  I'll push back.

[10:21:15.0000] <TabAtkins>
For publishing in the W3C, you should be following CSSWG practice - publish under url-1, and simultaneously have a 302 redirect from url to url-1.

[10:21:31.0000] <TabAtkins>
rubys: Yeah, we run into that violation constantly when publishing in the CSSWG.

[10:21:58.0000] <rubys>
I'll let PLH decide.  He clearly is up-to-speed on what CSS does.

[10:23:19.0000] <TabAtkins>
rubys: Don't let him "decide" without prompting - we have to remind the pub team every single time, or else they publish under something random.

[10:23:55.0000] <rubys>
TabAtkins: gotcha.  I will follow up.

[10:24:17.0000] <TabAtkins>
Hm, wondering why the copyright is flagging a markup difference.  You doing that manually?

[10:28:03.0000] <rubys>
TabAtkins: got confirmation with PLH that the '-1' and 302 redirect is not a problem.

[10:28:39.0000] <rubys>
TabAtkins: yes, I have a copyright.include.  See https://github.com/w3ctag/url/tree/develop

[10:28:41.0000] <TabAtkins>
Didn't think it would be. ^_^

[10:29:13.0000] <TabAtkins>
Ah, kk.  Just normalize it to the pubrules markup to make it shut up on that error.

[10:29:26.0000] <TabAtkins>
And the namespace thing is a constant error.  It's a bug in pubrules, basically.

[10:47:55.0000] <rubys>
TabAtkins: there is a new pubrules implementation that will roll out in January

[10:48:25.0000] <TabAtkins>
Yeah, been tracking it somewhat.

[10:48:30.0000] <rubys>
TabAtkins: it is written in JS, not XSLT.  And will accept pull requests.  :-)

[10:48:57.0000] <TabAtkins>
It's listed on https://wiki.csswg.org/spec/publish as something to play with.

[11:05:36.0000] <zcorpan>
wouldn't it be funny if chrome started respecting <meta http-equiv="X-UA-Compatible" content="IE=edge,chrome=1"/> ?

[11:07:21.0000] <TabAtkins>
No.

[11:07:45.0000] <Ms2ger>
No.

[11:45:23.0000] <terinjokes>
TabAtkins: thanks for the merge. strange, indeed, but at least the images are now on a CDN

[11:52:03.0000] <TabAtkins>
np, thanks for the PR

[13:28:23.0000] <Hixie>
zcorpan: http://caniuse.com/#feat=svg-img uses id="embedded-content-0"

[13:34:34.0000] <Hixie>
anyone got a non-snarky name for x-ua-compatible?

[13:35:07.0000] <caitp>
i'm not sure I have a non-snarky name for anything :(

[13:35:47.0000] <annevk>
Hixie: sounds like about:legacy-compat

[13:36:13.0000] <Hixie>
yeah

[13:36:22.0000] <Hixie>
i don't understand why it's necessary

[13:36:27.0000] <Hixie>
does IE really not default to standards mode?

[13:37:52.0000] <TabAtkins>
Hixie: It does, sometimes, unless you're in a certain Zone, or your site is on certain blacklists, or etc

[13:38:05.0000] <TabAtkins>
And x-ua-compatible overrides those heuristics.

[13:38:09.0000] <TabAtkins>
Except when it doesn't.

[13:38:15.0000] <Hixie>
jesus wept

[13:38:21.0000] <Hixie>
i'm looking at the documentation now

[13:38:40.0000] <Hixie>
what manner of hell has the IE team wrought upon themselves

[13:39:07.0000] <TabAtkins>
They're perfectly aware of what hell they're experiencing.  They just weren't willing to move to a fast auto-update model, which minimizes the pain.

[13:39:10.0000] <TabAtkins>
At least, not at the time.

[13:39:27.0000] <Hixie>
well i imagine they're aware of it, yes

[13:39:28.0000] <caitp>
i totally didn't need the "jesus wept" imagery in my head right now :'( --- but I think they're doing a good job of doing things better now

[13:39:44.0000] <TabAtkins>
So "let's just ship all five versions of our browsers at once" inexplicably became the sanest answer left.

[13:41:44.0000] <Hixie>
<sarcasm> i wonder if anyone predicted this mess back when they first suggested the whole idea </sarcasm>

[13:41:55.0000] <gsnedders>
https://html5.org/r/8869 is empty?

[13:42:10.0000] <Hixie>
odd

[13:45:14.0000] <gsnedders>
Hixie: I got confused at <sarcasm>, but I took a deep breath at the end so I'm okay now.

[13:46:36.0000] <Hixie>
oh apparently i didn't save the file before the last checkin, d'oh

[13:54:19.0000] <annevk>
Hixie: IE defaults to standards mode now, but has not always done that

[13:54:38.0000] <annevk>
Ah you guys covered that

[13:54:41.0000] <annevk>
I think the commit looks good

[14:00:04.0000] <Hixie>
does hallvord's spec define onpaste and co?

[14:02:02.0000] <annevk>
Hixie: it defines that there's a paste event

[14:02:16.0000] <annevk>
Hixie: it doesn't define the corresponding event handler

[14:02:23.0000] <annevk>
Hixie: http://dev.w3.org/2006/webapi/clipops/clipops.html

[14:03:41.0000] <Hixie>
where do i file bugs on this spec

[14:03:49.0000] <Hixie>
it fires beforecopy without saying what the target is

[14:04:19.0000] <Hixie>
and uses "context" without saying what it means :-(

[14:13:58.0000] <MikeSmith>
Hixie: bugzilla

[14:14:39.0000] <MikeSmith>
first component at https://www.w3.org/Bugs/Public/enter_bug.cgi?product=WebAppsWG

[14:15:22.0000] <Hixie>
too late, i mailed him

[14:15:23.0000] <Hixie>
:-)

[14:15:39.0000] <MikeSmith>
that works too

[14:16:07.0000] <MikeSmith>
hallvord should hang around on IRC more

[14:16:36.0000] <MikeSmith>
I know he's capable because when I was at opera I could get ahold of him on opera irc

[14:17:49.0000] <Hixie>
heh

[14:26:49.0000] <Ms2ger>
He's on moznet at times

[14:30:19.0000] <MikeSmith>
/me sets up hallvors-has-joined-#developers notifier in his irssi

[15:01:23.0000] <tantek>
MikeSmith: Hey this is out of date - can you update? http://www.w3.org/2010/web-notifications/ (e.g. group is now closed right? and annevk quit the group so it is without chair right?)

[15:16:26.0000] <MikeSmith>
tantek: not closed

[15:33:28.0000] <annevk>
Domenic: I asked some people to review Streams

[15:33:49.0000] <Domenic>
annevk: awesome, thanks

[15:33:51.0000] <annevk>
Domenic: the problem they have is that since it's not using IDL, they have to understand all of ES6 to know the semantics

[15:34:06.0000] <Domenic>
hmm

[15:34:12.0000] <annevk>
Domenic: e.g. what does stringifying the prototype return?

[15:34:12.0000] <Domenic>
I don't really use any ES6

[15:34:24.0000] <Domenic>
The same thing it does for a normal JS class

[15:34:38.0000] <annevk>
Domenic: is that the same as e.g. document.__proto__?

[15:34:50.0000] <Domenic>
I don't really understand the question

[15:34:58.0000] <annevk>
Domenic: so one question was whether this can be implemented in terms of IDL

[15:35:04.0000] <Domenic>
Is the question what does String(WritableStream.prototype) return?

[15:35:27.0000] <Domenic>
I imagine just like promises it can be implemented in terms of IDL by using lots of any's and such

[15:35:38.0000] <Domenic>
without inheritance support, etc. etc.

[15:35:43.0000] <annevk>
Domenic: and would it be compliant?

[15:35:57.0000] <Domenic>
I guess not, in minor ways

[15:36:29.0000] <Domenic>
well, the only one i can think of is that i don't specify a toStringTag

[15:36:41.0000] <Domenic>
which is easily fixed

[15:37:11.0000] <Domenic>
it would be noncompliant in that i assume gecko's idl generator doesn't allow subclassing

[15:37:21.0000] <Domenic>
but you guys have the same problem with promises

[15:38:37.0000] <annevk>
Domenic: well IDL doesn't do subclassing in general

[15:38:41.0000] <annevk>
Domenic: (yet)

[15:38:42.0000] <Domenic>
right

[15:39:01.0000] <annevk>
Domenic: anyway, the feedback I get is that Streams is hard to digest without IDL

[15:39:12.0000] <annevk>
Domenic: not sure if the JS team has the bandwidth

[15:39:20.0000] <Domenic>
i could write up a non-normative gist of some IDL if that would help

[15:39:21.0000] <annevk>
Domenic: or if we necessarily want to implement it there

[15:39:39.0000] <smaug____>
Domenic: one question I have, why you don't want to use webidl?

[15:39:52.0000] <Domenic>
smaug____: it is a mismatch with various JS semantics I am using

[15:39:56.0000] <smaug____>
why to use harder to read ecma-style spec language

[15:39:59.0000] <smaug____>
hmm

[15:40:09.0000] <smaug____>
like what?

[15:40:15.0000] <Domenic>
smaug____: the spec language the algorithm steps are specced in is a separate issue from how the interface is defined though

[15:41:03.0000] <Domenic>
smaug____: parameter destructuring. delaying conversions until use instead of checking up front. allowing subclassing :P. I think default arguments are fixed now, but they weren't when I started.

[15:41:14.0000] <Domenic>
(and browsers don't implement the fix yet last I checked)

[15:43:13.0000] <smaug____>
Domenic: why you need to use features not defined in webidl?

[15:44:31.0000] <Domenic>
smaug____: makes it easier to spec something that behaves like a real JS object. (as I said, you can get away with using WebIDL if you use a lot of `any`s.)

[15:44:56.0000] <Domenic>
(meaning, "need" is not totally accurate.)


2014-12-04
[18:45:36.0000] <MikeSmith>
isn't the plan still to integrate Streams into the EcmaScript spec itself

[18:45:49.0000] <MikeSmith>
if so it seems like Domenic's approach is the right one

[18:48:01.0000] <MikeSmith>
anyway smaug is fast asleep by now I guess

[18:48:08.0000] <MikeSmith>
we need an inform bot here

[18:50:09.0000] <MikeSmith>
Hixie: would it be OK if I had an inform bot join here?

[18:50:42.0000] <MikeSmith>
kind of like MsgServ but more lightweight and easier

[18:50:51.0000] <MikeSmith>
we could just do like this:

[18:51:52.0000] <MikeSmith>
foobot, inform smaug____ I think if the plan is still to integrate Streams into the EcmaScript spec itself, then Domenic's approach would seem to make a lot of sense...

[18:52:06.0000] <MikeSmith>
and then when smaug joined, the bot would do:

[18:52:47.0000] <MikeSmith>
smaug, at 2014-12-04 00:54 UTC, MikeSmith said, I think if the plan is still to integrate Streams into the EcmaScript spec itself, then Domenic's approach would  seem to make a lot of sense...

[18:56:31.0000] <Hixie>
MikeSmith: fine by me

[18:56:49.0000] <MikeSmith>
k

[18:57:00.0000] <MikeSmith>
will try to set one up this weekend

[21:25:59.0000] <MikeSmith>
layout.css.vertical-text.enabled=true

[21:33:09.0000] <MikeSmith>
doesn't work with my test page though

[21:33:10.0000] <MikeSmith>
http://people.w3.org/mike/demo/melos/

[21:33:28.0000] <jgraham>
MikeSmith: smaug____ is probably not asleep yet

[21:33:53.0000] <MikeSmith>
ah yeah yall are in Portland

[21:34:28.0000] <MikeSmith>
glyph-orientation-vertical is what I'm using in my (old) demo. I guess I may need to update that

[21:35:01.0000] <MikeSmith>
"Unknown property 'glyph-orientation-vertical'.  Declaration dropped." in console in Nightly

[21:35:05.0000] <smaug____>
not yet

[21:35:13.0000] <MikeSmith>
also "Unknown property 'align'.  Declaration dropped"

[21:36:14.0000] <smaug____>
/me looks at the logs

[21:37:48.0000] <smaug____>
MikeSmith: oh, right, *if* Streams will be part of ecma, then sure, using whatever odd syntax ecma is using for the specs is fine

[21:38:00.0000] <smaug____>
but it is not clear to me why Streams should be part of ecma

[21:52:31.0000] <MikeSmith>
Hixie: fyi this is the bot I was talking about https://github.com/w3c/infobot

[21:53:59.0000] <MikeSmith>
smaug____: I personally don't know enough about Streams to have a position either way on whether it rightly should be in the ES spec or not

[21:54:45.0000] <MikeSmith>
smaug____: but I do vaguely recall that there was some agreement within TC39 that it should be moved into the ES spec

[21:55:23.0000] <smaug____>
if so, fine. I wouldn't be looking at that spec ever again :p

[21:55:25.0000] <MikeSmith>
but I could be misremembering that and anyway Domenic would know of course

[21:55:41.0000] <MikeSmith>
smaug____: well that's sad to hear

[21:55:58.0000] <smaug____>
(not quite true, I've looked at some ecma drafts occasionally )

[21:56:53.0000] <smaug____>
MikeSmith: but in practice, it would mean I'd expect js engine devs to review it

[21:57:04.0000] <smaug____>
not dom implementation devs

[21:57:38.0000] <MikeSmith>
ah OK. I was going to say that if you're not looking at a particular spec because it's hard for you to read than that could be a sign of the spec having a serious problem

[21:58:03.0000] <MikeSmith>
but if it's more about division of labor (between DOM and JS teams), that's a different thing

[21:59:04.0000] <smaug____>
I guess it is about both. If the spec is easy to read and happens to be somewhere in whatwg, it is likely that I'll read it

[22:19:06.0000] <MikeSmith>
smaug____: ok

[23:11:32.0000] <zcorpan>
Hixie: looks like it's due to https://github.com/Fyrd/caniuse/commit/2455f144fa5a261e7f15f7d03a234ee426e5432c

[23:16:22.0000] <Hixie>
o_O

[00:14:09.0000] <zcorpan>
hmm, for background-color:9.9aa gecko rounds the number so it becomes #0010aa. but for 9.9 it rejects. blink rounds both numbers and dimensions

[00:16:44.0000] <zcorpan>
hmm, scientific notation is interesting. 9e1

[02:27:29.0000] <estellevw>
does anyone want to take a look at my webcomponents talk and give me feedback tonight? My preso is tomorrow morning.

[02:27:29.0000] <estellevw>
(tonight as in it's 9:26 pm in AU right now)

[02:27:29.0000] <estellevw>
oops, wrong IRC channel.

[02:27:29.0000] <estellevw>
sorry for the disturbance

[02:27:45.0000] <estellevw>
though if someone is interested, that would be great too

[04:04:40.0000] <MikeSmith>
Ms2ger: small assistance needed with something

[04:04:48.0000] <Ms2ger>
Shoot

[04:04:53.0000] <Ms2ger>
(I'm in class, though)

[04:05:32.0000] <MikeSmith>
will DM you about it since it's so highly sensitive

[04:06:39.0000] <gsnedders>
Ms2ger: stop procrastinating while in class!

[04:08:53.0000] <Ms2ger>
gsnedders, well, my prof just walked out, so... :)

[04:11:43.0000] <Ms2ger>
... and he's back

[04:11:52.0000] <MikeSmith>
infobot, tell annevk what happened to irccloud

[04:12:21.0000] <MikeSmith>
bah this bot sucks

[04:12:51.0000] <MikeSmith>
oh it's not actually here

[04:42:00.0000] <zcorpan>
TabAtkins: fixed hashless now https://github.com/whatwg/quirks/commit/f84b11e4abb561317c407c1a0d47ff45ad6e4fcf https://github.com/w3c/web-platform-tests/pull/1442

[05:49:13.0000] <JakeA>
wanderview: thanks for thinking through that partial cache stuff!

[05:50:03.0000] <wanderview>
JakeA: np, I've been thinking about how I would implement it for a while... streaming the partial file will be tricky for us due to how our streams infrastructure works

[05:50:20.0000] <wanderview>
thanks for working on the algorithms to make it work, though!

[05:50:30.0000] <wanderview>
I definitely think its something we want to solve

[05:50:43.0000] <wanderview>
/me wonders why irccloud is running slow...

[06:41:52.0000] <Domenic>
MikeSmith: smaug____: I was hoping to work with TC39 on making streams part of the ES standard library, but they were not willing to work with me/WHATWG really; they wanted to take over the spec themselves. So that idea kinda floundered. Still, I think it (as well as Encoding and URL, actually) should be part of a theoretical "extended ES standard library",

[06:41:52.0000] <Domenic>
not managed by Ecma, but still appropriate for implementation in the JS engine.

[06:58:09.0000] <smaug____>
well, couldn't any spec be part of the theoretical ES sl

[06:58:19.0000] <smaug____>
whether or not webidl is used for example

[07:00:02.0000] <gsnedders>
What spec it is in is relatively irrelevant.

[07:01:02.0000] <smaug____>
indeed. Where the spec is "published" can be somewhat relevant since it may affect to who reviews and implements it

[07:01:46.0000] <gsnedders>
But at the end of the day, there's some lack of desire to avoid extending the ES stdlib beyond things that cannot be implemented in JS itself.

[07:01:48.0000] <Domenic>
smaug____: IMO specs would need to be platform-independent, so e.g. no use of DOMException etc. And IMO (but not everyone's unfortunately) I should be able to work on JS standard library specs in WHATWG.

[07:02:12.0000] <gsnedders>
What makes a spec a JS stdlib spec?

[07:02:19.0000] <gsnedders>
(honest question)

[07:02:52.0000] <smaug____>
/me thinks we should make webidl more platform independent and then use it also for APIs which non-browser implementations want to have

[07:03:59.0000] <smaug____>
and this is mainly from practical point of view. having webidl interfaces tends to just make the spec significantly easier to read comparing to some ways to write specs

[07:04:17.0000] <smaug____>
if we need some other syntax to express new es features, we should change webidl

[07:04:48.0000] <Domenic>
I somewhat agree with that except that WebIDL is so hard to read for anyone used to JS semantics

[07:04:53.0000] <Domenic>
e.g. wtf is an attribute or interface

[07:05:11.0000] <Domenic>
thus https://streams.spec.whatwg.org/#rs-class-definition

[07:06:25.0000] <annevk>
Yeah, we should just rename interface to class and attribute to property

[07:06:51.0000] <Domenic>
I'd like something like `get/set prop` or `get prop`

[07:06:53.0000] <annevk>
And instead of readonly have something like get property

[07:07:01.0000] <Domenic>
yeah

[07:07:14.0000] <annevk>
Seems easy enough to fix

[07:07:30.0000] <Domenic>
but hard to justify given the churn

[07:09:00.0000] <annevk>
Given the upsides it seems worth it

[07:09:42.0000] <annevk>
IDL is after all a way to convey something as well and if it's doing a poor job at that we should fix it

[07:12:01.0000] <smaug____>
why get/set ?

[07:12:20.0000] <smaug____>
readonly attribute is quite good abstraction

[07:13:06.0000] <gsnedders>
presumably because get/set is like the {get foo() { return 1; }} syntax

[07:13:41.0000] <Domenic>
getters and setters are what the semantics actually are

[07:13:54.0000] <annevk>
plus usually an internal slot

[07:14:06.0000] <Domenic>
attributes are not a real thing; they make people think you're talking about HTML attributes (especially because people usually read their first IDL in the HTML spec)

[07:14:32.0000] <smaug____>
yes. and readonly attribute is rather nice abstraction of a getter

[07:14:33.0000] <Domenic>
readonly sounds like non-writable which sounds like non-writable data property which is extremely different from a getter

[07:14:46.0000] <smaug____>
that DOM attributes vs webidl attributes case is a real issue

[07:15:59.0000] <smaug____>
having both getter and setter for each attribute in the interface would be rather annoying

[07:16:01.0000] <annevk>
I don't see how attribute is a nice abstraction of something that's actually called a property

[07:16:03.0000] <smaug____>
harder to read

[07:16:11.0000] <annevk>
smaug____: I don't think anyone is suggesting that per se

[07:16:57.0000] <Domenic>
yeah, I like separate getter setter but in the interests of not being annoying something like `get/set foo` seems fine

[07:17:01.0000] <annevk>
smaug____: although that would open up some possibilities such as accepting more in the setter than in the getter which we've had requests for

[07:18:35.0000] <smaug____>
attribute hides the fact that the thing is implemented using a getter/setter

[07:18:50.0000] <smaug____>
since most cases one shouldn't need to think about that it is a getter or setter

[07:18:56.0000] <gsnedders>
yeah, I find the fact that readonly attributes are actually getter/setter pairs a bit confusing

[07:19:18.0000] <smaug____>
(readonly attributes are getters)

[07:19:32.0000] <gsnedders>
(pedant :))

[07:20:11.0000] <annevk>
smaug____: but if you come from a JavaScript background the term attribute makes no sense and gives you no idea what's going on

[07:20:18.0000] <annevk>
smaug____: that seems way more important

[07:20:54.0000] <smaug____>
depends on the audience

[07:21:45.0000] <smaug____>
if you're some random js dev, you may not really use getters/setters explictly

[07:22:06.0000] <annevk>
but you will know about properties

[07:22:14.0000] <annevk>
and that there are such things as getters and setters

[07:22:29.0000] <annevk>
you won't have a clue about attributes other than DOM attributes which are completely different

[07:23:54.0000] <smaug____>
/me is not sure all the devs even know about getters/setters

[07:24:11.0000] <smaug____>
given all the really old documentation etc

[07:24:22.0000] <gsnedders>
I'm just weird coming from the JS engine side nowadays :)

[07:33:22.0000] <JakeA>
annevk: in the env settings object, there's no document for (shared)workers right?

[07:34:30.0000] <annevk>
JakeA: yup

[07:35:18.0000] <annevk>
Domenic: how is it explained in "web implemented in JS" idea how a random object, say <a>, gets to the internal slot of some other object, say document's base URL?

[07:36:07.0000] <JakeA>
annevk: so I'd have to use the creation url for workers. CurrentURL would make that easier. Will suggest that

[07:43:28.0000] <Domenic>
annevk: shared access to the weak map. (Can gist up an example if you like.)

[07:44:49.0000] <annevk>
Domenic: access is given upon creation?

[07:45:13.0000] <Domenic>
Or just using a shared scope

[07:45:19.0000] <annevk>
fair I guess

[08:08:37.0000] <JakeA>
annevk: if memory serves, you were keen on having ServiceWorkerClient represent window clients, and have SharedWorker / Worker represent worker clients. Have I got that right? I'm kinda uncomfortable returning a mix of objects from clients.getAll()

[08:13:05.0000] <JakeA>
Could have different APIs to get each type, or a type param on getAll. Or stick with ServiceWorkerClient that represents all (and provide values for visibility & focus state)

[09:21:37.0000] <annevk>
JakeA: so I was wrong about that

[09:22:17.0000] <annevk>
JakeA: APIs should be similar for each

[09:22:35.0000] <annevk>
JakeA: might want some things different for window vs worker still I suppose

[09:35:18.0000] <JakeA>
annevk: need a type property I think. Also, new ServiceWorkerClient doesn't make sense anymore as a way to create a window. clients.openWindow(url) feels better, but I guess there'll be a "but constructors" argument to have

[09:35:56.0000] <annevk>
JakeA: so is ServiceWorkerClient exposed outside service workers as well?

[09:36:06.0000] <annevk>
JakeA: otherwise we could have Client, WindowClient, WorkerClient

[09:36:28.0000] <annevk>
and not support new WorkerClient I suppose

[09:37:20.0000] <annevk>
I like how mounir announced Google left sysapps after trying to convince me for a while this was the way to go

[09:37:34.0000] <JakeA>
annevk: works for me.

[09:38:23.0000] <annevk>
JakeA: I've lost track a bit of what objects we have where unfortunately, but if this sounds reasonable, great

[09:38:31.0000] <annevk>
JakeA: I should probably read through it again

[09:38:46.0000] <annevk>
JakeA: perhaps we should make a diagram that explains the relationship between the objects

[10:39:54.0000] <hallvors>
annevk: have a moment? I'm where the webcompat team tends to sit (F room)

[10:40:24.0000] <annevk>
hallvors: yeah

[11:05:00.0000] <mounir>
annevk: things are never black or white

[11:05:26.0000] <annevk>
mounir: rainbows

[11:06:21.0000] <jgraham>
Black holes?

[11:06:25.0000] <annevk>
ClampBetween(0, 255) Domenic, that's called ToUint8

[11:07:42.0000] <rubys>
the sun is white: http://blog.chron.com/sciguy/2013/12/what-color-is-the-sun/#28933101=0

[11:08:06.0000] <TabAtkins>
rubys: That's not what my crayon drawings say.

[11:09:20.0000] <rubys>
TabAtkins: tl;dr: the sun is yellow because the sky is blue.

[11:09:36.0000] <TabAtkins>
Yeah, I know. ^_^

[11:10:14.0000] <TabAtkins>
A combination of blue light getting scattered across the sky, so the leftover is more yellowish, and the opponency of our visual pathway contrasting blue against yellow.

[11:21:28.0000] <Domenic>
annevk: unclear whether it's EnsureBetween or ClampBetween IMO.

[11:21:47.0000] <Domenic>
annevk: also unclear why you would use ClampBetween(0, 255) more often than ClampBetween(0, 100) or whatever

[11:25:43.0000] <Domenic>
annevk: exciting to see element.closest() starting to ship. It's almost as if we can actually make the DOM better by adding things to standards :)

[11:26:42.0000] <annevk>
Domenic: but are they stable?!

[11:26:55.0000] <TabAtkins>
Domenic: Because clamping behavior in APIs is almost always dictated by the size of the int used to store it.

[11:27:14.0000] <TabAtkins>
Also: ClampBetween(0, 65536) is obnoxious. ^_^

[11:27:25.0000] <TabAtkins>
65535, rather.

[11:27:28.0000] <TabAtkins>
See?!?

[11:27:31.0000] <Domenic>
TabAtkins: but how often do you actually want to clamp on the web

[11:27:44.0000] <TabAtkins>
Whenever you're dealing with bytes.

[11:27:44.0000] <Domenic>
TabAtkins: colors, *maybe*, otherwise unsure when

[11:28:10.0000] <Domenic>
how many APIs actually deal with bytes instead of just dealing with arraybuffers

[11:28:26.0000] <Domenic>
annevk: made it to Chrome beta... only 6 weeks left

[11:28:43.0000] <annevk>
Domenic: it was a lame joke about the standard

[11:28:55.0000] <Domenic>
annevk: oh lollll

[11:32:14.0000] <Domenic>
so for longdesc, is it productive to just vote against publishing and say "we agree with the previous formal objection"? or is that a lost cause?

[11:32:48.0000] <TabAtkins>
Continue doing minimal-effort objecting.

[11:33:10.0000] <TabAtkins>
I mean, yes, it's a lost cause, but we can at least put forth a modicum of effort showing that everything is bullshit forever.

[11:33:43.0000] <Domenic>
also lol apparently browser extensions count for the purposes of interoperable implementations https://w3c.github.io/test-results/html-longdesc/cr-report.html

[11:34:27.0000] <Domenic>
*also* apparently my TAG status lets me fill out the voting form despite not being the AC rep... I'll quietly close that window I guess and talk to my AC rep.

[11:35:19.0000] <Domenic>
(Oh nevermind: all the form field controls are clickable but there's a "You are allowed to read the questionnaire, but you are not authorized to answer with your current credentials!" at the top of the page)

[11:50:34.0000] <annevk>
imagine if all that time put into longdesc and alt was put into making things accessible

[11:51:45.0000] <tantek>
annevk - have you spoke with dbolter about that while you're in the same room?

[11:52:11.0000] <tantek>
/me looks over and sees them at the same table, with only marcosc between them!

[11:56:50.0000] <annevk>
(we talked about getComputedRole())

[13:01:59.0000] <tnelis>
hello, i'm seeking help clarifying the removal of a paragraph in XHR, is this the right place to ask?

[13:03:37.0000] <caitp>
here or bugmail is proabably a good place for it

[13:05:03.0000] <tnelis>
alright let's try; xhr 4.5.6 (the send method), the following paragraph is in f18fc52 and removed in c99000a

[13:05:06.0000] <tnelis>
"For 304 Not Modified responses that are a result of a user agent generated conditional request the user agent must act as if the server gave a 200 OK response with the appropriate content. The user agent must allow author request headers to override automatic cache validation (e.g. If-None-Match or If-Modified-Since), in which case 304 Not Modified responses must be passed through. [HTTP]"

[13:06:34.0000] <tnelis>
i essentially question the intent behind the removal and wonder if this behavior can still be relied on (i would assume so, there'd be some serious breakage otherwise)

[13:07:34.0000] <tnelis>
(also note that it's still in the w3 draft)

[13:20:05.0000] <tnelis>
nvm, found it reworded, just had to look closer

[13:22:40.0000] <annevk>
zcorpan: "If the element does not have a srcset attribute specified and it does not have a parent or it has a parent but it is not a picture element, and it has a src attribute specified and its value is not the empty string, let selected source be the value of the element's src attribute, and selected pixel density be 1.0." is really hard to parse

[13:23:16.0000] <tantek>
that's quite a long sentence

[13:27:49.0000] <annevk>
following that algorithm :-(


2014-12-05
[16:55:28.0000] <SimonSapin>
hsivonen: Are you in Portland this week?

[17:08:08.0000] <jgraham>
SimonSapin: I'm pretty sure he isn't

[17:44:13.0000] <smaug____>
SimonSapin: he is not

[18:19:39.0000] <SimonSapin>
thanks

[23:56:56.0000] <hsivonen>
SimonSapin: I'm not in Portland. :-(

[23:59:15.0000] <SimonSapin>
hsivonen: Ok. We have a meeting tomorrow with the Servo and JS teams, one of the topics is string representation. I thought you might be interested.

[00:11:43.0000] <hsivonen>
SimonSapin: I'd be interested, yeah, but can't attend since I'm not there.

[00:11:48.0000] <hsivonen>
SimonSapin: thanks

[05:05:00.0000] <Ms2ger>
zcorpan, ta

[05:06:56.0000] <zcorpan>
Ms2ger: welcome

[06:09:16.0000] <MikeSmith>
botie: inform tantek I updated the Web Notification WG charter http://www.w3.org/2010/web-notifications/ The group isn't closed. The current chair is Jon Lee from Apple.

[06:09:17.0000] <botie>
will do

[06:09:46.0000] <zcorpan>
botie: sup

[06:09:46.0000] <botie>
zcorpan: what?

[09:03:54.0000] <botie>
tantek, at 2014-12-05 14:09 UTC, MikeSmith said: I updated the Web Notification WG charter http://www.w3.org/2010/web-notifications/ The group isn't closed. The current chair is Jon Lee from Apple.

[09:04:41.0000] <tantek>
the W3C's bot is in this channel? whoa.

[09:04:47.0000] <tantek>
what

[09:06:44.0000] <gsnedders>
pretty sure it's more MikeSmith's than the W3C's.

[09:10:28.0000] <encryptd_fractl>
Domenic: I was wondering is this 'reverse destructoring' is a part of es6, or a traceur-only thing?  Thanks https://github.com/whatwg/streams/blob/b8edaac6391c49fbfa7b57123ba5786df6d0d77d/reference-implementation/lib/experimental/readable-byte-stream.js#L176

[09:12:08.0000] <arv>
encryptd_fractl: That is property short hand. part of es6: http://people.mozilla.org/~jorendorff/es6-draft.html#sec-object-initializer

[09:13:57.0000] <encryptd_fractl>
Ah thanks, easier to find docs when you know what its called :)

[09:14:29.0000] <encryptd_fractl>
yea I liked that feature in coffeescript.  Must not be implemented in the version of esnext I'm using

[09:31:29.0000] <WesleyCrushed>
guys, can someone give a proper/canonical answer to this http://stackoverflow.com/questions/26292408 ? i know this is not the best place where to ask, but maybe there's someone here [really] involved with CSS. ty :P

[12:19:37.0000] <terinjokes>
can we get `text-justify` standardized?

[12:21:14.0000] <terinjokes>
`text-align: justify` just looks terrible

[12:51:56.0000] <astearns_>
terinjokes: is your justified text not hyphenated? that's usually the culprit

[13:00:43.0000] <Domenic>
encryptd_fractl: esnext is not very complete; I trust Traceur much more :)

[13:33:04.0000] <terinjokes>
astearns_: i'm used to the TeX algorithm

[13:34:36.0000] <astearns_>
terinjokes: multi-line breaking algos are much better. but most people

[13:34:53.0000] <astearns_>
's complaints about web justification go away once text is hyphenated

[13:35:22.0000] <astearns_>
we certainly can do better. But first Chrome has to hyphenate :)

[14:12:25.0000] <Domenic>
There's still no way to independently apply multiple CSS transforms right?

[14:52:52.0000] <WesleyCrushed>
Domenic: details?

[14:53:18.0000] <Domenic>
WesleyCrushed: e.g. apply scale from CSS and translate from script or similar

[14:55:16.0000] <WesleyCrushed>
someone (and also me) suggested "slots" as in, for example: background-image(3):url('foo.png'); which is the same of writing background-image:none, none, none, url('foo.png')

[14:55:50.0000] <WesleyCrushed>
from dom would be say, element.style.backgroundImage[3] = "url('foo.png')";

[14:56:16.0000] <WesleyCrushed>
the same would apply also to transforms, transitions and all similar properties

[14:57:38.0000] <Domenic>
i'm really asking as to whether any such ideas have been implemented yet, not proposed :P

[14:57:43.0000] <WesleyCrushed>
Domenic read http://fremycompany.com/TR/2012/ED-css-list-properties/ and http://www.xanthir.com/blog/b4KZ0/

[14:57:54.0000] <WesleyCrushed>
me too :P

[14:57:57.0000] <Domenic>
yeah, seen 'em

[14:59:23.0000] <WesleyCrushed>
that's definitely a thing to discuss asap

[15:19:08.0000] <astearns_>
Domenic: there are "simple" transforms proposed (AFAIK not implemented) that would let you set separate translate, rotate and scale along with the current transform property

[15:19:26.0000] <Domenic>
astearns_: yeah, saw those too... would be pretty sweet.

[15:47:13.0000] <iamstef>
Domenic: esnext is also pretty slow

[15:47:24.0000] <iamstef>
because recast is slow

[15:47:29.0000] <Domenic>
yepyep

[15:47:58.0000] <iamstef>
esnext es6-module-transpiler bundle format is whats keeping me around atm

[15:48:12.0000] <iamstef>
as is eventualbuddha being a solid guy

[15:48:16.0000] <iamstef>
but i am concerned about recast

[15:48:32.0000] <terinjokes>
does the common-interop export stuff in 6to5 not work?

[15:48:40.0000] <terinjokes>
not work for you*

[15:48:41.0000] <iamstef>
re: perf and the lack of movement on that front

[15:49:23.0000] <iamstef>
terinjokes: ?

[15:49:53.0000] <terinjokes>
https://github.com/6to5/6to5/blob/v1.14.6/doc/modules.md#common-interop

[15:50:07.0000] <iamstef>
im unsure what the context of your question is

[15:50:08.0000] <terinjokes>
i might be misunderstanding the convo though, if so ignore me

[15:50:47.0000] <iamstef>
the bundle format essentially aggressively re-writes and re-orders content to remove the need for a costly loader

[15:50:55.0000] <iamstef>
i dont think this is related to the interopt story

[15:52:41.0000] <iamstef>
lets see what happens but if in the next while no movement happens on the perf front i may re-consider a different solution

[15:53:45.0000] <iamstef>
i dont have the bandwidth to work on that

[15:54:10.0000] <iamstef>
Domenic: any ideas of the traceur guys would consider something like the bundle format?

[15:54:30.0000] <Domenic>
iamstef: yeah it's been on the to-do list for a while

[15:54:52.0000] <Domenic>
arv ^

[15:55:09.0000] <iamstef>
ya we all need to actually grab beer or something soon

[15:55:19.0000] <iamstef>
we keep trying to do something but noone is in town at the same time

[15:55:27.0000] <iamstef>
the ny chrome team that is


2014-12-06
[16:35:09.0000] <MikeSmith>
http://www.w3.org/2014/automotive/data_spec.html

[16:35:18.0000] <MikeSmith>
/me peruses

[16:36:56.0000] <MikeSmith>
Domenic: the TAG might want to start looking at http://www.w3.org/2014/automotive/data_spec.html

[16:37:23.0000] <Domenic>
hmmm

[16:41:07.0000] <MikeSmith>
yeah, offered without comment

[16:42:35.0000] <MikeSmith>
but in the context of the fact there's a related draft charter for a WG (not just CG) http://www.w3.org/2014/automotive/charter.html

[16:44:54.0000] <Domenic>
i mean, having a hard time seeing browsers implement this, which drastically decreases my cares

[16:45:59.0000] <MikeSmith>
at this point, just that alone would be constructive feedback

[16:47:17.0000] <Domenic>
hmm, noted

[16:47:29.0000] <MikeSmith>
though I can imagine one or more vendors that seemed to be interested in this stuff and that have engineers hacking on blink/webkit forks might end up hacking this into a fork that they actually shiop from. wouldn't be the first time

[16:47:46.0000] <MikeSmith>
*seem to be

[16:47:53.0000] <Domenic>
world wide "web" consortium, eh? ;)

[16:48:46.0000] <MikeSmith>
for some definition of "web"

[16:49:45.0000] <MikeSmith>
btw somewhat related I like JakeA's "URL-driven Web" better than "drive-by Web" that others on the chrome team were tossing around in the past

[16:49:57.0000] <MikeSmith>
where both are used just to mean the actual Web

[16:50:19.0000] <MikeSmith>
as opposed to other things that aren't really the Web at all

[16:51:12.0000] <MikeSmith>
context: https://twitter.com/jaffathecake/status/540420208960483330

[23:36:53.0000] <JakeA>
MikeSmith: although I guess packaged web apps still have URLs, but they're more of by-product. I just really didn't want to say "drive-by web"

[01:23:32.0000] <MikeSmith>
JakeA: yeah understood

[01:24:33.0000] <MikeSmith>
JakeA: and btw we need books to be on the Web too, with URLs, and readable in browsers

[01:25:30.0000] <MikeSmith>
let's make 2015 the year that happens too

[01:25:36.0000] <MikeSmith>
no more music by the suckers

[01:25:37.0000] <JakeA>
MikeSmith: where does html + print stylesheets fall short in that regard?

[01:26:00.0000] <wilhelm_>
JakeA: Paging. Columns. Some common design patterns.

[01:26:10.0000] <MikeSmith>
yeah

[01:26:17.0000] <MikeSmith>
the paged-media stuff

[01:27:39.0000] <MikeSmith>
JakeA: but it's not so much that we're falling shor technically there, it's the the whole ebook publishing industry is currently structured around forcing users into user-hostile off-Web "reading system" applications (e.g., with no ability to copy text)

[01:46:43.0000] <JakeA>
True

[01:47:04.0000] <JakeA>
wilhelm_: CSS has paging and columns right?

[06:17:07.0000] <annevk>
MikeSmith: how is URL-driven web different from web?

[06:17:51.0000] <annevk>
Ah okay, used as pleonasm


2014-12-07
[18:46:32.0000] <wilhelm_>
JakeA: Yes, but the specs are mostly fiction still.

[19:54:27.0000] <MikeSmith>
I think Dave Cramer has been working on making specs for these features in this area that are less fictional

[19:55:24.0000] <MikeSmith>
TIL pleonasm

[20:16:35.0000] <MikeSmith>
http://cube-drone.com/2014_11_16-99_Ingenuity.html

[20:33:43.0000] <MikeSmith>
botie, specs?

[20:33:43.0000] <botie>
i haven't a clue, mikesmith

[20:37:34.0000] <Hixie>
join the club, botie, join the club

[20:44:15.0000] <MikeSmith>
heh

[07:50:12.0000] <GPHemsley>
jgraham: I'm still active on mimesniff (for certain definitions of that word), FWIW.


2014-12-08
[23:57:47.0000] <hgl>
is it ok to ask es6 questions here?

[01:11:12.0000] <MikeSmith>
hgl: sure, some tc39 members are around here at times. as well as implementors some

[01:14:01.0000] <hgl>
@MikeSmith, thank you. after some googling. i think i got the answer. but will ask here next time i got a new question. :)

[04:47:37.0000] <annevk>
mathiasbynens: note that https://tools.ietf.org/html/rfc3629#section-4 does not allow six bytes either

[04:48:02.0000] <mathiasbynens>
annevk: hah, may want to leave that as a comment :)

[04:49:12.0000] <annevk>
sure

[05:42:33.0000] <arv>
iamstef: I'm interested. I think Guy Bedford has something that works using Traceur too.

[06:10:48.0000] <allam2002>
hii everyone

[06:11:54.0000] <allam2002>
i have a problem and i need help can anyone help me??

[06:13:07.0000] <jgraham>
I would say that strongly depends on the nature of your problem.

[06:14:06.0000] <allam2002>
i got an error on my website that say : Bad value uri-translation for attribute name on element meta: Keyword uri-translation is not registered

[06:15:27.0000] <jgraham>
Ah, then yes we can help

[06:15:55.0000] <allam2002>
and when i tried to register on WHATWG wiki they told me to ask one one of these permanent autoconfirmed members

[06:16:25.0000] <jgraham>
MikeSmith might be a good person to look at this if he's awake

[06:17:46.0000] <allam2002>
this element meta belong to gtranslate website an online traslator

[06:18:51.0000] <jgraham>
Is there a page somewhere describing how this meta value works?

[06:20:36.0000] <allam2002>
sorry but i asked them in there fourm site and they replyed that i have to register it myself

[06:21:38.0000] <allam2002>
and i really have no experience in such  thing

[06:22:24.0000] <caitp>
http://gtranslate.net/features this thing?

[06:22:35.0000] <allam2002>
yes

[06:23:40.0000] <allam2002>
they gave me a meta line to put in my website which include this element

[06:23:47.0000] <jgraham>
So how do you know how to write this kind of element?

[06:24:01.0000] <jgraham>
Oh they provide one-off examples? There isn't any documentation?

[06:24:33.0000] <jgraham>
Also I don't really understand what's consuming this

[06:25:01.0000] <allam2002>
To enable URL translation feature for your website you need to add the following code into the head tag of your pages.

[06:25:02.0000] <allam2002>
<meta name="uri-translation" content="on" />

[06:26:50.0000] <allam2002>
that is why i need help from a pro like you

[06:27:09.0000] <caitp>
it looks like you register your site with them, they host a database of translated text and crowdsource the translations using one of those cheap labor services

[06:27:24.0000] <caitp>
and there's probably some code on the client which requests the translated text

[06:27:51.0000] <allam2002>
that is right

[06:29:10.0000] <allam2002>
they translate my website as subdomain

[06:30:23.0000] <allam2002>
http://gtranslate.net/docs/58-gtranslate-enterprise-documentation

[06:35:55.0000] <zcorpan_>
hsivonen: SELECT url,body FROM [httparchive:runs.2014_08_15_requests_body] WHERE REGEXP_MATCH(LOWER(mimeType), r"(text/html|application/xhtml\+xml);\s*charset\s*=\s*[\"']?utf-16") gives zero matches

[06:36:11.0000] <zcorpan_>
hsivonen: http://bigqueri.es/t/analyzing-html-css-and-javascript-response-bodies/442

[06:36:37.0000] <zcorpan_>
hsivonen: webdevdata also zero

[06:38:58.0000] <allam2002>
my website is : emperorsource.com

[06:53:37.0000] <annevk>
allam2002: I can get you an account on the WHATWG Wiki so you can register this <meta> value

[06:54:00.0000] <annevk>
allam2002: however, ideally that service registers the values they rely upon themselves, as well as the documentation they have for them

[06:54:16.0000] <annevk>
allam2002: if you still want an account I need a desired username and email address

[06:54:53.0000] <allam2002>
username : allam2002

[06:55:04.0000] <allam2002>
email : allam2002⊙gc

[06:55:57.0000] <allam2002>
thank you very much annevk

[06:56:16.0000] <annevk>
allam2002: you should have mail

[06:57:02.0000] <allam2002>
i did thank you

[06:57:27.0000] <allam2002>
i will try to do it my self

[08:04:43.0000] <zcorpan_>
Hixie: the spec's IDLs don't have links to the obsolete section. known?

[08:14:32.0000] <annevk>
JakeA: yeah, as I said in that bug, either SVG or DOM should change

[08:15:05.0000] <annevk>
JakeA: we haven't really moved much stuff to DOM yet, e.g. id="" and class="" are still local in most implementations I think

[08:16:00.0000] <JakeA>
annevk: for some reason I thought SVG extended HTMLElement when it was inlined in HTML, but yeah that wouldn't work

[08:17:00.0000] <annevk>
That sounds pretty magical

[08:17:15.0000] <JakeA>
yeah, doesn't make sense

[09:11:23.0000] <iamstef>
arv: cool, hopefully later this month or early in the near year i will be working to upgrade our module transpiler. Lets see if recast as made any improvements.

[10:26:43.0000] <Hixie>
zcorpan: odd...

[10:32:38.0000] <hsivonen>
zcorpan: I guess we should have some telemetry for UTF-16. Lore has it that UTF-16 exists in Japan.

[10:33:43.0000] <zcorpan>
speaking of stats, there is surprisingly much of <menu type=context> in httparchive

[10:33:54.0000] <Hixie>
zcorpan: wait, the IDL thing works for me

[10:34:00.0000] <Hixie>
zcorpan: can you be more specific?

[10:34:18.0000] <zcorpan>
Hixie: https://html.spec.whatwg.org/multipage/semantics.html#the-html-element

[10:34:55.0000] <Hixie>
oh interesting

[10:35:00.0000] <zcorpan>
Hixie: i see it works on single-page

[10:35:01.0000] <Hixie>
seems it only works in single-page mode

[10:35:06.0000] <Hixie>
odd

[10:35:12.0000] <Hixie>
file a bug?

[10:35:18.0000] <zcorpan>
ok

[10:35:24.0000] <Hixie>
thanks

[10:36:06.0000] <zcorpan>
https://www.w3.org/Bugs/Public/show_bug.cgi?id=27539

[11:01:54.0000] <Hixie>
anyone here understand Web Animation well enough to explain how "pause" works?

[11:06:39.0000] <JonathanNeal>
Does someone here understand the color transform matrix? I would love to understand it better.

[11:07:18.0000] <JonathanNeal>
e.g. http://www.svgbasics.com/filters4.html

[11:23:24.0000] <ondras>
well apparently you use the color matrix to perform certain color operations

[11:23:42.0000] <ondras>
those that can be represented as linear combination of color channels + constant offset

[11:24:14.0000] <ondras>
so you have a color matrix "desaturate"; by multiplying your color (expressed as a 4-item vector) with this matrix, you create a new - desaturated - color

[11:24:37.0000] <ondras>
I am not sure, though, how can one characterize the set of (color) operations that can be expressed in this way.

[11:28:10.0000] <JonathanNeal>
ondras: and I’ve seen that color transform matrix can be used to grayscale an image, but I’d love to know how they could be used to tint an image (like sepia, but with another color)

[11:31:09.0000] <ondras>
JonathanNeal: the matrix modifies each color channel by an arbitrary amount of other channels and a constant

[11:33:06.0000] <JonathanNeal>
So, if I wanted to have black be black, white be white, and everything inbetween be the grascale equivelent to some color - would i only modify columns of colors or rows of colors or both?

[11:35:57.0000] <ondras>
I am not sure. If you want black to stay black, the constant offset must by 0 (so the last column is all zeros)

[11:36:50.0000] <ondras>
but I would say that it is achievable by picking proper values, probably for all 16 coefficients

[11:38:24.0000] <JonathanNeal>
ondras: how do i figure out a coefficient?

[11:41:41.0000] <JonathanNeal>
@ondras and what is the last column. It goes Red, Green, Blue, Alpha, then … ?

[11:42:12.0000] <zcorpan>
who owns whattf.org?

[11:42:26.0000] <ondras>
JonathanNeal: the last column is the constant offset

[11:42:49.0000] <ondras>
JonathanNeal: so basically every row (there are 4 of them) tells you how to compute a channel

[11:42:54.0000] <ondras>
first row computes red

[11:42:56.0000] <ondras>
second green

[11:42:56.0000] <ondras>
etc

[11:43:32.0000] <ondras>
so the first row used for red computation

[11:43:35.0000] <ondras>
has five coefficients

[11:43:47.0000] <ondras>
you multiply r,g,b,a with four of them and add the fifth

[11:43:56.0000] <ondras>
(the fifth one is zero in your case)

[11:45:00.0000] <JonathanNeal>
so, the columns don’t actually represent r, g, b, a, and something else, ondras

[11:45:14.0000] <JonathanNeal>
and the rows DO represent r, g, b, a, though, right?

[11:45:40.0000] <caitp>
zcorpan: eetemad⊙pe, based on dns records?

[11:46:00.0000] <zcorpan>
caitp: yeah

[11:46:18.0000] <zcorpan>
pinged fantasai in #css

[11:46:19.0000] <ondras>
JonathanNeal: they represent coefficients. existing r,g,b,a values are multiplied with them

[11:46:24.0000] <ondras>
to produce new r,g,b,a vlaues

[11:46:26.0000] <ondras>
*values

[11:46:45.0000] <caitp>
it is a pretty good domain name though

[11:46:59.0000] <ondras>
JonathanNeal: http://stackoverflow.com/questions/21977929/match-colors-in-fecolormatrix-filter

[11:47:05.0000] <ondras>
this might provide some insight

[11:54:10.0000] <JonathanNeal>
@ondras thanks, now i have a general idea of what that means.

[11:55:54.0000] <rubys>
annevk: there has been a suggestion to capture some of the rationale for the URL Standard in the form on an IETF Internet Draft "Problem Statement".  Is this something you would be interested in contributing to?  See: http://lists.w3.org/Archives/Public/public-ietf-w3c/2014Dec/0025.html

[11:58:57.0000] <JonathanNeal>
@ondras how could anyone ever know how to make an image grayscale without already knowing the color there?

[12:02:28.0000] <ondras>
JonathanNeal: well one of the most straightforward ways of creating grayscale is doing (r+g+b)/3

[12:03:03.0000] <JonathanNeal>
but if you don’t know the rgba of the pixel, how would you know?

[12:03:04.0000] <ondras>
JonathanNeal: so basically when you put .333 as coefficients in the upper-left 3x3 submatrix

[12:03:13.0000] <ondras>
you know the rgba of the pixel.

[12:03:30.0000] <ondras>
applying the matrix means "take rgba of a pixel, multiply it with a matrix, you now have rgba of the resulting pixel"

[12:05:02.0000] <JonathanNeal>
okay, so if my color was red, the matrix would apply .333 * (1), .333 * (0), *0.333 * (0)?

[12:05:47.0000] <ondras>
yes

[12:05:57.0000] <ondras>
resulting red channel will be .333

[12:05:58.0000] <JonathanNeal>
Ah, and that would be for the row of Red, so the resulting color for red would 0.333

[12:06:04.0000] <ondras>
right.

[12:06:12.0000] <ondras>
the same would be for green and blue rows as well

[12:06:27.0000] <ondras>
=> result color is .33,.33,.33 => gray

[12:06:32.0000] <JonathanNeal>
/me figures out yellow, just to be sure.

[12:07:03.0000] <ondras>
yellow would be .66,.66,.66 - twice the lighness

[12:07:09.0000] <ondras>
*lightness

[12:09:27.0000] <JonathanNeal>
Is that what the fifth column represents? Lightness?

[12:09:48.0000] <ondras>
no

[12:10:06.0000] <ondras>
the fifth column represents constant shift, independently on current values

[12:10:19.0000] <JonathanNeal>
got it

[12:10:22.0000] <ondras>
so for instance, a matrix with all zeroes but ones in the last column

[12:10:25.0000] <ondras>
would create white

[12:10:29.0000] <ondras>
from any input color

[12:11:14.0000] <JonathanNeal>
Right.

[12:11:35.0000] <JonathanNeal>
So, if I make the alpha column 0 every time, why isn’t it black?

[12:12:14.0000] <JonathanNeal>
i guess it doesn’t matter, as long as the alpha / alpha cell is 1?

[12:13:12.0000] <ondras>
I am not sure about the alpha values. I suppose 1 means fully transparent?

[12:13:40.0000] <JonathanNeal>
@ondras so if i want something like greyscale, but more like colorscale, would you help me understand what that means I need to do? I might get it better this time.

[12:13:44.0000] <ondras>
alpha column 0 effecticely means "do not adjust color channels by alpha channel"

[12:16:00.0000] <ondras>
JonathanNeal: as far as "colorscale" goes, my highly experimental guess would be "take the target color, stick it into the last column multiplied with 0.5; put .1667 into 3x3 upper left submatrix"

[12:16:03.0000] <ondras>
probably.

[12:16:10.0000] <JonathanNeal>
What would happen if I made all the colors alpha 1 instead of 0?

[12:16:23.0000] <TabAtkins>
Alpha 0 is fully transparent. Alpha 1 is fully opaque.

[12:16:24.0000] <ondras>
I really have no idea. I know how colors work and I know how matrix multiplication works, but this requires some experience and imagination.

[12:16:36.0000] <ondras>
thanks

[12:17:11.0000] <ondras>
JonathanNeal: putting anything else than 0 into the alpha column (with the exception of the alpha row) has little sense in your case

[12:17:17.0000] <TabAtkins>
JonathanNeal: Note that taking the sum of the channels multiplied by 1/3 produces *a* grayscale, but not a good one.  It doesn't match up well to our vision's notion of brightness.

[12:17:20.0000] <JonathanNeal>
@TabAtkins but if you produce a red with 1 (red) 0 (green) 0 (blue) 0 (alpha) 0 (shift) the color still shows up.

[12:17:23.0000] <ondras>
you probably do not want to adjust your color channels based on the alpha

[12:17:50.0000] <TabAtkins>
JonathanNeal: point me to the filter?

[12:18:05.0000] <ondras>
JonathanNeal: you only described the first row coefficients; those influence the target red channel

[12:18:07.0000] <JonathanNeal>
@TabAtkins is that why I see a pattern online a lot that goes something like .393, .769, .189, etc?

[12:18:16.0000] <TabAtkins>
JonathanNeal: Yup, exactly.

[12:18:22.0000] <ondras>
JonathanNeal: if you want to tackle alpha, you want to adjust fourth row.

[12:18:23.0000] <TabAtkins>
Most of the brightness of a color comes from the green channel.

[12:18:29.0000] <ondras>
right, we are more sensitive to green

[12:18:37.0000] <ondras>
you just want those numbers to sum up to 1

[12:19:09.0000] <ondras>
on the other hand, one way of desaturating is (max(r,g,b)+min(r,g,b))/2

[12:19:17.0000] <ondras>
this is not achievable using the matrix

[12:19:34.0000] <JonathanNeal>
okay, that’s really cool.

[12:19:48.0000] <ondras>
relevant: http://docs.gimp.org/en/gimp-tool-desaturate.html

[12:19:50.0000] <JonathanNeal>
Both what you ondras and TabAtkins have said. It’s really awesome.

[12:20:52.0000] <TabAtkins>
ondras: I mean, if you're doing it right you don't work in RGB space at all; it's a terrible colorspace with no redeeming qualities besides "it's what (some) monitors use, if you don't have a wide-gamut monitor or a 4-color monitor or whatever".

[12:21:06.0000] <TabAtkins>
You should be doing all transformations in Lab space, which actually corresponds to human vision.

[12:21:15.0000] <TabAtkins>
And then converting back to RGB for display purposes only.

[12:21:21.0000] <TabAtkins>
But that's not doable with a filter. ^_^

[12:21:27.0000] <ondras>
:)

[12:21:29.0000] <JonathanNeal>
@TabAtkins can you do that with SVGs?

[12:21:52.0000] <TabAtkins>
JonathanNeal: Nope. You gotta do it yourself in script.

[12:21:53.0000] <Philip`_>
You can convert to YUV with a matrix, which isn't quite as terrible as RGB :-)

[12:22:46.0000] <ondras>
never the less, I am actually quite interested in describing those color transformation that can be represented by this particular matrix multiplication (4x5).

[12:22:59.0000] <ondras>
I heard of this for the first time today.

[12:23:42.0000] <ondras>
game idea - replace all .xyzw in shader code with .rgba and vice versa

[12:24:57.0000] <Philip`_>
.stpq is more fun

[12:25:05.0000] <JonathanNeal>
@ondras forgetting about the badness of rob, you said i would want to use only the shift column?

[12:25:15.0000] <JonathanNeal>
*badness of rgb, blasted auto-correct.

[12:25:19.0000] <JonathanNeal>
*apologies to rob

[12:25:25.0000] <ondras>
JonathanNeal: I am not sure; where?

[12:25:57.0000] <TabAtkins>
Philip`_: YUV is still based on particular colorants, so you can't do arbitrary work on it and expect consistent results across displays.  But it is indeed somewhat better shaped, particularly since it has an accurate lightness channel.

[12:26:06.0000] <JonathanNeal>
when colorscaling an image, i would try to adjust which columns?

[12:27:15.0000] <ondras>
JonathanNeal: the upperleft 3x3 (fill with .167) and the last column (fill with targetcolor/2)

[12:27:17.0000] <ondras>
probably.

[12:27:20.0000] <Philip`_>
/me has been doing a lot of work around cameras, where almost everything is YUV

[12:27:24.0000] <ondras>
I am not an expert in this area :)

[12:27:38.0000] <Philip`_>
(except for the bits that are Bayer RGB, which is much nastier)

[12:28:47.0000] <Ms2ger>
Philip`_, want to do work around canvas? ;)

[12:29:03.0000] <Philip`_>
Ms2ger: Nah, canvas is so 2006

[12:32:25.0000] <ondras>
so 2006, yet still too sexy for my exployer, who needs to support IE8 .-)

[12:32:57.0000] <caitp>
you know

[12:33:07.0000] <caitp>
if school districts in north america had a bit more money

[12:33:13.0000] <caitp>
smh :c

[12:34:06.0000] <caitp>
school districts <and other government funded enterprises> <and also privately funded enterprises that bought their lasts truckload of dell machines in 2003>

[12:35:22.0000] <ondras>
yeah well this is not related to the u.s. of a.

[12:35:38.0000] <ondras>
we are located in .cz, focusing solely on our people

[12:35:56.0000] <ondras>
our people with windows xp :-)

[12:58:53.0000] <zcorpan>
i don't understand why <menu> has so much adoption

[12:59:24.0000] <boogyman>
/me doesn't understand many things… most of them are not relevant here.

[13:09:57.0000] <annevk>
rubys: probably not (what helps btw is when I'm copied on an email)

[13:11:32.0000] <rubys>
annevk: ok.  I'll keep you posted as this evolves (should it in fact do so, I have my doubts) in case you want to participate.

[13:12:38.0000] <annevk>
rubys: sgtm, if the IETF wants a problem statement they should look at their (private) email archive; this has been done to death

[13:13:21.0000] <Domenic>
annevk: an expansion of the parenthetical "(E.g. spaces, other "illegal" code points, query encoding, equality, canonicalization, are all concepts not entirely shared, or defined.)" somewhere, e.g. a markdown document in whatwg/url, would be pretty interesting reading I think

[13:13:56.0000] <Domenic>
although I guess http://w3cmemes.tumblr.com/post/98762809962/hitler-reacts-to-the-html-url-normative-reference gave me some ideas

[13:14:54.0000] <rubys>
on the topic of canonicalization, the URL Standard doesn't define such outright.  And to take one example: given that lowercase percent encoded characters are retained as is, the parsing alone doesn't canonicalize URLs.

[13:15:19.0000] <Domenic>
I think it requires parsing + serializing?

[13:15:21.0000] <annevk>
rubys: it does canonicalize, just a different kind

[13:15:54.0000] <annevk>
rubys: whether there should be some form of normalization exposed browsers don't perform right now is a distinct question

[13:16:22.0000] <rubys>
annevk: are  http://example.com/%7Esmith/ http://example.com/%7esmith/ supposed to be treated the same?  See http://intertwingly.net/blog/2004/07/31/URI-Equivalence from over a decade ago.

[13:16:31.0000] <annevk>
rubys: nope

[13:16:54.0000] <annevk>
rubys: see https://annevankesteren.nl/2012/09/url-equivalence where I replied

[13:18:16.0000] <rubys>
never saw that before.  Even though somebody took the time to add a link to that as a comment in my weblog.

[13:19:06.0000] <annevk>
I think I might have tried adding a link back then but your comment system became somewhat hostile over the years...

[13:20:13.0000] <rubys>
annevk: sorry about that.  I really need to rewrite my weblog software.

[13:21:12.0000] <annevk>
maintaining small pieces of software is hard :(

[13:22:05.0000] <rubys>
Meanwhile, I'm having fun rewriting my url-testresults page to have all of the analysis done on the client instead.  This should make it easier to present the information in clearer ways.  I think Domenic will approve. :-)

[13:24:12.0000] <Domenic>
:)

[13:26:47.0000] <annevk>
Domenic: it seems more meaningful to list differences with 3986 once implementations have converged

[13:27:27.0000] <Domenic>
annevk: yeah, very true, just would be interesting to kind of educate people who say "who needs more than 3986" the extent to which 3986 underspecifies

[13:28:27.0000] <rubys>
is is not just underspecifies.  All but the last line of uri/url equivalence is direct from the RFC

[13:28:29.0000] <annevk>
It is not shy on details to my knowledge, it's just not what browsers implement and a significant part of the web uses

[13:29:16.0000] <annevk>
gotta go, nn all

[13:30:10.0000] <rubys>
in any case, I intend to document this rationale.  Even if annevk doesn't directly contribute text, he is an invaluable resource on this subject.  Simply by providing a link (such as what he did a few minutes ago) is very helpful.

[14:00:02.0000] <Hixie>
zcorpan: there's a flaw in your study

[14:00:16.0000] <Hixie>
zcorpan: <menuitem> <div></div> </menuitem> wouldn't get counted

[14:04:44.0000] <zcorpan>
Hixie: that's right. i expected people to just put text there. but i can run a new search if you can come up with a regexp that doesn't match <menuitem></menuitem> <menuitem></menuitem>

[14:05:52.0000] <Hixie>
i think the examples that were brought up all have markup there

[14:06:02.0000] <Hixie>
(i dunno what they wanted to have happen)

[14:06:19.0000] <Hixie>
btw, thanks for doign this

[14:06:22.0000] <Hixie>
it's a huge help

[14:48:01.0000] <zcorpan>
Hixie: np

[14:50:24.0000] <TabAtkins>
zcorpan: Just use a non-greedy search, no?  /<menuitem[^>]*>.*?</menuitem>/

[14:51:42.0000] <zcorpan>
TabAtkins: i guess that could have worked, yeah

[14:53:17.0000] <Domenic>
pretty excited about menus actually being usable

[14:53:27.0000] <Domenic>
years later

[14:53:35.0000] <Domenic>
maybe one day we can hope for sortable tables

[14:53:38.0000] <Domenic>
or date inputs

[14:58:50.0000] <caitp>
are date inputs not currently usable?

[15:01:23.0000] <caitp>
seems pretty good on my iphone

[15:01:30.0000] <caitp>
shrug :<

[15:02:55.0000] <caitp>
i guess it would be easier to find my birthdate if i were born in the 90s, but other than that, it works okay

[15:08:27.0000] <Domenic>
i was thinking desktop :P

[15:08:35.0000] <Domenic>
in particular firefox

[15:08:58.0000] <TabAtkins>
What, where it's not implemented?

[15:10:03.0000] <Domenic>
yep, so you can't reliably use date inputs on a desktop site without a polyfill

[15:10:26.0000] <TabAtkins>
Ugh, the Lollipop date picker is super-jank when you click on a date.

[15:10:35.0000] <TabAtkins>
Like a half-second delay between clicking and it updating.

[15:11:13.0000] <TabAtkins>
How... how does that even happen.

[15:11:25.0000] <TabAtkins>
And day of the week is cut off.

[15:11:27.0000] <TabAtkins>
brb, filing bugs

[15:13:15.0000] <zcorpan>
onclick="setTimeout(update, 250 + (Math.random() * 250))"

[15:13:28.0000] <TabAtkins>
It certainly feels like that.


2014-12-09
[17:30:24.0000] <MikeSmith>
if you use https://bigquery.cloud.google.com/project/httparchive to create a query is there any way to publish a public URL for the results

[17:30:45.0000] <MikeSmith>
I mean using what's documented at http://bigqueri.es/t/analyzing-html-css-and-javascript-response-bodies/442

[17:31:41.0000] <MikeSmith>
and I mean publish other than just by copying them to somewhere else

[17:46:17.0000] <MikeSmith>
ondras: was "exployer" a typo or intentional?

[17:46:30.0000] <MikeSmith>
ondras: either was it's a nice word

[17:49:21.0000] <jamesr__>
wow, a link to /TR/html401/

[17:52:40.0000] <MikeSmith>
jamesr__: hopefully not from implementor citing it at least?

[17:52:52.0000] <jamesr__>
no

[17:52:55.0000] <jamesr__>
maybe a troll

[17:53:54.0000] <MikeSmith>
ah ok

[17:54:55.0000] <MikeSmith>
TabAtkins: what's the proper spec-conformant way to specify vertical layout these days?

[17:55:54.0000] <MikeSmith>
TabAtkins: I put together a simple demo years ago that works as expected in Chrome and Safari but not in Firefox with their experimental vertical-layout support enabled

[17:56:29.0000] <MikeSmith>
when I run it in Firefox I get a warning in the console "Unknown property 'glyph-orientation-vertical'.  Declaration dropped."

[17:58:06.0000] <roc>
writing-mode:vertical-rl

[17:58:06.0000] <MikeSmith>
ah nm I hadn't looked at my source. It's using -webkit-writing-mode

[17:58:16.0000] <MikeSmith>
roc: thanks

[17:58:21.0000] <MikeSmith>
will update it right now

[17:58:31.0000] <MikeSmith>
http://people.w3.org/mike/demo/melos/ is the page

[17:59:59.0000] <roc>
don't forget to fix your -webkit prefixes on transitoin too

[18:00:51.0000] <MikeSmith>
roc: yup  just did that too

[18:01:04.0000] <MikeSmith>
sweet it works in my nightly now

[18:01:49.0000] <MikeSmith>
basically

[18:02:20.0000] <MikeSmith>
(e.g., can't yet scroll horizontally when viewing the vertical version)

[18:03:04.0000] <roc>
hmm

[18:03:49.0000] <MikeSmith>
I guess that may well be something else I'm not specifying correctly per current spec

[18:04:18.0000] <roc>
I reviewed patches to make that work :-)

[18:04:39.0000] <roc>
possibly they haven't landed yet

[18:04:47.0000] <MikeSmith>
ah OK

[18:05:24.0000] <MikeSmith>
roc: or maybe it's landed and I've just not rebuilt since

[18:05:33.0000] <MikeSmith>
I haven't built this week yet

[18:05:40.0000] <MikeSmith>
/me rebuilds now

[18:07:04.0000] <MikeSmith>
ah I see now it seems to be laying it out in multiple vertical units that I have to scroll vertically to see

[18:07:18.0000] <roc>
erm

[18:08:11.0000] <roc>
BTW Chrome doesn't understand unprefixed writing-mode

[18:08:18.0000] <MikeSmith>
hmm yeah but it's also broken the text up in some odd way, and not rendering the last part of the doc

[18:08:21.0000] <MikeSmith>
oh

[18:08:27.0000] <MikeSmith>
geez

[18:08:48.0000] <MikeSmith>
wonder when they'll get around to changing that (and if there's a bug open9

[18:09:05.0000] <roc>
depends on how buggy their implementation is :-)

[18:09:14.0000] <MikeSmith>
heh

[18:09:29.0000] <MikeSmith>
/me adds back the prefixed versions also for now

[18:13:17.0000] <roc>
MikeSmith: you should a bug about the scrolling thing. It's supposed to have been fixed for a while now.

[18:13:33.0000] <roc>
see https://bugzilla.mozilla.org/show_bug.cgi?id=1093949

[18:14:07.0000] <roc>
oh wait, that's not the bug

[18:18:19.0000] <roc>
MikeSmith: FWIW your page is really really broken for me on Chrome 41 on Linux

[18:18:43.0000] <roc>
lots of mispositioned glyphs

[18:20:52.0000] <MikeSmith>
roc: so shoudl I raise a new Layout bug?

[18:20:59.0000] <MikeSmith>
gecko bug I mean

[18:21:21.0000] <MikeSmith>
/me looks for glyph brokenness in Chrome

[18:22:26.0000] <MikeSmith>
roc: on my OSX Chromium build at least I see no broken glyphs

[18:22:35.0000] <roc>
ok

[18:22:40.0000] <MikeSmith>
unless you mean bad kerning?

[18:22:46.0000] <roc>
probably a LInux-specific issue then.

[18:22:47.0000] <roc>
no

[18:22:50.0000] <MikeSmith>
ah OK

[18:22:53.0000] <roc>
the breakage is obvious on Linux

[18:23:13.0000] <roc>
glyphs overpainting other glyphs

[18:23:23.0000] <MikeSmith>
oh wow yeah

[18:23:33.0000] <MikeSmith>
that sounds bad

[18:26:00.0000] <boogyman>
stable canary on W8 appears okay too.

[18:26:01.0000] <roc>
that's interesting. on Linux at least, Chrome doesn't remap the arrow keys to work visually/

[18:26:13.0000] <roc>
so "down-arrow" moves one line to the left

[18:26:25.0000] <roc>
(if you make the doc editable)

[18:26:39.0000] <MikeSmith>
oh

[18:26:55.0000] <MikeSmith>
/me tries

[18:27:36.0000] <MikeSmith>
yeah same here

[18:27:45.0000] <MikeSmith>
down arrow takes me left

[18:28:00.0000] <MikeSmith>
left arrow takes me up

[18:28:02.0000] <MikeSmith>
etc

[18:28:09.0000] <MikeSmith>
in Chromium

[18:28:32.0000] <jamesr__>
rotate your keyboard?

[18:28:56.0000] <MikeSmith>
haha

[18:29:25.0000] <MikeSmith>
great example of overlooking the obvious simple solution

[18:29:35.0000] <MikeSmith>
true engineer :-)

[18:30:01.0000] <boogyman>
nah, you obviously should just rebuild your entire system :-O :p

[18:30:30.0000] <MikeSmith>
roc: in my Nightly I see the same unexpected arrow-key behavior as in Chromium

[18:30:50.0000] <MikeSmith>
/me tries to remember when he last built

[18:31:12.0000] <MikeSmith>
hmm yeah, 36.0a1 (2014-11-25)

[18:31:23.0000] <MikeSmith>
so it's been a long time

[18:31:45.0000] <MikeSmith>
/me stares at his mozilla-central build running

[18:32:25.0000] <MikeSmith>
I really need a faster machine

[18:35:49.0000] <roc>
or you could just download nightly :-)

[18:36:20.0000] <roc>
your page works if I wrap the content in a scrollable div and put vertical-rl on the div

[18:36:26.0000] <roc>
as is, it's totally broken in Firefox

[18:36:30.0000] <roc>
so you should file a bug

[18:36:36.0000] <MikeSmith>
OK will do

[18:36:40.0000] <roc>
thanks!

[18:36:44.0000] <roc>
Assign it to jfkthame

[18:36:45.0000] <MikeSmith>
cheers

[18:36:47.0000] <MikeSmith>
hai

[18:38:22.0000] <roc>
I was talking to Xidorn and Jonathan last week about vertical ruby and text-combine-upright, so that stuff should be done soon too

[18:38:54.0000] <MikeSmith>
oh wow

[18:38:56.0000] <MikeSmith>
great

[18:39:05.0000] <MikeSmith>
I didn't know they were working on that

[18:39:32.0000] <MikeSmith>
oh cool and I just got the OSX desktop notification thing that my build is complete

[18:39:35.0000] <roc>
I also saw Jonathan demo vertical IME. That was beautiful.

[18:40:00.0000] <MikeSmith>
nice

[18:40:30.0000] <MikeSmith>
that's going to make a lot of people happy here in Japan

[18:40:33.0000] <roc>
text-combine-upright is somewhat evil from a browser engine point of view.

[18:40:55.0000] <roc>
character-depending styling is tricky

[18:40:56.0000] <MikeSmith>
really?

[18:41:24.0000] <roc>
text-combine-upright is a character-dependent orientation change

[18:41:26.0000] <MikeSmith>
just in the absolute or you mean because it overturns some older design assumptions?_

[18:41:30.0000] <MikeSmith>
oh

[18:42:07.0000] <roc>
we'll try reusing the machinery for RTL, which does character-dependent direction changes

[18:43:25.0000] <MikeSmith>
sounds like something Jonathan must be right at home with

[18:43:41.0000] <MikeSmith>
given the other stuff I know he's worked on

[18:47:24.0000] <MikeSmith>
roc: btw speaking of Jonathan, just found https://bugzilla.mozilla.org/show_bug.cgi?id=1108067

[18:47:30.0000] <MikeSmith>
setting vertical writing-mode on the document element doesn't result in expected horizontal scrollbar

[18:47:39.0000] <MikeSmith>
from 12-05

[18:49:28.0000] <roc>
sounds like it could be your bug

[18:50:54.0000] <MikeSmith>
yeah

[18:53:06.0000] <MikeSmith>
found the IME-support-in-vertical-text enhancement bug too https://bugzilla.mozilla.org/show_bug.cgi?id=1076657

[18:53:36.0000] <MikeSmith>
/me is Cc'ing himself on a bunch of bugs

[18:53:55.0000] <roc>
Jonathan has been busy :-)

[18:54:22.0000] <roc>
he also recently did multicol and some form controls.

[18:54:38.0000] <roc>
Looks like Chrome doesn't do form controls

[19:02:41.0000] <MikeSmith>
yeah saw the form-controls bug as well

[20:07:30.0000] <MikeSmith>
botie: inform roc I raised https://bugzilla.mozilla.org/show_bug.cgi?id=1108925 and https://bugzilla.mozilla.org/show_bug.cgi?id=1108923 but I couldn't assign either to Jonathan because I don't have enough editbugs perms to do that

[20:07:30.0000] <botie>
will do

[20:41:43.0000] <botie>
roc, at 2014-12-09 04:07 UTC, MikeSmith said: I raised https://bugzilla.mozilla.org/show_bug.cgi?id=1108925 and https://bugzilla.mozilla.org/show_bug.cgi?id=1108923 but I couldn't assign either to Jonathan because I don't have enough editbugs perms to do that

[00:17:19.0000] <annevk>
https://twitter.com/jochen_e/status/542204889909444608 foolip \o/

[00:18:22.0000] <ondras>
MikeSmith: typo, but sounds nicely, right :)

[00:19:36.0000] <MikeSmith>
yay foolip

[00:19:46.0000] <MikeSmith>
ondras: yeah :)

[00:29:10.0000] <annevk>
Hixie: what's the latest in the ES Job vs HTML task/microtask mess?

[01:07:30.0000] <MikeSmith>
Domenic: if there's opportunity still to slightly revise https://w3ctag.github.io/web-https/ I think it would be more effective if there were a separate section titled "Finding" at the very beginning of the document that contained just the text "Therefore, the TAG finds that the Web platform should be designed to actively prefer secure origins — typically, by encouraging use of HTTPS URLs instead of HT

[01:07:36.0000] <MikeSmith>
TP ones. Furthermore, the end-to-end nature of TLS encryption must not be compromised on the Web, in order to preserve this trust.

[01:07:48.0000] <MikeSmith>
(that part)

[01:08:30.0000] <MikeSmith>
Domenic: or just replace the entire Abstract with just that text

[01:09:57.0000] <MikeSmith>
Domenic: as it is now I have to read through 200+ or whatever other words to get to those two statement that are the actual point of the whole thing

[01:10:14.0000] <Domenic>
MikeSmith: file that as an issue :)

[01:10:21.0000] <MikeSmith>
hai

[01:19:50.0000] <MikeSmith>
Domenic: https://github.com/w3ctag/web-https/issues/4

[01:42:24.0000] <foolip>
annevk: thanks :)

[01:59:28.0000] <annevk>
MikeSmith: note that "secure origin" is not really an accurate term

[01:59:51.0000] <annevk>
but I guess that doesn't matter much here, it's just a finding after all :p

[02:00:13.0000] <MikeSmith>
is there a term it could be replaced with?

[02:01:20.0000] <annevk>
hsivonen: how is https://twitter.com/RichSalz/status/542040814093086721 a good idea given utf-8?

[02:01:39.0000] <annevk>
MikeSmith: we haven't really come up with something yet

[02:01:53.0000] <MikeSmith>
ok

[03:21:40.0000] <annevk>
/me tries to find the forked URL spec

[03:21:57.0000] <annevk>
Is https://specs.webplatform.org/url/webspecs/develop/ it?

[03:22:16.0000] <annevk>
Last updated two days ago...

[03:45:27.0000] <annevk>
Okay, I filed some issues on https://github.com/webspecs/url/issues

[03:45:33.0000] <annevk>
Hopefully that helps rubys

[03:54:37.0000] <annevk>
TabAtkins: http://wilsonpage.co.uk/introducing-layout-boundaries/ has this come up in the CSS WG?

[04:25:26.0000] <hsivonen>
annevk: not clear that making RFC 20 a Standard is a good idea. I find it interesting that the IETF puts effort into tweaking the official status of that stuff.

[04:26:06.0000] <annevk>
hsivonen: yeah, fair

[07:00:37.0000] <JakeA>
wanderview: I guess you're looking at my post in Firefox Nightly?

[07:00:48.0000] <wanderview>
JakeA: yea

[07:01:06.0000] <JakeA>
The animations don't work in stable due to path.getTotalLength() throwing out weird numbers :(

[07:02:26.0000] <wanderview>
JakeA: they seem to work in FF 34

[07:02:38.0000] <wanderview>
which just went to release last week I think

[07:03:03.0000] <JakeA>
wanderview: I think the getTotalLength bug is only there in some OSs and rendering modes

[07:03:13.0000] <JakeA>
I feature detect so it's ok

[07:03:38.0000] <JakeA>
I give it a line that I know then length of, and if it's off by >10, no anims

[07:03:50.0000] <JakeA>
Doesn't work on my Firefox 24 on OSX

[07:03:53.0000] <JakeA>
um 34

[07:04:12.0000] <JakeA>
I think it's this https://bugzilla.mozilla.org/show_bug.cgi?id=1044449

[07:05:22.0000] <wanderview>
JakeA: hmm... that bug's test case fails in my FF nightly... so maybe a related, but different issue

[07:05:45.0000] <JakeA>
Ahh well, the animations are working in nightly for me, so I guess a fix is on the way

[07:06:07.0000] <wanderview>
could be that the rendering prefs are different in nightly

[07:09:32.0000] <wanderview>
JakeA: works in mac FF 35 beta for me... so, soon

[07:10:59.0000] <JakeA>
wanderview: Looks like the bug's been there a while http://jakearchibald.com/2013/animated-line-drawing-svg/#comment-1389845471 - I didn't spot that comment at the time else I'd have been more proactive in making a ticket etc. But yeah, sounds like the issue doesn't happen for everyone

[07:15:16.0000] <wanderview>
hmm... I can't tell what changed to fix it :-\ but it seems in about 5 weeks it should be fixed when FF 35 goes to release

[07:16:23.0000] <JakeA>
\o/

[07:28:33.0000] <wanderview>
JakeA: one pattern I've been thinking about is how to do a LRU cache... store last 100 photos looked at, etc

[07:28:54.0000] <wanderview>
JakeA: seems possible by using ordering out cache.keys()... when you get a match(), you clone and put() it again to refresh order

[07:29:23.0000] <wanderview>
JakeA: would be nice to be able to do "store up to 1MB of recently viewed photos", but we don't expose size

[07:34:23.0000] <JakeA>
wanderview: yeah, I've had that as a feature request for things like avatars

[08:03:10.0000] <wanderview>
JakeA: yea... or any kind of media app... music player, photo gallery, etc

[08:27:23.0000] <annevk>
Domenic: I got feedback from bz on Extensible Web Summit. It being co-located with conferences browser developers typically not attend makes it hard. Having a dedicated semi-yearly conference in e.g. the bay area for library, browser, and standards hackers might be better.

[08:28:42.0000] <Domenic>
Yeah, that makes sense…

[08:29:42.0000] <annevk>
Domenic: I would like to reboot this conference somehow. It's at least very important for Mozilla to have these kind of conversations with web developers and I'd like it if we could be more inclusive than just Mozilla and web developers.

[08:30:37.0000] <annevk>
Anyway, just a braindump, I should probably follow up on this myself

[08:30:45.0000] <annevk>
/me makes a note somewhere

[08:31:58.0000] <rniwa>
annevk: it’s kind of weird that we don’t invite regular web developers to TPAC…

[08:32:21.0000] <rniwa>
it appears to me that it’s most benefitial if we had a web-developer-oriented conference right before or after TPAC

[08:32:24.0000] <annevk>
rniwa: would you really want them to participate in a 60-person non-meeting?

[08:32:28.0000] <rniwa>
so that we can get some input from them...

[08:32:46.0000] <rniwa>
annevk: i’m not suggesting to invite them into TPAC meetings themselves

[08:32:50.0000] <annevk>
rniwa: but I have long argued for TPAC to be exactly what I want out of "Extensible Web Summit", namely a week long unconference...

[08:33:07.0000] <annevk>
rniwa: in which case it'd make perfect sense

[08:33:33.0000] <rniwa>
annevk: that’ll be nice although i would like to have the current meeting-style TPAC meetings as well

[08:33:48.0000] <rniwa>
annevk: but we can just cut back on the time spent discussing processes

[08:33:51.0000] <Domenic>
annevk: agreed on reboot

[08:33:52.0000] <rniwa>
like pub status, etc...

[08:34:01.0000] <rniwa>
and just discuss techinical stuff.

[08:34:07.0000] <annevk>
rniwa: really? I didn't realize people actually enjoyed these meetings

[08:34:20.0000] <rniwa>
annevk: I do enjoy them for the part we have techincal discussions

[08:34:28.0000] <rniwa>
annevk: some discussions are hard to have over emails.

[08:34:37.0000] <annevk>
rniwa: yeah, just technical stuff would be great, and I think you sort of make that happen by having unconference

[08:34:55.0000] <rniwa>
annevk: it’s not great when we start talking about issues and pub status, etc...

[08:35:03.0000] <annevk>
rniwa: since you organize those discussions yourself, rather than having them be facilitated by some chair that also has 30min anecdotes on the subject

[08:35:04.0000] <rniwa>
annevk: i wish they had just done that over emails

[08:35:19.0000] <rniwa>
annevk: but I think it’s nice to have a dedicated time for it

[08:36:02.0000] <rniwa>
annevk: with unconference, it’s hard to have a group meeting for each misc technical points

[08:36:24.0000] <rniwa>
annevk: whereas in WG meetings, we can just have an agenda for every topic we want to discuss

[08:36:35.0000] <rniwa>
annevk: and avoid the overhead of moving people around conference rooms

[08:36:36.0000] <annevk>
My idea of an unconference week would be lots of one hour slots. Each dedicated to a particular subject that needs discussion. E.g. new Indexed DB features. JSIDL. Layout API. Asynchronous iterators...

[08:36:41.0000] <rniwa>
annevk: but perhaps we can solve that problem in some other way

[08:37:12.0000] <annevk>
I guess we could organize the slots by topic so people don't have to move around much

[08:37:21.0000] <rniwa>
annevk: perhaps that’ll work but you’ll loose the opportunity to present your idea to the whole WG.

[08:37:42.0000] <annevk>
Well you'd just get a slot

[08:37:44.0000] <rniwa>
annevk: but I agree we can cut back on WG meeting times and have more unconferences

[08:37:56.0000] <annevk>
And if there's no interest maybe that's a good thing, so you're not wasting people's time :-)

[08:38:26.0000] <annevk>
But yeah, I'm not opposed to merging

[08:38:45.0000] <rniwa>
annevk: i dunno… this year’s TPAC rarely had any unconference meeting I wanted to attend.

[08:38:46.0000] <annevk>
I just find that 90% of the value of TPAC is hallways

[08:39:03.0000] <rniwa>
annevk: that’s true but TPAC’s uncoferences weren’t hallway talks either

[08:39:18.0000] <rniwa>
annevk: so I used most of my time on Wed to have hallway conversations instead

[08:39:25.0000] <annevk>
rniwa: could be that the W3C is no longer the place of development

[08:39:45.0000] <annevk>
rniwa: I haven't seen much come out of TPAC

[08:39:55.0000] <rniwa>
annevk: I don’t think it’s an issue with W3C per se

[08:40:07.0000] <rniwa>
annevk: it’s more of an issue with how TPAC meetings and conferences are organized

[08:40:09.0000] <jgraham>
FWIW the Mozilla all hands approach with entirely ad-hoc scheduling worked very well (not to say that nothing was scheduled in advance, but people were given the freedom to organise the meetings they wanted with the people they wanted at the times they wanted)

[08:40:25.0000] <annevk>
I didn't attend, so I'm not sure, but the summaries I got from fellow Mozillians didn't really sound like it was worth it, apart from the meeting people aspect

[08:41:05.0000] <jgraham>
The W3C would probably hate it because not having all Members in a room sitting around not doing much would decrease the appeal of Membership, or something

[08:41:12.0000] <rniwa>
I think the problem with TPAC’s unconferences is that we end up getting non-technical people as well as people who aren’t familiar with the suggested topic

[08:41:14.0000] <annevk>
I would like a meeting that is focused on technical stuff and has half a day or so for something social

[08:41:23.0000] <rniwa>
so each unconference ends up spending too much time explaining stuff

[08:41:42.0000] <annevk>
jgraham: yeah, #mozlandia was great

[08:42:13.0000] <jgraham>
I think the first step would be to ban all meetings large enough to require a microphone

[08:42:27.0000] <annevk>
jgraham++

[08:42:37.0000] <rniwa>
jgraham: that might be a good start

[08:42:52.0000] <rniwa>
jgraham: even for topics in HTML & WebApps WG, you rarely need more than 7 people to participate...

[08:43:19.0000] <jgraham>
Yeah and having to run a microphone around means that you cut bandwidth by at least 50%

[08:43:27.0000] <annevk>
rniwa: right, that has been my observation as well, which is why I favor unconference as you can get more precise meetings with only those that need to be there

[08:43:52.0000] <annevk>
rniwa: and anyone else that wants to be there and listen in should be able to of course, but with topic-based discussion you can't get sidetracked

[08:43:53.0000] <jgraham>
Probably more because you suddenly can't have a conversation, you have to have a speaker queue and so on, so discussion kind of dies

[08:44:03.0000] <annevk>
rniwa: compare mailing list discussion with issue/Bugzilla discussion

[08:44:08.0000] <annevk>
rniwa: it's somewhat similar

[08:44:18.0000] <rniwa>
annevk: yeah

[08:44:26.0000] <annevk>
rniwa: large group meetings inspire permathreads; unconference insprires getting shit done

[08:44:34.0000] <rniwa>
annevk: I guess if we dismentled WG meetings, then unconference meetings could be more technical as well

[08:44:47.0000] <rniwa>
because thigns that would have otherwise happend in WG meetings would happen in those unconference meetings

[08:44:54.0000] <annevk>
yup

[08:44:57.0000] <tantek>
github issues are even better than bugzilla in my experience

[08:45:15.0000] <tantek>
a badly run WG meeting is merely a sign of a bad chair

[08:45:17.0000] <rniwa>
tantek: I like how commits are associated with issues in Github

[08:45:22.0000] <tantek>
rniwa - indeed

[08:45:34.0000] <rniwa>
tantek: or a bad WG...

[08:45:40.0000] <tantek>
rniwa - what is a bad WG?

[08:45:56.0000] <tantek>
you mean charter?

[08:46:21.0000] <rniwa>
/me eyes at a certain WG which has exactly one company in it…

[08:46:49.0000] <tantek>
annevk - the social web wg f2f (first one so only one data point) at TPAC was quite productive and resolved several issues that have been permathreads in past mailing lists (like Activity Streams) - so it is possible to run a WG meeting well, but perhaps it is difficult to do so.

[08:47:05.0000] <tantek>
oh dear a one company WG? WTF.

[08:48:15.0000] <tantek>
one key thing: as co-chair I have refused to read the mailing list (except when people explicitly paste URLs in IRC) and I have refused to email the agenda to the mailing list - since the agenda is developed and available on the wiki.

[08:48:21.0000] <jgraham>
I don't think a technical discussion in a room with 50 people and a microphone can ever go well

[08:48:37.0000] <tantek>
jgraham: we had about 20-25. perhaps you're right.

[08:48:43.0000] <rniwa>
jgraham: it could if roughly 45 people never speaks LOL

[08:48:54.0000] <rniwa>
that’s what happend at WebApps WG TPAC meetings this year

[08:48:58.0000] <annevk>
WGs don't work for something as big as the web

[08:49:41.0000] <tantek>
have either of you gone to IETF meetings? how do those compare to W3C WG f2f?

[08:50:39.0000] <Domenic>
what's the one-company WG? pointer events?

[08:52:50.0000] <annevk>
tantek: they're max two hours which helps

[08:53:02.0000] <annevk>
tantek: but same experience, hallway rules

[08:53:20.0000] <annevk>
And when hallway rules rather than the "formal" track, the whole thing is run in the wrong way imo

[09:43:07.0000] <annevk>
JakeA: is ServiceWorkerClient exposes outside of service workers?

[09:43:17.0000] <annevk>
JakeA: is that the reason for the ServiceWorker prefix?

[09:43:46.0000] <JakeA>
annevk: at the moment yeah, but I want to rename them & split them into WindowClient, WorkerClient & SharedWorkerClient

[09:43:59.0000] <JakeA>
Just haven't had time to properly think it though

[09:44:10.0000] <annevk>
JakeA: okay, if that's still the plan all sounds good

[09:44:17.0000] <JakeA>
Will aim to start a ticket on it tomorrow

[09:44:27.0000] <annevk>
JakeA: do I need to do anything to get the API generality thing resolved?

[09:59:53.0000] <JakeA>
annevk: Alex was calling for more evidence. I'm pretty happy now we have a backwards-compatible adoption path though

[10:02:09.0000] <annevk>
JakeA: in private? I thought we got past that

[10:03:29.0000] <JakeA>
annevk: hm, I'm pretty sure slightlyoff_ was still demanding examples of sites that needed multiple scopes

[10:03:34.0000] <JakeA>
I think moving scopes was agreed

[10:03:56.0000] <annevk>
JakeA: hmm

[10:04:22.0000] <annevk>
JakeA: that's not evident from the issue

[10:08:28.0000] <JakeA>
annevk: I'll chase him for a position

[10:09:18.0000] <annevk>
JakeA: thanks, that we can add most of these things in a backwards compatible way seems good, although the design is not necessarily optimal

[10:14:38.0000] <annevk>
I don't like quora, but http://www.quora.com/What-was-the-one-line-JavaScript-that-president-Obama-wrote-as-part-of-the-Hour-of-Code-2014 is cool

[10:52:36.0000] <JonathanNeal>
ondras: thank you again for your help yesterday.

[10:55:36.0000] <robwu_nl>
Is the blur event supposed to be triggered upon node removal? See https://crbug.com/439484 for context.

[10:58:05.0000] <JonathanNeal>
robwu_nl: that seems addressed in the example @ https://html.spec.whatwg.org/multipage/interaction.html#focus-fixup-rule-one

[10:59:20.0000] <caitp>
https://bugzilla.mozilla.org/show_bug.cgi?id=559561 for example

[10:59:41.0000] <caitp>
surprised it's taking so long to land that fix

[11:00:16.0000] <JonathanNeal>
Reported 2010

[11:00:59.0000] <JonathanNeal>
I wonder if it’s possible to see the moment when the bug hit the event horizon and was lost for all time?

[11:01:26.0000] <JonathanNeal>
*and went into stasis

[11:01:58.0000] <caitp>
well, the comments are saying webkit was doing some weird things in that case, maybe it still is, maybe blink still is too

[11:02:34.0000] <JonathanNeal>
then isn’t that what the spec is for?

[11:07:18.0000] <caitp>
interestingly I get a stack overflow trying to attach the removed input to a new element in blink

[11:09:30.0000] <caitp>
http://jsfiddle.net/8wdckaaq/ slightly different variation, it still does weird things

[11:09:46.0000] <caitp>
these models are problematic because they don't really make a lot of sense when you take into consideration all of the things that can happen

[11:24:52.0000] <ondras>
JonathanNeal: no problem. It was a new and interesting topic for me as well.

[11:25:38.0000] <robwu_nl>
JonathanNeal: Don't the focus fixup rules apply to the to-be-focused area instead of the unfocused area? Step 2 defines "old chain", step 3 are the fixup steps - https://html.spec.whatwg.org/multipage/interaction.html#processing-model-6:currently-focused-area-of-a-top-level-browsing-context-12

[13:18:31.0000] <wanderview>
JakeA: did something change in TrainedToThrill so it no longer gives random images when you click it's (in-page) refresh button?

[13:19:29.0000] <JakeA>
wanderview: it was never supposed to do that, but there's something odd with Flickr's search that makes it often do that

[13:19:56.0000] <wanderview>
JakeA: ok... it used to happen for me a lot... not getting it now... wondered if I broke something in our SW impl

[13:20:07.0000] <wanderview>
thanks

[13:39:43.0000] <wanderview>
hmm... could have something to do with it pulling duplicates of the same image

[14:08:47.0000] <polumetis>
NickServ identify spring12

[14:09:09.0000] <ondras>
.)

[14:11:04.0000] <wanderview>
JakeA: yea... our maple build actually is failing to intercept all the flikr requests :-\

[14:28:04.0000] <JakeA>
wanderview: just the images, or the API too?

[14:28:33.0000] <wanderview>
JakeA: our onfetch() seems broken at the moment... not seeing it fire for anything

[14:29:03.0000] <wanderview>
JakeA: we store the main trained-to-thrill scripts because you do an addAll() in the install step instead of onfetch for those

[14:30:06.0000] <wanderview>
JakeA: sorry I didn't catch this before telling you it worked the other day :-\  amazing thing is it still loads and stay up on refresh when I disconnect my ethernet interface

[14:33:08.0000] <wanderview>
/me send email to team... drops mic... eats dinner

[14:40:38.0000] <JakeA>
wanderview: no worries, haven't had a chance to play with maple yet. Addy gave it a spin though and couldn't quite get it working. That might explain it


2014-12-10
[20:57:55.0000] <JonathanNeal>
before i use the wrong word, is xml a syntax or a language or both?

[20:58:46.0000] <JonathanNeal>
the acronym is language, but i dunno, me bad at english

[21:53:02.0000] <Hixie>
JonathanNeal: it's a metalanguage that defines a syntax for defining language grammars for new languages based on annotated trees and a syntax for expressing those languages

[22:02:37.0000] <bret>
JonathanNeal: a markup language no?

[22:03:40.0000] <Hixie>
you could describe it as a markup language, depending on how you defined "markup language"

[02:50:11.0000] <zcorpan>
intredasting http://www.ietf.org/id/draft-kerwin-file-scheme-13.txt

[02:55:15.0000] <ondras>
On an OpenVMS Files-11 system, append a slash "/" to the URI, and encode the device name as the first segment as per step 5

[02:55:19.0000] <ondras>
heh

[04:10:37.0000] <annevk>
better link: https://tools.ietf.org/html/draft-kerwin-file-scheme-13

[04:11:01.0000] <annevk>
I'm not sure why the IETF keeps maintaining so many different canonical links, especially when everything not tools.ietf.org is so poor

[04:30:31.0000] <foolip>
annevk: sorry about isSameNode(), now the ball is with you :/

[04:30:59.0000] <annevk>
foolip: I hope you're okay with me just leaving the bug open

[04:31:25.0000] <annevk>
foolip: there doesn't seem to be a compelling need to make a decision at this point

[04:31:28.0000] <foolip>
annevk: indefinitely, or what input do you need to resolve it either way?

[04:32:05.0000] <annevk>
foolip: I guess compat issues for Gecko

[04:32:21.0000] <annevk>
foolip: or maybe compat issues for a new browser

[04:32:22.0000] <Ms2ger>
We killed it, didn't we?

[04:32:29.0000] <annevk>
Ms2ger: yup

[04:32:52.0000] <Ms2ger>
Then I'd prefer leaving it out of the spec :)

[04:32:54.0000] <foolip>
Ms2ger: yes, but my attempt to remove it in Blink was not met with the usual enthusiasm

[04:33:17.0000] <Ms2ger>
There's usual enthusiasm?

[04:33:42.0000] <foolip>
I'd say so, yes, when some crufty unused stuff is removed

[04:34:32.0000] <annevk>
Ms2ger: if there's a r+ patch on a bug, it needs a checkin-needed keyword right?

[04:34:51.0000] <Ms2ger>
Typically yes

[04:35:23.0000] <annevk>
Ms2ger: https://bugzilla.mozilla.org/show_bug.cgi?id=340494

[04:35:27.0000] <annevk>
/me just added it

[04:36:08.0000] <Ms2ger>
annevk, ... why is that bug closed?

[04:36:15.0000] <foolip>
annevk: you can leave it open, but I'd suggest finding out if IE or Safari are going to remove it

[04:36:30.0000] <annevk>
Ms2ger: hmm not sure, maybe that patch should have gone in a new bug

[04:36:44.0000] <annevk>
foolip: is Travis on the cc?

[04:36:52.0000] <foolip>
annevk: nope

[04:40:02.0000] <annevk>
foolip: okay, added and added hober and left a comment with what I'm inclined to do about this

[04:40:41.0000] <annevk>
Ms2ger: ta

[04:41:55.0000] <foolip>
annevk: thanks

[04:57:26.0000] <Ms2ger>
foolip, do you have tests for https://bugzilla.mozilla.org/show_bug.cgi?id=1109486 ?

[04:58:29.0000] <foolip>
Ms2ger: just the test in https://codereview.chromium.org/791783002/

[04:59:38.0000] <foolip>
we can't run serve.py tests (yet) so it's some silly cgi script

[04:59:48.0000] <Ms2ger>
Want to submit one?

[05:00:08.0000] <Ms2ger>
Not having to write tests is usually a nice carrot ;)

[05:01:07.0000] <foolip>
how trivial is it to echo the Content-Type header using serve.py?

[05:02:52.0000] <foolip>
Ms2ger: I'm afraid a per-spec test wouldn't pass in either Gecko or Blink because we both use application/xml unconditionally

[05:03:07.0000] <foolip>
I guess I could write a test using an XMLDocument to avoid that though

[05:03:48.0000] <Ms2ger>
Trivial

[05:03:55.0000] <Ms2ger>
I suspect .headers would work too

[05:04:21.0000] <Ms2ger>
Having HTML and XML tested both would be even better ;)

[05:04:42.0000] <foolip>
Ms2ger: then will you put back isSameNode() :P ?

[05:05:15.0000] <foolip>
so anyway, I'm trying to write a test for you

[05:05:30.0000] <Ms2ger>
No :)

[05:05:50.0000] <Ms2ger>
And thanks a lot

[05:06:12.0000] <Ms2ger>
/me should go out and buy chocolate for the holidays

[05:07:46.0000] <foolip>
Ms2ger: looks like web-platform-tests/XMLHttpRequest/send-entity-body-document.htm is already testing this

[05:07:55.0000] <foolip>
that was easy :)

[05:08:00.0000] <Ms2ger>
Ha

[05:10:59.0000] <jgraham>
foolip: So what do we have to do to get Chromium running tests with the proper server?

[05:11:48.0000] <foolip>
jgraham: I don't know, maybe setting up the hosts is non-trivial, or maybe nobody has tried it yet

[05:12:27.0000] <jgraham>
fwiw we use autoproxy instead of the hosts on infra

[05:12:40.0000] <foolip>
it sure would be nice, right now tests are being rewritten by a script to make paths non-absolute...

[05:28:20.0000] <zcorpan>
MikeSmith: in http://html5doctor.com/html5-check-it-before-you-wreck-it-with-miketm-smith/ "Should pre-HTML5 doctypes be flagged with a warning, in the W3C Validator, now HTML5 is a REC?" - the html4 doctypes are conforming, at least the ones that trigger standards mode

[05:28:53.0000] <Ms2ger>
Lol rec

[05:29:21.0000] <zcorpan>
MikeSmith: next question: "Nothing changed in browsers." isn't quite true, the gecko html parser had problems with it that went away when switching to html5 parser

[05:38:42.0000] <MikeSmith>
/me wonders what mechanism the html5 doctors have for printing retractions

[05:39:47.0000] <MikeSmith>
/me reminds himself to qualify more statements with "as far as I know" or "don't trust what I'm telling you"

[05:47:32.0000] <MikeSmith>
zcorpan: the transitional one is not conforming, right?

[05:47:54.0000] <MikeSmith>
it see like that's the one most often used

[05:48:13.0000] <MikeSmith>
the validator errors for that one still

[05:50:50.0000] <MikeSmith>
I thought we had been emitting a warning about the conformant ones but I guess not

[05:51:13.0000] <MikeSmith>
last I saw the spec said not to use those in documents

[05:51:25.0000] <MikeSmith>
should not not use

[05:51:35.0000] <MikeSmith>
*not

[05:53:22.0000] <Ms2ger>
MikeSmith, I think that changed to reduce warning fatigue

[05:53:32.0000] <MikeSmith>
ah ok

[05:53:33.0000] <Ms2ger>
And no real negative effect

[05:54:53.0000] <MikeSmith>
I guess I should actually check actual facts sometimes before I say things

[06:10:31.0000] <zcorpan>
MikeSmith: right, transitional doesn't trigger standards mode

[06:10:34.0000] <zcorpan>
MikeSmith: facts are overrated :-)

[06:11:11.0000] <MikeSmith>
zcorpan: I will quote you on that

[06:11:40.0000] <MikeSmith>
but I will misstate it when I quote you

[06:12:49.0000] <annevk>
Domenic: www-tag continues to amaze

[06:13:06.0000] <zcorpan>
looking forward to it

[06:14:29.0000] <MikeSmith>
about URL still?

[06:14:30.0000] <annevk>
Domenic: first saying how you could rely on free public caching and then demanding 24/7 phone support

[06:14:46.0000] <annevk>
MikeSmith: TLS

[06:14:57.0000] <MikeSmith>
ah even better

[06:17:15.0000] <annevk>
MikeSmith: someone is claiming that the move to HTTPS is killing independent hosting providers

[06:18:15.0000] <annevk>
MikeSmith: he's sort of a known troll though

[06:20:08.0000] <MikeSmith>
coming out from the woodwork and all that I guess

[06:20:21.0000] <annevk>
http://www.certificate-transparency.org/ not going over TLS o_O

[06:21:07.0000] <annevk>
MikeSmith: he pops up every now and then and considers himself a spokesperson for the independent developer

[06:25:51.0000] <MikeSmith>
/me briefly peruses the www-tag thread

[06:26:46.0000] <MikeSmith>
ah yeah that guy

[06:28:50.0000] <zcorpan>
Ms2ger: the "caching is allowed" check can never fail, right?

[06:29:14.0000] <Ms2ger>
zcorpan, it's not intended to be able to

[06:29:36.0000] <Ms2ger>
Covering all conformance reqs and all; I probably wouldn't write it today

[06:31:30.0000] <zcorpan>
should we replace it with a comment saying it can't be tested?

[06:33:40.0000] <Ms2ger>
*shrug*

[06:33:49.0000] <zcorpan>
yeah

[06:34:08.0000] <zcorpan>
ok let's leave it :-)

[07:39:57.0000] <krijnhoetmerbot>
zcorpan: done (I think)

[07:42:43.0000] <krijnhoetmerbot>
(For new logs that is, not for cached older ones)

[07:55:25.0000] <annevk>
krijnhoetmerbot: when will TLS arrive?

[07:55:47.0000] <krijnhoetmerbot>
Not on this machine I'm affraid

[07:55:53.0000] <annevk>
krijnhoetmerbot: I can help you out with a certificate if that's the problem

[07:55:56.0000] <krijnhoetmerbot>
*afraid

[07:55:58.0000] <annevk>
I see

[08:01:07.0000] <Domenic>
topic should probably be updated to https://whatwg.org/ instead of http://www.whatwg.org/

[08:16:46.0000] <annevk>
hmm, MikeSmith has to make that change I guess, seems locked

[08:20:36.0000] <krijnhoetmerbot>
Also added previous/next day links to the logs, yay

[08:22:28.0000] <krijnhoetmerbot>
Will regenerate last month's cache

[08:23:19.0000] <Domenic>
MikeSmith: no www anymore :)

[08:23:34.0000] <MikeSmith>
ah

[08:32:49.0000] <annevk>
jgraham: what's the status of the service worker test infrastructure?

[08:34:34.0000] <jgraham>
annevk: I think some infrastructure that Google used to write some tests landed

[08:34:45.0000] <annevk>
wanderview: ^^

[08:36:59.0000] <wanderview>
thanks... it would be great to the blink tests uplifted then... easiest way to get it into our tree

[08:39:55.0000] <jgraham>
https://github.com/w3c/testharness.js/pull/82 and https://github.com/w3c/testharness.js/pull/93

[08:40:04.0000] <MikeSmith>
annevk: I guess you've been talking with whoever wrote http://www.chromium.org/Home/chromium-security/prefer-secure-origins-for-powerful-new-features (Mike West) about revising it to use some concept/term other than "secure origin"?

[08:41:14.0000] <MikeSmith>
though the definition of what a "secure origin" is there doesn't seem obviously way off to me from what should be needed

[08:41:26.0000] <MikeSmith>
*Mike West?

[08:41:58.0000] <annevk>
MikeSmith: I work with him on https://w3c.github.io/webappsec/specs/powerfulfeatures/

[08:42:01.0000] <MikeSmith>
(not sure who wrote the document but I was guessing it was him(

[08:42:07.0000] <MikeSmith>
/me looks

[08:42:18.0000] <annevk>
MikeSmith: I don't care much for the original Chromium documents

[08:42:51.0000] <MikeSmith>
annevk: maybe the TAG draft should reference https://w3c.github.io/webappsec/specs/powerfulfeatures/ instead

[08:42:54.0000] <MikeSmith>
then

[08:43:07.0000] <MikeSmith>
should I raise a github issue for that?

[08:43:11.0000] <annevk>
MikeSmith: I guess you should

[08:43:15.0000] <annevk>
MikeSmith: or just PR it

[08:43:15.0000] <MikeSmith>
hai

[08:43:35.0000] <MikeSmith>
hmm yeah that's better I suppose

[08:45:50.0000] <MikeSmith>
annevk: btw "Requirements for Powerful Features" by itself is kind of an ambiguous title

[08:46:11.0000] <MikeSmith>
it could be about any kind of powerful feature at all

[08:46:14.0000] <annevk>
MikeSmith: I have tried to bikeshed the terminology around this for a while and stopped caring

[08:46:48.0000] <annevk>
MikeSmith: I only care about getting it grounded in first principles at this point, hopefully someone else can fix the other issues

[08:47:08.0000] <MikeSmith>
makes sense

[09:51:39.0000] <zcorpan_>
krijnhoetmerbot: very nice. thanks

[09:55:18.0000] <krijnhoetmerbot>
zcorpan_: np!

[10:21:47.0000] <wanderview>
JakeA: you mean if script does two XHRs or two Fetch() calls to the same URL, is the network layer smart enough to realize and only do one actual request? is that ok to do?  for example, REST API endpoints could have side effects, etc

[10:22:06.0000] <wanderview>
seems its up to content to set the cache headers properly... so second fetch() goes to http cache

[10:22:45.0000] <wanderview>
and we live the race of two simultaneous network events

[10:22:46.0000] <JakeA>
wanderview: hmm, but it doesn't know the headers yet. Does Gecko wait on the pending response

[10:22:53.0000] <JakeA>
ahh ok

[10:23:00.0000] <JakeA>
Yeah, I don't think we can solve this with magic

[10:23:18.0000] <wanderview>
JakeA: I mean... I don't think the network layer can do that without eating potentially significant network calls to REST endpoints, etc

[10:23:42.0000] <JakeA>
wanderview: yeah, it seems like something you'd *sometimes* want to do rather than all the time

[10:24:38.0000] <wanderview>
yea, and I think the cache headers are the way to control that

[10:29:48.0000] <JakeA>
wanderview: if tab 1 requests "/hi", then tab 2 requests "/h1", will the request in tab 2 wait for headers to arrive for the tab 1 request to see if they're a match?

[10:29:55.0000] <JakeA>
I mean cachable

[10:30:48.0000] <wanderview>
JakeA: I don't know... that seems like something without a clear tradeoff... good in some cases and bad in others... my guess is they opt for the simple case and just do the second network request

[10:31:05.0000] <JakeA>
Makes sense. Not sure what Chrome does

[10:34:28.0000] <wanderview>
it would also probably have to be "wait X amount of time for request 1 headers, and do request 2 if that times out"

[10:38:45.0000] <wanderview>
JakeA: ok... wow... we actually do have some waiting/request coalescing for <img> elements... everything else races

[10:39:04.0000] <JakeA>
wanderview: I think the img stuff is actually in the spec

[10:39:14.0000] <wanderview>
ah... ok

[10:39:33.0000] <JakeA>
Good to know though

[11:05:39.0000] <TabAtkins>
annevk: Re: layout boundaries, that's what http://dev.w3.org/csswg/css-containment/ is all about (but even stronger)

[12:55:13.0000] <annevk>
TabAtkins: can we combine that with local resize events to get something like element queries?

[13:23:11.0000] <annevk>
Domenic: jreschke appears to have been coopted: https://tools.ietf.org/html/draft-reschke-objsec-01

[13:25:53.0000] <Domenic>
annevk: I am so confused.

[13:28:26.0000] <annevk>
Domenic: ah, where it says "Intermediary-aware" you want to read "MITM"

[13:29:12.0000] <Domenic>
oh, i seeee

[13:29:20.0000] <annevk>
Domenic: basically at the moment the IETF is not requiring authenticated encrypted connections for HTTP/2.0

[13:29:54.0000] <annevk>
Domenic: as I understand it, Google will require TLS, Mozilla will require OE, and Microsoft might not require either (support the same mess as HTTP/1.1)

[13:30:22.0000] <annevk>
Domenic: the telcons are in favor of a HTTP/1.1-like setup so they can continue tracking you and injecting ads

[13:32:39.0000] <Domenic>
but of course

[13:32:51.0000] <Domenic>
it's unfortunate the incentives here are in favor of microsoft's position

[13:33:42.0000] <jamesr__>
what's OE?

[13:33:50.0000] <annevk>
Ok, so https://twitter.com/hillbrad/status/542740425933852672 is paraphrasing

[13:33:55.0000] <annevk>
jamesr__: MITM encryption

[13:34:13.0000] <annevk>
jamesr__: or less offensive, it'd be Opportunistic Encryption

[13:34:22.0000] <jamesr__>
annevk: you said two things, but they seem to be in conflict

[13:35:37.0000] <jamesr__>
i see. encrypt if everybody in the middle says it's OK to do so

[13:35:50.0000] <annevk>
jamesr__: it's encryption without authentication

[13:36:01.0000] <jamesr__>
pay the CPU cost and complexity of encryption without actually protecting you from attackers. coolbeans

[13:36:31.0000] <annevk>
jamesr__: I've been trying to understand why this is a thing we want the web to invest effort in for a while now

[13:37:09.0000] <annevk>
jamesr__: I believe the argument is that more encryption is better than none and that for Mozilla this was not a lot of effort to support

[13:37:41.0000] <annevk>
jamesr__: and that authenticated encryption comes with a lot of baggage around Referer and Mixed Content...

[13:38:11.0000] <annevk>
jamesr__: which is all true, but that still doesn't mean it's a good idea, but obviously not everyone at Mozilla is aligned on that

[13:53:00.0000] <annevk>
Whoa, Flash download is without TLS

[13:53:57.0000] <Hixie>
is it a signed binary?

[13:54:39.0000] <annevk>
I'm not sure how I can tell

[13:55:11.0000] <TabAtkins>
annevk: Actually, scratch that, I forgot that containment is about containing the painting effects of an element to within its boundaries, not stopping layout from leaking out.

[13:55:25.0000] <TabAtkins>
Stopping layout from leaking out is, more or less, what element queries will end up doing.

[13:55:40.0000] <annevk>
TabAtkins: are we still calling it element queries?

[13:55:48.0000] <annevk>
I guess it kind of makes sense...

[13:56:01.0000] <TabAtkins>
As EQ is just a combination of 1) some way of telling an element to stop paying attention to its contents for layout, and 2) some way for the contents of such an element to query the size of said element, likely via a selector.

[14:01:48.0000] <smaug____>
I wonder where Web Performance WG spec bugs should go

[14:02:00.0000] <annevk>
the /dev/null mailing list they run?

[14:02:03.0000] <smaug____>
ah, github :(


2014-12-11
[22:22:58.0000] <hgl>
is it correct that in es6, it's not possible to define static properties (or prototype properties) with the class syntax?

[22:31:30.0000] <krijnhoetmerbot>
MikeSmith: thanks! :)

[22:47:08.0000] <MikeSmith>
krijnhoetmerbot: cheers man. Sorry I didn't contribute before now but going forward I plan to again in another couple few months

[00:48:04.0000] <zcorpan>
i wonder if http://blogs.msdn.com/b/ieinternals/archive/2010/05/13/meta-refresh-causes-additional-http-requests.aspx is something other browsers also do and if it's needed for web compat

[01:17:10.0000] <hgl>
i wonder why es6 doesn't allow "export default var obj = {};" it's useful when the obj exposed is a data structure, and that only partially importing some properties doesn't make much sense, so you just want to do "import obj from ..." and not "import * as obj from ..." to emphasize it's a data structure.

[02:42:59.0000] <jami>
Can someone of you fix the wiki html5 drag n drop example

[02:43:10.0000] <jami>
There is a typo

[02:44:01.0000] <jami>
In example code (drag and drop)

[03:02:19.0000] <annevk>
jami: if it's in a wiki, can't you fix it?

[03:03:11.0000] <jami>
I don't have a account

[03:03:55.0000] <annevk>
jami: I can get you an account if you give me a username and password

[03:04:26.0000] <annevk>
jami: oops, s/password/email/

[05:00:19.0000] <zcorpan>
http://calendar.perfplanet.com/2014/the-pain-of-duplicate-scripts/ should we have an attribute on <script> that skips download/execution for duplicate scripts?

[06:31:44.0000] <wanderview>
JakeA: slightlyoff:  would it be possible for me to get permissions to add labels to issues on the SW repo?

[06:33:24.0000] <JakeA>
wanderview: I don't have security clearance to make that change, it's down to slightlyoff

[06:33:38.0000] <wanderview>
k, np

[07:19:58.0000] <annevk>
foolip: there's a compat problem with getElementById

[07:20:08.0000] <annevk>
/me tries to remember

[07:23:40.0000] <foolip>
annevk: a problem if it's on Element is what the spec claims

[07:26:17.0000] <foolip>
/me commented and leaves for the day

[07:29:28.0000] <rubys>
Domenic: https://url.spec.whatwg.org/interop/test-results/?select=current - still early, buggy; but should be heading in the direction you were looking for?

[07:57:17.0000] <Domenic>
hgl: incorrect

[08:05:55.0000] <annevk>
rubys: how problematic is it for me to continue patching the current parser?

[08:06:23.0000] <annevk>
I'd like to fix fragment parsing to unblock some people

[08:09:50.0000] <rubys>
annevk: go for it.  Does it change test results?

[08:10:06.0000] <annevk>
rubys: yeah it would

[08:10:34.0000] <rubys>
can you update the test results at the same time?

[08:10:40.0000] <annevk>
rubys: also, I'll do it tomorrow likely since I'm not sure I've more time today

[08:10:54.0000] <annevk>
rubys: I will do that, but that's a distinct PR right?

[08:10:59.0000] <annevk>
to web-platform-tests?

[08:11:14.0000] <rubys>
yes, that's a distinct PR.

[08:11:30.0000] <annevk>
ok

[09:03:32.0000] <smaug____>
whaaat,  https://code.google.com/p/chromium/codesearch#chromium/src/third_party/WebKit/Source/core/dom/ContainerNode.cpp&rcl=1418267803&l=693

[09:03:39.0000] <smaug____>
that is crazy

[09:27:55.0000] <slightlyoff>
wanderview: DM me?

[09:27:55.0000] <krijnhoetmerbot>
MikeSmith: I'll think about you when I get filthy rich! :)

[09:38:40.0000] <annevk>
about:permissions <3

[09:46:39.0000] <wanderview>
annevk: is that new?

[09:46:52.0000] <annevk>
wanderview: I don't know

[09:47:05.0000] <wanderview>
its nice... never seen it before, though

[09:47:32.0000] <annevk>
it misses a bunch of things, and usability is not great, but this is a good start at addressing this problem

[09:52:09.0000] <annevk>
wanderview: looks quite old looking at open bugs

[09:52:19.0000] <wanderview>
ah

[09:53:59.0000] <Domenic>
wow, I have never seen about:permissions either

[09:54:36.0000] <rubys>
Dominic: did you see https://url.spec.whatwg.org/interop/test-results/ ?

[09:54:58.0000] <annevk>
that but better is what the web needs

[09:55:37.0000] <Domenic>
rubys: yes, super-helpful :)

[09:56:31.0000] <Domenic>
rubys: a lot of the IE failures are presumably due to their disconnected <a> bug?

[09:56:39.0000] <rubys>
no, I worked around that

[09:56:55.0000] <Domenic>
oh interesting

[09:57:10.0000] <Domenic>
in that case stuff like https://url.spec.whatwg.org/interop/test-results/c8fef9a8b6?select=current is just bizarre

[09:57:34.0000] <Domenic>
i wonder if IE technical preview is better...

[09:57:54.0000] <wanderview>
annevk: I think maybe about:permissions is the same code driving the per-page info box (click the page lock icon in the url bar and more information button)

[09:58:01.0000] <rubys>
dominic: looks like I need to play with .htaccess a bit to make urls like that one work

[09:58:28.0000] <Domenic>
oh huh yeah I just copied the URL bar

[09:58:38.0000] <rubys>
since it is interactive, you can do things like "all current browsers vs IE": https://url.spec.whatwg.org/interop/test-results/?select=current&baseline=ie

[09:58:46.0000] <rubys>
Dominic: what you did, I want to enable.  I will fix.

[09:59:01.0000] <annevk>
wanderview: that dialog is so slow due to e10s :-(

[09:59:11.0000] <wanderview>
yea...

[09:59:14.0000] <Domenic>
"/test.txt"	http://www.example.com/test	is the test I found surprising that IE fails

[11:14:38.0000] <JakeA>
annevk: I owe you a ticket on ServiceWorkerClient to WindowClient etc. It's my tomorrow morning. Sorry for the delay.

[11:14:46.0000] <JakeA>
Also going to look at clients.claim()

[11:17:40.0000] <annevk>
JakeA: sgtm

[12:30:37.0000] <aklein>
smaug____: that appendChild "nothing to do" line dates back at least to http://trac.webkit.org/changeset/1024

[12:30:51.0000] <aklein>
bz, annevk: ^^ for possible amusement value

[12:31:10.0000] <aklein>
13 years ago (!)

[12:37:16.0000] <smaug____>
hmm, when did Apple tell about Safari

[12:37:27.0000] <smaug____>
I thought ~2004

[12:37:54.0000] <smaug____>
no, 2003

[12:40:29.0000] <aklein>
it's hard to tell from that patch whether this hack was also in khtml at that point or whether it was added in this revision

[13:55:15.0000] <terinjokes>
anyone know what the discussion on the lack of headers in beacon came from?

[14:00:03.0000] <annevk>
https://twitter.com/mikewest/status/543139903933280256 (mainly replies) :/

[14:02:04.0000] <tantek>
The CR publishing will continue until the formal objections start?

[14:02:55.0000] <Ms2ger>
s/until the formal objections start//

[14:03:26.0000] <annevk>
Publishing will continue until editors give up

[14:03:27.0000] <tantek>
censorship!

[14:04:06.0000] <annevk>
But mainly, it seems bad to publish something as CR if you know it's not actually a workable solution

[14:04:40.0000] <tantek>
annevk: correct. it is against W3C process to even go to Last Call if there are known substantial open issues.

[14:04:50.0000] <tantek>
nevermind CR.

[14:04:53.0000] <tantek>
but even the new LCCR.


2014-12-12
[17:26:17.0000] <Domenic>
TabAtkins: best practices for abbreviated <dfn>s in bikeshed specs/specs in general? I am thinking "A <dfn>exclusive stream reader</dfn> or <dfn>reader</dfn> is..." but maybe the second one shouldn't be <dfn>ed?

[17:39:27.0000] <TabAtkins>
Domenic: Use a long enough name that it stands a good chance of being globally unique; makes everyone's lives easier.  If you want to use a shorter term within your spec, use the local-title='' attribute, which'll create linking text solely for local autolinks, without exporting.

[17:40:14.0000] <TabAtkins>
So <dfn export local-title="reader">exclusive stream reader</dfn> will give you the long term for autolinking from elsewhere, and the short term locally for convenience.

[17:40:29.0000] <Domenic>
OK. And just remove the <dfn> around the word "reader" later in the sentence?

[17:42:28.0000] <TabAtkins>
yeah.

[17:42:39.0000] <Domenic>
sgtm

[17:43:04.0000] <Domenic>
all of my stuff is <dfn>s so at some point I need to go change them into <dfn export>s

[17:43:07.0000] <TabAtkins>
Alternately, keep the <dfn> around reader, just don't export it.  It'll only be autolinkable if people specify they want it from the spec.

[17:43:13.0000] <TabAtkins>
Yeah.

[01:43:48.0000] <Ms2ger>
zcorpan, http://dev.w3.org/csswg/cssom/#dom-cssstyledeclaration-item doesn't say what happens for out-of-range arguments

[01:47:06.0000] <zcorpan>
Ms2ger: can you file a bug?

[01:47:56.0000] <Ms2ger>
Sure

[01:48:10.0000] <Ms2ger>
I see https://www.w3.org/Bugs/Public/show_bug.cgi?id=27590 already exists for the other thing that confused me :)

[01:48:10.0000] <zcorpan>
thx

[01:51:38.0000] <Ms2ger>
annevk, r? https://critic.hoppipolla.co.uk/r/3473

[01:57:40.0000] <annevk>
oh shit, I didn't realize you were just moving things

[01:57:42.0000] <annevk>
oh well

[02:19:21.0000] <Ms2ger>
annevk, well, not sure if anyone's reviewed it before :)

[02:25:12.0000] <Ms2ger>
annevk, trying to figure out where the normative requirement is exactly...

[02:25:26.0000] <Ms2ger>
Is it "If the CORS flag is set and a CORS check for request and response returns failure, return a network error." in Fetch?

[02:32:25.0000] <annevk>
Ms2ger: actually, I wonder whether that test is correct at all

[02:32:45.0000] <annevk>
Ms2ger: it looks bogus

[02:33:25.0000] <Ms2ger>
Hrm

[02:33:26.0000] <annevk>
Ms2ger: at the time XHR does send(); it should issue a CORS-with-forced-preflight

[02:33:33.0000] <annevk>
Ms2ger: due to event listeners being attached

[02:33:40.0000] <annevk>
Ms2ger: which would make progress events work

[02:33:59.0000] <Ms2ger>
Isn't that only with event listeners on xhr.upload?

[02:34:14.0000] <annevk>
Ms2ger: oh good point

[02:34:39.0000] <annevk>
Ms2ger: okay so yeah, this is about failing before any progress tasks would be queued

[02:40:44.0000] <Ms2ger>
annevk, so is that covered by the bit I quoted?

[02:40:52.0000] <Ms2ger>
/me still doesn't know his way around Fetch

[02:55:15.0000] <smaug____>
/me has still no idea how Fetch works

[02:56:14.0000] <smaug____>
goal for the next year, try to understand what Fetch is about :)

[03:31:28.0000] <annevk>
Ms2ger: yeah

[03:41:16.0000] <Ms2ger>
annevk, okay, thanks

[04:15:46.0000] <ondras>
https://www.ups-scs.com/contact/technical_support_questions.html

[04:15:51.0000] <ondras>
nice Browser Type options

[04:27:43.0000] <annevk>
Anyone here familiar with bikeshed?

[04:27:51.0000] <annevk>
I'm getting "FATAL ERROR: Functions/methods must end with () in their linking text, got 'href'." and I've no idea what is wrong

[04:32:26.0000] <zcorpan_>
annevk: it's expecting <dfn>href()</dfn>. maybe change the dfn type (don't remember which attribute to change the type)

[04:32:56.0000] <annevk>
I don't even know how that can happen since I'm not changing any of that

[04:33:06.0000] <annevk>
I think rubys must be using a different version of bikeshed

[04:33:16.0000] <annevk>
*sigh*

[04:34:41.0000] <annevk>
Okay so something is wrong with "stringifier"

[04:50:51.0000] <annevk>
I pushed a PR against whatwg/url... Hopefully this gets fixed somehow

[05:36:07.0000] <rubys>
fdd7aa2dfce7b2ed8b8f00c7dc628aeada61fad6 is the first bad commit

[05:36:08.0000] <rubys>
commit fdd7aa2dfce7b2ed8b8f00c7dc628aeada61fad6

[05:36:08.0000] <rubys>
Author: Tab Atkins <jackalmage⊙gc>

[05:36:08.0000] <rubys>
Date:   Wed Dec 3 11:24:08 2014 -0800

[05:36:08.0000] <rubys>
    Add stringifier to the functionish types. Use construct.methodName, per plinss recommendation.

[05:36:08.0000] <rubys>
:040000 040000 cad74a9ec249d4cd7f358bb2b26a651e49f711c2 9bd6d22e2d39f6393c90f4be02d684c2e05a299c M	bikeshed

[05:36:08.0000] <rubys>
bisect run success

[05:44:55.0000] <annevk>
Maybe bikeshed should have a pre/postcommit hook to make sure it doesn't actually break any specs

[05:46:34.0000] <JakeA>
annevk: is there a collective term for requests that may potentially create a new client?

[05:46:50.0000] <annevk>
potentially?

[05:47:12.0000] <JakeA>
annevk: I guess the only potential is embed

[05:47:17.0000] <JakeA>
(and object)

[05:47:46.0000] <annevk>
Commented out I have this:

[05:47:49.0000] <JakeA>
And we ignore those in ServiceWorker at the moment

[05:47:49.0000] <annevk>
<p>A <dfn>client request</dfn> is a <span title=concept-request>request</span> whose

[05:47:49.0000] <annevk>
<span title=concept-request-context>context</span> is one of <i title>child</i>,

[05:47:49.0000] <annevk>
<i title>navigate</i>, <i title>popup</i>, and <i title>sharedworker</i>.

[05:48:07.0000] <annevk>
but that seems out of date with the contexts we have

[05:48:19.0000] <JakeA>
Yeah, needs to include form, anchor etc

[05:48:19.0000] <annevk>
And the opposite was "resource request"

[05:48:27.0000] <JakeA>
Client request works for me

[05:48:40.0000] <JakeA>
I'll write up a ticket

[05:49:04.0000] <JakeA>
(with the complete list of contexts)

[05:50:43.0000] <rubys>
got a minimal test case for the bikeshed breakage, will open an issue.  I don't see a workaround as being possible.

[05:54:37.0000] <JakeA>
annevk: https://www.w3.org/Bugs/Public/show_bug.cgi?id=27595

[05:55:01.0000] <rubys>
https://github.com/tabatkins/bikeshed/issues/307

[05:59:08.0000] <annevk>
rubys++

[05:59:49.0000] <annevk>
JakeA: yeah, I'm not sure about your open question

[06:00:19.0000] <JakeA>
embed/object? They could be "potentially client requests"

[06:00:40.0000] <JakeA>
A different collection

[06:00:45.0000] <annevk>
I think plugin is fetches from a plugin

[06:01:00.0000] <annevk>
If the plugin uses the browser's network stack

[06:01:09.0000] <JakeA>
…then it's a resource

[06:01:11.0000] <JakeA>
cool

[06:01:38.0000] <annevk>
Would need to check with Mike to be sure, but I think that's correct, yes

[06:01:50.0000] <annevk>
"annoying requests" for object/embed

[06:02:41.0000] <annevk>
clientcurious

[06:02:46.0000] <JakeA>
haha

[06:06:29.0000] <annevk>
JakeA: oh btw, per some feedback from Domenic and TabAtkins I might end up renaming all the /context/ things to "context" so prose and enums match

[06:08:06.0000] <JakeA>
annevk: I don't follow, give me an example

[06:11:02.0000] <annevk>
JakeA: currently the spec has /form/, it'll become "form"

[06:11:46.0000] <annevk>
JakeA: I guess serviceworker as client request makes sense, it will just never have an associated service worker

[06:13:05.0000] <JakeA>
annevk: Yeah, I was thinking what new Request().client would be within a ServiceWorker

[06:14:08.0000] <annevk>
JakeA: I thought .client was on FetchEvent?

[06:17:02.0000] <JakeA>
annevk: yeah, but https://github.com/slightlyoff/ServiceWorker/issues/318 suggests request is better?

[06:18:48.0000] <annevk>
Ah right, so if client as a thing is only ever going to be useful in the context of a service worker, perhaps putting it on FetchEvent is not too bad

[06:19:13.0000] <annevk>
And if we decide that it is useful outside of SW, we could always make FetchEvent.prototype.client's getter forward

[06:21:27.0000] <JakeA>
Yeah, I'm fine with that

[06:22:23.0000] <annevk>
JakeA: actually, I thought we would not have .client there and maybe at some point have a handle back to the fetcher

[06:22:41.0000] <annevk>
JakeA: and only have clients exposed on the global

[06:23:03.0000] <JakeA>
annevk: true https://github.com/slightlyoff/ServiceWorker/issues/575

[06:24:22.0000] <JakeA>
annevk: hah, I was hovered over the "Comment" button there when yours appeared

[06:24:29.0000] <annevk>
heh

[06:25:17.0000] <annevk>
Is the subscribe feature in GitHub new? Seems useful

[06:30:46.0000] <annevk>
rubys: so some other things that broke are links to URLSearchParams, they would normally be #urlsearchparams whereas #dom-urlsearchparams would be a link to its constructor definition

[06:31:22.0000] <annevk>
rubys: it seems #url also no longer links to the URL interface

[06:31:49.0000] <annevk>
rubys: and the URL constructor is now #dom-url-url...

[06:32:30.0000] <rubys>
annevk: I've got some things I need to attend to today (for wife not work), so bug reports would be helpful.

[06:33:01.0000] <annevk>
rubys: sure

[07:31:25.0000] <TabAtkins>
annevk: More people use Bikeshed than I even know about, so not breaking "any" specs as I update and tweak is likely impossible. ^_^

[07:31:45.0000] <TabAtkins>
annevk: But I do run Web Animations regularly, as it tends to use more complex things.  I might add url to that regimen.

[07:33:10.0000] <TabAtkins>
annevk: The #dom-foo pattern for interface names is standard practice (though obviously it can be overridden by you).  Dunno what standard practice is for constructor IDs, but it's currently treated as a method of the same name as the interface, thus the ID you see.

[07:33:45.0000] <Ms2ger>
TabAtkins, it's not standard practice in specs that define interfaces

[07:34:01.0000] <TabAtkins>
Ms2ger: Yes, it is?

[07:35:01.0000] <Ms2ger>
https://wiki.whatwg.org/wiki/Specs/howto#Definitions

[07:36:01.0000] <TabAtkins>
Hm, ok.

[07:36:11.0000] <TabAtkins>
Wonder why I was told to implement it this way originally.

[07:38:25.0000] <TabAtkins>
annevk: Remember that I try hard to make sure that Bikeshed recovers gracefully from fatal errors, so if something is erroring wrongly, you can always do a force-generate until I fix the issue.

[07:45:38.0000] <annevk>
TabAtkins: make force-generate?

[07:46:05.0000] <TabAtkins>
annevk: Your makefile is something y'all did on your own, I have no idea what options y'all have there.

[07:46:12.0000] <annevk>
I see

[07:46:18.0000] <TabAtkins>
But it's just passing the -f flag right after the command, `bikeshed -f spec`

[07:46:24.0000] <annevk>
Okay

[07:46:48.0000] <TabAtkins>
(Your makefile should probably force-generate by default.)

[07:47:29.0000] <annevk>
TabAtkins: the convention I know is #interfacename (interface) and #dom-interfacename (constructor), #dom-interfacename-member (member)

[07:47:44.0000] <TabAtkins>
Yeah, Ms2ger pointed me to the wiki page.

[07:48:00.0000] <TabAtkins>
For some reason I was instructed differently when I was first putting together ID generation for IDL stuff.

[07:48:39.0000] <annevk>
:-(

[07:49:17.0000] <rubys>
I'd prefer not to pass the -f flag.  Bikeshed detected errors should be fixed.  99% of the time, the right fix is to change the spec.

[07:50:01.0000] <rubys>
as to definitions, my preference is that the url standard not be an exception.  If that means that there is a one time cost to move to what others have agreed to, I think we should do that.

[07:50:03.0000] <TabAtkins>
rubys: I dunno make. Is it possible to add some way to force-generate via make?

[07:50:16.0000] <TabAtkins>
rubys: yeah, moving IDs is no problem.

[07:50:28.0000] <rubys>
I can always do a force generate "manually" when I need to debug a problem.

[07:50:38.0000] <TabAtkins>
rubys: But annevk doesn't know how to do that.

[07:50:52.0000] <rubys>
s/doesn't/didn't/ :-)

[07:51:45.0000] <annevk>
rubys: define "others" and see the above page

[07:52:42.0000] <rubys>
annevk: I'm not going to define others. :)  If the right fix is that bikeshed should change, then that's ok with me too.

[07:53:02.0000] <annevk>
Pretty sure the conventions used by URL predate bikeshed

[07:53:09.0000] <TabAtkins>
the only other big user of IDL so far is Web Animations.  It's fine to move Bikeshed.

[07:53:25.0000] <TabAtkins>
There's not a ton of cross-linking of IDL between specs yet, so it's a good time to nail these down.

[07:53:30.0000] <rubys>
+1

[07:53:50.0000] <TabAtkins>
And fixing is just a matter of regenning if any links do break.

[08:43:43.0000] <TabAtkins>
What in the hell? Why does github use flash somewhere on the page, and why is it suddenly crashing in my Chrome and preventing me from interacting with the page?

[08:44:25.0000] <Domenic>
TabAtkins: uses flash to make clipboard copy buttons work

[08:44:58.0000] <TabAtkins>
Ah, kk. Well, for some reason it's crashing in my ubuntu chrome. >_<

[08:48:05.0000] <rubys>
fwiw, github works fine here (ubuntu 14.04, 64-bit intel desktop)

[09:23:04.0000] <TabAtkins>
Annoyingly, that stringifier error was hitting codepaths that *didn't* fail gracefully when you forced the generation.  That's fixed now. ^_^

[09:23:44.0000] <TabAtkins>
rubys: Sorry about not testing the stringifier-attribute form. I don't recall ever seeing it in real life before.

[09:35:00.0000] <jgraham>
You know I would be more sympathetic to web crypo going through the process too fast if I hadn't sat in a room where everyone agreed that a testsuite was needed but refused to actually commit any resources to creating one.

[09:35:59.0000] <boogyman>
haha

[09:36:02.0000] <boogyman>
:(

[09:59:51.0000] <Domenic>
there's an anandtech expose waiting to be written about specs being pushed through the process too fast

[10:02:01.0000] <annevk>
From what I gather from tweets from sleevi it was not just things being pushed fast

[10:02:14.0000] <annevk>
That WG seemed rather broken

[10:03:20.0000] <TabAtkins>
Yeah, there seemed to be a lot of "okay, we know this is broken, but we want to implement it anyway, so it needs to be in the spec".

[10:05:44.0000] <annevk>
And a lot of spurious arguments around crypto algorithms

[10:10:06.0000] <TabAtkins>
Basically it appeared there were several people in the group who didn't care about security, but rather about matching some existing crypto impl, or something like that.

[10:10:24.0000] <TabAtkins>
And the chair didn't suppress them sufficiently.

[10:15:12.0000] <annevk>
For anyone interested in searchParams and URLSearchParams: https://www.w3.org/Bugs/Public/show_bug.cgi?id=27596

[10:59:03.0000] <Domenic>
annevk: ugh why can't we have nice things

[11:00:19.0000] <boogyman>
um, 1:1 ? that sounds bad

[11:02:29.0000] <Domenic>
annevk: I don't understand why your solution of replacing hte object upon navigation doens't work

[11:57:45.0000] <annevk>
boogyman: why?

[11:58:47.0000] <annevk>
Domenic: Location is associated with a document's browsing context's active document; we could tie URLSearchParams to document, but what happens if you hold a reference to an older URLSearchParams object before you navigated and start to mutate it?

[11:59:33.0000] <annevk>
Domenic: that is why I came up with the idea of having an immutable variant

[12:00:24.0000] <Domenic>
annevk: is there something wrong the answer "the location object's other properties update, but otherwise nothing happens"?

[12:00:32.0000] <Domenic>
s/the location object/the old location object/

[12:04:15.0000] <annevk>
Domenic: there's no old Location object

[12:07:14.0000] <Domenic>
well, presumably someone could have saved it somewhere?

[12:07:27.0000] <Domenic>
or is there really only one window.location across navigations

[12:07:27.0000] <annevk>
Domenic: it doesn't change identity afaik

[12:07:31.0000] <Domenic>
ah

[12:07:50.0000] <Domenic>
well i guess then i'd say disassociate the old one so that mutating it does nothing to the location

[12:08:00.0000] <annevk>
Domenic: we really need some diagrams for this set of objects at some point

[12:08:01.0000] <Domenic>
kind of strange but it is explicable

[12:08:08.0000] <Domenic>
+Infinity

[12:08:29.0000] <annevk>
Domenic: I'm hoping to make some once I learn about a good tool since I keep messing up even the basics such as Window vs WindowProxy

[12:09:08.0000] <Domenic>
I used http://gliffy.com/ for streams but their SVG support got worse recently so I had to re-code it all by hand

[12:09:53.0000] <annevk>
Yeah, I guess disassociation is what's needed, but that breaks "fast back" (or whatever it's called) in browsers that support such a thing

[12:10:06.0000] <Domenic>
They used data: URL images for arrows :(. Whereas you can just use <path marker-end> in SVG. https://github.com/whatwg/streams/blob/master/readable-stream.svg?short_path=48eff29#L56

[12:10:11.0000] <Domenic>
hmmmmm

[12:10:12.0000] <boogyman>
annevk: because so many languages already have support for domain.tld/?a=foo&a=bar&a=baz unless I am mistaken about that ticket.

[12:10:42.0000] <annevk>
boogyman: 1:1 is about the URL object and the URLSearchParams object

[12:10:43.0000] <Domenic>
i don't really understand fast back and how it impacts standards

[12:10:51.0000] <Domenic>
i guess html has a bfcache in the spec?

[12:10:52.0000] <annevk>
boogyman: not about how many parameters you can have

[12:10:56.0000] <annevk>
Domenic: yup

[12:11:07.0000] <Domenic>
i don't really feel like reading up on all that today :P

[12:11:20.0000] <annevk>
Domenic: I guess you could restore the association, but that seems really sketchy

[12:11:38.0000] <Domenic>
it's all pretty explicable I think in JS terms. (With internal slots/weak maps)

[12:12:01.0000] <Domenic>
Would want to write it out to be sure but if that's what you mean by sketchy, seems ok

[12:13:05.0000] <boogyman>
annevk: if the URL object is a hashmap, when would the various components ever not be 1:1 ?

[12:30:07.0000] <rubys>
TabAtkins: I'm still seeing the problem:

[12:30:14.0000] <rubys>
FATAL ERROR: Functions/methods must end with () in their linking text, got 'href'.

[12:31:34.0000] <TabAtkins>
Yeah, it ain't fixed yet.

[12:31:44.0000] <TabAtkins>
Been traveling all morning

[12:32:02.0000] <TabAtkins>
I just fixed the part where it crashed if you forced it.

[12:32:48.0000] <rubys>
oh, nevermind.  I saw closed and thought it was fixed.  It was referenced by another issue, and that issue is closed.

[12:33:45.0000] <TabAtkins>
Yeah, I can fix it now that the other issue is fixed.

[12:34:24.0000] <rubys>
I'm not rushing you; I honestly misunderstood.

[12:35:10.0000] <TabAtkins>
Good, because I'm busy doing my nails right now and won't be able to type for an hour. ^_^

[12:39:27.0000] <Domenic>
Has anyone created a Firefox OpenSearch thing that restricts to html.spec.whatwg.org? I realized I'm appending "site:html.spec.whatwg.org" to many of my searches now

[12:40:02.0000] <Domenic>
I guess it doesn't look very hard https://developer.mozilla.org/en-US/Add-ons/Creating_OpenSearch_plugins_for_Firefox

[14:02:32.0000] <annevk>
The relationship between URL and URLSearchParams is currently N:1


2014-12-13
[09:33:31.0000] <bradleymeck>
Domenic: whats the reason behind exclusive streams? I only care because I often want to tee streams

[09:40:46.0000] <TabAtkins>
bradleymeck: It's so, when you're piping from an impl-provided source to an impl-provided sink, we can shortcut JS and do all the actual piping in the browser's own code, without worrying about some other code popping in and wanting to look at the stream as well.

[10:16:34.0000] <zewt_>
i wonder how many "download.htm" files i've save-as'd over the years

[10:35:14.0000] <Domenic>
bradleymeck: what TabAtkins said. Also it's useful for building abstractions like https://github.com/whatwg/streams/blob/exclusive-reader/Locking%20Design%20Doc.md#level-1-using-readers-directly


2014-12-14
[09:18:56.0000] <xamd>
hi all, do somebody can help with appcache + node-webkit? I'm trying to add manifest to my project and for some reason it's not recognizable by the app.


2014-12-15
[05:54:10.0000] <fresco>
Would it be possible to get a user account for the WHATWG wiki?

[05:54:43.0000] <fresco>
I'm planning to add the citation_* meta tags to the MetaExtensions page (or at least propose them on the discussion page)

[05:56:57.0000] <fresco>
There may be resistance to adding them as they duplicate DC meta tags in some cases, but they are in wide use and are recommended for use by Google Scholar https://www.google.com/intl/en/scholar/inclusion.html#indexing (which is the closest thing to a specification that exists for them)

[06:01:47.0000] <zcorpan>
fresco: what username and email do you want for the account?

[06:42:18.0000] <MikeSmith>
fresco: the documentation at https://www.google.com/intl/en/scholar/inclusion.html#indexing is better than we have for 90% of the stuff that's already registered

[06:43:39.0000] <MikeSmith>
and those citation_* values to me see a lot easier to read than the DC things

[06:44:29.0000] <MikeSmith>
and if Google Scholar actually consumes the citation_* stuff and does something with it, that all sounds good

[06:46:21.0000] <fresco>
I've added a note to the discussion page as well, as some of them - although being widely used - are not formally documented anywhere

[06:46:55.0000] <MikeSmith>
yep, just now read that too

[06:47:05.0000] <MikeSmith>
thanks for taking time to add this stuff

[06:47:27.0000] <MikeSmith>
I'll get it pushed out to the w3c validator later today or tomorrow

[06:48:24.0000] <fresco>
Brilliant, thanks Mike

[07:41:49.0000] <JakeA>
TabAtkins: Didn't realise docment.fonts.check wouldn't accept "helvetica", and it had to be "10px helvetica" or something like that. Why is the size needed?

[07:54:02.0000] <zcorpan>
JakeA: the spec says to parse as the 'font' property, which requires a size. i don't know the reasoning here though

[07:55:01.0000] <JakeA>
zcorpan: Yeah, followed the spec there. I never really understood why font: requires it either, but seems to make even less sense in the JS API

[07:55:38.0000] <JakeA>
It's not like you can use a different font for different sizes

[07:55:42.0000] <JakeA>
(is it?)

[07:56:36.0000] <JakeA>
no, you can't

[07:57:59.0000] <zcorpan>
JakeA: 'font' requires it to disambiguate font-family from the other properties iirc

[07:58:40.0000] <JakeA>
ahh ok, guess the same reason applies to the JS api

[07:58:43.0000] <zcorpan>
but you can use different fonts for different weights at least

[07:58:45.0000] <JakeA>
feels like a hack though

[07:58:46.0000] <JakeA>
yeah

[08:02:11.0000] <zcorpan>
is the API shipped anywhere?

[08:02:29.0000] <JakeA>
Yeah, it's in Chrome stable

[08:02:33.0000] <mathiasbynens>
annevk (if you’re reading logs): http://l0.cm/encodings/table/

[08:32:20.0000] <TabAtkins>
JakeA: The parsing of 'font' is complicated and stupid, but the rules ar enecessary.

[08:33:18.0000] <TabAtkins>
The size is the last component before the name, and it's distinguishable from all the preceding values, so you can tell when you've hit it, and when you have to switch to the "collect all the tokens and try to parse them as a font-family name" part of the property.

[08:33:35.0000] <TabAtkins>
Because the font-family part, stupidly, allows idents, numbers, and dimensions.

[08:34:49.0000] <TabAtkins>
Now, for check(), the font-family name isn't enough - you want to know that the *bold* face of your font is loaded, for example.  So you need the whole font shorthand. But that means you have to include the completely worthless font-size in there, which is confusing and annoying, but unavoidable.

[08:35:41.0000] <TabAtkins>
This is just one of the CSS mistakes from before we knew better.  (In particular, we now know that all values coming from the outside world should be strings in the CSS syntax, because we can't predict how they'll parse.  We just ran into that with lang values again.)

[08:44:43.0000] <jarek>
Hi

[08:45:09.0000] <jarek>
is anybody working on the next version of Touch Events spec?

[08:47:45.0000] <JakeA>
TabAtkins: Makes sense. It's a shame, but unavoidable unless .check has stricter parsing (which would break over use cases)

[08:48:05.0000] <TabAtkins>
Yup.

[08:49:55.0000] <jarek>
"The W3C Web Events Working Group was closed on 5 November 2013, having successfully published the Touch Events specification as a Recommendation. More advanced work on touch, pointer and mouse events continues in the Pointer Events Working Group."

[08:50:23.0000] <jarek>
^ is this still actual? Both Google and Apple made it clear they will never implement pointer events

[08:51:43.0000] <jarek>
s/never/unlikely

[08:52:50.0000] <jgraham>
My impression is that the problem with touch/pointer interaction standardisation is that several players are actively working against standardisation

[08:53:36.0000] <jgraham>
So I'm not sure that it really matters which group is doing the work (or not)

[08:53:53.0000] <jgraham>
I could be wrong though, I don't really follow it

[08:54:32.0000] <TabAtkins>
The situation is... complicated, but sure, that's not a totally inaccurate characterization.

[08:57:16.0000] <jarek>
Google is cherry-picking some stuff from the Pointer Events spec (like touch-action and navigator.maxTouchPoints are implemented)

[08:58:59.0000] <jarek>
I would really prefer to have everything defined in one place

[09:01:55.0000] <jarek>
jgraham: what do you mean specifically by "working against standardisation"? Apple and its patent claims?

[09:02:11.0000] <jgraham>
I don't mean anything specifically

[09:22:14.0000] <fresco>
There are some link relations in https://tools.ietf.org/html/rfc5829 that I'd like to add to http://microformats.org/wiki/existing-rel-values#HTML5_link_type_extensions so they can be used in HTML. Would that be appropriate?

[09:22:56.0000] <fresco>
They are already included in https://www.iana.org/assignments/link-relations/link-relations.xhtml

[09:55:30.0000] <TabAtkins>
fresco: Seems reasonable.

[11:19:02.0000] <rubys>
TabAtkins: you around?  I now get a stack traceback.

[11:19:27.0000] <TabAtkins>
man what

[11:19:28.0000] <rubys>
AttributeError: 'ExtendedAttribute' object has no attribute 'arguments'

[11:19:33.0000] <TabAtkins>
Man what.

[11:19:48.0000] <rubys>
$ man what

[11:19:48.0000] <rubys>
No manual entry for what

[11:19:49.0000] <TabAtkins>
Okay, I'll check this out. I tested this on a simple example that should have matched your stuff. :(

[11:20:09.0000] <TabAtkins>
/me is gonna install a man entry for "what" that just says "lol i dunno"

[11:28:32.0000] <TabAtkins>
Ah, good, this isn't realted to stringifiers at all, it's something new in the updated widlparser.

[11:33:12.0000] <TabAtkins>
rubys: Okay, fixed, sorry. Exercising a new code path.

[11:33:27.0000] <rubys>
/me shrugs

[11:33:27.0000] <TabAtkins>
rubys: There's now some definitional errors, is all.  Define href as an attribute, not a stringifier.

[11:33:55.0000] <rubys>
bugs happen. what matters is that the maintainers are responsive.  And you have been VERY responsive.  THANKS!

[11:34:28.0000] <TabAtkins>
And later, when you're defining "stringifier" itself for URLSearchParams, instead do a "dfn" type definition for "stringification behavior".

[11:34:43.0000] <TabAtkins>
This is not yet documented, but it's what's needed to link up with the plain "stringifier;" syntax.

[11:35:13.0000] <TabAtkins>
<dfn dfn for=URLSearchParams>stringification behavior</dfn>

[11:35:50.0000] <rubys>
now I'm back to:

[11:35:52.0000] <rubys>
FATAL ERROR: Functions/methods must end with () in their linking text, got 'href'.

[11:36:02.0000] <rubys>
I presume that's because I haven't done the change above?

[11:36:19.0000] <TabAtkins>
Yup.

[11:36:22.0000] <rubys>
TabAtkins: perhaps it would be easier if you were to make a pull request?

[11:36:36.0000] <TabAtkins>
Sure, one sec. I've got it building cleanly now.

[11:39:07.0000] <TabAtkins>
done

[11:40:29.0000] <TabAtkins>
/me desperately needs to document how to dfn/link to stringifiers; the four different syntax forms make this very confusing.

[11:40:46.0000] <rubys>
/me on a call, just a sec

[11:46:50.0000] <TabAtkins>
/me also wants to spend some time converting all your IDL links to the {{foo}} shorthand.

[11:47:00.0000] <TabAtkins>
But I wont' do that this week, as this is a fantasai work week.

[13:24:21.0000] <annevk>
mathiasbynens: I had seen that before, wasn't quite sure what to do with it


2014-12-16
[18:03:09.0000] <MikeSmith>
away

[22:17:28.0000] <hgl>
was reading through the whatwg dom spec, love the jquery-like ChildNode interface, any plan to add an .index() method that returns node's index? This would be very helpful when dealing with ranges.

[22:23:46.0000] <caitp>
what's the use-case for that, hgl?

[22:24:20.0000] <caitp>
why not just `for node of SomeNodeList/HTMLCollection`

[22:24:55.0000] <hgl>
when you want to change a range's start or end to some node. range.setStart(node.parentNode, node.index())

[22:25:24.0000] <hgl>
using a loop, you no longer have a one-liner.

[22:26:00.0000] <caitp>
oh, you mean actual DOM ranges

[22:26:09.0000] <hgl>
yes. :)

[22:27:02.0000] <caitp>
I think you'd want to come up with a compelling use case, though

[22:27:37.0000] <caitp>
otherwise I can see "no we only want to give people primitives to do cool things otherwise we're just adding complexity for nothing rawrrrr" answers to it :(

[22:28:15.0000] <caitp>
because to do that, there are basically two approaches --- either the engine does the computation all the time and the performance sucks,

[22:28:54.0000] <caitp>
or some caching happens, and the cache probably lives in rare data and kind of sucks for that reason too

[22:29:37.0000] <caitp>
i dunno, maybe file a bug asking for such a method, but I don't feel like it would go anywhere without a use case :'(

[22:32:09.0000] <hgl>
but, to be honest, if the rule is to only provide primitives, node.remove() shouldn't be there, we already have node.parentNode.removeChild(node)

[22:33:04.0000] <caitp>
i think that argument has probably been made

[22:33:48.0000] <caitp>
i dunno, who knows what could happen

[22:33:59.0000] <hgl>
before and after are just sugar over documentfragment + appendChild

[22:34:44.0000] <caitp>
did you file a bug? =)

[22:34:51.0000] <hgl>
hehe, i will open an issue and try my luck then. :)

[22:35:05.0000] <hgl>
doing it, one minute

[22:38:47.0000] <hgl>
caitp, this is embarrassing, but which category should i file in? i only see DOM TS, doesn't seem to be the correct one.

[22:40:23.0000] <hgl>
caitp, never mind, it's in WebAppsWG

[22:44:28.0000] <hgl>
Done. https://www.w3.org/Bugs/Public/show_bug.cgi?id=27623

[23:43:40.0000] <zcorpan>
hgl: wouldn't it be nicer to do range.setStart(node.parentNode, node) ?

[23:48:21.0000] <zcorpan>
or maybe just range.setStart(node)

[23:53:45.0000] <hgl>
zcorpan,  but this might make the offset hard to control, sometimes your might want range.setEnd(node.parentNode, node.index() + 1) // or +2

[23:54:28.0000] <zcorpan>
hgl: range.setEnd(node.nextSibling)

[23:55:24.0000] <hgl>
zcorpan, hmm, sounds pretty good.

[23:56:37.0000] <hgl>
zcorpan, but it's not clear the range is after or before the node...

[23:57:07.0000] <hgl>
i mean the range end, for both setStart and setEnd

[23:57:55.0000] <hgl>
wait a sec, we already have  setStartBefore and the likes.

[23:58:46.0000] <zcorpan>
ah. there you go

[23:58:54.0000] <hgl>
ok, i have no use index()..for now...

[00:00:27.0000] <hgl>
zcorpan, thank you for inspiring me. :)

[00:23:13.0000] <zcorpan>
krijnhoetmerbot: patch for the log's css: p { font:0.7em sans-serif }

[00:41:35.0000] <mathiasbynens>
zcorpan, krijnhoetmerbot: `html { font-family: sans-serif; } p { font-size: .9em; } ol { font-family: Consolas, monospace; }` IMHO

[02:46:25.0000] <annevk>
hgl: thanks for sorting out your own bug :-)

[04:14:32.0000] <rubys>
annevk: forgive me if this is a dumb question, but did you do a git pull before you ran make?

[04:15:06.0000] <annevk>
rubys: I ran Sync in the GitHub client

[04:15:24.0000] <annevk>
rubys: judging from the commits that should have given me bikeshed's latest

[04:15:50.0000] <rubys>
I'm not asking about a pull on bikeshed, I meant: did you pull the latest from whatwg/url?

[04:17:19.0000] <annevk>
rubys: ah I missed that

[04:17:34.0000] <annevk>
rubys: it seems there's still that difference with </main> between our copies :/

[04:18:02.0000] <rubys>
I never did get around to checking with my macbook.  I'll do that now

[04:18:11.0000] <rubys>
we may need TabAtkin's help

[04:19:00.0000] <annevk>
I wish the generated stuff from bikeshed used more newlines so you can actually read a diff about changes to generated sections...

[04:19:19.0000] <annevk>
I guess I can file a bug

[04:20:18.0000] <annevk>
https://github.com/tabatkins/bikeshed/issues/310

[04:21:39.0000] <rubys>
updated bikeshed and whatwg/url on my macbook; removed url.html; ran make then git diff: the only difference I get is the <time> element is updated to 16 December.

[04:22:40.0000] <rubys>
annevk: I have no idea what else to try.  What exactly is changed in your version?

[04:23:14.0000] <annevk>
I get a newline before <body class="h-entry status-LS">

[04:23:58.0000] <annevk>
And </main> is removed from before Conformance to be before References

[04:24:22.0000] <rubys>
wonder if we have a different htmlparser?

[04:24:37.0000] <annevk>
Which makes sense in a way, Conformance is part of the main document

[04:25:03.0000] <annevk>
Could be

[04:25:45.0000] <rubys>
I'm running with html5lib (1.0b3) on ubuntu

[04:26:13.0000] <rubys>
same on my macbook

[04:29:43.0000] <rubys>
annevk: https://www.w3.org/Bugs/Public/show_bug.cgi?id=27252 can be closed now?

[04:30:19.0000] <annevk>
rubys: yeah seems like it

[04:30:50.0000] <annevk>
rubys: I have no idea what version of html5lib I have; when I look on my MacBook for html5lib it only finds something that comes with web-platform-tests

[04:31:11.0000] <annevk>
rubys: I'm not terribly great at managing software packages

[04:31:44.0000] <rubys>
annevk what does "pip list | grep html5lib" say?

[04:32:07.0000] <annevk>
0.95

[04:32:37.0000] <rubys>
ok, I'm running with a newer version, and that could explain the diffs.  Try updating?

[04:33:18.0000] <annevk>
easy_install html5lib returns this version

[04:33:47.0000] <rubys>
I just realize that what I did was to use these instructions: https://wiki.whatwg.org/wiki/Anolis

[04:34:03.0000] <rubys>
git clone git://github.com/html5lib/html5lib-python.git; cd html5lib-python && sudo python setup.py install

[04:34:39.0000] <annevk>
I guess those are from when html5lib wasn't available over easy_install

[04:35:20.0000] <rubys>
Do we want to standardize on 0.95 or 1.03b3?

[04:36:49.0000] <annevk>
Somewhat curious what TabAtkins would have to say, but I think standardizing on whatever easy_install does would be simplest for new contributors

[04:40:00.0000] <rubys>
first I'll try backing out what I have to see if it really makes a difference

[04:42:20.0000] <rubys>
annevk: which is ... neither.  After uninstalling and reinstalling I get html5lib (0.999)

[04:42:41.0000] <rubys>
... and no change (other than the <time> element) from what I got before.

[04:43:23.0000] <rubys>
can you try uninstalling html5lib and reinstalling it?  It could be that <main> element support changed between 0.95 and 0.999...

[04:45:47.0000] <annevk>
done and you win

[04:46:52.0000] <rubys>
win?

[04:48:24.0000] <annevk>
rubys: sorry, had to run off for a bit; that was the difference

[04:48:44.0000] <rubys>
cool.  If you like, the templates can be changed.

[04:48:52.0000] <annevk>
rubys: the difference is now the <time> element change only

[04:50:01.0000] <annevk>
yeah, not in a great hurry with that

[05:23:28.0000] <jgraham>
So in the beginning there were Workers

[05:23:36.0000] <jgraham>
Then we got ServiceWorkers

[05:23:49.0000] <jgraham>
Now I see discussion of Service ServiceWorkers

[05:27:16.0000] <Ms2ger>
Hixie, ping (re example at https://html.spec.whatwg.org/multipage/#association-of-controls-and-forms)

[05:53:32.0000] <annevk>
Oh this is great, new html5lib changed attribute order

[05:53:56.0000] <annevk>
jgraham: we need to go deeper

[05:54:02.0000] <jgraham>
?

[05:58:58.0000] <annevk>
jgraham: service service service workers

[05:59:19.0000] <annevk>
jgraham: curious about the context of that though, I hadn't seen that

[05:59:20.0000] <gsnedders>
annevk: html5lib has had the same behaviour for attribute order for years now

[05:59:36.0000] <annevk>
gsnedders: 0.95 has been out of date for years I guess?

[05:59:58.0000] <gsnedders>
annevk: it's just that most of the tree data structures html5lib uses (like minidom, like lxml… don't preserve attribute order per their API)

[06:00:16.0000] <gsnedders>
annevk: almost three years old :)

[06:00:22.0000] <jgraham>
annevk: Sicking in dev.platform

[06:00:35.0000] <jgraham>
s/in /on /

[06:00:44.0000] <annevk>
gsnedders: I think I set this up when I got this Macbook from Mozilla, but maybe I did something else...

[07:09:39.0000] <annevk_>
Domenic: covariant? I'm not sure what that is but if WindowClient is a subclass of BasicClient/Client, then anything accepting BasicClient/Client also accepts WindowClient

[08:05:03.0000] <jamesheston>
I'm coding up a development blog and I was wondering if anyone had any tips on rendering syntactical code styles on the frontend.

[08:05:23.0000] <jamesheston>
Is there a javascript lib people usually use?

[08:06:19.0000] <annevk>
rubys: http://intertwingly.net/projects/pegurl/url-problem-statement.html why does it claim URL is based on IDNA2003?

[08:06:57.0000] <annevk>
rubys: it's based on UTS #46 which builds on IDNA2008

[08:07:17.0000] <gsnedders>
I thought IDNA2008 was a non-starter? What changed?

[08:07:24.0000] <rubys>
annevk: one sec, on a phone

[08:07:36.0000] <gsnedders>
Does UTS #46 avoid the breakage v. IDNA2003?

[08:07:41.0000] <annevk>
rubys: also "leaves out many topics" deserves to be elaborated as that might be a bug

[08:07:49.0000] <annevk>
gsnedders: yes

[08:08:00.0000] <annevk>
gsnedders: see blog posts on annevankesteren.nl

[08:09:40.0000] <annevk>
rubys: what's not really captured by tests is the encoding override

[08:10:03.0000] <annevk>
rubys: that along with handling code points not covered by the grammar was a significant motivator that we needed something new

[08:22:05.0000] <annevk>
"If the only thing keeping development of a standard in the W3C is the copyright license on the specification, then the W3C is doomed." -- http://lists.w3.org/Archives/Public/public-w3process/2014Dec/0078.html

[08:24:38.0000] <annevk>
rubys: also, in that document I don't think what is stated about the IRI group is correct

[08:24:53.0000] <annevk>
rubys: it might not have gotten the contributors or some such, but it definitely got all the feedback

[08:25:04.0000] <annevk>
rubys: including what would be needed to turn it into a success

[08:25:33.0000] <annevk>
rubys: both Hixie and I sent quite a few emails explaining that

[08:30:35.0000] <Domenic>
annevk: for many languages that is true in general but false for parametrized/generic types.

[08:32:00.0000] <annevk>
Domenic: I don't think I follow, but how did you think e.g. cloneNode(Node node, ...) worked?

[08:32:28.0000] <Domenic>
annevk: I believe it works for Node, wasn't sure it would work for sequence<Node>

[08:32:49.0000] <Domenic>
But I guess when you put it in Node terms it seems more obvious that it should work

[08:33:18.0000] <annevk>
NodeList baby

[08:33:55.0000] <annevk>
I have also done my email, but it took about half a day and I still have two left

[08:36:47.0000] <rubys>
annevk: ok, I'm back, you still around?

[08:41:42.0000] <Domenic>
rubys: fwiw good stuff on w3process

[08:42:05.0000] <rubys>
Dominic: for what good it will do.  But, thanks!

[08:43:05.0000] <rubys>
oh, cool, Chris Wilson engaged.

[08:44:16.0000] <rubys>
Mike Champion too

[08:58:31.0000] <Domenic>
annevk: btw, big +1 from me on the moz/web components blog post. it matches up with my personal thoughts very closely

[09:00:35.0000] <TabAtkins>
annevk: Yeah, for stability I use the option that serializes attributes alphabetically.

[09:01:34.0000] <jgraham>
Blog post?

[09:05:17.0000] <annevk>
rubys: yes

[09:05:28.0000] <annevk>
jgraham: https://hacks.mozilla.org/2014/12/mozilla-and-web-components/

[09:05:30.0000] <Hixie>
ms2ger: here

[09:06:10.0000] <rubys>
annevk: now back on the phone :-( but for this call, I can multi-task a bit

[09:07:05.0000] <rubys>
(1) what you are looking it is a quickly converted blog post of Larry Masinter into IETF RFC form.  Here is the original post: http://masinter.blogspot.com/2014/09/the-url-mess.html

[09:08:02.0000] <rubys>
I'll change it to say that URL-LS is based on UTS-46.  I'll drop "leaves out many topics" unless you have something that needs to be said?

[09:08:49.0000] <rubys>
2) encoding override is not yet implemented by my reference implementation; not sure whether this is a new topic or something you think should be mentioned in the internet draft?

[09:09:40.0000] <rubys>
3) what do you suggest be said about the IRI working group (again, I wasn't involved, and so what you see is Larry's text)

[09:10:02.0000] <annevk>
rubys: using the document encoding for the query component was a big part of how we noticed URI/IRI was broken

[09:10:58.0000] <annevk>
rubys: I guess the only topic the URL Standard currently doesn't tackle is URL comparison since most of the normalization steps happen as part of the parser and the browsers compare on the parsed result...

[09:11:16.0000] <annevk>
rubys: there's a plan to offer an API once the current API is a bit more widespread

[09:13:29.0000] <annevk>
rubys: I think what happened is that the IRI WG formed and Larry expected us not to just to provide feedback, but else help develop this document, which we were not super interested in at the time (my reason was mostly that I didn't want to write IETF documents since I don't like how they are formatted)

[09:14:05.0000] <rubys>
ok, off the phone

[09:14:33.0000] <rubys>
so, you are OK with the changes I said in #1?

[09:17:50.0000] <annevk>
rubys: yes

[09:18:35.0000] <rubys>
ok.  So for number 2, you are suggesting that the following sentence be reworded: "Despite years of development, the group didn't get the attention of those active in WHATWG, W3C or Unicode consortium, ..."?

[09:19:31.0000] <rubys>
would dropping "the group didn't get the attention of those active in WHATWG, W3C or Unicode consortium, and " address your comment?

[09:20:01.0000] <rubys>
bah.  This is comment #3, not comment 2.  I'll come back to 2.

[09:20:37.0000] <annevk>
rubys: yeah e.g. http://lists.w3.org/Archives/Public/public-iri/2009Aug/0000.html

[09:21:13.0000] <annevk>
also http://lists.w3.org/Archives/Public/public-iri/2010Apr/0008.html

[09:21:37.0000] <rubys>
I'll add those links as an XML comments (i.e. not shown up in the draft).  Is that fine?

[09:23:00.0000] <annevk>
I don't mind

[09:23:57.0000] <rubys>
ok, so back to #2: "in an attempt to match what some of the browsers were doing" isn't specific enough, you want encoding override to be specifically called out?  If so, I can do that.

[09:25:59.0000] <annevk>
rubys: nah that's fine

[09:26:21.0000] <rubys>
anything else I missed?

[09:28:34.0000] <annevk>
/me looks

[09:29:59.0000] <rubys>
I mispoke on #1, I think the part that you asked me to drop was ", and there were other issues"

[09:31:12.0000] <annevk>
The brief history is not quite correct... URI / IRI were first. Browsers didn't match them so Hixie defined something in HTML5. Then Dan Connolly tried to extract that but never finished it.

[09:31:37.0000] <annevk>
At some point abarth made an attempt but I'm not sure anymore when that was.

[09:32:00.0000] <annevk>
Larry tried to revive the IRI WG also with the goal of taking it out of HTML5. That didn't really go anywhere either.

[09:32:00.0000] <rubys>
URI predated RFC1738?

[09:32:48.0000] <annevk>
rubys: no, but that's before forking happened

[09:33:11.0000] <annevk>
rubys: that has its own set of issues of course :-)

[09:33:50.0000] <annevk>
In some aspects what browsers do matches RFC1738 the best

[09:34:43.0000] <annevk>
And the problem with IDNA2008 was not about IRI, but that it wasn't backwards compatible

[09:34:47.0000] <annevk>
and therefore unsafe

[09:34:57.0000] <rubys>
While I don't want to make this inaccurate, I don't want it to be overly complicated either; all that is needed here is a brief history.

[09:35:37.0000] <rubys>
You've clearly got much more background on what really happened than I do... if you are so inclined, a pull request would be appreciated :-)  If not, I'll try to address the feedback.

[09:39:05.0000] <rubys>
meanwhile, I've pushed out the first set of changes to http://intertwingly.net/projects/pegurl/url-problem-statement.html

[09:40:01.0000] <rubys>
source is here: https://github.com/webspecs/url/blob/develop/docs/url-problem-statement.xml

[09:41:09.0000] <terinjokes>
Domenic: would the fetch API be streamable?

[09:41:10.0000] <rubys>
I've also updated https://url.spec.whatwg.org/interop/test-results/ and https://url.spec.whatwg.org/reference-implementation/liveview.html to match the fragment changes (https://www.w3.org/Bugs/Public/show_bug.cgi?id=27252)

[09:41:25.0000] <Domenic>
terinjokes: yep, https://github.com/yutakahirano/fetch-with-streams/

[09:45:57.0000] <terinjokes>
Domenic: looks like just a different body mixin then?

[09:50:10.0000] <rubys>
annevk: you may have missed to lines: see http://krijnhoetmer.nl/irc-logs/whatwg/20141216#l-745

[09:50:16.0000] <rubys>
two*

[09:53:35.0000] <Domenic>
terinjokes: basically `fetch(url).then(res => res.body.pipeTo(writableStream))`

[09:58:32.0000] <annevk>
rubys: still says "leaving out may of the topics in the IETF specifications"

[09:59:49.0000] <annevk>
I think this has become one of my favorite W3C pages: http://www.w3.org/Policy.html

[10:00:04.0000] <annevk>
"The definition of protocols such as HTTP and data formats such as HTML are in the public domain and may be freely used by anyone." Tim BL

[10:00:34.0000] <TabAtkins>
I really like http://www.w3.org/Tools/ too

[10:02:20.0000] <Domenic>
Aww, the good old days.

[10:04:11.0000] <rubys>
annevk: zapped.  (I *love* deleting text and/or code.  :-))

[10:09:11.0000] <jamesr__>
$ curl https://www.w3.org/Policy.html

[10:09:15.0000] <jamesr__>
<title>307 Temporary Redirect</title>

[10:09:18.0000] <jamesr__>
<p>The document has moved <a href="http://www.w3.org/Policy.html">here</a>.</p>

[10:55:42.0000] <skoller>
hey everyone.

[11:00:23.0000] <annevk>
Domenic: so yeah, I'm hoping that starting Q1 we can all work together tightening up custom elements and then figure out how to approach shadow DOM in a way that doesn't really throw away a bunch of stuff, but does decouple its features a bit more

[11:00:49.0000] <annevk>
Domenic: how far is HTML as custom elements?

[11:12:08.0000] <Domenic>
annevk: sounds awesome. HACE is going OK, but running into lots of missing primitives. Right now I've concluded we can faithfully emulate <div> and <blockquote>. (Not <span>, notably.)

[11:12:50.0000] <TabAtkins>
??? Why not <span>?

[11:13:36.0000] <Domenic>
TabAtkins: custom elements are exposed as block-level to accessibility and automation technologies

[11:13:47.0000] <TabAtkins>
Oh, weird.

[11:14:15.0000] <annevk>
Hmm, subclassing HTMLElement is postponed yet again?

[11:14:20.0000] <annevk>
TC39 :-(

[11:14:36.0000] <annevk>
So much for making custom elements play nice with that in some reasonable timeframe

[11:15:29.0000] <annevk>
Domenic: that sounds like a bug somewhere

[11:15:39.0000] <annevk>
Domenic: or is "block-level" something else than just CSS?

[11:16:02.0000] <Domenic>
annevk: IA2_ROLE_SECTION for accessibility for example

[11:17:17.0000] <Domenic>
https://github.com/domenic/html-as-custom-elements/blob/master/docs/accessibility.md

[11:18:41.0000] <Domenic>
I'm forging ahead on <custom-a> though and it's working OK. Biggest missing thing is the DOMTokenList stuff :-/

[11:25:54.0000] <annevk>
Domenic: heh, DOMTokenList is easy to fix once we have a design

[11:26:38.0000] <Domenic>
annevk: yeah, just not sure how to get consensus on one, since it will involve either Blink/WebKit or Gecko changing their implementation for not-too-much gain.

[11:47:40.0000] <hsivonen>
I wonder if the XHR spec covers this difference between Gecko and Blink: what happens to XHR if the host page is navigated away from: https://github.com/mailpile/Mailpile/issues/1134#issuecomment-66771873

[11:47:47.0000] <hsivonen>
/me didn't read the spec yet

[11:58:02.0000] <hsivonen>
/me failed to find an answer in the spec

[11:58:25.0000] <annevk>
Domenic: the Blink subclassing thread seems annoying for custom elements being done right in 2015

[11:59:13.0000] <Domenic>
annevk: my biased perspective is that basically Yehuda and Dave Herman torpedo'd hopes of an actually-implementable subclassing solution two TC39 meetings ago and we're just trying to do something not future-hostile until the pieces can be picked back up.

[11:59:18.0000] <annevk>
hsivonen: the basic idea is that once the Document is killed its ongoing fetches are terminated (unless <img> / sendBeacon / ping="")

[12:08:54.0000] <annevk>
Domenic: your <a> implementation, it can't actually write to window.location.href and that doesn't seem to take into account target="" or <base target>

[12:09:18.0000] <Domenic>
annevk: target is TODO. Why can't it write to window.location.href?

[12:09:31.0000] <annevk>
Domenic: what if the page overwrites window.location?

[12:09:55.0000] <Domenic>
annevk: in general HACE as of right now is not safe against tampering users. But in all cases the answer is just "store the appropriate value somewhere beforehand"

[12:11:34.0000] <Domenic>
annevk: full TODO https://github.com/domenic/html-as-custom-elements/issues/37

[12:38:13.0000] <caitp>
if the falafel is not to your liking


2014-12-17
[18:14:32.0000] <hgl>
my mail to the www-style mailing list didn't get any response. any one in the room wants to help me? thank you so much. http://lists.w3.org/Archives/Public/www-style/2014Dec/0206.html

[18:46:19.0000] <Joseph_Silber>
TabAtkins, When adding justify-content: center to a flex container, why does it cut off its children?

[18:46:20.0000] <Joseph_Silber>
http://codepen.io/anon/pen/OPXMJb?editors=110

[18:47:39.0000] <Joseph_Silber>
TabAtkins, and only in Chrome. FF and IE leave the flex-item as is.

[18:47:45.0000] <Joseph_Silber>
Which one is correct?

[18:50:22.0000] <Joseph_Silber>
Actually, I see it has nothing to do with justify-content.

[18:50:26.0000] <Joseph_Silber>
So who is right there?

[18:52:09.0000] <TabAtkins>
Like always, this is caused by Chrome not yet respecting the min-width/height:auto stuff in the spec.

[18:53:01.0000] <caitp>
safari looks like it's doing the most reasonable thing there, to me

[18:53:40.0000] <caitp>
looks really weird in FF nightly

[18:56:26.0000] <Joseph_Silber>
TabAtkins, is there any temporary workaround?

[18:59:22.0000] <TabAtkins>
Don't limit the size of the container.  if it's auto-sized, it'll expand fully, like you see in FF.

[18:59:43.0000] <TabAtkins>
If you need it to expand when it's mostly empty, too, just make <body> a flexbox as well. ^_^

[18:59:45.0000] <Joseph_Silber>
TabAtkins, i want the container to scroll

[19:00:11.0000] <Joseph_Silber>
But I want the flex-item to vertically align if it's smaller than the container

[19:01:49.0000] <Joseph_Silber>
TabAtkins, also, if I'm not mistaken, the body isn't actually extended automatically. It's only its background that stretches to the viewport's full height

[19:06:29.0000] <TabAtkins>
Huh. I have no clue why Chrome is cutting off the backgrounds. Looks like a bug.

[19:07:09.0000] <Joseph_Silber>
TabAtkins, you take back what you said before about it having to do with not respecting min-width/height:auto stuff?

[19:07:31.0000] <TabAtkins>
I *think* so, yeah.

[19:08:51.0000] <Joseph_Silber>
TabAtkins, adding overflow: hidden chops it off at the background, so I guess it cuts off the actual element, not just its background. The flex-item's children just overflow.

[19:08:53.0000] <Joseph_Silber>
Weird.

[19:10:32.0000] <caitp>
chrome kills the background, ff kills the padding

[19:11:53.0000] <Joseph_Silber>
caitp, and IE only kills the bottom padding.

[19:12:20.0000] <caitp>
that's pretty much what safari does

[19:12:40.0000] <TabAtkins>
Yeah, ff losing the bottom padding is a bug. fantasai and I ran into that yesterday during some impromptu testing.

[19:12:58.0000] <Joseph_Silber>
TabAtkins, ff loses the top padding too. IE loses only the bottom

[19:13:05.0000] <Joseph_Silber>
<caitp> safari looks like it's doing the most reasonable thing there, to me

[19:13:12.0000] <Joseph_Silber>
caitp, still stand by that?

[19:13:26.0000] <TabAtkins>
Joseph_Silber: If you use a background-image, like "radial-gradient(blue, yellow)", you can see it's not just chopping it off, it's actually calculating the background positioning area incorrectly.

[19:13:26.0000] <caitp>
well, the bottom padding isn't ideal, but it looks a lot better than what FF and chrome are doing

[19:14:44.0000] <Joseph_Silber>
Flexbox is one of the modern CSS features that have been around for a while. You'd think browsers would be getting their act together by now.

[19:14:45.0000] <Joseph_Silber>
Every single time I try to use it, I run into a different issue/bug :(

[19:14:57.0000] <Joseph_Silber>
It's a real shame, because flexbox rocks!

[19:16:18.0000] <TabAtkins>
Chrome hasn't had much flexbox maintenance for a while, which sucks.

[19:16:24.0000] <Joseph_Silber>
Is the any other way (not JS) to accomplish what I'm trying to do here? Vertically center if smaller, scroll if bigger.

[19:18:05.0000] <Joseph_Silber>
Is there* any other way...

[19:18:57.0000] <Joseph_Silber>
TabAtkins, And Google is saying their aim for 2014/2015 is to make the web competitive with cocoa... You'd think a decent layout engine would be a start, instead of fighting about pointer events...

[19:19:29.0000] <caitp>
well, lets calm down a bit :>

[19:19:48.0000] <Joseph_Silber>
caitp, I'm in pain.

[19:20:04.0000] <Joseph_Silber>
It's almost 2015, and we can't do basic layouts on the web :(

[19:20:30.0000] <Joseph_Silber>
I'd forgo all of ES6/ES7 for a decent layout engine (not that the two have anything to do with each other).

[19:20:52.0000] <caitp>
well web design is basically trying to shove a cubic block into 12 different variously shaped triangular/rhombus/spherical sockets

[19:20:56.0000] <caitp>
it just doen't quite fit anywhere

[19:21:13.0000] <Joseph_Silber>
I mean, promises and generators with yield/await/async etc. is all cool stuff. But I can manage without them.

[19:21:33.0000] <Joseph_Silber>
Most of that stuff can be crudely done in userland. It's mostly syntactic sugar.

[19:21:50.0000] <Joseph_Silber>
But as far as I'm concirned, the layout engine should be the number one priority.

[19:22:02.0000] <Joseph_Silber>
Well, I guess we can't have nice things on the web :(

[19:22:19.0000] <caitp>
rendering and layout is really hard :(

[19:22:25.0000] <TabAtkins>
caitp: The problem here is that Chrome's flexbox impl is buggy as heck. >_<

[19:22:53.0000] <Joseph_Silber>
TabAtkins, As much pain as I feel, you should be in even more agony. They're butchering all of your hard work!

[19:23:06.0000] <caitp>
yeah -- but material design will surely drive it to a fixy state

[19:23:08.0000] <Joseph_Silber>
Who would have ever believed that IE would be way ahead of Chrome here?

[19:23:31.0000] <Joseph_Silber>
caitp, I can't tell if you're being sarcastic there. If you aren't, I'm gonna slap you.

[19:23:41.0000] <Joseph_Silber>
/me slaps caitp with a trout

[19:23:42.0000] <caitp>
i'm almost always being sarcastic :(

[19:24:01.0000] <Joseph_Silber>
So, any workaround for me here?

[19:24:38.0000] <caitp>
hmm, haven't really used flexbox for anything other than some conference slides

[19:24:52.0000] <caitp>
so I dunno of any tips that would scale to a real app

[19:25:33.0000] <Joseph_Silber>
caitp, I'm not asking about flexbox in particular. Any other tricks are cool. negative margins, transforms, or whatever you can think of.

[19:25:48.0000] <caitp>
oh, probably

[19:25:55.0000] <Joseph_Silber>
There's nothing in my bag of tricks that meets my needs here, but maybe you or Tab know something I dont.

[19:27:05.0000] <caitp>
you could ask some of the high-profile designy people

[19:31:57.0000] <TabAtkins>
So you just want one thing, which is centered vertically when its small, and scrolls when it's big?

[19:34:08.0000] <Joseph_Silber>
TabAtkins, yep. That's actually 2 things :p

[19:34:47.0000] <Joseph_Silber>
It's a pity we can't just use margin: auto for vertical positioning :(

[19:35:28.0000] <Joseph_Silber>
TabAtkins, why if fact doesn't margin: auto work for vertical positioning?

[19:36:05.0000] <TabAtkins>
Because you can have multiple siblings next to each other vertically.

[19:36:40.0000] <Joseph_Silber>
So let space out like flexbox does! Well...

[19:36:49.0000] <Joseph_Silber>
let them* space out

[19:37:14.0000] <TabAtkins>
This was pre flexbox, so that didn't occur to people.  Block layout is designed for documents, not apps; vertical centering is rarely relevant for documents.

[19:37:41.0000] <Joseph_Silber>
When does horizontal centering apply to documents?

[19:39:43.0000] <Joseph_Silber>
What I'm building isn't even an app... http://josephsilber.com/beta/blev-echod/public/donate

[19:39:44.0000] <caitp>
look on the bright side though, as intimidating as css is, at least it's not as bad as having to define layout constraints for each face of each element on a page

[19:40:13.0000] <TabAtkins>
Ohhhhhhhhh

[19:40:17.0000] <TabAtkins>
I get it now.

[19:40:35.0000] <Joseph_Silber>
TabAtkins, was I not being clear enough before?

[19:40:45.0000] <Joseph_Silber>
caitp, this is what we really need: http://gridstylesheets.org/guides/ccss/

[19:40:45.0000] <TabAtkins>
Yes, Chrome is still messing up, due to not doing the min-height thing, but the problem is that flex items, by default, will shrink. ^_^

[19:41:12.0000] <TabAtkins>
So that's what's happening for you.  The item is shrinking to the size of the container's content area.  it's also overflowing visibly, so the text spills out.

[19:41:39.0000] <TabAtkins>
Set flex: 0 0 auto; on the item.

[19:42:19.0000] <caitp>
whats that do

[19:42:28.0000] <TabAtkins>
Makes it not grow or shrink at all.

[19:42:56.0000] <TabAtkins>
flex:none is the proper shorthand, use that instead.

[19:43:29.0000] <caitp>
the thing that really makes css intimidating is that the property: value syntax doesn't do a very good job of communicating what properties/values actually do

[19:43:42.0000] <caitp>
especially after a few drinfks

[19:43:54.0000] <TabAtkins>
I wish we'd been able to come up with some way to make overflow make sense with flexbox.  We couldn't, though, so the mix of overflow and growing/shrinking is always confusing.

[19:44:03.0000] <TabAtkins>
caitp: Try doing web design while sober, it helps.

[19:44:19.0000] <Joseph_Silber>
TabAtkins, It ends up chopping off the top when it's bigger than the container: http://josephsilber.com/beta/blev-echod/public/donate

[19:44:30.0000] <caitp>
we usually hire outside contractors to do that stuff

[19:44:36.0000] <caitp>
it makes everyone happier

[19:45:07.0000] <Joseph_Silber>
TabAtkins, you don't see it in that pen because it has repeating text

[19:45:23.0000] <TabAtkins>
Joseph_Silber: Yeah, that's why we added the true/safe keywords in the Align spec.  Which nobody's implemented quite yet. :/

[19:45:48.0000] <TabAtkins>
Flexbox does "true" centering by default, so overflow goes off both sides, and can go into the unscrollable area.

[19:45:56.0000] <Joseph_Silber>
TabAtkins, IE doesn't chop it off at the top. Only Chrome and FF.

[19:46:08.0000] <TabAtkins>
Chrome and FF are doing it right.

[19:46:21.0000] <Joseph_Silber>
TabAtkins, I don't understand what you just said. Care to elaborate?

[19:46:23.0000] <caitp>
have you considered using table layout?

[19:46:31.0000] <caitp>
since you can vertically center contents of table cells

[19:46:36.0000] <Joseph_Silber>
about the true/safe keywords

[19:46:41.0000] <TabAtkins>
The item is centered.  Like, *actually* centered.  its middle is placed right in the middle of the container.

[19:46:57.0000] <TabAtkins>
If it's bigger thant he container, it thus extends out both the top and bottom.

[19:47:02.0000] <Joseph_Silber>
TabAtkins, I get that. But then why does the parent scroll?

[19:47:23.0000] <TabAtkins>
Because there's no way to make <body> not scroll when things overflow?

[19:48:08.0000] <TabAtkins>
(I was using a radial gradient background, which makes sizing and alignment issues very obvious when debugging.)

[19:49:16.0000] <Joseph_Silber>
caitp, I reached for display: table-cell first. But that's not a block element. And absolutely positioning it removes the table-cell display type

[19:49:27.0000] <Joseph_Silber>
TabAtkins, so what are the trrue/safe keywords?

[19:49:55.0000] <TabAtkins>
it lets you swap between the "true" centering, and "safe" centering. Safe centering prevents it from overflowing off the top/left.

[19:50:05.0000] <TabAtkins>
It basically makes it start align if it's larger than the container.

[19:50:17.0000] <TabAtkins>
(Same applies to "end" aligning.)

[19:50:18.0000] <Joseph_Silber>
So basically I'm screwed :(

[19:50:24.0000] <TabAtkins>
Yup.

[19:50:37.0000] <Joseph_Silber>
And there is the state of CSS right there for you

[19:50:53.0000] <caitp>
maybe redoing the app with flash/shumway would do it right

[19:50:58.0000] <TabAtkins>
This isn't bugs, it's just specs that haven't been implemented yet.

[19:51:43.0000] <Joseph_Silber>
TabAtkins, what's the property name there? Who's value would be set to "safe"?

[19:52:01.0000] <TabAtkins>
justify-content: center safe;

[19:52:07.0000] <Joseph_Silber>
TabAtkins, so you're saying that IE doing what I want is a bug O_o

[19:52:10.0000] <TabAtkins>
Yes.

[19:52:15.0000] <Joseph_Silber>
All hail for IE

[19:52:28.0000] <TabAtkins>
Until you want true centering, then you'll be cursing it.

[19:53:24.0000] <Joseph_Silber>
TabAtkins, Can't think of a scenario right now. Got one?

[19:54:12.0000] <Joseph_Silber>
If I want true centering, I can just use margin-top: 50%; transform: translateY(-50%);

[19:54:24.0000] <Joseph_Silber>
Hacky, but get's the job done.

[19:54:38.0000] <Joseph_Silber>
Which is sadly 95% of CSS code I've ever written.

[19:54:51.0000] <TabAtkins>
Oh wait, duh, man I'm dumb.  Sorry, I'm in the throes of a cold right now.

[19:55:00.0000] <TabAtkins>
You can use margin centering to get safe alignment for now.

[19:55:03.0000] <Joseph_Silber>
Whoops. Another reversal?

[19:55:09.0000] <TabAtkins>
Example: http://dev.w3.org/csswg/css-flexbox/#justify-content-property

[19:55:11.0000] <Joseph_Silber>
Oh right!

[19:55:15.0000] <Joseph_Silber>
How did I forget that?

[19:55:25.0000] <Joseph_Silber>
Hang on. Trying it now.

[19:55:29.0000] <TabAtkins>
But yeah, just set margin: auto 0; on the item and it should work.

[19:56:21.0000] <TabAtkins>
yeah, perfect.

[19:56:44.0000] <TabAtkins>
Take your original pen, set "margin: auto 0; flex: none;" on the item, and remove the 'justify-content' from the container. Works a charm.

[19:57:38.0000] <Joseph_Silber>
TabAtkins, you are my hero!! http://josephsilber.com/beta/blev-echod/public/donate

[19:58:09.0000] <Joseph_Silber>
Damn! I've used flex margin centering so many times. How did I forget about it now?

[19:58:49.0000] <Joseph_Silber>
We were even discussing it before. Wow!

[20:00:02.0000] <Joseph_Silber>
TabAtkins, thanks for your time :D

[20:00:05.0000] <TabAtkins>
np

[20:00:16.0000] <TabAtkins>
But take a look at that example I gave you for why true centering is useful. ^_^

[20:00:31.0000] <Joseph_Silber>
TabAtkins, missed it. Where is it?

[20:00:42.0000] <TabAtkins>
Five minutes ago.

[20:00:46.0000] <Joseph_Silber>
Here? http://dev.w3.org/csswg/css-flexbox/#justify-content-property

[20:00:49.0000] <TabAtkins>
yeah.

[20:01:01.0000] <TabAtkins>
scroll up

[20:01:12.0000] <TabAtkins>
That's the closest anchor, but you want example 10, at the end of the previous section.

[20:01:22.0000] <TabAtkins>
sorry, example 11

[20:02:37.0000] <Joseph_Silber>
I see. That can indeed be achieved with a left margin and negative translate, but this is a proper way of doing it.

[20:02:50.0000] <Joseph_Silber>
Cool stuff, if only they could be used.

[20:03:13.0000] <Joseph_Silber>
How long's it been since the newest version of flexbox was specced out?

[20:03:18.0000] <TabAtkins>
They can be! The example is just showing align-self/justify-content vs margins.  That works today.

[20:03:33.0000] <TabAtkins>
(Except, who knows, maybe not perfectly in some version of IE.)

[20:03:50.0000] <TabAtkins>
The last big tweak we made was a few months ago.

[20:04:25.0000] <TabAtkins>
Also: dude, use <img srcset> for those backgrounds. ^_^

[20:05:01.0000] <caitp>
is it a runtime error, or infinite recursion?

[20:05:03.0000] <Joseph_Silber>
TabAtkins, actually, using the vertical margin auto causes IE and FF to chop off the container's bottom padding. Only Chrome properly maintains it.

[20:05:25.0000] <TabAtkins>
Yeah, that's an error unrelated to Flexbox.  I think it's an older unspecified behavior.

[20:05:29.0000] <Joseph_Silber>
For my needs, this is good enough. But... huh... I'm getting tired of all this...

[20:05:48.0000] <TabAtkins>
fantasai and I were just discussing it yesterday.  Since Chrome's behavior is better, and clearly web compatible, we'll figure out where to spec it.

[20:06:10.0000] <Joseph_Silber>
Where else (outside of flexbox) would you run into this?

[20:06:20.0000] <TabAtkins>
I dunno, I can't think right now.

[20:06:46.0000] <Joseph_Silber>
k. Thanks for the help.

[20:06:51.0000] <TabAtkins>
Instead of container padding, another option is a spacer element of the height you want.  Just empty divs placed before/after the content.

[20:07:09.0000] <Joseph_Silber>
TabAtkins, that would mess with the margin

[20:07:10.0000] <TabAtkins>
That should do the job consistently across browsers.

[20:07:20.0000] <Joseph_Silber>
Unless you mean within the flex-item

[20:07:30.0000] <TabAtkins>
I mean siblings of the flex item.

[20:07:57.0000] <Joseph_Silber>
Hmmm. So two spacers.

[20:08:00.0000] <Joseph_Silber>
Ugh

[20:08:01.0000] <TabAtkins>
Yeah.

[20:08:11.0000] <TabAtkins>
It's not pretty, but it wont' get chopped by FF. ^_^

[20:08:48.0000] <Joseph_Silber>
I don't care so much. If it were getting chopped off at the top it would be a show stopper. But the bottom is not enough to force me into spacers

[20:09:05.0000] <Joseph_Silber>
I've had enough of the spacer gifs to last me a couple of lifetimes.

[20:09:27.0000] <Joseph_Silber>
Spacer are the root of all evil.

[20:09:37.0000] <Joseph_Silber>
spacers*

[20:09:50.0000] <caitp>
its just one piece of the layout rube goldberg machine

[20:11:38.0000] <TabAtkins>
Eh, I'm not gonna shame people for doing what's needed, even when it's ugly.

[20:11:56.0000] <Joseph_Silber>
I develop for the web exclusively. I'd be really curious to know if native Windows/iOS/Mac/Andoid developers also want to tear their hair out every time they do layout

[20:12:09.0000] <caitp>
they do

[20:12:26.0000] <caitp>
people invent tools to make layout easy

[20:12:29.0000] <Joseph_Silber>
TabAtkins, shame? No! I'm talking about me personally. *I* hate them, s *I* don't want them in my projects.

[20:12:31.0000] <caitp>
and even the tools make them want to tear their hair out

[20:12:36.0000] <Joseph_Silber>
Unless *absolutely* necessary.

[20:12:59.0000] <TabAtkins>
There has never been a layout system invented that wasn't terrible, as far as I can tell.

[20:13:17.0000] <TabAtkins>
The only thing that's good is abspos when you can control the exact size of the screen.

[20:13:23.0000] <TabAtkins>
Because it's simple.

[20:13:55.0000] <Joseph_Silber>
Why is that though? We can send rockets to the moon. We can land on comets. Hell, we can do all this: http://www.bbc.com/news/science-environment-30415007

[20:14:01.0000] <Joseph_Silber>
But we can't have proper layout!

[20:14:06.0000] <TabAtkins>
Because rockets are easy, they're just physics.

[20:14:12.0000] <TabAtkins>
We're trying to do psychology here.

[20:14:14.0000] <Joseph_Silber>
ha

[20:14:50.0000] <TabAtkins>
Also: people are stupid. The two of us spent 20 minutes noodling on a super-simple problem that we both knew the correct answer to.

[20:15:25.0000] <caitp>
to be fair, the answer was pretty cryptic

[20:15:38.0000] <Joseph_Silber>
TabAtkins, that's not an excuse. The fact that there's a *different* way of doing it is no excuse for it being counter-intuitive.

[20:15:43.0000] <TabAtkins>
It's really not. It's one of the first things you learn when you start doing flexbox.

[20:16:04.0000] <Joseph_Silber>
caitp, yeah. margin auto spacing is elementary flexbox.

[20:16:13.0000] <TabAtkins>
Dunno which part you're calling counter-intuitive.

[20:16:27.0000] <Joseph_Silber>
"true" centering

[20:17:00.0000] <caitp>
flexbox itself is pretty cryptic, built ontop of something else which is pretty cryptic, built ontop of layout engines which operate differently and are all slightly broken in different ways at different times

[20:17:12.0000] <caitp>
you aren't gonna find easy answers in web layout that work all the time

[20:17:33.0000] <Joseph_Silber>
caitp, I beg to differ. Flexbox happens to be one of the specs that actually make a lot of sense. It's just terribly bug-ridden.

[20:17:44.0000] <caitp>
see part 3)

[20:17:49.0000] <Joseph_Silber>
?

[20:17:58.0000] <Joseph_Silber>
That's an implementation detail

[20:18:22.0000] <TabAtkins>
Joseph_Silber: That's not counter-intuitive either.  It centers in the most obvious, natural way.  When you're using flexbox for menu bars or the like, and do "align-self: center", "true" centering is precisely what you want a lot of the time.

[20:18:48.0000] <TabAtkins>
The fact that you have to switch to margin centering to get safe behavior is counter-intuitive, but that's why we fixed it. the fix just isn't implemented yet.

[20:18:52.0000] <Joseph_Silber>
Maybe. I was just thinking of regular block layout with margin: 0 auto;

[20:19:09.0000] <Joseph_Silber>
TabAtkins, I guess once you know all that. Yeah maybe.

[20:19:10.0000] <TabAtkins>
Yeah, that example is why we made margin centering safe in Flexbox, too.

[20:19:46.0000] <Joseph_Silber>
I guess this is what you meant with "doing psychology".

[20:19:48.0000] <TabAtkins>
Joseph_Silber: The problem is that Flexbox is used for lots of things, and there's no such thing as a universal default. We make the best decisions we can on the default behavior, but it will always sometimes be confusing.

[20:19:50.0000] <TabAtkins>
Yup.

[20:20:10.0000] <TabAtkins>
It's all about interaction design and trying to predict usage patterns.

[20:20:18.0000] <Joseph_Silber>
Arguably, rockets also have to be intuitive. Otherwise the human aboard would crash it.

[20:20:27.0000] <Joseph_Silber>
humans*

[20:20:43.0000] <TabAtkins>
We haven't put humans on rockets in decades. Problem solved. ^_^

[20:20:52.0000] <Joseph_Silber>
Spaceships then?

[20:21:12.0000] <Joseph_Silber>
About 200 people just bought a one way ticket to Mars.

[20:21:23.0000] <TabAtkins>
Well, they hope.

[20:21:26.0000] <Joseph_Silber>
I guess people *are* stupid.

[20:21:33.0000] <TabAtkins>
^_^

[20:22:07.0000] <Joseph_Silber>
At this rate, who knows when grid layout will be usable?

[20:22:10.0000] <Joseph_Silber>
2024?

[20:23:11.0000] <Joseph_Silber>
TabAtkins, BTW, I really enjoyed your Metric Time post.

[20:23:18.0000] <TabAtkins>
Haha, thanks.

[20:23:24.0000] <Joseph_Silber>
You signed off with fuck timezones.

[20:24:02.0000] <TabAtkins>
It was a vage callout to "And in conclusion, Carthage must be destroyed."

[20:24:04.0000] <Joseph_Silber>
What's interesting is that with all the discussion about daylight savings time, I haven't ever heard anybody propose having univarsal time, and just shift our schedules

[20:24:24.0000] <Joseph_Silber>
Who says school has to start at the same time throughout the year?

[20:24:26.0000] <TabAtkins>
I've been in favor of putting everyone on GMT for years.

[20:25:00.0000] <Joseph_Silber>
Yeah. Who cares if people get into work at 3PM in Sydney. At least I know when 3PM is.

[20:25:11.0000] <caitp>
timezones are fun, because then it's like time travel when you fly back from SEA

[20:25:43.0000] <caitp>
why would you ever want to get rid of that novelty

[20:25:47.0000] <Joseph_Silber>
Tab wants to steal the "Around the world in 80 days" story from us.

[20:32:11.0000] <Joseph_Silber>
TabAtkins, btw, before you said I should be using img srcset for the backgrounds. Did you just mean so that I don't serve such huge files to mobile, or something else?

[20:32:20.0000] <TabAtkins>
Yes, that's why.

[20:32:31.0000] <Joseph_Silber>
srcset has its own share of problems.

[20:32:50.0000] <TabAtkins>
Just some support issues, which you can work around with Picturefill.

[20:33:13.0000] <Joseph_Silber>
No. Once an image has been downloaded, it doesn't redownload it if the viewport size changes.

[20:33:19.0000] <Joseph_Silber>
That's a dealbreaker for me :(

[20:34:18.0000] <TabAtkins>
So you'll just always send the largest possible image, just in case they started loading the page in a small window and then maximized it later?

[20:34:24.0000] <Joseph_Silber>
I know. I've used it extensively on this site: https://bp.boneiauction.org/products/14

[20:34:25.0000] <caitp>
desktop browsers are a sizeable and very important chunk of any application's traffic

[20:34:42.0000] <caitp>
no need to optimize for phones and tablets

[20:35:01.0000] <Joseph_Silber>
TabAtkins, I didn't say that. Was just pointing out that even srcset is broken.

[20:35:05.0000] <TabAtkins>
caitp: You really need to be better with your use of the <sarcasm> tag.

[20:35:10.0000] <TabAtkins>
It's not broken, though. ^_^

[20:35:20.0000] <Joseph_Silber>
The spec has nothing to say about it

[20:35:25.0000] <Joseph_Silber>
So it can't be "broken"

[20:35:34.0000] <Joseph_Silber>
But it's broken for me is what I meant.

[20:35:39.0000] <TabAtkins>
No, it does. It defines exactly when to reevaluate the list of soures.

[20:35:49.0000] <caitp>
sarcasm can be inferred from the tone of voice or the choice of words, tab

[20:36:03.0000] <caitp>
for instance, if it sounds like I'm making an authoritative factual statement, it's probably sarcasm

[20:36:08.0000] <TabAtkins>
it does so, for example, if you're using <picture> and you have MQs that depend on screen size.

[20:36:32.0000] <Joseph_Silber>
Only for picture.

[20:36:34.0000] <TabAtkins>
It just doesn't so to pick a new image from a single srcset.

[20:37:19.0000] <Joseph_Silber>
The spec considers srcset to be like a hint. It leaves it to the user agent to decide.

[20:39:42.0000] <Joseph_Silber>
TabAtkins, https://github.com/ResponsiveImagesCG/picture-element/issues/230

[20:39:51.0000] <jamesr__>
quick! how do i randomly pick N lines out of a file?

[20:40:29.0000] <caitp>
where N is random?

[20:41:21.0000] <Joseph_Silber>
TabAtkins, also, on this site it doesn't matter, because the mobile design (not yet done) won't have those background images anyhow. That's part of the reason they're done with a background image instead of a real image.

[20:41:26.0000] <TabAtkins>
jamesr__: Put it in your favorite text editor with a randomize lines function (such as Sublime). Randomize. Pick the first N lines.

[20:41:52.0000] <Joseph_Silber>
TabAtkins, another reason is that there's no way (in CSS) to achieve with a real image what I get with background-size: cover

[20:42:03.0000] <TabAtkins>
Right.

[20:42:14.0000] <TabAtkins>
jamesr__: Edit->Permute Lines->Shuffle

[20:43:20.0000] <TabAtkins>
jamesr__: Apparently the shuf command-line utility also does what you need.

[21:13:50.0000] <jamesr__>
yeah, 'shuf' and 'sort -R' would work but neither exist on my mac

[21:16:23.0000] <caitp>
you could write a node/python/ruby/perl script to do it, probably a one liner in most of those

[07:30:55.0000] <MikeSmith>
botie, inform annevk one of my favorite W3C pages is http://www.w3.org/People/Berners-Lee/UU.html

[07:30:55.0000] <botie>
will do

[07:41:32.0000] <gsnedders>
MikeSmith: what's this about you being deputy director? since when? WHAT DOES THIS EVEN MEAN?

[07:44:32.0000] <darobin>
gsnedders: you missed the memes from TPAC 2013 :)

[07:51:29.0000] <gsnedders>
hah, that long ago? wow.

[07:52:25.0000] <darobin>
gsnedders: http://w3cmemes.tumblr.com/post/66947507485/mike-smith-gets-to-be-director-for-the-eme-people

[07:52:29.0000] <darobin>
(around the same time)

[08:00:16.0000] <wilhelm>
I'd vote for MikeSmith as heir apparent director.

[08:18:22.0000] <gsnedders>
So what does MikeSmith even do? go around pretending to be the second coming of timbl?

[08:19:12.0000] <MikeSmith>
dunno yet

[08:19:30.0000] <MikeSmith>
so far it's just the gun and holster

[08:19:38.0000] <MikeSmith>
is all I got yet

[08:19:54.0000] <MikeSmith>
I guess I'll get some more stuff later

[08:20:10.0000] <gsnedders>
He's got the name, he's got the title, he's got the gun, he's got the holster. That and a whole lotta nothing.

[08:20:37.0000] <MikeSmith>
it's more gun and more holster than I had before

[08:20:42.0000] <MikeSmith>
so I claim progress

[08:22:46.0000] <gsnedders>
progress or Progress?

[08:22:59.0000] <gsnedders>
or Process?

[08:37:28.0000] <MikeSmith>
evolution

[08:37:32.0000] <MikeSmith>
the process of

[08:37:49.0000] <MikeSmith>
mutation

[08:45:24.0000] <botie>
annevk, at 2014-12-17 15:30 UTC, MikeSmith said: one of my favorite W3C pages is http://www.w3.org/People/Berners-Lee/UU.html

[08:51:08.0000] <MikeSmith>
7th Principle: Respect for the Interdependent Web of All Existence of Which We Are a Part

[08:55:44.0000] <MikeSmith>
Nowadays, even Web developments happen because of our gut feeling that certain properties of the Web will lead to great things...  full of hope, and the fact that the Web happens is an example of a dream coming true and an encouragement to all who hope.

[09:04:44.0000] <annevk>
MikeSmith: so in the beginning IETF is compared to UU, but Tim left the IETF to form the W3C, I'm not sure what to make of that

[09:07:05.0000] <MikeSmith>
annevk: I don't think Tim really left the IETF to form the W3C

[09:07:17.0000] <MikeSmith>
at least not in accounts I remember

[09:07:53.0000] <MikeSmith>
don't think he tells it that way in his book

[09:07:59.0000] <annevk>
MikeSmith: something made him form the W3C and something made the IETF and W3C divide topics in some way

[09:08:41.0000] <annevk>
MikeSmith: this is what I picked up somewhere, I guess as with URLs there's not really a canonical history available

[09:09:44.0000] <MikeSmith>
yeah


2014-12-18
[23:36:10.0000] <MikeSmith>
botie, inform annevk https://lost-contact.mit.edu/afs/cern.ch/w3.org/www/Consortium/Agreement/Full.html "Ownership of Copyrights and Patents" & "Licenses"

[23:36:11.0000] <botie>
will do

[01:50:24.0000] <darobin>
I thought I had seen a page on the wiki listing the conventions for ID names (e.g. for DOM stuff) but I can't seem to find it

[01:50:36.0000] <darobin>
did I dream it or just failing at search?

[01:51:16.0000] <darobin>
there's an incoming patch for much better WebIDL support in ReSpec and I'd like to use the opportunity to completely align with the convention; having a page to point the guy to would help

[01:52:52.0000] <darobin>
ah, found it

[01:55:03.0000] <Ms2ger>
Good

[03:01:12.0000] <zcorpan>
is it defined when :active starts and stops applying relative to events like mousedown, mouseup, click ?

[03:03:15.0000] <zcorpan>
http://software.hixie.ch/utilities/js/live-dom-viewer/saved/3341 :-/

[03:13:50.0000] <Ms2ger>
zcorpan, that sounds like a job for... D3E

[03:13:53.0000] <Ms2ger>
/me cackles

[03:33:54.0000] <zcorpan>
http://software.hixie.ch/utilities/js/live-dom-viewer/saved/3342 does what i expect in firefox but in my other test case it says 'false' for both events. can't figure out what the difference is

[03:44:11.0000] <botie>
annevk, at 2014-12-18 07:36 UTC, MikeSmith said: https://lost-contact.mit.edu/afs/cern.ch/w3.org/www/Consortium/Agreement/Full.html "Ownership of Copyrights and Patents" & "Licenses"

[04:37:01.0000] <zcorpan>
i kind of got stuck here. https://critic.hoppipolla.co.uk/r/3537

[04:37:31.0000] <zcorpan>
possibly i've made a stupid mistake and i don't see it

[05:13:55.0000] <zcorpan>
oh. i think i found it. e.preventDefault cancels :active from applying!

[08:45:52.0000] <gsnedders>
so jgraham, are we still trying to maintain a linear history in html5lib-python? because up till now we basically have.

[08:46:05.0000] <gsnedders>
even though it doesn't integrate well with github's PRs

[08:46:51.0000] <jgraham>
gsnedders: I think we should give up on that :(

[08:47:15.0000] <jgraham>
There are so many PRs that just need to be merged

[08:47:47.0000] <gsnedders>
jgraham: my problem is I don't like merging stuff till we have tests "passing" again

[08:48:25.0000] <gsnedders>
because it just becomes way more time consuming checking for regressions

[08:49:04.0000] <jgraham>
gsnedders: So last I saw the PR for adding an ignore list had "don't merge this" on it

[08:49:38.0000] <gsnedders>
jgraham: because of the questions in the thread

[08:52:30.0000] <gsnedders>
jgraham: i.e., how do we handle failing tests involving lone surrogates

[08:52:56.0000] <gsnedders>
jgraham: the other option is to just fix the bug and worry about this another time :P

[08:55:57.0000] <jgraham>
gsnedders: I am happy with that option

[08:56:32.0000] <gsnedders>
I'll /try/ and get something done this evening. This may well not happen.

[11:28:10.0000] <Hixie>
annevk: you around? what's the story on intents these days?

[12:15:21.0000] <annevk>
Hixie: no real story

[12:16:03.0000] <annevk>
Hixie: we have some ideas, but limited bandwidth to experiment

[12:16:52.0000] <annevk>
Hixie: it seems like service worker to service worker communication will come first, perhaps that'll provide some way to let sites figure out client-side cooperation

[12:17:13.0000] <annevk>
Hixie: although that doesn't give you the decentralized stuff of course

[12:17:58.0000] <annevk>
ato: that's not just the case for Error's prototype

[12:18:08.0000] <annevk>
ato: all prototypes are global-bound

[12:18:23.0000] <annevk>
ato: (re tweet)

[12:19:29.0000] <ato>
annevk: RIght, I was trying to figure out why err instanceof Error was acting weird across chrome- and content contexts in XPCOM.

[12:24:13.0000] <annevk>
ato: you should also know that Gecko has a non-standard implementation of instanceof for "DOM" objects

[12:24:25.0000] <annevk>
ato: (unless that was put into IDL)

[12:24:52.0000] <annevk>
ato: Gecko's instanceof for "DOM" objects doesn't care about the window the object belongs to

[12:27:33.0000] <ato>
Interesting.

[12:31:56.0000] <roc>
annevk: I believe that's in the spec

[12:32:05.0000] <roc>
heycam definitely told me it's in the spec :-)

[12:32:28.0000] <annevk>
http://heycam.github.io/webidl/#es-interface-hasinstance

[12:32:53.0000] <annevk>
I'm not a fan, we already moved stuff from "DOM" to ES, this would break whenever we do that

[12:33:16.0000] <annevk>
E.g. this will break for promises in Gecko

[12:35:47.0000] <annevk>
https://twitter.com/arslancb/status/545674463530844161 foolip?

[12:36:21.0000] <roc>
is it really the case that, e.g., there is one Array prototype per window so that [] created in one window is not an instanceof Array in another window?

[12:37:41.0000] <annevk>
roc: afaik, yes

[12:37:53.0000] <roc>
if so, that's broken and needs to be fixed in ES

[12:38:17.0000] <annevk>
roc: Allen is not too interested :-(

[12:38:22.0000] <roc>
sucks to be him

[12:38:52.0000] <annevk>
heh

[12:39:12.0000] <annevk>
I doubt we could actually make them the same at this point

[12:39:34.0000] <roc>
why?

[12:41:29.0000] <Domenic>
wow, no, that is a super-importnat property of ES

[12:41:34.0000] <Domenic>
programmers depend on it a lot

[12:42:15.0000] <Domenic>
it's extremely useful to be able to mutate the prototype in one window and have it not affect another

[12:42:19.0000] <Domenic>
i was just doing that this morning in fact

[12:43:22.0000] <TabAtkins>
Yup, I've done it before too.

[12:43:44.0000] <TabAtkins>
Lets you lift the magic attached to some objects, like arrays, without polluting the "normal" array.

[12:43:55.0000] <TabAtkins>
Because subclassing doesn't work.

[12:47:25.0000] <roc>
well

[12:47:59.0000] <roc>
the behavior of instanceof is the important thing here

[12:48:22.0000] <roc>
we don't actually need the prototype objects to be the same

[12:54:02.0000] <Domenic>
... that is literally the definition of instanceof

[12:54:25.0000] <annevk>
Domenic: it has a hook now so objects can define instanceof to behave however they wish

[12:54:55.0000] <Domenic>
sure. let's say: that is literally the definition of instanceof that JS developers expect.

[12:55:47.0000] <roc>
unfortunately developers also expect an <img> to be an instanceof HTMLImageElement

[12:55:55.0000] <Domenic>
nah, not if it comes from another frame

[12:56:05.0000] <Domenic>
then it should be instanceof otherFrame.contentWindow.HTMLImageElement

[12:56:11.0000] <roc>
no-one expects that

[12:56:17.0000] <roc>
except a few standards gurus

[12:56:21.0000] <Domenic>
instanceof is not a nominal type test

[12:56:25.0000] <Domenic>
if you want the name just use tagName

[12:56:29.0000] <Domenic>
or .constructor.name or similar

[12:58:45.0000] <roc>
http://stackoverflow.com/questions/1760492/how-can-i-tell-if-a-javascript-object-is-an-image-or-a-canvas

[13:14:13.0000] <Hixie>
annevk: if i have someone who wants to contribute, where should i point them to? (for intents)

[13:39:37.0000] <annevk>
Hixie: I guess the WHATWG list and that thread on sharing is all there is thus far

[13:39:47.0000] <annevk>
Hixie: and the WHATWG wiki page on sharing

[13:39:50.0000] <Hixie>
k

[15:06:19.0000] <jgraham>
Domenic: [citation needed] on "that's what js developers expect". testharness.js has at least two places which say "we want to use instanceof here but can't because we don't know which window the object is from"

[15:06:51.0000] <TabAtkins>
Read "what js developers expect" as "what [sufficiently enough that we can't break backwards compat] js developers expect"..

[15:06:52.0000] <jgraham>
I believe that at least one of those was previously a bug

[15:08:07.0000] <jgraham>
TabAtkins: "this is an unfortunate legacy behaviour we can't change" is totally different from "that's what developers expect".

[15:08:26.0000] <TabAtkins>
Well, I've come to expect it, at least.

[15:09:10.0000] <jgraham>
Sure but you have also come to expect document.all. It doesn't mean it's a great ideea

[15:21:35.0000] <Hixie>
http://w3c.github.io/web-animations/ has some messed up MathML stuff

[15:21:39.0000] <Hixie>
search for <{

[15:22:09.0000] <birtles>
Hixie: I'll look into it

[15:22:52.0000] <birtles>
... but I blame bikeshed already :)

[15:25:23.0000] <birtles>
TabAtkins: was there a recent change to bikeshed's handling of mathml?

[15:25:35.0000] <TabAtkins>
Shouldn't have been.

[15:25:36.0000] <birtles>
my local copy of bikeshed works fine but tip seems to be broken

[15:25:45.0000] <TabAtkins>
BUT WHO KNOWS

[15:25:51.0000] <TabAtkins>
(I didn't do anything on purpose.)

[15:26:15.0000] <TabAtkins>
Ahahaha, I know what happened.

[15:26:43.0000] <TabAtkins>
I wrote a custom serializer, and lxml's handling of namespaces is hilariously bad.  I'll file an issue and deal with this asap.

[15:26:51.0000] <birtles>
TabAtkins: thanks!

[15:27:48.0000] <Hixie>
oh man, lxml

[15:27:57.0000] <Hixie>
lxml is one of the reasons i dumped anolis :-)

[15:29:50.0000] <MikeSmith>
in the python world I'm not sure what practical alternative there is to lxml

[15:30:08.0000] <TabAtkins>
There really isn't, particularly since I use CSSSelect. :(

[15:31:13.0000] <MikeSmith>
yeah whatever other python things there might be, I think they have worse problems

[15:31:20.0000] <Hixie>
yeah, i dumped python for that same reason

[15:31:47.0000] <MikeSmith>
baby meet bathwater

[15:32:18.0000] <MikeSmith>
python has the advantage of being something a lot of other people have some familiarity with already

[15:33:48.0000] <MikeSmith>
and anyway in my experience at least lxml just works pretty well overall. It's got some quirks but again in my experience at least it's not a giant hardship to work around them

[15:34:21.0000] <MikeSmith>
I say all this as somebody who's neither really fond of lxml nor python myself

[15:35:11.0000] <MikeSmith>
/me goes back to fixing problems with a broken python script for web-platform-tests...

[15:44:49.0000] <MikeSmith>
does chown -r not follow symlinks?

[15:45:34.0000] <Hixie>
probably depends on -h ?

[15:45:35.0000] <Hixie>
dunno

[15:47:16.0000] <MikeSmith>
k

[15:48:15.0000] <MikeSmith>
hmm yeah it seems for sure it doesn't

[15:48:37.0000] <MikeSmith>
looking the man page and the docs for the -h and -H args

[15:49:11.0000] <MikeSmith>
even with -H, "If the -R option is specified, symbolic links on the command line are followed. (Symbolic links encountered in the tree traversal are not followed.)

[15:49:24.0000] <Domenic>
any ideas how to do *:not(.example *) in a browser that doesn't support complex selectors inside not?

[15:49:51.0000] <Hixie>
MikeSmith: ah well there you go

[15:50:23.0000] <Hixie>
Domenic: you want to match all elements that aren't a child of .example?

[15:50:28.0000] <Domenic>
Hixie: yep

[15:50:46.0000] <Hixie>
Domenic: :not(.example) > *, :not(.example) > * *

[15:50:58.0000] <Hixie>
hm, though that won't work

[15:51:05.0000] <Hixie>
for descendants

[15:51:15.0000] <TabAtkins>
No, can't do it without more constrained tree.

[15:51:24.0000] <TabAtkins>
(So that you can explicitly knock everything else out.)

[15:51:27.0000] <TabAtkins>
And even then it's terrible.

[15:51:38.0000] <Hixie>
Domenic: wait, i don't understand what you want here.

[15:51:50.0000] <Hixie>
Domenic: if you just want "not child of .example", then ":not(.example) > *"

[15:51:53.0000] <TabAtkins>
All element that aren't inside of a .example.

[15:52:07.0000] <Hixie>
is that what :not(.example *) does?

[15:52:34.0000] <Hixie>
so it's like the equivalent of my :not(:matches(.example #)) ?

[15:52:49.0000] <Domenic>
I think :not(.example) * might work

[15:52:55.0000] <Domenic>
So basically I have this CSS reset `* { box-sizing: border-box; margin: 0; padding: 0; }`

[15:53:00.0000] <Domenic>
but I noticed it was also affecting my examples

[15:53:01.0000] <Domenic>
which is bad

[15:53:07.0000] <TabAtkins>
Domenic: Nope.  That selector <.example><foo><div>

[15:53:13.0000] <Hixie>
":not(.example) *" will match... what TabAtkins said

[15:53:14.0000] <TabAtkins>
Rather, that selects the <div> there.

[15:53:20.0000] <Domenic>
ah

[15:53:38.0000] <TabAtkins>
Hell, it'll match <.example><div> as long as <.example> has an ancestor.

[15:53:40.0000] <Hixie>
the old fashioned way to do this is:

[15:53:45.0000] <Hixie>
* { ... }

[15:53:49.0000] <Hixie>
.example * { ... }

[15:53:49.0000] <Domenic>
also its specificity is way higher than * so that's causing my own problems

[15:53:51.0000] <Domenic>
yeah

[15:53:52.0000] <TabAtkins>
It'll only rule out elements which have .example as *all* their ancestors.

[15:54:03.0000] <Domenic>
Hixie: yeah I tried that but I can't get the margin/padding to go back to their "defaults"

[15:54:32.0000] <Hixie>
well you can hard-code the defaults

[15:54:38.0000] <Hixie>
40px for blockquote margin-left, etc

[15:55:34.0000] <Domenic>
it may be time to just do a targeted margin: 0/padding: 0 on all the things I am using

[15:55:43.0000] <Domenic>
Wish Chrome supported complex :not's

[15:57:25.0000] <Domenic>
While I'm hear does anyone know what's the deal with `-webkit-margin-before` and friends?

[15:57:39.0000] <TabAtkins>
what about them?

[15:58:04.0000] <Domenic>
what do they even do, why do they need nonstandard properties

[15:58:17.0000] <TabAtkins>
They're like margin-left, but logical directions rather than physical.,

[15:58:27.0000] <TabAtkins>
And they're non-standard because we haven't defined logical margins yet.

[15:58:39.0000] <Domenic>
logical = related to right-to-left/left-to-right?

[15:58:47.0000] <heycam>
TabAtkins, if you could do that soon it would be good :-)

[15:58:49.0000] <TabAtkins>
Yes, direction and writing-mode.

[15:58:51.0000] <heycam>
I'm fixing up our logical properties right now

[15:58:57.0000] <TabAtkins>
heycam: Yeah, fantasai and I intend to. :/

[15:59:00.0000] <Domenic>
cool, thanks

[15:59:32.0000] <heycam>
TabAtkins, one thing that's not clear from the various mailing list postings is whether logical properties are exposed on a computed style object


2014-12-19
[16:00:09.0000] <heycam>
TabAtkins, for now I'm assuming that logical properties are on CSS2Properties and so would be

[16:01:10.0000] <TabAtkins>
Yeah, they would be, possibly as shorthands.

[16:02:01.0000] <TabAtkins>
(Requires a two-level cascade, so you can cascade direction/writing-mode first, then cascade the logical properties with the physical properties.)

[16:02:17.0000] <heycam>
TabAtkins, yeah. the cascading thing is working out well in my patches.

[16:04:25.0000] <heycam>
TabAtkins, what spec will this be defined in, in case I send in some mails and need to work out what tag to use in the subject?

[16:07:24.0000] <TabAtkins>
heycam: http://dev.w3.org/csswg/css-logical-props/

[16:07:41.0000] <heycam>
TabAtkins, cheers, I didn't know about that spe

[16:07:42.0000] <heycam>
*spec

[16:07:56.0000] <TabAtkins>
Me neither. ^_^ fantasai just reminded me.

[16:08:00.0000] <heycam>
:)

[16:15:07.0000] <MikeSmith>
TabAtkins: btw please tell CSS people thanks from me for all efforts that have gone into writing mode. And to whoever says writing mode isn't important, please point them at http://www.asahi.com/special/politas/tanikawa/

[16:15:51.0000] <MikeSmith>
that's a poem that was published a week ago in the online version of one of Japan's biggest newspapers

[16:16:01.0000] <MikeSmith>
by Japan's most famous living poet

[16:16:29.0000] <Hixie>
you're making it hard for me to argue against <poem> and company

[16:16:39.0000] <MikeSmith>
(it's a nice poem too -- topical, about the national election that happened here last week)

[16:16:43.0000] <MikeSmith>
heh

[16:16:54.0000] <MikeSmith>
Hixie: I'd love to have <poem> personally

[16:17:10.0000] <Hixie>
:-)

[16:17:35.0000] <MikeSmith>
definitely much more than I love <article>

[16:18:41.0000] <MikeSmith>
anyway, the source for that online-newspaper poem uses writing-mode: vertical-rl, with some scripted fallback for browsers that don't yet support it

[16:21:12.0000] <MikeSmith>
and while I admire the engineering that went into the code for the fallback, it's horrible stuff that no web dev should rightly ever have to do just to get a poem layed out on the Web in the same simple way the poet has layed out every single poem he's ever published anywhere else

[16:22:20.0000] <MikeSmith>
the DOM of the fallback case ends up putting every single character of the poem into a span and then rotating each character

[16:25:25.0000] <MikeSmith>
anyway while realize almost no other part of the world needs writing-mode: vertical-rl support, it really is massively useful for users in Japan. To be able to do very simple things like read a poem in the way they the writer intended it to be read, and in the way that Japanese users are used to reading them

[16:25:51.0000] <MikeSmith>
/me goes back to fixing python

[16:29:12.0000] <TabAtkins>
Thank fantasai and kojiishi. ^_^

[16:29:31.0000] <TabAtkins>
heycam: Btw, the logical-prop spec is half-copypasted and half-inconsistent (you can decide which half for each part).

[16:30:09.0000] <fantasai>
heycam: It was pulled from a 2010 appendix of writing modes and only half updated

[16:30:16.0000] <fantasai>
heycam: It's on the to-do list

[16:30:27.0000] <heycam>
TabAtkins, fantasai, ok I will take it with a pitcher of salt

[16:30:27.0000] <fantasai>
heycam: to finish updating and publish it fpwd

[16:30:34.0000] <fantasai>
yes, thanks :)

[16:30:41.0000] <heycam>
:)

[16:31:03.0000] <fantasai>
heycam: names will be matched up to the latest writing modes ED and WG resolutions to use block-start/inline-start/start etc.

[16:31:21.0000] <fantasai>
heycam: and we'll get a nice shorthand like margin-block/margin-inline in addition to margin-inline-start etc.

[16:31:34.0000] <heycam>
fantasai, oh cool, I did wonder about something like margin-block/margin-inline

[16:31:43.0000] <fantasai>
heycam: yeah, it fell out of the new naming scheme :)

[16:31:47.0000] <fantasai>
/me happy about that

[16:32:03.0000] <fantasai>
heycam: Still uncertain exactly how the interlocked cascade will work, but, that's the way for ward wrt syntax

[16:32:13.0000] <heycam>
fantasai, would "margin-block" take 2 values?

[16:32:17.0000] <fantasai>
yes

[16:32:19.0000] <heycam>
ok

[16:33:07.0000] <fantasai>
heycam: thing I'm particularly unsure of is the values that 'float' would take :/

[16:33:53.0000] <heycam>
fantasai, inline-start/inline-end?

[16:34:04.0000] <fantasai>
anyway, feel free to ping me with questions. I probably won't get around to editing that up until I get through some of the more urgent stuff ^_^

[16:34:11.0000] <heycam>
(fantasai, which presumably would also get converted to left/right/top/bottom at cascade time?)

[16:34:23.0000] <fantasai>
heycam: Yeah, I'm not sure. text-align takes start/end

[16:34:37.0000] <fantasai>
heycam: float is weird

[16:34:49.0000] <fantasai>
heycam: because CSS1/2 floats are single-axis

[16:34:54.0000] <heycam>
fantasai, I guess it's weird partly because float:top is not analagous to float:left

[16:35:00.0000] <fantasai>
heycam: but theoretically (and howcome proposes this) it can be 2D

[16:35:07.0000] <fantasai>
heycam: right

[16:35:17.0000] <fantasai>
heycam: For 1D properties like text-align, we have start/end/left/right

[16:35:24.0000] <fantasai>
heycam: which map to inline-start/inline-end/line-left/line-right

[16:36:06.0000] <fantasai>
heycam: the logical properties (as opposed to values) have less of this confusing issue though :)

[16:36:20.0000] <fantasai>
heycam: so if that's what you're working on, it's less unclear what's supposed to happen

[16:36:45.0000] <heycam>
fantasai, no I'm just working on the properties. all the rest I'll leave to jkew/smontagu. :)

[16:37:15.0000] <heycam>
fantasai, anyway will email and further questions that arise; but mostly it's "just working"

[16:37:24.0000] <Domenic>
Anyone know what 1__qem in Blink is?

[16:37:57.0000] <fantasai>
heycam: cool. If you figure out how the cascade is working, let me know, I haven't quite written that section yet ;)

[16:38:09.0000] <fantasai>
heycam: also, don't you want to map physical to logical in the style data, not the other way around?

[16:38:23.0000] <fantasai>
heycam: since, iirc, the layout engine is doing layout in logical coords

[16:38:24.0000] <TabAtkins>
Domenic: __qem is a bizarro unit used solelky to implement a table margin quirk, or something like that.

[16:38:32.0000] <TabAtkins>
It's equal to em, except when it's not.

[16:38:37.0000] <heycam>
fantasai, I thought it was the other way around, we're storing things physically

[16:38:38.0000] <Domenic>
TabAtkins: funnn

[16:38:42.0000] <TabAtkins>
qem = "quirky em"

[16:38:55.0000] <heycam>
fantasai, otoh I'm not touching layout code, so maybe I'm out of date

[16:38:59.0000] <TabAtkins>
Ignore, it's dumb bullshit that nobody else does, so we don't actually need it, but nobody's removed it yet.

[16:39:06.0000] <fantasai>
heycam: well, we didn't have logical anything until recently

[16:39:13.0000] <heycam>
right

[16:39:24.0000] <fantasai>
heycam: I think the plan was, store the iframe data in physical coords (good for painting), but convert to logical coords for reflow

[16:39:45.0000] <heycam>
fantasai, I'm not sure where style data fits in those two parts

[16:39:54.0000] <fantasai>
heycam: So, unsure what style data should be recorded in. But might want to check with smontagu/jkew/dbaron

[16:39:58.0000] <fantasai>
heycam: about what's best

[16:39:59.0000] <heycam>
fantasai, probably the former

[16:40:08.0000] <heycam>
fantasai, anyway, it's easily switched if that works out easier

[16:40:20.0000] <fantasai>
fair enough :)

[16:40:52.0000] <fantasai>
have fun~ :P

[16:41:02.0000] <fantasai>
/me is pretty sure it is more fun that orthogonal flow calculations

[16:41:11.0000] <fantasai>
which still make me dizzy

[16:42:06.0000] <heycam>
heh yes I'm sure it would be :p

[17:09:51.0000] <roc>
I think we should carry on storing the style data as physical values for now.

[17:11:30.0000] <dbaron>
agreed

[17:53:19.0000] <MikeSmith>
Domenic: weird, clicking your <custom-blockquote> etc. links in my Chromium-built-from-trunk doesn't work

[17:53:23.0000] <MikeSmith>
/me rebuilds

[17:53:46.0000] <TabAtkins>
Interestingly, we do layout in logical space in Chrome/WebKit.

[17:53:54.0000] <Domenic>
MikeSmith: weird indeed, hmmm. You can just scroll to it also

[17:56:51.0000] <fantasai>
TabAtkins: Yeah, that's because you implementd writing modes

[17:57:08.0000] <fantasai>
TabAtkins: IIRC that was part of the changes that went into the implementation

[19:10:13.0000] <MikeSmith>
/me sees something called Surface Worker in the blink sources, prays its just some internal thing

[19:13:47.0000] <MikeSmith>
and now wondering why I'm not allowed to view https://code.google.com/p/chromium/issues/detail?id=434226

[19:15:00.0000] <MikeSmith>
/me discovers GuestView

[19:16:37.0000] <MikeSmith>
"manage a guestview from javascript".. I guess (hope) this is all just extensions stuff

[19:21:12.0000] <MikeSmith>
hah :) https://code.google.com/p/chromium/issues/detail?id=431002

[19:21:14.0000] <MikeSmith>
What steps will reproduce the problem?

[19:21:14.0000] <MikeSmith>
1. Look at web_view.js

[19:21:14.0000] <MikeSmith>
2. Gasp at the amount of code that is repeated, unnecessarily complex, and/or dead/unused.

[19:23:19.0000] <MikeSmith>
https://docs.google.com/document/d/1naxaMvhHbD_Rdr6o8hBdaAJczhpL8INkoglQw5TGcNk/edit#heading=h.5ce1bdjz6hrc

[19:23:39.0000] <MikeSmith>
"WTFrame: An Outrageous Web Threading Model"

[19:24:05.0000] <MikeSmith>
<worker-thread-frame src="foo.html" width=x height=y>

[19:24:57.0000] <MikeSmith>
I assumed this is probably already been discussed somewhere in the thousands of mailing-list messages in my inbox I'm behind on reading

[19:29:36.0000] <MikeSmith>
wondering how this different than http://benfrancis.github.io/webview/

[21:31:51.0000] <MikeSmith>
Hixie: https://rawgit.com/secretGeek/console-adventure/master/console.html

[22:57:56.0000] <zcorpan>
TabAtkins: which quirk?

[00:22:48.0000] <zcorpan_>
TabAtkins: oh it's https://html.spec.whatwg.org/multipage/rendering.html#margin-collapsing-quirks

[00:23:08.0000] <zcorpan_>
except not conforming to the spec

[00:33:36.0000] <zcorpan_>
TabAtkins: btw iirc font-family only allows strings and idents, not numbers or dimensions. although we considered changing it at some point

[01:04:34.0000] <foolip>
annevk: I replied with a guess

[01:06:47.0000] <annevk>
Domenic: https://github.com/domenic/html-as-custom-elements/issues/35 another idea was to use Symbols so we would maybe support these kind of callbacks for "normal" elements too down the road

[01:24:52.0000] <foolip>
annevk: I don't understand https://www.w3.org/Bugs/Public/show_bug.cgi?id=27294#c24

[01:25:49.0000] <foolip>
are you saying that selectors won't match in non-HTML, non-SVG namespaces, that getElementById doesn't work, or something like that?

[01:28:20.0000] <foolip>
I tested, both getElementById and querySelector seems to find these Elements when they have class="" and id="" attributes

[01:39:46.0000] <annevk>
foolip: oh sorry

[01:40:38.0000] <zcorpan_>
i wonder if DTD ID has been dropped by anyone yet

[01:41:16.0000] <annevk>
data:text/xml,<x id="test"><script xmlns="http://www.w3.org/1999/xhtml">alert(document.getElementById("test"))</script><style xmlns="http://www.w3.org/1999/xhtml">%23test {background:lime } </style></x>

[01:41:20.0000] <annevk>
I wonder when that happened

[01:42:16.0000] <annevk>
For some reason that URL causes infinite loading in Chrome

[01:44:10.0000] <Ms2ger>
zcorpan_, I believe I did for Gecko

[01:48:15.0000] <zcorpan_>
w00t http://software.hixie.ch/utilities/js/live-dom-viewer/saved/3343

[01:49:57.0000] <zcorpan_>
the %23y should be %23z but anyway, looks like it has been dropped by gecko/webkit/blink

[01:50:40.0000] <zcorpan_>
scary that i still know how to write an internal subset :-(

[01:50:59.0000] <zcorpan_>
stupid brain

[02:00:58.0000] <SteveF_>
Hixie: note the HTML feature to ARIA http://rawgit.com/w3c/aria/master/html-aam/html-aam.html#mapping-to-existing-wai-aria-role-semantics and acc API mappings are now in http://rawgit.com/w3c/aria/master/html-aam/html-aam.html, and is what implementers are using, plan on pulling plug on w3c html WAI-ARIA section. The conformance requirements for use of ARIA and checking tool implementation...

[02:01:00.0000] <SteveF_>
...is moving here https://specs.webplatform.org/html-aria/webspecs/master/ (note very ealry draft needs work) - MikeSmith is moving to use that for his checker implementations

[05:55:14.0000] <SteveF_>
is https://developers.whatwg.org/ being maintained or is it stale?

[05:55:41.0000] <SteveF_>
can't find any date on it

[05:59:45.0000] <Ms2ger>
Staleish, I think

[06:06:13.0000] <SteveF_>
Ms2ger: thanks

[06:54:40.0000] <ondras>
q

[06:54:44.0000] <ondras>
oops.

[11:27:29.0000] <Krinkle>
Looks like the "disabled" attribute on <link rel=stylesheet> is non-standard (Chrome implements it, Firefox does not)

[11:27:37.0000] <Krinkle>
They both implement (per standard) the DOM object property though.

[11:27:42.0000] <Krinkle>
Any chance of adding that to the standard?

[11:27:52.0000] <Krinkle>
https://developer.mozilla.org/en-US/docs/Web/HTML/Element/link?#Attributes

[11:32:39.0000] <Ms2ger>
JavaScript error: https://whatwg.org/demos/canvas/blue-robot/index-idle.html, line 44: NS_ERROR_FAILURE:

[11:34:46.0000] <Ms2ger>
Krinkle, file a bug, please

[11:35:35.0000] <Krinkle>
Ms2ger: Which bug tracker? w3?

[11:35:56.0000] <Ms2ger>
Yeah

[11:36:02.0000] <Ms2ger>
Under WHATWG::HTML

[11:40:32.0000] <Krinkle>
Ms2ger: OK. Was slightly confused with product 'HTML WG', but found it. I guess that one is for actual specs, once published.

[11:41:30.0000] <Ms2ger>
That one's for political games rather than technical issues

[11:46:33.0000] <Krinkle>
https://www.w3.org/Bugs/Public/show_bug.cgi?id=27677

[11:46:34.0000] <Krinkle>
Thanks

[11:51:05.0000] <Hixie>
https://whatwg.org/newbug is a nice short link for people to point others to when they're to file bugs

[11:53:40.0000] <Hixie>
developers.whatwg.org is mostly blocked on https://github.com/benschwarz/developers.whatwg.org/issues/90

[12:05:39.0000] <Ms2ger>
Hixie, while you're here

[12:06:01.0000] <Ms2ger>
Hixie, the example at #association-of-controls-and-forms doesn't actually seem to work

[12:08:40.0000] <TabAtkins>
Hixie: Any change you can mark the developers version with an obsoletion notice? Multiple people asked me about it at the conf I was at last week.

[12:09:06.0000] <TabAtkins>
*chance

[14:11:48.0000] <Domenic>
HTML as Custom Elements is so far just depressing, can't even get <custom-div> or <custom-span> faithfully working.

[14:18:39.0000] <TabAtkins>
custom-div is just lacking the ability to hook into the UA stylesheet, which is unsurprising, as it's the UA stylesheet.

[14:19:13.0000] <TabAtkins>
Also <div> has no styling at all, if custom elements default to block.  What's wrong there?

[14:25:22.0000] <Domenic>
custom elements default to inline

[14:25:28.0000] <Domenic>
<custom-span> has no styling

[14:25:33.0000] <Domenic>
but, it's exposed to a11y as a <div>

[14:25:38.0000] <Domenic>
(like all custom elements are)

[14:26:02.0000] <TabAtkins>
You people fucked up.

[14:26:10.0000] <TabAtkins>
^_^

[14:26:27.0000] <TabAtkins>
"Let's style them as inline, but tell a11y that they're block, lolololol"

[14:27:16.0000] <Domenic>
I *think* it's because all unknown elements are exposed to a11y as block. Just like all unknown elements are styled by CSS as inline.

[14:28:54.0000] <TabAtkins>
If that's actually the preëxisting behavior, then I'll repeat: lolololol

[14:52:07.0000] <Hixie>
TabAtkins: i think ben's the one with upload access

[14:52:14.0000] <Hixie>
Mso150: oh?

[14:52:15.0000] <Hixie>
er

[14:52:25.0000] <Hixie>
that was for ms2ger

[15:23:09.0000] <esprehn>
Anyone know how you're supposed to abort() a request made with fetch?

[15:31:49.0000] <jsbell>
esprehn: not defined (yet)...


2014-12-20
[19:40:04.0000] <MikeSmith>
I wonder why the people who are speaking most emphatically about transitioning the Web to TLS/HTTPS and the "Prefer Secure Origins For Powerful New Features" stuff are not speaking equally emphatically (or at all, really) about enabling Gmail users to encrypt their e-mail messages

[19:40:24.0000] <MikeSmith>
(using, e.g., PKI/PGP)

[21:40:52.0000] <Domenic>
probably because they work on browser teams and not the Gmail team?

[22:50:48.0000] <moo-_->
email is the weakest link of web security?

[01:45:33.0000] <annevk>
Domenic: can you maybe blog about it?

[01:45:47.0000] <annevk>
Domenic: would be interesting to read what you ran into

[03:01:11.0000] <hgl>
TabAtkins, my w3c bug report (#27651) leads me to your advanced transition proposal on www-style, is there still any interest to push it forward?

[03:13:38.0000] <annevk>
www-tag lol

[10:43:33.0000] <TabAtkins>
hgl: Not really; it was overthinking the problem.

[11:40:50.0000] <Domenic>
www-tag lol indeed


2014-12-21
[16:46:46.0000] <MikeSmith>
TabAtkins: http://codepen.io/TabAtkins/pen/WbxgVg is brilliant

[17:06:26.0000] <TabAtkins>
MikeSmith: Haha, thanks.

[17:06:32.0000] <TabAtkins>
fantasai's sketch, my coding.

[10:19:44.0000] <sheerun>
Will it be possible to create 2 instances of System?

[10:20:07.0000] <sheerun>
As far as I understand System will be singleton. Why so?

[10:25:14.0000] <smaug____>
/me wonders what System

[10:37:55.0000] <sheerun>
http://whatwg.github.io/loader/

[11:27:52.0000] <TabAtkins>
Urgh, I always forget how to get an Array as an attribute value in WebIDL.

[11:50:34.0000] <smaug____>
well, https://www.w3.org/Bugs/Public/show_bug.cgi?id=23682 is still open

[12:31:27.0000] <TabAtkins>
smaug____: Ugh, that's the bug I was afraid of.

[14:15:59.0000] <heycam>
TabAtkins, the current plan in that bug (the one I made a branch of the spec with) is what will go in the spec


2014-12-22
[16:47:27.0000] <Domenic>
heycam: ooh didn't realize there was progress on that, planning to merge soon?

[16:48:02.0000] <heycam>
Domenic, yeah I chatted with Anne in Portland about it, he seemed ok with that plan in the end

[16:48:22.0000] <heycam>
Domenic, so yeah it's top of my IDL todo list

[16:48:27.0000] <Domenic>
Awesome. Yeah I remember thinking it was pretty good at the time and upon reviewing I agree with my past self.

[16:48:29.0000] <Domenic>
Yay :D

[16:49:57.0000] <heycam>
coming to the same conclusion you did in the past after thinking about something again is the best feeling :)

[16:50:05.0000] <heycam>
the opposite is the worst

[18:06:46.0000] <MikeSmith>
https://twitter.com/sgalineau/status/546848711440359424

[22:29:22.0000] <hallvors>
Can someone dig into the current standards and explain what's the right behaviour for http://jsfiddle.net/hallvors/tthfrow2/ ? Basic question: <button><img></button> - when you click IMG, what should event.target be? Context: https://bugzilla.mozilla.org/show_bug.cgi?id=1089326

[22:40:02.0000] <MikeSmith>
hallvors: is this a homework assignment

[12:12:03.0000] <TabAtkins>
hallvors: Ugh, the answer depends on whether <button> is a replaced element or not.

[12:12:14.0000] <TabAtkins>
And it's really, for all practical purposes, not. :(

[12:55:01.0000] <smaug____>
something about event handling and <button>?

[12:55:32.0000] <smaug____>
not sure what replaced element has necessarily to do with this

[13:43:16.0000] <Domenic>
TabAtkins: any progress on overriding metadata from the web interface BTW?

[13:43:31.0000] <TabAtkins>
Domenic: I thought plinss said he added that some time ago.

[13:43:48.0000] <Domenic>
hmm I don't remember, will re-read and try myself

[13:44:44.0000] <Domenic>
TabAtkins: ah yep looks like it was good, awesome, I should use it.

[14:05:32.0000] <Domenic>
TabAtkins: I remember what I was waiting on https://github.com/tabatkins/bikeshed/pull/288#issuecomment-65492329 but I imagine you ended up committing that eventually

[14:06:00.0000] <TabAtkins>
Oh yeah, I pushed that the next day or something.


2014-12-23
[16:21:06.0000] <TabAtkins>
smaug____: Hmm, I guess you're right. I was thinking that replaced element-ness would affect hit detection.

[09:31:32.0000] <MikeSmith>
cool to see that the verb "to Pilgrim" has finally entered into the language https://twitter.com/sgalineau/status/547443177922117632

[09:34:26.0000] <caitp->
as in "to Scott Pilgrim"?

[10:10:52.0000] <miketaylr>
as in to Mark Pilgrim

[15:38:46.0000] <zewt>
chrome using 8 gigs of memory; i guess browsers these days assume that browsing is the only thing anyone does, so they can take over the entire machine

[15:39:44.0000] <zewt>
i'm seriously having to look at upgrading to beyond 16 gb because that's just not enough with browsers today

[15:43:03.0000] <jgraham>
Chrome isn't exactly noted for being memory efficient in the many-tabs case

[15:44:41.0000] <zewt>
that's sort of above and beyond

[15:45:51.0000] <jgraham>
Well it very much depends what you are doing with it

[15:46:06.0000] <jgraham>
If you just opened an 8Gb image file, it seems entirely reasonable

[15:47:06.0000] <jgraham>
(OK, that's a silly example, but the point stands that saying "my browser is using X amount of memory is just as silly as saying "my desktop environment including all applications is using X amoutn of memory, but not noting what the applications are)

[15:47:25.0000] <jgraham>
That sentence needed some closing quotes

[15:49:38.0000] <zewt>
not really; a single tab isn't analogous to a single application, having 50 tabs open is nothing like having 50 applications open

[15:51:14.0000] <caitp->
that doesn't mean 1 tab === adobe premiere or something

[15:51:43.0000] <zewt>
it seems like chrome doesn't even do things like unload images from tabs you haven't viewed in a while (not that I've poked at the internals)

[15:51:59.0000] <jgraham>
A single tab seems very like a single application

[15:52:18.0000] <jgraham>
e.g. a single tab containing gmail seems a lot like a single client-side mail application

[15:54:48.0000] <zewt>
most pages aren't gmail

[15:56:57.0000] <zewt>
i'd prefer to use firefox anyway (has its own problem, but OOM'ing my system isn't one of them), but it started choking hard after some update; i do need to go back and look at that again

[15:57:02.0000] <zewt>
s/problem/problems/

[15:57:15.0000] <jgraham>
Indeed. Similarly most applications aren't (insert your favourite mail client here)

[15:57:36.0000] <zewt>
most tabs aren't like an application at all, they're like a complex document

[15:58:29.0000] <zewt>
and more to the point, it's the browser's job to keep the memory usage (along with all of the other messes) of the web in check


2014-12-24
[16:01:38.0000] <jgraham>
Whilst I don't doubt that browsers could do better in many situations, I still maintain that complaining on the basis of some notional idea that web-pages are generally simple things that should never use much memory doesn't make any sense

[16:03:06.0000] <zewt>
running out of memory because of a browser is very new; never had anything close to this problem before maybe a year ago

[16:13:40.0000] <caitp->
safari may be slow, but it does seem to do a pretty good job of keeping memory in check

[17:04:37.0000] <TabAtkins>
caitp-: Re "to pilgrim", https://groups.google.com/a/chromium.org/forum/#!msg/blink-dev/nzRY-h_-_ig/vsNKAtkRIpIJ

[18:29:39.0000] <hgl>
TabAtkins, sorry for the late reply. if advanced transition is overthinking, does it mean the spec isn't interested in provide a solution for a problem like http://jsbin.com/layuhadiku/1/edit?html,css,output ?

[18:47:33.0000] <hgl>
a quick question: when the spec says node.append(nodes), does it mean node.append(...nodes) or nodes is just a regular array?

[18:49:49.0000] <hgl>
nm, IDL covered it.

[20:50:12.0000] <MikeSmith>
roc: has ruby support landed already under a flag?

[20:50:25.0000] <MikeSmith>
in gecko I mean

[20:51:12.0000] <MikeSmith>
hmm yeah, I see dbaron's comment at https://bugzilla.mozilla.org/show_bug.cgi?id=256274#c204

[20:51:51.0000] <MikeSmith>
layout.css.ruby.enabled I guess

[20:52:06.0000] <dbaron>
MikeSmith, Xidorn has been working on it lately

[20:52:19.0000] <MikeSmith>
oh hey dbaron

[20:52:26.0000] <MikeSmith>
cool, thanks for the info

[20:52:30.0000] <dbaron>
MikeSmith, we were just quibbling over getting the UA stylesheet bits landed today

[20:52:43.0000] <dbaron>
MikeSmith, so that might land within a few days, which would make the pref more useful, even though it's still in progress

[20:52:59.0000] <MikeSmith>
dbaron: very nice

[05:26:07.0000] <rubys>
annevk: you around?

[05:53:08.0000] <rubys>
annevk: when you get back, I'd be interested in any thoughts you may have on https://www.w3.org/Bugs/Public/show_bug.cgi?id=27687

[05:53:12.0000] <rubys>
annevk: I

[05:53:41.0000] <rubys>
... 'm in favor; and since there is clearly no urgency, I'd be inclined to only implement it in the rewritten parser

[05:56:07.0000] <annevk>
rubys: you mean making "http://s/:test" non-conforming? And "http://s/ test "?

[05:56:45.0000] <rubys>
yes to the first.  the second is "      http://example.com/   "

[05:57:55.0000] <rubys>
more background: http://intertwingly.net/tmp/urlvsuri.html

[05:58:08.0000] <annevk>
":" is not excluded from path segments per the specification

[05:58:42.0000] <rubys>
"the specification"?  Which one (URL or RFC 3986)?

[05:58:48.0000] <annevk>
URL

[05:59:08.0000] <rubys>
I'm not suggesting changing the output of parse, simply indicating a conformance error.

[05:59:27.0000] <annevk>
That would also require changing the definition of path segments

[06:00:48.0000] <annevk>
And looking at https://tools.ietf.org/html/rfc3986#section-3.3 URIs can mostly contain a colon there just fine

[06:01:11.0000] <rubys>
re: dfn of path segments: I don't follow.  Adding "if c is ':' then parse error" to https://url.spec.whatwg.org/#relative-path-start-state

[06:01:40.0000] <annevk>
That would make the parser inconsistent with how path segments are defined

[06:02:16.0000] <rubys>
ok, lets back up.  First: segment-nz-nc explicitly excludes colons.

[06:02:55.0000] <rubys>
this is referenced by path-noscheme

[06:04:06.0000] <rubys>
Another way to address this would be to fix: https://specs.webplatform.org/url/webspecs/develop/#relative-url

[06:04:08.0000] <annevk>
Yeah, that's for a case like <a href="s:test"> as due to the colon it can no longer be a relative reference

[06:04:36.0000] <rubys>
no, it explicitly is only the first character

[06:05:13.0000] <annevk>
no

[06:05:27.0000] <annevk>
'non-zero-length segment without any colon ":"'

[06:06:04.0000] <rubys>
ok

[06:06:09.0000] <rubys>
path-noscheme = segment-nz-nc *( "/" segment )

[06:06:20.0000] <rubys>
so this bizarre rule only applies to the first segment

[06:06:32.0000] <annevk>
yes, because of what I just said

[06:06:41.0000] <annevk>
it's for relative references only

[06:06:58.0000] <annevk>
so you can disambiguate those from URIs

[06:08:00.0000] <rubys>
going back to https://specs.webplatform.org/url/webspecs/develop/#relative-url, this check could be added to the last path.

[06:09:15.0000] <rubys>
all other cases have either a colon or a slash before the path

[06:10:18.0000] <annevk>
if you have this top down matching that seems redundant

[06:11:31.0000] <rubys>
it clearly isn't, as ":a" doesn't produce a conformance error.

[06:13:15.0000] <rubys>
I guess another way to fix this would be to allow scheme to return zero length strings, but produce a conformance error along the way.  See https://specs.webplatform.org/url/webspecs/develop/#scheme

[06:15:58.0000] <rubys>
@: would, however, be considered a conforming relative URL but not a valid URI

[06:18:53.0000] <gavinc>
rubys: small confusion "urltestdata.txt has the following tests" ... which tests?

[06:23:18.0000] <rubys>
gavinc: here is urltestdata.txt: https://github.com/w3c/web-platform-tests/blob/master/url/urltestdata.txt

[06:23:41.0000] <gavinc>
So ALL of those?

[06:24:13.0000] <rubys>
gavinc: I'm confused about what you are confused about.  :-)

[06:24:26.0000] <rubys>
Here's the results of the tests: https://url.spec.whatwg.org/interop/test-results/

[06:25:14.0000] <rubys>
looking at those results, there are some conforming URLs that are not valid URIs.  I think that should be fixed.

[06:25:31.0000] <rubys>
looking deeper, I came up with: http://intertwingly.net/tmp/urlvsuri.html

[06:26:09.0000] <gavinc>
Okay, sorry, the bug just didn't say which of the tests in urltestdata.txt were being talked about

[06:27:18.0000] <rubys>
gavinc: ah.  that is indeed confusing

[06:27:39.0000] <rubys>
I meant to enumerate them

[06:31:01.0000] <rubys>
comment added to the bug: https://www.w3.org/Bugs/Public/show_bug.cgi?id=27687#c1

[06:32:06.0000] <gavinc>
annevk's solution doesn't seem to cover " foo.com " from that list nor 100% whitespace like " \t" ?

[06:33:03.0000] <rubys>
we didn't discuss that.  I'm proposing adding a check to https://specs.webplatform.org/url/webspecs/develop/#concept-basic-url-parser

[06:36:05.0000] <gavinc>
mm, so by that wouldn't " foo.com " just become "foo.com" relative to any currently set base?

[06:36:53.0000] <gavinc>
and " \t" become the same as an empty "", and thus again resolve relative to the current base?

[06:37:13.0000] <rubys>
gavinc: yes.  want to play with a few tests?  Try: https://url.spec.whatwg.org/reference-implementation/liveview2.html#about%3A

[06:37:47.0000] <rubys>
also, some tests have already been defined with test results captured for a variety of user agents: https://url.spec.whatwg.org/interop/test-results/

[06:39:46.0000] <gavinc>
/me reads more

[06:42:58.0000] <gavinc>
"A parse error if leading/trailing white space is present in" seems a bit, mmm, over zealous? Given that none of the implementations today consider " foo.com " to be a parse error

[06:43:54.0000] <rubys>
a conformance error.  See https://specs.webplatform.org/url/webspecs/develop/#url-writing

[06:47:41.0000] <gavinc>
ah, so not parse exception, so go ahead and keep parsing

[09:13:46.0000] <rubys>
*sigh* http://lists.w3.org/Archives/Public/public-ietf-w3c/2014Dec/0087.html


2014-12-25
[19:55:18.0000] <MikeSmith>
"The notion that 3986 had to be replaced is nothing more than ignorance combined with the arrogant way that HTML5 has been allowed to piss all over the rest of Web standards."

[19:56:50.0000] <MikeSmith>
gotta love how Roy gets to say whatever he wants and always gets a pass from the techo-reactionary old guard now matter how obnoxious or offensive or vulgar anything he says is

[19:57:07.0000] <MikeSmith>
instead they just laugh

[19:57:23.0000] <MikeSmith>
good old Roy, he's at it again

[23:18:17.0000] <Domenic>
Roy is the epitome of "don't meet your heroes"

[23:36:12.0000] <MikeSmith>
he's got a cool ride though http://health.uncc.edu/sites/health.uncc.edu/files/media/Roy%20Fielding.JPG

[23:48:46.0000] <Domenic>
So if I were to implement charset detection, I notice I don't have to inspect more than the first 1024 bytes. But, is there any guide on how to do the detection without doing a full parse?

[23:49:19.0000] <Domenic>
It seems like browsers clearly cheat, which is why <meta charset> was able to be created in place of <meta http-equiv=... content=...>

[23:49:35.0000] <Domenic>
but the spec doesn't seem to give any guidance on how browsers should cheat

[23:49:39.0000] <Domenic>
Hixie ^

[23:51:29.0000] <Domenic>
Hixie nevermind, was looking in wrong section of the parser

[23:51:42.0000] <Domenic>
or rather, was looking at the wrong section of the spec; the parser is the right section

[06:25:20.0000] <ricky_ds>
Hi there, currently whenever I go to developers.whatwg.org I get the error message in Firefox that the browser is in offline mode and that it cannot show the page. However I'm online and IE shows it correctly. I know in the past I have used this page in offline mode though [15:23] <ricky_ds> How can I make firefox forget about my past (:grin:) and load the page fresh again?

[06:26:08.0000] <ricky_ds>
all other parts of whatwg.org work correctly otherwise.


2014-12-26
[05:09:34.0000] <MikeSmith>
Hixie_: https://lists.mozilla.org/pipermail/dev-platform/2014-December/008123.html from Xidorn about ruby

[05:16:35.0000] <MikeSmith>
Hixie_: I don't remember anybody else yet having brought up the case of ruby for words like 振り仮名, where you don't want ruby for the り character, because it's already a phonetic character, but you do want ruby for the other characters, because they're kanji.

[09:23:02.0000] <erlehmann>
anyone here at 31c3?


2014-12-27
[01:35:35.0000] <Ms2ger>
Hixie: happy birthday!

[10:07:20.0000] <MikeSmith>
Hixie_: https://lists.mozilla.org/pipermail/dev-platform/2014-December/008135.html (reply I sent about ruby for the base-consisting-of-kanji-mixed-with-kana case)


2014-12-29
[11:03:56.0000] <gsnedders>
can someone give me an easy to understand explaination of margins on inline elements in the normal flow and what happens to them with margin collapsing?

[11:04:00.0000] <gsnedders>
AFAICT they don't collapse?

[14:26:58.0000] <roc>
they don't collapse.

[14:27:21.0000] <roc>
it's pretty easy :-)


2014-12-30
[06:02:24.0000] <MikeSmith>
Domenic: dunno if you ever saw https://wiki.mozilla.org/WebAPI/DesignGuidelines but it seems like something you appreciate and maybe have refinements to suggest

[06:56:09.0000] <tantek>
MikeSmith - hopefully you appreciate it too!

[06:56:20.0000] <MikeSmith>
tantek: sure

[06:58:04.0000] <MikeSmith>
tantek: btw I've been thinking a bit lately about the concept of "permissionless innovation" that's been used a lot this year

[06:58:29.0000] <tantek>
MikeSmith - seems like a fairly broad term

[06:58:30.0000] <MikeSmith>
e.g., in the NetMundial literature

[06:58:33.0000] <MikeSmith>
https://www.netmundial.org/principles

[06:59:00.0000] <MikeSmith>
tantek: for the more specific context, see http://www.internetsociety.org/blog/tech-matters/2014/04/permissionless-innovation-openness-not-anarchy

[06:59:34.0000] <MikeSmith>
anyway I've been thinking about it in the more specific context of the W3C document license

[06:59:46.0000] <tantek>
I am skeptical about netmundial as I am about openstand

[07:00:06.0000] <tantek>
neither was developed according to their own principles of transparency, and openness of the process by which their principles etc. were discussed and developed

[07:00:25.0000] <MikeSmith>
well the W3C is aligned somewhat with both netmundial and openstand, as you know

[07:01:10.0000] <MikeSmith>
but anyway I find it hard to reconcile the W3C document license with that "permissionless innovation" principle

[07:01:26.0000] <MikeSmith>
and I would think anybody else would find it hard to reconcile

[07:01:43.0000] <tantek>
agreed on that point

[07:03:04.0000] <tantek>
I'm more annoyed with the use of openstand as a stick in the normative reference policy, and thus excuse to exclude references to WHATWG (or other community standards) documents

[07:03:36.0000] <MikeSmith>
tantek: yeah me too, very much so

[07:03:46.0000] <Ms2ger>
Is that rubys' thing?

[07:03:57.0000] <MikeSmith>
that tactic runs counter to the spirit of what openstand is supposed to be about

[07:04:11.0000] <MikeSmith>
Ms2ger: what? openstand?

[07:04:20.0000] <Ms2ger>
Yeah

[07:04:22.0000] <tantek>
MikeSmith thus I have taken the approach of questioning openstand itself

[07:04:33.0000] <tantek>
being inconsistent with its own principles

[07:05:29.0000] <tantek>
Ms2ger we don't know who is behind openstand because its development was/is not transparent, in direct contradiction with its own principles.

[07:05:43.0000] <tantek>
"who" meaning people, not virtual organizations

[07:06:24.0000] <MikeSmith>
tantek: Pointing out internal inconsistencies in openstand makes sense. But I think it's also productive to point out cases where those advocating for everybody to adhere to openstand are not adhering to it themselves. And the case of "permissionless innovation" is a case of that, I think

[07:06:53.0000] <tantek>
MikeSmith - yes the Netmundial thing is more interesting - there's a bit more provenance / names of people there

[07:07:00.0000] <MikeSmith>
yeah

[07:07:11.0000] <MikeSmith>
anyway, specifically, nobody should need to ask permission to innovate by experimenting with creating a new version of particular web standard, and publishing it and attempting to get it implemented and standarizied

[07:07:22.0000] <tantek>
but openstand just looks like an obfuscating layer of abstraction

[07:07:40.0000] <tantek>
yeah - agreed on experimenting like that

[07:08:05.0000] <MikeSmith>
well the W3C document license discourages exactly that kind of experimentation

[07:08:16.0000] <tantek>
indeed

[07:08:30.0000] <MikeSmith>
a chilling effect, even

[07:08:46.0000] <tantek>
yes

[07:09:21.0000] <MikeSmith>
I think it would be wortwhile for the AB to consider it in those terms

[07:11:10.0000] <gsnedders>
"But what can we do to get such Innovators to be Members?"

[07:11:59.0000] <gsnedders>
YOU'RE DEVALUING OUR INVESTMENT IN W3C MEMBERSHIP FEES!

[07:55:58.0000] <tantek>
MikeSmith - part of the challenge is it's not just the AB, but rather the AC, or certain outspoken AC members

[08:00:01.0000] <MikeSmith>
tantek: sure but the AB is a level of governance beyond the AC, and has responsibility for holding the W3C accountable to its principles even in the face of face of AC members who want the W3C to do things that aren't consistent with those principles

[08:01:01.0000] <tantek>
the document license advocates typically trump up 'consensus' as the w3c principle that they're defending

[08:01:16.0000] <tantek>
against the wild wild non-consensus west of whatwg and anyone else apparently

[08:31:17.0000] <MikeSmith>
tantek: core principles trump consensus

[08:31:30.0000] <MikeSmith>
and I realize I'm preaching to the choir

[08:31:35.0000] <tantek>
MikeSmith, they think consensus is a core principle

[08:35:24.0000] <MikeSmith>
sure but anybody reasonable would agree that if a consensus emerged from the AC that conflicted with other core principles then the problem is with the AC and not other core principles

[08:36:10.0000] <MikeSmith>
regardless it's a moot point in the case of the document license, because no actual consensus has emerged from the AC about it

[08:36:16.0000] <MikeSmith>
or actually that's wrong

[08:36:53.0000] <MikeSmith>
the consensus that's emerged from the AC about it is that the vast majority of the AC don't feel strongly about it either way

[08:38:34.0000] <MikeSmith>
and so instead what's been allowed to happen is that a very small handful of vocal anti-free-license advocates in the AC have been allowed to set the position

[08:41:20.0000] <Ms2ger>
Now that's a first at the W3C

[15:50:11.0000] <Domenic>
Successssss https://streams.spec.whatwg.org/commit-snapshots/c6704b8e64623821ed70efd17a45ac5b91672397/


2014-12-31
[17:08:41.0000] <MikeSmith>
Domenic: you added the locking stuff?

[17:11:45.0000] <Domenic>
Getting bikeshed + Travis CI to automatically generate the annoying warning was the cause for celebration :). But yes, that too.

[17:15:18.0000] <MikeSmith>
well yay for annoying warnings too ９☺

[07:03:26.0000] <MikeSmith>
Happy New Year from Japan

[07:04:10.0000] <aho>
happy new year \o

