2012-06-01
[17:00:21.0000] <Hixie>
i don't really see a formal description of what safehtml`` or html`` would be defined as

[17:01:33.0000] <Hixie>
http://js-quasis-libraries-and-repl.googlecode.com/svn/trunk/index.html doesn't seem to do anything, unless i'm missing something

[17:01:44.0000] <Hixie>
oh i see, i'm getting security errors

[17:01:58.0000] <ojan>
Hixie: there isn't a formal description since the implementation of safehtml is orthogonal to quasis

[17:02:03.0000] <ojan>
Hixie: http://code.google.com/p/js-quasis-libraries-and-repl/source/browse/trunk/js/safehtml.js

[17:02:56.0000] <ojan>
Hixie: but the point is that quasis call the safehtml function and that function can grab the string parts and know which parts are from JS and which parts are from the quasi

[17:03:32.0000] <ojan>
Hixie: you could implement safehtml in a way that gives errors when you do invalid things (e.g. mis-nest html element or quotes)

[17:04:17.0000] <Hixie>
well sure

[17:04:24.0000] <Hixie>
i guess i'm asking what is it you expect browsers to implement

[17:04:54.0000] <Hixie>
(this implementation of safehtml`` at http://js-quasis-libraries-and-repl.googlecode.com/svn/trunk/index.html seems to have an incomplete understanding of CSS)

[17:05:01.0000] <ojan>
Hixie: yeah, we'd have to decide how safehtml should work. there's been basically 0 discussion of that

[17:05:25.0000] <ojan>
Hixie: it could certainly work like your E4H proposal + context-aware escaping

[17:05:40.0000] <ojan>
Hixie: or it coudl work like the Document.parse proposal + context-aware escaping

[17:06:27.0000] <ojan>
the only major difference from E4H is you'd get the error when calling safehtml instead of when parsing the JS

[17:06:35.0000] <Hixie>
yeah

[17:06:46.0000] <Hixie>
that seems like sadness

[17:06:48.0000] <ojan>
whether you do E4H style parsing or implied context parsing is orthogonal

[17:06:53.0000] <Hixie>
right

[17:06:54.0000] <ojan>
Hixie: meh. that doesn't really bother me

[17:07:20.0000] <Hixie>
you've spent too much time with js and not enough with Real Languages. :-P

[17:07:55.0000] <ojan>
Hixie: might be true. although, the last four years has been mostly C++ and python

[17:08:07.0000] <Hixie>
i switch between compiled strongly statically typed languages on the server and JS on the client all the time and the fact that i can typo a variable name in JS and nobody tells me until hours later i hit that codepath drives me utterly batty

[17:08:34.0000] <Hixie>
where on the other side, the slightest typo gets immediately detected

[17:09:03.0000] <Hixie>
not to mention more subtle things like assigning radians to degrees and so on

[17:09:13.0000] <Hixie>
which don't even get caught at runtime in js

[17:09:46.0000] <Hixie>
hell i can pass a Document object where I meant to pass a string and JS is like "sure buddy, here ya go"

[17:10:08.0000] <Hixie>
"i bet you meant to just output the string '[Document object]' buddy"

[17:10:18.0000] <Hixie>
</rant>

[17:10:32.0000] <ojan>
:)

[17:10:55.0000] <ojan>
Hixie: yes, i don't disagree that it's better

[17:12:06.0000] <Hixie>
anyway, bbiab :-)

[17:12:11.0000] <roc_>
and yet, untyped languages keep winning

[17:15:50.0000] <jamesr_>
so does charlie sheen

[17:22:28.0000] <wodemay>
wtf is e4h?

[17:23:37.0000] <roc_>
Academic PL researchers keep asking me why untyped languages win, and I have to tell them I have no idea

[17:23:46.0000] <roc_>
there are lots of theories, and no data

[20:13:26.0000] <wodemaye__>
can an iframed page set parent.location?

[23:35:37.0000] <Hixie>
how has requestAnimationFrame() not been implemented yet?

[23:41:48.0000] <odinho>
Hixie: How? Well, by not doing it I believe :P

[23:55:59.0000] <MikeSmith>
Hixie: in what UA?

[23:56:26.0000] <MikeSmith>
it's in Firefox and Chrome and IE at least

[23:56:57.0000] <odinho>
MikeSmith: I know of one possible culprit at least :P

[23:57:12.0000] <MikeSmith>
ah

[23:57:13.0000] <odinho>
I'm staring it down now.

[23:57:20.0000] <MikeSmith>
you all need to get to work on that man

[23:57:42.0000] <odinho>
MikeSmith: Kinda not really my field. I want it but emoller is swamped.

[23:57:53.0000] <odinho>
We should clone him or something.

[23:57:55.0000] <MikeSmith>
oh

[23:58:18.0000] <MikeSmith>
he's too busy writing that Emberwind stuff

[23:58:57.0000] <MikeSmith>
odinho: structured clone?

[23:59:23.0000] <odinho>
MikeSmith: Would have to be something like that. Luckily we do have *that*.

[23:59:38.0000] <MikeSmith>
heh

[00:00:09.0000] <Ms2ger>
/me wonders what golden PNGs are

[00:06:04.0000] <jgraham>
Ms2ger: They're the ones that get you into the chocolate factory

[00:06:19.0000] <Ms2ger>
You can keep them, then :)

[00:34:08.0000] <Ms2ger>
"a CSS2.1 compatible browser like IE6"

[00:34:12.0000] <Ms2ger>
Say what?

[00:35:32.0000] <jgraham>
/me sees that Hixie spent the night (note to American readers: "day") advocating Haskell in the browser

[01:07:02.0000] <zcorpan>
AryehGregor: do you still maintain http://aryeh.name/spec/innertext/innertext.html ? the setter probably needs to convert \n to <br> elements

[01:11:33.0000] <jgraham>
Seems likeWebKit preserves the window object across document.open()

[01:12:08.0000] <jgraham>
Anyone know why?

[01:13:16.0000] <annevk>
foolip: is there a bug on removing media="" from <source> for audio/video?

[01:13:53.0000] <annevk>
jgraham: Window/WindowProxy?

[01:14:30.0000] <annevk>
jgraham: not sure exactly what you mean, but the "Window object" is always preserved to some extent

[01:14:38.0000] <zcorpan>
annevk: just emails iirc (re media="")

[01:15:31.0000] <jgraham>
annevk: What I specifically mean is that if you set a variable on window and then document.open() then the varaible will still be set (in Opera/IE/Gecko it isn't)

[01:16:40.0000] <annevk>
zcorpan: I guess that is enough

[01:17:58.0000] <jgraham>
And the spec says "Replace the Document's singleton objects with new instances of those objects. (This includes in particular the Window [...] objects)"

[01:18:43.0000] <jgraham>
So I guess WebKit is Just Wrong here

[01:22:44.0000] <annevk>
sounds like it

[01:40:10.0000] <AryehGregor>
zcorpan, I haven't particularly been, no, but that's useful info.

[01:40:20.0000] <AryehGregor>
Both setter and getter have to convert <br> <-> \n?

[01:42:26.0000] <zcorpan>
yeah

[01:42:41.0000] <zcorpan>
apparently we broke the setter and people complained

[01:43:00.0000] <zcorpan>
(i don't think we implemented your spec, we just regressed accidentally)

[02:12:13.0000] <zcorpan>
annevk: everything's specified in css

[02:14:03.0000] <zcorpan>
see http://www.w3.org/TR/CSS21/cascade.html#specified-value

[02:17:04.0000] <zcorpan>
annevk: what's content-fit? do you mean object-fit?

[02:18:21.0000] <zcorpan>
/me replies to teh email instead

[02:19:19.0000] <annevk>
used to be content-fit

[02:19:28.0000] <annevk>
CSS renames everything every other month

[02:19:49.0000] <zcorpan>
it used to be image-fit

[02:19:51.0000] <zcorpan>
iirc

[02:20:04.0000] <zcorpan>
maybe content-fit was discussed as well

[02:21:48.0000] <zcorpan>
also: other browsers, please implement object-fit :-)

[02:22:33.0000] <zcorpan>
(opera did it first)

[02:24:26.0000] <annevk>
zcorpan: would it work to just add object-fit:contain to :fullscreen?

[02:24:42.0000] <zcorpan>
i think so, yeah

[02:24:48.0000] <odinho>
I like object-fit:contain

[02:46:25.0000] <odinho>
jgraham, Ms2ger, AryehGregor, other testharness.js people: I kinda want a way to say "WTF don't care" about the exception being thrown in    assert_throws().

[02:46:43.0000] <Ms2ger>
Why? :)

[02:46:49.0000] <odinho>
I have the CORS-tests, and what the XHR throws is really not that important.

[02:46:55.0000] <odinho>
In fact, it hasn't anything to do with CORS.

[02:47:06.0000] <odinho>
And Mozilla is failing HARD, along with Webkit because of that.

[02:47:12.0000] <odinho>
Masking other, possibly real bugs.

[02:47:24.0000] <odinho>
assert_throws(function() { bla })    should maybe do.

[02:47:43.0000] <Ms2ger>
ArtB is going to want that too, when he sees the WebStorage test I added :)

[02:47:51.0000] <odinho>
and have   function assert_throws(func_or_desc, func)

[02:48:00.0000] <odinho>
func_or_code I mean

[02:48:09.0000] <Ms2ger>
func_or_code_or_name? :)

[02:48:18.0000] <odinho>
Ms2ger: Yeah, _or_object

[02:48:31.0000] <Ms2ger>
assert_throws(null, fn), maybe?

[02:48:33.0000] <odinho>
Ms2ger: lemme fix that, func_or_code_or_name_or_object

[02:48:57.0000] <odinho>
Ms2ger: Yeah, might be more explicit. But we use the pattern of doing them small elsewhere.

[02:49:34.0000] <Ms2ger>
/me wants typed overloads already

[02:49:43.0000] <odinho>
I hear you ;]

[02:50:11.0000] <jgraham>
I need a word for Gecko and WebKit. GeKit? Wecko?

[02:50:27.0000] <Ms2ger>
FOSS

[02:50:31.0000] <odinho>
jgraham: Guess both works.

[02:50:50.0000] <odinho>
Ms2ger: What about Dillo and links2 then? You're including too much there :]

[02:51:02.0000] <Ms2ger>
Relevant FOSS? :)

[02:51:09.0000] <annevk>
SaFC

[02:51:10.0000] <odinho>
/me love Dillo

[02:51:49.0000] <jgraham>
Nothing like giving your product a name that is prone to bad typos

[02:52:00.0000] <annevk>
:)

[02:52:00.0000] <odinho>
jgraham: lol

[02:52:44.0000] <foolip>
annevk, a spec bug or an Opera bug?

[02:53:37.0000] <Ms2ger>
odinho, I'd prefer (null, fn), because really I'd rather people don't do it :)

[02:54:00.0000] <odinho>
Ms2ger: Okay, fair enough.

[02:54:36.0000] <odinho>
Ms2ger: Like, you have to, know what you're doing/really want it, if you do it.

[02:54:55.0000] <Ms2ger>
Right

[02:55:53.0000] <annevk>
foolip: I was thinking spec

[02:55:56.0000] <odinho>
jgraham: You should really update that git repo on github... It's out of date.

[02:56:03.0000] <jgraham>
The HTML spec is too big. I keep trying to write tests for one part, and finding that it depends on another part that also doesn't have tests. So eventually I end up with not enough tests of anything

[02:56:03.0000] <annevk>
foolip: but zcorpan pointed out there's an email thread already on the WHATWG list

[02:56:07.0000] <annevk>
foolip: that probably works

[02:56:22.0000] <jgraham>
odinho: I think you want to lookat the one on the W3C account

[02:56:22.0000] <odinho>
Always thinking about specs :S

[02:56:26.0000] <foolip>
annevk, yeah, no bug AFAIK

[02:56:31.0000] <odinho>
jgraham: oh. wut :P

[02:57:09.0000] <odinho>
jgraham: It's oooold as well.

[02:57:37.0000] <jgraham>
odinho: Oh, I thought MikeSmith set it up to auto-push

[02:57:44.0000] <jgraham>
But maybe that was just HTML

[02:57:49.0000] <jgraham>
s/push/sync/

[02:59:14.0000] <jgraham>
MikeSmith: Any chance of getting that for the resources repo too?

[03:02:04.0000] <annevk>
basic description for ::backdrop anyone?

[03:03:25.0000] <annevk>
Note: In other words, ::backdrop gives you an additional box rendered below the element in the top layer for which it is specified.

[03:03:29.0000] <annevk>
does that work?

[03:05:18.0000] <Ms2ger>
https://lists.w3.org/Archives/Member/w3c-css-wg/2012AprJun/0277.html (MO)

[03:07:31.0000] <annevk>
lol

[03:14:18.0000] <odinho>
OKay! https://github.com/w3c/testharness.js/pull/1

[03:14:21.0000] <odinho>
lunch!1

[03:51:03.0000] <AryehGregor>
/me actually knows what the first three characters of "日本語は" mean, and what the romaji is

[03:51:18.0000] <AryehGregor>
/me only vaguely recognizes the fourth character

[04:39:34.0000] <annevk>
oh wow

[04:39:37.0000] <annevk>
http://dev.w3.org/2011/webrtc/editor/webrtc.html#idl-def-SessionDescription

[04:39:49.0000] <annevk>
WebRTC certainly became a whole lot worse...

[04:52:48.0000] <zcorpan>
-_-

[04:55:15.0000] <annevk>
what smiley is that?

[04:55:35.0000] <annevk>
ah

[04:55:36.0000] <annevk>
sighing

[04:56:22.0000] <annevk>
I emailed http://lists.w3.org/Archives/Public/public-webrtc/2012Jun/0002.html

[05:12:23.0000] <Ms2ger>
Mmm

[05:12:50.0000] <Ms2ger>
ctx.fillStyle = { valueOf: function() { return "blue" } }

[05:14:46.0000] <zcorpan>
Ms2ger: that should work

[05:15:15.0000] <Ms2ger>
Does the spec say that? :)

[05:16:25.0000] <zcorpan>
webidl says to "convert"

[05:17:24.0000] <Ms2ger>
attribute any fillStyle;

[05:17:37.0000] <zcorpan>
oh, sorry

[05:17:43.0000] <zcorpan>
i thought it was DOMString

[05:18:03.0000] <Ms2ger>
Yeah, it can take a gradient object too

[05:18:33.0000] <Ms2ger>
Philip`, thanks again for your tests, btw :)

[05:19:00.0000] <zcorpan>
i guess the spec should use (DOMString or GradientObject) instead (or whatever it's called)

[05:19:15.0000] <Ms2ger>
That sounds better, yes

[05:19:52.0000] <kennyluck>
There would never be any "CSS2.1 compatible browser" if "CSS2.1" here means the current thing in /TR/. There is no model for any contradictory theory: http://en.wikipedia.org/wiki/Theory_%28mathematical_logic%29#Consistency_and_completeness

[05:19:58.0000] <kennyluck>
But who used that term?

[05:21:36.0000] <Ms2ger>
Well, that's the definition of a contradictory theory

[05:34:53.0000] <sandstrom>
Anyone with an account to the whatwg-wiki? I'd like to add <meta content='notranslate' name='google'> to http://wiki.whatwg.org/wiki/MetaExtensions

[05:35:28.0000] <sandstrom>
There is more information about this meta tag here: http://support.google.com/translate/#2641276

[05:37:02.0000] <odinho>
Shouldn't have to litter the internet with meta tags for every single feature Google implements.

[05:37:09.0000] <odinho>
Must say I dislike that design a lot.

[05:37:19.0000] <annevk>
Ms2ger: is there a way to use anolis-references without changing everything else?

[05:37:31.0000] <odinho>
It could maybe go as extension to robots.txt, we have that already.

[05:37:32.0000] <annevk>
Ms2ger: like sprinkling data-anolis attributes throughout the output

[05:38:35.0000] <Ms2ger>
How so?

[05:41:45.0000] <annevk>
Ms2ger: I prefer that references style

[05:41:59.0000] <annevk>
Ms2ger: an alternative would be to just make Anolis look for either style

[05:42:13.0000] <annevk>
Ms2ger: maybe assuming you're using the separated one first; falling back to the other

[05:42:22.0000] <Ms2ger>
/me is confused

[05:42:31.0000] <Ms2ger>
What are you trying to do, exactly?

[05:42:42.0000] <annevk>
I want to use <div id=anolis-references></div>

[05:43:39.0000] <annevk>
and for some weird reason that is tied to --w3c-compat in the Makefile

[05:43:43.0000] <Ms2ger>
Ah, yes

[05:43:54.0000] <Ms2ger>
Just laziness on my part

[05:44:40.0000] <annevk>
so I mentioned doing Fullscreen as a joint deliverable is asking for trouble

[05:44:46.0000] <annevk>
people said no

[05:44:49.0000] <annevk>
they were wrong

[05:46:13.0000] <Ms2ger>
So you want --w3c-compat and just one references section?

[05:47:14.0000] <Ms2ger>
annevk, ^

[05:47:17.0000] <annevk>
yes

[05:48:55.0000] <annevk>
in general I'd prefer if reduce the amount of Anolis options

[05:49:07.0000] <annevk>
not sure they are all needed

[05:49:29.0000] <annevk>
and some of the cleanup you get with --w3c-compat such as removing the data-anolis-* stuff makes sense to just do unconditionally

[05:49:58.0000] <Ms2ger>
Hmm, that's not even necessary anymore now we can use HTML

[05:50:33.0000] <Ms2ger>
And hey, options are cheap :)

[05:50:34.0000] <annevk>
reducing the size of the final document is worth it I think

[05:50:52.0000] <annevk>
Ms2ger: -_-

[05:54:23.0000] <annevk>
zcorpan: there's no constructor for MutationEvent

[05:54:24.0000] <zcorpan>
Ms2ger: did you file a spec bug about fillStyle?

[05:54:29.0000] <Ms2ger>
Yep

[05:54:45.0000] <zcorpan>
annevk: right

[06:02:58.0000] <Ms2ger>
annevk, pushed

[06:04:57.0000] <annevk>
sweet

[06:25:08.0000] <annevk>
http://lists.w3.org/Archives/Public/public-tracking/2012May/0285.html and the follow-up are fun

[07:11:43.0000] <karlcow>
"Magicians don't need exemptions."

[07:24:14.0000] <Philip`>
"I grew up on a beach" - surely that's just argument from authority

[08:01:25.0000] <matjas>
http://mathias.html5.org/tests/javascript/identifiers/ feedback welcome

[08:14:33.0000] <jgraham>
Are there any tests for DOM traversal? i.e. http://dvcs.w3.org/hg/domcore/raw-file/tip/Overview.html#traversal

[08:16:17.0000] <Ms2ger>
I bet we have a couple

[08:18:55.0000] <Ms2ger>
Hmm, I wonder if http://mxr.mozilla.org/mozilla-central/source/content/test/unit/test_treewalker.js is the best we have for TreeWalker

[08:19:21.0000] <Ms2ger>
http://hixie.ch/tests/adhoc/dom/traversal/node-iterator/

[08:20:25.0000] <Ms2ger>
Thank Hixie for writing some 7 years ago :)

[08:24:28.0000] <Hixie>
MikeSmith: it seems to be still prefixed in at least chrome

[08:24:42.0000] <Ms2ger>
And Opera for paying...

[08:25:31.0000] <Hixie>
jgraham: it's not the HTML spec that's too big, it's HTML. Splitting the spec up wouldn't solve your problem :-(

[08:26:37.0000] <jgraham>
Hixie: I know :) Possibly it wasn't obvious that I was deliberately misidentifying the problem

[08:37:47.0000] <Hixie>
jgraham: i know you know, just clarifying the record for the lurkers :-P

[08:39:52.0000] <odinho>
those sneaky lurkers

[08:40:10.0000] <Hixie>
wow i'm sure glad i'm not on public-tracking

[09:14:25.0000] <Ms2ger>
Hixie, you prefer reading Bj�rns emails in the archives? :)

[09:14:46.0000] <Hixie>
i had no freaking clue what he was talking about :-P

[09:15:45.0000] <Ms2ger>
I find them even more enjoyable to read in that case :)

[09:27:17.0000] <smaug____>
abarth: just curious, why did you ask about implementing WebApp Manifest spec?

[09:27:35.0000] <smaug____>
in the mailing list

[09:28:07.0000] <abarth>
smaug____: it's a question of prioritization

[09:28:09.0000] <Ms2ger>
Hixie, http://ian.hixie.ch/career/resume.html, "The preprocessor Mozilla uses": s/uses/used/ ;)

[09:28:25.0000] <abarth>
smaug____: if there were a critical mass of folks who wanted to implement it

[09:28:44.0000] <smaug____>
ah

[09:28:50.0000] <abarth>
smaug____: then I would have tried to make an argument to the team that they should prioritize that work above the other sysapps work

[09:29:10.0000] <abarth>
smaug____: as it is, i think that we'll get a better result if we tackle some of the core issues first

[09:29:21.0000] <abarth>
e.g., security model, a handful of APIs

[09:29:34.0000] <abarth>
then the requirements for the manifest will be clearer

[09:29:38.0000] <smaug____>
abarth: so somewhat similar question to FileSystemAPI

[09:29:39.0000] <Ms2ger>
Pff, who needs a security model

[09:30:00.0000] <annevk5>
Hixie: so we need some special language to say this is in the context of the root? Re fullscreen

[09:30:28.0000] <abarth>
smaug____: do you mean as in "who's interested in implementing" or in the sense of "the requirements will be more clear in the future" ?

[09:30:42.0000] <smaug____>
both

[09:31:08.0000] <Hixie>
Ms2ger: wow, about time :-)

[09:31:14.0000] <abarth>
yeah, it's a concern for me that there's only really one implementor for file system

[09:31:27.0000] <Hixie>
annevk5: i dunno if i'd say it was "special" :-)

[09:31:34.0000] <Ms2ger>
Hixie, it's been removed for all of a year now :)

[09:31:40.0000] <abarth>
i actually argued against working on it internally when we first started

[09:31:54.0000] <smaug____>
it isn't an API I'd like to implement

[09:31:56.0000] <Hixie>
Ms2ger: that's still a sadly long time for that sorry excuse of a preprocessor to have been used :-P

[09:32:29.0000] <abarth>
smaug____: do you mean the general idea of a file system API, or something about the specific design in the spec?

[09:32:34.0000] <Ms2ger>
Hixie, oh, we've got enough horrible code that we're actually shipping :)

[09:32:41.0000] <Hixie>
Ms2ger: hah

[09:32:45.0000] <annevk5>
Hixie: any precedents then?

[09:32:57.0000] <smaug____>
abarth: some kind of API for file management isn't needed, but the current draft isn't the best option

[09:32:58.0000] <Hixie>
annevk5: not to my knowledge

[09:32:58.0000] <annevk5>
IR

[09:33:05.0000] <annevk5>
Oops

[09:33:06.0000] <smaug____>
didn't sicking propose something better already

[09:33:16.0000] <smaug____>
at least to handle certain problematic cases

[09:33:24.0000] <Ms2ger>
smaug____, s/isn't/is/ for the first?

[09:33:34.0000] <abarth>
smaug____: I haven't followed the discussion very closely, so I don't know the answer to that question

[09:33:42.0000] <smaug____>
Ms2ger: ye

[09:33:44.0000] <smaug____>
s

[09:34:00.0000] <smaug____>
(API is needed)

[09:34:06.0000] <abarth>
do you mean https://wiki.mozilla.org/WebAPI/DeviceStorageAPI ?

[09:34:18.0000] <smaug____>
no

[09:34:34.0000] <abarth>
then I'm not sure what you're referring to

[09:34:39.0000] <smaug____>
/me needs to find the right proposal

[09:34:55.0000] <abarth>
in any case, I know this is a controversial topic

[09:35:02.0000] <smaug____>
yeah

[09:35:17.0000] <abarth>
I suspect is going to come up in SysApps because there's a need for things related to files and groups of files

[09:35:28.0000] <abarth>
but i'm hoping to keep it off the agenda for a bit

[09:35:33.0000] <abarth>
so that the group can start in a happy place

[09:35:39.0000] <abarth>
rather than in a sad place :)

[09:36:05.0000] <Ms2ger>
glwt

[09:36:28.0000] <smaug____>
:)

[09:37:14.0000] <annevk5>
Hixie: okay. But if we say it's in context of the root there are no problems I guess...

[09:37:26.0000] <Hixie>
annevk5: i hope so :-)

[09:37:36.0000] <Hixie>
annevk5: it's what i thought we were doing already

[09:38:57.0000] <annevk5>
Would make for an easy fix :)

[09:39:17.0000] <annevk5>
Wonder what oyvind says of that

[09:45:26.0000] <Ms2ger>
/me steals Hixie's tests

[10:13:29.0000] <smaug____>
http://www.net-security.org/secworld.php?id=13022 makes no sense

[10:18:42.0000] <TabAtkins>
annevk: I don't understand your comment saying "No because width/height are set as well" in the fullscreen thread.

[10:23:43.0000] <Hixie>
smaug____: as far as i can tell, there's three possibilities: 1, they're dumb (unlikely); 2, they realise that DNT threatens their online business' future, so they'd rather kill it now than risk it getting widely implemented (seems a bit cynical of me), or 3, they realise that DNT is a poorly designed technology for what it's trying to do and they want to illustrate this so as to help the industry come up with something that actually works (what i hope is the

[10:24:21.0000] <Hixie>
case)

[10:25:04.0000] <webben>
Hixie: Do you reckon DNT is badly designed? Do you have any thoughts as to what would work better?

[10:25:56.0000] <Hixie>
webben: DNT is like P3P, it tells the good guys who wouldn't do anything bad with tracking anyway that they can't do anything good with tracking, and it's ignored by the bad guys.

[10:26:13.0000] <Hixie>
webben: so it gives users a false sense of security and privacy.

[10:26:23.0000] <Hixie>
webben: while reducing the quality of services they receive

[10:26:41.0000] <Hixie>
webben: so yeah, it's badly designed.

[10:26:51.0000] <Hixie>
webben: something that's well-designed for this kind of thing would be something like tor.

[10:26:54.0000] <webben>
Hixie: I agree some bad guys will ignore it (I think blocking 3rd-party cookies a la Safari might make more sense).

[10:27:10.0000] <Hixie>
you don't need cookies to track people

[10:27:14.0000] <smaug____>
the whole point of DNT is to just tell to good guys that don't track, please

[10:27:16.0000] <Hixie>
fingerprinting is more than adequate

[10:27:44.0000] <webben>
Sure, but in practice the ad industry is mostly using cookies.

[10:27:49.0000] <Hixie>
smaug____: what do you mean by "track"?

[10:28:11.0000] <webben>
I think the idea that "good guys who wouldn't do anything bad with tracking" depends very much on your view of what is bad.

[10:28:20.0000] <Hixie>
webben: removing cookies by default will do the same as setting DNT by default, it'll just reduce the quality of ads from the good guys and make the bad guys switch to fingerprinting.

[10:28:30.0000] <smaug____>
webben: very true.

[10:28:35.0000] <Hixie>
webben: granted

[10:28:42.0000] <Hixie>
webben: what is bad?

[10:28:48.0000] <smaug____>
webben: whatever Google and Facebook do is bad, IMO, but not everybody agree with me

[10:28:57.0000] <Hixie>
smaug____: what do google and facebook do?

[10:29:05.0000] <smaug____>
track me

[10:29:12.0000] <Hixie>
smaug____: what does "track" mean?

[10:29:28.0000] <smaug____>
store cookies when they don't need to, so that they can identify me

[10:29:34.0000] <smaug____>
but yes, this is all vague

[10:29:36.0000] <smaug____>
I know

[10:29:42.0000] <Hixie>
smaug____: i have no idea why that is bad or what it even means

[10:30:14.0000] <webben>
"bad" is probably not helpful language

[10:30:20.0000] <webben>
"unwanted" might be better

[10:31:15.0000] <Hixie>
i agree entirely that there is "bad" tracking. e.g. someone who wants to figure out who you are, what your interests are, what your bank is, so they can convincingly phish you.

[10:31:30.0000] <smaug____>
/me doesn't understand "quality of ads"

[10:31:32.0000] <Hixie>
but the people who do that aren't going to care if you've disabled cookies, enabled DNT, or even if it's illegal

[10:32:16.0000] <Hixie>
smaug____: a good ad is e.g. one that tells you something you didn't know, that it turns out you do want to know.

[10:32:29.0000] <smaug____>
Hixie: and Google and FB very much try to figure out my interests, at least based on the ads they are showing to me, if I'm logged in to their accounts

[10:32:31.0000] <Hixie>
smaug____: a bad ad is e.g. one that has nothing to do with anything you care about

[10:32:50.0000] <Hixie>
smaug____: wait, you're logged in?

[10:33:00.0000] <Hixie>
smaug____: how the heck is that supposed to work without tracking??

[10:33:13.0000] <webben>
But that's your personal view of "good" and "bad". That doesn't necessarily accord with what people tend to want.

[10:33:31.0000] <Hixie>
webben: i'm happy to entertain your definitions if you like

[10:33:44.0000] <smaug____>
/me doesn't actually use Google, so, no, not logged in

[10:34:22.0000] <webben>
I'd avoid the words for the most part.

[10:34:29.0000] <webben>
it's Do Not Track, not Do No Evil

[10:34:37.0000] <Hixie>
this conversation seems to have about the same level of rational discourse as most discussions around DNT, which is maybe why i'm skeptical about DNT

[10:35:00.0000] <Hixie>
i honestly don't think most people who want it have any idea what its implications are or what it is they are worried about

[10:35:03.0000] <smaug____>
webben: "Evil" is of course very vague.

[10:35:53.0000] <Hixie>
smaug____, webben: if there is a specific fear you have, i'm happy to discuss it, but i don't know how to make progress with this level of vagueness

[10:36:02.0000] <smaug____>
:)

[10:36:09.0000] <smaug____>
very true

[10:36:14.0000] <smaug____>
DNT is all about vagueness

[10:36:48.0000] <webben>
As a future implementor (for my dayjob for a data provider for quality advertising) I think it's useful to have a flag to tell me that a user wouldn't want to have data collected about them and shared with advertisers.

[10:37:15.0000] <Hixie>
sharing data with advertisers seems like a generally bad idea anyway

[10:37:20.0000] <webben>
My concerns are more around the specifics of what is allowed, e.g. what logs can we/must we keep for security/auditing purposes.

[10:37:25.0000] <Hixie>
since you can't control what the advertisers do with it

[10:38:33.0000] <webben>
Hixie: Well... yeah... that's one of the reasons people might want not be tracked.

[10:39:16.0000] <Hixie>
webben: how will DNT stop it?

[10:39:45.0000] <webben>
Hixie: Well, in our case (for example), I suspect we'll end up not tracking requests with DNT: 1.

[10:40:00.0000] <Hixie>
are you sharing data with advertisers today?

[10:41:04.0000] <webben>
In the sense of segments in ad platforms like DoubleClick, yeah.

[10:41:29.0000] <Hixie>
to my knowledge, doubleclick doesn't share data with advertisers

[10:41:42.0000] <webben>
i guess that depends on what you mean by "share data"

[10:42:05.0000] <Hixie>
i assumed you meant something like "hey, bob looked at your ad, they're a 12 year old living in norway"

[10:42:11.0000] <webben>
oh. no.

[10:42:34.0000] <Hixie>
well i assume nobody is giving anything worse than that!

[10:42:43.0000] <Hixie>
even that much seems like something nobody should be giving today!

[10:45:12.0000] <webben>
No, this is more like: we track some users, we conclude (insert magic) they're male, we insert them in a male segment in doubleclick, an advertiser pays for use of the male segment in doubleclick, they end up getting shown an ad.

[10:45:34.0000] <webben>
i think it's useful to have a mechanism for user's to opt out of that.

[10:45:37.0000] <Hixie>
there's no sharing of data with the advertiser there

[10:45:46.0000] <Hixie>
why?

[10:46:03.0000] <webben>
because some users want to opt out of it

[10:46:06.0000] <Hixie>
why?

[10:46:14.0000] <webben>
i don't think it matters much

[10:46:16.0000] <Hixie>
what is the harm here

[10:46:19.0000] <Hixie>
sure it matters

[10:46:44.0000] <Hixie>
users and authors want all kinds of crap we don't give them because they say they want it but wouldn't really want it when they get it

[10:47:04.0000] <Hixie>
for example users want a way to say "make my packets have priority over everyone else's"

[10:47:04.0000] <TabAtkins>
What users like that want is "no ads", not "shittier ads".

[10:47:25.0000] <TabAtkins>
If you don't have market segmentation, you are guaranteed to get shittier ads.

[10:47:37.0000] <Hixie>
pretty much by definition, yeah

[10:47:46.0000] <smaug____>
there is no such thing as shittier ads

[10:47:52.0000] <Hixie>
oh my

[10:47:54.0000] <Hixie>
oh my oh my

[10:48:05.0000] <Hixie>
yes, there is

[10:48:08.0000] <webben>
/me has to head to the pub

[10:48:18.0000] <TabAtkins>
smaug____: You have a short memory.  I remember the days before Google got good at serving ads.

[10:49:10.0000] <smaug____>
/me doesn't know what "good at serving ads" means

[10:49:28.0000] <smaug____>
though, I may guess what you mean :)

[10:49:37.0000] <Hixie>
smaug____: if i get an ad for cheaper subway tickets on the tokyo subway, that's a shittier ad for me than if i get an ad for a good deal on a marklin 37276 Double Diesel Locomotive set

[10:49:53.0000] <TabAtkins>
You're either being purposely obtuse, or I don't understand how you can possibly say that.

[10:49:59.0000] <Hixie>
what tab said

[10:50:34.0000] <Ms2ger>
Hixie, have you unpacked your trains already? :)

[10:50:38.0000] <Hixie>
...wow, the 37276 is awesome

[10:50:41.0000] <Hixie>
now i want one

[10:50:42.0000] <Hixie>
damnit

[10:51:07.0000] <smaug____>
/me hasn't used his Märklins for ages

[10:51:14.0000] <TabAtkins>
Given the space of all possible ads, with no market segmentation the best you can do is get served an ad uniformly-chosen at random.  This is obviously worse than choosing from a smaller set that is more likely to track your demographic segment.

[10:51:16.0000] <Hixie>
Ms2ger: i have a loop in my bedroom for running the engines every few months so the engines don't seize up, but other than that, no

[10:52:16.0000] <smaug____>
TabAtkins: for lots of people there is no such thing as good or bad ad. There is just an ad, which the user doesn't care about

[10:52:32.0000] <Hixie>
dude the 27276 is actually weathered and you can blow it's whistle and it's horn separately

[10:52:33.0000] <TabAtkins>
smaug____: Okay, then it's the "purposely obtuse" option.

[10:52:35.0000] <Hixie>
aw man

[10:52:41.0000] <Ms2ger>
*its

[10:53:06.0000] <Ms2ger>
You're a real Googler now... Advertising to yourself :)

[10:53:18.0000] <Hixie>
smaug____: we have data that shows otherwise. the fruits of said data funds much of mozilla, fwiw.

[10:53:33.0000] <smaug____>
Yeah, googlers speaking about ads... :)

[10:53:37.0000] <Philip`>
Maybe someone doesn't like being tempted to buy things they were already nearly willing to buy, because they'd like it in the short term (hence they'd acually buy it) but bad in the long term (since they'll have no money left at the end of the month to feed their children), and so they'd much rather be shown irrelevant ads that they can easily ignore

[10:54:05.0000] <TabAtkins>
Philip`: That's the "no ads" preference.

[10:54:07.0000] <Philip`>
(and the running costs of the sites they visit will be subsidised by other users who like to buy things from relevant ads)

[10:54:52.0000] <TabAtkins>
If they want shitty ads because they're easier to ignore, they dont' actually want shitty ads.  They just want no ads.

[10:55:00.0000] <TabAtkins>
Nobody wants ads *and* wants them to be shitty.

[10:55:29.0000] <barnabywalters>
Philip`: Yep, unless it's happening subconsciously, I can't see anyone actually using that logic

[10:55:34.0000] <Philip`>
TabAtkins: "No ads" is preferred over "irrelevant ads" which is preferred over "relevant ads", and in practice they'll never be able to get "no ads" because that's too blatantly unprofitable for the people paying the running costs of their sites, and so "irrelevant ads" is the next best thing

[10:55:48.0000] <TabAtkins>
Philip`: No, that's what AdBlock is for.

[10:55:55.0000] <Hixie>
smaug____: do you at least agree that an ad can, all other things being equal, be assumed to have been more useful to the user if the user clicks on it than if they don't?

[10:58:35.0000] <smaug____>
no, not in general case

[10:58:38.0000] <Philip`>
Hixie: What about if e.g. you search for "open office" because you want to download it, and get shown an ad like "Download OpenOffice here for free" which you click on because it sounds very useful, and then it installs OpenOffice plus a dozen pieces of other junk (browser toolbars and popup things and trial antiviruses and whatever)?

[10:59:05.0000] <Hixie>
Philip`: there are certainly exceptions, i agree

[10:59:11.0000] <Philip`>
Many more people would click on that than on a random irrelevant ad, but it'd far less useful (/more harmful) in practice

[10:59:18.0000] <smaug____>
"relevant" ads may look like page content and user clicks them although (s)he was going to look for some real content

[10:59:33.0000] <Hixie>
so could irrelevant ads

[10:59:34.0000] <Philip`>
(Not a hypothetical example, incidentally)

[11:00:42.0000] <Hixie>
anyway, if you disagree that a user chosing to click an ad is not a good signal (even if not a 100% reliable signal) that the ad is useful to the user, then i don't see that we have common ground on which to base the conversation

[11:00:42.0000] <Philip`>
Hixie: Are there ways to measure the effectiveness of ads that can distinguish usefulness from misleadingness?

[11:00:44.0000] <smaug____>
irrelevant ad is less likely about the same thing what the user was looking for

[11:01:07.0000] <smaug____>
Philip`: that is interesting question

[11:01:24.0000] <Hixie>
Philip`: for highly commercial ads you can track conversions (sales)

[11:01:37.0000] <Hixie>
Philip`: this isn't my area of expertise though

[11:02:09.0000] <Philip`>
Maybe you could wait a while then send an email to users saying "please give a rating out of 5 for this ad you click on two weeks ago"

[11:02:13.0000] <Hixie>
smaug____: if a site is its own ad broker, then at a minimum the advertisers will know how to make misleading ads, even without knowing anything about the users

[11:02:19.0000] <smaug____>
my experience with my parents for example is that they use Google and click easily some ads and then need to go back and look for real search results

[11:02:22.0000] <Philip`>
like what Amazon often seems to do with reviewing products/suppliers

[11:02:27.0000] <Hixie>
Philip`: for things like openoffice malware, even that wouldn't work

[11:02:47.0000] <Philip`>
where they seem to leave enough time for people to recognise any faults with the thing they just bought

[11:04:36.0000] <Hixie>
yeah for highly commercial queries/ads/purchases it works much better, because users tend to have a much clearer understanding and memory that a transaction happened

[11:04:36.0000] <Philip`>
(If you just track number of sales then you can't tell how many people regretted it afterwards)

[11:05:06.0000] <Philip`>
(If you're the company making the sales, you probably don't care, because a sale is a sale, but if you're a third party then you probably want to take better care of the users)

[13:40:53.0000] <rafaelw_>
Hixie: would E4H support different tokenizer modes?

[13:41:21.0000] <rafaelw_>
e.g. var foo = <><div/><script>var i = 2;</script></>;

[14:28:15.0000] <Hixie>
rafaelw_: text is basically parsed as a JS string in my proposal

[14:29:01.0000] <rafaelw_>
so presumably the following parses very differently in HTML and E4H...

[14:29:15.0000] <rafaelw_>
<div><style><div></div></style></div>

[14:29:17.0000] <rafaelw_>
?

[14:29:53.0000] <Hixie>
it parses more like in xml, yes

[14:30:01.0000] <Hixie>
it's javascript

[14:30:16.0000] <rafaelw_>
i'm less familiar with XML.

[14:30:18.0000] <Hixie>
and my parsing spec for it is like 20 lines

[14:30:28.0000] <Hixie>
so it's hardly surprising that it doesn't parse like html, whose spec is some 5000 lines :-)

[14:30:39.0000] <rafaelw_>
in the above example, in E4H will <style> have one child which is a <div> element?

[14:30:59.0000] <rafaelw_>
i'm not commenting, just trying to understand.

[14:41:35.0000] <Hixie>
rafaelw_: yes

[14:42:36.0000] <Hixie>
rafaelw_: at least as proposed. i don't really care what the exact syntax is, it could even be something like JSON for all I care, what i care about is (1) that it be simpler than the current DOM API and (2) that it be compile-time checked, like a JS object literal.

[14:43:23.0000] <Hixie>
i think the parallel between JS object literals and JSON strings vs HTML DOM literals ("E4H") and HTML strings is the way to think about this proposal

[14:43:44.0000] <Hixie>
JSON's syntax isn't exactly like JS object literals either

[14:44:11.0000] <Hixie>
e.g. { foo: 1 } isn't valid (key has to be quoted), nor is { 'foo': '1' } (has to be double quotes, iirc)

[15:01:43.0000] <TabAtkins>
Except for one detail, JSON is a subset of JS.

[15:02:06.0000] <TabAtkins>
(It's a silly charset issue or something.)


2012-06-02
[17:51:55.0000] <jtcranmer>
huh

[17:52:14.0000] <jtcranmer>
why does seamless iframe apply CSS across its boundaries?

[19:53:04.0000] <a-ja>
TabAtkins: ping

[19:56:20.0000] <a-ja>
TabAtkins: while you're editing flexbox, think you missed one: justify-content defaults to flex-start

[22:39:23.0000] <matjas>
Hixie, TabAtkins: the reason JSON requires double quotes is because Crockford didn’t want to bloat the spec with all these details: http://mathiasbynens.be/notes/javascript-properties (I can see his point.)

[22:43:38.0000] <matjas>
TabAtkins: FYI, JSON is *based on* a subset of JS. It’s not a true subset. See https://github.com/judofyr/timeless/issues/57

[09:32:10.0000] <matjas>
in case anyone ever needs Unicode symbols per category in JavaScript: http://mathias.html5.org/data/unicode/ (I needed this for the 90k+ tests on http://mathias.html5.org/tests/javascript/identifiers/)

[09:54:39.0000] <jarek>
Hi

[09:55:11.0000] <jarek>
in SVG 1.1 spec, is there any difference between the terms "object" and "element"?

[09:55:44.0000] <jarek>
e.g. in the sentence: "A group of elements, as well as individual objects, can be given a name using the ‘id’ attribute."

[09:56:54.0000] <jarek>
why it's not written as  "A group of elements, as well as individual elements, can be given a name using the ‘id’ attribute."

[11:30:04.0000] <zewt>
ugh, a page is keeping me from opening the context menu even though i have that disabled in ff

[11:33:52.0000] <zewt>
they forgot to make mousedown uncancellable, i guess

[12:52:21.0000] <Ms2ger>
image = document.createElement("image");

[12:52:30.0000] <Ms2ger>
Yay, WebGL testsuite

[12:53:02.0000] <gsnedders>
<3.

[12:59:14.0000] <reggna>
Ms2ger: I think that one been fixed.

[12:59:41.0000] <reggna>
If memory serves me right.

[13:02:54.0000] <reggna>
*has

[13:11:51.0000] <jgraham>
Ms2ger: You forgot to close your sarcasm. Now you are bing sarcastic everywhere

[13:14:56.0000] <Philip`>
jgraham: I thought he forgot to close it several years ago

[13:15:32.0000] <gsnedders>
I thought both start and end tags could be omitted?

[13:15:54.0000] <jgraham>
gsnedders: But thn when will he ever take a deep breath?

[13:26:47.0000] <Ms2ger>
Why would I breathe?

[13:30:10.0000] <divya>
jgraham: you should be on twitter or something!!!

[13:30:15.0000] <divya>
i would just RT your every tweet

[13:32:51.0000] <Ms2ger>
divya, good, then I wouldn't have to follow him :)

[14:13:52.0000] <zewt>
always seemed like google's autocomplete dropdown felt unresponsive; and apparently it is (it moves on keyup instead of keydown or keypress)

[14:14:59.0000] <divya>
zewt: chrome does not recognize keypress from what I remember

[14:15:21.0000] <zewt>
happens in ff

[14:15:46.0000] <divya>
zewt: i mean it might explain why it moves on keyup instead of keypress

[14:16:21.0000] <zewt>
well i know you can respond on "the keyboard button goes down" in chrome too :)

[14:28:17.0000] <zewt>
a cute one: i click the search box on lenscrafters.com, start typing, and my search ends up prefixed with "Please enter search term"


2012-06-03
[01:16:23.0000] <annevk>
Hixie: so I'm still not quite sure how to modify http://dvcs.w3.org/hg/fullscreen/raw-file/tip/Overview.html#new-stacking-layer

[01:16:39.0000] <annevk>
it already has

[01:17:02.0000] <annevk>
* It generates a new stacking context.

[01:17:02.0000] <annevk>
* Its containing block is the initial containing block.

[01:17:03.0000] <annevk>
* It is rendered as an atomic unit as if it were a sibling of the root element.

[01:20:05.0000] <annevk>
I'll make a suggestion

[01:26:49.0000] <annevk>
lol

[01:26:57.0000] <annevk>
someone is suggesting a separate mailing list for fullscreen

[01:28:07.0000] <annevk>
joint WG publications, token editor to please the CSS WG, W3C backflips the shark

[01:51:32.0000] <annevk>
<!DOCTYPE html>.<script> document.documentElement.replaceChild(document.head, document.body) </script>

[01:51:46.0000] <annevk>
results in <html><head/></html>

[01:52:06.0000] <annevk>
so I try to replace <head> with <body> and end up with <head>

[01:54:12.0000] <annevk>
and <body> is returned

[01:56:41.0000] <annevk>
oops nm

[05:51:11.0000] <Ms2ger>
annevk, yt?

[05:52:08.0000] <Ms2ger>
Or AryehGregor

[05:54:21.0000] <Ms2ger>
Looking at http://dvcs.w3.org/hg/domcore/raw-file/tip/Overview.html#concept-node-replace

[05:55:10.0000] <Ms2ger>
It seems the 3rd step is redundant, because we already established that /parent/ has a child, so it must be a Document, DocumentFragment, or Element

[06:06:46.0000] <fflorent>
Hi,

[06:06:46.0000] <fflorent>
what is the reason why this proposal has been gave up? http://lists.whatwg.org/htdig.cgi/whatwg-whatwg.org/2009-October/023702.html

[06:18:44.0000] <AryehGregor>
Ms2ger, yes, you're right.  Looks redundant to me.

[06:34:49.0000] <AryehGregor>
fflorent, IIRC, because it's too hard and fragile and will never give you the flexibility of AJAX, so it's not clear anyone much would use it..

[06:34:53.0000] <AryehGregor>
s/\.$//

[06:39:00.0000] <fflorent>
AryehGregor: hmm, why hard and fragile ?

[06:52:43.0000] <AryehGregor>
fflorent, I don't remember the details.  It was two and a half years ago.  Basically, it wasn't clear that it was useful enough (relative to emulating it with AJAX) to warrant a new declarative attribute.

[06:52:50.0000] <AryehGregor>
I still think it was a cool idea, though.  :)

[06:53:50.0000] <fflorent>
AryehGregor: thank you for your answer :)

[06:54:46.0000] <fflorent>
AryehGregor:  I ask this question because I have a similar proposition ... And I want to know what was the matter with that proposition before.

[06:56:27.0000] <AryehGregor>
fflorent, did you review the whole original thread?

[06:57:58.0000] <fflorent>
I read it, but perhaps there are things I have not read

[06:58:35.0000] <AryehGregor>
fflorent, everything starting with this?  http://lists.whatwg.org/htdig.cgi/whatwg-whatwg.org/2009-October/023661.html

[06:58:40.0000] <fflorent>
I see that there are previous messages in the thread from here : http://lists.whatwg.org/htdig.cgi/whatwg-whatwg.org/2009-October/023702.html .

[06:58:40.0000] <fflorent>
But I do not know how to access

[06:58:49.0000] <AryehGregor>
There are a few dozen posts, many quite long.

[06:59:05.0000] <AryehGregor>
Try looking at what I just posted, and all the followups.

[06:59:12.0000] <AryehGregor>
A lot of possible variants and pitfalls are pointed out.

[06:59:17.0000] <fflorent>
thank you :)

[06:59:48.0000] <AryehGregor>
All the variants wind up failing in unpleasant ways if misued.

[06:59:51.0000] <AryehGregor>
misused.

[07:00:41.0000] <fflorent>
hmm, ok

[07:00:41.0000] <AryehGregor>
And it's not straightforward for authors to make sure they use them right.

[07:00:58.0000] <AryehGregor>
It would be pretty easy to update one page and forget to update another and suddenly things don't work right.

[07:01:28.0000] <AryehGregor>
So at a certain point it looks like it's not worth the resources.  New markup like that is only worthwhile if it would be really useful.

[07:04:58.0000] <fflorent>
what do you mean by "update one page and forget to update another" ?

[07:27:06.0000] <fflorent>
AryehGregor: I read that using query parameters break bookmarking. However, I just bookmarked a result page from google (on Firefox) and it worked great. I do not understand why does it breaks bookmarking ? (sorry for my noob questions ^^ )

[07:27:31.0000] <fflorent>
AryehGregor: source : http://lists.whatwg.org/htdig.cgi/whatwg-whatwg.org/2009-October/023686.html

[09:20:05.0000] <tantek>
sorry to be "token" for too long annevk

[09:20:17.0000] <tantek>
now that I've got hg and Anolis setup - hope to make more contributions soon

[10:28:55.0000] <annevk>
tantek: no worries

[10:29:19.0000] <annevk>
although maybe I should start keeping a wiki page on W3C fuckups

[10:38:24.0000] <veosotano>
annevk: what would you say is the W3C's biggest problem as an organization?

[10:41:34.0000] <veosotano>
I wonder if the slowness is something about how it is structured

[10:44:23.0000] <annevk>
too much rules

[10:44:47.0000] <veosotano>
but without those rules, wouldn't quality of standards suffer?

[10:44:55.0000] <veosotano>
(just curious)

[10:45:16.0000] <annevk>
not in my experience

[10:45:39.0000] <veosotano>
is there no proposal to improve the efficiency of the w3c or something?

[10:45:41.0000] <annevk>
standards can be of extremely high and low quality; both with and without those rules

[10:45:53.0000] <annevk>
(and have been)

[10:46:23.0000] <veosotano>
I guess it would be difficult to put on paper (sort of like rules), something that ensures the quality

[10:46:24.0000] <annevk>
veosotano: sure sure, but it's slow as is to be expected of an organization with 400+ stakeholders

[10:46:49.0000] <annevk>
http://wiki.whatwg.org/wiki/Howto_spec has a start as far as writing goes

[10:47:32.0000] <veosotano>
oh, cool

[10:48:25.0000] <veosotano>
I'll bookmark his

[10:48:29.0000] <veosotano>
*this

[10:49:18.0000] <veosotano>
thanks!

[10:50:08.0000] <veosotano>
annevk: have you ever heard of the AXR Project?

[10:50:19.0000] <annevk>
nope

[10:50:20.0000] <veosotano>
if so, what is your opinion?

[10:50:25.0000] <veosotano>
ok

[10:50:35.0000] <veosotano>
I'm the founder of that project

[10:51:03.0000] <veosotano>
I could give you a link to the video of the presentation

[10:51:13.0000] <veosotano>
it's 50 mins long if you have spare time

[10:51:21.0000] <thisgeek>
veosotano: it may be instructive, as it was for me today, to read through a summary of how the w3c HTML working group comes to a decision. Here's an example: http://lists.w3.org/Archives/Public/public-html/2011Mar/0574.html

[10:51:33.0000] <veosotano>
if not, I could give you an introduction

[10:52:24.0000] <veosotano>
thisgeek: thank you very much :)

[10:52:36.0000] <veosotano>
looks very bureaucratic, btw

[10:52:55.0000] <Ms2ger>
You may want to read http://lists.w3.org/Archives/Public/public-tracking/2012Jan/0338.html too

[10:55:42.0000] <annevk>
Ms2ger: hadn't seen that before

[10:56:18.0000] <veosotano>
I think he's right

[10:56:56.0000] <annevk>
yeah, the HTML WG is a joke

[10:57:02.0000] <annevk>
it's one of the fuckups

[10:57:23.0000] <veosotano>
so how does it work effectively?

[10:57:33.0000] <veosotano>
does webkit follow what the whatwg specs?

[10:57:44.0000] <thisgeek>
veosotano: As I read it, the process not only invites comment and objections, but takes care to address and assess the quality of those objections. I wonder if that's connected to the peer review process that submissions for academic journals are put through.

[10:57:57.0000] <Ms2ger>
MikeSmith mentioned it in here once, but without a URL

[10:59:18.0000] <veosotano>
thisgeek: do you think that those objects are effective to remove the bureaucracy that is slowing it down so much?

[10:59:21.0000] <annevk>
veosotano: yeah they do

[10:59:37.0000] <veosotano>
what does the HTMLWG do, then?

[10:59:51.0000] <thisgeek>
But I think there is a good arguement in "there's just too many stakeholders". I think Kris Kowal has some experience deal with this in regard to the growing interest in CommonJS.

[11:00:51.0000] <thisgeek>
veosotano: Are the objections effective? I honestly don't know yet.

[11:01:24.0000] <veosotano>
there have been many objections over the years, we're still at the same pace :S

[11:03:03.0000] <veosotano>
annevk: the axr project is about creating an alternative to current web standards, I'd like to tell you more about it if you want, but I completely understand if you are too busy

[11:04:41.0000] <gsnedders>
veosotano: Yet you don't know how current web standards come about?

[11:05:01.0000] <veosotano>
well I do from a designer/developer perspective

[11:05:12.0000] <veosotano>
I didn't know the exact process used internally

[11:06:39.0000] <gsnedders>
veosotano: If you're trying to come up with anything new, remember that for all practical purposes, impls have a veto. You can put what you like in the spec if you get consensus on it, but if impls don't impl it, it's meaningless.

[11:06:52.0000] <annevk>
veosotano: I read the site a bit

[11:07:11.0000] <Ms2ger>
It sounds like XHTML2 to me

[11:07:15.0000] <veosotano>
it's not

[11:07:29.0000] <veosotano>
I wonder why so many jump to that conclusion so fast

[11:07:50.0000] <annevk>
veosotano: looks like a cool project, but I don't think that's gonna work (otherwise I'd be working on something similar :) )

[11:08:05.0000] <veosotano>
gsnedders: it's not about a spec, but about an actual implementation

[11:08:21.0000] <veosotano>
the prototype already does most of the new features in the HSS language

[11:08:37.0000] <veosotano>
annevk: well I invite you to do so :)

[11:08:47.0000] <veosotano>
please watch the video

[11:08:51.0000] <Ms2ger>
When I read "replacing the current web technology with something done better, based on XML", I'm afraid "XHTML2" is the first thing to pop into my mind

[11:09:14.0000] <veosotano>
and think about if I'm saying completely absurd things (which I don't think they are) I sincerely apologize :)

[11:09:38.0000] <annevk>
veosotano: also, http://en.wikipedia.org/wiki/Monoculture_(computer_science)

[11:09:39.0000] <veosotano>
Ms2ger: we want to use XML only as a thin data layer

[11:09:43.0000] <thisgeek>
veosotano: I suspect your biggest hurtle will be working with browser vendors to get it implemented. Do you think that's correct?

[11:09:49.0000] <annevk>
veosotano: it's a positive thing we have multiple engines today

[11:10:00.0000] <veosotano>
thisgeek: the plan is not to have browsers implement it

[11:10:09.0000] <veosotano>
annevk: but it's a hell for a developer

[11:10:16.0000] <veosotano>
fragmentation is a big problem

[11:10:18.0000] <annevk>
hell is IE6

[11:10:23.0000] <annevk>
or WebKit mobile

[11:10:28.0000] <gsnedders>
veosotano: IE6 was a monoculture, was that good for developers?

[11:10:44.0000] <gsnedders>
veosotano: Is WebKit on iOS and Android being so outdated good for developers?

[11:10:54.0000] <veosotano>
the problem is actually that there is no part of the language that allows for control over how implementations advance

[11:11:07.0000] <veosotano>
there can be no infinite forwards and backwards compatibility

[11:11:12.0000] <veosotano>
with zillions of implementations

[11:11:43.0000] <gsnedders>
In what sense?

[11:11:55.0000] <veosotano>
the rendering engines have no knowledge about what the developer meant when he wrote the code

[11:12:01.0000] <veosotano>
it's just whatever its put out there

[11:12:18.0000] <Ms2ger>
/me goes back to writing tests

[11:12:20.0000] <veosotano>
since browsers just implement whatever the heck they want

[11:12:47.0000] <gsnedders>
How do you get rid of dependence on browsers without impacting performance?

[11:13:16.0000] <veosotano>
Ms2ger: I don't believe xHTML2 died because of XML

[11:13:33.0000] <Ms2ger>
Oh, I don't either

[11:13:52.0000] <veosotano>
gsnedders: wait, do you mean in rendering performance?

[11:14:01.0000] <annevk>
veosotano: don't let us tell you too much about how your ideas are improbable; that's not the way to success :)

[11:14:12.0000] <gsnedders>
veosotano: General performance

[11:14:30.0000] <gsnedders>
veosotano: Including but not limited to rendering perf

[11:14:41.0000] <veosotano>
gsnedders: you need native speed

[11:14:49.0000] <veosotano>
if possible with HW acceleration

[11:15:11.0000] <gsnedders>
veosotano: How do you get that in a secure manner, while having all browsers improving at a constant rate?

[11:15:13.0000] <veosotano>
the project proposes to create a new rendering engine… which is native code

[11:15:28.0000] <veosotano>
because it's an open source project

[11:15:29.0000] <gsnedders>
veosotano: And what makes you think Apple will ship that on iOS, for example?

[11:15:53.0000] <veosotano>
security problems can be analyzed and fixed in the community

[11:16:15.0000] <veosotano>
iOS is actually the hardest nut to crack

[11:16:22.0000] <veosotano>
but we'll try to create an application

[11:16:39.0000] <gsnedders>
You won't get it on the App Store if you want JS execution at all.

[11:16:49.0000] <veosotano>
so there is no way of getting it to work in safari, but it could redirect through the use of custom protocols, like instapaper does

[11:17:01.0000] <veosotano>
gnsedders: can JavascriptCore not be used?

[11:17:13.0000] <veosotano>
that would be a problem indeed

[11:17:15.0000] <gsnedders>
veosotano: But then you'll have differences between engines.

[11:17:32.0000] <veosotano>
point taken :(

[11:17:37.0000] <veosotano>
damn rules

[11:18:31.0000] <gsnedders>
veosotano: Also, how can something be a true standard if there's only one implmenetation of it?

[11:18:40.0000] <veosotano>
correct me if I'm wrong, but I think interoperability between JS engines (in modern browsers) is way superior to css support, for example

[11:18:56.0000] <veosotano>
gsnedders: well that depends on how you define the term standard

[11:19:00.0000] <Ms2ger>
Well

[11:19:02.0000] <veosotano>
webkit is a de facto standard today

[11:19:19.0000] <gsnedders>
veosotano: If it's a standard then others will want to try and make a better implementation, in all probability

[11:19:24.0000] <Ms2ger>
The ECMAScript spec has historically been better than the CSS specifications

[11:19:29.0000] <veosotano>
why not improving the existing one?

[11:19:56.0000] <veosotano>
I mean the existing implementation

[11:19:59.0000] <gsnedders>
veosotano: Why are there multiple impls of HTML/CSS/etc.?

[11:20:03.0000] <veosotano>
it should benefit the whole platform

[11:20:11.0000] <veosotano>
because of business interests

[11:20:31.0000] <gsnedders>
If you think it's just business interests, you're wrong.

[11:20:45.0000] <veosotano>
then please set me right :)

[11:21:17.0000] <gsnedders>
It would be a massive financial saving for people not to be developing four browser engines.

[11:21:23.0000] <veosotano>
I think the only good thing of Flash was that it worked the same everywhere (everything else was horrible)

[11:23:19.0000] <thisgeek>
Ms2ger: I couldn't resist asking, since I am working on a presentation about this right now, but why do you think XHTML2 failed, if not because of XML.

[11:23:21.0000] <thisgeek>
?

[11:23:22.0000] <gsnedders>
Different browsers have different technical pros and cons, like different trade-offs between performance and memory usage, and differences in whether they handle OOM in all places.

[11:23:50.0000] <veosotano>
gsnedders: that's precisely what makes webdevelopment so hard

[11:24:00.0000] <gsnedders>
veosotano: Because performance varies?

[11:24:09.0000] <veosotano>
for example

[11:24:21.0000] <veosotano>
there are many presentations out there talking about how to improve performance

[11:24:22.0000] <gsnedders>
veosotano: Performance on a smartphone will never *ever* be the same as on a desktop computer.

[11:24:30.0000] <veosotano>
I know that, of course

[11:25:01.0000] <gsnedders>
And if you're running on a TV with 128MB RAM, you need to be concervative of memory, even if that means being slower.

[11:25:05.0000] <veosotano>
what is the benefit of having all the differences in those trade offs?

[11:25:30.0000] <gsnedders>
Being able to run on lower-end devices v. higher performance on more powerful devices.

[11:25:52.0000] <veosotano>
ok, I get that there are differences in the platforms

[11:26:04.0000] <veosotano>
and maybe saying the exact same implementation is a bit of an oversimplification

[11:26:21.0000] <gsnedders>
As soon as you have variation in the impls, you have the same problems as we have now.

[11:26:23.0000] <veosotano>
of course different tradeoffs will be necessary to make to make it run well everywhere

[11:26:25.0000] <veosotano>
no

[11:26:31.0000] <veosotano>
because todays differences are not about that

[11:26:36.0000] <veosotano>
they are about differences in syntax

[11:26:46.0000] <veosotano>
differences in decisions that were not specd

[11:26:50.0000] <veosotano>
legacy compatibility

[11:27:16.0000] <gsnedders>
HTML5, the quirks mode spec are all about unifying that for legacy compatibility.

[11:27:20.0000] <veosotano>
there needs to be a concensus about what are the pixels that show up on the screen for a given code

[11:27:44.0000] <gsnedders>
And this was pretty HTML5's original primary goal.

[11:27:48.0000] <veosotano>
gsnedders: in no way I'm arguing the whatwg is doing a poor job

[11:27:58.0000] <veosotano>
what I'm arguing is that HTML is not good for the future

[11:28:39.0000] <veosotano>
I'd love it if you would watch the presentation and then gave me your opinion again

[11:29:14.0000] <gsnedders>
veosotano: Why? I'm still not clear. Differences in rendering? But the whole point of most of spec work atm is to have identical rendering.

[11:29:31.0000] <veosotano>
well it's not translating into reality

[11:30:11.0000] <veosotano>
for example on a desktop, what is the benefit of having multiple ways of doing the same thing?

[11:30:19.0000] <Ms2ger>
Oh look, a [Hixie-P4] bug from 1998 just got WONTFIXed

[11:30:24.0000] <veosotano>
why not all together figure out what is the *best* way of doing something?

[11:30:59.0000] <gsnedders>
veosotano: Give me one example where that has happened?

[11:31:25.0000] <veosotano>
that experts have joined together and decided the best solution to a problem?

[11:31:35.0000] <veosotano>
ECMAScript has worked pretty well

[11:31:46.0000] <veosotano>
I mean ECMA

[11:31:51.0000] <gsnedders>
Without having one implementation.

[11:32:10.0000] <veosotano>
I don't follow...

[11:32:22.0000] <veosotano>
we have an implementation

[11:32:24.0000] <gsnedders>
There are multiple ECMAScript impls.

[11:32:27.0000] <Ms2ger>
thisgeek, because browser implementors had no interest in supporting XHTML2

[11:34:09.0000] <veosotano>
gsnedders: I think it hasn't happened, but that doesn't mean it couldn't

[11:34:21.0000] <veosotano>
and btw, we have no other thing that is equal to the internet

[11:34:32.0000] <veosotano>
I think it is for the benefit of the whole internet

[11:34:38.0000] <veosotano>
I don't want to make money off of it

[11:34:51.0000] <veosotano>
well maybe not internet…

[11:34:54.0000] <veosotano>
I mean for the web

[11:35:08.0000] <veosotano>
the application delivery system we have

[11:36:06.0000] <veosotano>
I agree about the dangers of monoculture

[11:36:18.0000] <veosotano>
but historically those monocultures were in the hands of private businesses

[11:36:34.0000] <veosotano>
not in something that is open sourced and meant for the greater good

[11:36:49.0000] <gsnedders>
veosotano: WebKit is open source and the monoculture on mobile is very much a problem.

[11:37:12.0000] <veosotano>
what are those problems exactly?

[11:37:25.0000] <veosotano>
I'm honestly interseted

[11:37:31.0000] <veosotano>
*interested

[11:38:04.0000] <gsnedders>
veosotano: Mobile sites relying upon WebKit bugs, mobile sites relying upon -webkit-.

[11:38:27.0000] <veosotano>
would those be problems if webkit was the only implementation?

[11:38:55.0000] <gsnedders>
Yes, because the sites would still be relying upon something that differs to the standard.

[11:39:11.0000] <gsnedders>
Unless the WebKit code base was the standard and hence, by definition, had no bugs.

[11:39:13.0000] <veosotano>
if the ones that create the standard and the implementations are the same organization

[11:39:22.0000] <veosotano>
nono

[11:39:27.0000] <veosotano>
there is no way of having no bugs

[11:39:31.0000] <veosotano>
bugs will always happen

[11:39:38.0000] <veosotano>
you need to find a way to manage them

[11:39:40.0000] <gsnedders>
veosotano: Then there is no way to stop websites from relying upon bugs in the implementation

[11:39:58.0000] <annevk>
and you need competition to avoid having sites rely on bugs

[11:40:03.0000] <veosotano>
that's because people don't code to specification

[11:40:07.0000] <veosotano>
they code to implementation

[11:40:07.0000] <benvie>
it means when you try to make something with different ideas you have to not only get over the normal hurdle of producing something that is good enough quality, but you also have to get over the hurdle of entrenched adherence to proprietary bugs. Proprietary in the sense that it's a specific implementation, even if open source

[11:40:13.0000] <veosotano>
they don't differ between bug and feature

[11:40:30.0000] <gsnedders>
veosotano: How do you get people to code to specs? People tend to hack stuff together till it work, specs be damned.

[11:40:33.0000] <veosotano>
annevk: I don't think that's the only way

[11:40:59.0000] <gsnedders>
veosotano: Once you have sites relying upon bugs, you have to change the spec to the impl, so the spec may as well be the impl.

[11:41:05.0000] <benvie>
the webkit on mobile thing is helping to prove beyond a bout that it is in fact true, if we didn't know it already

[11:41:17.0000] <gsnedders>
veosotano: Equally, if you have a single impl, what do you gain by having a separate spec?

[11:41:24.0000] <veosotano>
gsnedders: that's only if there is no way of managing that

[11:41:38.0000] <gsnedders>
veosotano: People management won't work.

[11:41:59.0000] <veosotano>
what I mean is that the current web is versionless

[11:42:06.0000] <veosotano>
and then yes, you have no way to manage bugs

[11:42:18.0000] <veosotano>
and less so in such an hostile environment as todays browsers

[11:42:33.0000] <benvie>
competition still sparks ongoing impetus for improvement between the players in the field

[11:42:58.0000] <veosotano>
I don't think the community stalls like a business does

[11:43:05.0000] <veosotano>
think about it

[11:43:09.0000] <veosotano>
business don't care

[11:43:14.0000] <veosotano>
if they won with their monoculture

[11:43:18.0000] <veosotano>
they'll stop spending resources

[11:43:20.0000] <gsnedders>
You still need buisnesses to ship it, ultimately.

[11:43:25.0000] <veosotano>
why?

[11:43:31.0000] <gsnedders>
veosotano: How do you get on iOS?

[11:43:42.0000] <veosotano>
damn apple rules again

[11:43:59.0000] <gsnedders>
veosotano: How do you market it to end users

[11:44:00.0000] <gsnedders>
*?

[11:44:06.0000] <veosotano>
that's a better question

[11:44:14.0000] <veosotano>
for the end users it will have many benefits

[11:44:21.0000] <veosotano>
such as faster and better pages (in average)

[11:44:27.0000] <veosotano>
because of the productivity increase

[11:44:36.0000] <veosotano>
more budget can be allocated on polishing the fine details

[11:44:57.0000] <gsnedders>
What budget?

[11:45:22.0000] <veosotano>
what clients of a web design firm pay them to create a website

[11:45:27.0000] <veosotano>
or a web application

[11:45:42.0000] <gsnedders>
Oh, right.

[11:45:48.0000] <gsnedders>
You mean for that, not for developing the browser.

[11:45:56.0000] <gsnedders>
veosotano: In reality, clients will pay less.

[11:45:58.0000] <Funcod>
oh gsnedders

[11:46:06.0000] <Funcod>
remember me from habari?

[11:46:07.0000] <gsnedders>
Funcod: Oh you.

[11:46:09.0000] <Funcod>
:)

[11:46:09.0000] <veosotano>
I beg to disagree

[11:46:19.0000] <gsnedders>
Funcod: Vaguely.

[11:46:29.0000] <gsnedders>
Funcod: It's been too long since I've been around there much. :P

[11:46:42.0000] <Funcod>
np mike told me you were involved with the w3

[11:49:26.0000] <veosotano>
gsnedders: do you think current tools are really great?

[11:50:02.0000] <veosotano>
I mean I can understand if you believe that we will not succeed… but are you saying that there is no problem?

[11:50:30.0000] <gsnedders>
veosotano: No. Do I think we're slowly moving towards somewhere better with the WHATWG and others? Yes.

[11:50:48.0000] <gsnedders>
Do I think a monoculture is a solution? No.

[11:51:05.0000] <gsnedders>
I'd say a monoculture is actively far worse than what we have today.

[11:51:05.0000] <veosotano>
even if it is a non-proprietary one?

[11:51:08.0000] <gsnedders>
Yes.

[11:51:29.0000] <veosotano>
where the presence of bugs is managed?

[11:51:51.0000] <veosotano>
I'd agree that a monoculture of one of today's engines is bad

[11:52:13.0000] <gsnedders>
I don't think such a think *can* viably be managed.

[11:52:21.0000] <veosotano>
but I believe that there would be value in starting something new, something better, collaborating instead of fighting

[11:52:54.0000] <veosotano>
gsnedders: I think it can' as long as it's a monoculture :P

[11:53:04.0000] <veosotano>
(remove that ' )

[11:53:13.0000] <veosotano>
I think it can

[11:53:15.0000] <gsnedders>
In reality, your biggest challenge will be getting it anywhere, and getting anything in way of users.

[11:53:23.0000] <veosotano>
I agree

[11:53:33.0000] <veosotano>
but I'm going to sell it to devs first

[11:53:54.0000] <veosotano>
and all of the people I've spoken to have agreed on that it would be a way better language

[11:54:05.0000] <gsnedders>
I'd say Linux practically has a monoculture on *nix-like operating systems.

[11:54:16.0000] <gsnedders>
I wouldn't say people follow the POSIX spec as a result.

[11:54:31.0000] <veosotano>
they follow the implementation

[11:54:36.0000] <veosotano>
that's what I argue

[11:54:42.0000] <veosotano>
there is no way to make people to follow a spec

[11:54:47.0000] <veosotano>
they will hack for the implementation

[11:54:50.0000] <veosotano>
it's just a fact

[11:54:54.0000] <gsnedders>
Agreed.

[11:55:04.0000] <veosotano>
that's why if there is *the* implementation

[11:55:06.0000] <veosotano>
it can be managed

[11:55:20.0000] <veosotano>
otherwise we would need to rely on spec

[11:55:21.0000] <gsnedders>
By making backwards incompatible changes to match the spec?

[11:55:31.0000] <veosotano>
with versioning it's possible

[11:55:33.0000] <gsnedders>
Even if major sites rely upon it?

[11:55:44.0000] <veosotano>
your new Photoshop can open older files just fine

[11:55:50.0000] <veosotano>
because it knows its version

[11:56:00.0000] <gsnedders>
Will you update the spec for the previous version to match the impl of the older version?

[11:56:12.0000] <veosotano>
update both things

[11:56:21.0000] <gsnedders>
Because the way *really* bad things start happening is when the two diverge.

[11:56:24.0000] <veosotano>
and provide backwards compatibility modules

[11:56:38.0000] <veosotano>
so that older documents are rendered as they were meant to

[11:56:41.0000] <veosotano>
by the older engine

[11:56:47.0000] <gsnedders>
And how do you stop that from becoming unmanagable with the number of bug-modes?

[11:57:05.0000] <veosotano>
well because I don't believe in infinite backwards compatibility

[11:57:14.0000] <veosotano>
I don't expect 1.0 versions to work with engine 25.0

[11:57:29.0000] <Funcod>
gsnedders : you should our @support

[11:57:29.0000] <veosotano>
at some point support needs to be dropped

[11:57:56.0000] <Funcod>
it permits us to be futur proof whatever happens

[11:57:58.0000] <gsnedders>
Modern browsers *still* support stuff marked as obsolete in the very very first draft HTML specification.

[11:58:08.0000] <veosotano>
and I *still* don't know why

[11:58:17.0000] <gsnedders>
Because websites break, and users complain.

[11:58:23.0000] <Funcod>
because they are millions of legacy pages

[11:58:24.0000] <gsnedders>
Users want websites to work.

[11:58:35.0000] <veosotano>
people also want the web to move forward

[11:58:41.0000] <veosotano>
those two goals are exclusive

[11:59:08.0000] <Funcod>
yes but angry ppl pester loudly

[11:59:14.0000] <veosotano>
btw, as I said, we would render the older versions as they rendered when it came out

[11:59:16.0000] <gsnedders>
veosotano: Are they? I'd argue they aren't. Is HTML5 failing that horrifically at moving the web forward? Is CSS3 failing?

[11:59:24.0000] <veosotano>
only very very very old stuff would break

[11:59:37.0000] <veosotano>
I'd say it is

[11:59:44.0000] <veosotano>
why are native apps so much better?

[11:59:48.0000] <Funcod>
gsnedders : did you check the recent prefix mess?

[12:00:08.0000] <Funcod>
opera wanna use -webkit etc

[12:00:33.0000] <matzipan>
gsnedders: yeah, opera's use of -webkit is the latest and greatest fail of css3

[12:00:52.0000] <gsnedders>
Funcod: That's one specific failing of the CSS WG. People were saying this would happen years ago. MS implemented WebKit prefixes years ago, and are talking about doing so again; likewise is Mozilla.

[12:01:04.0000] <Funcod>
(which was introduced by microsoft first)

[12:01:27.0000] <matzipan>
So not only there is a standard, but there is also something like a unwritten standard of -webkit

[12:01:50.0000] <Funcod>
ppl checking these properties with JS to detect vertain version of a browser

[12:01:59.0000] <Funcod>
will be really surprised

[12:02:08.0000] <Funcod>
*certain

[12:02:29.0000] <matzipan>
But CSS3 is still a fail. Seriously. What else is there apart for some rgba and transforms eyecandy?

[12:02:42.0000] <matzipan>
Is it really fixing the problems in CSS2?

[12:03:01.0000] <matzipan>
You can do your job just fine, agreed. But it isn't really what it should be like

[12:03:06.0000] <gsnedders>
matzipan: What do you see as the problems?

[12:03:19.0000] <Funcod>
I like CSS3 columns BUT they didn't implement break

[12:03:27.0000] <Funcod>
so it's partially good

[12:03:37.0000] <matzipan>
gsnedders: do you really want me to start this discussion?:D

[12:03:47.0000] <veosotano>
this could take a while :)

[12:04:03.0000] <gsnedders>
matzipan: No, I just want a short list to see in what ways CSS3 fails to address them. :)

[12:04:22.0000] <veosotano>
I'll give you 7

[12:04:24.0000] <Funcod>
gsnedders : take wrapping

[12:04:26.0000] <gsnedders>
(I mean, I can think of plenty of issues with CSS 2.1, but that doesn't mean they're the same of what you think of. :))

[12:04:33.0000] <Funcod>
you are going back and forth

[12:04:45.0000] <Funcod>
trying to hack your way to be backward compatible

[12:05:08.0000] <Funcod>
(text wrapping)

[12:05:11.0000] <veosotano>
the html is a mixture of structure, presentation and behavior

[12:05:35.0000] <matzipan>
veosotano: well, let's leave this for a while, and just talk about CSS3

[12:05:48.0000] <veosotano>
I'd argue that's css's fault

[12:05:54.0000] <veosotano>
in HSS we will have structure tools

[12:06:08.0000] <veosotano>
and the behavior is called from the presentation layer

[12:06:15.0000] <gsnedders>
It's not really CSS's fault when CSS didn't exist when most presentational markup was added to HTML :)

[12:06:31.0000] <veosotano>
that doesn't make it good

[12:06:39.0000] <gsnedders>
No, it doesn't make it good.

[12:07:05.0000] <veosotano>
I know that most of the problems are legacy stuff

[12:07:13.0000] <matzipan>
gsnedders:so CSS fixes some problems.. but the base problem is still there. How are you supposed to do pure presentation stuff with CSS?

[12:07:18.0000] <veosotano>
that's exactly why we're proposing to start fresh

[12:08:20.0000] <Ms2ger>
document.replaceChild(document.createTextNode("text"), document.documentElement);

[12:08:23.0000] <Ms2ger>
Enjoy

[12:08:30.0000] <gsnedders>
Ms2ger: Go away.

[12:08:44.0000] <gsnedders>
Ms2ger: HierarchyError, no?

[12:08:56.0000] <Ms2ger>
In WebKit, yes

[12:09:04.0000] <matzipan>
that seems so nasty I'm not even going to run it

[12:09:16.0000] <Ms2ger>
In Gecko, document.childNodes == [doctype, text node]

[12:09:21.0000] <Funcod>
nothing nasty he's using a textNode

[12:09:24.0000] <Funcod>
that's unusual

[12:09:32.0000] <gsnedders>
Ms2ger: Can we please standardize WebKit's behaviour, then?

[12:09:37.0000] <Ms2ger>
In Opera? I dunno, DragonFly hates me

[12:09:55.0000] <Ms2ger>
gsnedders, lucky you, we already did :)

[12:10:11.0000] <gsnedders>
Who does Dragonfly not hate?

[12:10:21.0000] <Funcod>
Ms2ger : you are working on webkit?

[12:10:26.0000] <Funcod>
*are you

[12:10:31.0000] <Ms2ger>
I work on Gecko

[12:10:38.0000] <matzipan>
gsnedders: who uses it/

[12:10:41.0000] <Funcod>
oh nvm then I had a bug for them

[12:11:07.0000] <gsnedders>
matzipan: The base problem being HTML has presentational stuff? Is that still an issue if you don't use it, and when it does exist, it's behaviour can entirely be described using CSS?

[12:11:45.0000] <veosotano>
with behavior you mean what it does or how it looks?

[12:11:45.0000] <Philip`>
/me finds it odd that http://axr.vg/about/features claims to be "Starting completely from scratch" but seems to end up as basically HTML+XML+CSS plus syntactic sugar

[12:12:03.0000] <Funcod>
there are lot of example of attempts of behaviour in CSS

[12:12:06.0000] <Funcod>
most failed

[12:12:07.0000] <matzipan>
Philip`: where did you see any html in axr?

[12:12:13.0000] <Ms2ger>
IE10 seems to match WebKit

[12:12:14.0000] <Ms2ger>
Phew

[12:12:14.0000] <Philip`>
If you're going to go through the pain of migrating the web to an incompatible new platform, surely you should make much more fundamental improvements to it

[12:12:19.0000] <veosotano>
Philip`: doesn't say trying to take good ideas from current standards?

[12:12:32.0000] <gsnedders>
veosotano: I mean its behavioural sffects on layout.

[12:12:36.0000] <gsnedders>
*affects

[12:12:43.0000] <Ms2ger>
effects?

[12:13:03.0000] <veosotano>
gsnedders: the problem is that they're not independent layers

[12:13:10.0000] <veosotano>
the document is deeply linked one to the other

[12:13:22.0000] <veosotano>
many techniques require adding html tags

[12:13:28.0000] <gsnedders>
Ms2ger: I will hate you so much soon.

[12:13:30.0000] <veosotano>
which is completely wrong in my view

[12:13:40.0000] <Ms2ger>
Soon?

[12:13:52.0000] <gsnedders>
Ms2ger: By "soon" I mean a year ago.

[12:14:07.0000] <Ms2ger>
Better :)

[12:14:23.0000] <Ms2ger>
Huh

[12:14:31.0000] <Ms2ger>
DragonFly is getting rather confused...

[12:14:32.0000] <veosotano>
Philip`: what would be those improvements?

[12:14:35.0000] <gsnedders>
veosotano: Without going for a full templating language, it's hard to avoid that issue.

[12:14:57.0000] <fflorent>
I have a naive question about CSS, that may be irrelevant, but why isn't there a prefix named "-experimental" for CSS 3 experimental feature, that every vendor would support? And the vendor prefixes are kept, for the case when the user (webmaster) finds differences between browser implementations.

[12:15:09.0000] <matzipan>
Philip`: well, it's not impossible, and if you start by saying "it's not going to work", where would we be now?

[12:15:23.0000] <fflorent>
so the problem with "-webkit" would disappear with time

[12:15:39.0000] <veosotano>
gsnedders: I think the tools in HSS do solve that issue

[12:15:58.0000] <veosotano>
it's not just like a preprocessor like SASS

[12:16:14.0000] <matzipan>
fflorent: every rule is made to be broken, we would end up with -webkit-experimental :P

[12:16:32.0000] <Philip`>
matzipan: The syntax in the examples looks different, but it still seems to use the same basic concepts of semantic documents and stylesheets etc, which don't seem like a natural fit for the web apps that everyone wants to do nowadays

[12:16:39.0000] <matzipan>
fflorent: there would still need stanradizing

[12:16:53.0000] <gsnedders>
Yeah, what matzipan said.

[12:17:03.0000] <Philip`>
(It seems hugely closer to HTML than to e.g. Flash)

[12:17:09.0000] <gsnedders>
X-* elsewhere in the web platform has the same problem.

[12:17:22.0000] <veosotano>
Philip`: isn't that a good thing?

[12:17:45.0000] <Philip`>
(Not saying that Flash is better, just that HTML surely can't be the only or best approach)

[12:17:56.0000] <fflorent>
matzipan: that is sad and dirty :(

[12:17:59.0000] <gsnedders>
Something that treated web apps, as, well, apps would likely be better.

[12:18:00.0000] <matzipan>
Philip`: the only similarity is see is that it uses a text file... that's the end of it

[12:18:05.0000] <Philip`>
I have no idea what would be better in practice - if I did then I'd try to build it :-)

[12:18:09.0000] <veosotano>
Philip`: our approach is to shift many things from the content to the presentational layer

[12:18:23.0000] <veosotano>
XML is just a thin data layer

[12:18:27.0000] <veosotano>
that provides semantics

[12:18:35.0000] <gsnedders>
XML provides no semantics.

[12:18:40.0000] <veosotano>
namespaces

[12:18:47.0000] <veosotano>
but not prefixes

[12:18:50.0000] <veosotano>
those are ugly

[12:18:53.0000] <veosotano>
default namespaces

[12:20:04.0000] <Ms2ger>
gsnedders, http://img857.imageshack.us/img857/4276/dragonfly2.png

[12:20:35.0000] <fflorent>
matzipan: why not setting such a solution now, so users migrate step by step to that convenient solution, and vendors avoid to implement "-webkit" prefix

[12:20:55.0000] <matzipan>
maybe axr is not going to get anywhere, but at least it's something to be noted... you should definetely be aware of it

[12:21:10.0000] <veosotano>
haha that sounds menacing :P

[12:21:38.0000] <veosotano>
what I want is better tools

[12:21:44.0000] <veosotano>
we are proposing an alternative

[12:21:48.0000] <veosotano>
not to replace the web

[12:21:52.0000] <veosotano>
but to augment it

[12:21:54.0000] <matzipan>
_proposing_

[12:22:20.0000] <matzipan>
fflorent: i remember there being some different syntaxes on radial gradients and stuff

[12:22:30.0000] <gsnedders>
Ms2ger: Yes. So?

[12:22:32.0000] <veosotano>
I think it will benefit everyone, even if html/css get better as a result

[12:24:23.0000] <Ms2ger>
gsnedders, something you may care more about, Number.isNaN should be in the next Nightly

[12:24:34.0000] <Ms2ger>
Along with default arguments

[12:24:53.0000] <gsnedders>
Ms2ger: I don't much.

[12:24:55.0000] <gsnedders>
:P

[12:25:16.0000] <Ms2ger>
Do you care for ANYTHING? ;)

[12:25:25.0000] <gsnedders>
Not really.

[12:25:26.0000] <fflorent>
matzipan: yes, so we can have : #myid { -experimental-border-radius: /* most common syntax */; -aVendorPrefix-border-radius: /* specific syntax that override the previous property */; ... }

[12:26:03.0000] <Ms2ger>
-wd-2012-06-01-border-radius

[12:26:57.0000] <matzipan>
fflorent: oooooooook, so that would get even messier.

[12:27:03.0000] <Ms2ger>
/me goes and plays with DocumentFragments

[12:27:21.0000] <matzipan>
But, on the other side, axr proposes a nice way around that :P j/k

[12:28:21.0000] <Philip`>
Ms2ger: That's great until someone writes a blog post saying "To guarantee forward compatibility for your content for at least the next two years, write { -wd-2012-06-01-border-radius: ...; -wd-2012-06-02-border-radius: ...; [snip]; -wd-2014-01-01-border-radius: ... }"

[12:28:49.0000] <Ms2ger>
Philip`, pff, let's just make SASS to generate that

[12:28:55.0000] <Ms2ger>
s/to//

[12:29:46.0000] <matzipan>
writing bytecode by hand seems a lot nicer at the moment

[12:30:03.0000] <Philip`>
/me often sees people suggesting to use Opera-prefixed versions of features that Opera hasn't attempted to implement yet, like windows.oRequestAnimationFrame

[12:30:17.0000] <Ms2ger>
'tis true

[12:30:17.0000] <Philip`>
s/s//

[12:30:56.0000] <fflorent>
matzipan: what is the axr proposition ?

[12:33:35.0000] <matzipan>
fflorent: it's a thing called a support object, we have it in mind, but i see it has not yet been written down : http://spec.axr.vg/specification.html#1.7.1

[12:34:10.0000] <matzipan>
fflorent: if you want some further info maybe veosotano will take a moment and explain it on pm

[12:34:51.0000] <matzipan>
oh, there's a github discussion on that

[12:35:59.0000] <matzipan>
fflorent: pm'd you

[12:40:11.0000] <matzipan>
glad to talk to you guys, i hope this project will inspire you. if you don't mind i'm going to lurk around from now on

[12:40:47.0000] <fflorent>
matzipan: OK, I see. Thank you

[12:42:03.0000] <veosotano>
fflorent: what do you think about the @support solution?

[12:43:37.0000] <fflorent>
veosotano: as said in the github page : complex. But that is clean

[12:43:52.0000] <veosotano>
oh, you commented? :)

[12:45:16.0000] <fflorent>
veosotano: oh, not yet. Do you want me to comment ?

[12:45:30.0000] <veosotano>
no, I misunderstood you

[12:45:47.0000] <matzipan>
fflorent: we definetely need a lot of input on the project, tho

[12:45:55.0000] <veosotano>
which one is clean and which one not?

[12:48:47.0000] <veosotano>
fflorent: I hope you didn't get me wrong there, I more than welcome your feedback

[12:49:03.0000] <fflorent>
veosotano: well, I spoke generally. That is cleaner than having a server-side PHP script that generate each vendor prefix :)

[12:49:43.0000] <veosotano>
I agree :)

[12:52:04.0000] <fflorent>
veosotano: so, how would it work ? th

[12:52:34.0000] <veosotano>
what exactly?

[12:53:21.0000] <fflorent>
the browser execute the condition, and then the content inside the block is interpreted, anywhere the @support is put ?

[12:53:46.0000] <fflorent>
(I have not finished my sentence, sorry :s)

[12:53:59.0000] <fflorent>
s/have/did

[12:54:33.0000] <veosotano>
@support is a special object, which means it can be used inside a selector chain

[12:54:55.0000] <veosotano>
and in HSS something called property filters are written with ( ) after the simple selector

[12:54:59.0000] <veosotano>
so you do

[12:55:19.0000] <veosotano>
@support( <property> <operator> <valuetocheckagainst>) { }

[12:55:21.0000] <matzipan>
veosotano:  i think he was asking if you can use it anywhere else outside a selector chain

[12:55:58.0000] <veosotano>
anything inside the block would be executed, yes

[12:56:14.0000] <fflorent>
matzipan: yes :)

[12:56:23.0000] <fflorent>
veosotano: ok

[12:56:38.0000] <veosotano>
I think it can't ….

[12:56:44.0000] <matzipan>
would this work? stuff { isA: button; @support(gradient) { do gradient background here} }

[12:56:44.0000] <veosotano>
it's sor of like a media query

[12:57:02.0000] <fflorent>
ah

[12:57:05.0000] <veosotano>
matzipan: not exactly like that, but yes

[12:57:11.0000] <veosotano>
in the general sense

[12:57:23.0000] <matzipan>
but how does it work?

[12:57:47.0000] <veosotano>
the support object maintains a list of values, which can be accessed by index just like an array

[12:58:19.0000] <veosotano>
that's for example with checks for object types

[12:58:22.0000] <matzipan>
@support.gradient = true then?

[12:58:28.0000] <veosotano>
oh

[12:58:32.0000] <veosotano>
the point to understand here

[12:58:43.0000] <veosotano>
is that the support object inherits the scope where it is in

[12:59:02.0000] <veosotano>
so what you select inside the block will select the same thing as outside, just conditionally

[12:59:35.0000] <matzipan>
that's intuitive, that's what i wrote earlier... but how would you rewrite my snippet to work?

[13:00:12.0000] <veosotano>
oh, that's the concrete syntax of the property filter

[13:00:34.0000] <veosotano>
so between the () you write the property name, and then you can use [ ] to access as an array

[13:00:40.0000] <veosotano>
so it would be

[13:01:11.0000] <veosotano>
@support(object["gradient"]) { @this{ background: myGradient }

[13:01:16.0000] <veosotano>
}

[13:01:45.0000] <veosotano>
because gradient is an index in the property "object" of the support object

[13:01:54.0000] <veosotano>
and if it returns true the property filter matches

[13:02:01.0000] <veosotano>
therefore executes what's inside

[13:02:02.0000] <matzipan>
that's ugly

[13:02:16.0000] <matzipan>
_and_ unintuitive

[13:02:26.0000] <veosotano>
we could also maybe make it apply the properties you define inside to the parent

[13:02:37.0000] <veosotano>
so you'd do

[13:02:54.0000] <veosotano>
@support(object["gradient"]) { background: myGradient }

[13:03:49.0000] <matzipan>
but i don't get it, why the objec[] thing

[13:04:01.0000] <veosotano>
oh because it follows regular property filter syntax

[13:04:07.0000] <matzipan>
i mean, surely you need some kind of namespacing

[13:04:35.0000] <matzipan>
but who is "object"? ... that is the question

[13:04:52.0000] <veosotano>
actually I think the example code in the github issue is not optimal

[13:04:56.0000] <veosotano>
I'd call it "objects"

[13:05:09.0000] <veosotano>
@support(objects[ etc

[13:05:21.0000] <matzipan>
i'd call it features

[13:05:46.0000] <veosotano>
but you can check for more things

[13:05:49.0000] <veosotano>
combinators

[13:05:50.0000] <veosotano>
filters

[13:06:03.0000] <veosotano>
instead of objects

[13:06:06.0000] <matzipan>
oh, now i get it

[13:06:14.0000] <veosotano>
well anyway, I don't want to flood the channel ;)

[13:06:15.0000] <matzipan>
i'd call it properties then

[13:06:27.0000] <fflorent>
+1

[13:06:35.0000] <matzipan>
oh right, we should switch back

[13:06:40.0000] <veosotano>
:)

[13:06:41.0000] <matzipan>
sorry whatwg guys for spamming

[13:06:41.0000] <veosotano>
sorry guys

[13:08:09.0000] <veosotano>
but fflorent, did you get the idea?

[13:08:26.0000] <fflorent>
veosotano: yes, I think

[13:08:40.0000] <matzipan>
maybe this will make it in css4 :D

[13:08:46.0000] <veosotano>
would you agree it is better than the prefixes?

[13:09:23.0000] <matzipan>
veosotano: well, that's because hss is fundamentally different. you can't just mix @support in CSS. it doesn't make sense

[13:09:47.0000] <matzipan>
oh wait. media queries..

[13:09:48.0000] <veosotano>
right

[13:10:03.0000] <veosotano>
I think there even is something like that in css

[13:10:07.0000] <veosotano>
or was it in JS?

[13:10:09.0000] <fflorent>
veosotano: there are people that use CSS3, and are not technically brilliant. I think it would be interesting to have their opinion.

[13:10:18.0000] <fflorent>
what do you think ? :p

[13:10:20.0000] <matzipan>
veosotano: isn't that modernizr? :P

[13:10:32.0000] <veosotano>
but browsers didn't report accurately what they supported

[13:10:39.0000] <veosotano>
so people never ended up using it

[13:12:10.0000] <veosotano>
but I can't remember how it was called :(

[16:41:14.0000] <padenot>
2


2012-06-04
[20:55:54.0000] <jwalden>
there's no way to -- within a script -- get a reference to its corresponding script element, is there?  I can't think of one offhand, but I don't know that there isn't one

[21:19:20.0000] <Hixie>
jwalden: if it's a blocking script run from the parser in a document that isn't being silly with its parsing environment, you can just get the last <script> element of the document

[21:20:08.0000] <Hixie>
jwalden: failing that, you can set a capture listener for afterscriptexecute during the script and then do whatever it is you want to do when it fires

[21:20:21.0000] <jwalden>
hmm, I didn't know about the latter

[21:20:32.0000] <jwalden>
the former I had thought of as a worst-case hack, definitely :-)

[21:20:34.0000] <Hixie>
might not work reliably everywhere, it's relatively new

[21:21:05.0000] <Hixie>
if it's an external script, you can do it using the 'load' event instead of 'afterscriptexecute'

[21:22:22.0000] <Hixie>
if it's an internal script then you can do that too except the event will be queued and i'm not 100% sure you can't have another load fire first

[21:22:30.0000] <Hixie>
depending on what's going on

[22:26:46.0000] <zcorpan>
MikeSmith: is it possible to CC a mailing list automatically for new bugs filed that have a particular string in the summary, or when a bug changes summary and now has that string?

[22:27:04.0000] <zcorpan>
MikeSmith: concretely, public-texttracks and "<track>"

[22:27:46.0000] <MikeSmith>
not possible with bugzilla as far as I know

[22:27:49.0000] <MikeSmith>
/me checks

[22:30:24.0000] <MikeSmith>
zcorpan: yeah, no way to do if from bugzilla config

[22:31:35.0000] <zcorpan>
/me ponders about possible ways to do it anyway

[22:34:22.0000] <zcorpan>
there's a feed: https://www.w3.org/Bugs/Public/buglist.cgi?bug_status=NEW&bug_status=ASSIGNED&bug_status=REOPENED&component=HTML5%20spec%20%28editor%3A%20Ian%20Hickson%29&component=other%20Hixie%20drafts%20%28editor%3A%20Ian%20Hickson%29&product=HTML%20WG&query_format=advanced&short_desc=%3Ctrack%3E&short_desc_type=allwordssubstr&title=Bug%20List:%20track&ctype=atom

[22:34:54.0000] <zcorpan>
can something hook into that and send email about new items?

[22:36:20.0000] <MikeSmith>
wow cool that link crashed my browser

[22:37:19.0000] <MikeSmith>
sweet it just did it again

[22:38:28.0000] <zcorpan>
nice

[22:42:19.0000] <MikeSmith>
zcorpan: anyway, yeah, I guess something could hook into that

[01:10:37.0000] <zcorpan>
/me wonders what happens with <img srcset="foo.jpg 2x" style="image-resolution:2dppx">

[01:18:56.0000] <odinho>
zcorpan: Hmm. I would guess nothing. Because image-resolution would probably be at that already anyway? At least how I understand it.

[01:19:44.0000] <odinho>
<img srcset="foo.jpg 2x" style="image-resolution:1dppx">  is IMHO more of a braintwister, -- under the same "I haven't looked up how image-resolution is supposed to work" caveat.

[01:21:00.0000] <odinho>
MikeSmith: How much work is it approving PHP files for w3c-test.org? -- I keep moving stuff, and it's kinda stupid, I have a "staging" directory now and moved some PHP there. If it's approved, I will move it once more to /approved/

[01:24:15.0000] <zcorpan>
/me doesn't like the fact that tests move

[01:25:45.0000] <odinho>
zcorpan: Yeah, I don't really like it either. -- But I don't like them being in submitted/<vendor>/whatever either. And being of different quality and make.

[01:27:13.0000] <Ms2ger>
And there being too few, and nobody reviewing them ;)

[01:28:23.0000] <annevk>
Ms2ger: so should I remove that third point then?

[01:29:07.0000] <Ms2ger>
Yeah

[01:29:28.0000] <Ms2ger>
And maybe add a note along the lines of "This implies that parent is a Document, DocumentFragment, or Element node."

[01:30:18.0000] <annevk>
so why did we end up with that step?

[01:30:21.0000] <annevk>
because of Attr?

[01:30:47.0000] <zcorpan>
should we change the procedure with submitted tests to be closer to various people's liking?

[01:30:59.0000] <Ms2ger>
Hmm, that seems possible

[01:32:33.0000] <annevk>
but even if Attr remains a node it will never have children

[01:32:38.0000] <annevk>
so we can remove that

[01:33:15.0000] <zcorpan>
it'd be nice to have a review system (something like what we use at opera, called "critic") for tests, and you can look up the review for a test and see the history

[01:33:30.0000] <zcorpan>
and not have "accepted" at all, since specs change over time anyway

[01:33:46.0000] <jgraham>
zcorpan: Spent ages investigating review systems, turns out there aren't any good ones for hg

[01:34:05.0000] <zcorpan>
can we move to git? :-)

[01:34:11.0000] <Ms2ger>
No

[01:34:13.0000] <odinho>
Hmm. Another problem is that some of the tests are kinda OCD.

[01:34:14.0000] <odinho>
:(

[01:34:27.0000] <annevk>
if git has all the tooling...

[01:34:32.0000] <annevk>
git also has the community

[01:34:38.0000] <zcorpan>
Ms2ger: why?

[01:34:43.0000] <jgraham>
Actually moving to git would help a lot with the review problem even without open Opera-Critic

[01:34:49.0000] <odinho>
Some tests are more equal than others, to use Animal Farm terms :]

[01:35:08.0000] <jgraham>
Since there are a non-zero number os possible review tools

[01:35:26.0000] <jgraham>
notably gerrit, but - at a push - just github

[01:36:18.0000] <jgraham>
(of course pliniss is developing some custom thing based around the CSS WG workflow)

[01:37:36.0000] <annevk>
zcorpan: image-resolution seems like something we should not implement...

[01:37:53.0000] <zcorpan>
annevk: why not?

[01:39:34.0000] <AryehGregor>
jgraham, shepherd supports test review, and has for ages.

[01:39:43.0000] <AryehGregor>
I doubt it's comparable to gerrit, though.

[01:40:00.0000] <annevk>
zcorpan: does not seem like a good idea to complicate image math even further

[01:40:35.0000] <jgraham>
AryehGregor: Yes, I think I said that

[01:41:09.0000] <AryehGregor>
/me was replying to "(of course pliniss is developing some custom thing based around the CSS WG workflow)", which was phrased in the present participle and therefore implied it was still under development

[01:41:14.0000] <jgraham>
Or at least that it was being developed. Last I heard it didn't really support > 1 test per file

[01:41:21.0000] <AryehGregor>
No, it doesn't.

[01:41:25.0000] <AryehGregor>
AFAIK.

[01:41:36.0000] <jgraham>
Well then it is either "still being developed" or "useless"

[01:41:45.0000] <jgraham>
I was giving it the benefit of the doubt

[01:41:54.0000] <AryehGregor>
It's really meant originally for manual CSS tests, which is logically going to be one test per file.

[01:42:04.0000] <jgraham>
Yes

[01:42:05.0000] <AryehGregor>
It has some support for reftests too, although inadequate.

[01:42:18.0000] <AryehGregor>
I don't think it has reasonable support for JS tests.

[01:42:29.0000] <jgraham>
I just think tests should be reviewed like code

[01:42:39.0000] <AryehGregor>
I completely agree for JS tests.

[01:42:40.0000] <jgraham>
A sequence of commits

[01:42:43.0000] <AryehGregor>
Since, well, they are code.  :)

[01:42:57.0000] <jgraham>
Yeah, but not everyone thinks that

[01:43:16.0000] <AryehGregor>
Reftests and such make sense to review as files, since they tend to be very short and simple and logically delineated as-is.

[01:43:37.0000] <AryehGregor>
I don't think reviewing them as commits makes as much sense.

[01:44:23.0000] <jgraham>
I think having one system for everything makes a lot of sense

[01:44:47.0000] <jgraham>
and using a commit-based review system at Opera for tests is working fine

[01:45:13.0000] <jgraham>
(although I have personally never used it for reviewing reftests, I have reviewed manual tests)

[01:51:56.0000] <zcorpan>
AryehGregor: i don't see much problem with reviewing reftests as commits. of course you'd want to run the test as well, but that applies to other tests equally i think

[01:56:15.0000] <jgraham>
So if I have data:text/html,<body onload="location='data:text/html,1'" onunload="'location=data:text/html,2'">3 what should I end up with per spec?

[01:56:53.0000] <Ms2ger>
COME_ON_ERR

[01:56:58.0000] <jgraham>
Browsers seem to give 1) which makes sense if the unload navigation is cancelled, but afaict that would happen in step 4) which only applies to different-origin navigations

[01:58:04.0000] <zcorpan>
jgraham: material for #htmlpubquiz :-P

[02:03:18.0000] <jgraham>
zcorpan: Not useful :p

[02:05:45.0000] <zcorpan>
jgraham: you could use the majority answer as the correct answer on the basis that it's what people expect to be right :-)

[02:06:55.0000] <zcorpan>
jgraham: is a data: navigation considered to be a same-origin navigation?

[02:13:12.0000] <odinho>
zcorpan: lol, using majority - that's a sneaky method.

[02:13:59.0000] <Ms2ger>
/me sighs

[02:14:10.0000] <odinho>
BTW, I'm no big fan of the long names. Anyone care to think about something better than navigator.persistentStorageSettings.queryUsageAndQuota or navigator.storageInfo.queryPersistentUsageAndQuota?  http://lists.w3.org/Archives/Public/public-webapps/2012AprJun/1044.html

[02:14:25.0000] <Ms2ger>
And here I thought that Node.replaceChild would be interoperable

[02:14:47.0000] <Ms2ger>
Should have known better

[02:15:22.0000] <zcorpan>
odinho: where's the spec for those?

[02:16:17.0000] <odinho>
zcorpan: Seems to be http://dvcs.w3.org/hg/quota/raw-file/tip/Overview.html

[02:16:59.0000] <zcorpan>
odinho: although maybe it's not so reliable since people may be answering the answer they think is *least* reasonable hoping that it's the correct answer (since it probably has been in the past)

[02:17:11.0000] <odinho>
zcorpan: Haha

[02:17:36.0000] <odinho>
zcorpan: So, phrase the question:  "What would be most reasonable? <example>"

[02:18:01.0000] <matjas>
http://twitter.com/mattur/status/209574686739275776 lolol

[02:18:04.0000] <Ms2ger>
"Cannot convert 'document.body' to object"

[02:18:58.0000] <zcorpan>
odinho: but that probably quickly leads to useless bikeshedding and ultimately the Complicator's Gloves

[02:19:34.0000] <AryehGregor>
jgraham, you probably mean: data:text/html,<body onload="location='data:text/html,1'" onunload="location='data:text/html,2'">3

[02:19:41.0000] <AryehGregor>
(note location of ' in onunload attribute)

[02:20:31.0000] <AryehGregor>
This is just a question of what happens if onunload navigates, right?

[02:21:10.0000] <AryehGregor>
I'd think it would either fail, or succeed and automatically cancel the pending navigation but not trigger the onunload handler again (obviously).

[02:21:31.0000] <AryehGregor>
I would sure hope that it doesn't succeed *followed by* the original navigation succeeding.  That would be kind of silly.

[02:22:23.0000] <AryehGregor>
zcorpan, reviewing reftests as commits makes sense, but if you're reviewing *only* reftests (and reftest-like manual tests) I think reviewing per-file probably makes more sense.  Which is probably why the CSSWG does it.

[02:22:59.0000] <AryehGregor>
If you're reviewing both reftests and JS tests, I agree that it makes the most sense to do commit-based review for all of them, but the CSSWG is kind of stuck with its existing system, I guess . . .

[02:26:05.0000] <matijsb>
good morning, Whatwg!

[02:27:55.0000] <krijn>
Slijmbal

[02:30:51.0000] <Ms2ger>
Hah

[02:30:56.0000] <Ms2ger>
/me whacks krijn 

[02:32:43.0000] <MikeSmith>
odinho: it's not much work

[02:32:59.0000] <MikeSmith>
if you have stuff you want to have approved, let me know

[02:33:33.0000] <odinho>
MikeSmith: OK  webappsec/tests/cors/submitted/opera/staging/resources/cors-makeheader.php << that one. :P

[02:34:03.0000] <odinho>
If I update it later (same path), is it still approved?

[02:34:10.0000] <MikeSmith>
no

[02:34:12.0000] <jgraham>
AryehGregor: Oh, good catch, thanks

[02:34:26.0000] <jgraham>
Seems to change the behaviour of Opera

[02:34:57.0000] <Kolombiken>
good morning, Whatwg!

[02:38:58.0000] <MikeSmith>
odinho: done

[02:39:57.0000] <Ms2ger>
Fail: assert_throws: function "function() { doc.replaceChild(df, doc.documentElement..." Fail: assert_throws: function "function() { a.replaceChild(a, c); }" threw object "DOMException: HIERARCHY_REQUEST_ERR" that is not a DOMException NotFoundError: property "code" is equal to 3, expected 8

[02:39:57.0000] <Ms2ger>
Pass

[02:39:57.0000] <Ms2ger>
Fail: assert_throws: function "function() { document.replaceChild(doc, document.docu..." threw Element node <html><head><meta charset="utf-8"> <title>Node.replaceChi... that is not a DOMException HierarchyRequestError: property "code" is equal to undefined, expected 3

[02:39:57.0000] <Ms2ger>
Fail: assert_throws: function "function() { doc.replaceChild(df, doc.documentElement..." threw Element node <html><head><title>title</title></head><body></body></html> that is not a DOMException HierarchyRequestError: property "code" is equal to undefined, expected 3

[02:40:35.0000] <Ms2ger>
1. Why does Opera fail at copying stuff in columns

[02:40:46.0000] <Ms2ger>
2. Why would it claim to throw an Element as an exception?

[02:40:58.0000] <zcorpan>
maybe it does?

[02:42:33.0000] <Ms2ger>
It does appear to

[02:42:42.0000] <Ms2ger>
Fascinating

[02:43:55.0000] <Ms2ger>
http://software.hixie.ch/utilities/js/live-dom-viewer/saved/1559

[02:46:49.0000] <AryehGregor>
nsCOMPtr<nsIContentIterator> iter = do_CreateInstance("@mozilla.org/content/post-content-iterator;1", &rv);

[02:46:55.0000] <AryehGregor>
How could that possibly fail?

[02:46:58.0000] <Ms2ger>
Wrong window? :)

[02:47:12.0000] <AryehGregor>
Argh!

[02:47:42.0000] <AryehGregor>
I get confused when the last person talking is someone like you.

[02:48:09.0000] <odinho>
lol, someone like you. Sounds ... a bit accusing. :P

[02:49:13.0000] <matjas>
yeah, why can’t Ms2ger just SHUT UP

[02:51:14.0000] <jgraham>
I think he means a dirty, good for nothing, Gecko hacker

[02:51:57.0000] <jgraham>
(uh, does that need a smilie?)

[02:52:20.0000] <jgraham>
(just in case: ;)

[02:52:24.0000] <Ms2ger>
)

[02:53:29.0000] <jgraham>
hsivonen: I'm not sure I understand the point you were trying to make in bug 17231.

[02:53:50.0000] <Ms2ger>
"There�s been a big spat over responsive images but WHATWG is unwilling to reverse its decision"

[02:54:02.0000] <Ms2ger>
Trolling much, leaverou?

[03:15:06.0000] <Ms2ger>
/me grumbles at Opera

[03:17:21.0000] <annevk>
"Full Screen API" spelling is hard I guess...

[03:17:45.0000] <annevk>
"The Full Screen API is a joint effort between the WebApps and CSS Working Groups." comedy gold

[03:18:12.0000] <annevk>
but overall it's super that someone is writing this up

[03:28:12.0000] <odinho>
Ms2ger: Yeah, storm in a tea cup.

[04:02:53.0000] <Ms2ger>
/me is glad that Opera manages to avoid creating cycles, at least...

[04:08:45.0000] <zcorpan>
Hixie: is it intentional that cues can have background images?

[04:14:37.0000] <matjas>
annevk: yeah, it’s like the WHATWG weekly, but with a broader scope. Typos or not, I dig it.

[04:20:12.0000] <Ms2ger>
Too few DOM4 tabs open...

[04:20:15.0000] <Ms2ger>
/me opens a 7th

[04:57:22.0000] <Ms2ger>
zcorpan, do you know if Opera has a bug for throwing nodes as exceptions from replaceChild?

[04:58:30.0000] <zcorpan>
i don't see one

[05:00:22.0000] <Ms2ger>
http://w3c-test.org/webapps/DOMCore/tests/submissions/Ms2ger/Node-replaceChild.html if you want more of a test case

[05:00:59.0000] <zcorpan>
thanks! i'll file a bug

[05:01:26.0000] <Ms2ger>
Np

[05:04:52.0000] <annevk>
heh, fun bug

[05:05:27.0000] <zcorpan>
CORE-46726

[05:05:34.0000] <Ms2ger>
Definitely not a failure mode I'd met before

[05:05:37.0000] <Ms2ger>
zcorpan, thanks

[05:08:14.0000] <annevk>
Ms2ger: I've seen it before; don't remember where though

[05:08:27.0000] <Ms2ger>
Probably in Opera :)

[05:08:30.0000] <annevk>
in part it's because we don't have bindings

[05:08:37.0000] <annevk>
Ms2ger: well yeah :)

[05:09:18.0000] <Ms2ger>
You don't have bindings?

[05:10:32.0000] <Ms2ger>
I'm rather surprised how well it works out, then :)

[05:22:08.0000] <annevk>
http://vimeo.com/43380467 is pretty cool

[05:22:15.0000] <annevk>
bit of standards bashing

[05:25:45.0000] <moo-_->
annevk: nice :)

[05:26:17.0000] <Ms2ger>
LaTeX slides?

[05:27:40.0000] <annevk>
what seems somewhat weird to me is that he tells this at a developer's conference

[05:45:04.0000] <jgraham>
Ms2ger: Mozilla don't exactaly have a glorious history of making DOM-via-code-generation (i.e. bindings) work in a standards compliant / performant way :)

[05:46:58.0000] <jgraham>
(or at least, so http://jstenback.wordpress.com/2012/04/07/history-of-mozillas-dom-bindings/ would have you believe)

[05:47:31.0000] <matjas>
in case any of you know:

[05:47:32.0000] <matjas>
“SVG images know their aspect ratio; why don't browsers respect it?” — http://stackoverflow.com/q/10874763/96656

[05:49:18.0000] <gsnedders>
annevk: XSLT sounds a lot like what he wants from CSS.

[05:52:11.0000] <annevk>
heh

[05:55:15.0000] <zcorpan>
matjas: it seems the question boils down to s/browsers/chrome 19/

[05:57:27.0000] <annevk>
matjas: added an answer

[05:57:37.0000] <gsnedders>
zcorpan: Who cares about anything apart from WebKit?

[05:58:03.0000] <matjas>
annevk: thanks!

[05:58:15.0000] <matjas>
gsnedders: wait, is there anything else?

[05:58:23.0000] <matzipan>
gsnedders: sarcasm ?

[05:59:33.0000] <gsnedders>
matjas: What's this Gecko thing? Sounds scary!

[06:00:41.0000] <matzipan>
I don't want lizards in my computer

[06:29:18.0000] <zcorpan>
Hixie: the file-spec-bug thingie in the spec dialog saying that the bug was filed (with a link) often doesn't appear for me (maybe because i switch tabs while it's doing its thing and then decides i don't want to see it anymore, or i dunno)

[06:30:22.0000] <zcorpan>
Hixie: i think you made it fragile and disappear-for-nothing after i complained that i wanted "enter" to dismiss the dialog instead of filing a new bug

[06:30:48.0000] <zcorpan>
Hixie: but i'm afraid you didn't fix what i wanted and instead made it worse :-P

[06:44:13.0000] <Ms2ger>
jgraham, definitely not

[06:45:50.0000] <Ms2ger>
jgraham, but the places where we have to deal with JS values directly tend to end up being rather horrible code

[06:49:15.0000] <smaug____>
Ms2ger: you might remember

[06:49:34.0000] <smaug____>
why would anyone use float in idl

[06:49:39.0000] <smaug____>
and not double

[06:49:49.0000] <smaug____>
/me needs to check how those map to JS Number

[06:50:27.0000] <zcorpan>
because they write IDL targeting the Java binding?

[06:50:40.0000] <smaug____>
this is new stuff

[06:50:45.0000] <smaug____>
certainly for web only

[06:50:47.0000] <smaug____>
Gamepad

[06:50:56.0000] <smaug____>
is there *any* reason to use float

[06:50:58.0000] <Ms2ger>
No idea

[06:51:18.0000] <Ms2ger>
heycam|away, can we just kill float?

[06:51:47.0000] <smaug____>
and this happens again...start reviewing a patch by filing spec bugs first

[06:52:45.0000] <zcorpan>
the html spec switched all floats to doubles some time (few years maybe?) ago, iirc

[07:03:22.0000] <smaug____>
there is no such idl type as string, right?

[07:03:24.0000] <smaug____>
it is DOMString

[07:04:05.0000] <Ms2ger>
Right

[07:27:21.0000] <gsnedders>
Is there some reason we can't just call it "string"?

[07:36:07.0000] <Ms2ger>
gsnedders, objection, I don't want to change all the specs :)

[07:39:29.0000] <odinho>
ssh dvcs.w3.org -e sed -Ri 's/DOMString/string/' *

[07:39:41.0000] <odinho>
:P

[08:15:54.0000] <gsnedders>
Can anyone, from spec, justify what Object.getPrototypeOf(crossOriginWindow) should do?

[08:18:36.0000] <Ms2ger>
Does the spec for Object.getPrototypeOf no longer deny the existence of crossOriginWindow?

[08:28:47.0000] <gsnedders>
Ms2ger: The spec for Object.getPrototypeOf says "return [[Prototype]]", pretty much]

[08:30:32.0000] <gsnedders>
/me checks ES6

[08:35:24.0000] <boaz>
good morning, Whatwg!

[08:37:22.0000] <Ms2ger>
Good morning, boaz

[08:40:24.0000] <gsnedders>
I think per spec you should return the object and then that should be poisoned.

[08:40:32.0000] <gsnedders>
That isn't what ourselves or WebKit do.

[08:40:34.0000] <gsnedders>
Dunno about IE.

[08:50:33.0000] <gsnedders>
So much variation in behaviour.

[08:51:37.0000] <dglazkov>
good morning, Whatwg!

[08:55:34.0000] <Ms2ger>
dglazkov, today, you are not alone

[08:56:06.0000] <dglazkov>
yaaaay!

[09:07:53.0000] <timeless>
matjas: that /timeless/ stuff is confusing :(

[09:08:14.0000] <timeless>
odinho: i hope you realize that wouldn't work right at all :)

[09:45:45.0000] <jgraham>
Must. Not. Use. Sarcasm. On. Mailing. List.

[09:46:33.0000] <WeirdAl>
that's right.  IRC is much, much more forgiving.

[09:46:43.0000] <WeirdAl>
(mainly because we're much, much more forgetting)

[09:46:48.0000] <jgraham>
But seriously, wtf at the coremob people saying "we're having a meeting, there's no agenda, decisions are binding, if you can't come provide input in advance"

[09:47:09.0000] <WeirdAl>
coremob?

[09:47:58.0000] <jgraham>
I mean apart from the fact that they are requiring claivoyance from non-participants, who the fuck still thinks that F2F meetings should have binding decisions

[09:48:53.0000] <Ms2ger>
The WG

[09:49:34.0000] <jgraham>
After all, there's no better way to make a decision than get a small subset of interested parties into a time-constrained situation where they can't digest all the arguments properly and can't change their position on something controversial without losing face.

[09:49:36.0000] <Hixie>
zcorpan: patches welcome

[09:50:35.0000] <Hixie>
jgraham: tell them that's not how it's going to happen (assuming you're the editor... if you're not, not much you can do)

[09:50:41.0000] <timeless>
Ms2ger: the WG doesn't technically exist yet iirc

[09:50:46.0000] <timeless>
or does it

[09:50:55.0000] <timeless>
/me can't remember which WGs have had their charters' approved

[09:50:58.0000] <Ms2ger>
timeless, I meant CSS

[09:50:59.0000] <Hixie>
short of not implementing it

[09:51:11.0000] <jgraham>
Hixie: I'm not and there's not. Which is why I have resorted to ineffectual whining here

[09:51:21.0000] <Hixie>
heh

[09:51:25.0000] <Hixie>
which wg is this?

[09:51:30.0000] <timeless>
coremob

[09:51:38.0000] <Hixie>
what is "coremob"

[09:51:40.0000] <timeless>
it's totally unclear what it will do anyway

[09:51:43.0000] <Hixie>
sounds like a gang or something

[09:51:53.0000] <jgraham>
timeless: Maybe that's what they will decide

[09:51:56.0000] <timeless>
i think the best possible outcome is that it writes test cases for other wg's specs

[09:52:04.0000] <Ms2ger>
"Anti-device-independent-web"

[09:52:09.0000] <timeless>
jgraham: dunno, i haven't gotten around to asking my manager if i should go

[09:52:16.0000] <timeless>
at one point i assumed i would go

[09:52:23.0000] <jgraham>
Ms2ger: I think that mnight be unfair

[09:52:27.0000] <Hixie>
oh, a mobile-web wg? in that case it's great news that it's dysfunctional :-)

[09:53:03.0000] <timeless>
Ms2ger: don't forget the sysapps wg (charter not finalized)

[09:53:12.0000] <jgraham>
Hixie: I like to think of it as "an interoperability-increaing oppertunity that just happens to be riding on the fashion for the word 'mobile'"

[09:53:20.0000] <timeless>
if you want the anti-device-independent-web, i think sysapps is a better place for you :)

[09:53:29.0000] <timeless>
coremob is more like "let's standardize webkit"

[09:53:32.0000] <WeirdAl>
/me waves to his old friend

[09:54:00.0000] <Ms2ger>
timeless, well, that or my friends at Mozilla

[09:54:14.0000] <timeless>
hi

[09:54:17.0000] <jgraham>
Yeah, "let's standardise WebKit" is certianly the dark side of the path it could take

[09:54:30.0000] <timeless>
technically the path is more like

[09:54:37.0000] <timeless>
"let's write tests for webkit specific features"

[09:54:47.0000] <timeless>
... as an end result, everyone will have to implement them to pass the tests

[09:54:56.0000] <timeless>
it isn't technically "let's standardize webkit"

[09:55:00.0000] <timeless>
but the distinction isn't significant

[09:55:22.0000] <Hixie>
how frightening

[09:55:39.0000] <timeless>
Hixie: i'm not sure that coremob is the scariest nascent group out there

[09:55:46.0000] <timeless>
sysapps could be significantly scarier

[09:56:09.0000] <timeless>
it's basically asking most UAs to implement a non-web security model

[09:56:30.0000] <timeless>
and note, it

[09:56:39.0000] <timeless>
's possible for coremob to be useful and helpful to the web

[09:56:53.0000] <timeless>
... IFF it spends its time writing missing test cases for other w3 specs

[09:57:23.0000] <Hixie>
does sysapps have any UA vendors in it?

[09:57:23.0000] <jgraham>
I'm pretty sure that the coremob stuff will end up setting some aspirational goals for UAs like "implement spec X before spec Y" and, perhaps, might get some more people writing tests

[09:57:35.0000] <TabAtkins>
If so, they're not doing their jobs...

[09:57:36.0000] <jgraham>
sysapps is Mozilla driven, I think

[09:57:40.0000] <timeless>
Hixie: oddly, yes

[09:57:44.0000] <Hixie>
christ

[09:57:46.0000] <timeless>
it has mozilla and chrome at least

[09:57:53.0000] <timeless>
that's what makes it scary

[09:58:31.0000] <timeless>
/me wonders how Hixie has missed it

[09:58:45.0000] <Hixie>
how would i have known about it? :-)

[09:58:48.0000] <timeless>
(well, ok, you were being productive instead of spending your time worrying about uncertain doom)

[09:58:58.0000] <TabAtkins>
timeless: Do you know if it's actually Chrome, or just Google that's on it?

[09:59:18.0000] <timeless>
TabAtkins: it isn't the Android-Browser if that's what you're asking

[09:59:23.0000] <Ms2ger>
timeless, productive or on holiday ;)

[09:59:26.0000] <timeless>
it seems to be either Chrome-OS or Chrome-Android

[10:00:05.0000] <timeless>
Hixie: http://www.w3.org/2012/05/sysapps-wg-charter.html

[10:00:09.0000] <timeless>
i'm not sure if that's current

[10:00:14.0000] <timeless>
they revised it recently

[10:00:48.0000] <Hixie>
oh

[10:00:49.0000] <Hixie>
well

[10:00:51.0000] <Hixie>
that's doomed

[10:00:54.0000] <timeless>
TabAtkins: and it seems that certain other webkit groups don't object to adjusting the security model of webkit

[10:01:05.0000] <timeless>
Hixie: i wish i had your confidence in that

[10:01:24.0000] <Hixie>
trying to define a spec that competes with native OS apps is a non-starter

[10:01:25.0000] <timeless>
/me is actually more afraid of B2G than Chrome-OS/Chrome-Android

[10:01:35.0000] <Ms2ger>
Hixie, did you hear about B2G?

[10:01:46.0000] <Hixie>
b2g is fine so long as it's proprietary

[10:01:54.0000] <timeless>
Hixie: native-os api's are more or less going out the window

[10:02:05.0000] <timeless>
Hixie: B2G is one of the groups trying to drive sys-apps

[10:02:12.0000] <Hixie>
it takes all the worst thins of apps (installation, security nightmare, etc), and combines them with the worst things of the web (slow development, crappy APIs, etc)

[10:02:16.0000] <timeless>
they don't want to "be proprietary"

[10:02:38.0000] <timeless>
because they want to borrow apps written for other "devices"

[10:02:58.0000] <timeless>
note: i'm not endorsing this stuff,

[10:03:01.0000] <Hixie>
a non-proprietary platform will be unable to compete with a proprietary platform so long as it tries to play the same game

[10:03:10.0000] <timeless>
i'm just more afraid of it being partially successful than you are confident in it not being so

[10:03:29.0000] <timeless>
Hixie: btw, would you classify Android as proprietary?

[10:03:36.0000] <Hixie>
i should say, i don't think they'll fail to write specs and waste lots of engineer time implementing it

[10:03:41.0000] <timeless>
/me really hasn't considered that question in a while

[10:03:41.0000] <Hixie>
i just think it'll fail in the market

[10:03:57.0000] <Hixie>
timeless: yeah. i should really say one-vendor-driven, not proprietary. the word is a bit ambiguous in cases like this.

[10:04:14.0000] <timeless>
Hixie: right

[10:04:23.0000] <timeless>
so the question is, if it's 2 vendor driven instead of 1 vendor driven

[10:04:29.0000] <timeless>
does that make things better or worse?

[10:04:35.0000] <timeless>
(anyone here remember MeeGo?)

[10:04:37.0000] <Hixie>
it makes them slower

[10:04:39.0000] <timeless>
(that was 2 vendor driven)

[10:04:46.0000] <Hixie>
which makes it impossible for it to compete with native OSes

[10:04:51.0000] <Hixie>
at least while they're playing the same game

[10:05:39.0000] <gsnedders>
Hixie: Surely the point is to be cross-platform, so complete in the sense that Qt does?

[10:05:58.0000] <gsnedders>
Which, sure, isn't exactly rivaling native APIs, but still is significant

[10:06:34.0000] <Hixie>
Qt is single-vendor, and i would still not characterise it as a success in this space

[10:08:22.0000] <timeless>
Qt is an odd duck

[10:08:41.0000] <timeless>
there was a time when it made a lot of sense and could have done well

[10:08:49.0000] <timeless>
but at this point it's implementing stuff over a decade late

[10:08:58.0000] <timeless>
(see VB/Delphi)

[10:09:22.0000] <Hixie>
ahh, delphi

[10:09:47.0000] <Hixie>
/me has recently taken to writing all his server-side code in freepascal, which is a free implementation of a superset of delphi

[10:09:59.0000] <Hixie>
so nice

[10:10:19.0000] <TabAtkins>
So weird.

[10:10:59.0000] <Hixie>
there's only really two things about it that i would say are weird, which is really orders of magnitude better than most other platforms

[10:11:07.0000] <Hixie>
(a) strings are 1-indexed for historical reasons :-/

[10:11:34.0000] <Hixie>
and (b) the support for generics is a bit wonky in its current implementation, e.g. it fails when combined with structured types with overloaded operators

[10:11:51.0000] <Hixie>
(i've run into (b) more often than i'd like)

[10:12:04.0000] <Hixie>
(you get used to (a) pretty quickly and there's language features to hide it anyway)

[10:12:11.0000] <timeless>
Hixie: does freepascal have the VCL?

[10:12:20.0000] <Hixie>
yeah, a reimplementation called the FCL

[10:12:24.0000] <Hixie>
i don't generally use it

[10:12:25.0000] <timeless>
wow

[10:12:34.0000] <Hixie>
since i'm making server-side software, not guis

[10:12:35.0000] <timeless>
yeah, it only makes sense if you're doing desktop gui

[10:12:38.0000] <timeless>
right

[10:12:42.0000] <Hixie>
also has a reimplementation of TurboVision

[10:12:53.0000] <Hixie>
cross-platform, in both cases

[10:12:55.0000] <timeless>
i've been using CherryPy to write an HTML app

[10:13:04.0000] <Ms2ger>
Back in my day, I used Borland Pascal

[10:13:17.0000] <moo-_->
Turbo Pascal FTW

[10:13:18.0000] <timeless>
Ms2ger: Borland Pascal or Turbo Pascal?

[10:13:25.0000] <timeless>
and have you seen Quick Pascal?

[10:13:29.0000] <Ms2ger>
Borland, and no

[10:13:50.0000] <timeless>
http://en.wikipedia.org/wiki/Microsoft_Pascal

[10:14:09.0000] <timeless>
how about Turbo Basic? :)

[10:14:21.0000] <timeless>
http://en.wikipedia.org/wiki/Turbo_Basic

[10:14:22.0000] <moo-_->
timeless: microsoft had a Quick Basic which was a commercial version of QBasic

[10:14:25.0000] <Ms2ger>
(The next year my school moved to JS)

[10:14:25.0000] <moo-_->
creating .exes

[10:14:32.0000] <timeless>
moo-_-: yeah, i used it

[10:14:35.0000] <timeless>
a friend of mine owned it

[10:14:56.0000] <timeless>
Ms2ger: i used Turbo Pascal in 10th grade for AP CS

[10:14:59.0000] <moo-_->
now, one needs to write qbasic interpreter in JS...

[10:15:06.0000] <timeless>
the next year they switched to C++ iirc

[10:15:36.0000] <Hixie>
wow, turbo basic was a compiler, not an interpreter

[10:16:03.0000] <timeless>
i think i used it when it was powerbasic (much later)

[10:16:46.0000] <timeless>
Hixie: i'm not sure that's a proper interpretation

[10:16:50.0000] <timeless>
it /had/ a compiler

[10:16:57.0000] <timeless>
"The integrated development environment could run a BASIC program internally for traditional BASIC debugging (see sample below),"

[10:17:08.0000] <Hixie>
that's what i meant, yes

[10:17:16.0000] <Hixie>
sorry

[10:17:36.0000] <timeless>
sorry to be picky :)

[10:17:50.0000] <Hixie>
hey if one can't be a pedant in #whatwg, where can one be a pedant

[10:18:06.0000] <Hixie>
this is like the capital of pedant country

[10:18:39.0000] <timeless>
oh good, i knew there was a reason i felt so at home here :)

[10:18:51.0000] <Ms2ger>
!summon MikeSmith

[10:20:33.0000] <annevk>
Ms2ger: just talk to [tm]

[10:21:04.0000] <Ms2ger>
[tm], http://dvcs.w3.org/hg/fullscreen/raw-file/tip/Overview.html has issues

[10:21:22.0000] <annevk>
whoa what happened there?

[10:21:43.0000] <jernoble>
the mime type probably changed

[10:21:46.0000] <Ms2ger>
Yeah

[10:22:03.0000] <annevk>
weird that it would only affect Fullscreen

[10:22:10.0000] <jernoble>
Content-Type: application/binary

[10:22:16.0000] <annevk>
oh it doesn't

[10:22:24.0000] <annevk>
cannot load the URL spec either

[10:22:35.0000] <annevk>
or DOM

[10:22:42.0000] <annevk>
grmbl

[10:22:48.0000] <timeless>
	

[10:22:49.0000] <timeless>
Content-Type:	application/binary

[10:22:51.0000] <annevk>
shepazu: ^^

[10:22:52.0000] <TabAtkins>
CSS specs are okay.

[10:22:57.0000] <timeless>
according to http://web-sniffer.net/

[10:23:22.0000] <timeless>
oh

[10:23:28.0000] <timeless>
that's probably a Hg upgrade

[10:23:39.0000] <shepazu>
annevk: sorry, what are you pointing at?

[10:23:40.0000] <timeless>
there's a risk of hg repos being used to run arbitrary code

[10:23:54.0000] <timeless>
so you have to tell hg's web server you're ok w/ hosting html

[10:23:56.0000] <shepazu>
I don't know anything about QBasic

[10:23:56.0000] <timeless>
otherwise...

[10:24:01.0000] <annevk>
shepazu: loading http://dvcs.w3.org/hg/domcore/raw-file/tip/Overview.html or http://dvcs.w3.org/hg/fullscreen/raw-file/tip/Overview.html no longer works

[10:24:07.0000] <shepazu>
wtf?

[10:24:14.0000] <timeless>
=> annevk

[10:24:16.0000] <[tm]>
Ms2ger: I'm on a smoke break

[10:24:17.0000] <annevk>
shepazu: MIME type changed on the server

[10:24:20.0000] <shepazu>
thanks, annevk, I'll pass that on

[10:24:25.0000] <shepazu>
d'oh.

[10:24:40.0000] <timeless>
annevk: not technically on the server ^^

[10:24:42.0000] <Ms2ger>
[tm], we've got smart people on it, thanks anyway ;)

[10:25:00.0000] <Hixie>
/me tries to debug some random web page and finds himself deep in a maze of twisty <div>s, all alike

[10:25:01.0000] <annevk>
timeless: pedant

[10:25:01.0000] <shepazu>
Ms2ger: no, I'm handling it

[10:25:07.0000] <annevk>
lol

[10:25:09.0000] <timeless>
http://selenic.com/repo/hg/rev/d06b9c55ddab

[10:25:22.0000] <timeless>
annevk: it matters because it affects where the fix is

[10:25:23.0000] <Ms2ger>
shepazu, every now and then, I try to be nice to you ;)

[10:25:39.0000] <timeless>
shepazu: guessmime is what you'll need in /etc/hgrc or whatever

[10:25:46.0000] <timeless>
[web]

[10:25:50.0000] <timeless>
guessmime=True

[10:26:49.0000] <timeless>
shepazu: ^ adding that section+line should fix it

[10:29:01.0000] <shepazu>
timeless, annevk, our crack team is dealing with it

[10:29:10.0000] <timeless>
shepazu: shrug

[10:29:17.0000] <timeless>
if you pass along what i suggested it'll save them time

[10:29:37.0000] <shepazu>
so… it might be a while, until they can afford a really primo rock

[10:29:40.0000] <timeless>
and thanks for pinging someone :)

[10:29:58.0000] <shepazu>
timeless: I did pass on your suggestion, thanks! :)

[10:30:08.0000] <timeless>
:)

[10:30:12.0000] <shepazu>
hopefully that will be quick

[10:30:44.0000] <annevk>
thank you!

[10:32:40.0000] <shepazu>
annevk, timeless, should be fine now… we updated to mercurial 1.8.something this morning, this used to be the default behavior, says our crack team

[10:32:57.0000] <timeless>
correct

[10:33:20.0000] <timeless>
the behavior was changed because it was deemed insecure for groups that weren't aware of it

[10:33:30.0000] <annevk>
shepazu: fine it is :)

[10:33:36.0000] <timeless>
for specific groups that wanted the feature, the flag was added

[10:33:53.0000] <shepazu>
cool, sorry for the inconvenience, and thanks for the help

[10:47:34.0000] <Ms2ger>
https://www.w3.org/Bugs/Public/show_bug.cgi?id=17302

[10:58:04.0000] <timeless>
cute

[10:58:58.0000] <Hixie>
TabAtkins: technically we _did_ "merge", twice so far, once with the htmlwg and once with a cg. :-)

[11:02:46.0000] <timeless>
heh

[11:03:10.0000] <TabAtkins>
Hixie: Humor cares nothing for your facts.

[11:03:22.0000] <Hixie>
hah

[11:04:13.0000] <TabAtkins>
Btw, how's the CG thing working? When can I stop telling people that we care about the HTMLWG just because they offer a patent policy?

[11:05:10.0000] <Hixie>
i should do a FSA publication soon

[11:06:22.0000] <timeless>
fsa?

[11:06:35.0000] <Hixie>
"Final" Specification Agreement

[11:07:39.0000] <Hixie>
the patent-policy version of CG publication

[11:11:16.0000] <timeless>
/me ponders kanji and friends

[11:19:35.0000] <Ms2ger>
"My computer is old and slow. I got a message on the internet I should switch to standard  HTML version. Please advise."

[11:20:03.0000] <Ms2ger>
/me closes the bug before TabAtkins humours it

[11:25:11.0000] <TabAtkins>
Why you do this, Ms2ger? Why you hate humor?

[11:25:36.0000] <Ms2ger>
Yes

[11:25:39.0000] <Ms2ger>
I prefer humour

[11:25:57.0000] <TabAtkins>
I can Brit up my humor, give the people a u if they want.

[11:26:03.0000] <TabAtkins>
Make some jokes about the queen.

[11:29:22.0000] <Philip`>
TabAtkins: Only if you want to end up in the Tower

[11:57:56.0000] <Velmont>
MikeSmith: Yo, there? w3c-test.org doesn't seem to have the latest and greatest /resources/.

[11:58:46.0000] <Velmont>
MikeSmith: Oh fsck. I didn't commit that yet, no. Stupid. Heh.

[11:58:55.0000] <gsnedders>
/me slow-claps Velmont 

[11:59:05.0000] <Velmont>
:-S

[11:59:42.0000] <Velmont>
gsnedders: Can you review then, since you're here and acting all cool and all?

[11:59:51.0000] <Velmont>
https://github.com/w3c/testharness.js/pull/1

[12:00:04.0000] <gsnedders>
No.

[12:00:21.0000] <Velmont>
Hmm. Though, Ms2ger didn't seem to have any more comments. So maybe I can just push it in there... Hmmz.

[12:00:38.0000] <Velmont>
jgraham: <make noise>

[12:00:50.0000] <gsnedders>
Mainly because I'm about to head out :)

[12:01:04.0000] <Velmont>
gsnedders: Tss, life, it's all a lie!

[12:01:37.0000] <gsnedders>
But I can a fulfill my purpose in life, to impregnate a couple of girls otherwise?

[12:02:06.0000] <Velmont>
gsnedders: lol, that's so nasty. You shouldn't say stuff like that, boy!

[12:02:09.0000] <Ms2ger>
Velmont, land it

[12:02:19.0000] <Ms2ger>
Velmont, he can do that, he's Scottish

[12:02:49.0000] <gsnedders>
Ms2ger: Aye dinnae no wha' yir oon aboot.

[12:02:59.0000] <Velmont>
/me installing Mercurial and hunts for his W3C-password

[12:35:28.0000] <timeless>
annevk: thanks for complaining about that hg issue

[12:35:38.0000] <timeless>
that explains why my Chrome had a bunch of "index.html" files to save

[13:17:14.0000] <Velmont>
18:09 < timeless> odinho: i hope you realize that wouldn't work right at all :) <--- way to spoil all the fun!!1

[13:17:38.0000] <Velmont>
But, yes, I know... It was highly pseudoish code :P   (16:41 < odinho> ssh dvcs.w3.org -e sed -Ri 's/DOMString/string/' *)

[13:17:59.0000] <timeless>
Velmont: specifically dvcs repos can easily be corrupted by people doing stupid things like that

[16:54:55.0000] <TabAtkins>
If a script runs before you and overrides one of the window builtins, there's no way to get a copy of the original, right?

[16:55:23.0000] <TabAtkins>
Say the script preempting you is an extension that runs on all pages, so you can't do something like create an iframe and yank it off of there.

[16:56:25.0000] <jamesr>
there's no general way in the web platform to  hack around a browser's extension system


2012-06-05
[17:02:23.0000] <TabAtkins>
I wonder if it would be useful to provide a readonly copy of all the builtins, for cases like this.

[17:02:50.0000] <Hixie>
for the purposes of a web page, extensions change the builtins

[17:03:06.0000] <TabAtkins>
Yeah, that's a nice theory.

[17:03:16.0000] <jamesr>
whoever's providing the extension could provide a "backup" of equal power

[17:03:23.0000] <jamesr>
but that's up to the relevant extension system, not the platform itself

[17:03:29.0000] <TabAtkins>
It doesn't work well in practice when, as far as I can tell, an extension is overwriting a builtin unintentionally.

[17:03:53.0000] <TabAtkins>
But anyway, yeah, the extension system itself could provide this backup copy.

[17:03:55.0000] <zewt>
TabAtkins: well, if you really want to prevent access to the original and wrap all calls, having the originals around would be unwanted

[17:04:16.0000] <zewt>
right, typically if you're changing or monkey patching an interface (in any language), it's up to you to expose the original if you want to

[17:07:28.0000] <Hixie>
yeah, generally speaking, the extension shouldn't be doing anything that would need this... unfortunately...

[18:18:37.0000] <tantek>
curious if folks saw this: https://groups.google.com/forum/?fromgroups#!topic/mozilla.dev.platform/itl6mtx2dxI (re: CSS vendor prefixes) and if they had any thoughts.

[18:19:39.0000] <tantek>
I there are some good forward steps we (browser vendors/implementors) can take in the short / near term and I'm curious what other folks here think of the specifics.

[22:45:53.0000] <zcorpan>
Hixie: you got the arguments backwards in step 1 of "element"

[22:47:58.0000] <zcorpan>
/me doesn't like svg: and math:

[22:51:32.0000] <MikeSmith>
yay some postmsg tests

[00:28:10.0000] <hsivonen>
jgraham: I might have missed the point of bug 17231

[01:00:22.0000] <annevk>
hsivonen: objections if I shorten the headings on the bad ideas page? "Turing-complete CSS" "Standardized byte code language"

[01:02:47.0000] <jgraham>
hsivonen: I think the point of the bug is more or less what Hixie said in the first paragraph of comment 4 (apologies; it seems that my description was very unclear).

[01:03:38.0000] <jgraham>
That is, given some code that restarts the parser from within the load event handler, it seems a second load event is not created.

[01:03:52.0000] <jgraham>
well "queued" I guess

[01:58:23.0000] <AryehGregor>
tantek, I just saw that and responded supportively.

[01:58:38.0000] <tantek>
Thanks AyrehGregor

[02:32:30.0000] <hsivonen>
annevk: no objections

[02:33:26.0000] <hsivonen>
jgraham: ok. then I think I'm not missing the point of bug 17231.

[02:34:02.0000] <annevk>
k done

[02:39:15.0000] <hsivonen>
I'm not sure if it belongs on the Bad Ideas page, but we need a similar FAQ that explains what CORS protects against and why the CORS-dependent stuff isn't allowed without CORS

[02:39:44.0000] <hsivonen>
formulating it as a Bad Idea would be Cross-Origin Loads without CORS

[02:45:14.0000] <hsivonen>
What's the current timing attack defense story for CSS Shaders?

[02:50:27.0000] <annevk>
I wonder if obvious bad ideas need to be documented too

[02:51:14.0000] <asmodai>
annevk: btw, saw the frontpage cookie warning on e.g. http://www.fok.nl/ ?

[02:52:31.0000] <annevk>
asmodai: never seen such a thing before

[02:52:40.0000] <annevk>
asmodai: looks quite insane

[02:52:43.0000] <asmodai>
Due to the new telecomwet

[02:53:17.0000] <zcorpan>
annevk: example of obvious bad idea?

[02:53:29.0000] <annevk>
zcorpan: namespaces

[02:54:54.0000] <annevk>
zcorpan: XML-based formats

[02:55:17.0000] <annevk>
(in the context of the web platform anyway)

[03:01:08.0000] <hsivonen>
annevk: removing Namespaces from SVG

[03:02:17.0000] <hsivonen>
Fixing something that's bad by putting the fix behind a document-global mode switch

[03:02:38.0000] <annevk>
let me put those on the talk page

[03:02:46.0000] <annevk>
ah nah

[03:02:50.0000] <annevk>
i'll put them at the end

[03:07:21.0000] <annevk>
weird URL stuff...

[03:12:12.0000] <annevk>
http://www。google。com

[03:12:17.0000] <annevk>
that works in the address bar

[03:12:21.0000] <annevk>
in some browsers

[03:12:26.0000] <annevk>
but not in APIs

[03:31:35.0000] <MikeSmith>
jgraham: auto push to https://github.com/w3c/testharness.js is working now

[03:53:23.0000] <jgraham>
MikeSmith: Awesome!

[03:54:07.0000] <asmodai>
annevk: btw

[03:54:27.0000] <asmodai>
annevk: wrt MathML wiki page, would equation examples with current rendering across browsers be useful?

[04:00:14.0000] <odinho>
man3

[04:00:37.0000] <odinho>
Meh

[04:01:00.0000] <Ms2ger>
hunter2

[04:01:10.0000] <odinho>
******

[04:01:15.0000] <odinho>
fsck, too short :P

[04:04:36.0000] <annevk>
asmodai: writing tests and pointing to those is probably more useful

[04:04:48.0000] <annevk>
asmodai: if you want browsers to fix their bugs that is :)

[04:04:55.0000] <Ms2ger>
Who wants that :)

[04:05:14.0000] <Ms2ger>
Did people see http://testthewebforward.org/, btw?

[04:07:21.0000] <odinho>
That was kinda CSS heavy. (and adobe/webkit heavy as well :P)

[04:07:31.0000] <Ms2ger>
Yeah

[04:07:45.0000] <annevk>
but you know

[04:07:46.0000] <annevk>
http://testsuite.org/

[04:08:08.0000] <odinho>
annevk: Yeah. I just wanted to be there, that's all :P

[04:08:23.0000] <Ms2ger>
odinho, maybe you should apply ;)

[04:08:25.0000] <odinho>
I'm all like, wtf where's Opera.

[04:08:45.0000] <odinho>
Ms2ger: Nah, too much hassle for too little. -- Had it been in Europe maybe.

[04:09:20.0000] <odinho>
It won't help anything for me to be there, -- I will just go around hassling people with either questions or well-meant guidance :P

[04:09:25.0000] <Ms2ger>
Maybe you should set something up :)

[04:10:31.0000] <odinho>
Ms2ger: Yeah, -- Test the Web Forward, Oslo event, in Odin's new apartment. :]

[04:10:46.0000] <odinho>
Actually, why not. Maybe I should try to do it.  Just not in my apartment but a real place.

[04:17:09.0000] <asmodai>
annevk: Gotcha

[04:18:29.0000] <Ms2ger>
/me frowns

[04:21:52.0000] <david_carlisle>
annevk: it wasn't clear to me that rendering tests fitted anywhere in the html test suite? Which seems to mainly want automated testing.

[04:22:55.0000] <gsnedders>
david_carlisle: Well, reftests are still automated tests

[04:24:28.0000] <hsivonen>
If Adobe can get people to write tests, that's cool.

[04:25:39.0000] <gsnedders>
Only a single Mozilla person, and no Opera people.

[04:25:56.0000] <david_carlisle>
gsnedders: Maybe I should read that reftest stuff again,, when I looked before it wasn't clear how to do a reftest for mathml either.  If we can figure out a format that works for the html test suite, we should be able to generate fairly could coverage tests by converting existing tests.

[04:26:16.0000] <david_carlisle>
s/could/good

[04:30:19.0000] <Ms2ger>
david_carlisle, fwiw, Mozilla's got a number of MathML reftests at http://mxr.mozilla.org/mozilla-central/source/layout/reftests/mathml/

[04:30:38.0000] <odinho>
gsnedders: It's California. -- At least Moz should be able to have lots of people. But yea, seems they don't get around much, we were 10 minutes taxi from Mozilla HQ, and there was more people from Opera than Moz at the Mountain View F2F :P

[04:30:44.0000] <david_carlisle>
gsnedders:  MathML doesn't have so many equivalent expressions. My understanding of reftest is you give two variants and check that they produce the same result. The only way to get a fraction is to use mfrac.

[04:30:53.0000] <david_carlisle>
Ms2ger:  ah will look, thanks

[04:31:51.0000] <Ms2ger>
Hmm, I even wrote some of those

[04:35:34.0000] <annevk>
so I found http://tools.ietf.org/html/rfc5895#section-2

[04:35:43.0000] <annevk>
euh, someone told me about that

[04:35:55.0000] <annevk>
but that seems woeful if we are to use that for <a> and such :/

[04:36:36.0000] <Ms2ger>
1. 2. 3. 4. Note that the steps above are ordered.

[04:36:41.0000] <Ms2ger>
Oh really

[04:38:12.0000] <Ms2ger>
annevk, http://dvcs.w3.org/hg/domcore/raw-file/tip/Overview.html#concept-node-replace

[04:38:14.0000] <AryehGregor>
/me notes that section 3 says not to use section 2 as-is

[04:38:34.0000] <Ms2ger>
step 8 seems redundant with the adoption in step 7

[04:39:29.0000] <Ms2ger>
Nvm me

[04:40:39.0000] <jgraham>
There is a correlation between testthewebforward being CSS heavy and there not being anyone from Opera there; if it had been more javascript focused I would have tried to get travel approval

[04:41:10.0000] <odinho>
jgraham: lazy jgraham is lazy(?)

[04:41:19.0000] <Ms2ger>
jgraham, CSSOM? :)

[04:41:22.0000] <gsnedders>
I probably would've tried to go if I wasn't moving flat. :)

[04:41:37.0000] <gsnedders>
But AFAIK we weren't invited at all.

[04:41:38.0000] <jgraham>
odinho: Not lazy. I don't think I would be the right person to talk about testing CSS

[04:42:01.0000] <jgraham>
I would rather save our time/money and attend a future event with more javascript focus

[04:42:02.0000] <odinho>
jgraham: ... AH, I totally misread that.

[04:42:34.0000] <odinho>
jgraham: I thought it was CSS heavy BECAUSE you were not there :P

[04:42:50.0000] <jgraham>
No :)

[04:43:02.0000] <odinho>
Made a whole lotta sense in my head.

[04:43:26.0000] <jgraham>
CSS focused because that's what Adobe wanted to concentrate on first

[04:43:30.0000] <Ms2ger>
/me looks for a doctor around where odinho lives

[04:43:58.0000] <annevk>
gsnedders: reportedly we had an invite, but the ball might have been dropped somewhere by it not being directed to the right people

[04:44:05.0000] <jgraham>
I think there is potential for followup events that are more markup/script centred

[04:44:21.0000] <gsnedders>
annevk: I heard otherwise. Oh well. Maybe that just says something about our communication skills.

[04:44:22.0000] <odinho>
Ms2ger: annevk is 2 offices down, I should be okay.

[04:44:40.0000] <jgraham>
Invited to what?

[04:44:59.0000] <jgraham>
testthewebforward?

[04:45:02.0000] <annevk>
yes

[04:45:06.0000] <jgraham>
We were invited

[04:45:12.0000] <Ms2ger>
odinho, or, well, Dr. jgraham

[04:45:26.0000] <odinho>
Ms2ger: He's in Lkpg or some place in Sweden.

[04:45:45.0000] <Ms2ger>
How silly of him

[04:45:51.0000] <odinho>
Yes, I think so too.

[04:46:03.0000] <jgraham>
I've been to Oslo; it's not that great :p

[04:46:31.0000] <odinho>
jgraham: Hey! We're getting new office on monday.

[04:47:13.0000] <jgraham>
odinho: Not sure it will make Oslo great :) Also it will mean that no one can find the office because it isn't anywhere near the city centre anymore

[04:47:15.0000] <Ms2ger>
... because the bricks of the previous one were crumbling?

[04:47:21.0000] <annevk>
jgraham: you underestimate the density of bacon-cheese burger restaurants

[04:47:43.0000] <jgraham>
annevk: Pretty sure you have only ever been to 3 resturants in Oslo :)

[04:47:48.0000] <annevk>
jgraham: actually, the new office is way easier to get to from Oslo S

[04:47:54.0000] <annevk>
jgraham: lies

[04:47:58.0000] <Ms2ger>
4!

[04:48:17.0000] <annevk>
Ms2ger: if you mean 4 factorial, that might be about right :p

[04:48:36.0000] <Ms2ger>
Hey, you're not qualified to make math jokes ;)

[04:49:05.0000] <jgraham>
(I recommend Lofoten btw. No bacon cheeseburger of course, but very nice fish)

[04:49:34.0000] <odinho>
jgraham: That's the only thing you'll get as well...

[04:50:33.0000] <jgraham>
odinho: That sounded like a complaint

[04:51:43.0000] <Ms2ger>
http://25.media.tumblr.com/tumblr_m4whxo6EaE1rrju89o1_500.jpg

[04:54:41.0000] <jgraham>
Having said all of that, if there are any web developers reading who can make it to test the web forward, I highly recommend that you attend

[04:55:17.0000] <jgraham>
Two days where you will learn how to make a real improvement to the web platform

[04:55:57.0000] <niloy>
okay!

[04:56:32.0000] <gsnedders>
I could just be really cynical and question how much people actually try and fix bugs that show up in spec testsuites.

[04:57:07.0000] <jgraham>
You could, but it would seem to be misplaces cynicism

[04:57:20.0000] <Ms2ger>
gsnedders, here's one :)

[04:57:59.0000] <Philip`>
Is "Test the Web Forward" part of a series that will include "Test the Web Backward" and "Test the Web by Picking Random Sections and Following All the Cross-References"?

[04:58:45.0000] <jgraham>
Personally, I only do the last part :)

[04:58:45.0000] <Ms2ger>
Philip`!

[05:01:09.0000] <jgraham>
Speaking of which

[05:02:20.0000] <jgraham>
hsivonen: So, I don't understand your comment in bug 17231. AFAICT in gecko if you document.open/document.close from in a load event, you will end up with no second load event firing and the document in an "interactive" readystate.

[05:05:51.0000] <jgraham>
http://software.hixie.ch/utilities/js/live-dom-viewer/saved/1562

[05:06:39.0000] <hsivonen>
jgraham: ooh. I was missing the point, then

[05:07:09.0000] <jgraham>
In WebKit you end up in a "complete" readyState

[05:07:46.0000] <jgraham>
Although it doesn't seem to like the live dom viewer much

[05:12:58.0000] <hsivonen>
do zip/jar files include a creation time stamp or something?

[05:13:30.0000] <hsivonen>
I have a Maven build process that builds a jar, signs it, builds the jar again, ends up with a jar with the same number of bytes but the signature got invalidated

[05:13:46.0000] <hsivonen>
(I have no idea why the jar gets rebuilt after signing)

[05:14:05.0000] <hsivonen>
the two jar files expand to identical sets of files

[05:15:21.0000] <Philip`>
Maybe the timestamps of the files in META-INF differ?

[05:15:32.0000] <hsivonen>
Philip`: could be

[05:15:35.0000] <Ms2ger>
Philip`!

[05:16:16.0000] <jgraham>
Why does Ms2ger keep trying to compute Philip`-factorial?

[05:16:17.0000] <Philip`>
(I don't believe zips store any dates other than the mtimes of files)

[05:23:36.0000] <smaug____>
so, when and why have people started to use word "polyfill"

[05:24:26.0000] <gsnedders>
Somebody used it in a talk. It became hip and cool.

[05:25:48.0000] <jgraham>
They use it because the mental image of the web being like some shoddy DIY work feels comfortingly accurate.

[05:26:25.0000] <hsivonen>
smaug____: http://remysharp.com/2010/10/08/what-is-a-polyfill/

[05:26:32.0000] <smaug____>
/me is not hip nor cool and doesn't like the word :)

[05:26:58.0000] <hsivonen>
smaug____: FWIW, Polyfilla is available in Finland under the same name as in the U.K.

[05:27:42.0000] <Ms2ger>
gsnedders, so, that bug in Opera about "foo" in localStorage always being true...

[05:28:06.0000] <hsivonen>
this kind of Maven WTF makes me feel I made the right choice when I didn't try to build all of Validator.nu using Maven

[05:28:29.0000] <hsivonen>
supposedly time-saving tool is a huge time sink when sorting out WTF it did

[05:28:32.0000] <gsnedders>
Ms2ger: Yes?

[05:28:43.0000] <Ms2ger>
Is someone going to fix that? :)

[05:31:18.0000] <gsnedders>
Ms2ger: Eventually. Rather major host object API limitation leading to it.

[05:31:30.0000] <Ms2ger>
Mm

[05:32:40.0000] <Ms2ger>
Glad to see you guys have the same issues as we do :)

[05:34:39.0000] <gsnedders>
Ms2ger: Any other bugs you want to nag me about? :P

[05:34:54.0000] <Ms2ger>
All of them ;)

[05:35:15.0000] <gsnedders>
Ms2ger: Well some are fixed, and some aren't.

[05:35:40.0000] <Ms2ger>
Actually, yes

[05:35:42.0000] <Ms2ger>
localStorage["age"] = null;

[05:36:06.0000] <gsnedders>
What about it?

[05:36:20.0000] <Ms2ger>
It sets localStorage["age"] to "", not "null"

[05:37:21.0000] <gsnedders>
/me finds a bug from Ms2ger saying that

[05:37:45.0000] <Ms2ger>
:)

[05:38:20.0000] <zcorpan>
Ms2ger: see https://www.w3.org/Bugs/Public/show_bug.cgi?id=17283

[05:39:11.0000] <Ms2ger>
zcorpan, where you.. Agree with me?

[05:39:28.0000] <zcorpan>
Ms2ger: sure thing

[05:39:35.0000] <Ms2ger>
\o/

[05:39:54.0000] <gsnedders>
/me adds Ms2ger of list of people to stalk

[05:40:07.0000] <zcorpan>
although i don't know what you think about the proposal in that bug wrt reflecting attributes

[05:40:16.0000] <Ms2ger>
Uh-oh

[05:40:41.0000] <Ms2ger>
zcorpan, no opinion at this point

[05:41:16.0000] <zcorpan>
Ms2ger: k

[05:41:50.0000] <karlcow>
polyfill makes me think to dental products.

[05:44:00.0000] <MikeSmith>
foolip: copied all your Web Audio issues over to bugzilla

[05:44:02.0000] <MikeSmith>
https://www.w3.org/Bugs/Public/buglist.cgi?product=AudioWG&component=Web%20Audio%20API&resolution=---

[05:45:44.0000] <smaug____>
oh, bugzilla component for WebAudio API

[05:45:46.0000] <smaug____>
good

[05:46:01.0000] <smaug____>
now also non-wg members can file bugs

[05:46:24.0000] <smaug____>
it is strange that audio wg tracker required wg membership

[05:57:58.0000] <jgraham>
Sure would be nice to have a standard script for slow-loading resources

[05:58:14.0000] <jgraham>
We have a rather nice one but it's python

[05:59:24.0000] <gsnedders>
Does Hixie expect anyone to implement E4H?

[06:02:55.0000] <annevk>
I think E4H would be interesting to have

[06:04:19.0000] <gsnedders>
I dunno, I'll less sold on it.

[06:05:35.0000] <annevk>
I haven't really seen a good alternative yet

[06:05:54.0000] <annevk>
apart from perhaps quasis, but nobody has actually made something there that works

[06:06:16.0000] <smaug____>
I like some aspects of E4H, but it would be very odd if it couldn't be used in workers

[06:16:27.0000] <Ms2ger>
\o/ The microdata API will be in the next Nightly

[06:19:02.0000] <annevk>
I wonder if bz still feels this way about XLink: http://lists.w3.org/Archives/Public/www-style/2004Mar/0062.html :)

[06:19:46.0000] <Ms2ger>
Note the signature ;)

[06:20:39.0000] <annevk>
still exactly the same email address

[06:20:42.0000] <annevk>
but he dropped the signature

[06:28:34.0000] <foolip>
MikeSmith, thanks!

[07:01:06.0000] <jgraham>
Argh

[07:01:33.0000] <jgraham>
Sites that assume that "performance" in window => navigation timing spec is implemented

[07:01:56.0000] <annevk>
was that unexpected?

[07:02:16.0000] <jgraham>
I guess not, but it is really stupid

[07:03:14.0000] <jgraham>
Should probably have thought of this and stopped people reusing the same global for multiple specs

[07:03:33.0000] <jgraham>
Especially since "performance" is such a dumb name

[07:04:30.0000] <Ms2ger>
document.insertBefore(document.createElement("foo"), document.doctype);

[07:05:11.0000] <Ms2ger>
Assuming document.documentElement === null, what should that do?

[07:05:25.0000] <Ms2ger>
And does the spec get it right?

[07:11:40.0000] <annevk>
Ms2ger: throw

[07:13:29.0000] <Ms2ger>
Per spec too?

[07:13:45.0000] <annevk>
no :(

[07:15:00.0000] <Ms2ger>
I thought so

[07:15:05.0000] <annevk>
4.3 should be changed to take into account that child can be a doctype

[07:15:23.0000] <gsnedders>
Ms2ger: Is Number.isNaN etc. behind any switch in Fx?

[07:15:27.0000] <annevk>
"inclusive following"

[07:15:37.0000] <Ms2ger>
gsnedders, I don't think so

[07:17:02.0000] <gsnedders>
Ms2ger: Then unless you find ES bugs, I may start playing with that soon…

[07:58:44.0000] <Ms2ger>
gsnedders, don't think there were spec bugs there; I expect that any issues will end up on es-discuss

[08:01:18.0000] <annevk>
web notifications is buggy :(

[08:02:53.0000] <Ms2ger>
s/notifications//

[08:17:47.0000] <annevk>
Ms2ger: yeah well, I can't fix the spec for all of that

[08:17:56.0000] <annevk>
although who knows :)

[08:17:57.0000] <Ms2ger>
:)

[08:32:41.0000] <gsnedders>
Ms2ger: I meant in our impl :)

[08:33:16.0000] <Ms2ger>
I don't tend to find ES bugs in your implementation, you know that ;)

[08:34:46.0000] <jgraham>
On a totally different topic, thanks for reusing and improving our Microdata tests

[08:36:21.0000] <Ms2ger>
And thanks to you for submitting them in the first place :)

[08:37:27.0000] <jgraham>
Yeah, I think we have a bunch more things that should be submitted :|

[09:01:08.0000] <Ms2ger>
jgraham, so do we :)

[09:21:23.0000] <astearns>
odinho: "Test the Web Forward, Oslo" (or at least somewhere in Europe) is a great idea. If the event next week goes well I'll see what support I can get to help make that happen

[09:21:47.0000] <Ms2ger>
astearns, Hamburg? :)

[09:22:07.0000] <jgraham>
Why Hamburg?

[09:22:15.0000] <astearns>
The Adobe office in Hamburg is actually quite small :(

[09:22:16.0000] <jgraham>
(London seems like quite a good idea)

[09:22:43.0000] <Ms2ger>
I can poke people in our London office

[09:22:50.0000] <Ms2ger>
Or Paris

[09:23:15.0000] <gsnedders>
If it's London I'll definitely go. :P

[09:23:18.0000] <jgraham>
Paris or London do seem like good choices

[09:23:27.0000] <zewt>
that's quite a finglonger you've got there

[09:24:00.0000] <jgraham>
Yeah, I'm pretty sure I would go to either of those

[09:24:41.0000] <gsnedders>
Paris depends on stuff with uni combined with travel times a bit more.

[09:25:46.0000] <TabAtkins>
London++

[09:26:20.0000] <jgraham>
(I wonder if language would be a problem in France)

[09:26:30.0000] <TabAtkins>
Not in my experience.

[09:26:40.0000] <TabAtkins>
And I know zero French.

[09:26:53.0000] <TabAtkins>
As long as you're cool with eating whatever they serve you.

[09:26:58.0000] <Ms2ger>
Heh

[09:27:11.0000] <Ms2ger>
Which is probably not a bad deal in Paris

[09:27:16.0000] <TabAtkins>
Nope.

[09:27:21.0000] <gsnedders>
Oh nice, train ticket prices have gone up yet again…

[09:27:34.0000] <jgraham>
I mean if you organised an event aimed at local web devs in English would it be well attended? Or if you organised it in French would you get enough people to run it?

[09:27:45.0000] <TabAtkins>
Oh, that's a point.

[09:28:02.0000] <jgraham>
I'm pretty sure I trust the food in France more than in the US.

[09:28:09.0000] <gsnedders>
I mean, given how focused around Paris a lot of stuff is, I wonder how many people would come to London anyway.

[09:28:24.0000] <jgraham>
gsnedders: Huh?

[09:28:35.0000] <jgraham>
A lot of what stuff?

[09:29:03.0000] <gsnedders>
jgraham: If it were in London, given that France is very centralized in general (around Paris), how many people who would go in Paris would go to London?

[09:29:06.0000] <TabAtkins>
Argh, there's an event coming up that (1) is a beer festival (yay!), (2) proceeds go to fight breast cancer (yay!) (3) ...using alt med (BOOOOOOOOOO)

[09:29:23.0000] <TabAtkins>
Thanks for being such a buzzkill, woo-meisters.

[09:29:54.0000] <jgraham>
TabAtkins: That's not just disappointing that's actually mildly sickening. "Raise money for treatments that don't work!"

[09:30:00.0000] <TabAtkins>
EXACTLY

[09:30:01.0000] <TabAtkins>
;alsd;alkj

[09:30:36.0000] <jgraham>
gsnedders: I imagine that if it was in London most attendees would be English.

[09:30:43.0000] <gsnedders>
jgraham: Me too.

[09:30:54.0000] <Ms2ger>
/British

[09:31:27.0000] <gsnedders>
jgraham: Number of web developers in Scotland isn't that great.

[09:32:08.0000] <jgraham>
gsnedders: I imagine if it was in France most attendees would be French. But I'm not sure the pool of French devs that want to go to an English language event is that large and the number of non-French speakers/organisers that want to run the event is that large

[09:32:26.0000] <jgraham>
Now I'm just confused

[09:32:39.0000] <jgraham>
What's Scotland got to do with the price of cheese?

[09:32:42.0000] <Philip`>
Number of people in Scotland isn't that great either

[09:32:57.0000] <Philip`>
/me wonders if the number of web developers is more than proportionally lower

[09:33:38.0000] <jgraham>
Number of people in Norway isn't that great otherwise Oslo would be a fine suggestion (Oslo might be a fine suggestion anyway. At least the language problem wouldn't exist there)

[09:55:00.0000] <Ms2ger>
jgraham, you mean that everyone is equally lost in Norwegian?

[10:10:03.0000] <gsnedders>
Ms2ger: Nej

[10:16:06.0000] <sicking>
Jo!

[10:25:41.0000] <astearns>
jgraham: http://blogs.adobe.com/webplatform/2012/06/05/w3cs-testharness-comes-to-webkit/   (old news, new summary)

[10:35:04.0000] <jgraham>
astearns: Cool. Old news with better fonts is always good :)

[10:35:31.0000] <astearns>
heh

[10:36:50.0000] <Ms2ger>
Oh, so trolling Scandinavians is the way to go to summon sicking?

[10:39:26.0000] <jgraham>
Ms2ger: I hear that surströmming works a treat for getting a scandinavian's attention

[10:40:20.0000] <Ms2ger>
The smell is so bad it's only eaten outdoors?

[10:40:25.0000] <Ms2ger>
Silly Scandinavians

[10:41:13.0000] <sicking>
hahaha

[11:21:21.0000] <matjas>
quiz time: http://twitter.com/mathias/status/210074189409959936

[11:22:12.0000] <Ms2ger>
matjas, immediately or when the timeout runs?

[11:22:26.0000] <matjas>
Ms2ger: doesn’t matter, I’ll take any solution

[11:22:54.0000] <Ms2ger>
{ toString: function() { alert(); } }, perhaps

[11:23:18.0000] <matjas>
this really is too easy for you guys

[11:23:26.0000] <TabAtkins>
That was mine too.

[11:23:38.0000] <matjas>
Ms2ger: how would you do it if it had to be when the timeout runs? (I wouldn’t know how)

[11:23:58.0000] <Ms2ger>
I'd have to think a little longer about that :)

[11:24:17.0000] <Ms2ger>
function() { alert() }

[11:24:24.0000] <Ms2ger>
Functions are objects in JS :)

[11:24:32.0000] <TabAtkins>
The same, but make it return "alert():" rather than the unquoted version.

[11:24:36.0000] <TabAtkins>
Ms2ger: But not object literals!

[11:25:09.0000] <Ms2ger>
TabAtkins, fair

[11:25:20.0000] <TabAtkins>
setTimeout({toString:function(){return "alert('foo')";}},4)

[11:25:39.0000] <matjas>
right, duh

[11:25:43.0000] <matjas>
nice!

[11:26:15.0000] <matjas>
the difference would be more obvious if I hadn’t used 4 ms, ofc

[11:26:29.0000] <Ms2ger>
Mhmm

[11:26:46.0000] <Ms2ger>
It's perfectly obvious if you run the JS in your head

[11:27:52.0000] <TabAtkins>
...which is what I did.

[12:55:05.0000] <Hixie>
is there a DOM API to empty an element yet?

[12:55:11.0000] <Hixie>
something like div.innerHTML = ''; ?

[12:55:19.0000] <Ms2ger>
div.textContent = ''

[12:55:29.0000] <Hixie>
doesn't that introduce an empty text node?

[12:56:14.0000] <Ms2ger>
Not per spec

[12:56:23.0000] <Hixie>
indeed not

[12:56:24.0000] <TabAtkins>
In Chrome it doesn't.

[12:56:24.0000] <Hixie>
cool

[12:56:44.0000] <Hixie>
hm, the spec doesn't do the one-text-node optimisation

[12:57:14.0000] <Ms2ger>
I think we agreed it wasn't necessary

[12:57:18.0000] <Hixie>
especially if we add E4H, it would be cool to have a single method we could use to replace an element's children with another

[12:57:42.0000] <Ms2ger>
node.replace()?

[12:58:00.0000] <TabAtkins>
Hixie: If you didn't have an irrational hatred of method chaining, you could separate the concerns better.

[12:58:09.0000] <TabAtkins>
node.empty().fillWith(stuff)

[12:58:19.0000] <Hixie>
yes! replace() is good

[12:58:27.0000] <Hixie>
TabAtkins: it's not irrational

[12:58:34.0000] <Ms2ger>
Hm

[12:58:49.0000] <Ms2ger>
Why do we have doctype.replace()?

[12:58:58.0000] <TabAtkins>
You have to create new verbs whenever you want to compose two pre-existing verbs in a single statement.

[12:59:11.0000] <Ms2ger>
TabAtkins, emacs!

[12:59:16.0000] <Hixie>
wait, no, replace() replaces the element itself

[12:59:18.0000] <Hixie>
that's not it

[12:59:27.0000] <Philip`>
/me would intuitively expect a.replace(b) to do something like remove a from its parent and insert b into that location

[12:59:33.0000] <Hixie>
Philip`: it does

[12:59:33.0000] <Ms2ger>
Hmm, you're right

[12:59:39.0000] <Philip`>
Oh, it's a thing that exists?

[12:59:48.0000] <TabAtkins>
If you need a single name, replaceContent()

[12:59:50.0000] <Ms2ger>
Philip`, in spec

[13:00:07.0000] <Ms2ger>
Hixie, then not, I'm afraid

[13:01:04.0000] <Hixie>
TabAtkins: a function's return value is the result of the operation that the function performs, not the object on which you execute the function. If you want to do something like chaining, then you should do it at the language level, because it's a syntactic convenience, not a semantic artefact of the API

[13:01:31.0000] <TabAtkins>
And functions that return undefined are super useful, I assume?

[13:01:37.0000] <Philip`>
Oh, only in the DOM4 spec seemingly, which would be why I'd never heard of it

[13:01:47.0000] <Hixie>
Ms2ger: would be nice to have a .empty() and/or a .replaceContents() or some such

[13:02:58.0000] <Hixie>
TabAtkins: it is poor language design to use a feature with one intended semantic to get an unrelated syntactic benefit just because the feature isn't currently used

[13:03:29.0000] <zewt>
Hixie: in my experience, that's just academic and manual chaining can be useful

[13:03:57.0000] <zewt>
(don't know about the particular case you're talking about)

[13:04:02.0000] <Hixie>
i don't disagree that the syntactic convenience is real, i'm saying that implementing it using return values is bad design

[13:04:22.0000] <zewt>
i don't see how

[13:04:34.0000] <Hixie>
it's a layering violation

[13:04:43.0000] <zewt>
i don't want a native "run a bunch of methods on the same object" syntax; never seen a language do it and it seems much simpler to do it at the API level when it's helpful

[13:05:28.0000] <Ms2ger>
Hixie, filed a bug on that

[13:05:31.0000] <Hixie>
you have seen such a syntax, it's just poorly designed for other reasons in JS: "with"

[13:05:32.0000] <TabAtkins>
I definitely think the language should handle it, actually.  But until we get the monocle-mustache syntax in JS, we can chain by convention.

[13:05:42.0000] <Hixie>
a proper solution would be something like JS 'with' but without the effect on identifiers in arguments

[13:05:47.0000] <TabAtkins>
foo.{ bar(); baz(); }  === foo.bar(); foo.baz();

[13:05:55.0000] <zewt>
TabAtkins: ugh, please no

[13:05:59.0000] <TabAtkins>
Yes!

[13:06:03.0000] <zewt>
that's hideous

[13:06:13.0000] <Hixie>
TabAtkins: ugh, please no (but to the chaining, not the new syntax)

[13:06:15.0000] <TabAtkins>
Chaining is a part of JS, no matter what we do.  Might as well make it automatic.

[13:06:29.0000] <TabAtkins>
It looks better when spread over multiple lines like a real block. ^_^

[13:06:36.0000] <Philip`>
with (foo) { .bar(); .baz(); }

[13:06:47.0000] <TabAtkins>
with is banished forever.

[13:07:29.0000] <Hixie>
Philip`'s version of 'with' (with the leading '.'s to say when to apply the with expression) is a really good way to solve it

[13:07:53.0000] <TabAtkins>
The ES people already rejected it.

[13:08:06.0000] <Hixie>
and i'm rejecting chaining :-P

[13:08:32.0000] <TabAtkins>
I'm sorry that you hate JS and its ways.

[13:08:48.0000] <Ms2ger>
Now you're just trolling

[13:09:03.0000] <TabAtkins>
A little, yes.  ^_^

[13:09:20.0000] <Ms2ger>
It's like Godwin's law for chaining

[13:09:30.0000] <TabAtkins>
But still, seriously, chaining has been a feature of good JS APIs for years. Rejecting it because you prefer your APIs to return a useless undefined is silly.

[13:09:35.0000] <zewt>
is there a meta-godwin's-law for bringing up godwin's law

[13:10:21.0000] <Ms2ger>
Insisting on chaining when your functions could return something useful is sillier :)

[13:10:33.0000] <TabAtkins>
What useful thing could .clear() return?

[13:10:42.0000] <Hixie>
seriously, chaining hasn't been a feature of "good JS APIs", almost by definition

[13:10:43.0000] <zewt>
true if anything was cleared, false if it did nothing?

[13:10:53.0000] <Ms2ger>
For example

[13:11:09.0000] <TabAtkins>
Why not have a predicate for whether an element is empty or not?

[13:11:20.0000] <Hixie>
chaining is so obviously a layering violation that i don't understand why we're even having this discussion

[13:11:22.0000] <TabAtkins>
(I think we have one already, called .firstChild

[13:11:31.0000] <Ms2ger>
Or a DocumentFragment with the removed node

[13:11:34.0000] <TabAtkins>
Hixie: Because all the good JS libraries and their users disagree with you?

[13:11:34.0000] <Ms2ger>
+s

[13:11:40.0000] <zewt>
what's the use case for not chaining? :)

[13:11:42.0000] <Ms2ger>
"good"

[13:11:49.0000] <Hixie>
zewt: returning something useful

[13:12:08.0000] <Hixie>
zewt: and more importantly, using the language as it was designed

[13:12:27.0000] <Hixie>
TabAtkins: that's (a) an appeal from authority and (b) wrong

[13:12:35.0000] <zewt>
if you have a vector class that does addition, multiplication, etc. in-place, there's really nothing more useful to return than allowing chaining

[13:12:41.0000] <TabAtkins>
No, it's an appeal from use.  Also: it's right.

[13:12:50.0000] <Hixie>
this conversation is content-free, so i'm bailing

[13:13:26.0000] <TabAtkins>
Sigh. Since your response is just "I disagree with the usage patterns of most popular JS libraries", I agree.

[13:13:35.0000] <Ms2ger>
zewt, in that case, I might agree

[13:13:48.0000] <Ms2ger>
zewt, but I think it's silly as a general rule

[13:14:21.0000] <gsnedders>
Paving the cowpaths, etc.

[13:14:34.0000] <TabAtkins>
Given my own usage patterns and what I see others do and like, I think chaining should be the default, unless you have a good reason to return something.

[13:14:49.0000] <gsnedders>
/me doesn't like chaining, but that's him

[13:14:54.0000] <zewt>
TabAtkins: i wouldn't go too far with that, since in balance you don't always know at first whether you'll want to return something later

[13:14:59.0000] <TabAtkins>
When/if JS ever fixes this at the language level (and I hope they do), we can revise the policy.

[13:15:00.0000] <Hixie>
Ms2ger: going back to the DOM, I recommend adding a replaceChildren() method and a removeChildren() method that parallel replaceChild() and removeChild()

[13:15:23.0000] <Hixie>
Ms2ger: and maybe renaming append() to appendChildren() for consistency, though it does make it verbose, so maybe not

[13:15:35.0000] <zewt>
removeChildren would sure be nice; i'm definitely sick of writing removeChild() loops

[13:16:00.0000] <Ms2ger>
TabAtkins, that's terribly short-sighted, IMO

[13:16:04.0000] <TabAtkins>
zewt: Generally, if you can return something from an in-place mutation, you could return it with a separate function too.  Should just provide it there and keep the mutators convenient.

[13:16:06.0000] <zewt>
(though at the same time, i'm wary about helper functions that replace two lines of code)

[13:16:25.0000] <Hixie>
zewt: one line of code if you do textContent = '' instead

[13:16:38.0000] <zewt>
feels a bit hacky

[13:16:45.0000] <Hixie>
it's quicker, but yeah

[13:16:56.0000] <Hixie>
zewt: but in this case i think it's more about making the code more self-explanatory

[13:17:12.0000] <Hixie>
node.empty() or node.removeChildren() is clearer than node.textContent = '' // empty

[13:17:40.0000] <zewt>
TabAtkins: well, for example, you could make WebSocket.send() return this, so you could say ws.send(a).send(b).send(c); but you might also later want to return something else, like an object you can stick event listeners on to find out when that particular send() completes

[13:17:55.0000] <zewt>
Hixie: fwiw empty() sounds like a query (isEmpty)

[13:18:33.0000] <Ms2ger>
zewt, otoh, DOM would use an attribute for that, I think

[13:18:52.0000] <Hixie>
zewt: i don't care much abotu the exact naming, that's up to Ms2ger

[13:19:01.0000] <Ms2ger>
/me defers to annevk 

[13:19:25.0000] <zewt>
careful, if annevk punts to hixie the world might explode

[13:19:46.0000] <Ms2ger>
Nah, we'll pass through AryehGregor first :)

[13:19:55.0000] <Hixie>
has to be one of the dom editors :-P

[13:20:01.0000] <Hixie>
and this is why there should be only one! :-P

[13:20:26.0000] <Ms2ger>
Hixie, if I were the only one, I'd just let that bug sit there too :)

[13:20:35.0000] <zewt>
Ms2ger: if it returns true if >0 elements were removed (theoretically), if(empty()) { ... } would definitely be confusing

[13:20:47.0000] <Ms2ger>
zewt, fair point

[13:21:02.0000] <zewt>
(don't have any use cases for that return value off-hand, just seems like an "obvious" thing to do)

[13:22:14.0000] <Ms2ger>
Hixie, how about I leave the API design to the WG? ;)

[13:22:47.0000] <zewt>
design by committee, that always goes well :)

[13:22:48.0000] <Hixie>
if you start doing that kind of thing, i'll just have to drag dom core back into the html spec :-P

[13:24:24.0000] <zewt>
(also FWIW, "removeChildren" while a bit verbose is consistent with the others)

[13:25:39.0000] <Hixie>
(jeez, what is so hard about people deleting quoted text in their e-mails)

[13:25:51.0000] <jgraham>
Email is too hard for people

[13:25:53.0000] <Ms2ger>
Can we blame gmail? :)

[13:25:57.0000] <jgraham>
It is mystifying

[13:26:38.0000] <Ms2ger>
jgraham, clearly you should be using an approved email client :)

[13:26:42.0000] <zewt>
what I found fascinating is someone posting to the "mailing list etiquette" thread talking about how to quote, while quoting in one of the most horrifying ways imaginable

[13:27:16.0000] <jgraham>
zewt: That is inevitable

[13:27:31.0000] <Hixie>
wow

[13:27:32.0000] <Hixie>
http://taglit.qfox.nl/

[13:27:35.0000] <zewt>
(top-quoting is better than that <irc> quoting nonsense)

[13:27:45.0000] <TabAtkins>
Agreed.

[13:27:47.0000] <gsnedders>
+1

[13:27:58.0000] <Ms2ger>
"My response is in blue"

[13:28:30.0000] <zewt>
yeah that's probably a little worse

[13:28:42.0000] <TabAtkins>
Clearly someone's not thinking about nesting.

[13:29:15.0000] <Ms2ger>
I use blue, you use red, your quote of my comment is purple

[13:29:29.0000] <zewt>
and in the archives we all use black :P

[13:29:48.0000] <jgraham>
I suppose mail clients don't support <blink> or we weould have "my reply is flashing"

[13:30:14.0000] <Ms2ger>
My reply is <marquee>Floating back and forth</marquee>

[13:30:24.0000] <zewt>
jgraham: by the way, http://zewt.org/~glenn/gross.html blink is back, baby!

[13:30:45.0000] <jgraham>
My reply is all the prime numbered letters

[13:31:12.0000] <jgraham>
(er, I mean the letters at prime number indicies, or something)

[13:31:45.0000] <jgraham>
There has to be a fun way to embed your reply in the original text

[13:31:59.0000] <Ms2ger>
Yes

[13:32:07.0000] <Ms2ger>
> Blah blah

[13:32:09.0000] <Ms2ger>
> blah

[13:32:14.0000] <Ms2ger>
 

[13:32:16.0000] <Ms2ger>
I agree!

[13:32:46.0000] <Ms2ger>
</boring>

[13:33:09.0000] <zewt>
<Hixie> http://taglit.qfox.nl/ <- heh, not sure what I think about "new function()"

[13:33:27.0000] <zewt>
it's nice to not have to wrap the whole thing in (function(){})(), but it's also unobvious

[13:33:36.0000] <Ms2ger>
Not too much of a fan of <a b> :)

[13:43:59.0000] <jesusruiz>
Hixie, Are you Ian Hickson?

[13:45:29.0000] <TabAtkins>
Yes, he is.

[13:45:51.0000] <jesusruiz>
Thanks, TabAtkins ;)

[13:45:54.0000] <Hixie>
jesusruiz: yes

[13:48:31.0000] <jesusruiz>
Hixie I'd like to send you an email about a feature, that it might be interesting to study for the web.

[13:48:44.0000] <TabAtkins>
jesusruiz: Please send it to whatwg⊙wo

[13:49:53.0000] <jesusruiz>
although I think that to do so, you should use a patent owned by Microsoft.

[13:50:58.0000] <jesusruiz>
OK, TabAtkins. Thanks for your help. You are very kind ;)

[14:25:49.0000] <Hixie>
is mjs on vacation or something? i haven't seen him around in a while

[14:26:50.0000] <TabAtkins>
Yes.

[14:26:58.0000] <Hixie>
Aaah.

[14:27:00.0000] <Hixie>
Ok.

[14:27:58.0000] <hober>
He'll be back next week IIRC

[14:28:07.0000] <Hixie>
k

[15:02:03.0000] <Hixie>
anyone know if anyone other than chrome is interested in http://lists.w3.org/Archives/Public/public-whatwg-archive/2011Nov/0086.html ?

[15:09:36.0000] <hober>
Hixie: i don't see the point of the file system api as such, much less this specific proposal

[15:11:25.0000] <Hixie>
k

[15:20:23.0000] <zewt>
hober: have you not been following it? (it's pretty obvious, I think...)

[15:20:43.0000] <zewt>
(both of those)

[15:35:36.0000] <hober>
zewt: storing and retreiving named chunks of data in the client is already solved by websqldatabase or indexeddb

[15:35:56.0000] <hober>
zewt: there's no point in adding yet another api to do the same thing

[15:37:53.0000] <zewt>
i doubt indexeddb would be suitable for large data (eg. 8GB of data for a game); and fs-api for accessing native files (which the above thread is one early attempt at, iirc) has its own big bag of use cases around accessing user native files with web apps

[15:39:53.0000] <zewt>
(i know idb can stored blobs; no real idea how that's shaping up for that sort of usage pattern--personally my main interest in fs-api is bridging the native file gap)

[15:47:04.0000] <TabAtkins>
Man, why is Opera on a different timezone from everyone else?  Frustrating.

[15:47:42.0000] <TabAtkins>
I want to ask Morten a question about his flexbox impl.

[16:23:05.0000] <Hixie>
TabAtkins: they're closer to being on the standard timezone than we are :-P

[16:23:50.0000] <TabAtkins>
Clearly the standard is wrong.

[16:24:34.0000] <TabAtkins>
(Though they are on the 0 point of Swatch Internet Time, which is cool.)

[16:24:39.0000] <TabAtkins>
(Though Swatch got that wrong.)

[16:33:04.0000] <Hixie>
heh


2012-06-06
[17:58:22.0000] <tantek>
/me actually has a couple of Swatch BEAT watches that show/use Swatch Internet Time.

[17:59:27.0000] <tantek>
unfortunately they're still stuck with awkward Gregorian dates. I want a watch that displays ordinal ISO dates - if anyone knows of one (especially one that displays it by default on the "home" screen - without having to push any buttons) let me know.

[18:58:25.0000] <zewt>
heh another one

[18:58:35.0000] <zewt>
i try to search for an order i made on amazon for a surge protector

[18:58:37.0000] <zewt>
No matches for "Title, Department, Recipient...surge".

[18:58:45.0000] <zewt>
@placeholder go go go

[00:05:12.0000] <annevk>
morning

[00:17:45.0000] <annevk>
so replaceContents/empty are like textContent/innerHTML for nodes?

[00:17:47.0000] <annevk>
hmm

[00:28:45.0000] <annevk>
seems like Hixie replied to a few emails last light :)

[00:29:33.0000] <Ms2ger>
The graph does seem to suggest that

[00:30:46.0000] <annevk>
my inbox too

[00:43:05.0000] <MikeSmith>
hsivonen: regarding the Maven absurdity, I admire your persistence

[00:43:16.0000] <MikeSmith>
I think I would have given up already

[00:48:32.0000] <MikeSmith>
annevk: góðan dag

[00:48:48.0000] <MikeSmith>
annevk: about "Fixing something bad by introducing a document-global switch", I'm wondering did you have any specific examples in mind

[00:50:08.0000] <annevk>
quirks mode is one

[00:50:16.0000] <MikeSmith>
OK

[00:50:21.0000] <annevk>
ECMAScript had something similar at some point

[00:50:29.0000] <annevk>
well proposal for it

[00:50:29.0000] <MikeSmith>
yeah, I remember that

[00:50:43.0000] <annevk>
twice actually, first for ES versioning, then for Unicode

[00:50:49.0000] <MikeSmith>
yeah

[00:51:45.0000] <MikeSmith>
would you consider the currently specced behavior for meta@name=generator to be a document-global switch?

[00:55:56.0000] <annevk>
that doesn't seem like an invasive thing

[00:56:23.0000] <annevk>
but it does seem similar, sure

[00:58:45.0000] <MikeSmith>
yeah, it's certainly less heinous than quirks mode switching on doctype

[00:59:20.0000] <MikeSmith>
but still seems like an anti-pattern that should be avoided

[01:02:23.0000] <MikeSmith>
Hixie: about http://lists.w3.org/Archives/Public/public-whatwg-archive/2011Nov/0086.html ("Drag-and-drop folders/files support with directory structure using DirectoryEntry")

[01:02:33.0000] <MikeSmith>
looks like Kinuko's planning to implement it

[01:02:58.0000] <MikeSmith>
http://lists.webkit.org/pipermail/webkit-dev/2012-June/020952.html

[01:04:04.0000] <MikeSmith>
annevk: have you had a chance to ping John Gregg about the Notifications spec?

[01:04:27.0000] <MikeSmith>
if there's something I can do to help with it lemme know

[01:05:17.0000] <annevk>
yeah pinged him several times

[01:05:20.0000] <MikeSmith>
OK

[01:05:22.0000] <annevk>
he doesn't seem to have the bandwidth

[01:05:30.0000] <annevk>
I've been looking at fixing it myself, but it's quite messy

[01:05:54.0000] <MikeSmith>
maybe we can get Velmont interested

[01:06:25.0000] <annevk>
nah I can fix it

[01:06:30.0000] <MikeSmith>
OK

[01:06:38.0000] <MikeSmith>
I will get us an extension on the charter

[01:06:44.0000] <MikeSmith>
next week

[01:06:54.0000] <annevk>
when does it expire?

[01:06:59.0000] <MikeSmith>
end of this month

[01:07:07.0000] <annevk>
k

[01:07:55.0000] <MikeSmith>
hey if anybody's seen Wilhelm we really need his attention for getting a FPWD for WebDriver started

[01:12:04.0000] <annevk>
hmm I forgot, is it fine if a queued task does a potentially long running synchronous task?

[01:12:24.0000] <annevk>
or should that be in a "asynchronous" section

[02:09:52.0000] <MikeSmith>
"MS share contracts"?

[02:10:06.0000] <MikeSmith>
https://twitter.com/rem/status/210297546134929408

[02:11:04.0000] <MikeSmith>
oh

[02:11:06.0000] <MikeSmith>
http://msdn.microsoft.com/en-us/library/windows/apps/hh464906.aspx I guess

[02:16:10.0000] <tantek>
MikeSmith - the real question is - what is the concept called in BlackBerryOS - which had such device/app messaging abstractions before Android did.

[02:19:37.0000] <MikeSmith>
tantek: we seem to be on the road here that leads to Web developers needing to write code for several different browser-proprietary ways for addressing the same use cases

[02:20:34.0000] <MikeSmith>
I guess it's possible some library could provide an abstraction on top of it all

[02:21:22.0000] <MikeSmith>
but it would be a large missed opportunity if we can't get agreement on some standard way that Web devs can use to do this

[02:21:33.0000] <MikeSmith>
cross-browser

[02:27:28.0000] <jgraham>
annevk: Long running synchronous things would block the event loop

[02:28:32.0000] <jgraham>
(even if they happen in a task that is async with respect to the original DOM method invocation)

[02:28:45.0000] <jgraham>
(or whtever else causes the task to be fired)

[02:29:51.0000] <jgraham>
MikeSmith: What use cases are you talking about?

[02:30:51.0000] <MikeSmith>
easily sharing things through whatever particular Web apps you'd like

[02:31:17.0000] <MikeSmith>
or sending things to particular Web apps you'd like to do something with them

[02:31:49.0000] <MikeSmith>
without needing to navigate a massive sheet of buttons for every known service in the universe

[02:32:25.0000] <MikeSmith>
and without being restricted to some set up apps somebody else has decided to restrict you to

[02:32:46.0000] <annevk>
jgraham: yeah that makes sense

[02:32:54.0000] <annevk>
jgraham: so it needs to be an asynchronous section

[02:57:54.0000] <hsivonen>
Does Maxthon ship a given snapshot of WebKit-Chromium earlier than Chrome?

[02:58:22.0000] <hsivonen>
or: Why does Maxthon score higher than Chrome but lower than upcoming Chromium on html5test.com?

[02:58:44.0000] <Ms2ger>
/me thought it used trident

[02:59:15.0000] <hsivonen>
Ms2ger: I believe it uses Trident and WebKit-Chromium and has some sort of heuristic for deciding which one to use for which site

[02:59:21.0000] <Ms2ger>
Fascinating

[02:59:39.0000] <hsivonen>
or maybe it's based on a curated list of sites rather than a heuristic

[03:04:05.0000] <AryehGregor>
So how does that work with, say, respecting user preferences cross-site?

[03:07:33.0000] <MikeSmith>
html5test.com would seem to be a lot more useful if it documented the criteria and provided the actual tests it uses

[03:12:41.0000] <Ms2ger>
And if it had useful tests

[03:12:49.0000] <MikeSmith>
yeah

[03:13:12.0000] <MikeSmith>
instead of arbitrary tests created by one single dude based on personal whims

[03:15:05.0000] <MikeSmith>
god the fascination that grown-up men in Japan have with the pseudo-drama around AKB48 members is really nauseating. This TV commercial keeps showing a clip of one the "graduated" ones crying and saying "You can hate me but please don't hate AKB48". And it's for real and I guess supposed to be emotionally moving but it just makes me want to really pummel whoever the intended audience is

[03:16:18.0000] <MikeSmith>
and for anybody who doesn't know what AKB48 is, count yourself lucky. seriously

[03:21:05.0000] <Ms2ger>
/me doesn't look it up, then

[03:52:41.0000] <roc>
I looked it up, but Google didn't work

[03:57:01.0000] <hsivonen>
What SSH client is one supposed to use on Windows these days? Putty still?

[03:57:37.0000] <Ms2ger>
I think so

[03:57:45.0000] <hsivonen>
ok. thanks

[03:58:02.0000] <roc>
I just use msys ssh

[04:01:12.0000] <hsivonen>
So msys ssh is plain OpenSSH running under cmd?

[04:01:35.0000] <roc>
it looks like it

[04:01:50.0000] <hsivonen>
does cmd support the sort of curses irssi and screen use?

[04:04:54.0000] <roc>
oh, I'm running under mintty.exe actually

[04:06:20.0000] <hsivonen>
yay. getting crypto software from a http: site

[04:10:41.0000] <hsivonen>
yay. 16-color icons.

[04:15:28.0000] <tantek>
MikeSmith - re: developers needing to write code for several different browser-proprietary ways for addressing the same use cases - there hasn't been enough experimentation to come up with even a good minimal solution - that's part of the problem.

[04:16:21.0000] <tantek>
As I noted in the WebApps WG f2f in MSFT SVC - Google's Web Intents seem to have an even bigger (apparently ever growing?) scope that I had thought was already far bigger than use-cases have shown a need for.

[04:17:02.0000] <MikeSmith>
tantek: but in the mean time as with other cases, there's a vacuum the OS+browser vendors are going to fill one way or another

[04:17:13.0000] <tantek>
As far as fearing developers writing code for such technologies - most of the approaches to date are overdesigned and don't take into account developer (and publisher!) motivations.

[04:17:45.0000] <tantek>
MikeSmith, historically browsers have experimented with numerous things like this - most of which get ignored by developers

[04:18:05.0000] <tantek>
and some of which is eventually abandoned by browsers as well

[04:18:43.0000] <tantek>
I've been quite surprised at all the experiments that IE/Windows has abandoned for example, despite having a large marketshare etc., and potentially numerous developers using such experiments

[04:19:01.0000] <tantek>
(all the stuff they recently - a few months ago? - noted in a blog post were being dropped)

[04:19:14.0000] <annevk>
hsivonen: Windows -> cygwin?

[04:21:09.0000] <MikeSmith>
tantek: I think Webkit experimental features that have mobile use cases as a priority target perhaps have a lot less potential to get dropped

[04:21:59.0000] <tantek>
MikeSmith - except those Webkit features were never shipped as "experimental" - from the day Apple announced and demo'd them - they were intended to be a solid part of the web platform

[04:22:24.0000] <tantek>
plus no one shipped any alternatives, and they were put on a standards track (albeit far too slowly)

[04:22:29.0000] <MikeSmith>
fair enough

[04:22:51.0000] <tantek>
also - to be fair to Apple, the design of animations, transitions, transformations (just to name a few) was quite good

[04:23:31.0000] <tantek>
and I'm not sure the time cost of the revisions/improvements in the CSSWG have been worth it. others may have different opinions.

[04:23:42.0000] <hsivonen>
The UI of PuTTY is confusing. I'm going to try mintty later in order to get a familiar ssh binary.

[04:24:08.0000] <tantek>
nonetheless - there's some forward progress there with standardization, especially unprefixing, so I have some hope there.

[04:25:50.0000] <hsivonen>
annevk: cygwin just for running ssh seems like an overkill

[04:31:29.0000] <annevk>
tantek: there's some forward progress indeed, there's also tremendous damage which requires vendors to waste time on copying each others prefixes

[04:31:58.0000] <tantek>
annevk - or at least waste time studying and arguing if we have to or not

[04:32:14.0000] <tantek>
no doubt the progress is too slow, no matter how fast it is at this point.

[04:48:23.0000] <MikeSmith>
Ms2ger: how much longer before I can get today's Firefox Nightly

[04:49:18.0000] <Ms2ger>
What OS? The Linux one seems finished

[04:54:34.0000] <MikeSmith>
Ms2ger: OSX

[04:55:56.0000] <Ms2ger>
Looks like that finished right when you asked

[04:56:15.0000] <Ms2ger>
Not sure how long it takes to get to you from there, though

[04:58:31.0000] <AryehGregor>
tantek, my opinion is that the design of transforms was overall very good, especially 2D transforms, and not much was gained by revisions in the CSSWG (which anyway more or less didn't occur).

[04:59:01.0000] <AryehGregor>
I'm still a bit ambivalent about 3D transforms, namely the whole question of the transform-style/perspective/perspective-origin properties, but I wasn't able to come up with anything better.

[04:59:44.0000] <AryehGregor>
Gradients, however, wound up being much nicer after work by the CSSWG, AIUI.

[05:00:49.0000] <tantek>
AryehGregor - what you're saying sounds about right from my experience watching the revisions (or attempts) in the CSSWG

[05:01:07.0000] <tantek>
I suppose the challenge is not knowing when (if?) such attempts at iteration will make any improvements

[05:02:31.0000] <hsivonen>
Is it just a coincidence that the syntax changes at the CSS WG if TabAtkins edits? (Gradients, Flexbox)

[05:08:32.0000] <AryehGregor>
hsivonen, well, it's not a coincidence that the syntax doesn't change if no one edits (transforms, transitions, animations).

[05:12:46.0000] <roc>
heh

[05:13:53.0000] <roc>
gradients syntax had to change, because Webkit gradients really sucked

[05:14:11.0000] <roc>
it didn't have to change more than once though

[05:40:35.0000] <annevk>
does HTML have some hook for supported image format?

[05:41:57.0000] <annevk>
not really it seems

[06:20:05.0000] <tantek>
annevk - what do you mean by "hook for supported image format?"

[06:20:10.0000] <tantek>
there's object fallback

[06:21:09.0000] <tantek>
<object type="image/svg+xml" href="…"><object type="image/png" href="…">alt text</object></object>

[06:21:52.0000] <tantek>
btw annevk - I'm fine with using public-webapps list for Fullscreen. Any existing related list is better than creating yet another list.

[06:59:40.0000] <annevk>
tantek: the term "supported image format"

[07:10:04.0000] <AryehGregor>
annevk, I thought it made the list of supported image formats totally undefined?

[07:22:21.0000] <annevk>
sure, but that's not relevant

[07:22:29.0000] <annevk>
an image format is still either supported or not supported

[07:31:58.0000] <annevk>
MikeSmith: getting there with cleaning up notifications

[07:32:20.0000] <annevk>
MikeSmith: the whole permission stuff was not done yet and everything that was done was up for a rewrite of sorts...

[07:32:30.0000] <annevk>
still need to do bidi

[07:32:33.0000] <annevk>
bidi :(

[07:42:16.0000] <[tm]>
annevk: progress not perfection

[07:42:35.0000] <[tm]>
anyway, thanks

[07:43:33.0000] <annevk>
I doubt I'll get it perfect, but hopefully better :)

[08:14:02.0000] <TabAtkins>
hsivonen: I just really, *really* like changing the syntax of things late in development.  It makes me happy.

[08:14:24.0000] <Ms2ger>
I KNEW it

[11:01:03.0000] <deadowl>
Concerning the time element, wouldn't it make sense if you could specify default timezone, and possibly year, in the head using a meta tag?

[11:04:58.0000] <Ms2ger>
jgraham, this timeout patch....

[11:12:45.0000] <tantek>
deadowl - info in meta tags tends to rot and get out of sync. it's fairly well accepted that putting data in meta tags is an anti-pattern.

[11:13:13.0000] <tantek>
especially something like timezone which changes twice a year for most folks

[11:33:58.0000] <deadowl>
It would be easier to use the timezone database and specify America/New_York in a meta tag or a header than to markup -04:00 and -05:00 for changes relative to GMT.

[11:34:23.0000] <deadowl>
Especially since people tend to publish for a single timezone.

[12:08:09.0000] <zcorpan>
annevk: "so it needs to be an asynchronous section" - the spec has "synchronous section" but not "asynchronous section". for stuff that should run async, it usually just says "return but continue the remaining steps async"

[14:23:03.0000] <matzipan>
boo

[14:23:06.0000] <matzipan>
oh not here

[16:48:49.0000] <zewt>
http://www.gotmow.com/Sign-Up-Online i wonder if I'm the first person to even question the fact that http + cc# entry

[16:49:05.0000] <TabAtkins>
Probably, yes.

[16:49:11.0000] <zewt>
the whole "only sometimes secure" model is just useless

[16:49:39.0000] <zewt>
(it's actually an https form, but of course it's still insecure, since you could mitm the form itself)

[16:49:57.0000] <zewt>
(but I'm not even going to try explaining that to someone who runs a lawn mowing business)

[16:50:16.0000] <Hixie>
aw, i thought "got mow" was a reference to cats

[16:50:17.0000] <Hixie>
now i'm sad

[16:52:39.0000] <tantek>
/me looks for a picture of a cat.

[16:53:32.0000] <tantek>
http://statigr.am/p/203021528894527247_2975244

[16:54:16.0000] <tantek>
and there's much more at http://statigr.am/tag/catsofinstagram/

[16:55:02.0000] <Hixie>
i am not lacking in pictures of cats :-P

[16:59:57.0000] <astearns>
http://mubi.com/films/rent-a-cat


2012-06-07
[22:11:37.0000] <annevk>
zcorpan, yeah that's what I use too

[22:39:06.0000] <annevk>
thanks for filing that bug Ms2ger

[22:39:11.0000] <annevk>
I forgot about it :(

[22:39:49.0000] <annevk>
I think I reached the point where people have to file bugs or otherwise it's unlikely to happen

[22:52:55.0000] <annevk>
Hixie: if an API needs to be scoped to a certain origin, what terminology should be used?

[22:53:12.0000] <annevk>
I guess that's an overly broad question...

[22:55:14.0000] <annevk>
Hixie: there's one API to that enables a particular origin to make use of the API; the other API is dependent on that

[22:55:41.0000] <annevk>
Hixie: Notification.requestPermission(callback) -> new Notification()

[22:56:51.0000] <annevk>
I guess if I talk about the "origin" with that referencing HTML I should probably be okay

[23:00:20.0000] <annevk>
so does roc's blog post mean https://twitter.com/rocallahan is fake?

[23:00:27.0000] <annevk>
or is twitter not a social network?

[23:04:59.0000] <MikeSmith>
I thought I remember roc saying long ago that he didn't use twitter

[23:05:11.0000] <MikeSmith>
maybe he set up the account but never used it

[23:08:11.0000] <Hixie>
annevk: i'd have to see more context to answer that

[23:11:32.0000] <annevk>
Hixie: k, I checked it in http://dvcs.w3.org/hg/notifications/raw-file/tip/Overview.html

[23:12:46.0000] <annevk>
Hixie: search for "origin" and "If notifications are not allowed" (that needs to do the origin/permission check somehow)

[23:12:52.0000] <Hixie>
"The conceptual "default", but meaning "granted" does not exist." is grammatically bogus, btw. try "There is no equivalent of "default" meaning "granted"." or some such

[23:13:04.0000] <Hixie>
equivalent to, rather

[23:13:06.0000] <annevk>
thanks

[23:14:45.0000] <Hixie>
the origin stuff there seems right to me

[23:15:20.0000] <Hixie>
certainly i'd say it's no less tight than what i have for things like storage

[23:15:45.0000] <annevk>
sweet

[23:16:09.0000] <Hixie>
that reminds me, i had some question for you

[23:16:14.0000] <Hixie>
/me tries to recall what it was

[23:16:19.0000] <Hixie>
something abotu xhr

[23:17:06.0000] <Hixie>
oh, right

[23:17:17.0000] <Hixie>
what's the status of "chunked-text" and "chunked-arraybuffer"?

[23:18:12.0000] <annevk>
http://lists.w3.org/Archives/Public/public-webapps/2012AprJun/0859.html

[23:19:36.0000] <Hixie>
ah, thanks

[23:19:51.0000] <Hixie>
oh hey that was like mere days ago

[23:19:57.0000] <Hixie>
wonder how i missed that

[23:34:31.0000] <annevk>
MikeSmith: is there an option for DB-backed plus anyone who subscribes?

[23:34:45.0000] <annevk>
MikeSmith: I think that would be better for the Web Notifications WG

[23:38:36.0000] <MikeSmith>
annevk: isn't that the way I already have it set up?

[23:38:42.0000] <MikeSmith>
/me looks

[23:39:27.0000] <annevk>
MikeSmith: oh

[23:39:56.0000] <hsivonen>
annevk: how is the MS thing a "just have" thing compared to chunked-*? Isn't chunked-* much simpler?

[23:40:16.0000] <annevk>
another thing that bugs me is that it's public-web-notification / TR/notifications / hg/notifications

[23:40:45.0000] <annevk>
hsivonen: for whom?

[23:41:03.0000] <hsivonen>
annevk: for Gecko, WebKit and Presto

[23:41:19.0000] <annevk>
isn't it about developers?

[23:41:44.0000] <annevk>
and also, Stream seems likely to happen

[23:41:50.0000] <annevk>
I have not seen anyone oppose that

[23:41:58.0000] <annevk>
and having two APIs for the same thing...

[23:42:24.0000] <annevk>
MikeSmith: https://www.w3.org/services/list-audit/query?queryList=public-web-notification says no

[23:42:38.0000] <hsivonen>
annevk: doesn't the stream thing need buffering potentially tons of data? the whole point of chunked-* is that it's not buffered up

[23:42:44.0000] <MikeSmith>
annevk: I guess that naming inconsistency doesn't bug me nearly as much as the many other things that really bug me

[23:42:49.0000] <MikeSmith>
annevk: ok, checking now

[23:42:54.0000] <annevk>
MikeSmith: true enough

[23:43:09.0000] <hsivonen>
annevk: in the steam case, it seems script pulls from the stream. in the chunked-* case, XHR pushes data to the script

[23:43:14.0000] <Hixie>
is there a unix command line program that will just report a file's last modification time as a unix time_t to the console?

[23:43:16.0000] <MikeSmith>
cough fullscreen cough

[23:43:21.0000] <annevk>
haha

[23:43:27.0000] <annevk>
you mean glazman

[23:43:30.0000] <Hixie>
(i can do it in perl if necessary, but if there's one already...)

[23:43:46.0000] <annevk>
hsivonen: that's probably a point worth making on the list

[23:43:47.0000] <MikeSmith>
Hixie: there is one but I can't remember the name

[23:43:54.0000] <MikeSmith>
/me tries thinking harder

[23:48:07.0000] <hsivonen>
hmm. can the File API block the UI thread on reads?

[23:48:53.0000] <hsivonen>
/me mumbles about mount points that are actually backed by network shares

[23:49:39.0000] <Hixie>
i thought the file api was designed to be incredibly non-blocking

[23:49:54.0000] <hsivonen>
ok. then I'm misunderstanding something

[23:50:08.0000] <annevk>
hsivonen: are you going to make that point on the list?

[23:50:17.0000] <hsivonen>
annevk: yes. after breakfast

[23:50:34.0000] <annevk>
hsivonen: thanks; I guess with that the "other implementor" question still stands

[23:50:49.0000] <annevk>
but if true it does seem more justified

[23:54:17.0000] <MikeSmith>
annevk: I don't know why I set the list up to not be DB-backed but if you want I can ask to have it changed

[23:54:34.0000] <MikeSmith>
I can't change the config myself directly

[23:55:10.0000] <MikeSmith>
Hixie: isn't "stat -f %a FOO" what you want?

[23:55:25.0000] <Hixie>
aha, thanks!

[23:55:29.0000] <Hixie>
forgot about stat

[23:55:34.0000] <MikeSmith>
yeah, me too

[23:55:49.0000] <MikeSmith>
had to look at info coreutils

[23:59:49.0000] <annevk>
MikeSmith: maybe because the WG was not around when the list was setup; but yeah, lets change it

[00:00:01.0000] <MikeSmith>
OK

[00:08:28.0000] <MikeSmith>
annevk: OK, request sent

[00:16:00.0000] <annevk>
man

[00:16:03.0000] <annevk>
https://lists.w3.org/Archives/Team/team-webapps/2012Jun/0022.html is comedy gold

[00:16:11.0000] <annevk>
too bad nobody but the Team can read it

[00:17:16.0000] <hsivonen>
annevk: are you CCed or do chairs have Team access?

[00:17:28.0000] <annevk>
cc'd

[00:18:01.0000] <annevk>
only the Team has Team access afaik; not even AB

[00:22:08.0000] <annevk>
the 401 error for that seems bogus btw; suggests all you need is Member access

[00:28:54.0000] <MikeSmith>
hsivonen: about meta generator, i'm wondering what you think about the idea of minting a new meta name value that generator tools could emit instead, for the explicit purpose of indicating that they're not providing alternative text for images

[00:38:38.0000] <Hixie>
annevk: spill the beans man!

[00:54:35.0000] <Ms2ger>
Good morning, #whatwg

[01:01:11.0000] <MikeSmith>
Ms2ger: bonan posttagmezon

[01:01:47.0000] <MikeSmith>
wow, is the Tracking WG really saying that UAs can't turn DNT on by default?

[01:07:23.0000] <annevk>
that's so silly

[01:10:20.0000] <Ms2ger>
That makes a lot of sense

[01:11:11.0000] <Ms2ger>
If you turn it on by default, it's just going to be ignored

[01:11:39.0000] <annevk>
not with the legislation that's behind it

[01:11:52.0000] <annevk>
and if you don't turn it on by default, it's only 1% of the users that's going to bother

[01:12:15.0000] <annevk>
the people that prolly already use tor or some such

[01:12:30.0000] <Ms2ger>
I heard a figure of 10% with Firefox users

[01:16:20.0000] <jgraham>
In reality the problem is that the concept is silly

[01:16:29.0000] <jgraham>
Nobody *wants* to be tracked

[01:18:06.0000] <annevk>
MikeSmith: could it be that I'm hardcoded to be on the public-web-notification list too?

[01:18:13.0000] <annevk>
MikeSmith: with annevk⊙oc that is

[01:18:13.0000] <MikeSmith>
oh

[01:18:16.0000] <MikeSmith>
yeah man

[01:18:17.0000] <MikeSmith>
sorry

[01:18:21.0000] <MikeSmith>
will fix that now

[01:18:21.0000] <annevk>
no worries

[01:19:15.0000] <MikeSmith>
annevk: OK, removed you now

[01:20:20.0000] <annevk>
sweet

[01:20:49.0000] <annevk>
MikeSmith: so provided other people in the notifications WG agree, there's something we can publish now...

[01:21:03.0000] <MikeSmith>
yeah

[01:21:17.0000] <MikeSmith>
thanks for putting the time into

[01:21:20.0000] <MikeSmith>
*into it

[01:21:44.0000] <MikeSmith>
it will make it much easier to get the charter extended

[01:31:27.0000] <Ms2ger>
annevk, np (for the bug)

[01:40:01.0000] <annevk>
guess I should fix that now

[01:42:01.0000] <Ms2ger>
I have to say I was surprised how many bugs these tests caught

[01:44:07.0000] <MikeSmith>
speaking of tests, http://w3c-test.org/html/tests/submission/Opera/microdata/001.html looks great in Firefox Nightly

[01:44:50.0000] <Ms2ger>
Well, yes, David fixed the test :)

[01:45:31.0000] <MikeSmith>
Ms2ger: oh

[01:45:43.0000] <MikeSmith>
that makes a lot of them fail in Opera now I guess

[01:46:22.0000] <MikeSmith>
Opera is now 274 Pass / 63 Fail

[01:49:31.0000] <Ms2ger>
/me wants the framework to support multiple tests in one file already

[01:49:45.0000] <Ms2ger>
And preferably without me doing any work for it

[01:50:09.0000] <MikeSmith>
heh

[01:50:15.0000] <MikeSmith>
that's the hard part

[01:51:40.0000] <jgraham>
Ms2ger: The W3C framework?

[01:51:46.0000] <Ms2ger>
Yeah

[01:52:09.0000] <jgraham>
Why do you care? (serious question)

[01:54:05.0000] <hsivonen>
bizarre. Windows 8 Consumer Preview gets security updates but not an automatic update to Release Preview

[01:54:28.0000] <hsivonen>
why do they bother supporting Consumer Preview instead of upgrading it to Release Preview

[01:54:31.0000] <hsivonen>
?

[01:56:56.0000] <MikeSmith>
hsivonen: in standalone context or as used in the the validator backend, if the vnu HTML parser can't otherwise determine a document's character encoding, does it always assume windows-1252 as the default encoding or does it user some other heuristics to try to choose a default?

[01:57:27.0000] <hsivonen>
MikeSmith: depends on the heuristic detector setting

[01:57:33.0000] <hsivonen>
/me looks up the API

[01:57:34.0000] <MikeSmith>
ah yeah

[01:58:46.0000] <MikeSmith>
hsivonen: I know  in the validator backend, it uses both the chardet code and the ICU code

[01:58:47.0000] <hsivonen>
http://about.validator.nu/htmlparser/apidocs/nu/validator/htmlparser/sax/HtmlParser.html#setHeuristics%28nu.validator.htmlparser.common.Heuristics%29

[01:59:16.0000] <MikeSmith>
hsivonen: thanks

[02:10:36.0000] <annevk>
Ms2ger: in our unreviewed spec algorithms? or in browsers?

[02:11:05.0000] <Ms2ger>
In browsers

[02:11:13.0000] <Ms2ger>
The spec bugs didn't really surprise me :)

[02:11:53.0000] <annevk>
I feel somewhat bad about them though

[02:15:31.0000] <Ms2ger>
Pff

[02:16:04.0000] <Ms2ger>
Look at parsing/serialization, you won't feel bad after that :)

[02:17:08.0000] <annevk>
not my work :p

[02:17:45.0000] <Ms2ger>
Exactly :)

[02:19:43.0000] <AryehGregor>
DNT is completely pointless anyway except from a political perspective.  It's a way to pressure websites by saying "See, you're going against the explicit wishes of users!" even though everyone knows perfectly well that the large majority of users want that regardless of whether they say so in their browser preferences.

[02:20:05.0000] <AryehGregor>
It becomes a much weaker signal if it's opt-out instead of opt-in, because then you have to make the political argument "You should only be doing this if users explicitly consent!"

[02:20:36.0000] <AryehGregor>
But it's only a political move anyway.  I believe someone in this channel once compared it to posting a sign on your car that says "Please do not break the windows."  Well, no kidding.

[02:21:37.0000] <AryehGregor>
If users are asked in the abstract whether they want to be tracked, of course they'll say no.  Per se, almost nobody wants to be tracked.  The question is whether that cost is worth the benefit of greater ad revenue and therefore better free services.

[02:21:59.0000] <AryehGregor>
DNT trumpets the cost without paying any attention to the benefit.

[02:23:16.0000] <AryehGregor>
Very easy for organizations like Microsoft or Mozilla that don't see that benefit directly, and only see it accruing to Google, who's their rival or semi-rival.

[02:23:53.0000] <AryehGregor>
But from the perspective of the web as a whole, ad revenue is what keeps half of it propped up, and things that increase ad revenue are really important.

[02:23:55.0000] <AryehGregor>
But anyway.

[02:24:11.0000] <AryehGregor>
Ms2ger, annevk: You should never, ever be surprised at finding mounds of browser bugs when you write tests.

[02:24:22.0000] <Ms2ger>
Clearly

[02:24:25.0000] <AryehGregor>
This is why, ideally, you should write tests in conjunction with the spec.

[02:24:43.0000] <AryehGregor>
Preferably tests that are thorough to the point of being arguably pathological.

[02:24:55.0000] <Ms2ger>
I'm doing my best :)

[02:25:00.0000] <AryehGregor>
Link?

[02:25:24.0000] <Ms2ger>
http://w3c-test.org/webapps/DOMCore/tests/submissions/Ms2ger/Node-replaceChild.html / http://w3c-test.org/webapps/DOMCore/tests/submissions/Ms2ger/Node-insertBefore.html

[02:25:39.0000] <jgraham>
Given the choice just have the pathological tests and not the ones for other cases :)

[02:25:54.0000] <Ms2ger>
jgraham, exactly :)

[02:26:24.0000] <jgraham>
Although of course it is harder to think of pathological cases

[02:28:43.0000] <annevk>
AryehGregor: when I found out you were able to write much much much more comprehensive tests than I ever dreamed of I sort of gave up writing new tests

[02:30:01.0000] <jgraham>
So AryehGregor is actually having a negative effect on testing by discouraging others from doing it

[02:30:04.0000] <jgraham>
:)

[02:30:35.0000] <annevk>
I wouldn't quite put it that way, but I think that's what happened subconsciously for me

[02:30:51.0000] <annevk>
There's also enough spec bugs to fix

[02:37:02.0000] <jgraham>
I wonder if the range tests we unusually easy to automate or if there is something we should learn to make other testsuites more comprehensive

[02:37:10.0000] <AryehGregor>
/me should write more DOM tests at some point

[02:37:30.0000] <AryehGregor>
jgraham, there should be no big difference between Range and most other DOM features.

[02:37:40.0000] <AryehGregor>
There are other classes of features that  can't be automated at all the same way, though.

[02:37:54.0000] <AryehGregor>
I wrote similar types of tests for Selection and HTML attribute reflection, FWIW.

[02:37:56.0000] <jgraham>
Yeah. I guess at the moment I am mostly not writing tests for DOM features per-se

[02:38:05.0000] <AryehGregor>
There are lots of requirements that are much harder to test.

[02:38:20.0000] <jgraham>
More like script scheduling, navigation, document loading, etc.

[02:38:36.0000] <AryehGregor>
Like, say, requirements about loading web pages require a basically different approach because the tests can't be self-contained.

[02:38:46.0000] <AryehGregor>
Yeah, those things are harder.

[02:38:50.0000] <jgraham>
I don't really know how to do better than "try to think of specific evil cases" there

[02:38:57.0000] <AryehGregor>
DOM stuff is easy because you can do it all in JS.

[02:39:02.0000] <jgraham>
Right

[02:39:14.0000] <AryehGregor>
Likewise, anything involving rendering is automatically harder.

[02:39:46.0000] <AryehGregor>
Although better reftesting frameworks could alleviate that.

[02:40:12.0000] <AryehGregor>
Mozilla's mochitests (test pages in JS) can do reftesting too.

[02:45:09.0000] <annevk>
Ms2ger: 1. doctype is or is following child 2. child is doctype or doctype is following child

[02:45:22.0000] <annevk>
I guess 2

[02:45:36.0000] <annevk>
verbose requirements are verbose :(

[02:46:10.0000] <annevk>
hmm

[02:46:16.0000] <annevk>
the usage of either would not be correct either

[02:46:18.0000] <annevk>
man...

[02:49:33.0000] <AryehGregor>
"inclusively following"!

[02:50:50.0000] <annevk>
AryehGregor: should we add it?

[02:50:56.0000] <AryehGregor>
Eh.

[02:50:58.0000] <AryehGregor>
Not sure.

[02:51:12.0000] <annevk>
instead I'll add a note about it in the source

[02:51:25.0000] <annevk>
in case more of this comes up

[02:52:05.0000] <AryehGregor>
In math, the same kind of thing comes up with "less than".  It can mean either "strictly less than" or "less than or equal to".  People are usually lazy and don't specify.

[02:52:16.0000] <AryehGregor>
Because it's such a common phrase and it's awkward to make it longer.

[02:52:27.0000] <AryehGregor>
The "<" symbol is used ambiguously too.

[02:53:23.0000] <AryehGregor>
A lot of times people will use ⪇ if they really mean "and not equal to".

[02:53:38.0000] <AryehGregor>
(Unicode also has ≨, but I don't think I've seen that used.)

[02:53:47.0000] <annevk>
:)

[02:56:00.0000] <annevk>
aah fuck

[02:56:12.0000] <annevk>
Ms2ger: does this not apply to replace?

[02:56:50.0000] <annevk>
no because there the child is replaced

[02:56:53.0000] <annevk>
aah

[02:57:01.0000] <annevk>
so this was the result of copypasta most likely

[02:57:13.0000] <annevk>
and I just "fixed" the wrong set of steps

[03:21:42.0000] <AryehGregor>
Yay, it looks like sanity is finally prevailing vis-a-vis prefixing: http://blogs.msdn.com/b/ie/archive/2012/06/06/moving-the-stable-web-forward-in-ie10-release-preview.aspx

[03:22:01.0000] <AryehGregor>
That looks a lot like dbaron's recent proposal for Mozilla.

[03:30:05.0000] <jgraham>
AryehGregor: What are the requirements you had in mind for "better frameworks for reftesting"

[03:30:13.0000] <jgraham>
or what does Mochitest do?

[03:30:59.0000] <Ms2ger>
We have canvas.drawWindow

[03:31:54.0000] <jgraham>
That doesn't tell me much :)

[03:32:08.0000] <jgraham>
(I don't know all the implementation details of your reftest setup)

[03:33:02.0000] <AryehGregor>
jgraham, basically I just want a page to be able to take multiple snapshots that it can compare, instead of requiring one test per window load.

[03:33:11.0000] <AryehGregor>
I want one page that can do thousands of reftests per second.

[03:33:16.0000] <AryehGregor>
That's not doable if each one is a page load.

[03:36:46.0000] <jgraham>
Generating the ref and the test in realtime? I guess that could work

[03:38:04.0000] <jgraham>
I think in principle we could do that via watir, but it is a bit evil. And we were going to have a reftest type where the ref and the test were both elements in a single document, but we eventually ditched that idea (which I think was a very good move)

[04:02:15.0000] <hsivonen>
"Commercial video" seems to require all the bad things

[04:08:17.0000] <annevk>
it's like the fonts debacle, but worse

[04:09:30.0000] <AryehGregor>
Because normal people actually care about video, unlike fonts.

[04:10:51.0000] <jgraham>
Isn't that code for "because video is a much more profitable industry than fonts"?

[04:11:15.0000] <annevk>
prolly because all of their DRM :p

[04:12:10.0000] <AryehGregor>
jgraham, well, they're related, obviously, but not intrinsically so.  There are unprofitable things that people are very concerned about, like privacy; and profitable things people don't care for at all, like lawyers.

[04:12:20.0000] <AryehGregor>
In this case they coincide, yes.

[04:16:21.0000] <AryehGregor>
Why do ranges use PRInt32 instead of PRUint32 for offsets?

[04:16:27.0000] <AryehGregor>
Argh!

[04:16:30.0000] <AryehGregor>
Wrong channel again.

[04:16:33.0000] <AryehGregor>
/me hides from Ms2ger 

[04:16:33.0000] <hsivonen>
AryehGregor: my guess is that this MPEG-2 thing is about old terrestrial to cable relay regulations that prohibit recompression

[04:16:51.0000] <Ms2ger>
Going to blame hsivonen now?

[04:16:55.0000] <Ms2ger>
AryehGregor, DOM2

[04:17:00.0000] <AryehGregor>
Hmm.

[04:19:07.0000] <hsivonen>
FWIW, all normal people who are aware of the relay regulations tend to think the regulations are dumb

[04:21:44.0000] <jgraham>
AryehGregor: /ignore Ms2ger should solve all your problems :)

[04:32:22.0000] <smaug____>
MikeSmith: how can I change my w3 bugzilla email address

[04:32:45.0000] <smaug____>
"Name and Password" is missing the normal bugzilla email field

[04:34:09.0000] <MikeSmith>
smaug____: I think you can't but I can

[04:34:48.0000] <MikeSmith>
if it's normally exposed to users but W3C bugzilla does not expose it, I don't know why it's not

[04:35:20.0000] <smaug____>
it is other bugzilla instances I use

[04:35:25.0000] <smaug____>
only W3C doesn't have it

[04:35:46.0000] <MikeSmith>
lemme see if there's some global admin setting I can flip

[04:36:13.0000] <MikeSmith>
bugzilla engrievens me

[04:37:39.0000] <MikeSmith>
smaug____: please try again from you preferences now

[04:37:51.0000] <MikeSmith>
I found the allowemailchange admin setting

[04:38:02.0000] <smaug____>
MikeSmith: ah, now it is there

[04:38:12.0000] <MikeSmith>
cool

[04:38:16.0000] <smaug____>
thanks

[04:38:20.0000] <MikeSmith>
np

[05:02:53.0000] <hsivonen>
there's clearly a world view difference between browser supporting X, Y and Z and publishers deal with it and publishers already having infrastructure for A, B and C and browser dealing with it

[05:03:27.0000] <jgraham>
Hmm, how are @defer and @async supposed to interact with createContextualFragment?

[05:04:21.0000] <hsivonen>
jgraham: IIRC, as if the nodes were created with createElement, but my recollection might fail me

[05:05:03.0000] <jgraham>
Seems to be waht gecko does, but I haven't found the spec-wise justification quite yet

[05:05:22.0000] <jgraham>
(haven't looked hard yet either)

[05:05:54.0000] <hsivonen>
jgraham: that was an area where Firefox had to go ahead of Hixie, so it's possible stuff got forgotten from spec

[05:07:00.0000] <hsivonen>
jgraham: based on another channel, spec-based justification will appear soon :-)

[05:07:20.0000] <jgraham>
There are other channels?

[05:07:22.0000] <jgraham>
;)

[05:07:40.0000] <hsivonen>
#developrs on irc.mozilla.org

[05:07:45.0000] <hsivonen>
#developers even

[05:08:07.0000] <jgraham>
So I should assume the spec(s) are wrong here?

[05:08:19.0000] <hsivonen>
yes

[05:08:27.0000] <jgraham>
'K

[05:08:29.0000] <jgraham>
Thanks

[05:08:34.0000] <Ms2ger>
Appeared

[05:09:26.0000] <hsivonen>
Ms2ger: thanks

[05:09:37.0000] <Ms2ger>
Np

[05:10:21.0000] <jgraham>
Takk

[05:35:35.0000] <jgraham>
Ms2ger: I seem to recall you had some comment about the timout patch for testharness.js, but I don't recall what it eas

[05:35:39.0000] <jgraham>
*was

[05:35:46.0000] <Ms2ger>
Yes

[05:35:58.0000] <Ms2ger>
Why you haven't landed it yet :)

[05:36:39.0000] <jgraham>
I guess landing what I already have works and if you did have another comment we can address it later

[05:36:58.0000] <Ms2ger>
If I had another comment, I can't remember what it was

[05:49:09.0000] <jgraham>
Ms2ger: Pushed

[05:49:19.0000] <Ms2ger>
Thanks

[05:49:40.0000] <jgraham>
Also, who thought that hg's merge conflict ui was acceptable

[05:49:51.0000] <jgraham>
hg resolve -m -> mark file as resolved

[05:50:12.0000] <AryehGregor>
jgraham, who thought that anything about hg was acceptable?

[05:50:12.0000] <jgraham>
hg resolve -> undo the merge you just did and go back to the unmerged state

[06:14:44.0000] <MikeSmith>
https://twitter.com/fantasai/status/210595248638922752 ah-hoo-ga

[06:18:06.0000] <MikeSmith>
twitter would be way more fun if you could mod other people's tweets up and down

[06:18:34.0000] <MikeSmith>
or if twitter had a poop button to let you poop on tweets

[06:24:21.0000] <karlcow>
/me read poo on tweets and thought it was already the essence of twitter

[06:42:13.0000] <hsivonen>
MikeSmith: RT is mod up

[06:42:39.0000] <hsivonen>
MikeSmith: "up" as in more visible that is

[06:42:44.0000] <MikeSmith>
yeah

[06:43:09.0000] <MikeSmith>
but would be great to have a down too

[06:44:10.0000] <hsivonen>
jgraham: does there exist an hg-compatible visual merge tool for Linux that doesn't depend on the whole of KDE yet?

[06:44:41.0000] <jgraham>
hsivonen: No idea, I mostly resolve mege conflicts by hand

[06:45:09.0000] <jgraham>
I have a feeling that this makes me A Bad Person, but merge tools generally confuse the hell out of me

[06:45:34.0000] <jgraham>
Whereas emacs + >>>> ==== <<<< is rather simple

[06:46:24.0000] <jgraham>
(does meld not work with hg?)

[06:46:36.0000] <hsivonen>
I don't know what meld is

[06:47:04.0000] <jgraham>
http://meldmerge.org/

[06:47:40.0000] <hsivonen>
thanks

[06:48:09.0000] <hsivonen>
I have resolved merge conflicts from .rej even since it was discovered that hg pull --rebase corrupted the repo

[06:48:24.0000] <hsivonen>
before that I used kdiff3

[06:49:35.0000] <jgraham>
The idea of rebase corrupting the repo is terrifying

[06:50:37.0000] <jgraham>
(rebasing local work seems like a fundamental operation in a dvcs to me)

[06:53:00.0000] <zewt>
i've avoided looking at hg; the sudden fragmentation in versioning tools (git, hg, bzr) makes me unwilling to spend time on it

[06:54:04.0000] <zewt>
also, that was a fascinating spambug

[06:54:10.0000] <annevk>
MikeSmith: I like wycats' reply to fantasai

[06:54:54.0000] <jgraham>
zewt: The situation is rather simple. bzr should be ignored unless you are working on gnome. hg is like git but with an initially shallower, but quite quickly steeper, learning curve.

[06:55:05.0000] <MikeSmith>
annevk: yeah

[06:57:40.0000] <MikeSmith>
annevk: so can we go straight to LCWD with the Notifications spec, or do you want to just do another normal WD first?

[06:57:41.0000] <zewt>
git sort of has the feel of cvs, in that it seems like five or ten years down the line there'll be enough experience with it to make something like it that isn't clumsy and annoying (eg. svn)

[06:58:04.0000] <annevk>
MikeSmith: prefer WD first

[06:58:10.0000] <MikeSmith>
annevk: are there any remaining issues unresolved now? (it seems like you solved the BIDI one)

[06:58:13.0000] <MikeSmith>
annevk: OK

[06:58:30.0000] <annevk>
MikeSmith: then couple of weeks later a LC unless people suddenly come up with issues (they usually do if something is published after such a long time with changes)

[06:58:54.0000] <MikeSmith>
ah yeah

[06:58:56.0000] <MikeSmith>
true that

[06:58:57.0000] <MikeSmith>
OK

[06:59:09.0000] <jgraham>
zewt: If you think svn isn't clumsy and annoying you have bigger problems than I can help you with :)

[06:59:32.0000] <zewt>
svn is very clean (especially compared to everything else available :)

[06:59:51.0000] <jgraham>
svn makes me want to kill kittens

[07:00:27.0000] <zewt>
the best thing about svn is how it killed cvs dead, and cvs needed killing badly

[07:01:21.0000] <jgraham>
Being an order of magnitude better than cvs doesn't make up for being an order of magnitude worse than any dvcs I have used

[07:01:36.0000] <zewt>
it's orders of magnitude cleaner than git, that's for sure

[07:01:50.0000] <zewt>
(i use git because it's what everyone else uses; that doesn't mean I particularly like it)

[07:02:46.0000] <zewt>
now if you want headaches, try git-svn :)

[07:03:10.0000] <zewt>
(which, surprisingly, does work when you need to bridge that gap ... but it's not a whole lot of fun)

[07:03:33.0000] <annevk>
hsivonen: heh, I think you found the email after which MIME types went to die

[07:03:58.0000] <jgraham>
I am, on the basis that local commits > impedance mismatch pain

[07:04:17.0000] <annevk>
hsivonen: back in the days when timbl was not lost to the semantic web

[07:29:47.0000] <annevk>
need more memified commit messages

[07:36:05.0000] <hsivonen>
annevk: either MS is willing to throw DNT under the bus for short-term feel-good press or they really calculate that Chrome won't ship with DNT defaulting to enabled so that they can really argue that the choice of product is a true proxy for setting the pref

[07:38:40.0000] <jgraham>
I though MS backed down on the DNT default

[07:40:09.0000] <annevk>
hsivonen: I think it's very strange they're trying this technical solution to a non-technical problem at all. It's false privacy.

[09:31:40.0000] <MikeSmith>
OK, HTML WG called completed

[09:31:44.0000] <MikeSmith>
end of a long day

[09:31:56.0000] <MikeSmith>
/me wanders off to ingest some bath salts

[10:12:24.0000] <TabAtkins>
hsivonen: Why wouldn't <template> work with the XHTML serialization?

[10:14:25.0000] <Ms2ger>
TabAtkins, if you make the children not end up in the DOM?

[10:15:32.0000] <TabAtkins>
But XHTML parses into a DOM.

[10:19:51.0000] <TabAtkins>
Ms2ger: Am I missing something?

[10:20:05.0000] <Ms2ger>
Either you or me

[10:20:15.0000] <TabAtkins>
Damn, that's unhelpful then.

[10:20:42.0000] <TabAtkins>
Is the problem that you can't write it in XHTML, that it won't serialize to XHTML, or that it won't parse into an infoset?

[11:15:20.0000] <karlcow>
TabAtkins: if a browser keeps the unprefixed version of a CSS property in its engine, we are back to step 1. Some authors will not bother and put the -webkit- version only as it is happening now.

[11:19:38.0000] <TabAtkins>
karlcow: ...and those authors' pages won't work on other browsers.  That group very quickly becomes an extreme minority.

[11:22:16.0000] <karlcow>
well, then we respectfully disagree.

[11:23:08.0000] <TabAtkins>
There's not really anything to disagree about.  This is a factual matter, because we've gone through the "add unprefixed version, keep prefixed version" dance several times already.  New prefix usage drops to a trickle.

[11:23:46.0000] <TabAtkins>
I can't cite data showing this, though.

[11:25:41.0000] <karlcow>
We disagree, because a user doesn't care about minority. The site is working or not working and this is what matters. But you know the factual matter and I know it. We just don't agree on its importance.

[11:26:40.0000] <TabAtkins>
The user also doesn't care about politics if the page they visit stops working properly, because it's an unmaintained page written before unprefixing, and uses only the prefixed versions.

[11:44:07.0000] <jgraham>
Hmm, the only rule is that if something is needed by the platform everyone should be free to implement it

[11:44:33.0000] <jgraham>
If content requires -webkit- everyone should implement it until that is no longer the case, perhaps forever

[11:47:38.0000] <hsivonen>
jgraham: [citation needed] for MS backing down on DNT default

[11:48:02.0000] <hsivonen>
TabAtkins: I thought the template spec said XML to DOM mapping won't change

[11:58:42.0000] <jgraham>
hsivonen: Oh it seems I misunderstood and thought that something phrased as fact was based in more than speculation

[12:02:30.0000] <jgraham>
I'm not sure that there's a huge difference between them setting the default and setting the homepage to read "IE 10: Better privacy controls. [Click here] to tell advertisers not to track you on the internet"

[12:14:29.0000] <TabAtkins>
jgraham: I agree. I also think we should engineer the process towards a lesser chance of needing to implement prefixes forever.

[12:14:56.0000] <TabAtkins>
hsivonen: Pretend I'm dumb (because I am). What's your objection on those grounds?

[12:24:31.0000] <jgraham>
TabAtkins: We should realise that prefixes are a failed experiment and eliminate them from the process :)

[12:24:43.0000] <TabAtkins>
I'm down with dbaron's plan.

[12:26:54.0000] <jgraham>
The one where we get two interoperable implementations in testing branches before anything is turned on in stable?

[12:27:15.0000] <TabAtkins>
That's one of the paths, yes.

[13:03:09.0000] <Hixie>
prefixes aren't necessary if the spec editor commits to making sure the spec never specs something incompatible with anything shipped

[13:03:27.0000] <Hixie>
if the semantics really need to change, it's just a matter of also changing the names at the same time

[13:03:31.0000] <Ms2ger>
A spec editor? Where?

[13:10:55.0000] <Hixie>
Ms2ger: if there's no spec editor, prefix or no prefix doesn't matter

[13:41:25.0000] <TabAtkins>
Hixie: I would think that a minor difference in parsing SVG <script> over time is better than a permanent minor difference in parsing SVG <script> versus HTML <script>.

[13:41:59.0000] <shepazu>
+1

[13:43:03.0000] <TabAtkins>
In terms of confusion to authors, at least.

[13:44:16.0000] <TabAtkins>
Especially since I don't even know what the difference between them is.

[13:44:32.0000] <TabAtkins>
Hasn't ever affected any scripts I've written in SVG.

[13:44:45.0000] <TabAtkins>
Nor styles, since I presume whatever the problem is is consistent for <style>.

[13:46:01.0000] <Hixie>
they're different

[13:46:08.0000] <TabAtkins>
Well that's just dumb.

[13:46:12.0000] <Hixie>
with <style> i think the only different is <![CDATA[ ]]> blocks

[13:46:24.0000] <Hixie>
with <script> the differences are more subtle and affect things like document.write()

[13:46:34.0000] <Hixie>
the model used by SVG <script> in HTML is better than the model used by HTML <script> in HTML

[13:46:38.0000] <Hixie>
(significantly simpler)

[13:46:46.0000] <Hixie>
(closer to what XML does)

[13:47:34.0000] <shepazu>
Hixie: but will HTML script developers know about the differences? will it trip them up to code script for SVG?

[13:48:06.0000] <TabAtkins>
Heh, then maybe we should just make all scripts inserted by document.parse() be svg scripts. ^_^

[13:48:09.0000] <Hixie>
there are many disadvantages to the current model, that's why i was against it. but that river was crossed years ago.

[13:48:31.0000] <Hixie>
TabAtkins: we just shouldn't have document.parse() :-P

[13:48:46.0000] <Hixie>
(and certainly shouldn't let <script> blocks get executed by it)

[13:50:14.0000] <TabAtkins>
That doesn't help <template> with script in it, i suppose.

[13:50:23.0000] <Hixie>
<template> shouldn't execute script either

[13:50:30.0000] <Hixie>
not sure what should happen when you instantiate them

[13:50:32.0000] <Hixie>
but probably nothing either

[14:07:26.0000] <TabAtkins>
Dunno.  If scripts dont' run, then it's a non-issue and we can just say they're all html script elements.

[14:07:30.0000] <TabAtkins>
But <style> is still relevant.

[14:20:52.0000] <Hixie>
seems weird to me that we'd want to allow <svg><![CDATA[...]]> but not <svg><style><![CDATA[...]]>

[14:21:01.0000] <Hixie>
given that it'd work everywhere else in svg

[14:26:36.0000] <TabAtkins>
It also seems weird to me that it actually matters which syntax we choose for <style> elements.  Life is weird like that.

[14:52:22.0000] <Hixie>
TabAtkins: yeah well you'll notice i don't care much about the specifics, i just don't want the spec to churn :-)

[16:00:27.0000] <TabAtkins>
Hixie: What's your definition of "churn" here?  If it's "change, at all", then I'm sad.

[16:01:38.0000] <Hixie>
by "churn" i mean "change from one workable solution to another workable solution", more than just any change at all

[16:01:46.0000] <Hixie>
i mean, i wouldn't call a clear bug fix "churn"

[16:01:49.0000] <Hixie>
if you see what i mean

[16:02:04.0000] <Hixie>
there's also the issue of implementations -- how many, how stable, etc

[16:02:06.0000] <tantek>
churn = change without noticeable improvement?

[16:02:23.0000] <Hixie>
"noticeable" is maybe too little an adjective

[16:02:27.0000] <Hixie>
"significant", maybe

[16:02:31.0000] <Hixie>
or "worthy"

[16:03:04.0000] <Hixie>
focusing on the word "churn" is unhelpful to describing my overall motivations here, i used the word maybe too loosely

[16:03:28.0000] <Hixie>
my core point was that change has a cost, and we should make sure to do better than break even

[16:03:39.0000] <Hixie>
(especially considering opportunity cost)

[16:05:08.0000] <hober>
Hixie: thanks for that email :)

[16:05:32.0000] <Hixie>
dude that thread was some level of special

[16:05:41.0000] <hober>
agreed

[16:05:47.0000] <Hixie>
your CP has a diff for kitten's sake

[16:06:06.0000] <hober>
:)

[16:06:13.0000] <tantek>
Hixie - you still pay attention to CPs? ;)

[16:06:53.0000] <Hixie>
no, i pay attention to hober :-)

[16:06:57.0000] <Hixie>
he cc'ed me

[16:11:14.0000] <jwalden>
for any Opera folk around: you seem to be implementing |new Date(new String("2012-01-31T00:00:00.000Z")).valueOf()| wrong, it should return 1327968000000 but instead returns NaN

[16:12:14.0000] <Hixie>
ok i just spent five minutes trying to understand why someone would want <a scoped>

[16:12:21.0000] <Hixie>
only to realise that i misread their e-mail

[16:12:34.0000] <Hixie>
they were saying <link rel=stylesheet scoped>, not "link scoped"

[16:12:40.0000] <gsnedders>
jwalden: Known bug

[16:14:38.0000] <TabAtkins>
Hixie: Were they asking for <link rel=stylesheet> outside of <head> too?

[16:15:02.0000] <Hixie>
yes

[16:15:08.0000] <Hixie>
though this e-mail is giving me a headhache

[16:15:25.0000] <Hixie>
(http://lists.w3.org/Archives/Public/public-whatwg-archive/2012Mar/0002.html)

[16:15:35.0000] <jwalden>
gsnedders: cool; it is also known to Mozilla :-D but that's changing today \o/

[16:15:41.0000] <jwalden>
("This far and no further!")

[16:15:52.0000] <Hixie>
reading through it for like the fifth time it's starting to make sense

[16:16:06.0000] <Hixie>
(my fault, not theirs, i think)

[16:16:20.0000] <TabAtkins>
Still, that's just <style scoped>@import "foo.css";</style>

[16:16:29.0000] <Hixie>
yeah, you have an e-mail later in the thread on that

[16:16:32.0000] <gsnedders>
jwalden: Also, can we just get date parsing in some spec? >_>

[16:16:35.0000] <TabAtkins>
Heh, kk.

[16:16:43.0000] <jwalden>
gsnedders: :-)

[16:16:57.0000] <Hixie>
btw, the way people refer to attributes as @foo or element[foo] really confuses me

[16:17:19.0000] <Hixie>
e.g. i read element[foo] _as a selector_, not as <element foo>

[16:17:25.0000] <gsnedders>
jwalden: And work out what's happening with __proto__, etc., etc., etc.

[16:17:27.0000] <TabAtkins>
@ is pronounced "at", which is clearly short for "attribute".

[16:17:28.0000] <Hixie>
what is so hard about writing foo="" or <element foo>?

[16:17:39.0000] <Hixie>
@ is the address operator :-P

[16:17:41.0000] <jwalden>
gsnedders: the ISO subset microformat is the current solution to that; it's a longer-termish solution, but I think it's workable enough

[16:17:45.0000] <TabAtkins>
And using selectors as a shorthand for creating elements is common enough.

[16:17:58.0000] <Hixie>
i agree that it's common

[16:17:59.0000] <jwalden>
& is the address operator :-P

[16:18:02.0000] <gsnedders>
jwalden: And drop everything else? That's not web compatible.

[16:18:04.0000] <TabAtkins>
foo="" implies the empty-string value, which isn't always what you want.

[16:18:05.0000] <Hixie>
(@foo comes from xpath)

[16:18:13.0000] <Hixie>
foo="..."

[16:18:17.0000] <jwalden>
gsnedders: not drop everything, just have people stop using the old junk

[16:18:25.0000] <Hixie>
i think 'the foo="" attribute' is clear

[16:18:26.0000] <TabAtkins>
That's like, 5 more characters than @foo

[16:18:31.0000] <gsnedders>
jwalden: If we're not dropping it, we should spec it.

[16:18:51.0000] <tantek>
yeah Twitter took over "@" as a prefix. XPath loses.

[16:18:51.0000] <Hixie>
TabAtkins: well we wouldn't want to run out of _characters_ :-P

[16:18:54.0000] <jwalden>
gsnedders: disagree; but maybe it could be dropped in the longer term

[16:19:01.0000] <TabAtkins>
Hixie: Exactly.

[16:19:02.0000] <jwalden>
anyway

[16:19:13.0000] <jwalden>
fundamentally I don't think you spec ridiculous blatherskite

[16:19:17.0000] <jwalden>
we probably disagree on this point

[16:19:18.0000] <tantek>
Hixie, I think 'foo' attribute is fine

[16:19:22.0000] <TabAtkins>
The confusing part is when discussion of attributes is mixed with discussion of at-rules.

[16:19:29.0000] <tantek>
as is 'float' property

[16:19:35.0000] <gsnedders>
jwalden: Maybe I'm just tired of reverse-engineering others whenever we have yet another site compat. bug because of some weird date parsing edge-case.

[16:19:45.0000] <TabAtkins>
jwalden: You spec ridiculous blatherskite iff the web depends on it.

[16:20:06.0000] <jwalden>
TabAtkins: yeah, we disagree on this point, at the edges

[16:20:10.0000] <Hixie>
tantek: that works too (though i prefer to use that for css props and values)

[16:20:12.0000] <tantek>
TabAtkins - I had to specifically exclude @import @charset @media @font-face from my plain text auto-linker.

[16:20:42.0000] <TabAtkins>
jwalden: Do you mean that we disagree about how many sites constitute "the web depends on it"?  Or something else?

[16:20:54.0000] <tantek>
Hixie, in general, single-quotes for standards terms seems to work pretty well, when followed up by what kind of term it is if not obv from context.

[16:21:04.0000] <tantek>
*single-quoting

[16:21:09.0000] <Hixie>
TabAtkins: in this particular e-mail, the guy uses link[scoped] about 15 lines above an actual attribute selector

[16:21:28.0000] <TabAtkins>
Hixie: Get a better context-aware parser.

[16:21:38.0000] <tantek>
Hixie, it's probably an XML/XPath/Java person I'm guessing

[16:21:45.0000] <tantek>
they've got odd habits

[16:22:34.0000] <Hixie>
TabAtkins: you mean take a break? no way! :-P

[16:22:50.0000] <Hixie>
tantek: nah xpath people don't use css selectors :-P

[16:23:07.0000] <tantek>
Hixie - good point :)

[16:23:15.0000] <jwalden>
TabAtkins: partly that truly awful stuff, if you can not-spec it long enough, can die if only you let it; that may not matter for date parsing, but I am as yet unconvinced that the ISO format is an unworkable way to give a format that will Just Work

[16:23:20.0000] <jwalden>
anyway

[16:23:33.0000] <jwalden>
this is probably not worth arguing about

[16:23:51.0000] <kennyluck>
foo="" is just always confusing. foo="…" might me interpreted as not including the empty string as a value. It itself is too lengthy as compared to @foo anyway.

[16:23:52.0000] <kennyluck>
s/me/be/

[16:27:29.0000] <Hixie>
@foo is just wrong imho because there's no @ anywhere near the attribute either in HTML or the DOM :-)

[16:28:13.0000] <TabAtkins>
Silly CSS 2.1, your grammar has long-standing silly errors.

[16:28:53.0000] <kennyluck>
TabAtkins, and yet I have no idea why you want to borrow the never used <value> to css3-variables.

[16:29:27.0000] <TabAtkins>
kennyluck: I don't want to, but it's necessary right now.  What I want to do is define <value> in Syntax and use that.

[16:30:15.0000] <TabAtkins>
Or do something similar, like saying that it's literally anything that successfully parses as a property value.

[16:30:24.0000] <TabAtkins>
With Syntax making that unambiguous.


2012-06-08
[17:41:41.0000] <MikeSmith>
have to pipe all of Mark Watson's e-mail public-html messages to "lynx -stdin -force_html" in order to figure out which parts are where he's quoting somebody and which parts he's saying himself

[17:45:03.0000] <MikeSmith>
well, need to do it for other messages to the list

[17:45:24.0000] <MikeSmith>
it's just that Mark's messages are ones that I actually want to read

[20:43:57.0000] <kennyluck>
"In this case, it seems entirely reasonable for other browsers (e.g., Firefox) to want to implement this feature.  By putting it on navigator, we invite them to implement it as well."

[20:44:27.0000] <zewt>
netscape navigator? heh

[21:27:24.0000] <mrofsucof>
Hi... If a page gets opened in a hidden iframe by an anchor getting clicked, does its style become visited?

[23:44:40.0000] <MikeSmith>
"Zed Shaw out-Crockfords Crockford"

[00:01:23.0000] <hsivonen>
MikeSmith: that's a good way to put it

[00:02:43.0000] <hsivonen>
so I generated a public key pair using msys ssh and then copied the .pub file's line to .ssh/authorized_keys on the server

[00:02:49.0000] <hsivonen>
doesn't let me log in

[00:02:58.0000] <hsivonen>
where do I need to look?

[00:03:25.0000] <hsivonen>
Permission denied (publickey).

[00:03:31.0000] <MikeSmith>
hsivonen: you did ssh -v -v on the client?

[00:03:38.0000] <hsivonen>
no

[00:04:11.0000] <MikeSmith>
when I have problems I find that usually gives some worthwhile troubleshooting info

[00:04:49.0000] <MikeSmith>
hsivonen: also, you know it won't work if you don't have the perms set your .ssh directory on the serve

[00:04:57.0000] <MikeSmith>
and files in there

[00:05:19.0000] <MikeSmith>
all need to be 600

[00:06:34.0000] <hsivonen>
the other keys there work

[00:07:08.0000] <rniwa>
sigh... why are we keep changing microdata API spec :(

[00:07:26.0000] <Ms2ger>
rniwa, because it's bogus :)

[00:08:40.0000] <hsivonen>
MikeSmith: the troubleshooting info just looks like the server didn't accept the key

[00:08:49.0000] <MikeSmith>
ok

[00:08:51.0000] <hsivonen>
MikeSmith: that, or the client offered the private key as the public key

[00:08:58.0000] <MikeSmith>
eh?

[00:09:02.0000] <hsivonen>
which would be terrible default config

[00:09:03.0000] <MikeSmith>
that would be weird

[00:09:36.0000] <hsivonen>
Offering public key: /home/Henri/.ssh/id_rsa

[00:09:43.0000] <hsivonen>
I hope that means really offering .pub

[00:16:06.0000] <hsivonen>
ssh-add -l says could not open connection to your authentication agent

[00:16:59.0000] <hsivonen>
the client side seems right

[00:17:16.0000] <MikeSmith>
hsivonen: you did eval `ssh-agent` already I guess

[00:17:24.0000] <hsivonen>
do I need to somehow make the server refresh authorized_keys changes? I don't remember having to do that before

[00:17:29.0000] <MikeSmith>
no

[00:17:49.0000] <MikeSmith>
you definitely don't need to do that

[00:19:27.0000] <hsivonen>
MikeSmith: I don't know what to do with the output of ssh-agent

[00:19:40.0000] <MikeSmith>
you need to eval it

[00:20:00.0000] <annevk>
rniwa: it changed?

[00:20:01.0000] <MikeSmith>
but anyway if you got that wrong you would still be able to ssh to that host

[00:20:10.0000] <rniwa>
annevk: yeah, it was clarification

[00:20:16.0000] <rniwa>
annevk: but nonetheless affected us

[00:20:25.0000] <MikeSmith>
hsivonen: the agent only affects forwarding once your on the remote host, right?

[00:20:29.0000] <Ms2ger>
I know that bz filed half a dozen bugs on it  too

[00:20:30.0000] <rniwa>
annevk: elements with propitem="" should not be listed in the list :(

[00:20:41.0000] <hsivonen>
MikeSmith: now ssh-add -l says the agent has no identities

[00:20:46.0000] <rniwa>
annevk: anyway, i'm going to ask the contributor who has been implementing microdata API in webkit

[00:20:48.0000] <hsivonen>
MikeSmith: I have no clue what the agent does

[00:20:51.0000] <rniwa>
annevk: to submit our tests to w3c

[00:21:03.0000] <rniwa>
annevk: since we already have a quite few that are really good :)

[00:21:07.0000] <annevk>
I think Opera has submitted a bunch of tests already

[00:21:24.0000] <Ms2ger>
Yeah

[00:21:39.0000] <Ms2ger>
And David improved them when he implemented it in Gecko

[00:21:42.0000] <MikeSmith>
hsivonen: "eval $(ssh-agent) && ssh-add"

[00:21:44.0000] <annevk>
http://w3c-test.org/html/tests/submission/Opera/microdata/001.html

[00:21:50.0000] <annevk>
oh I see

[00:21:55.0000] <annevk>
Opera fails tests too now :/

[00:22:03.0000] <rniwa>
annevk: oh nice!

[00:22:10.0000] <rniwa>
annevk: we should import those.

[00:23:52.0000] <hsivonen>
MikeSmith: thanks, but permission still denied

[00:24:13.0000] <hsivonen>
MikeSmith: and the client debug output suggests it was offering the right key anyway

[00:24:20.0000] <MikeSmith>
ok

[00:24:22.0000] <Ms2ger>
rniwa, review appreciated :)

[00:24:53.0000] <hsivonen>
aargh. why do things that usually just work have to fail mysteriously?

[00:26:13.0000] <rniwa>
Ms2ger: review which?

[00:26:20.0000] <Ms2ger>
The test

[00:26:26.0000] <rniwa>
Ms2ger: opera's?

[00:26:35.0000] <rniwa>
Ms2ger: I've asked the contributor to import 001.html

[00:26:40.0000] <Ms2ger>
Yeah

[00:26:46.0000] <rniwa>
Ms2ger: so presumably he's going to run it and verify that it works in webkit :)

[00:28:27.0000] <MikeSmith>
hsivonen: does the "ssh -v -v" output ever get to the point of saying "debug2: we sent a publickey packet, wait for reply"

[00:29:02.0000] <hsivonen>
MikeSmith: yes

[00:29:25.0000] <MikeSmith>
hsivonen: but not to "debug1: Server accepts key: ..."

[00:29:32.0000] <hsivonen>
MikeSmith: no

[00:29:55.0000] <MikeSmith>
that sucks

[00:30:04.0000] <MikeSmith>
so yeah, it seems like the client side is fine

[00:30:07.0000] <hsivonen>
MikeSmith: next it proceeds to trying id_dsa which doesn't exist

[00:30:12.0000] <hsivonen>
MikeSmith: yeah

[00:30:45.0000] <hsivonen>
MikeSmith: the server side is OK with keys from Ubuntu's OpenSSH, Mac OS X's OpenSSH and irssiconnectbot

[00:31:44.0000] <rniwa>
Ms2ger, annevk: arkos is the one who has been implementing microdata API in webkit.

[00:31:51.0000] <Ms2ger>
Hi arkos!

[00:31:55.0000] <MikeSmith>
hsivonen: I guess you don't have root on the server? Can't tail /var/log/auth.log ?

[00:31:58.0000] <rniwa>
Ms2ger, annevk: he's from Motorola and has been writing excellent patches :D

[00:32:07.0000] <arkos>
Ms2ger: hi

[00:32:23.0000] <rniwa>
arkos: Ms2ger works on Mozilla

[00:32:38.0000] <rniwa>
arkos: and annevk works on Opera

[00:32:49.0000] <arkos>
rniwa: ok

[00:33:02.0000] <rniwa>
arkos: both them are very active in standard bodies :)

[00:34:32.0000] <arkos>
rniwa: ok.. gr8

[00:34:36.0000] <rniwa>
Ms2ger, annevk: speaking of which, our microdata API is near completion

[00:35:01.0000] <rniwa>
arkos just submitted one last feature we were missing: propertynodelist

[00:35:11.0000] <Ms2ger>
Opera did it first :)

[00:35:13.0000] <rniwa>
submitted a patch for*

[00:35:19.0000] <rniwa>
Ms2ger: i know!

[00:35:28.0000] <rniwa>
Ms2ger: it's nice to have two implementations, right?

[00:35:30.0000] <Ms2ger>
And we did it second :)

[00:35:43.0000] <asmodai>
annevk et al: would making math on wikipedia a user option also be a step in the right direction?

[00:35:43.0000] <rniwa>
Ms2ger: oh, Mozilla has already implemented it?

[00:35:48.0000] <Ms2ger>
Yes

[00:35:50.0000] <rniwa>
Ms2ger: nice!

[00:35:54.0000] <Ms2ger>
Ever since last week or so

[00:36:05.0000] <rniwa>
Ms2ger: cool. i wasn't aware of this :\

[00:36:55.0000] <Ms2ger>
You can still beat IE ;)

[00:37:25.0000] <arkos>
Ms2ger: you are right :)

[00:37:49.0000] <rniwa>
Ms2ger: oh well, arkos is new to webkit

[00:38:08.0000] <rniwa>
Ms2ger: and he has been single-handedly writing code to support microdata API as his first contribution to webkit

[00:38:14.0000] <rniwa>
Ms2ger: so we can't complain :)

[00:38:16.0000] <Ms2ger>
You're always welcome to join Mozilla too, of course :)

[00:38:21.0000] <rniwa>
Ms2ger: LOL

[00:38:45.0000] <Ms2ger>
We could use people like that :)

[00:39:25.0000] <annevk>
"WebGL generates a WebGLContextEvent event"

[00:39:27.0000] <annevk>
euh

[00:39:41.0000] <MikeSmith>
hsivonen: you're sure you're logging in with the right username? I mean, with the username for that host set in your .ssh/config or set with "ssh -l foo" on the command line?

[00:39:45.0000] <annevk>
asmodai: what does that mean?

[00:39:57.0000] <MikeSmith>
hsivonen: because if you don't have the right username, it won't tell you

[00:40:21.0000] <MikeSmith>
I think it will just give you the same unhelpful "Permission denied (publickey)." message

[00:40:56.0000] <annevk>
ooh

[00:41:02.0000] <annevk>
some of the event language in WebGL is quite good

[00:45:55.0000] <arkos>
Ms2ger, annevk, rniwa nice talking to you guys.. hopefully our implementation gets enabled soon...

[00:46:28.0000] <annevk>
oh Google won the Java fight?

[00:46:37.0000] <annevk>
arkos: yeah, good luck :)

[00:46:46.0000] <rniwa>
annevk: yeah we did :D

[00:46:54.0000] <annevk>
rniwa: missed that, cool

[01:06:46.0000] <rniwa>
Ms2ger: is PropertyNodeList a live node list?

[01:07:08.0000] <rniwa>
annevk, Ms2ger: it's not vacuously obvious from the spec :\

[01:07:52.0000] <rniwa>
i'd assume it's not live since it doesn't explicitly say it's live

[01:09:55.0000] <rniwa>
Hixie: ?

[01:11:43.0000] <annevk>
"The namedItem(name) method must return a PropertyNodeList object representing a live view of the HTMLPropertiesCollection object"

[01:12:12.0000] <rniwa>
annevk: does that mean PropertyNodeList itself is live?

[01:12:40.0000] <annevk>
it represents a live view

[01:12:44.0000] <rniwa>
annevk: i thought it just mean that HTMLPropertiesCollection itself is live.

[01:12:47.0000] <annevk>
not sure what else that could possibly mean

[01:13:41.0000] <rniwa>
annevk: oh yeah, i guess i agree with you on my second reading.

[01:13:47.0000] <rniwa>
guess i need more tea :\

[01:13:52.0000] <rniwa>
annevk: thanks for the response.

[01:17:14.0000] <annevk>
http://rogerandmike.com/post/24006177542/html5-the-next-big-thing-for-content "How far will pendulum go????"

[01:17:17.0000] <annevk>
what am I reading?

[01:20:08.0000] <Velmont>
hahaha, that's hilarious :D

[01:20:37.0000] <Velmont>
HTML 5 represents new life for the world wide web, but it will almost certainly not be a smooth transition from HTML 4.

[01:21:01.0000] <Velmont>
and this one: HTML 5 is still in its infancy. Important functionality – such as that needed for commerce – has not yet been enabled. Even though it is not ready to replace HTML 4 on wired PCs, HTML 5 enables new and wonderful experiences on mobile devices.

[01:21:48.0000] <annevk>
i am as high as kite

[01:22:45.0000] <Velmont>
I suspect most content creators will not rush into HTML 5 because it only supports a narrow set of use cases and platforms.

[01:22:47.0000] <MikeSmith>
unlock tantric HyperNet pendulum awareness now! with Roger and Mike!

[01:24:38.0000] <MikeSmith>
/me adds "HyperNet" and "pendulum" to the DB for http://logopoeia.com/wisdom/

[01:25:38.0000] <annevk>
"Adopt the rule of pseudo-atomic instability as your guide."

[01:27:10.0000] <jgraham>
I think you're being unfair. That was much better than most other examples of machine generated spam

[01:41:58.0000] <MikeSmith>
hahaha "the unarguable rule of bio-pendulum-pseudo-time instability follows directly from vibro-tantric law."

[01:45:55.0000] <rafaelw_>
hsivonen: yt?

[01:46:22.0000] <rniwa>
"(there is no standard HTML 5 for Android)" !?

[01:47:19.0000] <rafaelw_>
rniwa: holy moly: isn't it 2am there?

[01:47:26.0000] <rniwa>
rafaelw_: yeah.

[01:47:47.0000] <rafaelw_>
yikes =-).

[01:47:50.0000] <rniwa>
rafaelw_: are you in Europe or something?

[01:47:55.0000] <rafaelw_>
Israel.

[01:48:02.0000] <rafaelw_>
PST + 10

[01:48:04.0000] <rniwa>
rafaelw_: ah, that's right.

[01:48:09.0000] <rniwa>
rafaelw_: Tel-Aviv?

[01:48:18.0000] <rafaelw_>
yup. coming up on noon here.

[01:48:23.0000] <rniwa>
cool.

[01:48:35.0000] <hsivonen>
rafaelw_: yes

[01:48:41.0000] <rafaelw_>
hi there.

[01:48:54.0000] <rafaelw_>
curious where you're standing on Document.parse() at the moment.

[01:49:31.0000] <rafaelw_>
Hixie is clearly worried about encouraging innerHTML-like patterns. Do you share that worry?

[01:50:25.0000] <hsivonen>
rafaelw_: I can see Hixie's point. I also see that Document.parse() is polyfillable (by compiling the Validator.nu parser into JS using GWT, for example) while E4H isn't polyfillable

[01:50:55.0000] <annevk>
hsivonen: http://qfox.nl/weblog/247

[01:51:22.0000] <hsivonen>
rafaelw_: so I agree that what Hixie proposes would be better in principle, but I think it has political and practical downsides that will be a problem in terms of time to market and deployability

[01:51:36.0000] <rafaelw_>
Is there any reason to see them as mutually exclusive?

[01:51:50.0000] <hsivonen>
rafaelw_: nothing other than more total implementation work

[01:52:35.0000] <rafaelw_>
Document.parse() strikes me as fixing a practical current problem in a way which is consistent with the oddness of the current HTML parser.

[01:52:39.0000] <Ms2ger>
And bigger API surface, I guess

[01:53:14.0000] <rafaelw_>
E4H strikes me as a longer-term, but potentially larger impact feature -- which is akin to designing a new HTML parser.

[01:53:26.0000] <hsivonen>
rafaelw_: I agree on both counts

[01:53:28.0000] <rafaelw_>
I.e. Has behavior which is very different from the current parser.

[01:53:58.0000] <rafaelw_>
what about the script exectuability issue?

[01:55:00.0000] <hsivonen>
rafaelw_: does jQuery specifically make them executable or is that an accidental side effect of impl details?

[01:55:32.0000] <rafaelw_>
i don't happen to know the design history, but i'd be surprised if it wasn't intentional.

[01:55:40.0000] <hsivonen>
rafaelw_: I would prefer to make scripts executable but if the jQuery behavior is intentional, it's probably best to go with executability

[01:55:53.0000] <hsivonen>
*prefer to make *un*executable

[01:55:56.0000] <rafaelw_>
right.

[01:55:59.0000] <asmodai>
annevk: It was something we were discussing on #cldr yesterday

[01:56:20.0000] <hsivonen>
rafaelw_: so yeah, I guess I can live with making them executable

[01:56:29.0000] <asmodai>
annevk: in order to encourage uptake on MathML. I am not sure if I can get wikimedia/wikipedia crazy enough to switch 100% to presentation mathml and ditch the other stuff

[01:56:36.0000] <hsivonen>
rafaelw_: it will be a huge footgun when used with anything other than one HTML script element at a time

[01:56:39.0000] <rafaelw_>
i'll ask Yehuda on the thread to clarify. I strongly suspect it's intentional.

[01:56:45.0000] <asmodai>
annevk: So allowing people to turn on mathml usage might already help a bit

[01:56:53.0000] <asmodai>
annevk: via some user preference thing on the wiki

[01:56:56.0000] <annevk>
asmodai: ah yeah

[01:57:14.0000] <hsivonen>
rafaelw_: ok

[01:57:20.0000] <asmodai>
The Unicode folks are eager to adoptation of mathml as well, since it will allow more use of the math code blocks

[01:57:24.0000] <rafaelw_>
hsivonen: any idea when Document.parse() might land in Gecko?

[01:58:17.0000] <annevk>
Is parse() really the best we can come up? How many parser APIs do we need?

[01:58:30.0000] <hsivonen>
rafaelw_: not in June or July

[01:58:36.0000] <asmodai>
parse all the documents!

[01:58:48.0000] <annevk>
DOMParser / innerHTML / outerHTML / insertAdjacentHTML()

[01:58:58.0000] <jgraham>
annevk: Depends if you count normal document loading as an API :)

[01:59:05.0000] <Ms2ger>
createContextualFragment

[01:59:08.0000] <jgraham>
createContextualFragment

[01:59:14.0000] <jgraham>
dammit

[01:59:17.0000] <Ms2ger>
Yay, Gecko naming stuff

[01:59:49.0000] <annevk>
I'd rather we investigate this a bit more before we start shipping yet another one

[01:59:54.0000] <annevk>
it's already quite the mess

[02:00:15.0000] <rafaelw_>
annevk: Can you clarify what exactly you're objecting to.

[02:00:28.0000] <rafaelw_>
Is it just adding a different API call? New behavior?

[02:00:57.0000] <annevk>
adding a new API of which we are not even sure it's the best solution, but we're doing it for some short-term progress

[02:01:01.0000] <annevk>
at least that's the impression I get

[02:01:31.0000] <annevk>
and it's not even clear to me if we get short-term progress, because it will take a long time for IE to get there

[02:02:26.0000] <rafaelw_>
Well, I think Hixie has confused the issue a bit by raising the prospect of a fairly radical new approach.

[02:02:57.0000] <rafaelw_>
In my view the basic question is creating the ability for the *existing* html parser to be able to contruct dom from markup without a context element.

[02:03:39.0000] <rafaelw_>
There are two manifestations of this: (1) Imperative, e.g. Document.parse(), and (2) Declarative. e.g. <template>

[02:04:03.0000] <jgraham>
Ms2ger: (I find whenever you think "WTF were people at Netscape/Mozilla thinking" it helps to reread http://www.mozillazine.org/articles/article177.html Then everything becomes clear)

[02:04:22.0000] <rafaelw_>
Both are patterns that are already widely is in use and very poorly supported, resulting in lots of developer contortions and hacks.

[02:04:23.0000] <jgraham>
(+working on early gecko)

[02:05:15.0000] <rafaelw_>
If we want to essentially design a new HTML parser, I think that'd be grand, but it's a much bigger project whose motivations are fairly different.

[02:05:48.0000] <Ms2ger>
"Design patterns were an important part of our modeling processes."

[02:05:53.0000] <Ms2ger>
That's his fault?

[02:05:59.0000] <annevk>
it's not exactly a new HTML parser; it's a way to represent Node objects in JavaScript

[02:06:11.0000] <Ms2ger>
Where does that guy live?

[02:06:23.0000] <rafaelw_>
i think that's the motivation. i think the design is a new parser.

[02:06:36.0000] <rafaelw_>
in hixie's world, that parser lives in ECMAScript.

[02:07:13.0000] <rafaelw_>
at least conceptually: where parser == "a process for converting a character stream into a DOM structure"

[02:07:35.0000] <jgraham>
annevk: document.write into a DOM-created document

[02:07:38.0000] <annevk>
sure

[02:07:48.0000] <annevk>
jgraham: XMLHttpRequest + data URLs

[02:07:52.0000] <hsivonen>
Ms2ger: I think it would be unfair to blame it all on rickg, but as I understand it, the Patterns came to Netscape from Digital Style

[02:08:28.0000] <hsivonen>
Ms2ger: so blame the Digital Style team more broadly

[02:09:40.0000] <annevk>
rafaelw_: I can see your point from the perspective of accomplishing that task; but if you look at the use cases and how they are best addressed it becomes a little less clear I think

[02:10:31.0000] <hsivonen>
rafaelw_: I think this is mainly about getting DOM literals in JS in an expedient way that doesn't involve TC39 changing the language

[02:10:31.0000] <annevk>
rafaelw_: that combined with Document.parse() being unlike anything we have for HTML parsing thus far, I'd rather have some stronger agreement that it is the way to go

[02:10:58.0000] <hsivonen>
rafaelw_: might be worthwhile to at least ping TC39 before proceeding to rout around them

[02:11:23.0000] <hsivonen>
sad things happen when groups route around TC39

[02:11:28.0000] <hsivonen>
see arraybuffer endianness

[02:11:53.0000] <annevk>
TC39 will echo quasi

[02:11:55.0000] <rafaelw_>
annevk, hsivonen: you see adding Document.parse() as routing around TC39?

[02:12:03.0000] <hsivonen>
rafaelw_: yes

[02:12:23.0000] <jgraham>
Alterntaive point of view: sad things happen when we wait too long for TC39 to get their shit together - see arraybuffers

[02:12:29.0000] <rafaelw_>
how so?

[02:12:50.0000] <hsivonen>
rafaelw_: we wouldn't need Document.parse() for its main use case if TC39 gave us E4H

[02:13:09.0000] <jgraham>
(we should have got clueful people making a binary API several years before the web GL people finally needed one)

[02:13:21.0000] <hsivonen>
jgraham: indeed

[02:13:58.0000] <annevk>
othermaciej submitted proposals to no avail

[02:14:21.0000] <rafaelw_>
How bad is it add Document.parse() in a world where we eventually get E4H (or something like it)?

[02:14:50.0000] <hsivonen>
rafaelw_: not too bad, IMO, though it might lessen the chance of E4H happening eventually

[02:14:53.0000] <jgraham>
To me it doesn't seem that bad

[02:15:09.0000] <rafaelw_>
Why would it lessen the chance of E4H?

[02:15:36.0000] <hsivonen>
rafaelw_: less need for a clean solution if as "almost there" solution already exists

[02:15:37.0000] <jgraham>
We already have N ways of doing something nearly the same so N+1, with the 1 designed toi better fit the actual use cases doesn't seem like it can be much worse

[02:15:42.0000] <annevk>
given how we still try to remove cruft from the platform I'd say that redundant APIs are bad

[02:16:04.0000] <jgraham>
Plus I expect E4H to be harder than people expect

[02:16:26.0000] <hsivonen>
annevk: if <template> parsing happens with the same parser states, Document.parse() is super-cheap if <template> happens anyway

[02:16:46.0000] <annevk>
hsivonen: it's not cheap to just throw tons of APIs at developers and let them choose

[02:16:48.0000] <hsivonen>
though I intend to fight <template> happening the way currently proposed with wormholes to other DOMs

[02:16:52.0000] <rafaelw_>
annevk: Document.parse() can still be DocumentFragment.innerHTML (I think mainly Henri's preference that it be Document.parse()).

[02:17:11.0000] <rafaelw_>
It doesn't strike me as redudant at all. It seems like adding a clearly need missing bit of innerHTML.

[02:17:14.0000] <jgraham>
I also have a strong preference for .parse fwiw

[02:17:18.0000] <hsivonen>
rafaelw_: I indeed prefer Document.parse() over DocumentFragment.innerHTML

[02:17:32.0000] <rafaelw_>
i agree with the Document.parse() decision.

[02:18:02.0000] <rafaelw_>
i'm just pointing out that the new API call is making it look more redudant than it is. The feature really lives in the parser logic. Not in the API call.

[02:18:41.0000] <annevk>
there's a ton of parser logic that is not exposed

[02:20:56.0000] <jgraham>
I think the anti-cruft argument is pretty silly if platform libraries are having to implement the feature themselves but in a more unpleasant way

[02:21:05.0000] <jgraham>
That seems to be the case here

[02:21:27.0000] <annevk>
because we don't have a sane way to create a Node objects

[02:21:45.0000] <rafaelw_>
Also, it just seems wrong to me to avoid giving developers something that will clearly help them because we're worried that doing so creates complacence for doing something larger.

[02:22:23.0000] <rafaelw_>
FWIW, I see the valid of E4H or similar as totally orthogonal to parsing without a context element.

[02:22:33.0000] <rafaelw_>
s/valid/value

[02:23:06.0000] <annevk>
I don't see the problem with taking some time to find out what the actual options are

[02:23:33.0000] <rafaelw_>
do you mean seeing whether TC39 is open to E4H?

[02:24:15.0000] <jgraham>
The TC39 release cycle is so crazy-long that I am very skeptical of solutions that put them on the critical path

[02:24:57.0000] <annevk>
you do realize that it'll take at least two years and probably up to five before developers can use any solution here without a supporting library?

[02:25:16.0000] <annevk>
it's not like a few months will matter

[02:25:35.0000] <jgraham>
But the ES committee works in cycles of a few years

[02:26:00.0000] <annevk>
sure, but if they're behind it (or something else) that can be prototyped and shipped

[02:26:13.0000] <annevk>
just as browsers have always shipped JavaScript stuff before the standard was done

[02:26:35.0000] <rafaelw_>
FWIW, i think we should stop accommodating the slow-update-cycle UAs by thinking in terms of years. The web is going to loose that way.

[02:26:54.0000] <jgraham>
Usually what happens is that browsers ship one thing then the committee change it and everyone has to implement something else

[02:27:08.0000] <annevk>
rafaelw_: as long as IE has market share that's the reality, no?

[02:27:55.0000] <annevk>
jgraham: yeah we should stop catering to that nonsense...

[02:27:57.0000] <rafaelw_>
IE is moving slowly towards shorter half-life. we should be creating more not less pressure in this direction.

[02:30:16.0000] <annevk>
no disagreement there

[02:31:04.0000] <annevk>
I'd still like us to evaluate our options though before adding more API surface

[02:31:41.0000] <rafaelw_>
Can we find a way to make the "evaluating our options" finite?

[02:32:04.0000] <rafaelw_>
I'm worried that we're stacking a very real helpful proposal up against and huge unknown.

[02:33:16.0000] <rafaelw_>
Do we have any indication that the JS folks will be friendly to something like E4H? Surely this idea has been floated by Brenden or Dave Herman already in some form?

[02:33:48.0000] <annevk>
Last time they thought quasis were better

[02:34:21.0000] <rafaelw_>
And you think they'll react differently now?

[02:34:26.0000] <annevk>
but quasis don't have compile-time checking or a definition

[02:34:34.0000] <rafaelw_>
or can be convinced?

[02:34:44.0000] <annevk>
I don't know

[02:35:50.0000] <annevk>
if E4H works for browsers and developers we should just do that imo, irrespective of whether it receives TC39 blessing

[02:37:47.0000] <annevk>
rafaelw_: in one of those threads I pointed to previous discussion I believe; in the thread where Hixie made his proposal

[02:42:26.0000] <rniwa>
annevk, jgraham, hsivonen, rafaelw_: it appears to me that we should at least continue the discussion on the parsing algorithm for template element regardless of what we decide to do with Document.parse

[02:44:06.0000] <rafaelw_>
rniwa: couldn't agree more =-)

[02:44:06.0000] <rniwa>
From API perspective, template element avoids some of objection from Hixie and others in that it doesn't introduce new string-literal-to-DOM API to scripts.

[02:44:46.0000] <rniwa>
in fact, if we just add template element & avoid adding Document.parse, it'll encourage authors to use declarative model

[02:44:51.0000] <annevk>
yeah the only thing controversial with <template> seems to be what happens to the elements

[02:44:56.0000] <rniwa>
instead of imperative model they're currently stuck with.

[02:45:06.0000] <rniwa>
annevk: yeah. :\

[02:45:09.0000] <annevk>
controversial thing*

[02:45:12.0000] <rniwa>
children vs. fragment.

[02:45:15.0000] <rafaelw_>
annevk: yup.

[02:45:37.0000] <rafaelw_>
henri: any chance you're willing to be challenged on the children vs fragment issue here?

[02:45:49.0000] <rniwa>
annevk: i have increasingly convinced that putting it in fragment makes sense to avoid many problems

[02:46:02.0000] <rniwa>
but then what should template.innerHTML, etc... should do?

[02:46:24.0000] <rniwa>
e.g. what happens if you added children to a temple element?

[02:46:32.0000] <rafaelw_>
if <template> were to land, Document.parse() could be polyfilled in about 5 lines.

[02:46:49.0000] <rafaelw_>
and it doesn't remove any pressure around HTML literals in JS.

[02:46:53.0000] <rniwa>
rafaelw_: how so?

[02:47:11.0000] <rafaelw_>
Document.parse = function(markup) {

[02:47:18.0000] <rniwa>
rafaelw_: will you wrap markup in "<template>"?

[02:47:21.0000] <rafaelw_>
var t = document.createElement('template'):

[02:47:25.0000] <rafaelw_>
t.innerHTML = markup;

[02:47:26.0000] <annevk>
rniwa: fragment makes sense to me too and I think innerHTML and such should just operate on the normal DOM, not the fragment

[02:47:31.0000] <rafaelw_>
return t.cotent; }

[02:47:44.0000] <rniwa>
rafaelw_: there, you're assuming that innerHTML works on fragment.

[02:47:57.0000] <rafaelw_>
nope. i'm assuming innerHTML works on <template>

[02:48:02.0000] <rniwa>
rafaelw_: but as annevk just replied, a saner behavior might be to work on the real children.

[02:48:22.0000] <rniwa>
rafaelw_: oh oops, you're right but you're assming that it'll sync fragment on demand.

[02:48:23.0000] <jgraham>
innerHTML not working in the expected way on template would be insane

[02:48:45.0000] <annevk>
"the expected way" lol

[02:49:02.0000] <hsivonen>
jgraham: isn't that the current spec situation? stuff goes on the other side of the wormhole

[02:49:08.0000] <rafaelw_>
annevk: i'm not clear on what you are suggesting. what would this do?

[02:49:09.0000] <jgraham>
i.e. if <template>foo</template> != template.innerHTML = "foo" there will be rioting on the streets

[02:49:16.0000] <rniwa>
annevk: +1 to that LOL

[02:49:34.0000] <rafaelw_>
document.createElement('div').innerHTML = "<template><div>Hello</div></template>";

[02:49:44.0000] <rniwa>
jgraham: so you think that setting innerHTML should update the fragment as well?

[02:49:47.0000] <annevk>
jgraham: but that's kind of the point of <template>...

[02:49:52.0000] <annevk>
jgraham: that you can't see it's children

[02:50:05.0000] <rniwa>
jgraham: but then it's kind of weird in that

[02:50:16.0000] <rniwa>
jgraham: this innerHTML will replace fragment

[02:50:19.0000] <jgraham>
The invariant should be just what I said

[02:50:24.0000] <rniwa>
and don't insert "real" children :\

[02:50:31.0000] <annevk>
<template>foo</template> you want <template>.firstChild to be null

[02:50:40.0000] <annevk>
if innerHTML is suddenly magic, riot on some other set of streets

[02:50:50.0000] <rniwa>
annevk: i think jgraham is suggesting that we sitll do that but then update fragment.

[02:51:07.0000] <annevk>
rniwa: and getting innerHTML does what?

[02:51:09.0000] <rniwa>
annevk: which seems like a good idea at the beginning 'til we start thinking about appendChild

[02:51:26.0000] <rniwa>
jgraham: consider while (~) t.appendChild(~);

[02:51:36.0000] <rafaelw_>
I see the design goal of <template> is that it's contents are *not* in the document.. for all purposes *except* serialization.

[02:51:44.0000] <rniwa>
jgraham: in this case, every call to appendChild should either replace the fragment or add new child to fragment...

[02:52:02.0000] <jgraham>
Well I have no idea what should happen if you do appendChild and you are using magic documents

[02:52:33.0000] <annevk>
rafaelw_: why would you serialize it?

[02:52:37.0000] <jgraham>
Breaking that is marginally less surprising than breaking innerHTML though

[02:52:46.0000] <rniwa>
jgraham: agreed.

[02:52:56.0000] <annevk>
jgraham: define "breaking"

[02:52:57.0000] <rniwa>
jgraham: but we need to come up with some sane behavior there as well.

[02:53:03.0000] <jgraham>
annevk: I already did

[02:53:17.0000] <rniwa>
annevk: i.e. replace fragment.

[02:53:20.0000] <rafaelw_>
annevk: it's serialzed in the page which is sent to the client.

[02:53:26.0000] <rniwa>
annevk: or whatever the content template is.

[02:53:28.0000] <annevk>
jgraham: I think what you are suggesting is breaking innerHTML

[02:53:41.0000] <annevk>
jgraham: because it would be a special code path for <template>

[02:53:46.0000] <rniwa>
annevk: it doesn't, if we keep children of template element as real children

[02:54:19.0000] <rniwa>
annevk: so i think jgraham is indirectly pointing at keeping them as real children.

[02:54:19.0000] <jgraham>
annevk: Whether it needs a special codepath is pretty irrelevent

[02:54:29.0000] <annevk>
but that breaks getElementsByTagName() etc. and requires parent chain checks besides Windowness checks for <img>

[02:54:32.0000] <annevk>
rniwa: ^^

[02:54:37.0000] <rniwa>
annevk: right.

[02:54:46.0000] <rniwa>
annevk: the question is which breakage is saner :\

[02:54:48.0000] <jgraham>
It only needs a special codepath if parsing <template> in general needs a special codepath

[02:55:12.0000] <rniwa>
annevk: it's sort of a trade off here.

[02:55:16.0000] <rafaelw_>
annevk: can you define "breaks getElementsByTagName"

[02:55:46.0000] <annevk>
<template><div></div></template> you don't want to see that <div> during normal DOM traversal I think

[02:55:47.0000] <rniwa>
annevk: on one hand, putting template in a fragment will let us get away with problems in getElement(s)by*, querySelector, script loading, etc....

[02:55:50.0000] <rafaelw_>
i think that getElementsByTagName, querySelector, getElementById *have to* not match template contents.

[02:55:58.0000] <rniwa>
annevk: but on the other hand, it breaks innerHTML, appendChild, etc... on template element

[02:56:13.0000] <Ms2ger>
rafaelw_, otoh, that breaks XHTML

[02:56:33.0000] <rafaelw_>
we discussed the XHTML the W3C F2F

[02:56:35.0000] <annevk>
got to go

[02:56:43.0000] <rniwa>
annevk: ttyl/

[02:56:57.0000] <rafaelw_>
the consensus was that we need to leave it to XML to "fix" the breakage if they care to.

[02:57:16.0000] <rafaelw_>
Ms2ger: ^^

[02:57:52.0000] <rafaelw_>
I.e. the goal here is to create behavior which is fundamentally incompatible with the XML parser. If XML wants to add this to the parser, they can do that.

[02:58:20.0000] <rafaelw_>
bye anne. ;-)

[02:58:20.0000] <jgraham>
The goal seems to be to create behaviour that is fondamentally incompatible with the DOM :)

[02:58:33.0000] <jgraham>
*fundamentally

[02:58:54.0000] <Ms2ger>
Another question

[02:58:59.0000] <Ms2ger>
<template><div></div></template>

[02:59:04.0000] <Ms2ger>
What's div.parentNode?

[02:59:10.0000] <rafaelw_>
i know it seems that way, but what's being proposed is formally supporting exactly what *literally* every dynamic webapp is already doing.

[02:59:50.0000] <Ms2ger>
http://xkcd.com/725/

[02:59:59.0000] <jgraham>
I understand that there are use cases here

[03:00:16.0000] <jgraham>
But it seems to be non-trivial to solve them in a clean way at this level

[03:00:37.0000] <rafaelw_>
Ms2ger: ;-). I actually thought about that when i wrote the word "literally" and decided to use it.

[03:01:34.0000] <rafaelw_>
The number of webapps which construct DOM without some form of templating is effectively 0.

[03:03:15.0000] <jgraham>
I even wrote *literally* the worst templating system in the world once

[03:03:44.0000] <rniwa>
i think we need to decide whether we're putting contents of the template in a fragment or not.

[03:03:54.0000] <Ms2ger>
jgraham, oh, I didn't know you were involved with DOM1?

[03:03:58.0000] <rniwa>
almost everyone agrees that we want template element.

[03:04:01.0000] <jgraham>
Hah

[03:04:08.0000] <rniwa>
everyone is* agreeing*

[03:04:21.0000] <rniwa>
it's the matter of deciding what exactly template element is.

[03:04:21.0000] <Ms2ger>
Literally everyone? :)

[03:04:29.0000] <rniwa>
Ms2ger: no.

[03:05:08.0000] <rniwa>
Ms2ger: because there is always a non-zero probably that someone would come and disagree with us.

[03:05:17.0000] <rniwa>
Ms2ger: i would not risk myself being wrong by saying "literally" there.

[03:05:24.0000] <Ms2ger>
Smart man :)

[03:05:34.0000] <rniwa>
:)

[03:05:46.0000] <rniwa>
indeed i'm extremely risk adverse.

[03:06:00.0000] <rniwa>
averse*

[03:06:27.0000] <Ms2ger>
/me would still like an answer to his parentNode question

[03:06:39.0000] <rniwa>
Ms2ger: i think it'll be a document fragment

[03:06:48.0000] <Ms2ger>
?!

[03:06:50.0000] <jgraham>
Ms2ger: That seems to be the crux of the issue

[03:06:51.0000] <rniwa>
Ms2ger: if we decide to put contents of template element in a fragment

[03:07:12.0000] <rniwa>
Ms2ger: if we don't, and keep them as real children of template element, then it'l be the template element.

[03:07:22.0000] <rafaelw_>
ms2ger: the divs parent node would be the template element's "content" DocumentFragment.

[03:07:37.0000] <rniwa>
rafaelw_: if we decide to go with that route.

[03:07:38.0000] <Ms2ger>
Anyway, I object to anything where node.parentNode.childNodes doesn't include node

[03:07:56.0000] <rniwa>
Ms2ger: that works in both cases.

[03:08:02.0000] <jgraham>
I think that invariant holds

[03:08:21.0000] <rniwa>
Ms2ger: if parentNode is a document fragment, then the document fragment's childNodes will certainly include the node.

[03:08:28.0000] <Ms2ger>
jgraham, not in Gecko, and it's horrible

[03:08:33.0000] <jgraham>
In the fragment case the weirdness is that the <template> element has no children

[03:08:33.0000] <rniwa>
Ms2ger: !?

[03:08:39.0000] <Ms2ger>
XBL

[03:08:48.0000] <jgraham>
Ms2ger: I point, and I laugh

[03:08:57.0000] <Ms2ger>
/me patpats jgraham 

[03:09:18.0000] <rniwa>
Ms2ger: i'd just say "scumbag XBL" and stop there.

[03:09:49.0000] <rafaelw_>
Wait. Surely you jest.

[03:09:49.0000] <Philip`>
I like the phrase "Security will be present by the beginning of the year or so." (from http://www.mozillazine.org/articles/article177.html)

[03:09:50.0000] <Ms2ger>
In our implementation? I don't think that'll work :)

[03:09:59.0000] <rniwa>
jgraham: yeah, and what should happen when you assign something to innerHTML

[03:10:06.0000] <rafaelw_>
"node.parentNode.childNodes doesn't include node" isn't true with DF's in gecko>

[03:10:07.0000] <rafaelw_>
?

[03:10:15.0000] <rniwa>
jgraham: or add or remove children to the template element :\

[03:10:34.0000] <Velmont>
Philip`: Yeah, that was weird, and funny

[03:10:46.0000] <jgraham>
rniwa: One could of course make appendChild and various other methods throw in the case that the parent is a template

[03:10:47.0000] <Ms2ger>
rafaelw_, dunno about DF's, but it can be that way if node is the root of an XBL tree

[03:10:52.0000] <Ms2ger>
Or something

[03:11:07.0000] <rniwa>
jgraham: i guess, that's an acceptable solution.

[03:11:16.0000] <rniwa>
jgraham: but then there are LOTs of APIs that do this :\

[03:11:57.0000] <rniwa>
jgraham: e.g. you can create a Range inside the template (not in its fragment)

[03:11:58.0000] <jgraham>
Well the other option is just to let it work, but be slightly weird

[03:12:14.0000] <rniwa>
jgraham: and call one of those fancy manipulation APIs

[03:12:36.0000] <jgraham>
True

[03:12:53.0000] <rniwa>
jgraham: it's also not entirely clear what should outerHTML should do :(

[03:13:07.0000] <rafaelw_>
What if we made <template> behave kind of like <script> and have it's contents be "refected" by a text node which is it's first child node.

[03:13:07.0000] <rafaelw_>
?

[03:13:22.0000] <rniwa>
scumbag DOM APIs. we should just kill all of them and start fresh.

[03:13:29.0000] <Ms2ger>
rniwa, dash?

[03:13:38.0000] <jgraham>
rafaelw_: I think I suggested that before and there were problems

[03:13:53.0000] <jgraham>
I'm not sure what they were though

[03:13:55.0000] <rniwa>
Ms2ger: i'd call it CleanDOM 1.0. there is no script and no css. pure semantic HTML. that's it.

[03:14:04.0000] <rniwa>
Ms2ger: in fact, there's not even DOM!

[03:14:13.0000] <Ms2ger>
It's XHTML2? :)

[03:14:33.0000] <rafaelw_>
yeah. you did. i didn't like it at the time, but given the worry about breaking the existing assumptions, it's starting to look more appealing.

[03:15:13.0000] <rniwa>
rafaelw_: what should happen if someone tried to add non-text node to template?

[03:15:17.0000] <Ms2ger>
Also

[03:15:24.0000] <rafaelw_>
hmm... but then there's the problem of sub-templates.

[03:15:29.0000] <rafaelw_>
<sigh>

[03:15:39.0000] <rniwa>
rafaelw_: yeah, i was about to say that :\

[03:15:50.0000] <Ms2ger>
We've just got replaceChild() and friends specced right, please don't mess with them :)

[03:15:51.0000] <rniwa>
rafaelw_: i think that was one big reason you didn't want the text-based template

[03:16:32.0000] <rniwa>
Ms2ger: are you sure it's spec'ed "right"? i bet there are few bugs, etc... hanging there :P

[03:16:41.0000] <Ms2ger>
rniwa, in WebKit? Yes ;)

[03:16:41.0000] <rafaelw_>
Ms2ger: doesn't lifting template contents into a documentfragment meet that requirement?

[03:16:46.0000] <rniwa>
Ms2ger: LOL

[03:16:52.0000] <Ms2ger>
rniwa, (seriously)

[03:17:02.0000] <Ms2ger>
rafaelw_, haven't thought much about it

[03:17:10.0000] <rniwa>
Ms2ger: i know. i'm painfully aware of that.

[03:17:14.0000] <rniwa>
Ms2ger: haven't gotten cycle to fix them :(

[03:17:17.0000] <Ms2ger>
rafaelw_, it seems weird, but maybe it's the best approach

[03:17:24.0000] <rniwa>
Ms2ger: maybe you can convince ojan to work on it :)

[03:17:32.0000] <Ms2ger>
rniwa, anything my tests don't catch? :)

[03:17:49.0000] <rafaelw_>
the current proposal is that it messes with parsing and serialization, but nothing else.

[03:18:37.0000] <Ms2ger>
That's even worse, I can't even punt that to annevk :(

[03:18:43.0000] <rniwa>
rafaelw_: i think we need to define what innerHTML, appendChild, etc... on template element should do.

[03:18:56.0000] <rniwa>
it appears that there are some tricky issues there.

[03:19:16.0000] <Ms2ger>
Hmm

[03:19:17.0000] <rniwa>
/me wonders if hsivonen is still around.

[03:19:31.0000] <Ms2ger>
el.innerHTML = '<template><div></div></template>'

[03:19:50.0000] <Ms2ger>
el.appendChild(document.createElement('template')).appendChild(document.createElement('div'))

[03:20:03.0000] <Velmont>
I kinda find it strange that something that is not concrete but an "idea" (a template) is in the HTML at all. It makes for this problem of having to hide it.

[03:20:10.0000] <rniwa>
Ms2ger: if we put the template's content in a fragment, then the latter won't "work".

[03:20:36.0000] <rniwa>
Ms2ger: well, i guess we can make it work if we spec appendChild to work on fragment instead.

[03:20:40.0000] <rniwa>
Ms2ger: but that's kind of weird :\

[03:20:43.0000] <Velmont>
 <script>var mytmpl=<div class=whatever></div>;</script>  /  <template id=mytmpl><div class=whatever></div></template>

[03:20:53.0000] <Ms2ger>
rniwa, I'll murder you slowly and painfully if you do that :)

[03:21:13.0000] <rafaelw_>
i think it's desireable that the latter doesnt' "work".

[03:21:16.0000] <Ms2ger>
Velmont, hmm, I see what you did there :)

[03:21:24.0000] <rniwa>
Ms2ger: i don't think i'll suggest anything as insane as that :)

[03:21:39.0000] <rniwa>
rafaelw_: throws an exception?

[03:21:48.0000] <Velmont>
Ms2ger: .. hmm, what did I do`? :P

[03:21:54.0000] <Ms2ger>
E4H? :)

[03:21:57.0000] <Velmont>
yeah!

[03:22:00.0000] <rniwa>
i've started to think that throwing  exceptions as jgraham suggested might be the sanest solution

[03:22:04.0000] <rniwa>
if we go with the fragment approach.

[03:22:24.0000] <Ms2ger>
/me broke something when updating testharness.js

[03:22:32.0000] <rniwa>
rafaelw_, Ms2ger: but then we still have to deal with innerHTML, and innerHTMl and appendChild behaving differently is also kind of weird.

[03:22:35.0000] <rafaelw_>
i'm not sure that makes sense.

[03:22:41.0000] <jgraham>
Ms2ger: Updating in which direction?

[03:22:46.0000] <rafaelw_>
scripts don't throw if you append element children.

[03:22:49.0000] <jgraham>
(push or pull)

[03:22:51.0000] <Velmont>
jgraham: possibly the wrong one...

[03:22:51.0000] <Ms2ger>
jgraham, importing the new version

[03:23:01.0000] <jgraham>
Ms2ger: OK

[03:23:03.0000] <Ms2ger>
pull from w3.org, push to m.o

[03:23:16.0000] <rniwa>
rafaelw_: so what happens when you append children via appendChild to a template element?

[03:23:21.0000] <rniwa>
rafaelw_: will it just silently fail?

[03:23:22.0000] <Ms2ger>
rafaelw_, rniwa, img elements don't throw either

[03:23:29.0000] <Ms2ger>
Just put them in the DOM?

[03:23:30.0000] <rafaelw_>
probably the same thing.

[03:23:33.0000] <Velmont>
Ms2ger: I put big warnings when I updated operas version, -- but noone bugged me about it. So went fine for us, I believe.

[03:23:52.0000] <rafaelw_>
they append and live as children, but that just doesn't accomplish anything very interesting.

[03:24:08.0000] <Ms2ger>
Velmont, might be some of the changes to threport.js I sneaked in

[03:24:09.0000] <rniwa>
Ms2ger, rafaelw_: so document.createElement('template').appendChild(e) will insert e as the "real

[03:24:18.0000] <rafaelw_>
yup

[03:24:20.0000] <rniwa>
" child of the template element?

[03:24:20.0000] <Ms2ger>
.childNodes will be [e]

[03:24:30.0000] <rafaelw_>
yes.

[03:24:33.0000] <rniwa>
ok

[03:24:55.0000] <rniwa>
but then it's weird that innerHTML works on fragment then.

[03:25:01.0000] <rafaelw_>
i think script is the precedent here.

[03:25:24.0000] <rafaelw_>
yes. but again the "weirdness" *is* the design goal.

[03:25:29.0000] <Ms2ger>
innerHTML on fragment?

[03:25:37.0000] <rniwa>
Ms2ger: innerHTMl on template

[03:25:41.0000] <jgraham>
BTW pliniss wants to update testharnessreport.js on the W3C server to extract metadata from tests that you add with syntax like test(function() {}, "My foo test", {help:"http://spec/link"})

[03:25:58.0000] <jgraham>
Does that seem OK to others?

[03:26:04.0000] <Ms2ger>
*Linss

[03:26:05.0000] <rniwa>
i've started to think that if we eventually want Document.parse, etc...

[03:26:13.0000] <jgraham>
Oops

[03:26:17.0000] <Ms2ger>
But that seems correct

[03:26:18.0000] <rniwa>
then template.innerHTML should probably work like tempalte.appendChild as well

[03:26:19.0000] <jgraham>
plinss

[03:26:25.0000] <Ms2ger>
s/correct/sane/

[03:26:30.0000] <rniwa>
meaning that it doesn't do anything interesting.

[03:26:48.0000] <rafaelw_>
rniwa: what would

[03:26:49.0000] <rniwa>
because if we expose parse on DocumentFragment, for example,

[03:26:58.0000] <Ms2ger>
I think that special-casing template.innerHTML would be weird

[03:27:00.0000] <rafaelw_>
myDiv.innerHTML = "<template><div>Foo</div></template>"

[03:27:01.0000] <jgraham>
Good, doog. Maybe I will put his patch somewhere it can get proper review

[03:27:01.0000] <rafaelw_>
do?

[03:27:04.0000] <rniwa>
then we can just do template.content.parse(~)

[03:27:09.0000] <jgraham>
WTF

[03:27:15.0000] <Ms2ger>
Doog?

[03:27:17.0000] <jgraham>
Did I just type good backwards?

[03:27:18.0000] <Velmont>
jgraham: hmm. yea. Not doing    test(function() {}, { desc: 'My foo test', help: 'http://spec' })  though?

[03:27:21.0000] <Ms2ger>
You did

[03:27:30.0000] <jgraham>
That is...

[03:27:31.0000] <Ms2ger>
Velmont, eh, more typing :)

[03:27:55.0000] <rniwa>
rafaelw_: that should work. it'll create template with content fragment generated with "<div>foo</div">

[03:28:02.0000] <Velmont>
Ms2ger: I'm just asking the question man! :P

[03:28:06.0000] <rniwa>
rafaelw_: i'm talking about document.createElement('template').innerHTML = ~

[03:28:10.0000] <jgraham>
Velmont: Since titles are non-optional (sort of) that doesn't seem like a big win

[03:28:25.0000] <rniwa>
and suggesting that it should behave like document.createElement('template').appendChild(~)

[03:28:36.0000] <Velmont>
jgraham: Yeah.

[03:28:37.0000] <rniwa>
in that it'll just add it to the real DOM, and not to the content fragment it has.

[03:28:50.0000] <jgraham>
(although I have found myself writing things like async_test(undefined, {timeout:4000}) when I wanted to use document.title as the test title

[03:28:54.0000] <jgraham>
)

[03:29:01.0000] <rafaelw_>
hmm... I gotta go, but i'll look forward to hearing why. =-).

[03:29:04.0000] <rafaelw_>
bye all.

[03:29:10.0000] <jgraham>
bye

[03:29:21.0000] <rniwa>
rafaelw_: bye.

[03:29:28.0000] <Ms2ger>
See you

[03:29:52.0000] <Velmont>
jgraham: Exposing all the variables then?

[03:29:57.0000] <Ms2ger>
jgraham, though, how much metadata does he want to put there?

[03:30:10.0000] <rniwa>
Ms2ger, jgraham: i'm increasingly convinced that if we keep innerHTML, appendChild, etc... to be regular DOM API and let them mutate "real" DOM

[03:30:21.0000] <rniwa>
then fragment approach might be quite sane.

[03:30:21.0000] <jgraham>
Ms2ger: I think he wants it to be possible to put all the things that the CSS WG already use

[03:30:27.0000] <Velmont>
(the full object). -- Although that kinda punts the standardization issue to somewhere else.

[03:31:00.0000] <jgraham>
Let me put the patch somewhere

[03:31:07.0000] <Ms2ger>
/me isn't entirely sure what Velmont is saying

[03:31:16.0000] <jgraham>
/me neither

[03:31:24.0000] <Velmont>
oh man

[03:32:34.0000] <Velmont>
Ms2ger: If the full object is exposed to testharnessreport.js   you could write   test(..., { ohmanfancyproprietarystuff: 'infoz' })    and the report could use that information. But I guess we'd want to have people use the same properties for common stuff that we all really want.

[03:32:56.0000] <Velmont>
And not call it like   operas_special_spec_link='http://the-spec/bla'

[03:33:36.0000] <Velmont>
But I guess it's all theorethical, because the web won't use it, mostly us few selected test writers :P

[03:34:23.0000] <rniwa>
good night guys ;)

[03:34:26.0000] <Ms2ger>
gn

[03:34:44.0000] <Velmont>
Hm. Doesn't make sense, just ignore my last sentences :P

[03:34:49.0000] <Ms2ger>
OK :)

[03:44:17.0000] <jgraham>
https://github.com/jgraham/testharness.js/commit/dc0ded17117ac14705a1f9aa0f6466b8aae3c845

[03:52:49.0000] <MikeSmith>
jgraham: is that something you think is going to be generally useful, or is yet another thing that only the CSS WG is ever likely to actually use?

[03:53:32.0000] <jgraham>
MikeSmith: I have no idea. I mean, my experience is that test metadata sounds like a great idea and actually doesn't work very well

[03:53:45.0000] <jgraham>
But maybe my experience is wrong

[03:54:07.0000] <MikeSmith>
I guess it doesn't hurt to have it as an option for anybody to make use of it

[03:54:24.0000] <MikeSmith>
as long at it doesn't creep into becoming a requirement at least

[03:54:30.0000] <jgraham>
That is basically my feeling

[03:55:21.0000] <jgraham>
I would rather people spend time writing tests than spend time trying to work out what all the required metadata is, and what the right values are

[04:03:20.0000] <annevk>
<template> is basically XML Data Islands

[04:04:11.0000] <annevk>
but Opera did it first of course

[04:04:33.0000] <MikeSmith>
jgraham: I see you got a open pull request from tobie there to add a readme file

[04:05:07.0000] <MikeSmith>
Opera Awesome Islands

[04:05:25.0000] <Ms2ger>
Duplicating the docs? :/

[04:05:35.0000] <jgraham>
MikeSmith: Yeah I guess I should fix that

[04:06:05.0000] <MikeSmith>
would be good to have some kind of readme

[04:06:08.0000] <jgraham>
Going from git to hg is a bit of a pain :(

[04:06:18.0000] <MikeSmith>
ah yeah

[04:06:35.0000] <MikeSmith>
Ms2ger: there's docs?

[04:06:43.0000] <Ms2ger>
In testharness.js

[04:06:48.0000] <Ms2ger>
That's what he copied

[04:06:52.0000] <MikeSmith>
oh

[04:06:53.0000] <MikeSmith>
hmm

[04:07:01.0000] <jgraham>
Right, I am not that sure about duplicating the docs

[04:07:04.0000] <MikeSmith>
that's not so good

[04:07:14.0000] <MikeSmith>
I don't think the docs should be duplicating

[04:07:35.0000] <MikeSmith>
the readme can just say "docs are in the source of testharness.js"

[04:28:39.0000] <jgraham>
Time to add a readme file: 2 minutes. Time to try and work out how to remove the one line change that accidentially made it into the local commit at the same time: 15 minutes. Mercurial: where mistakes should be punished by making you learn an entire new revision control system to fix them.

[04:29:06.0000] <Ms2ger>
hg revert foo/bar

[04:29:59.0000] <jgraham>
That adds an extra commit

[04:30:20.0000] <Ms2ger>
Oh, why'd you commit before checking if it was right?

[04:31:12.0000] <jgraham>
Because in git you only commit the things that you asked to commit. In hg it commits all changes.

[04:31:33.0000] <Ms2ger>
Yeah, that's really annoying in git :)

[04:31:52.0000] <jgraham>
Well you can always use -a

[04:32:09.0000] <Ms2ger>
Right

[04:32:34.0000] <jgraham>
Also, if you make a mistake and want to fix it you can use the same tools as you use for other operations

[04:32:38.0000] <Ms2ger>
Every time I'm forced to use git, I end up doing commit, cursing, and commit -a

[04:33:20.0000] <Ms2ger>
Fortunately that isn't often :)

[04:36:42.0000] <MikeSmith>
jgraham: "asseertions"

[04:36:58.0000] <MikeSmith>
anyway, thanks for adding it

[04:37:10.0000] <jgraham>
They're like assertions but eith more eeeee!

[04:37:17.0000] <MikeSmith>
hah

[04:37:26.0000] <jgraham>
eith is also like with but with more eeeee!

[04:37:30.0000] <MikeSmith>
a-seer-tions

[04:44:10.0000] <Ms2ger>
/me puts e cowboy hat on MikeeeSmith's head

[05:03:50.0000] <AryehGregor>
jgraham, I think you can do hg qimport tip tmp; hg qpop; $EDITOR .hg/patches/tmp; hg qpush; hg qfinish tip

[05:03:54.0000] <AryehGregor>
Or something.

[05:04:00.0000] <AryehGregor>
No, that's not right.

[05:04:08.0000] <AryehGregor>
hg qimport tip -n tmp; hg qpop; $EDITOR .hg/patches/tmp; hg qpush; hg qfinish tmp

[05:04:10.0000] <AryehGregor>
Something like that.

[05:04:21.0000] <AryehGregor>
Which, yes, is ludicrous and broken.

[05:04:25.0000] <AryehGregor>
It's hg, what do you expect.

[05:04:48.0000] <AryehGregor>
To be fair, git's commit -a is weird.  svn also defaults to it.

[05:05:00.0000] <AryehGregor>
hg rollback works here, too.

[05:05:08.0000] <AryehGregor>
That's probably the most sensible, if you haven't done anything else in between.

[05:06:09.0000] <jgraham>
Yeah, hg rollback would have worked in this case

[05:06:32.0000] <jgraham>
But yeah, I ended up using mq, which is sort of absurd

[06:09:06.0000] <annevk>
WebKit has so many CORS bugs...

[06:10:23.0000] <annevk>
e.g. http://trac.webkit.org/browser/trunk/Source/WebCore/loader/CrossOriginAccessControl.cpp#L142 has no checks for duplicate Access-Control-Allow-Origin headers

[06:10:47.0000] <annevk>
then a little further on it does some kind of origin-based check rather than a string equality check

[06:12:24.0000] <jgraham>
annevk: Is there a testsuite?

[06:14:02.0000] <annevk>
yeah

[06:15:59.0000] <jgraham>
Sucks if they are ignoring it

[06:53:43.0000] <MikeSmith>
"Moving the Stable Web Forward"

[06:55:10.0000] <smaug____>
Stable o_O

[07:00:11.0000] <karlcow>
You need a lot of horses power for these browsers these days

[07:14:05.0000] <Velmont>
jgraham: I'm bitten by those hg bugs/annoyances all the time as well.

[07:17:55.0000] <Ms2ger>
"features" is the word you're looking for :)

[07:21:36.0000] <jgraham>
Hmm, so gecko and webkit don't seem to execute scripts in documents create by DOMImplementation.createHTMLDocument()

[07:21:46.0000] <Ms2ger>
I'll believe that

[07:22:36.0000] <jgraham>
Well your spec doesn't seem to agree with your beliefs :)

[07:22:55.0000] <Ms2ger>
I'll believe that too :)

[07:24:25.0000] <Ms2ger>
Actually

[07:24:46.0000] <Ms2ger>
jgraham, surely this falls under the "no defaultView" condition?

[07:25:04.0000] <jgraham>
ooh, maybe

[07:25:08.0000] <jgraham>
Where's that?

[07:26:05.0000] <Ms2ger>
http://www.whatwg.org/specs/web-apps/current-work/multipage/webappapis.html#concept-n-script

[07:27:01.0000] <jgraham>
Yes, that makes sense

[07:27:24.0000] <jgraham>
So this should parse as if scripting is disabled also

[09:20:33.0000] <scott_gonzalez>
TabAtkins: I haven't been following <template> too closely. What's the confusion about qSA?

[09:22:04.0000] <Ms2ger>
<!doctype html><template><div></div></template>

[09:22:22.0000] <Ms2ger>
What's document.querySelectorAll("div")?

[09:22:35.0000] <scott_gonzalez>
empty set

[09:22:45.0000] <scott_gonzalez>
That is definitely what's expected by developers.

[09:22:57.0000] <Ms2ger>
By literally all developers?

[09:23:20.0000] <scott_gonzalez>
I want to say "yes", but I obviously do not have empirical data on that.

[09:23:38.0000] <scott_gonzalez>
Everyone uses <script type="x"> or <textarea> or whatever to ensure that behavior today.

[09:24:24.0000] <scott_gonzalez>
If it's not expected, then why use <template>?

[09:24:39.0000] <scott_gonzalez>
<div style="display: none;" id="my-tempalte">

[09:25:00.0000] <scott_gonzalez>
document.parse( document.getElementById( "my-template" ) )

[09:26:07.0000] <Ms2ger>
You're parsing an element..?

[09:27:18.0000] <scott_gonzalez>
sorry, .innerHTML

[09:27:27.0000] <scott_gonzalez>
Or I gues just clone it.

[09:27:52.0000] <scott_gonzalez>
The point is that everyone today is making sure their template contents are not actually part of the DOM.

[09:28:12.0000] <scott_gonzalez>
If anyone has some weird case where they want it to be, why would they use <template>?

[09:28:53.0000] <Hixie>
TabAtkins: ok, i added the definition of :hover to the HTML spec.

[09:29:20.0000] <Ms2ger>
Anyway, I'm probably convinced that it shouldn't match, but I wouldn't say everyone definitely agrees with me :)

[10:23:11.0000] <[tm]>
public-html is going to be a historical gem

[10:24:34.0000] <[tm]>
who was it earlier here taking about abnormal psychology?

[10:30:17.0000] <TabAtkins>
rafaelw_: I got bored reading scrollback, so this may have been discussed after I stopped reading, but the goal of the "<template> contents are shoved into a separate document" is solely so that stray queries against the doc don't accidentally return their contents.

[10:30:32.0000] <TabAtkins>
For all other purposes, ideally they'd be treated like normal contents in the normal DOM.

[10:31:34.0000] <TabAtkins>
If we gain the correct qSA behavior for free, but have to manually handle a bunch of manipulation APIs like .innerHTML, it may not be worth it, and we should swap and just manually handle qSA and friends.

[10:32:06.0000] <TabAtkins>
Where "manually" means some form of "generically, for all things that query against the document looking for nodes".

[10:40:44.0000] <Hixie>
TabAtkins: the only reason i am aware of for parsing into another doc's docfrag is to neuter the content

[10:42:04.0000] <TabAtkins>
What do you mean by "parsing into another doc's docfrag"?

[10:42:59.0000] <Hixie>
another Document's DocumentFragment

[10:43:15.0000] <TabAtkins>
It's the "parsing into" that I'm unclear about. Which APIs are you talking about?

[10:43:53.0000] <Hixie>
<template> parsing

[10:43:55.0000] <Hixie>
no api

[10:44:14.0000] <TabAtkins>
I still don't know what you're talking about. ;_;

[10:44:28.0000] <TabAtkins>
You're using words in combinations that I'm not quite sure about.

[10:44:31.0000] <Hixie>
heh

[10:44:33.0000] <Hixie>
sorry :-)

[10:44:37.0000] <Hixie>
when you have an HTML doc

[10:44:40.0000] <Hixie>
with a <template>

[10:44:52.0000] <Hixie>
the contents of that element are parsed by the HTML parser into a separate document's documentfragment object

[10:44:57.0000] <Hixie>
instead of into the document of the parser

[10:45:09.0000] <Hixie>
the goal of this is to neuter the dom

[10:45:13.0000] <Hixie>
of the template

[10:45:23.0000] <TabAtkins>
Yeah.

[10:45:51.0000] <Hixie>
so not "solely so that stray queries against the doc don't accidentally return their contents" :-)

[10:46:05.0000] <TabAtkins>
By "neuter" you presumably mean preventing image loads, etc.?

[10:46:10.0000] <Hixie>
right

[10:46:22.0000] <TabAtkins>
That doens't require a new doc though, afaict.

[10:46:38.0000] <Hixie>
well, i mean, we could always spec new magic

[10:46:50.0000] <Hixie>
but this is pretty magical stuff already so personally i'd rather just reuse what we have already

[10:47:05.0000] <TabAtkins>
Oh, we already have neutered documents?

[10:47:21.0000] <Hixie>
sure, e.g. createDocument(), XMLHttpRequest docs

[10:47:32.0000] <TabAtkins>
Hm, okay.

[10:56:03.0000] <[tm]>
if loonie number two says, "loonie number one is not batshit insane, you are", does that cancel out the looniness?

[10:56:27.0000] <TabAtkins>
No, it squares it.

[10:56:35.0000] <TabAtkins>
Also, what's the thread with all the looniness?

[11:01:11.0000] <[tm]>
TabAtkins: public-html-stridency

[11:02:53.0000] <TabAtkins>
...that's not a real email thread.

[11:13:26.0000] <rniwa>
Hixie: there was some discussion about what should happen when you call appendChild, removeChild, etc... on the template element itself

[11:13:31.0000] <rniwa>
(not it's content fragment)

[11:13:46.0000] <rniwa>
Hixie: or assign/retreive values to/from innerHTML of the template element.

[11:16:21.0000] <TabAtkins>
Yeah, DOM manipulation on the <template> seems like it should work, particularly .innerHTML.

[11:16:41.0000] <TabAtkins>
Though I wouldn't be *too* sad if it didn't (and you had to descend into its doc first), it just seems weird.

[11:20:19.0000] <jgraham>
I would be very upset if innerHTML doesn't work but am pretty unbothered what happens with appendChild and friends

[11:20:47.0000] <jgraham>
(you can already do things like append children to a void element which makes equally little sense)

[11:25:26.0000] <rniwa>
TabAtkins, jgraham: on the other hand, innerHTML and appendChild behaving differently is also confusing

[11:25:36.0000] <TabAtkins>
Yeah.

[11:25:47.0000] <rniwa>
i would be personally more annoyed with that than innerHTML not replacing the content fragment.

[11:25:57.0000] <rniwa>
if we added innerHTML on the content fragment, we can just do

[11:26:05.0000] <rniwa>
templateElement.content.innerHTML = ~

[11:26:18.0000] <rniwa>
jgraham: not sure if you're okay with that idea.

[11:26:33.0000] <Ms2ger>
Are we back there? :)

[11:26:44.0000] <rniwa>
Ms2ger: all the way!

[11:31:43.0000] <jgraham>
I wonder if you could just make <template> an ElementProxy or something that forwarded all method calls to template.content

[11:31:57.0000] <jgraham>
(with some exceptions of course)

[11:32:33.0000] <TabAtkins>
That makes sense to me.

[11:34:15.0000] <hober>
sicking: i've attempted to add some signal to the issue-204 thread; if you find the time, I'd be very grateful for a followup to http://lists.w3.org/Archives/Public/public-html/2012Jun/0066.html

[11:35:54.0000] <sicking>
hober: sorry, won't have time for a bit. Last day before vacation today and i have a lot to finish up before heading out :(

[11:35:56.0000] <sicking>
like packing :)

[11:36:17.0000] <Ms2ger>
That doesn't make sense to me :)

[11:37:29.0000] <Ms2ger>
hober, you know, if you have a finite amount of signal and an infinite amount of noise, the s:n ratio remains zero :)

[11:37:41.0000] <hober>
sicking: that's fine :)

[11:37:48.0000] <hober>
Ms2ger: indeed.

[12:01:46.0000] <Velmont>
hober: I liked the summary, made me not feel guilty for only reading the headlines :]

[12:15:05.0000] <TabAtkins>
Anyone ever been to the Dublin Web Summit?

[12:15:15.0000] <TabAtkins>
Got invited to speak there, wondering if it's worth a trip to Europe.

[12:15:54.0000] <TabAtkins>
Then again, that'll be my first time to Ireland, which is pretty attractive all by itself.

[12:19:05.0000] <jgraham>
No idea about the conference, but Ireland is worth a visit (irrespective of your taste for Guinness)

[12:19:22.0000] <TabAtkins>
Gradually making myself like the taste of stouts.

[12:19:36.0000] <TabAtkins>
(I have a problem with bitter flavors that I'm training myself out of.)

[12:19:57.0000] <Ms2ger>
Oh, ojan?

[12:20:15.0000] <ojan>
i'm here

[12:20:17.0000] <ojan>
what's up?

[12:20:31.0000] <Ms2ger>
rniwa volunteered you to fix some of his bugs ;)

[12:20:39.0000] <ojan>
lol...not likely :)

[12:20:53.0000] <ojan>
Ms2ger: which bugs?

[12:21:05.0000] <rniwa>
ojan: appendChild, etc....

[12:21:13.0000] <rniwa>
ojan: we don't match the spec exactly

[12:21:56.0000] <ojan>
i'm certainly happy to review patches fixing bugs in that area :)

[12:22:10.0000] <Ms2ger>
Well played

[12:22:17.0000] <Ms2ger>
You know this game, sir

[12:24:26.0000] <rniwa>
ojan: LOL.

[12:24:36.0000] <rniwa>
we've got to find someone who's motivated enough to fix these :\

[12:24:48.0000] <rniwa>
ojan: maybe we can find some friendly Motorola contributor to do it.

[12:24:52.0000] <Ms2ger>
Hah

[12:24:57.0000] <rniwa>
ojan: they're big on fixing compatibility problems :D

[12:24:58.0000] <Ms2ger>
MD first

[12:25:09.0000] <zewt>
TabAtkins: i've never cared for beer, and i have a basic issue with the idea of drinks that i have to teach myself to like

[12:25:24.0000] <ojan>
seriously though...i do want to see us fix these issues

[12:25:31.0000] <TabAtkins>
zewt: That's a silly position, unless you've never started liking anything at all that you disliked as a child.

[12:25:35.0000] <ojan>
i just have too much on my plate to fix everythign i want to see fixed :)

[12:25:46.0000] <zewt>
pretty sure my dislike for beer doesn't come from not liking it as a child :)

[12:25:52.0000] <ojan>
oh...we have a new eng who might want to do this....

[12:26:00.0000] <ojan>
Ms2ger, rniwa: are there bugs filed?

[12:26:01.0000] <TabAtkins>
For example, sharp chedder or a good blue cheese are hard to like initially, but very delicious once you train yourself.

[12:26:19.0000] <rniwa>
ojan: maybe.

[12:26:36.0000] <TabAtkins>
Beer was the last of the alcoholic trinity that I was able to enjoy, though.

[12:26:44.0000] <rniwa>
ojan: one thing we need to do is to figure out figure out all the bugs in our code first.

[12:26:48.0000] <TabAtkins>
Once you get over the hump, there are a *lot* of delicious ones.

[12:26:54.0000] <rniwa>
ojan: i don't think bugs filed for all of them.

[12:27:11.0000] <Ms2ger>
ojan, I've got tests! ;)

[12:28:19.0000] <ojan>
Ms2ger, rniwa: well...if you CC me on bugs, i'll run them by the new guy and see if he wants to take a stab

[12:28:49.0000] <zewt>
ojan: heh, there's no better way to learn the way around a codebase than fixing bugs

[12:29:13.0000] <Ms2ger>
ojan, and even better, rniwa can make them run on your bots :)

[12:30:30.0000] <rniwa>
Ms2ger: sounds like a good idea :)

[12:30:41.0000] <rniwa>
Ms2ger: we're still discussing about how to import W3C tests into our repository

[12:30:48.0000] <rniwa>
Ms2ger: and we haven't had a good resolution on it :\

[12:31:45.0000] <Ms2ger>
/me pulls up Chrome

[12:35:05.0000] <Ms2ger>
Inserting an element before a doctype

[12:35:07.0000] <Ms2ger>
Known?

[12:37:02.0000] <Ms2ger>
"Add inputmode attribute support, as per XHTML Basic 1.1"

[12:45:41.0000] <Ms2ger>
rniwa, what does Node::inDocument() mean?

[12:46:12.0000] <rniwa>
Ms2ger: means that the node is still attached to the document.

[12:46:28.0000] <rniwa>
Ms2ger: Node::document() returns the owner document

[12:46:54.0000] <Ms2ger>
Mm

[12:47:11.0000] <Ms2ger>
And it's always true for documents?

[12:47:52.0000] <rniwa>
Ms2ger: think so

[12:48:23.0000] <rniwa>
Ms2ger: see ConstructionType

[12:48:26.0000] <rniwa>
Ms2ger: in Node.h

[12:48:39.0000] <rniwa>
Ms2ger: CreateDocument = CreateContainer | InDocumentFlag

[12:49:55.0000] <Ms2ger>
Whoa, you have an implementation of Notation

[12:50:29.0000] <jgraham>
Notation?

[12:50:45.0000] <rniwa>
Ms2ger: yeah...

[12:51:04.0000] <Ms2ger>
jgraham, http://www.w3.org/TR/DOM-Level-3-Core/core.html#ID-5431D1B9

[12:51:41.0000] <jgraham>
Oh My

[12:51:59.0000] <Ms2ger>
The file claims it's never instantiated, though

[12:54:10.0000] <Ms2ger>
rniwa, HTML DOM?

[12:54:48.0000] <rniwa>
jgraham: i know, right?

[12:54:57.0000] <rniwa>
Ms2ger: i don't even know who added that code.

[12:55:01.0000] <rniwa>
Ms2ger: it prepares my involvement to webkit

[12:55:11.0000] <Ms2ger>
No, for the insertBefore bugs

[13:03:24.0000] <rniwa>
JQUERY HAS ANSWERED

[13:03:30.0000] <rniwa>
SCRIPTING IS INTENTIONAL :D

[13:06:34.0000] <hober>
Velmont: :)

[13:12:48.0000] <Ms2ger>
Heh

[13:23:47.0000] <Ms2ger>
ojan, rniwa, enjoy :)

[14:17:36.0000] <Hixie>
rniwa: i think it would be exactly the kind of crazy confusing behaviour the Web is famous for for things like appendChild and innerHTML to do the "useful" thing instead of being consistent with what they do everywhere else

[14:23:52.0000] <jgraham>
Hixie: No more so than the HTML parser doing the "useful" thing

[14:30:07.0000] <Hixie>
except we don't really have an alternative for the parser

[14:30:34.0000] <Hixie>
plus the parser has plenty of precedent for doing different things for different tags

[14:30:57.0000] <rniwa>
Hixie: i agree with you too.

[14:31:27.0000] <rniwa>
Hixie: i think it's probably saner for those APIs not to work on content fragment

[14:39:41.0000] <annevk>
so we need at least 3 specifications to define :hover?

[14:39:43.0000] <annevk>
brilliant

[14:40:12.0000] <annevk>
no implementor is going to find that out :/

[14:40:54.0000] <zewt>
show all three specs on the same page; hover an icon to pick which to see

[14:42:31.0000] <annevk>
the most important spec of those, hit testing, doesn't exist of course

[14:43:52.0000] <Hixie>
annevk: i don't want to put it in html, but since they won't put it in selectors... (same with :active and the others)

[14:47:23.0000] <annevk>
my cynical opinion of non-tree selectors defined by the CSS WG is that it's syntax plus some fluff words to give a rough hint of how things are supposed to work without actually defining how they work

[14:47:40.0000] <annevk>
which seems rather pointless

[14:49:33.0000] <Hixie>
yeah i don't really understand the reluctance

[14:51:10.0000] <annevk>
oh I do, it's the idea that CSS is unrelated to everything else and therefore the specifications must be alien of that too

[14:53:16.0000] <hober>
it's crazy

[14:53:52.0000] <annevk>
yes

[14:54:45.0000] <gsnedders>
How long till someone writes a "CSS applied to DOM" spec?

[14:54:51.0000] <Hixie>
annevk: that's what i don't understand

[14:56:20.0000] <annevk>
Hixie: it's the mindset of some relatively influential people within the CSS WG

[14:56:37.0000] <annevk>
Hixie: I don't think it makes sense, but they seem kind of fixed on that

[14:56:54.0000] <TabAtkins>
Uh, what?

[14:57:00.0000] <annevk>
Hixie: I gave up arguing on this though

[14:57:21.0000] <annevk>
(and then later left the WG entirely)

[14:58:03.0000] <TabAtkins>
CSS defines how :hover works generically.  HTML defines a special additional case that causes :hover to match, based on stuff that only exists in HTML.

[14:58:39.0000] <TabAtkins>
Don't bullshit, anne. ^_^

[14:59:11.0000] <annevk>
that's exactly what I was just saying...

[14:59:20.0000] <annevk>
well plus that hit testing is not defined

[14:59:27.0000] <annevk>
anyway, bedtime

[15:00:38.0000] <TabAtkins>
I'd love to define hit-testing, but I don't know what actually needs to be defined.

[15:00:42.0000] <TabAtkins>
Like, at what level are we missing stuff?

[15:03:41.0000] <TabAtkins>
Hixie: The reluctance to put @label-related stuff into Selectors is that CSS applies to more than HTML, so if there are things that are specific to the host language, they should be defined by the host language.

[15:04:04.0000] <TabAtkins>
And, as long as the host spec is being actively editted, like HTML is, that's fine.

[15:04:18.0000] <TabAtkins>
If that wasn't true, we'd include it in the CSS spec just to have it defined somewhere.

[15:05:53.0000] <TabAtkins>
But seriously, if someone can explain to me what's actually needed for hit-testing, I'll write the spec for it.

[15:10:13.0000] <rniwa>
TabAtkins: the problem with hit-testing is that a lot of it will be necessarily platform dependent

[15:10:59.0000] <rniwa>
TabAtkins: e.g. hit testing for editing can't be spec'ed one way or other because each platform uses different conventions with respect to bidiretional text for example.

[15:11:12.0000] <TabAtkins>
Is it?  I mean, you have a coordinate, and a formatted page.  Defining which element that coordinate hits shouldn't be difficult, I would assume.

[15:11:15.0000] <Hixie>
TabAtkins: i agree with anne that there's no point being generic. selectors should just give up and realise there is only one host language really.

[15:11:16.0000] <dglazkov>
YO

[15:11:33.0000] <rniwa>
TabAtkins: it is, unfortunately.

[15:11:35.0000] <TabAtkins>
Hixie: But there isn't.  SVG is a valid second host language.

[15:11:42.0000] <Hixie>
TabAtkins: it's the same language.

[15:11:46.0000] <TabAtkins>
rniwa: Okay, then I don't understand.  ^_^  I'll need some more details at some point.

[15:11:51.0000] <rniwa>
TabAtkins: hit-testing on element might work

[15:11:54.0000] <Hixie>
TabAtkins: "html+svg+math+xml+css+dom+js+..."

[15:11:58.0000] <rniwa>
TabAtkins: but definitely not when you have text

[15:12:19.0000] <rniwa>
TabAtkins: presumably, you want to spec hit-testing on text as well right?

[15:12:30.0000] <rniwa>
it's kind of odd to have a spec that only specifies hit-testing on elements without text :\

[15:12:43.0000] <TabAtkins>
rniwa: For the purposes of CSS, no.  I dunno if it's useful to specify text hit-testing.

[15:12:52.0000] <rniwa>
TabAtkins: ok.

[15:12:53.0000] <shepazu>
/me writes all his web pages in MathML with inline HTML and SVG

[15:12:57.0000] <rniwa>
TabAtkins: how about things like first-lettter?

[15:13:34.0000] <TabAtkins>
rniwa: ::first-letter is exactly the same as any other element for this purpose.

[15:13:57.0000] <rniwa>
TabAtkins: and how about inline elements that are intersparsed because of UBA?

[15:14:18.0000] <TabAtkins>
rniwa: Their boxes still have definite positions given by the layout algorithm already.

[15:14:31.0000] <TabAtkins>
(iirc, it's somewhat handwavey on that point, though)

[15:14:38.0000] <rniwa>
TabAtkins: hm... i guess.

[15:14:55.0000] <rniwa>
TabAtkins: oh yeah, i guess it works as long as you don't define what happens to selection

[15:14:57.0000] <TabAtkins>
By the time you're doing hit-testing, you've already done layout and positioning, and just have a bunch of elements with geometry.

[15:15:20.0000] <TabAtkins>
Yeah, doing selection requires specifying it on text instead of elements.

[15:15:31.0000] <rniwa>
okay, that makes sense :)

[15:15:48.0000] <rniwa>
when I hear the word hit-testing, I automatically assume it involves text

[15:15:52.0000] <rniwa>
because that's what browsers do.

[15:15:55.0000] <jamesr_>
defining hit-testing with transforms would be great

[15:16:00.0000] <TabAtkins>
The two algorithms are pretty disjoint - you'd first hit-test against geometry to see which element was hit, then do it against text to see where in the element's text was hit.

[15:16:05.0000] <jamesr_>
that's a non-trivial, non-interoperable thing completely unrelated to text

[15:16:21.0000] <rniwa>
jamesr: yeah, but that'll be hard to spec & implement :\

[15:16:28.0000] <TabAtkins>
jamesr_: Interesting that it's non-trivial.  The definition is pretty trivial when you work directly with geometry.

[15:16:49.0000] <rniwa>
TabAtkins: not in webkit but you could create a conceptual boundary like that, yes

[15:17:08.0000] <TabAtkins>
rniwa: Yeah, I have no idea what sort of division would be most useful for browsers.

[15:17:44.0000] <rniwa>
TabAtkins: i think it's okay as long as the spec isn't algorithmic

[15:17:55.0000] <TabAtkins>
rniwa: Surely hit-testing for :hover and mousein/out events and such doesn't care about text?

[15:18:19.0000] <Hixie>
well, if you have inlines they involve text, right?

[15:18:24.0000] <Hixie>
their position i mean

[15:18:32.0000] <TabAtkins>
Hixie: No, they involve the layout boxes generated by the text.

[15:18:41.0000] <TabAtkins>
The geometry of the text itself is irrelevant.

[15:18:42.0000] <Hixie>
i guess i don't really understand the question

[15:18:53.0000] <TabAtkins>
Me too, I think.

[15:19:02.0000] <Hixie>
seems like the geometry of the text is what affects where the inlines will end up, but *shrug*

[15:19:05.0000] <TabAtkins>
See: "I don't know what actually needs to be defined".

[15:19:11.0000] <Hixie>
we'll have to ask anne tomorrow :-)

[15:19:17.0000] <TabAtkins>
Geometry of the text is completely UA specific.

[15:19:22.0000] <TabAtkins>
Based on the text layout engine.

[15:20:20.0000] <rniwa>
define what you all mean by "geometry of text"

[15:20:52.0000] <rniwa>
anyways, CSSOM appears to expose CaretPosition or something

[15:21:03.0000] <rniwa>
that is potentially text related

[15:21:04.0000] <jamesr_>
TabAtkins, intersection! subdivision! not-rectangularity

[15:21:06.0000] <Hixie>
surely the TrueType spec defines what the text geometry needs to be

[15:21:14.0000] <jamesr_>
TabAtkins, 3d transforms are non-interoperable today

[15:21:20.0000] <jamesr_>
(or last i checked)

[15:23:07.0000] <TabAtkins>
jamesr_: Bah, that's all efficiency.  Conceptually it's: take a bunch of elements, get their hittable geometry, transform as appropriate, sort by descending z-order, then find the first that contains the given point.

[15:23:39.0000] <jamesr_>
sort what by descending z-order? there is no global sort order for elements

[15:23:43.0000] <TabAtkins>
Hixie: Tell that to the engines and their slightly non-interop text behavior for bunches of things.

[15:23:47.0000] <TabAtkins>
Yes there is.

[15:23:53.0000] <jamesr_>
only if you subdivide

[15:24:05.0000] <TabAtkins>
Oh, with 3d transforms involved, yeah.

[15:24:23.0000] <jamesr_>
right. http://greggman.com/downloads/examples/intersecting-elements-3d-css.html

[15:24:42.0000] <Hixie>
TabAtkins: "slightly" doesn't mean there's no interop, it just means interop is defined to be within certain error margins.

[15:24:47.0000] <Hixie>
TabAtkins: that's pretty common on the web

[15:25:13.0000] <jamesr_>
without 3d it's pretty simple and probably fairly easy to spec

[15:25:17.0000] <TabAtkins>
Hixie: I'm not going to be the one to define that, particularly with things like synthetic bolding and the like.

[15:25:27.0000] <TabAtkins>
I'm willing to say "lay out the text, and give us the bounding box".

[15:25:52.0000] <Hixie>
TabAtkins: clearly i'm not volunteering for that either :-)

[15:25:54.0000] <TabAtkins>
jamesr_: Yeah, should be.

[15:26:21.0000] <jamesr_>
interestingly, i found out that in IE some invisible elements are invisible to hit-testing

[15:26:36.0000] <TabAtkins>
Hm? You mean like visibility:hidden?

[15:26:44.0000] <TabAtkins>
Or like "color:transparent; background:transparent;"?

[15:26:48.0000] <jamesr_>
setting background-color: grey changed whether an element got clicks or not

[15:26:52.0000] <jamesr_>
latter

[15:26:55.0000] <TabAtkins>
lolwut

[15:27:27.0000] <TabAtkins>
I assume they're optimizing away the draw, and it accidentally skips the "add to hit-test structure" too.

[15:27:35.0000] <jamesr_>
i was wondering if it was a clickjack defense

[15:27:42.0000] <TabAtkins>
Ooh, maybe.

[15:27:44.0000] <jamesr_>
behavior was different for <div> vs <canvas>

[15:29:04.0000] <Hixie>
IE has done this for ages

[15:29:13.0000] <Hixie>
i wrote a spec for it once (as best i could)

[15:29:26.0000] <Hixie>
it was terrifyingly complicated

[15:30:33.0000] <smaug____>
yeah, it is IEism from IE4 or so

[15:30:56.0000] <TabAtkins>
Bleh.

[15:35:10.0000] <smaug____>
TabAtkins: FYI, https://bugzilla.mozilla.org/show_bug.cgi?id=102695

[15:50:43.0000] <TabAtkins>
smaug____: Thanks!

[16:02:15.0000] <jamesr_>
Hixie, any idea where that spec you wrote is these days?

[16:03:29.0000] <jamesr_>
i'm morbidly curious


2012-06-09
[19:39:28.0000] <Hixie>
jamesr_: no idea. i think hallvord was the last custodian, try asking him.

[20:10:35.0000] <MikeSmith>
Hixie: which spec was that?

[21:01:20.0000] <MikeSmith>
"An expert is a man who has stopped thinking because he knows."

[21:27:53.0000] <Hixie>
MikeSmith: hit testing in IE

[21:28:03.0000] <MikeSmith>
ah

[22:53:37.0000] <annevk>
Latest on hit testing was this http://lists.w3.org/Archives/Public/www-style/2010Aug/0407.html

[22:53:47.0000] <annevk>
Then tantek was going to add it to CSS3 UI

[22:54:01.0000] <annevk>
Then that did not happen and it was going to be CSS4 UI

[22:54:21.0000] <annevk>
I kind of lost hope. They should just have let Leif do it

[23:04:32.0000] <annevk>
jamesr_: Hixie: ^^

[23:26:36.0000] <rniwa>
annevk: hit testing is hard :\

[23:26:50.0000] <rniwa>
annevk: i think one thing we need to do is decide the scope of the spec.

[23:27:09.0000] <rniwa>
annevk: if you try to spec everything including caret position, selection, etc... then it becomes an impossible task

[23:27:45.0000] <rniwa>
annevk: if, however, we restrict ourselves to be focusing on things like just elements, then there might be some hope :)

[23:28:13.0000] <annevk>
rniwa: I've mostly been thinking about mouse events and :hover, but editing is indeed a problem too

[23:28:30.0000] <rniwa>
annevk: yeah, just spec'ing mouse events and :hover will be good for most use cases.

[23:28:41.0000] <rniwa>
annevk: i don't think we can spec hit testing for editing because of different platform conventions

[23:28:48.0000] <annevk>
e.g. http://dev.w3.org/csswg/cssom-view/#dom-document-caretpositionfrompoint is not defined much at all

[23:29:10.0000] <rniwa>
annevk: i mean can you imagine having to specify 5-6 different conventions for different caret behaviors around bidi embedding boundaries?

[23:29:30.0000] <annevk>
rniwa: I can imagine it would be painful :)

[23:29:40.0000] <rniwa>
annevk: i know at least windows, mac, and linux all have different behaviors when you click around bidi boundary.

[23:30:01.0000] <rniwa>
annevk: not to mention i think android & chrome os also use different conventions from all the rest :(

[23:30:14.0000] <rniwa>
annevk: i'm sure there are plenty more on this.

[23:30:24.0000] <annevk>
yeah maybe once you get to that point it would be okay to let it be platform-dependent with some rough guidelines

[23:30:31.0000] <rniwa>
yup.

[23:30:40.0000] <rniwa>
it's not realistic to spec everything at some point.

[23:30:57.0000] <annevk>
but which text you hit depending on which element it is in would be a great start

[23:30:59.0000] <rniwa>
annevk: btw, we should really fix click event

[23:31:14.0000] <rniwa>
annevk: it's insane that we don't fire click event whenever cursor moves across an element boundary :\

[23:31:37.0000] <rniwa>
annevk: (the spec currently says we fire click only if mousedown & mouseup happen on the same target)

[23:31:50.0000] <rniwa>
annevk: (which is very unlikely scenario if you have tiny spans, etc...)

[23:32:07.0000] <annevk>
is that actually what is implemented?

[23:32:14.0000] <rniwa>
annevk: yeah, in webkit :(

[23:32:17.0000] <rniwa>
annevk: i really want to fix it.

[23:32:31.0000] <rniwa>
annevk: because our current behavior is insanely bad from UX stand point of view.

[23:32:44.0000] <rniwa>
annevk: i think almost all other browsers do something different, which i don't quite understand.

[23:32:48.0000] <annevk>
UI Events spec is kind of a mess

[23:32:56.0000] <rniwa>
annevk: e.g. IE always fires click event

[23:33:02.0000] <rniwa>
annevk: indeed.

[23:33:11.0000] <rniwa>
annevk: but that's the most important kind of events!

[23:33:32.0000] <rniwa>
annevk: i mean... who cares about all those exotic events. UI events are the one developers use the most.

[23:34:34.0000] <rniwa>
but it's kind of understandable the way it is now. spec'ing UI events is hard :\

[23:34:35.0000] <annevk>
I guess the problem is that they're hard and that properly defining them is not something many people can do

[23:34:41.0000] <annevk>
:)

[23:34:45.0000] <rniwa>
annevk: yup.

[23:35:05.0000] <rniwa>
annevk: i've seen enough code in webkit to know that much.

[23:35:38.0000] <annevk>
e.g. focus events are a mess too

[23:36:10.0000] <rniwa>
annevk: yeah.

[23:36:21.0000] <rniwa>
annevk: oh my... don't get me started on focusin, focusout, etc...

[23:36:32.0000] <rniwa>
they're giving me nightmares.

[23:36:52.0000] <annevk>
better not talk about them now then :p

[23:36:59.0000] <rniwa>
you can talk about it.

[23:37:05.0000] <rniwa>
but i might just rant for an hour :P

[23:37:56.0000] <rniwa>
annevk: i think the biggest headache for me right now is the relationship between selection & focus

[23:38:02.0000] <rniwa>
annevk: in webkit, focus follows selection

[23:38:10.0000] <rniwa>
on all other browsers, selection follows focus

[23:38:27.0000] <rniwa>
meaning that if you type something, the character appears at where selection is in webkit

[23:38:34.0000] <rniwa>
but at where focus is on all other browsers.

[23:38:42.0000] <rniwa>
apparently this is Mac-ism

[23:40:37.0000] <annevk>
how do you reproduce that?

[23:42:34.0000] <rniwa>
annevk: put focus & selection on different nodes

[23:42:44.0000] <rniwa>
and type a character

[23:43:55.0000] <annevk>
oh if you select something via an API focus is not changed?

[23:44:49.0000] <rniwa>
annevk: yeah something like that

[23:44:54.0000] <rniwa>
it's a little tricky to do.

[23:46:34.0000] <annevk>
I need to go get breakfast before they stop serving it

[23:46:59.0000] <rniwa>
annevk: we'll see if i can come up with an example by the time you come back ;)

[23:47:01.0000] <annevk>
I've kind of wanted to define UI events for a long time, but the last time I attempted with keyboard events I got stuck

[23:52:50.0000] <rniwa>
annevk: https://bug-56271-attachments.webkit.org/attachment.cgi?id=85623 is a fun demo

[23:53:50.0000] <rniwa>
(from https://bugs.webkit.org/show_bug.cgi?id=56271)

[23:53:59.0000] <rniwa>
Ms2ger: hi Ms2ger! how about some UI events discussion :D

[23:54:34.0000] <Ms2ger>
How about replaceChild? :)

[23:54:54.0000] <rniwa>
Ms2ger: LOL. I see what you did there.

[00:00:37.0000] <Velmont>
Oh what a beautiful moorning~

[00:13:31.0000] <Ms2ger>
/me writes some tests for WebKit to fail

[00:48:11.0000] <asmodai>
annevk: http://www.mediawiki.org/wiki/Extension:Math/MathJax_testing

[01:48:51.0000] <annevk>
Ms2ger: http://jamesmckay.net/2012/06/you-can-no-longer-afford-not-to-take-git-seriously/

[01:52:14.0000] <annevk>
uhm http://validator.nu/?doc=http%3A%2F%2Fhtml5boilerplate.com%2F

[01:52:17.0000] <annevk>
paul_irish: ^^

[01:52:53.0000] <Ms2ger>
<!doctype html public "✰"

[01:52:55.0000] <Ms2ger>
Oh really

[01:53:18.0000] <Ms2ger>
http://validator.nu/?doc=http%3A%2F%2Fwww.whatwg.org%2Fissues%2Fdata.html

[01:53:50.0000] <annevk>
HTML is hard

[01:54:07.0000] <Ms2ger>
Let's go shopping?

[01:54:38.0000] <annevk>
it's raining outside

[01:55:44.0000] <Ms2ger>
Sunny here

[01:55:50.0000] <Ms2ger>
... for now

[01:57:15.0000] <Velmont>
You say I'm leaving sunny southern europe to go up to rainy Norway? :-(

[01:58:13.0000] <annevk>
Velmont: you could stay :)

[01:59:03.0000] <Velmont>
annevk: And let y'all get the best places at the new office? Neh, I'll pass :]

[01:59:22.0000] <Ms2ger>
We have an office in Paris if you're interested in working further south? :)

[02:00:07.0000] <Velmont>
lol ;D

[02:02:34.0000] <Ms2ger>
(The same is true for other Operians, of course)

[02:03:29.0000] <annevk>
Ms2ger: are you actually employed these days or just helping out Mozilla recruiting on your personal time?

[02:03:43.0000] <Ms2ger>
The latter :)

[02:09:37.0000] <Velmont>
Why does everyone try to brain drain Opera all the time?

[02:09:45.0000] <Velmont>
What about stealing a bit from the others?

[02:10:59.0000] <Ms2ger>
We want smart people

[02:33:06.0000] <Velmont>
MikeSmith: I updated http://w3c-test.org/webappsec/tests/cors/submitted/opera/staging/resources/cors-makeheader.php -- makes it possible to send 2 allow-origin headers in response. For some extra tests for bugs in WebKit and Fx.

[02:34:29.0000] <Velmont>
MikeSmith: I might update it even more on monday, because I see I'm not checking the case where  crossorigin.site.com -> site.com,  all the tests are doing   site.com -> crossorigin.site.com.   Might be some bugs hiding there.

[02:35:31.0000] <Ms2ger>
Bugs in Gecko? Couldn't be

[02:35:46.0000] <annevk>
Opera found them first

[02:35:50.0000] <Ms2ger>
Well played

[02:37:59.0000] <Ms2ger>
And Opera had the weird throwing-nodes-as-exceptions first? :)

[03:40:42.0000] <Von_Davidicus>
Why is it that, in HTML5, the contents of a header attribute MUST refer to the ID of a <th> element in the same table, and what can I do to get around that headache?

[03:46:12.0000] <Ms2ger>
Don't use that attribute if you're going to misuse it

[03:47:13.0000] <Von_Davidicus>
Well, I gotta use SOMETHING to make the JS on my webpage work--I was using the headers attributes to refer to the IDs of <input> elements.

[03:58:10.0000] <Von_Davidicus>
I guess I could use the class attribute...  *Misses axis, which was another useful info dump attribute*

[04:56:38.0000] <Ms2ger>
MikeSmith, http://w3c-test.org/framework/ is broken

[10:55:51.0000] <methuselahah>
where can I find the most detailed html5 javascript documentation for html5 video?


2012-06-10
[20:35:57.0000] <Von_Davidicus>
So what, precisely, are the advantages of upgrading a page from HTML 4.01 to HTML 5?

[21:14:29.0000] <Hixie>
Von_Davidicus: what do you mean by "upgrading a page from HTML 4.01 to HTML 5"?

[21:15:46.0000] <Von_Davidicus>
As in changing the Document Type Declaration to <!DOCTYPE html> and implementing the needed changes to make it all valid and--if need be--fixing the JavaScript so that it works with the resultant code.

[21:16:15.0000] <Hixie>
there's no advantage to changing the doctype line unless you are changing it from something that used to trigger quirks mode

[21:16:26.0000] <Hixie>
if that is the case, the advantage is slightly saner browser behaviour in weird cases

[21:17:13.0000] <Von_Davidicus>
I don't think it triggered quirks mode.

[21:17:16.0000] <Hixie>
if it's not valid contemporary HTML then the advantage to making it so is you avoid whatever problems are the reason for us to make it invalid

[21:17:39.0000] <Hixie>
but if the page is working fine, there's no reason to do make work

[21:18:00.0000] <Von_Davidicus>
Well, according to the HTML5 validator, I was abusing the tar out of the headers element.

[21:18:08.0000] <Hixie>
(most HTML4 docs should still be valid today if they were strict mode docs and didn't do anything problematic)

[21:18:13.0000] <Hixie>
<headers>?

[21:18:20.0000] <Von_Davidicus>
er...

[21:18:24.0000] <Von_Davidicus>
headers attribute.

[21:18:27.0000] <Hixie>
aah

[21:18:47.0000] <Hixie>
yeah, the validator is much better now than validators in the html4 days were

[21:18:48.0000] <Von_Davidicus>
They weren't referring to an ID set in the table, but to IDs of input elements.

[21:18:52.0000] <Hixie>
hah

[21:19:08.0000] <Hixie>
that is indeed the kind of thing the modern validators will catch if they're following the spec  :-)

[21:20:46.0000] <Von_Davidicus>
I kinda like the [data-*] attribute--that's what I used to replace what I was using the headers attributes for (I came up with [data-keywords])

[21:22:55.0000] <Von_Davidicus>
Is there a way to say "this data-* attribute should work like an IDREFS attribute"?

[21:26:39.0000] <Von_Davidicus>
One thing I liked about using the headers attribute was if I had a keyword that was misspelled or something (which meant the script wouldn't work), it showed up as a warning.  The relevant page is http://www.mrinitialman.com/Furcadia/DragonSpeakLines.shtml

[21:36:49.0000] <Hixie>
Von_Davidicus: data-* is just useful for scripts, so the way you make it work like an idrefs attribute is to make the script treat it like an idref attribute

[21:37:53.0000] <Hixie>
Von_Davidicus: if you want warnings, just have your script check that the values are right and call console.warning() if they're not

[21:53:55.0000] <Von_Davidicus>
Okay.

[21:57:01.0000] <Von_Davidicus>
By the way, with the way you phrased your comment, you made it sound like data-* was created mainly for scripts.  Is that true?  :)

[22:18:29.0000] <Hixie>
only for scripts, pretty much

[22:18:39.0000] <Von_Davidicus>
*Nod.*

[22:36:15.0000] <Von_Davidicus>
I'll admit--I've done some pages where an upgrade from HTML 2.0 wouldn't change much.

[22:37:39.0000] <Hixie>
i know the feeling :-)

[22:38:39.0000] <Von_Davidicus>
Oh, and I've figured out something:  I've finally discovered that XSLT is great when it's used as a client-side processing language (such as referencing multiple XML files or creating an SVG diagram out of an XHTML document).  How does it hold up against, say, a *server*-side processing language?   Aaaaaaahm....

[22:38:53.0000] <Von_Davidicus>
So, it's got advantages over XHTML.

[22:39:03.0000] <Hixie>
/me is skeptical that XSLT is great anywhere, but ok

[22:39:30.0000] <Von_Davidicus>
The only Server-Side language XSLT can outperform?  Server-side includes.  And I'm not certain about that, either.

[22:41:55.0000] <Von_Davidicus>
/me dusts off SSI from time to time--such as when a page is SO big that it's a pain to update.

[00:20:28.0000] <Von_Davidicus>
Thanks, Hixie.  That script-based solution works well.

[00:20:46.0000] <Hixie>
np

[00:21:02.0000] <Von_Davidicus>
I think I've realized why I use XSLT.

[00:21:46.0000] <Von_Davidicus>
I think I do it to show that I *can* pull it off.

[00:22:50.0000] <Hixie>
that's a fine reason to solve a rubix cube

[00:23:02.0000] <Hixie>
not necessarily a good reason to use a programming language :-P

[00:24:57.0000] <Von_Davidicus>
Maybe not.  But I'd hate to let something I learned go comepletely to waste.  And I *have* used webhosts before that didn't have server-side capabilities.

[00:25:12.0000] <Hixie>
heh

[00:25:27.0000] <Hixie>
i recommend reading up on something called the "sunk cost fallacy"

[00:25:31.0000] <Von_Davidicus>
*glares at Furnation*

[00:28:48.0000] <Von_Davidicus>
Furnation is/was (these days, mostly 'was'), a *very* well-known web host within a certain fandom, and it was one of those hosts that ran on donations as well as their own publishing company.  The latter was a good idea and might have carried the host better if they hadn't dropped the ball so often they left a permanent dent on the floor.

[00:29:04.0000] <Von_Davidicus>
But it had no server-side capabilities.  Not even includes.

[00:30:44.0000] <Von_Davidicus>
So I suppose in *that* situation, it would be either hardcode everything, use XSLT, or use frames.

[00:47:54.0000] <Von_Davidicus>
Not sure what would be considered the bigger coding sin these days:  XSLT or frames.

[00:56:48.0000] <Ms2ger>
XSLT

[01:09:37.0000] <AryehGregor>
Von_Davidicus, you could build it all using AJAX!

[01:09:55.0000] <AryehGregor>
Then at least if someone else needed to take over maintaining it, maybe they would understand your code . . .

[01:11:36.0000] <Von_Davidicus>
AJAX is based on JavaScript.  I'm not sure which would be worse, trying to understand someone else's XSLT or trying to understand someone else's JavaScript.

[01:11:47.0000] <AryehGregor>
A lot of people actually know JavaScript.

[01:11:57.0000] <AryehGregor>
Nobody except you and four other people knows XSLT, or indeed has ever heard of it.

[01:12:09.0000] <AryehGregor>
The other four people are members of the XSLT WG.

[01:13:19.0000] <AryehGregor>
(I'm being mean -- I'm sure it's better-known than lots of other niche technologies.  In #whatwg we're just bitter about it because it's one of the technologies *we* have to deal with and it just makes our lives more difficult.)

[01:13:35.0000] <AryehGregor>
(Slightly.)

[01:14:19.0000] <Von_Davidicus>
why does it make your lives more difficult?

[01:15:13.0000] <AryehGregor>
Because browsers still support it.

[01:15:29.0000] <AryehGregor>
And it's fairly large and complicated.

[01:15:32.0000] <AryehGregor>
The web is complicated enough.

[01:15:45.0000] <AryehGregor>
We don't need more things that are complicated but that almost no one uses.

[01:18:01.0000] <Von_Davidicus>
How does that get in the way of HTML5 development?

[01:18:51.0000] <AryehGregor>
It doesn't get in the way of it, much.  But we're trying to define the web platform as a whole, so things that aren't worth the effort to define and implement properly are things we'd prefer just go away.

[01:19:24.0000] <Von_Davidicus>
Oh, okay.

[01:19:53.0000] <AryehGregor>
XSLT is marginal and self-contained enough that I don't think we hate it too much, though.

[01:19:56.0000] <AryehGregor>
Unlike, say, quirks mode.

[01:20:02.0000] <Von_Davidicus>
I just remembered something:  Doesn't AJAX require the *server* to support it?  Because I think I tried AJAX on Furnation and it didn't work.

[01:20:22.0000] <AryehGregor>
No, I'm pretty sure not.

[01:20:33.0000] <AryehGregor>
It's just an async HTTP request.  (Or sync, as the case may be.)

[01:21:34.0000] <Von_Davidicus>
/me looks at his Coach Random Website, and wonders if it's worth it to switch it over to HTML5.

[01:21:38.0000] <Ms2ger>
Don't speak of sync xhr ;)

[01:23:15.0000] <Von_Davidicus>
Why not?

[01:33:49.0000] <Von_Davidicus>
What would you guys say?

[01:34:08.0000] <Von_Davidicus>
Currently, it's an XML+XSLT+XSD website.

[01:39:14.0000] <AryehGregor>
Sync XHR murders performance.  It causes the page to freeze until the request completes.

[01:39:38.0000] <AryehGregor>
These days we never ever expose sync APIs to regular pages unless they're guaranteed to return very quickly.

[01:39:44.0000] <AryehGregor>
Anything else is async, like IDB.

[01:39:47.0000] <AryehGregor>
localStorage is similar.

[01:39:55.0000] <AryehGregor>
We expose sync APIs to workers, though.

[01:48:21.0000] <Von_Davidicus>
Hello, annevk.

[01:49:42.0000] <annevk>
hey

[01:50:30.0000] <Von_Davidicus>
Question:  should I take an old site of mine that's written in XML+XSLT+XSD and redo it as HTML5?

[01:54:28.0000] <annevk>
heh, that's kind of hard for me to answer :)

[01:54:40.0000] <Philip`>
Von_Davidicus: Yes - it might not provide any benefit to the site itself if it's already working fine, but it might cure you of your constant desire to use XSLT

[01:54:47.0000] <Von_Davidicus>
It *is* online.

[01:57:14.0000] <AryehGregor>
/me concurs with Philip` 

[02:13:11.0000] <Von_Davidicus>
So, Philip?  Instead of using XSLT as a client-side language, I should be using COBOL for server-side?

[02:24:44.0000] <Von_Davidicus>
Question about HTML5.  Is it possible to have one list reference another as being a continuation of that list?

[02:25:05.0000] <Ms2ger>
No

[02:25:19.0000] <Ms2ger>
You can use the start attribute to fix up the numbering

[02:25:41.0000] <Von_Davidicus>
Oh, the start attribute is back?

[02:26:05.0000] <Von_Davidicus>
I know HTML 4.01 Strict didn't allow it.

[02:26:25.0000] <Ms2ger>
It is

[02:29:44.0000] <Von_Davidicus>
Only time I'd ever used it was to see what Lynx would do with an <ol> that went over the numbering limit.

[02:31:44.0000] <Ms2ger>
What did it do?

[02:33:06.0000] <Von_Davidicus>
It went from 2,147,483,647 to -2,147,483,648

[02:34:25.0000] <Von_Davidicus>
That being said, it's hard to imagine an ordered list so long that it would surpass the limit for the roman numeral styles.

[02:38:53.0000] <Von_Davidicus>
The highest they can show is MMMCMXCIX or mmmcmxcix (depending on whether you're using upper or lower case).  That's 3,999 <li> elements (unless you're playing with the count), which gets into the realm of "can the average computer handle this webpage".  :)

[08:01:31.0000] <Ms2ger>
"The jQuery forum appears to be completely dysfunctional without JavaScript enabled, which is sad"

[09:27:48.0000] <gsnedders>
/me wonders about optional static typing for ES again, and decides it's probably better not to think about

[09:28:16.0000] <Ms2ger>
Correct

[09:28:50.0000] <gsnedders>
So, SpiderMonkey is impl ES6 by default, V8 is impl ES6 behind an experimental pref…

[09:31:09.0000] <gsnedders>
/me wonders

[09:33:09.0000] <Ms2ger>
We really should have implemented Number.mozIsNaN...

[09:36:27.0000] <gsnedders>
Ms2ger: Yes, prefixes are definitely better!

[09:41:44.0000] <gsnedders>
Heh, broken 10k unread emails on www-style.

[09:41:56.0000] <gsnedders>
I really should just leave the WG.

[09:57:06.0000] <Hixie>
i wish addHitRegion() would be implemented already :-)

[10:44:57.0000] <Hixie>
is there a spec for MouseEvent?

[10:45:39.0000] <Hixie>
(for UAs firing events using it, that is, not for the interface)

[10:46:05.0000] <Hixie>
in particular i'm interested in what said spec says to set offsetX to

[10:46:53.0000] <Hixie>
hm, looks like http://dev.w3.org/csswg/cssom-view/#extensions-to-the-mouseevent-interface does it

[10:46:56.0000] <Hixie>
wonder how accurate that is

[10:49:45.0000] <Ms2ger>
Hixie, only one way to find out... Write tests ;)

[10:50:02.0000] <Hixie>
kinda am

[10:50:10.0000] <Hixie>
(i'm writing code that uses it, we'll see if it works!)

[11:02:13.0000] <Hixie>
aw man

[11:02:21.0000] <Hixie>
want. addHitRegion().

[11:44:34.0000] <jgraham>
Hixie: If writing code that used something counted as writing tests, the web would be well tested and have great interoperability

[11:55:39.0000] <asmodai>
I guess most of you saw http://vimeo.com/43380467 ?

[11:56:32.0000] <Ms2ger>
I've heard of it

[11:57:55.0000] <Ms2ger>
hsivonen debunked some points at http://wiki.whatwg.org/wiki/Bad_Ideas

[12:00:03.0000] <Hixie>
people fall into three camps as far as i can see:

[12:00:18.0000] <Hixie>
1. people who don't realise the web sucks

[12:01:20.0000] <Hixie>
2. people who realise the web sucks but don't understand why it is so wildly successful and so make silly suggestions for improving it that themselves fail

[12:01:41.0000] <Hixie>
3. people who write web standards and go home and cry every night

[12:02:32.0000] <Hixie>
the guy in that video falls very clearly into #2: he doesn't understand what he's criticising

[12:03:27.0000] <Hixie>
(e.g. he thinks the w3c had anything to do with canvas having .arc(), he doesn't understand html's version history, he doesn't understand how paragraphs are specced, etc)

[12:03:44.0000] <asmodai>
/me pats Hixie

[12:03:50.0000] <asmodai>
Hixie: Hope you don't cry too much every night

[12:08:45.0000] <asmodai>
I personally think he does have some valid points on weird behaviour and some things not being straightforward.

[12:08:58.0000] <Hixie>
yes

[12:08:59.0000] <Hixie>
the web sucks

[12:09:00.0000] <asmodai>
And in some other areas he really generalises.

[12:09:02.0000] <Hixie>
nobody argues that

[12:09:14.0000] <asmodai>
Heh

[12:14:41.0000] <jarek>
why there are no b-splines in SVG?

[12:15:11.0000] <jarek>
were they considered not useful enough? Is there an easy way to emulate them with beziers?

[12:15:21.0000] <Ms2ger>
Because W3C

[12:15:23.0000] <Ms2ger>
/me runs

[12:15:44.0000] <jarek>
Silverlight has b-splines...

[12:16:55.0000] <Hixie>
you may have better luck getting a real answer from #svg on w3c's irc network

[12:17:11.0000] <Hixie>
since it looks like none of us know :-)

[12:17:38.0000] <Hixie>
canvas doesn't have b-splines because apple didn't add them when they invented canvas and nobody has made a convincing argument for them since

[12:17:41.0000] <Hixie>
but i dunno about svg

[12:18:05.0000] <asmodai>
Ms2ger: lol

[12:20:41.0000] <spobat>
:)

[12:20:50.0000] <Ms2ger>
Good morning

[12:20:51.0000] <Philip`>
Canvas should support NURBS, because NURBS is a great acronym

[12:21:12.0000] <Ms2ger>
Philip`, only after you fix all the canvas test bugs :)

[12:21:22.0000] <spobat>
non uniform rational b splines?

[12:21:39.0000] <Ms2ger>
Apparently so

[13:46:14.0000] <gsnedders>
Hixie: What's the reason not to have a circle API in canvas, BTW? "API usability" not a good enough reason? :)

[13:48:32.0000] <Hixie>
what would it do?

[13:48:41.0000] <Hixie>
add a circle to the path? fill a circle?

[13:50:49.0000] <gsnedders>
Hixie: The same as drawArc?

[13:51:26.0000] <Hixie>
assuming you mean the same as "arc()" (there's no drawArc), then what's the point of having two functions that do the same thing

[13:56:21.0000] <gsnedders>
Hixie: API usability.

[13:56:42.0000] <gsnedders>
arc() isn't obviously what you want for a circle.

[13:56:54.0000] <Hixie>
API usability is as much helped by adding convenience functions as it is hurt by having a large surface area

[13:56:55.0000] <gsnedders>
Sure, there's no *technical* advantage.

[13:57:03.0000] <Hixie>
is ellipse() obviously what you want for a circle?

[16:12:02.0000] <gsnedders>
Heh, so easy to make Erik Arvidsson's email mean Google's webapps aren't on the "open web".

[16:12:08.0000] <gsnedders>
(Email to es-discuss, this is)

[16:12:35.0000] <gsnedders>
There again, given they have UA sniffing to start with on many things, that's rather self-evident.


2012-06-11
[17:41:30.0000] <heycam>
we'll have catmull-rom curves in SVG2 btw

[22:02:12.0000] <Hixie>
do we have a way to detect when the user's mouse goes outside the window frame?

[22:05:10.0000] <Hixie>
oh duh i had a typo in my test

[22:05:11.0000] <Hixie>
nevermind

[22:18:50.0000] <Hixie>
how about composition effects... is there a way to make a CSS element's background be a semi-transparent blur?

[22:30:54.0000] <asmodai>
Hixie: semi-transparent, yes, but haven't seen a way to do a blur outside of pre-rendered images

[22:31:04.0000] <asmodai>
But that's just my meager knowledge.

[22:31:15.0000] <Hixie>
i'm trying to do the effect mac does with its context menus

[22:31:20.0000] <Hixie>
from css

[23:00:55.0000] <Von_Davidicus>
Question:  How many websites use SSI these days?

[23:25:48.0000] <zcorpan>
how do i create a file with a LF in the file name on mac?

[00:54:59.0000] <zcorpan>
Hixie: css filters?

[01:01:55.0000] <wirepair>
anyone on who knows about Hixie's DOM testing page?

[01:01:59.0000] <wirepair>
can't seem to find it for some reason

[01:04:31.0000] <wirepair>
nm found it (ref: http://software.hixie.ch/utilities/js/live-dom-viewer/)

[02:00:55.0000] <jgraham>
Is there some way to see a squashed diff of multiple commits on github?

[02:02:30.0000] <Ms2ger>
I can tell you how to do it with hg? :)

[02:04:56.0000] <AryehGregor>
Ms2ger, on github?  :)

[02:05:04.0000] <AryehGregor>
That would be pretty impressive!

[02:05:15.0000] <Ms2ger>
AryehGregor, "now you've got three problems"

[02:09:01.0000] <jgraham>
Ms2ger: I think "checkout the repo using hg-git and us hg diff" isn't the answer I'm looking for :p

[02:09:27.0000] <jgraham>
(obviously git diff *also* allows viewing a diff across multiple commits)

[02:11:46.0000] <SimonSapin>
Hi. I started a proposal for replacing the selector grammar with something based on css3-syntax: http://lists.w3.org/Archives/Public/www-style/2012Jun/0159.html

[02:11:46.0000] <SimonSapin>
What are the usual tools for editing specs? For cross-references in particular.

[02:12:33.0000] <annevk>
the CSS WG uses something quite close to Anolis

[02:12:38.0000] <Ms2ger>
The CSSWG uses Bert's W3C-Member-Only tool

[02:12:51.0000] <Ms2ger>
But I recommend Anolis :)

[02:12:52.0000] <annevk>
http://wiki.whatwg.org/wiki/Anolis has documentation on it's open sourced equivalent

[02:13:44.0000] <SimonSapin>
that, I’ll look into that

[02:15:19.0000] <annevk>
https://www.w3.org/Style/Group/css3-src/bin/postprocess (W3C Member-only) has information on the tool some in the CSS WG use fwiw

[02:16:09.0000] <SimonSapin>
I’m not a W3C member or in a member organization

[02:16:27.0000] <annevk>
k

[02:16:32.0000] <annevk>
it's kind of a sucky tool to be honest

[02:16:52.0000] <annevk>
that's why Anolis was created, which is not that much better, but at least you can "easily" run it locally

[02:18:22.0000] <annevk>
SimonSapin: looks cool btw

[02:18:52.0000] <SimonSapin>
I wanted to make it easy for the CSSWG to take this eventually if they want to. But maybe I should just use docutils and not worry about the format later

[02:18:56.0000] <SimonSapin>
annevk: thanks

[02:19:21.0000] <annevk>
SimonSapin: if you write it in HTML it should be easy enough to take in

[02:19:34.0000] <SimonSapin>
docutils / reStructuredText can produce HTML

[02:20:00.0000] <annevk>
SimonSapin: you can study the source of http://dev.w3.org/csswg/css3-syntax/Overview.src.html for what e.g. css3-syntax uses as input for its processor that produces the final document

[02:20:10.0000] <annevk>
s/e.g.//

[02:20:29.0000] <SimonSapin>
and reverse-engineer a tool to do the same conversion?

[02:20:56.0000] <annevk>
no :)

[02:21:34.0000] <annevk>
it's readable either way, it just misses the linking/table of contents

[02:21:54.0000] <annevk>
but that would make it trivial to integrate with the rest of CSS

[02:24:26.0000] <zcorpan>
SimonSapin: nice

[02:24:27.0000] <SimonSapin>
but I want the links in the meantime :)

[02:24:50.0000] <annevk>
SimonSapin: then use Anolis :)

[02:25:08.0000] <annevk>
SimonSapin: you can use an online interface: http://pimpmyspec.net/

[02:25:24.0000] <annevk>
SimonSapin: it takes the same input as what that css3-syntax source document uses

[02:25:30.0000] <annevk>
SimonSapin: or you can install it locally

[02:26:15.0000] <SimonSapin>
annevk: are http://hg.hoppipolla.co.uk/hgwebdir.cgi/anolis/ and https://bitbucket.org/ms2ger/anolis the same?

[02:26:42.0000] <Ms2ger>
The former is what runs pimpmyspec, the latter is maintained :)

[02:26:58.0000] <SimonSapin>
ok

[02:28:38.0000] <kennyluck>
SimonSapin, hey hi. I was sending a mail to you and then I just noticed you talking here.

[02:28:58.0000] <SimonSapin>
kennyluck: yes, I just answered your email

[02:29:11.0000] <SimonSapin>
oh, the previous one

[02:31:56.0000] <annevk>
SimonSapin: if you install it locally use the latter

[02:32:18.0000] <SimonSapin>
annevk: I’ll do that

[02:32:19.0000] <annevk>
I've been trying to get jgraham to do something about this situation but he's busy :(

[02:33:41.0000] <Von_Davidicus>
Question:  How many websites still use Server Side Includes?

[02:34:38.0000] <annevk>
Von_Davidicus: how would you measure that?

[02:36:32.0000] <Von_Davidicus>
Well, by how many websites that have webpages that have the .shtml extension.

[02:40:27.0000] <Von_Davidicus>
I was just wondering if SSI is still relatively common, considering the proliferation of other server-side languages that can do a lot more.

[03:14:52.0000] <AryehGregor>
I suspect it's common in absolute terms but rare in relative terms.  Probably a very small percentage of pages use it (<5%), but a very large number (>1,000,000).

[03:19:02.0000] <jgraham>
FWIW I think looking for .shtml isn't going to help you

[03:20:04.0000] <jgraham>
(random fact: until quite recently bbc.co.uk ran on a complex mess of SSI because it was so hard to get new software approved)

[03:32:31.0000] <annevk>
you also don't need a particular extension to activate it, depends mostly on how you configure your Apache installation

[04:31:39.0000] <annevk>
Velmont: http://dvcs.w3.org/hg/cors/rev/9ac9da9be418

[04:55:59.0000] <jarek>
why there are so many factory methods in SVG DOM?

[04:56:59.0000] <jarek>
this makes it impossible to inherit from most of the standard DOM objects

[04:57:45.0000] <jarek>
I would expect at least something like "point = new SVGPoint" to work

[04:58:18.0000] <jgraham>
Java

[05:02:46.0000] <annevk>
jarek: SVG was designed with Java in mind

[05:02:57.0000] <annevk>
jarek: no longer true these days, but you know, legacy

[05:03:56.0000] <jarek>
what's even worse, there doesn't seem to be an easy way to abstract this away

[05:04:26.0000] <jarek>
I mean if I create wrapper for SVGMatrix then I will not be able to pass it as argument to other SVG DOM methods

[05:05:48.0000] <jarek>
s/wrapper/wrapper object

[05:12:36.0000] <annevk>
okay

[05:12:46.0000] <annevk>
I'm going to do this CORS security considerations thing one more time

[05:13:03.0000] <annevk>
and then it better be fricking perfect or someone else can start maintaining it

[05:13:33.0000] <annevk>
at least until I get bored enough to write "Fetch"

[05:13:56.0000] <jarek>
wouldn't it make more sense if factory methods were specified on SVGPathElement instead of  SVGPathElement.prototype

[05:13:57.0000] <annevk>
(and enough years have passed)

[05:14:17.0000] <annevk>
jarek: it's better to discuss SVG elsewhere probably

[05:14:23.0000] <annevk>
there's hardly any SVG guys around here

[05:14:50.0000] <annevk>
jarek: that is, we're happy with you discussing SVG here, but you might not make meaningful progress

[05:14:54.0000] <smaug____>
shepazu and heycam|away might be around

[05:15:18.0000] <smaug____>
but w3 #svg would be better place

[05:25:36.0000] <kennyluck>
or just www-svg

[05:25:47.0000] <jarek>
there are 8 persons on #svg@w3c, I have also tried looking for most common SVG methods on Github and Google and it looks like barely anyone is using them

[05:41:37.0000] <annevk>
so guess CORS text has to wait a bit; not convinced this new text provided via PDF/Word (?!) is an improvement

[05:43:11.0000] <Velmont>
annevk: Bounce it back. Ask for a real format.

[05:43:44.0000] <annevk>
asked for better text too

[06:29:38.0000] <annevk>
heh http://www.ietf.org/proceedings/42/slides/notify-bof-scenarios-slides-98aug/sld016.htm

[06:30:36.0000] <annevk>
maybe ours should be called "Platform notifications"

[06:31:02.0000] <annevk>
or "End-user notifications" possibly

[06:56:08.0000] <Ms2ger>
/me shakes his fist at annevk 

[06:56:48.0000] <annevk>
what did I do?

[06:57:18.0000] <annevk>
or maybe I should strike first, then ask questions...

[06:58:09.0000] <Ms2ger>
This Gecko patch you wrote in 2005

[06:59:16.0000] <annevk>
heh

[06:59:25.0000] <Velmont>
lul

[06:59:29.0000] <annevk>
it's still haunting Bugzilla?

[06:59:55.0000] <Ms2ger>
I just noticed you forgot to change some layout code

[07:00:16.0000] <Ms2ger>
(Can't have been terribly important...)

[07:02:30.0000] <annevk>
Ms2ger: oh so I actually managed to get my patch landed?

[07:02:49.0000] <Ms2ger>
timeless landed it

[07:03:06.0000] <annevk>
oh I'm in about:credits

[07:03:06.0000] <Velmont>
annevk: boom

[07:03:09.0000] <annevk>
sweet

[07:03:13.0000] <annevk>
but under the wrong letter :(

[07:03:30.0000] <Ms2ger>
You sort under K?

[07:03:33.0000] <annevk>
yeah

[07:03:41.0000] <Velmont>
It's like "the"

[07:03:42.0000] <Ms2ger>
Silly Dutchies

[07:03:47.0000] <Velmont>
Dutchess

[07:03:47.0000] <Velmont>
:P

[07:03:52.0000] <Ms2ger>
More like "from", Velmont

[07:04:01.0000] <annevk>
silly or not, bug in Firefox :p

[07:04:03.0000] <Velmont>
Ms2ger: I meant in the sorting sense.

[07:04:14.0000] <Ms2ger>
Bah

[07:04:17.0000] <Ms2ger>
Hah, even

[07:05:57.0000] <Velmont>
Dutchess Anne, ruler of the Lands in the Nether.

[07:07:20.0000] <jgraham>
So if we submit a patch to fix annevk's position in about:credits, will we be able to get into about:credits?

[07:08:28.0000] <Velmont>
jgraham: If you do something wrong there, I can fix your fix. about:credits inception :]

[07:09:12.0000] <Ms2ger>
'This is a list of people who have "made a significant investment of time, with useful results, into Mozilla project-governed activities".'

[07:09:25.0000] <jgraham>
I wonderif there is anyone who has got a patch into Opera/Gecko/WebKit/Trident

[07:09:48.0000] <zewt>
Ms2ger: that sure sounds like it was written by committee

[07:09:52.0000] <jgraham>
Ms2ger: If you don't sort annevk's name correctly he might invade Belgium

[07:10:07.0000] <jgraham>
Averting that is surely a useful result

[07:10:08.0000] <Ms2ger>
jgraham, he wouldn't, because we'd sort him under V here :)

[07:10:46.0000] <jgraham>
Yeah, that's why he'd invade

[07:10:53.0000] <jgraham>
To correct your sorting algorithm

[07:12:49.0000] <zewt>
wars have been started for lesser causes

[07:13:39.0000] <zewt>
they use emacs? BOMB THEM

[07:15:34.0000] <annevk>
:)

[07:18:16.0000] <karlcow>
/me thinks that if annevk wants to cope with the real world, he has to change sex

[07:18:36.0000] <karlcow>
anne5

[07:19:53.0000] <annevk>
nah, the Netherlands once ruled a large part of the world

[07:19:58.0000] <annevk>
surely we can do that again

[07:19:58.0000] <Ms2ger>
Once

[07:21:17.0000] <karlcow>
heh

[07:22:48.0000] <Ms2ger>
jgraham, I'd guess fantasai is most likely to have patches in all four

[07:23:06.0000] <Ms2ger>
Unless Hixie sneaked something into Trident at some point

[07:23:32.0000] <jgraham>
Oooh, she worked for Microsoft for a bit, didn't she

[07:24:22.0000] <Ms2ger>
She contracted with everyone and HP at one point, IIRC

[07:36:24.0000] <timeless>
heh

[07:36:36.0000] <timeless>
Chrome Canary is showing me "timeless           -2 of 5"

[07:36:44.0000] <timeless>
before it was showing me "timeless           30 of 5"

[07:39:16.0000] <timeless>
annevk: i don't think i'm responsible for your missorting

[07:40:14.0000] <annevk>
timeless: no worries :)

[07:41:22.0000] <timeless>
annevk: speaking of interesting quirks in sorting and such

[07:41:34.0000] <timeless>
for your preferred language, are there any fun gotchas?

[07:41:39.0000] <timeless>
/me is filing localization bugs

[07:41:50.0000] <timeless>
gotchas must be easy to search for :)

[07:42:30.0000] <timeless>
oh, on the subject of getting features into systems, i've had people add features to windbg  for me :)

[07:43:54.0000] <Ms2ger>
Duh, you're its only user ;)

[07:44:38.0000] <timeless>
=b

[07:54:22.0000] <annevk>
oh god

[07:54:28.0000] <annevk>
URLs are teh pain

[07:54:40.0000] <annevk>
a = <a href=/test/></a>; a.protocol = "mailto"; alert(a.href)

[07:54:55.0000] <annevk>
now change "mailto" to "ma<ilto" or some such

[07:55:16.0000] <Ms2ger>
No thanks :)

[08:09:49.0000] <annevk>
MikeSmith: hey man

[08:10:01.0000] <annevk>
MikeSmith: so what are the notes you have on URLs?

[08:10:37.0000] <annevk>
MikeSmith: if you could put tests and other links on http://wiki.whatwg.org/wiki/URL that'd be nice

[08:10:51.0000] <annevk>
MikeSmith: I'll go ahead and create that page to link to the spec as a placeholder

[08:50:47.0000] <timeless>
annevk: is it safe to assume that Teune van Steeg should sort under S?

[08:51:12.0000] <timeless>
Michiel van Leeuwen is sorted under L

[08:51:27.0000] <annevk>
timeless: if he's Dutch :)

[08:51:32.0000] <timeless>
Peter van der Woude is probably wrong too

[08:51:44.0000] <timeless>
Gert-Paul van der Beek is under B

[08:51:50.0000] <timeless>
and Tim Maks van den Broek

[08:52:02.0000] <timeless>
Frank van der Linden is under L

[08:52:13.0000] <timeless>
Erik van der Poel is under P

[08:52:13.0000] <Ms2ger>
peterv would sort under V, though :)

[08:52:33.0000] <timeless>
HJ van Rantwijk is under R

[08:52:35.0000] <timeless>
Ms2ger: why?

[08:52:43.0000] <Ms2ger>
He's Belgian

[08:52:44.0000] <annevk>
timeless: Google search for Teune suggests he's Dutch

[08:52:48.0000] <annevk>
got to go

[08:53:01.0000] <timeless>
/me sighs

[08:53:06.0000] <timeless>
you guys are collectively confusing

[08:54:26.0000] <Ms2ger>
Just sort by IRC handle :)

[08:55:18.0000] <timeless>
:)

[08:55:34.0000] <timeless>
i currently sort after Trần Nguyễn Sơn

[09:03:51.0000] <jgraham>
Tried to sort a list by first name here once and generated a non-trivial amount of confusion from people who are better known by irc handle, nickname, or surname

[09:05:00.0000] <jgraham>
Hixie: Why does step 4 in "Navigating across documents" only apply if the navigation is cross-origin?

[09:21:40.0000] <Hixie>
jgraham: so that a site can't stop you from leaving a site

[09:26:10.0000] <jgraham>
Hixie: So what stops onunload handlers being called recursively in general?

[09:28:18.0000] <zewt>
how is it 2012 and popunders are still possible

[09:31:40.0000] <jgraham>
Hixie: (the motivating question is "given a site that has a navigation triggered in an unload handler, will you end up at the original destination, or at the destination of the navigation triggered in unload)

[09:31:53.0000] <jgraham>
s/)/")/

[09:38:14.0000] <sm0lm>
Hi... What's the rational behind killing <br /> style tags off, and the more general break with XMLism that seems to be happening?

[09:39:00.0000] <jgraham>
sm0lm: The don't and, for historical reasons, can't, do anything special in the HTML parser

[09:39:39.0000] <sm0lm>
jgraham, "the don't..."?

[09:39:45.0000] <sm0lm>
"they"?

[09:40:11.0000] <sm0lm>
(not trying to be nitpicky, just double checkin what you mean.)

[09:57:48.0000] <Hixie>
jgraham: why would they be called recursively?

[09:58:43.0000] <Hixie>
sm0lm: we didn't "break" with xmlisms, we just never had xmlisms in html

[09:59:14.0000] <sm0lm>
oh, hi there Hixie.

[09:59:15.0000] <Hixie>
sm0lm: actually in some ways we added some (e.g. we made /> on <br> be allowed, though it does the same as not having it)

[10:00:05.0000] <sm0lm>
Right - but there's all this stuff about how it's dangerous to send XHTML as html, and all that.  I'm having some trouble sorting through what the situation actually is.

[10:01:14.0000] <Hixie>
simplest way of looking at it is that there's just text/html

[10:01:27.0000] <sm0lm>
Hixie, Why is there all of this backwards-compatibility business of having a different version of the spec for browser vendors and webdevs?

[10:02:02.0000] <Hixie>
there's only one spec, the webdev version is just the spec with a few things removed (the browser-specific stuff)

[10:02:28.0000] <sm0lm>
But why is it seen as a constraint to keep things compatible with older web content?

[10:03:49.0000] <Hixie>
browsers wouldn't get any market share if they implemented a spec that made cnn.com not work

[10:04:04.0000] <Hixie>
so if a spec said to do something that made cnn.com not work, the spec would be ignored

[10:04:08.0000] <sm0lm>
It's an entirely separate document namespace within which HTML5 markup resides...

[10:04:51.0000] <Hixie>
well, that's why it's important that we don't work on "HTML5" but just on "HTML"

[10:04:54.0000] <sm0lm>
In other words (the way I think it should work is that) if you're opening with a <!doctype html> declaration, then you better just adhere to the spec you're claiming to use.

[10:05:17.0000] <zewt>
(that's not what the html doctype means)

[10:05:41.0000] <sm0lm>
/me is fully in favor of any spec which breaks such an insidious corporate propaganda machine as CNN.com

[10:05:45.0000] <sm0lm>
=)

[10:05:55.0000] <zewt>
it pretty much means "this is html" and "don't dump me in quirks mode", i think

[10:06:10.0000] <Hixie>
sm0lm: how many versions of html would you want browsers to implement?

[10:07:03.0000] <Hixie>
sm0lm: (note that each such version would basically be an entirely new browser, so each one would require a new dev team, new testing team, etc)

[10:07:04.0000] <zewt>
(if it was possible to get into that mode without a doctype at all, then that's probably what would be recommended)

[10:07:41.0000] <sm0lm>
This seems to be a fairly widely limiting factor in moving fwd with web standards... ES6 is facing it, and so is the new HTML draft.

[10:08:02.0000] <sm0lm>
BTW, how does one refer to post-HTML5 HTML without also referring to pre-html5 html?

[10:08:38.0000] <sm0lm>
Hixie, I don't follow you... :(

[10:09:22.0000] <sm0lm>
I mean, the ES6 proposal is running into syntax clashes and so they're having to use suboptimal syntaxes so as not to break older ES scripts.

[10:09:36.0000] <Hixie>
i refer to "contemporary HTML" to refer to the HTML from the last decade or so rather than the HTML from more than 10 years ago (which had versions)

[10:09:52.0000] <Hixie>
backwards compatibility isn't a problem, imho

[10:09:55.0000] <sm0lm>
Hixie, "HTML5" is much more concise.

[10:10:10.0000] <Hixie>
"HTML5" makes people think there are versions

[10:10:10.0000] <Ms2ger>
Meh

[10:10:51.0000] <sm0lm>
I feel like we should just do a full "reset", start from scratch, building a spec from the ground up without consideration for older material not rendering...

[10:11:00.0000] <Hixie>
sm0lm: that's what xhtml2 tried

[10:11:02.0000] <Hixie>
sm0lm: it failed

[10:11:20.0000] <Hixie>
sm0lm: the only way it would succeed is if the new thing was so radically better that it was worth the huge cost

[10:11:24.0000] <Hixie>
sm0lm: good luck :-)

[10:11:34.0000] <Hixie>
sm0lm: while you're doing that i'll keep maintaining html :-)

[10:11:36.0000] <sm0lm>
IE, dev'mt would halt on the rendering support for older content -- ie, the implementations would still get shipped, just not a whole lot of improvements.

[10:11:47.0000] <sm0lm>
Wait, please hear me out.

[10:12:13.0000] <sm0lm>
I was in here with another name asking about <u>s and <i>s and <b>s

[10:12:17.0000] <sm0lm>
a little while back.

[10:13:23.0000] <sm0lm>
I mean as long as the handling of legacy content doesn't become worse than it was at the time of said content's authoring, nothing will break.

[10:14:00.0000] <Hixie>
in each browser, things are already broken

[10:14:12.0000] <Hixie>
and the browser vendors really want to fix what's broken

[10:14:20.0000] <Hixie>
so it's not like we could convince them to just stop working on it

[10:14:21.0000] <sm0lm>
Then things that get delivered with a Content-Type of text/n[ew]html will have to adhere to a new standard that, while it may be loosely based on the old stuff, isn't bound to remaining compaitble with it.

[10:14:40.0000] <sm0lm>
It could have DRYer, HAML-like syntax.

[10:14:56.0000] <Ms2ger>
Hixie, (unrelatedly, I bet you're glad to hear that we still use tests bearing your name for XML perf)

[10:15:37.0000] <Hixie>
switching has a _huge_ cost. to make it worth it, the new tech would have to be orders of magnitude better.

[10:15:45.0000] <Hixie>
nobody has come up with anything better enough yet.

[10:15:46.0000] <sm0lm>
Then the ever-evolving nhtml spec would not conflict with previous versions of *itself*

[10:16:26.0000] <Hixie>
how would we avoid this new html spec from running into the same problems with itself?

[10:16:46.0000] <sm0lm>
Well Hixie, look at it this way: 5 years from now, "contemporary HTML" will be orders of magnitude than it was 5 years /ago/

[10:17:05.0000] <Hixie>
(in developing HTML in the last ten years we've made mistakes that we've had to be backwards compatible with, it's not just an issue of being compatible with HTML4)

[10:17:21.0000] <Hixie>
sm0lm: right. but you have to be better than _that_ in order to make it worth switching.

[10:17:26.0000] <sm0lm>
If we change the trajectory now so that 5 years from now we aren't still constrained by shit from 20 years BACK, we could go much further.

[10:17:53.0000] <Hixie>
sm0lm: no we couldn't, because we'd have to start over, so we'd be 5 years behind to start with.

[10:18:07.0000] <Hixie>
sm0lm: and we'd still have to deal with backwards compatibility with the new stuff

[10:18:13.0000] <Hixie>
sm0lm: so 10 years later we'd be back where we are now

[10:18:23.0000] <Hixie>
sm0lm: in terms of being constrained

[10:18:43.0000] <sm0lm>
Oh, c'mon... We've learned SO many lessons from the early days of the web.

[10:19:24.0000] <Hixie>
we are constrained by things we did just two or three years ago

[10:19:32.0000] <Hixie>
not just 10, 20 years ago

[10:19:40.0000] <sm0lm>
I don't think we'll learn keep learning them at the same rate.. I think the mistakes that get made and the lessons that get learned diminish asymptoptically.

[10:19:50.0000] <sm0lm>
Hixie, example?

[10:19:59.0000] <Ms2ger>
Not to count the number of things we're constrained by that Hixie did

[10:20:00.0000] <Hixie>
pushState()'s second argument, for example

[10:20:14.0000] <Hixie>
localStorage's locking

[10:20:23.0000] <Hixie>
tons of stuff

[10:20:45.0000] <sm0lm>
Isn't that all the more reason to do what I'm suggesting?

[10:20:54.0000] <Hixie>
how would what you're suggesting change this?

[10:20:57.0000] <Hixie>
we'd invent your new language

[10:21:00.0000] <Hixie>
promptly make a mistake

[10:21:02.0000] <Hixie>
and be constrained again

[10:21:26.0000] <sm0lm>
If 2 or 3 years time yields so many conflicts, why would you EVER want to have 20 or 30 years' worth's on your shoulders?

[10:21:55.0000] <Hixie>
because every time you start over you increase your workload 100%

[10:22:03.0000] <Hixie>
because you effectively now have to maintain two browsers

[10:22:05.0000] <Hixie>
then three

[10:22:06.0000] <Hixie>
then four

[10:22:07.0000] <sm0lm>
Perhaps a periodic "reset" is in order then.

[10:22:08.0000] <Hixie>
then five

[10:22:08.0000] <Hixie>
etc

[10:22:14.0000] <sm0lm>
Once every 10 years.

[10:22:30.0000] <sm0lm>
Why do you need to maintain them?

[10:22:48.0000] <Hixie>
because there's 2 trillion existing web pages that people will still want to look at

[10:22:59.0000] <sm0lm>
They'll just be for legacy content and so as I outlined above, they simply shouldn't regress.

[10:22:59.0000] <Hixie>
so you have to fix bugs that make them not work

[10:23:45.0000] <sm0lm>
If they displayed in a satisfactory way to the web designer authoring them during testing, then they'll continue to display at least that well for ever and ever.

[10:24:51.0000] <Hixie>
browser vendors wouldn't agree to not fix bugs

[10:25:03.0000] <sm0lm>
/me thinks that an awful lot of those 2 trillion - perhaps a great majority - are not static files and are generated by programs onthefly based on textual content. Like all the articles on CNN.com, for instance.  When the CMS gets updated which it will if it isactively maintained, your 2T figure diminishes greatly.

[10:25:05.0000] <Hixie>
because all it takes is one of the vendors to fix a few more bugs, and the others will be forced to do it as well to compete

[10:25:06.0000] <zewt>
i hope nobody would encourage that, either :)

[10:25:39.0000] <Hixie>
are you going to pay cnn.com to update to the new tech? :_)

[10:25:49.0000] <Hixie>
what benefit does cnn get for updating?

[10:25:57.0000] <sm0lm>
What's :_) mean? (sorry.)

[10:26:03.0000] <Hixie>
other than it not working with any legacy browsers?

[10:26:13.0000] <sm0lm>
tear dripping down the right cheek..?

[10:26:16.0000] <Hixie>
:_) is :-) with the shift key down by mistake

[10:26:23.0000] <sm0lm>
ah, ok.

[10:26:34.0000] <sm0lm>
;_)

[10:27:00.0000] <sm0lm>
Easier maintenance of their view templates.

[10:27:25.0000] <sm0lm>
A MUCH DRYer syntax if the HAML thing is implemented.

[10:27:30.0000] <Hixie>
rewriting their entire site isn't easier than doing nothing

[10:27:57.0000] <sm0lm>
The entire site doesn't need to be rewritten --- only the MVC views.

[10:28:55.0000] <Hixie>
and presumably they also have to keep maintaining the old site as well? since no browser in the hands of users would support this new technology at first?

[10:28:55.0000] <zewt>
a fundamental concept on the web is that when you write a webpage, you don't have to keep coming back to it periodically to make it work again; you write it once, it works, and it works forever

[10:30:35.0000] <sm0lm>
Hixie, ok, ok.  I see how this works.  it's really a shame though and it's upsetting to accept that we just have to live with all of these limitations holding the web back and there's really no way a round it.

[10:30:53.0000] <sm0lm>
Thank you all for your patience with my naivete.

[10:31:04.0000] <zewt>
what's being held back, exactly?

[10:31:17.0000] <zewt>
web-compat is an annoyance, but not a fatal one

[10:32:22.0000] <sm0lm>
Would something like HAML syntax be possible to implement clientside interpretation for?

[10:33:47.0000] <sm0lm>
I mean, given the current iterative evolutionary development paradigm of the web?

[10:36:39.0000] <sm0lm>
Hixie, What's your stance on Dart?

[10:38:26.0000] <Ms2ger>
/me suggests Hixie do work instead :)

[10:39:03.0000] <sm0lm>
What is anyone in here's stance on it then? i mean its an example of a revolutionary vs evolutionary approach...

[10:39:37.0000] <Hixie>
Ms2ger: work? dude, it's wwdc keynote time, who's doing work

[10:40:00.0000] <Ms2ger>
sm0lm, yeah, and it sucks :)

[10:40:06.0000] <Ms2ger>
What's wwdc? ;)

[10:40:37.0000] <sm0lm>
Hixie, hahaha.

[10:41:09.0000] <sm0lm>
Hixie, do you hold a critical view of Dart in the same way as what I just proposed?

[10:41:37.0000] <Hixie>
if i did, it would probably be unwise for me to say so publicly since i work for the company that's pushing it

[10:43:38.0000] <Hixie>
from testing, it looks like http://www.w3.org/mid/4F62C516.2000707⊙me isn't limited to the current page load

[10:45:02.0000] <Hixie>
this is some crazy stuff

[10:45:08.0000] <Hixie>
i have to say "if it's locally cached"?

[10:45:11.0000] <Hixie>
man

[10:45:11.0000] <Ms2ger>
Welcome to the web :)

[10:45:32.0000] <Hixie>
this exposes the web history so blatently

[10:45:36.0000] <Hixie>
it's not even a timing attack anymore

[10:46:00.0000] <zewt>
isn't that pretty much impossible to spec interoperably? (because it'll never happen on a browser with no cache)

[10:46:05.0000] <zewt>
(putting aside data:)

[10:46:14.0000] <Hixie>
it already doesn't happen on a browser with no cache

[10:47:27.0000] <zewt>
i'd suspect (hope?) that web-compatibility only actually requires it to be synchronous if the image is loaded in the current page load

[10:47:50.0000] <zewt>
(no idea, but that should be enough for pages that preload thumbs, etc. by loading a bunch of HTMLImageElements in the background)

[10:48:33.0000] <Hixie>
i guess i could spec a "list of available images"

[10:48:45.0000] <Hixie>
and allow the UA to prefill it with same-origin images

[10:48:51.0000] <zewt>
i guess the bigger question is whether it needs to be "all images loaded in this page load", or simply "all images that are currently loaded"

[10:49:19.0000] <zewt>
since the former implies a (minor) memory leak

[10:53:49.0000] <Yuhong>
<Hixie> "HTML5" makes people think there are versions

[10:54:08.0000] <Yuhong>
<Hixie> there's no advantage to changing the doctype line unless you are changing it from something that used to trigger quirks mode

[10:54:33.0000] <Yuhong>
Yea, I am thinking that "HTML5" even as a buzzword is a misnomer for these reasons.

[10:55:50.0000] <Yuhong>
Talking in terms of individual features is much better.

[10:56:10.0000] <Yuhong>
For example, as I said before, canvas dates back to 2005.

[10:57:56.0000] <Hixie>
ho ho, it's not cross-tab

[10:58:04.0000] <Hixie>
might even be only within the current top-level browsing context

[10:58:25.0000] <Yuhong>
Just tweeted to EricLaw:

[10:58:26.0000] <Yuhong>
https://twitter.com/yuhong2/status/212242605625446400

[10:59:11.0000] <Yuhong>
Hixie: Now, there are people who formerly worked on IE at MS in Google too.

[10:59:43.0000] <Yuhong>
Hixie: And you work there too.

[10:59:47.0000] <sm0lm>
Yuhong, sorry did i miss anything since you started chiming in...? my connection blipped out and i got your first message after zewt's about memory leaks.

[11:00:57.0000] <Yuhong>
sm0lm: No, you didn't

[11:01:31.0000] <Yuhong>
Hixie: for example, jbeda who worked on IE's DOM:

[11:01:35.0000] <Yuhong>
http://news.ycombinator.com/item?id=3233935

[11:06:52.0000] <Yuhong>
Someone suggested versioning authoring but not implementation requirements.

[11:07:19.0000] <sm0lm>
I think I'd be in favor of that.

[11:08:53.0000] <Yuhong>
Hixie: And there is also Chris Wilson. Have you talked with them?

[11:10:15.0000] <Hixie>
Yuhong: i've spoken with chris and others, sure

[11:51:05.0000] <sarspazam>
hi guys.  I've got a dissertation to start thinking about in the coming months.  looking to make some kinda web app with html5 and asp.net mvc

[11:51:20.0000] <sarspazam>
be interested to hear any ideas of something I could make

[11:53:13.0000] <annevk>
cool game

[12:11:33.0000] <jgraham>
Hixie: I presume it would be recursive (naively) because starting a navigation from unload would eventually call unload again, which would start a navigation...

[12:12:14.0000] <Hixie>
it is possible to have an infinite sequence, but it doesn't recurse

[12:12:18.0000] <Hixie>
that is, they're not nested

[12:12:20.0000] <Hixie>
just sequential

[12:12:21.0000] <Hixie>
iirc

[12:14:15.0000] <jgraham>
Hixie: But that doesn't seem to match browsers afaict. That is if you have onload="location='data:text/html,1'" and onunload="location='data:text/html,2'" you will eventually end up at 1 or 2

[12:14:27.0000] <jgraham>
s/eventually//

[12:14:41.0000] <Hixie>
sure

[12:14:44.0000] <Hixie>
2, specifically

[12:14:45.0000] <Hixie>
iirc

[12:14:49.0000] <Hixie>
that's fine

[12:15:10.0000] <Hixie>
where's the confusion there?

[12:15:22.0000] <Hixie>
maybe i'm missing something

[12:16:21.0000] <jgraham>
The confusion is that you end up at 1

[12:16:32.0000] <jgraham>
So something must cancel the navigation in the unload

[12:16:48.0000] <Hixie>
send mail and i'll look into it in more detail

[12:17:07.0000] <Hixie>
ideally with convenient test cases i can just load :-)

[12:17:19.0000] <jgraham>
If nothing cancelled the navigation, I don't see why you wouldn't just end up calling the unload handler over and over

[12:17:33.0000] <jgraham>
Sure

[12:18:23.0000] <Hixie>
(you end up at 1? really?) weird)

[12:19:22.0000] <jgraham>
data:text/html;charset=utf-8,%3C!DOCTYPE%20html%3E%0A%3Cbody%20onload%3D%22location%3D'data%3Atext%2Fhtml%2C1'%22%20onunload%3D%22location%3D'data%3Atext%2Fhtml%2C2'%22%3E in gecko + webkit at least

[12:19:52.0000] <Hixie>
can't look right now, sorry

[12:19:58.0000] <Hixie>
but send mail and i'll look this afternoon

[12:20:33.0000] <jgraham>
I guess I will send mail in the morning :)

[12:38:31.0000] <annevk>
so now all MacBook's are without optical drive?

[12:41:46.0000] <Hixie>
only the new macbook pros and the small macbook airs

[12:42:15.0000] <annevk>
which other MacBook's are there?

[12:42:31.0000] <othermaciej>
the "legacy" non-retina MacBook Pros

[12:42:34.0000] <Hixie>
the new non-retina macbook pros have dvd drives

[12:42:45.0000] <annevk>
it does not say so on the web pages

[12:43:11.0000] <annevk>
http://www.apple.com/macbook-pro/specs/13-and-15-inch/ does not mention cd, dvd, or optical

[12:43:25.0000] <annevk>
and the view from the side does not show it (although only one side is shown)

[12:46:41.0000] <Hixie>
if you try to buy one you'll see it in the specs

[12:47:04.0000] <annevk>
had not tried that

[12:48:38.0000] <annevk>
I guess per othermaciej that one is prolly correct

[13:37:13.0000] <moo-_->
annevk: they have no optical AFAIK

[13:37:27.0000] <moo-_->
that would cost... extra!

[13:37:30.0000] <moo-_->
;)

[13:39:27.0000] <paul_irish>
annevk: whyd you ping me about h5bp's nonvalidation?  relatedly. can X-meta tags _not_ throw a validation error? (a warning seems a bit much even)

[13:40:44.0000] <annevk>
paul_irish: thought you worked on that

[13:41:18.0000] <annevk>
paul_irish: for the latter you want to bug hsivonen and MikeSmith

[13:41:39.0000] <sm0lm>
annevk, try grepping for "super"

[13:41:58.0000] <paul_irish>
annevk: cuz of issues like that i dont really aim for 100% valid.

[13:41:58.0000] <paul_irish>
aiight

[13:42:21.0000] <annevk>
paul_irish: fair enough, though the doctype could be somewhat better ;)

[13:42:50.0000] <paul_irish>
"the doctype is amazing" are the words i think you're looking for

[13:42:57.0000] <paul_irish>
:D

[14:03:25.0000] <jgraham>
Also, what is bz doing sending useful technical feedback to public-html

[14:03:44.0000] <jgraham>
How can I ignore it if he insists on throwing in curveballs like that

[16:11:10.0000] <Hixie>
MikeSmith: cvs being slow again

[16:32:33.0000] <Hixie>
wait, hober, your CP is actually just reverting the revert? i.e. it makes the whatwg spec and the w3c spec converge?

[16:32:59.0000] <Hixie>
that makes this thread even more ridiculous


2012-06-12
[18:00:48.0000] <rniwa>
Hixie: yt?

[19:53:33.0000] <MikeSmith>
Hixie: can you please check again and see if cvs is still slow for you?

[22:57:35.0000] <annevk>
Hixie: your unrestricted double change looks wrong

[22:58:10.0000] <annevk>
Hixie: you removed the generic NaN/Inifity language and then changed double to unrestricted double (unrestricted double is the one that allows NaN and such)

[22:58:57.0000] <Hixie>
i only changed it for ones where the previous language didn't apply

[22:59:05.0000] <Hixie>
at least, that was my intent

[22:59:21.0000] <annevk>
/me looks again

[23:02:32.0000] <annevk>
Hixie: e.g. the scale() method on <canvas> has no language for it

[23:02:59.0000] <annevk>
Hixie: setLineDash does have language for it, but it seems better if we make that double

[23:03:29.0000] <annevk>
same for globalAlpha, if that's still feasible

[23:03:36.0000] <annevk>
and similar methods

[23:05:15.0000] <Hixie>
all the canvas ones have language because there's the default language, no?

[23:05:19.0000] <Hixie>
oh, i guess methods don't

[23:05:28.0000] <Hixie>
but for the transforms there's no need for language

[23:05:34.0000] <Hixie>
you just do the maths with infinities

[23:05:54.0000] <Hixie>
there's separate language for problematic transforms iirc

[23:06:24.0000] <Hixie>
i guess we should add text for NaNs for scale()

[23:06:42.0000] <annevk>
I went through the spec for Infinity and missed that then...

[23:07:16.0000] <annevk>
I only see it for linedash, gradients and globalAlpha

[23:07:41.0000] <annevk>
but maybe it does not need to be explicitly mentioned?

[23:07:56.0000] <Hixie>
filed https://www.w3.org/Bugs/Public/show_bug.cgi?id=17468 for transforms

[23:08:02.0000] <Hixie>
please file other bugs for others

[23:08:03.0000] <Hixie>
gotta go

[23:09:36.0000] <annevk>
kk

[23:28:17.0000] <annevk>
so we're the Web Notification WG with http://www.w3.org/2010/web-notifications/ as home page

[23:28:28.0000] <annevk>
:)

[23:32:33.0000] <annevk>
jgraham: where is that email from bz to public-html?

[23:32:52.0000] <annevk>
jgraham: oh last month

[23:33:15.0000] <annevk>
jgraham: but that one cc'd whatwg

[01:26:41.0000] <zcorpan>
Hixie: the sync image load uses the state of the crossorigin attribute, but the potentially CORS-enabled fetch algorithm ignores the state of that attribute when the URL is same-origin

[02:19:27.0000] <annevk>
matjas: I guess theoretically you could add Registry-HTTP-headers to http://wiki.whatwg.org/wiki/Category:Registries

[02:19:45.0000] <annevk>
matjas: we haven't really invested effort into taking over that IANA stuff however

[02:20:02.0000] <annevk>
matjas: you could also try registering the header through IANA, but that process sucks balls

[02:20:27.0000] <matjas>
annevk: yeah, the latter option doesn’t sound like fun

[02:20:32.0000] <annevk>
(which is why everyone keeps minting X- prefixed headers instead; joy)

[02:21:12.0000] <matjas>
facebook spam: http://wiki.whatwg.org/wiki/Registry-HTTP-headers (by User:Kirayamato)

[02:21:38.0000] <annevk>
whoa

[02:23:41.0000] <annevk>
nuked

[02:48:04.0000] <matjas>
annevk: so can I just add an entry for X-UA-Compatible to the Registry-HTTP-headers page, or what?

[02:52:17.0000] <annevk>
well, 1) although IANA sucks our alternative has not really proved successful thus far (mostly due to lack of effort I think) 2) the HTML specification would need to be updated either way for the registration procedure 3) it would be interesting to hear what hsivonen_ has to say about this issue 4) you could start by adding it to http://wiki.whatwg.org/wiki/PragmaExtensions and mention it is widely used but you cannot be bothered to deal with the

[02:52:17.0000] <annevk>
pain that is IETF registration procedures for IANA registration

[02:57:48.0000] <matjas>
annevk: ok, done: http://wiki.whatwg.org/wiki/PragmaExtensions I’ll await hsivonen_’s feedback before I submit a spec “bug”

[03:01:07.0000] <karlcow>
there is an RFC against the proliferation of X-headers

[03:01:23.0000] <karlcow>
it is a similar story than and -vendor- extensions

[03:44:04.0000] <sm0lm>
Anyone know where the source code of the OPAL selectoracle can be obtained?

[03:46:24.0000] <Stevef>
[tm]: where are you at brotherman?

[04:04:12.0000] <jgraham>
Hixie: (mail sent)

[04:04:38.0000] <jgraham>
Also, I added some more tests for navigation in beforeunload and pagehide, which seem to work the same as in unload

[04:41:34.0000] <sm0lm>
Anyone know where the source code of the OPAL selectoracle can be obtained?

[04:53:55.0000] <annevk>
is http://mxr.mozilla.org/mozilla-central/source/netwerk/base/src/nsStandardURL.cpp Gecko's URL implementation?

[05:46:20.0000] <MikeSmith>
annevk: about the URL spec, Chris Weber has aggregated a bunch of tests at https://github.com/cweb/iri-tests

[05:47:19.0000] <MikeSmith>
and he has a report of some results at https://github.com/cweb/iri-tests/blob/master/results/uri-iri-results.xls

[05:52:03.0000] <annevk>
MikeSmith: reading that it sounds like he made the WebKit tests worse...

[05:52:11.0000] <MikeSmith>
oh

[05:52:20.0000] <MikeSmith>
how so?

[05:53:18.0000] <annevk>
removed e.g. <base> information

[05:53:35.0000] <annevk>
do you have pointers to Adam's original tests?

[05:54:49.0000] <annevk>
https://github.com/abarth/url-spec I guess

[06:11:31.0000] <annevk>
MikeSmith: pubrules throws a fit

[06:11:45.0000] <MikeSmith>
oh

[06:11:50.0000] <MikeSmith>
I will get those fixed

[06:12:10.0000] <MikeSmith>
and I will look from Adam's tests right now

[06:12:37.0000] <annevk>
I might have made a typo that threw pubrules into a fit

[06:13:50.0000] <annevk>
yeah was a typo

[06:17:32.0000] <annevk>
MikeSmith: so yeah, my plan is to work on URLs now

[06:17:52.0000] <MikeSmith>
ok

[06:18:02.0000] <MikeSmith>
the Webkit tests are at http://trac.webkit.org/browser/trunk/LayoutTests/fast/url I think

[06:18:21.0000] <MikeSmith>
not sure if those are essentially the same as Adam's github ones or not

[06:18:34.0000] <MikeSmith>
anyway, I will help with URLs as well

[06:28:20.0000] <MikeSmith>
annevk: about Notifications

[06:28:28.0000] <MikeSmith>
http://dvcs.w3.org/hg/notifications/raw-file/tip/TR.html is what we want to publish, right?

[06:28:33.0000] <annevk>
MikeSmith: yeah

[06:28:36.0000] <MikeSmith>
OK

[06:29:01.0000] <MikeSmith>
I will copy that to the dated TR URL

[06:29:01.0000] <annevk>
is there a problem?

[06:29:04.0000] <MikeSmith>
no

[06:29:12.0000] <annevk>
k

[06:29:31.0000] <MikeSmith>
just in your message to Denis, you had mentioned http://dvcs.w3.org/hg/notifications/raw-file/tip/Overview.html

[06:31:42.0000] <annevk>
ah yeah, I did not have the TR copy at that point

[06:31:47.0000] <annevk>
just the editor's draft

[06:53:08.0000] <MikeSmith>
annevk: OK, I have it up at http://www.w3.org/TR/2012/WD-notifications-20120614/

[06:53:14.0000] <annevk>
thanks

[06:53:29.0000] <MikeSmith>
and I'll work with Denis if anything more needs fixing for pubrules or whatever

[06:59:43.0000] <annevk>
Hixie: I want to change the email address for my account on the HTML spec

[06:59:50.0000] <annevk>
Hixie: to annevk⊙an

[07:02:10.0000] <annevk>
MikeSmith: IRI tests look nice too though

[07:02:39.0000] <MikeSmith>
yeah?

[07:02:47.0000] <MikeSmith>
I guess Chris did all those

[07:02:49.0000] <annevk>
MikeSmith: I was thinking of writing a URL parser in JavaScript and then using tests to compare it with browsers

[07:03:11.0000] <annevk>
MikeSmith: and then writing a spec based on the structure of that URL parser

[07:04:07.0000] <annevk>
MikeSmith: the current spec suffers from quite a few problems; e.g. "s<:s" is a relative URL, not a URL whose scheme is "s<"

[07:04:17.0000] <MikeSmith>
oh

[07:04:21.0000] <annevk>
so starting anew is probably best

[07:05:04.0000] <MikeSmith>
annevk: you might want to look at http://medialize.github.com/URI.js/  to see if you can repurpose some of it or get some ideas from it

[07:05:14.0000] <MikeSmith>
from Rodney Rehm

[07:05:50.0000] <MikeSmith>
https://github.com/medialize/URI.js

[07:11:11.0000] <annevk>
volkmar: "We are willing to discuss any detail of the API as long as we do not include any feature we believe are out of scope." seems somewhat poorly worded

[07:12:01.0000] <annevk>
MikeSmith: doesn't look that usable

[07:12:12.0000] <MikeSmith>
OK

[07:12:15.0000] <volkmar>
annevk: it might be indeed

[07:12:17.0000] <annevk>
but I should indeed look around first

[07:13:57.0000] <volkmar>
annevk: but I believe what I meant is undertandable (at least I hope)

[07:16:20.0000] <annevk>
volkmar: it seems kind of poor form to restrict the discussion to what you believe it should be restricted to

[07:29:08.0000] <AryehGregor>
annevk, [120612 17:30:48] <NeilAway> AryehGregor: I think it's Gecko's only URL type, yes, but we have several URI implementations too ;-)

[07:30:48.0000] <annevk>
AryehGregor: :(

[07:30:54.0000] <AryehGregor>
Are you surprised?

[07:31:04.0000] <annevk>
I blame the IETF

[07:31:14.0000] <AryehGregor>
/me blames Netscape

[07:31:15.0000] <volkmar>
annevk: it's indeed poorly worded, we doesn't want to block the discussion

[07:31:37.0000] <volkmar>
the idea is much more that unless proven useful, we don't want to handle those use cases

[07:32:40.0000] <annevk>
okay, cool

[07:41:24.0000] <annevk>
MikeSmith: why do backreferences not work in the URL spec?

[07:41:53.0000] <MikeSmith>
annevk: probably because I muffed something up

[07:42:01.0000] <MikeSmith>
I'll take a look right now

[07:43:03.0000] <MikeSmith>
"Uncaught TypeError: Object function Object() { [native code] } has no method 'push' dfn.js:26"

[07:56:32.0000] <gsnedders>
So, #whatwg, what should be done with Error.stack, given sites rely upon different JS engines having different strings?

[07:57:05.0000] <Philip`>
Add Error.stdStack

[07:57:12.0000] <Philip`>
which is standardised between browsers

[07:58:11.0000] <zcorpan>
gsnedders: [citation needed]

[07:58:26.0000] <Philip`>
(and which is much more convenient to use, e.g. not requiring you to do string parsing to extract data from it)

[07:58:54.0000] <Philip`>
(so that most people will start using that instead of Error.stack, and then nobody will care that Error.stack is inconsistently implemented)

[07:59:00.0000] <gsnedders>
zcorpan: Which part?

[08:00:00.0000] <gsnedders>
On the whole it looks like Error.stack won't be spec'd and a new API introduced that is sane

[08:02:39.0000] <annevk>
gsnedders: not sure what you want #whatwg to do here

[08:04:10.0000] <zcorpan>
gsnedders: what sites?

[08:09:10.0000] <gsnedders>
annevk: Is creating a new API the right way to go, or should most/all vendors break sites?

[08:10:21.0000] <zewt>
(the latter sounds unlikely)

[08:10:55.0000] <zewt>
little's more annoying than not being able to fix a bug because somebody broke your bug reporting :)

[08:11:15.0000] <annevk>
gsnedders: both sound annoying :)

[08:12:02.0000] <zewt>
creating a non-crappy API and ignoring the completely uninteroperable ones in there now seems the way to go

[08:28:39.0000] <AryehGregor>
gsnedders, that implies that there will indefinitely be a compat constraint on browsers that they have to implement the old .stack in whatever manner the legacy pages expect, but it won't be documented.  That sounds like a very bad idea.

[08:30:49.0000] <jgraham>
AryehGregor: The compat constraint is something like "if you have the string 'webkit' in your UA, you must return a string formated like X. Otherwise, if you have the string 'gecko' in your UA header, you must return a string formatted like Y, otherwise..."

[08:31:03.0000] <jgraham>
(except probably more complex than that)

[08:31:31.0000] <AryehGregor>
jgraham, well, if that's really needed for site compat and people aren't willing to deploy site-specific workarounds, then that needs to be specced.  You can't just have all these pages break in some random new browser that's written per spec.

[08:31:56.0000] <AryehGregor>
Better would be if browsers hacked around known bad pages to reduce compat impact enough that they could change to match the standard.

[08:32:03.0000] <gsnedders>
AryehGregor: the sites already do UA sniffing, so they're already broken in random new browsers.

[08:32:11.0000] <zewt>
can't blame pages for this, heh

[08:32:21.0000] <AryehGregor>
gsnedders, right, so new browsers have to clone an existing UA string, which is what they do in real life.

[08:32:28.0000] <jgraham>
gsnedders: Unless a random new browser implemented some other browser's US header exactly

[08:32:31.0000] <AryehGregor>
But they still need to know how to behave.

[08:32:31.0000] <jgraham>
*UA

[08:32:37.0000] <AryehGregor>
Given the UA string they picked.

[08:32:57.0000] <gsnedders>
Also it's unclear what to do given strict-mode and tail call optimization.

[08:33:09.0000] <gsnedders>
And overspecification could make TCO impossible, which would be bad.

[08:33:24.0000] <jgraham>
(it may not even be UA string based sniffing of course)

[08:33:55.0000] <zewt>
gsnedders: specify how to expose stack frames, but not what the stack frames will be (inlining could also cause frames to disappear, though that can probably be hidden by implementations with some effort)

[08:44:18.0000] <annevk>
meh

[08:44:24.0000] <annevk>
test://test.com/

[08:44:29.0000] <annevk>
does this have a host or not?

[08:44:59.0000] <zcorpan>
"Nobody; OK to take it and work on it"

[08:45:00.0000] <annevk>
.host returns "" in Opera/Firefox; test.com in Safari

[08:46:07.0000] <zewt>
annevk: doesn't the former imply that you could never add new schemes without breaking compatibility? (for what that's worth--not like the addition of a new protocol itself wouldn't have bigger side-effects)

[08:53:24.0000] <annevk>
zewt: seems like it has not been a problem in practice when we added ws: and wss:

[08:54:18.0000] <Ms2ger>
Am I alone in reading "twss"?

[09:00:49.0000] <zcorpan>
annevk: ws: and wss: aren't supported in <a href> so the URL decomposition attributes should treat it as an unsupported scheme, i think

[09:04:33.0000] <Ms2ger>
Whoa, fantasai *and* Hixie on a replying spree is no good for my inbox

[09:06:00.0000] <AryehGregor>
Isn't it great how we have a generic URL standard so that you can parse URLs without having to know scheme-specific details?

[09:13:12.0000] <jgraham>
pimpmyspec.net will be down for a while

[09:15:11.0000] <zewt>
for additional pimping?

[11:15:56.0000] <Ms2ger>
ojan, I don't care much, but I don't think moving mailing lists gains us much

[11:16:35.0000] <ojan>
Ms2ger: yeah, maybe not. i find it frustrating that in practice i need to check both mailing lists anyways because enough threads are incorrectly started on www-dom

[11:16:50.0000] <Ms2ger>
correctly, you mean ;)

[11:16:57.0000] <ojan>
lol, yeah

[11:17:20.0000] <Ms2ger>
I bet Bj�rn will have a say about it

[11:17:22.0000] <ojan>
Ms2ger: i'm not gonna make a big deal of this, but if everyone agrees, then there's no harm

[11:17:36.0000] <ojan>
i certainly don't intend to have a long dicussion about this

[11:17:58.0000] <Ms2ger>
If you want to have a long discussion about it, have it over at public-html? :)

[11:23:48.0000] <Ms2ger>
/me hadn't seen someone use "L.S." for a while

[11:26:52.0000] <TabAtkins_>
What's that mean?

[11:28:48.0000] <Ms2ger>
It's Latin, you won't like it

[11:29:59.0000] <TabAtkins_>
Hey, I got nothing against Latin itself.  Just against the ridiculous attachment that some grammar assholes from a century ago had to it.

[11:31:07.0000] <hober>
TabAtkins_: you are tilting at windmills. English is weird. Get over it.

[11:33:05.0000] <TabAtkins_>
Hey, the faux-latin bullshit started because of people tilting at windmills. ^_^

[11:33:29.0000] <gsnedders>
TabAtkins_: On the other hand, there is a lot of English which has Romance influence, such as bases. ^_^

[11:34:01.0000] <TabAtkins_>
English stole tons of words from romance languages, yeah.  But not its grammar.

[11:35:16.0000] <Ms2ger>
Did you mean "not it's grammar"?

[11:35:38.0000] <gsnedders>
Ms2ger: the Genitive form of it is its.

[11:35:58.0000] <Ms2ger>
Troll succeeded

[11:36:22.0000] <gsnedders>
TabAtkins_: Where does grammar end and lexis begin?

[11:36:29.0000] <gsnedders>
Ms2ger: I thought that was probably what you were doing.

[11:37:02.0000] <gsnedders>
You can trivially argue that closed-word classes (pronouns, for example) are grammatical.

[11:37:18.0000] <TabAtkins_>
gsnedders: I'm only a casual linguist on the internet, so I'm not prepared to argue to that level of precision.

[11:39:45.0000] <gsnedders>
TabAtkins_: Certainly English grammar has to some extent been influenced by Latin (which isn't that surprising, given English's status for the most of the first two millenia)

[11:40:39.0000] <Philip`>
Did you mean "millennia"?

[11:40:58.0000] <gsnedders>
Yes.

[11:41:58.0000] <gsnedders>
(Though yes, the influence on the lexis was far greater)

[11:42:55.0000] <gsnedders>
Today's fun fact: "they" and "them" are derived from Old Norse and not Old English.

[11:43:23.0000] <AryehGregor>
gsnedders, "bases" is Greek, not Romance.

[11:43:50.0000] <AryehGregor>
Oh, it's both.

[11:43:53.0000] <AryehGregor>
Interesting.

[11:44:15.0000] <AryehGregor>
Although it apparently didn't enter English through Romance languages -- it came into Middle English through Latin directly, according to my dictionary.

[11:44:54.0000] <Philip`>
("bases" as in plural of "base" or of "basis"?)

[11:44:55.0000] <gsnedders>
AryehGregor: Very little came from Greek directly.

[11:44:58.0000] <gsnedders>
Philip`: basis

[11:45:40.0000] <gsnedders>
AryehGregor: And Latin is a Romance language.

[11:46:39.0000] <AryehGregor>
gsnedders, not according to Wikipedia!

[11:46:55.0000] <Ms2ger>
Fix Wikipedia!

[11:47:07.0000] <AryehGregor>
"The internal classification of the Romance languages is a complex and sometimes controversial topic which may not have a unique answer. Several classifications have been proposed, based on different criteria."

[11:54:22.0000] <gsnedders>
I'd say the prototype of a language group is part of the group, *shrugs*.

[12:31:53.0000] <jgraham>
Italian must be a romance language, otherwise how would you explain Berlusconi

[12:33:25.0000] <sm0lm>
when are media fragment uris set to get widespread support?

[12:46:45.0000] <jgraham>
http://tools.ietf.org/html/draft-tbray-http-legally-restricted-status-00

[12:48:40.0000] <micheil>
jgraham: how do I say that there's an issue in that document?

[12:49:14.0000] <micheil>
quoting: "The restrictions typically most directly affect the".. make's little sense

[12:52:24.0000] <jgraham>
micheil: I'm not really sure. Perhaps the link marked "email" at the top of the document? Otherwise work out which WG is working on it

[12:52:36.0000] <micheil>
:/


2012-06-13
[00:38:25.0000] <Ms2ger>
So, is http://wiki.whatwg.org/wiki/StringEncoding something we want?

[00:41:05.0000] <[tm]>
hsivonen_:  did you ever get you ssh problem figured out?

[01:13:10.0000] <annevk>
In my @opera.com inbox this morning 'Welcome to the "xml-mime" mailing list'

[01:13:14.0000] <annevk>
I wonder how that happened

[01:24:12.0000] <annevk>
So what if you use "ws:/test" as URL in the WebSocket API?

[01:24:33.0000] <annevk>
Does that fail because there is no base URL per specification or are implementations doing the wrong thing?

[01:29:29.0000] <zcorpan>
annevk: browsers do the wrong thing

[01:29:37.0000] <zcorpan>
annevk: we have tests for that, iirc

[01:30:04.0000] <zcorpan>
annevk: we changed opera to do the wrong thing, to align with the other browsers :-)

[01:30:38.0000] <zcorpan>
both ws:test and ws:/test resolve to ws://test/

[01:30:50.0000] <annevk>
huh?

[01:31:08.0000] <annevk>
http:/test resolves to http://example.org/test

[01:31:21.0000] <Ms2ger>
s/intersection/union/

[01:31:31.0000] <annevk>
so what you are saying is not at all what I was hinting at and seems even weirder :(

[01:31:35.0000] <annevk>
Ms2ger: thanks

[01:32:00.0000] <zcorpan>
annevk: only if there's a base url and the scheme is the same as the base url

[01:32:11.0000] <zcorpan>
iirc

[01:33:05.0000] <zcorpan>
http:/test from the address bar becomes http://test/ (in opera anyway)

[01:33:52.0000] <annevk>
not in <a>

[01:34:05.0000] <annevk>
but if I use https:/test in <a> Opera treats it as a path!

[01:34:13.0000] <annevk>
whereas other browsers treat it as https://test/

[01:34:21.0000] <annevk>
fuck URLs

[01:36:33.0000] <zcorpan>
annevk: hey what did you expect? :-)

[01:38:02.0000] <annevk>
my little pony

[01:38:04.0000] <odinho>
If they actually behaved correctly, I could make some tests easier.

[01:38:26.0000] <odinho>
Which goes for basically the whole platform I guess :P :D

[01:39:22.0000] <hsivonen>
[tm]: I didn't get the Windows SSH problem solved. However, I'm no longer that interested in solving that problem. Now I'm more interested in getting a terminal app that runs under Wine so that other Windows apps running under Wine see it as a Windows program, but the apps running in the terminal would actually run on the host Linux system as Linux executables.

[01:40:39.0000] <hsivonen>
[tm]: Alternatively, maybe I should get a Windows-based Wine-compatible IRC client instead of using irssi behind SSH.

[01:40:52.0000] <odinho>
Wow, you want to do strange things. When I have to use SSH in Windows I always use PuTTY. Don't know if that helps.

[01:41:02.0000] <odinho>
hsivonen: Why do you need all that strange stuff?

[01:41:23.0000] <jgraham>
Why would anyone not want to run irssi behind ssh?

[01:41:25.0000] <odinho>
hsivonen: I used mIRC in wine when I was 13. Maybe it still works.

[01:41:51.0000] <annevk>
odinho: you're older now?

[01:42:11.0000] <odinho>
annevk: Yeah man.

[01:42:55.0000] <odinho>
and def. wiser; i.e. don't use mIRC any more.

[01:43:09.0000] <hsivonen>
odinho: I want to do speech input into IRC. So far, I haven't gotten Platypus working on a 64-bit host system, because I only managed to install 32-bit Dragon under Wine.

[01:43:20.0000] <hsivonen>
odinho: maybe I should try mIRC under Wine

[01:43:40.0000] <annevk>
zcorpan: so did we only implement that "hack" for ws/wss URLs?

[01:43:48.0000] <hsivonen>
Platypus being http://thenerdshow.com/platypus.html

[01:43:50.0000] <annevk>
zcorpan: or is it not yet in Opera Next?

[01:44:06.0000] <annevk>
<!DOCTYPE html><A href="https:/test">test</a>

[01:44:06.0000] <annevk>
<script> w(document.getElementsByTagName("a")[0].href)</script>

[01:44:16.0000] <annevk>
still yields log: http://software.hixie.ch/utilities/js/live-dom-viewer/https:/test for me

[01:45:29.0000] <hsivonen>
Free business idea for someone: License the Dragon engine from Nuance and make a Linux-native product around it like the MacSpeech folks did for Mac.

[01:47:23.0000] <jgraham>
Free business idea for someone that doesn't like making money?

[01:47:23.0000] <hsivonen>
I'd appreciate advice for how to run 32-bit ELF .exes under WINEARCH=win32 on a 64-bit host

[01:47:41.0000] <hsivonen>
jgraham: well, Nuance bought MacSpeech

[01:48:03.0000] <jgraham>
Yeah, but the market for for-money OSX apps is much bigger

[01:48:11.0000] <hsivonen>
true

[01:52:54.0000] <[tm]>
hsivonen:  would you prefer we update the validator UI to say MathML3 or just MathML (no version)?

[01:54:41.0000] <jgraham>
/me wonders what, if anything, in the spec deals with form submissions to javascript urls

[02:04:25.0000] <hsivonen>
[tm]: MathML I guess, since MathML3 is not a buzzword

[02:04:40.0000] <hsivonen>
[tm]: oops.

[02:04:54.0000] <hsivonen>
[tm]: that would be inconsistent with SVG 1.1 and HTML5

[02:05:17.0000] <hsivonen>
[tm]: I don't have a true preference

[02:05:26.0000] <hsivonen>
[tm]: which one makes more sense to you?

[02:05:48.0000] <hsivonen>
eventually, I think all of them should go versionless

[02:06:15.0000] <[tm]>
hsivonen:  yeah

[02:06:48.0000] <[tm]>
i don't have a sitting preference for washy msthml should be at ths point

[02:07:40.0000] <hsivonen>
[tm]: could make it 3 for now and drop versions from all of them once SVG is ready for that

[02:08:01.0000] <hsivonen>
i.e. when 1.2 has clearly been superceded with something that makes more sense than 1.1 as a validation target

[02:08:43.0000] <jgraham>
http://software.hixie.ch/utilities/js/live-dom-viewer/?saved=1570

[02:09:04.0000] <hsivonen>
looks like http://maps3d.svc.nokia.com/webgl/ will be yet another "Nokia first" thing that they failed to take from research to product before Apple did

[02:09:31.0000] <annevk>
hsivonen: why not just drop it and have an explanation in the FAQ?

[02:09:46.0000] <hsivonen>
annevk: that could work, too

[02:11:42.0000] <hsivonen>
Partnering with an anti-OpenGL vendor probably didn't help Nokia productize the 3D maps.

[02:19:42.0000] <annevk>
so the ws:/Test  or ws:test trick is not that hard I guess

[02:20:14.0000] <annevk>
when there's no base URL you basically treat everything following the scheme as authority

[02:20:24.0000] <annevk>
ignoring a single slash

[02:20:48.0000] <annevk>
seems hacky as hell thoug

[02:20:56.0000] <annevk>
h

[02:21:06.0000] <zcorpan>
sounds appropriate for the web

[02:21:37.0000] <zcorpan>
(also check more than two slashes there)

[02:22:59.0000] <annevk>
stuff gets weird in Safari then

[02:23:08.0000] <annevk>
Chrome / Gecko just keep eating those slashes

[02:23:34.0000] <annevk>
with Chrome you can throw some backslashes in there too

[02:28:10.0000] <jgraham>
So WebKit retargets the javascript: submit to the top level browsing context

[02:28:42.0000] <jgraham>
Gecko seems to try to run it in some browsing context with no window object?

[02:29:35.0000] <jgraham>
and I think Opera just aborts the navigation

[02:30:09.0000] <zcorpan>
but still runs the javascript: script?

[02:30:30.0000] <jgraham>
Not afaict

[02:30:45.0000] <hsivonen>
annevk, matjas: Even though X-UA-Compatible is widely used, surely requesting a particular layout engine (either legacy Trident or WebKit through Chrome Frame) is still harmful for the same reasons why the functionality of X-UA-Compatible went put in the HTML spec in the first place. As for using IE=Edge, it seems that IE10 in the Metro mode makes that obsolete as a means of disabling the Compatibility View button, since there's no such button in the Met

[02:30:55.0000] <jgraham>
I assume that's what aborting a javascipt URL navigation is (not running the script)

[02:31:28.0000] <zcorpan>
ah. right. i thought we might have run the script but then not navigating to the return value of the javascript url

[02:31:33.0000] <zcorpan>
but we don't run it at all

[02:32:14.0000] <annevk>
hsivonen: I agree it's harmful, developers seem to think otherwise

[02:32:18.0000] <hsivonen>
(I could be convinced that X-UA-Compatible with IE=Edge only should be valid.)

[02:32:22.0000] <zcorpan>
maybe foolip killed that as part of his javascript: onslaught

[02:32:54.0000] <annevk>
hsivonen: activating the IE Chrome-plugin I suppose is another use of it

[02:33:16.0000] <jgraham>
Perhaps. You have to do something to stop e.g. document.cookie from the original site being exposed

[02:33:22.0000] <zcorpan>
that and OtherUA=4

[02:33:24.0000] <hsivonen>
annevk: why should targeting WebKit like that be OK if targeting a particular Trident isn't?

[02:34:09.0000] <hsivonen>
(well, at least chrome=1 is the Edge of Chrome)

[02:34:09.0000] <zcorpan>
hsivonen: people want canvas and stuff in ie8, maybe?

[02:34:18.0000] <annevk>
hsivonen: right, it's not a particular version

[02:35:01.0000] <jgraham>
(so I guess we did *something* before foolip started that)

[02:35:31.0000] <annevk>
Anyone know why HTML does not define navigator.language?

[02:36:17.0000] <hsivonen>
I tend to agree with the sentiment of http://shaver.off.net/diary/2009/09/28/thoughts-on-chrome-frame/

[02:36:49.0000] <foolip>
zcorpan, jgraham, what was the question, exactly?

[02:37:10.0000] <annevk>
hsivonen: fair enough

[02:37:34.0000] <annevk>
hsivonen: then I would advise people away from X-UA-Compatible altogether because only allowing IE=Edge is just cargo-cult

[02:37:48.0000] <annevk>
hsivonen: and might make people believe other values are acceptable too

[02:38:15.0000] <zcorpan>
foolip: <form action="javascript:(function() { alert(1); return "LOL" })()"><button>OK

[02:38:24.0000] <zcorpan>
foolip: doesn't do anything in current opera

[02:38:41.0000] <zcorpan>
foolip: i recall you killed javascript: URLs in various places in opera at some point

[02:38:42.0000] <MikeSmith>
hsivonen: yeah, I guess making it MathML3 for now and planning to drop the all versions once we get there is best (and I think David Carlisle would probably also like to keep the 3 on MathML in there for now)

[02:39:08.0000] <zcorpan>
foolip: i don't recall whether it worked in <form action> before, but i have a hunch that it did

[02:39:24.0000] <foolip>
zcorpan, what I changed was javascript: as inline resources: <video poster>, <bgsound src>, <script src>, <link href> and from CSS

[02:39:46.0000] <foolip>
<form action> ought to not be handled as an inline resource, but I can't swear it

[02:40:22.0000] <zcorpan>
ok

[02:42:27.0000] <hsivonen>
MikeSmith: ok

[02:42:58.0000] <MikeSmith>
hsivonen: I can go ahead and make the change now and check it in

[02:43:00.0000] <hsivonen>
annevk: in general, I think validators shouldn't accept browser-specific syntax even if the syntax is popular among authors

[02:43:10.0000] <hsivonen>
MikeSmith: ok

[02:43:14.0000] <MikeSmith>
thanks

[02:43:39.0000] <hsivonen>
annevk: except when it's standard syntax that only one browser has implemented so far and others intend to implement

[02:44:20.0000] <annevk>
I guess the main thing here is that no other user agent wants anything to do with X-UA-Compatible

[02:44:57.0000] <hsivonen>
is Chrome Frame accessible yet?

[02:55:15.0000] <Stevef>
hsivonen: haven't checked chrome frame accessibility for a while, will check

[02:56:29.0000] <MikeSmith>
annevk: I guess the problem with the broken backreferences in the URL spec  is maybe that I'm marking them up wrong in the source

[02:56:49.0000] <MikeSmith>
I will take a look and compare to other anolis-generated specs to see

[02:59:03.0000] <annevk>
MikeSmith: if you use <dfn> and <span> you should be fine

[02:59:41.0000] <MikeSmith>
ok

[02:59:47.0000] <annevk>
MikeSmith: it seems the URL parsing is a little more correct than I thought by the way; it does include a check for valid scheme characters

[02:59:56.0000] <MikeSmith>
oh good

[03:00:25.0000] <annevk>
the details are just not defined and it should probably be done somewhat differently, but overall it seems okay

[03:01:18.0000] <MikeSmith>
great

[03:01:32.0000] <MikeSmith>
/me looks back at recent checkings

[03:01:49.0000] <MikeSmith>
annevk: arv was working on that section a while back

[03:02:15.0000] <MikeSmith>
should try to rope him in again if he has time to help some more

[03:02:32.0000] <annevk>
I thought arv was just working on the API?

[03:02:33.0000] <annevk>
hmm

[03:03:00.0000] <MikeSmith>
ah yeah

[03:03:05.0000] <MikeSmith>
you're right, yeah

[03:03:45.0000] <annevk>
I'm still trying to get a somewhat better understanding of the whole thing; then I'll probably write some tokenizer code

[03:05:06.0000] <MikeSmith>
annevk: I left editorial comments in there in places where I found problems or ambiguities in what was there

[03:05:17.0000] <MikeSmith>
but most of those are pretty high-level

[03:18:45.0000] <zcorpan>
jgraham: heh, i typoed the javascript url (used double quotes in a double-quoted attribute value). we do run hte script and navigate it, at least in 11.64

[03:18:53.0000] <zcorpan>
http://software.hixie.ch/utilities/js/live-dom-viewer/saved/1571

[03:19:25.0000] <zcorpan>
also in a recent build

[03:21:56.0000] <zcorpan>
ok http://software.hixie.ch/utilities/js/live-dom-viewer/saved/1572 doesn't run the script

[03:23:40.0000] <zcorpan>
chrome seems to run the script in the context of the form's owner document, but doesn't navigate

[03:30:06.0000] <annevk>
MikeSmith: yeah that's good

[03:30:17.0000] <annevk>
MikeSmith: now we need to fix them :)

[03:30:51.0000] <MikeSmith>
yah

[03:31:08.0000] <MikeSmith>
I will have more time next week to help out myself

[03:31:21.0000] <zcorpan>
and firefox runs the script in a restricted environment and then navigates (if the script didn't throw)

[03:31:36.0000] <MikeSmith>
annevk: I'm in meetings all day tomorrow and friday here

[03:31:37.0000] <annevk>
zcorpan: will you be in Linkoping next week?

[03:31:44.0000] <jgraham>
Yes, I think the Opera behaviour (do nothing) makes lots of sense

[03:31:51.0000] <annevk>
MikeSmith: no worries, this is going to take a while I guess

[03:32:00.0000] <MikeSmith>
yeah

[03:32:24.0000] <annevk>
but hopefully, after that we can answer most URL questions and only occasionally patch URL parsing

[03:32:29.0000] <jgraham>
annevk: Swedish people get confused if you s/ö/o/

[03:32:32.0000] <annevk>
instead of it being still undefined in 2012

[03:32:37.0000] <annevk>
jgraham: lol

[03:35:45.0000] <annevk>
MikeSmith: what's the URL spec component in the HTML WG?

[03:36:17.0000] <zcorpan>
annevk: no

[03:36:49.0000] <MikeSmith>
annevk: https://www.w3.org/Bugs/Public/buglist.cgi?product=HTML%20WG&component=URL%20spec&resolution=---

[03:36:58.0000] <MikeSmith>
annevk: but why you want that one?

[03:36:59.0000] <zcorpan>
jgraham: no we're used to it :-)

[03:37:07.0000] <MikeSmith>
annevk: I think I moved all the bugs over

[03:37:27.0000] <MikeSmith>
https://www.w3.org/Bugs/Public/buglist.cgi?product=WebAppsWG&component=URL&resolution=---

[03:38:46.0000] <MikeSmith>
annevk: I see there's only one bug left in the old component

[03:38:47.0000] <MikeSmith>
https://www.w3.org/Bugs/Public/show_bug.cgi?id=14569

[03:38:49.0000] <MikeSmith>
from arv

[03:38:54.0000] <MikeSmith>
but it's resolved

[03:39:00.0000] <MikeSmith>
I'll move that one over too

[03:39:07.0000] <MikeSmith>
for the sake of completeness

[03:41:07.0000] <annevk>
don't want it, but maybe nuke it?

[03:41:28.0000] <annevk>
zcorpan: too bad

[03:41:43.0000] <annevk>
I'll be in Linkoping next week starting Tuesday afternoon

[03:42:13.0000] <MikeSmith>
annevk: already just now moved it but anyway it's not going to show up normally (because it's still marked as resolved)

[03:42:14.0000] <jgraham>
On the other hand, that means you get a desk

[03:42:24.0000] <jgraham>
Office is pretty full at the moment

[03:42:33.0000] <annevk>
:)

[03:42:57.0000] <jgraham>
(well a desk not with gfx)

[03:43:38.0000] <annevk>
a docxs desk

[03:45:12.0000] <zcorpan>
annevk: are you staying for friday beer?

[03:45:26.0000] <Stevef>
hsivonen: chrome frame inherits chrome accessibility support, so much better, but still issues

[03:45:45.0000] <annevk>
zcorpan: yeah, leaving the country Sunday afternoon

[03:46:18.0000] <annevk>
zcorpan: no plans, just a plane ticket :)

[03:46:45.0000] <zcorpan>
annevk: ok. i'll check if i can come on friday

[03:54:27.0000] <hsivonen>
Stevef: thanks

[03:55:45.0000] <Stevef>
hsivonen: no problem, thanks for bring it up, I need to update article on chrome frame as I don't want outdated info being assumed as current

[04:52:30.0000] <zcorpan>
a 404 response with XHR still fires the 'load' event?

[04:54:38.0000] <annevk>
of course

[04:54:53.0000] <annevk>
same for <img>

[04:55:39.0000] <zcorpan>
i know <img> is weird; i didn't expec xhr.onload to be weird (since it didn't exist back in the day)

[04:55:58.0000] <annevk>
it's not weird

[04:56:09.0000] <annevk>
load/error/etc. reflect network state, not HTTP state

[04:56:33.0000] <zcorpan>
not everywhere :-)

[04:57:30.0000] <zcorpan>
/me wonders how <track> 404s should behave

[04:57:52.0000] <zcorpan>
knee-jerk is "fire error"

[04:58:09.0000] <annevk>
nooo

[05:07:41.0000] <zcorpan>
annevk: why not?

[05:27:08.0000] <Ms2ger>
/me wonders if "Left-overs from Hamburg ftf" is going to fall off the agenda before the next ftf

[05:42:28.0000] <annevk>
zcorpan: what other API does that?

[05:51:54.0000] <zcorpan>
annevk: <object>

[05:52:03.0000] <zcorpan>
annevk: i think <video>

[05:52:34.0000] <zcorpan>
annevk: and <video poster>

[05:52:48.0000] <zcorpan>
at least per spec and i think in opera

[05:53:20.0000] <zcorpan>
<style> and <script>?

[05:53:48.0000] <zcorpan>
i mean <link rel=stylesheet>

[05:54:21.0000] <zcorpan>
though i may be wrong about those

[05:55:34.0000] <annevk>
hmm

[05:55:43.0000] <annevk>
do browsers actually implement that for object?

[05:55:51.0000] <annevk>
looks very suspicious

[05:58:30.0000] <zewt>
cool, apparently just creating a 10000x10 webgl canvas crashes firefox immediately

[06:00:46.0000] <Ms2ger>
Hmm, I thought we had code to limit that

[06:01:05.0000] <SimonSapin>
zewt: I’ve once had my screen blink and the mouse cursor slow down to 3 fps for a few second before having to OS freeze, just by trying google’s mapgl in firefox

[06:01:08.0000] <zcorpan>
annevk: last time i checked, yeah

[06:01:46.0000] <zcorpan>
annevk: recall that <object> supports text/html so it wouldn't fall back if it applied 404 text/html

[06:02:15.0000] <zcorpan>
annevk: whereas a 404 text/html in <img> still errors since it's not a valid image

[06:07:11.0000] <zewt>
on an oldish firefox, i'll update later today and retest

[06:12:43.0000] <annevk>
MikeSmith: I think we should merge parsing and canonicalizing as well

[06:13:29.0000] <annevk>
MikeSmith: http://lists.w3.org/Archives/Public/public-iri/2011Jun/thread.html#msg24 (and reading of some browser code) suggests that's how it works

[06:13:40.0000] <annevk>
MikeSmith: unfortunately with some scheme-specific handling

[06:17:42.0000] <[tm]>
Hmm

[06:18:58.0000] <[tm]>
annevk: ok but abarth_  write it put that way when he first drafted it so i guess i had assumed out was informed by implementation

[06:19:17.0000] <[tm]>
but maybe not so much as i had thought

[06:19:34.0000] <zewt>
it sure is constant stress reading email these days, with 2-3 second delays on every single action in gmail

[06:21:52.0000] <annevk>
[tm]: need to ask abarth why he split it, indeed

[06:27:40.0000] <jgraham>
zewt: Maybe Google do it deliberately so that people who aren't Google employees are so stressed the whole time they can't get anything useful done and so don't come up with Google competitors

[06:29:49.0000] <zewt>
"SSE" is an unfortunate abbreviation for server-sent events

[06:30:04.0000] <zewt>
now all we need is an API that works out to "MMX"

[06:37:23.0000] <annevk>
MikeSmith: the other thing I think we should do is turn rename "parsed URL" to "URL" and have the other be "URL string" or some such

[06:38:07.0000] <annevk>
MikeSmith: then the parser sets the components of URL one by one, and the API just follows from there

[06:40:16.0000] <[tm]>
annevk: yeah, agreed

[06:41:14.0000] <[tm]>
annevk: maybe "candidate URL string"

[06:43:13.0000] <[tm]>
o "URL candidate"

[06:43:23.0000] <smaug____>
MM is obviously MultiModal, but the X...

[06:44:43.0000] <Ms2ger>
XML

[06:45:35.0000] <zcorpan>
XML stuff usually have the X first though

[06:45:59.0000] <annevk>
XQueryX doesn't

[06:46:06.0000] <zcorpan>
that's a thing?

[06:46:07.0000] <annevk>
(in a way)

[06:49:23.0000] <zcorpan>
/me stops reading that

[06:50:04.0000] <zcorpan>
having just seen inception, i'm disappointed they didn't go a level deeper with the xml thing

[06:58:21.0000] <zewt>
wouldn't that be xslt

[07:02:01.0000] <[tm]>
that would be using xslt to generate xslt

[07:02:30.0000] <annevk>
known to happen

[07:08:24.0000] <[tm]>
annevk:  clear sign of mental illness when it happens

[07:09:17.0000] <[tm]>
shutter island

[07:56:55.0000] <annevk>
weird

[07:57:01.0000] <annevk>
in Gecko about:blank has no path of "blank"

[08:16:10.0000] <zcorpan>
http://software.hixie.ch/utilities/js/live-dom-viewer/saved/1574

[08:17:15.0000] <zcorpan>
/me notices chrome has location.origin and location.ancestorOrigins

[08:30:43.0000] <Ms2ger>
kennyluck, I disagree, I found that sentence within half a minute ;)

[08:48:47.0000] <kennyluck>
Ms2ger, huh OK. I can't recall how much time I spent on finding that sentence when I had the same question. 5 mins maybe.

[08:49:12.0000] <Ms2ger>
Probably just luck on my part :)

[08:51:03.0000] <kennyluck>
it is certainly better than most CSS 2.1 prose. Every time I read something about the box model in CSS 2.1, I feel like I learn something and then unlearn something.

[09:22:02.0000] <SimonSapin>
kennyluck: I’m a bit lost as well, in the css3-syntax/tinycss thread

[09:25:18.0000] <[tm]>
SimonSapin is an interesting nick

[09:25:47.0000] <SimonSapin>
[tm]: it’s just first name plus last name

[09:26:38.0000] <SimonSapin>
how is it interesting?

[09:26:59.0000] <SimonSapin>
(just curious)

[09:27:58.0000] <[tm]>
just never seen that co

[09:28:23.0000] <SimonSapin>
co?

[09:28:34.0000] <[tm]>
just never seen that combination i guess

[09:28:58.0000] <[tm]>
but i don't get around much

[09:29:06.0000] <SimonSapin>
I see several in this channel

[09:30:08.0000] <Ms2ger>
I see MikeSmith

[09:30:12.0000] <[tm]>
those are all simple sumon

[09:30:33.0000] <[tm]>
those are 

[09:30:47.0000] <[tm]>
simple simon

[09:31:13.0000] <Ms2ger>
/me wonders how much [tm] had to drink

[09:33:08.0000] <[tm]>
lack of sleep is the more effecting thing

[09:33:36.0000] <jgraham>
affecting

[09:33:53.0000] <jgraham>
Although I guess you could argue for either in this case

[09:34:10.0000] <jgraham>
/me wonders about navigations triggered in unload steps

[09:34:52.0000] <[tm]>
i hate insu

[09:35:03.0000] <jgraham>
Simple WebKit model or complex Gecko model that might cover one more usecase

[09:35:07.0000] <[tm]>
i hate English

[09:35:17.0000] <zcorpan>
[tm]: you high again?

[09:35:22.0000] <[tm]>
so

[09:35:34.0000] <zcorpan>
man

[09:35:38.0000] <zcorpan>
it's wednesday

[09:35:57.0000] <[tm]>
pretty much always me

[09:36:02.0000] <jgraham>
In Tokyo it's Thursday

[09:37:36.0000] <[tm]>
every day is Mikey day in Tokyo

[09:37:53.0000] <kennyluck>
SimonSapin, it will be of course helpful if you identify places where you get lost.

[09:37:54.0000] <kennyluck>
I

[09:37:56.0000] <kennyluck>
 h

[09:37:57.0000] <kennyluck>
op

[09:37:59.0000] <kennyluck>


[09:38:00.0000] <kennyluck>


[09:38:01.0000] <kennyluck>


[09:38:02.0000] <kennyluck>
oops

[09:38:03.0000] <kennyluck>
shit

[09:38:15.0000] <jgraham>
You hop?

[09:38:27.0000] <jgraham>
Plus a diagram of hopscotch?

[09:38:29.0000] <[tm]>
you sloths in sweden should get off your lazy assess

[09:38:36.0000] <kennyluck>
SimonSapin, I was hoping my last message is as clear as I could be.

[09:38:46.0000] <[tm]>
and visit me in Tokyo

[10:33:02.0000] <[tm]>
yes

[10:34:43.0000] <[tm]>
you welcome any time off then thedes

[10:35:19.0000] <[tm]>
these guys make a movie to catch up

[10:35:24.0000] <kennyluck>
SimonSapin, did you reply that particular part of my message because it's the least confusing?

[10:35:41.0000] <Velmont>
Lachy: mind confirming here when it is? I'll leave office now.

[10:35:55.0000] <Velmont>
sry, supposed to be /msg

[10:36:35.0000] <[tm]>
lov

[10:36:56.0000] <[tm]>
secret love message

[10:37:13.0000] <kennyluck>
SimonSapin, I think it would still be helpful for you to give a correct statement as to what's sort of the impact of '$foo: bar' as compared to 'foo: bar'.

[10:37:24.0000] <Velmont>
[tm]: Jealous? :P

[10:41:36.0000] <TabAtkins_>
kennyluck: SimonSapin: Agree.  If you're doing error-handling correctly, the impact of "$foo:bar;" should just be to ignore up to the semicolon.  If you're not doing error-handling correctly, that's your fault.

[10:46:17.0000] <SimonSapin>
kennyluck: TabAtkins_: 'var-foo: bar' requires no change in tinycss. Given a bit more thought, '$foo: bar' could be implemented in a parser mixin/subclass that overrides the parse_declaration method. This would be opt-in so that older UAs that do not expect it do not break

[10:47:25.0000] <TabAtkins_>
SimonSapin: Are you talking about old versions of tinycss breaking, or old consumers attached to new tinycss breaking?

[10:47:40.0000] <SimonSapin>
the later

[10:48:08.0000] <SimonSapin>
older versions of tinycss should already have a correct error handling and drop the declarations

[10:48:12.0000] <TabAtkins_>
Ah, ok.  I care much less about that situation, since as you say, you can just have something internal that decides whether or not to expose them.

[10:48:43.0000] <SimonSapin>
yes, I also think that it should not matter for the spec

[10:49:08.0000] <kennyluck>
SimonSapin, though there's still a (hypothetical) case of tinycss UA that needs to serilze declarations and in that case there's no way to get '$foo: bar' because it's dropped right?

[10:49:13.0000] <SimonSapin>
and if older tinycss broke, that would be my fault for not implementing error handling correctly

[10:50:11.0000] <SimonSapin>
kennyluck: serialization is not currently supported. future versions may have a (possibly opt-in) way to preserve stuff that is otherwise ignored, to enable serialization

[10:51:02.0000] <kennyluck>
SimonSapin, how is it not supported? I don't think there's any problem to get the tokens out of a Declaration object.

[10:51:05.0000] <SimonSapin>
but let’s not worry about it until someone asks for it. Have a note in tho docs at most

[10:52:13.0000] <kennyluck>
SimonSapin, Declaration.value, to be exact.

[10:52:37.0000] <SimonSapin>
kennyluck: unlike property values, Declaration objects do not have a as_css() or serialize() method. You would have to re-escape the property name yourself in case it contains special characters

[10:53:03.0000] <SimonSapin>
yes, no problem for property values and selectors

[10:53:40.0000] <kennyluck>
SimonSapin,  where are as_css() and serialize() defined? I only looked at css21.py.

[10:54:41.0000] <SimonSapin>
there is no .serialize(). The token-related classes in token_data.py have .as_css()

[10:55:29.0000] <SimonSapin>
including TokenList, the type for declaration.value and ruleset.selector

[10:55:50.0000] <SimonSapin>
kennyluck: http://packages.python.org/tinycss/parsing.html

[10:56:04.0000] <kennyluck>
SimonSapin, I couldn't find the object for property values. What class is that?

[10:56:23.0000] <kennyluck>
TokenList?

[10:56:27.0000] <SimonSapin>
yes

[10:56:34.0000] <SimonSapin>
http://packages.python.org/tinycss/parsing.html#tinycss.css21.Declaration

[11:02:13.0000] <kennyluck>
TabAtkins_, SimonSapin, I only worry that for whoever wants to build a sort of an intermediate layer, a bit like tincyss, if he/she uses the current css3-syntax, he/she will end up implementing a layer that can't support '$foo: bar', because css3-syntax correctly doesn't ask UA to "Append the current input token to the value of the current declaration."

[11:02:47.0000] <kennyluck>
TabAtkins_, SimonSapin, I am saying this because, well, I didn't expect the CSS 2.1 core grammar to have any use before I read a bit of tinycss's source code.

[11:03:14.0000] <kennyluck>
s/correctly/currently/

[11:03:47.0000] <SimonSapin>
kennyluck: how would you have implemented a parser without it? Based on appendix G ?

[11:04:02.0000] <TabAtkins_>
kennyluck: And that's perfectly fine.  There's nothing wrong with amending the grammar/parser when we add new things.

[11:04:49.0000] <kennyluck>
SimonSapin, you can always keep the tokens. Equivalently it would treat everything in between two semicolons in a ruleset as a declaration.

[11:05:42.0000] <kennyluck>
TabAtkins_, that's perfectly fine unless someone later will cite tools as reasons why we shouldn't change the grammar and such.

[11:05:43.0000] <SimonSapin>
TabAtkins_, kennyluck: yes, changing tinycss is fine. I remembered in the middle of the thread that I already have an overkill mechanism (based on multiple inheritance) for parser features that can be enabled/disabled

[11:06:20.0000] <SimonSapin>
(dynamic multiple inheritance, even. It’s only missing meta-classes :p)

[11:07:06.0000] <TabAtkins_>
kennyluck: Again, if they're doing error-handing correctly, that's not an argument.

[11:08:26.0000] <kennyluck>
TabAtkins_, the argument is that If I am building a tinyCSS UA, it's never going to give me '$foo: bar' as a Declaration so I either have to create my own and that's troublesome.

[11:08:34.0000] <SimonSapin>
kennyluck: a Declaration object is a name, value and optionally !important. I can’t fit '$foo: bar' is this class as-is. I could however have Rule.declarations be a mixed list of Declaration and ... something else with an unparsed TokenList

[11:09:25.0000] <SimonSapin>
for minifiers

[11:10:00.0000] <kennyluck>
SimonSapin, that will indeed be better so I don't need to rebuild my own paper in this hypothetical scenario.

[11:10:25.0000] <TabAtkins_>
kennyluck: Okay?  Yes, if the grammar changes, your parser needs to change as well or it won't recognize the new things.  That's fine, because your UA won't *break* in the presence of changes, it just wont' see the new stuff.

[11:10:32.0000] <TabAtkins_>
That's how everything works ever.

[11:10:59.0000] <kennyluck>
TabAtkins_, that will break if my tinycss UA is a minimizer.

[11:11:16.0000] <TabAtkins_>
Explain?

[11:11:44.0000] <SimonSapin>
kennyluck: give me a few minutes, I’ll write a feature proposal for tinycss

[11:11:49.0000] <kennyluck>
Since tinycss stole my stoken! How am I going to get those if tinycss doesn't provide those.

[11:12:09.0000] <SimonSapin>
kennyluck: it will! If someone implements the feature

[11:12:46.0000] <TabAtkins_>
Yes, that's still fine. *You're using an out-of-date parser, so you don't get to see the new hotness features*.  But the rest of your stuff doesn't break.

[11:12:48.0000] <kennyluck>
This scenario is of course very theoretical, but I hope it explains this a bit.

[11:13:06.0000] <SimonSapin>
I would probably implement it myself if someone asks for it

[11:13:19.0000] <kennyluck>
TabAtkins_, I am building a minimizer, that does't seem to be acceptable at all.

[11:13:30.0000] <SimonSapin>
but apparently this is only theoretical

[11:13:38.0000] <kennyluck>
yes

[11:14:07.0000] <TabAtkins_>
kennyluck: I don't know what to argue, then.  You're saying that we shouldn't ever make any changes to the parser *ever* because of minimizers, even backwards-compatible changes.

[11:14:23.0000] <TabAtkins_>
I can't accept that position.

[11:15:23.0000] <kennyluck>
TabAtkins_, I am arguing that we should make it clear to a creator of something like tinycss that there's nothing unchangeable in css3-syntax.

[11:16:46.0000] <SimonSapin>
kennyluck: gotta go now. I’ll send you the feature spec for preserving everything in tinycss once I write it.

[11:17:10.0000] <TabAtkins_>
Making it clear won't help.  If you put a CSS parser between the raw text and the browser, then you're necessarily limited to the intersection of things they support.

[11:17:52.0000] <kennyluck>
TabAtkins_, 's why I've been saying that the CSS 2.1 grammar, deceptively promised to be a never-changing one, should be clearly marked as obsoleted.

[11:18:40.0000] <TabAtkins_>
Yes, the prelude in Syntax will state that it replaces the parsing section of 2.1.

[11:18:55.0000] <kennyluck>
TabAtkins_, well. The point is to make sure that the intermediate thing supports whatever it can support and don't cite a CSS spec and say "the spec promised this".

[11:19:15.0000] <TabAtkins_>
2.1 never promised no changes either. ^_^

[11:19:23.0000] <Ms2ger>
Bert did!

[11:19:26.0000] <TabAtkins_>
The editors did, and it was a silly promise that we can't hold to.

[11:19:30.0000] <kennyluck>
TabAtkins_, it does.

[11:19:59.0000] <kennyluck>
"All levels of CSS — level 1, level 2, and any future levels — use the same core syntax. "

[11:21:54.0000] <TabAtkins_>
I see how that sentence could be read as such.  But the intent of the sentence is just that we won't make backwards-incompatible changes that make new stylesheets unusable in old browsers.

[11:22:10.0000] <Ms2ger>
I doubt that was what was meant

[11:24:19.0000] <kennyluck>
Whatever the intent is, it is a truth that people constantly cite this as a reason against a grammar change, which I find quite annoying, even if I don't prefer the '$foo: bar' syntax.

[11:41:02.0000] <kennyluck>
TabAtkins_, by the way, if you want to say a UA not implementing error handling is faulty, you should eliminate the latte part of "user agents must either act as described below when encountering such problems, or must abort processing at the first error that they encounter for which they do not wish to apply the rules described below" immediately.

[11:41:55.0000] <TabAtkins_>
No, that is necessary, in some form, to allow conformance checkers to just bail with a "your CSS isn't conforming" message at the first error.

[11:42:25.0000] <TabAtkins_>
But it's trivially obvious that it's not web-compatible to bail on the first error if you're actually using the CSS to display somethin.

[11:42:33.0000] <kennyluck>
TabAtkins_, is there a real need somewhere?

[11:42:47.0000] <kennyluck>
Or can we limit it to conformance checkers instead of all potential UA?

[11:43:03.0000] <TabAtkins_>
It's also acceptable for CSS transformers, like server-side minifiers, to bail when they see something they don't understand.

[11:43:24.0000] <TabAtkins_>
What's not allowed is that they recover from the error in a way we dont' specify, because then we can't predict their behavior.

[11:44:36.0000] <kennyluck>
TabAtkins_, if you are saying this you are sort of contradicting what you said in "If you're not doing error-handling correctly, that's your fault."

[11:44:52.0000] <TabAtkins_>
Nope, not at all.

[11:45:12.0000] <TabAtkins_>
"Not doing error-handling correctly" is the "recovering in a way that we dont' specify" thing. That's not cool.

[11:45:40.0000] <zcorpan>
TabAtkins_: that's not really required, you can just say that conformance checkers have to report at least one error if there are any and none if there aren't any

[11:46:33.0000] <TabAtkins_>
zcorpan: I just copy-pasted from HTML, so shrug.

[11:47:52.0000] <kennyluck>
TabAtkins_, CSS 2.1 doesn't allow this for what it's worth.

[11:48:25.0000] <zcorpan>
TabAtkins_: i think html still has that because a streaming parser would want to abort in the face of errors that aren't streamable

[11:48:30.0000] <TabAtkins_>
I doubt this actually stopped anybody.

[11:48:48.0000] <TabAtkins_>
zcorpan: Ah, if that's the only reason then I can kill it, since CSS is streaming-friendly.

[11:49:22.0000] <kennyluck>
zcorpan, what kind of error is that?

[11:49:47.0000] <zcorpan>
kennyluck: <head></head><link><html class="foo"><html class="bar">

[11:50:06.0000] <zcorpan>
has three :-)

[11:50:24.0000] <zcorpan>
but there are more cases like that

[11:50:32.0000] <kennyluck>
zcorpan, ah, I see.

[11:50:33.0000] <zcorpan>
x</body> y

[11:50:35.0000] <kennyluck>
thanks

[11:54:33.0000] <zcorpan>
TabAtkins_: html also has the clause for conformance checkers along the lines i wrote above

[11:54:44.0000] <TabAtkins_>
Yeah, I copied that as well.

[11:55:12.0000] <zcorpan>
ok

[11:55:13.0000] <TabAtkins_>
I just took the prelude sections from HTML's parser and made a few edits and deletions to make it vaguely suitable for CSS. I'll go through and edit it properly later.

[13:11:15.0000] <Ms2ger>
MikeSmith / [tm]: is there a bugzilla component for idlharness.js?

[14:45:44.0000] <SimonSapin>
kennyluck: what do you think of this? https://github.com/SimonSapin/tinycss/issues/2


2012-06-14
[20:14:19.0000] <Ernston>
hello

[20:15:44.0000] <MikeSmith>
Ernston: hi

[20:16:25.0000] <Ernston>
i have ended up on this page whilst validating a page

[20:16:35.0000] <Ernston>
i added meta tags which i thought where ok to use

[20:16:37.0000] <Ernston>
<meta name= "language" content= "english" />

[20:18:11.0000] <MikeSmith>
is name=language registered?

[20:18:25.0000] <MikeSmith>
or wait

[20:18:45.0000] <Ernston>
am lost

[20:18:49.0000] <MikeSmith>
the more important question is, Why are you using that to begin with?

[20:19:03.0000] <Ernston>
primary language of the site is english

[20:19:10.0000] <Ernston>
so it can be translated

[20:19:13.0000] <Ernston>
with chrome

[20:19:49.0000] <MikeSmith>
you know about the lang attribute?

[20:20:01.0000] <Ernston>
not exactly

[20:20:02.0000] <MikeSmith>
that's the normal way to indicate the language of the document

[20:20:27.0000] <Ernston>
oh

[20:20:28.0000] <MikeSmith>
http://www.whatwg.org/specs/web-apps/current-work/multipage/elements.html#the-lang-and-xml:lang-attributes

[20:20:46.0000] <MikeSmith>
<html lang="en-US">

[20:21:17.0000] <Ernston>
ive found a couple of tags

[20:21:24.0000] <Ernston>
one being the 1 i showed you

[20:21:32.0000] <Ernston>
other is the <meta name="author"

[20:21:42.0000] <Ernston>
gives me error in validator too

[20:21:51.0000] <Ernston>
thee been depreciated?

[20:21:54.0000] <Ernston>
these

[20:22:21.0000] <Ernston>
i am sure ive used these in the past with no probs

[20:22:34.0000] <Ernston>
using html5 document btw.

[20:23:07.0000] <MikeSmith>
we recently updated the validator to check name values

[20:23:15.0000] <Ernston>
arr

[20:23:17.0000] <MikeSmith>
the spec requires is

[20:23:19.0000] <MikeSmith>
*it

[20:23:25.0000] <MikeSmith>
we just were not checking it before

[20:23:43.0000] <MikeSmith>
Ernston: the thing about most of the meta@name values is that they are just noise

[20:23:45.0000] <MikeSmith>
junk

[20:23:46.0000] <Ernston>
this registering of metadata confuses me

[20:23:54.0000] <MikeSmith>
no applications actually do anything with most of the values

[20:24:08.0000] <MikeSmith>
so it's usually not worth your time to try to register them

[20:24:18.0000] <Ernston>
i thought html5 was making way for more semantic elements

[20:24:26.0000] <MikeSmith>
the better solution is just to not use name values that no applications actually do anything with

[20:24:40.0000] <Ernston>
what should i do about this lot

[20:24:50.0000] <Ernston>
<meta name="audience" content="all" />

[20:24:55.0000] <MikeSmith>
oh man

[20:24:59.0000] <MikeSmith>
that is worthless

[20:25:02.0000] <MikeSmith>
it's pointless

[20:25:13.0000] <Ernston>
its stuff i pulled from my old code

[20:25:18.0000] <MikeSmith>
yeah

[20:25:20.0000] <Ernston>
normally touch meta data last

[20:25:24.0000] <MikeSmith>
that's where most people pull it from

[20:25:30.0000] <Ernston>
things have changed since i completed a site lol

[20:25:32.0000] <MikeSmith>
and that's the reason we check and flag it as an error

[20:25:42.0000] <Ernston>
3 more to go

[20:25:47.0000] <Ernston>
<meta name= "distribution" content= "global" />

[20:25:54.0000] <Ernston>
does that do anything? lol

[20:25:55.0000] <MikeSmith>
worst of all

[20:25:59.0000] <MikeSmith>
get rid of that, man

[20:26:07.0000] <Ernston>
they are all getting deleted

[20:26:14.0000] <Ernston>
i dont like errors in my page on validation

[20:26:17.0000] <Ernston>
am ocd

[20:26:19.0000] <MikeSmith>
part of the point of the validator is to let you know about cruft you have in your docs that is not necessary or useful

[20:26:26.0000] <MikeSmith>
good good

[20:26:30.0000] <Ernston>
heres a good 1

[20:26:35.0000] <MikeSmith>
rip them out

[20:26:46.0000] <Ernston>
<meta name="address" content="http://www.h

[20:26:47.0000] <Ernston>
lol

[20:27:10.0000] <Ernston>
am glad to see junk has been removed

[20:27:17.0000] <Ernston>
and its not be going more insane

[20:27:22.0000] <Ernston>
me*

[20:28:19.0000] <Ernston>
even copyright attribute dead?

[20:28:46.0000] <Ernston>
took it out anyway due to error

[20:29:00.0000] <Ernston>
ive failed if i dont pass w3

[20:29:20.0000] <Ernston>
yslow and css validtor

[20:29:29.0000] <Ernston>
validator to the best that i can

[20:29:35.0000] <Ernston>
:D

[20:29:52.0000] <Ernston>
damn my head looks naked

[20:50:50.0000] <Hixie>
is there any sane way to have objects in JS have two constructors?

[20:51:10.0000] <Hixie>
i need one constructor for when i'm creating the object normally, and one for when i'm creating it from a serialised representation

[20:51:21.0000] <Hixie>
but there doesn't seem to be a way to do tht...

[20:53:29.0000] <zewt>
well, that's when you switch to factories...

[20:54:06.0000] <Hixie>
ugh

[20:54:17.0000] <Hixie>
but that's so ugly

[21:01:44.0000] <zewt>
i prefer it, but i guess what you're looking for is overloaded constructors ... don't know if webidl allows that

[21:02:00.0000] <heycam>
it does

[21:02:26.0000] <heycam>
but constructors are required to return instances of that interface

[21:16:07.0000] <Hixie>
webidl isn't accessible from js :_)

[21:16:14.0000] <heycam>
ah

[21:16:34.0000] <heycam>
just switch on arguments.length inside your constructor

[21:16:44.0000] <heycam>
return something different depending on how it was called

[21:17:19.0000] <Hixie>
what if they both have zero arguments or some such?

[21:17:35.0000] <heycam>
then… how do you distinguish which one is being called?

[21:17:45.0000] <Hixie>
by name, in other languages

[21:17:46.0000] <heycam>
or, are they meant to have different names (like [NamedConstructor]s)?

[21:18:08.0000] <heycam>
in other languages?

[21:18:40.0000] <heycam>
btw you can return whatever you want from a constructor function, and it doesn't have to be related to the constructor itself

[21:18:53.0000] <heycam>
function A() { }  function B() { return new A() }

[21:19:00.0000] <heycam>
then new B() will be an A

[21:19:17.0000] <Hixie>
like ObjectPascal

[21:19:44.0000] <heycam>
/me was a big Delphi fan a long time ago

[21:20:22.0000] <Hixie>
you call  Foo := TFoo.Create(); or Foo := TFoo.MakeFromStream(stream); or whatever

[21:20:26.0000] <Hixie>
and they can be both constructors

[21:20:33.0000] <heycam>
ah right, that seems familiar

[21:21:04.0000] <Hixie>
(you declare them as  constructor Create();  or  constructor MakeFromStream();  instead of function Foo(): Integer; or whatever)

[21:21:08.0000] <Hixie>
perl is similar

[21:21:11.0000] <heycam>
you could do:  function A() { }   A.FromStream = function() { var a = new A(); a.something = 123; return a }

[21:21:21.0000] <heycam>
then new A.FromStream()

[21:21:22.0000] <zewt>
what does it matter if it's actually a constructor? as far as users are concerned it just means you don't say "new"

[21:21:23.0000] <heycam>
looks nice

[21:21:35.0000] <Hixie>
yeah, that might work

[21:21:38.0000] <zewt>
x = A.FromStream();

[21:21:46.0000] <heycam>
either way

[21:21:49.0000] <zewt>
that's all i meant by factory

[21:22:46.0000] <zewt>
(not that "factory" is actually anything special in dynamically-typed languages)

[22:01:53.0000] <Hixie>
this may seem like a silly question but... what purpose does the 'constructor' property in JS have?

[22:02:02.0000] <Hixie>
i can't find anything in the JS spec that defines anything that it _does_

[22:02:29.0000] <heycam>
Hixie, it's so you can do myInstance.constructor and find out which constructor (probably) constructed the object

[22:02:49.0000] <heycam>
not accurate of course because you can return whatever froma  constructor function

[22:03:03.0000] <Hixie>
but does anything actually ensure that a constructor function sets 'constructor' on the instance?

[22:03:15.0000] <heycam>
you should get it from the prototype

[22:03:21.0000] <heycam>
i thought

[22:03:58.0000] <heycam>
or maybe I misremember, I guess you are meant to set it yourself?

[22:04:30.0000] <heycam>
I remember now writing this kind of code: function MyClass() { }  MyClass.prototype.constructor = MyClass;

[22:07:01.0000] <Hixie>
yeah it's a line like that that made me wonder

[22:13:09.0000] <benvie>
the constructor property is automatically set when a function is created, along with the default protoype. It's rare for people to overwrite the prototype but if they do then they have to manually set the constructor property or else it'll just point to Object.prototype. The constructor property serves no purpose aside from that fact that people rarely change it or realize they can, so it

[22:13:10.0000] <benvie>
usually is accurate. It is used by most dev tools for introspection in order to give a useful name to objects based on the constructor's name

[22:13:34.0000] <benvie>
er point to Object, Object.prototype.constructor

[22:17:38.0000] <heycam>
oh yes, benvie is right -- `function f(){}` results in f.prototype.constructor == f

[22:17:49.0000] <heycam>
so I'm not sure why I would've been doing that manually

[22:18:02.0000] <heycam>
was a long time ago, /me probably just cargo culted it

[22:18:31.0000] <benvie>
something like `Ctor.prototype = { constructor: Ctor, ..methods }`

[22:18:57.0000] <heycam>
ah, if you overwrite prototype, good point

[22:19:14.0000] <benvie>
basicaly if you want to set the new prototype methods en masse you just overwrite it, in which case you need to manually set it again or else you show up in dev tools labelled as 'Object'

[22:19:16.0000] <heycam>
as it's often more convencient to write that style rather than a sequences of assignments to Ctor.prototype.blah

[22:20:34.0000] <benvie>
or in cases where you're inheriting. `F.prototype = Object.create(Super.prototype); F.prototype.constructor = F;`

[22:28:56.0000] <delight>
there is an interesting discussion going on @ http://code.google.com/p/chromium/issues/detail?id=44116 about i18n, floats and the html5 type="number" input field

[22:30:01.0000] <delight>
were would be the appropriate place to address such concerns esp. the additional attribute localized="true" needed for a smoother transition ?

[22:52:33.0000] <Hixie>
is there any difference between "new foo" and "new foo()" ?

[23:31:07.0000] <jgraham>
Hixie: No, unless I am horribly misremembering

[23:31:32.0000] <jgraham>
Oh look. Opera 12 got released

[23:32:59.0000] <hsivonen>
jgraham: about time

[23:57:31.0000] <AryehGregor>
Hixie, in what way is contenteditable a lower-level primitive than input/textarea?

[00:13:46.0000] <hsivonen>
why are the HW accel and WebGL prefs in Opera 12 integers and not booleans?

[00:46:45.0000] <sm0lm>
where can i find a reference of the default styles in CSS each markup element implies without any explicit CSS declarations? ie, what CSS would i need to put in `div { **HERE** }` to make my <div>s behave like <pre>s?

[00:47:37.0000] <zcorpan>
sm0lm: http://www.whatwg.org/specs/web-apps/current-work/multipage/rendering.html#rendering

[00:47:40.0000] <jgraham>
HTML spec, rendering section

[00:49:52.0000] <zcorpan>
how is target=_unrelated different from rel=noreferrer ?

[00:50:34.0000] <jgraham>
It would be totally disconnected AIUI

[00:50:49.0000] <jgraham>
So the opened window would have window.opener == window

[00:51:00.0000] <jgraham>
(or null? I forget how that one works)

[00:51:28.0000] <zcorpan>
i thought noreferrer does that as well

[00:51:40.0000] <jgraham>
It does? Pointer?

[00:52:14.0000] <zcorpan>
"This keyword also causes the opener attribute to remain null " http://www.whatwg.org/specs/web-apps/current-work/multipage/links.html#link-type-noreferrer

[01:01:31.0000] <jgraham>
Only works in WebKit, it seems

[01:05:55.0000] <zcorpan>
wider deployed than target=_unrelated then :-)

[01:06:28.0000] <jgraham>
Yes :)

[01:19:17.0000] <Ms2ger>
Yay, HTMLElement.itemType isn't web-compatible

[01:24:24.0000] <hsivonen>
Ms2ger: huh? bug#?

[01:24:41.0000] <Ms2ger>
https://bugzilla.mozilla.org/show_bug.cgi?id=763229

[01:24:53.0000] <hsivonen>
thanks

[01:33:57.0000] <annevk2>
whoa

[01:36:18.0000] <abarth>
annevk2: thanks for writing http://wiki.whatwg.org/wiki/Anolis and http://wiki.whatwg.org/wiki/Howto_spec

[01:36:23.0000] <abarth>
annevk2: they're super useful

[01:38:09.0000] <annevk>
thanks

[01:39:13.0000] <zcorpan>
Ms2ger: i hope that can be evang'ed

[01:39:27.0000] <annevk>
abarth: if you have any feedback or get feedback from others, let me know; I'd love to improve them, especially the latter

[01:39:32.0000] <zcorpan>
/me files an opera OTW bug about it

[01:39:48.0000] <abarth>
annevk: it's missing a description of class=switch :)

[01:39:54.0000] <abarth>
i had to crib that from domcore

[01:40:03.0000] <Ms2ger>
zcorpan, say so in the bug if you prefer evang?

[01:40:30.0000] <abarth>
it's also not clear to me how to contribute my xref JSON files back to the specification-data repo

[01:40:47.0000] <Ms2ger>
abarth, create an account on bitbucket

[01:41:16.0000] <annevk>
abarth: ah yeah, we should mention that

[01:41:36.0000] <abarth>
darn!  abarth already exists on bitbucket

[01:41:40.0000] <annevk>
abarth: what are you working on?

[01:41:47.0000] <abarth>
https://github.com/abarth/sysapps

[01:42:04.0000] <Ms2ger>
Oh, evil stuff ;)

[01:42:07.0000] <abarth>
mostly i'm trying to get some skeleton specs ready so the read editors can take over

[01:43:01.0000] <abarth>
Ms2ger: ok, i've created the account adambarth on https://bitbucket.org/

[01:43:10.0000] <zcorpan>
Ms2ger: done

[01:43:17.0000] <Ms2ger>
You've got access

[01:43:21.0000] <abarth>
cool, thanks

[01:43:24.0000] <Ms2ger>
Np

[01:43:48.0000] <abarth>
when should I push the JSON files?

[01:44:02.0000] <abarth>
I probably should wait until the charter is approved etc

[01:44:45.0000] <Ms2ger>
Whenever someone wants to use references to them, I'd say

[01:45:23.0000] <abarth>
ok.  right now these specs are all in one repo, so it's easy for them to cross-reference each other

[02:18:17.0000] <sm0lm>
can datalist elements be used for fetching server-generated search suggestions in a searchbox like google suggest or youtube?

[02:21:36.0000] <zcorpan>
there used to be a declarative way to do that, but it was dropped

[02:21:54.0000] <zcorpan>
you have to fetch it yourself and build the datalist <option>s yourself

[02:23:11.0000] <sm0lm>
zcorpan, wtf, why would it be dropped?

[02:23:59.0000] <sm0lm>
any historical docs that refer to it you might be able to link me to, zcorpan ?

[02:24:27.0000] <annevk>
sm0lm: http://dev.opera.com/articles/view/an-html5-style-google-suggest/

[02:25:07.0000] <sm0lm>
annevk, it just occurred to me that you probably wrote that :P

[02:25:27.0000] <annevk>
I did write that, some time ago :)

[02:25:40.0000] <annevk>
and zcorpan wrote the first demo I think

[02:26:27.0000] <sm0lm>
are you guys norwegian then?

[02:26:47.0000] <annevk>
Dutch and Swedish

[02:28:35.0000] <sm0lm>
cool.

[02:28:39.0000] <sm0lm>
i'm a boring american.

[02:29:36.0000] <sm0lm>
annevk, do u know what happened to the in-markup declaration?

[02:29:44.0000] <sm0lm>
what was the rationale for killing it?

[02:30:20.0000] <annevk>
it was both a declaration and an external XML format

[02:30:38.0000] <sm0lm>
annevk, what do u mean?

[02:31:01.0000] <annevk>
we (WHATWG) dropped it because it was only implemented by us (Opera) and it was easy enough to do using a little bit of scripting

[02:31:46.0000] <sm0lm>
annevk, but why not make it easy forpeople to see and notice in the whatwg docs?

[02:32:53.0000] <annevk>
sm0lm: well we weren't quite sure it was the correct solution anymore

[02:33:19.0000] <sm0lm>
annevk, well that's what i'm wondering: what about it made it not the correct solution?  seems pretty great to me..

[02:33:43.0000] <annevk>
sm0lm: you might not want new network requests whenever the user types something new, but rather have an ongoing connection via WebSocket and populate the <datalist> through that

[02:34:31.0000] <annevk>
sm0lm: we also learned that XML is something we rather not require from web developers because it always goes wrong

[02:35:30.0000] <sm0lm>
annevk, json?

[02:36:18.0000] <sm0lm>
<datalist src="http://my/dyn_dlist?q=%s" />

[02:36:20.0000] <annevk>
yeah that would probably be a better format, but does not address the continuous connection issue

[02:38:01.0000] <sm0lm>
annevk, right.  i don't understand the connection side of things that well, but couldn't you side step an issue of "[some people] might no want...." by giving two parallel ways of doing it and letting webdevs take it or leave it?

[02:41:02.0000] <annevk>
sm0lm: sure, but we should only do that if the new feature addresses the problem for the majority of developers

[02:41:20.0000] <sm0lm>
sm0lm, wouldn't it?

[02:41:26.0000] <sm0lm>
haha

[02:41:33.0000] <sm0lm>
/me talks to himself.

[02:41:35.0000] <sm0lm>
annevk,

[02:41:49.0000] <sm0lm>
mulligan^

[02:41:57.0000] <annevk>
sm0lm: that's not entirely clear :) <datalist> without this feature is not widely implemented or used yet

[02:41:58.0000] <sm0lm>
annevk, wouldn't it, though?

[02:45:15.0000] <sm0lm>
so declarative remote server-gen'd datalists aren't necessarily gone forever?

[02:46:57.0000] <sm0lm>
annevk, or what about just have it implicitly open and keep open a socket for fetching dlists?

[02:48:31.0000] <annevk>
sm0lm: back later, lunch

[02:49:08.0000] <sm0lm>
annevk, enjoy.

[03:28:23.0000] <annevk>
sm0lm: no, not gone forever

[03:28:40.0000] <sm0lm>
annevk, ok-- cool.

[03:29:01.0000] <annevk>
sm0lm: I think once <datalist> is more widely adopted we can study how developers use it and standardize the most common pattern

[03:29:05.0000] <sm0lm>
what do u think of having an implicit instruction to start a socket that stays open?

[03:29:25.0000] <annevk>
not really sure how you see that working

[03:29:37.0000] <sm0lm>
annevk, makes sense.  how long do you expect that to take, roughly?

[03:30:24.0000] <annevk>
dunno, I think <datalist> is now in WebKit, so it might see some more adoption

[03:31:03.0000] <sm0lm>
annevk, yeah, sorry.  i really don't know mucch about using web societs or how they work.

[03:34:06.0000] <annevk>
Ms2ger: is there a way in bitbucket to follow you, but not get everything you do on my homepage?

[03:34:17.0000] <annevk>
Ms2ger: or should I just stop following you and only follow some projects...

[03:34:38.0000] <annevk>
Ms2ger: the Gecko commits are interesting, but I'm way more interested in changes to standards

[03:34:59.0000] <Ms2ger>
I've got the same issue :/

[03:37:15.0000] <Ms2ger>
Not following me probably works bets

[03:37:16.0000] <Ms2ger>
best*

[03:41:45.0000] <annevk>
:(

[03:41:53.0000] <annevk>
hmm, limechat has no smileys

[03:46:30.0000] <jgraham>
That seems like a win

[03:47:26.0000] <odinho>
Smileys are essensials, I like how they are in irssi. All ascii goodness :]

[03:49:42.0000] <zcorpan>
sm0lm: http://dev.opera.com/articles/view/introducing-web-sockets/

[03:50:03.0000] <sm0lm>
zcorpan, thanks, i'll have a read.

[03:50:47.0000] <sm0lm>
to whatever degree that this question isn't loaded (i know you both work for opera): how good is the dev.opera.com documentagtion for someone who really doesn't have any interest in opera itself?

[03:50:58.0000] <zcorpan>
sm0lm: unfortunately opera 12 still has the old websocket protocol which is disabled by default

[03:51:00.0000] <sm0lm>
is stuff only relevant to opera clearly marked?

[03:51:28.0000] <zcorpan>
sm0lm: usually dev.opera.com articles aren't necessarily opera-specific

[03:51:33.0000] <jgraham>
odinho: Well yes, the ascii representation is of course fine :)

[03:51:49.0000] <jgraham>
/me starts the countdown to someone using a unicode smilie

[03:52:02.0000] <zcorpan>
sm0lm: if other browsers implement the same feature, it should apply equally to them

[03:52:04.0000] <odinho>
☺

[03:52:29.0000] <zcorpan>
sm0lm: we also try to make demos cross-browser

[03:53:04.0000] <sm0lm>
zcorpan, great. thanks :

[03:53:06.0000] <sm0lm>
)

[03:53:11.0000] <odinho>
We follow standards ;]

[03:53:22.0000] <sm0lm>
odinho, imagine that.

[03:53:33.0000] <zcorpan>
odinho: except when we don't :-P

[03:54:42.0000] <odinho>
zcorpan: Well, yes, but then it's often a bug, and we def. don't do it to be mean :P

[03:55:41.0000] <sm0lm>
hah, imagine that: not being mean.

[03:55:59.0000] <sm0lm>
that's revolutionary... /me thinks it should get codified in the spec.

[03:56:20.0000] <zcorpan>
odinho: not mean, just evil

[03:56:45.0000] <sm0lm>
/me proposes a strict ban on meanness and evilness in the spec.

[03:57:00.0000] <zcorpan>
/me goes back to writing evil tests

[03:57:04.0000] <odinho>
zcorpan: Someone else has copyright on that, and they kinda watered it down. :P

[03:57:08.0000] <sm0lm>
"in order to be compliant with the HTML specification, you must not be mean, or evil.

[03:57:24.0000] <sm0lm>
mehh....

[03:57:48.0000] <sm0lm>
i mean, on the one hand google is probably like the most terrible internet company there is right now, or at least up there.

[03:58:07.0000] <sm0lm>
on the other hand, in the context of this whole gig, their product *is* FOSS at least...

[03:58:19.0000] <sm0lm>
i'd be way more interested in opera if it weren't proprietary.

[03:58:30.0000] <sm0lm>
it seems like high-quality software...

[03:58:36.0000] <nonge>
yay, go the FLOSS way, Opera!

[03:58:42.0000] <sm0lm>
but who knows what kinda shit u guys put in there?

[03:59:09.0000] <Ms2ger>
/me yawns

[03:59:30.0000] <zcorpan>
sm0lm: if you're curious, apply for a job :-)

[03:59:42.0000] <sm0lm>
nonge, i'm not necessarily saying that, but if you're going to crack "evil" jokes or make jabs at other companies' social responsibility practices, you know...

[03:59:58.0000] <sm0lm>
"let the one without sin throw the first stone"

[04:00:08.0000] <sm0lm>
is Ms2ger a googler?

[04:00:16.0000] <zcorpan>
mozilla

[04:01:08.0000] <sm0lm>
zcorpan, its true.

[04:01:17.0000] <jgraham>
Maybe he uses google though

[04:01:21.0000] <sm0lm>
in the social responsibility dept. and values integrity dept, they are.

[04:01:44.0000] <sm0lm>
but IMO distributing shitty sw is another form of evil.

[04:01:51.0000] <jgraham>
One who uses google should be a googler. One who is google shoudl be a googlee.

[04:01:51.0000] <Ms2ger>
/me is getting terribly confused here

[04:02:08.0000] <Ms2ger>
jgraham, Larry Page?

[04:02:23.0000] <sm0lm>
jgraham, i used to think that too... but i gave up and accepted the common usage long ago.

[04:02:47.0000] <jgraham>
Ms2ger: For all we know you are Larry Page

[04:03:06.0000] <Ms2ger>
Well, that's true

[04:03:33.0000] <sm0lm>
for all you know, sm0lm is Larry Page.

[04:04:01.0000] <Ms2ger>
That, too is true

[04:04:15.0000] <Ms2ger>
For all they know, we're both Larry Page

[04:05:11.0000] <Ms2ger>
/me wrestles with idlharness.js instead

[04:06:02.0000] <sm0lm>
Ms2ger, we're fooling them so well.

[04:06:05.0000] <Philip`>
I thought Google didn't want people genericising its trademarked name by verbing it, so surely "Googler" should be replaced by "Employee of Google Inc"

[04:06:32.0000] <sm0lm>
googler isn't verbing it in the way that they're trying to avoid though.

[04:06:37.0000] <Philip`>
(Not quite as catchy, admittedly)

[04:07:02.0000] <sm0lm>
but "google it" isn't as catchy as "perform a google search for it" either.

[04:07:14.0000] <sm0lm>
zcorpan, btw, how does opera make its $$?

[04:07:17.0000] <Ms2ger>
Bah

[04:07:23.0000] <Ms2ger>
"Duplicate test name: FormData interface: operation append"

[04:07:30.0000] <Ms2ger>
"Cached metdata not present. Click for source code."

[04:07:34.0000] <Ms2ger>
Not helpful, plinss

[04:08:18.0000] <Philip`>
sm0lm: By selling itself to Facebook?

[04:08:52.0000] <sm0lm>
Philip`, s/\?$/ until now?/

[04:09:23.0000] <Ms2ger>
Selling its products to Nintendo?

[04:09:25.0000] <zcorpan>
sm0lm: http://my.opera.com/chooseopera/blog/2011/01/03/how-does-opera-make-money-aka-our-most-asked-question-ever

[04:11:13.0000] <sm0lm>
zcorpan, So..., how does that revenue model conflict with opening the sources?

[04:12:08.0000] <sm0lm>
or i mean what's the reasoning for keeping it closed?

[04:12:24.0000] <Philip`>
How would the revenue model be enhanced by opening the source?

[04:13:21.0000] <Ms2ger>
Philip`, three open source hippies would contribute bug fixes

[04:13:31.0000] <Ms2ger>
Not me, I hear they use git

[04:13:37.0000] <sm0lm>
Philip`, how would it be diminished by opening the source?

[04:13:55.0000] <sm0lm>
Ms2ger, do you work for any of the big vendors?

[04:14:04.0000] <Ms2ger>
Not currently

[04:14:15.0000] <Ms2ger>
As zcorpan mentioned, I'm a Mozillian

[04:14:21.0000] <jgraham>
Ms2ger: Three open source hippies? I thought RMS was the only open source hippie? The idea that there might be two others is terrifying

[04:14:51.0000] <sm0lm>
jgraham, wtf?

[04:14:59.0000] <hsivonen>
jgraham: how insensitive to call RMS an open source hippie. If he is a hippie, he is an Free Software hippie.

[04:15:02.0000] <sm0lm>
don't diss open source hippies.

[04:15:11.0000] <sm0lm>
/me makes one more.

[04:15:17.0000] <Ms2ger>
jgraham, there's been some guy hanging around irc.m.o working on an extension to block JS scripts without a license header

[04:15:25.0000] <Ms2ger>
I think that makes two, at least

[04:15:27.0000] <sm0lm>
/me laughs out loud at hsivonen 's comment.

[04:15:43.0000] <Philip`>
sm0lm: I imagine there would be e.g. conflicts between having an open bug database and source repository, and having Opera developers work on patches for unannounced embedded devices which have to be kept confidential

[04:15:46.0000] <sm0lm>
Ms2ger, that actually is really dumb.

[04:15:49.0000] <jgraham>
hsivonen: Egg and my face are in alignment

[04:16:08.0000] <Philip`>
sm0lm: (Presumably not unsolvable, but probably not entirely trivial)

[04:16:29.0000] <sm0lm>
Philip`, Presumably? Seems like "clearly" to me.

[04:16:57.0000] <sm0lm>
Just separate your private clients' sensitive data and unannounced work into another repo/tracker... problem solved, no?

[04:17:02.0000] <Ms2ger>
"Just"

[04:17:06.0000] <jgraham>
No

[04:17:27.0000] <Ms2ger>
Anyone feel like implementing enum support in idlharness?

[04:17:38.0000] <jgraham>
Having multiple trackers makes it hard to move things between trackers, for example

[04:18:30.0000] <jgraham>
Ms2ger: you?

[04:18:46.0000] <Ms2ger>
Not particularly

[04:19:28.0000] <Ms2ger>
I'm interested in someone doing it, just not me :)

[04:19:37.0000] <sm0lm>
When netscape opened theirs they had a team of lawyers approving each src file as safe for public ation wit no vulgar or slanderous comments... so its a job, but its not that big of a deal.

[04:20:20.0000] <Ms2ger>
Of course, all those vulgar comments were released afterwards

[04:20:40.0000] <jgraham>
sm0lm: I imagine that the biggest impediment to making Opera open source would be convincing people (the management, the board) that it is a good idea :)

[04:21:36.0000] <sm0lm>
Ms2ger, ofc they were.

[04:21:44.0000] <sm0lm>
on jwz.org i believe.

[04:22:25.0000] <jgraham>
(so discussing technical difficulties seems rather silly)

[04:24:56.0000] <Ms2ger>
Ohai, it's graememcc

[04:26:59.0000] <graememcc>
/me discovers Ms2ger is everywhere

[04:27:12.0000] <Ms2ger>
So are you! :)

[06:51:47.0000] <annevk>
so to properly resolve URLs you need a hardcoded list

[06:51:53.0000] <annevk>
teehee

[06:52:13.0000] <annevk>
of schemes

[06:53:48.0000] <annevk>
in other news, [tm] we got http://www.w3.org/TR/notifications/ published

[06:53:59.0000] <annevk>
[tm]: I guess that means we get a charter extension

[06:54:51.0000] <zewt>
cool, another TR for people to trip over :P

[06:55:37.0000] <jgraham>
It's OK in this case progress is so slow that TR will only be a little bit totally misleading at any given time

[07:03:23.0000] <annevk>
zewt: heh /TR/ash /TR/ip

[07:03:35.0000] <annevk>
jgraham: it has been pretty bad unfortunately

[07:04:10.0000] <annevk>
jgraham: but now I have granted myself full editing power (muhahaha) it should go more smoothly

[07:04:16.0000] <jgraham>
annevk: Well it is partially my fault, so I can't really complain

[07:05:25.0000] <mhausenblas>
annevk congrats re the Notifications TR, now a quick question: are you aware of http://tools.ietf.org/html/draft-ietf-core-observe-05 …?

[07:05:59.0000] <annevk>
mhausenblas: I'm not

[07:06:29.0000] <annevk>
mhausenblas: is it somehow related to end-user notifications?

[07:06:46.0000] <mhausenblas>
reason is: I'm getting more and more involved in the IoT stuff (see also http://scriptogr.am/mhausenblas/post/coap-and-the-rest) and interested in how aligned these things are

[07:07:00.0000] <mhausenblas>
that's what I'm trying to figure ;)

[07:07:42.0000] <mhausenblas>
on the surface, I'd say no, but need to dig deeper re overlaps

[07:07:43.0000] <annevk>
mhausenblas: if we take Mac as an example all this does is give a web page the ability to ping Growl

[07:07:51.0000] <mhausenblas>
right

[07:07:59.0000] <annevk>
mhausenblas: or the native notification system coming in 10.8

[07:08:05.0000] <annevk>
mhausenblas: not much to do with HTTP APIs

[07:08:21.0000] <mhausenblas>
yup, understood

[07:14:27.0000] <annevk>
Lachy: how about referencing DOM4?

[07:14:46.0000] <Lachy>
I do in Selectors API 2

[07:15:26.0000] <Lachy>
But I left it as DOM3Core in v1 because of W3C bureaucracy, which requires normative references to stable specs

[07:15:29.0000] <annevk>
Lachy: also, I guess you can list me as former editor or in the acknowledgments somehow

[07:15:41.0000] <annevk>
Lachy: stick it to the man

[07:17:29.0000] <Lachy>
annevk, I'm hoping I can just let v1 die and v2 supersede it, at which point it doesn't really matter what v1 references. But it's more unnecessary work to change it to reference DOM4 in v1 that will likely have to be reverted anyway if it progresses to PR and REC

[07:28:40.0000] <annevk>
oh right

[07:28:47.0000] <annevk>
mike was not going to be around

[07:45:16.0000] <annevk>
so HTML has hierarchical URL and authority-based URL

[07:45:26.0000] <annevk>
is there any example of an hierarchical URL that is not authority-based?

[07:57:10.0000] <annevk>
So Safari (not Chrome) is the only browser that aside from having a magical list to go down the authority-based URL route also considers // after the scheme

[09:03:33.0000] <SimonSapin>
python -m weasyprint.browser http://i.imgur.com/KQy8R.png

[09:19:45.0000] <Lachy>
Hixie, yt?

[09:26:23.0000] <Lachy>
Hixie, I'm being assigned to more spec work now. Do you have any suggestions for specs that need editors, or does anyone else have/know of any specs that are in need of some work?

[09:27:29.0000] <Lachy>
I've looked at http://wiki.whatwg.org/wiki/Specs_todo already. Still considering options though

[09:31:02.0000] <Ms2ger>
66767 INFO Passed: 61610

[09:31:02.0000] <Ms2ger>
66768 INFO Failed: 0

[09:31:02.0000] <Ms2ger>
66769 INFO Todo:   4999

[09:31:08.0000] <Ms2ger>
/me approves of test suites

[09:32:54.0000] <jwalden>
bah, who needs them, all they create is more work

[09:35:43.0000] <Ms2ger>
Lachy, table layout ;)

[09:45:26.0000] <jonlee>
annevk: ping

[09:52:50.0000] <annevk>
jonlee|afk: I'm around

[09:53:03.0000] <annevk>
jonlee|afk: well somewhat, helping Lachy with dinner a bit

[10:02:30.0000] <annevk>
ah you emailed

[10:07:01.0000] <Lachy>
Ms2ger, yeah, that's one I thought of already. It's a possibility.

[10:09:00.0000] <TabAtkins_>
Man, who wrote that page? When was "CSS Gradients" ever in need of editors?

[10:09:16.0000] <TabAtkins_>
Animations is out of data now, too - we finally got active editors for it again.

[10:09:18.0000] <TabAtkins_>
I'll fix.

[10:11:36.0000] <TabAtkins_>
Okay, I can blame Hixie for that.

[10:12:38.0000] <annevk>
there's more than table layout to fix though

[10:12:51.0000] <annevk>
e.g. imperative model of box construction

[10:12:59.0000] <TabAtkins_>
Sure, put it in.

[10:13:11.0000] <TabAtkins_>
Or I guess I will.

[10:21:45.0000] <annevk>
ah yeah, hit testing

[10:21:56.0000] <annevk>
there's a lot of stuff

[10:22:04.0000] <Ms2ger>
Oh hey, D3E published

[10:22:06.0000] <annevk>
but I keep forgetting it

[10:22:34.0000] <TabAtkins_>
annevk: A few days ago when you last mentioned it, you disappeared before I could ask what you actually meant by "hit testing is underdefined".  Can you elaborate?

[10:23:11.0000] <annevk>
it's not defined which element is returned for a given x,y within a document

[10:23:54.0000] <TabAtkins_>
Okay.  Is it really as trivial as I think, where you just take the geometry of all the elements in the documents (transformed as appropriate), order them by z-order, then test them for containment and take the first?

[10:24:34.0000] <annevk>
well, you have to go through margin boxes, fully transparent elements, maybe semi-transparent elements? and such

[10:24:46.0000] <annevk>
Leif Arne had a pretty good write up at one point in 2010

[10:24:54.0000] <annevk>
then tantek was going to specify it

[10:24:58.0000] <annevk>
and it ended there...

[10:25:07.0000] <TabAtkins_>
Last I saw, it's not clear that transparent elements actually need to have special handling.

[10:25:33.0000] <jamesr_>
IE does

[10:25:34.0000] <tantek>
yeah - it is sitting in my CSS tasks queue text document :/

[10:25:35.0000] <jamesr_>
in bizarre ways

[10:25:43.0000] <jamesr_>
IE handles transparent elements differently, that is

[10:25:46.0000] <annevk>
yeah, the write-up was about IE

[10:25:49.0000] <TabAtkins_>
Yeah, I know it does something kinda weird.

[10:25:54.0000] <tantek>
I was going to put it into CSS3-UI (since hit-testing *does* have to do with UI)

[10:25:56.0000] <jamesr_>
i think they be on crack

[10:26:00.0000] <annevk>
but once you implement pointer-events you need to do similar things

[10:26:06.0000] <TabAtkins_>
But based on my reading of the Firefox bug, it's not clear there's a web-compat concern.

[10:26:14.0000] <annevk>
this hit testing algorithm is influenced by the pointer-events property

[10:26:21.0000] <tantek>
but decided that putting in that much new spec text / functionality in a last call was probably a bad idea and so dumped it along with the 'pointer-events' property

[10:26:24.0000] <TabAtkins_>
Yeah, in a relatively trivial way.

[10:26:28.0000] <tantek>
right

[10:26:43.0000] <tantek>
TabAtkins - there is nothing trivial about either hit-testing, nor pointer-events, nor their relation.

[10:26:48.0000] <annevk>
tantek: it's a shame really, the WG should have let Leif Arne define it as I suggested

[10:26:58.0000] <annevk>
instead of letting it die in CSS3 UI

[10:27:00.0000] <TabAtkins_>
tantek: I'm not really seeing the complication. :/

[10:27:02.0000] <annevk>
we could have had something by now

[10:27:08.0000] <tantek>
annevk - sorry, that's probably my fault.

[10:27:12.0000] <TabAtkins_>
At least, from a conceptual standpoint.  Efficient implementation is a different matter.

[10:27:19.0000] <tantek>
and more like punted/postponed from CSS3 UI rather than "died"

[10:27:29.0000] <tantek>
though I suppose it's hard to tell the difference until something new is published

[10:28:15.0000] <tantek>
annevk - the last time we discussed h-t/p-e was in the Seattle CSS WG f2f that you were in

[10:28:20.0000] <jamesr_>
you basically run this: http://www.w3.org/TR/CSS21/zindex.html and then figure out bounds for everything, no?

[10:28:23.0000] <tantek>
which I believe was your last CSS WG f2f

[10:28:36.0000] <jamesr_>
figuring out exact bounds for everything is interesting

[10:28:46.0000] <annevk>
that was a nice meeting

[10:28:46.0000] <tantek>
jamesr_ - odd things happen with background, borders, overflow, scrolling etc.

[10:28:49.0000] <annevk>
I like Seattle

[10:28:59.0000] <TabAtkins_>
I think exact bounds is kinda underdefined for inline layout, but well-defined for everything else.

[10:29:07.0000] <tantek>
annevk - it was nice up until the point where glazman berated you - but I suppose you have blocked that out ;)

[10:29:17.0000] <TabAtkins_>
(Underdefined because it's basically "whatever the hell your text layout engine spits out".)

[10:29:52.0000] <annevk>
tantek: guess so - just fond memories of hanging out with Alex :)

[10:30:04.0000] <tantek>
I remember something about a boat

[10:30:05.0000] <tantek>
and water

[10:30:16.0000] <tantek>
though that was secondhand

[10:30:27.0000] <tantek>
/me knows better than getting on a boat during CSSWG meetings.

[10:30:27.0000] <annevk>
also a wet iPhone :p

[10:30:40.0000] <annevk>
haha

[10:31:05.0000] <TabAtkins_>
Drunken boating was a lot of fun.

[10:31:14.0000] <TabAtkins_>
Mainly because dbaron took over immediately and barely drinks. ^_^

[11:40:39.0000] <dbaron>
TabAtkins_, um, I took over because I seemed to be the only one who realized that the appropriate way to steer those boats was to turn the wheel about a quarter turn (and then wait ten seconds to see how the boat responds) rather than turning the wheel six times and then being surprised that you end up going in a tight circle

[11:45:38.0000] <Hixie>
o_O

[11:49:32.0000] <Ms2ger>
dbaron, having forgotten what TabAtkins_ said last, I thought that was a reference to css3-transitions :)

[12:14:27.0000] <matjas>
Hixie: http://www.whatwg.org/specs/web-apps/current-work/multipage/entities.json is incorrect, Unicode escape sequences must have exactly 4 hex digits (not 5)

[12:15:13.0000] <matjas>
Hixie: what you want is basically a simplified version of http://mathias.html5.org/tests/html/named-character-references/data.json — I could quickly generate it for you if needed

[12:17:39.0000] <TabAtkins_>
I *also* thought that dbaron was talking about Animations. ^_^

[12:20:12.0000] <Ms2ger>
http://www.w3.org/community/blog/2012/06/14/proposed-group-html5-mobile-test-community-group/

[12:20:21.0000] <Ms2ger>
/me inserts Condescending Wonka

[12:23:43.0000] <matjas>
Hixie: here you go http://mathias.html5.org/tests/html/named-character-references/hixie.json

[12:29:08.0000] <matjas>
/me files https://www.w3.org/Bugs/Public/show_bug.cgi?id=17490 while Hixie’s afk

[12:40:39.0000] <Hixie>
matjas: how do i give astral plane characters then?

[12:40:53.0000] <matjas>
Hixie: surrogate pairs, as I’ve done in the file

[12:41:01.0000] <Hixie>
seriously?

[12:41:04.0000] <matjas>
Hixie: more info here http://mathiasbynens.be/notes/javascript-encoding

[12:41:10.0000] <matjas>
(applies to JSON too)

[12:41:34.0000] <Hixie>
i know JS is broken but making JSON broken too seems dumb

[12:41:49.0000] <matjas>
/me shrugs

[12:41:55.0000] <Hixie>
i'll just output U+..... then

[12:42:17.0000] <matjas>
Hixie: you were also missing commas after each key/value pair

[12:42:26.0000] <Hixie>
oops, will fix

[12:42:46.0000] <Hixie>
(i can't just use your version, this file is autogenerated from a python script)

[12:43:09.0000] <matjas>
is that python script public? i’d love to make it spit out surrogate pairs

[12:43:47.0000] <Hixie>
it can be :-)

[12:44:29.0000] <matjas>
Hixie: make it so and i’ll fix it up for you

[12:46:24.0000] <Hixie>
http://damowmow.com/temp/entity-processor-json.txt is what i have at the moment

[12:46:27.0000] <Hixie>
it's mid-way through a fix

[12:46:34.0000] <Hixie>
i'm changing it to output an array of unicode codepoints

[12:46:42.0000] <Hixie>
but currently it still outputs zero-padded numbers

[12:47:15.0000] <matjas>
Hixie: in a nutshell… https://github.com/mathiasbynens/unicode-data/blob/447d59809cb7d78a6113389176ff6dc15942557e/scripts/utils.py#L8-13

[12:47:39.0000] <Hixie>
how do i convert a string to an integer in python?

[12:47:58.0000] <Hixie>
i don't think i really want the surrogates in the output

[12:48:18.0000] <Hixie>
surrogates should only ever exist in UTF-16, using them elsewhere is just bogus

[12:48:32.0000] <Ms2ger>
int()

[12:49:11.0000] <Hixie>
aha, int(..., 10)

[12:49:42.0000] <matjas>
Hixie: basically http://pastie.org/pastes/4088113/text and then call codePointToString() on the numeric code points

[12:50:44.0000] <matjas>
Hixie: yeah, but if you want to offer JSON this is the only way, other than using the raw glyphs

[12:50:57.0000] <Hixie>
there are many other ways :-)

[12:51:01.0000] <matjas>
Hixie: i don’t think having the numerical code points in JSON is nearly as useful

[12:51:06.0000] <Hixie>
e.g. what i'm doing, which is having the numerical codes

[12:52:06.0000] <Hixie>
it's unclear to me why it would be less useful

[12:52:10.0000] <Hixie>
it's the same data

[12:52:34.0000] <Hixie>
it's more useful, imho, since you don't have to worry about the surrogate nonsense

[12:52:36.0000] <matjas>
the numerical code points you can get from the HTML version

[12:52:46.0000] <Hixie>
what HTML version?

[12:52:53.0000] <Ms2ger>
The spec

[12:52:53.0000] <matjas>
of the spec

[12:53:00.0000] <Hixie>
there's no machine-readable version of this unless you mean the DTD data: URL...

[12:53:03.0000] <matjas>
the raw characters not, because of the undiscovered bug in the python script

[12:54:41.0000] <matjas>
…or you could please everyone by taking the http://mathias.html5.org/tests/html/named-character-references/data.json route + adding a `codepoint` property with the numerical value there

[12:54:52.0000] <matjas>
hah

[12:55:28.0000] <Hixie>
could have both i guess, true

[12:59:59.0000] <matjas>
/me refreshes http://www.whatwg.org/specs/web-apps/current-work/multipage/entities.json

[13:02:16.0000] <matjas>
heads up: so far it only lists 2098 out of 2231 named entities

[13:02:36.0000] <Hixie>
yeah, trying to work out why

[13:02:44.0000] <Hixie>
specifically, the surrogate pairs are missing

[13:03:23.0000] <Hixie>
check the damowmow link again

[13:03:26.0000] <Hixie>
see anything wrong?

[13:06:25.0000] <Hixie>
oh

[13:06:28.0000] <Hixie>
forgot to import math

[13:06:35.0000] <Ms2ger>
Math is everywhere!

[13:06:36.0000] <Hixie>
god i hate late-binding languages

[13:06:50.0000] <matjas>
heh

[13:09:52.0000] <matjas>
in `codepoints` you’re listing the surrogate halves separately, rather than the astral code point — i had expected the numerical astral code point value there

[13:10:13.0000] <matjas>
now it is indeed the same data as the string

[13:10:20.0000] <Hixie>
hm?

[13:10:24.0000] <Hixie>
  "&Afr;": { codepoints: [0x1D504], characters: "\uD835\uDD04" },

[13:10:31.0000] <Hixie>
seems to be what i expect?

[13:10:53.0000] <matjas>
Hixie: ah, you’re right, of course

[13:11:12.0000] <Hixie>
no "of course" there, given how i've been screwing this up so far today :-)

[13:11:14.0000] <matjas>
i was looking at an entity that results in two symbols

[13:11:17.0000] <Hixie>
heh

[13:11:22.0000] <matjas>
nice work!

[13:11:38.0000] <Hixie>
thanks for the help!

[13:11:56.0000] <matjas>
you may want to get rid of that trailing comma at the end

[13:12:04.0000] <matjas>
after the last key/value pair

[13:12:24.0000] <Hixie>
please don't tell me json can't handle it

[13:12:27.0000] <Ms2ger>
Nope

[13:12:31.0000] <Ms2ger>
Syntax error

[13:12:36.0000] <Hixie>
are you kidding me

[13:12:37.0000] <Hixie>
jesus

[13:12:54.0000] <matjas>
Hixie: append each line to a list `buffer`, then ',\n'.join(buffer)

[13:13:04.0000] <matjas>
instead of `print

[13:13:13.0000] <Ms2ger>
Or, well, use the builtin json module

[13:13:25.0000] <Hixie>
the python generates only part of the file, the whole thing is later piped through 'sort' in a bash script

[13:13:29.0000] <Hixie>
but it's ok!

[13:13:34.0000] <Hixie>
i shall use a perl script to remove the comma

[13:13:46.0000] <Hixie>
for surely such a simply task can only be complete once it uses perl, python, and bash

[13:13:56.0000] <Ms2ger>
/me approves

[13:14:18.0000] <Ms2ger>
Note that the json module has an option to sort the keys, btw

[13:14:27.0000] <matjas>
sed -i '' -e '$s/,$//' entitites.json

[13:15:13.0000] <matjas>
Hixie: throw some VBScript in there and you’re golden

[13:17:00.0000] <matjas>
Hixie: also, the keys (`codepoints`, `characters`) need to be quoted, using double quotes

[13:17:22.0000] <Ms2ger>
Indeed so

[13:20:13.0000] <Hixie>
i am starting to hate json :-P

[13:23:27.0000] <Hixie>
in other news:

[13:23:31.0000] <Hixie>
<template> and company.

[13:23:40.0000] <Hixie>
does anyone want the HTML spec updated for this other than google?

[13:24:07.0000] <Hixie>
hsivonen: yt?

[13:24:21.0000] <Hixie>
anyone from opera or webkit?

[13:24:33.0000] <Hixie>
(or IE?)

[13:26:35.0000] <TabAtkins_>
What's up?

[13:26:41.0000] <TabAtkins_>
Oh, webkit other than google.

[13:27:04.0000] <TabAtkins_>
Moz and IE are getting pretty interested in Components, but I can't speak for them.

[13:36:42.0000] <Hixie>
TabAtkins_: i'm trying to work out if they're "pretty interested" the same way they were in xbl2, or if they actually want me to update the spec to support it...

[13:37:28.0000] <TabAtkins_>
Ask them yourself, but I'm pretty sure it's a stronger commitment than xbl2.

[13:38:40.0000] <Hixie>
TabAtkins_: that's whyat i am asking them :-)

[13:38:52.0000] <TabAtkins_>
That's why I said I can't speak for them. ^_^

[13:40:21.0000] <Hixie>
right, hence why i didn't ask you :-P

[13:40:38.0000] <TabAtkins_>
FINE

[13:42:58.0000] <Hixie>
does <template> have a corresponding insertion point element? i can't find it in http://dvcs.w3.org/hg/webcomponents/raw-file/tip/spec/templates/index.html

[13:43:14.0000] <Hixie>
aha, <content> http://dvcs.w3.org/hg/webcomponents/raw-file/tip/spec/shadow/index.html#content-element


2012-06-15
[19:27:48.0000] <quiznilo>
how long do you guess IETC will upgrade 6455 to a draft standard?

[19:27:57.0000] <quiznilo>
*will it take

[19:34:03.0000] <quiznilo>
nevermind, I see here there are no more 'draft standards' by rfc 6410

[23:00:18.0000] <MikeSmith>
if I want to cache binary objects on the client side for use in a Web app, what should I use?

[23:00:23.0000] <MikeSmith>
indexed DB?

[23:25:37.0000] <AryehGregor>
MikeSmith, how many, and how big?

[23:29:05.0000] <MikeSmith>
AryehGregor: a few dozen and around 500K or so I guess

[23:29:19.0000] <AryehGregor>
Around 500K each?

[23:29:40.0000] <MikeSmith>
up to 500K I gues

[23:29:55.0000] <AryehGregor>
Then IDB is probably your only real choice, I guess.

[23:31:38.0000] <MikeSmith>
OK

[23:31:52.0000] <MikeSmith>
I know there's the File System API

[23:32:09.0000] <MikeSmith>
but it is seeming like that might not get implemented across browsrs

[01:00:34.0000] <jgraham>
hsivonen: So, my feeling is that window.stop should probably abort the parser, but still go through The End in the normal way. Doesn't match Gecko or WebKit but almost matches Opera (and hopefully no one really relies on this behaviour)

[01:32:59.0000] <zcorpan>
should the html spec be changed to not suggest vendor prefixes?

[01:39:41.0000] <niloy>
does anyone know how to access a spdy enabled website, I tried the URL "spdy://google.co.in" but chrome just did a search on it

[01:40:53.0000] <annevk>
zcorpan: they have not been that harmful for HTML thus far, mostly due to them not being used

[01:41:19.0000] <annevk>
zcorpan: actually the one instance where they have (fullscreen) it has been harmful...

[01:41:55.0000] <jgraham>
annevk: "yes" was the shorter version of that answer

[01:42:43.0000] <annevk>
jgraham: hindsight

[01:49:04.0000] <doublec>
niloy: just accessing it normally with http://... should use spdy if the website supports it

[01:57:57.0000] <niloy>
doublec, thanks

[02:08:29.0000] <annevk>
for http://[12::]:12 Gecko omits [ and ] for .host

[02:08:44.0000] <annevk>
for .hostname sorry

[02:08:51.0000] <annevk>
no other browser does that

[02:10:10.0000] <annevk>
all these parsers are buggy as hell

[03:54:09.0000] <hsivonen>
Hixie: I'm here now

[04:13:10.0000] <annevk>
are there any URLs that do not have an authority component but do have a path component?

[04:27:21.0000] <zcorpan>
about:blank?

[04:29:20.0000] <zcorpan>
javascript:...

[04:42:05.0000] <annevk>
zcorpan: afaik those don't have a path component because e.g. javascript:"/../" does not get normalized

[04:47:49.0000] <AryehGregor>
annevk, file://?

[04:48:30.0000] <annevk>
AryehGregor: doesn't that have an implied authority component of localhost in most browsers?

[04:48:43.0000] <annevk>
(hence the triple slash)

[04:49:00.0000] <AryehGregor>
Um, I dunno.  Syntactically it has no authority component.

[04:49:05.0000] <annevk>
yes it does

[04:49:07.0000] <AryehGregor>
Hmm.

[04:50:22.0000] <AryehGregor>
RFC 3986 doesn't allow an empty authority component, AFAICT.

[04:51:44.0000] <annevk>
yes

[04:51:59.0000] <annevk>
host -> reg-name -> *( unreserved / pct-encoded / sub-delims ) -> allows nothing

[04:52:19.0000] <AryehGregor>
Okay, I guess.

[04:52:20.0000] <annevk>
not that RFC 3986 is followed much

[04:53:19.0000] <annevk>
I'm sketching a new parser

[04:58:10.0000] <matjas>
Ms2ger, jgraham: would you mind giving some feedback on http://mathias.html5.org/tests/html/named-character-references/w3c/? trying to use the test harness correctly

[04:58:40.0000] <matjas>
is is ok like that, or would you prefer separate test() calls for each test?

[04:59:19.0000] <Ms2ger>
Mm.. Maybe

[04:59:39.0000] <Ms2ger>
With one test, you stop at the first failure

[05:00:20.0000] <Ms2ger>
So I guess if there are still browsers that fail anything there, a test() per entity would be better

[05:00:53.0000] <annevk>
put sketch for URL parser online http://wiki.whatwg.org/wiki/URL

[05:01:07.0000] <annevk>
[tm]: ^^

[05:05:37.0000] <zcorpan>
annevk: some browsers expose .pathname for those urls, though

[05:06:21.0000] <annevk>
zcorpan: yeah, even query

[05:06:45.0000] <annevk>
zcorpan: not sure that makes a lot of sense, but we could reuse .pathname to store the data I guess

[05:07:13.0000] <zcorpan>
matjas: one test() per test is better. there's a convenience function called generate_tests() or some such, though i haven't used it myself

[05:07:39.0000] <matjas>
zcorpan: the source said generate_tests() might be removed in the future, so i got scared

[05:08:18.0000] <zcorpan>
matjas: heh, ok. the other thing still applies though :-)

[05:08:32.0000] <matjas>
Ms2ger, zcorpan: thanks, on it!

[05:09:43.0000] <zcorpan>
general guideline: failing one test() shouldn't change the total number of tests

[05:10:07.0000] <jgraham>
matjas: generate_tests is pretty safe I would say

[05:10:08.0000] <Ms2ger>
matjas, generate_tests is deprecated-ish :)

[05:10:14.0000] <jgraham>
Heh

[05:10:23.0000] <matjas>
…

[05:10:29.0000] <matjas>
what just happened

[05:10:29.0000] <jgraham>
Well it can be problematic

[05:10:31.0000] <Ms2ger>
Unless jgraham removes that comment

[05:10:58.0000] <jgraham>
If you have an exception in the code that is generating the tests, you suddenly get 0 tests

[05:11:18.0000] <matjas>
so, like this? http://mathias.html5.org/tests/html/named-character-references/w3c/ what’s with the metadata warning?

[05:11:39.0000] <zcorpan>
jgraham: but that'd apply for a custom-written test generator equally, right?

[05:11:47.0000] <jgraham>
zcorpan: Yes

[05:11:59.0000] <jgraham>
matjas: plinss being over0enthusiastic

[05:12:56.0000] <matjas>
jgraham: ok, i’ll just ignore it then. do the tests look ok otherwise?

[05:13:57.0000] <zcorpan>
matjas: looks ok from a quick look

[05:14:43.0000] <jgraham>
I don't see anything wrong at a glance.

[05:15:52.0000] <matjas>
ok, thanks for taking a look

[05:16:55.0000] <[tm]>
xslt2 implemented in Javascript, friends

[05:17:18.0000] <[tm]>
performantly

[05:17:34.0000] <zcorpan>
now implement javascript in xslt2 in javascript

[05:17:53.0000] <[tm]>
hahaha

[05:18:01.0000] <zcorpan>
performantly

[05:18:23.0000] <[tm]>
this odds a sure sign of the apocolypse

[05:19:11.0000] <[tm]>
i would like to see the code

[05:19:21.0000] <[tm]>
wait no i really wouldn't

[05:20:14.0000] <zcorpan>
hey icaaq

[05:20:26.0000] <[tm]>
next we implement visual basic in js

[05:20:29.0000] <icaaq>
zcorpan: hey!

[05:20:41.0000] <Ms2ger>
[tm], naaah

[05:20:50.0000] <Ms2ger>
Visual Basic in js-on-xslt-on-js

[05:20:54.0000] <zcorpan>
icaaq: how's things?

[05:21:47.0000] <icaaq>
zcorpan: great! tgif. long time since I was in this channel :) you?

[05:22:33.0000] <zcorpan>
icaaq: good good. i'm still here regularly :-)

[05:24:30.0000] <icaaq>
zcorpan: :) I heard chaals is leaving opera

[05:24:52.0000] <zcorpan>
yeah

[05:27:37.0000] <[tm]>
they are hiring Assa Dotzler to replace chaals

[05:28:07.0000] <Ms2ger>
Asa*

[05:28:15.0000] <Ms2ger>
And my condolences

[05:28:22.0000] <icaaq>
really?

[05:28:43.0000] <zcorpan>
icaaq: don't pay attention to these guys :-P

[05:29:00.0000] <Ms2ger>
Friday night for [tm]

[05:29:04.0000] <Ms2ger>
And, well, [tm]

[05:29:10.0000] <annevk>
also, Ms2ger

[05:29:12.0000] <annevk>
known troll

[05:29:21.0000] <icaaq>
haha

[05:29:22.0000] <Ms2ger>
Yw

[05:30:17.0000] <[tm]>
every night is Friday night for Mikey

[05:30:35.0000] <annevk>
Lachy: http://dbaron.org/css/intrinsic/

[05:30:57.0000] <Lachy>
annevk, thanks. I found that already

[05:31:11.0000] <annevk>
I was going to update the wiki, but it eh is down?

[05:31:29.0000] <Lachy>
but stig wants me to pick something related to docxs instead of layout

[05:31:50.0000] <Lachy>
wiki works for me

[05:32:38.0000] <zcorpan>
/me wonders what Lachy and annevk are discussing

[05:32:59.0000] <Lachy>
zcorpan, I'm being assigned to more spec work. I need to find a spec that needs working on.

[05:33:13.0000] <zcorpan>
ah. nice!

[05:33:22.0000] <zcorpan>
going into css land?

[05:33:33.0000] <Lachy>
current options now include DOM Events and WebECMAScript stuff documented in the wiki.

[05:33:37.0000] <Ms2ger>
Apparently not

[05:34:12.0000] <zcorpan>
ok

[05:35:15.0000] <annevk>
Lachy: could talk to olak as well

[05:35:31.0000] <annevk>
Lachy: sitecompat usually means a ton of spec issues somewhere

[05:36:22.0000] <annevk>
/me updated http://wiki.whatwg.org/wiki/Specs_todo#CSS

[05:50:39.0000] <matjas>
can i submit this test somewhere? http://mathias.html5.org/tests/javascript/identifiers/

[05:51:50.0000] <Ms2ger>
To ECMA? No

[05:52:12.0000] <Ms2ger>
They don't accept tests unless you work for a member company

[05:55:47.0000] <matjas>
and the W3C only accepts HTML/CSS tests, right?

[05:56:38.0000] <Ms2ger>
I guess

[05:56:40.0000] <annevk>
matjas: well, they typically accept tests for specs

[05:56:45.0000] <Ms2ger>
I'd take them ;)

[05:56:58.0000] <annevk>
matjas: but I think if you talk to plh / mike you can get a place for JavaScript tests

[05:57:17.0000] <matjas>
the above test tests for ECMAScript 5.1 + Unicode 6.1 + http://wiki.whatwg.org/wiki/Web_ECMAScript#Identifiers

[05:57:46.0000] <matjas>
so it’s more of a compatibility tests than anything else

[05:58:24.0000] <matjas>
as the ES spec allows engines to use Unicode 3 (and doesn’t require the Web ECMAScript exception for identifiers)

[05:59:56.0000] <matjas>
/me looks at [tm]

[06:10:35.0000] <[tm]>
matjas: we shall make a place for js tests

[06:11:08.0000] <[tm]>
but out will have to

[06:11:32.0000] <[tm]>
will have to wait till really next week

[06:12:01.0000] <[tm]>
because the maker OS deep i

[06:12:42.0000] <[tm]>
is deep into his 7th chu-hai

[06:16:01.0000] <jgraham>
matjas: Tack för testerna :)

[06:16:59.0000] <matjas>
jgraham: du är välkommen! more useful ones coming

[06:17:50.0000] <matjas>
(blame Google Translate if that came out wrong)

[06:17:51.0000] <icaaq>
what's up with the swedish? :)

[06:18:14.0000] <matjas>
[tm]: deal

[06:19:23.0000] <hasather>
matjas: "Var så god" would've been correct :) "Välkommen" is "welcome" as in the greeting.

[06:19:29.0000] <jgraham>
icaaq: Varför inte Svenska? (actually I don't really know. Maybe I just feel bad that I know so little Swedish after living here for so long)

[06:19:59.0000] <icaaq>
du bor i sverige? var :)

[06:20:04.0000] <matjas>
/me sets lang=en

[06:21:33.0000] <jgraham>
I Linköping

[06:22:38.0000] <jgraham>
matjas: Sorry, I didn't mean to waken all the Swedes ;)

[06:22:57.0000] <icaaq>
ahh ok. Jag bor i Mora. *back to english*

[06:23:10.0000] <icaaq>
:)

[06:29:31.0000] <[tm]>
jag förstår inte

[06:42:55.0000] <Ms2ger>
[tm], also webgl, please :)

[06:44:05.0000] <[tm]>
hai

[06:47:39.0000] <annevk>
so yeah, I'm no longer the editor of CSSOM View

[06:47:43.0000] <annevk>
but it seems nobody else is either

[06:47:44.0000] <annevk>
http://dvcs.w3.org/hg/csswg/log/1693d8c293a4/cssom-view/Overview.src.html

[06:48:33.0000] <annevk>
:/

[06:50:30.0000] <[tm]>
annevk: hahaha

[06:50:52.0000] <[tm]>
real leadership going on over there

[06:51:19.0000] <[tm]>
great example to all of us of how to run things

[06:52:38.0000] <[tm]>
crazy plus crazy

[06:53:02.0000] <[tm]>
taking out to

[06:53:40.0000] <[tm]>
taking it to a whole nothet

[06:53:56.0000] <[tm]>
nother level

[07:04:08.0000] <[tm]>
ah Julian is such a treasure

[07:06:15.0000] <[tm]>
annevk:  the answer is that if he wants that kind of spec, he can write one

[07:06:39.0000] <[tm]>
but he's not ever going to do that of course

[07:07:03.0000] <annevk>
I doubt that is feasible too

[07:07:27.0000] <[tm]>
far easier to just forever play guardian of purity from the sidelines

[07:07:29.0000] <annevk>
it's kind of hard to say conclusively of course, but I already like my pseudo-code a lot better than RFC 3986 to answer questions about URLs...

[07:07:41.0000] <[tm]>
yup

[07:20:12.0000] <[tm]>
Christ

[07:20:57.0000] <[tm]>
annevk:  this is a really special neurosis

[07:21:04.0000] <[tm]>
that thread

[07:21:50.0000] <[tm]>
dude really needs to find another hobby

[07:48:01.0000] <zcorpan>
annevk: how silly of you not to consider what webkit will do tomorrow

[07:48:13.0000] <annevk>
heh

[07:48:20.0000] <annevk>
my idea was to write down what webkit will do tomorrow

[07:51:55.0000] <annevk>
the "patch the existing spec" tactic has fallen out of favor with me for specs that are not actively maintained

[07:52:54.0000] <annevk>
HTML, Media Queries, Cookies, MIME, DOM, Encoding all showed that to be much harder than starting with a fresh perspective

[07:57:28.0000] <annevk>
matjas: what the hell is MySQL three-byte UTF-8

[07:58:10.0000] <matjas>
annevk: MySQL’s `utf8` collation doesn’t support astral symbols

[07:58:47.0000] <annevk>
matjas: not natively or not at all?

[07:59:14.0000] <matjas>
annevk: not at all

[07:59:33.0000] <annevk>
I wonder how I manage to store those characters in blog posts then...

[07:59:37.0000] <gavinc>
BMP characters only :(

[07:59:48.0000] <matjas>
annevk: wat

[08:00:17.0000] <matjas>
annevk: to get the 𝌆 symbol in http://mathiasbynens.be/notes/javascript-encoding I had to use str_replace()

[08:00:27.0000] <matjas>
annevk: got an example of such a blog post?

[08:00:32.0000] <annevk>
hmm maybe I don't

[08:04:42.0000] <matjas>
annevk: i believe wordpress has a workaround, you might have written something similar

[10:53:52.0000] <jwalden>
/me is bemused to see that some readonly attributes in WebIDL can have setter functions associated with them in the ECMAScript bindings

[11:10:36.0000] <aklein>
smaug____: yt? got a question about an oddity with Firefox MutationObservers and the style attribute...

[11:12:26.0000] <smaug____>
aklein: yes?

[11:15:45.0000] <aklein>
smaug____: it appears that changing non-existent style properties triggers a MutationRecord creation. here's the test that passes in WebKit but fails in Firefox: http://trac.webkit.org/browser/trunk/LayoutTests/fast/mutation/observe-attributes.html#L741

[11:17:38.0000] <aklein>
not a big deal, seems to me, but it's the one test that failed when I ran Aurora through our tests just now

[11:18:11.0000] <smaug____>
aklein: so the problem isn't about mutationobserver

[11:18:20.0000] <smaug____>
just about whether attr should change in that case...

[11:18:49.0000] <smaug____>
"Mutating the CSSStyleDeclaration object must create a style attribute on the element (if there isn't one already) and then change its value to be a value representing the serialized form of the CSSStyleDeclaration object."

[11:19:11.0000] <aklein>
true, it's a lower layer than MutationObserver

[11:19:19.0000] <smaug____>
aklein: so, per spec there should be a mutation

[11:21:08.0000] <aklein>
smaug____: thanks for the spec citation, I think this then buckets into the other set of failures (general behavioral differences). I very much doubt this would be a problem in practice.

[11:21:51.0000] <smaug____>
yeah

[11:27:00.0000] <smaug____>
aklein: in your test, perhaps you shouldn't use shouldBe

[11:27:05.0000] <smaug____>
but something like todo

[11:27:09.0000] <smaug____>
if you have todo

[11:27:44.0000] <smaug____>
so that it clearly indicates what the result should be

[11:36:36.0000] <matjas>
I bet Hixie is gonna ♥ JSON even more once he sees https://www.w3.org/Bugs/Public/show_bug.cgi?id=17490#c2

[11:45:38.0000] <hober>
matjas: yeah, i rejected a patch to json.el that added octal & hex literals and the patch author was incredulous

[12:26:24.0000] <Ms2ger>
So, if you pass 4 arguments to drawImage, what should happen?

[13:46:59.0000] <Hixie>
oh are you effing kidding me

[13:47:05.0000] <Hixie>
how can json not support hex literals

[13:47:19.0000] <Hixie>
especially when it supports hex character escapes!

[13:47:20.0000] <Hixie>
wtf

[13:48:00.0000] <Hixie>
matjas: why the str()? does python not convert integers to strings when concatenated with strings?

[13:49:27.0000] <SimonSapin>
Hixie: no, to avoid surprises like '1'+1 being '11' … or maybe 2

[13:50:06.0000] <Hixie>
so it's a dynamically typed language that doesn't do dynamic conversion? awesome.

[13:50:36.0000] <Hixie>
all the disadvantages of strong typing with none of its advantages

[13:51:21.0000] <SimonSapin>
yes, strong+dynamic

[13:51:36.0000] <SimonSapin>
strong/weak is not the same as dynamic/static

[13:51:52.0000] <Hixie>
yes, i am aware :-)

[13:53:24.0000] <SimonSapin>
right. Don’t feed the troll ;)

[14:04:28.0000] <zewt>
trying to get webgl folks to do the right thing can try one's endurance

[16:12:42.0000] <aklein>
Hixie: the HTML parser doesn't reference DOM4's mutation methods when constructing the tree, does it? from the text it seems to know how to create a tree all on its own.

[16:49:48.0000] <aklein>
Hixie: perhaps next week. in the meantime, http://lists.w3.org/Archives/Public/public-webapps/2012AprJun/1198.html


2012-06-16
[23:25:42.0000] <Yaffle>
hello!

[23:26:27.0000] <Yaffle>
could someone tell me, why event listeners attached with addEventListener trigerred in order of registration?

[23:26:39.0000] <Yaffle>
i believe, reverse order is more good

[23:42:47.0000] <niloy>
Yaffle, how is reverse order good?

[23:43:19.0000] <Yaffle>
more specific events added later

[23:43:42.0000] <Yaffle>
but they should be able to be triggered early

[23:44:19.0000] <Yaffle>
*more specif handlers

[23:47:41.0000] <matjas>
Hixie: JSON doesn’t support “hexadecimal character escapes” (as per ES 5.1), only what the spec calls “Unicode character escapes”. Both use hex digits, though.

[23:52:58.0000] <Yaffle>
http://w3.org/TR/2012/WD-DOM-Level-3-Events-20120614/#event-flow - Next, the implementation must determine the current target's candidate event listeners. This must be the list of all event listeners that have been registered on the current target in their order of registration

[23:53:00.0000] <Yaffle>
why????

[23:53:40.0000] <Yaffle>
the implementation must process all candidate event handlers in order and trigger

[23:53:49.0000] <Yaffle>
why "reverse" word is missed here???

[23:59:22.0000] <Yaffle>
http://stackoverflow.com/questions/11061404/javascript-dom-addeventlistener-trigger-order

[00:05:03.0000] <Yaffle>
flex has "priority" parameter of the addEventListener() method - http://livedocs.adobe.com/flex/3/html/help.html?content=events_09.html

[00:07:16.0000] <Ms2ger>
abarth, the HTML parsing spec long predates the mutation concepts in DOM4 :)

[00:19:31.0000] <Yaffle>
also, flex "addEventListener" has very cool useWeakReference argument

[02:02:32.0000] <Ms2ger>
https://p.twimg.com/Ave6CVfCAAE7oE5.jpg

[02:02:34.0000] <Ms2ger>
/me approves

[06:44:37.0000] <annevk>
MacBook died again

[06:44:48.0000] <annevk>
five year old T60 still up and running

[06:45:11.0000] <annevk>
prolly still opting for a new MacBook of sorts...

[06:47:41.0000] <annevk>
anyone know how to get Ubuntu to actually show distribution updates in the Update Manager?

[06:47:45.0000] <annevk>
I'm on 10.4

[06:47:49.0000] <annevk>
there must be something else by now

[06:58:52.0000] <SimonSapin>
annevk: update-manager -d

[07:05:11.0000] <annevk>
thanks

[07:05:15.0000] <annevk>
that shows me 10.10 is available

[07:05:25.0000] <annevk>
does that mean I'm going to have to do a whole lot of updates?

[07:05:51.0000] <annevk>
ooh

[07:06:00.0000] <annevk>
if I do LTS only it shows 12.04

[07:06:08.0000] <annevk>
that seems somewhat more appropriate

[07:13:08.0000] <zewt>
annevk: heh, people always say that macs are "reliable", but i'm having to use a brand new mac mini for ios stuff at work, and it's the most flaky, crashy system i've used in a long time

[07:13:41.0000] <annevk>
the problem with mine is that I dropped it too often I think

[07:13:50.0000] <annevk>
from the overhead luggage bin and my couch at home

[07:14:16.0000] <zewt>
this thing's like two months old and i spent more time yesterday staring at a spinning circle than doing work

[07:14:20.0000] <annevk>
after doing that a few times the hardware starts to deteriorate it seems

[07:14:25.0000] <zewt>
maybe five minutes of doing something useful to 30 minutes of zzz

[07:14:56.0000] <zewt>
(we're guessing it's a hardware problem but nobody in the office is a "mac person" so we don't really know how to troubleshoot it, heh)

[07:15:00.0000] <annevk>
not sure which new Mac to get

[07:15:17.0000] <annevk>
maybe try the Air unless they release a 13inch Retina soonish

[07:15:30.0000] <zewt>
also, the osx gui is seriously 90s, unpolished as hell

[07:15:42.0000] <annevk>
time for OS update

[07:15:51.0000] <zewt>
it's the latest, i think

[07:16:19.0000] <annevk>
no I mean my Ubuntu installation

[07:16:25.0000] <zewt>
i gave up on ubuntu

[07:16:26.0000] <annevk>
it's definitely not the latest :)

[07:16:32.0000] <zewt>
one too many update -> no-boot

[07:16:55.0000] <zewt>
back to debian

[07:17:05.0000] <annevk>
if this laptop dies too I have a problem

[07:17:12.0000] <Ms2ger>
Heh, Debian

[07:17:47.0000] <zewt>
ubuntu is a bunch of updates at once, which invariably breaks a ton of stuff, debian i just keep it on testing and it's a bunch of small breaks once in a while that i can fix instead of an avalanche

[07:18:36.0000] <gsnedders>
zewt: What isn't polished of the OS X UI? Though maybe it's just gone downhill from 10.6, which is the impression I've got from others. :P

[07:18:37.0000] <zewt>
one ubuntu update gave me a kernel that didn't work on my system; i tried downgrading the kernel to get it to boot, and apparently it also used an init or something that didn't work on anything except bleeding-edge kernels, so i was stuck

[07:19:15.0000] <zewt>
gsnedders: i can't even figure out how to open a menu with the keyboard, heh

[07:19:36.0000] <zewt>
it'll open the first item, but there seems to be no concept of per-menu hotkeys

[07:22:08.0000] <zewt>
it honestly seems like they design by going "okay, how can we make this pointlessly different from windows to irritate windows users" :P

[07:22:48.0000] <gsnedders>
Eh, much of the differences carry over from the original Macintosh, and that wasn't the reason then. :P

[07:24:32.0000] <zewt>
i end up doing most of my editing in a putty window in windows :P

[07:25:34.0000] <zewt>
(unfortunately, even so I'm still editing objc, which is easily the ugliest language on any modern platform)

[07:26:21.0000] <zewt>
(used by a modern platform, I mean)

[08:03:48.0000] <Ms2ger>
Opera++

[08:05:23.0000] <gsnedders>
What have we done now?

[08:06:00.0000] <Philip`>
zewt: "how to troubleshoot it" - I thought the universal troubleshooting instructions were "take it back to an Apple store" and/or "buy a new one"

[08:06:21.0000] <zewt>
pretty much what we're going to do :)

[08:07:08.0000] <Philip`>
I'd usually add a custom step like "hit it a few times and see if it starts working again" before that

[08:07:45.0000] <zewt>
i'm almost as tired of copying the "if __name__ == '__main__':" boilerplate in python as i am of typing document.getElementById

[08:08:08.0000] <Ms2ger>
gsnedders, implemented the spec rather than done the minimal amount of work to pass Philip`'s test

[08:08:20.0000] <gsnedders>
Ms2ger: What spec/test?

[08:08:40.0000] <Ms2ger>
http://w3c-test.org/html/tests/submission/PhilipTaylor/canvas/index.2d.gradient.interpolate.zerosize.html

[08:11:08.0000] <Ms2ger>
/me found a patch to get Gecko up to Chrome's level

[08:14:43.0000] <annevk>
Skype works, Phone app doesn't, brilliant

[08:43:49.0000] <zewt>
the best thing about web apps is how features get removed and you have no choice but to "upgrade"

[08:44:06.0000] <zewt>
used to be you could tell one "ian" from another in gmail message lists by the color, and that's just mysteriously gone now

[08:46:50.0000] <jgraham>
Problem with laptops is that they all suck

[09:17:59.0000] <annevk>
jgraham: yeah, MacBook has been far the best in terms of battery/screen

[09:19:33.0000] <annevk>
jgraham: but kind of sucky in build quality

[09:19:41.0000] <annevk>
or robustness anyway

[09:22:16.0000] <annevk>
oh Lachy

[09:22:37.0000] <annevk>
Lachy: application/form-data needs a spec

[09:24:34.0000] <Lachy>
annevk, what's that used for?

[09:24:52.0000] <annevk>
Lachy: <form enctype=application/form-data> iirc

[09:25:13.0000] <annevk>
Lachy: current spec is vague on the exact bytes that will be transmitted

[09:25:26.0000] <annevk>
Lachy: and there's some issues with non-ASCII file names too

[09:25:32.0000] <Lachy>
where is it currently spec'd?

[09:25:37.0000] <gsnedders>
HTML

[09:25:38.0000] <annevk>
some RFC

[09:25:44.0000] <gsnedders>
HTML has some spec, no?

[09:25:56.0000] <gsnedders>
Or am I forgetting stuff?

[09:26:17.0000] <Lachy>
do you mean multipart/form-data?

[09:26:25.0000] <Lachy>
or application/x-www-form-urlencoded

[09:27:43.0000] <annevk>
former

[09:28:07.0000] <annevk>
gsnedders: yeah for application/x-www-form-urlencoded and some additional rules on top of the RFC for multipart/form-data

[09:28:20.0000] <annevk>
but it's not quite sufficient and quite hacky

[09:51:43.0000] <Hixie>
yeah a real spec for multipart/form-data would be great

[09:51:54.0000] <Hixie>
i don't have the bandwidth to add it to html currently

[09:52:19.0000] <Hixie>
but it's become clear that, as anne has been saying for years, it really needs to be respecced, whether in html or outside it

[10:32:39.0000] <zewt>
sites using focus information to force you to leave their window focused for N seconds before doing something makes me want to disable that whole api

[10:43:15.0000] <zewt>
oh wow, that's some horrible firefox bug, not the site

[10:43:33.0000] <zewt>
firefox appears to throttle background setTimeouts, which makes the timer go really slow if the tab is backgrounded

[10:43:54.0000] <zewt>
guess i should update firefox

[10:44:51.0000] <jgraham>
I think they were trying that as a feature

[10:45:03.0000] <zewt>
definitely not a feature :)

[10:45:03.0000] <jgraham>
(throttling background timeouts)

[10:45:11.0000] <zewt>
(to be sure, it's a shitty site, but still)

[10:45:31.0000] <jgraham>
Yeah, it seems unlikely to work to me

[10:45:54.0000] <jgraham>
Which is sad because there are some advantages (e.g. better battery life)

[10:45:56.0000] <zewt>
throttling would really need to be based on CPU usage of scripts anyway, just trying to throttle timers is way too naive

[10:47:51.0000] <zewt>
the scripts on this site have a function named "loadPopUnder"

[10:47:56.0000] <zewt>
welcome to the future :(

[13:45:48.0000] <Lachy>
Hixie, which sort of things are underspecified for multipart/form-data?

[14:03:10.0000] <Lachy>
so I just read the RFC. It really doesn't seem to define much at all. It just seems to give a brief overview of the format.

[15:28:58.0000] <paul_irish>
jgraham: digging into testharness.js a lot to look at the assertion signatures. what do you think about externalizing the docs? i was going to port the docs to a format like this http://documentup.com/ .. if it sounds good to you

[16:13:02.0000] <paul_irish>
jgraham: http://documentup.com/paulirish/testharness.js more or less

[16:24:00.0000] <annevk>
Lachy: yeah you know, that's what RFCs are like :)

[16:24:21.0000] <annevk>
Lachy: most of them anyway, so if you're looking for even more work ;)

[16:33:24.0000] <Hixie>
Lachy: yeah


2012-06-17
[01:23:34.0000] <kennyluck>
Lachy, for bug-ish Selectors API feedback, would you prefer mailing list or bugzilla?

[01:24:58.0000] <Lachy>
if it's very minor, I can fix it now. If it requires more thought, then mail.

[01:27:35.0000] <Lachy>
kennyluck, ^

[01:29:53.0000] <kennyluck>
Lachy, I'll send a mail then.

[02:00:57.0000] <matjas>
paul_irish: +9001 on externalizing the testharness.js docs

[02:01:39.0000] <matjas>
a separate website isn’t really needed, you could just use GitHub Flavored Markdown™ and something like docdown (https://github.com/jdalton/docdown) to auto-generate it from the .js source (e.g. https://github.com/bestiejs/punycode.js/tree/master/docs#readme)

[02:02:22.0000] <matjas>
so, have you guys seen this Local File Writing API proposal? https://github.com/devongovett/standards/issues/3

[02:02:31.0000] <Ms2ger>
What, another copy of the documentation?

[02:02:43.0000] <Ms2ger>
I can't see how those would ever go out of sync

[02:49:36.0000] <jgraham>
paul_irish: I think that's rather beautiful. What markup format is it using? Can we use that inline and then automatically update the external docs from the inline docs?

[04:16:16.0000] <jgraham>
paul_irish: In general, I think it would be a good idea to make a modern-looking site to cover the W3C testing effort, with documentation from the various frameworks, instructions, stc. I think having all the information split across various wikis and repositories makes it very unapproachable and academic

[04:42:55.0000] <matjas>
Ms2ger, jgraham: that’s exactly how docdown works… it automatically generates it from the source as long as you use JSDoc-style comments

[04:43:33.0000] <Ms2ger>
Can we remove the copy in the readme, then?

[04:45:00.0000] <matjas>
Ms2ger: you could simply replace README.md with docdown’s output

[04:46:14.0000] <matjas>
php -f parse.php README

[04:50:08.0000] <Ms2ger>
Do you have something in python? :)

[04:52:01.0000] <matjas>
http://jonathan.tang.name/code/pyjsdoc

[04:52:10.0000] <matjas>
(haven’t used it)

[06:05:48.0000] <fflorent>
AryehGregor: one thing I did not understand with <a onlyreplace>. The @href attribute targets a full HTML document (with <HTML><HEAD>...) or a partial document ?

[06:06:03.0000] <AryehGregor>
fflorent, the idea was that it targets a full HTML document.

[06:06:10.0000] <AryehGregor>
Note that the idea has been abandoned, though.

[06:06:18.0000] <fflorent>
hmm, ok

[06:06:27.0000] <fflorent>
and why not a partial HTML document ?

[06:06:48.0000] <AryehGregor>
That wouldn't fall back gracefully in browsers that didn't support onlyreplace.

[06:11:40.0000] <fflorent>
AryehGregor: ah, ok. We could imagine a fallback that uses javascript. But I don't know what is the proportion of people having it disabled...

[06:12:00.0000] <AryehGregor>
fflorent, the whole point of onlyreplace is that fallback was supposed to be automatic and transparent.

[06:12:23.0000] <AryehGregor>
Also, the idea was that the URL bar would change like regular, so if the user hit refresh or bookmarked/restored, they would get the page you linked to without onlyreplace.

[06:13:09.0000] <AryehGregor>
If you did <a href="foo.html" onlyreplace> and the user clicked the link in an onlyreplace-supporting browser, if the page wasn't a full document, it would work fine at first.  But then if they refreshed, it would just load foo.html from scratch and that would break.

[06:14:35.0000] <fflorent>
AryehGregor: oh, yes. I thought about a mechanism that would update the URL using hash bangs instead, or query parameters

[06:14:58.0000] <AryehGregor>
That defeats the intended goal of onlyreplace.

[06:15:22.0000] <fflorent>
to be transparent, yes I see know ...

[06:15:30.0000] <fflorent>
now*

[07:43:19.0000] <Ms2ger>
paul_irish, yt?

[10:15:26.0000] <zewt>
it's a bit depressing that even firefox has the broken "link to download goes to html that redirects to the actual download" crap

[10:15:33.0000] <zewt>
(the download site, I mean)

[10:16:01.0000] <zewt>
if I copy-link/wget one more time and end up with an index.html ...

[10:20:11.0000] <zewt>
heh ff13 still hard crashes if i open a webgl context with a 10000x10000 canvas

[10:23:23.0000] <zewt>
agh this is why I put off update firefox, they always break stupid things

[10:23:37.0000] <zewt>
now pages in my session aren't loading at all until i focus them, and i have to track down how to fix that

[10:25:30.0000] <zewt>
guessing browser.sessionstore.restore_on_demand

[10:25:50.0000] <Ms2ger>
That's a feature

[10:26:22.0000] <zewt>
a misfeature, you mean

[10:29:57.0000] <zewt>
agh

[10:29:59.0000] <paul_irish>
Ms2ger: sir.

[10:30:06.0000] <zewt>
and it's smooth scrolling on the mousewheel now, even though i have that turned off system-wide

[10:30:07.0000] <Ms2ger>
Aha!

[10:30:17.0000] <zewt>
/me *more about:config searching*

[10:30:30.0000] <Ms2ger>
/me tries to remember which test he was going to complain about

[10:30:43.0000] <zewt>
guess i should look at the changelogs to see what features I'm getting for having to fix these things

[10:31:15.0000] <paul_irish>
Ms2ger: probably the fontfacerule-constructors one?

[10:31:34.0000] <Ms2ger>
No, I approved that one

[10:31:55.0000] <Ms2ger>
The comment in cssom-fontfacerule, I think

[10:32:08.0000] <paul_irish>
mmmhm

[10:33:14.0000] <Ms2ger>
Also, yay tests!

[10:33:41.0000] <paul_irish>
\o/

[10:34:57.0000] <Ms2ger>
/me keeps his comments about their quality to himself

[10:36:59.0000] <paul_irish>
:) Yeah I'd like to take a more focused approach on part of that spec

[10:37:34.0000] <paul_irish>
Was also talking to smfr, rniwa and others about upstreaming LayoutTests. Going to write up some documentation on how that can work

[10:38:10.0000] <kennyluck>
Is testing the Web forward happening right now or something?

[10:38:35.0000] <paul_irish>
just finished up yesterday. it was friday night and all saturday

[10:40:05.0000] <kennyluck>
paul_irish, oh ok. Thanks. Is there public video or something (so that I can share with other people)?

[10:43:04.0000] <paul_irish>
there was a livestream of the friday night talks but i dont think anything recorded... i'll ask divya to get http://testthewebforward.org/ updated with speaker decks

[11:02:58.0000] <Ms2ger>
paul_irish, so what do you think about doing one in Europe focused more on the DOM?

[11:03:08.0000] <paul_irish>
++

[11:03:29.0000] <paul_irish>
That would be awesome. I think Adobe would enjoy putting that on

[11:04:46.0000] <paul_irish>
I'll bring it up

[11:23:31.0000] <jgraham>
Yeah, that is totally something that we should organise

[11:32:21.0000] <kennyluck>
Ms2ger, yay, I just made another CSSOM bug into a mentored bug → https://bugzilla.mozilla.org/show_bug.cgi?id=765599

[11:32:31.0000] <Ms2ger>
\o/

[11:35:14.0000] <kennyluck>
paul_irish++, for the (promised) livestream :p


2012-06-18
[18:24:12.0000] <zewt>
gar ff9->ff13 lost half of my cookies

[23:17:48.0000] <smaug____>
what on earth is "suppress observers flag"

[23:19:17.0000] <smaug____>
and, fun. inserting multiple script elements using a document fragment isn't specified properly

[23:22:49.0000] <smaug____>
and browsers do it in a different way

[23:22:49.0000] <smaug____>
awasome

[23:22:57.0000] <smaug____>
awesome even

[23:23:12.0000] <smaug____>
Gecko, Presto and WebKit do all different things

[23:30:57.0000] <kennyluck>
awesome

[23:53:26.0000] <annevk>
smaug____: it isn't specified properly or it doesn't work properly?

[23:57:44.0000] <smaug____>
annevk: not spec

[23:57:48.0000] <smaug____>
ed

[23:57:52.0000] <smaug____>
just filing a bug

[23:58:58.0000] <annevk>
the suppress observers flag is needed

[23:59:35.0000] <annevk>
e.g. for records where you want to merge stuff

[00:00:56.0000] <annevk>
although we could perhaps in concept-node-pre-insert use concept-node-replace-all instead

[00:01:05.0000] <annevk>
that would avoid the usage of one instance

[00:10:05.0000] <Ms2ger>
annevk, tests? :)

[00:10:47.0000] <annevk>
hmm?

[00:12:01.0000] <smaug____>
annevk: "and there is" ?

[00:12:23.0000] <smaug____>
ahaa

[00:12:48.0000] <annevk>
right

[00:13:25.0000] <smaug____>
hard to follow...but spec are

[00:13:27.0000] <smaug____>
specs

[00:13:58.0000] <annevk>
feel free to rewrite it

[00:14:08.0000] <annevk>
I couldn't really find a better way

[00:14:23.0000] <smaug____>
I prefer just complaining :)

[00:18:57.0000] <Ms2ger>
Heh

[00:20:49.0000] <annevk>
smaug____: should the scripts execute after the mutationrecord is fired or before?

[00:20:57.0000] <annevk>
smaug____: also, seems like something HTML should define, not DOM

[00:21:55.0000] <smaug____>
s/fired/created/

[00:22:07.0000] <smaug____>
yeah, this is perhaps something for HTML spec

[00:22:50.0000] <smaug____>
annevk: currently the problem is that there is mutation record about the insertion. it contains all the nodes

[00:23:21.0000] <smaug____>
but some script may move those nodes before they are actually inserted to the parent

[00:23:31.0000] <smaug____>
(this is in webkit/presto)

[00:24:11.0000] <smaug____>
and all sorts of fun could happen...spinning the event loop during document fragment insertion

[00:24:19.0000] <annevk>
that's a known bug in WebKit

[00:24:38.0000] <annevk>
DocumentFragment insertion is not atomic

[00:24:46.0000] <annevk>
dunno about Presto actually

[00:25:06.0000] <smaug____>
what spec says it should be atomic?

[00:25:57.0000] <annevk>
well it's not observable from the DOM spec anymore because of the suppress observers flag

[00:25:58.0000] <smaug____>
(I hope I've missed something and that some spec actually *requires* Gecko's behavior )

[00:26:10.0000] <annevk>
but in HTML it should be clarified still I guess for <script>

[00:26:45.0000] <annevk>
or maybe I should add wording to DOM, but I'm not sure how to make that requirement

[00:27:30.0000] <smaug____>
annevk: how does suppress flag help here

[00:27:57.0000] <annevk>
otherwise you would get several removal records for instance

[00:28:11.0000] <annevk>
the DOM should maybe have an "inserted" hook for other specs

[00:28:17.0000] <smaug____>
but there is one record for the df insertion

[00:28:27.0000] <annevk>
yes because of that flag

[00:28:28.0000] <smaug____>
target parent

[00:28:40.0000] <annevk>
target parent?

[00:28:55.0000] <smaug____>
7 is If suppress observers flag is unset, queue a "childList" record with target parent, addedNodes nodes, removedNodes null, nextSibling child, and previousSibling child's previous sibling or parent's last child if child is null.

[00:29:09.0000] <smaug____>
then in 8 script may be executed

[00:29:20.0000] <smaug____>
and it can move some node, which would be in addedNodes

[00:30:23.0000] <smaug____>
if the script moves some node, where should it be after insert algorithm

[00:30:27.0000] <zcorpan_>
http://www.w3.org/mid/CA+c2ei99_Ov8avB-b3qN-ZCyWYJOo7-NMH-gAQQjBGVS_wciLw⊙mgc looks like some swedish auto-correct thing has messed up his email

[00:30:51.0000] <annevk>
smaug____: it's moved location?

[00:31:07.0000] <Ms2ger>
Heh

[00:31:09.0000] <smaug____>
annevk: to elsewhere in the DOM

[00:31:53.0000] <annevk>
I think we should add a step 9 and equivalent steps elsewhere that provide HTML with a hook for "the element(s) have been inserted, do something"

[00:32:23.0000] <annevk>
that would make it explicit when certain actions happen

[00:32:38.0000] <smaug____>
annevk: and step 9 would actually execute the scripts?

[00:32:49.0000] <smaug____>
(that would be spec'ed in HTML)

[00:32:54.0000] <annevk>
yes

[00:33:04.0000] <smaug____>
sounds good to me

[00:34:15.0000] <annevk>
might need that for removal too I guess (e.g. <iframe> removal)

[00:45:18.0000] <zcorpan_>
https://www.w3.org/Bugs/Public/show_bug.cgi?id=17529 seems like fun

[00:48:00.0000] <Von_Davidicus>
Heyo.

[00:51:22.0000] <zcorpan_>
hey

[00:56:59.0000] <Von_Davidicus>
/me is dusting off old skills that may actually be of use, unlike others I've been exercising.

[00:58:09.0000] <Von_Davidicus>
Here's a question:  Which would actually be faster for rendering and lower on bandwidth?  PHP+SQL or XML+XSLT?

[00:59:30.0000] <zcorpan_>
i guess the correct answer to that is "it depends"

[01:00:46.0000] <annevk>
kind of depends on what you end up transmitting over the wire...

[01:01:12.0000] <zcorpan_>
for instance, if the input data is 1GB and the transformed output is 1KB, and you cache the result on the server in the PHP+SQL case...

[01:02:13.0000] <Von_Davidicus>
One thing I liked about XML + XSLT was that the XML files were more "compact", and I'd read somewhere that XSLT files were cached.  (That, and the DB I was using at the time was being hacked to fish sticks and fries)

[01:03:39.0000] <hsivonen>
does anyone know what H.264 video and MP3 audio in MP4 container is in terms of RFC 4281?

[01:04:08.0000] <zcorpan_>
XSLT isn't rendered incrementally, so if you care about low-bandwidth users, doing the transformation on the server would be better (assuming the server isn't slow with doing it and/or you cache the result)

[01:04:44.0000] <zcorpan_>
hsivonen: iirc MP3 doesn't have a codecs="" name

[01:05:07.0000] <hsivonen>
zcorpan_: nice trick for avoiding format proliferation

[01:05:34.0000] <zcorpan_>
but i recall seeing audio/mpeg; codecs="mp3" somewhere

[01:05:50.0000] <hsivonen>
zcorpan_: do happen to know if IE and Chrome support MP3 in MP4 container?

[01:05:50.0000] <zcorpan_>
dunno if anyone implements that name, though

[01:05:57.0000] <zcorpan_>
no idea

[01:06:13.0000] <hsivonen>
If they do, I hope Facebook never uses it

[01:06:36.0000] <Von_Davidicus>
I thought that XSLT was kind of like an image or CSS file--your computer stored it for reuse.

[01:06:45.0000] <Von_Davidicus>
Or does "caching" mean something else?

[01:07:56.0000] <zcorpan_>
Von_Davidicus: it can be cached, but that doesn't help with incremental rendering, since the browser needs the full input data before starting the transformation

[01:08:24.0000] <zcorpan_>
Von_Davidicus: it also doens't help with the user's first load, which is a pretty common case

[01:09:16.0000] <zcorpan_>
(but in the first load case, the data file and the xslt file could be downloaded in parallel, so it might not make much of a difference)

[01:10:13.0000] <Von_Davidicus>
Yeah, that would be the XML file.  *Looks at XSLT stylesheet.*  My biggest is 9.73 kilobytes.  I've made stylesheets bigger than that.

[01:11:26.0000] <hsivonen>
whoa. AMR and H.263 have remarkably reasonable codecs="" names for codecs whose names are defined in the RFC

[01:13:03.0000] <Von_Davidicus>
And besides:  this was for a webcomic--the XSLT was kinda dwarfed by the images.  :)

[01:13:24.0000] <zcorpan_>
hsivonen: heh, http://software.hixie.ch/utilities/js/live-dom-viewer/saved/1589 in chrome says 'probably'

[01:14:01.0000] <zcorpan_>
Von_Davidicus: when can the browser know to fetch the image? before or after the transform?

[01:15:51.0000] <zcorpan_>
(opera and firefox seem to have type-specific codecs="" instead of global which chrome seems to have)

[01:16:42.0000] <Von_Davidicus>
After, I'd say, since the <img> element is set via XSLT.

[01:17:57.0000] <zcorpan_>
hsivonen: codecs=mp3 doesn't say 'probably' in safari or chrome, so it seems that codec name isn't a supported one

[01:18:16.0000] <zcorpan_>
Von_Davidicus: that's bad for perf

[01:20:30.0000] <Von_Davidicus>
perf?

[01:22:04.0000] <zcorpan_>
performance

[01:25:43.0000] <Von_Davidicus>
Well, it got the file name from the XML file, but that's about it.  I dunno why it would be any worse than using PHP to create HTML:  the browser still has to see the IMG tag to get the image.

[01:35:10.0000] <zcorpan_>
the browser can see the img earlier in the HTML case

[01:36:14.0000] <Von_Davidicus>
Ah.  Okay/.

[01:39:37.0000] <hsivonen>
zcorpan_: codecs in Chrome are per-type somehow: http://hsivonen.iki.fi/test/moz/canplaytype.html

[01:39:55.0000] <hsivonen>
zcorpan_: note audio/webm; codecs="vp8"

[01:41:07.0000] <hsivonen>
zcorpan_: video/webm and audio/webm are not like the other type in Chrome

[01:44:01.0000] <hsivonen>
zcorpan_: for supported non-WebM containers, Chrome says "maybe" for bogus codecs

[01:44:05.0000] <hsivonen>
which is not nice

[01:47:09.0000] <zcorpan_>
indeed

[01:47:25.0000] <zcorpan_>
my copy of safari also does that

[01:48:37.0000] <zcorpan_>
shouldn't audio/webm; codecs="vp8" say 'probably'?

[01:48:58.0000] <zcorpan_>
does in opera/firefox

[01:49:57.0000] <hsivonen>
zcorpan_: apparently they don't like having a video codec in <audio>

[01:50:27.0000] <zcorpan_>
audio/ doesn't mean it'll go in <audio>

[01:52:10.0000] <hsivonen>
oh, right

[01:53:51.0000] <hsivonen>
in IE, audio/mpeg is maybe and audio/mpeg; codecs="mp3" is probably

[01:54:38.0000] <zcorpan_>
interesting

[01:55:58.0000] <hsivonen>
do people deploy H.264/MP3/MP4 to Flash Player?

[01:56:21.0000] <hsivonen>
I wonder if Shumway will end up needing that combo

[02:07:50.0000] <Lachy>
annevk, what do I need to do to update selectors api 2 to use the new style exceptions you mentioned on the list?

[02:09:12.0000] <Ms2ger>
s/SYNTAX_ERR/SyntaxError/g

[02:09:31.0000] <Lachy>
what's the difference?

[02:09:54.0000] <annevk>
I think selectors api 1 should be updated too

[02:10:07.0000] <annevk>
or just dropped in favor of 2 :)

[02:10:38.0000] <annevk>
Lachy: it sets the err.name attribute appropriately

[02:11:50.0000] <odinho>
Lachy: And new ones now don't have any numeric "code".

[02:12:02.0000] <odinho>
Lachy: So it's basically not an numeric enum any more.

[02:13:32.0000] <Lachy>
is e.code retained for backwards compatibility with legacy exceptions?

[02:13:51.0000] <Lachy>
Interface DOMError seems to omit the code property entirely.

[02:14:25.0000] <odinho>
Lachy: Yeah. You have e.code on legacy DOMExceptions. And it is still on new ones, only always set to 0 there.

[02:17:22.0000] <Lachy>
ok, but shouldn't the DOMError interface at least define the code attribute or state that it implements the DOMException interface or something? As it is right now, the domcore spec seems to indicate that there is no code property for a DOMError at all.

[02:17:23.0000] <Ms2ger>
annevk, let poor ArtB have his rec ;)

[02:17:47.0000] <Ms2ger>
Lachy, DOMError doesn't have anything to do with exceptions

[02:21:38.0000] <Lachy>
then I don't understand. When a syntax error occurs in selectors API, there object that gets thrown has both a .name and .code property. If I define that it raises a SyntaxError, then by that definition, it shouldn't have a code property.

[02:21:40.0000] <Lachy>
What am I missing?

[02:22:39.0000] <Ms2ger>
Why not?

[02:22:41.0000] <Ms2ger>
http://dvcs.w3.org/hg/domcore/raw-file/tip/Overview.html#exception-domexception

[02:22:50.0000] <Ms2ger>
exception DOMException { ... unsigned short code;

[02:23:28.0000] <odinho>
Lachy: SyntaxError is DOMException, not DOMError.

[02:23:35.0000] <Lachy>
But S

[02:23:44.0000] <odinho>
Lachy: All the exceptions are named *Error.

[02:23:45.0000] <Lachy>
"SyntaxError" is in the table under the DOMError section.

[02:23:55.0000] <Lachy>
and DOMException doesn't have a name property.

[02:24:08.0000] <Ms2ger>
It does

[02:24:17.0000] <Ms2ger>
See the example in the DOMException section

[02:24:18.0000] <Lachy>
where?

[02:24:21.0000] <Ms2ger>
(It's well hidden)

[02:24:22.0000] <Lachy>
See the IDL.

[02:24:30.0000] <Ms2ger>
See WebIDL

[02:25:01.0000] <zcorpan_>
Lachy: the table is under "Error types", not in "Interface DOMError"

[02:25:51.0000] <zcorpan_>
Lachy: saying "throw a SyntaxError exception" means http://dvcs.w3.org/hg/domcore/raw-file/tip/Overview.html#concept-throw

[02:26:05.0000] <Lachy>
"In JavaScript, this exception will have a name property whose value is "TimeoutError"" - why is that name property completely omitted from the IDL?

[02:26:39.0000] <Ms2ger>
It's not on the prototype

[02:26:49.0000] <annevk>
IDL lists attributes, not properties

[02:27:12.0000] <Ms2ger>
Well, "fields", in the case of exceptions

[02:27:18.0000] <annevk>
ah yeah

[02:27:40.0000] <odinho>
I agree with Lachy that's it's mightly confusing though. "type" means "name" by the way. That was what confused me very much before.

[02:28:23.0000] <odinho>
Lachy: So when they say "set its *type* to /type/" then it means set it's   e.name  to /type/.   Because     A type DOMError means a DOMError object whose name attribute is initialized to type.

[02:28:51.0000] <zcorpan_>
Lachy: see step 5 of the second algo in http://dev.w3.org/2006/webapi/WebIDL/#es-throwing-exceptions

[02:28:52.0000] <Lachy>
so then where is it defined that, in javascript, the name property gets set, if it's only mentioned in that one little non-normative example?

[02:31:42.0000] <annevk>
Lachy: step 1 of concept-throw

[02:32:28.0000] <Lachy>
oh, ok. Very confusing.

[02:32:44.0000] <annevk>
if you'd just read it...

[02:34:22.0000] <Lachy>
You could at least put some notes in there referring to WebIDL and mention the name property for JavaScript.

[02:35:21.0000] <odinho>
Lachy: Ms2ger put in this example because I got confused by all the "type" talk --> To throw a "TimeoutError" exception, a user agent would construct a DOMException exception whose type is "TimeoutError" and code exception field value is 23, and actually throw that object as an exception. In JavaScript, this exception will have a name property whose value is "TimeoutError".

[02:35:32.0000] <Lachy>
I did read it. I just didn't make the necessary links to put it all together

[02:36:07.0000] <odinho>
It's easy to read when you know what it's supposed to say :]

[02:36:15.0000] <odinho>
Harder otherwise.

[02:36:43.0000] <hsivonen>
where do I find a list that says what codecs each gst-plugins-* package contains?

[02:36:44.0000] <Lachy>
I mean, clarify that in step 1 about type, to make the link between type and name easier. That example says nothing to clarify where the name property gets set.

[02:37:56.0000] <annevk>
maybe Web IDL should rename type to name

[02:38:10.0000] <zcorpan_>
wfm

[02:38:14.0000] <hsivonen>
http://gstreamer.freedesktop.org/documentation/plugins.html

[02:47:50.0000] <Lachy>
selectors api 2 has now been updated for this.

[02:50:17.0000] <annevk>
Lachy: in Selectors 2 some instances of Element in the IDL should be Element?

[02:50:45.0000] <Lachy>
?

[02:51:00.0000] <annevk>
Lachy: also making '(Element or sequence<Node>)' nullable if it's already optional seems unnecessary

[02:51:15.0000] <annevk>
Lachy: as in "Element?" because they can be null

[02:53:55.0000] <Lachy>
it has to be nullable to handle the case where authors use libraries that just pass whatever value some variable is set to, rather than first checking if its null and omitting it.

[02:54:23.0000] <Lachy>
i.e. document.find(selector, ref) where the ref variable happens to be set to null.

[02:55:17.0000] <annevk>
yeah I think there's a bug on allowing optional arguments to be null already

[02:55:51.0000] <Lachy>
So arey ou saying I should change this "Element   find(DOMString selectors, optional (Element or sequence<Node>)? refNodes);" to "Element   find(DOMString selectors, optional (Element or sequence<Node>) refNodes);"

[02:56:28.0000] <annevk>
I guess I'm mostly saying to make it Element? find...

[02:56:38.0000] <annevk>
maybe leave that other stuff for now

[02:57:14.0000] <Lachy>
oh, for when the function returns null? I probably should.

[02:57:31.0000] <Von_Davidicus>
/me ponders.

[02:57:56.0000] <annevk>
jgraham: does lkpg have spare computers?

[02:58:28.0000] <Von_Davidicus>
Whether 'tis better to simply go the SQL+PHP = HTML route or SQL+PHP = XML+XSLT+XSL+DTD (since I have those files lying about...)

[02:58:31.0000] <annevk>
jgraham: mah never mind, guess I can carry this T60 thing around one last time :)

[02:58:32.0000] <jgraham>
annevk: I have a G4 Mac with broken network under my desk :p

[02:58:40.0000] <annevk>
ooh :)

[02:59:54.0000] <odinho>
annevk: Not happy with your laptop any more?

[02:59:55.0000] <jgraham>
I'm sure we can find you a computer if you need, but it is probably easier if you bring the laptop

[03:00:06.0000] <jgraham>
When do you arrive?

[03:00:38.0000] <Lachy>
done

[03:01:46.0000] <annevk>
odinho: MacBook broke down Friday/Saturday

[03:01:56.0000] <odinho>
annevk: Typical.

[03:02:02.0000] <annevk>
odinho: so now I'm using my somewhat ancient T60

[03:02:31.0000] <annevk>
jgraham: tomorrow afternoon, so I guess I actually only work Wed-Fri

[03:02:36.0000] <odinho>
Well, my main computer at home is still an ancient X60... Though I was cursing *A LOT* yesterday.

[03:02:55.0000] <jgraham>
Isn't Friday a puiblic holiday here?

[03:03:20.0000] <annevk>
teehee less work

[03:11:44.0000] <wodmal>
any opera devs around? annevk?

[03:12:22.0000] <annevk>
?

[03:12:49.0000] <wodmal>
annevk: where can i find some docs on the opera:crossnetworkwarning feature and what it gets triggered by?

[03:12:49.0000] <Ms2ger>
/me sees four talking in the last 15 minutes

[03:20:27.0000] <jgraham>
Ms2ger: Technically QA or whatever it is that annevk does. "IETF botherer" perhaps.

[03:20:48.0000] <jgraham>
wodmal: I am not aware of any documentation

[03:20:56.0000] <Ms2ger>
jgraham, what would that make you? :)

[03:21:30.0000] <jgraham>
Maybe I meant s/or/and/

[03:21:47.0000] <shwetank>
wodmal if you want, i (or some other opera employee here) can connect you with someone who does know about it though on email

[03:24:08.0000] <hsivonen>
zcorpan: In case Opera feels forced to support MP3, too, you might be interested in https://bugzilla.mozilla.org/show_bug.cgi?id=760140#c7

[03:25:10.0000] <doublec>
Or use the javascript decoders that seem to be popping up (mp3 and flac)

[03:26:36.0000] <hsivonen>
doublec: I'm kinda worried that the same bug will show up on Android and B2G if we don't get unit tests for this stuff

[03:27:24.0000] <Sigbjorn>
I was told there were questions regarding Opera's cross network policy?

[03:27:43.0000] <zcorpan>
hsivonen: thanks

[03:28:10.0000] <Ms2ger>
Why don't we rename this channel #opera? :)

[03:28:18.0000] <jgraham>
wodmal: Sigbjorn should be able to help you

[03:28:35.0000] <jgraham>
Ms2ger: Might invite discussion of Wagner

[03:28:55.0000] <Ms2ger>
"What, why can't I apply logic to Wagner?"

[03:28:59.0000] <zcorpan>
Ms2ger: what are you doing here anyway?

[03:29:10.0000] <Ms2ger>
Complaining about Opera bugs

[03:29:15.0000] <zcorpan>
ah

[03:32:44.0000] <doublec>
hsivonen: same bug as what?

[03:33:29.0000] <hsivonen>
doublec: same as https://bugzilla.mozilla.org/show_bug.cgi?id=760140 i.e. canPlayType getting out of sync with playback capability with external codecs

[03:34:03.0000] <doublec>
hsivonen: at the moment we restrict on android and b2g to specific mime typea

[03:34:27.0000] <hsivonen>
doublec: gst did, too, but canPlayType still got out of sync

[03:34:33.0000] <doublec>
hsivonen: although they do actually work to play other types if you serve video/mp4 for example since libstagefright ignores it and sniffs

[03:34:46.0000] <hsivonen>
doublec: :-(

[03:35:06.0000] <hsivonen>
doublec: can't we sniff for file headers and reject stuff we don't want to expose to the Web?

[03:35:36.0000] <doublec>
hsivonen: I'm sure we can do something. I'll raise a bug for it.

[03:35:54.0000] <hsivonen>
doublec: thanks

[03:36:30.0000] <hsivonen>
even Apple restricts codecs for security reasons

[03:36:33.0000] <jgraham>
So… if I have an empty script element (in a document) and append a document fragment to it containing some text nodes representing script followed by a second script that itself contains script content, which order should the two scripts execute in?

[03:36:40.0000] <hsivonen>
(but even then, they support too many codecs, IMO)

[03:36:54.0000] <jgraham>
s/script content/text content representing script/

[03:37:17.0000] <hsivonen>
I'd prefer Apple not to support MPEG-4 Visual Simple Profile, video/quicktime and video/3gpp

[03:37:37.0000] <hsivonen>
those are pure format proliferation

[03:40:17.0000] <hsivonen>
I wonder if MS likes it that the FSF considers bundling the VC++ runtime redistributable GPL-incompatible

[03:40:50.0000] <jgraham>
In fact is the order of inserting multiple scripts simultaneously well defined at all?

[03:41:33.0000] <hsivonen>
jgraham: unclear. I meant to reply to sicking, but I got distracted by this canPlayType review

[03:41:34.0000] <annevk>
jgraham: I'm "Developer" if we're talking intranet technically

[03:42:02.0000] <annevk>
also, good news, shuffling around with the RAM repaired my MacBook

[03:42:25.0000] <jgraham>
hsivonen: I didn't have any context in mind that might involve sicking… is that the mutation observers thread?

[03:42:46.0000] <annevk>
or not

[03:42:48.0000] <hsivonen>
jgraham: no, the document.parse thread

[03:44:03.0000] <jgraham>
Oh right, the part-Swedish mail

[03:45:09.0000] <jgraham>
hsivonen: So you can already do that by constructing an explicit DocumentFragment containing multiple scripts, right?

[03:45:36.0000] <hsivonen>
jgraham: yes

[03:48:07.0000] <jgraham>
(I agree this is something of a corner case currently, but much less so in the document.parse world)

[04:18:18.0000] <wodmal>
Ah - hi Sigbjorn... :)

[04:18:33.0000] <Sigbjorn>
o/

[04:19:25.0000] <wodmal>
What exactly is it that triggers opera:crossnetworkwarning?

[04:19:56.0000] <Sigbjorn>
automatic attempts to access an innermore network

[04:20:14.0000] <Sigbjorn>
e.g. an internet page attempting to iframe an intranet page

[04:20:42.0000] <Sigbjorn>
"automatic", as opposed to "manual click"

[04:21:45.0000] <Sigbjorn>
The rationale being that a lot of intranet (or localhost) pages are protected by a same-network-only protection, and we don't want to let the browser be an unwitting proxy for attacks on such pages

[04:21:46.0000] <wodmal>
Sigbjorn: why would it have been triggered by gmail, then?

[04:21:51.0000] <Philip`>
/me annoyingly gets the crossnetworkwarning whenever connecting via BT FON (free-to-customers wireless thing in the UK), plus certificate warnings, when it does the redirect to the "please enter username and password" page after you first connect

[04:22:03.0000] <Philip`>
(Firefox doesn't seem to give any warnings at all)

[04:22:42.0000] <Sigbjorn>
wodmal: no idea, I guess gmail, or an email in gmail, had an iframe/image/resource pointing to an intranet resource

[04:23:27.0000] <wodmal>
Sigbjorn: meaning 192.168.x.x or 10.x.x.x?

[04:23:32.0000] <Sigbjorn>
Philip`: some wifi proxies do mess with intranet/internet settings - there is an override on the page itself, and a global switch to turn the feature off

[04:23:41.0000] <Sigbjorn>
Philip`: Opera is the only browser with this protection

[04:24:06.0000] <Sigbjorn>
wodmal: yes, there are 4 IPv4 local ranges, including localhost, iirc

[04:25:09.0000] <Sigbjorn>
Philip`: the reason being that you are trying to access an internet page, e.g. gmail.com, and that page automatically redirects you to an intranet page - that is indistinguishable from an attack

[04:25:44.0000] <Sigbjorn>
that page might have been a hidden iframe inside another page, attempting to abuse a local server of yours

[04:25:50.0000] <wodmal>
or 127.0.0.1....?  <---this would make more sense to me as something that might have for w/e reason been referenced by gmail.  Although I do have this weird wifi-proxy sort-of-thing box which i don't really know too much about that my friend is developing... so that could explain it.  afaik(new) though, it was fully transparent.

[04:26:28.0000] <Sigbjorn>
wodmal: there are three networks, localhost, intranet, internet - access from inside out is allowed, but not the other way around

[04:26:33.0000] <wodmal>
Sigbjorn: but why is the english-prose prompt on that warning page something to the effect of "this site is trying to access data which is stored __on your computer__" then?

[04:26:46.0000] <wodmal>
Sigbjorn: ah, that makes sense.

[04:26:52.0000] <Sigbjorn>
"your computer" means "localhost"

[04:28:04.0000] <Sigbjorn>
Philip`: the reason for the certificate warnings are that you are attempting to load a secure page, and your ISP is hijacking the connection, serving you another page under that domain instead (presumably just a redirect page, so you will never actually see it)

[04:28:30.0000] <Sigbjorn>
though instead of it being a redirect, it might as well have been a full fledged page, pretending to be your email provider/bank/etc

[04:31:25.0000] <wodmal>
Sigbjorn: what's the "attempting to access data on your comp" part all about?

[04:32:12.0000] <Philip`>
Sigbjorn: Out of interest, is there a way the ISP could implement its wifi proxy stuff so that it's not indistinguishable from real attacks and doesn't trigger warnings?

[04:32:15.0000] <Sigbjorn>
E.g. after proxy rewriting, gmail will now have a request for an image from 127.0.0.1/img/404.png

[04:32:38.0000] <Sigbjorn>
that would qualify as "Gmail is trying to access data from your comp"

[04:33:01.0000] <Sigbjorn>
Of course, much worse, was if gmail loaded an iframe as the result of a POST

[04:33:44.0000] <wodmal>
Sigbjorn: what type of "proxy rewriting"?

[04:34:22.0000] <Sigbjorn>
wodmal: you tell me, you said you had a wifi-proxy sort-of-thing

[04:34:50.0000] <Sigbjorn>
Philip`: for http, no problem, just redirect. For the internet->intranet warning, put their signup page on an internet page. For https, not possible, by the very design of https

[04:35:14.0000] <Philip`>
/me likes the FON thing since you can sign up for a cheap internet connection with a 10GB/month usage limit, and then connect to your own wireless router over the FON network and get lower bandwidth (clamped to ~3Mbit/s) but it doesn't count towards your usage limit so you can download as much as you want

[04:35:27.0000] <Sigbjorn>
if you explicitly say you want https, your browser will complain unless the returned value is signed by the proper certificate - which you ISP cannot do

[04:36:21.0000] <Sigbjorn>
moving discussion to #opera btw

[05:00:27.0000] <annevk>
back on my MacBook, with 4GiB RAM less

[05:00:52.0000] <annevk>
the logic board is somewhat broken most likely, and because I dropped it a few times with visible damage, the way expensive Apple Care does not care

[05:11:38.0000] <zewt>
oh god please tell me you aren't one of those people who unironically types "gib"

[05:18:09.0000] <Ms2ger>
GiB*

[05:18:41.0000] <zewt>
words are not case-sensitive

[05:20:17.0000] <jgraham>
Not only is that untrue, it's irrelevant since GiB isn't a word.

[05:20:44.0000] <jgraham>
(I'm pretty sure there are cases where distinguishing proper nouns makes a difference)

[05:22:18.0000] <Philip`>
zewt: Case is quite important if you think you're getting a gigabyte of network traffic but it's actually a gigabit

[05:22:20.0000] <zewt>
not in any serious way; the worst is people who try to pretend "kb" vs. "kB" is a serious way to distinguish units

[05:23:41.0000] <Philip`>
(Even worse if it's actually 10^9 bits)

[05:23:44.0000] <zewt>
(if it needs disambiguation, you say kbyte or kbit; if you assume "kb" is in bits, then you're going to be wrong more often than not)

[05:24:17.0000] <jgraham>
Using case to distinguish units is rather common; think mJ vs MJ

[05:25:53.0000] <AryehGregor>
I was trying to think of an example that would come up in everyday life.  I guess mJ vs. MJ is the most plausible.

[05:26:03.0000] <Philip`>
Think of data measured in LOC (lines of code) vs LoC (Libraries of Congress)

[05:26:49.0000] <zewt>
(the real objection is to a committee thinking they can retroactively modify the language, and tell us "gb doesn't mean 2^30 anymore, use this ludicrous-sounding word we invented instead"; sorry, no)

[05:27:27.0000] <zewt>
so I cringe at the rare times somebody actually does that, heh

[05:27:35.0000] <Philip`>
(Yeah, who wants standards committees that try to fix ambiguities)

[05:27:53.0000] <AryehGregor>
Haven't hard disk manufacturers been successfully sued for advertising capacities in powers of ten instead of two?

[05:28:01.0000] <zewt>
never heard of that

[05:28:20.0000] <AryehGregor>
http://www.crn.com/news/channel-programs/189602434/western-digital-settles-hard-drive-capacity-lawsuit.htm;jsessionid=H2bWDbyY+895tVjM4e54vQ**.ecappj03

[05:28:25.0000] <AryehGregor>
That says it was settled, mind.

[05:28:25.0000] <zewt>
i'd take it as a small victory against misleading advertising if so :)

[05:28:32.0000] <Philip`>
They always seem to add footnotes "* 1 GB = 1,000,000,000 bytes" on their packaging and marketing materials, I think

[05:28:35.0000] <annevk>
zewt: what's up with your deity?

[05:28:54.0000] <Philip`>
At least that's less misleading than measuring hard disk capacity in numbers of MP3

[05:28:57.0000] <zewt>
haha

[05:29:06.0000] <zewt>
what about advertising bandwidth in number of modems

[05:29:19.0000] <annevk>
heh

[05:29:50.0000] <jgraham>
Isn't bandwidth measured in copyright infringments / second?

[05:30:19.0000] <zewt>
if you're sending haikus or something you could inflate that number pretty effectively

[05:30:24.0000] <annevk>
zewt: kb might be bytes, but kb/s typically isn't

[05:30:30.0000] <AryehGregor>
That's not a useful type of measurement, because you can commit copyright infringement by copying like five notes in some cases.

[05:30:44.0000] <AryehGregor>
/me usually sees "kbps"

[05:31:37.0000] <Philip`>
To pick a completely arbitrary example, http://www.wdc.com/en/products/products.aspx?id=260#tab3 still has a table with "8 TB / songs: up to 2,000,000" etc

[05:32:11.0000] <Philip`>
Surely someone in the company must have realised that it's no longer a useful metric

[05:32:12.0000] <AryehGregor>
Is 4 KB a reasonable amount for a song?

[05:32:29.0000] <zewt>
annevk: it says kbytes to me--"kbit" or occasionally kbps for bits

[05:32:32.0000] <Philip`>
AryehGregor: No, but they're saying it's 4MB each

[05:32:41.0000] <zewt>
Philip`: what about MIDI?

[05:32:46.0000] <AryehGregor>
Oh, I see.

[05:32:47.0000] <Philip`>
AryehGregor: (4 minutes at 128kb/s)

[05:33:16.0000] <annevk>
anyway, given this long discussion I'll make sure to use GiB going forward for maximum #whatwg productivity

[05:33:46.0000] <zewt>
it's 7:30am here, waking up takes priority over productivity :)

[05:34:10.0000] <annevk>
I love me some gibibytes

[05:34:22.0000] <zewt>
i'm still waiting to see somebody say that out loud with a straight face

[05:34:23.0000] <Philip`>
zewt: MIDI is too hard to pirate, since you can't rip it from CDs, so it's not a use case for ginormous hard disks

[05:35:29.0000] <Philip`>
(Even when they're reporting capacities of 40,000 songs, presumably they don't really expect their customers to have bought every one of them)

[05:35:34.0000] <Ms2ger>
Hmm

[05:36:11.0000] <zcorpan>
annevk: now you need to get "gibibytes" in your next talk and make sure you have a straight face

[05:36:48.0000] <zewt>
zcorpan: in that situation it'll see whether the viewers keep a straight face

[05:36:59.0000] <annevk>
it will be my new life goal

[05:37:02.0000] <Philip`>
Pronounce it "guy buy bytes" for extra fun

[05:37:21.0000] <zewt>
they should have gone with "gigglybytes"

[05:37:27.0000] <zewt>
i'd say that

[05:38:22.0000] <annevk>
I like how Wikipedia says gigabyte is only used in some contexts to mean gibibyte

[05:38:22.0000] <zewt>
(straight face not guaranteed)

[05:39:40.0000] <Philip`>
/me reads the WD disk page more and sees "As used for storage capacity, one megabyte (MB) = one million bytes [...] As used for buffer or cache, one megabyte (MB) = 1,048,576 bytes", so they're not even being consistent within a single product

[05:41:04.0000] <zewt>
next thing, display manufacturers will market their displays in the size the pixels would be if you laid them in a straight line

[05:41:19.0000] <zewt>
try our new one mile tv

[05:42:39.0000] <zcorpan>
zewt: that'd be a pretty sucky tv

[05:42:54.0000] <zcorpan>
or small

[05:43:00.0000] <zcorpan>
or both

[05:45:12.0000] <zewt>
my TV is 60" wide with 1080 rows of pixels = 64800 inches = 1.02 miles, unless my early morning math is broken

[05:47:22.0000] <zcorpan>
ah, you're right. seems my math was broken, probably somewhere in my pointless conversion to ISO units

[05:48:00.0000] <Philip`>
Even counting pixels is hard now that people are doing weird subpixel tricks (like on PenTile displays) :-(

[05:48:04.0000] <zcorpan>
except, isn't your TV 60" in diameter?

[05:49:02.0000] <hasather>
zcorpan: zewt: most likely diagonally

[05:49:33.0000] <zcorpan>
hasather: uh, that's what i meant, yeah

[05:49:42.0000] <zewt>
no, across

[05:49:54.0000] <zewt>
(sold as a '65"' tv)

[05:50:05.0000] <hasather>
I see

[05:50:24.0000] <zcorpan>
/me hasn't seen 65" in ads

[05:50:43.0000] <Philip`>
I wish we could switch from square pixels to hexagonal pixels

[05:51:13.0000] <zewt>
(actually that's including the bezel, which is about 4")

[05:54:04.0000] <annevk>
that's a big tv

[05:54:43.0000] <jgraham>
Bigger (in width) that quite a few people (in height)

[05:56:12.0000] <zcorpan>
jgraham: maybe that's how they'll market TVs next

[05:57:04.0000] <jgraham>
"If this falls on you, not even your feet will stick out"?

[05:57:05.0000] <zewt>
jgraham: infants, maybe

[06:57:25.0000] <AryehGregor>
Shepherd needs: 1) E-mail notification.  2) A way to comment and respond on multiple files at once.

[07:05:18.0000] <annevk>
Ms2ger: yo yo

[07:05:30.0000] <annevk>
Ms2ger: so something coming by about that XHR constructor dictionary

[07:05:37.0000] <annevk>
s/so/saw/ doh

[07:06:22.0000] <Ms2ger>
Ah, sicking filed it, good

[07:06:49.0000] <annevk>
Ms2ger: the problem is that you restrict what we can do with it in web context the moment you support that

[07:07:23.0000] <Ms2ger>
We don't expose anything to content atm

[07:07:38.0000] <annevk>
kk

[07:07:49.0000] <annevk>
not sure it's going to be a problem either way

[07:08:25.0000] <Ms2ger>
Also, it's prefixed

[07:09:21.0000] <annevk>
the constructor?

[07:09:29.0000] <Ms2ger>
No, the properties

[07:10:07.0000] <annevk>
yeah, but that does not necessarily help

[07:10:23.0000] <annevk>
if we e.g. change parts of the model based on that argument being present

[07:11:11.0000] <Ms2ger>
What I'm trying to say is that you don't need to worry about us :)

[07:11:52.0000] <annevk>
i'll say kk again then

[07:13:58.0000] <annevk>
sweet, document.documentURI is readonly in WebKit too now

[07:14:10.0000] <Ms2ger>
/me goes back to fixing xhr.responseType

[07:57:59.0000] <gsnedders>
/me fixes Ms2ger 

[08:00:34.0000] <Ms2ger>
Do I need to reboot?

[08:01:46.0000] <jgraham>
Ms2ger: I think you misspelt "I'm sorry I can't let you do that, Dave"

[08:44:07.0000] <hsivonen>
I think I found a serious bug in IE10. How do I report it so that 1) I don't have to click through legalese that would be unwise to click through for someone who develops a competing products and 2) someone actually pays attention?

[08:47:00.0000] <jgraham>
Make friends with someone on the IE team?

[08:47:16.0000] <Ms2ger>
Push them into a lake?

[08:47:18.0000] <Philip`>
I like it when web pages say "SQL injection or Scripting Attack Found! Loading Halted!" when you perfectly innocently fill in a form that might lead to you giving lots of money to the people running the site

[08:47:53.0000] <Ms2ger>
Or is that annevk's privilege...

[08:48:05.0000] <Philip`>
/me wonders if it provides any real value in stopping actual attacks, to balance out how it drives potential customers away

[08:48:19.0000] <annevk>
Ms2ger: it's Opera's

[08:48:25.0000] <annevk>
Ms2ger: because Opera did it first

[08:48:31.0000] <Ms2ger>
Well played

[08:49:02.0000] <Ms2ger>
Hey, you

[08:49:05.0000] <Ms2ger>
CSSOM sucks

[09:02:21.0000] <hsivonen>
The IE bug I found is so bad that ACPI shutdown doesn't respond. Task Manager window opened and then doesn't respond.

[09:02:44.0000] <hsivonen>
Surely the scheduler in Windows 8 shouldn't let IE eat up resources this crazily

[09:02:59.0000] <hsivonen>
now over a minute late, ACPI shutdown was honored

[09:03:11.0000] <hsivonen>
I ended up DMing an IE team member on Twitter

[10:29:19.0000] <annevk>
Ms2ger: well yeah...

[10:29:23.0000] <annevk>
Ms2ger: want to fix it?

[10:29:39.0000] <Ms2ger>
Me, fix something?

[10:29:42.0000] <annevk>
Ms2ger: don't think anyone else has yet, at least last time I checked CSSOM View no edits were made

[10:29:47.0000] <annevk>
Ms2ger: good point

[10:29:54.0000] <Ms2ger>
Oh, CSSOM

[10:30:05.0000] <Ms2ger>
I might end up doing it, I guess

[10:30:09.0000] <Ms2ger>
Otoh, CSSWG

[10:30:20.0000] <annevk>
but you're a rogue entity

[10:31:38.0000] <Ms2ger>
I'll have to think if I should feel offended by that

[10:46:06.0000] <jwalden>
gsnedders: fwiw, I got pointed at the __proto__ disaster that is https://mail.mozilla.org/pipermail/es-discuss/2012-May/022834.html and will likely send mail about which of data/accessor/[[Get]]-modification I'd prefer when implementing, soon

[10:46:29.0000] <jwalden>
trying to shortcut on whether there's been any followup on that since then before throwing in my two cents, tho

[10:49:00.0000] <annevk>
Ms2ger: it's a feature, but please do set up some kind of kickstarter project for extra RAM so you can reply faster and work on the CSSOM

[11:00:08.0000] <gsnedders>
jwalden: Which would you rather?

[11:00:29.0000] <Ms2ger>
/me eats strawberries instead

[11:00:51.0000] <gsnedders>
(I don't like the current accessor proposal as that means having context for each object)

[11:00:56.0000] <jwalden>
gsnedders: well, nothing; but assuming arguendo something must be in place, I think pretty clearly an accessor

[11:01:12.0000] <jwalden>
magic properties impose far more cost on anything at all that looks up properties

[11:01:31.0000] <jwalden>
accessor shoves all the complexity into one narrow method

[11:01:54.0000] <jwalden>
that can be as awful as needed, but at least it contains the contagion

[11:02:03.0000] <jwalden>
whereas now, __proto__ pervades many areas

[11:02:24.0000] <gsnedders>
jwalden: ^^that.

[11:02:28.0000] <gsnedders>
A thousand times that.

[11:02:59.0000] <gsnedders>
/me is basically sitting on an accessor impl waiting for this whole, endless debate to be hashed out

[11:04:19.0000] <gsnedders>
If we're so worried about the setter function, just poision Object.getPropertyDescriptor.

[11:04:24.0000] <Ms2ger>
gsnedders, ship it

[11:04:38.0000] <Ms2ger>
You're at Opera, you're supposed to do it first

[11:04:45.0000] <gsnedders>
There, we still have a clean impl, and the security risk of having the function is gone.

[11:05:20.0000] <gsnedders>
Ms2ger: Okay, the only reason why it wasn't shipped in 12 was because I had to back it out finding a horrible bug I'd introduced :P

[11:06:16.0000] <gsnedders>
jwalden: You'll have to address the SES concerns, though, given that's where all the arguments over __proto__ go around… :\

[11:06:42.0000] <jwalden>
gsnedders: was making the accessor property configurable, ergo deletable, not enough?

[11:07:01.0000] <jwalden>
/me doesn't have time to read es-discuss regularly enough to follow all this stuff :-\

[11:07:10.0000] <Ms2ger>
/me wonders what SES is

[11:07:19.0000] <jwalden>
which unfortunately tends to put me in damage-control mode more often than not in reaction

[11:07:19.0000] <Ms2ger>
A Scandinavian airline?

[11:07:23.0000] <jwalden>
secure ES

[11:07:30.0000] <jwalden>
think caja sandboxlike stuff

[11:07:51.0000] <Ms2ger>
"secure"? I guess it must be good, then

[11:07:53.0000] <jwalden>
I don't know what __proto__ specifically entails for the idea in its latest iteration

[11:08:22.0000] <jwalden>
well, the idea is you close off bad functionality first thing, then you have something that's contained in what it can do

[11:08:26.0000] <jwalden>
it's crazy

[11:08:32.0000] <jwalden>
but it actually is kind of workable

[11:08:34.0000] <gsnedders>
jwalden: var f = document.createElement("iframe"); var s = Object.getPropertyDescriptor(f.contextWindow.Object.prototype.__proto__).set;

[11:09:04.0000] <gsnedders>
jwalden: If that function can mutate __proto__ in the local global, then deleting it gained nothing.

[11:09:39.0000] <gsnedders>
I don't like the proposal to make the function check what context it's dealing with, as that means having context for all objects.

[11:10:05.0000] <Ms2ger>
Shrug, we have that ;)

[11:10:15.0000] <jwalden>
gsnedders: wait, isn't allowing untrusted code to create a new window that's not secured kind of wrong already?

[11:10:51.0000] <jwalden>
gsnedders: I don't think you need context to make that work, actually; you just need a way to track from an object back to the global object where it was created

[11:10:54.0000] <gsnedders>
jwalden: I believe the theory is that it can't mutate anything in the current window, and hence safe

[11:11:03.0000] <gsnedders>
jwalden: Well, yes, but we don't have that :)

[11:11:33.0000] <jwalden>
gsnedders: how do you make stuff like new otherWindow.Array() return the right thing?

[11:12:33.0000] <gsnedders>
jwalden: In terms of what its prototype is?

[11:13:05.0000] <gsnedders>
jwalden: Functions store that; most objects don't.

[11:13:12.0000] <jwalden>
oh, hm

[11:13:45.0000] <jwalden>
I guess we unnecessarily had the find-associated-global thing from the start, didn't we

[11:13:59.0000] <gsnedders>
I'd rather just poision .set, on the whole.

[11:14:33.0000] <jwalden>
that seems probably doable/reasonable

[11:14:55.0000] <gsnedders>
It's not that elegant, but it doesn't leak any new capabilities (which is brendan's big concern), and it results in __proto__ being an accessor pair and one special case.

[11:15:05.0000] <gsnedders>
Then need to decide to object literal behaviour.

[11:15:32.0000] <jwalden>
object literals at least are syntactically distinguishable, thankfully

[11:15:33.0000] <gsnedders>
Compared with the number of special-cases it is now…

[11:24:39.0000] <Ms2ger>
annevk, congratulations on http://www.w3.org/TR/2012/REC-css3-mediaqueries-20120619/ ;)

[11:25:29.0000] <annevk>
heh

[11:28:20.0000] <annevk>
is there a wiki page describing IETF failures already?

[11:28:28.0000] <annevk>
I'd like to nominate http://lists.w3.org/Archives/Public/www-archive/2012Jun/0044.html

[11:28:35.0000] <annevk>
I'll make one now

[11:30:44.0000] <annevk>
http://wiki.whatwg.org/wiki/IETF

[11:31:49.0000] <rniwa>
annevk: it'

[11:31:50.0000] <rniwa>
s

[11:32:15.0000] <rniwa>
 funny how some people don't know how bad IETF is

[11:35:45.0000] <MikeSmith>
rniwa: IETF is just people

[11:35:58.0000] <rniwa>
MikeSmith: sure.

[11:36:09.0000] <rniwa>
MikeSmith: there are a lot of people with good intentions just like W3C

[11:36:18.0000] <MikeSmith>
yeah

[11:36:28.0000] <annevk>
added some more

[11:36:30.0000] <rniwa>
MikeSmith: the problem is that there are handful of people who LOVE beaurocracy and adding policies

[11:36:37.0000] <Ms2ger>
There are a lot of people with good intentions at the W3C?

[11:36:40.0000] <Ms2ger>
</troll>

[11:36:40.0000] <MikeSmith>
granted, a number of them have their heads way up their asses as a far as browser technologies goe

[11:36:40.0000] <annevk>
the problem is rules

[11:36:47.0000] <annevk>
once you have too much of those

[11:36:51.0000] <annevk>
changing anything is a burden

[11:36:59.0000] <rniwa>
annevk: yup.

[11:37:22.0000] <rniwa>
any organization is bounded by the number of rules and policies they have.

[11:37:33.0000] <MikeSmith>
rniwa: not just policy, they have this idea of architectural purity which doesn't match implementation realities

[11:37:47.0000] <Ms2ger>
MikeSmith, sounds like the W3C ;)

[11:38:08.0000] <rniwa>
MikeSmith: that too is policies and beaurocracy to some extent.

[11:38:12.0000] <annevk>
WHATWG only requires people to not be an ass

[11:38:27.0000] <MikeSmith>
Ms2ger: I don't think anybody ever accused the DOM of architectural purity :)

[11:38:33.0000] <annevk>
everything else goes

[11:38:49.0000] <annevk>
MikeSmith: architecture astronouts

[11:38:56.0000] <MikeSmith>
yup

[11:39:03.0000] <annevk>
MikeSmith: and too much Java club

[11:40:00.0000] <MikeSmith>
we are by the way about to get some more love and attention about the web+ scheme

[11:40:14.0000] <annevk>
from the IETF?

[11:40:23.0000] <MikeSmith>
from the usual suspects

[11:40:34.0000] <annevk>
ask them if skype: or spotify: is on a registry yet

[11:40:40.0000] <annevk>
or magnet:

[11:40:45.0000] <MikeSmith>
heh

[11:40:58.0000] <MikeSmith>
well

[11:41:02.0000] <rniwa>
what we need to do in near future is kick out all those people who just like to create rules

[11:41:05.0000] <rniwa>
from both W3C and IETF

[11:41:07.0000] <MikeSmith>
we always merit special attentions

[11:41:18.0000] <rniwa>
then both of those organizations will become much more productive.

[11:41:23.0000] <MikeSmith>
rniwa: please god yes

[11:41:26.0000] <annevk>
MikeSmith: sure sure, we break the rules :)

[11:41:52.0000] <MikeSmith>
rniwa: if you can find a way to make that happen, you will be my hero forever

[11:42:30.0000] <MikeSmith>
rniwa: they don't necessarily want to create new re

[11:42:34.0000] <rniwa>
of course, people are kicked out immediately if they argued that we should create a policy/rule on how to kick people out.

[11:42:35.0000] <MikeSmith>
*new rules

[11:42:42.0000] <MikeSmith>
he

[11:43:07.0000] <rniwa>
MikeSmith: i guess. they have done enough damanges

[11:43:14.0000] <MikeSmith>
rniwa: it's more like, they want to protect the entirely arbitrary set of rules they already created

[11:43:17.0000] <rniwa>
they just want to maintain their collateral damages they have already caused :\

[11:43:25.0000] <rniwa>
MikeSmith: yeah.

[11:43:32.0000] <rniwa>
they're on the defense mode now.

[11:43:45.0000] <rniwa>
because new rules are created as a result of existing rules at this point.

[11:43:48.0000] <annevk>
W3C too

[11:43:50.0000] <MikeSmith>
arbitrary rules wrapped in the disguise of sound "architecture"

[11:43:55.0000] <rniwa>
MikeSmith: yup...

[11:44:00.0000] <annevk>
"oh you want change?" "did you talk to the AC yet?"

[11:44:02.0000] <annevk>
ooh

[11:44:06.0000] <annevk>
that's actually a nice meme

[11:44:07.0000] <rniwa>
i sometimes look at longdesc discussion on html WG

[11:44:13.0000] <Ms2ger>
Why?

[11:44:17.0000] <Ms2ger>
Do you hate yourself?

[11:44:33.0000] <rniwa>
and realize i don't understand most of stuff they're talking about

[11:44:51.0000] <rniwa>
like 90% of their discussion is about chair doing X while, requesting to reopen Y for reason Z

[11:45:03.0000] <rniwa>
s/ while//

[11:45:37.0000] <rniwa>
and all that non-sensical beaurocratic cr*p no technical person would care about.

[11:45:40.0000] <MikeSmith>
in the late 1960s, the counter-culture movement had this saying, "Don't trust anybody under 30". An analogy is, "Don't trust anybody who's never worked in a browser product-development team."

[11:46:09.0000] <rniwa>
MikeSmith: that might be not a sufficient criteria

[11:46:17.0000] <Ms2ger>
MikeSmith, I was thinking that includes annevk, but it doesn't

[11:46:19.0000] <MikeSmith>
it's a start

[11:46:23.0000] <rniwa>
MikeSmith: there appears to be a lot of beaurocratic people form browser vendors as wel.

[11:46:26.0000] <Ms2ger>
He got a patch into Gecko at some point :)

[11:47:02.0000] <MikeSmith>
heh

[11:47:26.0000] <gsnedders>
I write PPC machine code, if you believe our VCS. I don't.

[11:47:52.0000] <rniwa>
anyways, we need to make it happen.

[11:48:05.0000] <rniwa>
beaurocacy is destroying our future :(

[11:48:32.0000] <MikeSmith>
rniwa: you are already making it happen. the other stuff is noise

[11:48:50.0000] <MikeSmith>
it's an annoyance but it's not blocking you from getting work done in the end

[11:49:06.0000] <Ms2ger>
Unless you let it

[11:49:18.0000] <MikeSmith>
but it would be nice to sideline it more

[11:49:55.0000] <MikeSmith>
as far as W3C, I think in the webapps WG, the noise is minimal, relatively

[11:49:57.0000] <rniwa>
MikeSmith: not sure. i think a lot of beaurocratic stuff is scarying people away

[11:50:10.0000] <rniwa>
MikeSmith: yeah, web apps is working relatively well.

[11:50:12.0000] <MikeSmith>
OK, point taken, there

[11:51:58.0000] <annevk>
WebApps meetings are quite bad, but then HTML is so much worse...

[11:52:06.0000] <MikeSmith>
yeah

[11:52:09.0000] <MikeSmith>
it's all relative

[11:52:15.0000] <MikeSmith>
so one lesson I guess is, for API work at least, do it in places where the loonies and IETF architectural astronauts have the least amount of process influence

[11:52:28.0000] <Ms2ger>
"meetings"

[11:52:41.0000] <annevk>
http://w3cmemes.tumblr.com/post/25376892373/changing-the-w3c

[11:52:59.0000] <MikeSmith>
heh

[12:16:23.0000] <tantek>
annevk - is it convince the Advisory Committee or Advisory Board?

[12:17:09.0000] <tantek>
rules are just code that run on people. perhaps they belong on github.

[12:18:51.0000] <Ms2ger>
bitbucket

[12:22:30.0000] <annevk>
tantek: AC makes the decisions on WG creation, copyright, what the W3C works on in general, etc.

[12:23:03.0000] <tantek>
AC votes - right. And results are either secret or member-only?

[12:23:33.0000] <annevk>
tantek: I believe what the AB does is subject to AC approval too, but if the AB advises something the AC would probably accept it

[12:23:58.0000] <annevk>
tantek: pretty much everything the AC does is Member-only

[12:35:09.0000] <annevk>
hober: w3cmemes is not tweeting?

[12:46:19.0000] <kennyluck>
Do people here seriously think changing rules is useful? I don't see how chaining rules at the W3C would give as an active editor of CSSOM.

[12:47:02.0000] <Ms2ger>
You realize why we don't have one right now, right? :)

[12:47:47.0000] <kennyluck>
Ms2ger, I have my theory.

[12:57:16.0000] <tantek>
kennyluck, changing rules can be useful just like changing code can be useful. both can also lead to bloat / featuritis.

[12:57:37.0000] <tantek>
also, CSSOM is both difficult and relatively thankless to edit.

[12:58:04.0000] <annevk>
CSSOM would have been easier for me to maintain if there were less rules

[12:59:28.0000] <tantek>
annevk - indeed. though in this case, the cost of uncivil behavior appeared to be worse than the cost of rules.

[12:59:42.0000] <kennyluck>
annevk, I don't think it's at the maintenance stage. It's just incomplete.

[13:01:03.0000] <annevk>
it's both really

[13:01:17.0000] <annevk>
the model is in my head mostly and in XXX comments throughout the spec

[13:01:34.0000] <annevk>
just had to be written out at some point

[13:02:06.0000] <annevk>
but e.g. getComputedStyle, Media Queries, and style sheet switching was defined in detail

[13:02:15.0000] <tantek>
I'd like to see Chaal's comments in private email about "not pissing off productive editors" made public somewhere.

[13:04:18.0000] <kennyluck>
Yeah. I am not trying to piss of productive editors. Changing rules has an effect on making the environment perhaps more comfortable to the editors, but it seems pretty irrelevant in terms of "getting more people".

[13:04:40.0000] <Ms2ger>
I'm not sure I'd agree with that

[13:05:08.0000] <kennyluck>
Ms2ger, mind explaining a bit more?

[13:05:32.0000] <Ms2ger>
Sure, but not tonight, I'm about to head off :)

[13:07:48.0000] <annevk>
if people are excited about the W3C, more people will come

[13:08:14.0000] <annevk>
if your existing editors are deserting for more exciting fields (WHATWG / WHATCG), more people will go there

[13:10:27.0000] <jgraham>
Hixie: What's the point of step 6 in the "browsing context is /navigated/ to a new resource" algorithm?

[13:10:38.0000] <kennyluck>
annevk, I just don't think changing rules at the W3C would actually increase the sum of efforts spent at WHATWG + W3C in a significant way.

[13:12:52.0000] <annevk>
I guess you're not editing anything

[13:13:13.0000] <annevk>
the thing is, there's a lot of bullshit that comes on top of the editing

[13:15:28.0000] <kennyluck>
But at least I don't think the CSSOM editors as *listed* for now are not actively editing the spec because of this.

[13:16:12.0000] <annevk>
I don't really see how CSSOM is that relevant into whether or not W3C has too much bureacrazy

[13:16:30.0000] <annevk>
bureaucrazy*

[13:18:27.0000] <annevk>
all the people that are just forwarding email around and shepherding groups of people could do actual work instead

[13:18:49.0000] <kennyluck>
annevk, I guess it's not. I am just trying to understand what problems getting rid of W3C bureaucracy solve.

[13:18:50.0000] <kennyluck>
A

[13:20:17.0000] <annevk>
technical details get addressed rather than postponed "to the next version"

[13:20:48.0000] <annevk>
no need to have endless discussions over rules

[13:20:59.0000] <kennyluck>
annevk, I do think it's useful as to provide positive environment to the editors, but I am more interested in understanding whether it has an effect, positive or even negative, in terms of "getting new people".

[13:21:16.0000] <annevk>
no fricking tarpit that is the HTML WG

[13:21:44.0000] <annevk>
kennyluck: you know, if "getting new people" is your only goal, you're going to lose me

[13:22:23.0000] <annevk>
you lost Hixie, you lost a whole bunch of contributors from browser vendors

[13:22:54.0000] <annevk>
but you know, keep thinking of "getting new people" while those with the experience plant some seeds elsewhere

[13:27:52.0000] <kennyluck>
Didn't Hixie say "W3C is irrelevant"?

[13:30:18.0000] <annevk>
could well be

[13:31:20.0000] <annevk>
I think it does some relevant things still, but I care less and less for it

[13:34:47.0000] <kennyluck>
I don't really think WHATWG and W3C in terms of two parties, and that's why I don't changing rules at the W3C is too useful. Those that don't like bureaucracy would just do the WHATWG way, like Hixie.

[13:40:38.0000] <jgraham>
Some things like CSS are rather entrenched at W3C; HTML they abandoned (arguably twice now) so it was rather easy to get people to move elsewhere. With things that they still work on it is harder to get a critical mass of existing contributers to move elsewhere whilst still having the effect of excluding new contributers

[13:43:45.0000] <jarek>
HTML5 spec says that element's id attribute must be unique in the whole document

[13:43:58.0000] <jarek>
but the browsers don't really care

[13:44:11.0000] <jarek>
so... why not allow duplicate ids in the spec?

[13:44:40.0000] <kennyluck>
So this is sort of CSS in the WHATWG way → http://lists.w3.org/Archives/Public/www-style/2012Jun/0422 . Though, apparently I can't make François and folks to think more like a browser vendor, and I don't think chugging rules at the W3C would help here, either.

[13:44:51.0000] <kennyluck>
s/chugging/changing/

[13:48:11.0000] <Philip`>
jarek: Duplicate IDs cause confusion (when using foo.html#fragment, getElementById, etc), so it's helpful to authors if validators complain about duplicate IDs, so the spec says they're invalid

[13:49:32.0000] <jarek>
Philip`: I would expect using foo.html#fragment and getElementById() to return first ID in the DOM tree

[13:52:04.0000] <Philip`>
jarek: The behaviour is obvious if you think about it, but if e.g. someone later modifies your HTML document to swap a sidebar from the left to the right and it results in a different element being the first in the DOM tree with that ID, then it won't be obvious that the resulting problems were caused by the use of duplicate IDs

[13:54:47.0000] <jarek>
some CMSs are discouraging the usage of IDs altogether because they can't guarantee that there will be no naming clashes with third party modules

[13:59:14.0000] <tantek>
/me reads http://lists.w3.org/Archives/Public/www-style/2012Jun/0422 and http://fremycompany.com/TR/2012/ED-css-custom/

[13:59:59.0000] <tantek>
I like the meta-approach - just going ahead and drafting *something* and especially checking it into github (rather than the harder / more painful to use systems like hg etc.)

[14:02:28.0000] <kennyluck>
/me is a bit proud that he suggested this :p

[14:12:01.0000] <Philip`>
jarek: That sounds like it would be equally problematic if duplicate IDs were permitted

[14:12:42.0000] <jarek>
Philip`: yeah, but using classes everywhere also feels "wrong"

[14:12:55.0000] <Philip`>
jarek: Presumably the real solution would be to have some kind of scoped identifier system, so each module can uniquely identify elements within itself

[14:13:17.0000] <Philip`>
jarek: or emulate that by adding some unique prefix to each of a module's IDs (in the HTML and CSS and JS)

[14:13:19.0000] <jarek>
Philip`: I guess the solution is to use something like <div data-id="identifierUniqueInComponentScope">

[14:14:17.0000] <Philip`>
jarek: Just using class doesn't sound like a solution to what I presume the problem is (i.e. wanting some kind of unique identifier that won't clash with other modules)

[14:14:20.0000] <jarek>
but targeting such IDs from CSS is not as convenient as regular IDs

[14:15:35.0000] <jarek>
or <div data-componentName-id="blah">

[14:17:57.0000] <tantek>
rather than data-id="identifierUniqueInComponentScope" why not class="identifierUniqueInComponentScope" ?

[14:27:41.0000] <jarek>
tantek: semantically classes are meant to categorize elements, e.g.  '.button', '.toggleButton', '.slider'

[14:29:33.0000] <jarek>
technically there is no difference and classes are actually easier to work with (there is element.classList API)

[14:34:00.0000] <tantek>
jarek - a category can have just one thing

[14:34:09.0000] <tantek>
these scoped identifiers are categories of a sort

[14:35:32.0000] <tantek>
since there might be more than one on a page

[14:55:01.0000] <othermaciej>
tantek: are  Chaal's comments in private email about "not pissing off productive editors" that you alluded to earlier available somewhere in Memberspace

[14:55:03.0000] <othermaciej>
?

[15:01:37.0000] <tantek>
othermaciej I'm looking...

[15:02:31.0000] <tantek>
othermaciej - in "team-webapps" apparently - which I don't think is available to memberspace. :/

[15:49:43.0000] <tantek>
huh, openmetadata.org launches … wait for it ….

[15:50:06.0000] <tantek>
…. without any of their pages using their own metadata "standards".

[15:50:28.0000] <tantek>
(though due to their use of WordPress, they get a bit of hAtom microformats support)

[15:57:18.0000] <tantek>
June appears to be the time of the year when this happens (new metadata site launches that doesn't actually use/publish their own metadata). this year openmetadata.org. last year schema.org. in 2009 it was commontag.org. oh, Google Base is an exception - launched 2005-11-15 http://googleblog.blogspot.com/2005/11/first-base.html


2012-06-19
[17:16:24.0000] <othermaciej>
tantek: awesomesauce

[17:17:18.0000] <gavinc>
Turtle in HTML uses Turtle in HTML! ... for all 12 people that might care

[17:24:09.0000] <zewt>
really really close to giving up on webgl

[17:24:17.0000] <zewt>
they just seem to fuck up on purpose

[17:32:45.0000] <tantek_>
gavinc - insert obv turtles all the way down joke

[21:14:31.0000] <MikeSmith>
just heard that a lot of people at Opera Japan got layed off yesterday

[21:14:33.0000] <MikeSmith>
sad news

[23:46:52.0000] <MikeSmith>
seems oddly coincidental that in Chrome the only test failure of 2231 test cases from http://w3c-test.org/html/tests/submission/MathiasBynens/named-character-references/001.html is the very first case

[23:47:29.0000] <MikeSmith>
matjas: ↑

[23:48:03.0000] <MikeSmith>
wonder if that's an artifact of the test automation or if it's a real failure

[23:48:21.0000] <MikeSmith>
everything passes in all browsers I ran it in

[23:49:00.0000] <zcorpan>
it passes in chrome for me

[23:50:11.0000] <MikeSmith>
really?

[23:50:15.0000] <MikeSmith>
weird

[23:50:19.0000] <MikeSmith>
/me tries canary

[23:50:49.0000] <MikeSmith>
I confirmed it fails also outside of the test harness with just a static file

[23:50:50.0000] <paul_irish>
passes here in canary. fails in stable.

[23:50:59.0000] <zcorpan>
i guess it was fixed then

[23:51:09.0000] <zcorpan>
the first test fails in my safari

[23:51:09.0000] <MikeSmith>
hmm, passes in my canary too

[23:51:26.0000] <paul_irish>
matjas was filing a few bugs with webkit over the past few weeks, so that's likely

[23:51:29.0000] <zcorpan>
(along with all the double-char entities)

[23:51:31.0000] <MikeSmith>
doesn't fail in my safari

[23:51:49.0000] <MikeSmith>
or WebKit nightly, rather

[23:52:02.0000] <paul_irish>
https://bugs.webkit.org/show_bug.cgi?id=87465 yup

[23:52:13.0000] <MikeSmith>
r120658

[23:52:27.0000] <MikeSmith>
paul_irish: aha

[23:53:29.0000] <MikeSmith>
ok, I guess I haven't updated my chrome dev for a while

[23:53:36.0000] <MikeSmith>
was at 20.0.1115.1

[23:54:03.0000] <MikeSmith>
while canary was at 21.0.1164.0

[23:54:30.0000] <MikeSmith>
oh I guess 21.0.1164.0 is pretty old now too

[23:55:03.0000] <MikeSmith>
/me makes updates, spins fan on laptop

[23:55:14.0000] <MikeSmith>
21.0.1179.0

[00:10:53.0000] <matjas>
MikeSmith: yeah, I kept track of the bugs I found here: http://mathias.html5.org/tests/html/

[00:11:07.0000] <matjas>
Trident still gets &nbsp; wrong

[00:11:34.0000] <zcorpan>
wat?

[00:11:41.0000] <zcorpan>
wrong how?

[00:11:46.0000] <matjas>
i’m not even kidding

[00:11:56.0000] <matjas>
https://connect.microsoft.com/IE/feedback/details/743819

[00:12:29.0000] <matjas>
&nbsp; &nbsp &NonBreakingSpace; all match U+0020 instead of U+00A0

[00:12:44.0000] <zcorpan>
MS blocked my account

[00:13:06.0000] <matjas>
zcorpan: what? why?

[00:13:09.0000] <zcorpan>
but it still acts like a non-breaking space?

[00:13:12.0000] <zcorpan>
matjas: no idea

[00:13:50.0000] <matjas>
i guess… else you’d think someone would have noticed before

[00:14:04.0000] <zcorpan>
matjas: i spent like hours going through their "re-enable your account" procedure only to find out that it wasn't enough

[00:14:19.0000] <zcorpan>
so then i just went "fuck you"

[00:15:16.0000] <zcorpan>
not that i have filed like dozens of useful bug reports with that account or anything

[00:15:25.0000] <zcorpan>
i was probably a spammer

[00:17:39.0000] <hsivonen>
matjas: "The content that you requested cannot be found or you do not have permission to view it."

[00:18:01.0000] <hsivonen>
zcorpan: clearly not worthwhile trying to interact with connect.microsoft.com

[00:18:22.0000] <matjas>
hsivonen, zcorpan: screenshot: http://i.imgur.com/w0BcO.png

[00:19:27.0000] <hsivonen>
matjas: thanks. I guess "Access Restriction: Public" means something different in the MS land

[00:20:49.0000] <zcorpan>
hsivonen: yeah they have really tested my patience. in the ie7 era i filed some bugs, most of which got marked as "won't fix" (for ie7) or "by design" (even though it literally violated the spec), and then when ie8 development started, all my bugs had vanished

[00:23:29.0000] <MikeSmith>
matjas: thanks for the link

[00:23:41.0000] <hsivonen>
zcorpan: if you find a bug in IE, it's probably a better idea to submit the test case to the W3C test suite than to submit it to connect.microsoft.com

[00:23:42.0000] <zcorpan>
not to mention that while actually filing a bug, after having filled in all details in the bug, and then hitting "submit", they thought i spent too long filling the 89 required fields, so logged me out and forgot everything i filled in

[00:24:00.0000] <zcorpan>
FUCK. YOU.

[00:24:09.0000] <matjas>
wow

[00:24:21.0000] <zcorpan>
hsivonen: yes

[00:24:44.0000] <MikeSmith>
hsivonen: yeah, plus a public blog posting even

[00:25:29.0000] <matjas>
MikeSmith: let me know when you have time to set up the JS tests

[00:26:39.0000] <MikeSmith>
oh yeah

[00:26:44.0000] <MikeSmith>
thanks for reminding me

[00:26:54.0000] <MikeSmith>
we just need to set up a new repo, right?

[00:26:57.0000] <MikeSmith>
I can do that right now

[00:27:05.0000] <MikeSmith>
we just need to decide on a name

[00:27:22.0000] <MikeSmith>
can also set it up so it gets mirrored to github automatically

[00:27:36.0000] <MikeSmith>
as we did for testharness.js sources

[00:35:10.0000] <matjas>
MikeSmith: I don’t know, or a subdirectory in one of the existing repositories… whatever works

[00:35:49.0000] <matjas>
as for a name, how about “web-javascript” or “web-ecmascript”?

[00:36:23.0000] <MikeSmith>
matjas: OK, will make it a separate repo on dvcs.w3.org

[00:36:32.0000] <MikeSmith>
matjas: you have a W3C user account?

[00:36:37.0000] <matjas>
it’s’ll be like, test262 meets Web reality

[00:36:47.0000] <matjas>
MikeSmith: I do

[00:36:54.0000] <MikeSmith>
OK

[00:37:18.0000] <zcorpan>
"web ecmascript" matches the wiki page

[00:37:22.0000] <MikeSmith>
I will add your username to push perms for the repo

[00:37:35.0000] <MikeSmith>
oh

[00:37:49.0000] <MikeSmith>
should we do "web ecmascript" then? or change the name on wiki page?

[00:38:17.0000] <zcorpan>
/me doesn't actually care

[00:38:40.0000] <matjas>
“javascript” is more commonly used, but I don’t feel strongly either way

[00:38:50.0000] <matjas>
ECMAScript is the name of the spec after all

[00:40:03.0000] <zcorpan>
would be nice if someone revamped web ecmascript into a spec

[00:41:11.0000] <zcorpan>
currently only the string prototype methods are good enough for a spec

[00:52:37.0000] <MikeSmith>
matjas: ok, https://dvcs.w3.org/hg/web-ecmascript created and you are the only one who has push perms for it

[00:52:46.0000] <MikeSmith>
can add others later as needed

[00:54:00.0000] <MikeSmith>
just came across Apache Wicket, which looks really sensible (for an Apache project)

[00:54:09.0000] <MikeSmith>
http://wicket.apache.org/

[00:54:34.0000] <MikeSmith>
"a POJO data model, and a refreshing lack of XML, Apache Wicket makes developing web-apps simple and enjoyable again"

[00:54:39.0000] <matjas>
zcorpan: I’d love to give it a whirl, but I need to read up on how spec writing is done

[00:54:55.0000] <MikeSmith>
(POJO is "plain old Java objects", apparently

[00:55:31.0000] <matjas>
MikeSmith: thanks! will tweak my test case to use testharness.js and push the result later today

[00:55:39.0000] <MikeSmith>
super

[00:55:46.0000] <MikeSmith>
if you run into any problems lemme know

[00:55:51.0000] <MikeSmith>
but it should just work

[00:57:26.0000] <Von_Davidicus>
Everyone seems to have a hate-on for XML.

[00:58:00.0000] <MikeSmith>
Von_Davidicus: no, just don't like what it's used for

[00:59:13.0000] <Von_Davidicus>
Please explain.  :)

[00:59:54.0000] <MikeSmith>
Maven.

[01:00:50.0000] <MikeSmith>
or, alternative, just make that "Most every Apache software project."

[01:01:25.0000] <Von_Davidicus>
Sorry, that doesn't explain much to me.  :/

[01:01:36.0000] <zcorpan>
matjas: cool! check out http://wiki.whatwg.org/wiki/Howto_spec

[01:01:54.0000] <MikeSmith>
Von_Davidicus: and I'm sorry but I don't have the energy to spell it out

[01:02:22.0000] <zcorpan>
matjas: then just try it, and ask for advice and feedback along the way :-)

[01:02:35.0000] <Von_Davidicus>
Okay.

[01:03:07.0000] <veosotano_>
I think the biggest con of XML is the verbosity. That, and that a lot of people try to use it to express data types, which it wasn't created for

[01:04:55.0000] <Von_Davidicus>
What do you mean by verbosity, veo?

[01:05:50.0000] <veosotano_>
well if you wanted to do something like Apple's plist

[01:05:57.0000] <veosotano_>
JSON would fit the bill way better

[01:07:21.0000] <veosotano_>
I think XML's biggest strength is being able to express structured information, when it's not about ints or floats or strings, but real world concepts

[01:07:58.0000] <Von_Davidicus>
I liked XML because it let me write smaller files than HTML did--which is why I have a couple of my sites the way I do.

[01:08:11.0000] <veosotano_>
you use xslt?

[01:08:57.0000] <Von_Davidicus>
Yes, one site I'm changing back over to SQL+PHP, but right now it's XML+XSLT(+DTD+XSD)

[01:09:53.0000] <annevk>
matjas: MikeSmith: zcorpan: could call it "JavaScript" to fix that mistake at the same time :)

[01:10:15.0000] <zcorpan>
(+LSD)

[01:10:18.0000] <annevk>
matjas: JavaScript is ECMAScript plus some modifications to make it compatible with the interwebs

[01:10:35.0000] <zcorpan>
annevk: too late :-P

[01:10:37.0000] <jgraham>
MikeSmith: BTW the github mirrors are really useful

[01:10:39.0000] <annevk>
aaah

[01:10:41.0000] <matjas>
so… Web ECMAScript == JavaScript

[01:11:06.0000] <MikeSmith>
jgraham: yeah, glad you suggested setting those up

[01:11:15.0000] <jgraham>
MikeSmith: Saves me having to do the same thing at this end to clone repositorities into git-happy Opera

[01:11:23.0000] <MikeSmith>
ah

[01:11:41.0000] <jgraham>
Well that wasn't the intention at the time

[01:11:49.0000] <jgraham>
But it is a happy side effect :)

[01:12:02.0000] <Von_Davidicus>
zcorpan... are you suggesting I was on drugs when I made that site?

[01:13:27.0000] <zcorpan>
Von_Davidicus: no, i'm suggesting the site is on drugs :-) (though i haven't looked at the site, and surely don't mean to offend you)

[01:17:25.0000] <jgraham>
Oh, did we reach XML hour already?

[01:20:20.0000] <Von_Davidicus>
Let me show you, then.  http://coachrandom.zzl.org It's a webcomic.  Some of the pages are HTML--the rest are XML.

[01:20:40.0000] <zcorpan>
matjas: i just realized much of Howto_spec doesn't apply for javascript specs

[01:21:24.0000] <zcorpan>
matjas: since it's trying to address DOM specs

[01:25:53.0000] <annevk>
"for JavaScript specs" as there's so many of them? :)

[01:27:18.0000] <zcorpan>
happens to be one matjas considered writing

[01:27:34.0000] <zcorpan>
i'm not saying Howto_spec should be changed :-)

[01:27:55.0000] <annevk>
for JavaScript I guess you want to model it after the es5.github.com

[01:28:08.0000] <annevk>
most of the concepts like using list of steps and such still seem to apply though

[01:28:48.0000] <zcorpan>
yeah

[01:29:30.0000] <matjas>
MikeSmith: as for the directory structure, web-ecmascript/test-name/001.html etc. or do you need an extra /tests/ in there?

[01:29:45.0000] <matjas>
/tests/{submissions,approved}/, even

[01:33:14.0000] <jgraham>
Please don't use submitted/approved for new things

[01:33:24.0000] <jgraham>
I think it is now generally agreed to be a bad idea

[01:37:10.0000] <zcorpan>
matjas: or test-name.html

[01:38:04.0000] <matjas>
zcorpan: i’d prefer directories as I store a lot of test data in separate .js files

[01:38:19.0000] <MikeSmith>
matjas: what zcorpan said

[01:38:33.0000] <MikeSmith>
assume the tests will stay at the same URL forever

[01:38:34.0000] <zcorpan>
matjas: yeah that's fine

[01:38:39.0000] <matjas>
would you be okay with directories instead?

[01:38:39.0000] <matjas>
k

[01:39:23.0000] <zcorpan>
matjas: just that 001.html is sort of an anti-pattern (that i've followed for far too long) and useful filenames are generally better

[01:39:47.0000] <matjas>
ah, i got that from annevk and you :)

[01:40:04.0000] <zcorpan>
yeah and i guess we got that from Hixie

[01:40:09.0000] <matjas>
it is kinda useful if you have multiple separate tests as .html files

[01:41:34.0000] <zcorpan>
it can be useful sometimes, like right now i'm writing lots of CORS tests that follow a table in an .ods file so each file corresponds to a row in the table

[01:42:14.0000] <zcorpan>
but for e.g. the websocket testsuite i now wish i used useful filenames instead

[01:43:04.0000] <zcorpan>
since it's a PITA to find the test you're looking for

[01:43:39.0000] <jgraham>
I have been using 001 type filenames and I don't really like it

[01:44:06.0000] <jgraham>
But I don't really want to try and condense the title even further into the filename either

[01:45:53.0000] <matjas>
MikeSmith: where can I browse the https://dvcs.w3.org/hg/web-ecmascript repository over HTTP (i.e. as a dir listing)?

[01:46:13.0000] <jgraham>
(or have titles like link_with_onclick_form_submit_to_javascript_url_with_document_write_and_href_navigation.html)

[01:46:34.0000] <MikeSmith>
matjas: you can't really (not the way you can at github or bitbucket)

[01:46:55.0000] <matjas>
MikeSmith: i was expecting something like http://w3c-test.org/

[01:47:02.0000] <MikeSmith>
ah

[01:47:05.0000] <MikeSmith>
yeah

[01:47:07.0000] <MikeSmith>
I can set that up

[01:47:24.0000] <MikeSmith>
but it takes some time

[01:47:35.0000] <MikeSmith>
will need to wait and do it later today

[01:47:43.0000] <matjas>
/me URI-guessed http://w3c-test.org/web-ecmascript/ but failed

[01:47:48.0000] <MikeSmith>
right

[01:47:57.0000] <matjas>
MikeSmith: ok, let me know when you do :)

[01:47:59.0000] <MikeSmith>
the repos don't get mirrored automatically

[01:48:00.0000] <MikeSmith>
OK

[01:48:04.0000] <zcorpan>
jgraham: at least the latter is easy to find again later, but i agree it can be ugly or annoying to write

[01:48:28.0000] <MikeSmith>
it requires me getting this kludgy rsync thing configured

[01:48:38.0000] <MikeSmith>
matjas: will ping you when it's ready

[01:48:43.0000] <matjas>
thanks

[01:51:55.0000] <zcorpan>
jgraham: does the spec define execution order for http://software.hixie.ch/utilities/js/live-dom-viewer/saved/1598 ?

[01:54:43.0000] <jgraham>
zcorpan: AFAIK, no but I expect if has to be document order

[01:54:48.0000] <jgraham>
i.e. depth first

[01:55:02.0000] <jgraham>
(I wrote a test like that recently)

[01:55:12.0000] <jgraham>
(I guess I should file a bug or something)

[01:55:28.0000] <jgraham>
(unless someone knows this is defined somewhere?)

[02:00:41.0000] <zcorpan>
"When a script element that is not marked as being "parser-inserted" experiences one of the events listed in the following list, the user agent must synchronously prepare the script element:

[02:00:41.0000] <zcorpan>
* The script element gets inserted into a document."

[02:01:16.0000] <zcorpan>
that doesn't say in what order

[02:01:29.0000] <zcorpan>
so, yeah, file a spec bug :-)

[02:02:46.0000] <jgraham>
Right, I know that bit doesn't say

[02:03:28.0000] <jgraham>
But there could be a bit somewhere that says that when any bulk modifications happen it has to be as if they happened in document order or something

[02:04:15.0000] <zcorpan>
http://software.hixie.ch/utilities/js/live-dom-viewer/saved/1599 also

[02:04:37.0000] <zcorpan>
opera/chrome/firefox use document order

[02:05:17.0000] <Von_Davidicus>
Hmmm...  which to use...  XHTML 1.0, HTML 4.01, or HTML5....

[02:07:26.0000] <annevk>
matjas: you can do stuff like http://dvcs.w3.org/hg/url/raw-file/tip/Overview.html

[02:07:40.0000] <zcorpan>
Von_Davidicus: use HTML

[02:08:11.0000] <annevk>
matjas: e.g. http://dvcs.w3.org/hg/web-ecmascript/raw-file/tip/identifiers/index.html

[02:08:40.0000] <zcorpan>
Von_Davidicus: (i.e. http://whatwg.org/html )

[02:09:41.0000] <matjas>
annevk: thanks

[02:10:02.0000] <zcorpan>
annevk: wasn't that feature going to be disabled or something since tests generally aren't trusted (which is why we have w3c-test.org)?

[02:10:30.0000] <annevk>
zcorpan: if they disable that, it's going to be hell for all those permanent links to editor's drafts from TR/

[02:10:38.0000] <annevk>
zcorpan: and from elsewhere on the web

[02:10:59.0000] <annevk>
zcorpan: so they'd need to have some kind of plan in place unless they're going to violate http://www.w3.org/Provider/Style/URI.html

[02:11:14.0000] <jgraham>
annevk: Aren't you the one that originally pointed out that it's a security risk?

[02:11:32.0000] <annevk>
jgraham: I have pointed that out, yes

[02:12:17.0000] <annevk>
jgraham: that's why we have a separate domain for tests

[02:12:44.0000] <annevk>
jgraham: but for some reason they put the test repository together with the more trusted spec repository

[02:16:15.0000] <Von_Davidicus>
Yes, but which one should I use?

[02:18:09.0000] <annevk>
Von_Davidicus: HTML is not versioned, see http://whatwg.org/html

[02:22:48.0000] <Von_Davidicus>
XHTML 1.0 (with appropriate doctype) it is.  :-)  I have consented to take a step back from XML+XSLT, but I have my limits.  :D

[02:26:01.0000] <annevk>
haha

[02:26:10.0000] <zcorpan>
Von_Davidicus: the XHTML 1.0 doctype is a valid HTML doctype, so that's fine :-)

[02:28:18.0000] <Von_Davidicus>
My D2:LoD rune pages, however, remain XML+XSLT+XSD.  *Stubborn nod*

[02:30:30.0000] <zcorpan>
turns out i don't quite know the xhtml 1.0 strict doctype by heart anymore

[02:31:11.0000] <zcorpan>
i guess that's a good thing

[02:31:33.0000] <zcorpan>
means i'm capable of forgetting useless information

[02:32:16.0000] <zcorpan>
but i had it almost right :-(

[02:37:05.0000] <Von_Davidicus>
I never did know it by heart.

[02:39:06.0000] <zcorpan>
<!doctype html> is much simpler to learn :-)

[02:39:54.0000] <Von_Davidicus>
Which is entirely the problem!

[02:40:30.0000] <zcorpan>
what's the problem?

[02:41:47.0000] <Von_Davidicus>
Have you any idea what a simple doctype DOES to my nerdacity, which is, sadly, based almost entirely on the fact that I do webcoding?

[02:42:11.0000] <Von_Davidicus>
What good is it, if most people's minds don't go ~sproing~ from the first line?  :D

[02:46:40.0000] <zcorpan>
why not put in some zalgo art on the first line instead? :-)

[02:50:32.0000] <Von_Davidicus>
/me looks it up.

[02:50:55.0000] <Von_Davidicus>
Because it doesn't seem text-based, so I don't know how to stick that in via Notepad.

[02:57:12.0000] <zcorpan>
<!DOCTYPE html><!--PUBLIC "͞-̴//W3C̡//̡DT͢D X͠H̡T͡ML̴ 1̶.0 S̀t҉ric̵t//̧EN͟"҉ "͚h҉͈̠̲̠̯t̪̟̠̹̳͉t̜̻͚̙̜̙͇͡p̴̩͚ͅ:͙̳̳̮̰͜/̸͍̗/͡ẁ̙w͓w̡͈̩̭̫.̨̯̙̲̜w͉̼3̜̬̮̳̤̤.̹o̙̘r͈̼ͅg̤̣͚̬̱͚ͅ/͏̥̜̗Ṭ͕R̸̘͚̘/̡͍̼̻̣x͔̱̞̘̮̖̱͞h͙͖̘̗t̳̲͚m̟̯̬l͍̳̺1̣̻̖͉͈ͅ/͔D̶T̮D͇/̤̟͔̹̗̭x̀h̪̲̕t̸̠̠̼̼̙m̷̘l̶1̨̝̩̮͍ͅ-̴̰̞̯̦

[02:57:12.0000] <zcorpan>
́ͯ̇͏̶̫̯̯͚͚̜̮̼̬̬͞t̷̘̞̮̳̲̞͈͎̍ͩ̃ͣ̊̄͐̓̑͑͆ͨ̊̚̚͟r̈́ͮ͆͗̽̈̐̿̿͘͞͏̴̤̺͍̲͔̣̘̟̜̘̲̘̬͉͕͚͢i̶͇͉͙̩͍̺̣͖͕͇̦̘̺̫̹̳̥̼͈̓̉̐ͬͩ̆̈̒̉͛ͭ̎̈́ͭ̊͋͌͆͘c̴͓̥̲͈̼̋̔̊̃ͧ̆̓ţ͕̘̖͖̗ͩ̄̍̍̿ͣͭ͂ͮ̃̍̅̐͌̈̍ͮ̎͘͠.̶́ͥ̽̍̊ͨ̓͐ͫͨͥ̃͌͏̠̪͙̝̦͍̜̘̘͕͠ď̶̢͙͙̭̖̞̺̰̝͇ͯ̌̌ͭ͗͝ţ̸̴̡͌͂̒ͤ̑ͭ̑͏̝͕�

[02:57:12.0000] <zcorpan>
̱̣̠̜d̢͍͈͙̫̲̰̥͈̗͇̱̦͎ͥͫͣ̍̑͗ͭ̆ͅ"̯̗̺̼̼̖̬͎͎̟͉̠̺̥̾͒͗̽ͣ̆̽̔́ͦ͗̉̾̔ͨ́̕͘͡ͅ-->

[02:57:47.0000] <Von_Davidicus>
Hmmmm.....

[02:58:11.0000] <zcorpan>
/me isn't sure that got through correctly

[02:58:43.0000] <Von_Davidicus>
If you meant for a load of strange characters to show up, it got through just fine.  :)

[02:59:36.0000] <zcorpan>
see http://eeemo.net/

[03:00:32.0000] <reggna>
Obfuscated HTML.. Nah.

[03:02:19.0000] <Von_Davidicus>
I agree.  Obfuscated HTML is for wannabes.

[03:03:13.0000] <zcorpan>
a comment with funny characters isn't really what i'd call obfuscated html

[03:03:29.0000] <zcorpan>
anyway

[03:04:11.0000] <zcorpan>
seems it made it through correctly to the logs but my monospace fonts aren't capable of doing a sensible rendering

[03:04:24.0000] <Von_Davidicus>
No, if I'm going to make things horrendously complicated and mindscrewsome, I shall do it properly:  with code that actually DOES something.

[03:04:51.0000] <zcorpan>
Von_Davidicus: the xhtml doctype doesn't actually do anything

[03:06:29.0000] <Von_Davidicus>
Well, it sort of does.  1) it gives the validator something to start with.  2) omit it, and try using character entity references.  If you use firefox, I hope you like yellow.

[03:06:32.0000] <Philip`>
Someone should do an HTML Golf contest, where you're given a target web page and you have to write a new page that has pixel-identical rendering (in some selection of modern browsers) using as few bytes as possible

[03:07:01.0000] <zcorpan>
Von_Davidicus: oh i thought you were gonna use text/html

[03:07:17.0000] <Philip`>
(as with e.g. http://en.wikipedia.org/wiki/Perl_golf)

[03:08:39.0000] <Von_Davidicus>
Well, I will.  But, still, it does more than a comment.

[03:09:49.0000] <zcorpan>
not really

[03:10:15.0000] <Von_Davidicus>
Anyways, I gotta sign off and get some sleep.

[03:39:02.0000] <kennyluck>
Does anyone know how old DOM4 (or Web DOM previously) is?

[03:40:46.0000] <zcorpan>
kennyluck: old as in when work on it started?

[03:41:25.0000] <kennyluck>
zcorpan, yeah, am I am sort of interested in the earliest version.

[03:41:30.0000] <kennyluck>
s/am/and/

[03:41:44.0000] <kennyluck>
(for historical interest)

[03:42:39.0000] <zcorpan>
http://simon.html5.org/specs/web-dom-core is the earliest version still online, unfortunately i haven't kept earlier versions around anywhere. but iirc i started working on it in 2007

[03:43:03.0000] <zcorpan>
probably late 2007

[03:43:24.0000] <kennyluck>
zcorpan, great thanks!

[03:45:47.0000] <zcorpan>
if pimpmyspec keeps logs, might have more information

[03:45:59.0000] <zcorpan>
jgraham: does it? ^

[03:47:15.0000] <jgraham>
Not apart from apache logs, and I don't know how long they are kept for

[03:55:04.0000] <zcorpan>
kennyluck: http://web.archive.org/web/20081211192358/http://simon.html5.org/specs/web-dom-core.src

[03:55:43.0000] <kennyluck>
zcorpan, thanks!

[03:57:20.0000] <kennyluck>
I am just curious about the history of createElementNS(). It looks like problematic part I spot has been like this for a while. I'll file a bug later.

[05:11:53.0000] <zewt>
oh cool, a ui change in recent ff that's actually really good, the backdrop for viewing images is grey instead of blinding white

[05:24:00.0000] <matjas>
that zcorpan has already written out the `ToHTMLTag` algorithm as well as the algorithms for the String.prototype extensions in spec lingo ♥

[05:32:04.0000] <jgraham>
So… how synchronous is it to navigate to a javascript URL?

[05:53:11.0000] <MikeSmith>
matjas: can you please try pushing a change to web-ecmascript?

[05:53:15.0000] <MikeSmith>
doesn't matter what

[05:53:21.0000] <matjas>
MikeSmith: sure

[05:53:29.0000] <MikeSmith>
I think I have the mirroring set up correctly

[05:54:32.0000] <Ms2ger>
MikeSmith, can you give me access too?

[05:54:38.0000] <MikeSmith>
sure

[05:55:14.0000] <matjas>
MikeSmith: done, I got some rsync-related messages

[05:55:22.0000] <MikeSmith>
OK

[05:55:31.0000] <MikeSmith>
as long as you didn't see any errors, I think it worked

[05:55:53.0000] <MikeSmith>
yeah

[05:55:53.0000] <matjas>
where’s the github repo?

[05:55:54.0000] <MikeSmith>
http://w3c-test.org/web-ecmascript/

[05:55:59.0000] <matjas>
ooh that was for the dir listings

[05:56:00.0000] <matjas>
nice!

[05:56:02.0000] <MikeSmith>
I have not set up the github rop

[05:56:10.0000] <MikeSmith>
*repo yet

[05:56:13.0000] <MikeSmith>
I will do that later

[05:56:45.0000] <matjas>
no rush

[05:56:48.0000] <MikeSmith>
OK

[05:58:14.0000] <MikeSmith>
Ms2ger: oK, you should also now have push perms for that repo

[06:00:32.0000] <Ms2ger>
matjas, do you want me to put my tests in directories or can I just dump them all under the root?

[06:01:06.0000] <matjas>
Ms2ger: IMHO directories are neat and tidy, but whatever works for you

[06:01:53.0000] <MikeSmith>
holy crap that's a lot of test cases there at http://w3c-test.org/web-ecmascript/identifiers/

[06:02:07.0000] <MikeSmith>
98719 is nice number

[06:02:47.0000] <MikeSmith>
eh wtf is this "Cached metadata not present. Click for source code." thing I keep seeing now

[06:03:08.0000] <zewt>
cool, i clicked that and firefox is angry with me

[06:03:39.0000] <zewt>
1 fail :(

[06:03:57.0000] <Ms2ger>
There we go

[06:04:00.0000] <Ms2ger>
MikeSmith, plinss

[06:04:11.0000] <MikeSmith>
ah

[06:04:18.0000] <Ms2ger>
He wants each test to have two copies of all the metadata

[06:04:31.0000] <MikeSmith>
hmm

[06:04:45.0000] <Ms2ger>
Which I think is silly, but I haven't had time to complain yet

[06:05:02.0000] <Ms2ger>
Otoh, at least it doesn't complain about "cached metdata" anymore

[06:06:24.0000] <MikeSmith>
OK

[06:06:43.0000] <MikeSmith>
hey is iframe sandbox landed in gecko yet?

[06:07:21.0000] <Ms2ger>
Not yet

[06:07:42.0000] <Ms2ger>
It sounded like it was getting close, though

[06:08:30.0000] <MikeSmith>
OK

[06:08:41.0000] <MikeSmith>
heh https://www.w3.org/Bugs/Public/show_bug.cgi?id=17453 resolved=needsinfo

[06:08:42.0000] <MikeSmith>
cute

[06:08:50.0000] <MikeSmith>
I have not idea what that one is about

[06:10:23.0000] <Ms2ger>
Me neither

[06:10:32.0000] <Ms2ger>
Do you know people who use IE?

[06:11:24.0000] <MikeSmith>
Ms2ger: yeah, a few

[06:39:41.0000] <matjas>
how do you add a reference to a separate spec in Anolis? <some-markup-here-i-suppose>[FOO]</…>

[06:41:59.0000] <jgraham>
javascript: url navigation: synchronous or asynchronous?

[06:42:02.0000] <Ms2ger>
<span data-anolis-spec=html>foo</span>

[06:43:50.0000] <jgraham>
For example if I have <a target=some_iframe href=javascript:void(x++)><script>x=1;a.click();a*=3;alert(a)</script>, what should be alerted? 3? 6?

[06:44:03.0000] <jgraham>
What about if I submit to a javascript: url?

[06:44:06.0000] <gsnedders>
/me would rather not use jgraham's harness for Web-ECMAScript tests.

[06:44:14.0000] <gsnedders>
(I'd rather have the tests usable in a JS shell)

[06:45:14.0000] <gsnedders>
http://w3c-test.org/web-ecmascript/builtins/Array.prototype.join-order.html are just ES5 behaviour, no?

[06:46:01.0000] <matjas>
Ms2ger: thanks

[06:46:20.0000] <Ms2ger>
Np

[06:46:27.0000] <matjas>
Ms2ger: and where are these references defined? in Anolis itself? is there a list somewhere?

[06:46:57.0000] <Ms2ger>
The data part of http://wiki.whatwg.org/wiki/Anolis

[06:47:25.0000] <Ms2ger>
MikeSmith++

[06:47:29.0000] <Ms2ger>
tantek++

[06:47:32.0000] <Ms2ger>
for docs

[06:47:46.0000] <MikeSmith>
eh?

[06:47:51.0000] <MikeSmith>
which docs

[06:47:52.0000] <MikeSmith>
oh

[06:47:55.0000] <Ms2ger>
Those

[06:48:07.0000] <matjas>
“docs” :P

[06:48:09.0000] <MikeSmith>
yeah, I added that cause tantek asked me nicely :)

[06:48:33.0000] <matjas>
thanks though, that helps. So you need to clone that repository and modify it if you need other references?

[06:48:47.0000] <Ms2ger>
Yep

[06:48:58.0000] <Ms2ger>
Do you have a bitbucket account?

[06:49:28.0000] <jgraham>
THe correct way to install lxml is pip install lxml (you are using a virtualenv, right?)

[06:49:58.0000] <matjas>
I should note I’m using http://pimpmyspec.net/ for now rather than setting up Anolis locally

[06:50:09.0000] <matjas>
Ms2ger: I might have

[06:50:21.0000] <Ms2ger>
Mm

[06:50:34.0000] <MikeSmith>
volkmar: Web Activities is not proposing any new markup, right? e.g., nothing parallel to the proposed <intent> element?

[06:50:40.0000] <Ms2ger>
pms doesn't have support for cross-spec references yet

[06:51:05.0000] <MikeSmith>
jgraham: please update that wiki page :)

[06:51:09.0000] <matjas>
I see. Ok, at least I know what markup to use

[06:51:28.0000] <volkmar>
MikeSmith: no

[06:51:46.0000] <MikeSmith>
volkmar: no means no new element?

[06:51:48.0000] <volkmar>
MikeSmith: I thought I mention that in the wiki page: we don't have a strong opinion on that yet

[06:51:52.0000] <MikeSmith>
OK

[06:51:59.0000] <volkmar>
I'm not for an element in <body>

[06:52:09.0000] <MikeSmith>
OK

[06:52:16.0000] <MikeSmith>
I see that section now

[06:53:01.0000] <MikeSmith>
we don't want to add a new element in the head for this

[06:53:03.0000] <MikeSmith>
IMHO

[06:55:22.0000] <MikeSmith>
volkmar: I'm trying to write a general one-sentence description that covers the baseline common scope of both proposals

[06:55:37.0000] <MikeSmith>
how about "enabling Web applications to delegate user intents/activities to be handled by other applications"?

[06:56:17.0000] <volkmar>
sounds fine

[06:57:33.0000] <MikeSmith>
thanks

[07:04:21.0000] <Philip`>
jgraham: (I presume you meant "x*=3;alert(x)", not "a*=3;alert(a)")

[07:04:55.0000] <jgraham>
Yes

[07:05:55.0000] <zewt>
jgraham: looks like it's different in webkit and FF (which I suspect is why you're asking)

[07:06:06.0000] <zewt>
sync in webkit (or chrome, anyway), async in FF

[07:06:13.0000] <jgraham>
zewt: and IE and OPera

[07:06:36.0000] <jgraham>
Well IE matches WebKit and Gecko matches Opera

[07:08:44.0000] <zewt>
(also, in WebKit I can say "x", but in FF I have to say parent.x; probably obvious but I've never really done much with iframes)

[07:09:02.0000] <jgraham>
Yeah, well there is some weirdness there

[07:09:23.0000] <jgraham>
WebKit really doesn't like navigating frames with javascript URLs

[07:09:42.0000] <jgraham>
It always? tries to navigate the top level browsing context

[07:09:59.0000] <jgraham>
(maybe not if you set the location explicitly?)

[07:11:42.0000] <zewt>
i'm not even sure where the path in the spec is for executing javascript: during navigation

[07:12:34.0000] <zewt>
offhand it seems like it would be weird if a.click() caused the storage mutex to be released synchronously

[07:13:23.0000] <zewt>
(the first step in navigation)

[07:13:59.0000] <zewt>
so maybe it doesn't even go that way and I missed something earlier in click()

[07:16:26.0000] <jgraham>
zewt: I assume it happens in step 21 of the navigation algorithm

[07:19:16.0000] <jgraham>
It has to via navigation. Also I'm not really sure what effect releasing the storage mutex would have, so I haven't even thought about that

[07:19:25.0000] <jgraham>
Does anyone even implement it?

[07:19:36.0000] <zewt>
not for localStorage as far as I know, not sure about cookies or anything else

[07:20:00.0000] <zewt>
afaik the storage mutex is never intended to be released synchronously once it's taken

[07:20:08.0000] <zewt>
(not that I'm the right person to ask or anything)

[07:20:27.0000] <jgraham>
But navigate is never *called* asynchronously

[07:20:42.0000] <jgraham>
So that isn't just a problem in this case if it is a problem

[07:20:50.0000] <zewt>
oversight, maybe? dunno

[07:20:57.0000] <jgraham>
It is typically called synchronously and become asynchronous later

[07:22:09.0000] <matjas>
so if http://wiki.whatwg.org/wiki/Web_ECMAScript becomes a spec, should it be named “Web ECMAScript”, “Web JavaScript”, or something else?

[07:22:21.0000] <matjas>
(I kinda like “Web JavaScript”)

[07:22:37.0000] <zewt>
i suppose if we end up stuck with that ugly "oneTimeOnly" blob URL thing, then the time a URL is released would be the same as whenever a javascript: URL is evaluated

[07:23:33.0000] <zewt>
(such a broken API though, hopefully it'll go the autoRelease way)

[07:23:48.0000] <zewt>
(not Blob, the MS oneTimeOnly thing)

[07:27:40.0000] <jgraham>
I guess Hixie is still not around

[07:44:59.0000] <zewt>
google's "hide this site's results" hack is annoyingly broken

[07:45:08.0000] <zewt>
for some reason it won't let you hide a site without viewing it first, and then that doesn't work half the time

[07:45:48.0000] <zewt>
so instead of blocking a site, i just end up with "you've viewed this site 5 times" which will probably make it *more* likely to return that site

[07:53:38.0000] <Ms2ger>
MikeSmith, btw, if you like setting up repos for tests... I've got some typedarray and webgl tests that could use a better place than my bitbucket :)

[07:54:38.0000] <MikeSmith>
Ms2ger: I don't mind setting them up but I do like making sure we have a common place to share them

[07:54:46.0000] <MikeSmith>
so I am happy to create more repos

[07:55:03.0000] <MikeSmith>
I would rather not be in the setting-up-repos business

[07:55:49.0000] <Ms2ger>
Heh :)

[07:55:51.0000] <MikeSmith>
IMHO would be far better to use the W3C area at Github, and make it all self-serve there for anybody who we trust

[07:56:06.0000] <MikeSmith>
but some crazy people prefer Bitbucket over Github

[07:56:09.0000] <Ms2ger>
That would involve git, so I don't think that's better :)

[07:56:13.0000] <MikeSmith>
hah

[07:56:47.0000] <MikeSmith>
the W3C systems team also is not religious about having everything under the sun hosted at W3C and would be happy to have stuff at Github

[07:57:11.0000] <Ms2ger>
Well, I'm even less religious about hosting anything at the W3C :)

[07:57:38.0000] <MikeSmith>
heh

[07:57:41.0000] <Ms2ger>
But the automated rsync to w3c-test.org is nice

[07:58:03.0000] <MikeSmith>
well, some on the team seem are still a bit more wedded to everything needed to be hosted at W3C

[07:59:41.0000] <Ms2ger>
Given that they're paid to host things at the W3C, I can see their point :)

[08:01:10.0000] <Ms2ger>
matjas, if you care for the html testing tf meeting, that's now :)

[08:01:16.0000] <MikeSmith>
systems team is not paid for it really, and I think would be quite happy to have less stuff to have to maintain, and less people complaining to them and asking for enhancements

[08:02:31.0000] <jgraham>
I am quite in favour of just using github. I think the tooling there is poor, but better than what we have with hg

[08:03:46.0000] <MikeSmith>
yeah

[08:04:14.0000] <MikeSmith>
what we have with the current W3C hg/dvcs.w3.org is ... minimal

[08:18:28.0000] <jscheel>
hi everyone. Was there ever any progress made with disabling css cascading? http://lists.whatwg.org/pipermail/whatwg-whatwg.org/2006-December/008787.html

[08:19:40.0000] <jscheel>
it seems like this issue comes up every few years, but nobody ever has a good solution (outside of frames)

[08:19:46.0000] <jscheel>
*iframes

[08:23:21.0000] <zcorpan>
jscheel: the situation there hasn't changed afaik

[08:23:46.0000] <jscheel>
zcorpan: sad :( the suggestions in that proposal were great

[08:24:00.0000] <jscheel>
especially cascade:off

[08:25:05.0000] <jscheel>
I think another interesting, albeit potentially difficult, solution would be to allow link elements inside other elements in the body, and limit them to that node and it's children

[08:25:22.0000] <jscheel>
good luck getting that going in the next 20 years though, right :)

[08:26:04.0000] <zcorpan>
well we have scroped stylesheets already

[08:26:49.0000] <zcorpan>
so you can do <div><style scoped>@import "foo";</style>...</div>

[08:27:22.0000] <zcorpan>
but global styles still apply to that div as normal

[08:28:28.0000] <jscheel>
zcorpan: I didn't know that, interesting. But, globals still apply, huh?

[08:28:55.0000] <jscheel>
zcorpan: it's a huge issue when you allow user-submitted styles, and the first thing they do is import a global reset

[08:32:20.0000] <jscheel>
zcorpan: oh, is scoped actually supported anywerhe?

[08:32:28.0000] <jscheel>
nevermind

[08:32:32.0000] <jscheel>
no support at all

[08:32:34.0000] <jscheel>
lamesauce

[08:37:36.0000] <zcorpan>
jscheel: i see chrome has something in about:flags

[08:37:50.0000] <jscheel>
zcorpan: yeah, was just looking at that

[08:38:11.0000] <jscheel>
zcorpan: and a ployfill that seems to work ok

[08:38:22.0000] <jscheel>
https://github.com/thingsinjars/jQuery-Scoped-CSS-plugin

[08:38:28.0000] <Ms2ger>
/me hijacks w3c-test.org

[08:39:08.0000] <Ms2ger>
(When running tests in Gecko, at least)

[08:42:39.0000] <jgraham>
On your testing DNS?

[08:47:23.0000] <Ms2ger>
The proxy-something we have, yes

[08:48:21.0000] <matjas>
Ms2ger: damn, I was afk… also I don’t know in which channel those meetings take place

[08:52:00.0000] <Ms2ger>
#HTMLT on irc.w3.org

[08:56:05.0000] <zcorpan>
reading specs is hard, let's go shopping. https://bugs.webkit.org/show_bug.cgi?id=89313

[09:02:17.0000] <jgraham>
That's quite the fail

[09:02:57.0000] <zcorpan>
http://bl.ocks.org/2941604 seems to mix v.nu errors and traditional validator errors, which can make it hard to conclude things

[09:04:02.0000] <zewt>
heh chuckling at the first

[09:04:41.0000] <zewt>
one of the sillier "requirements" of HTML

[09:05:59.0000] <zewt>
that and requiring <title>, which I don't get at all

[09:06:24.0000] <zewt>
(the only thing preventing simply "<!doctype html>" from validating)

[09:08:03.0000] <zcorpan>
missing <title> isn't a common error

[09:09:10.0000] <jgraham>
It is in helper files for my tests :)

[09:09:46.0000] <AryehGregor>
Or, say, iframe contents.

[09:09:49.0000] <AryehGregor>
Perfectly legitimate there.

[09:09:58.0000] <jgraham>
(often files were the whole content is "<!doctype html>1" or something)

[09:09:58.0000] <AryehGregor>
I think I filed a bug once, but it got WONTFIXed.

[09:10:17.0000] <jgraham>
(these are almost always loaded in iframes)

[09:11:17.0000] <zcorpan>
yeah well we shouldn't optimize validation for test cases. :-) but iframes in general may be a fair point

[09:27:16.0000] <zcorpan>
matjas: i think it was jgraham who wrote those

[09:29:55.0000] <matjas>
Ms2ger: ah, next time!

[09:30:05.0000] <Ms2ger>
You don't miss much :)

[09:30:29.0000] <Ms2ger>
Except for http://w3c-test.org/html/tests/submission/Ms2ger/events/event-handler-javascript.html maybe :)

[09:31:09.0000] <matjas>
mind = blown

[09:31:20.0000] <zcorpan>
matjas: did you see http://krijnhoetmer.nl/irc-logs/whatwg/20120619#l-640 ?

[09:31:22.0000] <matjas>
so that‘s how those things can work

[09:31:43.0000] <zcorpan>
/me needs to run

[09:32:22.0000] <matjas>
zcorpan, ah no, i had missed that one

[09:33:42.0000] <matjas>
gsnedders: my identifier tests are available here as well: mathias.html5.org/tests/javascript/identifiers/ works in any shell if you just replace text() with console.log() / print()

[09:34:27.0000] <matjas>
gsnedders: isn’t the whole idea of using testharness.js for all tests that you can replace testharness.js with something that works in your shell, copy the <script> content of the HTML test case, and run it anywhere?

[09:35:12.0000] <matjas>
(honest question; i assumed this was the case)

[09:39:29.0000] <gsnedders>
matjas: Nope. Most tests rely on the DOM and shells have no DOM, so it's certainly not true in general.

[09:40:11.0000] <matjas>
gsnedders: of course… but I don’t see how that is a problem for the web-ecmascript tests

[09:41:08.0000] <matjas>
gsnedders: what do you suggest? i can provide the tests in a different format / using a different harness if you prefer

[09:44:25.0000] <gsnedders>
matjas: I dunno, all of us JS engine people have our own fairly different test harnesses :P

[09:47:02.0000] <Ms2ger>
gsnedders, let's standardize on testharness.js :)

[09:50:09.0000] <gsnedders>
Ms2ger: I want something that works in JS shells, damn it!

[09:50:25.0000] <Ms2ger>
gsnedders, let's work on making that happen?

[09:50:26.0000] <gsnedders>
And the lack of any async stuff makes that impossible to fully-implement the API of.

[09:50:51.0000] <Ms2ger>
Can you reorder that sentence in a way I understand?

[09:52:08.0000] <gsnedders>
testharness.js has support for async tests. JS shells (or at least the normal ones) don't allow for multiple threads of execution, and hence don't allow anything to be async. As a result, you can't implement the current testharness.js API for a JS shell.

[09:53:02.0000] <Ms2ger>
Well, we don't need async tests in the shell, then, do we?

[09:53:56.0000] <gsnedders>
No. But given the sync tests are just impl as async tests, we may get in to edge-case differences.

[09:54:05.0000] <gsnedders>
I mean, I'm not saying this isn't doable…

[09:54:42.0000] <Ms2ger>
Ah, right

[09:55:48.0000] <gsnedders>
It might well be doable. But you may well end up with subtle API differences.

[09:57:22.0000] <gsnedders>
Anyone read The Art of Readable code? Worth getting?

[09:58:53.0000] <Ms2ger>
There's some setTimeouts for timeouts, but I think it's probably fine

[10:00:20.0000] <gsnedders>
/me has scarcely looked at testharness.js since jgraham first asked him to review it two years ago :)

[10:01:27.0000] <Ms2ger>
There's some things like assuming that `document` exists, but I don't think you'd need much architectural work

[10:01:42.0000] <Ms2ger>
Anyway, I don't care about shells, so if you want it... :)

[10:06:08.0000] <gsnedders>
This involves effort! :)

[10:06:56.0000] <matjas>
My kingdom for cross-spec reference support in http://pimpmyspec.net/

[10:07:48.0000] <Ms2ger>
jgraham, interested in a kingdom?

[10:25:08.0000] <tantek>
what's the opinion in these circles about view-mode?  http://www.w3.org/TR/2012/REC-view-mode-20120619/

[10:25:42.0000] <tantek>
annevk - I notice it specifically has a fullscreen feature: http://www.w3.org/TR/2012/REC-view-mode-20120619/#dfn-fullscreen

[11:10:37.0000] <matjas>
is PSP file upload broken? the exact same source document works fine over HTTP

[11:11:17.0000] <matjas>
<type 'exceptions.ValueError'>: Input object has no element: lxml.etree._ElementTree // args = (u'Input object has no element: lxml.etree._ElementTree',) // message = u'Input object has no element: lxml.etree._ElementTree'

[12:42:07.0000] <erichynds_>
in CORS, can someone explain what an "origin-list-or-null" value is? http://tools.ietf.org/html/rfc6454#section-7.1

[12:42:18.0000] <erichynds_>
trying to figure out the correct way to define multiple origin hosts

[12:42:33.0000] <erichynds_>
webkit doesn't like space separated, but it works in firefox

[12:42:43.0000] <Ms2ger>
  origin-or-null = %x6E %x75 %x6C %x6C / serialized-origin

[12:43:13.0000] <erichynds_>
can you explain what that means?

[12:43:23.0000] <Ms2ger>
Oh, "origin-list-or-null"

[12:43:25.0000] <Ms2ger>
Don't do that

[12:43:36.0000] <Ms2ger>
http://lists.w3.org/Archives/Public/www-archive/2012Jun/0001.html

[12:43:53.0000] <Ms2ger>
annevk, if you read the logs, you may want to add to the wiki

[12:44:28.0000] <erichynds_>
ah ha. so annevk is saying that it's a single origin or null?

[12:44:42.0000] <Ms2ger>
I think so

[12:44:52.0000] <erichynds_>
got it.

[12:44:52.0000] <erichynds_>
thank you

[12:45:35.0000] <Ms2ger>
Np

[12:54:51.0000] <Ms2ger>
https://twitter.com/idiot/status/215143944953135106

[13:16:19.0000] <jscheel>
does anyone know if ie9 will support the css3 "initial" property value?

[13:32:21.0000] <zcorpan>
matjas: how about "JavaScript"?

[13:54:39.0000] <annevk>
Ms2ger: add what to the logs?

[13:55:12.0000] <Ms2ger>
To the IETF wiki page

[13:55:33.0000] <annevk>
Ms2ger: seems you haven't read it

[13:55:37.0000] <Ms2ger>
No :)

[13:55:58.0000] <annevk>
curious though

[13:56:18.0000] <annevk>
I wonder what erichynds_ thought Firefox supports


2012-06-20
[19:06:55.0000] <MikeSmith>
reading message about iterators in WebIDL

[19:07:00.0000] <MikeSmith>
http://lists.w3.org/Archives/Public/public-script-coord/2012AprJun/0239.html

[19:07:05.0000] <MikeSmith>
/me looks around for heycam 

[19:07:26.0000] <heycam>
/me has replying to that on his todo list for today

[19:25:18.0000] <karlcow>
hmmm I was reading the TAG minutes

[19:25:19.0000] <karlcow>
http://www.w3.org/2001/tag/2012/06/13-minutes#item02

[19:25:37.0000] <karlcow>
it seems there is a good will but completely missing the target on frustrations.

[19:50:25.0000] <tantek>
that's some dry reading karlcow

[20:07:43.0000] <nessy>
is whatwg.org down?

[20:10:26.0000] <miketaylr>
seems to be for me, nessy

[20:30:26.0000] <karlcow>
tantek: I would say completely humid. It is super hot and humid tonight in Montreal

[20:33:39.0000] <MikeSmith>
nessy, miketaylr, whatwg.org working for me

[20:34:06.0000] <miketaylr>
MikeSmith: yeah wfm now too

[20:34:14.0000] <MikeSmith>
k

[20:35:14.0000] <MikeSmith>
karlcow: good that at least there seems to be some clear recognition that "disconnect from community"

[20:35:41.0000] <MikeSmith>
but as far as "People don't care about architecture" and "Persuading community that arch. matters", I think that's the wrong way of looking at the problem

[20:36:05.0000] <MikeSmith>
whatwg and everybody working on HTML5 and APis care about architecture

[20:36:45.0000] <MikeSmith>
difference is that they become overly religious about architectural purity to the degree that it trumps everything else

[20:36:57.0000] <karlcow>
yes I have the same feeling, just not the same idea of what the architecture should be.

[20:37:29.0000] <MikeSmith>
I meant, difference is that whatwg et all *don't* become overly religious about architectural purity

[20:37:36.0000] <karlcow>
with on top of that, bruise and arguments between people which doesn't help.

[20:38:03.0000] <karlcow>
Not sure about purity. Each community is purist with regards to its own thought framework. :)

[20:38:57.0000] <MikeSmith>
karlcow: in the minds of some the idea of what good architecture is keeping everything cleanly separated, "modularized", extensible, all those same principles they want to elevate the importance of

[20:39:13.0000] <MikeSmith>
of course the problem is, the Web platform is not clean

[20:39:23.0000] <karlcow>
yup different ideas of what the architecture should be. :)

[20:39:25.0000] <MikeSmith>
it's messy and hard to separate out things neeetly

[20:39:58.0000] <MikeSmith>
and their are costs to modularization and extensibility, along with whatever benefits they have

[20:40:30.0000] <MikeSmith>
modularization can actually make it much harder to get good interoperability

[20:41:17.0000] <MikeSmith>
and adding extensibility hooks can make things way more complicated than the actual real-world use cases on the table require

[20:41:25.0000] <karlcow>
I think what the TAG could try would be in the sake of discussion is look at the vernacular architecture. Aka the shelters, farms, dirt walls, etc. and how it could help define something which encompasses more than one way of doing things. :)

[20:41:28.0000] <MikeSmith>
and extensibility itself is not a use case

[20:41:35.0000] <MikeSmith>
eh?

[20:41:41.0000] <MikeSmith>
dirt walls?

[20:41:54.0000] <karlcow>
let me find the right name

[20:42:21.0000] <karlcow>
https://en.wikipedia.org/wiki/Pise

[20:42:59.0000] <MikeSmith>
Web Sockets protocol is a classic case of architecture/extensibility focus have huge complexity costs

[20:43:06.0000] <MikeSmith>
/me reads karlcow link

[20:43:35.0000] <MikeSmith>
karlcow: I see

[20:46:35.0000] <karlcow>
[redacted] I had written more non sense about architecture ☺

[20:46:40.0000] <karlcow>
23:48 here

[20:46:45.0000] <MikeSmith>
heh

[20:46:48.0000] <MikeSmith>
night night

[20:46:59.0000] <MikeSmith>
you mean you're heading off for the evening?

[20:47:41.0000] <karlcow>
in a few minutes. I'm human, I need my share of lullabies and dreams :)

[21:53:29.0000] <MikeSmith>
hmm

[21:53:59.0000] <MikeSmith>
«Wouldn't it be great if the power of CSS3 / JS could enable a designer / developer to customize how a browser window looks? Imagine the freedom of expression allowed for a designer / coder who is not limited to a simple viewport encased within a cumbersome looking "Chrome" based window?»

[21:54:17.0000] <MikeSmith>
no actually, not sure that would be so great at all

[21:54:28.0000] <MikeSmith>
http://iwantaneff.in/chromeless/

[22:00:42.0000] <zcorpan>
wow the people who get those tweets must hate chromeless by now

[22:02:49.0000] <MikeSmith>
heh

[22:03:10.0000] <MikeSmith>
I admire the approach for getting attention

[22:07:55.0000] <zcorpan>
http://software.hixie.ch/utilities/js/live-dom-viewer/saved/1608 chrome doesn't run the w(1) script

[23:32:42.0000] <zcorpan>
"because only you jeff aids and you just sixteen are guaranteed city use any" http://www.youtube.com/watch?v=nhVfIyFPWAA (15:28 with captions enabled)

[23:51:48.0000] <Von_Davidicus>
I've been wondering if it would be worth it to leave the old Coach Random website alongside the new one...  (the old one being the XML-based website)

[00:06:58.0000] <Von_Davidicus>
Hello, annevk.

[00:07:11.0000] <annevk>
mornings

[00:08:16.0000] <annevk>
"Each community is purist with regards to its own thought framework." is nice :)

[00:08:27.0000] <Von_Davidicus>
Heh...

[00:09:13.0000] <Von_Davidicus>
So.  Question.  Even though XML+XSLT+(XSD+DTD) is a ridiculous setup, is it a bad thing that I'm still kinda proud of pulling it off?

[00:10:07.0000] <annevk>
not at all

[00:10:31.0000] <annevk>
it's nice to know the technologies that are out there so you can learn from them

[00:10:56.0000] <annevk>
at some point in time I thought "generic XML" was the future too

[00:11:01.0000] <Von_Davidicus>
/me is working on changing the Coach Random website to a PHP/SQL setup.

[00:11:24.0000] <Von_Davidicus>
I must admit--it made for a very small website in terms of file sizes.

[00:12:04.0000] <Von_Davidicus>
And, frankly, it was fun to do.

[00:19:25.0000] <annevk>
"it's good having putting documents through the Rec process, because you have to identify WGs from which you need feedback" this TAG stuff is kind of sad

[00:20:23.0000] <annevk>
"we should liaise for example with WHATWG" well that was unexpected :)

[00:20:51.0000] <annevk>
although I'm not sure how such a liaison would work...

[00:21:05.0000] <zcorpan>
maybe they'll join the whatwg list?

[00:22:17.0000] <annevk>
it would be kind of interesting to have a technical discussion on architecture now and then

[00:33:00.0000] <kennyluck>
I can't quite imagine how such a liaison would be useful.

[00:40:20.0000] <annevk>
kennyluck: try saying "yes" more often for a while and see how it turns out ;)

[00:42:13.0000] <kennyluck>
annevk, yes man. Though I am just trying to be get inspiration in how such a thing would work.

[00:42:53.0000] <kennyluck>
Appraently Hixie and some other folks don't like telecoms, so there's only either IRC or mailing list.

[00:43:47.0000] <annevk>
I think Hixie has actually had lunch or some such with the TAG once, but it didn't really go anywhere

[00:45:29.0000] <annevk>
http://xkcd.com/1071/large/ :)

[00:46:21.0000] <annevk>
we also had lunch with the W3C AB at some point, but I'm not sure that went much anywhere either, but they're a rather slow group so maybe next year or so :)

[00:51:35.0000] <annevk>
ugh, vacation auto-responders

[00:54:35.0000] <annevk>
Hixie: should we change class=domintro to class=intro so it can be used for other things too? e.g. CSS pseudo-elements...

[00:57:40.0000] <volkmar>
annevk: you said that we need to reference HTML to define the event handler attributes

[00:57:50.0000] <volkmar>
but can't we move the related part of the spec to DOM ?

[00:58:03.0000] <volkmar>
a lot of API might use those event handlers attributes

[00:58:10.0000] <annevk>
no

[00:58:52.0000] <annevk>
volkmar: though if you figure out how to work around the issues listed in https://www.w3.org/Bugs/Public/show_bug.cgi?id=16477 maybe we can

[00:59:25.0000] <kennyluck>
Regular lunch/meetings are even more synchronous then telecons, which I consider unfair.

[01:00:16.0000] <annevk>
kennyluck: well they're equally synchronous; I was just trying to point out that there is some precedent of that happening

[01:03:37.0000] <kennyluck>
annevk, kk.

[01:15:34.0000] <jgraham>
Hixie is known to not like telecoms - http://ln.hixie.ch/?start=1263974578&count=1 right?

[01:15:38.0000] <jgraham>
(sorry ;)

[01:17:15.0000] <volkmar>
annevk: the question might sounds stupid but can't we just move the minimum so APIs can use onfoo handlers, without carring about all those HTML specfic stuff?

[01:17:42.0000] <annevk>
volkmar: I haven't found a way

[01:18:26.0000] <volkmar>
ok :(

[01:19:47.0000] <annevk>
maybe there can be some kind of split, but I'm not sure if that helps implementors since it should be a logical unit implementation-wise

[01:19:58.0000] <annevk>
and it does not help developers either trying to understand how they work

[01:21:15.0000] <volkmar>
it would help specifications to not depend on HTML5 just for event handlers attributes

[01:22:14.0000] <annevk>
they're the least important when it comes to constituencies

[01:23:55.0000] <annevk>
besides, most APIs use the event loop, depend on origin, the Window object, Navigator, etc. anyway

[01:24:16.0000] <annevk>
I'd be interesting to see one that only requires this

[01:27:38.0000] <MikeSmith>
hey all you Tidy fans and Google Docs fans, I just just pushed some code from Dave Raggett himself that enables you to clean up the unclean HTML that Google Docs exports

[01:27:51.0000] <MikeSmith>
so now you can do all your HTML authoring in Google Docs!

[01:29:29.0000] <MikeSmith>
speaking of the TAG, the TAG would be seriously enriched by the presence of Dave Raggett

[01:29:31.0000] <zcorpan>
wait, Google Docs needs Word HTML cleanup as well? isn't that just FAIL?

[01:30:43.0000] <MikeSmith>
zcorpan: dunno man I just push the code

[01:31:28.0000] <MikeSmith>
I don't think Dave has ever been on the TAG

[01:31:37.0000] <MikeSmith>
there's probably a reason for that...

[01:32:12.0000] <MikeSmith>
Dave gets into architecture astronaut mode sometimes but at the other times he just writes a lot of good code

[01:32:16.0000] <MikeSmith>
in C

[01:32:21.0000] <MikeSmith>
and even in Javascript

[01:32:34.0000] <MikeSmith>
and probably in all kinds of other stuff

[01:32:56.0000] <MikeSmith>
and he actually likes Web browsers!

[01:33:47.0000] <zcorpan>
unlike TAG people?

[01:33:57.0000] <MikeSmith>
I didn't say that

[01:34:29.0000] <abarth>
:)

[01:35:05.0000] <MikeSmith>
spending time with Dave is humbling and even inspiring

[01:35:15.0000] <MikeSmith>
as it was with DanC

[01:35:19.0000] <MikeSmith>
and Tim

[01:35:38.0000] <MikeSmith>
that's one of the really nice things about this job

[01:36:32.0000] <MikeSmith>
there's old school and then there's old schoo

[01:36:34.0000] <annevk>
to create this internet thing where you get connected with http://www.reddit.com/r/IAmA/comments/vb53k/my_17_year_old_exgirlfriend_is_now_dating_my_39/ what is this I don't even know

[01:37:22.0000] <MikeSmith>
abarth: hey, was reading http://abarth.github.com/sysapps/drafts/runtime.html today

[01:37:25.0000] <MikeSmith>
interesting stuff

[01:37:30.0000] <abarth>
yeah?

[01:37:43.0000] <abarth>
i've been working on the security model tonight

[01:37:49.0000] <MikeSmith>
cool

[01:37:54.0000] <abarth>
http://abarth.github.com/sysapps/drafts/security.html

[01:37:57.0000] <abarth>
its still very, very rough

[01:38:00.0000] <abarth>
but taking shape

[01:38:18.0000] <MikeSmith>
I don't have any feedback but it's great to have those to get a more concrete idea of where you're going with this stuff

[01:38:38.0000] <MikeSmith>
/me looks at updated security draft

[01:39:46.0000] <abarth>
i'm hopeful the charter discussion will be over soon so we can start with the technical work

[01:40:30.0000] <annevk>
hsivonen: you're advising people to go from Nokia to RIM? :)

[01:40:49.0000] <MikeSmith>
abarth: charter discussion always painful

[01:41:19.0000] <MikeSmith>
abarth: but seems like after the survey, you all are converging on some agreement about what should be in the phase 1 stuff

[01:41:19.0000] <hsivonen>
annevk: not advising. I just find it noteworthy that RIM, HP and Canonical are all hiring Qt people right now

[01:41:34.0000] <annevk>
fair enough

[01:41:55.0000] <abarth>
MikeSmith: yeah, fingers crossed

[01:42:03.0000] <annevk>
I guess they want out of Android and Qt is most viable platform?

[01:42:07.0000] <annevk>
the*

[01:42:12.0000] <smaug____>
hsivonen: interesting

[01:42:18.0000] <MikeSmith>
annevk: i'm pretty sure that reddit post is from one of my cousins in Iowa or Nebraska

[01:44:14.0000] <MikeSmith>
annevk: if you're waiting on me for anything, please remind me. I just today plowed through 1800 or so messages in my inbox, and have  300 or something left

[01:44:52.0000] <annevk>
MikeSmith: I don't think there's anything there from me

[01:45:02.0000] <MikeSmith>
OK

[01:45:06.0000] <annevk>
MikeSmith: I had some questions on URLs, but they're more or less resolved now

[01:45:10.0000] <MikeSmith>
OK

[01:45:29.0000] <MikeSmith>
I still need to figure out how I muffed up the backrefs in the URL draft

[01:45:31.0000] <annevk>
just need to find some time to do the work without getting distracted by useless Fullscreen / CORS discussions

[01:45:37.0000] <MikeSmith>
annevk: btw, any estimate on when we might do the LCWD for Web Notifications?

[01:45:52.0000] <annevk>
ah, I'll work on that instead

[01:46:03.0000] <annevk>
MikeSmith: lets publish it next week

[01:46:12.0000] <MikeSmith>
/me reminds himself that PLH needs to get us a charter extension

[01:46:15.0000] <annevk>
my vacation starts next week, but I can do that

[01:46:17.0000] <MikeSmith>
annevk: OK thanks

[01:46:57.0000] <annevk>
two month vacation time and I'm not really sure what I'm gonna do with it all so I guess I'll end up working a bit at least

[01:47:09.0000] <MikeSmith>
oh

[01:47:17.0000] <MikeSmith>
you could come to Tokyo

[01:47:38.0000] <annevk>
yeah I want to, but unfortunately the plans I do have kind of make that impossible :(

[01:47:42.0000] <MikeSmith>
it's not unbearably humid yet, but it should be by the time you'd get here

[01:49:03.0000] <annevk>
I don't really have a stretch of two-three weeks with nothing to do where I could come to Tokyo

[01:49:22.0000] <annevk>
I would have otherwise

[01:52:15.0000] <annevk>
is

[01:52:16.0000] <annevk>
"The Web Notifications WG is planning to move Web Notifications to W3C Last Call meaning we don't intend to change it. But we might have missed something and would therefore appreciate your review of http://dvcs.w3.org/hg/notifications/raw-file/tip/Overview.html and any comments you might have at public-web-notification⊙wo"

[01:52:22.0000] <annevk>
relatively okay English?

[01:55:57.0000] <MikeSmith>
annevk: looks great to me

[02:00:57.0000] <Ms2ger>
annevk, sounds like good Dutch to me ;)

[02:01:39.0000] <annevk>
Ms2ger: je ne compris pas

[02:01:58.0000] <kennyluck>
doesn't sound like normal annevk-ish :p

[02:03:42.0000] <Ms2ger>
Oh hey

[02:03:51.0000] <Ms2ger>
First bug report about Attr.firstChild

[02:05:28.0000] <annevk>
kennyluck: hopefully it does not sound too much like an actual Chair either

[02:06:41.0000] <annevk>
MikeSmith: http://lists.w3.org/Archives/Public/public-web-notification/2012Jun/0028.html means we get past the pubteam right?

[02:07:28.0000] <MikeSmith>
yeah

[02:09:35.0000] <annevk>
thanks for the reminder

[02:09:48.0000] <annevk>
I keep forgetting about notifications, I planned to do this Monday :)

[02:10:00.0000] <MikeSmith>
heh

[02:10:10.0000] <MikeSmith>
lot of good stuff going on

[02:10:35.0000] <MikeSmith>
hey we are likely to get the Encoding spec into i18n WG

[02:10:57.0000] <MikeSmith>
talkd with Richard and PLH about it yesterday

[02:11:21.0000] <MikeSmith>
Richard needs to write a new draft charter

[02:11:29.0000] <MikeSmith>
then we go from there

[02:11:50.0000] <MikeSmith>
I think he'll have it drafted next week

[02:14:46.0000] <Ms2ger>
Yay, charters

[02:15:17.0000] <annevk>
MikeSmith: oh interesting

[02:16:47.0000] <MikeSmith>
annevk: ok, I also just now updated the old cvs link on http://www.w3.org/2010/web-notifications/

[02:16:53.0000] <MikeSmith>
per dude's mail

[02:17:27.0000] <annevk>
cool

[02:17:40.0000] <annevk>
should maybe create a wiki page for the use cases and such that were originally in the spec

[02:17:56.0000] <MikeSmith>
I'm happy for somebody to do that :)

[02:18:57.0000] <MikeSmith>
right now I only got 14 minutes battery left and trying to get github mirroring thing set up for matjas JS tests

[02:19:32.0000] <annevk>
I like how instead of the title wrapping it just gives you dots at the end on our home page

[02:19:41.0000] <annevk>
text-overflow:ellipsis ftw

[02:20:09.0000] <annevk>
MikeSmith: no worries, I can handle that

[02:20:19.0000] <MikeSmith>
cool

[02:22:19.0000] <Ms2ger>
annevk, man, more vacationing? ;)

[02:22:57.0000] <annevk>
Ms2ger: well I skipped part of university so I have some catching up to do

[02:29:04.0000] <MikeSmith>
matjas or Ms2ger : please push something to the web-ecmscript dvcs.w3.org repo and lemme know what happens

[02:29:23.0000] <Ms2ger>
Do you have something to test? :)

[02:29:27.0000] <MikeSmith>
within the next 3 minuts, preferable

[02:29:33.0000] <MikeSmith>
Ms2ger: nope

[02:29:39.0000] <MikeSmith>
add a README maybe?

[02:29:59.0000] <Ms2ger>
/me looks

[02:32:15.0000] <MikeSmith>
1 minute... I will be back on in 90 minutes or so and will check back then

[02:39:02.0000] <matjas>
MikeSmith (if you read the logs): this happens http://pastie.org/pastes/4119544/text

[02:48:32.0000] <matjas>
any feedback so far on http://mathias.html5.org/specs/web-ecmascript/? I copied the Web ECMAScript wiki page, made some corrections, and added some more things

[02:51:36.0000] <[tm]>
?

[02:52:10.0000] <jgraham>
matjas: You incorrectly use RFC2119 language in examples

[02:52:26.0000] <jgraham>
e.g. "For example, var var; must throw a SyntaxError, but e.g. var v\u0061r; should work — even though strictly speaking, the ECMAScript spec disallows it."

[02:52:46.0000] <matjas>
s/must/should/, then?

[02:52:47.0000] <jgraham>
Just makes them statements of fact

[02:53:02.0000] <matjas>
k

[02:53:04.0000] <jgraham>
i.e. don't use must.should.etc. at all

[02:54:00.0000] <matjas>
jgraham: as you’re the one who wrote those algorithms, am I doing `EscapeAttributeValue` (and others) right?

[02:54:42.0000] <matjas>
(I noticed WebKit escapes single quotes too, although that seems unnecessary)

[02:56:58.0000] <jgraham>
I think personally I would make those algorithms have immutable variables

[02:57:08.0000] <jgraham>
And phrase it like:

[02:58:13.0000] <jgraham>
Let /escaped/ be /value/ with each U+0022 QUOTATION MARK characters replaced by the string "&quot;"

[02:58:19.0000] <jgraham>
Return /escaped/

[02:58:22.0000] <jgraham>
Or something

[02:58:34.0000] <jgraham>
But I don't think that is perfect either

[02:59:22.0000] <matjas>
what else is needed to make it perfect?

[02:59:31.0000] <jgraham>
I'm not sure

[03:00:00.0000] <jgraham>
If you were really pedantic, you could make "replaced by" explicit

[03:00:26.0000] <jgraham>
i.e. loop through the string and examine each character

[03:00:34.0000] <matjas>
wow

[03:00:35.0000] <zcorpan>
i thought they shouldn't do any escaping

[03:00:42.0000] <jgraham>
see what HTML does for similar things

[03:01:12.0000] <matjas>
jgraham: I did exactly that before writing that up

[03:01:31.0000] <jgraham>
Maybe I am giving you bad advice then :)

[03:03:01.0000] <zcorpan>
matjas: opera and firefox don't escape the value. have you tested ie?

[03:03:53.0000] <matjas>
zcorpan: yeah but shouldn’t they? (haven’t tested IE)

[03:04:04.0000] <zcorpan>
matjas: see /topic

[03:04:27.0000] <matjas>
damn

[03:04:37.0000] <zcorpan>
unless there's a security problem or something, i think we should go with the majority

[03:07:55.0000] <zcorpan>
matjas: the comment syntax section is pretty vague, and should probably hook in to ES in some way

[03:08:22.0000] <matjas>
i have some TODOs as HTML comments

[03:08:23.0000] <jgraham>
Well of course it could be a security problem if someone was doing something dumb

[03:10:04.0000] <matjas>
IE10 doesn’t escape " and uppercases EVERYTHING

[03:10:43.0000] <matjas>
same in older IEs

[03:11:43.0000] <matjas>
would it break backcompat if newer browsers started escaping `"`? are there legitimate scripts out there (i.e. no crazy XSS hacks) that rely on the non-escaped behavior?

[03:11:59.0000] <Ms2ger>
Probably

[03:12:46.0000] <matjas>
hard to imagine, and it doesn’t seem to be a problem for WebKit

[03:13:14.0000] <matjas>
…but that’s not how this thing works, is it.

[03:13:36.0000] <smaug____>
annevk: so per notification spec tag isn't bound to an origin?

[03:13:56.0000] <smaug____>
I think it should be

[03:16:26.0000] <zcorpan>
matjas: i tried grepping in web200904 but it's hard to tell whether ysf=ysf.fontcolor(ac); has ac already-escaped or not

[03:17:28.0000] <matjas>
any results for ''.link('"') or similar?

[03:18:09.0000] <zcorpan>
i included link at first but it included so much jQuery and other link()s that it was mostly noise

[03:19:12.0000] <zcorpan>
but there's some

[03:19:15.0000] <zcorpan>
document.write(title.big().bold().link(base + link));

[03:19:16.0000] <zcorpan>
		document.write("View Our Open Positions".link(base));

[03:20:00.0000] <zcorpan>
<p>For more information please contact <script>document.write(String.fromCharCode(-186-0x60+0x15b,0144,-0324+0501,0373-0222,0156,-0xe2+0x14b,0xba-0107,-0xce+0502,0x3d+065,-47+0220,-83-155+0x162,0157,-95-0256+0577).link(String.fromCharCode(0155,0xd3-0x72,0151,-166+0x112,0x74,56+0xb4-125,072,0x6c,-0x49+0262,040-52+135,0141,0100,-045+0206,0234-40,-0x90+0340+36,0x6f,0162,0151+0x5,-0xf3-0265+0x20d,-0246+255+32,66+49,0x73+034

[03:20:01.0000] <zcorpan>
-0xf2+0377,0156,173-0110,105,0x90-213+0263,230+167-298,0x8d+150-0xf5,0x6c-0x9,245-0x86,109)));</script>.</p>

[03:20:06.0000] <matjas>
holy…

[03:21:11.0000] <zcorpan>
seems there was less noise in web200904 compared to the newer data set with "top 10,000 sites"

[03:21:46.0000] <matjas>
hah, even that one didn’t contain " in the attribute value: <a href="mailto:lisa⊙ac">Administrator</a>

[03:22:39.0000] <matjas>
why would anyone expect and *rely on* these functions returning invalid HTML in case the value includes `"`?

[03:23:54.0000] <zcorpan>
the interesting question isn't "why"

[03:24:58.0000] <zcorpan>
$ grep -aPh "\.(anchor|fontcolor|fontsize|link)\s*\(\s*'[^']*\"" web200904 produced no results

[03:24:59.0000] <hsivonen>
annevk, smaug____: RIM and Canonical hiring Qt folks is interesting but not *surprising* but HP hiring Qt folks or *anyone* for the division formerly known as Palm is suprising

[03:26:16.0000] <smaug____>
hsivonen: RIM hiring anyone is surprising

[03:27:49.0000] <matjas>
the only reason anyone would rely on this (that I can think of) is XSS

[03:27:52.0000] <hsivonen>
smaug____: well, RIM is known to try to get itself back together by doing Qt stuff

[03:27:54.0000] <matjas>
''.link('"><script>alert("h4x")</script>'); // "<a href=""><script>alert("h4x")</script>"></a>"

[03:28:12.0000] <hsivonen>
smaug____: meanwhile, it seems the old Java folks from RIM are migrating to Android-related jobs

[03:29:40.0000] <hsivonen>
I wonder how easy it is for HP or RIM to get Norwegian or Finnish ex-Nokia people to relocate to Ontario or California, when the longevity of RIM and the division formerly known as Palm doesn't look so good

[03:30:17.0000] <hsivonen>
of the companies hiring Qt folks, Canonical has the advantage that they don't require relocation

[03:30:43.0000] <hsivonen>
/me is quite happy not to be an ex-Nokia person forced to look for a new job

[03:31:40.0000] <matjas>
data:text/html,<script>document.write(''.link('"><script>alert("h4x")<\/script>'));</script> XSS vector for Opera, Firefox and IE

[03:31:44.0000] <annevk>
smaug____: agreed

[03:33:04.0000] <annevk>
matjas: jgraham: saying "replaced by" is fine

[03:33:34.0000] <matjas>
yay

[03:34:12.0000] <annevk>
matjas: e.g. Return the result of replacing all occurrences of X in Y by Z

[03:34:38.0000] <zcorpan>
matjas: i can't find any legitimate uses of " in web200904, and since it's a potential xss problem, it seems OK to require escaping the "

[03:35:00.0000] <zcorpan>
(or any uses at all)

[03:35:01.0000] <matjas>
zcorpan: ok, I’ll add a note and an HTML comment linking back to these logs

[03:40:06.0000] <matjas>
thanks for grepping :)

[03:40:25.0000] <annevk>
matjas: you should require an explicit HTML escape, not allow all of them

[03:41:03.0000] <annevk>
matjas: I recommend requiring &quot; as HTML uses that too

[03:41:05.0000] <jgraham>
(that was the main point I was trying to make with my previous comment, but it got lsot a bit under how to phrase it)

[03:41:34.0000] <annevk>
matjas: see e.g. http://www.whatwg.org/specs/web-apps/current-work/#escapingString

[03:42:36.0000] <annevk>
matjas: looks cool btw

[03:43:03.0000] <annevk>
matjas: note that for Date there's a whole lot more to define; basically new Date(stuff) is not defined for a lot of date formats

[03:43:16.0000] <matjas>
annevk: thanks, will do

[03:43:53.0000] <zcorpan>
matjas: nice work

[03:43:54.0000] <matjas>
oh btw i specced String#substr, in case anyone wants to review that

[03:44:08.0000] <zcorpan>
isn't substr in ES proper?

[03:44:12.0000] <matjas>
zcorpan: no

[03:44:23.0000] <matjas>
i wasn’t sure if min() and max() need to be defined as abstract operations as well

[03:44:34.0000] <zcorpan>
http://es5.github.com/#B.2.3

[03:44:59.0000] <matjas>
daaaamn

[03:45:39.0000] <zcorpan>
seems that whole section is non-normative though

[03:45:51.0000] <zcorpan>
which is bogus

[03:47:41.0000] <zcorpan>
but you could reference Annex B and say it must be implemented, or some such

[03:48:15.0000] <annevk>
"This non-normative annex suggests uniform semantics for such properties without making the properties or their semantics part of this standard." lol

[03:50:32.0000] <hsivonen>
what's the deal with TC39 refusing to stardardize stuff that needs to be implemented?

[03:50:59.0000] <hsivonen>
is the necessity of implementation in doubt?

[03:51:14.0000] <hsivonen>
or do they want non-browser impls without this stuff to be "conforming"?

[03:51:30.0000] <annevk>
brendan always tell me they have a different approach to standardization and he thinks it is good to have standards bodies compete on strategy

[03:51:51.0000] <annevk>
I don't necessarily disagree, but I do disagree with the strategy :)

[03:52:13.0000] <matjas>
they’re working on explicitly forbidding Web ECMAScript identifiers in the spec, too: https://bugs.ecmascript.org/show_bug.cgi?id=277

[03:53:09.0000] <matjas>
(or allowing it, depending on the outcome of their research)

[04:00:31.0000] <hsivonen>
Use case for CSS: (unless you are prone to seizures or are not allowed to make noise at your location), go to http://plone.org/ and type "batman " into the search field

[04:02:31.0000] <annevk>
matjas: speccing __proto__ sounds cool

[04:02:42.0000] <annevk>
matjas: and if they actually update the browsers too, then it's cool

[04:02:53.0000] <matjas>
TIL it’s actually happening in ES6!

[04:03:02.0000] <annevk>
matjas: but not having the spec match browsers is uncool

[04:03:09.0000] <annevk>
matjas: yeah, that's what I meant :)

[04:03:13.0000] <Ms2ger>
hsivonen, heh

[04:22:50.0000] <gsnedders>
hsivonen: TC39 basically agreed to public something along the lines of Web ECMAScript (whether as an appendix or what is another question). Some things are likely to make it into the spec, some aren't.

[04:23:37.0000] <gsnedders>
hsivonen: Library stuff (apart from stuff like Sting.prototype.bold, etc., which is obviously very web-specific) is likely to get into the main spec, esp. if it can't legally be implemented as host objects.

[04:24:22.0000] <gsnedders>
annevk: Annex B is becoming, "optional, but if you implement an extention with this name, required"

[04:26:44.0000] <jgraham>
/me wonders if SVG scripts are getting the force-async flag

[04:27:42.0000] <annevk>
gsnedders: sounds so very political

[04:33:41.0000] <jgraham>
/me gets a resounding "maybe"

[04:35:30.0000] <jgraham>
hsivonen: Know anything about the differences bwtween SVG script and HTML script (in gecko?)

[04:36:06.0000] <hsivonen>
jgraham: we specifically pretend that async and defer attributes don't exist for SVG scripts, since the SVG WG hasn't blessed them

[04:36:10.0000] <Ms2ger>
If anybody does, he does :)

[04:36:11.0000] <hsivonen>
which is kinda silly

[04:37:09.0000] <gsnedders>
annevk: There's not really that much in way of politics mostly.

[04:37:31.0000] <gsnedders>
At least on the public list.

[04:37:39.0000] <gsnedders>
/me has never been on the private one

[04:38:00.0000] <jgraham>
hsivonen: Yeah, it is. So you also don't have a force-async flag?

[04:38:14.0000] <MikeSmith>
annevk: I agree with brendan about it being good to have standards bodies compete on strategy. So let's make an actual separate standard, based on the EcmaScript spec, but in line with what browsers actually implement, with the Web EcmaScript parts and other things that should be normative being normative. And call it the JavaScript Standard.

[04:39:22.0000] <jgraham>
Standards bodies *usually* only compete for new specs, so the idea of better living through competition is rather weak

[04:39:56.0000] <annevk>
MikeSmith: matjas: I'm totally in favor of calling it "JavaScript"

[04:40:06.0000] <jgraham>
Obviously HTML is an exception, but the W3C managed to fuck that up so bad it defies belief

[04:40:55.0000] <hsivonen>
jgraham: the force-async flag only exists for HTML scripts

[04:42:34.0000] <hsivonen>
jgraham: I'd be OK with adding the async and defer attributes and the force-async flag to SVG scripts with the exact same semantics as with HTML scripts

[04:43:43.0000] <MikeSmith>
matjas or Ms2ger : OK please try again a push to the web-ecmascript repo

[04:44:05.0000] <MikeSmith>
I had forgotten to set something but I think I have it right now

[04:44:40.0000] <matjas>
MikeSmith:

[04:44:41.0000] <matjas>
remote: abort: Permission denied: /var/hg/repos/web-ecmascript/.git/objects/40

[04:44:41.0000] <matjas>
remote: fatal: 'github' does not appear to be a git repository

[04:44:41.0000] <matjas>
remote: fatal: The remote end hung up unexpectedly

[04:44:41.0000] <matjas>
remote: warning: changegroup.github hook exited with status 128

[04:44:50.0000] <MikeSmith>
oops

[04:44:53.0000] <jgraham>
It seems like a good idea to me, but it would be running ahead of the spec a bit. I can't imagine the SVG2 process is going to be very fast

[04:45:38.0000] <heycam>
hsivonen, jgraham, we want script to have the same features in SVG as it does in HTML

[04:45:40.0000] <MikeSmith>
matjas: OK, just now fixed that. please try again

[04:45:53.0000] <MikeSmith>
matjas: oh, hang on

[04:45:54.0000] <heycam>
maybe not a fast process, but we could at least get that in the spec without too much work

[04:45:59.0000] <MikeSmith>
I have to set the perms

[04:46:22.0000] <matjas>
MikeSmith:

[04:46:23.0000] <matjas>
remote: exporting hg objects to git

[04:46:23.0000] <matjas>
remote: abort: Permission denied: /var/hg/repos/web-ecmascript/.git/objects/40

[04:46:23.0000] <matjas>
remote: ERROR: Permission to w3c/web-ecmascript.git denied to w3c-bots.

[04:46:23.0000] <matjas>
remote: fatal: The remote end hung up unexpectedly

[04:46:30.0000] <matjas>
ahh sorry

[04:46:40.0000] <jgraham>
heycam: I want the spec to be a living standard, so that this kind of update doesn't need to wait on multi-year cycles ;)

[04:46:57.0000] <heycam>
well it will be in th ED, and that spec will be publicly visible

[04:46:57.0000] <MikeSmith>
matjas: OK fixed the perms now, ready to be tried again

[04:46:58.0000] <jgraham>
But good to know that there is enthusiasm for the idea

[04:47:21.0000] <Ms2ger>
Oh hey, it's heycam

[04:47:21.0000] <matjas>
MikeSmith: same error

[04:47:22.0000] <matjas>
remote: exporting hg objects to git

[04:47:22.0000] <matjas>
remote: ERROR: Permission to w3c/web-ecmascript.git denied to w3c-bots.

[04:47:22.0000] <matjas>
remote: fatal: The remote end hung up unexpectedly

[04:47:22.0000] <matjas>
remote: warning: changegroup.github hook exited with status 128

[04:47:27.0000] <heycam>
hi Ms2ger

[04:47:28.0000] <annevk>
smaug____: yt?

[04:47:34.0000] <heycam>
we're rarely on at the same time these days

[04:47:40.0000] <MikeSmith>
matjas: OK, will fix that now

[04:47:46.0000] <annevk>
smaug____: would you implement the origin stuff by basically storing the origin on the Notification object?

[04:47:53.0000] <annevk>
smaug____: would that be logical?

[04:48:44.0000] <matjas>
http://gavinsharp.com/irc/whatwg.html (from /topic) seems to 404

[04:48:45.0000] <MikeSmith>
matjas: OK, ready for another ry

[04:49:00.0000] <annevk>
matjas: 403 here

[04:49:01.0000] <matjas>
it worked!

[04:49:07.0000] <MikeSmith>
sweet

[04:49:10.0000] <matjas>
annevk: whoops, yeah 403

[04:49:31.0000] <jgraham>
matjas: Yeah, it worked the other day for me

[04:49:40.0000] <annevk>
gavin: gavin_: your irc/whatwg.html 403's...

[04:50:12.0000] <jgraham>
matjas: (since you were obviously wondering, no you haven't overtaken annevk on the loser board yet)

[04:50:30.0000] <matjas>
hah!

[04:52:57.0000] <hsivonen>
(aside: since SVG scripts can nest, supporting async and defer for them will complicate the HTML parser a bit)

[04:53:49.0000] <hsivonen>
oh, also: at one point, src="" (empty string value) on HTML and xlink:href="" on SVG had different behavior

[04:53:58.0000] <hsivonen>
let's see if that's still the case...

[04:54:36.0000] <jgraham>
Sigh, I didn't mean to end up testing this stuff today

[04:55:10.0000] <jgraham>
I only meant to do document.write in SVG, and then realised there was a lot more scope

[04:56:53.0000] <jgraham>
(what is the problem with async and defer in SVG? Does it also apply to XHTML?)

[04:57:11.0000] <hsivonen>
Hixie's live DOM viewer seems broken

[04:57:17.0000] <hsivonen>
(or Gecko is very broken)

[04:59:17.0000] <hsivonen>
jgraham: looks like both Firefox and Opera have a bug here, but different bugs. WebKit works correctly: http://software.hixie.ch/utilities/js/live-dom-viewer/?saved=1613

[04:59:46.0000] <hsivonen>
jgraham: but it looks like Firefox now gives the same treatment to empty src in HTML and empty xlink:href in SVG

[05:01:20.0000] <jgraham>
Nice bugs you have there

[05:01:30.0000] <jgraham>
s/have/found/

[05:12:47.0000] <matjas>
how can I tell Anolis to use data/references.json? I’m getting “SyntaxError: Specification not found: ECMASCRIPT” although there’s an entry for it

[05:13:08.0000] <matjas>
/spam gsnedders Ms2ger jgraham

[05:13:41.0000] <Ms2ger>
Are you sure? :)

[05:13:59.0000] <matjas>
Ms2ger: what am I missing?

[05:14:13.0000] <Ms2ger>
/me looks

[05:14:27.0000] <matjas>
is there a command-line flag I need to pass to `anolis` explicitly or smth?

[05:15:33.0000] <Ms2ger>
So

[05:15:44.0000] <Ms2ger>
references.json is for the References section

[05:16:12.0000] <Ms2ger>
That error comes from the cross-references, I think

[05:16:45.0000] <matjas>
I expect <span data-anolis-spec=ECMASCRIPT>…</span> to create a new entry in the References section, is that correct?

[05:16:52.0000] <Ms2ger>
No

[05:17:00.0000] <Ms2ger>
/me looks for the incantation

[05:17:26.0000] <Ms2ger>
<span data-anolis-ref class=informative>DOM2TR</span>

[05:17:35.0000] <matjas>
Ms2ger: Thanks!

[05:17:38.0000] <Ms2ger>
Np

[05:17:49.0000] <Ms2ger>
I really really should write more documentation :)

[05:18:11.0000] <matjas>
yes please, for n00bs like me :(

[05:18:45.0000] <matjas>
gsnedders’s example files are very minimal

[05:22:44.0000] <zcorpan>
matjas: data-anolis-spec= is for cross-spec cross-references

[05:23:00.0000] <zcorpan>
matjas: e.g. if you want a link directly to ES's ToString

[05:23:09.0000] <annevk>
Ms2ger: add it to http://wiki.whatwg.org/wiki/Howto_spec so we get all specs aligned

[05:23:27.0000] <annevk>
Ms2ger: also, maybe we should start supporting <span data-spec= and <span data-ref>

[05:23:37.0000] <annevk>
Ms2ger: because why type -anolis- when we really don't have to

[05:23:51.0000] <Ms2ger>
Or hey, <span spec> :)

[05:23:59.0000] <zcorpan>
<spec>!

[05:24:03.0000] <Ms2ger>
<s>

[05:24:04.0000] <annevk>
yeah if we strip it out anyway

[05:24:05.0000] <Ms2ger>
Oh

[05:24:17.0000] <matjas>
zcorpan: what should that look like then? <span data-anolis-spec=ecmascript-tostring>…</span> and then edit some file in the data/ folder?

[05:24:42.0000] <annevk>
matjas: yes

[05:24:51.0000] <annevk>
not sure we have one for ecmascript yet

[05:24:54.0000] <Ms2ger>
We don't

[05:25:04.0000] <annevk>
matjas: should look like the data/xref files

[05:25:18.0000] <matjas>
cool, thanks all

[05:25:19.0000] <Ms2ger>
And add a line to data/specs.json

[05:25:22.0000] <zcorpan>
except it'd be <span data-anolis-spec=ecmascript title=tostring>…</span> i think

[05:25:28.0000] <Ms2ger>
Right

[05:25:36.0000] <zcorpan>
or <span data-anolis-spec=ecmascript>ToString</span>

[05:25:41.0000] <Ms2ger>
^

[05:26:42.0000] <annevk>
matjas: ^

[05:27:32.0000] <matjas>
roger that

[05:29:58.0000] <Ms2ger>
matjas, oh, and Mozilla is always hiring... ;)

[05:53:30.0000] <annevk>
matjas: http://opera.jobs/

[05:53:40.0000] <annevk>
Ms2ger: ^

[05:53:47.0000] <Ms2ger>
annevk, boo :)

[05:53:51.0000] <annevk>
Ms2ger: also, how can you offer first

[05:54:03.0000] <annevk>
Ms2ger: Mozilla is sloppy seconds, Opera offers first

[05:54:04.0000] <matjas>
I like where this is going

[05:54:29.0000] <Ms2ger>
"Microsoft Wins Congressional Backing For Do-Not-Track Default In IE10"

[05:59:54.0000] <hsivonen>
Ms2ger: URL?

[06:00:24.0000] <hsivonen>
Why doesn't the Congress just legislate the default without having to send any bytes then?

[06:00:52.0000] <Ms2ger>
politics.slashdot.org/story/12/06/20/1231225/microsoft-wins-congressional-backing-for-do-not-track-default-in-ie10

[06:01:16.0000] <hsivonen>
http:// adding not working when copying, eh?

[06:01:23.0000] <hsivonen>
Ms2ger: but thanks

[06:01:33.0000] <Ms2ger>
Heh

[06:01:38.0000] <Ms2ger>
I blame Firefox

[06:01:51.0000] <Ms2ger>
Or myself, this is a pretty old build

[06:22:29.0000] <annevk>
matjas: if you <dfn title=ToHTMLTag>...</dfn> you can do <code title=toHTMLTag>... later on and it will hyperlink them together

[06:22:47.0000] <annevk>
matjas: in addition the fragment identifier will be #tohtmltag rather than the longish string it is now

[06:22:56.0000] <matjas>
annevk: awesome!

[06:23:02.0000] <matjas>
i was wondering about that

[06:23:44.0000] <annevk>
matjas: basically it either stringifies the contents of a <dfn> but you can override that by specifying a title=""

[06:25:21.0000] <zcorpan>
<dfn title=ToHTMLTag>...</dfn> <code>ToHTMLTag</code> also works

[06:31:12.0000] <annevk>
right

[06:36:55.0000] <jacobrask>
What is supposed to happen when a browser encounters pattern=""?

[06:40:17.0000] <zcorpan>
http://www.whatwg.org/specs/web-apps/current-work/multipage/common-input-element-attributes.html#compiled-pattern-regular-expression

[06:41:05.0000] <annevk>
jacobrask: anything in particular you are wondering about?

[06:41:15.0000] <jacobrask>
yes, I'm reading that, so does an empty string mean the same thing as "has no such attribute"?

[06:41:46.0000] <zcorpan>
ah. no, the attribute is still present even if the value is the empty string

[06:42:11.0000] <jacobrask>
annevk: Well we could take it in #staff ;) but Opera seems to fail any value for pattern="" while Chrome accepts any value

[06:43:10.0000] <zcorpan>
afaict from the spec it should compile, so only the empty string would be valid for the field

[06:43:33.0000] <jacobrask>
right, Opera accepts the empty string

[06:44:08.0000] <zcorpan>
bug in chrome then

[06:44:23.0000] <annevk>
sitecompat?

[06:44:26.0000] <jacobrask>
yep. Firefox is same as Opera

[06:44:52.0000] <jacobrask>
nope, a site I'm working on, wondered where/if I should report a bug..

[06:45:46.0000] <annevk>
jacobrask: https://bugs.webkit.org/ it is

[06:45:55.0000] <odinho>
jgraham: So Paul Irish imported the docs from testharness.js to readme.md. -- Don't really like to have to update docs two places. https://github.com/paulirish/testharness.js/commit/7bdd2d76a5afeb2d80b5cd48ce4c403c37f47c18

[06:46:38.0000] <odinho>
paul_irish: Were you thinking about pushing that to mercurial, or is it mostly to have a github.com-page that's easy to link to etc?

[06:46:58.0000] <zcorpan>
<label for="i51">Ваше имя:</label><input type="text" maxlength="50" name="answer_5" id="i51" pattern="string" notice="Проверьте, пожалуйста, ответили ли Вы на все вопросы анкеты">

[06:46:58.0000] <zcorpan>
						<label for="i52">Телефон:</label> <input type="text" maxlength="16" name="answer_6" id="i52" pattern="string" notice="Проверьте, пожалуйста, ответили ли Вы на все вопросы анкеты">

[06:48:05.0000] <odinho>
jacobrask: It has been proposed to rename this channel to #opera :P

[06:48:47.0000] <jacobrask>
:)

[06:50:47.0000] <zcorpan>
/me finds no empty-value pattern attributes in his data

[06:52:02.0000] <jacobrask>
I create input elements and set some attributes conditionally

[06:52:40.0000] <jacobrask>
So really I expected/hoped for pattern="" to behave as in WebKit

[06:53:34.0000] <jgraham>
odinho: Agreed, I think we need to reformat the inline docs in markdown or so and have a script that can automatically extract them on push

[06:54:04.0000] <jgraham>
I also think we need w3c-test.org to become a pretty website with all the info about how to write tests for W3C

[06:54:15.0000] <odinho>
jgraham: Yeah. :D'

[06:55:06.0000] <odinho>
jgraham: BTW, I deleted my testharness.js-repo that was forked from you, to make one forked from w3c instead, -- but now it won't let me do that. -- I guess GitHub has some old reference lying around crashing it.

[06:56:48.0000] <jgraham>
Yeah, seems to be a problem with the forking system

[06:56:54.0000] <odinho>
jgraham: Oh, tobie did the same as paul_irish :] Common theme that.

[06:57:08.0000] <jgraham>
(that it is hard to change the upstream)

[06:57:31.0000] <odinho>
The "docs" on stackoverflow said delete + do it again would be a strategy. Guess it failed :P

[07:07:45.0000] <MikeSmith>
hahaha Opera guys trying to do an "Occupy whatwg"

[07:08:56.0000] <MikeSmith>
speaking of charters I just finished writing a draft of a new charter for the HTML WG

[07:09:27.0000] <MikeSmith>
which is scheduled to be unleashed on the world for review tomorrow

[07:09:44.0000] <MikeSmith>
good times ahead

[07:17:39.0000] <jgraham>
MikeSmith: Yeah, W3C team are the 1%, with their private mailing lists and close connections that they use to oppress the masses

[07:18:06.0000] <MikeSmith>
jgraham: we prefer the term "illuminati"

[07:18:56.0000] <MikeSmith>
and we're not oppressing the masses, we're cleverly manipulating and exploiting them

[07:32:59.0000] <matjas>
jgraham, odinho, paul_irish: that’s why you need to have the docs in one place, being the source code, and use a tool that automatically generates the Markdown-formatted docs for you

[07:33:30.0000] <odinho>
matjas: We have it one place now, - in the testharness.js-file.

[07:33:54.0000] <matjas>
odinho: yeah, but a “readable” version would be useful, like the one paul_irish created manually

[07:34:11.0000] <odinho>
matjas: Yeah, so we should get some commit-hook to make stuff like that.

[07:34:16.0000] <matjas>
a README.md file that is autogenerated from source, and visible in the GitHub repo, would be perfect

[07:34:42.0000] <matjas>
*cough* http://jonathan.tang.name/code/pyjsdoc *cough*

[07:34:45.0000] <odinho>
matjas: Yea. Although I like jgraham's proposal of making w3c-test.org a really nice page better. But they don't exclude eachother.

[07:35:35.0000] <matjas>
exactly

[07:36:07.0000] <odinho>
http://jonathan.tang.name/files/pyjsdoc/apidocs/ << kinda empty though ;-)

[07:38:12.0000] <matjas>
I personally use docdown (PHP; https://github.com/jdalton/docdown) but Ms2ger seemed to prefer Python

[07:38:28.0000] <odinho>
...and odinho and jgraham and possibly more ;-)

[07:39:12.0000] <odinho>
So agree with Ms2ger there, -- but not in dvcs choice :-)

[07:39:27.0000] <Ms2ger>
YOU'RE WRONG

[07:39:29.0000] <Ms2ger>
:)

[07:39:41.0000] <odinho>
^^

[07:41:51.0000] <Ms2ger>
MikeSmith, does the new HTMLWG charter give you unlimited power to override any decisions? :)

[07:43:53.0000] <MikeSmith>
Ms2ger: no, but it does introduce a new role

[07:44:02.0000] <MikeSmith>
along with editor, chair, team contact

[07:44:07.0000] <Ms2ger>
Werewolf?

[07:44:16.0000] <MikeSmith>
Enforcer

[07:45:40.0000] <zcorpan>
MikeSmith: now you might as well just leak the whole thing

[07:45:40.0000] <MikeSmith>
wanted to call it Punisher but got overruled

[07:45:45.0000] <MikeSmith>
heh

[07:46:17.0000] <Ms2ger>
Oh, you mean it wasn't you who put it on wikileaks?

[07:46:58.0000] <MikeSmith>
the butler did it

[07:47:22.0000] <MikeSmith>
or rather I should say my gentleman's gentleman

[07:47:28.0000] <Ms2ger>
Said the actress to the pope

[07:49:44.0000] <MikeSmith>
anyway, the clock will soon strike midnight here and I figure I have done my quota of damage for today, so I shall drop from my PC soon

[07:49:54.0000] <MikeSmith>
if anybody needs anything, ping me at [tm]

[07:50:14.0000] <Ms2ger>
Good night, then :)

[07:51:29.0000] <MikeSmith>
cheers

[07:51:46.0000] <annevk>
nn MikeSmith

[07:51:52.0000] <MikeSmith>
g'night

[07:57:18.0000] <annevk>
saying Last Call is imminent is a good way to get comments

[07:58:21.0000] <annevk>
maybe we should say "Last Call is imminent" about a "random" chosen spec each week (filtering duplicates)

[07:59:10.0000] <Ms2ger>
DOM4? :)

[07:59:25.0000] <Ms2ger>
/me checks when the charter claims DOM4 will be a rec

[07:59:31.0000] <annevk>
sh

[07:59:38.0000] <AryehGregor>
"immediately before the charter expires"

[08:00:03.0000] <annevk>
if they find someone to maintain a branch of DOM4 while the rest of us edit DOM I guess that works

[08:00:08.0000] <Ms2ger>
Q1 2013

[08:00:15.0000] <AryehGregor>
When does the charter expire?

[08:00:19.0000] <Ms2ger>
31 May 2014

[08:00:31.0000] <AryehGregor>
Okay, so I guess I was wrong.

[08:21:28.0000] <gavin>
annevk: looking into it

[08:21:36.0000] <gavin>
I think dreamhost broke something :(

[08:58:47.0000] <odinho>
https://github.com/w3c/testharness.js/pull/2

[09:15:27.0000] <odinho>
https://github.com/w3c/testharness.js/pull/3

[09:18:35.0000] <Ms2ger>
Can you give a less stupid example too? :)

[09:27:13.0000] <gavin>
matjas: stats fixed

[09:30:43.0000] <odinho>
Ms2ger: {toString:function(){return "hello";}} vs "hello"    ---   I didn't really hit this myself, it was someone rambling on an Opera channel, I just wrote the patch since I was already in the mood :P

[09:31:05.0000] <odinho>
Ms2ger: Not 100% convinced it's really needed.

[09:31:17.0000] <Ms2ger>
Mm

[09:35:13.0000] <Ms2ger>
Commented

[09:40:46.0000] <odinho>
Ms2ger: I like it. Did it.

[09:42:31.0000] <Ms2ger>
Hmm

[09:52:34.0000] <Ms2ger>
odinho, string concatenation and ${} things together?

[09:52:42.0000] <Ms2ger>
/me isn't entirely convinced

[09:55:46.0000] <odinho>
Ms2ger: Yeah, can't do ${} because it uses format_value which brings in the "'s.

[09:55:52.0000] <odinho>
("number") 1

[09:56:08.0000] <odinho>
I did that originally, but it looked ugly. :-)

[09:56:13.0000] <Ms2ger>
OK

[09:56:20.0000] <Ms2ger>
I was wondering if it did that

[10:27:39.0000] <Hixie>
there's still no way to change [[Class]] in JS, right?

[10:28:34.0000] <Hixie>
JS being so dynamic makes it oddly hard to do certain things

[10:29:26.0000] <Hixie>
(such as in this case, walk a tree of objects and serialise it to a string in such a way that it can be reconstructed later, but in a manner where the serialiser/parser code doesn't need to know about all the possible types of objects involved and what their constructors are)

[10:34:49.0000] <jsbell>
FYI In the ES6 drafts [[Class]] goes away, replaced by [[NativeBrand]]

[10:35:14.0000] <Ms2ger>
Are you introducing something else you'll call [[Class]]?

[10:36:35.0000] <jsbell>
(if you = me, I'm not part of TC39 I just lurk; but not to my knowledge)

[10:38:10.0000] <Ms2ger>
Maybe only the CSSWG is that silly

[10:38:47.0000] <Hixie>
jsbell: either way :-)

[10:39:44.0000] <Hixie>
jsbell: what i really want is a reflection of the object's identity such that i can later resurrect the object

[10:40:58.0000] <Hixie>
currently i have each object override a getClass() method and it returns the string which is the member of |window| that can be used as a constructor for that object

[10:42:17.0000] <Hixie>
but that's pretty hacky

[10:42:19.0000] <jsbell>
What's the motivation? (I care about the "structured clone" algorithm as it relates to IndexedDB)

[10:42:50.0000] <Hixie>
the motivation is in a game i'm writing, how to bring back the UI widgets as they were when the user last logged out

[10:43:44.0000] <Ms2ger>
Why are you writing games and not specs, sir!

[10:43:53.0000] <Hixie>
to test the specs

[10:44:29.0000] <Ms2ger>
Acid4: FPS?

[10:44:39.0000] <Hixie>
acid tests test the browsers :-)

[10:45:42.0000] <jsbell>
Doing this via the JSON API reviver functions, or separately?

[10:45:56.0000] <jsbell>
reviver/replacer

[10:46:13.0000] <Hixie>
separately

[10:46:24.0000] <Hixie>
it's not a single data structure i'm rebuilding, it's also all the backend network connections, etc

[10:46:28.0000] <Hixie>
the whole thing is very async

[10:48:57.0000] <jsbell>
Hrm. You could ask each object to serialize itself to a script fragment that reconstructs itself (and dependents), then parsing is just an eval(). ISTM that anything else will require external assumptions about the objects.

[10:49:23.0000] <Hixie>
that's even more hacky :-P

[11:32:42.0000] <Ms2ger>
Doesn't Opera have unprefixed border-image?

[11:37:15.0000] <miketaylr>
Ms2ger: i think it did once upon a time, but then went back to prefixed

[11:37:20.0000] <miketaylr>
not sure why

[11:37:33.0000] <Ms2ger>
Huh

[11:40:12.0000] <gsnedders>
We had all of CSS Background and Borders unprefixed.

[11:45:18.0000] <Ms2ger>
Do continue

[11:49:13.0000] <hsivonen>
Opera could benefit from repainting everything after a Linux box wakes up from hibernation

[11:49:38.0000] <hsivonen>
I'm seeing garbage pixels in an iframe

[11:49:59.0000] <hsivonen>
I'm not posting a screenshot, since I don't know what private data that memory range contains

[11:57:30.0000] <hsivonen>
Kinda weird that WAI is starting work on intentional events. http://www.w3.org/WAI/IndieUI/

[11:57:41.0000] <hsivonen>
(as opposed to WebApps WG)

[12:00:38.0000] <Hixie>
there's no good way to test if an element is an HTML <section> element other than checking both nodeName/localName/tagName and the namespace or instanceof HTMLElement, right?

[12:01:49.0000] <hsivonen>
sounds about right

[12:02:16.0000] <Ms2ger>
QI to nsIContent and do ->IsHTML(nsGkAtoms::section)

[12:02:38.0000] <hsivonen>
Gnome Memes seems to be enjoying the new Angry Linus meme

[12:02:49.0000] <Hixie>
yeah i suppose we could add isHTML(tagName), isSVG(tagName), and isMathML(tagName) to Element

[12:03:07.0000] <Hixie>
Ms2ger: i'll let you and anne ponder whether it's worth it :-)

[12:03:24.0000] <hsivonen>
Hixie: Gecko has that internally

[12:03:27.0000] <Ms2ger>
Wontfix

[12:03:29.0000] <Ms2ger>
;)

[12:03:44.0000] <hsivonen>
yeah, seems like WONTFIX material for the Web

[12:03:53.0000] <hsivonen>
authors won't dare to use pure sugar like that

[12:04:01.0000] <Hixie>
i would :-P

[12:04:05.0000] <hsivonen>
will worry about it not working in IE9 for the next 20 years

[12:04:44.0000] <hsivonen>
Hixie: you aren't under normal compat constraints or under normal unfamiliarity with the platform details constraints

[12:04:52.0000] <Hixie>
it is true

[12:05:09.0000] <Ms2ger>
In other words, you are abnormal :)

[12:12:08.0000] <dbaron>
Are the contents of the <video> element supposed to be fallback content?

[12:12:25.0000] <Ms2ger>
No

[12:12:39.0000] <Ms2ger>
Well, fallback for browsers that don't implement <video>

[12:13:00.0000] <dbaron>
ok

[12:41:05.0000] <Ms2ger>
annevk, you're wrong :)

[12:43:50.0000] <annevk>
Ms2ger: that would be nice, because all my stuff is in Mercurial

[12:44:04.0000] <annevk>
Ms2ger: but I think I'm right

[12:44:56.0000] <paul_irish>
odinho jgraham: Yeah mostly just finished the markdown port as a POC; just to see how good it'd look. I agree next step is to write a script to output from script to readme. ++ on pyjsdoc or docdown

[12:54:31.0000] <Ms2ger>
http://w3c-test.org/framework/suite/web-storage-dev/ says "NOTICE: Undefined offset: 1"

[12:54:34.0000] <Ms2ger>
[tm], ^

[13:33:30.0000] <jgraham_>
pyjsdoc isn't any use since jsdoc isn't any use

[14:11:16.0000] <bencc>
are pointer events for pen and digitizer standard in html5?

[14:11:59.0000] <Hixie>
html5 doesn't even define events for mice...

[14:12:35.0000] <bencc>
Hixie:  I'm talking about this: http://blogs.msdn.com/b/ie/archive/2011/09/20/touch-input-for-ie10-and-metro-style-apps.aspx

[14:12:43.0000] <bencc>
canvas.addEventListener("MSPointerMove", paint, false);

[16:53:26.0000] <heycam>
hsivonen, what do you mean SVG scripts can nest, like you can have nested <script> elements?

[16:54:08.0000] <gavinc>
 Anyone who cares about RDF and is bored in the next few days http://dvcs.w3.org/hg/rdf/raw-file/default/rdf-turtle/index.html Turtle is going to Last Call next week! Feedback is awesome

[16:54:28.0000] <heycam>
hsivonen, we should just do whatever HTML does for that too


2012-06-21
[17:00:39.0000] <gsnedders>
gavinc: s#and#and/or# :)

[17:16:06.0000] <gavinc>
gsnedders: good point.

[19:17:18.0000] <Hixie>
hmm

[19:17:42.0000] <Hixie>
how the hell do i serialise a method pointer in JS

[19:17:47.0000] <Hixie>
bummer

[22:58:00.0000] <Hixie>
annevk: was it taken out again? i thought .append() and co were in, that's why i used them in the examples

[22:58:08.0000] <annevk>
those are

[22:58:15.0000] <annevk>
but createElement with multiple arguments is not

[22:58:19.0000] <Hixie>
ah, ok

[23:03:03.0000] <annevk>
Lachy: http://dvcs.w3.org/hg/domcore/raw-file/tip/Overview.html#errors now uses "name" rather than "type" throughout (IDL has been updated too)

[23:07:12.0000] <hsivonen>
UA string evangelism makes me sad

[23:08:29.0000] <hsivonen>
Mozilla added "Mobile" and "Tablet" tokens to give sites something other than "Android" to sniff for. Now we are debating whether B2G has to say "Android" anyway, because the string with Android got evangelized.

[23:09:01.0000] <annevk>
hmm http://lists.w3.org/Archives/Public/public-webrtc/2012Jun/ pretty much no involvement from people with some history with API design...

[23:09:25.0000] <annevk>
does explain http://lists.w3.org/Archives/Public/public-script-coord/2012AprJun/0269.html ...

[23:09:34.0000] <heycam>
I'm not in the mood to read those last 100 mails, tbh

[23:09:45.0000] <annevk>
me neither

[23:10:12.0000] <annevk>
maybe I'll read something when they get around to publishing again

[23:10:15.0000] <heycam>
yeah

[23:10:25.0000] <heycam>
I must say, the spec seems pretty unreadable to me

[23:10:27.0000] <heycam>
the formatting

[23:10:43.0000] <annevk>
it's a mixture of WHATWG HTML plus whatever the new guy is using

[23:10:52.0000] <annevk>
plus probably some other things

[23:12:00.0000] <heycam>
I wonder if we should mark stringifiers as not for use unless you really have to

[23:12:23.0000] <heycam>
to me they seem like they invite author confusion

[23:16:21.0000] <hsivonen>
heycam: SVG scripts can nest like this <svg><script>foo();<script>bar();</script>baz();</script> thanks to XML-likeness

[23:16:34.0000] <heycam>
hsivonen, you can do that with HTML too with DOM calls right

[23:16:53.0000] <hsivonen>
heycam: yes, but then the script wont be parser-inserted

[23:17:23.0000] <shepazu>
couldn't we simply say that <script> can't nest?

[23:17:52.0000] <heycam>
hsivonen, is the behaviour for parser inserted nested script elements undefined?

[23:18:00.0000] <hsivonen>
shepazu: that would be useless without making it impossible for them to nest

[23:18:01.0000] <heycam>
hsivonen, (beacuse html can't have them?)

[23:18:02.0000] <hsivonen>
heycam: no

[23:18:06.0000] <shepazu>
that <script> is not a valid child of <script>, and that any content doesn't execute?

[23:18:46.0000] <hsivonen>
shepazu, heycam: what I said about the added parser complexity was an aside. Please don't try to fix it by making it worse.

[23:19:08.0000] <heycam>
lol ok, I had hoped "do the same as HTML" should be making things better

[23:19:23.0000] <shepazu>
I'm not convinced that this is a real-world problem

[23:19:27.0000] <hsivonen>
All I need to do is to put the "had async of defer" bit on the stack when now one bit on the tree builder is enough

[23:19:56.0000] <heycam>
ok, so it wasn't something to be avoided then

[23:20:02.0000] <hsivonen>
heycam: right

[23:20:06.0000] <heycam>
btw, what is the behaviour of non-parser inserted nested script elements in html?

[23:20:19.0000] <hsivonen>
heycam: undefined, which is a spec bug

[23:20:24.0000] <heycam>
aha

[23:20:29.0000] <hsivonen>
(browsers disagree, too)

[23:20:37.0000] <hsivonen>
(though IE10 and WebKit agree)

[23:20:44.0000] <heycam>
the best kind of spec bug

[23:21:21.0000] <hsivonen>
but parser-inserted nested script are defined. Yay.

[23:21:32.0000] <Hixie>
undefined?

[23:21:34.0000] <heycam>
heh, funny

[23:21:46.0000] <Hixie>
in which spec?

[23:22:00.0000] <hsivonen>
Hixie: HTML Living Standard

[23:22:16.0000] <hsivonen>
Hixie: well, at least at least 3 channel regulars failed to find the definition

[23:22:24.0000] <Hixie>
hsivonen: what's undefined? i thought the script processing was pretty well-defined by this point

[23:22:30.0000] <heycam>
not really knowing how any of this works currently, I would just say the textContent of the outer script element is the script that's run

[23:22:32.0000] <hsivonen>
Hixie: so it's undefined in practice even if you could find the definition

[23:23:13.0000] <hsivonen>
heycam: and you'd be wrong :-)

[23:23:14.0000] <Hixie>
hsivonen: sure, but the differnce is that in one case i have to figure out how to fix it to actually define it, and in the other i just have to add a note

[23:23:21.0000] <Hixie>
hsivonen: so it's an important difference to me :-)

[23:23:28.0000] <heycam>
hsivonen, not surprised, as it's just something sensible :)

[23:23:28.0000] <hsivonen>
Hixie: we need two things:

[23:23:58.0000] <hsivonen>
1) something that says that upon inserting a DocumentFragment, the whole fragment gets inserted before attempting to execute any of its scripts

[23:23:58.0000] <Hixie>
(btw, personally i think the way svg-in-html script parsing is defined now is fantastic, as it is simpler than html, and that can imho only be a good thing)

[23:24:19.0000] <Hixie>
hsivonen: hm, i can believe that behaviour of script insertion with document fragments isn't well-defined

[23:24:20.0000] <hsivonen>
2) a definition for the order in which the scripts that got inserted are attempted to execute

[23:24:30.0000] <Hixie>
hsivonen: since the html text predates dom core being written

[23:24:45.0000] <Hixie>
hsivonen: k. is there a bug/e-mail on this?

[23:25:08.0000] <hsivonen>
Hixie: there's a bug about #1 and it has an off-topic comment about #2

[23:26:40.0000] <Hixie>
hsivonen: k

[23:26:49.0000] <jgraham>
heycam: (textContent would be very confusing <script>alert(1); <script>alert(2)</script></script> would alert 2 then 1 then 2

[23:26:53.0000] <jgraham>
)

[23:27:13.0000] <jgraham>
(happily that isn't what happens)

[23:27:16.0000] <heycam>
jgraham, forgot to also add: the nested <script> elements would not get executed themselves

[23:27:19.0000] <hsivonen>
Hixie: oh and for nested scripts, both points need to apply also when inserting a tree of elements without a document fragement wrapper

[23:27:53.0000] <hsivonen>
jgraham: not even in Opera?

[23:27:53.0000] <Hixie>
same bug #?

[23:28:24.0000] <Hixie>
17543?

[23:28:50.0000] <jgraham>
heycam: It would be very confusing not to run some scripts depending on their ancestors

[23:29:39.0000] <jgraham>
hsivonen: I'm not sure what happens in Opera. iirc *in SVG* that case works OK, but there might be that bug if you nest scripts in HTML

[23:29:51.0000] <heycam>
(disagree, especially if the rule is "if there's an ancestor <script> it doesn't run")

[23:30:04.0000] <heycam>
(sounds like it's moot anyway tho)

[23:30:20.0000] <jgraham>
heycam: Pretty much, everyone agrees on that much behaviour at least

[23:30:28.0000] <annevk>
Hixie: the plan is to add hooks to "DOM" for "elements inserted" and "elements removed" which can be used by HTML to then do stuff

[23:30:36.0000] <Hixie>
and 17529 i guess

[23:30:45.0000] <Hixie>
annevk: k

[23:30:50.0000] <annevk>
Hixie: they're both plural because the idea is that you can atomically insert and remove more than one element

[23:31:14.0000] <heycam>
annevk, sorry for hammering on about the event handler stuff again, my small brain forgets previous conversations about things like that :)

[23:31:37.0000] <jgraham>
hsivonen: Doesn't XHTML give you parser-inserted nested scripts?

[23:31:37.0000] <annevk>
heycam: no worries

[23:31:54.0000] <hsivonen>
jgraham: yes

[23:31:57.0000] <hsivonen>
Hixie: https://www.w3.org/Bugs/Public/show_bug.cgi?id=17529

[23:32:36.0000] <jgraham>
I guess that is another case to write tests for

[23:33:39.0000] <jgraham>
The platform is way too complicated. Every time you think "I should test this simple thing" you realise there are multiple contexts in which you need to test it, often with different behaviour

[23:35:11.0000] <jgraham>
Anyway, time to cycle to the office (in the sunshine!), I guess

[23:35:29.0000] <annevk>
Sweden summertime ftw

[23:36:14.0000] <Hixie>
i cycle to work every day i go to work... California time ftw :-P

[23:48:25.0000] <AryehGregor>
I now live in a place where it's too hot to bike in the summer, too rainy to bike in the winter, and too hilly to bike ever.  \o/

[23:48:42.0000] <AryehGregor>
(doesn't bother me, I don't bike anyway)

[00:09:24.0000] <jgraham>
annevk: It's OK it's forecast to rain next week

[00:10:03.0000] <annevk>
aaah

[00:10:06.0000] <jgraham>
so you will miss the authentic Swedish summer experience

[00:10:31.0000] <annevk>
I don't feel too bad about that I think

[01:13:13.0000] <Ms2ger>
annevk, once I figure out what you guys need me to do :)

[01:13:46.0000] <annevk>
Ms2ger: so in principle you're okay with merging and all?

[01:14:07.0000] <annevk>
Ms2ger: I guess maybe lack of input should be considered as "okay" but this is not a mailing list :p

[01:14:25.0000] <Ms2ger>
Yes, of course

[01:14:39.0000] <annevk>
kk

[01:14:58.0000] <annevk>
I have no insight in the line of thinking of robots unfortunately

[01:15:19.0000] <Ms2ger>
:D

[01:25:19.0000] <odinho>
21:43 < Ms2ger> annevk, you're wrong :)

[01:25:33.0000] <odinho>
Where is the context for all of this? :S

[01:25:42.0000] <odinho>
If anywhere at all :]

[01:25:43.0000] <Ms2ger>
Private email

[01:25:53.0000] <odinho>
Ah, okay, so not then.

[01:26:10.0000] <Ms2ger>
He said not-nice things about Mercurial

[01:26:18.0000] <odinho>
Ms2ger: I can do that too. :]

[01:26:38.0000] <Ms2ger>
/me curses Operians

[01:27:07.0000] <annevk>
the context is a discussion with berjon about merging ReSpec and Anolis bibref and xref databases

[01:31:04.0000] <jgraham>
/me has spent quite a lot of the morning trying to help various people with git. But at least helping people with git doesn't start "learn mq".

[01:32:34.0000] <annevk>
Ms2ger: can you review the commit I just made?

[01:32:49.0000] <annevk>
Ms2ger: don't want Hixie to run into issues when he starts fixing the HTML side

[01:33:05.0000] <annevk>
jgraham: :)

[01:33:27.0000] <annevk>
/me is promoting git in the absence of any experience with it

[01:33:41.0000] <annevk>
I guess at some point we should move the specs over

[01:33:45.0000] <annevk>
to github

[01:33:56.0000] <annevk>
so everyone can do pull requests and other fancy things

[01:34:04.0000] <Ms2ger>
Whoa

[01:34:11.0000] <Ms2ger>
Error names

[01:35:10.0000] <Ms2ger>
annevk, s#and/or#or#

[01:35:37.0000] <annevk>
really?

[01:35:47.0000] <annevk>
because it's "and" for the replace stuff

[01:35:56.0000] <Ms2ger>
and/or is an abomination in the eyes of the Lord

[01:36:00.0000] <odinho>
Git was my first VCS. Right around the time Linus unveiled his first plumbing layer Git, I was in the market for a VCS. So I took it, warts and all. Used cogito a bit, but that was eventually merged into Git - and today it's really nice and helpful. :-)

[01:36:06.0000] <Ms2ger>
/me doesn't like it much either

[01:36:08.0000] <annevk>
Ms2ger: which Lord though?

[01:36:14.0000] <odinho>
Ms2ger: Lord Voldemort?

[01:36:22.0000] <Ms2ger>
odinho++

[01:36:36.0000] <annevk>
odinho: dude, cannot mention his name

[01:36:42.0000] <Ms2ger>
odinho, also, that's called "Stockholm syndrome"

[01:36:56.0000] <odinho>
annevk: fsck, didn't remember.

[01:38:27.0000] <annevk>
oh well, fixed

[01:39:09.0000] <Ms2ger>
Thanks :)

[01:47:14.0000] <annevk>
ooh, no logs

[01:54:47.0000] <Ms2ger>
http://logbot.glob.com.au/ has logs

[02:24:43.0000] <annevk>
Fullscreen thread is full of talk

[02:25:31.0000] <MikeSmith>
an no walk?

[02:26:01.0000] <annevk>
right, except for fantasai, although the condescending "in the CSS WG we do..." she could have left out I think

[02:27:47.0000] <MikeSmith>
hahaha

[02:28:18.0000] <MikeSmith>
"in NN WG, we have a batshit insane way of doing many things"

[02:28:32.0000] <MikeSmith>
just FYI

[02:40:16.0000] <matjas>
I’d like to get a few lines of CSS added to http://www.whatwg.org/style/specification — who do I have to ask?

[02:41:03.0000] <matjas>
basically, this is all it takes to make a spec Responsive™: http://pastebin.com/raw.php?i=zNJV7VSF

[02:41:29.0000] <matjas>
for an example, try http://mathias.html5.org/specs/web-ecmascript/ on a small viewport

[02:43:56.0000] <odinho>
Hmm. Should make usercss easy to have on mobile phones. I'd like to tweak quite a few sites to have some responsive stuff thrown in.

[02:44:25.0000] <zcorpan>
matjas: wouldn't that break with the margin boxes in the html spec?

[02:45:01.0000] <matjas>
zcorpan: possibly, but i’m sure it can be done without any breakage

[02:47:28.0000] <zcorpan>
matjas: why have different padding above/below the breakpoint?

[02:47:53.0000] <matjas>
zcorpan: try it, it looks better / is more readable on small screens

[02:48:26.0000] <matjas>
(IMHO)

[02:48:36.0000] <zcorpan>
it looks bad when width is 60em+1px :-P

[02:49:43.0000] <zcorpan>
anyway, i guess Hixie is the one to ask

[02:50:14.0000] <zcorpan>
though it's not unusual for specs to just have local overrides

[02:57:02.0000] <matjas>
Hixie: please responsify the spec-reading experience in the mobile workspace, increasing the end users’s social mindshare by leveraging Web 3.0 CSS5 Media Queries

[02:58:50.0000] <odinho>
matjas: WAT, don't speak like that.

[03:00:29.0000] <matjas>
odinho: sorry, i got caught up in the moment

[03:01:04.0000] <odinho>
matjas: A big corporate faceless PR/hype/buzzword-over-substance moment?

[03:01:16.0000] <matjas>
I can’t believe I forgot to mention SEO :'(

[03:20:17.0000] <annevk>
matjas: probably best to email or file a bug

[03:21:13.0000] <annevk>
matjas: canAskHixieOnIRC = Hixie.around() && !Hixie.busy()

[03:21:49.0000] <matjas>
hah

[03:24:29.0000] <annevk>
what is the obj.is(Node) discussion about? And why is it only a problem for DOM?

[03:24:35.0000] <annevk>
I'm missing something...

[03:25:15.0000] <Ms2ger>
Cross-window instanceof?

[03:29:26.0000] <annevk>
why can't we make instanceof cross-window?

[03:29:47.0000] <Ms2ger>
Dunno

[03:29:50.0000] <annevk>
also

[03:30:12.0000] <annevk>
then this isn't just the dom, but also applies to XMLHttpRequest, Worker, EventSource, etc. no?

[03:31:32.0000] <Ms2ger>
Presumably obj.is(XMLHttpRequest) would be expected to work too

[03:46:37.0000] <jgraham>
That's why people preferred Node.isInterface(obj) or whatever it was

[03:48:26.0000] <jgraham>
But it does seem a bit silly to have to implement it on all objects rather than having an operator

[03:48:38.0000] <jgraham>
Well all interface objects

[03:49:05.0000] <annevk>
not sure why an interface object should be different from other javascript objects really

[03:49:24.0000] <annevk>
interface is just a convenience when writing specs

[03:50:42.0000] <jgraham>
Right, you would expect otherWindow.Object.isInterface({}) to work as well, I guess

[04:00:53.0000] <annevk>
http://annevankesteren.nl/2012/06/notifications

[05:26:01.0000] <annevk>
jgraham: chaals' argument for iconAlt is somewhat compelling actually

[05:27:35.0000] <charl>
annevk: interesting post but quite honestly i don't get this part: perm == "granted" ? true : false

[05:27:55.0000] <charl>
so you are basically saying "if true then true, if false then false"

[05:28:03.0000] <charl>
you test against a boolean to produce exactly the same boolean

[05:28:31.0000] <annevk>
I will drop the ? true : false and then go into hiding :)

[05:28:41.0000] <charl>
lol

[05:29:20.0000] <annevk>
thanks

[05:29:25.0000] <charl>
np!

[05:30:20.0000] <jgraham>
annevk: I guess

[05:31:05.0000] <annevk>
I wish hober, jonlee|afk, and John would chime in

[05:31:11.0000] <annevk>
but sleep

[05:34:41.0000] <AryehGregor>
Hmm.  Were my reflection tests ever actually approved?

[05:34:50.0000] <AryehGregor>
I thought they were supposed to be at some point by default.

[05:35:00.0000] <AryehGregor>
But they're wrong by now, because Hixie keeps changing the spec.  :(

[05:36:33.0000] <jgraham>
/me is sort of ignoreing the whole approved/unapproved thing

[05:36:47.0000] <annevk>
it was a bullshit concept to begin with

[05:37:10.0000] <AryehGregor>
Well, I wouldn't go that far.

[05:37:37.0000] <annevk>
it helps forcing review somewhat of badly written tests

[05:38:13.0000] <annevk>
other than that I don't really see the point of moving tests around and making them hard to find

[05:41:18.0000] <AryehGregor>
We want a "your browser passes X% of tests" kind of thing, for marketing purposes, and don't want Joe Q. Random (or, more likely, a browser vendor) to submit garbage tests to distort it.

[05:41:51.0000] <annevk>
we all know it's Microsoft

[05:42:00.0000] <AryehGregor>
Well, yeah.

[05:43:51.0000] <AryehGregor>
So: I guess I should write a rant yelling at public-css-testsuite for imposing stupid and onerous requirements on test submitters only after I've submitted all my tests, not before.

[05:44:26.0000] <AryehGregor>
Preferably once they're approved.

[05:44:26.0000] <jgraham>
It doesn't really stop that

[05:44:43.0000] <jgraham>
See also the CSS 2.1 outline tests (or something)

[05:44:50.0000] <AryehGregor>
No, but it means that if someone notices, you can revoke the approval at that point.

[05:45:25.0000] <jgraham>
The tests I'm thinking of were all the same but for different colours

[05:45:39.0000] <annevk>
also written by Microsoft

[05:45:43.0000] <jgraham>
would have red outlines work, but blue ones fail?

[05:46:09.0000] <Ms2ger>
Maybe!

[05:46:13.0000] <AryehGregor>
And did they happen to test a trivial feature that IE supported but no one else did?

[05:46:15.0000] <annevk>
philosoraptor having a field day

[05:46:25.0000] <AryehGregor>
I'm all in favor of testing every possible test color, but only if it's all in one test file.

[05:46:39.0000] <AryehGregor>
2^24 tests isn't a lot by the standards of today's CPUs, right?

[05:46:44.0000] <AryehGregor>
Hmm, but if you add alpha . . .

[05:47:05.0000] <jgraham>
Well Opera doesn't support it. Which is a bug, but not 200 tests worth of bug (compared to the rest of the CSS testsuite)

[05:47:17.0000] <AryehGregor>
Isn't the CSS 2.1 test suite actually pretty big?

[05:47:33.0000] <jgraham>
Not all that big

[05:48:42.0000] <Ms2ger>
9000 tests or so?

[05:49:10.0000] <AryehGregor>
Oh, that's nothing.

[05:49:18.0000] <AryehGregor>
I wrote a few hundred reftests just for transforms.

[05:49:27.0000] <AryehGregor>
And, of course, a couple of JS files that test like a billion things.

[05:49:28.0000] <Ms2ger>
Compared to the 650 000 tests I imported into m-c this morning...

[05:50:11.0000] <smaug____>
number of tests doesn't mean much

[05:50:19.0000] <smaug____>
some tests may test several things

[05:50:27.0000] <smaug____>
and many tests may test the same thing

[05:50:52.0000] <AryehGregor>
Ms2ger, that's only a few files, though.

[05:50:56.0000] <AryehGregor>
Granted, thousands of LOC.

[05:51:08.0000] <Ms2ger>
True

[05:51:21.0000] <smaug____>
hsivonen: new patch uploaded

[05:51:54.0000] <Ms2ger>
Two Mozillians chatting doesn't mean this is #developers, smaug____  :)

[05:52:12.0000] <AryehGregor>
Ms2ger, see, I'm not the only one!

[05:52:23.0000] <smaug____>
Ms2ger: oop, wrong tab :)

[05:52:25.0000] <smaug____>
oops

[06:11:12.0000] <odinho>
You keep doing that :P We just got ice cream out in the sun by the lake here. It was A+.

[06:12:30.0000] <Ms2ger>
/me kicks odinho 

[06:20:56.0000] <annevk>
aah, we had ice-cream in the canteen

[06:21:23.0000] <annevk>
technically I guess it was the living room area on the other side

[06:22:03.0000] <jgraham>
It's all one room

[06:22:22.0000] <jgraham>
We aren't pretentious enough to subdivide

[06:24:42.0000] <annevk>
just enough to correct me? :p

[06:24:47.0000] <odinho>
annevk: So better at HQ then. :] Was quite pictoresque.

[06:26:07.0000] <jgraham>
But we have nicer chairs :p

[06:26:48.0000] <Ms2ger>
You should donate them to the HTMLWG

[06:27:11.0000] <annevk>
:)

[06:59:37.0000] <hsivonen>
Is Glenn Adams an Editorial Assistant now? https://www.w3.org/Bugs/Public/show_bug.cgi?id=17563

[07:01:09.0000] <Ms2ger>
Maybe he could start with editing the spec he's supposed to edit

[07:01:11.0000] <hsivonen>
(of course, trying to ban the use of canvas for decoration would be an exercise in futility, so I don't disagree with dismissing the bug)

[07:02:53.0000] <annevk>
hmm URLs

[07:14:57.0000] <annevk>
so is it better to have a tokenizer like this http://wiki.whatwg.org/wiki/URL#Parsing

[07:16:58.0000] <annevk>
or should the language be "split X on the first ":" if any and let (A, B) be the result" "if A starts with a character in the range RR and the remaining characters are in the range OO set scheme to A and X to B" "otherwise relative steps here..."

[07:17:37.0000] <annevk>
that is more how the spec is now

[07:39:44.0000] <annevk>
poor hober http://w3cmemes.tumblr.com/post/25563333689/bad-luck-brian-thought-html-wg-meetings-were-bad

[07:47:54.0000] <MikeSmith>
heh

[07:48:35.0000] <odinho>
:/

[08:54:04.0000] <dglazkov>
good morning, Whatwg!

[08:55:40.0000] <Ms2ger>
Morning

[09:03:36.0000] <MikeSmith>
good 01:05am, crime partners!

[09:04:52.0000] <MikeSmith>
/me is enjoying participation in the usual weekly round of back-to-back Thursday night telcons

[09:05:36.0000] <MikeSmith>
things could be worse; at least my boss didn't make me attend the Tracking Protection WG f2f

[09:08:49.0000] <odinho>
:P

[09:21:12.0000] <hober>
MikeSmith: very funny :)

[09:22:34.0000] <Ms2ger>
Poor hober :)

[09:22:37.0000] <MikeSmith>
I was just speaking hypothetically!


2012-06-22
[19:40:25.0000] <wirepair>
in html 4.01~5 the only two elements that start with <! are <!DOCTYPE and <!-- comments, yes?

[19:50:33.0000] <MikeSmith>
wirepair: yes

[19:50:37.0000] <MikeSmith>
wtf https://twitter.com/jashkenas/status/215093650789642241

[19:50:58.0000] <wirepair>
cool thanks :)

[19:51:00.0000] <MikeSmith>
«Just now learning that Windows 8 Metro won't treat JavaScript as JavaScript without a "UTF8 BOM" in front.»

[19:51:22.0000] <wirepair>
ugh

[19:58:44.0000] <MikeSmith>
jwz http://www.jwz.org/blog/2012/06/i-have-ported-xscreensaver-to-the-iphone/

[19:59:05.0000] <MikeSmith>
fun read

[19:59:34.0000] <wirepair>
what... exactly would you call the ! character in terms of HTML state (think when parsing)

[19:59:40.0000] <wirepair>
it's not a command processor like it is in XML right?

[20:00:21.0000] <MikeSmith>
eh?

[20:00:28.0000] <MikeSmith>
command processor in XML?

[20:00:34.0000] <wirepair>
isn't it? :>

[20:00:43.0000] <wirepair>
process instruction or something

[20:00:46.0000] <wirepair>
/me confused

[20:00:47.0000] <MikeSmith>
ah

[20:00:59.0000] <MikeSmith>
processing instruction starts with <?

[20:01:04.0000] <wirepair>
ah yes, processing instructions

[20:01:35.0000] <MikeSmith>
anyway, what if anything it's call in terms of HTML state is in the spec

[20:01:48.0000] <MikeSmith>
tokenizer

[20:02:08.0000] <MikeSmith>
http://www.whatwg.org/specs/web-apps/current-work/multipage/tokenization.html#tokenization

[20:02:23.0000] <MikeSmith>
http://www.whatwg.org/specs/web-apps/current-work/multipage/tokenization.html#markup-declaration-open-state

[20:02:50.0000] <MikeSmith>
or wind back to http://www.whatwg.org/specs/web-apps/current-work/multipage/tokenization.html#tag-open-state

[20:03:19.0000] <MikeSmith>
in "Tag open state", the ! puts the parser into "Markup declaration open state"

[20:03:44.0000] <wirepair>
cheers

[20:04:11.0000] <wirepair>
exactly what i needed, thanks!

[20:06:34.0000] <MikeSmith>
thank Hixie :)

[20:08:15.0000] <MikeSmith>
ah man jwz is an inspiration

[20:08:25.0000] <MikeSmith>
http://www.jwz.org/blog/2012/06/i-have-ported-xscreensaver-to-the-iphone/#comment-106843

[20:08:32.0000] <MikeSmith>
"I do not find reading diffs in email to be a hardship, but I used to walk uphill both ways to school, so I dunno."

[20:10:17.0000] <MikeSmith>
"OpenGL 3.1 is basically a back-port of OpenGL ES to desktops. Its what you get when an already-not-very-bright child mates with its grandparent."

[20:27:58.0000] <MikeSmith>
oh yeah let's bikeshed on the name of the Web Notifications spec that we've been using for 2+ years

[20:28:34.0000] <MikeSmith>
http://lists.w3.org/Archives/Public/public-web-notification/2012Jun/0050.html

[20:29:00.0000] <MikeSmith>
"So I wonder if a better name wouldn't be "Browser notifications", reserving the name "Web notifications" for some future work with applicability to the whole Web."

[20:29:28.0000] <MikeSmith>
"I expected it to be about notifications on the Web, perhaps a backchannel notification extension to HTTP or something like that."

[20:29:58.0000] <MikeSmith>
here's an idea: how about calling that non-existent thing "HTTP Notifications" instead

[20:30:30.0000] <MikeSmith>
whatever teh hell a "backchannel notification extension to HTTP" is anyway

[20:30:37.0000] <MikeSmith>
god what world do these people live in

[20:31:32.0000] <MikeSmith>
I'm looking forward to Anne's response on that thread

[20:59:08.0000] <Hixie>
MikeSmith: i almost replied back "Web means Browser" but I didn't want to put Anne in the position of having to tell me to stop trolling :-)

[21:04:30.0000] <MikeSmith>
Hixie: hah

[21:09:08.0000] <Hixie>
"OpenGL 3.1 is basically a back-port of OpenGL ES to desktops. Its what you get when an already-not-very-bright child mates with its grandparent." ouch

[21:09:29.0000] <MikeSmith>
yeah, dude still has a way with words

[21:09:44.0000] <MikeSmith>
a still a coding madman it seems

[21:09:53.0000] <MikeSmith>
I thought he had given up on writing software

[21:10:06.0000] <MikeSmith>
with better things to do

[21:10:15.0000] <Hixie>
the one thing that's great about being editor for HTML is that if anyone insults your baby, it's unlikely to be anywhere near as bad as any insult you have yourself used about it

[21:10:25.0000] <MikeSmith>
hahaha

[21:13:27.0000] <MikeSmith>
HTML spec is like starting from that boy raised by wolves and trying to introduce him back into eating with paper napkins and silverware

[21:14:26.0000] <Hixie>
and doing so while in the middle of a banquet on a flatbed car on a train going 100km/h

[21:14:51.0000] <Hixie>
while desperately hoping that someone will invent some better form of transportable meal and make the whole thing irrelevant

[21:16:25.0000] <wirepair>
ha.

[21:16:25.0000] <MikeSmith>
hah

[21:17:47.0000] <MikeSmith>
Hixie: as far as inventing that next thing, I take comfort in knowing that Doug Crockford and Zed A. Shaw are already on top of that

[21:18:09.0000] <wirepair>
MikeSmith: is that sarcasm? (I don't know who those two people are)

[21:18:20.0000] <MikeSmith>
though sadly we no longer have Dmitry Turin working on it

[21:18:34.0000] <MikeSmith>
wirepair: deadly serious. read their wisdom and learn

[21:18:42.0000] <wirepair>
/me googles

[21:18:59.0000] <Hixie>
hm, i think i missed Zed's attempt

[21:19:19.0000] <Hixie>
oh

[21:19:23.0000] <Hixie>
that video recently

[21:19:24.0000] <Hixie>
yes

[21:19:34.0000] <Hixie>
can't wait to see what he comes up with that replaces the web

[21:19:53.0000] <wirepair>
i can't find anything, do you have a link MikeSmith ?

[21:19:58.0000] <MikeSmith>
Hixie: yeah that

[21:20:06.0000] <MikeSmith>
wirepair: http://vimeo.com/43380467

[21:20:14.0000] <wirepair>
cheers

[21:20:27.0000] <Hixie>
MikeSmith: though i thought you were going to say Ted Nelson was on it

[21:20:51.0000] <MikeSmith>
reality is beneath Ted's attention

[21:21:16.0000] <MikeSmith>
thought experiments are much easier to actually implement

[21:21:31.0000] <MikeSmith>
wirepair: http://www.crockford.com/html/

[21:23:42.0000] <MikeSmith>
wirepair: one thing I am actually serious about, Crockford is a fun speaker. He does speak wisdom about what the problems are, and does it in an entertaining way

[21:23:56.0000] <MikeSmith>
I wish I could say the same about Zed

[21:24:08.0000] <MikeSmith>
Zed is like the insult comedian of the Web

[21:24:11.0000] <MikeSmith>
without the comedy

[21:24:21.0000] <Hixie>
a lot of what Zed pointed out are perfectly legitimate problems

[21:24:25.0000] <MikeSmith>
bingo

[21:24:28.0000] <MikeSmith>
same with Crock

[21:24:36.0000] <Hixie>
his historical and contextual knowledge is somewhat lacking

[21:24:49.0000] <Hixie>
but that doesn't make his complaints any less valid

[21:24:53.0000] <Hixie>
however, we all know the web sucks

[21:25:02.0000] <MikeSmith>
right

[21:25:10.0000] <Hixie>
we have hundreds of bugs and thousands of e-mails still pending detailing precisely how it sucks

[21:25:11.0000] <MikeSmith>
it's when the start talking about the solutions that they go off into la-la land

[21:25:17.0000] <Hixie>
yeah

[21:25:39.0000] <Hixie>
i really wish someone would invent something to replace the web

[21:25:49.0000] <Hixie>
i just have no freaking idea what it could be

[21:26:26.0000] <MikeSmith>
I don't expect to see it happening any time during my watch on earth

[21:26:46.0000] <Hixie>
man, that means we're stuck with HTML for decades more

[21:27:54.0000] <MikeSmith>
yeah but I hope we eventually move on to working on something funner and leave the rest of HTML for some less jaded youths to pick up the torch on

[21:28:11.0000] <MikeSmith>
or really I just wanna run a nightclub like jwz

[21:28:22.0000] <MikeSmith>
or else just become a gardener or something

[21:31:18.0000] <MikeSmith>
at this point expecting to see the Web replaced by something else is like people in the 19th century when movies were first created expecting to right away see movies wholesale replaced by something else within the next few decades

[21:31:41.0000] <MikeSmith>
instead of course what happened is that movies didn't even have color until like 60 years later or whatever

[21:32:00.0000] <MikeSmith>
nor for 30 years or whatever did they even get sound

[21:32:10.0000] <MikeSmith>
etc

[21:33:01.0000] <MikeSmith>
and then there's where printed books started and how long they stayed the same

[21:33:08.0000] <wirepair>
this presentation

[21:33:11.0000] <wirepair>
is absolute gold.

[21:33:18.0000] <Hixie>
MikeSmith: now you're just bringing me down, man

[21:33:27.0000] <MikeSmith>
Hixie: sorry brotherman

[21:33:44.0000] <MikeSmith>
wirepair: yeah on many levels

[21:33:44.0000] <Hixie>
MikeSmith: i want my paper book -> ebook reader transition to happen quicker than 200 years!

[21:33:49.0000] <Hixie>
or 500

[21:33:52.0000] <Hixie>
or whatever it took with books

[21:33:56.0000] <MikeSmith>
Hixie: keep hope alive man

[21:34:52.0000] <MikeSmith>
wirepair: outside of the fact he makes a lot of valid points, there's got to be some clinical term for the particular sort of neurosis exhibited in his presentation style

[21:35:39.0000] <MikeSmith>
I say that as a fellow neurotic and sometime presenter

[21:36:27.0000] <MikeSmith>
but at least my presentation neurosis hopefully doesn't make people in my audience want to walk up and kick me in the teeth

[21:37:24.0000] <wirepair>
i'm sitting here, dieing laughing.

[21:37:31.0000] <wirepair>
times like this i'm glad i work from home :)

[21:39:39.0000] <MikeSmith>
wirepair: I forgot where you live. way over in Ota-ku or somewhere?

[21:40:04.0000] <Hixie>
(i feel it's important to note that while he makes many valid points, they are surrounded by factual errors)

[21:40:25.0000] <Hixie>
(wrapped in them, even, like by bubblewrap in a package)

[21:40:48.0000] <MikeSmith>
hey somebody should come up with a way to third-party annotate videos

[21:41:25.0000] <Hixie>
webvtt supports it, you just need a tool to write the webvtt file and a site to tie the video and the webvtt file together

[21:42:12.0000] <MikeSmith>
yeah, I was kidding. and there are services for doing it, have been for a long time now

[21:43:01.0000] <MikeSmith>
though in practice the ones I know of seem to pretty much end up being mostly used for the most batshit idiotic purposes imaginable

[21:43:11.0000] <MikeSmith>
e.g. Nico-Nico Douga

[21:45:12.0000] <MikeSmith>
http://nicovideoo.up.seesaa.net/image/niconama2.jpg http://guron.net/document/content/javascript/jspic/nicohojo3.jpg

[21:46:01.0000] <MikeSmith>
http://farm3.staticflickr.com/2176/2504517363_3153c87564.jpg

[21:47:14.0000] <Hixie>
is there a way to distinguish a pure JS {} object from an arbitrary host object?

[21:57:06.0000] <heycam>
Hixie, it's very unlikely a host object would return "[object Object]" from Object.prototype.toString.call(blah)

[21:57:32.0000] <heycam>
host objects may even be disallowed from returning that

[21:58:08.0000] <heycam>
> The value of the [[Class]] internal property of a host object may be any String value except one of "Arguments", "Array", "Boolean", "Date", "Error", "Function", "JSON", "Math", "Number", "Object", "RegExp", and "String".

[21:58:25.0000] <heycam>
so that should be a safe way to check for that

[22:15:33.0000] <Hixie>
heycam: k, thanks

[22:22:41.0000] <annevk>
MikeSmith: http://lists.w3.org/Archives/Public/www-dom/2012AprJun/0168.html looks like spam

[22:23:04.0000] <annevk>
MikeSmith: or potentially a legitimate question in the wrong forum with a lot of spammy links attached

[22:27:53.0000] <annevk>
Midsummer time

[22:28:42.0000] <MikeSmith>
annevk: hmm saw that message and thought it was legitimate question in the wrong forum but hadn't noticed the link spam

[22:28:51.0000] <MikeSmith>
pretty sure it's intentional spam

[22:29:01.0000] <MikeSmith>
will spam-flag it

[23:51:28.0000] <AryehGregor>
Ugh.  I hope I never have to have anything to do with the CSSWG again.

[23:53:28.0000] <SimonSapin>
AryehGregor: why?

[23:55:36.0000] <AryehGregor>
Mostly because they think they have a right to tell me what to do, I guess.

[23:56:04.0000] <AryehGregor>
I guess it's a heck of a lot better than your average corporate environment, where everyone is thoroughly conditioned to do what they're told to do, however stupid.

[23:56:18.0000] <AryehGregor>
So coming from that perspective it's probably hard to see what the problem is.

[23:56:59.0000] <AryehGregor>
Unfortunately for me, I've only ever had jobs where I get to do whatever I want however I want to do it, so I don't tolerate it well.

[23:58:49.0000] <MikeSmith>
AryehGregor: who's trying to tell you what to do?

[23:59:08.0000] <MikeSmith>
oh I probably know the answer to that already

[23:59:37.0000] <MikeSmith>
but what are they trying to tell you to do?

[00:01:25.0000] <MikeSmith>
ah public-css-testsuite thread I guess

[00:01:28.0000] <AryehGregor>
Yes.

[00:01:38.0000] <AryehGregor>
There was some off-list discussion too.

[00:02:02.0000] <MikeSmith>
add != refs to all the things ?

[00:02:08.0000] <MikeSmith>
AryehGregor: yeah, I can imagine

[00:02:11.0000] <AryehGregor>
Well, that was the straw that broke the camel's back.

[00:02:16.0000] <AryehGregor>
By itself I wouldn't have minded.

[00:02:21.0000] <MikeSmith>
glad I'm not in your shoes there man

[00:02:38.0000] <MikeSmith>
AryehGregor: what else on top of that?

[00:02:41.0000] <AryehGregor>
The context is that I was in the process of rewriting all the tests to conform to the CSSWG's stylistic guidelines before they'd even look at them.

[00:02:48.0000] <MikeSmith>
/me nods

[00:02:53.0000] <AryehGregor>
Which has taken me a lot of hours and is totally pointless from my perspective.

[00:03:03.0000] <MikeSmith>
hear that

[00:03:23.0000] <AryehGregor>
The entire thing is set up just fine from the perspective of people who are paid by some conventional employer and told "go submit these tests and get back to me".

[00:03:45.0000] <AryehGregor>
Then it makes sense to force them to shoulder as much work as possible to accept their submissions.

[00:04:28.0000] <AryehGregor>
Not so much for me.

[00:04:33.0000] <MikeSmith>
yup

[00:04:38.0000] <MikeSmith>
they need to fix that

[00:04:47.0000] <MikeSmith>
well they need to fix a lot of things

[00:04:53.0000] <MikeSmith>
but let's start with that

[00:04:54.0000] <AryehGregor>
Apparently the public-css-testsuite people don't think that.

[00:05:07.0000] <MikeSmith>
well they don't own it

[00:05:10.0000] <MikeSmith>
they may think they do

[00:05:27.0000] <MikeSmith>
the people who own it are the people who show up and do the real work of writing tests

[00:05:31.0000] <AryehGregor>
TBH, the policy probably works well for them.  They might lose my work, but they'll get more work out of Microsoft or Apple or Adobe or whatever, and there are more of them.

[00:05:36.0000] <AryehGregor>
MikeSmith, so you'd think, but apparently not.

[00:05:43.0000] <AryehGregor>
At least not if we want them approved.

[00:05:47.0000] <MikeSmith>
I will talk to plh about this

[00:06:04.0000] <MikeSmith>
fubar

[00:06:08.0000] <MikeSmith>
this situation

[00:06:29.0000] <MikeSmith>
AryehGregor: the problem is, the craziness spreads

[00:07:02.0000] <MikeSmith>
like, now we have all this metadata overhead added to testharness.js, everywhere

[00:47:30.0000] <odinho>
MikeSmith: Yeah, I'm not really happy about that there. Metadata overload2k.

[00:47:55.0000] <odinho>
What about *first* making it useful, and then do some crazy-metadata scheme to support it.

[00:48:08.0000] <MikeSmith>
odinho: hey that would be novel

[00:48:25.0000] <MikeSmith>
but no let's instead over-engineer everything up front, for everybody

[00:53:09.0000] <odinho>
Yea.  But if I'm not supposed to be grumpy, I guess connecting tests to the different parts of the spec allows for some cool stuff to be done.

[00:53:50.0000] <odinho>
And I want something like that now. Maybe I should write a small tool to do it and then test how metadata could fit in there.

[00:53:55.0000] <jgraham>
AryehGregor: I'm pretty sure that the requirements of the CSS WG prevent Opera from submitting more tests, but I can't really prove it

[00:54:15.0000] <AryehGregor>
jgraham, what do you mean?

[00:54:58.0000] <jgraham>
Well I'm pretty sure that the bigger the delta of work between making the tests for internal use and getting them accepted into the WG is, the less likely we are to actually do the delta

[00:55:34.0000] <MikeSmith>
jgraham: plh needs to hear that

[00:55:35.0000] <MikeSmith>
really

[00:55:39.0000] <MikeSmith>
from somebody other than me

[00:55:42.0000] <MikeSmith>
directly

[00:55:57.0000] <jgraham>
It's not like we're sitting around looking for work to do

[00:56:37.0000] <MikeSmith>
indeed

[00:56:50.0000] <MikeSmith>
and it's also about opportunity costs

[00:57:14.0000] <MikeSmith>
the time you spend jumping through all their hoops you could be writing other tests

[00:57:44.0000] <MikeSmith>
actually you know if I took a really mercenary view of things I would encourage them to keep it up

[00:58:03.0000] <MikeSmith>
keep making it even more difficult for people to contribute CSS tests to them

[00:58:28.0000] <MikeSmith>
then all of you will instead spend the time writing tests for WebApps specs or HTML

[00:58:38.0000] <MikeSmith>
which would be much better for me personally

[00:58:52.0000] <MikeSmith>
as far as what I'm expected to help get done

[00:58:54.0000] <jgraham>
Heh

[00:59:04.0000] <jgraham>
Doesn't quite work like that either

[00:59:15.0000] <MikeSmith>
yeah I know

[00:59:33.0000] <MikeSmith>
anyway I am going to be talking with plh today about this

[00:59:53.0000] <MikeSmith>
but it would really help for him to hear it firsthand as well

[01:00:28.0000] <MikeSmith>
he gets a lot of stuff from me already

[01:10:51.0000] <jgraham>
Anyway, I should stress that I don't really have solid evidence and I am not someone that writes lots of CSS tests

[01:11:44.0000] <jgraham>
But I know even the smaller overhead that exists for WebApps / HTML tests can cause some things not to get released or to take a while to release

[01:12:04.0000] <jgraham>
(some of this overhead is internal)

[01:13:55.0000] <MikeSmith>
jgraham: sure

[01:16:09.0000] <AryehGregor>
The CSSWG's requirements aren't *that* bad, if you're writing the tests for them a priori.

[01:16:41.0000] <AryehGregor>
A lot of the problem in my case was that I had a bunch of preexisting ones from Mozilla's codebase, and then I wrote lots of others without paying attention to the CSS format guidelines (which I knew existed).

[01:16:52.0000] <AryehGregor>
And then I was asked to port hundreds of them before any would be considered.

[01:24:40.0000] <MikeSmith>
AryehGregor: but I think that is the common case, actually

[01:24:43.0000] <MikeSmith>
what you describe

[01:24:54.0000] <AryehGregor>
Yes, probably that is quite common.

[01:24:55.0000] <MikeSmith>
at least it is one of the common cases

[01:24:59.0000] <MikeSmith>
yeah

[01:25:26.0000] <AryehGregor>
I wouldn't object to saying that the tests have to be formatted a certain way, but if other people want that, they should do it themselves.  Or accept them with the understanding that someone will reformat them later.

[01:25:34.0000] <AryehGregor>
If they care, maybe they can write scripts to help.

[01:25:35.0000] <MikeSmith>
yes

[01:25:43.0000] <MikeSmith>
yes to that too

[01:26:36.0000] <MikeSmith>
with all the coding they already do of test infrastructure stuff, they are quite capable of doing that kind of scripting

[01:26:37.0000] <AryehGregor>
But when I've spent a lot of time making sure I understand the spec on a technical level and figuring out in depth how implementations behave and so on, it's extremely aggravating to be told that nobody's going to look at my tests unless I spend hours mindlessly reformatting them.

[01:27:01.0000] <MikeSmith>
any sane person would be frustrated the same way

[01:27:03.0000] <AryehGregor>
The stuff that actually required knowledge of what the test was doing, like adding <meta name=assert> explaining what the test did, I had no problem doing at all.

[01:27:03.0000] <MikeSmith>
and will be

[01:31:49.0000] <Ms2ger>
MikeSmith, maybe that is the common case because it's so annoying to submit pre-existing tests...

[01:38:16.0000] <MikeSmith>
Ms2ger: I meant the second case AryehGregor described

[01:38:34.0000] <AryehGregor>
It's the common case because vendors write lots of tests for their own internal use.

[01:38:40.0000] <AryehGregor>
And they aren't formatted to CSSWG guidelines.

[01:38:46.0000] <MikeSmith>
I mean I think it's far less common to have orgs writing tests for W3C WGs a priori

[01:39:03.0000] <MikeSmith>
Ms2ger: what AryehGregor said

[01:39:13.0000] <MikeSmith>
and it's not just browser vendors

[01:39:16.0000] <Ms2ger>
Yeah

[01:39:25.0000] <MikeSmith>
Adobe is writing tests also for example

[01:39:30.0000] <AryehGregor>
They work on WebKit.

[01:39:34.0000] <MikeSmith>
yeah

[01:39:35.0000] <Ms2ger>
That's not the common case for tests in the CSS test suite, unfortunately

[01:39:50.0000] <AryehGregor>
The actual people doing it are WebKit hackers, I think.

[01:40:00.0000] <MikeSmith>
Ms2ger: indeed it is unfortunate if that's the case

[01:40:11.0000] <MikeSmith>
AryehGregor: OK

[01:40:30.0000] <AryehGregor>
FWIW, I wrote Range/editing/etc. tests for non-internal use and now Mozilla often uses them in lieu of their own internal tests.

[01:40:48.0000] <MikeSmith>
yeah that happens too I guess

[01:41:01.0000] <MikeSmith>
but certainly less common

[01:41:01.0000] <AryehGregor>
Lots of things are already covered by my editing tests, so many bugs that would normally require new tests instead just have expected fails changed to expected passes.

[01:41:06.0000] <AryehGregor>
That's really the ideal, IMO.

[01:41:21.0000] <AryehGregor>
Because then vendors are working together on the same tests.

[01:41:32.0000] <AryehGregor>
Which saves work and helps convergence.

[01:42:19.0000] <Ms2ger>
^

[01:42:30.0000] <MikeSmith>
yeah

[01:42:38.0000] <Ms2ger>
That's the main reason I worked on importing tests :)

[01:42:45.0000] <MikeSmith>
/me has to drop off for a few minutes now to re-locate to a cafe nearby and get some food. back on in bit

[01:43:33.0000] <AryehGregor>
Ms2ger, want to help WebKit import the tests too?  :)

[01:44:01.0000] <Ms2ger>
I don't need to get patches landed in WebKit :)

[01:44:13.0000] <Ms2ger>
And if I do, I just make someone else write the test

[01:53:42.0000] <Ms2ger>
summary:     So that assert_equals('\n', '\n') actually shows the difference.

[01:56:27.0000] <odinho>
Ms2ger: wat?

[01:56:43.0000] <odinho>
Oh, bash did a double take on me?

[01:56:44.0000] <Ms2ger>
A backslash got lost somewhere

[01:56:46.0000] <odinho>
lol

[01:56:47.0000] <jgraham>
In the long term everyone agrees that having common tests is good

[01:57:07.0000] <jgraham>
In the short term no one ever gets assigned the task "write a W3C testsuite for feature X"

[01:57:18.0000] <Ms2ger>
No?

[01:57:35.0000] <Ms2ger>
I mean, that's part of AryehGregor's job :)

[01:57:54.0000] <Ms2ger>
(AFAIK, haven't read the contract, obviously.)

[01:57:59.0000] <jgraham>
Really? Or is his job to write tests for Mozilla?

[02:00:23.0000] <Ms2ger>
https://twitter.com/philikon/status/214890984272691200/photo/1/large

[02:01:22.0000] <jgraham>
Sure, but that's specs work

[02:01:43.0000] <jgraham>
Anyway, maybe "no one ever" isn't quite true

[02:01:46.0000] <Ms2ger>
(Unrelated, I just saw it)

[02:01:59.0000] <jgraham>
But it isn't the common case

[02:04:04.0000] <jgraham>
even people who are quite involved in the standards process have said that they can't justify spending time converting their ad-hoc testing to something submittable

[02:12:37.0000] <MikeSmith>
right

[02:12:59.0000] <MikeSmith>
so we shouldn't be doing things that cause them to spend even *more* time

[02:13:15.0000] <MikeSmith>
unnecessary things

[02:14:47.0000] <MikeSmith>
Ms2ger: um as far as the comment on that image I really wonder if that's the actual effect in practice

[02:14:58.0000] <Ms2ger>
We can try :)

[02:15:48.0000] <MikeSmith>
it certainly doesn't jibe with the writing modes spec and lobbying for complex ruby and a number of other things

[02:16:19.0000] <MikeSmith>
which frankly seem more like personal crusades rather than efforts to represent Mozilla's best interests

[02:16:52.0000] <MikeSmith>
but oh well

[02:24:32.0000] <mpt>
fantasai has been fascinated by writing modes since before she joined Mozilla

[02:25:13.0000] <Ms2ger>
Oh hey, it's mpt

[02:27:36.0000] <mpt>
but I wouldn't call it a crusade so much as "well if browsers are going to present those languages anyway, let's at least do it the way they're supposed to be presented"

[02:34:34.0000] <MikeSmith>
mpt: yeah, fair enough

[02:34:46.0000] <MikeSmith>
I been in a foul mood today

[02:35:20.0000] <MikeSmith>
not looking forward to HTML WG charter lawyering

[03:09:29.0000] <Ms2ger>
MikeSmith, today? :)

[03:09:41.0000] <MikeSmith>
hah

[05:29:37.0000] <odinho>
Hmz... Microsofts IDB tests expect result==null when the spec says result should be undefined.

[05:29:52.0000] <odinho>
And here I go and "fix" the bug, only to check the spec and see that the test is wrong. Bah.

[05:32:55.0000] <AryehGregor>
odinho, undefined == null, so that's fine.  Did you mean ===?  :)

[05:33:19.0000] <AryehGregor>
Where does it require undefined, though?  That's usually considered bad form unless it's a place where JS would normally put it.

[05:33:36.0000] <odinho>
/me averts eyes <o_o>

[05:33:38.0000] <AryehGregor>
E.g., functions should normally not return undefined unless they always do (i.e., they don't return anything).

[05:34:18.0000] <odinho>
I'm *totally* open to change it to null. But, well, it doesn't say that :]

[05:34:32.0000] <AryehGregor>
Do you have a spec link handy?

[05:34:58.0000] <odinho>
AryehGregor: I use a local mirror, so will find it now :]

[05:35:28.0000] <odinho>
http://dvcs.w3.org/hg/IndexedDB/raw-file/tip/Overview.html#widl-IDBFactory-deleteDatabase-IDBOpenDBRequest-DOMString-name

[05:35:41.0000] <odinho>
If the steps above are successful, the implementation must set the result of the request to undefined and fire a success event at the request. The event must implement the IDBVersionChangeEvent interface and have oldVersion set to database version and have the newVersion property set to null.

[05:36:13.0000] <AryehGregor>
How does one access the result?

[05:36:23.0000] <AryehGregor>
From JS.

[05:36:51.0000] <odinho>
AryehGregor:    deleteDatabase("ohman").onsuccess = function(e) { assert(e.target.result === undefined) }

[05:37:12.0000] <AryehGregor>
What sort of object is e.target?  Does it implement a WebIDL interface?

[05:37:31.0000] <odinho>
EventTarget? Yeaa, think that.

[05:37:40.0000] <AryehGregor>
Oh, blech, .result is defined as "any"?

[05:38:01.0000] <odinho>
    readonly attribute any            result;

[05:38:21.0000] <odinho>
( http://dvcs.w3.org/hg/IndexedDB/raw-file/tip/Overview.html#idl-def-IDBRequest )

[05:39:59.0000] <AryehGregor>
I'd say the spec should require it be set to null.

[05:40:03.0000] <AryehGregor>
Offhand.

[05:42:32.0000] <odinho>
AryehGregor: There are many places it sets itself to undefined though. AH!

[05:42:47.0000] <odinho>
AryehGregor: Nah, it should be undefined, because null is an actual value you can get in result.

[05:42:51.0000] <AryehGregor>
Oh!

[05:42:52.0000] <AryehGregor>
That's bad.

[05:42:58.0000] <AryehGregor>
Hmm.

[05:42:58.0000] <odinho>
That why it's always set to undefined in all the places.

[05:43:05.0000] <AryehGregor>
So that's why it's "any"?

[05:43:15.0000] <AryehGregor>
It can be any JS value, because the query can return any value?

[05:43:20.0000] <odinho>
AryehGregor: Yeah.

[05:43:26.0000] <AryehGregor>
Okay, that seems like a potentially reasonable justification.

[05:43:30.0000] <AryehGregor>
I don't see any better way to do it.

[05:43:40.0000] <odinho>
So, pestering MS is the route then.

[06:03:35.0000] <hsivonen>
oh look. finally a TPAC that won't require an entrance fee from Hixie.

[06:33:12.0000] <Ms2ger>
hsivonen, oh?

[07:00:57.0000] <Ms2ger>
matjas, hmm, http://www.relentless-coding.com/projects/jsdetox/samples is interesting

[07:01:31.0000] <matjas>
turns malware into readable code… makes you wonder what happens if you feed it testharness.js

[07:01:40.0000] <Ms2ger>
Zing

[07:01:46.0000] <matjas>
I’ll see myself out.

[07:02:53.0000] <Ms2ger>
I wonder how good it is at detecting side effects

[07:31:19.0000] <MikeSmith>
does anybody know if Windows 8 exposes to Web Apps running in IE any mechanism similar to Web Notifications?

[07:31:36.0000] <MikeSmith>
or if current Windows does?

[07:36:19.0000] <gsnedders>
MikeSmith: I believe not.

[07:36:27.0000] <MikeSmith>
ok

[07:36:34.0000] <MikeSmith>
I thought as much

[07:37:04.0000] <MikeSmith>
and I guess there are no third-party notification things like Growl for WIndows?

[07:37:09.0000] <MikeSmith>
oh nm

[07:37:39.0000] <MikeSmith>
because I guess that would require IE to be compiled with support for whatever that third-party thing is

[07:37:46.0000] <gsnedders>
Growl exists for Windows. :P

[07:37:49.0000] <MikeSmith>
oh

[07:38:03.0000] <MikeSmith>
but you have to build your app to use Growl, right?

[07:38:17.0000] <MikeSmith>
link it in, I mean

[07:38:43.0000] <gsnedders>
Yeah, indeed.

[07:38:46.0000] <MikeSmith>
or actually you have to even ship your app along with growl

[07:38:47.0000] <MikeSmith>
OK

[07:39:52.0000] <MikeSmith>
so unless there is some other kind of magic thing, that definitely would seem to rule out the possibility of having any kind of Notifications-like support for Web apps running in IE

[07:56:11.0000] <MikeSmith>
OK will be stepping away from keyboard for some hours. If anybody needs me, ping me at [tm] or dm me there or on twitter

[09:11:37.0000] <dglazkov>
good morning, Whatwg!

[09:12:32.0000] <Ms2ger>
Good day, mate

[09:16:19.0000] <dglazkov>
:)

[09:16:31.0000] <gsnedders>
So, per spec, it would seem Progress Events have .total giving Content-Length and .loaded giving the decoded length (which given deflate, for example, can be longer)

[12:12:46.0000] <Famic>
hi

[12:15:51.0000] <Famic>
/j ##twitter-bootstrap

[12:55:29.0000] <Hixie>
ok, time to write tests for detaching iframes

[12:56:02.0000] <Ms2ger>
I bet bz can tell you stories about that :)

[12:57:20.0000] <Hixie>
indeed, i have e-mails from him in the relevant folder already :-)

[12:58:43.0000] <Hixie>
hm, i thought chrome had removed support for this

[13:00:57.0000] <Hixie>
wtf, even gecko seems to suppor it

[13:01:04.0000] <Hixie>
http://www.hixie.ch/tests/adhoc/html/frames/iframes/detaching/001.html

[13:01:16.0000] <Hixie>
safari and opera act as i'd expect

[13:01:36.0000] <padenot>
                                                 │ Dashiva

[13:01:38.0000] <padenot>
19:59:18         Hixie | indeed, i have e-mails from him in the relevant folder already :-)                             │ dcheng

[13:01:43.0000] <Hixie>
well, not opera, opera does some crazy stuff

[13:01:55.0000] <Hixie>
with a [Object object] object with one property .close()

[13:02:08.0000] <Ms2ger>
padenot?

[13:02:26.0000] <padenot>
Ms2ger: mouse problem

[13:02:32.0000] <Ms2ger>
I see

[14:48:58.0000] <Hixie>
i crack myself up

[14:49:15.0000] <Hixie>
there's a comment right at the top of the spec's section on "origin":

[14:49:20.0000] <Hixie>
  <h3>Origin</h3>

[14:49:21.0000] <Hixie>
  <!-- Hallowed are the Ori -->


2012-06-23
[04:40:25.0000] <Ms2ger>
Hixie, http://images.whatwg.org/arc1.png is a 404

[06:10:15.0000] <benvie>
removing iframes in chrome and firefox is a good way to get a context that has only JS builtins. A secret little compartment for doing illegal things in

[06:11:20.0000] <benvie>
all the DOM stuff nulls out

[08:12:49.0000] <annevk>
the logs are back up it seems

[08:12:53.0000] <annevk>
but krijn is not logging?

[12:23:39.0000] <Hixie>
ms2ger: aw man, i always forget to update the images.whatwg.org domain

[12:23:41.0000] <Hixie>
fixed

[12:24:13.0000] <Hixie>
btw hopefully that diagram is right... i have the suspicion that it's actually wrong

[12:46:18.0000] <tomasf>
Hixie: I think it's wrong. angles are clockwise unless the anticlockwise (6th param) is true

[12:56:32.0000] <Hixie>
yeah, gonna have to fix that

[12:56:33.0000] <Hixie>
bummer


2012-06-24
[23:13:57.0000] <ruby_on_tails>
it seems like drawing arcs/circles is much more memory intensive than drawing rectangles on the canvas ?

[23:27:25.0000] <AryehGregor>
I thought the point of canvas is it was a bitmap, so it should use only a fixed amount of storage?

[23:27:33.0000] <AryehGregor>
(I don't know, I've never used it)

[23:37:55.0000] <annevk>
AryehGregor: it's a bitmap

[23:38:01.0000] <annevk>
ruby_on_tails: sure you mean memory?

[23:38:20.0000] <ruby_on_tails>
annevk: if i draw circles, the animation goes slow

[23:38:24.0000] <ruby_on_tails>
rectangles work faster

[23:38:31.0000] <ruby_on_tails>
gradients are even slower

[23:38:34.0000] <AryehGregor>
That's not necessarily memory.

[23:38:44.0000] <AryehGregor>
I'm guessing CPU.

[23:38:55.0000] <annevk>
yeah, circles are more difficult to compute

[23:39:08.0000] <AryehGregor>
I'm mildly surprised that circles would take appreciably more time.

[23:39:31.0000] <AryehGregor>
I'd've thought that graphics stuff would dominate here, not computation, for something as simple as circles.

[23:39:55.0000] <ruby_on_tails>
ptobably something wrong with my code

[00:16:30.0000] <AryehGregor>
Oh, hmm, I might have just made crashtests orange on m-i.

[00:16:33.0000] <AryehGregor>
/me investigates

[00:18:29.0000] <AryehGregor>
Blech, yep.

[00:18:35.0000] <AryehGregor>
I really need to run all tests when I reorder patches!

[00:24:32.0000] <AryehGregor>
/me prepares to back out two of his patches

[00:32:43.0000] <AryehGregor>
/me eyes "Armv7a GB" suspiciously

[00:36:15.0000] <annevk>
for everyone who didn't like Prometheus: http://theferrett.livejournal.com/1734344.html

[01:13:11.0000] <Ms2ger>
Hixie, thanks, now I actually somewhat understand how the arc methods work :)

[01:23:31.0000] <Ms2ger>
gsnedders, a second anonymous blog? So you were Mr. Last Week?

[01:41:01.0000] <gsnedders>
Ms2ger: No comment.

[02:12:10.0000] <Velmont>
So respimg went to HTMLWG.

[09:24:33.0000] <Ms2ger>
Since when does Chrome throw TypeErrors for missing arguments?

[10:56:44.0000] <Wilto>
Velmont: Yeah; they asked for the latest proposal. I’m not 100% on what it going to the HTML WG means though, if I’m being honest.

[10:57:14.0000] <Wilto>
Is it, uh, expected that I cross-post it to the WHATWG list as well?

[10:58:09.0000] <Ms2ger>
Please keep the madness that is the HTMLWG out of the WHATWG

[10:58:28.0000] <Wilto>
Oh, just the proposal itself, I mean.

[10:58:58.0000] <Wilto>
Definitely not proposing any play-dates. This stuff is complicated enough for me.

[15:48:24.0000] <kennyluck>
Does anyone recommend any feed generator for all the accounts a Twitter account (me) follows?

[15:48:41.0000] <kennyluck>
I used to use one, but that site seems down now.


2012-06-25
[23:09:39.0000] <zcorpan>
Hixie: the crazy stuff you see in opera with detached iframes could be the popup blocker showing through, maybe

[00:01:26.0000] <zcorpan>
[tm]: "(with the exception of the HTML-specific APIs defined in the DOM4 specification)" why is DOM4 APIs excluded? why not exclude other APIs that get axed from the HTML spec and get maintained elsewhere?

[00:03:26.0000] <annevk>
zcorpan: pointer?

[00:03:34.0000] <zcorpan>
http://www.w3.org/html/wg/charter/2012/

[00:04:10.0000] <annevk>
ah yeah

[00:04:25.0000] <annevk>
it should all be in scope

[00:04:43.0000] <annevk>
but if it better fits elsewhere and someone can maintain it, the possibility should be there for it to be moved

[00:05:37.0000] <zcorpan>
hmmm "The updated HTML specification may be modularized into separate documents."

[00:40:41.0000] <annevk>
XMLHttpRequest now uses ByteString

[00:40:45.0000] <annevk>
it is so much cleaner

[00:47:14.0000] <annevk>
odinho: might require changes to some tests

[00:47:32.0000] <Velmont>
annevk: OKay.

[00:47:51.0000] <annevk>
odinho: certain input will now throw a TypeError rather than a DOM SyntaxError

[00:49:55.0000] <Velmont>
So, ByteString only takes [A-Za-z0-9]?

[00:50:07.0000] <annevk>
no

[00:50:31.0000] <annevk>
it takes U+0000 up to and including U+00FF

[00:50:53.0000] <Velmont>
http://dev.w3.org/2006/webapi/WebIDL/#es-ByteString <- saw it now. Kinda slow on the searches ;P

[00:50:56.0000] <annevk>
anything greater than that will throw

[01:06:42.0000] <zcorpan>
for whoever is interested in specifying user events, plugins, etc: http://forums.whatwg.org/bb3/viewtopic.php?f=3&t=5018

[03:10:23.0000] <MikeSmith>
no annevk :(

[03:10:49.0000] <MikeSmith>
/me was wondering if anne still wants to try to publish LCWD of the Notifications spec this week or not

[03:20:00.0000] <smaug____>
uh,  I need to remind dougt to send his comments about Notifications

[03:20:37.0000] <smaug____>
apparently NotificationDirection isn't really implementable on all OSes

[03:23:16.0000] <MikeSmith>
hmm

[03:23:24.0000] <MikeSmith>
I guess we're not going to LC yet, then

[03:23:36.0000] <MikeSmith>
which means we probably won't for a couple months yet

[03:23:45.0000] <MikeSmith>
seeing as anne will be away for a few weeks

[05:17:01.0000] <matjas>
<script src=>alert('wat')</script> http://software.hixie.ch/utilities/js/live-dom-viewer/?saved=1616 — IE and Opera alert, other browsers don’t

[05:27:29.0000] <jgraham>
Other browsers are correct. http://www.whatwg.org/specs/web-apps/current-work/#prepare-a-script step 14

[05:28:23.0000] <AryehGregor>
Beat me by 20 seconds.  :(

[05:40:10.0000] <annevk>
MikeSmith: I have time to fix minor things

[05:40:44.0000] <annevk>
MikeSmith: and I plan to work a bit in my free time

[05:42:08.0000] <annevk>
smaug____: MikeSmith: though I think we should keep NotificationDirection in, even though not implementable everywhere

[05:42:33.0000] <smaug____>
I don't know the details...

[05:42:35.0000] <annevk>
smaug____: MikeSmith: we should maybe add some language to the conformance that if there's platform limitations there's going to be some issues

[05:43:05.0000] <smaug____>
but I was told that for example on Android if the UI is ltr, there isn't any way to show rtl notifications

[05:43:32.0000] <annevk>
smaug____: right, I think that's a bug we should file on Android then and note that implementations cannot do everything correctly

[05:43:48.0000] <annevk>
smaug____: although as a workaround you could probably insert the appropriate Unicode override characters

[05:44:19.0000] <annevk>
smaug____: if he could email those comments today that would be great

[05:44:29.0000] <smaug____>
ok, I'll ask him

[05:44:41.0000] <smaug____>
(he is traveling somewhere in Europe )

[05:44:43.0000] <annevk>
smaug____: I can then probably fix them tomorrow and we can still publish as planned "without" issues

[05:44:45.0000] <annevk>
ah okay

[05:44:54.0000] <annevk>
oh well, if it doesn't work out we'll be delayed a bit

[05:44:56.0000] <annevk>
no big deal

[05:45:25.0000] <AryehGregor>
WTF: The website at aryeh.name has been reported as a “phishing” site. Phishing sites trick users into disclosing personal or financial information, often by pretending to represent trusted institutions, such as banks.

[05:45:26.0000] <AryehGregor>
?!

[05:45:41.0000] <annevk>
although I don't want to keep changing it around since I want Apple to implement this and not keep prefix bullshit around forever

[05:46:01.0000] <annevk>
AryehGregor: hacked?

[05:46:36.0000] <AryehGregor>
Maybe . . .\

[05:46:37.0000] <AryehGregor>
/me looks

[05:49:52.0000] <jgraham>
AryehGregor: I don't see a warning? Als, is firefox nightly totally broken?

[05:50:16.0000] <AryehGregor>
jgraham, I see it in Chrome dev.

[05:50:29.0000] <AryehGregor>
Firefox nightly shouldn't be totally broken, but I dunno, I compile my own builds.

[05:51:52.0000] <jgraham>
Hmm, restarting it seemed to help. The chrome was totally broken; clicking links didn't work and context menus showed all possible options even irrelevant ones

[05:52:05.0000] <jgraham>
Still no fraud warning in Chrome

[05:56:04.0000] <AryehGregor>
/me reports it as an error

[05:56:29.0000] <AryehGregor>
I still see it at: http://aryeh.name/tmp/css-test/contributors/aryehgregor/submitted/

[05:56:39.0000] <AryehGregor>
Not at the homepage.

[07:30:51.0000] <Stevef>
Is there any pace in the html spec that lists which elements can have a disabled attribute?

[07:36:16.0000] <acies>
Limited to form elements, isn't it?

[07:36:41.0000] <Philip`>
Stevef: http://www.whatwg.org/specs/web-apps/current-work/multipage/section-index.html#attributes-1 may be relevant

[07:37:59.0000] <Stevef>
Philip: thanks, just the thing. looked for something like that but couldn't find it

[08:01:57.0000] <Philip`>
Hmm, a new password restriction I've not seen before: "Include one symbol but do not contain "<" and ">" symbols"

[08:02:14.0000] <Philip`>
That gives me great confidence in their system's security

[08:02:51.0000] <bzed>
does it exclude = and ; , too?

[08:03:27.0000] <Philip`>
It doesn't say so

[08:03:34.0000] <Philip`>
/me isn't about to test it in practice

[08:45:44.0000] <annevk>
did anyone go investigate which specs can be updated with the default dictionary thing?

[08:45:53.0000] <annevk>
I guess Notifications

[08:46:16.0000] <annevk>
maybe we should do it for events too

[08:46:22.0000] <annevk>
now we restricted document.createEvent

[08:46:53.0000] <dglazkov>
good morning, Whatwg!

[10:18:56.0000] <Ms2ger>
jgraham, yt?

[10:55:26.0000] <TabAtkins_>
Morning, everyone!

[10:57:15.0000] <Ms2ger>
Evening

[11:38:19.0000] <cgcardona>
delayed good morning TabAtkins.  woot

[11:57:12.0000] <jgraham>
Ms2ger: yes

[11:57:56.0000] <Ms2ger>
unping :)

[11:59:03.0000] <Ms2ger>
/me fights Philip`'s tests some more

[12:57:58.0000] <gsnedders>
jwalden: You ever get around to emailing about __proto__?

[12:58:26.0000] <gsnedders>
/me has seen nothing to es-discuss

[13:05:34.0000] <jwalden>
Hixie: we stopped clearing the properties off dead windows semi-recently, which may affect your detaching-iframes tests

[13:06:23.0000] <jwalden>
gsnedders: no, I keep getting distracted from it

[13:06:29.0000] <jwalden>
I should do that now

[13:07:17.0000] <jwalden>
I did discuss it with dherman last week, and he's so completely wrong about it that somehow in discussion I managed to convince him to just walk away and claim I was ranting/arguing in bad faith/something bad :-\

[13:09:08.0000] <gsnedders>
:|

[13:11:40.0000] <gsnedders>
jwalden: If you don't do it soon I may end up doing so. :P

[13:20:33.0000] <jwalden>
gsnedders: we should both do it, actually

[13:20:57.0000] <gsnedders>
jwalden: I'll agree with you on list if you do.

[13:21:06.0000] <gsnedders>
Just whoever does the first post will likely do the longer one.

[13:21:08.0000] <jwalden>
gsnedders: sounds good

[13:21:28.0000] <gsnedders>
/me finally has time to actually really do much, going back to working full-time tomorrow

[13:21:40.0000] <Ms2ger>
The WHATWG cabal... "I'll agree with you on list"

[13:22:00.0000] <jwalden>
there is no cabal

[13:22:56.0000] <gsnedders>
jwalden: What, you don't hang out in #whatwg-cabal!?

[13:23:23.0000] <Ms2ger>
You mean #secrettreehouse?

[13:24:14.0000] <jwalden>
I am not now, nor have I ever, hung out in #whatwg-cabal or #secrettreehouse

[13:24:30.0000] <gsnedders>
Wow. What an outsider. WE MUST DISAGREE WITH EVERYTHING HE SAYS.

[13:24:32.0000] <TabAtkins_>
Good, because they're not real.

[13:24:48.0000] <pablof>
jwalden: you might need this, http://www.adinnerguest.com/wp-content/uploads/Bill-Clinton.jpg

[13:25:25.0000] <jwalden>
actually, hmm, I might have joined #secrettreehouse once to see if anyone was in it

[13:26:02.0000] <jwalden>
I guess it depends on what your definition of the word "joined" is

[13:26:22.0000] <TabAtkins_>
We use "joined" in the biblical sense.

[13:27:03.0000] <jwalden>
ugh

[13:46:58.0000] <oal>
I tried asking this in #html, but didn't really get any response, so: Is it semantically correct to make a table row an <a>? Or would I add an <a> in each cell? Screenshot of my table: http://i.imgur.com/W4ewO.png

[13:47:34.0000] <oal>
A row turns red on mouse hover, and is clickable. Not sure what's the best way to solve it though

[13:48:47.0000] <oal>
The only thing I got from #html was it's a bad idea, and you should never do it, but noone could tell me why not.

[13:49:49.0000] <TabAtkins_>
The parser doesn't allow you to put an <a> where a <tr> would go.

[13:50:15.0000] <SimonSapin>
what about an <a> with CSS display: table-row?

[13:50:18.0000] <TabAtkins_>
If it did allow you to do something like <table><a><tr><td>foo</tr></a></table>, though, it would be fien.

[13:50:27.0000] <TabAtkins_>
The parser doesnt' care about CSS.

[13:51:25.0000] <oal>
Hmm, how'd you solve it?

[13:52:27.0000] <TabAtkins_>
You need to use script.  You might be able to wrap the <tr> in a <a> with JS and get the layout to still work out.  Otherwise, just use an click handler on the <a>.

[13:52:38.0000] <TabAtkins_>
s/<a>/<tr>/

[13:54:57.0000] <oal>
Thanks, I'll try that


2012-06-26
[00:30:45.0000] <asmodai>
Have to admit it has some nice ideas: http://blog.brackets.io/

[00:38:43.0000] <annevk>
cool

[00:39:34.0000] <Velmont>
what is that? irc on phone doesnt make it easy to press hyperlinks :p

[00:39:51.0000] <asmodai>
Web-tech code editor with some nifty ideas

[00:39:56.0000] <asmodai>
open source project by Adobe

[00:41:54.0000] <Philip`>
Velmont: Sounds like you need a better IRC client - even irssi over SSH in ConnectBot lets you follow links :-)

[00:42:15.0000] <annevk>
hmm nobody pointed out this far that iconUrl needs to be resolved

[00:42:38.0000] <Velmont>
Philip`: using fingerterm with a remote irssi. running meego on nokia n9.

[00:43:01.0000] <Velmont>
i'm sure there is a way, just haven't found it yet

[00:43:28.0000] <Velmont>
ooh. found it now. its actually very well made.

[00:43:41.0000] <MikeSmith>
asmodai: I've been messing around with brackets for a few days. indeed pretty nice

[00:43:52.0000] <MikeSmith>
JS editor written in JS

[00:44:36.0000] <MikeSmith>
not unique in that regard I guess but the way they have done is different

[00:45:06.0000] <MikeSmith>
e.g., the fact that it exposes its own source code right in the UI so you can hack on it easily

[00:46:14.0000] <asmodai>
MikeSmith: Some of the ideas are very nice. I like the CSS part editing with the quick edit from HTML

[00:46:35.0000] <MikeSmith>
I didn't even see the CSS stuff yet I guess

[00:46:47.0000] <asmodai>
MikeSmith: Did you see the YouTube vid?

[00:47:25.0000] <Velmont>
oh, yes, looks nice. and livepreview in a real editor ftw.

[00:47:33.0000] <annevk>
also, MIT license

[00:47:38.0000] <MikeSmith>
I looked at parts of several youtube videos from Adobe people involved in the project

[00:47:39.0000] <annevk>
Adobe being awesome

[00:47:49.0000] <asmodai>
annevk: It can happen :)

[00:47:58.0000] <annevk>
I wonder who managed to steer Adobe in the right direction

[00:48:07.0000] <MikeSmith>
Adobe is kicking ass these days for sure

[00:48:07.0000] <Velmont>
so need to get that runn7ng in opera :]

[00:48:35.0000] <MikeSmith>
annevk: several people I bet, at the same time

[00:48:44.0000] <MikeSmith>
Mike Chambers for one

[00:49:14.0000] <MikeSmith>
Arno and Vincent Hardy for sure, and whatever manager they report to

[00:49:28.0000] <annevk>
but Vincent was hired after the fact

[00:49:29.0000] <asmodai>
annevk: Nice video that, I think, also touches on software usability: http://vimeo.com/25058185  :)

[00:49:38.0000] <asmodai>
(Dutch language)

[00:49:50.0000] <MikeSmith>
annevk: yeah but Arno's been there for a while I think

[00:50:14.0000] <annevk>
asmodai: nooit van "cow paths" gehoord zeker

[00:50:35.0000] <asmodai>
annevk: Ik kende alleen de Nederlandse term. :)

[00:51:54.0000] <annevk>
asmodai: olifantenpaadjes is echt een ding?

[00:52:06.0000] <annevk>
asmodai: had er niet eerder van gehoord

[00:52:11.0000] <asmodai>
annevk: Yep. :)

[00:52:44.0000] <annevk>
asmodai: wel van http://www.w3.org/TR/html-design-principles/#pave-the-cowpaths natuurlijk...

[00:52:55.0000] <annevk>
geinig wel

[00:54:46.0000] <MikeSmith>
annevk: I'm really glad you and Maciej took the time to put that doc together and get it published when you did

[00:54:49.0000] <asmodai>
annevk: Absolutely. But cool to see so many parallels. :)

[00:55:22.0000] <MikeSmith>
it is hard to imagine that document ever getting published as-is in the current group

[00:58:51.0000] <asmodai>
Too many discussions?

[01:00:52.0000] <asmodai>
Personally I always like background and guideline documents

[01:03:40.0000] <annevk>
MikeSmith: heh yeah

[01:04:02.0000] <MikeSmith>
we managed to get a lot of stuff done back in the day

[01:04:13.0000] <annevk>
MikeSmith: with the current regime you'd have to resort to undercover outfits like the WHATWG

[01:27:12.0000] <zcorpan>
Hixie: should we move document.domain to the obsolete section?

[01:32:18.0000] <jgraham>
/me is apparently behind the times, since he thought "IRC on phone" must be some kind of text<->speech bridge so you could listen to the conversations

[01:33:17.0000] <jgraham>
On the other hand I am so out of touch that I read "deprecated" when Hixie specs say "obsolete"

[01:36:56.0000] <Philip`>
Speech on a phone? You mean like the Skype app?

[01:37:14.0000] <Philip`>
It'll never catch on

[01:38:33.0000] <annevk>
using Skype all the time actually since the Phone app is broken again

[01:38:38.0000] <Ms2ger>
asmodai, elephants?

[01:38:49.0000] <annevk>
I have no idea why my iPhone keeps doing bullshit like that

[01:38:55.0000] <annevk>
but I'm out of warranty now

[01:41:22.0000] <Ms2ger>
Get a B2G phone ;)

[01:42:13.0000] <annevk>
I'm locked in the Apple ecosystem, need my iTunes

[01:48:23.0000] <asmodai>
Ms2ger: elephant paths, aka cowpaths

[01:48:37.0000] <asmodai>
Ewww, iTunes

[01:49:26.0000] <annevk>
actually small elephant paths

[01:49:33.0000] <annevk>
which makes no sense

[01:49:37.0000] <annevk>
because Dutch

[01:49:43.0000] <asmodai>
It does make sense in a way

[01:49:49.0000] <asmodai>
Elephants travel single file

[01:50:04.0000] <annevk>
they take down trees and everything

[01:51:13.0000] <asmodai>
Maybe we should unleash elephants on W3C meetings?

[01:52:01.0000] <Philip`>
Elephants are scared of mice, but mice are scared of snakes, so elephants travel in single file to make themselves look like an enormous snake

[01:52:42.0000] <annevk>
asmodai: in a Dutch way, just like Python :)

[01:53:02.0000] <asmodai>
I wonder why Adobe Air keeps insisting it needs to be installed when trying to install/update Balsamiq on Chrome. Firefox works as it should. Must be some plugin weirdness going on I guess.

[01:53:05.0000] <asmodai>
annevk: Heh

[02:17:50.0000] <MikeSmith>
does anybody know of particular sites that use keygen?

[02:41:41.0000] <MikeSmith>
Philip`: have you ever run a report on keygen?

[02:41:50.0000] <MikeSmith>
from your corpus of sites I mean

[02:51:44.0000] <Philip`>
MikeSmith: I vaguely remember looking and not finding anything interesting, though I'd expect anything interesting to be on e.g. bank login pages so I wouldn't see those anyway

[02:52:07.0000] <MikeSmith>
hmm true that I guess

[02:53:36.0000] <annevk>
there's a few banks, I think that's it

[03:01:42.0000] <Stevef_>
grepped top 10,000 home pages did not find keygen element

[03:17:25.0000] <MikeSmith>
Stevef_: thanks man

[03:17:31.0000] <MikeSmith>
I guess that's to be expected

[03:19:09.0000] <MikeSmith>
http://lists.w3.org/Archives/Public/public-whatwg-archive/ has turned out to be a nice way to look up history of stuff

[03:20:00.0000] <MikeSmith>
can use http://www.w3.org/Search/Mail/Public/advanced_search?type-index=public-whatwg-archive&index-type=t&resultsperpage=20&page=1&sortby=date and choose "Oldest message first" for the "Sort by" field

[03:35:45.0000] <zcorpan>
no keygens in web200904 either

[03:37:16.0000] <kennyluck>
wow

[03:39:36.0000] <zcorpan>
but i recall safari implemented keygen (and hence it was added to the spec) because some banks required either keygen or ActiveX

[03:50:24.0000] <AryehGregor>
It's amazing how much faster and less boring it is to annotate reftests if I don't also have to change all the style attributes to <style> elements.

[03:51:05.0000] <AryehGregor>
MikeSmith, BTW, it turns out that Peter is okay with me submitting preexisting tests that aren't formatted per guidelines, it was someone else who marked them Needs Work for stylistic reasons.

[03:51:23.0000] <MikeSmith>
oh really?

[03:51:36.0000] <MikeSmith>
so do I still need to talk with plh about it?

[03:51:42.0000] <AryehGregor>
MikeSmith, no, I don't think so.

[03:51:46.0000] <MikeSmith>
OK

[03:51:48.0000] <AryehGregor>
Thanks, though.

[03:51:53.0000] <MikeSmith>
OK

[03:51:57.0000] <MikeSmith>
thanks for letting me know

[03:52:07.0000] <AryehGregor>
Thanks for offering to help.

[03:52:46.0000] <AryehGregor>
Yeah, keygen is only used by a few sites, but they're important.  Maciej once said that WebKit implemented it because it was either that or a whole array of MS-specific technologies, such as (IIRC) the Win32 API.

[03:53:04.0000] <AryehGregor>
Because it's not enough to support ActiveX, you have to support the binaries that are delivered using it . . .

[03:53:14.0000] <AryehGregor>
Too bad keygen is awful.

[03:53:38.0000] <MikeSmith>
yeah

[03:54:32.0000] <MikeSmith>
the problem is that, now that it's in the spec, people who don't know the history behind it now come across it and think that's it some shiny to do new things with

[03:55:10.0000] <MikeSmith>
(btw, I did actually already talk with plh about the CSS test requirements, and we were planning to talk about it on our weekly Interaction Domain call today. So I'll ask him to drop it from the agenda and hopefully we can actually end the meeting earlier.)

[04:00:58.0000] <zcorpan>
AryehGregor: yeah, i should have said ActiveX+win32

[04:53:30.0000] <zcorpan>
https://bugzilla.mozilla.org/show_bug.cgi?id=248239#c49 what behavior do we want here?

[05:05:36.0000] <Ms2ger>
jgraham / zcorpan: any of you who feels like explaining http://dvcs.w3.org/hg/webapps/file/a38857de5129/Workers/tests/submissions/Opera/constructors/Worker/004.html to me? :)

[05:06:16.0000] <jgraham>
Well zcorpan wrote is so…

[05:06:55.0000] <jgraham>
Wait, what?

[05:07:16.0000] <zcorpan>
Ms2ger: sure. cross-origin URLs (except data: ) should throw

[05:07:24.0000] <jgraham>
Well it says that Velmont / odinho wrote it (whichever secret identity he is using today), so maybe I'm wrong

[05:08:06.0000] <jgraham>
Argh

[05:08:15.0000] <zcorpan>
uh, i'm pretty sure i wrote that test :-)

[05:08:19.0000] <jgraham>
No I just don't follow the hg output

[05:08:31.0000] <Ms2ger>
So 'unsupported:' is resolvable?

[05:08:52.0000] <jgraham>
I *was* quite sure that you wrote it too :p

[05:08:53.0000] <zcorpan>
Ms2ger: ask annevk :-)

[05:09:05.0000] <Ms2ger>
He's not here, dammit

[05:10:35.0000] <jgraham>
Really, putting "author Odin Hørthe Omdal <odinho⊙oc>" on the display of a file he never touched is just silly

[05:12:06.0000] <zcorpan>
Ms2ger: http://software.hixie.ch/utilities/js/live-dom-viewer/saved/1619 opera and firefox seem to resolve it (the space turns into %20) but chrome leaves the space (which maybe means it fails to resolve)

[05:13:36.0000] <zcorpan>
Ms2ger: but, depending on what the URL spec ends up saying, that might need to change to expect SyntaxError instead

[05:16:40.0000] <Ms2ger>
annevk!

[05:16:55.0000] <annevk>
hey man

[05:17:05.0000] <Ms2ger>
So, URLs :)

[05:17:21.0000] <annevk>
that is the plan

[05:17:34.0000] <Ms2ger>
And in particular, http://dvcs.w3.org/hg/webapps/file/a38857de5129/Workers/tests/submissions/Opera/constructors/Worker/004.html

[05:17:41.0000] <annevk>
but it's vacation and somehow I managed to stress myself already

[05:17:56.0000] <annevk>
/me looks

[05:18:34.0000] <annevk>
why would "http://www.example.invalid/" throw?

[05:18:47.0000] <annevk>
I'm not entirely familiar with new Worker() I guess

[05:19:38.0000] <Ms2ger>
Resolve the scriptURL argument relative to the entry script's base URL, when the method is invoked.

[05:19:38.0000] <Ms2ger>
If this fails, throw a SyntaxError exception.

[05:19:38.0000] <Ms2ger>
If the origin of the resulting absolute URL is not the same as the origin of the entry script, then throw a SecurityError exception.

[05:19:45.0000] <MikeSmith>
that test doesn't actually display anything

[05:20:10.0000] <Ms2ger>
MikeSmith, it uses an Opera-internal test harness

[05:20:17.0000] <Ms2ger>
Which I'm fixing

[05:20:20.0000] <MikeSmith>
ah OK

[05:20:54.0000] <annevk>
a origin checks

[05:20:58.0000] <annevk>
that makes sense

[05:21:20.0000] <annevk>
so I guess we haven't decided yet whether resolving can actually fail

[05:21:25.0000] <annevk>
I'm leaning towards yes

[05:21:33.0000] <annevk>
most browsers have a concept of invalid URLs

[05:21:33.0000] <Ms2ger>
Hmm, Gecko doesn't seem to throw much

[05:21:54.0000] <annevk>
all those exceptions for new Worker are origin-related no?

[05:21:58.0000] <annevk>
SecurityError is 18

[05:22:10.0000] <annevk>
so not really about URLs

[05:22:20.0000] <Ms2ger>
Yeah

[05:22:50.0000] <Ms2ger>
Well, the question is if the resolving should already have failed before the origin check

[05:24:17.0000] <zcorpan>
annevk: the unclear case was "unsupported:" since it's not clear if that should resolve to begin with

[05:25:04.0000] <zcorpan>
annevk: if it doesn't resolve, it should throw SyntaxError; if it does resolve, it should throw SecurityError

[05:27:44.0000] <annevk>
I think it should resolve

[05:27:59.0000] <annevk>
it's a valid scheme so it's not a relative reference

[05:28:51.0000] <zcorpan>
ok. wfm! make sure the URL spec agrees :-)

[05:30:06.0000] <Ms2ger>
Now, the data: url

[05:32:55.0000] <annevk>
that becomes a sniffed text/plain resource I guess

[05:33:09.0000] <annevk>
we have made data URLs same-origin for XMLHttpRequest

[05:33:15.0000] <annevk>
not sure why Workers should be an exception

[05:33:18.0000] <annevk>
zcorpan: that's the plan

[05:34:10.0000] <Ms2ger>
So the spec is wrong?

[05:34:43.0000] <zcorpan>
Ms2ger: we gave spec feedback asking data: to be supported for workers. hixie said it seemed reasonable, but the spec hasn't changed, iirc

[05:34:53.0000] <AryehGregor>
How about we make them both throw the same so we don't have to care why it failed?  :)

[05:35:30.0000] <zcorpan>
Ms2ger: we don't support data: for shared workers because it turned out different-origin pages suddenly could communicate if they both open the same data: shared worker, however that is fixable by remembering which origin opened the shared data: url

[05:35:31.0000] <Ms2ger>
Let's kill DOMException and only throw Error :)

[05:36:32.0000] <Ms2ger>
zcorpan, sounds like I'll have the test expect an exception, then :)

[05:36:56.0000] <zcorpan>
yeah i'm fine with making the test match what the spec currently says

[05:37:16.0000] <zcorpan>
but i still think we should change the spec, since data: urls can be useful :-)

[05:37:39.0000] <zcorpan>
Ms2ger: thanks for doing this btw

[05:37:43.0000] <Ms2ger>
Np

[05:38:00.0000] <Ms2ger>
It's more useful than arguing about signed / unsigned integers over in #developers :)

[05:38:08.0000] <zcorpan>
heh

[05:38:43.0000] <niloy>
can someone please tell me how the browser decides the encoding of responses over ajax ?

[05:39:17.0000] <Ms2ger>
Black magic

[05:39:30.0000] <niloy>
:(

[05:39:44.0000] <annevk>
niloy: do you mean XMLHttpRequest?

[05:39:48.0000] <niloy>
yes

[05:40:00.0000] <annevk>
niloy: what kind of attribute are you accessing?

[05:40:08.0000] <niloy>
JSON data

[05:40:18.0000] <annevk>
niloy: do you set responseType to "json"?

[05:40:29.0000] <Ms2ger>
http://dvcs.w3.org/hg/webapps/file/a38857de5129/Workers/tests/submissions/Opera/constructors/Worker/005.html

[05:40:30.0000] <niloy>
No, text data later parsed with JSON.parse

[05:40:32.0000] <annevk>
niloy: and then use response? or do you parse responseText?

[05:40:37.0000] <annevk>
k

[05:41:00.0000] <annevk>
niloy: it's described here: http://dvcs.w3.org/hg/xhr/raw-file/tip/Overview.html#text-response-entity-body

[05:41:02.0000] <Ms2ger>
zcorpan, any particular reason to make that test both "#" as a URL and the properties of the global?

[05:41:09.0000] <niloy>
annevk, thanks

[05:44:21.0000] <zcorpan>
Ms2ger: "#" as the URL is the standard way of loading the worker script in this testsuite, ugly hack to make the worker script be in the same file

[05:44:54.0000] <zcorpan>
Ms2ger: it should work per spec!

[05:45:12.0000] <Ms2ger>
So should document.all ;)

[05:45:55.0000] <zcorpan>
i don't see how that's relevant here :-P

[05:46:22.0000] <Ms2ger>
This standard way hurts my eyes :)

[05:46:32.0000] <zcorpan>
sorry about that

[05:49:06.0000] <Ms2ger>
Actually...

[05:49:28.0000] <Ms2ger>
Should <!-- in JS work per spec? :)

[05:49:36.0000] <Ms2ger>
(ECMA spec, that is)

[05:49:51.0000] <zcorpan>
should work per http://mathias.html5.org/specs/web-ecmascript/ !

[05:50:04.0000] <matjas>
not per ES

[05:51:26.0000] <Ms2ger>
Then why do you use //-->? :)

[05:52:10.0000] <zcorpan>
the interop with --> was not as good as with <!--. but probably not necessary

[05:52:18.0000] <zcorpan>
feel free to drop it :-)

[06:06:31.0000] <annevk>
smaug____: did you reach dougt?

[06:06:47.0000] <annevk>
MikeSmith: do you feel like waiting another week or should we just publish it next Thursday?

[06:09:02.0000] <MikeSmith>
annevk: I guess let's wait a week and have plenty of time to get it ready

[06:09:28.0000] <annevk>
cool cool cool

[06:14:38.0000] <MikeSmith>
kind of surprised there have not been any responses to the HTTP WG call for expressions of interest for HTTP2

[06:14:43.0000] <MikeSmith>
http://trac.tools.ietf.org/wg/httpbis/trac/wiki/Http2CfI

[06:15:03.0000] <MikeSmith>
http://lists.w3.org/Archives/Public/ietf-http-wg/2012AprJun/0718.html

[06:23:21.0000] <annevk>
Ms2ger: any reason the key "script's base URL" would not work?

[06:23:42.0000] <annevk>
found it

[06:23:51.0000] <annevk>
lowercase yadayadayada

[06:27:55.0000] <smaug____>
annevk: not yet

[06:27:59.0000] <smaug____>
I did send email

[06:34:23.0000] <MikeSmith>
smaug____: wonder if Doug hangs out on #mobile

[06:34:31.0000] <MikeSmith>
on mozilla irc I mean

[06:36:21.0000] <smaug____>
MikeSmith: yes. I just ping'ed him

[06:37:03.0000] <MikeSmith>
k

[07:20:43.0000] <jgraham>
So, does anyone want to write me a browser extension that does inline find just on idl blocks?

[07:29:23.0000] <Philip`>
jgraham: How about one that lets you type in an XPath query to search for?

[07:29:59.0000] <jgraham>
Philip`: You so funny

[07:30:38.0000] <Ms2ger>
Funnier than you :)

[07:30:48.0000] <Philip`>
Something like https://addons.mozilla.org/en-US/firefox/addon/xpather/ with a suitable query looks like it should work

[07:31:02.0000] <jgraham>
Ms2ger: You've heard the expression "damned by faint praise"?

[07:31:30.0000] <Ms2ger>
:D

[08:04:16.0000] <zcorpan>
http://software.hixie.ch/utilities/js/live-dom-viewer/saved/1621 http://software.hixie.ch/utilities/js/live-dom-viewer/saved/1622

[08:05:39.0000] <Ms2ger>
WorkerGlobalScope.ononline / WorkerGlobalScope.onoffline

[08:05:40.0000] <Ms2ger>
New?

[08:06:42.0000] <zcorpan>
Ms2ger: ononline and onoffline was added to the spec at some point

[08:07:06.0000] <Ms2ger>
Well, presumably it was :)

[08:07:26.0000] <zcorpan>
which was after the events were added to the spec

[08:10:58.0000] <Ms2ger>
Also, Chrome doesn't do btoa

[08:12:40.0000] <MikeSmith>
http://html9responsiveboilerstrapjs.com/ fun stuff

[08:13:48.0000] <Ms2ger>
\o/

[08:13:58.0000] <Hixie>
zcorpan: data: for workers is on my todo list

[08:14:49.0000] <zcorpan>
Hixie: ah, ok

[08:16:07.0000] <Ms2ger>
Is the set of todo list entries before that uncountable?

[08:16:40.0000] <Hixie>
no

[08:16:44.0000] <Hixie>
but it's not small

[08:17:05.0000] <Hixie>
re keygen, iirc the bulk of the usage was on intranet sites when i last looked into it

[08:21:09.0000] <zcorpan>
Ms2ger: you ok with introducing a new quirk here? https://bugzilla.mozilla.org/show_bug.cgi?id=248239#c56

[08:48:26.0000] <Ms2ger>
No

[08:48:29.0000] <Ms2ger>
/me goes and reads

[08:50:01.0000] <Ms2ger>
Talk to dbaron, please?

[09:00:19.0000] <annevk>
someone should figure out tables first

[09:01:05.0000] <annevk>
almost never makes sense in my experience to fix bits and pieces without understanding the complete picture

[10:25:56.0000] <zewt>
bleh, bit by unnecessary setTimeout delays again

[10:27:07.0000] <zewt>
now i have to try to remember if there were any hacks around that...

[10:29:02.0000] <jsbell>
ms2ger: thanks for the bug link re: "null" dicts.

[10:29:07.0000] <Ms2ger>
Np

[10:29:37.0000] <Ms2ger>
It's been that way all of a day, why didn't you know? ;)

[10:33:07.0000] <jsbell>
I swear I was looking at the "red" version of the spec when I typed my message; I blame caching. :)

[10:34:55.0000] <[tm]>
Hixie:  thanks for info about keygen

[10:38:28.0000] <Ms2ger>
[tm], is there some way to get notified about changes to the WebIDL ED?

[10:39:37.0000] <[tm]>
Hixie:  but the spec rightly should have a big disclaimer saying "don't actually use this for anything"

[10:40:25.0000] <[tm]>
Ms2ger: no but you can roll one yourself

[10:40:52.0000] <[tm]>
or i guess i can set something up for you

[10:41:47.0000] <Ms2ger>
I don't care, it's for bz :)

[10:41:51.0000] <[tm]>
if you big me enough about it

[10:41:56.0000] <[tm]>
ah

[10:42:22.0000] <[tm]>
well then i will definitely make something then :)

[10:42:58.0000] <[tm]>
bz deserves it for sure

[10:43:20.0000] <Ms2ger>
I need to remember that line ;)

[10:44:02.0000] <[tm]>
heh

[10:45:34.0000] <[tm]>
/me bows to the force for goodness in the universe that bz is

[10:50:40.0000] <[tm]>
Ms2ger:  you are a similar force for goodness btw

[10:50:50.0000] <Ms2ger>
Me? Naah

[10:54:23.0000] <jwalden>
gsnedders: I have mail written, fwiw, doing a couple things first before I send it -- probably later this week

[10:56:22.0000] <Ms2ger>
/month/year/century

[11:26:14.0000] <[tm]>
Ms2ger:  you fully deserve the love

[11:26:39.0000] <Ms2ger>
/me wonders how much [tm] had to drink

[11:27:50.0000] <n00lk0w>
why on earth is theh global draggable attribute enumerated?

[11:30:42.0000] <gsnedders>
jwalden: k, then I won't subvert you :P

[11:30:44.0000] <[tm]>
n00lk0w:  no

[11:31:38.0000] <jwalden>
gsnedders: :-) it was suggested to me that it's harder to stop-energy a patch, so I'll probably do that

[11:31:47.0000] <[tm]>
maybe in order to match how it's actually implemented, maybe

[11:31:50.0000] <jwalden>
and maybe send mail after

[11:31:59.0000] <Ms2ger>
[tm], is draggable implemented?

[11:32:34.0000] <Hixie>
[tm]: that applies to a lot in the spec...

[11:33:27.0000] <gsnedders>
jwalden: Right, I'll almost certainly push change to Carakan this week regardless of what happens. Only possible change will be poisioning it so you can't get the setter.

[11:34:47.0000] <gsnedders>
/me had to back it out when he tried before, because he screwed up, and hasn't got around to fixing it till now

[11:40:18.0000] <n00lk0w>
Hixie: do you know why it's enumerated?

[11:40:49.0000] <n00lk0w>
<a href=/page draggable>alsdkfj</a> seems pretty intuitive to me

[11:40:50.0000] <Hixie>
hm?

[11:41:08.0000] <n00lk0w>
gramattically, it's indentical to the term "hidden"

[11:41:17.0000] <Hixie>
what is the question?

[11:41:20.0000] <n00lk0w>
it's an adjective describing an aspect of the element.

[11:41:36.0000] <n00lk0w>
...why isn't the global @draggable attribute boolean?

[11:41:44.0000] <n00lk0w>
why does it require an explicitly declared value?

[11:41:46.0000] <Hixie>
/me looks

[11:42:02.0000] <n00lk0w>
seems entirely illogical to me.

[11:42:05.0000] <Hixie>
oh because it has three states

[11:42:07.0000] <n00lk0w>
 http://developers.whatwg.org/dnd.html#the-draggable-attribute

[11:42:48.0000] <Hixie>
if it was a boolean there'd be no way to turn off dragging an image using the attribute, e.g.

[11:42:58.0000] <Hixie>
bbiab, lunch

[11:43:14.0000] <n00lk0w>
Hixie: right, but the auto statecould be declared indicated by the absence of that attribute.

[11:43:43.0000] <n00lk0w>
Hixie: can you elaborate a bit on the image scenario, please?

[11:44:11.0000] <Ms2ger>
<img>

[11:44:17.0000] <Ms2ger>
^ you can drag that

[11:44:37.0000] <n00lk0w>
Ms2ger: and...?

[12:12:06.0000] <n00lk0w>
is there a way to declare the default "auto" value of draggable on a per-document basis?

[12:18:41.0000] <Hixie>
n00lk0w: it varies on a per-element basis

[12:33:34.0000] <Hixie>
heycam|away: is there some special phrasing i should use to invoke a callback object that might be null?

[12:53:04.0000] <n00lk0w>
Hixie: then what is the point of the auto value?

[12:53:16.0000] <n00lk0w>
Hixie: also, can you explain your earlier image dragging scenario?

[12:55:56.0000] <Hixie>
n00lk0w: on a page that doesn't have any script or anything, you can drag an image and a link, but you can't drag a div.

[12:56:00.0000] <Hixie>
n00lk0w: right?

[13:06:23.0000] <jgraham>
HTML pop quiz: <script>var a = window; document.open(); document.close(); setTimeout(function() {alert(a === window)}, x)</script> - what happens and does it depend on the value of x?

[13:06:51.0000] <n00lk0w>
Hixie: right.

[13:06:58.0000] <jgraham>
Where by "pop quiz" I mean "I know what some browsers do but I'm not sure I understand what's going on"

[13:09:21.0000] <eighty4>
jgraham: it gives me "true". Am I right on that at least?

[13:10:15.0000] <jgraham>
eighty4: Yes.

[13:11:23.0000] <eighty4>
jgraham: and what would be wrong with that? So not following :/

[13:11:24.0000] <Hixie>
jgraham: Window gets replaced, but the WindowProxy does not, so it always alerts true.

[13:12:00.0000] <jgraham>
Hixie: Right, I think my example doesn't quite demonstrate the issue clearly

[13:12:23.0000] <Hixie>
n00lk0w: ok so that means the default value of "draggable" needs to be something that makes <img> be draggable and <div> not be draggable

[13:12:32.0000] <Hixie>
n00lk0w: so it can't be either "true" or "false"

[13:12:36.0000] <jgraham>
The question is, why does the timeout run at all? It is called on the *old* window object

[13:14:13.0000] <Hixie>
oh, interesting question

[13:16:25.0000] <Hixie>
jgraham: it should not fire

[13:16:36.0000] <Hixie>
jgraham: document.open() clears the timeouts list

[13:16:45.0000] <Hixie>
jgraham: so my original answer was wrong. it should not alert.

[13:17:27.0000] <jgraham>
Hixie: The timeout is set *after* document.open

[13:17:30.0000] <jgraham>
http://software.hixie.ch/utilities/js/live-dom-viewer/saved/1624

[13:17:33.0000] <Hixie>
oh

[13:17:45.0000] <Hixie>
well then where's the question?

[13:17:58.0000] <jgraham>
It seems the timeout is a function on the old window object but is called in the context of the new window object

[13:18:02.0000] <Hixie>
no no

[13:18:05.0000] <Hixie>
it's on the new Window object

[13:18:11.0000] <jgraham>
How?

[13:18:50.0000] <eighty4>
I'm so not following at all :/ Why would it not run? in what way is the settimeout related to you opening/closing a document?

[13:19:24.0000] <jgraham>
eighty4: opening/closing a document changes the window object for a new one, but doesn't change the global scope of the current script

[13:19:30.0000] <Hixie>
jgraham: "this" is the WindowProxy

[13:19:37.0000] <Hixie>
jgraham: not the Window

[13:19:37.0000] <jgraham>
So in general foo != window.foo

[13:19:48.0000] <Hixie>
foo === window.foo always

[13:19:57.0000] <Hixie>
unless "this" is something other than the WindowProxy of course

[13:20:04.0000] <Hixie>
or you're in a with()...

[13:20:35.0000] <Hixie>
because this.window === window === this

[13:20:41.0000] <jgraham>
When you say "always" what do you mean? If I set a property "a" on window window.a !== a

[13:20:58.0000] <Hixie>
?

[13:21:14.0000] <Hixie>
assuming you're in the global scope, window.a === a

[13:21:20.0000] <Hixie>
unless you have variables i guess

[13:21:29.0000] <Hixie>
window.a === this.a

[13:21:31.0000] <jgraham>
Right, that's what I meant

[13:21:54.0000] <Hixie>
other than in a long set of complicated cases, my statement is always true.

[13:21:55.0000] <Hixie>
:-P

[13:22:02.0000] <Hixie>
"i'll come in a gain"

[13:22:06.0000] <Hixie>
again, even

[13:22:12.0000] <Hixie>
man i can't even type memes right

[13:22:16.0000] <jgraham>
Heh

[13:22:42.0000] <Hixie>
anyway my point is that "this" is the WindowProxy in your example

[13:22:43.0000] <jgraham>
OK, so you have a function setTimeout on the original Window object

[13:22:55.0000] <jgraham>
and you replace window

[13:23:03.0000] <jgraham>
and call the original function

[13:23:04.0000] <eighty4>
so you're saying that b = window; document.open(); b === window should return false?

[13:23:41.0000] <Hixie>
what?

[13:23:49.0000] <Hixie>
is the name setTimeout() relevant to the question?

[13:23:55.0000] <Hixie>
i.e. is this a question about JS or about setTimeout

[13:23:56.0000] <jgraham>
Not really

[13:24:08.0000] <n00lk0w>
Hixie: got it. thanks :P

[13:24:37.0000] <Hixie>
jgraham: i don't understand your question

[13:25:00.0000] <Hixie>
jgraham: but "window" and "this" at the global scope are both the same object, namely, the magic WindowProxy object.

[13:25:16.0000] <jgraham>
Well I guess setTimeout is relevant because it lets you run code later, after the current script

[13:26:36.0000] <Hixie>
try asking a new question

[13:26:55.0000] <jgraham>
Hixie: The point was that after document.open I would expect window.setTimeout !== setTimeout

[13:27:02.0000] <Hixie>
ah ok

[13:27:04.0000] <Hixie>
well that point is wrong

[13:27:06.0000] <jgraham>
Which seems to be true

[13:27:32.0000] <Hixie>
window.setTimeout === this.setTimeout because window === this.

[13:27:35.0000] <jgraham>
http://software.hixie.ch/utilities/js/live-dom-viewer/saved/1625 says true in Gecko at least

[13:27:53.0000] <jgraham>
Yeah but this is not the global scope at that point

[13:27:57.0000] <Hixie>
what does "a" have to do with anything in that test?

[13:28:13.0000] <Hixie>
the setTimeout() callback's |this| is also the WindowProxy

[13:28:44.0000] <Hixie>
http://software.hixie.ch/utilities/js/live-dom-viewer/saved/1626

[13:28:50.0000] <Hixie>
the correct answers are "true" and "true"

[13:28:56.0000] <jgraham>
a is irrelevant, I should have deleted it

[13:29:09.0000] <Hixie>
k

[13:29:50.0000] <jgraham>
I don't see how the first is supposed to be "true"

[13:30:29.0000] <jgraham>
I assume the global scope isn't supposed to change under the unning script

[13:30:41.0000] <Hixie>
do you agree that "foo" is equivalent to "this.foo" in a function with no arguments, no variables, and no with statement?

[13:30:56.0000] <jgraham>
*running

[13:31:50.0000] <jgraham>
In pure ECMAScript I think that is true. A browser is not pure

[13:32:48.0000] <Hixie>
well if (foo !== this.foo) in a function with no arguments, no variables, and no with statement, i've no idea what it would be then

[13:33:13.0000] <Hixie>
if that statement is not true then my assumptions are flawed and i cannot draw any conclusions

[13:33:44.0000] <jgraham>
Well it's not true in Gecko at least

[13:33:50.0000] <jgraham>
According to your test

[13:33:58.0000] <Hixie>
gecko is buggy.

[13:34:05.0000] <jgraham>
Perhaps

[13:35:08.0000] <smaug____>
jgraham: in which case foo !== this.foo ?

[13:35:50.0000] <smaug____>
ah, I see

[13:35:54.0000] <Hixie>
http://software.hixie.ch/utilities/js/live-dom-viewer/saved/1628

[13:36:00.0000] <Hixie>
<script>onload = function() { document.open(); document.close(); foo = {}; w(this.foo === foo); }</script>

[13:36:02.0000] <smaug____>
I wonder if the spec is buggy

[13:36:27.0000] <Hixie>
i don't understand how   foo = {}; w(this.foo === foo);   can print false.

[13:36:46.0000] <smaug____>
this points to the old window

[13:36:56.0000] <Hixie>
this points to the WindowProxy

[13:37:08.0000] <smaug____>
it points to the this of the load event listener

[13:37:15.0000] <jgraham>
I should note that WebKit cheats with document.open; it doesn't replace the window object at all

[13:37:35.0000] <Hixie>
oh, hm, the this of hte load event...

[13:37:37.0000] <Hixie>
interesting

[13:37:45.0000] <Hixie>
but still, whether it's the this of the load event or not

[13:37:55.0000] <Hixie>
i don't understand how   foo = {}; w(this.foo === foo);   can print false

[13:38:11.0000] <Hixie>
surely "foo" is equivalent to "this.foo"

[13:38:16.0000] <Hixie>
in that code

[13:38:28.0000] <smaug____>
why ?

[13:38:35.0000] <smaug____>
hmm

[13:38:41.0000] <Hixie>
oh wait...

[13:38:46.0000] <Hixie>
this is that thing the ES group refuses to spec

[13:38:48.0000] <Hixie>
isn't it

[13:38:49.0000] <smaug____>
foo would be set to the current global, no?

[13:38:54.0000] <Hixie>
that the global scope doesn't equal the global

[13:38:56.0000] <Hixie>
er

[13:38:59.0000] <Hixie>
that the global scope doesn't equal the this

[13:39:06.0000] <jgraham>
It depends if this is a pointer to the window or the global scope

[13:39:51.0000] <smaug____>
in load event listener 'this is pointer to the window

[13:40:04.0000] <Hixie>
riiiight

[13:40:05.0000] <Hixie>
"If the script's global object is a Window object, then in JavaScript, the ThisBinding of the global execution context for this script must be the Window object's WindowProxy object, rather than the global object."

[13:40:09.0000] <Hixie>
that's the problem

[13:40:15.0000] <Hixie>
ok

[13:41:08.0000] <Hixie>
jgraham: ok so i agree that you are calling setTimeout on the old Window object. The timeout still runs, because it's callback is associated with the Document, which is still active.

[13:41:47.0000] <Hixie>
jgraham: and it always alerts true, because "a" and "window" are both the WindowProxy

[13:41:52.0000] <jgraham>
And when it runs, what does it get as the this object, or the window object?

[13:41:57.0000] <Hixie>
s/it's/its/

[13:42:40.0000] <Hixie>
that's defined in the setTimeout() section, it gets the WindowProxy as its "this"

[13:43:24.0000] <Hixie>
and as its global scope it gets the original Window object

[13:43:24.0000] <jgraham>
That makes sense I guess

[13:43:34.0000] <jgraham>
Yes, that has to be true

[13:43:57.0000] <jgraham>
Changing the ES scope chain under the script would be unusually evil

[13:44:04.0000] <jgraham>
even for the web

[13:44:09.0000] <Hixie>
so http://software.hixie.ch/utilities/js/live-dom-viewer/?saved=1626 should print false, and true

[13:44:23.0000] <Hixie>
so webkit is buggy

[13:44:27.0000] <Hixie>
(as you said above)

[13:45:07.0000] <jgraham>
Great, that makes more sense now :)

[13:45:12.0000] <jgraham>
Thanks!

[13:45:30.0000] <smaug____>
(webkit doesn't really do anything with document.open. no new window, no session history etc)

[13:48:18.0000] <jgraham>
Time to listen to some Jeeves and Wooster on the radio, I think

[13:48:39.0000] <jgraham>
Oh except the next episode is not up yet

[13:48:52.0000] <jgraham>
tears before bedtime

[14:02:04.0000] <zewt>
down with hard to read fixed-width-font tracker

[14:02:21.0000] <Hixie>
tracker...?

[14:03:37.0000] <zewt>
bug tracker?

[14:07:18.0000] <Hixie>
bugzilla?

[14:07:22.0000] <Hixie>
what's hard to read about bugzilla?

[14:08:08.0000] <Hixie>
/me uses fixed width text for pretty much everything... irc, email, emacs, bugs...

[14:37:38.0000] <jamesr>
i wonder if there's research on the relative reading speed of fixed vs propotional fonts for programmers who stare at fixed-width fonts all day

[14:37:45.0000] <jamesr>
maybe it's different from genpop

[14:38:52.0000] <Hixie>
heh

[14:38:54.0000] <Hixie>
maybe

[14:57:06.0000] <yuhong>
Do you know win32k user-mode callbacks poses similar problems to DOM mutation events?

[14:57:28.0000] <yuhong>
http://www.mista.nu/research/mandt-win32k-paper.pdf

[15:12:53.0000] <zewt>
can we hang up apple in the Worst Web Page Hall of Fame

[15:13:15.0000] <zewt>
download links that only work with javascript, which 403 if you try to copy the underlying redirect without carefully copying over cookies

[15:13:26.0000] <zewt>
which means I can't download xcode, since I can only download large files with wget on a remote server

[15:14:15.0000] <zewt>
time to futz with setting cookie headers manually

[16:11:16.0000] <ojan>
ok...i give up...who do i contact at w3c about delayed mail delivery?

[16:11:35.0000] <ojan>
tried finding a contact on w3.org and giving up on that

[16:12:04.0000] <ojan>
a number of us have been getting delays of days on www-style and public-webapps mail for the past few weeks

[16:12:30.0000] <ojan>
i figure someone here can point me at the right people

[16:12:47.0000] <ojan>
shepazu: ^^^ maybe you know?

[16:37:51.0000] <heycam>
Hixie, if you have a nullable callback type? no, I don't have any special term that means "call this if it's not null".

[16:38:40.0000] <TabAtkins_>
heycam: That's called Maybe.

[16:39:50.0000] <heycam>
Hey I just met you, and this is crazy, but I'm a callback, so call me Maybe?

[16:40:10.0000] <TabAtkins_>
That's such a weird meme.

[16:41:00.0000] <heycam>
take lines from popular song => change them to something slightly funny that rhymes with the original

[16:50:48.0000] <zewt>
bleh if i can't find a way to disable address bar completion completely in chrome, it's time to stop using it ... way too disruptive


2012-06-27
[18:04:22.0000] <Hixie>
heycam: k

[18:04:30.0000] <Hixie>
heycam: check the recent diff to see if i did the callback stuff right

[18:04:38.0000] <Hixie>
i have what may be a silly question

[18:04:44.0000] <Hixie>
how do i update a ubuntu install?

[18:05:03.0000] <Hixie>
i tried using aptitude but all the sources were either 404 or "ignored" for reasons i could not discern

[18:06:12.0000] <heycam>
Hixie, this change? http://lists.whatwg.org/pipermail/commit-watchers-whatwg.org/2012/006302.html

[18:06:55.0000] <Hixie>
yeah

[18:14:13.0000] <heycam>
Hixie, is [TreatNonCallableAsNull] really needed for setTimeout/setInterval functions? I thought any non-callable object should be converted to a string

[18:14:39.0000] <heycam>
Hixie, you can also drop the [AllowAny], since the default behaviour for overloading is to select a DOMString overload if it failed to match the others

[18:15:36.0000] <heycam>
Hixie, if you drop [TreatNonCallableAsNull] there, then I think you can just get rid of ArbitraryCallback and reference http://dev.w3.org/2006/webapi/WebIDL/#common-Function

[18:16:59.0000] <heycam>
Hixie, "with the callback this value set to the E's currentTarget" =~ s/to the/to/

[18:17:05.0000] <heycam>
Hixie, apart from that looks good

[18:23:43.0000] <Hixie>
can i ask you to file a bug or send mail with those? i'm not able to track things right this second

[18:30:00.0000] <heycam>
Hixie, sure

[18:31:05.0000] <Hixie>
thanks dude

[18:41:10.0000] <MikeSmith>
hmm chrome://tasks/ "This webpage is not available"

[00:01:43.0000] <annevk>
Hixie: there was a bug for the event handler stuff too

[00:03:16.0000] <annevk>
closing the bug https://www.w3.org/Bugs/Public/show_bug.cgi?id=15358

[00:04:56.0000] <annevk>
looks a lot better now :)

[00:39:56.0000] <annevk>
Hixie: we could name Document's URL the "document URL" maybe

[00:40:25.0000] <annevk>
maybe do the same for encoding

[00:40:38.0000] <annevk>
"document encoding" is somewhat clearer at least

[00:40:45.0000] <annevk>
which reminds me, I should update specs to use the Encoding spec

[01:03:42.0000] <zcorpan>
Hixie: shouldn't EventHandler be nullable?

[01:09:05.0000] <annevk>
zcorpan: that's EventHandlerNonNull

[01:17:25.0000] <zcorpan>
annevk: oh

[01:18:19.0000] <zcorpan>
[tm]: why is https://lists.w3.org/Archives/Member/member-webapi-cvs/ Member-only?

[01:21:11.0000] <smaug____>
odd

[01:48:43.0000] <jgraham>
Ms2ger: What's with step_func_done?

[01:49:21.0000] <Ms2ger>
It calls done() after the step

[01:49:56.0000] <jgraham>
Well, I see that

[01:50:00.0000] <jgraham>
But why?

[02:16:24.0000] <annevk>
zcorpan: legacy decision that we have not yet retroactively changed because nobody cared enough last time it was brought up, I think

[02:16:35.0000] <annevk>
zcorpan: but as gsnedders can attest my memory has failed me before :)

[02:19:44.0000] <zcorpan>
annevk: ok

[02:19:58.0000] <zcorpan>
[tm]: is it possible to make it public? :-)

[02:29:32.0000] <annevk>
updated Notifications and XMLHttpRequest for event handlers

[02:29:56.0000] <annevk>
not editing anything else I think that has them

[02:40:56.0000] <zcorpan>
/me wonders what https://bitbucket.org/kcomkar/dom-core/ is about

[02:45:05.0000] <annevk>
spam I think

[02:45:13.0000] <annevk>
someone should report it to bitbucket

[02:46:06.0000] <annevk>
I'll do that

[02:47:39.0000] <annevk>
https://bitbucket.org/site/master/issue/4272/

[03:31:31.0000] <AryehGregor>
/me wrote a transforms reftest on February 2 and cannot for the life of him figure out what it's meant to test

[03:33:04.0000] <AryehGregor>
/me makes it do something else

[03:36:05.0000] <[tm]>
zcorpan:  make what public?

[03:45:57.0000] <AryehGregor>
[tm], presumably https://lists.w3.org/Archives/Member/member-webapi-cvs/

[04:00:46.0000] <[tm]>
AryehGregor: ah yeah

[04:12:31.0000] <jgraham>
AryehGregor: I sometimes find that with tests that I wrote today…

[04:12:50.0000] <AryehGregor>
jgraham, this is why the CSSWG requires <meta name="assert"> that explains what it's testing.

[04:12:56.0000] <AryehGregor>
Works well enough for reftests.

[04:13:01.0000] <Ms2ger>
assertDefined(a.initErrorEvent, 'ErrorEvent.initErrorEvent');

[04:13:04.0000] <Ms2ger>
zcorpan--

[04:14:39.0000] <jarek_>
does SVG1.1 spec define user agent stylings?

[04:15:00.0000] <jarek_>
I mean default user agent stylings

[04:15:25.0000] <jgraham>
AryehGregor: I'm not sure that a mandatory comment really solves "what does this code actually do?", which is the common problem

[04:15:35.0000] <jarek_>
e.g. when you create <rect> without any fill then it's rendered with black fill on Chrome, is this standard behavior or could it have any fill depending on user agent?

[04:15:48.0000] <AryehGregor>
"What does this code actually do?" is hopefully determinable by reading the code.

[04:15:55.0000] <jgraham>
I mean <title> is enough to describe what it ought to be testing

[04:15:57.0000] <AryehGregor>
"Why does it do it?" is the trick.

[04:16:02.0000] <AryehGregor>
Really?

[04:16:25.0000] <AryehGregor>
Assert I just wrote: "This tests that rotatex(90deg) scale3d(2, 1, 2) rotatex(-90deg) is the same as scalex(2) scaley(2). Conjugating by the rotation swaps the Y and Z coordinates for the scale."

[04:16:39.0000] <AryehGregor>
Title: "CSS Test (Transforms): scale3d() and rotatex()".

[04:17:01.0000] <AryehGregor>
Obviously, a mandatory comment doesn't do much if it's not used right, but at least it prods lazy people like me into writing something meaningful when we otherwise wouldn't.

[04:17:25.0000] <jgraham>
I doubt most people will write anything like that much for most tests

[04:17:28.0000] <AryehGregor>
/me likes mandatory function-level comments in code for that reason, except that people tend to not bother updating the comments when they update the code

[04:17:40.0000] <AryehGregor>
Well, I do tend to like to hear the sound of my own . . . typing.

[04:17:50.0000] <AryehGregor>
Probably my asserts are mostly too long.

[04:28:34.0000] <roc>
I don't really like mandatory comments

[04:28:45.0000] <roc>
people who don't want to write good comments will just write bad ones, which are often worse than no comment at all

[04:30:32.0000] <AryehGregor>
Well, it depends on how much reviewers know or care about good comments.

[04:30:44.0000] <roc>
I care

[04:30:49.0000] <AryehGregor>
If it's some corporate policy from on high and the actually programmers don't get it, then yes, it's pointless.

[04:30:58.0000] <roc>
because I'm a lazy reviewer

[04:30:59.0000] <AryehGregor>
s/actually/actual/

[04:31:07.0000] <Ms2ger>
roc, oh, we know that ;)

[04:31:09.0000] <roc>
EXPLAIN WHAT THIS CODE DOES SO I DON'T HAVE TO FIGURE IT OUT

[04:31:22.0000] <jgraham>
AryehGregor: In the case of tests, it helps to assume that there are no reviewers. Since it is basically true

[04:31:35.0000] <AryehGregor>
jgraham, not in the CSSWG, for better or worse.

[04:32:00.0000] <jgraham>
Do they review for correctness or just style?

[04:32:05.0000] <AryehGregor>
I guess there are two types of comments: "summarize what this long function actually does so I don't have to read through the code", and "explain why the heck you're doing this weird-looking thing, even though I understand perfectly well what the immediate effect is".

[04:32:22.0000] <AryehGregor>
jgraham, apparently it depends on the reviewer!  But in principle, both.

[04:32:24.0000] <Ms2ger>
jgraham, hey, I reviewed the cssom tests from ttwf

[04:32:29.0000] <AryehGregor>
I definitely got a few test bugs pointed out.

[04:32:30.0000] <Ms2ger>
Most were wrong

[04:32:42.0000] <jgraham>
ttwf?

[04:32:46.0000] <AryehGregor>
"Test the Web Forward"

[04:32:48.0000] <jgraham>
Oh Test The Web Forward

[04:33:08.0000] <AryehGregor>
Ms2ger, wrong like how?  Also, since when is CSSOM precise enough that you can write useful tests?

[04:33:10.0000] <jgraham>
AryehGregor: I guess it is nice if they are pointing out real issues

[04:33:22.0000] <AryehGregor>
(Well, maybe some parts always were, I'm just bitter because basic stuff like "serialization" is almost totally undefined)

[04:33:31.0000] <jgraham>
But I don't trust a system that is based on people spending unpaid time doing something boring

[04:33:35.0000] <Ms2ger>
AryehGregor, most of the others are "Specification issue" :)

[04:33:44.0000] <jgraham>
With no other reward

[04:34:05.0000] <AryehGregor>
jgraham, the people reviewing my tests are all WebKit people who actually work on implementing transforms.  They are paid, although I don't know if anyone is specifically requiring them to spend time on this.

[04:34:11.0000] <Ms2ger>
As in, using assert_own_property for attributes, while WebIDL puts them on the prototype

[04:34:21.0000] <AryehGregor>
It's been Dirk Schulze of Adobe and Simon Fraser of Apple.

[04:34:38.0000] <Ms2ger>
Or writing tests that setting a readonly attribute throws *and* fails silently

[04:34:40.0000] <jgraham>
AryehGregor: Did they do a big upfront review or just point  out bugs they noticed after trying to run the test?

[04:35:20.0000] <AryehGregor>
jgraham, I have no idea.  I'm guessing that running them in an actual UA is part of it, although they'd have to do a special compile, since WebKit still has prefixed transforms last I checked.

[04:35:24.0000] <AryehGregor>
(maybe they've unprefixed on trunk, I dunno)

[04:35:28.0000] <AryehGregor>
(Gecko hasn't yet)

[04:35:39.0000] <AryehGregor>
(but soon!)

[04:35:45.0000] <Ms2ger>
There's a patch!

[04:36:21.0000] <AryehGregor>
Yes!  It now even doesn't cause test failures, so I can leave it applied in my queue if I want and not get confused by try failures!

[04:36:30.0000] <AryehGregor>
(at least, I think it doesn't, I haven't tested)

[04:36:35.0000] <Ms2ger>
It doesn't

[04:36:41.0000] <AryehGregor>
Yay.

[04:36:50.0000] <Ms2ger>
But I can't prove it because of the try reset

[04:37:04.0000] <AryehGregor>
:(

[04:42:26.0000] <Ms2ger>
zcorpan, alright, done one dir of workers tests, how many do I have left? :)

[04:43:32.0000] <zcorpan>
Ms2ger: awesome!

[04:44:12.0000] <zcorpan>
Ms2ger: which dir?

[04:44:29.0000] <Ms2ger>
webapps/Workers/tests/submissions/Opera/constructors/Worker

[04:48:06.0000] <zcorpan>
Ms2ger: i can't think of a good way to count directories right now :-P

[04:48:56.0000] <Ms2ger>
$ ls -R1 | grep html | wc -l

[04:48:56.0000] <Ms2ger>
119

[04:48:57.0000] <Ms2ger>
:/

[04:49:34.0000] <zcorpan>
many dirs have just two tests though

[04:50:00.0000] <Ms2ger>
Those are the html files :)

[04:50:05.0000] <zcorpan>
ah

[04:50:41.0000] <zcorpan>
so you've done 10%

[04:55:22.0000] <AryehGregor>
find -type d | wc -l

[05:14:00.0000] <zcorpan>
hmm, wonder why webkit doesn't support display:block on table elements in quirks

[05:52:46.0000] <zcorpan>
new quirk everyone, http://simon.html5.org/specs/quirks-mode#the-table-cell-height-box-sizing-quirk

[06:14:41.0000] <AryehGregor>
Yay, quirk!

[06:16:37.0000] <AryehGregor>
Speaking of which: view-source:https://bug767169.bugzilla.mozilla.org/attachment.cgi?id=635483

[06:16:41.0000] <AryehGregor>
/ Document must be in quirks mode to trigger the bug.

[06:16:43.0000] <AryehGregor>
// Document must be in quirks mode to trigger the bug.

[06:29:02.0000] <annevk>
hmm view-source:

[06:32:03.0000] <smaug____>
looks like http://krijnhoetmer.nl/irc-logs/ doesn't work

[06:32:11.0000] <smaug____>
good that we have the backup logs

[06:43:05.0000] <annevk>
too bad they're crappy

[06:43:20.0000] <annevk>
I wish rune and I had succeeded in making something happen

[06:43:26.0000] <annevk>
maybe next time

[06:59:32.0000] <smaug____>
annevk: what is crappy?

[06:59:42.0000] <smaug____>
logbot logs?

[07:00:14.0000] <smaug____>
I could ask glob to change the format or something

[07:04:33.0000] <annevk>
smaug____: it's hard to get to the latest logs

[07:04:37.0000] <annevk>
smaug____: have to fill in forms and such

[07:04:59.0000] <smaug____>
you need to click a button once

[07:05:09.0000] <smaug____>
but yeah, the date handling in general is odd

[07:05:18.0000] <smaug____>
latest logs is easy

[07:07:44.0000] <nw>
4

[07:07:47.0000] <nw>
whoops

[07:08:05.0000] <annevk>
17

[07:08:12.0000] <nw>
accidental enter =|

[07:11:23.0000] <Ms2ger>
42

[07:13:57.0000] <annevk>
end thread

[07:14:39.0000] <annevk>
Ms2ger: smaug____: should we change event dictionaries to have default values?

[07:14:59.0000] <annevk>
Ms2ger: smaug____: and then define document.createEvent() in terms of the constructor

[07:15:10.0000] <annevk>
Ms2ger: smaug____: now dictionaries are always present

[07:15:51.0000] <annevk>
What we should really have I think is IDL for them

[07:18:38.0000] <annevk>
at least everything but Event itself is really simple

[07:22:27.0000] <smaug____>
/me can't wait the time when 3G connections are reliable even in trains

[07:27:48.0000] <smaug____>
it would be nice to see the default values in the event dictionaries

[07:28:04.0000] <smaug____>
though

[07:28:07.0000] <smaug____>
those are usually empty string, false, and 0 and null

[07:29:13.0000] <annevk>
yeah sure, but right now that's all in prose

[07:29:21.0000] <annevk>
mostly because of document.createEvent

[07:29:32.0000] <annevk>
but I realized the other day we could define that in terms of constructors

[07:29:47.0000] <annevk>
should probably ask heycam|away what he thinks

[07:40:27.0000] <smaug____>
annevk: you'll be on vacation soon?

[07:44:14.0000] <jgraham>
smaug____: This *is* annevk on vacation

[07:45:28.0000] <annevk>
indeed :)

[07:45:44.0000] <smaug____>
ahaa. good. So annevk on vacation may still do some spec editing.

[07:46:16.0000] <annevk>
just with more intermittent beaches/fun

[08:24:24.0000] <annevk>
I keep confusing the Glenns when reading email

[09:43:25.0000] <jgraham>
Has gecko dropped E4X yet?

[09:43:49.0000] <Ms2ger>
No :(

[09:43:52.0000] <jgraham>
Cryptic error messages about XML names in ECMAScript are no fun

[09:45:19.0000] <jgraham>
Also it's kind of a silly idea

[09:45:41.0000] <jgraham>
H4X seems bad for the same reasons

[09:46:27.0000] <divya>
whats e4x

[09:46:28.0000] <divya>
:/

[09:46:51.0000] <Ms2ger>
You don't want to know

[09:47:34.0000] <jgraham>
divya: We operate a strict "you ask, we don't tell" policy on that

[09:47:44.0000] <divya>
ahahahaha

[09:48:59.0000] <divya>
/me tweeets that.

[09:48:59.0000] <jgraham>
(s/H4X/E4H/ I guess)

[09:49:39.0000] <divya>
jgraham: y u no on twitter.

[09:50:04.0000] <divya>
even Ms2ger is on!

[09:50:08.0000] <divya>
you got no excuse!

[09:50:27.0000] <Ms2ger>
Leave Dr. Graham be, or he'll tell you to get off his lawn

[09:50:59.0000] <jgraham>
Be glad you're not a slug. If you were a slug on my lawn I would cut you in half

[09:51:03.0000] <divya>
:))

[09:51:51.0000] <jgraham>
I think I am on twitter just as much as Ms2ger is

[09:52:20.0000] <Ms2ger>
"Dude next to me at SFO just said on the phone: "My startup is social and viral." -- What is that? The common flu?!?"

[09:53:16.0000] <divya>
LOLOLOL

[09:53:23.0000] <divya>
jgraham: WAITTT where is your twitter account

[09:53:55.0000] <divya>
Ms2ger: are you paraphrasing someone or quoting yourself :P

[09:54:06.0000] <Ms2ger>
I'm on the twatters

[09:54:15.0000] <divya>
https://twitter.com/#!/ms2ger

[09:54:16.0000] <divya>
totally

[09:54:27.0000] <divya>
jgraham is not afaik

[09:54:41.0000] <Ms2ger>
https://twitter.com/pfinette/status/218002531366871041

[09:54:51.0000] <divya>
ah

[10:02:25.0000] <Ms2ger>
http://www.w3.org/Consortium/Recruitment/#techeditor

[10:02:32.0000] <Ms2ger>
"W3C is seeking a technical editor with Web technologies skills to serve as lead editor for the HTML Working Group."

[10:06:24.0000] <gsnedders>
jgraham: E4X is forbidden in strict-mode, FWIW

[10:07:16.0000] <gsnedders>
divya: jgraham's account name follows the corrolation from Ms2ger to Ms2ger, with an equal number of tweets.

[10:25:35.0000] <jamesr>
hober, yo!

[10:33:10.0000] <pablof>
it would be nice to have the Archived-At header in whatwg emails, like the w3c has on (most?) of their lists

[10:33:46.0000] <pablof>
i wonder if that's just a checkbox somewhere in mailmans configs or if it needs actual code to be enabled

[10:35:38.0000] <Philip`>
That has been proposed before, and I believe it was not found to be trivial to enable

[10:37:20.0000] <gsnedders>
pablof: Mailman doesn't support it, and it's non-trivial to add.

[10:37:33.0000] <gsnedders>
Was on the to-do list for Mailman 3, at least

[10:38:21.0000] <pablof>
gsnedders: hmm, i found this, not sure if it's hard to do, but it doesn't look trivial either. http://packages.python.org/mailman/src/mailman/handlers/docs/rfc-2369.html

[10:38:31.0000] <pablof>
(and it looks like that's for a 3.0 beta, yeah)

[11:07:44.0000] <n00lk0w1>
can data-* attr names include underscores in the "*"?

[11:07:52.0000] <n00lk0w1>
is data-cmtr_name a valid attr name?

[11:09:57.0000] <miketaylr>
n00lk0w1: sure

[11:10:18.0000] <n00lk0w1>
miketaylr: thanks :P

[11:43:03.0000] <jgraham>
http://www.w3.org/Consortium/Recruitment/#techeditor - interesting

[13:17:21.0000] <hober>
jamesr: yo

[13:17:45.0000] <jamesr>
hober, about position:sticky - does it do the same in the X and Y?

[13:17:48.0000] <hober>
jamesr: sorry, was busy obstructing progress in the html wg

[13:17:54.0000] <jamesr>
ooh that's a fun pasttime

[13:18:07.0000] <hober>
I suppose I should explicitly </sarcasm> for those reading the logs

[13:18:12.0000] <hober>
anyway, sticky

[13:18:17.0000] <jamesr>
you cited news.google.com's sidebar, i was wondering if you noticed that it behaves differently for vertical and horizontal scrolling

[13:18:25.0000] <jamesr>
it accomplishes the horiz scrolling behavior with script

[13:18:26.0000] <hober>
yeah, indded

[13:18:44.0000] <jamesr>
it basically wants to be sticky for vertical scrolling and just move with the page horizontally

[13:19:03.0000] <hober>
they could do that with foo { position:sticky; top: 10px; }

[13:19:09.0000] <hober>
that would only stick in the y direction

[13:19:39.0000] <jamesr>
what dictates that?

[13:19:49.0000] <jamesr>
since they didn't specify left ?

[13:19:52.0000] <hober>
yeah

[13:20:02.0000] <jamesr>
what if they want to alter the static position's left?

[13:20:25.0000] <hober>
"the static position"? :)

[13:20:54.0000] <jamesr>
well what if they want to position it and then also have this sticky behavior

[13:21:07.0000] <jamesr>
abspos container to stick it where they want, then sticky inside that?

[13:21:16.0000] <hober>
sure, that should work

[13:27:15.0000] <hober>
wait, why wouldn't you just use margin-left?

[13:37:16.0000] <TabAtkins_>
Positioning works on the margin box.

[13:37:28.0000] <TabAtkins_>
Oh, that's what you're saying. I misparsed your sentence.

[13:40:34.0000] <hober>
yeah, i don't think jamesr needs (or wants) an extraneous container element to achieve the effect he describes; margin-left does it

[13:48:17.0000] <Hixie>
annevk: or, you know, we could just call it "the document's address"...

[13:48:43.0000] <anatolbroder>
Hello world! What do you think, will consumer displays (mobile, desktop, tv) exceed 1920 soft pixels in the next 5 years?

[14:08:20.0000] <anatolbroder>
I mean 1920 CSS pixel.

[14:26:02.0000] <Hixie>
anyway web video implementors about?

[14:39:33.0000] <Hixie>
i wonder what to call the attribute that https://www.w3.org/Bugs/Public/show_bug.cgi?id=13359 asks for

[14:39:41.0000] <Hixie>
TextTrack.doohickey?

[15:15:23.0000] <zewt>
Hixie: seems like it should just use data-* attributes, at least for now

[15:15:40.0000] <TabAtkins_>
anatolbroder: That would be a very large display.  Remember that the CSS pixel is defined in terms of visual angle, so 1920 pixels is about 40 degrees of vision.

[15:15:40.0000] <zewt>
at least, until there are use cases for standardizing sub-types

[15:16:06.0000] <zewt>
TabAtkins_: that's pretty meaningless; no system knows how far the user is from the screen

[15:16:37.0000] <zewt>
(or some value approaching "none")

[15:16:39.0000] <TabAtkins_>
zewt: Theoretically, sure. In practice, screens are designed for a particular viewing range.

[15:16:51.0000] <TabAtkins_>
Phone versus desktop vs TV vs projector.

[15:16:54.0000] <zewt>
one with a very wide range

[15:17:11.0000] <TabAtkins_>
Sure, more or less a 2x factor each way, I'd say.

[15:17:49.0000] <zewt>
projectors are probably the worst case, since projectors don't even know how large a screen they're projecting (beyond some very broad limits)

[15:18:13.0000] <zewt>
(also a fairly rare case, though)

[15:18:27.0000] <Philip`>
(Don't they make projectors with automatic range-finders so they can correctly focus themselves?)

[15:19:04.0000] <zewt>
(if so, I doubt they pass that data on to the source)

[15:19:39.0000] <zewt>
it would be pretty amusing to have a webpage layout change as you move a projector around, though :)

[15:20:13.0000] <TabAtkins_>
Hixie: I'm with zewt - as far as I can tell, data-* attributes should be fine.  I didn't read the entire bug thread, though, as it was very long.

[15:20:26.0000] <zewt>
(I only read the OP)

[15:21:09.0000] <zewt>
(once there's a body of metadata types, and people using them, it would probably make more sense to spec something more concrete)

[15:21:24.0000] <TabAtkins_>
Yeah, as new @kind values.

[15:21:48.0000] <zewt>
well, I'd leave that alone, and the spec would just be subcategories of metadata

[15:22:09.0000] <Hixie>
zewt, TabAtkins_: on what element would you be putting this content attribute?

[15:22:29.0000] <zewt>
(otherwise, you'd have to spec that unknown @kind means "metadata", for forwards-compatibility, which could cause problems with adding new unrelated @kinds later)

[15:22:39.0000] <TabAtkins_>
Hixie: The <track>.

[15:22:41.0000] <zewt>
Hixie: <track>

[15:22:46.0000] <Hixie>
zewt, TabAtkins_: this is about exposing an in-band text track's doohicket to an IDL object, the only element is the <video> or <audio>, there is no <track>.

[15:22:53.0000] <Hixie>
doohickey, even

[15:22:58.0000] <TabAtkins_>
Oh!

[15:23:16.0000] <TabAtkins_>
How are these doohickey's exposed? Is there a consistent way of encoding and detecting this?

[15:23:23.0000] <TabAtkins_>
s/'//

[15:23:25.0000] <Philip`>
zewt: Moving the projector around sounds like something that augmented reality people should be interested in - you could design a room with a web page virtually spread around its walls, and the projector works out where you're pointing and projects the appropriate section of the page to correspond to that wall

[15:23:30.0000] <zewt>
well, there's a separate discussion about adding metadata headers to VTT; that would, presumably, be exposed with an API on TextTrack

[15:23:44.0000] <Hixie>
TabAtkins_: it's a mess, but the bug lists some conventions we're going to use

[15:24:11.0000] <Hixie>
zewt: metadata in vtt is a solution in search of a use case, so far. (might be that the use case is in some of the feedback i haven't read yet)

[15:24:24.0000] <Philip`>
(It'd fit the usual AR pattern of taking something that you can already do conveniently on a computer, and then adding a layer of awkward UI on top of it so that it's harder to access the content)

[15:24:52.0000] <zewt>
Hixie: i've listed some concrete use cases (eg. providing info to muxers); this would (perhaps--havn't read into it enough) likely be another use case

[15:25:10.0000] <zewt>
though, maybe not

[15:25:16.0000] <TabAtkins_>
Hixie: Hm.  In that case, I guess textTrack.metadata

[15:25:31.0000] <zewt>
since I'd think you'd want this info in <track> so you can access it before the vtt is fetched ... guess I need to read through it (bleh)

[15:25:59.0000] <zewt>
> Page origin O exposes video/audio from a 3rd party P, which contains/refers to a metadata track sourced by P or sourced by a 4th party M.

[15:26:08.0000] <zewt>
/me squints

[15:27:56.0000] <zewt>
basically it either fits in <track data-xxx=> for the "available without fetching" optimization, or as VTT file metadata for the "not available without fetching, but can be sourced from a third-party without putting it in <track>" optimization

[15:28:26.0000] <zewt>
the former is more consistent, though (where you always put that sort of metadata on <track>, even if that means you have to jump some extra hoops for third-party content)

[15:33:57.0000] <Hixie>
TabAtkins_: that seems a bit overly vague for something that is really just a type identifier for proprietary track dispatch

[15:34:35.0000] <TabAtkins_>
I'm assuming that more stuff will probably all out of the "get me some data from the stream".

[15:34:48.0000] <zewt>
parse error

[15:34:51.0000] <Hixie>
fall

[15:35:15.0000] <Hixie>
TabAtkins_: yeah, but then we'd want to use "metadata" for that :-)

[15:35:19.0000] <TabAtkins_>
Not actually sure what I was trying to type there.

[15:35:44.0000] <Hixie>
maybe media.inBandMetadataDispatchType

[15:35:58.0000] <Hixie>
or media.inBandMetadataTrackDispatchType

[15:36:01.0000] <Hixie>
er

[15:36:02.0000] <Hixie>
track.

[15:36:56.0000] <zewt>
seems like it'd make more sense to just implement generic VTT headers, and people can stick "Dispatch-Type: parental-advisery", then say track.metadata["Dispatch-Type"]

[15:38:41.0000] <zewt>
(or "X-Dispatch-Type" or "data-Dispatch-Type" or whatever the equivalent of data-* is in that namespace)

[15:40:07.0000] <Hixie>
that's like a zillion times more complicated

[15:40:13.0000] <Hixie>
and wouldn't work :-)

[15:40:20.0000] <zewt>
why wouldn't it work?

[15:40:35.0000] <Hixie>
the whole point is to expose specific existing fields that differ by format in a consistent way

[15:41:14.0000] <currency>
hey

[15:41:22.0000] <currency>
i need some HTML6, where can i dl that and hav a luk

[15:41:40.0000] <TabAtkins_>
Try pirate bay, I hear they leaked it early.

[15:41:57.0000] <zewt>
expose how? isn't this only for JS to know how to interpret the contents of metadata fields, not for UAs exposing it differently?

[15:42:23.0000] <zewt>
(this bug is a headache to read; comments nested seven deep)

[15:42:28.0000] <Hixie>
i don't understand the question

[15:42:51.0000] <zewt>
i don't understand what you mean won't work

[15:43:03.0000] <Hixie>
this is for exposing specific in-band metadata track data so that a script can know which subscript module to dispatch a track to

[15:43:17.0000] <Hixie>
there are specific fields in existing in-band formats that they want to use for this

[15:43:25.0000] <Hixie>
it's not a generic thing

[15:43:46.0000] <zewt>
not seeing how what I described wouldn't handle that

[15:44:35.0000] <zewt>
if the metadata fields in a VTT file are JSON with some schema (for example), the script does "if(track.metadata['Type'] == 'my-proprietary-json-format') { handleCueWithMyFormat(cue); }"

[15:44:40.0000] <currency>
html6 leaked on pirate bay?

[15:45:11.0000] <Hixie>
this has nothing to do with VTT

[15:45:23.0000] <zewt>
uh, okay, you could have said that ten minutes ago :)

[15:45:29.0000] <zewt>
then what does this have to do with HTML?

[15:45:41.0000] <Hixie>
i don't know how vtt entered the conversation, i keep saying it's about in-band tracks for specific formats :-)

[15:46:00.0000] <Hixie>
it's about HTML in that it's about the HTML TextTrack API

[15:46:21.0000] <zewt>
well, the bug is about text tracks, and the only text track format supported by HTML that I know of is VTT :)

[15:46:52.0000] <Hixie>
HTML is track format agnostic

[15:47:08.0000] <currency>
did html6 drop yet?

[15:47:14.0000] <currency>
when is apple going to roll out html6?

[15:47:14.0000] <zewt>
(of course, you could apply the API just the same, with other formats exposing their type as a metadata field)

[15:47:28.0000] <zewt>
troll score: 1/10

[15:48:16.0000] <Hixie>
afk for a bit

[15:48:56.0000] <Hixie>
think i'll go with track.inBandMetadataTrackDispatchType for now and hope someone comes up with a better name (or it never gets implemented and we can forget about it)

[15:54:47.0000] <smaug____>
inBandMetadataTrackDispatchType is almost long enough to be invented by me

[15:55:48.0000] <hober>
currency: we already shipped html7, duh

[15:56:11.0000] <currency>
hober : ar eu with apple?

[15:56:48.0000] <TabAtkins_>
<meme>Unsure if trolling or crazy</meme>

[15:57:02.0000] <currency>
nice markup

[15:57:11.0000] <currency>
im not trolling

[15:57:15.0000] <currency>
i was reading about html6

[15:57:18.0000] <currency>
but then i looked at the date it was posted

[15:57:21.0000] <currency>
and it was april 2nd lol

[15:57:28.0000] <currency>
of course that was after i joind this channel and already askd about it


2012-06-28
[19:57:25.0000] <annevk>
Hixie: nah man, rename all the things!

[20:37:32.0000] <Hixie>
jesus

[20:37:37.0000] <Hixie>
MPEG-4 is a seriously messed up format

[20:46:15.0000] <rniwa>
Hixie: any spec. to do with video and audio are pretty much messed up IMO.

[20:46:50.0000] <Hixie>
the spec is impenetrable

[20:46:56.0000] <Hixie>
as far as i can tell

[20:47:09.0000] <Hixie>
(if anyone here is familiar with MPEG-4 let me know, you could really help me out)

[20:57:49.0000] <MikeSmith>
Hixie: track stuff?

[21:16:58.0000] <rniwa>
Hixie: does HTML5 require named getter on document object?

[21:17:24.0000] <rniwa>
Hixie: i.e. named access; http://www.whatwg.org/specs/web-apps/current-work/multipage/browsers.html#named-access-on-the-window-object

[21:17:36.0000] <rniwa>
Hixie: it appears that webkit has some code to allow this on document but is not working.

[21:17:50.0000] <rniwa>
Hixie: it'll be nice if we can just get rid of altogether if we don't need them.

[21:17:56.0000] <rniwa>
get rid of them*

[21:26:36.0000] <Hixie>
MikeSmith: yeah

[21:26:57.0000] <MikeSmith>
Hixie: yeah saw the bug now

[21:26:58.0000] <Hixie>
rniwa: dunno, look at the spec :-)

[21:27:14.0000] <rniwa>
Hixie: i've looked at the spec but couldn't find it.

[21:27:21.0000] <Hixie>
/me looks

[21:27:32.0000] <Hixie>
yes

[21:27:39.0000] <Hixie>
it's right there in the idl

[21:27:42.0000] <Hixie>
  getter object (DOMString name);

[21:35:16.0000] <rniwa>
Hixie: can I have a pointer?

[21:35:29.0000] <Hixie>
search for what i just pasted :-)

[21:35:39.0000] <Hixie>
it's in the Document idl block

[21:35:46.0000] <rniwa>
Hixie: ah, now i see it.

[21:36:31.0000] <rniwa>
Hixie: :( it's called named properties here

[21:36:41.0000] <Hixie>
?

[21:36:43.0000] <rniwa>
that's why it wasn't hitting my search for "getters"

[21:36:52.0000] <Hixie>
how do you mean?

[21:36:54.0000] <rniwa>
or rather "accessors"

[21:37:05.0000] <rniwa>
Hixie: i was looking for named getters & named accessors

[21:37:18.0000] <Hixie>
ah

[21:37:27.0000] <rniwa>
Hixie: it seems like there are a lot of synonymous for this thing

[21:37:29.0000] <Hixie>
well this is just webidl syntax

[21:38:55.0000] <zcorpan>
Hixie: wait, we can't use RESOLVED FIXED for fixed bugs now?

[21:39:17.0000] <Hixie>
trying to get clarity on this from the chairs

[21:39:23.0000] <Hixie>
i expect we'll clone the bugs

[21:39:28.0000] <Hixie>
so that they don't get lost

[21:40:37.0000] <zcorpan>
is the w3c spec frozen?

[21:43:19.0000] <Hixie>
not frozen, but it doesn't currently have an editor

[21:44:21.0000] <zcorpan>
you don't push updates to it anymore?

[21:47:14.0000] <Hixie>
no

[21:47:29.0000] <Hixie>
the chairs asked me to stop a while back

[21:47:38.0000] <zcorpan>
ok

[21:47:58.0000] <Hixie>
(i finally got around to updating my script recently, after going through the bulk of bug report e-mails)

[21:48:06.0000] <Hixie>
(so that i didn't have to find a way to get the e-mails into bug form)

[21:49:25.0000] <zcorpan>
i wonder how long the chairs will take to decide on the bugs thing, having fixed ones stay open seems annoying for me

[21:50:10.0000] <Hixie>
sounded like they were going to come to a decision pretty quickly

[21:50:32.0000] <zcorpan>
good

[21:52:56.0000] <Hixie>
oh sweet lord

[21:52:58.0000] <Hixie>
MPEG2 is EVEN WORSE

[21:53:14.0000] <Hixie>
also wtf is with these standards organisations that DON'T PUT THEIR STANDARDS ON THE WEB

[21:53:25.0000] <Hixie>
wtf is the point of a standard YOU CAN'T READ

[21:54:06.0000] <zcorpan>
is mpeg2 something we need to support?

[21:54:21.0000] <Hixie>
mpeg2 is what tv stations use, i believe

[21:54:31.0000] <Hixie>
so it's likely that most uses of the feature i'm speccing will use mpeg2

[21:54:38.0000] <Hixie>
note that i'm not convinced anyone will actually ever use this

[21:56:35.0000] <roc>
as I'm sure you know, selling copies of standards was (is) a common business model for standards bodies to fund themselves

[21:56:52.0000] <Hixie>
such standards bodies are idiots.

[21:57:21.0000] <Hixie>
or at least, seriously misguided

[21:57:38.0000] <Hixie>
and somewhat lacking in understanding as to how standards work

[21:58:05.0000] <Hixie>
(then again, i don't understand why standards bodies need funding. all you need is to pay for a web host and that's pretty cheap these days.)

[21:58:41.0000] <roc>
bureaucracy

[21:58:48.0000] <roc>
it costs money

[21:58:55.0000] <Hixie>
bureaucracy is not required to write a standard.

[21:59:05.0000] <Hixie>
in fact, it only detracts from it.

[21:59:43.0000] <roc>
I think you're preaching to the choir here

[21:59:50.0000] <Hixie>
yes. :-)

[22:00:06.0000] <Hixie>
just venting

[22:09:12.0000] <Hixie>
zcorpan: (oh, and canvas stopped updating even longer ago)

[22:09:22.0000] <MikeSmith>
Hixie: http://mumudvb.braice.net/mumudrupal/sites/default/files/iso13818-1.pdf

[22:10:12.0000] <Hixie>
ooh

[22:10:48.0000] <MikeSmith>
that's just part 1, I think

[22:11:06.0000] <MikeSmith>
apparently there are 7 or more parts to it

[22:11:29.0000] <Hixie>
apparently i need the "Systems" chapter

[22:11:33.0000] <Hixie>
(?)

[22:12:09.0000] <Hixie>
which that seems to be

[22:12:15.0000] <Hixie>
let me see if it has what i need

[22:13:22.0000] <Hixie>
oh i think i read this spec once

[22:20:36.0000] <zcorpan>
Hixie: but fixed canvas bugs are not left open?

[22:20:50.0000] <Hixie>
i don't think i've fixed any since then have i?

[22:21:00.0000] <zcorpan>
dunno

[22:21:26.0000] <Hixie>
it's always possible i've accidentally closed some, especially if it was back when i still thought we'd resolve the canvas issue before we forked

[22:21:49.0000] <Hixie>
i kinda assume they're going to take all the changes

[22:22:03.0000] <Hixie>
if they're not, they'll probably have bigger problems

[22:22:13.0000] <Hixie>
than a few missed bugs

[22:29:15.0000] <zcorpan>
WONTFIX resolutions are OK?

[22:31:48.0000] <Hixie>
probably not, but i told the chairs about that one

[22:32:02.0000] <Hixie>
it seemed pretty uncontroversial, other than you disagreeing with me :-)

[22:33:32.0000] <zcorpan>
yeah imma spend days ISSUEing and CPing over it

[22:33:40.0000] <Hixie>
:-)

[22:35:13.0000] <MikeSmith>
zcorpan: If you need any secret backroom deals later to get an extension, lemme know

[22:35:46.0000] <Hixie>
so THAT's how hober and the a11y people are getting all these extensions

[22:36:02.0000] <zcorpan>
MikeSmith: shhh!

[22:36:09.0000] <MikeSmith>
whoops yeah I guess it's not secret any more

[22:36:11.0000] <MikeSmith>
damn

[22:37:49.0000] <MikeSmith>
can always count on dude to provide the lulz

[22:37:53.0000] <MikeSmith>
at his own expense

[22:40:43.0000] <MikeSmith>
Hixie: oh I see you did manage to find the MPEG-2 info you needed

[22:42:17.0000] <MikeSmith>
hahaha "I have no idea what I'm doing here."

[22:42:27.0000] <MikeSmith>
somebody's going to quote you on that man

[22:42:36.0000] <MikeSmith>
out of context of course

[22:42:52.0000] <MikeSmith>
well, I will at least

[22:44:54.0000] <zcorpan>
i already tweeted it

[22:49:15.0000] <MikeSmith>
I'm saving it for a future CP

[23:42:36.0000] <MikeSmith>
am I missing some context for http://lists.w3.org/Archives/Public/public-html-a11y/2012Jun/0119.html ?

[23:45:50.0000] <webben>
MikeSmith: I'm guessing "lightweight JSON objects" are the Canvas regions that have ARIA roles but not associated elements.

[23:46:52.0000] <webben>
MikeSmith: http://www.whatwg.org/specs/web-apps/current-work/multipage/the-canvas-element.html#hit-region's-unbacked-region-description

[23:47:02.0000] <MikeSmith>
hey it's webben

[23:47:07.0000] <webben>
hey :)

[23:47:45.0000] <MikeSmith>
webben: thanks for the pointer

[23:48:07.0000] <webben>
yw

[00:07:58.0000] <Stevef>
mikesmith: it's the half baked part of the canvas additions where there is no agreement or information about how it will work and whether  the regions will be focusable or not

[00:12:49.0000] <MikeSmith>
Stevef: I don't see what it has to do with JSON but OK

[00:15:56.0000] <Stevef>
MikeSmith: mentioned here at F2F http://krijnhoetmer.nl/irc-logs/html-wg/20120503#l-1083

[00:16:10.0000] <webben>
Yes. Strictly speaking they are effectively DOM properties of the <canvas> element, not "JSON".

[00:16:50.0000] <MikeSmith>
Stevef: ah, OK

[00:17:20.0000] <Stevef>
mikesmith: there is other discussion can't find at the mo'

[00:18:33.0000] <MikeSmith>
Stevef: I understand the context now

[00:19:13.0000] <MikeSmith>
just, using that inaccurate terminology to describe it doesn't help

[00:34:35.0000] <Stevef>
mikesmith: json idea originally floated by philip http://krijnhoetmer.nl/irc-logs/whatwg/20120223#l-117

[00:40:04.0000] <MikeSmith>
Stevef: I see

[01:24:29.0000] <wirepair>
man, CORS sure has made it easy to execute XSS against people who think passing parts of the URI to XHR is a Good Idea(tm)

[01:25:00.0000] <wirepair>
s/people/sites

[01:28:38.0000] <annevk>
passing parts of the URI directly is never a good idea

[01:30:29.0000] <wirepair>
of course not but CORS makes it much easier to get third party script code executed via an XHR call than without CORS support

[01:31:18.0000] <annevk>
zcorpan: retweeted from @whatwg

[01:31:44.0000] <annevk>
wirepair: yeah and new HTML features make it easier to bypass blacklist-based filtering

[01:32:33.0000] <wirepair>
/me shrugs

[01:32:39.0000] <wirepair>
if you're blacklisting you're doing it wrong :>

[01:33:08.0000] <annevk>
if you're reusing parts of the URL without checking you're doing it wrong too

[01:33:24.0000] <wirepair>
in that we agree as well :>

[01:35:17.0000] <zcorpan>
XDomainRequest doesn't have that problem

[01:35:59.0000] <zcorpan>
(at least so long as XHR didn't support CORS in ie)

[01:36:48.0000] <wirepair>
yeah prob is people forget that xhr can now load from 3rd party sites

[01:36:53.0000] <wirepair>
so all taht old code is suddenly vulnerable

[01:39:07.0000] <zcorpan>
yes, and when i first saw this problem being discussed, the proposed fix was *still* vulnerable because the guy who proposed the fix didn't know that urls like "//example.org" work

[01:39:33.0000] <zcorpan>
(the fix being "just prepend a slash and you'll be fine")

[01:42:13.0000] <wirepair>
fantastic. :)

[01:42:55.0000] <annevk>
wirepair: hmm yeah, I guess it's too late now :(

[01:45:23.0000] <wirepair>
well yeah, i mean it's how CORS works so not really sure what you could even do.

[01:47:47.0000] <annevk>
well for XHR we could have had a different way to get access to CORS

[03:32:58.0000] <zcorpan>
anyone have advice for this guy? (redirect and appcache) http://forums.whatwg.org/bb3/viewtopic.php?f=10&t=5022

[04:15:05.0000] <niloy>
zcorpan, move resources to cdn maybe?

[04:18:57.0000] <zcorpan>
niloy: feel free to reply in the forum :-)

[04:19:11.0000] <niloy>
zcorpan, sure :)

[04:19:22.0000] <zcorpan>
thanks

[06:01:37.0000] <gsnedders>
jgraham: given you were asking yesterday, https://groups.google.com/d/msg/mozilla.dev.tech.js-engine/yYQyMCcMf-0/c1kHxnhOUlYJ

[06:03:43.0000] <gsnedders>
(E4X in SM)

[08:51:53.0000] <Stevef>
no meeting this week

[08:52:04.0000] <Stevef>
sorry wrong window

[08:52:49.0000] <Ms2ger>
No meeting here either :):

[08:52:58.0000] <Ms2ger>
/me wonders why he has eyes on his chin

[08:54:22.0000] <jgraham>
Practising canibalism?

[08:54:41.0000] <Ms2ger>
Not usually

[09:04:22.0000] <dglazkov>
good morning, Whatwg!

[10:54:51.0000] <Ms2ger>
"When rendering li elements, user agents are expected to use the ordinal value of the li element to render the counter in the list item marker."

[10:54:57.0000] <Ms2ger>
"If the parent element is an ol element, then the li element has an ordinal value."

[10:55:16.0000] <Ms2ger>
If the parent element is *not* an ol element, what is rendered?

[11:01:29.0000] <Hixie>
if the parente lement is not an ol element, there's no counter in the list item marker

[11:03:30.0000] <Ms2ger>
<ol><div><li>A</div></ol>

[11:05:05.0000] <Ms2ger>
Should that have a number anywhere, and if so, where?

[11:05:24.0000] <TabAtkins>
Yes, before the A.

[11:05:37.0000] <Ms2ger>
Which number?

[11:05:41.0000] <TabAtkins>
The <li> generates a marker, and inherits a numeric type from <ol>

[11:05:42.0000] <TabAtkins>
1.

[11:05:52.0000] <Ms2ger>
Now, <ol><div><li>A</div> <li>B</ol>

[11:05:55.0000] <TabAtkins>
The counter from <ol> isn't distrubed by having the <div> come between it and the <li>.

[11:06:22.0000] <Ms2ger>
You say 1. A / 2. B?

[11:06:44.0000] <TabAtkins>
If my mental model of the parser is right, sure.  If you give me the DOM produced, I can tell you for sure.

[11:06:54.0000] <gavinc>
Sometimes validator.nu is a bit... amusing The encoding "utf-8" is not the preferred name of the character encoding in use. The preferred name is utf-8

[11:07:10.0000] <Ms2ger>
Yeah, nothing special going on in the parser here

[11:07:16.0000] <Ms2ger>
Now, <ol reversed><div><li>A</div> <li>B</ol>

[11:07:27.0000] <TabAtkins>
The <ol> genreates a fresh counter scope.  Each <li> increments it.

[11:07:49.0000] <TabAtkins>
Ah, fun fun.  Depends on how you implement @reversed.

[11:08:22.0000] <Ms2ger>
Not with CSS counters, because I'm told those can't reverse

[11:08:32.0000] <TabAtkins>
They can, but you have to have a starting value.

[11:08:48.0000] <TabAtkins>
You can say "start at 5, and each counter adds -1".

[11:09:15.0000] <Ms2ger>
You can?

[11:09:20.0000] <Ms2ger>
Hi fantasai

[11:09:39.0000] <TabAtkins>
Yeah, the counter-increment property takes any integer.

[11:09:58.0000] <fantasai>
hi Ms2ger :)

[11:10:10.0000] <fantasai>
TabAtkins: where are you?

[11:10:16.0000] <TabAtkins>
In the google office.

[11:10:19.0000] <Ms2ger>
<TabAtkins_> fantasai: I'm in the google office. Where's the moz office, and how do I get in?

[11:10:32.0000] <fantasai>
TabAtkins: is our phone dead again :/

[11:11:03.0000] <fantasai>
s/our/your/

[11:11:24.0000] <TabAtkins>
fantasai: Nearly, so I've turned it off.

[11:11:29.0000] <fantasai>
/me sent a text with instructions half an hour ago

[11:11:37.0000] <fantasai>
~_~

[11:11:40.0000] <Ms2ger>
Hmm, I didn't know we were right on the waterfront

[11:12:19.0000] <TabAtkins>
fantasai: I was talking with Ojan and Tony when I got in anyway.

[11:12:29.0000] <fantasai>
/me didn't know they were in sf

[11:12:34.0000] <TabAtkins>
Yup!

[11:12:36.0000] <fantasai>
anyway!

[11:12:48.0000] <TabAtkins>
Do I need security or something to get up to floor 7?

[11:12:55.0000] <TabAtkins>
Or do you just want to come down and get me?

[11:13:04.0000] <Ms2ger>
TabAtkins, however, ol isn't specced in terms of CSS counters

[11:13:14.0000] <fantasai>
No, and we don't ask you to sign an NDA that you're legally incapable of signing, either :P

[11:13:23.0000] <TabAtkins>
kk, I'll be up in a sec then.

[11:13:51.0000] <fantasai>
Ms2ger: if it's specced using display: list-item, then it will be in L3

[11:13:58.0000] <fantasai>
Ms2ger: using an implied counter

[11:14:10.0000] <fantasai>
right, so I was going to ask a question ...

[11:14:49.0000] <fantasai>
hsivonen: Is it intentional that </ins> gets ignored when </p> is implicit?

[11:14:50.0000] <fantasai>
hsivonen: http://software.hixie.ch/utilities/js/live-dom-viewer/?%3C!DOCTYPE%20html%3E%0A%0A%3Cins%3E%3Cp%3Einserted%3C%2Fins%3E%0A%0A%3Cp%3Enot%20inserted

[11:15:05.0000] <Ms2ger>
Well, it has display: list-item, but with an override for the counter

[11:15:11.0000] <[tm]>
gavinc:  file a bug. our maybe there is actually an open bug on that one already

[11:18:18.0000] <fantasai>
Ms2ger: for 'start' and 'value', you mean?

[11:18:27.0000] <Ms2ger>
And reversed

[11:18:33.0000] <fantasai>
ah, right

[11:18:41.0000] <fantasai>
that one, we can't do in CSS yet

[11:18:48.0000] <Ms2ger>
Hah

[11:18:57.0000] <Ms2ger>
TabAtkins just claimed he can

[11:19:14.0000] <Ms2ger>
But if bz and fantasai can't do it... :)

[11:19:19.0000] <fantasai>
you can count backwards :)

[11:19:21.0000] <fantasai>
that's easy

[11:19:27.0000] <fantasai>
but you need to know what number to start at

[11:19:32.0000] <fantasai>
and that's not possible afaik

[11:19:54.0000] <TabAtkins>
fantasai: I'm in the lobby.

[11:20:05.0000] <Ms2ger>
TabAtkins (~tabatkins@nat/mozilla

[11:20:14.0000] <Ms2ger>
Welcome to the bright side, sir

[11:21:09.0000] <Ms2ger>
fantasai, well, you can count the

[11:21:14.0000] <Ms2ger>
Wrong button

[11:21:23.0000] <Ms2ger>
Another case

[11:21:45.0000] <Ms2ger>
<ol><div style=display:list-item>A</div><li>B</ol>

[11:22:11.0000] <fantasai>
/me notes that Ms2ger got both of us to lol

[11:22:59.0000] <Ms2ger>
Always glad to do that, m'lady

[11:28:02.0000] <Hixie>
Ms2ger: sorry, was afk

[11:28:27.0000] <Hixie>
Ms2ger: looks like the spec should say the ordinal value is 1 if there's no parent ol.

[11:29:24.0000] <Hixie>
Ms2ger: note that if the author uses css counters to override the default rendering, the numbers won't match, since css doesn't provide a way to get the ordinal value at the moment

[11:29:39.0000] <jgraham>
I have been told that webkit does something weird for @reversed like making the start value CSS dependant

[11:30:08.0000] <Ms2ger>
So, <ol><div><li>A</div><div><li>B</div></ol>

[11:30:11.0000] <Hixie>
it's not just reversed="" that causes problems, also display:none and so on

[11:31:42.0000] <Hixie>
bbiab

[11:35:07.0000] <pablof>
has there been any additional work on appcache's prefer-online since http://html5.org/tools/web-apps-tracker?from=7135&to=7136 ?

[11:35:22.0000] <pablof>
can't seem to find most of that text in the spec

[11:35:43.0000] <pablof>
(tangentially, is there a place to do a blame on the svn files somewhere online?)

[11:37:55.0000] <jgraham>
You want a web service that does something like 'def get_blame:return "Hixie"'?

[11:38:09.0000] <jgraham>
(yeah, I know svn blame does more than that :p)

[11:39:29.0000] <pablof>
i'm after the commit/diff, not the author, we all know who to blame :P

[11:40:43.0000] <jgraham>
I doubt anyone provides that

[11:41:04.0000] <jgraham>
I imagine it is slow to compute

[11:41:24.0000] <jgraham>
No one even provides a convenient git-svn version of the spec :(

[11:43:18.0000] <Ms2ger>
Hixie has per-1000-commit blames cached somewhere

[11:43:24.0000] <Ms2ger>
But I always forget where

[13:03:48.0000] <Hixie>
Ms2ger, pablof: http://www.whatwg.org/specs/web-apps/current-work/blame.r5000 is available, for various values of 5000

[13:05:13.0000] <Hixie>
blame.r0005 blame.r0954 blame.r2200 blame.r2800 blame.r3000 blame.r4667 blame.r5372 blame.r7000 blame.r0050 blame.r1000 blame.r2216 blame.r2905 blame.r3075 blame.r5000 blame.r5600 blame.r6400 blame.r0500 blame.r2000 blame.r2500 blame.r2947 blame.r4000 blame.r5287 blame.r6000 blame.r6666

[13:05:20.0000] <Hixie>
er let me sort that and try again

[13:05:53.0000] <Hixie>
blame.r0005 blame.r0050 blame.r0500 blame.r0954 blame.r1000 blame.r2000 blame.r2200 blame.r2216 blame.r2500 blame.r2800 blame.r2905 blame.r2947

[13:05:56.0000] <Hixie>
blame.r3000 blame.r3075 blame.r4000 blame.r4667 blame.r5000 blame.r5287 blame.r5372 blame.r5600 blame.r6000 blame.r6400 blame.r6666 blame.r7000

[13:06:52.0000] <Hixie>
(some of the more weird numbers like 2947 and 5287 correspond to diffs where a lot changed for editorial reasons so they come up often in archeology)

[13:07:01.0000] <Hixie>
feel free to document this on the wiki if you want btw

[13:09:04.0000] <pablof>
thanks

[13:11:57.0000] <pablof>
Hixie: were there any changes in the spec recently on appcache's prefer-online?

[13:16:42.0000] <Hixie>
pablof: well it was added to the spec...

[13:16:52.0000] <Hixie>
pablof: how recently do you mean?

[13:17:08.0000] <pablof>
Hixie: i mean that i can't seem to find the text added in http://html5.org/tools/web-apps-tracker?from=7135&to=7136

[13:18:11.0000] <pablof>
let me re-check in the one-page one, in case i'm dumb

[13:19:27.0000] <pablof>
Hixie: yeah, never mind, the parts i was looking for weren't in the application cache section, sorry about that

[13:19:49.0000] <pablof>
doh

[13:37:42.0000] <Hixie>
pablof: ah ok

[14:30:00.0000] <Hixie>
AryehGregor: you around? got some questions about drag and drop and contenteditable (in case you are and want to pretend you're not ;-) )

[14:42:43.0000] <jgraham>
/me would totally always pretend to be away rather than answer questions about contenteditable or drag and drop

[14:44:01.0000] <Hixie>
yeah me too

[14:44:12.0000] <Hixie>
hence me letting him know :-)

[14:44:24.0000] <jgraham>
Also, I wonder what would happen if web developers saw that the HTML spec specifically thanks the inventors of the drag and drop API. I expect it would involve pitch forks and buring torches

[14:45:01.0000] <jgraham>
Or failing that some mild sarcasm on twitter

[14:45:11.0000] <jgraham>
21st century revolution style

[14:47:42.0000] <Hixie>
lol

[14:47:54.0000] <Hixie>
dnd has been dramatically improved

[14:47:58.0000] <Hixie>
with draggable and dragzone

[14:48:03.0000] <Hixie>
it might even be possible to use it now

[16:42:53.0000] <TabAtkins>
I wonder if Chrome has added draggable and dragzone yet?  I've got some dnd code that I wouldn't mind simplifying.


2012-06-29
[17:57:13.0000] <Hixie>
looks like once again i'm going to screw the one browser that followed the spec (opera in this case) in order to match the others who are all doing the same thing...

[17:57:25.0000] <Hixie>
(pushState vs base URLs)

[18:01:29.0000] <abarth>
frowns

[18:02:48.0000] <Hixie>
frowns?

[18:03:16.0000] <abarth>
it's an unfortunate state of afairs

[18:03:23.0000] <Hixie>
yeah

[18:04:17.0000] <Hixie>
looks like, however, i might be able to just drop the "document's current address" concept

[18:04:24.0000] <Hixie>
and just have pushState() change the document's address directly

[18:14:09.0000] <Hixie>
man, this is huge

[18:14:38.0000] <Hixie>
the document's current address is dead! long live the now-mutable document's address!

[18:54:50.0000] <jwalden>
gsnedders: shaving yaks in the way of my patch still, fwiw, just to update on progress

[21:56:48.0000] <Stephen>
I've got something best represented as a tree of urls. Can anyone speak to the proper use of CollectionPage in this instance?

[00:43:59.0000] <annevk>
Stephen: what is CollectionPage? If that is Java this might not be the right place

[01:17:20.0000] <annevk>
heycam: so should we update the DOM with that iterator stuff?

[01:17:48.0000] <heycam>
annevk, yeah! so for things that are [ArrayClass], nothing needs to be done

[01:18:07.0000] <heycam>
annevk, can't remember what the state of [ArrayClass] is for NodeList and HTMLCollection

[01:18:12.0000] <heycam>
annevk, I think those two interfaces at least should have iterators

[01:18:45.0000] <heycam>
annevk, not sure whether it is worth have NodeList's iterator be a NodeIterator object or not

[01:18:49.0000] <annevk>
we have it for one of them still

[01:18:52.0000] <heycam>
annevk, (as jorendorff's suggested)

[01:19:03.0000] <annevk>
but WebKit hit issues with [ArrayClass]

[01:19:07.0000] <heycam>
oh :(

[01:19:18.0000] <heycam>
mind you the iterator stuff hasn't been added to the ES6 spec yet

[01:19:22.0000] <annevk>
haven't seen much follow up though, so maybe they resolved themselves, but I doubt it

[01:19:25.0000] <heycam>
although there is agreement in TC39 for it to be added afaik

[01:19:29.0000] <annevk>
okay

[01:19:32.0000] <heycam>
what was the issue?

[01:19:43.0000] <annevk>
I guess I'll file a bug on the iterators then awaiting ES6

[01:19:51.0000] <annevk>
heycam: compat iirc

[01:20:00.0000] <annevk>
let me search my bugmail

[01:20:11.0000] <heycam>
annevk, sounds good

[01:20:50.0000] <annevk>
so yeah, it was on NodeList, HTMLCollection nobody thought was feasible, https://bugs.webkit.org/show_bug.cgi?id=81573 is the bug on adding it to NodeList in WebKit

[01:21:27.0000] <annevk>
heycam: closure broke apparently

[01:21:37.0000] <annevk>
heycam: always the Google properties that break...

[01:21:44.0000] <heycam>
heh

[01:21:44.0000] <heycam>
sigh

[01:22:46.0000] <annevk>
kudos to them I guess for pushing the platform, but too bad it makes it difficult to change it

[01:22:53.0000] <heycam>
yeah

[01:22:58.0000] <heycam>
would be good to know what the specific breakage was

[01:23:07.0000] <heycam>
to see if it's something fundamental or something that could be worked around

[01:24:50.0000] <annevk>
yeah, bugs don't say :(

[01:25:00.0000] <annevk>
arv prolly knows, but is also asleep I guess

[01:25:57.0000] <heycam>
/me CCs himself to the bug

[01:27:04.0000] <annevk>
oh great, so DOM is discussed on public-script-coord too now

[01:27:49.0000] <heycam>
as long as it is discussed on a list you're subscribed too...

[01:27:53.0000] <heycam>
*to

[01:28:29.0000] <annevk>
I guess

[01:28:37.0000] <annevk>
which reminds me, I guess I should subscribe to www-style again

[01:29:08.0000] <annevk>
since crazy won at the W3C (quelle surprise) and we're now using two mailing lists to discuss Fullscreen

[01:29:14.0000] <heycam>
I'm up to ~2400 unread mails there

[01:29:41.0000] <annevk>
fffffffuuuuuuuuuuuu

[01:30:12.0000] <heycam>
speaking of crazy, this is totally my new favourite spec title: https://lists.w3.org/Archives/Member/chairs/2012AprJun/0119.html

[01:30:18.0000] <annevk>
https://www.w3.org/Bugs/Public/show_bug.cgi?id=17648 is for iterators

[01:34:22.0000] <heycam>
/me goes off to enjoy his friday night

[01:40:21.0000] <Stephen>
heycam|away: YOur link is pass protected

[01:41:51.0000] <jgraham>
Stephen: Yeah "Member" in the url is like #secrettreehouse for W3C

[01:42:05.0000] <annevk>
what's "Team" then?

[01:42:17.0000] <annevk>
#topofthetree ?

[01:42:32.0000] <jgraham>
#cabal

[01:42:36.0000] <annevk>
#secretfloorinthesecrettreehouse

[02:04:51.0000] <annevk>
Ms2ger: you mean that all interfaces that support that and do not have [ArrayClass] they need to define iterators in prose?

[02:05:15.0000] <annevk>
Ms2ger: prolly worth cc'ing heycam|away and making the suggestion somewhat more concrete

[02:05:35.0000] <Ms2ger>
No, that WebIDL puts an iterator() function on the prototype for all interfaces that support indexed properties

[02:05:45.0000] <Ms2ger>
There's a thread over on script-cord

[02:05:46.0000] <Ms2ger>
coord*

[02:12:47.0000] <annevk>
that concluded with heycam|away adding IDL synta

[02:12:48.0000] <annevk>
x

[02:12:54.0000] <annevk>
maybe I missed somewhat

[02:12:57.0000] <annevk>
something*

[02:15:24.0000] <Ms2ger>
Oh

[02:15:27.0000] <Ms2ger>
That seems silly

[02:16:39.0000] <annevk>
fix it

[02:17:04.0000] <Ms2ger>
I'll put it on my todo list :)

[02:28:20.0000] <AryehGregor>
Hixie, I'm around now.  When you asked me, it was 12:30 AM my time, so . . .

[02:30:33.0000] <MikeSmith>
Stephen: heycam link was to an announcement of a spec titled "Registration and Discovery of Multimodal Modality Components in Multimodal Systems : Use Cases and Requirements"

[03:21:56.0000] <jgraham>
"The length IDL attribute on the Window interface must return the number of child browsing contexts that are nested through elements that are in the Document that is the active document of that Window object, if that Window's browsing context shares the same event loop as the script's browsing context of the entry script accessing the IDL attribute; otherwise, it must return zero."

[03:22:02.0000] <jgraham>
Huh?

[03:23:23.0000] <jgraham>
a) how do I trigger a situation in which the event loops aren't shared and b) is is really sensible to have implementation details about event loops exposed like this?

[03:23:49.0000] <jgraham>
I mean, I guess there are other ways it is exposed, but…

[03:24:00.0000] <zcorpan>
that seems a bit weird

[03:25:05.0000] <jgraham>
I can't work out how one might end up with a reference to a window using a different event loop

[03:25:43.0000] <jgraham>
Assuming the UA complies with the "at most one event loop per unit of related browsing context" text

[07:07:44.0000] <karlcow>
http://www.webkit.org/blog/2082/tim-horton-is-now-a-webkit-reviewer/

[07:07:44.0000] <karlcow>
Free (canadian) coffee for the Webkit project?

[08:16:42.0000] <Ms2ger>
/me wonders what a zero-size Blob is good for

[08:18:32.0000] <Philip`>
For avoiding complex special-casing in algorithms that want to return blobs of variable non-negative sizes?

[08:47:25.0000] <erlehmann>
hello whatwg

[08:48:06.0000] <erlehmann>
a friend of mine wishes to make use of rel=feed. i suggested using rel=alternate with an ATOM MIME type. he considers that unclean somehow and hopes to change the standard by not using rel=alternate

[08:48:08.0000] <hober>
karlcow: he's heard that one before. :)

[08:48:29.0000] <erlehmann>
what can i say besides “it is not supported anywhere a”

[08:49:01.0000] <erlehmann>
i argue it is not semantic because the meaning of the predicate is not defined.

[08:49:13.0000] <karlcow>
hober: I'm pretty sure a million times

[08:49:29.0000] <erlehmann>
so <link rel=feed href="http://example.org"> would be <this document> <UNKNOWN PREDICATE> <http://example.org>

[08:49:36.0000] <erlehmann>
anyone can chime in on that issue?

[08:54:34.0000] <erlehmann>
anyone can chime in on that issue?

[09:04:27.0000] <gsnedders>
Anyone have tests for Progress Events?

[09:47:24.0000] <n00lk0w>
If I include a script on xmpl.com/host.html from xmpl.org/guest.js, what sec context does guest run under?  Can it access the cookies from both the xmpl.com and xmpl.org domains?

[09:55:19.0000] <Philip`>
n00lk0w: <script>s always get run in the origin of the document that they're loaded from

[09:55:34.0000] <Philip`>
(i.e. the origin http://xmpl.com:80 in your example)

[09:58:24.0000] <n00lk0w>
Philip`: so, does that mean that if i include a script from google's CDN/jsapi, the request doesn't carry the user's google acct authcookie in the header?

[09:58:56.0000] <n00lk0w>
and that the google cookie is completely unreadable to the ajax.googleapis.com server?

[10:04:31.0000] <jgraham>
Philip`: Unless they set document.domain

[10:05:36.0000] <jgraham>
(which isn't relevant to the case at hand)

[10:11:35.0000] <Philip`>
n00lk0w: If the user has any cookies associated with ajax.googleapis.com, those will be sent in the HTTP request to that server when loading .js files from it

[10:14:06.0000] <Philip`>
n00lk0w: The origin thing just means that when the script code is executed on the client, it will have the same security privileges as if it were included directly in the containing document (so it won't have client-side access to cookies from ajax.googleapis.com)

[10:40:02.0000] <aklein>
smaug____: greetings. do you happen to know what sicking's referring to with his <iframe> paragraph in his latest response re parser-caused mutations?

[11:09:31.0000] <aklein>
smaug____: (fwiw, I think I found it: http://www.whatwg.org/specs/web-apps/current-work/#scripts-that-modify-the-page-as-it-is-being-parsed)

[11:19:19.0000] <annevk>
I like that the only way I learn about silly HTML WG things is twitter

[11:19:59.0000] <annevk>
Edward "HTML bottleneck" O'Connor

[11:33:23.0000] <hober>
annevk: you know me

[11:34:52.0000] <smaug____>
aklein: (sorry, it was sauna time.) But yeah, I think sicking meant that.

[11:36:07.0000] <smaug____>
(and I think sicking is somewhere in Europe atm)

[13:10:55.0000] <Hixie>
annevk: yt?

[16:13:30.0000] <gsnedders>
jwalden: Any discussion anywhere/bug report about __proto__ in SM, BTW?

[16:14:32.0000] <jwalden>
gsnedders: not yet, trying to fly under the radar until I have a completed patch

[16:14:40.0000] <jwalden>
/me has one mostly completed now

[16:14:54.0000] <gsnedders>
Nice, large clean-up, I guess? :)

[16:15:06.0000] <jwalden>
not too much, actually

[16:15:27.0000] <jwalden>
the problem is the current way we do it depends on a lot of incidental side effects

[16:15:41.0000] <jwalden>
which are not present if we make the stuff proper accessors

[16:15:52.0000] <gsnedders>
Ah.

[16:15:57.0000] <jwalden>
also various code that depends on those incidental side effects

[16:16:30.0000] <jwalden>
brendan is right that it's more work to do it this way, and presents various transition hazards and potential for bugs

[16:16:42.0000] <jwalden>
doesn't change that it's the right thing to do in the long run, tho

[16:17:15.0000] <jwalden>
also the current way we're doing it, the current mechanism for properties like that, is quite under-understood, and it's been on my kill list for awhile

[16:17:32.0000] <jwalden>
although in a longer-term sense, because a lot of stuff used it

[16:17:33.0000] <gsnedders>
Ah, in our case it wasn't much of a clean-up apart from removing __proto__ special-casing in [[Get]], [[Put]] given we had a single (C++) method that actually did the mutation.

[16:17:52.0000] <jwalden>
SpiderMonkey is old, and it predates many of the specs

[16:17:56.0000] <jwalden>
it has a lot of barnacles

[16:18:10.0000] <jwalden>
far fewer now than six years ago when I first started hacking SpiderMonkey code, but still a bunch

[16:18:22.0000] <gsnedders>
Yeah, Carakan doesn't really have that disadvantage, given it's only a few years old :)

[16:18:29.0000] <jwalden>
we have a single method as well

[16:18:45.0000] <jwalden>
the problem is that single method doesn't also contemplate various access checks needed to safely do/not do the mutation

[16:19:59.0000] <gsnedders>
Of stuff like circular protos, or?

[16:21:08.0000] <gsnedders>
(Or stuff like cross-context?)

[16:21:15.0000] <jwalden>
no, the central method does that

[16:21:38.0000] <jwalden>
cross-context is the issue

[16:21:43.0000] <jwalden>
cross-global object more precisely

[16:22:09.0000] <gsnedders>
Ah. I believe we allow cross-context stuff, but any access will throw.

[16:22:10.0000] <jwalden>
with the current magic property mechanism, it executes in the context of the object where the "property"'s being set

[16:22:14.0000] <jwalden>
with accessors, not the case

[16:22:59.0000] <jwalden>
also there's extra complexity for things like proxies -- Proxy.create(...).__proto__ will never hit the current mechanism, because it'll hit a getPropertyDescriptor trap or whatever, which can only expose accessors or data properties

[16:23:11.0000] <jwalden>
so an accessor has to tiptoe a little more

[16:23:19.0000] <gsnedders>
Yeah, not having implemented that yet probably helps :)

[16:23:34.0000] <jwalden>
likely

[16:28:09.0000] <gsnedders>
Also: reading up stuff I'd starred on es5-discuss is scary. Stuff like Function.caller not throwing despite being [[Writable]]: false in strict mode in Carakan.


2012-06-30
[17:30:36.0000] <jwalden>
fun.{caller,length} and various others are other instances of the same magical-data-property sadness, fwiw

[17:31:13.0000] <jwalden>
there used to be some for various instance properties of RegExps, and Strings, but I converted them into actual data properties awhile back with some effort

[17:31:24.0000] <jwalden>
much much less pain now from them

[19:11:50.0000] <MikeSmith>
Hixie:

[19:11:52.0000] <MikeSmith>
[[

[19:12:02.0000] <MikeSmith>
Currently you need a DOCTYPE, a character encoding declaration, a title,

[19:12:03.0000] <MikeSmith>
and some content.

[19:12:04.0000] <MikeSmith>
]]

[19:12:31.0000] <MikeSmith>
since when has the spec required some content?

[00:39:00.0000] <annevk>
MikeSmith: how is content defiend?

[00:39:03.0000] <annevk>
defined*

[00:40:05.0000] <MikeSmith>
annevk: dunno but I guess I assumed it means the body has to have some non-empty content

[00:40:42.0000] <MikeSmith>
regardless I can't find such a requirement in the spec

[00:41:18.0000] <MikeSmith>
(the context of me wondering about it is a recent message from Hixie to the whatwg list)

[00:42:48.0000] <MikeSmith>
annevk: in other news, what the hell is dude going on about in https://www.w3.org/Bugs/Public/show_bug.cgi?id=17659

[00:43:07.0000] <MikeSmith>
"XML lacks native hypermedia affordances, which makes attainment of it's #1 goal impossible"

[00:43:41.0000] <annevk>
I like it

[00:43:48.0000] <MikeSmith>
"seven hypermedia "atoms" which can be recombined, six of which are tried and true, the seventh which will hopefully become so"

[00:44:15.0000] <annevk>
sounds like he wants xml:href, but maybe he's trying to become President of the US instead via an elaborate workaround

[00:44:23.0000] <MikeSmith>
hahaha

[00:44:40.0000] <MikeSmith>
annevk: OK I guess I should re-assign that bug to you

[00:44:40.0000] <benvie>
lord of rings

[00:46:22.0000] <MikeSmith>
or I think I'll post a comment "Marking this as invalid because it lacks mention of RDF."

[00:47:57.0000] <MikeSmith>
btw I wonder if anybody knows how to get the whatwg mailing-list server to add a Archived-At header

[00:49:05.0000] <MikeSmith>
for e.g., http://www.w3.org/mid/Pine.LNX.4.64.1206292028360.30734⊙pdc

[00:49:37.0000] <annevk>
MikeSmith: haha

[00:50:12.0000] <annevk>
MikeSmith: the software is from DreamHost

[00:50:20.0000] <MikeSmith>
oh

[00:50:33.0000] <annevk>
or well, they provide it I think

[00:50:45.0000] <MikeSmith>
it's mailman, right?

[00:51:00.0000] <annevk>
yup

[00:52:24.0000] <MikeSmith>
google says mailman v3 apparently has some support for it

[00:52:26.0000] <annevk>
MikeSmith: found http://wiki.list.org/display/DEV/Stable+URLs from 2009

[00:52:34.0000] <MikeSmith>
yeah

[00:52:41.0000] <MikeSmith>
I think they've since added it

[00:56:10.0000] <annevk>
there's some discussion about this every now and then

[00:56:19.0000] <annevk>
I think Philip` had some notes too

[00:56:25.0000] <MikeSmith>
ok

[00:56:29.0000] <annevk>
but I think our main bottleneck is DreamHost

[00:57:38.0000] <MikeSmith>
could solve that by changing to a VM hosting service where you have root

[00:59:17.0000] <annevk>
http://wiki.dreamhost.com/Discussion_Lists

[00:59:39.0000] <annevk>
well they'd prolly allow you to run your own software

[00:59:51.0000] <annevk>
I just don't think we have anyone who wants to maintain that

[01:01:25.0000] <annevk>
anyone here with an account on that wiki? could add the request to the talk page

[01:02:29.0000] <Hixie>
MikeSmith: there's a should or something somewhere, look for something like "palpable content"

[01:02:39.0000] <MikeSmith>
ah

[01:02:43.0000] <MikeSmith>
Hixie: OK, thanks

[01:05:18.0000] <MikeSmith>
me finds "Conformance checkers are encouraged to provide a mechanism for authors to find elements that fail to fulfill this requirement, as an authoring aid."

[01:05:29.0000] <MikeSmith>
will open a validator bug for adding that

[02:43:51.0000] <Ms2ger>
Oh look, unprefixed IDB

[04:54:15.0000] <sarspazam>
i really do <3 normalise css

[06:11:21.0000] <tomasf>
does anyone actually use chunk-extension in chunked transfer encoding for anything? if so, what?

[06:11:22.0000] <tomasf>
(;key=value;foo=bar after hexadecimal chunk length, before CRLF)

[12:13:14.0000] <Velmont>
[14:16] <Ms2ger> jgraham / zcorpan: any of you who feels like explaining http://dvcs.w3.org/hg/webapps/file/a38857de5129/Workers/tests/submissions/Opera/constructors/Worker/004.html to me? :)

[12:13:20.0000] <Velmont>
[14:21] <jgraham> Really, putting "author Odin Hørthe Omdal <odinho⊙oc>" on the display of a file he never touched is just silly

[12:14:25.0000] <Velmont>
jgraham: Yeah, it's just more Mercurial pecuilar "features". That one just says I was the last to touch the entire repository. So it says odinho at everything...

[12:35:35.0000] <Ms2ger>
Velmont, I bet it says Ms2ger now

[12:40:06.0000] <Velmont>
Ms2ger: Not that link, it never will, because it's not at tip.

[13:54:47.0000] <jgraham>
Yeah, I'm going with "bug", although I suppose the hgweb would argue "feature"

[13:54:50.0000] <jgraham>
+peopel

[14:09:22.0000] <GPHemsley>
TabAtkins_: Where is the work you're doing on color? Is it available somewhere?

[14:11:30.0000] <annevk>
hmm

[14:11:39.0000] <annevk>
www-style is about a thousand emails a month

[14:11:51.0000] <annevk>
did they really think discussing Fullscreen there was a great idea?

[14:12:19.0000] <annevk>
aahhh great

[14:12:26.0000] <annevk>
the editor's draft suggests whatwg⊙wo

[14:49:12.0000] <gsnedders>
annevk: whatwg is more emails, though!

